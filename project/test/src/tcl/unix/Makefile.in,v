head	1.7;
access;
symbols
	sid-snapshot-20180601:1.7
	sid-snapshot-20180501:1.7
	sid-snapshot-20180401:1.7
	sid-snapshot-20180301:1.7
	sid-snapshot-20180201:1.7
	sid-snapshot-20180101:1.7
	sid-snapshot-20171201:1.7
	sid-snapshot-20171101:1.7
	sid-snapshot-20171001:1.7
	sid-snapshot-20170901:1.7
	sid-snapshot-20170801:1.7
	sid-snapshot-20170701:1.7
	sid-snapshot-20170601:1.7
	sid-snapshot-20170501:1.7
	sid-snapshot-20170401:1.7
	sid-snapshot-20170301:1.7
	sid-snapshot-20170201:1.7
	sid-snapshot-20170101:1.7
	sid-snapshot-20161201:1.7
	sid-snapshot-20161101:1.7
	sid-snapshot-20160901:1.7
	sid-snapshot-20160801:1.7
	sid-snapshot-20160701:1.7
	sid-snapshot-20160601:1.7
	sid-snapshot-20160501:1.7
	sid-snapshot-20160401:1.7
	sid-snapshot-20160301:1.7
	sid-snapshot-20160201:1.7
	sid-snapshot-20160101:1.7
	sid-snapshot-20151201:1.7
	sid-snapshot-20151101:1.7
	sid-snapshot-20151001:1.7
	sid-snapshot-20150901:1.7
	sid-snapshot-20150801:1.7
	sid-snapshot-20150701:1.7
	sid-snapshot-20150601:1.7
	sid-snapshot-20150501:1.7
	sid-snapshot-20150401:1.7
	sid-snapshot-20150301:1.7
	sid-snapshot-20150201:1.7
	sid-snapshot-20150101:1.7
	sid-snapshot-20141201:1.7
	sid-snapshot-20141101:1.7
	sid-snapshot-20141001:1.7
	sid-snapshot-20140901:1.7
	sid-snapshot-20140801:1.7
	sid-snapshot-20140701:1.7
	sid-snapshot-20140601:1.7
	sid-snapshot-20140501:1.7
	sid-snapshot-20140401:1.7
	sid-snapshot-20140301:1.7
	sid-snapshot-20140201:1.7
	sid-snapshot-20140101:1.7
	sid-snapshot-20131201:1.7
	sid-snapshot-20131101:1.7
	sid-snapshot-20131001:1.7
	sid-snapshot-20130901:1.7
	sid-snapshot-20130801:1.7
	sid-snapshot-20130701:1.7
	sid-snapshot-20130601:1.7
	insight_7_6-2013-04-10-branchpoint:1.7
	gdb_7_6-branch:1.7.0.58
	sid-snapshot-20130501:1.7
	sid-snapshot-20130401:1.7
	sid-snapshot-20130301:1.7
	sid-snapshot-20130201:1.7
	sid-snapshot-20130101:1.7
	sid-snapshot-20121201:1.7
	sid-snapshot-20121101:1.7
	sid-snapshot-20121001:1.7
	sid-snapshot-20120901:1.7
	gdb_7_5-branch:1.7.0.56
	sid-snapshot-20120801:1.7
	sid-snapshot-20120701:1.7
	sid-snapshot-20120601:1.7
	sid-snapshot-20120501:1.7
	sid-snapshot-20120401:1.7
	gdb_7_4-branch:1.7.0.54
	sid-snapshot-20120301:1.7
	sid-snapshot-20120201:1.7
	sid-snapshot-20120101:1.7
	sid-snapshot-20111201:1.7
	sid-snapshot-20111101:1.7
	sid-snapshot-20111001:1.7
	sid-snapshot-20110901:1.7
	gdb_7_3-branch:1.7.0.52
	sid-snapshot-20110801:1.7
	sid-snapshot-20110701:1.7
	sid-snapshot-20110601:1.7
	sid-snapshot-20110501:1.7
	sid-snapshot-20110401:1.7
	sid-snapshot-20110301:1.7
	sid-snapshot-20110201:1.7
	sid-snapshot-20110101:1.7
	sid-snapshot-20101201:1.7
	sid-snapshot-20101101:1.7
	sid-snapshot-20101001:1.7
	sid-snapshot-20100901:1.7
	sid-snapshot-20100801:1.7
	sid-snapshot-20100701:1.7
	sid-snapshot-20100601:1.7
	sid-snapshot-20100501:1.7
	sid-snapshot-20100401:1.7
	sid-snapshot-20100301:1.7
	gdb_7_1-branch:1.7.0.50
	gdb_7_0-branch:1.7.0.48
	sid-snapshot-20100201:1.7
	sid-snapshot-20100101:1.7
	sid-snapshot-20091201:1.7
	sid-snapshot-20091101:1.7
	sid-snapshot-20091001:1.7
	arc-sim-20090309:1.7
	sid-snapshot-20090901:1.7
	sid-snapshot-20090801:1.7
	sid-snapshot-20090701:1.7
	sid-snapshot-20090601:1.7
	sid-snapshot-20090501:1.7
	kevinb-pre-tcl8_5_7_merge:1.7
	sid-snapshot-20090401:1.7
	arc-insight_6_8-branch:1.7.0.46
	arc-insight_6_8-branchpoint:1.7
	insight_6_8-branch:1.7.0.44
	insight_6_8-branchpoint:1.7
	sid-snapshot-20090301:1.7
	sid-snapshot-20090201:1.7
	sid-snapshot-20090101:1.7
	sid-snapshot-20081201:1.7
	sid-snapshot-20081101:1.7
	sid-snapshot-20081001:1.7
	sid-snapshot-20080901:1.7
	sid-snapshot-20080801:1.7
	sid-snapshot-20080701:1.7
	sid-snapshot-20080601:1.7
	sid-snapshot-20080501:1.7
	sid-snapshot-20080403:1.7
	sid-snapshot-20080401:1.7
	gdb_6_8-branch:1.7.0.42
	sid-snapshot-20080301:1.7
	sid-snapshot-20080201:1.7
	sid-snapshot-20080101:1.7
	sid-snapshot-20071201:1.7
	sid-snapshot-20071101:1.7
	sid-snapshot-20071001:1.7
	insight_6_6-20070208-release:1.7
	gdb_6_6-branch:1.7.0.40
	gdb_6_6-2006-11-15-branchpoint:1.7
	insight_6_5-20061003-release:1.7
	gdb_6_5-branch:1.7.0.38
	gdb_6_5-2006-05-14-branchpoint:1.7
	readline_5_1-import-branch:1.7.0.36
	readline_5_1-import-branchpoint:1.7
	gdb_6_4-branch:1.7.0.34
	gdb_6_4-2005-11-01-branchpoint:1.7
	msnyder-tracepoint-checkpoint-branch:1.7.0.32
	msnyder-tracepoint-checkpoint-branchpoint:1.7
	gdb_6_1-2004-04-05-release:1.7
	ezannoni_pie-20040323-branch:1.7.0.30
	ezannoni_pie-20040323-branchpoint:1.7
	cagney_tramp-20040321-mergepoint:1.7
	cagney_tramp-20040309-branch:1.7.0.28
	cagney_tramp-20040309-branchpoint:1.7
	gdb_6_1-branch:1.7.0.26
	gdb_6_1-2004-03-01-gmt-branchpoint:1.7
	drow-cplus-merge-20040208:1.7
	carlton_dictionary-20040126-merge:1.7
	drow-cplus-merge-20040113:1.7
	drow-cplus-merge-20031224:1.7
	drow-cplus-merge-20031220:1.7
	carlton_dictionary-20031215-merge:1.7
	drow-cplus-merge-20031214:1.7
	carlton-dictionary-20031111-merge:1.7
	gdb_6_0-2003-10-04-release:1.7
	carlton_dictionary-20030917-merge:1.7
	ezannoni_pie-20030916-branchpoint:1.7
	ezannoni_pie-20030916-branch:1.7.0.24
	cagney_x86i386-20030821-branch:1.7.0.22
	cagney_x86i386-20030821-branchpoint:1.7
	carlton_dictionary-20030805-merge:1.7
	carlton_dictionary-20030627-merge:1.7
	gdb_6_0-branch:1.7.0.20
	gdb_6_0-2003-06-23-branchpoint:1.7
	cagney_convert-20030606-branch:1.7.0.18
	cagney_convert-20030606-branchpoint:1.7
	cagney_writestrings-20030508-branch:1.7.0.16
	cagney_writestrings-20030508-branchpoint:1.7
	carlton_dictionary-20030523-merge:1.7
	cagney_fileio-20030521-branch:1.7.0.14
	cagney_fileio-20030521-branchpoint:1.7
	carlton_dictionary-20030430-merge:1.7
	carlton_dictionary-20030416-merge:1.7
	cagney_frameaddr-20030409-mergepoint:1.7
	cagney_frameaddr-20030403-branchpoint:1.7
	cagney_frameaddr-20030403-branch:1.7.0.12
	cagney_framebase-20030330-mergepoint:1.7
	cagney_framebase-20030326-branch:1.7.0.10
	cagney_framebase-20030326-branchpoint:1.7
	cagney_lazyid-20030317-branch:1.7.0.8
	cagney_lazyid-20030317-branchpoint:1.7
	offbyone-20030313-branch:1.7.0.6
	offbyone-20030313-branchpoint:1.7
	carlton_dictionary-20030305-merge:1.7
	cagney_offbyone-20030303-branch:1.7.0.4
	cagney_offbyone-20030303-branchpoint:1.7
	carlton_dictionary-20030207-merge:1.7
	interps-20030202-branch:1.7.0.2
	interps-20030202-branchpoint:1.7
	TCL8_4_1:1.1.1.6
	cagney-unwind-20030108-branch:1.6.0.2
	cagney-unwind-20030108-branchpoint:1.6
	carlton_dictionary-20021223-merge:1.6
	gdb_5_3-2002-12-12-release:1.4
	TCL_8_4_1:1.1.1.6
	carlton_dictionary-20021115-merge:1.5
	kseitz_interps-20021105-merge:1.5
	kseitz_interps-20021103-merge:1.5
	drow-cplus-merge-20021020:1.5
	drow-cplus-merge-20021025:1.5
	carlton_dictionary-20021025-merge:1.5
	carlton_dictionary-20021011-merge:1.5
	drow-cplus-branch:1.5.0.4
	drow-cplus-branchpoint:1.5
	kseitz_interps-20020930-merge:1.5
	carlton_dictionary-20020927-merge:1.5
	tcltk840-20020924-branch:1.5.0.2
	tcltk840-20020924-branchpoint:1.5
	TK_8_4_0:1.1.1.4
	TCL_8_4_0:1.1.1.5
	carlton_dictionary-branch:1.4.0.16
	carlton_dictionary-20020920-branchpoint:1.4
	sid-20020905-branchpoint:1.4
	sid-20020905-branch:1.4.0.14
	gdb_5_3-branch:1.4.0.12
	gdb_5_3-2002-09-04-branchpoint:1.4
	kseitz_interps-20020829-merge:1.4
	cagney_sysregs-20020825-branch:1.4.0.10
	cagney_sysregs-20020825-branchpoint:1.4
	readline_4_3-import-branch:1.4.0.8
	readline_4_3-import-branchpoint:1.4
	gdb_5_2_1-2002-07-23-release:1.4
	kseitz_interps-20020528-branch:1.4.0.6
	kseitz_interps-20020528-branchpoint:1.4
	cagney_regbuf-20020515-branch:1.4.0.4
	cagney_regbuf-20020515-branchpoint:1.4
	gdb_5_2-2002-04-29-release:1.4
	gdb_5_2-branch:1.4.0.2
	gdb_5_2-2002-03-03-branchpoint:1.4
	gdb_5_1_1-2002-01-24-release:1.1.1.1
	cygnus_cvs_20020108_pre:1.3
	gdb_5_1_0_1-2002-01-03-branch:1.1.1.1.0.8
	gdb_5_1_0_1-2002-01-03-branchpoint:1.1.1.1
	gdb_5_1-2001-11-21-release:1.1.1.1
	gdb_s390-2001-09-26-branch:1.1.1.1.0.6
	gdb_s390-2001-09-26-branchpoint:1.1.1.1
	TCL_8_3:1.1.1.2
	NET:1.1.1
	gdb_5_1-2001-07-29-branch:1.1.1.1.0.4
	gdb_5_1-2001-07-29-branchpoint:1.1.1.1
	insight-precleanup-2001-01-01:1.1.1.1
	gdb_5_0-2000-05-19-release:1.1.1.1
	gdb_4_18_2-2000-05-18-release:1.1.1.1
	gdb_4_95_1-2000-05-11-snapshot:1.1.1.1
	gdb_4_95_0-2000-04-27-snapshot:1.1.1.1
	gdb_5_0-2000-04-10-branch:1.1.1.1.0.2
	gdb_5_0-2000-04-10-branchpoint:1.1.1.1
	repo-unification-2000-02-06:1.1.1.1
	dejagnu-2000-02-04:1.1.1.1
	dejagnu-2000-01-31:1.1.1.1
	dejagnu-2000-01-24:1.1.1.1
	dejagnu-2000-01-17:1.1.1.1
	dejagnu-2000-01-10:1.1.1.1
	dejagnu-2000-01-04:1.1.1.1
	dejagnu-1999-12-21:1.1.1.1
	dejagnu-1999-12-13:1.1.1.1
	dejagnu-1999-12-07:1.1.1.1
	dejagnu-1999-12-06:1.1.1.1
	dejagnu-1999-11-15:1.1.1.1
	dejagnu-1999-11-08:1.1.1.1
	SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.7
date	2003.01.21.19.40.18;	author hunt;	state Exp;
branches;
next	1.6;

1.6
date	2002.11.26.19.48.05;	author hunt;	state Exp;
branches;
next	1.5;

1.5
date	2002.09.24.18.37.09;	author kseitz;	state Exp;
branches
	1.5.2.1
	1.5.4.1;
next	1.4;

1.4
date	2002.01.10.20.17.57;	author kseitz;	state Exp;
branches
	1.4.16.1;
next	1.3;

1.3
date	2001.09.18.21.11.11;	author irox;	state Exp;
branches;
next	1.2;

1.2
date	2001.09.09.23.56.09;	author irox;	state Exp;
branches;
next	1.1;

1.1
date	99.11.09.01.28.44;	author jsm;	state Exp;
branches
	1.1.1.1;
next	;

1.5.2.1
date	2002.09.27.21.49.13;	author kseitz;	state Exp;
branches;
next	;

1.5.4.1
date	2003.12.14.20.28.51;	author drow;	state Exp;
branches;
next	;

1.4.16.1
date	2002.12.23.19.40.48;	author carlton;	state Exp;
branches;
next	1.4.16.2;

1.4.16.2
date	2003.02.07.19.18.21;	author carlton;	state Exp;
branches;
next	;

1.1.1.1
date	99.11.09.01.28.44;	author jsm;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2001.09.09.22.40.59;	author irox;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2002.09.24.19.55.50;	author kseitz;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2002.09.24.20.24.24;	author kseitz;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2002.09.24.22.00.49;	author kseitz;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	2002.11.26.20.00.02;	author hunt;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Updated to tcl 8.4.1
@
text
@#
# This file is a Makefile for Tcl.  If it has the name "Makefile.in"
# then it is a template for a Makefile;  to generate the actual Makefile,
# run "./configure", which is a configuration script generated by the
# "autoconf" program (constructs like "@@foo@@" will get replaced in the
# actual Makefile.
#
# RCS: @@(#) $Id: Makefile.in,v 1.119 2002/10/18 22:59:54 hobbs Exp $

VERSION 		= @@TCL_VERSION@@
MAJOR_VERSION		= @@TCL_MAJOR_VERSION@@
MINOR_VERSION		= @@TCL_MINOR_VERSION@@
PATCH_LEVEL		= @@TCL_PATCH_LEVEL@@

#----------------------------------------------------------------
# Things you can change to personalize the Makefile for your own
# site (you can make these changes in either Makefile.in or
# Makefile, but changes to Makefile will get lost if you re-run
# the configuration script).
#----------------------------------------------------------------

# Default top-level directories in which to install architecture-
# specific files (exec_prefix) and machine-independent files such
# as scripts (prefix).  The values specified here may be overridden
# at configure-time with the --exec-prefix and --prefix options
# to the "configure" script.  The *dir vars are standard configure
# substitutions that are based off prefix and exec_prefix.

prefix			= @@prefix@@
exec_prefix		= @@exec_prefix@@
bindir			= @@bindir@@
libdir			= @@libdir@@
includedir		= @@includedir@@
mandir			= @@mandir@@

# The following definition can be set to non-null for special systems
# like AFS with replication.  It allows the pathnames used for installation
# to be different than those used for actually reference files at
# run-time.  INSTALL_ROOT is prepended to $prefix and $exec_prefix
# when installing files.
INSTALL_ROOT		=

# Path for the platform independent Tcl scripting libraries:
# REDHAT LOCAL
#TCL_LIBRARY		= $(prefix)/lib/tcl$(VERSION)
TCL_LIBRARY =	@@datadir@@/tcl$(VERSION)
# END REDHAT LOCAL

# Path to use at runtime to refer to LIB_INSTALL_DIR:
LIB_RUNTIME_DIR		= $(libdir)

# Directory in which to install the program tclsh:
BIN_INSTALL_DIR		= $(INSTALL_ROOT)$(bindir)

# Directory in which to install libtcl.so or libtcl.a:
LIB_INSTALL_DIR		= $(INSTALL_ROOT)$(libdir)

# Path name to use when installing library scripts.
SCRIPT_INSTALL_DIR	= $(INSTALL_ROOT)$(TCL_LIBRARY)

# Directory in which to install the include file tcl.h:
INCLUDE_INSTALL_DIR	= $(INSTALL_ROOT)$(includedir)

# Top-level directory in which to install manual entries:
MAN_INSTALL_DIR		= $(INSTALL_ROOT)$(mandir)

# Directory in which to install manual entry for tclsh:
MAN1_INSTALL_DIR	= $(MAN_INSTALL_DIR)/man1

# Directory in which to install manual entries for Tcl's C library
# procedures:
MAN3_INSTALL_DIR	= $(MAN_INSTALL_DIR)/man3

# Directory in which to install manual entries for the built-in
# Tcl commands:
MANN_INSTALL_DIR	= $(MAN_INSTALL_DIR)/mann

# Package search path.
TCL_PACKAGE_PATH	= @@TCL_PACKAGE_PATH@@

# Libraries built with optimization switches have this additional extension
TCL_DBGX		= @@TCL_DBGX@@

# warning flags
CFLAGS_WARNING		= @@CFLAGS_WARNING@@

# The default switches for optimization or debugging
CFLAGS_DEBUG		= @@CFLAGS_DEBUG@@
CFLAGS_OPTIMIZE		= @@CFLAGS_OPTIMIZE@@

# To change the compiler switches, for example to change from optimization to
# debugging symbols, change the following line:
#CFLAGS			= $(CFLAGS_DEBUG)
#CFLAGS			= $(CFLAGS_OPTIMIZE)
#CFLAGS			= $(CFLAGS_DEBUG) $(CFLAGS_OPTIMIZE)
CFLAGS			= @@CFLAGS@@ @@CFLAGS_DEFAULT@@

# Flags to pass to the linker
LDFLAGS_DEBUG		= @@LDFLAGS_DEBUG@@
LDFLAGS_OPTIMIZE	= @@LDFLAGS_OPTIMIZE@@
LDFLAGS			= @@LDFLAGS@@ @@LDFLAGS_DEFAULT@@

# To disable ANSI-C procedure prototypes reverse the comment characters
# on the following lines:
PROTO_FLAGS		=
#PROTO_FLAGS		= -DNO_PROTOTYPE

# Mathematical functions like sin and atan2 are enabled for expressions
# by default.  To disable them, reverse the comment characters on the
# following pairs of lines:
MATH_FLAGS		=
#MATH_FLAGS		= -DTCL_NO_MATH
MATH_LIBS		= @@MATH_LIBS@@
#MATH_LIBS		=

# If you use the setenv, putenv, or unsetenv procedures to modify
# environment variables in your application and you'd like those
# modifications to appear in the "env" Tcl variable, switch the
# comments on the two lines below so that Tcl provides these
# procedures instead of your standard C library.

ENV_FLAGS =
#ENV_FLAGS = -DTclSetEnv=setenv -DTcl_PutEnv=putenv -DTclUnsetEnv=unsetenv

# To compile for non-UNIX systems (so that only the non-UNIX-specific
# commands are available), reverse the comment characters on the
# following pairs of lines.  In addition, you'll have to provide your
# own replacement for the "panic" procedure (see panic.c for what
# the current one does).
GENERIC_FLAGS =
#GENERIC_FLAGS = -DTCL_GENERIC_ONLY
UNIX_OBJS = tclUnixChan.o tclUnixEvent.o tclUnixFCmd.o \
	tclUnixFile.o tclUnixPipe.o tclUnixSock.o \
	tclUnixTime.o tclUnixInit.o tclUnixThrd.o 
#UNIX_OBJS =
NOTIFY_OBJS = tclUnixNotfy.o
#NOTIFY_OBJS =

# To enable memory debugging reverse the comment characters on the following
# lines or call configure with --enable-symbols=mem
# Warning:  if you enable memory debugging, you must do it *everywhere*,
# including all the code that calls Tcl, and you must use ckalloc and
# ckfree everywhere instead of malloc and free.
MEM_DEBUG_FLAGS		=
#MEM_DEBUG_FLAGS	= -DTCL_MEM_DEBUG

TCL_STUB_LIB_FILE	= @@TCL_STUB_LIB_FILE@@
#TCL_STUB_LIB_FILE	= libtclstub.a

# Generic stub lib name used in rules that apply to tcl and tk
STUB_LIB_FILE		= ${TCL_STUB_LIB_FILE}

TCL_STUB_LIB_FLAG	= @@TCL_STUB_LIB_FLAG@@
#TCL_STUB_LIB_FLAG	= -ltclstub

# To enable compilation debugging reverse the comment characters on one
# of the following lines or call configure with --enable-symbols=compile
COMPILE_DEBUG_FLAGS	=
#COMPILE_DEBUG_FLAGS	= -DTCL_COMPILE_DEBUG -DTCL_COMPILE_STATS

# To compile without backward compatibility and deprecated code
# uncomment the following
NO_DEPRECATED_FLAGS	=
#NO_DEPRECATED_FLAGS	= -DTCL_NO_DEPRECATED

# Some versions of make, like SGI's, use the following variable to
# determine which shell to use for executing commands:
SHELL			= /bin/sh

# Tcl used to let the configure script choose which program to use
# for installing, but there are just too many different versions of
# "install" around;  better to use the install-sh script that comes
# with the distribution, which is slower but guaranteed to work.

INSTALL_STRIP_PROGRAM   = -s
INSTALL_STRIP_LIBRARY  = -S -S

INSTALL			= @@srcdir@@/install-sh -c
INSTALL_PROGRAM		= ${INSTALL}
INSTALL_LIBRARY		= ${INSTALL}
INSTALL_DATA		= ${INSTALL} -m 644

# TCL_EXE is the name of a tclsh executable that is available *BEFORE*
# running make for the first time. Certain build targets (make genstubs)
# need it to be available on the PATH. This executable should *NOT* be
# required just to do a normal build although it can be required to run
# make dist.
TCL_EXE			= tclsh

# The symbols below provide support for dynamic loading and shared
# libraries.  See configure.in for a description of what the
# symbols mean.  The values of the symbols are normally set by the
# configure script.  You shouldn't normally need to modify any of
# these definitions by hand.

STLIB_LD		= @@STLIB_LD@@
SHLIB_LD		= @@SHLIB_LD@@
SHLIB_CFLAGS		= @@SHLIB_CFLAGS@@
SHLIB_LD_FLAGS		= @@SHLIB_LD_FLAGS@@
SHLIB_LD_LIBS		= @@SHLIB_LD_LIBS@@
TCL_SHLIB_LD_EXTRAS	= @@TCL_SHLIB_LD_EXTRAS@@

SHLIB_SUFFIX		= @@SHLIB_SUFFIX@@
#SHLIB_SUFFIX		=

DLTEST_TARGETS		= dltest.marker

# Additional search flags needed to find the various shared libraries
# at run-time.  The first symbol is for use when creating a binary
# with cc, and the second is for use when running ld directly.
CC_SEARCH_FLAGS	= @@CC_SEARCH_FLAGS@@
LD_SEARCH_FLAGS	= @@LD_SEARCH_FLAGS@@

# The following symbol is defined to "$(DLTEST_TARGETS)" if dynamic
# loading is available;  this causes everything in the "dltest"
# subdirectory to be built when making "tcltest.  If dynamic loading
# isn't available, configure defines this symbol to an empty string,
# in which case the shared libraries aren't built.
BUILD_DLTEST		= @@BUILD_DLTEST@@
#BUILD_DLTEST		=

TCL_LIB_FILE		= @@TCL_LIB_FILE@@
#TCL_LIB_FILE		= libtcl.a

# Generic lib name used in rules that apply to tcl and tk
LIB_FILE		= ${TCL_LIB_FILE}

TCL_LIB_FLAG		= @@TCL_LIB_FLAG@@
#TCL_LIB_FLAG		= -ltcl

TCL_EXP_FILE		= @@TCL_EXP_FILE@@
TCL_BUILD_EXP_FILE	= @@TCL_BUILD_EXP_FILE@@

# support for embedded libraries on Darwin / Mac OS X
DYLIB_INSTALL_DIR	= ${LIB_RUNTIME_DIR}

#----------------------------------------------------------------
# The information below is modified by the configure script when
# Makefile is generated from Makefile.in.  You shouldn't normally
# modify any of this stuff by hand.
#----------------------------------------------------------------

COMPAT_OBJS		= @@LIBOBJS@@

AC_FLAGS		= @@EXTRA_CFLAGS@@ @@DEFS@@
AR			= @@AR@@
RANLIB			= @@RANLIB@@
SRC_DIR			= @@srcdir@@
TOP_DIR			= @@srcdir@@/..
GENERIC_DIR		= $(TOP_DIR)/generic
COMPAT_DIR		= $(TOP_DIR)/compat
TOOL_DIR		= $(TOP_DIR)/tools
UNIX_DIR		= $(TOP_DIR)/unix
MAC_OSX_DIR		= $(TOP_DIR)/macosx
# Must be absolute because of the cd dltest $(DLTEST_DIR)/configure below.
DLTEST_DIR		= @@TCL_SRC_DIR@@/unix/dltest
# Must be absolute to so the corresponding tcltest's tcl_library is absolute.
TCL_BUILDTIME_LIBRARY	= @@TCL_SRC_DIR@@/library

CC			= @@CC@@
#CC			= purify -best-effort @@CC@@ -DPURIFY

# Flags to be passed to mkLinks to control whether the manpages
# should be compressed and linked with softlinks
MKLINKS_FLAGS           = @@MKLINKS_FLAGS@@

#----------------------------------------------------------------
# The information below is usually usable as is.  The configure
# script won't modify it and it only exists to make working
# around selected rare system configurations easier.
#----------------------------------------------------------------

GDB			= gdb
DDD			= ddd

#----------------------------------------------------------------
# The information below should be usable as is.  The configure
# script won't modify it and you shouldn't need to modify it
# either.
#----------------------------------------------------------------


CC_SWITCHES = ${CFLAGS} ${CFLAGS_WARNING} ${SHLIB_CFLAGS} \
-I${GENERIC_DIR} -I${SRC_DIR} \
${AC_FLAGS} ${MATH_FLAGS} ${GENERIC_FLAGS} ${PROTO_FLAGS} ${MEM_DEBUG_FLAGS} \
${COMPILE_DEBUG_FLAGS} ${NO_DEPRECATED_FLAGS} ${ENV_FLAGS} \
-DTCL_SHLIB_EXT=\"${SHLIB_SUFFIX}\"

STUB_CC_SWITCHES = ${CFLAGS} ${CFLAGS_WARNING} ${SHLIB_CFLAGS} \
-I${GENERIC_DIR} -I${SRC_DIR} \
${AC_FLAGS} ${MATH_FLAGS} ${GENERIC_FLAGS} ${PROTO_FLAGS} ${MEM_DEBUG_FLAGS} \
${COMPILE_DEBUG_FLAGS} ${ENV_FLAGS} -DTCL_SHLIB_EXT=\"${SHLIB_SUFFIX}\"

LIBS		= @@DL_LIBS@@ @@LIBS@@ $(MATH_LIBS)

DEPEND_SWITCHES	= ${CFLAGS} -I${GENERIC_DIR} -I${SRC_DIR} \
${AC_FLAGS} ${MATH_FLAGS} \
${GENERIC_FLAGS} ${PROTO_FLAGS} ${MEM_DEBUG_FLAGS} \
-DTCL_SHLIB_EXT=\"${SHLIB_SUFFIX}\"

TCLSH_OBJS = tclAppInit.o

TCLTEST_OBJS = tclTestInit.o tclTest.o tclTestObj.o tclTestProcBodyObj.o \
	tclThreadTest.o	tclUnixTest.o

XTTEST_OBJS = xtTestInit.o tclTest.o tclTestObj.o tclTestProcBodyObj.o \
	tclThreadTest.o	tclUnixTest.o tclXtNotify.o tclXtTest.o 

GENERIC_OBJS = regcomp.o regexec.o regfree.o regerror.o tclAlloc.o \
	tclAsync.o tclBasic.o tclBinary.o \
	tclCkalloc.o tclClock.o tclCmdAH.o tclCmdIL.o tclCmdMZ.o \
	tclCompCmds.o tclCompExpr.o tclCompile.o tclDate.o tclEncoding.o \
	tclEnv.o tclEvent.o tclExecute.o tclFCmd.o tclFileName.o tclGet.o \
	tclHash.o tclHistory.o tclIndexObj.o tclInterp.o tclIO.o tclIOCmd.o \
	tclIOGT.o tclIOSock.o tclIOUtil.o tclLink.o tclListObj.o \
	tclLiteral.o tclLoad.o tclMain.o tclNamesp.o tclNotify.o \
	tclObj.o tclPanic.o tclParse.o tclParseExpr.o tclPipe.o \
	tclPkg.o tclPosixStr.o tclPreserve.o tclProc.o tclRegexp.o \
	tclResolve.o tclResult.o tclScan.o tclStringObj.o tclThread.o \
	 tclThreadAlloc.o tclThreadJoin.o tclStubInit.o tclStubLib.o \
	tclTimer.o tclUtf.o tclUtil.o tclVar.o

STUB_LIB_OBJS = tclStubLib.o ${COMPAT_OBJS}

OBJS = ${GENERIC_OBJS} ${UNIX_OBJS} ${NOTIFY_OBJS} ${COMPAT_OBJS} \
        @@DL_OBJS@@ @@PLAT_OBJS@@

TCL_DECLS = \
	$(GENERIC_DIR)/tcl.decls \
	$(GENERIC_DIR)/tclInt.decls

GENERIC_HDRS = \
	$(GENERIC_DIR)/tcl.h \
	$(GENERIC_DIR)/tclDecls.h \
	$(GENERIC_DIR)/tclInt.h \
	$(GENERIC_DIR)/tclIntDecls.h \
	$(GENERIC_DIR)/tclIntPlatDecls.h \
	$(GENERIC_DIR)/tclPatch.h \
	$(GENERIC_DIR)/tclPlatDecls.h \
	$(GENERIC_DIR)/tclPort.h \
	$(GENERIC_DIR)/tclRegexp.h

GENERIC_SRCS = \
	$(GENERIC_DIR)/regcomp.c \
	$(GENERIC_DIR)/regexec.c \
	$(GENERIC_DIR)/regfree.c \
	$(GENERIC_DIR)/regerror.c \
	$(GENERIC_DIR)/tclAlloc.c \
	$(GENERIC_DIR)/tclAsync.c \
	$(GENERIC_DIR)/tclBasic.c \
	$(GENERIC_DIR)/tclBinary.c \
	$(GENERIC_DIR)/tclCkalloc.c \
	$(GENERIC_DIR)/tclClock.c \
	$(GENERIC_DIR)/tclCmdAH.c \
	$(GENERIC_DIR)/tclCmdIL.c \
	$(GENERIC_DIR)/tclCmdMZ.c \
	$(GENERIC_DIR)/tclCompCmds.c \
	$(GENERIC_DIR)/tclCompExpr.c \
	$(GENERIC_DIR)/tclCompile.c \
	$(GENERIC_DIR)/tclDate.c \
	$(GENERIC_DIR)/tclEncoding.c \
	$(GENERIC_DIR)/tclEnv.c \
	$(GENERIC_DIR)/tclEvent.c \
	$(GENERIC_DIR)/tclExecute.c \
	$(GENERIC_DIR)/tclFCmd.c \
	$(GENERIC_DIR)/tclFileName.c \
	$(GENERIC_DIR)/tclGet.c \
	$(GENERIC_DIR)/tclHash.c \
	$(GENERIC_DIR)/tclHistory.c \
	$(GENERIC_DIR)/tclIndexObj.c \
	$(GENERIC_DIR)/tclInterp.c \
	$(GENERIC_DIR)/tclIO.c \
	$(GENERIC_DIR)/tclIOCmd.c \
	$(GENERIC_DIR)/tclIOGT.c \
	$(GENERIC_DIR)/tclIOSock.c \
	$(GENERIC_DIR)/tclIOUtil.c \
	$(GENERIC_DIR)/tclLink.c \
	$(GENERIC_DIR)/tclListObj.c \
	$(GENERIC_DIR)/tclLiteral.c \
	$(GENERIC_DIR)/tclLoad.c \
	$(GENERIC_DIR)/tclMain.c \
	$(GENERIC_DIR)/tclNamesp.c \
	$(GENERIC_DIR)/tclNotify.c \
	$(GENERIC_DIR)/tclObj.c \
        $(GENERIC_DIR)/tclParse.c \
        $(GENERIC_DIR)/tclParseExpr.c \
	$(GENERIC_DIR)/tclPipe.c \
	$(GENERIC_DIR)/tclPkg.c \
	$(GENERIC_DIR)/tclPosixStr.c \
	$(GENERIC_DIR)/tclPreserve.c \
	$(GENERIC_DIR)/tclProc.c \
	$(GENERIC_DIR)/tclRegexp.c \
	$(GENERIC_DIR)/tclResolve.c \
	$(GENERIC_DIR)/tclResult.c \
	$(GENERIC_DIR)/tclScan.c \
	$(GENERIC_DIR)/tclStubInit.c \
	$(GENERIC_DIR)/tclStubLib.c \
	$(GENERIC_DIR)/tclStringObj.c \
	$(GENERIC_DIR)/tclTest.c \
	$(GENERIC_DIR)/tclTestObj.c \
	$(GENERIC_DIR)/tclTestProcBodyObj.c \
	$(GENERIC_DIR)/tclThread.c \
	$(GENERIC_DIR)/tclThreadAlloc.c \
	$(GENERIC_DIR)/tclThreadJoin.c \
	$(GENERIC_DIR)/tclTimer.c \
	$(GENERIC_DIR)/tclUtil.c \
	$(GENERIC_DIR)/tclVar.c

STUB_SRCS = \
	$(GENERIC_DIR)/tclStubLib.c

UNIX_HDRS = \
	$(UNIX_DIR)/tclUnixPort.h

UNIX_SRCS = \
	$(UNIX_DIR)/tclAppInit.c \
	$(UNIX_DIR)/tclUnixChan.c \
	$(UNIX_DIR)/tclUnixEvent.c \
	$(UNIX_DIR)/tclUnixFCmd.c \
	$(UNIX_DIR)/tclUnixFile.c \
	$(UNIX_DIR)/tclUnixNotfy.c \
	$(UNIX_DIR)/tclUnixPipe.c \
	$(UNIX_DIR)/tclUnixSock.c \
	$(UNIX_DIR)/tclUnixTest.c \
	$(UNIX_DIR)/tclUnixThrd.c \
	$(UNIX_DIR)/tclUnixTime.c \
	$(UNIX_DIR)/tclUnixInit.c

DL_SRCS = \
	$(UNIX_DIR)/tclLoadAix.c \
	$(UNIX_DIR)/tclLoadAout.c \
	$(UNIX_DIR)/tclLoadDl.c \
	$(UNIX_DIR)/tclLoadDl2.c \
	$(UNIX_DIR)/tclLoadDld.c \
	$(UNIX_DIR)/tclLoadDyld.c \
	$(GENERIC_DIR)/tclLoadNone.c \
	$(UNIX_DIR)/tclLoadOSF.c \
	$(UNIX_DIR)/tclLoadShl.c

MAC_OSX_SRCS = \
	$(MAC_OSX_DIR)/tclMacOSXBundle.c

# Note: don't include DL_SRCS or MAC_OSX_SRCS in SRCS: most of those
# files won't compile on the current machine, and they will cause
# problems for things like "make depend".

SRCS = $(GENERIC_SRCS) $(UNIX_SRCS) $(STUB_SRCS)

all: binaries libraries doc

binaries: ${LIB_FILE} $(STUB_LIB_FILE) $(TCL_BUILD_EXP_FILE) tclsh

libraries:

doc:

# The following target is configured by autoconf to generate either
# a shared library or non-shared library for Tcl.
${LIB_FILE}: ${OBJS} ${STUB_LIB_FILE}
	rm -f $@@
	@@MAKE_LIB@@

${STUB_LIB_FILE}: ${STUB_LIB_OBJS}
	rm -f $@@
	@@MAKE_STUB_LIB@@

# Make target which outputs the list of the .o contained in the Tcl lib
# usefull to build a single big shared library containing Tcl and other
# extensions.  used for the Tcl Plugin.  -- dl
# The dependency on OBJS is not there because we just want the list
# of objects here, not actually building them
tclLibObjs:
	@@echo ${OBJS}
# This targets actually build the objects needed for the lib in the above
# case
objs: ${OBJS}


tclsh: ${TCLSH_OBJS} ${TCL_LIB_FILE}
	${CC} ${LDFLAGS} ${TCLSH_OBJS} @@TCL_BUILD_LIB_SPEC@@ ${LIBS} \
		${CC_SEARCH_FLAGS} -o tclsh

# Resetting the LIB_RUNTIME_DIR below is required so that
# the generated tcltest executable gets the build directory
# burned into its ld search path. This keeps tcltest from
# picking up an already installed version of the Tcl library.

tcltest: ${TCLTEST_OBJS} ${TCL_LIB_FILE} ${BUILD_DLTEST}
	$(MAKE) tcltest-real LIB_RUNTIME_DIR=`pwd`

tcltest-real:
	${CC} ${LDFLAGS} ${TCLTEST_OBJS} @@TCL_BUILD_LIB_SPEC@@ ${LIBS} \
		${CC_SEARCH_FLAGS} -o tcltest

# Note, in the target below TCL_LIBRARY needs to be set or else
# "make test" won't work in the case where the compilation directory
# isn't the same as the source directory.
# Specifying TESTFLAGS on the command line is the standard way to pass
# args to tcltest, ie:
#	% make test TESTFLAGS="-verbose bps -file fileName.test"

test: tcltest
	@@LD_LIBRARY_PATH_VAR@@=`pwd`:${@@LD_LIBRARY_PATH_VAR@@}; export @@LD_LIBRARY_PATH_VAR@@; \
	TCL_LIBRARY="${TCL_BUILDTIME_LIBRARY}"; export TCL_LIBRARY; \
	./tcltest $(TOP_DIR)/tests/all.tcl $(TESTFLAGS) $(TCLTESTARGS)

# Useful target to launch a built tcltest with the proper path,...
runtest: tcltest
	@@LD_LIBRARY_PATH_VAR@@=`pwd`:${@@LD_LIBRARY_PATH_VAR@@}; export @@LD_LIBRARY_PATH_VAR@@; \
	TCL_LIBRARY="${TCL_BUILDTIME_LIBRARY}"; export TCL_LIBRARY; \
	./tcltest

# Useful target for running the test suite with an unwritable current
# directory...
ro-test: tcltest
	@@LD_LIBRARY_PATH_VAR@@=`pwd`:${@@LD_LIBRARY_PATH_VAR@@}; export @@LD_LIBRARY_PATH_VAR@@; \
	TCL_LIBRARY="${TCL_BUILDTIME_LIBRARY}"; export TCL_LIBRARY; \
	echo 'exec chmod -w .;package require tcltest;tcltest::temporaryDirectory /tmp;source ../tests/all.tcl;exec chmod +w .' | ./tcltest

# This target can be used to run tclsh from the build directory
# via `make shell SCRIPT=/tmp/foo.tcl`
shell: tclsh
	@@@@LD_LIBRARY_PATH_VAR@@=`pwd`:${@@LD_LIBRARY_PATH_VAR@@}; export @@LD_LIBRARY_PATH_VAR@@; \
	TCL_LIBRARY="${TCL_BUILDTIME_LIBRARY}"; export TCL_LIBRARY; \
	./tclsh $(SCRIPT)

# This target can be used to run tclsh inside either gdb or insight
gdb: tclsh
	@@echo "set env @@LD_LIBRARY_PATH_VAR@@=`pwd`:${@@LD_LIBRARY_PATH_VAR@@}" > gdb.run
	@@echo "set env TCL_LIBRARY=${TCL_BUILDTIME_LIBRARY}" >> gdb.run
	$(GDB) ./tclsh --command=gdb.run
	rm gdb.run

# This target can be used to run tclsh inside ddd
ddd: tclsh
	@@echo "set env @@LD_LIBRARY_PATH_VAR@@=`pwd`:${@@LD_LIBRARY_PATH_VAR@@}" > gdb.run
	@@echo "set env TCL_LIBRARY=${TCL_BUILDTIME_LIBRARY}" >> gdb.run
	$(DDD) -command=gdb.run ./tclsh
	rm gdb.run

# The following target outputs the name of the top-level source directory
# for Tcl (it is used by Tk's configure script, for example).  The
# .NO_PARALLEL line is needed to avoid problems under Sun's "pmake".
# Note: this target is now obsolete (use the autoconf variable
# TCL_SRC_DIR from tclConfig.sh instead).

.NO_PARALLEL: topDirName
topDirName:
	@@cd $(TOP_DIR); pwd

# The following target generates the file generic/tclDate.c 
# from the yacc grammar found in generic/tclGetDate.y.  This is
# only run by hand as yacc is not available in all environments.
# The name of the .c file is different than the name of the .y file
# so that make doesn't try to automatically regenerate the .c file.

gendate:
	yacc -l $(GENERIC_DIR)/tclGetDate.y
	sed -e 's/yy/TclDate/g' -e '/^#include <values.h>/d' \
	    -e 's?SCCSID?RCS: @@(#) ?' \
	    -e '/#ifdef __STDC__/,/#endif/d' -e '/TclDateerrlab:/d' \
	    -e '/TclDatenewstate:/d' -e '/#pragma/d' \
	    -e '/#include <inttypes.h>/d' -e 's/const /CONST /g' \
	    <y.tab.c >$(GENERIC_DIR)/tclDate.c
	rm y.tab.c

# The following target generates the shared libraries in dltest/ that
# are used for testing;  they are included as part of the "tcltest"
# target (via the BUILD_DLTEST variable) if dynamic loading is supported
# on this platform. The Makefile in the dltest subdirectory creates
# the dltest.marker file in this directory after a successful build.

dltest.marker:
	cd dltest ; $(MAKE)

install: install-binaries install-libraries install-doc

install-strip:
	$(MAKE) install \
		INSTALL_PROGRAM="$(INSTALL_PROGRAM) ${INSTALL_STRIP_PROGRAM}" \
		INSTALL_LIBRARY="$(INSTALL_LIBRARY) ${INSTALL_STRIP_LIBRARY}"

# Note: before running ranlib below, must cd to target directory because
# some ranlibs write to current directory, and this might not always be
# possible (e.g. if installing as root).

install-binaries: binaries
	@@for i in $(LIB_INSTALL_DIR) $(BIN_INSTALL_DIR) ; \
	    do \
	    if [ ! -d $$i ] ; then \
		echo "Making directory $$i"; \
		mkdir -p $$i; \
		chmod 755 $$i; \
		else true; \
		fi; \
	    done;
	@@if test ! -x $(SRC_DIR)/install-sh; then \
	    chmod +x $(SRC_DIR)/install-sh; \
	    fi
	@@echo "Installing $(LIB_FILE) to $(LIB_INSTALL_DIR)/"
	@@@@INSTALL_LIB@@
	@@chmod 555 $(LIB_INSTALL_DIR)/$(LIB_FILE)
	@@if test "$(TCL_BUILD_EXP_FILE)" != ""; then \
	    echo "Installing $(TCL_EXP_FILE) to $(LIB_INSTALL_DIR)/"; \
	    $(INSTALL_DATA) $(TCL_BUILD_EXP_FILE) \
			$(LIB_INSTALL_DIR)/$(TCL_EXP_FILE); \
	    fi
	@@echo "Installing tclsh as $(BIN_INSTALL_DIR)/tclsh$(VERSION)"
	@@$(INSTALL_PROGRAM) tclsh $(BIN_INSTALL_DIR)/tclsh$(VERSION)
	@@echo "Installing tclConfig.sh to $(LIB_INSTALL_DIR)/"
	@@$(INSTALL_DATA) tclConfig.sh $(LIB_INSTALL_DIR)/tclConfig.sh
	@@if test "$(STUB_LIB_FILE)" != "" ; then \
	    echo "Installing $(STUB_LIB_FILE) to $(LIB_INSTALL_DIR)/"; \
	    @@INSTALL_STUB_LIB@@ ; \
	fi

install-libraries: libraries
	@@for i in $(INCLUDE_INSTALL_DIR) $(SCRIPT_INSTALL_DIR); \
	    do \
	    if [ ! -d $$i ] ; then \
		echo "Making directory $$i"; \
		mkdir -p $$i; \
		chmod 755 $$i; \
		else true; \
		fi; \
	    done;
	@@for i in http2.4 http1.0 opt0.4 encoding msgcat1.3 tcltest2.2; \
	    do \
	    if [ ! -d $(SCRIPT_INSTALL_DIR)/$$i ] ; then \
		echo "Making directory $(SCRIPT_INSTALL_DIR)/$$i"; \
		mkdir -p $(SCRIPT_INSTALL_DIR)/$$i; \
		chmod 755 $(SCRIPT_INSTALL_DIR)/$$i; \
		else true; \
		fi; \
	    done;
	@@if test ! -x $(SRC_DIR)/install-sh; then \
	    chmod +x $(SRC_DIR)/install-sh; \
	    fi
	@@echo "Installing header files";
	@@for i in $(GENERIC_DIR)/tcl.h $(GENERIC_DIR)/tclDecls.h \
		$(GENERIC_DIR)/tclPlatDecls.h ; \
	    do \
	    $(INSTALL_DATA) $$i $(INCLUDE_INSTALL_DIR); \
	    done;
	@@echo "Installing library files to $(SCRIPT_INSTALL_DIR)";
	@@for i in $(TOP_DIR)/library/*.tcl $(TOP_DIR)/library/tclIndex $(UNIX_DIR)/tclAppInit.c $(UNIX_DIR)/ldAix; \
	    do \
	    $(INSTALL_DATA) $$i $(SCRIPT_INSTALL_DIR); \
	    done;
	@@echo "Installing library http1.0 directory";
	@@for j in $(TOP_DIR)/library/http1.0/*.tcl ; \
	    do \
	    $(INSTALL_DATA) $$j $(SCRIPT_INSTALL_DIR)/http1.0; \
	    done;
	@@echo "Installing library http2.4 directory";
	@@for j in $(TOP_DIR)/library/http/*.tcl ; \
	    do \
	    $(INSTALL_DATA) $$j $(SCRIPT_INSTALL_DIR)/http2.4; \
	    done;
	@@echo "Installing library opt0.4 directory";
	@@for j in $(TOP_DIR)/library/opt/*.tcl ; \
	    do \
	    $(INSTALL_DATA) $$j $(SCRIPT_INSTALL_DIR)/opt0.4; \
	    done;
	@@echo "Installing library msgcat1.3 directory";
	@@for j in $(TOP_DIR)/library/msgcat/*.tcl ; \
	    do \
	    $(INSTALL_DATA) $$j $(SCRIPT_INSTALL_DIR)/msgcat1.3; \
	    done;
	@@echo "Installing library tcltest2.2 directory";
	@@for j in $(TOP_DIR)/library/tcltest/*.tcl ; \
	    do \
	    $(INSTALL_DATA) $$j $(SCRIPT_INSTALL_DIR)/tcltest2.2; \
	    done;
	@@echo "Installing library encoding directory";
	@@for i in $(TOP_DIR)/library/encoding/*.enc ; do \
		$(INSTALL_DATA) $$i $(SCRIPT_INSTALL_DIR)/encoding; \
	done;

install-doc: doc
	@@if test ! -x $(UNIX_DIR)/mkLinks; then \
	    chmod +x $(UNIX_DIR)/mkLinks; \
	    fi
	@@for i in $(MAN_INSTALL_DIR) $(MAN1_INSTALL_DIR) $(MAN3_INSTALL_DIR) $(MANN_INSTALL_DIR) ; \
	    do \
	    if [ ! -d $$i ] ; then \
		echo "Making directory $$i"; \
		mkdir -p $$i; \
		chmod 755 $$i; \
		else true; \
		fi; \
	    done;
	@@echo "Installing top-level (.1) docs";
	@@cd $(TOP_DIR)/doc; for i in *.1; \
	    do \
	    rm -f $(MAN1_INSTALL_DIR)/$$i; \
	    sed -e '/man\.macros/r man.macros' -e '/man\.macros/d' \
		    $$i > $(MAN1_INSTALL_DIR)/$$i; \
	    chmod 444 $(MAN1_INSTALL_DIR)/$$i; \
	    done;
	@@echo "Cross-linking top-level (.1) docs";
	@@$(UNIX_DIR)/mkLinks $(MKLINKS_FLAGS) $(MAN1_INSTALL_DIR)
	@@echo "Installing C API (.3) docs";
	@@cd $(TOP_DIR)/doc; for i in *.3; \
	    do \
	    rm -f $(MAN3_INSTALL_DIR)/$$i; \
	    sed -e '/man\.macros/r man.macros' -e '/man\.macros/d' \
		    $$i > $(MAN3_INSTALL_DIR)/$$i; \
	    chmod 444 $(MAN3_INSTALL_DIR)/$$i; \
	    done;
	@@echo "Cross-linking C API (.3) docs";
	@@$(UNIX_DIR)/mkLinks $(MKLINKS_FLAGS) $(MAN3_INSTALL_DIR)
	@@echo "Installing command (.n) docs";
	@@cd $(TOP_DIR)/doc; for i in *.n; \
	    do \
	    rm -f $(MANN_INSTALL_DIR)/$$i; \
	    sed -e '/man\.macros/r man.macros' -e '/man\.macros/d' \
		    $$i > $(MANN_INSTALL_DIR)/$$i; \
	    chmod 444 $(MANN_INSTALL_DIR)/$$i; \
	    done;
	@@echo "Cross-linking command (.n) docs";
	@@$(UNIX_DIR)/mkLinks $(MKLINKS_FLAGS) $(MANN_INSTALL_DIR)

Makefile: $(UNIX_DIR)/Makefile.in $(DLTEST_DIR)/Makefile.in
	$(SHELL) config.status

clean:
	rm -f *.a *.o libtcl* core errs *~ \#* TAGS *.E a.out \
		errors tclsh tcltest lib.exp
	cd dltest ; $(MAKE) clean

distclean: clean
	rm -rf Makefile config.status config.cache config.log tclConfig.sh \
		$(PACKAGE).* prototype
	cd dltest ; $(MAKE) distclean

depend:
	makedepend -- $(DEPEND_SWITCHES) -- $(SRCS)

# Test binaries.  The rules for tclTestInit.o and xtTestInit.o are
# complicated because they are compiled from tclAppInit.c.  Can't use
# the "-o" option because this doesn't work on some strange compilers
# (e.g. UnixWare).

tclTestInit.o: $(UNIX_DIR)/tclAppInit.c
	@@if test -f tclAppInit.o ; then \
	    rm -f tclAppInit.sav; \
	    mv tclAppInit.o tclAppInit.sav; \
	fi;
	$(CC) -c $(CC_SWITCHES) \
		-DTCL_BUILDTIME_LIBRARY="\"${TCL_BUILDTIME_LIBRARY}\"" \
		-DTCL_TEST $(UNIX_DIR)/tclAppInit.c
	rm -f tclTestInit.o
	mv tclAppInit.o tclTestInit.o
	@@if test -f tclAppInit.sav ; then \
	    mv tclAppInit.sav tclAppInit.o; \
	fi;

xtTestInit.o: $(UNIX_DIR)/tclAppInit.c
	@@if test -f tclAppInit.o ; then \
	    rm -f tclAppInit.sav; \
	    mv tclAppInit.o tclAppInit.sav; \
	fi;
	$(CC) -c $(CC_SWITCHES) \
		-DTCL_BUILDTIME_LIBRARY="\"${TCL_BUILDTIME_LIBRARY}\"" \
		-DTCL_TEST -DTCL_XT_TEST $(UNIX_DIR)/tclAppInit.c
	rm -f xtTestInit.o
	mv tclAppInit.o xtTestInit.o
	@@if test -f tclAppInit.sav ; then \
	    mv tclAppInit.sav tclAppInit.o; \
	fi;

# Object files used on all Unix systems:

REGHDRS=$(GENERIC_DIR)/regex.h $(GENERIC_DIR)/regguts.h \
		$(GENERIC_DIR)/regcustom.h
regcomp.o: $(REGHDRS) $(GENERIC_DIR)/regcomp.c $(GENERIC_DIR)/regc_lex.c \
		$(GENERIC_DIR)/regc_color.c $(GENERIC_DIR)/regc_locale.c \
		$(GENERIC_DIR)/regc_nfa.c $(GENERIC_DIR)/regc_cvec.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/regcomp.c

regexec.o: $(REGHDRS) $(GENERIC_DIR)/regexec.c $(GENERIC_DIR)/rege_dfa.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/regexec.c

regfree.o: $(REGHDRS) $(GENERIC_DIR)/regfree.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/regfree.c

regerror.o: $(REGHDRS) $(GENERIC_DIR)/regerrs.h $(GENERIC_DIR)/regerror.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/regerror.c

tclAppInit.o: $(UNIX_DIR)/tclAppInit.c
	$(CC) -c $(CC_SWITCHES) $(UNIX_DIR)/tclAppInit.c

# On unix we want to use the normal malloc/free implementation, so we
# specifically set the USE_TCLALLOC flag.

tclAlloc.o: $(GENERIC_DIR)/tclAlloc.c
	$(CC) -c $(CC_SWITCHES) -DUSE_TCLALLOC=0 $(GENERIC_DIR)/tclAlloc.c

tclAsync.o: $(GENERIC_DIR)/tclAsync.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclAsync.c

tclBasic.o: $(GENERIC_DIR)/tclBasic.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclBasic.c

tclBinary.o: $(GENERIC_DIR)/tclBinary.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclBinary.c

tclCkalloc.o: $(GENERIC_DIR)/tclCkalloc.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclCkalloc.c

tclClock.o: $(GENERIC_DIR)/tclClock.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclClock.c

tclCmdAH.o: $(GENERIC_DIR)/tclCmdAH.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclCmdAH.c

tclCmdIL.o: $(GENERIC_DIR)/tclCmdIL.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclCmdIL.c

tclCmdMZ.o: $(GENERIC_DIR)/tclCmdMZ.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclCmdMZ.c

tclDate.o: $(GENERIC_DIR)/tclDate.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclDate.c

tclCompCmds.o: $(GENERIC_DIR)/tclCompCmds.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclCompCmds.c

tclCompExpr.o: $(GENERIC_DIR)/tclCompExpr.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclCompExpr.c

tclCompile.o: $(GENERIC_DIR)/tclCompile.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclCompile.c

tclEncoding.o: $(GENERIC_DIR)/tclEncoding.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclEncoding.c

tclEnv.o: $(GENERIC_DIR)/tclEnv.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclEnv.c

tclEvent.o: $(GENERIC_DIR)/tclEvent.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclEvent.c

tclExecute.o: $(GENERIC_DIR)/tclExecute.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclExecute.c

tclFCmd.o: $(GENERIC_DIR)/tclFCmd.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclFCmd.c

tclFileName.o: $(GENERIC_DIR)/tclFileName.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclFileName.c

tclGet.o: $(GENERIC_DIR)/tclGet.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclGet.c

tclHash.o: $(GENERIC_DIR)/tclHash.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclHash.c

tclHistory.o: $(GENERIC_DIR)/tclHistory.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclHistory.c

tclIndexObj.o: $(GENERIC_DIR)/tclIndexObj.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclIndexObj.c

tclInterp.o: $(GENERIC_DIR)/tclInterp.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclInterp.c

tclIO.o: $(GENERIC_DIR)/tclIO.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclIO.c

tclIOCmd.o: $(GENERIC_DIR)/tclIOCmd.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclIOCmd.c

tclIOGT.o: $(GENERIC_DIR)/tclIOGT.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclIOGT.c

tclIOSock.o: $(GENERIC_DIR)/tclIOSock.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclIOSock.c

tclIOUtil.o: $(GENERIC_DIR)/tclIOUtil.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclIOUtil.c

tclLink.o: $(GENERIC_DIR)/tclLink.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclLink.c

tclListObj.o: $(GENERIC_DIR)/tclListObj.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclListObj.c

tclLiteral.o: $(GENERIC_DIR)/tclLiteral.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclLiteral.c

tclObj.o: $(GENERIC_DIR)/tclObj.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclObj.c

tclLoad.o: $(GENERIC_DIR)/tclLoad.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclLoad.c

tclLoadAix.o: $(UNIX_DIR)/tclLoadAix.c
	$(CC) -c $(CC_SWITCHES) $(UNIX_DIR)/tclLoadAix.c

tclLoadAout.o: $(UNIX_DIR)/tclLoadAout.c
	$(CC) -c $(CC_SWITCHES) $(UNIX_DIR)/tclLoadAout.c

tclLoadDl.o: $(UNIX_DIR)/tclLoadDl.c
	$(CC) -c $(CC_SWITCHES) $(UNIX_DIR)/tclLoadDl.c

tclLoadDl2.o: $(UNIX_DIR)/tclLoadDl2.c
	$(CC) -c $(CC_SWITCHES) $(UNIX_DIR)/tclLoadDl2.c

tclLoadDld.o: $(UNIX_DIR)/tclLoadDld.c
	$(CC) -c $(CC_SWITCHES) $(UNIX_DIR)/tclLoadDld.c

tclLoadDyld.o: $(UNIX_DIR)/tclLoadDyld.c
	$(CC) -c $(CC_SWITCHES) $(UNIX_DIR)/tclLoadDyld.c

tclLoadNone.o: $(GENERIC_DIR)/tclLoadNone.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclLoadNone.c

tclLoadOSF.o: $(UNIX_DIR)/tclLoadOSF.c
	$(CC) -c $(CC_SWITCHES) $(UNIX_DIR)/tclLoadOSF.c

tclLoadShl.o: $(UNIX_DIR)/tclLoadShl.c
	$(CC) -c $(CC_SWITCHES) $(UNIX_DIR)/tclLoadShl.c

tclMain.o: $(GENERIC_DIR)/tclMain.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclMain.c

tclNamesp.o: $(GENERIC_DIR)/tclNamesp.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclNamesp.c

tclNotify.o: $(GENERIC_DIR)/tclNotify.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclNotify.c

tclParse.o: $(GENERIC_DIR)/tclParse.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclParse.c

tclParseExpr.o: $(GENERIC_DIR)/tclParseExpr.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclParseExpr.c

tclPanic.o: $(GENERIC_DIR)/tclPanic.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclPanic.c

tclPipe.o: $(GENERIC_DIR)/tclPipe.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclPipe.c

tclPkg.o: $(GENERIC_DIR)/tclPkg.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclPkg.c

tclPosixStr.o: $(GENERIC_DIR)/tclPosixStr.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclPosixStr.c

tclPreserve.o: $(GENERIC_DIR)/tclPreserve.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclPreserve.c

tclProc.o: $(GENERIC_DIR)/tclProc.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclProc.c

tclRegexp.o: $(GENERIC_DIR)/tclRegexp.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclRegexp.c

tclResolve.o: $(GENERIC_DIR)/tclResolve.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclResolve.c

tclResult.o: $(GENERIC_DIR)/tclResult.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclResult.c

tclScan.o: $(GENERIC_DIR)/tclScan.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclScan.c

tclStringObj.o: $(GENERIC_DIR)/tclStringObj.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclStringObj.c

tclStubInit.o: $(GENERIC_DIR)/tclStubInit.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclStubInit.c

tclUtil.o: $(GENERIC_DIR)/tclUtil.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclUtil.c

tclUtf.o: $(GENERIC_DIR)/tclUtf.c $(GENERIC_DIR)/tclUniData.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclUtf.c

tclVar.o: $(GENERIC_DIR)/tclVar.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclVar.c

tclTest.o: $(GENERIC_DIR)/tclTest.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclTest.c

tclTestObj.o: $(GENERIC_DIR)/tclTestObj.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclTestObj.c

tclTestProcBodyObj.o: $(GENERIC_DIR)/tclTestProcBodyObj.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclTestProcBodyObj.c

tclTimer.o: $(GENERIC_DIR)/tclTimer.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclTimer.c

tclThread.o: $(GENERIC_DIR)/tclThread.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclThread.c

tclThreadAlloc.o: $(GENERIC_DIR)/tclThreadAlloc.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclThreadAlloc.c

tclThreadJoin.o: $(GENERIC_DIR)/tclThreadJoin.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclThreadJoin.c

tclThreadTest.o: $(GENERIC_DIR)/tclThreadTest.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclThreadTest.c

tclUnixChan.o: $(UNIX_DIR)/tclUnixChan.c
	$(CC) -c $(CC_SWITCHES) $(UNIX_DIR)/tclUnixChan.c

tclUnixEvent.o: $(UNIX_DIR)/tclUnixEvent.c
	$(CC) -c $(CC_SWITCHES) $(UNIX_DIR)/tclUnixEvent.c

tclUnixFCmd.o: $(UNIX_DIR)/tclUnixFCmd.c
	$(CC) -c $(CC_SWITCHES) $(UNIX_DIR)/tclUnixFCmd.c

tclUnixFile.o: $(UNIX_DIR)/tclUnixFile.c
	$(CC) -c $(CC_SWITCHES) $(UNIX_DIR)/tclUnixFile.c

tclUnixNotfy.o: $(UNIX_DIR)/tclUnixNotfy.c
	$(CC) -c $(CC_SWITCHES) $(UNIX_DIR)/tclUnixNotfy.c

tclUnixPipe.o: $(UNIX_DIR)/tclUnixPipe.c
	$(CC) -c $(CC_SWITCHES) $(UNIX_DIR)/tclUnixPipe.c

tclUnixSock.o: $(UNIX_DIR)/tclUnixSock.c
	$(CC) -c $(CC_SWITCHES) $(UNIX_DIR)/tclUnixSock.c

tclUnixTest.o: $(UNIX_DIR)/tclUnixTest.c
	$(CC) -c $(CC_SWITCHES) $(UNIX_DIR)/tclUnixTest.c

tclUnixThrd.o: $(UNIX_DIR)/tclUnixThrd.c
	$(CC) -c $(CC_SWITCHES) $(UNIX_DIR)/tclUnixThrd.c

tclUnixTime.o: $(UNIX_DIR)/tclUnixTime.c
	$(CC) -c $(CC_SWITCHES) $(UNIX_DIR)/tclUnixTime.c

# REDHAT LOCAL

# Don't burn a TCL_LIBRARY path into tclUnixInit.o.
# We need Tcl to be location independent and a compiled
# in path just masks problems with the search algo.

# FIXME: The TCL_PACKAGE_PATH is still compiled in,
# the only effect seems to be that the compiled in
# dir name appears on the auto_path after the tree
# has been moved.

# END REDHAT LOCAL

tclUnixInit.o: $(UNIX_DIR)/tclUnixInit.c $(GENERIC_DIR)/tclInitScript.h tclConfig.sh
	$(CC) -c $(CC_SWITCHES) -DTCL_LIBRARY=\"\" \
		-DTCL_PACKAGE_PATH="\"${TCL_PACKAGE_PATH}\"" \
		$(UNIX_DIR)/tclUnixInit.c

# This is the CFBundle interface.  It is only used on Mac OS X.
tclMacOSXBundle.o: $(MAC_OSX_DIR)/tclMacOSXBundle.c
	$(CC) -c $(CC_SWITCHES) $(MAC_OSX_DIR)/tclMacOSXBundle.c

# The following targets are not completely general.  They are provide
# purely for documentation purposes so people who are interested in
# the Xt based notifier can modify them to suit their own installation.

xttest:  ${XTTEST_OBJS} ${GENERIC_OBJS} ${UNIX_OBJS} ${COMPAT_OBJS} \
	@@DL_OBJS@@ ${BUILD_DLTEST}
	${CC} ${XTTEST_OBJS} ${GENERIC_OBJS} ${UNIX_OBJS} ${COMPAT_OBJS} \
		@@DL_OBJS@@ @@TCL_BUILD_LIB_SPEC@@ ${LIBS} \
		${CC_SEARCH_FLAGS} -L/usr/openwin/lib -lXt -o xttest

tclXtNotify.o: $(UNIX_DIR)/tclXtNotify.c
	$(CC) -c $(CC_SWITCHES) -I/usr/openwin/include \
		$(UNIX_DIR)/tclXtNotify.c

tclXtTest.o: $(UNIX_DIR)/tclXtTest.c
	$(CC) -c $(CC_SWITCHES) -I/usr/openwin/include \
		$(UNIX_DIR)/tclXtTest.c

# compat binaries, these must be compiled for use in a shared library
# even though they may be placed in a static executable or library.  Since
# they are included in both the tcl library and the stub library, they
# need to be relocatable.

fixstrtod.o: $(COMPAT_DIR)/fixstrtod.c
	$(CC) -c $(STUB_CC_SWITCHES) $(COMPAT_DIR)/fixstrtod.c

opendir.o: $(COMPAT_DIR)/opendir.c
	$(CC) -c $(STUB_CC_SWITCHES) $(COMPAT_DIR)/opendir.c

memcmp.o: $(COMPAT_DIR)/memcmp.c
	$(CC) -c $(STUB_CC_SWITCHES) $(COMPAT_DIR)/memcmp.c

strncasecmp.o: $(COMPAT_DIR)/strncasecmp.c
	$(CC) -c $(STUB_CC_SWITCHES) $(COMPAT_DIR)/strncasecmp.c

strstr.o: $(COMPAT_DIR)/strstr.c
	$(CC) -c $(STUB_CC_SWITCHES) $(COMPAT_DIR)/strstr.c

strtod.o: $(COMPAT_DIR)/strtod.c
	$(CC) -c $(STUB_CC_SWITCHES) $(COMPAT_DIR)/strtod.c

strtol.o: $(COMPAT_DIR)/strtol.c
	$(CC) -c $(STUB_CC_SWITCHES) $(COMPAT_DIR)/strtol.c

strtoll.o: $(COMPAT_DIR)/strtoll.c
	$(CC) -c $(STUB_CC_SWITCHES) $(COMPAT_DIR)/strtoll.c

strtoul.o: $(COMPAT_DIR)/strtoul.c
	$(CC) -c $(STUB_CC_SWITCHES) $(COMPAT_DIR)/strtoul.c

strtoull.o: $(COMPAT_DIR)/strtoull.c
	$(CC) -c $(STUB_CC_SWITCHES) $(COMPAT_DIR)/strtoull.c

tmpnam.o: $(COMPAT_DIR)/tmpnam.c
	$(CC) -c $(STUB_CC_SWITCHES) $(COMPAT_DIR)/tmpnam.c

waitpid.o: $(COMPAT_DIR)/waitpid.c
	$(CC) -c $(STUB_CC_SWITCHES) $(COMPAT_DIR)/waitpid.c

# Stub library binaries, these must be compiled for use in a shared library
# even though they will be placed in a static archive


tclStubLib.o: $(GENERIC_DIR)/tclStubLib.c
	$(CC) -c $(STUB_CC_SWITCHES) $(GENERIC_DIR)/tclStubLib.c

.c.o:
	$(CC) -c $(CC_SWITCHES) $<

#
# Target to regenerate header files and stub files from the *.decls tables.
#

$(GENERIC_DIR)/tclStubInit.c: $(GENERIC_DIR)/tcl.decls \
		$(GENERIC_DIR)/tclInt.decls
	@@echo "Warning: tclStubInit.c may be out of date."
	@@echo "Developers may want to run \"make genstubs\" to regenerate."
	@@echo "This warning can be safely ignored, do not report as a bug!"

genstubs:
	$(TCL_EXE) $(TOOL_DIR)/genStubs.tcl $(GENERIC_DIR) \
		$(GENERIC_DIR)/tcl.decls $(GENERIC_DIR)/tclInt.decls

#
# Target to check that all exported functions have an entry in the stubs
# tables.
#

checkstubs:
	-@@for i in `nm -p $(TCL_LIB_FILE) | awk '$$2 ~ /T/ { print $$3 }' \
		| sort -n`; do \
		match=0; \
		for j in $(TCL_DECLS); do \
		    if [ `grep -c $$i $$j` -gt 0 ]; then \
			match=1; \
		    fi; \
		done; \
		if [ $$match -eq 0 ]; then echo $$i; fi \
	done

#
# Target to check that all public APIs which are not command
# implementations have an entry in section three of the distributed
# manpages.
#

checkdoc:
	-@@for i in `nm -p $(TCL_LIB_FILE) | awk '$$3 ~ /Tcl_/ { print $$3 }' \
		| grep -v 'Cmd$$' | sort -n`; do \
		match=0; \
		for j in $(TOP_DIR)/doc/*.3; do \
		    if [ `grep '\-' $$j | grep -c $$i` -gt 0 ]; then \
			match=1; \
		    fi; \
		done; \
		if [ $$match -eq 0 ]; then echo $$i; fi \
	done

#
# Target to check for proper usage of UCHAR macro.
#

checkuchar:
	-egrep isalnum\|isalpha\|iscntrl\|isdigit\|islower\|isprint\|ispunct\|isspace\|isupper\|isxdigit\|toupper\|tolower $(SRCS) | grep -v UCHAR

#
# Target to make sure that only symbols with "Tcl" prefixes are
# exported.
#

checkexports: $(TCL_LIB_FILE)
	-nm -p $(TCL_LIB_FILE) | awk '$$2 ~ /[TDB]/ { print $$3 }' | sort -n | grep -v '^[Tt]cl'

#
# Target to create a Tcl RPM for Linux.  Requires that you be on a Linux
# system.
#

rpm: all /bin/rpm
	rm -f THIS.TCL.SPEC
	echo "%define _builddir `pwd`" > THIS.TCL.SPEC
	echo "%define _rpmdir `pwd`/RPMS" >> THIS.TCL.SPEC
	cat tcl.spec >> THIS.TCL.SPEC
	mkdir -p RPMS/i386
	rpm -bb THIS.TCL.SPEC
	mv RPMS/i386/*.rpm .
	rm -rf RPMS THIS.TCL.SPEC

mklinks:
	$(TCL_EXE) $(UNIX_DIR)/mkLinks.tcl \
		$(UNIX_DIR)/../doc/*.[13n] > $(UNIX_DIR)/mkLinks
	chmod +x $(UNIX_DIR)/mkLinks

#
# Target to create a proper Tcl distribution from information in the
# master source directory.  DISTDIR must be defined to indicate where
# to put the distribution.
#

DISTROOT = /tmp/dist
DISTNAME = tcl${VERSION}${PATCH_LEVEL}
ZIPNAME	 = tcl${MAJOR_VERSION}${MINOR_VERSION}${PATCH_LEVEL}-src.zip
DISTDIR	 = $(DISTROOT)/$(DISTNAME)
$(UNIX_DIR)/configure: $(UNIX_DIR)/configure.in
	autoconf $(UNIX_DIR)/configure.in > $(UNIX_DIR)/configure

dist: $(UNIX_DIR)/configure mklinks
	rm -rf $(DISTDIR)
	mkdir -p $(DISTDIR)/unix
	cp -p $(UNIX_DIR)/*.c $(UNIX_DIR)/*.h $(DISTDIR)/unix
	cp $(UNIX_DIR)/Makefile.in $(DISTDIR)/unix
	chmod 664 $(DISTDIR)/unix/Makefile.in
	cp $(UNIX_DIR)/configure $(UNIX_DIR)/configure.in \
		$(UNIX_DIR)/tcl.m4 $(UNIX_DIR)/aclocal.m4 \
		$(UNIX_DIR)/tclConfig.sh.in $(UNIX_DIR)/install-sh \
		$(UNIX_DIR)/README $(UNIX_DIR)/ldAix $(UNIX_DIR)/tcl.spec \
		$(UNIX_DIR)/mkLinks \
		$(DISTDIR)/unix
	chmod 775 $(DISTDIR)/unix/configure $(DISTDIR)/unix/configure.in
	chmod 775 $(DISTDIR)/unix/ldAix
	chmod +x $(DISTDIR)/unix/install-sh
	mkdir $(DISTDIR)/generic
	cp -p $(GENERIC_DIR)/*.c $(GENERIC_DIR)/*.h $(DISTDIR)/generic
	cp -p $(GENERIC_DIR)/*.decls $(DISTDIR)/generic
	cp -p $(GENERIC_DIR)/README $(DISTDIR)/generic
	cp -p $(GENERIC_DIR)/tclGetDate.y $(DISTDIR)/generic
	cp -p $(TOP_DIR)/changes $(TOP_DIR)/ChangeLog $(TOP_DIR)/README* \
		$(TOP_DIR)/ChangeLog.[12]??? $(TOP_DIR)/license.terms \
		$(DISTDIR)
	mkdir $(DISTDIR)/library
	cp -p $(TOP_DIR)/license.terms $(TOP_DIR)/library/*.tcl \
		$(TOP_DIR)/library/tclIndex $(DISTDIR)/library
	for i in http1.0 http opt msgcat reg dde tcltest; \
	    do \
		mkdir $(DISTDIR)/library/$$i ;\
		cp -p $(TOP_DIR)/library/$$i/*.tcl $(DISTDIR)/library/$$i; \
	    done;
	mkdir $(DISTDIR)/library/encoding
	cp -p $(TOP_DIR)/library/encoding/*.enc $(DISTDIR)/library/encoding
	mkdir $(DISTDIR)/doc
	cp -p $(TOP_DIR)/license.terms $(TOP_DIR)/doc/*.[13n] \
		$(TOP_DIR)/doc/man.macros $(DISTDIR)/doc
	mkdir $(DISTDIR)/compat
	cp -p $(TOP_DIR)/license.terms $(TOP_DIR)/compat/*.c \
		$(TOP_DIR)/compat/*.h $(TOP_DIR)/compat/README \
		$(DISTDIR)/compat
	mkdir $(DISTDIR)/tests
	cp -p $(TOP_DIR)/license.terms $(DISTDIR)/tests
	cp -p $(TOP_DIR)/tests/*.test $(TOP_DIR)/tests/README \
		$(TOP_DIR)/tests/httpd $(TOP_DIR)/tests/*.tcl \
		$(DISTDIR)/tests
	mkdir $(DISTDIR)/win
	cp $(TOP_DIR)/win/Makefile.in $(DISTDIR)/win
	cp $(TOP_DIR)/win/configure.in $(TOP_DIR)/win/configure \
		$(TOP_DIR)/win/tclConfig.sh.in \
		$(TOP_DIR)/win/tcl.m4 $(TOP_DIR)/win/aclocal.m4 \
		$(DISTDIR)/win
	cp -p $(TOP_DIR)/win/*.c $(TOP_DIR)/win/*.h \
		$(TOP_DIR)/win/*.ico $(TOP_DIR)/win/*.rc \
		$(DISTDIR)/win
	cp -p $(TOP_DIR)/win/*.bat $(DISTDIR)/win
	$(TCL_EXE) $(TOOL_DIR)/eolFix.tcl -crlf $(DISTDIR)/win/*.bat
	cp -p $(TOP_DIR)/win/makefile.* $(DISTDIR)/win
	$(TCL_EXE) $(TOOL_DIR)/eolFix.tcl -crlf $(DISTDIR)/win/makefile.*
	cp -p $(TOP_DIR)/win/rules.vc $(DISTDIR)/win
	$(TCL_EXE) $(TOOL_DIR)/eolFix.tcl -crlf $(DISTDIR)/win/rules.vc
	cp -p $(TOP_DIR)/win/coffbase.txt $(DISTDIR)/win
	$(TCL_EXE) $(TOOL_DIR)/eolFix.tcl -crlf $(DISTDIR)/win/coffbase.txt
	cp -p $(TOP_DIR)/win/tcl.hpj.in $(DISTDIR)/win
	$(TCL_EXE) $(TOOL_DIR)/eolFix.tcl -crlf $(DISTDIR)/win/tcl.hpj.in
	cp -p $(TOP_DIR)/win/tcl.ds* $(DISTDIR)/win
	$(TCL_EXE) $(TOOL_DIR)/eolFix.tcl -crlf $(DISTDIR)/win/tcl.ds*
	cp -p $(TOP_DIR)/win/README $(DISTDIR)/win
	cp -p $(TOP_DIR)/license.terms $(DISTDIR)/win
	mkdir $(DISTDIR)/mac
	cp -p $(TOP_DIR)/mac/tcl*.sea.hqx \
		$(TOP_DIR)/mac/*.c $(TOP_DIR)/mac/*.h $(TOP_DIR)/mac/*.r \
		$(DISTDIR)/mac
	cp -p $(TOP_DIR)/mac/porting.notes $(TOP_DIR)/mac/README $(DISTDIR)/mac
	cp -p $(TOP_DIR)/mac/*.pch $(DISTDIR)/mac
	cp -p $(TOP_DIR)/mac/*.doc $(TOP_DIR)/mac/*.html $(DISTDIR)/mac
	cp -p $(TOP_DIR)/license.terms $(DISTDIR)/mac
	mkdir $(DISTDIR)/macosx
	cp -p $(TOP_DIR)/macosx/Makefile \
		$(TOP_DIR)/macosx/*.c \
		$(DISTDIR)/macosx
	mkdir $(DISTDIR)/macosx/Tcl.pbproj
	cp -p $(TOP_DIR)/macosx/Tcl.pbproj/*.pbx* $(DISTDIR)/macosx/Tcl.pbproj
	mkdir $(DISTDIR)/unix/dltest
	cp -p $(UNIX_DIR)/dltest/*.c $(UNIX_DIR)/dltest/Makefile.in \
		$(UNIX_DIR)/dltest/README \
		$(DISTDIR)/unix/dltest
	mkdir $(DISTDIR)/tools
	cp -p $(TOP_DIR)/tools/Makefile.in $(TOP_DIR)/tools/README \
		$(TOP_DIR)/tools/configure $(TOP_DIR)/tools/configure.in \
		$(TOP_DIR)/tools/*.tcl $(TOP_DIR)/tools/man2tcl.c \
		$(TOP_DIR)/tools/tcl.wse.in $(TOP_DIR)/tools/*.bmp \
		$(TOP_DIR)/tools/tcl.hpj.in \
		$(DISTDIR)/tools
	$(TCL_EXE) $(TOOL_DIR)/eolFix.tcl -crlf $(DISTDIR)/tools/tcl.hpj.in \
		$(DISTDIR)/tools/tcl.wse.in

#
# The following target can only be used for non-patch releases.  Use
# the "allpatch" target below for patch releases.
#

alldist: dist
	rm -f $(DISTROOT)/$(DISTNAME)-src.tar.gz $(DISTROOT)/$(ZIPNAME)
	cd $(DISTROOT); tar cf $(DISTNAME)-src.tar $(DISTNAME); \
		gzip -9 $(DISTNAME)-src.tar; zip -qr8 $(ZIPNAME) $(DISTNAME)

#
# The target below is similar to "alldist" except it works for patch
# releases.  It is needed because patch releases are peculiar: the
# patch designation appears in the name of the compressed file
# (e.g. tcl8.0p1.tar.gz) but the extracted source directory doesn't
# include the patch designation (e.g. tcl8.0).
#

allpatch: dist
	rm -f $(DISTROOT)/$(DISTNAME)-src.tar.gz $(DISTROOT)/$(ZIPNAME)
	mv $(DISTROOT)/tcl${VERSION} $(DISTROOT)/old
	mv $(DISTROOT)/$(DISTNAME) $(DISTROOT)/tcl${VERSION}
	cd $(DISTROOT); tar cf $(DISTNAME)-src.tar tcl${VERSION}; \
		gzip -9 $(DISTNAME)-src.tar; zip -r8 $(ZIPNAME) tcl${VERSION}
	mv $(DISTROOT)/tcl${VERSION} $(DISTROOT)/$(DISTNAME)
	mv $(DISTROOT)/old $(DISTROOT)/tcl${VERSION}

#
# This target creates the HTML folder for Tcl & Tk and places it
# in DISTDIR/html.  It uses the tcltk-man2html.tcl tool from
# the Tcl group's tool workspace.  It depends on the Tcl & Tk being
# in directories called tcl8.3 & tk8.3 up two directories from the
# TOOL_DIR.
#

html: 
	$(TCL_EXE) $(TOOL_DIR)/tcltk-man2html.tcl --htmldir=$(DISTDIR)/html \
		--srcdir=$(TOP_DIR)/..

#
# Target to create a Macintosh version of the distribution.  This will
# do a normal distribution and then massage the output to prepare it
# for moving to the Mac platform.  This requires a few scripts and
# programs found only in the Tcl group's tool workspace.
#

macdist: dist machtml

machtml:
	rm -f $(DISTDIR)/mac/tclMacProjects.sea.hqx
	rm -rf $(DISTDIR)/doc
	$(TCL_EXE) $(TOOL_DIR)/cvtEOL.tcl $(DISTDIR)

#
# Targets to build Solaris package of the distribution for the current
# architecture.  To build stream packages for both sun4 and i86pc
# architectures: 
#
#   On the sun4 machine, execute the following:
#     make distclean; ./configure
#     make DISTDIR=<distdir> package
#
#   Once the build is complete, execute the following on the i86pc
#   machine:
#     make DISTDIR=<distdir> package-quick
#
# <distdir> is the absolute path to a directory where the build should
# take place.  These steps will generate the $(PACKAGE).sun4 and
# $(PACKAGE).i86pc stream packages.  It is important that the packages be
# built in this fashion in order to ensure that the architecture
# independent files are exactly the same, including timestamps, in
# both packages.
#

PACKAGE=SCRPtcl

package: dist package-config package-common package-binaries package-generate
package-quick: package-config package-binaries package-generate

#
# Configure for the current architecture in the dist directory.
#
package-config:
	mkdir -p $(DISTDIR)/unix/`arch`
	cd $(DISTDIR)/unix/`arch`; \
        ../configure --prefix=/opt/$(PACKAGE)/$(VERSION) \
		--exec_prefix=/opt/$(PACKAGE)/$(VERSION)/`arch` \
		--enable-shared
	mkdir -p $(DISTDIR)/$(PACKAGE)/$(VERSION)
	mkdir -p $(DISTDIR)/$(PACKAGE)/$(VERSION)/`arch`

#
# Build and install the architecture independent files in the dist directory.
#

package-common:
	cd $(DISTDIR)/unix/`arch`;\
	$(MAKE); \
	$(MAKE) prefix=$(DISTDIR)/$(PACKAGE)/$(VERSION) \
		exec_prefix=$(DISTDIR)/$(PACKAGE)/$(VERSION)/`arch` \
		install-libraries install-man
	mkdir -p $(DISTDIR)/$(PACKAGE)/$(VERSION)/bin
	sed -e "s/TCLVERSION/$(VERSION)/g" < $(UNIX_DIR)/tclsh.sh \
		> $(DISTDIR)/$(PACKAGE)/$(VERSION)/bin/tclsh$(VERSION)
	chmod 755 $(DISTDIR)/$(PACKAGE)/$(VERSION)/bin/tclsh$(VERSION)

#
# Build and install the architecture specific files in the dist directory.
#

package-binaries: 
	cd $(DISTDIR)/unix/`arch`; \
	$(MAKE); \
	$(MAKE) install-binaries prefix=$(DISTDIR)/$(PACKAGE)/$(VERSION) \
		exec_prefix=$(DISTDIR)/$(PACKAGE)/$(VERSION)/`arch`

#
# Generate a package from the installed files in the dist directory for the
# current architecture.
#

package-generate:
	pkgproto $(DISTDIR)/$(PACKAGE)/$(VERSION)/bin=bin \
		 $(DISTDIR)/$(PACKAGE)/$(VERSION)/include=include \
		 $(DISTDIR)/$(PACKAGE)/$(VERSION)/lib=lib \
		 $(DISTDIR)/$(PACKAGE)/$(VERSION)/man=man \
		 $(DISTDIR)/$(PACKAGE)/$(VERSION)/`arch`=`arch` \
	| $(TCL_EXE) $(UNIX_DIR)/mkProto.tcl \
		$(VERSION) $(UNIX_DIR) > prototype
	pkgmk -o -d . -f prototype -a `arch`
	pkgtrans -s . $(PACKAGE).`arch` $(PACKAGE)
	rm -rf $(PACKAGE)

# DO NOT DELETE THIS LINE -- make depend depends on it.
@


1.6
log
@touched all sources to ease next import
@
text
@d8 1
a8 1
# RCS: @@(#) $Id: Makefile.in,v 1.9.8.10 2001/07/12 19:08:19 mdejong Exp $
d11 3
d43 3
d47 1
d56 1
a56 1
LIB_INSTALL_DIR =	$(INSTALL_ROOT)@@libdir@@
a60 3
# Directory in which to install the program tclsh:
BIN_INSTALL_DIR =	$(INSTALL_ROOT)@@bindir@@

d62 1
a62 1
INCLUDE_INSTALL_DIR =	$(INSTALL_ROOT)@@includedir@@
d65 1
a65 1
MAN_INSTALL_DIR =	$(INSTALL_ROOT)@@mandir@@
d93 4
a96 6
#TCL_CFLAGS			= $(CFLAGS_DEBUG)
#TCL_CFLAGS			= $(CFLAGS_OPTIMIZE)
#TCL_CFLAGS			= $(CFLAGS_DEBUG) $(CFLAGS_OPTIMIZE)
TCL_CFLAGS			= @@CFLAGS_DEFAULT@@

CFLAGS = @@CFLAGS@@
d99 3
a101 3
LDFLAGS_DEBUG          = @@LDFLAGS_DEBUG@@
LDFLAGS_OPTIMIZE       = @@LDFLAGS_OPTIMIZE@@
LDFLAGS                        = @@LDFLAGS@@ @@LDFLAGS_DEFAULT@@
d132 1
a132 1
UNIX_OBJS = tclMtherr.o tclUnixChan.o tclUnixEvent.o tclUnixFCmd.o \
d140 4
a143 3
# lines.  Warning:  if you enable memory debugging, you must do it
# *everywhere*, including all the code that calls Tcl, and you must use
# ckalloc and ckfree everywhere instead of malloc and free.
a146 3
# To enable support for stubs in Tcl.
STUB_LIB_FILE		= @@TCL_STUB_LIB_FILE@@

d150 3
d156 2
a157 2
# To enable compilation debugging reverse the comment characters on
# one of the following lines.
a158 1
#COMPILE_DEBUG_FLAGS	= -DTCL_COMPILE_STATS
d168 1
a168 1
SHELL = @@SHELL@@
d175 2
a176 14
INSTALL =		@@srcdir@@/install-sh -c
INSTALL_PROGRAM =	@@INSTALL_PROGRAM@@
INSTALL_DATA =		@@INSTALL_DATA@@

# The following symbol defines additional compiler flags to enable
# Tcl itself to be a shared library.  If Tcl isn't going to be a
# shared library then the symbol has an empty definition.

TCL_SHLIB_CFLAGS = @@TCL_SHLIB_CFLAGS@@
#TCL_SHLIB_CFLAGS =

# The following symbol defines additional compiler flags to enable
# writable strings, since Tcl_Eval2 writes into its arguments. Only
# applicable for GCC
d180 1
d183 5
a187 5
# The following specifies which Tcl executable to use for make targets
# below.  This can generally be 'tclsh', meaning all targets will work
# once we have created the initial executable, but in some cases you
# may want to use a target without having made tclsh on these sources
# (like for make genstubs)
d196 17
a212 13
STLIB_LD = @@STLIB_LD@@
SHLIB_LD = @@SHLIB_LD@@
SHLIB_CFLAGS = @@SHLIB_CFLAGS@@

SHLIB_SUFFIX = @@SHLIB_SUFFIX@@
#SHLIB_SUFFIX =

TCL_SHARED_LIB_SUFFIX = @@TCL_SHARED_LIB_SUFFIX@@
TCL_UNSHARED_LIB_SUFFIX = @@TCL_UNSHARED_LIB_SUFFIX@@
TCL_SHARED_LIB_FILE = @@TCL_SHARED_LIB_FILE@@
TCL_UNSHARED_LIB_FILE = @@TCL_UNSHARED_LIB_FILE@@

DLTEST_TARGETS		= dltest/pkg5${SHLIB_SUFFIX} dltest/Makefile
d225 3
d234 3
d247 1
a247 1
TCL_RANLIB		= @@RANLIB@@
d254 1
a259 1
#CC			= purify -best-effort @@CC@@
d261 14
d283 1
a283 1
CC_SWITCHES = ${CFLAGS} ${TCL_CFLAGS} ${CFLAGS_WARNING} ${SHLIB_CFLAGS} \
d289 1
a289 1
STUB_CC_SWITCHES = ${CFLAGS} ${TCL_CFLAGS} ${CFLAGS_WARNING} ${SHLIB_CFLAGS} \
d294 1
a294 1
LIBS		= @@DL_LIBS@@ @@LIBS@@ $(MATH_LIBS) -lc
d320 2
a321 1
	tclStubInit.o tclStubLib.o tclTimer.o tclUtf.o tclUtil.o tclVar.o
d325 2
a326 1
OBJS = ${GENERIC_OBJS} ${UNIX_OBJS} ${NOTIFY_OBJS} ${COMPAT_OBJS} @@DL_OBJS@@
d403 2
a416 1
	$(UNIX_DIR)/tclMtherr.c \
d440 6
a445 3
# Note: don't include DL_SRCS in SRCS:  most of those files won't
# compile on the current machine, and they will cause problems for
# things like "make depend".
d451 1
a451 1
binaries: ${TCL_LIB_FILE} $(TCL_STUB_LIB_FILE) $(TCL_BUILD_EXP_FILE) tclsh
d459 2
a460 2
${TCL_LIB_FILE}: ${OBJS} ${STUB_LIB_FILE}
	rm -f ${TCL_LIB_FILE}
a461 1
	$(TCL_RANLIB) ${TCL_LIB_FILE}
d464 1
a464 1
	rm -f ${STUB_LIB_FILE}
a465 1
	$(TCL_RANLIB) ${STUB_LIB_FILE}
d481 6
a486 1
		@@TCL_LD_SEARCH_FLAGS@@ -o tclsh
d489 3
d493 1
a493 2
		@@TCL_LD_SEARCH_FLAGS@@ -o tcltest

d498 3
d503 1
a503 3
	LD_LIBRARY_PATH=`pwd`:${LD_LIBRARY_PATH}; export LD_LIBRARY_PATH; \
	LIBPATH=`pwd`:${LIBPATH}; export LIBPATH; \
	SHLIB_PATH=`pwd`:${SHLIB_PATH}; export SHLIB_PATH; \
d505 1
a505 1
	./tcltest $(TOP_DIR)/tests/all.tcl $(TCLTESTARGS)
d509 1
a509 3
	LD_LIBRARY_PATH=`pwd`:${LD_LIBRARY_PATH}; export LD_LIBRARY_PATH; \
	LIBPATH=`pwd`:${LIBPATH}; export LIBPATH; \
	SHLIB_PATH=`pwd`:${SHLIB_PATH}; export SHLIB_PATH; \
d513 28
d560 1
a560 1
	    -e 's?SCCSID?RCS: @@(#) $$Id: Makefile.in,v 1.9.8.10 2001/07/12 19:08:19 mdejong Exp $$?' \
d567 1
a567 1
# The following targets generate the shared libraries in dltest that
d570 5
a574 15
# on this platform. The ".." environment variable stuff is needed
# because on some platforms tclsh scripts will be executed as part of
# building the shared libraries, and they need to be able to use the
# uninstalled tclsh that is present in this directory.  The "make tclsh"
# command is needed for the same reason (must make sure that it exists).

dltest/pkg5${SHLIB_SUFFIX}: dltest/Makefile
	if test ! -f tclsh; then $(MAKE) tclsh; else true; fi
	libdir=`cd $(TOP_DIR)/library && pwd`; cd dltest; \
	PATH=..:${PATH} TCL_LIBRARY=$$libdir $(MAKE)

dltest/Makefile: $(DLTEST_DIR)/configure $(DLTEST_DIR)/Makefile.in tclConfig.sh
	if test ! -d dltest; then mkdir dltest; else true; fi
	dldir=`cd $(DLTEST_DIR) && pwd`; cd dltest; \
	if test -f configure; then ./configure; else $$dldir/configure; fi
d579 3
a581 1
	$(MAKE) install INSTALL_PROGRAM="$(INSTALL_PROGRAM) -s"
d600 3
a602 4
	@@echo "Installing $(TCL_LIB_FILE) to $(LIB_INSTALL_DIR)/"
	@@$(INSTALL_DATA) $(TCL_LIB_FILE) $(LIB_INSTALL_DIR)/$(TCL_LIB_FILE)
	@@(cd $(LIB_INSTALL_DIR); $(TCL_RANLIB) $(TCL_LIB_FILE))
	@@chmod 555 $(LIB_INSTALL_DIR)/$(TCL_LIB_FILE)
d612 4
a615 5
	@@if test "$(TCL_STUB_LIB_FILE)" != "" ; then \
	    echo "Installing $(TCL_STUB_LIB_FILE) to $(LIB_INSTALL_DIR)/"; \
	    $(INSTALL_DATA) $(STUB_LIB_FILE) \
			 $(LIB_INSTALL_DIR)/$(TCL_STUB_LIB_FILE); \
	    fi
d617 2
a618 3
install-libraries:
	@@for i in $(INSTALL_ROOT)@@datadir@@ $(INCLUDE_INSTALL_DIR) \
		$(SCRIPT_INSTALL_DIR) ; \
d627 1
a627 1
	@@for i in http2.3 http1.0 opt0.4 encoding msgcat1.0 tcltest1.0; \
d640 2
a641 1
	@@for i in $(GENERIC_DIR)/tcl.h $(GENERIC_DIR)/tclDecls.h ; \
d650 2
a651 1
	@@for i in http2.3 http1.0 opt0.4 msgcat1.0 tcltest1.0; \
d653 21
a673 5
	    echo "Installing library $$i directory"; \
	    for j in $(TOP_DIR)/library/$$i/*.tcl ; \
		do \
		$(INSTALL_DATA) $$j $(SCRIPT_INSTALL_DIR)/$$i; \
		done; \
d699 1
a699 1
	    chmod 644 $(MAN1_INSTALL_DIR)/$$i; \
d702 1
a702 1
	@@$(UNIX_DIR)/mkLinks $(MAN1_INSTALL_DIR)
d709 1
a709 1
	    chmod 644 $(MAN3_INSTALL_DIR)/$$i; \
d712 1
a712 1
	@@$(UNIX_DIR)/mkLinks $(MAN3_INSTALL_DIR)
d718 2
a719 2
		    $$i > $(MAN3_INSTALL_DIR)/$$i; \
	    chmod 644 $(MAN3_INSTALL_DIR)/$$i; \
d722 1
a722 1
	@@$(UNIX_DIR)/mkLinks $(MANN_INSTALL_DIR)
d724 1
a724 1
Makefile: $(UNIX_DIR)/Makefile.in config.status
a726 4
config.status: $(UNIX_DIR)/configure
	./config.status --recheck

mostlyclean: clean
d730 1
a730 1
	if test -f dltest/Makefile; then cd dltest; $(MAKE) clean; fi
d735 1
a735 1
	if test -f dltest/Makefile; then cd dltest; $(MAKE) distclean; fi
a739 3
bp: $(UNIX_DIR)/bp.c
	$(CC) $(CC_SWITCHES) $(UNIX_DIR)/bp.c -o bp

a928 3
tclMtherr.o: $(UNIX_DIR)/tclMtherr.c
	$(CC) -c $(CC_SWITCHES) $(UNIX_DIR)/tclMtherr.c

d980 1
a980 1
tclUtf.o: $(GENERIC_DIR)/tclUtf.c
d1001 6
d1040 1
a1040 1
# CYGNUS LOCAL
d1051 1
a1051 1
# END CYGNUS LOCAL
d1058 4
d1070 1
a1070 1
		@@TCL_LD_SEARCH_FLAGS@@ -L/usr/openwin/lib -lXt -o xttest
a1087 3
getcwd.o: $(COMPAT_DIR)/getcwd.c
	$(CC) -c $(STUB_CC_SWITCHES) $(COMPAT_DIR)/getcwd.c

d1106 3
d1112 3
d1137 3
a1139 2
	$(TCL_EXE) $(TOOL_DIR)/genStubs.tcl $(GENERIC_DIR) \
		$(GENERIC_DIR)/tcl.decls $(GENERIC_DIR)/tclInt.decls
d1163 18
d1210 5
d1221 4
a1224 4
DISTROOT =	/tmp/dist
DISTNAME =	tcl@@TCL_VERSION@@@@TCL_PATCH_LEVEL@@
ZIPNAME =	tcl@@TCL_MAJOR_VERSION@@@@TCL_MINOR_VERSION@@@@TCL_PATCH_LEVEL@@.zip
DISTDIR =	$(DISTROOT)/$(DISTNAME)
d1227 2
a1228 1
dist: $(UNIX_DIR)/configure
d1230 1
a1230 2
	mkdir $(DISTDIR)
	mkdir $(DISTDIR)/unix
a1231 1
	rm -f $(DISTDIR)/unix/bp.c
d1238 1
a1242 4

	$(TCL_EXE) $(UNIX_DIR)/mkLinks.tcl \
		$(UNIX_DIR)/../doc/*.[13n] > $(DISTDIR)/unix/mkLinks
	chmod +x $(DISTDIR)/unix/mkLinks
d1249 2
a1250 1
		$(TOP_DIR)/license.terms $(DISTDIR)
d1254 1
a1254 1
	for i in http2.3 http1.0 opt0.4 msgcat1.0 reg1.0 dde1.1 tcltest1.0; \
a1272 3
	mkdir $(DISTDIR)/tests/pkg
	cp -p $(TOP_DIR)/license.terms $(DISTDIR)/tests/pkg
	cp -p $(TOP_DIR)/tests/pkg/*.tcl $(DISTDIR)/tests/pkg
d1275 1
a1275 2
	cp $(TOP_DIR)/win/configure.in \
		$(TOP_DIR)/win/configure \
d1279 3
a1281 2
	cp -p $(TOP_DIR)/win/*.c $(TOP_DIR)/win/*.h $(TOP_DIR)/win/*.rc \
		$(TOP_DIR)/win/*.ico $(DISTDIR)/win
d1283 1
d1285 9
d1297 2
a1298 2
	cp -p $(TOP_DIR)/mac/tclMacProjects.sea.hqx $(DISTDIR)/mac
	cp -p $(TOP_DIR)/mac/*.c $(TOP_DIR)/mac/*.h $(TOP_DIR)/mac/*.r \
d1301 2
a1302 3
	cp -p $(TOP_DIR)/mac/*.exp $(TOP_DIR)/mac/*.pch $(DISTDIR)/mac
	cp -p $(TOP_DIR)/mac/*.doc $(DISTDIR)/mac
	cp -p $(TOP_DIR)/mac/*.html $(DISTDIR)/mac
d1304 6
d1312 1
a1313 2
	cp -p $(UNIX_DIR)/dltest/configure.in $(UNIX_DIR)/dltest/configure \
		$(UNIX_DIR)/dltest/README $(DISTDIR)/unix/dltest
d1315 5
a1319 8
	cp -p $(TOP_DIR)/tools/Makefile.in \
	    $(TOP_DIR)/tools/README \
	    $(TOP_DIR)/tools/configure.in \
	    $(TOP_DIR)/tools/*.tcl \
	    $(TOP_DIR)/tools/man2tcl.c \
	    $(TOP_DIR)/tools/tcl.wse.in \
	    $(TOP_DIR)/tools/*.bmp \
	    $(TOP_DIR)/tools/tcl.hpj.in \
d1321 2
d1330 3
a1332 6
	rm -f $(DISTROOT)/$(DISTNAME).tar.Z \
		$(DISTROOT)/$(DISTNAME).tar.gz \
		$(DISTROOT)/$(ZIPNAME)
	cd $(DISTROOT); tar cf $(DISTNAME).tar $(DISTNAME); \
		gzip -9 -c $(DISTNAME).tar > $(DISTNAME).tar.gz; \
		compress $(DISTNAME).tar; zip -qr8 $(ZIPNAME) $(DISTNAME)
d1343 1
a1343 3
	rm -f $(DISTROOT)/$(DISTNAME).tar.Z \
		$(DISTROOT)/$(DISTNAME).tar.gz \
		$(DISTROOT)/$(ZIPNAME)
d1346 2
a1347 3
	cd $(DISTROOT); tar cf $(DISTNAME).tar tcl${VERSION}; \
		gzip -9 -c $(DISTNAME).tar > $(DISTNAME).tar.gz; \
		compress $(DISTNAME).tar; zip -r8 $(ZIPNAME) tcl${VERSION}
@


1.5
log
@touched all sources to ease next import
@
text
@@


1.5.4.1
log
@Merge drow-cplus-branch to:
  cvs rtag -D 2003-12-14 00:00:00 UTC drow-cplus-merge-20031214 gdb+dejagnu
@
text
@d8 1
a8 1
# RCS: @@(#) $Id: Makefile.in,v 1.119 2002/10/18 22:59:54 hobbs Exp $
a10 3
MAJOR_VERSION		= @@TCL_MAJOR_VERSION@@
MINOR_VERSION		= @@TCL_MINOR_VERSION@@
PATCH_LEVEL		= @@TCL_PATCH_LEVEL@@
a39 3
# Path for the platform independent Tcl scripting libraries:
# REDHAT LOCAL
#TCL_LIBRARY		= $(prefix)/lib/tcl$(VERSION)
a40 1
# END REDHAT LOCAL
d49 1
a49 1
LIB_INSTALL_DIR		= $(INSTALL_ROOT)$(libdir)
d54 3
d58 1
a58 1
INCLUDE_INSTALL_DIR	= $(INSTALL_ROOT)$(includedir)
d61 1
a61 1
MAN_INSTALL_DIR		= $(INSTALL_ROOT)$(mandir)
d89 6
a94 4
#CFLAGS			= $(CFLAGS_DEBUG)
#CFLAGS			= $(CFLAGS_OPTIMIZE)
#CFLAGS			= $(CFLAGS_DEBUG) $(CFLAGS_OPTIMIZE)
CFLAGS			= @@CFLAGS@@ @@CFLAGS_DEFAULT@@
d97 3
a99 3
LDFLAGS_DEBUG		= @@LDFLAGS_DEBUG@@
LDFLAGS_OPTIMIZE	= @@LDFLAGS_OPTIMIZE@@
LDFLAGS			= @@LDFLAGS@@ @@LDFLAGS_DEFAULT@@
d130 1
a130 1
UNIX_OBJS = tclUnixChan.o tclUnixEvent.o tclUnixFCmd.o \
d138 3
a140 4
# lines or call configure with --enable-symbols=mem
# Warning:  if you enable memory debugging, you must do it *everywhere*,
# including all the code that calls Tcl, and you must use ckalloc and
# ckfree everywhere instead of malloc and free.
d144 3
a149 3
# Generic stub lib name used in rules that apply to tcl and tk
STUB_LIB_FILE		= ${TCL_STUB_LIB_FILE}

d153 2
a154 2
# To enable compilation debugging reverse the comment characters on one
# of the following lines or call configure with --enable-symbols=compile
d156 1
d166 1
a166 1
SHELL			= /bin/sh
d173 14
a186 2
INSTALL_STRIP_PROGRAM   = -s
INSTALL_STRIP_LIBRARY  = -S -S
a189 1
INSTALL_LIBRARY		= ${INSTALL}
d192 5
a196 5
# TCL_EXE is the name of a tclsh executable that is available *BEFORE*
# running make for the first time. Certain build targets (make genstubs)
# need it to be available on the PATH. This executable should *NOT* be
# required just to do a normal build although it can be required to run
# make dist.
d205 13
a217 17
STLIB_LD		= @@STLIB_LD@@
SHLIB_LD		= @@SHLIB_LD@@
SHLIB_CFLAGS		= @@SHLIB_CFLAGS@@
SHLIB_LD_FLAGS		= @@SHLIB_LD_FLAGS@@
SHLIB_LD_LIBS		= @@SHLIB_LD_LIBS@@
TCL_SHLIB_LD_EXTRAS	= @@TCL_SHLIB_LD_EXTRAS@@

SHLIB_SUFFIX		= @@SHLIB_SUFFIX@@
#SHLIB_SUFFIX		=

DLTEST_TARGETS		= dltest.marker

# Additional search flags needed to find the various shared libraries
# at run-time.  The first symbol is for use when creating a binary
# with cc, and the second is for use when running ld directly.
CC_SEARCH_FLAGS	= @@CC_SEARCH_FLAGS@@
LD_SEARCH_FLAGS	= @@LD_SEARCH_FLAGS@@
a229 3
# Generic lib name used in rules that apply to tcl and tk
LIB_FILE		= ${TCL_LIB_FILE}

a235 3
# support for embedded libraries on Darwin / Mac OS X
DYLIB_INSTALL_DIR	= ${LIB_RUNTIME_DIR}

d246 1
a246 1
RANLIB			= @@RANLIB@@
a252 1
MAC_OSX_DIR		= $(TOP_DIR)/macosx
d258 1
a259 14
#CC			= purify -best-effort @@CC@@ -DPURIFY

# Flags to be passed to mkLinks to control whether the manpages
# should be compressed and linked with softlinks
MKLINKS_FLAGS           = @@MKLINKS_FLAGS@@

#----------------------------------------------------------------
# The information below is usually usable as is.  The configure
# script won't modify it and it only exists to make working
# around selected rare system configurations easier.
#----------------------------------------------------------------

GDB			= gdb
DDD			= ddd
d268 1
a268 1
CC_SWITCHES = ${CFLAGS} ${CFLAGS_WARNING} ${SHLIB_CFLAGS} \
d274 1
a274 1
STUB_CC_SWITCHES = ${CFLAGS} ${CFLAGS_WARNING} ${SHLIB_CFLAGS} \
d279 1
a279 1
LIBS		= @@DL_LIBS@@ @@LIBS@@ $(MATH_LIBS)
d305 1
a305 2
	 tclThreadAlloc.o tclThreadJoin.o tclStubInit.o tclStubLib.o \
	tclTimer.o tclUtf.o tclUtil.o tclVar.o
d309 1
a309 2
OBJS = ${GENERIC_OBJS} ${UNIX_OBJS} ${NOTIFY_OBJS} ${COMPAT_OBJS} \
        @@DL_OBJS@@ @@PLAT_OBJS@@
a385 2
	$(GENERIC_DIR)/tclThreadAlloc.c \
	$(GENERIC_DIR)/tclThreadJoin.c \
d398 1
d422 3
a424 6
MAC_OSX_SRCS = \
	$(MAC_OSX_DIR)/tclMacOSXBundle.c

# Note: don't include DL_SRCS or MAC_OSX_SRCS in SRCS: most of those
# files won't compile on the current machine, and they will cause
# problems for things like "make depend".
d430 1
a430 1
binaries: ${LIB_FILE} $(STUB_LIB_FILE) $(TCL_BUILD_EXP_FILE) tclsh
d438 2
a439 2
${LIB_FILE}: ${OBJS} ${STUB_LIB_FILE}
	rm -f $@@
d441 1
d444 1
a444 1
	rm -f $@@
d446 1
d462 1
a462 6
		${CC_SEARCH_FLAGS} -o tclsh

# Resetting the LIB_RUNTIME_DIR below is required so that
# the generated tcltest executable gets the build directory
# burned into its ld search path. This keeps tcltest from
# picking up an already installed version of the Tcl library.
d465 2
a466 1
	$(MAKE) tcltest-real LIB_RUNTIME_DIR=`pwd`
a467 3
tcltest-real:
	${CC} ${LDFLAGS} ${TCLTEST_OBJS} @@TCL_BUILD_LIB_SPEC@@ ${LIBS} \
		${CC_SEARCH_FLAGS} -o tcltest
a471 3
# Specifying TESTFLAGS on the command line is the standard way to pass
# args to tcltest, ie:
#	% make test TESTFLAGS="-verbose bps -file fileName.test"
d474 3
a476 1
	@@LD_LIBRARY_PATH_VAR@@=`pwd`:${@@LD_LIBRARY_PATH_VAR@@}; export @@LD_LIBRARY_PATH_VAR@@; \
d478 1
a478 1
	./tcltest $(TOP_DIR)/tests/all.tcl $(TESTFLAGS) $(TCLTESTARGS)
d482 3
a484 1
	@@LD_LIBRARY_PATH_VAR@@=`pwd`:${@@LD_LIBRARY_PATH_VAR@@}; export @@LD_LIBRARY_PATH_VAR@@; \
a487 28
# Useful target for running the test suite with an unwritable current
# directory...
ro-test: tcltest
	@@LD_LIBRARY_PATH_VAR@@=`pwd`:${@@LD_LIBRARY_PATH_VAR@@}; export @@LD_LIBRARY_PATH_VAR@@; \
	TCL_LIBRARY="${TCL_BUILDTIME_LIBRARY}"; export TCL_LIBRARY; \
	echo 'exec chmod -w .;package require tcltest;tcltest::temporaryDirectory /tmp;source ../tests/all.tcl;exec chmod +w .' | ./tcltest

# This target can be used to run tclsh from the build directory
# via `make shell SCRIPT=/tmp/foo.tcl`
shell: tclsh
	@@@@LD_LIBRARY_PATH_VAR@@=`pwd`:${@@LD_LIBRARY_PATH_VAR@@}; export @@LD_LIBRARY_PATH_VAR@@; \
	TCL_LIBRARY="${TCL_BUILDTIME_LIBRARY}"; export TCL_LIBRARY; \
	./tclsh $(SCRIPT)

# This target can be used to run tclsh inside either gdb or insight
gdb: tclsh
	@@echo "set env @@LD_LIBRARY_PATH_VAR@@=`pwd`:${@@LD_LIBRARY_PATH_VAR@@}" > gdb.run
	@@echo "set env TCL_LIBRARY=${TCL_BUILDTIME_LIBRARY}" >> gdb.run
	$(GDB) ./tclsh --command=gdb.run
	rm gdb.run

# This target can be used to run tclsh inside ddd
ddd: tclsh
	@@echo "set env @@LD_LIBRARY_PATH_VAR@@=`pwd`:${@@LD_LIBRARY_PATH_VAR@@}" > gdb.run
	@@echo "set env TCL_LIBRARY=${TCL_BUILDTIME_LIBRARY}" >> gdb.run
	$(DDD) -command=gdb.run ./tclsh
	rm gdb.run

d507 1
a507 1
	    -e 's?SCCSID?RCS: @@(#) ?' \
d514 1
a514 1
# The following target generates the shared libraries in dltest/ that
d517 15
a531 5
# on this platform. The Makefile in the dltest subdirectory creates
# the dltest.marker file in this directory after a successful build.

dltest.marker:
	cd dltest ; $(MAKE)
d536 1
a536 3
	$(MAKE) install \
		INSTALL_PROGRAM="$(INSTALL_PROGRAM) ${INSTALL_STRIP_PROGRAM}" \
		INSTALL_LIBRARY="$(INSTALL_LIBRARY) ${INSTALL_STRIP_LIBRARY}"
d555 4
a558 3
	@@echo "Installing $(LIB_FILE) to $(LIB_INSTALL_DIR)/"
	@@@@INSTALL_LIB@@
	@@chmod 555 $(LIB_INSTALL_DIR)/$(LIB_FILE)
d568 5
a572 4
	@@if test "$(STUB_LIB_FILE)" != "" ; then \
	    echo "Installing $(STUB_LIB_FILE) to $(LIB_INSTALL_DIR)/"; \
	    @@INSTALL_STUB_LIB@@ ; \
	fi
d574 3
a576 2
install-libraries: libraries
	@@for i in $(INCLUDE_INSTALL_DIR) $(SCRIPT_INSTALL_DIR); \
d585 1
a585 1
	@@for i in http2.4 http1.0 opt0.4 encoding msgcat1.3 tcltest2.2; \
d598 1
a598 2
	@@for i in $(GENERIC_DIR)/tcl.h $(GENERIC_DIR)/tclDecls.h \
		$(GENERIC_DIR)/tclPlatDecls.h ; \
d607 1
a607 2
	@@echo "Installing library http1.0 directory";
	@@for j in $(TOP_DIR)/library/http1.0/*.tcl ; \
d609 5
a613 21
	    $(INSTALL_DATA) $$j $(SCRIPT_INSTALL_DIR)/http1.0; \
	    done;
	@@echo "Installing library http2.4 directory";
	@@for j in $(TOP_DIR)/library/http/*.tcl ; \
	    do \
	    $(INSTALL_DATA) $$j $(SCRIPT_INSTALL_DIR)/http2.4; \
	    done;
	@@echo "Installing library opt0.4 directory";
	@@for j in $(TOP_DIR)/library/opt/*.tcl ; \
	    do \
	    $(INSTALL_DATA) $$j $(SCRIPT_INSTALL_DIR)/opt0.4; \
	    done;
	@@echo "Installing library msgcat1.3 directory";
	@@for j in $(TOP_DIR)/library/msgcat/*.tcl ; \
	    do \
	    $(INSTALL_DATA) $$j $(SCRIPT_INSTALL_DIR)/msgcat1.3; \
	    done;
	@@echo "Installing library tcltest2.2 directory";
	@@for j in $(TOP_DIR)/library/tcltest/*.tcl ; \
	    do \
	    $(INSTALL_DATA) $$j $(SCRIPT_INSTALL_DIR)/tcltest2.2; \
d639 1
a639 1
	    chmod 444 $(MAN1_INSTALL_DIR)/$$i; \
d642 1
a642 1
	@@$(UNIX_DIR)/mkLinks $(MKLINKS_FLAGS) $(MAN1_INSTALL_DIR)
d649 1
a649 1
	    chmod 444 $(MAN3_INSTALL_DIR)/$$i; \
d652 1
a652 1
	@@$(UNIX_DIR)/mkLinks $(MKLINKS_FLAGS) $(MAN3_INSTALL_DIR)
d658 2
a659 2
		    $$i > $(MANN_INSTALL_DIR)/$$i; \
	    chmod 444 $(MANN_INSTALL_DIR)/$$i; \
d662 1
a662 1
	@@$(UNIX_DIR)/mkLinks $(MKLINKS_FLAGS) $(MANN_INSTALL_DIR)
d664 1
a664 1
Makefile: $(UNIX_DIR)/Makefile.in $(DLTEST_DIR)/Makefile.in
d667 4
d674 1
a674 1
	cd dltest ; $(MAKE) clean
d679 1
a679 1
	cd dltest ; $(MAKE) distclean
d684 3
d876 3
d930 1
a930 1
tclUtf.o: $(GENERIC_DIR)/tclUtf.c $(GENERIC_DIR)/tclUniData.c
a950 6
tclThreadAlloc.o: $(GENERIC_DIR)/tclThreadAlloc.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclThreadAlloc.c

tclThreadJoin.o: $(GENERIC_DIR)/tclThreadJoin.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclThreadJoin.c

d984 1
a984 1
# REDHAT LOCAL
d995 1
a995 1
# END REDHAT LOCAL
a1001 4
# This is the CFBundle interface.  It is only used on Mac OS X.
tclMacOSXBundle.o: $(MAC_OSX_DIR)/tclMacOSXBundle.c
	$(CC) -c $(CC_SWITCHES) $(MAC_OSX_DIR)/tclMacOSXBundle.c

d1010 1
a1010 1
		${CC_SEARCH_FLAGS} -L/usr/openwin/lib -lXt -o xttest
d1028 3
a1048 3
strtoll.o: $(COMPAT_DIR)/strtoll.c
	$(CC) -c $(STUB_CC_SWITCHES) $(COMPAT_DIR)/strtoll.c

a1051 3
strtoull.o: $(COMPAT_DIR)/strtoull.c
	$(CC) -c $(STUB_CC_SWITCHES) $(COMPAT_DIR)/strtoull.c

d1074 2
a1075 3
	@@echo "Warning: tclStubInit.c may be out of date."
	@@echo "Developers may want to run \"make genstubs\" to regenerate."
	@@echo "This warning can be safely ignored, do not report as a bug!"
a1098 18
# Target to check that all public APIs which are not command
# implementations have an entry in section three of the distributed
# manpages.
#

checkdoc:
	-@@for i in `nm -p $(TCL_LIB_FILE) | awk '$$3 ~ /Tcl_/ { print $$3 }' \
		| grep -v 'Cmd$$' | sort -n`; do \
		match=0; \
		for j in $(TOP_DIR)/doc/*.3; do \
		    if [ `grep '\-' $$j | grep -c $$i` -gt 0 ]; then \
			match=1; \
		    fi; \
		done; \
		if [ $$match -eq 0 ]; then echo $$i; fi \
	done

#
a1127 5
mklinks:
	$(TCL_EXE) $(UNIX_DIR)/mkLinks.tcl \
		$(UNIX_DIR)/../doc/*.[13n] > $(UNIX_DIR)/mkLinks
	chmod +x $(UNIX_DIR)/mkLinks

d1134 4
a1137 4
DISTROOT = /tmp/dist
DISTNAME = tcl${VERSION}${PATCH_LEVEL}
ZIPNAME	 = tcl${MAJOR_VERSION}${MINOR_VERSION}${PATCH_LEVEL}-src.zip
DISTDIR	 = $(DISTROOT)/$(DISTNAME)
d1140 1
a1140 2

dist: $(UNIX_DIR)/configure mklinks
d1142 2
a1143 1
	mkdir -p $(DISTDIR)/unix
d1145 1
a1151 1
		$(UNIX_DIR)/mkLinks \
d1156 4
d1166 1
a1166 2
		$(TOP_DIR)/ChangeLog.[12]??? $(TOP_DIR)/license.terms \
		$(DISTDIR)
d1170 1
a1170 1
	for i in http1.0 http opt msgcat reg dde tcltest; \
d1189 3
d1194 2
a1195 1
	cp $(TOP_DIR)/win/configure.in $(TOP_DIR)/win/configure \
d1199 2
a1200 3
	cp -p $(TOP_DIR)/win/*.c $(TOP_DIR)/win/*.h \
		$(TOP_DIR)/win/*.ico $(TOP_DIR)/win/*.rc \
		$(DISTDIR)/win
a1201 1
	$(TCL_EXE) $(TOOL_DIR)/eolFix.tcl -crlf $(DISTDIR)/win/*.bat
a1202 9
	$(TCL_EXE) $(TOOL_DIR)/eolFix.tcl -crlf $(DISTDIR)/win/makefile.*
	cp -p $(TOP_DIR)/win/rules.vc $(DISTDIR)/win
	$(TCL_EXE) $(TOOL_DIR)/eolFix.tcl -crlf $(DISTDIR)/win/rules.vc
	cp -p $(TOP_DIR)/win/coffbase.txt $(DISTDIR)/win
	$(TCL_EXE) $(TOOL_DIR)/eolFix.tcl -crlf $(DISTDIR)/win/coffbase.txt
	cp -p $(TOP_DIR)/win/tcl.hpj.in $(DISTDIR)/win
	$(TCL_EXE) $(TOOL_DIR)/eolFix.tcl -crlf $(DISTDIR)/win/tcl.hpj.in
	cp -p $(TOP_DIR)/win/tcl.ds* $(DISTDIR)/win
	$(TCL_EXE) $(TOOL_DIR)/eolFix.tcl -crlf $(DISTDIR)/win/tcl.ds*
d1206 2
a1207 2
	cp -p $(TOP_DIR)/mac/tcl*.sea.hqx \
		$(TOP_DIR)/mac/*.c $(TOP_DIR)/mac/*.h $(TOP_DIR)/mac/*.r \
d1210 3
a1212 2
	cp -p $(TOP_DIR)/mac/*.pch $(DISTDIR)/mac
	cp -p $(TOP_DIR)/mac/*.doc $(TOP_DIR)/mac/*.html $(DISTDIR)/mac
a1213 6
	mkdir $(DISTDIR)/macosx
	cp -p $(TOP_DIR)/macosx/Makefile \
		$(TOP_DIR)/macosx/*.c \
		$(DISTDIR)/macosx
	mkdir $(DISTDIR)/macosx/Tcl.pbproj
	cp -p $(TOP_DIR)/macosx/Tcl.pbproj/*.pbx* $(DISTDIR)/macosx/Tcl.pbproj
a1215 1
		$(UNIX_DIR)/dltest/README \
d1217 2
d1220 8
a1227 5
	cp -p $(TOP_DIR)/tools/Makefile.in $(TOP_DIR)/tools/README \
		$(TOP_DIR)/tools/configure $(TOP_DIR)/tools/configure.in \
		$(TOP_DIR)/tools/*.tcl $(TOP_DIR)/tools/man2tcl.c \
		$(TOP_DIR)/tools/tcl.wse.in $(TOP_DIR)/tools/*.bmp \
		$(TOP_DIR)/tools/tcl.hpj.in \
a1228 2
	$(TCL_EXE) $(TOOL_DIR)/eolFix.tcl -crlf $(DISTDIR)/tools/tcl.hpj.in \
		$(DISTDIR)/tools/tcl.wse.in
d1236 6
a1241 3
	rm -f $(DISTROOT)/$(DISTNAME)-src.tar.gz $(DISTROOT)/$(ZIPNAME)
	cd $(DISTROOT); tar cf $(DISTNAME)-src.tar $(DISTNAME); \
		gzip -9 $(DISTNAME)-src.tar; zip -qr8 $(ZIPNAME) $(DISTNAME)
d1252 3
a1254 1
	rm -f $(DISTROOT)/$(DISTNAME)-src.tar.gz $(DISTROOT)/$(ZIPNAME)
d1257 3
a1259 2
	cd $(DISTROOT); tar cf $(DISTNAME)-src.tar tcl${VERSION}; \
		gzip -9 $(DISTNAME)-src.tar; zip -r8 $(ZIPNAME) tcl${VERSION}
@


1.5.2.1
log
@Import Tcl 8.4.0 into mainline-like sources. Simplest Tcl build possible for
cygwin.
@
text
@d8 1
a8 1
# RCS: @@(#) $Id: Makefile.in,v 1.116 2002/09/10 09:57:42 das Exp $
a10 3
MAJOR_VERSION		= @@TCL_MAJOR_VERSION@@
MINOR_VERSION		= @@TCL_MINOR_VERSION@@
PATCH_LEVEL		= @@TCL_PATCH_LEVEL@@
d40 1
a40 2
# Path for the platform independent Tcl scripting libraries:
TCL_LIBRARY		= $(prefix)/lib/tcl$(VERSION)
d49 1
a49 1
LIB_INSTALL_DIR		= $(INSTALL_ROOT)$(libdir)
d54 3
d58 1
a58 1
INCLUDE_INSTALL_DIR	= $(INSTALL_ROOT)$(includedir)
d61 1
a61 1
MAN_INSTALL_DIR		= $(INSTALL_ROOT)$(mandir)
d89 6
a94 4
#CFLAGS			= $(CFLAGS_DEBUG)
#CFLAGS			= $(CFLAGS_OPTIMIZE)
#CFLAGS			= $(CFLAGS_DEBUG) $(CFLAGS_OPTIMIZE)
CFLAGS			= @@CFLAGS@@ @@CFLAGS_DEFAULT@@
d97 3
a99 3
LDFLAGS_DEBUG		= @@LDFLAGS_DEBUG@@
LDFLAGS_OPTIMIZE	= @@LDFLAGS_OPTIMIZE@@
LDFLAGS			= @@LDFLAGS@@ @@LDFLAGS_DEFAULT@@
d130 1
a130 1
UNIX_OBJS = tclUnixChan.o tclUnixEvent.o tclUnixFCmd.o \
d141 1
a141 1
MEM_DEBUG_FLAGS		= @@MEM_DEBUG_FLAGS@@
d144 3
a149 3
# Generic stub lib name used in rules that apply to tcl and tk
STUB_LIB_FILE		= ${TCL_STUB_LIB_FILE}

d166 1
a166 1
SHELL			= /bin/sh
d173 14
a186 2
INSTALL_STRIP_PROGRAM   = -s
INSTALL_STRIP_LIBRARY  = -S -S
a189 1
INSTALL_LIBRARY		= ${INSTALL}
d192 5
a196 5
# TCL_EXE is the name of a tclsh executable that is available *BEFORE*
# running make for the first time. Certain build targets (make genstubs)
# need it to be available on the PATH. This executable should *NOT* be
# required just to do a normal build although it can be required to run
# make dist.
d205 13
a217 17
STLIB_LD		= @@STLIB_LD@@
SHLIB_LD		= @@SHLIB_LD@@
SHLIB_CFLAGS		= @@SHLIB_CFLAGS@@
SHLIB_LD_FLAGS		= @@SHLIB_LD_FLAGS@@
SHLIB_LD_LIBS		= @@SHLIB_LD_LIBS@@
TCL_SHLIB_LD_EXTRAS	= @@TCL_SHLIB_LD_EXTRAS@@

SHLIB_SUFFIX		= @@SHLIB_SUFFIX@@
#SHLIB_SUFFIX		=

DLTEST_TARGETS		= dltest.marker

# Additional search flags needed to find the various shared libraries
# at run-time.  The first symbol is for use when creating a binary
# with cc, and the second is for use when running ld directly.
CC_SEARCH_FLAGS	= @@CC_SEARCH_FLAGS@@
LD_SEARCH_FLAGS	= @@LD_SEARCH_FLAGS@@
a229 3
# Generic lib name used in rules that apply to tcl and tk
LIB_FILE		= ${TCL_LIB_FILE}

a235 3
# support for embedded libraries on Darwin / Mac OS X
DYLIB_INSTALL_DIR	= ${LIB_RUNTIME_DIR}

d246 1
a246 1
RANLIB			= @@RANLIB@@
a252 1
MAC_OSX_DIR		= $(TOP_DIR)/macosx
d258 1
a259 14
#CC			= purify -best-effort @@CC@@ -DPURIFY

# Flags to be passed to mkLinks to control whether the manpages
# should be compressed and linked with softlinks
MKLINKS_FLAGS           = @@MKLINKS_FLAGS@@

#----------------------------------------------------------------
# The information below is usually usable as is.  The configure
# script won't modify it and it only exists to make working
# around selected rare system configurations easier.
#----------------------------------------------------------------

GDB			= gdb
DDD			= ddd
d268 1
a268 1
CC_SWITCHES = ${CFLAGS} ${CFLAGS_WARNING} ${SHLIB_CFLAGS} \
d274 1
a274 1
STUB_CC_SWITCHES = ${CFLAGS} ${CFLAGS_WARNING} ${SHLIB_CFLAGS} \
d279 1
a279 1
LIBS		= @@DL_LIBS@@ @@LIBS@@ $(MATH_LIBS)
d305 1
a305 2
	 tclThreadAlloc.o tclThreadJoin.o tclStubInit.o tclStubLib.o \
	tclTimer.o tclUtf.o tclUtil.o tclVar.o
d309 1
a309 2
OBJS = ${GENERIC_OBJS} ${UNIX_OBJS} ${NOTIFY_OBJS} ${COMPAT_OBJS} \
        @@DL_OBJS@@ @@PLAT_OBJS@@
a385 2
	$(GENERIC_DIR)/tclThreadAlloc.c \
	$(GENERIC_DIR)/tclThreadJoin.c \
d398 1
d422 3
a424 6
MAC_OSX_SRCS = \
	$(MAC_OSX_DIR)/tclMacOSXBundle.c

# Note: don't include DL_SRCS or MAC_OSX_SRCS in SRCS: most of those
# files won't compile on the current machine, and they will cause
# problems for things like "make depend".
d430 1
a430 1
binaries: ${LIB_FILE} $(STUB_LIB_FILE) $(TCL_BUILD_EXP_FILE) tclsh
d438 2
a439 2
${LIB_FILE}: ${OBJS} ${STUB_LIB_FILE}
	rm -f $@@
d441 1
d444 1
a444 1
	rm -f $@@
d446 1
d462 1
a462 6
		${CC_SEARCH_FLAGS} -o tclsh

# Resetting the LIB_RUNTIME_DIR below is required so that
# the generated tcltest executable gets the build directory
# burned into its ld search path. This keeps tcltest from
# picking up an already installed version of the Tcl library.
d465 2
a466 1
	$(MAKE) tcltest-real LIB_RUNTIME_DIR=`pwd`
a467 3
tcltest-real:
	${CC} ${LDFLAGS} ${TCLTEST_OBJS} @@TCL_BUILD_LIB_SPEC@@ ${LIBS} \
		${CC_SEARCH_FLAGS} -o tcltest
a471 3
# Specifying TESTFLAGS on the command line is the standard way to pass
# args to tcltest, ie:
#	% make test TESTFLAGS="-verbose bps -file fileName.test"
d474 3
a476 1
	@@LD_LIBRARY_PATH_VAR@@=`pwd`:${@@LD_LIBRARY_PATH_VAR@@}; export @@LD_LIBRARY_PATH_VAR@@; \
d478 1
a478 1
	./tcltest $(TOP_DIR)/tests/all.tcl $(TESTFLAGS) $(TCLTESTARGS)
d482 3
a484 1
	@@LD_LIBRARY_PATH_VAR@@=`pwd`:${@@LD_LIBRARY_PATH_VAR@@}; export @@LD_LIBRARY_PATH_VAR@@; \
a487 28
# Useful target for running the test suite with an unwritable current
# directory...
ro-test: tcltest
	@@LD_LIBRARY_PATH_VAR@@=`pwd`:${@@LD_LIBRARY_PATH_VAR@@}; export @@LD_LIBRARY_PATH_VAR@@; \
	TCL_LIBRARY="${TCL_BUILDTIME_LIBRARY}"; export TCL_LIBRARY; \
	echo 'exec chmod -w .;package require tcltest;tcltest::temporaryDirectory /tmp;source ../tests/all.tcl;exec chmod +w .' | ./tcltest

# This target can be used to run tclsh from the build directory
# via `make shell SCRIPT=/tmp/foo.tcl`
shell: tclsh
	@@@@LD_LIBRARY_PATH_VAR@@=`pwd`:${@@LD_LIBRARY_PATH_VAR@@}; export @@LD_LIBRARY_PATH_VAR@@; \
	TCL_LIBRARY="${TCL_BUILDTIME_LIBRARY}"; export TCL_LIBRARY; \
	./tclsh $(SCRIPT)

# This target can be used to run tclsh inside either gdb or insight
gdb: tclsh
	@@echo "set env @@LD_LIBRARY_PATH_VAR@@=`pwd`:${@@LD_LIBRARY_PATH_VAR@@}" > gdb.run
	@@echo "set env TCL_LIBRARY=${TCL_BUILDTIME_LIBRARY}" >> gdb.run
	$(GDB) ./tclsh --command=gdb.run
	rm gdb.run

# This target can be used to run tclsh inside ddd
ddd: tclsh
	@@echo "set env @@LD_LIBRARY_PATH_VAR@@=`pwd`:${@@LD_LIBRARY_PATH_VAR@@}" > gdb.run
	@@echo "set env TCL_LIBRARY=${TCL_BUILDTIME_LIBRARY}" >> gdb.run
	$(DDD) -command=gdb.run ./tclsh
	rm gdb.run

d507 1
a507 1
	    -e 's?SCCSID?RCS: @@(#) ?' \
d514 1
a514 1
# The following target generates the shared libraries in dltest/ that
d517 15
a531 5
# on this platform. The Makefile in the dltest subdirectory creates
# the dltest.marker file in this directory after a successful build.

dltest.marker:
	cd dltest ; $(MAKE)
d536 1
a536 3
	$(MAKE) install \
		INSTALL_PROGRAM="$(INSTALL_PROGRAM) ${INSTALL_STRIP_PROGRAM}" \
		INSTALL_LIBRARY="$(INSTALL_LIBRARY) ${INSTALL_STRIP_LIBRARY}"
d555 4
a558 3
	@@echo "Installing $(LIB_FILE) to $(LIB_INSTALL_DIR)/"
	@@@@INSTALL_LIB@@
	@@chmod 555 $(LIB_INSTALL_DIR)/$(LIB_FILE)
d568 5
a572 4
	@@if test "$(STUB_LIB_FILE)" != "" ; then \
	    echo "Installing $(STUB_LIB_FILE) to $(LIB_INSTALL_DIR)/"; \
	    @@INSTALL_STUB_LIB@@ ; \
	fi
d574 3
a576 2
install-libraries: libraries
	@@for i in $(INCLUDE_INSTALL_DIR) $(SCRIPT_INSTALL_DIR); \
d585 1
a585 1
	@@for i in http2.4 http1.0 opt0.4 encoding msgcat1.3 tcltest2.2; \
d598 1
a598 2
	@@for i in $(GENERIC_DIR)/tcl.h $(GENERIC_DIR)/tclDecls.h \
		$(GENERIC_DIR)/tclPlatDecls.h ; \
d607 1
a607 2
	@@echo "Installing library http1.0 directory";
	@@for j in $(TOP_DIR)/library/http1.0/*.tcl ; \
d609 5
a613 21
	    $(INSTALL_DATA) $$j $(SCRIPT_INSTALL_DIR)/http1.0; \
	    done;
	@@echo "Installing library http2.4 directory";
	@@for j in $(TOP_DIR)/library/http/*.tcl ; \
	    do \
	    $(INSTALL_DATA) $$j $(SCRIPT_INSTALL_DIR)/http2.4; \
	    done;
	@@echo "Installing library opt0.4 directory";
	@@for j in $(TOP_DIR)/library/opt/*.tcl ; \
	    do \
	    $(INSTALL_DATA) $$j $(SCRIPT_INSTALL_DIR)/opt0.4; \
	    done;
	@@echo "Installing library msgcat1.3 directory";
	@@for j in $(TOP_DIR)/library/msgcat/*.tcl ; \
	    do \
	    $(INSTALL_DATA) $$j $(SCRIPT_INSTALL_DIR)/msgcat1.3; \
	    done;
	@@echo "Installing library tcltest2.2 directory";
	@@for j in $(TOP_DIR)/library/tcltest/*.tcl ; \
	    do \
	    $(INSTALL_DATA) $$j $(SCRIPT_INSTALL_DIR)/tcltest2.2; \
d639 1
a639 1
	    chmod 444 $(MAN1_INSTALL_DIR)/$$i; \
d642 1
a642 1
	@@$(UNIX_DIR)/mkLinks $(MKLINKS_FLAGS) $(MAN1_INSTALL_DIR)
d649 1
a649 1
	    chmod 444 $(MAN3_INSTALL_DIR)/$$i; \
d652 1
a652 1
	@@$(UNIX_DIR)/mkLinks $(MKLINKS_FLAGS) $(MAN3_INSTALL_DIR)
d658 2
a659 2
		    $$i > $(MANN_INSTALL_DIR)/$$i; \
	    chmod 444 $(MANN_INSTALL_DIR)/$$i; \
d662 1
a662 1
	@@$(UNIX_DIR)/mkLinks $(MKLINKS_FLAGS) $(MANN_INSTALL_DIR)
d664 1
a664 1
Makefile: $(UNIX_DIR)/Makefile.in $(DLTEST_DIR)/Makefile.in
d667 4
d674 1
a674 1
	cd dltest ; $(MAKE) clean
d679 1
a679 1
	cd dltest ; $(MAKE) distclean
d684 3
d876 3
d930 1
a930 1
tclUtf.o: $(GENERIC_DIR)/tclUtf.c $(GENERIC_DIR)/tclUniData.c
a950 6
tclThreadAlloc.o: $(GENERIC_DIR)/tclThreadAlloc.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclThreadAlloc.c

tclThreadJoin.o: $(GENERIC_DIR)/tclThreadJoin.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclThreadJoin.c

d984 13
d998 1
a998 1
	$(CC) -c $(CC_SWITCHES) -DTCL_LIBRARY=\"${TCL_LIBRARY}\" \
a1001 4
# This is the CFBundle interface.  It is only used on Mac OS X.
tclMacOSXBundle.o: $(MAC_OSX_DIR)/tclMacOSXBundle.c
	$(CC) -c $(CC_SWITCHES) $(MAC_OSX_DIR)/tclMacOSXBundle.c

d1010 1
a1010 1
		${CC_SEARCH_FLAGS} -L/usr/openwin/lib -lXt -o xttest
d1028 3
a1048 3
strtoll.o: $(COMPAT_DIR)/strtoll.c
	$(CC) -c $(STUB_CC_SWITCHES) $(COMPAT_DIR)/strtoll.c

a1051 3
strtoull.o: $(COMPAT_DIR)/strtoull.c
	$(CC) -c $(STUB_CC_SWITCHES) $(COMPAT_DIR)/strtoull.c

d1074 2
a1075 3
	@@echo "Warning: tclStubInit.c may be out of date."
	@@echo "Developers may want to run \"make genstubs\" to regenerate."
	@@echo "This warning can be safely ignored, do not report as a bug!"
a1098 18
# Target to check that all public APIs which are not command
# implementations have an entry in section three of the distributed
# manpages.
#

checkdoc:
	-@@for i in `nm -p $(TCL_LIB_FILE) | awk '$$3 ~ /Tcl_/ { print $$3 }' \
		| grep -v 'Cmd$$' | sort -n`; do \
		match=0; \
		for j in $(TOP_DIR)/doc/*.3; do \
		    if [ `grep '\-' $$j | grep -c $$i` -gt 0 ]; then \
			match=1; \
		    fi; \
		done; \
		if [ $$match -eq 0 ]; then echo $$i; fi \
	done

#
a1127 5
mklinks:
	$(TCL_EXE) $(UNIX_DIR)/mkLinks.tcl \
		$(UNIX_DIR)/../doc/*.[13n] > $(UNIX_DIR)/mkLinks
	chmod +x $(UNIX_DIR)/mkLinks

d1134 4
a1137 4
DISTROOT = /tmp/dist
DISTNAME = tcl${VERSION}${PATCH_LEVEL}
ZIPNAME	 = tcl${MAJOR_VERSION}${MINOR_VERSION}${PATCH_LEVEL}.zip
DISTDIR	 = $(DISTROOT)/$(DISTNAME)
d1140 1
a1140 2

dist: $(UNIX_DIR)/configure mklinks
d1142 2
a1143 1
	mkdir -p $(DISTDIR)/unix
d1145 1
a1151 1
		$(UNIX_DIR)/mkLinks \
d1156 4
d1166 1
a1166 2
		$(TOP_DIR)/ChangeLog.[12]??? $(TOP_DIR)/license.terms \
		$(DISTDIR)
d1170 1
a1170 1
	for i in http1.0 http opt msgcat reg dde tcltest; \
d1189 3
d1194 2
a1195 1
	cp $(TOP_DIR)/win/configure.in $(TOP_DIR)/win/configure \
d1199 2
a1200 3
	cp -p $(TOP_DIR)/win/*.c $(TOP_DIR)/win/*.h \
		$(TOP_DIR)/win/*.ico $(TOP_DIR)/win/*.rc \
		$(DISTDIR)/win
a1201 1
	$(TCL_EXE) $(TOOL_DIR)/eolFix.tcl -crlf $(DISTDIR)/win/*.bat
a1202 9
	$(TCL_EXE) $(TOOL_DIR)/eolFix.tcl -crlf $(DISTDIR)/win/makefile.*
	cp -p $(TOP_DIR)/win/rules.vc $(DISTDIR)/win
	$(TCL_EXE) $(TOOL_DIR)/eolFix.tcl -crlf $(DISTDIR)/win/rules.vc
	cp -p $(TOP_DIR)/win/coffbase.txt $(DISTDIR)/win
	$(TCL_EXE) $(TOOL_DIR)/eolFix.tcl -crlf $(DISTDIR)/win/coffbase.txt
	cp -p $(TOP_DIR)/win/tcl.hpj.in $(DISTDIR)/win
	$(TCL_EXE) $(TOOL_DIR)/eolFix.tcl -crlf $(DISTDIR)/win/tcl.hpj.in
	cp -p $(TOP_DIR)/win/tcl.ds* $(DISTDIR)/win
	$(TCL_EXE) $(TOOL_DIR)/eolFix.tcl -crlf $(DISTDIR)/win/tcl.ds*
d1206 2
a1207 2
	cp -p $(TOP_DIR)/mac/tclMacProjects.sea.hqx \
		$(TOP_DIR)/mac/*.c $(TOP_DIR)/mac/*.h $(TOP_DIR)/mac/*.r \
d1210 3
a1212 2
	cp -p $(TOP_DIR)/mac/*.pch $(DISTDIR)/mac
	cp -p $(TOP_DIR)/mac/*.doc $(TOP_DIR)/mac/*.html $(DISTDIR)/mac
a1213 6
	mkdir $(DISTDIR)/macosx
	cp -p $(TOP_DIR)/macosx/Makefile \
		$(TOP_DIR)/macosx/*.c \
		$(DISTDIR)/macosx
	mkdir $(DISTDIR)/macosx/Tcl.pbproj
	cp -p $(TOP_DIR)/macosx/Tcl.pbproj/*.pbx* $(DISTDIR)/macosx/Tcl.pbproj
a1215 1
		$(UNIX_DIR)/dltest/README \
d1217 2
d1220 8
a1227 5
	cp -p $(TOP_DIR)/tools/Makefile.in $(TOP_DIR)/tools/README \
		$(TOP_DIR)/tools/configure $(TOP_DIR)/tools/configure.in \
		$(TOP_DIR)/tools/*.tcl $(TOP_DIR)/tools/man2tcl.c \
		$(TOP_DIR)/tools/tcl.wse.in $(TOP_DIR)/tools/*.bmp \
		$(TOP_DIR)/tools/tcl.hpj.in \
a1228 2
	$(TCL_EXE) $(TOOL_DIR)/eolFix.tcl -crlf $(DISTDIR)/tools/tcl.hpj.in \
		$(DISTDIR)/tools/tcl.wse.in
@


1.4
log
@	* unix/Makefile.in (TCL_RANLIB): Renamed from just "RANLIB".
	Changed all references to "RANLIB" to "TCL_RANLIB" so that
	toplevel Makefile doesn't override our own settings.
@
text
@@


1.4.16.1
log
@2002-12-23  David Carlton  <carlton@@math.stanford.edu>

	* Merge from mainline; tag is carlton_dictionary-20021223-merge.
@
text
@@


1.4.16.2
log
@2003-02-07  David Carlton  <carlton@@math.stanford.edu>

	* Merge with mainline; tag is carlton_dictionary-20030207-merge.
@
text
@a10 3
MAJOR_VERSION		= @@TCL_MAJOR_VERSION@@
MINOR_VERSION		= @@TCL_MINOR_VERSION@@
PATCH_LEVEL		= @@TCL_PATCH_LEVEL@@
a39 3
# Path for the platform independent Tcl scripting libraries:
# REDHAT LOCAL
#TCL_LIBRARY		= $(prefix)/lib/tcl$(VERSION)
a40 1
# END REDHAT LOCAL
d49 1
a49 1
LIB_INSTALL_DIR		= $(INSTALL_ROOT)$(libdir)
d54 3
d58 1
a58 1
INCLUDE_INSTALL_DIR	= $(INSTALL_ROOT)$(includedir)
d61 1
a61 1
MAN_INSTALL_DIR		= $(INSTALL_ROOT)$(mandir)
d89 6
a94 4
#CFLAGS			= $(CFLAGS_DEBUG)
#CFLAGS			= $(CFLAGS_OPTIMIZE)
#CFLAGS			= $(CFLAGS_DEBUG) $(CFLAGS_OPTIMIZE)
CFLAGS			= @@CFLAGS@@ @@CFLAGS_DEFAULT@@
d97 3
a99 3
LDFLAGS_DEBUG		= @@LDFLAGS_DEBUG@@
LDFLAGS_OPTIMIZE	= @@LDFLAGS_OPTIMIZE@@
LDFLAGS			= @@LDFLAGS@@ @@LDFLAGS_DEFAULT@@
d130 1
a130 1
UNIX_OBJS = tclUnixChan.o tclUnixEvent.o tclUnixFCmd.o \
d138 3
a140 4
# lines or call configure with --enable-symbols=mem
# Warning:  if you enable memory debugging, you must do it *everywhere*,
# including all the code that calls Tcl, and you must use ckalloc and
# ckfree everywhere instead of malloc and free.
d144 3
a149 3
# Generic stub lib name used in rules that apply to tcl and tk
STUB_LIB_FILE		= ${TCL_STUB_LIB_FILE}

d153 2
a154 2
# To enable compilation debugging reverse the comment characters on one
# of the following lines or call configure with --enable-symbols=compile
d156 1
d166 1
a166 1
SHELL			= /bin/sh
d173 14
a186 2
INSTALL_STRIP_PROGRAM   = -s
INSTALL_STRIP_LIBRARY  = -S -S
a189 1
INSTALL_LIBRARY		= ${INSTALL}
d192 5
a196 5
# TCL_EXE is the name of a tclsh executable that is available *BEFORE*
# running make for the first time. Certain build targets (make genstubs)
# need it to be available on the PATH. This executable should *NOT* be
# required just to do a normal build although it can be required to run
# make dist.
d205 13
a217 17
STLIB_LD		= @@STLIB_LD@@
SHLIB_LD		= @@SHLIB_LD@@
SHLIB_CFLAGS		= @@SHLIB_CFLAGS@@
SHLIB_LD_FLAGS		= @@SHLIB_LD_FLAGS@@
SHLIB_LD_LIBS		= @@SHLIB_LD_LIBS@@
TCL_SHLIB_LD_EXTRAS	= @@TCL_SHLIB_LD_EXTRAS@@

SHLIB_SUFFIX		= @@SHLIB_SUFFIX@@
#SHLIB_SUFFIX		=

DLTEST_TARGETS		= dltest.marker

# Additional search flags needed to find the various shared libraries
# at run-time.  The first symbol is for use when creating a binary
# with cc, and the second is for use when running ld directly.
CC_SEARCH_FLAGS	= @@CC_SEARCH_FLAGS@@
LD_SEARCH_FLAGS	= @@LD_SEARCH_FLAGS@@
a229 3
# Generic lib name used in rules that apply to tcl and tk
LIB_FILE		= ${TCL_LIB_FILE}

a235 3
# support for embedded libraries on Darwin / Mac OS X
DYLIB_INSTALL_DIR	= ${LIB_RUNTIME_DIR}

d246 1
a246 1
RANLIB			= @@RANLIB@@
a252 1
MAC_OSX_DIR		= $(TOP_DIR)/macosx
d258 1
a259 14
#CC			= purify -best-effort @@CC@@ -DPURIFY

# Flags to be passed to mkLinks to control whether the manpages
# should be compressed and linked with softlinks
MKLINKS_FLAGS           = @@MKLINKS_FLAGS@@

#----------------------------------------------------------------
# The information below is usually usable as is.  The configure
# script won't modify it and it only exists to make working
# around selected rare system configurations easier.
#----------------------------------------------------------------

GDB			= gdb
DDD			= ddd
d268 1
a268 1
CC_SWITCHES = ${CFLAGS} ${CFLAGS_WARNING} ${SHLIB_CFLAGS} \
d274 1
a274 1
STUB_CC_SWITCHES = ${CFLAGS} ${CFLAGS_WARNING} ${SHLIB_CFLAGS} \
d279 1
a279 1
LIBS		= @@DL_LIBS@@ @@LIBS@@ $(MATH_LIBS)
d305 1
a305 2
	 tclThreadAlloc.o tclThreadJoin.o tclStubInit.o tclStubLib.o \
	tclTimer.o tclUtf.o tclUtil.o tclVar.o
d309 1
a309 2
OBJS = ${GENERIC_OBJS} ${UNIX_OBJS} ${NOTIFY_OBJS} ${COMPAT_OBJS} \
        @@DL_OBJS@@ @@PLAT_OBJS@@
a385 2
	$(GENERIC_DIR)/tclThreadAlloc.c \
	$(GENERIC_DIR)/tclThreadJoin.c \
d398 1
d422 3
a424 6
MAC_OSX_SRCS = \
	$(MAC_OSX_DIR)/tclMacOSXBundle.c

# Note: don't include DL_SRCS or MAC_OSX_SRCS in SRCS: most of those
# files won't compile on the current machine, and they will cause
# problems for things like "make depend".
d430 1
a430 1
binaries: ${LIB_FILE} $(STUB_LIB_FILE) $(TCL_BUILD_EXP_FILE) tclsh
d438 2
a439 2
${LIB_FILE}: ${OBJS} ${STUB_LIB_FILE}
	rm -f $@@
d441 1
d444 1
a444 1
	rm -f $@@
d446 1
d462 1
a462 6
		${CC_SEARCH_FLAGS} -o tclsh

# Resetting the LIB_RUNTIME_DIR below is required so that
# the generated tcltest executable gets the build directory
# burned into its ld search path. This keeps tcltest from
# picking up an already installed version of the Tcl library.
d465 2
a466 1
	$(MAKE) tcltest-real LIB_RUNTIME_DIR=`pwd`
a467 3
tcltest-real:
	${CC} ${LDFLAGS} ${TCLTEST_OBJS} @@TCL_BUILD_LIB_SPEC@@ ${LIBS} \
		${CC_SEARCH_FLAGS} -o tcltest
a471 3
# Specifying TESTFLAGS on the command line is the standard way to pass
# args to tcltest, ie:
#	% make test TESTFLAGS="-verbose bps -file fileName.test"
d474 3
a476 1
	@@LD_LIBRARY_PATH_VAR@@=`pwd`:${@@LD_LIBRARY_PATH_VAR@@}; export @@LD_LIBRARY_PATH_VAR@@; \
d478 1
a478 1
	./tcltest $(TOP_DIR)/tests/all.tcl $(TESTFLAGS) $(TCLTESTARGS)
d482 3
a484 1
	@@LD_LIBRARY_PATH_VAR@@=`pwd`:${@@LD_LIBRARY_PATH_VAR@@}; export @@LD_LIBRARY_PATH_VAR@@; \
a487 28
# Useful target for running the test suite with an unwritable current
# directory...
ro-test: tcltest
	@@LD_LIBRARY_PATH_VAR@@=`pwd`:${@@LD_LIBRARY_PATH_VAR@@}; export @@LD_LIBRARY_PATH_VAR@@; \
	TCL_LIBRARY="${TCL_BUILDTIME_LIBRARY}"; export TCL_LIBRARY; \
	echo 'exec chmod -w .;package require tcltest;tcltest::temporaryDirectory /tmp;source ../tests/all.tcl;exec chmod +w .' | ./tcltest

# This target can be used to run tclsh from the build directory
# via `make shell SCRIPT=/tmp/foo.tcl`
shell: tclsh
	@@@@LD_LIBRARY_PATH_VAR@@=`pwd`:${@@LD_LIBRARY_PATH_VAR@@}; export @@LD_LIBRARY_PATH_VAR@@; \
	TCL_LIBRARY="${TCL_BUILDTIME_LIBRARY}"; export TCL_LIBRARY; \
	./tclsh $(SCRIPT)

# This target can be used to run tclsh inside either gdb or insight
gdb: tclsh
	@@echo "set env @@LD_LIBRARY_PATH_VAR@@=`pwd`:${@@LD_LIBRARY_PATH_VAR@@}" > gdb.run
	@@echo "set env TCL_LIBRARY=${TCL_BUILDTIME_LIBRARY}" >> gdb.run
	$(GDB) ./tclsh --command=gdb.run
	rm gdb.run

# This target can be used to run tclsh inside ddd
ddd: tclsh
	@@echo "set env @@LD_LIBRARY_PATH_VAR@@=`pwd`:${@@LD_LIBRARY_PATH_VAR@@}" > gdb.run
	@@echo "set env TCL_LIBRARY=${TCL_BUILDTIME_LIBRARY}" >> gdb.run
	$(DDD) -command=gdb.run ./tclsh
	rm gdb.run

d507 1
a507 1
	    -e 's?SCCSID?RCS: @@(#) ?' \
d514 1
a514 1
# The following target generates the shared libraries in dltest/ that
d517 15
a531 5
# on this platform. The Makefile in the dltest subdirectory creates
# the dltest.marker file in this directory after a successful build.

dltest.marker:
	cd dltest ; $(MAKE)
d536 1
a536 3
	$(MAKE) install \
		INSTALL_PROGRAM="$(INSTALL_PROGRAM) ${INSTALL_STRIP_PROGRAM}" \
		INSTALL_LIBRARY="$(INSTALL_LIBRARY) ${INSTALL_STRIP_LIBRARY}"
d555 4
a558 3
	@@echo "Installing $(LIB_FILE) to $(LIB_INSTALL_DIR)/"
	@@@@INSTALL_LIB@@
	@@chmod 555 $(LIB_INSTALL_DIR)/$(LIB_FILE)
d568 5
a572 4
	@@if test "$(STUB_LIB_FILE)" != "" ; then \
	    echo "Installing $(STUB_LIB_FILE) to $(LIB_INSTALL_DIR)/"; \
	    @@INSTALL_STUB_LIB@@ ; \
	fi
d574 3
a576 2
install-libraries: libraries
	@@for i in $(INCLUDE_INSTALL_DIR) $(SCRIPT_INSTALL_DIR); \
d585 1
a585 1
	@@for i in http2.4 http1.0 opt0.4 encoding msgcat1.3 tcltest2.2; \
d598 1
a598 2
	@@for i in $(GENERIC_DIR)/tcl.h $(GENERIC_DIR)/tclDecls.h \
		$(GENERIC_DIR)/tclPlatDecls.h ; \
d607 1
a607 2
	@@echo "Installing library http1.0 directory";
	@@for j in $(TOP_DIR)/library/http1.0/*.tcl ; \
d609 5
a613 21
	    $(INSTALL_DATA) $$j $(SCRIPT_INSTALL_DIR)/http1.0; \
	    done;
	@@echo "Installing library http2.4 directory";
	@@for j in $(TOP_DIR)/library/http/*.tcl ; \
	    do \
	    $(INSTALL_DATA) $$j $(SCRIPT_INSTALL_DIR)/http2.4; \
	    done;
	@@echo "Installing library opt0.4 directory";
	@@for j in $(TOP_DIR)/library/opt/*.tcl ; \
	    do \
	    $(INSTALL_DATA) $$j $(SCRIPT_INSTALL_DIR)/opt0.4; \
	    done;
	@@echo "Installing library msgcat1.3 directory";
	@@for j in $(TOP_DIR)/library/msgcat/*.tcl ; \
	    do \
	    $(INSTALL_DATA) $$j $(SCRIPT_INSTALL_DIR)/msgcat1.3; \
	    done;
	@@echo "Installing library tcltest2.2 directory";
	@@for j in $(TOP_DIR)/library/tcltest/*.tcl ; \
	    do \
	    $(INSTALL_DATA) $$j $(SCRIPT_INSTALL_DIR)/tcltest2.2; \
d639 1
a639 1
	    chmod 444 $(MAN1_INSTALL_DIR)/$$i; \
d642 1
a642 1
	@@$(UNIX_DIR)/mkLinks $(MKLINKS_FLAGS) $(MAN1_INSTALL_DIR)
d649 1
a649 1
	    chmod 444 $(MAN3_INSTALL_DIR)/$$i; \
d652 1
a652 1
	@@$(UNIX_DIR)/mkLinks $(MKLINKS_FLAGS) $(MAN3_INSTALL_DIR)
d658 2
a659 2
		    $$i > $(MANN_INSTALL_DIR)/$$i; \
	    chmod 444 $(MANN_INSTALL_DIR)/$$i; \
d662 1
a662 1
	@@$(UNIX_DIR)/mkLinks $(MKLINKS_FLAGS) $(MANN_INSTALL_DIR)
d664 1
a664 1
Makefile: $(UNIX_DIR)/Makefile.in $(DLTEST_DIR)/Makefile.in
d667 4
d674 1
a674 1
	cd dltest ; $(MAKE) clean
d679 1
a679 1
	cd dltest ; $(MAKE) distclean
d684 3
d876 3
d930 1
a930 1
tclUtf.o: $(GENERIC_DIR)/tclUtf.c $(GENERIC_DIR)/tclUniData.c
a950 6
tclThreadAlloc.o: $(GENERIC_DIR)/tclThreadAlloc.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclThreadAlloc.c

tclThreadJoin.o: $(GENERIC_DIR)/tclThreadJoin.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclThreadJoin.c

d984 1
a984 1
# REDHAT LOCAL
d995 1
a995 1
# END REDHAT LOCAL
a1001 4
# This is the CFBundle interface.  It is only used on Mac OS X.
tclMacOSXBundle.o: $(MAC_OSX_DIR)/tclMacOSXBundle.c
	$(CC) -c $(CC_SWITCHES) $(MAC_OSX_DIR)/tclMacOSXBundle.c

d1010 1
a1010 1
		${CC_SEARCH_FLAGS} -L/usr/openwin/lib -lXt -o xttest
d1028 3
a1048 3
strtoll.o: $(COMPAT_DIR)/strtoll.c
	$(CC) -c $(STUB_CC_SWITCHES) $(COMPAT_DIR)/strtoll.c

a1051 3
strtoull.o: $(COMPAT_DIR)/strtoull.c
	$(CC) -c $(STUB_CC_SWITCHES) $(COMPAT_DIR)/strtoull.c

d1074 2
a1075 3
	@@echo "Warning: tclStubInit.c may be out of date."
	@@echo "Developers may want to run \"make genstubs\" to regenerate."
	@@echo "This warning can be safely ignored, do not report as a bug!"
a1098 18
# Target to check that all public APIs which are not command
# implementations have an entry in section three of the distributed
# manpages.
#

checkdoc:
	-@@for i in `nm -p $(TCL_LIB_FILE) | awk '$$3 ~ /Tcl_/ { print $$3 }' \
		| grep -v 'Cmd$$' | sort -n`; do \
		match=0; \
		for j in $(TOP_DIR)/doc/*.3; do \
		    if [ `grep '\-' $$j | grep -c $$i` -gt 0 ]; then \
			match=1; \
		    fi; \
		done; \
		if [ $$match -eq 0 ]; then echo $$i; fi \
	done

#
a1127 5
mklinks:
	$(TCL_EXE) $(UNIX_DIR)/mkLinks.tcl \
		$(UNIX_DIR)/../doc/*.[13n] > $(UNIX_DIR)/mkLinks
	chmod +x $(UNIX_DIR)/mkLinks

d1134 4
a1137 4
DISTROOT = /tmp/dist
DISTNAME = tcl${VERSION}${PATCH_LEVEL}
ZIPNAME	 = tcl${MAJOR_VERSION}${MINOR_VERSION}${PATCH_LEVEL}-src.zip
DISTDIR	 = $(DISTROOT)/$(DISTNAME)
d1140 1
a1140 2

dist: $(UNIX_DIR)/configure mklinks
d1142 2
a1143 1
	mkdir -p $(DISTDIR)/unix
d1145 1
a1151 1
		$(UNIX_DIR)/mkLinks \
d1156 4
d1166 1
a1166 2
		$(TOP_DIR)/ChangeLog.[12]??? $(TOP_DIR)/license.terms \
		$(DISTDIR)
d1170 1
a1170 1
	for i in http1.0 http opt msgcat reg dde tcltest; \
d1189 3
d1194 2
a1195 1
	cp $(TOP_DIR)/win/configure.in $(TOP_DIR)/win/configure \
d1199 2
a1200 3
	cp -p $(TOP_DIR)/win/*.c $(TOP_DIR)/win/*.h \
		$(TOP_DIR)/win/*.ico $(TOP_DIR)/win/*.rc \
		$(DISTDIR)/win
a1201 1
	$(TCL_EXE) $(TOOL_DIR)/eolFix.tcl -crlf $(DISTDIR)/win/*.bat
a1202 9
	$(TCL_EXE) $(TOOL_DIR)/eolFix.tcl -crlf $(DISTDIR)/win/makefile.*
	cp -p $(TOP_DIR)/win/rules.vc $(DISTDIR)/win
	$(TCL_EXE) $(TOOL_DIR)/eolFix.tcl -crlf $(DISTDIR)/win/rules.vc
	cp -p $(TOP_DIR)/win/coffbase.txt $(DISTDIR)/win
	$(TCL_EXE) $(TOOL_DIR)/eolFix.tcl -crlf $(DISTDIR)/win/coffbase.txt
	cp -p $(TOP_DIR)/win/tcl.hpj.in $(DISTDIR)/win
	$(TCL_EXE) $(TOOL_DIR)/eolFix.tcl -crlf $(DISTDIR)/win/tcl.hpj.in
	cp -p $(TOP_DIR)/win/tcl.ds* $(DISTDIR)/win
	$(TCL_EXE) $(TOOL_DIR)/eolFix.tcl -crlf $(DISTDIR)/win/tcl.ds*
d1206 2
a1207 2
	cp -p $(TOP_DIR)/mac/tcl*.sea.hqx \
		$(TOP_DIR)/mac/*.c $(TOP_DIR)/mac/*.h $(TOP_DIR)/mac/*.r \
d1210 3
a1212 2
	cp -p $(TOP_DIR)/mac/*.pch $(DISTDIR)/mac
	cp -p $(TOP_DIR)/mac/*.doc $(TOP_DIR)/mac/*.html $(DISTDIR)/mac
a1213 6
	mkdir $(DISTDIR)/macosx
	cp -p $(TOP_DIR)/macosx/Makefile \
		$(TOP_DIR)/macosx/*.c \
		$(DISTDIR)/macosx
	mkdir $(DISTDIR)/macosx/Tcl.pbproj
	cp -p $(TOP_DIR)/macosx/Tcl.pbproj/*.pbx* $(DISTDIR)/macosx/Tcl.pbproj
a1215 1
		$(UNIX_DIR)/dltest/README \
d1217 2
d1220 8
a1227 5
	cp -p $(TOP_DIR)/tools/Makefile.in $(TOP_DIR)/tools/README \
		$(TOP_DIR)/tools/configure $(TOP_DIR)/tools/configure.in \
		$(TOP_DIR)/tools/*.tcl $(TOP_DIR)/tools/man2tcl.c \
		$(TOP_DIR)/tools/tcl.wse.in $(TOP_DIR)/tools/*.bmp \
		$(TOP_DIR)/tools/tcl.hpj.in \
a1228 2
	$(TCL_EXE) $(TOOL_DIR)/eolFix.tcl -crlf $(DISTDIR)/tools/tcl.hpj.in \
		$(DISTDIR)/tools/tcl.wse.in
d1236 6
a1241 3
	rm -f $(DISTROOT)/$(DISTNAME)-src.tar.gz $(DISTROOT)/$(ZIPNAME)
	cd $(DISTROOT); tar cf $(DISTNAME)-src.tar $(DISTNAME); \
		gzip -9 $(DISTNAME)-src.tar; zip -qr8 $(ZIPNAME) $(DISTNAME)
d1252 3
a1254 1
	rm -f $(DISTROOT)/$(DISTNAME)-src.tar.gz $(DISTROOT)/$(ZIPNAME)
d1257 3
a1259 2
	cd $(DISTROOT); tar cf $(DISTNAME)-src.tar tcl${VERSION}; \
		gzip -9 $(DISTNAME)-src.tar; zip -r8 $(ZIPNAME) tcl${VERSION}
@


1.3
log
@	* Makefile.in: Added TCL_CFLAGS for flags that
	shouldn't be supressed by the top level Makefile's
	CFLAGS settings.
@
text
@d246 1
a246 1
RANLIB			= @@RANLIB@@
d441 1
a441 1
	$(RANLIB) ${TCL_LIB_FILE}
d446 1
a446 1
	$(RANLIB) ${STUB_LIB_FILE}
d557 1
a557 1
	@@(cd $(LIB_INSTALL_DIR); $(RANLIB) $(TCL_LIB_FILE))
@


1.2
log
@touched all Tcl files to ease next import.
@
text
@d89 6
a94 4
#CFLAGS			= $(CFLAGS_DEBUG)
#CFLAGS			= $(CFLAGS_OPTIMIZE)
#CFLAGS			= $(CFLAGS_DEBUG) $(CFLAGS_OPTIMIZE)
CFLAGS			= @@CFLAGS@@ @@CFLAGS_DEFAULT@@
d268 1
a268 1
CC_SWITCHES = ${CFLAGS} ${CFLAGS_WARNING} ${SHLIB_CFLAGS} \
d274 1
a274 1
STUB_CC_SWITCHES = ${CFLAGS} ${CFLAGS_WARNING} ${SHLIB_CFLAGS} \
@


1.1
log
@Initial revision
@
text
@d8 1
a8 1
# SCCS: @@(#) Makefile.in 1.190 97/11/05 10:57:38
d10 1
a10 3
# Current Tcl version;  used in various names.

VERSION = @@TCL_VERSION@@
d23 2
a24 1
# to the "configure" script.
d26 6
a31 2
prefix =	@@prefix@@
exec_prefix =	@@exec_prefix@@
d38 1
a38 1
INSTALL_ROOT =
a39 3
# Directory from which applications will reference the library of Tcl
# scripts (note: you can set the TCL_LIBRARY environment variable at
# run-time to override this value):
d42 2
a43 2
# Package search path.
TCL_PACKAGE_PATH = @@TCL_PACKAGE_PATH@@
d45 2
a46 2
# Path name to use when installing library scripts:
SCRIPT_INSTALL_DIR =	$(INSTALL_ROOT)$(TCL_LIBRARY)
d51 2
a52 2
# Path to use at runtime to refer to LIB_INSTALL_DIR:
LIB_RUNTIME_DIR =	@@libdir@@
d64 1
a64 1
MAN1_INSTALL_DIR =	$(MAN_INSTALL_DIR)/man1
d68 1
a68 1
MAN3_INSTALL_DIR =	$(MAN_INSTALL_DIR)/man3
d72 7
a78 1
MANN_INSTALL_DIR =	$(MAN_INSTALL_DIR)/mann
d80 2
a81 3
# To change the compiler switches, for example to change from -O
# to -g, change the following line:
#CFLAGS = -O
d83 15
a97 2
# CYGNUS LOCAL: Set CFLAGS from configure script.
CFLAGS = @@CFLAGS@@
d101 2
a102 2
PROTO_FLAGS =
#PROTO_FLAGS = -DNO_PROTOTYPE
d107 4
a110 4
MATH_FLAGS =
#MATH_FLAGS = -DTCL_NO_MATH
MATH_LIBS = @@MATH_LIBS@@
#MATH_LIBS =
d130 1
a130 1
	tclUnixTime.o tclUnixInit.o
d139 11
a149 2
MEM_DEBUG_FLAGS =
#MEM_DEBUG_FLAGS = -DTCL_MEM_DEBUG
d153 8
a160 3
COMPILE_DEBUG_FLAGS =
#COMPILE_DEBUG_FLAGS = -DTCL_COMPILE_STATS
#COMPILE_DEBUG_FLAGS = -DTCL_COMPILE_DEBUG -DTCL_COMPILE_STATS
d182 15
d203 1
d205 1
d215 1
a215 1
DLTEST_TARGETS = dltest/pkg5${SHLIB_SUFFIX} dltest/Makefile
d222 2
a223 2
BUILD_DLTEST = @@BUILD_DLTEST@@
#BUILD_DLTEST =
d225 2
a226 2
TCL_LIB_FILE = @@TCL_LIB_FILE@@
#TCL_LIB_FILE = libtcl.a
d228 5
a232 2
TCL_LIB_FLAG = @@TCL_LIB_FLAG@@
#TCL_LIB_FLAG = -ltcl
d240 15
a254 1
COMPAT_OBJS =		@@LIBOBJS@@
d256 2
a257 10
AC_FLAGS =		@@DEFS@@
RANLIB =		@@RANLIB@@
SRC_DIR =		@@srcdir@@
TOP_DIR =		@@srcdir@@/..
GENERIC_DIR = 		$(TOP_DIR)/generic
COMPAT_DIR =		$(TOP_DIR)/compat
TOOL_DIR =		$(TOP_DIR)/tools
DLTEST_DIR =		@@srcdir@@/dltest
UNIX_DIR = 		@@srcdir@@
CC =			@@CC@@
d266 7
a272 1
CC_SWITCHES =	${CFLAGS} ${CFLAGS_WARNING} ${TCL_SHLIB_CFLAGS} \
d277 1
a277 1
LIBS =		@@DL_LIBS@@ @@LIBS@@ $(MATH_LIBS) -lc
d279 1
a279 1
DEPEND_SWITCHES = ${CFLAGS} -I${GENERIC_DIR} -I${SRC_DIR} \
d286 2
a287 2
TCLTEST_OBJS = tclTestInit.o tclTest.o tclTestObj.o \
               tclTestProcBodyObj.o tclUnixTest.o
d289 17
a305 13
XTTEST_OBJS = tclTest.o tclTestObj.o tclTestProcBodyObj.o \
        tclUnixTest.o tclXtNotify.o \
	tclXtTest.o xtTestInit.o

GENERIC_OBJS = panic.o regexp.o tclAsync.o tclBasic.o tclBinary.o tclCkalloc.o \
	tclClock.o tclCmdAH.o tclCmdIL.o tclCmdMZ.o tclCompExpr.o \
	tclCompile.o tclDate.o tclEnv.o tclEvent.o tclExecute.o \
	tclFCmd.o tclFileName.o tclGet.o tclHash.o tclHistory.o \
	tclIndexObj.o tclInterp.o tclIO.o tclIOCmd.o tclIOSock.o \
	tclIOUtil.o tclLink.o tclListObj.o tclLoad.o tclMain.o tclNamesp.o \
	tclNotify.o tclObj.o tclParse.o tclPipe.o tclPkg.o tclPosixStr.o \
	tclPreserve.o tclProc.o tclStringObj.o tclTimer.o tclUtil.o tclVar.o \
	tclResolve.o
d309 4
a313 1
	$(GENERIC_DIR)/tclRegexp.h \
d315 1
d317 4
d322 1
a322 1
	$(GENERIC_DIR)/tclPatch.h
d325 5
a329 1
	$(GENERIC_DIR)/regexp.c \
d338 1
d342 1
d355 1
d360 1
d367 1
d373 1
a373 1
        $(GENERIC_DIR)/tclTestProcBodyObj.c \
d375 4
d382 2
d388 3
d405 1
d415 1
d424 1
a424 1
SRCS = $(GENERIC_SRCS) $(UNIX_SRCS)
d426 1
a426 1
all: ${TCL_LIB_FILE} tclsh
d428 1
a428 1
# CYGNUS LOCAL
d430 1
a430 2
# The shared- and unshared-library cases are separate, so that RANLIB
# can unconditionally work.
d432 1
a432 3
${TCL_SHARED_LIB_FILE}: ${OBJS}
	rm -f ${TCL_LIB_FILE}
	@@MAKE_LIB@@
d434 3
a436 1
${TCL_UNSHARED_LIB_FILE}: ${OBJS}
d441 4
a444 1
# END CYGNUS LOCAL
d459 1
a459 1
	${CC} @@LD_FLAGS@@ ${TCLSH_OBJS} @@TCL_BUILD_LIB_SPEC@@ ${LIBS} \
d463 1
a463 1
	${CC} @@LD_FLAGS@@ ${TCLTEST_OBJS} @@TCL_BUILD_LIB_SPEC@@ ${LIBS} \
a465 6
xttest:  ${XTTEST_OBJS} ${GENERIC_OBJS} ${UNIX_OBJS} ${COMPAT_OBJS} \
	@@DL_OBJS@@ ${BUILD_DLTEST}
	${CC} ${XTTEST_OBJS} ${GENERIC_OBJS} ${UNIX_OBJS} ${COMPAT_OBJS} \
		@@DL_OBJS@@ @@TCL_BUILD_LIB_SPEC@@ ${LIBS} \
		@@TCL_LD_SEARCH_FLAGS@@ -lXt -o xttest

d473 4
a476 2
	TCL_LIBRARY=${TOP_DIR}/library; export TCL_LIBRARY; \
	( echo cd $(TOP_DIR)/tests\; source all ) | ./tcltest
d479 1
a479 1
runtest:
d481 3
a483 1
	TCL_LIBRARY=${TOP_DIR}/library; export TCL_LIBRARY; \
d505 1
a505 1
	    -e 's/SCCSID/%Z\% %M\% %I\% %E\% %U\%/g' \
d508 1
d531 4
a534 1
install: install-binaries install-libraries install-man
d540 1
a540 1
install-binaries: $(TCL_LIB_FILE) tclsh
d545 1
a545 1
		mkdir $$i; \
d550 4
a553 1
	@@echo "Installing $(TCL_LIB_FILE)"
d557 8
a564 3
	@@echo "Installing tclsh"
	@@$(INSTALL_PROGRAM) tclsh $(BIN_INSTALL_DIR)/tclsh
	@@echo "Installing tclConfig.sh"
d566 5
d578 1
a578 1
		mkdir $$i; \
d583 1
a583 1
	@@for i in http2.0 http1.0 opt0.1; \
d587 1
a587 1
		mkdir $(SCRIPT_INSTALL_DIR)/$$i; \
d592 5
a596 3
	@@echo "Installing tcl.h"
	@@$(INSTALL_DATA) $(GENERIC_DIR)/tcl.h $(INCLUDE_INSTALL_DIR)/tcl.h
	@@for i in $(TOP_DIR)/library/*.tcl $(TOP_DIR)/library/tclIndex $(UNIX_DIR)/tclAppInit.c $(UNIX_DIR)/ldAix; \
d598 1
a598 2
	    echo "Installing $$i"; \
	    $(INSTALL_DATA) $$i $(SCRIPT_INSTALL_DIR); \
d600 2
a601 13
	@@for i in http2.0 http1.0 opt0.1; \
	    do \
	    for j in $(TOP_DIR)/library/$$i/*.tcl ; \
		do \
		echo "Installing $$j"; \
		$(INSTALL_DATA) $$j $(SCRIPT_INSTALL_DIR)/$$i; \
		done; \
	    done;

# CYGNUS LOCAL: install-minimal target.
install-minimal:
	@@for i in $(INSTALL_ROOT)@@datadir@@ $(INCLUDE_INSTALL_DIR) \
		$(SCRIPT_INSTALL_DIR) ; \
a602 19
	    if [ ! -d $$i ] ; then \
		echo "Making directory $$i"; \
		mkdir $$i; \
		chmod 755 $$i; \
		else true; \
		fi; \
	    done;
	@@for i in http2.0 http1.0 opt0.1; \
	    do \
	    if [ ! -d $(SCRIPT_INSTALL_DIR)/$$i ] ; then \
		echo "Making directory $(SCRIPT_INSTALL_DIR)/$$i"; \
		mkdir $(SCRIPT_INSTALL_DIR)/$$i; \
		chmod 755 $(SCRIPT_INSTALL_DIR)/$$i; \
		else true; \
		fi; \
	    done;
	@@for i in $(TOP_DIR)/library/*.tcl $(TOP_DIR)/library/tclIndex $(UNIX_DIR)/ldAix; \
	    do \
	    echo "Installing $$i"; \
d605 1
a605 1
	@@for i in http2.0 http1.0 opt0.1; \
d607 1
a609 1
		echo "Installing $$j"; \
d613 10
a622 3

install-man:
	@@for i in $(MAN_INSTALL_DIR) $(MAN1_INSTALL_DIR) $(MAN3_INSTALL_DIR) ; \
d626 1
a626 1
		mkdir $$i; \
d631 1
a633 1
	    echo "Installing doc/$$i"; \
d639 3
a641 1
	$(UNIX_DIR)/mkLinks $(MAN1_INSTALL_DIR)
a643 1
	    echo "Installing doc/$$i"; \
d649 3
d654 1
a654 3
	    echo "Installing doc/$$i"; \
	    name=`echo $$i | sed -e 's/n$$/3/'`; \
	    rm -f $(MAN3_INSTALL_DIR)/$$name; \
d656 2
a657 2
		    $$i > $(MAN3_INSTALL_DIR)/$$name; \
	    chmod 644 $(MAN3_INSTALL_DIR)/$$name; \
d659 2
a660 1
	$(UNIX_DIR)/mkLinks $(MAN3_INSTALL_DIR)
d676 1
a676 1
		SUNWtcl.* prototype
d695 3
a697 1
	$(CC) -c $(CC_SWITCHES) -DTCL_TEST $(UNIX_DIR)/tclAppInit.c
d709 3
a711 2
	$(CC) -c $(CC_SWITCHES) -DTCL_TEST -DTCL_XT_TEST \
		$(UNIX_DIR)/tclAppInit.c
d720 12
a731 2
panic.o: $(GENERIC_DIR)/panic.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/panic.c
d733 2
a734 2
regexp.o: $(GENERIC_DIR)/regexp.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/regexp.c
d739 6
d772 3
d781 3
d820 3
d835 3
d859 3
d886 6
d907 3
d913 6
d922 3
d928 3
d946 6
d976 3
d982 15
a996 2
tclUnixInit.o: $(UNIX_DIR)/tclUnixInit.c tclConfig.sh
	$(CC) -c $(CC_SWITCHES) -DTCL_LIBRARY=\"${TCL_LIBRARY}\" \
d1000 22
a1021 1
# compat binaries
d1024 1
a1024 1
	$(CC) -c $(CC_SWITCHES) $(COMPAT_DIR)/fixstrtod.c
d1027 1
a1027 1
	$(CC) -c $(CC_SWITCHES) $(COMPAT_DIR)/getcwd.c
d1030 4
a1033 1
	$(CC) -c $(CC_SWITCHES) $(COMPAT_DIR)/opendir.c
d1036 1
a1036 1
	$(CC) -c $(CC_SWITCHES) $(COMPAT_DIR)/strncasecmp.c
d1039 1
a1039 1
	$(CC) -c $(CC_SWITCHES) $(COMPAT_DIR)/strstr.c
d1042 1
a1042 1
	$(CC) -c $(CC_SWITCHES) $(COMPAT_DIR)/strtod.c
d1045 1
a1045 1
	$(CC) -c $(CC_SWITCHES) $(COMPAT_DIR)/strtol.c
d1048 1
a1048 1
	$(CC) -c $(CC_SWITCHES) $(COMPAT_DIR)/strtoul.c
d1051 1
a1051 1
	$(CC) -c $(CC_SWITCHES) $(COMPAT_DIR)/tmpnam.c
d1054 8
a1061 1
	$(CC) -c $(CC_SWITCHES) $(COMPAT_DIR)/waitpid.c
d1067 30
d1112 15
d1132 1
d1136 2
a1137 2
#$(UNIX_DIR)/configure: $(UNIX_DIR)/configure.in
#	autoconf $(UNIX_DIR)/configure.in > $(UNIX_DIR)/configure
d1147 1
d1149 1
a1149 2
		$(UNIX_DIR)/porting.notes $(UNIX_DIR)/porting.old \
		$(UNIX_DIR)/README $(UNIX_DIR)/ldAix \
d1154 2
a1155 1
	tclsh $(UNIX_DIR)/mkLinks.tcl \
d1160 1
d1163 2
a1164 2
	cp -p $(TOP_DIR)/changes $(TOP_DIR)/README* $(TOP_DIR)/license.terms \
		$(DISTDIR)
d1168 1
a1168 1
	for i in http2.0 http1.0 opt0.1; \
d1173 2
d1185 5
a1189 2
		$(TOP_DIR)/tests/all $(TOP_DIR)/tests/*.tcl \
		$(TOP_DIR)/tests/defs $(DISTDIR)/tests
d1191 6
d1198 1
a1198 1
		$(DISTDIR)/win
a1201 1
	cp -p $(TOP_DIR)/win/pkgIndex.tcl $(DISTDIR)/win
d1204 1
a1204 4
	sccs edit -s $(TOP_DIR)/mac/tclMacProjects.sea.hqx
	cp -p tclMacProjects.sea.hqx $(DISTDIR)/mac
	sccs unedit $(TOP_DIR)/mac/tclMacProjects.sea.hqx
	rm -f tclMacProjects.sea.hqx
d1217 10
d1234 4
a1237 4
	rm -f /proj/tcl/dist/$(DISTNAME).tar.Z \
		/proj/tcl/dist/$(DISTNAME).tar.gz \
		/proj/tcl/dist/$(ZIPNAME)
	cd /proj/tcl/dist; tar cf $(DISTNAME).tar $(DISTNAME); \
d1239 1
a1239 1
		compress $(DISTNAME).tar; zip -r8 $(ZIPNAME) $(DISTNAME)
d1262 12
d1280 3
a1282 1
macdist: dist
a1283 2
	tclsh $(TOOL_DIR)/man2html.tcl $(DISTDIR)/tmp ../.. tcl$(VERSION)
	mv $(DISTDIR)/tmp/tcl$(VERSION) $(DISTDIR)/html
d1285 1
a1285 2
	rm -rf $(DISTDIR)/tmp
	tclsh $(TOOL_DIR)/cvtEOL.tcl $(DISTDIR)
d1361 1
a1361 1
	| tclsh $(UNIX_DIR)/mkProto.tcl \
@


1.1.1.1
log
@import dejagnu-1999-11-08 snapshot
@
text
@@


1.1.1.2
log
@Tcl 8.3 upgrade
@
text
@d8 1
a8 1
# RCS: @@(#) $Id: Makefile.in,v 1.9.8.10 2001/07/12 19:08:19 mdejong Exp $
d10 3
a12 1
VERSION 		= @@TCL_VERSION@@
d25 1
a25 2
# to the "configure" script.  The *dir vars are standard configure
# substitutions that are based off prefix and exec_prefix.
d27 2
a28 6
prefix			= @@prefix@@
exec_prefix		= @@exec_prefix@@
bindir			= @@bindir@@
libdir			= @@libdir@@
includedir		= @@includedir@@
mandir			= @@mandir@@
d35 1
a35 1
INSTALL_ROOT		=
d37 3
d42 2
a43 2
# Path to use at runtime to refer to LIB_INSTALL_DIR:
LIB_RUNTIME_DIR		= $(libdir)
d45 2
a46 2
# Directory in which to install the program tclsh:
BIN_INSTALL_DIR		= $(INSTALL_ROOT)$(bindir)
d51 2
a52 2
# Path name to use when installing library scripts.
SCRIPT_INSTALL_DIR	= $(INSTALL_ROOT)$(TCL_LIBRARY)
d64 1
a64 1
MAN1_INSTALL_DIR	= $(MAN_INSTALL_DIR)/man1
d68 1
a68 1
MAN3_INSTALL_DIR	= $(MAN_INSTALL_DIR)/man3
d72 1
a72 7
MANN_INSTALL_DIR	= $(MAN_INSTALL_DIR)/mann

# Package search path.
TCL_PACKAGE_PATH	= @@TCL_PACKAGE_PATH@@

# Libraries built with optimization switches have this additional extension
TCL_DBGX		= @@TCL_DBGX@@
d74 3
a76 2
# warning flags
CFLAGS_WARNING		= @@CFLAGS_WARNING@@
d78 2
a79 15
# The default switches for optimization or debugging
CFLAGS_DEBUG		= @@CFLAGS_DEBUG@@
CFLAGS_OPTIMIZE		= @@CFLAGS_OPTIMIZE@@

# To change the compiler switches, for example to change from optimization to
# debugging symbols, change the following line:
#CFLAGS			= $(CFLAGS_DEBUG)
#CFLAGS			= $(CFLAGS_OPTIMIZE)
#CFLAGS			= $(CFLAGS_DEBUG) $(CFLAGS_OPTIMIZE)
CFLAGS			= @@CFLAGS@@ @@CFLAGS_DEFAULT@@

# Flags to pass to the linker
LDFLAGS_DEBUG          = @@LDFLAGS_DEBUG@@
LDFLAGS_OPTIMIZE       = @@LDFLAGS_OPTIMIZE@@
LDFLAGS                        = @@LDFLAGS@@ @@LDFLAGS_DEFAULT@@
d83 2
a84 2
PROTO_FLAGS		=
#PROTO_FLAGS		= -DNO_PROTOTYPE
d89 4
a92 4
MATH_FLAGS		=
#MATH_FLAGS		= -DTCL_NO_MATH
MATH_LIBS		= @@MATH_LIBS@@
#MATH_LIBS		=
d112 1
a112 1
	tclUnixTime.o tclUnixInit.o tclUnixThrd.o 
d121 2
a122 11
MEM_DEBUG_FLAGS		=
#MEM_DEBUG_FLAGS	= -DTCL_MEM_DEBUG

# To enable support for stubs in Tcl.
STUB_LIB_FILE		= @@TCL_STUB_LIB_FILE@@

TCL_STUB_LIB_FILE	= @@TCL_STUB_LIB_FILE@@
#TCL_STUB_LIB_FILE	= libtclstub.a

TCL_STUB_LIB_FLAG	= @@TCL_STUB_LIB_FLAG@@
#TCL_STUB_LIB_FLAG	= -ltclstub
d126 3
a128 8
COMPILE_DEBUG_FLAGS	=
#COMPILE_DEBUG_FLAGS	= -DTCL_COMPILE_STATS
#COMPILE_DEBUG_FLAGS	= -DTCL_COMPILE_DEBUG -DTCL_COMPILE_STATS

# To compile without backward compatibility and deprecated code
# uncomment the following
NO_DEPRECATED_FLAGS	=
#NO_DEPRECATED_FLAGS	= -DTCL_NO_DEPRECATED
a149 15
# The following symbol defines additional compiler flags to enable
# writable strings, since Tcl_Eval2 writes into its arguments. Only
# applicable for GCC

INSTALL			= @@srcdir@@/install-sh -c
INSTALL_PROGRAM		= ${INSTALL}
INSTALL_DATA		= ${INSTALL} -m 644

# The following specifies which Tcl executable to use for make targets
# below.  This can generally be 'tclsh', meaning all targets will work
# once we have created the initial executable, but in some cases you
# may want to use a target without having made tclsh on these sources
# (like for make genstubs)
TCL_EXE			= tclsh

a155 1
STLIB_LD = @@STLIB_LD@@
a156 1
SHLIB_CFLAGS = @@SHLIB_CFLAGS@@
d166 1
a166 1
DLTEST_TARGETS		= dltest/pkg5${SHLIB_SUFFIX} dltest/Makefile
d173 2
a174 2
BUILD_DLTEST		= @@BUILD_DLTEST@@
#BUILD_DLTEST		=
d176 2
a177 2
TCL_LIB_FILE		= @@TCL_LIB_FILE@@
#TCL_LIB_FILE		= libtcl.a
d179 2
a180 5
TCL_LIB_FLAG		= @@TCL_LIB_FLAG@@
#TCL_LIB_FLAG		= -ltcl

TCL_EXP_FILE		= @@TCL_EXP_FILE@@
TCL_BUILD_EXP_FILE	= @@TCL_BUILD_EXP_FILE@@
d188 1
a188 15
COMPAT_OBJS		= @@LIBOBJS@@

AC_FLAGS		= @@EXTRA_CFLAGS@@ @@DEFS@@
AR			= @@AR@@
RANLIB			= @@RANLIB@@
SRC_DIR			= @@srcdir@@
TOP_DIR			= @@srcdir@@/..
GENERIC_DIR		= $(TOP_DIR)/generic
COMPAT_DIR		= $(TOP_DIR)/compat
TOOL_DIR		= $(TOP_DIR)/tools
UNIX_DIR		= $(TOP_DIR)/unix
# Must be absolute because of the cd dltest $(DLTEST_DIR)/configure below.
DLTEST_DIR		= @@TCL_SRC_DIR@@/unix/dltest
# Must be absolute to so the corresponding tcltest's tcl_library is absolute.
TCL_BUILDTIME_LIBRARY	= @@TCL_SRC_DIR@@/library
d190 10
a199 2
#CC			= purify -best-effort @@CC@@
CC			= @@CC@@
d208 1
a208 7
CC_SWITCHES = ${CFLAGS} ${CFLAGS_WARNING} ${SHLIB_CFLAGS} \
-I${GENERIC_DIR} -I${SRC_DIR} \
${AC_FLAGS} ${MATH_FLAGS} ${GENERIC_FLAGS} ${PROTO_FLAGS} ${MEM_DEBUG_FLAGS} \
${COMPILE_DEBUG_FLAGS} ${NO_DEPRECATED_FLAGS} ${ENV_FLAGS} \
-DTCL_SHLIB_EXT=\"${SHLIB_SUFFIX}\"

STUB_CC_SWITCHES = ${CFLAGS} ${CFLAGS_WARNING} ${SHLIB_CFLAGS} \
d213 1
a213 1
LIBS		= @@DL_LIBS@@ @@LIBS@@ $(MATH_LIBS) -lc
d215 1
a215 1
DEPEND_SWITCHES	= ${CFLAGS} -I${GENERIC_DIR} -I${SRC_DIR} \
d222 2
a223 2
TCLTEST_OBJS = tclTestInit.o tclTest.o tclTestObj.o tclTestProcBodyObj.o \
	tclThreadTest.o	tclUnixTest.o
d225 13
a237 17
XTTEST_OBJS = xtTestInit.o tclTest.o tclTestObj.o tclTestProcBodyObj.o \
	tclThreadTest.o	tclUnixTest.o tclXtNotify.o tclXtTest.o 

GENERIC_OBJS = regcomp.o regexec.o regfree.o regerror.o tclAlloc.o \
	tclAsync.o tclBasic.o tclBinary.o \
	tclCkalloc.o tclClock.o tclCmdAH.o tclCmdIL.o tclCmdMZ.o \
	tclCompCmds.o tclCompExpr.o tclCompile.o tclDate.o tclEncoding.o \
	tclEnv.o tclEvent.o tclExecute.o tclFCmd.o tclFileName.o tclGet.o \
	tclHash.o tclHistory.o tclIndexObj.o tclInterp.o tclIO.o tclIOCmd.o \
	tclIOGT.o tclIOSock.o tclIOUtil.o tclLink.o tclListObj.o \
	tclLiteral.o tclLoad.o tclMain.o tclNamesp.o tclNotify.o \
	tclObj.o tclPanic.o tclParse.o tclParseExpr.o tclPipe.o \
	tclPkg.o tclPosixStr.o tclPreserve.o tclProc.o tclRegexp.o \
	tclResolve.o tclResult.o tclScan.o tclStringObj.o tclThread.o \
	tclStubInit.o tclStubLib.o tclTimer.o tclUtf.o tclUtil.o tclVar.o

STUB_LIB_OBJS = tclStubLib.o ${COMPAT_OBJS}
a240 4
TCL_DECLS = \
	$(GENERIC_DIR)/tcl.decls \
	$(GENERIC_DIR)/tclInt.decls

d242 1
a243 1
	$(GENERIC_DIR)/tclDecls.h \
a244 4
	$(GENERIC_DIR)/tclIntDecls.h \
	$(GENERIC_DIR)/tclIntPlatDecls.h \
	$(GENERIC_DIR)/tclPatch.h \
	$(GENERIC_DIR)/tclPlatDecls.h \
d246 1
a246 1
	$(GENERIC_DIR)/tclRegexp.h
d249 1
a249 5
	$(GENERIC_DIR)/regcomp.c \
	$(GENERIC_DIR)/regexec.c \
	$(GENERIC_DIR)/regfree.c \
	$(GENERIC_DIR)/regerror.c \
	$(GENERIC_DIR)/tclAlloc.c \
a257 1
	$(GENERIC_DIR)/tclCompCmds.c \
a260 1
	$(GENERIC_DIR)/tclEncoding.c \
a272 1
	$(GENERIC_DIR)/tclIOGT.c \
a276 1
	$(GENERIC_DIR)/tclLiteral.c \
a282 1
        $(GENERIC_DIR)/tclParseExpr.c \
d288 1
a288 1
	$(GENERIC_DIR)/tclRegexp.c \
a289 4
	$(GENERIC_DIR)/tclResult.c \
	$(GENERIC_DIR)/tclScan.c \
	$(GENERIC_DIR)/tclStubInit.c \
	$(GENERIC_DIR)/tclStubLib.c \
a292 2
	$(GENERIC_DIR)/tclTestProcBodyObj.c \
	$(GENERIC_DIR)/tclThread.c \
a296 3
STUB_SRCS = \
	$(GENERIC_DIR)/tclStubLib.c

a310 1
	$(UNIX_DIR)/tclUnixThrd.c \
a319 1
	$(UNIX_DIR)/tclLoadDyld.c \
d328 1
a328 1
SRCS = $(GENERIC_SRCS) $(UNIX_SRCS) $(STUB_SRCS)
d330 1
a330 1
all: binaries libraries doc
d332 1
a332 1
binaries: ${TCL_LIB_FILE} $(TCL_STUB_LIB_FILE) $(TCL_BUILD_EXP_FILE) tclsh
d334 2
a335 1
libraries:
d337 3
a339 1
doc:
d341 1
a341 3
# The following target is configured by autoconf to generate either
# a shared library or non-shared library for Tcl.
${TCL_LIB_FILE}: ${OBJS} ${STUB_LIB_FILE}
d346 1
a346 4
${STUB_LIB_FILE}: ${STUB_LIB_OBJS}
	rm -f ${STUB_LIB_FILE}
	@@MAKE_STUB_LIB@@
	$(RANLIB) ${STUB_LIB_FILE}
d361 1
a361 1
	${CC} ${LDFLAGS} ${TCLSH_OBJS} @@TCL_BUILD_LIB_SPEC@@ ${LIBS} \
d365 1
a365 1
	${CC} ${LDFLAGS} ${TCLTEST_OBJS} @@TCL_BUILD_LIB_SPEC@@ ${LIBS} \
d368 6
d381 2
a382 4
	LIBPATH=`pwd`:${LIBPATH}; export LIBPATH; \
	SHLIB_PATH=`pwd`:${SHLIB_PATH}; export SHLIB_PATH; \
	TCL_LIBRARY="${TCL_BUILDTIME_LIBRARY}"; export TCL_LIBRARY; \
	./tcltest $(TOP_DIR)/tests/all.tcl $(TCLTESTARGS)
d385 1
a385 1
runtest: tcltest
d387 1
a387 3
	LIBPATH=`pwd`:${LIBPATH}; export LIBPATH; \
	SHLIB_PATH=`pwd`:${SHLIB_PATH}; export SHLIB_PATH; \
	TCL_LIBRARY="${TCL_BUILDTIME_LIBRARY}"; export TCL_LIBRARY; \
d409 1
a409 1
	    -e 's?SCCSID?RCS: @@(#) $$Id: Makefile.in,v 1.9.8.10 2001/07/12 19:08:19 mdejong Exp $$?' \
a411 1
	    -e '/#include <inttypes.h>/d' -e 's/const /CONST /g' \
d434 1
a434 4
install: install-binaries install-libraries install-doc

install-strip:
	$(MAKE) install INSTALL_PROGRAM="$(INSTALL_PROGRAM) -s"
d440 1
a440 1
install-binaries: binaries
d445 1
a445 1
		mkdir -p $$i; \
d450 1
a450 4
	@@if test ! -x $(SRC_DIR)/install-sh; then \
	    chmod +x $(SRC_DIR)/install-sh; \
	    fi
	@@echo "Installing $(TCL_LIB_FILE) to $(LIB_INSTALL_DIR)/"
d454 3
a456 8
	@@if test "$(TCL_BUILD_EXP_FILE)" != ""; then \
	    echo "Installing $(TCL_EXP_FILE) to $(LIB_INSTALL_DIR)/"; \
	    $(INSTALL_DATA) $(TCL_BUILD_EXP_FILE) \
			$(LIB_INSTALL_DIR)/$(TCL_EXP_FILE); \
	    fi
	@@echo "Installing tclsh as $(BIN_INSTALL_DIR)/tclsh$(VERSION)"
	@@$(INSTALL_PROGRAM) tclsh $(BIN_INSTALL_DIR)/tclsh$(VERSION)
	@@echo "Installing tclConfig.sh to $(LIB_INSTALL_DIR)/"
a457 5
	@@if test "$(TCL_STUB_LIB_FILE)" != "" ; then \
	    echo "Installing $(TCL_STUB_LIB_FILE) to $(LIB_INSTALL_DIR)/"; \
	    $(INSTALL_DATA) $(STUB_LIB_FILE) \
			 $(LIB_INSTALL_DIR)/$(TCL_STUB_LIB_FILE); \
	    fi
d465 1
a465 1
		mkdir -p $$i; \
d470 1
a470 1
	@@for i in http2.3 http1.0 opt0.4 encoding msgcat1.0 tcltest1.0; \
d474 1
a474 1
		mkdir -p $(SCRIPT_INSTALL_DIR)/$$i; \
d479 29
a507 5
	@@if test ! -x $(SRC_DIR)/install-sh; then \
	    chmod +x $(SRC_DIR)/install-sh; \
	    fi
	@@echo "Installing header files";
	@@for i in $(GENERIC_DIR)/tcl.h $(GENERIC_DIR)/tclDecls.h ; \
d509 6
a514 1
	    $(INSTALL_DATA) $$i $(INCLUDE_INSTALL_DIR); \
d516 1
a516 2
	@@echo "Installing library files to $(SCRIPT_INSTALL_DIR)";
	@@for i in $(TOP_DIR)/library/*.tcl $(TOP_DIR)/library/tclIndex $(UNIX_DIR)/tclAppInit.c $(UNIX_DIR)/ldAix; \
d518 1
d521 1
a521 1
	@@for i in http2.3 http1.0 opt0.4 msgcat1.0 tcltest1.0; \
a522 1
	    echo "Installing library $$i directory"; \
d525 1
d529 3
a531 10
	@@echo "Installing library encoding directory";
	@@for i in $(TOP_DIR)/library/encoding/*.enc ; do \
		$(INSTALL_DATA) $$i $(SCRIPT_INSTALL_DIR)/encoding; \
	done;

install-doc: doc
	@@if test ! -x $(UNIX_DIR)/mkLinks; then \
	    chmod +x $(UNIX_DIR)/mkLinks; \
	    fi
	@@for i in $(MAN_INSTALL_DIR) $(MAN1_INSTALL_DIR) $(MAN3_INSTALL_DIR) $(MANN_INSTALL_DIR) ; \
d535 1
a535 1
		mkdir -p $$i; \
a539 1
	@@echo "Installing top-level (.1) docs";
d542 1
d548 1
a548 3
	@@echo "Cross-linking top-level (.1) docs";
	@@$(UNIX_DIR)/mkLinks $(MAN1_INSTALL_DIR)
	@@echo "Installing C API (.3) docs";
d551 1
a556 3
	@@echo "Cross-linking C API (.3) docs";
	@@$(UNIX_DIR)/mkLinks $(MAN3_INSTALL_DIR)
	@@echo "Installing command (.n) docs";
d559 3
a561 1
	    rm -f $(MANN_INSTALL_DIR)/$$i; \
d563 2
a564 2
		    $$i > $(MAN3_INSTALL_DIR)/$$i; \
	    chmod 644 $(MAN3_INSTALL_DIR)/$$i; \
d566 1
a566 2
	@@echo "Cross-linking command (.n) docs";
	@@$(UNIX_DIR)/mkLinks $(MANN_INSTALL_DIR)
d582 1
a582 1
		$(PACKAGE).* prototype
d601 1
a601 3
	$(CC) -c $(CC_SWITCHES) \
		-DTCL_BUILDTIME_LIBRARY="\"${TCL_BUILDTIME_LIBRARY}\"" \
		-DTCL_TEST $(UNIX_DIR)/tclAppInit.c
d613 2
a614 3
	$(CC) -c $(CC_SWITCHES) \
		-DTCL_BUILDTIME_LIBRARY="\"${TCL_BUILDTIME_LIBRARY}\"" \
		-DTCL_TEST -DTCL_XT_TEST $(UNIX_DIR)/tclAppInit.c
d623 2
a624 12
REGHDRS=$(GENERIC_DIR)/regex.h $(GENERIC_DIR)/regguts.h \
		$(GENERIC_DIR)/regcustom.h
regcomp.o: $(REGHDRS) $(GENERIC_DIR)/regcomp.c $(GENERIC_DIR)/regc_lex.c \
		$(GENERIC_DIR)/regc_color.c $(GENERIC_DIR)/regc_locale.c \
		$(GENERIC_DIR)/regc_nfa.c $(GENERIC_DIR)/regc_cvec.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/regcomp.c

regexec.o: $(REGHDRS) $(GENERIC_DIR)/regexec.c $(GENERIC_DIR)/rege_dfa.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/regexec.c

regfree.o: $(REGHDRS) $(GENERIC_DIR)/regfree.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/regfree.c
d626 2
a627 2
regerror.o: $(REGHDRS) $(GENERIC_DIR)/regerrs.h $(GENERIC_DIR)/regerror.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/regerror.c
a631 6
# On unix we want to use the normal malloc/free implementation, so we
# specifically set the USE_TCLALLOC flag.

tclAlloc.o: $(GENERIC_DIR)/tclAlloc.c
	$(CC) -c $(CC_SWITCHES) -DUSE_TCLALLOC=0 $(GENERIC_DIR)/tclAlloc.c

a658 3
tclCompCmds.o: $(GENERIC_DIR)/tclCompCmds.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclCompCmds.c

a664 3
tclEncoding.o: $(GENERIC_DIR)/tclEncoding.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclEncoding.c

a700 3
tclIOGT.o: $(GENERIC_DIR)/tclIOGT.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclIOGT.c

a712 3
tclLiteral.o: $(GENERIC_DIR)/tclLiteral.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclLiteral.c

a733 3
tclLoadDyld.o: $(UNIX_DIR)/tclLoadDyld.c
	$(CC) -c $(CC_SWITCHES) $(UNIX_DIR)/tclLoadDyld.c

a757 6
tclParseExpr.o: $(GENERIC_DIR)/tclParseExpr.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclParseExpr.c

tclPanic.o: $(GENERIC_DIR)/tclPanic.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclPanic.c

a772 3
tclRegexp.o: $(GENERIC_DIR)/tclRegexp.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclRegexp.c

a775 6
tclResult.o: $(GENERIC_DIR)/tclResult.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclResult.c

tclScan.o: $(GENERIC_DIR)/tclScan.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclScan.c

a778 3
tclStubInit.o: $(GENERIC_DIR)/tclStubInit.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclStubInit.c

a781 3
tclUtf.o: $(GENERIC_DIR)/tclUtf.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclUtf.c

a796 6
tclThread.o: $(GENERIC_DIR)/tclThread.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclThread.c

tclThreadTest.o: $(GENERIC_DIR)/tclThreadTest.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclThreadTest.c

a820 3
tclUnixThrd.o: $(UNIX_DIR)/tclUnixThrd.c
	$(CC) -c $(CC_SWITCHES) $(UNIX_DIR)/tclUnixThrd.c

d824 2
a825 15
# CYGNUS LOCAL

# Don't burn a TCL_LIBRARY path into tclUnixInit.o.
# We need Tcl to be location independent and a compiled
# in path just masks problems with the search algo.

# FIXME: The TCL_PACKAGE_PATH is still compiled in,
# the only effect seems to be that the compiled in
# dir name appears on the auto_path after the tree
# has been moved.

# END CYGNUS LOCAL

tclUnixInit.o: $(UNIX_DIR)/tclUnixInit.c $(GENERIC_DIR)/tclInitScript.h tclConfig.sh
	$(CC) -c $(CC_SWITCHES) -DTCL_LIBRARY=\"\" \
d829 1
a829 22
# The following targets are not completely general.  They are provide
# purely for documentation purposes so people who are interested in
# the Xt based notifier can modify them to suit their own installation.

xttest:  ${XTTEST_OBJS} ${GENERIC_OBJS} ${UNIX_OBJS} ${COMPAT_OBJS} \
	@@DL_OBJS@@ ${BUILD_DLTEST}
	${CC} ${XTTEST_OBJS} ${GENERIC_OBJS} ${UNIX_OBJS} ${COMPAT_OBJS} \
		@@DL_OBJS@@ @@TCL_BUILD_LIB_SPEC@@ ${LIBS} \
		@@TCL_LD_SEARCH_FLAGS@@ -L/usr/openwin/lib -lXt -o xttest

tclXtNotify.o: $(UNIX_DIR)/tclXtNotify.c
	$(CC) -c $(CC_SWITCHES) -I/usr/openwin/include \
		$(UNIX_DIR)/tclXtNotify.c

tclXtTest.o: $(UNIX_DIR)/tclXtTest.c
	$(CC) -c $(CC_SWITCHES) -I/usr/openwin/include \
		$(UNIX_DIR)/tclXtTest.c

# compat binaries, these must be compiled for use in a shared library
# even though they may be placed in a static executable or library.  Since
# they are included in both the tcl library and the stub library, they
# need to be relocatable.
d832 1
a832 1
	$(CC) -c $(STUB_CC_SWITCHES) $(COMPAT_DIR)/fixstrtod.c
d835 1
a835 1
	$(CC) -c $(STUB_CC_SWITCHES) $(COMPAT_DIR)/getcwd.c
d838 1
a838 4
	$(CC) -c $(STUB_CC_SWITCHES) $(COMPAT_DIR)/opendir.c

memcmp.o: $(COMPAT_DIR)/memcmp.c
	$(CC) -c $(STUB_CC_SWITCHES) $(COMPAT_DIR)/memcmp.c
d841 1
a841 1
	$(CC) -c $(STUB_CC_SWITCHES) $(COMPAT_DIR)/strncasecmp.c
d844 1
a844 1
	$(CC) -c $(STUB_CC_SWITCHES) $(COMPAT_DIR)/strstr.c
d847 1
a847 1
	$(CC) -c $(STUB_CC_SWITCHES) $(COMPAT_DIR)/strtod.c
d850 1
a850 1
	$(CC) -c $(STUB_CC_SWITCHES) $(COMPAT_DIR)/strtol.c
d853 1
a853 1
	$(CC) -c $(STUB_CC_SWITCHES) $(COMPAT_DIR)/strtoul.c
d856 1
a856 1
	$(CC) -c $(STUB_CC_SWITCHES) $(COMPAT_DIR)/tmpnam.c
d859 1
a859 8
	$(CC) -c $(STUB_CC_SWITCHES) $(COMPAT_DIR)/waitpid.c

# Stub library binaries, these must be compiled for use in a shared library
# even though they will be placed in a static archive


tclStubLib.o: $(GENERIC_DIR)/tclStubLib.c
	$(CC) -c $(STUB_CC_SWITCHES) $(GENERIC_DIR)/tclStubLib.c
a864 30
# Target to regenerate header files and stub files from the *.decls tables.
#

$(GENERIC_DIR)/tclStubInit.c: $(GENERIC_DIR)/tcl.decls \
		$(GENERIC_DIR)/tclInt.decls
	$(TCL_EXE) $(TOOL_DIR)/genStubs.tcl $(GENERIC_DIR) \
		$(GENERIC_DIR)/tcl.decls $(GENERIC_DIR)/tclInt.decls

genstubs:
	$(TCL_EXE) $(TOOL_DIR)/genStubs.tcl $(GENERIC_DIR) \
		$(GENERIC_DIR)/tcl.decls $(GENERIC_DIR)/tclInt.decls

#
# Target to check that all exported functions have an entry in the stubs
# tables.
#

checkstubs:
	-@@for i in `nm -p $(TCL_LIB_FILE) | awk '$$2 ~ /T/ { print $$3 }' \
		| sort -n`; do \
		match=0; \
		for j in $(TCL_DECLS); do \
		    if [ `grep -c $$i $$j` -gt 0 ]; then \
			match=1; \
		    fi; \
		done; \
		if [ $$match -eq 0 ]; then echo $$i; fi \
	done

#
a879 15
# Target to create a Tcl RPM for Linux.  Requires that you be on a Linux
# system.
#

rpm: all /bin/rpm
	rm -f THIS.TCL.SPEC
	echo "%define _builddir `pwd`" > THIS.TCL.SPEC
	echo "%define _rpmdir `pwd`/RPMS" >> THIS.TCL.SPEC
	cat tcl.spec >> THIS.TCL.SPEC
	mkdir -p RPMS/i386
	rpm -bb THIS.TCL.SPEC
	mv RPMS/i386/*.rpm .
	rm -rf RPMS THIS.TCL.SPEC

#
a884 1
DISTROOT =	/tmp/dist
d888 2
a889 2
$(UNIX_DIR)/configure: $(UNIX_DIR)/configure.in
	autoconf $(UNIX_DIR)/configure.in > $(UNIX_DIR)/configure
a898 1
		$(UNIX_DIR)/tcl.m4 $(UNIX_DIR)/aclocal.m4 \
d900 2
a901 1
		$(UNIX_DIR)/README $(UNIX_DIR)/ldAix $(UNIX_DIR)/tcl.spec \
d906 1
a906 2

	$(TCL_EXE) $(UNIX_DIR)/mkLinks.tcl \
a910 1
	cp -p $(GENERIC_DIR)/*.decls $(DISTDIR)/generic
d913 2
a914 2
	cp -p $(TOP_DIR)/changes $(TOP_DIR)/ChangeLog $(TOP_DIR)/README* \
		$(TOP_DIR)/license.terms $(DISTDIR)
d918 1
a918 1
	for i in http2.3 http1.0 opt0.4 msgcat1.0 reg1.0 dde1.1 tcltest1.0; \
a922 2
	mkdir $(DISTDIR)/library/encoding
	cp -p $(TOP_DIR)/library/encoding/*.enc $(DISTDIR)/library/encoding
d933 2
a934 5
		$(TOP_DIR)/tests/httpd $(TOP_DIR)/tests/*.tcl \
		$(DISTDIR)/tests
	mkdir $(DISTDIR)/tests/pkg
	cp -p $(TOP_DIR)/license.terms $(DISTDIR)/tests/pkg
	cp -p $(TOP_DIR)/tests/pkg/*.tcl $(DISTDIR)/tests/pkg
d936 1
a936 5
	cp $(TOP_DIR)/win/Makefile.in $(DISTDIR)/win
	cp $(TOP_DIR)/win/configure.in \
		$(TOP_DIR)/win/configure \
		$(TOP_DIR)/win/tclConfig.sh.in \
		$(TOP_DIR)/win/tcl.m4 $(TOP_DIR)/win/aclocal.m4 \
a937 2
	cp -p $(TOP_DIR)/win/*.c $(TOP_DIR)/win/*.h $(TOP_DIR)/win/*.rc \
		$(TOP_DIR)/win/*.ico $(DISTDIR)/win
d941 1
d944 4
a947 1
	cp -p $(TOP_DIR)/mac/tclMacProjects.sea.hqx $(DISTDIR)/mac
a959 10
	mkdir $(DISTDIR)/tools
	cp -p $(TOP_DIR)/tools/Makefile.in \
	    $(TOP_DIR)/tools/README \
	    $(TOP_DIR)/tools/configure.in \
	    $(TOP_DIR)/tools/*.tcl \
	    $(TOP_DIR)/tools/man2tcl.c \
	    $(TOP_DIR)/tools/tcl.wse.in \
	    $(TOP_DIR)/tools/*.bmp \
	    $(TOP_DIR)/tools/tcl.hpj.in \
		$(DISTDIR)/tools
d967 4
a970 4
	rm -f $(DISTROOT)/$(DISTNAME).tar.Z \
		$(DISTROOT)/$(DISTNAME).tar.gz \
		$(DISTROOT)/$(ZIPNAME)
	cd $(DISTROOT); tar cf $(DISTNAME).tar $(DISTNAME); \
d972 1
a972 1
		compress $(DISTNAME).tar; zip -qr8 $(ZIPNAME) $(DISTNAME)
a994 12
# This target creates the HTML folder for Tcl & Tk and places it
# in DISTDIR/html.  It uses the tcltk-man2html.tcl tool from
# the Tcl group's tool workspace.  It depends on the Tcl & Tk being
# in directories called tcl8.3 & tk8.3 up two directories from the
# TOOL_DIR.
#

html: 
	$(TCL_EXE) $(TOOL_DIR)/tcltk-man2html.tcl --htmldir=$(DISTDIR)/html \
		--srcdir=$(TOP_DIR)/..

#
d1001 1
a1001 3
macdist: dist machtml

machtml:
d1003 2
d1006 2
a1007 1
	$(TCL_EXE) $(TOOL_DIR)/cvtEOL.tcl $(DISTDIR)
d1083 1
a1083 1
	| $(TCL_EXE) $(UNIX_DIR)/mkProto.tcl \
@


1.1.1.3
log
@import tcl 8.4.0
@
text
@d8 1
a8 1
# RCS: @@(#) $Id: Makefile.in,v 1.116 2002/09/10 09:57:42 das Exp $
a10 3
MAJOR_VERSION		= @@TCL_MAJOR_VERSION@@
MINOR_VERSION		= @@TCL_MINOR_VERSION@@
PATCH_LEVEL		= @@TCL_PATCH_LEVEL@@
d40 1
a40 2
# Path for the platform independent Tcl scripting libraries:
TCL_LIBRARY		= $(prefix)/lib/tcl$(VERSION)
d49 1
a49 1
LIB_INSTALL_DIR		= $(INSTALL_ROOT)$(libdir)
d54 3
d58 1
a58 1
INCLUDE_INSTALL_DIR	= $(INSTALL_ROOT)$(includedir)
d61 1
a61 1
MAN_INSTALL_DIR		= $(INSTALL_ROOT)$(mandir)
d95 3
a97 3
LDFLAGS_DEBUG		= @@LDFLAGS_DEBUG@@
LDFLAGS_OPTIMIZE	= @@LDFLAGS_OPTIMIZE@@
LDFLAGS			= @@LDFLAGS@@ @@LDFLAGS_DEFAULT@@
d128 1
a128 1
UNIX_OBJS = tclUnixChan.o tclUnixEvent.o tclUnixFCmd.o \
d139 1
a139 1
MEM_DEBUG_FLAGS		= @@MEM_DEBUG_FLAGS@@
d142 3
a147 3
# Generic stub lib name used in rules that apply to tcl and tk
STUB_LIB_FILE		= ${TCL_STUB_LIB_FILE}

d164 1
a164 1
SHELL			= /bin/sh
d171 14
a184 2
INSTALL_STRIP_PROGRAM   = -s
INSTALL_STRIP_LIBRARY  = -S -S
a187 1
INSTALL_LIBRARY		= ${INSTALL}
d190 5
a194 5
# TCL_EXE is the name of a tclsh executable that is available *BEFORE*
# running make for the first time. Certain build targets (make genstubs)
# need it to be available on the PATH. This executable should *NOT* be
# required just to do a normal build although it can be required to run
# make dist.
d203 13
a215 17
STLIB_LD		= @@STLIB_LD@@
SHLIB_LD		= @@SHLIB_LD@@
SHLIB_CFLAGS		= @@SHLIB_CFLAGS@@
SHLIB_LD_FLAGS		= @@SHLIB_LD_FLAGS@@
SHLIB_LD_LIBS		= @@SHLIB_LD_LIBS@@
TCL_SHLIB_LD_EXTRAS	= @@TCL_SHLIB_LD_EXTRAS@@

SHLIB_SUFFIX		= @@SHLIB_SUFFIX@@
#SHLIB_SUFFIX		=

DLTEST_TARGETS		= dltest.marker

# Additional search flags needed to find the various shared libraries
# at run-time.  The first symbol is for use when creating a binary
# with cc, and the second is for use when running ld directly.
CC_SEARCH_FLAGS	= @@CC_SEARCH_FLAGS@@
LD_SEARCH_FLAGS	= @@LD_SEARCH_FLAGS@@
a227 3
# Generic lib name used in rules that apply to tcl and tk
LIB_FILE		= ${TCL_LIB_FILE}

a233 3
# support for embedded libraries on Darwin / Mac OS X
DYLIB_INSTALL_DIR	= ${LIB_RUNTIME_DIR}

a250 1
MAC_OSX_DIR		= $(TOP_DIR)/macosx
d256 1
a257 14
#CC			= purify -best-effort @@CC@@ -DPURIFY

# Flags to be passed to mkLinks to control whether the manpages
# should be compressed and linked with softlinks
MKLINKS_FLAGS           = @@MKLINKS_FLAGS@@

#----------------------------------------------------------------
# The information below is usually usable as is.  The configure
# script won't modify it and it only exists to make working
# around selected rare system configurations easier.
#----------------------------------------------------------------

GDB			= gdb
DDD			= ddd
d277 1
a277 1
LIBS		= @@DL_LIBS@@ @@LIBS@@ $(MATH_LIBS)
d303 1
a303 2
	 tclThreadAlloc.o tclThreadJoin.o tclStubInit.o tclStubLib.o \
	tclTimer.o tclUtf.o tclUtil.o tclVar.o
d307 1
a307 2
OBJS = ${GENERIC_OBJS} ${UNIX_OBJS} ${NOTIFY_OBJS} ${COMPAT_OBJS} \
        @@DL_OBJS@@ @@PLAT_OBJS@@
a383 2
	$(GENERIC_DIR)/tclThreadAlloc.c \
	$(GENERIC_DIR)/tclThreadJoin.c \
d396 1
d420 3
a422 6
MAC_OSX_SRCS = \
	$(MAC_OSX_DIR)/tclMacOSXBundle.c

# Note: don't include DL_SRCS or MAC_OSX_SRCS in SRCS: most of those
# files won't compile on the current machine, and they will cause
# problems for things like "make depend".
d428 1
a428 1
binaries: ${LIB_FILE} $(STUB_LIB_FILE) $(TCL_BUILD_EXP_FILE) tclsh
d436 2
a437 2
${LIB_FILE}: ${OBJS} ${STUB_LIB_FILE}
	rm -f $@@
d439 1
d442 1
a442 1
	rm -f $@@
d444 1
d460 1
a460 6
		${CC_SEARCH_FLAGS} -o tclsh

# Resetting the LIB_RUNTIME_DIR below is required so that
# the generated tcltest executable gets the build directory
# burned into its ld search path. This keeps tcltest from
# picking up an already installed version of the Tcl library.
d463 2
a464 1
	$(MAKE) tcltest-real LIB_RUNTIME_DIR=`pwd`
a465 3
tcltest-real:
	${CC} ${LDFLAGS} ${TCLTEST_OBJS} @@TCL_BUILD_LIB_SPEC@@ ${LIBS} \
		${CC_SEARCH_FLAGS} -o tcltest
a469 3
# Specifying TESTFLAGS on the command line is the standard way to pass
# args to tcltest, ie:
#	% make test TESTFLAGS="-verbose bps -file fileName.test"
d472 3
a474 1
	@@LD_LIBRARY_PATH_VAR@@=`pwd`:${@@LD_LIBRARY_PATH_VAR@@}; export @@LD_LIBRARY_PATH_VAR@@; \
d476 1
a476 1
	./tcltest $(TOP_DIR)/tests/all.tcl $(TESTFLAGS) $(TCLTESTARGS)
d480 3
a482 1
	@@LD_LIBRARY_PATH_VAR@@=`pwd`:${@@LD_LIBRARY_PATH_VAR@@}; export @@LD_LIBRARY_PATH_VAR@@; \
a485 28
# Useful target for running the test suite with an unwritable current
# directory...
ro-test: tcltest
	@@LD_LIBRARY_PATH_VAR@@=`pwd`:${@@LD_LIBRARY_PATH_VAR@@}; export @@LD_LIBRARY_PATH_VAR@@; \
	TCL_LIBRARY="${TCL_BUILDTIME_LIBRARY}"; export TCL_LIBRARY; \
	echo 'exec chmod -w .;package require tcltest;tcltest::temporaryDirectory /tmp;source ../tests/all.tcl;exec chmod +w .' | ./tcltest

# This target can be used to run tclsh from the build directory
# via `make shell SCRIPT=/tmp/foo.tcl`
shell: tclsh
	@@@@LD_LIBRARY_PATH_VAR@@=`pwd`:${@@LD_LIBRARY_PATH_VAR@@}; export @@LD_LIBRARY_PATH_VAR@@; \
	TCL_LIBRARY="${TCL_BUILDTIME_LIBRARY}"; export TCL_LIBRARY; \
	./tclsh $(SCRIPT)

# This target can be used to run tclsh inside either gdb or insight
gdb: tclsh
	@@echo "set env @@LD_LIBRARY_PATH_VAR@@=`pwd`:${@@LD_LIBRARY_PATH_VAR@@}" > gdb.run
	@@echo "set env TCL_LIBRARY=${TCL_BUILDTIME_LIBRARY}" >> gdb.run
	$(GDB) ./tclsh --command=gdb.run
	rm gdb.run

# This target can be used to run tclsh inside ddd
ddd: tclsh
	@@echo "set env @@LD_LIBRARY_PATH_VAR@@=`pwd`:${@@LD_LIBRARY_PATH_VAR@@}" > gdb.run
	@@echo "set env TCL_LIBRARY=${TCL_BUILDTIME_LIBRARY}" >> gdb.run
	$(DDD) -command=gdb.run ./tclsh
	rm gdb.run

d505 1
a505 1
	    -e 's?SCCSID?RCS: @@(#) ?' \
d512 1
a512 1
# The following target generates the shared libraries in dltest/ that
d515 15
a529 5
# on this platform. The Makefile in the dltest subdirectory creates
# the dltest.marker file in this directory after a successful build.

dltest.marker:
	cd dltest ; $(MAKE)
d534 1
a534 3
	$(MAKE) install \
		INSTALL_PROGRAM="$(INSTALL_PROGRAM) ${INSTALL_STRIP_PROGRAM}" \
		INSTALL_LIBRARY="$(INSTALL_LIBRARY) ${INSTALL_STRIP_LIBRARY}"
d553 4
a556 3
	@@echo "Installing $(LIB_FILE) to $(LIB_INSTALL_DIR)/"
	@@@@INSTALL_LIB@@
	@@chmod 555 $(LIB_INSTALL_DIR)/$(LIB_FILE)
d566 5
a570 4
	@@if test "$(STUB_LIB_FILE)" != "" ; then \
	    echo "Installing $(STUB_LIB_FILE) to $(LIB_INSTALL_DIR)/"; \
	    @@INSTALL_STUB_LIB@@ ; \
	fi
d572 3
a574 2
install-libraries: libraries
	@@for i in $(INCLUDE_INSTALL_DIR) $(SCRIPT_INSTALL_DIR); \
d583 1
a583 1
	@@for i in http2.4 http1.0 opt0.4 encoding msgcat1.3 tcltest2.2; \
d596 1
a596 2
	@@for i in $(GENERIC_DIR)/tcl.h $(GENERIC_DIR)/tclDecls.h \
		$(GENERIC_DIR)/tclPlatDecls.h ; \
d605 1
a605 2
	@@echo "Installing library http1.0 directory";
	@@for j in $(TOP_DIR)/library/http1.0/*.tcl ; \
d607 5
a611 21
	    $(INSTALL_DATA) $$j $(SCRIPT_INSTALL_DIR)/http1.0; \
	    done;
	@@echo "Installing library http2.4 directory";
	@@for j in $(TOP_DIR)/library/http/*.tcl ; \
	    do \
	    $(INSTALL_DATA) $$j $(SCRIPT_INSTALL_DIR)/http2.4; \
	    done;
	@@echo "Installing library opt0.4 directory";
	@@for j in $(TOP_DIR)/library/opt/*.tcl ; \
	    do \
	    $(INSTALL_DATA) $$j $(SCRIPT_INSTALL_DIR)/opt0.4; \
	    done;
	@@echo "Installing library msgcat1.3 directory";
	@@for j in $(TOP_DIR)/library/msgcat/*.tcl ; \
	    do \
	    $(INSTALL_DATA) $$j $(SCRIPT_INSTALL_DIR)/msgcat1.3; \
	    done;
	@@echo "Installing library tcltest2.2 directory";
	@@for j in $(TOP_DIR)/library/tcltest/*.tcl ; \
	    do \
	    $(INSTALL_DATA) $$j $(SCRIPT_INSTALL_DIR)/tcltest2.2; \
d637 1
a637 1
	    chmod 444 $(MAN1_INSTALL_DIR)/$$i; \
d640 1
a640 1
	@@$(UNIX_DIR)/mkLinks $(MKLINKS_FLAGS) $(MAN1_INSTALL_DIR)
d647 1
a647 1
	    chmod 444 $(MAN3_INSTALL_DIR)/$$i; \
d650 1
a650 1
	@@$(UNIX_DIR)/mkLinks $(MKLINKS_FLAGS) $(MAN3_INSTALL_DIR)
d656 2
a657 2
		    $$i > $(MANN_INSTALL_DIR)/$$i; \
	    chmod 444 $(MANN_INSTALL_DIR)/$$i; \
d660 1
a660 1
	@@$(UNIX_DIR)/mkLinks $(MKLINKS_FLAGS) $(MANN_INSTALL_DIR)
d662 1
a662 1
Makefile: $(UNIX_DIR)/Makefile.in $(DLTEST_DIR)/Makefile.in
d665 4
d672 1
a672 1
	cd dltest ; $(MAKE) clean
d677 1
a677 1
	cd dltest ; $(MAKE) distclean
d682 3
d874 3
d928 1
a928 1
tclUtf.o: $(GENERIC_DIR)/tclUtf.c $(GENERIC_DIR)/tclUniData.c
a948 6
tclThreadAlloc.o: $(GENERIC_DIR)/tclThreadAlloc.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclThreadAlloc.c

tclThreadJoin.o: $(GENERIC_DIR)/tclThreadJoin.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclThreadJoin.c

d982 13
d996 1
a996 1
	$(CC) -c $(CC_SWITCHES) -DTCL_LIBRARY=\"${TCL_LIBRARY}\" \
a999 4
# This is the CFBundle interface.  It is only used on Mac OS X.
tclMacOSXBundle.o: $(MAC_OSX_DIR)/tclMacOSXBundle.c
	$(CC) -c $(CC_SWITCHES) $(MAC_OSX_DIR)/tclMacOSXBundle.c

d1008 1
a1008 1
		${CC_SEARCH_FLAGS} -L/usr/openwin/lib -lXt -o xttest
d1026 3
a1046 3
strtoll.o: $(COMPAT_DIR)/strtoll.c
	$(CC) -c $(STUB_CC_SWITCHES) $(COMPAT_DIR)/strtoll.c

a1049 3
strtoull.o: $(COMPAT_DIR)/strtoull.c
	$(CC) -c $(STUB_CC_SWITCHES) $(COMPAT_DIR)/strtoull.c

d1072 2
a1073 3
	@@echo "Warning: tclStubInit.c may be out of date."
	@@echo "Developers may want to run \"make genstubs\" to regenerate."
	@@echo "This warning can be safely ignored, do not report as a bug!"
a1096 18
# Target to check that all public APIs which are not command
# implementations have an entry in section three of the distributed
# manpages.
#

checkdoc:
	-@@for i in `nm -p $(TCL_LIB_FILE) | awk '$$3 ~ /Tcl_/ { print $$3 }' \
		| grep -v 'Cmd$$' | sort -n`; do \
		match=0; \
		for j in $(TOP_DIR)/doc/*.3; do \
		    if [ `grep '\-' $$j | grep -c $$i` -gt 0 ]; then \
			match=1; \
		    fi; \
		done; \
		if [ $$match -eq 0 ]; then echo $$i; fi \
	done

#
a1125 5
mklinks:
	$(TCL_EXE) $(UNIX_DIR)/mkLinks.tcl \
		$(UNIX_DIR)/../doc/*.[13n] > $(UNIX_DIR)/mkLinks
	chmod +x $(UNIX_DIR)/mkLinks

d1132 4
a1135 4
DISTROOT = /tmp/dist
DISTNAME = tcl${VERSION}${PATCH_LEVEL}
ZIPNAME	 = tcl${MAJOR_VERSION}${MINOR_VERSION}${PATCH_LEVEL}.zip
DISTDIR	 = $(DISTROOT)/$(DISTNAME)
d1138 1
a1138 2

dist: $(UNIX_DIR)/configure mklinks
d1140 2
a1141 1
	mkdir -p $(DISTDIR)/unix
d1143 1
a1149 1
		$(UNIX_DIR)/mkLinks \
d1154 4
d1164 1
a1164 2
		$(TOP_DIR)/ChangeLog.[12]??? $(TOP_DIR)/license.terms \
		$(DISTDIR)
d1168 1
a1168 1
	for i in http1.0 http opt msgcat reg dde tcltest; \
d1187 3
d1192 2
a1193 1
	cp $(TOP_DIR)/win/configure.in $(TOP_DIR)/win/configure \
d1197 2
a1198 3
	cp -p $(TOP_DIR)/win/*.c $(TOP_DIR)/win/*.h \
		$(TOP_DIR)/win/*.ico $(TOP_DIR)/win/*.rc \
		$(DISTDIR)/win
a1199 1
	$(TCL_EXE) $(TOOL_DIR)/eolFix.tcl -crlf $(DISTDIR)/win/*.bat
a1200 9
	$(TCL_EXE) $(TOOL_DIR)/eolFix.tcl -crlf $(DISTDIR)/win/makefile.*
	cp -p $(TOP_DIR)/win/rules.vc $(DISTDIR)/win
	$(TCL_EXE) $(TOOL_DIR)/eolFix.tcl -crlf $(DISTDIR)/win/rules.vc
	cp -p $(TOP_DIR)/win/coffbase.txt $(DISTDIR)/win
	$(TCL_EXE) $(TOOL_DIR)/eolFix.tcl -crlf $(DISTDIR)/win/coffbase.txt
	cp -p $(TOP_DIR)/win/tcl.hpj.in $(DISTDIR)/win
	$(TCL_EXE) $(TOOL_DIR)/eolFix.tcl -crlf $(DISTDIR)/win/tcl.hpj.in
	cp -p $(TOP_DIR)/win/tcl.ds* $(DISTDIR)/win
	$(TCL_EXE) $(TOOL_DIR)/eolFix.tcl -crlf $(DISTDIR)/win/tcl.ds*
d1204 2
a1205 2
	cp -p $(TOP_DIR)/mac/tclMacProjects.sea.hqx \
		$(TOP_DIR)/mac/*.c $(TOP_DIR)/mac/*.h $(TOP_DIR)/mac/*.r \
d1208 3
a1210 2
	cp -p $(TOP_DIR)/mac/*.pch $(DISTDIR)/mac
	cp -p $(TOP_DIR)/mac/*.doc $(TOP_DIR)/mac/*.html $(DISTDIR)/mac
a1211 6
	mkdir $(DISTDIR)/macosx
	cp -p $(TOP_DIR)/macosx/Makefile \
		$(TOP_DIR)/macosx/*.c \
		$(DISTDIR)/macosx
	mkdir $(DISTDIR)/macosx/Tcl.pbproj
	cp -p $(TOP_DIR)/macosx/Tcl.pbproj/*.pbx* $(DISTDIR)/macosx/Tcl.pbproj
a1213 1
		$(UNIX_DIR)/dltest/README \
d1215 2
d1218 8
a1225 5
	cp -p $(TOP_DIR)/tools/Makefile.in $(TOP_DIR)/tools/README \
		$(TOP_DIR)/tools/configure $(TOP_DIR)/tools/configure.in \
		$(TOP_DIR)/tools/*.tcl $(TOP_DIR)/tools/man2tcl.c \
		$(TOP_DIR)/tools/tcl.wse.in $(TOP_DIR)/tools/*.bmp \
		$(TOP_DIR)/tools/tcl.hpj.in \
a1226 2
	$(TCL_EXE) $(TOOL_DIR)/eolFix.tcl -crlf $(DISTDIR)/tools/tcl.hpj.in \
		$(DISTDIR)/tools/tcl.wse.in
@


1.1.1.4
log
@import tk 8.4.0
@
text
@d2 1
a2 1
# This file is a Makefile for Tk.  If it has the name "Makefile.in"
d8 1
a8 1
# RCS: @@(#) $Id: Makefile.in,v 1.82 2002/09/10 09:59:15 das Exp $
d10 4
a13 8
# Current Tk version;  used in various names.

TCLVERSION		= @@TCL_VERSION@@
VERSION			= @@TK_VERSION@@
MAJOR_VERSION		= @@TK_MAJOR_VERSION@@
MINOR_VERSION		= @@TK_MINOR_VERSION@@
PATCH_LEVEL		= @@TK_PATCH_LEVEL@@
LOCALES			= @@LOCALES@@
d26 2
a27 1
# to the "configure" script.
d43 2
a44 4
# Directory from which applications will reference the library of Tcl
# scripts (note: you can set the TK_LIBRARY environment variable at
# run-time to override the compiled-in location):
TK_LIBRARY		= $(prefix)/lib/tk$(VERSION)
d49 1
a49 1
# Directory in which to install the program wish:
d52 1
a52 1
# Directory in which to install the .a or .so binary for the Tk library:
d55 2
a56 2
# Path name to use when installing library scripts:
SCRIPT_INSTALL_DIR	= $(INSTALL_ROOT)$(TK_LIBRARY)
d58 1
a58 1
# Directory in which to install the include file tk.h:
d61 1
a61 1
# Top-level directory for manual entries:
d64 1
a64 1
# Directory in which to install manual entry for wish:
d67 1
a67 1
# Directory in which to install manual entries for Tk's C library
d72 1
a72 1
# Tcl commands implemented by Tk:
d75 2
a76 11
# The directory containing the Tcl sources and headers appropriate
# for this version of Tk ("srcdir" will be replaced or has already
# been replaced by the configure script):
TCL_GENERIC_DIR		= @@TCL_SRC_DIR@@/generic

# The directory containing the Tcl library archive file appropriate
# for this version of Tk:
TCL_BIN_DIR		= @@TCL_BIN_DIR@@

# The linker flags needed to link in the Tcl library (ex: -ltcl8.2)
TCL_LIB_FLAG		= @@TCL_LIB_FLAG@@
d79 1
a79 10
TK_DBGX			= @@TK_DBGX@@

# Flag, 1: we're building a shared lib, 0 we're not
TK_SHARED_BUILD		= @@TK_SHARED_BUILD@@

# Directory in which to install the pkgIndex.tcl file for loadable Tk
PKG_INSTALL_DIR		= $(LIB_INSTALL_DIR)/tk$(VERSION)$(TK_DBGX)

# Package index file for loadable Tk
PKG_INDEX		= $(PKG_INSTALL_DIR)/pkgIndex.tcl
a99 18
# A "-I" switch that can be used when compiling to make all of the
# X11 include files accessible (the configure script will try to
# set this value, and will cause it to be an empty string if the
# include files are accessible via /usr/include).
X11_INCLUDES		= @@XINCLUDES@@

# Linker switch(es) to use to link with the X11 library archive (the
# configure script will try to set this value automatically, but you
# can override it).
X11_LIB_SWITCHES	= @@XLIBSW@@


# To turn off the security checks that disallow incoming sends when
# the X server appears to be insecure, reverse the comments on the
# following lines:
SECURITY_FLAGS		=
#SECURITY_FLAGS		= -DTK_NO_SECURITY

d105 31
d140 1
a140 1
MEM_DEBUG_FLAGS		=
d143 19
a161 12
# If your X server is X11R4 or earlier, then you may wish to reverse
# the comment characters on the following two lines.  This will enable
# extra code to speed up XStringToKeysym.  In X11R5 and later releases
# XStringToKeysym is plenty fast, so you needn't define REDO_KEYSYM_LOOKUP.
KEYSYM_FLAGS		=
#KEYSYM_FLAGS		= -DREDO_KEYSYM_LOOKUP

# Tk does not used deprecated Tcl constructs so it should
# compile fine with -DTCL_NO_DEPRECATED. To remove its own
# set of deprecated code uncomment the second line.
NO_DEPRECATED_FLAGS	= -DTCL_NO_DEPRECATED
#NO_DEPRECATED_FLAGS	= -DTCL_NO_DEPRECATED -DTK_NO_DEPRECATED
d167 1
a167 1
# Tk used to let the configure script choose which program to use
d172 3
d188 2
a189 1
# libraries.  The values of the symbols are normally set by the
d193 2
d196 3
d200 2
a201 2
# To enable support for stubs in Tcl.
STUB_LIB_FILE		= @@TK_STUB_LIB_FILE@@
d203 1
a203 2
TK_STUB_LIB_FILE	= @@TK_STUB_LIB_FILE@@
#TK_STUB_LIB_FILE	= libtkstub.a
d205 5
a209 2
# Generic stub lib name used in rules that apply to tcl and tk
STUB_LIB_FILE		= ${TK_STUB_LIB_FILE}
d211 7
a217 2
TK_STUB_LIB_FLAG	= @@TK_STUB_LIB_FLAG@@
#TK_STUB_LIB_FLAG	= -ltkstub
d219 2
a220 2
TK_LIB_FILE		= @@TK_LIB_FILE@@
#TK_LIB_FILE		= libtk.a
d223 1
a223 1
LIB_FILE		= ${TK_LIB_FILE}
d225 2
a226 19
TK_LIB_FLAG		= @@TK_LIB_FLAG@@
#TK_LIB_FLAG		= -ltk

TCL_LIB_SPEC		= @@TCL_LIB_SPEC@@
TCL_STUB_LIB_SPEC	= @@TCL_STUB_LIB_SPEC@@
TCL_STUB_LIB_FLAG	= @@TCL_STUB_LIB_FLAG@@
TK_EXP_FILE		= @@TK_EXP_FILE@@
TK_BUILD_EXP_FILE	= @@TK_BUILD_EXP_FILE@@

TCL_STUB_FLAGS		= @@TCL_STUB_FLAGS@@

# Libraries to use when linking.  This definition is determined by the
# configure script.
LIBS = @@LIBS@@ $(X11_LIB_SWITCHES) @@DL_LIBS@@ @@MATH_LIBS@@
WISH_LIBS = $(TCL_LIB_SPEC) @@LIBS@@ $(X11_LIB_SWITCHES) @@DL_LIBS@@ @@MATH_LIBS@@

# The symbol below provides support for dynamic loading and shared
# libraries.  See configure.in for a description of what it means.
# The values of the symbolis normally set by the configure script.
d228 2
a229 10
STLIB_LD		= @@STLIB_LD@@
SHLIB_LD		= @@SHLIB_LD@@
SHLIB_LD_LIBS		= @@SHLIB_LD_LIBS@@
TK_SHLIB_LD_EXTRAS	= @@TK_SHLIB_LD_EXTRAS@@

# Additional search flags needed to find the various shared libraries
# at run-time.  The first symbol is for use when creating a binary
# with cc, and the second is for use when running ld directly.
CC_SEARCH_FLAGS	= @@CC_SEARCH_FLAGS@@
LD_SEARCH_FLAGS	= @@LD_SEARCH_FLAGS@@
d240 2
d245 1
a245 1
SRC_DIR			= @@srcdir@@/..
d248 24
a271 3
UNIX_DIR		= @@srcdir@@
BMAP_DIR		= $(TOP_DIR)/bitmaps
TOOL_DIR		= @@TCL_SRC_DIR@@/tools
a278 3
# Flags to be passed to mkLinks to control whether the manpages
# should be compressed and linked with softlinks
MKLINKS_FLAGS           = @@MKLINKS_FLAGS@@
d280 163
a442 1
CC			= @@CC@@
d444 1
a444 111
CC_SWITCHES_NO_STUBS = ${CFLAGS} ${CFLAGS_WARNING} ${SHLIB_CFLAGS} \
-I${UNIX_DIR} -I${GENERIC_DIR} \
-I${BMAP_DIR} -I${TCL_GENERIC_DIR} ${X11_INCLUDES} \
${AC_FLAGS} ${PROTO_FLAGS} \
${SECURITY_FLAGS} ${MEM_DEBUG_FLAGS} ${KEYSYM_FLAGS} ${NO_DEPRECATED_FLAGS}

CC_SWITCHES = ${CC_SWITCHES_NO_STUBS} ${TCL_STUB_FLAGS} 

DEPEND_SWITCHES = ${CFLAGS} -I${UNIX_DIR} -I${GENERIC_DIR} \
-I${BMAP_DIR} \
-I${TCL_GENERIC_DIR} ${X11_INCLUDES} \
${AC_FLAGS} ${PROTO_FLAGS} ${SECURITY_FLAGS} ${MEM_DEBUG_FLAGS} \
${KEYSYM_FLAGS}

WISH_OBJS = tkAppInit.o

TKTEST_OBJS = tkTestInit.o tkTest.o tkSquare.o

WIDGOBJS = tkButton.o tkEntry.o tkFrame.o tkListbox.o \
	tkMenu.o tkMenubutton.o tkMenuDraw.o tkMessage.o \
	tkPanedWindow.o tkScale.o tkScrollbar.o

CANVOBJS = tkCanvas.o tkCanvArc.o tkCanvBmap.o tkCanvImg.o \
	tkCanvLine.o tkCanvPoly.o tkCanvPs.o tkCanvText.o \
	tkCanvUtil.o tkCanvWind.o tkRectOval.o tkTrig.o

IMAGEOBJS = tkImage.o tkImgBmap.o tkImgGIF.o tkImgPPM.o tkImgPhoto.o

TEXTOBJS = tkText.o tkTextBTree.o tkTextDisp.o tkTextImage.o tkTextIndex.o \
	tkTextMark.o tkTextTag.o tkTextWind.o

UNIXOBJS = tkUnix.o tkUnix3d.o tkUnixButton.o tkUnixColor.o tkUnixConfig.o \
	tkUnixCursor.o tkUnixDraw.o tkUnixEmbed.o tkUnixEvent.o \
	tkUnixFocus.o tkUnixFont.o tkUnixInit.o tkUnixKey.o tkUnixMenu.o \
	tkUnixMenubu.o tkUnixScale.o tkUnixScrlbr.o tkUnixSelect.o \
	tkUnixSend.o tkUnixWm.o tkUnixXId.o tkStubInit.o tkStubLib.o

STUB_LIB_OBJS = tkStubLib.o tkStubImg.o

OBJS =  tk3d.o tkArgv.o tkAtom.o tkBind.o tkBitmap.o tkClipboard.o tkCmds.o \
	tkColor.o tkConfig.o tkConsole.o tkCursor.o tkError.o tkEvent.o \
	tkFocus.o tkFont.o tkGet.o tkGC.o tkGeometry.o tkGrab.o tkGrid.o \
	tkMain.o tkObj.o tkOldConfig.o tkOption.o tkPack.o tkPlace.o \
	tkSelect.o tkStyle.o tkUndo.o tkUtil.o tkVisual.o tkWindow.o  \
	$(UNIXOBJS) $(WIDGOBJS) $(CANVOBJS) $(IMAGEOBJS) $(TEXTOBJS)

TK_DECLS = \
	$(GENERIC_DIR)/tk.decls \
	$(GENERIC_DIR)/tkInt.decls

SRCS = \
	$(GENERIC_DIR)/tk3d.c $(GENERIC_DIR)/tkArgv.c \
	$(GENERIC_DIR)/tkAtom.c $(GENERIC_DIR)/tkBind.c	\
	$(GENERIC_DIR)/tkBitmap.c $(GENERIC_DIR)/tkClipboard.c \
	$(GENERIC_DIR)/tkCmds.c $(GENERIC_DIR)/tkColor.c \
	$(GENERIC_DIR)/tkConfig.c $(GENERIC_DIR)/tkCursor.c \
	$(GENERIC_DIR)/tkError.c $(GENERIC_DIR)/tkEvent.c \
	$(GENERIC_DIR)/tkFocus.c $(GENERIC_DIR)/tkFont.c \
	$(GENERIC_DIR)/tkGet.c $(GENERIC_DIR)/tkGC.c \
	$(GENERIC_DIR)/tkGeometry.c $(GENERIC_DIR)/tkGrab.c \
	$(GENERIC_DIR)/tkGrid.c $(GENERIC_DIR)/tkConsole.c \
	$(GENERIC_DIR)/tkMain.c $(GENERIC_DIR)/tkOption.c \
	$(GENERIC_DIR)/tkPack.c $(GENERIC_DIR)/tkPlace.c \
	$(GENERIC_DIR)/tkSelect.c $(GENERIC_DIR)/tkStyle.c \
	$(GENERIC_DIR)/tkUndo.c $(GENERIC_DIR)/tkUtil.c \
	$(GENERIC_DIR)/tkVisual.c $(GENERIC_DIR)/tkWindow.c \
	$(GENERIC_DIR)/tkButton.c $(GENERIC_DIR)/tkObj.c \
	$(GENERIC_DIR)/tkEntry.c $(GENERIC_DIR)/tkFrame.c \
	$(GENERIC_DIR)/tkListbox.c $(GENERIC_DIR)/tkMenu.c \
	$(GENERIC_DIR)/tkMenubutton.c $(GENERIC_DIR)/tkMenuDraw.c \
	$(GENERIC_DIR)/tkMessage.c $(GENERIC_DIR)/tkPanedWindow.c \
	$(GENERIC_DIR)/tkScale.c $(GENERIC_DIR)/tkScrollbar.c \
	$(GENERIC_DIR)/tkCanvas.c $(GENERIC_DIR)/tkCanvArc.c \
	$(GENERIC_DIR)/tkCanvBmap.c $(GENERIC_DIR)/tkCanvImg.c \
	$(GENERIC_DIR)/tkCanvLine.c $(GENERIC_DIR)/tkCanvPoly.c \
	$(GENERIC_DIR)/tkCanvPs.c $(GENERIC_DIR)/tkCanvText.c \
	$(GENERIC_DIR)/tkCanvUtil.c \
	$(GENERIC_DIR)/tkCanvWind.c $(GENERIC_DIR)/tkRectOval.c \
	$(GENERIC_DIR)/tkTrig.c $(GENERIC_DIR)/tkImage.c \
	$(GENERIC_DIR)/tkImgBmap.c $(GENERIC_DIR)/tkImgGIF.c \
	$(GENERIC_DIR)/tkImgPPM.c \
	$(GENERIC_DIR)/tkImgPhoto.c $(GENERIC_DIR)/tkText.c \
	$(GENERIC_DIR)/tkTextBTree.c $(GENERIC_DIR)/tkTextDisp.c \
	$(GENERIC_DIR)/tkTextImage.c \
	$(GENERIC_DIR)/tkTextIndex.c $(GENERIC_DIR)/tkTextMark.c \
	$(GENERIC_DIR)/tkTextTag.c $(GENERIC_DIR)/tkTextWind.c \
	$(GENERIC_DIR)/tkOldConfig.c \
	$(GENERIC_DIR)/tkSquare.c $(GENERIC_DIR)/tkTest.c \
	$(GENERIC_DIR)/tkStubInit.c $(GENERIC_DIR)/tkStubLib.c \
	$(UNIX_DIR)/tkAppInit.c $(UNIX_DIR)/tkUnix.c \
	$(UNIX_DIR)/tkUnix3d.c \
	$(UNIX_DIR)/tkUnixButton.c $(UNIX_DIR)/tkUnixColor.c \
	$(UNIX_DIR)/tkUnixConfig.c \
	$(UNIX_DIR)/tkUnixCursor.c \
	$(UNIX_DIR)/tkUnixDraw.c \
	$(UNIX_DIR)/tkUnixEmbed.c $(UNIX_DIR)/tkUnixEvent.c \
	$(UNIX_DIR)/tkUnixFocus.c \
	$(UNIX_DIR)/tkUnixFont.c $(UNIX_DIR)/tkUnixInit.c \
	$(UNIX_DIR)/tkUnixKey.c \
	$(UNIX_DIR)/tkUnixMenu.c $(UNIX_DIR)/tkUnixMenubu.c \
	$(UNIX_DIR)/tkUnixScale.c $(UNIX_DIR)/tkUnixScrlbr.c \
	$(UNIX_DIR)/tkUnixSelect.c \
	$(UNIX_DIR)/tkUnixSend.c $(UNIX_DIR)/tkUnixWm.c \
	$(UNIX_DIR)/tkUnixXId.c


HDRS = bltList.h \
	default.h ks_names.h tkPatch.h tk.h tkButton.h tkCanvas.h tkInt.h  \
	tkPort.h tkScrollbar.h tkText.h

DEMOPROGS = browse hello ixset rmt rolodex square tcolor timer widget
d448 1
a448 1
binaries: ${LIB_FILE} ${STUB_LIB_FILE} wish
d452 1
a452 5
$(SRC_DIR)/doc/man.macros:
	chmod +x $(UNIX_DIR)/install-sh
	$(INSTALL_DATA) @@TCL_SRC_DIR@@/doc/man.macros $(SRC_DIR)/doc/man.macros

doc: $(SRC_DIR)/doc/man.macros
d455 2
a456 2
# a shared library or non-shared library for Tk.
${LIB_FILE}: ${OBJS}
d464 2
a465 2
# Make target which outputs the list of the .o contained in the Tk lib
# usefull to build a single big shared library containing Tcl/Tk and other
d467 3
a469 1
tkLibObjs:
a470 1

d476 3
a478 4
wish: $(WISH_OBJS) $(TK_LIB_FILE) $(TK_STUB_LIB_FILE)
	$(CC) $(LDFLAGS) $(WISH_OBJS) \
		@@TK_BUILD_LIB_SPEC@@ \
		$(WISH_LIBS) $(CC_SEARCH_FLAGS) -o wish
d481 10
a490 21
# the generated tktest executable gets the build directory
# burned into its ld search path. This keeps tktest from
# picking up an already installed version of the Tcl or
# Tk shared libraries.

tktest: $(TKTEST_OBJS) $(TK_LIB_FILE)
	$(MAKE) tktest-real LIB_RUNTIME_DIR=`pwd`:$(TCL_BIN_DIR)

tktest-real:
	${CC} $(LDFLAGS) $(TKTEST_OBJS) \
		@@TK_BUILD_LIB_SPEC@@ \
		$(WISH_LIBS) $(CC_SEARCH_FLAGS) -o tktest

# FIXME: This xttest rule seems to be broken in a number of ways.
# It should use CC_SEARCH_FLAGS, it does not include the shared
# lib location logic from tktest, and it is not clear where this
# test.o object file comes from.
xttest: test.o tkTest.o tkSquare.o $(TK_LIB_FILE)
	${CC} $(LDFLAGS) test.o tkTest.o tkSquare.o \
		@@TK_BUILD_LIB_SPEC@@ \
		$(WISH_LIBS) $(LD_SEARCH_FLAGS) -lXt -o xttest
d499 31
a529 16
test: tktest
	TCL_LIBRARY=@@TCL_SRC_DIR@@/library; export TCL_LIBRARY; \
	TK_LIBRARY=@@TK_SRC_DIR@@/library; export TK_LIBRARY; \
	./tktest $(TOP_DIR)/tests/all.tcl -geometry +0+0 \
	$(TESTFLAGS) $(TCLTESTARGS)

# Tests with different languages
testlang: tktest
	TCL_LIBRARY=@@TCL_SRC_DIR@@/library; export TCL_LIBRARY; \
	TK_LIBRARY=@@TK_SRC_DIR@@/library; export TK_LIBRARY; \
	for lang in $(LOCALES) ;  \
	do \
	LANG=$(lang); export LANG; \
	./tktest $(TOP_DIR)/tests/all.tcl -geometry +0+0 \
	$(TESTFLAGS) $(TCLTESTARGS); \
	done
d531 5
a535 21
# Useful target to launch a built tktest with the proper path,...
runtest: tktest
	TCL_LIBRARY=@@TCL_SRC_DIR@@/library; export TCL_LIBRARY; \
	TK_LIBRARY=@@TK_SRC_DIR@@/library; export TK_LIBRARY; \
	./tktest

# This target can be used to run wish from the build directory
# via `make shell` or `make shell SCRIPT=/tmp/foo.tcl`
shell: wish
	@@LD_LIBRARY_PATH_VAR@@=`pwd`:${TCL_BIN_DIR}:${@@LD_LIBRARY_PATH_VAR@@}; \
	export @@LD_LIBRARY_PATH_VAR@@; \
	TCL_LIBRARY=@@TCL_SRC_DIR@@/library; export TCL_LIBRARY; \
	TK_LIBRARY=@@TK_SRC_DIR@@/library; export TK_LIBRARY; \
	./wish $(SCRIPT)

# This target can be used to run wish inside either gdb or insight
gdb: wish
	@@echo "set env @@LD_LIBRARY_PATH_VAR@@=`pwd`:${TCL_BIN_DIR}:${@@LD_LIBRARY_PATH_VAR@@}" > gdb.run
	@@echo "set env TCL_LIBRARY=@@TCL_SRC_DIR@@/library" >> gdb.run
	@@echo "set env TK_LIBRARY=@@TK_SRC_DIR@@/library" >> gdb.run
	gdb ./wish --command=gdb.run
d538 41
a578 1
install: all install-binaries install-libraries install-demos install-doc
d584 2
a585 2
install-binaries: $(TK_LIB_FILE) $(TK_STUB_LIB_FILE) $(TK_BUILD_EXP_FILE) wish
	@@for i in $(LIB_INSTALL_DIR) $(BIN_INSTALL_DIR) $(PKG_INSTALL_DIR); \
d594 2
a595 12
	@@if test ! -x $(UNIX_DIR)/install-sh; then \
	    chmod +x $(UNIX_DIR)/install-sh; \
	    fi
	@@if test "x$(TK_SHARED_BUILD)" = "x1"; then \
	    echo "Creating package index $(PKG_INDEX)"; \
	    rm -f $(PKG_INDEX); \
	    (\
	    echo "if {[package vcompare [package provide Tcl]\
		$(TCLVERSION)] != 0} { return }";\
	    echo "package ifneeded Tk $(VERSION)\
		[list load [file join \$$dir .. $(TK_LIB_FILE)] Tk]";\
	    ) > $(PKG_INDEX); \
d600 9
a608 9
	@@echo "Installing wish as $(BIN_INSTALL_DIR)/wish$(VERSION)"
	@@$(INSTALL_PROGRAM) wish $(BIN_INSTALL_DIR)/wish$(VERSION)
	@@echo "Installing tkConfig.sh to $(LIB_INSTALL_DIR)/"
	@@$(INSTALL_DATA) tkConfig.sh $(LIB_INSTALL_DIR)/tkConfig.sh
	@@if test "$(TK_BUILD_EXP_FILE)" != ""; then \
	    echo "Installing $(TK_EXP_FILE) to $(LIB_INSTALL_DIR)/"; \
	    $(INSTALL_DATA) $(TK_BUILD_EXP_FILE) \
			$(LIB_INSTALL_DIR)/$(TK_EXP_FILE); \
	fi
d614 2
a615 4
install-libraries:
	@@for i in $(INCLUDE_INSTALL_DIR) \
		$(SCRIPT_INSTALL_DIR) $(SCRIPT_INSTALL_DIR)/images \
		$(SCRIPT_INSTALL_DIR)/msgs; \
d624 11
a634 2
	@@if test ! -x $(UNIX_DIR)/install-sh; then \
	    chmod +x $(UNIX_DIR)/install-sh; \
d637 2
a638 2
	@@for i in $(GENERIC_DIR)/tk.h $(GENERIC_DIR)/tkDecls.h \
		$(GENERIC_DIR)/tkPlatDecls.h ; \
d643 1
a643 2
	@@for i in $(SRC_DIR)/library/*.tcl $(GENERIC_DIR)/prolog.ps \
	        $(SRC_DIR)/library/tclIndex $(UNIX_DIR)/tkAppInit.c; \
d647 2
a648 9
	@@echo "Installing library images directory";
	@@for i in $(SRC_DIR)/library/images/*; \
	    do \
	    if [ -f $$i ] ; then \
		$(INSTALL_DATA) $$i $(SCRIPT_INSTALL_DIR)/images; \
	    fi; \
	    done;
	@@echo "Installing translation directory";
	@@for i in $(SRC_DIR)/library/msgs/*.msg; \
d650 1
a650 3
	    if [ -f $$i ] ; then \
		$(INSTALL_DATA) $$i $(SCRIPT_INSTALL_DIR)/msgs; \
	    fi; \
d652 2
a653 5

install-demos:
	@@for i in $(SCRIPT_INSTALL_DIR) \
		$(SCRIPT_INSTALL_DIR)/demos \
		$(SCRIPT_INSTALL_DIR)/demos/images ; \
d655 1
a655 6
	    if [ ! -d $$i ] ; then \
		echo "Making directory $$i"; \
		mkdir -p $$i; \
		chmod 755 $$i; \
		else true; \
		fi; \
d657 2
a658 2
	@@echo "Installing demos to $(SCRIPT_INSTALL_DIR)/demos/";
	@@for i in $(SRC_DIR)/library/demos/*; \
d660 1
a660 4
	    if [ -f $$i ] ; then \
		sed -e '3 s|exec wish|exec wish$(VERSION)|' \
			$$i > $(SCRIPT_INSTALL_DIR)/demos/`basename $$i`; \
	    fi; \
d662 2
a663 1
	@@for i in $(DEMOPROGS); \
d665 1
a665 1
	    chmod 755 $(SCRIPT_INSTALL_DIR)/demos/$$i; \
d667 2
a668 2
	@@echo "Installing demo images";
	@@for i in $(SRC_DIR)/library/demos/images/*; \
d670 1
a670 3
	    if [ -f $$i ] ; then \
		$(INSTALL_DATA) $$i $(SCRIPT_INSTALL_DIR)/demos/images; \
		fi; \
d672 4
d677 1
a677 1
install-doc:
d691 1
a691 1
	@@cd $(SRC_DIR)/doc; for i in *.1; \
d701 1
a701 1
	@@cd $(SRC_DIR)/doc; for i in *.3; \
d708 1
a708 1
	@@echo "Cross-linking top-level (.3) docs";
d711 1
a711 1
	@@cd $(SRC_DIR)/doc; for i in *.n; \
d721 1
a721 1
Makefile: $(UNIX_DIR)/Makefile.in
d725 3
a727 2
	rm -f *.a *.o libtk* core errs *~ \#* TAGS *.E a.out errors \
		tktest wish config.info lib.exp
d730 1
a730 1
	rm -f Makefile config.status config.cache config.log tkConfig.sh \
d732 1
d737 9
a745 8
# Test binaries.  The rule for tkTestInit.o is complicated because
# it is is compiled from tkAppInit.c.  Can't use the "-o" option
# because this doesn't work on some strange compilers (e.g. UnixWare).

tkTestInit.o: $(UNIX_DIR)/tkAppInit.c
	@@if test -f tkAppInit.o ; then \
	    rm -f tkAppInit.sav; \
	    mv tkAppInit.o tkAppInit.sav; \
d747 7
a753 5
	$(CC) -c $(CC_SWITCHES_NO_STUBS) -DTK_TEST $(UNIX_DIR)/tkAppInit.c
	rm -f tkTestInit.o
	mv tkAppInit.o tkTestInit.o
	@@if test -f tkAppInit.sav ; then \
	    mv tkAppInit.sav tkAppInit.o; \
d756 40
a795 2
tkAppInit.o: $(UNIX_DIR)/tkAppInit.c
	$(CC) -c $(CC_SWITCHES_NO_STUBS) $(UNIX_DIR)/tkAppInit.c
d797 2
a798 2
tk3d.o: $(GENERIC_DIR)/tk3d.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tk3d.c
d800 2
a801 2
tkArgv.o: $(GENERIC_DIR)/tkArgv.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tkArgv.c
d803 2
a804 2
tkAtom.o: $(GENERIC_DIR)/tkAtom.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tkAtom.c
d806 2
a807 2
tkBind.o: $(GENERIC_DIR)/tkBind.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tkBind.c
d809 2
a810 2
tkBitmap.o: $(GENERIC_DIR)/tkBitmap.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tkBitmap.c
d812 2
a813 2
tkClipboard.o: $(GENERIC_DIR)/tkClipboard.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tkClipboard.c
d815 2
a816 2
tkCmds.o: $(GENERIC_DIR)/tkCmds.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tkCmds.c
d818 2
a819 2
tkColor.o: $(GENERIC_DIR)/tkColor.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tkColor.c
d821 2
a822 2
tkConfig.o: $(GENERIC_DIR)/tkConfig.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tkConfig.c
d824 2
a825 2
tkConsole.o: $(GENERIC_DIR)/tkConsole.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tkConsole.c
d827 2
a828 2
tkCursor.o: $(GENERIC_DIR)/tkCursor.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tkCursor.c
d830 2
a831 2
tkError.o: $(GENERIC_DIR)/tkError.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tkError.c
d833 2
a834 2
tkEvent.o: $(GENERIC_DIR)/tkEvent.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tkEvent.c
d836 2
a837 2
tkFocus.o: $(GENERIC_DIR)/tkFocus.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tkFocus.c
d839 2
a840 2
tkFont.o: $(GENERIC_DIR)/tkFont.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tkFont.c
d842 2
a843 2
tkGet.o: $(GENERIC_DIR)/tkGet.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tkGet.c
d845 2
a846 2
tkGC.o: $(GENERIC_DIR)/tkGC.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tkGC.c
d848 2
a849 2
tkGeometry.o: $(GENERIC_DIR)/tkGeometry.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tkGeometry.c
d851 2
a852 2
tkGrab.o: $(GENERIC_DIR)/tkGrab.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tkGrab.c
d854 2
a855 2
tkGrid.o: $(GENERIC_DIR)/tkGrid.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tkGrid.c
d857 2
a858 2
tkMain.o: $(GENERIC_DIR)/tkMain.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tkMain.c
d860 2
a861 2
tkObj.o: $(GENERIC_DIR)/tkObj.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tkObj.c
d863 2
a864 2
tkOldConfig.o: $(GENERIC_DIR)/tkOldConfig.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tkOldConfig.c
d866 2
a867 2
tkOption.o: $(GENERIC_DIR)/tkOption.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tkOption.c
d869 2
a870 2
tkPack.o: $(GENERIC_DIR)/tkPack.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tkPack.c
d872 2
a873 2
tkPlace.o: $(GENERIC_DIR)/tkPlace.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tkPlace.c
d875 2
a876 2
tkSelect.o: $(GENERIC_DIR)/tkSelect.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tkSelect.c
d878 2
a879 2
tkStyle.o: $(GENERIC_DIR)/tkStyle.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tkStyle.c
d881 2
a882 2
tkUtil.o: $(GENERIC_DIR)/tkUtil.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tkUtil.c
d884 2
a885 2
tkVisual.o: $(GENERIC_DIR)/tkVisual.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tkVisual.c
d887 2
a888 2
tkWindow.o: $(GENERIC_DIR)/tkWindow.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tkWindow.c
d890 2
a891 2
tkButton.o: $(GENERIC_DIR)/tkButton.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tkButton.c
d893 2
a894 2
tkEntry.o: $(GENERIC_DIR)/tkEntry.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tkEntry.c
d896 2
a897 2
tkFrame.o: $(GENERIC_DIR)/tkFrame.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tkFrame.c
d899 2
a900 2
tkListbox.o: $(GENERIC_DIR)/tkListbox.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tkListbox.c
d902 2
a903 2
tkMenu.o: $(GENERIC_DIR)/tkMenu.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tkMenu.c
d905 2
a906 2
tkMenubutton.o: $(GENERIC_DIR)/tkMenubutton.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tkMenubutton.c
d908 2
a909 2
tkMenuDraw.o: $(GENERIC_DIR)/tkMenuDraw.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tkMenuDraw.c
d911 2
a912 2
tkMessage.o: $(GENERIC_DIR)/tkMessage.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tkMessage.c
d914 2
a915 2
tkPanedWindow.o: $(GENERIC_DIR)/tkPanedWindow.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tkPanedWindow.c
d917 2
a918 2
tkScale.o: $(GENERIC_DIR)/tkScale.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tkScale.c
d920 2
a921 2
tkScrollbar.o: $(GENERIC_DIR)/tkScrollbar.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tkScrollbar.c
d923 2
a924 2
tkSquare.o: $(GENERIC_DIR)/tkSquare.c
	$(CC) -c $(CC_SWITCHES_NO_STUBS) $(GENERIC_DIR)/tkSquare.c
d926 2
a927 2
tkCanvas.o: $(GENERIC_DIR)/tkCanvas.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tkCanvas.c
d929 2
a930 2
tkCanvArc.o: $(GENERIC_DIR)/tkCanvArc.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tkCanvArc.c
d932 2
a933 2
tkCanvBmap.o: $(GENERIC_DIR)/tkCanvBmap.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tkCanvBmap.c
d935 2
a936 2
tkCanvImg.o: $(GENERIC_DIR)/tkCanvImg.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tkCanvImg.c
d938 2
a939 2
tkCanvLine.o: $(GENERIC_DIR)/tkCanvLine.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tkCanvLine.c
d941 2
a942 2
tkCanvPoly.o: $(GENERIC_DIR)/tkCanvPoly.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tkCanvPoly.c
d944 2
a945 2
tkCanvPs.o: $(GENERIC_DIR)/tkCanvPs.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tkCanvPs.c
d947 2
a948 2
tkCanvText.o: $(GENERIC_DIR)/tkCanvText.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tkCanvText.c
d950 2
a951 2
tkCanvUtil.o: $(GENERIC_DIR)/tkCanvUtil.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tkCanvUtil.c
d953 2
a954 2
tkCanvWind.o: $(GENERIC_DIR)/tkCanvWind.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tkCanvWind.c
d956 2
a957 2
tkRectOval.o: $(GENERIC_DIR)/tkRectOval.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tkRectOval.c
d959 2
a960 2
tkTrig.o: $(GENERIC_DIR)/tkTrig.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tkTrig.c
d962 2
a963 2
tkImage.o: $(GENERIC_DIR)/tkImage.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tkImage.c
d965 2
a966 2
tkImgBmap.o: $(GENERIC_DIR)/tkImgBmap.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tkImgBmap.c
d968 2
a969 2
tkImgGIF.o: $(GENERIC_DIR)/tkImgGIF.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tkImgGIF.c
d971 2
a972 2
tkImgPPM.o: $(GENERIC_DIR)/tkImgPPM.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tkImgPPM.c
d974 2
a975 2
tkImgPhoto.o: $(GENERIC_DIR)/tkImgPhoto.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tkImgPhoto.c
d977 2
a978 2
tkTest.o: $(GENERIC_DIR)/tkTest.c
	$(CC) -c $(CC_SWITCHES_NO_STUBS) $(GENERIC_DIR)/tkTest.c
d980 2
a981 2
tkText.o: $(GENERIC_DIR)/tkText.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tkText.c
d983 2
a984 2
tkTextBTree.o: $(GENERIC_DIR)/tkTextBTree.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tkTextBTree.c
d986 2
a987 2
tkTextDisp.o: $(GENERIC_DIR)/tkTextDisp.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tkTextDisp.c
d989 2
a990 2
tkTextImage.o: $(GENERIC_DIR)/tkTextImage.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tkTextImage.c
d992 2
a993 2
tkTextIndex.o: $(GENERIC_DIR)/tkTextIndex.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tkTextIndex.c
d995 2
a996 2
tkTextMark.o: $(GENERIC_DIR)/tkTextMark.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tkTextMark.c
d998 2
a999 2
tkTextTag.o: $(GENERIC_DIR)/tkTextTag.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tkTextTag.c
d1001 2
a1002 2
tkTextWind.o: $(GENERIC_DIR)/tkTextWind.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tkTextWind.c
d1004 2
a1005 2
tkStubInit.o: $(GENERIC_DIR)/tkStubInit.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tkStubInit.c
d1007 8
a1014 2
# Stub library binaries, these must be compiled for use in a shared library
# even though they will be placed in a static archive
d1016 2
a1017 2
tkStubLib.o: $(GENERIC_DIR)/tkStubLib.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tkStubLib.c
d1019 2
a1020 2
tkStubImg.o: $(GENERIC_DIR)/tkStubImg.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tkStubImg.c
d1022 2
a1023 2
tkUndo.o: $(GENERIC_DIR)/tkUndo.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tkUndo.c
d1025 2
a1026 2
tkUnix.o: $(UNIX_DIR)/tkUnix.c
	$(CC) -c $(CC_SWITCHES) $(UNIX_DIR)/tkUnix.c
d1028 2
a1029 2
tkUnix3d.o: $(UNIX_DIR)/tkUnix3d.c
	$(CC) -c $(CC_SWITCHES) $(UNIX_DIR)/tkUnix3d.c
d1031 2
a1032 2
tkUnixButton.o: $(UNIX_DIR)/tkUnixButton.c
	$(CC) -c $(CC_SWITCHES) $(UNIX_DIR)/tkUnixButton.c
d1034 2
a1035 2
tkUnixColor.o: $(UNIX_DIR)/tkUnixColor.c
	$(CC) -c $(CC_SWITCHES) $(UNIX_DIR)/tkUnixColor.c
d1037 4
a1040 2
tkUnixConfig.o: $(UNIX_DIR)/tkUnixConfig.c
	$(CC) -c $(CC_SWITCHES) $(UNIX_DIR)/tkUnixConfig.c
d1042 3
a1044 2
tkUnixCursor.o: $(UNIX_DIR)/tkUnixCursor.c
	$(CC) -c $(CC_SWITCHES) $(UNIX_DIR)/tkUnixCursor.c
d1046 3
a1048 2
tkUnixDraw.o: $(UNIX_DIR)/tkUnixDraw.c
	$(CC) -c $(CC_SWITCHES) $(UNIX_DIR)/tkUnixDraw.c
d1050 5
a1054 2
tkUnixEmbed.o: $(UNIX_DIR)/tkUnixEmbed.c
	$(CC) -c $(CC_SWITCHES) $(UNIX_DIR)/tkUnixEmbed.c
d1056 3
a1058 2
tkUnixEvent.o: $(UNIX_DIR)/tkUnixEvent.c
	$(CC) -c $(CC_SWITCHES) $(UNIX_DIR)/tkUnixEvent.c
d1060 3
a1062 2
tkUnixFocus.o: $(UNIX_DIR)/tkUnixFocus.c
	$(CC) -c $(CC_SWITCHES) $(UNIX_DIR)/tkUnixFocus.c
d1064 4
a1067 2
tkUnixFont.o: $(UNIX_DIR)/tkUnixFont.c
	$(CC) -c $(CC_SWITCHES) $(UNIX_DIR)/tkUnixFont.c
d1069 2
a1070 3
tkUnixInit.o: $(UNIX_DIR)/tkUnixInit.c $(GENERIC_DIR)/tkInitScript.h tkConfig.sh
	$(CC) -c $(CC_SWITCHES) -DTK_LIBRARY=\"${TK_LIBRARY}\" \
	    $(UNIX_DIR)/tkUnixInit.c
d1072 2
a1073 2
tkUnixKey.o: $(UNIX_DIR)/tkUnixKey.c
	$(CC) -c $(CC_SWITCHES) $(UNIX_DIR)/tkUnixKey.c
d1075 2
a1076 2
tkUnixMenu.o: $(UNIX_DIR)/tkUnixMenu.c
	$(CC) -c $(CC_SWITCHES) $(UNIX_DIR)/tkUnixMenu.c
d1078 2
a1079 2
tkUnixMenubu.o: $(UNIX_DIR)/tkUnixMenubu.c
	$(CC) -c $(CC_SWITCHES) $(UNIX_DIR)/tkUnixMenubu.c
d1081 2
a1082 2
tkUnixScale.o: $(UNIX_DIR)/tkUnixScale.c
	$(CC) -c $(CC_SWITCHES) $(UNIX_DIR)/tkUnixScale.c
d1084 2
a1085 2
tkUnixScrlbr.o: $(UNIX_DIR)/tkUnixScrlbr.c
	$(CC) -c $(CC_SWITCHES) $(UNIX_DIR)/tkUnixScrlbr.c
d1087 2
a1088 2
tkUnixSelect.o: $(UNIX_DIR)/tkUnixSelect.c
	$(CC) -c $(CC_SWITCHES) $(UNIX_DIR)/tkUnixSelect.c
d1090 2
a1091 2
tkUnixSend.o: $(UNIX_DIR)/tkUnixSend.c
	$(CC) -c $(CC_SWITCHES) $(UNIX_DIR)/tkUnixSend.c
d1093 2
a1094 2
tkUnixWm.o: $(UNIX_DIR)/tkUnixWm.c
	$(CC) -c $(CC_SWITCHES) $(UNIX_DIR)/tkUnixWm.c
d1096 2
a1097 2
tkUnixXId.o: $(UNIX_DIR)/tkUnixXId.c
	$(CC) -c $(CC_SWITCHES) $(UNIX_DIR)/tkUnixXId.c
d1099 2
a1100 2
.c.o:
	$(CC) -c $(CC_SWITCHES) $<
d1102 2
a1103 3
#
# Target to check for proper usage of UCHAR macro.
#
d1105 2
a1106 2
checkuchar:
	-egrep isalnum\|isalpha\|iscntrl\|isdigit\|islower\|isprint\|ispunct\|isspace\|isupper\|isxdigit\|toupper\|tolower $(SRCS) | grep -v UCHAR
a1107 4
#
# Target to make sure that only symbols with "Tk" prefixes are
# exported.
#
d1109 2
a1110 2
checkexports: $(TK_LIB_FILE)
	-nm -p $(TK_LIB_FILE) | awk '$$2 ~ /[TDB]/ { print $$3 }' | sort -n | grep -v '^[Tt]k'
d1112 2
d1116 1
a1116 1
# Regenerate the stubs files.
d1119 3
a1121 3
$(GENERIC_DIR)/tkStubInit.c: $(GENERIC_DIR)/tk.decls \
		$(GENERIC_DIR)/tkInt.decls
	@@echo "Warning: tkStubInit.c may be out of date."
d1127 1
a1127 1
		$(GENERIC_DIR)/tk.decls $(GENERIC_DIR)/tkInt.decls
d1135 1
a1135 1
	-@@for i in `nm -p $(TK_LIB_FILE) | awk '$$2 ~ /T/ { print $$3 }' \
d1138 1
a1138 1
		for j in $(TK_DECLS); do \
d1146 17
d1165 16
a1180 1
# Target to create a Tk RPM for Linux.  Requires that you be on a Linux
d1186 3
a1188 3
	echo "%define _builddir `pwd`" > THIS.TK.SPEC
	echo "%define _rpmdir `pwd`/RPMS" >> THIS.TK.SPEC
	cat tk.spec >> THIS.TK.SPEC
d1190 1
a1190 1
	rpm -bb THIS.TK.SPEC
d1192 1
a1192 1
	rm -rf RPMS THIS.TK.SPEC
d1195 1
a1195 1
	$(TCL_EXE) $(TCLDIR)/unix/mkLinks.tcl \
d1200 1
a1200 1
# Target to create a proper Tk distribution from information in the
d1202 1
a1202 1
# to put the distribution.  DISTDIR must be an absolute path name.
d1206 3
a1208 4
DISTNAME =	tk${VERSION}${PATCH_LEVEL}
ZIPNAME =	tk${MAJOR_VERSION}${MINOR_VERSION}${PATCH_LEVEL}.zip
DISTDIR =	$(DISTROOT)/$(DISTNAME)
TCLDIR = 	@@TCL_SRC_DIR@@
d1212 1
a1212 1
dist:   $(UNIX_DIR)/configure mklinks
d1214 1
a1214 2
	mkdir -p $(DISTDIR)
	mkdir $(DISTDIR)/unix
d1216 1
a1216 1
	cp $(TOP_DIR)/license.terms $(UNIX_DIR)/Makefile.in $(DISTDIR)/unix
d1218 6
a1223 4
	cp $(UNIX_DIR)/configure $(UNIX_DIR)/configure.in $(UNIX_DIR)/tk.spec \
		$(UNIX_DIR)/aclocal.m4 $(UNIX_DIR)/tcl.m4 \
		$(UNIX_DIR)/tkConfig.sh.in $(TCLDIR)/unix/install-sh \
		$(UNIX_DIR)/README $(UNIX_DIR)/mkLinks $(DISTDIR)/unix
d1225 1
a1226 7
	mkdir $(DISTDIR)/bitmaps
	@@(cd $(TOP_DIR); for i in bitmaps/* ; do \
	    if [ -f $$i ] ; then \
		sed -e 's/static char/static unsigned char/' \
		       $$i > $(DISTDIR)/$$i; \
	    fi; \
	done;)
d1228 1
a1228 2
	cp -p $(GENERIC_DIR)/*.c $(GENERIC_DIR)/*.h $(GENERIC_DIR)/prolog.ps \
		$(DISTDIR)/generic
d1231 26
a1256 3
	cp -p $(TOP_DIR)/changes $(TOP_DIR)/ChangeLog $(TOP_DIR)/README \
		$(TOP_DIR)/license.terms $(DISTDIR)
	rm -f $(DISTDIR)/generic/blt*.[ch]
d1259 6
a1264 4
	cp $(TOP_DIR)/win/configure.in \
		$(TOP_DIR)/win/configure \
		$(TOP_DIR)/win/tkConfig.sh.in \
		$(TOP_DIR)/win/aclocal.m4 $(TOP_DIR)/win/tcl.m4 \
a1265 1
	cp -p $(TOP_DIR)/win/*.c $(TOP_DIR)/win/*.h $(DISTDIR)/win
d1272 6
a1278 1
	cp -p $(TOP_DIR)/win/lamp.bmp $(DISTDIR)/win
a1279 7
	mkdir $(DISTDIR)/win/rc
	cp -p $(TOP_DIR)/win/rc/wish.exe.manifest $(DISTDIR)/win/rc/
	cp -p $(TOP_DIR)/win/rc/*.rc $(TOP_DIR)/win/rc/*.cur \
		$(TOP_DIR)/win/rc/*.ico $(TOP_DIR)/win/rc/*.bmp \
		$(DISTDIR)/win/rc
	$(TCL_EXE) $(TOOL_DIR)/eolFix.tcl -crlf $(DISTDIR)/win/rc/*.rc
	$(TCL_EXE) $(TOOL_DIR)/eolFix.tcl -crlf $(DISTDIR)/win/rc/wish.exe.manifest
d1281 2
a1282 2
	cp -p $(TOP_DIR)/mac/tkMacProjects.sea.hqx $(DISTDIR)/mac
	cp -p $(TOP_DIR)/mac/*.c $(TOP_DIR)/mac/*.h $(TOP_DIR)/mac/*.r \
d1284 3
a1286 1
	cp -p $(TOP_DIR)/mac/README $(DISTDIR)/mac
a1287 3
	cp -p $(TOP_DIR)/mac/*.pch $(DISTDIR)/mac
	cp -p $(TOP_DIR)/mac/*.doc $(DISTDIR)/mac
	cp -p $(TOP_DIR)/mac/*.tcl $(DISTDIR)/mac
d1289 18
a1306 57
	cp -p $(TOP_DIR)/macosx/Makefile $(TOP_DIR)/macosx/Wish.icns \
		$(TOP_DIR)/macosx/*.c $(TOP_DIR)/macosx/*.h \
		$(TOP_DIR)/macosx/*.r $(DISTDIR)/macosx
	mkdir $(DISTDIR)/macosx/Wish.pbproj
	cp -p $(TOP_DIR)/macosx/Wish.pbproj/*.pbx* \
		$(DISTDIR)/macosx/Wish.pbproj
	mkdir $(DISTDIR)/compat
	cp -p $(TOP_DIR)/license.terms $(TCLDIR)/compat/unistd.h \
		$(TCLDIR)/compat/stdlib.h $(TCLDIR)/compat/limits.h \
		$(DISTDIR)/compat
	mkdir $(DISTDIR)/xlib
	cp -p $(TOP_DIR)/xlib/*.h $(TOP_DIR)/xlib/*.c $(DISTDIR)/xlib
	cp -p $(TOP_DIR)/license.terms $(DISTDIR)/xlib
	mkdir $(DISTDIR)/xlib/X11
	cp -p $(TOP_DIR)/xlib/X11/*.h $(DISTDIR)/xlib/X11
	cp -p $(TOP_DIR)/license.terms $(DISTDIR)/xlib/X11
	mkdir $(DISTDIR)/library
	cp -p $(TOP_DIR)/license.terms $(TOP_DIR)/library/*.tcl \
		$(TOP_DIR)/library/tclIndex \
		$(DISTDIR)/library
	mkdir $(DISTDIR)/library/images
	@@(cd $(TOP_DIR); for i in library/images/* ; do \
	    if [ -f $$i ] ; then \
		cp $$i $(DISTDIR)/$$i; \
	    fi; \
	done;)
	mkdir $(DISTDIR)/library/msgs
	@@(cd $(TOP_DIR); for i in library/msgs/*.msg ; do \
	    if [ -f $$i ] ; then \
		cp $$i $(DISTDIR)/$$i; \
	    fi; \
	done;)
	mkdir $(DISTDIR)/library/demos
	cp -pr $(TOP_DIR)/library/demos/*.tcl \
		$(TOP_DIR)/library/demos/tclIndex \
		$(TOP_DIR)/library/demos/browse \
		$(TOP_DIR)/library/demos/hello $(TOP_DIR)/library/demos/ixset \
		$(TOP_DIR)/library/demos/rmt $(TOP_DIR)/library/demos/rolodex \
		$(TOP_DIR)/library/demos/square \
		$(TOP_DIR)/library/demos/tcolor \
		$(TOP_DIR)/library/demos/timer \
		$(TOP_DIR)/library/demos/widget \
		$(TOP_DIR)/library/demos/README \
		$(TOP_DIR)/license.terms $(DISTDIR)/library/demos
	mkdir $(DISTDIR)/library/demos/images
	@@(cd $(TOP_DIR); for i in library/demos/images/* ; do \
	    if [ -f $$i ] ; then \
		cp $$i $(DISTDIR)/$$i; \
	    fi; \
	done;)
	mkdir $(DISTDIR)/doc
	cp -p $(TOP_DIR)/license.terms $(TOP_DIR)/doc/*.[13n] \
		$(TCLDIR)/doc/man.macros $(DISTDIR)/doc
	mkdir $(DISTDIR)/tests
	cp -p $(TOP_DIR)/license.terms $(TOP_DIR)/tests/*.test \
		$(TOP_DIR)/tests/*.tcl $(TOP_DIR)/tests/README \
		$(TOP_DIR)/tests/option.file* $(DISTDIR)/tests
d1333 3
a1335 3
	mv $(DISTROOT)/tk${VERSION} $(DISTROOT)/old
	mv $(DISTROOT)/$(DISTNAME) $(DISTROOT)/tk${VERSION}
	cd $(DISTROOT); tar cf $(DISTNAME).tar tk${VERSION}; \
d1337 15
a1351 3
		compress $(DISTNAME).tar; zip -r8 $(ZIPNAME) tk${VERSION}
	mv $(DISTROOT)/tk${VERSION} $(DISTROOT)/$(DISTNAME)
	mv $(DISTROOT)/old $(DISTROOT)/tk${VERSION}
d1357 1
a1357 1
# programs found only in the Tcl greoup's tool workspace.
d1360 4
a1363 4
macdist: dist
	rm -f $(DISTDIR)/mac/tkMacProjects.sea.hqx
	$(TCL_EXE) $(TOOL_DIR)/man2html.tcl $(DISTDIR)/tmp ../.. tk$(VERSION)
	mv $(DISTDIR)/tmp/tk$(VERSION) $(DISTDIR)/html
a1364 1
	rm -rf $(DISTDIR)/tmp
d1388 1
a1388 1
PACKAGE=SCRPtk
d1399 2
a1400 3
        ../configure --prefix=/opt/SUNWtcl/$(TCLVERSION) \
		--exec_prefix=/opt/SUNWtcl/$(TCLVERSION)/`arch` \
		--with-tcl=$(DISTDIR)/../tcl$(TCLVERSION)/unix/`arch` \
d1402 2
a1403 2
	mkdir -p $(DISTDIR)/SUNWtcl/$(TCLVERSION)
	mkdir -p $(DISTDIR)/SUNWtcl/$(TCLVERSION)/`arch`
d1412 7
a1418 8
	$(MAKE) install-libraries install-doc \
		prefix=$(DISTDIR)/SUNWtcl/$(TCLVERSION) \
		exec_prefix=$(DISTDIR)/SUNWtcl/$(TCLVERSION)/`arch`
	mkdir -p $(DISTDIR)/SUNWtcl/$(TCLVERSION)/bin
	sed -e "s/TCLVERSION/$(TCLVERSION)/g" \
		-e "s/TKVERSION/$(VERSION)/g" < $(UNIX_DIR)/wish.sh \
		> $(DISTDIR)/SUNWtcl/$(TCLVERSION)/bin/wish$(VERSION)
	chmod 755 $(DISTDIR)/SUNWtcl/$(TCLVERSION)/bin/wish$(VERSION)
d1427 2
a1428 2
	$(MAKE) install-binaries prefix=$(DISTDIR)/SUNWtcl/$(TCLVERSION) \
		exec_prefix=$(DISTDIR)/SUNWtcl/$(TCLVERSION)/`arch`
d1436 7
a1442 7
	pkgproto $(DISTDIR)/SUNWtcl/$(TCLVERSION)/bin=bin \
		 $(DISTDIR)/SUNWtcl/$(TCLVERSION)/include=include \
		 $(DISTDIR)/SUNWtcl/$(TCLVERSION)/lib=lib \
		 $(DISTDIR)/SUNWtcl/$(TCLVERSION)/man=man \
		 $(DISTDIR)/SUNWtcl/$(TCLVERSION)/`arch`=`arch` \
	| $(TCL_EXE) $(TCLDIR)/unix/mkProto.tcl $(TCLVERSION) \
		$(UNIX_DIR) > prototype
@


1.1.1.5
log
@one more time: import tcl 8.4.0
@
text
@d2 1
a2 1
# This file is a Makefile for Tcl.  If it has the name "Makefile.in"
d8 1
a8 1
# RCS: @@(#) $Id: Makefile.in,v 1.116 2002/09/10 09:57:42 das Exp $
d10 8
a17 4
VERSION 		= @@TCL_VERSION@@
MAJOR_VERSION		= @@TCL_MAJOR_VERSION@@
MINOR_VERSION		= @@TCL_MINOR_VERSION@@
PATCH_LEVEL		= @@TCL_PATCH_LEVEL@@
d30 1
a30 2
# to the "configure" script.  The *dir vars are standard configure
# substitutions that are based off prefix and exec_prefix.
d46 4
a49 2
# Path for the platform independent Tcl scripting libraries:
TCL_LIBRARY		= $(prefix)/lib/tcl$(VERSION)
d54 1
a54 1
# Directory in which to install the program tclsh:
d57 1
a57 1
# Directory in which to install libtcl.so or libtcl.a:
d60 2
a61 2
# Path name to use when installing library scripts.
SCRIPT_INSTALL_DIR	= $(INSTALL_ROOT)$(TCL_LIBRARY)
d63 1
a63 1
# Directory in which to install the include file tcl.h:
d66 1
a66 1
# Top-level directory in which to install manual entries:
d69 1
a69 1
# Directory in which to install manual entry for tclsh:
d72 1
a72 1
# Directory in which to install manual entries for Tcl's C library
d77 1
a77 1
# Tcl commands:
d80 11
a90 2
# Package search path.
TCL_PACKAGE_PATH	= @@TCL_PACKAGE_PATH@@
d93 10
a102 1
TCL_DBGX		= @@TCL_DBGX@@
d123 18
a145 31
# Mathematical functions like sin and atan2 are enabled for expressions
# by default.  To disable them, reverse the comment characters on the
# following pairs of lines:
MATH_FLAGS		=
#MATH_FLAGS		= -DTCL_NO_MATH
MATH_LIBS		= @@MATH_LIBS@@
#MATH_LIBS		=

# If you use the setenv, putenv, or unsetenv procedures to modify
# environment variables in your application and you'd like those
# modifications to appear in the "env" Tcl variable, switch the
# comments on the two lines below so that Tcl provides these
# procedures instead of your standard C library.

ENV_FLAGS =
#ENV_FLAGS = -DTclSetEnv=setenv -DTcl_PutEnv=putenv -DTclUnsetEnv=unsetenv

# To compile for non-UNIX systems (so that only the non-UNIX-specific
# commands are available), reverse the comment characters on the
# following pairs of lines.  In addition, you'll have to provide your
# own replacement for the "panic" procedure (see panic.c for what
# the current one does).
GENERIC_FLAGS =
#GENERIC_FLAGS = -DTCL_GENERIC_ONLY
UNIX_OBJS = tclUnixChan.o tclUnixEvent.o tclUnixFCmd.o \
	tclUnixFile.o tclUnixPipe.o tclUnixSock.o \
	tclUnixTime.o tclUnixInit.o tclUnixThrd.o 
#UNIX_OBJS =
NOTIFY_OBJS = tclUnixNotfy.o
#NOTIFY_OBJS =

d150 1
a150 1
MEM_DEBUG_FLAGS		= @@MEM_DEBUG_FLAGS@@
d153 12
a164 19
TCL_STUB_LIB_FILE	= @@TCL_STUB_LIB_FILE@@
#TCL_STUB_LIB_FILE	= libtclstub.a

# Generic stub lib name used in rules that apply to tcl and tk
STUB_LIB_FILE		= ${TCL_STUB_LIB_FILE}

TCL_STUB_LIB_FLAG	= @@TCL_STUB_LIB_FLAG@@
#TCL_STUB_LIB_FLAG	= -ltclstub

# To enable compilation debugging reverse the comment characters on
# one of the following lines.
COMPILE_DEBUG_FLAGS	=
#COMPILE_DEBUG_FLAGS	= -DTCL_COMPILE_STATS
#COMPILE_DEBUG_FLAGS	= -DTCL_COMPILE_DEBUG -DTCL_COMPILE_STATS

# To compile without backward compatibility and deprecated code
# uncomment the following
NO_DEPRECATED_FLAGS	=
#NO_DEPRECATED_FLAGS	= -DTCL_NO_DEPRECATED
d170 1
a170 1
# Tcl used to let the configure script choose which program to use
a174 3
INSTALL_STRIP_PROGRAM   = -s
INSTALL_STRIP_LIBRARY  = -S -S

d188 1
a188 2
# libraries.  See configure.in for a description of what the
# symbols mean.  The values of the symbols are normally set by the
a191 2
STLIB_LD		= @@STLIB_LD@@
SHLIB_LD		= @@SHLIB_LD@@
a192 3
SHLIB_LD_FLAGS		= @@SHLIB_LD_FLAGS@@
SHLIB_LD_LIBS		= @@SHLIB_LD_LIBS@@
TCL_SHLIB_LD_EXTRAS	= @@TCL_SHLIB_LD_EXTRAS@@
d194 2
a195 2
SHLIB_SUFFIX		= @@SHLIB_SUFFIX@@
#SHLIB_SUFFIX		=
d197 2
a198 1
DLTEST_TARGETS		= dltest.marker
d200 2
a201 5
# Additional search flags needed to find the various shared libraries
# at run-time.  The first symbol is for use when creating a binary
# with cc, and the second is for use when running ld directly.
CC_SEARCH_FLAGS	= @@CC_SEARCH_FLAGS@@
LD_SEARCH_FLAGS	= @@LD_SEARCH_FLAGS@@
d203 2
a204 7
# The following symbol is defined to "$(DLTEST_TARGETS)" if dynamic
# loading is available;  this causes everything in the "dltest"
# subdirectory to be built when making "tcltest.  If dynamic loading
# isn't available, configure defines this symbol to an empty string,
# in which case the shared libraries aren't built.
BUILD_DLTEST		= @@BUILD_DLTEST@@
#BUILD_DLTEST		=
d206 2
a207 2
TCL_LIB_FILE		= @@TCL_LIB_FILE@@
#TCL_LIB_FILE		= libtcl.a
d210 21
a230 1
LIB_FILE		= ${TCL_LIB_FILE}
d232 4
a235 2
TCL_LIB_FLAG		= @@TCL_LIB_FLAG@@
#TCL_LIB_FLAG		= -ltcl
d237 5
a241 2
TCL_EXP_FILE		= @@TCL_EXP_FILE@@
TCL_BUILD_EXP_FILE	= @@TCL_BUILD_EXP_FILE@@
a251 2
COMPAT_OBJS		= @@LIBOBJS@@

d255 1
a255 1
SRC_DIR			= @@srcdir@@
d258 3
a260 24
COMPAT_DIR		= $(TOP_DIR)/compat
TOOL_DIR		= $(TOP_DIR)/tools
UNIX_DIR		= $(TOP_DIR)/unix
MAC_OSX_DIR		= $(TOP_DIR)/macosx
# Must be absolute because of the cd dltest $(DLTEST_DIR)/configure below.
DLTEST_DIR		= @@TCL_SRC_DIR@@/unix/dltest
# Must be absolute to so the corresponding tcltest's tcl_library is absolute.
TCL_BUILDTIME_LIBRARY	= @@TCL_SRC_DIR@@/library

CC			= @@CC@@
#CC			= purify -best-effort @@CC@@ -DPURIFY

# Flags to be passed to mkLinks to control whether the manpages
# should be compressed and linked with softlinks
MKLINKS_FLAGS           = @@MKLINKS_FLAGS@@

#----------------------------------------------------------------
# The information below is usually usable as is.  The configure
# script won't modify it and it only exists to make working
# around selected rare system configurations easier.
#----------------------------------------------------------------

GDB			= gdb
DDD			= ddd
d268 3
d272 1
a272 163
CC_SWITCHES = ${CFLAGS} ${CFLAGS_WARNING} ${SHLIB_CFLAGS} \
-I${GENERIC_DIR} -I${SRC_DIR} \
${AC_FLAGS} ${MATH_FLAGS} ${GENERIC_FLAGS} ${PROTO_FLAGS} ${MEM_DEBUG_FLAGS} \
${COMPILE_DEBUG_FLAGS} ${NO_DEPRECATED_FLAGS} ${ENV_FLAGS} \
-DTCL_SHLIB_EXT=\"${SHLIB_SUFFIX}\"

STUB_CC_SWITCHES = ${CFLAGS} ${CFLAGS_WARNING} ${SHLIB_CFLAGS} \
-I${GENERIC_DIR} -I${SRC_DIR} \
${AC_FLAGS} ${MATH_FLAGS} ${GENERIC_FLAGS} ${PROTO_FLAGS} ${MEM_DEBUG_FLAGS} \
${COMPILE_DEBUG_FLAGS} ${ENV_FLAGS} -DTCL_SHLIB_EXT=\"${SHLIB_SUFFIX}\"

LIBS		= @@DL_LIBS@@ @@LIBS@@ $(MATH_LIBS)

DEPEND_SWITCHES	= ${CFLAGS} -I${GENERIC_DIR} -I${SRC_DIR} \
${AC_FLAGS} ${MATH_FLAGS} \
${GENERIC_FLAGS} ${PROTO_FLAGS} ${MEM_DEBUG_FLAGS} \
-DTCL_SHLIB_EXT=\"${SHLIB_SUFFIX}\"

TCLSH_OBJS = tclAppInit.o

TCLTEST_OBJS = tclTestInit.o tclTest.o tclTestObj.o tclTestProcBodyObj.o \
	tclThreadTest.o	tclUnixTest.o

XTTEST_OBJS = xtTestInit.o tclTest.o tclTestObj.o tclTestProcBodyObj.o \
	tclThreadTest.o	tclUnixTest.o tclXtNotify.o tclXtTest.o 

GENERIC_OBJS = regcomp.o regexec.o regfree.o regerror.o tclAlloc.o \
	tclAsync.o tclBasic.o tclBinary.o \
	tclCkalloc.o tclClock.o tclCmdAH.o tclCmdIL.o tclCmdMZ.o \
	tclCompCmds.o tclCompExpr.o tclCompile.o tclDate.o tclEncoding.o \
	tclEnv.o tclEvent.o tclExecute.o tclFCmd.o tclFileName.o tclGet.o \
	tclHash.o tclHistory.o tclIndexObj.o tclInterp.o tclIO.o tclIOCmd.o \
	tclIOGT.o tclIOSock.o tclIOUtil.o tclLink.o tclListObj.o \
	tclLiteral.o tclLoad.o tclMain.o tclNamesp.o tclNotify.o \
	tclObj.o tclPanic.o tclParse.o tclParseExpr.o tclPipe.o \
	tclPkg.o tclPosixStr.o tclPreserve.o tclProc.o tclRegexp.o \
	tclResolve.o tclResult.o tclScan.o tclStringObj.o tclThread.o \
	 tclThreadAlloc.o tclThreadJoin.o tclStubInit.o tclStubLib.o \
	tclTimer.o tclUtf.o tclUtil.o tclVar.o

STUB_LIB_OBJS = tclStubLib.o ${COMPAT_OBJS}

OBJS = ${GENERIC_OBJS} ${UNIX_OBJS} ${NOTIFY_OBJS} ${COMPAT_OBJS} \
        @@DL_OBJS@@ @@PLAT_OBJS@@

TCL_DECLS = \
	$(GENERIC_DIR)/tcl.decls \
	$(GENERIC_DIR)/tclInt.decls

GENERIC_HDRS = \
	$(GENERIC_DIR)/tcl.h \
	$(GENERIC_DIR)/tclDecls.h \
	$(GENERIC_DIR)/tclInt.h \
	$(GENERIC_DIR)/tclIntDecls.h \
	$(GENERIC_DIR)/tclIntPlatDecls.h \
	$(GENERIC_DIR)/tclPatch.h \
	$(GENERIC_DIR)/tclPlatDecls.h \
	$(GENERIC_DIR)/tclPort.h \
	$(GENERIC_DIR)/tclRegexp.h

GENERIC_SRCS = \
	$(GENERIC_DIR)/regcomp.c \
	$(GENERIC_DIR)/regexec.c \
	$(GENERIC_DIR)/regfree.c \
	$(GENERIC_DIR)/regerror.c \
	$(GENERIC_DIR)/tclAlloc.c \
	$(GENERIC_DIR)/tclAsync.c \
	$(GENERIC_DIR)/tclBasic.c \
	$(GENERIC_DIR)/tclBinary.c \
	$(GENERIC_DIR)/tclCkalloc.c \
	$(GENERIC_DIR)/tclClock.c \
	$(GENERIC_DIR)/tclCmdAH.c \
	$(GENERIC_DIR)/tclCmdIL.c \
	$(GENERIC_DIR)/tclCmdMZ.c \
	$(GENERIC_DIR)/tclCompCmds.c \
	$(GENERIC_DIR)/tclCompExpr.c \
	$(GENERIC_DIR)/tclCompile.c \
	$(GENERIC_DIR)/tclDate.c \
	$(GENERIC_DIR)/tclEncoding.c \
	$(GENERIC_DIR)/tclEnv.c \
	$(GENERIC_DIR)/tclEvent.c \
	$(GENERIC_DIR)/tclExecute.c \
	$(GENERIC_DIR)/tclFCmd.c \
	$(GENERIC_DIR)/tclFileName.c \
	$(GENERIC_DIR)/tclGet.c \
	$(GENERIC_DIR)/tclHash.c \
	$(GENERIC_DIR)/tclHistory.c \
	$(GENERIC_DIR)/tclIndexObj.c \
	$(GENERIC_DIR)/tclInterp.c \
	$(GENERIC_DIR)/tclIO.c \
	$(GENERIC_DIR)/tclIOCmd.c \
	$(GENERIC_DIR)/tclIOGT.c \
	$(GENERIC_DIR)/tclIOSock.c \
	$(GENERIC_DIR)/tclIOUtil.c \
	$(GENERIC_DIR)/tclLink.c \
	$(GENERIC_DIR)/tclListObj.c \
	$(GENERIC_DIR)/tclLiteral.c \
	$(GENERIC_DIR)/tclLoad.c \
	$(GENERIC_DIR)/tclMain.c \
	$(GENERIC_DIR)/tclNamesp.c \
	$(GENERIC_DIR)/tclNotify.c \
	$(GENERIC_DIR)/tclObj.c \
        $(GENERIC_DIR)/tclParse.c \
        $(GENERIC_DIR)/tclParseExpr.c \
	$(GENERIC_DIR)/tclPipe.c \
	$(GENERIC_DIR)/tclPkg.c \
	$(GENERIC_DIR)/tclPosixStr.c \
	$(GENERIC_DIR)/tclPreserve.c \
	$(GENERIC_DIR)/tclProc.c \
	$(GENERIC_DIR)/tclRegexp.c \
	$(GENERIC_DIR)/tclResolve.c \
	$(GENERIC_DIR)/tclResult.c \
	$(GENERIC_DIR)/tclScan.c \
	$(GENERIC_DIR)/tclStubInit.c \
	$(GENERIC_DIR)/tclStubLib.c \
	$(GENERIC_DIR)/tclStringObj.c \
	$(GENERIC_DIR)/tclTest.c \
	$(GENERIC_DIR)/tclTestObj.c \
	$(GENERIC_DIR)/tclTestProcBodyObj.c \
	$(GENERIC_DIR)/tclThread.c \
	$(GENERIC_DIR)/tclThreadAlloc.c \
	$(GENERIC_DIR)/tclThreadJoin.c \
	$(GENERIC_DIR)/tclTimer.c \
	$(GENERIC_DIR)/tclUtil.c \
	$(GENERIC_DIR)/tclVar.c

STUB_SRCS = \
	$(GENERIC_DIR)/tclStubLib.c

UNIX_HDRS = \
	$(UNIX_DIR)/tclUnixPort.h

UNIX_SRCS = \
	$(UNIX_DIR)/tclAppInit.c \
	$(UNIX_DIR)/tclUnixChan.c \
	$(UNIX_DIR)/tclUnixEvent.c \
	$(UNIX_DIR)/tclUnixFCmd.c \
	$(UNIX_DIR)/tclUnixFile.c \
	$(UNIX_DIR)/tclUnixNotfy.c \
	$(UNIX_DIR)/tclUnixPipe.c \
	$(UNIX_DIR)/tclUnixSock.c \
	$(UNIX_DIR)/tclUnixTest.c \
	$(UNIX_DIR)/tclUnixThrd.c \
	$(UNIX_DIR)/tclUnixTime.c \
	$(UNIX_DIR)/tclUnixInit.c

DL_SRCS = \
	$(UNIX_DIR)/tclLoadAix.c \
	$(UNIX_DIR)/tclLoadAout.c \
	$(UNIX_DIR)/tclLoadDl.c \
	$(UNIX_DIR)/tclLoadDl2.c \
	$(UNIX_DIR)/tclLoadDld.c \
	$(UNIX_DIR)/tclLoadDyld.c \
	$(GENERIC_DIR)/tclLoadNone.c \
	$(UNIX_DIR)/tclLoadOSF.c \
	$(UNIX_DIR)/tclLoadShl.c

MAC_OSX_SRCS = \
	$(MAC_OSX_DIR)/tclMacOSXBundle.c

# Note: don't include DL_SRCS or MAC_OSX_SRCS in SRCS: most of those
# files won't compile on the current machine, and they will cause
# problems for things like "make depend".
d274 111
a384 1
SRCS = $(GENERIC_SRCS) $(UNIX_SRCS) $(STUB_SRCS)
d388 1
a388 1
binaries: ${LIB_FILE} $(STUB_LIB_FILE) $(TCL_BUILD_EXP_FILE) tclsh
d392 5
a396 1
doc:
d399 2
a400 2
# a shared library or non-shared library for Tcl.
${LIB_FILE}: ${OBJS} ${STUB_LIB_FILE}
d408 2
a409 2
# Make target which outputs the list of the .o contained in the Tcl lib
# usefull to build a single big shared library containing Tcl and other
d411 1
a411 3
# The dependency on OBJS is not there because we just want the list
# of objects here, not actually building them
tclLibObjs:
d413 1
d419 4
a422 3
tclsh: ${TCLSH_OBJS} ${TCL_LIB_FILE}
	${CC} ${LDFLAGS} ${TCLSH_OBJS} @@TCL_BUILD_LIB_SPEC@@ ${LIBS} \
		${CC_SEARCH_FLAGS} -o tclsh
d425 21
a445 10
# the generated tcltest executable gets the build directory
# burned into its ld search path. This keeps tcltest from
# picking up an already installed version of the Tcl library.

tcltest: ${TCLTEST_OBJS} ${TCL_LIB_FILE} ${BUILD_DLTEST}
	$(MAKE) tcltest-real LIB_RUNTIME_DIR=`pwd`

tcltest-real:
	${CC} ${LDFLAGS} ${TCLTEST_OBJS} @@TCL_BUILD_LIB_SPEC@@ ${LIBS} \
		${CC_SEARCH_FLAGS} -o tcltest
d454 16
a469 31
test: tcltest
	@@LD_LIBRARY_PATH_VAR@@=`pwd`:${@@LD_LIBRARY_PATH_VAR@@}; export @@LD_LIBRARY_PATH_VAR@@; \
	TCL_LIBRARY="${TCL_BUILDTIME_LIBRARY}"; export TCL_LIBRARY; \
	./tcltest $(TOP_DIR)/tests/all.tcl $(TESTFLAGS) $(TCLTESTARGS)

# Useful target to launch a built tcltest with the proper path,...
runtest: tcltest
	@@LD_LIBRARY_PATH_VAR@@=`pwd`:${@@LD_LIBRARY_PATH_VAR@@}; export @@LD_LIBRARY_PATH_VAR@@; \
	TCL_LIBRARY="${TCL_BUILDTIME_LIBRARY}"; export TCL_LIBRARY; \
	./tcltest

# Useful target for running the test suite with an unwritable current
# directory...
ro-test: tcltest
	@@LD_LIBRARY_PATH_VAR@@=`pwd`:${@@LD_LIBRARY_PATH_VAR@@}; export @@LD_LIBRARY_PATH_VAR@@; \
	TCL_LIBRARY="${TCL_BUILDTIME_LIBRARY}"; export TCL_LIBRARY; \
	echo 'exec chmod -w .;package require tcltest;tcltest::temporaryDirectory /tmp;source ../tests/all.tcl;exec chmod +w .' | ./tcltest

# This target can be used to run tclsh from the build directory
# via `make shell SCRIPT=/tmp/foo.tcl`
shell: tclsh
	@@@@LD_LIBRARY_PATH_VAR@@=`pwd`:${@@LD_LIBRARY_PATH_VAR@@}; export @@LD_LIBRARY_PATH_VAR@@; \
	TCL_LIBRARY="${TCL_BUILDTIME_LIBRARY}"; export TCL_LIBRARY; \
	./tclsh $(SCRIPT)

# This target can be used to run tclsh inside either gdb or insight
gdb: tclsh
	@@echo "set env @@LD_LIBRARY_PATH_VAR@@=`pwd`:${@@LD_LIBRARY_PATH_VAR@@}" > gdb.run
	@@echo "set env TCL_LIBRARY=${TCL_BUILDTIME_LIBRARY}" >> gdb.run
	$(GDB) ./tclsh --command=gdb.run
	rm gdb.run
d471 21
a491 5
# This target can be used to run tclsh inside ddd
ddd: tclsh
	@@echo "set env @@LD_LIBRARY_PATH_VAR@@=`pwd`:${@@LD_LIBRARY_PATH_VAR@@}" > gdb.run
	@@echo "set env TCL_LIBRARY=${TCL_BUILDTIME_LIBRARY}" >> gdb.run
	$(DDD) -command=gdb.run ./tclsh
d494 1
a494 41
# The following target outputs the name of the top-level source directory
# for Tcl (it is used by Tk's configure script, for example).  The
# .NO_PARALLEL line is needed to avoid problems under Sun's "pmake".
# Note: this target is now obsolete (use the autoconf variable
# TCL_SRC_DIR from tclConfig.sh instead).

.NO_PARALLEL: topDirName
topDirName:
	@@cd $(TOP_DIR); pwd

# The following target generates the file generic/tclDate.c 
# from the yacc grammar found in generic/tclGetDate.y.  This is
# only run by hand as yacc is not available in all environments.
# The name of the .c file is different than the name of the .y file
# so that make doesn't try to automatically regenerate the .c file.

gendate:
	yacc -l $(GENERIC_DIR)/tclGetDate.y
	sed -e 's/yy/TclDate/g' -e '/^#include <values.h>/d' \
	    -e 's?SCCSID?RCS: @@(#) ?' \
	    -e '/#ifdef __STDC__/,/#endif/d' -e '/TclDateerrlab:/d' \
	    -e '/TclDatenewstate:/d' -e '/#pragma/d' \
	    -e '/#include <inttypes.h>/d' -e 's/const /CONST /g' \
	    <y.tab.c >$(GENERIC_DIR)/tclDate.c
	rm y.tab.c

# The following target generates the shared libraries in dltest/ that
# are used for testing;  they are included as part of the "tcltest"
# target (via the BUILD_DLTEST variable) if dynamic loading is supported
# on this platform. The Makefile in the dltest subdirectory creates
# the dltest.marker file in this directory after a successful build.

dltest.marker:
	cd dltest ; $(MAKE)

install: install-binaries install-libraries install-doc

install-strip:
	$(MAKE) install \
		INSTALL_PROGRAM="$(INSTALL_PROGRAM) ${INSTALL_STRIP_PROGRAM}" \
		INSTALL_LIBRARY="$(INSTALL_LIBRARY) ${INSTALL_STRIP_LIBRARY}"
d500 2
a501 2
install-binaries: binaries
	@@for i in $(LIB_INSTALL_DIR) $(BIN_INSTALL_DIR) ; \
d510 12
a521 2
	@@if test ! -x $(SRC_DIR)/install-sh; then \
	    chmod +x $(SRC_DIR)/install-sh; \
d526 9
a534 9
	@@if test "$(TCL_BUILD_EXP_FILE)" != ""; then \
	    echo "Installing $(TCL_EXP_FILE) to $(LIB_INSTALL_DIR)/"; \
	    $(INSTALL_DATA) $(TCL_BUILD_EXP_FILE) \
			$(LIB_INSTALL_DIR)/$(TCL_EXP_FILE); \
	    fi
	@@echo "Installing tclsh as $(BIN_INSTALL_DIR)/tclsh$(VERSION)"
	@@$(INSTALL_PROGRAM) tclsh $(BIN_INSTALL_DIR)/tclsh$(VERSION)
	@@echo "Installing tclConfig.sh to $(LIB_INSTALL_DIR)/"
	@@$(INSTALL_DATA) tclConfig.sh $(LIB_INSTALL_DIR)/tclConfig.sh
d540 4
a543 2
install-libraries: libraries
	@@for i in $(INCLUDE_INSTALL_DIR) $(SCRIPT_INSTALL_DIR); \
d552 2
a553 11
	@@for i in http2.4 http1.0 opt0.4 encoding msgcat1.3 tcltest2.2; \
	    do \
	    if [ ! -d $(SCRIPT_INSTALL_DIR)/$$i ] ; then \
		echo "Making directory $(SCRIPT_INSTALL_DIR)/$$i"; \
		mkdir -p $(SCRIPT_INSTALL_DIR)/$$i; \
		chmod 755 $(SCRIPT_INSTALL_DIR)/$$i; \
		else true; \
		fi; \
	    done;
	@@if test ! -x $(SRC_DIR)/install-sh; then \
	    chmod +x $(SRC_DIR)/install-sh; \
d556 2
a557 2
	@@for i in $(GENERIC_DIR)/tcl.h $(GENERIC_DIR)/tclDecls.h \
		$(GENERIC_DIR)/tclPlatDecls.h ; \
d562 2
a563 1
	@@for i in $(TOP_DIR)/library/*.tcl $(TOP_DIR)/library/tclIndex $(UNIX_DIR)/tclAppInit.c $(UNIX_DIR)/ldAix; \
d567 9
a575 2
	@@echo "Installing library http1.0 directory";
	@@for j in $(TOP_DIR)/library/http1.0/*.tcl ; \
d577 3
a579 1
	    $(INSTALL_DATA) $$j $(SCRIPT_INSTALL_DIR)/http1.0; \
d581 5
a585 2
	@@echo "Installing library http2.4 directory";
	@@for j in $(TOP_DIR)/library/http/*.tcl ; \
d587 6
a592 1
	    $(INSTALL_DATA) $$j $(SCRIPT_INSTALL_DIR)/http2.4; \
d594 2
a595 2
	@@echo "Installing library opt0.4 directory";
	@@for j in $(TOP_DIR)/library/opt/*.tcl ; \
d597 4
a600 1
	    $(INSTALL_DATA) $$j $(SCRIPT_INSTALL_DIR)/opt0.4; \
d602 1
a602 2
	@@echo "Installing library msgcat1.3 directory";
	@@for j in $(TOP_DIR)/library/msgcat/*.tcl ; \
d604 1
a604 1
	    $(INSTALL_DATA) $$j $(SCRIPT_INSTALL_DIR)/msgcat1.3; \
d606 2
a607 2
	@@echo "Installing library tcltest2.2 directory";
	@@for j in $(TOP_DIR)/library/tcltest/*.tcl ; \
d609 3
a611 1
	    $(INSTALL_DATA) $$j $(SCRIPT_INSTALL_DIR)/tcltest2.2; \
a612 4
	@@echo "Installing library encoding directory";
	@@for i in $(TOP_DIR)/library/encoding/*.enc ; do \
		$(INSTALL_DATA) $$i $(SCRIPT_INSTALL_DIR)/encoding; \
	done;
d614 1
a614 1
install-doc: doc
d628 1
a628 1
	@@cd $(TOP_DIR)/doc; for i in *.1; \
d638 1
a638 1
	@@cd $(TOP_DIR)/doc; for i in *.3; \
d645 1
a645 1
	@@echo "Cross-linking C API (.3) docs";
d648 1
a648 1
	@@cd $(TOP_DIR)/doc; for i in *.n; \
d658 1
a658 1
Makefile: $(UNIX_DIR)/Makefile.in $(DLTEST_DIR)/Makefile.in
d662 2
a663 3
	rm -f *.a *.o libtcl* core errs *~ \#* TAGS *.E a.out \
		errors tclsh tcltest lib.exp
	cd dltest ; $(MAKE) clean
d666 1
a666 1
	rm -rf Makefile config.status config.cache config.log tclConfig.sh \
a667 1
	cd dltest ; $(MAKE) distclean
d672 8
a679 9
# Test binaries.  The rules for tclTestInit.o and xtTestInit.o are
# complicated because they are compiled from tclAppInit.c.  Can't use
# the "-o" option because this doesn't work on some strange compilers
# (e.g. UnixWare).

tclTestInit.o: $(UNIX_DIR)/tclAppInit.c
	@@if test -f tclAppInit.o ; then \
	    rm -f tclAppInit.sav; \
	    mv tclAppInit.o tclAppInit.sav; \
d681 5
a685 7
	$(CC) -c $(CC_SWITCHES) \
		-DTCL_BUILDTIME_LIBRARY="\"${TCL_BUILDTIME_LIBRARY}\"" \
		-DTCL_TEST $(UNIX_DIR)/tclAppInit.c
	rm -f tclTestInit.o
	mv tclAppInit.o tclTestInit.o
	@@if test -f tclAppInit.sav ; then \
	    mv tclAppInit.sav tclAppInit.o; \
d688 2
a689 13
xtTestInit.o: $(UNIX_DIR)/tclAppInit.c
	@@if test -f tclAppInit.o ; then \
	    rm -f tclAppInit.sav; \
	    mv tclAppInit.o tclAppInit.sav; \
	fi;
	$(CC) -c $(CC_SWITCHES) \
		-DTCL_BUILDTIME_LIBRARY="\"${TCL_BUILDTIME_LIBRARY}\"" \
		-DTCL_TEST -DTCL_XT_TEST $(UNIX_DIR)/tclAppInit.c
	rm -f xtTestInit.o
	mv tclAppInit.o xtTestInit.o
	@@if test -f tclAppInit.sav ; then \
	    mv tclAppInit.sav tclAppInit.o; \
	fi;
d691 2
a692 1
# Object files used on all Unix systems:
d694 2
a695 6
REGHDRS=$(GENERIC_DIR)/regex.h $(GENERIC_DIR)/regguts.h \
		$(GENERIC_DIR)/regcustom.h
regcomp.o: $(REGHDRS) $(GENERIC_DIR)/regcomp.c $(GENERIC_DIR)/regc_lex.c \
		$(GENERIC_DIR)/regc_color.c $(GENERIC_DIR)/regc_locale.c \
		$(GENERIC_DIR)/regc_nfa.c $(GENERIC_DIR)/regc_cvec.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/regcomp.c
d697 2
a698 2
regexec.o: $(REGHDRS) $(GENERIC_DIR)/regexec.c $(GENERIC_DIR)/rege_dfa.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/regexec.c
d700 2
a701 2
regfree.o: $(REGHDRS) $(GENERIC_DIR)/regfree.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/regfree.c
d703 2
a704 2
regerror.o: $(REGHDRS) $(GENERIC_DIR)/regerrs.h $(GENERIC_DIR)/regerror.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/regerror.c
d706 2
a707 2
tclAppInit.o: $(UNIX_DIR)/tclAppInit.c
	$(CC) -c $(CC_SWITCHES) $(UNIX_DIR)/tclAppInit.c
d709 2
a710 2
# On unix we want to use the normal malloc/free implementation, so we
# specifically set the USE_TCLALLOC flag.
d712 2
a713 2
tclAlloc.o: $(GENERIC_DIR)/tclAlloc.c
	$(CC) -c $(CC_SWITCHES) -DUSE_TCLALLOC=0 $(GENERIC_DIR)/tclAlloc.c
d715 2
a716 2
tclAsync.o: $(GENERIC_DIR)/tclAsync.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclAsync.c
d718 2
a719 2
tclBasic.o: $(GENERIC_DIR)/tclBasic.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclBasic.c
d721 2
a722 2
tclBinary.o: $(GENERIC_DIR)/tclBinary.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclBinary.c
d724 2
a725 2
tclCkalloc.o: $(GENERIC_DIR)/tclCkalloc.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclCkalloc.c
d727 2
a728 2
tclClock.o: $(GENERIC_DIR)/tclClock.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclClock.c
d730 2
a731 2
tclCmdAH.o: $(GENERIC_DIR)/tclCmdAH.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclCmdAH.c
d733 2
a734 2
tclCmdIL.o: $(GENERIC_DIR)/tclCmdIL.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclCmdIL.c
d736 2
a737 2
tclCmdMZ.o: $(GENERIC_DIR)/tclCmdMZ.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclCmdMZ.c
d739 2
a740 2
tclDate.o: $(GENERIC_DIR)/tclDate.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclDate.c
d742 2
a743 2
tclCompCmds.o: $(GENERIC_DIR)/tclCompCmds.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclCompCmds.c
d745 2
a746 2
tclCompExpr.o: $(GENERIC_DIR)/tclCompExpr.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclCompExpr.c
d748 2
a749 2
tclCompile.o: $(GENERIC_DIR)/tclCompile.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclCompile.c
d751 2
a752 2
tclEncoding.o: $(GENERIC_DIR)/tclEncoding.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclEncoding.c
d754 2
a755 2
tclEnv.o: $(GENERIC_DIR)/tclEnv.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclEnv.c
d757 2
a758 2
tclEvent.o: $(GENERIC_DIR)/tclEvent.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclEvent.c
d760 2
a761 2
tclExecute.o: $(GENERIC_DIR)/tclExecute.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclExecute.c
d763 2
a764 2
tclFCmd.o: $(GENERIC_DIR)/tclFCmd.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclFCmd.c
d766 2
a767 2
tclFileName.o: $(GENERIC_DIR)/tclFileName.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclFileName.c
d769 2
a770 2
tclGet.o: $(GENERIC_DIR)/tclGet.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclGet.c
d772 2
a773 2
tclHash.o: $(GENERIC_DIR)/tclHash.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclHash.c
d775 2
a776 2
tclHistory.o: $(GENERIC_DIR)/tclHistory.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclHistory.c
d778 2
a779 2
tclIndexObj.o: $(GENERIC_DIR)/tclIndexObj.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclIndexObj.c
d781 2
a782 2
tclInterp.o: $(GENERIC_DIR)/tclInterp.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclInterp.c
d784 2
a785 2
tclIO.o: $(GENERIC_DIR)/tclIO.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclIO.c
d787 2
a788 2
tclIOCmd.o: $(GENERIC_DIR)/tclIOCmd.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclIOCmd.c
d790 2
a791 2
tclIOGT.o: $(GENERIC_DIR)/tclIOGT.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclIOGT.c
d793 2
a794 2
tclIOSock.o: $(GENERIC_DIR)/tclIOSock.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclIOSock.c
d796 2
a797 2
tclIOUtil.o: $(GENERIC_DIR)/tclIOUtil.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclIOUtil.c
d799 2
a800 2
tclLink.o: $(GENERIC_DIR)/tclLink.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclLink.c
d802 2
a803 2
tclListObj.o: $(GENERIC_DIR)/tclListObj.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclListObj.c
d805 2
a806 2
tclLiteral.o: $(GENERIC_DIR)/tclLiteral.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclLiteral.c
d808 2
a809 2
tclObj.o: $(GENERIC_DIR)/tclObj.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclObj.c
d811 2
a812 2
tclLoad.o: $(GENERIC_DIR)/tclLoad.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclLoad.c
d814 2
a815 2
tclLoadAix.o: $(UNIX_DIR)/tclLoadAix.c
	$(CC) -c $(CC_SWITCHES) $(UNIX_DIR)/tclLoadAix.c
d817 2
a818 2
tclLoadAout.o: $(UNIX_DIR)/tclLoadAout.c
	$(CC) -c $(CC_SWITCHES) $(UNIX_DIR)/tclLoadAout.c
d820 2
a821 2
tclLoadDl.o: $(UNIX_DIR)/tclLoadDl.c
	$(CC) -c $(CC_SWITCHES) $(UNIX_DIR)/tclLoadDl.c
d823 2
a824 2
tclLoadDl2.o: $(UNIX_DIR)/tclLoadDl2.c
	$(CC) -c $(CC_SWITCHES) $(UNIX_DIR)/tclLoadDl2.c
d826 2
a827 2
tclLoadDld.o: $(UNIX_DIR)/tclLoadDld.c
	$(CC) -c $(CC_SWITCHES) $(UNIX_DIR)/tclLoadDld.c
d829 2
a830 2
tclLoadDyld.o: $(UNIX_DIR)/tclLoadDyld.c
	$(CC) -c $(CC_SWITCHES) $(UNIX_DIR)/tclLoadDyld.c
d832 2
a833 2
tclLoadNone.o: $(GENERIC_DIR)/tclLoadNone.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclLoadNone.c
d835 2
a836 2
tclLoadOSF.o: $(UNIX_DIR)/tclLoadOSF.c
	$(CC) -c $(CC_SWITCHES) $(UNIX_DIR)/tclLoadOSF.c
d838 2
a839 2
tclLoadShl.o: $(UNIX_DIR)/tclLoadShl.c
	$(CC) -c $(CC_SWITCHES) $(UNIX_DIR)/tclLoadShl.c
d841 2
a842 2
tclMain.o: $(GENERIC_DIR)/tclMain.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclMain.c
d844 2
a845 2
tclNamesp.o: $(GENERIC_DIR)/tclNamesp.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclNamesp.c
d847 2
a848 2
tclNotify.o: $(GENERIC_DIR)/tclNotify.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclNotify.c
d850 2
a851 2
tclParse.o: $(GENERIC_DIR)/tclParse.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclParse.c
d853 2
a854 2
tclParseExpr.o: $(GENERIC_DIR)/tclParseExpr.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclParseExpr.c
d856 2
a857 2
tclPanic.o: $(GENERIC_DIR)/tclPanic.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclPanic.c
d859 2
a860 2
tclPipe.o: $(GENERIC_DIR)/tclPipe.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclPipe.c
d862 2
a863 2
tclPkg.o: $(GENERIC_DIR)/tclPkg.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclPkg.c
d865 2
a866 2
tclPosixStr.o: $(GENERIC_DIR)/tclPosixStr.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclPosixStr.c
d868 2
a869 2
tclPreserve.o: $(GENERIC_DIR)/tclPreserve.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclPreserve.c
d871 2
a872 2
tclProc.o: $(GENERIC_DIR)/tclProc.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclProc.c
d874 2
a875 2
tclRegexp.o: $(GENERIC_DIR)/tclRegexp.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclRegexp.c
d877 2
a878 2
tclResolve.o: $(GENERIC_DIR)/tclResolve.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclResolve.c
d880 2
a881 2
tclResult.o: $(GENERIC_DIR)/tclResult.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclResult.c
d883 2
a884 2
tclScan.o: $(GENERIC_DIR)/tclScan.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclScan.c
d886 2
a887 2
tclStringObj.o: $(GENERIC_DIR)/tclStringObj.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclStringObj.c
d889 2
a890 2
tclStubInit.o: $(GENERIC_DIR)/tclStubInit.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclStubInit.c
d892 2
a893 2
tclUtil.o: $(GENERIC_DIR)/tclUtil.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclUtil.c
d895 2
a896 2
tclUtf.o: $(GENERIC_DIR)/tclUtf.c $(GENERIC_DIR)/tclUniData.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclUtf.c
d898 2
a899 2
tclVar.o: $(GENERIC_DIR)/tclVar.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclVar.c
d901 2
a902 2
tclTest.o: $(GENERIC_DIR)/tclTest.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclTest.c
d904 2
a905 2
tclTestObj.o: $(GENERIC_DIR)/tclTestObj.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclTestObj.c
d907 2
a908 2
tclTestProcBodyObj.o: $(GENERIC_DIR)/tclTestProcBodyObj.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclTestProcBodyObj.c
d910 2
a911 2
tclTimer.o: $(GENERIC_DIR)/tclTimer.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclTimer.c
d913 2
a914 2
tclThread.o: $(GENERIC_DIR)/tclThread.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclThread.c
d916 2
a917 2
tclThreadAlloc.o: $(GENERIC_DIR)/tclThreadAlloc.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclThreadAlloc.c
d919 2
a920 2
tclThreadJoin.o: $(GENERIC_DIR)/tclThreadJoin.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclThreadJoin.c
d922 2
a923 2
tclThreadTest.o: $(GENERIC_DIR)/tclThreadTest.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tclThreadTest.c
d925 2
a926 2
tclUnixChan.o: $(UNIX_DIR)/tclUnixChan.c
	$(CC) -c $(CC_SWITCHES) $(UNIX_DIR)/tclUnixChan.c
d928 2
a929 2
tclUnixEvent.o: $(UNIX_DIR)/tclUnixEvent.c
	$(CC) -c $(CC_SWITCHES) $(UNIX_DIR)/tclUnixEvent.c
d931 2
a932 2
tclUnixFCmd.o: $(UNIX_DIR)/tclUnixFCmd.c
	$(CC) -c $(CC_SWITCHES) $(UNIX_DIR)/tclUnixFCmd.c
d934 2
a935 2
tclUnixFile.o: $(UNIX_DIR)/tclUnixFile.c
	$(CC) -c $(CC_SWITCHES) $(UNIX_DIR)/tclUnixFile.c
d937 2
a938 2
tclUnixNotfy.o: $(UNIX_DIR)/tclUnixNotfy.c
	$(CC) -c $(CC_SWITCHES) $(UNIX_DIR)/tclUnixNotfy.c
d940 2
a941 2
tclUnixPipe.o: $(UNIX_DIR)/tclUnixPipe.c
	$(CC) -c $(CC_SWITCHES) $(UNIX_DIR)/tclUnixPipe.c
d943 2
a944 2
tclUnixSock.o: $(UNIX_DIR)/tclUnixSock.c
	$(CC) -c $(CC_SWITCHES) $(UNIX_DIR)/tclUnixSock.c
d946 3
a948 2
tclUnixTest.o: $(UNIX_DIR)/tclUnixTest.c
	$(CC) -c $(CC_SWITCHES) $(UNIX_DIR)/tclUnixTest.c
d950 2
a951 2
tclUnixThrd.o: $(UNIX_DIR)/tclUnixThrd.c
	$(CC) -c $(CC_SWITCHES) $(UNIX_DIR)/tclUnixThrd.c
d953 2
a954 2
tclUnixTime.o: $(UNIX_DIR)/tclUnixTime.c
	$(CC) -c $(CC_SWITCHES) $(UNIX_DIR)/tclUnixTime.c
d956 2
a957 4
tclUnixInit.o: $(UNIX_DIR)/tclUnixInit.c $(GENERIC_DIR)/tclInitScript.h tclConfig.sh
	$(CC) -c $(CC_SWITCHES) -DTCL_LIBRARY=\"${TCL_LIBRARY}\" \
		-DTCL_PACKAGE_PATH="\"${TCL_PACKAGE_PATH}\"" \
		$(UNIX_DIR)/tclUnixInit.c
d959 2
a960 3
# This is the CFBundle interface.  It is only used on Mac OS X.
tclMacOSXBundle.o: $(MAC_OSX_DIR)/tclMacOSXBundle.c
	$(CC) -c $(CC_SWITCHES) $(MAC_OSX_DIR)/tclMacOSXBundle.c
d962 2
a963 3
# The following targets are not completely general.  They are provide
# purely for documentation purposes so people who are interested in
# the Xt based notifier can modify them to suit their own installation.
d965 2
a966 5
xttest:  ${XTTEST_OBJS} ${GENERIC_OBJS} ${UNIX_OBJS} ${COMPAT_OBJS} \
	@@DL_OBJS@@ ${BUILD_DLTEST}
	${CC} ${XTTEST_OBJS} ${GENERIC_OBJS} ${UNIX_OBJS} ${COMPAT_OBJS} \
		@@DL_OBJS@@ @@TCL_BUILD_LIB_SPEC@@ ${LIBS} \
		${CC_SEARCH_FLAGS} -L/usr/openwin/lib -lXt -o xttest
d968 2
a969 3
tclXtNotify.o: $(UNIX_DIR)/tclXtNotify.c
	$(CC) -c $(CC_SWITCHES) -I/usr/openwin/include \
		$(UNIX_DIR)/tclXtNotify.c
d971 2
a972 3
tclXtTest.o: $(UNIX_DIR)/tclXtTest.c
	$(CC) -c $(CC_SWITCHES) -I/usr/openwin/include \
		$(UNIX_DIR)/tclXtTest.c
d974 2
a975 4
# compat binaries, these must be compiled for use in a shared library
# even though they may be placed in a static executable or library.  Since
# they are included in both the tcl library and the stub library, they
# need to be relocatable.
d977 2
a978 2
fixstrtod.o: $(COMPAT_DIR)/fixstrtod.c
	$(CC) -c $(STUB_CC_SWITCHES) $(COMPAT_DIR)/fixstrtod.c
d980 3
a982 2
opendir.o: $(COMPAT_DIR)/opendir.c
	$(CC) -c $(STUB_CC_SWITCHES) $(COMPAT_DIR)/opendir.c
d984 2
a985 2
memcmp.o: $(COMPAT_DIR)/memcmp.c
	$(CC) -c $(STUB_CC_SWITCHES) $(COMPAT_DIR)/memcmp.c
d987 4
a990 17
strncasecmp.o: $(COMPAT_DIR)/strncasecmp.c
	$(CC) -c $(STUB_CC_SWITCHES) $(COMPAT_DIR)/strncasecmp.c

strstr.o: $(COMPAT_DIR)/strstr.c
	$(CC) -c $(STUB_CC_SWITCHES) $(COMPAT_DIR)/strstr.c

strtod.o: $(COMPAT_DIR)/strtod.c
	$(CC) -c $(STUB_CC_SWITCHES) $(COMPAT_DIR)/strtod.c

strtol.o: $(COMPAT_DIR)/strtol.c
	$(CC) -c $(STUB_CC_SWITCHES) $(COMPAT_DIR)/strtol.c

strtoll.o: $(COMPAT_DIR)/strtoll.c
	$(CC) -c $(STUB_CC_SWITCHES) $(COMPAT_DIR)/strtoll.c

strtoul.o: $(COMPAT_DIR)/strtoul.c
	$(CC) -c $(STUB_CC_SWITCHES) $(COMPAT_DIR)/strtoul.c
d992 2
a993 2
strtoull.o: $(COMPAT_DIR)/strtoull.c
	$(CC) -c $(STUB_CC_SWITCHES) $(COMPAT_DIR)/strtoull.c
a994 15
tmpnam.o: $(COMPAT_DIR)/tmpnam.c
	$(CC) -c $(STUB_CC_SWITCHES) $(COMPAT_DIR)/tmpnam.c

waitpid.o: $(COMPAT_DIR)/waitpid.c
	$(CC) -c $(STUB_CC_SWITCHES) $(COMPAT_DIR)/waitpid.c

# Stub library binaries, these must be compiled for use in a shared library
# even though they will be placed in a static archive


tclStubLib.o: $(GENERIC_DIR)/tclStubLib.c
	$(CC) -c $(STUB_CC_SWITCHES) $(GENERIC_DIR)/tclStubLib.c

.c.o:
	$(CC) -c $(CC_SWITCHES) $<
d997 1
a997 1
# Target to regenerate header files and stub files from the *.decls tables.
d1000 3
a1002 3
$(GENERIC_DIR)/tclStubInit.c: $(GENERIC_DIR)/tcl.decls \
		$(GENERIC_DIR)/tclInt.decls
	@@echo "Warning: tclStubInit.c may be out of date."
d1008 1
a1008 1
		$(GENERIC_DIR)/tcl.decls $(GENERIC_DIR)/tclInt.decls
d1016 1
a1016 1
	-@@for i in `nm -p $(TCL_LIB_FILE) | awk '$$2 ~ /T/ { print $$3 }' \
d1019 1
a1019 1
		for j in $(TCL_DECLS); do \
a1026 17
#
# Target to check that all public APIs which are not command
# implementations have an entry in section three of the distributed
# manpages.
#

checkdoc:
	-@@for i in `nm -p $(TCL_LIB_FILE) | awk '$$3 ~ /Tcl_/ { print $$3 }' \
		| grep -v 'Cmd$$' | sort -n`; do \
		match=0; \
		for j in $(TOP_DIR)/doc/*.3; do \
		    if [ `grep '\-' $$j | grep -c $$i` -gt 0 ]; then \
			match=1; \
		    fi; \
		done; \
		if [ $$match -eq 0 ]; then echo $$i; fi \
	done
d1029 1
a1029 16
# Target to check for proper usage of UCHAR macro.
#

checkuchar:
	-egrep isalnum\|isalpha\|iscntrl\|isdigit\|islower\|isprint\|ispunct\|isspace\|isupper\|isxdigit\|toupper\|tolower $(SRCS) | grep -v UCHAR

#
# Target to make sure that only symbols with "Tcl" prefixes are
# exported.
#

checkexports: $(TCL_LIB_FILE)
	-nm -p $(TCL_LIB_FILE) | awk '$$2 ~ /[TDB]/ { print $$3 }' | sort -n | grep -v '^[Tt]cl'

#
# Target to create a Tcl RPM for Linux.  Requires that you be on a Linux
d1035 3
a1037 3
	echo "%define _builddir `pwd`" > THIS.TCL.SPEC
	echo "%define _rpmdir `pwd`/RPMS" >> THIS.TCL.SPEC
	cat tcl.spec >> THIS.TCL.SPEC
d1039 1
a1039 1
	rpm -bb THIS.TCL.SPEC
d1041 1
a1041 1
	rm -rf RPMS THIS.TCL.SPEC
d1044 1
a1044 1
	$(TCL_EXE) $(UNIX_DIR)/mkLinks.tcl \
d1049 1
a1049 1
# Target to create a proper Tcl distribution from information in the
d1051 1
a1051 1
# to put the distribution.
d1055 4
a1058 3
DISTNAME = tcl${VERSION}${PATCH_LEVEL}
ZIPNAME	 = tcl${MAJOR_VERSION}${MINOR_VERSION}${PATCH_LEVEL}.zip
DISTDIR	 = $(DISTROOT)/$(DISTNAME)
d1062 1
a1062 1
dist: $(UNIX_DIR)/configure mklinks
d1064 2
a1065 1
	mkdir -p $(DISTDIR)/unix
d1067 1
a1067 1
	cp $(UNIX_DIR)/Makefile.in $(DISTDIR)/unix
d1069 4
a1072 6
	cp $(UNIX_DIR)/configure $(UNIX_DIR)/configure.in \
		$(UNIX_DIR)/tcl.m4 $(UNIX_DIR)/aclocal.m4 \
		$(UNIX_DIR)/tclConfig.sh.in $(UNIX_DIR)/install-sh \
		$(UNIX_DIR)/README $(UNIX_DIR)/ldAix $(UNIX_DIR)/tcl.spec \
		$(UNIX_DIR)/mkLinks \
		$(DISTDIR)/unix
a1073 1
	chmod 775 $(DISTDIR)/unix/ldAix
d1075 7
d1083 2
a1084 1
	cp -p $(GENERIC_DIR)/*.c $(GENERIC_DIR)/*.h $(DISTDIR)/generic
d1087 3
a1089 26
	cp -p $(GENERIC_DIR)/tclGetDate.y $(DISTDIR)/generic
	cp -p $(TOP_DIR)/changes $(TOP_DIR)/ChangeLog $(TOP_DIR)/README* \
		$(TOP_DIR)/ChangeLog.[12]??? $(TOP_DIR)/license.terms \
		$(DISTDIR)
	mkdir $(DISTDIR)/library
	cp -p $(TOP_DIR)/license.terms $(TOP_DIR)/library/*.tcl \
		$(TOP_DIR)/library/tclIndex $(DISTDIR)/library
	for i in http1.0 http opt msgcat reg dde tcltest; \
	    do \
		mkdir $(DISTDIR)/library/$$i ;\
		cp -p $(TOP_DIR)/library/$$i/*.tcl $(DISTDIR)/library/$$i; \
	    done;
	mkdir $(DISTDIR)/library/encoding
	cp -p $(TOP_DIR)/library/encoding/*.enc $(DISTDIR)/library/encoding
	mkdir $(DISTDIR)/doc
	cp -p $(TOP_DIR)/license.terms $(TOP_DIR)/doc/*.[13n] \
		$(TOP_DIR)/doc/man.macros $(DISTDIR)/doc
	mkdir $(DISTDIR)/compat
	cp -p $(TOP_DIR)/license.terms $(TOP_DIR)/compat/*.c \
		$(TOP_DIR)/compat/*.h $(TOP_DIR)/compat/README \
		$(DISTDIR)/compat
	mkdir $(DISTDIR)/tests
	cp -p $(TOP_DIR)/license.terms $(DISTDIR)/tests
	cp -p $(TOP_DIR)/tests/*.test $(TOP_DIR)/tests/README \
		$(TOP_DIR)/tests/httpd $(TOP_DIR)/tests/*.tcl \
		$(DISTDIR)/tests
d1092 4
a1095 6
	cp $(TOP_DIR)/win/configure.in $(TOP_DIR)/win/configure \
		$(TOP_DIR)/win/tclConfig.sh.in \
		$(TOP_DIR)/win/tcl.m4 $(TOP_DIR)/win/aclocal.m4 \
		$(DISTDIR)/win
	cp -p $(TOP_DIR)/win/*.c $(TOP_DIR)/win/*.h \
		$(TOP_DIR)/win/*.ico $(TOP_DIR)/win/*.rc \
d1097 1
a1103 6
	cp -p $(TOP_DIR)/win/coffbase.txt $(DISTDIR)/win
	$(TCL_EXE) $(TOOL_DIR)/eolFix.tcl -crlf $(DISTDIR)/win/coffbase.txt
	cp -p $(TOP_DIR)/win/tcl.hpj.in $(DISTDIR)/win
	$(TCL_EXE) $(TOOL_DIR)/eolFix.tcl -crlf $(DISTDIR)/win/tcl.hpj.in
	cp -p $(TOP_DIR)/win/tcl.ds* $(DISTDIR)/win
	$(TCL_EXE) $(TOOL_DIR)/eolFix.tcl -crlf $(DISTDIR)/win/tcl.ds*
d1105 1
d1107 7
d1115 2
a1116 2
	cp -p $(TOP_DIR)/mac/tclMacProjects.sea.hqx \
		$(TOP_DIR)/mac/*.c $(TOP_DIR)/mac/*.h $(TOP_DIR)/mac/*.r \
d1118 2
a1119 1
	cp -p $(TOP_DIR)/mac/porting.notes $(TOP_DIR)/mac/README $(DISTDIR)/mac
d1121 2
a1122 2
	cp -p $(TOP_DIR)/mac/*.doc $(TOP_DIR)/mac/*.html $(DISTDIR)/mac
	cp -p $(TOP_DIR)/license.terms $(DISTDIR)/mac
d1124 57
a1180 18
	cp -p $(TOP_DIR)/macosx/Makefile \
		$(TOP_DIR)/macosx/*.c \
		$(DISTDIR)/macosx
	mkdir $(DISTDIR)/macosx/Tcl.pbproj
	cp -p $(TOP_DIR)/macosx/Tcl.pbproj/*.pbx* $(DISTDIR)/macosx/Tcl.pbproj
	mkdir $(DISTDIR)/unix/dltest
	cp -p $(UNIX_DIR)/dltest/*.c $(UNIX_DIR)/dltest/Makefile.in \
		$(UNIX_DIR)/dltest/README \
		$(DISTDIR)/unix/dltest
	mkdir $(DISTDIR)/tools
	cp -p $(TOP_DIR)/tools/Makefile.in $(TOP_DIR)/tools/README \
		$(TOP_DIR)/tools/configure $(TOP_DIR)/tools/configure.in \
		$(TOP_DIR)/tools/*.tcl $(TOP_DIR)/tools/man2tcl.c \
		$(TOP_DIR)/tools/tcl.wse.in $(TOP_DIR)/tools/*.bmp \
		$(TOP_DIR)/tools/tcl.hpj.in \
		$(DISTDIR)/tools
	$(TCL_EXE) $(TOOL_DIR)/eolFix.tcl -crlf $(DISTDIR)/tools/tcl.hpj.in \
		$(DISTDIR)/tools/tcl.wse.in
d1207 3
a1209 3
	mv $(DISTROOT)/tcl${VERSION} $(DISTROOT)/old
	mv $(DISTROOT)/$(DISTNAME) $(DISTROOT)/tcl${VERSION}
	cd $(DISTROOT); tar cf $(DISTNAME).tar tcl${VERSION}; \
d1211 3
a1213 15
		compress $(DISTNAME).tar; zip -r8 $(ZIPNAME) tcl${VERSION}
	mv $(DISTROOT)/tcl${VERSION} $(DISTROOT)/$(DISTNAME)
	mv $(DISTROOT)/old $(DISTROOT)/tcl${VERSION}

#
# This target creates the HTML folder for Tcl & Tk and places it
# in DISTDIR/html.  It uses the tcltk-man2html.tcl tool from
# the Tcl group's tool workspace.  It depends on the Tcl & Tk being
# in directories called tcl8.3 & tk8.3 up two directories from the
# TOOL_DIR.
#

html: 
	$(TCL_EXE) $(TOOL_DIR)/tcltk-man2html.tcl --htmldir=$(DISTDIR)/html \
		--srcdir=$(TOP_DIR)/..
d1219 1
a1219 1
# programs found only in the Tcl group's tool workspace.
d1222 4
a1225 4
macdist: dist machtml

machtml:
	rm -f $(DISTDIR)/mac/tclMacProjects.sea.hqx
d1227 1
d1251 1
a1251 1
PACKAGE=SCRPtcl
d1262 3
a1264 2
        ../configure --prefix=/opt/$(PACKAGE)/$(VERSION) \
		--exec_prefix=/opt/$(PACKAGE)/$(VERSION)/`arch` \
d1266 2
a1267 2
	mkdir -p $(DISTDIR)/$(PACKAGE)/$(VERSION)
	mkdir -p $(DISTDIR)/$(PACKAGE)/$(VERSION)/`arch`
d1276 8
a1283 7
	$(MAKE) prefix=$(DISTDIR)/$(PACKAGE)/$(VERSION) \
		exec_prefix=$(DISTDIR)/$(PACKAGE)/$(VERSION)/`arch` \
		install-libraries install-man
	mkdir -p $(DISTDIR)/$(PACKAGE)/$(VERSION)/bin
	sed -e "s/TCLVERSION/$(VERSION)/g" < $(UNIX_DIR)/tclsh.sh \
		> $(DISTDIR)/$(PACKAGE)/$(VERSION)/bin/tclsh$(VERSION)
	chmod 755 $(DISTDIR)/$(PACKAGE)/$(VERSION)/bin/tclsh$(VERSION)
d1292 2
a1293 2
	$(MAKE) install-binaries prefix=$(DISTDIR)/$(PACKAGE)/$(VERSION) \
		exec_prefix=$(DISTDIR)/$(PACKAGE)/$(VERSION)/`arch`
d1301 7
a1307 7
	pkgproto $(DISTDIR)/$(PACKAGE)/$(VERSION)/bin=bin \
		 $(DISTDIR)/$(PACKAGE)/$(VERSION)/include=include \
		 $(DISTDIR)/$(PACKAGE)/$(VERSION)/lib=lib \
		 $(DISTDIR)/$(PACKAGE)/$(VERSION)/man=man \
		 $(DISTDIR)/$(PACKAGE)/$(VERSION)/`arch`=`arch` \
	| $(TCL_EXE) $(UNIX_DIR)/mkProto.tcl \
		$(VERSION) $(UNIX_DIR) > prototype
@


1.1.1.6
log
@import tcl 8.4.1
@
text
@d8 1
a8 1
# RCS: @@(#) $Id: Makefile.in,v 1.119 2002/10/18 22:59:54 hobbs Exp $
d137 4
a140 5
# lines or call configure with --enable-symbols=mem
# Warning:  if you enable memory debugging, you must do it *everywhere*,
# including all the code that calls Tcl, and you must use ckalloc and
# ckfree everywhere instead of malloc and free.
MEM_DEBUG_FLAGS		=
d152 2
a153 2
# To enable compilation debugging reverse the comment characters on one
# of the following lines or call configure with --enable-symbols=compile
d155 1
d1207 1
a1207 1
ZIPNAME	 = tcl${MAJOR_VERSION}${MINOR_VERSION}${PATCH_LEVEL}-src.zip
d1281 1
a1281 1
	cp -p $(TOP_DIR)/mac/tcl*.sea.hqx \
d1314 6
a1319 3
	rm -f $(DISTROOT)/$(DISTNAME)-src.tar.gz $(DISTROOT)/$(ZIPNAME)
	cd $(DISTROOT); tar cf $(DISTNAME)-src.tar $(DISTNAME); \
		gzip -9 $(DISTNAME)-src.tar; zip -qr8 $(ZIPNAME) $(DISTNAME)
d1330 3
a1332 1
	rm -f $(DISTROOT)/$(DISTNAME)-src.tar.gz $(DISTROOT)/$(ZIPNAME)
d1335 3
a1337 2
	cd $(DISTROOT); tar cf $(DISTNAME)-src.tar tcl${VERSION}; \
		gzip -9 $(DISTNAME)-src.tar; zip -r8 $(ZIPNAME) tcl${VERSION}
@


