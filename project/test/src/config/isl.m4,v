head	1.3;
access;
symbols
	sid-snapshot-20180601:1.3
	cgen-snapshot-20180601:1.3
	sid-snapshot-20180501:1.3
	cgen-snapshot-20180501:1.3
	sid-snapshot-20180401:1.3
	cgen-snapshot-20180401:1.3
	sid-snapshot-20180301:1.3
	cgen-snapshot-20180301:1.3
	sid-snapshot-20180201:1.3
	cgen-snapshot-20180201:1.3
	sid-snapshot-20180101:1.3
	cgen-snapshot-20180101:1.3
	sid-snapshot-20171201:1.3
	cgen-snapshot-20171201:1.3
	sid-snapshot-20171101:1.3
	cgen-snapshot-20171101:1.3
	sid-snapshot-20171001:1.3
	cgen-snapshot-20171001:1.3
	sid-snapshot-20170901:1.3
	cgen-snapshot-20170901:1.3
	sid-snapshot-20170801:1.3
	cgen-snapshot-20170801:1.3
	sid-snapshot-20170701:1.3
	cgen-snapshot-20170701:1.3
	sid-snapshot-20170601:1.3
	cgen-snapshot-20170601:1.3
	sid-snapshot-20170501:1.3
	cgen-snapshot-20170501:1.3
	sid-snapshot-20170401:1.3
	cgen-snapshot-20170401:1.3
	sid-snapshot-20170301:1.3
	cgen-snapshot-20170301:1.3
	sid-snapshot-20170201:1.3
	cgen-snapshot-20170201:1.3
	sid-snapshot-20170101:1.3
	cgen-snapshot-20170101:1.3
	sid-snapshot-20161201:1.3
	cgen-snapshot-20161201:1.3
	sid-snapshot-20161101:1.3
	cgen-snapshot-20161101:1.3
	sid-snapshot-20160901:1.3
	cgen-snapshot-20160901:1.3
	sid-snapshot-20160801:1.3
	cgen-snapshot-20160801:1.3
	sid-snapshot-20160701:1.3
	cgen-snapshot-20160701:1.3
	sid-snapshot-20160601:1.3
	cgen-snapshot-20160601:1.3
	sid-snapshot-20160501:1.3
	cgen-snapshot-20160501:1.3
	sid-snapshot-20160401:1.3
	cgen-snapshot-20160401:1.3
	sid-snapshot-20160301:1.3
	cgen-snapshot-20160301:1.3
	sid-snapshot-20160201:1.3
	cgen-snapshot-20160201:1.3
	sid-snapshot-20160101:1.3
	cgen-snapshot-20160101:1.3
	sid-snapshot-20151201:1.3
	cgen-snapshot-20151201:1.3
	sid-snapshot-20151101:1.3
	cgen-snapshot-20151101:1.3
	sid-snapshot-20151001:1.3
	cgen-snapshot-20151001:1.3
	sid-snapshot-20150901:1.3
	cgen-snapshot-20150901:1.3
	sid-snapshot-20150801:1.3
	cgen-snapshot-20150801:1.3
	sid-snapshot-20150701:1.3
	cgen-snapshot-20150701:1.3
	sid-snapshot-20150601:1.3
	cgen-snapshot-20150601:1.3
	sid-snapshot-20150501:1.3
	cgen-snapshot-20150501:1.3
	sid-snapshot-20150401:1.3
	cgen-snapshot-20150401:1.3
	cygwin-1_7_35-release:1.3
	sid-snapshot-20150301:1.3
	cgen-snapshot-20150301:1.3
	cygwin-1_7_34-release:1.3
	sid-snapshot-20150201:1.3
	cgen-snapshot-20150201:1.3
	sid-snapshot-20150101:1.3
	cgen-snapshot-20150101:1.3
	newlib-2_2_0:1.3.0.8
	sid-snapshot-20141201:1.3
	cgen-snapshot-20141201:1.3
	cygwin-1_7_33-release:1.3
	sid-snapshot-20141101:1.3
	cgen-snapshot-20141101:1.3
	sid-snapshot-20141001:1.3
	cgen-snapshot-20141001:1.3
	sid-snapshot-20140901:1.3
	cgen-snapshot-20140901:1.3
	cygwin-1_7_32-release:1.3
	sid-snapshot-20140801:1.3
	cgen-snapshot-20140801:1.3
	cygwin-1_7_31-release:1.3
	sid-snapshot-20140701:1.3
	cgen-snapshot-20140701:1.3
	sid-snapshot-20140601:1.3
	cgen-snapshot-20140601:1.3
	cygwin-1_7_30-release:1.3
	sid-snapshot-20140501:1.3
	cgen-snapshot-20140501:1.3
	cygwin-1_7_29-release:1.3
	sid-snapshot-20140401:1.3
	cgen-snapshot-20140401:1.3
	sid-snapshot-20140301:1.3
	cgen-snapshot-20140301:1.3
	cygwin-1_7_28-release:1.3
	sid-snapshot-20140201:1.3
	cgen-snapshot-20140201:1.3
	sid-snapshot-20140101:1.3
	cgen-snapshot-20140101:1.3
	newlib-2_1_0:1.3
	sid-snapshot-20131201:1.3
	cgen-snapshot-20131201:1.3
	cygwin-1_7_27-release:1.3
	cygwin-1_7_26-release:1.3
	sid-snapshot-20131101:1.3
	cgen-snapshot-20131101:1.3
	sid-snapshot-20131001:1.3
	cgen-snapshot-20131001:1.3
	binutils-2_24-branch:1.3.0.6
	binutils-2_24-branchpoint:1.3
	sid-snapshot-20130901:1.3
	cgen-snapshot-20130901:1.3
	cygwin-1_7_25-release:1.3
	gdb_7_6_1-2013-08-30-release:1.3
	cygwin-1_7_24-release:1.3
	cygwin-1_7_23-release:1.3
	sid-snapshot-20130801:1.3
	cgen-snapshot-20130801:1.3
	cygwin-1_7_22-release:1.3
	cygwin-1_7_21-release:1.3
	sid-snapshot-20130701:1.3
	cgen-snapshot-20130701:1.3
	cygwin-1_7_20-release:1.3
	cygwin-1_7_19-release:1.3
	sid-snapshot-20130601:1.3
	cgen-snapshot-20130601:1.3
	sid-snapshot-20130501:1.3
	cgen-snapshot-20130501:1.3
	gdb_7_6-2013-04-26-release:1.3
	cygwin-64bit-postmerge:1.3
	cygwin-64bit-premerge-branch:1.3.0.4
	cygwin-64bit-premerge:1.3
	sid-snapshot-20130401:1.3
	cgen-snapshot-20130401:1.3
	gdb_7_6-branch:1.3.0.2
	gdb_7_6-2013-03-12-branchpoint:1.3
	cygwin-1_7_18-release:1.3
	sid-snapshot-20130301:1.3
	cgen-snapshot-20130301:1.3
	sid-snapshot-20130201:1.2
	cgen-snapshot-20130201:1.2
	sid-snapshot-20130101:1.2
	cgen-snapshot-20130101:1.2
	newlib-2_0_0:1.2
	sid-snapshot-20121201:1.2
	cgen-snapshot-20121201:1.2
	sid-snapshot-20121101:1.2
	cgen-snapshot-20121101:1.2
	cygwin-1_7_17-release:1.2
	sid-snapshot-20121001:1.2
	cgen-snapshot-20121001:1.2
	sid-snapshot-20120901:1.1
	cgen-snapshot-20120901:1.1
	binutils_latest_snapshot:1.3;
locks; strict;
comment	@# @;


1.3
date	2013.02.04.23.31.16;	author amodra;	state Exp;
branches;
next	1.2;

1.2
date	2012.09.29.15.22.16;	author hjl;	state Exp;
branches;
next	1.1;

1.1
date	2012.08.26.14.34.40;	author hjl;	state Exp;
branches;
next	;


desc
@@


1.3
log
@	* configure: Regenerate after syncing config/.
@
text
@# This file is part of GCC.
#
# GCC is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free
# Software Foundation; either version 3, or (at your option) any later
# version.
#
# GCC is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# for more details.
#
# You should have received a copy of the GNU General Public License
# along with GCC; see the file COPYING3.  If not see
# <http://www.gnu.org/licenses/>.
#
# Contributed by Richard Guenther <rguenther@@suse.de>
# Based on cloog.m4

# ISL_INIT_FLAGS ()
# -------------------------
# Provide configure switches for ISL support.
# Initialize isllibs/islinc according to the user input.
AC_DEFUN([ISL_INIT_FLAGS],
[
  AC_ARG_WITH([isl-include],
    [AS_HELP_STRING(
      [--with-isl-include=PATH],
      [Specify directory for installed ISL include files])])
  AC_ARG_WITH([isl-lib],
    [AS_HELP_STRING(
      [--with-isl-lib=PATH],
      [Specify the directory for the installed ISL library])])

  AC_ARG_ENABLE(isl-version-check,
    [AS_HELP_STRING(
      [--disable-isl-version-check],
      [disable check for ISL version])],
    ENABLE_ISL_CHECK=$enableval,
    ENABLE_ISL_CHECK=yes)
  
  # Initialize isllibs and islinc.
  case $with_isl in
    no)
      isllibs=
      islinc=
      ;;
    "" | yes)
      ;;
    *)
      isllibs="-L$with_isl/lib"
      islinc="-I$with_isl/include"
      ;;
  esac
  if test "x${with_isl_include}" != x ; then
    islinc="-I$with_isl_include"
  fi
  if test "x${with_isl_lib}" != x; then
    isllibs="-L$with_isl_lib"
  fi
  dnl If no --with-isl flag was specified and there is in-tree ISL
  dnl source, set up flags to use that and skip any version tests
  dnl as we cannot run them before building ISL.
  if test "x${islinc}" = x && test "x${isllibs}" = x \
     && test -d ${srcdir}/isl; then
    isllibs='-L$$r/$(HOST_SUBDIR)/isl/'"$lt_cv_objdir"' '
    islinc='-I$$r/$(HOST_SUBDIR)/isl/include -I$$s/isl/include'
    ENABLE_ISL_CHECK=no
    AC_MSG_WARN([using in-tree ISL, disabling version check])
  fi
]
)

# ISL_REQUESTED (ACTION-IF-REQUESTED, ACTION-IF-NOT)
# ----------------------------------------------------
# Provide actions for failed ISL detection.
AC_DEFUN([ISL_REQUESTED],
[
  AC_REQUIRE([ISL_INIT_FLAGS])

  if test "x${with_isl}" = xno; then
    $2
  elif test "x${with_isl}" != x \
    || test "x${with_isl_include}" != x \
    || test "x${with_isl_lib}" != x ; then
    $1
  else
    $2
  fi
]
)

# _ISL_CHECK_CT_PROG(MAJOR, MINOR)
# --------------------------------------------
# Helper for verifying ISL compile time version.
m4_define([_ISL_CHECK_CT_PROG],[AC_LANG_PROGRAM(
  [#include <isl/version.h>
   #include <string.h>],
  [if (strncmp (isl_version (), "isl-$1.$2", strlen ("isl-$1.$2")) != 0)
     return 1;
   ])])

# ISL_CHECK_VERSION ISL_CHECK_VERSION (MAJOR, MINOR)
# ----------------------------------------------------------------
# Test the found ISL to be exact of version MAJOR.MINOR and at least
# REVISION.
AC_DEFUN([ISL_CHECK_VERSION],
[
  if test "${ENABLE_ISL_CHECK}" = yes ; then
    _isl_saved_CFLAGS=$CFLAGS
    _isl_saved_LDFLAGS=$LDFLAGS
    _isl_saved_LIBS=$LIBS

    CFLAGS="${_isl_saved_CFLAGS} ${islinc} ${gmpinc}"
    LDFLAGS="${_isl_saved_LDFLAGS} ${isllibs}"
    LIBS="${_isl_saved_LIBS} -lisl"

    AC_MSG_CHECKING([for version $1.$2 of ISL])
    AC_RUN_IFELSE([_ISL_CHECK_CT_PROG($1,$2)],
	[gcc_cv_isl=yes],
	[gcc_cv_isl=no],
	[gcc_cv_isl=yes])
    AC_MSG_RESULT([$gcc_cv_isl])

    CFLAGS=$_isl_saved_CFLAGS
    LDFLAGS=$_isl_saved_LDFLAGS
    LIBS=$_isl_saved_LIBS
  fi
]
)

# ISL_IF_FAILED (ACTION-IF-FAILED)
# ----------------------------------
# Executes ACTION-IF-FAILED, if GRAPHITE was requested and
# the checks failed.
AC_DEFUN([ISL_IF_FAILED],
[
  ISL_REQUESTED([graphite_requested=yes], [graphite_requested=no])
  
  if test "${gcc_cv_isl}" = no ; then
    isllibs=
    islinc=
  fi

  if test "${graphite_requested}" = yes \
    && test "x${isllibs}" = x \
    && test "x${islinc}" = x ; then
    $1
  fi
]
)
@


1.2
log
@Sync config with GCC

2012-09-03  Richard Guenther  <rguenther@@suse.de>

	PR bootstrap/54138
	* config/cloog.m4: Adjust for toplevel reorg.
	* config/isl.m4: Adjust.
@
text
@d69 1
a116 1
    echo $CFLAGS
d118 2
a119 3
    AC_CACHE_CHECK([for version $1.$2 of ISL],
      [gcc_cv_isl],
      [AC_RUN_IFELSE([_ISL_CHECK_CT_PROG($1,$2)],
d122 2
a123 1
	[gcc_cv_isl=yes])])
@


1.1
log
@Sync toplevel files with GCC tree

2012-08-14   Diego Novillo  <dnovillo@@google.com>

	Merge from cxx-conversion branch.

	* Makefile.tpl (STAGE[+id+]_CXXFLAGS): Remove
	POSTSTAGE1_CONFIGURE_FLAGS.
	* Makefile.in: Regenerate.
	* configure.ac (ENABLE_BUILD_WITH_CXX): Remove.  Update all users.
	Force C++ when bootstrapping.
	* configure: Regenerate.

2012-07-06  Richard Guenther  <rguenther@@suse.de>

	* Makefile.def (cloog): Pass $(HOST_GMPINC) and $(HOST_ISLINC)
	as CPPFLAGS, pass path to built gmp as LDFLAGS, always use
	--with-gmp=system.
	* Makefile.in: Regenerated.
	* configure: Likewise.

2012-07-06  Richard Guenther  <rguenther@@suse.de>

	* configure.ac (extra_isl_gmp_configure_flags): Initialize and subst.
	* Makefile.def (isl): Use extra_isl_gmp_configure_flags and
	supply V=1 as extra_make_flags.
	* configure: Regenerated.
	* Makefile.in: Likewise.

2012-07-03  Richard Guenther  <rguenther@@suse.de>

	* Makfile.def (isl): Remove not necessary extra_exports and
	extra_make_flags.
	(cloog): Use $$CPPFLAGS instead of ${CPPFLAGS}.
	* Makefile.in: Regenerated.

2012-07-03  Richard Guenther  <rguenther@@suse.de>

	* Makefile.def (cloog): Add V=1 to extra_make_flags.
	* configure.ac: If either the ISL or the CLooG check failed
	do not try to build in-tree versions.
	* Makefile.in: Regenerated.
	* configure: Regenerated.

2012-07-02  Richard Guenther  <rguenther@@suse.de>
	Michael Matz  <matz@@suse.de>
	Tobias Grosser <tobias@@grosser.es>
	Sebastian Pop <sebpop@@gmail.com>

	* Makefile.def: Add ISL host module, remove PPL host module.
	Adjust ClooG host module to use the proper ISL.
	* Makefile.tpl: Pass ISL include flags instead of PPL ones.
	* configure.ac: Include config/isl.m4.  Add ISL host library,
	remove PPL.  Remove PPL configury, add ISL configury, adjust
	ClooG configury.
	* Makefile.in: Regenerated.
	* configure: Likewise.

2012-07-02  Richard Guenther  <rguenther@@suse.de>

	Merge from graphite branch
	2011-07-21  Tobias Grosser  <tobias@@grosser.es>

	* configure: Regenerated.
	* config/cloog.m4: Remove support for CLooG-ppl and CLooG-parma,
	both cloog.org and legacy versions. The only supported version will
	be CLooG with the isl backend.

	2011-07-21  Tobias Grosser  <tobias@@grosser.es>

	* configure: Regenerated.
	* configure.ac: Require cloog isl 0.17.0

	2011-07-21  Tobias Grosser  <tobias@@grosser.es>

	* configure: Regenerated.
	* config/cloog.m4: Do not define CLOOG_ORG

2012-06-29  Steven Bosscher  <steven@@gcc.gnu.org>

	* configure.ac: Skip C if explicitly selected.
	* configure: Regenerate.

2012-06-28  Christophe Lyon <christophe.lyon@@st.com>

	* configure.ac (CFLAGS_FOR_TARGET, CXXFLAGS_FOR_TARGET): Make sure
	they contain -O2.
	* configure: Regenerate.

2012-06-20  Jason Merrill  <jason@@redhat.com>

	* Makefile.tpl (check-target-libgomp-c++): New.
	(check-target-libitm-c++): New.
	* Makefile.def (c++): Add them.
	* Makefile.in: Regenerate.

2012-05-16  Olivier Hainque  <hainque@@adacore.com>

	* Makefile.tpl (gcc-no-fixedincludes): Rename into ...
	(gcc-install-no-fixedincludes): Now forwarder to local target in gcc/
	(install-no-fixedincludes): Adjust accordingly.
	* Makefile.in: Regenerate.

2012-05-09  Nick Clifton  <nickc@@redhat.com>
	    Paul Smith  <psmith@@gnu.org>

	PR bootstrap/50461
	* configure.ac (mpfr-dir): When using in-tree MPFR sources
	allow for the fact that from release v3.1.0 of MPFR the source
	files were moved into a src sub-directory.
	* configure: Regenerate.

2012-05-07  Janne Blomqvist  <jb@@gcc.gnu.org>

	* configure.ac: Bump minimum MPFR version to 2.4.0.
	* configure: Regenerated.

2012-05-01  Richard Henderson  <rth@@redhat.com>

	* Makefile.def (libatomic): New target_module.
	* configure.ac (target_libraries): Add libatomic.
	(noconfigdirs): Check if libatomic is supported.
	* Makefile.in, configure: Rebuild.

config/

2012-08-26  Art Haas <ahaas@@impactweather.com>

	* cloog.m4 (CLOOG_INIT_FLAGS): Use = instead of == in test.

2012-07-04  Tristan Gingold  <gingold@@adacore.com>

	* isl.m4 (ISL_CHECK_VERSION): Set to yes if cross-compiling.
	Fix comments.

2012-07-03  Richard Guenther  <rguenther@@suse.de>

	* cloog.m4: Remove debugging print.

2012-07-03  Rainer Orth  <ro@@CeBiTec.Uni-Bielefeld.DE>

	* isl.m4 (ISL_CHECK_VERSION): Add -lisl to LIBS, not LDFLAGS.

2012-07-02  Richard Guenther  <rguenther@@suse.de>

	* isl.m4 (_ISL_CHECK_CT_PROG): Omit main function header/footer.
	Fix version test.

2012-07-02  Richard Guenther  <rguenther@@suse.de>
	Michael Matz  <matz@@suse.de>
	Tobias Grosser <tobias@@grosser.es>
	Sebastian Pop <sebpop@@gmail.com>

	* cloog.m4: Set up to work against ISL only.
	* isl.m4: New file.
@
text
@a25 6
  AC_ARG_WITH(isl,
    [AS_HELP_STRING(
      [--with-isl=PATH],
      [Specify prefix directory for the installed ISL package.
       Equivalent to --with-isl-include=PATH/include
       plus --with-isl-lib=PATH/lib])])
a69 6

  isllibs="${isllibs} -lisl"

  dnl Flags needed for ISL
  AC_SUBST(isllibs)
  AC_SUBST(islinc)
@

