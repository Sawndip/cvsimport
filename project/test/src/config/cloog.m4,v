head	1.7;
access;
symbols
	sid-snapshot-20180601:1.7
	cgen-snapshot-20180601:1.7
	sid-snapshot-20180501:1.7
	cgen-snapshot-20180501:1.7
	sid-snapshot-20180401:1.7
	cgen-snapshot-20180401:1.7
	sid-snapshot-20180301:1.7
	cgen-snapshot-20180301:1.7
	sid-snapshot-20180201:1.7
	cgen-snapshot-20180201:1.7
	sid-snapshot-20180101:1.7
	cgen-snapshot-20180101:1.7
	sid-snapshot-20171201:1.7
	cgen-snapshot-20171201:1.7
	sid-snapshot-20171101:1.7
	cgen-snapshot-20171101:1.7
	sid-snapshot-20171001:1.7
	cgen-snapshot-20171001:1.7
	sid-snapshot-20170901:1.7
	cgen-snapshot-20170901:1.7
	sid-snapshot-20170801:1.7
	cgen-snapshot-20170801:1.7
	sid-snapshot-20170701:1.7
	cgen-snapshot-20170701:1.7
	sid-snapshot-20170601:1.7
	cgen-snapshot-20170601:1.7
	sid-snapshot-20170501:1.7
	cgen-snapshot-20170501:1.7
	sid-snapshot-20170401:1.7
	cgen-snapshot-20170401:1.7
	sid-snapshot-20170301:1.7
	cgen-snapshot-20170301:1.7
	sid-snapshot-20170201:1.7
	cgen-snapshot-20170201:1.7
	sid-snapshot-20170101:1.7
	cgen-snapshot-20170101:1.7
	sid-snapshot-20161201:1.7
	cgen-snapshot-20161201:1.7
	sid-snapshot-20161101:1.7
	cgen-snapshot-20161101:1.7
	sid-snapshot-20160901:1.7
	cgen-snapshot-20160901:1.7
	sid-snapshot-20160801:1.7
	cgen-snapshot-20160801:1.7
	sid-snapshot-20160701:1.7
	cgen-snapshot-20160701:1.7
	sid-snapshot-20160601:1.7
	cgen-snapshot-20160601:1.7
	sid-snapshot-20160501:1.7
	cgen-snapshot-20160501:1.7
	sid-snapshot-20160401:1.7
	cgen-snapshot-20160401:1.7
	sid-snapshot-20160301:1.7
	cgen-snapshot-20160301:1.7
	sid-snapshot-20160201:1.7
	cgen-snapshot-20160201:1.7
	sid-snapshot-20160101:1.7
	cgen-snapshot-20160101:1.7
	sid-snapshot-20151201:1.7
	cgen-snapshot-20151201:1.7
	sid-snapshot-20151101:1.7
	cgen-snapshot-20151101:1.7
	sid-snapshot-20151001:1.7
	cgen-snapshot-20151001:1.7
	sid-snapshot-20150901:1.7
	cgen-snapshot-20150901:1.7
	sid-snapshot-20150801:1.7
	cgen-snapshot-20150801:1.7
	sid-snapshot-20150701:1.7
	cgen-snapshot-20150701:1.7
	sid-snapshot-20150601:1.7
	cgen-snapshot-20150601:1.7
	sid-snapshot-20150501:1.7
	cgen-snapshot-20150501:1.7
	sid-snapshot-20150401:1.7
	cgen-snapshot-20150401:1.7
	cygwin-1_7_35-release:1.7
	sid-snapshot-20150301:1.7
	cgen-snapshot-20150301:1.7
	cygwin-1_7_34-release:1.7
	sid-snapshot-20150201:1.7
	cgen-snapshot-20150201:1.7
	sid-snapshot-20150101:1.7
	cgen-snapshot-20150101:1.7
	newlib-2_2_0:1.7.0.8
	sid-snapshot-20141201:1.7
	cgen-snapshot-20141201:1.7
	cygwin-1_7_33-release:1.7
	sid-snapshot-20141101:1.7
	cgen-snapshot-20141101:1.7
	sid-snapshot-20141001:1.7
	cgen-snapshot-20141001:1.7
	sid-snapshot-20140901:1.7
	cgen-snapshot-20140901:1.7
	cygwin-1_7_32-release:1.7
	sid-snapshot-20140801:1.7
	cgen-snapshot-20140801:1.7
	cygwin-1_7_31-release:1.7
	sid-snapshot-20140701:1.7
	cgen-snapshot-20140701:1.7
	sid-snapshot-20140601:1.7
	cgen-snapshot-20140601:1.7
	cygwin-1_7_30-release:1.7
	sid-snapshot-20140501:1.7
	cgen-snapshot-20140501:1.7
	cygwin-1_7_29-release:1.7
	sid-snapshot-20140401:1.7
	cgen-snapshot-20140401:1.7
	sid-snapshot-20140301:1.7
	cgen-snapshot-20140301:1.7
	cygwin-1_7_28-release:1.7
	sid-snapshot-20140201:1.7
	cgen-snapshot-20140201:1.7
	sid-snapshot-20140101:1.7
	cgen-snapshot-20140101:1.7
	newlib-2_1_0:1.7
	sid-snapshot-20131201:1.7
	cgen-snapshot-20131201:1.7
	cygwin-1_7_27-release:1.7
	cygwin-1_7_26-release:1.7
	sid-snapshot-20131101:1.7
	cgen-snapshot-20131101:1.7
	sid-snapshot-20131001:1.7
	cgen-snapshot-20131001:1.7
	binutils-2_24-branch:1.7.0.6
	binutils-2_24-branchpoint:1.7
	sid-snapshot-20130901:1.7
	cgen-snapshot-20130901:1.7
	cygwin-1_7_25-release:1.7
	gdb_7_6_1-2013-08-30-release:1.7
	cygwin-1_7_24-release:1.7
	cygwin-1_7_23-release:1.7
	sid-snapshot-20130801:1.7
	cgen-snapshot-20130801:1.7
	cygwin-1_7_22-release:1.7
	cygwin-1_7_21-release:1.7
	sid-snapshot-20130701:1.7
	cgen-snapshot-20130701:1.7
	cygwin-1_7_20-release:1.7
	cygwin-1_7_19-release:1.7
	sid-snapshot-20130601:1.7
	cgen-snapshot-20130601:1.7
	sid-snapshot-20130501:1.7
	cgen-snapshot-20130501:1.7
	gdb_7_6-2013-04-26-release:1.7
	cygwin-64bit-postmerge:1.7
	cygwin-64bit-premerge-branch:1.7.0.4
	cygwin-64bit-premerge:1.7
	sid-snapshot-20130401:1.7
	cgen-snapshot-20130401:1.7
	binutils-2_23_2:1.4
	gdb_7_6-branch:1.7.0.2
	gdb_7_6-2013-03-12-branchpoint:1.7
	cygwin-1_7_18-release:1.7
	sid-snapshot-20130301:1.7
	cgen-snapshot-20130301:1.7
	sid-snapshot-20130201:1.6
	cgen-snapshot-20130201:1.6
	sid-snapshot-20130101:1.6
	cgen-snapshot-20130101:1.6
	newlib-2_0_0:1.6
	sid-snapshot-20121201:1.6
	cgen-snapshot-20121201:1.6
	gdb_7_5_1-2012-11-29-release:1.4
	binutils-2_23_1:1.4
	sid-snapshot-20121101:1.6
	cgen-snapshot-20121101:1.6
	binutils-2_23:1.4
	cygwin-1_7_17-release:1.6
	sid-snapshot-20121001:1.6
	cgen-snapshot-20121001:1.6
	sid-snapshot-20120901:1.5
	cgen-snapshot-20120901:1.5
	gdb_7_5-2012-08-17-release:1.4
	cygwin-64bit-branch:1.4.0.14
	sid-snapshot-20120801:1.4
	cgen-snapshot-20120801:1.4
	binutils-2_23-branch:1.4.0.12
	binutils-2_23-branchpoint:1.4
	cygwin-1_7_16-release:1.4
	gdb_7_5-branch:1.4.0.10
	gdb_7_5-2012-07-18-branchpoint:1.4
	sid-snapshot-20120701:1.4
	cgen-snapshot-20120701:1.4
	sid-snapshot-20120601:1.4
	cgen-snapshot-20120601:1.4
	cygwin-1_7_15-release:1.4
	sid-snapshot-20120501:1.4
	cgen-snapshot-20120501:1.4
	binutils-2_22_branch:1.4.0.8
	gdb_7_4_1-2012-04-26-release:1.4
	cygwin-1_7_14_2-release:1.4
	cygwin-1_7_14-release:1.4
	cygwin-1_7_12-release:1.4
	sid-snapshot-20120401:1.4
	cgen-snapshot-20120401:1.4
	sid-snapshot-20120301:1.4
	cgen-snapshot-20120301:1.4
	cygwin-1_7_11-release:1.4
	cygwin-1_7_10-release:1.4
	sid-snapshot-20120201:1.4
	cgen-snapshot-20120201:1.4
	gdb_7_4-2012-01-24-release:1.4
	sid-snapshot-20120101:1.4
	cgen-snapshot-20120101:1.4
	newlib-1_20_0:1.4
	gdb_7_4-branch:1.4.0.6
	gdb_7_4-2011-12-13-branchpoint:1.4
	sid-snapshot-20111201:1.4
	cgen-snapshot-20111201:1.4
	binutils-2_22:1.4
	sid-snapshot-20111101:1.4
	cgen-snapshot-20111101:1.4
	sid-snapshot-20111001:1.4
	cgen-snapshot-20111001:1.4
	binutils-2_22-branch:1.4.0.4
	binutils-2_22-branchpoint:1.4
	gdb_7_3_1-2011-09-04-release:1.4
	sid-snapshot-20110901:1.4
	cgen-snapshot-20110901:1.4
	sid-snapshot-20110801:1.4
	cgen-snapshot-20110801:1.4
	gdb_7_3-2011-07-26-release:1.4
	sid-snapshot-20110701:1.4
	cgen-snapshot-20110701:1.4
	sid-snapshot-20110601:1.4
	cgen-snapshot-20110601:1.4
	sid-snapshot-20110501:1.4
	cgen-snapshot-20110501:1.4
	gdb_7_3-branch:1.4.0.2
	gdb_7_3-2011-04-01-branchpoint:1.4
	sid-snapshot-20110401:1.4
	cgen-snapshot-20110401:1.4
	cygwin-1_7_9-release:1.4
	sid-snapshot-20110301:1.3
	cgen-snapshot-20110301:1.3
	cygwin-1_7_8-release:1.3
	sid-snapshot-20110201:1.2
	cgen-snapshot-20110201:1.2
	sid-snapshot-20110101:1.2
	cgen-snapshot-20110101:1.2
	newlib-1_19_0:1.2
	sid-snapshot-20101201:1.2
	cgen-snapshot-20101201:1.2
	binutils_latest_snapshot:1.7;
locks; strict;
comment	@# @;


1.7
date	2013.02.04.23.31.16;	author amodra;	state Exp;
branches;
next	1.6;

1.6
date	2012.09.29.15.22.16;	author hjl;	state Exp;
branches;
next	1.5;

1.5
date	2012.08.26.14.34.40;	author hjl;	state Exp;
branches;
next	1.4;

1.4
date	2011.03.02.03.49.38;	author spop;	state Exp;
branches;
next	1.3;

1.3
date	2011.02.12.14.40.09;	author rwild;	state Exp;
branches;
next	1.2;

1.2
date	2010.11.20.20.31.10;	author bonzini;	state Exp;
branches;
next	1.1;

1.1
date	2010.11.19.22.06.27;	author ian;	state Exp;
branches;
next	;


desc
@@


1.7
log
@	* configure: Regenerate after syncing config/.
@
text
@# This file is part of GCC.
#
# GCC is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free
# Software Foundation; either version 3, or (at your option) any later
# version.
#
# GCC is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# for more details.
#
# You should have received a copy of the GNU General Public License
# along with GCC; see the file COPYING3.  If not see
# <http://www.gnu.org/licenses/>.
#
# Contributed by Andreas Simbuerger <simbuerg@@fim.uni-passau.de>

# CLOOG_INIT_FLAGS ()
# -------------------------
# Provide configure switches for CLooG support.
# Initialize clooglibs/clooginc according to the user input.
AC_DEFUN([CLOOG_INIT_FLAGS],
[
  AC_ARG_WITH([cloog-include],
    [AS_HELP_STRING(
      [--with-cloog-include=PATH],
      [Specify directory for installed CLooG include files])])
  AC_ARG_WITH([cloog-lib],
    [AS_HELP_STRING(
      [--with-cloog-lib=PATH],
      [Specify the directory for the installed CLooG library])])

  AC_ARG_ENABLE(cloog-version-check,
    [AS_HELP_STRING(
      [--disable-cloog-version-check],
      [disable check for CLooG version])],
    ENABLE_CLOOG_CHECK=$enableval,
    ENABLE_CLOOG_CHECK=yes)
  
  # Initialize clooglibs and clooginc.
  case $with_cloog in
    no)
      clooglibs=
      clooginc=
      ;;
    "" | yes)
      ;;
    *)
      clooglibs="-L$with_cloog/lib"
      clooginc="-I$with_cloog/include"
      ;;
  esac
  if test "x${with_cloog_include}" != x ; then
    clooginc="-I$with_cloog_include"
  fi
  if test "x${with_cloog_lib}" != x; then
    clooglibs="-L$with_cloog_lib"
  fi
  dnl If no --with-cloog flag was specified and there is in-tree CLooG
  dnl source, set up flags to use that and skip any version tests
  dnl as we cannot run them reliably before building CLooG
  if test "x${clooginc}" = x && test "x${clooglibs}" = x \
     && test -d ${srcdir}/cloog; then
     clooglibs='-L$$r/$(HOST_SUBDIR)/cloog/'"$lt_cv_objdir"' '
     clooginc='-I$$r/$(HOST_SUBDIR)/cloog/include -I$$s/cloog/include -I'${srcdir}'/cloog/include '
    ENABLE_CLOOG_CHECK=no
    AC_MSG_WARN([using in-tree CLooG, disabling version check])
  fi

  clooginc="-DCLOOG_INT_GMP ${clooginc}"
  clooglibs="${clooglibs} -lcloog-isl ${isllibs} -lisl"
]
)

# CLOOG_REQUESTED (ACTION-IF-REQUESTED, ACTION-IF-NOT)
# ----------------------------------------------------
# Provide actions for failed CLooG detection.
AC_DEFUN([CLOOG_REQUESTED],
[
  AC_REQUIRE([CLOOG_INIT_FLAGS])

  if test "x${with_cloog}" = xno; then
    $2
  elif test "x${with_cloog}" != x \
    || test "x${with_cloog_include}" != x \
    || test "x${with_cloog_lib}" != x ; then
    $1
  else
    $2
  fi
]
)

# _CLOOG_CHECK_CT_PROG(MAJOR, MINOR, REVISION)
# --------------------------------------------
# Helper for verifying CLooG's compile time version.
m4_define([_CLOOG_CHECK_CT_PROG],[AC_LANG_PROGRAM(
  [#include "cloog/version.h"],
  [#if CLOOG_VERSION_MAJOR != $1 \
    || CLOOG_VERSION_MINOR != $2 \
    || CLOOG_VERSION_REVISION < $3
    choke me
   #endif])])

# CLOOG_CHECK_VERSION CLOOG_CHECK_VERSION (MAJOR, MINOR, REVISION)
# ----------------------------------------------------------------
# Test the found CLooG to be exact of version MAJOR.MINOR and at least
# REVISION.
AC_DEFUN([CLOOG_CHECK_VERSION],
[
  AC_REQUIRE([CLOOG_INIT_FLAGS])

  if test "${ENABLE_CLOOG_CHECK}" = yes ; then
    _cloog_saved_CFLAGS=$CFLAGS
    _cloog_saved_LDFLAGS=$LDFLAGS

    CFLAGS="${_cloog_saved_CFLAGS} ${clooginc} ${islinc} ${gmpinc}"
    LDFLAGS="${_cloog_saved_LDFLAGS} ${clooglibs} ${isllibs} ${gmplib}"

    AC_MSG_CHECKING([for version $1.$2.$3 of CLooG])
    AC_COMPILE_IFELSE([_CLOOG_CHECK_CT_PROG($1,$2,$3)],
	[gcc_cv_cloog=yes],
	[gcc_cv_cloog=no])
    AC_MSG_RESULT([$gcc_cv_cloog])

    CFLAGS=$_cloog_saved_CFLAGS
    LDFLAGS=$_cloog_saved_LDFLAGS
  fi
]
)

# CLOOG_IF_FAILED (ACTION-IF-FAILED)
# ----------------------------------
# Executes ACTION-IF-FAILED, if GRAPHITE was requested and
# the checks failed.
AC_DEFUN([CLOOG_IF_FAILED],
[
  CLOOG_REQUESTED([graphite_requested=yes], [graphite_requested=no])
  
  if test "${gcc_cv_cloog}" = no ; then
    clooglibs=
    clooginc=
  fi

  if test "${graphite_requested}" = yes \
    && test "x${clooglibs}" = x \
    && test "x${clooginc}" = x ; then
    $1
  fi
]
)
@


1.6
log
@Sync config with GCC

2012-09-03  Richard Guenther  <rguenther@@suse.de>

	PR bootstrap/54138
	* config/cloog.m4: Adjust for toplevel reorg.
	* config/isl.m4: Adjust.
@
text
@d60 3
a62 2
  dnl If no --with-cloog flag was specified and there is in-tree ClooG
  dnl source, set up flags to use that.
d67 2
d121 2
a122 3
    AC_CACHE_CHECK([for version $1.$2.$3 of CLooG],
      [gcc_cv_cloog],
      [AC_COMPILE_IFELSE([_CLOOG_CHECK_CT_PROG($1,$2,$3)],
d124 2
a125 1
	[gcc_cv_cloog=no])])
@


1.5
log
@Sync toplevel files with GCC tree

2012-08-14   Diego Novillo  <dnovillo@@google.com>

	Merge from cxx-conversion branch.

	* Makefile.tpl (STAGE[+id+]_CXXFLAGS): Remove
	POSTSTAGE1_CONFIGURE_FLAGS.
	* Makefile.in: Regenerate.
	* configure.ac (ENABLE_BUILD_WITH_CXX): Remove.  Update all users.
	Force C++ when bootstrapping.
	* configure: Regenerate.

2012-07-06  Richard Guenther  <rguenther@@suse.de>

	* Makefile.def (cloog): Pass $(HOST_GMPINC) and $(HOST_ISLINC)
	as CPPFLAGS, pass path to built gmp as LDFLAGS, always use
	--with-gmp=system.
	* Makefile.in: Regenerated.
	* configure: Likewise.

2012-07-06  Richard Guenther  <rguenther@@suse.de>

	* configure.ac (extra_isl_gmp_configure_flags): Initialize and subst.
	* Makefile.def (isl): Use extra_isl_gmp_configure_flags and
	supply V=1 as extra_make_flags.
	* configure: Regenerated.
	* Makefile.in: Likewise.

2012-07-03  Richard Guenther  <rguenther@@suse.de>

	* Makfile.def (isl): Remove not necessary extra_exports and
	extra_make_flags.
	(cloog): Use $$CPPFLAGS instead of ${CPPFLAGS}.
	* Makefile.in: Regenerated.

2012-07-03  Richard Guenther  <rguenther@@suse.de>

	* Makefile.def (cloog): Add V=1 to extra_make_flags.
	* configure.ac: If either the ISL or the CLooG check failed
	do not try to build in-tree versions.
	* Makefile.in: Regenerated.
	* configure: Regenerated.

2012-07-02  Richard Guenther  <rguenther@@suse.de>
	Michael Matz  <matz@@suse.de>
	Tobias Grosser <tobias@@grosser.es>
	Sebastian Pop <sebpop@@gmail.com>

	* Makefile.def: Add ISL host module, remove PPL host module.
	Adjust ClooG host module to use the proper ISL.
	* Makefile.tpl: Pass ISL include flags instead of PPL ones.
	* configure.ac: Include config/isl.m4.  Add ISL host library,
	remove PPL.  Remove PPL configury, add ISL configury, adjust
	ClooG configury.
	* Makefile.in: Regenerated.
	* configure: Likewise.

2012-07-02  Richard Guenther  <rguenther@@suse.de>

	Merge from graphite branch
	2011-07-21  Tobias Grosser  <tobias@@grosser.es>

	* configure: Regenerated.
	* config/cloog.m4: Remove support for CLooG-ppl and CLooG-parma,
	both cloog.org and legacy versions. The only supported version will
	be CLooG with the isl backend.

	2011-07-21  Tobias Grosser  <tobias@@grosser.es>

	* configure: Regenerated.
	* configure.ac: Require cloog isl 0.17.0

	2011-07-21  Tobias Grosser  <tobias@@grosser.es>

	* configure: Regenerated.
	* config/cloog.m4: Do not define CLOOG_ORG

2012-06-29  Steven Bosscher  <steven@@gcc.gnu.org>

	* configure.ac: Skip C if explicitly selected.
	* configure: Regenerate.

2012-06-28  Christophe Lyon <christophe.lyon@@st.com>

	* configure.ac (CFLAGS_FOR_TARGET, CXXFLAGS_FOR_TARGET): Make sure
	they contain -O2.
	* configure: Regenerate.

2012-06-20  Jason Merrill  <jason@@redhat.com>

	* Makefile.tpl (check-target-libgomp-c++): New.
	(check-target-libitm-c++): New.
	* Makefile.def (c++): Add them.
	* Makefile.in: Regenerate.

2012-05-16  Olivier Hainque  <hainque@@adacore.com>

	* Makefile.tpl (gcc-no-fixedincludes): Rename into ...
	(gcc-install-no-fixedincludes): Now forwarder to local target in gcc/
	(install-no-fixedincludes): Adjust accordingly.
	* Makefile.in: Regenerate.

2012-05-09  Nick Clifton  <nickc@@redhat.com>
	    Paul Smith  <psmith@@gnu.org>

	PR bootstrap/50461
	* configure.ac (mpfr-dir): When using in-tree MPFR sources
	allow for the fact that from release v3.1.0 of MPFR the source
	files were moved into a src sub-directory.
	* configure: Regenerate.

2012-05-07  Janne Blomqvist  <jb@@gcc.gnu.org>

	* configure.ac: Bump minimum MPFR version to 2.4.0.
	* configure: Regenerated.

2012-05-01  Richard Henderson  <rth@@redhat.com>

	* Makefile.def (libatomic): New target_module.
	* configure.ac (target_libraries): Add libatomic.
	(noconfigdirs): Check if libatomic is supported.
	* Makefile.in, configure: Rebuild.

config/

2012-08-26  Art Haas <ahaas@@impactweather.com>

	* cloog.m4 (CLOOG_INIT_FLAGS): Use = instead of == in test.

2012-07-04  Tristan Gingold  <gingold@@adacore.com>

	* isl.m4 (ISL_CHECK_VERSION): Set to yes if cross-compiling.
	Fix comments.

2012-07-03  Richard Guenther  <rguenther@@suse.de>

	* cloog.m4: Remove debugging print.

2012-07-03  Rainer Orth  <ro@@CeBiTec.Uni-Bielefeld.DE>

	* isl.m4 (ISL_CHECK_VERSION): Add -lisl to LIBS, not LDFLAGS.

2012-07-02  Richard Guenther  <rguenther@@suse.de>

	* isl.m4 (_ISL_CHECK_CT_PROG): Omit main function header/footer.
	Fix version test.

2012-07-02  Richard Guenther  <rguenther@@suse.de>
	Michael Matz  <matz@@suse.de>
	Tobias Grosser <tobias@@grosser.es>
	Sebastian Pop <sebpop@@gmail.com>

	* cloog.m4: Set up to work against ISL only.
	* isl.m4: New file.
@
text
@a24 6
  AC_ARG_WITH(cloog,
    [AS_HELP_STRING(
      [--with-cloog=PATH],
      [Specify prefix directory for the installed CLooG-PPL package.
       Equivalent to --with-cloog-include=PATH/include
       plus --with-cloog-lib=PATH/lib])])
d69 1
a69 5
  clooglibs="${clooglibs} -lcloog-isl ${isllibs}"

  dnl Flags needed for CLOOG
  AC_SUBST(clooglibs)
  AC_SUBST(clooginc)
@


1.4
log
@Add -lpwl to ppllibs, and -lisl to clooglibs.

2011-03-02  Sebastian Pop  <sebastian.pop@@amd.com>

	* configure.ac: Add -lpwl to ppllibs.
	* config/cloog.m4: Add -lisl to clooglibs.
	* configure: Regenerated.
@
text
@a39 11
  AC_ARG_ENABLE(cloog-backend,
    [AS_HELP_STRING(
      [--enable-cloog-backend[[=BACKEND]]],
      [set the CLooG BACKEND used to either isl, ppl or ppl-legacy (default)])],
    [ if   test "x${enableval}" = "xisl"; then
	cloog_backend=isl
      elif test "x${enableval}" = "xppl"; then
	cloog_backend=ppl
      else
	cloog_backend=ppl-legacy
      fi], cloog_backend=ppl-legacy)
d66 10
a101 101
# _CLOOG_ORG_PROG_ISL ()
# ------------------
# Helper for detecting CLooG.org's ISL backend.
m4_define([_CLOOG_ORG_PROG_ISL],[AC_LANG_PROGRAM(
  [#include "cloog/cloog.h" ],
  [cloog_version ()])])

# _CLOOG_ORG_PROG_PPL ()
# ------------------
# Helper for detecting CLooG.org's PPL backend.
m4_define([_CLOOG_ORG_PROG_PPL],[AC_LANG_PROGRAM(
  [#include "cloog/cloog.h"
   #include "cloog/ppl/cloog.h"],
  [cloog_version ()])])

# _CLOOG_PPL_LEGACY_PROG ()
# -------------------------
# Helper for detecting CLooG-Legacy (CLooG-PPL).
m4_define([_CLOOG_PPL_LEGACY_PROG], [AC_LANG_PROGRAM(
  [#include "cloog/cloog.h"],
  [#ifndef CLOOG_PPL_BACKEND
    choke me
   #endif ])])

# CLOOG_FIND_FLAGS ()
# ------------------
# Detect the used CLooG-backend and set clooginc/clooglibs/cloog_org.
# Only look for the CLooG backend type specified in --enable-cloog-backend
AC_DEFUN([CLOOG_FIND_FLAGS],
[
  AC_REQUIRE([CLOOG_INIT_FLAGS])

  _cloog_saved_CFLAGS=$CFLAGS
  _cloog_saved_CPPFLAGS=$CPPFLAGS
  _cloog_saved_LDFLAGS=$LDFLAGS
  _cloog_saved_LIBS=$LIBS

  _cloogorginc="-DCLOOG_INT_GMP -DCLOOG_ORG"
 
  dnl clooglibs & clooginc may have been initialized by CLOOG_INIT_FLAGS.
  CFLAGS="${CFLAGS} ${clooginc} ${gmpinc}"
  CPPFLAGS="${CPPFLAGS} ${_cloogorginc}"
  LDFLAGS="${LDFLAGS} ${clooglibs}"

  case $cloog_backend in
    "ppl-legacy")
    CFLAGS="${CFLAGS} ${pplinc}"
    LDFLAGS="${LDFLAGS} ${ppllibs}"
    AC_CACHE_CHECK([for installed CLooG PPL Legacy], [gcc_cv_cloog_type],
      [LIBS="-lcloog ${_cloog_saved_LIBS}"
      AC_LINK_IFELSE([_CLOOG_PPL_LEGACY_PROG], [gcc_cv_cloog_type="PPL Legacy"],
		     [gcc_cv_cloog_type=no])])
    ;;
    "isl")
    AC_CACHE_CHECK([for installed CLooG ISL], [gcc_cv_cloog_type],
      [LIBS="-lcloog-isl ${_cloog_saved_LIBS}"
      AC_LINK_IFELSE([_CLOOG_ORG_PROG_ISL], [gcc_cv_cloog_type="ISL"],
		     [gcc_cv_cloog_type=no])])
    ;;
    "ppl")
    CFLAGS="${CFLAGS} ${pplinc}"
    LDFLAGS="${LDFLAGS} ${ppllibs}"
    AC_CACHE_CHECK([for installed CLooG PPL], [gcc_cv_cloog_type],
      [LIBS="-lcloog-ppl ${_cloog_saved_LIBS}"
      AC_LINK_IFELSE([_CLOOG_ORG_PROG_PPL], [gcc_cv_cloog_type="PPL"],
		     [gcc_cv_cloog_type=no])])
    ;;
    *)
      gcc_cv_cloog_type=""
  esac

  case $gcc_cv_cloog_type in
    "PPL Legacy")
      clooginc="${clooginc}"
      clooglibs="${clooglibs} -lcloog"
      cloog_org=no
      ;;
    "ISL")
      clooginc="${clooginc} ${_cloogorginc}"
      clooglibs="${clooglibs} -lcloog-isl -lisl"
      cloog_org=yes
      ;;
    "PPL")
      clooginc="${clooginc} ${_cloogorginc}"
      clooglibs="${clooglibs} -lcloog-ppl"
      cloog_org=yes
      ;;
    *)
      clooglibs=
      clooginc=
      cloog_org=
      ;;
  esac

  LIBS=$_cloog_saved_LIBS
  CFLAGS=$_cloog_saved_CFLAGS
  CPPFLAGS=$_cloog_saved_CPPFLAGS
  LDFLAGS=$_cloog_saved_LDFLAGS
]
)

d106 1
a106 1
  [#include "cloog/cloog.h"],
a112 13
# _CLOOG_CHECK_RT_PROG ()
# -----------------------
# Helper for verifying that CLooG's compile time version
# matches the run time version.
m4_define([_CLOOG_CHECK_RT_PROG],[AC_LANG_PROGRAM(
  [#include "cloog/cloog.h"],
  [if ((cloog_version_major () != CLOOG_VERSION_MAJOR)
    && (cloog_version_minor () != CLOOG_VERSION_MINOR)
    && (cloog_version_revision () != CLOOG_VERSION_REVISION))
    {
      return 1;
    }])])

a116 2
# If we're using the old CLooG-PPL (Legacy), the old version check will
# be executed (Ignores the provided version information).
d119 1
a119 1
  AC_REQUIRE([CLOOG_FIND_FLAGS])
d125 2
a126 2
    CFLAGS="${_cloog_saved_CFLAGS} ${clooginc} ${pplinc} ${gmpinc}"
    LDFLAGS="${_cloog_saved_LDFLAGS} ${clooglibs} ${ppllibs}"
d128 5
a132 15
    if test "${cloog_org}" = yes ; then
      AC_CACHE_CHECK([for version $1.$2.$3 of CLooG],
        [gcc_cv_cloog_ct_0_14_0],
        [AC_COMPILE_IFELSE([_CLOOG_CHECK_CT_PROG($1,$2,$3)],
          [gcc_cv_cloog_ct_0_14_0=yes],
          [gcc_cv_cloog_ct_0_14_0=no])])
    elif test "${cloog_org}" = no ; then
      AC_CACHE_CHECK([for version 0.15.5 (or later revision) of CLooG],
        [gcc_cv_cloog_ct_0_15_5],
        [AC_COMPILE_IFELSE([_CLOOG_CHECK_CT_PROG(0,15,5)],
          [AC_COMPILE_IFELSE([_CLOOG_CHECK_CT_PROG(0,15,9)],
           [gcc_cv_cloog_ct_0_15_5=yes],
            [gcc_cv_cloog_ct_0_15_5="buggy but acceptable"])],
          [gcc_cv_cloog_ct_0_15_5=no])])
    fi
d148 1
a148 3
  if test "${gcc_cv_cloog_ct_0_14_0}" = no \
    || test "${gcc_cv_cloog_rt_0_14_0}" = no \
    || test "${gcc_cv_cloog_ct_0_15_5}" = no; then
@


1.3
log
@Sync toplevel and config/ from GCC.

/:
	Sync from GCC:

	2011-02-12  Alexandre Oliva  <aoliva@@redhat.com>

	PR lto/47225
	* Makefile.def (lto-plugin): Double dash for enable-shared.
	(configure-gcc): Depend on all-lto-plugin.
	* Makefile.in: Rebuilt.

	2011-02-11  Ralf Wildenhues  <Ralf.Wildenhues@@gmx.de>

	* configure.ac: Remove extra bracket.
	* configure: Regenerate.

	2011-02-06  Kai Tietz  <kai.tietz@@onevision.com>

	PR lto/47225
	* Makefile.def: Add dependency for install-gcc
	on install-lto-plugin.
	* Makfile.in: Regenerated

	2011-01-25  Jakub Jelinek  <jakub@@redhat.com>

	* configure.ac: If with_ppl is no, move setting with_cloog=no
	after CLOOG_REQUESTED check.
	* configure: Regenerated.

	2011-01-25  Sebastian Pop  <sebastian.pop@@amd.com>

	* configure.ac: Call AC_MSG_ERROR when PPL 0.11 is not present and
	CLooG has been requested.
	* configure: Regenerated.

	2011-01-25  Sebastian Pop  <sebastian.pop@@amd.com>

	* configure: Regenerated.
	* configure.ac: Check for version 0.11 (or later revision) of PPL.

	2011-01-25  Tobias Grosser  <grosser@@fim.uni-passau.de>

	* configure: Regenerated.
	* configure.ac: Use CLOOG_CHECK_VERSION(0,16,1).

	2011-01-07  Jan Hubicka  <jh@@suse.cz>

	PR lto/47225
	* Makefile.in: Regenerate.
	* Makefile.def (lto-plugin): Always pass enable-shared to the plugin
	configure.

config/:
2011-01-25  Jakub Jelinek  <jakub@@redhat.com>

	* cloog.m4 (CLOOG_REQUESTED): Use $2 if --without-cloog.

2011-01-10  Jan Hubicka  <jh@@suse.cz>

	* bootstrap-lto.mk: -fuse-linker-plugin is default now;
	pass -fno-lto to STAGEprofile.
@
text
@d182 1
a182 1
      clooglibs="${clooglibs} -lcloog-isl"
@


1.2
log
@sync toplevel with gcc
@
text
@d91 3
a93 1
  if test "x${with_cloog}" != x \
@


1.1
log
@Merge from gcc top-level.

./:
	* configure.ac: Add target-libgo to target_libraries.  Set
	and substitute GOC_FOR_BUILD and GOC_FOR_TARGET.
	* Makefile.tpl (BUILD_EXPORTS): Add GOC and GOCFLAGS.
	(HOST_EXPORTS): Add GOC.
	(BASE_TARGET_EXPORTS): Add GOC.
	(GOC_FOR_BUILD, GOCFLAGS, GOC_FOR_TARGET): New variables.
	(GOCFLAGS_FOR_TARGET): New variable.
	(EXTRA_HOST_FLAGS): Add GOC.
	(EXTRA_TARGET_FLAGS): Add GOC and GOCFLAGS.
	* Makefile.def (target_modules): Add libgo.
	(flags_to_pass): Add GOC_FOR_TARGET and GOCFLAGS_FOR_TARGET.
	(dependencies): Add dependency from configure-target-libgo to
	configure-target-libffi and all-target-libstdc++-v3.  Add
	dependencies from all-target-libgo to all-target-libffi.
	(languages): Add go.
	* configure: Rebuild.
	* Makefile.in: Rebuild.

	* config-ml.in: Add Go support: treat GOC and GOCFLAGS like other
	compiler/flag environment variables.

	* configure.ac: Check for lang_requires_boot_languages in
	config-lang.in files.
	* configure: Rebuild.

	PR fortran/32049
	* Makefile.def: Add libquadmath; build it with language=fortran.
	* configure.ac: Add libquadmath.
	* Makefile.tpl: Handle multiple libs in check-[+language+].
	* Makefile.in: Regenerate.
	* configure: Regenerate.

	* configure.ac: Fix spelling in option names.
	* configure: Regenerated.

	PR bootstrap/39622
	* configure.ac (FLAGS_FOR_TARGET): Add include-fixed path.
	* configure: Regenerated.

	* config/cloog.m4: Add -enable-cloog-backend=(isl|ppl|ppl-legacy) to
	define the cloog backend to use. Furthermore, only pass the ppllibs to
	the configure checks, if necessary.
	* configure: Regenerate.

	* config/cloog.m4: Use CLooG predefined macro to check for CLooG PPL.
	* configure: regenerate

	* config/cloog.m4: Fix typo.  verison -> version.
	* configure: Regenerate.

	* config/cloog.m4: Pass ppl libraries to the CLooG version check.
	* configure: Regenerate.

	* configure.ac: Support official CLooG.org versions.
	* configure: Regenerate.
	* config/cloog.m4: New.

	* configure.ac (*-*-darwin*): Use mh-darwin for all Darwin variants.
	* configure: Regenerate.

config/:
	* cloog.m4 (CLOOG_INIT_FLAGS): Fix spelling in option names.

	* bootstrap-lto: Use -flto.

	* mh-darwin: Renamed from mh-ppc-darwin.
@
text
@d41 3
a43 4
    [  --enable-cloog-backend[=backend]
				isl: The cloog.org isl backend
				ppl-legacy: The legacy ppl backend - default
				ppl: The cloog.org ppl backend],
@

