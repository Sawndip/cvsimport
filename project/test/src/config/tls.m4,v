head	1.13;
access;
symbols
	sid-snapshot-20180601:1.13
	cgen-snapshot-20180601:1.13
	sid-snapshot-20180501:1.13
	cgen-snapshot-20180501:1.13
	sid-snapshot-20180401:1.13
	cgen-snapshot-20180401:1.13
	sid-snapshot-20180301:1.13
	cgen-snapshot-20180301:1.13
	sid-snapshot-20180201:1.13
	cgen-snapshot-20180201:1.13
	sid-snapshot-20180101:1.13
	cgen-snapshot-20180101:1.13
	sid-snapshot-20171201:1.13
	cgen-snapshot-20171201:1.13
	sid-snapshot-20171101:1.13
	cgen-snapshot-20171101:1.13
	sid-snapshot-20171001:1.13
	cgen-snapshot-20171001:1.13
	sid-snapshot-20170901:1.13
	cgen-snapshot-20170901:1.13
	sid-snapshot-20170801:1.13
	cgen-snapshot-20170801:1.13
	sid-snapshot-20170701:1.13
	cgen-snapshot-20170701:1.13
	sid-snapshot-20170601:1.13
	cgen-snapshot-20170601:1.13
	sid-snapshot-20170501:1.13
	cgen-snapshot-20170501:1.13
	sid-snapshot-20170401:1.13
	cgen-snapshot-20170401:1.13
	sid-snapshot-20170301:1.13
	cgen-snapshot-20170301:1.13
	sid-snapshot-20170201:1.13
	cgen-snapshot-20170201:1.13
	sid-snapshot-20170101:1.13
	cgen-snapshot-20170101:1.13
	sid-snapshot-20161201:1.13
	cgen-snapshot-20161201:1.13
	sid-snapshot-20161101:1.13
	cgen-snapshot-20161101:1.13
	sid-snapshot-20160901:1.13
	cgen-snapshot-20160901:1.13
	sid-snapshot-20160801:1.13
	cgen-snapshot-20160801:1.13
	sid-snapshot-20160701:1.13
	cgen-snapshot-20160701:1.13
	sid-snapshot-20160601:1.13
	cgen-snapshot-20160601:1.13
	sid-snapshot-20160501:1.13
	cgen-snapshot-20160501:1.13
	sid-snapshot-20160401:1.13
	cgen-snapshot-20160401:1.13
	sid-snapshot-20160301:1.13
	cgen-snapshot-20160301:1.13
	sid-snapshot-20160201:1.13
	cgen-snapshot-20160201:1.13
	sid-snapshot-20160101:1.13
	cgen-snapshot-20160101:1.13
	sid-snapshot-20151201:1.13
	cgen-snapshot-20151201:1.13
	sid-snapshot-20151101:1.13
	cgen-snapshot-20151101:1.13
	sid-snapshot-20151001:1.13
	cgen-snapshot-20151001:1.13
	sid-snapshot-20150901:1.13
	cgen-snapshot-20150901:1.13
	sid-snapshot-20150801:1.13
	cgen-snapshot-20150801:1.13
	sid-snapshot-20150701:1.13
	cgen-snapshot-20150701:1.13
	sid-snapshot-20150601:1.13
	cgen-snapshot-20150601:1.13
	sid-snapshot-20150501:1.13
	cgen-snapshot-20150501:1.13
	sid-snapshot-20150401:1.13
	cgen-snapshot-20150401:1.13
	cygwin-1_7_35-release:1.13
	sid-snapshot-20150301:1.13
	cgen-snapshot-20150301:1.13
	cygwin-1_7_34-release:1.13
	sid-snapshot-20150201:1.13
	cgen-snapshot-20150201:1.13
	sid-snapshot-20150101:1.13
	cgen-snapshot-20150101:1.13
	newlib-2_2_0:1.13.0.26
	sid-snapshot-20141201:1.13
	cgen-snapshot-20141201:1.13
	cygwin-1_7_33-release:1.13
	sid-snapshot-20141101:1.13
	cgen-snapshot-20141101:1.13
	sid-snapshot-20141001:1.13
	cgen-snapshot-20141001:1.13
	sid-snapshot-20140901:1.13
	cgen-snapshot-20140901:1.13
	cygwin-1_7_32-release:1.13
	sid-snapshot-20140801:1.13
	cgen-snapshot-20140801:1.13
	cygwin-1_7_31-release:1.13
	sid-snapshot-20140701:1.13
	cgen-snapshot-20140701:1.13
	sid-snapshot-20140601:1.13
	cgen-snapshot-20140601:1.13
	cygwin-1_7_30-release:1.13
	sid-snapshot-20140501:1.13
	cgen-snapshot-20140501:1.13
	cygwin-1_7_29-release:1.13
	sid-snapshot-20140401:1.13
	cgen-snapshot-20140401:1.13
	sid-snapshot-20140301:1.13
	cgen-snapshot-20140301:1.13
	cygwin-1_7_28-release:1.13
	sid-snapshot-20140201:1.13
	cgen-snapshot-20140201:1.13
	sid-snapshot-20140101:1.13
	cgen-snapshot-20140101:1.13
	newlib-2_1_0:1.13
	sid-snapshot-20131201:1.13
	cgen-snapshot-20131201:1.13
	cygwin-1_7_27-release:1.13
	cygwin-1_7_26-release:1.13
	sid-snapshot-20131101:1.13
	cgen-snapshot-20131101:1.13
	sid-snapshot-20131001:1.13
	cgen-snapshot-20131001:1.13
	binutils-2_24-branch:1.13.0.24
	binutils-2_24-branchpoint:1.13
	binutils-2_21_1:1.13
	sid-snapshot-20130901:1.13
	cgen-snapshot-20130901:1.13
	cygwin-1_7_25-release:1.13
	gdb_7_6_1-2013-08-30-release:1.13
	cygwin-1_7_24-release:1.13
	cygwin-1_7_23-release:1.13
	sid-snapshot-20130801:1.13
	cgen-snapshot-20130801:1.13
	cygwin-1_7_22-release:1.13
	cygwin-1_7_21-release:1.13
	sid-snapshot-20130701:1.13
	cgen-snapshot-20130701:1.13
	cygwin-1_7_20-release:1.13
	cygwin-1_7_19-release:1.13
	sid-snapshot-20130601:1.13
	cgen-snapshot-20130601:1.13
	sid-snapshot-20130501:1.13
	cgen-snapshot-20130501:1.13
	gdb_7_6-2013-04-26-release:1.13
	cygwin-64bit-postmerge:1.13
	cygwin-64bit-premerge-branch:1.13.0.22
	cygwin-64bit-premerge:1.13
	sid-snapshot-20130401:1.13
	cgen-snapshot-20130401:1.13
	binutils-2_23_2:1.13
	gdb_7_6-branch:1.13.0.20
	gdb_7_6-2013-03-12-branchpoint:1.13
	cygwin-1_7_18-release:1.13
	sid-snapshot-20130301:1.13
	cgen-snapshot-20130301:1.13
	sid-snapshot-20130201:1.13
	cgen-snapshot-20130201:1.13
	sid-snapshot-20130101:1.13
	cgen-snapshot-20130101:1.13
	newlib-2_0_0:1.13
	sid-snapshot-20121201:1.13
	cgen-snapshot-20121201:1.13
	gdb_7_5_1-2012-11-29-release:1.13
	binutils-2_23_1:1.13
	sid-snapshot-20121101:1.13
	cgen-snapshot-20121101:1.13
	binutils-2_23:1.13
	cygwin-1_7_17-release:1.13
	sid-snapshot-20121001:1.13
	cgen-snapshot-20121001:1.13
	sid-snapshot-20120901:1.13
	cgen-snapshot-20120901:1.13
	gdb_7_5-2012-08-17-release:1.13
	cygwin-64bit-branch:1.13.0.18
	sid-snapshot-20120801:1.13
	cgen-snapshot-20120801:1.13
	binutils-2_23-branch:1.13.0.16
	binutils-2_23-branchpoint:1.13
	cygwin-1_7_16-release:1.13
	gdb_7_5-branch:1.13.0.14
	gdb_7_5-2012-07-18-branchpoint:1.13
	sid-snapshot-20120701:1.13
	cgen-snapshot-20120701:1.13
	sid-snapshot-20120601:1.13
	cgen-snapshot-20120601:1.13
	cygwin-1_7_15-release:1.13
	sid-snapshot-20120501:1.13
	cgen-snapshot-20120501:1.13
	binutils-2_22_branch:1.13.0.12
	gdb_7_4_1-2012-04-26-release:1.13
	cygwin-1_7_14_2-release:1.13
	cygwin-1_7_14-release:1.13
	cygwin-1_7_12-release:1.13
	sid-snapshot-20120401:1.13
	cgen-snapshot-20120401:1.13
	sid-snapshot-20120301:1.13
	cgen-snapshot-20120301:1.13
	cygwin-1_7_11-release:1.13
	cygwin-1_7_10-release:1.13
	sid-snapshot-20120201:1.13
	cgen-snapshot-20120201:1.13
	gdb_7_4-2012-01-24-release:1.13
	sid-snapshot-20120101:1.13
	cgen-snapshot-20120101:1.13
	newlib-1_20_0:1.13
	gdb_7_4-branch:1.13.0.10
	gdb_7_4-2011-12-13-branchpoint:1.13
	sid-snapshot-20111201:1.13
	cgen-snapshot-20111201:1.13
	binutils-2_22:1.13
	sid-snapshot-20111101:1.13
	cgen-snapshot-20111101:1.13
	sid-snapshot-20111001:1.13
	cgen-snapshot-20111001:1.13
	binutils-2_22-branch:1.13.0.8
	binutils-2_22-branchpoint:1.13
	gdb_7_3_1-2011-09-04-release:1.13
	sid-snapshot-20110901:1.13
	cgen-snapshot-20110901:1.13
	sid-snapshot-20110801:1.13
	cgen-snapshot-20110801:1.13
	gdb_7_3-2011-07-26-release:1.13
	sid-snapshot-20110701:1.13
	cgen-snapshot-20110701:1.13
	sid-snapshot-20110601:1.13
	cgen-snapshot-20110601:1.13
	sid-snapshot-20110501:1.13
	cgen-snapshot-20110501:1.13
	gdb_7_3-branch:1.13.0.6
	gdb_7_3-2011-04-01-branchpoint:1.13
	sid-snapshot-20110401:1.13
	cgen-snapshot-20110401:1.13
	cygwin-1_7_9-release:1.13
	sid-snapshot-20110301:1.13
	cgen-snapshot-20110301:1.13
	cygwin-1_7_8-release:1.13
	sid-snapshot-20110201:1.13
	cgen-snapshot-20110201:1.13
	sid-snapshot-20110101:1.13
	cgen-snapshot-20110101:1.13
	newlib-1_19_0:1.13
	binutils-2_21:1.13
	sid-snapshot-20101201:1.13
	cgen-snapshot-20101201:1.13
	binutils-2_21-branch:1.13.0.4
	binutils-2_21-branchpoint:1.13
	sid-snapshot-20101101:1.13
	cgen-snapshot-20101101:1.13
	sid-snapshot-20101001:1.13
	cgen-snapshot-20101001:1.13
	binutils-2_20_1:1.12
	gdb_7_2-2010-09-02-release:1.13
	sid-snapshot-20100901:1.13
	cgen-snapshot-20100901:1.13
	cygwin-1_7_7-release:1.13
	sid-snapshot-20100801:1.13
	cgen-snapshot-20100801:1.13
	gdb_7_2-branch:1.13.0.2
	gdb_7_2-2010-07-07-branchpoint:1.13
	sid-snapshot-20100701:1.13
	cgen-snapshot-20100701:1.13
	sid-snapshot-20100601:1.12
	cgen-snapshot-20100601:1.12
	sid-snapshot-20100501:1.12
	cgen-snapshot-20100501:1.12
	cygwin-1_7_5-release:1.12
	cygwin-1_7_4-release:1.12
	sid-snapshot-20100401:1.12
	cgen-snapshot-20100401:1.12
	cygwin-1_7_3-release:1.12
	cygwin-1_7_2-release:1.12
	gdb_7_1-2010-03-18-release:1.12
	sid-snapshot-20100301:1.12
	cgen-snapshot-20100301:1.12
	gdb_7_1-branch:1.12.0.6
	gdb_7_1-2010-02-18-branchpoint:1.12
	sid-snapshot-20100201:1.12
	cgen-snapshot-20100201:1.12
	sid-snapshot-20100101:1.12
	cgen-snapshot-20100101:1.12
	gdb_7_0_1-2009-12-22-release:1.12
	newlib-1_18_0:1.12
	cygwin-1_7_1-release:1.12
	sid-snapshot-20091201:1.12
	cgen-snapshot-20091201:1.12
	sid-snapshot-20091101:1.12
	cgen-snapshot-20091101:1.12
	binutils-2_20:1.12
	gdb_7_0-2009-10-06-release:1.12
	sid-snapshot-20091001:1.12
	cgen-snapshot-20091001:1.12
	gdb_7_0-branch:1.12.0.4
	gdb_7_0-2009-09-16-branchpoint:1.12
	arc-sim-20090309:1.7
	binutils-arc-20081103-branch:1.8.0.20
	binutils-arc-20081103-branchpoint:1.8
	newlib-1_17_0-arc:1.8.0.18
	binutils-2_20-branch:1.12.0.2
	binutils-2_20-branchpoint:1.12
	sid-snapshot-20090901:1.12
	cgen-snapshot-20090901:1.12
	sid-snapshot-20090801:1.11
	cgen-snapshot-20090801:1.11
	msnyder-checkpoint-072509-branch:1.10.0.2
	msnyder-checkpoint-072509-branchpoint:1.10
	sid-snapshot-20090701:1.8
	cgen-snapshot-20090701:1.8
	dje-cgen-play1-branch:1.8.0.16
	dje-cgen-play1-branchpoint:1.8
	cgen-1_1-branch:1.8.0.14
	cgen-1_1-branchpoint:1.8
	sid-snapshot-20090601:1.8
	cgen-snapshot-20090601:1.8
	sid-snapshot-20090501:1.8
	cgen-snapshot-20090501:1.8
	sid-snapshot-20090401:1.8
	cgen-snapshot-20090401:1.8
	binutils-arc-20080908-branch:1.8.0.12
	binutils-arc-20080908-branchpoint:1.8
	arc-20081103-branch:1.8.0.10
	arc-20081103-branchpoint:1.8
	arc-insight_6_8-branch:1.7.0.10
	arc-insight_6_8-branchpoint:1.7
	insight_6_8-branch:1.7.0.8
	insight_6_8-branchpoint:1.7
	sid-snapshot-20090301:1.8
	cgen-snapshot-20090301:1.8
	binutils-2_19_1:1.8
	sid-snapshot-20090201:1.8
	cgen-snapshot-20090201:1.8
	sid-snapshot-20090101:1.8
	cgen-snapshot-20090101:1.8
	reverse-20081226-branch:1.8.0.8
	reverse-20081226-branchpoint:1.8
	newlib-1_17_0:1.8
	sid-snapshot-20081201:1.8
	cgen-snapshot-20081201:1.8
	multiprocess-20081120-branch:1.8.0.6
	multiprocess-20081120-branchpoint:1.8
	sid-snapshot-20081101:1.8
	cgen-snapshot-20081101:1.8
	binutils-2_19:1.8
	sid-snapshot-20081001:1.8
	cgen-snapshot-20081001:1.8
	reverse-20080930-branch:1.8.0.4
	reverse-20080930-branchpoint:1.8
	binutils-2_19-branch:1.8.0.2
	binutils-2_19-branchpoint:1.8
	sid-snapshot-20080901:1.8
	cgen-snapshot-20080901:1.8
	sid-snapshot-20080801:1.8
	cgen-snapshot-20080801:1.8
	reverse-20080717-branch:1.7.0.6
	reverse-20080717-branchpoint:1.7
	sid-snapshot-20080701:1.7
	cgen-snapshot-20080701:1.7
	msnyder-reverse-20080609-branch:1.7.0.4
	msnyder-reverse-20080609-branchpoint:1.7
	drow-reverse-20070409-branch:1.5.0.2
	drow-reverse-20070409-branchpoint:1.5
	sid-snapshot-20080601:1.7
	cgen-snapshot-20080601:1.7
	sid-snapshot-20080501:1.7
	cgen-snapshot-20080501:1.7
	sid-snapshot-20080403:1.7
	sid-snapshot-20080401:1.7
	cgen-snapshot-20080401:1.7
	gdb_6_8-2008-03-27-release:1.7
	sid-snapshot-20080301:1.7
	cgen-snapshot-20080301:1.7
	gdb_6_8-branch:1.7.0.2
	gdb_6_8-2008-02-26-branchpoint:1.7
	sid-snapshot-20080201:1.7
	cgen-snapshot-20080201:1.7
	sid-snapshot-20080101:1.7
	cgen-snapshot-20080101:1.7
	newlib-1_16_0:1.7
	sid-snapshot-20071201:1.7
	cgen-snapshot-20071201:1.7
	sid-snapshot-20071101:1.7
	cgen-snapshot-20071101:1.7
	gdb_6_7_1-2007-10-29-release:1.6
	gdb_6_7-2007-10-10-release:1.6
	sid-snapshot-20071001:1.6
	cgen-snapshot-20071001:1.6
	gdb_6_7-branch:1.6.0.4
	gdb_6_7-2007-09-07-branchpoint:1.6
	binutils-2_18:1.6
	binutils-2_18-branch:1.6.0.2
	binutils-2_18-branchpoint:1.6
	insight_6_6-20070208-release:1.3
	newlib-1_15_0:1.3
	newlib-csl-coldfire-4_1-32:1.1
	binutils-csl-coldfire-4_1-32:1.1
	newlib-csl-sourcerygxx-4_1-32:1.1
	binutils-csl-sourcerygxx-4_1-32:1.1
	gdb_6_6-2006-12-18-release:1.3
	newlib-csl-innovasic-fido-3_4_4-33:1.1
	binutils-csl-innovasic-fido-3_4_4-33:1.1
	newlib-csl-coldfire-4_1-30:1.1
	binutils-csl-coldfire-4_1-30:1.1
	newlib-csl-sourcerygxx-4_1-30:1.1
	binutils-csl-sourcerygxx-4_1-30:1.1
	newlib-csl-coldfire-4_1-28:1.1
	binutils-csl-coldfire-4_1-28:1.1
	binutils-csl-sourcerygxx-4_1-29:1.1
	newlib-csl-sourcerygxx-4_1-28:1.1
	binutils-csl-sourcerygxx-4_1-28:1.1
	gdb_6_6-branch:1.3.0.2
	gdb_6_6-2006-11-15-branchpoint:1.3
	newlib-csl-arm-2006q3-27:1.1
	binutils-csl-arm-2006q3-27:1.1
	newlib-csl-sourcerygxx-4_1-27:1.1
	binutils-csl-sourcerygxx-4_1-27:1.1
	newlib-csl-arm-2006q3-26:1.1
	binutils-csl-arm-2006q3-26:1.1
	newlib-csl-sourcerygxx-4_1-26:1.1
	binutils-csl-sourcerygxx-4_1-26:1.1
	binutils-csl-sourcerygxx-4_1-25:1.1
	newlib-csl-sourcerygxx-4_1-24:1.1
	binutils-csl-sourcerygxx-4_1-24:1.1
	newlib-csl-sourcerygxx-4_1-23:1.1
	binutils-csl-sourcerygxx-4_1-23:1.1
	insight_6_5-20061003-release:1.1
	gdb-csl-symbian-6_4_50_20060226-12:1.1
	newlib-csl-sourcerygxx-4_1-21:1.1
	binutils-csl-sourcerygxx-4_1-21:1.1
	newlib-csl-arm-2006q3-21:1.1
	binutils-csl-arm-2006q3-21:1.1
	binutils-csl-sourcerygxx-4_1-22:1.1
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.1
	binutils-csl-sourcerygxx-4_1-20:1.1
	newlib-csl-arm-2006q3-19:1.1
	binutils-csl-arm-2006q3-19:1.1
	newlib-csl-sourcerygxx-4_1-19:1.1
	binutils-csl-sourcerygxx-4_1-19:1.1
	newlib-csl-sourcerygxx-4_1-18:1.1
	binutils-csl-sourcerygxx-4_1-18:1.1
	binutils-csl-renesas-4_1-9:1.1
	newlib-csl-sourcerygxx-3_4_4-25:1.1
	gdb-csl-sourcerygxx-3_4_4-25:1.1
	nickrob-async-20060828-mergepoint:1.1
	gdb-csl-symbian-6_4_50_20060226-11:1.1
	binutils-csl-renesas-4_1-8:1.1
	binutils-csl-renesas-4_1-7:1.1
	binutils-csl-renesas-4_1-6:1.1
	newlib-csl-sourcerygxx-4_1-17:1.1
	gdb-csl-sourcerygxx-4_1-17:1.1
	binutils-csl-sourcerygxx-4_1-17:1.1
	gdb-csl-20060226-branch-local-2:1.1
	cr-0x5f1:1.1.0.34
	newlib-csl-sourcerygxx-4_1-14:1.1
	gdb-csl-sourcerygxx-4_1-14:1.1
	binutils-csl-sourcerygxx-4_1-14:1.1
	binutils-csl-sourcerygxx-4_1-15:1.1
	newlib-csl-sourcerygxx-4_1-13:1.1
	gdb-csl-sourcerygxx-4_1-13:1.1
	binutils-csl-sourcerygxx-4_1-13:1.1
	binutils-2_17:1.1
	newlib-csl-sourcerygxx-4_1-12:1.1
	gdb-csl-sourcerygxx-4_1-12:1.1
	binutils-csl-sourcerygxx-4_1-12:1.1
	gdb-csl-sourcerygxx-3_4_4-21:1.1
	binutils-csl-sourcerygxx-3_4_4-21:1.1
	gdb_6_5-20060621-release:1.1
	newlib-csl-sourcerygxx-4_1-9:1.1
	gdb-csl-sourcerygxx-4_1-9:1.1
	binutils-csl-sourcerygxx-4_1-9:1.1
	newlib-csl-sourcerygxx-4_1-8:1.1
	gdb-csl-sourcerygxx-4_1-8:1.1
	binutils-csl-sourcerygxx-4_1-8:1.1
	newlib-csl-sourcerygxx-4_1-7:1.1
	gdb-csl-sourcerygxx-4_1-7:1.1
	binutils-csl-sourcerygxx-4_1-7:1.1
	newlib-csl-arm-2006q1-6:1.1
	gdb-csl-arm-2006q1-6:1.1
	binutils-csl-arm-2006q1-6:1.1
	newlib-csl-sourcerygxx-4_1-6:1.1
	gdb-csl-sourcerygxx-4_1-6:1.1
	binutils-csl-sourcerygxx-4_1-6:1.1
	gdb-csl-symbian-6_4_50_20060226-10:1.1
	gdb-csl-symbian-6_4_50_20060226-9:1.1
	gdb-csl-symbian-6_4_50_20060226-8:1.1
	gdb-csl-coldfire-4_1-11:1.1
	binutils-csl-coldfire-4_1-11:1.1
	gdb-csl-sourcerygxx-3_4_4-19:1.1
	binutils-csl-sourcerygxx-3_4_4-19:1.1
	gdb-csl-coldfire-4_1-10:1.1
	gdb_6_5-branch:1.1.0.32
	gdb_6_5-2006-05-14-branchpoint:1.1
	binutils-csl-coldfire-4_1-10:1.1
	newlib-csl-sourcerygxx-4_1-5:1.1
	gdb-csl-sourcerygxx-4_1-5:1.1
	binutils-csl-sourcerygxx-4_1-5:1.1
	nickrob-async-20060513-branch:1.1.0.30
	nickrob-async-20060513-branchpoint:1.1
	newlib-csl-sourcerygxx-4_1-4:1.1
	gdb-csl-sourcerygxx-4_1-4:1.1
	binutils-csl-sourcerygxx-4_1-4:1.1
	msnyder-reverse-20060502-branch:1.1.0.28
	msnyder-reverse-20060502-branchpoint:1.1
	gdb-csl-morpho-4_1-4:1.1
	binutils-csl-morpho-4_1-4:1.1
	gdb-csl-sourcerygxx-3_4_4-17:1.1
	binutils-csl-sourcerygxx-3_4_4-17:1.1
	readline_5_1-import-branch:1.1.0.26
	readline_5_1-import-branchpoint:1.1
	gdb-csl-20060226-branch-merge-to-csl-symbian-1:1.1
	binutils-2_17-branch:1.1.0.24
	binutils-2_17-branchpoint:1.1
	gdb-csl-symbian-20060226-branch:1.1.0.22
	gdb-csl-symbian-20060226-branchpoint:1.1
	gdb-csl-20060226-branch-merge-to-csl-local-1:1.1
	msnyder-reverse-20060331-branch:1.1.0.20
	msnyder-reverse-20060331-branchpoint:1.1
	newlib-autotools-branch:1.1.0.18
	newlib-csl-20060320-branch:1.1.0.16
	newlib-csl-20060320-branchpoint:1.1
	binutils-csl-2_17-branch:1.1.0.14
	binutils-csl-2_17-branchpoint:1.1
	gdb-csl-available-20060303-branch:1.1.0.12
	gdb-csl-available-20060303-branchpoint:1.1
	gdb-csl-20060226-branch:1.1.0.10
	gdb-csl-20060226-branchpoint:1.1
	newlib-1_14_0:1.1
	gdb_6_4-20051202-release:1.1
	msnyder-fork-checkpoint-branch:1.1.0.8
	msnyder-fork-checkpoint-branchpoint:1.1
	gdb-csl-gxxpro-6_3-branch:1.1.0.6
	gdb-csl-gxxpro-6_3-branchpoint:1.1
	gdb_6_4-branch:1.1.0.4
	gdb_6_4-2005-11-01-branchpoint:1.1
	gdb-csl-arm-20051020-branch:1.1.0.2
	gdb-csl-arm-20051020-branchpoint:1.1
	binutils_latest_snapshot:1.13;
locks; strict;
comment	@# @;


1.13
date	2010.06.10.16.01.32;	author bonzini;	state Exp;
branches;
next	1.12;

1.12
date	2009.08.16.12.49.48;	author rwild;	state Exp;
branches;
next	1.11;

1.11
date	2009.07.30.19.43.16;	author rwild;	state Exp;
branches;
next	1.10;

1.10
date	2009.07.17.15.11.33;	author jsm28;	state Exp;
branches;
next	1.9;

1.9
date	2009.07.16.23.21.15;	author jsm28;	state Exp;
branches;
next	1.8;

1.8
date	2008.07.30.15.03.57;	author bonzini;	state Exp;
branches;
next	1.7;

1.7
date	2007.10.16.10.45.50;	author macro;	state Exp;
branches;
next	1.6;

1.6
date	2007.07.11.19.09.22;	author hjl;	state Exp;
branches;
next	1.5;

1.5
date	2007.02.09.19.24.42;	author bonzini;	state Exp;
branches;
next	1.4;

1.4
date	2006.12.19.12.52.58;	author bonzini;	state Exp;
branches;
next	1.3;

1.3
date	2006.11.14.03.32.36;	author drow;	state Exp;
branches;
next	1.2;

1.2
date	2006.10.02.18.03.18;	author tromey;	state Exp;
branches;
next	1.1;

1.1
date	2005.09.23.17.28.31;	author tromey;	state Exp;
branches;
next	;


desc
@@


1.13
log
@sync changelog with gcc, plus commit the following patch:

2010-06-09  Iain Sandoe  <iains@@gcc.gnu.org>

	PR bootstrap/43170
	* tls.m4 (GCC_CHECK_TLS): Add volatile qualifier to the test
	references.  Move the main () test reference ahead of
	pthread_create().  Add a comment to explain the requirements
	of the test.
@
text
@dnl Check whether the target supports TLS.
AC_DEFUN([GCC_CHECK_TLS], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  GCC_ENABLE(tls, yes, [], [Use thread-local storage])
  AC_CACHE_CHECK([whether the target supports thread-local storage],
		 gcc_cv_have_tls, [
    AC_RUN_IFELSE([__thread int a; int b; int main() { return a = b; }],
      [dnl If the test case passed with dynamic linking, try again with
       dnl static linking, but only if static linking is supported (not
       dnl on Solaris 10).  This fails with some older Red Hat releases.
      chktls_save_LDFLAGS="$LDFLAGS"
      LDFLAGS="-static $LDFLAGS"
      AC_LINK_IFELSE([int main() { return 0; }],
	[AC_RUN_IFELSE([__thread int a; int b; int main() { return a = b; }],
		       [gcc_cv_have_tls=yes], [gcc_cv_have_tls=no],[])],
	[gcc_cv_have_tls=yes])
      LDFLAGS="$chktls_save_LDFLAGS"
      if test $gcc_cv_have_tls = yes; then
	dnl So far, the binutils and the compiler support TLS.
	dnl Also check whether the libc supports TLS, i.e. whether a variable
	dnl with __thread linkage has a different address in different threads.
	dnl First, find the thread_CFLAGS necessary for linking a program that
	dnl calls pthread_create.
	chktls_save_CFLAGS="$CFLAGS"
	thread_CFLAGS=failed
	for flag in '' '-pthread' '-lpthread'; do
	  CFLAGS="$flag $chktls_save_CFLAGS"
	  AC_LINK_IFELSE(
	    [AC_LANG_PROGRAM(
	       [#include <pthread.h>
		void *g(void *d) { return NULL; }],
	       [pthread_t t; pthread_create(&t,NULL,g,NULL);])],
	    [thread_CFLAGS="$flag"])
	  if test "X$thread_CFLAGS" != Xfailed; then
	    break
	  fi
	done
	CFLAGS="$chktls_save_CFLAGS"
	if test "X$thread_CFLAGS" != Xfailed; then
	  CFLAGS="$thread_CFLAGS $chktls_save_CFLAGS"
 	  dnl Test for an old glibc bug that violated the __thread property.
	  dnl Use volatile to ensure the compiler won't optimize away pointer
	  dnl accesses it might otherwise assume to be redundant, or reorder 
	  dnl them and reuse storage, which might lead to them pointing to
	  dnl the same location.
	  AC_RUN_IFELSE(
	    [AC_LANG_PROGRAM(
	       [#include <pthread.h>
		__thread int a;
		static int *volatile a_in_other_thread;
		static void *
		thread_func (void *arg)
		{
		  a_in_other_thread = &a;
		  return (void *)0;
		}],
	       [pthread_t thread;
		void *thread_retval;
		int *volatile a_in_main_thread;
		a_in_main_thread = &a;
		if (pthread_create (&thread, (pthread_attr_t *)0,
				    thread_func, (void *)0))
		  return 0;
		if (pthread_join (thread, &thread_retval))
		  return 0;
		return (a_in_other_thread == a_in_main_thread);])],
	     [gcc_cv_have_tls=yes], [gcc_cv_have_tls=no], [])
	  CFLAGS="$chktls_save_CFLAGS"
	fi
      fi],
      [gcc_cv_have_tls=no],
      [dnl This is the cross-compiling case. Assume libc supports TLS if the
       dnl binutils and the compiler do.
       AC_LINK_IFELSE([__thread int a; int b; int main() { return a = b; }],
	 [chktls_save_LDFLAGS="$LDFLAGS"
	  dnl Shared library options may depend on the host; this check
	  dnl is only known to be needed for GNU/Linux.
	  case $host in
	    *-*-linux*)
	      LDFLAGS="-shared -Wl,--no-undefined $LDFLAGS"
	      ;;
	  esac
	  chktls_save_CFLAGS="$CFLAGS"
	  CFLAGS="-fPIC $CFLAGS"
	  dnl If -shared works, test if TLS works in a shared library.
	  AC_LINK_IFELSE([int f() { return 0; }],
	    [AC_LINK_IFELSE([__thread int a; int b; int f() { return a = b; }],
	      [gcc_cv_have_tls=yes],
	      [gcc_cv_have_tls=no])],
	    [gcc_cv_have_tls=yes])
	  CFLAGS="$chktls_save_CFLAGS"
	  LDFLAGS="$chktls_save_LDFLAGS"], [gcc_cv_have_tls=no])
      ]
    )])
  if test "$enable_tls $gcc_cv_have_tls" = "yes yes"; then
    AC_DEFINE(HAVE_TLS, 1,
	      [Define to 1 if the target supports thread-local storage.])
  fi])

dnl Check whether the target assembler supports TLS.
AC_DEFUN([GCC_CHECK_CC_TLS], [
  GCC_ENABLE(tls, yes, [], [Use thread-local storage])
  AC_CACHE_CHECK([whether the target assembler supports thread-local storage],
		 gcc_cv_have_cc_tls, [
    AC_COMPILE_IFELSE([__thread int a; int b; int main() { return a = b; }],
      [gcc_cv_have_cc_tls=yes], [gcc_cv_have_cc_tls=no])]
    )])
  if test "$enable_tls $gcc_cv_have_cc_tls" = "yes yes"; then
    AC_DEFINE(HAVE_CC_TLS, 1,
	      [Define to 1 if the target assembler supports thread-local storage.])
  fi])

dnl Check whether TLS is emulated.
AC_DEFUN([GCC_CHECK_EMUTLS], [
  AC_CACHE_CHECK([whether the thread-local storage support is from emutls],
  		 gcc_cv_use_emutls, [
    gcc_cv_use_emutls=no
    echo '__thread int a; int b; int main() { return a = b; }' > conftest.c
    if AC_TRY_COMMAND(${CC-cc} -Werror -S -o conftest.s conftest.c 1>&AS_MESSAGE_LOG_FD); then
      if grep __emutls_get_address conftest.s > /dev/null; then
	gcc_cv_use_emutls=yes
      fi
    fi
    rm -f conftest.*
    ])
  if test "$gcc_cv_use_emutls" = "yes" ; then
    AC_DEFINE(USE_EMUTLS, 1,
      	      [Define to 1 if the target use emutls for thread-local storage.])
  fi])
@


1.12
log
@Sync config/ from GCC:

--- config/ChangeLog
+++ config/ChangeLog
@@@@ -19,6 +19,10 @@@@
 	* tls.m4 (GCC_CHECK_TLS): Also test TLS in a shared library when
 	cross-compiling.

+2009-06-25  Olivier Hainque  <hainque@@adacore.com>
+
+	* config/mh-ppc-aix (BOOT_ADAFLAGS): Remove -mminimal-toc.
+
 2009-05-26  Rafael Avila de Espindola  <espindola@@google.com>

 	* plugins.m4: New.
@@@@ -39,6 +43,27 @@@@
 	"# no Tcl configs found".
 	(SC_LOAD_TKCONFIG): Similarily for TK_BIN_DIR.

+2009-04-09  Jakub Jelinek  <jakub@@redhat.com>
+
+	* lead-dot.m4: Change copyright header to refer to version
+	3 of the GNU General Public License and to point readers at the
+	COPYING3 file and the FSF's license web page.
+	* warnings.m4: Likewise.
+
+2009-02-11  Kai Tietz  <kai.tietz@@onevision.com>
+
+	* mh-cygwin (LDFLAGS): Add linker option to increase stack limit
+	up to 8MB.
+
+2009-01-23  Jie Zhang  <jie.zhang@@analog.com>
+
+	* tls.m4 (GCC_CHECK_EMUTLS): Define.
+
+2008-12-21  Andrew Pinski  <pinskia@@gmail.com>
+
+	PR target/38300
+	* unwind_ipinfo.m4: Darwin before 9 does not have _Unwind_GetIPInfo.
+
 2008-11-21  Kai Tietz  <kai.tietz@@onevision.com>

 	Fix PR/25502
@
text
@d41 5
d50 1
a50 1
		static int *a_in_other_thread;
d59 2
a60 1
		int *a_in_main_thread;
a63 1
		a_in_main_thread = &a;
@


1.11
log
@config/
	* extensions.m4 (AC_USE_SYSTEM_EXTENSIONS): Do not expand
	for Autoconf 2.62 or newer.
	* tls.m4 (GCC_CHECK_TLS): Fix m4 quotation.
	* no-executables.m4 (_AC_COMPILER_EXEEXT): Fix m4 quotation.
	* override.m4 (m4_copy_force, m4_rename_force): Provide
	macros if not defined.
	(AC_PREREQ): Use m4_copy_force.

readline/examples/rlfe/
	* configure.in: Correctly quote AC_PROGRAM_SOURCE definition.
@
text
@d107 18
@


1.10
log
@	PR other/40784
	* tls.m4 (GCC_CHECK_TLS): Add extra quoting around argument to
	AC_LINK_IFELSE.
@
text
@d14 2
a15 2
	AC_RUN_IFELSE([__thread int a; int b; int main() { return a = b; }],
		      [gcc_cv_have_tls=yes], [gcc_cv_have_tls=no],[]),
@


1.9
log
@	* tls.m4 (GCC_CHECK_TLS): Also test TLS in a shared library when
	cross-compiling.
@
text
@d82 1
a82 1
	    AC_LINK_IFELSE([__thread int a; int b; int f() { return a = b; }],
d84 1
a84 1
	      [gcc_cv_have_tls=no]),
@


1.8
log
@2008-07-30 Paolo Bonzini  <bonzini@@gnu.org>

	Sync with gcc:
	2008-07-30 Paolo Bonzini  <bonzini@@gnu.org>

        * configure.ac: Add makefile fragments for hpux.
        * Makefile.def (flags_to_pass): Add ADA_CFLAGS.
        * Makefile.tpl (HOST_EXPORTS): Pass ADA_CFLAGS.
        * configure: Regenerate.
        * Makefile.in: Regenerate.

	2008-06-17  Ralf Wildenhues  <Ralf.Wildenhues@@gmx.de>

        * Makefile.tpl ($(srcdir)/configure): Update dependencies.
        * Makefile.in: Regenerate.
        * configure: Regenerate.

config:
2008-07-30  Paolo Bonzini  <bonzini@@gnu.org>

	* mh-pa: New, from gcc/config/pa/x-ada.
	* mh-pa-hpux10: New, from gcc/config/pa/x-ada-hpux10.

2008-06-11  Bernhard Fischer  <aldot@@gcc.gnu.org>

        * tls.m4: Fix typos.
@
text
@d3 1
d70 18
a87 1
		      [gcc_cv_have_tls=yes], [gcc_cv_have_tls=no])
@


1.7
log
@* tls.m4 (GCC_CHECK_TLS): Rename have_tls to gcc_cv_have_tls.
(GCC_CHECK_CC_TLS): Rename have_cc_tls to gcc_cv_have_cc_tls.
@
text
@d80 1
a80 1
  AC_CACHE_CHECK([whether the target asssembler upports thread-local storage],
@


1.6
log
@2007-07-06  H.J. Lu  <hongjiu.lu@@intel.com>

	* tls.m4 (GCC_CHECK_CC_TLS): New.

2007-07-05  Sebastian Pop  <sebpop@@gmail.com>

	PR bootstrap/32622
	* mh-x86omitfp (BOOT_CFLAGS): Add -fomit-frame-pointer,
	don't reset its value.
@
text
@d5 1
a5 1
		 have_tls, [
d14 2
a15 2
		      [have_tls=yes], [have_tls=no],[]),
	[have_tls=yes])
d17 1
a17 1
      if test $have_tls = yes; then
d61 1
a61 1
	     [have_tls=yes], [have_tls=no], [])
d65 1
a65 1
      [have_tls=no],
d69 1
a69 1
		      [have_tls=yes], [have_tls=no])
d72 1
a72 1
  if test "$enable_tls $have_tls" = "yes yes"; then
d81 1
a81 1
		 have_cc_tls, [
d83 1
a83 1
      [have_cc_tls=yes], [have_cc_tls=no])]
d85 1
a85 1
  if test "$enable_tls $have_cc_tls" = "yes yes"; then
@


1.5
log
@2007-02-09  Paolo Bonzini  <bonzini@@gnu.org>

	* Makefile.def: Sync with GCC.
	* Makefile.tpl: Sync with GCC.
	* Makefile.in: Regenerate.
	* configure: Regenerate.

	* config/acx.m4: Sync with GCC.
	* config/depstand.m4: Sync with GCC.
	* config/tls.m4: Sync with GCC.
@
text
@d76 13
@


1.4
log
@2006-12-19  Paolo Bonzini  <bonzini@@gnu.org>

	Sync with gcc:

	2006-12-19  Paolo Bonzini  <bonzini@@gnu.org>

	* configure.in: Remove "$build" case for powerpc-*-darwin* since
	it only affects bootstrap and could be tested on "$host" as well.
	* configure: Regenerate.
	* config/mh-ppc-darwin: Add to the stage1 cflags here.

	2006-12-19  Paolo Bonzini  <bonzini@@gnu.org>

	PR bootstrap/29544
	* Makefile.def (flags_to_pass): Add STAGE1_CHECKING.
	(bootstrap_stage): Add STAGE1_CHECKING to stage1 configure flags,
	move here comment from Makefile.tpl.
	* Makefile.tpl: Move some definitions higher in the file.
	(STAGE1_CHECKING): New.
	* configure.in: Add --enable-stage1-checking.
	* configure: Regenerate.
	* Makefile.in: Regenerate.

	2006-12-03  Kaveh R. Ghazi  <ghazi@@caip.rutgers.edu>

	* configure.in: Update error message for missing GMP/MPFR.

	* configure: Regenerate.

	2006-12-02  Kaveh R. Ghazi  <ghazi@@caip.rutgers.edu>

	* configure.in: Update MPFR version in error message.

	* configure: Regenerate.

	2006-11-26  Kaveh R. Ghazi  <ghazi@@caip.rutgers.edu>

	* configure.in (--with-mpfr-dir, --with-gmp-dir): Remove flags.
	(--with-mpfr-include, --with-mpfr-lib, --with-gmp-include,
	--with-gmp-lib): New flags.

	* configure: Regenerate.

config:
2006-12-04  Eric Botcazou  <ebotcazou@@libertysurf.fr>

	* tls.m4 (GCC_CHECK_TLS): Do not test TLS with static linking
	if static linking doesn't even work.
@
text
@d10 1
a10 1
      save_LDFLAGS="$LDFLAGS"
d16 49
a64 1
      LDFLAGS="$save_LDFLAGS"],
d66 5
a70 2
      [AC_LINK_IFELSE([__thread int a; int b; int main() { return a = b; }],
	[have_tls=yes], [have_tls=no])]
@


1.3
log
@	* tls.m4 (GCC_CHECK_TLS): Fall back to a link test.
@
text
@d8 2
a9 2
      dnl static linking.  This fails at least with some older Red Hat
      dnl releases.
d12 4
a15 2
      AC_RUN_IFELSE([__thread int a; int b; int main() { return a = b; }],
		    [have_tls=yes], [have_tls=no], [])
@


1.2
log
@	* tls.m4 (GCC_CHECK_TLS): Pass empty argument as "help arg" to
	GCC_ENABLE.
@
text
@d16 2
a17 1
      [AC_COMPILE_IFELSE([__thread int foo;], [have_tls=yes], [have_tls=no])]
@


1.1
log
@	* enable.m4: New file.
	* tls.m4: New file.
@
text
@d3 1
a3 1
  GCC_ENABLE(tls, yes, [Use thread-local storage])
@

