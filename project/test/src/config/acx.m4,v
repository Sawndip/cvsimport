head	1.31;
access;
symbols
	sid-snapshot-20180601:1.31
	cgen-snapshot-20180601:1.31
	sid-snapshot-20180501:1.31
	cgen-snapshot-20180501:1.31
	sid-snapshot-20180401:1.31
	cgen-snapshot-20180401:1.31
	sid-snapshot-20180301:1.31
	cgen-snapshot-20180301:1.31
	sid-snapshot-20180201:1.31
	cgen-snapshot-20180201:1.31
	sid-snapshot-20180101:1.31
	cgen-snapshot-20180101:1.31
	sid-snapshot-20171201:1.31
	cgen-snapshot-20171201:1.31
	sid-snapshot-20171101:1.31
	cgen-snapshot-20171101:1.31
	sid-snapshot-20171001:1.31
	cgen-snapshot-20171001:1.31
	sid-snapshot-20170901:1.31
	cgen-snapshot-20170901:1.31
	sid-snapshot-20170801:1.31
	cgen-snapshot-20170801:1.31
	sid-snapshot-20170701:1.31
	cgen-snapshot-20170701:1.31
	sid-snapshot-20170601:1.31
	cgen-snapshot-20170601:1.31
	sid-snapshot-20170501:1.31
	cgen-snapshot-20170501:1.31
	sid-snapshot-20170401:1.31
	cgen-snapshot-20170401:1.31
	sid-snapshot-20170301:1.31
	cgen-snapshot-20170301:1.31
	sid-snapshot-20170201:1.31
	cgen-snapshot-20170201:1.31
	sid-snapshot-20170101:1.31
	cgen-snapshot-20170101:1.31
	sid-snapshot-20161201:1.31
	cgen-snapshot-20161201:1.31
	sid-snapshot-20161101:1.31
	cgen-snapshot-20161101:1.31
	sid-snapshot-20160901:1.31
	cgen-snapshot-20160901:1.31
	sid-snapshot-20160801:1.31
	cgen-snapshot-20160801:1.31
	sid-snapshot-20160701:1.31
	cgen-snapshot-20160701:1.31
	sid-snapshot-20160601:1.31
	cgen-snapshot-20160601:1.31
	sid-snapshot-20160501:1.31
	cgen-snapshot-20160501:1.31
	sid-snapshot-20160401:1.31
	cgen-snapshot-20160401:1.31
	sid-snapshot-20160301:1.31
	cgen-snapshot-20160301:1.31
	sid-snapshot-20160201:1.31
	cgen-snapshot-20160201:1.31
	sid-snapshot-20160101:1.31
	cgen-snapshot-20160101:1.31
	sid-snapshot-20151201:1.31
	cgen-snapshot-20151201:1.31
	sid-snapshot-20151101:1.31
	cgen-snapshot-20151101:1.31
	sid-snapshot-20151001:1.31
	cgen-snapshot-20151001:1.31
	sid-snapshot-20150901:1.31
	cgen-snapshot-20150901:1.31
	sid-snapshot-20150801:1.31
	cgen-snapshot-20150801:1.31
	sid-snapshot-20150701:1.31
	cgen-snapshot-20150701:1.31
	sid-snapshot-20150601:1.31
	cgen-snapshot-20150601:1.31
	sid-snapshot-20150501:1.31
	cgen-snapshot-20150501:1.31
	sid-snapshot-20150401:1.31
	cgen-snapshot-20150401:1.31
	cygwin-1_7_35-release:1.31
	sid-snapshot-20150301:1.31
	cgen-snapshot-20150301:1.31
	cygwin-1_7_34-release:1.31
	sid-snapshot-20150201:1.31
	cgen-snapshot-20150201:1.31
	sid-snapshot-20150101:1.31
	cgen-snapshot-20150101:1.31
	newlib-2_2_0:1.31.0.14
	sid-snapshot-20141201:1.31
	cgen-snapshot-20141201:1.31
	cygwin-1_7_33-release:1.31
	sid-snapshot-20141101:1.31
	cgen-snapshot-20141101:1.31
	sid-snapshot-20141001:1.31
	cgen-snapshot-20141001:1.31
	sid-snapshot-20140901:1.31
	cgen-snapshot-20140901:1.31
	cygwin-1_7_32-release:1.31
	sid-snapshot-20140801:1.31
	cgen-snapshot-20140801:1.31
	cygwin-1_7_31-release:1.31
	sid-snapshot-20140701:1.31
	cgen-snapshot-20140701:1.31
	sid-snapshot-20140601:1.31
	cgen-snapshot-20140601:1.31
	cygwin-1_7_30-release:1.31
	sid-snapshot-20140501:1.31
	cgen-snapshot-20140501:1.31
	cygwin-1_7_29-release:1.31
	sid-snapshot-20140401:1.31
	cgen-snapshot-20140401:1.31
	sid-snapshot-20140301:1.31
	cgen-snapshot-20140301:1.31
	cygwin-1_7_28-release:1.31
	sid-snapshot-20140201:1.31
	cgen-snapshot-20140201:1.31
	sid-snapshot-20140101:1.31
	cgen-snapshot-20140101:1.31
	newlib-2_1_0:1.31
	sid-snapshot-20131201:1.31
	cgen-snapshot-20131201:1.31
	cygwin-1_7_27-release:1.31
	cygwin-1_7_26-release:1.31
	sid-snapshot-20131101:1.31
	cgen-snapshot-20131101:1.31
	sid-snapshot-20131001:1.31
	cgen-snapshot-20131001:1.31
	binutils-2_24-branch:1.31.0.12
	binutils-2_24-branchpoint:1.31
	binutils-2_21_1:1.30
	sid-snapshot-20130901:1.31
	cgen-snapshot-20130901:1.31
	cygwin-1_7_25-release:1.31
	gdb_7_6_1-2013-08-30-release:1.31
	cygwin-1_7_24-release:1.31
	cygwin-1_7_23-release:1.31
	sid-snapshot-20130801:1.31
	cgen-snapshot-20130801:1.31
	cygwin-1_7_22-release:1.31
	cygwin-1_7_21-release:1.31
	sid-snapshot-20130701:1.31
	cgen-snapshot-20130701:1.31
	cygwin-1_7_20-release:1.31
	cygwin-1_7_19-release:1.31
	sid-snapshot-20130601:1.31
	cgen-snapshot-20130601:1.31
	sid-snapshot-20130501:1.31
	cgen-snapshot-20130501:1.31
	gdb_7_6-2013-04-26-release:1.31
	cygwin-64bit-postmerge:1.31
	cygwin-64bit-premerge-branch:1.31.0.10
	cygwin-64bit-premerge:1.31
	sid-snapshot-20130401:1.31
	cgen-snapshot-20130401:1.31
	binutils-2_23_2:1.31
	gdb_7_6-branch:1.31.0.8
	gdb_7_6-2013-03-12-branchpoint:1.31
	cygwin-1_7_18-release:1.31
	sid-snapshot-20130301:1.31
	cgen-snapshot-20130301:1.31
	sid-snapshot-20130201:1.31
	cgen-snapshot-20130201:1.31
	sid-snapshot-20130101:1.31
	cgen-snapshot-20130101:1.31
	newlib-2_0_0:1.31
	sid-snapshot-20121201:1.31
	cgen-snapshot-20121201:1.31
	gdb_7_5_1-2012-11-29-release:1.31
	binutils-2_23_1:1.31
	sid-snapshot-20121101:1.31
	cgen-snapshot-20121101:1.31
	binutils-2_23:1.31
	cygwin-1_7_17-release:1.31
	sid-snapshot-20121001:1.31
	cgen-snapshot-20121001:1.31
	sid-snapshot-20120901:1.31
	cgen-snapshot-20120901:1.31
	gdb_7_5-2012-08-17-release:1.31
	cygwin-64bit-branch:1.31.0.6
	sid-snapshot-20120801:1.31
	cgen-snapshot-20120801:1.31
	binutils-2_23-branch:1.31.0.4
	binutils-2_23-branchpoint:1.31
	cygwin-1_7_16-release:1.31
	gdb_7_5-branch:1.31.0.2
	gdb_7_5-2012-07-18-branchpoint:1.31
	sid-snapshot-20120701:1.31
	cgen-snapshot-20120701:1.31
	sid-snapshot-20120601:1.31
	cgen-snapshot-20120601:1.31
	cygwin-1_7_15-release:1.31
	sid-snapshot-20120501:1.31
	cgen-snapshot-20120501:1.31
	binutils-2_22_branch:1.30.0.14
	gdb_7_4_1-2012-04-26-release:1.30
	cygwin-1_7_14_2-release:1.31
	cygwin-1_7_14-release:1.31
	cygwin-1_7_12-release:1.31
	sid-snapshot-20120401:1.31
	cgen-snapshot-20120401:1.31
	sid-snapshot-20120301:1.31
	cgen-snapshot-20120301:1.31
	cygwin-1_7_11-release:1.31
	cygwin-1_7_10-release:1.31
	sid-snapshot-20120201:1.31
	cgen-snapshot-20120201:1.31
	gdb_7_4-2012-01-24-release:1.30
	sid-snapshot-20120101:1.31
	cgen-snapshot-20120101:1.31
	newlib-1_20_0:1.31
	gdb_7_4-branch:1.30.0.12
	gdb_7_4-2011-12-13-branchpoint:1.30
	sid-snapshot-20111201:1.30
	cgen-snapshot-20111201:1.30
	binutils-2_22:1.30
	sid-snapshot-20111101:1.30
	cgen-snapshot-20111101:1.30
	sid-snapshot-20111001:1.30
	cgen-snapshot-20111001:1.30
	binutils-2_22-branch:1.30.0.10
	binutils-2_22-branchpoint:1.30
	gdb_7_3_1-2011-09-04-release:1.30
	sid-snapshot-20110901:1.30
	cgen-snapshot-20110901:1.30
	sid-snapshot-20110801:1.30
	cgen-snapshot-20110801:1.30
	gdb_7_3-2011-07-26-release:1.30
	sid-snapshot-20110701:1.30
	cgen-snapshot-20110701:1.30
	sid-snapshot-20110601:1.30
	cgen-snapshot-20110601:1.30
	sid-snapshot-20110501:1.30
	cgen-snapshot-20110501:1.30
	gdb_7_3-branch:1.30.0.8
	gdb_7_3-2011-04-01-branchpoint:1.30
	sid-snapshot-20110401:1.30
	cgen-snapshot-20110401:1.30
	cygwin-1_7_9-release:1.30
	sid-snapshot-20110301:1.30
	cgen-snapshot-20110301:1.30
	cygwin-1_7_8-release:1.30
	sid-snapshot-20110201:1.30
	cgen-snapshot-20110201:1.30
	sid-snapshot-20110101:1.30
	cgen-snapshot-20110101:1.30
	newlib-1_19_0:1.30
	binutils-2_21:1.30
	sid-snapshot-20101201:1.30
	cgen-snapshot-20101201:1.30
	binutils-2_21-branch:1.30.0.6
	binutils-2_21-branchpoint:1.30
	sid-snapshot-20101101:1.30
	cgen-snapshot-20101101:1.30
	sid-snapshot-20101001:1.30
	cgen-snapshot-20101001:1.30
	binutils-2_20_1:1.29
	gdb_7_2-2010-09-02-release:1.30
	sid-snapshot-20100901:1.30
	cgen-snapshot-20100901:1.30
	cygwin-1_7_7-release:1.30
	sid-snapshot-20100801:1.30
	cgen-snapshot-20100801:1.30
	gdb_7_2-branch:1.30.0.4
	gdb_7_2-2010-07-07-branchpoint:1.30
	sid-snapshot-20100701:1.30
	cgen-snapshot-20100701:1.30
	sid-snapshot-20100601:1.30
	cgen-snapshot-20100601:1.30
	sid-snapshot-20100501:1.30
	cgen-snapshot-20100501:1.30
	cygwin-1_7_5-release:1.30
	cygwin-1_7_4-release:1.30
	sid-snapshot-20100401:1.30
	cgen-snapshot-20100401:1.30
	cygwin-1_7_3-release:1.30
	cygwin-1_7_2-release:1.30
	gdb_7_1-2010-03-18-release:1.30
	sid-snapshot-20100301:1.30
	cgen-snapshot-20100301:1.30
	gdb_7_1-branch:1.30.0.2
	gdb_7_1-2010-02-18-branchpoint:1.30
	sid-snapshot-20100201:1.30
	cgen-snapshot-20100201:1.30
	sid-snapshot-20100101:1.30
	cgen-snapshot-20100101:1.30
	gdb_7_0_1-2009-12-22-release:1.29
	newlib-1_18_0:1.30
	cygwin-1_7_1-release:1.30
	sid-snapshot-20091201:1.30
	cgen-snapshot-20091201:1.30
	sid-snapshot-20091101:1.29
	cgen-snapshot-20091101:1.29
	binutils-2_20:1.29
	gdb_7_0-2009-10-06-release:1.29
	sid-snapshot-20091001:1.29
	cgen-snapshot-20091001:1.29
	gdb_7_0-branch:1.29.0.30
	gdb_7_0-2009-09-16-branchpoint:1.29
	arc-sim-20090309:1.27
	binutils-arc-20081103-branch:1.29.0.28
	binutils-arc-20081103-branchpoint:1.29
	newlib-1_17_0-arc:1.29.0.26
	binutils-2_20-branch:1.29.0.24
	binutils-2_20-branchpoint:1.29
	sid-snapshot-20090901:1.29
	cgen-snapshot-20090901:1.29
	sid-snapshot-20090801:1.29
	cgen-snapshot-20090801:1.29
	msnyder-checkpoint-072509-branch:1.29.0.22
	msnyder-checkpoint-072509-branchpoint:1.29
	sid-snapshot-20090701:1.29
	cgen-snapshot-20090701:1.29
	dje-cgen-play1-branch:1.29.0.20
	dje-cgen-play1-branchpoint:1.29
	cgen-1_1-branch:1.29.0.18
	cgen-1_1-branchpoint:1.29
	sid-snapshot-20090601:1.29
	cgen-snapshot-20090601:1.29
	sid-snapshot-20090501:1.29
	cgen-snapshot-20090501:1.29
	sid-snapshot-20090401:1.29
	cgen-snapshot-20090401:1.29
	binutils-arc-20080908-branch:1.29.0.16
	binutils-arc-20080908-branchpoint:1.29
	arc-20081103-branch:1.29.0.14
	arc-20081103-branchpoint:1.29
	arc-insight_6_8-branch:1.27.0.10
	arc-insight_6_8-branchpoint:1.27
	insight_6_8-branch:1.27.0.8
	insight_6_8-branchpoint:1.27
	sid-snapshot-20090301:1.29
	cgen-snapshot-20090301:1.29
	binutils-2_19_1:1.29
	sid-snapshot-20090201:1.29
	cgen-snapshot-20090201:1.29
	sid-snapshot-20090101:1.29
	cgen-snapshot-20090101:1.29
	reverse-20081226-branch:1.29.0.12
	reverse-20081226-branchpoint:1.29
	newlib-1_17_0:1.29
	sid-snapshot-20081201:1.29
	cgen-snapshot-20081201:1.29
	multiprocess-20081120-branch:1.29.0.10
	multiprocess-20081120-branchpoint:1.29
	sid-snapshot-20081101:1.29
	cgen-snapshot-20081101:1.29
	binutils-2_19:1.29
	sid-snapshot-20081001:1.29
	cgen-snapshot-20081001:1.29
	reverse-20080930-branch:1.29.0.8
	reverse-20080930-branchpoint:1.29
	binutils-2_19-branch:1.29.0.6
	binutils-2_19-branchpoint:1.29
	sid-snapshot-20080901:1.29
	cgen-snapshot-20080901:1.29
	sid-snapshot-20080801:1.29
	cgen-snapshot-20080801:1.29
	reverse-20080717-branch:1.29.0.4
	reverse-20080717-branchpoint:1.29
	sid-snapshot-20080701:1.29
	cgen-snapshot-20080701:1.29
	msnyder-reverse-20080609-branch:1.29.0.2
	msnyder-reverse-20080609-branchpoint:1.29
	drow-reverse-20070409-branch:1.25.0.2
	drow-reverse-20070409-branchpoint:1.25
	sid-snapshot-20080601:1.29
	cgen-snapshot-20080601:1.29
	sid-snapshot-20080501:1.28
	cgen-snapshot-20080501:1.28
	sid-snapshot-20080403:1.27
	sid-snapshot-20080401:1.27
	cgen-snapshot-20080401:1.27
	gdb_6_8-2008-03-27-release:1.27
	sid-snapshot-20080301:1.27
	cgen-snapshot-20080301:1.27
	gdb_6_8-branch:1.27.0.6
	gdb_6_8-2008-02-26-branchpoint:1.27
	sid-snapshot-20080201:1.27
	cgen-snapshot-20080201:1.27
	sid-snapshot-20080101:1.27
	cgen-snapshot-20080101:1.27
	newlib-1_16_0:1.27
	sid-snapshot-20071201:1.27
	cgen-snapshot-20071201:1.27
	sid-snapshot-20071101:1.27
	cgen-snapshot-20071101:1.27
	gdb_6_7_1-2007-10-29-release:1.27
	gdb_6_7-2007-10-10-release:1.27
	sid-snapshot-20071001:1.27
	cgen-snapshot-20071001:1.27
	gdb_6_7-branch:1.27.0.4
	gdb_6_7-2007-09-07-branchpoint:1.27
	binutils-2_18:1.27
	binutils-2_18-branch:1.27.0.2
	binutils-2_18-branchpoint:1.27
	insight_6_6-20070208-release:1.17
	newlib-1_15_0:1.17
	newlib-csl-coldfire-4_1-32:1.16
	binutils-csl-coldfire-4_1-32:1.16
	newlib-csl-sourcerygxx-4_1-32:1.16
	binutils-csl-sourcerygxx-4_1-32:1.16
	gdb_6_6-2006-12-18-release:1.17
	newlib-csl-innovasic-fido-3_4_4-33:1.16
	binutils-csl-innovasic-fido-3_4_4-33:1.16
	binutils-csl-sourcerygxx-3_4_4-32:1.11
	newlib-csl-coldfire-4_1-30:1.16
	binutils-csl-coldfire-4_1-30:1.16
	newlib-csl-sourcerygxx-4_1-30:1.16
	binutils-csl-sourcerygxx-4_1-30:1.16
	newlib-csl-coldfire-4_1-28:1.16
	binutils-csl-coldfire-4_1-28:1.16
	binutils-csl-sourcerygxx-4_1-29:1.16
	newlib-csl-sourcerygxx-4_1-28:1.16
	binutils-csl-sourcerygxx-4_1-28:1.16
	gdb_6_6-branch:1.17.0.4
	gdb_6_6-2006-11-15-branchpoint:1.17
	newlib-csl-arm-2006q3-27:1.16
	binutils-csl-arm-2006q3-27:1.16
	newlib-csl-sourcerygxx-4_1-27:1.16
	binutils-csl-sourcerygxx-4_1-27:1.16
	newlib-csl-arm-2006q3-26:1.16
	binutils-csl-arm-2006q3-26:1.16
	newlib-csl-sourcerygxx-4_1-26:1.16
	binutils-csl-sourcerygxx-4_1-26:1.16
	binutils-csl-sourcerygxx-4_1-25:1.16
	newlib-csl-sourcerygxx-4_1-24:1.16
	binutils-csl-sourcerygxx-4_1-24:1.16
	newlib-csl-sourcerygxx-4_1-23:1.16
	binutils-csl-sourcerygxx-4_1-23:1.16
	insight_6_5-20061003-release:1.16
	gdb-csl-symbian-6_4_50_20060226-12:1.16
	newlib-csl-sourcerygxx-4_1-21:1.16
	binutils-csl-sourcerygxx-4_1-21:1.16
	newlib-csl-arm-2006q3-21:1.16
	binutils-csl-arm-2006q3-21:1.16
	binutils-csl-sourcerygxx-4_1-22:1.16
	binutils-csl-palmsource-arm-prelinker-1_0-1:1.16
	binutils-csl-sourcerygxx-4_1-20:1.16
	newlib-csl-arm-2006q3-19:1.16
	binutils-csl-arm-2006q3-19:1.16
	newlib-csl-sourcerygxx-4_1-19:1.16
	binutils-csl-sourcerygxx-4_1-19:1.16
	newlib-csl-sourcerygxx-4_1-18:1.16
	binutils-csl-sourcerygxx-4_1-18:1.16
	binutils-csl-renesas-4_1-9:1.16
	newlib-csl-sourcerygxx-3_4_4-25:1.17
	gdb-csl-sourcerygxx-3_4_4-25:1.13
	binutils-csl-sourcerygxx-3_4_4-25:1.11
	nickrob-async-20060828-mergepoint:1.17
	gdb-csl-symbian-6_4_50_20060226-11:1.16
	binutils-csl-renesas-4_1-8:1.16
	binutils-csl-renesas-4_1-7:1.16
	binutils-csl-renesas-4_1-6:1.16
	newlib-csl-sourcerygxx-4_1-17:1.16
	gdb-csl-sourcerygxx-4_1-17:1.16
	binutils-csl-sourcerygxx-4_1-17:1.16
	gdb-csl-20060226-branch-local-2:1.16
	cr-0x5f1:1.17.0.2
	newlib-csl-sourcerygxx-4_1-14:1.16
	gdb-csl-sourcerygxx-4_1-14:1.16
	binutils-csl-sourcerygxx-4_1-14:1.16
	binutils-csl-sourcerygxx-4_1-15:1.16
	newlib-csl-sourcerygxx-4_1-13:1.16
	gdb-csl-sourcerygxx-4_1-13:1.16
	binutils-csl-sourcerygxx-4_1-13:1.16
	binutils-2_17:1.16
	newlib-csl-sourcerygxx-4_1-12:1.16
	gdb-csl-sourcerygxx-4_1-12:1.16
	binutils-csl-sourcerygxx-4_1-12:1.16
	gdb-csl-sourcerygxx-3_4_4-21:1.16
	binutils-csl-sourcerygxx-3_4_4-21:1.16
	gdb_6_5-20060621-release:1.16
	binutils-csl-wrs-linux-3_4_4-24:1.11
	binutils-csl-wrs-linux-3_4_4-23:1.11
	newlib-csl-sourcerygxx-4_1-9:1.16
	gdb-csl-sourcerygxx-4_1-9:1.16
	binutils-csl-sourcerygxx-4_1-9:1.16
	newlib-csl-sourcerygxx-4_1-8:1.16
	gdb-csl-sourcerygxx-4_1-8:1.16
	binutils-csl-sourcerygxx-4_1-8:1.16
	newlib-csl-sourcerygxx-4_1-7:1.16
	gdb-csl-sourcerygxx-4_1-7:1.16
	binutils-csl-sourcerygxx-4_1-7:1.16
	newlib-csl-arm-2006q1-6:1.16
	gdb-csl-arm-2006q1-6:1.16
	binutils-csl-arm-2006q1-6:1.16
	newlib-csl-sourcerygxx-4_1-6:1.16
	gdb-csl-sourcerygxx-4_1-6:1.16
	binutils-csl-sourcerygxx-4_1-6:1.16
	binutils-csl-wrs-linux-3_4_4-22:1.11
	gdb-csl-symbian-6_4_50_20060226-10:1.16
	gdb-csl-symbian-6_4_50_20060226-9:1.16
	gdb-csl-symbian-6_4_50_20060226-8:1.16
	gdb-csl-coldfire-4_1-11:1.16
	binutils-csl-coldfire-4_1-11:1.16
	gdb-csl-sourcerygxx-3_4_4-19:1.16
	binutils-csl-sourcerygxx-3_4_4-19:1.16
	gdb-csl-coldfire-4_1-10:1.16
	gdb_6_5-branch:1.16.0.24
	gdb_6_5-2006-05-14-branchpoint:1.16
	binutils-csl-coldfire-4_1-10:1.16
	newlib-csl-sourcerygxx-4_1-5:1.16
	gdb-csl-sourcerygxx-4_1-5:1.16
	binutils-csl-sourcerygxx-4_1-5:1.16
	nickrob-async-20060513-branch:1.16.0.22
	nickrob-async-20060513-branchpoint:1.16
	newlib-csl-sourcerygxx-4_1-4:1.16
	gdb-csl-sourcerygxx-4_1-4:1.16
	binutils-csl-sourcerygxx-4_1-4:1.16
	msnyder-reverse-20060502-branch:1.16.0.20
	msnyder-reverse-20060502-branchpoint:1.16
	binutils-csl-wrs-linux-3_4_4-21:1.11
	gdb-csl-morpho-4_1-4:1.16
	binutils-csl-morpho-4_1-4:1.16
	gdb-csl-sourcerygxx-3_4_4-17:1.16
	binutils-csl-sourcerygxx-3_4_4-17:1.16
	binutils-csl-wrs-linux-3_4_4-20:1.11
	readline_5_1-import-branch:1.16.0.18
	readline_5_1-import-branchpoint:1.16
	gdb-csl-20060226-branch-merge-to-csl-symbian-1:1.16
	binutils-2_17-branch:1.16.0.16
	binutils-2_17-branchpoint:1.16
	gdb-csl-symbian-20060226-branch:1.16.0.14
	gdb-csl-symbian-20060226-branchpoint:1.16
	gdb-csl-20060226-branch-merge-to-csl-local-1:1.16
	msnyder-reverse-20060331-branch:1.16.0.12
	msnyder-reverse-20060331-branchpoint:1.16
	newlib-autotools-branch:1.16.0.10
	newlib-csl-20060320-branch:1.16.0.8
	newlib-csl-20060320-branchpoint:1.16
	binutils-csl-2_17-branch:1.16.0.6
	binutils-csl-2_17-branchpoint:1.16
	gdb-csl-available-20060303-branch:1.16.0.4
	gdb-csl-available-20060303-branchpoint:1.16
	gdb-csl-20060226-branch:1.16.0.2
	gdb-csl-20060226-branchpoint:1.16
	newlib-1_14_0:1.14
	gdb_6_4-20051202-release:1.13
	msnyder-fork-checkpoint-branch:1.13.0.8
	msnyder-fork-checkpoint-branchpoint:1.13
	gdb-csl-gxxpro-6_3-branch:1.13.0.6
	gdb-csl-gxxpro-6_3-branchpoint:1.13
	gdb_6_4-branch:1.13.0.4
	gdb_6_4-2005-11-01-branchpoint:1.13
	gdb-csl-arm-20051020-branch:1.13.0.2
	gdb-csl-arm-20051020-branchpoint:1.13
	binutils-csl-gxxpro-3_4-branch:1.11.0.8
	binutils-csl-gxxpro-3_4-branchpoint:1.11
	binutils-2_16_1:1.11
	msnyder-tracepoint-checkpoint-branch:1.12.0.2
	msnyder-tracepoint-checkpoint-branchpoint:1.12
	gdb-csl-arm-20050325-2005-q1b:1.11
	binutils-csl-arm-2005q1b:1.11
	newlib-csl-arm-2005-q1b:1.12
	binutils-2_16:1.11
	newlib-csl-arm-2005-q1a:1.11
	gdb-csl-arm-20050325-2005-q1a:1.11
	binutils-csl-arm-2005q1a:1.11
	csl-arm-20050325-branch:1.11.0.6
	csl-arm-20050325-branchpoint:1.11
	binutils-csl-arm-2005q1-branch:1.11.0.4
	binutils-csl-arm-2005q1-branchpoint:1.11
	binutils-2_16-branch:1.11.0.2
	binutils-2_16-branchpoint:1.11
	newlib-1_13_0:1.10
	csl-arm-2004-q3d:1.10
	gdb_6_3-20041109-release:1.10
	jimb-rda-nptl-branch:1.10.0.4
	jimb-rda-nptl-branchpoint:1.10
	gdb_6_3-branch:1.10.0.2
	gdb_6_3-20041019-branchpoint:1.10
	csl-arm-2004-q3:1.10
	drow_intercu-merge-20040921:1.10
	drow_intercu-merge-20040915:1.10
	jimb-gdb_6_2-e500-branch:1.9.0.6
	jimb-gdb_6_2-e500-branchpoint:1.9
	gdb_6_2-20040730-release:1.9
	gdb_6_2-branch:1.9.0.2
	gdb_6_2-2004-07-10-gmt-branchpoint:1.9
	gdb_6_1_1-20040616-release:1.4
	binutils-2_15:1.4
	binutils-2_15-branchpoint:1.4
	csl-arm-2004-q1a:1.6
	csl-arm-2004-q1:1.5
	gdb_6_1-2004-04-05-release:1.4
	drow_intercu-merge-20040402:1.5
	drow_intercu-merge-20040327:1.5
	ezannoni_pie-20040323-branch:1.5.0.2
	ezannoni_pie-20040323-branchpoint:1.5
	cagney_tramp-20040321-mergepoint:1.5
	cagney_tramp-20040309-branch:1.4.0.14
	cagney_tramp-20040309-branchpoint:1.4
	gdb_6_1-branch:1.4.0.12
	gdb_6_1-2004-03-01-gmt-branchpoint:1.4
	drow_intercu-20040221-branch:1.4.0.10
	drow_intercu-20040221-branchpoint:1.4
	binutils-2_15-branch:1.4.0.8
	cagney_bfdfile-20040213-branch:1.4.0.6
	cagney_bfdfile-20040213-branchpoint:1.4
	drow-cplus-merge-20040208:1.4
	newlib-1_12_0:1.4
	carlton_dictionary-20040126-merge:1.4
	cagney_bigcore-20040122-branch:1.4.0.4
	cagney_bigcore-20040122-branchpoint:1.4
	drow-cplus-merge-20040113:1.4
	csl-arm-2003-q4:1.4
	drow-cplus-merge-20031224:1.4
	drow-cplus-merge-20031220:1.4
	carlton_dictionary-20031215-merge:1.4
	drow-cplus-branch:1.4.0.2
	drow-cplus-merge-20031214:1.4
	carlton-dictionary-20031111-merge:1.4
	gdb_6_0-2003-10-04-release:1.3
	kettenis_sparc-20030918-branch:1.3.0.16
	kettenis_sparc-20030918-branchpoint:1.3
	carlton_dictionary-20030917-merge:1.3
	ezannoni_pie-20030916-branchpoint:1.3
	ezannoni_pie-20030916-branch:1.3.0.14
	cagney_x86i386-20030821-branch:1.3.0.12
	cagney_x86i386-20030821-branchpoint:1.3
	carlton_dictionary-20030805-merge:1.3
	carlton_dictionary-20030627-merge:1.3
	gdb_6_0-branch:1.3.0.10
	gdb_6_0-2003-06-23-branchpoint:1.3
	jimb-ppc64-linux-20030613-branch:1.3.0.8
	jimb-ppc64-linux-20030613-branchpoint:1.3
	binutils-2_14:1.2
	cagney_convert-20030606-branch:1.3.0.6
	cagney_convert-20030606-branchpoint:1.3
	cagney_writestrings-20030508-branch:1.2.0.28
	cagney_writestrings-20030508-branchpoint:1.2
	jimb-ppc64-linux-20030528-branch:1.3.0.4
	jimb-ppc64-linux-20030528-branchpoint:1.3
	carlton_dictionary-20030523-merge:1.3
	cagney_fileio-20030521-branch:1.3.0.2
	cagney_fileio-20030521-branchpoint:1.3
	kettenis_i386newframe-20030517-mergepoint:1.2
	jimb-ppc64-linux-20030509-branch:1.2.0.26
	jimb-ppc64-linux-20030509-branchpoint:1.2
	kettenis_i386newframe-20030504-mergepoint:1.2
	carlton_dictionary-20030430-merge:1.2
	binutils-2_14-branch:1.2.0.24
	binutils-2_14-branchpoint:1.2
	kettenis_i386newframe-20030419-branch:1.2.0.22
	kettenis_i386newframe-20030419-branchpoint:1.2
	carlton_dictionary-20030416-merge:1.2
	cagney_frameaddr-20030409-mergepoint:1.2
	kettenis_i386newframe-20030406-branch:1.2.0.20
	kettenis_i386newframe-20030406-branchpoint:1.2
	cagney_frameaddr-20030403-branchpoint:1.2
	cagney_frameaddr-20030403-branch:1.2.0.18
	cagney_framebase-20030330-mergepoint:1.2
	cagney_framebase-20030326-branch:1.2.0.16
	cagney_framebase-20030326-branchpoint:1.2
	cagney_lazyid-20030317-branch:1.2.0.14
	cagney_lazyid-20030317-branchpoint:1.2
	kettenis-i386newframe-20030316-mergepoint:1.2
	offbyone-20030313-branch:1.2.0.12
	offbyone-20030313-branchpoint:1.2
	kettenis-i386newframe-20030308-branch:1.2.0.10
	kettenis-i386newframe-20030308-branchpoint:1.2
	carlton_dictionary-20030305-merge:1.2
	cagney_offbyone-20030303-branch:1.2.0.8
	cagney_offbyone-20030303-branchpoint:1.2
	w32api-2_2:1.2
	mingw-runtime-2_4:1.2
	carlton_dictionary-branch:1.2.0.6
	carlton_dictionary-20030207-merge:1.2
	interps-20030202-branch:1.2.0.4
	interps-20030202-branchpoint:1.2
	cagney-unwind-20030108-branch:1.2.0.2
	cagney-unwind-20030108-branchpoint:1.2
	binutils_latest_snapshot:1.31;
locks; strict;
comment	@# @;


1.31
date	2011.12.18.10.20.52;	author ebotcazou;	state Exp;
branches;
next	1.30;

1.30
date	2009.11.20.10.12.01;	author bonzini;	state Exp;
branches;
next	1.29;

1.29
date	2008.05.12.16.25.40;	author bonzini;	state Exp;
branches;
next	1.28;

1.28
date	2008.04.04.11.45.58;	author nickc;	state Exp;
branches;
next	1.27;

1.27
date	2007.07.02.18.06.53;	author mrs;	state Exp;
branches;
next	1.26;

1.26
date	2007.06.14.08.16.37;	author bonzini;	state Exp;
branches;
next	1.25;

1.25
date	2007.03.26.15.38.25;	author hjl;	state Exp;
branches;
next	1.24;

1.24
date	2007.03.23.17.11.54;	author hjl;	state Exp;
branches;
next	1.23;

1.23
date	2007.03.23.02.51.30;	author jsm28;	state Exp;
branches;
next	1.22;

1.22
date	2007.03.07.14.02.20;	author schwab;	state Exp;
branches;
next	1.21;

1.21
date	2007.02.18.22.51.35;	author aoliva;	state Exp;
branches;
next	1.20;

1.20
date	2007.02.09.19.24.42;	author bonzini;	state Exp;
branches;
next	1.19;

1.19
date	2007.02.09.15.15.38;	author drow;	state Exp;
branches;
next	1.18;

1.18
date	2006.12.29.17.09.59;	author bonzini;	state Exp;
branches;
next	1.17;

1.17
date	2006.07.19.17.06.06;	author bonzini;	state Exp;
branches;
next	1.16;

1.16
date	2006.02.14.09.22.15;	author bonzini;	state Exp;
branches;
next	1.15;

1.15
date	2006.01.26.18.56.02;	author bonzini;	state Exp;
branches;
next	1.14;

1.14
date	2005.12.05.15.16.05;	author bonzini;	state Exp;
branches;
next	1.13;

1.13
date	2005.08.12.14.22.32;	author bonzini;	state Exp;
branches;
next	1.12;

1.12
date	2005.04.29.14.00.03;	author bonzini;	state Exp;
branches;
next	1.11;

1.11
date	2005.02.28.14.07.03;	author bonzini;	state Exp;
branches;
next	1.10;

1.10
date	2004.08.13.22.32.31;	author neroden;	state Exp;
branches;
next	1.9;

1.9
date	2004.06.09.08.32.35;	author bonzini;	state Exp;
branches;
next	1.8;

1.8
date	2004.05.24.10.45.14;	author bonzini;	state Exp;
branches;
next	1.7;

1.7
date	2004.05.13.18.14.28;	author dj;	state Exp;
branches;
next	1.6;

1.6
date	2004.04.27.18.25.01;	author dj;	state Exp;
branches;
next	1.5;

1.5
date	2004.03.11.05.15.36;	author neroden;	state Exp;
branches;
next	1.4;

1.4
date	2003.09.25.14.27.21;	author drow;	state Exp;
branches
	1.4.2.1
	1.4.10.1
	1.4.14.1;
next	1.3;

1.3
date	2003.05.18.15.49.06;	author neroden;	state Exp;
branches;
next	1.2;

1.2
date	2002.12.28.17.57.49;	author aoliva;	state Exp;
branches
	1.2.6.1;
next	1.1;

1.1
date	2002.12.28.07.09.49;	author neroden;	state Exp;
branches;
next	;

1.4.2.1
date	2003.12.14.20.26.56;	author drow;	state Exp;
branches;
next	;

1.4.10.1
date	2004.03.27.17.37.39;	author drow;	state Exp;
branches;
next	1.4.10.2;

1.4.10.2
date	2004.09.16.17.00.41;	author drow;	state Exp;
branches;
next	;

1.4.14.1
date	2004.03.21.23.57.31;	author cagney;	state Exp;
branches;
next	;

1.2.6.1
date	2003.02.07.19.17.41;	author carlton;	state Exp;
branches;
next	1.2.6.2;

1.2.6.2
date	2003.05.23.18.40.30;	author carlton;	state Exp;
branches;
next	1.2.6.3;

1.2.6.3
date	2003.11.11.23.50.32;	author carlton;	state Exp;
branches;
next	;


desc
@@


1.31
log
@	* configure: Regenerate.
config/
	* acx.m4 (Test for GNAT): Update comment and add quotes in final test.
@
text
@# Autoconf M4 include file defining utility macros for complex Canadian
# cross builds.

dnl ####
dnl # _GCC_TOPLEV_NONCANONICAL_BUILD
dnl # $build_alias or canonical $build if blank.
dnl # Used when we would use $build_alias, but empty is not OK.
AC_DEFUN([_GCC_TOPLEV_NONCANONICAL_BUILD],
[AC_REQUIRE([AC_CANONICAL_BUILD]) []dnl
case ${build_alias} in
  "") build_noncanonical=${build} ;;
  *) build_noncanonical=${build_alias} ;;
esac
]) []dnl # _GCC_TOPLEV_NONCANONICAL_BUILD

dnl ####
dnl # _GCC_TOPLEV_NONCANONICAL_HOST
dnl # $host_alias, or $build_noncanonical if blank.
dnl # Used when we would use $host_alias, but empty is not OK.
AC_DEFUN([_GCC_TOPLEV_NONCANONICAL_HOST],
[AC_REQUIRE([_GCC_TOPLEV_NONCANONICAL_BUILD]) []dnl
case ${host_alias} in
  "") host_noncanonical=${build_noncanonical} ;;
  *) host_noncanonical=${host_alias} ;;
esac
]) []dnl # _GCC_TOPLEV_NONCANONICAL_HOST

dnl ####
dnl # _GCC_TOPLEV_NONCANONICAL_TARGET
dnl # $target_alias or $host_noncanonical if blank.
dnl # Used when we would use $target_alias, but empty is not OK.
AC_DEFUN([_GCC_TOPLEV_NONCANONICAL_TARGET],
[AC_REQUIRE([_GCC_TOPLEV_NONCANONICAL_HOST]) []dnl
case ${target_alias} in
  "") target_noncanonical=${host_noncanonical} ;;
  *) target_noncanonical=${target_alias} ;;
esac
]) []dnl # _GCC_TOPLEV_NONCANONICAL_TARGET

dnl ####
dnl # ACX_NONCANONICAL_BUILD
dnl # Like underscored version, but AC_SUBST's.
AC_DEFUN([ACX_NONCANONICAL_BUILD],
[AC_REQUIRE([_GCC_TOPLEV_NONCANONICAL_BUILD]) []dnl
AC_SUBST(build_noncanonical)
]) []dnl # ACX_NONCANONICAL_BUILD

dnl ####
dnl # ACX_NONCANONICAL_HOST
dnl # Like underscored version, but AC_SUBST's.
AC_DEFUN([ACX_NONCANONICAL_HOST],
[AC_REQUIRE([_GCC_TOPLEV_NONCANONICAL_HOST]) []dnl
AC_SUBST(host_noncanonical)
]) []dnl # ACX_NONCANONICAL_HOST

dnl ####
dnl # ACX_NONCANONICAL_TARGET
dnl # Like underscored version, but AC_SUBST's.
AC_DEFUN([ACX_NONCANONICAL_TARGET],
[AC_REQUIRE([_GCC_TOPLEV_NONCANONICAL_TARGET]) []dnl
AC_SUBST(target_noncanonical)
]) []dnl # ACX_NONCANONICAL_TARGET

dnl ####
dnl # GCC_TOPLEV_SUBDIRS
dnl # GCC & friends build 'build', 'host', and 'target' tools.  These must
dnl # be separated into three well-known subdirectories of the build directory:
dnl # build_subdir, host_subdir, and target_subdir.  The values are determined
dnl # here so that they can (theoretically) be changed in the future.  They
dnl # were previously reproduced across many different files.
dnl #
dnl # This logic really amounts to very little with autoconf 2.13; it will
dnl # amount to a lot more with autoconf 2.5x.
AC_DEFUN([GCC_TOPLEV_SUBDIRS],
[AC_REQUIRE([_GCC_TOPLEV_NONCANONICAL_TARGET]) []dnl
AC_REQUIRE([_GCC_TOPLEV_NONCANONICAL_BUILD]) []dnl

# post-stage1 host modules use a different CC_FOR_BUILD so, in order to
# have matching libraries, they should use host libraries: Makefile.tpl
# arranges to pass --with-build-libsubdir=$(HOST_SUBDIR).
# However, they still use the build modules, because the corresponding
# host modules (e.g. bison) are only built for the host when bootstrap
# finishes. So:
# - build_subdir is where we find build modules, and never changes.
# - build_libsubdir is where we find build libraries, and can be overridden.

# Prefix 'build-' so this never conflicts with target_subdir.
build_subdir="build-${build_noncanonical}"
AC_ARG_WITH(build-libsubdir,
[  --with-build-libsubdir=[DIR]  Directory where to find libraries for build system],
build_libsubdir="$withval",
build_libsubdir="$build_subdir")
# --srcdir=. covers the toplevel, while "test -d" covers the subdirectories
if ( test $srcdir = . && test -d gcc ) \
   || test -d $srcdir/../host-${host_noncanonical}; then
  host_subdir="host-${host_noncanonical}"
else
  host_subdir=.
fi
# No prefix.
target_subdir=${target_noncanonical}
AC_SUBST([build_libsubdir]) []dnl
AC_SUBST([build_subdir]) []dnl
AC_SUBST([host_subdir]) []dnl
AC_SUBST([target_subdir]) []dnl
]) []dnl # GCC_TOPLEV_SUBDIRS


####
# _NCN_TOOL_PREFIXES:  Some stuff that oughtta be done in AC_CANONICAL_SYSTEM 
# or AC_INIT.
# These demand that AC_CANONICAL_SYSTEM be called beforehand.
AC_DEFUN([_NCN_TOOL_PREFIXES],
[ncn_tool_prefix=
test -n "$host_alias" && ncn_tool_prefix=$host_alias-
ncn_target_tool_prefix=
test -n "$target_alias" && ncn_target_tool_prefix=$target_alias-
]) []dnl # _NCN_TOOL_PREFIXES

####
# NCN_STRICT_CHECK_TOOLS(variable, progs-to-check-for,[value-if-not-found],[path])
# Like plain AC_CHECK_TOOLS, but require prefix if build!=host.

AC_DEFUN([NCN_STRICT_CHECK_TOOLS],
[AC_REQUIRE([_NCN_TOOL_PREFIXES]) []dnl
AC_ARG_VAR([$1], [$1 for the host])

if test -n "[$]$1"; then
  ac_cv_prog_$1=[$]$1
elif test -n "$ac_cv_prog_$1"; then
  $1=$ac_cv_prog_$1
fi

if test -n "$ac_cv_prog_$1"; then
  for ncn_progname in $2; do
    AC_CHECK_PROG([$1], [${ncn_progname}], [${ncn_progname}], , [$4])
  done
fi

for ncn_progname in $2; do
  if test -n "$ncn_tool_prefix"; then
    AC_CHECK_PROG([$1], [${ncn_tool_prefix}${ncn_progname}], 
                  [${ncn_tool_prefix}${ncn_progname}], , [$4])
  fi
  if test -z "$ac_cv_prog_$1" && test $build = $host ; then
    AC_CHECK_PROG([$1], [${ncn_progname}], [${ncn_progname}], , [$4]) 
  fi
  test -n "$ac_cv_prog_$1" && break
done

if test -z "$ac_cv_prog_$1" ; then
  ifelse([$3],[], [set dummy $2
  if test $build = $host ; then
    $1="[$]2"
  else
    $1="${ncn_tool_prefix}[$]2"
  fi], [$1="$3"])
fi
]) []dnl # NCN_STRICT_CHECK_TOOLS

####
# NCN_STRICT_CHECK_TARGET_TOOLS(variable, progs-to-check-for,[value-if-not-found],[path])
# Like CVS Autoconf AC_CHECK_TARGET_TOOLS, but require prefix if build!=target.

AC_DEFUN([NCN_STRICT_CHECK_TARGET_TOOLS],
[AC_REQUIRE([_NCN_TOOL_PREFIXES]) []dnl
AC_ARG_VAR([$1], patsubst([$1], [_FOR_TARGET$], [])[ for the target])

if test -n "[$]$1"; then
  ac_cv_prog_$1=[$]$1
elif test -n "$ac_cv_prog_$1"; then
  $1=$ac_cv_prog_$1
fi

if test -n "$ac_cv_prog_$1"; then
  for ncn_progname in $2; do
    AC_CHECK_PROG([$1], [${ncn_progname}], [${ncn_progname}], , [$4])
  done
fi

if test -z "$ac_cv_prog_$1" && test -n "$with_build_time_tools"; then
  for ncn_progname in $2; do
    AC_MSG_CHECKING([for ${ncn_progname} in $with_build_time_tools])
    if test -x $with_build_time_tools/${ncn_progname}; then
      ac_cv_prog_$1=$with_build_time_tools/${ncn_progname}
      AC_MSG_RESULT(yes)
      break
    else
      AC_MSG_RESULT(no)
    fi
  done
fi

if test -z "$ac_cv_prog_$1"; then
  for ncn_progname in $2; do
    if test -n "$ncn_target_tool_prefix"; then
      AC_CHECK_PROG([$1], [${ncn_target_tool_prefix}${ncn_progname}], 
                    [${ncn_target_tool_prefix}${ncn_progname}], , [$4])
    fi
    if test -z "$ac_cv_prog_$1" && test $build = $target ; then
      AC_CHECK_PROG([$1], [${ncn_progname}], [${ncn_progname}], , [$4]) 
    fi
    test -n "$ac_cv_prog_$1" && break
  done
fi
  
if test -z "$ac_cv_prog_$1" ; then
  ifelse([$3],[], [set dummy $2
  if test $build = $target ; then
    $1="[$]2"
  else
    $1="${ncn_target_tool_prefix}[$]2"
  fi], [$1="$3"])
else
  $1="$ac_cv_prog_$1"
fi
]) []dnl # NCN_STRICT_CHECK_TARGET_TOOLS
  

# Backported from Autoconf 2.5x; can go away when and if
# we switch.  Put the OS path separator in $PATH_SEPARATOR.
AC_DEFUN([ACX_PATH_SEP], [
# The user is always right.
if test "${PATH_SEPARATOR+set}" != set; then
  echo "#! /bin/sh" >conf$$.sh
  echo  "exit 0"   >>conf$$.sh
  chmod +x conf$$.sh
  if (PATH="/nonexistent;."; conf$$.sh) >/dev/null 2>&1; then
    PATH_SEPARATOR=';'
  else
    PATH_SEPARATOR=: 
  fi
  rm -f conf$$.sh
fi
])


AC_DEFUN([ACX_TOOL_DIRS], [
AC_REQUIRE([ACX_PATH_SEP])
if test "x$exec_prefix" = xNONE; then
        if test "x$prefix" = xNONE; then
                gcc_cv_tool_prefix=$ac_default_prefix
        else
                gcc_cv_tool_prefix=$prefix
        fi
else
        gcc_cv_tool_prefix=$exec_prefix
fi

# If there is no compiler in the tree, use the PATH only.  In any
# case, if there is no compiler in the tree nobody should use
# AS_FOR_TARGET and LD_FOR_TARGET.
if test x$host = x$build && test -f $srcdir/gcc/BASE-VER; then
    gcc_version=`cat $srcdir/gcc/BASE-VER`
    gcc_cv_tool_dirs="$gcc_cv_tool_prefix/libexec/gcc/$target_noncanonical/$gcc_version$PATH_SEPARATOR"
    gcc_cv_tool_dirs="$gcc_cv_tool_dirs$gcc_cv_tool_prefix/libexec/gcc/$target_noncanonical$PATH_SEPARATOR"
    gcc_cv_tool_dirs="$gcc_cv_tool_dirs/usr/lib/gcc/$target_noncanonical/$gcc_version$PATH_SEPARATOR"
    gcc_cv_tool_dirs="$gcc_cv_tool_dirs/usr/lib/gcc/$target_noncanonical$PATH_SEPARATOR"
    gcc_cv_tool_dirs="$gcc_cv_tool_dirs$gcc_cv_tool_prefix/$target_noncanonical/bin/$target_noncanonical/$gcc_version$PATH_SEPARATOR"
    gcc_cv_tool_dirs="$gcc_cv_tool_dirs$gcc_cv_tool_prefix/$target_noncanonical/bin$PATH_SEPARATOR"
else
    gcc_cv_tool_dirs=
fi

if test x$build = x$target && test -n "$md_exec_prefix"; then
        gcc_cv_tool_dirs="$gcc_cv_tool_dirs$md_exec_prefix$PATH_SEPARATOR"
fi

]) []dnl # ACX_TOOL_DIRS

# ACX_HAVE_GCC_FOR_TARGET
# Check if the variable GCC_FOR_TARGET really points to a GCC binary.
AC_DEFUN([ACX_HAVE_GCC_FOR_TARGET], [
cat > conftest.c << \EOF
#ifdef __GNUC__
  gcc_yay;
#endif
EOF
if ($GCC_FOR_TARGET -E conftest.c | grep gcc_yay) > /dev/null 2>&1; then
  have_gcc_for_target=yes
else
  GCC_FOR_TARGET=${ncn_target_tool_prefix}gcc
  have_gcc_for_target=no
fi
rm conftest.c
])

# ACX_CHECK_INSTALLED_TARGET_TOOL(VAR, PROG)
# Searching for installed target binutils.  We need to take extra care,
# else we may find the wrong assembler, linker, etc., and lose.
#
# First try --with-build-time-tools, if specified.
#
# For build != host, we ask the installed GCC for the name of the tool it
# uses, and accept it if it is an absolute path.  This is because the
# only good choice for a compiler is the same GCC version that is being
# installed (or we couldn't make target libraries), and we assume that
# on the host system we'll have not only the same GCC version, but also
# the same binutils version.
#
# For build == host, search the same directories that the installed
# compiler will search.  We used to do this for the assembler, linker,
# and nm only; for simplicity of configuration, however, we extend this
# criterion to tools (such as ar and ranlib) that are never invoked by
# the compiler, to avoid mismatches.
#
# Also note we have to check MD_EXEC_PREFIX before checking the user's path
# if build == target.  This makes the most sense only when bootstrapping,
# but we also do so when build != host.  In this case, we hope that the
# build and host systems will have similar contents of MD_EXEC_PREFIX.
#
# If we do not find a suitable binary, then try the user's path.

AC_DEFUN([ACX_CHECK_INSTALLED_TARGET_TOOL], [
AC_REQUIRE([ACX_TOOL_DIRS])
AC_REQUIRE([ACX_HAVE_GCC_FOR_TARGET])
if test -z "$ac_cv_path_$1" ; then
  if test -n "$with_build_time_tools"; then
    AC_MSG_CHECKING([for $2 in $with_build_time_tools])
    if test -x $with_build_time_tools/$2; then
      $1=`cd $with_build_time_tools && pwd`/$2
      ac_cv_path_$1=[$]$1
      AC_MSG_RESULT([$ac_cv_path_$1])
    else
      AC_MSG_RESULT(no)
    fi
  elif test $build != $host && test $have_gcc_for_target = yes; then
    $1=`$GCC_FOR_TARGET --print-prog-name=$2`
    test [$]$1 = $2 && $1=
    test -n "[$]$1" && ac_cv_path_$1=[$]$1
  fi
fi
if test -z "$ac_cv_path_$1" && test -n "$gcc_cv_tool_dirs"; then
  AC_PATH_PROG([$1], [$2], [], [$gcc_cv_tool_dirs])
fi
if test -z "$ac_cv_path_$1" ; then
  NCN_STRICT_CHECK_TARGET_TOOLS([$1], [$2])
else
  $1=$ac_cv_path_$1
fi
]) []dnl # ACX_CHECK_INSTALLED_TARGET_TOOL

###
# AC_PROG_CPP_WERROR
# Used for autoconf 2.5x to force AC_PREPROC_IFELSE to reject code which
# triggers warnings from the preprocessor.  Will be in autoconf 2.58.
# For now, using this also overrides header checks to use only the
# preprocessor (matches 2.13 behavior; matching 2.58's behavior is a
# bit harder from here).
# Eventually autoconf will default to checking headers with the compiler
# instead, and we'll have to do this differently.

AC_DEFUN([AC_PROG_CPP_WERROR],
[AC_REQUIRE([AC_PROG_CPP])dnl
m4_define([AC_CHECK_HEADER],m4_defn([_AC_CHECK_HEADER_OLD]))
ac_c_preproc_warn_flag=yes])# AC_PROG_CPP_WERROR

# Test for GNAT.
# We require the gnatbind & gnatmake programs, as well as a compiler driver
# that understands Ada.  We use the user's CC setting, already found, and
# possibly add $1 to the command-line parameters.
#
# Sets the shell variable have_gnat to yes or no as appropriate, and
# substitutes GNATBIND and GNATMAKE.
AC_DEFUN([ACX_PROG_GNAT],
[AC_REQUIRE([AC_CHECK_TOOL_PREFIX])
AC_REQUIRE([AC_PROG_CC])
AC_CHECK_TOOL(GNATBIND, gnatbind, no)
AC_CHECK_TOOL(GNATMAKE, gnatmake, no)
AC_CACHE_CHECK([whether compiler driver understands Ada],
		 acx_cv_cc_gcc_supports_ada,
[cat >conftest.adb <<EOF
procedure conftest is begin null; end conftest;
EOF
acx_cv_cc_gcc_supports_ada=no
# There is a bug in old released versions of GCC which causes the
# driver to exit successfully when the appropriate language module
# has not been installed.  This is fixed in 2.95.4, 3.0.2, and 3.1.
# Therefore we must check for the error message as well as an
# unsuccessful exit.
# Other compilers, like HP Tru64 UNIX cc, exit successfully when
# given a .adb file, but produce no object file.  So we must check
# if an object file was really produced to guard against this.
errors=`(${CC} $1[]m4_ifval([$1], [ ])-c conftest.adb) 2>&1 || echo failure`
if test x"$errors" = x && test -f conftest.$ac_objext; then
  acx_cv_cc_gcc_supports_ada=yes
fi
rm -f conftest.*])

if test "x$GNATBIND" != xno && test "x$GNATMAKE" != xno && test x$acx_cv_cc_gcc_supports_ada != xno; then
  have_gnat=yes
else
  have_gnat=no
fi
])

dnl 'make compare' can be significantly faster, if cmp itself can
dnl skip bytes instead of using tail.  The test being performed is
dnl "if cmp --ignore-initial=2 t1 t2 && ! cmp --ignore-initial=1 t1 t2"
dnl but we need to sink errors and handle broken shells.  We also test
dnl for the parameter format "cmp file1 file2 skip1 skip2" which is
dnl accepted by cmp on some systems.
AC_DEFUN([ACX_PROG_CMP_IGNORE_INITIAL],
[AC_CACHE_CHECK([how to compare bootstrapped objects], gcc_cv_prog_cmp_skip,
[ echo abfoo >t1
  echo cdfoo >t2
  gcc_cv_prog_cmp_skip='tail +16c $$f1 > tmp-foo1; tail +16c $$f2 > tmp-foo2; cmp tmp-foo1 tmp-foo2'
  if cmp t1 t2 2 2 > /dev/null 2>&1; then
    if cmp t1 t2 1 1 > /dev/null 2>&1; then
      :
    else
      gcc_cv_prog_cmp_skip='cmp $$f1 $$f2 16 16'
    fi
  fi
  if cmp --ignore-initial=2 t1 t2 > /dev/null 2>&1; then
    if cmp --ignore-initial=1 t1 t2 > /dev/null 2>&1; then
      :
    else
      gcc_cv_prog_cmp_skip='cmp --ignore-initial=16 $$f1 $$f2'
    fi
  fi
  rm t1 t2
])
do_compare="$gcc_cv_prog_cmp_skip"
AC_SUBST(do_compare)
])

dnl See whether we can include both string.h and strings.h.
AC_DEFUN([ACX_HEADER_STRING],
[AC_CACHE_CHECK([whether string.h and strings.h may both be included],
  gcc_cv_header_string,
[AC_TRY_COMPILE([#include <string.h>
#include <strings.h>], , gcc_cv_header_string=yes, gcc_cv_header_string=no)])
if test $gcc_cv_header_string = yes; then
  AC_DEFINE(STRING_WITH_STRINGS, 1, [Define if you can safely include both <string.h> and <strings.h>.])
fi
])

dnl See if stdbool.h properly defines bool and true/false.
dnl Check whether _Bool is built-in.
AC_DEFUN([ACX_HEADER_STDBOOL],
[AC_CACHE_CHECK([for working stdbool.h],
  ac_cv_header_stdbool_h,
[AC_TRY_COMPILE([#include <stdbool.h>],
[bool foo = false;],
ac_cv_header_stdbool_h=yes, ac_cv_header_stdbool_h=no)])
if test $ac_cv_header_stdbool_h = yes; then
  AC_DEFINE(HAVE_STDBOOL_H, 1,
  [Define if you have a working <stdbool.h> header file.])
fi
AC_CACHE_CHECK(for built-in _Bool, gcc_cv_c__bool,
[AC_TRY_COMPILE(,
[_Bool foo;],
gcc_cv_c__bool=yes, gcc_cv_c__bool=no)
])
if test $gcc_cv_c__bool = yes; then
  AC_DEFINE(HAVE__BOOL, 1, [Define if the \`_Bool' type is built-in.])
fi
])

dnl See if hard links work and if not, try to substitute $1 or simple copy.
AC_DEFUN([ACX_PROG_LN],
[AC_MSG_CHECKING(whether ln works)
AC_CACHE_VAL(acx_cv_prog_LN,
[rm -f conftestdata_t
echo >conftestdata_f
if ln conftestdata_f conftestdata_t 2>/dev/null
then
  acx_cv_prog_LN=ln
else
  acx_cv_prog_LN=no
fi
rm -f conftestdata_f conftestdata_t
])dnl
if test $acx_cv_prog_LN = no; then
  LN="ifelse([$1],,cp,[$1])"
  AC_MSG_RESULT([no, using $LN])
else
  LN="$acx_cv_prog_LN"
  AC_MSG_RESULT(yes)
fi
AC_SUBST(LN)dnl
])

dnl GCC_TARGET_TOOL(PROGRAM, TARGET-VAR, HOST-VAR, IN-TREE-TOOL, LANGUAGE)
AC_DEFUN([GCC_TARGET_TOOL],
[AC_MSG_CHECKING(where to find the target $1)
if test "x${build}" != "x${host}" ; then
  if expr "x[$]$2" : "x/" > /dev/null; then
    # We already found the complete path
    ac_dir=`dirname [$]$2`
    AC_MSG_RESULT(pre-installed in $ac_dir)
  else
    # Canadian cross, just use what we found
    AC_MSG_RESULT(pre-installed)
  fi
else
  ifelse([$4],,,
  [ok=yes
  case " ${configdirs} " in
    *" patsubst([$4], [/.*], []) "*) ;;
    *) ok=no ;;
  esac
  ifelse([$5],,, 
  [case ,${enable_languages}, in
    *,$5,*) ;;
    *) ok=no ;;
  esac])
  if test $ok = yes; then
    # An in-tree tool is available and we can use it
    $2='$$r/$(HOST_SUBDIR)/$4'
    AC_MSG_RESULT(just compiled)
  el])if expr "x[$]$2" : "x/" > /dev/null; then
    # We already found the complete path
    ac_dir=`dirname [$]$2`
    AC_MSG_RESULT(pre-installed in $ac_dir)
  elif test "x$target" = "x$host"; then
    # We can use an host tool
    $2='$($3)'
    AC_MSG_RESULT(host tool)
  else
    # We need a cross tool
    AC_MSG_RESULT(pre-installed)
  fi
fi
AC_SUBST($2)])


dnl Locate a program and check that its version is acceptable.
dnl ACX_PROG_CHECK_VER(var, name, version-switch,
dnl                    version-extract-regexp, version-glob)
AC_DEFUN([ACX_CHECK_PROG_VER],[
  AC_CHECK_PROG([$1], [$2], [$2])
  if test -n "[$]$1"; then
    # Found it, now check the version.
    AC_CACHE_CHECK([for modern $2],
                   [gcc_cv_prog_$2_modern],
                   [ac_prog_version=`eval [$]$1 $3 2>&1 |
                                     sed -n 's/^.*patsubst([[$4]],/,\/).*$/\1/p'`

                    [case $ac_prog_version in
                      '')  gcc_cv_prog_$2_modern=no;;
                      $5)  gcc_cv_prog_$2_modern=yes;;
                      *)   gcc_cv_prog_$2_modern=no;;
                    esac]
                   ])
  else
    gcc_cv_prog_$2_modern=no
  fi
  if test $gcc_cv_prog_$2_modern = no; then
    $1="${CONFIG_SHELL-/bin/sh} $ac_aux_dir/missing $2"
  fi
])

dnl Support the --with-pkgversion configure option.
dnl ACX_PKGVERSION(default-pkgversion)
AC_DEFUN([ACX_PKGVERSION],[
  AC_ARG_WITH(pkgversion,
    AS_HELP_STRING([--with-pkgversion=PKG],
                   [Use PKG in the version string in place of "$1"]),
    [case "$withval" in
      yes) AC_MSG_ERROR([package version not specified]) ;;
      no)  PKGVERSION= ;;
      *)   PKGVERSION="($withval) " ;;
     esac],
    PKGVERSION="($1) "
  )
  AC_SUBST(PKGVERSION)
])

dnl Support the --with-bugurl configure option.
dnl ACX_BUGURL(default-bugurl)
AC_DEFUN([ACX_BUGURL],[
  AC_ARG_WITH(bugurl,
    AS_HELP_STRING([--with-bugurl=URL],
                   [Direct users to URL to report a bug]),
    [case "$withval" in
      yes) AC_MSG_ERROR([bug URL not specified]) ;;
      no)  BUGURL=
	   ;;
      *)   BUGURL="$withval"
	   ;;
     esac],
     BUGURL="$1"
  )
  case ${BUGURL} in
  "")
    REPORT_BUGS_TO=
    REPORT_BUGS_TEXI=
    ;;
  *)
    REPORT_BUGS_TO="<$BUGURL>"
    REPORT_BUGS_TEXI=@@uref{`echo "$BUGURL" | sed 's/@@/@@@@/g'`}
    ;;
  esac;
  AC_SUBST(REPORT_BUGS_TO)
  AC_SUBST(REPORT_BUGS_TEXI)
])

dnl ####
dnl # ACX_CHECK_CYGWIN_CAT_WORKS
dnl # On Cygwin hosts, check that the cat command ignores 
dnl # carriage returns as otherwise builds will not work.
dnl # See binutils PR 4334 for more details.
AC_DEFUN([ACX_CHECK_CYGWIN_CAT_WORKS],[
AC_MSG_CHECKING([to see if cat works as expected])
echo a >cygwin-cat-check
if test `cat cygwin-cat-check` = a ; then
  rm cygwin-cat-check
  AC_MSG_RESULT(yes)
else
  rm cygwin-cat-check
  AC_MSG_RESULT(no)
  AC_MSG_ERROR([The cat command does not ignore carriage return characters.
  Please either mount the build directory in binary mode or run the following
  commands before running any configure script:
set -o igncr
export SHELLOPTS 
  ])
fi
])
@


1.30
log
@sync config with gcc:

2009-10-23  Rainer Orth  <ro@@CeBiTec.Uni-Bielefeld.DE>

	* acx.m4 (ACX_CHECK_CYGWIN_CAT_WORKS): Use = with test.
@
text
@d359 3
a361 3
# We require the gnatbind program, and a compiler driver that
# understands Ada.  We use the user's CC setting, already found,
# and possibly add $1 to the command-line parameters.
d390 1
a390 1
if test x$GNATBIND != xno && test x$GNATMAKE != xno && test x$acx_cv_cc_gcc_supports_ada != xno; then
@


1.29
log
@2008-05-12  Samuel Tardieu  <sam@@rfc1149.net>
	    Paolo Bonzini  <bonzini@@gnu.org>

	PR ada/36001
	* acx.m4: Add optional parameter to ACX_PROG_GNAT.
@
text
@d608 1
a608 1
if test `cat cygwin-cat-check` == a ; then
@


1.28
log
@        PR binutils/4334
        * acx.m4 (ACX_CHECK_CYGWIN_CAT_WORKS): New macro to check that
        cygwin builds are not running in textmode.

        * configure.ac: Run ACX_CHECK_CYGWIN_CAT_WORKS for cygwin hosted
        builds.
        * configure: Regenerate.
@
text
@d360 2
a361 1
# understands Ada.  We use the user's CC setting, already found.
d384 1
a384 1
errors=`(${CC} -c conftest.adb) 2>&1 || echo failure`
@


1.27
log
@	    * acx.m4 (ACX_CHECK_INSTALLED_TARGET_TOOL): Fixup logic for cross
	    builds.

	    * acx.m4 (NCN_STRICT_CHECK_TARGET_TOOLS): Fix incremental builds.
	    (ACX_HAVE_GCC_FOR_TARGET): Likewise.
@
text
@d598 23
@


1.26
log
@2007-06-14  Paolo Bonzini  <bonzini@@gnu.org>

	* acx.m4 (ACX_CHECK_PROG_VER): Remove duplicate lines.
@
text
@d214 2
d329 2
a330 2
    test [$]$1=$2 && $1=
    ac_cv_path_$1=[$]$1
@


1.25
log
@2007-03-26  H.J. Lu  <hongjiu.lu@@intel.com>

	* acx.m4 (ACX_BUGURL): Set BUGURL first. Quote $BUGURL first
	when setting REPORT_BUGS_TEXI.
@
text
@a542 4

                    if test $gcc_cv_prog_$2_modern = no; then
                      $1="${CONFIG_SHELL-/bin/sh} $ac_aux_dir/missing $2"
                    fi
@


1.24
log
@2007-03-23  H.J. Lu  <hongjiu.lu@@intel.com>

	* acx.m4 (ACX_BUGURL): Replace "@@" with "@@@@" for
	REPORT_BUGS_TEXI.
@
text
@d580 1
a580 2
      no)  REPORT_BUGS_TO="";
	   REPORT_BUGS_TEXI=""
d582 1
a582 2
      *)   REPORT_BUGS_TO="<$withval>"
	   REPORT_BUGS_TEXI="@@uref{`echo $withval | sed 's/@@/@@@@/g'`}"
d585 1
a585 2
     REPORT_BUGS_TO="<$1>"
     REPORT_BUGS_TEXI="@@uref{`echo $1 | sed 's/@@/@@@@/g'`}"
d587 10
@


1.23
log
@bfd:
	* configure.in: Use ACX_PKGVERSION and ACX_BUGURL.
	* configure: Regenerate.

config:
	* acx.m4 (ACX_PKGVERSION, ACX_BUGURL): Define.
@
text
@d588 1
a588 1
     REPORT_BUGS_TEXI="@@uref{$1}"
@


1.22
log
@	* configure: Regenerate.

config/:
	* acx.m4 (GCC_TARGET_TOOL): Expand backquotes outside
	AC_MSG_RESULT.
@
text
@d555 38
@


1.21
log
@ChangeLog:
* configure: Rebuilt.
config/ChangeLog:
* acx.m4 (NCN_STRICT_CHECK_TOOLS): Mark environment variable as
precious.  Prefer it over a cached value.  Use cached value
verbosely.
(NCN_STRICT_CHECK_TARGET_TOOLS): Likewise.  Don't override
environment variable with build-time tools.
@
text
@d488 2
a489 1
    AC_MSG_RESULT(pre-installed in `dirname [$]$2`)
d512 2
a513 1
    AC_MSG_RESULT(pre-installed in `dirname [$]$2`)
@


1.20
log
@2007-02-09  Paolo Bonzini  <bonzini@@gnu.org>

	* Makefile.def: Sync with GCC.
	* Makefile.tpl: Sync with GCC.
	* Makefile.in: Regenerate.
	* configure: Regenerate.

	* config/acx.m4: Sync with GCC.
	* config/depstand.m4: Sync with GCC.
	* config/tls.m4: Sync with GCC.
@
text
@d126 14
d167 15
a181 1
if test -n "$with_build_time_tools"; then
@


1.19
log
@	* Makefile.tpl (build_alias, host_alias, target_alias): Use
	noncanonical equivalents.
	* configure.in: Rename to...
	* configure.ac: ...this.  Update AC_PREREQ.  Prevent error for
	AS_FOR_TARGET.  Set build_noncanonical, host_noncanonical, and
	target_noncanonical.  Use them.  Rewrite removal of configure
	arguments for autoconf 2.59.  Discard variable settings.  Force
	program_transform_name for native tools.

	* Makefile.in: Regenerated.
	* configure: Regenerated with autoconf 2.59.

	* src-release (DEVO_SUPPORT, do-proto-toplev): Expect configure.ac.

	* acx.m4 (ACX_CHECK_INSTALLED_TARGET_TOOL): Avoid AC_PATH_PROG
	with an empty path.
@
text
@d333 1
a333 1
# substitutes GNATBIND.
d338 1
d359 1
a359 1
if test x$GNATBIND != xno && test x$acx_cv_cc_gcc_supports_ada != xno; then
d494 31
@


1.18
log
@2006-12-29  Paolo Bonzini  <bonzini@@gnu.org>

	Sync with gcc:
	2006-12-29  Paolo Bonzini  <bonzini@@gnu.org>

        * configure.in: Reorganize recognition of languages.  Add
        --enable-stage1-languages.  Show supported languages for the chosen
        target rather than all recognized languages.
        * configure: Regenerate.

	2006-12-29  Paolo Bonzini  <bonzini@@gnu.org>

        * Makefile.tpl (GCC_STRAP_TARGETS, all-prebootstrap): Remove.
        * Makefile.in: Regenerate.

	2006-12-29  Kaveh R. Ghazi  <ghazi@@caip.rutgers.edu>

        * configure.in: Warn that MPFR 2.2.0 is buggy.
        * configure: Regenerate.

config:
2006-12-29  Paolo Bonzini  <bonzini@@gnu.org>

	* acx.m4: Sync with gcc.
@
text
@d303 1
a303 1
if test -z "$ac_cv_path_$1" ; then
@


1.17
log
@2006-07-19  Paolo Bonzini  <bonzini@@gnu.org>

	* Makefile.tpl (configure-stageN-MODULE): Pass --with-build-libsubdir
	for stages after the first.
	* Makefile.in: Regenerate.

config:
2006-07-19  Paolo Bonzini  <bonzini@@gnu.org>

	* acx.m4: Support --with-build-libsubdir and AC_SUBST
	build_libsubdir.
@
text
@d491 2
a492 1
fi])
@


1.16
log
@2006-02-14  Paolo Bonzini  <bonzini@@gnu.org>
	    Andreas Schwab  <schwab@@suse.de>

	* configure: Regenerate.

config:
2006-02-14  Paolo Bonzini  <bonzini@@gnu.org>
            Andreas Schwab  <schwab@@suse.de>

        * acx.m4 (NCN_STRICT_CHECK_TARGET_TOOLS): Use correct program name.
	(ACX_CHECK_INSTALLED_TARGET_TOOL): Likewise, and always set $1.
@
text
@d77 10
d89 4
d102 1
@


1.15
log
@2006-01-16  Paolo Bonzini  <bonzini@@gnu.org>

	* configure.in: Set with_gnu_as, with_gnu_ld, with_newlib earlier.
	Set md_exec_prefix.  Use ACX_CHECK_INSTALLED_TARGET_TOOL to find
	the assembler, linker and binutils.
	* configure: Regenerate.

config:
2006-01-16  Paolo Bonzini  <bonzini@@gnu.org>

	* acx.m4 (NCN_STRICT_CHECK_TARGET_TOOLS): Test $with_build_time_tools.
	(ACX_PATH_SEP): New.
	(ACX_TOOL_DIRS): Move here from the gcc directory.
	(ACX_CHECK_INSTALLED_TARGET_TOOL): New.
	(GCC_TARGET_TOOL): Do not use a host tool if we found a target tool
	with a complete path in either $with_build_time_tools or $exec_prefix.
@
text
@d141 2
a142 2
    if test -x $with_build_time_tools/$1; then
      ac_cv_prog_$1=$with_build_time_tools/$1
d274 8
a281 4
    AC_MSG_CHECKING([for ${ncn_target_tool_prefix}${ncn_progname} in $with_build_time_tools])
    $1=`cd $with_build_time_tools && pwd`/$1
    ac_cv_path_$1=[$]$1
    AC_MSG_RESULT([$ac_cv_path_$1])
d293 2
@


1.14
log
@toplevel:
2005-12-05  Paolo Bonzini  <bonzini@@gnu.org>

	Sync with gcc:

	2005-12-05  Paolo Bonzini  <bonzini@@gnu.org>

        * configure.in (CONFIGURED_BISON, CONFIGURED_YACC, CONFIGURED_M4,
        CONFIGURED_FLEX, CONFIGURED_LEX, CONFIGURED_MAKEINFO): Remove
        "CONFIGURED_" from the AC_CHECK_PROGS invocation.  Move below.
        Find in-tree tools if available.
        (EXPECT, RUNTEST, LIPO, STRIP): Find them and substitute them.
        (CONFIGURED_*_FOR_TARGET): Don't set nor substitute.
        (*_FOR_TARGET): Set them with GCC_TARGET_TOOL.
        (COMPILER_*_FOR_TARGET): New.
        * Makefile.tpl (HOST_EXPORTS): Add *_FOR_TARGET symbols that gcc needs.
        (BASE_TARGET_EXPORTS): Use COMPILER_*_FOR_TARGET symbols.
        (CONFIGURED_*, USUAL_*): Remove.
        (BISON, YACC, FLEX, LEX, M4, MAKEINFO, EXPECT, RUNTEST, LIPO,
        STRIP): Use autoconf substitutions.
        (COMPILER_AS_FOR_TARGET, COMPILER_LD_FOR_TARGET,
        COMPILER_NM_FOR_TARGET): New.
        (EXTRA_HOST_FLAGS): Pass LIPO and STRIP.

        (all): Make all-host and all-target in parallel.
        (do-[+make_target+], do-check, install, [+compare-target+]): Ensure
        that $$r and $$s are set before invoking a recursive make.
        (stage[+id+]-bubble): Likewise, and invoke the comparison at the end.
        ([+bootstrap-target+]): Inline most of the `all' target.

	2005-11-29  Ben Elliston  <bje@@au.ibm.com>

        * Makefile.tpl (clean-target-libgcc): Invoke clean-target-libgcc
        from the gcc build directory.
        * Makefile.in: Regenerate.

	2005-11-29  Ben Elliston  <bje@@au.ibm.com>

        * Makefile.def: Add new libdecnumber host_module.  Make all-gcc
        depend on all-libdecnumber.
        * configure.in (host_libs): Include libdecnumber.
        * Makefile.in: Regenerate.
        * configure: Likewise.

	2005-11-21  Kean Johnston  <jkj@@sco.com>

        * config.sub, config.guess: Sync from upstream sources.

config:
2005-12-05  Paolo Bonzini  <bonzini@@gnu.org>

	* acx.m4 (GCC_TARGET_TOOL): New.
@
text
@d107 1
a107 1
# Like plain AC_CHECK_TOOLS, but require prefix if build!=target.
d138 12
a149 10
for ncn_progname in $2; do
  if test -n "$ncn_target_tool_prefix"; then
    AC_CHECK_PROG([$1], [${ncn_target_tool_prefix}${ncn_progname}], 
                  [${ncn_target_tool_prefix}${ncn_progname}], , [$4])
  fi
  if test -z "$ac_cv_prog_$1" && test $build = $target ; then
    AC_CHECK_PROG([$1], [${ncn_progname}], [${ncn_progname}], , [$4]) 
  fi
  test -n "$ac_cv_prog_$1" && break
done
d151 13
d173 118
d436 7
a442 2
  # Canadian cross, just use what we found
  AC_MSG_RESULT(pre-installed)
d459 4
a462 1
  el])if test "x$target" = "x$host"; then
@


1.13
log
@toplevel:
2005-08-12  Paolo Bonzini  <bonzini@@gnu.org>

	* configure.in: Replace NCN_STRICT_CHECK_TOOL with
	NCN_STRICT_CHECK_TOOLS, and likewise for NCN_STRICT_CHECK_TARGET_TOOLS.
	Look for alternate names of the target cc and c++

config:
2005-08-12  Paolo Bonzini  <bonzini@@gnu.org>

	* config/acx.m4 (NCN_CHECK_TARGET_TOOL, NCN_STRICT_CHECK_TOOL,
	NCN_STRICT_CHECK_TARGET_TOOL): Remove.
	(NCN_STRICT_CHECK_TOOLS, NCN_STRICT_CHECK_TARGET_TOOLS): New,
@
text
@d299 31
@


1.12
log
@2005-04-29  Paolo Bonzini  <bonzini@@gnu.org>

	Sync from gcc:

	2005-04-22  Bernd Schmidt  <bernd.schmidt@@analog.com>

        * config.sub: Update from master copy.

	2005-04-19  Hans-Peter Nilsson  <hp@@axis.com>

        * configure.in <crisv32-*-*, cris-*-*>: New local variable
        libgcj_ex_libffi.  Have specific match for *-*-linux*.  Separate
        matches for "*-*-aout" and "*-*-elf".  Don't disable libffi for
        "*-*-elf" and "*-*-linux*".
        * configure: Regenerate.

config:
2005-04-29  Paolo Bonzini  <bonzini@@gnu.org>

	* acx.m4 (ACX_PROG_GNAT): Remove stray break.
@
text
@d106 2
a107 3
# NCN_CHECK_TARGET_TOOL(variable, prog-to-check-for,[value-if-not-found],[path])
# Like AC_CHECK_TOOL, but tries a prefix of the target, not the host.
# Code is pretty much lifted from autoconf2.53.
d109 1
a109 1
AC_DEFUN([NCN_CHECK_TARGET_TOOL],
d111 10
a120 13
if test -n "$ncn_target_tool_prefix"; then
  AC_CHECK_PROG([$1], [${ncn_target_tool_prefix}$2], 
                [${ncn_target_tool_prefix}$2], , [$4])
fi
if test -z "$ac_cv_prog_$1" ; then
  ncn_cv_$1=$$1
  AC_CHECK_PROG([ncn_cv_$1], [$2], [$2], [$3], [$4])
  $1=$ncn_cv_$1
else
  $1="$ac_cv_prog_$1"
fi
]) []dnl # NCN_CHECK_TARGET_TOOL

a121 10
####
# NCN_STRICT_CHECK_TOOL(variable, prog-to-check-for,[value-if-not-found],[path])
# Like AC_CHECK_TOOL, but requires the prefix if build!=host.

AC_DEFUN([NCN_STRICT_CHECK_TOOL],
[AC_REQUIRE([_NCN_TOOL_PREFIXES]) []dnl
if test -n "$ncn_tool_prefix"; then
  AC_CHECK_PROG([$1], [${ncn_tool_prefix}$2], 
                [${ncn_tool_prefix}$2], , [$4])
fi
d123 1
d125 1
a125 3
    ncn_cv_$1=$$1
    AC_CHECK_PROG([ncn_cv_$1], [$2], [$2], [ifelse([$3],[],[$2],[$3])], [$4]) 
    $1=$ncn_cv_$1
d127 2
a128 4
    $1="ifelse([$3],[],[${ncn_tool_prefix}$2],[$3])"
  fi
else
  $1="$ac_cv_prog_$1"
d130 1
a130 2
]) []dnl # NCN_STRICT_CHECK_TOOL

d133 2
a134 2
# NCN_STRICT_CHECK_TARGET_TOOL(variable, prog-to-check-for,[value-if-not-found],[path])
# Like NCN_CHECK_TARGET_TOOL, but requires the prefix if build!=target.
d136 1
a136 1
AC_DEFUN([NCN_STRICT_CHECK_TARGET_TOOL],
d138 11
a148 4
if test -n "$ncn_target_tool_prefix"; then
  AC_CHECK_PROG([$1], [${ncn_target_tool_prefix}$2], 
                [${ncn_target_tool_prefix}$2], , [$4])
fi
d150 1
d152 1
a152 3
    ncn_cv_$1=$$1
    AC_CHECK_PROG([ncn_cv_$1], [$2], [$2], [ifelse([$3],[],[$2],[$3])], [$4]) 
    $1=$ncn_cv_$1
d154 2
a155 4
    $1="ifelse([$3],[],[${ncn_target_tool_prefix}$2],[$3])"
  fi
else
  $1="$ac_cv_prog_$1"
d157 1
a157 1
]) []dnl # NCN_STRICT_CHECK_TARGET_TOOL
@


1.11
log
@2005-02-28  Paolo Bonzini  <bonzini@@gnu.org>

	Sync from gcc.

	2005-02-28  Paolo Bonzini  <bonzini@@gnu.org>

	PR bootstrap/17383
	* Makefile.def (target_modules): Remove "stage", now unnecessary.
	* Makefile.tpl (HOST_SUBDIR): New substitution.
	(STAGE_HOST_EXPORTS, EXPECT, HOST_LIB_PATH, USUAL_AR_FOR_TARGET,
	USUAL_AS_FOR_TARGET, USUAL_DLLTOOL_FOR_TARGET, USUAL_GCC_FOR_TARGET,
	USUAL_LD_FOR_TARGET, USUAL_NM_FOR_TARGET, USUAL_OBJDUMP_FOR_TARGET,
	USUAL_RANLIB_FOR_TARGET, USUAL_WINDRES_FOR_TARGET): Use it.
	(Host modules, Bootstrapped modules): Use it.
	(Build modules, Target modules): Do not create symlink trees,
	always configure out-of-srcdir.
	(distclean): Try removing $(host_subdir) with rm before using rm -rf.
	* configure.in (FLAGS_FOR_TARGET, CC_FOR_TARGET, GCJ_FOR_TARGET,
	GFORTRAN_FOR_TARGET, CXX_FOR_TARGET, RAW_CXX_FOR_TARGET): Use
	$(HOST_SUBDIR).  Create a symlink for host_subdir.

	* Makefile.in: Regenerate.
	* configure: Regenerate.

	Merged from libada-gnattools-branch:
	2004-11-28  Nathanael Nerode  <neroden@@gcc.gnu.org>

	* Makefile.def: Add gnattools as a module, depending on target-libada.
	* Makefile.in: Regenerate.
	* configure.in: Include gnattools in host_tools; disable it if ada
	is disabled.
	* configure: Regenerate.

config:
2005-02-28  Paolo Bonzini  <bonzini@@gnu.org>

	PR bootstrap/17383
	* acx.m4 (GCC_TOPLEV_SUBDIRS): Set HOST_SUBDIR if an in-src
	gcc build is going.
@
text
@a214 1
  break
@


1.10
log
@2004-08-13  Nathanael Nerode  <neroden@@gcc.gnu.org>

	* Add ACX_{TARGET,HOST,BUILD}_NONCANONICAL,
	which do an automatic AC_SUBST on _GCC_TOPLEV_*_NONCANONICAL.
	The intention is that we will migrate to these bit by bit.
@
text
@d79 7
a85 2
# Not really a subdirectory, but here for completeness.
host_subdir=.
@


1.9
log
@2004-06-09  Paolo Bonzini  <bonzini@@gnu.org>

	* Makefile.tpl (touch-stage[+id+]): New.
	(restage[+prev+]): Depend on touch-stage[+id+].

	* Makefile.tpl (RECURSE_FLAGS_TO_PASS): New.
	Use it throughout.

	* Makefile.def: Add profile and feedback bootstrap stages.
	Remove next field from bootstrap stages.
	* Makefile.tpl (LN, LN_S): Substitute.
	(stageN-start, stageN-end): Use double-colon rules, to
	provide a hook for additional setup commands.
	(distclean-stageN-gcc, restageN): Create dependencies from
	[+prev+], not from [+next+].
	(stageN-bubble): Add commands for successive stages from
	[+prev+], using double-colon rules.
	(all-stageN-gcc): Fix typo.
	(stagefeedback-start, profiledbootstrap): New.
	* Makefile.in: Regenerate.
	* configure.in: Call ACX_PROG_LN.
	* configure: Regenerate.

config/ChangeLog:
2004-06-09  Paolo Bonzini  <bonzini@@gnu.org>

	* acx.m4 (ACX_PROG_LN): From gcc, modified to
	accept a parameter.
@
text
@d41 24
@


1.8
log
@2004-05-23  Paolo Bonzini  <bonzini@@gnu.org>

	* Makefile.def (host_modules): add libcpp.
	* Makefile.tpl: Add dependencies on and for libcpp.
	* Makefile.in: Regenerate.
	* configure.in: Add libcpp host module.
	* configure: Regenerate.

config/ChangeLog:

2004-05-23  Paolo Bonzini  <bonzini@@gnu.org>

	* acx.m4 (ACX_HEADER_STDBOOL, ACX_HEADER_STRING):
	From gcc.
@
text
@d261 24
@


1.7
log
@merge from gcc
@
text
@d227 34
@


1.6
log
@merge from gcc:
2004-04-27  Paolo Bonzini  <bonzini@@gnu.org>

	Revert:
	2004-04-26  Paolo Bonzini  <bonzini@@gnu.org>

	* Makefile.def (flags_to_pass): Remove *dir variables that
	are passed to the modules via TOPLEVEL_CONFIGURE_ARGUMENTS,
	as well as prefix and exec_prefix.
	* Makefile.in: Regenerate.

2004-04-26  Paolo Bonzini  <bonzini@@gnu.org>

	* Makefile.def (host_modules): Mark with the bootstrap
	flag packages on which gcc depends.
	* Makefile.tpl (all-bootstrap): Use it.
	* Makefile.in: Regenerate.

2004-04-26  Paolo Bonzini  <bonzini@@gnu.org>

	* Makefile.def (flags_to_pass): Remove *dir variables that
	are passed to the modules via TOPLEVEL_CONFIGURE_ARGUMENTS,
	as well as prefix and exec_prefix.
	* Makefile.in: Regenerate.

2004-04-26  Paolo Bonzini  <bonzini@@gnu.org>

        * configure.in: Invoke ACX_PROG_CMP_IGNORE_INITIAL.
        * configure: Regenerate.
        * config/acx.m4: Mutuate ACX_PROG_CMP_IGNORE_INITIAL from gcc.
        * gcc/Makefile.tpl (compare): Use the result of the test.
        * gcc/Makefile.in: Regenerate.

2004-04-23  Paolo Bonzini  <bonzini@@gnu.org>

	* Makefile.tpl (all-stage1-gcc, all-stage2-gcc, all-stage3-gcc):
	Always relocate gcc and prev-gcc to the original names, even
	if the build fails.
	(new-cleanstrap, new-restage1, new-restage2, new-restage3):
	New targets.
@
text
@d196 31
@


1.5
log
@(top level)
2004-03-11  Nathanael Nerode  <neroden@@gcc.gnu.org>

	* configure: Regenerate.

2004-03-08  Paolo Bonzini  <bonzini@@gnu.org>

	PR ada/14131
	Move language detection to the top level.
	* configure.in: Find default values for the tools as
	soon as possible.  Disable ada if GNAT is not found.
	Emit error message about missing languages.  Expand
	--enable-languages=all for the gcc subdirectory.

(config)
2004-03-08  Paolo Bonzini  <bonzini@@gnu.org>

	PR ada/14131
	Move language detection to the top level.
	* acx.m4 (ACX_PROG_GNAT): New macro, moved here
	from the gcc subdirectory.

2004-03-09  Hans-Peter Nilsson  <hp@@axis.com>

	* accross.m4 (AC_C_BIGENDIAN_CROSS): Compile endian probe with
	"-c".  Properly quote parameter for AC_MSG_ERROR.
@
text
@d180 3
d184 1
a184 1
if test x"$errors" = x; then
d190 1
a190 1
if test x$GNATBIND != xno && test x$acx_cv_gcc_supports_ada != xno; then
@


1.4
log
@	* acx.m4 (AC_PROG_CPP_WERROR): New.
@
text
@d158 35
@


1.4.10.1
log
@Merge mainline to intercu branch.
@
text
@a157 35

# Test for GNAT.
# We require the gnatbind program, and a compiler driver that
# understands Ada.  We use the user's CC setting, already found.
#
# Sets the shell variable have_gnat to yes or no as appropriate, and
# substitutes GNATBIND.
AC_DEFUN([ACX_PROG_GNAT],
[AC_REQUIRE([AC_CHECK_TOOL_PREFIX])
AC_REQUIRE([AC_PROG_CC])
AC_CHECK_TOOL(GNATBIND, gnatbind, no)
AC_CACHE_CHECK([whether compiler driver understands Ada],
		 acx_cv_cc_gcc_supports_ada,
[cat >conftest.adb <<EOF
procedure conftest is begin null; end conftest;
EOF
acx_cv_cc_gcc_supports_ada=no
# There is a bug in old released versions of GCC which causes the
# driver to exit successfully when the appropriate language module
# has not been installed.  This is fixed in 2.95.4, 3.0.2, and 3.1.
# Therefore we must check for the error message as well as an
# unsuccessful exit.
errors=`(${CC} -c conftest.adb) 2>&1 || echo failure`
if test x"$errors" = x; then
  acx_cv_cc_gcc_supports_ada=yes
  break
fi
rm -f conftest.*])

if test x$GNATBIND != xno && test x$acx_cv_gcc_supports_ada != xno; then
  have_gnat=yes
else
  have_gnat=no
fi
])
@


1.4.10.2
log
@Merge mainline to intercu branch - 2004-09-15
@
text
@a40 24
dnl # ACX_NONCANONICAL_BUILD
dnl # Like underscored version, but AC_SUBST's.
AC_DEFUN([ACX_NONCANONICAL_BUILD],
[AC_REQUIRE([_GCC_TOPLEV_NONCANONICAL_BUILD]) []dnl
AC_SUBST(build_noncanonical)
]) []dnl # ACX_NONCANONICAL_BUILD

dnl ####
dnl # ACX_NONCANONICAL_HOST
dnl # Like underscored version, but AC_SUBST's.
AC_DEFUN([ACX_NONCANONICAL_HOST],
[AC_REQUIRE([_GCC_TOPLEV_NONCANONICAL_HOST]) []dnl
AC_SUBST(host_noncanonical)
]) []dnl # ACX_NONCANONICAL_HOST

dnl ####
dnl # ACX_NONCANONICAL_TARGET
dnl # Like underscored version, but AC_SUBST's.
AC_DEFUN([ACX_NONCANONICAL_TARGET],
[AC_REQUIRE([_GCC_TOPLEV_NONCANONICAL_TARGET]) []dnl
AC_SUBST(target_noncanonical)
]) []dnl # ACX_NONCANONICAL_TARGET

dnl ####
a179 3
# Other compilers, like HP Tru64 UNIX cc, exit successfully when
# given a .adb file, but produce no object file.  So we must check
# if an object file was really produced to guard against this.
d181 1
a181 1
if test x"$errors" = x && test -f conftest.$ac_objext; then
d187 1
a187 1
if test x$GNATBIND != xno && test x$acx_cv_cc_gcc_supports_ada != xno; then
a192 89

dnl 'make compare' can be significantly faster, if cmp itself can
dnl skip bytes instead of using tail.  The test being performed is
dnl "if cmp --ignore-initial=2 t1 t2 && ! cmp --ignore-initial=1 t1 t2"
dnl but we need to sink errors and handle broken shells.  We also test
dnl for the parameter format "cmp file1 file2 skip1 skip2" which is
dnl accepted by cmp on some systems.
AC_DEFUN([ACX_PROG_CMP_IGNORE_INITIAL],
[AC_CACHE_CHECK([how to compare bootstrapped objects], gcc_cv_prog_cmp_skip,
[ echo abfoo >t1
  echo cdfoo >t2
  gcc_cv_prog_cmp_skip='tail +16c $$f1 > tmp-foo1; tail +16c $$f2 > tmp-foo2; cmp tmp-foo1 tmp-foo2'
  if cmp t1 t2 2 2 > /dev/null 2>&1; then
    if cmp t1 t2 1 1 > /dev/null 2>&1; then
      :
    else
      gcc_cv_prog_cmp_skip='cmp $$f1 $$f2 16 16'
    fi
  fi
  if cmp --ignore-initial=2 t1 t2 > /dev/null 2>&1; then
    if cmp --ignore-initial=1 t1 t2 > /dev/null 2>&1; then
      :
    else
      gcc_cv_prog_cmp_skip='cmp --ignore-initial=16 $$f1 $$f2'
    fi
  fi
  rm t1 t2
])
do_compare="$gcc_cv_prog_cmp_skip"
AC_SUBST(do_compare)
])

dnl See whether we can include both string.h and strings.h.
AC_DEFUN([ACX_HEADER_STRING],
[AC_CACHE_CHECK([whether string.h and strings.h may both be included],
  gcc_cv_header_string,
[AC_TRY_COMPILE([#include <string.h>
#include <strings.h>], , gcc_cv_header_string=yes, gcc_cv_header_string=no)])
if test $gcc_cv_header_string = yes; then
  AC_DEFINE(STRING_WITH_STRINGS, 1, [Define if you can safely include both <string.h> and <strings.h>.])
fi
])

dnl See if stdbool.h properly defines bool and true/false.
dnl Check whether _Bool is built-in.
AC_DEFUN([ACX_HEADER_STDBOOL],
[AC_CACHE_CHECK([for working stdbool.h],
  ac_cv_header_stdbool_h,
[AC_TRY_COMPILE([#include <stdbool.h>],
[bool foo = false;],
ac_cv_header_stdbool_h=yes, ac_cv_header_stdbool_h=no)])
if test $ac_cv_header_stdbool_h = yes; then
  AC_DEFINE(HAVE_STDBOOL_H, 1,
  [Define if you have a working <stdbool.h> header file.])
fi
AC_CACHE_CHECK(for built-in _Bool, gcc_cv_c__bool,
[AC_TRY_COMPILE(,
[_Bool foo;],
gcc_cv_c__bool=yes, gcc_cv_c__bool=no)
])
if test $gcc_cv_c__bool = yes; then
  AC_DEFINE(HAVE__BOOL, 1, [Define if the \`_Bool' type is built-in.])
fi
])

dnl See if hard links work and if not, try to substitute $1 or simple copy.
AC_DEFUN([ACX_PROG_LN],
[AC_MSG_CHECKING(whether ln works)
AC_CACHE_VAL(acx_cv_prog_LN,
[rm -f conftestdata_t
echo >conftestdata_f
if ln conftestdata_f conftestdata_t 2>/dev/null
then
  acx_cv_prog_LN=ln
else
  acx_cv_prog_LN=no
fi
rm -f conftestdata_f conftestdata_t
])dnl
if test $acx_cv_prog_LN = no; then
  LN="ifelse([$1],,cp,[$1])"
  AC_MSG_RESULT([no, using $LN])
else
  LN="$acx_cv_prog_LN"
  AC_MSG_RESULT(yes)
fi
AC_SUBST(LN)dnl
])

@


1.4.14.1
log
@Merge with mainline cagney_tramp-20040321-mergepoint.
@
text
@a157 35

# Test for GNAT.
# We require the gnatbind program, and a compiler driver that
# understands Ada.  We use the user's CC setting, already found.
#
# Sets the shell variable have_gnat to yes or no as appropriate, and
# substitutes GNATBIND.
AC_DEFUN([ACX_PROG_GNAT],
[AC_REQUIRE([AC_CHECK_TOOL_PREFIX])
AC_REQUIRE([AC_PROG_CC])
AC_CHECK_TOOL(GNATBIND, gnatbind, no)
AC_CACHE_CHECK([whether compiler driver understands Ada],
		 acx_cv_cc_gcc_supports_ada,
[cat >conftest.adb <<EOF
procedure conftest is begin null; end conftest;
EOF
acx_cv_cc_gcc_supports_ada=no
# There is a bug in old released versions of GCC which causes the
# driver to exit successfully when the appropriate language module
# has not been installed.  This is fixed in 2.95.4, 3.0.2, and 3.1.
# Therefore we must check for the error message as well as an
# unsuccessful exit.
errors=`(${CC} -c conftest.adb) 2>&1 || echo failure`
if test x"$errors" = x; then
  acx_cv_cc_gcc_supports_ada=yes
  break
fi
rm -f conftest.*])

if test x$GNATBIND != xno && test x$acx_cv_gcc_supports_ada != xno; then
  have_gnat=yes
else
  have_gnat=no
fi
])
@


1.4.2.1
log
@Merge drow-cplus-branch to:
  cvs rtag -D 2003-12-14 00:00:00 UTC drow-cplus-merge-20031214 gdb+dejagnu
@
text
@@


1.3
log
@<top level>
	* configure.in: Switch more things to use maybe dependencies.
	Rearrange a little.  Use GCC_TOPLEV_SUBDIRS.
	* configure: Regenerate.
	* Makefile.tpl: Switch more things to use maybe dependencies.
	* Makefile.in: Regenerate.

<config>
	* config/acx.m4: Introduce _GCC_TOPLEV_NONCANONICAL_BUILD,
	_GCC_TOPLEV_NONCANOICAL_HOST, _GCC_TOPLEV_NONCANONICAL_TARGET,
	GCC_TOPLEV_SUBDIRS.
@
text
@d143 15
@


1.2
log
@* acx.m4: Name cache variables properly.
(NCN_STRICT_CHECK_TOOL): If program is not found and
value-if-not-found is empty, use ${ncn_tool_prefix}$2 or $2,
depending on whether build != host or not.
(NCN_STRICT_CHECK_TARGET_TOOL): Ditto, with the target prefix.
@
text
@d4 61
@


1.2.6.1
log
@2003-02-07  David Carlton  <carlton@@math.stanford.edu>

	* Merge with mainline; tag is carlton_dictionary-20030207-merge.
@
text
@@


1.2.6.2
log
@2003-05-23  David Carlton  <carlton@@bactrian.org>

	* Merge with mainline; tag is carlton_dictionary-20030523-merge.
@
text
@a3 61
dnl ####
dnl # _GCC_TOPLEV_NONCANONICAL_BUILD
dnl # $build_alias or canonical $build if blank.
dnl # Used when we would use $build_alias, but empty is not OK.
AC_DEFUN([_GCC_TOPLEV_NONCANONICAL_BUILD],
[AC_REQUIRE([AC_CANONICAL_BUILD]) []dnl
case ${build_alias} in
  "") build_noncanonical=${build} ;;
  *) build_noncanonical=${build_alias} ;;
esac
]) []dnl # _GCC_TOPLEV_NONCANONICAL_BUILD

dnl ####
dnl # _GCC_TOPLEV_NONCANONICAL_HOST
dnl # $host_alias, or $build_noncanonical if blank.
dnl # Used when we would use $host_alias, but empty is not OK.
AC_DEFUN([_GCC_TOPLEV_NONCANONICAL_HOST],
[AC_REQUIRE([_GCC_TOPLEV_NONCANONICAL_BUILD]) []dnl
case ${host_alias} in
  "") host_noncanonical=${build_noncanonical} ;;
  *) host_noncanonical=${host_alias} ;;
esac
]) []dnl # _GCC_TOPLEV_NONCANONICAL_HOST

dnl ####
dnl # _GCC_TOPLEV_NONCANONICAL_TARGET
dnl # $target_alias or $host_noncanonical if blank.
dnl # Used when we would use $target_alias, but empty is not OK.
AC_DEFUN([_GCC_TOPLEV_NONCANONICAL_TARGET],
[AC_REQUIRE([_GCC_TOPLEV_NONCANONICAL_HOST]) []dnl
case ${target_alias} in
  "") target_noncanonical=${host_noncanonical} ;;
  *) target_noncanonical=${target_alias} ;;
esac
]) []dnl # _GCC_TOPLEV_NONCANONICAL_TARGET

dnl ####
dnl # GCC_TOPLEV_SUBDIRS
dnl # GCC & friends build 'build', 'host', and 'target' tools.  These must
dnl # be separated into three well-known subdirectories of the build directory:
dnl # build_subdir, host_subdir, and target_subdir.  The values are determined
dnl # here so that they can (theoretically) be changed in the future.  They
dnl # were previously reproduced across many different files.
dnl #
dnl # This logic really amounts to very little with autoconf 2.13; it will
dnl # amount to a lot more with autoconf 2.5x.
AC_DEFUN([GCC_TOPLEV_SUBDIRS],
[AC_REQUIRE([_GCC_TOPLEV_NONCANONICAL_TARGET]) []dnl
AC_REQUIRE([_GCC_TOPLEV_NONCANONICAL_BUILD]) []dnl
# Prefix 'build-' so this never conflicts with target_subdir.
build_subdir="build-${build_noncanonical}"
# Not really a subdirectory, but here for completeness.
host_subdir=.
# No prefix.
target_subdir=${target_noncanonical}
AC_SUBST([build_subdir]) []dnl
AC_SUBST([host_subdir]) []dnl
AC_SUBST([target_subdir]) []dnl
]) []dnl # GCC_TOPLEV_SUBDIRS


@


1.2.6.3
log
@2003-11-11  David Carlton  <carlton@@kealia.com>

	* Merge with mainline; tag is carlton-dictionary-20031111-merge.
@
text
@a142 15

###
# AC_PROG_CPP_WERROR
# Used for autoconf 2.5x to force AC_PREPROC_IFELSE to reject code which
# triggers warnings from the preprocessor.  Will be in autoconf 2.58.
# For now, using this also overrides header checks to use only the
# preprocessor (matches 2.13 behavior; matching 2.58's behavior is a
# bit harder from here).
# Eventually autoconf will default to checking headers with the compiler
# instead, and we'll have to do this differently.

AC_DEFUN([AC_PROG_CPP_WERROR],
[AC_REQUIRE([AC_PROG_CPP])dnl
m4_define([AC_CHECK_HEADER],m4_defn([_AC_CHECK_HEADER_OLD]))
ac_c_preproc_warn_flag=yes])# AC_PROG_CPP_WERROR
@


1.1
log
@missed in previous giant commit
@
text
@d27 3
a29 3
  ncn_ct_$1=$$1
  AC_CHECK_PROG([ncn_ct_$1], [$2], [$2], [$3], [$4])
  $1=$ncn_ct_$1
d48 3
a50 3
    ncn_ct_$1=$$1
    AC_CHECK_PROG([ncn_ct_$1], [$2], [$2], [$3], [$4]) 
    $1=$ncn_ct_$1
d52 1
a52 1
    $1="$3"
d72 3
a74 3
    ncn_ct_$1=$$1
    AC_CHECK_PROG([ncn_ct_$1], [$2], [$2], [$3], [$4]) 
    $1=$ncn_ct_$1
d76 1
a76 1
    $1="$3"
a81 2


@

