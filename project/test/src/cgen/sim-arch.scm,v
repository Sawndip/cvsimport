head	1.8;
access;
symbols
	sid-snapshot-20180601:1.8
	cgen-snapshot-20180601:1.8
	sid-snapshot-20180501:1.8
	cgen-snapshot-20180501:1.8
	sid-snapshot-20180401:1.8
	cgen-snapshot-20180401:1.8
	sid-snapshot-20180301:1.8
	cgen-snapshot-20180301:1.8
	sid-snapshot-20180201:1.8
	cgen-snapshot-20180201:1.8
	sid-snapshot-20180101:1.8
	cgen-snapshot-20180101:1.8
	sid-snapshot-20171201:1.8
	cgen-snapshot-20171201:1.8
	sid-snapshot-20171101:1.8
	cgen-snapshot-20171101:1.8
	sid-snapshot-20171001:1.8
	cgen-snapshot-20171001:1.8
	sid-snapshot-20170901:1.8
	cgen-snapshot-20170901:1.8
	sid-snapshot-20170801:1.8
	cgen-snapshot-20170801:1.8
	sid-snapshot-20170701:1.8
	cgen-snapshot-20170701:1.8
	sid-snapshot-20170601:1.8
	cgen-snapshot-20170601:1.8
	sid-snapshot-20170501:1.8
	cgen-snapshot-20170501:1.8
	sid-snapshot-20170401:1.8
	cgen-snapshot-20170401:1.8
	sid-snapshot-20170301:1.8
	cgen-snapshot-20170301:1.8
	sid-snapshot-20170201:1.8
	cgen-snapshot-20170201:1.8
	sid-snapshot-20170101:1.8
	cgen-snapshot-20170101:1.8
	sid-snapshot-20161201:1.8
	cgen-snapshot-20161201:1.8
	sid-snapshot-20161101:1.8
	cgen-snapshot-20161101:1.8
	sid-snapshot-20160901:1.8
	cgen-snapshot-20160901:1.8
	sid-snapshot-20160801:1.8
	cgen-snapshot-20160801:1.8
	sid-snapshot-20160701:1.8
	cgen-snapshot-20160701:1.8
	sid-snapshot-20160601:1.8
	cgen-snapshot-20160601:1.8
	sid-snapshot-20160501:1.8
	cgen-snapshot-20160501:1.8
	sid-snapshot-20160401:1.8
	cgen-snapshot-20160401:1.8
	sid-snapshot-20160301:1.8
	cgen-snapshot-20160301:1.8
	sid-snapshot-20160201:1.8
	cgen-snapshot-20160201:1.8
	sid-snapshot-20160101:1.8
	cgen-snapshot-20160101:1.8
	sid-snapshot-20151201:1.8
	cgen-snapshot-20151201:1.8
	sid-snapshot-20151101:1.8
	cgen-snapshot-20151101:1.8
	sid-snapshot-20151001:1.8
	cgen-snapshot-20151001:1.8
	sid-snapshot-20150901:1.8
	cgen-snapshot-20150901:1.8
	sid-snapshot-20150801:1.8
	cgen-snapshot-20150801:1.8
	sid-snapshot-20150701:1.8
	cgen-snapshot-20150701:1.8
	sid-snapshot-20150601:1.8
	cgen-snapshot-20150601:1.8
	sid-snapshot-20150501:1.8
	cgen-snapshot-20150501:1.8
	sid-snapshot-20150401:1.8
	cgen-snapshot-20150401:1.8
	sid-snapshot-20150301:1.8
	cgen-snapshot-20150301:1.8
	sid-snapshot-20150201:1.8
	cgen-snapshot-20150201:1.8
	sid-snapshot-20150101:1.8
	cgen-snapshot-20150101:1.8
	sid-snapshot-20141201:1.8
	cgen-snapshot-20141201:1.8
	sid-snapshot-20141101:1.8
	cgen-snapshot-20141101:1.8
	sid-snapshot-20141001:1.8
	cgen-snapshot-20141001:1.8
	sid-snapshot-20140901:1.8
	cgen-snapshot-20140901:1.8
	sid-snapshot-20140801:1.8
	cgen-snapshot-20140801:1.8
	sid-snapshot-20140701:1.8
	cgen-snapshot-20140701:1.8
	sid-snapshot-20140601:1.8
	cgen-snapshot-20140601:1.8
	sid-snapshot-20140501:1.7
	cgen-snapshot-20140501:1.7
	sid-snapshot-20140401:1.7
	cgen-snapshot-20140401:1.7
	sid-snapshot-20140301:1.7
	cgen-snapshot-20140301:1.7
	sid-snapshot-20140201:1.7
	cgen-snapshot-20140201:1.7
	sid-snapshot-20140101:1.7
	cgen-snapshot-20140101:1.7
	sid-snapshot-20131201:1.7
	cgen-snapshot-20131201:1.7
	sid-snapshot-20131101:1.7
	cgen-snapshot-20131101:1.7
	sid-snapshot-20131001:1.7
	cgen-snapshot-20131001:1.7
	sid-snapshot-20130901:1.7
	cgen-snapshot-20130901:1.7
	sid-snapshot-20130801:1.7
	cgen-snapshot-20130801:1.7
	sid-snapshot-20130701:1.7
	cgen-snapshot-20130701:1.7
	sid-snapshot-20130601:1.7
	cgen-snapshot-20130601:1.7
	sid-snapshot-20130501:1.7
	cgen-snapshot-20130501:1.7
	sid-snapshot-20130401:1.7
	cgen-snapshot-20130401:1.7
	sid-snapshot-20130301:1.7
	cgen-snapshot-20130301:1.7
	sid-snapshot-20130201:1.7
	cgen-snapshot-20130201:1.7
	sid-snapshot-20130101:1.7
	cgen-snapshot-20130101:1.7
	sid-snapshot-20121201:1.7
	cgen-snapshot-20121201:1.7
	sid-snapshot-20121101:1.7
	cgen-snapshot-20121101:1.7
	sid-snapshot-20121001:1.7
	cgen-snapshot-20121001:1.7
	sid-snapshot-20120901:1.7
	cgen-snapshot-20120901:1.7
	sid-snapshot-20120801:1.7
	cgen-snapshot-20120801:1.7
	sid-snapshot-20120701:1.7
	cgen-snapshot-20120701:1.7
	sid-snapshot-20120601:1.7
	cgen-snapshot-20120601:1.7
	sid-snapshot-20120501:1.7
	cgen-snapshot-20120501:1.7
	sid-snapshot-20120401:1.7
	cgen-snapshot-20120401:1.7
	sid-snapshot-20120301:1.7
	cgen-snapshot-20120301:1.7
	sid-snapshot-20120201:1.7
	cgen-snapshot-20120201:1.7
	sid-snapshot-20120101:1.7
	cgen-snapshot-20120101:1.7
	sid-snapshot-20111201:1.7
	cgen-snapshot-20111201:1.7
	sid-snapshot-20111101:1.7
	cgen-snapshot-20111101:1.7
	sid-snapshot-20111001:1.7
	cgen-snapshot-20111001:1.7
	sid-snapshot-20110901:1.7
	cgen-snapshot-20110901:1.7
	sid-snapshot-20110801:1.7
	cgen-snapshot-20110801:1.7
	sid-snapshot-20110701:1.7
	cgen-snapshot-20110701:1.7
	sid-snapshot-20110601:1.7
	cgen-snapshot-20110601:1.7
	sid-snapshot-20110501:1.7
	cgen-snapshot-20110501:1.7
	sid-snapshot-20110401:1.7
	cgen-snapshot-20110401:1.7
	sid-snapshot-20110301:1.7
	cgen-snapshot-20110301:1.7
	sid-snapshot-20110201:1.7
	cgen-snapshot-20110201:1.7
	sid-snapshot-20110101:1.7
	cgen-snapshot-20110101:1.7
	sid-snapshot-20101201:1.7
	cgen-snapshot-20101201:1.7
	sid-snapshot-20101101:1.7
	cgen-snapshot-20101101:1.7
	sid-snapshot-20101001:1.7
	cgen-snapshot-20101001:1.7
	sid-snapshot-20100901:1.7
	cgen-snapshot-20100901:1.7
	sid-snapshot-20100801:1.7
	cgen-snapshot-20100801:1.7
	sid-snapshot-20100701:1.7
	cgen-snapshot-20100701:1.7
	sid-snapshot-20100601:1.7
	cgen-snapshot-20100601:1.7
	sid-snapshot-20100501:1.7
	cgen-snapshot-20100501:1.7
	sid-snapshot-20100401:1.7
	cgen-snapshot-20100401:1.7
	sid-snapshot-20100301:1.7
	cgen-snapshot-20100301:1.7
	sid-snapshot-20100201:1.7
	cgen-snapshot-20100201:1.7
	sid-snapshot-20100101:1.7
	cgen-snapshot-20100101:1.7
	sid-snapshot-20091201:1.7
	cgen-snapshot-20091201:1.7
	sid-snapshot-20091101:1.5
	cgen-snapshot-20091101:1.5
	sid-snapshot-20091001:1.5
	cgen-snapshot-20091001:1.5
	arc-sim-20090309:1.2
	sid-snapshot-20090901:1.4
	cgen-snapshot-20090901:1.4
	sid-snapshot-20090801:1.4
	cgen-snapshot-20090801:1.4
	sid-snapshot-20090701:1.4
	cgen-snapshot-20090701:1.4
	dje-cgen-play1-branch:1.4.0.2
	dje-cgen-play1-branchpoint:1.4
	cgen-1_1-branch:1.3.0.2
	cgen-1_1-branchpoint:1.3
	sid-snapshot-20090601:1.2
	cgen-snapshot-20090601:1.2
	sid-snapshot-20090501:1.2
	cgen-snapshot-20090501:1.2
	sid-snapshot-20090401:1.2
	cgen-snapshot-20090401:1.2
	arc-insight_6_8-branch:1.2.0.4
	arc-insight_6_8-branchpoint:1.2
	sid-snapshot-20090301:1.2
	cgen-snapshot-20090301:1.2
	sid-snapshot-20090201:1.2
	cgen-snapshot-20090201:1.2
	sid-snapshot-20090101:1.2
	cgen-snapshot-20090101:1.2
	sid-snapshot-20081201:1.2
	cgen-snapshot-20081201:1.2
	sid-snapshot-20081101:1.2
	cgen-snapshot-20081101:1.2
	sid-snapshot-20081001:1.2
	cgen-snapshot-20081001:1.2
	sid-snapshot-20080901:1.2
	cgen-snapshot-20080901:1.2
	sid-snapshot-20080801:1.2
	cgen-snapshot-20080801:1.2
	sid-snapshot-20080701:1.2
	cgen-snapshot-20080701:1.2
	sid-snapshot-20080601:1.2
	cgen-snapshot-20080601:1.2
	sid-snapshot-20080501:1.2
	cgen-snapshot-20080501:1.2
	sid-snapshot-20080403:1.2
	sid-snapshot-20080401:1.2
	cgen-snapshot-20080401:1.2
	sid-snapshot-20080301:1.2
	cgen-snapshot-20080301:1.2
	sid-snapshot-20080201:1.2
	cgen-snapshot-20080201:1.2
	sid-snapshot-20080101:1.2
	cgen-snapshot-20080101:1.2
	sid-snapshot-20071201:1.2
	cgen-snapshot-20071201:1.2
	sid-snapshot-20071101:1.2
	cgen-snapshot-20071101:1.2
	sid-snapshot-20071001:1.2
	cgen-snapshot-20071001:1.2
	msnyder-fork-checkpoint-branch:1.2.0.2
	msnyder-fork-checkpoint-branchpoint:1.2
	sid-20020905-branchpoint:1.1.1.1
	sid-20020905-branch:1.1.1.1.0.6
	cagney_regbuf-20020515-branch:1.1.1.1.0.4
	cagney_regbuf-20020515-branchpoint:1.1.1.1
	cygnus_cvs_20020108_pre:1.1.1.1
	cgen-1-1-branch:1.1.1.1.0.2
	cgen-1-0:1.1.1.1
	cygnus:1.1.1;
locks; strict;
comment	@# @;


1.8
date	2014.05.19.01.24.00;	author amodra;	state Exp;
branches;
next	1.7;

1.7
date	2009.11.23.00.59.57;	author devans;	state Exp;
branches;
next	1.6;

1.6
date	2009.11.21.23.41.18;	author devans;	state Exp;
branches;
next	1.5;

1.5
date	2009.09.07.22.17.34;	author devans;	state Exp;
branches;
next	1.4;

1.4
date	2009.06.24.15.03.09;	author devans;	state Exp;
branches;
next	1.3;

1.3
date	2009.06.20.21.34.28;	author devans;	state Exp;
branches
	1.3.2.1;
next	1.2;

1.2
date	2003.05.15.07.25.02;	author devans;	state Exp;
branches;
next	1.1;

1.1
date	2000.07.28.04.11.52;	author bje;	state Exp;
branches
	1.1.1.1;
next	;

1.3.2.1
date	2009.06.24.14.57.46;	author devans;	state Exp;
branches;
next	;

1.1.1.1
date	2000.07.28.04.11.52;	author bje;	state Exp;
branches;
next	;


desc
@@


1.8
log
@or1k support
        * sim-arch.scm (WI, UWI, AI, IAI): Define.
        * rtl-c.scm (mul-o1flag, mul-o2flag, rem): New.
        * rtx-funcs.scn (mul-o1flag, mul-o2flag, rem): New.
@
text
@; Simulator generator support routines.
; Copyright (C) 2000, 2009, 2014 Red Hat, Inc.
; This file is part of CGEN.

; Utilities of cgen-arch.h.

; Return C macro definitions of the various supported cpus.

(define (/gen-cpuall-defines)
  "" ; nothing yet
)

; Return C declarations of misc. support stuff.
; ??? Modes are now defined in sim/common/cgen-types.h but we will need
; target specific modes.

(define (/gen-support-decls)
  (string-append
;   (gen-enum-decl 'mode_type "mode types"
;		  "MODE_"
;		  ; Aliases are not distinct from their real mode so ignore
;		  ; them here.
;		  (append (map list (map obj:name
;					 (mode-list-non-alias-values)))
;			  '((max))))
;   "#define MAX_MODES ((int) MODE_MAX)\n\n"
   )
)

; Utilities of cgen-cpuall.h.

; Subroutine of /gen-cpuall-includes.

(define (/gen-cpu-header cpu prefix)
  (string-append "#include \"" prefix (cpu-file-transform cpu) ".h\"\n")
)

; Return C code to include all the relevant headers for each cpu family,
; conditioned on ifdef WANT_CPU_@@CPU@@.

(define (/gen-cpuall-includes)
  (string-list
   "/* Include files for each cpu family.  */\n\n"
   (string-list-map
    (lambda (cpu)
      (let* ((cpu-name (gen-sym cpu))
	     (CPU-NAME (string-upcase cpu-name)))
	(string-list "#ifdef WANT_CPU_" CPU-NAME "\n"
		     (/gen-cpu-header cpu "eng")
		     (/gen-cpu-header cpu "cpu")
		     (/gen-cpu-header cpu "decode")
		     "#endif\n\n")))
    (current-cpu-list))
   )
)

; Subroutine of /gen-cpuall-decls to generate cpu-specific structure entries.
; The result is "struct <cpu>_<type-name> <member-name>;".
; INDENT is the amount to indent by.
; CPU is the cpu object.

(define (/gen-cpu-specific-decl indent cpu type-name member-name)
  (let* ((cpu-name (gen-sym cpu))
	 (CPU-NAME (string-upcase cpu-name)))
    (string-append
     "#ifdef WANT_CPU_" CPU-NAME "\n"
     (spaces indent)
     "struct " cpu-name "_" type-name " " member-name ";\n"
     "#endif\n"))
)

; Return C declarations of cpu-specific structs.
; These are defined here to achieve a simple and moderately type-safe
; inheritance.  In the non-cpu-specific files, these structs consist of
; just the baseclass.  In cpu-specific files, the baseclass is augmented
; with the cpu-specific data.

(define (/gen-cpuall-decls)
  (string-list
   (gen-argbuf-type #f)
   (gen-scache-type #f)
   )
)

; Top level generators for non-cpu-specific files.

; Generate arch.h
; This file defines non cpu family specific data about the architecture
; and also data structures that combine all variants (e.g. cpu struct).
; It is intended to be included before sim-basics.h and sim-base.h.

(define (cgen-arch.h)
  (logit 1 "Generating " (current-arch-name) "'s arch.h ...\n")

  (string-write
   (gen-c-copyright "Simulator header for @@arch@@."
		  CURRENT-COPYRIGHT CURRENT-PACKAGE)
   "#ifndef @@ARCH@@_ARCH_H\n"
   "#define @@ARCH@@_ARCH_H\n"
   "\n"
   "#define TARGET_BIG_ENDIAN 1\n\n" ; FIXME
   ;(gen-mem-macros)
   "#define WI  " (mode:c-type WI)  "\n"
   "#define UWI " (mode:c-type UWI) "\n"
   "#define AI  " (mode:c-type AI)  "\n" "\n"
   "#define IAI " (mode:c-type IAI)  "\n" "\n"
   /gen-cpuall-defines
   /gen-support-decls
   /gen-arch-model-decls
   "#endif /* @@ARCH@@_ARCH_H */\n"
   )
)

; Generate arch.c
; This file defines non cpu family specific data about the architecture.

(define (cgen-arch.c)
  (logit 1 "Generating " (current-arch-name) "'s arch.c ...\n")

  (string-write
   (gen-c-copyright "Simulator support for @@arch@@."
		  CURRENT-COPYRIGHT CURRENT-PACKAGE)
   "\
#include \"sim-main.h\"
#include \"bfd.h\"

"
   /gen-mach-data
   )
)

; Generate cpuall.h
; This file pulls together all of the cpu variants .h's.
; It is intended to be included after sim-base.h/cgen-sim.h.

(define (cgen-cpuall.h)
  (logit 1 "Generating " (current-arch-name) "'s cpuall.h ...\n")

  (string-write
   (gen-c-copyright "Simulator CPU header for @@arch@@."
		  CURRENT-COPYRIGHT CURRENT-PACKAGE)
   "#ifndef @@ARCH@@_CPUALL_H\n"
   "#define @@ARCH@@_CPUALL_H\n"
   "\n"
   /gen-cpuall-includes
   /gen-mach-decls
   /gen-cpuall-decls
   "#endif /* @@ARCH@@_CPUALL_H */\n"
   )
)

; Generate ops.c
; No longer used.

(define (cgen-ops.c)
  (logit 1 "Generating " (current-arch-name) "'s ops.c ...\n")

  (string-write
   (gen-c-copyright "Simulator operational support for @@arch@@."
		  CURRENT-COPYRIGHT CURRENT-PACKAGE)
   "\
#define MEMOPS_DEFINE_INLINE

#include \"config.h\"
#include <signal.h>
#include \"ansidecl.h\"
#include \"bfd.h\"
#include \"tconfig.h\"
#include \"cgen-sim.h\"
#include \"memops.h\"

/* FIXME: wip */
int pow2masks[] = {
  0, 0, 1, -1, 3, -1, -1, -1, 7, -1, -1, -1, -1, -1, -1, -1, 15
};

"
   gen-mode-defs
   )
)
@


1.7
log
@	* mach.scm (<derived-arch-data>): New member large-insn-word?.
	(/adata-set-derived!): Set it.
	(adata-large-insn-word?): New function.
	* sim-arch.scm (/gen-cpuall-includes): Don't #include cgen-engine.h
	here.
	* sim-cpu.scm (cgen-cpu.h): #include it here.
	(/gen-cpu-defines): Define CGEN_INSN_WORD.
	(/gen-no-scache-semantic-fn): Use CGEN_INSN_WORD instead of
	CGEN_INSN_INT.
	* sim-decode.scm (/gen-idesc-decls): Ditto.
	(/gen-extract-case, /gen-decode-fn): Ditto.
	* sim-model.scm (/gen-model-insn-fn): Ditto.
	* sim.scm (gen-argbuf-type): Ditto.
@
text
@d2 1
a2 1
; Copyright (C) 2000, 2009 Red Hat, Inc.
d103 4
a106 4
   ;"/* FIXME: split into 32/64 parts */\n"
   ;"#define WI SI\n"
   ;"#define UWI USI\n"
   ;"#define AI USI\n\n"
@


1.6
log
@remove old FIXME
@
text
@d44 10
a53 10
   (string-list-map (lambda (cpu)
		      (let* ((cpu-name (gen-sym cpu))
			     (CPU-NAME (string-upcase cpu-name)))
			(string-list "#ifdef WANT_CPU_" CPU-NAME "\n"
				     (/gen-cpu-header cpu "eng")
				     "#include \"cgen-engine.h\"\n"
				     (/gen-cpu-header cpu "cpu")
				     (/gen-cpu-header cpu "decode")
				     "#endif\n\n")))
		    (current-cpu-list))
@


1.5
log
@	* read.scm (rtl-version-equal?): New function.
	(rtl-version-at-least?, rtl-version-older?): New functions.

	* *.scm: Use / to prefix "local" vars/fns, for r6rs compliance.
	* pmacros.scm (/pmacro-builtin-splice): Refer to $unsplice for
	rtl versions >= 0.9.
	(pmacros-init!): Tweak to prepare for $<pmacro> for builtin pmacros.
@
text
@a50 1
				     ; FIXME: Shorten "decode" to "dec".
@


1.4
log
@	* All *.scm files: Update copyright year.
	* utils.scm (copyright-fsf, copyright-redhat): Ditto.
@
text
@d9 1
a9 1
(define (-gen-cpuall-defines)
d17 1
a17 1
(define (-gen-support-decls)
d32 1
a32 1
; Subroutine of -gen-cpuall-includes.
d34 1
a34 1
(define (-gen-cpu-header cpu prefix)
d41 1
a41 1
(define (-gen-cpuall-includes)
d48 1
a48 1
				     (-gen-cpu-header cpu "eng")
d50 1
a50 1
				     (-gen-cpu-header cpu "cpu")
d52 1
a52 1
				     (-gen-cpu-header cpu "decode")
d58 1
a58 1
; Subroutine of -gen-cpuall-decls to generate cpu-specific structure entries.
d63 1
a63 1
(define (-gen-cpu-specific-decl indent cpu type-name member-name)
d79 1
a79 1
(define (-gen-cpuall-decls)
d108 3
a110 3
   -gen-cpuall-defines
   -gen-support-decls
   -gen-arch-model-decls
d129 1
a129 1
   -gen-mach-data
d146 3
a148 3
   -gen-cpuall-includes
   -gen-mach-decls
   -gen-cpuall-decls
@


1.3
log
@	* desc-cpu.scm (cgen-desc.h): Tweak logit message for consistency.
	(cgen-desc.c): Ditto.
	* sid-cpu.scm (cgen-desc.h, cgen-cpu.h, cgen-defs.h): Ditto.
	(cgen-write.cxx, cgen-semantics.cxx, cgen-sem-switch.cxx): Ditto.
	* sid-decode.scm (cgen-decode.h, cgen-decode.cxx): Ditto.
	* sid-model.scm (cgen-model.cxx, cgen-model.h): Ditto.
	* sim-arch.scm (cgen-arch.h, cgen-arch.c): Ditto.
	(cgen-cpuall.h, cgen-ops.c): Ditto.
	* sim-cpu.scm (cgen-cpu.h, cgen-defs.h, cgen-cpu.c): Ditto.
	(cgen-read.c, cgen-write.c, cgen-semantics.c): Ditto.
	(cgen-sem-switch.c): Ditto.
	* sim-decode.scm (cgen-decode.h, cgen-decode.c): Ditto.
	* sim-model.c (cgen-model.c): Ditto.
@
text
@d2 1
a2 1
; Copyright (C) 2000 Red Hat, Inc.
@


1.3.2.1
log
@	* All *.scm files: Update copyright year.
	* utils.scm (copyright-fsf, copyright-redhat): Ditto.
@
text
@d2 1
a2 1
; Copyright (C) 2000, 2009 Red Hat, Inc.
@


1.2
log
@	* Makefile.am (srcroot): New var.
	(html): New rule.
	* Makefile.in: Regenerate.
	* cgen-doc.scm: New file.
	* html.scm: New file.
	* gen-all-doc: New file.
	* dev.scm (cload): Handle DOC application.
	(load-doc): New fn.
	* machs.scm (machs-for-cpu): New fn.
	* model.scm (models-for-cpu): New fn.
	* utils.scm (gen-c-copyright): Renamed from gen-copyright.
	All uses updated.
	(iota): Rewrite to be identical to pmacro version.  All uses updated.
	* utils-cgen.scm (alpha-sort-obj-list): New fn.
@
text
@d94 1
a94 1
  (logit 1 "Generating arch.h ...\n")
d119 1
a119 1
  (logit 1 "Generating arch.c ...\n")
d138 1
a138 1
  (logit 1 "Generating cpuall.h ...\n")
d157 1
a157 1
  (logit 1 "Generating ops.c ...\n")
@


1.1
log
@Initial revision
@
text
@d97 1
a97 1
   (gen-copyright "Simulator header for @@arch@@."
d122 1
a122 1
   (gen-copyright "Simulator support for @@arch@@."
d141 1
a141 1
   (gen-copyright "Simulator CPU header for @@arch@@."
d160 1
a160 1
   (gen-copyright "Simulator operational support for @@arch@@."
@


1.1.1.1
log
@CGEN 1.0 import
@
text
@@
