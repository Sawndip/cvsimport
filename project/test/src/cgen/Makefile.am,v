head	1.11;
access;
symbols
	sid-snapshot-20180601:1.11
	cgen-snapshot-20180601:1.11
	sid-snapshot-20180501:1.11
	cgen-snapshot-20180501:1.11
	sid-snapshot-20180401:1.11
	cgen-snapshot-20180401:1.11
	sid-snapshot-20180301:1.11
	cgen-snapshot-20180301:1.11
	sid-snapshot-20180201:1.11
	cgen-snapshot-20180201:1.11
	sid-snapshot-20180101:1.11
	cgen-snapshot-20180101:1.11
	sid-snapshot-20171201:1.11
	cgen-snapshot-20171201:1.11
	sid-snapshot-20171101:1.11
	cgen-snapshot-20171101:1.11
	sid-snapshot-20171001:1.11
	cgen-snapshot-20171001:1.11
	sid-snapshot-20170901:1.11
	cgen-snapshot-20170901:1.11
	sid-snapshot-20170801:1.11
	cgen-snapshot-20170801:1.11
	sid-snapshot-20170701:1.11
	cgen-snapshot-20170701:1.11
	sid-snapshot-20170601:1.11
	cgen-snapshot-20170601:1.11
	sid-snapshot-20170501:1.11
	cgen-snapshot-20170501:1.11
	sid-snapshot-20170401:1.11
	cgen-snapshot-20170401:1.11
	sid-snapshot-20170301:1.11
	cgen-snapshot-20170301:1.11
	sid-snapshot-20170201:1.11
	cgen-snapshot-20170201:1.11
	sid-snapshot-20170101:1.11
	cgen-snapshot-20170101:1.11
	sid-snapshot-20161201:1.11
	cgen-snapshot-20161201:1.11
	sid-snapshot-20161101:1.11
	cgen-snapshot-20161101:1.11
	sid-snapshot-20160901:1.11
	cgen-snapshot-20160901:1.11
	sid-snapshot-20160801:1.11
	cgen-snapshot-20160801:1.11
	sid-snapshot-20160701:1.11
	cgen-snapshot-20160701:1.11
	sid-snapshot-20160601:1.11
	cgen-snapshot-20160601:1.11
	sid-snapshot-20160501:1.11
	cgen-snapshot-20160501:1.11
	sid-snapshot-20160401:1.11
	cgen-snapshot-20160401:1.11
	sid-snapshot-20160301:1.11
	cgen-snapshot-20160301:1.11
	sid-snapshot-20160201:1.11
	cgen-snapshot-20160201:1.11
	sid-snapshot-20160101:1.11
	cgen-snapshot-20160101:1.11
	sid-snapshot-20151201:1.11
	cgen-snapshot-20151201:1.11
	sid-snapshot-20151101:1.11
	cgen-snapshot-20151101:1.11
	sid-snapshot-20151001:1.11
	cgen-snapshot-20151001:1.11
	sid-snapshot-20150901:1.11
	cgen-snapshot-20150901:1.11
	sid-snapshot-20150801:1.11
	cgen-snapshot-20150801:1.11
	sid-snapshot-20150701:1.11
	cgen-snapshot-20150701:1.11
	sid-snapshot-20150601:1.11
	cgen-snapshot-20150601:1.11
	sid-snapshot-20150501:1.11
	cgen-snapshot-20150501:1.11
	sid-snapshot-20150401:1.11
	cgen-snapshot-20150401:1.11
	sid-snapshot-20150301:1.11
	cgen-snapshot-20150301:1.11
	sid-snapshot-20150201:1.11
	cgen-snapshot-20150201:1.11
	sid-snapshot-20150101:1.11
	cgen-snapshot-20150101:1.11
	sid-snapshot-20141201:1.11
	cgen-snapshot-20141201:1.11
	sid-snapshot-20141101:1.11
	cgen-snapshot-20141101:1.11
	sid-snapshot-20141001:1.11
	cgen-snapshot-20141001:1.11
	sid-snapshot-20140901:1.11
	cgen-snapshot-20140901:1.11
	sid-snapshot-20140801:1.11
	cgen-snapshot-20140801:1.11
	sid-snapshot-20140701:1.11
	cgen-snapshot-20140701:1.11
	sid-snapshot-20140601:1.11
	cgen-snapshot-20140601:1.11
	sid-snapshot-20140501:1.11
	cgen-snapshot-20140501:1.11
	sid-snapshot-20140401:1.11
	cgen-snapshot-20140401:1.11
	sid-snapshot-20140301:1.11
	cgen-snapshot-20140301:1.11
	sid-snapshot-20140201:1.11
	cgen-snapshot-20140201:1.11
	sid-snapshot-20140101:1.11
	cgen-snapshot-20140101:1.11
	sid-snapshot-20131201:1.11
	cgen-snapshot-20131201:1.11
	sid-snapshot-20131101:1.11
	cgen-snapshot-20131101:1.11
	sid-snapshot-20131001:1.11
	cgen-snapshot-20131001:1.11
	sid-snapshot-20130901:1.11
	cgen-snapshot-20130901:1.11
	sid-snapshot-20130801:1.11
	cgen-snapshot-20130801:1.11
	sid-snapshot-20130701:1.11
	cgen-snapshot-20130701:1.11
	sid-snapshot-20130601:1.11
	cgen-snapshot-20130601:1.11
	sid-snapshot-20130501:1.11
	cgen-snapshot-20130501:1.11
	sid-snapshot-20130401:1.11
	cgen-snapshot-20130401:1.11
	sid-snapshot-20130301:1.11
	cgen-snapshot-20130301:1.11
	sid-snapshot-20130201:1.11
	cgen-snapshot-20130201:1.11
	sid-snapshot-20130101:1.11
	cgen-snapshot-20130101:1.11
	sid-snapshot-20121201:1.10
	cgen-snapshot-20121201:1.10
	sid-snapshot-20121101:1.10
	cgen-snapshot-20121101:1.10
	sid-snapshot-20121001:1.9
	cgen-snapshot-20121001:1.9
	sid-snapshot-20120901:1.9
	cgen-snapshot-20120901:1.9
	sid-snapshot-20120801:1.9
	cgen-snapshot-20120801:1.9
	sid-snapshot-20120701:1.9
	cgen-snapshot-20120701:1.9
	sid-snapshot-20120601:1.9
	cgen-snapshot-20120601:1.9
	sid-snapshot-20120501:1.9
	cgen-snapshot-20120501:1.9
	sid-snapshot-20120401:1.9
	cgen-snapshot-20120401:1.9
	sid-snapshot-20120301:1.9
	cgen-snapshot-20120301:1.9
	sid-snapshot-20120201:1.9
	cgen-snapshot-20120201:1.9
	sid-snapshot-20120101:1.9
	cgen-snapshot-20120101:1.9
	sid-snapshot-20111201:1.9
	cgen-snapshot-20111201:1.9
	sid-snapshot-20111101:1.9
	cgen-snapshot-20111101:1.9
	sid-snapshot-20111001:1.9
	cgen-snapshot-20111001:1.9
	sid-snapshot-20110901:1.9
	cgen-snapshot-20110901:1.9
	sid-snapshot-20110801:1.9
	cgen-snapshot-20110801:1.9
	sid-snapshot-20110701:1.9
	cgen-snapshot-20110701:1.9
	sid-snapshot-20110601:1.9
	cgen-snapshot-20110601:1.9
	sid-snapshot-20110501:1.9
	cgen-snapshot-20110501:1.9
	sid-snapshot-20110401:1.9
	cgen-snapshot-20110401:1.9
	sid-snapshot-20110301:1.9
	cgen-snapshot-20110301:1.9
	sid-snapshot-20110201:1.9
	cgen-snapshot-20110201:1.9
	sid-snapshot-20110101:1.9
	cgen-snapshot-20110101:1.9
	sid-snapshot-20101201:1.9
	cgen-snapshot-20101201:1.9
	sid-snapshot-20101101:1.9
	cgen-snapshot-20101101:1.9
	sid-snapshot-20101001:1.9
	cgen-snapshot-20101001:1.9
	sid-snapshot-20100901:1.9
	cgen-snapshot-20100901:1.9
	sid-snapshot-20100801:1.9
	cgen-snapshot-20100801:1.9
	sid-snapshot-20100701:1.9
	cgen-snapshot-20100701:1.9
	sid-snapshot-20100601:1.9
	cgen-snapshot-20100601:1.9
	sid-snapshot-20100501:1.9
	cgen-snapshot-20100501:1.9
	sid-snapshot-20100401:1.9
	cgen-snapshot-20100401:1.9
	sid-snapshot-20100301:1.9
	cgen-snapshot-20100301:1.9
	sid-snapshot-20100201:1.9
	cgen-snapshot-20100201:1.9
	sid-snapshot-20100101:1.9
	cgen-snapshot-20100101:1.9
	sid-snapshot-20091201:1.9
	cgen-snapshot-20091201:1.9
	sid-snapshot-20091101:1.9
	cgen-snapshot-20091101:1.9
	sid-snapshot-20091001:1.9
	cgen-snapshot-20091001:1.9
	arc-sim-20090309:1.5
	sid-snapshot-20090901:1.9
	cgen-snapshot-20090901:1.9
	sid-snapshot-20090801:1.8
	cgen-snapshot-20090801:1.8
	sid-snapshot-20090701:1.7
	cgen-snapshot-20090701:1.7
	dje-cgen-play1-branch:1.7.0.4
	dje-cgen-play1-branchpoint:1.7
	cgen-1_1-branch:1.7.0.2
	cgen-1_1-branchpoint:1.7
	sid-snapshot-20090601:1.5
	cgen-snapshot-20090601:1.5
	sid-snapshot-20090501:1.5
	cgen-snapshot-20090501:1.5
	sid-snapshot-20090401:1.5
	cgen-snapshot-20090401:1.5
	arc-insight_6_8-branch:1.5.0.4
	arc-insight_6_8-branchpoint:1.5
	sid-snapshot-20090301:1.5
	cgen-snapshot-20090301:1.5
	sid-snapshot-20090201:1.5
	cgen-snapshot-20090201:1.5
	sid-snapshot-20090101:1.5
	cgen-snapshot-20090101:1.5
	sid-snapshot-20081201:1.5
	cgen-snapshot-20081201:1.5
	sid-snapshot-20081101:1.5
	cgen-snapshot-20081101:1.5
	sid-snapshot-20081001:1.5
	cgen-snapshot-20081001:1.5
	sid-snapshot-20080901:1.5
	cgen-snapshot-20080901:1.5
	sid-snapshot-20080801:1.5
	cgen-snapshot-20080801:1.5
	sid-snapshot-20080701:1.5
	cgen-snapshot-20080701:1.5
	sid-snapshot-20080601:1.5
	cgen-snapshot-20080601:1.5
	sid-snapshot-20080501:1.5
	cgen-snapshot-20080501:1.5
	sid-snapshot-20080403:1.5
	sid-snapshot-20080401:1.5
	cgen-snapshot-20080401:1.5
	sid-snapshot-20080301:1.5
	cgen-snapshot-20080301:1.5
	sid-snapshot-20080201:1.5
	cgen-snapshot-20080201:1.5
	sid-snapshot-20080101:1.5
	cgen-snapshot-20080101:1.5
	sid-snapshot-20071201:1.5
	cgen-snapshot-20071201:1.5
	sid-snapshot-20071101:1.5
	cgen-snapshot-20071101:1.5
	sid-snapshot-20071001:1.5
	cgen-snapshot-20071001:1.5
	msnyder-fork-checkpoint-branch:1.5.0.2
	msnyder-fork-checkpoint-branchpoint:1.5
	sid-20020905-branchpoint:1.1.1.1
	sid-20020905-branch:1.1.1.1.0.6
	cagney_regbuf-20020515-branch:1.1.1.1.0.4
	cagney_regbuf-20020515-branchpoint:1.1.1.1
	cygnus_cvs_20020108_pre:1.1.1.1
	cgen-1-1-branch:1.1.1.1.0.2
	cgen-1-0:1.1.1.1
	cygnus:1.1.1;
locks; strict;
comment	@# @;


1.11
date	2012.12.17.16.55.41;	author nickc;	state Exp;
branches;
next	1.10;

1.10
date	2012.10.30.01.17.28;	author mrs;	state Exp;
branches;
next	1.9;

1.9
date	2009.08.22.23.41.05;	author devans;	state Exp;
branches;
next	1.8;

1.8
date	2009.07.13.20.55.21;	author devans;	state Exp;
branches;
next	1.7;

1.7
date	2009.06.15.05.00.26;	author devans;	state Exp;
branches
	1.7.4.1;
next	1.6;

1.6
date	2009.06.14.18.18.34;	author devans;	state Exp;
branches;
next	1.5;

1.5
date	2005.02.15.09.01.33;	author jimb;	state Exp;
branches;
next	1.4;

1.4
date	2003.09.11.19.14.37;	author devans;	state Exp;
branches;
next	1.3;

1.3
date	2003.06.10.21.22.02;	author devans;	state Exp;
branches;
next	1.2;

1.2
date	2003.05.15.07.25.02;	author devans;	state Exp;
branches;
next	1.1;

1.1
date	2000.07.28.04.11.52;	author bje;	state Exp;
branches
	1.1.1.1;
next	;

1.7.4.1
date	2009.07.14.16.08.50;	author devans;	state Exp;
branches;
next	;

1.1.1.1
date	2000.07.28.04.11.52;	author bje;	state Exp;
branches;
next	;


desc
@@


1.11
log
@Add copyright notices
@
text
@## Process this file with automake to generate Makefile.in
#
#   Copyright 2012 Free Software Foundation
#
# This file is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; see the file COPYING3.  If not see
# <http://www.gnu.org/licenses/>.
#

AUTOMAKE_OPTIONS = 1.9 cygnus

SUBDIRS = doc testsuite

GUILE = "`if test -f ../guile/libguile/guile ; then echo ../guile/libguile/guile; else echo guile ; fi`" -l $(srcdir)/guile.scm -s
CGENFLAGS = -v
ARCH = @@arch@@
ARCHFILE = $(srcroot)/cpu/$(ARCH).cpu

# for various utility rules
MACHS = all
ISAS = all

# file generation options
OPTIONS =

# for the html rule
INSN_FILE_NAME = $(ARCH)-insn.html

srcroot = $(srcdir)/..

# Applications depend on stamp-cgen to tell them when .scm files have
# been changed (so files need to be regenerated).
# ??? Application specific files are kept with cgen for now, but may
# eventually go with the app.  stamp-cgen might still be useful to track
# app-independent files.

all-local: stamp-cgen

install-pdf:
install-html:

stamp-cgen: $(CGENFILES)
	rm -f stamp-cgen
	echo timestamp > stamp-cgen

# Phony targets to run each of the applications,
# though most of these are for development purposes only.
# When actually building the toolchain, the Makefile in the appropriate
# directory will run cgen.
#
# NOTE: If running for a cpu other than the configured one you may wish to
# override ISAS and MACHS.

# Build the basic description support.
# We just stuff them in tmp-* files.
# Usage: make desc [ARCH=<arch>] [ARCHFILE=<arch-file>] OPTIONS="<option list>"
#
# -O tmp-opc.h -P tmp-opc.c -OPC $(dirname ${archfile})/${arch}.opc

.PHONY: desc
desc: desc.scm
	rm -f tmp-desc.h tmp-desc.c
	$(GUILE) $(srcdir)/cgen-opc.scm \
		-s $(srcdir) \
		$(CGENFLAGS) \
		-f "$(OPTIONS)" \
		-a $(ARCHFILE) \
		-i "$(ISAS)" \
		-m "$(MACHS)" \
		-H tmp-desc.h -C tmp-desc.c
	$(SHELL) $(srcroot)/move-if-change tmp-desc.h $(ARCH)-desc.h
	$(SHELL) $(srcroot)/move-if-change tmp-desc.c $(ARCH)-desc.c

# Build the machine generated cpu documentation.
# Usage: make html [ARCH=<arch>] [ARCHFILE=<arch-file>]
.PHONY: html
html: desc.scm html.scm cgen-doc.scm
	rm -f tmp-doc.html
	$(GUILE) $(srcdir)/cgen-doc.scm \
		-s $(srcdir) \
		$(CGENFLAGS) \
		-f "$(OPTIONS)" \
		-a $(ARCHFILE) \
		-i "$(ISAS)" \
		-m "$(MACHS)" \
		-N $(INSN_FILE_NAME) \
		-H tmp.html \
		-I tmp-insn.html
	$(SHELL) $(srcroot)/move-if-change tmp.html $(ARCH).html
	$(SHELL) $(srcroot)/move-if-change tmp-insn.html $(ARCH)-insn.html

# Build the opcodes files.
# We just stuff them in tmp-* files.
# Usage: make opcodes [ARCHFILE=<arch-file>] OPTIONS="<option list>"

.PHONY: opcodes
opcodes: opcodes.scm
	rm -f tmp-opc.h tmp-itab.c
	rm -f tmp-asm.in tmp-dis.in tmp-ibld.h tmp-ibld.in
	$(GUILE) $(srcdir)/cgen-opc.scm \
		-s $(srcdir) \
		$(CGENFLAGS) \
		-f "$(OPTIONS) opinst" \
		-a $(ARCHFILE) \
		-i "$(ISAS)" \
		-m "$(MACHS)" \
		-O tmp-opc.h -P tmp-opc.c -Q tmp-opinst.c \
		-B tmp-ibld.h -L tmp-ibld.in \
		-A tmp-asm.in -D tmp-dis.in

# Build the simulator files.
# We just stuff them in tmp-* files.
# Usage: make sim-arch [ARCHFILE=<arch-file>] OPTIONS="<option list>"
#        make sim-cpu [ARCHFILE=<arch-file>] ISAS="<isa>" MACHS="<mach list>" \
#          OPTIONS="<option list>"

.PHONY: sim-arch sim-cpu
sim-arch: sim.scm
	rm -f tmp-arch.h tmp-arch.c tmp-cpuall.h
	$(GUILE) $(srcdir)/cgen-sim.scm \
		-s $(srcdir) \
		$(CGENFLAGS) \
		-f "$(OPTIONS)" \
		-a $(ARCHFILE) \
		-i "$(ISAS)" \
		-m "$(MACHS)" \
		-A tmp-arch.h -B tmp-arch.c -N tmp-cpuall.h
sim-cpu: sim.scm
	rm -f tmp-cpu.h tmp-cpu.c tmp-decode.h tmp-decode.c
	rm -f tmp-model.c tmp-sem.c tmp-sem-switch.c
	$(GUILE) $(srcdir)/cgen-sim.scm \
		-s $(srcdir) \
		$(CGENFLAGS) \
		-f "$(OPTIONS)" \
		-a $(ARCHFILE) \
		-i "$(ISAS)" \
		-m "$(MACHS)" \
		-C tmp-cpu.h -U tmp-cpu.c \
		-T tmp-decode.h -D tmp-decode.c \
		-M tmp-model.c \
		-S tmp-semantics.c -X tmp-sem-switch.c

# Build GAS testcase generator.
# Usage: make gas-test [ARCHFILE=<arch-file>]

.PHONY: gas-test
gas-test: gas-test.scm cgen-gas.scm
	@@if test -z "$(ISAS)" ; then \
	  echo "ISAS not specified!" ;\
	  exit 1 ;\
	fi
	$(GUILE) $(srcdir)/cgen-gas.scm \
		-s $(srcdir) \
		$(CGENFLAGS) \
		-a $(ARCHFILE) \
		-i "$(ISAS)" \
		-m "$(MACHS)" \
		-B gas-build.sh \
		-E gas-allinsn.exp

# Build simulator testcase generator.
# Usage: make sim-test [ARCHFILE=<arch-file>]

.PHONY: sim-test
sim-test: sim-test.scm cgen-stest.scm
	@@if test -z "$(ISAS)" ; then \
	  echo "ISAS not specified!" ;\
	  exit 1 ;\
	fi
	$(GUILE) $(srcdir)/cgen-stest.scm \
		-s $(srcdir) \
		$(CGENFLAGS) \
		-a $(ARCHFILE) \
		-i "$(ISAS)" \
		-m "$(MACHS)" \
		-B sim-build.sh \
		-E sim-allinsn.exp

CLEANFILES = tmp-*
@


1.10
log
@	* Makefile.am: Add install-html and install-pdf.
	* Makefile.in: Regenerate.
@
text
@d1 18
a18 1
# Process this file with "automake --cygnus Makefile" to generate Makefile.in
@


1.9
log
@	* Makefile.am (OPTIONS): Define.
	(desc): Just generate <arch>-desc.[ch] files.
	* Makefile.in: Regenerate.
	* desc-cpu.scm (cgen-desc.h): Skip call to gen-extra-cpu.h if there's
	no .opc file.
	(cgen-desc.c): Similarly.
	* gen-all-desc: New file.
	* opcodes.scm (opc-file-provided?): New function.
@
text
@d32 3
@


1.8
log
@	Extend pmacro language, add testsuite.
	* Makefile.am (SUBDIRS): Add testsuite.
	* Makefile.in: Regenerate.
	* configure.in (AC_OUTPUT): Create testsuite/Makefile,
	testsuite/test-utils.sh.
	* configure: Regenerate.
	* dev.scm (cload): Handle testsuite app.
	(load-testsuite): New function.
	* pmacros.scm: (-pmacro-debug?): New global.
	(-smacro-table): New global.
	(-smacro-lookup, -smacro-set!): New functions.
	(-pmacro-make): New argument `syntactic-form?', all callers updated.
	(-pmacro-syntactic-form?): New function.
	(-pmacro-expected-number, -pmacro-verify-number): New functions.
	(-pmacro-expected-integer, -pmacro-verify-integer): New functions.
	(-pmacro-expected-non-negative-integer): New function.
	(-pmacro-verify-non-negative-integer): New function.
	(-pmacro-expand-expr-list): New function.
	(-pmacro-process-args-1): Renamed from -pmacro-process-args.
	(-pmacro-process-args): Renamed from -pmacro-invoke.
	(-pmacro-apply, -smacro-apply): New functions.
	(-pmacro-expand): Rewrite syntactic form processing.
	(-pmacro-build-lambda): Reformat.
	(define-pmacro): Watch for more errors in definition.
	(pmacro-debug): New function.
	(pmacro-trace): Set/reset -pmacro-debug?.
	(all existing builtin pmacro helpers): Rename to -pmacro-builtin-foo.
	(-pmacro-builtin-substring): Fix.  Add support for `end' marker.
	(-pmacro-builtin-for-each, et.al.): New helpers for .for-each, .let,
	.if, .case, .cond, .begin, .print, .dump, .error, .list, .ref,
	.length, .replicate, .equals, .and, .or, .not, .eq, .ne, .lt, .gt,
	.le, .ge, .add, .sub, .mul, .div, .rem, .sll, .srl, .sra, .bitand,
	.bitor, .bitxor, bitinv, .car, .cdr, .caar, .cadr, .cdar, .cddr.
	(pmacros-init!): Initialize -smacro-table.
	Rewrite pmacro initialization.
	* read.scm (reader-process-expanded): Renamed from
	-reader-process-expanded.  All callers updated.
	Recognize () as a no-op.
	(cpu-load): Tweak logging messages.
	* utils.scm (message): Add comment.
	* cpu/play.cpu: Add some instructions to play with .let.
	* doc/cgenint.texi: Move some debugging related docs to here from
	cgen.texi.
	* doc/pmacros.texi: Reorganize.  Add docs for new builtin pmacros.
	* testsuite/Makefile.am: New file.
	* testsuite/Makefile.in: New file.
	* testsuite/test-utils.sh.in: New file.
	* testsuite/run-tests.sh: New file.
	* testsuite/testsuite.cpu: New file.
	* testsuite/pmacros-1.test: New file.
@
text
@d16 3
d46 3
a48 1
# Usage: make desc [ARCHFILE=<arch-file>] OPTIONS="<option list>"
a50 1
# FIXME: needs more dependencies
d52 1
a52 1
	rm -f tmp-desc.h tmp-desc.c tmp-opinst.c
d61 2
a86 1
# FIXME: needs more dependencies
a107 1
# FIXME: needs more dependencies
@


1.7
log
@	* Makefile.am (ARCHFILE): Fix path.
	* Makefile.in: Regenerate.
	* html.scm: Use "pre" instead of "plaintext".
@
text
@d5 1
a5 1
SUBDIRS = doc
@


1.7.4.1
log
@Copy over from trunk.
	Extend pmacro language, add testsuite.
	* Makefile.am (SUBDIRS): Add testsuite.
	* Makefile.in: Regenerate.
	* configure.in (AC_OUTPUT): Create testsuite/Makefile,
	testsuite/test-utils.sh.
	* configure: Regenerate.
	* dev.scm (cload): Handle testsuite app.
	(load-testsuite): New function.
	* pmacros.scm: (-pmacro-debug?): New global.
	(-smacro-table): New global.
	(-smacro-lookup, -smacro-set!): New functions.
	(-pmacro-make): New argument `syntactic-form?', all callers updated.
	(-pmacro-syntactic-form?): New function.
	(-pmacro-expected-number, -pmacro-verify-number): New functions.
	(-pmacro-expected-integer, -pmacro-verify-integer): New functions.
	(-pmacro-expected-non-negative-integer): New function.
	(-pmacro-verify-non-negative-integer): New function.
	(-pmacro-expand-expr-list): New function.
	(-pmacro-process-args-1): Renamed from -pmacro-process-args.
	(-pmacro-process-args): Renamed from -pmacro-invoke.
	(-pmacro-apply, -smacro-apply): New functions.
	(-pmacro-expand): Rewrite syntactic form processing.
	(-pmacro-build-lambda): Reformat.
	(define-pmacro): Watch for more errors in definition.
	(pmacro-debug): New function.
	(pmacro-trace): Set/reset -pmacro-debug?.
	(all existing builtin pmacro helpers): Rename to -pmacro-builtin-foo.
	(-pmacro-builtin-substring): Fix.  Add support for `end' marker.
	(-pmacro-builtin-for-each, et.al.): New helpers for .for-each, .let,
	.if, .case, .cond, .begin, .print, .dump, .error, .list, .ref,
	.length, .replicate, .equals, .and, .or, .not, .eq, .ne, .lt, .gt,
	.le, .ge, .add, .sub, .mul, .div, .rem, .sll, .srl, .sra, .bitand,
	.bitor, .bitxor, bitinv, .car, .cdr, .caar, .cadr, .cdar, .cddr.
	(pmacros-init!): Initialize -smacro-table.
	Rewrite pmacro initialization.
	* read.scm (reader-process-expanded): Renamed from
	-reader-process-expanded.  All callers updated.
	Recognize () as a no-op.
	(cpu-load): Tweak logging messages.
	* utils.scm (message): Add comment.
	* cpu/play.cpu: Add some instructions to play with .let.
	* doc/cgenint.texi: Move some debugging related docs to here from
	cgen.texi.
	* doc/pmacros.texi: Reorganize.  Add docs for new builtin pmacros.
	* testsuite/Makefile.am: New file.
	* testsuite/Makefile.in: New file.
	* testsuite/test-utils.sh.in: New file.
	* testsuite/run-tests.sh: New file.
	* testsuite/testsuite.cpu: New file.
	* testsuite/pmacros-1.test: New file.
@
text
@d5 1
a5 1
SUBDIRS = doc testsuite
@


1.6
log
@	* Makefile.am (AUTOMAKE_OPTIONS): Add 1.9
	(GUILE): Fix definition.
	* Makefile.in: Regenerate with automake 1.9.6.
	* aclocal.m4: Regenerate with aclocal 1.9.6.
	* configure.in (AC_PREREQ): Set to 2.59.
	(AM_INIT_AUTOMAKE): Change version to 1.1.
	(GENINSRC_NEVER): Define.
	* configure: Regenerate with autoconf 2.59.
	* doc/Makefile.am (info_TEXINFOS): Add cgenint.texi.
	(cgen.info,cgen.dvi): Delete.
	(cgen_TEXINFOS,cgenint_TEXINFOS): Define.
	(noinst_TEXINFOS): Add cgenint.texi.
	(DOCFILES): Add missing files.
	(MAINTAINERCLEANFILES,DISTCLEANFILES): Define.
	* doc/Makefile.in: Regenerate with automake 1.9.6.
@
text
@d10 1
a10 1
ARCHFILE = $(srcroot)/../cpu/$(ARCH).cpu
@


1.5
log
@Make backtraces work more reliably.
* guile.scm: Set up debugging parameters, and enable debugging and
source positions while loading.
(cgen-call-with-debugging, cgen-debugging-stack-start): New
functions.
* read.scm: Don't set debugging parameters here.
(catch-with-backtrace): Function deleted.
(-cgen): Simply note the presence or absence of the -b option.
Pass the flag to cgen-call-with-debugging, so debugging is turned
off here if the user didn't request it, for faster computation.
(cgen): Call cgen-debugging-stack-start here, instead of
catch-with-backtrace.

* Makefile.am (GUILE): Explicitly load guile.scm here, and leave a
trailing -s.
(desc, html, opcodes, sim-arch, sim-cpu, gas-test, sim-test):
Don't write out the trailing -s here.
* Makefile.in: Regenerated.
* cgen-doc.scm, cgen-gas.scm, cgen-stest.scm): Don't load
fixup.scm here; let the caller decide which Scheme's customization
file to preload.
* dev.scm: Load guile.scm, not fixup.scm.
* fixup.scm: Deleted; contents have all moved to guile.scm.
* README: Doc fix.

* guile.scm (debug-write): New function.
@
text
@d3 1
a3 1
AUTOMAKE_OPTIONS = cygnus
d7 1
a7 1
GUILE = "`if test -f ../guile/libguile/guile ; then echo ../guile/libguile/guile; else echo guile ; fi` -l guile -s"
@


1.4
log
@	* Makefile.am (ARCHFILE): New var.
	(desc): Pass $(ARCHFILE) for -a parm, not $(ARCH).
	(html,opcodes,sim-arch,sim-cpu,gas-test,sim-test): Ditto.
	* Makefile.in: Regenerate.
@
text
@d7 1
a7 1
GUILE = `if test -f ../guile/libguile/guile ; then echo ../guile/libguile/guile; else echo guile ; fi`
d49 1
a49 1
	$(GUILE) -s $(srcdir)/cgen-opc.scm \
d63 1
a63 1
	$(GUILE) -s $(srcdir)/cgen-doc.scm \
d85 1
a85 1
	$(GUILE) -s $(srcdir)/cgen-opc.scm \
d106 1
a106 1
	$(GUILE) -s $(srcdir)/cgen-sim.scm \
d117 1
a117 1
	$(GUILE) -s $(srcdir)/cgen-sim.scm \
d138 1
a138 1
	$(GUILE) -s $(srcdir)/cgen-gas.scm \
d156 1
a156 1
	$(GUILE) -s $(srcdir)/cgen-stest.scm \
@


1.3
log
@	* mach.scm (current-*-add!): Disallow redefinition.  Make result
	"unspecified".
	* insn.scm (insn-builtin!): Don't define relaxable here, now defined in
	operand.scm.
	* operand.scm (operand-builtin!): Define RELAXABLE for insns too.
	* cpu/m32r.cpu (disp8,disp24): RELAX renamed to RELAXABLE.

	* gen-all-doc: Split arm and frv docs up a bit.

	* cpu/arm.cpu: Add IDOC attribute.
	* cpu/frv.cpu: Ditto.
	* cpu/i960.cpu: Ditto.
	* cpu/openrisc.cpu: Ditto.
	* cpu/xstormy16.cpu: Ditto.
	* cpu/m32r.cpu: Ditto.
	(all insns): Explicitly specify IDOC attribute.

	* Makefile.am (MACH,ISAS,INSN_FILE_NAME): New vars.
	(desc,opcodes,sim-arch,sim-cpu,gas-test,sim-test): Use MACH,ISAS.
	(html): Use MACH,ISAS,INSN_FILE_NAME.  Generate insn.html separately.
	* Makefile.in: Regenerate.
	* attr.scm (<integer-attribute>:parse-value-def): Implement.
	(-attr-read): Defer computing default value until we know the type.
	(attr-has-attr?): Delete, move contents to <attr-list>:has-attr?.
	(<attr-list>:attr-present?): New method.
	(atlist-attr-present?,obj-attr-present?): New fns.
	(obj-has-attr-value?,obj-has-attr-value-no-default?): New fns.
	(attr-builtin!): New insn attr IDOC.
	* cgen-doc.scm (doc-arguments): New args -I,-N.
	* enum.scm (parse-enum-vals): New arg errtxt, all callers updated.
	Support comment as fourth element of enum value.
	(enum-val-name,enum-val-value,enum-val-attrs,enum-val-comment): New fns.
	* html.scm (gen-html-header): New arg kind, all callers updated.
	(gen-table-of-contents): New arg insn-file, all callers updated.
	(gen-list-entry,gen-doc-header): New fn.
	(get-operands): Delete.
	(gen-iformat-table): Rewrite.
	(gen-insn-doc-1): Print constant-folded and trimmed semantics.
	(gen-insn-doc-list): New args name, comment, insns.  All callers updated.
	(get-insn-properties,guess-insn-idoc-attr!): New fn.
	(insn-sets-pc?,insn-refs-mem?,insn-uses-fpu?): New fns.
	(get-insns-for-category,gen-categories-insn-lists): New fns.
	(gen-insn-docs): Simplify each insn's semantics first.
	Print insn tables sorted by IDOC categories.
	(*insn-html-file-name*): New global.
	(cgen-insn.html): New fn.
	(cgen-all): Update.
	* insn.scm (<insn>): Create a setter for the `tmp' member.
	* semantics.scm (insn-build-known-values): Renamed from
	-build-known-values.  All callers updated.

	* rtl.scm: Move traveral/evaluation support to ...
	* rtl-traverse.scm: New file.
	* read.scm: Maybe-load rtl-traverse.scm.

	* rtl.scm (-rtx-valid-types): Add SETRTX.

	* rtx-funcs.scm (nop,parallel): Fix mode.

	* utils.scm (eqv-lookup-index): New fn.
	(assq-lookup-index): Renamed from lookup-index.  All callers updated.

	* dev.scm (load-doc): Set APPLICATION.
@
text
@d10 1
d37 3
d43 1
a43 1
# Usage: make desc ARCH=<arch> OPTIONS="<option list>"
d53 1
a53 1
		-a $(ARCH) \
d58 2
d67 1
a67 1
		-a $(ARCH) \
d78 1
a78 1
# Usage: make opcodes ARCH=<arch> OPTIONS="<option list>"
d89 1
a89 1
		-a $(ARCH) \
d98 2
a99 2
# Usage: make sim-arch ARCH=<arch> OPTIONS="<option list>"
#        make sim-cpu ARCH=<arch> ISAS="<isa>" MACHS="<mach list>" \
d110 1
a110 1
		-a $(ARCH) \
d121 1
a121 1
		-a $(ARCH) \
d130 1
d141 1
a141 1
		-a $(ARCH) \
d148 1
d159 1
a159 1
		-a $(ARCH) \
@


1.2
log
@	* Makefile.am (srcroot): New var.
	(html): New rule.
	* Makefile.in: Regenerate.
	* cgen-doc.scm: New file.
	* html.scm: New file.
	* gen-all-doc: New file.
	* dev.scm (cload): Handle DOC application.
	(load-doc): New fn.
	* machs.scm (machs-for-cpu): New fn.
	* model.scm (models-for-cpu): New fn.
	* utils.scm (gen-c-copyright): Renamed from gen-copyright.
	All uses updated.
	(iota): Rewrite to be identical to pmacro version.  All uses updated.
	* utils-cgen.scm (alpha-sort-obj-list): New fn.
@
text
@d11 7
d49 3
a51 1
		-m all -a $(ARCH) \
d61 8
a68 3
		-m all -a $(ARCH) \
		-H tmp-doc.html
	$(SHELL) $(srcroot)/move-if-change tmp-doc.html $(ARCH)-doc.html
d83 3
a85 1
		-m all -a $(ARCH) \
d93 1
a93 1
#        make sim-cpu ARCH=<arch> ISA="<isa>" MACHS="<mach list>" \
d104 3
a106 1
		-m all -a $(ARCH) \
d115 3
a117 1
		-i "$(ISA)" -m "$(MACHS)" -a $(ARCH) \
d127 2
a128 2
	@@if test -z "$(ISA)" ; then \
	  echo "ISA not specified!" ;\
a133 2
		-m all \
		-i $(ISA) \
d135 2
d144 2
a145 2
	@@if test -z "$(ISA)" ; then \
	  echo "ISA not specified!" ;\
a150 2
		-m all \
		-i $(ISA) \
d152 2
@


1.1
log
@Initial revision
@
text
@d11 2
d44 11
@


1.1.1.1
log
@CGEN 1.0 import
@
text
@@
