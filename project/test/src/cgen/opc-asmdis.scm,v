head	1.9;
access;
symbols
	sid-snapshot-20180601:1.9
	cgen-snapshot-20180601:1.9
	sid-snapshot-20180501:1.9
	cgen-snapshot-20180501:1.9
	sid-snapshot-20180401:1.9
	cgen-snapshot-20180401:1.9
	sid-snapshot-20180301:1.8
	cgen-snapshot-20180301:1.8
	sid-snapshot-20180201:1.8
	cgen-snapshot-20180201:1.8
	sid-snapshot-20180101:1.8
	cgen-snapshot-20180101:1.8
	sid-snapshot-20171201:1.8
	cgen-snapshot-20171201:1.8
	sid-snapshot-20171101:1.8
	cgen-snapshot-20171101:1.8
	sid-snapshot-20171001:1.8
	cgen-snapshot-20171001:1.8
	sid-snapshot-20170901:1.8
	cgen-snapshot-20170901:1.8
	sid-snapshot-20170801:1.8
	cgen-snapshot-20170801:1.8
	sid-snapshot-20170701:1.8
	cgen-snapshot-20170701:1.8
	sid-snapshot-20170601:1.8
	cgen-snapshot-20170601:1.8
	sid-snapshot-20170501:1.8
	cgen-snapshot-20170501:1.8
	sid-snapshot-20170401:1.8
	cgen-snapshot-20170401:1.8
	sid-snapshot-20170301:1.8
	cgen-snapshot-20170301:1.8
	sid-snapshot-20170201:1.8
	cgen-snapshot-20170201:1.8
	sid-snapshot-20170101:1.8
	cgen-snapshot-20170101:1.8
	sid-snapshot-20161201:1.8
	cgen-snapshot-20161201:1.8
	sid-snapshot-20161101:1.8
	cgen-snapshot-20161101:1.8
	sid-snapshot-20160901:1.8
	cgen-snapshot-20160901:1.8
	sid-snapshot-20160801:1.8
	cgen-snapshot-20160801:1.8
	sid-snapshot-20160701:1.8
	cgen-snapshot-20160701:1.8
	sid-snapshot-20160601:1.8
	cgen-snapshot-20160601:1.8
	sid-snapshot-20160501:1.8
	cgen-snapshot-20160501:1.8
	sid-snapshot-20160401:1.8
	cgen-snapshot-20160401:1.8
	sid-snapshot-20160301:1.8
	cgen-snapshot-20160301:1.8
	sid-snapshot-20160201:1.8
	cgen-snapshot-20160201:1.8
	sid-snapshot-20160101:1.8
	cgen-snapshot-20160101:1.8
	sid-snapshot-20151201:1.8
	cgen-snapshot-20151201:1.8
	sid-snapshot-20151101:1.8
	cgen-snapshot-20151101:1.8
	sid-snapshot-20151001:1.8
	cgen-snapshot-20151001:1.8
	sid-snapshot-20150901:1.8
	cgen-snapshot-20150901:1.8
	sid-snapshot-20150801:1.8
	cgen-snapshot-20150801:1.8
	sid-snapshot-20150701:1.8
	cgen-snapshot-20150701:1.8
	sid-snapshot-20150601:1.8
	cgen-snapshot-20150601:1.8
	sid-snapshot-20150501:1.8
	cgen-snapshot-20150501:1.8
	sid-snapshot-20150401:1.8
	cgen-snapshot-20150401:1.8
	sid-snapshot-20150301:1.8
	cgen-snapshot-20150301:1.8
	sid-snapshot-20150201:1.8
	cgen-snapshot-20150201:1.8
	sid-snapshot-20150101:1.8
	cgen-snapshot-20150101:1.8
	sid-snapshot-20141201:1.8
	cgen-snapshot-20141201:1.8
	sid-snapshot-20141101:1.8
	cgen-snapshot-20141101:1.8
	sid-snapshot-20141001:1.8
	cgen-snapshot-20141001:1.8
	sid-snapshot-20140901:1.8
	cgen-snapshot-20140901:1.8
	sid-snapshot-20140801:1.8
	cgen-snapshot-20140801:1.8
	sid-snapshot-20140701:1.8
	cgen-snapshot-20140701:1.8
	sid-snapshot-20140601:1.8
	cgen-snapshot-20140601:1.8
	sid-snapshot-20140501:1.8
	cgen-snapshot-20140501:1.8
	sid-snapshot-20140401:1.8
	cgen-snapshot-20140401:1.8
	sid-snapshot-20140301:1.8
	cgen-snapshot-20140301:1.8
	sid-snapshot-20140201:1.8
	cgen-snapshot-20140201:1.8
	sid-snapshot-20140101:1.8
	cgen-snapshot-20140101:1.8
	sid-snapshot-20131201:1.8
	cgen-snapshot-20131201:1.8
	sid-snapshot-20131101:1.8
	cgen-snapshot-20131101:1.8
	sid-snapshot-20131001:1.8
	cgen-snapshot-20131001:1.8
	sid-snapshot-20130901:1.8
	cgen-snapshot-20130901:1.8
	sid-snapshot-20130801:1.8
	cgen-snapshot-20130801:1.8
	sid-snapshot-20130701:1.8
	cgen-snapshot-20130701:1.8
	sid-snapshot-20130601:1.8
	cgen-snapshot-20130601:1.8
	sid-snapshot-20130501:1.8
	cgen-snapshot-20130501:1.8
	sid-snapshot-20130401:1.8
	cgen-snapshot-20130401:1.8
	sid-snapshot-20130301:1.8
	cgen-snapshot-20130301:1.8
	sid-snapshot-20130201:1.8
	cgen-snapshot-20130201:1.8
	sid-snapshot-20130101:1.8
	cgen-snapshot-20130101:1.8
	sid-snapshot-20121201:1.8
	cgen-snapshot-20121201:1.8
	sid-snapshot-20121101:1.8
	cgen-snapshot-20121101:1.8
	sid-snapshot-20121001:1.8
	cgen-snapshot-20121001:1.8
	sid-snapshot-20120901:1.8
	cgen-snapshot-20120901:1.8
	sid-snapshot-20120801:1.8
	cgen-snapshot-20120801:1.8
	sid-snapshot-20120701:1.8
	cgen-snapshot-20120701:1.8
	sid-snapshot-20120601:1.8
	cgen-snapshot-20120601:1.8
	sid-snapshot-20120501:1.8
	cgen-snapshot-20120501:1.8
	sid-snapshot-20120401:1.8
	cgen-snapshot-20120401:1.8
	sid-snapshot-20120301:1.8
	cgen-snapshot-20120301:1.8
	sid-snapshot-20120201:1.8
	cgen-snapshot-20120201:1.8
	sid-snapshot-20120101:1.8
	cgen-snapshot-20120101:1.8
	sid-snapshot-20111201:1.8
	cgen-snapshot-20111201:1.8
	sid-snapshot-20111101:1.8
	cgen-snapshot-20111101:1.8
	sid-snapshot-20111001:1.8
	cgen-snapshot-20111001:1.8
	sid-snapshot-20110901:1.8
	cgen-snapshot-20110901:1.8
	sid-snapshot-20110801:1.8
	cgen-snapshot-20110801:1.8
	sid-snapshot-20110701:1.8
	cgen-snapshot-20110701:1.8
	sid-snapshot-20110601:1.8
	cgen-snapshot-20110601:1.8
	sid-snapshot-20110501:1.8
	cgen-snapshot-20110501:1.8
	sid-snapshot-20110401:1.8
	cgen-snapshot-20110401:1.8
	sid-snapshot-20110301:1.8
	cgen-snapshot-20110301:1.8
	sid-snapshot-20110201:1.8
	cgen-snapshot-20110201:1.8
	sid-snapshot-20110101:1.8
	cgen-snapshot-20110101:1.8
	sid-snapshot-20101201:1.8
	cgen-snapshot-20101201:1.8
	sid-snapshot-20101101:1.8
	cgen-snapshot-20101101:1.8
	sid-snapshot-20101001:1.8
	cgen-snapshot-20101001:1.8
	sid-snapshot-20100901:1.8
	cgen-snapshot-20100901:1.8
	sid-snapshot-20100801:1.8
	cgen-snapshot-20100801:1.8
	sid-snapshot-20100701:1.8
	cgen-snapshot-20100701:1.8
	sid-snapshot-20100601:1.8
	cgen-snapshot-20100601:1.8
	sid-snapshot-20100501:1.8
	cgen-snapshot-20100501:1.8
	sid-snapshot-20100401:1.8
	cgen-snapshot-20100401:1.8
	sid-snapshot-20100301:1.8
	cgen-snapshot-20100301:1.8
	sid-snapshot-20100201:1.8
	cgen-snapshot-20100201:1.8
	sid-snapshot-20100101:1.8
	cgen-snapshot-20100101:1.8
	sid-snapshot-20091201:1.8
	cgen-snapshot-20091201:1.8
	sid-snapshot-20091101:1.8
	cgen-snapshot-20091101:1.8
	sid-snapshot-20091001:1.8
	cgen-snapshot-20091001:1.8
	arc-sim-20090309:1.6
	sid-snapshot-20090901:1.7
	cgen-snapshot-20090901:1.7
	sid-snapshot-20090801:1.7
	cgen-snapshot-20090801:1.7
	sid-snapshot-20090701:1.7
	cgen-snapshot-20090701:1.7
	dje-cgen-play1-branch:1.7.0.2
	dje-cgen-play1-branchpoint:1.7
	cgen-1_1-branch:1.6.0.4
	cgen-1_1-branchpoint:1.6
	sid-snapshot-20090601:1.6
	cgen-snapshot-20090601:1.6
	sid-snapshot-20090501:1.6
	cgen-snapshot-20090501:1.6
	sid-snapshot-20090401:1.6
	cgen-snapshot-20090401:1.6
	arc-insight_6_8-branch:1.6.0.2
	arc-insight_6_8-branchpoint:1.6
	sid-snapshot-20090301:1.6
	cgen-snapshot-20090301:1.6
	sid-snapshot-20090201:1.6
	cgen-snapshot-20090201:1.6
	sid-snapshot-20090101:1.6
	cgen-snapshot-20090101:1.6
	sid-snapshot-20081201:1.6
	cgen-snapshot-20081201:1.6
	sid-snapshot-20081101:1.6
	cgen-snapshot-20081101:1.6
	sid-snapshot-20081001:1.6
	cgen-snapshot-20081001:1.6
	sid-snapshot-20080901:1.6
	cgen-snapshot-20080901:1.6
	sid-snapshot-20080801:1.6
	cgen-snapshot-20080801:1.6
	sid-snapshot-20080701:1.6
	cgen-snapshot-20080701:1.6
	sid-snapshot-20080601:1.6
	cgen-snapshot-20080601:1.6
	sid-snapshot-20080501:1.6
	cgen-snapshot-20080501:1.6
	sid-snapshot-20080403:1.6
	sid-snapshot-20080401:1.6
	cgen-snapshot-20080401:1.6
	sid-snapshot-20080301:1.6
	cgen-snapshot-20080301:1.6
	sid-snapshot-20080201:1.6
	cgen-snapshot-20080201:1.6
	sid-snapshot-20080101:1.6
	cgen-snapshot-20080101:1.6
	sid-snapshot-20071201:1.6
	cgen-snapshot-20071201:1.6
	sid-snapshot-20071101:1.6
	cgen-snapshot-20071101:1.6
	sid-snapshot-20071001:1.6
	cgen-snapshot-20071001:1.6
	msnyder-fork-checkpoint-branch:1.5.0.2
	msnyder-fork-checkpoint-branchpoint:1.5
	sid-20020905-branchpoint:1.3
	sid-20020905-branch:1.3.0.4
	cagney_regbuf-20020515-branch:1.3.0.2
	cagney_regbuf-20020515-branchpoint:1.3
	cygnus_cvs_20020108_pre:1.3
	cgen-1-1-branch:1.1.1.1.0.2
	cgen-1-0:1.1.1.1
	cygnus:1.1.1;
locks; strict;
comment	@# @;


1.9
date	2018.03.03.01.31.30;	author amodra;	state Exp;
branches;
next	1.8;

1.8
date	2009.09.07.22.17.34;	author devans;	state Exp;
branches;
next	1.7;

1.7
date	2009.06.24.15.03.09;	author devans;	state Exp;
branches;
next	1.6;

1.6
date	2007.02.05.19.43.30;	author brolley;	state Exp;
branches
	1.6.4.1;
next	1.5;

1.5
date	2005.07.01.11.16.30;	author nickc;	state Exp;
branches;
next	1.4;

1.4
date	2003.09.08.17.17.22;	author brolley;	state Exp;
branches;
next	1.3;

1.3
date	2001.11.25.23.18.15;	author bje;	state Exp;
branches;
next	1.2;

1.2
date	2001.10.09.08.24.22;	author nickc;	state Exp;
branches;
next	1.1;

1.1
date	2000.07.28.04.11.52;	author bje;	state Exp;
branches
	1.1.1.1;
next	;

1.6.4.1
date	2009.06.24.14.57.45;	author devans;	state Exp;
branches;
next	;

1.1.1.1
date	2000.07.28.04.11.52;	author bje;	state Exp;
branches;
next	;


desc
@@


1.9
log
@binutils opcodes error messages

This patch is aimed at making binutils/opcodes files comply with the
GNU coding standard regarding error messages, that is, they should
start with the program name followed by a colon, then a lower case
message.  Accomplished by calling opcodes_error_handler to output the
program name (and final '\n'), rather than calling fprintf.

	* desc-cpu.scm (opcodes_error_handler): Define.
	(@@arch@@_cgen_rebuild_tables): Use opcodes_error_handler.
	(@@arch@@_cgen_cpu_open): Likewise.
	* opc-asmdis.scm (@@arch@@_cgen_parse_operand): Likewise.
	(@@arch@@_cgen_print_operand): Likewise.
	* opc-ibld.scm (@@arch@@_cgen_get_int_operand): Likewise.
	(@@arch@@_cgen_get_vma_operand): Likewise.
	(@@arch@@_cgen_set_int_operand): Likewise.
	(@@arch@@_cgen_set_vma_operand): Likewise.
	(@@arch@@_cgen_insert_operand): Likewise.
	(@@arch@@_cgen_extract_operand): Likewise.
	* utils.scm: Update emitted copyright dates.
@
text
@; Assembler/disassembler support generator.
; Copyright (C) 2000, 2001, 2005, 2009 Red Hat, Inc.
; This file is part of CGEN.

; Assembler support.

(define (/gen-parse-switch)
  (logit 2 "Generating parse switch ...\n")
  (string-list
   "\
const char * @@arch@@_cgen_parse_operand
  (CGEN_CPU_DESC, int, const char **, CGEN_FIELDS *);

/* Main entry point for operand parsing.

   This function is basically just a big switch statement.  Earlier versions
   used tables to look up the function to use, but
   - if the table contains both assembler and disassembler functions then
     the disassembler contains much of the assembler and vice-versa,
   - there's a lot of inlining possibilities as things grow,
   - using a switch statement avoids the function call overhead.

   This function could be moved into `parse_insn_normal', but keeping it
   separate makes clear the interface between `parse_insn_normal' and each of
   the handlers.  */

const char *
@@arch@@_cgen_parse_operand (CGEN_CPU_DESC cd,
			   int opindex,
			   const char ** strp,
			   CGEN_FIELDS * fields)
{
  const char * errmsg = NULL;
  /* Used by scalar operands that still need to be parsed.  */
  " (gen-ifield-default-type) " junk ATTRIBUTE_UNUSED;

  switch (opindex)
    {
"
   (gen-switch 'parse)
"
    default :
      /* xgettext:c-format */
      opcodes_error_handler
	(_(\"internal error: unrecognized field %d while parsing\"),
	 opindex);
      abort ();
  }

  return errmsg;
}\n\n")
)

; Assembler initialization C code
; Code is appended during processing.

(define /asm-init-code "")
(define (add-asm-init code)
  (set! /asm-init-code (string-append /asm-init-code code))
)

; Return C code to define the assembler init function.
; This is called after opcode_open.

(define (/gen-init-asm-fn)
  (string-append
   "\
void
@@arch@@_cgen_init_asm (CGEN_CPU_DESC cd)
{
  @@arch@@_cgen_init_opcode_table (cd);
  @@arch@@_cgen_init_ibld_table (cd);
  cd->parse_handlers = & @@arch@@_cgen_parse_handlers[0];
  cd->parse_operand = @@arch@@_cgen_parse_operand;
#ifdef CGEN_ASM_INIT_HOOK
CGEN_ASM_INIT_HOOK
#endif
"
   /asm-init-code
"}\n\n"
   )
)

; Generate C code that is inserted into the assembler source.

(define (cgen-asm.in)
  (logit 1 "Generating " (current-arch-name) "-asm.in ...\n")
  (string-write
   ; No need for copyright, appended to file with one.
   "\n"
   (lambda () (gen-extra-asm.c (opc-file-path) (current-arch-name)))
   "\n"
   /gen-parse-switch
   (lambda () (gen-handler-table "parse" opc-parse-handlers))
   /gen-init-asm-fn
   )
)

; Disassembler support.

(define (/gen-print-switch)
  (logit 2 "Generating print switch ...\n")
  (string-list
   "\
void @@arch@@_cgen_print_operand
  (CGEN_CPU_DESC, int, PTR, CGEN_FIELDS *, void const *, bfd_vma, int);

/* Main entry point for printing operands.
   XINFO is a `void *' and not a `disassemble_info *' to not put a requirement
   of dis-asm.h on cgen.h.

   This function is basically just a big switch statement.  Earlier versions
   used tables to look up the function to use, but
   - if the table contains both assembler and disassembler functions then
     the disassembler contains much of the assembler and vice-versa,
   - there's a lot of inlining possibilities as things grow,
   - using a switch statement avoids the function call overhead.

   This function could be moved into `print_insn_normal', but keeping it
   separate makes clear the interface between `print_insn_normal' and each of
   the handlers.  */

void
@@arch@@_cgen_print_operand (CGEN_CPU_DESC cd,
			   int opindex,
			   void * xinfo,
			   CGEN_FIELDS *fields,
			   void const *attrs ATTRIBUTE_UNUSED,
			   bfd_vma pc,
			   int length)
{
  disassemble_info *info = (disassemble_info *) xinfo;

  switch (opindex)
    {
"
   (gen-switch 'print)
"
    default :
      /* xgettext:c-format */
      opcodes_error_handler
	(_(\"internal error: unrecognized field %d while printing insn\"),
	 opindex);
      abort ();
  }
}\n\n")
)

; Disassembler initialization C code.
; Code is appended during processing.

(define /dis-init-code "")
(define (add-dis-init code)
  (set! /dis-init-code (string-append /dis-init-code code))
)

; Return C code to define the disassembler init function.

(define (/gen-init-dis-fn)
  (string-append
   "
void
@@arch@@_cgen_init_dis (CGEN_CPU_DESC cd)
{
  @@arch@@_cgen_init_opcode_table (cd);
  @@arch@@_cgen_init_ibld_table (cd);
  cd->print_handlers = & @@arch@@_cgen_print_handlers[0];
  cd->print_operand = @@arch@@_cgen_print_operand;
"
   /dis-init-code
"}\n\n"
   )
)

; Generate C code that is inserted into the disassembler source.

(define (cgen-dis.in)
  (logit 1 "Generating " (current-arch-name) "-dis.in ...\n")
  (string-write
   ; No need for copyright, appended to file with one.
   "\n"
   (lambda () (gen-extra-dis.c (opc-file-path) (current-arch-name)))
   "\n"
   /gen-print-switch
   (lambda () (gen-handler-table "print" opc-print-handlers))
   /gen-init-dis-fn
   )
)
@


1.8
log
@	* read.scm (rtl-version-equal?): New function.
	(rtl-version-at-least?, rtl-version-older?): New functions.

	* *.scm: Use / to prefix "local" vars/fns, for r6rs compliance.
	* pmacros.scm (/pmacro-builtin-splice): Refer to $unsplice for
	rtl versions >= 0.9.
	(pmacros-init!): Tweak to prepare for $<pmacro> for builtin pmacros.
@
text
@d44 3
a46 1
      fprintf (stderr, _(\"Unrecognized field %d while parsing.\\n\"), opindex);
d141 4
a144 3
      fprintf (stderr, _(\"Unrecognized field %d while printing insn.\\n\"),
	       opindex);
    abort ();
@


1.7
log
@	* All *.scm files: Update copyright year.
	* utils.scm (copyright-fsf, copyright-redhat): Ditto.
@
text
@d7 1
a7 1
(define (-gen-parse-switch)
d55 1
a55 1
(define -asm-init-code "")
d57 1
a57 1
  (set! -asm-init-code (string-append -asm-init-code code))
d63 1
a63 1
(define (-gen-init-asm-fn)
d77 1
a77 1
   -asm-init-code
d91 1
a91 1
   -gen-parse-switch
d93 1
a93 1
   -gen-init-asm-fn
d99 1
a99 1
(define (-gen-print-switch)
d149 1
a149 1
(define -dis-init-code "")
d151 1
a151 1
  (set! -dis-init-code (string-append -dis-init-code code))
d156 1
a156 1
(define (-gen-init-dis-fn)
d167 1
a167 1
   -dis-init-code
d181 1
a181 1
   -gen-print-switch
d183 1
a183 1
   -gen-init-dis-fn
@


1.6
log
@2007-02-05  Dave Brolley  <brolley@@redhat.com>

        * opc-asmdis.scm (-gen-init-asm-fn): Include CGEN_ASM_INIT_HOOK
        in the generated code for @@arch@@_cgen_init_asm if it is defined.

        * Contribute the following changes:
        2005-04-05  Richard Sandiford  <rsandifo@@redhat.com>

        * attr.scm (<string-attribute>): New attribute class.
        (attr-kind): Handle <string-attribute>.
        (parse-simple-attribute): New function.
        (<boolean-attribute> 'parse-value): Use parse-simple-attribute.
        (<bitset-attribute> 'parse-value): Likewise.
        (<boolean-attribute> 'parse-value): Likewise.
        (<enum-attribute> 'parse-value): Likewise.
        (<string-attribute> 'parse-value): New function.
        (-attr-parse): Handle <string-attribute>.
        (-attr-read): Likewise.
        (<string-attribute> 'gen-value-for-defn-raw): New function.
        (<string-attribute> 'gen-value-for-defn): New function.
@
text
@d2 1
a2 1
; Copyright (C) 2000, 2001, 2005 Red Hat, Inc.
@


1.6.4.1
log
@	* All *.scm files: Update copyright year.
	* utils.scm (copyright-fsf, copyright-redhat): Ditto.
@
text
@d2 1
a2 1
; Copyright (C) 2000, 2001, 2005, 2009 Red Hat, Inc.
@


1.5
log
@Update function declarations to ISO C90 formatting
@
text
@d73 3
@


1.4
log
@2003-09-08  Dave Brolley  <brolley@@redhat.com>

        On behalf of Doug Evans <dje@@sebabeach.org>
        Pass in paths to input files, instead of assuming they live in
        $srcdir/cpu.  Plus misc. option processing cleanup.
        * cgen-doc.scm (doc-arguments): Make options strings not symbols.
        Add pre-process pass to all options.
        * cgen-gas.scm (gas-arguments): Ditto.
        * cgen-sid.scm (sim-arguments): Ditto.
        * cgen-sim.scm (sim-arguments): Ditto.
        * cgen-stest.scm (stest-arguments): Ditto.
        * cgen-opc.scm (opc-arguments): Ditto.  New argument -OPC.
        (-opc-file-path): New global.
        (opc-file-path): New fn.
        * opcodes.scm (read-cpu.opc): Replace srcdir,cpu args with opc-file.
        All callers updated.
        (gen-extra-cpu.h,gen-extra-cpu.c,gen-extra-opc.h,gen-extra-opc.c,
        gen-extra-asm.c,gen-extra-dis.c,gen-extra-ibld.h,gen-extra-ibld.c):
        Replace srcdir arg with opc-file.  All callers updated.
        * read.scm (-opt-spec-update): Delete.
        (opt-get-first-pass,opt-get-second-pass): New fns.
        (-cgen): Process application-specific arguments in two passes.
@
text
@d2 1
a2 1
; Copyright (C) 2000, 2001 Red Hat, Inc.
d12 1
a12 1
  PARAMS ((CGEN_CPU_DESC, int, const char **, CGEN_FIELDS *));
d28 4
a31 5
@@arch@@_cgen_parse_operand (cd, opindex, strp, fields)
     CGEN_CPU_DESC cd;
     int opindex;
     const char ** strp;
     CGEN_FIELDS * fields;
d67 1
a67 2
@@arch@@_cgen_init_asm (cd)
     CGEN_CPU_DESC cd;
d101 1
a101 2
  PARAMS ((CGEN_CPU_DESC, int, PTR, CGEN_FIELDS *,
           void const *, bfd_vma, int));
d119 7
a125 8
@@arch@@_cgen_print_operand (cd, opindex, xinfo, fields, attrs, pc, length)
     CGEN_CPU_DESC cd;
     int opindex;
     PTR xinfo;
     CGEN_FIELDS *fields;
     void const *attrs ATTRIBUTE_UNUSED;
     bfd_vma pc;
     int length;
d127 1
a127 1
 disassemble_info *info = (disassemble_info *) xinfo;
d157 1
a157 2
@@arch@@_cgen_init_dis (cd)
     CGEN_CPU_DESC cd;
@


1.3
log
@* converge with Red Hat internal tree.
@
text
@d88 1
a88 1
   (lambda () (gen-extra-asm.c srcdir (current-arch-name))) ; from <arch>.opc
d181 1
a181 1
   (lambda () (gen-extra-dis.c srcdir (current-arch-name))) ; from <arch>.opc
@


1.2
log
@Fix compile time warning messages in generated C files
@
text
@d25 1
a25 2
   the handlers.
*/
d119 1
a119 2
   the handlers.
*/
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
; Copyright (C) 2000 Red Hat, Inc.
d11 3
d37 1
a37 1
  " (gen-ifield-default-type) " junk;
d103 4
d129 1
a129 1
     void const *attrs;
@


1.1.1.1
log
@CGEN 1.0 import
@
text
@@
