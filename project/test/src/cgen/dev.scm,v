head	1.20;
access;
symbols
	sid-snapshot-20180601:1.20
	cgen-snapshot-20180601:1.20
	sid-snapshot-20180501:1.20
	cgen-snapshot-20180501:1.20
	sid-snapshot-20180401:1.20
	cgen-snapshot-20180401:1.20
	sid-snapshot-20180301:1.20
	cgen-snapshot-20180301:1.20
	sid-snapshot-20180201:1.20
	cgen-snapshot-20180201:1.20
	sid-snapshot-20180101:1.20
	cgen-snapshot-20180101:1.20
	sid-snapshot-20171201:1.20
	cgen-snapshot-20171201:1.20
	sid-snapshot-20171101:1.20
	cgen-snapshot-20171101:1.20
	sid-snapshot-20171001:1.20
	cgen-snapshot-20171001:1.20
	sid-snapshot-20170901:1.20
	cgen-snapshot-20170901:1.20
	sid-snapshot-20170801:1.20
	cgen-snapshot-20170801:1.20
	sid-snapshot-20170701:1.20
	cgen-snapshot-20170701:1.20
	sid-snapshot-20170601:1.20
	cgen-snapshot-20170601:1.20
	sid-snapshot-20170501:1.20
	cgen-snapshot-20170501:1.20
	sid-snapshot-20170401:1.20
	cgen-snapshot-20170401:1.20
	sid-snapshot-20170301:1.20
	cgen-snapshot-20170301:1.20
	sid-snapshot-20170201:1.20
	cgen-snapshot-20170201:1.20
	sid-snapshot-20170101:1.20
	cgen-snapshot-20170101:1.20
	sid-snapshot-20161201:1.20
	cgen-snapshot-20161201:1.20
	sid-snapshot-20161101:1.20
	cgen-snapshot-20161101:1.20
	sid-snapshot-20160901:1.20
	cgen-snapshot-20160901:1.20
	sid-snapshot-20160801:1.20
	cgen-snapshot-20160801:1.20
	sid-snapshot-20160701:1.20
	cgen-snapshot-20160701:1.20
	sid-snapshot-20160601:1.20
	cgen-snapshot-20160601:1.20
	sid-snapshot-20160501:1.20
	cgen-snapshot-20160501:1.20
	sid-snapshot-20160401:1.20
	cgen-snapshot-20160401:1.20
	sid-snapshot-20160301:1.20
	cgen-snapshot-20160301:1.20
	sid-snapshot-20160201:1.20
	cgen-snapshot-20160201:1.20
	sid-snapshot-20160101:1.20
	cgen-snapshot-20160101:1.20
	sid-snapshot-20151201:1.20
	cgen-snapshot-20151201:1.20
	sid-snapshot-20151101:1.20
	cgen-snapshot-20151101:1.20
	sid-snapshot-20151001:1.20
	cgen-snapshot-20151001:1.20
	sid-snapshot-20150901:1.20
	cgen-snapshot-20150901:1.20
	sid-snapshot-20150801:1.20
	cgen-snapshot-20150801:1.20
	sid-snapshot-20150701:1.20
	cgen-snapshot-20150701:1.20
	sid-snapshot-20150601:1.20
	cgen-snapshot-20150601:1.20
	sid-snapshot-20150501:1.20
	cgen-snapshot-20150501:1.20
	sid-snapshot-20150401:1.20
	cgen-snapshot-20150401:1.20
	sid-snapshot-20150301:1.20
	cgen-snapshot-20150301:1.20
	sid-snapshot-20150201:1.20
	cgen-snapshot-20150201:1.20
	sid-snapshot-20150101:1.20
	cgen-snapshot-20150101:1.20
	sid-snapshot-20141201:1.20
	cgen-snapshot-20141201:1.20
	sid-snapshot-20141101:1.20
	cgen-snapshot-20141101:1.20
	sid-snapshot-20141001:1.20
	cgen-snapshot-20141001:1.20
	sid-snapshot-20140901:1.20
	cgen-snapshot-20140901:1.20
	sid-snapshot-20140801:1.20
	cgen-snapshot-20140801:1.20
	sid-snapshot-20140701:1.20
	cgen-snapshot-20140701:1.20
	sid-snapshot-20140601:1.20
	cgen-snapshot-20140601:1.20
	sid-snapshot-20140501:1.20
	cgen-snapshot-20140501:1.20
	sid-snapshot-20140401:1.20
	cgen-snapshot-20140401:1.20
	sid-snapshot-20140301:1.20
	cgen-snapshot-20140301:1.20
	sid-snapshot-20140201:1.20
	cgen-snapshot-20140201:1.20
	sid-snapshot-20140101:1.20
	cgen-snapshot-20140101:1.20
	sid-snapshot-20131201:1.20
	cgen-snapshot-20131201:1.20
	sid-snapshot-20131101:1.20
	cgen-snapshot-20131101:1.20
	sid-snapshot-20131001:1.20
	cgen-snapshot-20131001:1.20
	sid-snapshot-20130901:1.20
	cgen-snapshot-20130901:1.20
	sid-snapshot-20130801:1.20
	cgen-snapshot-20130801:1.20
	sid-snapshot-20130701:1.20
	cgen-snapshot-20130701:1.20
	sid-snapshot-20130601:1.20
	cgen-snapshot-20130601:1.20
	sid-snapshot-20130501:1.20
	cgen-snapshot-20130501:1.20
	sid-snapshot-20130401:1.20
	cgen-snapshot-20130401:1.20
	sid-snapshot-20130301:1.20
	cgen-snapshot-20130301:1.20
	sid-snapshot-20130201:1.20
	cgen-snapshot-20130201:1.20
	sid-snapshot-20130101:1.20
	cgen-snapshot-20130101:1.20
	sid-snapshot-20121201:1.20
	cgen-snapshot-20121201:1.20
	sid-snapshot-20121101:1.20
	cgen-snapshot-20121101:1.20
	sid-snapshot-20121001:1.20
	cgen-snapshot-20121001:1.20
	sid-snapshot-20120901:1.20
	cgen-snapshot-20120901:1.20
	sid-snapshot-20120801:1.20
	cgen-snapshot-20120801:1.20
	sid-snapshot-20120701:1.20
	cgen-snapshot-20120701:1.20
	sid-snapshot-20120601:1.20
	cgen-snapshot-20120601:1.20
	sid-snapshot-20120501:1.20
	cgen-snapshot-20120501:1.20
	sid-snapshot-20120401:1.20
	cgen-snapshot-20120401:1.20
	sid-snapshot-20120301:1.20
	cgen-snapshot-20120301:1.20
	sid-snapshot-20120201:1.20
	cgen-snapshot-20120201:1.20
	sid-snapshot-20120101:1.20
	cgen-snapshot-20120101:1.20
	sid-snapshot-20111201:1.20
	cgen-snapshot-20111201:1.20
	sid-snapshot-20111101:1.20
	cgen-snapshot-20111101:1.20
	sid-snapshot-20111001:1.20
	cgen-snapshot-20111001:1.20
	sid-snapshot-20110901:1.20
	cgen-snapshot-20110901:1.20
	sid-snapshot-20110801:1.20
	cgen-snapshot-20110801:1.20
	sid-snapshot-20110701:1.20
	cgen-snapshot-20110701:1.20
	sid-snapshot-20110601:1.20
	cgen-snapshot-20110601:1.20
	sid-snapshot-20110501:1.20
	cgen-snapshot-20110501:1.20
	sid-snapshot-20110401:1.20
	cgen-snapshot-20110401:1.20
	sid-snapshot-20110301:1.20
	cgen-snapshot-20110301:1.20
	sid-snapshot-20110201:1.20
	cgen-snapshot-20110201:1.20
	sid-snapshot-20110101:1.20
	cgen-snapshot-20110101:1.20
	sid-snapshot-20101201:1.20
	cgen-snapshot-20101201:1.20
	sid-snapshot-20101101:1.20
	cgen-snapshot-20101101:1.20
	sid-snapshot-20101001:1.20
	cgen-snapshot-20101001:1.20
	sid-snapshot-20100901:1.20
	cgen-snapshot-20100901:1.20
	sid-snapshot-20100801:1.20
	cgen-snapshot-20100801:1.20
	sid-snapshot-20100701:1.20
	cgen-snapshot-20100701:1.20
	sid-snapshot-20100601:1.20
	cgen-snapshot-20100601:1.20
	sid-snapshot-20100501:1.20
	cgen-snapshot-20100501:1.20
	sid-snapshot-20100401:1.20
	cgen-snapshot-20100401:1.20
	sid-snapshot-20100301:1.20
	cgen-snapshot-20100301:1.20
	sid-snapshot-20100201:1.20
	cgen-snapshot-20100201:1.20
	sid-snapshot-20100101:1.20
	cgen-snapshot-20100101:1.20
	sid-snapshot-20091201:1.20
	cgen-snapshot-20091201:1.20
	sid-snapshot-20091101:1.19
	cgen-snapshot-20091101:1.19
	sid-snapshot-20091001:1.19
	cgen-snapshot-20091001:1.19
	arc-sim-20090309:1.10
	sid-snapshot-20090901:1.16
	cgen-snapshot-20090901:1.16
	sid-snapshot-20090801:1.14
	cgen-snapshot-20090801:1.14
	sid-snapshot-20090701:1.12
	cgen-snapshot-20090701:1.12
	dje-cgen-play1-branch:1.12.0.2
	dje-cgen-play1-branchpoint:1.12
	cgen-1_1-branch:1.11.0.2
	cgen-1_1-branchpoint:1.11
	sid-snapshot-20090601:1.10
	cgen-snapshot-20090601:1.10
	sid-snapshot-20090501:1.10
	cgen-snapshot-20090501:1.10
	sid-snapshot-20090401:1.10
	cgen-snapshot-20090401:1.10
	arc-insight_6_8-branch:1.10.0.2
	arc-insight_6_8-branchpoint:1.10
	sid-snapshot-20090301:1.10
	cgen-snapshot-20090301:1.10
	sid-snapshot-20090201:1.10
	cgen-snapshot-20090201:1.10
	sid-snapshot-20090101:1.10
	cgen-snapshot-20090101:1.10
	sid-snapshot-20081201:1.10
	cgen-snapshot-20081201:1.10
	sid-snapshot-20081101:1.10
	cgen-snapshot-20081101:1.10
	sid-snapshot-20081001:1.10
	cgen-snapshot-20081001:1.10
	sid-snapshot-20080901:1.10
	cgen-snapshot-20080901:1.10
	sid-snapshot-20080801:1.10
	cgen-snapshot-20080801:1.10
	sid-snapshot-20080701:1.10
	cgen-snapshot-20080701:1.10
	sid-snapshot-20080601:1.10
	cgen-snapshot-20080601:1.10
	sid-snapshot-20080501:1.10
	cgen-snapshot-20080501:1.10
	sid-snapshot-20080403:1.10
	sid-snapshot-20080401:1.10
	cgen-snapshot-20080401:1.10
	sid-snapshot-20080301:1.10
	cgen-snapshot-20080301:1.10
	sid-snapshot-20080201:1.10
	cgen-snapshot-20080201:1.10
	sid-snapshot-20080101:1.10
	cgen-snapshot-20080101:1.10
	sid-snapshot-20071201:1.10
	cgen-snapshot-20071201:1.10
	sid-snapshot-20071101:1.10
	cgen-snapshot-20071101:1.10
	sid-snapshot-20071001:1.10
	cgen-snapshot-20071001:1.10
	msnyder-fork-checkpoint-branch:1.9.0.2
	msnyder-fork-checkpoint-branchpoint:1.9
	sid-20020905-branchpoint:1.3
	sid-20020905-branch:1.3.0.6
	cagney_regbuf-20020515-branch:1.3.0.4
	cagney_regbuf-20020515-branchpoint:1.3
	cygnus_cvs_20020108_pre:1.3
	cgen-1-1-branch:1.3.0.2
	cgen-1-0:1.1.1.1
	cygnus:1.1.1;
locks; strict;
comment	@# @;


1.20
date	2009.11.21.09.34.06;	author devans;	state Exp;
branches;
next	1.19;

1.19
date	2009.09.21.15.14.37;	author devans;	state Exp;
branches;
next	1.18;

1.18
date	2009.09.09.20.43.04;	author devans;	state Exp;
branches;
next	1.17;

1.17
date	2009.09.09.17.06.19;	author devans;	state Exp;
branches;
next	1.16;

1.16
date	2009.08.13.19.51.13;	author devans;	state Exp;
branches;
next	1.15;

1.15
date	2009.08.07.21.29.20;	author devans;	state Exp;
branches;
next	1.14;

1.14
date	2009.07.13.20.55.21;	author devans;	state Exp;
branches;
next	1.13;

1.13
date	2009.07.07.18.27.08;	author devans;	state Exp;
branches;
next	1.12;

1.12
date	2009.06.24.15.03.09;	author devans;	state Exp;
branches
	1.12.2.1;
next	1.11;

1.11
date	2009.06.18.18.12.32;	author devans;	state Exp;
branches
	1.11.2.1;
next	1.10;

1.10
date	2006.03.14.12.48.21;	author hp;	state Exp;
branches;
next	1.9;

1.9
date	2005.06.15.21.28.18;	author brolley;	state Exp;
branches;
next	1.8;

1.8
date	2005.02.15.09.01.35;	author jimb;	state Exp;
branches;
next	1.7;

1.7
date	2003.06.10.21.22.02;	author devans;	state Exp;
branches;
next	1.6;

1.6
date	2003.05.15.07.25.02;	author devans;	state Exp;
branches;
next	1.5;

1.5
date	2002.12.21.22.22.33;	author devans;	state Exp;
branches;
next	1.4;

1.4
date	2002.11.05.21.35.45;	author fche;	state Exp;
branches;
next	1.3;

1.3
date	2000.12.08.22.34.20;	author bje;	state Exp;
branches;
next	1.2;

1.2
date	2000.11.09.18.09.35;	author devans;	state Exp;
branches;
next	1.1;

1.1
date	2000.07.28.04.11.52;	author bje;	state Exp;
branches
	1.1.1.1;
next	;

1.12.2.1
date	2009.07.14.16.08.50;	author devans;	state Exp;
branches;
next	;

1.11.2.1
date	2009.06.24.14.57.45;	author devans;	state Exp;
branches;
next	;

1.1.1.1
date	2000.07.28.04.11.52;	author bje;	state Exp;
branches;
next	;


desc
@@


1.20
log
@	* dev-utils.scm: New file.
	* dev.scm (srcdir, load-doc, load-opc, load-gtest, load-sid,
	load-sim, load-stest, load-testsuite): Moved to dev-utils.scm.
	* read.scm (CHECK-LOADED?, libcpu.so, /loaded-file-list, /loaded-file?,
	/loaded-file-record!, maybe-load): Delete.
	Load cgen files directly instead of via maybe-load.
@
text
@; CGEN Debugging support.
; Copyright (C) 2000, 2009 Red Hat, Inc.
; This file is part of CGEN.
; See file COPYING.CGEN for details.

; This file is loaded in during an interactive guile session to
; develop and debug CGEN.

; First load guile.scm to coerce guile into something we've been using.
; Guile is always in flux.
(load "guile.scm")

(load "dev-utils.scm")

; Also defined in read.scm, but we need it earlier.
(define APPLICATION 'UNKNOWN)

(define dev-verbose-level 2)

; Supply the path name and suffic for the .cpu file and delete the analyzer
; arg from cpu-load to lessen the typing.

(define (cload . args)
  (set! verbose-level dev-verbose-level)

  (let ((cpu-file #f)
	(keep-mach "all")
	(keep-isa "all")
	(options "")
	(trace-options "")
	(diagnostic-options ""))

    ; Doesn't check if (cadr args) exists or if #:arch was specified, but
    ; this is a debugging tool!
    (let loop ((args args))
      (if (null? args)
	  #f ; done
	  (begin
	    (case (car args)
	      ((#:arch) (set! cpu-file (cadr args)))
	      ((#:machs) (set! keep-mach (cadr args)))
	      ((#:isas) (set! keep-isa (cadr args)))
	      ((#:options) (set! options (cadr args)))
	      ((#:trace) (set! trace-options (cadr args)))
	      ((#:diag) (set! diagnostic-options (cadr args)))
	      (else (error "unknown option:" (car args))))
	    (loop (cddr args)))))

    (case APPLICATION
      ((UNKNOWN) (error "application not loaded"))
      ((DESC) (cpu-load cpu-file
			keep-mach keep-isa options
			trace-options diagnostic-options
			desc-init!
			desc-finish!
			desc-analyze!))
      ((DOC) (cpu-load cpu-file
			keep-mach keep-isa options
			trace-options diagnostic-options
			doc-init!
			doc-finish!
			doc-analyze!))
      ((OPCODES) (cpu-load cpu-file
			   keep-mach keep-isa options
			   trace-options diagnostic-options
			   opcodes-init!
			   opcodes-finish!
			   opcodes-analyze!))
      ((GAS-TEST) (cpu-load cpu-file
			    keep-mach keep-isa options
			    trace-options diagnostic-options
			    gas-test-init!
			    gas-test-finish!
			    gas-test-analyze!))
      ((SIMULATOR) (cpu-load cpu-file
			     keep-mach keep-isa options
			     trace-options diagnostic-options
			     sim-init!
			     sim-finish!
			     sim-analyze!))
      ((SID-SIMULATOR) (cpu-load cpu-file
			     keep-mach keep-isa options
			     trace-options diagnostic-options
			     sim-init!
			     sim-finish!
			     sim-analyze!))
      ((SIM-TEST) (cpu-load cpu-file
			    keep-mach keep-isa options
			    trace-options diagnostic-options
			    sim-test-init!
			    sim-test-finish!
			    sim-test-analyze!))
      ((TESTSUITE) (cpu-load cpu-file
			     keep-mach keep-isa options
			     trace-options diagnostic-options
			     testsuite-init!
			     testsuite-finish!
			     testsuite-analyze!))
      (else (error "unknown application:" APPLICATION))))
)

; Use the debugging evaluator.
(if (not (defined? 'DEBUG-EVAL))
    (define DEBUG-EVAL #t))

; Tell maybe-load to always load the file.
(if (not (defined? 'CHECK-LOADED?))
    (define CHECK-LOADED? #f))

(display "

First choose the application via one of:

(load-doc)
(load-opc)
(load-gtest)
(load-sim)
(load-stest)
(load-testsuite)
")

(display "(load-sid)\n")

(display "\

Then load the .cpu file with:

(cload #:arch \"path-to-cpu-file\" #:machs \"keep-mach\" #:isas \"keep-isa\"
       #:options \"options\" #:trace \"trace-options\" #:diag \"diagnostic-options\")

Only the #:arch parameter is mandatory, the rest are optional.

keep-mach:
comma separated list of machs to keep or `all'

keep-isa:
comma separated list of isas to keep or `all'

#:options specifies a list of application-specific options

doc options:
[none yet]

opcode options:
[none yet]
Remember to call (set-opc-file-path! \"/path/to/cpu.opc\").

gas test options:
[none yet]
\n")

(display "\
sim options:
with-scache
with-profile=fn

sim test options:
[none yet]
\n")

(display "\
sid options:
[wip]
\n")

(display "\
trace-options: (comma-separated list of options)
commands - trace cgen command invocation
pmacros - trace pmacro expansion
all - trace everything
\n")

(display "\
diagnostic-options: (comma-separated list of options)
iformat - do more diagnostics on instruction formats
all - do all diagnostics
\n")

; If ~/.cgenrc exists, load it.

(let ((cgenrc (string-append (getenv "HOME") "/.cgenrc")))
  (if (file-exists? cgenrc)
      (load cgenrc))
)
@


1.19
log
@	* dev.scm (load-doc): Set verbose-level to 2.
@
text
@d7 2
a8 10
; develop and debug CGEN.  The user visible procs are:
;
; (use-c)
; (load-opc)
; (load-sim)
; (load-sid)
; (load-testsuite)
; (cload #:arch path-to-cpu-file #:machs "mach-list" #:isas "isa-list"
;        #:options "options" #:trace "trace-options")

d13 1
a13 7
(define srcdir ".")
(set! %load-path (cons srcdir %load-path))

; Utility to enable/disable compiled-in C code.

(define (use-c) (set! CHECK-LOADED? #t))
(define (no-c) (set! CHECK-LOADED? #f))
d18 2
d24 2
a109 74
(define (load-doc)
  (load "read")
  (load "desc")
  (load "desc-cpu")
  (load "html")
  ; ??? Necessary for the following case, dunno why.
  ; bash$ guile -l dev.scm
  ; guile> (load-doc)
  ; guile> (cload #:arch "./cpu/m32r.cpu")
  (set! verbose-level 2)
  (set! APPLICATION 'DOC)
)

(define (load-opc)
  (load "read")
  (load "desc")
  (load "desc-cpu")
  (load "opcodes")
  (load "opc-asmdis")
  (load "opc-ibld")
  (load "opc-itab")
  (load "opc-opinst")
  (set! verbose-level 2)
  (set! APPLICATION 'OPCODES)
)

(define (load-gtest)
  (load-opc)
  (load "gas-test")
  (set! verbose-level 2)
  (set! APPLICATION 'GAS-TEST)
)

(define (load-sid)
  (load "read")
  (load "utils-sim")
  (load "sid")
  (load "sid-cpu")
  (load "sid-model")
  (load "sid-decode")
  (set! verbose-level 2)
  (set! APPLICATION 'SID-SIMULATOR)
)

(define (load-sim)
  (load "read")
  (load "desc")
  (load "desc-cpu")
  (load "utils-sim")
  (load "sim")
  (load "sim-arch")
  (load "sim-cpu")
  (load "sim-model")
  (load "sim-decode")
  (set! verbose-level 2)
  (set! APPLICATION 'SIMULATOR)
)

(define (load-stest)
  (load-opc)
  (load "sim-test")
  (set! verbose-level 2)
  (set! APPLICATION 'SIM-TEST)
)

(define (load-testsuite)
  (load "read")
  (load "desc")
  (load "desc-cpu")
  (load "testsuite.scm")
  (set! verbose-level 2)
  (set! APPLICATION 'TESTSUITE)
)

a110 3
First enable compiled in C code if desired.

(use-c)
d112 1
a112 1
Then choose the application via one of:
d128 2
a129 1
(cload #:arch \"path-to-cpu-file\" #:machs \"keep-mach\" #:isas \"keep-isa\" #:options \"options\" #:trace \"trace-options\")
d173 6
@


1.18
log
@	Add support for controlling warnings/errors.
	Add tests for iformat description errors.
	* dev.scm (cload): New option #:diag.
	* read.scm (<reader>): New member verify-iformat?.
	(/parse-diagnostic, parse-warning): New functions.
	(parse-error): Guts moved to /parse-diagnostic.
	(/set-diagnostic-options!): New function.
	(cpu-load): New arg diagnostic-options, all callers updated.
	Recognize -w diagnostic-option-list.
	* ifield.scm (ifields-base-ifields): Move here from iformat.scm.
	(ifld-simple-ifields, ifields-simple-ifields): New function.
	* insn.scm (/parse-insn-format-iflds): New function.
	(/parse-insn-format): Guts moved to /parse-insn-format-iflds.
	New arg isa, all callers updated.  Do some basic validation of the
	ifield list if requested.
	* mach.scm (/sanity-check-insns): Improve error message text.
	* doc/running.text: Document -w option.

	* ifield.scm (/multi-ifield-parse): Initialize bitrange.
@
text
@d129 1
@


1.17
log
@	* dev.scm (*): Change default verbosity level to 2.

	* ifield.scm (<ifield> pretty-print): New method.
	(ifld-pretty-print): New function.
	(<multi-ifield> pretty-print): New method.

	* ifield.scm (<ifield> field-start): Delete word-len arg.
	All callers updated.
	(ifld-start): Ditto.
	(<multi-ifield> field-start): Ditto.
	* operand.scm (<hw-index> field-start): Ditto.
@
text
@d40 2
a41 1
	(trace-options ""))
d55 1
d62 2
a63 1
			keep-mach keep-isa options trace-options
d68 2
a69 1
			keep-mach keep-isa options trace-options
d74 2
a75 1
			   keep-mach keep-isa options trace-options
d80 2
a81 1
			    keep-mach keep-isa options trace-options
d86 2
a87 1
			     keep-mach keep-isa options trace-options
d92 2
a93 1
			     keep-mach keep-isa options trace-options
d98 2
a99 1
			    keep-mach keep-isa options trace-options
d104 2
a105 1
			     keep-mach keep-isa options trace-options
@


1.16
log
@	* dev.scm: Document tracing options.
@
text
@d131 1
a131 1
  (set! verbose-level 3)
d138 1
a138 1
  (set! verbose-level 3)
d149 1
a149 1
  (set! verbose-level 3)
d163 1
a163 1
  (set! verbose-level 3)
d170 1
a170 1
  (set! verbose-level 3)
d179 1
a179 1
  (set! verbose-level 3)
@


1.15
log
@	Add -t option for tracing things like commands, pmacro expansion.
	* dev.scm (cload): New arg #:trace.
	* pmacros.scm (-pmacro-expand): Rewrite pmacro tracing.
	(pmacro-trace): New arg `loc'.  Rewrite pmacro tracing.
	(pmacro-debug): Call pmacro-trace instead of -pmacro-expand.
	* read.scm (<reader>): New members trace-commands?, trace-pmacros?.
	(-reader-process-expanded-1!): Trace commands if requested.
	(-reader-process!): Call pmacro-trace of pmacro tracing requested.
	(-set-trace-options!): New function.
	(-init-reader!): New function.
	(cpu-load): New arg trace-options, all callers updated.
	Call -init-reader! and -set-trace-options!.
	(cgen-usage): Improve output formatting.
	(common-arguments): New option -t.
	(-cgen): Process -t.
	* utils-cgen.scm (single-location->string): Renamed from
	pretty-print-single-location.  All callers updated.
	(location->string): Renamed from pretty-print-location.
	All callers updated.
	(source-properties-location->string): New function.
	* doc/running.texi: Document -t.
@
text
@d14 2
a15 1
; (cload #:arch path-to-cpu-file #:machs "mach-list" #:isas "isa-list" #:options "options")
d204 3
a206 1
(cload #:arch \"path-to-cpu-file\" #:machs \"keep-mach\" #:isas \"keep-isa\" #:options \"options\")
d214 2
d241 7
@


1.14
log
@	Extend pmacro language, add testsuite.
	* Makefile.am (SUBDIRS): Add testsuite.
	* Makefile.in: Regenerate.
	* configure.in (AC_OUTPUT): Create testsuite/Makefile,
	testsuite/test-utils.sh.
	* configure: Regenerate.
	* dev.scm (cload): Handle testsuite app.
	(load-testsuite): New function.
	* pmacros.scm: (-pmacro-debug?): New global.
	(-smacro-table): New global.
	(-smacro-lookup, -smacro-set!): New functions.
	(-pmacro-make): New argument `syntactic-form?', all callers updated.
	(-pmacro-syntactic-form?): New function.
	(-pmacro-expected-number, -pmacro-verify-number): New functions.
	(-pmacro-expected-integer, -pmacro-verify-integer): New functions.
	(-pmacro-expected-non-negative-integer): New function.
	(-pmacro-verify-non-negative-integer): New function.
	(-pmacro-expand-expr-list): New function.
	(-pmacro-process-args-1): Renamed from -pmacro-process-args.
	(-pmacro-process-args): Renamed from -pmacro-invoke.
	(-pmacro-apply, -smacro-apply): New functions.
	(-pmacro-expand): Rewrite syntactic form processing.
	(-pmacro-build-lambda): Reformat.
	(define-pmacro): Watch for more errors in definition.
	(pmacro-debug): New function.
	(pmacro-trace): Set/reset -pmacro-debug?.
	(all existing builtin pmacro helpers): Rename to -pmacro-builtin-foo.
	(-pmacro-builtin-substring): Fix.  Add support for `end' marker.
	(-pmacro-builtin-for-each, et.al.): New helpers for .for-each, .let,
	.if, .case, .cond, .begin, .print, .dump, .error, .list, .ref,
	.length, .replicate, .equals, .and, .or, .not, .eq, .ne, .lt, .gt,
	.le, .ge, .add, .sub, .mul, .div, .rem, .sll, .srl, .sra, .bitand,
	.bitor, .bitxor, bitinv, .car, .cdr, .caar, .cadr, .cdar, .cddr.
	(pmacros-init!): Initialize -smacro-table.
	Rewrite pmacro initialization.
	* read.scm (reader-process-expanded): Renamed from
	-reader-process-expanded.  All callers updated.
	Recognize () as a no-op.
	(cpu-load): Tweak logging messages.
	* utils.scm (message): Add comment.
	* cpu/play.cpu: Add some instructions to play with .let.
	* doc/cgenint.texi: Move some debugging related docs to here from
	cgen.texi.
	* doc/pmacros.texi: Reorganize.  Add docs for new builtin pmacros.
	* testsuite/Makefile.am: New file.
	* testsuite/Makefile.in: New file.
	* testsuite/test-utils.sh.in: New file.
	* testsuite/run-tests.sh: New file.
	* testsuite/testsuite.cpu: New file.
	* testsuite/pmacros-1.test: New file.
@
text
@d33 1
d38 2
a39 1
	(options ""))
d52 1
d59 1
a59 1
			keep-mach keep-isa options
d64 1
a64 1
			keep-mach keep-isa options
d69 1
a69 1
			   keep-mach keep-isa options
d74 1
a74 1
			    keep-mach keep-isa options
d79 1
a79 1
			     keep-mach keep-isa options
d84 1
a84 1
			     keep-mach keep-isa options
d89 1
a89 1
			    keep-mach keep-isa options
d94 1
a94 1
			     keep-mach keep-isa options
@


1.13
log
@	* cgen-opc.scm (-opc-file-path,opc-file-path): Move to opcodes.scm
	(opc-arguments, -OPC): Call set-opc-file-path!.
	* opcodes.scm (-opc-file-path,opc-file-path): Moved here.
	(set-opc-file-path!): New function.
	* dev.scm: Mention set-opc-file-path!.  Mention doc options.
@
text
@d13 1
d90 5
d170 9
d191 1
@


1.12
log
@	* All *.scm files: Update copyright year.
	* utils.scm (copyright-fsf, copyright-redhat): Ditto.
@
text
@d192 3
d197 1
@


1.12.2.1
log
@Copy over from trunk.
	Extend pmacro language, add testsuite.
	* Makefile.am (SUBDIRS): Add testsuite.
	* Makefile.in: Regenerate.
	* configure.in (AC_OUTPUT): Create testsuite/Makefile,
	testsuite/test-utils.sh.
	* configure: Regenerate.
	* dev.scm (cload): Handle testsuite app.
	(load-testsuite): New function.
	* pmacros.scm: (-pmacro-debug?): New global.
	(-smacro-table): New global.
	(-smacro-lookup, -smacro-set!): New functions.
	(-pmacro-make): New argument `syntactic-form?', all callers updated.
	(-pmacro-syntactic-form?): New function.
	(-pmacro-expected-number, -pmacro-verify-number): New functions.
	(-pmacro-expected-integer, -pmacro-verify-integer): New functions.
	(-pmacro-expected-non-negative-integer): New function.
	(-pmacro-verify-non-negative-integer): New function.
	(-pmacro-expand-expr-list): New function.
	(-pmacro-process-args-1): Renamed from -pmacro-process-args.
	(-pmacro-process-args): Renamed from -pmacro-invoke.
	(-pmacro-apply, -smacro-apply): New functions.
	(-pmacro-expand): Rewrite syntactic form processing.
	(-pmacro-build-lambda): Reformat.
	(define-pmacro): Watch for more errors in definition.
	(pmacro-debug): New function.
	(pmacro-trace): Set/reset -pmacro-debug?.
	(all existing builtin pmacro helpers): Rename to -pmacro-builtin-foo.
	(-pmacro-builtin-substring): Fix.  Add support for `end' marker.
	(-pmacro-builtin-for-each, et.al.): New helpers for .for-each, .let,
	.if, .case, .cond, .begin, .print, .dump, .error, .list, .ref,
	.length, .replicate, .equals, .and, .or, .not, .eq, .ne, .lt, .gt,
	.le, .ge, .add, .sub, .mul, .div, .rem, .sll, .srl, .sra, .bitand,
	.bitor, .bitxor, bitinv, .car, .cdr, .caar, .cadr, .cdar, .cddr.
	(pmacros-init!): Initialize -smacro-table.
	Rewrite pmacro initialization.
	* read.scm (reader-process-expanded): Renamed from
	-reader-process-expanded.  All callers updated.
	Recognize () as a no-op.
	(cpu-load): Tweak logging messages.
	* utils.scm (message): Add comment.
	* cpu/play.cpu: Add some instructions to play with .let.
	* doc/cgenint.texi: Move some debugging related docs to here from
	cgen.texi.
	* doc/pmacros.texi: Reorganize.  Add docs for new builtin pmacros.
	* testsuite/Makefile.am: New file.
	* testsuite/Makefile.in: New file.
	* testsuite/test-utils.sh.in: New file.
	* testsuite/run-tests.sh: New file.
	* testsuite/testsuite.cpu: New file.
	* testsuite/pmacros-1.test: New file.
@
text
@a12 1
; (load-testsuite)
a88 5
      ((TESTSUITE) (cpu-load cpu-file
			     keep-mach keep-isa options
			     testsuite-init!
			     testsuite-finish!
			     testsuite-analyze!))
a163 9
(define (load-testsuite)
  (load "read")
  (load "desc")
  (load "desc-cpu")
  (load "testsuite.scm")
  (set! verbose-level 3)
  (set! APPLICATION 'TESTSUITE)
)

a175 1
(load-testsuite)
a191 3
doc options:
[none yet]

a193 1
Remember to call (set-opc-file-path! \"/path/to/cpu.opc\").
@


1.11
log
@	* dev.scm (cload): Change #:arch argument to take the path to the
	.cpu file instead of just the name of the architecture.
	* read.scm (arch-path): Remove trailing '/'.
	(cpu-load): Set `arch-path' to directory of .cpu file.
	(-cgen): Don't set `arch-path' here.
	(include): Update.
	* doc/porting.texi: Update.
@
text
@d2 1
a2 1
; Copyright (C) 2000 Red Hat, Inc.
@


1.11.2.1
log
@	* All *.scm files: Update copyright year.
	* utils.scm (copyright-fsf, copyright-redhat): Ditto.
@
text
@d2 1
a2 1
; Copyright (C) 2000, 2009 Red Hat, Inc.
@


1.10
log
@	* dev.scm (cload) <SID-SIMULATOR>: New case, duplicated from
	SIMULATOR.
@
text
@d13 1
a13 1
; (cload #:arch arch #:machs "mach-list" #:isas "isa-list" #:options "options")
d33 1
a33 1
  (let ((arch #f)
d45 1
a45 1
	      ((#:arch) (set! arch (cadr args)))
d54 1
a54 1
      ((DESC) (cpu-load (string-append "./cpu/" arch ".cpu")
d59 1
a59 1
      ((DOC) (cpu-load (string-append "./cpu/" arch ".cpu")
d64 1
a64 1
      ((OPCODES) (cpu-load (string-append "./cpu/" arch ".cpu")
d69 1
a69 1
      ((GAS-TEST) (cpu-load (string-append "./cpu/" arch ".cpu")
d74 1
a74 1
      ((SIMULATOR) (cpu-load (string-append "./cpu/" arch ".cpu")
d79 1
a79 1
      ((SID-SIMULATOR) (cpu-load (string-append "./cpu/" arch ".cpu")
d84 1
a84 1
      ((SIM-TEST) (cpu-load (string-append "./cpu/" arch ".cpu")
d108 1
a108 1
  ; guile> (cload #:arch "m32r")
d184 1
a184 1
(cload #:arch \"arch\" #:machs \"keep-mach\" #:isas \"keep-isa\" #:options \"options\")
@


1.9
log
@2005-06-15  Dave Brolley  <brolley@@redhat.com>

        * sid-cpu.scm (-gen-hw-stream-and-destream-fns): New function.
        (cgen-cpu.h): Call it.

        Contributed on behalf of Graydon Hoare
        2001-06-05  graydon hoare  <graydon@@redhat.com>

        * utils.scm (foldl): Define.
        (foldr): Define.
        (filter): Define.
        (union): Define.
        (intersection): Simplify.
        * sid.scm : Set APPLICATION to SID-SIMULATOR.
        (-op-gen-delayed-set-maybe-trace): Define.
        (<operand> 'gen-set-{quiet,trace}): Delegate to
        op-gen-delayed-set-quiet etc. Note: this is still a little tangled
        up and needs cleaning.
        (-with-parallel?): Hardwire with-parallel to #t.
        (<operand> 'cxmake-get): Replace with lookahead-aware code
        * sid-decode.scm: Remove per-insn writeback fns.
        (-gen-idesc-decls): Redefine sem_fn type.
        * sid-cpu.scm (gen-write-stack-structure): Replace parexec stuff
        with write stack stuff.
        (cgen-write.cxx): Replace per-insn writebacks with single write
        stack writeback. Add write stack reset function.
        (-gen-scache-semantic-fn insn): Replace parexec stuff with write
        stack stuff.
        * rtl-c.scm (xop): Clone operand into delayed operand if #:delayed
        estate attribute set.
        (delay): Set #:delayed attribute to calculated delay, update
        maximum delay of cpu, check (delay ...) usage.
        * operand.scm (<operand>): Add delayed slot to <operand>.
        * mach.scm (<cpu>): Add max-delay slot to <cpu>.
        * dev.scm (load-sid): Set APPLICATION to SID-SIMULATOR.
        * doc/rtl.texi (Expressions): Add section on (delay ...).
@
text
@d79 5
@


1.8
log
@Make backtraces work more reliably.
* guile.scm: Set up debugging parameters, and enable debugging and
source positions while loading.
(cgen-call-with-debugging, cgen-debugging-stack-start): New
functions.
* read.scm: Don't set debugging parameters here.
(catch-with-backtrace): Function deleted.
(-cgen): Simply note the presence or absence of the -b option.
Pass the flag to cgen-call-with-debugging, so debugging is turned
off here if the user didn't request it, for faster computation.
(cgen): Call cgen-debugging-stack-start here, instead of
catch-with-backtrace.

* Makefile.am (GUILE): Explicitly load guile.scm here, and leave a
trailing -s.
(desc, html, opcodes, sim-arch, sim-cpu, gas-test, sim-test):
Don't write out the trailing -s here.
* Makefile.in: Regenerated.
* cgen-doc.scm, cgen-gas.scm, cgen-stest.scm): Don't load
fixup.scm here; let the caller decide which Scheme's customization
file to preload.
* dev.scm: Load guile.scm, not fixup.scm.
* fixup.scm: Deleted; contents have all moved to guile.scm.
* README: Doc fix.

* guile.scm (debug-write): New function.
@
text
@d135 1
a135 1
  (set! APPLICATION 'SIMULATOR)
@


1.7
log
@	* mach.scm (current-*-add!): Disallow redefinition.  Make result
	"unspecified".
	* insn.scm (insn-builtin!): Don't define relaxable here, now defined in
	operand.scm.
	* operand.scm (operand-builtin!): Define RELAXABLE for insns too.
	* cpu/m32r.cpu (disp8,disp24): RELAX renamed to RELAXABLE.

	* gen-all-doc: Split arm and frv docs up a bit.

	* cpu/arm.cpu: Add IDOC attribute.
	* cpu/frv.cpu: Ditto.
	* cpu/i960.cpu: Ditto.
	* cpu/openrisc.cpu: Ditto.
	* cpu/xstormy16.cpu: Ditto.
	* cpu/m32r.cpu: Ditto.
	(all insns): Explicitly specify IDOC attribute.

	* Makefile.am (MACH,ISAS,INSN_FILE_NAME): New vars.
	(desc,opcodes,sim-arch,sim-cpu,gas-test,sim-test): Use MACH,ISAS.
	(html): Use MACH,ISAS,INSN_FILE_NAME.  Generate insn.html separately.
	* Makefile.in: Regenerate.
	* attr.scm (<integer-attribute>:parse-value-def): Implement.
	(-attr-read): Defer computing default value until we know the type.
	(attr-has-attr?): Delete, move contents to <attr-list>:has-attr?.
	(<attr-list>:attr-present?): New method.
	(atlist-attr-present?,obj-attr-present?): New fns.
	(obj-has-attr-value?,obj-has-attr-value-no-default?): New fns.
	(attr-builtin!): New insn attr IDOC.
	* cgen-doc.scm (doc-arguments): New args -I,-N.
	* enum.scm (parse-enum-vals): New arg errtxt, all callers updated.
	Support comment as fourth element of enum value.
	(enum-val-name,enum-val-value,enum-val-attrs,enum-val-comment): New fns.
	* html.scm (gen-html-header): New arg kind, all callers updated.
	(gen-table-of-contents): New arg insn-file, all callers updated.
	(gen-list-entry,gen-doc-header): New fn.
	(get-operands): Delete.
	(gen-iformat-table): Rewrite.
	(gen-insn-doc-1): Print constant-folded and trimmed semantics.
	(gen-insn-doc-list): New args name, comment, insns.  All callers updated.
	(get-insn-properties,guess-insn-idoc-attr!): New fn.
	(insn-sets-pc?,insn-refs-mem?,insn-uses-fpu?): New fns.
	(get-insns-for-category,gen-categories-insn-lists): New fns.
	(gen-insn-docs): Simplify each insn's semantics first.
	Print insn tables sorted by IDOC categories.
	(*insn-html-file-name*): New global.
	(cgen-insn.html): New fn.
	(cgen-all): Update.
	* insn.scm (<insn>): Create a setter for the `tmp' member.
	* semantics.scm (insn-build-known-values): Renamed from
	-build-known-values.  All callers updated.

	* rtl.scm: Move traveral/evaluation support to ...
	* rtl-traverse.scm: New file.
	* read.scm: Maybe-load rtl-traverse.scm.

	* rtl.scm (-rtx-valid-types): Add SETRTX.

	* rtx-funcs.scm (nop,parallel): Fix mode.

	* utils.scm (eqv-lookup-index): New fn.
	(assq-lookup-index): Renamed from lookup-index.  All callers updated.

	* dev.scm (load-doc): Set APPLICATION.
@
text
@d15 1
a15 1
; First load fixup.scm to coerce guile into something we've been using.
d17 1
a17 1
(load "fixup.scm")
@


1.6
log
@	* Makefile.am (srcroot): New var.
	(html): New rule.
	* Makefile.in: Regenerate.
	* cgen-doc.scm: New file.
	* html.scm: New file.
	* gen-all-doc: New file.
	* dev.scm (cload): Handle DOC application.
	(load-doc): New fn.
	* machs.scm (machs-for-cpu): New fn.
	* model.scm (models-for-cpu): New fn.
	* utils.scm (gen-c-copyright): Renamed from gen-copyright.
	All uses updated.
	(iota): Rewrite to be identical to pmacro version.  All uses updated.
	* utils-cgen.scm (alpha-sort-obj-list): New fn.
@
text
@d100 5
@


1.5
log
@	* dev.scm (cload): Update location of .cpu files.
@
text
@d59 5
d95 7
d161 1
@


1.4
log
@2002-11-05  Frank Ch. Eigler  <fche@@redhat.com>

	* dev.scm: Call getenv with a string, not a symbol.
@
text
@d54 1
a54 1
      ((DESC) (cpu-load (string-append arch ".cpu")
d59 1
a59 1
      ((OPCODES) (cpu-load (string-append arch ".cpu")
d64 1
a64 1
      ((GAS-TEST) (cpu-load (string-append arch ".cpu")
d69 1
a69 1
      ((SIMULATOR) (cpu-load (string-append arch ".cpu")
d74 1
a74 1
      ((SIM-TEST) (cpu-load (string-append arch ".cpu")
@


1.3
log
@2000-12-08  Ben Elliston  <bje@@redhat.com>

	* dev.scm (load-sid): New function.
	* cgen-sid.scm: New file.
	* sid-cpu.scm: Likeiwse.
	* sid-decode.scm: Likewise.
	* sid-model.scm: Likewise.
	* sid.scm: Likewise.
@
text
@d192 1
a192 1
(let ((cgenrc (string-append (getenv 'HOME) "/.cgenrc")))
@


1.2
log
@	* dev.scm: Add srcdir to %load-path.

	* rtx-funcs.scm (subword): Mode of argument can be different
	than mode of result, so don't use OP0 to specify argument's mode.
@
text
@d12 1
d110 10
d185 4
@


1.1
log
@Initial revision
@
text
@d19 1
@


1.1.1.1
log
@CGEN 1.0 import
@
text
@@
