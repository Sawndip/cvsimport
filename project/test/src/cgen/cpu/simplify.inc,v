head	1.2;
access;
symbols
	sid-snapshot-20180601:1.2
	cgen-snapshot-20180601:1.2
	sid-snapshot-20180501:1.2
	cgen-snapshot-20180501:1.2
	sid-snapshot-20180401:1.2
	cgen-snapshot-20180401:1.2
	sid-snapshot-20180301:1.2
	cgen-snapshot-20180301:1.2
	sid-snapshot-20180201:1.2
	cgen-snapshot-20180201:1.2
	sid-snapshot-20180101:1.2
	cgen-snapshot-20180101:1.2
	sid-snapshot-20171201:1.2
	cgen-snapshot-20171201:1.2
	sid-snapshot-20171101:1.2
	cgen-snapshot-20171101:1.2
	sid-snapshot-20171001:1.2
	cgen-snapshot-20171001:1.2
	sid-snapshot-20170901:1.2
	cgen-snapshot-20170901:1.2
	sid-snapshot-20170801:1.2
	cgen-snapshot-20170801:1.2
	sid-snapshot-20170701:1.2
	cgen-snapshot-20170701:1.2
	sid-snapshot-20170601:1.2
	cgen-snapshot-20170601:1.2
	sid-snapshot-20170501:1.2
	cgen-snapshot-20170501:1.2
	sid-snapshot-20170401:1.2
	cgen-snapshot-20170401:1.2
	sid-snapshot-20170301:1.2
	cgen-snapshot-20170301:1.2
	sid-snapshot-20170201:1.2
	cgen-snapshot-20170201:1.2
	sid-snapshot-20170101:1.2
	cgen-snapshot-20170101:1.2
	sid-snapshot-20161201:1.2
	cgen-snapshot-20161201:1.2
	sid-snapshot-20161101:1.2
	cgen-snapshot-20161101:1.2
	sid-snapshot-20160901:1.2
	cgen-snapshot-20160901:1.2
	sid-snapshot-20160801:1.2
	cgen-snapshot-20160801:1.2
	sid-snapshot-20160701:1.2
	cgen-snapshot-20160701:1.2
	sid-snapshot-20160601:1.2
	cgen-snapshot-20160601:1.2
	sid-snapshot-20160501:1.2
	cgen-snapshot-20160501:1.2
	sid-snapshot-20160401:1.2
	cgen-snapshot-20160401:1.2
	sid-snapshot-20160301:1.2
	cgen-snapshot-20160301:1.2
	sid-snapshot-20160201:1.2
	cgen-snapshot-20160201:1.2
	sid-snapshot-20160101:1.2
	cgen-snapshot-20160101:1.2
	sid-snapshot-20151201:1.2
	cgen-snapshot-20151201:1.2
	sid-snapshot-20151101:1.2
	cgen-snapshot-20151101:1.2
	sid-snapshot-20151001:1.2
	cgen-snapshot-20151001:1.2
	sid-snapshot-20150901:1.2
	cgen-snapshot-20150901:1.2
	sid-snapshot-20150801:1.2
	cgen-snapshot-20150801:1.2
	sid-snapshot-20150701:1.2
	cgen-snapshot-20150701:1.2
	sid-snapshot-20150601:1.2
	cgen-snapshot-20150601:1.2
	sid-snapshot-20150501:1.2
	cgen-snapshot-20150501:1.2
	sid-snapshot-20150401:1.2
	cgen-snapshot-20150401:1.2
	sid-snapshot-20150301:1.2
	cgen-snapshot-20150301:1.2
	sid-snapshot-20150201:1.2
	cgen-snapshot-20150201:1.2
	sid-snapshot-20150101:1.2
	cgen-snapshot-20150101:1.2
	sid-snapshot-20141201:1.2
	cgen-snapshot-20141201:1.2
	sid-snapshot-20141101:1.2
	cgen-snapshot-20141101:1.2
	sid-snapshot-20141001:1.2
	cgen-snapshot-20141001:1.2
	sid-snapshot-20140901:1.2
	cgen-snapshot-20140901:1.2
	sid-snapshot-20140801:1.2
	cgen-snapshot-20140801:1.2
	sid-snapshot-20140701:1.2
	cgen-snapshot-20140701:1.2
	sid-snapshot-20140601:1.2
	cgen-snapshot-20140601:1.2
	sid-snapshot-20140501:1.2
	cgen-snapshot-20140501:1.2
	sid-snapshot-20140401:1.2
	cgen-snapshot-20140401:1.2
	sid-snapshot-20140301:1.2
	cgen-snapshot-20140301:1.2
	sid-snapshot-20140201:1.2
	cgen-snapshot-20140201:1.2
	sid-snapshot-20140101:1.2
	cgen-snapshot-20140101:1.2
	sid-snapshot-20131201:1.2
	cgen-snapshot-20131201:1.2
	sid-snapshot-20131101:1.2
	cgen-snapshot-20131101:1.2
	sid-snapshot-20131001:1.2
	cgen-snapshot-20131001:1.2
	sid-snapshot-20130901:1.2
	cgen-snapshot-20130901:1.2
	sid-snapshot-20130801:1.2
	cgen-snapshot-20130801:1.2
	sid-snapshot-20130701:1.2
	cgen-snapshot-20130701:1.2
	sid-snapshot-20130601:1.2
	cgen-snapshot-20130601:1.2
	sid-snapshot-20130501:1.2
	cgen-snapshot-20130501:1.2
	sid-snapshot-20130401:1.2
	cgen-snapshot-20130401:1.2
	sid-snapshot-20130301:1.2
	cgen-snapshot-20130301:1.2
	sid-snapshot-20130201:1.2
	cgen-snapshot-20130201:1.2
	sid-snapshot-20130101:1.2
	cgen-snapshot-20130101:1.2
	sid-snapshot-20121201:1.2
	cgen-snapshot-20121201:1.2
	sid-snapshot-20121101:1.2
	cgen-snapshot-20121101:1.2
	sid-snapshot-20121001:1.2
	cgen-snapshot-20121001:1.2
	sid-snapshot-20120901:1.2
	cgen-snapshot-20120901:1.2
	sid-snapshot-20120801:1.2
	cgen-snapshot-20120801:1.2
	sid-snapshot-20120701:1.2
	cgen-snapshot-20120701:1.2
	sid-snapshot-20120601:1.2
	cgen-snapshot-20120601:1.2
	sid-snapshot-20120501:1.2
	cgen-snapshot-20120501:1.2
	sid-snapshot-20120401:1.2
	cgen-snapshot-20120401:1.2
	sid-snapshot-20120301:1.2
	cgen-snapshot-20120301:1.2
	sid-snapshot-20120201:1.2
	cgen-snapshot-20120201:1.2
	sid-snapshot-20120101:1.2
	cgen-snapshot-20120101:1.2
	sid-snapshot-20111201:1.2
	cgen-snapshot-20111201:1.2
	sid-snapshot-20111101:1.2
	cgen-snapshot-20111101:1.2
	sid-snapshot-20111001:1.2
	cgen-snapshot-20111001:1.2
	gdb_7_3-branch:1.2.0.2
	sid-snapshot-20110901:1.2
	cgen-snapshot-20110901:1.2
	sid-snapshot-20110801:1.2
	cgen-snapshot-20110801:1.2
	sid-snapshot-20110701:1.2
	cgen-snapshot-20110701:1.2
	sid-snapshot-20110601:1.2
	cgen-snapshot-20110601:1.2
	sid-snapshot-20110501:1.2
	cgen-snapshot-20110501:1.2
	sid-snapshot-20110401:1.2
	cgen-snapshot-20110401:1.2
	sid-snapshot-20110301:1.2
	cgen-snapshot-20110301:1.2
	sid-snapshot-20110201:1.2
	cgen-snapshot-20110201:1.2
	sid-snapshot-20110101:1.2
	cgen-snapshot-20110101:1.2
	sid-snapshot-20101201:1.2
	cgen-snapshot-20101201:1.2
	sid-snapshot-20101101:1.2
	cgen-snapshot-20101101:1.2
	sid-snapshot-20101001:1.2
	cgen-snapshot-20101001:1.2
	sid-snapshot-20100901:1.2
	cgen-snapshot-20100901:1.2
	sid-snapshot-20100801:1.2
	cgen-snapshot-20100801:1.2
	sid-snapshot-20100701:1.2
	cgen-snapshot-20100701:1.2
	sid-snapshot-20100601:1.2
	cgen-snapshot-20100601:1.2
	sid-snapshot-20100501:1.2
	cgen-snapshot-20100501:1.2
	sid-snapshot-20100401:1.2
	cgen-snapshot-20100401:1.2
	sid-snapshot-20100301:1.2
	cgen-snapshot-20100301:1.2
	sid-snapshot-20100201:1.2
	cgen-snapshot-20100201:1.2
	sid-snapshot-20100101:1.2
	cgen-snapshot-20100101:1.2
	sid-snapshot-20091201:1.2
	cgen-snapshot-20091201:1.2
	sid-snapshot-20091101:1.2
	cgen-snapshot-20091101:1.2
	sid-snapshot-20091001:1.2
	cgen-snapshot-20091001:1.2
	arc-sim-20090309:1.1
	sid-snapshot-20090901:1.2
	cgen-snapshot-20090901:1.2
	sid-snapshot-20090801:1.2
	cgen-snapshot-20090801:1.2
	sid-snapshot-20090701:1.1
	cgen-snapshot-20090701:1.1
	dje-cgen-play1-branch:1.1.0.88
	dje-cgen-play1-branchpoint:1.1
	cgen-1_1-branch:1.1.0.86
	cgen-1_1-branchpoint:1.1
	sid-snapshot-20090601:1.1
	cgen-snapshot-20090601:1.1
	sid-snapshot-20090501:1.1
	cgen-snapshot-20090501:1.1
	sid-snapshot-20090401:1.1
	cgen-snapshot-20090401:1.1
	arc-insight_6_8-branch:1.1.0.84
	arc-insight_6_8-branchpoint:1.1
	sid-snapshot-20090301:1.1
	cgen-snapshot-20090301:1.1
	sid-snapshot-20090201:1.1
	cgen-snapshot-20090201:1.1
	sid-snapshot-20090101:1.1
	cgen-snapshot-20090101:1.1
	sid-snapshot-20081201:1.1
	cgen-snapshot-20081201:1.1
	sid-snapshot-20081101:1.1
	cgen-snapshot-20081101:1.1
	sid-snapshot-20081001:1.1
	cgen-snapshot-20081001:1.1
	sid-snapshot-20080901:1.1
	cgen-snapshot-20080901:1.1
	sid-snapshot-20080801:1.1
	cgen-snapshot-20080801:1.1
	sid-snapshot-20080701:1.1
	cgen-snapshot-20080701:1.1
	sid-snapshot-20080601:1.1
	cgen-snapshot-20080601:1.1
	sid-snapshot-20080501:1.1
	cgen-snapshot-20080501:1.1
	sid-snapshot-20080403:1.1
	sid-snapshot-20080401:1.1
	cgen-snapshot-20080401:1.1
	sid-snapshot-20080301:1.1
	cgen-snapshot-20080301:1.1
	sid-snapshot-20080201:1.1
	cgen-snapshot-20080201:1.1
	sid-snapshot-20080101:1.1
	cgen-snapshot-20080101:1.1
	sid-snapshot-20071201:1.1
	cgen-snapshot-20071201:1.1
	sid-snapshot-20071101:1.1
	cgen-snapshot-20071101:1.1
	sid-snapshot-20071001:1.1
	cgen-snapshot-20071001:1.1
	msnyder-fork-checkpoint-branch:1.1.0.82
	msnyder-fork-checkpoint-branchpoint:1.1
	gdb-csl-arm-20051020-branch:1.1.0.78
	gdb-csl-arm-20051020-branchpoint:1.1
	drow_intercu-merge-20040921:1.1
	drow_intercu-merge-20040915:1.1
	jimb-gdb_6_2-e500-branch:1.1.0.80
	jimb-gdb_6_2-e500-branchpoint:1.1
	gdb_6_2-20040730-release:1.1
	gdb_6_2-branch:1.1.0.76
	gdb_6_2-2004-07-10-gmt-branchpoint:1.1
	gdb_6_1_1-20040616-release:1.1
	gdb_6_1-2004-04-05-release:1.1
	drow_intercu-merge-20040402:1.1
	drow_intercu-merge-20040327:1.1
	ezannoni_pie-20040323-branch:1.1.0.74
	ezannoni_pie-20040323-branchpoint:1.1
	cagney_tramp-20040321-mergepoint:1.1
	cagney_tramp-20040309-branch:1.1.0.72
	cagney_tramp-20040309-branchpoint:1.1
	gdb_6_1-branch:1.1.0.70
	gdb_6_1-2004-03-01-gmt-branchpoint:1.1
	drow_intercu-20040221-branch:1.1.0.68
	drow_intercu-20040221-branchpoint:1.1
	cagney_bfdfile-20040213-branch:1.1.0.66
	cagney_bfdfile-20040213-branchpoint:1.1
	drow-cplus-merge-20040208:1.1
	carlton_dictionary-20040126-merge:1.1
	cagney_bigcore-20040122-branch:1.1.0.64
	cagney_bigcore-20040122-branchpoint:1.1
	drow-cplus-merge-20040113:1.1
	drow-cplus-merge-20031224:1.1
	drow-cplus-merge-20031220:1.1
	carlton_dictionary-20031215-merge:1.1
	drow-cplus-merge-20031214:1.1
	carlton-dictionary-20031111-merge:1.1
	gdb_6_0-2003-10-04-release:1.1
	kettenis_sparc-20030918-branch:1.1.0.62
	kettenis_sparc-20030918-branchpoint:1.1
	carlton_dictionary-20030917-merge:1.1
	ezannoni_pie-20030916-branchpoint:1.1
	ezannoni_pie-20030916-branch:1.1.0.60
	cagney_x86i386-20030821-branch:1.1.0.58
	cagney_x86i386-20030821-branchpoint:1.1
	carlton_dictionary-20030805-merge:1.1
	carlton_dictionary-20030627-merge:1.1
	gdb_6_0-branch:1.1.0.56
	gdb_6_0-2003-06-23-branchpoint:1.1
	jimb-ppc64-linux-20030613-branch:1.1.0.54
	jimb-ppc64-linux-20030613-branchpoint:1.1
	cagney_convert-20030606-branch:1.1.0.52
	cagney_convert-20030606-branchpoint:1.1
	cagney_writestrings-20030508-branch:1.1.0.50
	cagney_writestrings-20030508-branchpoint:1.1
	jimb-ppc64-linux-20030528-branch:1.1.0.48
	jimb-ppc64-linux-20030528-branchpoint:1.1
	carlton_dictionary-20030523-merge:1.1
	cagney_fileio-20030521-branch:1.1.0.46
	cagney_fileio-20030521-branchpoint:1.1
	kettenis_i386newframe-20030517-mergepoint:1.1
	jimb-ppc64-linux-20030509-branch:1.1.0.44
	jimb-ppc64-linux-20030509-branchpoint:1.1
	kettenis_i386newframe-20030504-mergepoint:1.1
	carlton_dictionary-20030430-merge:1.1
	kettenis_i386newframe-20030419-branch:1.1.0.42
	kettenis_i386newframe-20030419-branchpoint:1.1
	carlton_dictionary-20030416-merge:1.1
	cagney_frameaddr-20030409-mergepoint:1.1
	kettenis_i386newframe-20030406-branch:1.1.0.40
	kettenis_i386newframe-20030406-branchpoint:1.1
	cagney_frameaddr-20030403-branchpoint:1.1
	cagney_frameaddr-20030403-branch:1.1.0.38
	cagney_framebase-20030330-mergepoint:1.1
	cagney_framebase-20030326-branch:1.1.0.36
	cagney_framebase-20030326-branchpoint:1.1
	cagney_lazyid-20030317-branch:1.1.0.34
	cagney_lazyid-20030317-branchpoint:1.1
	kettenis-i386newframe-20030316-mergepoint:1.1
	offbyone-20030313-branch:1.1.0.32
	offbyone-20030313-branchpoint:1.1
	kettenis-i386newframe-20030308-branch:1.1.0.30
	kettenis-i386newframe-20030308-branchpoint:1.1
	carlton_dictionary-20030305-merge:1.1
	cagney_offbyone-20030303-branch:1.1.0.28
	cagney_offbyone-20030303-branchpoint:1.1
	carlton_dictionary-20030207-merge:1.1
	interps-20030202-branch:1.1.0.26
	interps-20030202-branchpoint:1.1
	cagney-unwind-20030108-branch:1.1.0.24
	cagney-unwind-20030108-branchpoint:1.1
	carlton_dictionary-20021223-merge:1.1
	gdb_5_3-2002-12-12-release:1.1
	carlton_dictionary-20021115-merge:1.1
	kseitz_interps-20021105-merge:1.1
	kseitz_interps-20021103-merge:1.1
	drow-cplus-merge-20021020:1.1
	drow-cplus-merge-20021025:1.1
	carlton_dictionary-20021025-merge:1.1
	carlton_dictionary-20021011-merge:1.1
	drow-cplus-branch:1.1.0.22
	drow-cplus-branchpoint:1.1
	kseitz_interps-20020930-merge:1.1
	carlton_dictionary-20020927-merge:1.1
	carlton_dictionary-branch:1.1.0.20
	carlton_dictionary-20020920-branchpoint:1.1
	sid-20020905-branchpoint:1.1
	sid-20020905-branch:1.1.0.18
	gdb_5_3-branch:1.1.0.16
	gdb_5_3-2002-09-04-branchpoint:1.1
	kseitz_interps-20020829-merge:1.1
	cagney_sysregs-20020825-branch:1.1.0.14
	cagney_sysregs-20020825-branchpoint:1.1
	readline_4_3-import-branch:1.1.0.12
	readline_4_3-import-branchpoint:1.1
	gdb_5_2_1-2002-07-23-release:1.1
	kseitz_interps-20020528-branch:1.1.0.10
	kseitz_interps-20020528-branchpoint:1.1
	cagney_regbuf-20020515-branch:1.1.0.8
	cagney_regbuf-20020515-branchpoint:1.1
	jimb-macro-020506-branch:1.1.0.6
	jimb-macro-020506-branchpoint:1.1
	gdb_5_2-2002-04-29-release:1.1
	gdb_5_2-branch:1.1.0.4
	gdb_5_2-2002-03-03-branchpoint:1.1
	cygnus_cvs_20020108_pre:1.1
	cgen-1-1-branch:1.1.0.2;
locks; strict;
comment	@# @;


1.2
date	2009.07.16.17.53.25;	author devans;	state Exp;
branches
	1.2.2.1;
next	1.1;

1.1
date	2001.07.05.12.45.47;	author bje;	state Exp;
branches;
next	;

1.2.2.1
date	2011.09.04.17.03.15;	author brobecke;	state Exp;
branches;
next	;


desc
@@


1.2
log
@	* cpu/simplify.inc (*): One line doc strings don't need \n.
	(df): Invoke define-full-ifield instead of claiming it's an alias.
	(dno): Define.
	(dnop): Mark as deprecated.
@
text
@; Collection of macros to simplify .cpu file writing. -*- Scheme -*-
; Copyright (C) 2000, 2009 Red Hat, Inc.
; This file is part of CGEN.
; See file COPYING.CGEN for details.

; Enums.

; Define a normal enum without using name/value pairs.
; This is currently the same as define-full-enum but it needn't remain
; that way (it's define-full-enum that would change).

(define-pmacro (define-normal-enum name comment attrs prefix vals)
  "Define a normal enum, fixed number of arguments."
  (define-full-enum name comment attrs prefix vals)
)

; Define a normal insn enum.

(define-pmacro (define-normal-insn-enum name comment attrs prefix fld vals)
  "Define a normal instruction opcode enum."
  (define-full-insn-enum name comment attrs prefix fld vals)
)

; Instruction fields.

; Normally, fields are unsigned and have no encode/decode needs.

(define-pmacro (define-normal-ifield name comment attrs start length)
  "Define a normal instruction field."
  (define-full-ifield name comment attrs start length UINT #f #f)
)

; For those who don't like typing.

(define-pmacro (df name comment attrs start length mode encode decode)
  "Shorthand form of normal fields requiring mode, encode/decode."
  (define-full-ifield name comment attrs start length mode encode decode)
)
(define-pmacro dnf
  "Shorthand form of define-normal-ifield."
  define-normal-ifield
)

; Define a normal multi-ifield.

(define-pmacro (define-normal-multi-ifield name comment attrs
		 mode subflds insert extract)
  "Define a normal multi-part instruction field."
  (define-full-multi-ifield name comment attrs mode subflds insert extract)
)

; For those who don't like typing.

(define-pmacro dnmf
  "Shorthand form of define-normal-multi-ifield."
  define-normal-multi-ifield
)

; Simple multi-ifields: mode is UINT, default insert/extract support,
; default encode/decode support.

(define-pmacro (dsmf name comment attrs subflds)
  "Define a simple multi-part instruction field."
  (define-full-multi-ifield name comment attrs UINT subflds #f #f)
)

; Hardware.

; Simpler version for most hardware elements.
; Allow special assembler support specification but no semantic-name,
; getter/setter, or layout specs.

(define-pmacro (define-normal-hardware name comment attrs type
		 indices values handlers)
  "Define a normal hardware element."
  (define-full-hardware name comment attrs name type
    indices values handlers () () ())
)

; For those who don't like typing.

(define-pmacro dnh
  "Shorthand form of define-normal-hardware."
  define-normal-hardware
)

; Simpler version of dnh that leaves out the indices, values, handlers,
; getter/setter, and layout specs.
; This is useful for 1 bit registers.
; ??? While dsh and dnh aren't that distinguishable when perusing a .cpu file,
; they both take a fixed number of positional arguments, and dsh is a proper
; subset of dnh with all arguments in the same positions, so methinks things
; are ok.

(define-pmacro (define-simple-hardware name comment attrs type)
  "Define a simple hardware element (usually a scalar register)."
  (define-full-hardware name comment attrs name type () () () () () ())
)

(define-pmacro dsh
  "Shorthand form of define-simple-hardware."
  define-simple-hardware
)

; Operands.

; Simpler version for most operands.
; Allow special assembler support specification but no handlers or
; getter/setter specs.

(define-pmacro (define-normal-operand name comment attrs type index)
  "Define a normal operand."
  (define-full-operand name comment attrs type DFLT index () () ())
)

; For those who don't like typing.

(define-pmacro dno
  "Shorthand form of define-normal-operand."
  define-normal-operand
)

; Deprecated, but still in wide use.

(define-pmacro dnop
  "Shorthand form of define-normal-operand."
  define-normal-operand
)

(define-pmacro (dndo x-name x-mode x-args
		     x-syntax x-base-ifield x-encoding x-ifield-assertion
		     x-getter x-setter)
  "Define a normal derived operand."
  (define-derived-operand
    (name x-name)
    (mode x-mode)
    (args x-args)
    (syntax x-syntax)
    (base-ifield x-base-ifield)
    (encoding x-encoding)
    (ifield-assertion x-ifield-assertion)
    (getter x-getter)
    (setter x-setter)
    )
)

; Instructions.

; Define an instruction object, normal version.
; At present all fields must be specified.
; Fields ifield-assertion is absent.

(define-pmacro (define-normal-insn name comment attrs syntax fmt semantics timing)
  "Define a normal instruction."
  (define-full-insn name comment attrs syntax fmt () semantics timing)
)

; To reduce the amount of typing.
; Note that this is the same name as the D'ni in MYST.  Oooohhhh.....
; this must be the right way to go. :-)

(define-pmacro dni
  "Shorthand form of define-normal-insn."
  define-normal-insn
)

; Macro instructions.

; Define a macro-insn object, normal version.
; This only supports expanding to one real insn.

(define-pmacro (define-normal-macro-insn name comment attrs syntax expansion)
  "Define a normal macro instruction."
  (define-full-minsn name comment attrs syntax expansion)
)

; To reduce the amount of typing.

(define-pmacro dnmi
  "Shorthand form of define-normal-macro-insn."
  define-normal-macro-insn
)

; Modes.
; ??? Not currently available for use.
;
; Define Normal Mode
;
;(define-pmacro (define-normal-mode name comment attrs bits bytes
;		 non-mode-c-type printf-type sem-mode ptr-to host?)
;  "Define a normal mode.\n"
;  (define-full-mode name comment attrs bits bytes
;    non-mode-c-type printf-type sem-mode ptr-to host?)
;)
;
; For those who don't like typing.
;(define-pmacro dnm
;  "Shorthand form of define-normal-mode.\n"
;  define-normal-mode
;)
@


1.2.2.1
log
@Import sources from cgen/cpu directory

cgen/cpu/ChangeLog:

 	* cris.cpu, frv.cpu, iq10.cpu, iq2000.cpu, iq2000m.cpu, lm32.cpu,
 	m32c.cpu, m32r.cpu, mt.cpu, sh.cpu, sh64-compact.cpu,
 	sh64-media.cpu, xc16x.cpu: New file, copied from cgen/cpu.
@
text
@d1 4
a4 22
; Collection of macros, for GNU Binutils .cpu files. -*- Scheme -*-
;
; Copyright 2000, 2007, 2009 Free Software Foundation, Inc.
;
; Contributed by Red Hat Inc.
;
; This file is part of the GNU Binutils.
;
; This program is free software; you can redistribute it and/or modify
; it under the terms of the GNU General Public License as published by
; the Free Software Foundation; either version 3 of the License, or
; (at your option) any later version.
;
; This program is distributed in the hope that it will be useful,
; but WITHOUT ANY WARRANTY; without even the implied warranty of
; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
; GNU General Public License for more details.
;
; You should have received a copy of the GNU General Public License
; along with this program; if not, write to the Free Software
; Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston,
; MA 02110-1301, USA.
@


1.1
log
@2001-07-05  Ben Elliston  <bje@@redhat.com>

	* README: Update.

	* read.scm (include): Include files from srcdir/cpu.
	(-cgen): Likewise for loading .cpu files.
	* *.cpu: Move all cpu descriptions into cpu subdirectory.
	* *.opc: Likewise.
	* simplify.inc: Likewise.
@
text
@d2 1
a2 1
; Copyright (C) 2000 Red Hat, Inc.
d13 1
a13 3
  "\
Define a normal enum, fixed number of arguments.
"
d20 1
a20 3
  "\
Define a normal instruction opcode enum.
"
d26 1
a26 1
; Normally, fields are unsigned have no encode/decode needs.
d29 1
a29 1
  "Define a normal instruction field.\n"
d35 3
a37 3
(define-pmacro df
  "Shorthand form of define-full-ifield.\n"
  define-full-ifield
d40 1
a40 1
  "Shorthand form of define-normal-ifield.\n"
a44 1
; FIXME: The define-normal version for ifields doesn't include the mode.
d48 1
a48 1
  "Define a normal multi-part instruction field.\n"
d55 1
a55 1
  "Shorthand form of define-normal-multi-ifield.\n"
d59 2
a60 1
; Simple multi-ifields: mode is UINT, default insert/extract support.
d63 1
a63 1
  "Define a simple multi-part instruction field.\n"
d70 2
a71 2
; Allow special assembler support specification but no semantic-name or
; get/set specs.
d75 1
a75 3
  "\
Define a normal hardware element.
"
d83 1
a83 1
  "Shorthand form of define-normal-hardware.\n"
d88 1
a88 1
; get, set, and layout specs.
d96 1
a96 3
  "\
Define a simple hardware element (usually a scalar register).
"
d101 1
a101 1
  "Shorthand form of define-simple-hardware.\n"
d107 4
d112 1
a112 1
  "Define a normal operand.\n"
d117 7
a123 1
; FIXME: dno?
d126 1
a126 1
  "Shorthand form of define-normal-operand.\n"
d154 1
a154 1
  "Define a normal instruction.\n"
d163 1
a163 1
  "Shorthand form of define-normal-insn.\n"
d173 1
a173 1
  "Define a normal macro instruction.\n"
d180 1
a180 1
  "Shorthand form of define-normal-macro-insn.\n"
@

