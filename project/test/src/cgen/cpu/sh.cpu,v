head	1.6;
access;
symbols
	sid-snapshot-20180601:1.6
	cgen-snapshot-20180601:1.6
	sid-snapshot-20180501:1.6
	cgen-snapshot-20180501:1.6
	sid-snapshot-20180401:1.6
	cgen-snapshot-20180401:1.6
	sid-snapshot-20180301:1.6
	cgen-snapshot-20180301:1.6
	sid-snapshot-20180201:1.6
	cgen-snapshot-20180201:1.6
	sid-snapshot-20180101:1.6
	cgen-snapshot-20180101:1.6
	sid-snapshot-20171201:1.6
	cgen-snapshot-20171201:1.6
	sid-snapshot-20171101:1.6
	cgen-snapshot-20171101:1.6
	sid-snapshot-20171001:1.6
	cgen-snapshot-20171001:1.6
	sid-snapshot-20170901:1.6
	cgen-snapshot-20170901:1.6
	sid-snapshot-20170801:1.6
	cgen-snapshot-20170801:1.6
	sid-snapshot-20170701:1.6
	cgen-snapshot-20170701:1.6
	sid-snapshot-20170601:1.6
	cgen-snapshot-20170601:1.6
	sid-snapshot-20170501:1.6
	cgen-snapshot-20170501:1.6
	sid-snapshot-20170401:1.6
	cgen-snapshot-20170401:1.6
	sid-snapshot-20170301:1.6
	cgen-snapshot-20170301:1.6
	sid-snapshot-20170201:1.6
	cgen-snapshot-20170201:1.6
	sid-snapshot-20170101:1.6
	cgen-snapshot-20170101:1.6
	sid-snapshot-20161201:1.6
	cgen-snapshot-20161201:1.6
	sid-snapshot-20161101:1.6
	cgen-snapshot-20161101:1.6
	sid-snapshot-20160901:1.6
	cgen-snapshot-20160901:1.6
	sid-snapshot-20160801:1.6
	cgen-snapshot-20160801:1.6
	sid-snapshot-20160701:1.6
	cgen-snapshot-20160701:1.6
	sid-snapshot-20160601:1.6
	cgen-snapshot-20160601:1.6
	sid-snapshot-20160501:1.6
	cgen-snapshot-20160501:1.6
	sid-snapshot-20160401:1.6
	cgen-snapshot-20160401:1.6
	sid-snapshot-20160301:1.6
	cgen-snapshot-20160301:1.6
	sid-snapshot-20160201:1.6
	cgen-snapshot-20160201:1.6
	sid-snapshot-20160101:1.6
	cgen-snapshot-20160101:1.6
	sid-snapshot-20151201:1.6
	cgen-snapshot-20151201:1.6
	sid-snapshot-20151101:1.6
	cgen-snapshot-20151101:1.6
	sid-snapshot-20151001:1.6
	cgen-snapshot-20151001:1.6
	sid-snapshot-20150901:1.6
	cgen-snapshot-20150901:1.6
	sid-snapshot-20150801:1.6
	cgen-snapshot-20150801:1.6
	sid-snapshot-20150701:1.6
	cgen-snapshot-20150701:1.6
	sid-snapshot-20150601:1.6
	cgen-snapshot-20150601:1.6
	sid-snapshot-20150501:1.6
	cgen-snapshot-20150501:1.6
	sid-snapshot-20150401:1.6
	cgen-snapshot-20150401:1.6
	sid-snapshot-20150301:1.6
	cgen-snapshot-20150301:1.6
	sid-snapshot-20150201:1.6
	cgen-snapshot-20150201:1.6
	sid-snapshot-20150101:1.6
	cgen-snapshot-20150101:1.6
	sid-snapshot-20141201:1.6
	cgen-snapshot-20141201:1.6
	sid-snapshot-20141101:1.6
	cgen-snapshot-20141101:1.6
	sid-snapshot-20141001:1.6
	cgen-snapshot-20141001:1.6
	sid-snapshot-20140901:1.6
	cgen-snapshot-20140901:1.6
	sid-snapshot-20140801:1.6
	cgen-snapshot-20140801:1.6
	sid-snapshot-20140701:1.6
	cgen-snapshot-20140701:1.6
	sid-snapshot-20140601:1.6
	cgen-snapshot-20140601:1.6
	sid-snapshot-20140501:1.6
	cgen-snapshot-20140501:1.6
	sid-snapshot-20140401:1.6
	cgen-snapshot-20140401:1.6
	sid-snapshot-20140301:1.6
	cgen-snapshot-20140301:1.6
	sid-snapshot-20140201:1.6
	cgen-snapshot-20140201:1.6
	sid-snapshot-20140101:1.6
	cgen-snapshot-20140101:1.6
	sid-snapshot-20131201:1.6
	cgen-snapshot-20131201:1.6
	sid-snapshot-20131101:1.6
	cgen-snapshot-20131101:1.6
	sid-snapshot-20131001:1.6
	cgen-snapshot-20131001:1.6
	sid-snapshot-20130901:1.6
	cgen-snapshot-20130901:1.6
	sid-snapshot-20130801:1.6
	cgen-snapshot-20130801:1.6
	sid-snapshot-20130701:1.6
	cgen-snapshot-20130701:1.6
	sid-snapshot-20130601:1.6
	cgen-snapshot-20130601:1.6
	sid-snapshot-20130501:1.6
	cgen-snapshot-20130501:1.6
	sid-snapshot-20130401:1.6
	cgen-snapshot-20130401:1.6
	sid-snapshot-20130301:1.6
	cgen-snapshot-20130301:1.6
	sid-snapshot-20130201:1.6
	cgen-snapshot-20130201:1.6
	sid-snapshot-20130101:1.6
	cgen-snapshot-20130101:1.6
	sid-snapshot-20121201:1.6
	cgen-snapshot-20121201:1.6
	sid-snapshot-20121101:1.6
	cgen-snapshot-20121101:1.6
	sid-snapshot-20121001:1.6
	cgen-snapshot-20121001:1.6
	sid-snapshot-20120901:1.6
	cgen-snapshot-20120901:1.6
	sid-snapshot-20120801:1.6
	cgen-snapshot-20120801:1.6
	sid-snapshot-20120701:1.6
	cgen-snapshot-20120701:1.6
	sid-snapshot-20120601:1.6
	cgen-snapshot-20120601:1.6
	sid-snapshot-20120501:1.6
	cgen-snapshot-20120501:1.6
	sid-snapshot-20120401:1.6
	cgen-snapshot-20120401:1.6
	sid-snapshot-20120301:1.6
	cgen-snapshot-20120301:1.6
	sid-snapshot-20120201:1.6
	cgen-snapshot-20120201:1.6
	sid-snapshot-20120101:1.6
	cgen-snapshot-20120101:1.6
	sid-snapshot-20111201:1.6
	cgen-snapshot-20111201:1.6
	sid-snapshot-20111101:1.6
	cgen-snapshot-20111101:1.6
	sid-snapshot-20111001:1.6
	cgen-snapshot-20111001:1.6
	gdb_7_3-branch:1.6.0.2
	sid-snapshot-20110901:1.6
	cgen-snapshot-20110901:1.6
	sid-snapshot-20110801:1.6
	cgen-snapshot-20110801:1.6
	sid-snapshot-20110701:1.6
	cgen-snapshot-20110701:1.6
	sid-snapshot-20110601:1.6
	cgen-snapshot-20110601:1.6
	sid-snapshot-20110501:1.6
	cgen-snapshot-20110501:1.6
	sid-snapshot-20110401:1.6
	cgen-snapshot-20110401:1.6
	sid-snapshot-20110301:1.6
	cgen-snapshot-20110301:1.6
	sid-snapshot-20110201:1.6
	cgen-snapshot-20110201:1.6
	sid-snapshot-20110101:1.6
	cgen-snapshot-20110101:1.6
	sid-snapshot-20101201:1.6
	cgen-snapshot-20101201:1.6
	sid-snapshot-20101101:1.6
	cgen-snapshot-20101101:1.6
	sid-snapshot-20101001:1.6
	cgen-snapshot-20101001:1.6
	sid-snapshot-20100901:1.6
	cgen-snapshot-20100901:1.6
	sid-snapshot-20100801:1.6
	cgen-snapshot-20100801:1.6
	sid-snapshot-20100701:1.6
	cgen-snapshot-20100701:1.6
	sid-snapshot-20100601:1.6
	cgen-snapshot-20100601:1.6
	sid-snapshot-20100501:1.6
	cgen-snapshot-20100501:1.6
	sid-snapshot-20100401:1.6
	cgen-snapshot-20100401:1.6
	sid-snapshot-20100301:1.6
	cgen-snapshot-20100301:1.6
	sid-snapshot-20100201:1.6
	cgen-snapshot-20100201:1.6
	sid-snapshot-20100101:1.5
	cgen-snapshot-20100101:1.5
	sid-snapshot-20091201:1.5
	cgen-snapshot-20091201:1.5
	sid-snapshot-20091101:1.5
	cgen-snapshot-20091101:1.5
	sid-snapshot-20091001:1.5
	cgen-snapshot-20091001:1.5
	arc-sim-20090309:1.4
	sid-snapshot-20090901:1.5
	cgen-snapshot-20090901:1.5
	sid-snapshot-20090801:1.4
	cgen-snapshot-20090801:1.4
	sid-snapshot-20090701:1.4
	cgen-snapshot-20090701:1.4
	dje-cgen-play1-branch:1.4.0.6
	dje-cgen-play1-branchpoint:1.4
	cgen-1_1-branch:1.4.0.4
	cgen-1_1-branchpoint:1.4
	sid-snapshot-20090601:1.4
	cgen-snapshot-20090601:1.4
	sid-snapshot-20090501:1.4
	cgen-snapshot-20090501:1.4
	sid-snapshot-20090401:1.4
	cgen-snapshot-20090401:1.4
	arc-insight_6_8-branch:1.4.0.2
	arc-insight_6_8-branchpoint:1.4
	sid-snapshot-20090301:1.4
	cgen-snapshot-20090301:1.4
	sid-snapshot-20090201:1.4
	cgen-snapshot-20090201:1.4
	sid-snapshot-20090101:1.4
	cgen-snapshot-20090101:1.4
	sid-snapshot-20081201:1.4
	cgen-snapshot-20081201:1.4
	sid-snapshot-20081101:1.4
	cgen-snapshot-20081101:1.4
	sid-snapshot-20081001:1.4
	cgen-snapshot-20081001:1.4
	sid-snapshot-20080901:1.4
	cgen-snapshot-20080901:1.4
	sid-snapshot-20080801:1.4
	cgen-snapshot-20080801:1.4
	sid-snapshot-20080701:1.4
	cgen-snapshot-20080701:1.4
	sid-snapshot-20080601:1.4
	cgen-snapshot-20080601:1.4
	sid-snapshot-20080501:1.4
	cgen-snapshot-20080501:1.4
	sid-snapshot-20080403:1.4
	sid-snapshot-20080401:1.4
	cgen-snapshot-20080401:1.4
	sid-snapshot-20080301:1.4
	cgen-snapshot-20080301:1.4
	sid-snapshot-20080201:1.4
	cgen-snapshot-20080201:1.4
	sid-snapshot-20080101:1.4
	cgen-snapshot-20080101:1.4
	sid-snapshot-20071201:1.4
	cgen-snapshot-20071201:1.4
	sid-snapshot-20071101:1.4
	cgen-snapshot-20071101:1.4
	sid-snapshot-20071001:1.4
	cgen-snapshot-20071001:1.4
	msnyder-fork-checkpoint-branch:1.3.0.36
	msnyder-fork-checkpoint-branchpoint:1.3
	gdb-csl-arm-20051020-branch:1.3.0.32
	gdb-csl-arm-20051020-branchpoint:1.3
	drow_intercu-merge-20040921:1.3
	drow_intercu-merge-20040915:1.3
	jimb-gdb_6_2-e500-branch:1.3.0.34
	jimb-gdb_6_2-e500-branchpoint:1.3
	gdb_6_2-20040730-release:1.3
	gdb_6_2-branch:1.3.0.30
	gdb_6_2-2004-07-10-gmt-branchpoint:1.3
	gdb_6_1_1-20040616-release:1.3
	gdb_6_1-2004-04-05-release:1.3
	drow_intercu-merge-20040402:1.3
	drow_intercu-merge-20040327:1.3
	ezannoni_pie-20040323-branch:1.3.0.28
	ezannoni_pie-20040323-branchpoint:1.3
	cagney_tramp-20040321-mergepoint:1.3
	cagney_tramp-20040309-branch:1.3.0.26
	cagney_tramp-20040309-branchpoint:1.3
	gdb_6_1-branch:1.3.0.24
	gdb_6_1-2004-03-01-gmt-branchpoint:1.3
	drow_intercu-20040221-branch:1.3.0.22
	drow_intercu-20040221-branchpoint:1.3
	cagney_bfdfile-20040213-branch:1.3.0.20
	cagney_bfdfile-20040213-branchpoint:1.3
	drow-cplus-merge-20040208:1.3
	carlton_dictionary-20040126-merge:1.3
	cagney_bigcore-20040122-branch:1.3.0.18
	cagney_bigcore-20040122-branchpoint:1.3
	drow-cplus-merge-20040113:1.3
	drow-cplus-merge-20031224:1.3
	drow-cplus-merge-20031220:1.3
	carlton_dictionary-20031215-merge:1.3
	drow-cplus-merge-20031214:1.3
	carlton-dictionary-20031111-merge:1.3
	gdb_6_0-2003-10-04-release:1.3
	kettenis_sparc-20030918-branch:1.3.0.16
	kettenis_sparc-20030918-branchpoint:1.3
	carlton_dictionary-20030917-merge:1.3
	ezannoni_pie-20030916-branchpoint:1.3
	ezannoni_pie-20030916-branch:1.3.0.14
	cagney_x86i386-20030821-branch:1.3.0.12
	cagney_x86i386-20030821-branchpoint:1.3
	carlton_dictionary-20030805-merge:1.3
	carlton_dictionary-20030627-merge:1.3
	gdb_6_0-branch:1.3.0.10
	gdb_6_0-2003-06-23-branchpoint:1.3
	jimb-ppc64-linux-20030613-branch:1.3.0.8
	jimb-ppc64-linux-20030613-branchpoint:1.3
	cagney_convert-20030606-branch:1.3.0.6
	cagney_convert-20030606-branchpoint:1.3
	cagney_writestrings-20030508-branch:1.2.0.6
	cagney_writestrings-20030508-branchpoint:1.2
	jimb-ppc64-linux-20030528-branch:1.3.0.4
	jimb-ppc64-linux-20030528-branchpoint:1.3
	carlton_dictionary-20030523-merge:1.3
	cagney_fileio-20030521-branch:1.3.0.2
	cagney_fileio-20030521-branchpoint:1.3
	kettenis_i386newframe-20030517-mergepoint:1.2
	jimb-ppc64-linux-20030509-branch:1.2.0.4
	jimb-ppc64-linux-20030509-branchpoint:1.2
	kettenis_i386newframe-20030504-mergepoint:1.2
	carlton_dictionary-20030430-merge:1.2
	kettenis_i386newframe-20030419-branch:1.2.0.2
	kettenis_i386newframe-20030419-branchpoint:1.2
	carlton_dictionary-20030416-merge:1.2
	cagney_frameaddr-20030409-mergepoint:1.1
	kettenis_i386newframe-20030406-branch:1.1.0.38
	kettenis_i386newframe-20030406-branchpoint:1.1
	cagney_frameaddr-20030403-branchpoint:1.1
	cagney_frameaddr-20030403-branch:1.1.0.36
	cagney_framebase-20030330-mergepoint:1.1
	cagney_framebase-20030326-branch:1.1.0.34
	cagney_framebase-20030326-branchpoint:1.1
	cagney_lazyid-20030317-branch:1.1.0.32
	cagney_lazyid-20030317-branchpoint:1.1
	kettenis-i386newframe-20030316-mergepoint:1.1
	offbyone-20030313-branch:1.1.0.30
	offbyone-20030313-branchpoint:1.1
	kettenis-i386newframe-20030308-branch:1.1.0.28
	kettenis-i386newframe-20030308-branchpoint:1.1
	carlton_dictionary-20030305-merge:1.1
	cagney_offbyone-20030303-branch:1.1.0.26
	cagney_offbyone-20030303-branchpoint:1.1
	carlton_dictionary-20030207-merge:1.1
	interps-20030202-branch:1.1.0.24
	interps-20030202-branchpoint:1.1
	cagney-unwind-20030108-branch:1.1.0.22
	cagney-unwind-20030108-branchpoint:1.1
	carlton_dictionary-20021223-merge:1.1
	gdb_5_3-2002-12-12-release:1.1
	carlton_dictionary-20021115-merge:1.1
	kseitz_interps-20021105-merge:1.1
	kseitz_interps-20021103-merge:1.1
	drow-cplus-merge-20021020:1.1
	drow-cplus-merge-20021025:1.1
	carlton_dictionary-20021025-merge:1.1
	carlton_dictionary-20021011-merge:1.1
	drow-cplus-branch:1.1.0.20
	drow-cplus-branchpoint:1.1
	kseitz_interps-20020930-merge:1.1
	carlton_dictionary-20020927-merge:1.1
	carlton_dictionary-branch:1.1.0.18
	carlton_dictionary-20020920-branchpoint:1.1
	sid-20020905-branchpoint:1.1
	sid-20020905-branch:1.1.0.16
	gdb_5_3-branch:1.1.0.14
	gdb_5_3-2002-09-04-branchpoint:1.1
	kseitz_interps-20020829-merge:1.1
	cagney_sysregs-20020825-branch:1.1.0.12
	cagney_sysregs-20020825-branchpoint:1.1
	readline_4_3-import-branch:1.1.0.10
	readline_4_3-import-branchpoint:1.1
	gdb_5_2_1-2002-07-23-release:1.1
	kseitz_interps-20020528-branch:1.1.0.8
	kseitz_interps-20020528-branchpoint:1.1
	cagney_regbuf-20020515-branch:1.1.0.6
	cagney_regbuf-20020515-branchpoint:1.1
	jimb-macro-020506-branch:1.1.0.4
	jimb-macro-020506-branchpoint:1.1
	gdb_5_2-2002-04-29-release:1.1
	gdb_5_2-branch:1.1.0.2
	gdb_5_2-2002-03-03-branchpoint:1.1;
locks; strict;
comment	@# @;


1.6
date	2010.01.25.03.50.43;	author devans;	state Exp;
branches
	1.6.2.1;
next	1.5;

1.5
date	2009.08.24.06.46.16;	author devans;	state Exp;
branches;
next	1.4;

1.4
date	2006.10.18.18.04.40;	author brolley;	state Exp;
branches;
next	1.3;

1.3
date	2003.05.21.14.10.46;	author amylaar;	state Exp;
branches;
next	1.2;

1.2
date	2003.04.15.08.51.52;	author nickc;	state Exp;
branches;
next	1.1;

1.1
date	2002.02.01.11.32.02;	author bje;	state Exp;
branches
	1.1.18.1
	1.1.20.1;
next	;

1.6.2.1
date	2011.09.04.17.03.15;	author brobecke;	state Exp;
branches;
next	;

1.1.18.1
date	2003.04.16.19.56.47;	author carlton;	state Exp;
branches;
next	1.1.18.2;

1.1.18.2
date	2003.05.23.18.40.30;	author carlton;	state Exp;
branches;
next	;

1.1.20.1
date	2003.12.14.20.26.56;	author drow;	state Exp;
branches;
next	;


desc
@@


1.6
log
@	* desc-cpu.scm (cgen-desc.h): Don't print virtual enums.
	* sid-cpu.scm (cgen-desc.h): Ditto.
	* enum.scm (enum-builtin!): New function.
	* read.scm (reader-install-builtin!): Call it.
	* rtl-c.scm (s-convop): Delete, replaced with ...
	(s-int-convop, s-float-convop): ... new fns.
	(ext, zext, trunc): Update.
	(fext, ftrunc, float, ufloat, fix, ufix): Update.
	* rtx-funcs.scm (fext, ftrunc, float, ufloat, fix, ufix): New parameter
	`how'.
	* cpu/mep-fmax.cpu (fcvtsw): Update.
	* cpu/sh.cpu (h-fsd, h-fmov): Update.
	* doc/rtl.texi (float-convop): Update.

	* frv.cpu (floating-point-conversion): Update call to fp conv op.
	(floating-point-dual-conversion, ne-floating-point-dual-conversion,
	conditional-floating-point-conversion, ne-floating-point-conversion,
	float-parallel-mul-add-double-semantics): Ditto.
@
text
@; Renesas / SuperH SH architecture description.  -*- Scheme -*-
; Copyright (C) 2000, 2001, 2006, 2009 Red Hat, Inc.
; This file is part of CGEN.
; See file COPYING.CGEN for details.

(define-rtl-version 0 8)

(include "simplify.inc")

; Macros to handle differences in CGEN for SID vs SIM are included
; here.
(if (application-is? SID-SIMULATOR)
    (include "sh-sid.cpu")
    (include "sh-sim.cpu"))

(define-arch
  (name sh)
  (comment "Renesas / SuperH SuperH (SH)")
  ; Should be #t but cgen can't handle variable length insns with #t
  (insn-lsb0? #f)
  (machs sh2 sh2e sh2a-fpu sh2a-nofpu
	 sh3 sh3e
	 sh4-nofpu sh4 sh4a-nofpu sh4a sh4al
	 sh5)
  (isas compact media)
)


; Instruction sets.

(define-isa
  (name media)
  (comment "SHmedia 32-bit instruction set")
  (base-insn-bitsize 32)
  ; not really parallel but some operands are shared between
  ; the ISAs and CGEN wants them all to be marked as parallel.
  (isa-parallel-insns 2)
)

(define-isa
  (name compact)
  (comment "SHcompact 16/32 bit instruction set")
  (default-insn-word-bitsize 32)
  (base-insn-bitsize 32)
  (isa-parallel-insns 2)
)


; CPU family.

(define-cpu
  (name sh64)
  (comment "SH 64-bit family")
  (endian either)
  (word-bitsize 32)
)


(define-mach
  (name sh2)
  (comment "SH-2 CPU core")
  (cpu sh64)
  (isas compact)
)

(define-mach
  (name sh2e)
  (comment "SH-2e CPU core")
  (cpu sh64)
  (isas compact)
)

(define-mach
  (name sh2a-fpu)
  (comment "SH-2a CPU core with fpu")
  (cpu sh64)
  (isas compact)
)

(define-mach
  (name sh2a-nofpu)
  (comment "SH-2a CPU core with no fpu")
  (cpu sh64)
  (isas compact)
)

(define-mach
  (name sh3)
  (comment "SH-3 CPU core")
  (cpu sh64)
  (isas compact)
)

(define-mach
  (name sh3e)
  (comment "SH-3e CPU core")
  (cpu sh64)
  (isas compact)
)

(define-mach
  (name sh4-nofpu)
  (comment "SH-4 CPU core - no fpu")
  (cpu sh64)
  (isas compact)
)

(define-mach
  (name sh4)
  (comment "SH-4 CPU core with fpu")
  (cpu sh64)
  (isas compact)
)

(define-mach
  (name sh4a-nofpu)
  (comment "SH-4a CPU core - no fpu")
  (cpu sh64)
  (isas compact)
)

(define-mach
  (name sh4a)
  (comment "SH-4a CPU core with fpu")
  (cpu sh64)
  (isas compact)
)

(define-mach
  (name sh4al)
  (comment "SH-4al CPU core")
  (cpu sh64)
  (isas compact)
)

(define-mach
  (name sh5)
  (comment "SH-5 CPU core")
  (cpu sh64)
  (isas compact media)
)

; Partition insns according to the mach in which they first appear.
(define-pmacro (SH2-MACH)        (MACH sh2,sh2e,sh2a-fpu,sh2a-nofpu,sh3,sh3e,sh4-nofpu,sh4,sh4a-nofpu,sh4a,sh4al,sh5)) ; sh2  and up
(define-pmacro (SH2e-MACH)       (MACH sh2e,sh2a-fpu,sh3e,sh4,sh4a,sh5))                                               ; sh2e and up
(define-pmacro (SH2a-nofpu-MACH) (MACH sh2a-nofpu,sh2a-fpu,sh4,sh4-nofpu,sh5))                                         ; sh2a and up
(define-pmacro (SH2a-MACH)       (MACH sh2a-fpu,sh4,sh5))                                                                  ; sh2a with fpu and up
(define-pmacro (SH3-MACH)        (MACH sh3,sh3e,sh4-nofpu,sh4,sh4a-nofpu,sh4a,sh4al,sh5))                              ; sh3  and up
(define-pmacro (SH3e-MACH)       (MACH sh3e,sh4,sh4a,sh5))                                                             ; sh3e and up
(define-pmacro (SH4-nofpu-MACH)  (MACH sh4-nofpu,sh4,sh4a-nofpu,sh4a,sh4al,sh5))                                       ; sh4 no fpu and up
(define-pmacro (SH4-MACH)        (MACH sh4,sh4a,sh5))                                                                  ; sh4 and up
(define-pmacro (SH4a-nofpu-MACH) (MACH sh4a-nofpu,sh4a,sh4al,sh5))                                                     ; sh4a no fpu and up
(define-pmacro (SH4a-MACH)       (MACH sh4a,sh5))                                                                      ; sh4a with fpu and up
(define-pmacro (SH4al-MACH)      (MACH sh4al))                                                                         ; sh4al and up
(define-pmacro (SH5-MACH)        (MACH sh5))                                                                           ; sh5 compact and up

; Pipeline Models

; Units common to all machines
(define-pmacro (common-units)
  (
   ; Basic execution unit -- 1 cycle
   (unit u-exec "Execution unit" ()
	 1 1 ; issue done
	 () () () ())

   ; SX execution unit -- 1 cycle
   ; Ignored on most machines
   (unit u-sx "SX Execution unit" ()
	 1 1 ; issue done
	 () () () ())

   ; Branch unit
   (unit u-branch "Branch Unit" ()
	 0 0 ; issue done
	 () ; state
	 () ; inputs
	 ((pc)) ; outputs
	 () ; profile action (default)
	 )

   ; Jmp unit
   (unit u-jmp "Jmp Unit" ()
	 0 0 ; issue done
	 () ; state
	 () ; inputs
	 ((pc)) ; outputs
	 () ; profile action (default)
	 )

   ; JSR unit
   (unit u-jsr "JSR Unit" ()
	 0 0 ; issue done
	 () ; state
	 () ; inputs
	 ((pc)) ; outputs
	 () ; profile action (default)
	 )

   ; Logic.b unit -- 3 cycles
   (unit u-logic-b "Logic.b unit" ()
	 0 3 ; issue done
	 () () () ())

   ; Memory Access unit
   (unit u-memory-access "Memory Access Unit" ()
	 0 0 ; issue done
	 () () () ())

   ; LDS PR unit
   (unit u-lds-pr "LDS PR Unit" ()
	 0 1 ; issue done
	 () () () ())

   ; STS PR unit
   (unit u-sts-pr "STS PR Unit" ()
	 0 1 ; issue done
	 () () () ())

   ; Load PR unit
   (unit u-load-pr "Load PR Unit" ()
	 0 0 ; issue done
	 () () () ())

   ; Use PR unit
   (unit u-use-pr "Use PR Unit" ()
	 0 0 ; issue done
	 () () () ())

   ; Set SR Bit unit
   (unit u-set-sr-bit "Set SR Bit Unit" ()
	 0 0 ; issue done
	 () () () ())

   ; LDC SR unit
   (unit u-ldc-sr "LDC SR Unit" ()
	 0 1 ; issue done
	 () () () ())

   ; LDC GBR unit
   (unit u-ldc-gbr "LDC GBR Unit" ()
	 0 1 ; issue done
	 () () () ())

   ; Use TBIT unit
   (unit u-use-tbit "Use TBIT Unit" ()
	 0 0 ; issue done
	 () () () ())

   ; LDCL unit
   (unit u-ldcl "LDCL Unit" ()
	 0 3 ; issue done
	 () () () ())

   ; LDCL to VBR unit
   (unit u-ldcl-vbr "LDCL to VBR Unit" ()
	 0 3 ; issue done
	 () () () ())

   ; STC from VBR unit
   (unit u-stc-vbr "STC from VBR Unit" ()
	 0 1 ; issue done
	 () () () ())

   ; Load gr unit
   (unit u-load-gr "Load into GR Unit" ()
	 0 0 ; issue done
	 () ; state
	 () ; inputs
	 ((loadreg INT -1)) ; outputs
	 () ; profile action (default)
	 )

   ; Use gr unit -- stalls if GR not ready
   (unit u-use-gr "Use GR Unit" ()
	 0 0 ; issue done
	 () ; state
	 ((usereg INT -1)) ; inputs
	 () ; outputs
	 () ; profile action (default)
	 )

   ; Load GBR unit
   (unit u-load-gbr "Load GBR Unit" ()
	 0 0 ; issue done
	 () () () ())

   ; Load VBR unit
   (unit u-load-vbr "Load VBR Unit" ()
	 0 0 ; issue done
	 () () () ())

   ; Load MAC{H,L} unit
   (unit u-load-mac "Load MAC Unit" ()
	 0 0 ; issue done
	 () () () ())

   ; Set MAC{H,L} Unit
   (unit u-set-mac "Set MAC Unit" ()
	 0 0 ; issue done
	 () () () ())

   ; Multiply unit
   (unit u-multiply "Multiply unit" ()
	 1 2 ; issue done
	 () () () ())

   ; mac.w Multiply unit
   (unit u-macw "mac.w multiply unit" ()
	 1 2 ; issue done
	 () () () ())

   ; mac.l Multiply unit
   (unit u-macl "mac.l multiply unit" ()
	 1 2 ; issue done
	 () () () ())

   ; dmul Multiply unit
   (unit u-dmul "dmul{s,u},mull multiply unit" ()
	 1 2 ; issue done
	 () () () ())

   ; mull Multiply unit
   (unit u-mull "mull multiply unit" ()
	 1 2 ; issue done
	 () () () ())

   ; muls.w Multiply unit
   (unit u-mulsw "muls.w multiply unit" ()
	 1 1 ; issue done
	 () () () ())

   ; tas unit
   (unit u-tas "tas unit" ()
	 1 4 ; issue done
	 () () () ())

   (unit u-shift "Shift Unit" ()
 	 0 0 ; issue done
	 () () () ())

   ; Use multiply result unit -- stalls if multiply unit is busy
   (unit u-use-multiply-result "Use Multiply Result Unit" ()
	 0 0 ; issue done
	 () () () ())

   ; Writeback unit
   (unit u-write-back "Writeback Unit" ()
	 0 0 ; issue done
	 () () () ())

   ; Trap unit
   (unit u-trap "Trap Unit" ()
	 0 8 ; issue done
	 () () () ())
  )
)

; Units common to all floating point enabled machines
(define-pmacro (common-fp-units)
  (
   ; Basic fpu unit -- 1 cycle
   (unit u-fpu "FPU unit" ()
	 0 0 ; issue done
	 () () () ())

   ; Maybe uses fpu -- must have same latency as u-fpu
   (unit u-maybe-fpu "Maybe FPU unit" ()
	 0 0 ; issue done
	 () () () ())

   ; Load fr unit
   (unit u-load-fr "Load into FR Unit" ()
	 0 0 ; issue done
	 () ; state
	 () ; inputs
	 ((loadreg INT -1)) ; outputs
	 () ; profile action (default)
	 )

   ; Set fr unit
   (unit u-set-fr "Set FR Unit" ()
	 0 0 ; issue done
	 () ; state
	 () ; inputs
	 ((loadreg INT -1)) ; outputs
	 () ; profile action (default)
	 )

   ; Set fr unit -- no latency on some machines
   ; Define it with the same latency as u-set-fr
   (unit u-set-fr-0 "Set FR Unit" ()
	 0 0 ; issue done
	 () ; state
	 () ; inputs
	 ((loadreg INT -1)) ; outputs
	 () ; profile action (default)
	 )

   ; Use fr unit -- stalls if FR not ready
   (unit u-use-fr "Use FR Unit" ()
	 0 0 ; issue done
	 () ; state
	 ((usereg INT -1)) ; inputs
	 () ; outputs
	 () ; profile action (default)
	 )

   ; FPU Memory Access unit
   (unit u-fpu-memory-access "FPU Memory Access Unit" ()
	 0 0 ; issue done
	 () () () ())

   ; Set FPUL unit
   (unit u-set-fpul "Set FPUL Unit" ()
	 0 0 ; issue done
	 () () () ())

   ; Load FPUL unit
   (unit u-load-fpul "Load FPUL Unit" ()
	 0 0 ; issue done
	 () () () ())

   ; FLDS FPUL unit
   (unit u-flds-fpul "FLDS FPUL Unit" ()
	 0 0 ; issue done
	 () () () ())

   ; Use FPUL unit
   (unit u-use-fpul "Use FPUL Unit" ()
	 0 0 ; issue done
	 () () () ())

   ; LDS FPSCR unit
   (unit u-lds-fpscr "LDS FPSCR Unit" ()
	 0 3 ; issue done
	 () () () ())

   ; LDS.L FPSCR unit
   (unit u-ldsl-fpscr "LDS.L FPSCR Unit" ()
	 0 0 ; issue done
	 () () () ())

   ; Use FPSCR unit
   (unit u-use-fpscr "Use FPSCR Unit" ()
	 0 0 ; issue done
	 () () () ())

   ; FPU Load gr unit
   (unit u-fpu-load-gr "FPU Load into GR Unit" ()
	 0 0 ; issue done
	 () ; state
	 () ; inputs
	 ((loadreg INT -1)) ; outputs
	 () ; profile action (default)
	 )

   ; FDIV unit
   (unit u-fdiv "FDIV Unit" ()
	 0 0 ; issue done
	 () ; state
	 () ; inputs
	 ((loadreg INT -1)) ; outputs
	 () ; profile action (default)
	 )

   ; FSQRT unit -- not completely common but common enough
   (unit u-fsqrt "FSQRT Unit" ()
	 0 0 ; issue done
	 () ; state
	 () ; inputs
	 ((loadreg INT -1)) ; outputs
	 () ; profile action (default)
	 )

   ; FCMP unit
   (unit u-fcmp "FCMP Unit" ()
	 0 0 ; issue done
	 () () () ())

   ; FCNV unit
   (unit u-fcnv "FCNV Unit" ()
	 0 0 ; issue done
	 () () () ())
  )
)

; Units common to sh2a-nofpu and above
(define-pmacro (sh2a-nofpu-units)
  (
   ; mulr Multiply unit
   (unit u-mulr "mulr multiply unit" ()
	 1 2 ; issue done
	 () () () ())

   ; mulr gr unit
   (unit u-mulr-gr "MULR into GR Unit" ()
	 0 0 ; issue done
	 () ; state
	 () ; inputs
	 ((loadreg INT -1)) ; outputs
	 () ; profile action (default)
	 )
  )
)

; Units common to sh2a-fpu and above
(define-pmacro (sh2a-fpu-units)
  (
   ; Set dr unit
   (unit u-set-dr "Set DR Unit" ()
	 0 0 ; issue done
	 () ; state
	 () ; inputs
	 ((loadreg INT -1)) ; outputs
	 () ; profile action (default)
	 )

   ; Load dr unit
   (unit u-load-dr "Load into DR Unit" ()
	 0 0 ; issue done
	 () ; state
	 () ; inputs
	 ((loadreg INT -1)) ; outputs
	 () ; profile action (default)
	 )

   ; Use dr unit -- stalls if DR not ready
   (unit u-use-dr "Use DR Unit" ()
	 0 0 ; issue done
	 () ; state
	 ((usereg INT -1)) ; inputs
	 () ; outputs
	 () ; profile action (default)
	 )
  )
)

; Units common to sh3 and above
;(define-pmacro (sh3-common-units)
;  (
;   (unit u-set-sr "Set SR Unit" ()
;	 0 3 ; issue done
;	 () () () ())
;  )
;)

; Units common to sh4-nofpu and above
(define-pmacro (sh4-nofpu-units)
  (
   ; OCB*  unit
   (unit u-ocb "OCB* unit" ()
	 0 0 ; issue done
	 () () () ())
  )
)

; Units common to sh4 and above with fp
(define-pmacro (sh4-common-fp-units)
  (
   (unit u-fipr "FIPR Unit" ()
	 0 0 ; issue done
	 () ; state
	 ((fvm INT -1) (fvn INT -1)) ; inputs
	 () ; outputs
	 () ; profile action (default)
	 )
   (unit u-ftrv "FTRV Unit" ()
	 0 0 ; issue done
	 () ; state
	 ((fvn INT -1)) ; inputs
	 () ; outputs
	 () ; profile action (default)
	 )
  )
)

; Units common to sh5 media and above
(define-pmacro (sh5-media-units)
  (
   ; Load gr unit
   (unit u-set-gr "Set into GR Unit" ()
	 0 0 ; issue done
	 () ; state
	 () ; inputs
	 ((loadreg INT -1)) ; outputs
	 () ; profile action (default)
	 )
  )
)

; Units common to sh5 and above with fp
(define-pmacro (sh5-media-fp-units)
  (
   ; Set fp unit
   (unit u-set-fp "Set FP Unit" ()
	 0 0 ; issue done
	 () ; state
	 () ; inputs
	 ((loadreg INT -1)) ; outputs
	 () ; profile action (default)
	 )

   ; Set fv unit
   (unit u-set-fv "Set FV Unit" ()
	 0 0 ; issue done
	 () ; state
	 () ; inputs
	 ((loadreg INT -1)) ; outputs
	 () ; profile action (default)
	 )

   ; Set mtrx unit
   (unit u-set-mtrx "Set MTRX Unit" ()
	 0 0 ; issue done
	 () ; state
	 () ; inputs
	 ((loadreg INT -1)) ; outputs
	 () ; profile action (default)
	 )

   ; Load fp unit
   (unit u-load-fp "Load FP Unit" ()
	 0 0 ; issue done
	 () ; state
	 () ; inputs
	 ((loadreg INT -1)) ; outputs
	 () ; profile action (default)
	 )

   ; Load fv unit
   (unit u-load-fv "Load FV Unit" ()
	 0 0 ; issue done
	 () ; state
	 () ; inputs
	 ((loadreg INT -1)) ; outputs
	 () ; profile action (default)
	 )

   ; Load mtrx unit
   (unit u-load-mtrx "Load MTRX Unit" ()
	 0 0 ; issue done
	 () ; state
	 () ; inputs
	 ((loadreg INT -1)) ; outputs
	 () ; profile action (default)
	 )

   ; Use fp unit -- stalls if FP not ready
   (unit u-use-fp "Use DR Unit" ()
	 0 0 ; issue done
	 () ; state
	 ((usereg INT -1)) ; inputs
	 () ; outputs
	 () ; profile action (default)
	 )

   ; Use fv unit -- stalls if FV not ready
   (unit u-use-fv "Use DR Unit" ()
	 0 0 ; issue done
	 () ; state
	 ((usereg INT -1)) ; inputs
	 () ; outputs
	 () ; profile action (default)
	 )

   ; Use mtrx unit -- stalls if MTRX not ready
   (unit u-use-mtrx "Use DR Unit" ()
	 0 0 ; issue done
	 () ; state
	 ((usereg INT -1)) ; inputs
	 () ; outputs
	 () ; profile action (default)
	 )

   ; Use TR unit -- stalls if TR not ready
   (unit u-use-tr "Use TR Unit" ()
	 0 0 ; issue done
	 () ; state
	 ((usereg INT -1)) ; inputs
	 () ; outputs
	 () ; profile action (default)
	 )

   ; BLINK unit
   (unit u-blink "BLINK Unit" ()
	 0 0 ; issue done
	 () ; state
	 ((targetreg INT -1)) ; inputs
	 ((pc)) ; outputs
	 () ; profile action (default)
	 )

   ; Conditional Branch unit
   (unit u-cond-branch "Conditional branch Unit" ()
	 0 0 ; issue done
	 () ; state
	 ((targetreg INT -1)) ; inputs
	 ((pc)) ; outputs
	 () ; profile action (default)
	 )

   ; FDIV.D unit
   (unit u-fdivd "FDIV.D Unit" ()
	 0 0 ; issue done
	 () ; state
	 () ; inputs
	 ((loadreg INT -1)) ; outputs
	 () ; profile action (default)
	 )

   ; FSQRT.D unit
   (unit u-fsqrtd "FSQRT.D Unit" ()
	 0 0 ; issue done
	 () ; state
	 () ; inputs
	 ((loadreg INT -1)) ; outputs
	 () ; profile action (default)
	 )

   ; FTRV.S unit
   (unit u-ftrvs "FTRVS Unit" ()
	 0 0 ; issue done
	 () ; state
	 () ; inputs
	 ((loadreg INT -1)) ; outputs
	 () ; profile action (default)
	 )

   ; PT* unit
   (unit u-pt "PT* Unit" ()
	 0 0 ; issue done
	 () ; state
	 () ; inputs
	 ((targetreg INT -1)) ; outputs
	 () ; profile action (default)
	 )

   ; GETCFG unit
   (unit u-getcfg "GETCFG unit" ()
	 0 0 ; issue done
	 () () () ())

   ; PUTCFG unit
   (unit u-putcfg "PUTCFG unit" ()
	 0 0 ; issue done
	 () () () ())
  )
)

; This macro is for all machines with identical timing
(define-pmacro (common-model xmach)
  (.splice define-model
    (name xmach)
    (comment (.str xmach " reference implementation"))
    (mach xmach)
    (.unsplice (common-units))
;    (unit u-set-sr "Set SR Unit" ()
;	  0 1 ; issue done
;	  () () () ())
  )
)

; This macro is for all fpu enabled machines with identical timing
(define-pmacro (common-model-with-fp xmach)
  (.splice define-model
    (name xmach)
    (comment (.str xmach " reference implementation"))
    (mach xmach)
    (.unsplice (common-units))
    (.unsplice (common-fp-units))
;    (unit u-set-sr "Set SR Unit" ()
;	  0 1 ; issue done
;	  () () () ())
  )
)

; This macro is for all machines sh3 and up with identical timing
(define-pmacro (sh3-model xmach)
  (.splice define-model
    (name xmach)
    (comment (.str xmach " reference implementation"))
    (mach xmach)
    (.unsplice (common-units))
;    (.unsplice (sh3-common-units))
  )
)

; This macro is for all fpu enabled machines sh3e and up with identical timing
(define-pmacro (sh3e-model xmach)
  (.splice define-model
    (name xmach)
    (comment (.str xmach " reference implementation"))
    (mach xmach)
    (.unsplice (common-units))
    (.unsplice (common-fp-units))
;    (.unsplice (sh3-common-units))
  )
)

; The actual models
; sh2a-nofpu model
(.splice define-model
  (name sh2a-nofpu)
  (comment "sh2a-nofpu reference implementation")
  (mach sh2a-nofpu)
  (.unsplice (common-units))
;  (unit u-set-sr "Set SR Unit" ()
;	0 1 ; issue done
;	() () () ())
  (.unsplice (sh2a-nofpu-units))
)

; sh2a-fpu model
(.splice define-model
  (name sh2a-fpu)
  (comment "sh2a-fpu reference implementation")
  (mach sh2a-fpu)
  (.unsplice (common-units))
  (.unsplice (common-fp-units))
;  (unit u-set-sr "Set SR Unit" ()
;	0 1 ; issue done
;	() () () ())
  (.unsplice (sh2a-nofpu-units))
  (.unsplice (sh2a-fpu-units))
)

; sh4-nofpu model
(.splice define-model
  (name sh4-nofpu)
  (comment "sh4 nofpu reference implementation")
  (mach sh4-nofpu)
  (.unsplice (common-units))
;  (.unsplice (sh3-common-units))
  (.unsplice (sh2a-nofpu-units))
  (.unsplice (sh4-nofpu-units))
)

; sh4 model
(.splice define-model
  (name sh4)
  (comment "sh4 reference implementation")
  (mach sh4)
  (.unsplice (common-units))
  (.unsplice (common-fp-units))
;  (.unsplice (sh3-common-units))
  (.unsplice (sh2a-fpu-units))
  (.unsplice (sh2a-nofpu-units))
  (.unsplice (sh4-nofpu-units))
  (.unsplice (sh4-common-fp-units))
)

; sh4a-nofpu model
(.splice define-model
  (name sh4a-nofpu)
  (comment "sh4a no fpu reference implementation")
  (mach sh4a-nofpu)
  (.unsplice (common-units))
  (.unsplice (common-fp-units))
  (.unsplice (sh2a-nofpu-units))
;  (.unsplice (sh3-common-units))
  (.unsplice (sh4-nofpu-units))
)

; sh4a model
(.splice define-model
  (name sh4a)
  (comment "sh4a reference implementation")
  (mach sh4a)
  (.unsplice (common-units))
  (.unsplice (common-fp-units))
  (.unsplice (sh2a-nofpu-units))
;  (.unsplice (sh3-common-units))
  (.unsplice (sh4-nofpu-units))
  (.unsplice (sh4-common-fp-units))
)

; sh4al model
(.splice define-model
  (name sh4al)
  (comment "sh4al reference implementation")
  (mach sh4al)
  (.unsplice (common-units))
  (.unsplice (common-fp-units))
  (.unsplice (sh2a-nofpu-units))
;  (.unsplice (sh3-common-units))
  (.unsplice (sh4-nofpu-units))
)

; sh5 model
(.splice define-model
  (name sh5)
  (comment "sh5 reference implementation")
  (mach sh5)
  (.unsplice (common-units))
  (.unsplice (common-fp-units))
;  (.unsplice (sh3-common-units))
  (.unsplice (sh2a-fpu-units))
  (.unsplice (sh2a-nofpu-units))
  (.unsplice (sh4-nofpu-units))
  (.unsplice (sh4-common-fp-units))
)

; sh5-media model
(.splice define-model
  (name sh5-media)
  (comment "sh5 media reference implementation")
  (mach sh5)
; ------ some of are not used --- should be separated into
; comon_model/compact_model
  (.unsplice (common-units))
  (.unsplice (common-fp-units))
;  (.unsplice (sh3-common-units))
  (.unsplice (sh2a-fpu-units))
  (.unsplice (sh2a-nofpu-units))
  (.unsplice (sh4-nofpu-units))
  (.unsplice (sh4-common-fp-units))
; --------------------------------------------------------
  (.unsplice (sh5-media-units))
  (.unsplice (sh5-media-fp-units))
)

; Generate all the remaining models.
(common-model         sh2)
(common-model-with-fp sh2e)
(sh3-model            sh3)
(sh3e-model           sh3e)

; Used to generate a timing which is the same for all models
(define-pmacro (all-models units)
  ((.splice sh2        (.unsplice units))
   (.splice sh2e       (.unsplice units))
   (.splice sh2a-fpu   (.unsplice units))
   (.splice sh2a-nofpu (.unsplice units))
   (.splice sh3        (.unsplice units))
   (.splice sh3e       (.unsplice units))
   (.splice sh4-nofpu  (.unsplice units))
   (.splice sh4        (.unsplice units))
   (.splice sh4a-nofpu (.unsplice units))
   (.splice sh4a       (.unsplice units))
   (.splice sh4al      (.unsplice units))
   (.splice sh5        (.unsplice units)))
)

; Used to generate a timing which is the same for sh2e and up.
(define-pmacro (sh2e-models units)
  ((.splice sh2e       (.unsplice units))
   (.splice sh2a-fpu   (.unsplice units))
   (.splice sh3e       (.unsplice units))
   (.splice sh4        (.unsplice units))
   (.splice sh4a       (.unsplice units))
   (.splice sh5        (.unsplice units)))
)

; Used to generate a timing which is the same for sh2a and up.
(define-pmacro (sh2a-nofpu-models units)
  ((.splice sh2a-fpu   (.unsplice units))
   (.splice sh2a-nofpu (.unsplice units))
   (.splice sh4        (.unsplice units))
   (.splice sh4-nofpu  (.unsplice units))
   (.splice sh5        (.unsplice units)))
)

; Used to generate a timing which is the same for sh2a and up.
(define-pmacro (sh2a-fpu-models units)
  ((.splice sh2a-fpu   (.unsplice units))
   (.splice sh4        (.unsplice units))
   (.splice sh5        (.unsplice units)))
)

; Used to generate a timing which is the same for sh3 and up.
(define-pmacro (sh3-models units)
  ((.splice sh3        (.unsplice units))
   (.splice sh3e       (.unsplice units))
   (.splice sh4-nofpu  (.unsplice units))
   (.splice sh4        (.unsplice units))
   (.splice sh4a-nofpu (.unsplice units))
   (.splice sh4a       (.unsplice units))
   (.splice sh4al      (.unsplice units))
   (.splice sh5        (.unsplice units)))
)

; Used to generate a timing which is the same for sh3e and up.
(define-pmacro (sh3e-models units)
  ((.splice sh3e       (.unsplice units))
   (.splice sh4        (.unsplice units))
   (.splice sh4a       (.unsplice units))
   (.splice sh5        (.unsplice units)))
)

; Used to generate a timing which is the same for sh4-nofpu and up.
(define-pmacro (sh4-nofpu-models units)
  ((.splice sh4-nofpu  (.unsplice units))
   (.splice sh4        (.unsplice units))
   (.splice sh4a-nofpu (.unsplice units))
   (.splice sh4a       (.unsplice units))
   (.splice sh4al      (.unsplice units))
   (.splice sh5        (.unsplice units)))
)

; Used to generate a timing which is the same for sh4 and up.
(define-pmacro (sh4-models units)
  ((.splice sh4   (.unsplice units))
   (.splice sh4a  (.unsplice units))
   (.splice sh5   (.unsplice units)))
)

; Used to generate a timing which is the same for sh4-nofpu and up.
(define-pmacro (sh4a-nofpu-models units)
  ((.splice sh4a-nofpu (.unsplice units))
   (.splice sh4a       (.unsplice units))
   (.splice sh4al      (.unsplice units))
   (.splice sh5        (.unsplice units)))
)

; Used to generate a timing which is the same for sh5 and up.
(define-pmacro (sh5-media-models units)
  ((.splice sh5-media (.unsplice units)))
)

; Used to generate timing for SHAD insn
(define-pmacro (shad-models units)
  ((.splice sh2a-fpu   (.unsplice units))
   (.splice sh2a-nofpu (.unsplice units))
   (.splice sh3        (.unsplice units))
   (.splice sh3e       (.unsplice units))
   (.splice sh4-nofpu  (.unsplice units))
   (.splice sh4        (.unsplice units))
   (.splice sh4a-nofpu (.unsplice units))
   (.splice sh4a       (.unsplice units))
   (.splice sh4al      (.unsplice units))
   (.splice sh5        (.unsplice units)))
)

; Used to generate a timing for the FSQRT insn
(define-pmacro (fsqrt-models units)
  ((.splice sh2a-fpu   (.unsplice units))
   (.splice sh3e       (.unsplice units))
   (.splice sh4        (.unsplice units))
   (.splice sh4a       (.unsplice units))
   (.splice sh5        (.unsplice units)))
)


; Hardware elements.

(define-hardware
  (name h-pc)
  (comment "Program counter")
  (attrs PC PROFILE (ISA compact,media))
  (type pc UDI)
  (get () (raw-reg h-pc))
  (set (newval) (sequence ()
			  (set (raw-reg h-ism) (and newval 1))
			  (set (raw-reg h-pc) (and newval (inv UDI 1)))))
)

(define-pmacro (-build-greg-name n) ((.sym r n) n))

(define-hardware
  (name h-gr)
  (comment "General purpose integer registers")
  (attrs PROFILE (ISA media,compact))
  (type register DI (64))
  (indices keyword "" (.map -build-greg-name (.iota 64)))
  (get (index)
       (if DI (eq index 63)
	   (const 0)
	   (raw-reg h-gr index)))
  (set (index newval)
       (if (ne index 63)
	   (set (raw-reg h-gr index) newval)
	   (nop)))
)

(define-hardware
  (name h-grc)
  (comment "General purpose integer registers (SHcompact view)")
  (attrs VIRTUAL PROFILE (ISA compact))
  (type register SI (16))
  (indices keyword "" (.map -build-greg-name (.iota 16)))
  (get (index)
	(and (raw-reg h-gr index) (zext DI #xFFFFFFFF)))
  (set (index newval)
       (set (raw-reg h-gr index) (ext DI newval)))
)

(define-pmacro (-build-creg-name n) ((.sym cr n) n))

(define-hardware
  (name h-cr)
  (comment "Control registers")
  (attrs (ISA media))
  (type register DI (64))
  (indices keyword "" (.map -build-creg-name (.iota 64)))
  (get (index)
       (if DI (eq index 0)
	   (zext DI (reg h-sr))
	   (raw-reg h-cr index)))
  (set (index newval)
       (if (eq index 0)
	   (set (raw-reg h-sr) newval)
	   (set (raw-reg h-cr index) newval)))
)

(define-hardware
  (name h-sr)
  (comment "Status register")
  (attrs (ISA compact,media))
  (type register SI)
)

(define-hardware
  (name h-fpscr)
  (comment "Floating point status and control register")
  (attrs (ISA compact,media))
  (type register SI)
)

(define-hardware
  (name h-frbit)
  (comment "Floating point register file bit")
  (attrs (ISA media,compact) VIRTUAL)
  (type register BI)
  (get () (and (srl (reg h-fpscr) 21) 1))
  (set (newvalue) (set (reg h-fpscr) (or (and (reg h-fpscr) (inv (sll 1 21))) (sll SI newvalue 21))))
)

(define-hardware
  (name h-szbit)
  (comment "Floating point transfer size bit")
  (attrs (ISA media,compact) VIRTUAL)
  (type register BI)
  (get () (and (srl (reg h-fpscr) 20) 1))
  (set (newvalue) (set (reg h-fpscr) (or (and (reg h-fpscr) (inv (sll 1 20))) (sll SI newvalue 20))))
)

(define-hardware
  (name h-prbit)
  (comment "Floating point precision bit")
  (attrs (ISA media,compact) VIRTUAL)
  (type register BI)
  (get () (and (srl (reg h-fpscr) 19) 1))
  (set (newvalue) (set (reg h-fpscr) (or (and (reg h-fpscr) (inv (sll 1 19))) (sll SI newvalue 19))))
)

(define-hardware
  (name h-sbit)
  (comment "Multiply-accumulate saturation flag")
  (attrs (ISA compact) VIRTUAL)
  (type register BI)
  (get () (and (srl (reg h-sr) 1) 1))
  (set (newvalue) (set (reg h-sr) (or (and (reg h-sr) (inv 2)) (sll SI newvalue 1))))
)

(define-hardware
  (name h-mbit)
  (comment "Divide-step M flag")
  (attrs (ISA compact) VIRTUAL)
  (type register BI)
  (get () (and (srl (reg h-sr) 9) 1))
  (set (newvalue) (set (reg h-sr) (or (and (reg h-sr) (inv (sll 1 9))) (sll SI newvalue 9))))
)

(define-hardware
  (name h-qbit)
  (comment "Divide-step Q flag")
  (attrs (ISA compact) VIRTUAL)
  (type register BI)
  (get () (and (srl (reg h-sr) 8) 1))
  (set (newvalue) (set (reg h-sr) (or (and (reg h-sr) (inv (sll 1 8))) (sll SI newvalue 8))))
)

(define-pmacro (-build-freg-name n) ((.sym fr n) n))

(define-hardware
  (name h-fr)
  (comment "Single precision floating point registers")
  (attrs PROFILE (ISA media,compact))
  (type register SF (64))
  (indices keyword "" (.map -build-freg-name (.iota 64)))
)


(define-pmacro (-build-fpair-name n) ((.sym fp n) n))

(define-hardware
  (name h-fp)
  (comment "Single precision floating point register pairs")
  (attrs VIRTUAL PROFILE (ISA media,compact))
  (type register SF (64))
  (indices keyword "" (.map -build-fpair-name
			    (0 2 4 6 8 10 12 14 16 18 20 22 24 26 28 30
			     32 34 36 38 40 42 44 46 48 50 52 54 56 58 60 62)))
  (get (index) (reg h-fr index))
  (set (index newval) (set (reg h-fr index) newval))
)

(define-pmacro (-build-fvec-name n) ((.sym fv n) n))

(define-hardware
  (name h-fv)
  (comment "Single precision floating point vectors")
  (attrs VIRTUAL PROFILE (ISA media,compact))
  (type register SF (64))
  (indices keyword "" (.map -build-fvec-name
			    (0 4 8 12 16 20 24 28 32 36 40 44 48 52 56 60)))
  (get (index) (reg h-fr index))
  (set (index newval) (set (reg h-fr index) newval))
)

(define-hardware
  (name h-fmtx)
  (comment "Single precision floating point matrices")
  (attrs VIRTUAL PROFILE (ISA media))
  (type register SF (64))
  (indices keyword "" ((mtrx0 0) (mtrx16 16) (mtrx32 32) (mtrx48 48)))
  (get (index) (reg h-fr index))
  (set (index newval) (set (reg h-fr index) newval))
)

(define-pmacro (-build-dreg-name n) ((.sym dr n) n))

(define-hardware
  (name h-dr)
  (comment "Double precision floating point registers")
  (attrs VIRTUAL PROFILE (ISA media,compact))
  (type register DF (64))
  (indices keyword "" (.map -build-dreg-name
			    (0 2 4 6 8 10 12 14 16 18 20 22 24 26 28 30
			     32 34 36 38 40 42 44 46 48 50 52 54 56 58 60 62)))
  (get (index)
       (subword DF
		(or
		 (sll DI (zext DI (subword SI (reg h-fr index) 0)) 32)
		 (zext DI (subword SI (reg h-fr (add index 1)) 0))) 0))
  (set (index newval)
       (sequence ()
		 (set (reg h-fr index)
		      (subword SF (subword SI newval 0) 0))
		 (set (reg h-fr (add index 1))
		      (subword SF (subword SI newval 1) 0))))
)

(define-hardware
  (name h-fsd)
  (comment "Single/Double precision floating point registers")
  (attrs PROFILE (ISA compact,media) (SH2e-MACH))
  (type register DF (16))
  (indices keyword "" (.map -build-freg-name (.iota 16)))
  (get (index)
       (if DF prbit (reg h-drc index) (fext DF FPCONV-DEFAULT (reg h-fr index))))
  (set (index newval)
       (if prbit
	   (set (reg h-drc index) newval)
	   (set (reg h-frc index) (ftrunc SF FPCONV-DEFAULT newval))))
)

(define-pmacro (even x) (eq (and x 1) 0))
(define-pmacro (odd x)  (eq (and x 1) 1))
(define-pmacro (extd x) (odd x))

(define-hardware
  (name h-fmov)
  (comment "floating point registers for fmov")
  (attrs PROFILE (ISA compact,media) (SH2e-MACH))
  (type register DF (16))
  (indices keyword "" (.map -build-freg-name (.iota 16)))
  (get (index)
       (if DF (not szbit)
	   ; single precision operation
	   (fext DF FPCONV-DEFAULT (reg h-frc index))
	   ; double or extended operation
	   (if DF (extd index)
	       (reg h-xd (and index (inv 1)))
	       (reg h-dr index))))
  (set (index newval)
       (if (not szbit)
	   ; single precision operation
	   (set (reg h-frc index) (ftrunc SF FPCONV-DEFAULT newval))
	   ; double or extended operation
	   (if (extd index)
	       (set (reg h-xd (and index (inv 1))) newval)
	       (set (reg h-dr index) newval))))
)

(define-hardware
  (name h-tr)
  (comment "Branch target registers")
  (attrs (ISA media) PROFILE)
  (type register DI (8))
  (indices keyword "" ((tr0 0) (tr1 1) (tr2 2) (tr3 3) (tr4 4) (tr5 5) (tr6 6) (tr7 7)))
)

(define-hardware
  (name h-endian)
  (comment "Current endian mode")
  (attrs (ISA compact,media) VIRTUAL)
  (type register BI)
  (get () (c-call BI "sh64_endian"))
  (set (newval) (error "cannot alter target byte order mid-program"))
)

(define-hardware
  (name h-ism)
  (comment "Current instruction set mode")
  (attrs (ISA compact,media))
  (type register BI)
  (get () (raw-reg h-ism))
  (set (newval) (error "cannot set ism directly"))
)


; Operands.

(dnop endian "Endian mode" ((ISA compact,media)) h-endian f-nil)
(dnop ism    "Instruction set mode" ((ISA compact,media)) h-ism f-nil)

; Universally useful macros.

; A pmacro for use in semantic bodies of unimplemented insns.
(define-pmacro (unimp mnemonic) (nop))

; Join 2 ints together in natural bit order.
(define-pmacro (-join-si s1 s0)
  (or (sll (zext DI s1) 32)
      (zext DI s0)))

; Join 4 half-ints together in natural bit order.
(define-pmacro (-join-hi h3 h2 h1 h0)
  (or (sll (zext DI h3) 48)
      (or (sll (zext DI h2) 32)
	  (or (sll (zext DI h1) 16)
	      (zext DI h0)))))

; Join 8 quarter-ints together in natural bit order.
(define-pmacro (-join-qi b7 b6 b5 b4 b3 b2 b1 b0)
  (or (sll (zext DI b7) 56)
      (or (sll (zext DI b6) 48)
	  (or (sll (zext DI b5) 40)
	      (or (sll (zext DI b4) 32)
		  (or (sll (zext DI b3) 24)
		      (or (sll (zext DI b2) 16)
			  (or (sll (zext DI b1) 8)
			      (zext DI b0)))))))))


; Include the two instruction set descriptions from their respective
; source files.

(if (keep-isa? (compact))
    (include "sh64-compact.cpu"))

(if (keep-isa? (media))
    (include "sh64-media.cpu"))
@


1.6.2.1
log
@Import sources from cgen/cpu directory

cgen/cpu/ChangeLog:

 	* cris.cpu, frv.cpu, iq10.cpu, iq2000.cpu, iq2000m.cpu, lm32.cpu,
 	m32c.cpu, m32r.cpu, mt.cpu, sh.cpu, sh64-compact.cpu,
 	sh64-media.cpu, xc16x.cpu: New file, copied from cgen/cpu.
@
text
@d1 4
a4 23
; Hitachi SH architecture description.  -*- Scheme -*-
;
; Copyright 2000, 2001, 2007, 2009 Free Software Foundation, Inc.
;
; Contributed by Red Hat Inc; developed under contract from Hitachi
; Semiconductor (America) Inc.
;
; This file is part of the GNU Binutils.
;
; This program is free software; you can redistribute it and/or modify
; it under the terms of the GNU General Public License as published by
; the Free Software Foundation; either version 3 of the License, or
; (at your option) any later version.
;
; This program is distributed in the hope that it will be useful,
; but WITHOUT ANY WARRANTY; without even the implied warranty of
; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
; GNU General Public License for more details.
;
; You should have received a copy of the GNU General Public License
; along with this program; if not, write to the Free Software
; Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston,
; MA 02110-1301, USA.
d6 1
d10 6
d18 7
a24 3
  (comment "Hitachi SuperH (SH)")
  (insn-lsb0? #t)
  (machs sh2 sh3 sh3e sh4 sh5)
d35 3
d42 4
a45 2
  (comment "SHcompact 16-bit instruction set")
  (base-insn-bitsize 16)
d67 21
d102 7
d110 22
a131 1
  (comment "SH-4 CPU core")
d143 749
a891 1
(define-model
d893 15
a907 1
  (comment "SH-5 reference implementation")
d909 133
a1041 3
  (unit u-exec "Execution unit" ()
	1 1 ; issue done
	() () () ())
d1043 1
d1050 1
a1050 1
  (attrs PC (ISA compact,media))
d1063 1
a1063 1
  (attrs (ISA media,compact))
d1079 1
a1079 1
  (attrs VIRTUAL (ISA compact))
d1102 1
a1102 1
	   (set (reg h-sr) newval)
d1125 2
a1126 2
  (get () (and (srl (reg h-sr) 14) 1))
  (set (newvalue) (set (reg h-sr) (or (and (reg h-sr) (inv (sll 1 14))) (sll SI newvalue 14))))
d1134 2
a1135 2
  (get () (and (srl (reg h-sr) 13) 1))
  (set (newvalue) (set (reg h-sr) (or (and (reg h-sr) (inv (sll 1 13))) (sll SI newvalue 13))))
d1143 2
a1144 2
  (get () (and (srl (reg h-sr) 12) 1))
  (set (newvalue) (set (reg h-sr) (or (and (reg h-sr) (inv (sll 1 12))) (sll SI newvalue 12))))
d1179 1
a1179 1
  (attrs (ISA media,compact))
d1190 7
a1196 3
  (attrs (ISA media,compact))
  (type register DF (32))
  (indices keyword "" (.map -build-fpair-name (.iota 32)))
d1204 6
a1209 6
  (attrs VIRTUAL (ISA media,compact))
  (type register SF (16))
  (indices keyword "" (.map -build-fvec-name (.iota 16)))
  ; Mask with $F to ensure 0 <= index < 15.
  (get (index) (reg h-fr (mul (and UQI index 15) 4)))
  (set (index newval) (set (reg h-fr (mul (and UQI index 15) 4)) newval))
d1215 5
a1219 6
  (attrs VIRTUAL (ISA media))
  (type register SF (4))
  (indices keyword "" ((mtrx0 0) (mtrx1 1) (mtrx2 2) (mtrx3 3)))
  ; Mask with $3 to ensure 0 <= index < 4.
  (get (index) (reg h-fr (mul (and UQI index 3) 16)))
  (set (index newval) (set (reg h-fr (mul (and UQI index 3) 16)) newval))
d1227 5
a1231 3
  (attrs (ISA media,compact) VIRTUAL)
  (type register DF (32))
  (indices keyword "" (.map -build-dreg-name (.iota 64)))
d1246 42
d1290 1
a1290 1
  (attrs (ISA media))
@


1.5
log
@	* hardware.scm (<keyword>): Rename member print-name -> enum-prefix.
	Rename member prefix -> name-prefix.
	(<keyword> getters): Update.
	(-keyword-parse): Update.  Default enum-prefix to NAME-.
	(-keyword-read): Update.  Don't compute default value for
	enum-prefix here.
	(define-keyword): Update.
	(-hw-parse-keyword): Pass "UNUSED" for enum-prefix to -keyword-parse.
	* read.scm (cgen-rtl-version): New function.
	(-supported-rtl-versions): Add (0 8).
	* desc-cpu.scm (-gen-hw-decl): Remove cruft.
	* desc.scm (<keyword> gen-defn): prefix -> name-prefix.
	* gas-test.scm (<keyword> test-data): prefix -> name-prefix.
	* cpu/arm.cpu (gr-names, shift-type): Call define-rtl-version.
	Update, print-name -> enum-prefix, make uppercase.
	Remove unnecessary name-prefix spec.
	* cpu/fr30.cpu (gr-names, cr-names, dr-names): Ditto.
	* cpu/ip2k.cpu (register-names): Ditto.
	* cpu/m68k.cpu (dr-names, ar-names): Ditto.
	* cpu/sparc.cpu (gr-names): Ditto.
	* cpu/xc16x.cpu (gr-names, ext-names,psw-names): Ditto.
	(grb-names, conditioncode-names, extconditioncode-names): Ditto.
	(grb8-names, r8-names, regmem8-names, regdiv8-names): Ditto.
	(reg0-name, reg0-name1, regbmem8-names, memgr8-names): Ditto.
	* cpu/ia32.cpu (gr8-names, gr16-names, gr-names): Call
	define-rtl-version.  Update, print-name -> enum-prefix, make uppercase,
	prefix -> name-prefix.
	* cpu/sh64-compact.cpu (frc-names): Call define-rtl-version.
	Update, print-name -> enum-prefix, make uppercase.
	(drc-names, xf-names): Ditto.
	* cpu/xstormy16.cpu (gr-names, gr-Rb-names): Ditto.
	* doc/rtl.texi (Keywords): New section.
	(hardware indices): Update text.
	(rtl versions): Add 0.8.
@
text
@d1252 1
a1252 1
       (if DF prbit (reg h-drc index) (fext DF (reg h-fr index))))
d1256 1
a1256 1
	   (set (reg h-frc index) (ftrunc SF newval))))
d1272 1
a1272 1
	   (fext DF (reg h-frc index))
d1280 1
a1280 1
	   (set (reg h-frc index) (ftrunc SF newval))
@


1.4
log
@2006-10-18  Dave Brolley  <brolley@@redhat.com>

        * Contribute the following changes:

        2006-07-11  Dave Brolley  <brolley@@redhat.com>

        * cpu/sh64-compact.cpu (movual, movual2): New insns.
        (movcol): New insn.
        * cpu/sh.cpu (sh4a-nofpu-models): New pmacro.
        * sid.scm (-op-gen-delayed-set-maybe-trace): If delay used, note the
        hardware or memory mode which was used.
        * sid-cpu.scm (hw-need-write-stack?): New function.
        (-gen-hw-stream-and-destream-fns): Compute stack-regs. Use it to
        identify hardware which uses write stacks.
        (useful-mode-names): Renamed to write-stack-memory-mode-names.
        Initialized to an empty list.
        (-gen-writestacks, -gen-reset-fn, -gen-unified-write-fn): Use
        hw-need-write-stack?.
        * hardware.scm (used-in-delay-rtl?): New member of <hardware-base>.
        (define-getters <hardware-base>): Define used-in-delay-rtl?.
        (used-in-delay-rtl?): New method of <hardware-base>.
        (hw-used-in-delay-rtl?): New function.

        2006-06-20  Dave Brolley  <brolley@@redhat.com>

        * sid.scm (gen-attr-type): Removed.
        * cpu/sh.cpu (SH2a-nofpu-MACH): Add sh5.
        (SH2a-MACH): Add sh5.
        (sh2a-nofpu-models): Add units for sh5.
        (sh2a-fpu-models): Likewise.

        2006-06-15  Dave Brolley  <brolley@@redhat.com>

        * cpu/sh-sim.cpu: New file.
        * cpu/sh-sid.cpu: New file.
        * cpu/sh64-media.cpu (dshci): Add xtiming argument and splice it in.
        (All fields): Remap for (insn-lsb0? #f)
        (All insns): Add timing specs.
        * cpu/sh64-compact.cpu (dshcf,dshcop): Replace 'ignored' argument with
        'xattrs' and .splice it in.
        (32-BIT-INSN,SH4-GROUP,SH4A-GROUP): New insn attributes.
        (h-frc,h-drc): Add PROFILE attribute.
        (h-fpccr): Removed.
        (h-vbr): New hardware.
        (All fields): Remap for (insn-lsb0? #f)
        (f-imm20-hi,f-imm20-lo,f-imm20): New fields.
        (fr0,fmovm,fmovn,imm20,imm12x4,imm12x8,vbr): New operands.
        (fpscr): Use h-fpscr.
        (fsdm,fsdn): Use h-fsd.
        (dshci): Add xtiming argument and splice it in.
        (dr,xd): pmacros removed.
        (All insns): Add timing specs, *-MACH attribibutes,
        SH4{A}-GROUP attributes.
        (divu,mulr,ldc-vbr,ldc-sr,ldcl-vbr,movl12,movl13,stcl-vbr): New insns.
        * cpu/sh.cpu): Include sh-sid.cpu or sh-sim.cpu depending on whether
        we're being processed for sim or sid.
        (define-arch): Change insn-lsb0? for #f. Add machs sh2e, sh2a-fpu,
        sh2a-nofpu, sh4-nofpu, sh4a-nofpu, sh4a, sh4al.
        (define-isa compact): Add (isa-parallel-insns 2).
        (define-isa media): Add (isa-parallel-insns 2). Add
        (default-insn-word-bitsize 32). Change base-insn-bitsize to 32.
        (define-mach): Add sh2e, sh2a-fpu, sh2a-nofpu, sh4-nofpu, sh4a-nofpu,
        sh4a, sh4al
        (SH2-MACH, SH2e-MACH, SH2a-nofpu-MACH, SH2a-MACH, SH3-MACH)
        (SH3e-MACH, SH4-nofpu-MACH, SH4-MACH, SH4a-nofpu-MACH, SH4a-MACH)
        (SH4al-MACH, SH5-MACH): New pmacros.
        (common-units, common-fp-units, sh2a-nofpu-units, sh2a-fpu-units)
        (sh4-nofpu-units, sh4-common-fp-units, sh5-media-units)
        (sh5-media-fp-units, common-model, common-model-with-fp)
        (sh3-model, sh3e-model): New pmacros.
        (define-model sh2): New model.
        (define-model sh2e): New model.
        (define-model sh3): New model.
        (define-model sh3e): New model.
        (define-model sh2a-nofpu): New model.
        (define-model sh2a-fpu): New model.
        (define-model sh4-nofpu): New model.
        (define-model sh4): New model.
        (define-model sh4a-nofpu): New model.
        (define-model sh4a): New model.
        (define-model sh4al): New model.
        (define-model sh5-media): New model.
        (define-model sh5): Add all units.
        (all-models, sh2e-models, sh2a-nofpu-models, sh2a-fpu-models)
        (sh3-models, sh3e-models, sh4-nofpu-models, sh4-models)
        (sh5-media-models, shad-models, fsqrt-models): New pmacros.
        (h-pc): Add PROFILE attribute.
        (h-fr): Likewise.
        (h-tr): Likewise.
        (h-gr,h-grc): Likewise.
        (h-cr): Set h-sr in setter.
        (h-frbit): Get/Set h-fpscr.
        (h-szbit,h-prbit): Likewise.
        (h-fp): Add PROFILE attribute. Now indexed by even indices 0-62.
        Add getter and setter.
        (h-fc): Add PROFILE attribute. Now indexed by quad indices 0-60.
        Adjust getter and setter.
        (h-fmtx): Add PROFILE attribute. Now indexed by 0, 16, 32 and 48.
        Adjust getter and setter.
        (h-dr): Add PROFILE attribute. Now indexed by even indices 0-62.
        (h-fsd,h-fmov): New hardware.
@
text
@d2 1
a2 1
; Copyright (C) 2000, 2001, 2006 Red Hat, Inc.
d6 2
@


1.3
log
@	* cpu/sh.cpu: Amend comments to refer to SuperH.
	* cpu/sh64-compact.cpu: Change comment to refer to SuperH.
	* cpu/sh64-media.cpu: Likewise.
	(Saturation): Update manual reference.
@
text
@d2 1
a2 1
; Copyright (C) 2000, 2001 Red Hat, Inc.
d8 6
d17 6
a22 2
  (insn-lsb0? #t)
  (machs sh2 sh3 sh3e sh4 sh5)
d33 3
d40 4
a43 2
  (comment "SHcompact 16-bit instruction set")
  (base-insn-bitsize 16)
d65 21
d100 7
d108 22
a129 1
  (comment "SH-4 CPU core")
d141 749
a889 1
(define-model
d891 15
a905 1
  (comment "SH-5 reference implementation")
d907 133
a1039 3
  (unit u-exec "Execution unit" ()
	1 1 ; issue done
	() () () ())
d1041 1
d1048 1
a1048 1
  (attrs PC (ISA compact,media))
d1061 1
a1061 1
  (attrs (ISA media,compact))
d1077 1
a1077 1
  (attrs VIRTUAL (ISA compact))
d1100 1
a1100 1
	   (set (reg h-sr) newval)
d1123 2
a1124 2
  (get () (and (srl (reg h-sr) 14) 1))
  (set (newvalue) (set (reg h-sr) (or (and (reg h-sr) (inv (sll 1 14))) (sll SI newvalue 14))))
d1132 2
a1133 2
  (get () (and (srl (reg h-sr) 13) 1))
  (set (newvalue) (set (reg h-sr) (or (and (reg h-sr) (inv (sll 1 13))) (sll SI newvalue 13))))
d1141 2
a1142 2
  (get () (and (srl (reg h-sr) 12) 1))
  (set (newvalue) (set (reg h-sr) (or (and (reg h-sr) (inv (sll 1 12))) (sll SI newvalue 12))))
d1177 1
a1177 1
  (attrs (ISA media,compact))
d1188 7
a1194 3
  (attrs (ISA media,compact))
  (type register DF (32))
  (indices keyword "" (.map -build-fpair-name (.iota 32)))
d1202 6
a1207 6
  (attrs VIRTUAL (ISA media,compact))
  (type register SF (16))
  (indices keyword "" (.map -build-fvec-name (.iota 16)))
  ; Mask with $F to ensure 0 <= index < 15.
  (get (index) (reg h-fr (mul (and UQI index 15) 4)))
  (set (index newval) (set (reg h-fr (mul (and UQI index 15) 4)) newval))
d1213 5
a1217 6
  (attrs VIRTUAL (ISA media))
  (type register SF (4))
  (indices keyword "" ((mtrx0 0) (mtrx1 1) (mtrx2 2) (mtrx3 3)))
  ; Mask with $3 to ensure 0 <= index < 4.
  (get (index) (reg h-fr (mul (and UQI index 3) 16)))
  (set (index newval) (set (reg h-fr (mul (and UQI index 3) 16)) newval))
d1225 5
a1229 3
  (attrs (ISA media,compact) VIRTUAL)
  (type register DF (32))
  (indices keyword "" (.map -build-dreg-name (.iota 64)))
d1244 42
d1288 1
a1288 1
  (attrs (ISA media))
@


1.2
log
@Replace occurrances of 'Hitachi' with 'Renesas'.
@
text
@d1 1
a1 1
; Renesas SH architecture description.  -*- Scheme -*-
d10 1
a10 1
  (comment "Renesas SuperH (SH)")
@


1.1
log
@* Contribute Hitachi SH5 port.
@
text
@d1 1
a1 1
; Hitachi SH architecture description.  -*- Scheme -*-
d10 1
a10 1
  (comment "Hitachi SuperH (SH)")
@


1.1.20.1
log
@Merge drow-cplus-branch to:
  cvs rtag -D 2003-12-14 00:00:00 UTC drow-cplus-merge-20031214 gdb+dejagnu
@
text
@d1 1
a1 1
; Renesas / SuperH SH architecture description.  -*- Scheme -*-
d10 1
a10 1
  (comment "Renesas / SuperH SuperH (SH)")
@


1.1.18.1
log
@2003-04-16  David Carlton  <carlton@@bactrian.org>

	* Merge with mainline; tag is carlton_dictionary-20030416-merge.
@
text
@d1 1
a1 1
; Renesas SH architecture description.  -*- Scheme -*-
d10 1
a10 1
  (comment "Renesas SuperH (SH)")
@


1.1.18.2
log
@2003-05-23  David Carlton  <carlton@@bactrian.org>

	* Merge with mainline; tag is carlton_dictionary-20030523-merge.
@
text
@d1 1
a1 1
; Renesas / SuperH SH architecture description.  -*- Scheme -*-
d10 1
a10 1
  (comment "Renesas / SuperH SuperH (SH)")
@


