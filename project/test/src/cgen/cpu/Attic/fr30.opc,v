head	1.7;
access;
symbols
	sid-snapshot-20110801:1.6
	cgen-snapshot-20110801:1.6
	sid-snapshot-20110701:1.6
	cgen-snapshot-20110701:1.6
	sid-snapshot-20110601:1.6
	cgen-snapshot-20110601:1.6
	sid-snapshot-20110501:1.6
	cgen-snapshot-20110501:1.6
	sid-snapshot-20110401:1.6
	cgen-snapshot-20110401:1.6
	sid-snapshot-20110301:1.6
	cgen-snapshot-20110301:1.6
	sid-snapshot-20110201:1.6
	cgen-snapshot-20110201:1.6
	sid-snapshot-20110101:1.6
	cgen-snapshot-20110101:1.6
	sid-snapshot-20101201:1.6
	cgen-snapshot-20101201:1.6
	sid-snapshot-20101101:1.6
	cgen-snapshot-20101101:1.6
	sid-snapshot-20101001:1.6
	cgen-snapshot-20101001:1.6
	sid-snapshot-20100901:1.6
	cgen-snapshot-20100901:1.6
	sid-snapshot-20100801:1.6
	cgen-snapshot-20100801:1.6
	sid-snapshot-20100701:1.6
	cgen-snapshot-20100701:1.6
	sid-snapshot-20100601:1.6
	cgen-snapshot-20100601:1.6
	sid-snapshot-20100501:1.6
	cgen-snapshot-20100501:1.6
	sid-snapshot-20100401:1.6
	cgen-snapshot-20100401:1.6
	sid-snapshot-20100301:1.6
	cgen-snapshot-20100301:1.6
	sid-snapshot-20100201:1.6
	cgen-snapshot-20100201:1.6
	sid-snapshot-20100101:1.6
	cgen-snapshot-20100101:1.6
	sid-snapshot-20091201:1.5
	cgen-snapshot-20091201:1.5
	sid-snapshot-20091101:1.5
	cgen-snapshot-20091101:1.5
	sid-snapshot-20091001:1.5
	cgen-snapshot-20091001:1.5
	arc-sim-20090309:1.5.6.1
	sid-snapshot-20090901:1.5
	cgen-snapshot-20090901:1.5
	sid-snapshot-20090801:1.5
	cgen-snapshot-20090801:1.5
	sid-snapshot-20090701:1.5
	cgen-snapshot-20090701:1.5
	dje-cgen-play1-branch:1.5.0.10
	dje-cgen-play1-branchpoint:1.5
	cgen-1_1-branch:1.5.0.8
	cgen-1_1-branchpoint:1.5
	sid-snapshot-20090601:1.5
	cgen-snapshot-20090601:1.5
	sid-snapshot-20090501:1.5
	cgen-snapshot-20090501:1.5
	sid-snapshot-20090401:1.5
	cgen-snapshot-20090401:1.5
	arc-insight_6_8-branch:1.5.0.6
	arc-insight_6_8-branchpoint:1.5
	sid-snapshot-20090301:1.5
	cgen-snapshot-20090301:1.5
	sid-snapshot-20090201:1.5
	cgen-snapshot-20090201:1.5
	sid-snapshot-20090101:1.5
	cgen-snapshot-20090101:1.5
	sid-snapshot-20081201:1.5
	cgen-snapshot-20081201:1.5
	sid-snapshot-20081101:1.5
	cgen-snapshot-20081101:1.5
	sid-snapshot-20081001:1.5
	cgen-snapshot-20081001:1.5
	sid-snapshot-20080901:1.5
	cgen-snapshot-20080901:1.5
	sid-snapshot-20080801:1.5
	cgen-snapshot-20080801:1.5
	sid-snapshot-20080701:1.5
	cgen-snapshot-20080701:1.5
	sid-snapshot-20080601:1.5
	cgen-snapshot-20080601:1.5
	sid-snapshot-20080501:1.5
	cgen-snapshot-20080501:1.5
	sid-snapshot-20080403:1.5
	sid-snapshot-20080401:1.5
	cgen-snapshot-20080401:1.5
	sid-snapshot-20080301:1.5
	cgen-snapshot-20080301:1.5
	sid-snapshot-20080201:1.5
	cgen-snapshot-20080201:1.5
	sid-snapshot-20080101:1.5
	cgen-snapshot-20080101:1.5
	sid-snapshot-20071201:1.5
	cgen-snapshot-20071201:1.5
	sid-snapshot-20071101:1.5
	cgen-snapshot-20071101:1.5
	sid-snapshot-20071001:1.5
	cgen-snapshot-20071001:1.5
	msnyder-fork-checkpoint-branch:1.5.0.4
	msnyder-fork-checkpoint-branchpoint:1.5
	gdb-csl-arm-20051020-branch:1.5.0.2
	gdb-csl-arm-20051020-branchpoint:1.5
	drow_intercu-merge-20040921:1.3
	drow_intercu-merge-20040915:1.3
	jimb-gdb_6_2-e500-branch:1.3.0.78
	jimb-gdb_6_2-e500-branchpoint:1.3
	gdb_6_2-20040730-release:1.3
	gdb_6_2-branch:1.3.0.74
	gdb_6_2-2004-07-10-gmt-branchpoint:1.3
	gdb_6_1_1-20040616-release:1.3
	gdb_6_1-2004-04-05-release:1.3
	drow_intercu-merge-20040402:1.3
	drow_intercu-merge-20040327:1.3
	ezannoni_pie-20040323-branch:1.3.0.72
	ezannoni_pie-20040323-branchpoint:1.3
	cagney_tramp-20040321-mergepoint:1.3
	cagney_tramp-20040309-branch:1.3.0.70
	cagney_tramp-20040309-branchpoint:1.3
	gdb_6_1-branch:1.3.0.68
	gdb_6_1-2004-03-01-gmt-branchpoint:1.3
	drow_intercu-20040221-branch:1.3.0.66
	drow_intercu-20040221-branchpoint:1.3
	cagney_bfdfile-20040213-branch:1.3.0.64
	cagney_bfdfile-20040213-branchpoint:1.3
	drow-cplus-merge-20040208:1.3
	carlton_dictionary-20040126-merge:1.3
	cagney_bigcore-20040122-branch:1.3.0.62
	cagney_bigcore-20040122-branchpoint:1.3
	drow-cplus-merge-20040113:1.3
	drow-cplus-merge-20031224:1.3
	drow-cplus-merge-20031220:1.3
	carlton_dictionary-20031215-merge:1.3
	drow-cplus-merge-20031214:1.3
	carlton-dictionary-20031111-merge:1.3
	gdb_6_0-2003-10-04-release:1.3
	kettenis_sparc-20030918-branch:1.3.0.60
	kettenis_sparc-20030918-branchpoint:1.3
	carlton_dictionary-20030917-merge:1.3
	ezannoni_pie-20030916-branchpoint:1.3
	ezannoni_pie-20030916-branch:1.3.0.58
	cagney_x86i386-20030821-branch:1.3.0.56
	cagney_x86i386-20030821-branchpoint:1.3
	carlton_dictionary-20030805-merge:1.3
	carlton_dictionary-20030627-merge:1.3
	gdb_6_0-branch:1.3.0.54
	gdb_6_0-2003-06-23-branchpoint:1.3
	jimb-ppc64-linux-20030613-branch:1.3.0.52
	jimb-ppc64-linux-20030613-branchpoint:1.3
	cagney_convert-20030606-branch:1.3.0.50
	cagney_convert-20030606-branchpoint:1.3
	cagney_writestrings-20030508-branch:1.3.0.48
	cagney_writestrings-20030508-branchpoint:1.3
	jimb-ppc64-linux-20030528-branch:1.3.0.46
	jimb-ppc64-linux-20030528-branchpoint:1.3
	carlton_dictionary-20030523-merge:1.3
	cagney_fileio-20030521-branch:1.3.0.44
	cagney_fileio-20030521-branchpoint:1.3
	kettenis_i386newframe-20030517-mergepoint:1.3
	jimb-ppc64-linux-20030509-branch:1.3.0.42
	jimb-ppc64-linux-20030509-branchpoint:1.3
	kettenis_i386newframe-20030504-mergepoint:1.3
	carlton_dictionary-20030430-merge:1.3
	kettenis_i386newframe-20030419-branch:1.3.0.40
	kettenis_i386newframe-20030419-branchpoint:1.3
	carlton_dictionary-20030416-merge:1.3
	cagney_frameaddr-20030409-mergepoint:1.3
	kettenis_i386newframe-20030406-branch:1.3.0.38
	kettenis_i386newframe-20030406-branchpoint:1.3
	cagney_frameaddr-20030403-branchpoint:1.3
	cagney_frameaddr-20030403-branch:1.3.0.36
	cagney_framebase-20030330-mergepoint:1.3
	cagney_framebase-20030326-branch:1.3.0.34
	cagney_framebase-20030326-branchpoint:1.3
	cagney_lazyid-20030317-branch:1.3.0.32
	cagney_lazyid-20030317-branchpoint:1.3
	kettenis-i386newframe-20030316-mergepoint:1.3
	offbyone-20030313-branch:1.3.0.30
	offbyone-20030313-branchpoint:1.3
	kettenis-i386newframe-20030308-branch:1.3.0.28
	kettenis-i386newframe-20030308-branchpoint:1.3
	carlton_dictionary-20030305-merge:1.3
	cagney_offbyone-20030303-branch:1.3.0.26
	cagney_offbyone-20030303-branchpoint:1.3
	carlton_dictionary-20030207-merge:1.3
	interps-20030202-branch:1.3.0.24
	interps-20030202-branchpoint:1.3
	cagney-unwind-20030108-branch:1.3.0.22
	cagney-unwind-20030108-branchpoint:1.3
	carlton_dictionary-20021223-merge:1.3
	gdb_5_3-2002-12-12-release:1.3
	carlton_dictionary-20021115-merge:1.3
	kseitz_interps-20021105-merge:1.3
	kseitz_interps-20021103-merge:1.3
	drow-cplus-merge-20021020:1.3
	drow-cplus-merge-20021025:1.3
	carlton_dictionary-20021025-merge:1.3
	carlton_dictionary-20021011-merge:1.3
	drow-cplus-branch:1.3.0.20
	drow-cplus-branchpoint:1.3
	kseitz_interps-20020930-merge:1.3
	carlton_dictionary-20020927-merge:1.3
	carlton_dictionary-branch:1.3.0.18
	carlton_dictionary-20020920-branchpoint:1.3
	sid-20020905-branchpoint:1.3
	sid-20020905-branch:1.3.0.16
	gdb_5_3-branch:1.3.0.14
	gdb_5_3-2002-09-04-branchpoint:1.3
	kseitz_interps-20020829-merge:1.3
	cagney_sysregs-20020825-branch:1.3.0.12
	cagney_sysregs-20020825-branchpoint:1.3
	readline_4_3-import-branch:1.3.0.10
	readline_4_3-import-branchpoint:1.3
	gdb_5_2_1-2002-07-23-release:1.3
	kseitz_interps-20020528-branch:1.3.0.8
	kseitz_interps-20020528-branchpoint:1.3
	cagney_regbuf-20020515-branch:1.3.0.6
	cagney_regbuf-20020515-branchpoint:1.3
	jimb-macro-020506-branch:1.3.0.4
	jimb-macro-020506-branchpoint:1.3
	gdb_5_2-2002-04-29-release:1.3
	gdb_5_2-branch:1.3.0.2
	gdb_5_2-2002-03-03-branchpoint:1.3
	cygnus_cvs_20020108_pre:1.3
	cgen-1-1-branch:1.1.0.2;
locks; strict;
comment	@# @;


1.7
date	2011.08.22.15.25.09;	author nickc;	state dead;
branches;
next	1.6;

1.6
date	2009.12.11.13.42.07;	author nickc;	state Exp;
branches;
next	1.5;

1.5
date	2005.07.15.13.57.38;	author amodra;	state Exp;
branches
	1.5.6.1;
next	1.4;

1.4
date	2005.07.01.11.16.30;	author nickc;	state Exp;
branches;
next	1.3;

1.3
date	2001.11.20.05.16.06;	author bje;	state Exp;
branches;
next	1.2;

1.2
date	2001.10.09.08.24.22;	author nickc;	state Exp;
branches;
next	1.1;

1.1
date	2001.07.05.12.45.47;	author bje;	state Exp;
branches;
next	;

1.5.6.1
date	2009.03.09.20.36.06;	author amylaar;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Move cpu files from cgen/cpu to top level cpu directory.
@
text
@/* FR30 opcode support.  -*- C -*-
   Copyright (C) 2000, 2001, 2005 Red Hat, Inc.
   This file is part of CGEN.  */

/* This file is an addendum to fr30.cpu.  Heavy use of C code isn't
   appropriate in .cpu files, so it resides here.  This especially applies
   to assembly/disassembly where parsing/printing can be quite involved.
   Such things aren't really part of the specification of the cpu, per se,
   so .cpu files provide the general framework and .opc files handle the
   nitty-gritty details as necessary.

   Each section is delimited with start and end markers.

   <arch>-opc.h additions use: "-- opc.h"
   <arch>-opc.c additions use: "-- opc.c"
   <arch>-asm.c additions use: "-- asm.c"
   <arch>-dis.c additions use: "-- dis.c"
   <arch>-ibd.h additions use: "-- ibd.h".  */

/* -- opc.h */

/* ??? This can be improved upon.  */
#undef  CGEN_DIS_HASH_SIZE
#define CGEN_DIS_HASH_SIZE 16
#undef  CGEN_DIS_HASH
#define CGEN_DIS_HASH(buffer, value) (((unsigned char *) (buffer))[0] >> 4)

/* -- */

/* -- asm.c */
/* Handle register lists for LDMx and STMx.  */

static int
parse_register_number (const char **strp)
{
  int regno;

  if (**strp < '0' || **strp > '9')
    return -1; /* Error.  */
  regno = **strp - '0';
  ++*strp;

  if (**strp >= '0' && **strp <= '9')
    {
      regno = regno * 10 + (**strp - '0');
      ++*strp;
    }

  return regno;
}

static const char *
parse_register_list (CGEN_CPU_DESC cd ATTRIBUTE_UNUSED,
		     const char **strp,
		     int opindex ATTRIBUTE_UNUSED,
		     unsigned long *valuep,
		     int high_low,   /* 0 == high, 1 == low.  */
		     int load_store) /* 0 == load, 1 == store.  */
{
  *valuep = 0;
  while (**strp && **strp != ')')
    {
      int regno;

      if (**strp != 'R' && **strp != 'r')
	break;
      ++*strp;

      regno = parse_register_number (strp);
      if (regno == -1)
	return _("Register number is not valid");
      if (regno > 7 && !high_low)
	return _("Register must be between r0 and r7");
      if (regno < 8 && high_low)
	return _("Register must be between r8 and r15");

      if (high_low)
	regno -= 8;

      if (load_store) /* Mask is reversed for store.  */
	*valuep |= 0x80 >> regno;
      else
	*valuep |= 1 << regno;

      if (**strp == ',')
	{
	  if (*(*strp + 1) == ')')
	    break;
	  ++*strp;
	}
    }

  if (!*strp || **strp != ')')
    return _("Register list is not valid");

  return NULL;
}

static const char *
parse_low_register_list_ld (CGEN_CPU_DESC cd,
			    const char **strp,
			    int opindex,
			    unsigned long *valuep)
{
  return parse_register_list (cd, strp, opindex, valuep,
			      0 /* Low.  */, 0 /* Load.  */);
}

static const char *
parse_hi_register_list_ld (CGEN_CPU_DESC cd,
			   const char **strp,
			   int opindex,
			   unsigned long *valuep)
{
  return parse_register_list (cd, strp, opindex, valuep,
			      1 /* High.  */, 0 /* Load.  */);
}

static const char *
parse_low_register_list_st (CGEN_CPU_DESC cd,
			    const char **strp,
			    int opindex,
			    unsigned long *valuep)
{
  return parse_register_list (cd, strp, opindex, valuep,
			      0 /* Low.  */, 1 /* Store.  */);
}

static const char *
parse_hi_register_list_st (CGEN_CPU_DESC cd,
			   const char **strp,
			   int opindex,
			   unsigned long *valuep)
{
  return parse_register_list (cd, strp, opindex, valuep,
			      1 /* High.  */, 1 /* Store.  */);
}

/* -- */

/* -- dis.c */
static void
print_register_list (void * dis_info,
		     long value,
		     long offset,
		     int load_store) /* 0 == load, 1 == store.  */
{
  disassemble_info *info = dis_info;
  int mask;
  int reg_index = 0;
  char * comma = "";

  if (load_store)
    mask = 0x80;
  else
    mask = 1;

  if (value & mask)
    {
      (*info->fprintf_func) (info->stream, "r%li", reg_index + offset);
      comma = ",";
    }
    
  for (reg_index = 1; reg_index <= 7; ++reg_index)
    {
      if (load_store)
	mask >>= 1;
      else
	mask <<= 1;

      if (value & mask)
	{
	  (*info->fprintf_func) (info->stream, "%sr%li", comma, reg_index + offset);
	  comma = ",";
	}
    }
}

static void
print_hi_register_list_ld (CGEN_CPU_DESC cd ATTRIBUTE_UNUSED,
			   void * dis_info,
			   long value,
			   unsigned int attrs ATTRIBUTE_UNUSED,
			   bfd_vma pc ATTRIBUTE_UNUSED,
			   int length ATTRIBUTE_UNUSED)
{
  print_register_list (dis_info, value, 8, 0 /* Load.  */);
}

static void
print_low_register_list_ld (CGEN_CPU_DESC cd ATTRIBUTE_UNUSED,
			    void * dis_info,
			    long value,
			    unsigned int attrs ATTRIBUTE_UNUSED,
			    bfd_vma pc ATTRIBUTE_UNUSED,
			    int length ATTRIBUTE_UNUSED)
{
  print_register_list (dis_info, value, 0, 0 /* Load.  */);
}

static void
print_hi_register_list_st (CGEN_CPU_DESC cd ATTRIBUTE_UNUSED,
			   void * dis_info,
			   long value,
			   unsigned int attrs ATTRIBUTE_UNUSED,
			   bfd_vma pc ATTRIBUTE_UNUSED,
			   int length ATTRIBUTE_UNUSED)
{
  print_register_list (dis_info, value, 8, 1 /* Store.  */);
}

static void
print_low_register_list_st (CGEN_CPU_DESC cd ATTRIBUTE_UNUSED,
			    void * dis_info,
			    long value,
			    unsigned int attrs ATTRIBUTE_UNUSED,
			    bfd_vma pc ATTRIBUTE_UNUSED,
			    int length ATTRIBUTE_UNUSED)
{
  print_register_list (dis_info, value, 0, 1 /* Store.  */);
}

static void
print_m4 (CGEN_CPU_DESC cd ATTRIBUTE_UNUSED,
	  void * dis_info,
	  long value,
	  unsigned int attrs ATTRIBUTE_UNUSED,
	  bfd_vma pc ATTRIBUTE_UNUSED,
	  int length ATTRIBUTE_UNUSED)
{
  disassemble_info *info = (disassemble_info *) dis_info;

  (*info->fprintf_func) (info->stream, "%ld", value);
}
/* -- */
@


1.6
log
@Add -Wshadow to the gcc command line options used when compiling the binutils.
Fix up all warnings generated by the addition of this switch.
@
text
@@


1.5
log
@	* cpu/fr30.opc (print_register_list): Correct format strings.
	* cpu/ip2k.opc: Likewise.
@
text
@d150 1
a150 1
  int index = 0;
d160 1
a160 1
      (*info->fprintf_func) (info->stream, "r%li", index + offset);
d164 1
a164 1
  for (index = 1; index <= 7; ++index)
d173 1
a173 1
	  (*info->fprintf_func) (info->stream, "%sr%li", comma, index + offset);
@


1.5.6.1
log
@Check in ARCompact simulator.  A valid configuration is arc-elf.
This is not quite finished and has most likely a few files that are
obsolete & not used, but it's good enough to run gcc regression tests.
@
text
@d26 1
a26 2
#define CGEN_DIS_HASH(buffer, value, big_p) \
  (((unsigned char *) (buffer))[0] >> 4)
@


1.4
log
@Update function declarations to ISO C90 formatting
@
text
@d160 1
a160 1
      (*info->fprintf_func) (info->stream, "r%i", index + offset);
d173 1
a173 1
	  (*info->fprintf_func) (info->stream, "%sr%i", comma, index + offset);
@


1.3
log
@* merge 2001-11-01.
@
text
@d2 1
a2 1
   Copyright (C) 2000, 2001 Red Hat, Inc.
d18 1
a18 2
   <arch>-ibd.h additions use: "-- ibd.h"
*/
d23 1
a23 1
#undef CGEN_DIS_HASH_SIZE
d25 1
a25 1
#undef CGEN_DIS_HASH
a32 13
static int parse_register_number
  PARAMS ((const char **));
static const char * parse_register_list
  PARAMS ((CGEN_CPU_DESC, const char **, int, unsigned long *, int, int));
static const char * parse_low_register_list_ld
  PARAMS ((CGEN_CPU_DESC, const char **, int, unsigned long *));
static const char * parse_hi_register_list_ld
  PARAMS ((CGEN_CPU_DESC, const char **, int, unsigned long *));
static const char * parse_low_register_list_st
  PARAMS ((CGEN_CPU_DESC, const char **, int, unsigned long *));
static const char * parse_hi_register_list_st
  PARAMS ((CGEN_CPU_DESC, const char **, int, unsigned long *));

d34 1
a34 2
parse_register_number (strp)
     const char **strp;
d37 1
d39 1
a39 1
    return -1; /* error.  */
d53 6
a58 7
parse_register_list (cd, strp, opindex, valuep, high_low, load_store)
     CGEN_CPU_DESC cd ATTRIBUTE_UNUSED;
     const char **strp;
     int opindex ATTRIBUTE_UNUSED;
     unsigned long *valuep;
     int high_low;   /* 0 == high, 1 == low */
     int load_store; /* 0 == load, 1 == store */
a59 2
  int regno;

d63 2
d71 1
a71 1
	return "Register number is not valid";
d73 1
a73 1
	return "Register must be between r0 and r7";
d75 1
a75 1
	return "Register must be between r8 and r15";
d94 1
a94 1
    return "Register list is not valid";
d100 4
a103 5
parse_low_register_list_ld (cd, strp, opindex, valuep)
     CGEN_CPU_DESC cd;
     const char **strp;
     int opindex;
     unsigned long *valuep;
d105 2
a106 1
  return parse_register_list (cd, strp, opindex, valuep, 0/*low*/, 0/*load*/);
d110 4
a113 5
parse_hi_register_list_ld (cd, strp, opindex, valuep)
     CGEN_CPU_DESC cd;
     const char **strp;
     int opindex;
     unsigned long *valuep;
d115 2
a116 1
  return parse_register_list (cd, strp, opindex, valuep, 1/*high*/, 0/*load*/);
d120 4
a123 5
parse_low_register_list_st (cd, strp, opindex, valuep)
     CGEN_CPU_DESC cd;
     const char **strp;
     int opindex;
     unsigned long *valuep;
d125 2
a126 1
  return parse_register_list (cd, strp, opindex, valuep, 0/*low*/, 1/*store*/);
d130 4
a133 5
parse_hi_register_list_st (cd, strp, opindex, valuep)
     CGEN_CPU_DESC cd;
     const char **strp;
     int opindex;
     unsigned long *valuep;
d135 2
a136 1
  return parse_register_list (cd, strp, opindex, valuep, 1/*high*/, 1/*store*/);
a141 13
static void print_register_list
  PARAMS ((PTR, long, long, int));
static void print_hi_register_list_ld
  PARAMS ((CGEN_CPU_DESC, PTR, long, unsigned, bfd_vma, int));
static void print_low_register_list_ld
  PARAMS ((CGEN_CPU_DESC, PTR, long, unsigned, bfd_vma, int));
static void print_hi_register_list_st
  PARAMS ((CGEN_CPU_DESC, PTR, long, unsigned, bfd_vma, int));
static void print_low_register_list_st
  PARAMS ((CGEN_CPU_DESC, PTR, long, unsigned, bfd_vma, int));
static void print_m4
  PARAMS ((CGEN_CPU_DESC, PTR, long, unsigned, bfd_vma, int));

d143 4
a146 5
print_register_list (dis_info, value, offset, load_store)
     PTR dis_info;
     long value;
     long offset;
     int load_store; /* 0 == load, 1 == store */
d151 1
a151 1
  char* comma = "";
d180 6
a185 7
print_hi_register_list_ld (cd, dis_info, value, attrs, pc, length)
     CGEN_CPU_DESC cd ATTRIBUTE_UNUSED;
     PTR dis_info;
     long value;
     unsigned int attrs ATTRIBUTE_UNUSED;
     bfd_vma pc ATTRIBUTE_UNUSED;
     int length ATTRIBUTE_UNUSED;
d187 1
a187 1
  print_register_list (dis_info, value, 8, 0/*load*/);
d191 6
a196 7
print_low_register_list_ld (cd, dis_info, value, attrs, pc, length)
     CGEN_CPU_DESC cd ATTRIBUTE_UNUSED;
     PTR dis_info;
     long value;
     unsigned int attrs ATTRIBUTE_UNUSED;
     bfd_vma pc ATTRIBUTE_UNUSED;
     int length ATTRIBUTE_UNUSED;
d198 1
a198 1
  print_register_list (dis_info, value, 0, 0/*load*/);
d202 6
a207 7
print_hi_register_list_st (cd, dis_info, value, attrs, pc, length)
     CGEN_CPU_DESC cd ATTRIBUTE_UNUSED;
     PTR dis_info;
     long value;
     unsigned int attrs ATTRIBUTE_UNUSED;
     bfd_vma pc ATTRIBUTE_UNUSED;
     int length ATTRIBUTE_UNUSED;
d209 1
a209 1
  print_register_list (dis_info, value, 8, 1/*store*/);
d213 6
a218 7
print_low_register_list_st (cd, dis_info, value, attrs, pc, length)
     CGEN_CPU_DESC cd ATTRIBUTE_UNUSED;
     PTR dis_info;
     long value;
     unsigned int attrs ATTRIBUTE_UNUSED;
     bfd_vma pc ATTRIBUTE_UNUSED;
     int length ATTRIBUTE_UNUSED;
d220 1
a220 1
  print_register_list (dis_info, value, 0, 1/*store*/);
d224 6
a229 7
print_m4 (cd, dis_info, value, attrs, pc, length)
     CGEN_CPU_DESC cd ATTRIBUTE_UNUSED;
     PTR dis_info;
     long value;
     unsigned int attrs ATTRIBUTE_UNUSED;
     bfd_vma pc ATTRIBUTE_UNUSED;
     int length ATTRIBUTE_UNUSED;
d232 1
@


1.2
log
@Fix compile time warning messages in generated C files
@
text
@d210 1
a210 1
     CGEN_CPU_DESC cd;
d213 3
a215 3
     unsigned int attrs;
     bfd_vma pc;
     int length;
d222 1
a222 1
     CGEN_CPU_DESC cd;
d225 3
a227 3
     unsigned int attrs;
     bfd_vma pc;
     int length;
d234 1
a234 1
     CGEN_CPU_DESC cd;
d237 3
a239 3
     unsigned int attrs;
     bfd_vma pc;
     int length;
d246 1
a246 1
     CGEN_CPU_DESC cd;
d249 3
a251 3
     unsigned int attrs;
     bfd_vma pc;
     int length;
d258 1
a258 1
     CGEN_CPU_DESC cd;
d261 3
a263 3
     unsigned int attrs;
     bfd_vma pc;
     int length;
@


1.1
log
@2001-07-05  Ben Elliston  <bje@@redhat.com>

	* README: Update.

	* read.scm (include): Include files from srcdir/cpu.
	(-cgen): Likewise for loading .cpu files.
	* *.cpu: Move all cpu descriptions into cpu subdirectory.
	* *.opc: Likewise.
	* simplify.inc: Likewise.
@
text
@d2 1
a2 1
   Copyright (C) 2000 Red Hat, Inc.
d32 14
a45 1
/* Handle register lists for LDMx and STMx  */
d53 1
a53 1
    return -1; /* error */
d68 1
a68 1
     CGEN_CPU_DESC cd;
d70 1
a70 1
     int opindex;
d76 1
d95 1
a95 1
      if (load_store) /* mask is reversed for store */
d157 12
@

