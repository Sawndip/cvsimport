head	1.6;
access;
symbols
	sid-snapshot-20110801:1.5
	cgen-snapshot-20110801:1.5
	sid-snapshot-20110701:1.5
	cgen-snapshot-20110701:1.5
	sid-snapshot-20110601:1.5
	cgen-snapshot-20110601:1.5
	sid-snapshot-20110501:1.5
	cgen-snapshot-20110501:1.5
	sid-snapshot-20110401:1.5
	cgen-snapshot-20110401:1.5
	sid-snapshot-20110301:1.5
	cgen-snapshot-20110301:1.5
	sid-snapshot-20110201:1.5
	cgen-snapshot-20110201:1.5
	sid-snapshot-20110101:1.5
	cgen-snapshot-20110101:1.5
	sid-snapshot-20101201:1.5
	cgen-snapshot-20101201:1.5
	sid-snapshot-20101101:1.5
	cgen-snapshot-20101101:1.5
	sid-snapshot-20101001:1.5
	cgen-snapshot-20101001:1.5
	sid-snapshot-20100901:1.5
	cgen-snapshot-20100901:1.5
	sid-snapshot-20100801:1.5
	cgen-snapshot-20100801:1.5
	sid-snapshot-20100701:1.5
	cgen-snapshot-20100701:1.5
	sid-snapshot-20100601:1.5
	cgen-snapshot-20100601:1.5
	sid-snapshot-20100501:1.5
	cgen-snapshot-20100501:1.5
	sid-snapshot-20100401:1.5
	cgen-snapshot-20100401:1.5
	sid-snapshot-20100301:1.5
	cgen-snapshot-20100301:1.5
	sid-snapshot-20100201:1.5
	cgen-snapshot-20100201:1.5
	sid-snapshot-20100101:1.5
	cgen-snapshot-20100101:1.5
	sid-snapshot-20091201:1.5
	cgen-snapshot-20091201:1.5
	sid-snapshot-20091101:1.5
	cgen-snapshot-20091101:1.5
	sid-snapshot-20091001:1.5
	cgen-snapshot-20091001:1.5
	arc-sim-20090309:1.5.6.1
	sid-snapshot-20090901:1.5
	cgen-snapshot-20090901:1.5
	sid-snapshot-20090801:1.5
	cgen-snapshot-20090801:1.5
	sid-snapshot-20090701:1.5
	cgen-snapshot-20090701:1.5
	dje-cgen-play1-branch:1.5.0.10
	dje-cgen-play1-branchpoint:1.5
	cgen-1_1-branch:1.5.0.8
	cgen-1_1-branchpoint:1.5
	sid-snapshot-20090601:1.5
	cgen-snapshot-20090601:1.5
	sid-snapshot-20090501:1.5
	cgen-snapshot-20090501:1.5
	sid-snapshot-20090401:1.5
	cgen-snapshot-20090401:1.5
	arc-insight_6_8-branch:1.5.0.6
	arc-insight_6_8-branchpoint:1.5
	sid-snapshot-20090301:1.5
	cgen-snapshot-20090301:1.5
	sid-snapshot-20090201:1.5
	cgen-snapshot-20090201:1.5
	sid-snapshot-20090101:1.5
	cgen-snapshot-20090101:1.5
	sid-snapshot-20081201:1.5
	cgen-snapshot-20081201:1.5
	sid-snapshot-20081101:1.5
	cgen-snapshot-20081101:1.5
	sid-snapshot-20081001:1.5
	cgen-snapshot-20081001:1.5
	sid-snapshot-20080901:1.5
	cgen-snapshot-20080901:1.5
	sid-snapshot-20080801:1.5
	cgen-snapshot-20080801:1.5
	sid-snapshot-20080701:1.5
	cgen-snapshot-20080701:1.5
	sid-snapshot-20080601:1.5
	cgen-snapshot-20080601:1.5
	sid-snapshot-20080501:1.5
	cgen-snapshot-20080501:1.5
	sid-snapshot-20080403:1.5
	sid-snapshot-20080401:1.5
	cgen-snapshot-20080401:1.5
	sid-snapshot-20080301:1.5
	cgen-snapshot-20080301:1.5
	sid-snapshot-20080201:1.5
	cgen-snapshot-20080201:1.5
	sid-snapshot-20080101:1.5
	cgen-snapshot-20080101:1.5
	sid-snapshot-20071201:1.5
	cgen-snapshot-20071201:1.5
	sid-snapshot-20071101:1.5
	cgen-snapshot-20071101:1.5
	sid-snapshot-20071001:1.5
	cgen-snapshot-20071001:1.5
	msnyder-fork-checkpoint-branch:1.5.0.4
	msnyder-fork-checkpoint-branchpoint:1.5
	gdb-csl-arm-20051020-branch:1.5.0.2
	gdb-csl-arm-20051020-branchpoint:1.5
	drow_intercu-merge-20040921:1.3
	drow_intercu-merge-20040915:1.3
	jimb-gdb_6_2-e500-branch:1.3.0.18
	jimb-gdb_6_2-e500-branchpoint:1.3
	gdb_6_2-20040730-release:1.3
	gdb_6_2-branch:1.3.0.14
	gdb_6_2-2004-07-10-gmt-branchpoint:1.3
	gdb_6_1_1-20040616-release:1.3
	gdb_6_1-2004-04-05-release:1.3
	drow_intercu-merge-20040402:1.3
	drow_intercu-merge-20040327:1.3
	ezannoni_pie-20040323-branch:1.3.0.12
	ezannoni_pie-20040323-branchpoint:1.3
	cagney_tramp-20040321-mergepoint:1.3
	cagney_tramp-20040309-branch:1.3.0.10
	cagney_tramp-20040309-branchpoint:1.3
	gdb_6_1-branch:1.3.0.8
	gdb_6_1-2004-03-01-gmt-branchpoint:1.3
	drow_intercu-20040221-branch:1.3.0.6
	drow_intercu-20040221-branchpoint:1.3
	cagney_bfdfile-20040213-branch:1.3.0.4
	cagney_bfdfile-20040213-branchpoint:1.3
	drow-cplus-merge-20040208:1.3
	carlton_dictionary-20040126-merge:1.3
	cagney_bigcore-20040122-branch:1.3.0.2
	cagney_bigcore-20040122-branchpoint:1.3
	drow-cplus-merge-20040113:1.3
	drow-cplus-merge-20031224:1.3
	drow-cplus-merge-20031220:1.3
	carlton_dictionary-20031215-merge:1.3
	drow-cplus-merge-20031214:1.3
	carlton-dictionary-20031111-merge:1.2
	gdb_6_0-2003-10-04-release:1.2
	kettenis_sparc-20030918-branch:1.2.0.60
	kettenis_sparc-20030918-branchpoint:1.2
	carlton_dictionary-20030917-merge:1.2
	ezannoni_pie-20030916-branchpoint:1.2
	ezannoni_pie-20030916-branch:1.2.0.58
	cagney_x86i386-20030821-branch:1.2.0.56
	cagney_x86i386-20030821-branchpoint:1.2
	carlton_dictionary-20030805-merge:1.2
	carlton_dictionary-20030627-merge:1.2
	gdb_6_0-branch:1.2.0.54
	gdb_6_0-2003-06-23-branchpoint:1.2
	jimb-ppc64-linux-20030613-branch:1.2.0.52
	jimb-ppc64-linux-20030613-branchpoint:1.2
	cagney_convert-20030606-branch:1.2.0.50
	cagney_convert-20030606-branchpoint:1.2
	cagney_writestrings-20030508-branch:1.2.0.48
	cagney_writestrings-20030508-branchpoint:1.2
	jimb-ppc64-linux-20030528-branch:1.2.0.46
	jimb-ppc64-linux-20030528-branchpoint:1.2
	carlton_dictionary-20030523-merge:1.2
	cagney_fileio-20030521-branch:1.2.0.44
	cagney_fileio-20030521-branchpoint:1.2
	kettenis_i386newframe-20030517-mergepoint:1.2
	jimb-ppc64-linux-20030509-branch:1.2.0.42
	jimb-ppc64-linux-20030509-branchpoint:1.2
	kettenis_i386newframe-20030504-mergepoint:1.2
	carlton_dictionary-20030430-merge:1.2
	kettenis_i386newframe-20030419-branch:1.2.0.40
	kettenis_i386newframe-20030419-branchpoint:1.2
	carlton_dictionary-20030416-merge:1.2
	cagney_frameaddr-20030409-mergepoint:1.2
	kettenis_i386newframe-20030406-branch:1.2.0.38
	kettenis_i386newframe-20030406-branchpoint:1.2
	cagney_frameaddr-20030403-branchpoint:1.2
	cagney_frameaddr-20030403-branch:1.2.0.36
	cagney_framebase-20030330-mergepoint:1.2
	cagney_framebase-20030326-branch:1.2.0.34
	cagney_framebase-20030326-branchpoint:1.2
	cagney_lazyid-20030317-branch:1.2.0.32
	cagney_lazyid-20030317-branchpoint:1.2
	kettenis-i386newframe-20030316-mergepoint:1.2
	offbyone-20030313-branch:1.2.0.30
	offbyone-20030313-branchpoint:1.2
	kettenis-i386newframe-20030308-branch:1.2.0.28
	kettenis-i386newframe-20030308-branchpoint:1.2
	carlton_dictionary-20030305-merge:1.2
	cagney_offbyone-20030303-branch:1.2.0.26
	cagney_offbyone-20030303-branchpoint:1.2
	carlton_dictionary-20030207-merge:1.2
	interps-20030202-branch:1.2.0.24
	interps-20030202-branchpoint:1.2
	cagney-unwind-20030108-branch:1.2.0.22
	cagney-unwind-20030108-branchpoint:1.2
	carlton_dictionary-20021223-merge:1.2
	gdb_5_3-2002-12-12-release:1.2
	carlton_dictionary-20021115-merge:1.2
	kseitz_interps-20021105-merge:1.2
	kseitz_interps-20021103-merge:1.2
	drow-cplus-merge-20021020:1.2
	drow-cplus-merge-20021025:1.2
	carlton_dictionary-20021025-merge:1.2
	carlton_dictionary-20021011-merge:1.2
	drow-cplus-branch:1.2.0.20
	drow-cplus-branchpoint:1.2
	kseitz_interps-20020930-merge:1.2
	carlton_dictionary-20020927-merge:1.2
	carlton_dictionary-branch:1.2.0.18
	carlton_dictionary-20020920-branchpoint:1.2
	sid-20020905-branchpoint:1.2
	sid-20020905-branch:1.2.0.16
	gdb_5_3-branch:1.2.0.14
	gdb_5_3-2002-09-04-branchpoint:1.2
	kseitz_interps-20020829-merge:1.2
	cagney_sysregs-20020825-branch:1.2.0.12
	cagney_sysregs-20020825-branchpoint:1.2
	readline_4_3-import-branch:1.2.0.10
	readline_4_3-import-branchpoint:1.2
	gdb_5_2_1-2002-07-23-release:1.2
	kseitz_interps-20020528-branch:1.2.0.8
	kseitz_interps-20020528-branchpoint:1.2
	cagney_regbuf-20020515-branch:1.2.0.6
	cagney_regbuf-20020515-branchpoint:1.2
	jimb-macro-020506-branch:1.2.0.4
	jimb-macro-020506-branchpoint:1.2
	gdb_5_2-2002-04-29-release:1.2
	gdb_5_2-branch:1.2.0.2
	gdb_5_2-2002-03-03-branchpoint:1.2
	cygnus_cvs_20020108_pre:1.2
	cgen-1-1-branch:1.1.0.2;
locks; strict;
comment	@# @;


1.6
date	2011.08.22.15.25.09;	author nickc;	state dead;
branches;
next	1.5;

1.5
date	2005.07.01.11.16.30;	author nickc;	state Exp;
branches
	1.5.6.1;
next	1.4;

1.4
date	2005.02.23.16.04.38;	author nickc;	state Exp;
branches;
next	1.3;

1.3
date	2003.12.04.08.33.25;	author amodra;	state Exp;
branches;
next	1.2;

1.2
date	2001.10.09.08.24.22;	author nickc;	state Exp;
branches
	1.2.18.1
	1.2.20.1;
next	1.1;

1.1
date	2001.07.05.12.45.47;	author bje;	state Exp;
branches;
next	;

1.2.18.1
date	2003.12.15.23.59.57;	author carlton;	state Exp;
branches;
next	;

1.2.20.1
date	2003.12.14.20.26.56;	author drow;	state Exp;
branches;
next	;

1.5.6.1
date	2009.03.09.20.36.06;	author amylaar;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Move cpu files from cgen/cpu to top level cpu directory.
@
text
@/* OpenRISC opcode support.  -*- C -*-
   Copyright (C) 2000, 2001, 2003, 2005 Free Software Foundation
   Based upon work by Red Hat, Inc.
   This file is part of CGEN.  */

/* This file is an addendum to or32.cpu.  Heavy use of C code isn't
   appropriate in .cpu files, so it resides here.  This especially applies
   to assembly/disassembly where parsing/printing can be quite involved.
   Such things aren't really part of the specification of the cpu, per se,
   so .cpu files provide the general framework and .opc files handle the
   nitty-gritty details as necessary.

   Each section is delimited with start and end markers.

   <arch>-opc.h additions use: "-- opc.h"
   <arch>-opc.c additions use: "-- opc.c"
   <arch>-asm.c additions use: "-- asm.c"
   <arch>-dis.c additions use: "-- dis.c"
   <arch>-ibd.h additions use: "-- ibd.h"  */

/* -- opc.h */
#undef  CGEN_DIS_HASH_SIZE
#define CGEN_DIS_HASH_SIZE 64
#undef  CGEN_DIS_HASH
#define CGEN_DIS_HASH(buffer, value) (((unsigned char *) (buffer))[0] >> 2)

extern long openrisc_sign_extend_16bit (long);
/* -- */

/* -- opc.c */
/* -- */

/* -- asm.c */

static const char * MISSING_CLOSING_PARENTHESIS = N_("missing `)'");

#define CGEN_VERBOSE_ASSEMBLER_ERRORS

long
openrisc_sign_extend_16bit (long value)
{
  return ((value & 0xffff) ^ 0x8000) - 0x8000;
}

/* Handle hi().  */

static const char *
parse_hi16 (CGEN_CPU_DESC cd, const char ** strp, int opindex, long * valuep)
{
  const char *errmsg;
  enum cgen_parse_operand_result result_type;
  unsigned long ret;

  if (**strp == '#')
    ++*strp;

  if (strncasecmp (*strp, "hi(", 3) == 0)
    {
      bfd_vma value;

      *strp += 3;
      errmsg = cgen_parse_address (cd, strp, opindex, BFD_RELOC_HI16,
				   & result_type, & value);
      if (**strp != ')')
        return MISSING_CLOSING_PARENTHESIS;

      ++*strp;
      if (errmsg == NULL
          && result_type == CGEN_PARSE_OPERAND_RESULT_NUMBER)
        value >>= 16;
      ret = value;
    }
  else
    {
      if (**strp == '-')
	{
	  long value;

	  errmsg = cgen_parse_signed_integer (cd, strp, opindex, &value);
	  ret = value;
	}
      else
	{
	  unsigned long value;

	  errmsg = cgen_parse_unsigned_integer (cd, strp, opindex, &value);
	  ret = value;
	}
    }

  *valuep = ((ret & 0xffff) ^ 0x8000) - 0x8000;
  return errmsg;
}

/* Handle lo().  */

static const char *
parse_lo16 (CGEN_CPU_DESC cd, const char ** strp, int opindex, long * valuep)
{
  const char *errmsg;
  enum cgen_parse_operand_result result_type;
  unsigned long ret;

  if (**strp == '#')
    ++*strp;

  if (strncasecmp (*strp, "lo(", 3) == 0)
    {
      bfd_vma value;

      *strp += 3;
      errmsg = cgen_parse_address (cd, strp, opindex, BFD_RELOC_LO16,
				   & result_type, & value);
      if (**strp != ')')
        return MISSING_CLOSING_PARENTHESIS;

      ++*strp;
      ret = value;
    }
  else
    {
      if (**strp == '-')
	{
	  long value;

	  errmsg = cgen_parse_signed_integer (cd, strp, opindex, &value);
	  ret = value;
	}
      else
	{
	  unsigned long value;

	  errmsg = cgen_parse_unsigned_integer (cd, strp, opindex, &value);
	  ret = value;
	}
    }

  *valuep = ((ret & 0xffff) ^ 0x8000) - 0x8000;
  return errmsg;
}

/* -- */

/* -- ibd.h */
extern long openrisc_sign_extend_16bit (long);

/* -- */
@


1.5
log
@Update function declarations to ISO C90 formatting
@
text
@@


1.5.6.1
log
@Check in ARCompact simulator.  A valid configuration is arc-elf.
This is not quite finished and has most likely a few files that are
obsolete & not used, but it's good enough to run gcc regression tests.
@
text
@d25 1
a25 2
#define CGEN_DIS_HASH(buffer, value, big_p) \
  (((unsigned char *) (buffer))[0] >> 2)
@


1.4
log
@Fix compile time warnings generated by gcc 4.0
@
text
@d19 1
a19 2
   <arch>-ibd.h additions use: "-- ibd.h"
*/
d27 1
a27 1
extern long openrisc_sign_extend_16bit PARAMS ((long));
d35 2
a38 5
static const char * parse_hi16
  PARAMS ((CGEN_CPU_DESC, const char **, int, long *));
static const char * parse_lo16
  PARAMS ((CGEN_CPU_DESC, const char **, int, long *));

d40 1
a40 2
openrisc_sign_extend_16bit (value)
     long value;
d48 1
a48 5
parse_hi16 (cd, strp, opindex, valuep)
     CGEN_CPU_DESC cd;
     const char **strp;
     int opindex;
     long *valuep;
d63 1
a63 1
                                     &result_type, &value);
d65 1
a65 1
        return _("missing `)'");
d98 1
a98 5
parse_lo16 (cd, strp, opindex, valuep)
     CGEN_CPU_DESC cd;
     const char **strp;
     int opindex;
     long *valuep;
d113 1
a113 1
				   &result_type, &value);
d115 1
a115 1
        return _("missing `)'");
d145 1
a145 1
extern long openrisc_sign_extend_16bit PARAMS ((long));
@


1.3
log
@	* cpu/openrisc.opc (openrisc_sign_extend_16bit): Don't rely on
	"short" being 16 bit.
	(parse_hi16): Likewise.  Fix type-punned pointer warnings too, and
	internationalize error message.
	(parse_lo16): Likewise.  Remove useless code.
@
text
@d2 1
a2 1
   Copyright (C) 2000, 2001, 2003 Free Software Foundation
d39 1
a39 1
  PARAMS ((CGEN_CPU_DESC, const char **, int, unsigned long *));
d41 1
a41 1
  PARAMS ((CGEN_CPU_DESC, const char **, int, unsigned long *));
d57 1
a57 1
     unsigned long *valuep;
d71 1
a71 7
#if 0
      errmsg = cgen_parse_signed_integer (cd, strp, opindex, valuep);
      if (errmsg != NULL)
        fprintf (stderr, "parse_hi: %s\n", errmsg);
      if (errmsg != NULL)
#endif
        errmsg = cgen_parse_address (cd, strp, opindex, BFD_RELOC_HI16,
d87 1
d94 1
d111 1
a111 1
     unsigned long *valuep;
d125 2
a126 9
#if 0 
      errmsg = cgen_parse_signed_integer (cd, strp, opindex, valuep);
      if (errmsg != NULL)
        fprintf (stderr, "parse_lo: %s\n", errmsg);

      if (errmsg != NULL)
#endif
        errmsg = cgen_parse_address (cd, strp, opindex, BFD_RELOC_LO16,
                                     &result_type, &value);
d138 1
d145 1
@


1.2
log
@Fix compile time warning messages in generated C files
@
text
@d2 1
a2 1
   Copyright (C) 2000, 2001 Free Software Foundation
d47 1
a47 1
  return (long) (short) value;
d61 1
a61 1
  bfd_vma value;
d68 2
a70 1

d80 2
a81 1
        return "missing `)'";
d86 1
a86 3
      *valuep = (long) (short) value;

      return errmsg;
d91 5
a95 1
        errmsg = cgen_parse_signed_integer (cd, strp, opindex, (long *) &value);
d97 5
a101 1
        errmsg = cgen_parse_unsigned_integer (cd, strp, opindex, (unsigned long *) &value);
d103 2
a104 1
  *valuep = (long) (short) (value & 0xffff);
d119 1
a119 1
  bfd_vma value;
d126 2
a128 1

d139 2
a140 1
        return "missing `)'";
d142 16
a157 6
      if (errmsg == NULL
          && result_type == CGEN_PARSE_OPERAND_RESULT_NUMBER)
        value &= 0xffff;
      *valuep = (long) (short) value;

      return errmsg;
d160 1
a160 5
  if (**strp == '-')
    errmsg = cgen_parse_signed_integer (cd, strp, opindex, (long *) &value);
  else
    errmsg = cgen_parse_unsigned_integer (cd, strp, opindex, (unsigned long *) &value);
  *valuep = (long) (short) (value & 0xffff);
@


1.2.18.1
log
@2003-12-15  David Carlton  <carlton@@kealia.com>

	* Merge with mainline; tag is carlton_dictionary-20031215-merge.
	* cp-support.c (class_name_from_physname): Add DMGL_PARAMS to call
	to cplus_demangle.
	(method_name_from_physname): Ditto.
@
text
@d2 1
a2 1
   Copyright (C) 2000, 2001, 2003 Free Software Foundation
d47 1
a47 1
  return ((value & 0xffff) ^ 0x8000) - 0x8000;
d61 1
a61 1
  unsigned long ret;
d68 1
a68 1
      bfd_vma value;
a69 1
      *strp += 3;
d79 1
a79 2
        return _("missing `)'");

d84 3
a86 1
      ret = value;
d91 1
a91 5
	{
	  long value;
	  errmsg = cgen_parse_signed_integer (cd, strp, opindex, &value);
	  ret = value;
	}
d93 1
a93 5
	{
	  unsigned long value;
	  errmsg = cgen_parse_unsigned_integer (cd, strp, opindex, &value);
	  ret = value;
	}
d95 1
a95 2

  *valuep = ((ret & 0xffff) ^ 0x8000) - 0x8000;
d110 1
a110 1
  unsigned long ret;
d117 1
a117 1
      bfd_vma value;
a118 1
      *strp += 3;
d129 6
a134 1
        return _("missing `)'");
d136 1
a136 2
      ++*strp;
      ret = value;
d138 3
d142 2
a143 16
    {
      if (**strp == '-')
	{
	  long value;
	  errmsg = cgen_parse_signed_integer (cd, strp, opindex, &value);
	  ret = value;
	}
      else
	{
	  unsigned long value;
	  errmsg = cgen_parse_unsigned_integer (cd, strp, opindex, &value);
	  ret = value;
	}
    }

  *valuep = ((ret & 0xffff) ^ 0x8000) - 0x8000;
@


1.2.20.1
log
@Merge drow-cplus-branch to:
  cvs rtag -D 2003-12-14 00:00:00 UTC drow-cplus-merge-20031214 gdb+dejagnu
@
text
@d2 1
a2 1
   Copyright (C) 2000, 2001, 2003 Free Software Foundation
d47 1
a47 1
  return ((value & 0xffff) ^ 0x8000) - 0x8000;
d61 1
a61 1
  unsigned long ret;
d68 1
a68 1
      bfd_vma value;
a69 1
      *strp += 3;
d79 1
a79 2
        return _("missing `)'");

d84 3
a86 1
      ret = value;
d91 1
a91 5
	{
	  long value;
	  errmsg = cgen_parse_signed_integer (cd, strp, opindex, &value);
	  ret = value;
	}
d93 1
a93 5
	{
	  unsigned long value;
	  errmsg = cgen_parse_unsigned_integer (cd, strp, opindex, &value);
	  ret = value;
	}
d95 1
a95 2

  *valuep = ((ret & 0xffff) ^ 0x8000) - 0x8000;
d110 1
a110 1
  unsigned long ret;
d117 1
a117 1
      bfd_vma value;
a118 1
      *strp += 3;
d129 6
a134 1
        return _("missing `)'");
d136 1
a136 2
      ++*strp;
      ret = value;
d138 3
d142 2
a143 16
    {
      if (**strp == '-')
	{
	  long value;
	  errmsg = cgen_parse_signed_integer (cd, strp, opindex, &value);
	  ret = value;
	}
      else
	{
	  unsigned long value;
	  errmsg = cgen_parse_unsigned_integer (cd, strp, opindex, &value);
	  ret = value;
	}
    }

  *valuep = ((ret & 0xffff) ^ 0x8000) - 0x8000;
@


1.1
log
@2001-07-05  Ben Elliston  <bje@@redhat.com>

	* README: Update.

	* read.scm (include): Include files from srcdir/cpu.
	(-cgen): Likewise for loading .cpu files.
	* *.cpu: Move all cpu descriptions into cpu subdirectory.
	* *.opc: Likewise.
	* simplify.inc: Likewise.
@
text
@d23 1
a23 1
#undef CGEN_DIS_HASH_SIZE
d25 1
a25 1
#undef CGEN_DIS_HASH
d28 1
d38 5
a49 1

d93 1
a93 1
        errmsg = cgen_parse_unsigned_integer (cd, strp, opindex, &value);
d99 1
a99 2

/* Handle lo() */
d142 1
a142 1
    errmsg = cgen_parse_unsigned_integer (cd, strp, opindex, &value);
d150 1
a150 1
extern openrisc_sign_extend_16bit (long);
a152 2


@

