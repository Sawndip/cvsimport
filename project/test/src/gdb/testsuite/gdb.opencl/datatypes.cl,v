head	1.5;
access;
symbols
	gdb_7_6_1-2013-08-30-release:1.5
	gdb_7_6-2013-04-26-release:1.5
	gdb_7_6-branch:1.5.0.2
	gdb_7_6-2013-03-12-branchpoint:1.5
	gdb_7_5_1-2012-11-29-release:1.4
	gdb_7_5-2012-08-17-release:1.4
	gdb_7_5-branch:1.4.0.2
	gdb_7_5-2012-07-18-branchpoint:1.4
	gdb_7_4_1-2012-04-26-release:1.3.4.1
	gdb_7_4-2012-01-24-release:1.3.4.1
	gdb_7_4-branch:1.3.0.4
	gdb_7_4-2011-12-13-branchpoint:1.3
	gdb_7_3_1-2011-09-04-release:1.3
	gdb_7_3-2011-07-26-release:1.3
	gdb_7_3-branch:1.3.0.2
	gdb_7_3-2011-04-01-branchpoint:1.3;
locks; strict;
comment	@;;; @;


1.5
date	2013.01.01.06.41.25;	author brobecke;	state Exp;
branches;
next	1.4;

1.4
date	2012.01.04.08.17.55;	author brobecke;	state Exp;
branches;
next	1.3;

1.3
date	2011.01.25.16.10.28;	author kwerner;	state Exp;
branches
	1.3.4.1;
next	1.2;

1.2
date	2011.01.01.15.33.48;	author brobecke;	state Exp;
branches;
next	1.1;

1.1
date	2010.11.05.14.31.30;	author kwerner;	state Exp;
branches;
next	;

1.3.4.1
date	2012.01.06.04.44.10;	author brobecke;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Update years in copyright notice for the GDB files.

Two modifications:
  1. The addition of 2013 to the copyright year range for every file;
  2. The use of a single year range, instead of potentially multiple
     year ranges, as approved by the FSF.
@
text
@/* This testcase is part of GDB, the GNU debugger.

   Copyright 2010-2013 Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.

   Contributed by Ken Werner <ken.werner@@de.ibm.com>  */

__constant int opencl_version = __OPENCL_VERSION__;

#ifdef HAVE_cl_khr_fp64
#pragma OPENCL EXTENSION cl_khr_fp64 : enable
__constant int have_cl_khr_fp64 = 1;
#else
__constant int have_cl_khr_fp64 = 0;
#endif

#ifdef HAVE_cl_khr_fp16
#pragma OPENCL EXTENSION cl_khr_fp16 : enable
__constant int have_cl_khr_fp16 = 1;
#else
__constant int have_cl_khr_fp16 = 0;
#endif

__kernel void testkernel (__global int *data)
{
  bool b = 0;

  char   c   = 1;
  char2  c2  = (char2) (1, 2);
#ifdef CL_VERSION_1_1
  char3  c3  = (char3) (1, 2, 3);
#endif
  char4  c4  = (char4) (1, 2, 3, 4);
  char8  c8  = (char8) (1, 2, 3, 4, 5, 6, 7, 8);
  char16 c16 = (char16)(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16);

  uchar   uc   = 1;
  uchar2  uc2  = (uchar2) (1, 2);
#ifdef CL_VERSION_1_1
  uchar3  uc3  = (uchar3) (1, 2, 3);
#endif
  uchar4  uc4  = (uchar4) (1, 2, 3, 4);
  uchar8  uc8  = (uchar8) (1, 2, 3, 4, 5, 6, 7, 8);
  uchar16 uc16 = (uchar16)(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16);

  short   s   = -1;
  short2  s2  = (short2) (-1, -2);
#ifdef CL_VERSION_1_1
  short3  s3  = (short3) (-1, -2, -3);
#endif
  short4  s4  = (short4) (-1, -2, -3, -4);
  short8  s8  = (short8) (-1, -2, -3, -4, -5, -6, -7, -8);
  short16 s16 = (short16)(-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16);

  ushort   us   = 1;
  ushort2  us2  = (ushort2) (1, 2);
#ifdef CL_VERSION_1_1
  ushort3  us3  = (ushort3) (1, 2, 3);
#endif
  ushort4  us4  = (ushort4) (1, 2, 3, 4);
  ushort8  us8  = (ushort8) (1, 2, 3, 4, 5, 6, 7, 8);
  ushort16 us16 = (ushort16)(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16);

  int   i   = -1;
  int2  i2  = (int2) (-1, -2);
#ifdef CL_VERSION_1_1
  int3  i3  = (int3) (-1, -2, -3);
#endif
  int4  i4  = (int4) (-1, -2, -3, -4);
  int8  i8  = (int8) (-1, -2, -3, -4, -5, -6, -7, -8);
  int16 i16 = (int16)(-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16);

  uint   ui   = 1;
  uint2  ui2  = (uint2) (1, 2);
#ifdef CL_VERSION_1_1
  uint3  ui3  = (uint3) (1, 2, 3);
#endif
  uint4  ui4  = (uint4) (1, 2, 3, 4);
  uint8  ui8  = (uint8) (1, 2, 3, 4, 5, 6, 7, 8);
  uint16 ui16 = (uint16)(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16);

  long   l   = -1;
  long2  l2  = (long2) (-1, -2);
#ifdef CL_VERSION_1_1
  long3  l3  = (long3) (-1, -2, -3);
#endif
  long4  l4  = (long4) (-1, -2, -3, -4);
  long8  l8  = (long8) (-1, -2, -3, -4, -5, -6, -7, -8);
  long16 l16 = (long16)(-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16);

  ulong   ul   = 1;
  ulong2  ul2  = (ulong2) (1, 2);
#ifdef CL_VERSION_1_1
  ulong3  ul3  = (ulong3) (1, 2, 3);
#endif
  ulong4  ul4  = (ulong4) (1, 2, 3, 4);
  ulong8  ul8  = (ulong8) (1, 2, 3, 4, 5, 6, 7, 8);
  ulong16 ul16 = (ulong16)(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16);

  half *ph;
#ifdef cl_khr_fp16
  half   h   = 1.0;
  half2  h2  = (half2) (1.0, 2.0);
#ifdef CL_VERSION_1_1
  half3  h3  = (half3) (1.0, 2.0, 3.0);
#endif
  half4  h4  = (half4) (1.0, 2.0, 3.0, 4.0);
  half8  h8  = (half8) (1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0);
  half16 h16 = (half16)(1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0);
#endif

  float   f   = 1.0;
  float2  f2  = (float2) (1.0, 2.0);
#ifdef CL_VERSION_1_1
  float3  f3  = (float3) (1.0, 2.0, 3.0);
#endif
  float4  f4  = (float4) (1.0, 2.0, 3.0, 4.0);
  float8  f8  = (float8) (1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0);
  float16 f16 = (float16)(1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0);

#ifdef cl_khr_fp64
  double   d   = 1.0;
  double2  d2  = (double2) (1.0, 2.0);
#ifdef CL_VERSION_1_1
  double3  d3  = (double3) (1.0, 2.0, 3.0);
#endif
  double4  d4  = (double4) (1.0, 2.0, 3.0, 4.0);
  double8  d8  = (double8) (1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0);
  double16 d16 = (double16)(1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0);
#endif

  /* marker! */

  data[get_global_id(0)] = 1;
}
@


1.4
log
@Copyright year update in most files of the GDB Project.

gdb/ChangeLog:

        Copyright year update in most files of the GDB Project.
@
text
@d3 1
a3 1
   Copyright 2010-2012 Free Software Foundation, Inc.
@


1.3
log
@gdb/testsuite/ChangeLog

2011-01-25  Ken Werner  <ken.werner@@de.ibm.com>

        * gdb.opencl/convs_casts.cl: Move program scope variables into the
        OpenCL kernel function. Add a comment as marker. Add address space
        qualifiers for the remaining program scope variables.
        * gdb.opencl/datatypes.cl: Likewise.
        * gdb.opencl/operators.cl: Likewise.
        * gdb.opencl/vec_comps.cl: Likewise.
        * gdb.opencl/convs_casts.exp: Replace gdb_test_multiple by gdb_test.
        Add breakpoint at the marker comment.
        * gdb.opencl/datatypes.exp: Likewise.
        * gdb.opencl/operators.exp: Likewise.
        * gdb.opencl/vec_comps.exp: Likewise.
@
text
@d3 1
a3 1
   Copyright 2010, 2011 Free Software Foundation, Inc.
@


1.3.4.1
log
@Copyright year update in most files of the GDB Project.

gdb/ChangeLog:

        Copyright year update in most files of the GDB Project.
@
text
@d3 1
a3 1
   Copyright 2010-2012 Free Software Foundation, Inc.
@


1.2
log
@run copyright.sh for 2011.
@
text
@d20 1
a20 1
int opencl_version = __OPENCL_VERSION__;
d24 1
a24 1
int have_cl_khr_fp64 = 1;
d26 1
a26 1
int have_cl_khr_fp64 = 0;
d31 1
a31 1
int have_cl_khr_fp16 = 1;
d33 1
a33 1
int have_cl_khr_fp16 = 0;
d36 3
a38 1
bool b = 0;
d40 2
a41 2
char   c   = 1;
char2  c2  = (char2) (1, 2);
d43 1
a43 1
char3  c3  = (char3) (1, 2, 3);
d45 3
a47 3
char4  c4  = (char4) (1, 2, 3, 4);
char8  c8  = (char8) (1, 2, 3, 4, 5, 6, 7, 8);
char16 c16 = (char16)(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16);
d49 2
a50 2
uchar   uc   = 1;
uchar2  uc2  = (uchar2) (1, 2);
d52 1
a52 1
uchar3  uc3  = (uchar3) (1, 2, 3);
d54 3
a56 3
uchar4  uc4  = (uchar4) (1, 2, 3, 4);
uchar8  uc8  = (uchar8) (1, 2, 3, 4, 5, 6, 7, 8);
uchar16 uc16 = (uchar16)(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16);
d58 2
a59 2
short   s   = -1;
short2  s2  = (short2) (-1, -2);
d61 1
a61 1
short3  s3  = (short3) (-1, -2, -3);
d63 3
a65 3
short4  s4  = (short4) (-1, -2, -3, -4);
short8  s8  = (short8) (-1, -2, -3, -4, -5, -6, -7, -8);
short16 s16 = (short16)(-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16);
d67 2
a68 2
ushort   us   = 1;
ushort2  us2  = (ushort2) (1, 2);
d70 1
a70 1
ushort3  us3  = (ushort3) (1, 2, 3);
d72 3
a74 3
ushort4  us4  = (ushort4) (1, 2, 3, 4);
ushort8  us8  = (ushort8) (1, 2, 3, 4, 5, 6, 7, 8);
ushort16 us16 = (ushort16)(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16);
d76 2
a77 2
int   i   = -1;
int2  i2  = (int2) (-1, -2);
d79 1
a79 1
int3  i3  = (int3) (-1, -2, -3);
d81 3
a83 3
int4  i4  = (int4) (-1, -2, -3, -4);
int8  i8  = (int8) (-1, -2, -3, -4, -5, -6, -7, -8);
int16 i16 = (int16)(-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16);
d85 2
a86 2
uint   ui   = 1;
uint2  ui2  = (uint2) (1, 2);
d88 1
a88 1
uint3  ui3  = (uint3) (1, 2, 3);
d90 3
a92 3
uint4  ui4  = (uint4) (1, 2, 3, 4);
uint8  ui8  = (uint8) (1, 2, 3, 4, 5, 6, 7, 8);
uint16 ui16 = (uint16)(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16);
d94 2
a95 2
long   l   = -1;
long2  l2  = (long2) (-1, -2);
d97 1
a97 1
long3  l3  = (long3) (-1, -2, -3);
d99 3
a101 3
long4  l4  = (long4) (-1, -2, -3, -4);
long8  l8  = (long8) (-1, -2, -3, -4, -5, -6, -7, -8);
long16 l16 = (long16)(-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16);
d103 2
a104 2
ulong   ul   = 1;
ulong2  ul2  = (ulong2) (1, 2);
d106 1
a106 1
ulong3  ul3  = (ulong3) (1, 2, 3);
d108 3
a110 3
ulong4  ul4  = (ulong4) (1, 2, 3, 4);
ulong8  ul8  = (ulong8) (1, 2, 3, 4, 5, 6, 7, 8);
ulong16 ul16 = (ulong16)(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16);
d112 1
a112 1
half *ph;
d114 2
a115 2
half   h   = 1.0;
half2  h2  = (half2) (1.0, 2.0);
d117 1
a117 1
half3  h3  = (half3) (1.0, 2.0, 3.0);
d119 3
a121 3
half4  h4  = (half4) (1.0, 2.0, 3.0, 4.0);
half8  h8  = (half8) (1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0);
half16 h16 = (half16)(1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0);
d124 2
a125 2
float   f   = 1.0;
float2  f2  = (float2) (1.0, 2.0);
d127 1
a127 1
float3  f3  = (float3) (1.0, 2.0, 3.0);
d129 3
a131 3
float4  f4  = (float4) (1.0, 2.0, 3.0, 4.0);
float8  f8  = (float8) (1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0);
float16 f16 = (float16)(1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0);
d134 2
a135 2
double   d   = 1.0;
double2  d2  = (double2) (1.0, 2.0);
d137 1
a137 1
double3  d3  = (double3) (1.0, 2.0, 3.0);
d139 3
a141 3
double4  d4  = (double4) (1.0, 2.0, 3.0, 4.0);
double8  d8  = (double8) (1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0);
double16 d16 = (double16)(1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0);
d144 2
a145 2
__kernel void testkernel (__global int *data)
{
@


1.1
log
@gdb:
	* NEWS: Mention OpenCL C language support.
	* Makefile.in (SFILES): Add opencl-lang.c.
	(COMMON_OBS): Add opencl-lang.o.
	* opencl-lang.c: New File
	* defs.h (enum language): Add language_opencl.
	* dwarf2read.c (read_file_scope): Handle DW_AT_producer for the
	IBM XL C OpenCL compiler.
	* c-lang.h: Include "parser-defs.h".
	(evaluate_subexp_c): Declare.
	* c-lang.c (evaluate_subexp_c): Remove the static qualifier.
	(c_op_print_tab): Add declaration.
	* eval.c (binop_promote): Handle language_opencl.
	* c-exp.y: Lookup the primitive types instead of referring to the
	builtins.

gdb/testsuite:
	* Makefile.in (ALL_SUBDIRS): Add gdb.opencl.
	* configure.ac (AC_OUTPUT): Add gdb.opencl/Makefile.
	* configure: Regenerate.
	* gdb.opencl/Makefile.in: New File.
	* gdb.opencl/datatypes.exp: Likewise.
	* gdb.opencl/datatypes.cl: Likewise.
	* gdb.opencl/operators.exp: Likewise.
	* gdb.opencl/operators.cl: Likewise.
	* gdb.opencl/vec_comps.exp: Likewise.
	* gdb.opencl/vec_comps.cl: Likewise.
	* gdb.opencl/convs_casts.exp: Likewise.
	* gdb.opencl/convs_casts.cl: Likewise.
	* lib/opencl.exp: Likewise.
	* lib/opencl_hostapp.c: Likewise.
	* lib/opencl_kernel.cl: Likewise.
	* lib/cl_util.c: Likewise.
	* lib/cl_util.c: Likewise.
	* gdb.base/default.exp (set language): Add "opencl" to the list of
	languages.

gdb/doc:
	* gdb.texinfo: (Summary) Add mention about OpenCL C language support.
	(OpenCL C): New node.
@
text
@d3 1
a3 1
   Copyright 2010 Free Software Foundation, Inc.
@

