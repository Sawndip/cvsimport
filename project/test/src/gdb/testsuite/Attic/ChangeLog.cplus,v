head	1.1;
access;
symbols
	drow-cplus-branch:1.1.0.2;
locks; strict;
comment	@# @;


1.1
date	2002.10.22.19.59.37;	author carlton;	state dead;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2002.10.22.19.59.37;	author carlton;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2002.10.30.23.17.30;	author drow;	state Exp;
branches;
next	1.1.2.3;

1.1.2.3
date	2002.11.01.16.24.08;	author drow;	state Exp;
branches;
next	1.1.2.4;

1.1.2.4
date	2003.12.30.21.01.06;	author drow;	state Exp;
branches;
next	;


desc
@@


1.1
log
@file ChangeLog.cplus was initially added on branch drow-cplus-branch.
@
text
@@


1.1.2.1
log
@2002-10-22  David Carlton  <carlton@@math.stanford.edu>

	* Makefile.in (buildsym.o): Depend on $(gdb_assert_h) and
	$(cp_support_h).
	(cp-support.o): Fix dependencies and add $(gdb_obstack_h) and
	$(gdb_assert_h).
	(symtab.o): Depend on $(cp_support_h).
	* symtab.h: Add opaque declaration for struct using_direct_node.
	(struct block): Add member 'language_specific'.
	(BLOCK_USING): New macro.
	* symtab.c: #include "cp-support.h"
	(lookup_symbol_aux): Call lookup_symbol_aux_nonlocal and
	lookup_symbol_aux_using when appropriate.
	(lookup_symbol_aux_nonlocal): New function.
	(lookup_symbol_aux_using): New function.
	(lookup_symbol_aux_using_loop): New function.
	* symfile.h: Add opaque declaration for struct obstack.
	Declare obsavestring to take a const char *.
	* symfile.c (obsavestring): Make first argument a const char *.
	* jv-lang.c (get_java_class_symtab): Initialize BLOCK_USING.
	* dwarf2read.c: New variable current_namespace.
	(scan_partial_symbols): Handle DW_TAG_namespace.
	(psymtab_to_symtab_1): Initialize current_namespace.
	(process_die): Handle DW_TAG_namespace,
	DW_TAG_imported_declaration, DW_TAG_imported_module.
	(read_namespace): New function.
	(dwarf2_name): New function.
	(dwarf2_extension): New function.
	(dwarf_tag_name): Add DWARF 3 names.
	(dwarf_attr_name): Ditto.
	(dwarf_type_encoding_name): Ditto.
	* cp-support.h: Opaque declaration for struct obstack.
	(struct using_direct): New struct.
	(struct using_direct_node): New struct.
	Add declarations for cp_add_using_obstack, cp_add_using_xmalloc,
	cp_copy_usings, cp_free_usings,	cp_find_first_component.
	* cp-support.c: #include "gdb_obstack.h", "gdb_assert.h".
	Comment on demangled name pitfalls.
	(cp_add_using_obstack): New function.
	(cp_add_using_xmalloc): New function.
	(cp_copy_usings): New function.
	(cp_free_usings): New function.
	(cp_find_first_component): New function.
	* buildsym.h: Declare processing_has_namespace_info.
	Declare add_using_directive.
	* buildsym.c: #include "gdb_assert.h", "cp-support.h".
	Change comment after #include "symfile.h".
	New variable using_list.
	(add_symbol_to_list): Scan for anonymous namespaces when
	appropriate.
	(scan_for_anonymous_namespaces): New function.
	(add_using_directive): New function.
	(start_symtab): Initialize processing_has_namespace_info,
	using_list.
	(end_symtab): Copy using_list into block.
	(copy_usings_to_obstack): New function.
	(finish_block): Set BLOCK_USING in general case and in C++
	function case.

2002-10-22  David Carlton  <carlton@@math.stanford.edu>

	* gdb.c++/namespace.exp: Add tests involving namespaces
	  starting from C.
	* gdb.c++/namespace.cc: Add namespaces with names starting
	  from C and their contents.
@
text
@a0 6
2002-10-22  David Carlton  <carlton@@math.stanford.edu>

	* gdb.c++/namespace.exp: Add tests involving namespaces
	  starting from C.
	* gdb.c++/namespace.cc: Add namespaces with names starting
	  from C and their contents.
@


1.1.2.2
log
@	* gdb.c++/method.exp (print this): Allow "A const".
	* gdb.c++/templates.exp (ptype fvpchar)
	(print Foo<volatile char *>::Foo): Allow consts after type names.
@
text
@a0 6
2002-10-30  Daniel Jacobowitz  <drow@@mvista.com>

	* gdb.c++/method.exp (print this): Allow "A const".
	* gdb.c++/templates.exp (ptype fvpchar)
	(print Foo<volatile char *>::Foo): Allow consts after type names.

@


1.1.2.3
log
@	* gdb.c++/templates.exp: Correct some undoubled backslashes.
	Make a synthetic operator= optional.
	(print Garply<Garply<char> >::garply): Allow const THIS pointer.
@
text
@a0 6
2002-11-01  Daniel Jacobowitz  <drow@@mvista.com>

	* gdb.c++/templates.exp: Correct some undoubled backslashes.
	Make a synthetic operator= optional.
	(print Garply<Garply<char> >::garply): Allow const THIS pointer.

@


1.1.2.4
log
@	* gdb.cp/templates.exp: Formatting changes to match demangler style
	for template names.  New tests for member variable Foo::x with
	different spellings of the template argument.
@
text
@a0 6
2003-12-30  Daniel Jacobowitz  <drow@@mvista.com>

	* gdb.cp/templates.exp: Formatting changes to match demangler style
	for template names.  New tests for member variable Foo::x with
	different spellings of the template argument.

@


