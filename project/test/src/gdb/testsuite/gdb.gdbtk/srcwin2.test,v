head	1.5;
access;
symbols
	insight_7_6-2013-04-10-branchpoint:1.5
	gdb_7_6-branch:1.5.0.12
	gdb_7_5-branch:1.5.0.10
	gdb_7_4-branch:1.5.0.8
	gdb_7_3-branch:1.5.0.6
	gdb_7_1-branch:1.5.0.4
	gdb_7_0-branch:1.5.0.2
	arc-sim-20090309:1.4
	arc-insight_6_8-branch:1.4.0.16
	arc-insight_6_8-branchpoint:1.4
	insight_6_8-branch:1.4.0.14
	insight_6_8-branchpoint:1.4
	insight_6_6-20070208-release:1.4
	gdb_6_6-branch:1.4.0.12
	gdb_6_6-2006-11-15-branchpoint:1.4
	insight_6_5-20061003-release:1.4
	gdb_6_5-branch:1.4.0.10
	gdb_6_5-2006-05-14-branchpoint:1.4
	gdb_6_4-branch:1.4.0.8
	gdb_6_4-2005-11-01-branchpoint:1.4
	gdb-csl-arm-20051020-branch:1.4.0.6
	gdb-csl-arm-20051020-branchpoint:1.4
	gdb_6_1-2004-04-05-release:1.4
	gdb_6_1-branch:1.4.0.4
	gdb_6_1-2004-03-01-gmt-branchpoint:1.4
	gdb_6_0-2003-10-04-release:1.4
	gdb_6_0-branch:1.4.0.2
	gdb_6_0-2003-06-23-branchpoint:1.4
	gdb_5_3-2002-12-12-release:1.3
	gdb_5_3-branch:1.3.0.12
	gdb_5_3-2002-09-04-branchpoint:1.3
	gdb_5_2_1-2002-07-23-release:1.3
	gdb_5_2-2002-04-29-release:1.3
	gdb_5_2-branch:1.3.0.10
	gdb_5_2-2002-03-03-branchpoint:1.3
	gdb_5_1_1-2002-01-24-release:1.3
	cygnus_cvs_20020108_pre:1.3
	gdb_5_1_0_1-2002-01-03-branch:1.3.0.8
	gdb_5_1_0_1-2002-01-03-branchpoint:1.3
	gdb_5_1-2001-11-21-release:1.3
	gdb_s390-2001-09-26-branch:1.3.0.6
	gdb_s390-2001-09-26-branchpoint:1.3
	gdb_5_1-2001-07-29-branch:1.3.0.4
	gdb_5_1-2001-07-29-branchpoint:1.3
	dberlin-typesystem-branch:1.3.0.2
	dberlin-typesystem-branchpoint:1.3
	insight-precleanup-2001-01-01:1.1.1.1
	gdb_5_0-2000-05-19-release:1.1.1.1
	gdb_4_18_2-2000-05-18-release:1.1.1.1
	gdb_4_95_1-2000-05-11-snapshot:1.1.1.1
	gdb_4_95_0-2000-04-27-snapshot:1.1.1.1
	gdb_5_0-2000-04-10-branch:1.1.1.1.0.2
	gdb_5_0-2000-04-10-branchpoint:1.1.1.1
	repo-unification-2000-02-06:1.1.1.1
	insight-2000-02-04:1.1.1.1
	SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.5
date	2008.12.21.17.38.55;	author jkratoch;	state Exp;
branches;
next	1.4;

1.4
date	2003.02.27.22.18.44;	author hunt;	state Exp;
branches;
next	1.3;

1.3
date	2001.05.07.20.39.32;	author kseitz;	state Exp;
branches;
next	1.2;

1.2
date	2001.04.09.17.20.03;	author hunt;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.07.00.19.45;	author jsm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.07.00.19.45;	author jsm;	state Exp;
branches;
next	;


desc
@@


1.5
log
@	Fix for PR gdb/8648.
	* gdb.arch/ppc-fp.exp, gdb.arch/vsx-regs.exp, gdb.base/watchpoint-hw.c,
	gdb.gdbtk/browser.test, gdb.gdbtk/console.test, gdb.gdbtk/srcwin.test,
	gdb.gdbtk/srcwin2.test, gdb.gdbtk/srcwin3.test, gdb.gdbtk/windows.test,
	gdb.threads/tls2.c: Remove reference to bug-gdb@@prep.ai.mit.edu .
@
text
@#   Copyright (C) 1999, 2001 Red Hat, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

# This file was written by Martin Hunt (hunt@@cygnus.com)


# same as srcwin.test, except test debugging executables
# when source files are missing.

# Read in the standard defs file

if {![gdbtk_read_defs]} {
  break
}

global objdir srcdir

#####                 #####
#                         #
#  SECTION 1: Mode Tests  #
#                         #
#####                 #####

# Load the test executable
set program [file join $objdir list]
if {[catch {gdbtk_test_file $program} t]} {
  # This isn't a test case, since if this fails, we're hosed.
  gdbtk_test_error "loading \"$program\": $t"
}

set srcwin [ManagedWin::open SrcWin]
set stw [$srcwin test_get twin]
set twin [$stw test_get twin]
set statbar [$srcwin test_get _statbar]

# get things started
gdb_cmd "break main"
gdbtk_test_run

# Test: srcwin2-1.1
# Desc: Check for something in source window
gdbtk_test srcwin2-1.1 "source window has contents" {
  set r 0
  set file1(source) [$twin get 1.0 end]
  if {$file1(source) == ""} {set r -1}
  if {[$statbar.mode get] != "ASSEMBLY"} {set r -2}
  set r
} {0}

# Test: srcwin2-1.2
# Desc: source->assembly mode change
gdbtk_test srcwin2-1.2 "source->assembly mode change" {
  $srcwin mode "" ASSEMBLY
  set twin [$stw test_get twin]
  set file1(assembly) [$twin get 1.0 end]
  # source == assembly because for there is no source
  string compare $file1(source) $file1(assembly)
} {0}

# Test: srcwin2-1.3
# Desc: assembly->mixed mode change
gdbtk_test srcwin2-1.3 "assembly->mixed mode change" {
  set r 0
  $srcwin mode "" MIXED
  set twin [$stw test_get twin]
  set file1(mixed) [$twin get 1.0 end]
  # mixed != assembly because the lines with source should
  # be noted, even if source in unavailable. This behaviour is
  # different for different debug formats, so we accept either.
  if {$file1(mixed) == ""} {set r -1}
  if {[$statbar.mode get] != "MIXED"} {set r -2}
  set r	
} {0}

# Test: srcwin2-1.4
# Desc: mixed->src+asm mode change
gdbtk_test srcwin2-1.4 "mixed->src+asm mode change" {
  set r 0
  # mode change may fail if fallover to ASSEMBLY fails
  if {[catch {$srcwin mode "" SRC+ASM}]} { set r -5 }
  set twin [$stw test_get twin]
  if {[$twin get 1.0 end] != $file1(assembly)} {set r -1}
  if {[$statbar.mode get] != "ASSEMBLY"} {set r -2}
  set r
} {0}

# Test: srcwin2-1.5
# Desc: src+asm->source mode change
gdbtk_test srcwin2-1.5 "src+asm->source mode change" {
  set r 0
  $srcwin mode "" SOURCE
  set twin [$stw test_get twin]
  if {[$stw test_get bwin] != ""} {set r -2}
  if {[$twin get 1.0 end] != $file1(assembly)} {set r -1}
  if {[$statbar.mode get] != "ASSEMBLY"} {set r -3}
  set r
} {0}

# Test: srcwin2-1.6
# Desc: source->mixed mode change
gdbtk_test srcwin2-1.6 "source->mixed mode change" {
  set r 0
  $srcwin mode "" MIXED
  set twin [$stw test_get twin]
  if {[$twin get 1.0 end] != $file1(mixed)} {set r -1}
  if {[$statbar.mode get] != "MIXED"} {set r -2}
  set r
} {0}

# Test: srcwin2-1.7
# Desc: mixed->source mode change
gdbtk_test srcwin2-1.7 "mixed->source mode change" {
  set r 0
  $srcwin mode "" SOURCE
  set twin [$stw test_get twin]
  if {[$twin get 1.0 end] != $file1(source)} {set r -1}
  if {[$statbar.mode get] != "ASSEMBLY"} {set r -2}
  set r
} {0}

# Test: srcwin2-1.8
# Desc: source->src+asm mode change
gdbtk_test srcwin2-1.8 "source->src+asm mode change" {
  set r 0
  # mode change may fail if fallover to ASSEMBLY fails
  if {[catch {$srcwin mode "" SRC+ASM}]} { set r -5 }
  set twin [$stw test_get twin]
  set bwin [$stw test_get bwin]
  if {[$twin get 1.0 end] != $file1(assembly)} {set r -1}
  if {$bwin != ""} {set r -2}
  if {[$statbar.mode get] != "ASSEMBLY"} {set r -3}
  set r
} {0}

# Test: srcwin2-1.9
# Desc: src+asm->assembly mode change
gdbtk_test srcwin2-1.9 "src+asm->assembly mode change" {
  set r 0
  $srcwin mode "" ASSEMBLY
  set twin [$stw test_get twin]
  if {[$twin get 1.0 end] != $file1(assembly)} {set r -1}
  if {[$statbar.mode get] != "ASSEMBLY"} {set r -2}
  set r
} {0}

# Test: srcwin2-1.10
# Desc: assembly->src+asm mode change
gdbtk_test srcwin2-1.10 "assembly->src+asm mode change" {
  set r 0
  # mode change may fail if fallover to ASSEMBLY fails
  if {[catch {$srcwin mode "" SRC+ASM}]} { set r -5 }
  set twin [$stw test_get twin]
  set bwin [$stw test_get bwin]
  if {[$twin get 1.0 end] != $file1(assembly)} {set r -1}
  if {$bwin != ""} {set r -2}
  if {[$statbar.mode get] != "ASSEMBLY"} {set r -3}
  set r
} {0}

# Test: srcwin2-1.11
# Desc: src+asm->mixed mode change
gdbtk_test srcwin2-1.11 "src+asm->mixed mode change" {
  set r 0
  $srcwin mode "" MIXED
  set twin [$stw test_get twin]
  if {[$twin get 1.0 end] != $file1(mixed)} {set r -1}
  if {[$statbar.mode get] != "MIXED"} {set r -2}
  set r
} {0}

# Test: srcwin2-1.12
# Desc: mixed->assembly mode change
gdbtk_test srcwin2-1.12 "mixed->assembly mode change" {
  set r 0
  $srcwin mode "" ASSEMBLY
  set twin [$stw test_get twin]
  if {[$twin get 1.0 end] != $file1(assembly)} {set r -1}
  if {[$statbar.mode get] != "ASSEMBLY"} {set r -2}
  set r
} {0}

# Test: srcwin2-1.13
# Desc: assembly->source mode change
gdbtk_test srcwin2-1.13 "assembly->source mode change" {
  set r 0
  $srcwin mode "" SOURCE
  set twin [$stw test_get twin]
  if {[$twin get 1.0 end] != $file1(source)} {set r -1}
  if {[$statbar.mode get] != "ASSEMBLY"} {set r -2}
  set r
} {0}


#####                       #####
#                               #
#  SECTION 2: Basic Operations  #
#                               #
#####                       #####

# Test: srcwin2-2.1
# Desc: check contents of filename combobox
gdbtk_test srcwin2-2.1 "check contents of filename combobox" {
  set names [$statbar.name list get 0 end]
  set r 0
  foreach f {list0.c list1.c} {
    if {[lsearch $names $f] != -1} {
      incr r
    }
  }
  set r
} {2}

# Test: srcwin2-2.2
# Desc: check contents of function combobox
gdbtk_test srcwin2-2.2 "check contents of function combobox" {
  set names [$statbar.func list get 0 end]
  set r 0
  foreach f {main foo unused} {
    if {[lsearch $names $f] != -1} {
      incr r
    }
  }
  set r
} {3}

# Test: srcwin2-2.3
# Desc: goto filename
gdbtk_test srcwin2-2.3 "goto filename" {
  set func [$srcwin test_get _name 1]
  $func "" list1.c
  set twin [$stw test_get twin]
  set file2(source) [$twin get 1.0 end]
  expr {![string compare $file1(source) $file2(source)]}
} {0}

# Test: srcwin2-2.4
# Desc: check contents of function combobox
gdbtk_test srcwin2-2.4 "check contents of function combobox" {
  set names [$statbar.func list get 0 end]
  set r 0
  foreach f {bar long_line oof unused} {
    if {[lsearch $names $f] != -1} {
      incr r
    }
  }
  set r
} {4}

# Test: srcwin2-2.5
# Desc: function combobox entry field should be empty after switching to a new file
gdbtk_test srcwin2-2.5 "function combobox entry field should be empty" {
  set names [$statbar.func get]
  string length $names
} {0}

# Test: srcwin2-2.6
# Desc: goto function
gdbtk_test srcwin2-2.6 "goto function bar" {
  $srcwin goto_func "" bar
  set r 0

  # now get a dump of all tags and check that only one line is
  # marked BROWSE_TAG and no lines are STACK_TAG or PC_TAG.

  # We know that list1.c should have BROWSE_TAG set at index 10.2
  # for function "bar".  If list1.c is changed or the layout of the source
  # window is changed, this must be updated.
  if {![catch {set z [$twin dump -tag 1.0 end]}]} {
    foreach {k v i} $z {
      if {$k == "tagon"} {
	if {$v == "BROWSE_TAG"} {
	  if {$i == "10.2"} {
	    incr r
	  } else {
	    incr r 5
	  }
	}
	if {$v == "STACK_TAG"} { incr r 10}
	if {$v == "PC_TAG"} { incr r 100}
      }
    }
  } else {
    set r -1
  }

  if {$r == 1} {
    # things are OK so far, so just verify the function name is displayed
    # in the combobox entry field.
    set names [$statbar.func get]
    if {[string compare $names "bar"]} {set r -2}
  }
  set r
} {1}

# Test: srcwin2-2.7
# Desc: goto function "oof". This tests that the correct line is highlighted
# with BROWSE_TAG and no other lines are highlighted. It also checks that
# the combobox has the correct function name in it.  Finally, list1.c
# has an extremely long line, line 32, that breaks some functions.  We verify 
# that the GDBtk has the correct line number.

gdbtk_test srcwin2-2.7 "goto function oof" {
  $srcwin goto_func "" oof
  set r 0

  # now get a dump of all tags and check that only one line is
  # marked BROWSE_TAG and no lines are STACK_TAG or PC_TAG.

  # We know that list1.c should have BROWSE_TAG set at index 38.2
  # for function "oof".  If list1.c is changed or the layout of the source
  # window is changed, this must be updated.
  if {![catch {set z [$twin dump -tag 1.0 end]}]} {
    foreach {k v i} $z {
      if {$k == "tagon"} {
	if {$v == "BROWSE_TAG"} {
	  if {$i == "38.2"} {
	    set line_number [$twin get "$i wordstart" "$i wordend"]
	    if {$line_number == "38"} {
	      incr r
	    } else {
	      incr r -100
	    }
	  } else {
	    incr r 5
	  }
	}
	if {$v == "STACK_TAG"} {incr r 10}
	if {$v == "PC_TAG"} {incr r 100}
      }
    }
  } else {
    set r -1
  }

  if {$r == 1} {
    # things are OK so far, so just verify the function name is displayed
    # in the combobox entry field.
    set names [$statbar.func get]
    if {[string compare $names "oof"]} {set r -2}
  }
  set r
} {1}

# Test: srcwin2-2.8
# Desc: This test issues a next command while browsing list1.c.
# It should display list0.c and highlight the correct line.
gdbtk_test srcwin2-2.8 "step while browsing" {
  gdb_immediate "next" 1
  set r 0
  set name [$statbar.name get]
  set func [$statbar.func get]

  # check contents of name and function comboboxes
  if {$name != "list0.c"} {set r -1}
  if {$func != "main"} {set r -2}

  # check that correct file is displayed
  set twin [$stw test_get twin]
  set a [$twin get 1.0 end]
  if {[string compare $file1(source) $a]} {set r -3}

  # check for PC_TAG
  if {$r == 0} {
    if {![catch {set z [$twin dump -tag 1.0 end]}]} {
      foreach {k v i} $z {
	if {$k == "tagon"} {
	  if {$v == "PC_TAG"} {
	    incr r
	  }
	  if {$v == "STACK_TAG"} {incr r 10}
	  if {$v == "BROWSE_TAG"} {incr r 100}
	}
      }
    } else {
      set r -4
    }
  }
  set r
} {1}

# Test: srcwin2-2.11
# Desc: This test issues a break and a continue
gdbtk_test srcwin2-2.11 "set BP and continue" {
  gdb_immediate "break oof" 1
  gdb_immediate "continue" 1
  set r 0
  set name [$statbar.name get]
  set func [$statbar.func get]

  # check contents of name and function comboboxes
  if {$name != "list1.c"} {set r -1}
  if {$func != "oof"} {set r -2}

  # check that the correct file is displayed
  # we must clear the breakpoint first so it doesn't mess up the
  # comparison...
  gdb_immediate "clear oof" 1  
  set twin [$stw test_get twin]
  set a [$twin get 1.0 end]
  if {[string compare $file2(source) $a]} {set r -3}
  
  # check for PC_TAG on correct line
  if {$r == 0} {
    if {![catch {set z [$twin dump -tag 1.0 end]}]} {
      foreach {k v i} $z {
	if {$k == "tagon"} {
	  if {$v == "PC_TAG"} {
	    if {$i == "38.2"} {
	      incr r
	    } else {
	      incr r 5
	    }
	  }
	  if {$v == "STACK_TAG"} {incr r 10}
	  if {$v == "BROWSE_TAG"} {incr r 100}
	}
      }
    } else {
      set r -4
    }
  }
  set r
} {1}

#####                       #####
#                               #
#  SECTION 3: Stack Operations  #
#                               #
#####                       #####

# Test: srcwin2-3.1
# Desc: This tests "stack up" 
gdbtk_test srcwin2-3.1 "stack up (1)" {
  $srcwin stack up
  set r 0
  set name [$statbar.name get]
  set func [$statbar.func get]

  # check contents of name and function comboboxes
  if {$name != "list1.c"} {set r -1}
  if {$func != "long_line"} {set r -2}

  # check that the correct file is displayed
  set twin [$stw test_get twin]
  set a [$twin get 1.0 end]
  if {[string compare $file2(source) $a]} {set r -3}
  
  # check for PC_TAG and STACK_TAG on correct lines
  if {$r == 0} {
    if {![catch {set z [$twin dump -tag 1.0 end]}]} {
      foreach {k v i} $z {
	if {$k == "tagon"} {
	  if {$v == "PC_TAG"} {
	    if {$i == "38.2"} {
	      incr r
	    } else {
	      incr r 5
	    }
	  }
	  if {$v == "STACK_TAG"} {
	    if {$i == "26.2"} {
	      incr r
	    } else {
	      incr r 10
	    }
	  }
	  if {$v == "BROWSE_TAG"} {incr r 100}
	}
      }
    } else {
      set r -4
    }
  }
  set r
} {2}

# Test: srcwin2-3.2
# Desc: Another "stack up"  test
gdbtk_test srcwin2-3.2 "stack up (2)" {
  $srcwin stack up
  set r 0
  set name [$statbar.name get]
  set func [$statbar.func get]

  # check contents of name and function comboboxes
  if {$name != "list1.c"} {set r -1}
  if {$func != "bar"} {set r -2}

  # check that the correct file is displayed
  set twin [$stw test_get twin]
  set a [$twin get 1.0 end]
  if {[string compare $file2(source) $a]} {set r -3}
  
  # check for PC_TAG and STACK_TAG on correct lines
  if {$r == 0} {
    if {![catch {set z [$twin dump -tag 1.0 end]}]} {
      foreach {k v i} $z {
	if {$k == "tagon"} {
	  if {$v == "PC_TAG"} {
	    if {$i == "38.2"} {
	      incr r
	    } else {
	      incr r 5
	    }
	  }
	  if {$v == "STACK_TAG"} {
	    if {$i == "12.2"} {
	      incr r
	    } else {
	      incr r 10
	    }
	  }
	  if {$v == "BROWSE_TAG"} {incr r 100}
	}
      }
    } else {
      set r -4
    }
  }
  set r
} {2}

# Test: srcwin2-3.3
# Desc: Another "stack up"  test
gdbtk_test srcwin2-3.3 "stack up (3)" {
  $srcwin stack up
  set r 0
  set name [$statbar.name get]
  set func [$statbar.func get]

  # check contents of name and function comboboxes
  if {$name != "list0.h"} {set r -1}
  if {$func != "foo"} {set r -2}

  # check that the correct file is displayed
  set twin [$stw test_get twin]
  set file3(source) [$twin get 1.0 end]
  if {![string compare $file2(source) $file3(source)]} {set r -3}
  
  # check for PC_TAG and STACK_TAG on correct lines
  if {$r == 0} {
    if {![catch {set z [$twin dump -tag 1.0 end]}]} {
      foreach {k v i} $z {
	if {$k == "tagon"} {
	  if {$v == "STACK_TAG"} {
	    if {$i == "9.2"} {
	      incr r
	    } else {
	      incr r 5
	    }
	  }
	  if {$v == "PC_TAG"} {incr r 10}
	  if {$v == "BROWSE_TAG"} {incr r 100}
	}
      }
    } else {
      set r -4
    }
  }
  set r
} {1}

# Test: srcwin2-3.4
# Desc: Another "stack up"  test
gdbtk_test srcwin2-3.4 "stack up (4)" {
  $srcwin stack up
  set r 0
  set name [$statbar.name get]
  set func [$statbar.func get]

  # check contents of name and function comboboxes
  if {$name != "list0.c"} {set r -1}
  if {$func != "main"} {set r -2}

  # check that the correct file is displayed
  set twin [$stw test_get twin]
  set a [$twin get 1.0 end]
  if {[string compare $file1(source) $a]} {set r -3}
  
  # check for STACK_TAG
  if {$r == 0} {
    if {![catch {set z [$twin dump -tag 1.0 end]}]} {
      foreach {k v i} $z {
	if {$k == "tagon"} {
	  if {$v == "STACK_TAG"} {
	    incr r
	  }
	  if {$v == "PC_TAG"} {incr r 10}
	  if {$v == "BROWSE_TAG"} {incr r 100}
	}
      }
    } else {
      set r -4
    }
  }
  set r
} {1}


# Disabled for now because there are different correct results.
# Test should be rewritten to include those.
# Test: srcwin2-3.5
# Desc: "stack up" when we are at the top
#gdbtk_test srcwin2-3.5 "stack up when at the top" {
# $srcwin stack up
#  set r 0
#  set name [$statbar.name get]
#  set func [$statbar.func get]

  # check contents of name and function comboboxes
#  if {$name != "list0.c"} {set r -1}
#  if {$func != "main"} {set r -2}

  # check that the correct file is displayed
#  set twin [$stw test_get twin]
#  set a [$twin get 1.0 end]
#  if {[string compare $file1(source) $a]} {set r -3}
  
  # check for STACK_TAG
#  if {$r == 0} {
#    if {![catch {set z [$twin dump -tag 1.0 end]}]} {
#      foreach {k v i} $z {
#	if {$k == "tagon"} {
#	  if {$v == "STACK_TAG"} {
#	    incr r
#	  }
#	  if {$v == "PC_TAG"} {incr r 10}
#	  if {$v == "BROWSE_TAG"} {incr r 100}
#	}
#      }
#    } else {
#      set r -4
#    }
#  }
#  set r
#} {1}

# Test: srcwin2-3.6
# Desc: "stack down"  test
gdbtk_test srcwin2-3.6 "stack down" {
  $srcwin stack down
  set r 0
  set name [$statbar.name get]
  set func [$statbar.func get]

  # check contents of name and function comboboxes
  if {$name != "list0.h"} {set r -1}
  if {$func != "foo"} {set r -2}

  # check that the correct file is displayed
  set twin [$stw test_get twin]
  set a [$twin get 1.0 end]
  if {![string compare $file2(source) $a]} {set r -3}
  
  # check for PC_TAG and STACK_TAG on correct lines
  if {$r == 0} {
    if {![catch {set z [$twin dump -tag 1.0 end]}]} {
      foreach {k v i} $z {
	if {$k == "tagon"} {
	  if {$v == "STACK_TAG"} {
	    if {$i == "9.2"} {
	      incr r
	    } else {
	      incr r 5
	    }
	  }
	  if {$v == "PC_TAG"} {incr r 10}
	  if {$v == "BROWSE_TAG"} {incr r 100}
	}
      }
    } else {
      set r -4
    }
  }
  set r
} {1}

# Test: srcwin2-3.7
# Desc: "stack bottom"  test
gdbtk_test srcwin2-3.7 "stack bottom" {
  $srcwin stack bottom
  set r 0
  set name [$statbar.name get]
  set func [$statbar.func get]

  # check contents of name and function comboboxes
  if {$name != "list1.c"} {set r -1}
  if {$func != "oof"} {set r -2}

  # check that the correct file is displayed
  set twin [$stw test_get twin]
  set a [$twin get 1.0 end]
  if {[string compare $file2(source) $a]} {set r -3}
  
  # check for PC_TAG on correct line
  if {$r == 0} {
    if {![catch {set z [$twin dump -tag 1.0 end]}]} {
      foreach {k v i} $z {
	if {$k == "tagon"} {
	  if {$v == "PC_TAG"} {
	    if {$i == "38.2"} {
	      incr r
	    } else {
	      incr r 5
	    }
	  }
	  if {$v == "STACK_TAG"} {incr r 10}
	  if {$v == "BROWSE_TAG"} {incr r 100}
	}
      }
    } else {
      set r -4
    }
  }
  set r
} {1}

# Test: srcwin2-3.8
# Desc: "stack down" when at bottom
gdbtk_test srcwin2-3.8 "stack down when at bottom" {
  $srcwin stack down
  set r 0
  set name [$statbar.name get]
  set func [$statbar.func get]

  # check contents of name and function comboboxes
  if {$name != "list1.c"} {set r -1}
  if {$func != "oof"} {set r -2}

  # check that the correct file is displayed
  set twin [$stw test_get twin]
  set a [$twin get 1.0 end]
  if {[string compare $file2(source) $a]} {set r -3}
  
  # check for PC_TAG on correct line
  if {$r == 0} {
    if {![catch {set z [$twin dump -tag 1.0 end]}]} {
      foreach {k v i} $z {
	if {$k == "tagon"} {
	  if {$v == "PC_TAG"} {
	    if {$i == "38.2"} {
	      incr r
	    } else {
	      incr r 5
	    }
	  }
	  if {$v == "STACK_TAG"} {incr r 10}
	  if {$v == "BROWSE_TAG"} {incr r 100}
	}
      }
    } else {
      set r -4
    }
  }
  set r
} {1}

# 4.1 bp, multiple, balloon, etc

# Test: srcwin2-4.1
# Desc: Set BP in another file. Tests bp and cache functions
gdbtk_test srcwin2-4.1 "set BP in another file" {
  gdb_immediate "break foo" 1
  $srcwin goto_func "" foo
  set r 0
  set name [$statbar.name get]
  set func [$statbar.func get]

  # check contents of name and function comboboxes
  if {$name != "list0.h"} {set r -1}
  if {$func != "foo"} {set r -2}

  set twin [$stw test_get twin]
  
  # check for BROWSE_TAG and BP image on correct line
  if {$r == 0} {
    if {![catch {set z [$twin dump 1.0 end]}]} {
      foreach {k v i} $z {
	if {$k == "tagon"} {
	  if {$v == "BROWSE_TAG"} {
	    if {$i == "9.2"} {
	      incr r
	    } else {
	      incr r 5
	    }
	  }
	  if {$v == "STACK_TAG"} {incr r 10}
	  if {$v == "PC_TAG"} {incr r 100}
	} elseif {$k == "image"} {
	  if {$i == "9.0"} {
	    incr r
	  } else {
	    set r -200
	  }
	}
      }
    } else {
      set r -4
    }
  }
  
  if {$r == 2} {
    # clear BP and compare with previous contents. This should succeed,
    gdb_immediate "clear foo" 1
    set a [$twin get 1.0 end]
    if {[string compare $file3(source) $a]} {set r -3}
  }
  
  set r
} {2}

# Test: srcwin2-4.2
# Desc: Test temporary BP
gdbtk_test srcwin2-4.2 "temporary BP" {
  set r 0
  if {[catch {gdb_immediate "tbreak foo" 1} msg]} {
    set r -500
  }
  set name [$statbar.name get]
  set func [$statbar.func get]
  
  # check contents of name and function comboboxes
  if {$name != "list0.h"} {set r -1}
  if {$func != "foo"} {set r -2}

  set twin [$stw test_get twin]
  
  # check for BROWSE_TAG and BP image on correct line
  if {$r == 0} {
    if {![catch {set z [$twin dump 1.0 end]}]} {
      foreach {k v i} $z {
	if {$k == "tagon"} {
	  if {$v == "BROWSE_TAG"} {
	    if {$i == "9.2"} {
	      incr r
	    } else {
	      incr r 5
	    }
	  }
	  if {$v == "STACK_TAG"} {incr r 10}
	  if {$v == "PC_TAG"} {incr r 100}
	} elseif {$k == "image"} {
	  if {$i == "9.0"} {
	    incr r
	  } else {
	    set r -200
	  }
	}
      }
    } else {
      set r -4
    }
  }
  
  gdb_immediate "continue" 1
  
  # now check for PC_TAG and no image
  if {$r == 2} {
    if {![catch {set z [$twin dump 1.0 end]}]} {
      foreach {k v i} $z {
	if {$k == "tagon"} {
	  if {$v == "PC_TAG"} {
	    if {$i == "9.2"} {
	      incr r
	    } else {
	      incr r 5
	    }
	  }
	  if {$v == "STACK_TAG"} {incr r 10}
	  if {$v == "BROWSE_TAG"} {incr r 100}
	} elseif {$k == "image"} {
	  set r -200
	}
      }
    } else {
      set r -4
    }
  }
  
  set r
} {3}

gdbtk_test_done
@


1.4
log
@2003-02-27  Martin M. Hunt  <hunt@@redhat.com>

	* srcwin.test: Use "list get" instead of "listget" to
	get contents of comboboxes.
	(2.1): Be less sensitive.

	* srcwin2.test: Use "list get" instead of "listget" to
	get contents of comboboxes
	(2-1.3): Accept assembly == mixed
	for no source tests.

	* srcwin3.test:  Use "list get" instead of "listget" to
	get contents of comboboxes
@
text
@a16 3
# Please email any bugs, comments, and/or additions to this file to:
# bug-gdb@@prep.ai.mit.edu

@


1.3
log
@        * README: New file.

        * configure.in: Check for executable filename extension.
        * Makefile.in: Add filename extensions.
        * configure: Regenerated.

        * defs: Fix typo setting _test(verbose).
        (gdbtk_test_file): New proc to load executables into gdbtk.
        (gdbtk_test_run): New proc to run executables on gdbtk.
        * browser.exp: Don't check if DISPLAY is set: let
        gdbtk_initialize_display do it all for us.
        Call gdbtk_done when finished with tests.
        * c_variable.exp: Ditto.
        * console.exp: Ditto.
        * cpp_variable.exp: Ditto.
        Only run tests if c++ is supported in the configuration.
        * srcwin.exp: Ditto the DISPLAY stuff.
        Accumulate all test results for the end and report them then.

        * browser.test: Use gdbtk_test_file and gdbtk_test_run
        to load and run an executable.
        * c_variable.test: Use gdbtk_test_file and gdbtk_test_run
        to load and run an executable.
        * srcwin.test: Ditto.
        * srcwin1.test: Ditto.
        * srcwin2.test: Ditto.
        * browser.test: (set_search_mode): Use "configure
        -value" not "entryset" to set the combobox's value. We need
        to have the command fired.
        (browser-3.5): Remove trailing whitespace which causes test to
        fail.
        (browser-4.4): Expect something rational. Regexp "\_1$" cannot
        match "func_10"!
        (browser-4.5): Ditto.
        (browser-5.12): Select all files for search to make test
        match description.
        (browser-6.2): Renamed from another test also calledd 6.1.
        (browser-7.1): Delete all breakpoints at once without from_tty.
        Select all entries in the comobox before invoking BP set/delete
        button.
        (browser-7.2): Ditto.

        * list0.c, list1.c, list0.h: New files. Grabbed from gdb.base.
        * srcwin.exp: Use these local files instead of those in gdb.base.
@
text
@d84 3
a86 2
  # be noted, even if source in unavailable.
  if {$file1(mixed) == $file1(assembly)} {set r -1}
d88 1
a88 1
  set r
d219 1
a219 1
  set names [$statbar.name listget 0 end]
d221 1
a221 1
  foreach f {list0.c list1.c list0.h} {
d227 1
a227 1
} {3}
d232 1
a232 1
  set names [$statbar.func listget 0 end]
d255 1
a255 1
  set names [$statbar.func listget 0 end]
@


1.2
log
@2001-04-09  Martin M. Hunt  <hunt@@redhat.com>

	* srcwin1.test: Fix line numbers to correspond to
	modified source files in gdb.base. Commented-out test
	case for moving up past main() because sometimes there
	is a libc init function which makes the results
	inconsistent.
	* srcwin2.test: Ditto.
	* srcwin3.test: Ditto.
@
text
@d41 4
a44 10
if {$tcl_platform(platform) == "windows"} {
  set file [file join $objdir list.exe]
} else {
  set file [file join $objdir list]
}

# This isn't a test case, since if this fails, we're hosed.
if {[catch {gdb_cmd "file $file" 1} t]} {
  # an error occured loading the file
  gdbtk_test_error "loading \"$file\": $t"
d54 1
a54 1
run_executable
a898 5

# Local variables:
# mode: tcl
# change-log-default-name: "ChangeLog-gdbtk"
# End:
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
#   Copyright (C) 1999 Cygnus Solutions
d286 1
a286 1
  # We know that list1.c should have BROWSE_TAG set at index 5.2
d293 1
a293 1
	  if {$i == "5.2"} {
d330 1
a330 1
  # We know that list1.c should have BROWSE_TAG set at index 32.2
d337 1
a337 1
	  if {$i == "32.2"} {
d339 1
a339 1
	    if {$line_number == "32"} {
d429 1
a429 1
	    if {$i == "32.2"} {
d475 1
a475 1
	    if {$i == "32.2"} {
d482 1
a482 1
	    if {$i == "22.2"} {
d521 1
a521 1
	    if {$i == "32.2"} {
d528 1
a528 1
	    if {$i == "7.2"} {
d567 1
a567 1
	    if {$i == "8.2"} {
d620 3
d625 5
a629 5
gdbtk_test srcwin2-3.5 "stack up when at the top" {
  $srcwin stack up
  set r 0
  set name [$statbar.name get]
  set func [$statbar.func get]
d632 2
a633 2
  if {$name != "list0.c"} {set r -1}
  if {$func != "main"} {set r -2}
d636 3
a638 3
  set twin [$stw test_get twin]
  set a [$twin get 1.0 end]
  if {[string compare $file1(source) $a]} {set r -3}
d641 17
a657 17
  if {$r == 0} {
    if {![catch {set z [$twin dump -tag 1.0 end]}]} {
      foreach {k v i} $z {
	if {$k == "tagon"} {
	  if {$v == "STACK_TAG"} {
	    incr r
	  }
	  if {$v == "PC_TAG"} {incr r 10}
	  if {$v == "BROWSE_TAG"} {incr r 100}
	}
      }
    } else {
      set r -4
    }
  }
  set r
} {1}
d682 1
a682 1
	    if {$i == "8.2"} {
d722 1
a722 1
	    if {$i == "32.2"} {
d762 1
a762 1
	    if {$i == "32.2"} {
d802 1
a802 1
	    if {$i == "8.2"} {
d811 1
a811 1
	  if {$i == "8.0"} {
d855 1
a855 1
	    if {$i == "8.2"} {
d864 1
a864 1
	  if {$i == "8.0"} {
d884 1
a884 1
	    if {$i == "8.2"} {
@


1.1.1.1
log
@import insight-2000-02-04 snapshot (2nd try)
@
text
@@
