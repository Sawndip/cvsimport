head	1.1;
access;
symbols
	insight_7_6-2013-04-10-branchpoint:1.1
	gdb_7_6-branch:1.1.0.40
	gdb_7_5-branch:1.1.0.38
	gdb_7_4-branch:1.1.0.36
	gdb_7_3-branch:1.1.0.34
	gdb_7_1-branch:1.1.0.32
	gdb_7_0-branch:1.1.0.30
	arc-sim-20090309:1.1
	arc-insight_6_8-branch:1.1.0.28
	arc-insight_6_8-branchpoint:1.1
	insight_6_8-branch:1.1.0.26
	insight_6_8-branchpoint:1.1
	insight_6_6-20070208-release:1.1
	gdb_6_6-branch:1.1.0.24
	gdb_6_6-2006-11-15-branchpoint:1.1
	insight_6_5-20061003-release:1.1
	gdb_6_5-branch:1.1.0.22
	gdb_6_5-2006-05-14-branchpoint:1.1
	gdb_6_4-branch:1.1.0.20
	gdb_6_4-2005-11-01-branchpoint:1.1
	gdb-csl-arm-20051020-branch:1.1.0.18
	gdb-csl-arm-20051020-branchpoint:1.1
	gdb_6_1-2004-04-05-release:1.1
	gdb_6_1-branch:1.1.0.16
	gdb_6_1-2004-03-01-gmt-branchpoint:1.1
	gdb_6_0-2003-10-04-release:1.1
	gdb_6_0-branch:1.1.0.14
	gdb_6_0-2003-06-23-branchpoint:1.1
	gdb_5_3-2002-12-12-release:1.1
	gdb_5_3-branch:1.1.0.12
	gdb_5_3-2002-09-04-branchpoint:1.1
	gdb_5_2_1-2002-07-23-release:1.1
	gdb_5_2-2002-04-29-release:1.1
	gdb_5_2-branch:1.1.0.10
	gdb_5_2-2002-03-03-branchpoint:1.1
	gdb_5_1_1-2002-01-24-release:1.1
	cygnus_cvs_20020108_pre:1.1
	gdb_5_1_0_1-2002-01-03-branch:1.1.0.8
	gdb_5_1_0_1-2002-01-03-branchpoint:1.1
	gdb_5_1-2001-11-21-release:1.1
	gdb_s390-2001-09-26-branch:1.1.0.6
	gdb_s390-2001-09-26-branchpoint:1.1
	gdb_5_1-2001-07-29-branch:1.1.0.4
	gdb_5_1-2001-07-29-branchpoint:1.1
	dberlin-typesystem-branch:1.1.0.2
	dberlin-typesystem-branchpoint:1.1;
locks; strict;
comment	@ * @;


1.1
date	2001.05.07.20.39.32;	author kseitz;	state Exp;
branches;
next	;


desc
@@


1.1
log
@        * README: New file.

        * configure.in: Check for executable filename extension.
        * Makefile.in: Add filename extensions.
        * configure: Regenerated.

        * defs: Fix typo setting _test(verbose).
        (gdbtk_test_file): New proc to load executables into gdbtk.
        (gdbtk_test_run): New proc to run executables on gdbtk.
        * browser.exp: Don't check if DISPLAY is set: let
        gdbtk_initialize_display do it all for us.
        Call gdbtk_done when finished with tests.
        * c_variable.exp: Ditto.
        * console.exp: Ditto.
        * cpp_variable.exp: Ditto.
        Only run tests if c++ is supported in the configuration.
        * srcwin.exp: Ditto the DISPLAY stuff.
        Accumulate all test results for the end and report them then.

        * browser.test: Use gdbtk_test_file and gdbtk_test_run
        to load and run an executable.
        * c_variable.test: Use gdbtk_test_file and gdbtk_test_run
        to load and run an executable.
        * srcwin.test: Ditto.
        * srcwin1.test: Ditto.
        * srcwin2.test: Ditto.
        * browser.test: (set_search_mode): Use "configure
        -value" not "entryset" to set the combobox's value. We need
        to have the command fired.
        (browser-3.5): Remove trailing whitespace which causes test to
        fail.
        (browser-4.4): Expect something rational. Regexp "\_1$" cannot
        match "func_10"!
        (browser-4.5): Ditto.
        (browser-5.12): Select all files for search to make test
        match description.
        (browser-6.2): Renamed from another test also calledd 6.1.
        (browser-7.1): Delete all breakpoints at once without from_tty.
        Select all entries in the comobox before invoking BP set/delete
        button.
        (browser-7.2): Ditto.

        * list0.c, list1.c, list0.h: New files. Grabbed from gdb.base.
        * srcwin.exp: Use these local files instead of those in gdb.base.
@
text
@#include "list0.h"

int main ()
{
    int x;
#ifdef usestubs
    set_debug_traps();
    breakpoint();
#endif
    x = 0;
    foo (x++);
    foo (x++);
    foo (x++);
    foo (x++);
    foo (x++);
    foo (x++);
    foo (x++);
    foo (x++);
    foo (x++);
    foo (x++);
    foo (x++);
    foo (x++);
    foo (x++);
    foo (x++);
    foo (x++);
    foo (x++);
    foo (x++);
    foo (x++);
    foo (x++);
    foo (x++);
    foo (x++);
    foo (x++);
    foo (x++);
    foo (x++);
    foo (x++);
    return 0;
}

static void
unused ()
{
    /* Not used for anything */
}
@
