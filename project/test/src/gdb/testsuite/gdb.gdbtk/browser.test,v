head	1.3;
access;
symbols
	insight_7_6-2013-04-10-branchpoint:1.3
	gdb_7_6-branch:1.3.0.12
	gdb_7_5-branch:1.3.0.10
	gdb_7_4-branch:1.3.0.8
	gdb_7_3-branch:1.3.0.6
	gdb_7_1-branch:1.3.0.4
	gdb_7_0-branch:1.3.0.2
	arc-sim-20090309:1.2
	arc-insight_6_8-branch:1.2.0.28
	arc-insight_6_8-branchpoint:1.2
	insight_6_8-branch:1.2.0.26
	insight_6_8-branchpoint:1.2
	insight_6_6-20070208-release:1.2
	gdb_6_6-branch:1.2.0.24
	gdb_6_6-2006-11-15-branchpoint:1.2
	insight_6_5-20061003-release:1.2
	gdb_6_5-branch:1.2.0.22
	gdb_6_5-2006-05-14-branchpoint:1.2
	gdb_6_4-branch:1.2.0.20
	gdb_6_4-2005-11-01-branchpoint:1.2
	gdb-csl-arm-20051020-branch:1.2.0.18
	gdb-csl-arm-20051020-branchpoint:1.2
	gdb_6_1-2004-04-05-release:1.2
	gdb_6_1-branch:1.2.0.16
	gdb_6_1-2004-03-01-gmt-branchpoint:1.2
	gdb_6_0-2003-10-04-release:1.2
	gdb_6_0-branch:1.2.0.14
	gdb_6_0-2003-06-23-branchpoint:1.2
	gdb_5_3-2002-12-12-release:1.2
	gdb_5_3-branch:1.2.0.12
	gdb_5_3-2002-09-04-branchpoint:1.2
	gdb_5_2_1-2002-07-23-release:1.2
	gdb_5_2-2002-04-29-release:1.2
	gdb_5_2-branch:1.2.0.10
	gdb_5_2-2002-03-03-branchpoint:1.2
	gdb_5_1_1-2002-01-24-release:1.2
	cygnus_cvs_20020108_pre:1.2
	gdb_5_1_0_1-2002-01-03-branch:1.2.0.8
	gdb_5_1_0_1-2002-01-03-branchpoint:1.2
	gdb_5_1-2001-11-21-release:1.2
	gdb_s390-2001-09-26-branch:1.2.0.6
	gdb_s390-2001-09-26-branchpoint:1.2
	gdb_5_1-2001-07-29-branch:1.2.0.4
	gdb_5_1-2001-07-29-branchpoint:1.2
	dberlin-typesystem-branch:1.2.0.2
	dberlin-typesystem-branchpoint:1.2
	insight-precleanup-2001-01-01:1.1.1.1
	gdb_5_0-2000-05-19-release:1.1.1.1
	gdb_4_18_2-2000-05-18-release:1.1.1.1
	gdb_4_95_1-2000-05-11-snapshot:1.1.1.1
	gdb_4_95_0-2000-04-27-snapshot:1.1.1.1
	gdb_5_0-2000-04-10-branch:1.1.1.1.0.2
	gdb_5_0-2000-04-10-branchpoint:1.1.1.1
	repo-unification-2000-02-06:1.1.1.1
	insight-2000-02-04:1.1.1.1
	SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.3
date	2008.12.21.17.38.55;	author jkratoch;	state Exp;
branches;
next	1.2;

1.2
date	2001.05.07.20.39.32;	author kseitz;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.07.00.19.45;	author jsm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.07.00.19.45;	author jsm;	state Exp;
branches;
next	;


desc
@@


1.3
log
@	Fix for PR gdb/8648.
	* gdb.arch/ppc-fp.exp, gdb.arch/vsx-regs.exp, gdb.base/watchpoint-hw.c,
	gdb.gdbtk/browser.test, gdb.gdbtk/console.test, gdb.gdbtk/srcwin.test,
	gdb.gdbtk/srcwin2.test, gdb.gdbtk/srcwin3.test, gdb.gdbtk/windows.test,
	gdb.threads/tls2.c: Remove reference to bug-gdb@@prep.ai.mit.edu .
@
text
@# Browser Window Tests
# Copyright 1998, 2001 Red Hat, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

# This file was written by Keith Seitz (keiths@@cygnus.com)

# Read in the standard defs file

if {![gdbtk_read_defs]} {
  break
}

global objdir test_ran
set _files(stupid_initializer) -100

#####                            #####
#                                    #
#  Helper functions for this module  #
#                                    #
#####                            #####

# Set the search expression
proc set_regexp {exp} {
  global browser

  $browser component filt_entry delete 0 end
  $browser component filt_entry insert 0 $exp
}

# Do the search
proc do_search {} {
  global browser
  $browser search
  set m [$browser component func_box get 0 end]

  return $m
}

# Set search to use regular expressions.
proc set_search_mode {val} {
  global browser
  pref set gdb/search/filter_mode $val

  # Use configure instead of entryset: need to have
  # combobox's command fire
  $browser component filt_type configure -value $val
}

# Highlight a file
proc select {filename} {
  global browser _files

  if {[info exists _files($filename)]} {
    $browser component file_box selection set $_files($filename)
  } else {
    set files [$browser component file_box get 0 end]
    set i [lsearch $files $filename]
    set _files($filename) $i
    $browser component file_box selection set $i
  }
  $browser search
}

proc select_all {} {
  global browser
  
  $browser component file_all invoke

}

# clear all files
proc clear {} {
  global browser

  $browser component file_box selection clear 0 end
  $browser search
}

#####         #####
#                 #
#  BROWSER TESTS  #
#                 #
#####         #####

# Load the test executable
set program [file join $objdir stack]
if {[catch {gdbtk_test_file $program} t]} {
  # This isn't a test case, since if this fails, we're hosed.
  gdbtk_test_error "loading \"$program\": $t"
}

# Open a browser
set browser [ManagedWin::open BrowserWin]

# Test:  browser-1.1
# Desc:  Check file listbox contents
gdbtk_test browser-1.1 {file listbox contents} {
  set m [$browser component file_box get 0 end]
  set f {}
  if {[lsearch $m stack1.c] == -1} {
    lappend f 0
  } else {
    lappend f 1
  }
  if {[lsearch $m stack2.c] == -1} {
    lappend f 0
  } else {
    lappend f 1
  }

  join $f \ 
} {1 1}

# Tests 2.* test starts with search mode.
# Test:  browser-2.1
# Desc:  Check all files/all funcs
gdbtk_test browser-2.1 {all files/all funcs} {
  set_search_mode "starts with"
  set_regexp ""
  select_all
  set m [do_search]
  set r 0
  foreach f {extern_func1_1 extern_func1_10 extern_func1_11 extern_func1_12 \
	       extern_func1_13 extern_func1_14 extern_func1_15 extern_func1_2 \
	       extern_func1_3 extern_func1_4 extern_func1_5 extern_func1_6 \
	       extern_func1_7 extern_func1_8 extern_func1_9 func_1 \
	       func_10 func_11 func_12 func_13 \
	       func_14 func_15 func_2 func_3 \
	       func_4 func_5 func_6 func_7 \
	       func_8 func_9 main static_func_1 \
	       static_func_10 static_func_11 static_func_12 static_func_13 \
	       static_func_14 static_func_15 static_func_2 static_func_3 \
	       static_func_4 static_func_5 static_func_6 static_func_7 \
	       static_func_8 static_func_9} {
    if {[lsearch $m $f] != -1} {
      incr r
    }
  }

  set r
} {46}

# Test:  browser-2.2
# Desc:  Check all functions in stack1.c
gdbtk_test browser-2.2 {all functions in stack1.c} {
  set_regexp ""
  clear
  select stack1.c
  set m [do_search]

  set r 0
  foreach f {func_1 func_10 func_11 func_12 \
	       func_13 func_14 func_15 func_2 \
	       func_3 func_4 func_5 func_6 \
	       func_7 func_8 func_9 main \
	       static_func_1 static_func_10 static_func_11 static_func_12 \
	       static_func_13 static_func_14 static_func_15 static_func_2 \
	       static_func_3 static_func_4 static_func_5 static_func_6 \
	       static_func_7 static_func_8 static_func_9} {
    if {[lsearch $m $f] != -1} {
      incr r
    }
  }

  set r
} {31}
if {$test_ran} {
  clear
}

# Test:  browser-2.3
# Desc:  Check all functions in stack2.c
gdbtk_test browser-2.3 {all functions in stack2.c} {
  set_regexp ""
  clear
  select stack2.c
  set m [do_search]

  set r 0
  foreach f {extern_func1_1 extern_func1_10 extern_func1_11 \
	       extern_func1_12 extern_func1_13 extern_func1_14 extern_func1_15 \
	       extern_func1_2 extern_func1_3 extern_func1_4 extern_func1_5 \
	       extern_func1_6 extern_func1_7 extern_func1_8 extern_func1_9} {
    if {[lsearch $m $f] != -1} {
      incr r
    }
  }

  set r
} {15}
if {$test_ran} {
  clear
}

# Test:  browser-2.4
# Desc:  Check for all functions matching "func" - mode starts with
gdbtk_test browser-2.4 {all functions matching "func" - "mode starts with"} {
  set_search_mode "starts with"
  select_all
  set_regexp func
  do_search
} {func_1 func_10 func_11 func_12 func_13 func_14 func_15 func_2 func_3 func_4 func_5 func_6 func_7 func_8 func_9}

# Test:  browser-2.5
# Desc:  Check all functions matching "func" in stack1.c - mode starts with
gdbtk_test browser-2.5 {all functions matching "func" in stack1.c - "mode starts with"} {
  set_search_mode "starts with"
  set_regexp func
  clear
  select stack1.c
  do_search
} {func_1 func_10 func_11 func_12 func_13 func_14 func_15 func_2 func_3 func_4 func_5 func_6 func_7 func_8 func_9}

# Test:  browser-2.6
# Desc:  Check all functions matching "funcs" in stack2.c - mode starts with
gdbtk_test browser-2.6 {all functions matching "func" in stack2.c - mode "starts with"} {
  set_search_mode "starts with"
  set_regexp func
  clear
  select stack2.c
  do_search
} {}
if {$test_ran} {
  clear
}

# Test:  browser-2.7
# Desc:  Check all functions matching "foobar"
gdbtk_test browser-2.7 {all functions matching "foobar"} {
  set_search_mode "starts with"
  select_all
  set_regexp foobar
  do_search
} {}

# Test:  browser-2.8
# Desc:  Check all functions matching "foobar" in stack1.c
gdbtk_test browser-2.8 {functions matching "foobar" in stack1.c} {
  set_search_mode "starts with"
  set_regexp foobar
  clear
  select stack1.c
  do_search
} {}

# Tests 3.* test "contains" search mode.
# Test:  browser-3.1
# Desc:  Check all files/all funcs
gdbtk_test browser-3.1 {all files/all funcs} {
  set_search_mode "contains"
  set_regexp ""
  select_all
  set m [do_search]
  set r 0
  foreach f {extern_func1_1 extern_func1_10 extern_func1_11 extern_func1_12 \
	       extern_func1_13 extern_func1_14 extern_func1_15 extern_func1_2 \
	       extern_func1_3 extern_func1_4 extern_func1_5 extern_func1_6 \
	       extern_func1_7 extern_func1_8 extern_func1_9 func_1 \
	       func_10 func_11 func_12 func_13 \
	       func_14 func_15 func_2 func_3 \
	       func_4 func_5 func_6 func_7 \
	       func_8 func_9 main static_func_1 \
	       static_func_10 static_func_11 static_func_12 static_func_13 \
	       static_func_14 static_func_15 static_func_2 static_func_3 \
	       static_func_4 static_func_5 static_func_6 static_func_7 \
	       static_func_8 static_func_9} {
    if {[lsearch $m $f] != -1} {
      incr r
    }
  }

  set r
} {46}

# Test:  browser-3.2
# Desc:  Check all functions in stack1.c
gdbtk_test browser-3.2 {all functions in stack1.c} {
  set_regexp ""
  set_search_mode "contains"
  clear
  select stack1.c
  set m [do_search]

  set r 0
  foreach f {func_1 func_10 func_11 func_12 \
	       func_13 func_14 func_15 func_2 \
	       func_3 func_4 func_5 func_6 \
	       func_7 func_8 func_9 main \
	       static_func_1 static_func_10 static_func_11 static_func_12 \
	       static_func_13 static_func_14 static_func_15 static_func_2 \
	       static_func_3 static_func_4 static_func_5 static_func_6 \
	       static_func_7 static_func_8 static_func_9} {
    if {[lsearch $m $f] != -1} {
      incr r
    }
  }

  set r
} {31}

if {$test_ran} {
  clear
}

# Test:  browser-3.3
# Desc:  Check all functions in stack2.c
gdbtk_test browser-3.3 {all functions in stack2.c} {
  set_regexp ""
  set_search_mode "contains"
  clear
  select stack2.c
  set m [do_search]

  set r 0
  foreach f {extern_func1_1 extern_func1_10 extern_func1_11 \
	       extern_func1_12 extern_func1_13 extern_func1_14 extern_func1_15 \
	       extern_func1_2 extern_func1_3 extern_func1_4 extern_func1_5 \
	       extern_func1_6 extern_func1_7 extern_func1_8 extern_func1_9} {
    if {[lsearch $m $f] != -1} {
      incr r
    }
  }

  set r
} {15}
if {$test_ran} {
  clear
}

# Test:  browser-3.4
# Desc:  Check for all functions matching "func" - mode contains
gdbtk_test browser-3.4 {all functions matching "func_1" - "mode contains"} {
  set_search_mode "contains"
  set_regexp "func_1"
  select_all
  do_search
} {func_1 func_10 func_11 func_12 func_13 func_14 func_15 static_func_1 static_func_10 static_func_11 static_func_12 static_func_13 static_func_14 static_func_15}

# Test:  browser-3.5
# Desc:  Check all functions matching "func_1" in stack1.c - mode contains
gdbtk_test browser-3.5 {all functions matching "func_1" in stack1.c - "mode contains"} {
  set_search_mode "contains"
  set_regexp "func_1"
  clear
  select stack1.c
  do_search
} {func_1 func_10 func_11 func_12 func_13 func_14 func_15 static_func_1 static_func_10 static_func_11 static_func_12 static_func_13 static_func_14 static_func_15}

# Test:  browser-3.6
# Desc:  Check all functions matching "func_1" in stack2.c - mode contains
gdbtk_test browser-3.6 {all functions matching "func" in stack2.c - mode "contains"} {
  set_search_mode "contains"
  set_regexp func_1
  clear
  select stack2.c
  do_search
} {}

# Test:  browser-3.7
# Desc:  Check all functions matching "foobar"
gdbtk_test browser-3.7 {all functions matching "foobar"} {
  set_search_mode "contains"
  select_all
  set_regexp foobar
  do_search
} {}

# Test:  browser-3.8
# Desc:  Check all functions matching "foobar" in stack1.c
gdbtk_test browser-3.8 {functions matching "foobar" in stack1.c} {
  set_search_mode "contains"
  set_regexp foobar
  clear
  select stack1.c
  do_search
} {}

# Tests 4.* test "ends with" search mode.
# Test:  browser-4.1
# Desc:  Check all files/all funcs
gdbtk_test browser-4.1 {all files/all funcs} {
  set_search_mode "ends with"
  set_regexp ""
  select_all
  set m [do_search]
  set r 0
  foreach f {extern_func1_1 extern_func1_10 extern_func1_11 extern_func1_12 \
	       extern_func1_13 extern_func1_14 extern_func1_15 extern_func1_2 \
	       extern_func1_3 extern_func1_4 extern_func1_5 extern_func1_6 \
	       extern_func1_7 extern_func1_8 extern_func1_9 func_1 \
	       func_10 func_11 func_12 func_13 \
	       func_14 func_15 func_2 func_3 \
	       func_4 func_5 func_6 func_7 \
	       func_8 func_9 main static_func_1 \
	       static_func_10 static_func_11 static_func_12 static_func_13 \
	       static_func_14 static_func_15 static_func_2 static_func_3 \
	       static_func_4 static_func_5 static_func_6 static_func_7 \
	       static_func_8 static_func_9} {
    if {[lsearch $m $f] > -1} {
      incr r
    }
  }

  set r
} {46}

# Test:  browser-4.2
# Desc:  Check all functions in stack1.c
gdbtk_test browser-4.2 {all functions in stack1.c} {
  set_regexp ""
  set_search_mode "ends with"
  clear
  select stack1.c
  set m [do_search]

  set r 0
  foreach f {func_1 func_10 func_11 func_12 \
	       func_13 func_14 func_15 func_2 \
	       func_3 func_4 func_5 func_6 \
	       func_7 func_8 func_9 main \
	       static_func_1 static_func_10 static_func_11 static_func_12 \
	       static_func_13 static_func_14 static_func_15 static_func_2 \
	       static_func_3 static_func_4 static_func_5 static_func_6 \
	       static_func_7 static_func_8 static_func_9} {
    if {[lsearch $m $f] != -1} {
      incr r
    }
  }

  set r
} {31}

if {$test_ran} {
  clear
}

# Test:  browser-4.3
# Desc:  Check all functions in stack2.c
gdbtk_test browser-4.3 {all functions in stack2.c} {
  set_regexp ""
  set_search_mode "ends with"
  clear
  select stack2.c
  set m [do_search]

  set r 0
  foreach f {extern_func1_1 extern_func1_10 extern_func1_11 \
	       extern_func1_12 extern_func1_13 extern_func1_14 extern_func1_15 \
	       extern_func1_2 extern_func1_3 extern_func1_4 extern_func1_5 \
	       extern_func1_6 extern_func1_7 extern_func1_8 extern_func1_9} {
    if {[lsearch $m $f] != -1} {
      incr r
    }
  }

  set r
} {15}
if {$test_ran} {
  clear
}

# Test:  browser-4.4
# Desc:  Check for all functions matching "func_1" - mode ends with
gdbtk_test browser-4.4 {all functions matching "func_1" - "mode ends with"} {
  set_search_mode "ends with"
  set_regexp "func_1"
  select_all
  do_search
} {func_1 static_func_1}

# Test:  browser-4.5
# Desc:  Check all functions matching "func_1" in stack1.c - mode ends with
gdbtk_test browser-4.5 {all functions matching "func_1" in stack1.c - "mode ends with"} {
  set_search_mode "ends with"
  set_regexp "func_1"
  clear
  select stack1.c
  do_search
} {func_1 static_func_1}
if {$test_ran} {
  clear
}

# Test:  browser-4.6
# Desc:  Check all functions matching "func_1" in stack2.c - mode ends with
gdbtk_test browser-4.6 {all functions matching "func" in stack2.c - mode "ends with"} {
  set_search_mode "ends with"
  set_regexp func_1
  clear
  select stack2.c
  do_search
} {}

# Test:  browser-4.7
# Desc:  Check all functions matching "foobar"
gdbtk_test browser-4.7 {all functions matching "foobar"} {
  set_search_mode "ends with"
  select_all
  set_regexp foobar
  do_search
} {}

# Test:  browser-4.8
# Desc:  Check all functions matching "foobar" in stack1.c
gdbtk_test browser-4.8 {functions matching "foobar" in stack1.c} {
  set_search_mode "ends with"
  set_regexp foobar
  clear
  select stack1.c
  do_search
} {}
if {$test_ran} {
  clear
}

# Test:  browser-5.10
# Desc:  Check all functions matching regexp "func"
gdbtk_test browser-5.10 {all functions matching regexp "func"} {
  set_search_mode "matches regexp"
  set_regexp func
  select_all
  do_search
} {extern_func1_1 extern_func1_10 extern_func1_11 extern_func1_12 extern_func1_13 extern_func1_14 extern_func1_15 extern_func1_2 extern_func1_3 extern_func1_4 extern_func1_5 extern_func1_6 extern_func1_7 extern_func1_8 extern_func1_9 func_1 func_10 func_11 func_12 func_13 func_14 func_15 func_2 func_3 func_4 func_5 func_6 func_7 func_8 func_9 static_func_1 static_func_10 static_func_11 static_func_12 static_func_13 static_func_14 static_func_15 static_func_2 static_func_3 static_func_4 static_func_5 static_func_6 static_func_7 static_func_8 static_func_9}

# Test:  browser-5.11
# Desc:  Check all functions matching regexp "func" in stack1.c
gdbtk_test browser-5.11 {all functions matching regexp "func" in stack1.c} {
  set_search_mode "matches regexp"
  set_regexp func
  clear
  select stack1.c
  do_search
} {func_1 func_10 func_11 func_12 func_13 func_14 func_15 func_2 func_3 func_4 func_5 func_6 func_7 func_8 func_9 static_func_1 static_func_10 static_func_11 static_func_12 static_func_13 static_func_14 static_func_15 static_func_2 static_func_3 static_func_4 static_func_5 static_func_6 static_func_7 static_func_8 static_func_9}

# Test:  browser-5.12
# Desc:  Check all functions matching regexp "func" in stack2.c
gdbtk_test browser-5.12 {all functions matching regexp "func" in stack2.c} {
  set_regexp func
  clear
  select stack2.c
  do_search
} {extern_func1_1 extern_func1_10 extern_func1_11 extern_func1_12 extern_func1_13 extern_func1_14 extern_func1_15 extern_func1_2 extern_func1_3 extern_func1_4 extern_func1_5 extern_func1_6 extern_func1_7 extern_func1_8 extern_func1_9}

# Test:  browser-5.13
# Desc:  Check all functions matching regexp "\_1$"
gdbtk_test browser-5.13 {all functions matching regexp "\_1$"} {
  set_search_mode "matches regexp"
  set_regexp {\_1$}
  select_all
  do_search
} {extern_func1_1 func_1 static_func_1}

# Test:  browser-5.14
# Desc:  Check all functions matching regexp "\_1$" in stack1.c
gdbtk_test browser-5.14 {all functions matching regexp "\_1$" in stack1.c} {
  set_search_mode "matches regexp"
  set_regexp {\_1$}
  clear
  select stack1.c
  do_search
} {func_1 static_func_1}

# Test:  browser-5.15
# Desc:  Check all functions matching regexp "\_1$" in stack2.c
gdbtk_test browser-5.15 {all functions matching regexp "\_1$" in stack2.c} {
  set_search_mode "matches regexp"
  set_regexp {\_1$}
  clear
  select stack2.c
  do_search
} {extern_func1_1}

# Test:  browser-5.16
# Desc:  Check all functions matching regexp "foobar"
gdbtk_test browser-5.16 {all functions matching regexp "foobar"} {
  set_search_mode "matches regexp"
  set_regexp foobar
  select_all
  do_search
} {}

# Test:  browser-5.17
# Desc:  Check all functions matching regexp "foobar" in stack1.c
gdbtk_test browser-5.17 {all functions matching regexp "foobar" in stack1.c} {
  set_search_mode "matches regexp"
  set_regexp foobar
  clear
  select stack1.c
  do_search
} {}


# Test:  browser-6.1
# Desc:  Check select button function
gdbtk_test browser-6.1 {select button - select all} {
  clear
  select_all
  set m [$browser component file_box curselection]

  expr {[llength $m] >= 2}
} {1}

# Test:  browser-6.2
# Desc:  Check that search expressions are saved
gdbtk_test browser-6.2 {save last search expression} {
  set_regexp hello
  select_all
  do_search
  pref get gdb/search/last_symbol
} {hello}

# Test:  browser-7.1
# Desc:  Toggle all bps on
gdbtk_test browser-7.1 {toggle_all_bp on} {
  set_regexp {\_1$}
  set_search_mode "matches regexp"
  select_all
  set funcs [do_search]

  # select all to set bp on
  $browser component func_box selection set 0 end
  $browser component func_add_bp invoke

  set bps {}
  foreach f $funcs {
    if {![catch {gdb_loc $f} ls]} {
      if {[bp_exists $ls] != -1} {
	lappend bps $f
      }
    }
  }

  catch {gdb_cmd "delete" 0}
  join [lsort $bps]
} {extern_func1_1 func_1 static_func_1}

# Test:  browser-7.2
# Desc:  Toggle some bps off
gdbtk_test browser-7.2 {toggle_some_bp off} {
  set_regexp {\_1$}
  set_search_mode "matches regexp"
  select_all
  set funcs [do_search]

  $browser component func_box selection set 0 end
  $browser component func_add_bp invoke

  # Turn off all the "static_func_*" bps
  set_regexp {^static.*_1$}
  do_search
  $browser component func_box selection set 0 end
  $browser component func_remove_bp invoke
  set bps {}
  foreach f $funcs {
    if {![catch {gdb_loc $f} ls]} {
      if {[bp_exists $ls] != -1} {
	lappend bps $f
      }
    }
  }

  catch {gdb_cmd "delete" 0}

  join [lsort $bps]
} {extern_func1_1 func_1}

#
#  Exit
#
gdbtk_test_done
@


1.2
log
@        * README: New file.

        * configure.in: Check for executable filename extension.
        * Makefile.in: Add filename extensions.
        * configure: Regenerated.

        * defs: Fix typo setting _test(verbose).
        (gdbtk_test_file): New proc to load executables into gdbtk.
        (gdbtk_test_run): New proc to run executables on gdbtk.
        * browser.exp: Don't check if DISPLAY is set: let
        gdbtk_initialize_display do it all for us.
        Call gdbtk_done when finished with tests.
        * c_variable.exp: Ditto.
        * console.exp: Ditto.
        * cpp_variable.exp: Ditto.
        Only run tests if c++ is supported in the configuration.
        * srcwin.exp: Ditto the DISPLAY stuff.
        Accumulate all test results for the end and report them then.

        * browser.test: Use gdbtk_test_file and gdbtk_test_run
        to load and run an executable.
        * c_variable.test: Use gdbtk_test_file and gdbtk_test_run
        to load and run an executable.
        * srcwin.test: Ditto.
        * srcwin1.test: Ditto.
        * srcwin2.test: Ditto.
        * browser.test: (set_search_mode): Use "configure
        -value" not "entryset" to set the combobox's value. We need
        to have the command fired.
        (browser-3.5): Remove trailing whitespace which causes test to
        fail.
        (browser-4.4): Expect something rational. Regexp "\_1$" cannot
        match "func_10"!
        (browser-4.5): Ditto.
        (browser-5.12): Select all files for search to make test
        match description.
        (browser-6.2): Renamed from another test also calledd 6.1.
        (browser-7.1): Delete all breakpoints at once without from_tty.
        Select all entries in the comobox before invoking BP set/delete
        button.
        (browser-7.2): Ditto.

        * list0.c, list1.c, list0.h: New files. Grabbed from gdb.base.
        * srcwin.exp: Use these local files instead of those in gdb.base.
@
text
@a17 3
# Please email any bugs, comments, and/or additions to this file to:
# bug-gdb@@prep.ai.mit.edu

@


1.1
log
@Initial revision
@
text
@d1 2
a2 1
#   Copyright (C) 1998 Cygnus Solutions
d59 4
a62 1
  $browser component filt_type entryset $val
d102 5
a106 2
set file [file join $objdir stack]
gdb_cmd "file $file"
d363 1
a363 1
} {func_1 func_10 func_11 func_12 func_13 func_14 func_15 static_func_1 static_func_10 static_func_11 static_func_12 static_func_13 static_func_14 static_func_15 }
d479 1
a479 1
# Desc:  Check for all functions matching "func" - mode ends with
d485 1
a485 1
} {func_1 func_10 func_11 func_12 func_13 func_14 func_15 static_func_1 static_func_10 static_func_11 static_func_12 static_func_13 static_func_14 static_func_15}
d495 1
a495 1
} {func_1 func_10 func_11 func_12 func_13 func_14 func_15 static_func_1 static_func_10 static_func_11 static_func_12 static_func_13 static_func_14 static_func_15 }
d565 1
d619 9
d634 4
a637 1
  do_search
a639 3
  set_regexp .*
  set funcs [do_search]

d649 1
a649 4
  for {set i 0} {$i < 20} {incr i} {
    catch {gdb_cmd "delete $i"}
  }

d654 2
a655 2
# Desc:  Toggle all bps off
gdbtk_test browser-7.2 {toggle_all_bp off} {
d659 3
a661 1
  do_search
d664 2
a665 5
  set_regexp .*
  set funcs [do_search]

  # Turn off all static bps
  set_regexp {\_1$}
d667 2
a668 1
  $browser component func_remove_bp
d678 1
a678 3
  for {set i 0} {$i < 20} {incr i} {
    catch {gdb_cmd "delete $i"}
  }
a681 9

# Test:  browser-6.1
# Desc:  Check that search expressions are saved
gdbtk_test browser-6.1 {save last search expression} {
  set_regexp hello
  select_all
  do_search
  pref get gdb/search/last_symbol
} {hello}
@


1.1.1.1
log
@import insight-2000-02-04 snapshot (2nd try)
@
text
@@
