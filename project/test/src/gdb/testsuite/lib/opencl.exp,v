head	1.7;
access;
symbols
	gdb_7_6_1-2013-08-30-release:1.6
	gdb_7_6-2013-04-26-release:1.6
	gdb_7_6-branch:1.6.0.2
	gdb_7_6-2013-03-12-branchpoint:1.6
	gdb_7_5_1-2012-11-29-release:1.5
	gdb_7_5-2012-08-17-release:1.5
	gdb_7_5-branch:1.5.0.2
	gdb_7_5-2012-07-18-branchpoint:1.5
	gdb_7_4_1-2012-04-26-release:1.4.4.1
	gdb_7_4-2012-01-24-release:1.4.4.1
	gdb_7_4-branch:1.4.0.4
	gdb_7_4-2011-12-13-branchpoint:1.4
	gdb_7_3_1-2011-09-04-release:1.4
	gdb_7_3-2011-07-26-release:1.4
	gdb_7_3-branch:1.4.0.2
	gdb_7_3-2011-04-01-branchpoint:1.4;
locks; strict;
comment	@# @;


1.7
date	2013.08.13.15.55.52;	author tromey;	state Exp;
branches;
next	1.6;

1.6
date	2013.01.01.06.41.28;	author brobecke;	state Exp;
branches;
next	1.5;

1.5
date	2012.01.04.08.27.56;	author brobecke;	state Exp;
branches;
next	1.4;

1.4
date	2011.03.07.16.03.04;	author tromey;	state Exp;
branches
	1.4.4.1;
next	1.3;

1.3
date	2011.01.21.14.05.51;	author kwerner;	state Exp;
branches;
next	1.2;

1.2
date	2011.01.01.15.33.52;	author brobecke;	state Exp;
branches;
next	1.1;

1.1
date	2010.11.05.14.31.30;	author kwerner;	state Exp;
branches;
next	;

1.4.4.1
date	2012.01.06.04.54.30;	author brobecke;	state Exp;
branches;
next	;


desc
@@


1.7
log
@add caching procs to test suite

In the fully parallel mode, each .exp file can be run in parallel (at
least conceptually -- the actual split may not be so severe).  This
means that procs that compute a result and cache it are not going to
function very well.  The test they run will be invoked over and over.

This patch introduces a generic caching mechanism and changes various
result-caching procs to use it.  This is a cleanup to introduce the
basic change; the results aren't written to disk yet.

A caching proc is defined using gdb_caching_proc, which works like
"proc", except that it caches the result of the body.

	* lib/cache.exp: New file.
	* lib/cell.exp (skip_cell_tests): Use gdb_caching_proc.
	* lib/gdb.exp: Load cache.exp.
	(support_complex_tests, is_ilp32_target, is_lp64_target)
	(is_amd64_regs_target, skip_altivec_tests, skip_vsx_tests)
	(gdb_skip_xml_test): Use gdb_caching_proc.
	* lib/opencl.exp (skip_opencl_tests): Use gdb_caching_proc.
@
text
@# Copyright 2010-2013 Free Software Foundation, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Contributed by Ken Werner <ken.werner@@de.ibm.com>.
#
# Support library for testing OpenCL GDB features

# Compile OpenCL programs using a generic host app.
proc gdb_compile_opencl_hostapp {clsource executable options} {
    global srcdir objdir subdir
    set src "${srcdir}/lib/cl_util.c ${srcdir}/lib/opencl_hostapp.c"
    set binfile ${objdir}/${subdir}/${executable}
    set compile_flags [concat additional_flags=-I${srcdir}/lib/ additional_flags=-DCL_SOURCE=$clsource]
    set options_opencl [concat {debug} $compile_flags $options [list libs=-lOpenCL]]
    return [gdb_compile ${src} ${binfile} "executable" ${options_opencl}]
}

# Run a test on the target to check if it supports OpenCL. Return 0 if so, 1 if
# it does not.
gdb_caching_proc skip_opencl_tests {
    global srcdir objdir subdir gdb_prompt
    global inferior_exited_re

    set me "skip_opencl_tests"

    # Set up, compile, and execute an OpenCL program.  Include the current
    # process ID in the file name of the executable to prevent conflicts with
    # invocations for multiple testsuites.
    set clprogram [remote_download target ${srcdir}/lib/opencl_kernel.cl]
    set executable opencltest[pid].x

    verbose "$me:  compiling OpenCL test app" 2
    set compile_flags {debug nowarnings quiet}

    if { [gdb_compile_opencl_hostapp "${clprogram}" "${executable}" "${compile_flags}" ] != "" } {
	remote_file target delete ${clprogram}
        verbose "$me:  compiling OpenCL binary failed, returning 1" 2
	return 1
    }

    # Compilation succeeded so now run it via gdb.
    clean_restart "$executable"
    gdb_run_cmd
    gdb_expect 30 {
        -re ".*$inferior_exited_re normally.*${gdb_prompt} $" {
            verbose -log "\n$me: OpenCL support detected"
            set result 0
        }
        -re ".*$inferior_exited_re code.*${gdb_prompt} $" {
            verbose -log "\n$me: OpenCL support not detected"
            set result 1
        }
        default {
            verbose -log "\n$me OpenCL support not detected (default case)"
            set result 1
        }
    }
    gdb_exit
    remote_file build delete $executable

    # Delete the OpenCL program source file.
    remote_file target delete ${clprogram}

    verbose "$me:  returning $result" 2
    return $result
}
@


1.6
log
@Update years in copyright notice for the GDB files.

Two modifications:
  1. The addition of 2013 to the copyright year range for every file;
  2. The use of a single year range, instead of potentially multiple
     year ranges, as approved by the FSF.
@
text
@d32 2
a33 2
proc skip_opencl_tests {} {
    global skip_opencl_tests_saved srcdir objdir subdir gdb_prompt
a35 2
    # Use the cached value, if it exists.  Cache value per "board" to handle
    # runs with multiple options (e.g. unix/{-m32,-64}) correctly.
a36 5
    set board [target_info name]
    if [info exists skip_opencl_tests_saved($board)] {
        verbose "$me:  returning saved $skip_opencl_tests_saved($board)" 2
        return $skip_opencl_tests_saved($board)
    }
d48 1
d50 1
a50 1
	return [set skip_opencl_tests_saved($board) 1]
d59 1
a59 1
            set skip_opencl_tests_saved($board) 0
d63 1
a63 1
            set skip_opencl_tests_saved($board) 1
d67 1
a67 1
            set skip_opencl_tests_saved($board) 1
d76 2
a77 2
    verbose "$me:  returning $skip_opencl_tests_saved($board)" 2
    return $skip_opencl_tests_saved($board)
@


1.5
log
@Copyright year update in most files of the GDB Project.

gdb/ChangeLog:

        Copyright year update in most files of the GDB Project.
@
text
@d1 1
a1 1
# Copyright 2010-2012 Free Software Foundation, Inc.
@


1.4
log
@gdb
	* infrun.c (print_exited_reason): Include inferior id and pid in
	message.
gdb/testsuite
	* lib/opencl.exp (skip_opencl_tests): Update for exit message
	change.
	* lib/mi-support.exp (mi_gdb_test): Update for exit message
	change.
	* lib/gdb.exp (gdb_test_multiple): Update comment.  Update for
	exit message change.
	(skip_altivec_tests): Update for exit message change.
	(skip_vsx_tests): Likewise.
	(gdb_continue_to_end): Likewise.  Add 'command' argument.
	* lib/cell.exp (skip_cell_tests): Update for exit message change.
	* gdb.threads/tls.exp: Update for exit message change.
	* gdb.threads/thread-unwindonsignal.exp: Use
	gdb_continue_to_end.
	* gdb.threads/step.exp (step_it): Update for exit message change.
	(continue_all): Likewise.
	* gdb.threads/print-threads.exp (test_all_threads): Update for
	exit message change.
	* gdb.threads/interrupted-hand-call.exp: Use
	gdb_continue_to_end.
	* gdb.threads/execl.exp: Use gdb_continue_to_end.
	* gdb.python/py-prettyprint.exp (run_lang_tests): Use
	gdb_continue_to_end.
	* gdb.hp/gdb.objdbg/objdbg02.exp: Use gdb_continue_to_end.
	* gdb.hp/gdb.objdbg/objdbg01.exp: Use gdb_continue_to_end.
	* gdb.hp/gdb.defects/solib-d.exp: Update for exit message change.
	* gdb.cp/method.exp: Update for exit message change.
	* gdb.cp/mb-templates.exp: Update for exit message change.
	* gdb.cp/mb-inline.exp: Use gdb_continue_to_end.
	* gdb.cp/annota3.exp: Update for exit message change.
	* gdb.cp/annota2.exp: Update for exit message change.
	* gdb.cell/fork.exp: Use gdb_continue_to_end.
	* gdb.base/term.exp: Update for exit message change.
	* gdb.base/step-test.exp (test_i): Update for exit message change.
	* gdb.base/sigstep.exp (advance): Update for exit message change.
	(advancei): Likewise.
	* gdb.base/siginfo.exp: Update for exit message change.
	* gdb.base/shlib-call.exp: Use gdb_continue_to_end.
	* gdb.base/reread.exp: Use gdb_continue_to_end.
	* gdb.base/langs.exp: Use gdb_continue_to_end.
	* gdb.base/interrupt.exp: Update for exit message change.
	* gdb.base/gdb1555.exp: Update for exit message change.
	* gdb.base/exe-lock.exp: Use gdb_continue_to_end.
	* gdb.base/ending-run.exp: Update for exit message change.
	* gdb.base/chng-syms.exp: Update for exit message change.
	* gdb.base/checkpoint.exp: Update for exit message change.
	* gdb.base/catch-syscall.exp (check_for_program_end): Use
	gdb_continue_to_end.
	(test_catch_syscall_with_wrong_args): Likewise.
	* gdb.base/call-signal-resume.exp: Use gdb_continue_to_end.
	* gdb.base/break-interp.exp (test_ld): Update for exit message
	change.
	* gdb.base/bang.exp: Update for exit message change.
	* gdb.base/attach.exp (do_attach_tests): Use gdb_continue_to_end.
	(do_call_attach_tests): Likewise.
	* gdb.base/a2-run.exp: Update for exit message change.
	* gdb.arch/ppc-dfp.exp: Update for exit message change.
	* gdb.ada/tasks.exp: Use gdb_continue_to_end.
	* gdb.ada/catch_ex.exp: Use gdb_continue_to_end.
@
text
@d1 1
a1 1
# Copyright 2010, 2011 Free Software Foundation, Inc.
@


1.4.4.1
log
@Copyright year update in most files of the GDB Project.

gdb/ChangeLog:

        Copyright year update in most files of the GDB Project.
@
text
@d1 1
a1 1
# Copyright 2010-2012 Free Software Foundation, Inc.
@


1.3
log
@gdb/testsuite/ChangeLog

2011-01-21  Ken Werner  <ken.werner@@de.ibm.com>

        * lib/opencl.exp (skip_opencl_tests): Add missing compile_flags
        argument to the gdb_compile_opencl_hostapp call.
@
text
@d34 1
d63 1
a63 1
        -re ".*Program exited normally.*${gdb_prompt} $" {
d67 1
a67 1
        -re ".*Program exited with code.*${gdb_prompt} $" {
@


1.2
log
@run copyright.sh for 2011.
@
text
@d53 1
a53 1
    if { [gdb_compile_opencl_hostapp "${clprogram}" "${executable}" "" ] != "" } {
@


1.1
log
@gdb:
	* NEWS: Mention OpenCL C language support.
	* Makefile.in (SFILES): Add opencl-lang.c.
	(COMMON_OBS): Add opencl-lang.o.
	* opencl-lang.c: New File
	* defs.h (enum language): Add language_opencl.
	* dwarf2read.c (read_file_scope): Handle DW_AT_producer for the
	IBM XL C OpenCL compiler.
	* c-lang.h: Include "parser-defs.h".
	(evaluate_subexp_c): Declare.
	* c-lang.c (evaluate_subexp_c): Remove the static qualifier.
	(c_op_print_tab): Add declaration.
	* eval.c (binop_promote): Handle language_opencl.
	* c-exp.y: Lookup the primitive types instead of referring to the
	builtins.

gdb/testsuite:
	* Makefile.in (ALL_SUBDIRS): Add gdb.opencl.
	* configure.ac (AC_OUTPUT): Add gdb.opencl/Makefile.
	* configure: Regenerate.
	* gdb.opencl/Makefile.in: New File.
	* gdb.opencl/datatypes.exp: Likewise.
	* gdb.opencl/datatypes.cl: Likewise.
	* gdb.opencl/operators.exp: Likewise.
	* gdb.opencl/operators.cl: Likewise.
	* gdb.opencl/vec_comps.exp: Likewise.
	* gdb.opencl/vec_comps.cl: Likewise.
	* gdb.opencl/convs_casts.exp: Likewise.
	* gdb.opencl/convs_casts.cl: Likewise.
	* lib/opencl.exp: Likewise.
	* lib/opencl_hostapp.c: Likewise.
	* lib/opencl_kernel.cl: Likewise.
	* lib/cl_util.c: Likewise.
	* lib/cl_util.c: Likewise.
	* gdb.base/default.exp (set language): Add "opencl" to the list of
	languages.

gdb/doc:
	* gdb.texinfo: (Summary) Add mention about OpenCL C language support.
	(OpenCL C): New node.
@
text
@d1 1
a1 1
# Copyright 2010 Free Software Foundation, Inc.
@

