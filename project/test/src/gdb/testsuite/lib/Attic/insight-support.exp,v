head	1.8;
access;
symbols
	gdb_6_2-branch:1.6.0.56
	gdb_6_2-2004-07-10-gmt-branchpoint:1.6
	gdb_6_1_1-20040616-release:1.6
	gdb_6_1-2004-04-05-release:1.6
	drow_intercu-merge-20040402:1.6
	drow_intercu-merge-20040327:1.6
	ezannoni_pie-20040323-branch:1.6.0.54
	ezannoni_pie-20040323-branchpoint:1.6
	cagney_tramp-20040321-mergepoint:1.6
	cagney_tramp-20040309-branch:1.6.0.52
	cagney_tramp-20040309-branchpoint:1.6
	gdb_6_1-branch:1.6.0.50
	gdb_6_1-2004-03-01-gmt-branchpoint:1.6
	drow_intercu-20040221-branch:1.6.0.48
	drow_intercu-20040221-branchpoint:1.6
	cagney_bfdfile-20040213-branch:1.6.0.46
	cagney_bfdfile-20040213-branchpoint:1.6
	drow-cplus-merge-20040208:1.6
	carlton_dictionary-20040126-merge:1.6
	cagney_bigcore-20040122-branch:1.6.0.44
	cagney_bigcore-20040122-branchpoint:1.6
	drow-cplus-merge-20040113:1.6
	drow-cplus-merge-20031224:1.6
	drow-cplus-merge-20031220:1.6
	carlton_dictionary-20031215-merge:1.6
	drow-cplus-merge-20031214:1.6
	carlton-dictionary-20031111-merge:1.6
	gdb_6_0-2003-10-04-release:1.6
	kettenis_sparc-20030918-branch:1.6.0.42
	kettenis_sparc-20030918-branchpoint:1.6
	carlton_dictionary-20030917-merge:1.6
	ezannoni_pie-20030916-branchpoint:1.6
	ezannoni_pie-20030916-branch:1.6.0.40
	cagney_x86i386-20030821-branch:1.6.0.38
	cagney_x86i386-20030821-branchpoint:1.6
	carlton_dictionary-20030805-merge:1.6
	carlton_dictionary-20030627-merge:1.6
	gdb_6_0-branch:1.6.0.36
	gdb_6_0-2003-06-23-branchpoint:1.6
	jimb-ppc64-linux-20030613-branch:1.6.0.34
	jimb-ppc64-linux-20030613-branchpoint:1.6
	cagney_convert-20030606-branch:1.6.0.32
	cagney_convert-20030606-branchpoint:1.6
	cagney_writestrings-20030508-branch:1.6.0.30
	cagney_writestrings-20030508-branchpoint:1.6
	jimb-ppc64-linux-20030528-branch:1.6.0.28
	jimb-ppc64-linux-20030528-branchpoint:1.6
	carlton_dictionary-20030523-merge:1.6
	cagney_fileio-20030521-branch:1.6.0.26
	cagney_fileio-20030521-branchpoint:1.6
	kettenis_i386newframe-20030517-mergepoint:1.6
	jimb-ppc64-linux-20030509-branch:1.6.0.24
	jimb-ppc64-linux-20030509-branchpoint:1.6
	kettenis_i386newframe-20030504-mergepoint:1.6
	carlton_dictionary-20030430-merge:1.6
	kettenis_i386newframe-20030419-branch:1.6.0.22
	kettenis_i386newframe-20030419-branchpoint:1.6
	carlton_dictionary-20030416-merge:1.6
	cagney_frameaddr-20030409-mergepoint:1.6
	kettenis_i386newframe-20030406-branch:1.6.0.20
	kettenis_i386newframe-20030406-branchpoint:1.6
	cagney_frameaddr-20030403-branchpoint:1.6
	cagney_frameaddr-20030403-branch:1.6.0.18
	cagney_framebase-20030330-mergepoint:1.6
	cagney_framebase-20030326-branch:1.6.0.16
	cagney_framebase-20030326-branchpoint:1.6
	cagney_lazyid-20030317-branch:1.6.0.14
	cagney_lazyid-20030317-branchpoint:1.6
	kettenis-i386newframe-20030316-mergepoint:1.6
	offbyone-20030313-branch:1.6.0.12
	offbyone-20030313-branchpoint:1.6
	kettenis-i386newframe-20030308-branch:1.6.0.10
	kettenis-i386newframe-20030308-branchpoint:1.6
	carlton_dictionary-20030305-merge:1.6
	cagney_offbyone-20030303-branch:1.6.0.8
	cagney_offbyone-20030303-branchpoint:1.6
	carlton_dictionary-20030207-merge:1.6
	interps-20030203-mergepoint:1.6
	interps-20030202-branch:1.6.0.6
	interps-20030202-branchpoint:1.6
	cagney-unwind-20030108-branch:1.6.0.4
	cagney-unwind-20030108-branchpoint:1.6
	carlton_dictionary-20021223-merge:1.6
	gdb_5_3-2002-12-12-release:1.5.14.1
	carlton_dictionary-20021115-merge:1.6
	kseitz_interps-20021105-merge:1.6
	kseitz_interps-20021103-merge:1.6
	drow-cplus-merge-20021020:1.6
	drow-cplus-merge-20021025:1.6
	carlton_dictionary-20021025-merge:1.6
	carlton_dictionary-20021011-merge:1.6
	drow-cplus-branch:1.6.0.2
	drow-cplus-branchpoint:1.6
	kseitz_interps-20020930-merge:1.6
	carlton_dictionary-20020927-merge:1.6
	carlton_dictionary-branch:1.5.0.16
	carlton_dictionary-20020920-branchpoint:1.5
	gdb_5_3-branch:1.5.0.14
	gdb_5_3-2002-09-04-branchpoint:1.5
	kseitz_interps-20020829-merge:1.5
	cagney_sysregs-20020825-branch:1.5.0.12
	cagney_sysregs-20020825-branchpoint:1.5
	readline_4_3-import-branch:1.5.0.10
	readline_4_3-import-branchpoint:1.5
	gdb_5_2_1-2002-07-23-release:1.5
	kseitz_interps-20020528-branch:1.5.0.8
	kseitz_interps-20020528-branchpoint:1.5
	cagney_regbuf-20020515-branch:1.5.0.6
	cagney_regbuf-20020515-branchpoint:1.5
	jimb-macro-020506-branch:1.5.0.4
	jimb-macro-020506-branchpoint:1.5
	gdb_5_2-2002-04-29-release:1.5
	gdb_5_2-branch:1.5.0.2
	gdb_5_2-2002-03-03-branchpoint:1.5
	cygnus_cvs_20020108_pre:1.5;
locks; strict;
comment	@# @;


1.8
date	2004.07.17.02.03.00;	author cagney;	state dead;
branches;
next	1.7;

1.7
date	2004.07.14.18.55.22;	author hunt;	state Exp;
branches;
next	1.6;

1.6
date	2002.09.27.14.49.26;	author kseitz;	state Exp;
branches
	1.6.48.1
	1.6.56.1;
next	1.5;

1.5
date	2001.10.04.22.11.12;	author fche;	state Exp;
branches
	1.5.8.1
	1.5.14.1
	1.5.16.1;
next	1.4;

1.4
date	2001.09.19.15.39.54;	author fche;	state Exp;
branches;
next	1.3;

1.3
date	2001.09.19.00.08.43;	author kseitz;	state Exp;
branches;
next	1.2;

1.2
date	2001.09.15.17.11.24;	author fche;	state Exp;
branches;
next	1.1;

1.1
date	2001.08.30.16.34.04;	author kseitz;	state Exp;
branches;
next	;

1.5.8.1
date	2002.10.01.00.46.33;	author kseitz;	state Exp;
branches;
next	;

1.5.14.1
date	2002.09.28.15.10.34;	author cagney;	state Exp;
branches;
next	;

1.5.16.1
date	2002.09.27.20.03.19;	author carlton;	state Exp;
branches;
next	;

1.6.48.1
date	2004.09.16.17.01.47;	author drow;	state dead;
branches;
next	;

1.6.56.1
date	2004.07.17.02.04.03;	author cagney;	state dead;
branches;
next	;


desc
@@


1.8
log
@2004-07-16  Andrew Cagney  <cagney@@redhat.com>

	* lib/insight-support.exp: Delete file.
	* lib/java.exp (java_init): Fix copyright.
@
text
@# GDB Testsuite Support for Insight.
#
# Copyright 2001, 2004 Red Hat, Inc.
#
# This program is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License (GPL) as published by
# the Free Software Foundation; either version 2 of the License, or (at
# your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# Initializes the display for gdbtk testing.
# Returns 1 if tests should run, 0 otherwise.
proc gdbtk_initialize_display {} {
  global _using_windows

  # This is hacky, but, we don't have much choice. When running
  # expect under Windows, tcl_platform(platform) is "unix".
  if {![info exists _using_windows]} {
    set _using_windows [expr {![catch {exec cygpath --help}]}]
  }

  if {![_gdbtk_xvfb_init]} {
    if {$_using_windows} {
      untested "No GDB_DISPLAY -- skipping tests"
    } else {
      untested "No GDB_DISPLAY or Xvfb -- skipping tests"
    }

    return 0
  }

  return 1
}

# From dejagnu:
# srcdir = testsuite src dir (e.g., devo/gdb/testsuite)
# objdir = testsuite obj dir (e.g., gdb/testsuite)
# subdir = subdir of testsuite (e.g., gdb.gdbtk)
#
# To gdbtk:
# env(DEFS)=the "defs" files (e.g., devo/gdb/testsuite/gdb.gdbtk/defs)
# env(SRCDIR)=directory containing the test code (e.g., *.test)
# env(OBJDIR)=directory which contains any executables
#            (e.g., gdb/testsuite/gdb.gdbtk)
proc gdbtk_start {test} {
  global verbose
  global GDB
  global GDBFLAGS
  global env srcdir subdir objdir

  gdb_stop_suppressing_tests;

  # Need to convert ::GDB to use (-)?insight...
  if {[regsub {gdb$} $GDB insight newGDB]} {
    set INSIGHT $newGDB
  } else {
    perror "Cannot find Insight executable"
    exit 1
  }

  verbose "Starting $INSIGHT -nx -q --tclcommand=$test"

  set real_test [which $test]
  if {$real_test == 0} {
    perror "$test is not found"
    exit 1
  }

  if {![is_remote host]} {
    if { [which $INSIGHT] == 0 } {
      perror "$INSIGHT does not exist."
      exit 1
    }
  }

  set wd [pwd]

  # Find absolute path to test
  set test [to_tcl_path -abs $test]

  # Set some environment variables
  cd $srcdir
  set abs_srcdir [pwd]
  set env(DEFS) [to_tcl_path -abs [file join $abs_srcdir $subdir defs]]

  cd $wd
  cd [file join $objdir $subdir]
  set env(OBJDIR) [pwd]
  cd $wd

  # Set info about target into env
  _gdbtk_export_target_info

  set env(SRCDIR) $abs_srcdir
  set env(GDBTK_VERBOSE) 1
  set env(GDBTK_LOGFILE) [to_tcl_path [file join $objdir gdb.log]]
  unset -nocomplain env(TCL_LIBRARY)

  set err [catch {exec $INSIGHT -nx -q --tclcommand=$test} res]
  if { $err } {
    perror "Execing $INSIGHT failed: $res"
    append res "\nERROR gdb-crash"
  }
  return $res
}

# Start xvfb when using it.
# The precedence is:
#   1. If GDB_DISPLAY is set (and not ""), use it
#   2. If Xvfb exists, use it (not on cygwin)
#   3. Skip tests
proc _gdbtk_xvfb_init {} {
  global env spawn_id _xvfb_spawn_id _using_windows

  if {[info exists env(GDB_DISPLAY)]} {
    if {$env(GDB_DISPLAY) != ""} {
      set env(DISPLAY) $env(GDB_DISPLAY)
    } else {
      # Suppress tests
      return 0
    }
  } elseif {!$_using_windows && [which Xvfb] != 0} {
    set screen ":[getpid]"
    set pid [spawn  Xvfb $screen -ac]
    set _xvfb_spawn_id $spawn_id
    set env(DISPLAY) localhost$screen
  } else {
    # No Xvfb found -- skip test
    return 0
  }

  return 1
}

# Kill xvfb
proc _gdbtk_xvfb_exit {} {
  global objdir subdir env _xvfb_spawn_id

  if {[info exists _xvfb_spawn_id]} {
    exec kill [exp_pid -i $_xvfb_spawn_id]
    wait -i $_xvfb_spawn_id
  }
}

# help proc for setting tcl-style paths from unix-style paths
# pass "-abs" to make it an absolute path
proc to_tcl_path {unix_path {arg {}}} {
  global _using_windows

  if {[string compare $unix_path "-abs"] == 0} {
    set unix_path $arg
    set wd [pwd]
    cd [file dirname $unix_path]
    set dirname [pwd]
    set unix_name [file join $dirname [file tail $unix_path]]
    cd $wd
  }

  if {$_using_windows} {
    set unix_path [exec cygpath -aw $unix_path]
    set unix_path [join [split $unix_path \\] /]
  }

  return $unix_path
}
  
# Set information about the target into the environment
# variable TARGET_INFO. This array will contain a list
# of commands that are necessary to run a target.
#
# This is mostly devined from how dejagnu works, what
# procs are defined, and analyzing unix.exp, monitor.exp,
# and sim.exp.
#
# Array elements exported:
# Index   Meaning
# -----   -------
# init    list of target/board initialization commands
# target  target command for target/board
# load    load command for target/board
# run     run command for target_board
proc _gdbtk_export_target_info {} {
  global env

  # Figure out what "target class" the testsuite is using,
  # i.e., sim, monitor, native
  if {[string compare [info proc gdb_target_monitor] gdb_target_monitor] == 0} {
    # Using a monitor/remote target
    set target monitor
  } elseif {[string compare [info proc gdb_target_sim] gdb_target_sim] == 0} {
    # Using a simulator target
    set target simulator
  } elseif {[string compare [info proc gdb_target_sid] gdb_target_sid] == 0} {
    # Using sid
    set target sid
  } else {
    # Assume native
    set target native
  }

  # Now setup the array to be exported.
  set info(init) {}
  set info(target) {}
  set info(load) {}
  set info(run) {}

  switch $target {
    simulator {
      set opts "[target_info gdb,target_sim_options]"
      set info(target) "target sim $opts"
      set info(load) "load"
      set info(run) "run"
    }

    monitor {
      # Setup options for the connection
      if {[target_info exists baud]} {
	lappend info(init) "set remotebaud [target_info baud]"
      }
      if {[target_info exists binarydownload]} {
	lappend info(init) "set remotebinarydownload [target_info binarydownload]"
      }
      if {[target_info exists disable_x_packet]} {
	lappend info(init) "set remote X-packet disable"
      }
      if {[target_info exists disable_z_packet]} {
	lappend info(init) "set remote Z-packet disable"
      }

      # Get target name and connection info
      if {[target_info exists gdb_protocol]} {
	set targetname "[target_info gdb_protocol]"
      } else {
	set targetname "not_specified"
      }
      if {[target_info exists gdb_serial]} {
	set serialport "[target_info gdb_serial]"
      } elseif {[target_info exists netport]} {
	set serialport "[target_info netport]"
      } else {
	set serialport "[target_info serial]"
      }

      set info(target) "target $targetname $serialport"
      set info(load) "load"
      set info(run) "continue"
    }

    sid {
      # We must start sid first, since Insight won't have a clue
      # about how to do this.
      sid_start
      set info(target) "target [target_info gdb_protocol] [target_info netport]"
      set info(load) "load"
      set info(run) "continue"
    }

    native {
      set info(run) "run"
    }
  }

  # Export the array to the environment
  set env(TARGET_INFO) [array get info]
}

# gdbtk tests call this function to print out the results of the
# tests. The argument is a proper list of lists of the form:
# {status name description msg}. All of these things typically
# come from the testsuite harness.
proc gdbtk_analyze_results {results} {
  foreach test $results {
    set status [lindex $test 0]
    set name [lindex $test 1]
    set description [lindex $test 2]
    set msg [lindex $test 3]

    switch $status {
      PASS {
	pass "$description ($name)"
      }

      FAIL {
	fail "$description ($name)"
      }

      ERROR {
	perror "$name"
      }

      XFAIL {
	xfail "$description ($name)"
      }

      XPASS {
	xpass "$description ($name)"
      }
    }
  }
}

proc gdbtk_done {{results {}}} {
  global _xvfb_spawn_id
  gdbtk_analyze_results $results

  # Kill off xvfb if using it
  if {[info exists _xvfb_spawn_id]} {
    _gdbtk_xvfb_exit
  }

  # Yich. If we're using sid, we must kill it
  if {[string compare [info proc gdb_target_sid] gdb_target_sid] == 0} {
    sid_exit
  }
}
@


1.7
log
@2004-07-14  Martin Hunt  <hunt@@redhat.com>

	* lib/insight-support.exp (gdbtk_start): Unset TCL_LIBRARY
	which fixes some problems where init.tcl was not found.
@
text
@@


1.6
log
@        * lib/insight-support.exp (gdbtk_start): Figure out where
        the insight executable is based on where gdb is. Use this
        executable to start insight instead of gdb.
@
text
@d3 1
a3 1
# Copyright 2001 Red Hat, Inc.
d101 1
@


1.6.48.1
log
@Merge mainline to intercu branch - 2004-09-15
@
text
@@


1.6.56.1
log
@2004-07-16  Andrew Cagney  <cagney@@redhat.com>

	* lib/insight-support.exp: Delete file.
	* lib/java.exp (java_init): Fix copyright.
@
text
@@


1.5
log
@2001-10-04  Frank Ch. Eigler  <fche@@redhat.com>

	* lib/insight-support.exp (gdbtk_start): Don't exit dejagnu
	if gdb child process crashes, just signal an error.
@
text
@d57 9
a65 1
  verbose "Starting $GDB -nx -q --tclcommand=$test"
d74 2
a75 2
    if { [which $GDB] == 0 } {
      perror "$GDB does not exist."
d102 1
a102 1
  set err [catch {exec $GDB -nx -q --tclcommand=$test} res]
d104 1
a104 1
    perror "Execing $GDB failed: $res"
@


1.5.8.1
log
@Merge with kseitz_interps-20020930-merge.
@
text
@d57 1
a57 9
  # Need to convert ::GDB to use (-)?insight...
  if {[regsub {gdb$} $GDB insight newGDB]} {
    set INSIGHT $newGDB
  } else {
    perror "Cannot find Insight executable"
    exit 1
  }

  verbose "Starting $INSIGHT -nx -q --tclcommand=$test"
d66 2
a67 2
    if { [which $INSIGHT] == 0 } {
      perror "$INSIGHT does not exist."
d94 1
a94 1
  set err [catch {exec $INSIGHT -nx -q --tclcommand=$test} res]
d96 1
a96 1
    perror "Execing $INSIGHT failed: $res"
@


1.5.14.1
log
@2002-09-28  Andrew Cagney  <ac131313@@redhat.com>

	Import from mainline:

	From Grace Sainsbury <graces@@redhat.com>:
	* Makefile.in (gdbtk-main.o): New target.
	(gdb.o): New target.
	(main_h): Define.
	(main.o): Update dependencies.
	(gdb$(EXEEXT)): Add gdb.o.
	(SUBDIR_GDBTK_SRCS): Add gdbtk-main.c.
	(SUBDIR_GDBTK_ALL, SUBDIR_GDBTK_UNINSTALL): Set.
	(SUBDIR_GDBTK_CLEAN): Set.
	(install-gdbtk): Install the insight binary.
	(uninstall-gdbtk): New target.
	(all-gdbtk, clean-gdbtk): New rule.
	* top.c (use_windows): Default to zero.
	* main.c: Include "main.h".
	(main): Delete.
	(struct captured_main_args): Delete.
	(gdb_main): New function.
	* main.h: New file.
	* gdb.c: New File.

Index: gdbtk/ChangeLog
2002-09-26  Andrew Cagney  <ac131313@@redhat.com>

	Import from mainline:

	From Grace Sainsbury <graces@@redhat.com>:
	* generic/gdbtk-main.c: New file.

Index: testsuite/gdb.gdbtk/ChangeLog
2002-09-28  Andrew Cagney  <ac131313@@redhat.com>

	Import from mainline:
	2002-09-26  Keith Seitz  <keiths@@redhat.com>
        * lib/insight-support.exp (gdbtk_start): Figure out where
        the insight executable is based on where gdb is. Use this
        executable to start insight instead of gdb.
@
text
@d57 1
a57 9
  # Need to convert ::GDB to use (-)?insight...
  if {[regsub {gdb$} $GDB insight newGDB]} {
    set INSIGHT $newGDB
  } else {
    perror "Cannot find Insight executable"
    exit 1
  }

  verbose "Starting $INSIGHT -nx -q --tclcommand=$test"
d66 2
a67 2
    if { [which $INSIGHT] == 0 } {
      perror "$INSIGHT does not exist."
d94 1
a94 1
  set err [catch {exec $INSIGHT -nx -q --tclcommand=$test} res]
d96 1
a96 1
    perror "Execing $INSIGHT failed: $res"
@


1.5.16.1
log
@Merge with mainline; tag is carlton_dictionary-20020927-merge
@
text
@d57 1
a57 9
  # Need to convert ::GDB to use (-)?insight...
  if {[regsub {gdb$} $GDB insight newGDB]} {
    set INSIGHT $newGDB
  } else {
    perror "Cannot find Insight executable"
    exit 1
  }

  verbose "Starting $INSIGHT -nx -q --tclcommand=$test"
d66 2
a67 2
    if { [which $INSIGHT] == 0 } {
      perror "$INSIGHT does not exist."
d94 1
a94 1
  set err [catch {exec $INSIGHT -nx -q --tclcommand=$test} res]
d96 1
a96 1
    perror "Execing $INSIGHT failed: $res"
@


1.4
log
@* approved by kseitz

2001-09-19  Frank Ch. Eigler  <fche@@redhat.com>

	* lib/insight-support.exp (_gdbtk_xvfb_init): Set DISPLAY
	to localhost:NNN instead of :NNN, in case Xvfb is listening
	only on TCP.
@
text
@d97 1
a97 1
    exit 1;
@


1.3
log
@	* lib/insight-support.exp (_gdbtk_export_target_info): Add
	support for running tests against sid targets.
	(gdbtk_done): Ditto.
@
text
@d121 1
a121 1
    set env(DISPLAY) $screen
@


1.2
log
@2001-09-15  Frank Ch. Eigler  <fche@@redhat.com>

	* lib/insight-support.exp (_gdbtk_xvfb_init): Start Xvfb with
	the "-ac" (disable access control) flag.
@
text
@d188 3
d244 9
d304 5
@


1.1
log
@	* lib/gdb.exp: Move all insight-related functionality into
	separate file.
	* lib/insight-support.exp: New file.
@
text
@d119 1
a119 1
    set pid [spawn  Xvfb $screen]
@

