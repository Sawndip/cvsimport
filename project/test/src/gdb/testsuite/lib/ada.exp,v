head	1.17;
access;
symbols
	gdb_7_6_1-2013-08-30-release:1.17
	gdb_7_6-2013-04-26-release:1.17
	gdb_7_6-branch:1.17.0.2
	gdb_7_6-2013-03-12-branchpoint:1.17
	gdb_7_5_1-2012-11-29-release:1.15
	gdb_7_5-2012-08-17-release:1.15
	gdb_7_5-branch:1.15.0.2
	gdb_7_5-2012-07-18-branchpoint:1.15
	gdb_7_4_1-2012-04-26-release:1.14.2.1
	gdb_7_4-2012-01-24-release:1.14.2.1
	gdb_7_4-branch:1.14.0.2
	gdb_7_4-2011-12-13-branchpoint:1.14
	gdb_7_3_1-2011-09-04-release:1.13
	gdb_7_3-2011-07-26-release:1.13
	gdb_7_3-branch:1.13.0.2
	gdb_7_3-2011-04-01-branchpoint:1.13
	gdb_7_2-2010-09-02-release:1.12
	gdb_7_2-branch:1.12.0.4
	gdb_7_2-2010-07-07-branchpoint:1.12
	gdb_7_1-2010-03-18-release:1.12
	gdb_7_1-branch:1.12.0.2
	gdb_7_1-2010-02-18-branchpoint:1.12
	gdb_7_0_1-2009-12-22-release:1.10
	gdb_7_0-2009-10-06-release:1.10
	gdb_7_0-branch:1.10.0.4
	gdb_7_0-2009-09-16-branchpoint:1.10
	arc-sim-20090309:1.9
	msnyder-checkpoint-072509-branch:1.10.0.2
	msnyder-checkpoint-072509-branchpoint:1.10
	arc-insight_6_8-branch:1.9.0.16
	arc-insight_6_8-branchpoint:1.9
	insight_6_8-branch:1.9.0.14
	insight_6_8-branchpoint:1.9
	reverse-20081226-branch:1.9.0.12
	reverse-20081226-branchpoint:1.9
	multiprocess-20081120-branch:1.9.0.10
	multiprocess-20081120-branchpoint:1.9
	reverse-20080930-branch:1.9.0.8
	reverse-20080930-branchpoint:1.9
	reverse-20080717-branch:1.9.0.6
	reverse-20080717-branchpoint:1.9
	msnyder-reverse-20080609-branch:1.9.0.4
	msnyder-reverse-20080609-branchpoint:1.9
	drow-reverse-20070409-branch:1.7.0.2
	drow-reverse-20070409-branchpoint:1.7
	gdb_6_8-2008-03-27-release:1.9
	gdb_6_8-branch:1.9.0.2
	gdb_6_8-2008-02-26-branchpoint:1.9
	gdb_6_7_1-2007-10-29-release:1.8
	gdb_6_7-2007-10-10-release:1.8
	gdb_6_7-branch:1.8.0.2
	gdb_6_7-2007-09-07-branchpoint:1.8
	insight_6_6-20070208-release:1.4
	gdb_6_6-2006-12-18-release:1.4
	gdb_6_6-branch:1.4.0.28
	gdb_6_6-2006-11-15-branchpoint:1.4
	insight_6_5-20061003-release:1.4
	gdb-csl-symbian-6_4_50_20060226-12:1.4
	gdb-csl-sourcerygxx-3_4_4-25:1.4
	nickrob-async-20060828-mergepoint:1.4
	gdb-csl-symbian-6_4_50_20060226-11:1.4
	gdb-csl-sourcerygxx-4_1-17:1.4
	gdb-csl-20060226-branch-local-2:1.4
	gdb-csl-sourcerygxx-4_1-14:1.4
	gdb-csl-sourcerygxx-4_1-13:1.4
	gdb-csl-sourcerygxx-4_1-12:1.4
	gdb-csl-sourcerygxx-3_4_4-21:1.4
	gdb_6_5-20060621-release:1.4
	gdb-csl-sourcerygxx-4_1-9:1.4
	gdb-csl-sourcerygxx-4_1-8:1.4
	gdb-csl-sourcerygxx-4_1-7:1.4
	gdb-csl-arm-2006q1-6:1.4
	gdb-csl-sourcerygxx-4_1-6:1.4
	gdb-csl-symbian-6_4_50_20060226-10:1.4
	gdb-csl-symbian-6_4_50_20060226-9:1.4
	gdb-csl-symbian-6_4_50_20060226-8:1.4
	gdb-csl-coldfire-4_1-11:1.4
	gdb-csl-sourcerygxx-3_4_4-19:1.4
	gdb-csl-coldfire-4_1-10:1.4
	gdb_6_5-branch:1.4.0.26
	gdb_6_5-2006-05-14-branchpoint:1.4
	gdb-csl-sourcerygxx-4_1-5:1.4
	nickrob-async-20060513-branch:1.4.0.24
	nickrob-async-20060513-branchpoint:1.4
	gdb-csl-sourcerygxx-4_1-4:1.4
	msnyder-reverse-20060502-branch:1.4.0.22
	msnyder-reverse-20060502-branchpoint:1.4
	gdb-csl-morpho-4_1-4:1.4
	gdb-csl-sourcerygxx-3_4_4-17:1.4
	readline_5_1-import-branch:1.4.0.20
	readline_5_1-import-branchpoint:1.4
	gdb-csl-20060226-branch-merge-to-csl-symbian-1:1.4
	gdb-csl-symbian-20060226-branch:1.4.0.18
	gdb-csl-symbian-20060226-branchpoint:1.4
	gdb-csl-20060226-branch-merge-to-csl-local-1:1.4
	msnyder-reverse-20060331-branch:1.4.0.16
	msnyder-reverse-20060331-branchpoint:1.4
	gdb-csl-available-20060303-branch:1.4.0.14
	gdb-csl-available-20060303-branchpoint:1.4
	gdb-csl-20060226-branch:1.4.0.12
	gdb-csl-20060226-branchpoint:1.4
	gdb_6_4-20051202-release:1.4
	msnyder-fork-checkpoint-branch:1.4.0.10
	msnyder-fork-checkpoint-branchpoint:1.4
	gdb-csl-gxxpro-6_3-branch:1.4.0.8
	gdb-csl-gxxpro-6_3-branchpoint:1.4
	gdb_6_4-branch:1.4.0.6
	gdb_6_4-2005-11-01-branchpoint:1.4
	gdb-csl-arm-20051020-branch:1.4.0.4
	gdb-csl-arm-20051020-branchpoint:1.4
	gdb-csl-arm-20050325-2005-q1b:1.4
	gdb-csl-arm-20050325-2005-q1a:1.4
	csl-arm-20050325-branch:1.4.0.2
	csl-arm-20050325-branchpoint:1.4
	gdb-post-i18n-errorwarning-20050211:1.4
	gdb-pre-i18n-errorwarning-20050211:1.4
	gdb_6_3-20041109-release:1.3
	gdb_6_3-branch:1.3.0.6
	gdb_6_3-20041019-branchpoint:1.3
	drow_intercu-merge-20040921:1.3
	drow_intercu-merge-20040915:1.3
	jimb-gdb_6_2-e500-branch:1.3.0.8
	jimb-gdb_6_2-e500-branchpoint:1.3
	gdb_6_2-20040730-release:1.3
	gdb_6_2-branch:1.3.0.4
	gdb_6_2-2004-07-10-gmt-branchpoint:1.3
	drow_intercu-20040221-branch:1.3.0.2
	drow_intercu-merge-20040402:1.3;
locks; strict;
comment	@# @;


1.17
date	2013.01.01.06.41.28;	author brobecke;	state Exp;
branches;
next	1.16;

1.16
date	2012.07.26.18.43.02;	author tromey;	state Exp;
branches;
next	1.15;

1.15
date	2012.01.04.08.27.56;	author brobecke;	state Exp;
branches;
next	1.14;

1.14
date	2011.06.29.14.44.45;	author tromey;	state Exp;
branches
	1.14.2.1;
next	1.13;

1.13
date	2011.01.01.15.33.51;	author brobecke;	state Exp;
branches;
next	1.12;

1.12
date	2010.01.01.07.32.07;	author brobecke;	state Exp;
branches;
next	1.11;

1.11
date	2009.11.10.10.16.10;	author nathan;	state Exp;
branches;
next	1.10;

1.10
date	2009.01.03.05.58.08;	author brobecke;	state Exp;
branches;
next	1.9;

1.9
date	2008.01.01.22.53.22;	author drow;	state Exp;
branches;
next	1.8;

1.8
date	2007.08.23.18.14.19;	author brobecke;	state Exp;
branches;
next	1.7;

1.7
date	2007.01.12.11.36.21;	author nathan;	state Exp;
branches;
next	1.6;

1.6
date	2007.01.11.11.42.45;	author nathan;	state Exp;
branches;
next	1.5;

1.5
date	2007.01.09.17.59.14;	author drow;	state Exp;
branches;
next	1.4;

1.4
date	2005.02.03.03.58.53;	author brobecke;	state Exp;
branches;
next	1.3;

1.3
date	2004.04.01.18.42.08;	author brobecke;	state Exp;
branches
	1.3.2.1;
next	1.2;

1.2
date	2004.04.01.17.45.46;	author brobecke;	state Exp;
branches;
next	1.1;

1.1
date	2004.04.01.00.51.13;	author brobecke;	state Exp;
branches;
next	;

1.14.2.1
date	2012.01.06.04.54.30;	author brobecke;	state Exp;
branches;
next	;

1.3.2.1
date	2004.04.02.16.47.51;	author drow;	state Exp;
branches;
next	;


desc
@@


1.17
log
@Update years in copyright notice for the GDB files.

Two modifications:
  1. The addition of 2013 to the copyright year range for every file;
  2. The use of a single year range, instead of potentially multiple
     year ranges, as approved by the FSF.
@
text
@# Copyright 2004-2013 Free Software Foundation, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Compile some Ada code.

proc gdb_compile_ada {source dest type options} {

    set srcdir [file dirname $source]
    set gprdir [file dirname $srcdir]
    set objdir [file dirname $dest]

    append options " ada"
    append options " additional_flags=-P$gprdir/gnat_ada"
    append options " additional_flags=-XSRC=[file tail $srcdir]"
    append options " additional_flags=-XOBJ=$objdir"

    set result [target_compile [file tail $source] $dest $type $options]

    # The Ada build always produces some output, even when the build
    # succeeds. Thus, we can not use the output the same way we do in
    # gdb_compile to determine whether the build has succeeded or not.
    # We therefore simply check whether the dest file has been created
    # or not. Unless not present, the build has succeeded.
    if [file exists $dest] { set result "" }
    gdb_compile_test $source $result
    return $result
}

# Like standard_testfile, but for Ada.  Historically the Ada tests
# used a different naming convention from many of the other gdb tests,
# and this difference was preserved during the conversion to
# standard_testfile.  DIR defaults to the base name of the test case;
# but can be overridden to find sources in a different subdirectory of
# gdb.ada.

proc standard_ada_testfile {base_file {dir ""}} {
    global gdb_test_file_name srcdir subdir
    global testdir testfile srcfile binfile

    if {$dir == ""} {
	set testdir $gdb_test_file_name
    } else {
	set testdir $dir
    }
    set testfile $testdir/$base_file
    set srcfile $srcdir/$subdir/$testfile.adb
    set binfile [standard_output_file $testfile]

    file mkdir [standard_output_file $testdir]
}
@


1.16
log
@	* lib/ada.exp (standard_ada_testfile): New proc.
	* gdb.ada/aliased_array.exp: Use standard_ada_testfile.
	* gdb.ada/array_bounds.exp: Use standard_ada_testfile.
	* gdb.ada/array_return.exp: Use standard_ada_testfile.
	* gdb.ada/array_subscript_addr.exp: Use standard_ada_testfile.
	* gdb.ada/arrayidx.exp: Use standard_ada_testfile.
	* gdb.ada/arrayparam.exp: Use standard_ada_testfile.
	* gdb.ada/arrayptr.exp: Use standard_ada_testfile.
	* gdb.ada/atomic_enum.exp: Use standard_ada_testfile.
	* gdb.ada/bad-task-bp-keyword.exp: Use standard_ada_testfile.
	* gdb.ada/bp_enum_homonym.exp: Use standard_ada_testfile.
	* gdb.ada/bp_on_var.exp: Use standard_ada_testfile.
	* gdb.ada/bp_range_type.exp: Use standard_ada_testfile.
	* gdb.ada/call_pn.exp: Use standard_ada_testfile.
	* gdb.ada/catch_ex.exp: Use standard_ada_testfile.
	* gdb.ada/char_enum.exp: Use standard_ada_testfile.
	* gdb.ada/char_param.exp: Use standard_ada_testfile.
	* gdb.ada/complete.exp: Use standard_ada_testfile.
	* gdb.ada/cond_lang.exp: Use standard_ada_testfile,
	standard_output_file.
	* gdb.ada/dyn_loc.exp: Use standard_ada_testfile.
	* gdb.ada/enum_idx_packed.exp: Use standard_ada_testfile.
	* gdb.ada/exec_changed.exp: Use standard_ada_testfile,
	standard_output_file.
	* gdb.ada/exprs.exp: Use standard_ada_testfile.
	* gdb.ada/fixed_cmp.exp: Use standard_ada_testfile.
	* gdb.ada/fixed_points.exp: Use standard_ada_testfile.
	* gdb.ada/formatted_ref.exp: Use standard_ada_testfile.
	* gdb.ada/frame_args.exp: Use standard_ada_testfile.
	* gdb.ada/fullname_bp.exp: Use standard_ada_testfile.
	* gdb.ada/fun_addr.exp: Use standard_ada_testfile.
	* gdb.ada/fun_in_declare.exp: Use standard_ada_testfile.
	* gdb.ada/funcall_param.exp: Use standard_ada_testfile.
	* gdb.ada/homonym.exp: Use standard_ada_testfile.
	* gdb.ada/info_locals_renaming.exp: Use standard_ada_testfile.
	* gdb.ada/int_deref.exp: Use standard_ada_testfile.
	* gdb.ada/interface.exp: Use standard_ada_testfile.
	* gdb.ada/lang_switch.exp: Use standard_ada_testfile,
	standard_output_file
	* gdb.ada/mi_catch_ex.exp: Use standard_ada_testfile.
	* gdb.ada/mi_task_arg.exp: Use standard_ada_testfile.
	* gdb.ada/mi_task_info.exp: Use standard_ada_testfile.
	* gdb.ada/mod_from_name.exp: Use standard_ada_testfile.
	* gdb.ada/nested.exp: Use standard_ada_testfile.
	* gdb.ada/null_array.exp: Use standard_ada_testfile.
	* gdb.ada/null_record.exp: Use standard_ada_testfile.
	* gdb.ada/operator_bp.exp: Use standard_ada_testfile.
	* gdb.ada/packed_array.exp: Use standard_ada_testfile.
	* gdb.ada/packed_tagged.exp: Use standard_ada_testfile.
	* gdb.ada/print_chars.exp: Use standard_ada_testfile.
	* gdb.ada/print_pc.exp: Use standard_ada_testfile.
	* gdb.ada/ptr_typedef.exp: Use standard_ada_testfile.
	* gdb.ada/ptype_field.exp: Use standard_ada_testfile.
	* gdb.ada/ptype_tagged_param.exp: Use standard_ada_testfile.
	* gdb.ada/rec_return.exp: Use standard_ada_testfile.
	* gdb.ada/ref_param.exp: Use standard_ada_testfile.
	* gdb.ada/ref_tick_size.exp: Use standard_ada_testfile.
	* gdb.ada/same_enum.exp: Use standard_ada_testfile.
	* gdb.ada/set_pckd_arr_elt.exp: Use standard_ada_testfile.
	* gdb.ada/small_reg_param.exp: Use standard_ada_testfile.
	* gdb.ada/start.exp: Use standard_ada_testfile.
	* gdb.ada/str_ref_cmp.exp: Use standard_ada_testfile.
	* gdb.ada/sym_print_name.exp: Use standard_ada_testfile.
	* gdb.ada/taft_type.exp: Use standard_ada_testfile.
	* gdb.ada/tagged.exp: Use standard_ada_testfile.
	* gdb.ada/tagged_not_init.exp: Use standard_ada_testfile.
	* gdb.ada/task_bp.exp: Use standard_ada_testfile.
	* gdb.ada/tasks.exp: Use standard_ada_testfile.
	* gdb.ada/tick_last_segv.exp: Use standard_ada_testfile.
	* gdb.ada/type_coercion.exp: Use standard_ada_testfile.
	* gdb.ada/uninitialized_vars.exp: Use standard_ada_testfile.
	* gdb.ada/variant_record_packed_array.exp: Use standard_ada_testfile.
	* gdb.ada/watch_arg.exp: Use standard_ada_testfile.
	* gdb.ada/whatis_array_val.exp: Use standard_ada_testfile.
	* gdb.ada/widewide.exp: Use standard_ada_testfile.
@
text
@d1 1
a1 1
# Copyright 2004, 2007-2012 Free Software Foundation, Inc.
@


1.15
log
@Copyright year update in most files of the GDB Project.

gdb/ChangeLog:

        Copyright year update in most files of the GDB Project.
@
text
@d41 22
@


1.14
log
@	PR testsuite/12040:
	* lib/future.exp: New file, mostly extracted from ada.exp.
	Rewrote compatibility code to use rename.
	(gdb_find_gfortran): New proc.
	(gdb_default_target_compile): Refresh from dejagnu; plus a pending
	gfortran patch.
	* lib/ada.exp (gdb_find_gnatmake, gdb_default_target_compile):
	Move to future.exp.
	* lib/gdb.exp: Always load future.exp.
@
text
@d1 1
a1 1
# Copyright 2004, 2007, 2008, 2009, 2010, 2011 Free Software Foundation, Inc.
@


1.14.2.1
log
@Copyright year update in most files of the GDB Project.

gdb/ChangeLog:

        Copyright year update in most files of the GDB Project.
@
text
@d1 1
a1 1
# Copyright 2004, 2007-2012 Free Software Foundation, Inc.
@


1.13
log
@run copyright.sh for 2011.
@
text
@a15 390
load_lib libgloss.exp

# FIXME:brobecker/2004-03-31:
# The following function should eventually be part of dejagnu. Even after
# this function becomes available in dejagnu, we will keep for a while
# a copy of this function here in order to avoid increasing the dejagnu
# version requirement.

proc gdb_find_gnatmake {} {
    global tool_root_dir

    set root "$tool_root_dir/gcc"
    set GM ""

    if ![is_remote host] {
        set file [lookfor_file $root gnatmake]
        if { $file != "" } {
            set GM "$file -I$root/ada/rts --GCC=$root/xgcc --GNATBIND=$root/gnatbind --GNATLINK=$root/gnatlink -cargs -B$root -largs --GCC=$root/xgcc -margs";
        }   
    }

    if {$GM == ""} {
        set GM [transform gnatmake]
    }

    return $GM
}   

# FIXME:brobecker/2004-03-31:
# The following function is a copy of the function of the same name provided
# by dejagnu, except that it has been modified to add support for building
# Ada programs.  This copy is temporarily placed here until the changes
# are merged into the dejagnu official release. Once the changes are merged,
# we will likely keep this local copy for a while to avoid increasing the
# dejagnu version requirement.

proc gdb_default_target_compile {source destfile type options} {
    global target_triplet
    global tool_root_dir
    global CFLAGS_FOR_TARGET
    global compiler_flags

    if { $destfile == "" && $type != "preprocess" && $type != "none" } {
	error "Must supply an output filename for the compile to default_target_compile"
    }

    set add_flags ""
    set libs ""
    set compiler_type "c"
    set compiler ""
    set ldflags ""
    set dest [target_info name]

    if [info exists CFLAGS_FOR_TARGET] {
	append add_flags " $CFLAGS_FOR_TARGET"
    }

    if [info exists target_info(host,name)] {
	set host [host_info name];
    } else {
	set host "unix";
    }

    foreach i $options {
	if { $i == "ada" } {
	    set compiler_type "ada"
	    if [board_info $dest exists adaflags] {
		append add_flags " [target_info adaflags]"
	    }
	    # append add_flags " [gnatmake_include_flags]";
	    if [board_info $dest exists gnatmake] {
		set compiler [target_info gnatmake];
	    } else {
		set compiler [find_gnatmake];
	    }
	}

	if { $i == "c++" } {
	    set compiler_type "c++"
	    if [board_info $dest exists cxxflags] {
		append add_flags " [target_info cxxflags]"
	    }
	    append add_flags " [g++_include_flags]";
	    if [board_info $dest exists c++compiler] {
		set compiler [target_info c++compiler];
	    } else {
		set compiler [find_g++];
	    }
	}

	if { $i == "f77" } {
	    set compiler_type "f77"
	    if [board_info $dest exists f77flags] {
		append add_flags " [target_info f77flags]"
	    }
#	    append add_flags " [f77_include_flags]"
	    if [board_info $dest exists f77compiler] {
		set compiler [target_info f77compiler]
	    } else {
		set compiler [find_g77]
	    }
	}

	if [regexp "^dest=" $i] {
	    regsub "^dest=" $i "" tmp
	    if [board_info $tmp exists name] {
		set dest [board_info $tmp name];
	    } else {
		set dest $tmp;
	    }
	}
	if [regexp "^compiler=" $i] {
	    regsub "^compiler=" $i "" tmp
	    set compiler $tmp
	}
	if [regexp "^additional_flags=" $i] {
	    regsub "^additional_flags=" $i "" tmp
	    append add_flags " $tmp"
	}
	if [regexp "^ldflags=" $i] {
	    regsub "^ldflags=" $i "" tmp
	    append ldflags " $tmp"
	}
	if [regexp "^libs=" $i] {
	    regsub "^libs=" $i "" tmp
	    append libs " $tmp"
	}
	if [regexp "^incdir=" $i] {
	    regsub "^incdir=" $i "-I" tmp
	    append add_flags " $tmp"
	}
	if [regexp "^libdir=" $i] {
	    regsub "^libdir=" $i "-L" tmp
	    append add_flags " $tmp"
	}
	if [regexp "^ldscript=" $i] {
	    regsub "^ldscript=" $i "" ldscript
	}
 	if [regexp "^redirect=" $i] {
 	    regsub "^redirect=" $i "" redirect
 	}
 	if [regexp "^optimize=" $i] {
 	    regsub "^optimize=" $i "" optimize
 	}
 	if [regexp "^timeout=" $i] {
 	    regsub "^timeout=" $i "" timeout
 	}
    }

    if [board_info $host exists cflags_for_target] {
	append add_flags " [board_info $host cflags_for_target]";
    }

    global CC_FOR_TARGET
    global CXX_FOR_TARGET
    global F77_FOR_TARGET
    global GNATMAKE_FOR_TARGET
    
    if [info exists CC_FOR_TARGET] {
	if { $compiler == "" } {
	    set compiler $CC_FOR_TARGET
	}
    }

    if [info exists CXX_FOR_TARGET] {
	if { $compiler_type == "c++" } {
	    set compiler $CXX_FOR_TARGET
	}
    }

    if [info exists F77_FOR_TARGET] {
	if { $compiler_type == "f77" } {
	    set compiler $F77_FOR_TARGET
	}
    }

    if [info exists GNATMAKE_FOR_TARGET] {
	if { $compiler_type == "ada" } {
	    set compiler $GNATMAKE_FOR_TARGET
	}
    }

    if { $compiler == "" } {
	set compiler [board_info $dest compiler];
	if { $compiler == "" } {
	    return "default_target_compile: No compiler to compile with";
	}
    }

    if ![is_remote host] {
	if { [which $compiler] == 0 } {
	    return "default_target_compile: Can't find $compiler."
	}
    }

    if {$type == "object"} {
	append add_flags " -c"
    }

    if { $type == "preprocess" } {
	append add_flags " -E"
    }
    
    if { $type == "assembly" } {
	append add_flags " -S"
    }

    if [board_info $dest exists cflags] {
	append add_flags " [board_info $dest cflags]"
    }

    if { $type == "executable" } {
	# This must be added here.
	# if [board_info $dest exists ldscript] {
	#     append add_flags " [board_info $dest ldscript]"
	# }

	if [board_info $dest exists ldflags] {
	    append add_flags " [board_info $dest ldflags]"
	}
	if { $compiler_type == "c++" } {
	    append add_flags " [g++_link_flags]";
	}
	if [isnative] {
	    # This is a lose.
	    catch "glob -nocomplain $tool_root_dir/libstdc++/libstdc++.so* $tool_root_dir/libstdc++/libstdc++.sl" tmp
	    if { ${tmp} != "" } {
		if [regexp ".*solaris2.*" $target_triplet] {
		    # Solaris 2
		    append add_flags " -R$tool_root_dir/libstdc++"
		} elseif [regexp ".*(osf|irix5|linux).*" $target_triplet] {
		    # OSF/1 or Irix5
		    append add_flags " -Wl,-rpath,$tool_root_dir/libstdc++"
		} elseif [regexp ".*hppa.*" $target_triplet] {
		    # HP/UX
		    append add_flags " -Wl,-a,shared_archive"
		}
	    }
	}
    }

    if ![info exists ldscript] {
	set ldscript [board_info $dest ldscript]
    }

    foreach i $options {
	if { $i == "debug" } {
	    if [board_info $dest exists debug_flags] {
		append add_flags " [board_info $dest debug_flags]";
	    } else {
		append add_flags " -g"
	    }
	}
    }

    if [info exists optimize] {
	append add_flags " $optimize";
    }

    if { $type == "executable" } {
	append add_flags " $ldflags"
	foreach x $libs {
	    if [file exists $x] {
		append source " $x"
	    } else {
		append add_flags " $x";
	    }
	}

	if [board_info $dest exists libs] {
	    append add_flags " [board_info $dest libs]"
	}

	# This probably isn't such a good idea, but it avoids nasty
	# hackiness in the testsuites.
	# The math library must be linked in before the C library.  The C
	# library is linked in by the linker script, so this must be before
	# the linker script.
	if [board_info $dest exists mathlib] {
	    append add_flags " [board_info $dest mathlib]"
	} else {
	    append add_flags " -lm"
	}

	# This must be added here.
	append add_flags " $ldscript";

	if [board_info $dest exists remote_link] {
	    # Relink option.
	    append add_flags " -Wl,-r"
	}
	if [board_info $dest exists output_format] {
	    append add_flags " -Wl,-oformat,[board_info $dest output_format]";
	}
    }

    if [board_info $dest exists multilib_flags] {
	append add_flags " [board_info $dest multilib_flags]";
    }

    verbose "doing compile"

    set sources ""
    if [is_remote host] {
	foreach x $source {
	    set file [remote_download host $x];
	    if { $file == "" } {
		warning "Unable to download $x to host."
		return "Unable to download $x to host."
	    } else {
		append sources " $file";
	    }
	}
    } else {
	set sources $source
    }

    if [is_remote host] {
	append add_flags " -o a.out"
	remote_file host delete a.out;
    } else {
	if { $destfile != "" } {
	    append add_flags " -o $destfile";
	}
    }

    # This is obscure: we put SOURCES at the end when building an
    # object, because otherwise, in some situations, libtool will
    # become confused about the name of the actual source file.
    if {$type == "object"} {
        set opts "$add_flags $sources"
    } else {
        set opts "$sources $add_flags"
    }

    if [is_remote host] {
	if [host_info exists use_at] {
	    set fid [open "atfile" "w"];
	    puts $fid "$opts";
	    close $fid;
	    set opts "@@[remote_download host atfile]"
	    remote_file build delete atfile
	}
    }

    verbose "Invoking the compiler as $compiler $opts" 2

    if [info exists redirect] {
	verbose "Redirecting output to $redirect" 2
	set status [remote_exec host "$compiler $opts" "" "" $redirect];
    } else {
	if [info exists timeout] {
	    verbose "Setting timeout to $timeout" 2
	    set status [remote_exec host "$compiler $opts" "" "" "" $timeout];
	} else {
	    set status [remote_exec host "$compiler $opts"];
	}
    }

    set compiler_flags $opts
    if [is_remote host] {
	remote_upload host a.out $destfile;
	remote_file host delete a.out;
    }
    set comp_output [prune_warnings [lindex $status 1]];
    regsub "^\[\r\n\]+" $comp_output "" comp_output;
    if { [lindex $status 0] != 0 } {
	verbose -log "compiler exited with status [lindex $status 0]";
    }
    if { [lindex $status 1] != "" } {
	verbose -log "output is:\n[lindex $status 1]" 2;
    }
    if { [lindex $status 0] != 0 && "${comp_output}" == "" } {
	set comp_output "exit status is [lindex $status 0]";
    }
    return ${comp_output};
}

# See if the version of dejaGNU being used to run the testsuite is
# recent enough to contain support for building Ada programs or not.
# If not, then use the functions above in place of the ones provided
# by dejaGNU. This is only temporary (brobecker/2004-03-31).

if {[info procs find_gnatmake] == ""} {
  proc find_gnatmake { } { return [gdb_find_gnatmake] }
  proc default_target_compile { source destfile type options } {
    return [gdb_default_target_compile $source $destfile $type $options]
  }
}

@


1.12
log
@Update copyright year in most headers.

Automatic update by copyright.sh.
@
text
@d1 1
a1 1
# Copyright 2004, 2007, 2008, 2009, 2010 Free Software Foundation, Inc.
@


1.11
log
@	* lib/gdb.exp (gdb_compile_test): New.
	(skip_ada_tests, skip_java_tests): New.
	(gdb_compile): Use gdb_compile_test for f77.
	* lib/ada.exp (gdb_compile_ada): Use gdb_compile_test to record result.
	* lib/java.exp (compile_java_from_source): Remove runtests check,
	use gdb_compile_test to record result.
	* gdb.ada/packed_array.exp, gdb.ada/fixed_points.exp,
	gdb.ada/exec_changed.exp, gdb.ada/start.exp,
	gdb.ada/watch_arg.exp, gdb.ada/null_record.exp,
	gdb.ada/array_return.exp, gdb.ada/arrayidx.exp,
	gdb.mi/mi-var-child-f.exp, gdb.fortran/types.exp,
	gdb.fortran/array-element.exp, gdb.fortran/subarray.exp,
	gdb.fortran/derived-type.exp, gdb.fortran/exprs.exp,
	gdb.java/jmisc.exp, gdb.java/jmisc1.exp, gdb.java/jprint.exp,
	gdb.java/jv-print.exp, gdb.java/jmain.exp: Add language skip,
	adjust gdb_compile invocations.
@
text
@d1 1
a1 1
# Copyright 2004, 2007, 2008, 2009 Free Software Foundation, Inc.
@


1.10
log
@        Updated copyright notices for most files.
@
text
@d426 3
a428 4
    if ![file exists $dest] {
        unsupported "Ada compilation failed: $result"
        return "Ada compilation failed."
    }
@


1.9
log
@	Updated copyright notices for most files.
@
text
@d1 1
a1 1
# Copyright 2004, 2007, 2008 Free Software Foundation, Inc.
@


1.8
log
@        Switch the license of all .exp files to GPLv3.
        Switch the license of all .f and .f90 files to GPLv3.
        Switch the license of all .s and .S files to GPLv3.
@
text
@d1 1
a1 1
# Copyright 2004, 2007 Free Software Foundation, Inc.
@


1.7
log
@revert 2007-01-11  Nathan Sidwell  <nathan@@codesourcery.com>
	* lib/gdb.exp (gdb_compile_test): New.
	(skip_ada_tests, skip_java_tests): New.
	(gdb_compile): Use gdb_compile_test for f77.
	* lib/ada.exp (gdb_compile_ada): Use gdb_compile_test to record result.
	* lib/java.exp (compile_java_from_source): Remove runtests check,
	use gdb_compile_test to record result.
	* gdb.ada/packed_array.exp, gdb.ada/fixed_points.exp,
	gdb.ada/exec_changed.exp, gdb.ada/start.exp,
	gdb.ada/watch_arg.exp, gdb.ada/null_record.exp,
	gdb.ada/array_return.exp, gdb.ada/arrayidx.exp,
	gdb.mi/mi-var-child-f.exp, gdb.fortran/types.exp,
	gdb.fortran/array-element.exp, gdb.fortran/subarray.exp,
	gdb.fortran/derived-type.exp, gdb.fortran/exprs.exp,
	gdb.java/jmisc.exp, gdb.java/jprint.exp,
	gdb.java/jv-print.exp, gdb.java/jmain.exp: Add language skip,
	adjust gdb_compile invocations.
@
text
@d5 1
a5 1
# the Free Software Foundation; either version 2 of the License, or
d7 1
a7 1
# 
d12 1
a12 1
# 
d14 1
a14 3
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307,
# USA.  
@


1.6
log
@	* lib/gdb.exp (gdb_compile_test): New.
	(skip_ada_tests, skip_java_tests): New.
	(gdb_compile): Use gdb_compile_test for f77.
	* lib/ada.exp (gdb_compile_ada): Use gdb_compile_test to record result.
	* lib/java.exp (compile_java_from_source): Remove runtests check,
	use gdb_compile_test to record result.
	* gdb.ada/packed_array.exp, gdb.ada/fixed_points.exp,
	gdb.ada/exec_changed.exp, gdb.ada/start.exp,
	gdb.ada/watch_arg.exp, gdb.ada/null_record.exp,
	gdb.ada/array_return.exp, gdb.ada/arrayidx.exp,
	gdb.mi/mi-var-child-f.exp, gdb.fortran/types.exp,
	gdb.fortran/array-element.exp, gdb.fortran/subarray.exp,
	gdb.fortran/derived-type.exp, gdb.fortran/exprs.exp,
	gdb.java/jmisc.exp, gdb.java/jprint.exp,
	gdb.java/jv-print.exp, gdb.java/jmain.exp: Add language skip,
	adjust gdb_compile invocations.
@
text
@d428 4
a431 3
    if [file exists $dest] { set result "" }
    gdb_compile_test $source $result
    return $result
@


1.5
log
@Copyright updates for 2007.
@
text
@d428 3
a430 4
    if ![file exists $dest] {
        unsupported "Ada compilation failed: $result"
        return "Ada compilation failed."
    }
@


1.4
log
@        * gdb.ada/gnat_ada.gpr: New file.
        * gdb.ada/gnat_ada.gin: Delete, no longer used.
        * lib/ada.exp (gdb_compile_ada): Minor adaptation to new project file.
        * configure.ac: No longer generate gnat_ada.gpr.
        * configure: Regenerate.
        * gdb.ada/Makefile.in: Minor adaptations due to new project file.
        * gdb.ada/null_record/null_record.adb: Moved here from gdb.ada.
        * gdb.ada/null_record/bar.ads: Likewise.
        * gdb.ada/null_record/bar.adb: Likewise.
        * gdb.ada/fixed_points/fixed_points.adb: Likewise.
        * gdb.ada/null_record.exp (testdir): New variable.
        (testfile): executable is now in testdir subdirectory.
        (srcfile): Use full path to the main compilation unit.
        * gdb.ada/fixed_points.exp: Same changes as above.
@
text
@d1 1
a1 1
# Copyright 2004 Free Software Foundation, Inc.
@


1.3
log
@        * lib/ada.exp: Add copyright notice.
        * bar.ads: Likewise.
        * bar.adb: Likewise.
        * null_record.adb: Likewise.
        * null_record.exp: Likewise.
        * gnat_ada.gpr.in: Likewise. Fix typo in a comment, clarify another.
@
text
@d412 2
d417 3
a419 1
    append options " additional_flags=-P$objdir/gnat_ada"
d421 1
a421 1
    set result [target_compile $source $dest $type $options]
@


1.3.2.1
log
@Merge GDB mainline of 20040402 to intercu branch.
@
text
@@


1.2
log
@        * lib/ada.exp (gdb_compile_ada): Emit UNSUPPORTED if we failed
        to build the application. Remove the message printed when in
        verbose mode, redundant with the UNSUPPORTED message above.
@
text
@d1 17
@


1.1
log
@        * lib/ada.exp: New file.
@
text
@d408 1
a408 1
        verbose "Ada compilation failed: $result"
@

