head	1.4;
access;
symbols
	gdb_7_6_1-2013-08-30-release:1.3
	gdb_7_6-2013-04-26-release:1.3
	gdb_7_6-branch:1.3.0.2
	gdb_7_6-2013-03-12-branchpoint:1.3
	gdb_7_5_1-2012-11-29-release:1.2
	gdb_7_5-2012-08-17-release:1.2
	gdb_7_5-branch:1.2.0.4
	gdb_7_5-2012-07-18-branchpoint:1.2
	gdb_7_4_1-2012-04-26-release:1.2.2.2
	gdb_7_4-2012-01-24-release:1.2.2.2
	gdb_7_4-branch:1.2.0.2;
locks; strict;
comment	@# @;


1.4
date	2013.06.27.18.49.03;	author tromey;	state Exp;
branches;
next	1.3;

1.3
date	2013.01.01.06.33.25;	author brobecke;	state Exp;
branches;
next	1.2;

1.2
date	2012.01.04.08.17.45;	author brobecke;	state Exp;
branches
	1.2.2.1;
next	1.1;

1.1
date	2011.12.27.04.07.04;	author brobecke;	state Exp;
branches;
next	;

1.2.2.1
date	2012.01.04.13.23.10;	author brobecke;	state Exp;
branches;
next	1.2.2.2;

1.2.2.2
date	2012.01.06.04.44.00;	author brobecke;	state Exp;
branches;
next	;


desc
@@


1.4
log
@test suite update - gdb.base/[cd]

Convert files gdb.base/[cd]*.exp to use standard_output_file et al.

	* call-ar-st.exp, call-rt-st.exp, call-sc.exp,
	call-signal-resume.exp, call-strs.exp, callexit.exp,
	callfuncs.exp, catch-load.exp, catch-syscall.exp, charset.exp,
	checkpoint.exp, chng-syms.exp, code-expr.exp, code_elim.exp,
	commands.exp, completion.exp, complex.exp, cond-expr.exp,
	condbreak.exp, consecutive.exp, constvars.exp, corefile.exp,
	ctxobj.exp, cursal.exp, cvexpr.exp, dbx.exp, default.exp,
	define.exp, del.exp, detach.exp, dfp-test.exp, display.exp,
	dmsym.exp, dump.exp, dup-sect.exp: Use standard_testfile,
	standard_output_file, prepare_for_testing, clean_restart.
@
text
@# Copyright (C) 2011-2013 Free Software Foundation, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

set testfile dmsym_main

# Build dmsym_main using two C files:
#   - dmsym.c, which needs to be built without debug info;
#   - dmsym_main.c, which needs to be build with debug info.
# This is why we use gdb_compile instead of relying on the usual
# call to prepare_for_testing.

set dmsym_o [standard_output_file dmsym.o]

if {[gdb_compile "${srcdir}/${subdir}/dmsym.c" \
                 $dmsym_o \
                 object {}] != ""} {
  untested dmsym.exp
  return -1
}

if {[gdb_compile \
      [list ${srcdir}/${subdir}/dmsym_main.c $dmsym_o] \
      [standard_output_file ${testfile}] \
      executable {debug}] != ""} {
    untested dmsym.exp
    return -1
}

clean_restart ${testfile}

# Some convenient regular expressions...
set num "\[0-9\]+"
set addr "0x\[0-9a-zA-Z\]+"

# Although the test program is written in C, the original problem
# occurs only when the language is Ada. The use of a C program is
# only a convenience to be able to exercise the original problem
# without requiring an Ada compiler. In the meantime, temporarily
# force the language to Ada.

gdb_test_no_output "set lang ada"

# Verify that setting a breakpoint on `pck__foo__bar__minsym' only
# results in one location found (function pck__foo__bar__minsym__2).
# A mistake would be to also insert a breakpoint where
# pck__foo__bar__minsym is defined.  Despite the fact that there is
# no debugging info available, this is a data symbol and thus should
# not be used for breakpoint purposes.

gdb_test "break pck__foo__bar__minsym" \
         "Breakpoint $num at $addr.: file .*dmsym_main\\.c, line $num\\."

# However, verify that the `info line' command, on the other hand,
# finds both locations.

gdb_test "info line pck__foo__bar__minsym" \
         "Line $num of \".*dmsym_main\\.c\" .*\r\nNo line number information available for address $addr <pck__foo__bar__minsym>"

gdb_test_no_output "set lang auto"

# Now, run the program until we get past the call to
# pck__foo__bar__minsym__2. Except when using hardware breakpoints,
# inferior behavior is going to be affected if a breakpoint was
# incorrectly inserted at pck__foo__bar__minsym.

gdb_breakpoint dmsym_main.c:[gdb_get_line_number "BREAK" dmsym_main.c]

gdb_run_cmd
gdb_test "" \
         "Breakpoint $num, pck__foo__bar__minsym__2 \\(\\) at.*" \
         "Run until breakpoint at BREAK"

gdb_test "continue" \
         "Breakpoint $num, main \\(\\) at.*"

gdb_test "print val" \
         " = 124"
@


1.3
log
@Update years in copyright notice for the GDB files.

Two modifications:
  1. The addition of 2013 to the copyright year range for every file;
  2. The use of a single year range, instead of potentially multiple
     year ranges, as approved by the FSF.
@
text
@d24 2
d27 1
a27 1
                 ${objdir}/${subdir}/dmsym.o \
d34 2
a35 2
      [list ${srcdir}/${subdir}/dmsym_main.c ${objdir}/${subdir}/dmsym.o] \
      ${objdir}/${subdir}/${testfile} \
@


1.2
log
@Copyright year update in most files of the GDB Project.

gdb/ChangeLog:

        Copyright year update in most files of the GDB Project.
@
text
@d1 1
a1 1
# Copyright (C) 2011-2012 Free Software Foundation, Inc.
@


1.2.2.1
log
@Ignore data minimal symbols for breakpoint linespecs

gdb/ChangeLog:

        * linespec.c (struct collect_minsyms) [list_mode]: New field.
        (add_minsym): Ignore data symbols if not in list mode.
        (search_minsyms_for_name): Set local.list_mode.

gdb/testsuite/ChangeLog:

        * gdb.base/dmsym.c, gdb.base/dmsym_main.c, gdb.base/dmsym.exp:
        New files.
@
text
@d1 1
a1 1
# Copyright (C) 2011 Free Software Foundation, Inc.
@


1.2.2.2
log
@Copyright year update in most files of the GDB Project.

gdb/ChangeLog:

        Copyright year update in most files of the GDB Project.
@
text
@d1 1
a1 1
# Copyright (C) 2011-2012 Free Software Foundation, Inc.
@


1.1
log
@Ignore data minimal symbols for breakpoint linespecs

gdb/ChangeLog:

        * linespec.c (struct collect_minsyms) [list_mode]: New field.
        (add_minsym): Ignore data symbols if not in list mode.
        (search_minsyms_for_name): Set local.list_mode.

gdb/testsuite/ChangeLog:

        * gdb.base/dmsym.c, gdb.base/dmsym_main.c, gdb.base/dmsym.exp:
        New files.
@
text
@d1 1
a1 1
# Copyright (C) 2011 Free Software Foundation, Inc.
@

