head	1.50;
access;
symbols
	gdb_7_6_1-2013-08-30-release:1.49
	gdb_7_6-2013-04-26-release:1.49
	gdb_7_6-branch:1.49.0.2
	gdb_7_6-2013-03-12-branchpoint:1.49
	gdb_7_5_1-2012-11-29-release:1.48
	gdb_7_5-2012-08-17-release:1.48
	gdb_7_5-branch:1.48.0.2
	gdb_7_5-2012-07-18-branchpoint:1.48
	gdb_7_4_1-2012-04-26-release:1.47.2.1
	gdb_7_4-2012-01-24-release:1.47.2.1
	gdb_7_4-branch:1.47.0.2
	gdb_7_4-2011-12-13-branchpoint:1.47
	gdb_7_3_1-2011-09-04-release:1.45
	gdb_7_3-2011-07-26-release:1.45
	gdb_7_3-branch:1.45.0.2
	gdb_7_3-2011-04-01-branchpoint:1.45
	gdb_7_2-2010-09-02-release:1.43
	gdb_7_2-branch:1.43.0.2
	gdb_7_2-2010-07-07-branchpoint:1.43
	gdb_7_1-2010-03-18-release:1.39
	gdb_7_1-branch:1.39.0.2
	gdb_7_1-2010-02-18-branchpoint:1.39
	gdb_7_0_1-2009-12-22-release:1.37
	gdb_7_0-2009-10-06-release:1.37
	gdb_7_0-branch:1.37.0.2
	gdb_7_0-2009-09-16-branchpoint:1.37
	arc-sim-20090309:1.30
	msnyder-checkpoint-072509-branch:1.36.0.2
	msnyder-checkpoint-072509-branchpoint:1.36
	arc-insight_6_8-branch:1.30.0.6
	arc-insight_6_8-branchpoint:1.30
	insight_6_8-branch:1.30.0.4
	insight_6_8-branchpoint:1.30
	reverse-20081226-branch:1.32.0.10
	reverse-20081226-branchpoint:1.32
	multiprocess-20081120-branch:1.32.0.8
	multiprocess-20081120-branchpoint:1.32
	reverse-20080930-branch:1.32.0.6
	reverse-20080930-branchpoint:1.32
	reverse-20080717-branch:1.32.0.4
	reverse-20080717-branchpoint:1.32
	msnyder-reverse-20080609-branch:1.32.0.2
	msnyder-reverse-20080609-branchpoint:1.32
	drow-reverse-20070409-branch:1.27.0.2
	drow-reverse-20070409-branchpoint:1.27
	gdb_6_8-2008-03-27-release:1.30
	gdb_6_8-branch:1.30.0.2
	gdb_6_8-2008-02-26-branchpoint:1.30
	gdb_6_7_1-2007-10-29-release:1.28
	gdb_6_7-2007-10-10-release:1.28
	gdb_6_7-branch:1.28.0.2
	gdb_6_7-2007-09-07-branchpoint:1.28
	insight_6_6-20070208-release:1.24
	gdb_6_6-2006-12-18-release:1.24
	gdb_6_6-branch:1.24.0.2
	gdb_6_6-2006-11-15-branchpoint:1.24
	insight_6_5-20061003-release:1.23
	gdb-csl-symbian-6_4_50_20060226-12:1.23.24.1
	gdb-csl-sourcerygxx-3_4_4-25:1.23
	nickrob-async-20060828-mergepoint:1.24
	gdb-csl-symbian-6_4_50_20060226-11:1.23
	gdb-csl-sourcerygxx-4_1-17:1.23.18.2
	gdb-csl-20060226-branch-local-2:1.23.18.2
	gdb-csl-sourcerygxx-4_1-14:1.23.18.2
	gdb-csl-sourcerygxx-4_1-13:1.23.18.2
	gdb-csl-sourcerygxx-4_1-12:1.23.18.2
	gdb-csl-sourcerygxx-3_4_4-21:1.23.18.2
	gdb_6_5-20060621-release:1.23
	gdb-csl-sourcerygxx-4_1-9:1.23.18.2
	gdb-csl-sourcerygxx-4_1-8:1.23.18.2
	gdb-csl-sourcerygxx-4_1-7:1.23.18.1
	gdb-csl-arm-2006q1-6:1.23.18.1
	gdb-csl-sourcerygxx-4_1-6:1.23.18.1
	gdb-csl-symbian-6_4_50_20060226-10:1.23
	gdb-csl-symbian-6_4_50_20060226-9:1.23
	gdb-csl-symbian-6_4_50_20060226-8:1.23
	gdb-csl-coldfire-4_1-11:1.23.18.1
	gdb-csl-sourcerygxx-3_4_4-19:1.23.18.1
	gdb-csl-coldfire-4_1-10:1.23.18.1
	gdb_6_5-branch:1.23.0.32
	gdb_6_5-2006-05-14-branchpoint:1.23
	gdb-csl-sourcerygxx-4_1-5:1.23.18.1
	nickrob-async-20060513-branch:1.23.0.30
	nickrob-async-20060513-branchpoint:1.23
	gdb-csl-sourcerygxx-4_1-4:1.23.18.1
	msnyder-reverse-20060502-branch:1.23.0.28
	msnyder-reverse-20060502-branchpoint:1.23
	gdb-csl-morpho-4_1-4:1.23
	gdb-csl-sourcerygxx-3_4_4-17:1.23
	readline_5_1-import-branch:1.23.0.26
	readline_5_1-import-branchpoint:1.23
	gdb-csl-20060226-branch-merge-to-csl-symbian-1:1.23
	gdb-csl-symbian-20060226-branch:1.23.0.24
	gdb-csl-symbian-20060226-branchpoint:1.23
	gdb-csl-20060226-branch-merge-to-csl-local-1:1.23
	msnyder-reverse-20060331-branch:1.23.0.22
	msnyder-reverse-20060331-branchpoint:1.23
	gdb-csl-available-20060303-branch:1.23.0.20
	gdb-csl-available-20060303-branchpoint:1.23
	gdb-csl-20060226-branch:1.23.0.18
	gdb-csl-20060226-branchpoint:1.23
	gdb_6_4-20051202-release:1.23
	msnyder-fork-checkpoint-branch:1.23.0.16
	msnyder-fork-checkpoint-branchpoint:1.23
	gdb-csl-gxxpro-6_3-branch:1.23.0.14
	gdb-csl-gxxpro-6_3-branchpoint:1.23
	gdb_6_4-branch:1.23.0.12
	gdb_6_4-2005-11-01-branchpoint:1.23
	gdb-csl-arm-20051020-branch:1.23.0.10
	gdb-csl-arm-20051020-branchpoint:1.23
	gdb-csl-arm-20050325-2005-q1b:1.23
	gdb-csl-arm-20050325-2005-q1a:1.23
	csl-arm-20050325-branch:1.23.0.8
	csl-arm-20050325-branchpoint:1.23
	gdb-post-i18n-errorwarning-20050211:1.23
	gdb-pre-i18n-errorwarning-20050211:1.23
	gdb_6_3-20041109-release:1.23
	gdb_6_3-branch:1.23.0.4
	gdb_6_3-20041019-branchpoint:1.23
	drow_intercu-merge-20040921:1.23
	drow_intercu-merge-20040915:1.23
	jimb-gdb_6_2-e500-branch:1.23.0.6
	jimb-gdb_6_2-e500-branchpoint:1.23
	gdb_6_2-20040730-release:1.23
	gdb_6_2-branch:1.23.0.2
	gdb_6_2-2004-07-10-gmt-branchpoint:1.23
	gdb_6_1_1-20040616-release:1.22
	gdb_6_1-2004-04-05-release:1.22
	drow_intercu-merge-20040402:1.22
	drow_intercu-merge-20040327:1.22
	ezannoni_pie-20040323-branch:1.22.0.12
	ezannoni_pie-20040323-branchpoint:1.22
	cagney_tramp-20040321-mergepoint:1.22
	cagney_tramp-20040309-branch:1.22.0.10
	cagney_tramp-20040309-branchpoint:1.22
	gdb_6_1-branch:1.22.0.8
	gdb_6_1-2004-03-01-gmt-branchpoint:1.22
	drow_intercu-20040221-branch:1.22.0.6
	drow_intercu-20040221-branchpoint:1.22
	cagney_bfdfile-20040213-branch:1.22.0.4
	cagney_bfdfile-20040213-branchpoint:1.22
	drow-cplus-merge-20040208:1.22
	carlton_dictionary-20040126-merge:1.22
	cagney_bigcore-20040122-branch:1.22.0.2
	cagney_bigcore-20040122-branchpoint:1.22
	drow-cplus-merge-20040113:1.22
	drow-cplus-merge-20031224:1.22
	drow-cplus-merge-20031220:1.22
	carlton_dictionary-20031215-merge:1.22
	drow-cplus-merge-20031214:1.22
	carlton-dictionary-20031111-merge:1.22
	gdb_6_0-2003-10-04-release:1.21
	kettenis_sparc-20030918-branch:1.21.0.26
	kettenis_sparc-20030918-branchpoint:1.21
	carlton_dictionary-20030917-merge:1.21
	ezannoni_pie-20030916-branchpoint:1.21
	ezannoni_pie-20030916-branch:1.21.0.24
	cagney_x86i386-20030821-branch:1.21.0.22
	cagney_x86i386-20030821-branchpoint:1.21
	carlton_dictionary-20030805-merge:1.21
	carlton_dictionary-20030627-merge:1.21
	gdb_6_0-branch:1.21.0.20
	gdb_6_0-2003-06-23-branchpoint:1.21
	jimb-ppc64-linux-20030613-branch:1.21.0.18
	jimb-ppc64-linux-20030613-branchpoint:1.21
	cagney_convert-20030606-branch:1.21.0.16
	cagney_convert-20030606-branchpoint:1.21
	cagney_writestrings-20030508-branch:1.21.0.14
	cagney_writestrings-20030508-branchpoint:1.21
	jimb-ppc64-linux-20030528-branch:1.21.0.12
	jimb-ppc64-linux-20030528-branchpoint:1.21
	carlton_dictionary-20030523-merge:1.21
	cagney_fileio-20030521-branch:1.21.0.10
	cagney_fileio-20030521-branchpoint:1.21
	kettenis_i386newframe-20030517-mergepoint:1.21
	jimb-ppc64-linux-20030509-branch:1.21.0.8
	jimb-ppc64-linux-20030509-branchpoint:1.21
	kettenis_i386newframe-20030504-mergepoint:1.21
	carlton_dictionary-20030430-merge:1.21
	kettenis_i386newframe-20030419-branch:1.21.0.6
	kettenis_i386newframe-20030419-branchpoint:1.21
	carlton_dictionary-20030416-merge:1.21
	cagney_frameaddr-20030409-mergepoint:1.21
	kettenis_i386newframe-20030406-branch:1.21.0.4
	kettenis_i386newframe-20030406-branchpoint:1.21
	cagney_frameaddr-20030403-branchpoint:1.21
	cagney_frameaddr-20030403-branch:1.21.0.2
	cagney_framebase-20030330-mergepoint:1.20
	cagney_framebase-20030326-branch:1.20.0.2
	cagney_framebase-20030326-branchpoint:1.20
	cagney_lazyid-20030317-branch:1.19.0.16
	cagney_lazyid-20030317-branchpoint:1.19
	kettenis-i386newframe-20030316-mergepoint:1.19
	offbyone-20030313-branch:1.19.0.14
	offbyone-20030313-branchpoint:1.19
	kettenis-i386newframe-20030308-branch:1.19.0.12
	kettenis-i386newframe-20030308-branchpoint:1.19
	carlton_dictionary-20030305-merge:1.19
	cagney_offbyone-20030303-branch:1.19.0.10
	cagney_offbyone-20030303-branchpoint:1.19
	carlton_dictionary-20030207-merge:1.19
	interps-20030203-mergepoint:1.19
	interps-20030202-branch:1.19.0.8
	interps-20030202-branchpoint:1.19
	cagney-unwind-20030108-branch:1.19.0.6
	cagney-unwind-20030108-branchpoint:1.19
	carlton_dictionary-20021223-merge:1.19
	gdb_5_3-2002-12-12-release:1.16
	carlton_dictionary-20021115-merge:1.19
	kseitz_interps-20021105-merge:1.19
	kseitz_interps-20021103-merge:1.19
	drow-cplus-merge-20021020:1.19
	drow-cplus-merge-20021025:1.19
	carlton_dictionary-20021025-merge:1.19
	carlton_dictionary-20021011-merge:1.19
	drow-cplus-branch:1.19.0.4
	drow-cplus-branchpoint:1.19
	kseitz_interps-20020930-merge:1.19
	carlton_dictionary-20020927-merge:1.19
	carlton_dictionary-branch:1.19.0.2
	carlton_dictionary-20020920-branchpoint:1.19
	gdb_5_3-branch:1.16.0.6
	gdb_5_3-2002-09-04-branchpoint:1.16
	kseitz_interps-20020829-merge:1.16
	cagney_sysregs-20020825-branch:1.16.0.4
	cagney_sysregs-20020825-branchpoint:1.16
	readline_4_3-import-branch:1.16.0.2
	readline_4_3-import-branchpoint:1.16
	gdb_5_2_1-2002-07-23-release:1.13
	kseitz_interps-20020528-branch:1.15.0.4
	kseitz_interps-20020528-branchpoint:1.15
	cagney_regbuf-20020515-branch:1.15.0.2
	cagney_regbuf-20020515-branchpoint:1.15
	jimb-macro-020506-branch:1.14.0.2
	jimb-macro-020506-branchpoint:1.14
	gdb_5_2-2002-04-29-release:1.13
	gdb_5_2-branch:1.13.0.2
	gdb_5_2-2002-03-03-branchpoint:1.13
	gdb_5_1_1-2002-01-24-release:1.7
	gdb_5_1_0_1-2002-01-03-release:1.7
	cygnus_cvs_20020108_pre:1.10
	gdb_5_1_0_1-2002-01-03-branch:1.7.0.6
	gdb_5_1_0_1-2002-01-03-branchpoint:1.7
	gdb_5_1-2001-11-21-release:1.7
	gdb_s390-2001-09-26-branch:1.7.0.4
	gdb_s390-2001-09-26-branchpoint:1.7
	gdb_5_1-2001-07-29-branch:1.7.0.2
	gdb_5_1-2001-07-29-branchpoint:1.7
	dberlin-typesystem-branch:1.6.0.2
	dberlin-typesystem-branchpoint:1.6
	gdb-post-ptid_t-2001-05-03:1.5
	gdb-pre-ptid_t-2001-05-03:1.5
	insight-precleanup-2001-01-01:1.3
	gdb-post-protoization-2000-07-29:1.2
	gdb-pre-protoization-2000-07-29:1.2
	gdb-premipsmulti-2000-06-06-branch:1.2.0.2
	gdb-premipsmulti-2000-06-06-branchpoint:1.2
	gdb-post-params-removal-2000-06-04:1.2
	gdb-pre-params-removal-2000-06-04:1.2
	gdb-post-params-removal-2000-05-28:1.2
	gdb-pre-params-removal-2000-05-28:1.2
	gdb_5_0-2000-05-19-release:1.1.1.9
	gdb_4_18_2-2000-05-18-release:1.1.1.9
	gdb_4_95_1-2000-05-11-snapshot:1.1.1.9
	gdb_4_95_0-2000-04-27-snapshot:1.1.1.9
	gdb_5_0-2000-04-10-branch:1.1.1.9.0.2
	gdb_5_0-2000-04-10-branchpoint:1.1.1.9
	repo-unification-2000-02-06:1.1.1.9
	insight-2000-02-04:1.1.1.9
	gdb-2000-02-04:1.1.1.9
	gdb-2000-02-02:1.1.1.9
	gdb-2000-02-01:1.1.1.8
	gdb-2000-01-31:1.1.1.8
	gdb-2000-01-26:1.1.1.8
	gdb-2000-01-24:1.1.1.8
	gdb-2000-01-17:1.1.1.8
	gdb-2000-01-10:1.1.1.8
	gdb-2000-01-05:1.1.1.8
	gdb-1999-12-21:1.1.1.8
	gdb-1999-12-13:1.1.1.8
	gdb-1999-12-07:1.1.1.8
	gdb-1999-12-06:1.1.1.8
	gdb-1999-11-16:1.1.1.7
	gdb-1999-11-08:1.1.1.7
	gdb-1999-11-01:1.1.1.7
	gdb-1999-10-25:1.1.1.7
	gdb-1999-10-18:1.1.1.7
	gdb-1999-10-11:1.1.1.7
	gdb-1999-10-04:1.1.1.7
	gdb-1999-09-28:1.1.1.7
	gdb-1999-09-21:1.1.1.7
	gdb-1999-09-13:1.1.1.7
	gdb-1999-09-08:1.1.1.7
	gdb-1999-08-30:1.1.1.7
	gdb-1999-08-23:1.1.1.6
	gdb-1999-08-16:1.1.1.6
	gdb-1999-08-09:1.1.1.6
	gdb-1999-08-02:1.1.1.6
	gdb-1999-07-26:1.1.1.5
	gdb-1999-07-19:1.1.1.5
	gdb-1999-07-12:1.1.1.5
	gdb-post-reformat-19990707:1.1.1.5
	gdb-1999-07-07-post-reformat-snapshot:1.1.1.5
	gdb-pre-reformat-19990707:1.1.1.5
	gdb-1999-07-07:1.1.1.5
	gdb-1999-07-05:1.1.1.5
	gdb-1999-06-28:1.1.1.5
	gdb-1999-06-21:1.1.1.4
	gdb-1999-06-14:1.1.1.4
	gdb-1999-06-07:1.1.1.3
	gdb-1999-06-01:1.1.1.2
	gdb-4_18-branch:1.1.1.1.0.2
	gdb-4_18-release:1.1.1.1
	gdb-1999-05-25:1.1.1.2
	gdb-1999-05-19:1.1.1.2
	gdb-1999-05-10:1.1.1.2
	gdb-19990504:1.1.1.2
	gdb-19990422:1.1.1.2
	SNAPSHOT:1.1.1
	gdb-4_18:1.1.1.1
	GDB_4_18:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.50
date	2013.06.07.17.31.07;	author palves;	state Exp;
branches;
next	1.49;

1.49
date	2013.01.01.06.33.25;	author brobecke;	state Exp;
branches;
next	1.48;

1.48
date	2012.01.04.08.17.45;	author brobecke;	state Exp;
branches;
next	1.47;

1.47
date	2011.12.03.20.20.29;	author jkratoch;	state Exp;
branches
	1.47.2.1;
next	1.46;

1.46
date	2011.06.01.15.55.55;	author qiyao;	state Exp;
branches;
next	1.45;

1.45
date	2011.03.07.16.03.02;	author tromey;	state Exp;
branches;
next	1.44;

1.44
date	2011.01.01.15.33.41;	author brobecke;	state Exp;
branches;
next	1.43;

1.43
date	2010.06.08.22.58.03;	author msnyder;	state Exp;
branches;
next	1.42;

1.42
date	2010.05.24.22.06.59;	author msnyder;	state Exp;
branches;
next	1.41;

1.41
date	2010.03.24.21.28.14;	author drow;	state Exp;
branches;
next	1.40;

1.40
date	2010.03.12.19.17.01;	author palves;	state Exp;
branches;
next	1.39;

1.39
date	2010.01.29.15.38.37;	author drow;	state Exp;
branches;
next	1.38;

1.38
date	2010.01.01.07.32.00;	author brobecke;	state Exp;
branches;
next	1.37;

1.37
date	2009.09.03.22.03.21;	author jsm28;	state Exp;
branches;
next	1.36;

1.36
date	2009.07.05.22.38.19;	author palves;	state Exp;
branches;
next	1.35;

1.35
date	2009.07.02.21.57.28;	author palves;	state Exp;
branches;
next	1.34;

1.34
date	2009.03.26.23.30.12;	author tromey;	state Exp;
branches;
next	1.33;

1.33
date	2009.01.03.05.58.03;	author brobecke;	state Exp;
branches;
next	1.32;

1.32
date	2008.04.07.16.32.44;	author vprus;	state Exp;
branches;
next	1.31;

1.31
date	2008.02.27.20.29.31;	author brobecke;	state Exp;
branches;
next	1.30;

1.30
date	2008.01.01.22.53.18;	author drow;	state Exp;
branches;
next	1.29;

1.29
date	2007.11.15.06.28.19;	author vprus;	state Exp;
branches;
next	1.28;

1.28
date	2007.08.23.18.14.16;	author brobecke;	state Exp;
branches;
next	1.27;

1.27
date	2007.03.27.17.59.37;	author drow;	state Exp;
branches;
next	1.26;

1.26
date	2007.01.09.17.59.11;	author drow;	state Exp;
branches;
next	1.25;

1.25
date	2006.11.27.15.09.54;	author nathan;	state Exp;
branches;
next	1.24;

1.24
date	2006.08.10.05.27.20;	author brobecke;	state Exp;
branches;
next	1.23;

1.23
date	2004.06.15.00.16.41;	author cagney;	state Exp;
branches
	1.23.18.1
	1.23.24.1
	1.23.30.1;
next	1.22;

1.22
date	2003.10.07.16.02.16;	author corinna;	state Exp;
branches
	1.22.6.1;
next	1.21;

1.21
date	2003.04.03.16.34.48;	author cagney;	state Exp;
branches
	1.21.24.1;
next	1.20;

1.20
date	2003.03.20.14.10.17;	author corinna;	state Exp;
branches;
next	1.19;

1.19
date	2002.09.18.17.20.54;	author corinna;	state Exp;
branches
	1.19.2.1
	1.19.4.1;
next	1.18;

1.18
date	2002.09.18.17.11.53;	author fnasser;	state Exp;
branches;
next	1.17;

1.17
date	2002.09.18.16.04.53;	author corinna;	state Exp;
branches;
next	1.16;

1.16
date	2002.07.19.00.02.34;	author jimb;	state Exp;
branches;
next	1.15;

1.15
date	2002.05.07.02.22.08;	author msnyder;	state Exp;
branches
	1.15.4.1;
next	1.14;

1.14
date	2002.04.11.03.31.26;	author hunt;	state Exp;
branches;
next	1.13;

1.13
date	2002.02.10.18.58.26;	author drow;	state Exp;
branches;
next	1.12;

1.12
date	2002.02.10.18.21.36;	author drow;	state Exp;
branches;
next	1.11;

1.11
date	2002.01.21.18.46.33;	author jimb;	state Exp;
branches;
next	1.10;

1.10
date	2001.11.11.19.58.19;	author corinna;	state Exp;
branches;
next	1.9;

1.9
date	2001.10.29.18.16.46;	author corinna;	state Exp;
branches;
next	1.8;

1.8
date	2001.09.18.17.49.06;	author corinna;	state Exp;
branches;
next	1.7;

1.7
date	2001.07.25.22.41.43;	author msnyder;	state Exp;
branches;
next	1.6;

1.6
date	2001.05.23.19.04.13;	author chastain;	state Exp;
branches;
next	1.5;

1.5
date	2001.03.06.08.21.50;	author kevinb;	state Exp;
branches;
next	1.4;

1.4
date	2001.02.19.21.48.52;	author fnasser;	state Exp;
branches;
next	1.3;

1.3
date	2000.10.17.20.00.21;	author msnyder;	state Exp;
branches;
next	1.2;

1.2
date	2000.04.24.21.32.51;	author msnyder;	state Exp;
branches;
next	1.1;

1.1
date	99.04.16.01.34.30;	author shebs;	state Exp;
branches
	1.1.1.1;
next	;

1.47.2.1
date	2012.01.06.04.44.00;	author brobecke;	state Exp;
branches;
next	;

1.23.18.1
date	2006.05.03.17.54.32;	author pbrook;	state Exp;
branches;
next	1.23.18.2;

1.23.18.2
date	2006.06.09.20.43.17;	author nathan;	state Exp;
branches;
next	;

1.23.24.1
date	2006.09.15.16.06.58;	author drow;	state Exp;
branches;
next	;

1.23.30.1
date	2006.08.28.07.48.42;	author nickrob;	state Exp;
branches;
next	;

1.22.6.1
date	2004.09.16.17.01.41;	author drow;	state Exp;
branches;
next	;

1.21.24.1
date	2004.03.23.20.12.32;	author ezannoni;	state Exp;
branches;
next	;

1.19.2.1
date	2003.04.16.19.57.02;	author carlton;	state Exp;
branches;
next	1.19.2.2;

1.19.2.2
date	2003.11.11.23.51.11;	author carlton;	state Exp;
branches;
next	;

1.19.4.1
date	2003.12.14.20.27.47;	author drow;	state Exp;
branches;
next	;

1.15.4.1
date	2002.07.22.21.47.11;	author kseitz;	state Exp;
branches;
next	1.15.4.2;

1.15.4.2
date	2002.10.01.00.46.28;	author kseitz;	state Exp;
branches;
next	;

1.1.1.1
date	99.04.16.01.34.30;	author shebs;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	99.04.26.18.27.08;	author shebs;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	99.06.07.19.19.21;	author jsm;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	99.06.14.18.08.47;	author jsm;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	99.06.28.16.03.09;	author jsm;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	99.08.02.23.46.49;	author jsm;	state Exp;
branches;
next	1.1.1.7;

1.1.1.7
date	99.08.31.01.08.30;	author jsm;	state Exp;
branches;
next	1.1.1.8;

1.1.1.8
date	99.12.07.03.56.16;	author jsm;	state Exp;
branches;
next	1.1.1.9;

1.1.1.9
date	2000.02.03.04.14.44;	author jsm;	state Exp;
branches;
next	;


desc
@@


1.50
log
@Remove superfluous semicolons from testsuite throughout.

A few months ago semicolons after "return" were removed throughout the
testsuite.  However, as I pointed out in review, they're unnecessary
not just after "return", but pretty much after any tcl command.  ';'
is the command separator, and you only need it if there's another
command on the same line afterwards.

This patch was written by running:

 $ find . -name "*.exp" | xargs grep -l ";\s*$" | xargs sed -i 's/\([^#][^\s*;]*\)\s*;\s*$/\1/'

and then undoing changes to comments, and lib/future.exp.

Tested on x86_64 Fedora 17.

gdb/testsuite/
2013-06-07  Pedro Alves  <palves@@redhat.com>

	* boards/native-extended-gdbserver.exp: Remove semicolon.
	* config/arm-ice.exp: Likewise.
	* config/bfin.exp: Likewise.
	* config/cygmon.exp: Likewise.
	* config/h8300.exp: Likewise.
	* config/monitor.exp: Likewise.
	* config/sid.exp: Likewise.
	* config/sim.exp: Likewise.
	* config/slite.exp: Likewise.
	* config/vx.exp: Likewise.
	* gdb.arch/i386-bp_permanent.exp: Likewise.
	* gdb.asm/asm-source.exp: Likewise.
	* gdb.base/args.exp: Likewise.
	* gdb.base/attach-pie-misread.exp: Likewise.
	* gdb.base/auxv.exp: Likewise.
	* gdb.base/bigcore.exp: Likewise.
	* gdb.base/bitfields2.exp: Likewise.
	* gdb.base/bitfields.exp: Likewise.
	* gdb.base/break.exp: Likewise.
	* gdb.base/break-interp.exp: Likewise.
	* gdb.base/callfuncs.exp: Likewise.
	* gdb.base/call-sc.exp: Likewise.
	* gdb.base/commands.exp: Likewise.
	* gdb.base/corefile.exp: Likewise.
	* gdb.base/dbx.exp: Likewise.
	* gdb.base/ending-run.exp: Likewise.
	* gdb.base/exprs.exp: Likewise.
	* gdb.base/funcargs.exp: Likewise.
	* gdb.base/hbreak2.exp: Likewise.
	* gdb.base/huge.exp: Likewise.
	* gdb.base/list.exp: Likewise.
	* gdb.base/memattr.exp: Likewise.
	* gdb.base/overlays.exp: Likewise.
	* gdb.base/printcmds.exp: Likewise.
	* gdb.base/recurse.exp: Likewise.
	* gdb.base/remotetimeout.exp: Likewise.
	* gdb.base/reread.exp: Likewise.
	* gdb.base/savedregs.exp: Likewise.
	* gdb.base/scope.exp: Likewise.
	* gdb.base/sepdebug.exp: Likewise.
	* gdb.base/setshow.exp: Likewise.
	* gdb.base/setvar.exp: Likewise.
	* gdb.base/sigaltstack.exp: Likewise.
	* gdb.base/siginfo-addr.exp: Likewise.
	* gdb.base/siginfo.exp: Likewise.
	* gdb.base/siginfo-obj.exp: Likewise.
	* gdb.base/sigrepeat.exp: Likewise.
	* gdb.base/sigstep.exp: Likewise.
	* gdb.base/structs.exp: Likewise.
	* gdb.base/testenv.exp: Likewise.
	* gdb.base/twice.exp: Likewise.
	* gdb.base/valgrind-db-attach.exp: Likewise.
	* gdb.base/valgrind-infcall.exp: Likewise.
	* gdb.base/varargs.exp: Likewise.
	* gdb.base/watchpoint.exp: Likewise.
	* gdb.cp/gdb1355.exp: Likewise.
	* gdb.cp/misc.exp: Likewise.
	* gdb.disasm/hppa.exp: Likewise.
	* gdb.disasm/t01_mov.exp: Likewise.
	* gdb.disasm/t02_mova.exp: Likewise.
	* gdb.disasm/t03_add.exp: Likewise.
	* gdb.disasm/t04_sub.exp: Likewise.
	* gdb.disasm/t05_cmp.exp: Likewise.
	* gdb.disasm/t06_ari2.exp: Likewise.
	* gdb.disasm/t07_ari3.exp: Likewise.
	* gdb.disasm/t08_or.exp: Likewise.
	* gdb.disasm/t09_xor.exp: Likewise.
	* gdb.disasm/t10_and.exp: Likewise.
	* gdb.disasm/t11_logs.exp: Likewise.
	* gdb.disasm/t12_bit.exp: Likewise.
	* gdb.disasm/t13_otr.exp: Likewise.
	* gdb.gdb/selftest.exp: Likewise.
	* gdb.hp/gdb.base-hp/callfwmall.exp: Likewise.
	* gdb.mi/mi-reverse.exp: Likewise.
	* gdb.pascal/floats.exp: Likewise.
	* gdb.python/py-inferior.exp: Likewise.
	* gdb.threads/attach-into-signal.exp: Likewise.
	* gdb.threads/pthreads.exp: Likewise.
	* gdb.threads/thread_events.exp: Likewise.
	* gdb.threads/watchthreads.exp: Likewise.
	* gdb.trace/actions-changed.exp: Likewise.
	* gdb.trace/actions.exp: Likewise.
	* gdb.trace/ax.exp: Likewise.
	* gdb.trace/backtrace.exp: Likewise.
	* gdb.trace/change-loc.exp: Likewise.
	* gdb.trace/deltrace.exp: Likewise.
	* gdb.trace/disconnected-tracing.exp: Likewise.
	* gdb.trace/ftrace.exp: Likewise.
	* gdb.trace/infotrace.exp: Likewise.
	* gdb.trace/passc-dyn.exp: Likewise.
	* gdb.trace/passcount.exp: Likewise.
	* gdb.trace/pending.exp: Likewise.
	* gdb.trace/qtro.exp: Likewise.
	* gdb.trace/range-stepping.exp: Likewise.
	* gdb.trace/report.exp: Likewise.
	* gdb.trace/save-trace.exp: Likewise.
	* gdb.trace/status-stop.exp: Likewise.
	* gdb.trace/strace.exp: Likewise.
	* gdb.trace/tfile.exp: Likewise.
	* gdb.trace/tfind.exp: Likewise.
	* gdb.trace/trace-break.exp: Likewise.
	* gdb.trace/tracecmd.exp: Likewise.
	* gdb.trace/trace-mt.exp: Likewise.
	* gdb.trace/tspeed.exp: Likewise.
	* gdb.trace/tsv.exp: Likewise.
	* gdb.trace/while-stepping.exp: Likewise.
	* lib/gdb.exp: Likewise.
	* lib/gdbserver-support.exp: Likewise.
	* lib/java.exp: Likewise.
	* lib/mi-support.exp: Likewise.
	* lib/pascal.exp: Likewise.
	* lib/prompt.exp: Likewise.
	* lib/trace-support.exp: Likewise.
@
text
@# This testcase is part of GDB, the GNU debugger.

# Copyright 1997-2013 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# use this to debug:
#
#log_user 1

# ending-run.exp -- Expect script to test ending a test run in gdb

if { [prepare_for_testing ending-run.exp ending-run] } {
    return -1
}
remote_exec build "rm -f core"

# CHFts23469: Test that you can "clear" a bp set at
# a line _before_ the routine (which will default to the
# first line in the routine, which turns out to correspond
# to the prolog--that's another bug...)
#

gdb_test "b ending-run.c:1" ".*Breakpoint.*ending-run.c, line 1.*" \
	"bpt at line before routine"

gdb_test "b ending-run.c:14" \
	".*Note.*also.*Breakpoint 2.*ending-run.c, line 14.*" \
	"b ending-run.c:14, one"

# Set up to go to the next-to-last line of the program
#
gdb_test "b ending-run.c:31" ".*Breakpoint 3.*ending-run.c, line 31.*"

# Expect to hit the bp at line "1", but symbolize this
# as line "13".  Then try to clear it--this should work.
#
gdb_run_cmd
gdb_test "" ".*Breakpoint.*1.*callee.*14.*" "run"

gdb_test "cle" ".*Deleted breakpoints 1 2.*" "clear worked"
gdb_test_multiple "i b" "cleared bp at line before routine" {
    -re ".* breakpoint .* breakpoint .*$gdb_prompt $" { 
	fail "cleared bp at line before routine" 
    }
    -re ".*3.*main.*31.*$gdb_prompt $" { 
	pass "cleared bp at line before routine" 
    }
}

# Test some other "clear" combinations
#
gdb_test "b ending-run.c:1" ".*Breakpoint.*4.*"
gdb_test "b ending-run.c:14" ".*Note.*also.*Breakpoint.*5.*" "b ending-run.c:14, two"
gdb_test "cle ending-run.c:14" \
	".*Deleted breakpoint 5.*" "Cleared 2 by line"

gdb_test_multiple "info line ending-run.c:14" "" {
    -re ".*address (0x\[0-9a-fA-F]*).*$gdb_prompt $" {
        set line_nine $expect_out(1,string)
        gdb_test "b ending-run.c:14" ".*Breakpoint 6.*ending-run.c, line 14.*"
        gdb_test "b *$line_nine" ".*Note.*also.*Breakpoint 7.*" "Breakpoint 7 at *ending-run.c:14"
        gdb_test "cle" ".*Deleted breakpoints 4 6 7.*" "Clear 2 by default"
    }
    -re ".*$gdb_prompt $" {
        fail "need to fix test for new compile outcome"
    }
}

gdb_test_multiple "i b" "all set to continue" {
    -re ".* breakpoint .* breakpoint .*$gdb_prompt $" {
        fail "all set to continue (didn't clear bps)" 
    }
    -re ".*3.*main.*31.*$gdb_prompt $" {
        pass "all set to continue"
    }
    -re ".*$gdb_prompt $" {
        fail "all set to continue (missing bp at end)"
    }
}


# See if we can step out with control.  The "1 2 3" stuff
# is output from the program.
#
if ![gdb_skip_stdio_test "cont"] {
    gdb_test "cont" ".*1 2 7 14 23 34 47 62 79.*Breakpoint.*31.*"
} else {
    gdb_test "cont" ".*Breakpoint.*31.*"
}

if ![gdb_skip_stdio_test "Step to return"] {
    gdb_test "next" ".*Goodbye!.*32.*" \
	    "Step to return"
} else {
    gdb_test "next" ".*" ""
}

set old_timeout $timeout
set timeout 50
set program_exited 0
set nexted 0

gdb_test_multiple "next" "step out of main" {
    -re "33\[ \t\]+\}.*$gdb_prompt $" {
	# sometimes we stop at the closing brace, if so, do another next
	if { $nexted } {
	    fail "step out of main"
	} else {
	    set nexted 1
	    send_gdb "next\n"
	    exp_continue
	}
    }
    -re ".*Unable to find return pc for this frame.*$gdb_prompt $" {
	fail "step out of main"
	gdb_test "n" ".*" ""
    }
    -re ".*in.*start.*$gdb_prompt $" { 
	pass "step out of main"
    }
    -re ".*in.*bsp_trap.*$gdb_prompt $" { 
	pass "step out of main"
    }
    -re ".*in.*init.*$gdb_prompt $" { 
	# This is what happens on sparc64-elf ultra.
	pass "step out of main"
    }
    -re ".*in.*dll_crt0_1.*$gdb_prompt $" {
	# This is what happens on Cygwin.
	pass "step out of main"
    }
    -re ".*WinMain.*$gdb_prompt $" {
	# This is what happens on mingw32ce.
	pass "step out of main"
    }
    -re ".*$inferior_exited_re normally.*$gdb_prompt $" {
	# This is what happens on Linux i86 (and I would expect others)
	set program_exited 1
	pass "step out of main"
    }
    -re ".*in .nope ().*$gdb_prompt $" {
	# This is what happens on Solaris currently -sts 1999-08-25
	pass "step out of main"
    }
    -re ".*in _int_reset ().*$gdb_prompt $" {
	# This is what happens on Sanyo XStormy16
	pass "step out of main"
    }
    -re ".*init ().*$gdb_prompt $" {
	# This is what happens on many Mips targets
	pass "step out of main"
    }
    -re ".*in ..change.mode ().*$gdb_prompt $" {
	# This is what happens on ARM in thumb mode -fn 2000-02-01
	pass "step out of main"
    }
    -re ".*__rt_entry.* ().*$gdb_prompt $" {
	# This is what happens on the ARM RVDS runtime
	pass "step out of main"
    }
    -re ".*in.*\\\$START\\\$.*from.*dld.sl.*$gdb_prompt $" { 
	pass "step out of main"
    }
    -re ".*in __wrap__?main ().*$gdb_prompt $" {
	pass "step out of main"
    }
    -re "__setup_argv_for_main (.*).*$gdb_prompt $" {
	# On sh, another wrapper function (start_l) exists, so
	# another `next' is necessary.
	gdb_test "next" ".*in start_l ().*" "step out of main"
    }
    -re "E32Main (.*).*$gdb_prompt $" {
	# On SymbianOS there's a different function which calls main.
	pass "step out of main"
    }
    -re ".*in.*currently asm.*$gdb_prompt $" { 
        pass "step out of main"
    }
    -re "_*start\[0-9\]* \\(\[^)\]*\\).*$gdb_prompt $" {
        pass "step out of main"
    }
    -re ".*Program received signal SIGTRAP.*$gdb_prompt $" {
        pass "step out of main"
    }
    -re ".*in.*__uClibc_main.*$gdb_prompt $" {
	# This is what happens on system using uClibc.
	pass "step out of main"
    }
}

# When we're talking to a program running on a real stand-alone board,
# every BSP's exit function behaves differently, so there's no single
# way to tell whether we've exited gracefully or not.  So don't run
# these tests when use_gdb_stub is set, or when we're running under Cygmon.
set program_exited_normally 0
set program_not_exited 0
set program_in_exit 0
if {!$use_gdb_stub
    && (! [target_info exists use_cygmon] || ! [target_info use_cygmon])} {
    global program_exited
    if {[eval expr $program_exited == 0]} {
	gdb_test_multiple "n" "step to end of run" {
	    -re "$inferior_exited_re normally.*$gdb_prompt $" {
		# If we actually have debug info for the start function,
		# then we won't get the "Single-stepping until function
		# exit" message.
		pass "step to end of run"
		set program_exited_normally 1
	    }
	    -re "Single.*EXIT code 0\r\n.*$inferior_exited_re normally.*$gdb_prompt $" {
		pass "step to end of run (status wrapper)"
		set program_exited_normally 1
	    }
	    -re "Single.*EXIT code 0\r\n.*$gdb_prompt $" {
		pass "step to end of run (status wrapper)"
	    }
	    -re ".*Single.*$inferior_exited_re.*$gdb_prompt $" {
		pass "step to end of run"
		set program_exited_normally 1
	    }
	    -re ".*Single.*in exit.*from.*dld.sl.*$gdb_prompt $" {
		pass "step to end of run" 
		set program_in_exit 1
	    }
	    -re ".*Single.*_int_reset.*$gdb_prompt $" {
	        pass "step to end of run"
		if {![istarget "xstormy16-*-*"]} {
		    set program_exited_normally 1
		}
	    }
	}   
    }

    if {$program_in_exit} {
	if {[gdb_test "c" ".*" "continue after exit"] == 0} {
	    set program_exited_normally 1
	}
    } else {
	unsupported "continue after exit"
    }

    if {$program_exited_normally} {
        gdb_test "n" ".*The program is not being run.*" "don't step after run"
    } elseif {$program_not_exited} {
	unresolved "don't step after run"
    } else {
	unsupported "don't step after run"
    }

    set exec_output [remote_exec host "ls core"]

    if [ regexp "core not found" $exec_output]  {
	pass "No core dumped on quit"
    } else {
	if [ regexp "No such file or directory" $exec_output] {
	    pass "ls: core (No core dumped on quit)"
	} else {
	    remote_exec build "rm -f core"
	    fail "ls: core (Core dumped on quit)"
	}
    }
}

set timeout $old_timeout

#remote_exec build "rm -f ${binfile}"
return 0




@


1.49
log
@Update years in copyright notice for the GDB files.

Two modifications:
  1. The addition of 2013 to the copyright year range for every file;
  2. The use of a single year range, instead of potentially multiple
     year ranges, as approved by the FSF.
@
text
@d212 1
a212 1
    global program_exited;
@


1.48
log
@Copyright year update in most files of the GDB Project.

gdb/ChangeLog:

        Copyright year update in most files of the GDB Project.
@
text
@d3 1
a3 1
# Copyright 1997-2004, 2007-2012 Free Software Foundation, Inc.
@


1.47
log
@gdb/testsuite/
	* gdb.base/break-entry.exp: Move the target use_gdb_stub test before
	starting GDB.
	* gdb.base/default.exp: Replace target use_gdb_stub checks by global
	$use_gdb_stub.
	* gdb.base/display.exp: Likewise.
	* gdb.base/ending-run.exp: Likewise.
	* gdb.base/list.exp (test_listsize): Likewise.
	* gdb.base/setshow.exp: Likewise.
	* gdb.base/valgrind-db-attach.exp: Set global use_gdb_stub to 1.
	* lib/gdb.exp (gdb_run_cmd, gdb_start_cmd): Replace target use_gdb_stub
	check by global $use_gdb_stub.
	(gdb_test_multiple): Forbid run, start or attach for !$use_gdb_stub.
	(default_gdb_start): Set global use_gdb_stub from target use_gdb_stub.
	(default_gdb_init): Unset global $use_gdb_stub.
	(gdb_continue_to_end, rerun_to_main): Replace target use_gdb_stub check
	by global $use_gdb_stub.
	* lib/gdbserver-support.exp: Extend comments for set_board_info
	gdb_protocol and gdb,socketport.
	(gdbserver_start_extended): Set global gdbserver_protocol and
	gdbserver_gdbport.  Clear global use_gdb_stub.
	* lib/mi-support.exp (default_mi_gdb_start): Set global use_gdb_stub
	from target use_gdb_stub.
	(mi_run_cmd): Replace target use_gdb_stub check by global $use_gdb_stub.
@
text
@d3 1
a3 2
# Copyright 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2007, 2008, 2009,
# 2010, 2011 Free Software Foundation, Inc.
@


1.47.2.1
log
@Copyright year update in most files of the GDB Project.

gdb/ChangeLog:

        Copyright year update in most files of the GDB Project.
@
text
@d3 2
a4 1
# Copyright 1997-2004, 2007-2012 Free Software Foundation, Inc.
@


1.46
log
@2011-06-01  Yao Qi  <yao@@codesourcery.com>

	* gdb.base/ending-run.exp: Match __uClibc_main for uClibc.
@
text
@d211 1
a211 1
if {! [target_info exists use_gdb_stub]
@


1.45
log
@gdb
	* infrun.c (print_exited_reason): Include inferior id and pid in
	message.
gdb/testsuite
	* lib/opencl.exp (skip_opencl_tests): Update for exit message
	change.
	* lib/mi-support.exp (mi_gdb_test): Update for exit message
	change.
	* lib/gdb.exp (gdb_test_multiple): Update comment.  Update for
	exit message change.
	(skip_altivec_tests): Update for exit message change.
	(skip_vsx_tests): Likewise.
	(gdb_continue_to_end): Likewise.  Add 'command' argument.
	* lib/cell.exp (skip_cell_tests): Update for exit message change.
	* gdb.threads/tls.exp: Update for exit message change.
	* gdb.threads/thread-unwindonsignal.exp: Use
	gdb_continue_to_end.
	* gdb.threads/step.exp (step_it): Update for exit message change.
	(continue_all): Likewise.
	* gdb.threads/print-threads.exp (test_all_threads): Update for
	exit message change.
	* gdb.threads/interrupted-hand-call.exp: Use
	gdb_continue_to_end.
	* gdb.threads/execl.exp: Use gdb_continue_to_end.
	* gdb.python/py-prettyprint.exp (run_lang_tests): Use
	gdb_continue_to_end.
	* gdb.hp/gdb.objdbg/objdbg02.exp: Use gdb_continue_to_end.
	* gdb.hp/gdb.objdbg/objdbg01.exp: Use gdb_continue_to_end.
	* gdb.hp/gdb.defects/solib-d.exp: Update for exit message change.
	* gdb.cp/method.exp: Update for exit message change.
	* gdb.cp/mb-templates.exp: Update for exit message change.
	* gdb.cp/mb-inline.exp: Use gdb_continue_to_end.
	* gdb.cp/annota3.exp: Update for exit message change.
	* gdb.cp/annota2.exp: Update for exit message change.
	* gdb.cell/fork.exp: Use gdb_continue_to_end.
	* gdb.base/term.exp: Update for exit message change.
	* gdb.base/step-test.exp (test_i): Update for exit message change.
	* gdb.base/sigstep.exp (advance): Update for exit message change.
	(advancei): Likewise.
	* gdb.base/siginfo.exp: Update for exit message change.
	* gdb.base/shlib-call.exp: Use gdb_continue_to_end.
	* gdb.base/reread.exp: Use gdb_continue_to_end.
	* gdb.base/langs.exp: Use gdb_continue_to_end.
	* gdb.base/interrupt.exp: Update for exit message change.
	* gdb.base/gdb1555.exp: Update for exit message change.
	* gdb.base/exe-lock.exp: Use gdb_continue_to_end.
	* gdb.base/ending-run.exp: Update for exit message change.
	* gdb.base/chng-syms.exp: Update for exit message change.
	* gdb.base/checkpoint.exp: Update for exit message change.
	* gdb.base/catch-syscall.exp (check_for_program_end): Use
	gdb_continue_to_end.
	(test_catch_syscall_with_wrong_args): Likewise.
	* gdb.base/call-signal-resume.exp: Use gdb_continue_to_end.
	* gdb.base/break-interp.exp (test_ld): Update for exit message
	change.
	* gdb.base/bang.exp: Update for exit message change.
	* gdb.base/attach.exp (do_attach_tests): Use gdb_continue_to_end.
	(do_call_attach_tests): Likewise.
	* gdb.base/a2-run.exp: Update for exit message change.
	* gdb.arch/ppc-dfp.exp: Update for exit message change.
	* gdb.ada/tasks.exp: Use gdb_continue_to_end.
	* gdb.ada/catch_ex.exp: Use gdb_continue_to_end.
@
text
@d198 4
@


1.44
log
@run copyright.sh for 2011.
@
text
@d149 1
a149 1
    -re ".*Program exited normally.*$gdb_prompt $" {
d212 1
a212 1
	    -re "Program exited normally.*$gdb_prompt $" {
d219 1
a219 1
	    -re "Single.*EXIT code 0\r\n.*Program exited normally.*$gdb_prompt $" {
d226 1
a226 1
	    -re ".*Single.*Program exited.*$gdb_prompt $" {
@


1.43
log
@2010-06-08  Michael Snyder  <msnyder@@vmware.com>

	* gdb.ada/exec_changed.exp:
	Use ".*" instead of "" as wildcard regexp.

	* gdb.base/async.exp: Use ".*" instead of "" as wildcard regexp.
	* gdb.base/call-ar-st.exp: Ditto.
	* gdb.base/checkpoint.exp: Ditto.
	* gdb.base/default.exp: Ditto.
	* gdb.base/dump.exp: Ditto.
	* gdb.base/ending-run.exp: Ditto.
	* gdb.base/fileio.exp: Ditto.
	* gdb.base/miscexprs.exp: Ditto.
	* gdb.base/pointers.exp: Ditto.
	* gdb.base/readline.exp: Ditto.
	* gdb.base/reread.exp: Ditto.
	* gdb.base/restore.exp: Ditto.
	* gdb.base/shlib-call.exp: Ditto.
	* gdb.base/valgrind-db-attach.exp: Ditto.
	* gdb.base/volatile.exp: Ditto.
	* gdb.base/watchpoints.exp: Ditto.

	* gdb.cp/classes.exp: Use ".*" instead of "" as wildcard regexp.

	* gdb.python/py-frame.exp: Use ".*" instead of "" as wildcard regexp.
	* gdb.python/py-value.exp: Ditto.

	* gdb.trace/backtrace.exp: Use ".*" instead of "" as wildcard regexp.
	* gdb.trace/circ.exp: Ditto.
	* gdb.trace/collection.exp: Ditto.
	* gdb.trace/packetlen.exp: Ditto.
	* gdb.trace/passc-dyn.exp: Ditto.
	* gdb.trace/report.exp: Ditto.
	* gdb.trace/tfile.exp: Ditto.
	* gdb.trace/tfind.exp: Ditto.
	* gdb.trace/while-dyn.exp: Ditto.
@
text
@d4 1
a4 1
# 2010 Free Software Foundation, Inc.
@


1.42
log
@2010-05-24  Michael Snyder  <msnyder@@vmware.com>

	* gdb.base/default.exp: Replace send_gdb with gdb_test.
	* gdb.base/define.exp: Replace send_gdb with gdb_test.
	* gdb.base/display.exp: Replace send_gdb with gdb_test.
	* gdb.base/dump.exp: Replace send_gdb with gdb_test.
	* gdb.base/ending-run.exp: Replace send_gdb with gdb_test.
	* gdb.base/eval-skip.exp: Replace send_gdb with gdb_test.
	* gdb.base/exprs.exp: Replace send_gdb with gdb_test.
	* gdb.base/fileio.exp: Replace send_gdb with gdb_test.
	* gdb.base/finish.exp: Replace send_gdb with gdb_test.
	* gdb.base/foll-fork.exp: Replace send_gdb with gdb_test.
	* gdb.base/funcargs.exp: Replace send_gdb with gdb_test.
	* gdb.base/gcore-buffer-overflow.exp: Replace send_gdb with gdb_test.
	* gdb.base/gcore.exp: Replace send_gdb with gdb_test.
	* gdb.base/gdb1090.exp: Replace send_gdb with gdb_test.
	* gdb.base/gdbvars.exp: Replace send_gdb with gdb_test.
	* gdb.base/help.exp: Replace send_gdb with gdb_test.
	* gdb.base/info-proc.exp: Replace send_gdb with gdb_test.
	* gdb.base/jump.exp: Replace send_gdb with gdb_test.
	* gdb.base/long_long.exp: Replace send_gdb with gdb_test.
@
text
@d108 1
a108 1
    gdb_test "next" "" ""
@


1.41
log
@	* gdb.base/completion.exp: Allow long instead of long int.
	* gdb.base/ending-run.exp: Match _rt_entry.* for RealView.
	* gdb.base/gdbvars.c (main): Remove unused usestubs code.  Reference
	variable p.
	* gdb.base/maint.exp: Allow ER_RO and ER_RW instead of .text and .data.
	* gdb.base/pointers.exp: Allow long instead of long int.
	* gdb.base/printcmds.exp: XFAIL for RealView on ARM EABI.
	* gdb.base/step-line.exp: Allow a directory before the source file name.
@
text
@d54 1
a54 2
send_gdb "i b\n"
gdb_expect {
a60 3
    -re ".*$gdb_prompt $" { 
	fail "cleared bp at line before routine (info b)" 
    }
d70 1
a70 2
send_gdb "info line ending-run.c:14\n"
gdb_expect {
d82 1
a82 2
send_gdb "i b\n"
gdb_expect {
a113 1
send_gdb "next\n"
d115 2
a116 1
gdb_expect {
a197 2
    -re ".*$gdb_prompt $" { fail "step out of main" }
    timeout { fail "step out of main" }
d211 1
a211 2
	send_gdb "n\n"
	gdb_expect {
a239 8
	    -re ".*$gdb_prompt $" {
		fail "step to end of run"
		set program_not_exited 1
	    }
	    timeout { 
		fail "(timeout) step to end of run" 
		set program_not_exited 1
	    }
@


1.40
log
@	gdb/testsuite/
	* lib/gdb.exp (skip_stl_tests): New.
	(gdb_compile): Symbian needs -ldl.
	(shlib_target_file): New.
	(shlib_symbol_file): New.
	(gdb_load_shlibs): Use shlib_target_file.
	* lib/mi-support.exp (mi_load_shlibs): Use shlib_target_file.
	* gdb.cp/exception.exp: Use skip_stl_tests.
	* gdb.cp/bs15503.exp: Use skip_stl_tests.  Use untested.
	* gdb.cp/try_catch.exp: Use skip_stl_tests.
	* gdb.cp/mb-templates.exp: Ditto.
	* gdb.base/commands.exp: Relax regexes.
	* gdb.base/watchpoint-solib.exp: Don't skip on symbian.  Use
	shlib_target_file and shlib_symbol_file.
	* gdb.base/maint.exp: Allow lowercase t.  Allow .rodata in
	sections.
	* gdb.base/ending-run.exp: Accept E32Main for symbian.
	* gdb.base/solib-disc.exp: Use
	shlib_target_file and shlib_symbol_file.
	* gdb.base/unload.exp: Don't skip on symbian.  Use
	shlib_target_file and shlib_symbol_file.
	* gdb.base/list.exp: Check use_gdb_stub instead of is_remote.
@
text
@d176 1
a176 1
    -re ".*__rt_entry ().*$gdb_prompt $" {
@


1.39
log
@	* gdb.base/call-strs.exp, gdb.base/default.exp,
	gdb.base/ending-run.exp, gdb.base/finish.exp, gdb.base/funcargs.exp,
	gdb.base/huge.exp, gdb.base/nodebug.exp, gdb.base/ptype.exp,
	gdb.base/restore.exp, gdb.base/return.exp, gdb.base/setvar.exp,
	gdb.base/watchpoints.exp, gdb.threads/gcore-thread.exp,
	gdb.base/watchpoint-solib.exp: Save and restore timeout.
	* gdb.base/ending-run.exp: Correct restore of timeout.
	* gdb.base/page.exp: Remove unnecessary timeout setting.
@
text
@d191 4
@


1.38
log
@Update copyright year in most headers.

Automatic update by copyright.sh.
@
text
@a263 2
    set timeout $old_timeout

d286 2
@


1.37
log
@	* gdb.base/ending-run.exp: Restrict regular expression matching
	line number to require closing brace following.
@
text
@d3 2
a4 2
# Copyright 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2007, 2008, 2009
# Free Software Foundation, Inc.
@


1.36
log
@	* gdb.base/ending-run.exp: Add "step out of main" pattern for
	mingw32ce.
@
text
@d123 1
a123 1
    -re "33.*$gdb_prompt $" {
@


1.35
log
@gdb/
2009-07-02  Pedro Alves  <pedro@@codesourcery.com>

	* linux-nat.c (linux_child_follow_fork): If we're staying attached
	to the child process, enable event reporting on it.  Don't handle
	checkpoints here.  Instead, add the child fork to the lwp thread
	and inferior lists without clobbering the previous inferior.  Let
	the thread_db layer learn about a new child process, even if
	following the parent.
	(linux_nat_switch_fork): Delete lwps of the current inferior only,
	instead of clearing the whole list.  Use thread_change_ptid to
	give the core the illusion the new checkpoint is still the same
	inferior.  Clear the register cache.
	(linux_handle_extended_wait): Handle checkpoints here.
	(linux_multi_process): Turn on.
	* linux-fork.c (struct fork_info) <pc>: Remove field.
	(init_fork_list): Do not delete the checkpoint from the inferior
	list (it is not there).
	(fork_load_infrun_state): Don't switch inferior_ptid here.  Pass
	the new checkpoint's ptid to linux_nat_switch_fork.
	(fork_save_infrun_state): Make static.  Don't stop the pc field of
	fork_info, it's gone.
	(linux_fork_mourn_inferior): Don't delete the checkpoint from the
	inferior list, it's not there.
	(linux_fork_detach): Ditto.
	(delete_fork_command): Replace mention of fork/checkpoint by
	checkpoint only.
	(detach_fork_command): Likewise.  Don't delete the checkpoint from
	the inferior list.
	(info_forks_command): Adjust.
	(restore_detach_fork): Delete.
	(checkpointing_pid): New.
	(linux_fork_checkpointing_p): New.
	(save_detach_fork): Delete.
	(checkpoint_command): Delete temp_detach_fork.  Don't remove
	breakpoints, that's a nop.  Store the pid of the process we're
	checkpointing, and use make_cleanup_restore_integer to restore it.
	Don't reinsert breakpoints here.
	(process_command, fork_command): Delete.
	(restart_command): Update comments to only mention checkpoints,
	not forks.
	(_initialize_linux_fork): Delete "fork", "process", "info forks"
	commands.
	* linux-fork.h (fork_save_infrun_state, fork_list): Delete
	declarations.
	(linux_fork_checkpointing_p): Declare.
	* cli/cli-cmds.c (killlist): New.
	* cli/cli-cmds.h (killlist): Declare.
	* gdbcmd.h (killlist): Declare.
	* inferior.c: Include "gdbthread.h".
	(detach_inferior_command, kill_inferior_command)
	(inferior_command): New.
	(info_inferiors_command): Allow specifying a specific inferior id.
	(_initialize_inferiors): Register "inferior", "kill inferior" and
	"detach inferior" commands.
	* infcmd.c (_initialize_infcmd): Make "kill" a prefix command.
	* gdbthread.h (any_thread_of_process): Declare.
	* thread.c (any_thread_of_process): New.

	* NEWS: Mention multi-inferior debugging.  Mention 'info
	inferiors', 'inferior', 'detach inferior' and 'kill inferior' as
	new commands.
	(Removed commands): New section, mentioning that 'info forks',
	'fork', 'process', 'delete fork' and 'detach fork' are now gone.

gdb/testsuite/
2009-07-02  Pedro Alves  <pedro@@codesourcery.com>

	* gdb.base/multi-forks.exp: Only run detach-on-fork tests on
	linux.  Adjust to use "inferior", "info inferiors", "detach
	inferior" and "kill inferior" instead of "restart", "info fork",
	"detach fork" and "delete fork".
	* gdb.base/ending-run.exp: Spell out "info".
	* gdb.base/help.exp: Adjust to use test_prefix_command_help for
	the "kill" command.

gdb/doc/
2009-07-02  Pedro Alves  <pedro@@codesourcery.com>

	* gdb.texinfo (Debugging multiple inferiors): Document the
	"inferior", "detach inferior" and "kill inferior" commands.
	(Debugging Programs with Multiple Processes): Adjust to mention
	generic "inferior" commands.  Delete mention of "detach fork" and
	"delete fork".  Cross reference to "Debugging multiple inferiors"
	section.
@
text
@d151 4
@


1.34
log
@gdb
	* breakpoint.c (resolve_sal_pc): Preserve original line number
	when skipping prologue.
gdb/testsuite
	Update for change to prologue skipping:
	* gdb.mi/mi2-simplerun.exp: Update.
	* gdb.mi/mi2-break.exp: Update.
	* gdb.mi/mi-simplerun.exp: Update.
	* gdb.mi/mi-break.exp: Update.
	* gdb.base/ending-run.exp: Update.
@
text
@d74 1
a74 1
send_gdb "inf line ending-run.c:14\n"
@


1.33
log
@        Updated copyright notices for most files.
@
text
@d72 1
a72 1
	".*Deleted breakpoints 4 5.*" "Cleared 2 by line"
d80 1
a80 1
        gdb_test "cle" ".*Deleted breakpoints 6 7.*" "Clear 2 by default"
@


1.32
log
@	Introduce test setup helpers.
        * lib/gdb.exp (build_executable, clean_restart)
        (prepare_for_testing): New.
        * gdb.base/break.exp: Use prepare_for_testing, and clean_restart.
        * gdb.base/return.exp: Likewise.
        * gdb.base/ending-run.exp: Likewise.
@
text
@d3 1
a3 1
# Copyright 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2007, 2008
@


1.31
log
@        * gdb.base/ending-run.exp: Use the first line of code inside
        function body to test breakpoints.
        * gdb.mi/mi-break.exp, gdb.mi/mi2-break.exp: Adjust the actual
        location where the breakpoint is inserted when using the line
        where a function is declared. Fix typo in the description of
        one of the tests.
        * gdb.mi/mi-simplerun.exp, gdb.mi/mi2-simplerun.exp: Likewise.
@
text
@d25 2
a26 2
if $tracelevel then {
    strace $tracelevel
a27 6

set testfile ending-run
set srcfile ${testfile}.c
set binfile ${objdir}/${subdir}/${testfile}

remote_exec build "rm -f ${binfile}"
a29 13

if  { [gdb_compile "${srcdir}/${subdir}/${srcfile}" "${binfile}" executable {debug}] != "" } {
     untested ending-run.exp
     return -1
}



gdb_exit
gdb_start
gdb_reinitialize_dir $srcdir/$subdir
gdb_load ${binfile}

@


1.30
log
@	Updated copyright notices for most files.
@
text
@d58 3
a60 3
gdb_test "b ending-run.c:13" \
	".*Note.*also.*Breakpoint 2.*ending-run.c, line 13.*" \
	"b ending-run.c:13, one"
d70 1
a70 1
gdb_test "" ".*Breakpoint.*1.*callee.*13.*" "run"
d89 3
a91 15
gdb_test "b ending-run.c:13" ".*Note.*also.*Breakpoint.*5.*" "b ending-run.c:13, two"
gdb_test "cle ending-run.c:13" \
	".*Deleted breakpoint 5.*" "Only cleared 1 by line"

send_gdb "inf line ending-run.c:13\n"
gdb_expect {
    -re ".*address (0x\[0-9a-fA-F]*).*$gdb_prompt $" {
        set line_eight $expect_out(1,string)
        gdb_test "b 13" ".*Breakpoint.*6.*"
        gdb_test "cle *$line_eight" ".*Deleted breakpoints 4 6.*" "Clear 2 by address"
    }
    -re ".*$gdb_prompt $" {
        fail "need to fix test for new compile outcome"
    }
}
d97 3
a99 4
        gdb_test "b ending-run.c:14" ".*Breakpoint 7.*ending-run.c, line 14.*"
        gdb_test "b *$line_nine" ".*Note.*also.*Breakpoint 8.*" "Breakpoint 7 at *ending-run.c:14"
        gdb_test "c" ".*Breakpoint.*7.*callee.*14.*"
        gdb_test "cle" ".*Deleted breakpoints 7 8.*" "Clear 2 by default"
@


1.29
log
@	Prevent clear_command from directly modifying breakpoint list.
	* Makefile.in (breakpoint_h): Update dependency.
	* breakpoint.c (clear_command): Do not remove
	breakpoints from breakpoint_chain.  Collect breakpoints
	to delete in a vector.
	* breakpoint.h (breakpoint_p): New typedef for pointer to
	breakpoint.  Register vector of breakpoint_p.
@
text
@d3 1
a3 1
# Copyright 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2007
@


1.28
log
@        Switch the license of all .exp files to GPLv3.
        Switch the license of all .f and .f90 files to GPLv3.
        Switch the license of all .s and .S files to GPLv3.
@
text
@d72 1
a72 1
gdb_test "cle" ".*Deleted breakpoints 2 1.*" "clear worked"
d98 1
a98 1
        gdb_test "cle *$line_eight" ".*Deleted breakpoints 6 4.*" "Clear 2 by address"
d112 1
a112 1
        gdb_test "cle" ".*Deleted breakpoints 8 7.*" "Clear 2 by default"
@


1.27
log
@	* config/gdbserver.exp (gdbserver_gdb_load): Update argument list.
	(gdb_load): Delete, replace with...
	(gdb_reload): ...this.
	* gdb.server/server-run.exp: Use gdb_load and gdbserver_run.
	* gdb.server/server-mon.exp: Likewise.
	* lib/gdb.exp (gdb_run_cmd): Use gdb_reload.
	(gdb_start_cmd): New.
	(gdb_file_cmd): Save the last loaded file.
	(gdb_reload): New.
	(gdb_gnu_strip_debug): Use transform.
	* lib/gdbserver-support.exp (gdbserver_spawn): Move file download
	support here.  Use new $last_loaded_file.  Check mtime.
	(gdb_target_cmd): Handle ObjC failure case.
	(infer_host_exec): Delete.
	(gdbserver_load): Rename to...
	(gdbserver_run): ...this.  Simplify.
	* lib/mi-support.exp (mi_gdb_file_cmd): Set last_loaded_file.
	(mi_gdb_load): Move most contents to a new function...
	(mi_gdb_target_load): ...here.  Simplify call to gdbserver_gdb_load.
	(mi_run_cmd): Use mi_gdb_target_load.
	* gdb.base/break.exp, gdb.base/ending-run.exp, gdb.base/pending.exp,
	gdb.base/sepdebug.exp, gdb.base/unload.exp, gdb.objc/objcdecode.exp:
	Use gdb_run_cmd.
	* gdb.base/charsign.exp: Remove incorrect comment.
	* gdb.base/dbx.exp (gdb_file_cmd): Set last_loaded_file.
	* gdb.ada/exec_changed.exp, gdb.ada/null_record.exp, gdb.ada/start.exp,
	gdb.base/start.exp: Use gdb_start_cmd.
@
text
@d8 1
a8 1
# the Free Software Foundation; either version 2 of the License, or
d10 1
a10 1
# 
d15 1
a15 1
# 
d17 1
a17 2
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
@


1.26
log
@Copyright updates for 2007.
@
text
@d70 3
a72 5
if [target_info exists use_gdb_stub] {
  gdb_test "continue" ".*Breakpoint.*1.*callee.*13.*"
} else {
  gdb_test "r" ".*Breakpoint.*1.*callee.*13.*"
}
@


1.25
log
@	* gdb.base/ending-run.exp: Flatten expect script stepping out of
        main to remove duplication.  Add start function of the form
	'_*start[1-9]*'. Add RVDS start function.
@
text
@d3 2
a4 2
# Copyright 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004 Free
# Software Foundation, Inc.
@


1.24
log
@	* gdb.arch/altivec-abi.exp: Replace gdb_suppress_entire_file with
	untested followed by return combination.
	* gdb.arch/altivec-regs.exp: Likewise.
	* gdb.arch/e500-abi.exp: Likewise.
	* gdb.arch/e500-regs.exp: Likewise.
	* gdb.arch/gdb1291.exp: Likewise.
	* gdb.arch/gdb1431.exp: Likewise.
	* gdb.arch/gdb1558.exp: Likewise.
	* gdb.arch/i386-prologue.exp: Likewise.
	* gdb.arch/i386-unwind.exp: Likewise.
	* gdb.asm/asm-source.exp: Likewise.
	* gdb.base/a2-run.exp: Likewise.
	* gdb.base/advance.exp: Likewise.
	* gdb.base/all-bin.exp: Likewise.
	* gdb.base/annota1.exp: Likewise.
	* gdb.base/annota3.exp: Likewise.
	* gdb.base/args.exp: Likewise.
	* gdb.base/arithmet.exp: Likewise.
	* gdb.base/assign.exp: Likewise.
	* gdb.base/async.exp: Likewise.
	* gdb.base/attach.exp: Likewise.
	* gdb.base/bang.exp: Likewise.
	* gdb.base/bigcore.exp: Likewise.
	* gdb.base/bitfields.exp: Likewise.
	* gdb.base/bitfields2.exp: Likewise.
	* gdb.base/break.exp: Likewise.
	* gdb.base/call-sc.exp: Likewise.
	* gdb.base/call-strs.exp: Likewise.
	* gdb.base/callfuncs.exp: Likewise.
	* gdb.base/checkpoint.exp: Likewise.
	* gdb.base/chng-syms.exp: Likewise.
	* gdb.base/code-expr.exp: Likewise.
	* gdb.base/commands.exp: Likewise.
	* gdb.base/completion.exp: Likewise.
	* gdb.base/cond-expr.exp: Likewise.
	* gdb.base/condbreak.exp: Likewise.
	* gdb.base/consecutive.exp: Likewise.
	* gdb.base/constvars.exp: Likewise.
	* gdb.base/corefile.exp: Likewise.
	* gdb.base/cvexpr.exp: Likewise.
	* gdb.base/dbx.exp: Likewise.
	* gdb.base/define.exp: Likewise.
	* gdb.base/detach.exp: Likewise.
	* gdb.base/display.exp: Likewise.
	* gdb.base/dump.exp: Likewise.
	* gdb.base/ena-dis-br.exp: Likewise.
	* gdb.base/ending-run.exp: Likewise.
	* gdb.base/environ.exp: Likewise.
	* gdb.base/eval-skip.exp: Likewise.
	* gdb.base/exprs.exp: Likewise.
	* gdb.base/fileio.exp: Likewise.
	* gdb.base/finish.exp: Likewise.
	* gdb.base/float.exp: Likewise.
	* gdb.base/foll-exec.exp: Likewise.
	* gdb.base/foll-fork.exp: Likewise.
	* gdb.base/foll-vfork.exp: Likewise.
	* gdb.base/freebpcmd.exp: Likewise.
	* gdb.base/funcargs.exp: Likewise.
	* gdb.base/gcore.exp: Likewise.
	* gdb.base/gdb1090.exp: Likewise.
	* gdb.base/gdb1250.exp: Likewise.
	* gdb.base/huge.exp: Likewise.
	* gdb.base/info-proc.exp: Likewise.
	* gdb.base/interrupt.exp: Likewise.
	* gdb.base/jump.exp: Likewise.
	* gdb.base/langs.exp: Likewise.
	* gdb.base/lineinc.exp: Likewise.
	* gdb.base/list.exp: Likewise.
	* gdb.base/logical.exp: Likewise.
	* gdb.base/long_long.exp: Likewise.
	* gdb.base/macscp.exp: Likewise.
	* gdb.base/maint.exp: Likewise.
	* gdb.base/mips_pro.exp: Likewise.
	* gdb.base/miscexprs.exp: Likewise.
	* gdb.base/multi-forks.exp: Likewise.
	* gdb.base/opaque.exp: Likewise.
	* gdb.base/overlays.exp: Likewise.
	* gdb.base/pc-fp.exp: Likewise.
	* gdb.base/pointers.exp: Likewise.
	* gdb.base/printcmds.exp: Likewise.
	* gdb.base/psymtab.exp: Likewise.
	* gdb.base/ptype.exp: Likewise.
	* gdb.base/recurse.exp: Likewise.
	* gdb.base/relational.exp: Likewise.
	* gdb.base/relocate.exp: Likewise.
	* gdb.base/remote.exp: Likewise.
	* gdb.base/reread.exp: Likewise.
	* gdb.base/restore.exp: Likewise.
	* gdb.base/return.exp: Likewise.
	* gdb.base/return2.exp: Likewise.
	* gdb.base/scope.exp: Likewise.
	* gdb.base/sect-cmd.exp: Likewise.
	* gdb.base/sep.exp: Likewise.
	* gdb.base/sepdebug.exp: Likewise.
	* gdb.base/setshow.exp: Likewise.
	* gdb.base/setvar.exp: Likewise.
	* gdb.base/sigall.exp: Likewise.
	* gdb.base/sigbpt.exp: Likewise.
	* gdb.base/signals.exp: Likewise.
	* gdb.base/signull.exp: Likewise.
	* gdb.base/sizeof.exp: Likewise.
	* gdb.base/solib.exp: Likewise.
	* gdb.base/step-line.exp: Likewise.
	* gdb.base/step-test.exp: Likewise.
	* gdb.base/structs.exp: Likewise.
	* gdb.base/structs2.exp: Likewise.
	* gdb.base/term.exp: Likewise.
	* gdb.base/twice.exp: Likewise.
	* gdb.base/until.exp: Likewise.
	* gdb.base/varargs.exp: Likewise.
	* gdb.base/volatile.exp: Likewise.
	* gdb.base/watchpoint.exp: Likewise.
	* gdb.base/whatis-exp.exp: Likewise.
	* gdb.base/whatis.exp: Likewise.
	* gdb.cp/ambiguous.exp: Likewise.
	* gdb.cp/annota2.exp: Likewise.
	* gdb.cp/annota3.exp: Likewise.
	* gdb.cp/bool.exp: Likewise.
	* gdb.cp/breakpoint.exp: Likewise.
	* gdb.cp/casts.exp: Likewise.
	* gdb.cp/class2.exp: Likewise.
	* gdb.cp/classes.exp: Likewise.
	* gdb.cp/cplusfuncs.exp: Likewise.
	* gdb.cp/ctti.exp: Likewise.
	* gdb.cp/derivation.exp: Likewise.
	* gdb.cp/exception.exp: Likewise.
	* gdb.cp/gdb1355.exp: Likewise.
	* gdb.cp/hang.exp: Likewise.
	* gdb.cp/inherit.exp: Likewise.
	* gdb.cp/local.exp: Likewise.
	* gdb.cp/m-data.exp: Likewise.
	* gdb.cp/m-static.exp: Likewise.
	* gdb.cp/member-ptr.exp: Likewise.
	* gdb.cp/method.exp: Likewise.
	* gdb.cp/misc.exp: Likewise.
	* gdb.cp/namespace.exp: Likewise.
	* gdb.cp/overload.exp: Likewise.
	* gdb.cp/ovldbreak.exp: Likewise.
	* gdb.cp/pr-1023.exp: Likewise.
	* gdb.cp/pr-1210.exp: Likewise.
	* gdb.cp/pr-574.exp: Likewise.
	* gdb.cp/printmethod.exp: Likewise.
	* gdb.cp/psmang.exp: Likewise.
	* gdb.cp/ref-params.exp: Likewise.
	* gdb.cp/ref-types.exp: Likewise.
	* gdb.cp/rtti.exp: Likewise.
	* gdb.cp/templates.exp: Likewise.
	* gdb.cp/try_catch.exp: Likewise.
	* gdb.cp/userdef.exp: Likewise.
	* gdb.cp/virtfunc.exp: Likewise.
	* gdb.disasm/am33.exp: Likewise.
	* gdb.disasm/h8300s.exp: Likewise.
	* gdb.disasm/mn10300.exp: Likewise.
	* gdb.disasm/sh3.exp: Likewise.
	* gdb.disasm/t01_mov.exp: Likewise.
	* gdb.disasm/t02_mova.exp: Likewise.
	* gdb.disasm/t03_add.exp: Likewise.
	* gdb.disasm/t04_sub.exp: Likewise.
	* gdb.disasm/t05_cmp.exp: Likewise.
	* gdb.disasm/t06_ari2.exp: Likewise.
	* gdb.disasm/t07_ari3.exp: Likewise.
	* gdb.disasm/t08_or.exp: Likewise.
	* gdb.disasm/t09_xor.exp: Likewise.
	* gdb.disasm/t10_and.exp: Likewise.
	* gdb.disasm/t11_logs.exp: Likewise.
	* gdb.disasm/t12_bit.exp: Likewise.
	* gdb.disasm/t13_otr.exp: Likewise.
	* gdb.hp/gdb.aCC/optimize.exp: Likewise.
	* gdb.hp/gdb.aCC/watch-cmd.exp: Likewise.
	* gdb.hp/gdb.base-hp/callfwmall.exp: Likewise.
	* gdb.hp/gdb.base-hp/dollar.exp: Likewise.
	* gdb.hp/gdb.base-hp/hwwatchbus.exp: Likewise.
	* gdb.hp/gdb.base-hp/pxdb.exp: Likewise.
	* gdb.hp/gdb.base-hp/reg-pa64.exp: Likewise.
	* gdb.hp/gdb.base-hp/reg.exp: Likewise.
	* gdb.hp/gdb.base-hp/sized-enum.exp: Likewise.
	* gdb.hp/gdb.compat/xdb1.exp: Likewise.
	* gdb.hp/gdb.compat/xdb3.exp: Likewise.
	* gdb.hp/gdb.objdbg/objdbg01.exp: Likewise.
	* gdb.hp/gdb.objdbg/objdbg02.exp: Likewise.
	* gdb.hp/gdb.objdbg/objdbg03.exp: Likewise.
	* gdb.hp/gdb.objdbg/objdbg04.exp: Likewise.
	* gdb.mi/gdb701.exp: Likewise.
	* gdb.mi/gdb792.exp: Likewise.
	* gdb.mi/mi-basics.exp: Likewise.
	* gdb.mi/mi-break.exp: Likewise.
	* gdb.mi/mi-cli.exp: Likewise.
	* gdb.mi/mi-console.exp: Likewise.
	* gdb.mi/mi-disassemble.exp: Likewise.
	* gdb.mi/mi-eval.exp: Likewise.
	* gdb.mi/mi-file.exp: Likewise.
	* gdb.mi/mi-read-memory.exp: Likewise.
	* gdb.mi/mi-regs.exp: Likewise.
	* gdb.mi/mi-return.exp: Likewise.
	* gdb.mi/mi-simplerun.exp: Likewise.
	* gdb.mi/mi-stack.exp: Likewise.
	* gdb.mi/mi-stepi.exp: Likewise.
	* gdb.mi/mi-syn-frame.exp: Likewise.
	* gdb.mi/mi-until.exp: Likewise.
	* gdb.mi/mi-var-block.exp: Likewise.
	* gdb.mi/mi-var-child.exp: Likewise.
	* gdb.mi/mi-var-cmd.exp: Likewise.
	* gdb.mi/mi-var-display.exp: Likewise.
	* gdb.mi/mi-watch.exp: Likewise.
	* gdb.mi/mi2-basics.exp: Likewise.
	* gdb.mi/mi2-break.exp: Likewise.
	* gdb.mi/mi2-cli.exp: Likewise.
	* gdb.mi/mi2-console.exp: Likewise.
	* gdb.mi/mi2-disassemble.exp: Likewise.
	* gdb.mi/mi2-eval.exp: Likewise.
	* gdb.mi/mi2-file.exp: Likewise.
	* gdb.mi/mi2-read-memory.exp: Likewise.
	* gdb.mi/mi2-regs.exp: Likewise.
	* gdb.mi/mi2-return.exp: Likewise.
	* gdb.mi/mi2-simplerun.exp: Likewise.
	* gdb.mi/mi2-stack.exp: Likewise.
	* gdb.mi/mi2-stepi.exp: Likewise.
	* gdb.mi/mi2-syn-frame.exp: Likewise.
	* gdb.mi/mi2-until.exp: Likewise.
	* gdb.mi/mi2-var-block.exp: Likewise.
	* gdb.mi/mi2-var-child.exp: Likewise.
	* gdb.mi/mi2-var-cmd.exp: Likewise.
	* gdb.mi/mi2-var-display.exp: Likewise.
	* gdb.mi/mi2-watch.exp: Likewise.
	* gdb.stabs/exclfwd.exp: Likewise.
	* gdb.stabs/weird.exp: Likewise.
	* gdb.threads/gcore-thread.exp: Likewise.
	* gdb.trace/actions.exp: Likewise.
	* gdb.trace/backtrace.exp: Likewise.
	* gdb.trace/circ.exp: Likewise.
	* gdb.trace/collection.exp: Likewise.
	* gdb.trace/deltrace.exp: Likewise.
	* gdb.trace/infotrace.exp: Likewise.
	* gdb.trace/limits.exp: Likewise.
	* gdb.trace/packetlen.exp: Likewise.
	* gdb.trace/passc-dyn.exp: Likewise.
	* gdb.trace/passcount.exp: Likewise.
	* gdb.trace/report.exp: Likewise.
	* gdb.trace/save-trace.exp: Likewise.
	* gdb.trace/tfind.exp: Likewise.
	* gdb.trace/tracecmd.exp: Likewise.
	* gdb.trace/while-dyn.exp: Likewise.
	* gdb.trace/while-stepping.exp: Likewise.
@
text
@d156 1
d160 6
a165 56
	send_gdb "next\n"
	gdb_expect {
	    -re ".*Unable to find return pc for this frame.*$gdb_prompt $" {
		fail "step out of main (Old bug came back!)"
		gdb_test "n" ".*" ""
	    }
	    -re ".*in.*start.*$gdb_prompt $" { 
		pass "step out of main"
	    }
	    -re ".*in.*bsp_trap.*$gdb_prompt $" { 
		pass "step out of main"
	    }
	    -re ".*in.*init.*$gdb_prompt $" { 
		# This is what happens on sparc64-elf ultra.
		pass "step out of main"
	    }
	    -re ".*in.*dll_crt0_1.*$gdb_prompt $" {
		# This is what happens on Cygwin.
	        pass "step out of main"
	    }
	    -re ".*Program exited normally.*$gdb_prompt $" {
		# This is what happens on Linux i86 (and I would expect others)
		set program_exited 1
		pass "step out of main"
	    }
	    -re ".*in .nope ().*$gdb_prompt $" {
		# This is what happens on Solaris currently -sts 1999-08-25
		pass "step out of main (on Solaris)"
	    }
	    -re ".*in _int_reset ().*$gdb_prompt $" {
		# This is what happens on Sanyo XStormy16
		pass "step out of main"
	    }
	    -re ".*init ().*$gdb_prompt $" {
		# This is what happens on many Mips targets
		pass "step out of main"
	    }
	    -re ".*in ..change.mode ().*$gdb_prompt $" {
		# This is what happens on ARM in thumb mode -fn 2000-02-01
		pass "step out of main (on ARM thumb)"
	    }
	    -re ".*in.*\\\$START\\\$.*from.*dld.sl.*$gdb_prompt $" { 
		pass "step out of main"
	    }
	    -re ".*in __wrap__?main ().*$gdb_prompt $" {
		pass "step out of main (status wrapper)"
	    }
	    -re "__setup_argv_for_main (.*).*$gdb_prompt $" {
		# On sh, another wrapper function (start_l) exists, so
		# another `next' is necessary.
		gdb_test "next" ".*in start_l ().*" "step out of main (on sh)"
	    }
            -re ".*$gdb_prompt $" { fail "step out of main (at end 2)" }
	    timeout { 
		fail "step out of main (hang or timeout on step at end 2)" 
	    }
d169 2
a170 2
        fail "Old bug came back!"
        gdb_test "n" ".*" ""
d173 8
a180 1
        pass "step out of main"
d182 3
a184 2
    -re ".*in.*\\\$START\\\$.*from.*dld.sl.*$gdb_prompt $"  {
        pass "step out of main (2)"
d191 31
d223 4
a226 1
        pass "step out of main (into assembler)"
d229 1
a229 1
        pass "Cygmon stopped in ending trap."
d231 2
a232 2
    -re ".*$gdb_prompt $" { fail "step out of main (at end 1)" }
    timeout { fail "step out of main (hang or timeout on step at end 1)" }
@


1.23
log
@2004-06-14  Andrew Cagney  <cagney@@gnu.org>

	* gdb.base/gcore.exp (capture_command_output): Delete the always
	passing tests containing inferior values.
	* gdb.base/ending-run.exp: Do not include the breakpoint address
	in the test message.  Update copyright.
	* gdb.base/sizeof.exp (check_sizeof): Do not include the type's
	size in the test name, use gdb_test_multiple.  Update copyright.
@
text
@d39 2
a40 1
     gdb_suppress_entire_file "Testcase compile failed, so all tests in this file will automatically fail."
@


1.23.24.1
log
@        gdb/testsuite/
        * gdb.base/commands.exp (bp_deleted_in_command_test)
        (temporary_breakpoint_commands): Allow run.c without a pathname.
        * gdb.base/ending-run.exp: Allow E32Main.
@
text
@a209 4
	    -re "E32Main (.*).*$gdb_prompt $" {
		# On SymbianOS there's a different function which calls main.
		pass "step out of main (on SymbianOS)"
	    }
@


1.23.30.1
log
@Changes from nickrob-async-20060828-mergepoint.
@
text
@d39 1
a39 2
     untested ending-run.exp
     return -1
@


1.23.18.1
log
@2006-05-03  Paul Brook  <paul@@codesourcery.com>
	Daniel Jacobowitz  <dan@@codesourcery.com>

	* gdb/testsuite/gdb.cp/gdb1355.exp: Accept different spellings of
	integer types.
	* gdb/testsuite/gdb.cp/gdb1355.cc: Ensure all types are referenced.
	* gdb/testsuite/gdb.cp/hang2.C: Ditto.
	* gdb/testsuite/gdb.cp/m-data.cc: Ditto.
	* gdb/testsuite/gdb.cp/hang3.C: Ditto.
	* gdb/testsuite/gdb.cp/hang1.C: Ditto.

	* gdb/gdbtypes.c (rank_one_type): Check for plain char -> signed/
	unsigned char.

	* gdb/testsuite/gdb.base/completion.exp: Accept "long" as a type.

	* gdb/testsuite/gdb.base/volatile.exp: Accept different spellings of
	integer types.
	* gdb/testsuite/gdb.base/constvars.c: Ensure all types are referenced.

	* gdb/testsuite/gdb.stabs/weird.exp: Return -1 instead of issuing
	error.

	* gdb/testsuite/gdb.base/advance.c: Add proper function prototype.

	* gdb/testsuite/gdb.base/ending-run.exp: Add case for ARM runtime.

	* gdb/testsuite/gdb.base/gdb1821.c: Ensure all types are referenced.

	* gdb/testsuite/gdb.base/ptype.exp: Accept different spellings of
	integer types.

	* gdb/testsuite/gdb.cp/inherit.exp: Cope with armcc vtable pointers.

	* gdb/testsuite/gdb.mi/mi2-var-child.exp: Accept different spellings
	of integer types.
	* gdb/testsuite/gdb.mi/mi-var-display.exp: Ditto.
	* gdb/testsuite/gdb.mi/mi2-var-display.exp: Ditto.
	* gdb/testsuite/gdb.mi/mi2-var-cmd.exp: Ditto.
@
text
@a198 4
	    -re ".*__rt_entry ().*$gdb_prompt $" {
		# This is what happens on the ARM RVDS runtime
		pass "step out of main (on ARM runtime)"
	    }
@


1.23.18.2
log
@	gdb/testsuite/
	* gdb.base/cursal.exp: Run to main before setting listing
	size.
	* gdb.base/dbx.exp: Run to main before testing.
	* gdb.base/ending-run.exp: Add additional expected string.
	* gdb.base/huge.c: Allow CRASH_GDB to be set from command
	line.
	* gdb.base/huge.exp: Loop over compilation to find a size that
	is acceptable.
	* gdb.base/remote.exp: Correct expected strings.
	* gdb.dwarf2/mac-fileno.S: Avoid # comments.
@
text
@a237 3
    -re "start \\(\\).*$gdb_prompt $" {
        pass "step out of main"
    }
@


1.22
log
@	* gdb.base/ending-run.exp: Add sh specific case.
@
text
@d1 4
a4 1
# Copyright 1997, 1998, 1999, 2000, 2001, 2002 Free Software Foundation, Inc.
d18 1
a18 4
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */

# Please email any bugs, comments, and/or additions to this file to:
# bug-gdb@@prep.ai.mit.edu
d112 1
a112 1
        gdb_test "b *$line_nine" ".*Note.*also.*Breakpoint 8.*"
@


1.22.6.1
log
@Merge mainline to intercu branch - 2004-09-15
@
text
@d1 1
a1 4
# This testcase is part of GDB, the GNU debugger.

# Copyright 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004 Free
# Software Foundation, Inc.
d15 4
a18 1
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
d112 1
a112 1
        gdb_test "b *$line_nine" ".*Note.*also.*Breakpoint 8.*" "Breakpoint 7 at *ending-run.c:14"
@


1.21
log
@2003-04-02  Andrew Cagney  <cagney@@redhat.com>

	* gdb.base/callfuncs.exp: Make "print add" messages unique.
	* gdb.base/ending-run.exp: Put spaces around "breakpoint" to stop
	matching directories by the name breakpoint.
	* gdb.base/pointers.exp: Make "ptype pppC" message consistent.
	Make "continue to marker1" consistent.
	* gdb.base/call-rt-st.exp: Make "finish out from loop_count"
	message consistent.
	* lib/gdb.exp: Put "the program is no longer running", and "the
	program exited" in parenthesis.
	* lib/mi-support.exp: Ditto.
@
text
@d205 5
@


1.21.24.1
log
@merge mainline changes into branch
@
text
@a204 5
	    -re "__setup_argv_for_main (.*).*$gdb_prompt $" {
		# On sh, another wrapper function (start_l) exists, so
		# another `next' is necessary.
		gdb_test "next" ".*in start_l ().*" "step out of main (on sh)"
	    }
@


1.20
log
@	* gdb.base/ending-run.exp: Check for Cygwin specific wrapper function
	when stepping out of main().
@
text
@d77 1
a77 1
    -re ".*breakpoint.*breakpoint.*$gdb_prompt $" { 
d123 1
a123 1
    -re ".*breakpoint.*breakpoint.*$gdb_prompt $" {
@


1.19
log
@	* gdb.base/ending-run.exp: Add handling of "step to end of run" for
	embedded targets which never actually exit.
@
text
@d174 4
@


1.19.4.1
log
@Merge drow-cplus-branch to:
  cvs rtag -D 2003-12-14 00:00:00 UTC drow-cplus-merge-20031214 gdb+dejagnu
@
text
@d77 1
a77 1
    -re ".* breakpoint .* breakpoint .*$gdb_prompt $" { 
d123 1
a123 1
    -re ".* breakpoint .* breakpoint .*$gdb_prompt $" {
a173 4
	    -re ".*in.*dll_crt0_1.*$gdb_prompt $" {
		# This is what happens on Cygwin.
	        pass "step out of main"
	    }
a199 5
	    }
	    -re "__setup_argv_for_main (.*).*$gdb_prompt $" {
		# On sh, another wrapper function (start_l) exists, so
		# another `next' is necessary.
		gdb_test "next" ".*in start_l ().*" "step out of main (on sh)"
@


1.19.2.1
log
@2003-04-16  David Carlton  <carlton@@bactrian.org>

	* Merge with mainline; tag is carlton_dictionary-20030416-merge.
@
text
@d77 1
a77 1
    -re ".* breakpoint .* breakpoint .*$gdb_prompt $" { 
d123 1
a123 1
    -re ".* breakpoint .* breakpoint .*$gdb_prompt $" {
a172 4
	    }
	    -re ".*in.*dll_crt0_1.*$gdb_prompt $" {
		# This is what happens on Cygwin.
	        pass "step out of main"
@


1.19.2.2
log
@2003-11-11  David Carlton  <carlton@@kealia.com>

	* Merge with mainline; tag is carlton-dictionary-20031111-merge.
@
text
@a204 5
	    -re "__setup_argv_for_main (.*).*$gdb_prompt $" {
		# On sh, another wrapper function (start_l) exists, so
		# another `next' is necessary.
		gdb_test "next" ".*in start_l ().*" "step out of main (on sh)"
	    }
@


1.18
log
@	* gdb.base/ending-run.exp: Properly mark "continue after exit" and
	"don't step after run" as unresolved or unsupported, instead of xfail.
@
text
@d256 3
@


1.17
log
@	* gdb.base/ending-run.exp: Fix expected string for _wrap_main to
	allow correct handling of #ifdef UNDERSCORES from dejagnu/testglue.c.
	Add newline to expected string in "step out of main (status wrapper)"
	case.
@
text
@d236 3
d250 1
d254 1
d258 1
d262 1
a262 1
		gdb_test "c" ".*" "continue after exit"
d266 3
a268 1
		setup_xfail "xstormy16-*-*"
d272 1
d276 1
d281 8
d291 7
a297 1
    gdb_test "n" ".*The program is not being run.*" "don't step after run"
@


1.16
log
@* gdb.base/ending-run.exp: Don't expect to see the program end in
some orderly fashion when we're running on a real stand-alone
board.
@
text
@d198 1
a198 1
	    -re ".*in __wrap_main ().*$gdb_prompt $" {
d248 1
a248 1
	    -re "Single.*EXIT code 0.*Program exited normally.*$gdb_prompt $" {
@


1.15
log
@2002-05-06  Michael Snyder  <msnyder@@redhat.com>

	* lib/gdb.exp (gdb_test): Add case to allow for status wrapper.
	(gdb_continue_to_end): Accept output from status wrapper.
	* gdb.base/ending-run.exp: Add case for output	from status wrapper.
        Clean up fail messages to match pass messages.
@
text
@d232 6
a237 1
if {![target_info exists use_cygmon] || ![target_info use_cygmon]} {
@


1.15.4.1
log
@Merge w/trunk (kseitz_interps-20020722-merge).
@
text
@d232 1
a232 6
# When we're talking to a program running on a real stand-alone board,
# every BSP's exit function behaves differently, so there's no single
# way to tell whether we've exited gracefully or not.  So don't run
# these tests when use_gdb_stub is set, or when we're running under Cygmon.
if {! [target_info exists use_gdb_stub]
    && (! [target_info exists use_cygmon] || ! [target_info use_cygmon])} {
@


1.15.4.2
log
@Merge with kseitz_interps-20020930-merge.
@
text
@d198 1
a198 1
	    -re ".*in __wrap__?main ().*$gdb_prompt $" {
a235 3
set program_exited_normally 0
set program_not_exited 0
set program_in_exit 0
a246 1
		set program_exited_normally 1
d248 1
a248 5
	    -re "Single.*EXIT code 0\r\n.*Program exited normally.*$gdb_prompt $" {
		pass "step to end of run (status wrapper)"
		set program_exited_normally 1
	    }
	    -re "Single.*EXIT code 0\r\n.*$gdb_prompt $" {
a252 1
		set program_exited_normally 1
d256 1
a256 1
		set program_in_exit 1
d260 1
a260 3
		if {![istarget "xstormy16-*-*"]} {
		    set program_exited_normally 1
		}
a263 1
		set program_not_exited 1
a266 1
		set program_not_exited 1
a270 8
    if {$program_in_exit} {
	if {[gdb_test "c" ".*" "continue after exit"] == 0} {
	    set program_exited_normally 1
	}
    } else {
	unsupported "continue after exit"
    }

d273 1
a273 7
    if {$program_exited_normally} {
        gdb_test "n" ".*The program is not being run.*" "don't step after run"
    } elseif {$program_not_exited} {
	unresolved "don't step after run"
    } else {
	unsupported "don't step after run"
    }
@


1.14
log
@2002-04-10  Martin M. Hunt  <hunt@@redhat.com>

	* gdb.base/ending-run.exp: Fix pattern for Mips targets
	stepping out of main.
@
text
@d77 9
a85 3
    -re ".*breakpoint.*breakpoint.*$gdb_prompt $" { fail "clear bp" }
    -re ".*3.*main.*31.*$gdb_prompt $" { pass "cleared bp at line before routine" }
    -re ".*$gdb_prompt $" { fail "info b" }
d124 1
a124 1
        fail "didn't clear bps" 
d130 1
a130 1
        fail "missing bp at end"
d161 1
a161 1
		fail "Old bug came back!"
d181 1
a181 1
		pass "step out of main on Solaris"
d193 1
a193 1
		pass "step out of main on ARM thumb"
d198 7
a204 2
            -re ".*$gdb_prompt $" { fail "step at end 2" }
	    timeout { fail "hang or timeout on step at end 2" }
d215 1
a215 1
        pass "step out of main 2"
d223 1
a223 1
        pass "step out of main into assembler"
d228 2
a229 2
    -re ".*$gdb_prompt $" { fail "step at end 1" }
    timeout { fail "hang or timeout on step at end 1" }
d243 3
d276 1
a276 1
	    pass "ls: core: No core dumped on quit"
d279 1
a279 1
	    fail "Core dumped on quit"
@


1.13
log
@Update copyright date.
@
text
@d181 4
@


1.12
log
@2002-02-10  Daniel Jacobowitz  <drow@@mvista.com>

        * gdb.base/ending-run.exp: Guard "cont" test with
        gdb_skip_stdio_test.
@
text
@d1 1
a1 1
# Copyright 1997, 1998, 1999, 2000, 2001 Free Software Foundation, Inc.
@


1.11
log
@* gdb.base/ending-run.c (main): Avoid messing with setvbuf; just
call `fflush' after every `printf', so that the output is produced
at predictable points, regardless of whatever buffering does (or
doesn't) take place.
* gdb.base/ending-run.exp: Adjust tests to expect output to appear
at different points.
@
text
@d132 5
a136 1
gdb_test "cont" ".*1 2 7 14 23 34 47 62 79.*Breakpoint.*31.*"
@


1.10
log
@	Change target name from stormy16 to xstormy16.
@
text
@d132 1
a132 1
gdb_test "cont" ".*Breakpoint.*31.*"
d135 1
a135 1
    gdb_test "next" ".*1 2 7 14 23 34 47 62 79  Goodbye!.*32.*" \
@


1.9
log
@	* gdb.base/ending-run.exp: Create identical output when passing
	`step to end of run' case.  Add regular expression branch satisfying
	Stormy16 target.
@
text
@d174 1
a174 1
		# This is what happens on Sanyo Stormy16
d233 1
a233 1
		setup_xfail "stormy16-*-*"
@


1.8
log
@        * gdb.base/ending-run.c (main): Set stdout buffersize
        to the same reasonable value for any target.
        * gdb.base/ending-run.exp: Add a regular expression
        to make testsuite happy on Sanyo Stormy16 target.
@
text
@d222 1
a222 1
		pass "step to end of run 1"
d225 1
a225 1
		pass "step to end of run 1"
d228 1
a228 1
		pass "step to end of run 2" 
d230 4
@


1.7
log
@2001-07-25  Michael Snyder  <msnyder@@redhat.com>

	* gdb.base/ending-run.exp: Accept "Program exited normally" as
	legitimate output from stepping out of main.
@
text
@d173 4
@


1.6
log
@2001-05-19  Michael Chastain  <chastain@@redhat.com>

	* gdb.base/callfuncs.exp: Make all test names unique.
	* gdb.base/commands.exp: Make all test names unique.
	* gdb.base/condbreak.exp: Make all test names unique.
	* gdb.base/dbx.exp: Make all test names unique.
	* gdb.base/default.exp: Make all test names unique.
	* gdb.base/define.exp: Make all test names unique.  Conform some FAIL
	and TIMEOUT messages to their corresponding PASS message.
	* gdb.base/ending-run.exp: Make all test names unique.
	* gdb.base/long_long.exp: Remove duplicate test.
@
text
@d143 1
d164 5
d194 5
d210 24
a233 16
    send_gdb "n\n"
    gdb_expect {
	-re "Program exited normally.*$gdb_prompt $" {
	    # If we actually have debug info for the start function,
	    # then we won't get the "Single-stepping until function
	    # exit" message.
	    pass "step to end of run 1"
	}
	-re ".*Single.*Program exited.*$gdb_prompt $" {
	    pass "step to end of run 1"
	}
	-re ".*Single.*in exit.*from.*dld.sl.*$gdb_prompt $" {
	    pass "step to end of run 2" 
	    gdb_test "c" ".*" "continue after exit"
	}
	timeout { fail "(timeout) step to end of run" }
d236 8
a243 12
  set timeout $old_timeout
  
  gdb_test "n" ".*The program is not being run.*" "don't step after run"
  
  set exec_output [remote_exec host "ls core"]
  
  
  if [ regexp "core not found" $exec_output]  {
    pass "No core dumped on quit"
  } else {
    if [ regexp "No such file or directory" $exec_output] {
      pass "ls: core: No core dumped on quit"
d245 6
a250 2
      remote_exec build "rm -f core"
      fail "Core dumped on quit"
a251 1
  }
@


1.5
log
@Update/correct copyright notices.
@
text
@d59 2
a60 1
	".*Note.*also.*Breakpoint 2.*ending-run.c, line 13.*"
d85 1
a85 1
gdb_test "b ending-run.c:13" ".*Note.*also.*Breakpoint.*5.*"
@


1.4
log
@2001-02-19  Fernando Nasser  <fnasser@@redhat.com>

	From  Drew Moseley  <dmoseley@@redhat.com>
        * gdb.base/ending-run.exp: Properly handle the BSP state when
        stepping past the end of main.
@
text
@d1 1
a1 1
# Copyright (C) 1997, 1998, 1999, 2000 Free Software Foundation, Inc.
@


1.3
log
@2000-10-16  Michael Snyder  <msnyder@@cleaver.cygnus.com>

        * lib/gdb.exp (gdb_skip_float_test): New proc.  Skip test if
        no floating point support.
        (gdb_skip_stdio_test): New proc.  Skip test if no stdio support.
        * gdb.base/call-ar-st.exp: Use above procs to skip tests.
        * gdb.base/call-rt-st.exp: Ditto.
        * gdb.base/call-strs.exp: Ditto.
        * gdb.base/sizeof.exp (check_sizeof): Skip if no printf support.
        * gdb.base/varargs.exp: Skip entire test if no printf support.
        * gdb.base/ending-run.exp (Step to return): Skip if no printf supt.
        * gdb.base/shlib-call.exp: Skip several tests if no printf support.
@
text
@d1 1
a1 1
# Copyright (C) 1997, 1998, 1999 Free Software Foundation, Inc.
d153 3
@


1.2
log
@2000-04-24  Michael Snyder  <msnyder@@seadog.cygnus.com>

        * gdb.base/miscexprs.exp: make sizeof long array test portable.

        * gdb.base/ending-run.exp: After connecting to a remote target,
        but before running, the target will appear to be in a random
        location.  Specify both a file and a line for breakpoints.
        Also, the function that calls main may be called 'init'
        rather than 'start'.
@
text
@d132 7
a138 1
gdb_test "next" ".*1 2 7 14 23 34 47 62 79  Goodbye!.*32.*" "Step to return"
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# Copyright (C) 1997, 1998 Free Software Foundation, Inc.
d54 6
a59 2
gdb_test "b 1" ".*Breakpoint.*line 1.*" "bpt at line before routine"
gdb_test "b 8" ".*Note.*also.*Breakpoint.*2.*" ""
d63 1
a63 1
gdb_test "b 26" ".*Breakpoint.*3.*" ""
d66 1
a66 1
# as line "8".  Then try to clear it--this should work.
d68 5
a72 1
gdb_test "r" ".*Breakpoint.*1.*callee.*8.*" ""
d77 1
a77 1
    -re ".*3.*main.*26.*$gdb_prompt $" { pass "cleared bp at line before routine" }
d83 4
a86 3
gdb_test "b 1" ".*Breakpoint.*4.*" ""
gdb_test "b 8" ".*Note.*also.*Breakpoint.*5.*" ""
gdb_test "cle 8" ".*Deleted breakpoint 5.*" "Only cleared 1 by line"
d88 1
a88 1
send_gdb "inf line 8\n"
d92 1
a92 1
        gdb_test "b 8" ".*Breakpoint.*6.*" ""
d100 1
a100 1
send_gdb "inf line 9\n"
d104 3
a106 3
        gdb_test "b 9"       ".*Breakpoint.*7.*" ""
        gdb_test "b *$line_nine" ".*Note.*also.*Breakpoint.*8.*" ""
        gdb_test "c" ".*Breakpoint.*7.*callee.*9.*" ""
d119 1
a119 1
    -re ".*3.*main.*26.*$gdb_prompt $" {
d131 2
a132 2
gdb_test "cont" ".*Breakpoint.*26.*" ""
gdb_test "next" ".*1 2 7 14 23 34 47 62 79  Goodbye!.*27.*" "Step to return"
d138 1
a138 1
    -re "27.*$gdb_prompt $" {
d149 16
d175 10
d188 18
a205 4
gdb_test "n" ".*Single.*Program exited.*" "step to end of run"
set timeout $old_timeout

gdb_test "n" ".*The program is not being run.*" "don't step after run"
d207 8
a214 3
set exec_output [remote_exec host "ls core"]

if [ regexp "core not found" $exec_output]  {
d216 2
a217 2
} else {
  if [ regexp "No such file or directory" $exec_output] {
d219 1
a219 1
  } else {
d222 1
@


1.1.1.1
log
@Initial creation of sourceware repository
@
text
@@


1.1.1.2
log
@import gdb-19990422 snapshot
@
text
@d1 1
a1 1
# Copyright (C) 1997, 1998, 1999 Free Software Foundation, Inc.
d64 1
a64 5
if [target_info exists use_gdb_stub] {
  gdb_test "continue" ".*Breakpoint.*1.*callee.*8.*" ""
} else {
  gdb_test "r" ".*Breakpoint.*1.*callee.*8.*" ""
}
a149 3
  -re ".*Program received signal SIGTRAP.*$gdb_prompt $" {
        pass "Cygmon stopped in ending trap."
  }
d153 8
a160 10
if {![target_info exists use_cygmon] || ![target_info use_cygmon]} {
  gdb_test "n" ".*Single.*Program exited.*" "step to end of run"
  set timeout $old_timeout
  
  gdb_test "n" ".*The program is not being run.*" "don't step after run"
  
  set exec_output [remote_exec host "ls core"]
  
  
  if [ regexp "core not found" $exec_output]  {
d162 3
a165 3
    if [ regexp "No such file or directory" $exec_output] {
      pass "ls: core: No core dumped on quit"
    } else {
a167 1
    }
@


1.1.1.3
log
@import gdb-1999-06-07 snapshot
@
text
@d154 1
a154 4
    -re ".*in.*currently asm.*$gdb_prompt $" { 
        pass "step out of main into assembler"
    }
    -re ".*Program received signal SIGTRAP.*$gdb_prompt $" {
d156 1
a156 1
    }
@


1.1.1.4
log
@import gdb-1999-06-14 snapshot
@
text
@a143 1
            -re ".*$gdb_prompt $" { fail "step at end 2" }
a159 1
    -re ".*$gdb_prompt $" { fail "step at end 1" }
@


1.1.1.5
log
@import gdb-1999-06-28 snapshot
@
text
@d55 1
a55 1
gdb_test "b 13" ".*Note.*also.*Breakpoint.*2.*" ""
d59 1
a59 1
gdb_test "b 31" ".*Breakpoint.*3.*" ""
d62 1
a62 1
# as line "13".  Then try to clear it--this should work.
d65 1
a65 1
  gdb_test "continue" ".*Breakpoint.*1.*callee.*13.*" ""
d67 1
a67 1
  gdb_test "r" ".*Breakpoint.*1.*callee.*13.*" ""
d73 1
a73 1
    -re ".*3.*main.*31.*$gdb_prompt $" { pass "cleared bp at line before routine" }
d80 2
a81 2
gdb_test "b 13" ".*Note.*also.*Breakpoint.*5.*" ""
gdb_test "cle 13" ".*Deleted breakpoint 5.*" "Only cleared 1 by line"
d83 1
a83 1
send_gdb "inf line 13\n"
d87 1
a87 1
        gdb_test "b 13" ".*Breakpoint.*6.*" ""
d95 1
a95 1
send_gdb "inf line 14\n"
d99 1
a99 1
        gdb_test "b 14"       ".*Breakpoint.*7.*" ""
d101 1
a101 1
        gdb_test "c" ".*Breakpoint.*7.*callee.*14.*" ""
d114 1
a114 1
    -re ".*3.*main.*31.*$gdb_prompt $" {
d126 2
a127 2
gdb_test "cont" ".*Breakpoint.*32.*" ""
gdb_test "next" ".*1 2 7 14 23 34 47 62 79  Goodbye!.*32.*" "Step to return"
d133 1
a133 1
    -re "33.*$gdb_prompt $" {
a143 3
	    -re ".*in.*\\\$START\\\$.*from.*dld.sl.*$gdb_prompt $" { 
		pass "step out of main"
	    }
a154 3
    -re ".*in.*\\\$START\\\$.*from.*dld.sl.*$gdb_prompt $"  {
        pass "step out of main 2"
    }
d166 1
a166 12
    send_gdb "n\n"
    gdb_expect {
	-re ".*Single.*Program exited.*$gdb_prompt $" {
	    pass "step to end of run 1"
	}
	-re ".*Single.*in exit.*from.*dld.sl.*$gdb_prompt $" {
	    pass "step to end of run 2" 
	    gdb_test "c" ".*" "continue after exit"
	}
	timeout { fail "(timeout) step to end of run" }
    }

@


1.1.1.6
log
@import gdb-1999-08-02 snapshot
@
text
@d55 1
a55 1
gdb_test "b 13" ".*Note.*also.*Breakpoint.*2.*"
d59 1
a59 1
gdb_test "b 31" ".*Breakpoint.*3.*"
d65 1
a65 1
  gdb_test "continue" ".*Breakpoint.*1.*callee.*13.*"
d67 1
a67 1
  gdb_test "r" ".*Breakpoint.*1.*callee.*13.*"
d79 2
a80 2
gdb_test "b 1" ".*Breakpoint.*4.*"
gdb_test "b 13" ".*Note.*also.*Breakpoint.*5.*"
d87 1
a87 1
        gdb_test "b 13" ".*Breakpoint.*6.*"
d99 3
a101 3
        gdb_test "b 14"       ".*Breakpoint.*7.*"
        gdb_test "b *$line_nine" ".*Note.*also.*Breakpoint.*8.*"
        gdb_test "c" ".*Breakpoint.*7.*callee.*14.*"
d126 1
a126 1
gdb_test "cont" ".*Breakpoint.*31.*"
@


1.1.1.7
log
@import gdb-1999-08-30 snapshot
@
text
@a143 4
	    -re ".*in .nope ().*$gdb_prompt $" {
		# This is what happens on Solaris currently -sts 1999-08-25
		pass "step out of main on Solaris"
	    }
@


1.1.1.8
log
@import gdb-1999-12-06 snapshot
@
text
@a177 6
	-re "Program exited normally.*$gdb_prompt $" {
	    # If we actually have debug info for the start function,
	    # then we won't get the "Single-stepping until function
	    # exit" message.
	    pass "step to end of run 1"
	}
@


1.1.1.9
log
@import gdb-2000-02-02 snapshot
@
text
@a147 4
	    -re ".*in ..change.mode ().*$gdb_prompt $" {
		# This is what happens on ARM in thumb mode -fn 2000-02-01
		pass "step out of main on ARM thumb"
	    }
@


