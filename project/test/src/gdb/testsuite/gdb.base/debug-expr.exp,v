head	1.2;
access;
symbols
	gdb_7_6_1-2013-08-30-release:1.2
	gdb_7_6-2013-04-26-release:1.2
	gdb_7_6-branch:1.2.0.2
	gdb_7_6-2013-03-12-branchpoint:1.2;
locks; strict;
comment	@# @;


1.2
date	2013.01.01.06.33.25;	author brobecke;	state Exp;
branches;
next	1.1;

1.1
date	2012.08.08.21.17.04;	author devans;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Update years in copyright notice for the GDB files.

Two modifications:
  1. The addition of 2013 to the copyright year range for every file;
  2. The use of a single year range, instead of potentially multiple
     year ranges, as approved by the FSF.
@
text
@# Copyright 2012-2013 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Test "set debug expr 1" on c expressions.

standard_testfile .c

if {[prepare_for_testing $testfile.exp $testfile $srcfile {debug}]} {
    return -1
}

if ![runto_main] {
    fail "run to main"
    return -1
}

# Test whether the expression debug machinery accepts the expression.

proc test_debug_expr { cmd output } {
    global gdb_prompt

    gdb_test_multiple $cmd "" {
	-re ".*Invalid expression.*\r\n$gdb_prompt $" {
	    fail $cmd
	}
	-re ".*\[\r\n\]$output\r\n$gdb_prompt $" {
	    pass $cmd
	}
    }
}

for { set i 0 } { $i < 4 } { incr i } {
    gdb_test_no_output "set variable array\[$i\] = $i"
}

gdb_test_no_output "set debug expression 1"

# This caused gdb to segfault.
test_debug_expr "print /x {char\[4\]} array" \
    "\[$\]$decimal = \\{0x0, 0x1, 0x2, 0x3\\}"
@


1.1
log
@	* eval.c (evaluate_subexp_standard): Fix thinko in handling
	UNOP_MEMVAL_TYPE.
	* expprint.c (print_subexp_standard, case OP_TYPE): New.
	(print_subexp_standard, case UNOP_CAST_TYPE): Don't increment pos.
	(print_subexp_standard, case UNOP_DYNAMIC_CAST): Ditto.
	(print_subexp_standard, case UNOP_REINTERPRET_CAST): Ditto.
	(print_subexp_standard, case UNOP_MEMVAL_TYPE): Ditto.
	(dump_subexp_body_standard, case UNOP_DYNAMIC_CAST): Don't increment
	elt.
	(dump_subexp_body_standard, case UNOP_REINTERPRET_CAST): Ditto.
	(dump_subexp_body_standard, case UNOP_CAST_TYPE): Ditto.
	(dump_subexp_body_standard, case UNOP_MEMVAL_TYPE): Ditto.
	(dump_prefix_expression): Handle OP_TYPE.

	testsuite/
	* gdb.base/debug-expr.c: New file.
	* gdb.base/debug-expr.exp: New file.
	* gdb.base/exprs.exp: Test {type} casts.
	* gdb.cp/debug-expr.exp: New file.
@
text
@d1 1
a1 1
# Copyright 2012 Free Software Foundation, Inc.
@

