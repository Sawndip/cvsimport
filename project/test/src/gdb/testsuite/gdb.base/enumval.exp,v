head	1.5;
access;
symbols
	gdb_7_6_1-2013-08-30-release:1.3
	gdb_7_6-2013-04-26-release:1.3
	gdb_7_6-branch:1.3.0.2
	gdb_7_6-2013-03-12-branchpoint:1.3
	gdb_7_5_1-2012-11-29-release:1.1
	gdb_7_5-2012-08-17-release:1.1
	gdb_7_5-branch:1.1.0.2
	gdb_7_5-2012-07-18-branchpoint:1.1;
locks; strict;
comment	@# @;


1.5
date	2013.09.04.23.05.32;	author devans;	state Exp;
branches;
next	1.4;

1.4
date	2013.06.27.18.50.30;	author tromey;	state Exp;
branches;
next	1.3;

1.3
date	2013.01.01.06.33.25;	author brobecke;	state Exp;
branches;
next	1.2;

1.2
date	2012.11.26.18.13.24;	author jkratoch;	state Exp;
branches;
next	1.1;

1.1
date	2012.04.18.06.51.05;	author jkratoch;	state Exp;
branches;
next	;


desc
@@


1.5
log
@	* dwarf2read.c (queue_and_load_all_dwo_tus): New function.
	(queue_and_load_dwo_tu): New function.
	(lookup_dwo_signatured_type): Set per_cu.tu_read.
	(maybe_queue_comp_unit): Rename this_cu argument to dependent_cu.
	Make dependent_cu optional.
	(dw2_do_instantiate_symtab): If we just loaded a CU from a DWO,
	and an older .gdb_index is in use, queue and load all its TUs too.

	testsuite/
	* gdb.base/enumval.c (ZERO): New enum value.
	(main): Use it
	* gdb.base/enumval.exp: Test ability to print ZERO.
@
text
@# This testcase is part of GDB, the GNU debugger.

# Copyright 2012-2013 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

standard_testfile

if {[prepare_for_testing $testfile.exp $testfile $srcfile debug]} {
    untested $testfile.exp
    return -1
}

# Check the real contents.

set test "print e"
gdb_test_multiple $test $test {
    -re " = J\r\n$gdb_prompt $" {
	pass $test
    }
    -re " = 4294967295\r\n$gdb_prompt $" {
	if {[test_compiler_info {gcc-[0-3]-*}]
	    || [test_compiler_info {gcc-4-[0-6]-*}]} {
	    xfail $test
	} else {
	    fail $test
	}
    }
}

set test "print f"
gdb_test_multiple $test $test {
    -re " = K\r\n$gdb_prompt $" {
	pass $test
    }
    -re " = -1152921504606846976\r\n$gdb_prompt $" {
	if {[test_compiler_info {gcc-[0-3]-*}]
	    || [test_compiler_info {gcc-4-[0-6]-*}]} {
	    xfail $test
	} else {
	    fail $test
	}
    }
}

gdb_test "print J" "= J"

set test "print K"
gdb_test_multiple $test $test {
    -re " = K\r\n$gdb_prompt $" {
	pass $test
    }
    -re " = <optimized out>\r\n$gdb_prompt $" {
	if {[test_compiler_info {gcc-[0-3]-*}]
	    || [test_compiler_info {gcc-4-[0-6]-*}]} {
	    xfail $test
	} else {
	    fail $test
	}
    }
}

# gold/15021
# With -fdebug-types-section, Gold's .gdb_index entry for ZERO refers to the
# CU, but the CU doesn't use the TU (type unit) that defines ZERO.
# Thus gdb has to read in every TU for the CU.
gdb_test "p ZERO" "ZERO"
@


1.4
log
@test suite update - gdb.base/[efg]

Convert files gdb.base/[efg]*.exp to use standard_output_file et al.

	* ena-dis-br.exp, enum_cond.exp, enumval.exp, environ.exp,
	eu-strip-infcall.exp, eval-skip.exp, exe-lock.exp,
	expand-psymtabs.exp, exprs.exp, fileio.exp, find.exp,
	fixsection.exp, foll-exec.exp, foll-fork.exp,
	fortran-sym-case.exp, frame-args.exp, freebpcmd.exp, fullname.exp,
	funcargs.exp, gcore-buffer-overflow.exp, gcore.exp, gdb1090.exp,
	gdb11530.exp, gdb11531.exp, gdb1250.exp, gdb1555.exp, gdb1821.exp,
	gdbindex-stabs.exp, gdbvars.exp, gnu-ifunc.exp, gnu_vector.exp:
	Use standard_testfile, standard_output_file, prepare_for_testing,
	clean_restart.
@
text
@d73 6
@


1.3
log
@Update years in copyright notice for the GDB files.

Two modifications:
  1. The addition of 2013 to the copyright year range for every file;
  2. The use of a single year range, instead of potentially multiple
     year ranges, as approved by the FSF.
@
text
@d18 1
a18 3
set testfile "enumval"
set srcfile ${testfile}.c
set binfile ${objdir}/${subdir}/${testfile}
d20 2
a21 1
if { [prepare_for_testing enumval.exp "enumval" "" {debug}] } {
@


1.2
log
@gdb/testsuite/
	* gdb.base/enumval.exp (print e, print f, print K): XFAIL on GCC <= 4.6.
@
text
@d3 1
a3 1
# Copyright 2012 Free Software Foundation, Inc.
@


1.1
log
@Forgotten commit for:
gdb/testsuite/
	PR symtab/7259:
	* gdb.base/enumval.c: New test case.
	* gdb.base/enumval.exp: New test case.
@
text
@d27 30
a56 2
gdb_test "print e" "= J"
gdb_test "print f" "= K"
d59 15
a73 1
gdb_test "print K" "= K"
@

