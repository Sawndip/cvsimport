head	1.10;
access;
symbols
	gdb_7_6_1-2013-08-30-release:1.9
	gdb_7_6-2013-04-26-release:1.9
	gdb_7_6-branch:1.9.0.2
	gdb_7_6-2013-03-12-branchpoint:1.9
	gdb_7_5_1-2012-11-29-release:1.8
	gdb_7_5-2012-08-17-release:1.8
	gdb_7_5-branch:1.8.0.2
	gdb_7_5-2012-07-18-branchpoint:1.8
	gdb_7_4_1-2012-04-26-release:1.6.4.1
	gdb_7_4-2012-01-24-release:1.6.4.1
	gdb_7_4-branch:1.6.0.4
	gdb_7_4-2011-12-13-branchpoint:1.6
	gdb_7_3_1-2011-09-04-release:1.6
	gdb_7_3-2011-07-26-release:1.6
	gdb_7_3-branch:1.6.0.2
	gdb_7_3-2011-04-01-branchpoint:1.6
	gdb_7_2-2010-09-02-release:1.5
	gdb_7_2-branch:1.5.0.2
	gdb_7_2-2010-07-07-branchpoint:1.5
	gdb_7_1-2010-03-18-release:1.4
	gdb_7_1-branch:1.4.0.2
	gdb_7_1-2010-02-18-branchpoint:1.4
	gdb_7_0_1-2009-12-22-release:1.3
	gdb_7_0-2009-10-06-release:1.3
	gdb_7_0-branch:1.3.0.4
	gdb_7_0-2009-09-16-branchpoint:1.3
	msnyder-checkpoint-072509-branch:1.3.0.2
	msnyder-checkpoint-072509-branchpoint:1.3
	reverse-20081226-branch:1.2.0.4
	reverse-20081226-branchpoint:1.2
	multiprocess-20081120-branch:1.2.0.2
	multiprocess-20081120-branchpoint:1.2;
locks; strict;
comment	@# @;


1.10
date	2013.06.27.18.49.02;	author tromey;	state Exp;
branches;
next	1.9;

1.9
date	2013.01.01.06.33.25;	author brobecke;	state Exp;
branches;
next	1.8;

1.8
date	2012.01.16.16.21.44;	author palves;	state Exp;
branches;
next	1.7;

1.7
date	2012.01.04.08.17.45;	author brobecke;	state Exp;
branches;
next	1.6;

1.6
date	2011.01.01.15.33.40;	author brobecke;	state Exp;
branches
	1.6.4.1;
next	1.5;

1.5
date	2010.05.05.18.06.57;	author brobecke;	state Exp;
branches;
next	1.4;

1.4
date	2010.01.01.07.32.00;	author brobecke;	state Exp;
branches;
next	1.3;

1.3
date	2009.01.03.05.58.03;	author brobecke;	state Exp;
branches;
next	1.2;

1.2
date	2008.11.14.06.55.40;	author devans;	state Exp;
branches;
next	1.1;

1.1
date	2008.11.12.00.39.28;	author devans;	state Exp;
branches;
next	;

1.6.4.1
date	2012.01.06.04.43.59;	author brobecke;	state Exp;
branches;
next	;


desc
@@


1.10
log
@test suite update - gdb.base/[cd]

Convert files gdb.base/[cd]*.exp to use standard_output_file et al.

	* call-ar-st.exp, call-rt-st.exp, call-sc.exp,
	call-signal-resume.exp, call-strs.exp, callexit.exp,
	callfuncs.exp, catch-load.exp, catch-syscall.exp, charset.exp,
	checkpoint.exp, chng-syms.exp, code-expr.exp, code_elim.exp,
	commands.exp, completion.exp, complex.exp, cond-expr.exp,
	condbreak.exp, consecutive.exp, constvars.exp, corefile.exp,
	ctxobj.exp, cursal.exp, cvexpr.exp, dbx.exp, default.exp,
	define.exp, del.exp, detach.exp, dfp-test.exp, display.exp,
	dmsym.exp, dump.exp, dup-sect.exp: Use standard_testfile,
	standard_output_file, prepare_for_testing, clean_restart.
@
text
@# Copyright 2008-2013 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.


standard_testfile .c

if  { [gdb_compile "${srcdir}/${subdir}/${srcfile}" "${binfile}" executable {debug}] != "" } {
     untested callexit.exp
     return -1
}

# Some targets can't do function calls, so don't even bother with this
# test.
if [target_info exists gdb,cannot_call_functions] {
    setup_xfail "*-*-*" 2416
    fail "This target can not call functions"
    continue
}

# Start with a fresh gdb.

clean_restart ${binfile}

if { ![runto_main] } {
    fail "Can't run to main"
    return 0
}

# Call function (causing the program to exit), and see if gdb handles
# it properly.
gdb_test "call callexit()" \
	"The program being debugged exited.*" \
	"inferior function call terminated program"

return 0
@


1.9
log
@Update years in copyright notice for the GDB files.

Two modifications:
  1. The addition of 2013 to the copyright year range for every file;
  2. The use of a single year range, instead of potentially multiple
     year ranges, as approved by the FSF.
@
text
@d17 1
a17 3
set testfile "callexit"
set srcfile ${testfile}.c
set binfile ${objdir}/${subdir}/${testfile}
d34 1
a34 4
gdb_exit
gdb_start
gdb_reinitialize_dir $srcdir/$subdir
gdb_load ${binfile}
@


1.8
log
@2012-01-16  Pedro Alves  <palves@@redhat.com>

	Remove all calls to strace.
@
text
@d1 1
a1 1
# Copyright 2008-2012 Free Software Foundation, Inc.
@


1.7
log
@Copyright year update in most files of the GDB Project.

gdb/ChangeLog:

        Copyright year update in most files of the GDB Project.
@
text
@a15 4
if $tracelevel then {
	strace $tracelevel
}

@


1.6
log
@run copyright.sh for 2011.
@
text
@d1 1
a1 1
# Copyright 2008, 2009, 2010, 2011 Free Software Foundation, Inc.
@


1.6.4.1
log
@Copyright year update in most files of the GDB Project.

gdb/ChangeLog:

        Copyright year update in most files of the GDB Project.
@
text
@d1 1
a1 1
# Copyright 2008-2012 Free Software Foundation, Inc.
@


1.5
log
@Do not set prms_id/bug_id anymore.

2010-05-05  Joel Brobecker  <brobecker@@adacore.com>

	Remove the use of prms_id and bug_id throughout the testsuite.
@
text
@d1 1
a1 1
# Copyright 2008, 2009, 2010 Free Software Foundation, Inc.
@


1.4
log
@Update copyright year in most headers.

Automatic update by copyright.sh.
@
text
@a19 2
set prms_id 0
set bug_id 0
@


1.3
log
@        Updated copyright notices for most files.
@
text
@d1 1
a1 1
# Copyright 2008, 2009 Free Software Foundation, Inc.
@


1.2
log
@(set_lang_c): Delete.
(runto_main): If it fails, call fail instead of gdb_suppress_tests.
@
text
@d1 1
a1 1
# Copyright 2008 Free Software Foundation, Inc.
@


1.1
log
@	* infcall.c (call_function_by_hand): Handle inferior exit.

	* gdb.base/callexit.exp: New file.
	* gdb.base/callexit.c: New file.
@
text
@a39 29
# Set the current language to C.  This counts as a test.  If it
# fails, then we skip the other tests.

proc set_lang_c {} {
    global gdb_prompt

    send_gdb "set language c\n"
    gdb_expect {
	-re ".*$gdb_prompt $" {}
	timeout { fail "set language c (timeout)" ; return 0; }
    }

    send_gdb "show language\n"
    gdb_expect {
	-re ".* source language is \"c\".*$gdb_prompt $" {
	    pass "set language to \"c\""
	    return 1
	}
	-re ".*$gdb_prompt $" {
	    fail "setting language to \"c\""
	    return 0
	}
	timeout {
	    fail "can't show language (timeout)"
	    return 0
	}
    }
}

d47 3
a49 6
if { ![set_lang_c] } {
    gdb_suppress_tests;
} else {
    if { ![runto_main] } {
	gdb_suppress_tests;
    }
@

