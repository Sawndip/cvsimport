head	1.22;
access;
symbols
	gdb_7_6_1-2013-08-30-release:1.22
	gdb_7_6-2013-04-26-release:1.22
	gdb_7_6-branch:1.22.0.2
	gdb_7_6-2013-03-12-branchpoint:1.22
	gdb_7_5_1-2012-11-29-release:1.21
	gdb_7_5-2012-08-17-release:1.21
	gdb_7_5-branch:1.21.0.2
	gdb_7_5-2012-07-18-branchpoint:1.21
	gdb_7_4_1-2012-04-26-release:1.18.4.1
	gdb_7_4-2012-01-24-release:1.18.4.1
	gdb_7_4-branch:1.18.0.4
	gdb_7_4-2011-12-13-branchpoint:1.18
	gdb_7_3_1-2011-09-04-release:1.18
	gdb_7_3-2011-07-26-release:1.18
	gdb_7_3-branch:1.18.0.2
	gdb_7_3-2011-04-01-branchpoint:1.18
	gdb_7_2-2010-09-02-release:1.15
	gdb_7_2-branch:1.15.0.2
	gdb_7_2-2010-07-07-branchpoint:1.15
	gdb_7_1-2010-03-18-release:1.11
	gdb_7_1-branch:1.11.0.2
	gdb_7_1-2010-02-18-branchpoint:1.11
	gdb_7_0_1-2009-12-22-release:1.9
	gdb_7_0-2009-10-06-release:1.9
	gdb_7_0-branch:1.9.0.4
	gdb_7_0-2009-09-16-branchpoint:1.9
	arc-sim-20090309:1.7
	msnyder-checkpoint-072509-branch:1.9.0.2
	msnyder-checkpoint-072509-branchpoint:1.9
	arc-insight_6_8-branch:1.7.0.6
	arc-insight_6_8-branchpoint:1.7
	insight_6_8-branch:1.7.0.4
	insight_6_8-branchpoint:1.7
	reverse-20081226-branch:1.8.0.10
	reverse-20081226-branchpoint:1.8
	multiprocess-20081120-branch:1.8.0.8
	multiprocess-20081120-branchpoint:1.8
	reverse-20080930-branch:1.8.0.6
	reverse-20080930-branchpoint:1.8
	reverse-20080717-branch:1.8.0.4
	reverse-20080717-branchpoint:1.8
	msnyder-reverse-20080609-branch:1.8.0.2
	msnyder-reverse-20080609-branchpoint:1.8
	drow-reverse-20070409-branch:1.5.0.2
	drow-reverse-20070409-branchpoint:1.5
	gdb_6_8-2008-03-27-release:1.7
	gdb_6_8-branch:1.7.0.2
	gdb_6_8-2008-02-26-branchpoint:1.7
	gdb_6_7_1-2007-10-29-release:1.6
	gdb_6_7-2007-10-10-release:1.6
	gdb_6_7-branch:1.6.0.2
	gdb_6_7-2007-09-07-branchpoint:1.6
	insight_6_6-20070208-release:1.3
	gdb_6_6-2006-12-18-release:1.3
	gdb_6_6-branch:1.3.0.12
	gdb_6_6-2006-11-15-branchpoint:1.3
	insight_6_5-20061003-release:1.3
	nickrob-async-20060828-mergepoint:1.3
	gdb_6_5-20060621-release:1.3
	gdb_6_5-branch:1.3.0.10
	gdb_6_5-2006-05-14-branchpoint:1.3
	nickrob-async-20060513-branch:1.3.0.8
	nickrob-async-20060513-branchpoint:1.3
	msnyder-reverse-20060502-branch:1.3.0.6
	msnyder-reverse-20060502-branchpoint:1.3
	readline_5_1-import-branch:1.3.0.4
	readline_5_1-import-branchpoint:1.3
	msnyder-reverse-20060331-branch:1.3.0.2
	msnyder-reverse-20060331-branchpoint:1.3
	gdb-csl-available-20060303-branch:1.1.0.2
	gdb-csl-available-20060303-branchpoint:1.1;
locks; strict;
comment	@# @;


1.22
date	2013.01.01.06.33.26;	author brobecke;	state Exp;
branches;
next	1.21;

1.21
date	2012.06.21.20.46.22;	author tromey;	state Exp;
branches;
next	1.20;

1.20
date	2012.01.16.16.21.44;	author palves;	state Exp;
branches;
next	1.19;

1.19
date	2012.01.04.08.17.46;	author brobecke;	state Exp;
branches;
next	1.18;

1.18
date	2011.01.01.15.33.42;	author brobecke;	state Exp;
branches
	1.18.4.1;
next	1.17;

1.17
date	2010.10.12.18.12.48;	author jkratoch;	state Exp;
branches;
next	1.16;

1.16
date	2010.07.30.16.04.30;	author jkratoch;	state Exp;
branches;
next	1.15;

1.15
date	2010.07.05.18.01.53;	author jkratoch;	state Exp;
branches
	1.15.2.1;
next	1.14;

1.14
date	2010.06.01.21.29.21;	author msnyder;	state Exp;
branches;
next	1.13;

1.13
date	2010.05.05.18.06.58;	author brobecke;	state Exp;
branches;
next	1.12;

1.12
date	2010.03.11.22.07.03;	author jkratoch;	state Exp;
branches;
next	1.11;

1.11
date	2010.02.13.12.02.29;	author jkratoch;	state Exp;
branches;
next	1.10;

1.10
date	2010.01.01.07.32.01;	author brobecke;	state Exp;
branches;
next	1.9;

1.9
date	2009.01.03.05.58.03;	author brobecke;	state Exp;
branches;
next	1.8;

1.8
date	2008.03.24.15.16.12;	author jkratoch;	state Exp;
branches;
next	1.7;

1.7
date	2008.01.01.22.53.19;	author drow;	state Exp;
branches;
next	1.6;

1.6
date	2007.08.23.18.14.17;	author brobecke;	state Exp;
branches;
next	1.5;

1.5
date	2007.02.27.13.54.04;	author drow;	state Exp;
branches;
next	1.4;

1.4
date	2007.01.09.17.59.11;	author drow;	state Exp;
branches;
next	1.3;

1.3
date	2006.03.09.00.22.09;	author aoliva;	state Exp;
branches;
next	1.2;

1.2
date	2006.03.07.05.05.29;	author aoliva;	state Exp;
branches;
next	1.1;

1.1
date	2006.02.28.04.29.10;	author aoliva;	state Exp;
branches;
next	;

1.18.4.1
date	2012.01.06.04.44.00;	author brobecke;	state Exp;
branches;
next	;

1.15.2.1
date	2010.10.05.20.53.40;	author jkratoch;	state Exp;
branches;
next	;


desc
@@


1.22
log
@Update years in copyright notice for the GDB files.

Two modifications:
  1. The addition of 2013 to the copyright year range for every file;
  2. The use of a single year range, instead of potentially multiple
     year ranges, as approved by the FSF.
@
text
@# Copyright 2006-2013 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Please email any bugs, comments, and/or additions to this file to:
# bug-gdb@@gnu.org

# This file was written by Alexandre Oliva <aoliva@@redhat.com>


if { ![isnative] || [is_remote host] || [skip_shlib_tests]} {
    return
}

if [get_compiler_info] {
    return -1
}

if {$gcc_compiled == 0} {
    return -1
}

load_lib prelink-support.exp

set testfile "prelink"

set libsrcfile ${testfile}-lib.c
set libfile ${objdir}/${subdir}/${testfile}.so

# Use -soname so that the new library gets copied by build_executable_own_libs.

if { [gdb_compile_shlib "${srcdir}/${subdir}/${libsrcfile}" "${libfile}" [list debug "ldflags=-Wl,-soname,[file tail ${libfile}]"]] != ""} {
    # If creating the shared library fails, maybe we don't have the right tools
    return -1
}

set srcfile ${testfile}.c
set executable ${testfile}t
set binfile ${objdir}/${subdir}/${executable}
set prelink_args [build_executable_own_libs ${testfile}.exp $executable $srcfile [list debug "ldflags=-Wl,${libfile},-rpath,[file dirname ${libfile}]"]]
if {$prelink_args == ""} {
    return -1
}

set test "split debug of executable"
if [gdb_gnu_strip_debug $binfile] {
    fail $test
} else {
    pass $test
}

if ![prelink_yes $prelink_args] {
    # Maybe we don't have prelink.
    return -1
}

set found 0
set coredir "${objdir}/${subdir}/coredir.[getpid]"
file mkdir $coredir
catch "system \"(cd ${coredir}; ulimit -c unlimited; ${binfile}; true) >/dev/null 2>&1\""

foreach i "${coredir}/core ${coredir}/core.coremaker.c ${binfile}.core" {
    if [remote_file build exists $i] {
	remote_exec build "mv $i ${objdir}/${subdir}/prelink.core"
	set found 1
    }
}
# Check for "core.PID".
if { $found == 0 } {
    set names [glob -nocomplain -directory $coredir core.*]
    if {[llength $names] == 1} {
        set corefile [file join $coredir [lindex $names 0]]
        remote_exec build "mv $corefile ${objdir}/${subdir}/prelink.core"
        set found 1
    }
}

# Try to clean up after ourselves.
remote_file build delete [file join $coredir coremmap.data]
remote_exec build "rmdir $coredir"

if { $found == 0  } {
    warning "can't generate a core file - prelink tests suppressed - check ulimit -c"
    return 0
}

# Relink $libfile to a different address.
if ![prelink_yes $prelink_args] {
    return -1
}

# Start with a fresh gdb

clean_restart $executable

# Print the "adjusting expectations" message.
gdb_test_no_output "set verbose on"

gdb_test "core-file $objdir/$subdir/prelink.core" "Using PIC \\(Position Independent Code\\) prelink displacement 0x\[^0\]\[0-9a-f\]* for \[^\r\n\]*[file tail ${libfile}].*" "seen displacement message"

gdb_test "p &bssvar == bssvarp" " = 1" ".dynbss vs. .bss address shift"
@


1.21
log
@	* lib/gdb.exp (skip_altivec_tests, skip_vsx_tests)
	(build_executable): Update.
	(get_compiler_info): Remove 'binfile' argument.
	* gdb.ada/arrayidx.exp: Update.
	* gdb.ada/null_array.exp: Update.
	* gdb.arch/altivec-abi.exp: Update.
	* gdb.arch/altivec-regs.exp: Update.
	* gdb.arch/amd64-byte.exp: Update.
	* gdb.arch/amd64-dword.exp: Update.
	* gdb.arch/amd64-word.exp: Update.
	* gdb.arch/i386-avx.exp: Update.
	* gdb.arch/i386-byte.exp: Update.
	* gdb.arch/i386-sse.exp: Update.
	* gdb.arch/i386-word.exp: Update.
	* gdb.arch/ppc-dfp.exp: Update.
	* gdb.arch/ppc-fp.exp: Update.
	* gdb.arch/vsx-regs.exp: Update.
	* gdb.base/all-bin.exp: Update.
	* gdb.base/annota1.exp: Update.
	* gdb.base/async.exp: Update.
	* gdb.base/attach.exp: Update.
	* gdb.base/break-interp.exp: Update.
	* gdb.base/call-ar-st.exp: Update.
	* gdb.base/call-rt-st.exp: Update.
	* gdb.base/call-sc.exp: Update.
	* gdb.base/callfuncs.exp: Update.
	* gdb.base/catch-load.exp: Update.
	* gdb.base/completion.exp: Update.
	* gdb.base/complex.exp: Update.
	* gdb.base/condbreak.exp: Update.
	* gdb.base/consecutive.exp: Update.
	* gdb.base/constvars.exp: Update.
	* gdb.base/corefile.exp: Update.
	* gdb.base/eval-skip.exp: Update.
	* gdb.base/expand-psymtabs.exp: Update.
	* gdb.base/exprs.exp: Update.
	* gdb.base/fileio.exp: Update.
	* gdb.base/fixsection.exp: Update.
	* gdb.base/funcargs.exp: Update.
	* gdb.base/gdb11530.exp: Update.
	* gdb.base/gdb1555.exp: Update.
	* gdb.base/gnu-ifunc.exp: Update.
	* gdb.base/gnu_vector.exp: Update.
	* gdb.base/info-macros.exp: Update.
	* gdb.base/jit-simple.exp: Update.
	* gdb.base/jit-so.exp: Update.
	* gdb.base/jit.exp: Update.
	* gdb.base/langs.exp: Update.
	* gdb.base/list.exp: Update.
	* gdb.base/logical.exp: Update.
	* gdb.base/long_long.exp: Update.
	* gdb.base/longjmp.exp: Update.
	* gdb.base/macscp.exp: Update.
	* gdb.base/mips_pro.exp: Update.
	* gdb.base/miscexprs.exp: Update.
	* gdb.base/morestack.exp: Update.
	* gdb.base/nodebug.exp: Update.
	* gdb.base/opaque.exp: Update.
	* gdb.base/pc-fp.exp: Update.
	* gdb.base/pending.exp: Update.
	* gdb.base/permissions.exp: Update.
	* gdb.base/pointers.exp: Update.
	* gdb.base/prelink.exp: Update.
	* gdb.base/printcmds.exp: Update.
	* gdb.base/psymtab.exp: Update.
	* gdb.base/ptype.exp: Update.
	* gdb.base/relational.exp: Update.
	* gdb.base/scope.exp: Update.
	* gdb.base/setvar.exp: Update.
	* gdb.base/shlib-call.exp: Update.
	* gdb.base/shreloc.exp: Update.
	* gdb.base/signals.exp: Update.
	* gdb.base/sizeof.exp: Update.
	* gdb.base/so-impl-ld.exp: Update.
	* gdb.base/so-indr-cl.exp: Update.
	* gdb.base/solib-disc.exp: Update.
	* gdb.base/solib-display.exp: Update.
	* gdb.base/solib-nodir.exp: Update.
	* gdb.base/solib-overlap.exp: Update.
	* gdb.base/solib-symbol.exp: Update.
	* gdb.base/solib-weak.exp: Update.
	* gdb.base/solib.exp: Update.
	* gdb.base/store.exp: Update.
	* gdb.base/structs.exp: Update.
	* gdb.base/structs2.exp: Update.
	* gdb.base/type-opaque.exp: Update.
	* gdb.base/unload.exp: Update.
	* gdb.base/varargs.exp: Update.
	* gdb.base/volatile.exp: Update.
	* gdb.base/watch_thread_num.exp: Update.
	* gdb.base/watchpoint-solib.exp: Update.
	* gdb.base/watchpoint.exp: Update.
	* gdb.base/watchpoints.exp: Update.
	* gdb.base/whatis.exp: Update.
	* gdb.cell/arch.exp: Update.
	* gdb.cell/break.exp: Update.
	* gdb.cell/bt.exp: Update.
	* gdb.cell/core.exp: Update.
	* gdb.cell/data.exp: Update.
	* gdb.cell/ea-cache.exp: Update.
	* gdb.cell/f-regs.exp: Update.
	* gdb.cell/fork.exp: Update.
	* gdb.cell/gcore.exp: Update.
	* gdb.cell/mem-access.exp: Update.
	* gdb.cell/ptype.exp: Update.
	* gdb.cell/registers.exp: Update.
	* gdb.cell/sizeof.exp: Update.
	* gdb.cell/solib-symbol.exp: Update.
	* gdb.cell/solib.exp: Update.
	* gdb.cp/ambiguous.exp: Update.
	* gdb.cp/breakpoint.exp: Update.
	* gdb.cp/bs15503.exp: Update.
	* gdb.cp/casts.exp: Update.
	* gdb.cp/class2.exp: Update.
	* gdb.cp/cpexprs.exp: Update.
	* gdb.cp/cplusfuncs.exp: Update.
	* gdb.cp/ctti.exp: Update.
	* gdb.cp/dispcxx.exp: Update.
	* gdb.cp/gdb1355.exp: Update.
	* gdb.cp/gdb2384.exp: Update.
	* gdb.cp/gdb2495.exp: Update.
	* gdb.cp/infcall-dlopen.exp: Update.
	* gdb.cp/local.exp: Update.
	* gdb.cp/m-data.exp: Update.
	* gdb.cp/m-static.exp: Update.
	* gdb.cp/mb-ctor.exp: Update.
	* gdb.cp/mb-inline.exp: Update.
	* gdb.cp/mb-templates.exp: Update.
	* gdb.cp/member-ptr.exp: Update.
	* gdb.cp/method.exp: Update.
	* gdb.cp/namespace.exp: Update.
	* gdb.cp/nextoverthrow.exp: Update.
	* gdb.cp/nsdecl.exp: Update.
	* gdb.cp/nsrecurs.exp: Update.
	* gdb.cp/nsstress.exp: Update.
	* gdb.cp/nsusing.exp: Update.
	* gdb.cp/pr-1023.exp: Update.
	* gdb.cp/pr-1210.exp: Update.
	* gdb.cp/pr-574.exp: Update.
	* gdb.cp/pr9631.exp: Update.
	* gdb.cp/printmethod.exp: Update.
	* gdb.cp/psmang.exp: Update.
	* gdb.cp/re-set-overloaded.exp: Update.
	* gdb.cp/rtti.exp: Update.
	* gdb.cp/shadow.exp: Update.
	* gdb.cp/templates.exp: Update.
	* gdb.cp/try_catch.exp: Update.
	* gdb.dwarf2/dw2-ranges.exp: Update.
	* gdb.dwarf2/pr10770.exp: Update.
	* gdb.fortran/library-module.exp: Update.
	* gdb.hp/gdb.aCC/optimize.exp: Update.
	* gdb.hp/gdb.aCC/watch-cmd.exp: Update.
	* gdb.hp/gdb.base-hp/callfwmall.exp: Update.
	* gdb.hp/gdb.base-hp/hwwatchbus.exp: Update.
	* gdb.hp/gdb.base-hp/pxdb.exp: Update.
	* gdb.hp/gdb.base-hp/sized-enum.exp: Update.
	* gdb.hp/gdb.base-hp/so-thresh.exp: Update.
	* gdb.hp/gdb.compat/xdb1.exp: Update.
	* gdb.hp/gdb.compat/xdb2.exp: Update.
	* gdb.hp/gdb.compat/xdb3.exp: Update.
	* gdb.hp/gdb.defects/bs14602.exp: Update.
	* gdb.hp/gdb.defects/solib-d.exp: Update.
	* gdb.hp/gdb.objdbg/objdbg01.exp: Update.
	* gdb.hp/gdb.objdbg/objdbg02.exp: Update.
	* gdb.hp/gdb.objdbg/objdbg03.exp: Update.
	* gdb.hp/gdb.objdbg/objdbg04.exp: Update.
	* gdb.mi/gdb792.exp: Update.
	* gdb.mi/mi-pending.exp: Update.
	* gdb.mi/mi-solib.exp: Update.
	* gdb.mi/mi-var-cp.exp: Update.
	* gdb.opt/clobbered-registers-O2.exp: Update.
	* gdb.opt/inline-bt.exp: Update.
	* gdb.opt/inline-cmds.exp: Update.
	* gdb.opt/inline-locals.exp: Update.
	* gdb.python/py-events.exp: Update.
	* gdb.python/py-finish-breakpoint.exp: Update.
	* gdb.python/py-type.exp: Update.
	* gdb.reverse/solib-precsave.exp: Update.
	* gdb.reverse/solib-reverse.exp: Update.
	* gdb.server/solib-list.exp: Update.
	* gdb.stabs/weird.exp: Update.
	* gdb.threads/attach-into-signal.exp: Update.
	* gdb.threads/attach-stopped.exp: Update.
	* gdb.threads/tls-shared.exp: Update.
	* gdb.trace/change-loc.exp: Update.
	* gdb.trace/strace.exp: Update.
@
text
@d1 1
a1 1
# Copyright 2006-2012 Free Software Foundation, Inc.
@


1.20
log
@2012-01-16  Pedro Alves  <palves@@redhat.com>

	Remove all calls to strace.
@
text
@d26 1
a26 1
if [get_compiler_info "ignored"] {
@


1.19
log
@Copyright year update in most files of the GDB Project.

gdb/ChangeLog:

        Copyright year update in most files of the GDB Project.
@
text
@a20 4
if $tracelevel then {
	strace $tracelevel
	}

@


1.18
log
@run copyright.sh for 2011.
@
text
@d1 1
a1 1
# Copyright 2006, 2007, 2008, 2009, 2010, 2011 Free Software Foundation, Inc.
@


1.18.4.1
log
@Copyright year update in most files of the GDB Project.

gdb/ChangeLog:

        Copyright year update in most files of the GDB Project.
@
text
@d1 1
a1 1
# Copyright 2006-2012 Free Software Foundation, Inc.
@


1.17
log
@gdb/testsuite/
	* gdb.base/break-interp.exp: Use ldlags for linking flags.
	* gdb.base/prelink.exp: Likewise.
	* gdb.base/solib-nodir.exp: Likewise.
	* lib/gdb.exp (gdb_compile) <*-*-openbsd*>
	(gdb_compile) <shlib_load>: Use ldlags for linking flags.
	* lib/prelink-support.exp (build_executable_own_libs): Likewise.
@
text
@d1 1
a1 1
# Copyright 2006, 2007, 2008, 2009, 2010 Free Software Foundation, Inc.
@


1.16
log
@gdb/
	* symfile.c (addr_section_name): New function.
	(addrs_section_compar): Use it.
	(addr_info_make_relative): Use it.  Move variable sect_name into a more
	inner block.  Make ".dynbss" and ".sdynbss" checks more strict.

gdb/testsuite/
	* gdb.base/prelink-lib.c (copyreloc): New initialized variable.
	* gdb.base/prelink.c (copyreloc, bssvar, bssvarp): New variables.
	(main): Use copyreloc.
	* gdb.base/prelink.exp (split debug of executable)
	(.dynbss vs. .bss address shift): New tests.
@
text
@d47 1
a47 1
if { [gdb_compile_shlib "${srcdir}/${subdir}/${libsrcfile}" "${libfile}" [list debug "additional_flags=-Wl,-soname,[file tail ${libfile}]"]] != ""} {
d55 1
a55 1
set prelink_args [build_executable_own_libs ${testfile}.exp $executable $srcfile [list debug "additional_flags=-Wl,${libfile},-rpath,[file dirname ${libfile}]"]]
@


1.15
log
@gdb/testsuite/
	* gdb.base/attach-pie-misread.exp: Load prelink-support.exp.  Replace
	build_executable by build_executable_own_libs.  Replace "prelink -R"
	execution by a call of prelink_yes.  Comment why "prelink -r" needs no
	change.
	* gdb.base/break-interp.exp: Load prelink-support.exp.  Rename calls of
	copy to file_copy.  Move setting opts --dynamic-linker and -rpath,
	mkdir $dir and ldd its parsing and copying to lib/prelink-support.exp.
	Replace build_executable by build_executable_own_libs's function
	build_executable_own_libs.
	(prelinkNO): Create new stub to call prelink_no.
	(prelinkYES): Create new stub to call prelink_yes.
	(test_attach): Rename calls of copy to file_copy.
	(section_get, prelinkNO_run, prelinkNO, prelinkYES, symlink_resolve)
	(copy): Move to ...
	* lib/prelink-support.exp: ... a new file.  Rename prelinkNO to
	prelink_no, prelinkYES to prelink_yes, copy to file_copy.
	* gdb.base/prelink.exp: Disable testcase also for is_remote and
	skip_shlib_tests.  Load prelink-support.exp.  Replace gdb_compile with
	special flags by gdb_compile_shlib.  Replace second gdb_compile by
	build_executable_own_libs.  Replace "prelink -R" execution by a call of
	prelink_yes.  Replace "prelink -u" and second "prelink -R" execution by
	a second call of prelink_yes.  Replace restart commands by
	clean_restart.
	(prelink): Rename to ...
	(seen displacement message): ... this test.  Extend its expectation
	strictness.
@
text
@d60 7
d115 2
@


1.15.2.1
log
@gdb/
	* symfile.c (addr_section_name): New function.
	(addrs_section_compar): Use it.
	(addr_info_make_relative): Use it.  Move variable sect_name into a more
	inner block.  Make ".dynbss" and ".sdynbss" checks more strict.

gdb/testsuite/
	* gdb.base/prelink-lib.c (copyreloc): New initialized variable.
	* gdb.base/prelink.c (copyreloc, bssvar, bssvarp): New variables.
	(main): Use copyreloc.
	* gdb.base/prelink.exp (split debug of executable)
	(.dynbss vs. .bss address shift): New tests.
@
text
@a59 7
set test "split debug of executable"
if [gdb_gnu_strip_debug $binfile] {
    fail $test
} else {
    pass $test
}

a107 2

gdb_test "p &bssvar == bssvarp" " = 1" ".dynbss vs. .bss address shift"
@


1.14
log
@2010-06-01  Michael Snyder  <msnyder@@vmware.com>

	* gdb.base/arithmet.exp: Use gdb_test_no_output.
	* gdb.base/arrayidx.exp: Ditto.
	* gdb.base/attach.exp: Ditto.
	* gdb.base/auxv.exp: Ditto.
	* gdb.base/bigcre.exp: Ditto.
	* gdb.base/break-always.exp: Ditto.
	* gdb.base/break-interp.exp: Ditto.
	* gdb.base/break.exp: Ditto.
	* gdb.base/breakpoint-shadow.exp: Ditto.
	* gdb.base/call-ar-st.exp: Ditto.
	* gdb.base/call-sc.exp: Ditto.
	* gdb.base/call-signal-resume.exp: Ditto.
	* gdb.base/callfuncs.exp: Ditto.
	* gdb.base/catch-syscall.exp: Ditto.
	* gdb.base/charset.exp: Ditto.
	* gdb.base/code-expr.exp: Ditto.
	* gdb.base/commands.exp: Ditto.
	* gdb.base/cond-expr.exp: Ditto.
	* gdb.base/condbreak.exp: Ditto.
	* gdb.base/cursal.exp: Ditto.
	* gdb.base/cvexpr.exp: Ditto.
	* gdb.base/default.exp: Ditto.
	* gdb.base/del.exp: Ditto.
	* gdb.base/detach.exp: Ditto.
	* gdb.base/display.exp: Ditto.
	* gdb.base/ena-dis-br.exp: Ditto.
	* gdb.base/eval-skip.exp: Ditto.
	* gdb.base/foll-fork.exp: Ditto.
	* gdb.base/foll-vfork.exp: Ditto.
	* gdb.base/frame-args.exp: Ditto.
	* gdb.base/funcargs.exp: Ditto.
	* gdb.base/gcore-buffer-overflow.exp: Ditto.
	* gdb.base/gdbvars.exp: Ditto.
	* gdb.base/help.exp: Ditto.
	* gdb.base/ifelse.exp: Ditto.
	* gdb.base/included.exp: Ditto.
	* gdb.base/list.exp: Ditto.
	* gdb.base/macscp.exp: Ditto.
	* gdb.base/maint.exp: Ditto.
	* gdb.base/multi-fork.exp: Ditto.
	* gdb.base/overlays.exp: Ditto.
	* gdb.base/page.exp: Ditto.
	* gdb.base/pending.exp: Ditto.
	* gdb.base/pointers.exp: Ditto.
	* gdb.base/pr11022.exp: Ditto.
	* gdb.base/prelink.exp: Ditto.
	* gdb.base/printcmds.exp: Ditto.
	* gdb.base/psymtab.exp: Ditto.
	* gdb.base/randomize.exp: Ditto.
	* gdb.base/relational.exp: Ditto.
	* gdb.base/relocate.exp: Ditto.
	* gdb.base/remote.exp: Ditto.
	* gdb.base/sepdebug.exp: Ditto.
	* gdb.base/set-lang-auto.exp: Ditto.
	* gdb.base/setshow.exp: Ditto.
	* gdb.base/setvar.exp: Ditto.
	* gdb.base/signals.exp: Ditto.
	* gdb.base/signull.exp: Ditto.
	* gdb.base/sigstep.exp: Ditto.
	* gdb.base/sizeof.exp: Ditto.
	* gdb.base/solib-disc.exp: Ditto.
	* gdb.base/store.exp: Ditto.
	* gdb.base/structs.exp: Ditto.
	* gdb.base/structs2.exp: Ditto.
	* gdb.base/subst.exp: Ditto.
	* gdb.base/term.exp: Ditto.
	* gdb.base/trace-commands.exp: Ditto.
	* gdb.base/unwindonsignal.exp: Ditto.
	* gdb.base/valgrind-db-attach.exp: Ditto.
	* gdb.base/varargs.exp: Ditto.
	* gdb.base/watch-cond.exp: Ditto.
	* gdb.base/watch_thread_num.exp: Ditto.
	* gdb.base/watchpoint-cond-gone.exp: Ditto.
	* gdb.base/watchpoint.exp: Ditto.
	* gdb.base/whatis-exp.exp: Ditto.
@
text
@d26 1
a26 2
# are we on a target board
if ![isnative] then {
d38 2
d44 4
a47 1
if { [gdb_compile "${srcdir}/${subdir}/${libsrcfile}" "${libfile}" executable [list debug "additional_flags=-fpic -shared -nodefaultlibs"]] != ""} {
d52 5
a56 10
# `--no-exec-shield' is for i386 where prelink in the exec-shield mode is
# forced to push all the libraries tight together to fit into the first two
# memory areas (either the ASCII Shield area or at least below the executable).
# In this case its -R option cannot be applied and we falsely FAIL here as if
# the system is already prelinked prelink has no choice how to randomize the
# single new unprelinked library address without wasting the first one/two
# memory areas.  We do not care of the efficiency of loading such resulting
# exec-shield unfriendly prelinked library.
if {[catch "system \"prelink -qNR --no-exec-shield ${libfile}\""] != 0} {
    # Maybe we don't have prelink.
d60 3
a62 4
set srcfile ${testfile}.c
set binfile ${objdir}/${subdir}/${testfile}t
if { [gdb_compile "${srcdir}/${subdir}/${srcfile} ${libfile}" "${binfile}" executable [list debug "additional_flags=-Wl,-rpath,${objdir}/${subdir}"]] != ""} {
    return -1;
d95 3
a97 3
if {[catch "system \"prelink -uN ${libfile}\""] != 0} {
    untested "${testfile}.so was not prelinked, maybe system libraries are not prelinked?"
    return 0
a98 1
catch "system \"prelink -qNR --no-exec-shield ${libfile}\""
d102 1
a102 4
gdb_exit
gdb_start
gdb_reinitialize_dir $srcdir/$subdir
gdb_load ${binfile}
d107 1
a107 1
gdb_test "core-file $objdir/$subdir/prelink.core" {Using PIC \(Position Independent Code\) prelink displacement.*} "prelink"
@


1.13
log
@Do not set prms_id/bug_id anymore.

2010-05-05  Joel Brobecker  <brobecker@@adacore.com>

	Remove the use of prms_id and bug_id throughout the testsuite.
@
text
@d111 1
a111 1
gdb_test "set verbose on"
@


1.12
log
@gdb/
	* solib-svr4.c (LM_ADDR_CHECK) <info_verbose>: Use printf_unfiltered
	for the PIC displacement, print also the displacement value.
	(svr4_exec_displacement):  Print DISPLACEMENT if INFO_VERBOSE.

gdb/testsuite/
	* gdb.base/break-interp.exp: Create new displacement parameter value
	for the test_ld calls.
	(reach): New parameter displacement, verify its content.  New push of
	pf_prefix "reach-$func:".  Import global expect_out.
	(test_core): New parameter displacement, verify its content.  New push
	of pf_prefix "core:".  New command "set verbose on".  Import global
	expect_out.
	(test_attach): New parameter displacement, verify its content.  New
	push of pf_prefix "attach:".  New command "set verbose on".  Import
	global expect_out.
	(test_ld): New parameter displacement, pass it to the reach, test_core
	and test_attach calls and verify its content in the "ld.so exit" test.
	* gdb.base/prelink.exp: Remove gdb_exit and final return.
	(prelink): Update expected text, use gdb_test.
@
text
@a24 2
set prms_id 0
set bug_id 0
@


1.11
log
@gdb/
	* solib-svr4.c: (LM_ADDR_CHECK): Print successful prelink adjustment
	only if INFO_VERBOSE.

gdb/testsuite/
	* gdb.base/prelink.exp (set verbose on): New.
@
text
@d115 1
a115 12
set test "prelink"
global gdb_prompt
gdb_test_multiple "core-file $objdir/$subdir/prelink.core" "$test" {
    -re "warning: \.dynamic section.*not at the expected address.*warning: difference.*caused by prelink, adjusting expectations.*$gdb_prompt $" {
	pass "$test"
    }
}

gdb_exit

return 0

@


1.10
log
@Update copyright year in most headers.

Automatic update by copyright.sh.
@
text
@d112 3
@


1.9
log
@        Updated copyright notices for most files.
@
text
@d1 1
a1 1
# Copyright 2006, 2007, 2008, 2009 Free Software Foundation, Inc.
@


1.8
log
@	Fix random false FAILs on i386.
	* gdb.base/prelink.exp: Use `--no-exec-shield' for prelink.
@
text
@d1 1
a1 1
# Copyright 2006, 2007, 2008 Free Software Foundation, Inc.
@


1.7
log
@	Updated copyright notices for most files.
@
text
@d50 9
a58 1
if {[catch "system \"prelink -qNR ${libfile}\""] != 0} {
d103 1
a103 1
catch "system \"prelink -qNR ${libfile}\""
@


1.6
log
@        Switch the license of all .exp files to GPLv3.
        Switch the license of all .f and .f90 files to GPLv3.
        Switch the license of all .s and .S files to GPLv3.
@
text
@d1 1
a1 1
# Copyright 2006, 2007 Free Software Foundation, Inc.
@


1.5
log
@	* gdb.base/maint.exp: Remove full paths from test names.
	* gdb.base/prelink.exp, gdb.cp/cp-relocate.exp,
	gdb.xml/tdesc-errors.exp, gdb.xml/tdesc-xinclude.exp: Likewise.
@
text
@d5 1
a5 1
# the Free Software Foundation; either version 2 of the License, or
d14 1
a14 2
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA.
@


1.4
log
@Copyright updates for 2007.
@
text
@d93 1
a93 1
    untested "${libfile} was not prelinked, maybe system libraries are not prelinked?"
@


1.3
log
@gdb/ChangeLog:
* solib-svr4.c (svr4_current_sos): Move up initialization of
l_addr, such that it clearly covers all cases.
gdb/testsuite/ChangeLog:
* gdb.base/prelink.exp: Anchor tested-for regular expression
on gdb prompt.
@
text
@d1 1
a1 1
# Copyright 2006 Free Software Foundation, Inc.
@


1.2
log
@* gdb.base/prelink.c, gdb.base/prelink-lib.c: Update FSF address.
* gdb.base/prelink.exp: Likewise.  Add -q to prelink runs.
Rename executable to prelinkt.  Don't re-prelink if we didn't
get a core file.  Test prelink -u exit status to tell whether
prelinking failed.  Use gdb_test_multiple.
@
text
@d106 1
d108 1
a108 1
    -re "warning: \.dynamic section.*not at the expected address.*warning: difference.*caused by prelink, adjusting expectations." {
@


1.1
log
@gdb/ChangeLog:
* solib-svr4.h (struct link_map_offsets): Add l_ld_offset and
l_ld_size fields.
* solib-svr4.c (struct lm_info): Add l_addr field.
(LM_ADDR_FROM_LINK_MAP): Renamed from LM_ADDR.
(HAS_LM_DYNAMIC_FROM_LINK_MAP): New.
(LM_DYNAMIC_FROM_LINK_MAP): New.
(LM_ADDR_CHECK): New.  Use it instead of LM_ADDR.
(svr4_current_sos): Initialize l_addr.  Adjust.
(svr4_relocate_section_addresses): Adjust.
(svr4_ilp32_fetch_link_map_offsets): Define new members.
(svr4_lp64_fetch_link_map_offsets): Likewise.
* solib-legacy.c (legacy_svr4_fetch_link_map_offsets): Likewise.
* mipsnbsd-tdep.c (mipsnbsd_ilp32_fetch_link_map_offsets): Likewise.
(mipsnbsd_lp64_fetch_link_map_offsets): Likewise.
* Makefile.in (solib-svr4.o): Depend on $(elf_bfd_h).
gdb/testsuite/ChangeLog:
* gdb.base/prelink.exp: New test.
* gdb.base/prelink.c, gdb.base/prelink-lib.c: New sources.
@
text
@d15 1
a15 1
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
d18 1
a18 1
# bug-gdb@@prep.ai.mit.edu
a42 2
set srcfile ${testfile}.c
set binfile ${objdir}/${subdir}/${testfile}
d51 1
a51 1
if {[catch "system \"prelink -NR ${libfile}\""] != 0} {
d57 1
a57 1
set binfile ${objdir}/${subdir}/${testfile}
a82 3
catch "system \"prelink -u ${libfile}\""
catch "system \"prelink -NR ${libfile}\""

d92 6
d105 4
a108 14
set oldtimeout $timeout
set timeout [expr "$timeout + 60"]
verbose "Timeout is now $timeout seconds" 2
send_gdb "core-file $objdir/$subdir/prelink.core\n"
gdb_expect {
    -re "warning: \.dynamic section.*not at the expected address" {
	pass "changed base address"
    }
    -re ".*$gdb_prompt $"	{ fail "changed base address" }
    timeout 		{ fail "(timeout) changed base address" }
}
gdb_expect {
    -re "warning: difference.*caused by prelink, adjusting" {
	pass "prelink adjustment"
a109 2
    -re ".*$gdb_prompt $"	{ fail "prelink adjustment" }
    timeout 		{ fail "(timeout) prelink adjustment" }
a110 2
set timeout $oldtimeout
verbose "Timeout is now $timeout seconds" 2
@

