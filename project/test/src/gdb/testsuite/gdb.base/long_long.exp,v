head	1.41;
access;
symbols
	gdb_7_6_1-2013-08-30-release:1.39
	gdb_7_6-2013-04-26-release:1.39
	gdb_7_6-branch:1.39.0.2
	gdb_7_6-2013-03-12-branchpoint:1.39
	gdb_7_5_1-2012-11-29-release:1.38
	gdb_7_5-2012-08-17-release:1.38
	gdb_7_5-branch:1.38.0.2
	gdb_7_5-2012-07-18-branchpoint:1.38
	gdb_7_4_1-2012-04-26-release:1.35.2.1
	gdb_7_4-2012-01-24-release:1.35.2.1
	gdb_7_4-branch:1.35.0.2
	gdb_7_4-2011-12-13-branchpoint:1.35
	gdb_7_3_1-2011-09-04-release:1.34
	gdb_7_3-2011-07-26-release:1.34
	gdb_7_3-branch:1.34.0.2
	gdb_7_3-2011-04-01-branchpoint:1.34
	gdb_7_2-2010-09-02-release:1.33
	gdb_7_2-branch:1.33.0.2
	gdb_7_2-2010-07-07-branchpoint:1.33
	gdb_7_1-2010-03-18-release:1.30
	gdb_7_1-branch:1.30.0.2
	gdb_7_1-2010-02-18-branchpoint:1.30
	gdb_7_0_1-2009-12-22-release:1.28
	gdb_7_0-2009-10-06-release:1.28
	gdb_7_0-branch:1.28.0.4
	gdb_7_0-2009-09-16-branchpoint:1.28
	arc-sim-20090309:1.23
	msnyder-checkpoint-072509-branch:1.28.0.2
	msnyder-checkpoint-072509-branchpoint:1.28
	arc-insight_6_8-branch:1.23.0.16
	arc-insight_6_8-branchpoint:1.23
	insight_6_8-branch:1.23.0.14
	insight_6_8-branchpoint:1.23
	reverse-20081226-branch:1.23.0.12
	reverse-20081226-branchpoint:1.23
	multiprocess-20081120-branch:1.23.0.10
	multiprocess-20081120-branchpoint:1.23
	reverse-20080930-branch:1.23.0.8
	reverse-20080930-branchpoint:1.23
	reverse-20080717-branch:1.23.0.6
	reverse-20080717-branchpoint:1.23
	msnyder-reverse-20080609-branch:1.23.0.4
	msnyder-reverse-20080609-branchpoint:1.23
	drow-reverse-20070409-branch:1.21.0.2
	drow-reverse-20070409-branchpoint:1.21
	gdb_6_8-2008-03-27-release:1.23
	gdb_6_8-branch:1.23.0.2
	gdb_6_8-2008-02-26-branchpoint:1.23
	gdb_6_7_1-2007-10-29-release:1.22
	gdb_6_7-2007-10-10-release:1.22
	gdb_6_7-branch:1.22.0.2
	gdb_6_7-2007-09-07-branchpoint:1.22
	insight_6_6-20070208-release:1.19
	gdb_6_6-2006-12-18-release:1.19
	gdb_6_6-branch:1.19.0.2
	gdb_6_6-2006-11-15-branchpoint:1.19
	insight_6_5-20061003-release:1.17
	gdb-csl-symbian-6_4_50_20060226-12:1.16.10.1
	gdb-csl-sourcerygxx-3_4_4-25:1.16
	nickrob-async-20060828-mergepoint:1.19
	gdb-csl-symbian-6_4_50_20060226-11:1.16.10.1
	gdb-csl-sourcerygxx-4_1-17:1.16.10.1
	gdb-csl-20060226-branch-local-2:1.16.10.1
	gdb-csl-sourcerygxx-4_1-14:1.16.10.1
	gdb-csl-sourcerygxx-4_1-13:1.16.10.1
	gdb-csl-sourcerygxx-4_1-12:1.16.10.1
	gdb-csl-sourcerygxx-3_4_4-21:1.16.10.1
	gdb_6_5-20060621-release:1.17
	gdb-csl-sourcerygxx-4_1-9:1.16.10.1
	gdb-csl-sourcerygxx-4_1-8:1.16.10.1
	gdb-csl-sourcerygxx-4_1-7:1.16.10.1
	gdb-csl-arm-2006q1-6:1.16.10.1
	gdb-csl-sourcerygxx-4_1-6:1.16.10.1
	gdb-csl-symbian-6_4_50_20060226-10:1.16.10.1
	gdb-csl-symbian-6_4_50_20060226-9:1.16.10.1
	gdb-csl-symbian-6_4_50_20060226-8:1.16.10.1
	gdb-csl-coldfire-4_1-11:1.16.10.1
	gdb-csl-sourcerygxx-3_4_4-19:1.16.10.1
	gdb-csl-coldfire-4_1-10:1.16.10.1
	gdb_6_5-branch:1.17.0.10
	gdb_6_5-2006-05-14-branchpoint:1.17
	gdb-csl-sourcerygxx-4_1-5:1.16.10.1
	nickrob-async-20060513-branch:1.17.0.8
	nickrob-async-20060513-branchpoint:1.17
	gdb-csl-sourcerygxx-4_1-4:1.16.10.1
	msnyder-reverse-20060502-branch:1.17.0.6
	msnyder-reverse-20060502-branchpoint:1.17
	gdb-csl-morpho-4_1-4:1.16.10.1
	gdb-csl-sourcerygxx-3_4_4-17:1.16.10.1
	readline_5_1-import-branch:1.17.0.4
	readline_5_1-import-branchpoint:1.17
	gdb-csl-20060226-branch-merge-to-csl-symbian-1:1.16.10.1
	gdb-csl-symbian-20060226-branch:1.16.10.1.0.2
	gdb-csl-symbian-20060226-branchpoint:1.16.10.1
	gdb-csl-20060226-branch-merge-to-csl-local-1:1.16.10.1
	msnyder-reverse-20060331-branch:1.17.0.2
	msnyder-reverse-20060331-branchpoint:1.17
	gdb-csl-available-20060303-branch:1.16.0.12
	gdb-csl-available-20060303-branchpoint:1.16
	gdb-csl-20060226-branch:1.16.0.10
	gdb-csl-20060226-branchpoint:1.16
	gdb_6_4-20051202-release:1.16
	msnyder-fork-checkpoint-branch:1.16.0.8
	msnyder-fork-checkpoint-branchpoint:1.16
	gdb-csl-gxxpro-6_3-branch:1.16.0.6
	gdb-csl-gxxpro-6_3-branchpoint:1.16
	gdb_6_4-branch:1.16.0.4
	gdb_6_4-2005-11-01-branchpoint:1.16
	gdb-csl-arm-20051020-branch:1.16.0.2
	gdb-csl-arm-20051020-branchpoint:1.16
	gdb-csl-arm-20050325-2005-q1b:1.15.8.1
	gdb-csl-arm-20050325-2005-q1a:1.15.8.1
	csl-arm-20050325-branch:1.15.0.8
	csl-arm-20050325-branchpoint:1.15
	gdb-post-i18n-errorwarning-20050211:1.15
	gdb-pre-i18n-errorwarning-20050211:1.15
	gdb_6_3-20041109-release:1.15
	gdb_6_3-branch:1.15.0.4
	gdb_6_3-20041019-branchpoint:1.15
	drow_intercu-merge-20040921:1.15
	drow_intercu-merge-20040915:1.15
	jimb-gdb_6_2-e500-branch:1.15.0.6
	jimb-gdb_6_2-e500-branchpoint:1.15
	gdb_6_2-20040730-release:1.15
	gdb_6_2-branch:1.15.0.2
	gdb_6_2-2004-07-10-gmt-branchpoint:1.15
	gdb_6_1_1-20040616-release:1.13
	gdb_6_1-2004-04-05-release:1.13
	drow_intercu-merge-20040402:1.13
	drow_intercu-merge-20040327:1.13
	ezannoni_pie-20040323-branch:1.13.0.50
	ezannoni_pie-20040323-branchpoint:1.13
	cagney_tramp-20040321-mergepoint:1.13
	cagney_tramp-20040309-branch:1.13.0.48
	cagney_tramp-20040309-branchpoint:1.13
	gdb_6_1-branch:1.13.0.46
	gdb_6_1-2004-03-01-gmt-branchpoint:1.13
	drow_intercu-20040221-branch:1.13.0.44
	drow_intercu-20040221-branchpoint:1.13
	cagney_bfdfile-20040213-branch:1.13.0.42
	cagney_bfdfile-20040213-branchpoint:1.13
	drow-cplus-merge-20040208:1.13
	carlton_dictionary-20040126-merge:1.13
	cagney_bigcore-20040122-branch:1.13.0.40
	cagney_bigcore-20040122-branchpoint:1.13
	drow-cplus-merge-20040113:1.13
	drow-cplus-merge-20031224:1.13
	drow-cplus-merge-20031220:1.13
	carlton_dictionary-20031215-merge:1.13
	drow-cplus-merge-20031214:1.13
	carlton-dictionary-20031111-merge:1.13
	gdb_6_0-2003-10-04-release:1.13
	kettenis_sparc-20030918-branch:1.13.0.38
	kettenis_sparc-20030918-branchpoint:1.13
	carlton_dictionary-20030917-merge:1.13
	ezannoni_pie-20030916-branchpoint:1.13
	ezannoni_pie-20030916-branch:1.13.0.36
	cagney_x86i386-20030821-branch:1.13.0.34
	cagney_x86i386-20030821-branchpoint:1.13
	carlton_dictionary-20030805-merge:1.13
	carlton_dictionary-20030627-merge:1.13
	gdb_6_0-branch:1.13.0.32
	gdb_6_0-2003-06-23-branchpoint:1.13
	jimb-ppc64-linux-20030613-branch:1.13.0.30
	jimb-ppc64-linux-20030613-branchpoint:1.13
	cagney_convert-20030606-branch:1.13.0.28
	cagney_convert-20030606-branchpoint:1.13
	cagney_writestrings-20030508-branch:1.13.0.26
	cagney_writestrings-20030508-branchpoint:1.13
	jimb-ppc64-linux-20030528-branch:1.13.0.24
	jimb-ppc64-linux-20030528-branchpoint:1.13
	carlton_dictionary-20030523-merge:1.13
	cagney_fileio-20030521-branch:1.13.0.22
	cagney_fileio-20030521-branchpoint:1.13
	kettenis_i386newframe-20030517-mergepoint:1.13
	jimb-ppc64-linux-20030509-branch:1.13.0.20
	jimb-ppc64-linux-20030509-branchpoint:1.13
	kettenis_i386newframe-20030504-mergepoint:1.13
	carlton_dictionary-20030430-merge:1.13
	kettenis_i386newframe-20030419-branch:1.13.0.18
	kettenis_i386newframe-20030419-branchpoint:1.13
	carlton_dictionary-20030416-merge:1.13
	cagney_frameaddr-20030409-mergepoint:1.13
	kettenis_i386newframe-20030406-branch:1.13.0.16
	kettenis_i386newframe-20030406-branchpoint:1.13
	cagney_frameaddr-20030403-branchpoint:1.13
	cagney_frameaddr-20030403-branch:1.13.0.14
	cagney_framebase-20030330-mergepoint:1.13
	cagney_framebase-20030326-branch:1.13.0.12
	cagney_framebase-20030326-branchpoint:1.13
	cagney_lazyid-20030317-branch:1.13.0.10
	cagney_lazyid-20030317-branchpoint:1.13
	kettenis-i386newframe-20030316-mergepoint:1.13
	offbyone-20030313-branch:1.13.0.8
	offbyone-20030313-branchpoint:1.13
	kettenis-i386newframe-20030308-branch:1.13.0.6
	kettenis-i386newframe-20030308-branchpoint:1.13
	carlton_dictionary-20030305-merge:1.13
	cagney_offbyone-20030303-branch:1.13.0.4
	cagney_offbyone-20030303-branchpoint:1.13
	carlton_dictionary-20030207-merge:1.13
	interps-20030203-mergepoint:1.13
	interps-20030202-branch:1.13.0.2
	interps-20030202-branchpoint:1.13
	cagney-unwind-20030108-branch:1.12.0.12
	cagney-unwind-20030108-branchpoint:1.12
	carlton_dictionary-20021223-merge:1.12
	gdb_5_3-2002-12-12-release:1.12
	carlton_dictionary-20021115-merge:1.12
	kseitz_interps-20021105-merge:1.12
	kseitz_interps-20021103-merge:1.12
	drow-cplus-merge-20021020:1.12
	drow-cplus-merge-20021025:1.12
	carlton_dictionary-20021025-merge:1.12
	carlton_dictionary-20021011-merge:1.12
	drow-cplus-branch:1.12.0.10
	drow-cplus-branchpoint:1.12
	kseitz_interps-20020930-merge:1.12
	carlton_dictionary-20020927-merge:1.12
	carlton_dictionary-branch:1.12.0.8
	carlton_dictionary-20020920-branchpoint:1.12
	gdb_5_3-branch:1.12.0.6
	gdb_5_3-2002-09-04-branchpoint:1.12
	kseitz_interps-20020829-merge:1.12
	cagney_sysregs-20020825-branch:1.12.0.4
	cagney_sysregs-20020825-branchpoint:1.12
	readline_4_3-import-branch:1.12.0.2
	readline_4_3-import-branchpoint:1.12
	gdb_5_2_1-2002-07-23-release:1.7
	kseitz_interps-20020528-branch:1.11.0.4
	kseitz_interps-20020528-branchpoint:1.11
	cagney_regbuf-20020515-branch:1.11.0.2
	cagney_regbuf-20020515-branchpoint:1.11
	jimb-macro-020506-branch:1.8.0.2
	jimb-macro-020506-branchpoint:1.8
	gdb_5_2-2002-04-29-release:1.7
	gdb_5_2-branch:1.7.0.8
	gdb_5_2-2002-03-03-branchpoint:1.7
	gdb_5_1_1-2002-01-24-release:1.7
	gdb_5_1_0_1-2002-01-03-release:1.7
	cygnus_cvs_20020108_pre:1.7
	gdb_5_1_0_1-2002-01-03-branch:1.7.0.6
	gdb_5_1_0_1-2002-01-03-branchpoint:1.7
	gdb_5_1-2001-11-21-release:1.7
	gdb_s390-2001-09-26-branch:1.7.0.4
	gdb_s390-2001-09-26-branchpoint:1.7
	gdb_5_1-2001-07-29-branch:1.7.0.2
	gdb_5_1-2001-07-29-branchpoint:1.7
	dberlin-typesystem-branch:1.6.0.2
	dberlin-typesystem-branchpoint:1.6
	gdb-post-ptid_t-2001-05-03:1.4
	gdb-pre-ptid_t-2001-05-03:1.4
	insight-precleanup-2001-01-01:1.2
	gdb-post-protoization-2000-07-29:1.2
	gdb-pre-protoization-2000-07-29:1.2
	gdb-premipsmulti-2000-06-06-branch:1.2.0.4
	gdb-premipsmulti-2000-06-06-branchpoint:1.2
	gdb-post-params-removal-2000-06-04:1.2
	gdb-pre-params-removal-2000-06-04:1.2
	gdb-post-params-removal-2000-05-28:1.2
	gdb-pre-params-removal-2000-05-28:1.2
	gdb_5_0-2000-05-19-release:1.2
	gdb_4_18_2-2000-05-18-release:1.2
	gdb_4_95_1-2000-05-11-snapshot:1.2
	gdb_4_95_0-2000-04-27-snapshot:1.2
	gdb_5_0-2000-04-10-branch:1.2.0.2
	gdb_5_0-2000-04-10-branchpoint:1.2
	repo-unification-2000-02-06:1.1.1.5
	insight-2000-02-04:1.1.1.5
	gdb-2000-02-04:1.1.1.5
	gdb-2000-02-02:1.1.1.5
	gdb-2000-02-01:1.1.1.5
	gdb-2000-01-31:1.1.1.5
	gdb-2000-01-26:1.1.1.5
	gdb-2000-01-24:1.1.1.5
	gdb-2000-01-17:1.1.1.5
	gdb-2000-01-10:1.1.1.5
	gdb-2000-01-05:1.1.1.5
	gdb-1999-12-21:1.1.1.5
	gdb-1999-12-13:1.1.1.5
	gdb-1999-12-07:1.1.1.5
	gdb-1999-12-06:1.1.1.5
	gdb-1999-11-16:1.1.1.5
	gdb-1999-11-08:1.1.1.5
	gdb-1999-11-01:1.1.1.5
	gdb-1999-10-25:1.1.1.5
	gdb-1999-10-18:1.1.1.5
	gdb-1999-10-11:1.1.1.5
	gdb-1999-10-04:1.1.1.5
	gdb-1999-09-28:1.1.1.5
	gdb-1999-09-21:1.1.1.5
	gdb-1999-09-13:1.1.1.5
	gdb-1999-09-08:1.1.1.4
	gdb-1999-08-30:1.1.1.4
	gdb-1999-08-23:1.1.1.4
	gdb-1999-08-16:1.1.1.4
	gdb-1999-08-09:1.1.1.4
	gdb-1999-08-02:1.1.1.3
	gdb-1999-07-26:1.1.1.2
	gdb-1999-07-19:1.1.1.2
	gdb-1999-07-12:1.1.1.2
	gdb-post-reformat-19990707:1.1.1.2
	gdb-1999-07-07-post-reformat-snapshot:1.1.1.2
	gdb-pre-reformat-19990707:1.1.1.2
	gdb-1999-07-07:1.1.1.2
	gdb-1999-07-05:1.1.1.2
	gdb-1999-06-28:1.1.1.2
	gdb-1999-06-21:1.1.1.1
	gdb-1999-06-14:1.1.1.1
	gdb-1999-06-07:1.1.1.1
	gdb-1999-06-01:1.1.1.1
	gdb-4_18-branch:1.1.1.1.0.2
	gdb-4_18-release:1.1.1.1
	gdb-1999-05-25:1.1.1.1
	gdb-1999-05-19:1.1.1.1
	gdb-1999-05-10:1.1.1.1
	gdb-19990504:1.1.1.1
	gdb-19990422:1.1.1.1
	SNAPSHOT:1.1.1
	gdb-4_18:1.1.1.1
	GDB_4_18:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.41
date	2013.06.27.18.51.31;	author tromey;	state Exp;
branches;
next	1.40;

1.40
date	2013.06.07.08.53.32;	author willnewton;	state Exp;
branches;
next	1.39;

1.39
date	2013.01.01.06.33.25;	author brobecke;	state Exp;
branches;
next	1.38;

1.38
date	2012.06.21.20.46.22;	author tromey;	state Exp;
branches;
next	1.37;

1.37
date	2012.01.16.16.21.44;	author palves;	state Exp;
branches;
next	1.36;

1.36
date	2012.01.04.08.17.46;	author brobecke;	state Exp;
branches;
next	1.35;

1.35
date	2011.05.04.19.28.15;	author jsm28;	state Exp;
branches
	1.35.2.1;
next	1.34;

1.34
date	2011.01.01.15.33.42;	author brobecke;	state Exp;
branches;
next	1.33;

1.33
date	2010.06.10.19.48.19;	author msnyder;	state Exp;
branches;
next	1.32;

1.32
date	2010.05.25.21.01.59;	author tromey;	state Exp;
branches;
next	1.31;

1.31
date	2010.05.24.22.06.59;	author msnyder;	state Exp;
branches;
next	1.30;

1.30
date	2010.01.01.07.32.01;	author brobecke;	state Exp;
branches;
next	1.29;

1.29
date	2009.11.11.20.01.22;	author froydnj;	state Exp;
branches;
next	1.28;

1.28
date	2009.07.07.21.33.50;	author tromey;	state Exp;
branches;
next	1.27;

1.27
date	2009.07.05.22.21.40;	author palves;	state Exp;
branches;
next	1.26;

1.26
date	2009.03.20.23.04.39;	author tromey;	state Exp;
branches;
next	1.25;

1.25
date	2009.02.13.16.13.47;	author tromey;	state Exp;
branches;
next	1.24;

1.24
date	2009.01.03.05.58.03;	author brobecke;	state Exp;
branches;
next	1.23;

1.23
date	2008.01.01.22.53.19;	author drow;	state Exp;
branches;
next	1.22;

1.22
date	2007.08.23.18.14.17;	author brobecke;	state Exp;
branches;
next	1.21;

1.21
date	2007.03.10.01.13.43;	author uweigand;	state Exp;
branches;
next	1.20;

1.20
date	2007.01.09.17.59.11;	author drow;	state Exp;
branches;
next	1.19;

1.19
date	2006.08.10.05.27.20;	author brobecke;	state Exp;
branches;
next	1.18;

1.18
date	2006.07.17.22.10.03;	author kettenis;	state Exp;
branches;
next	1.17;

1.17
date	2006.03.07.15.23.32;	author pbrook;	state Exp;
branches
	1.17.8.1;
next	1.16;

1.16
date	2005.09.26.02.17.34;	author pbrook;	state Exp;
branches
	1.16.10.1;
next	1.15;

1.15
date	2004.06.16.15.19.41;	author cagney;	state Exp;
branches
	1.15.8.1;
next	1.14;

1.14
date	2004.06.16.02.15.36;	author chastain;	state Exp;
branches;
next	1.13;

1.13
date	2003.01.20.15.40.07;	author ezannoni;	state Exp;
branches
	1.13.44.1;
next	1.12;

1.12
date	2002.06.06.19.08.18;	author msnyder;	state Exp;
branches
	1.12.8.1
	1.12.10.1;
next	1.11;

1.11
date	2002.05.10.23.43.04;	author msnyder;	state Exp;
branches
	1.11.2.1
	1.11.4.1;
next	1.10;

1.10
date	2002.05.09.18.17.22;	author msnyder;	state Exp;
branches;
next	1.9;

1.9
date	2002.05.08.21.05.44;	author msnyder;	state Exp;
branches;
next	1.8;

1.8
date	2002.05.03.21.25.08;	author msnyder;	state Exp;
branches;
next	1.7;

1.7
date	2001.07.17.22.19.49;	author ciceron;	state Exp;
branches;
next	1.6;

1.6
date	2001.05.24.18.30.10;	author msnyder;	state Exp;
branches;
next	1.5;

1.5
date	2001.05.23.19.04.13;	author chastain;	state Exp;
branches;
next	1.4;

1.4
date	2001.03.08.21.09.22;	author taylor;	state Exp;
branches;
next	1.3;

1.3
date	2001.03.06.08.21.50;	author kevinb;	state Exp;
branches;
next	1.2;

1.2
date	2000.03.09.21.55.40;	author scottb;	state Exp;
branches;
next	1.1;

1.1
date	99.04.16.01.34.31;	author shebs;	state Exp;
branches
	1.1.1.1;
next	;

1.35.2.1
date	2012.01.06.04.44.00;	author brobecke;	state Exp;
branches;
next	;

1.17.8.1
date	2006.08.28.07.48.42;	author nickrob;	state Exp;
branches;
next	;

1.16.10.1
date	2006.03.07.15.48.34;	author pbrook;	state Exp;
branches;
next	;

1.15.8.1
date	2005.03.25.22.02.38;	author drow;	state Exp;
branches;
next	;

1.13.44.1
date	2004.09.16.17.01.41;	author drow;	state Exp;
branches;
next	;

1.12.8.1
date	2003.02.07.19.17.59;	author carlton;	state Exp;
branches;
next	;

1.12.10.1
date	2003.12.14.20.27.50;	author drow;	state Exp;
branches;
next	;

1.11.2.1
date	2002.06.15.16.43.15;	author cagney;	state Exp;
branches;
next	;

1.11.4.1
date	2002.06.20.01.36.54;	author kseitz;	state Exp;
branches;
next	;

1.1.1.1
date	99.04.16.01.34.31;	author shebs;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	99.06.28.16.03.30;	author jsm;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	99.08.02.23.46.50;	author jsm;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	99.08.09.21.34.38;	author jsm;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	99.09.13.21.38.23;	author jsm;	state Exp;
branches;
next	;


desc
@@


1.41
log
@test suite update - gdb.base/[h-m]

Convert files gdb.base/[h-m]*.exp to use standard_output_file et al.

	* hook-stop-continue.exp, hook-stop-frame.exp, huge.exp,
	included.exp, inferior-died.exp, infnan.exp, info-fun.exp,
	info-macros.exp, info-os.exp, info-proc.exp, info-target.exp,
	infoline.exp, interp.exp, interrupt.exp, jit-simple.exp,
	jit-so.exp, jump.exp, kill-after-signal.exp, label.exp, langs.exp,
	lineinc.exp, list.exp, logical.exp, long_long.exp, longjmp.exp,
	macscp.exp, maint.exp, memattr.exp, mips_pro.exp, miscexprs.exp,
	morestack.exp, moribund-step.exp, multi-forks.exp: Use
	standard_testfile, standard_output_file, prepare_for_testing,
	clean_restart.
@
text
@# This testcase is part of GDB, the GNU debugger.

# Copyright 1997-2013 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.  */

# long_long.exp   Test printing of 64-bit things in 32-bit gdb.
#                 Also test differnet kinds of formats.
#
if [target_info exists no_long_long] {
    return 0
}

standard_testfile .c

# What compiler are we using?
#
if [get_compiler_info] {
    return -1
}

if {$hp_cc_compiler} {
    set flag "+e"
} else {
    set flag ""
}

if  { [gdb_compile "${srcdir}/${subdir}/${srcfile}" "${binfile}" executable [concat debug additional_flags=$flag nowarnings]] != "" } {
     untested long_long.exp
     return -1
}

# use this to debug:
#log_user 1

clean_restart ${binfile}

if { ![runto known_types] } then { 
   fail "run to known_types" 
   return 
}

# Detect the size of the target's basic types.

set sizeof_char [get_sizeof "char" 1]
set sizeof_short [get_sizeof "short" 2]
set sizeof_int [get_sizeof "int" 4]
set sizeof_long [get_sizeof "long" 4]
set sizeof_long_long [get_sizeof "long long" 8]
set sizeof_data_ptr [get_sizeof "void *" 4]
set sizeof_double [get_sizeof "double" 8]
set sizeof_long_double [get_sizeof "long double" 8]

# Tests to handle ISA/ABI variants

proc pat2 { n pats } {
    set i 0
    while { $n > 1 } {
	set n [expr $n / 2]
	incr i
    }
    return [lindex $pats $i]
}

proc gdb_test_xxx { test pat name } {
    if { $pat == "" } {
	setup_kfail gdb/1672 *-*-*
	gdb_test $test "xxx" $name
    } else {
	gdb_test $test $pat $name
    }
}

proc gdb_test_ptr { test args } {
    global sizeof_data_ptr

    gdb_test_xxx $test [pat2 $sizeof_data_ptr $args] $test
}

proc gdb_test_xptr { examine args } {
    global sizeof_data_ptr
    set x [pat2 $sizeof_data_ptr $args]
    # X is of the form { VARIABLE PATTERN }
    gdb_test_xxx "$examine [lindex $x 0]" [lindex $x 1] "$examine"
}

proc gdb_test_char { test args } {
    global sizeof_char
    gdb_test_xxx $test [pat2 $sizeof_char $args] $test
}

proc gdb_test_short { test args } {
    global sizeof_short
    gdb_test_xxx $test [pat2 $sizeof_short $args] $test
}

proc gdb_test_int { test args } {
    global sizeof_int
    gdb_test_xxx $test [pat2 $sizeof_int $args] $test
}

proc gdb_test_long { test args } {
    global sizeof_long
    gdb_test_xxx $test [pat2 $sizeof_long $args] $test
}

proc gdb_test_long_long { test args } {
    global sizeof_long_long
    gdb_test_xxx $test [pat2 $sizeof_long_long $args] $test
}

gdb_breakpoint [gdb_get_line_number "Stop here and look"]
gdb_continue_to_breakpoint "Stop here and look"

# Check the hack for long long prints.
#
gdb_test "p/x val.hex" "0x0*0" "hex print p/x"
gdb_test "p/x val.dec" "0xab54a98ceb1f0ad2" "decimal print p/x"
# see if 'p/<code>' is handled same as 'p /<code>'
#
gdb_test "p /x val.dec" "0xab54a98ceb1f0ad2" "default print val.dec"
gdb_test "p /x val.bin" "0x123456789abcdef" "default print val.bin"
gdb_test "p /x val.oct" "0xa72ee53977053977" "default print val.oct"
gdb_test "p val.hex" "= 0" "default print hex"

gdb_test "p/u val.dec" "12345678901234567890" "decimal print p/u"
gdb_test "p/t val.bin" "100100011010001010110011110001001101010111100110111101111" "binary print"
gdb_test "p/o val.oct" "01234567123456701234567" "octal print"
gdb_test "p /d val.bin" "81985529216486895" "print +ve long long"
gdb_test "p/d val.dec" "-6101065172474983726" "decimal print p/d"

# Try all the combinations to bump up coverage.
#
gdb_test "p/d val.oct" "-6399925985474168457"
gdb_test "p/u val.oct" "12046818088235383159"
gdb_test "p/o val.oct" ".*"
gdb_test "p/t val.oct" "1010011100101110111001010011100101110111000001010011100101110111"
gdb_test_ptr "p/a val.oct" "" "" "0x77053977" "0xa72ee53977053977"
gdb_test "p/c val.oct" "'w'"

if { $sizeof_double == 8 || $sizeof_long_double == 8 } {
    # ARM FPA floating point numbers are not strictly little endian or big
    # endian, but a hybrid.  They are in little endian format with the two
    # words swapped in big endian format.
    # EABI targets default to natural-endian VFP format.

    if { ([istarget "arm*-*-*"]) \
	 && !([istarget "*-*-*eabi*"] || \
	      [istarget "*-*-mingw32ce*"] || \
	      [istarget "*-*-openbsd*"] || \
	      [istarget "*-*-symbianelf"]) } then {
	# assume the long long represents a floating point double in ARM format
	gdb_test "p/f val.oct" "2.1386676354387559e\\+265"
    } else {
	# assume the long long represents a floating point double in little
	# endian format
	gdb_test "p/f val.oct" "-5.9822653797615723e-120"
    }
} else {
    gdb_test "p/f val.oct" "-2.42716126e-15"
}

gdb_test_char "p/x *(char *)c" "0x1"
gdb_test_char "p/d *(char *)c" "1"
gdb_test_char "p/u *(char *)c" "1"
gdb_test_char "p/o *(char *)c" "01"
gdb_test_char "p/t *(char *)c" "1"
gdb_test_char "p/a *(char *)c" "0x1( <.*>)?"
gdb_test_char "p/f *(char *)c" "1"
gdb_test_char "p/c *(char *)c" "1 '.001'"

gdb_test_short "p/x *(short *)s" "" "0x123" ""
gdb_test_short "p/d *(short *)s" "" "291" ""
gdb_test_short "p/u *(short *)s" "" "291" ""
gdb_test_short "p/o *(short *)s" "" "0443" ""
gdb_test_short "p/t *(short *)s" "" "100100011" ""
gdb_test_short "p/a *(short *)s" "" "0x123( <.*>)?" ""
gdb_test_short "p/f *(short *)s" "" "291" ""
gdb_test_short "p/c *(short *)s" "" "35 '.'" ""

gdb_test_int "p/x *(int *)i" "" "0x123" "0x1234567" ""
gdb_test_int "p/d *(int *)i" "" "291" "19088743" ""
gdb_test_int "p/u *(int *)i" "" "291" "19088743" ""
gdb_test_int "p/o *(int *)i" "" "0443" "0110642547" ""
gdb_test_int "p/t *(int *)i" "" "100100011" "1001000110100010101100111" ""
gdb_test_int "p/a *(int *)i" "" "" "0x1234567" ""
gdb_test_int "p/f *(int *)i" "" "291" "2.99881655e-0?38" ""
gdb_test_int "p/c *(int *)i" "" "35 '.'" "103 'g'" ""

gdb_test_long "p/x *(long *)l" "" "0x123" "0x1234567" "0x123456789abcdef"
gdb_test_long "p/d *(long *)l" "" "291" "19088743" "81985529216486895"
gdb_test_long "p/u *(long *)l" "" "291" "19088743" "81985529216486895"
gdb_test_long "p/o *(long *)l" "" "0443" "0110642547" "04432126361152746757"
gdb_test_long "p/t *(long *)l" "" "100100011" "1001000110100010101100111" "100100011010001010110011110001001101010111100110111101111"
gdb_test_ptr "p/a *(long *)l" "" "" "0x1234567" "0x123456789abcdef"
gdb_test_long "p/f *(long *)l" "" "291" "2.99881655e-0?38" "3.5127005640885037e-303"
gdb_test_long "p/c *(long *)l" "" "35 '.'" "103 'g'" "-17 '.*'"

gdb_test_long_long "p/x *(long long *)ll" "" "" "" "0x123456789abcdef"
gdb_test_long_long "p/d *(long long *)ll" "" "" "" "81985529216486895"
gdb_test_long_long "p/u *(long long *)ll" "" "" "" "81985529216486895"
gdb_test_long_long "p/o *(long long *)ll" "" "" "" "04432126361152746757"
gdb_test_long_long "p/t *(long long *)ll" "" "" "" "100100011010001010110011110001001101010111100110111101111"
gdb_test_ptr "p/a *(long long *)ll" "" "" "0x89abcdef" "0x123456789abcdef"
gdb_test_long_long "p/f *(long long *)ll" "" "" "" "3.5127005640885037e-303"
gdb_test_long_long "p/c *(long long *)ll" "" "" "" "-17 '.*'"

# Implict Word size (except for a, c, and f)

gdb_test "x/w w" ".*" "set examine size to w"
gdb_test "x/x w" "0x01234567"
gdb_test "x/d w" "19088743"
gdb_test "x/u w" "19088743"
gdb_test "x/o w" "0110642547"
gdb_test "x/t w" "00000001001000110100010101100111"
gdb_test_xptr "x/a" { b "" } { h "" } { w "0x1234567" } { g "0x123456789abcdef" }
gdb_test "x/c b" "1 '.001'"
if { $sizeof_double == 8 || $sizeof_long_double == 8 } {
    gdb_test "x/f &val.oct" "-5.9822653797615723e-120"
} else {
    gdb_test "x/f &val.oct" "-2.42716126e-15"
}

# Implict Giant size (except for a, c, and f)

gdb_test "x/g g" ".*" "set examine size to g"
gdb_test "x/2x g" "0x0123456789abcdef.*0xa72ee53977053977"
gdb_test "x/2d g" "81985529216486895.*-6399925985474168457"
gdb_test "x/2u g" "81985529216486895.*12046818088235383159"
gdb_test "x/2o g" "04432126361152746757.*01234567123456701234567"
gdb_test "x/2t g" "0000000100100011010001010110011110001001101010111100110111101111.*1010011100101110111001010011100101110111000001010011100101110111"
gdb_test_xptr "x/2a" { b "" } { h "" } { w "0x1234567.*0xa72ee539" } { g "0x123456789abcdef.*0xa72ee53977053977" }
gdb_test "x/2c b" "1 '.001'.*-89 '.\[0-9\]*'"
if { $sizeof_double == 8 || $sizeof_long_double == 8 } {
    gdb_test "x/2f &val.oct" "-5.9822653797615723e-120.*-5.9041889495880968e-100"
} else {
    gdb_test "x/2f &val.oct" "-2.42716126e-15"
}

# Explicit sizes, and two memory locations ...

gdb_test "x/2bx b" "0x01.*0xa7"
gdb_test "x/2bd b" "1.*-89"
gdb_test "x/2bu b" "1.*167"
gdb_test "x/2bo b" "01.*0247"
gdb_test "x/2bt b" "00000001.*10100111"
gdb_test_ptr "x/2ba b" "" "" "0x1.*0xffffffa7" "0x1.*0xffffffffffffffa7"
gdb_test "x/2bc b" "1 '.001'.*-89 '.\[0-9\]*'"
gdb_test "x/2bf b" "1.*-89"

gdb_test "x/2hx h" "0x0123.*0xa72e"
gdb_test "x/2hd h" "291.*-22738"
gdb_test "x/2hu h" "291.*42798"
gdb_test "x/2ho h" "0443.*0123456"
gdb_test "x/2ht h" "0000000100100011.*1010011100101110"
gdb_test_ptr "x/2ha h" "" ""  "0x123.*0xffffa72e" "0x123.*0xffffffffffffa72e"
gdb_test "x/2hc h" "35 '.'.*46 '.'"
gdb_test "x/2hf h" "291.*-22738"

gdb_test "x/2wx w" "0x01234567.*0xa72ee539"
gdb_test "x/2wd w" "19088743.*-1490098887"
gdb_test "x/2wu w" "19088743.*2804868409"
gdb_test "x/2wo w" "0110642547.*024713562471"
gdb_test "x/2wt w" "00000001001000110100010101100111.*10100111001011101110010100111001"
gdb_test_ptr "x/2wa w" "" ""  "0x1234567.*0xa72ee539" "0x1234567.*0xffffffffa72ee539"
gdb_test "x/2wc w" "103 'g'.*57 '9'"
gdb_test "x/2wf w" "2.99881655e-0?38.*-2.42716126e-0?15"

gdb_test "x/2gx g" "0x0123456789abcdef.*0xa72ee53977053977"
gdb_test "x/2gd g" "81985529216486895.*-6399925985474168457"
gdb_test "x/2gu g" "81985529216486895.*12046818088235383159"
gdb_test "x/2go g" "04432126361152746757.*01234567123456701234567"
gdb_test "x/2gt g" "0000000100100011010001010110011110001001101010111100110111101111.*1010011100101110111001010011100101110111000001010011100101110111"
gdb_test_ptr "x/2ga g" "" "" "0x89abcdef.*0x77053977" "0x123456789abcdef.*0xa72ee53977053977"
gdb_test "x/2gc g" "-17 '.\[0-9\]*'.*119 'w'"
gdb_test "x/2gf g" "3.5127005640885037e-303.*-5.9822653797615723e-120"

gdb_exit
return 0
@


1.40
log
@gdb/testsuite/gdb.base/long_long.exp: Fix ARM EABI target
 glob.

The current glob missed gnueabihf targets. Expand to catch these
cases and fix the test failure on those systems.

gdb/testsuite/ChangeLog:

2013-06-07  Will Newton  <will.newton@@linaro.org>

	* gdb.base/long_long.exp: Fix ARM EABI target glob.
@
text
@d25 1
a25 3
set testfile long_long
set srcfile ${testfile}.c
set binfile ${objdir}/${subdir}/${testfile}
d47 1
a47 4
gdb_exit
gdb_start
gdb_reinitialize_dir $srcdir/$subdir
gdb_load ${binfile}
@


1.39
log
@Update years in copyright notice for the GDB files.

Two modifications:
  1. The addition of 2013 to the copyright year range for every file;
  2. The use of a single year range, instead of potentially multiple
     year ranges, as approved by the FSF.
@
text
@d164 1
a164 1
	 && !([istarget "*-*-*eabi"] || \
@


1.38
log
@	* lib/gdb.exp (skip_altivec_tests, skip_vsx_tests)
	(build_executable): Update.
	(get_compiler_info): Remove 'binfile' argument.
	* gdb.ada/arrayidx.exp: Update.
	* gdb.ada/null_array.exp: Update.
	* gdb.arch/altivec-abi.exp: Update.
	* gdb.arch/altivec-regs.exp: Update.
	* gdb.arch/amd64-byte.exp: Update.
	* gdb.arch/amd64-dword.exp: Update.
	* gdb.arch/amd64-word.exp: Update.
	* gdb.arch/i386-avx.exp: Update.
	* gdb.arch/i386-byte.exp: Update.
	* gdb.arch/i386-sse.exp: Update.
	* gdb.arch/i386-word.exp: Update.
	* gdb.arch/ppc-dfp.exp: Update.
	* gdb.arch/ppc-fp.exp: Update.
	* gdb.arch/vsx-regs.exp: Update.
	* gdb.base/all-bin.exp: Update.
	* gdb.base/annota1.exp: Update.
	* gdb.base/async.exp: Update.
	* gdb.base/attach.exp: Update.
	* gdb.base/break-interp.exp: Update.
	* gdb.base/call-ar-st.exp: Update.
	* gdb.base/call-rt-st.exp: Update.
	* gdb.base/call-sc.exp: Update.
	* gdb.base/callfuncs.exp: Update.
	* gdb.base/catch-load.exp: Update.
	* gdb.base/completion.exp: Update.
	* gdb.base/complex.exp: Update.
	* gdb.base/condbreak.exp: Update.
	* gdb.base/consecutive.exp: Update.
	* gdb.base/constvars.exp: Update.
	* gdb.base/corefile.exp: Update.
	* gdb.base/eval-skip.exp: Update.
	* gdb.base/expand-psymtabs.exp: Update.
	* gdb.base/exprs.exp: Update.
	* gdb.base/fileio.exp: Update.
	* gdb.base/fixsection.exp: Update.
	* gdb.base/funcargs.exp: Update.
	* gdb.base/gdb11530.exp: Update.
	* gdb.base/gdb1555.exp: Update.
	* gdb.base/gnu-ifunc.exp: Update.
	* gdb.base/gnu_vector.exp: Update.
	* gdb.base/info-macros.exp: Update.
	* gdb.base/jit-simple.exp: Update.
	* gdb.base/jit-so.exp: Update.
	* gdb.base/jit.exp: Update.
	* gdb.base/langs.exp: Update.
	* gdb.base/list.exp: Update.
	* gdb.base/logical.exp: Update.
	* gdb.base/long_long.exp: Update.
	* gdb.base/longjmp.exp: Update.
	* gdb.base/macscp.exp: Update.
	* gdb.base/mips_pro.exp: Update.
	* gdb.base/miscexprs.exp: Update.
	* gdb.base/morestack.exp: Update.
	* gdb.base/nodebug.exp: Update.
	* gdb.base/opaque.exp: Update.
	* gdb.base/pc-fp.exp: Update.
	* gdb.base/pending.exp: Update.
	* gdb.base/permissions.exp: Update.
	* gdb.base/pointers.exp: Update.
	* gdb.base/prelink.exp: Update.
	* gdb.base/printcmds.exp: Update.
	* gdb.base/psymtab.exp: Update.
	* gdb.base/ptype.exp: Update.
	* gdb.base/relational.exp: Update.
	* gdb.base/scope.exp: Update.
	* gdb.base/setvar.exp: Update.
	* gdb.base/shlib-call.exp: Update.
	* gdb.base/shreloc.exp: Update.
	* gdb.base/signals.exp: Update.
	* gdb.base/sizeof.exp: Update.
	* gdb.base/so-impl-ld.exp: Update.
	* gdb.base/so-indr-cl.exp: Update.
	* gdb.base/solib-disc.exp: Update.
	* gdb.base/solib-display.exp: Update.
	* gdb.base/solib-nodir.exp: Update.
	* gdb.base/solib-overlap.exp: Update.
	* gdb.base/solib-symbol.exp: Update.
	* gdb.base/solib-weak.exp: Update.
	* gdb.base/solib.exp: Update.
	* gdb.base/store.exp: Update.
	* gdb.base/structs.exp: Update.
	* gdb.base/structs2.exp: Update.
	* gdb.base/type-opaque.exp: Update.
	* gdb.base/unload.exp: Update.
	* gdb.base/varargs.exp: Update.
	* gdb.base/volatile.exp: Update.
	* gdb.base/watch_thread_num.exp: Update.
	* gdb.base/watchpoint-solib.exp: Update.
	* gdb.base/watchpoint.exp: Update.
	* gdb.base/watchpoints.exp: Update.
	* gdb.base/whatis.exp: Update.
	* gdb.cell/arch.exp: Update.
	* gdb.cell/break.exp: Update.
	* gdb.cell/bt.exp: Update.
	* gdb.cell/core.exp: Update.
	* gdb.cell/data.exp: Update.
	* gdb.cell/ea-cache.exp: Update.
	* gdb.cell/f-regs.exp: Update.
	* gdb.cell/fork.exp: Update.
	* gdb.cell/gcore.exp: Update.
	* gdb.cell/mem-access.exp: Update.
	* gdb.cell/ptype.exp: Update.
	* gdb.cell/registers.exp: Update.
	* gdb.cell/sizeof.exp: Update.
	* gdb.cell/solib-symbol.exp: Update.
	* gdb.cell/solib.exp: Update.
	* gdb.cp/ambiguous.exp: Update.
	* gdb.cp/breakpoint.exp: Update.
	* gdb.cp/bs15503.exp: Update.
	* gdb.cp/casts.exp: Update.
	* gdb.cp/class2.exp: Update.
	* gdb.cp/cpexprs.exp: Update.
	* gdb.cp/cplusfuncs.exp: Update.
	* gdb.cp/ctti.exp: Update.
	* gdb.cp/dispcxx.exp: Update.
	* gdb.cp/gdb1355.exp: Update.
	* gdb.cp/gdb2384.exp: Update.
	* gdb.cp/gdb2495.exp: Update.
	* gdb.cp/infcall-dlopen.exp: Update.
	* gdb.cp/local.exp: Update.
	* gdb.cp/m-data.exp: Update.
	* gdb.cp/m-static.exp: Update.
	* gdb.cp/mb-ctor.exp: Update.
	* gdb.cp/mb-inline.exp: Update.
	* gdb.cp/mb-templates.exp: Update.
	* gdb.cp/member-ptr.exp: Update.
	* gdb.cp/method.exp: Update.
	* gdb.cp/namespace.exp: Update.
	* gdb.cp/nextoverthrow.exp: Update.
	* gdb.cp/nsdecl.exp: Update.
	* gdb.cp/nsrecurs.exp: Update.
	* gdb.cp/nsstress.exp: Update.
	* gdb.cp/nsusing.exp: Update.
	* gdb.cp/pr-1023.exp: Update.
	* gdb.cp/pr-1210.exp: Update.
	* gdb.cp/pr-574.exp: Update.
	* gdb.cp/pr9631.exp: Update.
	* gdb.cp/printmethod.exp: Update.
	* gdb.cp/psmang.exp: Update.
	* gdb.cp/re-set-overloaded.exp: Update.
	* gdb.cp/rtti.exp: Update.
	* gdb.cp/shadow.exp: Update.
	* gdb.cp/templates.exp: Update.
	* gdb.cp/try_catch.exp: Update.
	* gdb.dwarf2/dw2-ranges.exp: Update.
	* gdb.dwarf2/pr10770.exp: Update.
	* gdb.fortran/library-module.exp: Update.
	* gdb.hp/gdb.aCC/optimize.exp: Update.
	* gdb.hp/gdb.aCC/watch-cmd.exp: Update.
	* gdb.hp/gdb.base-hp/callfwmall.exp: Update.
	* gdb.hp/gdb.base-hp/hwwatchbus.exp: Update.
	* gdb.hp/gdb.base-hp/pxdb.exp: Update.
	* gdb.hp/gdb.base-hp/sized-enum.exp: Update.
	* gdb.hp/gdb.base-hp/so-thresh.exp: Update.
	* gdb.hp/gdb.compat/xdb1.exp: Update.
	* gdb.hp/gdb.compat/xdb2.exp: Update.
	* gdb.hp/gdb.compat/xdb3.exp: Update.
	* gdb.hp/gdb.defects/bs14602.exp: Update.
	* gdb.hp/gdb.defects/solib-d.exp: Update.
	* gdb.hp/gdb.objdbg/objdbg01.exp: Update.
	* gdb.hp/gdb.objdbg/objdbg02.exp: Update.
	* gdb.hp/gdb.objdbg/objdbg03.exp: Update.
	* gdb.hp/gdb.objdbg/objdbg04.exp: Update.
	* gdb.mi/gdb792.exp: Update.
	* gdb.mi/mi-pending.exp: Update.
	* gdb.mi/mi-solib.exp: Update.
	* gdb.mi/mi-var-cp.exp: Update.
	* gdb.opt/clobbered-registers-O2.exp: Update.
	* gdb.opt/inline-bt.exp: Update.
	* gdb.opt/inline-cmds.exp: Update.
	* gdb.opt/inline-locals.exp: Update.
	* gdb.python/py-events.exp: Update.
	* gdb.python/py-finish-breakpoint.exp: Update.
	* gdb.python/py-type.exp: Update.
	* gdb.reverse/solib-precsave.exp: Update.
	* gdb.reverse/solib-reverse.exp: Update.
	* gdb.server/solib-list.exp: Update.
	* gdb.stabs/weird.exp: Update.
	* gdb.threads/attach-into-signal.exp: Update.
	* gdb.threads/attach-stopped.exp: Update.
	* gdb.threads/tls-shared.exp: Update.
	* gdb.trace/change-loc.exp: Update.
	* gdb.trace/strace.exp: Update.
@
text
@d3 1
a3 1
# Copyright 1997-2004, 2007-2012 Free Software Foundation, Inc.
@


1.37
log
@2012-01-16  Pedro Alves  <palves@@redhat.com>

	Remove all calls to strace.
@
text
@d31 1
a31 1
if [get_compiler_info ${binfile}] {
@


1.36
log
@Copyright year update in most files of the GDB Project.

gdb/ChangeLog:

        Copyright year update in most files of the GDB Project.
@
text
@a20 4
if $tracelevel then {
	strace $tracelevel
}

@


1.35
log
@gdb:
	* configure.host (xscale*): Don't handle target.
	* configure.tgt (thumb*-*-* | strongarm*-*-* | xscale-*-*): Don't
	handle targets.

gdb/gdbserver:
	* README: Don't mention xscale*-*-linux*.
	* configure.srv (xscale*-*-linux*): Don't handle target.

gdb/testsuite:
	* gdb.base/a2-run.exp (strongarm-*-coff): Don't handle target.
	* gdb.base/float.exp (xscale*-*-*, strongarm*-*-*): Don't handle
	targets.
	* gdb.base/long_long.exp (xscale*-*-*, strongarm*-*-*): Don't
	handle targets.

sim:
	* configure.tgt (thumb*-*-* | strongarm*-*-* | xscale-*-*): Don't
	handle targets.
	* configure: Regenerate.

sim/testsuite:
	* configure: Regenerate.
	* sim/arm/allinsn.exp (xscale*-*-*): Don't handle target.
	* sim/arm/misc.exp (thumb*-*-*, xscale*-*-*): Don't handle
	targets.
	* sim/arm/iwmmxt/iwmmxt.exp: Test for arm*-*-* instead of
	xscale*-*-*.
	* sim/arm/thumb/allthumb.exp (thumb*-*-*): Don't handle target.
	* sim/arm/xscale/xscale.exp: Test for arm*-*-* instead of
	xscale*-*-*.
@
text
@d3 1
a3 2
# Copyright 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2007, 2008, 2009,
# 2010, 2011 Free Software Foundation, Inc.
@


1.35.2.1
log
@Copyright year update in most files of the GDB Project.

gdb/ChangeLog:

        Copyright year update in most files of the GDB Project.
@
text
@d3 2
a4 1
# Copyright 1997-2004, 2007-2012 Free Software Foundation, Inc.
@


1.34
log
@run copyright.sh for 2011.
@
text
@d168 1
a168 3
    if { ([istarget "arm*-*-*"] || \
	  [istarget "xscale*-*-*"] || \
	  [istarget "strongarm*-*-*"]) \
@


1.33
log
@2010-06-08  Michael Snyder  <msnyder@@vmware.com>

	* gdb.ada/assign_1.exp: Use ".*" instead of "" as wildcard regexp.
	* gdb.ada/boolean_expr.exp:
	* gdb.ada/frame_args.exp: Ditto.
	* gdb.ada/lang_switch.exp: Ditto.
	* gdb.ada/ptype_arith_binop.exp: Ditto.
	* gdb.ada/ref_param.exp: Ditto.
	* gdb.ada/type_coercion.exp:Ditto.

	* gdb.asm/asm-source.exp: Ditto.

	* gdb.base/attach.exp: Ditto.
	* gdb.base/bitfields2.exp: Ditto.
	* gdb.base/call-signal-resume.exp: Ditto.
	* gdb.base/callfuncs.exp: Ditto.
	* gdb.base/commands.exp: Ditto.
	* gdb.base/dbx.exp: Ditto.
	* gdb.base/default.exp: Ditto.
	* gdb.base/dump.exp: Ditto.
	* gdb.base/exprs.exp: Ditto.
	* gdb.base/freebpcmd.exp: Ditto.
	* gdb.base/interrupt.exp: Ditto.
	* gdb.base/list.exp: Ditto.
	* gdb.base/long_long.exp: Ditto.
	* gdb.base/maint.exp: Ditto.
	* gdb.base/ptype.exp: Ditto.
	* gdb.base/return.exp: Ditto.
	* gdb.base/setshow.exp: Ditto.
	* gdb.base/sigbpt.exp: Ditto.
	* gdb.base/sigrepeat.exp: Ditto.

	* gdb.cp/classes.exp: Ditto.

	* gdb.dwarf2/dw2-restore.exp: Ditto.

	* gdb.gdb/selftest.exp: Ditto.

	* gdb.multi/base.exp: Ditto.
	* gdb.multi/bkpt-multi-exec.exp: Ditto.

	* gdb.python/py-block.exp: Ditto.
	* gdb.python/py-prettyprint.exp: Ditto.
	* gdb.python/py-template.exp: Ditto.

	* gdb.server/ext-attach.exp: Ditto.
	* gdb.server/ext-run.exp: Ditto.
	* gdb.server/server-mon.exp: Ditto.

	* gdb.threads/fork-thread-pending.exp: Ditto.
	* gdb.threads/hand-call-in-threads.exp: Ditto.
	* gdb.threads/interrupted-hand-call.exp: Ditto.
	* gdb.threads/linux-dp.exp: Ditto.
	* gdb.threads/manythreads.exp: Ditto.
	* gdb.threads/print-threads.exp: Ditto.
	* gdb.threads/pthreads.exp: Ditto.
	* gdb.threads/schedlock.exp: Ditto.
	* gdb.threads/thread-unwindonsignal.exp: Ditto.
	* gdb.threads/threadapply.exp: Ditto.
@
text
@d4 1
a4 1
# 2010 Free Software Foundation, Inc.
@


1.32
log
@	* gdb.arch/i386-prologue.exp (skip_breakpoint): Fix setup_kfail
	argument order.
	* gdb.base/macscp.exp: Fix setup_kfail argument order.
	* gdb.base/long_long.exp (gdb_test_xxx): Fix setup_kfail argument
	order.
	* gdb.base/sigbpt.exp (stepi_out): Fix setup_kfail argument
	order.
	* gdb.base/call-sc.exp (setup_kfails): Remove.
	(setup_compiler_kfails): Remove.
	* gdb.base/callfuncs.exp (do_function_calls): Fix setup_kfail
	argument order.
	* gdb.base/siginfo.exp: Fix setup_kfail argument order.
	* gdb.base/sigstep.exp (advance): Fix setup_kfail argument order.
	(advancei): Fix setup_kfail argument order.
	* gdb.base/radix.exp: Fix setup_kfail argument order.
	* gdb.base/solib-weak.exp (do_test): Fix setup_kfail argument
	order.
	* gdb.base/structs.exp (setup_kfails): Remove.
	(setup_compiler_kfails): Fix setup_kfail argument order.
	* gdb.base/sigaltstack.exp (finish_test): Fix setup_kfail argument
	order.
	* gdb.java/jmain.exp: Fix setup_kfail argument order.
	* gdb.pascal/types.exp (test_string_literal_types_accepted): Fix
	setup_kfail argument order.
	* gdb.cp/overload.exp: Fix setup_kfail argument order.
@
text
@d157 1
a157 1
gdb_test "p/o val.oct" ""
d233 1
a233 1
gdb_test "x/w w" "" "set examine size to w"
d249 1
a249 1
gdb_test "x/g g" "" "set examine size to g"
@


1.31
log
@2010-05-24  Michael Snyder  <msnyder@@vmware.com>

	* gdb.base/default.exp: Replace send_gdb with gdb_test.
	* gdb.base/define.exp: Replace send_gdb with gdb_test.
	* gdb.base/display.exp: Replace send_gdb with gdb_test.
	* gdb.base/dump.exp: Replace send_gdb with gdb_test.
	* gdb.base/ending-run.exp: Replace send_gdb with gdb_test.
	* gdb.base/eval-skip.exp: Replace send_gdb with gdb_test.
	* gdb.base/exprs.exp: Replace send_gdb with gdb_test.
	* gdb.base/fileio.exp: Replace send_gdb with gdb_test.
	* gdb.base/finish.exp: Replace send_gdb with gdb_test.
	* gdb.base/foll-fork.exp: Replace send_gdb with gdb_test.
	* gdb.base/funcargs.exp: Replace send_gdb with gdb_test.
	* gdb.base/gcore-buffer-overflow.exp: Replace send_gdb with gdb_test.
	* gdb.base/gcore.exp: Replace send_gdb with gdb_test.
	* gdb.base/gdb1090.exp: Replace send_gdb with gdb_test.
	* gdb.base/gdbvars.exp: Replace send_gdb with gdb_test.
	* gdb.base/help.exp: Replace send_gdb with gdb_test.
	* gdb.base/info-proc.exp: Replace send_gdb with gdb_test.
	* gdb.base/jump.exp: Replace send_gdb with gdb_test.
	* gdb.base/long_long.exp: Replace send_gdb with gdb_test.
@
text
@d88 1
a88 1
	setup_kfail *-*-* gdb/1672
@


1.30
log
@Update copyright year in most headers.

Automatic update by copyright.sh.
@
text
@a63 11
set target_bigendian_p 1
send_gdb "show endian\n"
gdb_expect {
    -re "little endian.*$gdb_prompt $" { set target_bigendian_p 0 }
    -re "big endian.*$gdb_prompt $" { }
    -re "$gdb_prompt $" {
	 fail "getting target endian"
    }
    default	{ fail "(timeout) getting target endian" }
}

a94 10
proc gdb_test_bi { test be le } {
    global target_bigendian_p

    if { $target_bigendian_p } {
	gdb_test_xxx $test $be $test
    } else {
	gdb_test_xxx $test $le $test
    }
}

@


1.29
log
@	* gdb.base/long_long.exp: Permit leading zeros on floating-point
	exponents.
	* gdb.base/pointers.exp: Likewise.
	* gdb.cp/ref-types.exp: Likewise.
@
text
@d3 2
a4 2
# Copyright 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2007, 2008, 2009
# Free Software Foundation, Inc.
@


1.28
log
@gdb
	* c-lang.c (convert_octal): Only allow 3 octal digits.
	(print_wchar): Prefer 3-digit octal form.  Fall back to hex if
	needed.
	* c-exp.y (c_parse_escape): Only allow 3 octal digits.
gdb/testsuite
	* gdb.base/call-rt-st.exp: Update for change to escape output.
	* gdb.base/callfuncs.exp: Likewise.
	* gdb.base/charset.exp: Likewise.
	* gdb.base/constvars.exp: Likewise.
	* gdb.base/long_long.exp: Likewise.
	* gdb.base/pointers.exp: Likewise.
	* gdb.base/printcmds.exp: Likewise.
	* gdb.base/setvar.exp: Likewise.
	* gdb.base/store.exp: Likewise.
	* gdb.cp/ref-types.exp: Likewise.
	* gdb.mi/mi-var-child.exp: Likewise.
	* gdb.mi/mi-var-display.exp: Likewise.
	* gdb.mi/mi2-var-display.exp: Likewise.
	* gdb.base/charset.exp: Test octal escape sequence length.
	Update for change to escape output.
@
text
@d231 1
a231 1
gdb_test_int "p/f *(int *)i" "" "291" "2.99881655e-38" ""
d240 1
a240 1
gdb_test_long "p/f *(long *)l" "" "291" "2.99881655e-38" "3.5127005640885037e-303"
d311 1
a311 1
gdb_test "x/2wf w" "2.99881655e-38.*-2.42716126e-15"
@


1.27
log
@	* gdb.base/long_long.exp: arm-mingw32ce defaults to natural-endian
	VFP format.
@
text
@d214 1
a214 1
gdb_test_char "p/c *(char *)c" "1 '.1'"
d261 1
a261 1
gdb_test "x/c b" "1 '.1'"
d277 1
a277 1
gdb_test "x/2c b" "1 '.1'.*-89 '.\[0-9\]*'"
d292 1
a292 1
gdb_test "x/2bc b" "1 '.1'.*-89 '.\[0-9\]*'"
@


1.26
log
@gdb:
2009-03-19  Tom Tromey  <tromey@@redhat.com>
	    Julian Brown  <julian@@codesourcery.com>

	PR i18n/7220, PR i18n/7821, PR exp/8815, PR exp/9103,
	PR i18n/9401, PR exp/9613:
	* NEWS: Update
	* value.h (value_typed_string): Declare.
	(val_print_string): Update.
	* valprint.h (print_char_chars): Update.
	* valprint.c (print_char_chars): Add type argument.  Update.
	(val_print_string): Likewise.
	* valops.c (value_typed_string): New function.
	* utils.c (host_char_to_target): New function.
	(parse_escape): Use host_char_to_target, host_hex_value.  Update.
	Remove '^' case.
	(no_control_char_error): Remove.
	* typeprint.c (print_type_scalar): Update.
	* scm-valprint.c (scm_scmval_print): Update.
	* scm-lang.h (scm_printchar, scm_printstr): Update.
	* scm-lang.c (scm_printchar): Add type argument.
	(scm_printstr): Likewise.
	* printcmd.c (print_formatted): Update.
	(print_scalar_formatted): Update.
	(printf_command) <wide_string_arg, wide_char_arg>: New constants.
	Handle '%lc' and '%ls'.
	* parser-defs.h (struct typed_stoken): New type.
	(struct stoken_vector): Likewise.
	(write_exp_string_vector): Declare.
	* parse.c (write_exp_string_vector): New function.
	* p-valprint.c (pascal_val_print): Update.
	* p-lang.h (is_pascal_string_type, pascal_printchar,
	pascal_printstr): Update.
	* p-lang.c (is_pascal_string_type): Remove 'char_size' argument.
	Add 'char_type' argument.
	(pascal_emit_char): Add type argument.
	(pascal_printchar): Likewise.
	(pascal_printstr): Likewise.
	* objc-lang.c (objc_emit_char): Add type argument.
	(objc_printchar): Likewise.
	(objc_printstr): Likewise.
	* macroexp.c (get_character_constant): Handle unicode characters.
	Use c_parse_escape.
	(get_string_literal): Handle unicode strings.  Use
	c_parse_escape.
	* m2-valprint.c (print_unpacked_pointer): Update.
	(m2_print_array_contents): Update.
	(m2_val_print): Update.
	* m2-lang.c (m2_emit_char): Add type argument.
	(m2_printchar): Likewise.
	(m2_printstr): Likewise.
	* language.h (struct language_defn) <la_printchar>: Add type
	argument.
	<la_printstr, la_emitchar>: Likewise.
	(LA_PRINT_CHAR): Likewise.
	(LA_PRINT_STRING): Likewise.
	(LA_EMIT_CHAR): Likewise.
	* language.c (unk_lang_emit_char): Add type argument.
	(unk_lang_printchar): Likewise.
	(unk_lang_printstr): Likewise.
	* jv-valprint.c (java_val_print): Update.
	* jv-lang.c (java_emit_char): Add type argument.
	* f-valprint.c (f_val_print): Update.
	* f-lang.c (f_emit_char): Add type argument.
	(f_printchar): Likewise.
	(f_printstr): Likewise.
	* expprint.c (print_subexp_standard): Update.
	* charset.h (target_wide_charset): Declare.
	(c_target_char_has_backslash_escape, c_parse_backslash,
	host_char_print_literally, host_char_to_target,
	target_char_to_host, target_char_to_control_char): Remove.
	(enum transliterations): New type.
	(convert_between_encodings): Declare.
	(HOST_ESCAPE_CHAR): New define.
	(host_letter_to_control_character, host_hex_value): Declare.
	(enum wchar_iterate_result): New enum.
	(struct wchar_iterator): Declare.
	(make_wchar_iterator, make_cleanup_wchar_iterator, wchar_iterator,
	wchar_push_back): Declare.
	* charset-list.h: New file.
	* c-valprint.c (textual_name): New function.
	(textual_element_type): Handle wide character types.
	(c_val_print): Pass original type to textual_element_type.  Handle
	wide character types.
	(c_value_print): Use textual_element_type.  Pass original type of
	value to val_print.
	* c-lang.h (enum c_string_type): New type.
	(c_printchar, c_printstr): Update.
	* c-lang.c (classify_type): New function.
	(print_wchar): Likewise.
	(c_emit_char): Add type argument.  Handle wide characters.
	(c_printchar): Likewise.
	(c_printstr): Add type argument.  Handle wide and multibyte
	character sets.
	(convert_ucn): New function.
	(emit_numeric_character): Likewise.
	(convert_octal): Likewise.
	(convert_hex): Likewise.
	(ADVANCE): New macro.
	(convert_escape): New function.
	(parse_one_string): Likewise.
	(evaluate_subexp_c): Likewise.
	(exp_descriptor_c): New global.
	(c_language_defn): Use exp_descriptor_c.
	(cplus_language_defn): Likewise.
	(asm_language_defn): Likewise.
	(minimal_language_defn): Likewise.
	(charset_for_string_type): New function.
	* c-exp.y (%union): Add 'svec' and 'tsval'.
	(CHAR): New token.
	(exp): Add CHAR production.
	(string_exp): Rewrite.
	(exp) <string_exp>: Rewrite.
	(tempbuf): Now global.
	(tempbuf_init): New global.
	(parse_string_or_char): New function.
	(yylex) <tempbuf>: Now global.
	<tokptr, tempbufindex, tempbufsize, token_string, class_prefix>:
	Remove.
	Handle 'u', 'U', and 'L' prefixes.  Call parse_string_or_char.
	(c_parse_escape): New function.
	* auxv.c (fprint_target_auxv): Update.
	* ada-valprint.c (ada_emit_char): Add type argument.
	(ada_printchar): Likewise.
	(ada_print_scalar): Update.
	(printstr): Add type argument.  Update calls to ada_emit_char.
	(ada_printstr): Add type argument.
	(ada_val_print_array): Update.
	(ada_val_print_1): Likewise.
	* ada-lang.c (emit_char): Add type argument.
	* ada-lang.h (ada_emit_char, ada_printchar, ada_printstr): Add
	type arguments.
	* gdb_locale.h: Include langinfo.h.
	* charset.c (_initialize_charset): Set default host charset from
	the locale.  Don't register charsets.  Add target-wide-charset
	commands.  Call find_charset_names.
	(struct charset, struct translation): Remove.
	(GDB_DEFAULT_HOST_CHARSET): Remove.
	(GDB_DEFAULT_TARGET_WIDE_CHARSET): New define.
	(target_wide_charset_name): New global.
	(show_host_charset_name): Handle "auto".
	(show_target_wide_charset_name): New function.
	(host_charset_enum, target_charset_enum): Remove.
	(charset_enum): New global.
	(all_charsets, register_charset, lookup_charset, all_translations,
	register_translation, lookup_translation): Remove.
	(simple_charset, ascii_print_literally, ascii_to_control): Remove.
	(iso_8859_print_literally, iso_8859_to_control,
	iso_8859_family_charset): Remove.
	(ebcdic_print_literally, ebcdic_to_control,
	ebcdic_family_charset): Remove.
	(struct cached_iconv, check_iconv_cache, cached_iconv_convert,
	register_iconv_charsets): Remove.
	(target_wide_charset_be_name, target_wide_charset_le_name): New
	globals.
	(identity_either_char_to_other): Remove.
	(set_be_le_names, validate): New functions.
	(backslashable, backslashed, represented): Remove.
	(default_c_target_char_has_backslash_escape): Remove.
	(default_c_parse_backslash, iconv_convert): Remove.
	(ascii_to_iso_8859_1_table, ascii_to_ebcdic_us_table,
	ascii_to_ibm1047_table, iso_8859_1_to_ascii_table,
	iso_8859_1_to_ebcdic_us_table, iso_8859_1_to_ibm1047_table,
	ebcdic_us_to_ascii_table, ebcdic_us_to_iso_8859_1_table,
	ebcdic_us_to_ibm1047_table, ibm1047_to_ascii_table,
	ibm1047_to_iso_8859_1_table, ibm1047_to_ebcdic_us_table): Remove.
	(table_convert_char, table_translation, simple_table_translation):
	Remove.
	(current_host_charset, current_target_charset,
	c_target_char_has_backslash_escape_func,
	c_target_char_has_backslash_escape_baton): Remove.
	(c_parse_backslash_func, c_parse_backslash_baton): Remove.
	(host_char_to_target_func, host_char_to_target_baton): Remove.
	(target_char_to_host_func, target_char_to_host_baton): Remove.
	(cached_iconv_host_to_target, cached_iconv_target_to_host):
	Remove.
	(lookup_charset_or_error, check_valid_host_charset): Remove.
	(set_host_and_target_charsets): Remove.
	(set_host_charset, set_target_charset): Remove.
	(set_host_charset_sfunc, set_target_charset_sfunc): Rewrite.
	(set_target_wide_charset_sfunc): New function.
	(show_charset): Print target wide character set.
	(host_charset, target_charset): Rewrite.
	(target_wide_charset): New function.
	(c_target_char_has_backslash_escape): Remove.
	(c_parse_backslash): Remove.
	(host_letter_to_control_character): New function.
	(host_char_print_literally): Remove.
	(host_hex_value): New function.
	(target_char_to_control_char): Remove.
	(cleanup_iconv): New function.
	(convert_between_encodings): New function.
	(target_char_to_host): Remove.
	(struct wchar_iterator): Define.
	(make_wchar_iterator, make_cleanup_wchar_iterator, wchar_iterator,
	wchar_push_back): New functions.
	(do_cleanup_iterator): New function.
	(char_ptr): New typedef.
	(charsets): New global.
	(add_one, find_charset_names): New functions.
	(default_charset_names): New global.
	(auto_host_charset_name): Likewise.
	* aclocal.m4, config.in, configure: Rebuild.
	* configure.ac: Call AM_LANGINFO_CODESET.
	(GDB_DEFAULT_HOST_CHARSET): Default to UTF-8.
	(AM_ICONV): Invoke earlier.
	* acinclude.m4: Include codeset.m4.  Subst LIBICONV_INCLUDE and
	LIBICONV_LIBDIR.  Check for libiconv in build tree.
	* Makefile.in (LIBICONV_LIBDIR, LIBICONV_INCLUDE): New macros.
	(INTERNAL_CFLAGS_BASE): Add LIBICONV_INCLUDE.
	(INTERNAL_LDFLAGS): Add LIBICONV_LIBDIR.
	* gdb_obstack.h (obstack_grow_wstr): New define.
        * gdb_wchar.h: New file.
        * defs.h: Include it.
gdb/testsuite:
	* gdb.base/store.exp: Update for change to escape output.
	* gdb.base/callfuncs.exp (fetch_all_registers): Update for change
	to escape output.
	* gdb.base/pointers.exp: Update for change to escape output.
	* gdb.base/long_long.exp (gdb_test_long_long): Update for change
	to escape output.
	* gdb.base/constvars.exp (do_constvar_tests): Update for change to
	escape output.
	* gdb.base/call-rt-st.exp (print_struct_call): Update for change
	to escape output.
	* gdb.cp/ref-types.exp (gdb_start_again): Update for change to
	escape output.
	* gdb.base/setvar.exp: Update for change to escape output.
	* lib/gdb.exp (default_gdb_start): Set LC_CTYPE to C.
	* gdb.base/printcmds.exp (test_print_all_chars): Update for change
	to escape output.
	(test_print_string_constants): Likewise.
	* gdb.base/charset.exp (valid_host_charset): Check size of
	wchar_t.  Handle UCS-2 and UCS-4.  Add tests for wide and unicode
	cases.  Handle "auto"-related output.
	* gdb.base/charset.c (char16_t, char32_t): New typedefs.
	(uvar, Uvar): New globals.
gdb/doc:
	* gdb.texinfo (Character Sets): Remove obsolete text.  Document
	set target-wide-charset.
	(Requirements): Mention iconv.
@
text
@d193 1
@


1.25
log
@	* gdb.base/remote.exp (get_sizeof): Remove.
	* gdb.base/long_long.exp (get_valueof, get_sizeof): Remove.
	* gdb.base/dfp-test.exp (get_valueof, get_sizeof): Remove.
	* gdb.base/sizeof.exp (get_valueof, get_sizeof): Remove.
	* lib/gdb.exp (get_valueof): Move from long_long.exp.
	(get_sizeof): Likewise.
@
text
@d213 1
a213 1
gdb_test_char "p/c *(char *)c" "1 '.001'"
d260 1
a260 1
gdb_test "x/c b" "1 '.001'"
d276 1
a276 1
gdb_test "x/2c b" "1 '.001'.*-89 '.'"
d291 1
a291 1
gdb_test "x/2bc b" "1 '.001'.*-89 '.'"
d318 1
a318 1
gdb_test "x/2gc g" "-17 '.'.*119 'w'"
@


1.24
log
@        Updated copyright notices for most files.
@
text
@a76 20
proc get_valueof { fmt exp default } {
    global gdb_prompt
    send_gdb "print${fmt} ${exp}\n"
    gdb_expect {
	-re "\\$\[0-9\]* = (\[-\]*\[0-9\]*).*$gdb_prompt $" {
	    set val $expect_out(1,string)
	    pass "get value of ${exp} ($val)"
	}
	timeout {
	    set size ${default}
	    fail "get value of ${exp} (timeout)"
	}
    }
    return ${val}
}

proc get_sizeof { type default } {
    return [get_valueof "/d" "sizeof (${type})" $default]
}

@


1.23
log
@	Updated copyright notices for most files.
@
text
@d3 1
a3 1
# Copyright 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2007, 2008
@


1.22
log
@        Switch the license of all .exp files to GPLv3.
        Switch the license of all .f and .f90 files to GPLv3.
        Switch the license of all .s and .S files to GPLv3.
@
text
@d3 1
a3 1
# Copyright 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2007
@


1.21
log
@	* gdb.base/long_long.exp: Accept optional symbol name in <...>
	for /a format output.
@
text
@d8 1
a8 1
# the Free Software Foundation; either version 2 of the License, or
d10 1
a10 1
# 
d15 1
a15 1
# 
d17 1
a17 2
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
@


1.20
log
@Copyright updates for 2007.
@
text
@d232 1
a232 1
gdb_test_char "p/a *(char *)c" "0x1"
d241 1
a241 1
gdb_test_short "p/a *(short *)s" "" "0x123" ""
@


1.19
log
@	* gdb.arch/altivec-abi.exp: Replace gdb_suppress_entire_file with
	untested followed by return combination.
	* gdb.arch/altivec-regs.exp: Likewise.
	* gdb.arch/e500-abi.exp: Likewise.
	* gdb.arch/e500-regs.exp: Likewise.
	* gdb.arch/gdb1291.exp: Likewise.
	* gdb.arch/gdb1431.exp: Likewise.
	* gdb.arch/gdb1558.exp: Likewise.
	* gdb.arch/i386-prologue.exp: Likewise.
	* gdb.arch/i386-unwind.exp: Likewise.
	* gdb.asm/asm-source.exp: Likewise.
	* gdb.base/a2-run.exp: Likewise.
	* gdb.base/advance.exp: Likewise.
	* gdb.base/all-bin.exp: Likewise.
	* gdb.base/annota1.exp: Likewise.
	* gdb.base/annota3.exp: Likewise.
	* gdb.base/args.exp: Likewise.
	* gdb.base/arithmet.exp: Likewise.
	* gdb.base/assign.exp: Likewise.
	* gdb.base/async.exp: Likewise.
	* gdb.base/attach.exp: Likewise.
	* gdb.base/bang.exp: Likewise.
	* gdb.base/bigcore.exp: Likewise.
	* gdb.base/bitfields.exp: Likewise.
	* gdb.base/bitfields2.exp: Likewise.
	* gdb.base/break.exp: Likewise.
	* gdb.base/call-sc.exp: Likewise.
	* gdb.base/call-strs.exp: Likewise.
	* gdb.base/callfuncs.exp: Likewise.
	* gdb.base/checkpoint.exp: Likewise.
	* gdb.base/chng-syms.exp: Likewise.
	* gdb.base/code-expr.exp: Likewise.
	* gdb.base/commands.exp: Likewise.
	* gdb.base/completion.exp: Likewise.
	* gdb.base/cond-expr.exp: Likewise.
	* gdb.base/condbreak.exp: Likewise.
	* gdb.base/consecutive.exp: Likewise.
	* gdb.base/constvars.exp: Likewise.
	* gdb.base/corefile.exp: Likewise.
	* gdb.base/cvexpr.exp: Likewise.
	* gdb.base/dbx.exp: Likewise.
	* gdb.base/define.exp: Likewise.
	* gdb.base/detach.exp: Likewise.
	* gdb.base/display.exp: Likewise.
	* gdb.base/dump.exp: Likewise.
	* gdb.base/ena-dis-br.exp: Likewise.
	* gdb.base/ending-run.exp: Likewise.
	* gdb.base/environ.exp: Likewise.
	* gdb.base/eval-skip.exp: Likewise.
	* gdb.base/exprs.exp: Likewise.
	* gdb.base/fileio.exp: Likewise.
	* gdb.base/finish.exp: Likewise.
	* gdb.base/float.exp: Likewise.
	* gdb.base/foll-exec.exp: Likewise.
	* gdb.base/foll-fork.exp: Likewise.
	* gdb.base/foll-vfork.exp: Likewise.
	* gdb.base/freebpcmd.exp: Likewise.
	* gdb.base/funcargs.exp: Likewise.
	* gdb.base/gcore.exp: Likewise.
	* gdb.base/gdb1090.exp: Likewise.
	* gdb.base/gdb1250.exp: Likewise.
	* gdb.base/huge.exp: Likewise.
	* gdb.base/info-proc.exp: Likewise.
	* gdb.base/interrupt.exp: Likewise.
	* gdb.base/jump.exp: Likewise.
	* gdb.base/langs.exp: Likewise.
	* gdb.base/lineinc.exp: Likewise.
	* gdb.base/list.exp: Likewise.
	* gdb.base/logical.exp: Likewise.
	* gdb.base/long_long.exp: Likewise.
	* gdb.base/macscp.exp: Likewise.
	* gdb.base/maint.exp: Likewise.
	* gdb.base/mips_pro.exp: Likewise.
	* gdb.base/miscexprs.exp: Likewise.
	* gdb.base/multi-forks.exp: Likewise.
	* gdb.base/opaque.exp: Likewise.
	* gdb.base/overlays.exp: Likewise.
	* gdb.base/pc-fp.exp: Likewise.
	* gdb.base/pointers.exp: Likewise.
	* gdb.base/printcmds.exp: Likewise.
	* gdb.base/psymtab.exp: Likewise.
	* gdb.base/ptype.exp: Likewise.
	* gdb.base/recurse.exp: Likewise.
	* gdb.base/relational.exp: Likewise.
	* gdb.base/relocate.exp: Likewise.
	* gdb.base/remote.exp: Likewise.
	* gdb.base/reread.exp: Likewise.
	* gdb.base/restore.exp: Likewise.
	* gdb.base/return.exp: Likewise.
	* gdb.base/return2.exp: Likewise.
	* gdb.base/scope.exp: Likewise.
	* gdb.base/sect-cmd.exp: Likewise.
	* gdb.base/sep.exp: Likewise.
	* gdb.base/sepdebug.exp: Likewise.
	* gdb.base/setshow.exp: Likewise.
	* gdb.base/setvar.exp: Likewise.
	* gdb.base/sigall.exp: Likewise.
	* gdb.base/sigbpt.exp: Likewise.
	* gdb.base/signals.exp: Likewise.
	* gdb.base/signull.exp: Likewise.
	* gdb.base/sizeof.exp: Likewise.
	* gdb.base/solib.exp: Likewise.
	* gdb.base/step-line.exp: Likewise.
	* gdb.base/step-test.exp: Likewise.
	* gdb.base/structs.exp: Likewise.
	* gdb.base/structs2.exp: Likewise.
	* gdb.base/term.exp: Likewise.
	* gdb.base/twice.exp: Likewise.
	* gdb.base/until.exp: Likewise.
	* gdb.base/varargs.exp: Likewise.
	* gdb.base/volatile.exp: Likewise.
	* gdb.base/watchpoint.exp: Likewise.
	* gdb.base/whatis-exp.exp: Likewise.
	* gdb.base/whatis.exp: Likewise.
	* gdb.cp/ambiguous.exp: Likewise.
	* gdb.cp/annota2.exp: Likewise.
	* gdb.cp/annota3.exp: Likewise.
	* gdb.cp/bool.exp: Likewise.
	* gdb.cp/breakpoint.exp: Likewise.
	* gdb.cp/casts.exp: Likewise.
	* gdb.cp/class2.exp: Likewise.
	* gdb.cp/classes.exp: Likewise.
	* gdb.cp/cplusfuncs.exp: Likewise.
	* gdb.cp/ctti.exp: Likewise.
	* gdb.cp/derivation.exp: Likewise.
	* gdb.cp/exception.exp: Likewise.
	* gdb.cp/gdb1355.exp: Likewise.
	* gdb.cp/hang.exp: Likewise.
	* gdb.cp/inherit.exp: Likewise.
	* gdb.cp/local.exp: Likewise.
	* gdb.cp/m-data.exp: Likewise.
	* gdb.cp/m-static.exp: Likewise.
	* gdb.cp/member-ptr.exp: Likewise.
	* gdb.cp/method.exp: Likewise.
	* gdb.cp/misc.exp: Likewise.
	* gdb.cp/namespace.exp: Likewise.
	* gdb.cp/overload.exp: Likewise.
	* gdb.cp/ovldbreak.exp: Likewise.
	* gdb.cp/pr-1023.exp: Likewise.
	* gdb.cp/pr-1210.exp: Likewise.
	* gdb.cp/pr-574.exp: Likewise.
	* gdb.cp/printmethod.exp: Likewise.
	* gdb.cp/psmang.exp: Likewise.
	* gdb.cp/ref-params.exp: Likewise.
	* gdb.cp/ref-types.exp: Likewise.
	* gdb.cp/rtti.exp: Likewise.
	* gdb.cp/templates.exp: Likewise.
	* gdb.cp/try_catch.exp: Likewise.
	* gdb.cp/userdef.exp: Likewise.
	* gdb.cp/virtfunc.exp: Likewise.
	* gdb.disasm/am33.exp: Likewise.
	* gdb.disasm/h8300s.exp: Likewise.
	* gdb.disasm/mn10300.exp: Likewise.
	* gdb.disasm/sh3.exp: Likewise.
	* gdb.disasm/t01_mov.exp: Likewise.
	* gdb.disasm/t02_mova.exp: Likewise.
	* gdb.disasm/t03_add.exp: Likewise.
	* gdb.disasm/t04_sub.exp: Likewise.
	* gdb.disasm/t05_cmp.exp: Likewise.
	* gdb.disasm/t06_ari2.exp: Likewise.
	* gdb.disasm/t07_ari3.exp: Likewise.
	* gdb.disasm/t08_or.exp: Likewise.
	* gdb.disasm/t09_xor.exp: Likewise.
	* gdb.disasm/t10_and.exp: Likewise.
	* gdb.disasm/t11_logs.exp: Likewise.
	* gdb.disasm/t12_bit.exp: Likewise.
	* gdb.disasm/t13_otr.exp: Likewise.
	* gdb.hp/gdb.aCC/optimize.exp: Likewise.
	* gdb.hp/gdb.aCC/watch-cmd.exp: Likewise.
	* gdb.hp/gdb.base-hp/callfwmall.exp: Likewise.
	* gdb.hp/gdb.base-hp/dollar.exp: Likewise.
	* gdb.hp/gdb.base-hp/hwwatchbus.exp: Likewise.
	* gdb.hp/gdb.base-hp/pxdb.exp: Likewise.
	* gdb.hp/gdb.base-hp/reg-pa64.exp: Likewise.
	* gdb.hp/gdb.base-hp/reg.exp: Likewise.
	* gdb.hp/gdb.base-hp/sized-enum.exp: Likewise.
	* gdb.hp/gdb.compat/xdb1.exp: Likewise.
	* gdb.hp/gdb.compat/xdb3.exp: Likewise.
	* gdb.hp/gdb.objdbg/objdbg01.exp: Likewise.
	* gdb.hp/gdb.objdbg/objdbg02.exp: Likewise.
	* gdb.hp/gdb.objdbg/objdbg03.exp: Likewise.
	* gdb.hp/gdb.objdbg/objdbg04.exp: Likewise.
	* gdb.mi/gdb701.exp: Likewise.
	* gdb.mi/gdb792.exp: Likewise.
	* gdb.mi/mi-basics.exp: Likewise.
	* gdb.mi/mi-break.exp: Likewise.
	* gdb.mi/mi-cli.exp: Likewise.
	* gdb.mi/mi-console.exp: Likewise.
	* gdb.mi/mi-disassemble.exp: Likewise.
	* gdb.mi/mi-eval.exp: Likewise.
	* gdb.mi/mi-file.exp: Likewise.
	* gdb.mi/mi-read-memory.exp: Likewise.
	* gdb.mi/mi-regs.exp: Likewise.
	* gdb.mi/mi-return.exp: Likewise.
	* gdb.mi/mi-simplerun.exp: Likewise.
	* gdb.mi/mi-stack.exp: Likewise.
	* gdb.mi/mi-stepi.exp: Likewise.
	* gdb.mi/mi-syn-frame.exp: Likewise.
	* gdb.mi/mi-until.exp: Likewise.
	* gdb.mi/mi-var-block.exp: Likewise.
	* gdb.mi/mi-var-child.exp: Likewise.
	* gdb.mi/mi-var-cmd.exp: Likewise.
	* gdb.mi/mi-var-display.exp: Likewise.
	* gdb.mi/mi-watch.exp: Likewise.
	* gdb.mi/mi2-basics.exp: Likewise.
	* gdb.mi/mi2-break.exp: Likewise.
	* gdb.mi/mi2-cli.exp: Likewise.
	* gdb.mi/mi2-console.exp: Likewise.
	* gdb.mi/mi2-disassemble.exp: Likewise.
	* gdb.mi/mi2-eval.exp: Likewise.
	* gdb.mi/mi2-file.exp: Likewise.
	* gdb.mi/mi2-read-memory.exp: Likewise.
	* gdb.mi/mi2-regs.exp: Likewise.
	* gdb.mi/mi2-return.exp: Likewise.
	* gdb.mi/mi2-simplerun.exp: Likewise.
	* gdb.mi/mi2-stack.exp: Likewise.
	* gdb.mi/mi2-stepi.exp: Likewise.
	* gdb.mi/mi2-syn-frame.exp: Likewise.
	* gdb.mi/mi2-until.exp: Likewise.
	* gdb.mi/mi2-var-block.exp: Likewise.
	* gdb.mi/mi2-var-child.exp: Likewise.
	* gdb.mi/mi2-var-cmd.exp: Likewise.
	* gdb.mi/mi2-var-display.exp: Likewise.
	* gdb.mi/mi2-watch.exp: Likewise.
	* gdb.stabs/exclfwd.exp: Likewise.
	* gdb.stabs/weird.exp: Likewise.
	* gdb.threads/gcore-thread.exp: Likewise.
	* gdb.trace/actions.exp: Likewise.
	* gdb.trace/backtrace.exp: Likewise.
	* gdb.trace/circ.exp: Likewise.
	* gdb.trace/collection.exp: Likewise.
	* gdb.trace/deltrace.exp: Likewise.
	* gdb.trace/infotrace.exp: Likewise.
	* gdb.trace/limits.exp: Likewise.
	* gdb.trace/packetlen.exp: Likewise.
	* gdb.trace/passc-dyn.exp: Likewise.
	* gdb.trace/passcount.exp: Likewise.
	* gdb.trace/report.exp: Likewise.
	* gdb.trace/save-trace.exp: Likewise.
	* gdb.trace/tfind.exp: Likewise.
	* gdb.trace/tracecmd.exp: Likewise.
	* gdb.trace/while-dyn.exp: Likewise.
	* gdb.trace/while-stepping.exp: Likewise.
@
text
@d3 2
a4 2
# Copyright 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004 Free
# Software Foundation, Inc.
@


1.18
log
@* gdb.base/long_long.exp (gdb_test_long_long): Exclude
*-*-openbsd* from targets for wich we expect ARM FPA floating
point format.
@
text
@d48 2
a49 1
     gdb_suppress_entire_file "Testcase compile failed, so all tests in this file will automatically fail."
@


1.17
log
@2006-03-07  Paul Brook  <paul@@codesourcery.com>

	* gdb.arch/altivec-abi.exp: Use nowarnings instead of
	additional_flags=-w.
	* gdb.arch/altivec-regs.exp: Ditto.
	* gdb.arch/e500-abi.exp: Ditto.
	* gdb.arch/e500-regs.exp: Ditto.
	* gdb.base/all-bin.exp: Ditto.
	* gdb.base/annota1.exp: Ditto.
	* gdb.base/annota3.exp: Ditto.
	* gdb.base/args.exp: Ditto.
	* gdb.base/arithmet.exp: Ditto.
	* gdb.base/assign.exp: Ditto.
	* gdb.base/async.exp: Ditto.
	* gdb.base/bang.exp: Ditto.
	* gdb.base/break.exp: Ditto.
	* gdb.base/call-rt-st.exp: Ditto.
	* gdb.base/completion.exp: Ditto.
	* gdb.base/cond-expr.exp: Ditto.
	* gdb.base/condbreak.exp: Ditto.
	* gdb.base/consecutive.exp: Ditto.
	* gdb.base/define.exp: Ditto.
	* gdb.base/display.exp: Ditto.
	* gdb.base/ena-dis-br.exp: Ditto.
	* gdb.base/environ.exp: Ditto.
	* gdb.base/eval-skip.exp: Ditto.
	* gdb.base/info-proc.exp: Ditto.
	* gdb.base/jump.exp: Ditto.
	* gdb.base/logical.exp: Ditto.
	* gdb.base/long_long.exp: Ditto.
	* gdb.base/maint.exp: Ditto.
	* gdb.base/miscexprs.exp: Ditto.
	* gdb.base/pc-fp.exp: Ditto.
	* gdb.base/pointers.exp: Ditto.
	* gdb.base/relational.exp: Ditto.
	* gdb.base/reread.exp: Ditto.
	* gdb.base/sect-cmd.exp: Ditto.
	* gdb.base/sep.exp: Ditto.
	* gdb.base/sepdebug.exp: Ditto.
	* gdb.base/until.exp: Ditto.
	* gdb.base/whatis-exp.exp: Ditto.
	* gdb.cp/annota2.exp: Ditto.
	* gdb.cp/annota3.exp: Ditto.
	* gdb.trace/actions.exp: Ditto.
	* gdb.trace/backtrace.exp: Ditto.
	* gdb.trace/circ.exp: Ditto.
	* gdb.trace/collection.exp: Ditto.
	* gdb.trace/deltrace.exp: Ditto.
	* gdb.trace/infotrace.exp: Ditto.
	* gdb.trace/limits.exp: Ditto.
	* gdb.trace/packetlen.exp: Ditto.
	* gdb.trace/passc-dyn.exp: Ditto.
	* gdb.trace/passcount.exp: Ditto.
	* gdb.trace/report.exp: Ditto.
	* gdb.trace/save-trace.exp: Ditto.
	* gdb.trace/tfind.exp: Ditto.
	* gdb.trace/tracecmd.exp: Ditto.
	* gdb.trace/while-dyn.exp: Ditto.
	* gdb.trace/while-stepping.exp: Ditto.
	* lib/gdb.exp: Ditto.
	(gdb_compile): Handle nowarning option.
@
text
@d210 5
a214 4
	    [istarget "xscale*-*-*"] || \
	    [istarget "strongarm*-*-*"]) \
	  && !([istarget "*-*-*eabi"] || \
		[istarget "*-*-symbianelf"]) } then {
@


1.17.8.1
log
@Changes from nickrob-async-20060828-mergepoint.
@
text
@d48 1
a48 2
     untested long_long.exp
     return -1
d210 4
a213 5
	  [istarget "xscale*-*-*"] || \
	  [istarget "strongarm*-*-*"]) \
	 && !([istarget "*-*-*eabi"] || \
	      [istarget "*-*-openbsd*"] || \
	      [istarget "*-*-symbianelf"]) } then {
@


1.16
log
@2005-09-26  Paul Brook  <paul@@codesourcery.com>

	* arm-tdep.c (arm_type_align): New function.
	(arm_push_dummy_call): Use it.  Ensure proper argument alignment.
	(arm_extract_struct_value_address): Remove.
	(arm_use_struct_convention): Rename...
	(arm_return_in_memory): ... To this.  Return nonzero for all small
	aggregates under the EABI.
	(arm_return_value): New function.
	(arm_gdbarch_init): Default for VFP float model for EABI binaries.
	Use set_gdbarch_return_value instead of obsolete functions.
	* testsuite/long_long.exp: Exclude eabi targets from arm FPA float
	format test.
@
text
@d47 1
a47 1
if  { [gdb_compile "${srcdir}/${subdir}/${srcfile}" "${binfile}" executable [concat debug "additional_flags=$flag -w"]] != "" } {
@


1.16.10.1
log
@2006-03-07  Paul Brook  <paul@@codesourcery.com>

	Backport from mainline.
	* gdb.arch/altivec-abi.exp: Use nowarnings instead of
	additional_flags=-w.
	* gdb.arch/altivec-regs.exp: Ditto.
	* gdb.arch/e500-abi.exp: Ditto.
	* gdb.arch/e500-regs.exp: Ditto.
	* gdb.base/all-bin.exp: Ditto.
	* gdb.base/annota1.exp: Ditto.
	* gdb.base/annota3.exp: Ditto.
	* gdb.base/args.exp: Ditto.
	* gdb.base/arithmet.exp: Ditto.
	* gdb.base/assign.exp: Ditto.
	* gdb.base/async.exp: Ditto.
	* gdb.base/bang.exp: Ditto.
	* gdb.base/break.exp: Ditto.
	* gdb.base/call-rt-st.exp: Ditto.
	* gdb.base/completion.exp: Ditto.
	* gdb.base/cond-expr.exp: Ditto.
	* gdb.base/condbreak.exp: Ditto.
	* gdb.base/consecutive.exp: Ditto.
	* gdb.base/define.exp: Ditto.
	* gdb.base/display.exp: Ditto.
	* gdb.base/ena-dis-br.exp: Ditto.
	* gdb.base/environ.exp: Ditto.
	* gdb.base/eval-skip.exp: Ditto.
	* gdb.base/info-proc.exp: Ditto.
	* gdb.base/jump.exp: Ditto.
	* gdb.base/logical.exp: Ditto.
	* gdb.base/long_long.exp: Ditto.
	* gdb.base/maint.exp: Ditto.
	* gdb.base/miscexprs.exp: Ditto.
	* gdb.base/pc-fp.exp: Ditto.
	* gdb.base/pointers.exp: Ditto.
	* gdb.base/relational.exp: Ditto.
	* gdb.base/reread.exp: Ditto.
	* gdb.base/sect-cmd.exp: Ditto.
	* gdb.base/sep.exp: Ditto.
	* gdb.base/sepdebug.exp: Ditto.
	* gdb.base/until.exp: Ditto.
	* gdb.base/whatis-exp.exp: Ditto.
	* gdb.cp/annota2.exp: Ditto.
	* gdb.cp/annota3.exp: Ditto.
	* gdb.trace/actions.exp: Ditto.
	* gdb.trace/backtrace.exp: Ditto.
	* gdb.trace/circ.exp: Ditto.
	* gdb.trace/collection.exp: Ditto.
	* gdb.trace/deltrace.exp: Ditto.
	* gdb.trace/infotrace.exp: Ditto.
	* gdb.trace/limits.exp: Ditto.
	* gdb.trace/packetlen.exp: Ditto.
	* gdb.trace/passc-dyn.exp: Ditto.
	* gdb.trace/passcount.exp: Ditto.
	* gdb.trace/report.exp: Ditto.
	* gdb.trace/save-trace.exp: Ditto.
	* gdb.trace/tfind.exp: Ditto.
	* gdb.trace/tracecmd.exp: Ditto.
	* gdb.trace/while-dyn.exp: Ditto.
	* gdb.trace/while-stepping.exp: Ditto.
	* lib/gdb.exp: Ditto.
	(gdb_compile): Handle nowarning option.
@
text
@d47 1
a47 1
if  { [gdb_compile "${srcdir}/${subdir}/${srcfile}" "${binfile}" executable [concat debug additional_flags=$flag nowarnings]] != "" } {
@


1.15
log
@2004-06-16  Andrew Cagney  <cagney@@gnu.org>

	* gdb.base/long_long.exp, gdb.base/long_long.c: Rewrite.
@
text
@d204 4
a207 3
    # ARM floating point numbers are not strictly little endian or big endian,
    # but a hybrid.  They are in little endian format with the two words
    # swapped in big endian format.
d209 1
a209 1
    if { [istarget "arm*-*-*"] || \
d211 3
a213 1
	    [istarget "strongarm*-*-*"] } then {
@


1.15.8.1
log
@	* gdb/configure.tgt: Add default OSABI setting for
	arm*-*-linux-gnueabi.
	* gdb/arm-tdep.c (arm_type_align): New function.
	(arm_push_dummy_call): Use it.  Ensure proper argument alignment.
	Don't try to align the stack.
	(arm_frame_align): New function.
	(arm_extract_struct_value_address): Remove.
	(arm_use_struct_convention): Rename...
	(arm_return_in_memory): ... To this.  Return nonzero for all small
	aggregates under the EABI.
	(arm_return_value): New function.
	(arm_elf_osabi_sniffer): Add EF_ARM_EABI_VER4 case.  Handle
	GDB_OSABI_ARM_EABI_V4_LINUX.
	(arm_gdbarch_init): Set different FPU and ABI defaults for EABI
	objects.  Use set_gdbarch_return_value instead of obsolete functions.
	Call set_gdbarch_frame_align.
	(arm_init_abi_eabi_v4): New function.
	(_initialize_arm_tdep): Register GDB_OSABI_ARM_EABI_V4.
	* gdb/arm-linux-tdep.c (ARM_LINUX_EABI_JB_PC): Define.
	(arm_linux_eabi_init_abi): New function.
	(_initialize_arm_linux_tdep): Register GDB_OSABI_ARM_EABI_V4_LINUX.
	* gdb/arm-tdep.h (enum arm_abi_variant): New.
	(struct gdbarch_tdep): Add abi field.
	* gdb/defs.h (enum gdb_osabi): Add GDB_OSABI_ARM_EABI_V4 and
	GDB_OSABI_ARM_EABI_V4_LINUX.
	* gdb/osabi.c (gdb_osabi_name): Add "ARM EABI v4" and
	"ARM EABI v4 GNU/Linux".

	* gdb/testsuite/gdb.base/long_long.exp: Don't expect FPA format for
	ARM EABI targets.
@
text
@d204 3
a206 4
    # ARM FPA floating point numbers are not strictly little endian or big
    # endian, but a hybrid.  They are in little endian format with the two
    # words swapped in big endian format.
    # EABI targets default to natural-endian VFP format
d208 1
a208 1
    if { ([istarget "arm*-*-*"] || \
d210 1
a210 3
	    [istarget "strongarm*-*-*"]) \
	  && !([istarget "*-*-*eabi"] || \
		[istarget "*-*-symbianelf"]) } then {
@


1.14
log
@2004-06-15  Michael Chastain  <mec.gnu@@mindspring.com>

	* gdb.base/long_long.exp: Remove reference to
	bug-gdb@@prep.ai.mit.edu.  Change line-number-specific breakpoint
	to gdb_breakpoint and gdb_continue_to_breakpoint.
@
text
@d1 4
a4 2
# Copyright 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004
# Free Software Foundation, Inc.
d67 3
a69 3
    -re ".*little endian.*$gdb_prompt $" { set target_bigendian_p 0 }
    -re ".*big endian.*$gdb_prompt $" { }
    -re ".*$gdb_prompt $" {
d75 41
a115 3
# Detect targets with 2-byte integers.  Yes, it's not general to assume
# that all others have 4-byte ints, but don't worry about it until one
# actually exists.
d117 23
a139 6
set sizeof_int 4
send_gdb "print sizeof(int)\n"
gdb_expect {
    -re ".* = 2.*$gdb_prompt $" { set sizeof_int 2 }
    -re ".*$gdb_prompt $" { }
    default { }
d142 5
a146 7
# Detect targets with 2-byte pointers.  Assume all others use 4-bytes.
set sizeof_ptr 4
send_gdb "print sizeof(void*)\n"
gdb_expect {
    -re ".* = 2.*$gdb_prompt $" { set sizeof_ptr 2 }
    -re ".*$gdb_prompt $" { }
    default { }
d149 4
a152 1
# Detect targets with 4-byte shorts.  Assume all others use 2-bytes.
d154 3
a156 6
set sizeof_short 2
send_gdb "print sizeof(short)\n"
gdb_expect {
    -re ".* = 4.*$gdb_prompt $" { set sizeof_short 4 }
    -re ".*$gdb_prompt $" { }
    default { }
d159 4
a162 1
# Detect targets with 4-byte doubles.
d164 3
a166 6
set sizeof_double 8
send_gdb "print sizeof(double)\n"
gdb_expect {
    -re ".* = 4.*$gdb_prompt $" { set sizeof_double 4 }
    -re ".*$gdb_prompt $" { }
    default { }
d169 3
a171 6
set sizeof_long_double 8
send_gdb "print sizeof(long double)\n"
gdb_expect {
    -re ".* = 4.*$gdb_prompt $" { set sizeof_long_double 4 }
    -re ".*$gdb_prompt $" { }
    default { }
d179 2
a180 2
gdb_test "p/x hex" ".*0x0*0.*" "hex print p/x"
gdb_test "p/x dec" ".*0xab54a98ceb1f0ad2.*" "decimal print p/x"
d183 10
a192 10
gdb_test "p /x dec" ".*0xab54a98ceb1f0ad2.*" "default print dec"
gdb_test "p /x bin" ".*0x0*123456789abcdef.*" "default print bin"
gdb_test "p /x oct" ".*0xa72ee53977053977.*" "default print oct"
gdb_test "p hex" ".*= 0*x*0*0.*" "default print hex"

gdb_test "p/u dec" ".*12345678901234567890.*" "decimal print p/u"
gdb_test "p/t bin" ".*0*100100011010001010110011110001001101010111100110111101111.*" "binary print"
gdb_test "p/o oct" ".*01234567123456701234567.*" "octal print"
gdb_test "p /d bin" ".*81985529216486895.*" "print +ve long long"
gdb_test "p/d dec" ".*-6101065172474983726.*" "decimal print p/d"
d196 6
a201 10
gdb_test "p/d oct" ".*-6399925985474168457.*"
gdb_test "p/u oct" ".*12046818088235383159.*"
gdb_test "p/o oct" ".*.*"
gdb_test "p/t oct" ".*1010011100101110111001010011100101110111000001010011100101110111.*"
if { $sizeof_ptr == 2 } {
  gdb_test "p/a oct" ".*0x.*3977.*"
} else {
  gdb_test "p/a oct" ".*0x.*77053977.*"
}
gdb_test "p/c oct" ".*'w'.*"
d212 1
a212 1
	gdb_test "p/f oct" ".*2.1386676354387559e\\+265.*"
d216 1
a216 1
	gdb_test "p/f oct" ".*-5.9822653797615723e-120.*"
d218 3
d222 57
d280 1
a280 3

    gdb_test "p/f oct" ".*-2.42716126e-15.*"

d283 1
a283 123
if { $target_bigendian_p } {

    if { $sizeof_int == 4 } {

	gdb_test "p/d *(int *)&oct" ".*-1490098887.*"
	gdb_test "p/u *(int *)&oct" ".*2804868409.*"
	gdb_test "p/o *(int *)&oct" ".*024713562471.*"
	gdb_test "p/t *(int *)&oct" ".*10100111001011101110010100111001.*"

	if { $sizeof_ptr == 2 } {
	    gdb_test "p/a *(int *)&oct" ".*0xe539.*"
	} else {
	    gdb_test "p/a *(int *)&oct" ".*0xf*a72ee539.*"
	}

	gdb_test "p/c *(int *)&oct" ".*57 '9'.*"
	gdb_test "p/f *(int *)&oct" ".*-2.42716126e-15.*"

    } else {

	gdb_test "p/d *(int *)&oct" ".*-22738.*"
	gdb_test "p/u *(int *)&oct" ".*42798.*"
	gdb_test "p/o *(int *)&oct" ".*0123456.*"
	gdb_test "p/t *(int *)&oct" ".*1010011100101110.*"

	if { $sizeof_ptr == 2 } {
	    gdb_test "p/a *(int *)&oct" ".*0xa72e.*"
	} else {
	    gdb_test "p/a *(int *)&oct" ".*0xffffa72e.*"
	}
	gdb_test "p/c *(int *)&oct" ".*46 '.'.*"
	gdb_test "p/f *(int *)&oct" ".*-22738.*"

    }

    if { $sizeof_short == 2 } {
	gdb_test "p/d *(short *)&oct" ".*-22738.*"
	gdb_test "p/u *(short *)&oct" ".*42798.*"
	gdb_test "p/o *(short *)&oct" ".*0123456.*"
	gdb_test "p/t *(short *)&oct" ".*1010011100101110.*"
	if { $sizeof_ptr == 2 } {
	    gdb_test "p/a *(short *)&oct" ".*0xa72e.*"
	} else {
	    gdb_test "p/a *(short *)&oct" ".*0xf*ffffa72e.*"
	}
	gdb_test "p/c *(short *)&oct" ".* 46 '.'.*"
	gdb_test "p/f *(short *)&oct" ".*-22738.*"
    } else {
	gdb_test "p/d *(short *)&oct" ".*-1490098887.*"
	gdb_test "p/u *(short *)&oct" ".*2804868409.*"
	gdb_test "p/o *(short *)&oct" ".*024713562471.*"
	gdb_test "p/t *(short *)&oct" ".*10100111001011101110010100111001.*"
	gdb_test "p/a *(short *)&oct" ".*0xf*a72ee539.*"
	gdb_test "p/c *(short *)&oct" ".* 57 '9'.*"
	gdb_test "p/f *(short *)&oct" ".*-2.42716126e-15.*"
    }

    gdb_test "x/x &oct" ".*0xa72ee539.*"
    gdb_test "x/d &oct" ".*.-1490098887*"
    gdb_test "x/u &oct" ".*2804868409.*"
    gdb_test "x/o &oct" ".*024713562471.*"
    gdb_test "x/t &oct" ".*10100111001011101110010100111001.*"
    if { $sizeof_ptr == 2 } {
	gdb_test "x/a &oct" ".*0xa72e.*"
    } else {
	gdb_test "x/a &oct" ".*0xa72ee539.*"
    }
    gdb_test "x/c &oct" ".*-89 .*"
    # FIXME GDB's output is correct, but this longer match fails.
    # gdb_test "x/c &oct" ".*-89 '\\\\247'.*"
    if { $sizeof_double == 8 || $sizeof_long_double == 8 } {
	gdb_test "x/f &oct" ".*-5.9822653797615723e-120.*"
    } else {
	gdb_test "x/f &oct" ".*-2.42716126e-15.*"
    }

    # FIXME Fill in the results for all the following tests.  (But be careful
    # about looking at locations with unspecified contents!)

    gdb_test "x/2x &oct" ".*0xa72ee53977053977.*"
    gdb_test "x/2d &oct" ".*-6399925985474168457.*"
    gdb_test "x/2u &oct" ".*.*"
    gdb_test "x/2o &oct" ".*.*"
    gdb_test "x/2t &oct" ".*.*"
    gdb_test "x/2a &oct" ".*.*"
    gdb_test "x/2c &oct" ".*.*"
    gdb_test "x/2f &oct" ".*.*"

    gdb_test "x/2bx &oct" ".*.*"
    gdb_test "x/2bd &oct" ".*.*"
    gdb_test "x/2bu &oct" ".*.*"
    gdb_test "x/2bo &oct" ".*.*"
    gdb_test "x/2bt &oct" ".*.*"
    gdb_test "x/2ba &oct" ".*.*"
    gdb_test "x/2bc &oct" ".*.*"
    gdb_test "x/2bf &oct" ".*.*"

    gdb_test "x/2hx &oct" ".*.*"
    gdb_test "x/2hd &oct" ".*.*"
    gdb_test "x/2hu &oct" ".*.*"
    gdb_test "x/2ho &oct" ".*.*"
    gdb_test "x/2ht &oct" ".*.*"
    gdb_test "x/2ha &oct" ".*.*"
    gdb_test "x/2hc &oct" ".*.*"
    gdb_test "x/2hf &oct" ".*.*"

    gdb_test "x/2wx &oct" ".*.*"
    gdb_test "x/2wd &oct" ".*.*"
    gdb_test "x/2wu &oct" ".*.*"
    gdb_test "x/2wo &oct" ".*.*"
    gdb_test "x/2wt &oct" ".*.*"
    gdb_test "x/2wa &oct" ".*.*"
    gdb_test "x/2wc &oct" ".*.*"
    gdb_test "x/2wf &oct" ".*.*"

    gdb_test "x/2gx &oct" ".*.*"
    gdb_test "x/2gd &oct" ".*.*"
    gdb_test "x/2gu &oct" ".*.*"
    gdb_test "x/2go &oct" ".*.*"
    gdb_test "x/2gt &oct" ".*.*"
    gdb_test "x/2ga &oct" ".*.*"
    gdb_test "x/2gc &oct" ".*.*"
    gdb_test "x/2gf &oct" ".*.*"
d285 10
d296 2
d299 1
a299 2
    # FIXME Add little-endian versions of these tests, or define a
    # gdb_test_bi with two strings to match on.
d301 35
a335 1
}
@


1.13
log
@2003-01-20  Elena Zannoni  <ezannoni@@redhat.com>

	* gdb.arch/altivec-abi.exp: Set variable 'srcfile' differently, to
	allow for different test tree configurations.  Update some
	tescases accordingly.
	* gdb.arch/altivec-regs.exp: Ditto.
	* gdb.asm/asm-source.exp: Ditto.
	* gdb.base/advance.exp: Ditto.
	* gdb.base/display.exp: Ditto.
	* gdb.base/long_long.exp: Ditto.
	* gdb.base/mips_pro.exp: Ditto.
	* gdb.base/overlays.exp: Ditto.
	* gdb.base/relocate.exp: Ditto.
	* gdb.base/setshow.exp: Ditto.
	* gdb.base/step-line.exp: Ditto.
	* gdb.base/step-test.exp: Ditto.
	* gdb.base/until.exp: Ditto.
	* gdb.c++/virtfunc.exp: Get rid of variable 'src'.
@
text
@d1 1
a1 1
# Copyright 1997, 1998, 1999, 2000, 2001, 2002, 2003
a17 4
# Please email any bugs, comments, and/or additions to this file to:
# bug-gdb@@prep.ai.mit.edu


d122 2
a123 1
gdb_test "n 4"   ".*38.*" "get to known place"
@


1.13.44.1
log
@Merge mainline to intercu branch - 2004-09-15
@
text
@d1 2
a2 4
# This testcase is part of GDB, the GNU debugger.

# Copyright 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004 Free
# Software Foundation, Inc.
d18 4
d69 3
a71 3
    -re "little endian.*$gdb_prompt $" { set target_bigendian_p 0 }
    -re "big endian.*$gdb_prompt $" { }
    -re "$gdb_prompt $" {
d77 3
a79 1
# Detect the size of the target's basic types.
d81 6
a86 14
proc get_valueof { fmt exp default } {
    global gdb_prompt
    send_gdb "print${fmt} ${exp}\n"
    gdb_expect {
	-re "\\$\[0-9\]* = (\[-\]*\[0-9\]*).*$gdb_prompt $" {
	    set val $expect_out(1,string)
	    pass "get value of ${exp} ($val)"
	}
	timeout {
	    set size ${default}
	    fail "get value of ${exp} (timeout)"
	}
    }
    return ${val}
d89 7
a95 2
proc get_sizeof { type default } {
    return [get_valueof "/d" "sizeof (${type})" $default]
d98 1
a98 8
set sizeof_char [get_sizeof "char" 1]
set sizeof_short [get_sizeof "short" 2]
set sizeof_int [get_sizeof "int" 4]
set sizeof_long [get_sizeof "long" 4]
set sizeof_long_long [get_sizeof "long long" 8]
set sizeof_data_ptr [get_sizeof "void *" 4]
set sizeof_double [get_sizeof "double" 8]
set sizeof_long_double [get_sizeof "long double" 8]
d100 6
a105 18
# Tests to handle ISA/ABI variants

proc pat2 { n pats } {
    set i 0
    while { $n > 1 } {
	set n [expr $n / 2]
	incr i
    }
    return [lindex $pats $i]
}

proc gdb_test_xxx { test pat name } {
    if { $pat == "" } {
	setup_kfail *-*-* gdb/1672
	gdb_test $test "xxx" $name
    } else {
	gdb_test $test $pat $name
    }
d108 1
a108 2
proc gdb_test_bi { test be le } {
    global target_bigendian_p
d110 6
a115 5
    if { $target_bigendian_p } {
	gdb_test_xxx $test $be $test
    } else {
	gdb_test_xxx $test $le $test
    }
d118 6
a123 36
proc gdb_test_ptr { test args } {
    global sizeof_data_ptr

    gdb_test_xxx $test [pat2 $sizeof_data_ptr $args] $test
}

proc gdb_test_xptr { examine args } {
    global sizeof_data_ptr
    set x [pat2 $sizeof_data_ptr $args]
    # X is of the form { VARIABLE PATTERN }
    gdb_test_xxx "$examine [lindex $x 0]" [lindex $x 1] "$examine"
}

proc gdb_test_char { test args } {
    global sizeof_char
    gdb_test_xxx $test [pat2 $sizeof_char $args] $test
}

proc gdb_test_short { test args } {
    global sizeof_short
    gdb_test_xxx $test [pat2 $sizeof_short $args] $test
}

proc gdb_test_int { test args } {
    global sizeof_int
    gdb_test_xxx $test [pat2 $sizeof_int $args] $test
}

proc gdb_test_long { test args } {
    global sizeof_long
    gdb_test_xxx $test [pat2 $sizeof_long $args] $test
}

proc gdb_test_long_long { test args } {
    global sizeof_long_long
    gdb_test_xxx $test [pat2 $sizeof_long_long $args] $test
d126 1
a126 2
gdb_breakpoint [gdb_get_line_number "Stop here and look"]
gdb_continue_to_breakpoint "Stop here and look"
d130 2
a131 2
gdb_test "p/x val.hex" "0x0*0" "hex print p/x"
gdb_test "p/x val.dec" "0xab54a98ceb1f0ad2" "decimal print p/x"
d134 10
a143 10
gdb_test "p /x val.dec" "0xab54a98ceb1f0ad2" "default print val.dec"
gdb_test "p /x val.bin" "0x123456789abcdef" "default print val.bin"
gdb_test "p /x val.oct" "0xa72ee53977053977" "default print val.oct"
gdb_test "p val.hex" "= 0" "default print hex"

gdb_test "p/u val.dec" "12345678901234567890" "decimal print p/u"
gdb_test "p/t val.bin" "100100011010001010110011110001001101010111100110111101111" "binary print"
gdb_test "p/o val.oct" "01234567123456701234567" "octal print"
gdb_test "p /d val.bin" "81985529216486895" "print +ve long long"
gdb_test "p/d val.dec" "-6101065172474983726" "decimal print p/d"
d147 10
a156 6
gdb_test "p/d val.oct" "-6399925985474168457"
gdb_test "p/u val.oct" "12046818088235383159"
gdb_test "p/o val.oct" ""
gdb_test "p/t val.oct" "1010011100101110111001010011100101110111000001010011100101110111"
gdb_test_ptr "p/a val.oct" "" "" "0x77053977" "0xa72ee53977053977"
gdb_test "p/c val.oct" "'w'"
d167 1
a167 1
	gdb_test "p/f val.oct" "2.1386676354387559e\\+265"
d171 1
a171 1
	gdb_test "p/f val.oct" "-5.9822653797615723e-120"
d173 1
d175 3
a177 1
    gdb_test "p/f val.oct" "-2.42716126e-15"
d180 78
a257 60
gdb_test_char "p/x *(char *)c" "0x1"
gdb_test_char "p/d *(char *)c" "1"
gdb_test_char "p/u *(char *)c" "1"
gdb_test_char "p/o *(char *)c" "01"
gdb_test_char "p/t *(char *)c" "1"
gdb_test_char "p/a *(char *)c" "0x1"
gdb_test_char "p/f *(char *)c" "1"
gdb_test_char "p/c *(char *)c" "1 '.001'"

gdb_test_short "p/x *(short *)s" "" "0x123" ""
gdb_test_short "p/d *(short *)s" "" "291" ""
gdb_test_short "p/u *(short *)s" "" "291" ""
gdb_test_short "p/o *(short *)s" "" "0443" ""
gdb_test_short "p/t *(short *)s" "" "100100011" ""
gdb_test_short "p/a *(short *)s" "" "0x123" ""
gdb_test_short "p/f *(short *)s" "" "291" ""
gdb_test_short "p/c *(short *)s" "" "35 '.'" ""

gdb_test_int "p/x *(int *)i" "" "0x123" "0x1234567" ""
gdb_test_int "p/d *(int *)i" "" "291" "19088743" ""
gdb_test_int "p/u *(int *)i" "" "291" "19088743" ""
gdb_test_int "p/o *(int *)i" "" "0443" "0110642547" ""
gdb_test_int "p/t *(int *)i" "" "100100011" "1001000110100010101100111" ""
gdb_test_int "p/a *(int *)i" "" "" "0x1234567" ""
gdb_test_int "p/f *(int *)i" "" "291" "2.99881655e-38" ""
gdb_test_int "p/c *(int *)i" "" "35 '.'" "103 'g'" ""

gdb_test_long "p/x *(long *)l" "" "0x123" "0x1234567" "0x123456789abcdef"
gdb_test_long "p/d *(long *)l" "" "291" "19088743" "81985529216486895"
gdb_test_long "p/u *(long *)l" "" "291" "19088743" "81985529216486895"
gdb_test_long "p/o *(long *)l" "" "0443" "0110642547" "04432126361152746757"
gdb_test_long "p/t *(long *)l" "" "100100011" "1001000110100010101100111" "100100011010001010110011110001001101010111100110111101111"
gdb_test_ptr "p/a *(long *)l" "" "" "0x1234567" "0x123456789abcdef"
gdb_test_long "p/f *(long *)l" "" "291" "2.99881655e-38" "3.5127005640885037e-303"
gdb_test_long "p/c *(long *)l" "" "35 '.'" "103 'g'" "-17 '.*'"

gdb_test_long_long "p/x *(long long *)ll" "" "" "" "0x123456789abcdef"
gdb_test_long_long "p/d *(long long *)ll" "" "" "" "81985529216486895"
gdb_test_long_long "p/u *(long long *)ll" "" "" "" "81985529216486895"
gdb_test_long_long "p/o *(long long *)ll" "" "" "" "04432126361152746757"
gdb_test_long_long "p/t *(long long *)ll" "" "" "" "100100011010001010110011110001001101010111100110111101111"
gdb_test_ptr "p/a *(long long *)ll" "" "" "0x89abcdef" "0x123456789abcdef"
gdb_test_long_long "p/f *(long long *)ll" "" "" "" "3.5127005640885037e-303"
gdb_test_long_long "p/c *(long long *)ll" "" "" "" "-17 '.*'"

# Implict Word size (except for a, c, and f)

gdb_test "x/w w" "" "set examine size to w"
gdb_test "x/x w" "0x01234567"
gdb_test "x/d w" "19088743"
gdb_test "x/u w" "19088743"
gdb_test "x/o w" "0110642547"
gdb_test "x/t w" "00000001001000110100010101100111"
gdb_test_xptr "x/a" { b "" } { h "" } { w "0x1234567" } { g "0x123456789abcdef" }
gdb_test "x/c b" "1 '.001'"
if { $sizeof_double == 8 || $sizeof_long_double == 8 } {
    gdb_test "x/f &val.oct" "-5.9822653797615723e-120"
} else {
    gdb_test "x/f &val.oct" "-2.42716126e-15"
}
d259 44
a302 1
# Implict Giant size (except for a, c, and f)
a303 10
gdb_test "x/g g" "" "set examine size to g"
gdb_test "x/2x g" "0x0123456789abcdef.*0xa72ee53977053977"
gdb_test "x/2d g" "81985529216486895.*-6399925985474168457"
gdb_test "x/2u g" "81985529216486895.*12046818088235383159"
gdb_test "x/2o g" "04432126361152746757.*01234567123456701234567"
gdb_test "x/2t g" "0000000100100011010001010110011110001001101010111100110111101111.*1010011100101110111001010011100101110111000001010011100101110111"
gdb_test_xptr "x/2a" { b "" } { h "" } { w "0x1234567.*0xa72ee539" } { g "0x123456789abcdef.*0xa72ee53977053977" }
gdb_test "x/2c b" "1 '.001'.*-89 '.'"
if { $sizeof_double == 8 || $sizeof_long_double == 8 } {
    gdb_test "x/2f &val.oct" "-5.9822653797615723e-120.*-5.9041889495880968e-100"
a304 2
    gdb_test "x/2f &val.oct" "-2.42716126e-15"
}
d306 2
a307 1
# Explicit sizes, and two memory locations ...
d309 1
a309 35
gdb_test "x/2bx b" "0x01.*0xa7"
gdb_test "x/2bd b" "1.*-89"
gdb_test "x/2bu b" "1.*167"
gdb_test "x/2bo b" "01.*0247"
gdb_test "x/2bt b" "00000001.*10100111"
gdb_test_ptr "x/2ba b" "" "" "0x1.*0xffffffa7" "0x1.*0xffffffffffffffa7"
gdb_test "x/2bc b" "1 '.001'.*-89 '.'"
gdb_test "x/2bf b" "1.*-89"

gdb_test "x/2hx h" "0x0123.*0xa72e"
gdb_test "x/2hd h" "291.*-22738"
gdb_test "x/2hu h" "291.*42798"
gdb_test "x/2ho h" "0443.*0123456"
gdb_test "x/2ht h" "0000000100100011.*1010011100101110"
gdb_test_ptr "x/2ha h" "" ""  "0x123.*0xffffa72e" "0x123.*0xffffffffffffa72e"
gdb_test "x/2hc h" "35 '.'.*46 '.'"
gdb_test "x/2hf h" "291.*-22738"

gdb_test "x/2wx w" "0x01234567.*0xa72ee539"
gdb_test "x/2wd w" "19088743.*-1490098887"
gdb_test "x/2wu w" "19088743.*2804868409"
gdb_test "x/2wo w" "0110642547.*024713562471"
gdb_test "x/2wt w" "00000001001000110100010101100111.*10100111001011101110010100111001"
gdb_test_ptr "x/2wa w" "" ""  "0x1234567.*0xa72ee539" "0x1234567.*0xffffffffa72ee539"
gdb_test "x/2wc w" "103 'g'.*57 '9'"
gdb_test "x/2wf w" "2.99881655e-38.*-2.42716126e-15"

gdb_test "x/2gx g" "0x0123456789abcdef.*0xa72ee53977053977"
gdb_test "x/2gd g" "81985529216486895.*-6399925985474168457"
gdb_test "x/2gu g" "81985529216486895.*12046818088235383159"
gdb_test "x/2go g" "04432126361152746757.*01234567123456701234567"
gdb_test "x/2gt g" "0000000100100011010001010110011110001001101010111100110111101111.*1010011100101110111001010011100101110111000001010011100101110111"
gdb_test_ptr "x/2ga g" "" "" "0x89abcdef.*0x77053977" "0x123456789abcdef.*0xa72ee53977053977"
gdb_test "x/2gc g" "-17 '.'.*119 'w'"
gdb_test "x/2gf g" "3.5127005640885037e-303.*-5.9822653797615723e-120"
@


1.12
log
@2002-06-06  Michael Snyder  <msnyder@@redhat.com>

	* gdb.base/long_long.exp: Add check for sizeof (long double).
@
text
@d1 2
a2 1
# Copyright 1997, 1998, 1999, 2000, 2001 Free Software Foundation, Inc.
d34 1
a34 1
set srcfile ${srcdir}/${subdir}/${testfile}.c
d49 1
a49 1
if  { [gdb_compile "${srcfile}" "${binfile}" executable [concat debug "additional_flags=$flag -w"]] != "" } {
@


1.12.10.1
log
@Merge drow-cplus-branch to:
  cvs rtag -D 2003-12-14 00:00:00 UTC drow-cplus-merge-20031214 gdb+dejagnu
@
text
@d1 1
a1 2
# Copyright 1997, 1998, 1999, 2000, 2001, 2002, 2003
# Free Software Foundation, Inc.
d33 1
a33 1
set srcfile ${testfile}.c
d48 1
a48 1
if  { [gdb_compile "${srcdir}/${subdir}/${srcfile}" "${binfile}" executable [concat debug "additional_flags=$flag -w"]] != "" } {
@


1.12.8.1
log
@2003-02-07  David Carlton  <carlton@@math.stanford.edu>

	* Merge with mainline; tag is carlton_dictionary-20030207-merge.
@
text
@d1 1
a1 2
# Copyright 1997, 1998, 1999, 2000, 2001, 2002, 2003
# Free Software Foundation, Inc.
d33 1
a33 1
set srcfile ${testfile}.c
d48 1
a48 1
if  { [gdb_compile "${srcdir}/${subdir}/${srcfile}" "${binfile}" executable [concat debug "additional_flags=$flag -w"]] != "" } {
@


1.11
log
@2002-05-10  Michael Snyder  <msnyder@@redhat.com>

	* gdb.base/long_long.exp: Fix typo.
@
text
@d117 8
d157 4
a160 5
if { $sizeof_double == 8 } {

# ARM floating point numbers are not strictly little endian or big endian,
# but a hybrid.  They are in little endian format with the two words
# swapped in big endian format.
d249 1
a249 1
    if { $sizeof_double == 8 } {
@


1.11.4.1
log
@Merge with mainline, kseitz_interps-20020619-merge.
@
text
@a116 8
set sizeof_long_double 8
send_gdb "print sizeof(long double)\n"
gdb_expect {
    -re ".* = 4.*$gdb_prompt $" { set sizeof_long_double 4 }
    -re ".*$gdb_prompt $" { }
    default { }
}

d149 5
a153 4
if { $sizeof_double == 8 || $sizeof_long_double == 8 } {
    # ARM floating point numbers are not strictly little endian or big endian,
    # but a hybrid.  They are in little endian format with the two words
    # swapped in big endian format.
d242 1
a242 1
    if { $sizeof_double == 8 || $sizeof_long_double == 8 } {
@


1.11.2.1
log
@merge from trunk
@
text
@a116 8
set sizeof_long_double 8
send_gdb "print sizeof(long double)\n"
gdb_expect {
    -re ".* = 4.*$gdb_prompt $" { set sizeof_long_double 4 }
    -re ".*$gdb_prompt $" { }
    default { }
}

d149 5
a153 4
if { $sizeof_double == 8 || $sizeof_long_double == 8 } {
    # ARM floating point numbers are not strictly little endian or big endian,
    # but a hybrid.  They are in little endian format with the two words
    # swapped in big endian format.
d242 1
a242 1
    if { $sizeof_double == 8 || $sizeof_long_double == 8 } {
@


1.10
log
@2002-05-09  Michael Snyder  <msnyder@@redhat.com>

	* gdb.base/long_long.exp: Add iftarget clause for strongarm.
@
text
@d156 1
a156 1
	    [istarget "xscale*-*-*"] \
@


1.9
log
@2002-05-08  Michael Snyder  <msnyder@@redhat.com>

	* gdb.base/long_long.exp: Merge clauses for arm and xscale.
	* gdb.base/default.exp: Merge clauses for arm, strongarm, xscale.
@
text
@d155 3
a157 1
    if { [istarget "arm*-*-*"] || [istarget "xscale*-*-*"] } then {
@


1.8
log
@2002-05-02  Michael Snyder  <msnyder@@redhat.com>

	* gdb.base/long_long.exp: Add xscale target.
	* gdb.base/default.exp: Add xscale target.
@
text
@d155 8
a162 17
  if [ istarget "arm*-*-*" ] then {

#   assume the long long represents a floating point double in ARM format
     gdb_test "p/f oct" ".*2.1386676354387559e\\+265.*"

  } elseif [ istarget "xscale*-*-*" ] then {

#   assume the long long represents a floating point double in ARM format
     gdb_test "p/f oct" ".*2.1386676354387559e\\+265.*"

  } else {

#   assume the long long represents a floating point double in little
#   endian format
    gdb_test "p/f oct" ".*-5.9822653797615723e-120.*"

  }
@


1.7
log
@	* gdb.base/long_long.exp: Detect size of pointer.  Take into
	account 2-byte pointers when testing for p/a results.
@
text
@d160 5
@


1.6
log
@2001-05-21  Michael Snyder  <msnyder@@redhat.com>

	* gdb.base/long_long.exp: Allow for targets with 4-byte short.
@
text
@d88 9
d142 5
a146 1
gdb_test "p/a oct" ".*0x.*77053977.*"
d182 7
a188 1
	gdb_test "p/a *(int *)&oct" ".*0xf*a72ee539.*"
d198 6
a203 1
	gdb_test "p/a *(int *)&oct" ".*0xffffa72e.*"
d214 5
a218 1
	gdb_test "p/a *(short *)&oct" ".*0xf*ffffa72e.*"
d236 5
a240 1
    gdb_test "x/a &oct" ".*0xa72ee539.*"
@


1.5
log
@2001-05-19  Michael Chastain  <chastain@@redhat.com>

	* gdb.base/callfuncs.exp: Make all test names unique.
	* gdb.base/commands.exp: Make all test names unique.
	* gdb.base/condbreak.exp: Make all test names unique.
	* gdb.base/dbx.exp: Make all test names unique.
	* gdb.base/default.exp: Make all test names unique.
	* gdb.base/define.exp: Make all test names unique.  Conform some FAIL
	and TIMEOUT messages to their corresponding PASS message.
	* gdb.base/ending-run.exp: Make all test names unique.
	* gdb.base/long_long.exp: Remove duplicate test.
@
text
@d88 10
d185 17
a201 7
    gdb_test "p/d *(short *)&oct" ".*-22738.*"
    gdb_test "p/u *(short *)&oct" ".*42798.*"
    gdb_test "p/o *(short *)&oct" ".*0123456.*"
    gdb_test "p/t *(short *)&oct" ".*1010011100101110.*"
    gdb_test "p/a *(short *)&oct" ".*0xf*ffffa72e.*"
    gdb_test "p/c *(short *)&oct" ".* 46 '.'.*"
    gdb_test "p/f *(short *)&oct" ".*-22738.*"
@


1.4
log
@	* gdb.base/annota1.exp: Move test of isnative to earlier in the
 	file -- to prevent failing when the compile fails but we have no
 	intention of running the tests anyway.

	* gdb.base/long_long.exp: Test target_info for no_long_long, skip
	tests if set.

	* gdb.base/maint.exp: Support 2 byte integers as well as 4 byte
 	integers.

	* gdb.c++/ctti.exp: Skip tests if skip_cplus_tests returns true.
	* gdb.c++/namespace.exp: Ditto.

Fix PR gdb/16.
@
text
@a180 1
    gdb_test "p/a *(short *)&oct" ".*0xf*ffffa72e.*"
@


1.3
log
@Update/correct copyright notices.
@
text
@d1 1
a1 1
# Copyright 1997, 1998, 1999, 2000 Free Software Foundation, Inc.
d26 4
@


1.2
log
@2000-02-25  Scott Bambrough <scottb@@netwinder.org>

	* gdb.base/long_long.exp: Correct test suite failure when printing
	a long long value as a double on ARM platforms.

ARM doubles use a hybrid endian format.  It is not strictly little or big
endian.  It is little endian with the words swapped.
@
text
@d1 1
a1 1
# Copyright (C) 1997, 1998, 1999, 2000 Free Software Foundation, Inc.
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# Copyright (C) 1997, 1998 Free Software Foundation, Inc.
d38 2
a39 8
if {$gcc_compiled == 0} {
    if [istarget "hppa*-hp-hpux*"] then {
	### FIXME +e only works with HP's compiler
	set additional_flags "additional_flags=+e -w"
    } else {
	# don't know what the compiler is, hope it supports long long!
	set additional_flags "additional_flags=-w"
    }
d41 1
a41 1
    set additional_flags "additional_flags=-w"
d44 2
a45 2
if  { [gdb_compile "${srcfile}" "${binfile}" executable [list debug $additional_flags]] != "" } {
    gdb_suppress_entire_file "Testcase compile failed, so all tests in this file will automatically fail."
d61 34
a94 1
gdb_test "n 4"   ".*34.*" "get to known place"
d98 11
a108 8
gdb_test "p/x hex" ".*0x0.*" "default print hex"
gdb_test "p/x dec" ".*0xab54a98ceb1f0ad2.*" "default print dec"
gdb_test "p/x bin" ".*0x123456789abcdef.*" "default print bin"
gdb_test "p/x oct" ".*0xa72ee53977053977.*" "default print oct"

gdb_test "p/x hex" ".*0x0.*" "hex print"
gdb_test "p/u dec" ".*12345678901234567890.*" "decimal print"
gdb_test "p/t bin" ".*100100011010001010110011110001001101010111100110111101111.*" "binary print"
d110 2
d115 134
a248 78
gdb_test "p/d oct" ".*12046818088235383159.*" ""
gdb_test "p/u oct" ".*0xa72ee53977053977.*" ""
gdb_test "p/o oct" ".*.*" ""
gdb_test "p/t oct" ".*1010011100101110111001010011100101110111000001010011100101110111.*" ""
gdb_test "p/a oct" ".*That operation is not available.*" ""
gdb_test "p/c oct" ".*0xa72ee53977053977.*" ""
gdb_test "p/f oct" ".*-5.9822653797615723e-120.*" ""

gdb_test "p/d *(int *)&oct" ".*-1490098887.*" ""
gdb_test "p/u *(int *)&oct" ".*2804868409.*" ""
gdb_test "p/o *(int *)&oct" ".*024713562471.*" ""
gdb_test "p/t *(int *)&oct" ".*10100111001011101110010100111001.*" ""
gdb_test "p/a *(int *)&oct" ".*0xa72ee539.*" ""
gdb_test "p/c *(int *)&oct" ".*57 '9'.*" ""
gdb_test "p/f *(int *)&oct" ".*-2.42716126e-15.*" ""

gdb_test "p/d *(short *)&oct" ".*-22738.*" ""
gdb_test "p/u *(short *)&oct" ".*42798.*" ""
gdb_test "p/o *(short *)&oct" ".*0123456.*" ""
gdb_test "p/t *(short *)&oct" ".*1010011100101110.*" ""
gdb_test "p/a *(short *)&oct" ".*0xffffa72e.*" ""
gdb_test "p/c *(short *)&oct" ".* 46 '.'.*" ""
gdb_test "p/a **short *)&oct" ".*0xffffa72e <.*" ""
gdb_test "p/f *(short *)&oct" ".*-22738.*" ""

gdb_test "x/x &oct" ".*0xa72ee539.*" ""
gdb_test "x/d &oct" ".*.-1490098887*" ""
gdb_test "x/u &oct" ".*2804868409.*" ""
gdb_test "x/o &oct" ".*024713562471.*" ""
gdb_test "x/t &oct" ".*10100111001011101110010100111001.*" ""
gdb_test "x/a &oct" ".*0xa72ee539 <.*" ""
gdb_test "x/c &oct" ".*-89 'M-''.*" ""
gdb_test "x/f &oct" ".*-5.9822653797615723e-120.*" ""

gdb_test "x/2x &oct" ".*.*" ""
gdb_test "x/2d &oct" ".*.*" ""
gdb_test "x/2u &oct" ".*.*" ""
gdb_test "x/2o &oct" ".*.*" ""
gdb_test "x/2t &oct" ".*.*" ""
gdb_test "x/2a &oct" ".*.*" ""
gdb_test "x/2c &oct" ".*.*" ""
gdb_test "x/2f &oct" ".*.*" ""

gdb_test "x/2bx &oct" ".*.*" ""
gdb_test "x/2bd &oct" ".*.*" ""
gdb_test "x/2bu &oct" ".*.*" ""
gdb_test "x/2bo &oct" ".*.*" ""
gdb_test "x/2bt &oct" ".*.*" ""
gdb_test "x/2ba &oct" ".*.*" ""
gdb_test "x/2bc &oct" ".*.*" ""
gdb_test "x/2bf &oct" ".*.*" ""

gdb_test "x/2hx &oct" ".*.*" ""
gdb_test "x/2hd &oct" ".*.*" ""
gdb_test "x/2hu &oct" ".*.*" ""
gdb_test "x/2ho &oct" ".*.*" ""
gdb_test "x/2ht &oct" ".*.*" ""
gdb_test "x/2ha &oct" ".*.*" ""
gdb_test "x/2hc &oct" ".*.*" ""
gdb_test "x/2hf &oct" ".*.*" ""

gdb_test "x/2wx &oct" ".*.*" ""
gdb_test "x/2wd &oct" ".*.*" ""
gdb_test "x/2wu &oct" ".*.*" ""
gdb_test "x/2wo &oct" ".*.*" ""
gdb_test "x/2wt &oct" ".*.*" ""
gdb_test "x/2wa &oct" ".*.*" ""
gdb_test "x/2wc &oct" ".*.*" ""
gdb_test "x/2wf &oct" ".*.*" ""

gdb_test "x/2gx &oct" ".*.*" ""
gdb_test "x/2gd &oct" ".*.*" ""
gdb_test "x/2gu &oct" ".*.*" ""
gdb_test "x/2go &oct" ".*.*" ""
gdb_test "x/2gt &oct" ".*.*" ""
gdb_test "x/2ga &oct" ".*.*" ""
gdb_test "x/2gc &oct" ".*.*" ""
gdb_test "x/2gf &oct" ".*.*" ""
@


1.1.1.1
log
@Initial creation of sourceware repository
@
text
@@


1.1.1.2
log
@import gdb-1999-06-28 snapshot
@
text
@d38 8
a45 2
if {$hp_cc_compiler} {
    set flag "+e"
d47 1
a47 1
    set flag ""
d50 2
a51 2
if  { [gdb_compile "${srcfile}" "${binfile}" executable [concat debug "additional_flags=$flag -w"]] != "" } {
     gdb_suppress_entire_file "Testcase compile failed, so all tests in this file will automatically fail."
d67 1
a67 1
gdb_test "n 4"   ".*38.*" "get to known place"
d71 8
a78 11
gdb_test "p/x hex" ".*0x0*0.*" "hex print p/x"
gdb_test "p/x dec" ".*0xab54a98ceb1f0ad2.*" "decimal print p/x"
# see if 'p/<code>' is handled same as 'p /<code>'
#
gdb_test "p /x dec" ".*0xab54a98ceb1f0ad2.*" "default print dec"
gdb_test "p /x bin" ".*0x0*123456789abcdef.*" "default print bin"
gdb_test "p /x oct" ".*0xa72ee53977053977.*" "default print oct"
gdb_test "p hex" ".*= 0*x*0*0.*" "default print hex"

gdb_test "p/u dec" ".*12345678901234567890.*" "decimal print p/u"
gdb_test "p/t bin" ".*0*100100011010001010110011110001001101010111100110111101111.*" "binary print"
a79 2
gdb_test "p /d bin" ".*81985529216486895.*" "print +ve long long"
gdb_test "p/d dec" ".*-6101065172474983726.*" "decimal print p/d"
d84 1
a84 1
gdb_test "p/u oct" ".*12046818088235383159.*" ""
d87 2
a88 2
gdb_test "p/a oct" ".*0x.*77053977.*" ""
gdb_test "p/c oct" ".*'w'.*" ""
d95 1
a95 1
gdb_test "p/a *(int *)&oct" ".*0xf*a72ee539.*" ""
d103 1
a103 1
gdb_test "p/a *(short *)&oct" ".*0xf*ffffa72e.*" ""
d105 1
a105 1
gdb_test "p/a *(short *)&oct" ".*0xf*ffffa72e.*" ""
d113 2
a114 2
gdb_test "x/a &oct" ".*0xa72ee539.*" ""
gdb_test "x/c &oct" ".*-89 '\\\\247'.*" ""
@


1.1.1.3
log
@import gdb-1999-08-02 snapshot
@
text
@d82 78
a159 78
gdb_test "p/d oct" ".*-6399925985474168457.*"
gdb_test "p/u oct" ".*12046818088235383159.*"
gdb_test "p/o oct" ".*.*"
gdb_test "p/t oct" ".*1010011100101110111001010011100101110111000001010011100101110111.*"
gdb_test "p/a oct" ".*0x.*77053977.*"
gdb_test "p/c oct" ".*'w'.*"
gdb_test "p/f oct" ".*-5.9822653797615723e-120.*"

gdb_test "p/d *(int *)&oct" ".*-1490098887.*"
gdb_test "p/u *(int *)&oct" ".*2804868409.*"
gdb_test "p/o *(int *)&oct" ".*024713562471.*"
gdb_test "p/t *(int *)&oct" ".*10100111001011101110010100111001.*"
gdb_test "p/a *(int *)&oct" ".*0xf*a72ee539.*"
gdb_test "p/c *(int *)&oct" ".*57 '9'.*"
gdb_test "p/f *(int *)&oct" ".*-2.42716126e-15.*"

gdb_test "p/d *(short *)&oct" ".*-22738.*"
gdb_test "p/u *(short *)&oct" ".*42798.*"
gdb_test "p/o *(short *)&oct" ".*0123456.*"
gdb_test "p/t *(short *)&oct" ".*1010011100101110.*"
gdb_test "p/a *(short *)&oct" ".*0xf*ffffa72e.*"
gdb_test "p/c *(short *)&oct" ".* 46 '.'.*"
gdb_test "p/a *(short *)&oct" ".*0xf*ffffa72e.*"
gdb_test "p/f *(short *)&oct" ".*-22738.*"

gdb_test "x/x &oct" ".*0xa72ee539.*"
gdb_test "x/d &oct" ".*.-1490098887*"
gdb_test "x/u &oct" ".*2804868409.*"
gdb_test "x/o &oct" ".*024713562471.*"
gdb_test "x/t &oct" ".*10100111001011101110010100111001.*"
gdb_test "x/a &oct" ".*0xa72ee539.*"
gdb_test "x/c &oct" ".*-89 '\\\\247'.*"
gdb_test "x/f &oct" ".*-5.9822653797615723e-120.*"

gdb_test "x/2x &oct" ".*.*"
gdb_test "x/2d &oct" ".*.*"
gdb_test "x/2u &oct" ".*.*"
gdb_test "x/2o &oct" ".*.*"
gdb_test "x/2t &oct" ".*.*"
gdb_test "x/2a &oct" ".*.*"
gdb_test "x/2c &oct" ".*.*"
gdb_test "x/2f &oct" ".*.*"

gdb_test "x/2bx &oct" ".*.*"
gdb_test "x/2bd &oct" ".*.*"
gdb_test "x/2bu &oct" ".*.*"
gdb_test "x/2bo &oct" ".*.*"
gdb_test "x/2bt &oct" ".*.*"
gdb_test "x/2ba &oct" ".*.*"
gdb_test "x/2bc &oct" ".*.*"
gdb_test "x/2bf &oct" ".*.*"

gdb_test "x/2hx &oct" ".*.*"
gdb_test "x/2hd &oct" ".*.*"
gdb_test "x/2hu &oct" ".*.*"
gdb_test "x/2ho &oct" ".*.*"
gdb_test "x/2ht &oct" ".*.*"
gdb_test "x/2ha &oct" ".*.*"
gdb_test "x/2hc &oct" ".*.*"
gdb_test "x/2hf &oct" ".*.*"

gdb_test "x/2wx &oct" ".*.*"
gdb_test "x/2wd &oct" ".*.*"
gdb_test "x/2wu &oct" ".*.*"
gdb_test "x/2wo &oct" ".*.*"
gdb_test "x/2wt &oct" ".*.*"
gdb_test "x/2wa &oct" ".*.*"
gdb_test "x/2wc &oct" ".*.*"
gdb_test "x/2wf &oct" ".*.*"

gdb_test "x/2gx &oct" ".*.*"
gdb_test "x/2gd &oct" ".*.*"
gdb_test "x/2gu &oct" ".*.*"
gdb_test "x/2go &oct" ".*.*"
gdb_test "x/2gt &oct" ".*.*"
gdb_test "x/2ga &oct" ".*.*"
gdb_test "x/2gc &oct" ".*.*"
gdb_test "x/2gf &oct" ".*.*"
@


1.1.1.4
log
@import gdb-1999-08-09 snapshot
@
text
@d1 1
a1 1
# Copyright (C) 1997, 1998, 1999 Free Software Foundation, Inc.
a60 11
set target_bigendian_p 1
send_gdb "show endian\n"
gdb_expect {
    -re ".*little endian.*$gdb_prompt $" { set target_bigendian_p 0 }
    -re ".*big endian.*$gdb_prompt $" { }
    -re ".*$gdb_prompt $" {
	 fail "getting target endian"
    }
    default	{ fail "(timeout) getting target endian" }
}

d90 70
a159 84
if { $target_bigendian_p } {

    gdb_test "p/d *(int *)&oct" ".*-1490098887.*"
    gdb_test "p/u *(int *)&oct" ".*2804868409.*"
    gdb_test "p/o *(int *)&oct" ".*024713562471.*"
    gdb_test "p/t *(int *)&oct" ".*10100111001011101110010100111001.*"
    gdb_test "p/a *(int *)&oct" ".*0xf*a72ee539.*"
    gdb_test "p/c *(int *)&oct" ".*57 '9'.*"
    gdb_test "p/f *(int *)&oct" ".*-2.42716126e-15.*"

    gdb_test "p/d *(short *)&oct" ".*-22738.*"
    gdb_test "p/u *(short *)&oct" ".*42798.*"
    gdb_test "p/o *(short *)&oct" ".*0123456.*"
    gdb_test "p/t *(short *)&oct" ".*1010011100101110.*"
    gdb_test "p/a *(short *)&oct" ".*0xf*ffffa72e.*"
    gdb_test "p/c *(short *)&oct" ".* 46 '.'.*"
    gdb_test "p/a *(short *)&oct" ".*0xf*ffffa72e.*"
    gdb_test "p/f *(short *)&oct" ".*-22738.*"

    gdb_test "x/x &oct" ".*0xa72ee539.*"
    gdb_test "x/d &oct" ".*.-1490098887*"
    gdb_test "x/u &oct" ".*2804868409.*"
    gdb_test "x/o &oct" ".*024713562471.*"
    gdb_test "x/t &oct" ".*10100111001011101110010100111001.*"
    gdb_test "x/a &oct" ".*0xa72ee539.*"
    gdb_test "x/c &oct" ".*-89 .*"
    # FIXME GDB's output is correct, but this longer match fails.
    # gdb_test "x/c &oct" ".*-89 '\\\\247'.*"
    gdb_test "x/f &oct" ".*-5.9822653797615723e-120.*"

    # FIXME Fill in the results for all the following tests.  (But be careful
    # about looking at locations with unspecified contents!)

    gdb_test "x/2x &oct" ".*0xa72ee53977053977.*"
    gdb_test "x/2d &oct" ".*-6399925985474168457.*"
    gdb_test "x/2u &oct" ".*.*"
    gdb_test "x/2o &oct" ".*.*"
    gdb_test "x/2t &oct" ".*.*"
    gdb_test "x/2a &oct" ".*.*"
    gdb_test "x/2c &oct" ".*.*"
    gdb_test "x/2f &oct" ".*.*"

    gdb_test "x/2bx &oct" ".*.*"
    gdb_test "x/2bd &oct" ".*.*"
    gdb_test "x/2bu &oct" ".*.*"
    gdb_test "x/2bo &oct" ".*.*"
    gdb_test "x/2bt &oct" ".*.*"
    gdb_test "x/2ba &oct" ".*.*"
    gdb_test "x/2bc &oct" ".*.*"
    gdb_test "x/2bf &oct" ".*.*"

    gdb_test "x/2hx &oct" ".*.*"
    gdb_test "x/2hd &oct" ".*.*"
    gdb_test "x/2hu &oct" ".*.*"
    gdb_test "x/2ho &oct" ".*.*"
    gdb_test "x/2ht &oct" ".*.*"
    gdb_test "x/2ha &oct" ".*.*"
    gdb_test "x/2hc &oct" ".*.*"
    gdb_test "x/2hf &oct" ".*.*"

    gdb_test "x/2wx &oct" ".*.*"
    gdb_test "x/2wd &oct" ".*.*"
    gdb_test "x/2wu &oct" ".*.*"
    gdb_test "x/2wo &oct" ".*.*"
    gdb_test "x/2wt &oct" ".*.*"
    gdb_test "x/2wa &oct" ".*.*"
    gdb_test "x/2wc &oct" ".*.*"
    gdb_test "x/2wf &oct" ".*.*"

    gdb_test "x/2gx &oct" ".*.*"
    gdb_test "x/2gd &oct" ".*.*"
    gdb_test "x/2gu &oct" ".*.*"
    gdb_test "x/2go &oct" ".*.*"
    gdb_test "x/2gt &oct" ".*.*"
    gdb_test "x/2ga &oct" ".*.*"
    gdb_test "x/2gc &oct" ".*.*"
    gdb_test "x/2gf &oct" ".*.*"

} else {

    # FIXME Add little-endian versions of these tests, or define a
    # gdb_test_bi with two strings to match on.

}
@


1.1.1.5
log
@import gdb-1999-09-13 snapshot
@
text
@a71 22
# Detect targets with 2-byte integers.  Yes, it's not general to assume
# that all others have 4-byte ints, but don't worry about it until one
# actually exists.

set sizeof_int 4
send_gdb "print sizeof(int)\n"
gdb_expect {
    -re ".* = 2.*$gdb_prompt $" { set sizeof_int 2 }
    -re ".*$gdb_prompt $" { }
    default { }
}

# Detect targets with 4-byte doubles.

set sizeof_double 8
send_gdb "print sizeof(double)\n"
gdb_expect {
    -re ".* = 4.*$gdb_prompt $" { set sizeof_double 4 }
    -re ".*$gdb_prompt $" { }
    default { }
}

d99 1
a99 9

if { $sizeof_double == 8 } {

    gdb_test "p/f oct" ".*-5.9822653797615723e-120.*"

} else {

    gdb_test "p/f oct" ".*-2.42716126e-15.*"
}
d103 7
a109 21
    if { $sizeof_int == 4 } {

	gdb_test "p/d *(int *)&oct" ".*-1490098887.*"
	gdb_test "p/u *(int *)&oct" ".*2804868409.*"
	gdb_test "p/o *(int *)&oct" ".*024713562471.*"
	gdb_test "p/t *(int *)&oct" ".*10100111001011101110010100111001.*"
	gdb_test "p/a *(int *)&oct" ".*0xf*a72ee539.*"
	gdb_test "p/c *(int *)&oct" ".*57 '9'.*"
	gdb_test "p/f *(int *)&oct" ".*-2.42716126e-15.*"

    } else {

	gdb_test "p/d *(int *)&oct" ".*-22738.*"
	gdb_test "p/u *(int *)&oct" ".*42798.*"
	gdb_test "p/o *(int *)&oct" ".*0123456.*"
	gdb_test "p/t *(int *)&oct" ".*1010011100101110.*"
	gdb_test "p/a *(int *)&oct" ".*0xffffa72e.*"
	gdb_test "p/c *(int *)&oct" ".*46 '.'.*"
	gdb_test "p/f *(int *)&oct" ".*-22738.*"

    }
d129 1
a129 5
    if { $sizeof_double == 8 } {
	gdb_test "x/f &oct" ".*-5.9822653797615723e-120.*"
    } else {
	gdb_test "x/f &oct" ".*-2.42716126e-15.*"
    }
@


