head	1.9;
access;
symbols
	gdb_7_6_1-2013-08-30-release:1.9
	gdb_7_6-2013-04-26-release:1.9
	gdb_7_6-branch:1.9.0.2
	gdb_7_6-2013-03-12-branchpoint:1.9
	gdb_7_5_1-2012-11-29-release:1.8
	gdb_7_5-2012-08-17-release:1.8
	gdb_7_5-branch:1.8.0.2
	gdb_7_5-2012-07-18-branchpoint:1.8
	gdb_7_4_1-2012-04-26-release:1.6.4.1
	gdb_7_4-2012-01-24-release:1.6.4.1
	gdb_7_4-branch:1.6.0.4
	gdb_7_4-2011-12-13-branchpoint:1.6
	gdb_7_3_1-2011-09-04-release:1.6
	gdb_7_3-2011-07-26-release:1.6
	gdb_7_3-branch:1.6.0.2
	gdb_7_3-2011-04-01-branchpoint:1.6
	gdb_7_2-2010-09-02-release:1.5
	gdb_7_2-branch:1.5.0.4
	gdb_7_2-2010-07-07-branchpoint:1.5
	gdb_7_1-2010-03-18-release:1.5
	gdb_7_1-branch:1.5.0.2
	gdb_7_1-2010-02-18-branchpoint:1.5
	gdb_7_0_1-2009-12-22-release:1.4
	gdb_7_0-2009-10-06-release:1.4
	gdb_7_0-branch:1.4.0.4
	gdb_7_0-2009-09-16-branchpoint:1.4
	arc-sim-20090309:1.3
	msnyder-checkpoint-072509-branch:1.4.0.2
	msnyder-checkpoint-072509-branchpoint:1.4
	arc-insight_6_8-branch:1.3.0.16
	arc-insight_6_8-branchpoint:1.3
	insight_6_8-branch:1.3.0.14
	insight_6_8-branchpoint:1.3
	reverse-20081226-branch:1.3.0.12
	reverse-20081226-branchpoint:1.3
	multiprocess-20081120-branch:1.3.0.10
	multiprocess-20081120-branchpoint:1.3
	reverse-20080930-branch:1.3.0.8
	reverse-20080930-branchpoint:1.3
	reverse-20080717-branch:1.3.0.6
	reverse-20080717-branchpoint:1.3
	msnyder-reverse-20080609-branch:1.3.0.4
	msnyder-reverse-20080609-branchpoint:1.3
	gdb_6_8-2008-03-27-release:1.3
	gdb_6_8-branch:1.3.0.2
	gdb_6_8-2008-02-26-branchpoint:1.3;
locks; strict;
comment	@# @;


1.9
date	2013.01.01.06.33.25;	author brobecke;	state Exp;
branches;
next	1.8;

1.8
date	2012.01.16.16.21.44;	author palves;	state Exp;
branches;
next	1.7;

1.7
date	2012.01.04.08.17.45;	author brobecke;	state Exp;
branches;
next	1.6;

1.6
date	2011.01.01.15.33.41;	author brobecke;	state Exp;
branches
	1.6.4.1;
next	1.5;

1.5
date	2010.01.01.07.32.00;	author brobecke;	state Exp;
branches;
next	1.4;

1.4
date	2009.01.03.05.58.03;	author brobecke;	state Exp;
branches;
next	1.3;

1.3
date	2008.01.07.22.34.49;	author bauermann;	state Exp;
branches;
next	1.2;

1.2
date	2008.01.01.22.53.18;	author drow;	state Exp;
branches;
next	1.1;

1.1
date	2007.10.25.18.09.45;	author bauermann;	state Exp;
branches;
next	;

1.6.4.1
date	2012.01.06.04.44.00;	author brobecke;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Update years in copyright notice for the GDB files.

Two modifications:
  1. The addition of 2013 to the copyright year range for every file;
  2. The use of a single year range, instead of potentially multiple
     year ranges, as approved by the FSF.
@
text
@# Copyright (C) 2007-2013 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# This file was written by Wu Zhou. (woodzltc@@cn.ibm.com)

# This file is part of the gdb testsuite.  It contains test for evaluating
# simple decimal floating point (DFP) expression.

proc test_dfp_literals_accepted {} {

    # Test various dfp values, covering 32-bit, 64-bit and 128-bit ones

    # _Decimal32 constants, which can support up to 7 digits
    gdb_test "p 1.2df" " = 1.2"
    gdb_test "p -1.2df" " = -1.2"
    gdb_test "p 1.234567df" " = 1.234567"
    gdb_test "p -1.234567df" " = -1.234567"
    gdb_test "p 1234567.df" " = 1234567"
    gdb_test "p -1234567.df" " = -1234567"

    gdb_test "p 1.2E1df" " = 12"
    gdb_test "p 1.2E10df" " = 1.2E\\+10"
    gdb_test "p 1.2E-10df" " = 1.2E-10"

    # The largest exponent for 32-bit dfp value is 96.
    gdb_test "p 1.2E96df" " = 1.200000E\\+96"

    # _Decimal64 constants, which can support up to 16 digits
    gdb_test "p 1.2dd" " = 1.2"
    gdb_test "p -1.2dd" " = -1.2"
    gdb_test "p 1.234567890123456dd" " = 1.234567890123456"
    gdb_test "p -1.234567890123456dd" " = -1.234567890123456"
    gdb_test "p 1234567890123456.dd" " = 1234567890123456"
    gdb_test "p -1234567890123456.dd" " = -1234567890123456"

    gdb_test "p 1.2E1dd" " = 12"
    gdb_test "p 1.2E10dd" " = 1.2E\\+10"
    gdb_test "p 1.2E-10dd" " = 1.2E-10"

    # The largest exponent for 64-bit dfp value is 384.
    gdb_test "p 1.2E384dd" " = 1.200000000000000E\\+384"

    # _Decimal128 constants, which can support up to 34 digits
    gdb_test "p 1.2dl" " = 1.2"
    gdb_test "p -1.2dl" " = -1.2"
    gdb_test "p 1.234567890123456789012345678901234dl" " = 1.234567890123456789012345678901234"
    gdb_test "p -1.234567890123456789012345678901234dl" " = -1.234567890123456789012345678901234"
    gdb_test "p 1234567890123456789012345678901234.dl" " = 1234567890123456789012345678901234"
    gdb_test "p -1234567890123456789012345678901234.dl" " = -1234567890123456789012345678901234"

    gdb_test "p 1.2E1dl" " = 12"
    gdb_test "p 1.2E10dl" " = 1.2E\\+10"
    gdb_test "p 1.2E-10dl" " = 1.2E-10"

    # The largest exponent for 128-bit dfp value is 6144.
    gdb_test "p 1.2E6144dl" " = 1.200000000000000000000000000000000E\\+6144"
}

proc test_dfp_arithmetic_expressions {} {

    # _Decimal32 operands.
    gdb_test "p 1.4df + 1.2df" " = 2.6"
    gdb_test "p 1.4df - 1.2df" " = 0.2"
    gdb_test "p 1.4df * 1.2df" " = 1.68"
    gdb_test "p 1.4df / 1.2df" " = 1.166667"

    # _Decimal64 operands.
    gdb_test "p 1.4dd + 1.2dd" " = 2.6"
    gdb_test "p 1.4dd - 1.2dd" " = 0.2"
    gdb_test "p 1.4dd * 1.2dd" " = 1.68"
    gdb_test "p 1.4dd / 1.2dd" " = 1.166666666666667"

    # _Decimal128 operands.
    gdb_test "p 1.4dl + 1.2dl" " = 2.6"
    gdb_test "p 1.4dl - 1.2dl" " = 0.2"
    gdb_test "p 1.4dl * 1.2dl" " = 1.68"
    gdb_test "p 1.4dl / 1.2dl" " = 1.166666666666666666666666666666667"

    # Test type of operation result.
    gdb_test "ptype 2.df + 2.df" "= _Decimal32"
    gdb_test "ptype 2.dd + 2.dd" "= _Decimal64"
    gdb_test "ptype 2.dl + 2.dl" "= _Decimal128"

    # Mixture of different _Decimal sizes.
    gdb_test "p 2.1df + 2.7dd" "= 4.8"
    gdb_test "p 2.1dd + 2.7df" "= 4.8"
    gdb_test "p 2.6df + 2.7dl" "= 5.3"
    gdb_test "p 2.6dl + 2.7df" "= 5.3"
    gdb_test "p 2.3dd + 2.2dl" "= 4.5"
    gdb_test "p 2.3dl + 2.2dd" "= 4.5"
    gdb_test "ptype 2.df + 2.dd" "= _Decimal64"
    gdb_test "ptype 2.df + 2.dl" "= _Decimal128"
    gdb_test "ptype 2.dd + 2.dl" "= _Decimal128"

    # Mixture of Decimal and integral operands
    gdb_test "p 1.2df + 1" " = 2.2"
    gdb_test "p 2 + 1.7dd" " = 3.7"
    gdb_test "p 3 + 2.1dl" " = 5.1"
    gdb_test "ptype 1.2df + 1" " = _Decimal32"
    gdb_test "ptype 2 + 1.7dd" " = _Decimal64"
    gdb_test "ptype 3 + 2.1dl" " = _Decimal128"

    # Reject operation with integral larger than 32-bits
    gdb_test "p 1.2df + 2ll" "Conversion of large integer to a decimal floating type is not supported."

    # Reject operation with DFP and Binary FP
    gdb_test "p 1.2df + 1.2f" "Mixing decimal floating types with other floating types is not allowed."

    # Test other operations with DFP operands
    gdb_test "p !0.df" " = 1"
    gdb_test "p !0.dd" " = 1"
    gdb_test "p !0.dl" " = 1"
    gdb_test "p !0.5df" " = 0"
    gdb_test "p !0.5dd" " = 0"
    gdb_test "p !0.5dl" " = 0"

    gdb_test "p 1.2df == 1.2df" " = 1"
    gdb_test "p 1.2df == 1.2dd" " = 1"
    gdb_test "p 1.2df == 1.2dl" " = 1"
    gdb_test "p 1.2dd == 1.2df" " = 1"
    gdb_test "p 1.2dd == 1.2dl" " = 1"
    gdb_test "p 1.2dl == 1.2df" " = 1"
    gdb_test "p 1.2dl == 1.2dd" " = 1"
    gdb_test "p 1.2df == 1.3df" " = 0"
    gdb_test "p 1.2df == 1.3dd" " = 0"
    gdb_test "p 1.2df == 1.3dl" " = 0"
    gdb_test "p 1.2dd == 1.3df" " = 0"
    gdb_test "p 1.2dd == 1.3dl" " = 0"
    gdb_test "p 1.2dl == 1.3df" " = 0"
    gdb_test "p 1.2dl == 1.3dd" " = 0"

    gdb_test "p +1.2df" " = 1.2"
    gdb_test "p +1.2dd" " = 1.2"
    gdb_test "p +1.2dl" " = 1.2"

    gdb_test "p 1.2df < 1.3df" " = 1"
    gdb_test "p 1.2df < 1.3dd" " = 1"
    gdb_test "p 1.2dl < 1.3df" " = 1"
    gdb_test "p 1.2dd < 1.3dd" " = 1"
    gdb_test "p 1.2dd < 1.3dl" " = 1"
    gdb_test "p 1.2dl < 1.3dl" " = 1"
    gdb_test "p 1.2dl < 1.3df" " = 1"
    gdb_test "p 1.2df > 1" " = 1"
    gdb_test "p 1.2dl > 2" " = 0"
    gdb_test "p 2 > 1.2dd" " = 1"
    gdb_test "p 2 > 3.1dl" " = 0"
}

proc test_dfp_conversions {} {
    # Test cast to and from DFP values, and between DFPs of different sizes

    gdb_test "p (float) -0.1df" " = -0.(0999.*|1000.*)"
    gdb_test "p (int) 8.3dd" " = 8"
    gdb_test "p (_Decimal64) 3.1" " = 3.(0999.*|1000.*)"
    gdb_test "p (_Decimal128) 3.7df" " = 3.7"
    gdb_test "p (_Decimal32) 4" " = 4"
}

# Start with a fresh gdb.

gdb_exit
gdb_start
gdb_reinitialize_dir $srcdir/$subdir

test_dfp_literals_accepted
test_dfp_arithmetic_expressions
test_dfp_conversions
@


1.8
log
@2012-01-16  Pedro Alves  <palves@@redhat.com>

	Remove all calls to strace.
@
text
@d1 1
a1 1
# Copyright (C) 2007-2012 Free Software Foundation, Inc.
@


1.7
log
@Copyright year update in most files of the GDB Project.

gdb/ChangeLog:

        Copyright year update in most files of the GDB Project.
@
text
@a20 4
if $tracelevel then {
	strace $tracelevel
}

@


1.6
log
@run copyright.sh for 2011.
@
text
@d1 1
a1 1
# Copyright (C) 2007, 2008, 2009, 2010, 2011 Free Software Foundation, Inc.
@


1.6.4.1
log
@Copyright year update in most files of the GDB Project.

gdb/ChangeLog:

        Copyright year update in most files of the GDB Project.
@
text
@d1 1
a1 1
# Copyright (C) 2007-2012 Free Software Foundation, Inc.
@


1.5
log
@Update copyright year in most headers.

Automatic update by copyright.sh.
@
text
@d1 1
a1 1
# Copyright (C) 2007, 2008, 2009, 2010 Free Software Foundation, Inc.
@


1.4
log
@        Updated copyright notices for most files.
@
text
@d1 1
a1 1
# Copyright (C) 2007, 2008, 2009 Free Software Foundation, Inc.
@


1.3
log
@	* gdb.base/dfp-exprs.exp (test_dfp_arithmetic_expressions): Add tests
	for expressions with decimal float values.
	(test_dfp_conversions): New function to test casts to and from
	decimal float types.
	Call test_dfp_conversions.
	* gdb.base/dfp-test.c (struct decstruct): Add float4 and double8
	elements.
	(main): Initialize ds.float4 and ds.double8 elements.
	* gdb.base/dfp-test.exp (d32_set_tests): Fix typo.  Adjust expect
	string to new error message.
	(d64_set_tests): Likewise.
	(d128_set_tests): Likewise.
	Add tests for expressions with decimal float variables.  Add tests for
	conversions to and from decimal float types.
@
text
@d1 1
a1 1
# Copyright (C) 2007, 2008 Free Software Foundation, Inc.
@


1.2
log
@	Updated copyright notices for most files.
@
text
@d77 5
a81 2
# Arithmetic operations for DFP types are not yet implemented in GDB.
# These tests are to verify that they will generate expected error messages.
d83 5
a87 4
   gdb_test "p 1.4df + 1.2df" "Argument to arithmetic operation not a number or boolean.*"
   gdb_test "p 1.4df - 1.2df" ".*Argument to arithmetic operation not a number or boolean.*"
   gdb_test "p 1.4df * 1.2df" "Argument to arithmetic operation not a number or boolean.*"
   gdb_test "p 1.4df / 1.2df" "Argument to arithmetic operation not a number or boolean.*"
d89 84
d183 1
@


1.1
log
@2007-10-15  Wu Zhou  <woodzltc@@cn.ibm.com>
	    Thiago Jung Bauermann  <bauerman@@br.ibm.com>

	* gdb.base/dfp-exprs.exp: new file adding tests for Decimal
	Floating Point expressions.
	* gdb.base/dfp-test.exp: new file adding tests for Decimal
	Floating Point variables.
	* gdb.base/dfp-test.c: new file containing program with Decimal
	Floating variables, used by gdb.base/dfp-test.exp.
@
text
@d1 1
a1 1
# Copyright (C) 2007 Free Software Foundation, Inc.
@

