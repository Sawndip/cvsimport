head	1.4;
access;
symbols
	gdb_7_6_1-2013-08-30-release:1.4
	gdb_7_6-2013-04-26-release:1.4
	gdb_7_6-branch:1.4.0.90
	gdb_7_6-2013-03-12-branchpoint:1.4
	gdb_7_5_1-2012-11-29-release:1.4
	gdb_7_5-2012-08-17-release:1.4
	gdb_7_5-branch:1.4.0.88
	gdb_7_5-2012-07-18-branchpoint:1.4
	gdb_7_4_1-2012-04-26-release:1.4
	gdb_7_4-2012-01-24-release:1.4
	gdb_7_4-branch:1.4.0.86
	gdb_7_4-2011-12-13-branchpoint:1.4
	gdb_7_3_1-2011-09-04-release:1.4
	gdb_7_3-2011-07-26-release:1.4
	gdb_7_3-branch:1.4.0.84
	gdb_7_3-2011-04-01-branchpoint:1.4
	gdb_7_2-2010-09-02-release:1.4
	gdb_7_2-branch:1.4.0.82
	gdb_7_2-2010-07-07-branchpoint:1.4
	gdb_7_1-2010-03-18-release:1.4
	gdb_7_1-branch:1.4.0.80
	gdb_7_1-2010-02-18-branchpoint:1.4
	gdb_7_0_1-2009-12-22-release:1.4
	gdb_7_0-2009-10-06-release:1.4
	gdb_7_0-branch:1.4.0.78
	gdb_7_0-2009-09-16-branchpoint:1.4
	arc-sim-20090309:1.4
	msnyder-checkpoint-072509-branch:1.4.0.76
	msnyder-checkpoint-072509-branchpoint:1.4
	arc-insight_6_8-branch:1.4.0.74
	arc-insight_6_8-branchpoint:1.4
	insight_6_8-branch:1.4.0.72
	insight_6_8-branchpoint:1.4
	reverse-20081226-branch:1.4.0.70
	reverse-20081226-branchpoint:1.4
	multiprocess-20081120-branch:1.4.0.68
	multiprocess-20081120-branchpoint:1.4
	reverse-20080930-branch:1.4.0.66
	reverse-20080930-branchpoint:1.4
	reverse-20080717-branch:1.4.0.64
	reverse-20080717-branchpoint:1.4
	msnyder-reverse-20080609-branch:1.4.0.62
	msnyder-reverse-20080609-branchpoint:1.4
	drow-reverse-20070409-branch:1.4.0.60
	drow-reverse-20070409-branchpoint:1.4
	gdb_6_8-2008-03-27-release:1.4
	gdb_6_8-branch:1.4.0.58
	gdb_6_8-2008-02-26-branchpoint:1.4
	gdb_6_7_1-2007-10-29-release:1.4
	gdb_6_7-2007-10-10-release:1.4
	gdb_6_7-branch:1.4.0.56
	gdb_6_7-2007-09-07-branchpoint:1.4
	insight_6_6-20070208-release:1.4
	gdb_6_6-2006-12-18-release:1.4
	gdb_6_6-branch:1.4.0.54
	gdb_6_6-2006-11-15-branchpoint:1.4
	insight_6_5-20061003-release:1.4
	gdb-csl-symbian-6_4_50_20060226-12:1.4
	gdb-csl-sourcerygxx-3_4_4-25:1.4
	nickrob-async-20060828-mergepoint:1.4
	gdb-csl-symbian-6_4_50_20060226-11:1.4
	gdb-csl-sourcerygxx-4_1-17:1.4
	gdb-csl-20060226-branch-local-2:1.4
	gdb-csl-sourcerygxx-4_1-14:1.4
	gdb-csl-sourcerygxx-4_1-13:1.4
	gdb-csl-sourcerygxx-4_1-12:1.4
	gdb-csl-sourcerygxx-3_4_4-21:1.4
	gdb_6_5-20060621-release:1.4
	gdb-csl-sourcerygxx-4_1-9:1.4
	gdb-csl-sourcerygxx-4_1-8:1.4
	gdb-csl-sourcerygxx-4_1-7:1.4
	gdb-csl-arm-2006q1-6:1.4
	gdb-csl-sourcerygxx-4_1-6:1.4
	gdb-csl-symbian-6_4_50_20060226-10:1.4
	gdb-csl-symbian-6_4_50_20060226-9:1.4
	gdb-csl-symbian-6_4_50_20060226-8:1.4
	gdb-csl-coldfire-4_1-11:1.4
	gdb-csl-sourcerygxx-3_4_4-19:1.4
	gdb-csl-coldfire-4_1-10:1.4
	gdb_6_5-branch:1.4.0.52
	gdb_6_5-2006-05-14-branchpoint:1.4
	gdb-csl-sourcerygxx-4_1-5:1.4
	nickrob-async-20060513-branch:1.4.0.50
	nickrob-async-20060513-branchpoint:1.4
	gdb-csl-sourcerygxx-4_1-4:1.4
	msnyder-reverse-20060502-branch:1.4.0.48
	msnyder-reverse-20060502-branchpoint:1.4
	gdb-csl-morpho-4_1-4:1.4
	gdb-csl-sourcerygxx-3_4_4-17:1.4
	readline_5_1-import-branch:1.4.0.46
	readline_5_1-import-branchpoint:1.4
	gdb-csl-20060226-branch-merge-to-csl-symbian-1:1.4
	gdb-csl-symbian-20060226-branch:1.4.0.44
	gdb-csl-symbian-20060226-branchpoint:1.4
	gdb-csl-20060226-branch-merge-to-csl-local-1:1.4
	msnyder-reverse-20060331-branch:1.4.0.42
	msnyder-reverse-20060331-branchpoint:1.4
	gdb-csl-available-20060303-branch:1.4.0.40
	gdb-csl-available-20060303-branchpoint:1.4
	gdb-csl-20060226-branch:1.4.0.38
	gdb-csl-20060226-branchpoint:1.4
	gdb_6_4-20051202-release:1.4
	msnyder-fork-checkpoint-branch:1.4.0.36
	msnyder-fork-checkpoint-branchpoint:1.4
	gdb-csl-gxxpro-6_3-branch:1.4.0.34
	gdb-csl-gxxpro-6_3-branchpoint:1.4
	gdb_6_4-branch:1.4.0.32
	gdb_6_4-2005-11-01-branchpoint:1.4
	gdb-csl-arm-20051020-branch:1.4.0.30
	gdb-csl-arm-20051020-branchpoint:1.4
	gdb-csl-arm-20050325-2005-q1b:1.4
	gdb-csl-arm-20050325-2005-q1a:1.4
	csl-arm-20050325-branch:1.4.0.28
	csl-arm-20050325-branchpoint:1.4
	gdb-post-i18n-errorwarning-20050211:1.4
	gdb-pre-i18n-errorwarning-20050211:1.4
	gdb_6_3-20041109-release:1.4
	gdb_6_3-branch:1.4.0.24
	gdb_6_3-20041019-branchpoint:1.4
	drow_intercu-merge-20040921:1.4
	drow_intercu-merge-20040915:1.4
	jimb-gdb_6_2-e500-branch:1.4.0.26
	jimb-gdb_6_2-e500-branchpoint:1.4
	gdb_6_2-20040730-release:1.4
	gdb_6_2-branch:1.4.0.22
	gdb_6_2-2004-07-10-gmt-branchpoint:1.4
	gdb_6_1_1-20040616-release:1.4
	gdb_6_1-2004-04-05-release:1.4
	drow_intercu-merge-20040402:1.4
	drow_intercu-merge-20040327:1.4
	ezannoni_pie-20040323-branch:1.4.0.20
	ezannoni_pie-20040323-branchpoint:1.4
	cagney_tramp-20040321-mergepoint:1.4
	cagney_tramp-20040309-branch:1.4.0.18
	cagney_tramp-20040309-branchpoint:1.4
	gdb_6_1-branch:1.4.0.16
	gdb_6_1-2004-03-01-gmt-branchpoint:1.4
	drow_intercu-20040221-branch:1.4.0.14
	drow_intercu-20040221-branchpoint:1.4
	cagney_bfdfile-20040213-branch:1.4.0.12
	cagney_bfdfile-20040213-branchpoint:1.4
	drow-cplus-merge-20040208:1.4
	carlton_dictionary-20040126-merge:1.4
	cagney_bigcore-20040122-branch:1.4.0.10
	cagney_bigcore-20040122-branchpoint:1.4
	drow-cplus-merge-20040113:1.4
	drow-cplus-merge-20031224:1.4
	drow-cplus-merge-20031220:1.4
	carlton_dictionary-20031215-merge:1.4
	drow-cplus-branch:1.4.0.8
	drow-cplus-merge-20031214:1.4
	carlton-dictionary-20031111-merge:1.4
	gdb_6_0-2003-10-04-release:1.3.2.1
	kettenis_sparc-20030918-branch:1.4.0.6
	kettenis_sparc-20030918-branchpoint:1.4
	carlton_dictionary-20030917-merge:1.4
	ezannoni_pie-20030916-branchpoint:1.4
	ezannoni_pie-20030916-branch:1.4.0.4
	cagney_x86i386-20030821-branch:1.4.0.2
	cagney_x86i386-20030821-branchpoint:1.4
	carlton_dictionary-20030805-merge:1.4
	carlton_dictionary-20030627-merge:1.3
	gdb_6_0-branch:1.3.0.2
	gdb_6_0-2003-06-23-branchpoint:1.3
	jimb-ppc64-linux-20030613-branch:1.2.0.34
	jimb-ppc64-linux-20030613-branchpoint:1.2
	cagney_convert-20030606-branch:1.2.0.32
	cagney_convert-20030606-branchpoint:1.2
	cagney_writestrings-20030508-branch:1.2.0.30
	cagney_writestrings-20030508-branchpoint:1.2
	jimb-ppc64-linux-20030528-branch:1.2.0.28
	jimb-ppc64-linux-20030528-branchpoint:1.2
	carlton_dictionary-20030523-merge:1.2
	cagney_fileio-20030521-branch:1.2.0.26
	cagney_fileio-20030521-branchpoint:1.2
	kettenis_i386newframe-20030517-mergepoint:1.2
	jimb-ppc64-linux-20030509-branch:1.2.0.24
	jimb-ppc64-linux-20030509-branchpoint:1.2
	kettenis_i386newframe-20030504-mergepoint:1.2
	carlton_dictionary-20030430-merge:1.2
	kettenis_i386newframe-20030419-branch:1.2.0.22
	kettenis_i386newframe-20030419-branchpoint:1.2
	carlton_dictionary-20030416-merge:1.2
	cagney_frameaddr-20030409-mergepoint:1.2
	kettenis_i386newframe-20030406-branch:1.2.0.20
	kettenis_i386newframe-20030406-branchpoint:1.2
	cagney_frameaddr-20030403-branchpoint:1.2
	cagney_frameaddr-20030403-branch:1.2.0.18
	cagney_framebase-20030330-mergepoint:1.2
	cagney_framebase-20030326-branch:1.2.0.16
	cagney_framebase-20030326-branchpoint:1.2
	cagney_lazyid-20030317-branch:1.2.0.14
	cagney_lazyid-20030317-branchpoint:1.2
	kettenis-i386newframe-20030316-mergepoint:1.2
	offbyone-20030313-branch:1.2.0.12
	offbyone-20030313-branchpoint:1.2
	kettenis-i386newframe-20030308-branch:1.2.0.10
	kettenis-i386newframe-20030308-branchpoint:1.2
	carlton_dictionary-20030305-merge:1.2
	cagney_offbyone-20030303-branch:1.2.0.8
	cagney_offbyone-20030303-branchpoint:1.2
	carlton_dictionary-20030207-merge:1.2
	interps-20030203-mergepoint:1.2
	interps-20030202-branch:1.2.0.6
	interps-20030202-branchpoint:1.2
	cagney-unwind-20030108-branch:1.2.0.4
	cagney-unwind-20030108-branchpoint:1.2
	carlton_dictionary-branch:1.2.0.2
	carlton_dictionary-20021223-merge:1.2;
locks; strict;
comment	@ * @;


1.4
date	2003.07.03.13.55.22;	author drow;	state Exp;
branches
	1.4.8.1;
next	1.3;

1.3
date	2003.06.14.22.10.47;	author cagney;	state Exp;
branches
	1.3.2.1;
next	1.2;

1.2
date	2002.12.06.19.21.51;	author carlton;	state Exp;
branches
	1.2.2.1;
next	1.1;

1.1
date	2002.12.05.01.48.19;	author cagney;	state Exp;
branches;
next	;

1.4.8.1
date	2003.12.14.20.27.50;	author drow;	state Exp;
branches;
next	;

1.3.2.1
date	2003.07.03.13.56.19;	author drow;	state Exp;
branches;
next	;

1.2.2.1
date	2002.12.23.19.39.12;	author carlton;	state Exp;
branches;
next	1.2.2.2;

1.2.2.2
date	2003.06.27.21.50.20;	author carlton;	state Exp;
branches;
next	1.2.2.3;

1.2.2.3
date	2003.08.05.17.13.23;	author carlton;	state Exp;
branches;
next	;


desc
@@


1.4
log
@	* gdb.base/store.c (charest): New typedef.
	(add_char): Rename to add_charest, update.
	(wack_char): Rename to wack_charest, update types.  Return l + r
	to keep r live across the call.
	(wack_short, wack_int, wack_long, wack_longest, wack_float)
	(wack_double, wack_doublest): Return l + r to keep r live across
	the call.
	* gdb.base/store.exp: Accomodate store.c changes.
@
text
@/* Check that GDB can correctly update a value, living in a register,
   in the target.  This pretty much relies on the compiler taking heed
   of requests for values to be stored in registers.  */

/* NOTE: carlton/2002-12-05: These functions were all static, but for
   whatever reason that caused GCC 3.1 to optimize away some of the
   function calls within main even when no optimization flags were
   passed.  */

typedef signed char charest;

charest
add_charest (register charest u, register charest v)
{
  return u + v;
}

short
add_short (register short u, register short v)
{
  return u + v;
}

int
add_int (register int u, register int v)
{
  return u + v;
}

long
add_long (register long u, register long v)
{
  return u + v;
}

typedef long long longest;

longest
add_longest (register longest u, register longest v)
{
  return u + v;
}

float
add_float (register float u, register float v)
{
  return u + v;
}

double
add_double (register double u, register double v)
{
  return u + v;
}

typedef long double doublest;

doublest
add_doublest (register doublest u, register doublest v)
{
  return u + v;
}

/* */

charest
wack_charest (register charest u, register charest v)
{
  register charest l = u, r = v;
  l = add_charest (l, r);
  return l + r;
}

short
wack_short (register short u, register short v)
{
  register short l = u, r = v;
  l = add_short (l, r);
  return l + r;
}

int
wack_int (register int u, register int v)
{
  register int l = u, r = v;
  l = add_int (l, r);
  return l + r;
}

long
wack_long (register long u, register long v)
{
  register long l = u, r = v;
  l = add_long (l, r);
  return l + r;
}

long
wack_longest (register longest u, register longest v)
{
  register longest l = u, r = v;
  l = add_longest (l, r);
  return l + r;
}

float
wack_float (register float u, register float v)
{
  register float l = u, r = v;
  l = add_float (l, r);
  return l + r;
}

double
wack_double (register double u, register double v)
{
  register double l = u, r = v;
  l = add_double (l, r);
  return l + r;
}

doublest
wack_doublest (register doublest u, register doublest v)
{
  register doublest l = u, r = v;
  l = add_doublest (l, r);
  return l + r;
}

/* */

struct s_1 { short s[1]; } z_1, s_1;
struct s_2 { short s[2]; } z_2, s_2;
struct s_3 { short s[3]; } z_3, s_3;
struct s_4 { short s[4]; } z_4, s_4;

struct s_1
add_struct_1 (struct s_1 s)
{
  int i;
  for (i = 0; i < sizeof (s) / sizeof (s.s[0]); i++)
    {
      s.s[i] = s.s[i] + s.s[i];
    }
  return s;
}

struct s_2
add_struct_2 (struct s_2 s)
{
  int i;
  for (i = 0; i < sizeof (s) / sizeof (s.s[0]); i++)
    {
      s.s[i] = s.s[i] + s.s[i];
    }
  return s;
}

struct s_3
add_struct_3 (struct s_3 s)
{
  int i;
  for (i = 0; i < sizeof (s) / sizeof (s.s[0]); i++)
    {
      s.s[i] = s.s[i] + s.s[i];
    }
  return s;
}

struct s_4
add_struct_4 (struct s_4 s)
{
  int i;
  for (i = 0; i < sizeof (s) / sizeof (s.s[0]); i++)
    {
      s.s[i] = s.s[i] + s.s[i];
    }
  return s;
}

struct s_1
wack_struct_1 (void)
{
  int i; register struct s_1 u = z_1;
  for (i = 0; i < sizeof (s_1) / sizeof (s_1.s[0]); i++) { s_1.s[i] = i + 1; }
  u = add_struct_1 (u);
  return u;
}

struct s_2
wack_struct_2 (void)
{
  int i; register struct s_2 u = z_2;
  for (i = 0; i < sizeof (s_2) / sizeof (s_2.s[0]); i++) { s_2.s[i] = i + 1; }
  u = add_struct_2 (u);
  return u;
}

struct s_3
wack_struct_3 (void)
{
  int i; register struct s_3 u = z_3;
  for (i = 0; i < sizeof (s_3) / sizeof (s_3.s[0]); i++) { s_3.s[i] = i + 1; }
  u = add_struct_3 (u);
  return u;
}

struct s_4
wack_struct_4 (void)
{
  int i; register struct s_4 u = z_4;
  for (i = 0; i < sizeof (s_4) / sizeof (s_4.s[0]); i++) { s_4.s[i] = i + 1; }
  u = add_struct_4 (u);
  return u;
}

/* */

struct f_1 {unsigned i:1;unsigned j:1;unsigned k:1; } f_1 = {1,1,1}, F_1;
struct f_2 {unsigned i:2;unsigned j:2;unsigned k:2; } f_2 = {1,1,1}, F_2;
struct f_3 {unsigned i:3;unsigned j:3;unsigned k:3; } f_3 = {1,1,1}, F_3;
struct f_4 {unsigned i:4;unsigned j:4;unsigned k:4; } f_4 = {1,1,1}, F_4;

struct f_1
wack_field_1 (void)
{
  register struct f_1 u = f_1;
  return u;
}

struct f_2
wack_field_2 (void)
{
  register struct f_2 u = f_2;
  return u;
}

struct f_3
wack_field_3 (void)
{
  register struct f_3 u = f_3;
  return u;
}

struct f_4
wack_field_4 (void)
{
  register struct f_4 u = f_4;
  return u;
}

/* */

int
main ()
{
  /* These calls are for current frame test.  */
  wack_charest (-1, -2);
  wack_short (-1, -2);
  wack_int (-1, -2);
  wack_long (-1, -2);
  wack_longest (-1, -2);
  wack_float (-1, -2);
  wack_double (-1, -2);
  wack_doublest (-1, -2);

  /* These calls are for up frame.  */
  wack_charest (-1, -2);
  wack_short (-1, -2);
  wack_int (-1, -2);
  wack_long (-1, -2);
  wack_longest (-1, -2);
  wack_float (-1, -2);
  wack_double (-1, -2);
  wack_doublest (-1, -2);

  /* These calls are for current frame test.  */
  wack_struct_1 ();
  wack_struct_2 ();
  wack_struct_3 ();
  wack_struct_4 ();
  
  /* These calls are for up frame.  */
  wack_struct_1 ();
  wack_struct_2 ();
  wack_struct_3 ();
  wack_struct_4 ();
  
  wack_field_1 ();
  wack_field_2 ();
  wack_field_3 ();
  wack_field_4 ();

  return 0;
}
@


1.4.8.1
log
@Merge drow-cplus-branch to:
  cvs rtag -D 2003-12-14 00:00:00 UTC drow-cplus-merge-20031214 gdb+dejagnu
@
text
@@


1.3
log
@2003-06-14  Andrew Cagney  <cagney@@redhat.com>

	* gdb.base/store.exp: Test longest and doublest.  Test all
	parameters.  Weaken return statement match.
	* gdb.base/store.c: Add longest and doublest - aka long long and
	long double functions.  Put all parameters into local register
	variables.  Use negative values.
@
text
@d10 4
a13 2
char
add_char (register char u, register char v)
d66 2
a67 2
char
wack_char (register char u, register char v)
d69 3
a71 3
  register char l = u, r = v;
  l = add_char (l, r);
  return l;
d79 1
a79 1
  return l;
d87 1
a87 1
  return l;
d95 1
a95 1
  return l;
d103 1
a103 1
  return l;
d111 1
a111 1
  return l;
d119 1
a119 1
  return l;
d127 1
a127 1
  return l;
d258 1
a258 1
  wack_char (-1, -2);
d268 1
a268 1
  wack_char (-1, -2);
@


1.3.2.1
log
@	* gdb.base/store.c (charest): New typedef.
	(add_char): Rename to add_charest, update.
	(wack_char): Rename to wack_charest, update types.  Return l + r
	to keep r live across the call.
	(wack_short, wack_int, wack_long, wack_longest, wack_float)
	(wack_double, wack_doublest): Return l + r to keep r live across
	the call.
	* gdb.base/store.exp: Accomodate store.c changes.
@
text
@d10 2
a11 4
typedef signed char charest;

charest
add_charest (register charest u, register charest v)
d64 2
a65 2
charest
wack_charest (register charest u, register charest v)
d67 3
a69 3
  register charest l = u, r = v;
  l = add_charest (l, r);
  return l + r;
d77 1
a77 1
  return l + r;
d85 1
a85 1
  return l + r;
d93 1
a93 1
  return l + r;
d101 1
a101 1
  return l + r;
d109 1
a109 1
  return l + r;
d117 1
a117 1
  return l + r;
d125 1
a125 1
  return l + r;
d256 1
a256 1
  wack_charest (-1, -2);
d266 1
a266 1
  wack_charest (-1, -2);
@


1.2
log
@2002-12-06  David Carlton  <carlton@@math.stanford.edu>

	* gdb.base/store.c: Don't declare functions static.
@
text
@d34 8
d54 8
d67 2
a68 2
  register char l = u;
  l = add_char (l, v);
d75 2
a76 2
  register short l = u;
  l = add_short (l, v);
d83 2
a84 2
  register int l = u;
  l = add_int (l, v);
d91 10
a100 2
  register long l = u;
  l = add_long (l, v);
d107 2
a108 2
  register float l = u;
  l = add_float (l, v);
d115 10
a124 2
  register double l = u;
  l = add_double (l, v);
d128 2
d256 8
a263 6
  wack_char (1, 2);
  wack_short (1, 2);
  wack_int (1, 2);
  wack_long (1, 2);
  wack_float (1, 2);
  wack_double (1, 2);
d266 8
a273 6
  wack_char (1, 2);
  wack_short (1, 2);
  wack_int (1, 2);
  wack_long (1, 2);
  wack_float (1, 2);
  wack_double (1, 2);
@


1.2.2.1
log
@2002-12-23  David Carlton  <carlton@@math.stanford.edu>

	* Merge from mainline; tag is carlton_dictionary-20021223-merge.
@
text
@@


1.2.2.2
log
@2003-06-27  David Carlton  <carlton@@kealia.com>

	* Merge with mainline; tag is carlton_dictionary-20030627-merge.
@
text
@a33 8
typedef long long longest;

longest
add_longest (register longest u, register longest v)
{
  return u + v;
}

a45 8
typedef long double doublest;

doublest
add_doublest (register doublest u, register doublest v)
{
  return u + v;
}

d51 2
a52 2
  register char l = u, r = v;
  l = add_char (l, r);
d59 2
a60 2
  register short l = u, r = v;
  l = add_short (l, r);
d67 2
a68 2
  register int l = u, r = v;
  l = add_int (l, r);
d75 2
a76 10
  register long l = u, r = v;
  l = add_long (l, r);
  return l;
}

long
wack_longest (register longest u, register longest v)
{
  register longest l = u, r = v;
  l = add_longest (l, r);
d83 2
a84 2
  register float l = u, r = v;
  l = add_float (l, r);
d91 2
a92 10
  register double l = u, r = v;
  l = add_double (l, r);
  return l;
}

doublest
wack_doublest (register doublest u, register doublest v)
{
  register doublest l = u, r = v;
  l = add_doublest (l, r);
a95 2
/* */

d222 6
a227 8
  wack_char (-1, -2);
  wack_short (-1, -2);
  wack_int (-1, -2);
  wack_long (-1, -2);
  wack_longest (-1, -2);
  wack_float (-1, -2);
  wack_double (-1, -2);
  wack_doublest (-1, -2);
d230 6
a235 8
  wack_char (-1, -2);
  wack_short (-1, -2);
  wack_int (-1, -2);
  wack_long (-1, -2);
  wack_longest (-1, -2);
  wack_float (-1, -2);
  wack_double (-1, -2);
  wack_doublest (-1, -2);
@


1.2.2.3
log
@2003-08-05  David Carlton  <carlton@@kealia.com>

	* configure.in (build_warnings): Delete -Wformat-nonliteral.
	* configure (build_warnings): Ditto.

	* Merge with mainline; tag is carlton_dictionary-20030805-merge.
@
text
@d10 2
a11 4
typedef signed char charest;

charest
add_charest (register charest u, register charest v)
d64 2
a65 2
charest
wack_charest (register charest u, register charest v)
d67 3
a69 3
  register charest l = u, r = v;
  l = add_charest (l, r);
  return l + r;
d77 1
a77 1
  return l + r;
d85 1
a85 1
  return l + r;
d93 1
a93 1
  return l + r;
d101 1
a101 1
  return l + r;
d109 1
a109 1
  return l + r;
d117 1
a117 1
  return l + r;
d125 1
a125 1
  return l + r;
d256 1
a256 1
  wack_charest (-1, -2);
d266 1
a266 1
  wack_charest (-1, -2);
@


1.1
log
@2002-12-04  Andrew Cagney  <ac131313@@redhat.com>

	* gdb.base/store.exp, gdb.base/store.c: New files.
@
text
@d5 6
a10 1
static char
d16 1
a16 1
static short
d22 1
a22 1
static int
d28 1
a28 1
static long
d34 1
a34 1
static float
d40 1
a40 1
static double
d48 1
a48 1
static char
d56 1
a56 1
static short
d64 1
a64 1
static int
d72 1
a72 1
static long
d80 1
a80 1
static float
d88 1
a88 1
static double
d101 1
a101 1
static struct s_1
d112 1
a112 1
static struct s_2
d123 1
a123 1
static struct s_3
d134 1
a134 1
static struct s_4
d145 1
a145 1
static struct s_1
d154 1
a154 1
static struct s_2
d163 1
a163 1
static struct s_3
d172 1
a172 1
static struct s_4
d188 1
a188 1
static struct f_1
d195 1
a195 1
static struct f_2
d202 1
a202 1
static struct f_3
d209 1
a209 1
static struct f_4
@

