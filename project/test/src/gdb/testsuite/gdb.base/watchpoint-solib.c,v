head	1.8;
access;
symbols
	gdb_7_6_1-2013-08-30-release:1.8
	gdb_7_6-2013-04-26-release:1.8
	gdb_7_6-branch:1.8.0.2
	gdb_7_6-2013-03-12-branchpoint:1.8
	gdb_7_5_1-2012-11-29-release:1.7
	gdb_7_5-2012-08-17-release:1.7
	gdb_7_5-branch:1.7.0.2
	gdb_7_5-2012-07-18-branchpoint:1.7
	gdb_7_4_1-2012-04-26-release:1.6.4.1
	gdb_7_4-2012-01-24-release:1.6.4.1
	gdb_7_4-branch:1.6.0.4
	gdb_7_4-2011-12-13-branchpoint:1.6
	gdb_7_3_1-2011-09-04-release:1.6
	gdb_7_3-2011-07-26-release:1.6
	gdb_7_3-branch:1.6.0.2
	gdb_7_3-2011-04-01-branchpoint:1.6
	gdb_7_2-2010-09-02-release:1.5
	gdb_7_2-branch:1.5.0.4
	gdb_7_2-2010-07-07-branchpoint:1.5
	gdb_7_1-2010-03-18-release:1.5
	gdb_7_1-branch:1.5.0.2
	gdb_7_1-2010-02-18-branchpoint:1.5
	gdb_7_0_1-2009-12-22-release:1.2
	gdb_7_0-2009-10-06-release:1.2
	gdb_7_0-branch:1.2.0.4
	gdb_7_0-2009-09-16-branchpoint:1.2
	arc-sim-20090309:1.1
	msnyder-checkpoint-072509-branch:1.2.0.2
	msnyder-checkpoint-072509-branchpoint:1.2
	arc-insight_6_8-branch:1.1.0.16
	arc-insight_6_8-branchpoint:1.1
	insight_6_8-branch:1.1.0.14
	insight_6_8-branchpoint:1.1
	reverse-20081226-branch:1.1.0.12
	reverse-20081226-branchpoint:1.1
	multiprocess-20081120-branch:1.1.0.10
	multiprocess-20081120-branchpoint:1.1
	reverse-20080930-branch:1.1.0.8
	reverse-20080930-branchpoint:1.1
	reverse-20080717-branch:1.1.0.6
	reverse-20080717-branchpoint:1.1
	msnyder-reverse-20080609-branch:1.1.0.4
	msnyder-reverse-20080609-branchpoint:1.1
	gdb_6_8-2008-03-27-release:1.1
	gdb_6_8-branch:1.1.0.2
	gdb_6_8-2008-02-26-branchpoint:1.1;
locks; strict;
comment	@ * @;


1.8
date	2013.01.01.06.33.26;	author brobecke;	state Exp;
branches;
next	1.7;

1.7
date	2012.01.04.08.17.46;	author brobecke;	state Exp;
branches;
next	1.6;

1.6
date	2011.01.01.15.33.43;	author brobecke;	state Exp;
branches
	1.6.4.1;
next	1.5;

1.5
date	2010.02.17.22.55.40;	author palves;	state Exp;
branches;
next	1.4;

1.4
date	2010.01.01.07.32.01;	author brobecke;	state Exp;
branches;
next	1.3;

1.3
date	2009.10.01.21.33.24;	author muller;	state Exp;
branches;
next	1.2;

1.2
date	2009.01.03.05.58.03;	author brobecke;	state Exp;
branches;
next	1.1;

1.1
date	2008.01.29.17.52.47;	author vprus;	state Exp;
branches;
next	;

1.6.4.1
date	2012.01.06.04.44.01;	author brobecke;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Update years in copyright notice for the GDB files.

Two modifications:
  1. The addition of 2013 to the copyright year range for every file;
  2. The use of a single year range, instead of potentially multiple
     year ranges, as approved by the FSF.
@
text
@/* This testcase is part of GDB, the GNU debugger.

   Copyright 2004-2013 Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>. */

#include <stdio.h>
#include <stdlib.h>

#ifdef __WIN32__
#include <windows.h>
#define dlopen(name, mode) LoadLibrary (TEXT (name))
#ifdef _WIN32_WCE
# define dlsym(handle, func) GetProcAddress (handle, TEXT (func))
#else
# define dlsym(handle, func) GetProcAddress (handle, func)
#endif
#define dlclose(handle) FreeLibrary (handle)
#else
#include <dlfcn.h>
#endif


void open_shlib ()
{
  void *handle;
  void (*foo) (int);

  handle = dlopen (SHLIB_NAME, RTLD_LAZY);
  
  if (!handle)
    {
#ifdef __WIN32__
      fprintf (stderr, "error %d occurred\n", GetLastError ());
#else
      fprintf (stderr, "%s\n", dlerror ());
#endif
      exit (1);
    }

  foo = (void (*)(int))dlsym (handle, "foo");

  if (!foo)
    {
      fprintf (stderr, "%s\n", dlerror ());
      exit (1);
    }

  foo (1); // call to foo
  foo (2);

  dlclose (handle);
}


int main()
{
  open_shlib ();
  return 0;
}
@


1.7
log
@Copyright year update in most files of the GDB Project.

gdb/ChangeLog:

        Copyright year update in most files of the GDB Project.
@
text
@d3 1
a3 1
   Copyright 2004, 2007, 2009-2012 Free Software Foundation, Inc.
@


1.6
log
@run copyright.sh for 2011.
@
text
@d3 1
a3 1
   Copyright 2004, 2007, 2009, 2010, 2011 Free Software Foundation, Inc.
@


1.6.4.1
log
@Copyright year update in most files of the GDB Project.

gdb/ChangeLog:

        Copyright year update in most files of the GDB Project.
@
text
@d3 1
a3 1
   Copyright 2004, 2007, 2009-2012 Free Software Foundation, Inc.
@


1.5
log
@	* gdb.base/shmain.c (main): Remove printf call.
	* gdb.base/sizeof.c (main): Cast return of sizeof to int.
	* gdb.base/unload.c (main): Make format of fprintf a string
	literal.  Add missing endlines to prints to stderr.
	* gdb.base/watchpoint-solib.c (open_shlib): Ditto.
@
text
@d3 1
a3 1
   Copyright 2004, 2007, 2009, 2010 Free Software Foundation, Inc.
@


1.4
log
@Update copyright year in most headers.

Automatic update by copyright.sh.
@
text
@d45 1
a45 1
      fprintf (stderr, "error %d occurred", GetLastError ());
d47 1
a47 1
      fprintf (stderr, "%s", dlerror ());
d56 1
a56 1
      fprintf (stderr, dlerror ());
@


1.3
log
@	* src/gdb/testsuite/gdb.base/shr1.c: Use %p in format string.
	* src/gdb/testsuite/gdb.base/unload.c: Avoid warning in fprintf.
	* src/gdb/testsuite/gdb.base/watchpoint-solib.c: Idem.
@
text
@d3 1
a3 1
   Copyright 2004, 2007, 2009 Free Software Foundation, Inc.
@


1.2
log
@        Updated copyright notices for most files.
@
text
@a29 1
#define dlerror() "error %d occurred", GetLastError ()
d44 5
a48 1
      fprintf (stderr, dlerror ());
@


1.1
log
@	Use multiple locations for hardware watchpoints.
	This eliminates the need to traverse value chain, doing
	various checks, in three different places.

        * breakpoint.h (struct bp_location): New fields
        lengths and watchpoint_type.
        (struct breakpoint): Remove the val_chain field.
        * breakpoint.c (is_hardware_watchpoint): New.
        (free_valchain): Remove.
        (update_watchpoint): New.
        (insert_bp_location): For hardware watchpoint, just
        directly insert it.
        (insert_breakpoints): Call update_watchpoint_locations
        on all watchpoints.  If we have failed to insert
        any location of a hardware watchpoint, remove all inserted
        locations.
        (remove_breakpoint): For hardware watchpoints, directly
        remove location.
        (watchpoints_triggered): Iterate over locations.
        (bpstat_stop_status): Use only first location of
        a resource watchpoint.
        (delete_breakpoint): Don't call free_valchain.
        (print_one_breakpoint): Don't print all
        locations for watchpoints.
        (breakpoint_re_set_one): Use update_watchpoint for
        watchpoints.
@
text
@d3 1
a3 1
   Copyright 2004, 2007 Free Software Foundation, Inc.
@

