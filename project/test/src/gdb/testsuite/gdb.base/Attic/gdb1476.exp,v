head	1.5;
access;
symbols
	gdb_6_1_1-20040616-release:1.4
	gdb_6_1-2004-04-05-release:1.4
	drow_intercu-merge-20040402:1.4
	drow_intercu-merge-20040327:1.4
	ezannoni_pie-20040323-branch:1.4.0.16
	ezannoni_pie-20040323-branchpoint:1.4
	ezannoni_pie-20030916-branch:1.4.0.14
	cagney_tramp-20040321-mergepoint:1.4
	cagney_tramp-20040309-branch:1.4.0.12
	cagney_tramp-20040309-branchpoint:1.4
	gdb_6_1-branch:1.4.0.10
	gdb_6_1-2004-03-01-gmt-branchpoint:1.4
	drow_intercu-20040221-branch:1.4.0.8
	drow_intercu-20040221-branchpoint:1.4
	cagney_bfdfile-20040213-branch:1.4.0.6
	cagney_bfdfile-20040213-branchpoint:1.4
	drow-cplus-merge-20040208:1.4
	carlton_dictionary-branch:1.4.0.4
	carlton_dictionary-20040126-merge:1.4
	cagney_bigcore-20040122-branch:1.4.0.2
	cagney_bigcore-20040122-branchpoint:1.4
	drow-cplus-branch:1.3.0.2
	drow-cplus-merge-20040113:1.3;
locks; strict;
comment	@# @;


1.5
date	2004.05.13.18.12.07;	author cagney;	state dead;
branches;
next	1.4;

1.4
date	2004.01.18.16.35.11;	author kettenis;	state Exp;
branches
	1.4.4.1
	1.4.8.1
	1.4.14.1;
next	1.3;

1.3
date	2004.01.09.16.43.05;	author kettenis;	state Exp;
branches
	1.3.2.1;
next	1.2;

1.2
date	2004.01.07.22.12.34;	author kettenis;	state Exp;
branches;
next	1.1;

1.1
date	2004.01.05.22.55.33;	author kettenis;	state Exp;
branches;
next	;

1.3.2.1
date	2004.01.13.16.12.11;	author drow;	state Exp;
branches;
next	1.3.2.2;

1.3.2.2
date	2004.02.09.19.43.55;	author drow;	state Exp;
branches;
next	;

1.4.4.1
date	2004.01.26.19.11.41;	author carlton;	state Exp;
branches;
next	;

1.4.8.1
date	2004.09.16.17.01.41;	author drow;	state dead;
branches;
next	;

1.4.14.1
date	2004.03.23.20.12.32;	author ezannoni;	state Exp;
branches;
next	;


desc
@@


1.5
log
@2004-05-13  Andrew Cagney  <cagney@@redhat.com>

	* gdb.base/signull.exp, gdb.base/signull.c: New files.
	* gdb.base/gdb1476.c, gdb.base/gdb1476.exp: Delete files.
@
text
@# Copyright 2004 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  

# Please email any bugs, comments, and/or additions to this file to:
# bug-gdb@@gnu.org

# This file is part of the gdb testsuite.

if $tracelevel {
    strace $tracelevel
}

# Testcase for backtrace/gdb1476.

set prms_id 0
set bug_id 0

set testfile "gdb1476"
set srcfile ${testfile}.c
set binfile ${objdir}/${subdir}/${testfile}
if { [gdb_compile "${srcdir}/${subdir}/${srcfile}" "${binfile}" executable {debug}] != "" } {
    gdb_suppress_entire_file "Testcase compile failed, so all tests in this file will automatically fail."
}

gdb_exit
gdb_start
gdb_reinitialize_dir $srcdir/$subdir
gdb_load ${binfile}

#
# Run to `main' where we begin our tests.
#

if ![runto_main] then {
    gdb_suppress_tests
}

# If we can examine what's at memory address 0, it is possible that we
# could also execute it.  This could probably make us run away,
# executing random code, which could have all sorts of ill effects,
# especially on targets without an MMU.  Don't run the tests in that
# case.

send_gdb "x 0\n"
gdb_expect {
    -re "0x0:.*Cannot access memory at address 0x0.*$gdb_prompt $" { }
    -re "0x0:.*Error accessing memory address 0x0.*$gdb_prompt $" { }
    -re ".*$gdb_prompt $" {
	untested "Memory at address 0 is possibly executable"
	return
    }
}

gdb_test "continue" "Program received signal SIGSEGV.*" \
	"continue to null pointer call"

gdb_test "backtrace 10" \
	"#0\[ \t\]*0x0* in .*\r\n#1\[ \t\]*$hex in x.*\r\n#2\[ \t\]*$hex in main.*" \
	"backtrace from null pointer call"
@


1.4
log
@* gdb.base/gdb1476.exp: Accept alternat pattern for failed memory
read at address 0.  This fixes PR testsuite/1504.
@
text
@@


1.4.8.1
log
@Merge mainline to intercu branch - 2004-09-15
@
text
@@


1.4.14.1
log
@merge mainline changes into branch
@
text
@@


1.4.4.1
log
@2004-01-26  David Carlton  <carlton@@kealia.com>

	* Merge with mainline; tag is carlton_dictionary-20040126-merge.
@
text
@@


1.3
log
@* gdb.base/gdb1476.exp: Fix typo.
@
text
@d59 1
d72 1
a72 1
	"backtrace from null pointer call"@


1.3.2.1
log
@Merge mainline to branch.  GDB is broken until I update cp-names.y.
@
text
@@


1.3.2.2
log
@Merge drow-cplus-merge-20040208 to drow-cplus-branch.
@
text
@a58 1
    -re "0x0:.*Cannot access memory at address 0x0.*$gdb_prompt $" { }
d71 1
a71 1
	"backtrace from null pointer call"
@


1.2
log
@* gdb.base/gdb1476.exp: Only run the tests if we can't read the
memory at address 0.
@
text
@d52 1
a52 1
# could also execute it.  This could pobably make us run away,
@


1.1
log
@* gdb.base/gdb1476.exp, gdb.base/gdb1476.c: New files.
@
text
@d51 15
@

