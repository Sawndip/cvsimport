head	1.4;
access;
symbols
	gdb_7_0_1-2009-12-22-release:1.1.2.1
	gdb_7_0-2009-10-06-release:1.1.2.1
	gdb_7_0-branch:1.1.0.2
	gdb_7_0-2009-09-16-branchpoint:1.1;
locks; strict;
comment	@# @;


1.4
date	2010.01.14.21.20.12;	author jkratoch;	state dead;
branches;
next	1.3;

1.3
date	2010.01.01.07.32.01;	author brobecke;	state Exp;
branches;
next	1.2;

1.2
date	2009.09.27.20.40.23;	author uweigand;	state Exp;
branches;
next	1.1;

1.1
date	2009.08.04.20.41.13;	author bauermann;	state Exp;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2009.09.29.00.34.43;	author uweigand;	state Exp;
branches;
next	;


desc
@@


1.4
log
@gdb/
	* linux-tdep.c: Remove includes gdbcore.h, observer.h and elf-bfd.h.
	(check_is_pie_binary, _initialize_linux_tdep): Remove.

gdb/testsuite/
	* gdb.base/pie-support.exp, gdb.base/pie-support.c: Remove.
@
text
@# Copyright 2009, 2010 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

set testfile pie-support
set srcfile ${testfile}.c
set objfile ${objdir}/${subdir}/${testfile}.o
set binfile ${objdir}/${subdir}/${testfile}

if  { [gdb_compile "${srcdir}/${subdir}/${srcfile}" "${objfile}" object {quiet debug additional_flags=-fpie}] != "" } {
    untested "Couldn't compile test PIE object file."
    return -1
}
if  { [gdb_compile "${objfile}" "${binfile}" executable {quiet debug additional_flags=-pie}] != "" } {
    untested "Couldn't compile test PIE binary."
    return -1
}

# Get things started.

gdb_exit
gdb_start
gdb_reinitialize_dir $srcdir/$subdir

if [is_remote host] {
  set binfile [remote_download host $binfile]
    if { $binfile == "" } {
      untested "Couldn't download remote test binary."
      return -1
    }
}

# The file command used to kill the remote target.  For the benefit
# of the testsuite, preserve this behavior.
send_gdb "kill\n"
gdb_expect 120 {
    -re "Kill the program being debugged. .y or n. $" {
	send_gdb "y\n"
	verbose "\t\tKilling previous program being debugged"
	exp_continue
    }
    -re "$gdb_prompt $" {
	# OK.
    }
}

gdb_test "file $binfile" "current binary is a PIE.*" "correctly detected PIE binary"
@


1.3
log
@Update copyright year in most headers.

Automatic update by copyright.sh.
@
text
@@


1.2
log
@	* gdb.base/pie-support.exp: Pass "quiet" flag to gdb_compile.
@
text
@d1 1
a1 1
# Copyright 2009 Free Software Foundation, Inc.
@


1.1
log
@2009-08-04  Thiago Jung Bauermann  <thiago.bauermann@@gmail.com>

gdb/
	* linux-tdep.c (check_is_pie_binary,
	_initialize_linux_tdep): New functions.

gdb/testsuite/
	* gdb.base/pie-support.exp: New file.
	* gdb.base/pie-support.c: New file.
@
text
@d21 1
a21 1
if  { [gdb_compile "${srcdir}/${subdir}/${srcfile}" "${objfile}" object {debug additional_flags=-fpie}] != "" } {
d25 1
a25 1
if  { [gdb_compile "${objfile}" "${binfile}" executable {debug additional_flags=-pie}] != "" } {
@


1.1.2.1
log
@	* gdb.base/pie-support.exp: Pass "quiet" flag to gdb_compile.
@
text
@d21 1
a21 1
if  { [gdb_compile "${srcdir}/${subdir}/${srcfile}" "${objfile}" object {quiet debug additional_flags=-fpie}] != "" } {
d25 1
a25 1
if  { [gdb_compile "${objfile}" "${binfile}" executable {quiet debug additional_flags=-pie}] != "" } {
@


