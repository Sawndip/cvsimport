head	1.1;
access;
symbols;
locks; strict;
comment	@ * @;


1.1
date	2013.06.04.13.23.32;	author gary;	state Exp;
branches;
next	;


desc
@@


1.1
log
@2013-06-04  Jan Kratochvil  <jan.kratochvil@@redhat.com>
	    Gary Benson  <gbenson@@redhat.com>

	* lib/gdb.exp (build_executable_from_specs): Use gdb_compile_pthread,
	gdb_compile_shlib or gdb_compile_shlib_pthreads where appropriate.
	* lib/prelink-support.exp (build_executable_own_libs): Allow INTERP
	to be set to "no" to indicate that no ld.so copy should be made.
	* gdb.base/break-interp.exp (solib_bp): New constant.
	(reach_1): Use the above instead of "_dl_debug_state".
	(test_attach): Likewise.
	(test_ld): Likewise.
	* gdb.threads/dlopen-libpthread.exp: New file.
	* gdb.threads/dlopen-libpthread.c: Likewise.
	* gdb.threads/dlopen-libpthread-lib.c: Likewise.
	* gdb.base/solib-corrupted.exp: Disable test if GDB is using probes.
@
text
@/* This testcase is part of GDB, the GNU debugger.

   Copyright 2011-2013 Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */

#include <pthread.h>
#include <assert.h>

static void *
tfunc (void *arg)
{
  void (*notifyp) (void) = arg;

  notifyp ();
}

void
f (void (*notifyp) (void))
{
  pthread_t t;
  int i;

  i = pthread_create (&t, NULL, tfunc, notifyp);
  assert (i == 0);

  i = pthread_join (t, NULL);
  assert (i == 0);
}
@
