head	1.8;
access;
symbols
	gdb_7_6_1-2013-08-30-release:1.8
	gdb_7_6-2013-04-26-release:1.8
	gdb_7_6-branch:1.8.0.2
	gdb_7_6-2013-03-12-branchpoint:1.8
	gdb_7_5_1-2012-11-29-release:1.7
	gdb_7_5-2012-08-17-release:1.7
	gdb_7_5-branch:1.7.0.2
	gdb_7_5-2012-07-18-branchpoint:1.7
	gdb_7_4_1-2012-04-26-release:1.6.4.1
	gdb_7_4-2012-01-24-release:1.6.4.1
	gdb_7_4-branch:1.6.0.4
	gdb_7_4-2011-12-13-branchpoint:1.6
	gdb_7_3_1-2011-09-04-release:1.6
	gdb_7_3-2011-07-26-release:1.6
	gdb_7_3-branch:1.6.0.2
	gdb_7_3-2011-04-01-branchpoint:1.6
	gdb_7_2-2010-09-02-release:1.5
	gdb_7_2-branch:1.5.0.4
	gdb_7_2-2010-07-07-branchpoint:1.5
	gdb_7_1-2010-03-18-release:1.5
	gdb_7_1-branch:1.5.0.2
	gdb_7_1-2010-02-18-branchpoint:1.5
	gdb_7_0_1-2009-12-22-release:1.3.4.1
	gdb_7_0-2009-10-06-release:1.3.4.1
	gdb_7_0-branch:1.3.0.4
	gdb_7_0-2009-09-16-branchpoint:1.3
	arc-sim-20090309:1.2
	msnyder-checkpoint-072509-branch:1.3.0.2
	msnyder-checkpoint-072509-branchpoint:1.3
	arc-insight_6_8-branch:1.2.0.16
	arc-insight_6_8-branchpoint:1.2
	insight_6_8-branch:1.2.0.14
	insight_6_8-branchpoint:1.2
	reverse-20081226-branch:1.2.0.12
	reverse-20081226-branchpoint:1.2
	multiprocess-20081120-branch:1.2.0.10
	multiprocess-20081120-branchpoint:1.2
	reverse-20080930-branch:1.2.0.8
	reverse-20080930-branchpoint:1.2
	reverse-20080717-branch:1.2.0.6
	reverse-20080717-branchpoint:1.2
	msnyder-reverse-20080609-branch:1.2.0.4
	msnyder-reverse-20080609-branchpoint:1.2
	gdb_6_8-2008-03-27-release:1.2
	gdb_6_8-branch:1.2.0.2
	gdb_6_8-2008-02-26-branchpoint:1.2;
locks; strict;
comment	@ * @;


1.8
date	2013.01.01.06.41.27;	author brobecke;	state Exp;
branches;
next	1.7;

1.7
date	2012.01.04.08.27.55;	author brobecke;	state Exp;
branches;
next	1.6;

1.6
date	2011.01.01.15.33.50;	author brobecke;	state Exp;
branches
	1.6.4.1;
next	1.5;

1.5
date	2010.01.01.07.32.06;	author brobecke;	state Exp;
branches;
next	1.4;

1.4
date	2009.09.27.20.44.25;	author uweigand;	state Exp;
branches;
next	1.3;

1.3
date	2009.01.03.05.58.07;	author brobecke;	state Exp;
branches
	1.3.4.1;
next	1.2;

1.2
date	2008.01.01.22.53.22;	author drow;	state Exp;
branches;
next	1.1;

1.1
date	2007.10.23.20.17.55;	author drow;	state Exp;
branches;
next	;

1.6.4.1
date	2012.01.06.04.54.29;	author brobecke;	state Exp;
branches;
next	;

1.3.4.1
date	2009.09.29.00.38.01;	author uweigand;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Update years in copyright notice for the GDB files.

Two modifications:
  1. The addition of 2013 to the copyright year range for every file;
  2. The use of a single year range, instead of potentially multiple
     year ranges, as approved by the FSF.
@
text
@/* Create threads from multiple threads in parallel.
   Copyright 2007-2013 Free Software Foundation, Inc.

   This file is part of GDB.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */

#include <pthread.h>
#include <stdio.h>
#include <limits.h>

#define NUM_CREATE 1
#define NUM_THREAD 8

void *
thread_function (void *arg)
{
  int x = * (int *) arg;

  printf ("Thread <%d> executing\n", x);

  return NULL;
}

void *
create_function (void *arg)
{
  pthread_attr_t attr;
  pthread_t threads[NUM_THREAD];
  int args[NUM_THREAD];
  int i = * (int *) arg;
  int j;

  pthread_attr_init (&attr); /* set breakpoint 1 here.  */
  pthread_attr_setstacksize (&attr, 2*PTHREAD_STACK_MIN);

  /* Create a ton of quick-executing threads, then wait for them to
     complete.  */
  for (j = 0; j < NUM_THREAD; ++j)
    {
      args[j] = i * 1000 + j;
      pthread_create (&threads[j], &attr, thread_function, &args[j]);
    }

  for (j = 0; j < NUM_THREAD; ++j)
    pthread_join (threads[j], NULL);

  pthread_attr_destroy (&attr);

  return NULL;
}

int 
main (int argc, char **argv)
{
  pthread_attr_t attr;
  pthread_t threads[NUM_CREATE];
  int args[NUM_CREATE];
  int n, i;

  pthread_attr_init (&attr);
  pthread_attr_setstacksize (&attr, 2*PTHREAD_STACK_MIN);

  for (n = 0; n < 100; ++n)
    {
      for (i = 0; i < NUM_CREATE; i++)
	{
	  args[i] = i;
	  pthread_create (&threads[i], &attr, create_function, &args[i]);
	}

      create_function (&i);
      for (i = 0; i < NUM_CREATE; i++)
	pthread_join (threads[i], NULL);
    }

  pthread_attr_destroy (&attr);

  return 0;
}
@


1.7
log
@Copyright year update in most files of the GDB Project.

gdb/ChangeLog:

        Copyright year update in most files of the GDB Project.
@
text
@d2 1
a2 1
   Copyright 2007-2012 Free Software Foundation, Inc.
@


1.6
log
@run copyright.sh for 2011.
@
text
@d2 1
a2 1
   Copyright 2007, 2008, 2009, 2010, 2011 Free Software Foundation, Inc.
@


1.6.4.1
log
@Copyright year update in most files of the GDB Project.

gdb/ChangeLog:

        Copyright year update in most files of the GDB Project.
@
text
@d2 1
a2 1
   Copyright 2007-2012 Free Software Foundation, Inc.
@


1.5
log
@Update copyright year in most headers.

Automatic update by copyright.sh.
@
text
@d2 1
a2 1
   Copyright 2007, 2008, 2009, 2010 Free Software Foundation, Inc.
@


1.4
log
@	* gdb.threads/manythreads.c (main): Increase thread stack size
	to 2*PTHREAD_STACK_MIN.
	* gdb.threads/multi-create.c (main): Likewise.
	(create_function): Likewise.
@
text
@d2 1
a2 1
   Copyright 2007, 2008, 2009 Free Software Foundation, Inc.
@


1.3
log
@        Updated copyright notices for most files.
@
text
@d46 1
a46 1
  pthread_attr_setstacksize (&attr, PTHREAD_STACK_MIN);
d73 1
a73 1
  pthread_attr_setstacksize (&attr, PTHREAD_STACK_MIN);
@


1.3.4.1
log
@	* gdb.threads/manythreads.c (main): Increase thread stack size
	to 2*PTHREAD_STACK_MIN.
	* gdb.threads/multi-create.c (main): Likewise.
	(create_function): Likewise.
@
text
@d46 1
a46 1
  pthread_attr_setstacksize (&attr, 2*PTHREAD_STACK_MIN);
d73 1
a73 1
  pthread_attr_setstacksize (&attr, 2*PTHREAD_STACK_MIN);
@


1.2
log
@	Updated copyright notices for most files.
@
text
@d2 1
a2 1
   Copyright 2007, 2008 Free Software Foundation, Inc.
@


1.1
log
@	* gdb.threads/multi-create.c, gdb.threads/multi-create.exp: New.
@
text
@d2 1
a2 1
   Copyright 2007 Free Software Foundation, Inc.
@

