head	1.5;
access;
symbols
	gdb_5_2_1-2002-07-23-release:1.4
	gdb_5_2-2002-04-29-release:1.4
	gdb_5_2-branch:1.4.0.2
	gdb_5_2-2002-03-03-branchpoint:1.4
	gdb_5_1_1-2002-01-24-release:1.1.1.1
	gdb_5_1_0_1-2002-01-03-release:1.1.1.1
	cygnus_cvs_20020108_pre:1.3
	gdb_5_1_0_1-2002-01-03-branch:1.1.1.1.0.12
	gdb_5_1_0_1-2002-01-03-branchpoint:1.1.1.1
	gdb_5_1-2001-11-21-release:1.1.1.1
	gdb_s390-2001-09-26-branch:1.1.1.1.0.10
	gdb_s390-2001-09-26-branchpoint:1.1.1.1
	gdb_5_1-2001-07-29-branch:1.1.1.1.0.8
	gdb_5_1-2001-07-29-branchpoint:1.1.1.1
	dberlin-typesystem-branch:1.1.1.1.0.6
	dberlin-typesystem-branchpoint:1.1.1.1
	gdb-post-ptid_t-2001-05-03:1.1.1.1
	gdb-pre-ptid_t-2001-05-03:1.1.1.1
	insight-precleanup-2001-01-01:1.1.1.1
	gdb-post-protoization-2000-07-29:1.1.1.1
	gdb-pre-protoization-2000-07-29:1.1.1.1
	gdb-premipsmulti-2000-06-06-branch:1.1.1.1.0.4
	gdb-premipsmulti-2000-06-06-branchpoint:1.1.1.1
	gdb-post-params-removal-2000-06-04:1.1.1.1
	gdb-pre-params-removal-2000-06-04:1.1.1.1
	gdb-post-params-removal-2000-05-28:1.1.1.1
	gdb-pre-params-removal-2000-05-28:1.1.1.1
	gdb_5_0-2000-05-19-release:1.1.1.1
	gdb_4_18_2-2000-05-18-release:1.1.1.1
	gdb_4_95_1-2000-05-11-snapshot:1.1.1.1
	gdb_4_95_0-2000-04-27-snapshot:1.1.1.1
	gdb_5_0-2000-04-10-branch:1.1.1.1.0.2
	gdb_5_0-2000-04-10-branchpoint:1.1.1.1
	repo-unification-2000-02-06:1.1.1.1
	insight-2000-02-04:1.1.1.1
	gdb-2000-02-04:1.1.1.1
	gdb-2000-02-02:1.1.1.1
	gdb-2000-02-01:1.1.1.1
	gdb-2000-01-31:1.1.1.1
	gdb-2000-01-26:1.1.1.1
	gdb-2000-01-24:1.1.1.1
	gdb-2000-01-17:1.1.1.1
	gdb-2000-01-10:1.1.1.1
	gdb-2000-01-05:1.1.1.1
	gdb-1999-12-21:1.1.1.1
	gdb-1999-12-13:1.1.1.1
	gdb-1999-12-07:1.1.1.1
	gdb-1999-12-06:1.1.1.1
	gdb-1999-11-16:1.1.1.1
	gdb-1999-11-08:1.1.1.1
	gdb-1999-11-01:1.1.1.1
	gdb-1999-10-25:1.1.1.1
	gdb-1999-10-18:1.1.1.1
	gdb-1999-10-11:1.1.1.1
	gdb-1999-10-04:1.1.1.1
	gdb-1999-09-28:1.1.1.1
	gdb-1999-09-21:1.1.1.1
	gdb-1999-09-13:1.1.1.1
	gdb-1999-09-08:1.1.1.1
	gdb-1999-08-30:1.1.1.1
	gdb-1999-08-23:1.1.1.1
	gdb-1999-08-16:1.1.1.1
	SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.5
date	2002.05.04.15.18.21;	author cagney;	state dead;
branches;
next	1.4;

1.4
date	2002.01.19.03.48.21;	author cagney;	state Exp;
branches;
next	1.3;

1.3
date	2001.12.20.23.46.29;	author law;	state Exp;
branches;
next	1.2;

1.2
date	2001.12.20.23.37.33;	author law;	state Exp;
branches;
next	1.1;

1.1
date	99.08.16.19.55.54;	author jsm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.08.16.19.55.54;	author jsm;	state Exp;
branches;
next	;


desc
@@


1.5
log
@* gdb.base/default.exp: Remove obsolete code.
* gdb.c++/misc.exp: Ditto.  Update copyright.
* gdb.c++/cplusfuncs.exp: Ditto.  Update copyright.
* gdb.base/whatis.exp: Ditto.  Update copyright.
* gdb.base/scope.exp: Ditto.  Update copyright.
* gdb.base/ptype.exp: Ditto.  Update copyright.
* gdb.base/printcmds.exp: Ditto.  Update copyright.
* gdb.base/opaque.exp: Ditto.  Update copyright.
* gdb.base/list.exp: Ditto.
* gdb.base/funcargs.exp: Ditto.  Update copyright.
* gdb.hp/gdb.threads-hp/usrthbasic.c: Delete.
* gdb.hp/gdb.threads-hp/usrthbasic.exp: Delete.
* gdb.hp/gdb.threads-hp/usrthcore.c: Delete.
* gdb.hp/gdb.threads-hp/usrthcore.exp: Delete.
* gdb.hp/gdb.threads-hp/usrthfork.c: Delete.
* gdb.hp/gdb.threads-hp/usrthfork.exp: Delete.
@
text
@# OBSOLETE # usrthbasic.exp -- Expect script to test gdb with user threads
# OBSOLETE # Copyright (C) 1992 Free Software Foundation, Inc.
# OBSOLETE 
# OBSOLETE # This program is free software; you can redistribute it and/or modify
# OBSOLETE # it under the terms of the GNU General Public License as published by
# OBSOLETE # the Free Software Foundation; either version 2 of the License, or
# OBSOLETE # (at your option) any later version.
# OBSOLETE # 
# OBSOLETE # This program is distributed in the hope that it will be useful,
# OBSOLETE # but WITHOUT ANY WARRANTY; without even the implied warranty of
# OBSOLETE # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# OBSOLETE # GNU General Public License for more details.
# OBSOLETE # 
# OBSOLETE # You should have received a copy of the GNU General Public License
# OBSOLETE # along with this program; if not, write to the Free Software
# OBSOLETE # Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
# OBSOLETE 
# OBSOLETE # Please email any bugs, comments, and/or additions to this file to:
# OBSOLETE # bug-gdb@@prep.ai.mit.edu
# OBSOLETE 
# OBSOLETE # use this to debug:
# OBSOLETE #
# OBSOLETE #log_user 1
# OBSOLETE 
verbose "HP's thread tests are broken beyond repair right now." 
return 0
# OBSOLETE 
# OBSOLETE if $tracelevel {
# OBSOLETE     strace $tracelevel
# OBSOLETE }
# OBSOLETE 
# OBSOLETE if { [skip_hp_tests] } { continue }
# OBSOLETE 
# OBSOLETE if { ![istarget "hppa*-*-hpux*"] || [istarget "hppa64-*-*"] } {
# OBSOLETE     verbose "HPUX thread test ignored for non-hppa or PA64 targets."
# OBSOLETE     return 0
# OBSOLETE }
# OBSOLETE 
# OBSOLETE set testfile usrthbasic
# OBSOLETE set srcfile ${srcdir}/${subdir}/${testfile}.c
# OBSOLETE set binfile ${srcdir}/${subdir}/${testfile}
# OBSOLETE 
# OBSOLETE # To build the executable we need to link against the thread library.
# OBSOLETE #
# OBSOLETE #	/opt/ansic/bin/cc -Ae +DAportable -g -o usrthbasic -lcma usrthbasic.c
# OBSOLETE #
# OBSOLETE ## we have trouble building it on 11.0, so we use the prebuilt
# OBSOLETE ## executable instead.
# OBSOLETE ##
# OBSOLETE ##if { [gdb_compile "${srcdir}/${subdir}/${testfile}.c" "${binfile}" executable {debug additional_flags=-Ae ldflags=-lcma}] != "" } {
# OBSOLETE ##    gdb_suppress_entire_file "Testcase compile failed, so all tests in this file will automatically fail."
# OBSOLETE ##}
# OBSOLETE 
# OBSOLETE # We don't really seem to need longer waits.
# OBSOLETE #
# OBSOLETE ##set oldtimeout $timeout
# OBSOLETE ##set timeout [expr "$timeout + 0"]
# OBSOLETE ##set oldverbose $verbose
# OBSOLETE ##set verbose 40
# OBSOLETE 
# OBSOLETE #=========================
# OBSOLETE #
# OBSOLETE # Test looking at threads.
# OBSOLETE #
# OBSOLETE gdb_exit
# OBSOLETE gdb_start
# OBSOLETE gdb_reinitialize_dir $srcdir/$subdir
# OBSOLETE gdb_load ${binfile}
# OBSOLETE 
# OBSOLETE gdb_test "b main" ".*Breakpoint 1.*" "b main"
# OBSOLETE gdb_test "run" "Breakpoint 1, main.*:119.*" "run to main"
# OBSOLETE gdb_test "b thread1" ".*Breakpoint 2.*" "b thread1"
# OBSOLETE gdb_test "info threads" "\\* 1 system thread.*:119\[^(\]*" \
# OBSOLETE 	 "info threads at main"
# OBSOLETE gdb_test "c" "Breakpoint 2, thread1.*" "continue to thread1"
# OBSOLETE gdb_test "info threads" \
# OBSOLETE     "\\* 3 system thread.*thread1.*libcma.1.*libcma.1\[^(\]*" \
# OBSOLETE     "info threads at main"
# OBSOLETE gdb_test "b 165" "Breakpoint 3.*165.*" "break at main counter"
# OBSOLETE gdb_test "c" "Breakpoint 3, main.*" "continue to main counter"
# OBSOLETE gdb_test "info threads" "  4 system thread.*\\* 1 system thread.*main.*" \
# OBSOLETE     "info threads at main counter"
# OBSOLETE gdb_test "b 97" "Breakpoint 4.*97.*" "break at thread2 counter"
# OBSOLETE gdb_test "b 81" "Breakpoint 5.*81.*" "break at thread1 counter"
# OBSOLETE gdb_test "bt" "#0  main.* at \[^(\]*" "backtrace at main counter"
# OBSOLETE 
# OBSOLETE # After switching to thread 4, the cma scheduler should schedule it next
# OBSOLETE # and we should hit its breakpoint in thread2.
# OBSOLETE gdb_test "thread 4" ".Switching to thread 4.*cma__dispatch.*" \
# OBSOLETE 	 "switch to thread 4"
# OBSOLETE gdb_test "bt" "#0  .*thread2.*" "backtrace at thread 4"
# OBSOLETE sleep 1
# OBSOLETE gdb_test "c" ".*Breakpoint 4, thread2.*" "continue and get to thread 4"
# OBSOLETE 
# OBSOLETE # After switching to thread 1, the cma scheduler should schedule it next
# OBSOLETE # and we should hit its breakpoint (in main).
# OBSOLETE gdb_test "thread 1" ".*Switching to thread 1.*cma__dispatch.*" \
# OBSOLETE     "switch to thread 1"
# OBSOLETE sleep 1
# OBSOLETE gdb_test "c" ".*Breakpoint 3, main.*usrthbasic.c:165.*" \
# OBSOLETE     "continue and get to thread 1"
# OBSOLETE 
# OBSOLETE # Done!
# OBSOLETE #
# OBSOLETE gdb_exit
# OBSOLETE 
# OBSOLETE ##set timeout $oldtimeout
# OBSOLETE ##set verbose $oldverbose
# OBSOLETE 
# OBSOLETE return 0
@


1.4
log
@Mark testsuite/gdb.hp/gdb.threads-hp/ as obsolete.
@
text
@@


1.3
log
@        * gdb.hp/gdb.threads-hp/usrthbasic.exp: Disable completely.
        * gdb.hp/gdb.threads-hp/usrthcore.exp: Disable completely.
        * gdb.hp/gdb.threads-hp/usrthfork.exp: Disable completely.
@
text
@d1 24
a24 24
# usrthbasic.exp -- Expect script to test gdb with user threads
# Copyright (C) 1992 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */

# Please email any bugs, comments, and/or additions to this file to:
# bug-gdb@@prep.ai.mit.edu

# use this to debug:
#
#log_user 1

d27 84
a110 84

if $tracelevel {
    strace $tracelevel
}

if { [skip_hp_tests] } { continue }

if { ![istarget "hppa*-*-hpux*"] || [istarget "hppa64-*-*"] } {
    verbose "HPUX thread test ignored for non-hppa or PA64 targets."
    return 0
}

set testfile usrthbasic
set srcfile ${srcdir}/${subdir}/${testfile}.c
set binfile ${srcdir}/${subdir}/${testfile}

# To build the executable we need to link against the thread library.
#
#	/opt/ansic/bin/cc -Ae +DAportable -g -o usrthbasic -lcma usrthbasic.c
#
## we have trouble building it on 11.0, so we use the prebuilt
## executable instead.
##
##if { [gdb_compile "${srcdir}/${subdir}/${testfile}.c" "${binfile}" executable {debug additional_flags=-Ae ldflags=-lcma}] != "" } {
##    gdb_suppress_entire_file "Testcase compile failed, so all tests in this file will automatically fail."
##}

# We don't really seem to need longer waits.
#
##set oldtimeout $timeout
##set timeout [expr "$timeout + 0"]
##set oldverbose $verbose
##set verbose 40

#=========================
#
# Test looking at threads.
#
gdb_exit
gdb_start
gdb_reinitialize_dir $srcdir/$subdir
gdb_load ${binfile}

gdb_test "b main" ".*Breakpoint 1.*" "b main"
gdb_test "run" "Breakpoint 1, main.*:119.*" "run to main"
gdb_test "b thread1" ".*Breakpoint 2.*" "b thread1"
gdb_test "info threads" "\\* 1 system thread.*:119\[^(\]*" \
	 "info threads at main"
gdb_test "c" "Breakpoint 2, thread1.*" "continue to thread1"
gdb_test "info threads" \
    "\\* 3 system thread.*thread1.*libcma.1.*libcma.1\[^(\]*" \
    "info threads at main"
gdb_test "b 165" "Breakpoint 3.*165.*" "break at main counter"
gdb_test "c" "Breakpoint 3, main.*" "continue to main counter"
gdb_test "info threads" "  4 system thread.*\\* 1 system thread.*main.*" \
    "info threads at main counter"
gdb_test "b 97" "Breakpoint 4.*97.*" "break at thread2 counter"
gdb_test "b 81" "Breakpoint 5.*81.*" "break at thread1 counter"
gdb_test "bt" "#0  main.* at \[^(\]*" "backtrace at main counter"

# After switching to thread 4, the cma scheduler should schedule it next
# and we should hit its breakpoint in thread2.
gdb_test "thread 4" ".Switching to thread 4.*cma__dispatch.*" \
	 "switch to thread 4"
gdb_test "bt" "#0  .*thread2.*" "backtrace at thread 4"
sleep 1
gdb_test "c" ".*Breakpoint 4, thread2.*" "continue and get to thread 4"

# After switching to thread 1, the cma scheduler should schedule it next
# and we should hit its breakpoint (in main).
gdb_test "thread 1" ".*Switching to thread 1.*cma__dispatch.*" \
    "switch to thread 1"
sleep 1
gdb_test "c" ".*Breakpoint 3, main.*usrthbasic.c:165.*" \
    "continue and get to thread 1"

# Done!
#
gdb_exit

##set timeout $oldtimeout
##set verbose $oldverbose

return 0
@


1.2
log
@        * gdb.hp/gdb.base-hp/so-thresh.exp: Update text in expect strings
        to match current gdb output.  Update due to using auto-solib-limit
        for limiting instead of overloading auto-solib-add.
        * gdb.hp/gdb.base-hp/so-thresh.mk: Always use "cc" to build the
        test program.

        * gdb.c++/templates.exp: Use "hppa64-*-*", not "hppa2.0w-*-*"
        * gdb.hp/gdb.base-hp/dollar.exp: Likewise
        * gdb.hp/gdb.base-hp/pxdb.exp: Likewise.
        * gdb.hp/gdb.base-hp/reg-pa64.exp: Likewise.
        * gdb.hp/gdb.base-hp/reg.exp: Likewise.
        * gdb.hp/gdb.compat/xdb3.exp: Likewise.
        * gdb.hp/gdb.defects/bs15503.exp: Likewise.
        * gdb.hp/gdb.objdbg/objdbg01.exp: Likewise
        * gdb.hp/gdb.objdbg/objdbg02.exp: Likewise
        * gdb.hp/gdb.objdbg/objdbg03.exp: Likewise
        * gdb.hp/gdb.threads-hp/usrthbasic.exp: Likewise.
        * gdb.hp/gdb.threads-hp/usrthcore.exp: Likewise.
        * gdb.hp/gdb.threads-hp/usrthfork.exp: Likewise.
@
text
@d25 3
@


1.1
log
@Initial revision
@
text
@d31 1
a31 1
if { ![istarget "hppa*-*-hpux*"] || [istarget "hppa2.0w-*-*"] } {
@


1.1.1.1
log
@import gdb-1999-08-16 snapshot
@
text
@@
