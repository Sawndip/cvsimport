head	1.5;
access;
symbols
	gdb_7_6_1-2013-08-30-release:1.3
	gdb_7_6-2013-04-26-release:1.3
	gdb_7_6-branch:1.3.0.2
	gdb_7_6-2013-03-12-branchpoint:1.3;
locks; strict;
comment	@# @;


1.5
date	2013.05.30.00.25.16;	author qiyao;	state Exp;
branches;
next	1.4;

1.4
date	2013.03.15.01.41.29;	author qiyao;	state Exp;
branches;
next	1.3;

1.3
date	2013.01.01.06.41.24;	author brobecke;	state Exp;
branches;
next	1.2;

1.2
date	2012.11.20.02.55.10;	author qiyao;	state Exp;
branches;
next	1.1;

1.1
date	2012.08.09.12.53.46;	author qiyao;	state Exp;
branches;
next	;


desc
@@


1.5
log
@gdb/
	* mi/mi-cmds.c (mi_cmds): Define MI command
	'-exec-arguments' by macro DEF_MI_CMD_CLI_1 instead of
	DEF_MI_CMD_CLI.

gdb/testsuite/
	* gdb.mi/mi-cmd-param-changed.exp (test_command_param_changed):
	Add a test that no MI notification is emitted when executing
	-exec-arguments.
@
text
@# Copyright 2012-2013 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

load_lib mi-support.exp
set MIFLAGS "-i=mi"

standard_testfile basics.c

if  { [gdb_compile "${srcdir}/${subdir}/${srcfile}" "${binfile}" executable {debug}] != "" } {
     untested mi-cmd-param-changed.exp
     return -1
}

proc test_command_param_changed { } {
    with_test_prefix "cmd param" {
	if [mi_gdb_start] {
	    return
	}
	mi_run_to_main

	foreach opt { "on" "off" "step" } {
	    mi_gdb_test "set scheduler-locking ${opt}" \
		".*=cmd-param-changed,param=\"scheduler-locking\",value=\"${opt}\".*\\^done" \
		"\"set scheduler-locking ${opt}\""
	}
	foreach opt { "on" "off" "step" } {
	    mi_gdb_test "interpreter-exec console \"set scheduler-locking ${opt}\"" \
		".*=cmd-param-changed,param=\"scheduler-locking\",value=\"${opt}\".*\\^done" \
		"interpreter-exec \"set scheduler-locking ${opt}\""
	}
	# Don't emit MI notification for request from MI.
	mi_gdb_test "-gdb-set scheduler-locking on" \
	    {\^done} \
	    "\"set scheduler-locking on\" no event (requested by MI)"
	mi_gdb_test "-exec-arguments foo" {\^done} \
	    "\"-exec-arguments foo\" no event"

	mi_gdb_test "interpreter-exec mi \"-gdb-set scheduler-locking step\"" \
	    "\\&\"interpreter-exec mi .*\"-gdb-set scheduler-locking step.*\"\\\\n\"\r\n\\^done\r\n\\^done" \
	    "\"set scheduler-locking step\" no event (requested by MI interp)"
	mi_gdb_test "set scheduler-locking step" \
	    "\\&\"set scheduler-locking step\\\\n\"\r\n\\^done" \
	    "\"set scheduler-locking stepr\" no event"


	foreach command { "remotecache" "check type" } {

	    # The default value of each command option may be different, so we first
	    # set it to 'off', and this may or may not trigger MI notification.
	    mi_gdb_test "set ${command} off" ".*\\^done" "\"set ${command}\" warmup"

	    foreach boolean_opt { "on" "off" } {
		mi_gdb_test "set ${command} ${boolean_opt}" \
		    ".*=cmd-param-changed,param=\"${command}\",value=\"${boolean_opt}\".*\\^done" \
		    "\"set ${command} ${boolean_opt}\""
	    }
	    mi_gdb_test "set ${command} off" \
		"\\&\"set ${command} off\\\\n\"\r\n\\^done" \
		"\"set ${command}\" no event"
	}


	foreach command { "trace-notes" "remote exec-file" } {
	    foreach str_opt { "foo" "bar" } {
		mi_gdb_test "set ${command} ${str_opt}" \
		    ".*=cmd-param-changed,param=\"${command}\",value=\"${str_opt}\".*\\^done" \
		    "\"set ${command} ${str_opt}\""
	    }
	    mi_gdb_test "set ${command} bar" \
		"\\&\"set ${command} bar\\\\n\"\r\n(\\&\"warning.*|)\\^done" \
		"\"set ${command} bar\" no event"
	}

	# No notification is emitted for 'maint set' commands.
	foreach boolean_opt { "on" "off" } {
	    mi_gdb_test "maint set profile ${boolean_opt}" \
		"\\&\"maint set profile ${boolean_opt}\\\\n\"\r\n\\^done" \
		"\"maint set profile ${boolean_opt}\""
	}

	# Full command parameters are included in the notification when a
	# abbreviated one is typed.
	mi_gdb_test "set ch type on" \
	    ".*=cmd-param-changed,param=\"check type\",value=\"on\".*\\^done" \
	    "\"set ch type on\""

	mi_gdb_exit
    }
}

test_command_param_changed

return 0
@


1.4
log
@gdb/testsuite/
	* gdb.threads/non-ldr-exc-1.exp (do_test): Fix the indent of
	using with_test_prefix.
	* gdb.threads/non-ldr-exc-2.exp (do_test): Likewise.
	* gdb.threads/non-ldr-exc-3.exp (do_test): Likewise.
	* gdb.threads/non-ldr-exc-4.exp (do_test): Likewise.
	* gdb.threads/watchpoint-fork.exp (test): Likewise.
	* gdb.base/break-interp.exp (test_core): Likewise.
	(test_attach_gdb): Likewise.
	* gdb.base/catch-load.exp (one_catch_load_test): Likewise.
	* gdb.base/disp-step-syscall.exp (disp_step_cross_syscall):
	Likewise.
	* gdb.base/jit-so.exp (one_jit_test): Likewise.
	* gdb.base/jit.exp (one_jit_test): Likewise.
	* gdb.base/sepdebug.exp (test_different_dir): Likewise.
	* gdb.dwarf2/dw2-dir-file-name.exp (test): Likewise.
	* gdb.dwarf2/dw2-noloc.exp (file_symbols): Likewise.
	* gdb.mi/mi-breakpoint-changed.exp (test_pending_resolved):
	Likewise.
	* gdb.mi/mi-cmd-param-changed.exp (test_command_param_changed):
	Likewise.
	* gdb.mi/mi-watch.exp test_watchpoint_all): Likewise.
	* gdb.mi/pr11022.exp (test_memory_changed_observer): Likewise.
	* gdb.trace/change-loc.exp (tracepoint_change_loc_1): Likewise.
	(tracepoint_change_loc_2): Likewise.
	* gdb.trace/disconnected-tracing.exp (disconnected_tracing):
	Likewise.
	(disconnected_tfind): Likewise.
	* gdb.trace/mi-traceframe-changed.exp (test_tfind_tfile):
	Likewise.
	(test_tfind_remote): Likewise.
	* gdb.trace/mi-tracepoint-changed.exp (test_reconnect):
	Likewise.
	(test_pending_resolved): Likewise.
	* gdb.trace/mi-tsv-changed.exp (test_create_delete_modify_tsv):
	Likewise.
	(test_upload_tsv): Likewise.
	* gdb.trace/pending.exp (pending_tracepoint_resolved):
	Likewise.
	(pending_tracepoint_works): Likewise.
	* gdb.trace/report.exp (use_collected_data): Likewise.
	* gdb.trace/status-stop.exp (test_tstart_tstop_tstart):
	Likewise.
	(test_tstart_tstart, test_buffer_full_tstart): Likewise.
	* gdb.trace/strace.exp (strace_info_marker): Likewise.
	(strace_trace_on_same_addr): Likewise.
	(strace_trace_on_diff_addr): Likewise.
	* gdb.trace/unavailable.exp (gdb_collect_args_test): Likewise.
	(gdb_collect_locals_test): Likewise.
	(gdb_unavailable_registers_test): Likewise.
	(gdb_collect_globals_test): Likewise.
@
text
@d47 2
@


1.3
log
@Update years in copyright notice for the GDB files.

Two modifications:
  1. The addition of 2013 to the copyright year range for every file;
  2. The use of a single year range, instead of potentially multiple
     year ranges, as approved by the FSF.
@
text
@d26 46
a71 5
proc test_command_param_changed { } { with_test_prefix "cmd param" {
    if [mi_gdb_start] {
	return
    }
    mi_run_to_main
d73 10
a82 28
    foreach opt { "on" "off" "step" } {
	mi_gdb_test "set scheduler-locking ${opt}" \
	    ".*=cmd-param-changed,param=\"scheduler-locking\",value=\"${opt}\".*\\^done" \
	    "\"set scheduler-locking ${opt}\""
    }
    foreach opt { "on" "off" "step" } {
	mi_gdb_test "interpreter-exec console \"set scheduler-locking ${opt}\"" \
	    ".*=cmd-param-changed,param=\"scheduler-locking\",value=\"${opt}\".*\\^done" \
	    "interpreter-exec \"set scheduler-locking ${opt}\""
    }
    # Don't emit MI notification for request from MI.
    mi_gdb_test "-gdb-set scheduler-locking on" \
	{\^done} \
	"\"set scheduler-locking on\" no event (requested by MI)"

    mi_gdb_test "interpreter-exec mi \"-gdb-set scheduler-locking step\"" \
	"\\&\"interpreter-exec mi .*\"-gdb-set scheduler-locking step.*\"\\\\n\"\r\n\\^done\r\n\\^done" \
	"\"set scheduler-locking step\" no event (requested by MI interp)"
    mi_gdb_test "set scheduler-locking step" \
	"\\&\"set scheduler-locking step\\\\n\"\r\n\\^done" \
	"\"set scheduler-locking stepr\" no event"


    foreach command { "remotecache" "check type" } {

	# The default value of each command option may be different, so we first
	# set it to 'off', and this may or may not trigger MI notification.
	mi_gdb_test "set ${command} off" ".*\\^done" "\"set ${command}\" warmup"
d84 1
d86 4
a89 8
	    mi_gdb_test "set ${command} ${boolean_opt}" \
		".*=cmd-param-changed,param=\"${command}\",value=\"${boolean_opt}\".*\\^done" \
		"\"set ${command} ${boolean_opt}\""
	}
	mi_gdb_test "set ${command} off" \
	    "\\&\"set ${command} off\\\\n\"\r\n\\^done" \
	    "\"set ${command}\" no event"
    }
d91 5
d97 1
a97 9
    foreach command { "trace-notes" "remote exec-file" } {
	foreach str_opt { "foo" "bar" } {
	    mi_gdb_test "set ${command} ${str_opt}" \
		".*=cmd-param-changed,param=\"${command}\",value=\"${str_opt}\".*\\^done" \
		"\"set ${command} ${str_opt}\""
	}
	mi_gdb_test "set ${command} bar" \
	    "\\&\"set ${command} bar\\\\n\"\r\n(\\&\"warning.*|)\\^done" \
	    "\"set ${command} bar\" no event"
d99 1
a99 16

    # No notification is emitted for 'maint set' commands.
    foreach boolean_opt { "on" "off" } {
	mi_gdb_test "maint set profile ${boolean_opt}" \
	    "\\&\"maint set profile ${boolean_opt}\\\\n\"\r\n\\^done" \
	    "\"maint set profile ${boolean_opt}\""
    }

    # Full command parameters are included in the notification when a
    # abbreviated one is typed.
    mi_gdb_test "set ch type on" \
	".*=cmd-param-changed,param=\"check type\",value=\"on\".*\\^done" \
	"\"set ch type on\""

    mi_gdb_exit
}}
@


1.2
log
@gdb/testsuite/
2012-11-20  Yao Qi  <yao@@codesourcery.com>

	* gdb.mi/mi-cmd-param-changed.exp (test_command_param_changed):
	Don't test 'maint set show-debug-regs'.
	Use command 'set remotecache' instead of
	'set circular-trace-buffer'.
@
text
@d1 1
a1 1
# Copyright 2012 Free Software Foundation, Inc.
@


1.1
log
@gdb/

	* cli/cli-decode.c (set_cmd_prefix): New.
	(lookup_cmd_for_prefixlist): New.
	(add_prefix_cmd): Call set_cmd_prefix and update field 'prefix'
	of each cmd_list_element in *prefixlist.
	(add_setshow_cmd_full): set_cmd_prefix.
	(add_alias_cmd): Likewise.
	* cli/cli-decode.h (struct cmd_list_element) <prefix>: New field.
	Declare 'auto_boolean_enums'.
	* cli/cli-setshow.c: Include "observer.h".
	(notify_command_param_changed_p): New.
	(add_setshow_auto_boolean_cmd): Move auto_boolean_enums out.
	Remove 'static'.
	(do_setshow_command): Split it to ...
	(do_set_command, do_show_command): ... them.  New.
	(do_set_command): Call observer_notify_command_param_changed if
	notify_command_param_changed_p returns true.
	(cmd_show_list): Caller update.
	* auto-load.c (set_auto_load_cmd): Likewise.
	* remote.c (show_remote_cmd): Likewise.
	* cli/cli-setshow.h: Update declarations.
	* top.c (execute_command): Call do_set_command and do_show_command.

	* NEWS: Mention new MI notification.
	* mi/mi-interp.c: Declare mi_command_param_changed.
	(mi_interpreter_init): Attach mi_command_param_changed to
	observer command_param_changed.
	(mi_command_param_changed): New.
	Remove mi_suppress_breakpoint_notifications.
	Define global variable mi_suppress_notification.
	(mi_breakpoint_created): Update.
	(mi_breakpoint_deleted): Likewise.
	(mi_breakpoint_modified): Likewise.
	* mi/mi-main.c (mi_cmd_execute): Likewise.  Check command
	'gdb-set' and set mi_suppress_notification.
	* mi/mi-main.h: (mi_suppress_notification): New struct.

gdb/doc/

	* observer.texi: New observer command_param_changed.
	* gdb.texinfo (GDB/MI Async Records): Doc for '=cmd-param-changed'.

gdb/testsuite/

	* gdb.mi/mi-cmd-param-changed.exp: New.
	* gdb.mi/mi-cli.exp: Update for MI notification "=cmd-param-changed".
	* gdb.mi/mi-var-rtti.exp, gdb.mi/mi2-cli.exp: Likewise.
	* gdb.mi/mi2-prompt.exp: Likewise.
@
text
@d55 1
a55 1
    foreach command { "circular-trace-buffer" "check type" } {
d84 4
a87 6
    foreach command { "profile" "show-debug-regs" } {
	foreach boolean_opt { "on" "off" } {
	    mi_gdb_test "maint set ${command} ${boolean_opt}" \
		"\\&\"maint set ${command} ${boolean_opt}\\\\n\"\r\n\\^done" \
		"\"maint set ${command} ${boolean_opt}\""
	}
@

