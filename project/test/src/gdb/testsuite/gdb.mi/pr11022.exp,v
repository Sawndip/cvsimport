head	1.3;
access;
symbols
	gdb_7_6_1-2013-08-30-release:1.2
	gdb_7_6-2013-04-26-release:1.2
	gdb_7_6-branch:1.2.0.2
	gdb_7_6-2013-03-12-branchpoint:1.2;
locks; strict;
comment	@# @;


1.3
date	2013.03.15.01.41.29;	author qiyao;	state Exp;
branches;
next	1.2;

1.2
date	2013.01.01.06.41.24;	author brobecke;	state Exp;
branches;
next	1.1;

1.1
date	2012.09.28.00.39.18;	author qiyao;	state Exp;
branches;
next	;


desc
@@


1.3
log
@gdb/testsuite/
	* gdb.threads/non-ldr-exc-1.exp (do_test): Fix the indent of
	using with_test_prefix.
	* gdb.threads/non-ldr-exc-2.exp (do_test): Likewise.
	* gdb.threads/non-ldr-exc-3.exp (do_test): Likewise.
	* gdb.threads/non-ldr-exc-4.exp (do_test): Likewise.
	* gdb.threads/watchpoint-fork.exp (test): Likewise.
	* gdb.base/break-interp.exp (test_core): Likewise.
	(test_attach_gdb): Likewise.
	* gdb.base/catch-load.exp (one_catch_load_test): Likewise.
	* gdb.base/disp-step-syscall.exp (disp_step_cross_syscall):
	Likewise.
	* gdb.base/jit-so.exp (one_jit_test): Likewise.
	* gdb.base/jit.exp (one_jit_test): Likewise.
	* gdb.base/sepdebug.exp (test_different_dir): Likewise.
	* gdb.dwarf2/dw2-dir-file-name.exp (test): Likewise.
	* gdb.dwarf2/dw2-noloc.exp (file_symbols): Likewise.
	* gdb.mi/mi-breakpoint-changed.exp (test_pending_resolved):
	Likewise.
	* gdb.mi/mi-cmd-param-changed.exp (test_command_param_changed):
	Likewise.
	* gdb.mi/mi-watch.exp test_watchpoint_all): Likewise.
	* gdb.mi/pr11022.exp (test_memory_changed_observer): Likewise.
	* gdb.trace/change-loc.exp (tracepoint_change_loc_1): Likewise.
	(tracepoint_change_loc_2): Likewise.
	* gdb.trace/disconnected-tracing.exp (disconnected_tracing):
	Likewise.
	(disconnected_tfind): Likewise.
	* gdb.trace/mi-traceframe-changed.exp (test_tfind_tfile):
	Likewise.
	(test_tfind_remote): Likewise.
	* gdb.trace/mi-tracepoint-changed.exp (test_reconnect):
	Likewise.
	(test_pending_resolved): Likewise.
	* gdb.trace/mi-tsv-changed.exp (test_create_delete_modify_tsv):
	Likewise.
	(test_upload_tsv): Likewise.
	* gdb.trace/pending.exp (pending_tracepoint_resolved):
	Likewise.
	(pending_tracepoint_works): Likewise.
	* gdb.trace/report.exp (use_collected_data): Likewise.
	* gdb.trace/status-stop.exp (test_tstart_tstop_tstart):
	Likewise.
	(test_tstart_tstart, test_buffer_full_tstart): Likewise.
	* gdb.trace/strace.exp (strace_info_marker): Likewise.
	(strace_trace_on_same_addr): Likewise.
	(strace_trace_on_diff_addr): Likewise.
	* gdb.trace/unavailable.exp (gdb_collect_args_test): Likewise.
	(gdb_collect_locals_test): Likewise.
	(gdb_unavailable_registers_test): Likewise.
	(gdb_collect_globals_test): Likewise.
@
text
@# Copyright 2009-2013 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

if {[skip_hw_watchpoint_tests]} {
    return 0
}

load_lib mi-support.exp
set MIFLAGS "-i=mi"

standard_testfile .c

if  { [gdb_compile "${srcdir}/${subdir}/${srcfile}" "${binfile}" executable {debug}] != "" } {
     untested pr11022.exp
     return
}

proc test_memory_changed_observer { mi_command } {
    with_test_prefix "${mi_command}" {
	global srcfile

	if [mi_gdb_start] {
	    return
	}
	mi_run_to_main

	set line_number [gdb_get_line_number "break here"]
	mi_gdb_test "-break-insert ${srcfile}:${line_number}" \
	    {\^done,bkpt=.number="2",type="breakpoint".*\}} \
	    "set breakpoint"

	mi_gdb_test "watch x" ".*" "set watchpoint"

	mi_execute_to "exec-continue" "breakpoint-hit" "main" "" ".*" ".*" \
	    { "" "disp=\"keep\"" } "breakpoint hit"

	mi_execute_to "exec-continue" "watchpoint-trigger" "main" "" ".*" ".*" \
	    { "" "wpt=\{number=\"3\",exp=\"x\"\},value=\{old=\"0\",new=\"42\"\}" } \
	    "watchpoint hit"

	mi_execute_to "exec-continue" "breakpoint-hit" "main" "" ".*" ".*" \
	    { "" "disp=\"keep\"" } "breakpoint hit 2"

	mi_gdb_test "-${mi_command}" {\^done} "set x"

	mi_execute_to "exec-continue" "watchpoint-trigger" "main" "" ".*" ".*" \
	    { "" "wpt=\{number=\"3\",exp=\"x\"\},value=\{old=\"1\",new=\"42\"\}" } \
	    "watchpoint hit 2"

	mi_gdb_exit
    }
}

test_memory_changed_observer "data-write-memory-bytes &x \"01\""
# We want to trigger a target memory write here, so the word size (4 or 8)
# is not that important.
test_memory_changed_observer "data-write-memory &x x 4 \"01\""
@


1.2
log
@Update years in copyright notice for the GDB files.

Two modifications:
  1. The addition of 2013 to the copyright year range for every file;
  2. The use of a single year range, instead of potentially multiple
     year ranges, as approved by the FSF.
@
text
@d30 3
a32 2
proc test_memory_changed_observer { mi_command } { with_test_prefix "${mi_command}" {
    global srcfile
d34 4
a37 4
    if [mi_gdb_start] {
	return
    }
    mi_run_to_main
d39 4
a42 4
    set line_number [gdb_get_line_number "break here"]
    mi_gdb_test "-break-insert ${srcfile}:${line_number}" \
	{\^done,bkpt=.number="2",type="breakpoint".*\}} \
	"set breakpoint"
d44 1
a44 1
    mi_gdb_test "watch x" ".*" "set watchpoint"
d46 2
a47 2
    mi_execute_to "exec-continue" "breakpoint-hit" "main" "" ".*" ".*" \
	{ "" "disp=\"keep\"" } "breakpoint hit"
d49 3
a51 3
    mi_execute_to "exec-continue" "watchpoint-trigger" "main" "" ".*" ".*" \
	{ "" "wpt=\{number=\"3\",exp=\"x\"\},value=\{old=\"0\",new=\"42\"\}" } \
	"watchpoint hit"
d53 2
a54 2
    mi_execute_to "exec-continue" "breakpoint-hit" "main" "" ".*" ".*" \
	{ "" "disp=\"keep\"" } "breakpoint hit 2"
d56 1
a56 1
    mi_gdb_test "-${mi_command}" {\^done} "set x"
d58 3
a60 3
    mi_execute_to "exec-continue" "watchpoint-trigger" "main" "" ".*" ".*" \
	{ "" "wpt=\{number=\"3\",exp=\"x\"\},value=\{old=\"1\",new=\"42\"\}" } \
	"watchpoint hit 2"
d62 3
a64 2
    mi_gdb_exit
}}
@


1.1
log
@gdb/
	* mi/mi-main.c (mi_cmd_data_write_memory): Call
	write_memory_with_notification instead of write_memory.
	(mi_cmd_data_write_memory_bytes): Call write_memory_with_notification
	instead of target_write_memory.

gdb/testsuite/
	* gdb.mi/pr11022.exp: New.
	* gdb.mi/pr11022.c: New.  Copied from gdb.base/.
@
text
@d1 1
a1 1
# Copyright 2009-2012 Free Software Foundation, Inc.
@

