head	1.23;
access;
symbols
	gdb_7_6_1-2013-08-30-release:1.21
	gdb_7_6-2013-04-26-release:1.21
	gdb_7_6-branch:1.21.0.2
	gdb_7_6-2013-03-12-branchpoint:1.21
	gdb_7_5_1-2012-11-29-release:1.19
	gdb_7_5-2012-08-17-release:1.19
	gdb_7_5-branch:1.19.0.2
	gdb_7_5-2012-07-18-branchpoint:1.19
	gdb_7_4_1-2012-04-26-release:1.17.4.1
	gdb_7_4-2012-01-24-release:1.17.4.1
	gdb_7_4-branch:1.17.0.4
	gdb_7_4-2011-12-13-branchpoint:1.17
	gdb_7_3_1-2011-09-04-release:1.17
	gdb_7_3-2011-07-26-release:1.17
	gdb_7_3-branch:1.17.0.2
	gdb_7_3-2011-04-01-branchpoint:1.17
	gdb_7_2-2010-09-02-release:1.16
	gdb_7_2-branch:1.16.0.2
	gdb_7_2-2010-07-07-branchpoint:1.16
	gdb_7_1-2010-03-18-release:1.14
	gdb_7_1-branch:1.14.0.2
	gdb_7_1-2010-02-18-branchpoint:1.14
	gdb_7_0_1-2009-12-22-release:1.13
	gdb_7_0-2009-10-06-release:1.13
	gdb_7_0-branch:1.13.0.4
	gdb_7_0-2009-09-16-branchpoint:1.13
	arc-sim-20090309:1.11
	msnyder-checkpoint-072509-branch:1.13.0.2
	msnyder-checkpoint-072509-branchpoint:1.13
	arc-insight_6_8-branch:1.11.0.16
	arc-insight_6_8-branchpoint:1.11
	insight_6_8-branch:1.11.0.14
	insight_6_8-branchpoint:1.11
	reverse-20081226-branch:1.11.0.12
	reverse-20081226-branchpoint:1.11
	multiprocess-20081120-branch:1.11.0.10
	multiprocess-20081120-branchpoint:1.11
	reverse-20080930-branch:1.11.0.8
	reverse-20080930-branchpoint:1.11
	reverse-20080717-branch:1.11.0.6
	reverse-20080717-branchpoint:1.11
	msnyder-reverse-20080609-branch:1.11.0.4
	msnyder-reverse-20080609-branchpoint:1.11
	drow-reverse-20070409-branch:1.9.0.2
	drow-reverse-20070409-branchpoint:1.9
	gdb_6_8-2008-03-27-release:1.11
	gdb_6_8-branch:1.11.0.2
	gdb_6_8-2008-02-26-branchpoint:1.11
	gdb_6_7_1-2007-10-29-release:1.10
	gdb_6_7-2007-10-10-release:1.10
	gdb_6_7-branch:1.10.0.2
	gdb_6_7-2007-09-07-branchpoint:1.10
	insight_6_6-20070208-release:1.7.30.1
	gdb_6_6-2006-12-18-release:1.7.30.1
	gdb_6_6-branch:1.7.0.30
	gdb_6_6-2006-11-15-branchpoint:1.7
	insight_6_5-20061003-release:1.7
	gdb-csl-symbian-6_4_50_20060226-12:1.7
	gdb-csl-sourcerygxx-3_4_4-25:1.7
	nickrob-async-20060828-mergepoint:1.7
	gdb-csl-symbian-6_4_50_20060226-11:1.7
	gdb-csl-sourcerygxx-4_1-17:1.7
	gdb-csl-20060226-branch-local-2:1.7
	gdb-csl-sourcerygxx-4_1-14:1.7
	gdb-csl-sourcerygxx-4_1-13:1.7
	gdb-csl-sourcerygxx-4_1-12:1.7
	gdb-csl-sourcerygxx-3_4_4-21:1.7
	gdb_6_5-20060621-release:1.7
	gdb-csl-sourcerygxx-4_1-9:1.7
	gdb-csl-sourcerygxx-4_1-8:1.7
	gdb-csl-sourcerygxx-4_1-7:1.7
	gdb-csl-arm-2006q1-6:1.7
	gdb-csl-sourcerygxx-4_1-6:1.7
	gdb-csl-symbian-6_4_50_20060226-10:1.7
	gdb-csl-symbian-6_4_50_20060226-9:1.7
	gdb-csl-symbian-6_4_50_20060226-8:1.7
	gdb-csl-coldfire-4_1-11:1.7
	gdb-csl-sourcerygxx-3_4_4-19:1.7
	gdb-csl-coldfire-4_1-10:1.7
	gdb_6_5-branch:1.7.0.28
	gdb_6_5-2006-05-14-branchpoint:1.7
	gdb-csl-sourcerygxx-4_1-5:1.7
	nickrob-async-20060513-branch:1.7.0.26
	nickrob-async-20060513-branchpoint:1.7
	gdb-csl-sourcerygxx-4_1-4:1.7
	msnyder-reverse-20060502-branch:1.7.0.24
	msnyder-reverse-20060502-branchpoint:1.7
	gdb-csl-morpho-4_1-4:1.7
	gdb-csl-sourcerygxx-3_4_4-17:1.7
	readline_5_1-import-branch:1.7.0.22
	readline_5_1-import-branchpoint:1.7
	gdb-csl-20060226-branch-merge-to-csl-symbian-1:1.7
	gdb-csl-symbian-20060226-branch:1.7.0.20
	gdb-csl-symbian-20060226-branchpoint:1.7
	gdb-csl-20060226-branch-merge-to-csl-local-1:1.7
	msnyder-reverse-20060331-branch:1.7.0.18
	msnyder-reverse-20060331-branchpoint:1.7
	gdb-csl-available-20060303-branch:1.7.0.16
	gdb-csl-available-20060303-branchpoint:1.7
	gdb-csl-20060226-branch:1.7.0.14
	gdb-csl-20060226-branchpoint:1.7
	gdb_6_4-20051202-release:1.7
	msnyder-fork-checkpoint-branch:1.7.0.12
	msnyder-fork-checkpoint-branchpoint:1.7
	gdb-csl-gxxpro-6_3-branch:1.7.0.10
	gdb-csl-gxxpro-6_3-branchpoint:1.7
	gdb_6_4-branch:1.7.0.8
	gdb_6_4-2005-11-01-branchpoint:1.7
	gdb-csl-arm-20051020-branch:1.7.0.6
	gdb-csl-arm-20051020-branchpoint:1.7
	gdb-csl-arm-20050325-2005-q1b:1.7
	gdb-csl-arm-20050325-2005-q1a:1.7
	csl-arm-20050325-branch:1.7.0.4
	csl-arm-20050325-branchpoint:1.7
	gdb-post-i18n-errorwarning-20050211:1.7
	gdb-pre-i18n-errorwarning-20050211:1.7
	gdb_6_3-20041109-release:1.7
	gdb_6_3-branch:1.7.0.2
	gdb_6_3-20041019-branchpoint:1.7
	drow_intercu-merge-20040921:1.7
	drow_intercu-merge-20040915:1.7
	jimb-gdb_6_2-e500-branch:1.3.0.6
	jimb-gdb_6_2-e500-branchpoint:1.3
	gdb_6_2-20040730-release:1.3
	gdb_6_2-branch:1.3.0.2
	gdb_6_2-2004-07-10-gmt-branchpoint:1.3
	gdb_6_1_1-20040616-release:1.2
	gdb_6_1-2004-04-05-release:1.2
	drow_intercu-merge-20040402:1.2
	drow_intercu-merge-20040327:1.2
	ezannoni_pie-20040323-branch:1.2.0.18
	ezannoni_pie-20040323-branchpoint:1.2
	cagney_tramp-20040321-mergepoint:1.2
	cagney_tramp-20040309-branch:1.2.0.16
	cagney_tramp-20040309-branchpoint:1.2
	gdb_6_1-branch:1.2.0.14
	gdb_6_1-2004-03-01-gmt-branchpoint:1.2
	drow_intercu-20040221-branch:1.2.0.12
	drow_intercu-20040221-branchpoint:1.2
	cagney_bfdfile-20040213-branch:1.2.0.10
	cagney_bfdfile-20040213-branchpoint:1.2
	drow-cplus-merge-20040208:1.2
	carlton_dictionary-20040126-merge:1.2
	cagney_bigcore-20040122-branch:1.2.0.8
	cagney_bigcore-20040122-branchpoint:1.2
	drow-cplus-merge-20040113:1.2
	drow-cplus-merge-20031224:1.2
	drow-cplus-merge-20031220:1.2
	carlton_dictionary-20031215-merge:1.2
	drow-cplus-branch:1.2.0.6
	drow-cplus-merge-20031214:1.2
	carlton-dictionary-20031111-merge:1.2
	gdb_6_0-2003-10-04-release:1.1
	kettenis_sparc-20030918-branch:1.2.0.4
	kettenis_sparc-20030918-branchpoint:1.2
	carlton_dictionary-20030917-merge:1.2
	ezannoni_pie-20030916-branchpoint:1.2
	ezannoni_pie-20030916-branch:1.2.0.2
	cagney_x86i386-20030821-branch:1.1.0.26
	cagney_x86i386-20030821-branchpoint:1.1
	carlton_dictionary-20030805-merge:1.1
	carlton_dictionary-20030627-merge:1.1
	gdb_6_0-branch:1.1.0.24
	gdb_6_0-2003-06-23-branchpoint:1.1
	jimb-ppc64-linux-20030613-branch:1.1.0.22
	jimb-ppc64-linux-20030613-branchpoint:1.1
	cagney_convert-20030606-branch:1.1.0.20
	cagney_convert-20030606-branchpoint:1.1
	cagney_writestrings-20030508-branch:1.1.0.18
	cagney_writestrings-20030508-branchpoint:1.1
	jimb-ppc64-linux-20030528-branch:1.1.0.16
	jimb-ppc64-linux-20030528-branchpoint:1.1
	carlton_dictionary-20030523-merge:1.1
	cagney_fileio-20030521-branch:1.1.0.14
	cagney_fileio-20030521-branchpoint:1.1
	kettenis_i386newframe-20030517-mergepoint:1.1
	jimb-ppc64-linux-20030509-branch:1.1.0.12
	jimb-ppc64-linux-20030509-branchpoint:1.1
	kettenis_i386newframe-20030504-mergepoint:1.1
	carlton_dictionary-20030430-merge:1.1
	kettenis_i386newframe-20030419-branch:1.1.0.10
	kettenis_i386newframe-20030419-branchpoint:1.1
	carlton_dictionary-branch:1.1.0.8
	carlton_dictionary-20030416-merge:1.1
	cagney_frameaddr-20030409-mergepoint:1.1
	kettenis_i386newframe-20030406-branch:1.1.0.6
	kettenis_i386newframe-20030406-branchpoint:1.1
	cagney_frameaddr-20030403-branchpoint:1.1
	cagney_frameaddr-20030403-branch:1.1.0.4
	cagney_framebase-20030326-branch:1.1.0.2
	cagney_framebase-20030330-mergepoint:1.1;
locks; strict;
comment	@# @;


1.23
date	2013.06.18.14.12.09;	author tromey;	state Exp;
branches;
next	1.22;

1.22
date	2013.05.07.18.06.16;	author tromey;	state Exp;
branches;
next	1.21;

1.21
date	2013.01.01.06.41.22;	author brobecke;	state Exp;
branches;
next	1.20;

1.20
date	2012.09.08.05.29.21;	author khooyp;	state Exp;
branches;
next	1.19;

1.19
date	2012.01.16.16.21.45;	author palves;	state Exp;
branches;
next	1.18;

1.18
date	2012.01.04.08.17.51;	author brobecke;	state Exp;
branches;
next	1.17;

1.17
date	2011.01.01.15.33.45;	author brobecke;	state Exp;
branches
	1.17.4.1;
next	1.16;

1.16
date	2010.06.02.21.46.45;	author msnyder;	state Exp;
branches;
next	1.15;

1.15
date	2010.05.05.18.07.00;	author brobecke;	state Exp;
branches;
next	1.14;

1.14
date	2010.01.01.07.32.02;	author brobecke;	state Exp;
branches;
next	1.13;

1.13
date	2009.02.17.19.52.27;	author vprus;	state Exp;
branches;
next	1.12;

1.12
date	2009.01.03.05.58.04;	author brobecke;	state Exp;
branches;
next	1.11;

1.11
date	2008.01.01.22.53.19;	author drow;	state Exp;
branches;
next	1.10;

1.10
date	2007.08.23.18.14.18;	author brobecke;	state Exp;
branches;
next	1.9;

1.9
date	2007.01.09.17.59.12;	author drow;	state Exp;
branches;
next	1.8;

1.8
date	2006.11.22.17.19.52;	author uweigand;	state Exp;
branches;
next	1.7;

1.7
date	2004.09.10.01.04.59;	author chastain;	state Exp;
branches
	1.7.30.1;
next	1.6;

1.6
date	2004.09.01.19.55.00;	author manjo;	state Exp;
branches;
next	1.5;

1.5
date	2004.08.28.23.55.48;	author chastain;	state Exp;
branches;
next	1.4;

1.4
date	2004.07.13.14.36.44;	author cagney;	state Exp;
branches;
next	1.3;

1.3
date	2004.04.16.17.29.42;	author brobecke;	state Exp;
branches;
next	1.2;

1.2
date	2003.08.30.04.58.21;	author chastain;	state Exp;
branches
	1.2.6.1
	1.2.12.1;
next	1.1;

1.1
date	2003.03.27.20.13.28;	author brobecke;	state Exp;
branches
	1.1.2.1
	1.1.8.1;
next	;

1.17.4.1
date	2012.01.06.04.44.06;	author brobecke;	state Exp;
branches;
next	;

1.7.30.1
date	2006.11.24.19.56.30;	author uweigand;	state Exp;
branches;
next	;

1.2.6.1
date	2003.12.14.20.27.55;	author drow;	state Exp;
branches;
next	;

1.2.12.1
date	2004.09.16.17.01.44;	author drow;	state Exp;
branches;
next	;

1.1.2.1
date	2003.03.30.16.35.25;	author cagney;	state Exp;
branches;
next	;

1.1.8.1
date	2003.04.16.19.57.02;	author carlton;	state Exp;
branches;
next	1.1.8.2;

1.1.8.2
date	2003.09.17.21.28.51;	author carlton;	state Exp;
branches;
next	;


desc
@@


1.23
log
@fix python-selftest.exp failure with gdbserver

python-selftest.exp fails with an error when using the
native-gdbserver.exp board.

The bug is that the selftest code doesn't work in this situation.  It
never has.

This patch fixes the problem by pushing the needed check into
do_self_tests.  This helps prevent the problem in the future.

	* lib/selftest-support.exp (do_self_tests): Reject remote or
	non-native targets.
	* gdb.gdb/complaints.exp: Remove check.
	* gdb.gdb/observer.exp: Remove check.
	* gdb.gdb/xfullpath.exp: Remove check.
	* gdb.gdb/complaints.exp: Remove check.
@
text
@# Copyright 2003-2013 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# This file was written by Joel Brobecker (brobecker@@gnat.com), derived
# from xfullpath.exp.

load_lib selftest-support.exp

proc attach_first_observer { message } {
    gdb_test_no_output "set \$first_obs = observer_attach_test_notification (&observer_test_first_notification_function)" \
	"$message; attach first observer"
}

proc attach_second_observer { message } {
    gdb_test_no_output "set \$second_obs = observer_attach_test_notification (&observer_test_second_notification_function)" \
	"$message; attach second observer"
}

proc attach_third_observer { message } {
    gdb_test_no_output "set \$third_obs = observer_attach_test_notification (&observer_test_third_notification_function)" \
	"$message; attach third observer"
}

proc detach_first_observer { message } {
    gdb_test_no_output "call observer_detach_test_notification (\$first_obs)" \
	"$message; detach first observer"
}

proc detach_second_observer { message } {
    gdb_test_no_output "call observer_detach_test_notification (\$second_obs)" \
	"$message; detach second observer"
}

proc detach_third_observer { message } {
    gdb_test_no_output "call observer_detach_test_notification (\$third_obs)" \
	"$message; detach third observer"
}

proc check_counters { first second third message } {
    gdb_test "print observer_test_first_observer" \
	".\[0-9\]+ =.*$first" \
	"$message; check first observer counter value"
    gdb_test "print observer_test_second_observer" \
	".\[0-9\]+ =.*$second" \
	"$message; check second observer counter value"
    gdb_test "print observer_test_third_observer" \
	".\[0-9\]+ =.*$third" \
	"$message; check third observer counter value"
}

proc reset_counters { message } {
    gdb_test_no_output "set variable observer_test_first_observer = 0" \
	"$message; reset first observer counter"
    gdb_test_no_output "set variable observer_test_second_observer = 0" \
	"$message; reset second observer counter"
    gdb_test_no_output "set variable observer_test_third_observer = 0" \
	"$message; reset third observer counter"
}

proc test_notifications { first second third message args } {
    # Do any initialization
    for {set i 0} {$i < [llength $args]} {incr i} {
	[lindex $args $i] $message
    }
    reset_counters $message
    # Call observer_notify_test_notification.  Note that this procedure
    # takes one argument, but this argument is ignored by the observer
    # callbacks we have installed.  So we just pass an arbitrary value.
    gdb_test_no_output "call observer_notify_test_notification (0)" \
	"$message; sending notification"
    check_counters $first $second $third $message
}

proc test_observer {} {
    # First, try sending a notification without any observer attached.
    test_notifications 0 0 0 "no observer attached"

    # Now, attach one observer, and send a notification.
    test_notifications 0 1 0 "second observer attached" \
	attach_second_observer

    # Remove the observer, and send a notification.
    test_notifications 0 0 0 "second observer detached" \
	detach_second_observer

    # With a new observer.
    test_notifications 1 0 0 "1st observer added" \
	attach_first_observer

    # With 2 observers.
    test_notifications 1 1 0 "2nd observer added" \
	attach_second_observer

    # With 3 observers.
    test_notifications 1 1 1 "3rd observer added" \
	attach_third_observer

    # Remove middle observer.
    test_notifications 1 0 1 "2nd observer removed" \
	detach_second_observer

    # Remove first observer.
    test_notifications 0 0 1 "1st observer removed" \
	detach_first_observer

    # Remove last observer.
    test_notifications 0 0 0 "3rd observer removed" \
	detach_third_observer

    # Go back to 3 observers, and remove them in a different order...
    test_notifications 1 1 1 "three observers added" \
	attach_first_observer \
	attach_second_observer \
	attach_third_observer 

    # Remove the third observer.
    test_notifications 1 1 0 "third observer removed" \
	detach_third_observer

    # Remove the second observer.
    test_notifications 1 0 0 "second observer removed" \
	detach_second_observer

    # Remove the first observer, no more observers.
    test_notifications 0 0 0 "first observer removed" \
	detach_first_observer

    return 0
}

do_self_tests captured_main test_observer
@


1.22
log
@	* lib/selftest-support.exp: New file.
	* gdb.gdb/complaints.exp: Load selftest-support.exp.  Use
	do_self_tests.
	(setup_test, find_gdb): Remove.
	* gdb.gdb/observer.exp: Load selftest-support.exp.  Use
	do_self_tests.
	(setup_test, find_gdb): Remove.
	(test_observer): Don't call setup_test.  Remove argument.
	* gdb.gdb/selftest.exp: Load selftest-support.exp.
	(find_gdb): Remove.
	* gdb.gdb/complaints.exp: Load selftest-support.exp.  Use
	do_self_tests.
	(setup_test, find_gdb): Remove.
	(test_with_self): Don't call setup_test.  Remove argument.
@
text
@a20 5
# are we on a target board
if { [is_remote target] || ![isnative] } then {
    return
}

@


1.21
log
@Update years in copyright notice for the GDB files.

Two modifications:
  1. The addition of 2013 to the copyright year range for every file;
  2. The use of a single year range, instead of potentially multiple
     year ranges, as approved by the FSF.
@
text
@d19 1
a25 73
proc setup_test { executable } {
    global gdb_prompt
    global timeout
    global INTERNAL_GDBFLAGS

    # load yourself into the debugger
    # This can take a relatively long time, particularly for testing where
    # the executable is being accessed over a network, or where gdb does not
    # support partial symbols for a particular target and has to load the
    # entire symbol table.  Set the timeout to 10 minutes, which should be
    # adequate for most environments (it *has* timed out with 5 min on a
    # SPARCstation SLC under moderate load, so this isn't unreasonable).
    # After gdb is started, set the timeout to 30 seconds for the duration
    # of this test, and then back to the original value.

    set oldtimeout $timeout
    set timeout 600
    verbose "Timeout is now $timeout seconds" 2

    global gdb_file_cmd_debug_info
    set gdb_file_cmd_debug_info "unset"

    set result [gdb_load $executable]
    set timeout $oldtimeout
    verbose "Timeout is now $timeout seconds" 2

    if { $result != 0 } then {
	return -1
    }

    if { $gdb_file_cmd_debug_info != "debug" } then {
	untested "No debug information, skipping testcase."
	return -1
    }

    # Set a breakpoint at main
    gdb_test "break captured_main" \
            "Breakpoint.*at.* file.*, line.*" \
            "breakpoint in captured_main"

    # run yourself
    # It may take a very long time for the inferior gdb to start (lynx),
    # so we bump it back up for the duration of this command.
    set timeout 600

    set description "run until breakpoint at captured_main"
    gdb_test_multiple "run $INTERNAL_GDBFLAGS" "$description" {
        -re "Starting program.*Breakpoint \[0-9\]+,.*captured_main .data.* at .*main.c:.*$gdb_prompt $" {
            pass "$description"
        }
        -re "Starting program.*Breakpoint \[0-9\]+,.*captured_main .data.*$gdb_prompt $" {
            xfail "$description (line numbers scrambled?)"
        }
        -re "vfork: No more processes.*$gdb_prompt $" {
            fail "$description (out of virtual memory)"
            set timeout $oldtimeout
            verbose "Timeout is now $timeout seconds" 2
            return -1
        }
        -re ".*$gdb_prompt $" {
            fail "$description"
            set timeout $oldtimeout
            verbose "Timeout is now $timeout seconds" 2
            return -1
        }
    }

    set timeout $oldtimeout
    verbose "Timeout is now $timeout seconds" 2

    return 0
}

d91 1
a91 7
proc test_observer { executable } {

    set setup_result [setup_test $executable]
    if {$setup_result <0} then {
        return -1
    }

d148 1
a148 42
# Find a pathname to a file that we would execute if the shell was asked
# to run $arg using the current PATH.

proc find_gdb { arg } {

    # If the arg directly specifies an existing executable file, then
    # simply use it.

    if [file executable $arg] then {
	return $arg
    }

    set result [which $arg]
    if [string match "/" [ string range $result 0 0 ]] then {
	return $result
    }

    # If everything fails, just return the unqualified pathname as default
    # and hope for best.

    return $arg
}

# Run the test with self.
# Copy the file executable file in case this OS doesn't like to edit its own
# text space.

set GDB_FULLPATH [find_gdb $GDB]

# Remove any old copy lying around.
remote_file host delete x$tool

gdb_start
set file [remote_download host $GDB_FULLPATH x$tool]
set result [test_observer $file];
gdb_exit;
catch "remote_file host delete $file";

if {$result <0} then {
    warning "Couldn't test self"
    return -1
}
@


1.20
log
@2012-09-08  Khoo Yit Phang  <khooyp@@cs.umd.edu>

	Replace -nw option with $INTERNAL_GDBFLAGS in "xgdb" tests to
	avoid spurious results due to ~/.gdbinit.
	* gdb.gdb/complaint.exp (setup_test): Replace -nw option with
	$INTERNAL_GDBFLAGS in run command.
	* gdb.gdb/observer.exp (setup_test): Ditto.
	* gdb.gdb/selftest.exp (test_with_self): Ditto.
	* gdb.gdb/xfullpath.exp (setup_test): Ditto.
@
text
@d1 1
a1 1
# Copyright 2003-2004, 2007-2012 Free Software Foundation, Inc.
@


1.19
log
@2012-01-16  Pedro Alves  <palves@@redhat.com>

	Remove all calls to strace.
@
text
@d28 1
d71 1
a71 1
    gdb_test_multiple "run -nw" "$description" {
@


1.18
log
@Copyright year update in most files of the GDB Project.

gdb/ChangeLog:

        Copyright year update in most files of the GDB Project.
@
text
@a18 4
if $tracelevel then {
    strace $tracelevel
}

@


1.17
log
@run copyright.sh for 2011.
@
text
@d1 1
a1 2
# Copyright 2003, 2004, 2007, 2008, 2009, 2010, 2011
# Free Software Foundation, Inc.
@


1.17.4.1
log
@Copyright year update in most files of the GDB Project.

gdb/ChangeLog:

        Copyright year update in most files of the GDB Project.
@
text
@d1 2
a2 1
# Copyright 2003-2004, 2007-2012 Free Software Foundation, Inc.
@


1.16
log
@2010-06-02  Michael Snyder  <msnyder@@vmware.com>

	* gdb.dwarf2/dw2-basic.exp: Use gdb_test_no_output.
	* gdb.dwarf2/dw2-compressed.exp: Ditto.
	* gdb.dwarf2/dw2-intercu.exp: Ditto.
	* gdb.dwarf2/dw2-intermix.exp: Ditto.
	* gdb.dwarf2/dw2-producer.exp: Ditto.
	* gdb.dwarf2/mac-fileno.exp: Ditto.

	* gdb.gdb/observer.exp: Use gdb_test_no_output.
	* gdb.gdb/selftest.exp: Ditto.

	* gdb.multi/base.exp: Use gdb_test_no_output.

	* gdb.opt/inline-cmds.exp: Use gdb_test_no_output.
@
text
@d1 2
a2 1
# Copyright 2003, 2004, 2007, 2008, 2009, 2010 Free Software Foundation, Inc.
@


1.15
log
@Do not set prms_id/bug_id anymore.

2010-05-05  Joel Brobecker  <brobecker@@adacore.com>

	Remove the use of prms_id and bug_id throughout the testsuite.
@
text
@d102 2
a103 2
    gdb_test "set \$first_obs = observer_attach_test_notification (&observer_test_first_notification_function)" \
	"" "$message; attach first observer"
d107 2
a108 2
    gdb_test "set \$second_obs = observer_attach_test_notification (&observer_test_second_notification_function)" \
	"" "$message; attach second observer"
d112 2
a113 2
    gdb_test "set \$third_obs = observer_attach_test_notification (&observer_test_third_notification_function)" \
	"" "$message; attach third observer"
d117 2
a118 2
    gdb_test "call observer_detach_test_notification (\$first_obs)" \
	"" "$message; detach first observer"
d122 2
a123 2
    gdb_test "call observer_detach_test_notification (\$second_obs)" \
	"" "$message; detach second observer"
d127 2
a128 2
    gdb_test "call observer_detach_test_notification (\$third_obs)" \
	"" "$message; detach third observer"
d144 1
a144 1
    gdb_test "set variable observer_test_first_observer = 0" "" \
d146 1
a146 1
    gdb_test "set variable observer_test_second_observer = 0" "" \
d148 1
a148 1
    gdb_test "set variable observer_test_third_observer = 0" "" \
d161 1
a161 1
    gdb_test "call observer_notify_test_notification (0)" "" \
@


1.14
log
@Update copyright year in most headers.

Automatic update by copyright.sh.
@
text
@a22 2
set prms_id 0
set bug_id 0
@


1.13
log
@	* observer.c (observer_test_first_notification_function)
	(observer_test_second_notification_function)
	(observer_test_third_notification_function): Adjust prototype.
@
text
@d1 1
a1 1
# Copyright 2003, 2004, 2007, 2008, 2009 Free Software Foundation, Inc.
@


1.12
log
@        Updated copyright notices for most files.
@
text
@d104 1
a104 1
    gdb_test "set \$first_obs = observer_attach_normal_stop (&observer_test_first_notification_function)" \
d109 1
a109 1
    gdb_test "set \$second_obs = observer_attach_normal_stop (&observer_test_second_notification_function)" \
d114 1
a114 1
    gdb_test "set \$third_obs = observer_attach_normal_stop (&observer_test_third_notification_function)" \
d119 1
a119 1
    gdb_test "call observer_detach_normal_stop (\$first_obs)" \
d124 1
a124 1
    gdb_test "call observer_detach_normal_stop (\$second_obs)" \
d129 1
a129 1
    gdb_test "call observer_detach_normal_stop (\$third_obs)" \
d154 1
a154 1
proc test_normal_stop_notifications { first second third message args } {
d160 1
a160 1
    # Call observer_notify_normal_stop.  Note that this procedure
d163 1
a163 1
    gdb_test "call observer_notify_normal_stop (0)" "" \
d168 1
a168 1
proc test_observer_normal_stop { executable } {
d176 1
a176 1
    test_normal_stop_notifications 0 0 0 "no observer attached"
d179 1
a179 1
    test_normal_stop_notifications 0 1 0 "second observer attached" \
d183 1
a183 1
    test_normal_stop_notifications 0 0 0 "second observer detached" \
d187 1
a187 1
    test_normal_stop_notifications 1 0 0 "1st observer added" \
d191 1
a191 1
    test_normal_stop_notifications 1 1 0 "2nd observer added" \
d195 1
a195 1
    test_normal_stop_notifications 1 1 1 "3rd observer added" \
d199 1
a199 1
    test_normal_stop_notifications 1 0 1 "2nd observer removed" \
d203 1
a203 1
    test_normal_stop_notifications 0 0 1 "1st observer removed" \
d207 1
a207 1
    test_normal_stop_notifications 0 0 0 "3rd observer removed" \
d211 1
a211 1
    test_normal_stop_notifications 1 1 1 "three observers added" \
d217 1
a217 1
    test_normal_stop_notifications 1 1 0 "third observer removed" \
d221 1
a221 1
    test_normal_stop_notifications 1 0 0 "second observer removed" \
d225 1
a225 1
    test_normal_stop_notifications 0 0 0 "first observer removed" \
d265 1
a265 1
set result [test_observer_normal_stop $file];
@


1.11
log
@	Updated copyright notices for most files.
@
text
@d1 1
a1 1
# Copyright 2003, 2004, 2007, 2008 Free Software Foundation, Inc.
@


1.10
log
@        Switch the license of all .exp files to GPLv3.
        Switch the license of all .f and .f90 files to GPLv3.
        Switch the license of all .s and .S files to GPLv3.
@
text
@d1 1
a1 1
# Copyright 2003, 2004, 2007 Free Software Foundation, Inc.
@


1.9
log
@Copyright updates for 2007.
@
text
@d5 1
a5 1
# the Free Software Foundation; either version 2 of the License, or
d7 1
a7 1
# 
d12 1
a12 1
# 
d14 1
a14 2
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  
@


1.8
log
@	* gdb.asm/asm-source.exp: Add "spu*-*-*" target.
	* gdb.asm/spu.inc: New file.
	* gdb.base/term.exp: Disable if [target_info exists noargs].
	* gdb.gdb/complaints.exp: Disable if ![isnative].
	* gdb.gdb/selftest.exp: Likewise.
	* gdb.gdb/observer.exp: Likewise.
	* gdb.gdb/xfullpath.exp: Likewise.
	* gdb.base/attach.exp: Disable on SPU target.
	* gdb.cp/bs145503.exp: Likewise.
	* gdb.cp/exception.exp: Likewise.
	* gdb.cp/userdef.exp: Likewise.
@
text
@d1 1
a1 1
# Copyright 2003, 2004 Free Software Foundation, Inc.
@


1.7
log
@2004-09-09  Michael Chastain  <mec.gnu@@mindspring.com>

	* lib/gdb.exp (gdb_file_cmd): Revert the return value to
	previous simple convention.  Use a global variable to store
	information about what was found.
	(gdb_run_cmd): Adapt to reverted return value.
	* gdb.base/remote.exp: Adapt to reverted return value.
	* gdb.gdb/complaints.exp: Likewise.
	* gdb.gdb/observer.exp: Likewise.
	* gdb.gdb/selftest.exp: Likewise.
	* gdb.gdb/xfullpath.exp: Likewise.
@
text
@d28 1
a28 1
if [is_remote target] {
@


1.7.30.1
log
@	* gdb.asm/asm-source.exp: Add "spu*-*-*" target.
	* gdb.asm/spu.inc: New file.
	* gdb.base/term.exp: Disable if [target_info exists noargs].
	* gdb.gdb/complaints.exp: Disable if ![isnative].
	* gdb.gdb/selftest.exp: Likewise.
	* gdb.gdb/observer.exp: Likewise.
	* gdb.gdb/xfullpath.exp: Likewise.
	* gdb.base/attach.exp: Disable on SPU target.
	* gdb.cp/bs145503.exp: Likewise.
	* gdb.cp/exception.exp: Likewise.
	* gdb.cp/userdef.exp: Likewise.
@
text
@d28 1
a28 1
if { [is_remote target] || ![isnative] } then {
@


1.6
log
@Use new gdb.exp feature to check for nodebug in the executable for testcases under gdb.gdb
@
text
@d50 3
d57 6
a62 1
    if { [lindex $result 0] != "" } then {
a63 5
    } else {
        if { [lsearch -exact [lrange $result 1 end] "nodebug"] >= 0 } then {
            untested "No debug information, skipping testcase."
            return -1
        }
@


1.5
log
@2004-08-27  Michael Chastain  <mec.gnu@@mindspring.com>

	With code from Manoj Iyer <manjo@@austin.ibm.com>:
	* lib/gdb.exp (gdb_file_cmd): Return more information in the
	return value.  Add an arm for "no debugging symbols found".
	Change a stray "error" to "perror".
	(gdb_run_cmd): Adapt to new return value.
	* gdb.base/remote.exp: Adapt to new return value.
	* gdb.gdb/complaints.exp: Likewise.
	* gdb.gdb/observer.exp: Likewise.
	* gdb.gdb/selftest.exp: Likewise.
	* gdb.gdb/xfullpath.exp: Likewise.
@
text
@d56 5
@


1.4
log
@2004-07-13  Andrew Cagney  <cagney@@gnu.org>

	* gdb.gdb/observer.exp: Update copyright.
	(setup_test): Use gdb_test_multiple.
	(attach_first_observer, attach_second_observer)
	(attach_third_observer, detach_first_observer)
	(detach_second_observer, detach_third_observer)
	(reset_counters, check_counters): Make $message a prefix.
	(test_normal_stop_notifications): Add "args" parameter - a list of
	init functions to be called.  Make $message a prefix,
	(test_observer_normal_stop): Change the message prefixes so that
	they are unique, pass the attach / detach procedures to
	test_normal_stop_notifications.
@
text
@d49 6
a54 3
    if {[gdb_load $executable] <0} then {
	set timeout $oldtimeout
	verbose "Timeout is now $timeout seconds" 2
a56 2
    set timeout $oldtimeout
    verbose "Timeout is now $timeout seconds" 2
@


1.3
log
@        * gdb.gdb/observer.exp (test_normal_stop_notifications): Update
        call to observer_notify_normal_stop.
@
text
@d1 1
a1 2
#   Copyright 2003
#   Free Software Foundation, Inc.
a16 3
# Please email any bugs, comments, and/or additions to this file to:
# bug-gdb@@prep.ai.mit.edu

d68 1
a68 2
    send_gdb "run -nw\n"
    gdb_expect {
a86 3
        timeout {
            fail "$description (timeout)"
        }
d95 1
a95 1
proc attach_first_observer { } {
d97 1
a97 1
             "" "attach first observer"
d100 1
a100 1
proc attach_second_observer { } {
d102 1
a102 1
             "" "attach second observer"
d105 1
a105 1
proc attach_third_observer { } {
d107 1
a107 1
             "" "attach third observer"
d110 1
a110 1
proc detach_first_observer { } {
d112 1
a112 1
             "" "detach first observer"
d115 1
a115 1
proc detach_second_observer { } {
d117 1
a117 1
             "" "detach second observer"
d120 1
a120 1
proc detach_third_observer { } {
d122 1
a122 1
             "" "detach third observer"
d127 2
a128 2
             ".\[0-9\]+ =.*$first" \
             "check first observer counter value ($message)"
d130 2
a131 2
             ".\[0-9\]+ =.*$second" \
             "check second observer counter value ($message)"
d133 2
a134 2
             ".\[0-9\]+ =.*$third" \
             "check third observer counter value ($message)"
d137 1
a137 1
proc reset_counters { } {
d139 1
a139 1
             "reset first observer counter"
d141 1
a141 1
             "reset second observer counter"
d143 1
a143 1
             "reset third observer counter"
d146 6
a151 2
proc test_normal_stop_notifications { first second third message } {
    reset_counters
d156 1
a156 1
             "sending notification ($message)"
d168 1
a168 1
    test_normal_stop_notifications 0 0 0 "no observer"
d171 2
a172 2
    attach_second_observer
    test_normal_stop_notifications 0 1 0 "one observer"
d175 2
a176 2
    detach_second_observer
    test_normal_stop_notifications 0 0 0 "no observer"
d179 2
a180 2
    attach_first_observer
    test_normal_stop_notifications 1 0 0 "a new observer"
d183 2
a184 2
    attach_second_observer
    test_normal_stop_notifications 1 1 0 "2 observers"
d187 2
a188 2
    attach_third_observer
    test_normal_stop_notifications 1 1 1 "3 observers"
d191 2
a192 2
    detach_second_observer
    test_normal_stop_notifications 1 0 1 "middle observer removed"
d195 2
a196 2
    detach_first_observer
    test_normal_stop_notifications 0 0 1 "first observer removed"
d199 2
a200 2
    detach_third_observer
    test_normal_stop_notifications 0 0 0 "last observer removed"
d203 4
a206 4
    attach_first_observer
    attach_second_observer
    attach_third_observer
    test_normal_stop_notifications 1 1 1 "3 observers again"
d209 2
a210 2
    detach_third_observer
    test_normal_stop_notifications 1 1 0 "third observer removed"
d213 2
a214 2
    detach_second_observer
    test_normal_stop_notifications 1 0 0 "second observer removed"
d217 2
a218 2
    detach_first_observer
    test_normal_stop_notifications 0 0 0 "last observer removed"
@


1.2
log
@2003-08-30  Michael Chastain  <mec@@shout.net>

	* gdb.base/selftest.exp: Remove support for m68k*-*-hpux.
	* gdb.gdb/observer.exp: Ditto.
	* gdb.gdb/xfullpath.exp: Ditto.
@
text
@d156 4
a159 1
    gdb_test "call observer_notify_normal_stop ()" "" \
@


1.2.12.1
log
@Merge mainline to intercu branch - 2004-09-15
@
text
@d1 2
a2 1
# Copyright 2003, 2004 Free Software Foundation, Inc.
d18 3
d53 5
a57 5

    global gdb_file_cmd_debug_info
    set gdb_file_cmd_debug_info "unset"

    set result [gdb_load $executable]
a60 9
    if { $result != 0 } then {
	return -1
    }

    if { $gdb_file_cmd_debug_info != "debug" } then {
	untested "No debug information, skipping testcase."
	return -1
    }

d72 2
a73 1
    gdb_test_multiple "run -nw" "$description" {
d92 3
d103 1
a103 1
proc attach_first_observer { message } {
d105 1
a105 1
	"" "$message; attach first observer"
d108 1
a108 1
proc attach_second_observer { message } {
d110 1
a110 1
	"" "$message; attach second observer"
d113 1
a113 1
proc attach_third_observer { message } {
d115 1
a115 1
	"" "$message; attach third observer"
d118 1
a118 1
proc detach_first_observer { message } {
d120 1
a120 1
	"" "$message; detach first observer"
d123 1
a123 1
proc detach_second_observer { message } {
d125 1
a125 1
	"" "$message; detach second observer"
d128 1
a128 1
proc detach_third_observer { message } {
d130 1
a130 1
	"" "$message; detach third observer"
d135 2
a136 2
	".\[0-9\]+ =.*$first" \
	"$message; check first observer counter value"
d138 2
a139 2
	".\[0-9\]+ =.*$second" \
	"$message; check second observer counter value"
d141 2
a142 2
	".\[0-9\]+ =.*$third" \
	"$message; check third observer counter value"
d145 1
a145 1
proc reset_counters { message } {
d147 1
a147 1
	"$message; reset first observer counter"
d149 1
a149 1
	"$message; reset second observer counter"
d151 1
a151 1
	"$message; reset third observer counter"
d154 4
a157 11
proc test_normal_stop_notifications { first second third message args } {
    # Do any initialization
    for {set i 0} {$i < [llength $args]} {incr i} {
	[lindex $args $i] $message
    }
    reset_counters $message
    # Call observer_notify_normal_stop.  Note that this procedure
    # takes one argument, but this argument is ignored by the observer
    # callbacks we have installed.  So we just pass an arbitrary value.
    gdb_test "call observer_notify_normal_stop (0)" "" \
	"$message; sending notification"
d169 1
a169 1
    test_normal_stop_notifications 0 0 0 "no observer attached"
d172 2
a173 2
    test_normal_stop_notifications 0 1 0 "second observer attached" \
	attach_second_observer
d176 2
a177 2
    test_normal_stop_notifications 0 0 0 "second observer detached" \
	detach_second_observer
d180 2
a181 2
    test_normal_stop_notifications 1 0 0 "1st observer added" \
	attach_first_observer
d184 2
a185 2
    test_normal_stop_notifications 1 1 0 "2nd observer added" \
	attach_second_observer
d188 2
a189 2
    test_normal_stop_notifications 1 1 1 "3rd observer added" \
	attach_third_observer
d192 2
a193 2
    test_normal_stop_notifications 1 0 1 "2nd observer removed" \
	detach_second_observer
d196 2
a197 2
    test_normal_stop_notifications 0 0 1 "1st observer removed" \
	detach_first_observer
d200 2
a201 2
    test_normal_stop_notifications 0 0 0 "3rd observer removed" \
	detach_third_observer
d204 4
a207 4
    test_normal_stop_notifications 1 1 1 "three observers added" \
	attach_first_observer \
	attach_second_observer \
	attach_third_observer 
d210 2
a211 2
    test_normal_stop_notifications 1 1 0 "third observer removed" \
	detach_third_observer
d214 2
a215 2
    test_normal_stop_notifications 1 0 0 "second observer removed" \
	detach_second_observer
d218 2
a219 2
    test_normal_stop_notifications 0 0 0 "first observer removed" \
	detach_first_observer
@


1.2.6.1
log
@Merge drow-cplus-branch to:
  cvs rtag -D 2003-12-14 00:00:00 UTC drow-cplus-merge-20031214 gdb+dejagnu
@
text
@@


1.1
log
@        * gdb.gdb/observer.exp: New regression test.
@
text
@a35 9
if [istarget "m68k*-*-hpux*"] then {
    # The top-level makefile passes CFLAGS= (no -g) for hp300.  This probably
    # should be fixed (it is only needed for gcc bootstrapping, not gdb),
    # but until then.....
    setup_xfail "*-*-*"
    fail "cannot test self if compiled without debug info"
    return -1
}

@


1.1.8.1
log
@2003-04-16  David Carlton  <carlton@@bactrian.org>

	* Merge with mainline; tag is carlton_dictionary-20030416-merge.
@
text
@@


1.1.8.2
log
@2003-09-17  David Carlton  <carlton@@kealia.com>

	* Merge with mainline; tag is carlton_dictionary-20030917-merge.
@
text
@d36 9
@


1.1.2.1
log
@Merge with mainline.
@
text
@@

