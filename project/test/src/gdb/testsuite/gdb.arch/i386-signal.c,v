head	1.9;
access;
symbols
	gdb_7_6_1-2013-08-30-release:1.9
	gdb_7_6-2013-04-26-release:1.9
	gdb_7_6-branch:1.9.0.2
	gdb_7_6-2013-03-12-branchpoint:1.9
	gdb_7_5_1-2012-11-29-release:1.8
	gdb_7_5-2012-08-17-release:1.8
	gdb_7_5-branch:1.8.0.2
	gdb_7_5-2012-07-18-branchpoint:1.8
	gdb_7_4_1-2012-04-26-release:1.7.4.1
	gdb_7_4-2012-01-24-release:1.7.4.1
	gdb_7_4-branch:1.7.0.4
	gdb_7_4-2011-12-13-branchpoint:1.7
	gdb_7_3_1-2011-09-04-release:1.7
	gdb_7_3-2011-07-26-release:1.7
	gdb_7_3-branch:1.7.0.2
	gdb_7_3-2011-04-01-branchpoint:1.7
	gdb_7_2-2010-09-02-release:1.6
	gdb_7_2-branch:1.6.0.4
	gdb_7_2-2010-07-07-branchpoint:1.6
	gdb_7_1-2010-03-18-release:1.6
	gdb_7_1-branch:1.6.0.2
	gdb_7_1-2010-02-18-branchpoint:1.6
	gdb_7_0_1-2009-12-22-release:1.5
	gdb_7_0-2009-10-06-release:1.5
	gdb_7_0-branch:1.5.0.4
	gdb_7_0-2009-09-16-branchpoint:1.5
	arc-sim-20090309:1.3
	msnyder-checkpoint-072509-branch:1.5.0.2
	msnyder-checkpoint-072509-branchpoint:1.5
	arc-insight_6_8-branch:1.3.0.16
	arc-insight_6_8-branchpoint:1.3
	insight_6_8-branch:1.3.0.14
	insight_6_8-branchpoint:1.3
	reverse-20081226-branch:1.3.0.12
	reverse-20081226-branchpoint:1.3
	multiprocess-20081120-branch:1.3.0.10
	multiprocess-20081120-branchpoint:1.3
	reverse-20080930-branch:1.3.0.8
	reverse-20080930-branchpoint:1.3
	reverse-20080717-branch:1.3.0.6
	reverse-20080717-branchpoint:1.3
	msnyder-reverse-20080609-branch:1.3.0.4
	msnyder-reverse-20080609-branchpoint:1.3
	drow-reverse-20070409-branch:1.1.0.2
	drow-reverse-20070409-branchpoint:1.1
	gdb_6_8-2008-03-27-release:1.3
	gdb_6_8-branch:1.3.0.2
	gdb_6_8-2008-02-26-branchpoint:1.3
	gdb_6_7_1-2007-10-29-release:1.2
	gdb_6_7-2007-10-10-release:1.2
	gdb_6_7-branch:1.2.0.2
	gdb_6_7-2007-09-07-branchpoint:1.2;
locks; strict;
comment	@ * @;


1.9
date	2013.01.01.06.33.24;	author brobecke;	state Exp;
branches;
next	1.8;

1.8
date	2012.01.04.08.17.44;	author brobecke;	state Exp;
branches;
next	1.7;

1.7
date	2011.01.01.15.33.40;	author brobecke;	state Exp;
branches
	1.7.4.1;
next	1.6;

1.6
date	2010.01.01.07.32.00;	author brobecke;	state Exp;
branches;
next	1.5;

1.5
date	2009.07.15.01.12.16;	author msnyder;	state Exp;
branches;
next	1.4;

1.4
date	2009.01.03.05.58.03;	author brobecke;	state Exp;
branches;
next	1.3;

1.3
date	2008.01.01.22.53.18;	author drow;	state Exp;
branches;
next	1.2;

1.2
date	2007.08.23.18.08.49;	author brobecke;	state Exp;
branches;
next	1.1;

1.1
date	2007.02.27.20.17.19;	author drow;	state Exp;
branches;
next	;

1.7.4.1
date	2012.01.06.04.43.59;	author brobecke;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Update years in copyright notice for the GDB files.

Two modifications:
  1. The addition of 2013 to the copyright year range for every file;
  2. The use of a single year range, instead of potentially multiple
     year ranges, as approved by the FSF.
@
text
@/* Unwinder test program for signal frames.

   Copyright 2007-2013 Free Software Foundation, Inc.

   This file is part of GDB.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */

void sigframe (void);
void setup (void);

void
func (void)
{
}

int
main (void)
{
  setup ();
}

/* Create an imitation signal frame.  This will work on any x86 or
   x86-64 target which uses a version of GAS recent enough for
   .cfi_signal_frame (added 2006-02-27 and included in binutils 2.17).
   The default CIE created by gas suffices to unwind from an empty
   function.  */

/* Note: to make sure that the Dwarf unwinder gets to handle
   the frame, we add an extra 'nop' after the label.  Otherwise,
   the epilogue unwinder will see the 'ret' and grab the frame.  */

asm(".text\n"
    "    .align 8\n"
    "    .globl setup\n"
    "setup:\n"
    "    push $sigframe\n"
    "    jmp func\n"
    "\n"
    "    .cfi_startproc\n"
    "    .cfi_signal_frame\n"
    "    nop\n"
    "    .globl sigframe\n"
    "sigframe:\n"
    "    nop\n"
    "    ret\n"
    "    .cfi_endproc");
@


1.8
log
@Copyright year update in most files of the GDB Project.

gdb/ChangeLog:

        Copyright year update in most files of the GDB Project.
@
text
@d3 1
a3 1
   Copyright 2007-2012 Free Software Foundation, Inc.
@


1.7
log
@run copyright.sh for 2011.
@
text
@d3 1
a3 1
   Copyright 2007, 2008, 2009, 2010, 2011 Free Software Foundation, Inc.
@


1.7.4.1
log
@Copyright year update in most files of the GDB Project.

gdb/ChangeLog:

        Copyright year update in most files of the GDB Project.
@
text
@d3 1
a3 1
   Copyright 2007-2012 Free Software Foundation, Inc.
@


1.6
log
@Update copyright year in most headers.

Automatic update by copyright.sh.
@
text
@d3 1
a3 1
   Copyright 2007, 2008, 2009, 2010 Free Software Foundation, Inc.
@


1.5
log
@2009-07-14  Michael Snyder  <msnyder@@vmware.com>

	* gdb.arch/i386-signal.c (sigframe): Add a nop to avoid
	confusing the i386 epilogue unwinder.
@
text
@d3 1
a3 1
   Copyright 2007, 2008, 2009 Free Software Foundation, Inc.
@


1.4
log
@        Updated copyright notices for most files.
@
text
@d40 4
d56 1
@


1.3
log
@	Updated copyright notices for most files.
@
text
@d3 1
a3 1
   Copyright 2007, 2008 Free Software Foundation, Inc.
@


1.2
log
@        Switch the license of all .c files to GPLv3.
        Switch the license of all .h files to GPLv3.
        Switch the license of all .cc files to GPLv3.
@
text
@d3 1
a3 1
   Copyright 2007 Free Software Foundation, Inc.
@


1.1
log
@	* dwarf2-frame.c (dwarf2_frame_cache, dwarf2_frame_this_id)
	(dwarf2_frame_sniffer): Update.
	(dwarf2_signal_frame_this_id): New function.
	(dwarf2_signal_frame_unwind): Use it.
	(dwarf2_frame_base_sniffer): Use frame_unwind_address_in_block.
	* frame.c (frame_func_unwind): Add this_type argument.
	(get_frame_func): Update.
	(frame_unwind_address_in_block): Add this_type argument and check it.
	Fix a typo.
	(get_frame_address_in_block): Update.
	* frame.h (enum frame_type): Move higher in the file.
	(frame_unwind_address_in_block, frame_func_unwind): Add enum frame_type
	argument.

	* alpha-mdebug-tdep.c, alpha-tdep.c, amd64-tdep.c, amd64obsd-tdep.c,
	arm-tdep.c, avr-tdep.c, cris-tdep.c, frv-tdep.c, h8300-tdep.c,
	hppa-tdep.c, i386-tdep.c, i386obsd-tdep.c, ia64-tdep.c,
	libunwind-frame.c, m32c-tdep.c, m32r-linux-tdep.c, m32r-tdep.c,
	m68hc11-tdep.c, m68k-tdep.c, m88k-tdep.c, mips-mdebug-tdep.c,
	mips-tdep.c, mn10300-tdep.c, mt-tdep.c, rs6000-tdep.c, s390-tdep.c,
	score-tdep.c, sh-tdep.c, sh64-tdep.c, sparc-tdep.c,
	sparc64obsd-tdep.c, spu-tdep.c, v850-tdep.c, vax-tdep.c,
	xstormy16-tdep.c, xtensa-tdep.c: Update calls to
	frame_func_unwind and frame_unwind_address_in_block to specify
	the frame type.  Use frame_unwind_address_in_block instead of
	frame_pc_unwind in sniffers.

	* gdb.arch/i386-signal.c, gdb.arch/i386-signal.exp: New files.
@
text
@d9 1
a9 1
   the Free Software Foundation; either version 2 of the License, or
d11 1
a11 1
   
d16 1
a16 1
   
d18 1
a18 3
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place - Suite 330,
   Boston, MA 02111-1307, USA.  */
@

