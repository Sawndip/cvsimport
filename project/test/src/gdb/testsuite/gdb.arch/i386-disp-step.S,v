head	1.6;
access;
symbols
	gdb_7_6_1-2013-08-30-release:1.6
	gdb_7_6-2013-04-26-release:1.6
	gdb_7_6-branch:1.6.0.2
	gdb_7_6-2013-03-12-branchpoint:1.6
	gdb_7_5_1-2012-11-29-release:1.5
	gdb_7_5-2012-08-17-release:1.5
	gdb_7_5-branch:1.5.0.2
	gdb_7_5-2012-07-18-branchpoint:1.5
	gdb_7_4_1-2012-04-26-release:1.4.4.1
	gdb_7_4-2012-01-24-release:1.4.4.1
	gdb_7_4-branch:1.4.0.4
	gdb_7_4-2011-12-13-branchpoint:1.4
	gdb_7_3_1-2011-09-04-release:1.4
	gdb_7_3-2011-07-26-release:1.4
	gdb_7_3-branch:1.4.0.2
	gdb_7_3-2011-04-01-branchpoint:1.4
	gdb_7_2-2010-09-02-release:1.3
	gdb_7_2-branch:1.3.0.4
	gdb_7_2-2010-07-07-branchpoint:1.3
	gdb_7_1-2010-03-18-release:1.3
	gdb_7_1-branch:1.3.0.2
	gdb_7_1-2010-02-18-branchpoint:1.3
	gdb_7_0_1-2009-12-22-release:1.2
	gdb_7_0-2009-10-06-release:1.2
	gdb_7_0-branch:1.2.0.4
	gdb_7_0-2009-09-16-branchpoint:1.2
	msnyder-checkpoint-072509-branch:1.2.0.2
	msnyder-checkpoint-072509-branchpoint:1.2;
locks; strict;
comment	@# @;


1.6
date	2013.01.01.06.33.24;	author brobecke;	state Exp;
branches;
next	1.5;

1.5
date	2012.01.04.08.17.44;	author brobecke;	state Exp;
branches;
next	1.4;

1.4
date	2011.01.01.15.33.40;	author brobecke;	state Exp;
branches
	1.4.4.1;
next	1.3;

1.3
date	2010.01.01.07.32.00;	author brobecke;	state Exp;
branches;
next	1.2;

1.2
date	2009.02.17.06.14.17;	author devans;	state Exp;
branches;
next	1.1;

1.1
date	2009.01.29.00.29.57;	author devans;	state Exp;
branches;
next	;

1.4.4.1
date	2012.01.06.04.43.59;	author brobecke;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Update years in copyright notice for the GDB files.

Two modifications:
  1. The addition of 2013 to the copyright year range for every file;
  2. The use of a single year range, instead of potentially multiple
     year ranges, as approved by the FSF.
@
text
@/* Copyright 2009-2013 Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.

   This file is part of the gdb testsuite.
   It tests displaced stepping over various insns that require special
   handling.  */

	.text

	.global main
main:
	nop

/***********************************************/

/* Test call/ret.  */

	nop
	.global test_call
test_call:
	call test_call_subr
	nop
	.global test_ret_end
test_ret_end:
	nop

/***********************************************/

/* Absolute jump with leading prefixes.
   These don't occur in normal code, but gdb should still DTRT.  */

	nop
	.global test_prefixed_abs_jump
test_prefixed_abs_jump:
	ds
	jmp *test_prefixed_abs_jump_addr
	.data
test_prefixed_abs_jump_addr:
	.4byte test_prefixed_abs_jump_target
	.text
test_prefixed_abs_jump_target:
	nop
	.global test_prefixed_abs_jump_end
test_prefixed_abs_jump_end:
	nop

/***********************************************/

/* Test syscall.  */

	mov $0x14,%eax /* getpid */
	.global test_syscall
test_syscall:
	int $0x80
	nop
	.global test_syscall_end
test_syscall_end:
	nop

/***********************************************/

/* Test syscall again, this time with a prefix.
   These don't occur in normal code, but gdb should still DTRT.  */

	mov $0x14,%eax /* getpid */
	.global test_prefixed_syscall
test_prefixed_syscall:
	repnz
	int $0x80
	nop
	.global test_prefixed_syscall_end
test_prefixed_syscall_end:
	nop

/***********************************************/

/* Test stepping over int3.
   The prefixes are pointless, but it's possible, so we exercise it.  */

	nop
	.global test_int3
test_int3:
	repz
	repz
	int3
	nop
	.global test_int3_end
test_int3_end:
	nop

/***********************************************/

/* all done */

	pushl $0
	call exit
	hlt

/***********************************************/

/* subroutine to help test call/ret */

test_call_subr:
	nop
	.global test_call_end
test_call_end:
	nop

	.global test_ret
test_ret:
	ret
@


1.5
log
@Copyright year update in most files of the GDB Project.

gdb/ChangeLog:

        Copyright year update in most files of the GDB Project.
@
text
@d1 1
a1 1
/* Copyright 2009-2012 Free Software Foundation, Inc.
@


1.4
log
@run copyright.sh for 2011.
@
text
@d1 1
a1 1
/* Copyright 2009, 2010, 2011 Free Software Foundation, Inc.
@


1.4.4.1
log
@Copyright year update in most files of the GDB Project.

gdb/ChangeLog:

        Copyright year update in most files of the GDB Project.
@
text
@d1 1
a1 1
/* Copyright 2009-2012 Free Software Foundation, Inc.
@


1.3
log
@Update copyright year in most headers.

Automatic update by copyright.sh.
@
text
@d1 1
a1 1
/* Copyright 2009, 2010 Free Software Foundation, Inc.
@


1.2
log
@	* amd64-tdep.c (amd64_skip_prefixes): Renamed from skip_prefixes.
	All callers updated.
	(amd64_get_insn_details): Handle more 3-byte opcode insns.
	(amd64_breakpoint_p): Delete.
	(amd64_displaced_step_fixup): When fixing up after stepping an int3,
	don't back up pc to the start of the int3.
	* i386-tdep.c: #include opcode/i386.h.
	(i386_skip_prefixes): New function.
	(i386_absolute_jmp_p): Constify argument.
	(i386_absolute_call_p,i386_ret_p,i386_call_p,i386_syscall_p): Ditto.
	(i386_breakpoint_p): Delete.
	(i386_displaced_step_fixup): Handle unnecessary or redundant prefixes.
	When fixing up after stepping an int3, don't back up pc to the start
	of the int3.

	* gdb.arch/amd64-disp-step.S (test_int3): New test.
	* gdb.arch/amd64-disp-step.exp (test_int3): New test.
	* gdb.arch/i386-disp-step.S (test_prefixed_abs_jump): New test.
	(test_prefixed_syscall,test_int3): New tests.
	* gdb.arch/i386-disp-step.exp (test_prefixed_abs_jump): New test.
	(test_prefixed_syscall,test_int3): New tests.
@
text
@d1 1
a1 1
/* Copyright 2009 Free Software Foundation, Inc.
@


1.1
log
@	* opcode/i386.h: Add multiple inclusion protection.
	(EAX_REG_NUM,ECX_REG_NUM,EDX_REGNUM,EBX_REG_NUM,ESI_REG_NUM)
	(EDI_REG_NUM): New macros.
	(MODRM_MOD_FIELD,MODRM_REG_FIELD,MODRM_RM_FIELD): New macros.
	(SIB_SCALE_FIELD,SIB_INDEX_FIELD,SIB_BASE_FIELD): New macros.
	(REG_PREFIX_P): New macro.

	* amd64-tdep.h (amd64_displaced_step_copy_insn): Declare.
	(amd64_displaced_step_fixup): Declare.
	* amd64-tdep.c: #include opcode/i386.h, dis-asm.h.
	(amd64_arch_regmap): Move out of amd64_analyze_stack_align
	and make static global.
	(amd64_arch_regmap_len): New static global.
	(amd64_arch_reg_to_regnum): New function.
	(struct amd64_insn): New struct.
	(struct displaced_step_closure): New struct.
	(onebyte_has_modrm,twobyte_has_modrm): New static globals.
	(rex_prefix_p,skip_prefixes)
	(amd64_insn_length_fprintf,amd64_insn_length_init_dis)
	(amd64_insn_length,amd64_get_unused_input_int_reg)
	(amd64_get_insn_details,fixup_riprel,fixup_displaced_copy)
	(amd64_displaced_step_copy_insn)
	(amd64_absolute_jmp_p,amd64_absolute_call_p,amd64_ret_p)
	(amd64_call_p,amd64_breakpoint_p,amd64_syscall_p)
	(amd64_displaced_step_fixup): New functions.
	* amd64-linux-tdep.c: #include arch-utils.h.
	(amd64_linux_init_abi): Install displaced stepping support.

	* gdb.arch/amd64-disp-step.S: New file.
	* gdb.arch/amd64-disp-step.exp: New file.
	* gdb.arch/i386-disp-step.S: New file.
	* gdb.arch/i386-disp-step.exp: New file.
@
text
@d26 3
a28 1
/* test call/ret */
d30 1
d39 23
a61 1
/* test syscall */
d63 1
a64 1
	mov $0x14,%eax /* getpid */
d68 1
d72 33
@

