head	1.9;
access;
symbols
	gdb_7_6_1-2013-08-30-release:1.9
	gdb_7_6-2013-04-26-release:1.9
	gdb_7_6-branch:1.9.0.2
	gdb_7_6-2013-03-12-branchpoint:1.9
	gdb_7_5_1-2012-11-29-release:1.8
	gdb_7_5-2012-08-17-release:1.8
	gdb_7_5-branch:1.8.0.2
	gdb_7_5-2012-07-18-branchpoint:1.8
	gdb_7_4_1-2012-04-26-release:1.7.4.1
	gdb_7_4-2012-01-24-release:1.7.4.1
	gdb_7_4-branch:1.7.0.4
	gdb_7_4-2011-12-13-branchpoint:1.7
	gdb_7_3_1-2011-09-04-release:1.7
	gdb_7_3-2011-07-26-release:1.7
	gdb_7_3-branch:1.7.0.2
	gdb_7_3-2011-04-01-branchpoint:1.7
	gdb_7_2-2010-09-02-release:1.6
	gdb_7_2-branch:1.6.0.4
	gdb_7_2-2010-07-07-branchpoint:1.6
	gdb_7_1-2010-03-18-release:1.6
	gdb_7_1-branch:1.6.0.2
	gdb_7_1-2010-02-18-branchpoint:1.6
	gdb_7_0_1-2009-12-22-release:1.5
	gdb_7_0-2009-10-06-release:1.5
	gdb_7_0-branch:1.5.0.4
	gdb_7_0-2009-09-16-branchpoint:1.5
	arc-sim-20090309:1.4
	msnyder-checkpoint-072509-branch:1.5.0.2
	msnyder-checkpoint-072509-branchpoint:1.5
	arc-insight_6_8-branch:1.4.0.16
	arc-insight_6_8-branchpoint:1.4
	insight_6_8-branch:1.4.0.14
	insight_6_8-branchpoint:1.4
	reverse-20081226-branch:1.4.0.12
	reverse-20081226-branchpoint:1.4
	multiprocess-20081120-branch:1.4.0.10
	multiprocess-20081120-branchpoint:1.4
	reverse-20080930-branch:1.4.0.8
	reverse-20080930-branchpoint:1.4
	reverse-20080717-branch:1.4.0.6
	reverse-20080717-branchpoint:1.4
	msnyder-reverse-20080609-branch:1.4.0.4
	msnyder-reverse-20080609-branchpoint:1.4
	drow-reverse-20070409-branch:1.2.0.2
	drow-reverse-20070409-branchpoint:1.2
	gdb_6_8-2008-03-27-release:1.4
	gdb_6_8-branch:1.4.0.2
	gdb_6_8-2008-02-26-branchpoint:1.4
	gdb_6_7_1-2007-10-29-release:1.3
	gdb_6_7-2007-10-10-release:1.3
	gdb_6_7-branch:1.3.0.2
	gdb_6_7-2007-09-07-branchpoint:1.3;
locks; strict;
comment	@ * @;


1.9
date	2013.01.01.06.33.24;	author brobecke;	state Exp;
branches;
next	1.8;

1.8
date	2012.01.04.08.17.45;	author brobecke;	state Exp;
branches;
next	1.7;

1.7
date	2011.01.01.15.33.40;	author brobecke;	state Exp;
branches
	1.7.4.1;
next	1.6;

1.6
date	2010.01.01.07.32.00;	author brobecke;	state Exp;
branches;
next	1.5;

1.5
date	2009.01.03.05.58.03;	author brobecke;	state Exp;
branches;
next	1.4;

1.4
date	2008.01.01.22.53.18;	author drow;	state Exp;
branches;
next	1.3;

1.3
date	2007.08.23.18.08.49;	author brobecke;	state Exp;
branches;
next	1.2;

1.2
date	2007.02.26.19.18.53;	author drow;	state Exp;
branches;
next	1.1;

1.1
date	2007.02.08.21.39.04;	author drow;	state Exp;
branches;
next	;

1.7.4.1
date	2012.01.06.04.43.59;	author brobecke;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Update years in copyright notice for the GDB files.

Two modifications:
  1. The addition of 2013 to the copyright year range for every file;
  2. The use of a single year range, instead of potentially multiple
     year ranges, as approved by the FSF.
@
text
@/* Register test program.

   Copyright 2007-2013 Free Software Foundation, Inc.

   This file is part of GDB.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */

void
read_regs (unsigned long long regs[16], unsigned long control_regs[6])
{
  asm volatile ("wstrd wR0, %0" : "=m" (regs[0]));
  asm volatile ("wstrd wR1, %0" : "=m" (regs[1]));
  asm volatile ("wstrd wR2, %0" : "=m" (regs[2]));
  asm volatile ("wstrd wR3, %0" : "=m" (regs[3]));
  asm volatile ("wstrd wR4, %0" : "=m" (regs[4]));
  asm volatile ("wstrd wR5, %0" : "=m" (regs[5]));
  asm volatile ("wstrd wR6, %0" : "=m" (regs[6]));
  asm volatile ("wstrd wR7, %0" : "=m" (regs[7]));
  asm volatile ("wstrd wR8, %0" : "=m" (regs[8]));
  asm volatile ("wstrd wR9, %0" : "=m" (regs[9]));
  asm volatile ("wstrd wR10, %0" : "=m" (regs[10]));
  asm volatile ("wstrd wR11, %0" : "=m" (regs[11]));
  asm volatile ("wstrd wR12, %0" : "=m" (regs[12]));
  asm volatile ("wstrd wR13, %0" : "=m" (regs[13]));
  asm volatile ("wstrd wR14, %0" : "=m" (regs[14]));
  asm volatile ("wstrd wR15, %0" : "=m" (regs[15]));

  asm volatile ("wstrw wCSSF, %0" : "=m" (control_regs[0]));
  asm volatile ("wstrw wCASF, %0" : "=m" (control_regs[1]));
  asm volatile ("wstrw wCGR0, %0" : "=m" (control_regs[2]));
  asm volatile ("wstrw wCGR1, %0" : "=m" (control_regs[3]));
  asm volatile ("wstrw wCGR2, %0" : "=m" (control_regs[4]));
  asm volatile ("wstrw wCGR3, %0" : "=m" (control_regs[5]));
}

void
write_regs (unsigned long long regs[16], unsigned long control_regs[6])
{
  asm volatile ("wldrd wR0, %0" : : "m" (regs[0]));
  asm volatile ("wldrd wR1, %0" : : "m" (regs[1]));
  asm volatile ("wldrd wR2, %0" : : "m" (regs[2]));
  asm volatile ("wldrd wR3, %0" : : "m" (regs[3]));
  asm volatile ("wldrd wR4, %0" : : "m" (regs[4]));
  asm volatile ("wldrd wR5, %0" : : "m" (regs[5]));
  asm volatile ("wldrd wR6, %0" : : "m" (regs[6]));
  asm volatile ("wldrd wR7, %0" : : "m" (regs[7]));
  asm volatile ("wldrd wR8, %0" : : "m" (regs[8]));
  asm volatile ("wldrd wR9, %0" : : "m" (regs[9]));
  asm volatile ("wldrd wR10, %0" : : "m" (regs[10]));
  asm volatile ("wldrd wR11, %0" : : "m" (regs[11]));
  asm volatile ("wldrd wR12, %0" : : "m" (regs[12]));
  asm volatile ("wldrd wR13, %0" : : "m" (regs[13]));
  asm volatile ("wldrd wR14, %0" : : "m" (regs[14]));
  asm volatile ("wldrd wR15, %0" : : "m" (regs[15]));

  asm volatile ("wldrw wCSSF, %0" : : "m" (control_regs[0]));
  asm volatile ("wldrw wCASF, %0" : : "m" (control_regs[1]));
  asm volatile ("wldrw wCGR0, %0" : : "m" (control_regs[2]));
  asm volatile ("wldrw wCGR1, %0" : : "m" (control_regs[3]));
  asm volatile ("wldrw wCGR2, %0" : : "m" (control_regs[4]));
  asm volatile ("wldrw wCGR3, %0" : : "m" (control_regs[5]));
}

int
main ()
{
  unsigned long long regs[16];
  unsigned long control_regs[6];

  read_regs (regs, control_regs);
  write_regs (regs, control_regs);

  return 0;
}
@


1.8
log
@Copyright year update in most files of the GDB Project.

gdb/ChangeLog:

        Copyright year update in most files of the GDB Project.
@
text
@d3 1
a3 1
   Copyright 2007-2012 Free Software Foundation, Inc.
@


1.7
log
@run copyright.sh for 2011.
@
text
@d3 1
a3 1
   Copyright 2007, 2008, 2009, 2010, 2011 Free Software Foundation, Inc.
@


1.7.4.1
log
@Copyright year update in most files of the GDB Project.

gdb/ChangeLog:

        Copyright year update in most files of the GDB Project.
@
text
@d3 1
a3 1
   Copyright 2007-2012 Free Software Foundation, Inc.
@


1.6
log
@Update copyright year in most headers.

Automatic update by copyright.sh.
@
text
@d3 1
a3 1
   Copyright 2007, 2008, 2009, 2010 Free Software Foundation, Inc.
@


1.5
log
@        Updated copyright notices for most files.
@
text
@d3 1
a3 1
   Copyright 2007, 2008, 2009 Free Software Foundation, Inc.
@


1.4
log
@	Updated copyright notices for most files.
@
text
@d3 1
a3 1
   Copyright 2007, 2008 Free Software Foundation, Inc.
@


1.3
log
@        Switch the license of all .c files to GPLv3.
        Switch the license of all .h files to GPLv3.
        Switch the license of all .cc files to GPLv3.
@
text
@d3 1
a3 1
   Copyright 2007 Free Software Foundation, Inc.
@


1.2
log
@	* arm-tdep.c (arm_scan_prologue): Do not record FPA register saves
	if there are no FPA registers.
	(arm_dwarf_reg_to_regnum): New function.
	(arm_register_type, arm_register_name): Return minimal values for
	unsupported registers.
	(arm_register_sim_regno): Handle iWMMXt registers.
	(arm_gdbarch_init): Record missing FPA registers if indicated by
	a target description.  Recognize iWMMXt registers.  Only register
	"info float" for FPA.  Use ARM_NUM_REGS.  Register
	arm_dwarf_reg_to_regnum.
	* arm-tdep.h (enum gdb_regnum): Add ARM_NUM_REGS and iWMMXt
	constants.
	(struct gdbarch_tdep): Add have_fpa_registers.
	* features/xscale-iwmmxt.xml: Update capitalization.
	* regformats/arm-with-iwmmxt.dat: Regenerated.

	* src/gdb/doc/gdb.texinfo (Standard Target Features): Mention
	case insensitivity.
	(ARM Features): Describe org.gnu.gdb.xscale.iwmmxt.

	* gdb.arch/iwmmxt-regs.c, gdb.arch/iwmmxt-regs.exp: Update
	register capitalization.
@
text
@d9 1
a9 1
   the Free Software Foundation; either version 2 of the License, or
d18 1
a18 3
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place - Suite 330,
   Boston, MA 02111-1307, USA.  */
@


1.1
log
@	* features/Makefile, features/arm-with-iwmmxt.xml,
	features/gdbserver-regs.xsl, features/number-regs.xsl,
	features/sort-regs.xsl, features/xscale-iwmmxt.xml: New files.
	* regformats/arm-with-iwmmxt.dat: Generate.
	* NEWS: Mention iWMMXt.

	* gdb.arch/iwmmxt-regs.c, gdb.arch/iwmmxt-regs.exp: New.

	* Makefile.in (OBS): Add $(XML_BUILTIN).
	(XML_DIR, XML_TARGET, XML_FILES, XML_BUILTIN): New.
	(clean): Update.
	(target.xml, xml-builtin.c, stamp-xml, arm-with-iwmmxt.o)
	(arm-with-iwmmxt.c): New.
	* config.in, configure: Regenerate.
	* configure.ac: Check for iWMMXt.  Handle srv_xmltarget,
	srv_xmlbuiltin, and srv_xmlfiles.  Define USE_XML.
	* configure.srv: Mention srv_xmltarget and srv_xmlfiles.
	(arm*-*-linux*): Add iWMMXt and regset support.
	* linux-arm-low.c (PTRACE_GETWMMXREGS, PTRACE_SETWMMXREGS): Define.
	(arm_fill_gregset, arm_store_gregset, arm_fill_wmmxregset)
	(arm_store_wmmxregset, target_regsets): New.
	* server.c (get_features_xml): Take annex argument.  Check builtin
	XML documents.
	(handle_query): Handle multiple annexes.
@
text
@d25 23
a47 23
  asm volatile ("wstrd wr0, %0" : "=m" (regs[0]));
  asm volatile ("wstrd wr1, %0" : "=m" (regs[1]));
  asm volatile ("wstrd wr2, %0" : "=m" (regs[2]));
  asm volatile ("wstrd wr3, %0" : "=m" (regs[3]));
  asm volatile ("wstrd wr4, %0" : "=m" (regs[4]));
  asm volatile ("wstrd wr5, %0" : "=m" (regs[5]));
  asm volatile ("wstrd wr6, %0" : "=m" (regs[6]));
  asm volatile ("wstrd wr7, %0" : "=m" (regs[7]));
  asm volatile ("wstrd wr8, %0" : "=m" (regs[8]));
  asm volatile ("wstrd wr9, %0" : "=m" (regs[9]));
  asm volatile ("wstrd wr10, %0" : "=m" (regs[10]));
  asm volatile ("wstrd wr11, %0" : "=m" (regs[11]));
  asm volatile ("wstrd wr12, %0" : "=m" (regs[12]));
  asm volatile ("wstrd wr13, %0" : "=m" (regs[13]));
  asm volatile ("wstrd wr14, %0" : "=m" (regs[14]));
  asm volatile ("wstrd wr15, %0" : "=m" (regs[15]));

  asm volatile ("wstrw wcssf, %0" : "=m" (control_regs[0]));
  asm volatile ("wstrw wcasf, %0" : "=m" (control_regs[1]));
  asm volatile ("wstrw wcgr0, %0" : "=m" (control_regs[2]));
  asm volatile ("wstrw wcgr1, %0" : "=m" (control_regs[3]));
  asm volatile ("wstrw wcgr2, %0" : "=m" (control_regs[4]));
  asm volatile ("wstrw wcgr3, %0" : "=m" (control_regs[5]));
d53 23
a75 23
  asm volatile ("wldrd wr0, %0" : : "m" (regs[0]));
  asm volatile ("wldrd wr1, %0" : : "m" (regs[1]));
  asm volatile ("wldrd wr2, %0" : : "m" (regs[2]));
  asm volatile ("wldrd wr3, %0" : : "m" (regs[3]));
  asm volatile ("wldrd wr4, %0" : : "m" (regs[4]));
  asm volatile ("wldrd wr5, %0" : : "m" (regs[5]));
  asm volatile ("wldrd wr6, %0" : : "m" (regs[6]));
  asm volatile ("wldrd wr7, %0" : : "m" (regs[7]));
  asm volatile ("wldrd wr8, %0" : : "m" (regs[8]));
  asm volatile ("wldrd wr9, %0" : : "m" (regs[9]));
  asm volatile ("wldrd wr10, %0" : : "m" (regs[10]));
  asm volatile ("wldrd wr11, %0" : : "m" (regs[11]));
  asm volatile ("wldrd wr12, %0" : : "m" (regs[12]));
  asm volatile ("wldrd wr13, %0" : : "m" (regs[13]));
  asm volatile ("wldrd wr14, %0" : : "m" (regs[14]));
  asm volatile ("wldrd wr15, %0" : : "m" (regs[15]));

  asm volatile ("wldrw wcssf, %0" : : "m" (control_regs[0]));
  asm volatile ("wldrw wcasf, %0" : : "m" (control_regs[1]));
  asm volatile ("wldrw wcgr0, %0" : : "m" (control_regs[2]));
  asm volatile ("wldrw wcgr1, %0" : : "m" (control_regs[3]));
  asm volatile ("wldrw wcgr2, %0" : : "m" (control_regs[4]));
  asm volatile ("wldrw wcgr3, %0" : : "m" (control_regs[5]));
@

