head	1.10;
access;
symbols
	gdb_7_6_1-2013-08-30-release:1.10
	gdb_7_6-2013-04-26-release:1.10
	gdb_7_6-branch:1.10.0.2
	gdb_7_6-2013-03-12-branchpoint:1.10
	gdb_7_5_1-2012-11-29-release:1.9
	gdb_7_5-2012-08-17-release:1.9
	gdb_7_5-branch:1.9.0.2
	gdb_7_5-2012-07-18-branchpoint:1.9
	gdb_7_4_1-2012-04-26-release:1.7.4.1
	gdb_7_4-2012-01-24-release:1.7.4.1
	gdb_7_4-branch:1.7.0.4
	gdb_7_4-2011-12-13-branchpoint:1.7
	gdb_7_3_1-2011-09-04-release:1.7
	gdb_7_3-2011-07-26-release:1.7
	gdb_7_3-branch:1.7.0.2
	gdb_7_3-2011-04-01-branchpoint:1.7
	gdb_7_2-2010-09-02-release:1.5
	gdb_7_2-branch:1.5.0.2
	gdb_7_2-2010-07-07-branchpoint:1.5
	gdb_7_1-2010-03-18-release:1.4
	gdb_7_1-branch:1.4.0.2
	gdb_7_1-2010-02-18-branchpoint:1.4
	gdb_7_0_1-2009-12-22-release:1.3
	gdb_7_0-2009-10-06-release:1.3
	gdb_7_0-branch:1.3.0.4
	gdb_7_0-2009-09-16-branchpoint:1.3
	arc-sim-20090309:1.1
	msnyder-checkpoint-072509-branch:1.3.0.2
	msnyder-checkpoint-072509-branchpoint:1.3
	arc-insight_6_8-branch:1.1.0.6
	arc-insight_6_8-branchpoint:1.1
	insight_6_8-branch:1.1.0.4
	insight_6_8-branchpoint:1.1
	reverse-20081226-branch:1.2.0.10
	reverse-20081226-branchpoint:1.2
	multiprocess-20081120-branch:1.2.0.8
	multiprocess-20081120-branchpoint:1.2
	reverse-20080930-branch:1.2.0.6
	reverse-20080930-branchpoint:1.2
	reverse-20080717-branch:1.2.0.4
	reverse-20080717-branchpoint:1.2
	msnyder-reverse-20080609-branch:1.2.0.2
	msnyder-reverse-20080609-branchpoint:1.2
	gdb_6_8-2008-03-27-release:1.1
	gdb_6_8-branch:1.1.0.2
	gdb_6_8-2008-02-26-branchpoint:1.1;
locks; strict;
comment	@# @;


1.10
date	2013.01.01.06.33.24;	author brobecke;	state Exp;
branches;
next	1.9;

1.9
date	2012.01.16.16.21.44;	author palves;	state Exp;
branches;
next	1.8;

1.8
date	2012.01.04.08.17.45;	author brobecke;	state Exp;
branches;
next	1.7;

1.7
date	2011.01.01.15.33.40;	author brobecke;	state Exp;
branches
	1.7.4.1;
next	1.6;

1.6
date	2010.07.12.17.33.15;	author hjl;	state Exp;
branches;
next	1.5;

1.5
date	2010.05.05.18.06.57;	author brobecke;	state Exp;
branches;
next	1.4;

1.4
date	2010.01.01.07.32.00;	author brobecke;	state Exp;
branches;
next	1.3;

1.3
date	2009.01.03.05.58.03;	author brobecke;	state Exp;
branches;
next	1.2;

1.2
date	2008.05.26.15.46.55;	author luisgpm;	state Exp;
branches;
next	1.1;

1.1
date	2008.01.31.16.00.25;	author luisgpm;	state Exp;
branches;
next	;

1.7.4.1
date	2012.01.06.04.43.59;	author brobecke;	state Exp;
branches;
next	;


desc
@@


1.10
log
@Update years in copyright notice for the GDB files.

Two modifications:
  1. The addition of 2013 to the copyright year range for every file;
  2. The use of a single year range, instead of potentially multiple
     year ranges, as approved by the FSF.
@
text
@# Copyright 2008-2013 Free Software Foundation, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
#
# This file is part of the gdb testsuite.

# Test single stepping through atomic sequences beginning with
# a lwarx/ldarx instruction and ending with a stwcx/stdcx
# instruction.


if {![istarget "powerpc*"] || ![is_lp64_target]} {
    verbose "Skipping testing of powerpc64 single stepping over atomic sequences."
    return
}

set testfile "ppc64-atomic-inst"
set srcfile ${testfile}.c
set binfile ${objdir}/${subdir}/${testfile}
set compile_flags {debug quiet}

if { [gdb_compile "${srcdir}/${subdir}/${srcfile}" "${binfile}" executable $compile_flags] != "" } {
    unsupported "Testcase compile failed."
    return -1
}

gdb_exit
gdb_start
gdb_reinitialize_dir $srcdir/$subdir
gdb_load ${binfile}

if ![runto_main] then {
    perror "Couldn't run to breakpoint"
    continue
}

set bp1 [gdb_get_line_number "lwarx"]
gdb_breakpoint "$bp1" "Breakpoint $decimal at $hex" \
  "Set the breakpoint at the start of the sequence"

gdb_test continue "Continuing.*Breakpoint $decimal.*" \
  "Continue until breakpoint"

gdb_test next ".*__asm __volatile.*" \
  "Step through the lwarx/stwcx sequence"

gdb_test next ".*return 0.*" \
  "Step through the ldarx/stdcx sequence"
@


1.9
log
@2012-01-16  Pedro Alves  <palves@@redhat.com>

	Remove all calls to strace.
@
text
@d1 1
a1 1
# Copyright 2008-2012 Free Software Foundation, Inc.
@


1.8
log
@Copyright year update in most files of the GDB Project.

gdb/ChangeLog:

        Copyright year update in most files of the GDB Project.
@
text
@a18 4
if $tracelevel {
    strace $tracelevel
}

@


1.7
log
@run copyright.sh for 2011.
@
text
@d1 1
a1 1
# Copyright 2008, 2009, 2010, 2011 Free Software Foundation, Inc.
@


1.7.4.1
log
@Copyright year update in most files of the GDB Project.

gdb/ChangeLog:

        Copyright year update in most files of the GDB Project.
@
text
@d1 1
a1 1
# Copyright 2008-2012 Free Software Foundation, Inc.
@


1.6
log
@Add is_ilp32_target/is_lp64_target.

2010-07-12  Ulrich Weigand  <uweigand@@de.ibm.com>
	    H.J. Lu  <hongjiu.lu@@intel.com>

	* lib/gdb.exp (is_ilp32_target): New.
	(is_lp64_target): Likewise.

	* gdb.arch/amd64-byte.exp: Use is_lp64_target to check 64bit
	target.
	* gdb.arch/amd64-disp-step.exp: Likewise.
	* gdb.arch/amd64-dword.exp: Likewise.
	* gdb.arch/amd64-i386-address.exp: Likewise.
	* gdb.arch/amd64-word.exp: Likewise.

	* gdb.arch/i386-avx.exp: Use is_ilp32_target to check for 32bit
	target.
	* gdb.arch/i386-bp_permanent.exp: Likewise.
	* gdb.arch/i386-byte.exp: Likewise.
	* gdb.arch/i386-disp-step.exp: Likewise.
	* gdb.arch/i386-gnu-cfi.exp: Likewise.
	* gdb.arch/i386-prologue.exp: Likewise.
	* gdb.arch/i386-size-overlap.exp: Likewise.
	* gdb.arch/i386-size.exp: Likewise.
	* gdb.arch/i386-sse.exp: Likewise.
	* gdb.arch/i386-unwind.exp: Likewise.
	* gdb.arch/i386-word.exp: Likewise.

	* gdb.arch/ppc64-atomic-inst.exp: Use is_lp64_target to execute
	test only when building 64-bit executables.  Do not hard-code
	-m64 option.
@
text
@d1 1
a1 1
# Copyright 2008, 2009, 2010 Free Software Foundation, Inc.
@


1.5
log
@Do not set prms_id/bug_id anymore.

2010-05-05  Joel Brobecker  <brobecker@@adacore.com>

	Remove the use of prms_id and bug_id throughout the testsuite.
@
text
@d28 1
a28 1
if ![istarget "powerpc64-*"] then {
d36 1
a36 1
set compile_flags "debug quiet"
d38 1
a38 1
if { [gdb_compile "${srcdir}/${subdir}/${srcfile}" "${binfile}" executable [concat $compile_flags additional_flags=-m64]] != "" } {
@


1.4
log
@Update copyright year in most headers.

Automatic update by copyright.sh.
@
text
@a26 2
set prms_id 0
set bug_id 0
@


1.3
log
@        Updated copyright notices for most files.
@
text
@d1 1
a1 1
# Copyright 2008, 2009 Free Software Foundation, Inc.
@


1.2
log
@	* gdb.arch/ppc64-atomic-inst.exp: Make the expected compile failure
	quiet for ppc32 and group options into a single variable.
@
text
@d1 1
a1 1
# Copyright 2008 Free Software Foundation, Inc.
@


1.1
log
@	* gdb.arch/ppc64-atomic-inst.c: New testcase source file.
	* gdb.arch/ppc64-atomic-inst.exp: New testcase expect file.
@
text
@d38 1
a38 1
set compile_flags "debug"
d40 1
a40 1
if { [gdb_compile "${srcdir}/${subdir}/${srcfile}" "${binfile}" executable [concat debug additional_flags=-m64]] != "" } {
@

