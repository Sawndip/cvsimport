head	1.12;
access;
symbols
	gdb_7_6_1-2013-08-30-release:1.12
	gdb_7_6-2013-04-26-release:1.12
	gdb_7_6-branch:1.12.0.2
	gdb_7_6-2013-03-12-branchpoint:1.12
	gdb_7_5_1-2012-11-29-release:1.11
	gdb_7_5-2012-08-17-release:1.11
	gdb_7_5-branch:1.11.0.2
	gdb_7_5-2012-07-18-branchpoint:1.11
	gdb_7_4_1-2012-04-26-release:1.10.2.1
	gdb_7_4-2012-01-24-release:1.10.2.1
	gdb_7_4-branch:1.10.0.2
	gdb_7_4-2011-12-13-branchpoint:1.10
	gdb_7_3_1-2011-09-04-release:1.9
	gdb_7_3-2011-07-26-release:1.9
	gdb_7_3-branch:1.9.0.2
	gdb_7_3-2011-04-01-branchpoint:1.9
	gdb_7_2-2010-09-02-release:1.8
	gdb_7_2-branch:1.8.0.4
	gdb_7_2-2010-07-07-branchpoint:1.8
	gdb_7_1-2010-03-18-release:1.8
	gdb_7_1-branch:1.8.0.2
	gdb_7_1-2010-02-18-branchpoint:1.8
	gdb_7_0_1-2009-12-22-release:1.7
	gdb_7_0-2009-10-06-release:1.7
	gdb_7_0-branch:1.7.0.4
	gdb_7_0-2009-09-16-branchpoint:1.7
	arc-sim-20090309:1.6
	msnyder-checkpoint-072509-branch:1.7.0.2
	msnyder-checkpoint-072509-branchpoint:1.7
	arc-insight_6_8-branch:1.6.0.16
	arc-insight_6_8-branchpoint:1.6
	insight_6_8-branch:1.6.0.14
	insight_6_8-branchpoint:1.6
	reverse-20081226-branch:1.6.0.12
	reverse-20081226-branchpoint:1.6
	multiprocess-20081120-branch:1.6.0.10
	multiprocess-20081120-branchpoint:1.6
	reverse-20080930-branch:1.6.0.8
	reverse-20080930-branchpoint:1.6
	reverse-20080717-branch:1.6.0.6
	reverse-20080717-branchpoint:1.6
	msnyder-reverse-20080609-branch:1.6.0.4
	msnyder-reverse-20080609-branchpoint:1.6
	drow-reverse-20070409-branch:1.3.0.2
	drow-reverse-20070409-branchpoint:1.3
	gdb_6_8-2008-03-27-release:1.6
	gdb_6_8-branch:1.6.0.2
	gdb_6_8-2008-02-26-branchpoint:1.6
	gdb_6_7_1-2007-10-29-release:1.5
	gdb_6_7-2007-10-10-release:1.5
	gdb_6_7-branch:1.5.0.2
	gdb_6_7-2007-09-07-branchpoint:1.5
	gdb-csl-symbian-6_4_50_20060226-12:1.1.2.1.2.1
	gdb-csl-symbian-6_4_50_20060226-11:1.1.2.1
	gdb-csl-sourcerygxx-4_1-17:1.1.2.1
	gdb-csl-20060226-branch-local-2:1.1.2.1
	gdb-csl-sourcerygxx-4_1-14:1.1.2.1
	gdb-csl-sourcerygxx-4_1-13:1.1.2.1
	gdb-csl-sourcerygxx-4_1-12:1.1.2.1
	gdb-csl-sourcerygxx-3_4_4-21:1.1.2.1
	gdb-csl-sourcerygxx-4_1-9:1.1.2.1
	gdb-csl-sourcerygxx-4_1-8:1.1.2.1
	gdb-csl-sourcerygxx-4_1-7:1.1.2.1
	gdb-csl-arm-2006q1-6:1.1.2.1
	gdb-csl-sourcerygxx-4_1-6:1.1.2.1
	gdb-csl-symbian-6_4_50_20060226-10:1.1.2.1
	gdb-csl-symbian-6_4_50_20060226-9:1.1.2.1
	gdb-csl-symbian-6_4_50_20060226-8:1.1.2.1
	gdb-csl-coldfire-4_1-11:1.1.2.1
	gdb-csl-sourcerygxx-3_4_4-19:1.1.2.1
	gdb-csl-coldfire-4_1-10:1.1.2.1
	gdb-csl-sourcerygxx-4_1-5:1.1.2.1
	gdb-csl-sourcerygxx-4_1-4:1.1.2.1
	gdb-csl-morpho-4_1-4:1.1.2.1
	gdb-csl-sourcerygxx-3_4_4-17:1.1.2.1
	gdb-csl-20060226-branch-merge-to-csl-symbian-1:1.1.2.1
	gdb-csl-symbian-20060226-branch:1.1.2.1.0.2
	gdb-csl-symbian-20060226-branchpoint:1.1.2.1
	gdb-csl-20060226-branch-merge-to-csl-local-1:1.1.2.1
	gdb-csl-20060226-branch:1.1.0.2;
locks; strict;
comment	@ * @;


1.12
date	2013.01.01.06.33.24;	author brobecke;	state Exp;
branches;
next	1.11;

1.11
date	2012.01.04.08.17.45;	author brobecke;	state Exp;
branches;
next	1.10;

1.10
date	2011.11.09.00.53.40;	author meadori;	state Exp;
branches
	1.10.2.1;
next	1.9;

1.9
date	2011.01.01.15.33.40;	author brobecke;	state Exp;
branches;
next	1.8;

1.8
date	2010.01.01.07.32.00;	author brobecke;	state Exp;
branches;
next	1.7;

1.7
date	2009.01.03.05.58.03;	author brobecke;	state Exp;
branches;
next	1.6;

1.6
date	2008.01.01.22.53.18;	author drow;	state Exp;
branches;
next	1.5;

1.5
date	2007.08.23.18.08.49;	author brobecke;	state Exp;
branches;
next	1.4;

1.4
date	2007.06.05.18.50.41;	author drow;	state Exp;
branches;
next	1.3;

1.3
date	2007.01.09.17.59.09;	author drow;	state Exp;
branches;
next	1.2;

1.2
date	2006.11.22.18.51.58;	author drow;	state Exp;
branches;
next	1.1;

1.1
date	2006.03.21.02.13.36;	author pbrook;	state dead;
branches
	1.1.2.1;
next	;

1.10.2.1
date	2012.01.06.04.43.59;	author brobecke;	state Exp;
branches;
next	;

1.1.2.1
date	2006.03.21.02.13.36;	author pbrook;	state Exp;
branches
	1.1.2.1.2.1;
next	;

1.1.2.1.2.1
date	2006.09.25.18.16.03;	author drow;	state Exp;
branches;
next	;


desc
@@


1.12
log
@Update years in copyright notice for the GDB files.

Two modifications:
  1. The addition of 2013 to the copyright year range for every file;
  2. The use of a single year range, instead of potentially multiple
     year ranges, as approved by the FSF.
@
text
@/* Unwinder test program.

   Copyright 2006-2013 Free Software Foundation, Inc.

   This file is part of GDB.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */

void tpcs_frame (void);
void switch_stack_to_same (void);
void switch_stack_to_other (void);

int
main (void)
{
  tpcs_frame ();
  switch_stack_to_same ();
  switch_stack_to_other ();
  return 0;
}

/* Normally Thumb functions use r7 as the frame pointer.  However,
   with the GCC option -mtpcs-frame, they may use fp instead.  Make
   sure that the prologue analyzer can handle this.  */

asm(".text\n"
    "	.align 2\n"
    "	.thumb_func\n"
    "	.code 16\n"
    "tpcs_frame_1:\n"
    "	sub	sp, #16\n"
    "	push	{r7}\n"
    "	add	r7, sp, #20\n"
    "	str	r7, [sp, #8]\n"
    "	mov	r7, pc\n"
    "	str	r7, [sp, #16]\n"
    "	mov	r7, fp\n"
    "	str	r7, [sp, #4]\n"
    "	mov	r7, lr\n"
    "	str	r7, [sp, #12]\n"
    "	add	r7, sp, #16\n"
    "	mov	fp, r7\n"
    "	mov	r7, sl\n"
    "	push	{r7}\n"

    /* We'll set a breakpoint at this call.  We can't hardcode a trap
       instruction; the right instruction to use varies too much.  And
       we can't use a global label, because GDB will think that's the
       start of a new function.  So, this slightly convoluted
       technique.  */
    ".Ltpcs:\n"
    "	nop\n"

    "	pop	{r2}\n"
    "	mov	sl, r2\n"
    "	pop	{r7}\n"
    "	pop	{r1, r2}\n"
    "	mov	fp, r1\n"
    "	mov	sp, r2\n"
    "	bx	lr\n"

    "	.align 2\n"
    "	.type tpcs_offset, %object\n"
    "tpcs_offset:\n"
    "	.word .Ltpcs - tpcs_frame_1\n"

    "	.align 2\n"
    "	.thumb_func\n"
    "	.code 16\n"
    "tpcs_frame:\n"
    "	sub	sp, #16\n"
    "	push	{r7}\n"
    "	add	r7, sp, #20\n"
    "	str	r7, [sp, #8]\n"
    "	mov	r7, pc\n"
    "	str	r7, [sp, #16]\n"
    "	mov	r7, fp\n"
    "	str	r7, [sp, #4]\n"
    "	mov	r7, lr\n"
    "	str	r7, [sp, #12]\n"
    "	add	r7, sp, #16\n"
    "	mov	fp, r7\n"
    "	mov	r7, sl\n"
    "	push	{r7}\n"

    /* Clobber saved regs around the call.  */
    "	mov	r7, #0\n"
    "	mov	lr, r7\n"
    "	bl	tpcs_frame_1\n"

    "	pop	{r2}\n"
    "	mov	sl, r2\n"
    "	pop	{r7}\n"
    "	pop	{r1, r2, r3}\n"
    "	mov	fp, r1\n"
    "	mov	sp, r2\n"
    "	mov	lr, r3\n"
    "	bx	lr\n"
);

asm(".text\n"
    "	.align 2\n"
    "	.thumb_func\n"
    "	.code 16\n"
    "write_sp:\n"
    "	mov	sp, r0\n"
    "	bx	lr\n"

    "	.align 2\n"
    "	.thumb_func\n"
    "	.code 16\n"
    "switch_stack_to_same:\n"
    "	push	{lr}\n"
    "	mov	r0, sp\n"
    "	bl	write_sp\n"
    "	pop	{r1}\n"
    "	bx	r1\n"

    "	.align 2\n"
    "	.thumb_func\n"
    "	.code 16\n"
    "switch_stack_to_other:\n"
    "	push	{lr}\n"
    "	mov	r7, sp\n"
    "	mov	r0, #128\n"
    "	bl	write_sp\n"
    "	mov	sp, r7\n"
    "	pop	{r1}\n"
    "	bx	r1\n");
@


1.11
log
@Copyright year update in most files of the GDB Project.

gdb/ChangeLog:

        Copyright year update in most files of the GDB Project.
@
text
@d3 1
a3 1
   Copyright 2006-2012 Free Software Foundation, Inc.
@


1.10
log
@gdb/
* arm-tdep.c (thumb_analyze_prologue): Always fallback on the SP
register when the frame can't be determined.
* arm-tdep.c (arm_analyze_prologue): Ditto.

gdb/testsuite/
* gdb.arch/thumb-prologue.c (switch_stack_to_same): New test function.
(switch_stack_to_other): New test function.
* gdb.arch/thumb-prologue.exp: New test cases.
@
text
@d3 1
a3 1
   Copyright 2006, 2007, 2008, 2009, 2010, 2011 Free Software Foundation, Inc.
@


1.10.2.1
log
@Copyright year update in most files of the GDB Project.

gdb/ChangeLog:

        Copyright year update in most files of the GDB Project.
@
text
@d3 1
a3 1
   Copyright 2006-2012 Free Software Foundation, Inc.
@


1.9
log
@run copyright.sh for 2011.
@
text
@d21 2
d28 2
d111 30
@


1.8
log
@Update copyright year in most headers.

Automatic update by copyright.sh.
@
text
@d3 1
a3 1
   Copyright 2006, 2007, 2008, 2009, 2010 Free Software Foundation, Inc.
@


1.7
log
@        Updated copyright notices for most files.
@
text
@d3 1
a3 1
   Copyright 2006, 2007, 2008, 2009 Free Software Foundation, Inc.
@


1.6
log
@	Updated copyright notices for most files.
@
text
@d3 1
a3 1
   Copyright 2006, 2007, 2008 Free Software Foundation, Inc.
@


1.5
log
@        Switch the license of all .c files to GPLv3.
        Switch the license of all .h files to GPLv3.
        Switch the license of all .cc files to GPLv3.
@
text
@d3 1
a3 1
   Copyright 2006, 2007 Free Software Foundation, Inc.
@


1.4
log
@	* gdb.arch/thumb-prologue.c: Record the breakpoint address in
	tpcs_offset.  Restore lr after the call.
	* gdb.arch/thumb-prologue.exp: Use tpcs_offset.
@
text
@d9 1
a9 1
   the Free Software Foundation; either version 2 of the License, or
d11 1
a11 1
   
d16 1
a16 1
   
d18 1
a18 3
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place - Suite 330,
   Boston, MA 02111-1307, USA.  */
@


1.3
log
@Copyright updates for 2007.
@
text
@d32 2
a33 1
   with the GCC option -mtpcs-frame, they may use fp instead.  */
d55 7
a61 2
    /* Trap.  */
    "	.short	0xdffe\n"
d72 5
d95 1
a95 1
    /* Clobber saved regs.  */
d103 1
a103 1
    "	pop	{r1, r2}\n"
d106 1
@


1.2
log
@gdb/
	* Makefile.in (arm-tdep.o): Update dependencies.
	* arm-tdep.c (thumb_skip_prologue): Remove.
	(thumb_analyze_prologue): New function.
	(arm_skip_prologue): Use thumb_analyze_prologue.
	(thumb_scan_prologue): Ditto.
gdb/testsuite/
	* gdb.arch/thumb-prologue.c, gdb.arch/thumb-prologue.exp: New files.
@
text
@d3 1
a3 1
   Copyright 2006 Free Software Foundation, Inc.
@


1.1
log
@file thumb-prologue.c was initially added on branch gdb-csl-20060226-branch.
@
text
@d1 96
@


1.1.2.1
log
@2006-03-21  Paul Brook  <paul@@codesourcery.com>
	Daniel Jacobowitz <dan@@codesourcery.com>
	Jim Blandy <jimb@@codesourcery.com>

	* gdb/Makefile.in: Add prologue_value.{c,h}
	* gdb/arm-tdep.c: Include prologue-value.h.
	(thumb_skip_prologue): Remove.
	(thumb_analyze_prologue): New function.
	(arm_skip_prologue): Use thumb_analyze_prologue.
	(thumb_scan_prologue): Ditto.
	* gdb/prologue-value.c: New file.
	* gdb/prologue-value.h: New file.
	* gdb/config/arm/embed.mt (TDEPFILES): Add prologue-value.o.
	* gdb/config/arm/linux.mt (TDEPFILES): Add prologue-value.o.
	* gdb/config/arm/nbsd.mt (TDEPFILES): Add prologue-value.o.
	* gdb/config/arm/wince.mt (TDEPFILES): Add prologue-value.o.
	* gdb/testsuite/gdb.arch/thumb-prologue.c: New file.
	* gdb/testsuite/gdb.arch/thumb-prologue.exp: New file.
@
text
@a0 96
/* Unwinder test program.

   Copyright 2006 Free Software Foundation, Inc.

   This file is part of GDB.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2 of the License, or
   (at your option) any later version.
   
   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.
   
   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place - Suite 330,
   Boston, MA 02111-1307, USA.  */

void tpcs_frame (void);

int
main (void)
{
  tpcs_frame ();
  return 0;
}

/* Normally Thumb functions use r7 as the frame pointer.  However,
   with the GCC option -mtpcs-frame, they may use fp instead.  */

asm(".text\n"
    "	.align 2\n"
    "	.thumb_func\n"
    "	.code 16\n"
    "tpcs_frame_1:\n"
    "	sub	sp, #16\n"
    "	push	{r7}\n"
    "	add	r7, sp, #20\n"
    "	str	r7, [sp, #8]\n"
    "	mov	r7, pc\n"
    "	str	r7, [sp, #16]\n"
    "	mov	r7, fp\n"
    "	str	r7, [sp, #4]\n"
    "	mov	r7, lr\n"
    "	str	r7, [sp, #12]\n"
    "	add	r7, sp, #16\n"
    "	mov	fp, r7\n"
    "	mov	r7, sl\n"
    "	push	{r7}\n"

    /* Trap.  */
    "	.short	0xdffe\n"

    "	pop	{r2}\n"
    "	mov	sl, r2\n"
    "	pop	{r7}\n"
    "	pop	{r1, r2}\n"
    "	mov	fp, r1\n"
    "	mov	sp, r2\n"
    "	bx	lr\n"

    "	.align 2\n"
    "	.thumb_func\n"
    "	.code 16\n"
    "tpcs_frame:\n"
    "	sub	sp, #16\n"
    "	push	{r7}\n"
    "	add	r7, sp, #20\n"
    "	str	r7, [sp, #8]\n"
    "	mov	r7, pc\n"
    "	str	r7, [sp, #16]\n"
    "	mov	r7, fp\n"
    "	str	r7, [sp, #4]\n"
    "	mov	r7, lr\n"
    "	str	r7, [sp, #12]\n"
    "	add	r7, sp, #16\n"
    "	mov	fp, r7\n"
    "	mov	r7, sl\n"
    "	push	{r7}\n"

    /* Clobber saved regs.  */
    "	mov	r7, #0\n"
    "	mov	lr, r7\n"
    "	bl	tpcs_frame_1\n"

    "	pop	{r2}\n"
    "	mov	sl, r2\n"
    "	pop	{r7}\n"
    "	pop	{r1, r2}\n"
    "	mov	fp, r1\n"
    "	mov	sp, r2\n"
    "	bx	lr\n"
);
@


1.1.2.1.2.1
log
@        gdb/testsuite/
        * gdb.arch/thumb-prologue.c: Update breakpoint mechanism.  Restore
        lr before returning for completeness.
        * gdb.arch/thumb-prologue.exp: Update to set a breakpoint.
@
text
@d32 1
a32 2
   with the GCC option -mtpcs-frame, they may use fp instead.  Make
   sure that the prologue analyzer can handle this.  */
d54 2
a55 7
    /* We'll set a breakpoint at this call.  We can't hardcode a trap
       instruction; the right instruction to use varies too much.  And
       we can't use a global label, because GDB will think that's the
       start of a new function.  So, this slightly convoluted
       technique.  */
    ".Ltpcs:\n"
    "	nop\n"
a65 5
    "	.type tpcs_offset, %object\n"
    "tpcs_offset:\n"
    "	.word .Ltpcs - tpcs_frame_1\n"

    "	.align 2\n"
d84 1
a84 1
    /* Clobber saved regs around the call.  */
d92 1
a92 1
    "	pop	{r1, r2, r3}\n"
a94 1
    "	mov	lr, r3\n"
@


