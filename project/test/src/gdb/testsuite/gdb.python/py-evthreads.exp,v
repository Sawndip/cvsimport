head	1.12;
access;
symbols
	gdb_7_6_1-2013-08-30-release:1.11
	gdb_7_6-2013-04-26-release:1.11
	gdb_7_6-branch:1.11.0.2
	gdb_7_6-2013-03-12-branchpoint:1.11
	gdb_7_5_1-2012-11-29-release:1.9
	gdb_7_5-2012-08-17-release:1.9
	gdb_7_5-branch:1.9.0.2
	gdb_7_5-2012-07-18-branchpoint:1.9
	gdb_7_4_1-2012-04-26-release:1.6.2.1
	gdb_7_4-2012-01-24-release:1.6.2.1
	gdb_7_4-branch:1.6.0.2
	gdb_7_4-2011-12-13-branchpoint:1.6
	gdb_7_3_1-2011-09-04-release:1.1
	gdb_7_3-2011-07-26-release:1.1
	gdb_7_3-branch:1.1.0.2
	gdb_7_3-2011-04-01-branchpoint:1.1;
locks; strict;
comment	@# @;


1.12
date	2013.09.04.23.49.21;	author devans;	state Exp;
branches;
next	1.11;

1.11
date	2013.01.01.06.41.26;	author brobecke;	state Exp;
branches;
next	1.10;

1.10
date	2012.12.10.21.22.21;	author pkoning;	state Exp;
branches;
next	1.9;

1.9
date	2012.06.22.17.59.33;	author tromey;	state Exp;
branches;
next	1.8;

1.8
date	2012.01.16.16.21.52;	author palves;	state Exp;
branches;
next	1.7;

1.7
date	2012.01.04.08.27.49;	author brobecke;	state Exp;
branches;
next	1.6;

1.6
date	2011.09.16.07.34.27;	author jkratoch;	state Exp;
branches
	1.6.2.1;
next	1.5;

1.5
date	2011.09.13.21.39.59;	author jkratoch;	state Exp;
branches;
next	1.4;

1.4
date	2011.07.18.04.14.21;	author qiyao;	state Exp;
branches;
next	1.3;

1.3
date	2011.07.06.19.52.21;	author mpolacek;	state Exp;
branches;
next	1.2;

1.2
date	2011.07.06.15.00.15;	author mpolacek;	state Exp;
branches;
next	1.1;

1.1
date	2011.02.05.05.27.23;	author teawater;	state Exp;
branches;
next	;

1.6.2.1
date	2012.01.06.04.44.11;	author brobecke;	state Exp;
branches;
next	;


desc
@@


1.12
log
@	* gdb.python/py-events.py (exit_handler): Verify we get the expected
	event.
	(continue_handler, new_objfile_handler): Ditto.
	(test_events): Rename command to "test-events".
	(test_newobj_events): Rename command to "test-objfile-events".
	* gdb.python/py-events.exp: Update.
	* gdb.python/py-evsignal.exp: Update.
	* gdb.python/py-evthreads.exp: Update.
@
text
@# Copyright (C) 2010-2013 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

if {[is_remote target]} {
    # RuntimeError: Could not find event thread
    kfail "python/12966" "Run to breakpoint 1"
    return -1
}

if { ![support_displaced_stepping] } { 
    unsupported "displaced stepping"
    return -1
}

load_lib gdb-python.exp

standard_testfile
set pyfile ${srcdir}/${subdir}/py-events.py

if {[gdb_compile_pthreads "${srcdir}/${subdir}/${srcfile}" "${binfile}" executable {debug}] != "" } {
    return -1
}
clean_restart $testfile

if { [skip_python_tests] } { continue }

gdb_test_no_output "python exec (open ('${pyfile}').read ())" ""

gdb_test "test-events" "Event testers registered."
gdb_test_no_output "set non-stop on"
gdb_test_no_output "set target-async on"

gdb_breakpoint "main"
gdb_breakpoint "thread2"
gdb_breakpoint "thread3"

gdb_run_cmd
set test "Run to breakpoint 1"
gdb_test_multiple "" $test {
    -re "event type: stop\r\nstop reason: breakpoint\r\nfirst breakpoint number: 1\r\nbreakpoint number: 1\r\nthread num: 1\r\n$gdb_prompt $" {
        pass $test
    }
    -re "The target does not support running in non-stop mode" {
        unsupported "non-stop mode is unsupported"
        return
    }
}

gdb_test "next" "event type: stop\r\nstop reason: breakpoint\r\nfirst breakpoint number: 2\r\nbreakpoint number: 2\r\nthread num: 2" "reached breakpoint 2"

gdb_test "thread 2" {\[Switching to thread 2 .*}

gdb_test "next" "event type: stop\r\nstop reason: breakpoint\r\nfirst breakpoint number: 3\r\nbreakpoint number: 3\r\nthread num: 3" "reached breakpoint 3"

gdb_test "thread 3" {\[Switching to thread 3 .*}

set test "continue thread 1"
gdb_test_multiple "continue&" $test {
    -re "event type: continue\r\nthread num: 3\r\n$gdb_prompt " {
	# This expect string must not expect the end-of-buffer '$'.
        pass $test
    }
}

set test "thread 3 was signaled"
gdb_test_multiple "" $test {
    -re "event type: stop\r\nstop reason: signal\r\nstop signal: SIGUSR1\r\nthread num: 3\r\nevent type: stop\r\n$" {
        pass $test
    }
}
@


1.11
log
@Update years in copyright notice for the GDB files.

Two modifications:
  1. The addition of 2013 to the copyright year range for every file;
  2. The use of a single year range, instead of potentially multiple
     year ranges, as approved by the FSF.
@
text
@d41 1
a41 1
gdb_test "Test_Events" "Event testers registered."
@


1.10
log
@2012-12-10  Paul Koning  <paul_koning@@dell.com>

	* gdb.base/charset.exp: Change print syntax for Python 3
	compatibility.
	* gdb.python/py-block.exp: Ditto.
	* gdb.python/py-breakpoint.exp: Ditto.
	* gdb.python/py-cmd.exp: Ditto.
	* gdb.python/py-events.py: Ditto.
	* gdb.python/py-finish-breakpoint.py: Ditto.
	* gdb.python/py-finish-breakpoint2.exp: Ditto.
	* gdb.python/py-finish-breakpoint2.py: Ditto.
	* gdb.python/py-frame-inline.exp: Ditto.
	* gdb.python/py-frame.exp: Ditto.
	* gdb.python/py-infthread.exp: Ditto.
	* gdb.python/py-objfile.exp: Ditto.
	* gdb.python/py-parameter.exp: Ditto.
	* gdb.python/py-progspace.exp: Ditto.
	* gdb.python/py-prompt.exp: Ditto.
	* gdb.python/py-symbol.exp: Ditto.
	* gdb.python/py-symtab.exp: Ditto.
	* gdb.python/py-template.exp: Ditto.
	* gdb.python/py-value-cc.exp: Ditto.
	* gdb.python/python.exp: Ditto.
	* gdb.python/source2.py: Ditto.
	* gdb.python/lib-types.exp: Change print syntax for Python 3
	compatibility.
	Use sorted() function rather than sort() method.
	Accept either int or long values for enum values.
	* gdb.python/py-events.exp: Use exec(open(...).read()) instead of
	execfile for Python 3 compatibility.
	* gdb.python/py-evsignal.exp: Ditto.
	* gdb.python/py-evthreads.exp: Ditto.
	* gdb.python/py-mi.exp: Ditto.
	* gdb.python/py-pp-maint.exp: Ditto.
	* gdb.python/py-prettyprint.exp: Ditto.
	* gdb.python/py-finish-breakpoint.exp: Change print syntax for
	Python 3 compatibility.
	Skip tests for Python 2.4.
	* gdb.python/py-inferior.exp: Change print syntax for
	Python 3 compatibility.
	Use byte string rather than character string in memory write test
	if Python 3.
	* gdb.python/py-pp-maint.py: Change class declarations to "new
	class" syntax.
	* gdb.python/py-prettyprint.py: Change iterator class to generator
	function for Python 3 compatibility.
	Make all classes "new style".
	Fix indentation issue and stray semicolon.
	* gdb.python/py-shared.expChange print syntax for Python 3
	compatibility.
	Define "long" if Python 3.
	* gdb.python/py-type.exp: Change print syntax for Python 3
	compatibility.
	Accept either int or long values for enum values.
	* gdb.python/py-value.exp: Change print syntax for Python 3
	compatibility.
	Skip "long" and "unicode" tests if Python 3.
	Accept either "type" or "class" in type checks.
	* lib/gdb.exp (gdb_py_is_py3k): New flag set if Python 3.
	(gdb_py_is_py24): New flag set if Python 2.4 or 2.5.
@
text
@d1 1
a1 1
# Copyright (C) 2010-2012 Free Software Foundation, Inc.
@


1.9
log
@	* gdb.python/lib-types.exp: Use standard_testfile,
	prepare_for_testing.
	* gdb.python/py-block.exp: Use standard_testfile.
	* gdb.python/py-breakpoint.exp: Use standard_testfile.
	* gdb.python/py-events.exp: Use standard_testfile,
	standard_output_file.
	* gdb.python/py-evsignal.exp: Use standard_testfile.
	* gdb.python/py-evethreads.exp: Use standard_testfile.
	* gdb.python/py-explore-cc.exp: Use standard_testfile.
	* gdb.python/py-explore.exp: Use standard_testfile.
	* gdb.python/py-finish-breakpoint.exp: Use standard_testfile,
	standard_output_file.
	* gdb.python/py-finish-breakpoint2.exp: Use standard_testfile,
	prepare_for_testing.
	* gdb.python/py-frame-inline.exp: Use standard_testfile.
	* gdb.python/py-frame.exp: Use standard_testfile.
	* gdb.python/py-inferior.exp: Use standard_testfile.
	* gdb.python/py-infthread.exp: Use standard_testfile.
	* gdb.python/py-mi.exp: Use standard_testfile.
	* gdb.python/py-objfile-script.exp: Use standard_testfile,
	build_executable.
	* gdb.python/py-objfile.exp: Use standard_testfile.
	* gdb.python/py-pp-maint.exp: Use standard_testfile,
	prepare_for_testing.
	* gdb.python/py-prettyprint.exp: Use standard_testfile.
	* gdb.python/py-progspace.exp: Use standard_testfile,
	build_executable.
	* gdb.python/py-prompt.exp: Use standard_testfile,
	build_executable.
	* gdb.python/py-section-script.exp: Use standard_testfile,
	build_executable.
	* gdb.python/py-shared.exp: Use standard_testfile,
	standard_output_file, clean_restart.
	* gdb.python/py-symbol.exp: Use standard_output_file,
	prepare_for_testing.
	* gdb.python/py-symtab.exp: Use standard_output_file,
	prepare_for_testing
	* gdb.python/py-template.exp: Use standard_testfile.
	* gdb.python/py-type.exp: Use standard_testfile.
	* gdb.python/py-value-cc.exp: Use standard_testfile.
	* gdb.python/py-value.exp: Use standard_testfile.
	* gdb.python/python.exp: Use standard_testfile, build_executable.
@
text
@d39 1
a39 1
gdb_test_no_output "python execfile ('${pyfile}')" ""
@


1.8
log
@2012-01-16  Pedro Alves  <palves@@redhat.com>

	Remove all calls to strace.
@
text
@d29 1
a29 3
set testfile "py-evthreads"
set srcfile ${testfile}.c
set binfile ${objdir}/${subdir}/${testfile}
@


1.7
log
@Copyright year update in most files of the GDB Project.

gdb/ChangeLog:

        Copyright year update in most files of the GDB Project.
@
text
@a15 4
if $tracelevel then {
    strace $tracelevel
}

@


1.6
log
@gdb/testsuite/
	* gdb.python/py-evthreads.exp (Run to breakpoint 1)
	(reached breakpoint 2, reached breakpoint 3): Update expected output.
@
text
@d1 1
a1 1
# Copyright (C) 2010, 2011 Free Software Foundation, Inc.
@


1.6.2.1
log
@Copyright year update in most files of the GDB Project.

gdb/ChangeLog:

        Copyright year update in most files of the GDB Project.
@
text
@d1 1
a1 1
# Copyright (C) 2010-2012 Free Software Foundation, Inc.
@


1.5
log
@gdb/testsuite/
	* gdb.python/py-events.exp: Remove pretty printing comment.
	* gdb.python/py-evsignal.exp: New file.
	* gdb.python/py-evthreads.c: Include signal.h.
	(thread3): Remove variable count3.  Remove variable bad and use raise
	instead.
	(thread2): Remove variable count2.  Move thread3 pthread_create here,
	merge pthread_join to a single line.
	(main): Remove variable count1.  Merge pthread_join with pthread_create
	to a single line.
	* gdb.python/py-evthreads.exp: Remove pretty printing comment.  New
	KFAIL python/12966 for gdbserver.  Test return value of
	gdb_compile_pthreads.  Use gdb_run_cmd.  Replace send_gdb and
	gdb_expect by gdb_test and gdb_test_multiple.
	(thread 2, thread 3): New tests.
@
text
@d58 1
a58 1
    -re "event type: stop\r\nstop reason: breakpoint\r\nbreakpoint number: 1\r\nthread num: 1\r\n$gdb_prompt $" {
d67 1
a67 1
gdb_test "next" "event type: stop\r\nstop reason: breakpoint\r\nbreakpoint number: 2\r\nthread num: 2" "reached breakpoint 2"
d71 1
a71 1
gdb_test "next" "event type: stop\r\nstop reason: breakpoint\r\nbreakpoint number: 3\r\nthread num: 3" "reached breakpoint 3"
@


1.4
log
@	gdb/testsuite/

	* gdb.base/async-shell.exp: Skip test if displaced stepping is not
	supported.
	* gdb.mi/mi-nonstop-exit.exp: Likewise.
	* gdb.mi/mi-nonstop.exp: Likewise.
	* gdb.mi/mi-ns-stale-regcache.exp: Likewise.
	* gdb.mi/mi-nsintrall.exp: Likewise.
	* gdb.mi/mi-nsmoribund.exp: Likewise.
	* gdb.mi/mi-nsthrexec.exp: Likewise.
	* gdb.python/py-evthreads.exp: Likewise.
@
text
@a15 5
# This file is part of the GDB testsuite.  It tests Python-based
# pretty-printing for the CLI.

# Skip all tests if Python scripting is not enabled.

d20 6
d38 3
a40 1
gdb_compile_pthreads "${srcdir}/${subdir}/${srcfile}" "${binfile}" executable {debug nowarnings}
d55 9
a63 7
send_gdb "run\n"
gdb_expect {
    -re "event type: stop.*
.*stop reason: breakpoint.*
.*breakpoint number: 1.*
.*thread num: 1.*" {
        pass "reached breakpoint 1"
a64 3
    timeout {
	    fail "did not reach breakpoint 1"
	}
d67 3
a69 12
send_gdb "next\n"
gdb_expect {
    -re "event type: stop.*
.*stop reason: breakpoint.*
.*breakpoint number: 2.*
.*thread num: 2.*" {
        pass "reached breakpoint 2"
    }
    timeout {
	    fail "did not reach breakpoint 2"
	}
}
d71 1
a71 12
send_gdb "next\n"
gdb_expect {
    -re "event type: stop.*
.*stop reason: breakpoint.*
.*breakpoint number: 3.*
.*thread num: 3.*" {
        pass "reached breakpoint 3"
    }
    timeout {
	    fail "did not reach breakpoint 3"
	}
}
d73 1
a73 10
send_gdb "continue&\n"
gdb_expect {
    -re ".*event type: continue.*
.*thread num: 1.*\r\n$gdb_prompt $" {
        pass "continue thread 1"
    }
    timeout {
	    fail "continue thread 1 failed"
	}
}
d75 5
a79 6
gdb_test "thread 2" ".*Switching to thread 2.*"
send_gdb "continue&\n"
gdb_expect {
    -re ".*event type: continue.*
.*thread num: 2.*" {
        pass "continue thread 2"
a80 3
    timeout {
	    fail "continue thread 2 failed"
	}
d83 4
a86 6
send_gdb "continue -a\n"
gdb_expect {
    -re ".*stop reason: signal.*
.*stop signal: SIGSEGV.*
.*thread num: 3.*" {
        pass "thread 3 was signalled"
a87 3
    timeout {
	    fail "thread 3 was not signalled"
	}
@


1.3
log
@gdb.python/py-evthreads.exp: add missing $
@
text
@d25 5
@


1.2
log
@Fix race in gdb.python/py-evthreads.exp
@
text
@d89 1
a89 1
.*thread num: 1.*\r\n$gdb_prompt " {
@


1.1
log
@Add the file that prev commit forget.
@
text
@d89 1
a89 1
.*thread num: 1.*" {
@

