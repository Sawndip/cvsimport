head	1.4;
access;
symbols
	gdb_7_6_1-2013-08-30-release:1.3
	gdb_7_6-2013-04-26-release:1.3
	gdb_7_6-branch:1.3.0.2
	gdb_7_6-2013-03-12-branchpoint:1.3;
locks; strict;
comment	@# @;


1.4
date	2013.08.22.13.51.08;	author tromey;	state Exp;
branches;
next	1.3;

1.3
date	2013.01.01.06.41.26;	author brobecke;	state Exp;
branches;
next	1.2;

1.2
date	2012.11.06.15.21.23;	author tromey;	state Exp;
branches;
next	1.1;

1.1
date	2012.08.10.20.26.00;	author devans;	state Exp;
branches;
next	;


desc
@@


1.4
log
@fix gdb.python to be parallel-safe

This fixes gdb.python to be parallel-safe, mostly by changing it to
use gdb_remote_download.

Tested on x86-64 Fedora 18.

	* gdb.python/py-error.exp: Use gdb_remote_download.
	* gdb.python/py-mi.exp: Use gdb_remote_download.
	* gdb.python/py-objfile-script.exp: Use standard_output_file.
	* gdb.python/py-prettyprint.exp: Use gdb_remote_download.
	(run_lang_tests): Likewise.
	* gdb.python/py-section-script.c: Use SCRIPT_FILE rather than
	filename.
	* gdb.python/py-section-script.exp: Set SCRIPT_FILE when
	compiling.  Use gdb_remote_download.  Update some tests.
	* gdb.python/py-strfns.exp (test_strfns_core_file): Use
	standard_output_file.
	* gdb.python/py-typeprint.exp: Use gdb_remote_download.
	* gdb.python/py-frame-args.exp: Use gdb_remote_download.
	* gdb.python/py-framefilter-mi.exp: Use gdb_remote_download.
	* gdb.python/py-framefilter.exp: Use gdb_remote_download,
	standard_output_file.
@
text
@# Copyright (C) 2012-2013 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# This file is part of the GDB testsuite.  It tests the convenience
# functions in strfns.py.

load_lib gdb-python.exp

standard_testfile

if { [prepare_for_testing ${testfile}.exp ${testfile} ${srcfile}] } {
    return -1
}

if ![runto_main] {
    return 0
}

# Skip all tests if Python scripting is not enabled.
if { [skip_python_tests] } { continue }

proc test_all_strfns { } {
    gdb_test "p \$_streq (str1, str2)" " = 1"
    gdb_test "p \$_streq (str1, str3)" " = 0"

    gdb_test "p \$_strlen (str1)" " = 6"
    gdb_test "p \$_strlen (buf1)" " = 0"

    gdb_test "p \$_memeq (buf1, buf2, 4)" " = 1"
    gdb_test "p \$_memeq (buf1, buf3, 4)" " = 0"

    gdb_test {p $_regex (str1, "Hello")} " = 1"
    gdb_test {p $_regex (str1, "Help")} " = 0"
    gdb_test {p $_regex (str1, "^Hello")} " = 1"
    gdb_test {p $_regex (str1, "^Hello.$")} " = 1"
}

test_all_strfns

# Verify use in a conditional breakpoint.

gdb_breakpoint [gdb_get_line_number "Break func here."]
gdb_test_no_output "condition \$bpnum \$_streq (arg, \"Goodbye.\")"
gdb_continue_to_breakpoint "Break func here."
gdb_test "p arg" "= $hex <str3> \"Goodbye.\""

gdb_breakpoint [gdb_get_line_number "Break bfunc here."]
gdb_test_no_output "condition \$bpnum \$_memeq (arg, buf3, 4)"
gdb_continue_to_breakpoint "Break bfunc here."
gdb_test "p /d {char\[4\]} arg" "= \\{0, 1, 2, 4\\}"

# Verify use on a core file.

proc test_strfns_core_file { } {
    global gdb_prompt testfile

    set filename [standard_output_file py-strfns.core]

    if {![gdb_gcore_cmd "$filename" "save a corefile"]} {
	# No use proceeding from here.
	return
    }

    clean_restart $testfile

    gdb_test_multiple "core $filename" \
	"re-load generated corefile" \
	{
	    -re "Core was generated by .*$gdb_prompt $" {
		pass "re-load generated corefile"
	    }
	    -re ".*$gdb_prompt $" {
		fail "re-load generated corefile"
		# No use proceeding from here.
		return
	    }
	}

    test_all_strfns
}

test_strfns_core_file
@


1.3
log
@Update years in copyright notice for the GDB files.

Two modifications:
  1. The addition of 2013 to the copyright year range for every file;
  2. The use of a single year range, instead of potentially multiple
     year ranges, as approved by the FSF.
@
text
@d67 1
a67 1
    global objdir subdir gdb_prompt testfile
d69 1
a69 1
    set filename "${objdir}/${subdir}/py-strfns.core"
@


1.2
log
@	* gdb.threads/gcore-thread.exp: Use gdb_gcore_cmd.
	* gdb.python/py-strfns.exp (test_strfns_core_file): Use
	gdb_gcore_cmd.
	* gdb.cell/gcore.exp: Use gdb_gcore_cmd.
	* gdb.base/gcore.exp: Use gdb_gcore_cmd.
	* gdb.base/gcore-relro.exp: Use gdb_gcore_cmd.
	* gdb.base/gcore-buffer-overflow.exp: Use gdb_gcore_cmd.
	* gdb.base/auxv.exp: Use gdb_gcore_cmd.
	* gdb.arch/vsx-regs.exp: Use gdb_gcore_cmd.
	* gdb.arch/system-gcore.exp: Use gdb_gcore_cmd.
	* gdb.arch/pa-nullify.exp (test_core_bt): Use gdb_gcore_cmd.
	* lib/gdb.exp (gdb_gcore_cmd): New proc.
@
text
@d1 1
a1 1
# Copyright (C) 2012 Free Software Foundation, Inc.
@


1.1
log
@	Add $_memeq, $_regex, $_streq, $_strlen convenience functions.
	* NEWS: Document them.
	* data-directory/Makefile.in (PYTHON_FILES): Add function/__init__.py,
	function/strfns.py.
	* python/py-type.c (typy_array_1): New function.
	(typy_array): Call it.
	(typy_vector): New function.
	(type_object_methods): Add "vector".
	* python/lib/gdb/function/__init__.py: New file.
	* python/lib/gdb/function/strfns.py: New file.

	doc/
	* gdb.texinfo (Convenience Funs): New node.
	(Types In Python): Document Type.vector.

	testsuite/
	* gdb.python/py-strfns.c: New file.
	* gdb.python/py-strfns.exp: New file.
	* gdb.python/py-type.exp (test_fields): Add vector tests.
@
text
@a69 1
    set escapedfilename [string_to_regexp $filename]
d71 4
a74 12
    gdb_test_multiple "gcore $filename" \
	"save a corefile" \
	{
	    -re "Saved corefile ${escapedfilename}\[\r\n\]+$gdb_prompt $" {
		pass "save a corefile"
	    }
	    -re "Can't create a corefile\[\r\n\]+$gdb_prompt $" {
		unsupported "save a corefile"
		# No use proceeding from here.
		return
	    }
	}
@

