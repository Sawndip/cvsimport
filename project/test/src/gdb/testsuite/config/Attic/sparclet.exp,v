head	1.4;
access;
symbols
	jimb-gdb_6_2-e500-branch:1.3.0.62
	jimb-gdb_6_2-e500-branchpoint:1.3
	gdb_6_2-20040730-release:1.3
	gdb_6_2-branch:1.3.0.58
	gdb_6_2-2004-07-10-gmt-branchpoint:1.3
	gdb_6_1_1-20040616-release:1.3
	gdb_6_1-2004-04-05-release:1.3
	drow_intercu-merge-20040402:1.3
	drow_intercu-merge-20040327:1.3
	ezannoni_pie-20040323-branch:1.3.0.56
	ezannoni_pie-20040323-branchpoint:1.3
	cagney_tramp-20040321-mergepoint:1.3
	cagney_tramp-20040309-branch:1.3.0.54
	cagney_tramp-20040309-branchpoint:1.3
	gdb_6_1-branch:1.3.0.52
	gdb_6_1-2004-03-01-gmt-branchpoint:1.3
	drow_intercu-20040221-branch:1.3.0.50
	drow_intercu-20040221-branchpoint:1.3
	cagney_bfdfile-20040213-branch:1.3.0.48
	cagney_bfdfile-20040213-branchpoint:1.3
	drow-cplus-merge-20040208:1.3
	carlton_dictionary-20040126-merge:1.3
	cagney_bigcore-20040122-branch:1.3.0.46
	cagney_bigcore-20040122-branchpoint:1.3
	drow-cplus-merge-20040113:1.3
	drow-cplus-merge-20031224:1.3
	drow-cplus-merge-20031220:1.3
	carlton_dictionary-20031215-merge:1.3
	drow-cplus-merge-20031214:1.3
	carlton-dictionary-20031111-merge:1.3
	gdb_6_0-2003-10-04-release:1.3
	kettenis_sparc-20030918-branch:1.3.0.44
	kettenis_sparc-20030918-branchpoint:1.3
	carlton_dictionary-20030917-merge:1.3
	ezannoni_pie-20030916-branchpoint:1.3
	ezannoni_pie-20030916-branch:1.3.0.42
	cagney_x86i386-20030821-branch:1.3.0.40
	cagney_x86i386-20030821-branchpoint:1.3
	carlton_dictionary-20030805-merge:1.3
	carlton_dictionary-20030627-merge:1.3
	gdb_6_0-branch:1.3.0.38
	gdb_6_0-2003-06-23-branchpoint:1.3
	jimb-ppc64-linux-20030613-branch:1.3.0.36
	jimb-ppc64-linux-20030613-branchpoint:1.3
	cagney_convert-20030606-branch:1.3.0.34
	cagney_convert-20030606-branchpoint:1.3
	cagney_writestrings-20030508-branch:1.3.0.32
	cagney_writestrings-20030508-branchpoint:1.3
	jimb-ppc64-linux-20030528-branch:1.3.0.30
	jimb-ppc64-linux-20030528-branchpoint:1.3
	carlton_dictionary-20030523-merge:1.3
	cagney_fileio-20030521-branch:1.3.0.28
	cagney_fileio-20030521-branchpoint:1.3
	kettenis_i386newframe-20030517-mergepoint:1.3
	jimb-ppc64-linux-20030509-branch:1.3.0.26
	jimb-ppc64-linux-20030509-branchpoint:1.3
	kettenis_i386newframe-20030504-mergepoint:1.3
	carlton_dictionary-20030430-merge:1.3
	kettenis_i386newframe-20030419-branch:1.3.0.24
	kettenis_i386newframe-20030419-branchpoint:1.3
	carlton_dictionary-20030416-merge:1.3
	cagney_frameaddr-20030409-mergepoint:1.3
	kettenis_i386newframe-20030406-branch:1.3.0.22
	kettenis_i386newframe-20030406-branchpoint:1.3
	cagney_frameaddr-20030403-branchpoint:1.3
	cagney_frameaddr-20030403-branch:1.3.0.20
	cagney_framebase-20030330-mergepoint:1.3
	cagney_framebase-20030326-branch:1.3.0.18
	cagney_framebase-20030326-branchpoint:1.3
	cagney_lazyid-20030317-branch:1.3.0.16
	cagney_lazyid-20030317-branchpoint:1.3
	kettenis-i386newframe-20030316-mergepoint:1.3
	offbyone-20030313-branch:1.3.0.14
	offbyone-20030313-branchpoint:1.3
	kettenis-i386newframe-20030308-branch:1.3.0.12
	kettenis-i386newframe-20030308-branchpoint:1.3
	carlton_dictionary-20030305-merge:1.3
	cagney_offbyone-20030303-branch:1.3.0.10
	cagney_offbyone-20030303-branchpoint:1.3
	carlton_dictionary-20030207-merge:1.3
	interps-20030203-mergepoint:1.3
	interps-20030202-branch:1.3.0.8
	interps-20030202-branchpoint:1.3
	cagney-unwind-20030108-branch:1.3.0.6
	cagney-unwind-20030108-branchpoint:1.3
	carlton_dictionary-20021223-merge:1.3
	gdb_5_3-2002-12-12-release:1.2
	carlton_dictionary-20021115-merge:1.3
	kseitz_interps-20021105-merge:1.3
	kseitz_interps-20021103-merge:1.3
	drow-cplus-merge-20021020:1.3
	drow-cplus-merge-20021025:1.3
	carlton_dictionary-20021025-merge:1.3
	carlton_dictionary-20021011-merge:1.3
	drow-cplus-branch:1.3.0.4
	drow-cplus-branchpoint:1.3
	kseitz_interps-20020930-merge:1.3
	carlton_dictionary-20020927-merge:1.3
	carlton_dictionary-branch:1.3.0.2
	carlton_dictionary-20020920-branchpoint:1.3
	gdb_5_3-branch:1.2.0.22
	gdb_5_3-2002-09-04-branchpoint:1.2
	kseitz_interps-20020829-merge:1.2
	cagney_sysregs-20020825-branch:1.2.0.20
	cagney_sysregs-20020825-branchpoint:1.2
	readline_4_3-import-branch:1.2.0.18
	readline_4_3-import-branchpoint:1.2
	gdb_5_2_1-2002-07-23-release:1.2
	kseitz_interps-20020528-branch:1.2.0.16
	kseitz_interps-20020528-branchpoint:1.2
	cagney_regbuf-20020515-branch:1.2.0.14
	cagney_regbuf-20020515-branchpoint:1.2
	jimb-macro-020506-branch:1.2.0.12
	jimb-macro-020506-branchpoint:1.2
	gdb_5_2-2002-04-29-release:1.2
	gdb_5_2-branch:1.2.0.10
	gdb_5_2-2002-03-03-branchpoint:1.2
	gdb_5_1_1-2002-01-24-release:1.2
	gdb_5_1_0_1-2002-01-03-release:1.2
	cygnus_cvs_20020108_pre:1.2
	gdb_5_1_0_1-2002-01-03-branch:1.2.0.8
	gdb_5_1_0_1-2002-01-03-branchpoint:1.2
	gdb_5_1-2001-11-21-release:1.2
	gdb_s390-2001-09-26-branch:1.2.0.6
	gdb_s390-2001-09-26-branchpoint:1.2
	gdb_5_1-2001-07-29-branch:1.2.0.4
	gdb_5_1-2001-07-29-branchpoint:1.2
	dberlin-typesystem-branch:1.2.0.2
	dberlin-typesystem-branchpoint:1.2
	gdb-post-ptid_t-2001-05-03:1.2
	gdb-pre-ptid_t-2001-05-03:1.2
	insight-precleanup-2001-01-01:1.1.1.1
	gdb-post-protoization-2000-07-29:1.1.1.1
	gdb-pre-protoization-2000-07-29:1.1.1.1
	gdb-premipsmulti-2000-06-06-branch:1.1.1.1.0.6
	gdb-premipsmulti-2000-06-06-branchpoint:1.1.1.1
	gdb-post-params-removal-2000-06-04:1.1.1.1
	gdb-pre-params-removal-2000-06-04:1.1.1.1
	gdb-post-params-removal-2000-05-28:1.1.1.1
	gdb-pre-params-removal-2000-05-28:1.1.1.1
	gdb_5_0-2000-05-19-release:1.1.1.1
	gdb_4_18_2-2000-05-18-release:1.1.1.1
	gdb_4_95_1-2000-05-11-snapshot:1.1.1.1
	gdb_4_95_0-2000-04-27-snapshot:1.1.1.1
	gdb_5_0-2000-04-10-branch:1.1.1.1.0.4
	gdb_5_0-2000-04-10-branchpoint:1.1.1.1
	repo-unification-2000-02-06:1.1.1.1
	insight-2000-02-04:1.1.1.1
	gdb-2000-02-04:1.1.1.1
	gdb-2000-02-02:1.1.1.1
	gdb-2000-02-01:1.1.1.1
	gdb-2000-01-31:1.1.1.1
	gdb-2000-01-26:1.1.1.1
	gdb-2000-01-24:1.1.1.1
	gdb-2000-01-17:1.1.1.1
	gdb-2000-01-10:1.1.1.1
	gdb-2000-01-05:1.1.1.1
	gdb-1999-12-21:1.1.1.1
	gdb-1999-12-13:1.1.1.1
	gdb-1999-12-07:1.1.1.1
	gdb-1999-12-06:1.1.1.1
	gdb-1999-11-16:1.1.1.1
	gdb-1999-11-08:1.1.1.1
	gdb-1999-11-01:1.1.1.1
	gdb-1999-10-25:1.1.1.1
	gdb-1999-10-18:1.1.1.1
	gdb-1999-10-11:1.1.1.1
	gdb-1999-10-04:1.1.1.1
	gdb-1999-09-28:1.1.1.1
	gdb-1999-09-21:1.1.1.1
	gdb-1999-09-13:1.1.1.1
	gdb-1999-09-08:1.1.1.1
	gdb-1999-08-30:1.1.1.1
	gdb-1999-08-23:1.1.1.1
	gdb-1999-08-16:1.1.1.1
	gdb-1999-08-09:1.1.1.1
	gdb-1999-08-02:1.1.1.1
	gdb-1999-07-26:1.1.1.1
	gdb-1999-07-19:1.1.1.1
	gdb-1999-07-12:1.1.1.1
	gdb-post-reformat-19990707:1.1.1.1
	gdb-1999-07-07-post-reformat-snapshot:1.1.1.1
	gdb-pre-reformat-19990707:1.1.1.1
	gdb-1999-07-07:1.1.1.1
	gdb-1999-07-05:1.1.1.1
	gdb-1999-06-28:1.1.1.1
	gdb-1999-06-21:1.1.1.1
	gdb-1999-06-14:1.1.1.1
	gdb-1999-06-07:1.1.1.1
	gdb-1999-06-01:1.1.1.1
	gdb-4_18-branch:1.1.1.1.0.2
	gdb-4_18-release:1.1.1.1
	gdb-1999-05-25:1.1.1.1
	gdb-1999-05-19:1.1.1.1
	gdb-1999-05-10:1.1.1.1
	gdb-19990504:1.1.1.1
	gdb-19990422:1.1.1.1
	SNAPSHOT:1.1.1
	gdb-4_18:1.1.1.1
	GDB_4_18:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.4
date	2004.09.05.04.43.00;	author chastain;	state dead;
branches;
next	1.3;

1.3
date	2002.09.09.21.21.35;	author bje;	state Exp;
branches
	1.3.50.1;
next	1.2;

1.2
date	2001.03.06.08.21.48;	author kevinb;	state Exp;
branches
	1.2.16.1;
next	1.1;

1.1
date	99.04.16.01.34.29;	author shebs;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.04.16.01.34.29;	author shebs;	state Exp;
branches;
next	;

1.2.16.1
date	2002.10.01.00.46.25;	author kseitz;	state Exp;
branches;
next	;

1.3.50.1
date	2004.09.16.17.01.39;	author drow;	state dead;
branches;
next	;


desc
@@


1.4
log
@2004-09-05  Michael Chastain  <mec.gnu@@mindspring.com>

	* config/sparclet.exp: Removed.
@
text
@#   Copyright 1996, 1997 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

# This file was written by Michael Snyder <msnyder@@cygnus.com>.

# GDB support routines for a board using the sparclet remote debugging
# protocol.

load_lib remote.exp
load_lib gdb.exp

#
# Sparclet remote run command.
#

proc gdb_start { } {
    global gdb_prompt

    if ![file exists loader] {
	global libdir
	set loader loader;

	if [target_info exists gdb_stub_offset] {
	    set result [target_compile "${libdir}/stub-loader.c" $loader executable "libs=-Wl,-Ttext,[target_info gdb_stub_offset]"];
	} else {
	    set result [target_compile "${libdir}/stub-loader.c" $loader executable "ldscript=[target_info gdb_stub_ldscript]"];
	}
    }

    verbose -log "$gdb_prompt is gdb prompt"

    set result 0;
    for { set y 0; } { $y < 4 } { incr y } {
	if { [default_gdb_start] != 0 } {
	    return -1;
	}

	if [target_info exists baud] {
	    send_gdb "set remotebaud [target_info baud]\n"
	    gdb_expect {
		-re "$gdb_prompt" { }
		default { 
		    perror "Error setting baud rate."
		    return -1;
		}
	    }
	}

	for {set x 1;} { $x < 4 } {incr x} {
	    set result [gdb_sparclet_startup $result];
	    if { $result > 0 } {
		return 1;
	    }
	    # mmmmm, magic numbers.
	    if { $result == -42 || $result == -43 } {
		break;
	    } else {
		reboot_target;
	    }
	}
	if { $x == 4 } {
	    return -1;
	}
	gdb_exit;
	sleep 5;
    }
    return -1;
}

proc gdb_sparclet_startup { arg } {
    global gdb_prompt
    global GDB
    global verbose

    set is_running_stub 0;

    if [target_info exists serial] {
	set serial [target_info serial];
    } else {
	set serial [target_info netport];
    }
    set protocol [target_info gdb_protocol];
    set check_stub 1;
    if { $arg != -42 } {
	send_gdb "target $protocol $serial\n";
	# 10 seconds may be a bit short.
	gdb_expect 10 {
	    -re "already.*y or n." {
		gdb_send "y\n";
		exp_continue;
	    }
	    -re "Remote target.*connected to.*$gdb_prompt" { set check_stub 0; }
	    -re "$gdb_prompt" { }
	    timeout { }
	}
	if { $check_stub } {
	    verbose "timed out, checking if stub is already running"
	    send_gdb "\003";
	    sleep 1;
	    send_gdb "\003";
	    gdb_expect 10 {
		-re "$gdb_prompt" { }
		default {
		    remote_close host;
		    return -42;
		}
	    }
	}
    }
    if [target_info exists gdb_serial] {
	set gdb_serial [target_info gdb_serial];
    } else {
	set gdb_serial $serial;
    }
    if { $check_stub } {
	send_gdb "target remote $gdb_serial\n";
	gdb_expect 15 {
	    -re "Remote debugging.*$gdb_prompt" {
		verbose "stub is already running"
		set is_running_stub 1;
	    }
	    default {
		warning "board isn't responding";
		remote_close host;
		remote_reboot target;
		return -43;
	    }
	}
    }

    if { $is_running_stub == 0 } {
	global srcdir

	if [is_remote host] {
	    set loader [remote_download host "loader"];
	} else {
	    set loader "loader";
	}
	send_gdb "file $loader\n";
	gdb_expect {
	     -re "A program is being debug.*Kill it.*y or n. $" {
		send_gdb "y\n"
		exp_continue
	    }
	     -re "Load new symbol table.*y or n. $" {
		send_gdb "y\n"
		exp_continue
	    }
	     -re "Reading symbols from.*done..*$gdb_prompt $" {}
	     -re "$gdb_prompt $" { perror "GDB couldn't find loader" }
	     timeout { 
		perror "(timeout) read symbol file" ; 
		return -1
	    }
	}

	send_gdb "target $protocol $serial\n";
	gdb_expect {
	     -re "Remote target.*connected to.*$gdb_prompt" { }
	     default {
		perror "Error reconnecting to board.";
		return -1;
	    }
	}

	send_gdb "load $loader [target_info gdb_stub_offset]\n"
	verbose "Loading $loader into $GDB" 2
	set no_run_command 0;
	gdb_expect 1200 {
	     -re "Loading.*$gdb_prompt $" {
		verbose "Loaded $loader into $GDB" 1
	    }
	    -re "Transfer rate:.*Switching to remote protocol.*Remote debugging" {
		set no_run_command 1;
	    }
	     -re "$gdb_prompt $"     {
		if $verbose>1 then {
		    perror "GDB couldn't load."
		}
	    }
	     timeout {
		if $verbose>1 then {
		    perror "Timed out trying to load $arg."
		}
	    }
	}

	if !$no_run_command {
	    send_gdb "run\n";
	    gdb_expect 60 {
		-re "A program is being debug.*Kill it.*y or n. $" {
		    send_gdb "y\n"
		    exp_continue
		}
		-re "The program being debugged .*y or n. $" {
		    send_gdb "y\n"
		    exp_continue
		}
		-re "Starting program:.*loader.*$" { 
		    verbose "Starting loader succeeded" 
		}
		timeout { 
		    perror "(timeout) starting the loader" ; 
		    return -1 
		}
		default {
		    perror "error starting the loader";
		}
	    }
	}
	sleep 2;
	send_gdb ""
	sleep 1;
	send_gdb ""
	verbose "Sent ^C^C"
	gdb_expect 10 {
	     -re "Give up .and stop debugging it.*$" {
		send_gdb "y\n"
		exp_continue
	    }
	    -re "$gdb_prompt $" { 
		verbose "Running loader succeeded" 
	    }
	    timeout { 
		warning "(timeout) interrupting the loader" ;
		remote_close host;
	    }
	    default {
		warning "error interrupting the loader";
	    }
	}

	gdb_exit;
	return [gdb_start];
    }
    return 1;
}

proc gdb_run_cmd { args } {
    global gdb_prompt

    gdb_breakpoint exit;
    send_gdb "set \$fp=0\n";
    gdb_expect {
	 -re "$gdb_prompt" { }
    }
    # This is needed for the SparcLite. Whee.
    if [target_info exists gdb,start_symbol] {
	set start_comm "jump *[target_info gdb,start_symbol]\n";
    } else {
	set start_comm "jump *start\n";
    }
    send_gdb "break copyloop\n";
    gdb_expect 10 {
	-re "Breakpoint.*$gdb_prompt $" {
	    set start_comm "continue\n";
	}
	-re "$gdb_prompt $" { }
	timeout { warning "break copyloop failed badly"; }
    }
    send_gdb $start_comm;
    gdb_expect 10 {
	-re "y or n. $" {
	    remote_send host "y\n"
	    exp_continue;
	}
	-re "Breakpoint.*in copyloop.*$gdb_prompt $" {
	    remote_send host "jump relocd\n";
	    exp_continue;
	}
	-re "Continuing at.*\[\r\n\]" { }
	default {
	    return -1;
	}
    }

    return "";
}


#
# gdb_load -- load a file into the GDB. 
#             Returns a 0 if there was an error,
#                       1 if it load successfully.
#
proc gdb_load { arg } {
    global verbose
    global loadpath
    global loadfile
    global gdb_prompt
    global GDB
    global expect_out

    set loadfile [file tail $arg]
    set loadpath [file dirname $arg]

    set protocol [target_info gdb_protocol];

    if [is_remote host] {
	set arg [remote_download host $arg];
    }
    send_gdb "file $arg\n"
    gdb_expect 30 {
	 -re "A program is being debug.*Kill it.*y or n. $" {
	    send_gdb "y\n"
	    exp_continue
	}
         -re "Load new symbol table.*y or n. $" {
	    send_gdb "y\n"
	    exp_continue
	}
	 -re "Reading symbols from.*done..*$gdb_prompt $" {}
	 -re "$gdb_prompt $" { perror "GDB couldn't read file" }
	 timeout { 
	    perror "(timeout) read symbol file" ; 
	    return -1 
	}
    }

    if [target_info exists gdb_serial] {
	set gdb_serial [target_info gdb_serial];
    } else {
	if [target_info exists serial] {
	    set gdb_serial [target_info serial];
	} else {
	    set gdb_serial [target_info netport];
	}
    }
    send_gdb "target remote $gdb_serial\n"
    gdb_expect 30 {
	-re "Kill it?.*y or n.*" {
	    send_gdb "y\n";
	    exp_continue
	}
	-re "$gdb_prompt $"	{
	    verbose "Set remote target to $gdb_serial" 2
	}
	timeout { 
	    perror "Couldn't set remote target."
	    return -1
	}
    }
    if [target_info exists gdb_load_offset] {
	set offset "[target_info gdb_load_offset]";
    } else {
	set offset "";
    }
    send_gdb "load $arg $offset\n"
    verbose "Loading $arg into $GDB" 2
    gdb_expect 1200 {
	 -re "Loading.*$gdb_prompt $" {
	    verbose "Loaded $arg into $GDB" 1
	}
	 -re "$gdb_prompt $"     {
	    if $verbose>1 then {
		perror "GDB couldn't load."
	    }
	}
	 timeout {
	    if $verbose>1 then {
		perror "Timed out trying to load $arg."
	    }
	}
    }
    send_gdb "list main\n";
    gdb_expect 60 {
	 -re "$gdb_prompt" { }
	 default {
	    perror "command for list main never completed";
	    return -1;
	}
    }

    return 0
}
@


1.3
log
@	* config/mips.exp: Update comments.
	* config/mips-idt.exp: Likewise.
	* config/nind.exp: Likewise.
	* config/slite.exp: Likewise.
	* config/sparclet.exp: Likewise.
	* config/udi.exp: Likewise.
	* config/vx.exp: Likewise.
	* config/vxworks29k.exp: Likewise.
@
text
@@


1.3.50.1
log
@Merge mainline to intercu branch - 2004-09-15
@
text
@@


1.2
log
@Update/correct copyright notices.
@
text
@a16 3
# Please email any bugs, comments, and/or additions to this file to:
# DejaGnu@@cygnus.com

@


1.2.16.1
log
@Merge with kseitz_interps-20020930-merge.
@
text
@d17 3
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
#   Copyright (C) 1996, 1997 Free Software Foundation, Inc.
@


1.1.1.1
log
@Initial creation of sourceware repository
@
text
@@

