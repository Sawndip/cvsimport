head	1.19;
access;
symbols
	gdb_7_6_1-2013-08-30-release:1.19
	gdb_7_6-2013-04-26-release:1.19
	gdb_7_6-branch:1.19.0.2
	gdb_7_6-2013-03-12-branchpoint:1.19
	gdb_7_5_1-2012-11-29-release:1.18
	gdb_7_5-2012-08-17-release:1.18
	gdb_7_5-branch:1.18.0.2
	gdb_7_5-2012-07-18-branchpoint:1.18
	gdb_7_4_1-2012-04-26-release:1.15.2.1
	gdb_7_4-2012-01-24-release:1.15.2.1
	gdb_7_4-branch:1.15.0.2
	gdb_7_4-2011-12-13-branchpoint:1.15
	gdb_7_3_1-2011-09-04-release:1.14
	gdb_7_3-2011-07-26-release:1.14
	gdb_7_3-branch:1.14.0.2
	gdb_7_3-2011-04-01-branchpoint:1.14
	gdb_7_2-2010-09-02-release:1.10
	gdb_7_2-branch:1.10.0.2
	gdb_7_2-2010-07-07-branchpoint:1.10
	gdb_7_1-2010-03-18-release:1.8
	gdb_7_1-branch:1.8.0.2
	gdb_7_1-2010-02-18-branchpoint:1.8
	gdb_7_0_1-2009-12-22-release:1.5
	gdb_7_0-2009-10-06-release:1.5
	gdb_7_0-branch:1.5.0.4
	gdb_7_0-2009-09-16-branchpoint:1.5
	arc-sim-20090309:1.1
	msnyder-checkpoint-072509-branch:1.5.0.2
	msnyder-checkpoint-072509-branchpoint:1.5
	arc-insight_6_8-branch:1.1.0.14
	arc-insight_6_8-branchpoint:1.1
	insight_6_8-branch:1.1.0.12
	insight_6_8-branchpoint:1.1
	reverse-20081226-branch:1.3.0.2
	reverse-20081226-branchpoint:1.3
	multiprocess-20081120-branch:1.1.0.10
	multiprocess-20081120-branchpoint:1.1
	reverse-20080930-branch:1.1.0.8
	reverse-20080930-branchpoint:1.1
	reverse-20080717-branch:1.1.0.6
	reverse-20080717-branchpoint:1.1
	msnyder-reverse-20080609-branch:1.1.0.4
	msnyder-reverse-20080609-branchpoint:1.1
	gdb_6_8-2008-03-27-release:1.1
	gdb_6_8-branch:1.1.0.2
	gdb_6_8-2008-02-26-branchpoint:1.1;
locks; strict;
comment	@# @;


1.19
date	2013.01.01.06.41.27;	author brobecke;	state Exp;
branches;
next	1.18;

1.18
date	2012.06.25.19.46.26;	author tromey;	state Exp;
branches;
next	1.17;

1.17
date	2012.02.15.12.51.17;	author palves;	state Exp;
branches;
next	1.16;

1.16
date	2012.01.04.08.27.54;	author brobecke;	state Exp;
branches;
next	1.15;

1.15
date	2011.12.05.18.27.44;	author jkratoch;	state Exp;
branches
	1.15.2.1;
next	1.14;

1.14
date	2011.03.08.12.46.52;	author palves;	state Exp;
branches;
next	1.13;

1.13
date	2011.01.01.15.33.49;	author brobecke;	state Exp;
branches;
next	1.12;

1.12
date	2010.11.23.22.25.37;	author devans;	state Exp;
branches;
next	1.11;

1.11
date	2010.11.18.20.25.12;	author devans;	state Exp;
branches;
next	1.10;

1.10
date	2010.06.10.19.48.20;	author msnyder;	state Exp;
branches
	1.10.2.1;
next	1.9;

1.9
date	2010.06.02.21.50.56;	author msnyder;	state Exp;
branches;
next	1.8;

1.8
date	2010.01.12.00.50.26;	author devans;	state Exp;
branches;
next	1.7;

1.7
date	2010.01.12.00.48.33;	author devans;	state Exp;
branches;
next	1.6;

1.6
date	2010.01.01.07.32.06;	author brobecke;	state Exp;
branches;
next	1.5;

1.5
date	2009.06.09.17.12.43;	author drow;	state Exp;
branches;
next	1.4;

1.4
date	2009.01.03.05.58.06;	author brobecke;	state Exp;
branches;
next	1.3;

1.3
date	2008.12.04.17.41.42;	author devans;	state Exp;
branches;
next	1.2;

1.2
date	2008.12.02.07.57.38;	author vprus;	state Exp;
branches;
next	1.1;

1.1
date	2008.01.30.00.51.50;	author drow;	state Exp;
branches;
next	;

1.15.2.1
date	2012.01.06.04.54.28;	author brobecke;	state Exp;
branches;
next	;

1.10.2.1
date	2011.03.08.12.11.50;	author palves;	state Exp;
branches;
next	;


desc
@@


1.19
log
@Update years in copyright notice for the GDB files.

Two modifications:
  1. The addition of 2013 to the copyright year range for every file;
  2. The use of a single year range, instead of potentially multiple
     year ranges, as approved by the FSF.
@
text
@# This testcase is part of GDB, the GNU debugger.

# Copyright 2007-2013 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Test running programs using extended-remote.

load_lib gdbserver-support.exp

standard_testfile server.c

if { [skip_gdbserver_tests] } {
    return 0
}

if {[build_executable $testfile.exp $testfile $srcfile debug] == -1} {
    return -1
}

# Start with a fresh gdb, gdb_skip_xml_test must be called while gdb
# is not running.

gdb_exit
set do_xml_test [expr ![gdb_skip_xml_test]]
gdb_start
gdb_load $binfile
gdb_reinitialize_dir $srcdir/$subdir

# Make sure we're disconnected, in case we're testing with an
# extended-remote board, therefore already connected.
gdb_test "disconnect" ".*"

set target_exec [gdbserver_download_current_prog]
gdbserver_start_extended

gdb_test_no_output "set remote exec-file $target_exec" "set remote exec-file"

gdb_breakpoint main
gdb_test "run" "Breakpoint.* main .*" "continue to main"

if { [istarget *-*-linux*] } {
    # On Linux, gdbserver can also report the list of processes.
    # But only if xml support is compiled in.
    if { $do_xml_test } {
	# This is done in a way to avoid the timeout that can occur from
	# applying .* regexp to large output.
	gdb_test_sequence "info os processes" "get process list" \
	    { "pid +user +command" "1 +root +\[/a-z\]*(init|systemd)" }
    }
}

gdb_test "kill" "" "kill" "Kill the program being debugged.*" "y"

gdb_load $binfile
gdb_test "monitor help" "The following monitor commands.*" \
        "load new file without any gdbserver inferior"

gdb_test_no_output "monitor exit"
@


1.18
log
@	* gdb.server/ext-attach.exp: Use standard_testfile,
	prepare_for_testing.
	* gdb.server/ext-run.exp: Use standard_testfile,
	build_executable.
	* gdb.server/file-transfer.exp: Use standard_testfile,
	prepare_for_testing.
	* gdb.server/server-exec-info.exp: Use standard_testfile.
	* gdb.server/server-mon.exp: Use standard_testfile,
	prepare_for_testing.
	* gdb.server/server-run.exp: Use standard_testfile,
	build_executable.
	* gdb.server/solib-list.exp: Use standard_testfile,
	standard_output_file.
@
text
@d3 1
a3 1
# Copyright 2007, 2009-2012 Free Software Foundation, Inc.
@


1.17
log
@2012-02-15  Pedro Alves  <palves@@redhat.com>

	* gdb.server/ext-attach.exp: Make sure gdb is disconnected.
	* gdb.server/ext-run.exp: Make sure gdb is disconnected.
	* gdb.server/file-transfer.exp: Make sure gdb is disconnected.
	* gdb.server/server-mon.exp: Make sure gdb is disconnected.
	* gdb.server/server-run.exp: Make sure gdb is disconnected.
	* lib/gdbserver-support.exp (gdbserver_start_extended): Only
	prepend "extended-" to $gdbserver_protocol if $gdbserver_protocol
	doesn't start with "extended-" already.
@
text
@d22 1
a22 3
set testfile "server"
set srcfile ${testfile}.c
set binfile ${objdir}/${subdir}/ext-run
d28 1
a28 1
if  { [gdb_compile "${srcdir}/${subdir}/${srcfile}" "${binfile}" executable {debug}] != "" } {
@


1.16
log
@Copyright year update in most files of the GDB Project.

gdb/ChangeLog:

        Copyright year update in most files of the GDB Project.
@
text
@d43 4
@


1.15
log
@gdb/testsuite/
	* gdb.server/ext-run.exp (get process list): Accept also systemd
	as PID 1.
@
text
@d3 1
a3 1
# Copyright 2007, 2009, 2010, 2011 Free Software Foundation, Inc.
@


1.15.2.1
log
@Copyright year update in most files of the GDB Project.

gdb/ChangeLog:

        Copyright year update in most files of the GDB Project.
@
text
@d3 1
a3 1
# Copyright 2007, 2009-2012 Free Software Foundation, Inc.
@


1.14
log
@gdb/
2011-03-08  Pedro Alves  <pedro@@codesourcery.com>

	* remote.c (remote_check_symbols): Skip if the target has no
	execution.

gdb/testsuite/
2011-03-08  Jan Kratochvil  <jan.kratochvil@@redhat.com>

	* gdb.server/ext-run.exp
	(load new file without any gdbserver inferior): New test.
@
text
@d58 1
a58 1
	    { "pid +user +command" "1 +root +\[/a-z\]*init" }
@


1.13
log
@run copyright.sh for 2011.
@
text
@d63 5
@


1.12
log
@	* lib/gdb.exp (gdb_test_sequence): New function.
	(gdb_expect_list): Add verbose -log call for each pattern.
	* gdb.base/signals.exp (test_handle_all_print): Call it.
	Reduce timeout increment from 6 minutes to 1 minute.
	* gdb.server/ext-run.exp: Call it.
@
text
@d3 1
a3 1
# Copyright 2007, 2009, 2010 Free Software Foundation, Inc.
@


1.11
log
@	* gdb.server/ext-run.exp: Fix intermittent failures.
@
text
@d56 3
a58 15
	# applying .* regexp to large output.  It is copied from
	# gdb.base/maint.exp "maint check-symtabs".
	send_gdb "info os processes\n"
	gdb_expect {
	    -re ".*pid +user +command.*1 +root +\[/a-z\]*init" {
		gdb_expect {
		    -re "$gdb_prompt $" {
			pass "get process list"
		    }
		    timeout { fail "(timeout) get process list" }
		}
	    }
	    -re ".*$gdb_prompt $" { fail "get process list" }
	    timeout { fail "(timeout) get process list" }
	}
@


1.10
log
@2010-06-08  Michael Snyder  <msnyder@@vmware.com>

	* gdb.ada/assign_1.exp: Use ".*" instead of "" as wildcard regexp.
	* gdb.ada/boolean_expr.exp:
	* gdb.ada/frame_args.exp: Ditto.
	* gdb.ada/lang_switch.exp: Ditto.
	* gdb.ada/ptype_arith_binop.exp: Ditto.
	* gdb.ada/ref_param.exp: Ditto.
	* gdb.ada/type_coercion.exp:Ditto.

	* gdb.asm/asm-source.exp: Ditto.

	* gdb.base/attach.exp: Ditto.
	* gdb.base/bitfields2.exp: Ditto.
	* gdb.base/call-signal-resume.exp: Ditto.
	* gdb.base/callfuncs.exp: Ditto.
	* gdb.base/commands.exp: Ditto.
	* gdb.base/dbx.exp: Ditto.
	* gdb.base/default.exp: Ditto.
	* gdb.base/dump.exp: Ditto.
	* gdb.base/exprs.exp: Ditto.
	* gdb.base/freebpcmd.exp: Ditto.
	* gdb.base/interrupt.exp: Ditto.
	* gdb.base/list.exp: Ditto.
	* gdb.base/long_long.exp: Ditto.
	* gdb.base/maint.exp: Ditto.
	* gdb.base/ptype.exp: Ditto.
	* gdb.base/return.exp: Ditto.
	* gdb.base/setshow.exp: Ditto.
	* gdb.base/sigbpt.exp: Ditto.
	* gdb.base/sigrepeat.exp: Ditto.

	* gdb.cp/classes.exp: Ditto.

	* gdb.dwarf2/dw2-restore.exp: Ditto.

	* gdb.gdb/selftest.exp: Ditto.

	* gdb.multi/base.exp: Ditto.
	* gdb.multi/bkpt-multi-exec.exp: Ditto.

	* gdb.python/py-block.exp: Ditto.
	* gdb.python/py-prettyprint.exp: Ditto.
	* gdb.python/py-template.exp: Ditto.

	* gdb.server/ext-attach.exp: Ditto.
	* gdb.server/ext-run.exp: Ditto.
	* gdb.server/server-mon.exp: Ditto.

	* gdb.threads/fork-thread-pending.exp: Ditto.
	* gdb.threads/hand-call-in-threads.exp: Ditto.
	* gdb.threads/interrupted-hand-call.exp: Ditto.
	* gdb.threads/linux-dp.exp: Ditto.
	* gdb.threads/manythreads.exp: Ditto.
	* gdb.threads/print-threads.exp: Ditto.
	* gdb.threads/pthreads.exp: Ditto.
	* gdb.threads/schedlock.exp: Ditto.
	* gdb.threads/thread-unwindonsignal.exp: Ditto.
	* gdb.threads/threadapply.exp: Ditto.
@
text
@d55 16
a70 1
	gdb_test "info os processes" ".*pid +user +command.*1 +root +\[/a-z\]*init.*" "get process list"
@


1.10.2.1
log
@gdb/
2011-03-08  Pedro Alves  <pedro@@codesourcery.com>

	* remote.c (remote_check_symbols): Skip if the target has no
	execution.

gdb/testsuite/
2011-03-08  Jan Kratochvil  <jan.kratochvil@@redhat.com>

	* gdb.server/ext-run.exp
	(load new file without any gdbserver inferior): New test.
@
text
@a59 5

gdb_load $binfile
gdb_test "monitor help" "The following monitor commands.*" \
        "load new file without any gdbserver inferior"

@


1.9
log
@2010-06-02  Michael Snyder  <msnyder@@vmware.com>

	* gdb.python/py-block.exp: Use gdb_test_no_output.
	* gdb.python/py-prettyprint.exp: Ditto.
	* gdb.python/py-template.exp: Ditto.
	* gdb.python/py-value.exp: Ditto.

	* gdb.reverse/watch-precsave.exp: Use gdb_test_no_output.
	* gdb.reverse/watch-reverse.exp: Ditto.

	* gdb.server/ext-attach.exp: Use gdb_test_no_output.
	* gdb.server/ext-run.exp: Ditto.
@
text
@d60 1
a60 1
gdb_test "monitor exit" ""
@


1.8
log
@	* lib/gdbserver-support.exp (gdbserver_download_current_prog): Rename
	from gdbserver_download.  All callers updated.
@
text
@d46 1
a46 1
gdb_test "set remote exec-file $target_exec" "" "set remote exec-file"
@


1.7
log
@	* gdb.server/ext-run.exp: "info os processes" requires xml support.
@
text
@d43 1
a43 1
set target_exec [gdbserver_download]
@


1.6
log
@Update copyright year in most headers.

Automatic update by copyright.sh.
@
text
@d34 3
d38 1
d53 4
a56 1
    gdb_test "info os processes" ".*pid +user +command.*1 +root +\[/a-z\]*init.*" "get process list"
@


1.5
log
@	* gdb.mi/mi-async.exp, gdb.mi/mi-basics.exp,
	gdb.mi/mi-break.exp, gdb.mi/mi-cli.exp,
	gdb.mi/mi-disassemble.exp, gdb.mi/mi-eval.exp,
	gdb.mi/mi-file-transfer.exp, gdb.mi/mi-file.exp,
	gdb.mi/mi-regs.exp, gdb.mi/mi-return.exp,
	gdb.mi/mi-simplerun.exp, gdb.mi/mi-stepi.exp,
	gdb.mi/mi-var-block.exp, gdb.mi/mi-var-cmd.exp,
	gdb.mi/mi-var-display.exp, gdb.mi/mi-var-invalidate.exp,
	gdb.mi/mi-watch.exp, gdb.mi/mi2-basics.exp,
	gdb.mi/mi2-break.exp, gdb.mi/mi2-cli.exp,
	gdb.mi/mi2-disassemble.exp, gdb.mi/mi2-eval.exp,
	gdb.mi/mi2-file.exp, gdb.mi/mi2-regs.exp,
	gdb.mi/mi2-return.exp, gdb.mi/mi2-simplerun.exp,
	gdb.mi/mi2-stepi.exp, gdb.mi/mi2-var-block.exp,
	gdb.mi/mi2-var-child.exp, gdb.mi/mi2-var-cmd.exp,
	gdb.mi/mi2-var-display.exp, gdb.mi/mi2-watch.exp,
	gdb.server/ext-run.exp, gdb.server/file-transfer.exp,
	gdb.server/server-mon.exp, gdb.server/server-run.exp,
	gdb.trace/actions.exp, gdb.trace/backtrace.exp,
	gdb.trace/deltrace.exp, gdb.trace/infotrace.exp,
	gdb.trace/packetlen.exp, gdb.trace/passc-dyn.exp,
	gdb.trace/passcount.exp, gdb.trace/report.exp,
	gdb.trace/save-trace.exp, gdb.trace/tfind.exp,
	gdb.trace/tracecmd.exp, gdb.trace/while-dyn.exp,
	gdb.trace/while-stepping.exp: Use a unique name for the compiled
	executable.
@
text
@d3 1
a3 1
# Copyright 2007, 2009 Free Software Foundation, Inc.
@


1.4
log
@        Updated copyright notices for most files.
@
text
@d24 1
a24 1
set binfile ${objdir}/${subdir}/${testfile}
@


1.3
log
@	* gdb.server/ext-run.exp: Relax regexp for init program.
@
text
@d3 1
a3 1
# Copyright 2007 Free Software Foundation, Inc.
@


1.2
log
@	Implement -list-thread-groups --available

        * Makefile.in (XMLFILES): Add osdata.dtd.
        (SFILES): Add osdata.c.
        (COMMON_OBS): Add osdata.o.
        * linux-nat.c: Include pwd.h, sys/types.h, gdb_dirent.h and xml-support.h.
        (linux_nat_xfer_osdata): New function.
        (linux_xfer_partial): Handle TARGET_OBJECT_OSDATA.
        * osdata.c: New file.
        * osdata.h: New file.
        * remote.c (PACKET_qXfer_osdata): New packet enum.
        (remote_protocol_features): Add "qXfer:osdata:read".
        (remote_read_qxfer): Handle TARGET_OBJECT_OSDATA.
        (extended_remote_can_run): New.
        (init_extended_remote_ops): Set to_can_run to
        extended_remote_can_run.
        (_initialize_remote): Add packet config command for
        "qXfer:osdata:read".
        * xml-support.c (obstack_xml_printf): New function.
        * xml-support.h (obstack_xml_printf): Declare.
        * target.c (target_get_osdata): New function.
        * target.h (enum target_object): Add TARGET_OBJECT_OSDATA.
        (target_os_data): Declare.
        * features/osdata.dtd: New file.
        * mi/mi-main.c (mi_list_thread_groups): Handle the --available
        option.
@
text
@d49 1
a49 1
    gdb_test "info os processes" ".*pid +user +command.*1 +root +/sbin/init.*" "get process list"
@


1.1
log
@	* linux-low.c (linux_attach_lwp): Do not _exit after errors.
	(linux_kill, linux_detach): Clean up the process list.
	* remote-utils.c (remote_open): Improve port number parsing.
	(putpkt_binary, input_interrupt): Only send interrupts if the target
	is running.
	* server.c (extended_protocol): Make static.
	(attached): Define earlier.
	(exit_requested, response_needed, program_argv): New variables.
	(target_running): New.
	(start_inferior): Clear attached here.
	(attach_inferior): Set attached here.
	(require_running): Define.
	(handle_query): Use require_running and target_running.  Implement
	"monitor exit".
	(handle_v_attach, handle_v_run): New.
	(handle_v_requests): Use require_running.  Handle vAttach and vRun.
	(gdbserver_usage): Update.
	(main): Redo argument parsing.  Handle --debug and --multi.  Handle
	--attach along with other options or after the port.  Save
	program_argv.  Support no initial program.  Resynchronize
	communication with GDB after an error.  Handle "monitor exit".
	Use require_running and target_running.  Always allow the extended
	protocol.  Do not error out for Hc0 or Hc-1.  Do not automatically
	restart in extended mode.
	* README: Refer to the GDB manual.  Update --attach usage.

	* remote.c (struct remote_state): Add cached_wait_status.
	(remote_exec_file): New variable.
	(PACKET_vAttach, PACKET_vRun): New constants.
	(extended_remote_restart): Do not query for status.
	(struct start_remote_args): New.
	(remote_start_remote): Take it as a second argument.  Check
	whether the target is running.  Issue an error for non-running
	non-extended targets.  Cache the wait status.  Set inferior_ptid
	here.
	(remote_open_1): Prompt to disconnect non-running targets.  Make
	sure the target is marked running.  Do not set inferior_ptid here.
	Update call to remote_start_remote.  Do not call remote_check_symbols
	if the target is not running.
	(remote_detach_1): Rename from remote_detach.  Take an EXTENDED
	argument.  Handle a non-running target.
	(remote_detach): Use it.
	(extended_remote_detach): New.
	(remote_disconnect): Fix typo.  Use remoute_mourn_1.
	(extended_remote_attach_1, extended_remote_attach)
	(extended_async_remote_attach): New.
	(remote_vcont_resume): Remove unused variable.
	(remote_wait, remote_async_wait): Use any cached wait status.
	(putpkt_binary, getpkt): Clear any cached wait status.
	(extended_remoute_mourn_1): New.
	(extended_remote_mourn): Use it.
	(extended_async_remote_mourn, extended_remote_run): New.
	(extended_remote_create_inferior_1): New.
	(extended_remote_create_inferior): Use it.
	(extended_remote_async_create_inferior): Likewise.
	(remote_xfer_partial): Skip for non-executing targets.
	(init_extended_remote_ops): Set to_detach and to_attach.
	(init_extended_async_remote_ops): Likewise.  Use
	extended_async_remote_mourn.
	(_initialize_remote): Register vAttach, vRun, and
	set remote exec-file.
	* NEWS: Mention vAttach, vRun, and gdbserver extended-remote support.

	* gdb.server/ext-attach.c, gdb.server/ext-attach.exp,
	gdb.server/ext-run.exp: New files.
	* lib/gdbserver-support.exp (gdbserver_download): New.
	(gdbserver_start): New.  Update gdbserver expected
	output.
	(gdbserver_spawn): Use them.
	(gdbserver_start_extended): New.

	* gdb.texinfo (Using the `gdbserver' Program): Add security
	warning.  Rearrange into subsections and subsubsections.  Document
	--multi and --debug.  Correct --with-sysroot typo.  Update --attach
	usage.  Make load reference clearer.  Document monitor exit.
	(Remote Configuration): Document set remote exec-file, attach-packet,
	and run-packet.
	(Packets): Document vAttach and vRun.
@
text
@d47 5
@

