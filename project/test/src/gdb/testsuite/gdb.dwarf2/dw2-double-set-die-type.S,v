head	1.8;
access;
symbols
	gdb_7_6_1-2013-08-30-release:1.8
	gdb_7_6-2013-04-26-release:1.8
	gdb_7_6-branch:1.8.0.2
	gdb_7_6-2013-03-12-branchpoint:1.8
	gdb_7_5_1-2012-11-29-release:1.7
	gdb_7_5-2012-08-17-release:1.7
	gdb_7_5-branch:1.7.0.2
	gdb_7_5-2012-07-18-branchpoint:1.7
	gdb_7_4_1-2012-04-26-release:1.5.2.1
	gdb_7_4-2012-01-24-release:1.5.2.1
	gdb_7_4-branch:1.5.0.2
	gdb_7_4-2011-12-13-branchpoint:1.5
	gdb_7_3_1-2011-09-04-release:1.4
	gdb_7_3-2011-07-26-release:1.4
	gdb_7_3-branch:1.4.0.2
	gdb_7_3-2011-04-01-branchpoint:1.4;
locks; strict;
comment	@# @;


1.8
date	2013.01.01.06.33.28;	author brobecke;	state Exp;
branches;
next	1.7;

1.7
date	2012.03.15.09.08.10;	author tschwinge;	state Exp;
branches;
next	1.6;

1.6
date	2012.01.04.08.17.51;	author brobecke;	state Exp;
branches;
next	1.5;

1.5
date	2011.04.25.03.18.44;	author qiyao;	state Exp;
branches
	1.5.2.1;
next	1.4;

1.4
date	2011.01.01.15.33.44;	author brobecke;	state Exp;
branches;
next	1.3;

1.3
date	2010.10.02.13.31.47;	author jkratoch;	state Exp;
branches;
next	1.2;

1.2
date	2010.08.23.19.12.53;	author kseitz;	state Exp;
branches;
next	1.1;

1.1
date	2010.08.20.17.16.15;	author kseitz;	state Exp;
branches;
next	;

1.5.2.1
date	2012.01.06.04.44.05;	author brobecke;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Update years in copyright notice for the GDB files.

Two modifications:
  1. The addition of 2013 to the copyright year range for every file;
  2. The use of a single year range, instead of potentially multiple
     year ranges, as approved by the FSF.
@
text
@/* This testcase is part of GDB, the GNU debugger.

   Copyright 2010-2013 Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */

/* This test triggers a complaint when gdb attempts to set a DIE's
   type twice.  The test was derived from the following source code:

   #include <vector>

   class a
   {
   private:
     class b
     {
     public:
       b () { }
     };

     std::vector<b> list_;
   };

  What follows below is a much simplified version of the debug info generated
  by gcc from the above code.  */

#define OFFSET(LBL) .Ldie_ ## LBL - .Lcu1_begin

	.section	.debug_info
.Lcu1_begin:
	.4byte	.Lcu1_end - .Lcu1_start	/* Length of Compilation Unit Info */
.Lcu1_start:
	.2byte	0x3	/* DWARF version number */
	.4byte	.Labbrev1_begin	/* Offset Into Abbrev. Section */
	.byte	0x4	/* Pointer Size (in bytes) */

.Ldie_b:
	.uleb128 0x1	/* (DIE (0xb) DW_TAG_compile_unit) */
	.ascii	"GNU C++ 4.4.3 20100127 (Red Hat 4.4.3-4)\0"	/* DW_AT_producer */
	.byte	0x4	/* DW_AT_language */
	.ascii	"duplicate-type.cc\0"	/* DW_AT_name */
	.4byte	.Ldebug_line0	/* DW_AT_stmt_list */

.Ldie_38:
	.uleb128 0x3	/* (DIE (0x38) DW_TAG_typedef) */
	.ascii	"size_t\0"	/* DW_AT_name */
	.4byte	OFFSET (43)	/* DW_AT_type */

.Ldie_43:
	.uleb128 0x2	/* (DIE (0x43) DW_TAG_base_type) */
	.byte	0x4	/* DW_AT_byte_size */
	.byte	0x7	/* DW_AT_encoding */
	.ascii	"long unsigned int\0" /* DW_AT_name */

.Ldie_4a:
	.uleb128 0x4	/* (DIE (0x4a) DW_TAG_namespace) */
	.ascii "std\0"	/* DW_AT_name */
	.4byte	OFFSET (143)	/* DW_AT_sibling */

.Ldie_70:
	.uleb128 0x8	/* (DIE (0x70) DW_TAG_class_type) */
	.ascii	"allocator<a::b>\0"	/* DW_AT_name */
	.byte	0x1	/* DW_AT_declaration */

.Ldie_76:
	.uleb128 0x9	/* (DIE (0x76) DW_TAG_structure_type) */
	.ascii	"_Vector_base<a::b, std::allocator<a::b> >\0"	/* DW_AT_name */
	.byte	0x1	/* DW_AT_declaration */
	.4byte	OFFSET (f7)	/* DW_AT_sibling */

.Ldie_80:
	.uleb128 0xa	/* (DIE (0x80) DW_TAG_structure_type) */
	.ascii	"_Vector_impl\0"	/* DW_AT_name */
	.byte	0x18	/* DW_AT_byte_size */

.Ldie_88:
	.uleb128 0xb	/* (DIE (0x88) DW_TAG_inheritance) */
	.4byte	OFFSET (3e0)	/* DW_AT_type */
	.sleb128 0	/* DW_AT_data_member_location */
	.byte	0x1	/* DW_AT_accessibility */
	.byte	0x0	/* end of children of DIE 0x80 */
	.byte	0x0	/* end of children of DIE 0x76 */

.Ldie_f7:
	.uleb128 0x8	/* (DIE (0xf7) DW_TAG_class_type) */
	.ascii	"vector<a::b, std::allocator<a::b> >\0" /* DW_AT_name */
	.byte	0x1	/* DW_AT_declaration */
	.byte	0x0	/* end of children of DIE 0x4a */

.Ldie_143:
	.uleb128 0x13	/* (DIE (0x143) DW_TAG_base_type) */
	.byte	0x4	/* DW_AT_byte_size */
	.byte	0x5	/* DW_AT_encoding */

.Ldie_162:
	.uleb128 0x8	/* (DIE (0x162) DW_TAG_class_type) */
	.ascii	"new_allocator<a::b>\0"	/* DW_AT_name */
	.byte	0x1	/* DW_AT_declaration */

.Ldie_19f:
	.uleb128 0x2	/* (DIE (0x19f) DW_TAG_base_type) */
	.byte	0x4	/* DW_AT_byte_size */
	.byte	0x5	/* DW_AT_encoding */
	.ascii "int\0"	/* DW_AT_name */

.Ldie_1c6:
	.uleb128 0x17	/* (DIE (0x1c6) DW_TAG_pointer_type) */
	.byte	0x8	/* DW_AT_byte_size */
	.4byte	OFFSET (1cc)	/* DW_AT_type */

.Ldie_1cc:
	.uleb128 0x18	/* (DIE (0x1cc) DW_TAG_const_type) */

.Ldie_1cd:
	.uleb128 0x2	/* (DIE (0x1cd) DW_TAG_base_type) */
	.byte	0x1	/* DW_AT_byte_size */
	.byte	0x6	/* DW_AT_encoding */
	.ascii	"char\0"	/* DW_AT_name */

.Ldie_221:
	.uleb128 0x1b	/* (DIE (0x221) DW_TAG_class_type) */
	.ascii "a\0"	/* DW_AT_name */
	.byte	0x18	/* DW_AT_byte_size */
	.4byte	OFFSET (277)	/* DW_AT_sibling */

.Ldie_22b:
	.uleb128 0x1b	/* (DIE (0x22b) DW_TAG_class_type) */
	.ascii "b\0"	/* DW_AT_name */
	.byte	0x1	/* DW_AT_byte_size */
	.4byte	OFFSET (244)	/* DW_AT_sibling */

.Ldie_235:
	.uleb128 0x1c	/* (DIE (0x235) DW_TAG_subprogram) */
	.byte	0x1	/* DW_AT_external */
	.ascii "b\0"	/* DW_AT_name */
	.byte	0x1	/* DW_AT_declaration */

.Ldie_23c:
	.uleb128 0xe	/* (DIE (0x23c) DW_TAG_formal_parameter) */
	.4byte	OFFSET (277)	/* DW_AT_type */
	.byte	0x1	/* DW_AT_artificial */
	.byte	0x0	/* end of children of DIE 0x235 */
	.byte	0x0	/* end of children of DIE 0x22b */

.Ldie_244:
	.uleb128 0x1d	/* (DIE (0x244) DW_TAG_member) */
	.ascii	"list\0"	/* DW_AT_name */
	.4byte	OFFSET (59d)	/* DW_AT_type */
	.sleb128 0	/* DW_AT_data_member_location */
	.byte	0x3	/* DW_AT_accessibility */

.Ldie_251:
	.uleb128 0x1e	/* (DIE (0x251) DW_TAG_subprogram) */
	.byte	0x1	/* DW_AT_external */
	.ascii "a\0"	/* DW_AT_name */
	.byte	0x1	/* DW_AT_artificial */
	.byte	0x1	/* DW_AT_declaration */
	.4byte	OFFSET (262)	/* DW_AT_sibling */

.Ldie_25b:
	.uleb128 0xe	/* (DIE (0x25b) DW_TAG_formal_parameter) */
	.4byte	OFFSET (b61)	/* DW_AT_type */
	.byte	0x1	/* DW_AT_artificial */
	.byte	0x0	/* end of children of DIE 0x251 */

.Ldie_262:
	.uleb128 0x1f	/* (DIE (0x262) DW_TAG_subprogram) */
	.byte	0x1	/* DW_AT_external */
	.ascii "~a\0"	/* DW_AT_name */
	.byte	0x1	/* DW_AT_artificial */
	.byte	0x1	/* DW_AT_declaration */

.Ldie_269:
	.uleb128 0xe	/* (DIE (0x269) DW_TAG_formal_parameter) */
	.4byte	OFFSET (b61)	/* DW_AT_type */
	.byte	0x1	/* DW_AT_artificial */

.Ldie_26f:
	.uleb128 0xe	/* (DIE (0x26f) DW_TAG_formal_parameter) */
	.4byte	OFFSET (19f)	/* DW_AT_type */
	.byte	0x1	/* DW_AT_artificial */
	.byte	0x0	/* end of children of DIE 0x262 */
	.byte	0x0	/* end of children of DIE 0x221 */

.Ldie_277:
	.uleb128 0x17	/* (DIE (0x277) DW_TAG_pointer_type) */
	.byte	0x4	/* DW_AT_byte_size */
	.4byte	OFFSET (22b)	/* DW_AT_type */

.Ldie_27d:
	.uleb128 0x20	/* (DIE (0x27d) DW_TAG_class_type) */
	.4byte	OFFSET (162)	/* DW_AT_specification */
	.byte	0x1	/* DW_AT_byte_size */
	.4byte	OFFSET (3b2)	/* DW_AT_sibling */

.Ldie_2d0:
	.uleb128 0x21	/* (DIE (0x2d0) DW_TAG_subprogram) */
	.byte	0x1	/* DW_AT_external */
	.ascii	"address\0"	/* DW_AT_name */
	.4byte	OFFSET (277)	/* DW_AT_type */
	.byte	0x1	/* DW_AT_declaration */
	.4byte	OFFSET (3b2)	/* DW_AT_sibling */

.Ldie_2e5:
	.uleb128 0xe	/* (DIE (0x2e5) DW_TAG_formal_parameter) */
	.4byte	OFFSET (3da)	/* DW_AT_type */
	.byte	0x1	/* DW_AT_artificial */

.Ldie_2eb:
	.uleb128 0xf	/* (DIE (0x2eb) DW_TAG_formal_parameter) */
	.4byte	OFFSET (3bd)	/* DW_AT_type */
	.byte	0x0	/* end of children of DIE 0x2d0 */
	.byte	0x0	/* end of children of DIE 0x27d */

.Ldie_3b2:
	.uleb128 0x17	/* (DIE (0x3b2) DW_TAG_pointer_type) */
	.byte	0x4	/* DW_AT_byte_size */
	.4byte	OFFSET (3b8)	/* DW_AT_type */

.Ldie_3b8:
	.uleb128 0x19	/* (DIE (0x3b8) DW_TAG_const_type) */
	.4byte	OFFSET (22b)	/* DW_AT_type */

.Ldie_3bd:
	.uleb128 0x22	/* (DIE (0x3bd) DW_TAG_reference_type) */
	.byte	0x4	/* DW_AT_byte_size */
	.4byte	OFFSET (22b)	/* DW_AT_type */

.Ldie_3d5:
	.uleb128 0x19	/* (DIE (0x3d5) DW_TAG_const_type) */
	.4byte	OFFSET (27d)	/* DW_AT_type */

.Ldie_3da:
	.uleb128 0x17	/* (DIE (0x3da) DW_TAG_pointer_type) */
	.byte	0x4	/* DW_AT_byte_size */
	.4byte	OFFSET (3d5)	/* DW_AT_type */

.Ldie_3e0:
	.Uleb128 0x20	/* (DIE (0x3e0) DW_TAG_class_type) */
	.4byte	OFFSET (70)	/* DW_AT_specification */
	.byte	0x1	/* DW_AT_byte_size */
	.4byte	OFFSET (44e)	/* DW_AT_sibling */

.Ldie_3ec:
	.uleb128 0xb	/* (DIE (0x3ec) DW_TAG_inheritance) */
	.4byte	OFFSET (27d)	/* DW_AT_type */
	.sleb128 0	/* DW_AT_data_member_location */
	.byte	0x1	/* DW_AT_accessibility */
	.byte	0x0	/* end of children of DIE 0x3e0 */

.Ldie_44e:
	.uleb128 0x1a	/* (DIE (0x44e) DW_TAG_structure_type) */
	.4byte	OFFSET (76)	/* DW_AT_specification */
	.byte	0x18	/* DW_AT_byte_size */
	.4byte	OFFSET (505)	/* DW_AT_sibling */

.Ldie_505:
	.uleb128 0x11	/* (DIE (0x505) DW_TAG_subprogram) */
	.ascii	"~_Vector_base\0"	/* DW_AT_name */
	.byte	0x1	/* DW_AT_declaration */
	.4byte	OFFSET (51f)	/* DW_AT_sibling */

.Ldie_512:
	.uleb128 0xe	/* (DIE (0x512) DW_TAG_formal_parameter) */
	.4byte	OFFSET (58c)	/* DW_AT_type */
	.byte	0x1	/* DW_AT_artificial */

.Ldie_518:
	.uleb128 0xf	/* (DIE (0x518) DW_TAG_formal_parameter) */
	.4byte	OFFSET (19f)	/* DW_AT_type */
	.byte	0x0	/* end of children of DIE 0x505 */

.Ldie_51f:
	.uleb128 0x23	/* (DIE (0x51f) DW_TAG_subprogram) */
	.byte	0x1	/* DW_AT_external */
	.ascii	"_M_allocate\0"	/* DW_AT_name */
	.4byte	OFFSET (277)	/* DW_AT_type */
	.byte	0x1	/* DW_AT_declaration */
	.4byte	OFFSET (540)	/* DW_AT_sibling */

.Ldie_540:
	.uleb128 0x11	/* (DIE (0x540) DW_TAG_subprogram) */
	.ascii	"_M_deallocate\0"	/* DW_AT_name */
	.byte	0x1	/* DW_AT_declaration */
	.4byte	OFFSET (562)	/* DW_AT_sibling */

.Ldie_551:
	.uleb128 0xe	/* (DIE (0x551) DW_TAG_formal_parameter) */
	.4byte	OFFSET (58c)	/* DW_AT_type */
	.byte	0x1	/* DW_AT_artificial */

.Ldie_557:
	.uleb128 0xf	/* (DIE (0x557) DW_TAG_formal_parameter) */
	.4byte	OFFSET (277)	/* DW_AT_type */

.Ldie_55c:
	.uleb128 0xf	/* (DIE (0x55c) DW_TAG_formal_parameter) */
	.4byte	OFFSET (43)	/* DW_AT_type */
	.byte	0x0	/* end of children of DIE 0x540 */

.Ldie_562:
	.uleb128 0x5	/* (DIE (0x562) DW_TAG_imported_declaration) */
	.4byte	OFFSET (51f)	/* DW_AT_import */
	.byte	0x0	/* end of children of DIE 0x44e */

.Ldie_586:
	.uleb128 0x22	/* (DIE (0x586) DW_TAG_reference_type) */
	.byte	0x4	/* DW_AT_byte_size */
	.4byte	OFFSET (3e0)	/* DW_AT_type */

.Ldie_58c:
	.uleb128 0x17	/* (DIE (0x58c) DW_TAG_pointer_type) */
	.byte	0x8	/* DW_AT_byte_size */
	.4byte	OFFSET (44e)	/* DW_AT_type */

.Ldie_59d:
	.uleb128 0x20	/* (DIE (0x59d) DW_TAG_class_type) */
	.4byte	OFFSET (f7)	/* DW_AT_specification */
	.byte	0x18	/* DW_AT_byte_size */
	.4byte	OFFSET (b44)	/* DW_AT_sibling */

.Ldie_5a9:
	.uleb128 0xb	/* (DIE (0x5a9) DW_TAG_inheritance) */
	.4byte	OFFSET (44e)	/* DW_AT_type */
	.sleb128 0	/* DW_AT_data_member_location */
	.byte	0x2	/* DW_AT_accessibility */
	.byte	0x0	/* end of children of DIE 0x59d */

.Ldie_b44:
	.uleb128 0x17	/* (DIE (0xb44) DW_TAG_pointer_type) */
	.byte	0x8	/* DW_AT_byte_size */
	.4byte	OFFSET (59d) /* DW_AT_type */

.Ldie_b61:
	.uleb128 0x17	/* (DIE (0xb61) DW_TAG_pointer_type) */
	.byte	0x4	/* DW_AT_byte_size */
	.4byte	OFFSET (221) /* DW_AT_type */
	.byte	0x0	/* end of children of DIE 0xb */
.Lcu1_end:

/* Abbrev table */
	.section	.debug_abbrev
	.uleb128 0x1	/* (abbrev code) */
	.uleb128 0x11	/* (TAG: DW_TAG_compile_unit) */
	.byte	0x1	/* DW_children_yes */
	.uleb128 0x25	/* (DW_AT_producer) */
	.uleb128 0x8	/* (DW_FORM_string) */
	.uleb128 0x13	/* (DW_AT_language) */
	.uleb128 0xb	/* (DW_FORM_data1) */
	.uleb128 0x3	/* (DW_AT_name) */
	.uleb128 0x8	/* (DW_FORM_sting) */
	.uleb128 0x10	/* (DW_AT_stmt_list) */
	.uleb128 0x6	/* (DW_FORM_data4) */
	.byte	0x0
	.byte	0x0

	.uleb128 0x2	/* (abbrev code) */
	.uleb128 0x24	/* (DW_TAG_base_type) */
	.byte	0x0	/* DW_children_no */
	.uleb128 0xb	/* (DW_AT_byte_size) */
	.uleb128 0xb	/* (DW_FORM_data1) */
	.uleb128 0x3e	/* (DW_AT_encoding) */
	.uleb128 0xb	/* (DW_FORM_data1) */
	.uleb128 0x3	/* (DW_AT_name) */
	.uleb128 0x8	/* (DW_FORM_string) */
	.byte	0x0
	.byte	0x0

	.uleb128 0x3	/* (abbrev code) */
	.uleb128 0x16	/* (TAG: DW_TAG_typedef) */
	.byte	0x0	/* DW_children_no */
	.uleb128 0x3	/* (DW_AT_name) */
	.uleb128 0x8	/* (DW_FORM_string) */
	.uleb128 0x49	/* (DW_AT_type) */
	.uleb128 0x13	/* (DW_FORM_ref4) */
	.byte	0x0
	.byte	0x0

	.uleb128 0x4	/* (abbrev code) */
	.uleb128 0x39	/* (TAG: DW_TAG_namespace) */
	.byte	0x1	/* DW_children_yes */
	.uleb128 0x3	/* (DW_AT_name) */
	.uleb128 0x8	/* (DW_FORM_string) */
	.uleb128 0x1	/* (DW_AT_sibling) */
	.uleb128 0x13	/* (DW_FORM_ref4) */
	.byte	0x0
	.byte	0x0

	.uleb128 0x5	/* (abbrev code) */
	.uleb128 0x8	/* (TAG: DW_TAG_imported_declaration) */
	.byte	0x0	/* DW_children_no */
	.uleb128 0x18	/* (DW_AT_import) */
	.uleb128 0x13	/* (DW_FORM_ref4) */
	.byte	0x0
	.byte	0x0

	.uleb128 0x8	/* (abbrev code) */
	.uleb128 0x2	/* (TAG: DW_TAG_class_type) */
	.byte	0x0	/* DW_children_no */
	.uleb128 0x3	/* (DW_AT_name) */
	.uleb128 0x8	/* (DW_FORM_string) */
	.uleb128 0x3c	/* (DW_AT_declaration) */
	.uleb128 0xc	/* (DW_FORM_flag) */
	.byte	0x0
	.byte	0x0

	.uleb128 0x9	/* (abbrev code) */
	.uleb128 0x13	/* (TAG: DW_TAG_structure_type) */
	.byte	0x1	/* DW_children_yes */
	.uleb128 0x3	/* (DW_AT_name) */
	.uleb128 0x8	/* (DW_FORM_string) */
	.uleb128 0x3c	/* (DW_AT_declaration) */
	.uleb128 0xc	/* (DW_FORM_flag) */
	.uleb128 0x1	/* (DW_AT_sibling) */
	.uleb128 0x13	/* (DW_FORM_ref4) */
	.byte	0x0
	.byte	0x0

	.uleb128 0xa	/* (abbrev code) */
	.uleb128 0x13	/* (TAG: DW_TAG_structure_type) */
	.byte	0x1	/* DW_children_yes */
	.uleb128 0x3	/* (DW_AT_name) */
	.uleb128 0x8	/* (DW_FORM_string) */
	.uleb128 0xb	/* (DW_AT_byte_size) */
	.uleb128 0xb	/* (DW_FORM_data1) */
	.byte	0x0
	.byte	0x0

	.uleb128 0xb	/* (abbrev code) */
	.uleb128 0x1c	/* (TAG: DW_TAG_inheritance) */
	.byte	0x0	/* DW_children_no */
	.uleb128 0x49	/* (DW_AT_type) */
	.uleb128 0x13	/* (DW_FORM_ref4) */
	.uleb128 0x38	/* (DW_AT_data_member_location) */
	.uleb128 0xd	/* (DW_FORM_sdata) */
	.uleb128 0x32	/* (DW_AT_accessibility) */
	.uleb128 0xb	/* (DW_FORM_data1) */
	.byte	0x0
	.byte	0x0

	.uleb128 0xe	/* (abbrev code) */
	.uleb128 0x5	/* (TAG: DW_TAG_formal_parameter) */
	.byte	0x0	/* DW_children_no */
	.uleb128 0x49	/* (DW_AT_type) */
	.uleb128 0x13	/* (DW_FORM_ref4) */
	.uleb128 0x34	/* (DW_AT_artificial) */
	.uleb128 0xc	/* (DW_FORM_flag) */
	.byte	0x0
	.byte	0x0

	.uleb128 0xf	/* (abbrev code) */
	.uleb128 0x5	/* (TAG: DW_TAG_formal_parameter) */
	.byte	0x0	/* DW_children_no */
	.uleb128 0x49	/* (DW_AT_type) */
	.uleb128 0x13	/* (DW_FORM_ref4) */
	.byte	0x0
	.byte	0x0

	.uleb128 0x11	/* (abbrev code) */
	.uleb128 0x2e	/* (DW_TAG_subprogram) */
	.byte	0x1	/* DW_children_yes */
	.uleb128 0x3	/* (DW_AT_name) */
	.uleb128 0x8	/* (DW_FORM_string) */
	.uleb128 0x3c	/* (DW_AT_declaration) */
	.uleb128 0xc	/* (DW_FORM_flag) */
	.uleb128 0x1	/* (DW_AT_sibling) */
	.uleb128 0x13	/* (DW_FORM_ref4) */
	.byte	0x0
	.byte	0x0

	.uleb128 0x13	/* (abbrev code) */
	.uleb128 0x24	/* (DW_TAG_base_type) */
	.byte	0x0	/* DW_children_no */
	.uleb128 0xb	/* (DW_AT_byte_size) */
	.uleb128 0xb	/* (DW_FORM_data1) */
	.uleb128 0x3e	/* (DW_AT_encoding) */
	.uleb128 0xb	/* (DW_FORM_data1) */
	.byte	0x0
	.byte	0x0

	.uleb128 0x17	/* (abbrev code) */
	.uleb128 0xf	/* (TAG: DW_TAG_pointer_type) */
	.byte	0x0	/* DW_children_no */
	.uleb128 0xb	/* (DW_AT_byte_size) */
	.uleb128 0xb	/* (DW_FORM_data1) */
	.uleb128 0x49	/* (DW_AT_type) */
	.uleb128 0x13	/* (DW_FORM_ref4) */
	.byte	0x0
	.byte	0x0

	.uleb128 0x18	/* (abbrev code) */
	.uleb128 0x26	/* (TAG: DW_TAG_const_type) */
	.byte	0x0	/* DW_children_no */
	.byte	0x0
	.byte	0x0

	.uleb128 0x19	/* (abbrev code) */
	.uleb128 0x26	/* (TAG: DW_TAG_const_type) */
	.byte	0x0	/* DW_children_no */
	.uleb128 0x49	/* (DW_AT_type) */
	.uleb128 0x13	/* (DW_FORM_ref4) */
	.byte	0x0
	.byte	0x0

	.uleb128 0x1a	/* (abbrev code) */
	.uleb128 0x13	/* (TAG: DW_TAG_structure_type) */
	.byte	0x1	/* DW_children_yes */
	.uleb128 0x47	/* (DW_AT_specification) */
	.uleb128 0x13	/* (DW_FORM_ref4) */
	.uleb128 0xb	/* (DW_AT_byte_size) */
	.uleb128 0xb	/* (DW_FORM_data1) */
	.uleb128 0x1	/* (DW_AT_sibling) */
	.uleb128 0x13	/* (DW_FORM_ref4) */
	.byte	0x0
	.byte	0x0

	.uleb128 0x1b	/* (abbrev code) */
	.uleb128 0x2	/* (TAG: DW_TAG_class_type) */
	.byte	0x1	/* DW_children_yes */
	.uleb128 0x3	/* (DW_AT_name) */
	.uleb128 0x8	/* (DW_FORM_string) */
	.uleb128 0xb	/* (DW_AT_byte_size) */
	.uleb128 0xb	/* (DW_FORM_data1) */
	.uleb128 0x1	/* (DW_AT_sibling) */
	.uleb128 0x13	/* (DW_FORM_ref4) */
	.byte	0x0
	.byte	0x0

	.uleb128 0x1c	/* (abbrev code) */
	.uleb128 0x2e	/* (TAG: DW_TAG_subprogram) */
	.byte	0x1	/* DW_children_yes */
	.uleb128 0x3f	/* (DW_AT_external) */
	.uleb128 0xc	/* (DW_FORM_flag) */
	.uleb128 0x3	/* (DW_AT_name) */
	.uleb128 0x8	/* (DW_FORM_string) */
	.uleb128 0x3c	/* (DW_AT_declaration) */
	.uleb128 0xc	/* (DW_FORM_flag) */
	.byte	0x0
	.byte	0x0

	.uleb128 0x1d	/* (abbrev code) */
	.uleb128 0xd	/* (TAG: DW_TAG_member) */
	.byte	0x0	/* DW_children_no */
	.uleb128 0x3	/* (DW_AT_name) */
	.uleb128 0x8	/* (DW_FORM_string) */
	.uleb128 0x49	/* (DW_AT_type) */
	.uleb128 0x13	/* (DW_FORM_ref4) */
	.uleb128 0x38	/* (DW_AT_data_member_location) */
	.uleb128 0xd	/* (DW_FORM_sdata) */
	.uleb128 0x32	/* (DW_AT_accessibility) */
	.uleb128 0xb	/* (DW_FORM_data1) */
	.byte	0x0
	.byte	0x0

	.uleb128 0x1e	/* (abbrev code) */
	.uleb128 0x2e	/* (TAG: DW_TAG_subprogram) */
	.byte	0x1	/* DW_children_yes */
	.uleb128 0x3f	/* (DW_AT_external) */
	.uleb128 0xc	/* (DW_FORM_flag) */
	.uleb128 0x3	/* (DW_AT_name) */
	.uleb128 0x8	/* (DW_FORM_string) */
	.uleb128 0x34	/* (DW_AT_artificial) */
	.uleb128 0xc	/* (DW_FORM_flag) */
	.uleb128 0x3c	/* (DW_AT_declaration) */
	.uleb128 0xc	/* (DW_FORM_flag) */
	.uleb128 0x1	/* (DW_AT_sibling) */
	.uleb128 0x13	/* (DW_FORM_ref4) */
	.byte	0x0
	.byte	0x0

	.uleb128 0x1f	/* (abbrev code) */
	.uleb128 0x2e	/* (TAG: DW_TAG_subprogram) */
	.byte	0x1	/* DW_children_yes */
	.uleb128 0x3f	/* (DW_AT_external) */
	.uleb128 0xc	/* (DW_FORM_flag) */
	.uleb128 0x3	/* (DW_AT_name) */
	.uleb128 0x8	/* (DW_FORM_string) */
	.uleb128 0x34	/* (DW_AT_artificial) */
	.uleb128 0xc	/* (DW_FORM_flag) */
	.uleb128 0x3c	/* (DW_AT_declaration) */
	.uleb128 0xc	/* (DW_FORM_flag) */
	.byte	0x0
	.byte	0x0

	.uleb128 0x20	/* (abbrev code) */
	.uleb128 0x2	/* (TAG: DW_TAG_class_type) */
	.byte	0x1	/* DW_children_yes */
	.uleb128 0x47	/* (DW_AT_specification) */
	.uleb128 0x13	/* (DW_FORM_ref4) */
	.uleb128 0xb	/* (DW_AT_byte_size) */
	.uleb128 0xb	/* (DW_FORM_data1) */
	.uleb128 0x1	/* (DW_AT_sibling) */
	.uleb128 0x13	/* (DW_FORM_ref4) */
	.byte	0x0
	.byte	0x0

	.uleb128 0x21	/* (abbrev code) */
	.uleb128 0x2e	/* (TAG: DW_TAG_subprogram) */
	.byte	0x1	/* DW_children_yes */
	.uleb128 0x3f	/* (DW_AT_external) */
	.uleb128 0xc	/* (DW_FORM_flag) */
	.uleb128 0x3	/* (DW_AT_name) */
	.uleb128 0x8	/* (DW_FORM_string) */
	.uleb128 0x49	/* (DW_AT_type) */
	.uleb128 0x13	/* (DW_FORM_ref4) */
	.uleb128 0x3c	/* (DW_AT_declaration) */
	.uleb128 0xc	/* (DW_FORM_flag) */
	.uleb128 0x1	/* (DW_AT_sibling) */
	.uleb128 0x13	/* (DW_FORM_ref4) */
	.byte	0x0
	.byte	0x0

	.uleb128 0x22	/* (abbrev code) */
	.uleb128 0x10	/* (TAG: DW_TAG_reference_type) */
	.byte	0x0	/* DW_children_no */
	.uleb128 0xb	/* (DW_AT_byte_size) */
	.uleb128 0xb	/* (DW_FORM_data1) */
	.uleb128 0x49	/* (DW_AT_type) */
	.uleb128 0x13	/* (DW_FORM_ref4) */
	.byte	0x0
	.byte	0x0

	.uleb128 0x23	/* (abbrev code) */
	.uleb128 0x2e	/* (TAG: DW_TAG_subprogram) */
	.byte	0x0	/* DW_children_no */
	.uleb128 0x3f	/* (DW_AT_external) */
	.uleb128 0xc	/* (DW_FORM_flag) */
	.uleb128 0x3	/* (DW_AT_name) */
	.uleb128 0x8	/* (DW_FORM_string) */
	.uleb128 0x49	/* (DW_AT_type) */
	.uleb128 0x13	/* (DW_FORM_ref4) */
	.uleb128 0x3c	/* (DW_AT_declaration) */
	.uleb128 0xc	/* (DW_FORM_flag) */
	.uleb128 0x1	/* (DW_AT_sibling) */
	.uleb128 0x13	/* (DW_FORM_ref4) */
	.byte	0x0
	.byte	0x0

	.byte	0x0
	.byte	0x0

@


1.7
log
@gdb/testsuite/
	* gdb.dwarf2/dw2-ada-ffffffff.S: Use .4byte instead of .long for
	describing DWARF data structures.
	* gdb.dwarf2/dw2-bad-parameter-type.S: Likewise.
	* gdb.dwarf2/dw2-double-set-die-type.S: Likewise.
	* gdb.dwarf2/dw2-empty-pc-range.S: Likewise.
	* gdb.dwarf2/dw2-entry-value.S: Likewise.
	* gdb.dwarf2/dw2-modula2-self-type.S: Likewise.
	* gdb.dwarf2/dw2-param-error.S: Likewise.
	* gdb.dwarf2/dw2-skip-prologue.S: Likewise.
	* gdb.dwarf2/dw2-stack-boundary.S: Likewise.
	* gdb.dwarf2/dw4-sig-type-unused.S: Likewise.
	* gdb.dwarf2/implptr-optimized-out.S: Likewise.
	* gdb.dwarf2/member-ptr-forwardref.S: Likewise.
	* gdb.dwarf2/pr11465.S: Likewise.
@
text
@d3 1
a3 1
   Copyright 2010-2012 Free Software Foundation, Inc.
@


1.6
log
@Copyright year update in most files of the GDB Project.

gdb/ChangeLog:

        Copyright year update in most files of the GDB Project.
@
text
@d45 1
a45 1
	.long	.Labbrev1_begin	/* Offset Into Abbrev. Section */
d53 1
a53 1
	.long	.Ldebug_line0	/* DW_AT_stmt_list */
d58 1
a58 1
	.long	OFFSET (43)	/* DW_AT_type */
d69 1
a69 1
	.long	OFFSET (143)	/* DW_AT_sibling */
d80 1
a80 1
	.long	OFFSET (f7)	/* DW_AT_sibling */
d89 1
a89 1
	.long	OFFSET (3e0)	/* DW_AT_type */
d120 1
a120 1
	.long	OFFSET (1cc)	/* DW_AT_type */
d135 1
a135 1
	.long	OFFSET (277)	/* DW_AT_sibling */
d141 1
a141 1
	.long	OFFSET (244)	/* DW_AT_sibling */
d151 1
a151 1
	.long	OFFSET (277)	/* DW_AT_type */
d159 1
a159 1
	.long	OFFSET (59d)	/* DW_AT_type */
d169 1
a169 1
	.long	OFFSET (262)	/* DW_AT_sibling */
d173 1
a173 1
	.long	OFFSET (b61)	/* DW_AT_type */
d186 1
a186 1
	.long	OFFSET (b61)	/* DW_AT_type */
d191 1
a191 1
	.long	OFFSET (19f)	/* DW_AT_type */
d199 1
a199 1
	.long	OFFSET (22b)	/* DW_AT_type */
d203 1
a203 1
	.long	OFFSET (162)	/* DW_AT_specification */
d205 1
a205 1
	.long	OFFSET (3b2)	/* DW_AT_sibling */
d211 1
a211 1
	.long	OFFSET (277)	/* DW_AT_type */
d213 1
a213 1
	.long	OFFSET (3b2)	/* DW_AT_sibling */
d217 1
a217 1
	.long	OFFSET (3da)	/* DW_AT_type */
d222 1
a222 1
	.long	OFFSET (3bd)	/* DW_AT_type */
d229 1
a229 1
	.long	OFFSET (3b8)	/* DW_AT_type */
d233 1
a233 1
	.long	OFFSET (22b)	/* DW_AT_type */
d238 1
a238 1
	.long	OFFSET (22b)	/* DW_AT_type */
d242 1
a242 1
	.long	OFFSET (27d)	/* DW_AT_type */
d247 1
a247 1
	.long	OFFSET (3d5)	/* DW_AT_type */
d251 1
a251 1
	.long	OFFSET (70)	/* DW_AT_specification */
d253 1
a253 1
	.long	OFFSET (44e)	/* DW_AT_sibling */
d257 1
a257 1
	.long	OFFSET (27d)	/* DW_AT_type */
d264 1
a264 1
	.long	OFFSET (76)	/* DW_AT_specification */
d266 1
a266 1
	.long	OFFSET (505)	/* DW_AT_sibling */
d272 1
a272 1
	.long	OFFSET (51f)	/* DW_AT_sibling */
d276 1
a276 1
	.long	OFFSET (58c)	/* DW_AT_type */
d281 1
a281 1
	.long	OFFSET (19f)	/* DW_AT_type */
d288 1
a288 1
	.long	OFFSET (277)	/* DW_AT_type */
d290 1
a290 1
	.long	OFFSET (540)	/* DW_AT_sibling */
d296 1
a296 1
	.long	OFFSET (562)	/* DW_AT_sibling */
d300 1
a300 1
	.long	OFFSET (58c)	/* DW_AT_type */
d305 1
a305 1
	.long	OFFSET (277)	/* DW_AT_type */
d309 1
a309 1
	.long	OFFSET (43)	/* DW_AT_type */
d314 1
a314 1
	.long	OFFSET (51f)	/* DW_AT_import */
d320 1
a320 1
	.long	OFFSET (3e0)	/* DW_AT_type */
d325 1
a325 1
	.long	OFFSET (44e)	/* DW_AT_type */
d329 1
a329 1
	.long	OFFSET (f7)	/* DW_AT_specification */
d331 1
a331 1
	.long	OFFSET (b44)	/* DW_AT_sibling */
d335 1
a335 1
	.long	OFFSET (44e)	/* DW_AT_type */
d343 1
a343 1
	.long	OFFSET (59d) /* DW_AT_type */
d348 1
a348 1
	.long	OFFSET (221) /* DW_AT_type */
@


1.5
log
@2011-04-25  Yao Qi  <yao@@codesourcery.com>

	* gdb.dwarf2/dw2-double-set-die-type.S: Replace comment char `#'
	with /*...*/.
	* gdb.dwarf2/dw2-modula2-self-type.S: Likewise.
@
text
@d3 1
a3 1
   Copyright 2010, 2011 Free Software Foundation, Inc.
@


1.5.2.1
log
@Copyright year update in most files of the GDB Project.

gdb/ChangeLog:

        Copyright year update in most files of the GDB Project.
@
text
@d3 1
a3 1
   Copyright 2010-2012 Free Software Foundation, Inc.
@


1.4
log
@run copyright.sh for 2011.
@
text
@d42 1
a42 1
	.4byte	.Lcu1_end - .Lcu1_start	# Length of Compilation Unit Info
d44 3
a46 3
	.2byte	0x3	# DWARF version number
	.long	.Labbrev1_begin	# Offset Into Abbrev. Section
	.byte	0x4	# Pointer Size (in bytes)
d49 5
a53 5
	.uleb128 0x1	# (DIE (0xb) DW_TAG_compile_unit)
	.ascii	"GNU C++ 4.4.3 20100127 (Red Hat 4.4.3-4)\0"	# DW_AT_producer
	.byte	0x4	# DW_AT_language
	.ascii	"duplicate-type.cc\0"	# DW_AT_name
	.long	.Ldebug_line0	# DW_AT_stmt_list
d56 3
a58 3
	.uleb128 0x3	# (DIE (0x38) DW_TAG_typedef)
	.ascii	"size_t\0"	# DW_AT_name
	.long	OFFSET (43)	# DW_AT_type
d61 4
a64 4
	.uleb128 0x2	# (DIE (0x43) DW_TAG_base_type)
	.byte	0x4	# DW_AT_byte_size
	.byte	0x7	# DW_AT_encoding
	.ascii	"long unsigned int\0" # DW_AT_name
d67 3
a69 3
	.uleb128 0x4	# (DIE (0x4a) DW_TAG_namespace)
	.ascii "std\0"	# DW_AT_name
	.long	OFFSET (143)	# DW_AT_sibling
d72 3
a74 3
	.uleb128 0x8	# (DIE (0x70) DW_TAG_class_type)
	.ascii	"allocator<a::b>\0"	# DW_AT_name
	.byte	0x1	# DW_AT_declaration
d77 4
a80 4
	.uleb128 0x9	# (DIE (0x76) DW_TAG_structure_type)
	.ascii	"_Vector_base<a::b, std::allocator<a::b> >\0"	# DW_AT_name
	.byte	0x1	# DW_AT_declaration
	.long	OFFSET (f7)	# DW_AT_sibling
d83 3
a85 3
	.uleb128 0xa	# (DIE (0x80) DW_TAG_structure_type)
	.ascii	"_Vector_impl\0"	# DW_AT_name
	.byte	0x18	# DW_AT_byte_size
d88 6
a93 6
	.uleb128 0xb	# (DIE (0x88) DW_TAG_inheritance)
	.long	OFFSET (3e0)	# DW_AT_type
	.sleb128 0	# DW_AT_data_member_location
	.byte	0x1	# DW_AT_accessibility
	.byte	0x0	# end of children of DIE 0x80
	.byte	0x0	# end of children of DIE 0x76
d96 4
a99 4
	.uleb128 0x8	# (DIE (0xf7) DW_TAG_class_type)
	.ascii	"vector<a::b, std::allocator<a::b> >\0" # DW_AT_name
	.byte	0x1	# DW_AT_declaration
	.byte	0x0	# end of children of DIE 0x4a
d102 3
a104 3
	.uleb128 0x13	# (DIE (0x143) DW_TAG_base_type)
	.byte	0x4	# DW_AT_byte_size
	.byte	0x5	# DW_AT_encoding
d107 3
a109 3
	.uleb128 0x8	# (DIE (0x162) DW_TAG_class_type)
	.ascii	"new_allocator<a::b>\0"	# DW_AT_name
	.byte	0x1	# DW_AT_declaration
d112 4
a115 4
	.uleb128 0x2	# (DIE (0x19f) DW_TAG_base_type)
	.byte	0x4	# DW_AT_byte_size
	.byte	0x5	# DW_AT_encoding
	.ascii "int\0"	# DW_AT_name
d118 3
a120 3
	.uleb128 0x17	# (DIE (0x1c6) DW_TAG_pointer_type)
	.byte	0x8	# DW_AT_byte_size
	.long	OFFSET (1cc)	# DW_AT_type
d123 1
a123 1
	.uleb128 0x18	# (DIE (0x1cc) DW_TAG_const_type)
d126 4
a129 4
	.uleb128 0x2	# (DIE (0x1cd) DW_TAG_base_type)
	.byte	0x1	# DW_AT_byte_size
	.byte	0x6	# DW_AT_encoding
	.ascii	"char\0"	# DW_AT_name
d132 4
a135 4
	.uleb128 0x1b	# (DIE (0x221) DW_TAG_class_type)
	.ascii "a\0"	# DW_AT_name
	.byte	0x18	# DW_AT_byte_size
	.long	OFFSET (277)	# DW_AT_sibling
d138 4
a141 4
	.uleb128 0x1b	# (DIE (0x22b) DW_TAG_class_type)
	.ascii "b\0"	# DW_AT_name
	.byte	0x1	# DW_AT_byte_size
	.long	OFFSET (244)	# DW_AT_sibling
d144 4
a147 4
	.uleb128 0x1c	# (DIE (0x235) DW_TAG_subprogram)
	.byte	0x1	# DW_AT_external
	.ascii "b\0"	# DW_AT_name
	.byte	0x1	# DW_AT_declaration
d150 5
a154 5
	.uleb128 0xe	# (DIE (0x23c) DW_TAG_formal_parameter)
	.long	OFFSET (277)	# DW_AT_type
	.byte	0x1	# DW_AT_artificial
	.byte	0x0	# end of children of DIE 0x235
	.byte	0x0	# end of children of DIE 0x22b
d157 5
a161 5
	.uleb128 0x1d	# (DIE (0x244) DW_TAG_member)
	.ascii	"list\0"	# DW_AT_name
	.long	OFFSET (59d)	# DW_AT_type
	.sleb128 0	# DW_AT_data_member_location
	.byte	0x3	# DW_AT_accessibility
d164 6
a169 6
	.uleb128 0x1e	# (DIE (0x251) DW_TAG_subprogram)
	.byte	0x1	# DW_AT_external
	.ascii "a\0"	# DW_AT_name
	.byte	0x1	# DW_AT_artificial
	.byte	0x1	# DW_AT_declaration
	.long	OFFSET (262)	# DW_AT_sibling
d172 4
a175 4
	.uleb128 0xe	# (DIE (0x25b) DW_TAG_formal_parameter)
	.long	OFFSET (b61)	# DW_AT_type
	.byte	0x1	# DW_AT_artificial
	.byte	0x0	# end of children of DIE 0x251
d178 5
a182 5
	.uleb128 0x1f	# (DIE (0x262) DW_TAG_subprogram)
	.byte	0x1	# DW_AT_external
	.ascii "~a\0"	# DW_AT_name
	.byte	0x1	# DW_AT_artificial
	.byte	0x1	# DW_AT_declaration
d185 3
a187 3
	.uleb128 0xe	# (DIE (0x269) DW_TAG_formal_parameter)
	.long	OFFSET (b61)	# DW_AT_type
	.byte	0x1	# DW_AT_artificial
d190 5
a194 5
	.uleb128 0xe	# (DIE (0x26f) DW_TAG_formal_parameter)
	.long	OFFSET (19f)	# DW_AT_type
	.byte	0x1	# DW_AT_artificial
	.byte	0x0	# end of children of DIE 0x262
	.byte	0x0	# end of children of DIE 0x221
d197 3
a199 3
	.uleb128 0x17	# (DIE (0x277) DW_TAG_pointer_type)
	.byte	0x4	# DW_AT_byte_size
	.long	OFFSET (22b)	# DW_AT_type
d202 4
a205 4
	.uleb128 0x20	# (DIE (0x27d) DW_TAG_class_type)
	.long	OFFSET (162)	# DW_AT_specification
	.byte	0x1	# DW_AT_byte_size
	.long	OFFSET (3b2)	# DW_AT_sibling
d208 6
a213 6
	.uleb128 0x21	# (DIE (0x2d0) DW_TAG_subprogram)
	.byte	0x1	# DW_AT_external
	.ascii	"address\0"	# DW_AT_name
	.long	OFFSET (277)	# DW_AT_type
	.byte	0x1	# DW_AT_declaration
	.long	OFFSET (3b2)	# DW_AT_sibling
d216 3
a218 3
	.uleb128 0xe	# (DIE (0x2e5) DW_TAG_formal_parameter)
	.long	OFFSET (3da)	# DW_AT_type
	.byte	0x1	# DW_AT_artificial
d221 4
a224 4
	.uleb128 0xf	# (DIE (0x2eb) DW_TAG_formal_parameter)
	.long	OFFSET (3bd)	# DW_AT_type
	.byte	0x0	# end of children of DIE 0x2d0
	.byte	0x0	# end of children of DIE 0x27d
d227 3
a229 3
	.uleb128 0x17	# (DIE (0x3b2) DW_TAG_pointer_type)
	.byte	0x4	# DW_AT_byte_size
	.long	OFFSET (3b8)	# DW_AT_type
d232 2
a233 2
	.uleb128 0x19	# (DIE (0x3b8) DW_TAG_const_type)
	.long	OFFSET (22b)	# DW_AT_type
d236 3
a238 3
	.uleb128 0x22	# (DIE (0x3bd) DW_TAG_reference_type)
	.byte	0x4	# DW_AT_byte_size
	.long	OFFSET (22b)	# DW_AT_type
d241 2
a242 2
	.uleb128 0x19	# (DIE (0x3d5) DW_TAG_const_type)
	.long	OFFSET (27d)	# DW_AT_type
d245 3
a247 3
	.uleb128 0x17	# (DIE (0x3da) DW_TAG_pointer_type)
	.byte	0x4	# DW_AT_byte_size
	.long	OFFSET (3d5)	# DW_AT_type
d250 4
a253 4
	.Uleb128 0x20	# (DIE (0x3e0) DW_TAG_class_type)
	.long	OFFSET (70)	# DW_AT_specification
	.byte	0x1	# DW_AT_byte_size
	.long	OFFSET (44e)	# DW_AT_sibling
d256 5
a260 5
	.uleb128 0xb	# (DIE (0x3ec) DW_TAG_inheritance)
	.long	OFFSET (27d)	# DW_AT_type
	.sleb128 0	# DW_AT_data_member_location
	.byte	0x1	# DW_AT_accessibility
	.byte	0x0	# end of children of DIE 0x3e0
d263 4
a266 4
	.uleb128 0x1a	# (DIE (0x44e) DW_TAG_structure_type)
	.long	OFFSET (76)	# DW_AT_specification
	.byte	0x18	# DW_AT_byte_size
	.long	OFFSET (505)	# DW_AT_sibling
d269 4
a272 4
	.uleb128 0x11	# (DIE (0x505) DW_TAG_subprogram)
	.ascii	"~_Vector_base\0"	# DW_AT_name
	.byte	0x1	# DW_AT_declaration
	.long	OFFSET (51f)	# DW_AT_sibling
d275 3
a277 3
	.uleb128 0xe	# (DIE (0x512) DW_TAG_formal_parameter)
	.long	OFFSET (58c)	# DW_AT_type
	.byte	0x1	# DW_AT_artificial
d280 3
a282 3
	.uleb128 0xf	# (DIE (0x518) DW_TAG_formal_parameter)
	.long	OFFSET (19f)	# DW_AT_type
	.byte	0x0	# end of children of DIE 0x505
d285 6
a290 6
	.uleb128 0x23	# (DIE (0x51f) DW_TAG_subprogram)
	.byte	0x1	# DW_AT_external
	.ascii	"_M_allocate\0"	# DW_AT_name
	.long	OFFSET (277)	# DW_AT_type
	.byte	0x1	# DW_AT_declaration
	.long	OFFSET (540)	# DW_AT_sibling
d293 4
a296 4
	.uleb128 0x11	# (DIE (0x540) DW_TAG_subprogram)
	.ascii	"_M_deallocate\0"	# DW_AT_name
	.byte	0x1	# DW_AT_declaration
	.long	OFFSET (562)	# DW_AT_sibling
d299 3
a301 3
	.uleb128 0xe	# (DIE (0x551) DW_TAG_formal_parameter)
	.long	OFFSET (58c)	# DW_AT_type
	.byte	0x1	# DW_AT_artificial
d304 2
a305 2
	.uleb128 0xf	# (DIE (0x557) DW_TAG_formal_parameter)
	.long	OFFSET (277)	# DW_AT_type
d308 3
a310 3
	.uleb128 0xf	# (DIE (0x55c) DW_TAG_formal_parameter)
	.long	OFFSET (43)	# DW_AT_type
	.byte	0x0	# end of children of DIE 0x540
d313 3
a315 3
	.uleb128 0x5	# (DIE (0x562) DW_TAG_imported_declaration)
	.long	OFFSET (51f)	# DW_AT_import
	.byte	0x0	# end of children of DIE 0x44e
d318 3
a320 3
	.uleb128 0x22	# (DIE (0x586) DW_TAG_reference_type)
	.byte	0x4	# DW_AT_byte_size
	.long	OFFSET (3e0)	# DW_AT_type
d323 3
a325 3
	.uleb128 0x17	# (DIE (0x58c) DW_TAG_pointer_type)
	.byte	0x8	# DW_AT_byte_size
	.long	OFFSET (44e)	# DW_AT_type
d328 4
a331 4
	.uleb128 0x20	# (DIE (0x59d) DW_TAG_class_type)
	.long	OFFSET (f7)	# DW_AT_specification
	.byte	0x18	# DW_AT_byte_size
	.long	OFFSET (b44)	# DW_AT_sibling
d334 5
a338 5
	.uleb128 0xb	# (DIE (0x5a9) DW_TAG_inheritance)
	.long	OFFSET (44e)	# DW_AT_type
	.sleb128 0	# DW_AT_data_member_location
	.byte	0x2	# DW_AT_accessibility
	.byte	0x0	# end of children of DIE 0x59d
d341 3
a343 3
	.uleb128 0x17	# (DIE (0xb44) DW_TAG_pointer_type)
	.byte	0x8	# DW_AT_byte_size
	.long	OFFSET (59d) # DW_AT_type
d346 4
a349 4
	.uleb128 0x17	# (DIE (0xb61) DW_TAG_pointer_type)
	.byte	0x4	# DW_AT_byte_size
	.long	OFFSET (221) # DW_AT_type
	.byte	0x0	# end of children of DIE 0xb
d354 11
a364 11
	.uleb128 0x1	# (abbrev code)
	.uleb128 0x11	# (TAG: DW_TAG_compile_unit)
	.byte	0x1	# DW_children_yes
	.uleb128 0x25	# (DW_AT_producer)
	.uleb128 0x8	# (DW_FORM_string)
	.uleb128 0x13	# (DW_AT_language)
	.uleb128 0xb	# (DW_FORM_data1)
	.uleb128 0x3	# (DW_AT_name)
	.uleb128 0x8	# (DW_FORM_sting)
	.uleb128 0x10	# (DW_AT_stmt_list)
	.uleb128 0x6	# (DW_FORM_data4)
d368 9
a376 9
	.uleb128 0x2	# (abbrev code)
	.uleb128 0x24	# (DW_TAG_base_type)
	.byte	0x0	# DW_children_no
	.uleb128 0xb	# (DW_AT_byte_size)
	.uleb128 0xb	# (DW_FORM_data1)
	.uleb128 0x3e	# (DW_AT_encoding)
	.uleb128 0xb	# (DW_FORM_data1)
	.uleb128 0x3	# (DW_AT_name)
	.uleb128 0x8	# (DW_FORM_string)
d380 7
a386 7
	.uleb128 0x3	# (abbrev code)
	.uleb128 0x16	# (TAG: DW_TAG_typedef)
	.byte	0x0	# DW_children_no
	.uleb128 0x3	# (DW_AT_name)
	.uleb128 0x8	# (DW_FORM_string)
	.uleb128 0x49	# (DW_AT_type)
	.uleb128 0x13	# (DW_FORM_ref4)
d390 7
a396 7
	.uleb128 0x4	# (abbrev code)
	.uleb128 0x39	# (TAG: DW_TAG_namespace)
	.byte	0x1	# DW_children_yes
	.uleb128 0x3	# (DW_AT_name)
	.uleb128 0x8	# (DW_FORM_string)
	.uleb128 0x1	# (DW_AT_sibling)
	.uleb128 0x13	# (DW_FORM_ref4)
d400 5
a404 5
	.uleb128 0x5	# (abbrev code)
	.uleb128 0x8	# (TAG: DW_TAG_imported_declaration)
	.byte	0x0	# DW_children_no
	.uleb128 0x18	# (DW_AT_import)
	.uleb128 0x13	# (DW_FORM_ref4)
d408 7
a414 7
	.uleb128 0x8	# (abbrev code)
	.uleb128 0x2	# (TAG: DW_TAG_class_type)
	.byte	0x0	# DW_children_no
	.uleb128 0x3	# (DW_AT_name)
	.uleb128 0x8	# (DW_FORM_string)
	.uleb128 0x3c	# (DW_AT_declaration)
	.uleb128 0xc	# (DW_FORM_flag)
d418 9
a426 9
	.uleb128 0x9	# (abbrev code)
	.uleb128 0x13	# (TAG: DW_TAG_structure_type)
	.byte	0x1	# DW_children_yes
	.uleb128 0x3	# (DW_AT_name)
	.uleb128 0x8	# (DW_FORM_string)
	.uleb128 0x3c	# (DW_AT_declaration)
	.uleb128 0xc	# (DW_FORM_flag)
	.uleb128 0x1	# (DW_AT_sibling)
	.uleb128 0x13	# (DW_FORM_ref4)
d430 7
a436 7
	.uleb128 0xa	# (abbrev code)
	.uleb128 0x13	# (TAG: DW_TAG_structure_type)
	.byte	0x1	# DW_children_yes
	.uleb128 0x3	# (DW_AT_name)
	.uleb128 0x8	# (DW_FORM_string)
	.uleb128 0xb	# (DW_AT_byte_size)
	.uleb128 0xb	# (DW_FORM_data1)
d440 9
a448 9
	.uleb128 0xb	# (abbrev code)
	.uleb128 0x1c	# (TAG: DW_TAG_inheritance)
	.byte	0x0	# DW_children_no
	.uleb128 0x49	# (DW_AT_type)
	.uleb128 0x13	# (DW_FORM_ref4)
	.uleb128 0x38	# (DW_AT_data_member_location)
	.uleb128 0xd	# (DW_FORM_sdata)
	.uleb128 0x32	# (DW_AT_accessibility)
	.uleb128 0xb	# (DW_FORM_data1)
d452 7
a458 7
	.uleb128 0xe	# (abbrev code)
	.uleb128 0x5	# (TAG: DW_TAG_formal_parameter)
	.byte	0x0	# DW_children_no
	.uleb128 0x49	# (DW_AT_type)
	.uleb128 0x13	# (DW_FORM_ref4)
	.uleb128 0x34	# (DW_AT_artificial)
	.uleb128 0xc	# (DW_FORM_flag)
d462 5
a466 5
	.uleb128 0xf	# (abbrev code)
	.uleb128 0x5	# (TAG: DW_TAG_formal_parameter)
	.byte	0x0	# DW_children_no
	.uleb128 0x49	# (DW_AT_type)
	.uleb128 0x13	# (DW_FORM_ref4)
d470 9
a478 9
	.uleb128 0x11	# (abbrev code)
	.uleb128 0x2e	# (DW_TAG_subprogram)
	.byte	0x1	# DW_children_yes
	.uleb128 0x3	# (DW_AT_name)
	.uleb128 0x8	# (DW_FORM_string)
	.uleb128 0x3c	# (DW_AT_declaration)
	.uleb128 0xc	# (DW_FORM_flag)
	.uleb128 0x1	# (DW_AT_sibling)
	.uleb128 0x13	# (DW_FORM_ref4)
d482 7
a488 7
	.uleb128 0x13	# (abbrev code)
	.uleb128 0x24	# (DW_TAG_base_type)
	.byte	0x0	# DW_children_no
	.uleb128 0xb	# (DW_AT_byte_size)
	.uleb128 0xb	# (DW_FORM_data1)
	.uleb128 0x3e	# (DW_AT_encoding)
	.uleb128 0xb	# (DW_FORM_data1)
d492 7
a498 7
	.uleb128 0x17	# (abbrev code)
	.uleb128 0xf	# (TAG: DW_TAG_pointer_type)
	.byte	0x0	# DW_children_no
	.uleb128 0xb	# (DW_AT_byte_size)
	.uleb128 0xb	# (DW_FORM_data1)
	.uleb128 0x49	# (DW_AT_type)
	.uleb128 0x13	# (DW_FORM_ref4)
d502 3
a504 3
	.uleb128 0x18	# (abbrev code)
	.uleb128 0x26	# (TAG: DW_TAG_const_type)
	.byte	0x0	# DW_children_no
d508 5
a512 5
	.uleb128 0x19	# (abbrev code)
	.uleb128 0x26	# (TAG: DW_TAG_const_type)
	.byte	0x0	# DW_children_no
	.uleb128 0x49	# (DW_AT_type)
	.uleb128 0x13	# (DW_FORM_ref4)
d516 9
a524 9
	.uleb128 0x1a	# (abbrev code)
	.uleb128 0x13	# (TAG: DW_TAG_structure_type)
	.byte	0x1	# DW_children_yes
	.uleb128 0x47	# (DW_AT_specification)
	.uleb128 0x13	# (DW_FORM_ref4)
	.uleb128 0xb	# (DW_AT_byte_size)
	.uleb128 0xb	# (DW_FORM_data1)
	.uleb128 0x1	# (DW_AT_sibling)
	.uleb128 0x13	# (DW_FORM_ref4)
d528 9
a536 9
	.uleb128 0x1b	# (abbrev code)
	.uleb128 0x2	# (TAG: DW_TAG_class_type)
	.byte	0x1	# DW_children_yes
	.uleb128 0x3	# (DW_AT_name)
	.uleb128 0x8	# (DW_FORM_string)
	.uleb128 0xb	# (DW_AT_byte_size)
	.uleb128 0xb	# (DW_FORM_data1)
	.uleb128 0x1	# (DW_AT_sibling)
	.uleb128 0x13	# (DW_FORM_ref4)
d540 9
a548 9
	.uleb128 0x1c	# (abbrev code)
	.uleb128 0x2e	# (TAG: DW_TAG_subprogram)
	.byte	0x1	# DW_children_yes
	.uleb128 0x3f	# (DW_AT_external)
	.uleb128 0xc	# (DW_FORM_flag)
	.uleb128 0x3	# (DW_AT_name)
	.uleb128 0x8	# (DW_FORM_string)
	.uleb128 0x3c	# (DW_AT_declaration)
	.uleb128 0xc	# (DW_FORM_flag)
d552 11
a562 11
	.uleb128 0x1d	# (abbrev code)
	.uleb128 0xd	# (TAG: DW_TAG_member)
	.byte	0x0	# DW_children_no
	.uleb128 0x3	# (DW_AT_name)
	.uleb128 0x8	# (DW_FORM_string)
	.uleb128 0x49	# (DW_AT_type)
	.uleb128 0x13	# (DW_FORM_ref4)
	.uleb128 0x38	# (DW_AT_data_member_location)
	.uleb128 0xd	# (DW_FORM_sdata)
	.uleb128 0x32	# (DW_AT_accessibility)
	.uleb128 0xb	# (DW_FORM_data1)
d566 13
a578 13
	.uleb128 0x1e	# (abbrev code)
	.uleb128 0x2e	# (TAG: DW_TAG_subprogram)
	.byte	0x1	# DW_children_yes
	.uleb128 0x3f	# (DW_AT_external)
	.uleb128 0xc	# (DW_FORM_flag)
	.uleb128 0x3	# (DW_AT_name)
	.uleb128 0x8	# (DW_FORM_string)
	.uleb128 0x34	# (DW_AT_artificial)
	.uleb128 0xc	# (DW_FORM_flag)
	.uleb128 0x3c	# (DW_AT_declaration)
	.uleb128 0xc	# (DW_FORM_flag)
	.uleb128 0x1	# (DW_AT_sibling)
	.uleb128 0x13	# (DW_FORM_ref4)
d582 11
a592 11
	.uleb128 0x1f	# (abbrev code)
	.uleb128 0x2e	# (TAG: DW_TAG_subprogram)
	.byte	0x1	# DW_children_yes
	.uleb128 0x3f	# (DW_AT_external)
	.uleb128 0xc	# (DW_FORM_flag)
	.uleb128 0x3	# (DW_AT_name)
	.uleb128 0x8	# (DW_FORM_string)
	.uleb128 0x34	# (DW_AT_artificial)
	.uleb128 0xc	# (DW_FORM_flag)
	.uleb128 0x3c	# (DW_AT_declaration)
	.uleb128 0xc	# (DW_FORM_flag)
d596 9
a604 9
	.uleb128 0x20	# (abbrev code)
	.uleb128 0x2	# (TAG: DW_TAG_class_type)
	.byte	0x1	# DW_children_yes
	.uleb128 0x47	# (DW_AT_specification)
	.uleb128 0x13	# (DW_FORM_ref4)
	.uleb128 0xb	# (DW_AT_byte_size)
	.uleb128 0xb	# (DW_FORM_data1)
	.uleb128 0x1	# (DW_AT_sibling)
	.uleb128 0x13	# (DW_FORM_ref4)
d608 13
a620 13
	.uleb128 0x21	# (abbrev code)
	.uleb128 0x2e	# (TAG: DW_TAG_subprogram)
	.byte	0x1	# DW_children_yes
	.uleb128 0x3f	# (DW_AT_external)
	.uleb128 0xc	# (DW_FORM_flag)
	.uleb128 0x3	# (DW_AT_name)
	.uleb128 0x8	# (DW_FORM_string)
	.uleb128 0x49	# (DW_AT_type)
	.uleb128 0x13	# (DW_FORM_ref4)
	.uleb128 0x3c	# (DW_AT_declaration)
	.uleb128 0xc	# (DW_FORM_flag)
	.uleb128 0x1	# (DW_AT_sibling)
	.uleb128 0x13	# (DW_FORM_ref4)
d624 7
a630 7
	.uleb128 0x22	# (abbrev code)
	.uleb128 0x10	# (TAG: DW_TAG_reference_type)
	.byte	0x0	# DW_children_no
	.uleb128 0xb	# (DW_AT_byte_size)
	.uleb128 0xb	# (DW_FORM_data1)
	.uleb128 0x49	# (DW_AT_type)
	.uleb128 0x13	# (DW_FORM_ref4)
d634 13
a646 13
	.uleb128 0x23	# (abbrev code)
	.uleb128 0x2e	# (TAG: DW_TAG_subprogram)
	.byte	0x0	# DW_children_no
	.uleb128 0x3f	# (DW_AT_external)
	.uleb128 0xc	# (DW_FORM_flag)
	.uleb128 0x3	# (DW_AT_name)
	.uleb128 0x8	# (DW_FORM_string)
	.uleb128 0x49	# (DW_AT_type)
	.uleb128 0x13	# (DW_FORM_ref4)
	.uleb128 0x3c	# (DW_AT_declaration)
	.uleb128 0xc	# (DW_FORM_flag)
	.uleb128 0x1	# (DW_AT_sibling)
	.uleb128 0x13	# (DW_FORM_ref4)
@


1.3
log
@gdb/testsuite/
	Fix s390x testcase compatibility.
	* gdb.dwarf2/dw2-double-set-die-type.S: Use .2byte, not .value.
@
text
@d3 1
a3 1
   Copyright 2010 Free Software Foundation, Inc.
@


1.2
log
@	* gdb.dwarf2/dw2-double-set-die-type.S: DIE 0x51f does not
	have any children. Create a new abbrev for it.
	Add missing terminal sequence to .debug_abbrev.
@
text
@d44 1
a44 1
	.value	0x3	# DWARF version number
@


1.1
log
@	PR symtab/11465:
	* gdb.dwarf2/pr11465.exp: New test.
	* gdb.dwarf2/pr11465.S: New file.
	* gdb.dwarf2/dw2-double-set-die-type.S: New file.
	* gdb.dwarf2/dw2-double-set-die-type.exp: New test.
@
text
@d285 1
a285 1
	.uleb128 0x21	# (DIE (0x51f) DW_TAG_subprogram)
d633 20
@

