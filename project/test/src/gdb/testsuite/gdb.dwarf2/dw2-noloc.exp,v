head	1.14;
access;
symbols
	gdb_7_6_1-2013-08-30-release:1.13
	gdb_7_6-2013-04-26-release:1.13
	gdb_7_6-branch:1.13.0.2
	gdb_7_6-2013-03-12-branchpoint:1.13
	gdb_7_5_1-2012-11-29-release:1.12
	gdb_7_5-2012-08-17-release:1.12
	gdb_7_5-branch:1.12.0.2
	gdb_7_5-2012-07-18-branchpoint:1.12
	gdb_7_4_1-2012-04-26-release:1.9.4.1
	gdb_7_4-2012-01-24-release:1.9.4.1
	gdb_7_4-branch:1.9.0.4
	gdb_7_4-2011-12-13-branchpoint:1.9
	gdb_7_3_1-2011-09-04-release:1.9
	gdb_7_3-2011-07-26-release:1.9
	gdb_7_3-branch:1.9.0.2
	gdb_7_3-2011-04-01-branchpoint:1.9
	gdb_7_2-2010-09-02-release:1.6
	gdb_7_2-branch:1.6.0.4
	gdb_7_2-2010-07-07-branchpoint:1.6
	gdb_7_1-2010-03-18-release:1.6
	gdb_7_1-branch:1.6.0.2
	gdb_7_1-2010-02-18-branchpoint:1.6
	gdb_7_0_1-2009-12-22-release:1.5
	gdb_7_0-2009-10-06-release:1.5
	gdb_7_0-branch:1.5.0.4
	gdb_7_0-2009-09-16-branchpoint:1.5
	arc-sim-20090309:1.3
	msnyder-checkpoint-072509-branch:1.5.0.2
	msnyder-checkpoint-072509-branchpoint:1.5
	arc-insight_6_8-branch:1.3.0.16
	arc-insight_6_8-branchpoint:1.3
	insight_6_8-branch:1.3.0.14
	insight_6_8-branchpoint:1.3
	reverse-20081226-branch:1.3.0.12
	reverse-20081226-branchpoint:1.3
	multiprocess-20081120-branch:1.3.0.10
	multiprocess-20081120-branchpoint:1.3
	reverse-20080930-branch:1.3.0.8
	reverse-20080930-branchpoint:1.3
	reverse-20080717-branch:1.3.0.6
	reverse-20080717-branchpoint:1.3
	msnyder-reverse-20080609-branch:1.3.0.4
	msnyder-reverse-20080609-branchpoint:1.3
	drow-reverse-20070409-branch:1.1.0.2
	drow-reverse-20070409-branchpoint:1.1
	gdb_6_8-2008-03-27-release:1.3
	gdb_6_8-branch:1.3.0.2
	gdb_6_8-2008-02-26-branchpoint:1.3
	gdb_6_7_1-2007-10-29-release:1.2
	gdb_6_7-2007-10-10-release:1.2
	gdb_6_7-branch:1.2.0.2
	gdb_6_7-2007-09-07-branchpoint:1.2;
locks; strict;
comment	@# @;


1.14
date	2013.03.15.01.41.28;	author qiyao;	state Exp;
branches;
next	1.13;

1.13
date	2013.01.01.06.41.22;	author brobecke;	state Exp;
branches;
next	1.12;

1.12
date	2012.02.21.22.01.09;	author palves;	state Exp;
branches;
next	1.11;

1.11
date	2012.02.21.21.55.39;	author palves;	state Exp;
branches;
next	1.10;

1.10
date	2012.01.04.08.17.51;	author brobecke;	state Exp;
branches;
next	1.9;

1.9
date	2011.01.25.16.26.22;	author palves;	state Exp;
branches
	1.9.4.1;
next	1.8;

1.8
date	2011.01.19.20.26.09;	author qiyao;	state Exp;
branches;
next	1.7;

1.7
date	2011.01.01.15.33.44;	author brobecke;	state Exp;
branches;
next	1.6;

1.6
date	2010.01.01.07.32.02;	author brobecke;	state Exp;
branches;
next	1.5;

1.5
date	2009.03.26.14.47.19;	author jkratoch;	state Exp;
branches;
next	1.4;

1.4
date	2009.01.03.05.58.04;	author brobecke;	state Exp;
branches;
next	1.3;

1.3
date	2008.01.01.22.53.19;	author drow;	state Exp;
branches;
next	1.2;

1.2
date	2007.08.23.18.14.17;	author brobecke;	state Exp;
branches;
next	1.1;

1.1
date	2007.03.29.19.03.56;	author brobecke;	state Exp;
branches;
next	;

1.9.4.1
date	2012.01.06.04.44.05;	author brobecke;	state Exp;
branches;
next	;


desc
@@


1.14
log
@gdb/testsuite/
	* gdb.threads/non-ldr-exc-1.exp (do_test): Fix the indent of
	using with_test_prefix.
	* gdb.threads/non-ldr-exc-2.exp (do_test): Likewise.
	* gdb.threads/non-ldr-exc-3.exp (do_test): Likewise.
	* gdb.threads/non-ldr-exc-4.exp (do_test): Likewise.
	* gdb.threads/watchpoint-fork.exp (test): Likewise.
	* gdb.base/break-interp.exp (test_core): Likewise.
	(test_attach_gdb): Likewise.
	* gdb.base/catch-load.exp (one_catch_load_test): Likewise.
	* gdb.base/disp-step-syscall.exp (disp_step_cross_syscall):
	Likewise.
	* gdb.base/jit-so.exp (one_jit_test): Likewise.
	* gdb.base/jit.exp (one_jit_test): Likewise.
	* gdb.base/sepdebug.exp (test_different_dir): Likewise.
	* gdb.dwarf2/dw2-dir-file-name.exp (test): Likewise.
	* gdb.dwarf2/dw2-noloc.exp (file_symbols): Likewise.
	* gdb.mi/mi-breakpoint-changed.exp (test_pending_resolved):
	Likewise.
	* gdb.mi/mi-cmd-param-changed.exp (test_command_param_changed):
	Likewise.
	* gdb.mi/mi-watch.exp test_watchpoint_all): Likewise.
	* gdb.mi/pr11022.exp (test_memory_changed_observer): Likewise.
	* gdb.trace/change-loc.exp (tracepoint_change_loc_1): Likewise.
	(tracepoint_change_loc_2): Likewise.
	* gdb.trace/disconnected-tracing.exp (disconnected_tracing):
	Likewise.
	(disconnected_tfind): Likewise.
	* gdb.trace/mi-traceframe-changed.exp (test_tfind_tfile):
	Likewise.
	(test_tfind_remote): Likewise.
	* gdb.trace/mi-tracepoint-changed.exp (test_reconnect):
	Likewise.
	(test_pending_resolved): Likewise.
	* gdb.trace/mi-tsv-changed.exp (test_create_delete_modify_tsv):
	Likewise.
	(test_upload_tsv): Likewise.
	* gdb.trace/pending.exp (pending_tracepoint_resolved):
	Likewise.
	(pending_tracepoint_works): Likewise.
	* gdb.trace/report.exp (use_collected_data): Likewise.
	* gdb.trace/status-stop.exp (test_tstart_tstop_tstart):
	Likewise.
	(test_tstart_tstart, test_buffer_full_tstart): Likewise.
	* gdb.trace/strace.exp (strace_info_marker): Likewise.
	(strace_trace_on_same_addr): Likewise.
	(strace_trace_on_diff_addr): Likewise.
	* gdb.trace/unavailable.exp (gdb_collect_args_test): Likewise.
	(gdb_collect_locals_test): Likewise.
	(gdb_unavailable_registers_test): Likewise.
	(gdb_collect_globals_test): Likewise.
@
text
@# Copyright 2007-2013 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
load_lib dwarf.exp

# This test can only be run on targets which support DWARF-2 and use gas.
if {![dwarf2_support]} {
    return 0  
}

if { [prepare_for_testing dw2-noloc.exp "dw2-noloc" {dw2-noloc-main.c dw2-noloc.S} {nodebug}] } {
    return -1
}

# Symbols have the form: {file,main}_loc{addr,empty,no}_{,un}resolvable
# file: Symbol DIE is placed in DW_TAG_compile_unit.
# main: Symbol DIE is placed in DW_TAG_subprogram.
# locaddr: DW_AT_location is using DW_FORM_block DW_OP_addr <addr>.
# locempty: DW_AT_location has zero DW_FORM_block size.
# locno: DW_AT_location is not present.
# resolvable: .symtab entry exists for this symbol name.
# unresolvable: .symtab entry does not exist for this symbol name.
# DW_AT_declaration is not present in any of these DIEs.

proc file_symbols {type} {
    with_test_prefix "$type" {

	global gdb_prompt

	gdb_test "print file_locaddr_resolvable" "= 1234567890"
	gdb_test "ptype file_locaddr_resolvable" "type = int"

	gdb_test "print file_locaddr_unresolvable" "= 1234567890"
	gdb_test "ptype file_locaddr_unresolvable" "type = int"

	gdb_test "print file_locempty_resolvable" "= <optimized out>"
	gdb_test "ptype file_locempty_resolvable" "type = int"

	gdb_test "print file_locempty_unresolvable" "= <optimized out>"
	gdb_test "ptype file_locempty_unresolvable" "type = int"

	gdb_test "print file_locno_resolvable" "= <optimized out>"
	gdb_test "ptype file_locno_resolvable" "type = int"

	gdb_test "print file_locno_unresolvable" "= <optimized out>"
	gdb_test "ptype file_locno_unresolvable" "type = int"

	gdb_test "print file_extern_locaddr_resolvable" "= 1234567890"
	gdb_test "ptype file_extern_locaddr_resolvable" "type = int"

	gdb_test "print file_extern_locaddr_unresolvable" "= 1234567890"
	gdb_test "ptype file_extern_locaddr_unresolvable" "type = int"

	gdb_test "print file_extern_locempty_resolvable" "= <optimized out>"
	gdb_test "ptype file_extern_locempty_resolvable" "type = int"

	gdb_test "print file_extern_locempty_unresolvable" "= <optimized out>"
	gdb_test "ptype file_extern_locempty_unresolvable" "type = int"

	gdb_test "print file_extern_locno_resolvable" "= 1234567890"
	gdb_test "ptype file_extern_locno_resolvable" "type = int"

	# `print file_extern_locno_unresolvable' currently prints
	# Address of symbol "file_extern_locno_unresolvable" is unknown.
	# As DW_AT_declaration is not present in this DIE
	# it should print <optimized out>.  As usefulness of such DIE is not
	# clear its resolution is not being tested.
    }
}

file_symbols no-run

if ![runto_main] {
    return -1
}

file_symbols in-main


gdb_test "print main_local_locaddr_resolvable" "= 1234567890"
gdb_test "ptype main_local_locaddr_resolvable" "type = int"

gdb_test "print main_local_locaddr_unresolvable" "= 1234567890"
gdb_test "ptype main_local_locaddr_unresolvable" "type = int"

gdb_test "print main_local_locempty_resolvable" "= <optimized out>"
gdb_test "ptype main_local_locempty_resolvable" "type = int"

gdb_test "print main_local_locempty_unresolvable" "= <optimized out>"
gdb_test "ptype main_local_locempty_unresolvable" "type = int"

gdb_test "print main_local_locno_resolvable" "= <optimized out>"
gdb_test "ptype main_local_locno_resolvable" "type = int"

gdb_test "print main_local_locno_unresolvable" "= <optimized out>"
gdb_test "ptype main_local_locno_unresolvable" "type = int"

gdb_test "print main_extern_locaddr_resolvable" "= 1234567890"
gdb_test "ptype main_extern_locaddr_resolvable" "type = int"

gdb_test "print main_extern_locaddr_unresolvable" "= 1234567890"
gdb_test "ptype main_extern_locaddr_unresolvable" "type = int"

gdb_test "print main_extern_locempty_resolvable" "= <optimized out>"
gdb_test "ptype main_extern_locempty_resolvable" "type = int"

gdb_test "print main_extern_locempty_unresolvable" "= <optimized out>"
gdb_test "ptype main_extern_locempty_unresolvable" "type = int"

gdb_test "print main_extern_locno_resolvable" "= 1234567890"
gdb_test "ptype main_extern_locno_resolvable" "type = int"

# For `main_extern_locno_unresolvable' see `file_extern_locno_unresolvable'.
@


1.13
log
@Update years in copyright notice for the GDB files.

Two modifications:
  1. The addition of 2013 to the copyright year range for every file;
  2. The use of a single year range, instead of potentially multiple
     year ranges, as approved by the FSF.
@
text
@d36 2
a37 1
proc file_symbols {type} { with_test_prefix "$type" {
d39 1
a39 1
    global gdb_prompt
d41 2
a42 2
    gdb_test "print file_locaddr_resolvable" "= 1234567890"
    gdb_test "ptype file_locaddr_resolvable" "type = int"
d44 2
a45 2
    gdb_test "print file_locaddr_unresolvable" "= 1234567890"
    gdb_test "ptype file_locaddr_unresolvable" "type = int"
d47 2
a48 2
    gdb_test "print file_locempty_resolvable" "= <optimized out>"
    gdb_test "ptype file_locempty_resolvable" "type = int"
d50 2
a51 2
    gdb_test "print file_locempty_unresolvable" "= <optimized out>"
    gdb_test "ptype file_locempty_unresolvable" "type = int"
d53 2
a54 2
    gdb_test "print file_locno_resolvable" "= <optimized out>"
    gdb_test "ptype file_locno_resolvable" "type = int"
d56 2
a57 2
    gdb_test "print file_locno_unresolvable" "= <optimized out>"
    gdb_test "ptype file_locno_unresolvable" "type = int"
d59 2
a60 2
    gdb_test "print file_extern_locaddr_resolvable" "= 1234567890"
    gdb_test "ptype file_extern_locaddr_resolvable" "type = int"
d62 2
a63 2
    gdb_test "print file_extern_locaddr_unresolvable" "= 1234567890"
    gdb_test "ptype file_extern_locaddr_unresolvable" "type = int"
d65 2
a66 2
    gdb_test "print file_extern_locempty_resolvable" "= <optimized out>"
    gdb_test "ptype file_extern_locempty_resolvable" "type = int"
d68 2
a69 2
    gdb_test "print file_extern_locempty_unresolvable" "= <optimized out>"
    gdb_test "ptype file_extern_locempty_unresolvable" "type = int"
d71 2
a72 2
    gdb_test "print file_extern_locno_resolvable" "= 1234567890"
    gdb_test "ptype file_extern_locno_resolvable" "type = int"
d74 7
a80 6
    # `print file_extern_locno_unresolvable' currently prints
    # Address of symbol "file_extern_locno_unresolvable" is unknown.
    # As DW_AT_declaration is not present in this DIE
    # it should print <optimized out>.  As usefulness of such DIE is not
    # clear its resolution is not being tested.
}}
@


1.12
log
@2012-02-21  Pedro Alves  <palves@@redhat.com>

	* gdb.arch/altivec-abi.exp (altivec_abi_tests): Don't do
	with_test_prefix here.
	(top level): Do it here instead.  Remove `:' from the
	with_test_prefix string.
	* gdb.base/attach-pie-misread.exp: Remove the leading space the
	the suffix `:' from the with_test_prefix prefix string.
	* gdb.base/break-interp.exp: Ditto.
	* gdb.base/catch-load.exp: Ditto.
	* gdb.base/disp-step-syscall.exp: Ditto.
	* gdb.base/jit-so.exp: Ditto.
	* gdb.base/jit.exp: Ditto.
	* gdb.base/sepdebug.exp: Ditto.
	* gdb.base/solib-display.exp: Ditto.
	* gdb.base/solib-overlap.exp: Ditto.
	* gdb.base/watch-cond-infcall.exp: Ditto.
	* gdb.base/watchpoint.exp: Ditto.
	* gdb.dwarf2/dw2-noloc.exp: Ditto.
	* gdb.mi/mi-watch.exp: Ditto.
	* gdb.mi/mi2-watch.exp: Ditto.
	* gdb.threads/non-ldr-exc-1.exp: Ditto.
	* gdb.threads/non-ldr-exc-2.exp: Ditto.
	* gdb.threads/non-ldr-exc-3.exp: Ditto.
	* gdb.threads/non-ldr-exc-4.exp: Ditto.
	* gdb.threads/watchpoint-fork.exp: Ditto.
	* gdb.threads/watchthreads-reorder.exp: Ditto.
	* gdb.trace/change-loc.exp: Ditto.
	* gdb.trace/pending.exp: Ditto.
	* gdb.trace/status-stop.exp: Ditto.
	* gdb.trace/strace.exp: Ditto.
	* gdb.trace/trace-break.exp: Ditto.
	* gdb.trace/unavailable.exp: Ditto.
	* lib/gdb.exp (with_test_prefix): Always prefix with space and
	suffix with colon.  Adjust leading comments.
@
text
@d1 1
a1 1
# Copyright 2007-2012 Free Software Foundation, Inc.
@


1.11
log
@2012-02-21  Pedro Alves  <palves@@redhat.com>
	    Tom Tromey  <tromey@@redhat.com>

	* lib/gdb.exp: Add description of test prefixes.
	(with_test_prefix): New procedure.
	* gdb.arch/altivec-abi.exp: Use with_test_prefix.
	* gdb.base/attach-pie-misread.exp: Use with_test_prefix.
	* gdb.base/break-interp.exp: Use with_test_prefix.  Use append
	instead of lappend to append to pf_prefix.
	* gdb.base/catch-load.exp: Use with_test_prefix.
	* gdb.base/disp-step-syscall.exp: Use with_test_prefix.
	* gdb.base/jit-so.exp: Use with_test_prefix.
	* gdb.base/jit.exp: Use with_test_prefix.
	* gdb.base/return-nodebug.exp (do_test): Use append instead of
	lappend to append to pf_prefix.
	* gdb.base/sepdebug.exp: Use with_test_prefix.
	* gdb.base/solib-display.exp: Use with_test_prefix.
	* gdb.base/solib-overlap.exp: Use with_test_prefix.
	* gdb.base/watch-cond-infcall.exp: Use with_test_prefix.
	* gdb.base/watchpoint.exp: Use with_test_prefix.
	* gdb.dwarf2/dw2-noloc.exp: Use with_test_prefix.
	* gdb.mi/mi-watch.exp: Use with_test_prefix.
	* gdb.mi/mi2-watch.exp: Use with_test_prefix.
	* gdb.threads/non-ldr-exc-1.exp: Use with_test_prefix.
	* gdb.threads/non-ldr-exc-2.exp: Use with_test_prefix.
	* gdb.threads/non-ldr-exc-3.exp: Use with_test_prefix.
	* gdb.threads/non-ldr-exc-4.exp: Use with_test_prefix.
	* gdb.threads/watchpoint-fork.exp: Use with_test_prefix.  Use
	append instead of lappend to append to pf_prefix.
	* gdb.threads/watchthreads-reorder.exp: Use with_test_prefix.
	* gdb.trace/change-loc.exp: Use with_test_prefix.
	* gdb.trace/pending.exp: Use with_test_prefix.
	* gdb.trace/status-stop.exp: Use with_test_prefix.
	* gdb.trace/strace.exp: Use with_test_prefix.
	* gdb.trace/trace-break.exp: Use with_test_prefix.
	* gdb.trace/unavailable.exp: Use with_test_prefix.  Use append
	instead of lappend to append to pf_prefix.
@
text
@d36 1
a36 1
proc file_symbols {type} { with_test_prefix " $type:" {
@


1.10
log
@Copyright year update in most files of the GDB Project.

gdb/ChangeLog:

        Copyright year update in most files of the GDB Project.
@
text
@d36 1
a36 4
proc file_symbols {type} {
    global pf_prefix
    set old_prefix $pf_prefix
    lappend pf_prefix "$type:"
d78 1
a78 3

    set pf_prefix $old_prefix
}
@


1.9
log
@	Centralize printing "<optimized out>".

	gdb/
	* valprint.h (val_print_optimized_out): Declare.
	* cp-valprint.c (cp_print_value_fields): Use
	val_print_optimized_out.
	* jv-valprint.c (java_print_value_fields): Ditto.
	* p-valprint.c (pascal_object_print_value_fields): Ditto.
	* printcmd.c (print_formatted): Ditto.
	* valprint.c (valprint_check_validity): Ditto.
	(value_check_printable): Ditto.
	(val_print_optimized_out): New.

	gdb/doc/
	* gdb.texinfo: s/value optimized out/optimized out/g

	gdb/testsuite/
	* gdb.base/frame-args.exp: Adjust.
	* gdb.dwarf2/dw2-noloc.exp: Adjust.
	* gdb.dwarf2/dw2-inline-param.exp: Adjust.
	* gdb.dwarf2/pieces.exp: Adjust.
	* gdb.opt/clobbered-registers-O2.exp: Adjust.
	* gdb.opt/inline-locals.exp: Adjust.
	* gdb.threads/fork-child-threads.exp: Adjust.
@
text
@d1 1
a1 1
# Copyright 2007, 2008, 2009, 2010, 2011 Free Software Foundation, Inc.
@


1.9.4.1
log
@Copyright year update in most files of the GDB Project.

gdb/ChangeLog:

        Copyright year update in most files of the GDB Project.
@
text
@d1 1
a1 1
# Copyright 2007-2012 Free Software Foundation, Inc.
@


1.8
log
@2011-01-19  Yao Qi  <yao@@codesourcery.com>

	* gdb.asm/asm-source.exp: Replace ARM target triplet with a
	canonical form.
	Remove "xscale-*-*"
	* gdb.xml/tdesc-regs.exp: Likewise.
	* gdb.python/py-section-script.exp: Replace ARM target triplet
	with canonical form.
	Match arm*-*-symbianelf*.
	* gdb.base/dup-sect.exp: Likewise.
	* lib/dwarf.exp: New.
	* gdb.dwarf2/callframecfa.exp: Check dwarf2 support by routine
	dwarf2_support.
	* gdb.dwarf2/dup-psym.exp: Likewise.
	* gdb.dwarf2/dw2-ada-ffffffff.exp: Likewise.
	* gdb.dwarf2/dw2-anonymous-func.exp: Likewise.
	* gdb.dwarf2/dw2-bad-parameter-type.exp: Likewise.
	* gdb.dwarf2/dw2-basic.exp: Likewise.
	* gdb.dwarf2/dw2-compressed.exp: Likewise.
	* gdb.dwarf2/dw2-const.exp: Likewise.
	* gdb.dwarf2/dw2-cp-infcall-ref-static.exp: Likewise.
	* gdb.dwarf2/dw2-cu-size.exp: Likewise.
	* gdb.dwarf2/dw2-double-set-die-type.exp: Likewise.
	* gdb.dwarf2/dw2-empty-namespace.exp: Likewise.
	* gdb.dwarf2/dw2-filename.exp: Likewise.
	* gdb.dwarf2/dw2-inheritance.exp: Likewise.
	* gdb.dwarf2/dw2-inline-param.exp: Likewise.
	* gdb.dwarf2/dw2-intercu.exp: Likewise.
	* gdb.dwarf2/dw2-intermix.exp: Likewise.
	* gdb.dwarf2/dw2-modula2-self-type.exp: Likewise.
	* gdb.dwarf2/dw2-noloc.exp: Likewise.
	* gdb.dwarf2/dw2-op-call.exp: Likewise.
	* gdb.dwarf2/dw2-producer.exp: Likewise.
	* gdb.dwarf2/dw2-ranges.exp: Likewise.
	* gdb.dwarf2/dw2-ref-missing-frame.exp: Likewise.
	* gdb.dwarf2/dw2-stack-boundary.exp: Likewise.
	* gdb.dwarf2/dw2-strp.exp: Likewise.
	* gdb.dwarf2/dw2-unresolved.exp: Likewise.
	* gdb.dwarf2/implptr.exp: Likewise.
	* gdb.dwarf2/mac-fileno.exp: Likewise.
	* gdb.dwarf2/member-ptr-forwardref.exp: Likewise.
	* gdb.dwarf2/pieces.exp: Likewise.
	* gdb.dwarf2/pr11465.exp: Likewise.
	* gdb.dwarf2/valop.exp: Likewise.
	* gdb.dwarf2/watch-notconst.exp: Likewise.
	* gdb.mi/dw2-ref-missing-frame.exp: Likewise.
@
text
@d49 1
a49 1
    gdb_test "print file_locempty_resolvable" "= <value optimized out>"
d52 1
a52 1
    gdb_test "print file_locempty_unresolvable" "= <value optimized out>"
d55 1
a55 1
    gdb_test "print file_locno_resolvable" "= <value optimized out>"
d58 1
a58 1
    gdb_test "print file_locno_unresolvable" "= <value optimized out>"
d67 1
a67 1
    gdb_test "print file_extern_locempty_resolvable" "= <value optimized out>"
d70 1
a70 1
    gdb_test "print file_extern_locempty_unresolvable" "= <value optimized out>"
d79 1
a79 1
    # it should print <value optimized out>.  As usefulness of such DIE is not
d100 1
a100 1
gdb_test "print main_local_locempty_resolvable" "= <value optimized out>"
d103 1
a103 1
gdb_test "print main_local_locempty_unresolvable" "= <value optimized out>"
d106 1
a106 1
gdb_test "print main_local_locno_resolvable" "= <value optimized out>"
d109 1
a109 1
gdb_test "print main_local_locno_unresolvable" "= <value optimized out>"
d118 1
a118 1
gdb_test "print main_extern_locempty_resolvable" "= <value optimized out>"
d121 1
a121 1
gdb_test "print main_extern_locempty_unresolvable" "= <value optimized out>"
@


1.7
log
@run copyright.sh for 2011.
@
text
@d15 1
d18 1
a18 7
# For now pick a sampling of likely targets.
if {![istarget *-*-linux*]
    && ![istarget *-*-gnu*]
    && ![istarget *-*-elf*]
    && ![istarget *-*-openbsd*]
    && ![istarget arm-*-eabi*]
    && ![istarget powerpc-*-eabi*]} {
@


1.6
log
@Update copyright year in most headers.

Automatic update by copyright.sh.
@
text
@d1 1
a1 1
# Copyright 2007, 2008, 2009, 2010 Free Software Foundation, Inc.
@


1.5
log
@gdb/
	Recognize missing DW_AT_location as <value optimized out>.
	* dwarf2read.c
	(new_symbol <DW_TAG_variable> <!DW_AT_location> <!DW_AT_external>):
	Call add_symbol_to_list.

gdb/testsuite/
	* gdb.dwarf2/dw2-noloc-main.c: New file.
	* gdb.dwarf2/dw2-noloc.S: New symbols matrix.
	(.text): Remove.
	(.data): New.
	(DW_AT_stmt_list, .debug_line, DW_AT_frame_base): Remove.
	(DW_AT_low_pc, DW_AT_high_pc): Reference `dw2-noloc-main.c'.
	(DW_TAG_subprogram func_cu1, noloc): Remove.
	(main): New.
	* gdb.dwarf2/dw2-noloc.exp: Use prepare_for_testing, compile also
	`dw2-noloc-main.c'.  Test the new DIEs from `dw2-noloc.S'.
	(file_symbols): New procedure.
@
text
@d1 1
a1 1
# Copyright 2007, 2008, 2009 Free Software Foundation, Inc.
@


1.4
log
@        Updated copyright notices for most files.
@
text
@d27 1
a27 5
set testfile "dw2-noloc"
set srcfile ${testfile}.S
set binfile ${objdir}/${subdir}/${testfile}.x

if  { [gdb_compile "${srcdir}/${subdir}/main.c" "main.o" object {debug}] != "" } {
d31 57
a87 2
if  { [gdb_compile "${srcdir}/${subdir}/${srcfile}" "${testfile}.o" object {nodebug}] != "" } {
    return -1
d90 3
a92 1
if  { [gdb_compile "${testfile}.o main.o" "${binfile}" executable {debug}] != "" } {
d96 35
a130 4
gdb_exit
gdb_start
gdb_reinitialize_dir $srcdir/$subdir
gdb_load ${binfile}
d132 1
a132 1
gdb_test "print noloc" "Address of symbol \"noloc\" is unknown." "print noloc"
@


1.3
log
@	Updated copyright notices for most files.
@
text
@d1 1
a1 1
# Copyright 2007, 2008 Free Software Foundation, Inc.
@


1.2
log
@        Switch the license of all .exp files to GPLv3.
        Switch the license of all .f and .f90 files to GPLv3.
        Switch the license of all .s and .S files to GPLv3.
@
text
@d1 1
a1 1
# Copyright 2007 Free Software Foundation, Inc.
@


1.1
log
@        * gdb.dwarf2/dw2-noloc.S: New file.
        * gdb.dwarf2/dw2-noloc.exp: New file.
@
text
@d5 1
a5 1
# the Free Software Foundation; either version 2 of the License, or
d7 1
a7 1
# 
d12 1
a12 1
# 
d14 1
a14 2
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
@

