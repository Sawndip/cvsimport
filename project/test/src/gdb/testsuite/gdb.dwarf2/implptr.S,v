head	1.2;
access;
symbols
	gdb_7_6_1-2013-08-30-release:1.2
	gdb_7_6-2013-04-26-release:1.2
	gdb_7_6-branch:1.2.0.6
	gdb_7_6-2013-03-12-branchpoint:1.2
	gdb_7_5_1-2012-11-29-release:1.2
	gdb_7_5-2012-08-17-release:1.2
	gdb_7_5-branch:1.2.0.4
	gdb_7_5-2012-07-18-branchpoint:1.2
	gdb_7_4_1-2012-04-26-release:1.2
	gdb_7_4-2012-01-24-release:1.2
	gdb_7_4-branch:1.2.0.2
	gdb_7_4-2011-12-13-branchpoint:1.2
	gdb_7_3_1-2011-09-04-release:1.1
	gdb_7_3-2011-07-26-release:1.1
	gdb_7_3-branch:1.1.0.2
	gdb_7_3-2011-04-01-branchpoint:1.1;
locks; strict;
comment	@# @;


1.2
date	2011.07.19.20.25.14;	author jkratoch;	state Exp;
branches;
next	1.1;

1.1
date	2010.11.29.21.18.16;	author tromey;	state Exp;
branches;
next	;


desc
@@


1.2
log
@gdb/
	* dwarf2loc.c (indirect_pieced_value): Use check_typedef for VALUE's
	type.

gdb/testsuite/
	* gdb.dwarf2/implptr.S: Rebuilt.
	* gdb.dwarf2/implptr.c (intp, intpp, intppp): New typedefs.
	(bar): Use them for j, k, l.
	* gdb.dwarf2/implptr.exp: New variable opts.  Support runtest parameter
	COMPILE.
	(print j in implptr:bar): Update for the intp typedef.
	(print p[0].x in implptr:foo): Use more exact regex.
@
text
@	.file	"implptr.c"
	.text
.Ltext0:
	.p2align 4,,15
	.globl	foo
	.type	foo, @@function
foo:
.LFB1:
	.file 1 "gdb.dwarf2/implptr.c"
	.loc 1 45 0
	.cfi_startproc
.LVL0:
	.loc 1 45 0
	movl	4(%esp), %eax
.LVL1:
.LBB6:
.LBB7:
	.loc 1 36 0
	addl	$1, u
.LVL2:
	.loc 1 38 0
	addl	$1, u+4
.LVL3:
	.loc 1 40 0
	addl	$1, u+8
.LVL4:
.LBE7:
.LBE6:
.LBB8:
.LBB9:
	.loc 1 36 0
	addl	$1, u+12
.LVL5:
	.loc 1 38 0
	addl	$1, u+16
.LVL6:
	.loc 1 40 0
	addl	$1, u+20
.LBE9:
.LBE8:
	.loc 1 52 0
	leal	(%eax,%eax,4), %eax
	.loc 1 53 0
	ret
	.cfi_endproc
.LFE1:
	.size	foo, .-foo
	.p2align 4,,15
	.globl	bar
	.type	bar, @@function
bar:
.LFB2:
	.loc 1 61 0
	.cfi_startproc
.LVL7:
	.loc 1 65 0
	movl	4(%esp), %eax
	addl	$1, %eax
	.loc 1 67 0
	ret
	.cfi_endproc
.LFE2:
	.size	bar, .-bar
	.section	.text.startup,"ax",@@progbits
	.p2align 4,,15
	.globl	main
	.type	main, @@function
main:
.LFB3:
	.loc 1 70 0
	.cfi_startproc
	pushl	%ebx
	.cfi_def_cfa_offset 8
	.cfi_offset 3, -8
	subl	$4, %esp
	.cfi_def_cfa_offset 12
	.loc 1 71 0
	movl	$5, (%esp)
	call	bar
.LVL8:
	movl	$23, (%esp)
	movl	%eax, %ebx
	call	foo
.LVL9:
	.loc 1 72 0
	addl	$4, %esp
	.cfi_def_cfa_offset 8
	.loc 1 71 0
	addl	%ebx, %eax
	.loc 1 72 0
	popl	%ebx
	.cfi_def_cfa_offset 4
	.cfi_restore 3
	ret
	.cfi_endproc
.LFE3:
	.size	main, .-main
	.comm	u,24,4
	.text
.Letext0:
	.section	.debug_info,"",@@progbits
.Ldebug_info0:
	.long	0x217
	.value	0x4
	.long	.Ldebug_abbrev0
	.byte	0x4
	.uleb128 0x1
	.long	.LASF4
	.byte	0x1
	.long	.LASF5
	.long	.LASF6
	.long	.Ldebug_ranges0+0
	.long	0
	.long	.Ldebug_line0
	.uleb128 0x2
	.string	"S"
	.byte	0x8
	.byte	0x1
	.byte	0x18
	.long	0x44
	.uleb128 0x3
	.string	"x"
	.byte	0x1
	.byte	0x1a
	.long	0x44
	.byte	0
	.uleb128 0x3
	.string	"y"
	.byte	0x1
	.byte	0x1a
	.long	0x4a
	.byte	0x4
	.byte	0
	.uleb128 0x4
	.byte	0x4
	.long	0x4a
	.uleb128 0x5
	.byte	0x4
	.byte	0x5
	.string	"int"
	.uleb128 0x6
	.long	.LASF0
	.byte	0x1
	.byte	0x37
	.long	0x44
	.uleb128 0x6
	.long	.LASF1
	.byte	0x1
	.byte	0x38
	.long	0x67
	.uleb128 0x4
	.byte	0x4
	.long	0x51
	.uleb128 0x6
	.long	.LASF2
	.byte	0x1
	.byte	0x39
	.long	0x78
	.uleb128 0x4
	.byte	0x4
	.long	0x5c
	.uleb128 0x7
	.string	"add"
	.byte	0x1
	.byte	0x20
	.byte	0x3
	.long	0xa6
	.uleb128 0x8
	.string	"a"
	.byte	0x1
	.byte	0x20
	.long	0xa6
	.uleb128 0x8
	.string	"b"
	.byte	0x1
	.byte	0x20
	.long	0xa6
	.uleb128 0x8
	.string	"c"
	.byte	0x1
	.byte	0x20
	.long	0x4a
	.byte	0
	.uleb128 0x4
	.byte	0x4
	.long	0x25
	.uleb128 0x9
	.string	"foo"
	.byte	0x1
	.byte	0x2c
	.long	0x4a
	.long	.LFB1
	.long	.LFE1
	.uleb128 0x1
	.byte	0x9c
	.long	0x147
	.uleb128 0xa
	.string	"i"
	.byte	0x1
	.byte	0x2c
	.long	0x4a
	.long	.LLST0
	.uleb128 0xb
	.string	"j"
	.byte	0x1
	.byte	0x2e
	.long	0x4a
	.long	.LLST1
	.uleb128 0xb
	.string	"p"
	.byte	0x1
	.byte	0x2f
	.long	0x147
	.long	.LLST2
	.uleb128 0xc
	.long	0x7e
	.long	.LBB6
	.long	.LBE6
	.byte	0x1
	.byte	0x30
	.long	0x11b
	.uleb128 0xd
	.long	0x9c
	.byte	0
	.uleb128 0xe
	.long	0x93
	.uleb128 0x6
	.byte	0xf2
	.long	.Ldebug_info0+223
	.sleb128 8
	.uleb128 0xf
	.long	0x8a
	.long	.LLST3
	.byte	0
	.uleb128 0x10
	.long	0x7e
	.long	.LBB8
	.long	.LBE8
	.byte	0x1
	.byte	0x33
	.uleb128 0xd
	.long	0x9c
	.byte	0x3
	.uleb128 0xe
	.long	0x93
	.uleb128 0x6
	.byte	0xf2
	.long	.Ldebug_info0+223
	.sleb128 8
	.uleb128 0xf
	.long	0x8a
	.long	.LLST4
	.byte	0
	.byte	0
	.uleb128 0x11
	.long	0x25
	.long	0x157
	.uleb128 0x12
	.long	0x157
	.byte	0x1
	.byte	0
	.uleb128 0x13
	.byte	0x4
	.byte	0x7
	.long	.LASF3
	.uleb128 0x9
	.string	"bar"
	.byte	0x1
	.byte	0x3c
	.long	0x4a
	.long	.LFB2
	.long	.LFE2
	.uleb128 0x1
	.byte	0x9c
	.long	0x1b4
	.uleb128 0x14
	.string	"i"
	.byte	0x1
	.byte	0x3c
	.long	0x4a
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x15
	.string	"j"
	.byte	0x1
	.byte	0x3e
	.long	0x51
	.uleb128 0x6
	.byte	0xf2
	.long	.Ldebug_info0+375
	.sleb128 0
	.uleb128 0x15
	.string	"k"
	.byte	0x1
	.byte	0x3f
	.long	0x5c
	.uleb128 0x6
	.byte	0xf2
	.long	.Ldebug_info0+387
	.sleb128 0
	.uleb128 0x15
	.string	"l"
	.byte	0x1
	.byte	0x40
	.long	0x6d
	.uleb128 0x6
	.byte	0xf2
	.long	.Ldebug_info0+403
	.sleb128 0
	.byte	0
	.uleb128 0x16
	.long	.LASF7
	.byte	0x1
	.byte	0x45
	.long	0x4a
	.long	.LFB3
	.long	.LFE3
	.uleb128 0x1
	.byte	0x9c
	.long	0x1f2
	.uleb128 0x17
	.long	.LVL8
	.long	0x15e
	.long	0x1e1
	.uleb128 0x18
	.uleb128 0x2
	.byte	0x74
	.sleb128 0
	.uleb128 0x1
	.byte	0x35
	.byte	0
	.uleb128 0x19
	.long	.LVL9
	.long	0xac
	.uleb128 0x18
	.uleb128 0x2
	.byte	0x74
	.sleb128 0
	.uleb128 0x1
	.byte	0x47
	.byte	0
	.byte	0
	.uleb128 0x11
	.long	0x4a
	.long	0x202
	.uleb128 0x12
	.long	0x157
	.byte	0x5
	.byte	0
	.uleb128 0x1a
	.string	"u"
	.byte	0x1
	.byte	0x1d
	.long	0x1f2
	.uleb128 0x1b
	.string	"u"
	.byte	0x1
	.byte	0x1d
	.long	0x1f2
	.uleb128 0x5
	.byte	0x3
	.long	u
	.byte	0
	.section	.debug_abbrev,"",@@progbits
.Ldebug_abbrev0:
	.uleb128 0x1
	.uleb128 0x11
	.byte	0x1
	.uleb128 0x25
	.uleb128 0xe
	.uleb128 0x13
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x1b
	.uleb128 0xe
	.uleb128 0x55
	.uleb128 0x17
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x10
	.uleb128 0x17
	.byte	0
	.byte	0
	.uleb128 0x2
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x3
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x4
	.uleb128 0xf
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x5
	.uleb128 0x24
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0x8
	.byte	0
	.byte	0
	.uleb128 0x6
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x7
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x20
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x8
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x9
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x1
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xa
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x17
	.byte	0
	.byte	0
	.uleb128 0xb
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x17
	.byte	0
	.byte	0
	.uleb128 0xc
	.uleb128 0x1d
	.byte	0x1
	.uleb128 0x31
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x1
	.uleb128 0x58
	.uleb128 0xb
	.uleb128 0x59
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xd
	.uleb128 0x5
	.byte	0
	.uleb128 0x31
	.uleb128 0x13
	.uleb128 0x1c
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0xe
	.uleb128 0x5
	.byte	0
	.uleb128 0x31
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0xf
	.uleb128 0x5
	.byte	0
	.uleb128 0x31
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x17
	.byte	0
	.byte	0
	.uleb128 0x10
	.uleb128 0x1d
	.byte	0x1
	.uleb128 0x31
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x1
	.uleb128 0x58
	.uleb128 0xb
	.uleb128 0x59
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x11
	.uleb128 0x1
	.byte	0x1
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x12
	.uleb128 0x21
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2f
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x13
	.uleb128 0x24
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0xe
	.byte	0
	.byte	0
	.uleb128 0x14
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x15
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x16
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x1
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x17
	.uleb128 0x4109
	.byte	0x1
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x31
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x18
	.uleb128 0x410a
	.byte	0
	.uleb128 0x2
	.uleb128 0x18
	.uleb128 0x2111
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x19
	.uleb128 0x4109
	.byte	0x1
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x31
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1a
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x1b
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.byte	0
	.section	.debug_loc,"",@@progbits
.Ldebug_loc0:
.LLST0:
	.long	.LVL0
	.long	.LVL1
	.value	0x2
	.byte	0x91
	.sleb128 0
	.long	.LVL1
	.long	.LFE1
	.value	0x6
	.byte	0x91
	.sleb128 0
	.byte	0x6
	.byte	0x31
	.byte	0x24
	.byte	0x9f
	.long	0
	.long	0
.LLST1:
	.long	.LVL1
	.long	.LVL4
	.value	0x2
	.byte	0x91
	.sleb128 0
	.long	.LVL4
	.long	.LFE1
	.value	0x6
	.byte	0x91
	.sleb128 0
	.byte	0x6
	.byte	0x33
	.byte	0x1e
	.byte	0x9f
	.long	0
	.long	0
.LLST2:
	.long	.LVL1
	.long	.LVL4
	.value	0x20
	.byte	0xf2
	.long	.Ldebug_info0+197
	.sleb128 0
	.byte	0x93
	.uleb128 0x4
	.byte	0x91
	.sleb128 0
	.byte	0x6
	.byte	0x32
	.byte	0x24
	.byte	0x9f
	.byte	0x93
	.uleb128 0x4
	.byte	0xf2
	.long	.Ldebug_info0+210
	.sleb128 0
	.byte	0x93
	.uleb128 0x4
	.byte	0x91
	.sleb128 0
	.byte	0x6
	.byte	0x31
	.byte	0x24
	.byte	0x9f
	.byte	0x93
	.uleb128 0x4
	.long	.LVL4
	.long	.LFE1
	.value	0x20
	.byte	0xf2
	.long	.Ldebug_info0+210
	.sleb128 0
	.byte	0x93
	.uleb128 0x4
	.byte	0x91
	.sleb128 0
	.byte	0x6
	.byte	0x36
	.byte	0x1e
	.byte	0x9f
	.byte	0x93
	.uleb128 0x4
	.byte	0xf2
	.long	.Ldebug_info0+197
	.sleb128 0
	.byte	0x93
	.uleb128 0x4
	.byte	0x91
	.sleb128 0
	.byte	0x6
	.byte	0x31
	.byte	0x24
	.byte	0x9f
	.byte	0x93
	.uleb128 0x4
	.long	0
	.long	0
.LLST3:
	.long	.LVL1
	.long	.LVL2
	.value	0x6
	.byte	0xf2
	.long	.Ldebug_info0+223
	.sleb128 0
	.long	.LVL2
	.long	.LVL3
	.value	0x2
	.byte	0x30
	.byte	0x9f
	.long	.LVL3
	.long	.LFE1
	.value	0x6
	.byte	0xf2
	.long	.Ldebug_info0+223
	.sleb128 8
	.long	0
	.long	0
.LLST4:
	.long	.LVL4
	.long	.LVL5
	.value	0x6
	.byte	0xf2
	.long	.Ldebug_info0+223
	.sleb128 0
	.long	.LVL5
	.long	.LVL6
	.value	0x2
	.byte	0x30
	.byte	0x9f
	.long	.LVL6
	.long	.LFE1
	.value	0x6
	.byte	0xf2
	.long	.Ldebug_info0+223
	.sleb128 8
	.long	0
	.long	0
	.section	.debug_aranges,"",@@progbits
	.long	0x24
	.value	0x2
	.long	.Ldebug_info0
	.byte	0x4
	.byte	0
	.value	0
	.value	0
	.long	.Ltext0
	.long	.Letext0-.Ltext0
	.long	.LFB3
	.long	.LFE3-.LFB3
	.long	0
	.long	0
	.section	.debug_ranges,"",@@progbits
.Ldebug_ranges0:
	.long	.Ltext0
	.long	.Letext0
	.long	.LFB3
	.long	.LFE3
	.long	0
	.long	0
	.section	.debug_line,"",@@progbits
.Ldebug_line0:
	.section	.debug_str,"MS",@@progbits,1
.LASF5:
	.string	"gdb.dwarf2/implptr.c"
.LASF6:
	.string	""
.LASF3:
	.string	"unsigned int"
.LASF7:
	.string	"main"
.LASF2:
	.string	"intppp"
.LASF4:
	.string	"GNU C 4.6.1 20110627 (Red Hat 4.6.1-1)"
.LASF0:
	.string	"intp"
.LASF1:
	.string	"intpp"
	.ident	"GCC: (GNU) 4.6.1 20110627 (Red Hat 4.6.1-1)"
	.section	.note.GNU-stack,"",@@progbits
@


1.1
log
@gdb
	* opencl-lang.c (lval_func_check_synthetic_pointer): New
	function.
	* value.h (struct lval_funcs) <indirect, check_synthetic_pointer>:
	New fields.
	(value_bits_synthetic_pointer): Declare.
	* value.c (value_bits_synthetic_pointer): New function.
	* valprint.c (valprint_check_validity): Handle synthetic
	pointers.
	* valops.c (value_ind): Use new 'indirect' lval_funcs method.
	* valarith.c (value_ptradd): Use set_value_component_location.
	* p-valprint.c (pascal_object_print_value_fields): Handle
	synthetic pointers.
	* jv-valprint.c (java_print_value_fields): Handle synthetic
	pointers.
	* dwarf2read.c (dwarf_stack_op_name): Add
	DW_OP_GNU_implicit_pointer.
	(dwarf2_fetch_die_location_block): Add get_frame_pc, baton
	arguments.  Handle location lists.
	(fill_in_loclist_baton): New function.
	(dwarf2_symbol_mark_computed): Use it.
	* dwarf2loc.h (dwarf2_find_location_expression): Declare.
	(dwarf2_fetch_die_location_block): Add get_frame_pc, baton
	arguments.
	* dwarf2loc.c (dwarf2_find_location_expression): Rename from
	find_location_expression.  No longer static.  Update all callers.
	(dwarf_expr_frame_pc): New function.
	(per_cu_dwarf_call): Add get_frame_pc, baton arguments.  Update
	all callers.
	(struct piece_closure) <per_cu>: New field.
	(allocate_piece_closure): Add per_cu argument.
	(read_pieced_value): Handle DWARF_VALUE_IMPLICIT_POINTER.
	(check_pieced_value_bits): Remove validity argument, add check_for
	argument.  Handle DWARF_VALUE_IMPLICIT_POINTER.
	(check_pieced_value_validity, check_pieced_value_invalid):
	Update.
	(check_pieced_synthetic_pointer): New function.
	(get_frame_address_in_block_wrapper): New function.
	(indirect_pieced_value): New function.
	(pieced_value_funcs): Update.
	(invalid_synthetic_pointer): New function.
	(dwarf2_evaluate_loc_desc_full): Rename from
	dwarf2_evaluate_loc_desc.  Add byte_offset argument.
	(dwarf2_evaluate_loc_desc): Rewrite.
	(dwarf2_loc_desc_needs_frame): Set new field on context.
	(get_ax_pc): New function.
	(disassemble_dwarf_expression): Handle
	DW_OP_GNU_implicit_pointer.
	* dwarf2expr.h (enum dwarf_value_location)
	<DWARF_VALUE_IMPLICIT_POINTER>: New constant.
	(struct dwarf_expr_context) <get_frame_pc>: New field.
	(struct dwarf_expr_piece) <v.ptr>: New field.
	* dwarf2expr.c (add_piece): Handle DWARF_VALUE_IMPLICIT_POINTER.
	(execute_stack_op): Handle DW_OP_GNU_implicit_pointer.
	* dwarf2-frame.c (no_get_frame_pc): New function.
	(execute_stack_op): Set new field on context.
	* cp-valprint.c (cp_print_value_fields): Handle synthetic
	pointers.
gdb/testsuite
	* gdb.dwarf2/implptr.exp: New file.
	* gdb.dwarf2/implptr.c: New file.
	* gdb.dwarf2/implptr.S: New file.
@
text
@d9 1
a9 1
	.file 1 "implptr.c"
d53 1
a53 1
	.loc 1 57 0
d56 1
a56 1
	.loc 1 61 0
d59 1
a59 1
	.loc 1 63 0
d64 1
d70 1
a70 1
	.loc 1 66 0
d77 1
a77 1
	.loc 1 67 0
d80 1
d84 2
a85 1
	.loc 1 68 0
d88 1
a88 1
	.loc 1 67 0
d90 1
a90 1
	.loc 1 68 0
d99 1
d101 3
a103 2
	.section	.debug_types,"G",@@progbits,wt.ade46b36db7edab6,comdat
	.long	0x46
a106 9
	.byte	0xad
	.byte	0xe4
	.byte	0x6b
	.byte	0x36
	.byte	0xdb
	.byte	0x7e
	.byte	0xda
	.byte	0xb6
	.long	0x1d
d108 1
d110 4
d120 1
a120 1
	.long	0x3c
d125 1
a125 1
	.long	0x3c
d131 1
a131 1
	.long	0x42
d136 1
a136 1
	.long	0x42
d141 5
a145 7
	.byte	0
	.section	.debug_info,"",@@progbits
.Ldebug_info0:
	.long	0x1b6
	.value	0x4
	.long	.Ldebug_abbrev0
	.byte	0x4
d149 6
d156 3
a158 4
	.long	.LASF3
	.long	.Ltext0
	.long	.Letext0
	.long	.Ldebug_line0
d161 1
a161 5
	.long	0x2b
	.uleb128 0x5
	.byte	0x4
	.byte	0x5
	.string	"int"
d167 1
a167 1
	.long	0x5a
d172 1
a172 1
	.long	0x5a
d177 1
a177 1
	.long	0x5a
d182 1
a182 1
	.long	0x2b
d184 3
a187 10
	.byte	0x4
	.byte	0xad
	.byte	0xe4
	.byte	0x6b
	.byte	0x36
	.byte	0xdb
	.byte	0x7e
	.byte	0xda
	.byte	0xb6
	.uleb128 0xa
d191 1
a191 1
	.long	0x2b
d196 2
a197 2
	.long	0xff
	.uleb128 0xb
d201 1
a201 1
	.long	0x2b
d203 1
a203 1
	.uleb128 0xc
d207 1
a207 1
	.long	0x2b
d209 1
a209 1
	.uleb128 0xc
d213 1
a213 1
	.long	0xff
d215 2
a216 2
	.uleb128 0xd
	.long	0x32
d221 4
a224 1
	.long	0xd3
d226 1
a226 4
	.long	0x50
	.byte	0
	.uleb128 0xf
	.long	0x47
d229 1
a229 1
	.long	.Ldebug_info0+151
d231 2
a232 2
	.uleb128 0x10
	.long	0x3e
d235 2
a236 2
	.uleb128 0x11
	.long	0x32
d241 3
d245 1
a245 4
	.long	0x50
	.byte	0x3
	.uleb128 0xf
	.long	0x47
d248 1
a248 1
	.long	.Ldebug_info0+151
d250 2
a251 2
	.uleb128 0x10
	.long	0x3e
d255 3
d259 1
a259 11
	.byte	0xad
	.byte	0xe4
	.byte	0x6b
	.byte	0x36
	.byte	0xdb
	.byte	0x7e
	.byte	0xda
	.byte	0xb6
	.long	0x113
	.uleb128 0x13
	.long	0x113
d262 1
a262 1
	.uleb128 0x14
d265 2
a266 2
	.long	.LASF0
	.uleb128 0xa
d269 2
a270 2
	.byte	0x38
	.long	0x2b
d275 2
a276 2
	.long	0x170
	.uleb128 0x15
d279 2
a280 2
	.byte	0x38
	.long	0x2b
d284 1
a284 1
	.uleb128 0x16
d287 2
a288 2
	.byte	0x3a
	.long	0x25
d291 1
a291 1
	.long	.Ldebug_info0+307
d293 1
a293 1
	.uleb128 0x16
d296 2
a297 2
	.byte	0x3b
	.long	0x170
d300 1
a300 1
	.long	.Ldebug_info0+319
d302 1
a302 1
	.uleb128 0x16
d305 2
a306 2
	.byte	0x3c
	.long	0x176
d309 1
a309 1
	.long	.Ldebug_info0+335
d312 2
a313 8
	.uleb128 0x4
	.byte	0x4
	.long	0x25
	.uleb128 0x4
	.byte	0x4
	.long	0x170
	.uleb128 0x17
	.long	.LASF4
d315 2
a316 2
	.byte	0x41
	.long	0x2b
d321 5
d327 22
a348 4
	.long	0x2b
	.long	0x1a1
	.uleb128 0x13
	.long	0x113
d351 1
a351 1
	.uleb128 0x19
d355 2
a356 2
	.long	0x191
	.uleb128 0x1a
d360 1
a360 1
	.long	0x191
d368 1
a368 1
	.uleb128 0x41
d370 2
d374 8
d437 3
a439 3
	.uleb128 0x11
	.byte	0x1
	.uleb128 0x25
d441 5
a446 11
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x1b
	.uleb128 0xe
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x1
	.uleb128 0x10
	.uleb128 0x17
a479 9
	.uleb128 0xf
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x20
	.byte	0
	.byte	0
	.uleb128 0xa
d500 2
d506 1
a506 1
	.uleb128 0xb
d521 1
a521 1
	.uleb128 0xc
d536 1
a536 1
	.uleb128 0xd
d553 1
a553 1
	.uleb128 0xe
d562 1
a562 1
	.uleb128 0xf
d571 1
a571 1
	.uleb128 0x10
d580 1
a580 1
	.uleb128 0x11
d595 1
a595 1
	.uleb128 0x12
d599 1
a599 1
	.uleb128 0x20
d604 1
a604 1
	.uleb128 0x13
d613 1
a613 1
	.uleb128 0x14
d624 1
a624 1
	.uleb128 0x15
d639 1
a639 1
	.uleb128 0x16
d654 1
a654 1
	.uleb128 0x17
d656 1
a656 1
	.byte	0
d673 4
d679 4
a682 1
	.uleb128 0x18
d684 1
a684 2
	.byte	0x1
	.uleb128 0x49
d690 9
d700 9
d725 1
a725 1
	.uleb128 0x1a
d746 2
a747 2
	.long	.LVL0-.Ltext0
	.long	.LVL1-.Ltext0
d751 2
a752 2
	.long	.LVL1-.Ltext0
	.long	.LFE1-.Ltext0
d763 2
a764 2
	.long	.LVL1-.Ltext0
	.long	.LVL4-.Ltext0
d768 2
a769 2
	.long	.LVL4-.Ltext0
	.long	.LFE1-.Ltext0
d780 2
a781 2
	.long	.LVL1-.Ltext0
	.long	.LVL4-.Ltext0
d784 1
a784 1
	.long	.Ldebug_info0+125
d797 1
a797 1
	.long	.Ldebug_info0+138
d809 2
a810 2
	.long	.LVL4-.Ltext0
	.long	.LFE1-.Ltext0
d813 1
a813 1
	.long	.Ldebug_info0+138
d826 1
a826 1
	.long	.Ldebug_info0+125
d841 2
a842 2
	.long	.LVL1-.Ltext0
	.long	.LVL2-.Ltext0
d845 1
a845 1
	.long	.Ldebug_info0+151
d847 2
a848 2
	.long	.LVL2-.Ltext0
	.long	.LVL3-.Ltext0
d852 2
a853 2
	.long	.LVL3-.Ltext0
	.long	.LFE1-.Ltext0
d856 1
a856 1
	.long	.Ldebug_info0+151
d861 2
a862 2
	.long	.LVL4-.Ltext0
	.long	.LVL5-.Ltext0
d865 1
a865 1
	.long	.Ldebug_info0+151
d867 2
a868 2
	.long	.LVL5-.Ltext0
	.long	.LVL6-.Ltext0
d872 2
a873 2
	.long	.LVL6-.Ltext0
	.long	.LFE1-.Ltext0
d876 1
a876 1
	.long	.Ldebug_info0+151
d881 1
a881 1
	.long	0x1c
d890 10
d905 5
a909 1
.LASF0:
d911 1
a911 3
.LASF3:
	.string	"/home/tromey/gnu/archer/archer/gdb/testsuite/gdb.dwarf2"
.LASF4:
d914 5
a918 1
	.string	"implptr.c"
d920 2
a921 2
	.string	"GNU C 4.6.0 20101116 (experimental) [trunk revision 166803]"
	.ident	"GCC: (GNU) 4.6.0 20101116 (experimental) [trunk revision 166803]"
@

