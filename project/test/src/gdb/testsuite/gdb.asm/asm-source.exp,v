head	1.89;
access;
symbols
	gdb_7_6_1-2013-08-30-release:1.88
	gdb_7_6-2013-04-26-release:1.88
	gdb_7_6-branch:1.88.0.2
	gdb_7_6-2013-03-12-branchpoint:1.88
	gdb_7_5_1-2012-11-29-release:1.87
	gdb_7_5-2012-08-17-release:1.87
	gdb_7_5-branch:1.87.0.2
	gdb_7_5-2012-07-18-branchpoint:1.87
	gdb_7_4_1-2012-04-26-release:1.84.2.1
	gdb_7_4-2012-01-24-release:1.84.2.1
	gdb_7_4-branch:1.84.0.2
	gdb_7_4-2011-12-13-branchpoint:1.84
	gdb_7_3_1-2011-09-04-release:1.83
	gdb_7_3-2011-07-26-release:1.83
	gdb_7_3-branch:1.83.0.2
	gdb_7_3-2011-04-01-branchpoint:1.83
	gdb_7_2-2010-09-02-release:1.80
	gdb_7_2-branch:1.80.0.2
	gdb_7_2-2010-07-07-branchpoint:1.80
	gdb_7_1-2010-03-18-release:1.77
	gdb_7_1-branch:1.77.0.2
	gdb_7_1-2010-02-18-branchpoint:1.77
	gdb_7_0_1-2009-12-22-release:1.74
	gdb_7_0-2009-10-06-release:1.74
	gdb_7_0-branch:1.74.0.4
	gdb_7_0-2009-09-16-branchpoint:1.74
	arc-sim-20090309:1.71.10.1
	msnyder-checkpoint-072509-branch:1.74.0.2
	msnyder-checkpoint-072509-branchpoint:1.74
	arc-insight_6_8-branch:1.71.0.10
	arc-insight_6_8-branchpoint:1.71
	insight_6_8-branch:1.71.0.8
	insight_6_8-branchpoint:1.71
	reverse-20081226-branch:1.72.0.6
	reverse-20081226-branchpoint:1.72
	multiprocess-20081120-branch:1.72.0.4
	multiprocess-20081120-branchpoint:1.72
	reverse-20080930-branch:1.72.0.2
	reverse-20080930-branchpoint:1.72
	reverse-20080717-branch:1.71.0.6
	reverse-20080717-branchpoint:1.71
	msnyder-reverse-20080609-branch:1.71.0.4
	msnyder-reverse-20080609-branchpoint:1.71
	drow-reverse-20070409-branch:1.68.0.2
	drow-reverse-20070409-branchpoint:1.68
	gdb_6_8-2008-03-27-release:1.71
	gdb_6_8-branch:1.71.0.2
	gdb_6_8-2008-02-26-branchpoint:1.71
	gdb_6_7_1-2007-10-29-release:1.69
	gdb_6_7-2007-10-10-release:1.69
	gdb_6_7-branch:1.69.0.2
	gdb_6_7-2007-09-07-branchpoint:1.69
	insight_6_6-20070208-release:1.65.2.1
	gdb_6_6-2006-12-18-release:1.65.2.1
	gdb_6_6-branch:1.65.0.2
	gdb_6_6-2006-11-15-branchpoint:1.65
	insight_6_5-20061003-release:1.63
	gdb-csl-symbian-6_4_50_20060226-12:1.61.8.1
	gdb-csl-sourcerygxx-3_4_4-25:1.58
	nickrob-async-20060828-mergepoint:1.65
	gdb-csl-symbian-6_4_50_20060226-11:1.61.8.1
	gdb-csl-sourcerygxx-4_1-17:1.61
	gdb-csl-20060226-branch-local-2:1.61
	gdb-csl-sourcerygxx-4_1-14:1.61
	gdb-csl-sourcerygxx-4_1-13:1.61
	gdb-csl-sourcerygxx-4_1-12:1.61
	gdb-csl-sourcerygxx-3_4_4-21:1.61
	gdb_6_5-20060621-release:1.63
	gdb-csl-sourcerygxx-4_1-9:1.61
	gdb-csl-sourcerygxx-4_1-8:1.61
	gdb-csl-sourcerygxx-4_1-7:1.61
	gdb-csl-arm-2006q1-6:1.61
	gdb-csl-sourcerygxx-4_1-6:1.61
	gdb-csl-symbian-6_4_50_20060226-10:1.61
	gdb-csl-symbian-6_4_50_20060226-9:1.61
	gdb-csl-symbian-6_4_50_20060226-8:1.61
	gdb-csl-coldfire-4_1-11:1.61
	gdb-csl-sourcerygxx-3_4_4-19:1.61
	gdb-csl-coldfire-4_1-10:1.61
	gdb_6_5-branch:1.63.0.4
	gdb_6_5-2006-05-14-branchpoint:1.63
	gdb-csl-sourcerygxx-4_1-5:1.61
	nickrob-async-20060513-branch:1.63.0.2
	nickrob-async-20060513-branchpoint:1.63
	gdb-csl-sourcerygxx-4_1-4:1.61
	msnyder-reverse-20060502-branch:1.62.0.2
	msnyder-reverse-20060502-branchpoint:1.62
	gdb-csl-morpho-4_1-4:1.61
	gdb-csl-sourcerygxx-3_4_4-17:1.61
	readline_5_1-import-branch:1.61.0.10
	readline_5_1-import-branchpoint:1.61
	gdb-csl-20060226-branch-merge-to-csl-symbian-1:1.61
	gdb-csl-symbian-20060226-branch:1.61.0.8
	gdb-csl-symbian-20060226-branchpoint:1.61
	gdb-csl-20060226-branch-merge-to-csl-local-1:1.61
	msnyder-reverse-20060331-branch:1.61.0.6
	msnyder-reverse-20060331-branchpoint:1.61
	gdb-csl-available-20060303-branch:1.61.0.4
	gdb-csl-available-20060303-branchpoint:1.61
	gdb-csl-20060226-branch:1.61.0.2
	gdb-csl-20060226-branchpoint:1.61
	gdb_6_4-20051202-release:1.57.2.1
	msnyder-fork-checkpoint-branch:1.58.0.4
	msnyder-fork-checkpoint-branchpoint:1.58
	gdb-csl-gxxpro-6_3-branch:1.58.0.2
	gdb-csl-gxxpro-6_3-branchpoint:1.58
	gdb_6_4-branch:1.57.0.2
	gdb_6_4-2005-11-01-branchpoint:1.57
	gdb-csl-arm-20051020-branch:1.56.0.2
	gdb-csl-arm-20051020-branchpoint:1.56
	gdb-csl-arm-20050325-2005-q1b:1.55
	gdb-csl-arm-20050325-2005-q1a:1.55
	csl-arm-20050325-branch:1.55.0.2
	csl-arm-20050325-branchpoint:1.55
	gdb-post-i18n-errorwarning-20050211:1.54
	gdb-pre-i18n-errorwarning-20050211:1.54
	gdb_6_3-20041109-release:1.53
	gdb_6_3-branch:1.53.0.2
	gdb_6_3-20041019-branchpoint:1.53
	drow_intercu-merge-20040921:1.52
	drow_intercu-merge-20040915:1.52
	jimb-gdb_6_2-e500-branch:1.50.0.6
	jimb-gdb_6_2-e500-branchpoint:1.50
	gdb_6_2-20040730-release:1.50
	gdb_6_2-branch:1.50.0.2
	gdb_6_2-2004-07-10-gmt-branchpoint:1.50
	gdb_6_1_1-20040616-release:1.49
	gdb_6_1-2004-04-05-release:1.49
	drow_intercu-merge-20040402:1.49
	drow_intercu-merge-20040327:1.49
	ezannoni_pie-20040323-branch:1.49.0.10
	ezannoni_pie-20040323-branchpoint:1.49
	cagney_tramp-20040321-mergepoint:1.49
	cagney_tramp-20040309-branch:1.49.0.8
	cagney_tramp-20040309-branchpoint:1.49
	gdb_6_1-branch:1.49.0.6
	gdb_6_1-2004-03-01-gmt-branchpoint:1.49
	drow_intercu-20040221-branch:1.49.0.4
	drow_intercu-20040221-branchpoint:1.49
	cagney_bfdfile-20040213-branch:1.49.0.2
	cagney_bfdfile-20040213-branchpoint:1.49
	drow-cplus-merge-20040208:1.49
	carlton_dictionary-20040126-merge:1.47
	cagney_bigcore-20040122-branch:1.47.0.2
	cagney_bigcore-20040122-branchpoint:1.47
	drow-cplus-merge-20040113:1.47
	drow-cplus-merge-20031224:1.46
	drow-cplus-merge-20031220:1.46
	carlton_dictionary-20031215-merge:1.46
	drow-cplus-merge-20031214:1.46
	carlton-dictionary-20031111-merge:1.43
	gdb_6_0-2003-10-04-release:1.38.6.3
	kettenis_sparc-20030918-branch:1.43.0.4
	kettenis_sparc-20030918-branchpoint:1.43
	carlton_dictionary-20030917-merge:1.43
	ezannoni_pie-20030916-branchpoint:1.43
	ezannoni_pie-20030916-branch:1.43.0.2
	cagney_x86i386-20030821-branch:1.41.0.2
	cagney_x86i386-20030821-branchpoint:1.41
	carlton_dictionary-20030805-merge:1.40
	carlton_dictionary-20030627-merge:1.38
	gdb_6_0-branch:1.38.0.6
	gdb_6_0-2003-06-23-branchpoint:1.38
	jimb-ppc64-linux-20030613-branch:1.38.0.4
	jimb-ppc64-linux-20030613-branchpoint:1.38
	cagney_convert-20030606-branch:1.38.0.2
	cagney_convert-20030606-branchpoint:1.38
	cagney_writestrings-20030508-branch:1.33.0.8
	cagney_writestrings-20030508-branchpoint:1.33
	jimb-ppc64-linux-20030528-branch:1.33.0.6
	jimb-ppc64-linux-20030528-branchpoint:1.33
	carlton_dictionary-20030523-merge:1.33
	cagney_fileio-20030521-branch:1.33.0.4
	cagney_fileio-20030521-branchpoint:1.33
	kettenis_i386newframe-20030517-mergepoint:1.33
	jimb-ppc64-linux-20030509-branch:1.33.0.2
	jimb-ppc64-linux-20030509-branchpoint:1.33
	kettenis_i386newframe-20030504-mergepoint:1.31
	carlton_dictionary-20030430-merge:1.30
	kettenis_i386newframe-20030419-branch:1.30.0.8
	kettenis_i386newframe-20030419-branchpoint:1.30
	carlton_dictionary-20030416-merge:1.30
	cagney_frameaddr-20030409-mergepoint:1.30
	kettenis_i386newframe-20030406-branch:1.30.0.6
	kettenis_i386newframe-20030406-branchpoint:1.30
	cagney_frameaddr-20030403-branchpoint:1.30
	cagney_frameaddr-20030403-branch:1.30.0.4
	cagney_framebase-20030330-mergepoint:1.30
	cagney_framebase-20030326-branch:1.30.0.2
	cagney_framebase-20030326-branchpoint:1.30
	cagney_lazyid-20030317-branch:1.28.0.10
	cagney_lazyid-20030317-branchpoint:1.28
	kettenis-i386newframe-20030316-mergepoint:1.28
	offbyone-20030313-branch:1.28.0.8
	offbyone-20030313-branchpoint:1.28
	kettenis-i386newframe-20030308-branch:1.28.0.6
	kettenis-i386newframe-20030308-branchpoint:1.28
	carlton_dictionary-20030305-merge:1.28
	cagney_offbyone-20030303-branch:1.28.0.4
	cagney_offbyone-20030303-branchpoint:1.28
	carlton_dictionary-20030207-merge:1.28
	interps-20030203-mergepoint:1.28
	interps-20030202-branch:1.28.0.2
	interps-20030202-branchpoint:1.28
	cagney-unwind-20030108-branch:1.27.0.2
	cagney-unwind-20030108-branchpoint:1.27
	carlton_dictionary-20021223-merge:1.27
	gdb_5_3-2002-12-12-release:1.25
	carlton_dictionary-20021115-merge:1.27
	kseitz_interps-20021105-merge:1.26
	kseitz_interps-20021103-merge:1.26
	drow-cplus-merge-20021020:1.25
	drow-cplus-merge-20021025:1.26
	carlton_dictionary-20021025-merge:1.26
	carlton_dictionary-20021011-merge:1.25
	drow-cplus-branch:1.25.0.10
	drow-cplus-branchpoint:1.25
	kseitz_interps-20020930-merge:1.25
	carlton_dictionary-20020927-merge:1.25
	carlton_dictionary-branch:1.25.0.8
	carlton_dictionary-20020920-branchpoint:1.25
	gdb_5_3-branch:1.25.0.6
	gdb_5_3-2002-09-04-branchpoint:1.25
	kseitz_interps-20020829-merge:1.25
	cagney_sysregs-20020825-branch:1.25.0.4
	cagney_sysregs-20020825-branchpoint:1.25
	readline_4_3-import-branch:1.25.0.2
	readline_4_3-import-branchpoint:1.25
	gdb_5_2_1-2002-07-23-release:1.18.2.1
	kseitz_interps-20020528-branch:1.24.0.4
	kseitz_interps-20020528-branchpoint:1.24
	cagney_regbuf-20020515-branch:1.24.0.2
	cagney_regbuf-20020515-branchpoint:1.24
	jimb-macro-020506-branch:1.23.0.2
	jimb-macro-020506-branchpoint:1.23
	gdb_5_2-2002-04-29-release:1.18
	gdb_5_2-branch:1.18.0.2
	gdb_5_2-2002-03-03-branchpoint:1.18
	gdb_5_1_1-2002-01-24-release:1.3
	gdb_5_1_0_1-2002-01-03-release:1.3
	cygnus_cvs_20020108_pre:1.16
	gdb_5_1_0_1-2002-01-03-branch:1.3.0.8
	gdb_5_1_0_1-2002-01-03-branchpoint:1.3
	gdb_5_1-2001-11-21-release:1.3
	gdb_s390-2001-09-26-branch:1.3.0.6
	gdb_s390-2001-09-26-branchpoint:1.3
	gdb_5_1-2001-07-29-branch:1.3.0.4
	gdb_5_1-2001-07-29-branchpoint:1.3
	dberlin-typesystem-branch:1.3.0.2
	dberlin-typesystem-branchpoint:1.3
	gdb-post-ptid_t-2001-05-03:1.3
	gdb-pre-ptid_t-2001-05-03:1.3
	insight-precleanup-2001-01-01:1.2
	gdb-post-protoization-2000-07-29:1.2
	gdb-pre-protoization-2000-07-29:1.2
	gdb-premipsmulti-2000-06-06-branch:1.1.1.1.0.6
	gdb-premipsmulti-2000-06-06-branchpoint:1.1.1.1
	gdb-post-params-removal-2000-06-04:1.1.1.1
	gdb-pre-params-removal-2000-06-04:1.1.1.1
	gdb-post-params-removal-2000-05-28:1.1.1.1
	gdb-pre-params-removal-2000-05-28:1.1.1.1
	gdb_5_0-2000-05-19-release:1.1.1.1
	gdb_4_18_2-2000-05-18-release:1.1.1.1
	gdb_4_95_1-2000-05-11-snapshot:1.1.1.1
	gdb_4_95_0-2000-04-27-snapshot:1.1.1.1
	gdb_5_0-2000-04-10-branch:1.1.1.1.0.4
	gdb_5_0-2000-04-10-branchpoint:1.1.1.1
	repo-unification-2000-02-06:1.1.1.1
	insight-2000-02-04:1.1.1.1
	gdb-2000-02-04:1.1.1.1
	gdb-2000-02-02:1.1.1.1
	gdb-2000-02-01:1.1.1.1
	gdb-2000-01-31:1.1.1.1
	gdb-2000-01-26:1.1.1.1
	gdb-2000-01-24:1.1.1.1
	gdb-2000-01-17:1.1.1.1
	gdb-2000-01-10:1.1.1.1
	gdb-2000-01-05:1.1.1.1
	gdb-1999-12-21:1.1.1.1
	gdb-1999-12-13:1.1.1.1
	gdb-1999-12-07:1.1.1.1
	gdb-1999-12-06:1.1.1.1
	gdb-1999-11-16:1.1.1.1
	gdb-1999-11-08:1.1.1.1
	gdb-1999-11-01:1.1.1.1
	gdb-1999-10-25:1.1.1.1
	gdb-1999-10-18:1.1.1.1
	gdb-1999-10-11:1.1.1.1
	gdb-1999-10-04:1.1.1.1
	gdb-1999-09-28:1.1.1.1
	gdb-1999-09-21:1.1.1.1
	gdb-1999-09-13:1.1.1.1
	gdb-1999-09-08:1.1.1.1
	gdb-1999-08-30:1.1.1.1
	gdb-1999-08-23:1.1.1.1
	gdb-1999-08-16:1.1.1.1
	gdb-1999-08-09:1.1.1.1
	gdb-1999-08-02:1.1.1.1
	gdb-1999-07-26:1.1.1.1
	gdb-1999-07-19:1.1.1.1
	gdb-1999-07-12:1.1.1.1
	gdb-post-reformat-19990707:1.1.1.1
	gdb-1999-07-07-post-reformat-snapshot:1.1.1.1
	gdb-pre-reformat-19990707:1.1.1.1
	gdb-1999-07-07:1.1.1.1
	gdb-1999-07-05:1.1.1.1
	gdb-1999-06-28:1.1.1.1
	gdb-1999-06-21:1.1.1.1
	gdb-1999-06-14:1.1.1.1
	gdb-1999-06-07:1.1.1.1
	gdb-1999-06-01:1.1.1.1
	gdb-4_18-branch:1.1.1.1.0.2
	gdb-4_18-release:1.1.1.1
	gdb-1999-05-25:1.1.1.1
	gdb-1999-05-19:1.1.1.1
	gdb-1999-05-10:1.1.1.1
	gdb-19990504:1.1.1.1
	gdb-19990422:1.1.1.1
	SNAPSHOT:1.1.1
	gdb-4_18:1.1.1.1
	GDB_4_18:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.89
date	2013.06.07.17.31.07;	author palves;	state Exp;
branches;
next	1.88;

1.88
date	2013.01.01.06.33.24;	author brobecke;	state Exp;
branches;
next	1.87;

1.87
date	2012.06.25.20.11.43;	author tromey;	state Exp;
branches;
next	1.86;

1.86
date	2012.01.16.16.21.44;	author palves;	state Exp;
branches;
next	1.85;

1.85
date	2012.01.04.08.17.45;	author brobecke;	state Exp;
branches;
next	1.84;

1.84
date	2011.07.06.18.40.30;	author vapier;	state Exp;
branches
	1.84.2.1;
next	1.83;

1.83
date	2011.01.19.20.26.08;	author qiyao;	state Exp;
branches;
next	1.82;

1.82
date	2011.01.01.15.33.40;	author brobecke;	state Exp;
branches;
next	1.81;

1.81
date	2010.11.24.17.57.34;	author bauermann;	state Exp;
branches;
next	1.80;

1.80
date	2010.06.10.19.48.19;	author msnyder;	state Exp;
branches;
next	1.79;

1.79
date	2010.05.26.18.05.25;	author msnyder;	state Exp;
branches;
next	1.78;

1.78
date	2010.05.05.18.06.57;	author brobecke;	state Exp;
branches;
next	1.77;

1.77
date	2010.01.01.07.32.00;	author brobecke;	state Exp;
branches;
next	1.76;

1.76
date	2009.11.23.18.44.10;	author ppluzhnikov;	state Exp;
branches;
next	1.75;

1.75
date	2009.10.23.00.49.33;	author ppluzhnikov;	state Exp;
branches;
next	1.74;

1.74
date	2009.05.18.13.25.34;	author jbeniston;	state Exp;
branches;
next	1.73;

1.73
date	2009.01.03.05.58.03;	author brobecke;	state Exp;
branches;
next	1.72;

1.72
date	2008.08.06.12.52.06;	author jkratoch;	state Exp;
branches;
next	1.71;

1.71
date	2008.01.01.22.53.18;	author drow;	state Exp;
branches
	1.71.10.1;
next	1.70;

1.70
date	2007.12.22.06.44.27;	author jimb;	state Exp;
branches;
next	1.69;

1.69
date	2007.08.23.18.14.16;	author brobecke;	state Exp;
branches;
next	1.68;

1.68
date	2007.03.30.17.21.48;	author drow;	state Exp;
branches;
next	1.67;

1.67
date	2007.01.09.17.59.09;	author drow;	state Exp;
branches;
next	1.66;

1.66
date	2006.11.22.17.19.50;	author uweigand;	state Exp;
branches;
next	1.65;

1.65
date	2006.08.10.05.27.20;	author brobecke;	state Exp;
branches
	1.65.2.1;
next	1.64;

1.64
date	2006.07.29.19.15.00;	author kettenis;	state Exp;
branches;
next	1.63;

1.63
date	2006.05.01.22.21.35;	author kettenis;	state Exp;
branches
	1.63.2.1;
next	1.62;

1.62
date	2006.04.20.23.24.23;	author msnyder;	state Exp;
branches;
next	1.61;

1.61
date	2006.01.12.00.51.45;	author jimb;	state Exp;
branches
	1.61.8.1;
next	1.60;

1.60
date	2005.12.28.10.36.00;	author kettenis;	state Exp;
branches;
next	1.59;

1.59
date	2005.12.09.11.05.26;	author tausq;	state Exp;
branches;
next	1.58;

1.58
date	2005.11.11.11.18.53;	author ciceron;	state Exp;
branches;
next	1.57;

1.57
date	2005.10.31.20.33.22;	author kettenis;	state Exp;
branches
	1.57.2.1;
next	1.56;

1.56
date	2005.04.29.14.22.27;	author corinna;	state Exp;
branches;
next	1.55;

1.55
date	2005.03.08.08.59.16;	author corinna;	state Exp;
branches;
next	1.54;

1.54
date	2004.10.30.21.49.30;	author kettenis;	state Exp;
branches;
next	1.53;

1.53
date	2004.10.05.04.13.42;	author ksakamot;	state Exp;
branches;
next	1.52;

1.52
date	2004.07.30.22.09.01;	author chastain;	state Exp;
branches;
next	1.51;

1.51
date	2004.07.27.09.28.42;	author nickc;	state Exp;
branches;
next	1.50;

1.50
date	2004.05.25.04.07.05;	author tausq;	state Exp;
branches;
next	1.49;

1.49
date	2004.01.31.14.32.24;	author kettenis;	state Exp;
branches
	1.49.4.1;
next	1.48;

1.48
date	2004.01.30.21.23.46;	author kettenis;	state Exp;
branches;
next	1.47;

1.47
date	2004.01.01.01.13.42;	author kettenis;	state Exp;
branches;
next	1.46;

1.46
date	2003.12.13.01.01.08;	author kevinb;	state Exp;
branches;
next	1.45;

1.45
date	2003.11.29.13.55.17;	author kettenis;	state Exp;
branches;
next	1.44;

1.44
date	2003.11.26.01.17.16;	author bje;	state Exp;
branches;
next	1.43;

1.43
date	2003.09.15.09.52.56;	author corinna;	state Exp;
branches
	1.43.2.1;
next	1.42;

1.42
date	2003.08.25.23.43.40;	author jjohnstn;	state Exp;
branches;
next	1.41;

1.41
date	2003.08.07.04.04.57;	author drow;	state Exp;
branches;
next	1.40;

1.40
date	2003.07.15.17.23.32;	author cagney;	state Exp;
branches;
next	1.39;

1.39
date	2003.07.07.14.48.50;	author schwab;	state Exp;
branches;
next	1.38;

1.38
date	2003.06.02.03.09.32;	author drow;	state Exp;
branches
	1.38.6.1;
next	1.37;

1.37
date	2003.06.01.11.37.34;	author kettenis;	state Exp;
branches;
next	1.36;

1.36
date	2003.06.01.07.16.05;	author rth;	state Exp;
branches;
next	1.35;

1.35
date	2003.05.30.17.45.50;	author kettenis;	state Exp;
branches;
next	1.34;

1.34
date	2003.05.30.02.51.46;	author rth;	state Exp;
branches;
next	1.33;

1.33
date	2003.05.07.21.52.53;	author jimb;	state Exp;
branches
	1.33.6.1;
next	1.32;

1.32
date	2003.05.07.21.51.06;	author jimb;	state Exp;
branches;
next	1.31;

1.31
date	2003.05.01.23.21.08;	author cagney;	state Exp;
branches;
next	1.30;

1.30
date	2003.03.21.20.34.38;	author ciceron;	state Exp;
branches
	1.30.8.1;
next	1.29;

1.29
date	2003.03.20.12.57.48;	author corinna;	state Exp;
branches;
next	1.28;

1.28
date	2003.01.20.15.40.07;	author ezannoni;	state Exp;
branches;
next	1.27;

1.27
date	2002.11.08.03.21.33;	author fnasser;	state Exp;
branches;
next	1.26;

1.26
date	2002.10.22.01.43.37;	author drow;	state Exp;
branches;
next	1.25;

1.25
date	2002.06.06.15.19.17;	author mludvig;	state Exp;
branches
	1.25.8.1
	1.25.10.1;
next	1.24;

1.24
date	2002.05.14.10.25.32;	author corinna;	state Exp;
branches
	1.24.2.1
	1.24.4.1;
next	1.23;

1.23
date	2002.04.19.17.21.48;	author davem;	state Exp;
branches;
next	1.22;

1.22
date	2002.04.19.16.06.59;	author ezannoni;	state Exp;
branches;
next	1.21;

1.21
date	2002.04.08.00.01.06;	author ezannoni;	state Exp;
branches;
next	1.20;

1.20
date	2002.04.07.23.57.23;	author ezannoni;	state Exp;
branches;
next	1.19;

1.19
date	2002.04.05.02.48.23;	author drow;	state Exp;
branches;
next	1.18;

1.18
date	2002.02.21.20.58.25;	author jimb;	state Exp;
branches
	1.18.2.1;
next	1.17;

1.17
date	2002.01.18.00.13.00;	author jimb;	state Exp;
branches;
next	1.16;

1.16
date	2001.12.20.22.12.20;	author corinna;	state Exp;
branches;
next	1.15;

1.15
date	2001.12.20.16.06.11;	author corinna;	state Exp;
branches;
next	1.14;

1.14
date	2001.12.13.13.42.19;	author corinna;	state Exp;
branches;
next	1.13;

1.13
date	2001.12.10.20.30.00;	author jimb;	state Exp;
branches;
next	1.12;

1.12
date	2001.12.07.02.50.02;	author msnyder;	state Exp;
branches;
next	1.11;

1.11
date	2001.12.04.19.45.57;	author msnyder;	state Exp;
branches;
next	1.10;

1.10
date	2001.12.01.01.13.27;	author jimb;	state Exp;
branches;
next	1.9;

1.9
date	2001.11.27.01.29.03;	author msnyder;	state Exp;
branches;
next	1.8;

1.8
date	2001.11.22.01.13.10;	author msnyder;	state Exp;
branches;
next	1.7;

1.7
date	2001.11.22.01.07.24;	author msnyder;	state Exp;
branches;
next	1.6;

1.6
date	2001.11.14.16.37.18;	author corinna;	state Exp;
branches;
next	1.5;

1.5
date	2001.11.10.01.44.43;	author cagney;	state Exp;
branches;
next	1.4;

1.4
date	2001.11.08.19.06.18;	author msnyder;	state Exp;
branches;
next	1.3;

1.3
date	2001.03.06.08.21.49;	author kevinb;	state Exp;
branches;
next	1.2;

1.2
date	2000.07.04.02.47.08;	author cagney;	state Exp;
branches;
next	1.1;

1.1
date	99.04.16.01.34.29;	author shebs;	state Exp;
branches
	1.1.1.1;
next	;

1.84.2.1
date	2012.01.06.04.43.59;	author brobecke;	state Exp;
branches;
next	;

1.71.10.1
date	2009.03.09.20.36.09;	author amylaar;	state Exp;
branches;
next	1.71.10.2;

1.71.10.2
date	2009.09.11.04.45.51;	author amylaar;	state Exp;
branches;
next	;

1.65.2.1
date	2006.11.24.19.56.30;	author uweigand;	state Exp;
branches;
next	;

1.63.2.1
date	2006.08.28.07.48.43;	author nickrob;	state Exp;
branches;
next	;

1.61.8.1
date	2006.08.23.17.24.07;	author drow;	state Exp;
branches;
next	;

1.57.2.1
date	2005.11.11.11.17.58;	author ciceron;	state Exp;
branches;
next	;

1.49.4.1
date	2004.09.16.17.01.40;	author drow;	state Exp;
branches;
next	;

1.43.2.1
date	2004.03.23.20.12.32;	author ezannoni;	state Exp;
branches;
next	;

1.38.6.1
date	2003.07.07.14.50.39;	author schwab;	state Exp;
branches;
next	1.38.6.2;

1.38.6.2
date	2003.07.15.17.32.14;	author cagney;	state Exp;
branches;
next	1.38.6.3;

1.38.6.3
date	2003.08.07.04.05.59;	author drow;	state Exp;
branches;
next	;

1.33.6.1
date	2003.05.28.19.29.06;	author jimb;	state Exp;
branches;
next	;

1.30.8.1
date	2003.05.04.11.37.48;	author kettenis;	state Exp;
branches;
next	;

1.25.8.1
date	2002.10.25.23.49.58;	author carlton;	state Exp;
branches;
next	1.25.8.2;

1.25.8.2
date	2002.11.15.19.19.13;	author carlton;	state Exp;
branches;
next	1.25.8.3;

1.25.8.3
date	2003.02.07.19.17.58;	author carlton;	state Exp;
branches;
next	1.25.8.4;

1.25.8.4
date	2003.04.16.19.57.02;	author carlton;	state Exp;
branches;
next	1.25.8.5;

1.25.8.5
date	2003.05.23.18.40.51;	author carlton;	state Exp;
branches;
next	1.25.8.6;

1.25.8.6
date	2003.06.27.21.50.20;	author carlton;	state Exp;
branches;
next	1.25.8.7;

1.25.8.7
date	2003.08.05.17.13.23;	author carlton;	state Exp;
branches;
next	1.25.8.8;

1.25.8.8
date	2003.09.17.21.28.49;	author carlton;	state Exp;
branches;
next	1.25.8.9;

1.25.8.9
date	2003.12.16.00.01.00;	author carlton;	state Exp;
branches;
next	1.25.8.10;

1.25.8.10
date	2004.01.26.19.11.41;	author carlton;	state Exp;
branches;
next	;

1.25.10.1
date	2002.10.26.17.12.20;	author drow;	state Exp;
branches;
next	1.25.10.2;

1.25.10.2
date	2003.12.14.20.27.46;	author drow;	state Exp;
branches;
next	1.25.10.3;

1.25.10.3
date	2004.01.13.16.12.11;	author drow;	state Exp;
branches;
next	1.25.10.4;

1.25.10.4
date	2004.02.09.19.43.55;	author drow;	state Exp;
branches;
next	;

1.24.2.1
date	2002.06.15.16.43.15;	author cagney;	state Exp;
branches;
next	;

1.24.4.1
date	2002.06.20.01.36.47;	author kseitz;	state Exp;
branches;
next	1.24.4.2;

1.24.4.2
date	2002.11.03.22.08.50;	author ezannoni;	state Exp;
branches;
next	;

1.18.2.1
date	2002.07.03.06.00.29;	author mludvig;	state Exp;
branches;
next	;

1.1.1.1
date	99.04.16.01.34.29;	author shebs;	state Exp;
branches;
next	;


desc
@@


1.89
log
@Remove superfluous semicolons from testsuite throughout.

A few months ago semicolons after "return" were removed throughout the
testsuite.  However, as I pointed out in review, they're unnecessary
not just after "return", but pretty much after any tcl command.  ';'
is the command separator, and you only need it if there's another
command on the same line afterwards.

This patch was written by running:

 $ find . -name "*.exp" | xargs grep -l ";\s*$" | xargs sed -i 's/\([^#][^\s*;]*\)\s*;\s*$/\1/'

and then undoing changes to comments, and lib/future.exp.

Tested on x86_64 Fedora 17.

gdb/testsuite/
2013-06-07  Pedro Alves  <palves@@redhat.com>

	* boards/native-extended-gdbserver.exp: Remove semicolon.
	* config/arm-ice.exp: Likewise.
	* config/bfin.exp: Likewise.
	* config/cygmon.exp: Likewise.
	* config/h8300.exp: Likewise.
	* config/monitor.exp: Likewise.
	* config/sid.exp: Likewise.
	* config/sim.exp: Likewise.
	* config/slite.exp: Likewise.
	* config/vx.exp: Likewise.
	* gdb.arch/i386-bp_permanent.exp: Likewise.
	* gdb.asm/asm-source.exp: Likewise.
	* gdb.base/args.exp: Likewise.
	* gdb.base/attach-pie-misread.exp: Likewise.
	* gdb.base/auxv.exp: Likewise.
	* gdb.base/bigcore.exp: Likewise.
	* gdb.base/bitfields2.exp: Likewise.
	* gdb.base/bitfields.exp: Likewise.
	* gdb.base/break.exp: Likewise.
	* gdb.base/break-interp.exp: Likewise.
	* gdb.base/callfuncs.exp: Likewise.
	* gdb.base/call-sc.exp: Likewise.
	* gdb.base/commands.exp: Likewise.
	* gdb.base/corefile.exp: Likewise.
	* gdb.base/dbx.exp: Likewise.
	* gdb.base/ending-run.exp: Likewise.
	* gdb.base/exprs.exp: Likewise.
	* gdb.base/funcargs.exp: Likewise.
	* gdb.base/hbreak2.exp: Likewise.
	* gdb.base/huge.exp: Likewise.
	* gdb.base/list.exp: Likewise.
	* gdb.base/memattr.exp: Likewise.
	* gdb.base/overlays.exp: Likewise.
	* gdb.base/printcmds.exp: Likewise.
	* gdb.base/recurse.exp: Likewise.
	* gdb.base/remotetimeout.exp: Likewise.
	* gdb.base/reread.exp: Likewise.
	* gdb.base/savedregs.exp: Likewise.
	* gdb.base/scope.exp: Likewise.
	* gdb.base/sepdebug.exp: Likewise.
	* gdb.base/setshow.exp: Likewise.
	* gdb.base/setvar.exp: Likewise.
	* gdb.base/sigaltstack.exp: Likewise.
	* gdb.base/siginfo-addr.exp: Likewise.
	* gdb.base/siginfo.exp: Likewise.
	* gdb.base/siginfo-obj.exp: Likewise.
	* gdb.base/sigrepeat.exp: Likewise.
	* gdb.base/sigstep.exp: Likewise.
	* gdb.base/structs.exp: Likewise.
	* gdb.base/testenv.exp: Likewise.
	* gdb.base/twice.exp: Likewise.
	* gdb.base/valgrind-db-attach.exp: Likewise.
	* gdb.base/valgrind-infcall.exp: Likewise.
	* gdb.base/varargs.exp: Likewise.
	* gdb.base/watchpoint.exp: Likewise.
	* gdb.cp/gdb1355.exp: Likewise.
	* gdb.cp/misc.exp: Likewise.
	* gdb.disasm/hppa.exp: Likewise.
	* gdb.disasm/t01_mov.exp: Likewise.
	* gdb.disasm/t02_mova.exp: Likewise.
	* gdb.disasm/t03_add.exp: Likewise.
	* gdb.disasm/t04_sub.exp: Likewise.
	* gdb.disasm/t05_cmp.exp: Likewise.
	* gdb.disasm/t06_ari2.exp: Likewise.
	* gdb.disasm/t07_ari3.exp: Likewise.
	* gdb.disasm/t08_or.exp: Likewise.
	* gdb.disasm/t09_xor.exp: Likewise.
	* gdb.disasm/t10_and.exp: Likewise.
	* gdb.disasm/t11_logs.exp: Likewise.
	* gdb.disasm/t12_bit.exp: Likewise.
	* gdb.disasm/t13_otr.exp: Likewise.
	* gdb.gdb/selftest.exp: Likewise.
	* gdb.hp/gdb.base-hp/callfwmall.exp: Likewise.
	* gdb.mi/mi-reverse.exp: Likewise.
	* gdb.pascal/floats.exp: Likewise.
	* gdb.python/py-inferior.exp: Likewise.
	* gdb.threads/attach-into-signal.exp: Likewise.
	* gdb.threads/pthreads.exp: Likewise.
	* gdb.threads/thread_events.exp: Likewise.
	* gdb.threads/watchthreads.exp: Likewise.
	* gdb.trace/actions-changed.exp: Likewise.
	* gdb.trace/actions.exp: Likewise.
	* gdb.trace/ax.exp: Likewise.
	* gdb.trace/backtrace.exp: Likewise.
	* gdb.trace/change-loc.exp: Likewise.
	* gdb.trace/deltrace.exp: Likewise.
	* gdb.trace/disconnected-tracing.exp: Likewise.
	* gdb.trace/ftrace.exp: Likewise.
	* gdb.trace/infotrace.exp: Likewise.
	* gdb.trace/passc-dyn.exp: Likewise.
	* gdb.trace/passcount.exp: Likewise.
	* gdb.trace/pending.exp: Likewise.
	* gdb.trace/qtro.exp: Likewise.
	* gdb.trace/range-stepping.exp: Likewise.
	* gdb.trace/report.exp: Likewise.
	* gdb.trace/save-trace.exp: Likewise.
	* gdb.trace/status-stop.exp: Likewise.
	* gdb.trace/strace.exp: Likewise.
	* gdb.trace/tfile.exp: Likewise.
	* gdb.trace/tfind.exp: Likewise.
	* gdb.trace/trace-break.exp: Likewise.
	* gdb.trace/tracecmd.exp: Likewise.
	* gdb.trace/trace-mt.exp: Likewise.
	* gdb.trace/tspeed.exp: Likewise.
	* gdb.trace/tsv.exp: Likewise.
	* gdb.trace/while-stepping.exp: Likewise.
	* lib/gdb.exp: Likewise.
	* lib/gdbserver-support.exp: Likewise.
	* lib/java.exp: Likewise.
	* lib/mi-support.exp: Likewise.
	* lib/pascal.exp: Likewise.
	* lib/prompt.exp: Likewise.
	* lib/trace-support.exp: Likewise.
@
text
@# Copyright 1998-2013 Free Software Foundation, Inc.
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# This file was written by Kendra.

#
# Test debugging assembly level programs.
# This file uses asmsrc[12].s for input.
#


set asm-arch ""
set asm-note "empty"
set asm-flags ""
set link-flags "-e _start"
set debug-flags ""

set obj_include -I[standard_output_file {}]

switch -glob -- [istarget] {
    "alpha*-*-*" {
        set asm-arch alpha
	# ??? Won't work with ecoff systems like Tru64, but then we also
	# don't have any other -g flag that creates mdebug output.
        set asm-flags "-no-mdebug -I${srcdir}/${subdir} $obj_include"
	set debug-flags "-gdwarf-2"
    }
    "arm*-*-*" {
        set asm-arch arm
    }
    "bfin-*-*" {
        set asm-arch bfin
    }
    "frv-*-*" {
	set asm-arch frv
    }
    "s390-*-*" {
        set asm-arch s390
    }
    "s390x-*-*" {
        set asm-arch s390x
    }
    "x86_64-*-*" {
        set asm-arch x86_64
	set debug-flags "-gdwarf-2"
    }
    "i\[3456\]86-*-*" {
        set asm-arch i386
    }
    "lm32-*" {
        set asm-arch lm32
    }
    "m32r*-linux*" {
        set asm-arch m32r-linux
    }
    "m32c-*-*" {
        set asm-arch m32c
    }
    "m32r*-*" {
        set asm-arch m32r
        append link-flags "--whole-archive -lgloss --no-whole-archive"
    }
    "m6811-*-*" {
        set asm-arch m68hc11
        set asm-flags "-mshort-double -m68hc11 --no-warn -I${srcdir}/${subdir} $obj_include"
	set debug-flags "-gdwarf-2"
	# This asm test is specific and uses the linker directly.
	# We must not use the target board linker script defined for other
	# tests.  Remove it and restore it later on.
	set board [target_info name]
	set old_ldscript [board_info $board ldscript]
	unset_board_info "ldscript"
    }
    "m6812-*-*" {
        set asm-arch m68hc11
        set asm-flags "-mshort-double -m68hc12 --no-warn -I${srcdir}/${subdir} $obj_include"
	set debug-flags "-gdwarf-2"
	# This asm test is specific and uses the linker directly.
	# We must not use the target board linker script defined for other
	# tests.  Remove it and restore it later on.
	set board [target_info name]
	set old_ldscript [board_info $board ldscript]
	set_board_info ldscript ""
    }
    "mips*-*" {
        set asm-arch mips
    }
    "powerpc*-*" {
        if { [is_lp64_target] } {
            set asm-arch powerpc64
            set asm-flags "-a64 -I${srcdir}/${subdir} $obj_include"
            append link-flags " -m elf64ppc"
        } else {
            set asm-arch powerpc
            set asm-flags "-a32 -I${srcdir}/${subdir} $obj_include"
            append link-flags " -m elf32ppc"
        }
    }
    "sh*-*-*" {
        set asm-arch sh
	set debug-flags "-gdwarf-2"
    }
    "sparc-*-*" {
        set asm-arch sparc
    }
    "sparc64-*-*" {
        set asm-arch sparc64
        set asm-flags "-xarch=v9 -I${srcdir}/${subdir} $obj_include"
	set debug-flags "-gdwarf-2"
    }
    "spu*-*-*" {
       set asm-arch spu
       set asm-flags "-I${srcdir}/${subdir} $obj_include --no-warn"
       set debug-flags "-gdwarf-2"
    }
    "xstormy16-*-*" {
        set asm-arch xstormy16
	set debug-flags "-gdwarf-2"
    }
    "v850-*-*" {
        set asm-arch v850
        set gdb_wrapper_initialized 1
    }
    "m68k-*-*" {
        set asm-arch m68k
    }
    "ia64-*-*" {
        set asm-arch ia64
	set debug-flags "-gdwarf-2"
    }
    "iq2000-*-*" {
    	set asm-arch iq2000
    }
    "hppa*-linux-*" {
        set asm-arch pa
	set debug-flags "-gdwarf-2"
    }
    "hppa-*-openbsd*" {
        set asm-arch pa
	set debug-flags "-gdwarf-2"
    }
    "hppa64-*-hpux*" {
        set asm-arch pa64
	set debug-flags "-gdwarf-2"
    }
    "h83*-*" {
	set asm-arch h8300
        set debug-flags "-gdwarf-2"
    }
}

if { "${asm-arch}" == "" } {
    untested asm-source.exp
    return -1
}

# On NetBSD/ELF we need a special NetBSD-identifying note section.
if { [istarget "*-*-netbsdelf*"]
     || [istarget "alpha-*-netbsd*"]
     || [istarget "mips*-*-netbsd*"]
     || [istarget "powerpc-*-netbsd*"]
     || [istarget "x86_64-*-netbsd*"] } then {
    set asm-note "netbsd"
}

# On OpenBSD/ELF we need a similar note section.  We make no attempt
# of handing a.out here since most OpenBSD/a.out systems use a rather
# outdated assembler that doesn't assemble this test's code anyway.
if { [istarget "*-*-openbsd*"] } then {
    set asm-note "openbsd"
}

# Watch out, we are invoking the assembler, but the testsuite sets multilib
# switches according to compiler syntax.  If we pass these options straight
# to the assembler, they won't always make sense.  If we don't pass them to
# the assembler, the final link will complain that the object files were
# built with different defaults.  So no matter what we do, we lose.  We may as
# well get out of this test sooner rather than later.
set dest [target_info name]
if [board_info $dest exists multilib_flags] {
	set multilib_flags [board_info $dest multilib_flags]
	if { "${multilib_flags}" != "" } {
	   untested asm-source.exp
	   return -1
	   return
	 }
}

standard_testfile asmsrc1.s asmsrc2.s

remote_exec build "rm -f ${subdir}/arch.inc"
remote_download host ${srcdir}/${subdir}/${asm-arch}.inc ${subdir}/arch.inc
remote_exec build "rm -f ${subdir}/note.inc"
remote_download host ${srcdir}/${subdir}/${asm-note}.inc ${subdir}/note.inc

if { [string equal ${asm-flags} ""] } {
    set asm-flags "-I${srcdir}/${subdir} $obj_include"
}

if { [string equal ${debug-flags} ""] } {
    set debug-flags "-gstabs"
}

# Allow the target board to override the debug flags.
if { [board_info $dest exists debug_flags] } then {
    set debug-flags "[board_info $dest debug_flags]"
}

# The debug flags are in the format that gcc expects:
# "-gdwarf-2", "-gstabs+", or "-gstabs".  To be compatible with the
# other languages in the test suite, we accept this input format.
# So the user can run the test suite with:
#
#   runtest --target_board unix/gdb:debug_flags=-gdwarf-2
#   make check RUNTESTFLAGS="--target_board unix/gdb:debug_flags=-gdwarf-2"
#
# However, the GNU assembler has different spellings than gcc.
# So I adjust the debug flags here.

# The GNU assembler spells "dwarf-2" as "dwarf2".
regsub "--" "-gdwarf-2" "${debug-flags}" "-gdwarf2" debug-flags

# The GNU assembler before 2.15 did not support "stabs+".
regsub "--" "-gstabs\[+\]" "${debug-flags}" "-gstabs" debug-flags

# The GNU assembler does not support level options like "-g2" or "-g3".
regsub "--" "-g\[0-9\]" "${debug-flags}" "" debug-flags

set asm1obj [standard_output_file asmrc1.o]
set asm2obj [standard_output_file asmrc2.o]

if {[target_assemble ${srcdir}/${subdir}/${srcfile} $asm1obj "${asm-flags} ${debug-flags}"] != ""} then {
     untested asm-source.exp
     return -1
}
if {[target_assemble ${srcdir}/${subdir}/${srcfile2} $asm2obj "${asm-flags} ${debug-flags}"] != ""} then {
     untested asm-source.exp
     return -1
}

# We deliberately don't use gdb_compile here to link together the
# assembled object files.  Using gdb_compile, and therefore the C
# compiler, is conceptually wrong, since we're testing raw assembler
# code here that provides its own startup code.  Using target_link
# also avoids a lot of problems on many systems, most notably on
# *-*-*bsd* and *-*-solaris2*.
if {[target_link [list $asm1obj $asm2obj] "${binfile}" ${link-flags}] != "" } then {
     untested asm-source.exp
     return -1
}

# Restore the target board linker script for HC11/HC12.
if { [istarget "m6811-*-*"] || [istarget "m6812-*-*"] } {
    set_board_info ldscript $old_ldscript
}

# Collect some line numbers.
set line_main       [expr [gdb_get_line_number "main start" "asmsrc1.s"] + 1]
set line_call_foo2  [expr [gdb_get_line_number "call foo2"  "asmsrc1.s"] + 1]
set line_search_comment [expr [gdb_get_line_number "search" "asmsrc1.s"] + 1]
set line_foo3       [expr [gdb_get_line_number "foo3 start" "asmsrc1.s"] + 1]
set line_main_exit  [expr [gdb_get_line_number "main exit"  "asmsrc1.s"] + 1]
set line_foo2       [expr [gdb_get_line_number "foo2 start" "asmsrc2.s"] + 1]
set line_call_foo3  [expr [gdb_get_line_number "call foo3"  "asmsrc2.s"] + 1]
set line_call_foo3_again [expr $line_call_foo3 + 1]
set line_foo2_leave [expr [gdb_get_line_number "foo2 leave" "asmsrc2.s"] + 1]

gdb_start
gdb_reinitialize_dir $srcdir/$subdir
gdb_load ${binfile}

#
# Run to `main' where we begin our tests.
#

if ![runto_main] then {
    gdb_suppress_tests
}

# Execute the `f' command and see if the result includes source info.
gdb_test "f" "asmsrc1\[.\]s:$line_main.*several_nops" "f at main"

# See if we properly `next' over a macro with several insns.
gdb_test "n" "$line_call_foo2\[ 	\]*.*foo2" "next over macro"

# See if we can properly `step' into a subroutine call.
gdb_test "s" "$line_foo2\[ 	\]*.*" "step into foo2"

# Test 'info target', and incidentally capture the entry point address.
set entry_point 0
gdb_test_multiple "info target" "info target" {
    -re "Symbols from .*asm-source.*Entry point: 0x(\[01232456789abcdefABCDEF\]+).*$gdb_prompt $" {
	set entry_point $expect_out(1,string)
	pass "info target"
    }
}

# Capture the start symbol (may be '_start' or 'start')
set entry_symbol ""
gdb_test_multiple "info symbol 0x$entry_point" "info symbol" {
    -re "info symbol 0x$entry_point\[\r\n\]+(\[^\r\n\]*) in section .*$gdb_prompt $" {
        # We match the echoed `info symbol' command here, to help us
        # reliably identify the beginning of the start symbol in the
        # command's output.  You might think we could just use '^' to
        # start matching at the beginning of the line, but
        # unfortunately, in Expect, '^' matches the beginning of the
        # input that hasn't been matched by any expect clause yet.  If
        # every expect clause consumes a complete line, along with its
        # terminating CR/LF, this is equivalent to the beginning of a
        # line.  But expect clauses that end with `.*' will consume as
        # much as happened to arrive from the TTY --- exactly where
        # they leave you depends on inter-process timing.  :(
	set entry_symbol $expect_out(1,string)
	pass "info symbol"
    }
}

# Now try a 'list' from the other source file.
gdb_test "list $entry_symbol" ".*gdbasm_startup.*" "list"

# Now try a source file search
gdb_test "search A routine for foo2 to call" \
	"$line_search_comment\[ \t\]+comment \"A routine for foo2 to call.\"" "search"

# See if `f' prints the right source file.
gdb_test "f" ".*asmsrc2\[.\]s:$line_foo2.*" "f in foo2"

# `next' one insn (or macro) to set up our stackframe (for the following bt).
gdb_test "n" "$line_call_foo3\[ 	\]*.*foo3" "n in foo2"

# See if a simple `bt' prints the right source files and 
# doesn't fall off the stack.

gdb_test "bt 10" \
	"\#0.*foo2.*asmsrc2\[.\]s:$line_call_foo3.*\#1.*main.*asmsrc1\[.\]s:$line_call_foo2" \
	"bt ALL in foo2"

# See if a capped `bt' prints the right source files.
gdb_test "bt 2" "\#0.*foo2.*asmsrc2\[.\]s:$line_call_foo3.*\#1.*main.*asmsrc1\[.\]s:$line_call_foo2.*" "bt 2 in foo2"

# Step into another subroutine which lives back in the first source file.
gdb_test "s" ".*" "s 2"

# Next over insns to set up the stack frame.
gdb_test "n" ".*" "n 2"

# Now see if a capped `bt' is correct.
gdb_test "bt 3" "\#0.*foo3.*asmsrc1\[.\]s:$line_foo3.*\#1.*foo2.*asmsrc2\[.\]s:$line_call_foo3.*\#2.*main.*asmsrc1\[.\]s:$line_call_foo2.*" "bt 3 in foo3"

# Try 'info source' from asmsrc1.s
gdb_test "info source" \
	"Current source file is .*asmsrc1.s.*Source language is asm.*" \
	"info source asmsrc1.s"

# Try 'finishing' from foo3
# Some architectures will have one or more instructions after the
# call instruction which still is part of the call sequence, so we
# must be prepared for a "finish" to show us the caller line
# again as well as the statement after.
gdb_test_multiple "finish" "finish from foo3" {
    -re "Run till exit from.*\[\r\n\]$line_call_foo3\[ \t\]+gdbasm_call foo3.*$gdb_prompt $" {
        pass "finish from foo3"
        gdb_test "s" ".*" "s after finish"
    }
    -re "Run till exit from.*\[\r\n\]$line_call_foo3_again\[ \t\]+gdbasm_call foo3.*$gdb_prompt $" {
        pass "finish from foo3"
    }
}

# Try 'info source' from asmsrc2.s
gdb_test "info source" \
	"Current source file is .*asmsrc2.s.*Source language is asm.*" \
	"info source asmsrc2.s"

# Try 'info sources'.  This can produce a lot of output on systems
# with dynamic linking, where the system's shared libc was compiled
# with debugging info; for example, on Linux, this produces 47kb of
# output.  So we consume it as we go.
set seen_asmsrc_1 0
set seen_asmsrc_2 0
gdb_test_multiple "info sources" "info sources" {
    -re "^\[^,\]*asmsrc1.s(, |\[\r\n\]+)" {
        set seen_asmsrc_1 1
        exp_continue
    }
    -re "^\[^,\]*asmsrc2.s(, |\[\r\n\]+)" {
        set seen_asmsrc_2 1
        exp_continue
    }
    -re ", " { 
        exp_continue
    }
    -re "$gdb_prompt $" {
        if {$seen_asmsrc_1 && $seen_asmsrc_2} {
            pass "info sources"
        } else {
            fail "info sources"
        }
    }
}
        

# Try 'info line'
gdb_test "info line" \
	"Line $line_call_foo3_again of.*asmsrc2.s.*starts at.*<\\.?foo2+.*> and ends at.*<\\.?foo2+.*>." \
	"info line"

# Try 'nexting' over next call to foo3
gdb_test "next" "$line_foo2_leave\[ \t\]+gdbasm_leave" "next over foo3"

# Try 'return' from foo2
# Like "finish", "return" command also can return to the caller
# line again or the statement after, depending on the architecture.
gdb_test_multiple "return" "return from foo2" {
    -re "Make (foo2|selected stack frame) return now\?.*" {
        send_gdb "y\n"
        exp_continue
    }
    -re "\#0.*main .*$line_call_foo2\[ \t\]+gdbasm_call foo2.*$gdb_prompt $" {
        pass "return from foo2"
        gdb_test "s" ".*" "s after return"
    }
    -re "\#0.*main .*$line_main_exit\[ \t\]+gdbasm_exit0.*$gdb_prompt $" {
        pass "return from foo2"
    }
}

# Disassemble something, check the output
proc test_dis { command var } {
    global gdb_prompt
    gdb_test_multiple "${command}" "${command}" {
	-re "${var}.*:.*(Cannot access|Bad address)" {
	    # The "disassembler" was only accessing the local
	    # executable and that would cause attempts to disassemble
	    # variables to fail (memory not valid).
	    fail "${command} (memory read error)"
	}
	-re "${var}.*:.*${gdb_prompt}" {
	    pass "${command}"
	}
    }
}

# See if we can look at a global variable, three ways
gdb_test "print globalvar" ".* = 11" "look at global variable"
test_dis "x/i &globalvar" "globalvar"
test_dis "disassem &globalvar, &globalvar+1" "globalvar"

# See if we can look at a static variable, three ways
gdb_test "print staticvar" ".* = 5" "look at static variable"
test_dis "x/i &staticvar" "staticvar"
test_dis "disassem &staticvar, &staticvar+1" "staticvar"

# See if we can look at a static function
gdb_test "disassem foostatic" ".*<\\+0>:.*End of assembler dump." \
	"look at static function"

remote_exec build "rm -f ${subdir}/arch.inc"
remote_exec build "rm -f ${subdir}/note.inc"
@


1.88
log
@Update years in copyright notice for the GDB files.

Two modifications:
  1. The addition of 2013 to the copyright year range for every file;
  2. The use of a single year range, instead of potentially multiple
     year ranges, as approved by the FSF.
@
text
@d197 1
a197 1
	   return;
@


1.87
log
@	* gdb.asm/asm-source.exp: Use standard_output_file,
	standard_testfile.  Construct .o files in proper subdir.
@
text
@d1 1
a1 1
# Copyright 1998, 2000-2004, 2007-2012 Free Software Foundation, Inc.
@


1.86
log
@2012-01-16  Pedro Alves  <palves@@redhat.com>

	Remove all calls to strace.
@
text
@d30 2
d37 1
a37 1
        set asm-flags "-no-mdebug -I${srcdir}/${subdir} -I${objdir}/${subdir}"
d77 1
a77 1
        set asm-flags "-mshort-double -m68hc11 --no-warn -I${srcdir}/${subdir} -I${objdir}/${subdir}"
d88 1
a88 1
        set asm-flags "-mshort-double -m68hc12 --no-warn -I${srcdir}/${subdir} -I${objdir}/${subdir}"
d103 1
a103 1
            set asm-flags "-a64 -I${srcdir}/${subdir} -I${objdir}/${subdir}"
d107 1
a107 1
            set asm-flags "-a32 -I${srcdir}/${subdir} -I${objdir}/${subdir}"
d120 1
a120 1
        set asm-flags "-xarch=v9 -I${srcdir}/${subdir} -I${objdir}/${subdir}"
d125 1
a125 1
       set asm-flags "-I${srcdir}/${subdir} -I${objdir}/${subdir} --no-warn"
d201 1
a201 4
set testfile "asm-source"
set binfile ${objdir}/${subdir}/${testfile}
set srcfile1 asmsrc1.s
set srcfile2 asmsrc2.s
d209 1
a209 1
    set asm-flags "-I${srcdir}/${subdir} -I${objdir}/${subdir}"
d241 4
a244 1
if {[target_assemble ${srcdir}/${subdir}/${srcfile1} asmsrc1.o "${asm-flags} ${debug-flags}"] != ""} then {
d248 1
a248 1
if {[target_assemble ${srcdir}/${subdir}/${srcfile2} asmsrc2.o "${asm-flags} ${debug-flags}"] != ""} then {
d259 1
a259 1
if {[target_link "asmsrc1.o asmsrc2.o" "${binfile}" ${link-flags}] != "" } then {
a268 2
remote_exec build "mv asmsrc1.o asmsrc2.o ${objdir}/${subdir}"

@


1.85
log
@Copyright year update in most files of the GDB Project.

gdb/ChangeLog:

        Copyright year update in most files of the GDB Project.
@
text
@a17 4
if $tracelevel then {
    strace $tracelevel
}

@


1.84
log
@gdb: testsuite: add Blackfin support

This fills out a few of the test places where needed for Blackfin targets.

Signed-off-by: Jie Zhang <jie.zhang@@analog.com>
Signed-off-by: Mike Frysinger <vapier@@gentoo.org>
@
text
@d1 1
a1 2
# Copyright 1998, 2000, 2001, 2002, 2003, 2004, 2007, 2008, 2009, 2010, 2011
# Free Software Foundation, Inc.
@


1.84.2.1
log
@Copyright year update in most files of the GDB Project.

gdb/ChangeLog:

        Copyright year update in most files of the GDB Project.
@
text
@d1 2
a2 1
# Copyright 1998, 2000-2004, 2007-2012 Free Software Foundation, Inc.
@


1.83
log
@2011-01-19  Yao Qi  <yao@@codesourcery.com>

	* gdb.asm/asm-source.exp: Replace ARM target triplet with a
	canonical form.
	Remove "xscale-*-*"
	* gdb.xml/tdesc-regs.exp: Likewise.
	* gdb.python/py-section-script.exp: Replace ARM target triplet
	with canonical form.
	Match arm*-*-symbianelf*.
	* gdb.base/dup-sect.exp: Likewise.
	* lib/dwarf.exp: New.
	* gdb.dwarf2/callframecfa.exp: Check dwarf2 support by routine
	dwarf2_support.
	* gdb.dwarf2/dup-psym.exp: Likewise.
	* gdb.dwarf2/dw2-ada-ffffffff.exp: Likewise.
	* gdb.dwarf2/dw2-anonymous-func.exp: Likewise.
	* gdb.dwarf2/dw2-bad-parameter-type.exp: Likewise.
	* gdb.dwarf2/dw2-basic.exp: Likewise.
	* gdb.dwarf2/dw2-compressed.exp: Likewise.
	* gdb.dwarf2/dw2-const.exp: Likewise.
	* gdb.dwarf2/dw2-cp-infcall-ref-static.exp: Likewise.
	* gdb.dwarf2/dw2-cu-size.exp: Likewise.
	* gdb.dwarf2/dw2-double-set-die-type.exp: Likewise.
	* gdb.dwarf2/dw2-empty-namespace.exp: Likewise.
	* gdb.dwarf2/dw2-filename.exp: Likewise.
	* gdb.dwarf2/dw2-inheritance.exp: Likewise.
	* gdb.dwarf2/dw2-inline-param.exp: Likewise.
	* gdb.dwarf2/dw2-intercu.exp: Likewise.
	* gdb.dwarf2/dw2-intermix.exp: Likewise.
	* gdb.dwarf2/dw2-modula2-self-type.exp: Likewise.
	* gdb.dwarf2/dw2-noloc.exp: Likewise.
	* gdb.dwarf2/dw2-op-call.exp: Likewise.
	* gdb.dwarf2/dw2-producer.exp: Likewise.
	* gdb.dwarf2/dw2-ranges.exp: Likewise.
	* gdb.dwarf2/dw2-ref-missing-frame.exp: Likewise.
	* gdb.dwarf2/dw2-stack-boundary.exp: Likewise.
	* gdb.dwarf2/dw2-strp.exp: Likewise.
	* gdb.dwarf2/dw2-unresolved.exp: Likewise.
	* gdb.dwarf2/implptr.exp: Likewise.
	* gdb.dwarf2/mac-fileno.exp: Likewise.
	* gdb.dwarf2/member-ptr-forwardref.exp: Likewise.
	* gdb.dwarf2/pieces.exp: Likewise.
	* gdb.dwarf2/pr11465.exp: Likewise.
	* gdb.dwarf2/valop.exp: Likewise.
	* gdb.dwarf2/watch-notconst.exp: Likewise.
	* gdb.mi/dw2-ref-missing-frame.exp: Likewise.
@
text
@d46 3
@


1.82
log
@run copyright.sh for 2011.
@
text
@d43 1
a43 4
    "*arm-*-*" {
        set asm-arch arm
    }
    "xscale-*-*" {
@


1.81
log
@2010-11-24  Edjunior Machado  <emachado@@br.ibm.com>

	* gdb.asm/asm-source.exp: Add new target "powerpc64"; expect leading `.'
	on ppc64's symbols; "finish" and "return" commands must accept to
	show the caller line again as well as the line after.
	* gdb.asm/powerpc64.inc: New file.
@
text
@d1 1
a1 1
# Copyright 1998, 2000, 2001, 2002, 2003, 2004, 2007, 2008, 2009, 2010
@


1.80
log
@2010-06-08  Michael Snyder  <msnyder@@vmware.com>

	* gdb.ada/assign_1.exp: Use ".*" instead of "" as wildcard regexp.
	* gdb.ada/boolean_expr.exp:
	* gdb.ada/frame_args.exp: Ditto.
	* gdb.ada/lang_switch.exp: Ditto.
	* gdb.ada/ptype_arith_binop.exp: Ditto.
	* gdb.ada/ref_param.exp: Ditto.
	* gdb.ada/type_coercion.exp:Ditto.

	* gdb.asm/asm-source.exp: Ditto.

	* gdb.base/attach.exp: Ditto.
	* gdb.base/bitfields2.exp: Ditto.
	* gdb.base/call-signal-resume.exp: Ditto.
	* gdb.base/callfuncs.exp: Ditto.
	* gdb.base/commands.exp: Ditto.
	* gdb.base/dbx.exp: Ditto.
	* gdb.base/default.exp: Ditto.
	* gdb.base/dump.exp: Ditto.
	* gdb.base/exprs.exp: Ditto.
	* gdb.base/freebpcmd.exp: Ditto.
	* gdb.base/interrupt.exp: Ditto.
	* gdb.base/list.exp: Ditto.
	* gdb.base/long_long.exp: Ditto.
	* gdb.base/maint.exp: Ditto.
	* gdb.base/ptype.exp: Ditto.
	* gdb.base/return.exp: Ditto.
	* gdb.base/setshow.exp: Ditto.
	* gdb.base/sigbpt.exp: Ditto.
	* gdb.base/sigrepeat.exp: Ditto.

	* gdb.cp/classes.exp: Ditto.

	* gdb.dwarf2/dw2-restore.exp: Ditto.

	* gdb.gdb/selftest.exp: Ditto.

	* gdb.multi/base.exp: Ditto.
	* gdb.multi/bkpt-multi-exec.exp: Ditto.

	* gdb.python/py-block.exp: Ditto.
	* gdb.python/py-prettyprint.exp: Ditto.
	* gdb.python/py-template.exp: Ditto.

	* gdb.server/ext-attach.exp: Ditto.
	* gdb.server/ext-run.exp: Ditto.
	* gdb.server/server-mon.exp: Ditto.

	* gdb.threads/fork-thread-pending.exp: Ditto.
	* gdb.threads/hand-call-in-threads.exp: Ditto.
	* gdb.threads/interrupted-hand-call.exp: Ditto.
	* gdb.threads/linux-dp.exp: Ditto.
	* gdb.threads/manythreads.exp: Ditto.
	* gdb.threads/print-threads.exp: Ditto.
	* gdb.threads/pthreads.exp: Ditto.
	* gdb.threads/schedlock.exp: Ditto.
	* gdb.threads/thread-unwindonsignal.exp: Ditto.
	* gdb.threads/threadapply.exp: Ditto.
@
text
@d104 9
a112 1
        set asm-arch powerpc
d373 13
a385 2
gdb_test "finish" "Run till exit from.*\[\r\n\]$line_call_foo3_again\[ \t\]+gdbasm_call foo3" \
	"finish from foo3"
d422 1
a422 1
	"Line $line_call_foo3_again of.*asmsrc2.s.*starts at.*<foo2+.*> and ends at.*<foo2+.*>." \
d429 15
a443 2
gdb_test "return" "\#0  main .*$line_main_exit\[ \t\]+gdbasm_exit0" "return from foo2" \
	"Make (foo2|selected stack frame) return now\?.*" "y"
@


1.79
log
@2010-05-25  Michael Snyder  <msnyder@@vmware.com>

	* gdb.ada/formatted_ref.exp: Replace send_gdb with gdb_test.

	* gdb.asm/asm-source.exp: Replace send_gdb with gdb_test.

	* gdb.base/a2-run.exp: Replace send_gdb with gdb_test.
	* gdb.base/all-bin.exp: Replace send_gdb with gdb_test.
	* gdb.base/annota1.exp: Replace send_gdb with gdb_test.
	* gdb.base/annota3.exp: Replace send_gdb with gdb_test.
	* gdb.base/assign.exp: Replace send_gdb with gdb_test.
	* gdb.base/attach.exp: Replace send_gdb with gdb_test.
	* gdb.base/bitfields.exp: Replace send_gdb with gdb_test.
	* gdb.base/bitfields2.exp: Replace send_gdb with gdb_test.
	* gdb.base/bitops.exp: Replace send_gdb with gdb_test.
@
text
@d351 1
a351 1
gdb_test "s" "" "s 2"
d354 1
a354 1
gdb_test "n" "" "n 2"
@


1.78
log
@Do not set prms_id/bug_id anymore.

2010-05-05  Joel Brobecker  <brobecker@@adacore.com>

	Remove the use of prms_id and bug_id throughout the testsuite.
@
text
@d300 1
a300 2
send_gdb "info target\n"
gdb_expect {
a304 6
    -re ".*$gdb_prompt $" {
	fail "info target"
    }
    timeout {
	fail "info target (timeout)"
    }
d309 1
a309 2
send_gdb "info symbol 0x$entry_point\n"
gdb_expect {
a324 6
    -re ".*$gdb_prompt $" {
	fail "info symbol"
    }
    timeout {
	fail "info symbol (timeout)"
    }
a376 1
send_gdb "info sources\n"
d379 1
a379 1
gdb_expect {
a397 3
    timeout {
            fail "info sources (timeout)"
    }
d416 1
a416 2
    send_gdb "${command}\n"
    gdb_expect {
a425 3
	timeout {
	    fail "${command} (timeout)"
	}
@


1.77
log
@Update copyright year in most headers.

Automatic update by copyright.sh.
@
text
@a27 2
set prms_id 0
set bug_id 0
@


1.76
log
@gdb/ChangeLog:

2009-11-23  Paul Pluzhnikov  <ppluzhnikov@@google.com>

	* cli/cli-cmds.c (disassemble_command): Split on comma.
	(init_cli_cmds): Update help.
	* NEWS: Mention incompatible change to 'disassemble'.

gdb/testsuite/ChangeLog:

2009-11-23  Paul Pluzhnikov  <ppluzhnikov@@google.com>

	* gdb.asm/asm-source.exp: Adjust.
	* gdb.base/help.exp: Adjust.

gdb/doc/ChangeLog:

2009-11-23  Paul Pluzhnikov  <ppluzhnikov@@google.com>

	* gdb.texinfo (Machine Code): Adjust.
@
text
@d1 1
a1 1
# Copyright 1998, 2000, 2001, 2002, 2003, 2004, 2007, 2008, 2009
@


1.75
log
@2009-10-22  Paul Pluzhnikov  <ppluzhnikov@@google.com>

	* disasm.h (DISASSEMBLY_OMIT_FNAME) New define.
	(gdb_disassembly): Correct parameter name.
	* disasm.c (dump_insns): Adjust.
	(gdb_disassembly): Fix indentation.
	* cli/cli-cmds.c (disassemble_command): Adjust.

doc/ChangeLog:

2009-10-22  Paul Pluzhnikov  <ppluzhnikov@@google.com>

	* gdb.texinfo (Machine Code): Mention function name in disasssembly
	and adjust example.

testsuite/ChangeLog:

2009-10-22  Paul Pluzhnikov  <ppluzhnikov@@google.com>

	* gdb.asm/asm-source.exp: Adjust.
@
text
@d456 1
a456 1
test_dis "disassem &globalvar &globalvar+1" "globalvar"
d461 1
a461 1
test_dis "disassem &staticvar &staticvar+1" "staticvar"
@


1.74
log
@gdb/
2009-05-18  Jon Beniston <jon@@beniston.com>

        * MAINTAINERS: Add lm32 target.
        * Makefile.in: Add lm32 dependencies.
        * NEWS: Indicate lm32 is a new target.
        * configure.tgt: Add lm32 targets.
        * lm32-tdep.c: New file.

gdb/testsuite
2009-05-18  Jon Beniston <jon@@beniston.com>

        * gdb.asm/asm-source.exp: Add lm32 target.

include/gdb/
2009-05-18  Jon Beniston <jon@@beniston.com>

        * sim-lm32.h: New file.

sim/
2009-05-18  Jon Beniston <jon@@beniston.com>

        * MAINTAINERS: Add Jon Beniston as maintainer of lm32 sim.
        * configure.ac: Add lm32 target.
        * lm32: New directory.

sim/common
2009-05-18  Jon Beniston <jon@@beniston.com>

        * gennltvals.sh: Add lm32 target.
        * nltvals.def: Add lm32 syscall definitions.

sim/lm32/
2009-05-18  Jon Beniston <jon@@beniston.com>

        * Makefile.in: New file.
        * arch.c: New file.
        * arch.h: New file.
        * config.in: New file.
        * configure: New file.
        * configure.ac: New file.
        * cpu.c: New file.
        * cpu.h: New file.
        * cpuall.h: New file.
        * decode.c: New file.
        * decode.h: New file.
        * dv-lm32cpu.c: New file.
        * dv-lm32timer.c: New file.
        * dv-lm32uart.c: New file.
        * lm32.c: New file.
        * lm32-sim.h: New file.
        * mloop.in: New file.
        * model.c: New file.
        * sem.c: New file.
        * sem-switch.c: New file.
        * sim-if.c: New file.
        * sim-main.c: New file.
        * tconfig.in: New file.
        * traps.c: New file.
        * user.c: New file.
@
text
@d464 1
a464 1
gdb_test "disassem foostatic" ".*<foostatic\\+0>:.*End of assembler dump." \
@


1.73
log
@        Updated copyright notices for most files.
@
text
@d67 3
@


1.72
log
@	Fix for PR gdb/1543.
	* gdb.base/sep.exp: `sep-proc.c' absolute line numbers replaced with
	$LOCATION.
	(location): New variable.
	* config/cfdbug.exp, config/d10v.exp, config/dve.exp, config/i960.exp,
	config/m32r.exp, config/mn10300-eval.exp, config/proelf.exp,
	config/rom68k.exp, config/sh.exp, config/unix.exp, config/vr4300.exp,
	config/vr5000.exp, config/vxworks.exp, gdb.arch/altivec-regs.exp,
	gdb.arch/e500-abi.exp, gdb.arch/e500-regs.exp, gdb.asm/asm-source.exp,
	gdb.base/a2-run.exp, gdb.base/advance.exp, gdb.base/all-bin.exp,
	gdb.base/args.exp, gdb.base/arithmet.exp, gdb.base/assign.exp,
	gdb.base/async.exp, gdb.base/auxv.exp, gdb.base/bigcore.c,
	gdb.base/bigcore.exp, gdb.base/bitfields.exp, gdb.base/bitops.exp,
	gdb.base/break.c, gdb.base/break.exp, gdb.base/break1.c,
	gdb.base/call-ar-st.exp, gdb.base/call-rt-st.exp,
	gdb.base/call-strs.exp, gdb.base/callfuncs.c, gdb.base/callfuncs.exp,
	gdb.base/checkpoint.exp, gdb.base/chng-syms.exp,
	gdb.base/code-expr.exp, gdb.base/commands.exp, gdb.base/completion.exp,
	gdb.base/complex.exp, gdb.base/cond-expr.exp, gdb.base/condbreak.exp,
	gdb.base/consecutive.exp, gdb.base/corefile.exp, gdb.base/cvexpr.c,
	gdb.base/cvexpr.exp, gdb.base/dbx.exp, gdb.base/default.exp,
	gdb.base/define.exp, gdb.base/del.c, gdb.base/detach.exp,
	gdb.base/display.exp, gdb.base/dump.exp, gdb.base/echo.exp,
	gdb.base/environ.exp, gdb.base/eval-skip.exp, gdb.base/exprs.exp,
	gdb.base/fileio.exp, gdb.base/find.exp, gdb.base/finish.exp,
	gdb.base/funcargs.exp, gdb.base/gcore-buffer-overflow.exp,
	gdb.base/gcore.exp, gdb.base/gdb1555.exp, gdb.base/gdbvars.exp,
	gdb.base/help.exp, gdb.base/huge.exp, gdb.base/info-proc.exp,
	gdb.base/interrupt.exp, gdb.base/jump.exp, gdb.base/langs.exp,
	gdb.base/lineinc.exp, gdb.base/list.exp, gdb.base/macscp.exp,
	gdb.base/maint.exp, gdb.base/mips_pro.exp, gdb.base/miscexprs.exp,
	gdb.base/nodebug.exp, gdb.base/nofield.c, gdb.base/opaque.exp,
	gdb.base/overlays.exp, gdb.base/page.exp, gdb.base/pc-fp.exp,
	gdb.base/pending.c, gdb.base/pendshr.c, gdb.base/pointers.exp,
	gdb.base/psymtab.exp, gdb.base/ptype.exp, gdb.base/randomize.c,
	gdb.base/readline.exp, gdb.base/recurse.exp, gdb.base/regs.exp,
	gdb.base/relational.exp, gdb.base/relocate.exp, gdb.base/remote.exp,
	gdb.base/reread.exp, gdb.base/return.exp, gdb.base/return2.exp,
	gdb.base/scope.exp, gdb.base/sect-cmd.exp, gdb.base/sep-proc.c,
	gdb.base/sep.c, gdb.base/sep.exp, gdb.base/sepdebug.c,
	gdb.base/sepdebug.exp, gdb.base/setshow.exp, gdb.base/shlib-call.exp,
	gdb.base/sigaltstack.c, gdb.base/so-indr-cl.exp, gdb.base/solib.exp,
	gdb.base/source.exp, gdb.base/start.c, gdb.base/step-bt.c,
	gdb.base/step-line.exp, gdb.base/structs.c, gdb.base/structs.exp,
	gdb.base/structs2.exp, gdb.base/term.exp, gdb.base/twice.exp,
	gdb.base/type-opaque.exp, gdb.base/until.exp,
	gdb.base/value-double-free.c, gdb.base/varargs.exp,
	gdb.base/watchpoint.exp, gdb.base/whatis-exp.exp, gdb.disasm/am33.exp,
	gdb.disasm/h8300s.exp, gdb.disasm/hppa.exp, gdb.disasm/mn10300.exp,
	gdb.disasm/sh3.exp, gdb.disasm/t01_mov.exp, gdb.disasm/t02_mova.exp,
	gdb.disasm/t03_add.exp, gdb.disasm/t04_sub.exp, gdb.disasm/t05_cmp.exp,
	gdb.disasm/t06_ari2.exp, gdb.disasm/t07_ari3.exp,
	gdb.disasm/t08_or.exp, gdb.disasm/t09_xor.exp, gdb.disasm/t10_and.exp,
	gdb.disasm/t11_logs.exp, gdb.disasm/t12_bit.exp,
	gdb.disasm/t13_otr.exp, gdb.fortran/exprs.exp, gdb.fortran/types.exp,
	gdb.hp/gdb.aCC/exception.exp, gdb.hp/gdb.aCC/optimize.exp,
	gdb.hp/gdb.aCC/watch-cmd.exp, gdb.hp/gdb.base-hp/callfwmall.exp,
	gdb.hp/gdb.base-hp/dollar.exp, gdb.hp/gdb.base-hp/hwwatchbus.exp,
	gdb.hp/gdb.base-hp/pxdb.exp, gdb.hp/gdb.base-hp/reg-pa64.exp,
	gdb.hp/gdb.base-hp/reg.exp, gdb.hp/gdb.base-hp/sized-enum.exp,
	gdb.hp/gdb.base-hp/so-thresh.exp, gdb.hp/gdb.compat/xdb1.exp,
	gdb.hp/gdb.compat/xdb2.exp, gdb.hp/gdb.compat/xdb3.exp,
	gdb.java/jmisc.exp, gdb.java/jv-exp.exp, gdb.java/jv-print.exp,
	gdb.mi/gdb669.exp, gdb.mi/gdb680.exp, gdb.mi/gdb701.exp,
	gdb.mi/gdb792.exp, gdb.mi/mi-basics.exp, gdb.mi/mi-console.exp,
	gdb.mi/mi-hack-cli.exp, gdb.mi/mi-pending.c, gdb.mi/mi-pendshr.c,
	gdb.mi/mi-pthreads.exp, gdb.mi/mi-read-memory.exp, gdb.mi/mi-regs.exp,
	gdb.mi/mi-syn-frame.exp, gdb.mi/mi-until.exp, gdb.mi/mi2-basics.exp,
	gdb.mi/mi2-console.exp, gdb.mi/mi2-hack-cli.exp,
	gdb.mi/mi2-pthreads.exp, gdb.mi/mi2-read-memory.exp,
	gdb.mi/mi2-regs.exp, gdb.mi/mi2-syn-frame.exp, gdb.mi/mi2-until.exp,
	gdb.pascal/types.exp, gdb.stabs/weird.exp,
	gdb.threads/gcore-thread.exp, gdb.threads/manythreads.exp,
	gdb.threads/print-threads.exp, gdb.threads/pthreads.exp,
	gdb.threads/schedlock.exp, gdb.threads/step.exp, gdb.threads/step2.exp,
	gdb.threads/switch-threads.exp, gdb.threads/thread-specific.exp,
	gdb.threads/thread_check.exp, gdb.threads/thread_events.exp,
	gdb.threads/tls-nodebug.exp, gdb.threads/tls-shared.exp,
	gdb.threads/tls.exp, gdb.trace/actions.exp, gdb.trace/backtrace.exp,
	gdb.trace/circ.exp, gdb.trace/collection.exp, gdb.trace/deltrace.exp,
	gdb.trace/infotrace.exp, gdb.trace/limits.exp, gdb.trace/packetlen.exp,
	gdb.trace/passc-dyn.exp, gdb.trace/passcount.exp, gdb.trace/report.exp,
	gdb.trace/save-trace.exp, gdb.trace/tfind.exp, gdb.trace/tracecmd.exp,
	gdb.trace/while-dyn.exp, gdb.trace/while-stepping.exp,
	lib/mi-support.exp, lib/trace-support.exp: Remove reference
	to bug-gdb@@prep.ai.mit.edu .
@
text
@d1 1
a1 1
# Copyright 1998, 2000, 2001, 2002, 2003, 2004, 2007, 2008
@


1.71
log
@	Updated copyright notices for most files.
@
text
@a15 3
# 
# Please email any bugs, comments, and/or additions to this file to:
# bug-gdb@@prep.ai.mit.edu
@


1.71.10.1
log
@Check in ARCompact simulator.  A valid configuration is arc-elf.
This is not quite finished and has most likely a few files that are
obsolete & not used, but it's good enough to run gcc regression tests.
@
text
@a50 6
    "arc-*-*" {
	set asm-arch arc
        set asm-flags "-I${srcdir}/${subdir} -I${objdir}/${subdir}"
	set debug-flags "-gdwarf-2"
	append link-flags " -marclinux"
    }
@


1.71.10.2
log
@gdb/insight for ARCompact (from Richard Stuckey)
@
text
@d51 6
@


1.70
log
@	* gdb.asm/asm-source.exp: Use gdb_get_line_number, instead of
	hard-coding source line numbers into the test.
	* gdb.asm/asmsrc1.s, gdb.asm/asmsrc2.s: Add comments for
	gdb_get_line_number to find.
@
text
@d1 1
a1 1
# Copyright 1998, 2000, 2001, 2002, 2003, 2004, 2007
@


1.69
log
@        Switch the license of all .exp files to GPLv3.
        Switch the license of all .f and .f90 files to GPLv3.
        Switch the license of all .s and .S files to GPLv3.
@
text
@d268 10
d292 1
a292 1
gdb_test "f" "asmsrc1\[.\]s:29.*several_nops" "f at main"
d295 1
a295 1
gdb_test "n" "33\[ 	\]*.*foo2" "next over macro"
d298 1
a298 1
gdb_test "s" "8\[ 	\]*.*" "step into foo2"
d348 1
a348 1
	"40\[ \t\]+comment \"A routine for foo2 to call.\"" "search"
d351 1
a351 1
gdb_test "f" ".*asmsrc2\[.\]s:8.*" "f in foo2"
d354 1
a354 1
gdb_test "n" "12\[ 	\]*.*foo3" "n in foo2"
d360 1
a360 1
	"\#0.*foo2.*asmsrc2\[.\]s:12.*\#1.*main.*asmsrc1\[.\]s:33" \
d364 1
a364 1
gdb_test "bt 2" "\#0.*foo2.*asmsrc2\[.\]s:12.*\#1.*main.*asmsrc1\[.\]s:33.*" "bt 2 in foo2"
d373 1
a373 1
gdb_test "bt 3" "\#0.*foo3.*asmsrc1\[.\]s:45.*\#1.*foo2.*asmsrc2\[.\]s:12.*\#2.*main.*asmsrc1\[.\]s:33.*" "bt 3 in foo3"
d381 1
a381 1
gdb_test "finish" "Run till exit from.*\[\r\n\]13\[ \t\]+gdbasm_call foo3" \
d423 1
a423 1
	"Line 13 of.*asmsrc2.s.*starts at.*<foo2+.*> and ends at.*<foo2+.*>." \
d427 1
a427 1
gdb_test "next" "17\[ \t\]+gdbasm_leave" "next over foo3"
d430 1
a430 1
gdb_test "return" "\#0  main .*37\[ \t\]+gdbasm_exit0" "return from foo2" \
@


1.68
log
@	* MAINTAINERS: Remove d10v entry.
	* Makefile.in (SFILES): Remove dwarfread.c.
	(COMMON_OBS): Remove dwarfread.o.
	(gdb_sim_d10v_h, abug-rom.o, cpu32bug-rom.o, d10v-tdep.o, dwarfread.o)
	(remote-est.o, rom68k-rom.o): Delete.
	* NEWS: Mention removal of d10v, target abug, target cpu32bug,
	target est, target rom68k, and DWARF 1.
	* configure.tgt: Mark d10v as removed.
	* dwarf2read.c: Doc update.
	* elfread.c (struct elfinfo): Remove dboffset, dbsize, lnoffset,
	and lnsize.
	(elf_locate_sections): Do not set them.
	(elf_symfile_read): Do not call dwarf_build_psymtabs.
	* symfile.h (dwarf_build_psymtabs): Delete prototype.
	* config/m68k/monitor.mt (TDEPFILES): Prune.
	* abug-rom.c, cpu32bug-rom.c, d10v-tdep.c, dwarfread.c,
	remote-est.c, rom68k-rom.c, config/d10v/d10v.mt: Delete.

	* gdb.texinfo (M68K): Remove obsolete ROM monitors.
	* gdbint.texinfo (DWARF 1): Delete section and other dwarfread.c
	references.

	* gdb.asm/asm-source.exp: Remove d10v case.
	* lib/gdb.exp (skip_cplus_tests): Likewise.
	* gdb.asm/d10v.inc: Deleted.
@
text
@d6 1
a6 1
# the Free Software Foundation; either version 2 of the License, or
d8 1
a8 1
# 
d13 1
a13 1
# 
d15 1
a15 2
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  
@


1.67
log
@Copyright updates for 2007.
@
text
@a54 3
    "d10v-*-*" {
        set asm-arch d10v
    }
@


1.66
log
@	* gdb.asm/asm-source.exp: Add "spu*-*-*" target.
	* gdb.asm/spu.inc: New file.
	* gdb.base/term.exp: Disable if [target_info exists noargs].
	* gdb.gdb/complaints.exp: Disable if ![isnative].
	* gdb.gdb/selftest.exp: Likewise.
	* gdb.gdb/observer.exp: Likewise.
	* gdb.gdb/xfullpath.exp: Likewise.
	* gdb.base/attach.exp: Disable on SPU target.
	* gdb.cp/bs145503.exp: Likewise.
	* gdb.cp/exception.exp: Likewise.
	* gdb.cp/userdef.exp: Likewise.
@
text
@d1 2
a2 1
# Copyright 1998, 2000, 2001, 2002, 2003, 2004 Free Software Foundation, Inc.
@


1.65
log
@	* gdb.arch/altivec-abi.exp: Replace gdb_suppress_entire_file with
	untested followed by return combination.
	* gdb.arch/altivec-regs.exp: Likewise.
	* gdb.arch/e500-abi.exp: Likewise.
	* gdb.arch/e500-regs.exp: Likewise.
	* gdb.arch/gdb1291.exp: Likewise.
	* gdb.arch/gdb1431.exp: Likewise.
	* gdb.arch/gdb1558.exp: Likewise.
	* gdb.arch/i386-prologue.exp: Likewise.
	* gdb.arch/i386-unwind.exp: Likewise.
	* gdb.asm/asm-source.exp: Likewise.
	* gdb.base/a2-run.exp: Likewise.
	* gdb.base/advance.exp: Likewise.
	* gdb.base/all-bin.exp: Likewise.
	* gdb.base/annota1.exp: Likewise.
	* gdb.base/annota3.exp: Likewise.
	* gdb.base/args.exp: Likewise.
	* gdb.base/arithmet.exp: Likewise.
	* gdb.base/assign.exp: Likewise.
	* gdb.base/async.exp: Likewise.
	* gdb.base/attach.exp: Likewise.
	* gdb.base/bang.exp: Likewise.
	* gdb.base/bigcore.exp: Likewise.
	* gdb.base/bitfields.exp: Likewise.
	* gdb.base/bitfields2.exp: Likewise.
	* gdb.base/break.exp: Likewise.
	* gdb.base/call-sc.exp: Likewise.
	* gdb.base/call-strs.exp: Likewise.
	* gdb.base/callfuncs.exp: Likewise.
	* gdb.base/checkpoint.exp: Likewise.
	* gdb.base/chng-syms.exp: Likewise.
	* gdb.base/code-expr.exp: Likewise.
	* gdb.base/commands.exp: Likewise.
	* gdb.base/completion.exp: Likewise.
	* gdb.base/cond-expr.exp: Likewise.
	* gdb.base/condbreak.exp: Likewise.
	* gdb.base/consecutive.exp: Likewise.
	* gdb.base/constvars.exp: Likewise.
	* gdb.base/corefile.exp: Likewise.
	* gdb.base/cvexpr.exp: Likewise.
	* gdb.base/dbx.exp: Likewise.
	* gdb.base/define.exp: Likewise.
	* gdb.base/detach.exp: Likewise.
	* gdb.base/display.exp: Likewise.
	* gdb.base/dump.exp: Likewise.
	* gdb.base/ena-dis-br.exp: Likewise.
	* gdb.base/ending-run.exp: Likewise.
	* gdb.base/environ.exp: Likewise.
	* gdb.base/eval-skip.exp: Likewise.
	* gdb.base/exprs.exp: Likewise.
	* gdb.base/fileio.exp: Likewise.
	* gdb.base/finish.exp: Likewise.
	* gdb.base/float.exp: Likewise.
	* gdb.base/foll-exec.exp: Likewise.
	* gdb.base/foll-fork.exp: Likewise.
	* gdb.base/foll-vfork.exp: Likewise.
	* gdb.base/freebpcmd.exp: Likewise.
	* gdb.base/funcargs.exp: Likewise.
	* gdb.base/gcore.exp: Likewise.
	* gdb.base/gdb1090.exp: Likewise.
	* gdb.base/gdb1250.exp: Likewise.
	* gdb.base/huge.exp: Likewise.
	* gdb.base/info-proc.exp: Likewise.
	* gdb.base/interrupt.exp: Likewise.
	* gdb.base/jump.exp: Likewise.
	* gdb.base/langs.exp: Likewise.
	* gdb.base/lineinc.exp: Likewise.
	* gdb.base/list.exp: Likewise.
	* gdb.base/logical.exp: Likewise.
	* gdb.base/long_long.exp: Likewise.
	* gdb.base/macscp.exp: Likewise.
	* gdb.base/maint.exp: Likewise.
	* gdb.base/mips_pro.exp: Likewise.
	* gdb.base/miscexprs.exp: Likewise.
	* gdb.base/multi-forks.exp: Likewise.
	* gdb.base/opaque.exp: Likewise.
	* gdb.base/overlays.exp: Likewise.
	* gdb.base/pc-fp.exp: Likewise.
	* gdb.base/pointers.exp: Likewise.
	* gdb.base/printcmds.exp: Likewise.
	* gdb.base/psymtab.exp: Likewise.
	* gdb.base/ptype.exp: Likewise.
	* gdb.base/recurse.exp: Likewise.
	* gdb.base/relational.exp: Likewise.
	* gdb.base/relocate.exp: Likewise.
	* gdb.base/remote.exp: Likewise.
	* gdb.base/reread.exp: Likewise.
	* gdb.base/restore.exp: Likewise.
	* gdb.base/return.exp: Likewise.
	* gdb.base/return2.exp: Likewise.
	* gdb.base/scope.exp: Likewise.
	* gdb.base/sect-cmd.exp: Likewise.
	* gdb.base/sep.exp: Likewise.
	* gdb.base/sepdebug.exp: Likewise.
	* gdb.base/setshow.exp: Likewise.
	* gdb.base/setvar.exp: Likewise.
	* gdb.base/sigall.exp: Likewise.
	* gdb.base/sigbpt.exp: Likewise.
	* gdb.base/signals.exp: Likewise.
	* gdb.base/signull.exp: Likewise.
	* gdb.base/sizeof.exp: Likewise.
	* gdb.base/solib.exp: Likewise.
	* gdb.base/step-line.exp: Likewise.
	* gdb.base/step-test.exp: Likewise.
	* gdb.base/structs.exp: Likewise.
	* gdb.base/structs2.exp: Likewise.
	* gdb.base/term.exp: Likewise.
	* gdb.base/twice.exp: Likewise.
	* gdb.base/until.exp: Likewise.
	* gdb.base/varargs.exp: Likewise.
	* gdb.base/volatile.exp: Likewise.
	* gdb.base/watchpoint.exp: Likewise.
	* gdb.base/whatis-exp.exp: Likewise.
	* gdb.base/whatis.exp: Likewise.
	* gdb.cp/ambiguous.exp: Likewise.
	* gdb.cp/annota2.exp: Likewise.
	* gdb.cp/annota3.exp: Likewise.
	* gdb.cp/bool.exp: Likewise.
	* gdb.cp/breakpoint.exp: Likewise.
	* gdb.cp/casts.exp: Likewise.
	* gdb.cp/class2.exp: Likewise.
	* gdb.cp/classes.exp: Likewise.
	* gdb.cp/cplusfuncs.exp: Likewise.
	* gdb.cp/ctti.exp: Likewise.
	* gdb.cp/derivation.exp: Likewise.
	* gdb.cp/exception.exp: Likewise.
	* gdb.cp/gdb1355.exp: Likewise.
	* gdb.cp/hang.exp: Likewise.
	* gdb.cp/inherit.exp: Likewise.
	* gdb.cp/local.exp: Likewise.
	* gdb.cp/m-data.exp: Likewise.
	* gdb.cp/m-static.exp: Likewise.
	* gdb.cp/member-ptr.exp: Likewise.
	* gdb.cp/method.exp: Likewise.
	* gdb.cp/misc.exp: Likewise.
	* gdb.cp/namespace.exp: Likewise.
	* gdb.cp/overload.exp: Likewise.
	* gdb.cp/ovldbreak.exp: Likewise.
	* gdb.cp/pr-1023.exp: Likewise.
	* gdb.cp/pr-1210.exp: Likewise.
	* gdb.cp/pr-574.exp: Likewise.
	* gdb.cp/printmethod.exp: Likewise.
	* gdb.cp/psmang.exp: Likewise.
	* gdb.cp/ref-params.exp: Likewise.
	* gdb.cp/ref-types.exp: Likewise.
	* gdb.cp/rtti.exp: Likewise.
	* gdb.cp/templates.exp: Likewise.
	* gdb.cp/try_catch.exp: Likewise.
	* gdb.cp/userdef.exp: Likewise.
	* gdb.cp/virtfunc.exp: Likewise.
	* gdb.disasm/am33.exp: Likewise.
	* gdb.disasm/h8300s.exp: Likewise.
	* gdb.disasm/mn10300.exp: Likewise.
	* gdb.disasm/sh3.exp: Likewise.
	* gdb.disasm/t01_mov.exp: Likewise.
	* gdb.disasm/t02_mova.exp: Likewise.
	* gdb.disasm/t03_add.exp: Likewise.
	* gdb.disasm/t04_sub.exp: Likewise.
	* gdb.disasm/t05_cmp.exp: Likewise.
	* gdb.disasm/t06_ari2.exp: Likewise.
	* gdb.disasm/t07_ari3.exp: Likewise.
	* gdb.disasm/t08_or.exp: Likewise.
	* gdb.disasm/t09_xor.exp: Likewise.
	* gdb.disasm/t10_and.exp: Likewise.
	* gdb.disasm/t11_logs.exp: Likewise.
	* gdb.disasm/t12_bit.exp: Likewise.
	* gdb.disasm/t13_otr.exp: Likewise.
	* gdb.hp/gdb.aCC/optimize.exp: Likewise.
	* gdb.hp/gdb.aCC/watch-cmd.exp: Likewise.
	* gdb.hp/gdb.base-hp/callfwmall.exp: Likewise.
	* gdb.hp/gdb.base-hp/dollar.exp: Likewise.
	* gdb.hp/gdb.base-hp/hwwatchbus.exp: Likewise.
	* gdb.hp/gdb.base-hp/pxdb.exp: Likewise.
	* gdb.hp/gdb.base-hp/reg-pa64.exp: Likewise.
	* gdb.hp/gdb.base-hp/reg.exp: Likewise.
	* gdb.hp/gdb.base-hp/sized-enum.exp: Likewise.
	* gdb.hp/gdb.compat/xdb1.exp: Likewise.
	* gdb.hp/gdb.compat/xdb3.exp: Likewise.
	* gdb.hp/gdb.objdbg/objdbg01.exp: Likewise.
	* gdb.hp/gdb.objdbg/objdbg02.exp: Likewise.
	* gdb.hp/gdb.objdbg/objdbg03.exp: Likewise.
	* gdb.hp/gdb.objdbg/objdbg04.exp: Likewise.
	* gdb.mi/gdb701.exp: Likewise.
	* gdb.mi/gdb792.exp: Likewise.
	* gdb.mi/mi-basics.exp: Likewise.
	* gdb.mi/mi-break.exp: Likewise.
	* gdb.mi/mi-cli.exp: Likewise.
	* gdb.mi/mi-console.exp: Likewise.
	* gdb.mi/mi-disassemble.exp: Likewise.
	* gdb.mi/mi-eval.exp: Likewise.
	* gdb.mi/mi-file.exp: Likewise.
	* gdb.mi/mi-read-memory.exp: Likewise.
	* gdb.mi/mi-regs.exp: Likewise.
	* gdb.mi/mi-return.exp: Likewise.
	* gdb.mi/mi-simplerun.exp: Likewise.
	* gdb.mi/mi-stack.exp: Likewise.
	* gdb.mi/mi-stepi.exp: Likewise.
	* gdb.mi/mi-syn-frame.exp: Likewise.
	* gdb.mi/mi-until.exp: Likewise.
	* gdb.mi/mi-var-block.exp: Likewise.
	* gdb.mi/mi-var-child.exp: Likewise.
	* gdb.mi/mi-var-cmd.exp: Likewise.
	* gdb.mi/mi-var-display.exp: Likewise.
	* gdb.mi/mi-watch.exp: Likewise.
	* gdb.mi/mi2-basics.exp: Likewise.
	* gdb.mi/mi2-break.exp: Likewise.
	* gdb.mi/mi2-cli.exp: Likewise.
	* gdb.mi/mi2-console.exp: Likewise.
	* gdb.mi/mi2-disassemble.exp: Likewise.
	* gdb.mi/mi2-eval.exp: Likewise.
	* gdb.mi/mi2-file.exp: Likewise.
	* gdb.mi/mi2-read-memory.exp: Likewise.
	* gdb.mi/mi2-regs.exp: Likewise.
	* gdb.mi/mi2-return.exp: Likewise.
	* gdb.mi/mi2-simplerun.exp: Likewise.
	* gdb.mi/mi2-stack.exp: Likewise.
	* gdb.mi/mi2-stepi.exp: Likewise.
	* gdb.mi/mi2-syn-frame.exp: Likewise.
	* gdb.mi/mi2-until.exp: Likewise.
	* gdb.mi/mi2-var-block.exp: Likewise.
	* gdb.mi/mi2-var-child.exp: Likewise.
	* gdb.mi/mi2-var-cmd.exp: Likewise.
	* gdb.mi/mi2-var-display.exp: Likewise.
	* gdb.mi/mi2-watch.exp: Likewise.
	* gdb.stabs/exclfwd.exp: Likewise.
	* gdb.stabs/weird.exp: Likewise.
	* gdb.threads/gcore-thread.exp: Likewise.
	* gdb.trace/actions.exp: Likewise.
	* gdb.trace/backtrace.exp: Likewise.
	* gdb.trace/circ.exp: Likewise.
	* gdb.trace/collection.exp: Likewise.
	* gdb.trace/deltrace.exp: Likewise.
	* gdb.trace/infotrace.exp: Likewise.
	* gdb.trace/limits.exp: Likewise.
	* gdb.trace/packetlen.exp: Likewise.
	* gdb.trace/passc-dyn.exp: Likewise.
	* gdb.trace/passcount.exp: Likewise.
	* gdb.trace/report.exp: Likewise.
	* gdb.trace/save-trace.exp: Likewise.
	* gdb.trace/tfind.exp: Likewise.
	* gdb.trace/tracecmd.exp: Likewise.
	* gdb.trace/while-dyn.exp: Likewise.
	* gdb.trace/while-stepping.exp: Likewise.
@
text
@d123 5
@


1.65.2.1
log
@	* gdb.asm/asm-source.exp: Add "spu*-*-*" target.
	* gdb.asm/spu.inc: New file.
	* gdb.base/term.exp: Disable if [target_info exists noargs].
	* gdb.gdb/complaints.exp: Disable if ![isnative].
	* gdb.gdb/selftest.exp: Likewise.
	* gdb.gdb/observer.exp: Likewise.
	* gdb.gdb/xfullpath.exp: Likewise.
	* gdb.base/attach.exp: Disable on SPU target.
	* gdb.cp/bs145503.exp: Likewise.
	* gdb.cp/exception.exp: Likewise.
	* gdb.cp/userdef.exp: Likewise.
@
text
@a122 5
    "spu*-*-*" {
       set asm-arch spu
       set asm-flags "-I${srcdir}/${subdir} -I${objdir}/${subdir} --no-warn"
       set debug-flags "-gdwarf-2"
    }
@


1.64
log
@* gdb.asm/asm-source.exp: Add alpha-*-netbsd* to the list of
NetBSD/ELF targets.
@
text
@d160 2
a161 1
    gdb_suppress_entire_file "Assembly source test -- not implemented for this target."
d190 2
a191 1
	   gdb_suppress_entire_file "Assembly source test -- multilibs not supported by this test."
d240 2
a241 1
     gdb_suppress_entire_file "Testcase compile failed, so all tests in this file will automatically fail."
d244 2
a245 1
     gdb_suppress_entire_file "Testcase compile failed, so all tests in this file will automatically fail."
d255 2
a256 1
     gdb_suppress_entire_file "Testcase compile failed, so all tests in this file will automatically fail."
@


1.63
log
@* gdb.asm/asm-source.exp: Add powerpc-*-netbsd* to the list of
NetBSD/ELF targets.
@
text
@d165 1
@


1.63.2.1
log
@Changes from nickrob-async-20060828-mergepoint.
@
text
@d160 1
a160 2
    untested asm-source.exp
    return -1
a164 1
     || [istarget "alpha-*-netbsd*"]
d188 1
a188 2
	   untested asm-source.exp
	   return -1
d237 1
a237 2
     untested asm-source.exp
     return -1
d240 1
a240 2
     untested asm-source.exp
     return -1
d250 1
a250 2
     untested asm-source.exp
     return -1
@


1.62
log
@2006-04-20  Michael Snyder  <msnyder@@redhat.com>

	* 2006-03-22  Jim Blandy  <jimb@@redhat.com>
	Add support for the Renesas M32C and M16C.

	* gdb.asm/asm-source.exp: Add m32c target.
	* gdb.asm/m32c.inc: Support for m32c target.
@
text
@d166 1
@


1.61
log
@2006-01-04  Jim Blandy  <jimb@@redhat.com>

	* gdb.asm/asm-source.exp: Independently provide default values for
	asm-flags and debug-flags.  Use 'string equal' to do the
	comparison, not the implicit expr's '==' operator.  Remove
	now-unneeded assignments to asm-flags.  In h8300 case, place
	"-gdwarf-2", not "-gdwarf2", in debug-flags, not asm-flags.
@
text
@d76 3
@


1.61.8.1
log
@        * config/symbian.exp (symbian_compile): Fail after unknown options.
        Copy ELF files from the build tree.
        * gdb.asm/asm-source.exp: Use untested.
@
text
@d233 1
a233 2
    untested asm-source.exp
    return -1
d236 1
a236 2
    untested asm-source.exp
    return -1
@


1.60
log
@* gdb.asm/asm-source.exp (hppa-*-openbsd*): New.
* gdb.asm/openbsd.inc: Indent commands.
@
text
@a67 1
        set asm-flags "-I${srcdir}/${subdir} -I${objdir}/${subdir}"
a109 1
        set asm-flags "-I${srcdir}/${subdir} -I${objdir}/${subdir}"
a121 1
        set asm-flags "-I${srcdir}/${subdir} -I${objdir}/${subdir}"
a132 1
        set asm-flags "-I${srcdir}/${subdir} -I${objdir}/${subdir}"
a139 1
        set asm-flags "-I${srcdir}/${subdir} -I${objdir}/${subdir}"
a143 1
        set asm-flags "-I${srcdir}/${subdir} -I${objdir}/${subdir}"
a147 1
        set asm-flags "-I${srcdir}/${subdir} -I${objdir}/${subdir}"
d152 1
a152 1
	set asm-flags "-gdwarf2 -I${srcdir}/${subdir} -I${objdir}/${subdir}"
d199 1
a199 1
if { "${asm-flags}" == "" } {
d201 3
@


1.59
log
@2005-12-09  Randolph Chung  <tausq@@debian.org>

	* gdb.asm/asm-source.exp (hppa64-*-hpux*): New.
	* gdb.asm/pa64.inc: New file.
@
text
@d147 5
@


1.58
log
@	* gdb.asm/m68hc11.inc: Setup the data section.
	* gdb.asm/asm-source.exp (m6811-*-*): Don't use the target board linker
	script for this test.
	(m6812-*-*): Likewise.
@
text
@d147 5
@


1.57
log
@* gdb.asm/asm-source.exp: Use -e instead of --entry.
@
text
@d83 8
a90 1
        set asm-flags "-mshort-double -m68hc11 -gdwarf-2 --no-warn -I${srcdir}/${subdir} -I${objdir}/${subdir}"
d94 8
a101 1
        set asm-flags "-mshort-double -m68hc12 -gdwarf-2 --no-warn -I${srcdir}/${subdir} -I${objdir}/${subdir}"
d243 5
@


1.57.2.1
log
@	* gdb.asm/m68hc11.inc: Setup the data section.
	* gdb.asm/asm-source.exp (m6811-*-*): Don't use the target board linker
	script for this test.
	(m6812-*-*): Likewise.
@
text
@d83 1
a83 8
        set asm-flags "-mshort-double -m68hc11 --no-warn -I${srcdir}/${subdir} -I${objdir}/${subdir}"
	set debug-flags "-gdwarf-2"
	# This asm test is specific and uses the linker directly.
	# We must not use the target board linker script defined for other
	# tests.  Remove it and restore it later on.
	set board [target_info name]
	set old_ldscript [board_info $board ldscript]
	unset_board_info "ldscript"
d87 1
a87 8
        set asm-flags "-mshort-double -m68hc12 --no-warn -I${srcdir}/${subdir} -I${objdir}/${subdir}"
	set debug-flags "-gdwarf-2"
	# This asm test is specific and uses the linker directly.
	# We must not use the target board linker script defined for other
	# tests.  Remove it and restore it later on.
	set board [target_info name]
	set old_ldscript [board_info $board ldscript]
	set_board_info ldscript ""
a228 5
# Restore the target board linker script for HC11/HC12.
if { [istarget "m6811-*-*"] || [istarget "m6812-*-*"] } {
    set_board_info ldscript $old_ldscript
}

@


1.56
log
@	* gdb.asm/asm-source.exp: Add h8300 to supported targets.
	* gdb.asm/h8300.inc: New file.
@
text
@d37 1
a37 1
set link-flags "--entry _start"
@


1.55
log
@	* gdb.asm/asm-source.exp: Add iq2000 case.
	* gdb.asm/iq2000.inc: New file.
@
text
@d133 4
@


1.54
log
@* gdb.asm/asm-source.exp: Add mips*-*-netbsd* to the list of
NetBSD/ELF targets.
@
text
@d125 3
@


1.53
log
@2004-10-05  Kei Sakamoto  <sakamoto.kei@@renesas.com>

	* gdb.asm/asm-source.exp: Add m32r-linux target.
	* gdb.asm/m32r-linux.inc: New file.
@
text
@d138 1
@


1.52
log
@2004-07-30  Michael Chastain  <mec.gnu@@mindspring.com>

	* gdb.base/asm-source.exp: Properly convert target board
	debug flags from gcc format to binutils format.
@
text
@d74 3
@


1.51
log
@Use -gdwarf2 in preference to -gstabs for Sparc64.
@
text
@d80 1
a80 1
        set asm-flags "-mshort-double -m68hc11 -gdwarf2 --no-warn -I${srcdir}/${subdir} -I${objdir}/${subdir}"
d84 1
a84 1
        set asm-flags "-mshort-double -m68hc12 -gdwarf2 --no-warn -I${srcdir}/${subdir} -I${objdir}/${subdir}"
d176 1
a176 1
# Allow the target board to override the debug flags
d181 19
a199 4
# The GNU assembler does not support STABS+
if { ${debug-flags} == "-gstabs+" } then {
    set debug-flags "-gstabs"
}
@


1.50
log
@2004-05-24  Randolph Chung  <tausq@@debian.org>

	* gdb.asm/asm-source.exp: Enable test for hppa-linux target.
	* gdb.asm/pa.inc: New file.
@
text
@d38 1
d45 2
a46 1
        set asm-flags "-gdwarf2 -no-mdebug -I${srcdir}/${subdir} -I${objdir}/${subdir}"
d68 2
a69 1
        set asm-flags "-gdwarf2 -I${srcdir}/${subdir} -I${objdir}/${subdir}"
d94 2
a95 1
        set asm-flags "-gdwarf2 -I${srcdir}/${subdir} -I${objdir}/${subdir}"
d102 2
a103 1
        set asm-flags "-xarch=v9 -gstabs -I${srcdir}/${subdir} -I${objdir}/${subdir}"
d107 2
a108 1
        set asm-flags "-gdwarf2 -I${srcdir}/${subdir} -I${objdir}/${subdir}"
d119 2
a120 1
        set asm-flags "-gdwarf2 -I${srcdir}/${subdir} -I${objdir}/${subdir}"
d124 2
a125 1
        set asm-flags "-gdwarf2 -I${srcdir}/${subdir} -I${objdir}/${subdir}"
d172 2
a173 1
    set asm-flags "-gstabs -I${srcdir}/${subdir} -I${objdir}/${subdir}"
d176 11
a186 1
if {[target_assemble ${srcdir}/${subdir}/${srcfile1} asmsrc1.o "${asm-flags}"] != ""} then {
d189 1
a189 1
if {[target_assemble ${srcdir}/${subdir}/${srcfile2} asmsrc2.o "${asm-flags}"] != ""} then {
@


1.49
log
@* gdb.asm/asm-source.exp: Set asm-note to "openbsd" for
*-*-openbsd*.
* gdb.asm/openbsd.inc: New file.
@
text
@d115 4
@


1.49.4.1
log
@Merge mainline to intercu branch - 2004-09-15
@
text
@a37 1
set debug-flags ""
d44 1
a44 2
        set asm-flags "-no-mdebug -I${srcdir}/${subdir} -I${objdir}/${subdir}"
	set debug-flags "-gdwarf-2"
d66 1
a66 2
        set asm-flags "-I${srcdir}/${subdir} -I${objdir}/${subdir}"
	set debug-flags "-gdwarf-2"
d77 1
a77 1
        set asm-flags "-mshort-double -m68hc11 -gdwarf-2 --no-warn -I${srcdir}/${subdir} -I${objdir}/${subdir}"
d81 1
a81 1
        set asm-flags "-mshort-double -m68hc12 -gdwarf-2 --no-warn -I${srcdir}/${subdir} -I${objdir}/${subdir}"
d91 1
a91 2
        set asm-flags "-I${srcdir}/${subdir} -I${objdir}/${subdir}"
	set debug-flags "-gdwarf-2"
d98 1
a98 2
        set asm-flags "-xarch=v9 -I${srcdir}/${subdir} -I${objdir}/${subdir}"
	set debug-flags "-gdwarf-2"
d102 1
a102 2
        set asm-flags "-I${srcdir}/${subdir} -I${objdir}/${subdir}"
	set debug-flags "-gdwarf-2"
d113 1
a113 7
        set asm-flags "-I${srcdir}/${subdir} -I${objdir}/${subdir}"
	set debug-flags "-gdwarf-2"
    }
    "hppa*-linux-*" {
        set asm-arch pa
        set asm-flags "-I${srcdir}/${subdir} -I${objdir}/${subdir}"
	set debug-flags "-gdwarf-2"
d160 1
a160 7
    set asm-flags "-I${srcdir}/${subdir} -I${objdir}/${subdir}"
    set debug-flags "-gstabs"
}

# Allow the target board to override the debug flags.
if { [board_info $dest exists debug_flags] } then {
    set debug-flags "[board_info $dest debug_flags]"
d163 1
a163 21
# The debug flags are in the format that gcc expects:
# "-gdwarf-2", "-gstabs+", or "-gstabs".  To be compatible with the
# other languages in the test suite, we accept this input format.
# So the user can run the test suite with:
#
#   runtest --target_board unix/gdb:debug_flags=-gdwarf-2
#   make check RUNTESTFLAGS="--target_board unix/gdb:debug_flags=-gdwarf-2"
#
# However, the GNU assembler has different spellings than gcc.
# So I adjust the debug flags here.

# The GNU assembler spells "dwarf-2" as "dwarf2".
regsub "--" "-gdwarf-2" "${debug-flags}" "-gdwarf2" debug-flags

# The GNU assembler before 2.15 did not support "stabs+".
regsub "--" "-gstabs\[+\]" "${debug-flags}" "-gstabs" debug-flags

# The GNU assembler does not support level options like "-g2" or "-g3".
regsub "--" "-g\[0-9\]" "${debug-flags}" "" debug-flags

if {[target_assemble ${srcdir}/${subdir}/${srcfile1} asmsrc1.o "${asm-flags} ${debug-flags}"] != ""} then {
d166 1
a166 1
if {[target_assemble ${srcdir}/${subdir}/${srcfile2} asmsrc2.o "${asm-flags} ${debug-flags}"] != ""} then {
@


1.48
log
@* gdb.asm/asm-source.exp: Strip -Wl, from link-flags.  Don't
append -static to link-flags for *-*-freebsd*, *-*netbsd* and
*-*solaris2*.  Remove commented out default settings for
asm-flags.  Replace gdb_compile with target_link.
@
text
@d127 7
@


1.47
log
@* gdb.asm/asm-source.exp: Update copyright year.  Link statically
for *-*-solaris2*.
@
text
@d73 1
a73 1
        append link-flags " -Wl,--whole-archive -lgloss -Wl,--no-whole-archive"
a120 14
# On FreeBSD and NetBSD, the final link will fail because of
# unresolved symbols.  It turns out that libc.so references symbols
# that are normally provided by crt1.o, which isn't linked in since we
# specify -nostartfiles.  Using -nostdlib doesn't help since
# target_compile automatically adds -lm.  Linking statically avoids
# this mess.
#
# On Solaris, linking dynamically results in a binary that dumps core.
#
if {[istarget "*-*-freebsd*"] || [istarget "*-*-netbsd*"]
    || [istarget "*-*-solaris2*"]} then {
    append link-flags " -static"
}

a152 1
    #set asm-flags "-Wa,-gstabs,-I${srcdir}/${subdir},-I${objdir}/${subdir}"
d163 7
a169 5
set opts "debug ldflags=-nostartfiles"
foreach i ${link-flags} {
    append opts " ldflags=$i"
}
if { [gdb_compile "asmsrc1.o asmsrc2.o" "${binfile}" executable $opts] != "" } {
@


1.46
log
@	* gdb.asm/frv.inc: New file.
	* gdb.asm/asm-source.exp: Add frv-*-* as a supported target.
@
text
@d1 1
a1 1
# Copyright 1998, 2000, 2001, 2002, 2003 Free Software Foundation, Inc.
d121 1
a121 1
# On FreeBSD and NetBSD, crt1.o the final link will fail because of
d127 5
a131 1
if {[istarget "*-*-freebsd*"] || [istarget "*-*-netbsd*"]} then {
@


1.45
log
@* gdb.asm/asm-source.exp: Initialize asm-note to "empty".  Set
asm-note to "netbsd" for *-*-netbsdelf* and x86_64-*-netbsd*.  Use
it to create the appropriate note.inc.
* gdb.asm/asmsrc1.s: Include "note.inc".
* gdb.asm/netbsd.inc: New file.
* gdb.asm/empty.inc: New file.
@
text
@d55 3
@


1.44
log
@	* gdb.asm/asm-source.exp: Make sure the final link succeeds on
	NetBSD as it does on FreeBSD.  Modelled on a similar change by
	Mark Kettenis on 2003-05-30.
	(link-flags): Set to "--entry _start" regardless of target.
	Special linker flags are to be appended to $link-flags.
	* gdb.asm/mips.inc (gdbasm_startup): Remove __start label.
@
text
@d35 1
d128 6
d156 2
d371 1
@


1.43
log
@	* gdb.asm/asm-source.exp: Add sh*-*-* as supported target.
	* gdb.asm/sh.inc: New file.
@
text
@d36 1
a36 1
set link-flags ""
a65 3
        if [istarget "*-*-cygwin*"] then {
            set link-flags "--entry _start"
        }
d69 1
a69 1
        set link-flags "-Wl,--whole-archive -lgloss -Wl,--no-whole-archive"
a87 1
        set link-flags "--entry _start"
d117 8
a124 7
# On FreeBSD, crt1.o the final link will fail because of unresolved
# symbols.  It turns out that libc.so references symbols that are
# normally provided by crt1.o, which isn't linked in since we specify
# -nostartfiles.  Using -nostdlib doesn't help since target_compile
# automatically adds -lm.  Linking statically avoids this mess.
if [istarget "*-*-freebsd*"] then {
    set link-flags "-static"
@


1.43.2.1
log
@merge mainline changes into branch
@
text
@d1 1
a1 1
# Copyright 1998, 2000, 2001, 2002, 2003, 2004 Free Software Foundation, Inc.
a34 1
set asm-note "empty"
d36 1
a36 1
set link-flags "--entry _start"
a53 3
    "frv-*-*" {
	set asm-arch frv
    }
d66 3
d72 1
a72 1
        append link-flags "--whole-archive -lgloss --no-whole-archive"
d91 1
d121 7
a127 11
# On NetBSD/ELF we need a special NetBSD-identifying note section.
if { [istarget "*-*-netbsdelf*"]
     || [istarget "x86_64-*-netbsd*"] } then {
    set asm-note "netbsd"
}

# On OpenBSD/ELF we need a similar note section.  We make no attempt
# of handing a.out here since most OpenBSD/a.out systems use a rather
# outdated assembler that doesn't assemble this test's code anyway.
if { [istarget "*-*-openbsd*"] } then {
    set asm-note "openbsd"
a151 2
remote_exec build "rm -f ${subdir}/note.inc"
remote_download host ${srcdir}/${subdir}/${asm-note}.inc ${subdir}/note.inc
d154 1
d165 5
a169 7
# We deliberately don't use gdb_compile here to link together the
# assembled object files.  Using gdb_compile, and therefore the C
# compiler, is conceptually wrong, since we're testing raw assembler
# code here that provides its own startup code.  Using target_link
# also avoids a lot of problems on many systems, most notably on
# *-*-*bsd* and *-*-solaris2*.
if {[target_link "asmsrc1.o asmsrc2.o" "${binfile}" ${link-flags}] != "" } then {
a364 1
remote_exec build "rm -f ${subdir}/note.inc"
@


1.42
log
@
2003-08-25  Jeff Johnston  <jjohnstn@@redhat.com>

        * gdb.asm/asm-source.exp: Add ia64 support.
        * gdb.asm/ia64.inc: New file.
@
text
@d88 5
@


1.41
log
@	From Kei Sakamoto <sakamoto.kei@@renesas.com>:
	* gdb.asm/asm-source.exp : Add -lgloss to link-flags.
	* gdb.asm/m32r.inc : Remove an illegal nop after bl instruction.
	Replace ld24 with seth/add3.
@
text
@d106 4
@


1.40
log
@2003-07-15  Andrew Cagney  <cagney@@redhat.com>

	* frame.c (get_prev_frame): Move disabled inside_entry_func to
	before code inhibiting repeated unwind attempts.  Add to
	commentary on that test's problems.
	* blockframe.c (inside_main_func): Look for "main" in the minimal
	symbol table.
	* d10v-tdep.c (d10v_frame_this_id): Delete check that frames are
	identical.

Index: testsuite/ChangeLog
2003-07-15  Andrew Cagney  <cagney@@redhat.com>

	* gdb.asm/asm-source.exp: Do not allow "start" in the backtrace.
@
text
@d72 1
@


1.39
log
@	* gdb.asm/m68k.inc: New file.
	* gdb.asm/asm-source.exp: Use it for m68k-*-*.
@
text
@d247 1
a247 1
	"\#0.*foo2.*asmsrc2\[.\]s:12.*\#1.*main.*asmsrc1\[.\]s:33(.*\#2.*start\[^\r\n\]*)?" \
@


1.38
log
@	* gdb.asm/asm-source.exp: Dissassemble from &globalvar instead
	of globalvar.
@
text
@d102 3
@


1.38.6.1
log
@	* gdb.asm/m68k.inc: New file.
	* gdb.asm/asm-source.exp: Use it for m68k-*-*.
@
text
@a101 3
    "m68k-*-*" {
        set asm-arch m68k
    }
@


1.38.6.2
log
@2003-07-15  Andrew Cagney  <cagney@@redhat.com>

	* frame.c (get_prev_frame): Move disabled inside_entry_func to
	before code inhibiting repeated unwind attempts.  Add to
	commentary on that test's problems.
	* blockframe.c (inside_main_func): Look for "main" in the minimal
	symbol table.
	* d10v-tdep.c (d10v_frame_this_id): Delete check that frames are
	identical.

Index: testsuite/ChangeLog
2003-07-15  Andrew Cagney  <cagney@@redhat.com>

	* gdb.asm/asm-source.exp: Do not allow "start" in the backtrace.
@
text
@d247 1
a247 1
	"\#0.*foo2.*asmsrc2\[.\]s:12.*\#1.*main.*asmsrc1\[.\]s:33" \
@


1.38.6.3
log
@	From Kei Sakamoto <sakamoto.kei@@renesas.com>:
	* gdb.asm/asm-source.exp : Add -lgloss to link-flags.
	* gdb.asm/m32r.inc : Remove an illegal nop after bl instruction.
	Replace ld24 with seth/add3.
@
text
@a71 1
        set link-flags "-Wl,--whole-archive -lgloss -Wl,--no-whole-archive"
@


1.37
log
@* gdb.asm/asm-source.exp: Check for memory read errors in
disassembler test on *BSD too.
@
text
@d339 1
a339 1
test_dis "x/i globalvar" "globalvar"
@


1.36
log
@        * gdb.asm/alpha.inc (gdbasm_enter): Use numeric register names
        for .frame.
        (gdbasm_call): Lose ldgp.
        (gdbasm_startup): Add frame information.
        * gdb.asm/asm-source.exp (alpha*-*): Add -no-mdebug to asm-flags.
@
text
@d322 1
a322 1
	-re "${var}.*:.*Cannot access" {
@


1.35
log
@* gdb.asm/asm-source.exp: Make sure the final link succeeds on
FreeBSD.
@
text
@d43 1
a43 1
        set asm-flags "-gdwarf2 -I${srcdir}/${subdir} -I${objdir}/${subdir}"
@


1.34
log
@        * gdb.asm/alpha.inc: New file.
        * gdb.asm/asm-source.exp: Use it.
@
text
@d108 9
@


1.33
log
@Add support for assembly source testing on the s390x.
* gdb.asm/asm-source.exp: Add a case for the s390x-*-*
architecture.
* gdb.asm/s390x.inc: New file.
@
text
@d39 6
@


1.33.6.1
log
@* gdb.asm/asm-source.exp: Don't handle powerpc64-*-* along with
powerpc-*-*; treat the former as an architecture this test doesn't
support.  At the moment, the asm-source test program hangs and
becomes an unkillable process on PPC64 Linux.
@
text
@a77 4
    "powerpc64-*-linux*" {
        # At the moment, this test makes the kernel hang; we're
        # disabling it until we can sort that out.
    }
@


1.32
log
@* gdb.asm/asm-source.exp: Use a 'switch -glob' statement, not a
succession of 'if' statements.
@
text
@d51 3
@


1.31
log
@2003-05-01  Andrew Cagney  <cagney@@redhat.com>

	* disasm.c (gdb_disassemble_from_exec): Delete global variable.
	(gdb_disassembly): Make "di" non static, always initialize and
	cleanup.  Always use dis_asm_read_memory.
	(gdb_dis_asm_read_memory): Delete function.

2003-05-01  Andrew Cagney  <cagney@@redhat.com>

	* gdb.asm/asm-source.exp: Check that "disassm" and "x/i" of a
	variable do not give memory errors.
@
text
@d38 54
a91 20
if [istarget "*arm-*-*"] then {
    set asm-arch arm
}
if [istarget "xscale-*-*"] then {
    set asm-arch arm
}
if [istarget "d10v-*-*"] then {
    set asm-arch d10v
}
if [istarget "s390-*-*"] then {
    set asm-arch s390
}
if [istarget "x86_64-*-*"] then {
    set asm-arch x86_64
    set asm-flags "-gdwarf2 -I${srcdir}/${subdir} -I${objdir}/${subdir}"
}
if [istarget "i\[3456\]86-*-*"] then {
    set asm-arch i386
    if [istarget "*-*-cygwin*"] then {
        set link-flags "--entry _start"
d94 1
a94 32
if [istarget "m32r*-*"] then {
    set asm-arch m32r
}
if [istarget "m6811-*-*"] then {
    set asm-arch m68hc11
    set asm-flags "-mshort-double -m68hc11 -gdwarf2 --no-warn -I${srcdir}/${subdir} -I${objdir}/${subdir}"
}
if [istarget "m6812-*-*"] then {
    set asm-arch m68hc11
    set asm-flags "-mshort-double -m68hc12 -gdwarf2 --no-warn -I${srcdir}/${subdir} -I${objdir}/${subdir}"
}
if [istarget "mips*-*"] then {
    set asm-arch mips
}
if [istarget "powerpc*-*"] then {
    set asm-arch powerpc
}
if [istarget "sparc-*-*"] then {
    set asm-arch sparc
}
if [istarget "sparc64-*-*"] then {
    set asm-arch sparc64
    set asm-flags "-xarch=v9 -gstabs -I${srcdir}/${subdir} -I${objdir}/${subdir}"
}
if [istarget "xstormy16-*-*"] then {
    set asm-arch xstormy16
    set asm-flags "-gdwarf2 -I${srcdir}/${subdir} -I${objdir}/${subdir}"
}
if [istarget "v850-*-*"] then {
    set asm-arch v850
    set gdb_wrapper_initialized 1
}
@


1.30
log
@	* gdb.asm/asm-source.exp: Set asm-arch for m6811 and m6812.
	* gdb.asm/m68hc11.inc: New file for HC11/HC12 macros.
@
text
@d296 21
a316 1
# See if we can look at a global variable
d318 2
d321 1
a321 1
# See if we can look at a static variable
d323 2
@


1.30.8.1
log
@Merge from mainline.
@
text
@d296 1
a296 21
# Disassemble something, check the output
proc test_dis { command var } {
    global gdb_prompt
    send_gdb "${command}\n"
    gdb_expect {
	-re "${var}.*:.*Cannot access" {
	    # The "disassembler" was only accessing the local
	    # executable and that would cause attempts to disassemble
	    # variables to fail (memory not valid).
	    fail "${command} (memory read error)"
	}
	-re "${var}.*:.*${gdb_prompt}" {
	    pass "${command}"
	}
	timeout {
	    fail "${command} (timeout)"
	}
    }
}

# See if we can look at a global variable, three ways
a297 2
test_dis "x/i globalvar" "globalvar"
test_dis "disassem &globalvar &globalvar+1" "globalvar"
d299 1
a299 1
# See if we can look at a static variable, three ways
a300 2
test_dis "x/i &staticvar" "staticvar"
test_dis "disassem &staticvar &staticvar+1" "staticvar"
@


1.29
log
@	* gdb.asm/asm-source.exp: Add appropriate --entry linker flag for
	Cygwin native.
@
text
@d63 8
@


1.28
log
@2003-01-20  Elena Zannoni  <ezannoni@@redhat.com>

	* gdb.arch/altivec-abi.exp: Set variable 'srcfile' differently, to
	allow for different test tree configurations.  Update some
	tescases accordingly.
	* gdb.arch/altivec-regs.exp: Ditto.
	* gdb.asm/asm-source.exp: Ditto.
	* gdb.base/advance.exp: Ditto.
	* gdb.base/display.exp: Ditto.
	* gdb.base/long_long.exp: Ditto.
	* gdb.base/mips_pro.exp: Ditto.
	* gdb.base/overlays.exp: Ditto.
	* gdb.base/relocate.exp: Ditto.
	* gdb.base/setshow.exp: Ditto.
	* gdb.base/step-line.exp: Ditto.
	* gdb.base/step-test.exp: Ditto.
	* gdb.base/until.exp: Ditto.
	* gdb.c++/virtfunc.exp: Get rid of variable 'src'.
@
text
@d56 3
@


1.27
log
@	* printcmd.c (disassemble_command): Remove obsolete function.
	(_initialize_printcmd): Do not create disassemble command here.
	* cli/cli-cmds.c (disassemble_command): New function.  Implements
	disassemble command.
	(init_cli_cmds): Create disassemble command here instead.

	* gdb.asm/asm-source.exp: Adjust patter to new disassembler routine
	which explicitly prints the zero offset as "+0".
@
text
@d1 1
a1 1
# Copyright 1998, 2000, 2002 Free Software Foundation, Inc.
d102 2
a103 2
set src1 ${srcdir}/${subdir}/asmsrc1.s
set src2 ${srcdir}/${subdir}/asmsrc2.s
d113 1
a113 1
if {[target_assemble ${src1} asmsrc1.o "${asm-flags}"] != ""} then {
d116 1
a116 1
if {[target_assemble ${src2} asmsrc2.o "${asm-flags}"] != ""} then {
@


1.26
log
@        * gdb.asm/asm-source.exp: Add "mips*-*" pattern.  Update line
        numbers.  Allow "foo2|selected stack frame".
        * gdb.asm/asmsrc1.s: Use gdbasm_declare and gdbasm_end.
        * gdb.asm/asmsrc2.s: Likewise.
        * gdb.asm/common.inc: Define gdbasm_declare and gdbasm_end.  Update
        comments.
        * gdb.asm/mips.inc: New file.
@
text
@d292 1
a292 1
gdb_test "disassem foostatic" ".*<foostatic>:.*End of assembler dump." \
@


1.25
log
@2002-06-06  Michal Ludvig  <mludvig@@suse.cz>

	* gdb.asm/asm-source.exp: Add x86-64 target.
	* gdb.asm/x86_64.inc: New.
@
text
@d60 3
d200 1
a200 1
	"39\[ \t\]+comment \"A routine for foo2 to call.\"" "search"
d225 1
a225 1
gdb_test "bt 3" "\#0.*foo3.*asmsrc1\[.\]s:44.*\#1.*foo2.*asmsrc2\[.\]s:12.*\#2.*main.*asmsrc1\[.\]s:33.*" "bt 3 in foo3"
d283 1
a283 1
	"Make selected stack frame return now\?.*" "y"
@


1.25.10.1
log
@Merge drow-cplus-merge-20021025 to drow-cplus-branch.
@
text
@a59 3
if [istarget "mips*-*"] then {
    set asm-arch mips
}
d197 1
a197 1
	"40\[ \t\]+comment \"A routine for foo2 to call.\"" "search"
d222 1
a222 1
gdb_test "bt 3" "\#0.*foo3.*asmsrc1\[.\]s:45.*\#1.*foo2.*asmsrc2\[.\]s:12.*\#2.*main.*asmsrc1\[.\]s:33.*" "bt 3 in foo3"
d280 1
a280 1
	"Make (foo2|selected stack frame) return now\?.*" "y"
@


1.25.10.2
log
@Merge drow-cplus-branch to:
  cvs rtag -D 2003-12-14 00:00:00 UTC drow-cplus-merge-20031214 gdb+dejagnu
@
text
@d1 1
a1 1
# Copyright 1998, 2000, 2001, 2002, 2003 Free Software Foundation, Inc.
a34 1
set asm-note "empty"
d36 1
a36 1
set link-flags "--entry _start"
d38 42
a79 76
switch -glob -- [istarget] {
    "alpha*-*-*" {
        set asm-arch alpha
	# ??? Won't work with ecoff systems like Tru64, but then we also
	# don't have any other -g flag that creates mdebug output.
        set asm-flags "-gdwarf2 -no-mdebug -I${srcdir}/${subdir} -I${objdir}/${subdir}"
    }
    "*arm-*-*" {
        set asm-arch arm
    }
    "xscale-*-*" {
        set asm-arch arm
    }
    "d10v-*-*" {
        set asm-arch d10v
    }
    "frv-*-*" {
	set asm-arch frv
    }
    "s390-*-*" {
        set asm-arch s390
    }
    "s390x-*-*" {
        set asm-arch s390x
    }
    "x86_64-*-*" {
        set asm-arch x86_64
        set asm-flags "-gdwarf2 -I${srcdir}/${subdir} -I${objdir}/${subdir}"
    }
    "i\[3456\]86-*-*" {
        set asm-arch i386
    }
    "m32r*-*" {
        set asm-arch m32r
        append link-flags " -Wl,--whole-archive -lgloss -Wl,--no-whole-archive"
    }
    "m6811-*-*" {
        set asm-arch m68hc11
        set asm-flags "-mshort-double -m68hc11 -gdwarf2 --no-warn -I${srcdir}/${subdir} -I${objdir}/${subdir}"
    }
    "m6812-*-*" {
        set asm-arch m68hc11
        set asm-flags "-mshort-double -m68hc12 -gdwarf2 --no-warn -I${srcdir}/${subdir} -I${objdir}/${subdir}"
    }
    "mips*-*" {
        set asm-arch mips
    }
    "powerpc*-*" {
        set asm-arch powerpc
    }
    "sh*-*-*" {
        set asm-arch sh
        set asm-flags "-gdwarf2 -I${srcdir}/${subdir} -I${objdir}/${subdir}"
    }
    "sparc-*-*" {
        set asm-arch sparc
    }
    "sparc64-*-*" {
        set asm-arch sparc64
        set asm-flags "-xarch=v9 -gstabs -I${srcdir}/${subdir} -I${objdir}/${subdir}"
    }
    "xstormy16-*-*" {
        set asm-arch xstormy16
        set asm-flags "-gdwarf2 -I${srcdir}/${subdir} -I${objdir}/${subdir}"
    }
    "v850-*-*" {
        set asm-arch v850
        set gdb_wrapper_initialized 1
    }
    "m68k-*-*" {
        set asm-arch m68k
    }
    "ia64-*-*" {
        set asm-arch ia64
        set asm-flags "-gdwarf2 -I${srcdir}/${subdir} -I${objdir}/${subdir}"
    }
a80 1

a84 16
# On FreeBSD and NetBSD, crt1.o the final link will fail because of
# unresolved symbols.  It turns out that libc.so references symbols
# that are normally provided by crt1.o, which isn't linked in since we
# specify -nostartfiles.  Using -nostdlib doesn't help since
# target_compile automatically adds -lm.  Linking statically avoids
# this mess.
if {[istarget "*-*-freebsd*"] || [istarget "*-*-netbsd*"]} then {
    append link-flags " -static"
}

# On NetBSD/ELF we need a special NetBSD-identifying note section.
if { [istarget "*-*-netbsdelf*"]
     || [istarget "x86_64-*-netbsd*"] } then {
    set asm-note "netbsd"
}

d102 2
a103 2
set srcfile1 asmsrc1.s
set srcfile2 asmsrc2.s
a106 2
remote_exec build "rm -f ${subdir}/note.inc"
remote_download host ${srcdir}/${subdir}/${asm-note}.inc ${subdir}/note.inc
d113 1
a113 1
if {[target_assemble ${srcdir}/${subdir}/${srcfile1} asmsrc1.o "${asm-flags}"] != ""} then {
d116 1
a116 1
if {[target_assemble ${srcdir}/${subdir}/${srcfile2} asmsrc2.o "${asm-flags}"] != ""} then {
d212 1
a212 1
	"\#0.*foo2.*asmsrc2\[.\]s:12.*\#1.*main.*asmsrc1\[.\]s:33" \
d285 1
a285 21
# Disassemble something, check the output
proc test_dis { command var } {
    global gdb_prompt
    send_gdb "${command}\n"
    gdb_expect {
	-re "${var}.*:.*(Cannot access|Bad address)" {
	    # The "disassembler" was only accessing the local
	    # executable and that would cause attempts to disassemble
	    # variables to fail (memory not valid).
	    fail "${command} (memory read error)"
	}
	-re "${var}.*:.*${gdb_prompt}" {
	    pass "${command}"
	}
	timeout {
	    fail "${command} (timeout)"
	}
    }
}

# See if we can look at a global variable, three ways
a286 2
test_dis "x/i &globalvar" "globalvar"
test_dis "disassem &globalvar &globalvar+1" "globalvar"
d288 1
a288 1
# See if we can look at a static variable, three ways
a289 2
test_dis "x/i &staticvar" "staticvar"
test_dis "disassem &staticvar &staticvar+1" "staticvar"
d292 1
a292 1
gdb_test "disassem foostatic" ".*<foostatic\\+0>:.*End of assembler dump." \
a295 1
remote_exec build "rm -f ${subdir}/note.inc"
@


1.25.10.3
log
@Merge mainline to branch.  GDB is broken until I update cp-names.y.
@
text
@d1 1
a1 1
# Copyright 1998, 2000, 2001, 2002, 2003, 2004 Free Software Foundation, Inc.
d121 1
a121 1
# On FreeBSD and NetBSD, the final link will fail because of
d127 1
a127 5
#
# On Solaris, linking dynamically results in a binary that dumps core.
#
if {[istarget "*-*-freebsd*"] || [istarget "*-*-netbsd*"]
    || [istarget "*-*-solaris2*"]} then {
@


1.25.10.4
log
@Merge drow-cplus-merge-20040208 to drow-cplus-branch.
@
text
@d73 1
a73 1
        append link-flags "--whole-archive -lgloss --no-whole-archive"
d121 14
a140 7
# On OpenBSD/ELF we need a similar note section.  We make no attempt
# of handing a.out here since most OpenBSD/a.out systems use a rather
# outdated assembler that doesn't assemble this test's code anyway.
if { [istarget "*-*-openbsd*"] } then {
    set asm-note "openbsd"
}

d167 1
d178 5
a182 7
# We deliberately don't use gdb_compile here to link together the
# assembled object files.  Using gdb_compile, and therefore the C
# compiler, is conceptually wrong, since we're testing raw assembler
# code here that provides its own startup code.  Using target_link
# also avoids a lot of problems on many systems, most notably on
# *-*-*bsd* and *-*-solaris2*.
if {[target_link "asmsrc1.o asmsrc2.o" "${binfile}" ${link-flags}] != "" } then {
@


1.25.8.1
log
@2002-10-25  David Carlton  <carlton@@math.stanford.edu>

	* symtab.c (lookup_symbol_aux_block): New function.
	(lookup_symbol_aux_local): Call lookup_symbol_aux_block.
	(lookup_symbol_aux): Ditto.

	* Merge from mainline; tag is carlton_dictionary-20021025-merge.

2002-10-25  David Carlton  <carlton@@math.stanford.edu>

	* cp-support.c: Add comment to demangled name pitfalls.
	* symtab.c (lookup_transparent_type): Add FIXME comment at
	beginning.

2002-10-23  David Carlton  <carlton@@math.stanford.edu>

	* symtab.c: Delete cplusplus_hint.
	Delete prototype for find_template_name_end.
	* dwarf2read.c (scan_partial_symbols): Add in a gdb_assert from a
	later version of my namespace_minimal patch.

2002-10-25  David Carlton  <carlton@@math.stanford.edu>

	* gdb.c++/namespace.exp: Change all of the setup_xfail tests that
	I added into setup_kfails.
@
text
@a59 3
if [istarget "mips*-*"] then {
    set asm-arch mips
}
d197 1
a197 1
	"40\[ \t\]+comment \"A routine for foo2 to call.\"" "search"
d222 1
a222 1
gdb_test "bt 3" "\#0.*foo3.*asmsrc1\[.\]s:45.*\#1.*foo2.*asmsrc2\[.\]s:12.*\#2.*main.*asmsrc1\[.\]s:33.*" "bt 3 in foo3"
d280 1
a280 1
	"Make (foo2|selected stack frame) return now\?.*" "y"
@


1.25.8.2
log
@2002-11-15  David Carlton  <carlton@@math.stanford.edu>

	* Merge from mainline; tag is carlton_dictionary-20021115-merge.
@
text
@d292 1
a292 1
gdb_test "disassem foostatic" ".*<foostatic\\+0>:.*End of assembler dump." \
@


1.25.8.3
log
@2003-02-07  David Carlton  <carlton@@math.stanford.edu>

	* Merge with mainline; tag is carlton_dictionary-20030207-merge.
@
text
@d1 1
a1 1
# Copyright 1998, 2000, 2001, 2002, 2003 Free Software Foundation, Inc.
d102 2
a103 2
set srcfile1 asmsrc1.s
set srcfile2 asmsrc2.s
d113 1
a113 1
if {[target_assemble ${srcdir}/${subdir}/${srcfile1} asmsrc1.o "${asm-flags}"] != ""} then {
d116 1
a116 1
if {[target_assemble ${srcdir}/${subdir}/${srcfile2} asmsrc2.o "${asm-flags}"] != ""} then {
@


1.25.8.4
log
@2003-04-16  David Carlton  <carlton@@bactrian.org>

	* Merge with mainline; tag is carlton_dictionary-20030416-merge.
@
text
@a55 3
    if [istarget "*-*-cygwin*"] then {
        set link-flags "--entry _start"
    }
a58 8
}
if [istarget "m6811-*-*"] then {
    set asm-arch m68hc11
    set asm-flags "-mshort-double -m68hc11 -gdwarf2 --no-warn -I${srcdir}/${subdir} -I${objdir}/${subdir}"
}
if [istarget "m6812-*-*"] then {
    set asm-arch m68hc11
    set asm-flags "-mshort-double -m68hc12 -gdwarf2 --no-warn -I${srcdir}/${subdir} -I${objdir}/${subdir}"
@


1.25.8.5
log
@2003-05-23  David Carlton  <carlton@@bactrian.org>

	* Merge with mainline; tag is carlton_dictionary-20030523-merge.
@
text
@d38 20
a57 57
switch -glob -- [istarget] {
    "*arm-*-*" {
        set asm-arch arm
    }
    "xscale-*-*" {
        set asm-arch arm
    }
    "d10v-*-*" {
        set asm-arch d10v
    }
    "s390-*-*" {
        set asm-arch s390
    }
    "s390x-*-*" {
        set asm-arch s390x
    }
    "x86_64-*-*" {
        set asm-arch x86_64
        set asm-flags "-gdwarf2 -I${srcdir}/${subdir} -I${objdir}/${subdir}"
    }
    "i\[3456\]86-*-*" {
        set asm-arch i386
        if [istarget "*-*-cygwin*"] then {
            set link-flags "--entry _start"
        }
    }
    "m32r*-*" {
        set asm-arch m32r
    }
    "m6811-*-*" {
        set asm-arch m68hc11
        set asm-flags "-mshort-double -m68hc11 -gdwarf2 --no-warn -I${srcdir}/${subdir} -I${objdir}/${subdir}"
    }
    "m6812-*-*" {
        set asm-arch m68hc11
        set asm-flags "-mshort-double -m68hc12 -gdwarf2 --no-warn -I${srcdir}/${subdir} -I${objdir}/${subdir}"
    }
    "mips*-*" {
        set asm-arch mips
    }
    "powerpc*-*" {
        set asm-arch powerpc
    }
    "sparc-*-*" {
        set asm-arch sparc
    }
    "sparc64-*-*" {
        set asm-arch sparc64
        set asm-flags "-xarch=v9 -gstabs -I${srcdir}/${subdir} -I${objdir}/${subdir}"
    }
    "xstormy16-*-*" {
        set asm-arch xstormy16
        set asm-flags "-gdwarf2 -I${srcdir}/${subdir} -I${objdir}/${subdir}"
    }
    "v850-*-*" {
        set asm-arch v850
        set gdb_wrapper_initialized 1
d60 32
a91 1

d296 1
a296 21
# Disassemble something, check the output
proc test_dis { command var } {
    global gdb_prompt
    send_gdb "${command}\n"
    gdb_expect {
	-re "${var}.*:.*Cannot access" {
	    # The "disassembler" was only accessing the local
	    # executable and that would cause attempts to disassemble
	    # variables to fail (memory not valid).
	    fail "${command} (memory read error)"
	}
	-re "${var}.*:.*${gdb_prompt}" {
	    pass "${command}"
	}
	timeout {
	    fail "${command} (timeout)"
	}
    }
}

# See if we can look at a global variable, three ways
a297 2
test_dis "x/i globalvar" "globalvar"
test_dis "disassem &globalvar &globalvar+1" "globalvar"
d299 1
a299 1
# See if we can look at a static variable, three ways
a300 2
test_dis "x/i &staticvar" "staticvar"
test_dis "disassem &staticvar &staticvar+1" "staticvar"
@


1.25.8.6
log
@2003-06-27  David Carlton  <carlton@@kealia.com>

	* Merge with mainline; tag is carlton_dictionary-20030627-merge.
@
text
@a38 6
    "alpha*-*-*" {
        set asm-arch alpha
	# ??? Won't work with ecoff systems like Tru64, but then we also
	# don't have any other -g flag that creates mdebug output.
        set asm-flags "-gdwarf2 -no-mdebug -I${srcdir}/${subdir} -I${objdir}/${subdir}"
    }
a101 9
# On FreeBSD, crt1.o the final link will fail because of unresolved
# symbols.  It turns out that libc.so references symbols that are
# normally provided by crt1.o, which isn't linked in since we specify
# -nostartfiles.  Using -nostdlib doesn't help since target_compile
# automatically adds -lm.  Linking statically avoids this mess.
if [istarget "*-*-freebsd*"] then {
    set link-flags "-static"
}

d307 1
a307 1
	-re "${var}.*:.*(Cannot access|Bad address)" {
d324 1
a324 1
test_dis "x/i &globalvar" "globalvar"
@


1.25.8.7
log
@2003-08-05  David Carlton  <carlton@@kealia.com>

	* configure.in (build_warnings): Delete -Wformat-nonliteral.
	* configure (build_warnings): Ditto.

	* Merge with mainline; tag is carlton_dictionary-20030805-merge.
@
text
@a101 3
    "m68k-*-*" {
        set asm-arch m68k
    }
d244 1
a244 1
	"\#0.*foo2.*asmsrc2\[.\]s:12.*\#1.*main.*asmsrc1\[.\]s:33" \
@


1.25.8.8
log
@2003-09-17  David Carlton  <carlton@@kealia.com>

	* Merge with mainline; tag is carlton_dictionary-20030917-merge.
@
text
@a71 1
        set link-flags "-Wl,--whole-archive -lgloss -Wl,--no-whole-archive"
a86 5
    "sh*-*-*" {
        set asm-arch sh
        set asm-flags "-gdwarf2 -I${srcdir}/${subdir} -I${objdir}/${subdir}"
        set link-flags "--entry _start"
    }
a103 4
    }
    "ia64-*-*" {
        set asm-arch ia64
        set asm-flags "-gdwarf2 -I${srcdir}/${subdir} -I${objdir}/${subdir}"
@


1.25.8.9
log
@2003-12-15  David Carlton  <carlton@@kealia.com>

	* Merge with mainline; tag is carlton_dictionary-20031215-merge.
	* cp-support.c (class_name_from_physname): Add DMGL_PARAMS to call
	to cplus_demangle.
	(method_name_from_physname): Ditto.
@
text
@a34 1
set asm-note "empty"
d36 1
a36 1
set link-flags "--entry _start"
a53 3
    "frv-*-*" {
	set asm-arch frv
    }
d66 3
d72 1
a72 1
        append link-flags " -Wl,--whole-archive -lgloss -Wl,--no-whole-archive"
d91 1
d121 7
a127 14
# On FreeBSD and NetBSD, crt1.o the final link will fail because of
# unresolved symbols.  It turns out that libc.so references symbols
# that are normally provided by crt1.o, which isn't linked in since we
# specify -nostartfiles.  Using -nostdlib doesn't help since
# target_compile automatically adds -lm.  Linking statically avoids
# this mess.
if {[istarget "*-*-freebsd*"] || [istarget "*-*-netbsd*"]} then {
    append link-flags " -static"
}

# On NetBSD/ELF we need a special NetBSD-identifying note section.
if { [istarget "*-*-netbsdelf*"]
     || [istarget "x86_64-*-netbsd*"] } then {
    set asm-note "netbsd"
a151 2
remote_exec build "rm -f ${subdir}/note.inc"
remote_download host ${srcdir}/${subdir}/${asm-note}.inc ${subdir}/note.inc
a364 1
remote_exec build "rm -f ${subdir}/note.inc"
@


1.25.8.10
log
@2004-01-26  David Carlton  <carlton@@kealia.com>

	* Merge with mainline; tag is carlton_dictionary-20040126-merge.
@
text
@d1 1
a1 1
# Copyright 1998, 2000, 2001, 2002, 2003, 2004 Free Software Foundation, Inc.
d121 1
a121 1
# On FreeBSD and NetBSD, the final link will fail because of
d127 1
a127 5
#
# On Solaris, linking dynamically results in a binary that dumps core.
#
if {[istarget "*-*-freebsd*"] || [istarget "*-*-netbsd*"]
    || [istarget "*-*-solaris2*"]} then {
@


1.24
log
@	* gdb.asm/asm-source.exp: Add v850 as supported target.
	* gdb.asm/v850.inc: New file.
@
text
@d50 4
@


1.24.4.1
log
@Merge with mainline, kseitz_interps-20020619-merge.
@
text
@a49 4
if [istarget "x86_64-*-*"] then {
    set asm-arch x86_64
    set asm-flags "-gdwarf2 -I${srcdir}/${subdir} -I${objdir}/${subdir}"
}
@


1.24.4.2
log
@merge from mainline
@
text
@a59 3
if [istarget "mips*-*"] then {
    set asm-arch mips
}
d197 1
a197 1
	"40\[ \t\]+comment \"A routine for foo2 to call.\"" "search"
d222 1
a222 1
gdb_test "bt 3" "\#0.*foo3.*asmsrc1\[.\]s:45.*\#1.*foo2.*asmsrc2\[.\]s:12.*\#2.*main.*asmsrc1\[.\]s:33.*" "bt 3 in foo3"
d280 1
a280 1
	"Make (foo2|selected stack frame) return now\?.*" "y"
@


1.24.2.1
log
@merge from trunk
@
text
@a49 4
if [istarget "x86_64-*-*"] then {
    set asm-arch x86_64
    set asm-flags "-gdwarf2 -I${srcdir}/${subdir} -I${objdir}/${subdir}"
}
@


1.23
log
@2002-04-17  David S. Miller  <davem@@redhat.com>

	* gdb.asm/sparc64.inc: New file.
	* gdb.asm/asm-source.exp: Handle sparc64-*-*.
@
text
@d70 4
@


1.22
log
@2002-04-19  Elena Zannoni  <ezannoni@@redhat.com>

	* gdb.asm/asm-source.exp: Don't use a symlink, just copy the
	instruction file directly into the build tree.  Clean up at end of
	test.
@
text
@d62 4
@


1.21
log
@2002-04-07  Elena Zannoni  <ezannoni@@redhat.com>

        Work around for PR gdb/285:
	* gdb.asm/asm-source.exp: Bail out if multilibs are detected.
@
text
@d90 2
a91 3
set insn_file ${srcdir}/${subdir}/${asm-arch}.inc
remote_exec build "rm -f ${objdir}/${subdir}/arch.inc"
remote_exec build "ln -s ${insn_file} ${objdir}/${subdir}/arch.inc"
d280 1
@


1.20
log
@2002-04-07  Elena Zannoni  <ezannoni@@redhat.com>

        * gdb.asm/asm-source.exp: Build symbolic link to arch specific
        instructions file at run time instead of configure time.
        Sometimes we run the test in a directory that is not the one we
        configured in.
        * gdb.asm/configure.in: Delete creation of symlink.
        * gdb.asm/configure: Regenerate.
@
text
@d70 15
@


1.19
log
@2002-04-01  Daniel Jacobowitz  <drow@@mvista.com>

        * gdb.asm/Makefile.in: Correct dependencies.

        * gdb.asm/powerpc.inc: New file.
        * gdb.asm/asm-source.exp: Add PowerPC.
        * gdb.asm/configure.in: Likewise.
        * gdb.asm/configure: Regenerated.
@
text
@d1 1
a1 1
#   Copyright 1998, 2000 Free Software Foundation, Inc.
d74 4
@


1.18
log
@* gdb.asm/asm-source.exp: Parse the output from `info sources' one
filename at a time, and watch for the ones we want to see.
@
text
@d56 3
@


1.18.2.1
log
@Merge with mainline.
@
text
@a49 4
if [istarget "x86_64-*-*"] then {
    set asm-arch x86_64
    set asm-flags "-gdwarf2 -I${srcdir}/${subdir} -I${objdir}/${subdir}"
}
@


1.17
log
@* gdb.asm/asm-source.exp (info symbol): Take another shot at
anchoring the pattern matching the entry point symbol's name.
@
text
@d205 31
a235 4
# Try 'info sources'
gdb_test "info sources" \
	"Source files .*asmsrc\[12\].s.*asmsrc\[12\].s.*" \
	"info sources"
@


1.16
log
@	* gdb.asm/arm.inc: New file.
	* gdb.asm/asm-source.exp: Add arm targets.
	* gdb.asm/configure.in: Ditto.
	* gdb.asm/configure: Recreated from configure.in.
@
text
@d136 12
a147 7
    -re "info symbol 0x$entry_point\[\r\n\]*" {
	exp_continue
    }
    -re "^(.*) in section .*$gdb_prompt $" {
        # It's important to anchor the pattern above at the beginning
        # of the line.  Without that carat, the (.*) may end up
        # matching the empty string.
@


1.15
log
@	* gdb.asm/asm-source.exp: Drop setting link-flags for xstormy16.
	Substitute call to target_link by call to gdb_compile.
@
text
@d38 6
@


1.14
log
@	* gdb.asm/asm-source.exp: Add support for xstormy16.
	* gdb.asm/configure.in: Ditto.
	* gdb.asm/configure: Rebuild.
	* gdb.asm/xstormy16.inc: New file.
@
text
@a55 1
    set link-flags "-L${objdir}/../../gcc"
d78 5
a82 1
if  { [target_link "asmsrc1.o asmsrc2.o" ${binfile} "${link-flags}"] != "" } {
@


1.13
log
@* gdb.asm/asm-source.exp (info symbol): Anchor the pattern
matching the entry point symbol's name at the beginning of the
line.
@
text
@d53 5
@


1.12
log
@2001-12-06  Michael Snyder  <msnyder@@redhat.com>

	* gdb.asm/asm-source.exp: Add tests for info target, info symbol,
	and detect whether the start symbol has a leading underscore.
@
text
@d125 4
a128 1
    -re "(.*) in section .*$gdb_prompt $" {
@


1.11
log
@2001-11-30  Michael Snyder  <msnyder@@redhat.com>

	* gdb.asm/asm-source.exp: Add tests for list, search, finish, return,
	next, info source, info sources, info line, global and static
	variables, and static functions.
	* gdb.asm/common.inc: New macro gdbasm_datavar (default definition).
	* gdb.asm/i386.inc: Override default definition of gdbasm_datavar.
	* gdb.asm/asmsrc1.s: Add a static function and some variables.
	* gdb.asm/asmsrc2.s: Make foo2 call foo3 twice (to test 'next').
	* gdb.asm/d10v.inc (gdbasm_enter): Set up frame pointer.
	(gdbasm_leave): Restore frame pointer.
	(gdbasm_startup): Copy stack set-up from crt0.S.
@
text
@d102 35
d138 1
a138 1
gdb_test "list _start" ".*gdbasm_startup.*" "list"
@


1.10
log
@Add assembly-source tests for s390-ibm-linux.
* gdb.asm/s390.inc: New file.
* gdb.asm/configure.in, gdb.asm/asm-source.exp: Add clauses for
the S/390 architecture.
* gdb.asm/configure: Regenerated.
@
text
@d102 7
d133 42
@


1.9
log
@2001-11-21  Michael Snyder  <msnyder@@redhat.com>

        * gdb.asm/sparc.inc: New file.
	* gdb.asm/asm-source.exp: Recognize sparc target.
	* gdb.asm/configure.in: Recognize sparc target.
	* gdb.asm/configure: Regenerate.
@
text
@d41 3
@


1.8
log
@2001-11-21  Michael Snyder  <msnyder@@redhat.com>

	* gdb.asm/m32r.inc: New file.
	* gdb.asm/asm-source.exp: Recognize m32r target.
	* gdb.asm/configure.in: Recognize m32r target.
	* gdb.asm/configure: Regenerate.
@
text
@d47 3
@


1.7
log
@2001-11-20  Michael Snyder  <msnyder@@redhat.com>

	* gdb.asm/i386.inc: New file.
	* gdb.asm/asm-source.exp: Recognize ix86 target.
	* gdb.asm/configure.in: Recognize ix86 target.
	* gdb.asm/configure: Regenerate.
@
text
@d44 3
@


1.6
log
@	* gdb.asm/asm-sources.exp: Allow defining linker flags.
@
text
@d41 3
@


1.5
log
@* gdb.asm/asm-source.exp: Supress file, instead of skip, when not
implemented.
@
text
@d36 1
d62 1
a62 1
if  { [target_link "asmsrc1.o asmsrc2.o" ${binfile} ""] != "" } {
@


1.4
log
@2001-11-07  Michael Snyder  <msnyder@@redhat.com>

        * gdb.asm/asm-source.exp (bt ALL in foo2): Accept a backtrace that
	includes a stack frame for "start".
@
text
@d41 1
a41 2
    verbose "Skipping assembly source test -- not implemented for this target."
    return 
@


1.3
log
@Update/correct copyright notices.
@
text
@d96 6
a101 2
# See if a simple `bt' prints the right source files and doesn't fall off the stack.
gdb_test "bt 10" "\#0.*foo2.*asmsrc2\[.\]s:12.*\#1.*main.*asmsrc1\[.\]s:33" "bt ALL in foo2"
@


1.2
log
@Rewrite gdb.asm so that it doesn't assume a C comiler (or any C
support).
@
text
@d1 1
a1 1
#   Copyright (C) 1998 Free Software Foundation, Inc.
@


1.1
log
@Initial revision
@
text
@d34 3
d39 2
a40 1
} else {
d50 4
a53 1
set asm-flags "-Wa,-gstabs,-I${srcdir}/${subdir},-I${objdir}/${subdir}"
d55 1
a55 1
if {[gdb_compile ${src1} asmsrc1.o object "additional_flags=${asm-flags}"] != ""} then {
d58 1
a58 1
if {[gdb_compile ${src2} asmsrc2.o object "additional_flags=${asm-flags}"] != ""} then {
d62 1
a62 1
if  { [gdb_compile "asmsrc1.o asmsrc2.o" ${binfile} executable "ldflags=-nodefaultlibs"] != "" } {
d82 1
a82 1
gdb_test "f" "asmsrc1\[.\]s:18.*several_nops" "f at main"
d85 1
a85 1
gdb_test "n" "22\[ 	\]*.*foo2" "next over macro"
d96 5
a100 2
# See if `bt' prints the right source files.
gdb_test "bt" "\#0.*foo2.*asmsrc2\[.\]s:12.*\#1.*main.*asmsrc1\[.\]s:22" "bt in foo2"
d108 2
a109 2
# Now see if `bt' is correct.
gdb_test "bt" "\#0.*foo3.*asmsrc1\[.\]s:33.*\#1.*foo2.*asmsrc2\[.\]s:12.*\#2.*main.*asmsrc1\[.\]s:22" "bt in foo3"
@


1.1.1.1
log
@Initial creation of sourceware repository
@
text
@@

