head	1.4;
access;
symbols
	cagney_x86i386-20030821-branch:1.3.0.30
	cagney_x86i386-20030821-branchpoint:1.3
	carlton_dictionary-20030805-merge:1.3
	carlton_dictionary-20030627-merge:1.3
	gdb_6_0-branch:1.3.0.28
	gdb_6_0-2003-06-23-branchpoint:1.3
	jimb-ppc64-linux-20030613-branch:1.3.0.26
	jimb-ppc64-linux-20030613-branchpoint:1.3
	cagney_writestrings-20030508-branch:1.3.0.24
	cagney_writestrings-20030508-branchpoint:1.3
	jimb-ppc64-linux-20030528-branch:1.3.0.22
	jimb-ppc64-linux-20030528-branchpoint:1.3
	carlton_dictionary-20030523-merge:1.3
	cagney_fileio-20030521-branch:1.3.0.20
	cagney_fileio-20030521-branchpoint:1.3
	kettenis_i386newframe-20030517-mergepoint:1.3
	jimb-ppc64-linux-20030509-branch:1.3.0.18
	jimb-ppc64-linux-20030509-branchpoint:1.3
	kettenis_i386newframe-20030504-mergepoint:1.3
	carlton_dictionary-20030430-merge:1.3
	kettenis_i386newframe-20030419-branch:1.3.0.16
	kettenis_i386newframe-20030419-branchpoint:1.3
	carlton_dictionary-20030416-merge:1.3
	cagney_frameaddr-20030409-mergepoint:1.3
	kettenis_i386newframe-20030406-branch:1.3.0.14
	kettenis_i386newframe-20030406-branchpoint:1.3
	cagney_frameaddr-20030403-branchpoint:1.3
	cagney_frameaddr-20030403-branch:1.3.0.12
	cagney_framebase-20030330-mergepoint:1.3
	cagney_framebase-20030326-branch:1.3.0.10
	cagney_framebase-20030326-branchpoint:1.3
	cagney_lazyid-20030317-branch:1.3.0.8
	cagney_lazyid-20030317-branchpoint:1.3
	kettenis-i386newframe-20030316-mergepoint:1.3
	offbyone-20030313-branch:1.3.0.6
	offbyone-20030313-branchpoint:1.3
	kettenis-i386newframe-20030308-branch:1.3.0.4
	kettenis-i386newframe-20030308-branchpoint:1.3
	carlton_dictionary-20030305-merge:1.3
	cagney_offbyone-20030303-branch:1.3.0.2
	cagney_offbyone-20030303-branchpoint:1.3
	carlton_dictionary-20030207-merge:1.3
	interps-20030203-mergepoint:1.2
	interps-20030202-branch:1.2.0.30
	interps-20030202-branchpoint:1.2
	cagney-unwind-20030108-branch:1.2.0.28
	cagney-unwind-20030108-branchpoint:1.2
	carlton_dictionary-20021223-merge:1.2
	gdb_5_3-2002-12-12-release:1.2
	carlton_dictionary-20021115-merge:1.2
	kseitz_interps-20021105-merge:1.2
	kseitz_interps-20021103-merge:1.2
	drow-cplus-merge-20021020:1.2
	drow-cplus-merge-20021025:1.2
	carlton_dictionary-20021025-merge:1.2
	carlton_dictionary-20021011-merge:1.2
	drow-cplus-branch:1.2.0.26
	drow-cplus-branchpoint:1.2
	kseitz_interps-20020930-merge:1.2
	carlton_dictionary-20020927-merge:1.2
	carlton_dictionary-branch:1.2.0.24
	carlton_dictionary-20020920-branchpoint:1.2
	gdb_5_3-branch:1.2.0.22
	gdb_5_3-2002-09-04-branchpoint:1.2
	kseitz_interps-20020829-merge:1.2
	cagney_sysregs-20020825-branch:1.2.0.20
	cagney_sysregs-20020825-branchpoint:1.2
	readline_4_3-import-branch:1.2.0.18
	readline_4_3-import-branchpoint:1.2
	gdb_5_2_1-2002-07-23-release:1.2
	kseitz_interps-20020528-branch:1.2.0.16
	kseitz_interps-20020528-branchpoint:1.2
	cagney_regbuf-20020515-branch:1.2.0.14
	cagney_regbuf-20020515-branchpoint:1.2
	jimb-macro-020506-branch:1.2.0.12
	jimb-macro-020506-branchpoint:1.2
	gdb_5_2-2002-04-29-release:1.2
	gdb_5_2-branch:1.2.0.10
	gdb_5_2-2002-03-03-branchpoint:1.2
	gdb_5_1_1-2002-01-24-release:1.2
	gdb_5_1_0_1-2002-01-03-release:1.2
	cygnus_cvs_20020108_pre:1.2
	gdb_5_1_0_1-2002-01-03-branch:1.2.0.8
	gdb_5_1_0_1-2002-01-03-branchpoint:1.2
	gdb_5_1-2001-11-21-release:1.2
	gdb_s390-2001-09-26-branch:1.2.0.6
	gdb_s390-2001-09-26-branchpoint:1.2
	gdb_5_1-2001-07-29-branch:1.2.0.4
	gdb_5_1-2001-07-29-branchpoint:1.2
	dberlin-typesystem-branch:1.2.0.2
	dberlin-typesystem-branchpoint:1.2
	gdb-post-ptid_t-2001-05-03:1.2
	gdb-pre-ptid_t-2001-05-03:1.2
	insight-precleanup-2001-01-01:1.1.1.3
	gdb-post-protoization-2000-07-29:1.1.1.3
	gdb-pre-protoization-2000-07-29:1.1.1.3
	gdb-premipsmulti-2000-06-06-branch:1.1.1.3.0.4
	gdb-premipsmulti-2000-06-06-branchpoint:1.1.1.3
	gdb-post-params-removal-2000-06-04:1.1.1.3
	gdb-pre-params-removal-2000-06-04:1.1.1.3
	gdb-post-params-removal-2000-05-28:1.1.1.3
	gdb-pre-params-removal-2000-05-28:1.1.1.3
	gdb_5_0-2000-05-19-release:1.1.1.3
	gdb_4_18_2-2000-05-18-release:1.1.1.3
	gdb_4_95_1-2000-05-11-snapshot:1.1.1.3
	gdb_4_95_0-2000-04-27-snapshot:1.1.1.3
	gdb_5_0-2000-04-10-branch:1.1.1.3.0.2
	gdb_5_0-2000-04-10-branchpoint:1.1.1.3
	repo-unification-2000-02-06:1.1.1.3
	insight-2000-02-04:1.1.1.3
	gdb-2000-02-04:1.1.1.3
	gdb-2000-02-02:1.1.1.3
	gdb-2000-02-01:1.1.1.3
	gdb-2000-01-31:1.1.1.3
	gdb-2000-01-26:1.1.1.3
	gdb-2000-01-24:1.1.1.3
	gdb-2000-01-17:1.1.1.3
	gdb-2000-01-10:1.1.1.3
	gdb-2000-01-05:1.1.1.3
	gdb-1999-12-21:1.1.1.3
	gdb-1999-12-13:1.1.1.3
	gdb-1999-12-07:1.1.1.3
	gdb-1999-12-06:1.1.1.3
	gdb-1999-11-16:1.1.1.3
	gdb-1999-11-08:1.1.1.3
	gdb-1999-11-01:1.1.1.3
	gdb-1999-10-25:1.1.1.3
	gdb-1999-10-18:1.1.1.3
	gdb-1999-10-11:1.1.1.3
	gdb-1999-10-04:1.1.1.3
	gdb-1999-09-28:1.1.1.3
	gdb-1999-09-21:1.1.1.3
	gdb-1999-09-13:1.1.1.3
	gdb-1999-09-08:1.1.1.3
	gdb-1999-08-30:1.1.1.2
	gdb-1999-08-23:1.1.1.2
	gdb-1999-08-16:1.1.1.2
	gdb-1999-08-09:1.1.1.2
	gdb-1999-08-02:1.1.1.2
	gdb-1999-07-26:1.1.1.1
	gdb-1999-07-19:1.1.1.1
	gdb-1999-07-12:1.1.1.1
	gdb-post-reformat-19990707:1.1.1.1
	gdb-1999-07-07-post-reformat-snapshot:1.1.1.1
	gdb-pre-reformat-19990707:1.1.1.1
	gdb-1999-07-07:1.1.1.1
	gdb-1999-07-05:1.1.1.1
	gdb-1999-06-28:1.1.1.1
	gdb-1999-06-21:1.1.1.1
	gdb-1999-06-14:1.1.1.1
	gdb-1999-06-07:1.1.1.1
	gdb-1999-06-01:1.1.1.1
	gdb-4_18-branch:1.1.1.1.0.2
	gdb-4_18-release:1.1.1.1
	gdb-1999-05-25:1.1.1.1
	gdb-1999-05-19:1.1.1.1
	gdb-1999-05-10:1.1.1.1
	gdb-19990504:1.1.1.1
	gdb-19990422:1.1.1.1
	SNAPSHOT:1.1.1
	gdb-4_18:1.1.1.1
	GDB_4_18:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.4
date	2003.08.23.03.55.59;	author chastain;	state dead;
branches;
next	1.3;

1.3
date	2003.02.05.07.23.11;	author chastain;	state Exp;
branches
	1.3.28.1;
next	1.2;

1.2
date	2001.03.06.08.21.52;	author kevinb;	state Exp;
branches
	1.2.24.1
	1.2.26.1;
next	1.1;

1.1
date	99.04.16.01.34.32;	author shebs;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.04.16.01.34.32;	author shebs;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	99.08.02.23.46.52;	author jsm;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	99.09.09.00.00.26;	author shebs;	state Exp;
branches;
next	;

1.2.24.1
date	2003.02.07.19.17.59;	author carlton;	state Exp;
branches;
next	1.2.24.2;

1.2.24.2
date	2003.08.30.03.40.33;	author chastain;	state dead;
branches;
next	;

1.2.26.1
date	2003.12.14.20.27.50;	author drow;	state dead;
branches;
next	;

1.3.28.1
date	2003.08.25.03.53.47;	author chastain;	state dead;
branches;
next	;


desc
@@


1.4
log
@2003-08-22  Michael Chastain  <mec@@shout.net>

	* gdb.cp: New directory.
	* gdb.cp/*: Copy from gdb.c++/*.
	* gdb.c++/*: Remove.
	* Makefile.in: Change gdb.c++ to gdb.cp.
	* configure.in:  Ditto.
	* configure: Regnerate.
@
text
@# Tests for anonymous union support.
# Copyright 1998, 1999, 2003 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  

# Please email any bugs, comments, and/or additions to this file to:
# bug-gdb@@prep.ai.mit.edu

# Written by Satish Pai <pai@@apollo.hp.com> 1997-08-19

# This file is part of the gdb testsuite

if $tracelevel then {
        strace $tracelevel
        }

#
# test running programs
#

set prms_id 0
set bug_id 0

if { [skip_cplus_tests] } { continue }

set testfile "anon-union"
set srcfile ${testfile}.cc
set binfile ${objdir}/${subdir}/${testfile}

if  { [gdb_compile "${srcdir}/${subdir}/${srcfile}" "${binfile}" executable {debug c++}] != "" } {
     perror "Testcase compile failed" 0
     continue
}

# Start with a fresh gdb
gdb_exit
gdb_start
gdb_reinitialize_dir $srcdir/$subdir
gdb_load ${binfile}


if ![runto_main] then {
    perror "couldn't run to breakpoint"
    continue
}

send_gdb "set width 0\n"
gdb_expect -re "$gdb_prompt $"

#send_gdb "ptype foo\n"
#gdb_expect {
#   -re "\r\n$gdb_prompt $" {
#      pass "ptype foo"
#    }
#    -re ".*$gdb_prompt $" { fail "ptype foo" }
#    timeout { fail "(timeout) ptype foo" }
#}

#send_gdb "ptype bar\n"
#gdb_expect {
#   -re "\r\n$gdb_prompt $" {
#      pass "ptype foo"
#    }
#    -re ".*$gdb_prompt $" { fail "ptype foo" }
#    timeout { fail "(timeout) ptype foo" }
#}

# NOTE: Add -- ptype foo.x, etc. when things are working

#Initialize foo
send_gdb "next\n"
gdb_expect {
   -re "40\[ \t\]*foo.paper = 33;\r\n$gdb_prompt $" {
      pass "next 1"
    }
    -re ".*$gdb_prompt $" { fail "next 1" }
    timeout { fail "(timeout) next 1" }
}

# Print out the big anon union.
send_gdb "print foo\n"
gdb_expect {
   -re "\\$\[0-9\]* = \{num1 = \{zero = 0, one = 0\}, \{pebble = 0, x = \{rock = 0, rock2 = 0\}, \{qux = 0, mux = 0\}, boulder = 0\}, \{paper = 0, cloth = 0\}, num2 = \{two = 0, three = 0\}\}\r\n$gdb_prompt $" {
      pass "print foo 1"
    }
    -re ".*$gdb_prompt $" { fail "print foo 1" }
    timeout { fail "(timeout) print foo 1" }
}

# Step over assignment to member

send_gdb "next\n"
gdb_expect {
   -re "41\[ \t\]*foo.pebble = 44;\r\n$gdb_prompt $" {
      pass "next 1"
    }
    -re ".*$gdb_prompt $" { fail "next 1" }
    timeout { fail "(timeout) next 1" }
}

# Now print out anon union again
send_gdb "print foo\n"
gdb_expect {
   -re "\\$\[0-9\]* = \{num1 = \{zero = 0, one = 0\}, \{pebble = 0, x = \{rock = 0, rock2 = 0\}, \{qux = 0, mux = 0\}, boulder = 0\}, \{paper = 33, cloth = 33\}, num2 = \{two = 0, three = 0\}\}\r\n$gdb_prompt $" {
      pass "print foo 2"
    }
    -re ".*$gdb_prompt $" { fail "print foo 2" }
    timeout { fail "(timeout) print foo 2" }
}

# Modify the member just set
send_gdb "set var foo.cloth = 35\n"
gdb_expect {
   -re "\r\n$gdb_prompt $" {
      pass "set var foo.cloth"
    }
    timeout { fail "(timeout) set var foo.cloth" }
}

# Now print out anon union again to see if the right member was set 
send_gdb "print foo\n"
gdb_expect {
   -re "\\$\[0-9\]* = \{num1 = \{zero = 0, one = 0\}, \{pebble = 0, x = \{rock = 0, rock2 = 0\}, \{qux = 0, mux = 0\}, boulder = 0\}, \{paper = 35, cloth = 35\}, num2 = \{two = 0, three = 0\}\}\r\n$gdb_prompt $" {
      pass "print foo 3"
    }
    -re ".*$gdb_prompt $" { fail "print foo 3" }
    timeout { fail "(timeout) print foo 3" }
}


# Step over next assignment to member

send_gdb "next\n"
gdb_expect {
   -re "42\[ \t\]*foo.mux = 55;\r\n$gdb_prompt $" {
      pass "next 2"
    }
    -re ".*$gdb_prompt $" { fail "next 2" }
    timeout { fail "(timeout) next 2" }
}

# Now print out anon union again 
send_gdb "print foo\n"
gdb_expect {
   -re "\\$\[0-9\]* = \{num1 = \{zero = 0, one = 0\}, \{pebble = 44, x = \{rock = 44, rock2 = 0\}, \{qux = 44, mux = 44\}, boulder = 44\}, \{paper = 35, cloth = 35\}, num2 = \{two = 0, three = 0\}\}\r\n$gdb_prompt $" {
      pass "print foo 4"
    }
    -re ".*$gdb_prompt $" { fail "print foo 4" }
    timeout { fail "(timeout) print foo 4" }
}

# Modify the member just set
send_gdb "set var foo.pebble = 45\n"
gdb_expect {
   -re "\r\n$gdb_prompt $" {
      pass "set var foo.pebble"
    }
    timeout { fail "(timeout) set var foo.pebble" }
}

# Now print out anon union again to see if the right member was set 
send_gdb "print foo\n"
gdb_expect {
   -re "\\$\[0-9\]* = \{num1 = \{zero = 0, one = 0\}, \{pebble = 45, x = \{rock = 45, rock2 = 0\}, \{qux = 45, mux = 45\}, boulder = 45\}, \{paper = 35, cloth = 35\}, num2 = \{two = 0, three = 0\}\}\r\n$gdb_prompt $" {
      pass "print foo 5"
    }
    -re ".*$gdb_prompt $" { fail "print foo 5" }
    timeout { fail "(timeout) print foo 5" }
}

# Modify another member at a different level
send_gdb "set var foo.qux = 46\n"
gdb_expect {
   -re "\r\n$gdb_prompt $" {
      pass "set var foo.qux"
    }
    timeout { fail "(timeout) set var foo.qux" }
}

# Now print out anon union again to see if the right member was set 
send_gdb "print foo\n"
gdb_expect {
   -re "\\$\[0-9\]* = \{num1 = \{zero = 0, one = 0\}, \{pebble = 46, x = \{rock = 46, rock2 = 0\}, \{qux = 46, mux = 46\}, boulder = 46\}, \{paper = 35, cloth = 35\}, num2 = \{two = 0, three = 0\}\}\r\n$gdb_prompt $" {
      pass "print foo 6"
    }
    -re ".*$gdb_prompt $" { fail "print foo 6" }
    timeout { fail "(timeout) print foo 6" }
}

# Modify the member at another level, but not the first one in the union
send_gdb "set var foo.mux = 47\n"
gdb_expect {
   -re "\r\n$gdb_prompt $" {
      pass "set var foo.mux"
    }
    timeout { fail "(timeout) set var foo.mux" }
}

# Now print out anon union again to see if things worked
send_gdb "print foo\n"
gdb_expect {
   -re "\\$\[0-9\]* = \{num1 = \{zero = 0, one = 0\}, \{pebble = 47, x = \{rock = 47, rock2 = 0\}, \{qux = 47, mux = 47\}, boulder = 47\}, \{paper = 35, cloth = 35\}, num2 = \{two = 0, three = 0\}\}\r\n$gdb_prompt $" {
      pass "print foo 7"
    }
    -re ".*$gdb_prompt $" { fail "print foo 7" }
    timeout { fail "(timeout) print foo 7" }
}

# Modify a member of a struct in an anon union
send_gdb "set var foo.x.rock = 48\n"
gdb_expect {
   -re "\r\n$gdb_prompt $" {
      pass "set var foo.x.rock"
    }
    timeout { fail "(timeout) set var foo.x.rock" }
}

# Now print out anon union again to see if things worked
send_gdb "print foo\n"
gdb_expect {
   -re "\\$\[0-9\]* = \{num1 = \{zero = 0, one = 0\}, \{pebble = 48, x = \{rock = 48, rock2 = 0\}, \{qux = 48, mux = 48\}, boulder = 48\}, \{paper = 35, cloth = 35\}, num2 = \{two = 0, three = 0\}\}\r\n$gdb_prompt $" {
      pass "print foo 8"
    }
    -re ".*$gdb_prompt $" { fail "print foo 8" }
    timeout { fail "(timeout) print foo 8" }
}

# Modify a member of a struct in an anon union, but something
# that doesn't alias to some other union member
send_gdb "set var foo.x.rock2 = 49\n"
gdb_expect {
   -re "\r\n$gdb_prompt $" {
      pass "set var foo.x.rock2"
    }
    timeout { fail "(timeout) set var foo.x.rock2" }
}

# Now print out anon union again to see if things worked
send_gdb "print foo\n"
gdb_expect {
   -re "\\$\[0-9\]* = \{num1 = \{zero = 0, one = 0\}, \{pebble = 48, x = \{rock = 48, rock2 = 49\}, \{qux = 48, mux = 48\}, boulder = 48\}, \{paper = 35, cloth = 35\}, num2 = \{two = 0, three = 0\}\}\r\n$gdb_prompt $" {
      pass "print foo 9"
    }
    -re ".*$gdb_prompt $" { fail "print foo 9" }
    timeout { fail "(timeout) print foo 9" }
}


# Step over next four assignments
send_gdb "next 4\n"
gdb_expect {
   -re "53\[ \t\]*w = 45;\r\n$gdb_prompt $" {
      pass "next 3"
    }
    -re ".*$gdb_prompt $" { fail "next 3" }
    timeout { fail "(timeout) next 3" }
}

# Tests for anon unions that are not members of a class or struct

send_gdb "print w\n"
gdb_expect {
   -re "\\$\[0-9\]* = 0\r\n$gdb_prompt $" {
      pass "print w 1"
    }
    -re ".*$gdb_prompt $" { fail "print w 1" }
    timeout { fail "(timeout) print w 1" }
}

send_gdb "print z\n"
gdb_expect {
   -re "\\$\[0-9\]* = 0\r\n$gdb_prompt $" {
      pass "print z 1"
    }
    -re ".*$gdb_prompt $" { fail "print z 1" }
    timeout { fail "(timeout) print z 1" }
}

# Step over next assignment to w
send_gdb "next\n"
gdb_expect {
   -re "55\[ \t\]*\}\r\n$gdb_prompt $" {
      pass "next 4"
    }
    -re ".*$gdb_prompt $" { fail "next 4" }
    timeout { fail "(timeout) next 4" }
}

# See if the change in value is noticed
send_gdb "print w\n"
gdb_expect {
   -re "\\$\[0-9\]* = 45\r\n$gdb_prompt $" {
      pass "print w 2"
    }
    -re ".*$gdb_prompt $" { fail "print w 2" }
    timeout { fail "(timeout) print w 2" }
}

# See if z shows the same value
send_gdb "print z\n"
gdb_expect {
   -re "\\$\[0-9\]* = 45\r\n$gdb_prompt $" {
      pass "print z 2"
    }
    -re ".*$gdb_prompt $" { fail "print z 2" }
    timeout { fail "(timeout) print z 2" }
}

# Set the anon union member 
send_gdb "set var z = 27\n"
gdb_expect {
   -re "\r\n$gdb_prompt $" {
      pass "set var z"
    }
    timeout { fail "(timeout) set var z" }
}

# See if the change in value is noticed
send_gdb "print w\n"
gdb_expect {
   -re "\\$\[0-9\]* = 27\r\n$gdb_prompt $" {
      pass "print w 3"
    }
    -re ".*$gdb_prompt $" { fail "print w 3" }
    timeout { fail "(timeout) print w 3" }
}

# See if z shows the same value
send_gdb "print z\n"
gdb_expect {
   -re "\\$\[0-9\]* = 27\r\n$gdb_prompt $" {
      pass "print z 3"
    }
    -re ".*$gdb_prompt $" { fail "print z 3" }
    timeout { fail "(timeout) print z 3" }
}
@


1.3
log
@2003-02-04  Michael Chastain  <mec@@shout.net>

	* gdb.c++/anon-union.exp: Do not call gdb_suppress_entire_file.
	Call perror and then continue.
@
text
@@


1.3.28.1
log
@2003-08-22  Michael Chastain  <mec@@shout.net>

	* gdb.cp: New directory.
	* gdb.cp/*: Copy from gdb.c++/*.
	* gdb.c++/*: Remove.
	* Makefile.in: Change gdb.c++ to gdb.cp.
	* configure.in:  Ditto.
	* configure: Regnerate.
@
text
@@


1.2
log
@Update/correct copyright notices.
@
text
@d2 1
a2 1
# Copyright 1998, 1999 Free Software Foundation, Inc.
d43 2
a44 1
     gdb_suppress_entire_file "Testcase compile failed, so all tests in this file will automatically fail."
@


1.2.26.1
log
@Merge drow-cplus-branch to:
  cvs rtag -D 2003-12-14 00:00:00 UTC drow-cplus-merge-20031214 gdb+dejagnu
@
text
@@


1.2.24.1
log
@2003-02-07  David Carlton  <carlton@@math.stanford.edu>

	* Merge with mainline; tag is carlton_dictionary-20030207-merge.
@
text
@d2 1
a2 1
# Copyright 1998, 1999, 2003 Free Software Foundation, Inc.
d43 1
a43 2
     perror "Testcase compile failed" 0
     continue
@


1.2.24.2
log
@2003-08-22  Michael Chastain  <mec@@shout.net>

	* gdb.cp: New directory.
	* gdb.cp/*: Copy from gdb.c++/*.
	* gdb.c++/*: Remove.
	* Makefile.in: Change gdb.c++ to gdb.cp.
	* configure.in:  Ditto.
	* carlton_runnamespace: Ditto.
	* carlton_runtest: Ditto.
	* configure: Regnerate.
@
text
@@


1.1
log
@Initial revision
@
text
@d1 2
a2 1
# Copyright (C) 1998 Free Software Foundation, Inc.
a20 2
#
# Tests for anonymous union support
d36 2
d41 1
d81 10
d260 2
a261 2
# Step over next two assignments
send_gdb "next 2\n"
d263 1
a263 1
   -re "52\[ \t\]*w = 45;\r\n$gdb_prompt $" {
d272 17
a288 19
# w is not yet initialized; it contains garbage
#send_gdb "print w\n"
#gdb_expect {
#   -re "\\$\[0-9\]* = 0\r\n$gdb_prompt $" {
#      pass "print w 1"
#    }
#    -re ".*$gdb_prompt $" { fail "print w 1" }
#    timeout { fail "(timeout) print w 1" }
#}
#
# z is not yet initialized; it contains garbage
#send_gdb "print z\n"
#gdb_expect {
#   -re "\\$\[0-9\]* = 0\r\n$gdb_prompt $" {
#      pass "print z 1"
#    }
#    -re ".*$gdb_prompt $" { fail "print z 1" }
#    timeout { fail "(timeout) print z 1" }
#}
d293 1
a293 1
   -re "54\[ \t\]*\}\r\n$gdb_prompt $" {
@


1.1.1.1
log
@Initial creation of sourceware repository
@
text
@@


1.1.1.2
log
@import gdb-1999-08-02 snapshot
@
text
@a78 10
#Initialize foo
send_gdb "next\n"
gdb_expect {
   -re "40\[ \t\]*foo.paper = 33;\r\n$gdb_prompt $" {
      pass "next 1"
    }
    -re ".*$gdb_prompt $" { fail "next 1" }
    timeout { fail "(timeout) next 1" }
}

d248 2
a249 2
# Step over next four assignments
send_gdb "next 4\n"
d251 1
a251 1
   -re "53\[ \t\]*w = 45;\r\n$gdb_prompt $" {
d260 19
a278 17
send_gdb "print w\n"
gdb_expect {
   -re "\\$\[0-9\]* = 0\r\n$gdb_prompt $" {
      pass "print w 1"
    }
    -re ".*$gdb_prompt $" { fail "print w 1" }
    timeout { fail "(timeout) print w 1" }
}

send_gdb "print z\n"
gdb_expect {
   -re "\\$\[0-9\]* = 0\r\n$gdb_prompt $" {
      pass "print z 1"
    }
    -re ".*$gdb_prompt $" { fail "print z 1" }
    timeout { fail "(timeout) print z 1" }
}
d283 1
a283 1
   -re "55\[ \t\]*\}\r\n$gdb_prompt $" {
@


1.1.1.3
log
@import gdb-1999-09-08 snapshot
@
text
@d1 1
a1 2
# Tests for anonymous union support.
# Copyright (C) 1998, 1999 Free Software Foundation, Inc.
d20 2
a36 2
if { [skip_cplus_tests] } { continue }

a39 1

@


