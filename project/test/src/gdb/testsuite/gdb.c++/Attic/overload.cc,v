head	1.4;
access;
symbols
	cagney_x86i386-20030821-branch:1.3.0.16
	cagney_x86i386-20030821-branchpoint:1.3
	carlton_dictionary-20030805-merge:1.3
	carlton_dictionary-20030627-merge:1.3
	gdb_6_0-branch:1.3.0.14
	gdb_6_0-2003-06-23-branchpoint:1.3
	jimb-ppc64-linux-20030613-branch:1.3.0.12
	jimb-ppc64-linux-20030613-branchpoint:1.3
	cagney_writestrings-20030508-branch:1.3.0.10
	cagney_writestrings-20030508-branchpoint:1.3
	jimb-ppc64-linux-20030528-branch:1.3.0.8
	jimb-ppc64-linux-20030528-branchpoint:1.3
	carlton_dictionary-20030523-merge:1.3
	cagney_fileio-20030521-branch:1.3.0.6
	cagney_fileio-20030521-branchpoint:1.3
	kettenis_i386newframe-20030517-mergepoint:1.3
	jimb-ppc64-linux-20030509-branch:1.3.0.4
	jimb-ppc64-linux-20030509-branchpoint:1.3
	kettenis_i386newframe-20030504-mergepoint:1.3
	carlton_dictionary-20030430-merge:1.3
	kettenis_i386newframe-20030419-branch:1.3.0.2
	kettenis_i386newframe-20030419-branchpoint:1.3
	carlton_dictionary-20030416-merge:1.3
	cagney_frameaddr-20030409-mergepoint:1.2
	kettenis_i386newframe-20030406-branch:1.2.0.14
	kettenis_i386newframe-20030406-branchpoint:1.2
	cagney_frameaddr-20030403-branchpoint:1.2
	cagney_frameaddr-20030403-branch:1.2.0.12
	cagney_framebase-20030330-mergepoint:1.2
	cagney_framebase-20030326-branch:1.2.0.10
	cagney_framebase-20030326-branchpoint:1.2
	cagney_lazyid-20030317-branch:1.2.0.8
	cagney_lazyid-20030317-branchpoint:1.2
	kettenis-i386newframe-20030316-mergepoint:1.2
	offbyone-20030313-branch:1.2.0.6
	offbyone-20030313-branchpoint:1.2
	kettenis-i386newframe-20030308-branch:1.2.0.4
	kettenis-i386newframe-20030308-branchpoint:1.2
	carlton_dictionary-20030305-merge:1.2
	cagney_offbyone-20030303-branch:1.2.0.2
	cagney_offbyone-20030303-branchpoint:1.2
	carlton_dictionary-20030207-merge:1.2
	interps-20030203-mergepoint:1.1.1.3
	interps-20030202-branch:1.1.1.3.0.34
	interps-20030202-branchpoint:1.1.1.3
	cagney-unwind-20030108-branch:1.1.1.3.0.32
	cagney-unwind-20030108-branchpoint:1.1.1.3
	carlton_dictionary-20021223-merge:1.1.1.3
	gdb_5_3-2002-12-12-release:1.1.1.3
	carlton_dictionary-20021115-merge:1.1.1.3
	kseitz_interps-20021105-merge:1.1.1.3
	kseitz_interps-20021103-merge:1.1.1.3
	drow-cplus-merge-20021020:1.1.1.3
	drow-cplus-merge-20021025:1.1.1.3
	carlton_dictionary-20021025-merge:1.1.1.3
	carlton_dictionary-20021011-merge:1.1.1.3
	drow-cplus-branch:1.1.1.3.0.30
	drow-cplus-branchpoint:1.1.1.3
	kseitz_interps-20020930-merge:1.1.1.3
	carlton_dictionary-20020927-merge:1.1.1.3
	carlton_dictionary-branch:1.1.1.3.0.28
	carlton_dictionary-20020920-branchpoint:1.1.1.3
	gdb_5_3-branch:1.1.1.3.0.26
	gdb_5_3-2002-09-04-branchpoint:1.1.1.3
	kseitz_interps-20020829-merge:1.1.1.3
	cagney_sysregs-20020825-branch:1.1.1.3.0.24
	cagney_sysregs-20020825-branchpoint:1.1.1.3
	readline_4_3-import-branch:1.1.1.3.0.22
	readline_4_3-import-branchpoint:1.1.1.3
	gdb_5_2_1-2002-07-23-release:1.1.1.3
	kseitz_interps-20020528-branch:1.1.1.3.0.20
	kseitz_interps-20020528-branchpoint:1.1.1.3
	cagney_regbuf-20020515-branch:1.1.1.3.0.18
	cagney_regbuf-20020515-branchpoint:1.1.1.3
	jimb-macro-020506-branch:1.1.1.3.0.16
	jimb-macro-020506-branchpoint:1.1.1.3
	gdb_5_2-2002-04-29-release:1.1.1.3
	gdb_5_2-branch:1.1.1.3.0.14
	gdb_5_2-2002-03-03-branchpoint:1.1.1.3
	gdb_5_1_1-2002-01-24-release:1.1.1.3
	gdb_5_1_0_1-2002-01-03-release:1.1.1.3
	cygnus_cvs_20020108_pre:1.1.1.3
	gdb_5_1_0_1-2002-01-03-branch:1.1.1.3.0.12
	gdb_5_1_0_1-2002-01-03-branchpoint:1.1.1.3
	gdb_5_1-2001-11-21-release:1.1.1.3
	gdb_s390-2001-09-26-branch:1.1.1.3.0.10
	gdb_s390-2001-09-26-branchpoint:1.1.1.3
	gdb_5_1-2001-07-29-branch:1.1.1.3.0.8
	gdb_5_1-2001-07-29-branchpoint:1.1.1.3
	dberlin-typesystem-branch:1.1.1.3.0.6
	dberlin-typesystem-branchpoint:1.1.1.3
	gdb-post-ptid_t-2001-05-03:1.1.1.3
	gdb-pre-ptid_t-2001-05-03:1.1.1.3
	insight-precleanup-2001-01-01:1.1.1.3
	gdb-post-protoization-2000-07-29:1.1.1.3
	gdb-pre-protoization-2000-07-29:1.1.1.3
	gdb-premipsmulti-2000-06-06-branch:1.1.1.3.0.4
	gdb-premipsmulti-2000-06-06-branchpoint:1.1.1.3
	gdb-post-params-removal-2000-06-04:1.1.1.3
	gdb-pre-params-removal-2000-06-04:1.1.1.3
	gdb-post-params-removal-2000-05-28:1.1.1.3
	gdb-pre-params-removal-2000-05-28:1.1.1.3
	gdb_5_0-2000-05-19-release:1.1.1.3
	gdb_4_18_2-2000-05-18-release:1.1.1.3
	gdb_4_95_1-2000-05-11-snapshot:1.1.1.3
	gdb_4_95_0-2000-04-27-snapshot:1.1.1.3
	gdb_5_0-2000-04-10-branch:1.1.1.3.0.2
	gdb_5_0-2000-04-10-branchpoint:1.1.1.3
	repo-unification-2000-02-06:1.1.1.3
	insight-2000-02-04:1.1.1.3
	gdb-2000-02-04:1.1.1.3
	gdb-2000-02-02:1.1.1.3
	gdb-2000-02-01:1.1.1.3
	gdb-2000-01-31:1.1.1.3
	gdb-2000-01-26:1.1.1.3
	gdb-2000-01-24:1.1.1.3
	gdb-2000-01-17:1.1.1.3
	gdb-2000-01-10:1.1.1.3
	gdb-2000-01-05:1.1.1.3
	gdb-1999-12-21:1.1.1.3
	gdb-1999-12-13:1.1.1.3
	gdb-1999-12-07:1.1.1.3
	gdb-1999-12-06:1.1.1.3
	gdb-1999-11-16:1.1.1.3
	gdb-1999-11-08:1.1.1.3
	gdb-1999-11-01:1.1.1.3
	gdb-1999-10-25:1.1.1.3
	gdb-1999-10-18:1.1.1.3
	gdb-1999-10-11:1.1.1.3
	gdb-1999-10-04:1.1.1.3
	gdb-1999-09-28:1.1.1.3
	gdb-1999-09-21:1.1.1.3
	gdb-1999-09-13:1.1.1.2
	gdb-1999-09-08:1.1.1.2
	gdb-1999-08-30:1.1.1.2
	gdb-1999-08-23:1.1.1.2
	gdb-1999-08-16:1.1.1.2
	gdb-1999-08-09:1.1.1.2
	gdb-1999-08-02:1.1.1.2
	gdb-1999-07-26:1.1.1.2
	gdb-1999-07-19:1.1.1.2
	gdb-1999-07-12:1.1.1.2
	gdb-post-reformat-19990707:1.1.1.2
	gdb-1999-07-07-post-reformat-snapshot:1.1.1.2
	gdb-pre-reformat-19990707:1.1.1.2
	gdb-1999-07-07:1.1.1.2
	gdb-1999-07-05:1.1.1.2
	gdb-1999-06-28:1.1.1.2
	gdb-1999-06-21:1.1.1.2
	gdb-1999-06-14:1.1.1.2
	gdb-1999-06-07:1.1.1.2
	gdb-1999-06-01:1.1.1.2
	gdb-4_18-branch:1.1.1.1.0.2
	gdb-4_18-release:1.1.1.1
	gdb-1999-05-25:1.1.1.2
	gdb-1999-05-19:1.1.1.2
	gdb-1999-05-10:1.1.1.2
	gdb-19990504:1.1.1.2
	gdb-19990422:1.1.1.2
	SNAPSHOT:1.1.1
	gdb-4_18:1.1.1.1
	GDB_4_18:1.1.1;
locks; strict;
comment	@// @;
expand	@o@;


1.4
date	2003.08.23.03.55.59;	author chastain;	state dead;
branches;
next	1.3;

1.3
date	2003.04.11.19.57.33;	author jimb;	state Exp;
branches
	1.3.14.1;
next	1.2;

1.2
date	2003.02.04.21.19.27;	author carlton;	state Exp;
branches;
next	1.1;

1.1
date	99.04.16.01.34.32;	author shebs;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.04.16.01.34.32;	author shebs;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	99.04.26.18.27.26;	author shebs;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	99.09.22.03.26.23;	author jsm;	state Exp;
branches
	1.1.1.3.28.1
	1.1.1.3.30.1;
next	;

1.1.1.3.28.1
date	2003.01.25.01.04.30;	author carlton;	state Exp;
branches;
next	1.1.1.3.28.2;

1.1.1.3.28.2
date	2003.02.07.19.17.59;	author carlton;	state Exp;
branches;
next	1.1.1.3.28.3;

1.1.1.3.28.3
date	2003.04.16.19.57.02;	author carlton;	state Exp;
branches;
next	1.1.1.3.28.4;

1.1.1.3.28.4
date	2003.08.30.03.40.34;	author chastain;	state dead;
branches;
next	;

1.1.1.3.30.1
date	2003.12.14.20.27.51;	author drow;	state dead;
branches;
next	;

1.3.14.1
date	2003.08.25.03.53.48;	author chastain;	state dead;
branches;
next	;


desc
@@


1.4
log
@2003-08-22  Michael Chastain  <mec@@shout.net>

	* gdb.cp: New directory.
	* gdb.cp/*: Copy from gdb.c++/*.
	* gdb.c++/*: Remove.
	* Makefile.in: Change gdb.c++ to gdb.cp.
	* configure.in:  Ditto.
	* configure: Regnerate.
@
text
@#include <stddef.h>

class foo {
public:
  foo  (int);
  foo  (int, const char *);
  foo  (foo&);
  ~foo ();
  void foofunc (int);
  void foofunc (int, signed char *);
  int ifoo;
  const char *ccpfoo;

int overload1arg (void);
int overload1arg (char);         
int overload1arg (signed char);
int overload1arg (unsigned char);
int overload1arg (short);
int overload1arg (unsigned short);
int overload1arg (int);
int overload1arg (unsigned int);
int overload1arg (long);
int overload1arg (unsigned long);
int overload1arg (float);
int overload1arg (double);

int overloadfnarg (void);
int overloadfnarg (int);
int overloadfnarg (int, int (*) (int));

int overloadargs (int a1);
int overloadargs (int a1, int a2);
int overloadargs (int a1, int a2, int a3);
int overloadargs (int a1, int a2, int a3, int a4);
int overloadargs (int a1, int a2, int a3, int a4, int a5);
int overloadargs (int a1, int a2, int a3, int a4, int a5, int a6);
int overloadargs (int a1, int a2, int a3, int a4, int a5, int a6, int a7);
int overloadargs (int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8);
int overloadargs (int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9);
int overloadargs (int a1, int a2, int a3, int a4, int a5, int a6, int a7,
                   int a8, int a9, int a10);
int overloadargs (int a1, int a2, int a3, int a4, int a5, int a6, int a7,
                   int a8, int a9, int a10, int a11);


};

int intToChar (char c)
{
  return 297;
}

void marker1()
{}

int main () 
{
    char arg2 = 2;
    signed char arg3 =3;
    unsigned char arg4 =4;
    short arg5 =5;
    unsigned short arg6 =6;
    int arg7 =7;
    unsigned int arg8 =8;
    long arg9 =9;
    unsigned long arg10 =10;
    float arg11 =100.0;
    double arg12 = 200.0;

    char *str = (char *) "A";
    foo foo_instance1(111);
    foo foo_instance2(222, str);
    foo foo_instance3(foo_instance2);

    #ifdef usestubs
       set_debug_traps();
       breakpoint();
    #endif

    // Verify that intToChar should work:
    intToChar(1);

    marker1(); // marker1-returns-here
    return 0; // marker1-returns-here
}

foo::foo  (int i)                  { ifoo = i; ccpfoo = NULL; }
foo::foo  (int i, const char *ccp) { ifoo = i; ccpfoo = ccp; }
foo::foo  (foo& afoo)              { ifoo = afoo.ifoo; ccpfoo = afoo.ccpfoo;}
foo::~foo ()                       {}


/* Some functions to test overloading by varying one argument type. */

int foo::overload1arg (void)                {  return 1; }
int foo::overload1arg (char arg)            { arg = 0; return 2;}
int foo::overload1arg (signed char arg)     { arg = 0; return 3;}
int foo::overload1arg (unsigned char arg)   { arg = 0; return 4;}
int foo::overload1arg (short arg)           { arg = 0; return 5;}
int foo::overload1arg (unsigned short arg)  { arg = 0; return 6;}
int foo::overload1arg (int arg)             { arg = 0; return 7;}
int foo::overload1arg (unsigned int arg)    { arg = 0; return 8;}
int foo::overload1arg (long arg)            { arg = 0; return 9;}
int foo::overload1arg (unsigned long arg)   { arg = 0; return 10;}
int foo::overload1arg (float arg)           { arg = 0; return 11;}
int foo::overload1arg (double arg)          { arg = 0; return 12;}

/* Test to see that we can explicitly request overloaded functions
   with function pointers in the prototype. */

int foo::overloadfnarg (void) { return ifoo * 20; }
int foo::overloadfnarg (int arg) { arg = 0; return 13;}
int foo::overloadfnarg (int arg, int (*foo) (int))    { return foo(arg); } 

/* Some functions to test overloading by varying argument count. */

int foo::overloadargs (int a1)                 
{ a1 = 0; 
return 1;}

int foo::overloadargs (int a1, int a2)          
{ a1 = a2 = 0; 
return 2;}

int foo::overloadargs (int a1, int a2, int a3)              
{ a1 = a2 = a3 = 0; 
return 3;}

int foo::overloadargs (int a1, int a2, int a3, int a4)
{ a1 = a2 = a3 = a4 = 0; 
return 4;}

int foo::overloadargs (int a1, int a2, int a3, int a4, int a5)
{ a1 = a2 = a3 = a4 = a5 = 0; 
return 5;}

int foo::overloadargs (int a1, int a2, int a3, int a4, int a5, int a6)
{ a1 = a2 = a3 = a4 = a5 = a6 = 0; 
return 6;}

int foo::overloadargs (int a1, int a2, int a3, int a4, int a5, int a6, int a7)
{ a1 = a2 = a3 = a4 = a5 = a6 = a7 = 0; 
return 7;}

int foo::overloadargs (int a1, int a2, int a3, int a4, int a5, int a6, int a7,
                   int a8)
{ a1 = a2 = a3 = a4 = a5 = a6 = a7 = a8 = 0; 
return 8;}

int foo::overloadargs (int a1, int a2, int a3, int a4, int a5, int a6, int a7,
                   int a8, int a9)
{ 
  a1 = a2 = a3 = a4 = a5 = a6 = a7 = a8 = a9 = 0; 
  return 9;
}

int foo::overloadargs (int a1, int a2, int a3, int a4, int a5, int a6, int a7,
                   int a8, int a9, int a10)
                        { a1 = a2 = a3 = a4 = a5 = a6 = a7 = a8 = a9 =
                          a10 = 0; return 10;}

int foo::overloadargs (int a1, int a2, int a3, int a4, int a5, int a6, int a7,
                   int a8, int a9, int a10, int a11)
                        { a1 = a2 = a3 = a4 = a5 = a6 = a7 = a8 = a9 =
                          a10 = a11 = 0; return 11;}



@


1.3
log
@* gdb.c++/derivation.exp, gdb.c++/overload.exp,
gdb.c++/userdef.cc: Place comments on the lines to which the
marker function might return.
* gdb.c++/derivation.exp, gdb.c++/overload.exp,
gdb.c++/userdef.exp: Look for those comments to check that we've
returned to the right place, instead of checking line numbers.
@
text
@@


1.3.14.1
log
@2003-08-22  Michael Chastain  <mec@@shout.net>

	* gdb.cp: New directory.
	* gdb.cp/*: Copy from gdb.c++/*.
	* gdb.c++/*: Remove.
	* Makefile.in: Change gdb.c++ to gdb.cp.
	* configure.in:  Ditto.
	* configure: Regnerate.
@
text
@@


1.2
log
@2003-02-04  David Carlton  <carlton@@math.stanford.edu>

	* gdb.texinfo (C@@t{++}): Recommend DWARF 2, then stabs+.
	(Variables): Recommend stabs+ and DWARF 2.
	(C plus plus expressions): Correct info about
	compiler versions, debug formats.
	(Contributors): Change 'DWARF2' to 'DWARF 2'.
	PR symtab/874.

2003-02-04  David Carlton  <carlton@@math.stanford.edu>

	* gdb.c++/overload.exp: Test intToChar(1).
	* gdb.c++/overload.cc (intToChar): New.
	(main): Call intToChar.
@
text
@d83 2
a84 2
    marker1();
    return 0; 
@


1.1
log
@Initial revision
@
text
@d27 4
d48 5
d70 1
a70 1
    char *str = "A";
d80 2
d108 6
@


1.1.1.1
log
@Initial creation of sourceware repository
@
text
@@


1.1.1.2
log
@import gdb-19990422 snapshot
@
text
@d61 1
a61 1
    char *str = (char *) "A";
@


1.1.1.3
log
@import gdb-1999-09-21
@
text
@a26 4
int overloadfnarg (void);
int overloadfnarg (int);
int overloadfnarg (int, int (*) (int));

a96 6
/* Test to see that we can explicitly request overloaded functions
   with function pointers in the prototype. */

int foo::overloadfnarg (void) { return ifoo * 20; }
int foo::overloadfnarg (int arg) { arg = 0; return 13;}
int foo::overloadfnarg (int arg, int (*foo) (int))    { return foo(arg); } 
@


1.1.1.3.30.1
log
@Merge drow-cplus-branch to:
  cvs rtag -D 2003-12-14 00:00:00 UTC drow-cplus-merge-20031214 gdb+dejagnu
@
text
@@


1.1.1.3.28.1
log
@2003-01-24  David Carlton  <carlton@@math.stanford.edu>

	* valops.c (find_oload_champ): New function.
	(find_overload_match): Separate code into find_oload_champ and
	oload_method_static.
	(find_oload_champ): Call oload_method_static.
	(oload_method_static): New function.
	(find_overload_match): Call classify_oload_match.
	(classify_oload_match): New function.
	* value.h: Update declaration of find_overload_match.
	* eval.c (evaluate_subexp_standard): Pass current block to
	find_overload_match.
	* valops.c (find_overload_match): Add CURRENT_BLOCK arg.

2003-01-24  David Carlton  <carlton@@math.stanford.edu>

	* gdb.c++/overload.exp: Add tests involving overloadNamespace.
	Delete comment about GDB crashing.
	* gdb.c++/overload.cc: Add dummyClass, dummyInstance,
	overloadNamespace, and XXX.
@
text
@a50 25
// Now test how overloading and namespaces interact.

class dummyClass {};

dummyClass dummyInstance;

int overloadNamespace(int i)
{
  return 1;
}

int overloadNamespace(dummyClass d)
{
  return 2;
}

namespace XXX {
  int overloadNamespace (char c)
  {
    return 3;
  }

  void marker2() {}
}

a76 1
    XXX::marker2();
@


1.1.1.3.28.2
log
@2003-02-07  David Carlton  <carlton@@math.stanford.edu>

	* Merge with mainline; tag is carlton_dictionary-20030207-merge.
@
text
@a47 5
int intToChar (char c)
{
  return 297;
}

a99 2
    // Verify that intToChar should work:
    intToChar(1);
@


1.1.1.3.28.3
log
@2003-04-16  David Carlton  <carlton@@bactrian.org>

	* Merge with mainline; tag is carlton_dictionary-20030416-merge.
@
text
@d108 3
a110 3
    marker1(); // marker1-returns-here
    XXX::marker2(); // marker1-returns-here
    return 0;
@


1.1.1.3.28.4
log
@2003-08-22  Michael Chastain  <mec@@shout.net>

	* gdb.cp: New directory.
	* gdb.cp/*: Copy from gdb.c++/*.
	* gdb.c++/*: Remove.
	* Makefile.in: Change gdb.c++ to gdb.cp.
	* configure.in:  Ditto.
	* carlton_runnamespace: Ditto.
	* carlton_runtest: Ditto.
	* configure: Regnerate.
@
text
@@


