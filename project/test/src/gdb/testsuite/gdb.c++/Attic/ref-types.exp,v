head	1.6;
access;
symbols
	cagney_x86i386-20030821-branch:1.5.0.60
	cagney_x86i386-20030821-branchpoint:1.5
	carlton_dictionary-20030805-merge:1.5
	carlton_dictionary-20030627-merge:1.5
	gdb_6_0-branch:1.5.0.58
	gdb_6_0-2003-06-23-branchpoint:1.5
	jimb-ppc64-linux-20030613-branch:1.5.0.56
	jimb-ppc64-linux-20030613-branchpoint:1.5
	cagney_writestrings-20030508-branch:1.5.0.54
	cagney_writestrings-20030508-branchpoint:1.5
	jimb-ppc64-linux-20030528-branch:1.5.0.52
	jimb-ppc64-linux-20030528-branchpoint:1.5
	carlton_dictionary-20030523-merge:1.5
	cagney_fileio-20030521-branch:1.5.0.50
	cagney_fileio-20030521-branchpoint:1.5
	kettenis_i386newframe-20030517-mergepoint:1.5
	jimb-ppc64-linux-20030509-branch:1.5.0.48
	jimb-ppc64-linux-20030509-branchpoint:1.5
	kettenis_i386newframe-20030504-mergepoint:1.5
	carlton_dictionary-20030430-merge:1.5
	kettenis_i386newframe-20030419-branch:1.5.0.46
	kettenis_i386newframe-20030419-branchpoint:1.5
	carlton_dictionary-20030416-merge:1.5
	cagney_frameaddr-20030409-mergepoint:1.5
	kettenis_i386newframe-20030406-branch:1.5.0.44
	kettenis_i386newframe-20030406-branchpoint:1.5
	cagney_frameaddr-20030403-branchpoint:1.5
	cagney_frameaddr-20030403-branch:1.5.0.42
	cagney_framebase-20030330-mergepoint:1.5
	cagney_framebase-20030326-branch:1.5.0.40
	cagney_framebase-20030326-branchpoint:1.5
	cagney_lazyid-20030317-branch:1.5.0.38
	cagney_lazyid-20030317-branchpoint:1.5
	kettenis-i386newframe-20030316-mergepoint:1.5
	offbyone-20030313-branch:1.5.0.36
	offbyone-20030313-branchpoint:1.5
	kettenis-i386newframe-20030308-branch:1.5.0.34
	kettenis-i386newframe-20030308-branchpoint:1.5
	carlton_dictionary-20030305-merge:1.5
	cagney_offbyone-20030303-branch:1.5.0.32
	cagney_offbyone-20030303-branchpoint:1.5
	carlton_dictionary-20030207-merge:1.5
	interps-20030203-mergepoint:1.5
	interps-20030202-branch:1.5.0.30
	interps-20030202-branchpoint:1.5
	cagney-unwind-20030108-branch:1.5.0.28
	cagney-unwind-20030108-branchpoint:1.5
	carlton_dictionary-20021223-merge:1.5
	gdb_5_3-2002-12-12-release:1.5
	carlton_dictionary-20021115-merge:1.5
	kseitz_interps-20021105-merge:1.5
	kseitz_interps-20021103-merge:1.5
	drow-cplus-merge-20021020:1.5
	drow-cplus-merge-20021025:1.5
	carlton_dictionary-20021025-merge:1.5
	carlton_dictionary-20021011-merge:1.5
	drow-cplus-branch:1.5.0.26
	drow-cplus-branchpoint:1.5
	kseitz_interps-20020930-merge:1.5
	carlton_dictionary-20020927-merge:1.5
	carlton_dictionary-branch:1.5.0.24
	carlton_dictionary-20020920-branchpoint:1.5
	gdb_5_3-branch:1.5.0.22
	gdb_5_3-2002-09-04-branchpoint:1.5
	kseitz_interps-20020829-merge:1.5
	cagney_sysregs-20020825-branch:1.5.0.20
	cagney_sysregs-20020825-branchpoint:1.5
	readline_4_3-import-branch:1.5.0.18
	readline_4_3-import-branchpoint:1.5
	gdb_5_2_1-2002-07-23-release:1.5
	kseitz_interps-20020528-branch:1.5.0.16
	kseitz_interps-20020528-branchpoint:1.5
	cagney_regbuf-20020515-branch:1.5.0.14
	cagney_regbuf-20020515-branchpoint:1.5
	jimb-macro-020506-branch:1.5.0.12
	jimb-macro-020506-branchpoint:1.5
	gdb_5_2-2002-04-29-release:1.5
	gdb_5_2-branch:1.5.0.10
	gdb_5_2-2002-03-03-branchpoint:1.5
	gdb_5_1_1-2002-01-24-release:1.5
	gdb_5_1_0_1-2002-01-03-release:1.5
	cygnus_cvs_20020108_pre:1.5
	gdb_5_1_0_1-2002-01-03-branch:1.5.0.8
	gdb_5_1_0_1-2002-01-03-branchpoint:1.5
	gdb_5_1-2001-11-21-release:1.5
	gdb_s390-2001-09-26-branch:1.5.0.6
	gdb_s390-2001-09-26-branchpoint:1.5
	gdb_5_1-2001-07-29-branch:1.5.0.4
	gdb_5_1-2001-07-29-branchpoint:1.5
	dberlin-typesystem-branch:1.5.0.2
	dberlin-typesystem-branchpoint:1.5
	gdb-post-ptid_t-2001-05-03:1.5
	gdb-pre-ptid_t-2001-05-03:1.5
	insight-precleanup-2001-01-01:1.3
	gdb-post-protoization-2000-07-29:1.1.1.4
	gdb-pre-protoization-2000-07-29:1.1.1.4
	gdb-premipsmulti-2000-06-06-branch:1.1.1.4.0.4
	gdb-premipsmulti-2000-06-06-branchpoint:1.1.1.4
	gdb-post-params-removal-2000-06-04:1.1.1.4
	gdb-pre-params-removal-2000-06-04:1.1.1.4
	gdb-post-params-removal-2000-05-28:1.1.1.4
	gdb-pre-params-removal-2000-05-28:1.1.1.4
	gdb_5_0-2000-05-19-release:1.1.1.4
	gdb_4_18_2-2000-05-18-release:1.1.1.4
	gdb_4_95_1-2000-05-11-snapshot:1.1.1.4
	gdb_4_95_0-2000-04-27-snapshot:1.1.1.4
	gdb_5_0-2000-04-10-branch:1.1.1.4.0.2
	gdb_5_0-2000-04-10-branchpoint:1.1.1.4
	repo-unification-2000-02-06:1.1.1.4
	insight-2000-02-04:1.1.1.4
	gdb-2000-02-04:1.1.1.4
	gdb-2000-02-02:1.1.1.4
	gdb-2000-02-01:1.1.1.4
	gdb-2000-01-31:1.1.1.4
	gdb-2000-01-26:1.1.1.4
	gdb-2000-01-24:1.1.1.4
	gdb-2000-01-17:1.1.1.4
	gdb-2000-01-10:1.1.1.4
	gdb-2000-01-05:1.1.1.4
	gdb-1999-12-21:1.1.1.4
	gdb-1999-12-13:1.1.1.4
	gdb-1999-12-07:1.1.1.4
	gdb-1999-12-06:1.1.1.4
	gdb-1999-11-16:1.1.1.4
	gdb-1999-11-08:1.1.1.4
	gdb-1999-11-01:1.1.1.4
	gdb-1999-10-25:1.1.1.4
	gdb-1999-10-18:1.1.1.4
	gdb-1999-10-11:1.1.1.4
	gdb-1999-10-04:1.1.1.4
	gdb-1999-09-28:1.1.1.4
	gdb-1999-09-21:1.1.1.4
	gdb-1999-09-13:1.1.1.4
	gdb-1999-09-08:1.1.1.4
	gdb-1999-08-30:1.1.1.3
	gdb-1999-08-23:1.1.1.3
	gdb-1999-08-16:1.1.1.3
	gdb-1999-08-09:1.1.1.3
	gdb-1999-08-02:1.1.1.3
	gdb-1999-07-26:1.1.1.2
	gdb-1999-07-19:1.1.1.2
	gdb-1999-07-12:1.1.1.2
	gdb-post-reformat-19990707:1.1.1.2
	gdb-1999-07-07-post-reformat-snapshot:1.1.1.2
	gdb-pre-reformat-19990707:1.1.1.2
	gdb-1999-07-07:1.1.1.2
	gdb-1999-07-05:1.1.1.2
	gdb-1999-06-28:1.1.1.2
	gdb-1999-06-21:1.1.1.2
	gdb-1999-06-14:1.1.1.2
	gdb-1999-06-07:1.1.1.2
	gdb-1999-06-01:1.1.1.2
	gdb-4_18-branch:1.1.1.1.0.2
	gdb-4_18-release:1.1.1.1
	gdb-1999-05-25:1.1.1.2
	gdb-1999-05-19:1.1.1.2
	gdb-1999-05-10:1.1.1.2
	gdb-19990504:1.1.1.2
	gdb-19990422:1.1.1.2
	SNAPSHOT:1.1.1
	gdb-4_18:1.1.1.1
	GDB_4_18:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.6
date	2003.08.23.03.55.59;	author chastain;	state dead;
branches;
next	1.5;

1.5
date	2001.03.16.17.59.58;	author chastain;	state Exp;
branches
	1.5.24.1
	1.5.26.1
	1.5.58.1;
next	1.4;

1.4
date	2001.03.06.08.21.54;	author kevinb;	state Exp;
branches;
next	1.3;

1.3
date	2000.12.05.23.57.36;	author msnyder;	state Exp;
branches;
next	1.2;

1.2
date	2000.12.05.23.14.40;	author msnyder;	state Exp;
branches;
next	1.1;

1.1
date	99.04.16.01.34.32;	author shebs;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.04.16.01.34.32;	author shebs;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	99.04.26.18.27.28;	author shebs;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	99.08.02.23.46.55;	author jsm;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	99.09.09.00.00.29;	author shebs;	state Exp;
branches;
next	;

1.5.24.1
date	2003.08.30.03.40.34;	author chastain;	state dead;
branches;
next	;

1.5.26.1
date	2003.12.14.20.27.51;	author drow;	state dead;
branches;
next	;

1.5.58.1
date	2003.08.25.03.53.48;	author chastain;	state dead;
branches;
next	;


desc
@@


1.6
log
@2003-08-22  Michael Chastain  <mec@@shout.net>

	* gdb.cp: New directory.
	* gdb.cp/*: Copy from gdb.c++/*.
	* gdb.c++/*: Remove.
	* Makefile.in: Change gdb.c++ to gdb.cp.
	* configure.in:  Ditto.
	* configure: Regnerate.
@
text
@# Tests for reference types with short type variables in GDB.
# Copyright 1998, 1999, 2000 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  

# Please email any bugs, comments, and/or additions to this file to:
# bug-gdb@@prep.ai.mit.edu

# written by Elena Zannoni (ezannoni@@cygnus.com)

if $tracelevel then {
        strace $tracelevel
        }

#
# test running programs
#
set prms_id 0
set bug_id 0

if { [skip_cplus_tests] } { continue }

set testfile "ref-types"
set srcfile ${testfile}.cc
set binfile ${objdir}/${subdir}/${testfile}

if  { [gdb_compile "${srcdir}/${subdir}/${srcfile}" "${binfile}" executable {debug c++}] != "" } {
     gdb_suppress_entire_file "Testcase compile failed, so all tests in this file will automatically fail."
}

gdb_exit
gdb_start
gdb_reinitialize_dir $srcdir/$subdir
gdb_load ${binfile}


#
# set it up at a breakpoint so we can play with the variable values
#
if ![runto_main] then {
    perror "couldn't run to breakpoint"
    continue
}

if ![runto 'marker1'] then {
    perror "couldn't run to marker1"
    continue
}

gdb_test "up" ".*main.*" "up from marker1 1"

proc gdb_start_again {} {
    global srcdir
    global subdir
    global binfile
    global gdb_prompt
    global decimal

    gdb_start
    gdb_reinitialize_dir $srcdir/$subdir
    gdb_load ${binfile}

    source ${binfile}.ci

    #
    # set it up at a breakpoint so we can play with the variable values
    #
    if ![runto_main] then {
	perror "couldn't run to breakpoint"
	continue
    }

    if ![runto 'marker1'] then {
	perror "couldn't run to marker1"
	continue
    }

    gdb_test "up" ".*main.*" "up from marker1 2"
}



send_gdb "print s\n"
gdb_expect {
    -re ".\[0-9\]* = -1.*$gdb_prompt $" {
        pass "print value of s"
      }
    -re ".*$gdb_prompt $" { fail "print value of s" }
    timeout           { fail "(timeout) print value of s" }
  }


send_gdb "ptype s\n"
gdb_expect {
    -re "type = short.*$gdb_prompt $"  { pass "ptype s" }
    -re ".*$gdb_prompt $"   {  fail "ptype s" }
    timeout             { fail "(timeout) ptype s" }
}


send_gdb "print *ps\n"
gdb_expect {
    -re ".\[0-9\]* = -1.*$gdb_prompt $" {
        pass "print value of ps"
      }
    -re ".*$gdb_prompt $" { fail "print value of ps" }
    timeout           { fail "(timeout) print value of ps" }
  }


send_gdb "ptype ps\n"
gdb_expect {
    -re "type = short \*.*$gdb_prompt $"  { pass "ptype ps" }
    -re ".*$gdb_prompt $"   {  fail "ptype ps" }
    timeout             { fail "(timeout) ptype ps" }
}

send_gdb "print as\[0\]\n"
gdb_expect {
    -re ".\[0-9\]* = 0.*$gdb_prompt $" {
        pass "print value of as\[0\]"
      }
    -re ".*$gdb_prompt $" { fail "print value of as\[0\]" }
    timeout           { fail "(timeout) print value of as\[0\]" }
  }


send_gdb "ptype as\n"
gdb_expect {
    -re "type = short \\\[4\\\].*$gdb_prompt $"  { pass "ptype as" }
    -re "type = short int \\\[4\\\].*$gdb_prompt $"  { pass "ptype as" }
    -re ".*$gdb_prompt $"   {  fail "ptype as" }
    timeout             { fail "(timeout) ptype as" }
}

send_gdb "print as\[1\]\n"
gdb_expect {
    -re ".\[0-9\]* = 1.*$gdb_prompt $" {
        pass "print value of as\[1\]"
      }
    -re ".*$gdb_prompt $" { fail "print value of as\[1\]" }
    timeout           { fail "(timeout) print value of as\[1\]" }
  }

send_gdb "print as\[2\]\n"
gdb_expect {
    -re ".\[0-9\]* = 2.*$gdb_prompt $" {
        pass "print value of as\[2\]"
      }
    -re ".*$gdb_prompt $" { fail "print value of as\[2\]" }
    timeout           { fail "(timeout) print value of as\[2\]" }
  }

send_gdb "print as\[3\]\n"
gdb_expect {
    -re ".\[0-9\]* = 3.*$gdb_prompt $" {
        pass "print value of as\[3\]"
      }
    -re ".*$gdb_prompt $" { fail "print value of as\[3\]" }
    timeout           { fail "(timeout) print value of as\[3\]" }
  }

send_gdb "print rs\n"
gdb_expect {
    -re ".\[0-9\]* = \\(short &\\) @@$hex: -1.*$gdb_prompt $" {
        pass "print value of rs"
    }
    -re ".\[0-9\]* = \\(short int &\\) @@$hex: -1.*$gdb_prompt $" {
        pass "print value of rs"
    }
    -re ".*$gdb_prompt $" { fail "print value of rs" }
    timeout           { fail "(timeout) print value of rs" }
    eof { fail "print rs ($GDB dumped core) (FIXME)" ; gdb_start_again ; }

  }

send_gdb "ptype rs\n"
gdb_expect {
    -re "type = short &.*$gdb_prompt $"  { pass "ptype rs" }
    -re "type = short int &.*$gdb_prompt $"  { pass "ptype rs" }
    -re ".*$gdb_prompt $"   {  fail "ptype rs" }
    timeout             { fail "(timeout) ptype rs" }
}


send_gdb "print *rps\n"
gdb_expect {
    -re ".\[0-9\]* = -1.*$gdb_prompt $" {
        pass "print value of *rps"
      }
    -re ".*$gdb_prompt $" { fail "print value of *rps" }
    timeout           { fail "(timeout) print value of *rps" }
  }


send_gdb "ptype rps\n"
gdb_expect {
    -re "type = short \\*&.*$gdb_prompt $"  { pass "ptype rps" }
    -re "type = short int \\*&.*$gdb_prompt $"  { pass "ptype rps" }
    -re ".*$gdb_prompt $"   {  fail "ptype rps" }
    timeout             { fail "(timeout) ptype rps" }
}



send_gdb "print ras\[0\]\n"
gdb_expect {
    -re ".\[0-9\]* = 0.*$gdb_prompt $" {
        pass "print value of ras\[0\]"
      }
    -re ".*$gdb_prompt $" { fail "print value of ras\[0\]" }
    timeout           { fail "(timeout) print value of ras\[0\]" }
  }


send_gdb "ptype ras\n"
gdb_expect {
    -re "type = short \\\(&\\\)\\\[4\\\].*$gdb_prompt $"  { pass "ptype ras" }
    -re "type = short int \\\(&\\\)\\\[4\\\].*$gdb_prompt $"  { pass "ptype ras" }
    -re ".*$gdb_prompt $"   {  fail "ptype ras" }
    timeout             { fail "(timeout) ptype ras" }
}

send_gdb "print ras\[1\]\n"
gdb_expect {
    -re ".\[0-9\]* = 1.*$gdb_prompt $" {
        pass "print value of ras\[1\]"
      }
    -re ".*$gdb_prompt $" { fail "print value of ras\[1\]" }
    timeout           { fail "(timeout) print value of ras\[1\]" }
  }

send_gdb "print ras\[2\]\n"
gdb_expect {
    -re ".\[0-9\]* = 2.*$gdb_prompt $" {
        pass "print value of ras\[2\]"
      }
    -re ".*$gdb_prompt $" { fail "print value of ras\[2\]" }
    timeout           { fail "(timeout) print value of ras\[2\]" }
  }

send_gdb "print ras\[3\]\n"
gdb_expect {
    -re ".\[0-9\]* = 3.*$gdb_prompt $" {
        pass "print value of ras\[3\]"
      }
    -re ".*$gdb_prompt $" { fail "print value of ras\[3\]" }
    timeout           { fail "(timeout) print value of ras\[3\]" }
  }


if ![runto 'f'] then {
    perror "couldn't run to f"
    continue
}

gdb_test "up" ".main2.*" "up from f"

send_gdb "print C\n"
gdb_expect {
    -re ".\[0-9\]* = 65 \'A\'.*$gdb_prompt $" {
        pass "print value of C"
      }
    -re ".*$gdb_prompt $" { fail "print value of C" }
    timeout           { fail "(timeout) print value of C" }
  }


send_gdb "ptype C\n"
gdb_expect {
    -re "type = char.*$gdb_prompt $"  { pass "ptype C" }
    -re ".*$gdb_prompt $"   {  fail "ptype C" }
    timeout             { fail "(timeout) ptype C" }
}


send_gdb "print UC\n"
gdb_expect {
    -re ".\[0-9\]* = 21 '\.025'\.*$gdb_prompt $" {
        pass "print value of UC"
      }
    -re ".*$gdb_prompt $" { fail "print value of UC" }
    timeout           { fail "(timeout) print value of UC" }
  }


send_gdb "ptype UC\n"
gdb_expect {
    -re "type = unsigned char.*$gdb_prompt $"  { pass "ptype UC" }
    -re ".*$gdb_prompt $"   {  fail "ptype UC" }
    timeout             { fail "(timeout) ptype UC" }
}


send_gdb "print S\n"
gdb_expect {
    -re ".\[0-9\]* = -14.*$gdb_prompt $" {
        pass "print value of S"
      }
    -re ".*$gdb_prompt $" { fail "print value of S" }
    timeout           { fail "(timeout) print value of S" }
  }


send_gdb "ptype S\n"
gdb_expect {
    -re "type = short.*$gdb_prompt $"  { pass "ptype S" }
    -re ".*$gdb_prompt $"   {  fail "ptype S" }
    timeout             { fail "(timeout) ptype S" }
}


send_gdb "print US\n"
gdb_expect {
    -re ".\[0-9\]* = 7.*$gdb_prompt $" {
        pass "print value of US"
      }
    -re ".*$gdb_prompt $" { fail "print value of US" }
    timeout           { fail "(timeout) print value of US" }
  }


send_gdb "ptype US\n"
gdb_expect {
    -re "type = unsigned short.*$gdb_prompt $"  { pass "ptype US" }
    -re "type = short unsigned.*$gdb_prompt $"  { pass "ptype US" }
    -re ".*$gdb_prompt $"   {  fail "ptype US" }
    timeout             { fail "(timeout) ptype US" }
}


send_gdb "print I\n"
gdb_expect {
    -re ".\[0-9\]* = 102.*$gdb_prompt $" {
        pass "print value of I"
      }
    -re ".*$gdb_prompt $" { fail "print value of I" }
    timeout           { fail "(timeout) print value of I" }
  }


send_gdb "ptype I\n"
gdb_expect {
    -re "type = int.*$gdb_prompt $"  { pass "ptype I" }
    -re ".*$gdb_prompt $"   {  fail "ptype I" }
    timeout             { fail "(timeout) ptype I" }
}


send_gdb "print UI\n"
gdb_expect {
    -re ".\[0-9\]* = 1002.*$gdb_prompt $" {
        pass "print value of UI"
      }
    -re ".*$gdb_prompt $" { fail "print value of UI" }
    timeout           { fail "(timeout) print value of UI" }
  }


send_gdb "ptype UI\n"
gdb_expect {
    -re "type = unsigned int.*$gdb_prompt $"  { pass "ptype UI" }
    -re ".*$gdb_prompt $"   {  fail "ptype UI" }
    timeout             { fail "(timeout) ptype UI" }
}


send_gdb "print L\n"
gdb_expect {
    -re ".\[0-9\]* = -234.*$gdb_prompt $" {
        pass "print value of L"
      }
    -re ".*$gdb_prompt $" { fail "print value of L" }
    timeout           { fail "(timeout) print value of L" }
  }


send_gdb "ptype L\n"
gdb_expect {
    -re "type = long.*$gdb_prompt $"  { pass "ptype L" }
    -re ".*$gdb_prompt $"   {  fail "ptype L" }
    timeout             { fail "(timeout) ptype L" }
}


send_gdb "print UL\n"
gdb_expect {
    -re ".\[0-9\]* = 234.*$gdb_prompt $" {
        pass "print value of UL"
      }
    -re ".*$gdb_prompt $" { fail "print value of UL" }
    timeout           { fail "(timeout) print value of UL" }
  }


send_gdb "ptype UL\n"
gdb_expect {
    -re "type = unsigned long.*$gdb_prompt $"  { pass "ptype UL" }
    -re "type = long unsigned.*$gdb_prompt $"  { pass "ptype UL" }
    -re ".*$gdb_prompt $"   {  fail "ptype UL" }
    timeout             { fail "(timeout) ptype UL" }
}


send_gdb "print F\n"
gdb_expect {
    -re ".\[0-9\]* = 1.2\[0-9\]*e\\+10.*$gdb_prompt $" {
        pass "print value of F"
      }
    -re ".*$gdb_prompt $" { fail "print value of F" }
    timeout           { fail "(timeout) print value of F" }
  }



send_gdb "ptype F\n"
gdb_expect {
    -re "type = float.*$gdb_prompt $"  { pass "ptype F" }
    -re ".*$gdb_prompt $"   {  fail "ptype F" }
    timeout             { fail "(timeout) ptype F" }
}


send_gdb "print D\n"
gdb_expect {
    -re ".\[0-9\]* = -1.375e-123.*$gdb_prompt $" {
        pass "print value of D"
      }
    -re ".*$gdb_prompt $" { fail "print value of D" }
    timeout           { fail "(timeout) print value of D" }
  }


send_gdb "ptype D\n"
gdb_expect {
    -re "type = double.*$gdb_prompt $"  { pass "ptype D" }
    -re ".*$gdb_prompt $"   {  fail "ptype D" }
    timeout             { fail "(timeout) ptype D" }
}



#
# test reference types
#




send_gdb "ptype rC\n"
gdb_expect {
    -re "type = char &.*$gdb_prompt $"  { pass "ptype rC" }
    -re ".*$gdb_prompt $"   {  fail "ptype rC" }
    timeout             { fail "(timeout) ptype rC" }
}




send_gdb "ptype rUC\n"
gdb_expect {
    -re "type = unsigned char &.*$gdb_prompt $"  { pass "ptype rUC" }
    -re ".*$gdb_prompt $"   {  fail "ptype rUC" }
    timeout             { fail "(timeout) ptype rUC" }
}



send_gdb "ptype rS\n"
gdb_expect {
    -re "type = short &.*$gdb_prompt $"  { pass "ptype rS" }
    -re "type = short int &.*$gdb_prompt $"  { pass "ptype rS" }
    -re ".*$gdb_prompt $"   {  fail "ptype rS" }
    timeout             { fail "(timeout) ptype rS" }
}



send_gdb "ptype rUS\n"
gdb_expect {
    -re "type = unsigned short &.*$gdb_prompt $"  { pass "ptype rUS" }
    -re "type = short unsigned int &.*$gdb_prompt $"  { pass "ptype rUS" }
    -re ".*$gdb_prompt $"   {  fail "ptype rUS" }
    timeout             { fail "(timeout) ptype rUS" }
}


send_gdb "ptype rI\n"
gdb_expect {
    -re "type = int &.*$gdb_prompt $"  { pass "ptype rI" }
    -re ".*$gdb_prompt $"   {  fail "ptype rI" }
    timeout             { fail "(timeout) ptype rI" }
}



send_gdb "ptype rUI\n"
gdb_expect {
    -re "type = unsigned int &.*$gdb_prompt $"  { pass "ptype rUI" }
    -re ".*$gdb_prompt $"   {  fail "ptype rUI" }
    timeout             { fail "(timeout) ptype rUI" }
}



send_gdb "ptype rL\n"
gdb_expect {
    -re "type = long &.*$gdb_prompt $"  { pass "ptype rL" }
    -re "type = long int &.*$gdb_prompt $"  { pass "ptype rL" }
    -re ".*$gdb_prompt $"   {  fail "ptype rL" }
    timeout             { fail "(timeout) ptype rL" }
}


send_gdb "ptype rUL\n"
gdb_expect {
    -re "type = unsigned long &.*$gdb_prompt $"  { pass "ptype rUL" }
    -re "type = long unsigned int &.*$gdb_prompt $"  { pass "ptype rUL" }
    -re ".*$gdb_prompt $"   {  fail "ptype rUL" }
    timeout             { fail "(timeout) ptype rUL" }
}


send_gdb "ptype rF\n"
gdb_expect {
    -re "type = float &.*$gdb_prompt $"  { pass "ptype rF" }
    -re ".*$gdb_prompt $"   {  fail "ptype rF" }
    timeout             { fail "(timeout) ptype rF" }
}


send_gdb "ptype rD\n"
gdb_expect {
    -re "type = double &.*$gdb_prompt $"  { pass "ptype rD" }
    -re ".*$gdb_prompt $"   {  fail "ptype rD" }
    timeout             { fail "(timeout) ptype rD" }
}


send_gdb "print rC\n"
gdb_expect {
    -re ".\[0-9\]* = \\(char &\\) @@$hex: 65 \'A\'.*$gdb_prompt $" {
        pass "print value of rC"
      }
    -re ".*$gdb_prompt $" { fail "print value of rC" }
    timeout           { fail "(timeout) print value of rC" }
  }


send_gdb "print rUC\n"
gdb_expect {
    -re ".\[0-9\]* = \\(unsigned char &\\) @@$hex: 21 \'.025\'.*$gdb_prompt $" {
        pass "print value of rUC"
      }
    -re ".*$gdb_prompt $" { fail "print value of rUC" }
    timeout           { fail "(timeout) print value of rUC" }
  }


send_gdb "print rS\n"
gdb_expect {
    -re ".\[0-9\]* = \\(short &\\) @@$hex: -14.*$gdb_prompt $" {
        pass "print value of rS"
    }
    -re ".\[0-9\]* = \\(short int &\\) @@$hex: -14.*$gdb_prompt $" {
        pass "print value of rS"
    }
    -re ".*$gdb_prompt $" { fail "print value of rS" }
    timeout           { fail "(timeout) print value of rS" }
  }


send_gdb "print rUS\n"
gdb_expect {
    -re ".\[0-9\]* = \\(unsigned short &\\) @@$hex: 7.*$gdb_prompt $" {
        pass "print value of rUS"
    }
    -re ".\[0-9\]* = \\(short unsigned int &\\) @@$hex: 7.*$gdb_prompt $" {
        pass "print value of rUS"
    }
    -re ".*$gdb_prompt $" { fail "print value of rUS" }
    timeout           { fail "(timeout) print value of rUS" }
  }


send_gdb "print rI\n"
gdb_expect {
    -re ".\[0-9\]* = \\(int &\\) @@$hex: 102.*$gdb_prompt $" {
        pass "print value of rI"
      }
    -re ".*$gdb_prompt $" { fail "print value of rI" }
    timeout           { fail "(timeout) print value of rI" }
  }


send_gdb "print rUI\n"
gdb_expect {
    -re ".\[0-9\]* = \\(unsigned int &\\) @@$hex: 1002.*$gdb_prompt $" {
        pass "print value of UI"
      }
    -re ".*$gdb_prompt $" { fail "print value of rUI" }
    timeout           { fail "(timeout) print value of rUI" }
  }


send_gdb "print rL\n"
gdb_expect {
    -re ".\[0-9\]* = \\(long &\\) @@$hex: -234.*$gdb_prompt $" {
        pass "print value of rL"
    }
    -re ".\[0-9\]* = \\(long int &\\) @@$hex: -234.*$gdb_prompt $" {
        pass "print value of rL"
    }
    -re ".*$gdb_prompt $" { fail "print value of rL" }
    timeout           { fail "(timeout) print value of rL" }
  }



send_gdb "print rUL\n"
gdb_expect {
    -re ".\[0-9\]* = \\(unsigned long &\\) @@$hex: 234.*$gdb_prompt $" {
        pass "print value of rUL"
    }
    -re ".\[0-9\]* = \\(long unsigned int &\\) @@$hex: 234.*$gdb_prompt $" {
        pass "print value of rUL"
    }
    -re ".*$gdb_prompt $" { fail "print value of rUL" }
    timeout           { fail "(timeout) print value of rUL" }
  }


send_gdb "print rF\n"
gdb_expect {
    -re ".\[0-9\]* = \\(float &\\) @@$hex: 1.2\[0-9\]*e\\+10.*$gdb_prompt $" {
        pass "print value of rF"
      }
    -re ".*$gdb_prompt $" { fail "print value of rF" }
    timeout           { fail "(timeout) print value of rF" }
  }


send_gdb "print rD\n"
gdb_expect {
    -re ".\[0-9\]* = \\(double &\\) @@$hex: -1.375e-123.*$gdb_prompt $" {
        pass "print value of rD"
      }
    -re ".*$gdb_prompt $" { fail "print value of rD" }
    timeout           { fail "(timeout) print value of rD" }
  }

@


1.5
log
@2001-02-24  Michael Chastain  <chastain@@redhat.com>

	* gdb.c++/ref-types.exp: Change handwritten code to library
	function 'runto'.
@
text
@@


1.5.26.1
log
@Merge drow-cplus-branch to:
  cvs rtag -D 2003-12-14 00:00:00 UTC drow-cplus-merge-20031214 gdb+dejagnu
@
text
@@


1.5.24.1
log
@2003-08-22  Michael Chastain  <mec@@shout.net>

	* gdb.cp: New directory.
	* gdb.cp/*: Copy from gdb.c++/*.
	* gdb.c++/*: Remove.
	* Makefile.in: Change gdb.c++ to gdb.cp.
	* configure.in:  Ditto.
	* carlton_runnamespace: Ditto.
	* carlton_runtest: Ditto.
	* configure: Regnerate.
@
text
@@


1.5.58.1
log
@2003-08-22  Michael Chastain  <mec@@shout.net>

	* gdb.cp: New directory.
	* gdb.cp/*: Copy from gdb.c++/*.
	* gdb.c++/*: Remove.
	* Makefile.in: Change gdb.c++ to gdb.cp.
	* configure.in:  Ditto.
	* configure: Regnerate.
@
text
@@


1.4
log
@Update/correct copyright notices.
@
text
@d57 2
a58 39
send_gdb "break marker1\n" ; gdb_expect -re ".*$gdb_prompt $"

    send_gdb "cont\n"
    gdb_expect {
        -re "Break.* marker1 \\(\\) at .*:$decimal.*$gdb_prompt $" {
            send_gdb "up\n"
            gdb_expect {
                -re ".*main.*$gdb_prompt $" {
		    pass "up from marker1"
		}
                -re ".*$gdb_prompt $" {
		    fail "up from marker1"
		}
                timeout { fail "up from marker1 (timeout)" }
            }
        }
        -re "$gdb_prompt $" { fail "continue to marker1"  }
        timeout { fail "(timeout) continue to marker1"  }
    }


proc gdb_start_again {} {
global srcdir
global subdir
global binfile
global gdb_prompt
global decimal

gdb_start
gdb_reinitialize_dir $srcdir/$subdir
gdb_load ${binfile}

source ${binfile}.ci

#
# set it up at a breakpoint so we can play with the variable values
#
if ![runto_main] then {
    perror "couldn't run to breakpoint"
d62 1
a62 1
send_gdb "break marker1\n" ; gdb_expect -re ".*$gdb_prompt $"
d64 19
a82 16
    send_gdb "cont\n"
    gdb_expect {
        -re "Break.* marker1 \\(\\) at .*:$decimal.*$gdb_prompt $" {
            send_gdb "up\n"
            gdb_expect {
                -re ".*main.*$gdb_prompt $" {
		    pass "up from marker1"
		}
                -re ".*$gdb_prompt $" {
		    fail "up from marker1"
		}
                timeout { fail "up from marker1 (timeout)" }
            }
        }
        -re "$gdb_prompt $" { fail "continue to marker1"  }
        timeout { fail "(timeout) continue to marker1"  }
a83 1
}
d85 4
d90 2
d264 4
a267 19
send_gdb "break f\n" ; gdb_expect -re ".*$gdb_prompt $"

    send_gdb "cont\n"
    gdb_expect {
        -re "Break.* f \\(\\) at .*:$decimal.*$gdb_prompt $" {
            send_gdb "up\n"
            gdb_expect {
                -re ".*main2.*$gdb_prompt $" {
		    pass "up from f" 
		}
                -re ".*$gdb_prompt $" {
		    fail "up from f" 
		}
                timeout { fail "up from f (timeout)" }
            }
        }
        -re "$gdb_prompt $" { fail "continue to f"  }
        timeout { fail "(timeout) continue to f"  }
    }
d269 1
@


1.3
log
@2000-12-05  Michael Snyder  <msnyder@@mvstp600e.cygnus.com>

        * gdb.base/constvars.exp: Add a "pass" message if "up" succeeds.
        * gdb.base/miscexprs.exp: Ditto.
        * gdb.base/pointers.exp:  Ditto.
        * gdb.c++/derivation.exp: Ditto.
        * gdb.c++/local.exp:      Ditto.
        * gdb.c++/namespace.exp:  Ditto.
        * gdb.c++/overload.exp:   Ditto.
        * gdb.c++/ref-types.exp:  Ditto.
@
text
@d2 1
a2 1
# Copyright (C) 1998, 1999 Free Software Foundation, Inc.
@


1.2
log
@2000-12-05  Michael Snyder  <msnyder@@mvstp600e.cygnus.com>

        * gdb.base/constvars.exp: Test result of "up" command.
        * gdb.base/miscexprs.exp: Ditto.
        * gdb.base/pointers.exp:  Ditto.
        * gdb.base/scope.exp:     Ditto.
        * gdb.c++/derivation.exp: Ditto.
        * gdb.c++/local.exp:      Ditto.
        * gdb.c++/namespace.exp:  Ditto.
        * gdb.c++/overload.exp:   Ditto.
        * gdb.c++/ref-types.exp:  Ditto.
@
text
@d64 3
a66 1
                -re ".*main.*$gdb_prompt $" {}
d106 7
a112 2
                -re ".*$gdb_prompt $" {}
                timeout { fail "up from marker1" }
d300 7
a306 2
                -re ".*$gdb_prompt $" {}
                timeout { fail "up from f" }
@


1.1
log
@Initial revision
@
text
@d1 2
a2 1
# Copyright (C) 1998 Free Software Foundation, Inc.
a22 6
# This file is part of the gdb testsuite
#
# tests for reference types
# with short type variables.
# 

d33 2
d64 5
a68 2
                -re ".*$gdb_prompt $" {}
                timeout { fail "up from marker1" }
d165 1
d201 4
a204 1
      }
d214 1
d233 1
d253 1
d284 411
@


1.1.1.1
log
@Initial creation of sourceware repository
@
text
@@


1.1.1.2
log
@import gdb-19990422 snapshot
@
text
@d1 1
a1 2
# Tests for reference types with short type variables in GDB.
# Copyright (C) 1998, 1999 Free Software Foundation, Inc.
d22 6
a164 1
    -re "type = short int \\\[4\\\].*$gdb_prompt $"  { pass "ptype as" }
d200 1
a200 4
    }
    -re ".\[0-9\]* = \\(short int &\\) @@$hex: -1.*$gdb_prompt $" {
        pass "print value of rs"
    }
a209 1
    -re "type = short int &.*$gdb_prompt $"  { pass "ptype rs" }
a227 1
    -re "type = short int \\*&.*$gdb_prompt $"  { pass "ptype rps" }
a246 1
    -re "type = short int \\\(&\\\)\\\[4\\\].*$gdb_prompt $"  { pass "ptype ras" }
@


1.1.1.3
log
@import gdb-1999-08-02 snapshot
@
text
@a278 411


send_gdb "break f\n" ; gdb_expect -re ".*$gdb_prompt $"

    send_gdb "cont\n"
    gdb_expect {
        -re "Break.* f \\(\\) at .*:$decimal.*$gdb_prompt $" {
            send_gdb "up\n"
            gdb_expect {
                -re ".*$gdb_prompt $" {}
                timeout { fail "up from f" }
            }
        }
        -re "$gdb_prompt $" { fail "continue to f"  }
        timeout { fail "(timeout) continue to f"  }
    }


send_gdb "print C\n"
gdb_expect {
    -re ".\[0-9\]* = 65 \'A\'.*$gdb_prompt $" {
        pass "print value of C"
      }
    -re ".*$gdb_prompt $" { fail "print value of C" }
    timeout           { fail "(timeout) print value of C" }
  }


send_gdb "ptype C\n"
gdb_expect {
    -re "type = char.*$gdb_prompt $"  { pass "ptype C" }
    -re ".*$gdb_prompt $"   {  fail "ptype C" }
    timeout             { fail "(timeout) ptype C" }
}


send_gdb "print UC\n"
gdb_expect {
    -re ".\[0-9\]* = 21 '\.025'\.*$gdb_prompt $" {
        pass "print value of UC"
      }
    -re ".*$gdb_prompt $" { fail "print value of UC" }
    timeout           { fail "(timeout) print value of UC" }
  }


send_gdb "ptype UC\n"
gdb_expect {
    -re "type = unsigned char.*$gdb_prompt $"  { pass "ptype UC" }
    -re ".*$gdb_prompt $"   {  fail "ptype UC" }
    timeout             { fail "(timeout) ptype UC" }
}


send_gdb "print S\n"
gdb_expect {
    -re ".\[0-9\]* = -14.*$gdb_prompt $" {
        pass "print value of S"
      }
    -re ".*$gdb_prompt $" { fail "print value of S" }
    timeout           { fail "(timeout) print value of S" }
  }


send_gdb "ptype S\n"
gdb_expect {
    -re "type = short.*$gdb_prompt $"  { pass "ptype S" }
    -re ".*$gdb_prompt $"   {  fail "ptype S" }
    timeout             { fail "(timeout) ptype S" }
}


send_gdb "print US\n"
gdb_expect {
    -re ".\[0-9\]* = 7.*$gdb_prompt $" {
        pass "print value of US"
      }
    -re ".*$gdb_prompt $" { fail "print value of US" }
    timeout           { fail "(timeout) print value of US" }
  }


send_gdb "ptype US\n"
gdb_expect {
    -re "type = unsigned short.*$gdb_prompt $"  { pass "ptype US" }
    -re "type = short unsigned.*$gdb_prompt $"  { pass "ptype US" }
    -re ".*$gdb_prompt $"   {  fail "ptype US" }
    timeout             { fail "(timeout) ptype US" }
}


send_gdb "print I\n"
gdb_expect {
    -re ".\[0-9\]* = 102.*$gdb_prompt $" {
        pass "print value of I"
      }
    -re ".*$gdb_prompt $" { fail "print value of I" }
    timeout           { fail "(timeout) print value of I" }
  }


send_gdb "ptype I\n"
gdb_expect {
    -re "type = int.*$gdb_prompt $"  { pass "ptype I" }
    -re ".*$gdb_prompt $"   {  fail "ptype I" }
    timeout             { fail "(timeout) ptype I" }
}


send_gdb "print UI\n"
gdb_expect {
    -re ".\[0-9\]* = 1002.*$gdb_prompt $" {
        pass "print value of UI"
      }
    -re ".*$gdb_prompt $" { fail "print value of UI" }
    timeout           { fail "(timeout) print value of UI" }
  }


send_gdb "ptype UI\n"
gdb_expect {
    -re "type = unsigned int.*$gdb_prompt $"  { pass "ptype UI" }
    -re ".*$gdb_prompt $"   {  fail "ptype UI" }
    timeout             { fail "(timeout) ptype UI" }
}


send_gdb "print L\n"
gdb_expect {
    -re ".\[0-9\]* = -234.*$gdb_prompt $" {
        pass "print value of L"
      }
    -re ".*$gdb_prompt $" { fail "print value of L" }
    timeout           { fail "(timeout) print value of L" }
  }


send_gdb "ptype L\n"
gdb_expect {
    -re "type = long.*$gdb_prompt $"  { pass "ptype L" }
    -re ".*$gdb_prompt $"   {  fail "ptype L" }
    timeout             { fail "(timeout) ptype L" }
}


send_gdb "print UL\n"
gdb_expect {
    -re ".\[0-9\]* = 234.*$gdb_prompt $" {
        pass "print value of UL"
      }
    -re ".*$gdb_prompt $" { fail "print value of UL" }
    timeout           { fail "(timeout) print value of UL" }
  }


send_gdb "ptype UL\n"
gdb_expect {
    -re "type = unsigned long.*$gdb_prompt $"  { pass "ptype UL" }
    -re "type = long unsigned.*$gdb_prompt $"  { pass "ptype UL" }
    -re ".*$gdb_prompt $"   {  fail "ptype UL" }
    timeout             { fail "(timeout) ptype UL" }
}


send_gdb "print F\n"
gdb_expect {
    -re ".\[0-9\]* = 1.2\[0-9\]*e\\+10.*$gdb_prompt $" {
        pass "print value of F"
      }
    -re ".*$gdb_prompt $" { fail "print value of F" }
    timeout           { fail "(timeout) print value of F" }
  }



send_gdb "ptype F\n"
gdb_expect {
    -re "type = float.*$gdb_prompt $"  { pass "ptype F" }
    -re ".*$gdb_prompt $"   {  fail "ptype F" }
    timeout             { fail "(timeout) ptype F" }
}


send_gdb "print D\n"
gdb_expect {
    -re ".\[0-9\]* = -1.375e-123.*$gdb_prompt $" {
        pass "print value of D"
      }
    -re ".*$gdb_prompt $" { fail "print value of D" }
    timeout           { fail "(timeout) print value of D" }
  }


send_gdb "ptype D\n"
gdb_expect {
    -re "type = double.*$gdb_prompt $"  { pass "ptype D" }
    -re ".*$gdb_prompt $"   {  fail "ptype D" }
    timeout             { fail "(timeout) ptype D" }
}



#
# test reference types
#




send_gdb "ptype rC\n"
gdb_expect {
    -re "type = char &.*$gdb_prompt $"  { pass "ptype rC" }
    -re ".*$gdb_prompt $"   {  fail "ptype rC" }
    timeout             { fail "(timeout) ptype rC" }
}




send_gdb "ptype rUC\n"
gdb_expect {
    -re "type = unsigned char &.*$gdb_prompt $"  { pass "ptype rUC" }
    -re ".*$gdb_prompt $"   {  fail "ptype rUC" }
    timeout             { fail "(timeout) ptype rUC" }
}



send_gdb "ptype rS\n"
gdb_expect {
    -re "type = short &.*$gdb_prompt $"  { pass "ptype rS" }
    -re "type = short int &.*$gdb_prompt $"  { pass "ptype rS" }
    -re ".*$gdb_prompt $"   {  fail "ptype rS" }
    timeout             { fail "(timeout) ptype rS" }
}



send_gdb "ptype rUS\n"
gdb_expect {
    -re "type = unsigned short &.*$gdb_prompt $"  { pass "ptype rUS" }
    -re "type = short unsigned int &.*$gdb_prompt $"  { pass "ptype rUS" }
    -re ".*$gdb_prompt $"   {  fail "ptype rUS" }
    timeout             { fail "(timeout) ptype rUS" }
}


send_gdb "ptype rI\n"
gdb_expect {
    -re "type = int &.*$gdb_prompt $"  { pass "ptype rI" }
    -re ".*$gdb_prompt $"   {  fail "ptype rI" }
    timeout             { fail "(timeout) ptype rI" }
}



send_gdb "ptype rUI\n"
gdb_expect {
    -re "type = unsigned int &.*$gdb_prompt $"  { pass "ptype rUI" }
    -re ".*$gdb_prompt $"   {  fail "ptype rUI" }
    timeout             { fail "(timeout) ptype rUI" }
}



send_gdb "ptype rL\n"
gdb_expect {
    -re "type = long &.*$gdb_prompt $"  { pass "ptype rL" }
    -re "type = long int &.*$gdb_prompt $"  { pass "ptype rL" }
    -re ".*$gdb_prompt $"   {  fail "ptype rL" }
    timeout             { fail "(timeout) ptype rL" }
}


send_gdb "ptype rUL\n"
gdb_expect {
    -re "type = unsigned long &.*$gdb_prompt $"  { pass "ptype rUL" }
    -re "type = long unsigned int &.*$gdb_prompt $"  { pass "ptype rUL" }
    -re ".*$gdb_prompt $"   {  fail "ptype rUL" }
    timeout             { fail "(timeout) ptype rUL" }
}


send_gdb "ptype rF\n"
gdb_expect {
    -re "type = float &.*$gdb_prompt $"  { pass "ptype rF" }
    -re ".*$gdb_prompt $"   {  fail "ptype rF" }
    timeout             { fail "(timeout) ptype rF" }
}


send_gdb "ptype rD\n"
gdb_expect {
    -re "type = double &.*$gdb_prompt $"  { pass "ptype rD" }
    -re ".*$gdb_prompt $"   {  fail "ptype rD" }
    timeout             { fail "(timeout) ptype rD" }
}


send_gdb "print rC\n"
gdb_expect {
    -re ".\[0-9\]* = \\(char &\\) @@$hex: 65 \'A\'.*$gdb_prompt $" {
        pass "print value of rC"
      }
    -re ".*$gdb_prompt $" { fail "print value of rC" }
    timeout           { fail "(timeout) print value of rC" }
  }


send_gdb "print rUC\n"
gdb_expect {
    -re ".\[0-9\]* = \\(unsigned char &\\) @@$hex: 21 \'.025\'.*$gdb_prompt $" {
        pass "print value of rUC"
      }
    -re ".*$gdb_prompt $" { fail "print value of rUC" }
    timeout           { fail "(timeout) print value of rUC" }
  }


send_gdb "print rS\n"
gdb_expect {
    -re ".\[0-9\]* = \\(short &\\) @@$hex: -14.*$gdb_prompt $" {
        pass "print value of rS"
    }
    -re ".\[0-9\]* = \\(short int &\\) @@$hex: -14.*$gdb_prompt $" {
        pass "print value of rS"
    }
    -re ".*$gdb_prompt $" { fail "print value of rS" }
    timeout           { fail "(timeout) print value of rS" }
  }


send_gdb "print rUS\n"
gdb_expect {
    -re ".\[0-9\]* = \\(unsigned short &\\) @@$hex: 7.*$gdb_prompt $" {
        pass "print value of rUS"
    }
    -re ".\[0-9\]* = \\(short unsigned int &\\) @@$hex: 7.*$gdb_prompt $" {
        pass "print value of rUS"
    }
    -re ".*$gdb_prompt $" { fail "print value of rUS" }
    timeout           { fail "(timeout) print value of rUS" }
  }


send_gdb "print rI\n"
gdb_expect {
    -re ".\[0-9\]* = \\(int &\\) @@$hex: 102.*$gdb_prompt $" {
        pass "print value of rI"
      }
    -re ".*$gdb_prompt $" { fail "print value of rI" }
    timeout           { fail "(timeout) print value of rI" }
  }


send_gdb "print rUI\n"
gdb_expect {
    -re ".\[0-9\]* = \\(unsigned int &\\) @@$hex: 1002.*$gdb_prompt $" {
        pass "print value of UI"
      }
    -re ".*$gdb_prompt $" { fail "print value of rUI" }
    timeout           { fail "(timeout) print value of rUI" }
  }


send_gdb "print rL\n"
gdb_expect {
    -re ".\[0-9\]* = \\(long &\\) @@$hex: -234.*$gdb_prompt $" {
        pass "print value of rL"
    }
    -re ".\[0-9\]* = \\(long int &\\) @@$hex: -234.*$gdb_prompt $" {
        pass "print value of rL"
    }
    -re ".*$gdb_prompt $" { fail "print value of rL" }
    timeout           { fail "(timeout) print value of rL" }
  }



send_gdb "print rUL\n"
gdb_expect {
    -re ".\[0-9\]* = \\(unsigned long &\\) @@$hex: 234.*$gdb_prompt $" {
        pass "print value of rUL"
    }
    -re ".\[0-9\]* = \\(long unsigned int &\\) @@$hex: 234.*$gdb_prompt $" {
        pass "print value of rUL"
    }
    -re ".*$gdb_prompt $" { fail "print value of rUL" }
    timeout           { fail "(timeout) print value of rUL" }
  }


send_gdb "print rF\n"
gdb_expect {
    -re ".\[0-9\]* = \\(float &\\) @@$hex: 1.2\[0-9\]*e\\+10.*$gdb_prompt $" {
        pass "print value of rF"
      }
    -re ".*$gdb_prompt $" { fail "print value of rF" }
    timeout           { fail "(timeout) print value of rF" }
  }


send_gdb "print rD\n"
gdb_expect {
    -re ".\[0-9\]* = \\(double &\\) @@$hex: -1.375e-123.*$gdb_prompt $" {
        pass "print value of rD"
      }
    -re ".*$gdb_prompt $" { fail "print value of rD" }
    timeout           { fail "(timeout) print value of rD" }
  }

@


1.1.1.4
log
@import gdb-1999-09-08 snapshot
@
text
@a32 2
if { [skip_cplus_tests] } { continue }

@


