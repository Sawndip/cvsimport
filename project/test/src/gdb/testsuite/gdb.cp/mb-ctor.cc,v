head	1.2;
access;
symbols
	gdb_7_6_1-2013-08-30-release:1.2
	gdb_7_6-2013-04-26-release:1.2
	gdb_7_6-branch:1.2.0.16
	gdb_7_6-2013-03-12-branchpoint:1.2
	gdb_7_5_1-2012-11-29-release:1.2
	gdb_7_5-2012-08-17-release:1.2
	gdb_7_5-branch:1.2.0.14
	gdb_7_5-2012-07-18-branchpoint:1.2
	gdb_7_4_1-2012-04-26-release:1.2
	gdb_7_4-2012-01-24-release:1.2
	gdb_7_4-branch:1.2.0.12
	gdb_7_4-2011-12-13-branchpoint:1.2
	gdb_7_3_1-2011-09-04-release:1.2
	gdb_7_3-2011-07-26-release:1.2
	gdb_7_3-branch:1.2.0.10
	gdb_7_3-2011-04-01-branchpoint:1.2
	gdb_7_2-2010-09-02-release:1.2
	gdb_7_2-branch:1.2.0.8
	gdb_7_2-2010-07-07-branchpoint:1.2
	gdb_7_1-2010-03-18-release:1.2
	gdb_7_1-branch:1.2.0.6
	gdb_7_1-2010-02-18-branchpoint:1.2
	gdb_7_0_1-2009-12-22-release:1.2
	gdb_7_0-2009-10-06-release:1.2
	gdb_7_0-branch:1.2.0.4
	gdb_7_0-2009-09-16-branchpoint:1.2
	arc-sim-20090309:1.1
	msnyder-checkpoint-072509-branch:1.2.0.2
	msnyder-checkpoint-072509-branchpoint:1.2
	arc-insight_6_8-branch:1.1.0.16
	arc-insight_6_8-branchpoint:1.1
	insight_6_8-branch:1.1.0.14
	insight_6_8-branchpoint:1.1
	reverse-20081226-branch:1.1.0.12
	reverse-20081226-branchpoint:1.1
	multiprocess-20081120-branch:1.1.0.10
	multiprocess-20081120-branchpoint:1.1
	reverse-20080930-branch:1.1.0.8
	reverse-20080930-branchpoint:1.1
	reverse-20080717-branch:1.1.0.6
	reverse-20080717-branchpoint:1.1
	msnyder-reverse-20080609-branch:1.1.0.4
	msnyder-reverse-20080609-branchpoint:1.1
	gdb_6_8-2008-03-27-release:1.1
	gdb_6_8-branch:1.1.0.2
	gdb_6_8-2008-02-26-branchpoint:1.1;
locks; strict;
comment	@// @;


1.2
date	2009.04.29.22.45.11;	author devans;	state Exp;
branches;
next	1.1;

1.1
date	2007.09.24.07.40.32;	author vprus;	state Exp;
branches;
next	;


desc
@@


1.2
log
@	* gdb.cp/mb-ctor.exp: Add multi-line source statement test.
	* gdb.cp/mb-ctor.cc: Ditto.
	* gdb.cp/mb-inline.exp: Add multi-line source statement test.
	* gdb.cp/mb-inline.h (multi_line_foo): New function.
	* gdb.cp/mb-inline1.cc: Call it.
	* gdb.cp/mb-inline2.cc: Ditto.
	* gdb.cp/mb-templates.exp: Add multi-line source statement test.
	* gdb.cp/mb-templates.cc (multi_line_foo): New template.
@
text
@
#include <stdio.h>

class Base 
{
public:
  Base(int k);
  ~Base();
  virtual void foo() {}
private:
  int k;
};

Base::Base(int k)
{
  this->k = k;
}

Base::~Base()
{
    printf("~Base\n");
}

class Derived : public virtual Base
{
public:
  Derived(int i);
  ~Derived();
private:
  int i;
  int i2;
};

Derived::Derived(int i) : Base(i)
{
  this->i = i;
  /* The next statement is spread over two lines on purpose to exercise
     a bug where breakpoints set on all but the last line of a statement
     would not get multiple breakpoints.
     The second line's text for gdb_get_line_number is a subset of the
     first line so that we don't care which line gdb prints when it stops.  */
  this->i2 = // set breakpoint here
    i; // breakpoint here
}

Derived::~Derived()
{
    printf("~Derived\n");
}

class DeeplyDerived : public Derived
{
public:
  DeeplyDerived(int i) : Base(i), Derived(i) {}
};

int main()
{
  /* Invokes the Derived ctor that constructs both
     Derived and Base.  */
  Derived d(7);
  /* Invokes the Derived ctor that constructs only
     Derived. Base is constructed separately by
     DeeplyDerived's ctor.  */
  DeeplyDerived dd(15);
}
@


1.1
log
@	* breakpoint.c (remove_sal): New.
	(expand_line_sal_maybe): New.
	(create_breakpoints): Call expand_line_sal_maybe.
	(clear_command): Add comment.
	(breakpoint_re_set_one): Call expand_line_sal_maybe.
	* linespec.c (decode_indirect): Set explicit_pc to 1.
	(decode_all_digits): Set explicit_line to 1.
	(append_expanded_sal): New.
	(expand_line_sal): New.
	* linespec.h (expand_line_sal): Declare.
	* symtab.c (init_sal): Initialize explicit_pc
	and explicit_line.
	* symtab.h (struct symtab_and_line): New fields
	explicit_pc and explicit_line.
@
text
@d31 1
d37 7
@

