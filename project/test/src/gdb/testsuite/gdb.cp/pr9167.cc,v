head	1.1;
access;
symbols
	gdb_7_6_1-2013-08-30-release:1.1
	gdb_7_6-2013-04-26-release:1.1
	gdb_7_6-branch:1.1.0.10
	gdb_7_6-2013-03-12-branchpoint:1.1
	gdb_7_5_1-2012-11-29-release:1.1
	gdb_7_5-2012-08-17-release:1.1
	gdb_7_5-branch:1.1.0.8
	gdb_7_5-2012-07-18-branchpoint:1.1
	gdb_7_4_1-2012-04-26-release:1.1
	gdb_7_4-2012-01-24-release:1.1
	gdb_7_4-branch:1.1.0.6
	gdb_7_4-2011-12-13-branchpoint:1.1
	gdb_7_3_1-2011-09-04-release:1.1
	gdb_7_3-2011-07-26-release:1.1
	gdb_7_3-branch:1.1.0.4
	gdb_7_3-2011-04-01-branchpoint:1.1
	gdb_7_2-2010-09-02-release:1.1
	gdb_7_2-branch:1.1.0.2
	gdb_7_2-2010-07-07-branchpoint:1.1;
locks; strict;
comment	@// @;


1.1
date	2010.04.21.17.33.54;	author cmoller;	state Exp;
branches;
next	;


desc
@@


1.1
log
@PR 9167
* cp-valprint.c (cp_print_value_fields): Replaced obstack_base()
method of popping recursion-detection stack with a method based on
obstack_object_size().
* gdb.cp/Makefile.in (EXECUTABLES): Added pr9167.
* gdb.cp/pr9167.cc: New file.
* gdb.cp/pr9167.exp: New file.
@
text
@#include <iostream>

template<typename DATA>
struct ATB
{
    int data;
    ATB() : data(0) {}
};


template<typename DATA,
	 typename DerivedType >
class A : public ATB<DATA>
{
public:
    static DerivedType const DEFAULT_INSTANCE;
};

template<typename DATA, typename DerivedType>
const DerivedType A<DATA, DerivedType>::DEFAULT_INSTANCE;

class B : public A<int, B>
{
    
};

int main()
{
    B b;
    // If this if-block is removed then GDB shall
    // not infinitely recurse when trying to print b.

    return 0;		// marker
}


@
