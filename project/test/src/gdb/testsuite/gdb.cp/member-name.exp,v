head	1.2;
access;
symbols
	gdb_7_6_1-2013-08-30-release:1.2
	gdb_7_6-2013-04-26-release:1.2
	gdb_7_6-branch:1.2.0.2
	gdb_7_6-2013-03-12-branchpoint:1.2;
locks; strict;
comment	@# @;


1.2
date	2013.01.01.06.33.27;	author brobecke;	state Exp;
branches;
next	1.1;

1.1
date	2012.12.14.21.19.11;	author tromey;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Update years in copyright notice for the GDB files.

Two modifications:
  1. The addition of 2013 to the copyright year range for every file;
  2. The use of a single year range, instead of potentially multiple
     year ranges, as approved by the FSF.
@
text
@# Copyright 2012-2013 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

if { [skip_cplus_tests] } { continue }

standard_testfile .cc

if {[prepare_for_testing $testfile.exp $testfile $srcfile {debug c++}]} {
    return -1
}

if ![runto_main] then {
    perror "couldn't run to breakpoint"
    return
}

gdb_breakpoint ${srcfile}:[gdb_get_line_number "First breakpoint"]
gdb_continue_to_breakpoint "continue to first breakpoint"
gdb_test "print C::x" " = 23" "print C::x from first breakpoint"
gdb_test "print B::b" " = 23" "print B::b from first breakpoint"
gdb_test "print inner::z" " = 0" "print inner::z from first breakpoint"

gdb_breakpoint ${srcfile}:[gdb_get_line_number "Second breakpoint"]
gdb_continue_to_breakpoint "continue to second breakpoint"
gdb_test "print C::x" " = 23" "print C::x from second breakpoint"
gdb_test "print B::b" " = 23" "print B::b from second breakpoint"
gdb_test "print inner::z" " = 0" "print inner::z from second breakpoint"

gdb_breakpoint ${srcfile}:[gdb_get_line_number "Third breakpoint"]
gdb_continue_to_breakpoint "continue to third breakpoint"
gdb_test "print Templ<int>::y" " = 23" "print Templ::y from third breakpoint"
@


1.1
log
@	PR c++/8888:
	* symtab.c (lookup_symbol_aux): If constructor is found, consider
	returning the type instead.
	* c-exp.y (classify_name): Check STRUCT_DOMAIN if a constructor is
	found.
testsuite
	* gdb.cp/member-name.exp: New file.
	* gdb.cp/member-name.cc: New file.
@
text
@d1 1
a1 1
# Copyright 2012 Free Software Foundation, Inc.
@

