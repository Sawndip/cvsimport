head	1.4;
access;
symbols
	gdb_7_0_1-2009-12-22-release:1.1
	gdb_7_0-2009-10-06-release:1.1
	gdb_7_0-branch:1.1.0.4
	gdb_7_0-2009-09-16-branchpoint:1.1
	msnyder-checkpoint-072509-branch:1.1.0.2
	msnyder-checkpoint-072509-branchpoint:1.1;
locks; strict;
comment	@# @;


1.4
date	2010.01.27.18.04.57;	author swagiaal;	state dead;
branches;
next	1.3;

1.3
date	2010.01.26.15.48.25;	author swagiaal;	state Exp;
branches;
next	1.2;

1.2
date	2010.01.01.07.32.01;	author brobecke;	state Exp;
branches;
next	1.1;

1.1
date	2009.06.23.17.46.52;	author swagiaal;	state Exp;
branches;
next	;


desc
@@


1.4
log
@
2010-01-27  Sami Wagiaalla  <swagiaal@@redhat.com>

	* gdb.cp/namespace-using.exp: Rename to nsusing.exp.
	* gdb.cp/namespace-using.cc: Rename to nsusing.cc.
@
text
@# Copyright 2008, 2010 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

if $tracelevel then {
    strace $tracelevel
}

set prms_id 0
set bug_id 0

set testfile namespace-using
set srcfile ${testfile}.cc
set binfile ${objdir}/${subdir}/${testfile}
if  { [gdb_compile "${srcdir}/${subdir}/${srcfile}" "${binfile}" executable {debug c++}] != "" } {
    untested "Couldn't compile test program"
    return -1
}

if [get_compiler_info ${binfile}] {
    return -1
}


# Get things started.

gdb_exit
gdb_start
gdb_reinitialize_dir $srcdir/$subdir
gdb_load ${binfile}

############################################
# test printing of namespace imported within
# the function.

if ![runto_main] then {
    perror "couldn't run to breakpoint main"
    continue
}

gdb_test "print _a" "= 1"

############################################
# test printing of namespace imported into 
# a scope containing the pc.

gdb_breakpoint [gdb_get_line_number "marker1 stop"]
gdb_continue_to_breakpoint "marker1 stop"

gdb_test "print _a" "= 1" "print _a in a nested scope"

############################################
# Test printing of namespace aliases

setup_kfail "gdb/7935" "*-*-*"
if ![runto marker2] then {
    perror "couldn't run to breakpoint marker2"
    continue
}

gdb_test "print B::a" "= 1"

############################################
# Test that names are not printed when they 
# are not imported

gdb_breakpoint "marker3"
gdb_continue_to_breakpoint "marker3"

# gcc-4-3 puts import statements for aliases in
# the global scope instead of the corresponding
# function scope. These wrong import statements throw
# this test off. This is fixed in gcc-4-4.
if [test_compiler_info gcc-4-3-*] then { setup_xfail *-*-* }

gdb_test "print _a" "No symbol \"_a\" in current context." "Print _a without import"

############################################
# Test printing of individually imported elements

setup_kfail "gdb/7936" "*-*-*"
if ![runto marker4] then {
    perror "couldn't run to breakpoint marker4"
    continue
}

gdb_test "print x" "= 2"

############################################
# test printing of namespace imported into
# file scope.

if ![runto marker5] then {
    perror "couldn't run to marker5"
    continue
}

gdb_test "print cc" "= 3"

############################################
# test printing of namespace imported into
# file scope.

if ![runto PQ::marker6] then {
    perror "couldn't run to PQ::marker6"
    continue
}

gdb_test "print ox" "No symbol \"ox\" in current context."
@


1.3
log
@2010-01-26  Sami Wagiaalla  <swagiaal@@redhat.com>

	* gdb.cp/namespace-using.exp: Add test for printing of namespaces
	imported into file scope.
	Marked test as xfail.
	* gdb.cp/namespace-using.cc (marker5): New function.
	* gdb.cp/shadow.exp: New test.
	* gdb.cp/shadow.cc: New test program.
	* gdb.cp/nsimport.exp: New test.
	* gdb.cp/nsimport.cc: New test program.

2010-01-26  Sami Wagiaalla  <swagiaal@@redhat.com>

	PR gdb/10929:
	* dwarf2read.c (read_lexical_block_scope): Create blocks for
	scopes which contain using directives even if they contain no
	declarations.
	* symtab.c (lookup_symbol_aux): Pass lowest level block to
	la_lookup_symbol_nonlocal.
	* cp-namespace.c (cp_lookup_symbol_nonlocal): call
	cp_lookup_symbol_namespace.
	(cp_lookup_symbol_namespace): Perform an import lookup at every
	block level.
	(cp_lookup_symbol_imports): New function.
	(cp_lookup_symbol_in_namespace): New function.
@
text
@@


1.2
log
@Update copyright year in most headers.

Automatic update by copyright.sh.
@
text
@d31 5
d81 7
a87 1
gdb_test "print _a" "No symbol \"_a\" in current context." "Print a without import"
d99 22
@


1.1
log
@2009-06-23  Sami Wagiaalla  <swagiaal@@redhat.com>

       * dwarf2read.c (process_die): Handle import statements
       (DW_TAG_imported_declaration, case DW_TAG_imported_module)
       (read_import_statement): New.
       (read_func_scope): Update using_directives to point to current context
       (read_lexical_block_scope): Ditto.
       * cp-support.h: Added prototype for cp_add_using.
       * cp-namespace.c: Removed local context_stack.
       (cp_initialize_namespace): Deleted.
       (cp_finalize_namespace): Deleted.
       (cp_add_using_directive): Use using_directives instead of using_list.
       (cp_add_using): No longer static.
       * buildsym.h: Created global using_direct variable.
       Created using_direct variable in context_stack.
       * buildsym.c (finish_block): Set using directives for the block under
       construction.
       (start_symtab): Removed call to cp_initialize_namespace().
       (end_symtab): Removed call to cp_finalize_namespace().
       (push_context): Save and reset using_directives.
       * block.c (block_using): Return using directives for given
       block instead of static block.

2009-06-23  Sami Wagiaalla  <swagiaal@@redhat.com>

       * gdb.cp/namespace-using.exp: New test.
       * gdb.cp/namespace-using.cc: New test.
@
text
@d1 1
a1 1
# Copyright 2008 Free Software Foundation, Inc.
@

