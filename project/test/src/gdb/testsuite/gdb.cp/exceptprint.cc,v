head	1.1;
access;
symbols;
locks; strict;
comment	@// @;


1.1
date	2013.04.15.18.09.02;	author tromey;	state Exp;
branches;
next	;


desc
@@


1.1
log
@	PR c++/15176:
	* NEWS: Update.
	* break-catch-throw.c (compute_exception): New function.
	(exception_funcs): New global.
	(_initialize_break_catch_throw): Create $_exception.
	* cp-abi.c (cplus_type_from_type_info): New function.
	* cp-abi.h (cplus_type_from_type_info): Declare.
	(struct cp_abi_ops) <get_type_from_type_info>: New field.
	* gnu-v3-abi.c (gnuv3_get_typename_from_type_info)
	(gnuv3_get_type_from_type_info): New functions.
	(init_gnuv3_ops): Set get_type_from_type_info ABI field.
gdb/doc
	* gdb.texinfo (Set Catchpoints): Document $_exception.
	(Convenience Vars): Mention $_exception.
gdb/testsuite
	* gdb.base/default.exp: Update for $_exception.
	* gdb.cp/exceptprint.cc: New file.
	* gdb.cp/exceptprint.exp: New file.
	* lib/gdb.exp (skip_libstdcxx_probe_tests): New proc.
@
text
@/* This testcase is part of GDB, the GNU debugger.

   Copyright 2013 Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */

template<typename T>
void
throwit (T val)
{
  throw val;
}

template<typename T>
void
rethrowit (T val)
{
  try
    {
      try
	{
	  throwit (val);
	}
      catch (...)
	{
	  throw;
	}
    }
  catch (...)
    {
      // Ignore.
    }
}

struct maude
{
  int mv;

  maude (int x) : mv (x) { }
};

int
main (int argc, char **argv)
{
  maude mm (77);
  maude &mmm (mm);

  rethrowit ("hi bob");
  rethrowit (23);
  rethrowit (mm);
  rethrowit (mmm);

  return 0;
}
@
