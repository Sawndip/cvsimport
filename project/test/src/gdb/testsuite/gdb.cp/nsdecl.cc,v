head	1.1;
access;
symbols
	gdb_7_6_1-2013-08-30-release:1.1
	gdb_7_6-2013-04-26-release:1.1
	gdb_7_6-branch:1.1.0.12
	gdb_7_6-2013-03-12-branchpoint:1.1
	gdb_7_5_1-2012-11-29-release:1.1
	gdb_7_5-2012-08-17-release:1.1
	gdb_7_5-branch:1.1.0.10
	gdb_7_5-2012-07-18-branchpoint:1.1
	gdb_7_4_1-2012-04-26-release:1.1
	gdb_7_4-2012-01-24-release:1.1
	gdb_7_4-branch:1.1.0.8
	gdb_7_4-2011-12-13-branchpoint:1.1
	gdb_7_3_1-2011-09-04-release:1.1
	gdb_7_3-2011-07-26-release:1.1
	gdb_7_3-branch:1.1.0.6
	gdb_7_3-2011-04-01-branchpoint:1.1
	gdb_7_2-2010-09-02-release:1.1
	gdb_7_2-branch:1.1.0.4
	gdb_7_2-2010-07-07-branchpoint:1.1
	gdb_7_1-2010-03-18-release:1.1
	gdb_7_1-branch:1.1.0.2
	gdb_7_1-2010-02-18-branchpoint:1.1;
locks; strict;
comment	@// @;


1.1
date	2010.01.26.16.47.35;	author swagiaal;	state Exp;
branches;
next	;


desc
@@


1.1
log
@ 2010-01-14  Sami Wagiaalla  <swagiaal@@redhat.com>

	* gdb.cp/nsrecurs.exp: New test.
	* gdb.cp/nsrecurs.cc: New test program.
	* gdb.cp/nsstress.exp: New test.
	* gdb.cp/nsstress.cc: New test program.
	* gdb.cp/nsdecl.exp: New test.
	* gdb.cp/nsdecl.cc: New test program.


 2010-01-26  Sami Wagiaalla  <swagiaal@@redhat.com>

	* cp-namespace.c (cp_lookup_symbol_namespace): Added
	search_parent argument.
	(cp_add_using): Initialize 'searched' field.
	(reset_directive_searched): New function.
	* cp-support.h: Add 'searched' field to using_direct struct.
	(cp_lookup_symbol_imports): Ditto.
	* cp-namespace.c (cp_lookup_symbol_imports): Ditto.
	Perform recursive search.
	Implement non parent search.
	* valops.c (value_maybe_namespace_elt): Updated.
@
text
@int a;
int b;
int c;
int d;
int e;
int f;
int g;
int h;
int i;
int j;
int k;
int l;
int m;
int n;
int o;
int p;
int q;
int r;
int s;
int t;
int u;
int v;
int w;
int x;
int y;
int z;

namespace A
{
  int xyz;

  using ::a;
  using ::b;
  using ::c;
  using ::d;
  using ::e;
  using ::f;
  using ::g;
  using ::h;
  using ::i;
  using ::j;
  using ::k;
  using ::l;
  using ::m;
  using ::n;
  using ::o;
  using ::p;
  using ::q;
  using ::r;
  using ::s;
  using ::t;
  using ::u;
  using ::v;
  using ::w;
  using ::x;
  using ::y;
  using ::z;

}

using A::a;
using A::b;
using A::c;
using A::d;
using A::e;
using A::f;
using A::g;
using A::h;
using A::i;
using A::j;
using A::k;
using A::l;
using A::m;
using A::n;
using A::o;
using A::p;
using A::q;
using A::r;
using A::s;
using A::t;
using A::u;
using A::v;
using A::w;
using A::x;
using A::y;
using A::z;

using namespace A;

int main ()
{
  return 0;
}
@
