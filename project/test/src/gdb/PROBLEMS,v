head	1.43;
access;
symbols
	gdb_7_6_1-2013-08-30-release:1.43
	gdb_7_6-2013-04-26-release:1.43
	gdb_7_6-branch:1.43.0.8
	gdb_7_6-2013-03-12-branchpoint:1.43
	gdb_7_5_1-2012-11-29-release:1.43
	gdb_7_5-2012-08-17-release:1.43
	gdb_7_5-branch:1.43.0.6
	gdb_7_5-2012-07-18-branchpoint:1.43
	gdb_7_4_1-2012-04-26-release:1.43
	gdb_7_4-2012-01-24-release:1.43
	gdb_7_4-branch:1.43.0.4
	gdb_7_4-2011-12-13-branchpoint:1.43
	gdb_7_3_1-2011-09-04-release:1.43
	gdb_7_3-2011-07-26-release:1.43
	gdb_7_3-branch:1.43.0.2
	gdb_7_3-2011-04-01-branchpoint:1.43
	gdb_7_2-2010-09-02-release:1.42.30.1
	gdb_7_2-branch:1.42.0.30
	gdb_7_2-2010-07-07-branchpoint:1.42
	gdb_7_1-2010-03-18-release:1.42
	gdb_7_1-branch:1.42.0.28
	gdb_7_1-2010-02-18-branchpoint:1.42
	gdb_7_0_1-2009-12-22-release:1.42
	gdb_7_0-2009-10-06-release:1.42
	gdb_7_0-branch:1.42.0.26
	gdb_7_0-2009-09-16-branchpoint:1.42
	arc-sim-20090309:1.42
	msnyder-checkpoint-072509-branch:1.42.0.24
	msnyder-checkpoint-072509-branchpoint:1.42
	arc-insight_6_8-branch:1.42.0.22
	arc-insight_6_8-branchpoint:1.42
	insight_6_8-branch:1.42.0.20
	insight_6_8-branchpoint:1.42
	reverse-20081226-branch:1.42.0.18
	reverse-20081226-branchpoint:1.42
	multiprocess-20081120-branch:1.42.0.16
	multiprocess-20081120-branchpoint:1.42
	reverse-20080930-branch:1.42.0.14
	reverse-20080930-branchpoint:1.42
	reverse-20080717-branch:1.42.0.12
	reverse-20080717-branchpoint:1.42
	msnyder-reverse-20080609-branch:1.42.0.10
	msnyder-reverse-20080609-branchpoint:1.42
	drow-reverse-20070409-branch:1.42.0.8
	drow-reverse-20070409-branchpoint:1.42
	gdb_6_8-2008-03-27-release:1.42
	gdb_6_8-branch:1.42.0.6
	gdb_6_8-2008-02-26-branchpoint:1.42
	gdb_6_7_1-2007-10-29-release:1.42
	gdb_6_7-2007-10-10-release:1.42
	gdb_6_7-branch:1.42.0.4
	gdb_6_7-2007-09-07-branchpoint:1.42
	insight_6_6-20070208-release:1.42
	gdb_6_6-2006-12-18-release:1.42
	gdb_6_6-branch:1.42.0.2
	gdb_6_6-2006-11-15-branchpoint:1.42
	insight_6_5-20061003-release:1.41.28.1
	gdb-csl-symbian-6_4_50_20060226-12:1.41
	gdb-csl-sourcerygxx-3_4_4-25:1.41
	nickrob-async-20060828-mergepoint:1.42
	gdb-csl-symbian-6_4_50_20060226-11:1.41
	gdb-csl-sourcerygxx-4_1-17:1.41
	gdb-csl-20060226-branch-local-2:1.41
	gdb-csl-sourcerygxx-4_1-14:1.41
	gdb-csl-sourcerygxx-4_1-13:1.41
	gdb-csl-sourcerygxx-4_1-12:1.41
	gdb-csl-sourcerygxx-3_4_4-21:1.41
	gdb_6_5-20060621-release:1.41.28.1
	gdb-csl-sourcerygxx-4_1-9:1.41
	gdb-csl-sourcerygxx-4_1-8:1.41
	gdb-csl-sourcerygxx-4_1-7:1.41
	gdb-csl-arm-2006q1-6:1.41
	gdb-csl-sourcerygxx-4_1-6:1.41
	gdb-csl-symbian-6_4_50_20060226-10:1.41
	gdb-csl-symbian-6_4_50_20060226-9:1.41
	gdb-csl-symbian-6_4_50_20060226-8:1.41
	gdb-csl-coldfire-4_1-11:1.41
	gdb-csl-sourcerygxx-3_4_4-19:1.41
	gdb-csl-coldfire-4_1-10:1.41
	gdb_6_5-branch:1.41.0.28
	gdb_6_5-2006-05-14-branchpoint:1.41
	gdb-csl-sourcerygxx-4_1-5:1.41
	nickrob-async-20060513-branch:1.41.0.26
	nickrob-async-20060513-branchpoint:1.41
	gdb-csl-sourcerygxx-4_1-4:1.41
	msnyder-reverse-20060502-branch:1.41.0.24
	msnyder-reverse-20060502-branchpoint:1.41
	gdb-csl-morpho-4_1-4:1.41
	gdb-csl-sourcerygxx-3_4_4-17:1.41
	readline_5_1-import-branch:1.41.0.22
	readline_5_1-import-branchpoint:1.41
	gdb-csl-20060226-branch-merge-to-csl-symbian-1:1.41
	gdb-csl-symbian-20060226-branch:1.41.0.20
	gdb-csl-symbian-20060226-branchpoint:1.41
	gdb-csl-20060226-branch-merge-to-csl-local-1:1.41
	msnyder-reverse-20060331-branch:1.41.0.18
	msnyder-reverse-20060331-branchpoint:1.41
	gdb-csl-available-20060303-branch:1.41.0.16
	gdb-csl-available-20060303-branchpoint:1.41
	gdb-csl-20060226-branch:1.41.0.14
	gdb-csl-20060226-branchpoint:1.41
	gdb_6_4-20051202-release:1.41
	msnyder-fork-checkpoint-branch:1.41.0.12
	msnyder-fork-checkpoint-branchpoint:1.41
	gdb-csl-gxxpro-6_3-branch:1.41.0.10
	gdb-csl-gxxpro-6_3-branchpoint:1.41
	gdb_6_4-branch:1.41.0.8
	gdb_6_4-2005-11-01-branchpoint:1.41
	gdb-csl-arm-20051020-branch:1.41.0.6
	gdb-csl-arm-20051020-branchpoint:1.41
	msnyder-tracepoint-checkpoint-branch:1.41.0.4
	msnyder-tracepoint-checkpoint-branchpoint:1.41
	gdb-csl-arm-20050325-2005-q1b:1.41
	gdb-csl-arm-20050325-2005-q1a:1.41
	csl-arm-20050325-branch:1.41.0.2
	csl-arm-20050325-branchpoint:1.41
	gdb-post-i18n-errorwarning-20050211:1.41
	gdb-pre-i18n-errorwarning-20050211:1.41
	gdb_6_3-20041109-release:1.39.2.2
	gdb_6_3-branch:1.39.0.2
	gdb_6_3-20041019-branchpoint:1.39
	drow_intercu-merge-20040921:1.39
	drow_intercu-merge-20040915:1.39
	jimb-gdb_6_2-e500-branch:1.31.2.5.0.4
	jimb-gdb_6_2-e500-branchpoint:1.31.2.5
	gdb_6_2-20040730-release:1.31.2.5
	gdb_6_2-branch:1.31.0.2
	gdb_6_2-2004-07-10-gmt-branchpoint:1.31
	gdb_6_1_1-20040616-release:1.23.2.6
	gdb_6_1-2004-04-05-release:1.23.2.6
	drow_intercu-merge-20040402:1.28
	drow_intercu-merge-20040327:1.27
	ezannoni_pie-20040323-branch:1.25.0.2
	ezannoni_pie-20040323-branchpoint:1.25
	cagney_tramp-20040321-mergepoint:1.25
	cagney_tramp-20040309-branch:1.23.0.4
	cagney_tramp-20040309-branchpoint:1.23
	gdb_6_1-branch:1.23.0.2
	gdb_6_1-2004-03-01-gmt-branchpoint:1.23
	drow_intercu-20040221-branch:1.22.0.2
	drow_intercu-20040221-branchpoint:1.22
	cagney_bfdfile-20040213-branch:1.21.0.2
	cagney_bfdfile-20040213-branchpoint:1.21
	drow-cplus-merge-20040208:1.21
	carlton_dictionary-20040126-merge:1.20
	cagney_bigcore-20040122-branch:1.20.0.2
	cagney_bigcore-20040122-branchpoint:1.20
	drow-cplus-merge-20040113:1.20
	drow-cplus-merge-20031224:1.20
	drow-cplus-merge-20031220:1.20
	carlton_dictionary-20031215-merge:1.20
	drow-cplus-merge-20031214:1.20
	carlton-dictionary-20031111-merge:1.20
	gdb_6_0-2003-10-04-release:1.14.30.5
	kettenis_sparc-20030918-branch:1.18.0.4
	kettenis_sparc-20030918-branchpoint:1.18
	carlton_dictionary-20030917-merge:1.18
	ezannoni_pie-20030916-branchpoint:1.18
	ezannoni_pie-20030916-branch:1.18.0.2
	cagney_x86i386-20030821-branch:1.16.0.2
	cagney_x86i386-20030821-branchpoint:1.16
	carlton_dictionary-20030805-merge:1.16
	carlton_dictionary-20030627-merge:1.16
	gdb_6_0-branch:1.14.0.30
	gdb_6_0-2003-06-23-branchpoint:1.14
	jimb-ppc64-linux-20030613-branch:1.14.0.28
	jimb-ppc64-linux-20030613-branchpoint:1.14
	cagney_convert-20030606-branch:1.14.0.26
	cagney_convert-20030606-branchpoint:1.14
	cagney_writestrings-20030508-branch:1.14.0.24
	cagney_writestrings-20030508-branchpoint:1.14
	jimb-ppc64-linux-20030528-branch:1.14.0.22
	jimb-ppc64-linux-20030528-branchpoint:1.14
	carlton_dictionary-20030523-merge:1.14
	cagney_fileio-20030521-branch:1.14.0.20
	cagney_fileio-20030521-branchpoint:1.14
	kettenis_i386newframe-20030517-mergepoint:1.14
	jimb-ppc64-linux-20030509-branch:1.14.0.18
	jimb-ppc64-linux-20030509-branchpoint:1.14
	kettenis_i386newframe-20030504-mergepoint:1.14
	carlton_dictionary-20030430-merge:1.14
	kettenis_i386newframe-20030419-branch:1.14.0.16
	kettenis_i386newframe-20030419-branchpoint:1.14
	carlton_dictionary-20030416-merge:1.14
	cagney_frameaddr-20030409-mergepoint:1.14
	kettenis_i386newframe-20030406-branch:1.14.0.14
	kettenis_i386newframe-20030406-branchpoint:1.14
	cagney_frameaddr-20030403-branchpoint:1.14
	cagney_frameaddr-20030403-branch:1.14.0.12
	cagney_framebase-20030330-mergepoint:1.14
	cagney_framebase-20030326-branch:1.14.0.10
	cagney_framebase-20030326-branchpoint:1.14
	cagney_lazyid-20030317-branch:1.14.0.8
	cagney_lazyid-20030317-branchpoint:1.14
	kettenis-i386newframe-20030316-mergepoint:1.14
	offbyone-20030313-branch:1.14.0.6
	offbyone-20030313-branchpoint:1.14
	kettenis-i386newframe-20030308-branch:1.14.0.4
	kettenis-i386newframe-20030308-branchpoint:1.14
	carlton_dictionary-20030305-merge:1.14
	cagney_offbyone-20030303-branch:1.14.0.2
	cagney_offbyone-20030303-branchpoint:1.14
	carlton_dictionary-20030207-merge:1.12
	interps-20030203-mergepoint:1.11
	interps-20030202-branch:1.11.0.4
	interps-20030202-branchpoint:1.11
	cagney-unwind-20030108-branch:1.11.0.2
	cagney-unwind-20030108-branchpoint:1.11
	carlton_dictionary-20021223-merge:1.11
	gdb_5_3-2002-12-12-release:1.8.4.3
	carlton_dictionary-20021115-merge:1.9
	kseitz_interps-20021105-merge:1.8
	kseitz_interps-20021103-merge:1.8
	drow-cplus-merge-20021020:1.8
	drow-cplus-merge-20021025:1.8
	carlton_dictionary-20021025-merge:1.8
	carlton_dictionary-20021011-merge:1.8
	drow-cplus-branch:1.8.0.8
	drow-cplus-branchpoint:1.8
	kseitz_interps-20020930-merge:1.8
	carlton_dictionary-20020927-merge:1.8
	carlton_dictionary-branch:1.8.0.6
	carlton_dictionary-20020920-branchpoint:1.8
	gdb_5_3-branch:1.8.0.4
	gdb_5_3-2002-09-04-branchpoint:1.8
	kseitz_interps-20020829-merge:1.8
	cagney_sysregs-20020825-branch:1.8.0.2
	cagney_sysregs-20020825-branchpoint:1.8
	readline_4_3-import-branch:1.7.0.2
	readline_4_3-import-branchpoint:1.7
	gdb_5_2_1-2002-07-23-release:1.4.2.2
	kseitz_interps-20020528-branch:1.6.0.2
	kseitz_interps-20020528-branchpoint:1.6
	cagney_regbuf-20020515-branch:1.5.0.4
	cagney_regbuf-20020515-branchpoint:1.5
	jimb-macro-020506-branch:1.5.0.2
	jimb-macro-020506-branchpoint:1.5
	gdb_5_2-2002-04-29-release:1.4.2.1
	gdb_5_2-branch:1.4.0.2
	gdb_5_2-2002-03-03-branchpoint:1.4
	gdb_5_1_1-2002-01-24-release:1.1.2.2
	cygnus_cvs_20020108_pre:1.2
	gdb_5_1-2001-07-29-branch:1.1.0.2;
locks; strict;
comment	@# @;


1.43
date	2010.07.29.14.48.58;	author palves;	state Exp;
branches;
next	1.42;

1.42
date	2006.07.14.22.55.58;	author brobecke;	state Exp;
branches
	1.42.30.1;
next	1.41;

1.41
date	2004.11.08.15.55.49;	author cagney;	state Exp;
branches
	1.41.26.1
	1.41.28.1;
next	1.40;

1.40
date	2004.11.08.15.34.04;	author cagney;	state Exp;
branches;
next	1.39;

1.39
date	2004.08.13.16.31.11;	author chastain;	state Exp;
branches
	1.39.2.1;
next	1.38;

1.38
date	2004.08.12.21.44.19;	author cagney;	state Exp;
branches;
next	1.37;

1.37
date	2004.07.29.22.30.31;	author cagney;	state Exp;
branches;
next	1.36;

1.36
date	2004.07.28.19.53.39;	author cagney;	state Exp;
branches;
next	1.35;

1.35
date	2004.07.27.00.01.17;	author chastain;	state Exp;
branches;
next	1.34;

1.34
date	2004.07.26.18.30.19;	author cagney;	state Exp;
branches;
next	1.33;

1.33
date	2004.07.21.16.17.56;	author cagney;	state Exp;
branches;
next	1.32;

1.32
date	2004.07.18.22.29.40;	author cagney;	state Exp;
branches;
next	1.31;

1.31
date	2004.06.19.17.41.03;	author chastain;	state Exp;
branches
	1.31.2.1;
next	1.30;

1.30
date	2004.06.17.17.30.30;	author cagney;	state Exp;
branches;
next	1.29;

1.29
date	2004.04.03.16.37.07;	author cagney;	state Exp;
branches;
next	1.28;

1.28
date	2004.03.28.19.56.41;	author cagney;	state Exp;
branches;
next	1.27;

1.27
date	2004.03.26.17.05.40;	author carlton;	state Exp;
branches;
next	1.26;

1.26
date	2004.03.25.21.16.40;	author cagney;	state Exp;
branches;
next	1.25;

1.25
date	2004.03.19.16.42.31;	author cagney;	state Exp;
branches;
next	1.24;

1.24
date	2004.03.17.07.00.41;	author chastain;	state Exp;
branches;
next	1.23;

1.23
date	2004.02.29.02.57.24;	author cagney;	state Exp;
branches
	1.23.2.1
	1.23.4.1;
next	1.22;

1.22
date	2004.02.20.21.43.38;	author brobecke;	state Exp;
branches
	1.22.2.1;
next	1.21;

1.21
date	2004.01.27.09.46.16;	author chastain;	state Exp;
branches;
next	1.20;

1.20
date	2003.10.24.17.37.03;	author cagney;	state Exp;
branches;
next	1.19;

1.19
date	2003.09.25.18.23.56;	author cagney;	state Exp;
branches;
next	1.18;

1.18
date	2003.08.26.03.08.32;	author drow;	state Exp;
branches;
next	1.17;

1.17
date	2003.08.25.18.16.19;	author chastain;	state Exp;
branches;
next	1.16;

1.16
date	2003.06.26.16.22.59;	author chastain;	state Exp;
branches;
next	1.15;

1.15
date	2003.06.23.03.28.13;	author cagney;	state Exp;
branches;
next	1.14;

1.14
date	2003.02.26.17.24.12;	author chastain;	state Exp;
branches
	1.14.30.1;
next	1.13;

1.13
date	2003.02.25.21.58.20;	author chastain;	state Exp;
branches;
next	1.12;

1.12
date	2003.02.05.17.45.14;	author chastain;	state Exp;
branches;
next	1.11;

1.11
date	2002.12.10.21.24.47;	author cagney;	state Exp;
branches;
next	1.10;

1.10
date	2002.12.03.17.15.42;	author cagney;	state Exp;
branches;
next	1.9;

1.9
date	2002.11.07.18.04.44;	author brobecke;	state Exp;
branches;
next	1.8;

1.8
date	2002.08.24.14.36.12;	author kettenis;	state Exp;
branches
	1.8.4.1
	1.8.6.1
	1.8.8.1;
next	1.7;

1.7
date	2002.08.23.23.05.39;	author kettenis;	state Exp;
branches;
next	1.6;

1.6
date	2002.05.24.02.56.56;	author cagney;	state Exp;
branches
	1.6.2.1;
next	1.5;

1.5
date	2002.04.15.21.31.49;	author cagney;	state Exp;
branches
	1.5.4.1;
next	1.4;

1.4
date	2002.01.31.20.45.17;	author cagney;	state Exp;
branches
	1.4.2.1;
next	1.3;

1.3
date	2002.01.31.01.31.54;	author cagney;	state Exp;
branches;
next	1.2;

1.2
date	2001.12.07.23.33.19;	author cagney;	state Exp;
branches;
next	1.1;

1.1
date	2001.12.07.23.30.56;	author cagney;	state dead;
branches
	1.1.2.1;
next	;

1.42.30.1
date	2010.07.29.14.44.47;	author palves;	state Exp;
branches;
next	;

1.41.26.1
date	2006.08.28.07.48.50;	author nickrob;	state Exp;
branches;
next	;

1.41.28.1
date	2006.06.21.04.52.26;	author brobecke;	state Exp;
branches;
next	;

1.39.2.1
date	2004.11.08.15.31.40;	author cagney;	state Exp;
branches;
next	1.39.2.2;

1.39.2.2
date	2004.11.08.15.54.33;	author cagney;	state Exp;
branches;
next	;

1.31.2.1
date	2004.07.17.14.49.08;	author cagney;	state Exp;
branches;
next	1.31.2.2;

1.31.2.2
date	2004.07.21.16.16.56;	author cagney;	state Exp;
branches;
next	1.31.2.3;

1.31.2.3
date	2004.07.26.18.29.13;	author cagney;	state Exp;
branches;
next	1.31.2.4;

1.31.2.4
date	2004.07.28.19.51.42;	author cagney;	state Exp;
branches;
next	1.31.2.5;

1.31.2.5
date	2004.07.29.22.29.59;	author cagney;	state Exp;
branches;
next	1.31.2.6;

1.31.2.6
date	2004.08.12.21.42.21;	author cagney;	state Exp;
branches;
next	;

1.23.2.1
date	2004.03.17.07.02.31;	author chastain;	state Exp;
branches;
next	1.23.2.2;

1.23.2.2
date	2004.03.19.16.44.47;	author cagney;	state Exp;
branches;
next	1.23.2.3;

1.23.2.3
date	2004.03.25.21.20.26;	author cagney;	state Exp;
branches;
next	1.23.2.4;

1.23.2.4
date	2004.03.26.17.02.52;	author carlton;	state Exp;
branches;
next	1.23.2.5;

1.23.2.5
date	2004.03.28.19.47.27;	author cagney;	state Exp;
branches;
next	1.23.2.6;

1.23.2.6
date	2004.04.03.16.36.27;	author cagney;	state Exp;
branches;
next	;

1.23.4.1
date	2004.03.21.23.57.33;	author cagney;	state Exp;
branches;
next	;

1.22.2.1
date	2004.03.27.17.37.43;	author drow;	state Exp;
branches;
next	1.22.2.2;

1.22.2.2
date	2004.04.02.16.47.44;	author drow;	state Exp;
branches;
next	1.22.2.3;

1.22.2.3
date	2004.09.16.17.00.49;	author drow;	state Exp;
branches;
next	;

1.14.30.1
date	2003.06.23.03.26.04;	author cagney;	state Exp;
branches;
next	1.14.30.2;

1.14.30.2
date	2003.06.26.16.25.53;	author chastain;	state Exp;
branches;
next	1.14.30.3;

1.14.30.3
date	2003.08.25.18.19.26;	author chastain;	state Exp;
branches;
next	1.14.30.4;

1.14.30.4
date	2003.09.14.18.35.57;	author drow;	state Exp;
branches;
next	1.14.30.5;

1.14.30.5
date	2003.09.25.18.27.35;	author cagney;	state Exp;
branches;
next	;

1.8.4.1
date	2002.11.07.07.17.08;	author brobecke;	state Exp;
branches;
next	1.8.4.2;

1.8.4.2
date	2002.12.03.17.13.09;	author cagney;	state Exp;
branches;
next	1.8.4.3;

1.8.4.3
date	2002.12.10.21.23.51;	author cagney;	state Exp;
branches;
next	;

1.8.6.1
date	2002.11.15.19.18.35;	author carlton;	state Exp;
branches;
next	1.8.6.2;

1.8.6.2
date	2003.02.07.19.17.43;	author carlton;	state Exp;
branches;
next	1.8.6.3;

1.8.6.3
date	2003.03.06.00.56.22;	author carlton;	state Exp;
branches;
next	1.8.6.4;

1.8.6.4
date	2003.06.27.21.49.42;	author carlton;	state Exp;
branches;
next	1.8.6.5;

1.8.6.5
date	2003.11.11.23.50.37;	author carlton;	state Exp;
branches;
next	;

1.8.8.1
date	2003.12.14.20.27.04;	author drow;	state Exp;
branches;
next	1.8.8.2;

1.8.8.2
date	2004.02.09.19.43.30;	author drow;	state Exp;
branches;
next	;

1.6.2.1
date	2002.08.30.22.52.41;	author kseitz;	state Exp;
branches;
next	;

1.5.4.1
date	2002.06.15.16.42.49;	author cagney;	state Exp;
branches;
next	;

1.4.2.1
date	2002.04.15.21.30.15;	author cagney;	state Exp;
branches;
next	1.4.2.2;

1.4.2.2
date	2002.05.24.02.56.29;	author cagney;	state Exp;
branches;
next	;

1.1.2.1
date	2001.12.07.23.30.56;	author cagney;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2001.12.07.23.51.46;	author cagney;	state Exp;
branches;
next	1.1.2.3;

1.1.2.3
date	2002.01.31.01.32.10;	author cagney;	state Exp;
branches;
next	1.1.2.4;

1.1.2.4
date	2002.01.31.20.49.12;	author cagney;	state Exp;
branches;
next	;


desc
@@


1.43
log
@	* PROBLEMS: Remove mention of all problems.
@
text
@
			Known problems in GDB 7.2.50

		See also: http://www.gnu.org/software/gdb/bugs/

None worth mentioning here.
@


1.42
log
@        * PROBLEMS: Document threads/2137.
@
text
@d2 1
a2 1
			Known problems in GDB 6.5
d6 1
a6 99

*** Build problems

build/1411: build fails on hpux 10.20 and hpux 11.00 with CMA threads

GDB does not build on HP/UX 10.20 or HP/UX 11.00 if the CMA
thread package is installed.  The compile error is:

  ../../gdb/hpux-thread.c:222: variable-size type declared outside of any function

This happens only if the CMA thread package is installed.

As a workaround, you can disable support for CMA threads
by editing the file gdb/configure.  Find the line:

  if test -f /usr/include/dce/cma_config.h ; then

And replace it with:

  if false ; then

*** Misc

gdb/1560: Control-C does not always interrupt GDB.

When GDB is busy processing a command which takes a long time to
complete, hitting Control-C does not have the expected effect.
The command execution is not aborted, and the "QUIT" message confirming
the abortion is displayed only after the command has been completed.

*** C++ support

gdb/931: GDB could be more generous when reading types C++ templates on input

When the user types a template, GDB frequently requires the type to be
typed in a certain way (e.g. "const char*" as opposed to "const char *"
or "char const *" or "char const*").

gdb/1512: no canonical way to output names of C++ types

We currently don't have any canonical way to output names of C++ types.
E.g. "const char *" versus "char const *"; more subtleties arise when
dealing with templates.

gdb/1516: [regression] local classes, gcc 2.95.3, dwarf-2

With gcc 2.95.3 and the dwarf-2 debugging format, classes which are
defined locally to a function include the demangled name of the function
as part of their name.  For example, if a function "foobar" contains a
local class definition "Local", gdb will say that the name of the class
type is "foobar__Fi.0:Local".

This applies only to classes where the class type is defined inside a
function, not to variables defined with types that are defined somewhere
outside any function (which most types are).

gdb/1588: names of c++ nested types in casts must be enclosed in quotes

You must type
  (gdb) print ('Foo::Bar') x
or
  (gdb) print ('Foo::Bar' *) y
instead of
  (gdb) print (Foo::Bar) x
or
  (gdb) print (Foo::Bar *) y
respectively.

gdb/1091: Constructor breakpoints ignored
gdb/1193: g++ 3.3 creates multiple constructors: gdb 5.3 can't set breakpoints

When gcc 3.x compiles a C++ constructor or C++ destructor, it generates
2 or 3 different versions of the object code.  These versions have
unique mangled names (they have to, in order for linking to work), but
they have identical source code names, which leads to a great deal of
confusion.  Specifically, if you set a breakpoint in a constructor or a
destructor, gdb will put a breakpoint in one of the versions, but your
program may execute the other version.  This makes it impossible to set
breakpoints reliably in constructors or destructors.

gcc 3.x generates these multiple object code functions in order to
implement virtual base classes.  gcc 2.x generated just one object code
function with a hidden parameter, but gcc 3.x conforms to a multi-vendor
ABI for C++ which requires multiple object code functions.

*** Threads

threads/1650: manythreads.exp

On GNU/Linux systems that use the old LinuxThreads thread library, a
program rapidly creating and deleting threads can confuse GDB leading
to an internal error.

This problem does not occur on newer systems that use the NPTL
library, and did not occur with GDB 6.1.

threads/2137: Native Solaris Thread Debugging broken.

Use GDB 6.4 if thread debugging is needed on Solaris.
@


1.42.30.1
log
@	* PROBLEMS: Remove mention of all problems.
@
text
@d2 1
a2 1
			Known problems in GDB 7.2
d6 99
a104 1
None worth mentioning here.
@


1.41
log
@2004-11-08  Andrew Cagney  <cagney@@gnu.org>

	* README: Refer to 6.3, not 6.2, update directory listing droppng
	references to intl/ and mmalloc/.
	* PROBLEMS: Refer to 6.3 not 6.2.
@
text
@d2 1
a2 1
			Known problems in GDB 6.3
d101 4
@


1.41.26.1
log
@Changes from nickrob-async-20060828-mergepoint.
@
text
@d2 1
a2 1
			Known problems in GDB 6.5
a100 4

threads/2137: Native Solaris Thread Debugging broken.

Use GDB 6.4 if thread debugging is needed on Solaris.
@


1.41.28.1
log
@        * PROBLEMS: Document threads/2137.
@
text
@d2 1
a2 1
			Known problems in GDB 6.5
a100 5

threads/2137: Native Solaris Thread Debugging broken.

Use GDB 6.4 if thread debugging is needed on Solaris.

@


1.40
log
@2004-11-08  Andrew Cagney  <cagney@@gnu.org>

	* PROBLEMS: Delete no-longer applicable problems.
@
text
@d2 1
a2 1
			Known problems in GDB 6.2
@


1.39
log
@2004-08-12  Michael Chastain  <mec.gnu@@mindspring.com>

	* PROBLEMS: Mention build/1411.
@
text
@a26 24
build/1458: compile failed on hpux11

GDB has build problems on HP/UX 11 with some versions of the HP
Ansi C compiler.  (GCC works fine).

The problem happens when compiling intl/bindtextdom.c.
The error is:

  cc: "gettextP.h", line 50: error 1000: Unexpected symbol: "SWAP".
  cc: panic 2017: Cannot recover from earlier errors, terminating.
  *** Error exit code 1

This is a problem with the 'inline' keyword in gettextP.h.
The workaround is to disable 'inline' before building gdb:

  export ac_cv_c_inline=no

This problem happens only with some versions of the HP Ansi C compiler.
Versions A.11.01.25171.GP and B.11.11.28706.GP have both been observed
to work; version B.11.11.04 gets the build error and needs the
workaround.

This problem might also happen with other C compilers.

a90 28
*** Signal handlers

On many systems an attempt to single-step a system-call instruction
results in two or more instructions being executed (the system-call,
and one or more instructions following).

When attempting to single-step through a signal trampoline, this
problem may result the program unintentionally running to completion,
or re-execute the faulting instruction, or even corrupting the program
counter.

Ref: PR breakpoints/1702.

*** Stack backtraces

GDB's core code base has been updated to use a new backtrace
mechanism.  This mechanism makes it possible to support new features
such DWARF 2 Call Frame Information (which in turn makes possible
backtraces through optimized code).

Since this code is new, it is known to still have a few problems:

gdb/1505: [regression] gdb prints a bad backtrace for a thread

When backtracing a thread, gdb does not stop when it reaches the
outermost frame, instead continuing until it hits garbage.  This is
sensitive to the operating system and thread library.

@


1.39.2.1
log
@2004-11-08  Andrew Cagney  <cagney@@gnu.org>

	* PROBLEMS: Delete no-longer applicable problems.
@
text
@d27 24
d115 28
@


1.39.2.2
log
@2004-11-08  Andrew Cagney  <cagney@@gnu.org>

	* README: Refer to 6.3, not 6.2, update directory listing droppng
	references to intl/ and mmalloc/.
	* PROBLEMS: Refer to 6.3 not 6.2.
@
text
@d2 1
a2 1
			Known problems in GDB 6.3
@


1.38
log
@2004-08-12  Andrew Cagney  <cagney@@gnu.org>

	* NEWS: Mention fixes in GDB 6.2.1.
	* PROBLEMS: Remove mention of mips-irix.
@
text
@d9 18
@


1.37
log
@2004-07-29  Andrew Cagney  <cagney@@gnu.org>

	* PROBLEMS (mips-irix): Note that it is broken.
@
text
@a41 6
mips-irix broken:

Due to problems with both BFD (sections not being correctly
recognized) and GDB (backtraces failing), GDB 6.2 does not work on
MIPS IRIX.

@


1.36
log
@2004-07-28  Andrew Cagney  <cagney@@gnu.org>

	* PROBLEMS: Mention threads/1650.
	* NEWS: Mention the NPTL fix.
@
text
@d42 6
@


1.35
log
@2004-07-26  Michael Chastain  <mec.gnu@@mindspring.com>

	Document PR threads/1650.
	* PROBLEMS (Threads): Document problem with many threads
@
text
@d129 3
a131 3
A program which creates many threads which exit very quickly (hundreds
of thousands of threads in the test program) can cause gdb to generate
an internal error.  The internal error often looks like:
d133 2
a134 8
  lin-lwp.c:744: internal-error: stop_callback: Assertion `lp->status == 0' failed.
  A problem internal to GDB has been detected.
  further debugging may prove unreliable.
  Quit this debugging session? (y or n)

This has been observed on native i686-pc-linux-gnu with linuxthreads,
the old threading model.  With NPTL threads, this internal error has not
been observed.
@


1.34
log
@2004-07-26  Andrew Cagney  <cagney@@gnu.org>

	* MAINTAINERS: Mark the xstormy16, sh64, ns32k, mn10300, mcore,
	and h8300 as broken.
	* NEWS: END-OF-LIFE frame compatibility module.
	* PROBLEMS: For "Stack backtraces", remove powerpc, hppa and mips
	specific comments.
@
text
@d124 17
@


1.33
log
@2004-07-21  Andrew Cagney  <cagney@@gnu.org>

	* PROBLEMS: Mention breakpoints/1702.
	* NEWS: For signal trampolines, cite s390 GNU/Linux as a system
	that is known to work.
@
text
@a123 21

hppa*-*-*
mips*-*-*

The MIPS and HPPA backtrace code has only very recently been updated
to use GDB's new frame mechanism.  At present there are still a few
problems, in particular backtraces through signal handlers do not
work.

People encountering problems with these architectures should consult
GDB's web pages and mailing lists (http://www.gnu.org/software/gdb/)
to see if there are updates.

powerpc*-*-*

PowerPC architecture support, in 6.1, does not use the new frame code.

Fortunately, PowerPC architecture support, in GDB's mainline sources,
have been updated.  People encountering problems should consider
downloading a more current snapshot of GDB
(http://www.gnu.org/software/gdb/current/).
@


1.32
log
@GRR, commit was lost.
@
text
@d97 13
@


1.31
log
@2004-06-18  Michael Chastain  <mec.gnu@@mindspring.com>

	* PROBLEMS: Add more specific information, and a work-around,
	for PR gdb/1458.
@
text
@d2 1
a2 1
			Known problems in GDB 6.1.1
@


1.31.2.1
log
@2004-07-17  Andrew Cagney  <cagney@@gnu.org>

	* NEWS, PROBLEMS: Update for 6.2.
@
text
@d2 1
a2 1
			Known problems in GDB 6.2
@


1.31.2.2
log
@2004-07-21  Andrew Cagney  <cagney@@gnu.org>

	* PROBLEMS: Mention breakpoints/1702.
	* NEWS: For signal trampolines, cite s390 GNU/Linux as a system
	that is known to work.
@
text
@a96 13
*** Signal handlers

On many systems an attempt to single-step a system-call instruction
results in two or more instructions being executed (the system-call,
and one or more instructions following).

When attempting to single-step through a signal trampoline, this
problem may result the program unintentionally running to completion,
or re-execute the faulting instruction, or even corrupting the program
counter.

Ref: PR breakpoints/1702.

@


1.31.2.3
log
@2004-07-26  Andrew Cagney  <cagney@@gnu.org>

	* MAINTAINERS: Mark the xstormy16, sh64, ns32k, mn10300, mcore,
	and h8300 as broken.
	* NEWS: END-OF-LIFE frame compatibility module.
	* PROBLEMS: For "Stack backtraces", remove powerpc, hppa and mips
	specific comments.
@
text
@d124 21
@


1.31.2.4
log
@2004-07-28  Andrew Cagney  <cagney@@gnu.org>

	* PROBLEMS: Mention threads/1650.
	* NEWS: Mention the NPTL fix.
@
text
@a123 11

*** Threads

threads/1650: manythreads.exp

On GNU/Linux systems that use the old LinuxThreads thread library, a
program rapidly creating and deleting threads can confuse GDB leading
to an internal error.

This problem does not occur on newer systems that use the NPTL
library, and did not occur with GDB 6.1.
@


1.31.2.5
log
@2004-07-29  Andrew Cagney  <cagney@@gnu.org>

	* PROBLEMS (mips-irix): Note that it is broken.
@
text
@a41 6
mips-irix broken:

Due to problems with both BFD (sections not being correctly
recognized) and GDB (backtraces failing), GDB 6.2 does not work on
MIPS IRIX.

@


1.31.2.6
log
@2004-08-12  Andrew Cagney  <cagney@@gnu.org>

	* NEWS: Mention fixes in GDB 6.2.1.
	* PROBLEMS: Remove mention of mips-irix.
@
text
@d42 6
@


1.30
log
@2004-06-17  Andrew Cagney  <cagney@@gnu.org>

	GDB 6.1.1 released from the GDB 6.1 branch.
	* NEWS: Merge in 6.1.1 NEWS from 6.1 branch.
	* PROBLEMS: Ditto.
@
text
@d9 1
a9 1
build/1458: comple failed on hpux11
d11 21
a31 3
GDB 6.1 is known to have build problems on HP/UX 11.00 using the
vendor supplied compilers (GDB does build on HP/UX 11.11, and using
GCC).
@


1.29
log
@2004-04-03  Andrew Cagney  <cagney@@redhat.com>

	* PROBLEMS: Mention that GDB doesn't build on HP/UX 11.00.
@
text
@d2 1
a2 1
			Known problems in GDB 6.1
@


1.28
log
@2004-03-28  Andrew Cagney  <cagney@@redhat.com>

	* PROBLEMS (Stack backtraces): Rewrite.  Remove reference to
	arm*-*-*.
@
text
@d7 8
@


1.27
log
@2004-03-26  David Carlton  <carlton@@kealia.com>

	* PROBLEMS: Refer to gdb/1588 instead of gdb/826.
@
text
@d73 7
d82 3
a84 2
When backtracing a thread, gdb doesn't stop until it hits garbage.
This is sensitive to the operating system and thread library.
d86 1
a87 2
powerpc*-*-*
sparc*-*-*
d89 8
a96 2
GDB's SPARC, MIPS and PowerPC targets, in 6.0, have not been updated
to use the new frame mechanism.
d98 1
a98 5
People encountering problems with these targets should consult GDB's
web pages and mailing lists (http://www.gnu.org/software/gdb/) to see
if there is an update.

arm-*-*
d100 1
a100 2
GDB's ARM target, in 6.0, has not been updated to use the new frame
mechanism.
d102 4
a105 3
Fortunately the ARM target, in the GDB's mainline sources, has been
updated so people encountering problems should consider downloading a
more current GDB (http://www.gnu.org/software/gdb/current).
@


1.26
log
@2004-03-25  Andrew Cagney  <cagney@@redhat.com>

	* PROBLEMS: Add general section titles, remove references to
	specific releases.
@
text
@a17 5
gdb/826: variables in C++ namespaces have to be enclosed in quotes

When referring to a variable in C++ code that is inside a
namespace, you have to put it inside single quotes.

d41 12
@


1.25
log
@2004-03-19  Andrew Cagney  <cagney@@redhat.com>

	* PROBLEMS: Delete note that ARM does not use frame code, problem
	fixed.
@
text
@a5 3
mips*-*-*
powerpc*-*-*
sparc*-*-*
d7 3
a9 2
GDB's SPARC, MIPS and PowerPC targets, in 6.0, have not been updated
to use the new frame mechanism.
d11 4
a14 3
People encountering problems with these targets should consult GDB's
web pages and mailing lists (http://www.gnu.org/software/gdb/) to see
if there is an update.
d16 1
a16 1
*** Regressions since gdb 6.0
a28 5
gdb/1505: [regression] gdb prints a bad backtrace for a thread

When backtracing a thread, gdb doesn't stop until it hits garbage.
This is sensitive to the operating system and thread library.

a46 9
gdb/1560: Control-C does not always interrupt GDB.

When GDB is busy processing a command which takes a long time to
complete, hitting Control-C does not have the expected effect.
The command execution is not aborted, and the "QUIT" message confirming
the abortion is displayed only after the command has been completed.

*** Regressions since gdb 5.3

d64 26
@


1.24
log
@2004-03-16  Michael Chastain  <mec.gnu@@mindspring.com>

	* PROBLEMS: Add section headers, "Regressions since gdb 6.0"
	and "Regressions since gdb 5.3.".  Add known regressions since
	gdb 6.0.
@
text
@a16 9
arm-*-*

GDB's ARM target, in 6.0, has not been updated to use the new frame
mechanism.

Fortunately the ARM target, in the GDB's mainline sources, has been
updated so people encountering problems should consider downloading a
more current GDB (http://www.gnu.org/software/gdb/current).

@


1.23
log
@2004-02-28  Andrew Cagney  <cagney@@redhat.com>

	* NEWS: Refer to GDB 6.1.
	* README: Refer to GDB 6.1.
	* PROBLEMS: Refer to GDB 6.1.

Index: doc/ChangeLog
2004-02-28  Andrew Cagney  <cagney@@redhat.com>

	* gdb.texinfo (Contributors): Mention GDB 6.1 release engineer.
@
text
@d26 24
d62 9
a87 5
gdb/1560: Control-C does not always interrupt GDB.
When GDB is busy processing a command which takes a long time to
complete, hitting Control-C does not have the expected effect.
The command execution is not aborted, and the "QUIT" message confirming
the abortion is displayed only after the command has been completed.
@


1.23.4.1
log
@Merge with mainline cagney_tramp-20040321-mergepoint.
@
text
@d17 1
a17 1
*** Regressions since gdb 6.0
d19 2
a20 1
gdb/826: variables in C++ namespaces have to be enclosed in quotes
d22 3
a24 19
When referring to a variable in C++ code that is inside a
namespace, you have to put it inside single quotes.

gdb/931: GDB could be more generous when reading types C++ templates on input

When the user types a template, GDB frequently requires the type to be
typed in a certain way (e.g. "const char*" as opposed to "const char *"
or "char const *" or "char const*").

gdb/1505: [regression] gdb prints a bad backtrace for a thread

When backtracing a thread, gdb doesn't stop until it hits garbage.
This is sensitive to the operating system and thread library.

gdb/1512: no canonical way to output names of C++ types

We currently don't have any canonical way to output names of C++ types.
E.g. "const char *" versus "char const *"; more subtleties arise when
dealing with templates.
a37 9
gdb/1560: Control-C does not always interrupt GDB.

When GDB is busy processing a command which takes a long time to
complete, hitting Control-C does not have the expected effect.
The command execution is not aborted, and the "QUIT" message confirming
the abortion is displayed only after the command has been completed.

*** Regressions since gdb 5.3

d55 5
@


1.23.2.1
log
@2004-03-16  Michael Chastain  <mec.gnu@@mindspring.com>

	* PROBLEMS: Add section headers, "Regressions since gdb 6.0"
	and "Regressions since gdb 5.3.".  Add known regressions since
	gdb 6.0.
@
text
@a25 24
*** Regressions since gdb 6.0

gdb/826: variables in C++ namespaces have to be enclosed in quotes

When referring to a variable in C++ code that is inside a
namespace, you have to put it inside single quotes.

gdb/931: GDB could be more generous when reading types C++ templates on input

When the user types a template, GDB frequently requires the type to be
typed in a certain way (e.g. "const char*" as opposed to "const char *"
or "char const *" or "char const*").

gdb/1505: [regression] gdb prints a bad backtrace for a thread

When backtracing a thread, gdb doesn't stop until it hits garbage.
This is sensitive to the operating system and thread library.

gdb/1512: no canonical way to output names of C++ types

We currently don't have any canonical way to output names of C++ types.
E.g. "const char *" versus "char const *"; more subtleties arise when
dealing with templates.

a37 9
gdb/1560: Control-C does not always interrupt GDB.

When GDB is busy processing a command which takes a long time to
complete, hitting Control-C does not have the expected effect.
The command execution is not aborted, and the "QUIT" message confirming
the abortion is displayed only after the command has been completed.

*** Regressions since gdb 5.3

d55 5
@


1.23.2.2
log
@2004-03-19  Andrew Cagney  <cagney@@redhat.com>

	* PROBLEMS: Delete note that ARM does not use frame code, problem
	fixed.
@
text
@d17 9
@


1.23.2.3
log
@2004-03-25  Andrew Cagney  <cagney@@redhat.com>

	* PROBLEMS: Add general section titles, remove references to
	specific releases.
@
text
@d6 3
d10 2
a11 1
*** Misc
d13 3
a15 1
gdb/1560: Control-C does not always interrupt GDB.
d17 1
a17 6
When GDB is busy processing a command which takes a long time to
complete, hitting Control-C does not have the expected effect.
The command execution is not aborted, and the "QUIT" message confirming
the abortion is displayed only after the command has been completed.

*** C++ support
d30 5
d53 9
a78 26
*** Stack backtraces

gdb/1505: [regression] gdb prints a bad backtrace for a thread

When backtracing a thread, gdb doesn't stop until it hits garbage.
This is sensitive to the operating system and thread library.

mips*-*-*
powerpc*-*-*
sparc*-*-*

GDB's SPARC, MIPS and PowerPC targets, in 6.0, have not been updated
to use the new frame mechanism.

People encountering problems with these targets should consult GDB's
web pages and mailing lists (http://www.gnu.org/software/gdb/) to see
if there is an update.

arm-*-*

GDB's ARM target, in 6.0, has not been updated to use the new frame
mechanism.

Fortunately the ARM target, in the GDB's mainline sources, has been
updated so people encountering problems should consider downloading a
more current GDB (http://www.gnu.org/software/gdb/current).
@


1.23.2.4
log
@2004-03-26  David Carlton  <carlton@@kealia.com>

	* PROBLEMS: Refer to gdb/1588 instead of gdb/826.
@
text
@d18 5
a45 12

gdb/1588: names of c++ nested types in casts must be enclosed in quotes

You must type
  (gdb) print ('Foo::Bar') x
or
  (gdb) print ('Foo::Bar' *) y
instead of
  (gdb) print (Foo::Bar) x
or
  (gdb) print (Foo::Bar *) y
respectively.
@


1.23.2.5
log
@2004-03-28  Andrew Cagney  <cagney@@redhat.com>

	* PROBLEMS (Stack backtraces): Rewrite.  Remove reference to
	arm*-*-*.
@
text
@a72 7
GDB's core code base has been updated to use a new backtrace
mechanism.  This mechanism makes it possible to support new features
such DWARF 2 Call Frame Information (which in turn makes possible
backtraces through optimized code).

Since this code is new, it is known to still have a few problems:

d75 2
a76 3
When backtracing a thread, gdb does not stop when it reaches the
outermost frame, instead continuing until it hits garbage.  This is
sensitive to the operating system and thread library.
a77 1
hppa*-*-*
d79 2
d82 2
a83 8
The MIPS and HPPA backtrace code has only very recently been updated
to use GDB's new frame mechanism.  At present there are still a few
problems, in particular backtraces through signal handlers do not
work.

People encountering problems with these architectures should consult
GDB's web pages and mailing lists (http://www.gnu.org/software/gdb/)
to see if there are updates.
d85 5
a89 1
powerpc*-*-*
d91 2
a92 1
PowerPC architecture support, in 6.1, does not use the new frame code.
d94 3
a96 4
Fortunately, PowerPC architecture support, in GDB's mainline sources,
have been updated.  People encountering problems should consider
downloading a more current snapshot of GDB
(http://www.gnu.org/software/gdb/current/).
@


1.23.2.6
log
@2004-04-03  Andrew Cagney  <cagney@@redhat.com>

	* PROBLEMS: Mention that GDB doesn't build on HP/UX 11.00.
@
text
@a6 8
*** Build problems

build/1458: comple failed on hpux11

GDB 6.1 is known to have build problems on HP/UX 11.00 using the
vendor supplied compilers (GDB does build on HP/UX 11.11, and using
GCC).

@


1.22
log
@       * PROBLEMS: Add description of problem documented under gdb/1560.
@
text
@d2 1
a2 1
			Known problems in GDB 6.0
@


1.22.2.1
log
@Merge mainline to intercu branch.
@
text
@d2 1
a2 1
			Known problems in GDB 6.1
d6 3
d10 2
a11 1
*** Misc
d13 3
a15 1
gdb/1560: Control-C does not always interrupt GDB.
d17 1
a17 4
When GDB is busy processing a command which takes a long time to
complete, hitting Control-C does not have the expected effect.
The command execution is not aborted, and the "QUIT" message confirming
the abortion is displayed only after the command has been completed.
d19 2
a20 1
*** C++ support
d22 3
a24 11
gdb/931: GDB could be more generous when reading types C++ templates on input

When the user types a template, GDB frequently requires the type to be
typed in a certain way (e.g. "const char*" as opposed to "const char *"
or "char const *" or "char const*").

gdb/1512: no canonical way to output names of C++ types

We currently don't have any canonical way to output names of C++ types.
E.g. "const char *" versus "char const *"; more subtleties arise when
dealing with templates.
a37 12
gdb/1588: names of c++ nested types in casts must be enclosed in quotes

You must type
  (gdb) print ('Foo::Bar') x
or
  (gdb) print ('Foo::Bar' *) y
instead of
  (gdb) print (Foo::Bar) x
or
  (gdb) print (Foo::Bar *) y
respectively.

d55 5
a59 26
*** Stack backtraces

gdb/1505: [regression] gdb prints a bad backtrace for a thread

When backtracing a thread, gdb doesn't stop until it hits garbage.
This is sensitive to the operating system and thread library.

mips*-*-*
powerpc*-*-*
sparc*-*-*

GDB's SPARC, MIPS and PowerPC targets, in 6.0, have not been updated
to use the new frame mechanism.

People encountering problems with these targets should consult GDB's
web pages and mailing lists (http://www.gnu.org/software/gdb/) to see
if there is an update.

arm-*-*

GDB's ARM target, in 6.0, has not been updated to use the new frame
mechanism.

Fortunately the ARM target, in the GDB's mainline sources, has been
updated so people encountering problems should consider downloading a
more current GDB (http://www.gnu.org/software/gdb/current).
@


1.22.2.2
log
@Merge GDB mainline of 20040402 to intercu branch.
@
text
@a72 7
GDB's core code base has been updated to use a new backtrace
mechanism.  This mechanism makes it possible to support new features
such DWARF 2 Call Frame Information (which in turn makes possible
backtraces through optimized code).

Since this code is new, it is known to still have a few problems:

d75 2
a76 3
When backtracing a thread, gdb does not stop when it reaches the
outermost frame, instead continuing until it hits garbage.  This is
sensitive to the operating system and thread library.
a77 1
hppa*-*-*
d79 2
d82 2
a83 8
The MIPS and HPPA backtrace code has only very recently been updated
to use GDB's new frame mechanism.  At present there are still a few
problems, in particular backtraces through signal handlers do not
work.

People encountering problems with these architectures should consult
GDB's web pages and mailing lists (http://www.gnu.org/software/gdb/)
to see if there are updates.
d85 5
a89 1
powerpc*-*-*
d91 2
a92 1
PowerPC architecture support, in 6.1, does not use the new frame code.
d94 3
a96 4
Fortunately, PowerPC architecture support, in GDB's mainline sources,
have been updated.  People encountering problems should consider
downloading a more current snapshot of GDB
(http://www.gnu.org/software/gdb/current/).
@


1.22.2.3
log
@Merge mainline to intercu branch - 2004-09-15
@
text
@d2 1
a2 1
			Known problems in GDB 6.2
a6 44
*** Build problems

build/1411: build fails on hpux 10.20 and hpux 11.00 with CMA threads

GDB does not build on HP/UX 10.20 or HP/UX 11.00 if the CMA
thread package is installed.  The compile error is:

  ../../gdb/hpux-thread.c:222: variable-size type declared outside of any function

This happens only if the CMA thread package is installed.

As a workaround, you can disable support for CMA threads
by editing the file gdb/configure.  Find the line:

  if test -f /usr/include/dce/cma_config.h ; then

And replace it with:

  if false ; then

build/1458: compile failed on hpux11

GDB has build problems on HP/UX 11 with some versions of the HP
Ansi C compiler.  (GCC works fine).

The problem happens when compiling intl/bindtextdom.c.
The error is:

  cc: "gettextP.h", line 50: error 1000: Unexpected symbol: "SWAP".
  cc: panic 2017: Cannot recover from earlier errors, terminating.
  *** Error exit code 1

This is a problem with the 'inline' keyword in gettextP.h.
The workaround is to disable 'inline' before building gdb:

  export ac_cv_c_inline=no

This problem happens only with some versions of the HP Ansi C compiler.
Versions A.11.01.25171.GP and B.11.11.28706.GP have both been observed
to work; version B.11.11.04 gets the build error and needs the
workaround.

This problem might also happen with other C compilers.

a70 13
*** Signal handlers

On many systems an attempt to single-step a system-call instruction
results in two or more instructions being executed (the system-call,
and one or more instructions following).

When attempting to single-step through a signal trampoline, this
problem may result the program unintentionally running to completion,
or re-execute the faulting instruction, or even corrupting the program
counter.

Ref: PR breakpoints/1702.

d86 2
a87 7
*** Threads

threads/1650: manythreads.exp

On GNU/Linux systems that use the old LinuxThreads thread library, a
program rapidly creating and deleting threads can confuse GDB leading
to an internal error.
d89 17
a105 2
This problem does not occur on newer systems that use the NPTL
library, and did not occur with GDB 6.1.
@


1.21
log
@2004-01-27  Michael Chastain  <mec.gnu@@mindspring.com>

	* PROBLEMS: add gdb/1516.
@
text
@d54 6
@


1.20
log
@Index: mi/ChangeLog
2003-10-24  Andrew Cagney  <cagney@@redhat.com>

	* tui-out.c: Fix "fortunatly"[sic].

Index: doc/ChangeLog
2003-10-24  Andrew Cagney  <cagney@@redhat.com>

	* annotate.texinfo: Fix "fortunatly"[sic].

2003-10-24  Andrew Cagney  <cagney@@redhat.com>

	* osabi.c (gdbarch_init_osabi): Fix typos, and "fortunatly"[sic].
	* PROBLEMS, arch-utils.c, cli-out.c, command.h: Ditto.
	* complaints.c, cris-tdep.c, disasm.c, dwarf2-frame.c: Ditto.
	* frame.c, frame.h, infcall.c, infcmd.c, infrun.c: Ditto.
	* kod.c, mips-tdep.c, regcache.c, regcache.h, remote.c: Ditto.
@
text
@d26 12
@


1.19
log
@2003-09-25  Andrew Cagney  <cagney@@redhat.com>

	* NEWS: Mention the new backtrace mechanism, DWARF 2 CFI, hosted
	file I/O, multi-arch, TLS and NPTL, DWARF 2 Location Expressions,
	and Java.
	* PROBLEMS: Mention that mips*-*-*, powerpc*-*-*, sparc*-*-* and
	arm*-*-* do not use the new frame code.
@
text
@d22 1
a22 1
Fortunatly the ARM target, in the GDB's mainline sources, has been
@


1.18
log
@	* PROBLEMS: Remove description of java/1322.
@
text
@d6 20
@


1.17
log
@2003-08-18  Michael Chastain  <mec@@shout.net>

	* PROBLEMS: Document pr gdb/1322, the Java anonymous
	objfile bug.
@
text
@a21 14

gdb/1322: "internal-error: sect_index_text not initialized" after printing a java type

When gdb debugs a Java program which uses shared libraries, it can
generate this internal error.

If you get this error when debugging Java, you can try working around
the problem by relinking your program with no shared libraries at all
(even the standard C library).  With the GNU linker, use the "-static"
argument to do this.

You can also try this patch for gdb:

  http://sources.redhat.com/ml/gdb-prs/2003-q3/msg00190.html
@


1.16
log
@2003-06-24  Michael Chastain  <mec@@shout.net>

	* PROBLEMS: Document pr gdb/1091 and pr gdb/1193,
	the "constructor breakpoints ignored" bug.
@
text
@d22 14
@


1.15
log
@2003-06-22  Andrew Cagney  <cagney@@redhat.com>

	GDB 6.0 branch created.
	* README: Update.
	* PROBLEMS: Update.  Empty.
	* NEWS: Update.

Index: doc/ChangeLog
2003-06-22  Andrew Cagney  <cagney@@redhat.com>

	* gdb.texinfo (Contributors): Mention 6.0 release engineer.
@
text
@d6 2
d9 13
@


1.14
log
@2003-02-26  Michael Chastain  <mec@@shout.net>

	Close PR build/660.
	* PROBLEMS (i[3456]86-*-linux*): Note explicit error message
	for old libc5/glibc.
	* gdb_thread_db.h: Die if not HAVE_UINTPTR_T.
@
text
@d2 1
a2 1
			Known problems in GDB 5.3
a6 74
*-*-freebsd*
---------------

Due to a kernel bug (kern/35175), detaching from an attached process
will very likely cause the process to be stop or die with a Trace/BPT
trap.


i386-*-freebsd[34]*
-------------------

There is a bug (bin/41671) in FreeBSD's gcc that causes it to emit bad
debug information when using the stabs format (which is the default).
As a result GDB tends to place breakpoints on functions before the
function prologue, and information about function parameters and local
variables is lost.  In earlier versions of GDB the effects were rather
limited, but starting with GDB 5.3 the influence is much more
prominent.  As a workaround, compile your code with -gdwarf-2.


hppa2.0-hp-hpux10.20
--------------------

gdb/487: The top level make files used to build GDB are not compatible
with HP/UX make.  As a workaround, use GNU make.

gdb/486: The HP/UX C compiler defaults to K&R mode but GDB only builds
with an ISO C compiler.  The top level configuration incorrectly sets
CC to `cc' instead of `cc -Ae'.  As a workaround, the correct compiler
can be specified as part of the configuration vis:

    $  'CC=cc -Ae' ./configure


s390*-*-*
---------

gdb/513: GDB does not build on s390 GNU/Linux.  The problem should be
fixed in more recent sources.


i386-*-freebsd4.4*
------------------

gdb/455: GDB doesn't build on a FreeBSD 4.4-STABLE system.  The
problem is still being investigated.

alpha*-*-osf*
-------------

gdb/816: When building GDB with GCC 3.0.1, GDB is unable to load a core
file properly. It generates several errors and warnings regarding
unhandled core file section types, incorrect endianness, the failure to
load the registers. Are also incorrectly reported: The program name, the
cause of the program death, and the call stack at the moment of the
death. This problem has been reported on alpha-osf4.0f and alpha-osf5.1a.
To work-around the problem, add -D__digital__ to the CFLAGS when
building GDB vis:

    $ make CFLAGS='-O2 -D__digital__'


i[3456]86-*-linux*
------------------

gdb/660: gdb does not build with GNU/Linux libc5.  The symptom is a
parse error before `uintptr_t' or an error message about `uintptr_t'.
Upgrade to glibc 2.1.3 or later, which defines uintptr_t.

gdb/1030: GNU binutils 2.12.1 and earlier versions do not work properly
with gdb.  If you use GNU binutils, upgrade to version 2.13 or later.
You can check the version of binutils with the command:

    $ ld --version
@


1.14.30.1
log
@2003-06-22  Andrew Cagney  <cagney@@redhat.com>

	GDB 6.0 branch created.
	* README: Update.
	* PROBLEMS: Update.  Empty.
	* NEWS: Update.

Index: doc/ChangeLog
2003-06-22  Andrew Cagney  <cagney@@redhat.com>

	* gdb.texinfo (Contributors): Mention 6.0 release engineer.
@
text
@d2 1
a2 1
			Known problems in GDB 6.0
d7 74
@


1.14.30.2
log
@2003-06-24  Michael Chastain  <mec@@shout.net>

	* PROBLEMS: Document pr gdb/1091 and pr gdb/1193,
	the "constructor breakpoints ignored" bug.
@
text
@a5 2
gdb/1091: Constructor breakpoints ignored
gdb/1193: g++ 3.3 creates multiple constructors: gdb 5.3 can't set breakpoints
a6 13
When gcc 3.x compiles a C++ constructor or C++ destructor, it generates
2 or 3 different versions of the object code.  These versions have
unique mangled names (they have to, in order for linking to work), but
they have identical source code names, which leads to a great deal of
confusion.  Specifically, if you set a breakpoint in a constructor or a
destructor, gdb will put a breakpoint in one of the versions, but your
program may execute the other version.  This makes it impossible to set
breakpoints reliably in constructors or destructors.

gcc 3.x generates these multiple object code functions in order to
implement virtual base classes.  gcc 2.x generated just one object code
function with a hidden parameter, but gcc 3.x conforms to a multi-vendor
ABI for C++ which requires multiple object code functions.
@


1.14.30.3
log
@2003-08-18  Michael Chastain  <mec@@shout.net>

	* PROBLEMS: Document pr gdb/1322, the Java anonymous
	objfile bug.
@
text
@a21 14

gdb/1322: "internal-error: sect_index_text not initialized" after printing a java type

When gdb debugs a Java program which uses shared libraries, it can
generate this internal error.

If you get this error when debugging Java, you can try working around
the problem by relinking your program with no shared libraries at all
(even the standard C library).  With the GNU linker, use the "-static"
argument to do this.

You can also try this patch for gdb:

  http://sources.redhat.com/ml/gdb-prs/2003-q3/msg00190.html
@


1.14.30.4
log
@	2003-08-25  Daniel Jacobowitz  <drow@@mvista.com>

	PR java/1322
	* dwarf2-frame.c (dwarf2_frame_find_fde): Check whether any FDEs are
	available before calling SECT_OFF_TEXT.
	* PROBLEMS: Remove description of java/1322.
@
text
@d22 14
@


1.14.30.5
log
@2003-09-25  Andrew Cagney  <cagney@@redhat.com>

	* NEWS: Mention the new backtrace mechanism, DWARF 2 CFI, hosted
	file I/O, multi-arch, TLS and NPTL, DWARF 2 Location Expressions,
	and Java.
	* PROBLEMS: Mention that mips*-*-*, powerpc*-*-*, sparc*-*-* and
	arm*-*-* do not use the new frame code.
@
text
@a5 20
mips*-*-*
powerpc*-*-*
sparc*-*-*

GDB's SPARC, MIPS and PowerPC targets, in 6.0, have not been updated
to use the new frame mechanism.

People encountering problems with these targets should consult GDB's
web pages and mailing lists (http://www.gnu.org/software/gdb/) to see
if there is an update.

arm-*-*

GDB's ARM target, in 6.0, has not been updated to use the new frame
mechanism.

Fortunatly the ARM target, in the GDB's mainline sources, has been
updated so people encountering problems should consider downloading a
more current GDB (http://www.gnu.org/software/gdb/current).

@


1.13
log
@2003-02-25  Michael Chastain  <mec@@shout.net>

	* PROBLEMS (i[3456]86-*-linux*): Require glibc 2.1.3 or later
	to avoid uintptr_t definition problems.
@
text
@d72 3
a74 3
gdb/660: gdb does not build with linux libc5.  The symptom is a parse
error before `uintptr_t'.  Upgrade to glibc 2.1.3 or later, which
defines uintptr_t.
@


1.12
log
@2003-02-05  Michael Chastain  <mec@@shout.net>

	* PROBLEMS (i[3456]86-*-linux*): Warn about binutils
	2.12.1 and earlier versions.
@
text
@d72 4
@


1.11
log
@2002-12-10  Andrew Cagney  <ac131313@@redhat.com>

	* PROBLEMS: Delete reference to PR gdb/725.
@
text
@d68 9
@


1.10
log
@2002-12-03  Andrew Cagney  <cagney@@redhat.com>

	* PROBLEMS: Mention PR gdb/725.
@
text
@a67 10

*-*-linux*-gnu*
---------------

gdb/725: Crash using debug target and regcaches (in 5.3 branch?)]].
When debugging a threaded application, the maintainer command `(gdb)
set debug target 1' causes GDB to to into an infinite loop.  To
work-around this problem, avoid using the maintainer command `(gdb)
set debug target 1' when debugging a threaded application.

@


1.9
log
@        * PROBLEMS: Document gdb/816 (unable to read core file on alpha-osf).
@
text
@d68 10
@


1.8
log
@* PROBLEMS: Clarify problems with FreeBSD's compiler and suggest
workaround.
@
text
@d53 15
@


1.8.8.1
log
@Merge drow-cplus-branch to:
  cvs rtag -D 2003-12-14 00:00:00 UTC drow-cplus-merge-20031214 gdb+dejagnu
@
text
@d2 1
a2 1
			Known problems in GDB 6.0
d6 47
a52 36
mips*-*-*
powerpc*-*-*
sparc*-*-*

GDB's SPARC, MIPS and PowerPC targets, in 6.0, have not been updated
to use the new frame mechanism.

People encountering problems with these targets should consult GDB's
web pages and mailing lists (http://www.gnu.org/software/gdb/) to see
if there is an update.

arm-*-*

GDB's ARM target, in 6.0, has not been updated to use the new frame
mechanism.

Fortunately the ARM target, in the GDB's mainline sources, has been
updated so people encountering problems should consider downloading a
more current GDB (http://www.gnu.org/software/gdb/current).

gdb/1091: Constructor breakpoints ignored
gdb/1193: g++ 3.3 creates multiple constructors: gdb 5.3 can't set breakpoints

When gcc 3.x compiles a C++ constructor or C++ destructor, it generates
2 or 3 different versions of the object code.  These versions have
unique mangled names (they have to, in order for linking to work), but
they have identical source code names, which leads to a great deal of
confusion.  Specifically, if you set a breakpoint in a constructor or a
destructor, gdb will put a breakpoint in one of the versions, but your
program may execute the other version.  This makes it impossible to set
breakpoints reliably in constructors or destructors.

gcc 3.x generates these multiple object code functions in order to
implement virtual base classes.  gcc 2.x generated just one object code
function with a hidden parameter, but gcc 3.x conforms to a multi-vendor
ABI for C++ which requires multiple object code functions.
@


1.8.8.2
log
@Merge drow-cplus-merge-20040208 to drow-cplus-branch.
@
text
@a25 12
gdb/1516: [regression] local classes, gcc 2.95.3, dwarf-2

With gcc 2.95.3 and the dwarf-2 debugging format, classes which are
defined locally to a function include the demangled name of the function
as part of their name.  For example, if a function "foobar" contains a
local class definition "Local", gdb will say that the name of the class
type is "foobar__Fi.0:Local".

This applies only to classes where the class type is defined inside a
function, not to variables defined with types that are defined somewhere
outside any function (which most types are).

@


1.8.6.1
log
@2002-11-15  David Carlton  <carlton@@math.stanford.edu>

	* Merge from mainline; tag is carlton_dictionary-20021115-merge.
@
text
@a52 15

alpha*-*-osf*
-------------

gdb/816: When building GDB with GCC 3.0.1, GDB is unable to load a core
file properly. It generates several errors and warnings regarding
unhandled core file section types, incorrect endianness, the failure to
load the registers. Are also incorrectly reported: The program name, the
cause of the program death, and the call stack at the moment of the
death. This problem has been reported on alpha-osf4.0f and alpha-osf5.1a.
To work-around the problem, add -D__digital__ to the CFLAGS when
building GDB vis:

    $ make CFLAGS='-O2 -D__digital__'

@


1.8.6.2
log
@2003-02-07  David Carlton  <carlton@@math.stanford.edu>

	* Merge with mainline; tag is carlton_dictionary-20030207-merge.
@
text
@a67 9

i[3456]86-*-linux*
------------------

gdb/1030: GNU binutils 2.12.1 and earlier versions do not work properly
with gdb.  If you use GNU binutils, upgrade to version 2.13 or later.
You can check the version of binutils with the command:

    $ ld --version
@


1.8.6.3
log
@2003-03-05  David Carlton  <carlton@@math.stanford.edu>

	* Merge with mainline.  Tag is carlton_dictionary-20030305-merge.
@
text
@a71 4
gdb/660: gdb does not build with GNU/Linux libc5.  The symptom is a
parse error before `uintptr_t' or an error message about `uintptr_t'.
Upgrade to glibc 2.1.3 or later, which defines uintptr_t.

@


1.8.6.4
log
@2003-06-27  David Carlton  <carlton@@kealia.com>

	* Merge with mainline; tag is carlton_dictionary-20030627-merge.
@
text
@d2 1
a2 1
			Known problems in GDB 6.0
a5 2
gdb/1091: Constructor breakpoints ignored
gdb/1193: g++ 3.3 creates multiple constructors: gdb 5.3 can't set breakpoints
d7 74
a80 13
When gcc 3.x compiles a C++ constructor or C++ destructor, it generates
2 or 3 different versions of the object code.  These versions have
unique mangled names (they have to, in order for linking to work), but
they have identical source code names, which leads to a great deal of
confusion.  Specifically, if you set a breakpoint in a constructor or a
destructor, gdb will put a breakpoint in one of the versions, but your
program may execute the other version.  This makes it impossible to set
breakpoints reliably in constructors or destructors.

gcc 3.x generates these multiple object code functions in order to
implement virtual base classes.  gcc 2.x generated just one object code
function with a hidden parameter, but gcc 3.x conforms to a multi-vendor
ABI for C++ which requires multiple object code functions.
@


1.8.6.5
log
@2003-11-11  David Carlton  <carlton@@kealia.com>

	* Merge with mainline; tag is carlton-dictionary-20031111-merge.
@
text
@a5 20
mips*-*-*
powerpc*-*-*
sparc*-*-*

GDB's SPARC, MIPS and PowerPC targets, in 6.0, have not been updated
to use the new frame mechanism.

People encountering problems with these targets should consult GDB's
web pages and mailing lists (http://www.gnu.org/software/gdb/) to see
if there is an update.

arm-*-*

GDB's ARM target, in 6.0, has not been updated to use the new frame
mechanism.

Fortunately the ARM target, in the GDB's mainline sources, has been
updated so people encountering problems should consider downloading a
more current GDB (http://www.gnu.org/software/gdb/current).

@


1.8.4.1
log
@       * PROBLEMS: Document gdb/816 (unable to read core file on alpha-osf).
@
text
@a52 15

alpha*-*-osf*
-------------

gdb/816: When building GDB with GCC 3.0.1, GDB is unable to load a core
file properly. It generates several errors and warnings regarding
unhandled core file section types, incorrect endianness, the failure to
load the registers. Are also incorrectly reported: The program name, the
cause of the program death, and the call stack at the moment of the
death. This problem has been reported on alpha-osf4.0f and alpha-osf5.1a.
To work-around the problem, add -D__digital__ to the CFLAGS when
building GDB vis:

    $ make CFLAGS='-O2 -D__digital__'

@


1.8.4.2
log
@2002-12-03  Andrew Cagney  <cagney@@redhat.com>

	* PROBLEMS: Mention PR gdb/725.
@
text
@a67 10

*-*-linux*-gnu*
---------------

gdb/725: Crash using debug target and regcaches (in 5.3 branch?)]].
When debugging a threaded application, the maintainer command `(gdb)
set debug target 1' causes GDB to to into an infinite loop.  To
work-around this problem, avoid using the maintainer command `(gdb)
set debug target 1' when debugging a threaded application.

@


1.8.4.3
log
@2002-12-10  Andrew Cagney  <ac131313@@redhat.com>

	* PROBLEMS: Delete reference to PR gdb/725.
@
text
@d68 10
@


1.7
log
@* PROBLEMS: Refer to GDB 5.3 instead of 5.2.  Mention FreeBSD
problems.
@
text
@d20 5
a24 2
In earlier versions of GDB the effects were rather limited, but
starting with GDB 5.3 the influence is much more prominent.
@


1.6
log
@* PROBLEMS: Mention s390 and FreeBSD 4.4 build problems.
@
text
@d2 1
a2 1
			Known problems in GDB 5.2
d5 17
@


1.6.2.1
log
@Merge with kseitz_interps-20020829-merge tag from trunk.
@
text
@d2 1
a2 1
			Known problems in GDB 5.3
a4 20


*-*-freebsd*
---------------

Due to a kernel bug (kern/35175), detaching from an attached process
will very likely cause the process to be stop or die with a Trace/BPT
trap.


i386-*-freebsd[34]*
-------------------

There is a bug (bin/41671) in FreeBSD's gcc that causes it to emit bad
debug information when using the stabs format (which is the default).
As a result GDB tends to place breakpoints on functions before the
function prologue, and information about function parameters and local
variables is lost.  In earlier versions of GDB the effects were rather
limited, but starting with GDB 5.3 the influence is much more
prominent.  As a workaround, compile your code with -gdwarf-2.
@


1.5
log
@* PROBLEMS: Mention hppa2.0-hp-hpux10.20 compile problems.
@
text
@d21 12
@


1.5.4.1
log
@merge from trunk
@
text
@a20 12
s390*-*-*
---------

gdb/513: GDB does not build on s390 GNU/Linux.  The problem should be
fixed in more recent sources.


i386-*-freebsd4.4*
------------------

gdb/455: GDB doesn't build on a FreeBSD 4.4-STABLE system.  The
problem is still being investigated.
@


1.4
log
@Fix tipo.
@
text
@a0 1
		Known problems in GDB 5.1.1
d2 1
d4 1
a4 9
See also the bug database http://www.gnu.org/software/gdb/bugs/


Contrary to the GDB 5.1.1 announcement, the update did not contain
fixes to a i386 floating point problem.  The latest sources do contain
the fix and it will be included in GDB 5.2.


		Known problems in GDB 5.1
d8 1
d10 2
a11 34
Due to a problem (conflicting types) with libiberty/regex.c, GDB 5.1
does not build on HP/UX 10.20 when using the HP supplied compiler.

Due to bit rot, GDB 5.1 does not work on HP/UX 10.20 when built with
GCC.


hppa2.0w-hp-hpux11.00

Due to a problem with ltconfig and long argument lines, GDB 5.1 does
not configure on HP/UX 11.00.


alpha-dec-osf5.1

GDB 5.1 has a number of problems on this platform (Ref PR gdb/237).  A
GDB 5.1 built with ``CC="cc -DUSE_LDR_ROUTINES"'' is reported to work
much better.


alpha-dec-osf4.0e

GDB 5.1 is known to have problems on this platform (encounters an
internal error in the symbol table reader).


sparcv9-sun-solaris2.8

There are known problems with building GDB 5.1 using GCC 3.0.x for the
64 bit SPARC target (bad code gen).  You could try a development
version of GCC.


i586-sco-sysv5uw7.1.1
d13 4
a16 2
There are known problems with GDB 5.1's thread support on this
platform.  Non-threaded programs should work.
d18 1
a19 1
*-*-*
a20 2
GDB 5.1 assumes that the host C compiler implemends alloca().  GCC is
one such compiler.  This problem should be fixed on the trunk.
@


1.4.2.1
log
@* PROBLEMS: Mention hppa2.0-hp-hpux10.20 compile problems.
@
text
@d1 1
a2 1
			Known problems in GDB 5.2
d4 9
a12 1
		See also: http://www.gnu.org/software/gdb/bugs/
a15 1
--------------------
d17 34
a50 2
gdb/487: The top level make files used to build GDB are not compatible
with HP/UX make.  As a workaround, use GNU make.
d52 2
a53 4
gdb/486: The HP/UX C compiler defaults to K&R mode but GDB only builds
with an ISO C compiler.  The top level configuration incorrectly sets
CC to `cc' instead of `cc -Ae'.  As a workaround, the correct compiler
can be specified as part of the configuration vis:
a54 1
    $  'CC=cc -Ae' ./configure
d56 1
d58 2
@


1.4.2.2
log
@* PROBLEMS: Mention s390 and FreeBSD 4.4 build problems.
@
text
@a20 12
s390*-*-*
---------

gdb/513: GDB does not build on s390 GNU/Linux.  The problem should be
fixed in more recent sources.


i386-*-freebsd4.4*
------------------

gdb/455: GDB doesn't build on a FreeBSD 4.4-STABLE system.  The
problem is still being investigated.
@


1.3
log
@Mention i386 FP problem.
@
text
@d7 3
a9 3
Contrary to the GDB 5.1 announcement, the update did not contain fixes
to a i386 floating point problem.  The latest sources do contain the
fix and it will be included in GDB 5.2.
@


1.2
log
@PROBLEMS.
@
text
@d1 14
@


1.1
log
@file PROBLEMS was initially added on branch gdb_5_1-2001-07-29-branch.
@
text
@d1 45
@


1.1.2.1
log
@New FILE - problems.
@
text
@a0 45
hppa2.0-hp-hpux10.20

Due to a problem (conflicting types) with libiberty/regex.c, GDB 5.1
does not build on HP/UX 10.20 when using the HP supplied compiler.

Due to bit rot, GDB 5.1 does not work on HP/UX 10.20 when built with
GCC.


hppa2.0w-hp-hpux11.00

Due to a problem with ltconfig and long argument lines, GDB 5.1 does
not configure on HP/UX 11.00.


alpha-dec-osf5.1

GDB 5.1 has a number of problems on this platform (Ref PR gdb/237).  A
GDB 5.1 built with ``CC="cc -DUSE_LDR_ROUTINES"'' is reported to work
much better.


alpha-dec-osf4.0e

GDB 5.1 is known to have problems on this platform (encounters an
internal error in the symbol table reader).


sparcv9-sun-solaris2.8

There are known problems with building GDB 5.1 using GCC 3.0.x for the
64 bit SPARC target (bad code gen).  You could try a development
version of GCC.


i586-sco-sysv5uw7.1.1

There are known problems with GDB 5.1's thread support on this
platform.  Non-threaded programs should work.


*-*-*

GDB 5.1 assumes that the host C compiler implemends alloca().  GCC is
one such compiler.  This problem should be fixed on the trunk.
@


1.1.2.2
log
@Add heading.  The real purpose is to test the web page pointing at
this file.
@
text
@a0 6

		Known problems in GDB 5.1

See also the bug database http://www.gnu.org/software/gdb/bugs/


@


1.1.2.3
log
@Mention i386 FP problem.
@
text
@d1 2
a2 1
		Known problems in GDB 5.1.1
a5 7

Contrary to the GDB 5.1 announcement, the update did not contain fixes
to a i386 floating point problem.  The latest sources do contain the
fix and it will be included in GDB 5.2.


		Known problems in GDB 5.1
@


1.1.2.4
log
@Fix tipo.
@
text
@d6 3
a8 3
Contrary to the GDB 5.1.1 announcement, the update did not contain
fixes to a i386 floating point problem.  The latest sources do contain
the fix and it will be included in GDB 5.2.
@


