head	1.81;
access;
symbols
	drow-reverse-20070409-branch:1.79.0.2
	drow-reverse-20070409-branchpoint:1.79
	gdb_6_7_1-2007-10-29-release:1.80
	gdb_6_7-2007-10-10-release:1.80
	gdb_6_7-branch:1.80.0.2
	gdb_6_7-2007-09-07-branchpoint:1.80
	insight_6_6-20070208-release:1.78
	gdb_6_6-2006-12-18-release:1.78
	gdb_6_6-branch:1.78.0.30
	gdb_6_6-2006-11-15-branchpoint:1.78
	insight_6_5-20061003-release:1.78
	gdb-csl-symbian-6_4_50_20060226-12:1.78
	gdb-csl-sourcerygxx-3_4_4-25:1.78
	nickrob-async-20060828-mergepoint:1.78
	gdb-csl-symbian-6_4_50_20060226-11:1.78
	gdb-csl-sourcerygxx-4_1-17:1.78
	gdb-csl-20060226-branch-local-2:1.78
	gdb-csl-sourcerygxx-4_1-14:1.78
	gdb-csl-sourcerygxx-4_1-13:1.78
	gdb-csl-sourcerygxx-4_1-12:1.78
	gdb-csl-sourcerygxx-3_4_4-21:1.78
	gdb_6_5-20060621-release:1.78
	gdb-csl-sourcerygxx-4_1-9:1.78
	gdb-csl-sourcerygxx-4_1-8:1.78
	gdb-csl-sourcerygxx-4_1-7:1.78
	gdb-csl-arm-2006q1-6:1.78
	gdb-csl-sourcerygxx-4_1-6:1.78
	gdb-csl-symbian-6_4_50_20060226-10:1.78
	gdb-csl-symbian-6_4_50_20060226-9:1.78
	gdb-csl-symbian-6_4_50_20060226-8:1.78
	gdb-csl-coldfire-4_1-11:1.78
	gdb-csl-sourcerygxx-3_4_4-19:1.78
	gdb-csl-coldfire-4_1-10:1.78
	gdb_6_5-branch:1.78.0.28
	gdb_6_5-2006-05-14-branchpoint:1.78
	gdb-csl-sourcerygxx-4_1-5:1.78
	nickrob-async-20060513-branch:1.78.0.26
	nickrob-async-20060513-branchpoint:1.78
	gdb-csl-sourcerygxx-4_1-4:1.78
	msnyder-reverse-20060502-branch:1.78.0.24
	msnyder-reverse-20060502-branchpoint:1.78
	gdb-csl-morpho-4_1-4:1.78
	gdb-csl-sourcerygxx-3_4_4-17:1.78
	readline_5_1-import-branch:1.78.0.22
	readline_5_1-import-branchpoint:1.78
	gdb-csl-20060226-branch-merge-to-csl-symbian-1:1.78
	gdb-csl-symbian-20060226-branch:1.78.0.20
	gdb-csl-symbian-20060226-branchpoint:1.78
	gdb-csl-20060226-branch-merge-to-csl-local-1:1.78
	msnyder-reverse-20060331-branch:1.78.0.18
	msnyder-reverse-20060331-branchpoint:1.78
	gdb-csl-available-20060303-branch:1.78.0.16
	gdb-csl-available-20060303-branchpoint:1.78
	gdb-csl-20060226-branch:1.78.0.14
	gdb-csl-20060226-branchpoint:1.78
	gdb_6_4-20051202-release:1.78
	msnyder-fork-checkpoint-branch:1.78.0.12
	msnyder-fork-checkpoint-branchpoint:1.78
	gdb-csl-gxxpro-6_3-branch:1.78.0.10
	gdb-csl-gxxpro-6_3-branchpoint:1.78
	gdb_6_4-branch:1.78.0.8
	gdb_6_4-2005-11-01-branchpoint:1.78
	gdb-csl-arm-20051020-branch:1.78.0.6
	gdb-csl-arm-20051020-branchpoint:1.78
	msnyder-tracepoint-checkpoint-branch:1.78.0.4
	msnyder-tracepoint-checkpoint-branchpoint:1.78
	gdb-csl-arm-20050325-2005-q1b:1.78
	gdb-csl-arm-20050325-2005-q1a:1.78
	csl-arm-20050325-branch:1.78.0.2
	csl-arm-20050325-branchpoint:1.78
	gdb-post-i18n-errorwarning-20050211:1.78
	gdb-pre-i18n-errorwarning-20050211:1.78
	gdb_6_3-20041109-release:1.75
	gdb_6_3-branch:1.75.0.2
	gdb_6_3-20041019-branchpoint:1.75
	drow_intercu-merge-20040921:1.75
	drow_intercu-merge-20040915:1.75
	jimb-gdb_6_2-e500-branch:1.74.0.6
	jimb-gdb_6_2-e500-branchpoint:1.74
	gdb_6_2-20040730-release:1.74
	gdb_6_2-branch:1.74.0.2
	gdb_6_2-2004-07-10-gmt-branchpoint:1.74
	gdb_6_1_1-20040616-release:1.63
	gdb_6_1-2004-04-05-release:1.63
	drow_intercu-merge-20040402:1.67
	drow_intercu-merge-20040327:1.67
	ezannoni_pie-20040323-branch:1.67.0.2
	ezannoni_pie-20040323-branchpoint:1.67
	cagney_tramp-20040321-mergepoint:1.67
	cagney_tramp-20040309-branch:1.66.0.2
	cagney_tramp-20040309-branchpoint:1.66
	gdb_6_1-branch:1.63.0.2
	gdb_6_1-2004-03-01-gmt-branchpoint:1.63
	drow_intercu-20040221-branch:1.61.0.6
	drow_intercu-20040221-branchpoint:1.61
	cagney_bfdfile-20040213-branch:1.61.0.4
	cagney_bfdfile-20040213-branchpoint:1.61
	drow-cplus-merge-20040208:1.61
	carlton_dictionary-20040126-merge:1.61
	cagney_bigcore-20040122-branch:1.61.0.2
	cagney_bigcore-20040122-branchpoint:1.61
	drow-cplus-merge-20040113:1.61
	drow-cplus-merge-20031224:1.61
	drow-cplus-merge-20031220:1.61
	carlton_dictionary-20031215-merge:1.61
	drow-cplus-merge-20031214:1.61
	carlton-dictionary-20031111-merge:1.60
	gdb_6_0-2003-10-04-release:1.53.4.1
	kettenis_sparc-20030918-branch:1.56.0.4
	kettenis_sparc-20030918-branchpoint:1.56
	carlton_dictionary-20030917-merge:1.56
	ezannoni_pie-20030916-branchpoint:1.56
	ezannoni_pie-20030916-branch:1.56.0.2
	cagney_x86i386-20030821-branch:1.55.0.2
	cagney_x86i386-20030821-branchpoint:1.55
	carlton_dictionary-20030805-merge:1.55
	carlton_dictionary-20030627-merge:1.53
	gdb_6_0-branch:1.53.0.4
	gdb_6_0-2003-06-23-branchpoint:1.53
	jimb-ppc64-linux-20030613-branch:1.53.0.2
	jimb-ppc64-linux-20030613-branchpoint:1.53
	cagney_convert-20030606-branch:1.52.0.2
	cagney_convert-20030606-branchpoint:1.52
	cagney_writestrings-20030508-branch:1.50.0.4
	cagney_writestrings-20030508-branchpoint:1.50
	jimb-ppc64-linux-20030528-branch:1.51.0.4
	jimb-ppc64-linux-20030528-branchpoint:1.51
	carlton_dictionary-20030523-merge:1.51
	cagney_fileio-20030521-branch:1.51.0.2
	cagney_fileio-20030521-branchpoint:1.51
	kettenis_i386newframe-20030517-mergepoint:1.51
	jimb-ppc64-linux-20030509-branch:1.50.0.2
	jimb-ppc64-linux-20030509-branchpoint:1.50
	kettenis_i386newframe-20030504-mergepoint:1.49
	carlton_dictionary-20030430-merge:1.49
	kettenis_i386newframe-20030419-branch:1.44.0.2
	kettenis_i386newframe-20030419-branchpoint:1.44
	carlton_dictionary-20030416-merge:1.44
	cagney_frameaddr-20030409-mergepoint:1.43
	kettenis_i386newframe-20030406-branch:1.43.0.2
	kettenis_i386newframe-20030406-branchpoint:1.43
	cagney_frameaddr-20030403-branchpoint:1.42
	cagney_frameaddr-20030403-branch:1.42.0.2
	cagney_framebase-20030330-mergepoint:1.42
	cagney_framebase-20030326-branch:1.40.0.2
	cagney_framebase-20030326-branchpoint:1.40
	cagney_lazyid-20030317-branch:1.36.0.2
	cagney_lazyid-20030317-branchpoint:1.36
	kettenis-i386newframe-20030316-mergepoint:1.36
	offbyone-20030313-branch:1.35.0.2
	offbyone-20030313-branchpoint:1.35
	kettenis-i386newframe-20030308-branch:1.34.0.4
	kettenis-i386newframe-20030308-branchpoint:1.34
	carlton_dictionary-20030305-merge:1.34
	cagney_offbyone-20030303-branch:1.34.0.2
	cagney_offbyone-20030303-branchpoint:1.34
	carlton_dictionary-20030207-merge:1.31
	interps-20030203-mergepoint:1.31
	interps-20030202-branch:1.31.0.2
	interps-20030202-branchpoint:1.31
	cagney-unwind-20030108-branch:1.29.0.2
	cagney-unwind-20030108-branchpoint:1.29
	carlton_dictionary-20021223-merge:1.26
	gdb_5_3-2002-12-12-release:1.18
	carlton_dictionary-20021115-merge:1.21
	kseitz_interps-20021105-merge:1.19
	kseitz_interps-20021103-merge:1.19
	drow-cplus-merge-20021020:1.18
	drow-cplus-merge-20021025:1.18
	carlton_dictionary-20021025-merge:1.18
	carlton_dictionary-20021011-merge:1.18
	drow-cplus-branch:1.18.0.10
	drow-cplus-branchpoint:1.18
	kseitz_interps-20020930-merge:1.18
	carlton_dictionary-20020927-merge:1.18
	carlton_dictionary-branch:1.18.0.8
	carlton_dictionary-20020920-branchpoint:1.18
	gdb_5_3-branch:1.18.0.6
	gdb_5_3-2002-09-04-branchpoint:1.18
	kseitz_interps-20020829-merge:1.18
	cagney_sysregs-20020825-branch:1.18.0.4
	cagney_sysregs-20020825-branchpoint:1.18
	readline_4_3-import-branch:1.18.0.2
	readline_4_3-import-branchpoint:1.18
	gdb_5_2_1-2002-07-23-release:1.14
	kseitz_interps-20020528-branch:1.15.0.6
	kseitz_interps-20020528-branchpoint:1.15
	cagney_regbuf-20020515-branch:1.15.0.4
	cagney_regbuf-20020515-branchpoint:1.15
	jimb-macro-020506-branch:1.15.0.2
	jimb-macro-020506-branchpoint:1.15
	gdb_5_2-2002-04-29-release:1.14
	gdb_5_2-branch:1.14.0.2
	gdb_5_2-2002-03-03-branchpoint:1.14
	gdb_5_1_1-2002-01-24-release:1.9
	gdb_5_1_0_1-2002-01-03-release:1.9
	cygnus_cvs_20020108_pre:1.11
	gdb_5_1_0_1-2002-01-03-branchpoint:1.9
	gdb_5_1_0_1-2002-01-03-branch:1.9.0.8
	gdb_5_1-2001-11-21-release:1.9
	gdb_s390-2001-09-26-branch:1.9.0.6
	gdb_s390-2001-09-26-branchpoint:1.9
	gdb_5_1-2001-07-29-branch:1.9.0.4
	gdb_5_1-2001-07-29-branchpoint:1.9
	dberlin-typesystem-branch:1.9.0.2
	dberlin-typesystem-branchpoint:1.9
	gdb-post-ptid_t-2001-05-03:1.8
	gdb-pre-ptid_t-2001-05-03:1.7
	insight-precleanup-2001-01-01:1.5
	gdb-post-protoization-2000-07-29:1.4
	gdb-pre-protoization-2000-07-29:1.4
	gdb-premipsmulti-2000-06-06-branch:1.4.0.2
	gdb-premipsmulti-2000-06-06-branchpoint:1.4
	gdb-post-params-removal-2000-06-04:1.4
	gdb-pre-params-removal-2000-06-04:1.4
	gdb-post-params-removal-2000-05-28:1.4
	gdb-pre-params-removal-2000-05-28:1.3
	gdb_5_0-2000-05-19-release:1.2
	gdb_4_18_2-2000-05-18-release:1.2
	gdb_4_95_1-2000-05-11-snapshot:1.2
	gdb_4_95_0-2000-04-27-snapshot:1.2
	gdb_5_0-2000-04-10-branch:1.2.0.2
	gdb_5_0-2000-04-10-branchpoint:1.2
	repo-unification-2000-02-06:1.1.1.12
	insight-2000-02-04:1.1.1.12
	gdb-2000-02-04:1.1.1.12
	gdb-2000-02-02:1.1.1.12
	gdb-2000-02-01:1.1.1.12
	gdb-2000-01-31:1.1.1.11
	gdb-2000-01-26:1.1.1.11
	gdb-2000-01-24:1.1.1.11
	gdb-2000-01-17:1.1.1.11
	gdb-2000-01-10:1.1.1.11
	gdb-2000-01-05:1.1.1.11
	gdb-1999-12-21:1.1.1.11
	gdb-1999-12-13:1.1.1.11
	gdb-1999-12-07:1.1.1.11
	gdb-1999-12-06:1.1.1.11
	gdb-1999-11-16:1.1.1.11
	gdb-1999-11-08:1.1.1.11
	gdb-1999-11-01:1.1.1.11
	gdb-1999-10-25:1.1.1.11
	gdb-1999-10-18:1.1.1.11
	gdb-1999-10-11:1.1.1.11
	gdb-1999-10-04:1.1.1.10
	gdb-1999-09-28:1.1.1.10
	gdb-1999-09-21:1.1.1.10
	gdb-1999-09-13:1.1.1.9
	gdb-1999-09-08:1.1.1.9
	gdb-1999-08-30:1.1.1.9
	gdb-1999-08-23:1.1.1.8
	gdb-1999-08-16:1.1.1.7
	gdb-1999-08-09:1.1.1.6
	gdb-1999-08-02:1.1.1.6
	gdb-1999-07-26:1.1.1.6
	gdb-1999-07-19:1.1.1.6
	gdb-1999-07-12:1.1.1.6
	gdb-post-reformat-19990707:1.1.1.6
	gdb-1999-07-07-post-reformat-snapshot:1.1.1.6
	gdb-pre-reformat-19990707:1.1.1.5
	gdb-1999-07-07:1.1.1.5
	gdb-1999-07-05:1.1.1.5
	gdb-1999-06-28:1.1.1.5
	gdb-1999-06-21:1.1.1.5
	gdb-1999-06-14:1.1.1.5
	gdb-1999-06-07:1.1.1.5
	gdb-1999-06-01:1.1.1.4
	gdb-4_18-branch:1.1.1.1.0.2
	gdb-4_18-release:1.1.1.1
	gdb-1999-05-25:1.1.1.4
	gdb-1999-05-19:1.1.1.3
	gdb-1999-05-10:1.1.1.3
	gdb-19990504:1.1.1.3
	gdb-19990422:1.1.1.2
	SNAPSHOT:1.1.1
	gdb-4_18:1.1.1.1
	GDB_4_18:1.1.1;
locks; strict;
comment	@ * @;
expand	@o@;


1.81
date	2007.10.12.16.11.12;	author uweigand;	state dead;
branches;
next	1.80;

1.80
date	2007.08.23.18.08.48;	author brobecke;	state Exp;
branches;
next	1.79;

1.79
date	2007.01.09.17.59.04;	author drow;	state Exp;
branches;
next	1.78;

1.78
date	2004.11.23.21.05.23;	author tausq;	state Exp;
branches;
next	1.77;

1.77
date	2004.11.13.02.27.04;	author tausq;	state Exp;
branches;
next	1.76;

1.76
date	2004.11.12.18.38.33;	author tausq;	state Exp;
branches;
next	1.75;

1.75
date	2004.09.02.14.17.41;	author cagney;	state Exp;
branches;
next	1.74;

1.74
date	2004.06.07.17.58.33;	author cagney;	state Exp;
branches;
next	1.73;

1.73
date	2004.05.07.05.48.50;	author tausq;	state Exp;
branches;
next	1.72;

1.72
date	2004.04.29.03.36.50;	author tausq;	state Exp;
branches;
next	1.71;

1.71
date	2004.04.17.17.31.40;	author tausq;	state Exp;
branches;
next	1.70;

1.70
date	2004.04.17.17.19.29;	author tausq;	state Exp;
branches;
next	1.69;

1.69
date	2004.04.06.16.11.06;	author cagney;	state Exp;
branches;
next	1.68;

1.68
date	2004.04.03.17.49.07;	author cagney;	state Exp;
branches;
next	1.67;

1.67
date	2004.03.19.17.43.33;	author cagney;	state Exp;
branches;
next	1.66;

1.66
date	2004.03.07.19.58.27;	author cagney;	state Exp;
branches
	1.66.2.1;
next	1.65;

1.65
date	2004.03.07.19.00.43;	author cagney;	state Exp;
branches;
next	1.64;

1.64
date	2004.03.07.18.06.14;	author cagney;	state Exp;
branches;
next	1.63;

1.63
date	2004.02.23.00.06.40;	author cagney;	state Exp;
branches;
next	1.62;

1.62
date	2004.02.22.16.51.37;	author cagney;	state Exp;
branches;
next	1.61;

1.61
date	2003.11.22.22.15.23;	author cagney;	state Exp;
branches
	1.61.6.1;
next	1.60;

1.60
date	2003.10.31.22.38.22;	author cagney;	state Exp;
branches;
next	1.59;

1.59
date	2003.09.28.16.12.50;	author cagney;	state Exp;
branches;
next	1.58;

1.58
date	2003.09.27.15.51.03;	author cagney;	state Exp;
branches;
next	1.57;

1.57
date	2003.09.20.17.50.28;	author cagney;	state Exp;
branches;
next	1.56;

1.56
date	2003.08.22.00.35.32;	author cagney;	state Exp;
branches
	1.56.2.1;
next	1.55;

1.55
date	2003.07.27.17.27.17;	author cagney;	state Exp;
branches;
next	1.54;

1.54
date	2003.07.03.22.14.42;	author cagney;	state Exp;
branches;
next	1.53;

1.53
date	2003.06.07.22.38.56;	author cagney;	state Exp;
branches
	1.53.4.1;
next	1.52;

1.52
date	2003.06.05.23.45.15;	author brobecke;	state Exp;
branches;
next	1.51;

1.51
date	2003.05.15.22.58.39;	author cagney;	state Exp;
branches;
next	1.50;

1.50
date	2003.05.05.17.56.56;	author cagney;	state Exp;
branches;
next	1.49;

1.49
date	2003.04.22.23.04.40;	author brobecke;	state Exp;
branches;
next	1.48;

1.48
date	2003.04.22.18.27.47;	author brobecke;	state Exp;
branches;
next	1.47;

1.47
date	2003.04.22.02.44.27;	author brobecke;	state Exp;
branches;
next	1.46;

1.46
date	2003.04.22.01.13.05;	author brobecke;	state Exp;
branches;
next	1.45;

1.45
date	2003.04.22.00.53.54;	author brobecke;	state Exp;
branches;
next	1.44;

1.44
date	2003.04.11.18.15.40;	author cagney;	state Exp;
branches
	1.44.2.1;
next	1.43;

1.43
date	2003.04.06.01.13.59;	author cagney;	state Exp;
branches;
next	1.42;

1.42
date	2003.03.30.14.59.02;	author cagney;	state Exp;
branches
	1.42.2.1;
next	1.41;

1.41
date	2003.03.26.22.39.53;	author cagney;	state Exp;
branches;
next	1.40;

1.40
date	2003.03.25.22.56.41;	author cagney;	state Exp;
branches
	1.40.2.1;
next	1.39;

1.39
date	2003.03.24.03.54.50;	author cagney;	state Exp;
branches;
next	1.38;

1.38
date	2003.03.19.20.14.01;	author brobecke;	state Exp;
branches;
next	1.37;

1.37
date	2003.03.18.18.57.48;	author brobecke;	state Exp;
branches;
next	1.36;

1.36
date	2003.03.13.21.45.42;	author cagney;	state Exp;
branches;
next	1.35;

1.35
date	2003.03.12.16.50.46;	author cagney;	state Exp;
branches;
next	1.34;

1.34
date	2003.03.03.20.50.20;	author cagney;	state Exp;
branches
	1.34.4.1;
next	1.33;

1.33
date	2003.03.02.00.11.43;	author cagney;	state Exp;
branches;
next	1.32;

1.32
date	2003.02.27.17.48.47;	author cagney;	state Exp;
branches;
next	1.31;

1.31
date	2003.01.20.01.01.47;	author cagney;	state Exp;
branches;
next	1.30;

1.30
date	2003.01.19.04.06.46;	author cagney;	state Exp;
branches;
next	1.29;

1.29
date	2003.01.04.22.37.48;	author drow;	state Exp;
branches;
next	1.28;

1.28
date	2002.12.26.20.10.13;	author brobecke;	state Exp;
branches;
next	1.27;

1.27
date	2002.12.26.09.36.42;	author brobecke;	state Exp;
branches;
next	1.26;

1.26
date	2002.12.11.02.26.37;	author cagney;	state Exp;
branches;
next	1.25;

1.25
date	2002.12.01.19.07.16;	author cagney;	state Exp;
branches;
next	1.24;

1.24
date	2002.11.28.21.38.44;	author cagney;	state Exp;
branches;
next	1.23;

1.23
date	2002.11.27.20.44.10;	author cagney;	state Exp;
branches;
next	1.22;

1.22
date	2002.11.27.01.08.49;	author cagney;	state Exp;
branches;
next	1.21;

1.21
date	2002.11.08.03.35.47;	author brobecke;	state Exp;
branches;
next	1.20;

1.20
date	2002.11.07.07.47.22;	author brobecke;	state Exp;
branches;
next	1.19;

1.19
date	2002.10.26.17.19.28;	author cagney;	state Exp;
branches;
next	1.18;

1.18
date	2002.08.24.00.21.36;	author cagney;	state Exp;
branches
	1.18.8.1
	1.18.10.1;
next	1.17;

1.17
date	2002.08.18.16.09.04;	author cagney;	state Exp;
branches;
next	1.16;

1.16
date	2002.06.14.22.55.49;	author cagney;	state Exp;
branches;
next	1.15;

1.15
date	2002.04.14.13.38.07;	author cagney;	state Exp;
branches
	1.15.4.1
	1.15.6.1;
next	1.14;

1.14
date	2002.01.29.04.42.43;	author cagney;	state Exp;
branches;
next	1.13;

1.13
date	2002.01.20.18.05.53;	author cagney;	state Exp;
branches;
next	1.12;

1.12
date	2002.01.15.02.06.47;	author cagney;	state Exp;
branches;
next	1.11;

1.11
date	2002.01.05.04.30.38;	author cagney;	state Exp;
branches;
next	1.10;

1.10
date	2001.12.19.20.21.43;	author law;	state Exp;
branches;
next	1.9;

1.9
date	2001.05.12.03.18.34;	author cagney;	state Exp;
branches;
next	1.8;

1.8
date	2001.05.04.04.15.32;	author kevinb;	state Exp;
branches;
next	1.7;

1.7
date	2001.03.14.23.23.14;	author cagney;	state Exp;
branches;
next	1.6;

1.6
date	2001.03.06.08.21.34;	author kevinb;	state Exp;
branches;
next	1.5;

1.5
date	2000.08.04.03.17.57;	author cagney;	state Exp;
branches;
next	1.4;

1.4
date	2000.05.28.01.12.37;	author kevinb;	state Exp;
branches;
next	1.3;

1.3
date	2000.04.14.19.13.49;	author jimb;	state Exp;
branches;
next	1.2;

1.2
date	2000.02.22.19.18.19;	author jimb;	state Exp;
branches;
next	1.1;

1.1
date	99.04.16.01.34.24;	author shebs;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.04.16.01.34.24;	author shebs;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	99.04.26.18.26.33;	author shebs;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	99.05.05.14.43.44;	author shebs;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	99.05.25.18.05.22;	author jsm;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	99.06.07.19.18.32;	author jsm;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	99.07.07.20.16.19;	author jsm;	state Exp;
branches;
next	1.1.1.7;

1.1.1.7
date	99.08.16.19.55.09;	author jsm;	state Exp;
branches;
next	1.1.1.8;

1.1.1.8
date	99.08.23.22.37.08;	author jsm;	state Exp;
branches;
next	1.1.1.9;

1.1.1.9
date	99.08.31.01.07.52;	author jsm;	state Exp;
branches;
next	1.1.1.10;

1.1.1.10
date	99.09.22.03.25.49;	author jsm;	state Exp;
branches;
next	1.1.1.11;

1.1.1.11
date	99.10.12.04.37.29;	author jsm;	state Exp;
branches;
next	1.1.1.12;

1.1.1.12
date	2000.02.02.00.21.14;	author jsm;	state Exp;
branches;
next	;

1.15.4.1
date	2002.06.15.16.43.10;	author cagney;	state Exp;
branches;
next	;

1.15.6.1
date	2002.06.20.01.35.21;	author kseitz;	state Exp;
branches;
next	1.15.6.2;

1.15.6.2
date	2002.08.30.22.52.49;	author kseitz;	state Exp;
branches;
next	1.15.6.3;

1.15.6.3
date	2002.11.03.22.20.20;	author ezannoni;	state Exp;
branches;
next	;

1.18.8.1
date	2002.11.15.19.19.08;	author carlton;	state Exp;
branches;
next	1.18.8.2;

1.18.8.2
date	2002.12.23.19.39.04;	author carlton;	state Exp;
branches;
next	1.18.8.3;

1.18.8.3
date	2003.02.07.19.17.55;	author carlton;	state Exp;
branches;
next	1.18.8.4;

1.18.8.4
date	2003.03.06.00.56.34;	author carlton;	state Exp;
branches;
next	1.18.8.5;

1.18.8.5
date	2003.04.16.19.56.58;	author carlton;	state Exp;
branches;
next	1.18.8.6;

1.18.8.6
date	2003.05.01.00.46.55;	author carlton;	state Exp;
branches;
next	1.18.8.7;

1.18.8.7
date	2003.05.23.18.40.48;	author carlton;	state Exp;
branches;
next	1.18.8.8;

1.18.8.8
date	2003.06.27.21.50.16;	author carlton;	state Exp;
branches;
next	1.18.8.9;

1.18.8.9
date	2003.08.05.17.13.18;	author carlton;	state Exp;
branches;
next	1.18.8.10;

1.18.8.10
date	2003.09.17.21.28.41;	author carlton;	state Exp;
branches;
next	1.18.8.11;

1.18.8.11
date	2003.11.11.23.51.06;	author carlton;	state Exp;
branches;
next	1.18.8.12;

1.18.8.12
date	2003.12.16.00.00.56;	author carlton;	state Exp;
branches;
next	;

1.18.10.1
date	2003.12.14.20.27.40;	author drow;	state Exp;
branches;
next	;

1.34.4.1
date	2003.03.16.14.01.53;	author kettenis;	state Exp;
branches;
next	;

1.40.2.1
date	2003.03.30.16.35.23;	author cagney;	state Exp;
branches;
next	;

1.42.2.1
date	2003.04.10.21.33.51;	author cagney;	state Exp;
branches;
next	;

1.44.2.1
date	2003.05.04.11.37.46;	author kettenis;	state Exp;
branches;
next	1.44.2.2;

1.44.2.2
date	2003.05.18.09.44.30;	author kettenis;	state Exp;
branches;
next	;

1.53.4.1
date	2003.07.27.17.19.57;	author cagney;	state Exp;
branches;
next	;

1.56.2.1
date	2004.03.23.20.30.16;	author ezannoni;	state Exp;
branches;
next	;

1.61.6.1
date	2004.03.27.17.37.59;	author drow;	state Exp;
branches;
next	1.61.6.2;

1.61.6.2
date	2004.09.16.17.01.33;	author drow;	state Exp;
branches;
next	;

1.66.2.1
date	2004.03.21.23.57.39;	author cagney;	state Exp;
branches;
next	;


desc
@@


1.81
log
@	* breakpoint.c (breakpoint_sals_to_pc): Do not check for
	DEPRECATED_PC_REQUIRES_RUN_BEFORE_USE.

	* config/pa/tm-hppa.h: Delete file.
	* config/pa/hppa64.mt: Do not set DEPRECATED_TM_FILE.
	* config/pa/hppahpux.mt: Likewise.
	* config/pa/hppa.mt: Likewise.
	* config/pa/linux.mt: Likewise.
	* hppa-tdep.c (hppa_pc_requires_run_before_use): Delete.
@
text
@/* Parameters for execution on any Hewlett-Packard PA-RISC machine.

   Copyright 1986, 1987, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1998,
   1999, 2000, 2001, 2002, 2003, 2004, 2007 Free Software Foundation, Inc.

   Contributed by the Center for Software Science at the
   University of Utah (pa-gdb-bugs@@cs.utah.edu).

   This file is part of GDB.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */

#include "regcache.h"

extern int hppa_pc_requires_run_before_use (CORE_ADDR pc);
#define DEPRECATED_PC_REQUIRES_RUN_BEFORE_USE(pc) hppa_pc_requires_run_before_use (pc)
@


1.80
log
@        Switch the license of all .c files to GPLv3.
        Switch the license of all .h files to GPLv3.
        Switch the license of all .cc files to GPLv3.
@
text
@@


1.79
log
@Copyright updates for 2007.
@
text
@d13 1
a13 1
   the Free Software Foundation; either version 2 of the License, or
d22 1
a22 3
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place - Suite 330,
   Boston, MA 02111-1307, USA.  */
@


1.78
log
@2004-11-23  Randolph Chung  <tausq@@debian.org>

	* arch-utils.c (generic_instruction_nullified): New.
	* arch-utils.h (generic_instruction_nullified): New.
	* gdbarch.sh (instruction_nullified): New method.
	* gdbarch.c: Regenerate.
	* gdbarch.h: Regenerate.
	* infrun.c (INSTRUCTION_NULLIFIED): Delete.
	(handle_inferior_event): Replace INSTRUCTION_NULLIFIED with calls to
	new gdbarch method.
	* config/pa/tm-hppa.h (INSTRUCTION_NULLIFIED): Delete definition.
	* hppa-tdep.c (hppa_instruction_nullified): Remove prototype and make
	static.  Rewrite to work directly off the passed regcache.
	(hppa_gdbarch_init): Set instruction_nullified method.
@
text
@d3 2
a4 3
   Copyright 1986, 1987, 1989, 1990, 1991, 1992, 1993, 1994, 1995,
   1996, 1998, 1999, 2000, 2001, 2002, 2003, 2004 Free Software
   Foundation, Inc.
@


1.77
log
@2004-11-12  Randolph Chung  <tausq@@debian.org>

	* config/tm/tm-hppa.h (SYMBOLS_CAN_START_WITH_DOLLAR): Remove.
	* parse.c (SYMBOLS_CAN_START_WITH_DOLLAR): Remove.
	(write_exp_msymbol): Remove conditional check for symbols starting
	with $.  Update comments.
@
text
@a30 6

/* PA specific macro to see if the current instruction is nullified. */
#ifndef INSTRUCTION_NULLIFIED
extern int hppa_instruction_nullified (void);
#define INSTRUCTION_NULLIFIED hppa_instruction_nullified ()
#endif
@


1.76
log
@2004-11-12  Randolph Chung  <tausq@@debian.org>

	* hppa-tdep.c (hppa_skip_permanent_breakpoint): Move definition ...
	* hppa-hpux-tdep.c (hppa_skip_permanent_breakpoint): ... to here.
	* config/pa/tm-hppa.h (SKIP_PERMANENT_BREAKPOINT): Move definition ...
	* config/pa/tm-hppah.h (SKIP_PERMANENT_BREAKPOINT): ... to here.
@
text
@a36 6

/* On HP-UX, certain system routines (millicode) have names beginning
   with $ or $$, e.g. $$dyncall, which handles inter-space procedure
   calls on PA-RISC.  Tell the expression parser to check for those
   when parsing tokens that begin with "$".  */
#define SYMBOLS_CAN_START_WITH_DOLLAR (1)
@


1.75
log
@2004-09-02  Andrew Cagney  <cagney@@gnu.org>

	* config/sparc/tm-vxworks.h (GDB_MULTI_ARCH): Delete.
	* config/sparc/tm-sol2.h (GDB_MULTI_ARCH): Delete.
	* config/sparc/tm-nbsd.h (GDB_MULTI_ARCH): Delete.
	* config/sparc/tm-linux.h (GDB_MULTI_ARCH): Delete.
	* config/sparc/tm-fbsd.h (GDB_MULTI_ARCH): Delete.
	* config/sh/tm-sh.h (GDB_MULTI_ARCH): Delete.
	* config/rs6000/tm-rs6000.h (GDB_MULTI_ARCH): Delete.
	* config/pa/tm-hppa.h (GDB_MULTI_ARCH): Delete.
	* config/mips/tm-mips.h (GDB_MULTI_ARCH): Delete.
	* config/ia64/tm-ia64.h (GDB_MULTI_ARCH): Delete.
	* config/cris/tm-cris.h (GDB_MULTI_ARCH): Delete.
	* config/arm/tm-arm.h (GDB_MULTI_ARCH): Delete.
@
text
@a37 4
/* Here's how to step off a permanent breakpoint.  */
#define SKIP_PERMANENT_BREAKPOINT (hppa_skip_permanent_breakpoint)
extern void hppa_skip_permanent_breakpoint (void);

@


1.74
log
@2004-06-07  Andrew Cagney  <cagney@@gnu.org>

	* target.h (PC_REQUIRES_RUN_BEFORE_USE): Delete definition.
	* config/pa/tm-hppa.h (DEPRECATED_PC_REQUIRES_RUN_BEFORE_USE):
	Rename PC_REQUIRES_RUN_BEFORE_USE.
	* breakpoint.c (breakpoint_sals_to_pc): Update.  Wrap reference in
	#ifdef.
@
text
@a28 2
#define GDB_MULTI_ARCH 1

@


1.73
log
@2004-05-06  Randolph Chung  <tausq@@debian.org>

	* config/pa/tm-hppa.h (RO_REGNUM, FLAGS_REGNUM, RP_REGNUM)
	(HPPA_FP_REGNUM, HPPA_SP_REGNUM, SAR_REGNUM, IPSW_REGNUM)
	(PCOQ_HEAD_REGNUM, PCSQ_HEAD_REGNUM, PCOQ_TAIL_REGNUM, PCSQ_TAIL_REGNUM)
	(EIEM_REGNUM, IIR_REGNUM, ISR_REGNUM, IOR_REGNUM, SR4_REGNUM)
	(RCR_REGNUM, PID0_REGNUM, PID1_REGNUM, PID2_REGNUM, PID3_REGNUM)
	(CCR_REGNUM, TR0_REGNUM, CR27_REGNUM, HPPA_FP0_REGNUM, FP4_REGNUM)
	(ARG0_REGNUM, ARG1_REGNUM, ARG2_REGNUM, ARG3_REGNUM): Move *_REGNUM
	definitions ...
	* hppa-tdep.h: ... to here, with HPPA_ prefix.
	* Makefile.in (hppah-nat.o): Add $(hppa_tdep_h)
	* hppa-hpux-tdep.c (hppa32_hpux_frame_find_saved_regs_in_sig)
	(hppa64_hpux_frame_find_saved_regs_in_sig)
	(child_get_current_exception_event): Add HPPA_ prefix to *_REGNUM usage.
	* hppa-linux-nat.c (GR_REGNUM, TR_REGNUM, greg_map): Likewise.
	* hppa-linux-tdep.c (hppa_dwarf_reg_to_regnum)
	(hppa_linux_target_write_pc, hppa_linux_sigtramp_frame_unwind_cache)
	(hppa_linux_sigtramp_frame_prev_register): Likewise.
	* hppa-tdep.c (hppa32_return_value, hppa64_return_value)
	(hppa32_push_dummy_call, hppa64_push_dummy_call, hppa64_frame_align)
	(hppa_target_read_pc, hppa_target_write_pc, hppa_frame_cache)
	(hppa_frame_prev_register, hppa_stub_frame_unwind_cache)
	(hppa_stub_frame_prev_register, hppa_unwind_dummy_id)
	(hppa_skip_permanent_breakpoint, hppa_instruction_nullified)
	(hppa32_register_type, hppa_cannot_store_register)
	(hppa_fetch_pointer_argument, hppa_pseudo_register_read): Likewise.
	* hppah-nat.c (store_inferior_registers, fetch_register): Likewise.
	* hpread.c (hpread_process_one_debug_symbol): Likewise.
	* pa64solib.c (pa64_solib_have_load_event)
	(pa64_solib_have_unload_event, pa64_solib_loaded_library_pathname)
	(pa64_solib_unloaded_library_pathname): Likewise.
	* somsolib.c (som_solib_have_load_event, som_solib_have_unload_event)
	(som_solib_library_pathname): Likewise.
@
text
@d32 1
a32 1
#define PC_REQUIRES_RUN_BEFORE_USE(pc) hppa_pc_requires_run_before_use (pc)
@


1.72
log
@2004-04-24  Randolph Chung  <tausq@@debian.org>

	* configure.host (hppa*-*-linux*): New target.
	* configure.tgt (hppa*-*-linux*): Likewise.
	* hppa-tdep.c (hppa_gdbarch_init): Set cannot_fetch_register, move
	gdbarch_init_osabi() call earlier so that osabi-specific frame
	unwinders can be registered first.
	* config/djgpp/fnchange.lst: Add entries for hppa-linux-tdep.c and
	hppa-linux-nat.c.
	* config/pa/tm-hppa.h (ISR_REGNUM, PID0_REGNUM, PID1_REGNUM)
	(PID2_REGNUM, PID3_REGNUM): Add definitions of some register numbers.
	* config/pa/linux.mh: New file.
	* config/pa/linux.mt: New file.
	* config/pa/nm-linux.h: New file.
	* config/pa/xm-linux.h: New file.
	* hppa-linux-nat.c: New file.
	* hppa-linux-tdep.c: New file.
@
text
@a33 40
/* Register numbers of various important registers.
   Note that some of these values are "real" register numbers,
   and correspond to the general registers of the machine,
   and some are "phony" register numbers which are too large
   to be actual register numbers as far as the user is concerned
   but do serve to get the desired values when passed to read_register.  */

#define R0_REGNUM 0		/* Doesn't actually exist, used as base for
				   other r registers.  */
#define FLAGS_REGNUM 0		/* Various status flags */
#define RP_REGNUM 2		/* return pointer */
#define HPPA_FP_REGNUM 3	/* The ABI's frame pointer, when used */
#define HPPA_SP_REGNUM 30	/* Stack pointer.  */
#define SAR_REGNUM 32		/* Shift Amount Register */
#define IPSW_REGNUM 41		/* Interrupt Processor Status Word */
#define PCOQ_HEAD_REGNUM 33	/* instruction offset queue head */
#define PCSQ_HEAD_REGNUM 34	/* instruction space queue head */
#define PCOQ_TAIL_REGNUM 35	/* instruction offset queue tail */
#define PCSQ_TAIL_REGNUM 36	/* instruction space queue tail */
#define EIEM_REGNUM 37		/* External Interrupt Enable Mask */
#define IIR_REGNUM 38		/* Interrupt Instruction Register */
#define ISR_REGNUM 39		/* Interrupt Space Register */
#define IOR_REGNUM 40		/* Interrupt Offset Register */
#define SR4_REGNUM 43		/* space register 4 */
#define RCR_REGNUM 51		/* Recover Counter (also known as cr0) */
#define PID0_REGNUM 52		/* Protection ID */
#define PID1_REGNUM 53		/* Protection ID */
#define PID2_REGNUM 55		/* Protection ID */
#define PID3_REGNUM 56		/* Protection ID */
#define CCR_REGNUM 54		/* Coprocessor Configuration Register */
#define TR0_REGNUM 57		/* Temporary Registers (cr24 -> cr31) */
#define CR27_REGNUM 60		/* Base register for thread-local storage, cr27 */
#define HPPA_FP0_REGNUM 64	/* First floating-point.  */
#define FP4_REGNUM 72

#define ARG0_REGNUM 26		/* The first argument of a callee. */
#define ARG1_REGNUM 25		/* The second argument of a callee. */
#define ARG2_REGNUM 24		/* The third argument of a callee. */
#define ARG3_REGNUM 23		/* The fourth argument of a callee. */

@


1.71
log
@2004-04-17  Randolph Chung  <tausq@@debian.org>

	* hppa-tdep.c (hppa_pseudo_register_read): Define.
	(hppa_gdbarch_init): Set pseudo_register_read.
	* config/pa/tm-hppa.h (DEPRECATED_CLEAN_UP_REGISTER_VALUE): Remove.
	* regcache.c (supply_register): Remove check for
	DEPRECATED_CLEAN_UP_REGISTER_VALUE since we've removed the last user.
@
text
@d55 1
d59 4
@


1.70
log
@2004-04-17  Randolph Chung  <tausq@@debian.org>

	* Makefile.in (hpread.o, pa64solib.o, somsolib.o): Add $(hppa_tdep_h)
	* hppa-tdep.c (hppa_objfile_priv_data): New.
	(SR4EXPORT_LDIL_OFFSET, SR4EXPORT_LDO_OFFSET): Use
	HPPA_INSTRUCTION_SIZE.
	(read_unwind_info): Use objfile_data to reference unwind info.
	(find_unwind_entry): Likewise.
	(hpread_adjust_stack_address): Move to hpread.c.
	(_initialize_hppa_tdep): Register hppa objfile data.
	* hppa-tdep.h (HPPA_INSTRUCTION_SIZE): Define.
	(unwind_table_entry, unwind_stub_types): Move from tm-hppa.h.
	(obj_unwind_info, obj_private_struct): Move from tm-hppa.h, and rename
	with hppa_ prefix.
	* hpread.c (hppa-tdep.h): Include.
	(hpread_adjust_stack_address): Move from hppa-tdep.c.
	(hpread_read_function_type, hpread_read_doc_function_type)
	(hpread_process_one_debug_symbol): Call hpread_adjust_stack_address
	directly. Use objfile_data to access solib data.
	* pa64solib.c (hppa-tdep.h): Include.
	(pa64_solib_add_solib_objfile): Use objfile_data to access solib data.
	* somsolib.c (hppa-tdep.h): Include.
	(som_solib_add_solib_objfile): Use objfile_data to access solib data.
	* config/pa/tm-hppa.h (frame_info, frame_saved_regs, value, type)
	(inferior_status): Remove unused forward declarations.
	(INSTRUCTION_SIZE): Move to hppa-tdep.c.
	(unwind_table_entry, unwind_stub_types, obj_unwind_info)
	(obj_private_struct): Move to hppa-tdep.h.
	(HPREAD_ADJUST_STACK_ADDRESS): Remove.
@
text
@a68 10
/* When fetching register values from an inferior or a core file,
   clean them up using this macro.  BUF is a char pointer to
   the raw value of the register in the registers[] array.  */

#define	DEPRECATED_CLEAN_UP_REGISTER_VALUE(regno, buf) \
  do {	\
    if ((regno) == PCOQ_HEAD_REGNUM || (regno) == PCOQ_TAIL_REGNUM) \
      (buf)[sizeof(CORE_ADDR) -1] &= ~0x3; \
  } while (0)

@


1.69
log
@2004-04-06  Andrew Cagney  <cagney@@redhat.com>

	* hppa-tdep.c (hppa_breakpoint_from_pc): Make static.
	(hppa_gdbarch_init): Set gdbarch_breakpoint_from_pc
	* config/pa/tm-hppa.h (BREAKPOINT_FROM_PC, BREAKPOINT32):
	(hppa_breakpoint_from_pc): Delete.
@
text
@a30 11
/* Hack, get around problem with including "arch-utils.h".  */
struct frame_info;

/* Forward declarations of some types we use in prototypes */

struct frame_info;
struct frame_saved_regs;
struct value;
struct type;
struct inferior_status;

a83 107

#define INSTRUCTION_SIZE 4

/*
 * Unwind table and descriptor.
 */

struct unwind_table_entry
  {
    CORE_ADDR region_start;
    CORE_ADDR region_end;

    unsigned int Cannot_unwind:1;	/* 0 */
    unsigned int Millicode:1;	/* 1 */
    unsigned int Millicode_save_sr0:1;	/* 2 */
    unsigned int Region_description:2;	/* 3..4 */
    unsigned int reserved1:1;	/* 5 */
    unsigned int Entry_SR:1;	/* 6 */
    unsigned int Entry_FR:4;	/* number saved *//* 7..10 */
    unsigned int Entry_GR:5;	/* number saved *//* 11..15 */
    unsigned int Args_stored:1;	/* 16 */
    unsigned int Variable_Frame:1;	/* 17 */
    unsigned int Separate_Package_Body:1;	/* 18 */
    unsigned int Frame_Extension_Millicode:1;	/* 19 */
    unsigned int Stack_Overflow_Check:1;	/* 20 */
    unsigned int Two_Instruction_SP_Increment:1;	/* 21 */
    unsigned int Ada_Region:1;	/* 22 */
    unsigned int cxx_info:1;	/* 23 */
    unsigned int cxx_try_catch:1;	/* 24 */
    unsigned int sched_entry_seq:1;	/* 25 */
    unsigned int reserved2:1;	/* 26 */
    unsigned int Save_SP:1;	/* 27 */
    unsigned int Save_RP:1;	/* 28 */
    unsigned int Save_MRP_in_frame:1;	/* 29 */
    unsigned int extn_ptr_defined:1;	/* 30 */
    unsigned int Cleanup_defined:1;	/* 31 */

    unsigned int MPE_XL_interrupt_marker:1;	/* 0 */
    unsigned int HP_UX_interrupt_marker:1;	/* 1 */
    unsigned int Large_frame:1;	/* 2 */
    unsigned int Pseudo_SP_Set:1;	/* 3 */
    unsigned int reserved4:1;	/* 4 */
    unsigned int Total_frame_size:27;	/* 5..31 */

    /* This is *NOT* part of an actual unwind_descriptor in an object
       file.  It is *ONLY* part of the "internalized" descriptors that
       we create from those in a file.
     */
    struct
      {
	unsigned int stub_type:4;	/* 0..3 */
	unsigned int padding:28;	/* 4..31 */
      }
    stub_unwind;
  };

/* HP linkers also generate unwinds for various linker-generated stubs.
   GDB reads in the stubs from the $UNWIND_END$ subspace, then 
   "converts" them into normal unwind entries using some of the reserved
   fields to store the stub type.  */

/* The gaps represent linker stubs used in MPE and space for future
   expansion.  */
enum unwind_stub_types
  {
    LONG_BRANCH = 1,
    PARAMETER_RELOCATION = 2,
    EXPORT = 10,
    IMPORT = 11,
    IMPORT_SHLIB = 12,
  };

/* We use the objfile->obj_private pointer for two things:

 * 1.  An unwind table;
 *
 * 2.  A pointer to any associated shared library object.
 *
 * #defines are used to help refer to these objects.
 */

/* Info about the unwind table associated with an object file.

 * This is hung off of the "objfile->obj_private" pointer, and
 * is allocated in the objfile's psymbol obstack.  This allows
 * us to have unique unwind info for each executable and shared
 * library that we are debugging.
 */
struct obj_unwind_info
  {
    struct unwind_table_entry *table;	/* Pointer to unwind info */
    struct unwind_table_entry *cache;	/* Pointer to last entry we found */
    int last;			/* Index of last entry */
  };

typedef struct obj_private_struct
  {
    struct obj_unwind_info *unwind_info;	/* a pointer */
    struct so_list *so_info;	/* a pointer  */
    CORE_ADDR dp;
  }
obj_private_data_t;

/* For a number of horrible reasons we may have to adjust the location
   of variables on the stack.  Ugh.  */
#define HPREAD_ADJUST_STACK_ADDRESS(ADDR) hpread_adjust_stack_address(ADDR)
extern int hpread_adjust_stack_address (CORE_ADDR);
@


1.68
log
@2004-04-03  Andrew Cagney  <cagney@@redhat.com>

	* config/pa/tm-hppa.h (REG_PARM_STACK_SPACE): Delete.
	* config/pa/tm-hppa64.h (PA20W_CALLING_CONVENTIONS)
	(REG_PARM_STACK_SPACE): Delete.
	* hppa-tdep.c (hppa64_push_dummy_call, hppa32_push_dummy_call):
	Inline reference to REG_PARM_STACK_SPACE.
@
text
@a41 6
/* Sequence of bytes for breakpoint instruction.  */

const unsigned char *hppa_breakpoint_from_pc (CORE_ADDR *pcptr, int *lenptr);
#define BREAKPOINT_FROM_PC(PCPTR,LENPTR) hppa_breakpoint_from_pc ((PCPTR), (LENPTR))
#define BREAKPOINT32 0x10004

@


1.67
log
@2004-03-19  Andrew Cagney  <cagney@@redhat.com>

	* config/pa/tm-hppa.h (GDB_TARGET_IS_HPPA): Delete unused macro.

Index: doc/ChangeLog
2004-03-19  Andrew Cagney  <cagney@@redhat.com>

	* gdbint.texinfo (Target Architecture Definition): Delete
	reference to GDB_TARGET_IS_HPPA.
@
text
@a103 2
#define REG_PARM_STACK_SPACE 16

@


1.66
log
@2004-03-07  Andrew Cagney  <cagney@@redhat.com>

	* hppa-tdep.c: Replace DEPRECATED_FP_REGNUM with HPPA_FP_REGNUM,
	FP0_REGNUM with HPPA_FP0_REGNUM, and SP_REGNUM with
	HPPA_SP_REGNUM.
	(hppa_register_raw_size, hppa_register_byte, hppa_read_fp)
	(hppa_target_read_fp): Delete.
	(hppa_gdbarch_init): Do not set deprecated register_raw_size,
	register_virtual_size, max_register_raw_size,
	max_register_virtual_size, register_byte, register_size,
	target_read_fp, fp_regnum, and register_bytes.  Set register_type
	instead of register_virtual_type.
	(hppa32_register_type, hppa64_register_type): Replace
	hppa32_register_virtual_type and hppa64_register_virtual_type.
	* config/pa/tm-hppa.h (HPPA_FP0_REGNUM, HPPA_SP_REGNUM)
	(HPPA_FP_REGNUM): Define.
@
text
@a105 2
#define	GDB_TARGET_IS_HPPA

@


1.66.2.1
log
@Merge with mainline cagney_tramp-20040321-mergepoint.
@
text
@d106 2
@


1.65
log
@2004-03-07  Andrew Cagney  <cagney@@redhat.com>

	* hppa-tdep.c (pa_do_registers_info, pa_do_strcat_registers_info)
	(pa_print_registers, pa_print_fp_reg, pa_strcat_registers)
	(pa_strcat_fp_reg, pa_register_look_aside): Delete.
	* config/pa/tm-hppa.h (DEPRECATED_DO_REGISTERS_INFO)
	(pa_do_registers_info): Delete.
@
text
@d62 2
d78 1
@


1.64
log
@2004-03-07  Andrew Cagney  <cagney@@redhat.com>

	* infcall.c (legacy_push_dummy_code): Delete #ifdef
	GDB_TARGET_IS_HPPA code.
	* config/pa/tm-hppa.h (DEPRECATED_FIX_CALL_DUMMY)
	(hppa_fix_call_dummy, DEPRECATED_CALL_DUMMY_HAS_COMPLETED)
	(DEPRECATED_DUMMY_WRITE_SP, CALL_DUMMY): Delete.
	* config/pa/tm-hppa64.h (CALL_DUMMY): Delete.
	* hppa-tdep.c (hppa_frame_chain, hppa_frame_chain_valid)
	(hppa_push_dummy_frame, hppa_pop_frame, hppa_push_arguments)
	(hppa_fix_call_dummy, hppa64_stack_align, hppa_frame_saved_pc)
	(hppa_init_extra_frame_info, hppa_saved_pc_after_call)
	(hppa64_call_dummy_breakpoint_offset, hppa_frame_init_saved_regs)
	(hppa_frameless_function_invocation, hppa64_store_return_value)
	(hppa_store_struct_return, hppa64_extract_return_value)
	(hppa64_use_struct_convention, hppa_frame_find_saved_regs)
	(hppa32_call_dummy_length, hppa64_call_dummy_length)
	(find_dummy_frame_regs, FUNC_LDIL_OFFSET, FUNC_LDO_OFFSET)
	(find_proc_framesize, deposit_21, restore_pc_queue)
	(find_return_regnum, pc_in_interrupt_handler, deposit_14)
	(rp_saved, pc_in_linker_stub):
@
text
@a92 6
/* Define DEPRECATED_DO_REGISTERS_INFO() to do machine-specific
   formatting of register dumps. */

#define DEPRECATED_DO_REGISTERS_INFO(_regnum, fp) pa_do_registers_info (_regnum, fp)
extern void pa_do_registers_info (int, int);

@


1.63
log
@2004-02-22  Andrew Cagney  <cagney@@redhat.com>

	* config/pa/tm-hppa.h (CALL_DUMMY_LOCATION): Delete macro.
	(DEPRECATED_PC_IN_CALL_DUMMY): Delete macro.
	(DEPRECATED_USE_GENERIC_DUMMY_FRAMES): Delete macro.
	* hppa-tdep.c (hppa_gdbarch_init): Clear deprecated
	use_generic_dummy_frames, set deprecated pc_in_call_dummy, set
	call_dummy_location to ON_STACK.
@
text
@a28 3
/* Wonder if this is correct?  Should be using push_dummy_call().  */
#define DEPRECATED_DUMMY_WRITE_SP(SP) deprecated_write_sp (SP)

a106 70
/* This sequence of words is the instructions

   ; Call stack frame has already been built by gdb. Since we could be calling 
   ; a varargs function, and we do not have the benefit of a stub to put things in
   ; the right place, we load the first 4 word of arguments into both the general
   ; and fp registers.
   call_dummy
   ldw -36(sp), arg0
   ldw -40(sp), arg1
   ldw -44(sp), arg2
   ldw -48(sp), arg3
   ldo -36(sp), r1
   fldws 0(0, r1), fr4
   fldds -4(0, r1), fr5
   fldws -8(0, r1), fr6
   fldds -12(0, r1), fr7
   ldil 0, r22                  ; FUNC_LDIL_OFFSET must point here
   ldo 0(r22), r22                      ; FUNC_LDO_OFFSET must point here
   ldsid (0,r22), r4
   ldil 0, r1                   ; SR4EXPORT_LDIL_OFFSET must point here
   ldo 0(r1), r1                        ; SR4EXPORT_LDO_OFFSET must point here
   ldsid (0,r1), r20
   combt,=,n r4, r20, text_space        ; If target is in data space, do a
   ble 0(sr5, r22)                      ; "normal" procedure call
   copy r31, r2
   break 4, 8 
   mtsp r21, sr0
   ble,n 0(sr0, r22)
   text_space                           ; Otherwise, go through _sr4export,
   ble (sr4, r1)                        ; which will return back here.
   stw r31,-24(r30)
   break 4, 8
   mtsp r21, sr0
   ble,n 0(sr0, r22)
   nop                          ; To avoid kernel bugs 
   nop                          ; and keep the dummy 8 byte aligned

   The dummy decides if the target is in text space or data space. If
   it's in data space, there's no problem because the target can
   return back to the dummy. However, if the target is in text space,
   the dummy calls the secret, undocumented routine _sr4export, which
   calls a function in text space and can return to any space. Instead
   of including fake instructions to represent saved registers, we
   know that the frame is associated with the call dummy and treat it
   specially.

   The trailing NOPs are needed to avoid a bug in HPUX, BSD and OSF1 
   kernels.   If the memory at the location pointed to by the PC is
   0xffffffff then a ptrace step call will fail (even if the instruction
   is nullified).

   The code to pop a dummy frame single steps three instructions
   starting with the last mtsp.  This includes the nullified "instruction"
   following the ble (which is uninitialized junk).  If the 
   "instruction" following the last BLE is 0xffffffff, then the ptrace
   will fail and the dummy frame is not correctly popped.

   By placing a NOP in the delay slot of the BLE instruction we can be 
   sure that we never try to execute a 0xffffffff instruction and
   avoid the kernel bug.  The second NOP is needed to keep the call
   dummy 8 byte aligned.  */

#define CALL_DUMMY {0x4BDA3FB9, 0x4BD93FB1, 0x4BD83FA9, 0x4BD73FA1,\
                    0x37C13FB9, 0x24201004, 0x2C391005, 0x24311006,\
                    0x2C291007, 0x22C00000, 0x36D60000, 0x02C010A4,\
                    0x20200000, 0x34210000, 0x002010b4, 0x82842022,\
                    0xe6c06000, 0x081f0242, 0x00010004, 0x00151820,\
                    0xe6c00002, 0xe4202000, 0x6bdf3fd1, 0x00010004,\
                    0x00151820, 0xe6c00002, 0x08000240, 0x08000240}

a107 24

/* If we've reached a trap instruction within the call dummy, then
   we'll consider that to mean that we've reached the call dummy's
   end after its successful completion. */
#define DEPRECATED_CALL_DUMMY_HAS_COMPLETED(pc, sp, frame_address) \
  (DEPRECATED_PC_IN_CALL_DUMMY((pc), (sp), (frame_address)) && \
   (read_memory_integer((pc), 4) == BREAKPOINT32))

/* Insert the specified number of args and function address into a
   call sequence of the above form stored at DUMMYNAME.

   On the hppa we need to call the stack dummy through $$dyncall.
   Therefore our version of DEPRECATED_FIX_CALL_DUMMY takes an extra
   argument, real_pc, which is the location where gdb should start up
   the inferior to do the function call.  */

/* FIXME: brobecker 2002-12-26.  This macro is going to cause us some
   problems before we can go to multiarch partial as it has been
   diverted on HPUX to return the value of the PC!  */
/* NOTE: cagney/2003-05-03: This has been replaced by push_dummy_code.
   Hopefully that has all the parameters HP/UX needs.  */
#define DEPRECATED_FIX_CALL_DUMMY hppa_fix_call_dummy
extern CORE_ADDR hppa_fix_call_dummy (char *, CORE_ADDR, CORE_ADDR, int,
		                      struct value **, struct type *, int);
@


1.62
log
@2004-02-22  Andrew Cagney  <cagney@@redhat.com>

	* config/pa/tm-hppa.h: Update copyright.
	(DEPRECATED_INIT_FRAME_PC): Delete macro.
	(deprecated_init_frame_pc_default): Delete declaration.
	(hppa_frame_init_saved_regs): Delete declaration.
	(DEPRECATED_FRAME_INIT_SAVED_REGS): Delete macro.
	* hppa-tdep.c: Include "arch-utils.h".
	(hppa_gdbarch_init): Set deprecated init_frame_pc
	and deprecated frame_init_saved_regs.
	(hppa_frame_init_saved_regs): Make static.
@
text
@a33 4
/* NOTE: cagney/2002-11-24: This is a guess.  */
#define DEPRECATED_USE_GENERIC_DUMMY_FRAMES 0
#define CALL_DUMMY_LOCATION ON_STACK
#define DEPRECATED_PC_IN_CALL_DUMMY(pc, sp, frame_address) deprecated_pc_in_call_dummy_on_stack (pc, sp, frame_address)
@


1.61
log
@2003-11-22  Andrew Cagney  <cagney@@redhat.com>

	* hppa-tdep.c (hppa_value_returned_from_stack): Delete function.
	* config/pa/tm-hppa.h (hppa_value_returned_from_stack): Delete
	declaration.
	(DEPRECATED_VALUE_RETURNED_FROM_STACK): Delete macro.
	* infcall.c (call_function_by_hand): Delete #ifdef
	DEPRECATED_VALUE_RETURNED_FROM_STACK code.
	* infcmd.c (print_return_value): Ditto.
@
text
@d2 4
a5 2
   Copyright 1986, 1987, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996,
   1998, 1999, 2000, 2001, 2002, 2003 Free Software Foundation, Inc.
a39 2
extern CORE_ADDR deprecated_init_frame_pc_default (int fromleaf, struct frame_info *prev);
#define DEPRECATED_INIT_FRAME_PC(l,f) (deprecated_init_frame_pc_default (l, f))
a110 4

extern void hppa_frame_init_saved_regs (struct frame_info *);
#define DEPRECATED_FRAME_INIT_SAVED_REGS(FI) \
  hppa_frame_init_saved_regs (FI)
@


1.61.6.1
log
@Merge mainline to intercu branch.
@
text
@d2 2
a3 4

   Copyright 1986, 1987, 1989, 1990, 1991, 1992, 1993, 1994, 1995,
   1996, 1998, 1999, 2000, 2001, 2002, 2003, 2004 Free Software
   Foundation, Inc.
d27 3
d32 4
d38 2
a68 2
#define HPPA_FP_REGNUM 3	/* The ABI's frame pointer, when used */
#define HPPA_SP_REGNUM 30	/* Stack pointer.  */
a82 1
#define HPPA_FP0_REGNUM 64	/* First floating-point.  */
d100 6
d112 4
d118 70
d189 26
@


1.61.6.2
log
@Merge mainline to intercu branch - 2004-09-15
@
text
@d29 19
d49 46
a94 1
#define DEPRECATED_PC_REQUIRES_RUN_BEFORE_USE(pc) hppa_pc_requires_run_before_use (pc)
d102 109
@


1.60
log
@2003-10-31  Andrew Cagney  <cagney@@redhat.com>

	* stack.c (return_command): Use get_frame_type, instead of
	CALL_DUMMY_HAS_COMPLETED.
	* inferior.h (CALL_DUMMY_HAS_COMPLETED): Delete definition.
	* config/pa/tm-hppa.h (CALL_DUMMY_HAS_COMPLETED): Delete macro.
@
text
@a111 18
/* elz: Return a large value, which is stored on the stack at addr.
   This is defined only for the hppa, at this moment.  The above macro
   DEPRECATED_EXTRACT_STRUCT_VALUE_ADDRESS is not called anymore,
   because it assumes that on exit from a called function which
   returns a large structure on the stack, the address of the ret
   structure is still in register 28. Unfortunately this register is
   usually overwritten by the called function itself, on hppa. This is
   specified in the calling convention doc. As far as I know, the only
   way to get the return value is to have the caller tell us where it
   told the callee to put it, rather than have the callee tell us.  */
struct value *hppa_value_returned_from_stack (struct type *valtype,
					      CORE_ADDR addr);
/* FIXME: cagney/2003-09-27: This method should now be redundant.
   Instead, when "struct return convention", the inferior function
   call code always saves and uses the struct return's stack address.  */
#define DEPRECATED_VALUE_RETURNED_FROM_STACK(valtype,addr) \
  hppa_value_returned_from_stack (valtype, addr)

@


1.59
log
@2003-09-28  Andrew Cagney  <cagney@@redhat.com>

	* config/pa/tm-hppa.h (DEPRECATED_VALUE_RETURNED_FROM_STACK):
	Rename VALUE_RETURNED_FROM_STACK.
	* infcmd.c (print_return_value): Update.
	* infcall.c (call_function_by_hand): Update.
@
text
@d211 1
a211 1
#define CALL_DUMMY_HAS_COMPLETED(pc, sp, frame_address) \
@


1.58
log
@2003-09-27  Andrew Cagney  <cagney@@redhat.com>

	* arch-utils.c (deprecated_init_frame_pc_default): Rename
	"init_frame_pc_default".
	* arch-utils.h (deprecated_init_frame_pc_default): Update.
	* xstormy16-tdep.c (xstormy16_gdbarch_init): Update.
	* vax-tdep.c (vax_gdbarch_init): Update.
	* v850-tdep.c (v850_gdbarch_init): Update.
	* sh64-tdep.c (sh64_gdbarch_init): Update.
	* s390-tdep.c (s390_gdbarch_init): Update.
	* ns32k-tdep.c (ns32k_gdbarch_init): Update.
	* mcore-tdep.c (mcore_gdbarch_init): Update.
	* h8300-tdep.c (h8300_gdbarch_init): Update.
	* cris-tdep.c (cris_gdbarch_init): Update.
	* config/pa/tm-hppa.h (DEPRECATED_INIT_FRAME_PC): Update.
@
text
@d124 4
a127 1
#define VALUE_RETURNED_FROM_STACK(valtype,addr) \
@


1.57
log
@2003-09-20  Andrew Cagney  <cagney@@redhat.com>

	* cli/cli-script.c: Remove "register" attributes.
	* config/pa/tm-hppa.h: Ditto.
	* cli/cli-decode.c: Ditto.
	* cli/cli-cmds.c: Ditto.
@
text
@d38 2
a39 2
extern CORE_ADDR init_frame_pc_default (int fromleaf, struct frame_info *prev);
#define DEPRECATED_INIT_FRAME_PC(l,f) (init_frame_pc_default (l, f))
@


1.56
log
@2003-08-21  Andrew Cagney  <cagney@@redhat.com>

	* config/sparc/tm-sp64.h: Delete #if !GDB_MULTI_ARCH and #if 0 code.
	* config/sparc/tm-sparc.h: Ditto.
	* config/arm/tm-arm.h (GDB_MULTI_ARCH): Define GDB_MULTI_ARCH
	unconditionally.
	* config/pa/tm-hppa.h (GDB_MULTI_ARCH): Ditto.
@
text
@d122 1
a122 1
struct value *hppa_value_returned_from_stack (register struct type *valtype,
@


1.56.2.1
log
@merge mainline changes into branch
@
text
@d2 2
a3 4

   Copyright 1986, 1987, 1989, 1990, 1991, 1992, 1993, 1994, 1995,
   1996, 1998, 1999, 2000, 2001, 2002, 2003, 2004 Free Software
   Foundation, Inc.
d27 3
d32 4
d38 2
a68 2
#define HPPA_FP_REGNUM 3	/* The ABI's frame pointer, when used */
#define HPPA_SP_REGNUM 30	/* Stack pointer.  */
a82 1
#define HPPA_FP0_REGNUM 64	/* First floating-point.  */
d100 6
d112 19
d133 70
d204 26
@


1.55
log
@2003-07-27  Andrew Cagney  <cagney@@redhat.com>

	* config/pa/tm-hppa.h (init_frame_pc_default): Declare.
	* infcall.c (legacy_push_dummy_code) [GDB_TARGET_IS_HPPA]: Update
	REAL_PC and not the pointer.
	* hppa-hpux-tdep.c: Include frame.h
@
text
@a29 1
#ifndef GDB_MULTI_ARCH
a30 1
#endif
@


1.54
log
@2003-07-03  Andrew Cagney  <cagney@@redhat.com>

	* gdbarch.sh (REGISTER_NAME): Do not supply a default.
	* gdbarch.h, gdbarch.c: Re-generate.
	* config/sparc/tm-sparc.h (REGISTER_NAME): Define.
	(legacy_register_name): Declare.
	* config/sparc/tm-sp64.h (legacy_register_name): Declare.
	(REGISTER_NAME): Define.
	* sparc-tdep.c (legacy_register_name): New function.
	* config/pa/tm-hppa64.h (REGISTER_NAMES): Delete macro.
	(REGISTER_NAME): Define.
	(hppa64_register_name): Declare.
	* config/pa/tm-hppa.h (REGISTER_NAMES): Delete macro.
	* hppa-tdep.c (hppa_gdbarch_init): Set hppa_register_name.
	(hppa64_register_name): New function.
	(hppa_register_name): New function.
	* arch-utils.c (legacy_register_name): Delete.
	* arch-utils.h (legacy_register_name): Delete.
@
text
@d38 3
@


1.53
log
@2003-06-07  Andrew Cagney  <cagney@@redhat.com>

	* inferior.h (deprecated_write_sp): Replace
	generic_target_write_sp.
	* regcache.c (deprecated_write_sp): Replace
	generic_target_write_sp.
	* xstormy16-tdep.c (xstormy16_gdbarch_init): Update.
	* vax-tdep.c (vax_gdbarch_init): Update.
	* v850-tdep.c (v850_gdbarch_init): Update.
	* sparc-tdep.c (sparc_gdbarch_init): Update.
	* sh-tdep.c (sh_gdbarch_init): Update.
	* s390-tdep.c (s390_gdbarch_init): Update.
	* rs6000-tdep.c (rs6000_gdbarch_init): Update.
	* ns32k-tdep.c (ns32k_gdbarch_init): Update.
	* mn10300-tdep.c (mn10300_gdbarch_init): Update.
	* mcore-tdep.c (mcore_gdbarch_init): Update.
	* m68k-tdep.c (m68k_gdbarch_init): Update.
	* m68hc11-tdep.c (m68hc11_gdbarch_init): Update.
	* ia64-tdep.c (ia64_gdbarch_init): Update.
	* h8300-tdep.c (h8300_gdbarch_init): Update.
	* frv-tdep.c (frv_gdbarch_init): Update.
	* cris-tdep.c (cris_gdbarch_init): Update.
	* config/pa/tm-hppa.h (DEPRECATED_DUMMY_WRITE_SP): Update.
@
text
@a56 22
/* Initializer for an array of names of registers.
   There should be NUM_REGS strings in this initializer.
   They are in rows of eight entries  */

#define REGISTER_NAMES	\
 {"flags",  "r1",      "rp",      "r3",    "r4",     "r5",      "r6",     "r7",    \
  "r8",     "r9",      "r10",     "r11",   "r12",    "r13",     "r14",    "r15",   \
  "r16",    "r17",     "r18",     "r19",   "r20",    "r21",     "r22",    "r23",   \
  "r24",    "r25",     "r26",     "dp",    "ret0",   "ret1",    "sp",     "r31",   \
  "sar",    "pcoqh",   "pcsqh",   "pcoqt", "pcsqt",  "eiem",    "iir",    "isr",   \
  "ior",    "ipsw",    "goto",    "sr4",   "sr0",    "sr1",     "sr2",    "sr3",   \
  "sr5",    "sr6",     "sr7",     "cr0",   "cr8",    "cr9",     "ccr",    "cr12",  \
  "cr13",   "cr24",    "cr25",    "cr26",  "mpsfu_high","mpsfu_low","mpsfu_ovflo","pad",\
  "fpsr",    "fpe1",   "fpe2",    "fpe3",  "fpe4",   "fpe5",    "fpe6",   "fpe7",  \
  "fr4",     "fr4R",   "fr5",     "fr5R",  "fr6",    "fr6R",    "fr7",    "fr7R",  \
  "fr8",     "fr8R",   "fr9",     "fr9R",  "fr10",   "fr10R",   "fr11",   "fr11R", \
  "fr12",    "fr12R",  "fr13",    "fr13R", "fr14",   "fr14R",   "fr15",   "fr15R", \
  "fr16",    "fr16R",  "fr17",    "fr17R", "fr18",   "fr18R",   "fr19",   "fr19R", \
  "fr20",    "fr20R",  "fr21",    "fr21R", "fr22",   "fr22R",   "fr23",   "fr23R", \
  "fr24",    "fr24R",  "fr25",    "fr25R", "fr26",   "fr26R",   "fr27",   "fr27R", \
  "fr28",    "fr28R",  "fr29",    "fr29R", "fr30",   "fr30R",   "fr31",   "fr31R"}

@


1.53.4.1
log
@2003-07-27  Andrew Cagney  <cagney@@redhat.com>

	Sync HP/UX with mainline:
	* config/pa/tm-hppa.h (init_frame_pc_default): Declare.
	* infcall.c (legacy_push_dummy_code) [GDB_TARGET_IS_HPPA]: Update
	REAL_PC and not the pointer.
	* hppa-hpux-tdep.c: Include frame.h
	* config/pa/tm-hppa64.h (GDB_MULTI_ARCH): Set to
	GDB_MULTI_ACH_PARTIAL.
	* config/pa/tm-hppa64.h (FRAME_SAVED_PC_IN_SIGTRAMP): Use
	get_frame_base.
	(FRAME_BASE_BEFORE_SIGTRAMP): Ditto.
	(FRAME_FIND_SAVED_REGS_IN_SIGTRAMP): Ditto.
	(struct value): Add opaque declaration.
	(DEPRECATED_FRAME_ARGS_ADDRESS): Delete.
	* config/pa/tm-hppa64.h (REGISTER_NAMES): Delete macro.
	(REGISTER_NAME): Define.
	(hppa64_register_name): Declare.
	* config/pa/tm-hppa.h (REGISTER_NAMES): Delete macro.
	* hppa-tdep.c (hppa_gdbarch_init): Set hppa_register_name.
	(hppa64_register_name): New function.
	(hppa_register_name): New function.
@
text
@a37 3
/* Hack, get around problem with including "arch-utils.h".  */
struct frame_info;
extern CORE_ADDR init_frame_pc_default (int fromleaf, struct frame_info *prev);
d56 22
@


1.52
log
@        * config/pa/tm-hppa.h: Delete some unused macros. Move some
        macro definitions from here...
        * hppa-tdep.c: ...to there.
@
text
@d28 1
a28 1
#define DEPRECATED_DUMMY_WRITE_SP(SP) generic_target_write_sp (SP)
@


1.51
log
@2003-05-15  Andrew Cagney  <cagney@@redhat.com>

	* arch-utils.h (legacy_breakpoint_from_pc): Delete declaration.
	* target.h (memory_breakpoint_from_pc): Delete declaration.
	* mem-break.c (memory_breakpoint_from_pc): Delete function.
	* arch-utils.c (legacy_breakpoint_from_pc): Delete function.
	* monitor.c (monitor_insert_breakpoint): Use
	gdbarch_breakpoint_from_pc instead of memory_breakpoint_from_pc.
	* gdbarch.sh (BREAKPOINT_FROM_PC): Do not provide a default.
	* gdbarch.h, gdbarch.c: Re-generate.
	* sparc-tdep.c (sparc_breakpoint_from_pc): New function.
	(sparc_gdbarch_init): Set breakpoint_from_pc to
	sparc_breakpoint_from_pc.
	* config/sparc/tm-sparc.h (BREAKPOINT): Delete macro.
	(BREAKPOINT_FROM_PC): Define.
	(sparc_breakpoint_from_pc): Declare.
	* hppa-tdep.c (hppa_breakpoint_from_pc): New function.
	* config/pa/tm-hppa.h (hppa_breakpoint_from_pc): Declare.
	(BREAKPOINT_FROM_PC): Define.
	(BREAKPOINT): Delete macro.
	* target.h: Update comment.
	* s390-tdep.c (s390_gdbarch_init): Update comments.
	* remote.c: Update comments.
	* remote-mips.c: Update comments.
	* proc-api.c (write_with_trace): Do not check for a breakpoint.
	* mem-break.c: Update comment.
	* ia64-tdep.c (IA64_BREAKPOINT): Rename BREAKPOINT.
	(ia64_memory_insert_breakpoint): Update.
	* config/sparc/tm-sparc.h: Update comment.
	* config/pa/tm-hppa64.h: Update comment.
	* rs6000-tdep.c (BIG_BREAKPOINT, LITTLE_BREAKPOINT): Delete macro.
	(rs6000_breakpoint_from_pc): Update.
	* mips-tdep.c (BIG_BREAKPOINT, LITTLE_BREAKPOINT): Delete macro.
	(PMON_BIG_BREAKPOINT, PMON_LITTLE_BREAKPOINT): Delete macro.
	(IDT_LITTLE_BREAKPOINT, IDT_LITTLE_BREAKPOINT): Delete macro.
	(MIPS16_LITTLE_BREAKPOINT, MIPS16_BIG_BREAKPOINT): Delete macro.
	(mips_breakpoint_from_pc): Update.
	(mips_dump_tdep): Update.
@
text
@a47 13
/* Get at various relevent fields of an instruction word. */

#define MASK_5 0x1f
#define MASK_11 0x7ff
#define MASK_14 0x3fff
#define MASK_21 0x1fffff

/* This macro gets bit fields using HP's numbering (MSB = 0) */
#ifndef GET_FIELD
#define GET_FIELD(X, FROM, TO) \
  ((X) >> (31 - (TO)) & ((1 << ((TO) - (FROM) + 1)) - 1))
#endif

a110 21
/*
 * Processor Status Word Masks
 */

#define PSW_T   0x01000000	/* Taken Branch Trap Enable */
#define PSW_H   0x00800000	/* Higher-Privilege Transfer Trap Enable */
#define PSW_L   0x00400000	/* Lower-Privilege Transfer Trap Enable */
#define PSW_N   0x00200000	/* PC Queue Front Instruction Nullified */
#define PSW_X   0x00100000	/* Data Memory Break Disable */
#define PSW_B   0x00080000	/* Taken Branch in Previous Cycle */
#define PSW_C   0x00040000	/* Code Address Translation Enable */
#define PSW_V   0x00020000	/* Divide Step Correction */
#define PSW_M   0x00010000	/* High-Priority Machine Check Disable */
#define PSW_CB  0x0000ff00	/* Carry/Borrow Bits */
#define PSW_R   0x00000010	/* Recovery Counter Enable */
#define PSW_Q   0x00000008	/* Interruption State Collection Enable */
#define PSW_P   0x00000004	/* Protection ID Validation Enable */
#define PSW_D   0x00000002	/* Data Address Translation Enable */
#define PSW_I   0x00000001	/* External, Power Failure, Low-Priority */
				/* Machine Check Interruption Enable */

a153 3
/* Non-level zero PA's have space registers (but they don't always have
   floating-point, do they????  */

a215 8
/* Define offsets into the call dummy for the target function address */
#define FUNC_LDIL_OFFSET (INSTRUCTION_SIZE * 9)
#define FUNC_LDO_OFFSET (INSTRUCTION_SIZE * 10)

/* Define offsets into the call dummy for the _sr4export address */
#define SR4EXPORT_LDIL_OFFSET (INSTRUCTION_SIZE * 12)
#define SR4EXPORT_LDO_OFFSET (INSTRUCTION_SIZE * 13)

a308 19

struct stub_unwind_entry
  {
    /* The offset within the executable for the associated stub.  */
    unsigned stub_offset;

    /* The type of stub this unwind entry describes.  */
    char type;

    /* Unknown.  Not needed by GDB at this time.  */
    char prs_info;

    /* Length (in instructions) of the associated stub.  */
    short stub_length;
  };

/* Sizes (in bytes) of the native unwind entries.  */
#define UNWIND_ENTRY_SIZE 16
#define STUB_UNWIND_ENTRY_SIZE 8
@


1.50
log
@2003-05-03  Andrew Cagney  <cagney@@redhat.com>

	* gdbarch.sh (DEPRECATED_REGISTER_SIZE): Rename REGISTER_SIZE.
	(DEPRECATED_SIZEOF_CALL_DUMMY_WORDS): Rename
	SIZEOF_CALL_DUMMY_WORDS.
	(DEPRECATED_CALL_DUMMY_WORDS): Rename CALL_DUMMY_WORDS.
	(DEPRECATED_FIX_CALL_DUMMY): Rename FIX_CALL_DUMMY.
	(DEPRECATED_CALL_DUMMY_BREAKPOINT_OFFSET): Rename
	CALL_DUMMY_BREAKPOINT_OFFSET.
	(DEPRECATED_CALL_DUMMY_START_OFFSET): Rename
	CALL_DUMMY_START_OFFSET.
	(DEPRECATED_CALL_DUMMY_LENGTH): Rename CALL_DUMMY_LENGTH.
	* gdbarch.h, gdbarch.c: Re-generate.
	* alpha-tdep.c, alphafbsd-tdep.c, arm-linux-tdep.c: Update.
	* arm-tdep.c, avr-tdep.c, breakpoint.c, cris-tdep.c: Update.
	* dummy-frame.c, dummy-frame.h, frv-tdep.c, gdbarch.c: Update.
	* gdbarch.h, gdbarch.sh, h8300-tdep.c, hppa-tdep.c: Update.
	* i386-tdep.c, ia64-tdep.c, infcall.c, inferior.h: Update.
	* m68hc11-tdep.c, m68k-tdep.c, mcore-tdep.c: Update.
	* mips-tdep.c, mn10300-tdep.c, ns32k-tdep.c: Update.
	* rs6000-tdep.c, s390-tdep.c, sh-tdep.c, sol-thread.c: Update.
	* sparc-tdep.c, target.c, v850-tdep.c, valops.c: Update.
	* vax-tdep.c, x86-64-tdep.c, xstormy16-tdep.c: Update.
	* config/ia64/tm-ia64.h, config/m68k/tm-vx68.h: Update.
	* config/mips/tm-mips.h, config/pa/nm-hppah.h: Update.
	* config/pa/tm-hppa.h, config/pa/tm-hppa64.h: Update.
	* config/s390/tm-s390.h, config/sparc/tm-sp64.h: Update.
	* config/sparc/tm-sparc.h: Update.

Index: doc/ChangeLog
2003-05-03  Andrew Cagney  <cagney@@redhat.com>

	* gdbint.texinfo (Target Architecture Definition): Make
	CALL_DUMMY_WORDS, SIZEOF_CALL_DUMMY_WORDS, CALL_DUMMY_LENGTH,
	FIX_CALL_DUMMY, CALL_DUMMY_BREAKPOINT_OFFSET and
	CALL_DUMMY_BREAKPOINT_OFFSET deprecated.

Index: mi/ChangeLog
2003-05-03  Andrew Cagney  <cagney@@redhat.com>

	* mi-main.c (mi_cmd_data_write_register_values): Replace
	REGISTER_SIZE with DEPRECATED_REGISTER_SIZE.

Index: testsuite/ChangeLog
2003-05-03  Andrew Cagney  <cagney@@redhat.com>

	* gdb.base/watchpoint.exp: Rename CALL_DUMMY_BREAKPOINT_OFFSET to
	DEPRECATED_CALL_DUMMY_BREAKPOINT_OFFSET in comments.
@
text
@d63 2
a64 1
#define BREAKPOINT {0x00, 0x01, 0x00, 0x04}
@


1.49
log
@        * config/pa/tm-hppa.h (SOFT_FLOAT): Delete this macro.
        Update all the tests using SOFT_FLOAT considering the fact that
        this macro was always set to 0.
        * config/pa/tm-hppa64.h: Update all the tests using SOFT_FLOAT
        considering the fact that this macro was always set to 0.
        * hppa-tdep.h (hppa_store_return_value): Likewise.
        (hppa_extract_return_value): Likewise.
@
text
@d277 7
a283 9
/*
 * Insert the specified number of args and function address
 * into a call sequence of the above form stored at DUMMYNAME.
 *
 * On the hppa we need to call the stack dummy through $$dyncall.
 * Therefore our version of FIX_CALL_DUMMY takes an extra argument,
 * real_pc, which is the location where gdb should start up the
 * inferior to do the function call.
 */
d286 5
a290 3
   problems before we can go to multiarch partial as it has been diverted
   on HPUX to return the value of the PC!  */
#define FIX_CALL_DUMMY hppa_fix_call_dummy
@


1.48
log
@        * config/pa/tm-hppa.h: Remove obsolete code, was used by
        the hppa-pro target only.
@
text
@a47 5
/* By default assume we don't have to worry about software floating point.  */
#ifndef SOFT_FLOAT
#define SOFT_FLOAT 0
#endif

@


1.47
log
@       Ongoing multi-arch conversion effort for HP/UX:
       * config/pa/tm-hppa.h: Move all macro that are no longer
       defined now that GDB_MULTI_ARCH is now set to 1 from here...
       * config/pa/tm-hppa64.h: ... to here (hppa64 is not multiarch'ed yet).
@
text
@a191 2
//OBSOLETE #ifndef PA_LEVEL_0

a273 37

//OBSOLETE #else /* defined PA_LEVEL_0 */
//OBSOLETE 
//OBSOLETE /* FIXME: brobecker 2002-12-26.  PA_LEVEL_0 is only defined for the
//OBSOLETE    hppa-pro target, which should be obsoleted soon.  The following
//OBSOLETE    section will therefore not be included in the multiarch conversion.  */
//OBSOLETE /* This is the call dummy for a level 0 PA.  Level 0's don't have space
//OBSOLETE    registers (or floating point?), so we skip all that inter-space call stuff,
//OBSOLETE    and avoid touching the fp regs.
//OBSOLETE 
//OBSOLETE    call_dummy
//OBSOLETE 
//OBSOLETE    ldw -36(%sp), %arg0
//OBSOLETE    ldw -40(%sp), %arg1
//OBSOLETE    ldw -44(%sp), %arg2
//OBSOLETE    ldw -48(%sp), %arg3
//OBSOLETE    ldil 0, %r31                 ; FUNC_LDIL_OFFSET must point here
//OBSOLETE    ldo 0(%r31), %r31            ; FUNC_LDO_OFFSET must point here
//OBSOLETE    ble 0(%sr0, %r31)
//OBSOLETE    copy %r31, %r2
//OBSOLETE    break 4, 8 
//OBSOLETE    nop                          ; restore_pc_queue expects these
//OBSOLETE    bv,n 0(%r22)                 ; instructions to be here...
//OBSOLETE    nop
//OBSOLETE  */
//OBSOLETE 
//OBSOLETE /* Define offsets into the call dummy for the target function address */
//OBSOLETE #define FUNC_LDIL_OFFSET (INSTRUCTION_SIZE * 4)
//OBSOLETE #define FUNC_LDO_OFFSET (INSTRUCTION_SIZE * 5)
//OBSOLETE 
//OBSOLETE #define CALL_DUMMY {0x4bda3fb9, 0x4bd93fb1, 0x4bd83fa9, 0x4bd73fa1,\
//OBSOLETE 		    0x23e00000, 0x37ff0000, 0xe7e00000, 0x081f0242,\
//OBSOLETE 		    0x00010004, 0x08000240, 0xeac0c002, 0x08000240}
//OBSOLETE 
//OBSOLETE #define CALL_DUMMY_LENGTH (INSTRUCTION_SIZE * 12)
//OBSOLETE 
//OBSOLETE #endif /* defined PA_LEVEL_0 */
@


1.46
log
@       * config/pa/tm-hppa.h: Obsolete a section that was only used
       for hppa-pro.
@
text
@a65 58
#if !GDB_MULTI_ARCH
extern int hppa_reg_struct_has_addr (int gcc_p, struct type *type);
#define REG_STRUCT_HAS_ADDR(gcc_p,type) hppa_reg_struct_has_addr (gcc_p,type)
#endif

/* Offset from address of function to start of its code.
   Zero on most machines.  */

#if !GDB_MULTI_ARCH
#define FUNCTION_START_OFFSET 0
#endif

/* Advance PC across any function entry prologue instructions
   to reach some "real" code.  */

#if !GDB_MULTI_ARCH
extern CORE_ADDR hppa_skip_prologue (CORE_ADDR);
#define SKIP_PROLOGUE(pc) (hppa_skip_prologue (pc))
#endif

/* If PC is in some function-call trampoline code, return the PC
   where the function itself actually starts.  If not, return NULL.  */

#if !GDB_MULTI_ARCH
#define	SKIP_TRAMPOLINE_CODE(pc) hppa_skip_trampoline_code (pc)
extern CORE_ADDR hppa_skip_trampoline_code (CORE_ADDR);
#endif

/* Return non-zero if we are in an appropriate trampoline. */

#if !GDB_MULTI_ARCH
#define IN_SOLIB_CALL_TRAMPOLINE(pc, name) \
   hppa_in_solib_call_trampoline (pc, name)
extern int hppa_in_solib_call_trampoline (CORE_ADDR, char *);
#endif

#if !GDB_MULTI_ARCH
#define IN_SOLIB_RETURN_TRAMPOLINE(pc, name) \
  hppa_in_solib_return_trampoline (pc, name)
extern int hppa_in_solib_return_trampoline (CORE_ADDR, char *);
#endif

#if !GDB_MULTI_ARCH
#undef	DEPRECATED_SAVED_PC_AFTER_CALL
#define DEPRECATED_SAVED_PC_AFTER_CALL(frame) hppa_saved_pc_after_call (frame)
extern CORE_ADDR hppa_saved_pc_after_call (struct frame_info *);
#endif

#if !GDB_MULTI_ARCH
extern int hppa_inner_than (CORE_ADDR lhs, CORE_ADDR rhs);
#define INNER_THAN(lhs,rhs) hppa_inner_than(lhs,rhs)
#endif

#if !GDB_MULTI_ARCH
extern CORE_ADDR hppa_stack_align (CORE_ADDR sp);
#define STACK_ALIGN(sp) hppa_stack_align (sp)
#endif

a70 10
/* Amount PC must be decremented by after a breakpoint.
   This is often the number of bytes in BREAKPOINT
   but not always.

   Not on the PA-RISC */

#if !GDB_MULTI_ARCH
#define DECR_PC_AFTER_BREAK 0
#endif

a73 14
/* Say how long (ordinary) registers are.  This is a piece of bogosity
   used in push_word and a few other places; REGISTER_RAW_SIZE is the
   real way to know how big a register is.  */

#if !GDB_MULTI_ARCH
#define REGISTER_SIZE 4
#endif

/* Number of machine registers */

#if !GDB_MULTI_ARCH
#define NUM_REGS 128
#endif

a106 7
#if !GDB_MULTI_ARCH
#define FP_REGNUM 3		/* Contains address of executing stack */
				/* frame */
#endif
#if !GDB_MULTI_ARCH
#define SP_REGNUM 30		/* Contains address of top of stack */
#endif
a120 3
#if !GDB_MULTI_ARCH
#define FP0_REGNUM 64		/* floating point reg. 0 (fspr) */
#endif
a127 8
/* compatibility with the rest of gdb. */
#if !GDB_MULTI_ARCH
#define PC_REGNUM PCOQ_HEAD_REGNUM
#endif
#if !GDB_MULTI_ARCH
#define NPC_REGNUM PCOQ_TAIL_REGNUM
#endif

a164 5
#if 0
#define STRCAT_REGISTER(regnum, fpregs, stream, precision) pa_do_strcat_registers_info (regnum, fpregs, stream, precision)
extern void pa_do_strcat_registers_info (int, int, struct ui_file *, enum precision_type);
#endif

a170 90
/* Number of bytes of storage in the actual machine representation
   for register N.  On the PA-RISC, all regs are 4 bytes, including
   the FP registers (they're accessed as two 4 byte halves).  */

#if !GDB_MULTI_ARCH
extern int hppa_register_raw_size (int reg_nr);
#define REGISTER_RAW_SIZE(N) hppa_register_raw_size (N)
#endif

/* Total amount of space needed to store our copies of the machine's
   register state, the array `registers'.  */
#if !GDB_MULTI_ARCH
#define REGISTER_BYTES (NUM_REGS * 4)
#endif

#if !GDB_MULTI_ARCH
extern int hppa_register_byte (int reg_nr);
#define REGISTER_BYTE(N) hppa_register_byte (N)
#endif

/* Number of bytes of storage in the program's representation
   for register N. */

#if !GDB_MULTI_ARCH
#define REGISTER_VIRTUAL_SIZE(N) REGISTER_RAW_SIZE(N)
#endif

/* Largest value REGISTER_RAW_SIZE can have.  */

#if !GDB_MULTI_ARCH
#define DEPRECATED_MAX_REGISTER_RAW_SIZE 4
#endif

/* Largest value REGISTER_VIRTUAL_SIZE can have.  */

#if !GDB_MULTI_ARCH
#define DEPRECATED_MAX_REGISTER_VIRTUAL_SIZE 8
#endif

#if !GDB_MULTI_ARCH
extern struct type * hppa_register_virtual_type (int reg_nr);
#define REGISTER_VIRTUAL_TYPE(N) hppa_register_virtual_type (N)
#endif

#if !GDB_MULTI_ARCH
extern void hppa_store_struct_return (CORE_ADDR addr, CORE_ADDR sp);
#define STORE_STRUCT_RETURN(ADDR, SP) hppa_store_struct_return (ADDR, SP)
#endif

/* Extract from an array REGBUF containing the (raw) register state
   a function return value of type TYPE, and copy that, in virtual format,
   into VALBUF.  */

#if !GDB_MULTI_ARCH
void hppa_extract_return_value (struct type *type, char *regbuf, char *valbuf);
#define DEPRECATED_EXTRACT_RETURN_VALUE(TYPE,REGBUF,VALBUF) \
  hppa_extract_return_value (TYPE, REGBUF, VALBUF);
#endif

 /* elz: decide whether the function returning a value of type type
    will put it on the stack or in the registers.
    The pa calling convention says that:
    register 28 (called ret0 by gdb) contains any ASCII char,
    and any non_floating point value up to 32-bits.
    reg 28 and 29 contain non-floating point up tp 64 bits and larger
    than 32 bits. (higer order word in reg 28).
    fr4: floating point up to 64 bits
    sr1: space identifier (32-bit)
    stack: any lager than 64-bit, with the address in r28
  */
#if !GDB_MULTI_ARCH
extern use_struct_convention_fn hppa_use_struct_convention;
#define USE_STRUCT_CONVENTION(gcc_p,type) hppa_use_struct_convention (gcc_p,type)
#endif

/* Write into appropriate registers a function return value
   of type TYPE, given in virtual format.  */

#if !GDB_MULTI_ARCH
extern void hppa_store_return_value (struct type *type, char *valbuf);
#define DEPRECATED_STORE_RETURN_VALUE(TYPE,VALBUF) \
  hppa_store_return_value (TYPE, VALBUF);
#endif

#if !GDB_MULTI_ARCH
extern CORE_ADDR hppa_extract_struct_value_address (char *regbuf);
#define DEPRECATED_EXTRACT_STRUCT_VALUE_ADDRESS(REGBUF) \
  hppa_extract_struct_value_address (REGBUF)
#endif

a185 65
#if !GDB_MULTI_ARCH
extern int hppa_cannot_store_register (int regnum);
#define CANNOT_STORE_REGISTER(regno) hppa_cannot_store_register (regno)
#endif

#if !GDB_MULTI_ARCH
#define DEPRECATED_INIT_EXTRA_FRAME_INFO(fromleaf, frame) hppa_init_extra_frame_info (fromleaf, frame)
extern void hppa_init_extra_frame_info (int, struct frame_info *);
#endif

/* Describe the pointer in each stack frame to the previous stack frame
   (its caller).  */

/* DEPRECATED_FRAME_CHAIN takes a frame's nominal address and produces
   the frame's chain-pointer.  */

/* In the case of the PA-RISC, the frame's nominal address
   is the address of a 4-byte word containing the calling frame's
   address (previous FP).  */

#if !GDB_MULTI_ARCH
#define DEPRECATED_FRAME_CHAIN(thisframe) hppa_frame_chain (thisframe)
extern CORE_ADDR hppa_frame_chain (struct frame_info *);
#endif

#if !GDB_MULTI_ARCH
extern int hppa_frame_chain_valid (CORE_ADDR, struct frame_info *);
#define DEPRECATED_FRAME_CHAIN_VALID(chain, thisframe) hppa_frame_chain_valid (chain, thisframe)
#endif

/* Define other aspects of the stack frame.  */

/* A macro that tells us whether the function invocation represented
   by FI does not have a frame on the stack associated with it.  If it
   does not, FRAMELESS is set to 1, else 0.  */
#if !GDB_MULTI_ARCH
#define FRAMELESS_FUNCTION_INVOCATION(FI) \
  (hppa_frameless_function_invocation (FI))
extern int hppa_frameless_function_invocation (struct frame_info *);
#endif

#if !GDB_MULTI_ARCH
extern CORE_ADDR hppa_frame_saved_pc (struct frame_info *frame);
#define DEPRECATED_FRAME_SAVED_PC(FRAME) hppa_frame_saved_pc (FRAME)
#endif

#if !GDB_MULTI_ARCH
extern CORE_ADDR hppa_frame_args_address (struct frame_info *fi);
#define FRAME_ARGS_ADDRESS(fi) hppa_frame_args_address (fi)
#endif

#if !GDB_MULTI_ARCH
extern CORE_ADDR hppa_frame_locals_address (struct frame_info *fi);
#define FRAME_LOCALS_ADDRESS(fi) hppa_frame_locals_address (fi)
#endif

#if !GDB_MULTI_ARCH
extern int hppa_frame_num_args (struct frame_info *frame);
#define FRAME_NUM_ARGS(fi) hppa_frame_num_args (fi)
#endif

#if !GDB_MULTI_ARCH
#define FRAME_ARGS_SKIP 0
#endif

a189 14
/* Things needed for making the inferior call functions.  */

#if !GDB_MULTI_ARCH
#define DEPRECATED_PUSH_DUMMY_FRAME hppa_push_dummy_frame ()
extern void hppa_push_dummy_frame (void);
#endif

/* Discard from the stack the innermost frame, 
   restoring all saved registers.  */
#if !GDB_MULTI_ARCH
#define DEPRECATED_POP_FRAME  hppa_pop_frame ()
extern void hppa_pop_frame (void);
#endif

a274 3
#if !GDB_MULTI_ARCH
#define CALL_DUMMY_LENGTH (INSTRUCTION_SIZE * 28)
#endif
a313 4
#if !GDB_MULTI_ARCH
#define CALL_DUMMY_START_OFFSET 0
#endif

a337 13
#if !GDB_MULTI_ARCH
#define DEPRECATED_PUSH_ARGUMENTS(nargs, args, sp, struct_return, struct_addr) \
  (hppa_push_arguments((nargs), (args), (sp), (struct_return), (struct_addr)))
extern CORE_ADDR hppa_push_arguments (int, struct value **, CORE_ADDR, int,
				      CORE_ADDR);
#endif


#if !GDB_MULTI_ARCH
extern CORE_ADDR hppa_smash_text_address (CORE_ADDR addr);
#define SMASH_TEXT_ADDRESS(addr) hppa_smash_text_address (addr)
#endif

a339 4
#if !GDB_MULTI_ARCH
#define BELIEVE_PCC_PROMOTION 1
#endif

a457 21

#if 0
extern void target_write_pc (CORE_ADDR, int);
extern CORE_ADDR target_read_pc (int);
extern CORE_ADDR skip_trampoline_code (CORE_ADDR, char *);
#endif

#if !GDB_MULTI_ARCH
#define TARGET_READ_PC(pid) hppa_target_read_pc (pid)
extern CORE_ADDR hppa_target_read_pc (ptid_t);
#endif

#if !GDB_MULTI_ARCH
#define TARGET_WRITE_PC(v,pid) hppa_target_write_pc (v,pid)
extern void hppa_target_write_pc (CORE_ADDR, ptid_t);
#endif

#if !GDB_MULTI_ARCH
#define TARGET_READ_FP() hppa_target_read_fp ()
extern CORE_ADDR hppa_target_read_fp (void);
#endif
@


1.45
log
@        Ongoing multi-arch conversion for HP/UX.
        * config/pa/tm-hppa.h (GDB_MULTI_ARCH): Set to 1. Do not define
        if already defined (allows hppa64 to stay non-multiarched for now).
        * config/pa/tm-hppa64.h (GDB_MULTI_ARCH): Define.
@
text
@d466 1
a466 1
#ifndef PA_LEVEL_0
d554 36
a589 36
#else /* defined PA_LEVEL_0 */

/* FIXME: brobecker 2002-12-26.  PA_LEVEL_0 is only defined for the
   hppa-pro target, which should be obsoleted soon.  The following
   section will therefore not be included in the multiarch conversion.  */
/* This is the call dummy for a level 0 PA.  Level 0's don't have space
   registers (or floating point?), so we skip all that inter-space call stuff,
   and avoid touching the fp regs.

   call_dummy

   ldw -36(%sp), %arg0
   ldw -40(%sp), %arg1
   ldw -44(%sp), %arg2
   ldw -48(%sp), %arg3
   ldil 0, %r31                 ; FUNC_LDIL_OFFSET must point here
   ldo 0(%r31), %r31            ; FUNC_LDO_OFFSET must point here
   ble 0(%sr0, %r31)
   copy %r31, %r2
   break 4, 8 
   nop                          ; restore_pc_queue expects these
   bv,n 0(%r22)                 ; instructions to be here...
   nop
 */

/* Define offsets into the call dummy for the target function address */
#define FUNC_LDIL_OFFSET (INSTRUCTION_SIZE * 4)
#define FUNC_LDO_OFFSET (INSTRUCTION_SIZE * 5)

#define CALL_DUMMY {0x4bda3fb9, 0x4bd93fb1, 0x4bd83fa9, 0x4bd73fa1,\
		    0x23e00000, 0x37ff0000, 0xe7e00000, 0x081f0242,\
		    0x00010004, 0x08000240, 0xeac0c002, 0x08000240}

#define CALL_DUMMY_LENGTH (INSTRUCTION_SIZE * 12)

#endif /* defined PA_LEVEL_0 */
@


1.44
log
@2003-04-11  Andrew Cagney  <cagney@@redhat.com>

	* gdbarch.sh (DEPRECATED_SAVED_PC_AFTER_CALL): Deprecate
	SAVED_PC_AFTER_CALL.
	* gdbarch.h, gdbarch.c: Regenerate.
	* xstormy16-tdep.c (xstormy16_gdbarch_init): Update.
	* x86-64-tdep.c (x86_64_init_abi): Update.
	* vax-tdep.c (vax_gdbarch_init): Update.
	* v850-tdep.c (v850_gdbarch_init): Update.
	* sparc-tdep.c (sparc_gdbarch_init): Update.
	* sh-tdep.c (sh_gdbarch_init): Update.
	* s390-tdep.c (s390_gdbarch_init): Update.
	* rs6000-tdep.c (rs6000_gdbarch_init): Update.
	* ns32k-tdep.c (ns32k_gdbarch_init): Update.
	* mn10300-tdep.c (mn10300_gdbarch_init): Update.
	* mips-tdep.c (mips_gdbarch_init): Update.
	* mcore-tdep.c (mcore_gdbarch_init): Update.
	* m68k-tdep.c (m68k_gdbarch_init): Update.
	* m68hc11-tdep.c (m68hc11_gdbarch_init): Update.
	* ia64-tdep.c (ia64_gdbarch_init): Update.
	(ia64_saved_pc_after_call): Update declaration.
	* i386ly-tdep.c (i386lynx_init_abi): Update.
	* i386-tdep.c (i386_gdbarch_init): Update.
	* hppa-tdep.c (hppa_gdbarch_init): Update.
	* h8300-tdep.c (h8300_gdbarch_init): Update.
	* frv-tdep.c (frv_gdbarch_init): Update.
	* cris-tdep.c (cris_gdbarch_init): Update.
	* avr-tdep.c (avr_gdbarch_init): Update.
	* arm-tdep.c (arm_gdbarch_init): Update.
	* alpha-tdep.c (alpha_gdbarch_init): Update.
	* ns32knbsd-nat.c (frame_num_args): Update.
	* ns32k-tdep.c (umax_frame_num_args): Update.
	* mips-tdep.c (mips_init_frame_pc_first): Update.
	* infrun.c (step_over_function): Update.
	* i386-linux-tdep.c (skip_hurd_resolver): Update.
	* i386-interix-tdep.c (i386_interix_back_one_frame): Update.
	* config/sparc/tm-sparc.h (DEPRECATED_SAVED_PC_AFTER_CALL): Update.
	(DEPRECATED_INIT_FRAME_PC_FIRST): Update.
	* config/rs6000/tm-rs6000.h (DEPRECATED_INIT_FRAME_PC_FIRST): Update.
	* config/pa/tm-hppa.h (DEPRECATED_SAVED_PC_AFTER_CALL): Update.
	* arm-linux-tdep.c (skip_hurd_resolver): Update.
	* arch-utils.c (init_frame_pc_default): Update.
	* alpha-tdep.c (alpha_init_frame_pc_first): Update.
	* x86-64-tdep.h (x86_64_linux_saved_pc_after_call): Update
	declaration.
@
text
@d30 3
a32 1
#define GDB_MULTI_ARCH 0
@


1.44.2.1
log
@Merge from mainline.
@
text
@d30 1
a30 3
#ifndef GDB_MULTI_ARCH
#define GDB_MULTI_ARCH 1
#endif
d46 5
d64 58
d127 10
d140 14
d187 7
d208 3
d218 8
d263 5
d274 90
d379 65
d448 14
d464 2
d547 3
d552 41
d617 13
d632 4
d754 21
@


1.44.2.2
log
@2003-05-18  Mark Kettenis  <kettenis@@gnu.org>

	Merge from mainline.
	* i386-tdep.h (I386_SIZEOF_GREGS, I386_SIZEOF_FREGS,
	I386_SIZEOF_XREGS): Remove defenitions.
	(IS_FP_REGNUM, IS_SSE_REGNUM): Remove definitions.
	* i386-tdep.c (i386_gdbarch_init): Don't set register_bytes,
	register_size, call_dummy_words and sizeof_call_dummy.
	* i386-linux-tdep.c (i386_linux_init_abi): Don't set register_bytes.
	* x86-64-tdep.c (x86_64_init_abi): Don't set register_bytes and
	register_size.
	(x86_64_register_bytes): Remove variable.
	(_initialize_x86_64_tdep): Remove function.

	* i386-linux-tdep.c (i386_linux_sigcontext_addr): Call read_memory
	with correct arguments.
	* config/i386/x86-64linux.mt (TDEPFILES): Add i386-linux-tdep.o.
@
text
@d63 1
a63 2
const unsigned char *hppa_breakpoint_from_pc (CORE_ADDR *pcptr, int *lenptr);
#define BREAKPOINT_FROM_PC(PCPTR,LENPTR) hppa_breakpoint_from_pc ((PCPTR), (LENPTR))
d277 9
a285 7
/* Insert the specified number of args and function address into a
   call sequence of the above form stored at DUMMYNAME.

   On the hppa we need to call the stack dummy through $$dyncall.
   Therefore our version of DEPRECATED_FIX_CALL_DUMMY takes an extra
   argument, real_pc, which is the location where gdb should start up
   the inferior to do the function call.  */
d288 3
a290 5
   problems before we can go to multiarch partial as it has been
   diverted on HPUX to return the value of the PC!  */
/* NOTE: cagney/2003-05-03: This has been replaced by push_dummy_code.
   Hopefully that has all the parameters HP/UX needs.  */
#define DEPRECATED_FIX_CALL_DUMMY hppa_fix_call_dummy
@


1.43
log
@2003-04-05  Andrew Cagney  <cagney@@redhat.com>

	Eliminate FRAME_FIND_SAVED_REGS.
	* config/pa/tm-hppah.h (hppa_hpux_frame_find_saved_regs_in_sigtramp):
	Change FSR parameter to a pointer.
	* config/pa/tm-hppa64.h (FRAME_FIND_SAVED_REGS_IN_SIGTRAMP):
	Assume FSR parameter is a pointer.
	* hppa-hpux-tdep.c (hppa_hpux_frame_find_saved_regs_in_sigtramp):
	Make fsr a pointer.
	* hppa-tdep.c (hppa_frame_find_saved_regs): New function.
	(hppa_frame_saved_pc): Call hppa_frame_init_saved_regs.  Make
	saved_regs a pointer.
	(hppa_frame_saved_pc): Ditto.
	(find_dummy_frame_regs): Make frame_saved_regs a pointer
	(hppa_pop_frame): Call hppa_frame_init_saved_regs.  Make fsr a
	pointer.
	(restore_pc_queue): Make fsr a pointer.
	(hppa_frame_find_saved_regs): Make frame_saved_regs a pointer.
	(hppa_frame_chain): Make saved_regs a pointer, call
	hppa_frame_init_saved_regs.
	* sparc-tdep.c: Include "gdb_assert.h".
	(sparc_frame_find_saved_regs): Replace internal_error with
	gdb_assert.
	* remote-vxsparc.c (vx_read_register): Delete reference to
	FRAME_FIND_SAVED_REGS.
	* gdbarch.sh: Delete check for FRAME_FIND_SAVED_REGS.
	* gdbarch.h: Regenerate.
	* frame.h (DEPRECATED_FRAME_INIT_SAVED_REGS): Delete macro.
	(deprecated_get_frame_saved_regs): Delete declaration.
	(struct frame_saved_regs): Delete definition.
	* frame.c (deprecated_get_frame_saved_regs): Delete function.
	* config/pa/tm-hppa.h (hppa_frame_init_saved_regs): Declare.
	(hppa_frame_find_saved_regs): Delete declaration.
	(FRAME_FIND_SAVED_REGS): Delete macro.
	(DEPRECATED_FRAME_INIT_SAVED_REGS): Define.
	* config/i386/tm-ptx.h (FRAME_FIND_SAVED_REGS): Delete
	FRAME_FIND_SAVED_REGS in comment.
@
text
@d107 2
a108 2
#undef	SAVED_PC_AFTER_CALL
#define SAVED_PC_AFTER_CALL(frame) hppa_saved_pc_after_call (frame)
@


1.42
log
@2003-03-30  Andrew Cagney  <cagney@@redhat.com>

	* gdbarch.sh (DEPRECATED_DUMMY_WRITE_SP): Replace TARGET_WRITE_SP.
	* gdbarch.h, gdbarch.c: Regenerate.
	* v850-tdep.c (v850_gdbarch_init): Set deprecated_dummy_write_sp.
	* xstormy16-tdep.c (xstormy16_gdbarch_init): Ditto.
	* mcore-tdep.c (mcore_gdbarch_init): Ditto.
	* m68k-tdep.c (m68k_gdbarch_init): Ditto.
	* i386-tdep.c (i386_gdbarch_init): Ditto.
	* h8300-tdep.c (h8300_gdbarch_init): Ditto.
	* cris-tdep.c (cris_gdbarch_init): Ditto.
	* vax-tdep.c (vax_gdbarch_init): Ditto.
	* s390-tdep.c (s390_gdbarch_init): Ditto.
	* ns32k-tdep.c (ns32k_gdbarch_init): Ditto.
	* mn10300-tdep.c (mn10300_gdbarch_init): Ditto.
	* alpha-tdep.c (alpha_gdbarch_init): Ditto.
	* sparc-tdep.c (sparc_push_dummy_frame, sparc_pop_frame): Update.
	* config/sparc/tm-sp64.h (DEPRECATED_DUMMY_WRITE_SP): Update.
	* config/pa/tm-hppa.h (DEPRECATED_DUMMY_WRITE_SP): Define.
	* sparc-tdep.c (sparc_gdbarch_init): Update.
	* sh-tdep.c (sh_gdbarch_init): Update.
	* rs6000-tdep.c (rs6000_gdbarch_init): Update.
	* mips-tdep.c (mips_gdbarch_init): Update.
	* m68hc11-tdep.c (m68hc11_gdbarch_init): Update.
	* ia64-tdep.c (ia64_gdbarch_init): Update.
	* frv-tdep.c (frv_gdbarch_init): Update.
	* avr-tdep.c (avr_gdbarch_init): Update.
	* valops.c (hand_function_call): Replace TARGET_WRITE_SP with
	DEPRECATED_DUMMY_WRITE_SP.  Call when the method is available,
	instead of when push_dummy_call is not available.

2003-03-30  Andrew Cagney  <cagney@@redhat.com>

	* gdbint.texinfo (Target Architecture Definition): Remove
	reference to TARGET_WRITE_SP.
@
text
@d444 3
a446 5
#define FRAME_FIND_SAVED_REGS(frame_info, frame_saved_regs) \
  hppa_frame_find_saved_regs (frame_info, &frame_saved_regs)
extern void hppa_frame_find_saved_regs (struct frame_info *,
					struct frame_saved_regs *);

@


1.42.2.1
log
@Merge with mainline.
@
text
@d444 5
a448 3
extern void hppa_frame_init_saved_regs (struct frame_info *);
#define DEPRECATED_FRAME_INIT_SAVED_REGS(FI) \
  hppa_frame_init_saved_regs (FI)
@


1.41
log
@2003-03-26  Andrew Cagney  <cagney@@redhat.com>

	* gdbarch.sh (DEPRECATED_PUSH_ARGUMENTS): Rename PUSH_ARGUMENTS.
	(push_dummy_call): New pure multi-arch replacement with gdbarch,
	regcache and dummy_addr parameters.
	* gdbarch.h, gdbarch.c: Re-generate.
	* valops.c (hand_function_call): Use gdbarch_push_dummy_call when
	available; assume it will handle stack alignment and return
	address issues.  Fall back to DEPRECATED_PUSH_ARGUMENTS and
	legacy_push_arguments.
	(legacy_push_arguments): Rename default_push_arguments.
	* value.h (legacy_push_arguments): Rename default_push_arguments.
	* i386-tdep.c (i386_push_arguments): Call legacy_push_arguments.
	* config/sparc/tm-sparc.h (DEPRECATED_PUSH_ARGUMENTS): Update.
	* config/sparc/tm-sp64.h (DEPRECATED_PUSH_ARGUMENTS): Update.
	* config/pa/tm-hppa.h (DEPRECATED_PUSH_ARGUMENTS): Update.
	* config/i386/tm-symmetry.h: Update.
	* xstormy16-tdep.c (xstormy16_gdbarch_init): Update.
	* x86-64-tdep.c (x86_64_init_abi): Update.
	* v850-tdep.c (v850_gdbarch_init): Update.
	* sparc-tdep.c (sparc_gdbarch_init): Update.
	* sh-tdep.c (sh_gdbarch_init): Update.
	* s390-tdep.c (s390_gdbarch_init): Update.
	* rs6000-tdep.c (rs6000_gdbarch_init): Update.
	* mn10300-tdep.c (mn10300_gdbarch_init): Update.
	* mips-tdep.c (mips_gdbarch_init): Update.
	* mcore-tdep.c (mcore_gdbarch_init): Update.
	* m68hc11-tdep.c (m68hc11_gdbarch_init): Update.
	* ia64-tdep.c (ia64_gdbarch_init): Update.
	* i386-tdep.c (i386_gdbarch_init): Update.
	* hppa-tdep.c (hppa_gdbarch_init): Update.
	* h8300-tdep.c (h8300_gdbarch_init): Update.
	* frv-tdep.c (frv_gdbarch_init): Update.
	* d10v-tdep.c (d10v_gdbarch_init): Update.
	* cris-tdep.c (cris_gdbarch_init): Update.
	* avr-tdep.c (avr_gdbarch_init): Update.
	* arm-tdep.c (arm_gdbarch_init): Update.
	* arm-linux-tdep.c (arm_linux_init_abi): Update.
	* alpha-tdep.c (alpha_gdbarch_init): Update.

2003-03-26  Andrew Cagney  <cagney@@redhat.com>

	* gdbint.texinfo (Target Architecture Definition): Replace
	PUSH_ARGUMENTS with push_dummy_call, add gdbarch, regcache and
	dummy_addr parameters.
@
text
@d27 3
@


1.40
log
@2003-03-25  Andrew Cagney  <cagney@@redhat.com>

	* gdbarch.sh (DEPRECATED_EXTRA_STACK_ALIGNMENT_NEEDED): Replace
	EXTRA_STACK_ALIGNMENT_NEEDED.  Default to 0 not 1.
	* gdbarch.h, gdbarch.c: Re-generate.
	* config/sparc/tm-sparc.h
	(DEPRECATED_EXTRA_STACK_ALIGNMENT_NEEDED): Define.
	* sparc-tdep.c (sparc_gdbarch_init): Set
	deprecated_extra_stack_alignment_needed.
	* config/pa/tm-hppa.h (EXTRA_STACK_ALIGNMENT_NEEDED): Delete.
	* xstormy16-tdep.c (xstormy16_gdbarch_init): Do not clear
	extra_stack_alignment_needed.
	* v850-tdep.c (v850_gdbarch_init): Ditto.
	* hppa-tdep.c (hppa_gdbarch_init): Ditto.
	* h8300-tdep.c (h8300_gdbarch_init): Ditto.
	* d10v-tdep.c (d10v_gdbarch_init): Ditto.
	* cris-tdep.c (cris_gdbarch_init): Ditto.
	* m68k-tdep.c (m68k_gdbarch_init): Ditto.
	* m68hc11-tdep.c (m68hc11_gdbarch_init): Ditto.
@
text
@d617 1
a617 1
#define PUSH_ARGUMENTS(nargs, args, sp, struct_return, struct_addr) \
@


1.40.2.1
log
@Merge with mainline.
@
text
@a26 3
/* Wonder if this is correct?  Should be using push_dummy_call().  */
#define DEPRECATED_DUMMY_WRITE_SP(SP) generic_target_write_sp (SP)

d617 1
a617 1
#define DEPRECATED_PUSH_ARGUMENTS(nargs, args, sp, struct_return, struct_addr) \
@


1.39
log
@Index: ChangeLog
2003-03-23  Andrew Cagney  <cagney@@redhat.com>

	* gdbarch.sh (DEPRECATED_FRAME_CHAIN): Replace FRAME_CHAIN.
	(DEPRECATED_FRAME_CHAIN_VALID): Replace FRAME_CHAIN_VALID.
	* gdbarch.h, gdbarch.c: Regenerate.
	* valops.c (hand_function_call): Update.
	* objfiles.h (DEPRECATED_FRAME_CHAIN_VALID): Update.
	* frame.c (legacy_saved_regs_this_id): Update.
	(legacy_get_prev_frame, get_prev_frame, legacy_frame_p): Update.
	* dummy-frame.h: Update.
	* config/sparc/tm-sparc.h (DEPRECATED_FRAME_CHAIN): Update.
	* config/pa/tm-hppa.h (DEPRECATED_FRAME_CHAIN_VALID): Update.
	* config/m68k/tm-vx68.h (DEPRECATED_FRAME_CHAIN): Update.
	* config/m68k/tm-os68k.h (DEPRECATED_FRAME_CHAIN): Update.
	* config/m68k/tm-sun3.h: Update.
	* blockframe.c (inside_main_func, frame_chain_valid): Update.
	* xstormy16-tdep.c (xstormy16_gdbarch_init): Update.
	* x86-64-tdep.c (x86_64_init_abi): Update.
	* vax-tdep.c (vax_gdbarch_init): Update.
	* v850-tdep.c (v850_gdbarch_init): Update.
	* sparc-tdep.c (sparc_frame_chain, sparc_gdbarch_init): Update.
	* sh-tdep.c (sh_gdbarch_init): Update.
	* s390-tdep.c (s390_gdbarch_init): Update.
	* rs6000-tdep.c (rs6000_frame_saved_pc): Update.
	(rs6000_gdbarch_init, rs6000_frame_saved_pc): Update.
	(frame_get_saved_regs): Update.
	* ppc-linux-tdep.c (ppc_linux_init_abi): Update.
	* ns32k-tdep.c (ns32k_gdbarch_init): Update.
	* mn10300-tdep.c (mn10300_gdbarch_init): Update.
	* mips-tdep.c (mips_gdbarch_init): Update.
	* mcore-tdep.c (mcore_gdbarch_init): Update.
	* m68k-tdep.c (m68k_gdbarch_init): Update.
	* m68hc11-tdep.c (m68hc11_gdbarch_init): Update.
	* ia64-tdep.c (ia64_gdbarch_init): Update.
	* i386-tdep.c (i386_frame_num_args, i386_gdbarch_init): Update.
	* i386-interix-tdep.c (i386_interix_init_abi): Update.
	(i386_interix_back_one_frame): Update.
	* hppa-tdep.c (hppa_gdbarch_init): Update.
	(hppa_init_extra_frame_info): Update.
	* h8300-tdep.c (h8300_gdbarch_init): Update.
	* frv-tdep.c (frv_gdbarch_init): Update.
	* cris-tdep.c (cris_gdbarch_init): Update.
	* avr-tdep.c (avr_gdbarch_init): Update.
	* arm-tdep.c (arm_gdbarch_init): Update.
	* alpha-tdep.c (alpha_gdbarch_init): Update.

Index: doc/ChangeLog
2003-03-23  Andrew Cagney  <cagney@@redhat.com>

	* gdbint.texinfo (Algorithms, Target Architecture Definition):
	Deprecate FRAME_CHAIN and FRAME_CHAIN_VALID.
@
text
@a118 4
#if !GDB_MULTI_ARCH
#define EXTRA_STACK_ALIGNMENT_NEEDED 0
#endif

@


1.38
log
@        * hppa-tdep.c (hppa_gdbarch_init): Set the push_dummy_frame gdbarch
        method, now that hppa_push_dummy_frame has a conformant prototype.
        * config/pa/tm-hppa.h (DEPRECATED_PUSH_DUMMY_FRAME): Wrap macro
        inside "#if !GDB_MULTI_ARCH ... #endif" conditional, in preparation
        for the switch to multiarch partial.
@
text
@d393 2
a394 2
/* FRAME_CHAIN takes a frame's nominal address and produces the
   frame's chain-pointer.  */
d401 1
a401 1
#define FRAME_CHAIN(thisframe) hppa_frame_chain (thisframe)
d407 1
a407 1
#define FRAME_CHAIN_VALID(chain, thisframe) hppa_frame_chain_valid (chain, thisframe)
@


1.37
log
@        Continuing work to convert the hppa targets to multiarch partial.
        * hppa-tdep.c (hppa_push_dummy_frame): Remove unused function
        parameter. Reformat comment.
        * config/pa/tm-hppa.h (hppa_push_dummy_frame): Update profile.
        (DEPRECATED_PUSH_DUMMY_FRAME): Update call to hppa_push_dummy_frame()
        to match new profile.
@
text
@d453 1
a453 2
/* Push an empty stack frame, to record the current PC, etc. */

d456 1
@


1.36
log
@2003-03-13  Andrew Cagney  <cagney@@redhat.com>

	* gdbarch.sh (DEPRECATED_POP_FRAME): Replace POP_FRAME.
	* gdbarch.h, gdbarch.c: Regenerate.
	* valops.c (hand_function_call): Update comment.
	* stack.c (return_command): Update comment.
	* config/sparc/tm-sparc.h (DEPRECATED_POP_FRAME): Update.
	* config/pa/tm-hppa.h (DEPRECATED_POP_FRAME): Update.
	* xstormy16-tdep.c (xstormy16_gdbarch_init): Update.
	* x86-64-tdep.c (x86_64_init_abi): Update.
	* vax-tdep.c (vax_gdbarch_init): Update.
	* v850-tdep.c (v850_gdbarch_init): Update.
	* sparc-tdep.c (sparc_gdbarch_init): Update.
	* sh-tdep.c (sh_gdbarch_init): Update.
	* s390-tdep.c (s390_gdbarch_init): Update.
	* rs6000-tdep.c (rs6000_gdbarch_init): Update.
	* ns32k-tdep.c (ns32k_gdbarch_init): Update.
	* mn10300-tdep.c (mn10300_gdbarch_init): Update.
	* mips-tdep.c (mips_gdbarch_init): Update.
	* mcore-tdep.c (mcore_gdbarch_init): Update.
	* m68k-tdep.c (m68k_gdbarch_init): Update.
	* m68hc11-tdep.c (m68hc11_gdbarch_init): Update.
	* ia64-tdep.c (ia64_gdbarch_init): Update.
	* i386-tdep.c (i386_gdbarch_init): Update.
	* hppa-tdep.c (hppa_gdbarch_init): Update.
	* h8300-tdep.c (h8300_gdbarch_init): Update.
	* frv-tdep.c (frv_gdbarch_init): Update.
	* cris-tdep.c (cris_gdbarch_init): Update.
	* avr-tdep.c (avr_gdbarch_init): Update.
	* arm-tdep.c (arm_gdbarch_init): Update.
	* alpha-tdep.c (alpha_gdbarch_init): Update.

2003-03-13  Andrew Cagney  <cagney@@redhat.com>

	* gdbint.texinfo (Target Architecture Definition): Replace
	POP_FRAME with DEPRECATED_POP_FRAME.  Update description.
@
text
@d455 2
a456 7
/* FIXME: brobecker 2002-12-26.  This macro definition takes advantage
   of the fact that DEPRECATED_PUSH_DUMMY_FRAME is called within a
   function where a variable inf_status of type struct inferior_status
   * is defined.  Ugh!  Until this is fixed, we will not be able to
   move to multiarch partial.  */
#define DEPRECATED_PUSH_DUMMY_FRAME hppa_push_dummy_frame (inf_status)
extern void hppa_push_dummy_frame (struct inferior_status *);
@


1.35
log
@2003-03-12  Andrew Cagney  <cagney@@redhat.com>

	* gdbarch.sh (DEPRECATED_FRAME_SAVED_PC): Replace FRAME_SAVED_PC.
	* gdbarch.h, gdbarch.c: Re-generate.
	* xstormy16-tdep.c (xstormy16_gdbarch_init): Update.
	* x86-64-tdep.h: Update.
	* x86-64-tdep.c (x86_64_init_abi): Update.
	* v850-tdep.c (v850_gdbarch_init): Update.
	* sparc-tdep.c (sparc_gdbarch_init): Update.
	* sh-tdep.c (sh_gdbarch_init): Update.
	* s390-tdep.c (s390_gdbarch_init): Update.
	* rs6000-tdep.c (rs6000_gdbarch_init): Update.
	* ppc-linux-tdep.c (ppc_linux_init_abi): Update.
	* ns32k-tdep.c (ns32k_gdbarch_init): Update.
	* mn10300-tdep.c (mn10300_gdbarch_init): Update.
	* mips-tdep.c (mips_gdbarch_init): Update.
	* mcore-tdep.c (mcore_gdbarch_init): Update.
	* m68k-tdep.c (m68k_gdbarch_init): Update.
	* m68hc11-tdep.c (m68hc11_gdbarch_init): Update.
	* ia64-tdep.c (ia64_gdbarch_init): Update.
	* i386-tdep.c (i386_gdbarch_init): Update.
	* i386-interix-tdep.c (i386_interix_init_abi): Update.
	* hppa-tdep.c (hppa_gdbarch_init): Update.
	* h8300-tdep.c (h8300_gdbarch_init): Update.
	* frv-tdep.c (frv_gdbarch_init): Update.
	* cris-tdep.c (cris_gdbarch_init): Update.
	* avr-tdep.c (avr_gdbarch_init): Update.
	* arm-tdep.c (arm_gdbarch_init): Update.
	* alpha-tdep.c (alpha_gdbarch_init): Update.
	* sh-tdep.c (sh_init_extra_frame_info): Update.
	(sh64_init_extra_frame_info): Update.
	* ns32knbsd-nat.c (frame_num_args): Update.
	* m68hc11-tdep.c (m68hc11_init_extra_frame_info): Update.
	* xstormy16-tdep.c (xstormy16_pop_frame): Update.
	(xstormy16_frame_chain_valid): Update.
	* vax-tdep.c (vax_saved_pc_after_call): Update.
	* v850-tdep.c (v850_frame_chain): Update.
	(v850_pop_frame): Update.
	(v850_init_extra_frame_info): Update.
	* sparc-tdep.c (setup_arbitrary_frame): Update.
	* ns32k-tdep.c (umax_frame_num_args): Update.
	* s390-tdep.c (s390_pop_frame_regular): Update.
	* mn10300-tdep.c (mn10300_frame_chain): Update.
	(mn10300_pop_frame_regular): Update.
	(mn10300_init_extra_frame_info): Update.
	* mips-tdep.c (mips_init_frame_pc_first): Update.
	(mips_frame_chain): Update.
	(mips_pop_frame): Update.
	* mcore-tdep.c (mcore_frame_chain): Update.
	(mcore_pop_frame): Update.
	(mcore_init_extra_frame_info): Update.
	* arch-utils.c (init_frame_pc_default): Update.
	* m68k-tdep.c (isi_frame_num_args): Update.
	(delta68_frame_num_args): Update.
	(news_frame_num_args): Update.
	* ia64-tdep.c (ia64_pop_frame_regular): Update.
	* alpha-tdep.c (alpha_init_frame_pc_first): Update.
	(alpha_frame_chain): Update.
	(alpha_pop_frame): Update.
	* hppa-tdep.c (hppa_saved_pc_after_call): Update.
	(hppa_init_extra_frame_info): Update.
	(hppa_frame_chain): Update.
	(hppa_frame_chain_valid): Update.
	* cris-tdep.c (cris_init_extra_frame_info): Update.
	* avr-tdep.c (avr_init_extra_frame_info): Update.
	* arm-tdep.c (arm_frame_chain_valid): Update.
	(arm_init_extra_frame_info): Update.
	(arm_pop_frame): Update.
	* frame.c (frame_pc_unwind): Update.
	* config/sparc/tm-sparc.h (DEPRECATED_FRAME_SAVED_PC): Update.
	(DEPRECATED_INIT_FRAME_PC_FIRST): Update.
	* config/rs6000/tm-rs6000.h (DEPRECATED_INIT_FRAME_PC_FIRST): Update.
	* config/pa/tm-hppa.h (DEPRECATED_FRAME_SAVED_PC): Update.
	* config/m68k/tm-delta68.h (DEPRECATED_FRAME_SAVED_PC): Update.
	* config/m68k/tm-linux.h (DEPRECATED_FRAME_SAVED_PC): Update.

2003-03-12  Andrew Cagney  <cagney@@redhat.com>

	* gdbint.texinfo (Target Architecture Definition): Rename
	FRAME_SAVED_PC to DEPRECATED_FRAME_SAVED_PC.
@
text
@d466 1
a466 1
#define POP_FRAME  hppa_pop_frame ()
@


1.34
log
@2003-03-03  Andrew Cagney  <cagney@@redhat.com>

	Make MAX_REGISTER_RAW_SIZE and MAX_REGISTER_VIRTUAL_SIZE optional.
	* gdbarch.sh (DEPRECATED_MAX_REGISTER_RAW_SIZE): Variable with
	predicate.  Replace MAX_REGISTER_RAW_SIZE.
	(DEPRECATED_MAX_REGISTER_VIRTUAL_SIZE): Ditto for
	MAX_REGISTER_VIRTUAL_SIZE.
	* regcache.c (legacy_max_register_raw_size): New function.
	(legacy_max_register_virtual_size): New function.
	* defs.h (MAX_REGISTER_VIRTUAL_SIZE): Define.
	(MAX_REGISTER_RAW_SIZE): Define.
	(legacy_max_register_raw_size): Declare.
	(legacy_max_register_virtual_size): Declare.
	* config/sparc/tm-sparc.h (DEPRECATED_MAX_REGISTER_RAW_SIZE)
	(DEPRECATED_MAX_REGISTER_VIRTUAL_SIZE): Update.
	* config/sparc/tm-sp64.h (DEPRECATED_MAX_REGISTER_RAW_SIZE)
	(DEPRECATED_MAX_REGISTER_VIRTUAL_SIZE): Ditto.
	* config/pa/tm-hppa.h (DEPRECATED_MAX_REGISTER_RAW_SIZE)
	(DEPRECATED_MAX_REGISTER_VIRTUAL_SIZE): Ditto.
	* config/pa/tm-hppa64.h (DEPRECATED_MAX_REGISTER_RAW_SIZE): Ditto.
	* config/ia64/tm-ia64.h (DEPRECATED_MAX_REGISTER_RAW_SIZE): Ditto.
	* config/i386/tm-ptx.h (DEPRECATED_MAX_REGISTER_RAW_SIZE): Ditto.
	* xstormy16-tdep.c (xstormy16_gdbarch_init): Update.
	* vax-tdep.c (vax_gdbarch_init): Update.
	* v850-tdep.c (v850_gdbarch_init): Update.
	* sparc-tdep.c (sparc_gdbarch_init): Update.
	* sh-tdep.c (sh_gdbarch_init): Update.
	* s390-tdep.c (s390_gdbarch_init): Update.
	* rs6000-tdep.c (rs6000_gdbarch_init): Update.
	* ns32k-tdep.c (ns32k_gdbarch_init): Update.
	* mn10300-tdep.c (mn10300_gdbarch_init): Update.
	* mips-tdep.c (mips_gdbarch_init): Update.
	* mcore-tdep.c (mcore_gdbarch_init): Update.
	* m68k-tdep.c (m68k_gdbarch_init): Update.
	* m68hc11-tdep.c (m68hc11_gdbarch_init): Update.
	* ia64-tdep.c (ia64_gdbarch_init): Update.
	* i386-tdep.c (i386_gdbarch_init): Update.
	* hppa-tdep.c (hppa_gdbarch_init): Update.
	* h8300-tdep.c (h8300_gdbarch_init): Update.
	* frv-tdep.c (frv_gdbarch_init): Update.
	* cris-tdep.c (cris_gdbarch_init): Update.
	* avr-tdep.c (avr_gdbarch_init): Update.
	* arm-tdep.c (arm_gdbarch_init): Update.
	* alpha-tdep.c (alpha_gdbarch_init): Update.
	* d10v-tdep.c (d10v_gdbarch_init): Do not set
	max_register_raw_size or max_register_virtual_size.
@
text
@d423 1
a423 1
#define FRAME_SAVED_PC(FRAME) hppa_frame_saved_pc (FRAME)
@


1.34.4.1
log
@2003-03-16  Mark Kettenis  <kettenis@@gnu.org>

	Merge with mainline.  Tag is kettenis-i386newframe-20030316-mergepoint.
@
text
@d423 1
a423 1
#define DEPRECATED_FRAME_SAVED_PC(FRAME) hppa_frame_saved_pc (FRAME)
d466 1
a466 1
#define DEPRECATED_POP_FRAME  hppa_pop_frame ()
@


1.33
log
@2003-03-01  Andrew Cagney  <cagney@@redhat.com>

	* gdbarch.sh (DEPRECATED_INIT_EXTRA_FRAME_INFO): Rename
	INIT_EXTRA_FRAME_INFO.
	* gdbarch.h, gdbarch.c: Regenerate.
	* arm-tdep.c: Update comments.
	* sh-tdep.c, mcore-tdep.c, m68hc11-tdep.c: Ditto.
	* i386-interix-tdep.c, hppa-tdep.c, h8300-tdep.c: Ditto.
	* frame.h, avr-tdep.c: Ditto.
	* frame.c (get_prev_frame): DEPRECATED_INIT_EXTRA_FRAME_INFO.
	(create_new_frame, legacy_get_prev_frame): Ditto.
	* config/sparc/tm-sparc.h (DEPRECATED_INIT_EXTRA_FRAME_INFO): Rename.
	* config/pa/tm-hppa.h (DEPRECATED_INIT_EXTRA_FRAME_INFO): Rename.
	* xstormy16-tdep.c (xstormy16_gdbarch_init): Initialize
	deprecated_init_extra_frame_info instead of init_extra_frame_info.
	* x86-64-tdep.c (x86_64_init_abi): Ditto.
	* v850-tdep.c (v850_gdbarch_init): Ditto.
	* sparc-tdep.c (sparc_gdbarch_init): Ditto.
	* sh-tdep.c (sh_gdbarch_init): Ditto.
	* s390-tdep.c (s390_gdbarch_init): Ditto.
	* ppc-linux-tdep.c (ppc_linux_init_abi): Ditto.
	* mn10300-tdep.c (mn10300_gdbarch_init): Ditto.
	* mips-tdep.c (mips_gdbarch_init): Ditto.
	* mcore-tdep.c (mcore_gdbarch_init): Ditto.
	* m68hc11-tdep.c (m68hc11_gdbarch_init): Ditto.
	* ia64-tdep.c (ia64_gdbarch_init): Ditto.
	* i386-interix-tdep.c (i386_interix_init_abi): Ditto.
	* hppa-tdep.c (hppa_gdbarch_init): Ditto.
	* h8300-tdep.c (h8300_gdbarch_init): Ditto.
	* frv-tdep.c (frv_gdbarch_init): Ditto.
	* cris-tdep.c (cris_gdbarch_init): Ditto.
	* avr-tdep.c (avr_gdbarch_init): Ditto.
	* arm-tdep.c (arm_gdbarch_init): Ditto.
	* alpha-tdep.c (alpha_gdbarch_init): Ditto.
	* rs6000-tdep.c (rs6000_gdbarch_init): Ditto.

Index: doc/ChangeLog
2003-02-26  Andrew Cagney  <cagney@@redhat.com>

	* gdbint.texinfo: Rename INIT_EXTRA_FRAME_INFO to
	DEPRECATED_INIT_EXTRA_FRAME_INFO.
@
text
@d305 1
a305 1
#define MAX_REGISTER_RAW_SIZE 4
d311 1
a311 1
#define MAX_REGISTER_VIRTUAL_SIZE 8
@


1.32
log
@2003-02-27  Andrew Cagney  <cagney@@redhat.com>

	* gdbarch.sh (DEPRECATED_PUSH_DUMMY_FRAME): Procedure with
	predicate.  Replaces PUSH_DUMMY_FRAME.
	* gdbarch.h, gdbarch.c: Regnerate.
	* valops.c (hand_function_call): Update.  Call
	generic_push_dummy_frame directly.
	* vax-tdep.c (vax_gdbarch_init): Update.
	* sparc-tdep.c (sparc_gdbarch_init): Update.
	* ns32k-tdep.c (ns32k_gdbarch_init): Update.
	* m68k-tdep.c (m68k_gdbarch_init): Update.
	* hppa-tdep.c (hppa_gdbarch_init): Update.
	* alpha-tdep.c (alpha_gdbarch_init): Update.
	* config/sparc/tm-sparc.h (DEPRECATED_PUSH_DUMMY_FRAME): Update.
	* config/pa/tm-hppa.h (DEPRECATED_PUSH_DUMMY_FRAME): Update.
	* inferior.h (PUSH_DUMMY_FRAME): Delete definition.
	* xstormy16-tdep.c (xstormy16_gdbarch_init): Don't set
	push_dummy_frame to generic_push_dummy_frame.
	* v850-tdep.c (v850_gdbarch_init): Ditto.
	* sh-tdep.c (sh_gdbarch_init): Ditto.
	* s390-tdep.c (s390_gdbarch_init): Ditto.
	* rs6000-tdep.c (rs6000_gdbarch_init): Ditto.
	* mn10300-tdep.c (mn10300_gdbarch_init): Ditto.
	* mips-tdep.c (mips_gdbarch_init): Ditto.
	* mcore-tdep.c (mcore_gdbarch_init): Ditto.
	* m68hc11-tdep.c (m68hc11_gdbarch_init): Ditto.
	* ia64-tdep.c (ia64_gdbarch_init): Ditto.
	* i386-tdep.c (i386_gdbarch_init): Ditto.
	* h8300-tdep.c (h8300_gdbarch_init): Ditto.
	* frv-tdep.c (frv_gdbarch_init): Ditto.
	* d10v-tdep.c (d10v_gdbarch_init): Ditto.
	* cris-tdep.c (cris_gdbarch_init): Ditto.
	* avr-tdep.c (avr_gdbarch_init): Ditto.
	* arm-tdep.c (arm_gdbarch_init): Ditto.
@
text
@d386 1
a386 1
#define INIT_EXTRA_FRAME_INFO(fromleaf, frame) hppa_init_extra_frame_info (fromleaf, frame)
@


1.31
log
@2003-01-19  Andrew Cagney  <ac131313@@redhat.com>

	* config/pa/tm-hppa.h (DEPRECATED_DO_REGISTERS_INFO): Rename
	DEPRECATED_REGISTERS_INFO.
@
text
@d456 5
a460 5
   of the fact that PUSH_DUMMY_FRAME is called within a function where
   a variable inf_status of type struct inferior_status * is defined.
   Ugh!  Until this is fixed, we will not be able to move to multiarch
   partial.  */
#define PUSH_DUMMY_FRAME hppa_push_dummy_frame (inf_status)
@


1.30
log
@2003-01-18  Andrew Cagney  <ac131313@@redhat.com>

	* cris-tdep.c: Fix function declaration indentation.
	* dwarfread.c, gdbcore.h, gdbtypes.h, i386v-nat.c: Ditto.
	* mips-tdep.c, monitor.h, parse.c, proc-utils.h: Ditto.
	* rs6000-nat.c, ser-go32.c, somread.c, stabsread.c: Ditto.
	* symfile.h, symtab.h, target.c, target.h, value.h: Ditto.
	* xcoffread.c, config/pa/tm-hppa.h: Ditto.
	* config/sparc/tm-sp64.h, config/sparc/tm-sparc.h: Ditto.
@
text
@d258 2
a259 2
/* Define DEPRECATED_REGISTERS_INFO() to do machine-specific formatting
   of register dumps. */
d261 1
a261 1
#define DEPRECATED_REGISTERS_INFO(_regnum, fp) pa_do_registers_info (_regnum, fp)
@


1.29
log
@gdb/
	* buildsym.h (processing_hp_compilation): Remove obsolete variable.
	* gdbarch.sh Remove include of "value.h" in gdbarch.h.
	(COERCE_FLOAT_TO_DOUBLE): Remove.
	* gdbarch.c: Regenerate.
	* gdbarch.h: Regenerate.
	* Makefile.in: Remove value_h from gdbarch_h.
	* valops.c (coerce_float_to_double): New variable.
	(default_coerce_float_to_double): Remove.
	(standard_coerce_float_to_double): Remove.
	(value_arg_coerce): Use coerce_float_to_double.
	(_initialize_valops): Add "set coerce-float-to-double".
	* value.h (default_coerce_float_to_double): Remove prototype.
	(standard_coerce_float_to_double): Remove prototype.

	* hpread.c (hpread_process_one_debug_symbol): Mark C++ functions as
	prototyped.
	* mdebugread.c (parse_symbol): Likewise.
	* stabsread.c (define_symbol): Mark all functions as prototyped.

	* hppa-tdep.c (hppa_coerce_float_to_double): Remove.
	* alpha-tdep.c (alpha_gdbarch_init): Remove call to
	set_gdbarch_coerce_float_to_double.
	* arm-tdep.c (arm_gdbarch_init): Likewise.
	* frv-tdep.c (frv_gdbarch_init): Likewise.
	* h8300-tdep.c (h8300_gdbarch_init): Likewise (commented out).
	* i386-sol2-tdep.c (i386_sol2_init_abi): Likewise.
	* mips-tdep.c (mips_gdbarch_init): Likewise.
	(mips_coerce_float_to_double): Remove.
	* rs6000-tdep.c (rs6000_gdbarch_init): Likewise.
	(rs6000_coerce_float_to_double): Remove.
	* s390-tdep.c (s390_gdbarch_init): Likewise.
	* sh-tdep.c (sh_gdbarch_init): Likewise.
	(sh_coerce_float_to_double): Remove.
	* sparc-tdep.c (sparc_gdbarch_init): Likewise.
	(sparc_coerce_float_to_double): Remove.
	* v850-tdep.c (v850_gdbarch_init): Likewise.
	* xstormy16-tdep.c (xstormy16_gdbarch_init): Likewise.
	* config/m32r/tm-m32r.h (COERCE_FLOAT_TO_DOUBLE): Remove.
	* config/pa/tm-hppa.h: (COERCE_FLOAT_TO_DOUBLE): Remove.
	(hppa_coerce_float_to_double): Remove prototype.
	* config/sparc/tm-sparc.h (COERCE_FLOAT_TO_DOUBLE): Remove.
doc/
	* gdb.texinfo (Controlling GDB): Add ABI section.  Document
	"set coerce-float-to-double".
	* gdbint.texinfo (COERCE_FLOAT_TO_DOUBLE): Remove documentation.
testsuite/
	* gdb.base/callfuncs.exp: Don't XFAIL unprototyped functions for
	stabs.
	* gdb.base/completion.exp: Allow marker1(void) as well as marker1().
	* gdb.base/whatis.exp: Always allow (void) after function names.
@
text
@d447 2
a448 2
extern void
hppa_frame_find_saved_regs (struct frame_info *, struct frame_saved_regs *);
d628 2
a629 2
extern CORE_ADDR
hppa_push_arguments (int, struct value **, CORE_ADDR, int, CORE_ADDR);
@


1.28
log
@        Continuing work to convert the hppa targets to multiarch partil.

        * hppa-tdep.c: Add some missing forward declarations.
        (frameless_function_invocation): Prefix the function name
        by "hppa_" to avoid polluting the namespace.  Update all calls
        to use the new function name.
        (saved_pc_after_call): Ditto.
        (init_extra_frame_info): Ditto.
        (frame_chain): Ditto.
        (push_dummy_frame): Ditto.
        (target_read_pc): Ditto.
        (target_write_pc): Ditto.
        (in_solib_call_trampoline): Ditto.
        (in_solib_return_trampoline): Ditto.
        (skip_trampoline_code): Ditto.
        (hppa_read_fp): New function, renamed from target_read_fp.
        (hppa_target_read_fp): New function, using hppa_read_fp.
        This function conforms to the function profile for the
        READ_FP gdbarch method.
        (hppa_extract_struct_value_address): New function, extracted
        from the definition of the DEPRECATED_EXTRACT_STRUCT_VALUE_ADDRESS
        macro.
        (hppa_frame_num_args): New function.
        (hppa_gdbarch_init): Setup the gdbarch vector for the hppa target.

        * config/pa/tm-hppa.h: Wrap around all gdbarch-eligible macros
        inside "#if !GDB_MULTI_ARCH ... #endif" conditional, in preparation
        for the switch to multiarch partial.
        Update some of the macros definitions to match some changes
        described above in the name of the function they are calling.
        (PUSH_DUMMY_FRAME): Add a FIXME explaining why this macro will
        not be straightforward to convert. Do now wrap it inside
        "#if !... #endif" to remember that this macro has still not
        been taken care of.
        (FIX_CALL_DUMMY): Likewise.
@
text
@d3 1
a3 1
   1998, 1999, 2000 Free Software Foundation, Inc.
a787 12

/* If the current gcc for for this target does not produce correct debugging
   information for float parameters, both prototyped and unprototyped, then
   define this macro.  This forces gdb to  always assume that floats are
   passed as doubles and then converted in the callee.  */

#if !GDB_MULTI_ARCH
extern int hppa_coerce_float_to_double (struct type *formal,
                                        struct type *actual);
#define COERCE_FLOAT_TO_DOUBLE(formal, actual) \
  hppa_coerce_float_to_double (formal, actual)
#endif
@


1.27
log
@       Continuing work to convert the hppa targets to multiarch partial.

       * hppa-tdep.c: (hppa_register_raw_size): New function replacing
       the body of macro REGISTER_RAW_SIZE.
       * hppa-hpux-tdep.c: Add new functions replacing macro bodies from
       config/pa/tm-hppah.h. These functions will be used to initialize
       the gdbarch structure.
       (hppa_hpux_pc_in_sigtramp): New function.
       (hppa_hpux_frame_saved_pc_in_sigtramp): New function.
       (hppa_hpux_frame_base_before_sigtramp): New function.
       (hppa_hpux_frame_find_saved_regs_in_sigtramp): New function.
       Add gdbcore.h #include.
       * config/pa/tm-hppa.h (REGISTER_RAW_SIZE): Change the definition
       of this gdbarch-eligible macro to a call to the new associated
       function.
       * config/pa/tm-hppah.h (PC_IN_SIGTRAMP): Likewise.
       (FRAME_SAVED_PC_IN_SIGTRAMP): Change the definition of this macro
       into a call to the new associated function.
       (FRAME_BASE_BEFORE_SIGTRAMP): Likewise.
       (FRAME_FIND_SAVED_REGS_IN_SIGTRAMP): Likewise.
       * Makefile.in (hppa-hpux-tdep.o): Add dependency on gdbcore.h.
@
text
@d61 1
d64 1
d69 1
d71 1
d76 1
d79 1
d84 4
a87 2
#define	SKIP_TRAMPOLINE_CODE(pc) skip_trampoline_code (pc, NULL)
extern CORE_ADDR skip_trampoline_code (CORE_ADDR, char *);
d91 1
d93 3
a95 2
   in_solib_call_trampoline (pc, name)
extern int in_solib_call_trampoline (CORE_ADDR, char *);
d97 1
d99 3
a101 2
  in_solib_return_trampoline (pc, name)
extern int in_solib_return_trampoline (CORE_ADDR, char *);
d103 1
d105 3
a107 2
#define SAVED_PC_AFTER_CALL(frame) saved_pc_after_call (frame)
extern CORE_ADDR saved_pc_after_call (struct frame_info *);
d109 1
d112 1
d114 1
d117 1
d119 1
d121 1
d134 1
d136 1
d145 1
d147 1
d151 1
d153 1
d188 1
d191 2
d194 1
d209 1
d211 1
d220 1
d222 2
d225 1
d279 1
d282 1
d286 1
d288 1
d290 1
d293 1
d298 1
d300 1
d304 1
d306 1
d310 1
d312 1
d314 1
d317 1
d319 1
d322 1
d328 1
d332 1
d345 1
d348 1
d353 1
a353 1

d357 1
d359 2
a360 4
/* Extract from an array REGBUF containing the (raw) register state
   the address in which a function should return its structure value,
   as a CORE_ADDR (or an expression that can be used as one).  */

d362 2
a363 1
  (*(int *)((REGBUF) + REGISTER_BYTE (28)))
d380 1
d383 1
d385 4
a388 2
#define INIT_EXTRA_FRAME_INFO(fromleaf, frame) init_extra_frame_info (fromleaf, frame)
extern void init_extra_frame_info (int, struct frame_info *);
d400 4
a403 2
#define FRAME_CHAIN(thisframe) frame_chain (thisframe)
extern CORE_ADDR frame_chain (struct frame_info *);
d405 1
d408 1
d415 1
d417 3
a419 2
  (frameless_function_invocation (FI))
extern int frameless_function_invocation (struct frame_info *);
d421 1
d424 1
d426 1
d429 1
d431 1
d434 1
d436 4
a439 8
/* Set VAL to the number of args passed to frame described by FI.
   Can set VAL to -1, meaning no way to tell.  */

/* We can't tell how many args there are
   now that the C compiler delays popping them.  */
#define FRAME_NUM_ARGS(fi) (-1)

/* Return number of bytes at start of arglist that are not really args.  */
d441 1
d443 1
d455 7
a461 2
#define PUSH_DUMMY_FRAME push_dummy_frame (inf_status)
extern void push_dummy_frame (struct inferior_status *);
d465 1
d468 1
d555 1
d557 1
d562 3
d595 1
a595 1
#endif
d597 1
d599 1
d618 3
d622 2
d625 1
a625 4
extern CORE_ADDR
hppa_fix_call_dummy (char *, CORE_ADDR, CORE_ADDR, int,
		     struct value **, struct type *, int);

d630 2
d633 1
d636 1
d640 1
d642 1
d769 4
a772 2
#define TARGET_READ_PC(pid) target_read_pc (pid)
extern CORE_ADDR target_read_pc (ptid_t);
d774 4
a777 2
#define TARGET_WRITE_PC(v,pid) target_write_pc (v,pid)
extern void target_write_pc (CORE_ADDR, ptid_t);
d779 4
a782 2
#define TARGET_READ_FP() target_read_fp (PIDGET (inferior_ptid))
extern CORE_ADDR target_read_fp (int);
a786 1

d794 1
d799 1
@


1.26
log
@2002-12-10  Andrew Cagney  <cagney@@redhat.com>

	* gdbarch.sh (DEPRECATED_INIT_FRAME_PC): Rename INIT_FRAME_PC.
	Change to a function with predicate.
	* gdbarch.h, gdbarch.c: Re-generate.
	* frame.c (get_prev_frame): Update.  Test
	DEPRECATED_INIT_FRAME_PC_P.
	* config/sparc/tm-sparc.h (DEPRECATED_INIT_FRAME_PC): Update.
	* config/rs6000/tm-rs6000.h (DEPRECATED_INIT_FRAME_PC): Update.
	* config/mn10200/tm-mn10200.h (DEPRECATED_INIT_FRAME_PC): Update.
	* alpha-tdep.c (alpha_gdbarch_init): Update.
	* mn10300-tdep.c (mn10300_gdbarch_init): Update.
	* mips-tdep.c (mips_gdbarch_init): Update.
	* i386-interix-tdep.c (i386_interix_init_abi): Update.
	* arm-tdep.c: Update comments.
	* h8300-tdep.c (h8300_gdbarch_init): Explicitly set init_frame_pc.
	* config/m32r/tm-m32r.h (DEPRECATED_INIT_FRAME_PC): Ditto.
	* frv-tdep.c (frv_gdbarch_init): Ditto.
	* x86-64-tdep.c (x86_64_init_abi): Ditto.
	* ia64-tdep.c (ia64_gdbarch_init): Ditto.
	* s390-tdep.c (s390_gdbarch_init): Ditto.
	* v850-tdep.c (v850_gdbarch_init): Ditto.
	* vax-tdep.c (vax_gdbarch_init): Ditto.
	* sh-tdep.c (sh_gdbarch_init): Ditto.
	* ns32k-tdep.c (ns32k_gdbarch_init): Ditto.
	* m68hc11-tdep.c (m68hc11_gdbarch_init): Ditto.
	* mcore-tdep.c (mcore_gdbarch_init): Ditto.
	* xstormy16-tdep.c (xstormy16_gdbarch_init): Ditto.
	* i386-tdep.c (i386_gdbarch_init): Ditto.
	* d10v-tdep.c (d10v_gdbarch_init): Ditto.
	* cris-tdep.c (cris_gdbarch_init): Ditto.
	* avr-tdep.c (avr_gdbarch_init): Ditto.
	* arm-tdep.c (arm_gdbarch_init): Ditto.
	* config/z8k/tm-z8k.h (INIT_FRAME_PC_FIRST): Delete macro.
	(DEPRECATED_INIT_FRAME_PC): Rename INIT_FRAME_PC.
@
text
@d243 2
a244 1
#define REGISTER_RAW_SIZE(N) 4
@


1.25
log
@2002-12-01  Andrew Cagney  <ac131313@@redhat.com>

	* gdbarch.sh (DEPRECATED_PC_IN_CALL_DUMMY): Rename
	PC_IN_CALL_DUMMY.  Change to predicate.  Always allow call.
	* gdbarch.h, gdbarch.c: Re-generate.
	* config/sparc/tm-sparc.h, config/sparc/tm-sp64.h: Update.
	* config/mn10200/tm-mn10200.h, config/h8500/tm-h8500.h: Update.
	* config/pa/tm-hppa.h, frame.h: Update.
	* x86-64-tdep.c, vax-tdep.c, sparc-tdep.c: Update.
	* s390-tdep.c, ns32k-tdep.c, mn10300-tdep.c: Update.
	* m68k-tdep.c, i386-tdep.c, frv-tdep.c: Update.
	* cris-tdep.c, alpha-tdep.c: Update.
	* frame.c (set_unwind_by_pc, create_new_frame): Use either
	DEPRECATED_PC_IN_CALL_DUMMY or pc_in_dummy_frame.
	(get_prev_frame): Ditto.

Index: doc/ChangeLog
2002-12-01  Andrew Cagney  <ac131313@@redhat.com>

	* gdbint.texinfo (Target Architecture Definition): Delete
	PC_IN_CALL_DUMMY.
@
text
@d33 1
@


1.24
log
@2002-11-28  Andrew Cagney  <ac131313@@redhat.com>

	* gdbarch.sh (DEPRECATED_USE_GENERIC_DUMMY_FRAMES): Rename
	USE_GENERIC_DUMMY_FRAMES.
	* gdbarch.h, gdbarch.c: Regenerate.
	* valops.c, frame.c: Update.
	* config/z8k/tm-z8k.h, config/mn10200/tm-mn10200.h: Update.
	* config/m32r/tm-m32r.h, config/h8500/tm-h8500.h: Update.
	* config/pa/tm-hppa.h, blockframe.c: Update.
	* vax-tdep.c, sparc-tdep.c, ns32k-tdep.c: Ditto.
	* m68k-tdep.c, alpha-tdep.c: Ditto.

	* arm-tdep.c: Eliminate USE_GENERIC_DUMMY_FRAMES as always 1.
	* mips-tdep.c: Ditto.

Index: doc/ChangeLog
2002-11-28  Andrew Cagney  <ac131313@@redhat.com>

	* gdbint.texinfo (Host Definition): Delete documentation on
	USE_GENERIC_DUMMY_FRAMES.
@
text
@d32 1
a32 1
#define PC_IN_CALL_DUMMY(pc, sp, frame_address) deprecated_pc_in_call_dummy_on_stack (pc, sp, frame_address)
d519 1
a519 1
  (PC_IN_CALL_DUMMY((pc), (sp), (frame_address)) && \
@


1.23
log
@2002-11-27  Andrew Cagney  <cagney@@redhat.com>

	* config/z8k/tm-z8k.h (PC_IN_CALL_DUMMY): Update definition to use
	deprecated pc_in_call_dummy function.
	* config/sparc/tm-sparc.h (PC_IN_CALL_DUMMY): Ditto.
	* config/sparc/tm-sp64.h (PC_IN_CALL_DUMMY): Ditto.
	* config/pa/tm-hppa.h (PC_IN_CALL_DUMMY): Ditto.
	* config/mn10200/tm-mn10200.h (PC_IN_CALL_DUMMY): Ditto.
	* config/h8500/tm-h8500.h (PC_IN_CALL_DUMMY): Ditto.
@
text
@d30 1
a30 1
#define USE_GENERIC_DUMMY_FRAMES 0
@


1.22
log
@2002-11-26  Andrew Cagney  <ac131313@@redhat.com>

	* config/h8500/tm-h8500.h (CALL_DUMMY_LOCATION): Define as ON_STACK.
	(USE_GENERIC_DUMMY_FRAMES): Define as zero.
	(PC_IN_CALL_DUMMY): Define as pc_in_call_dummy_on_stack.
	* config/mn10200/tm-mn10200.h (PC_IN_CALL_DUMMY): Define as
	pc_in_call_dummy_at_entry_point.
	* config/pa/tm-hppa.h (CALL_DUMMY_LOCATION): Define as ON_STACK.
	(USE_GENERIC_DUMMY_FRAMES): Define as zero.
	(PC_IN_CALL_DUMMY): Define as pc_in_call_dummy_on_stack.
	* config/pa/tm-hppa64.h (CALL_DUMMY_LOCATION): Delete undefine.
	* config/sparc/tm-sparc.h (PC_IN_CALL_DUMMY): Define as
	pc_in_call_dummy_on_stack.
	* config/sparc/tm-sp64.h (PC_IN_CALL_DUMMY): Redefine as
	pc_in_call_dummy_at_entry_point and pc_in_call_dummy_on_stack.
	* config/z8k/tm-z8k.h (CALL_DUMMY_LOCATION): Define as ON_STACK.
	(USE_GENERIC_DUMMY_FRAMES): Define as zero.
	(PC_IN_CALL_DUMMY): Defile as pc_in_call_dummy_on_stack.
@
text
@d32 1
a32 1
#define PC_IN_CALL_DUMMY(pc, sp, frame_address) pc_in_call_dummy_on_stack (pc, sp, frame_address)
@


1.21
log
@        Preparation work to convert the hppa targets to multiarch partial.

        * hppa-tdep.c: Add new functions replacing macro bodies from
        config/pa/tm-hppa.h. These function will be used to initialize
        the gdbarch structure. Import some comments from tm-hppa.h,
        and place them where appropriate, to avoid loosing them when
        we cleanup this file.
        (hppa_reg_struct_has_addr): New function.
        (hppa_inner_than): New function.
        (hppa_stack_align): New function.
        (hppa_pc_requires_run_before_use): New function.
        (hppa_instruction_nullified): New function.
        (hppa_register_byte): New function.
        (hppa_register_virtual_type): New function.
        (hppa_store_struct_return): New function.
        (hppa_cannot_store_register): New function.
        (hppa_frame_args_address): New function.
        (hppa_frame_locals_address): New function.
        (hppa_smash_text_address): New function.
        (hppa_coerce_float_to_double): New function. Requires the inclusion
        of "language.h".

        * Makefile.in (hppa-tdep.o): Add dependency on language.h.

        * tm-hppa.h (REG_STRUCT_HAS_ADDR): Change the definition of this
        gdbarch-eligible macro to a call to the new associated function
        created in hppa-tdep.c.
        (INNER_THAN): Likewise.
        (STACK_ALIGN): Likewise.
        (PC_REQUIRES_RUN_BEFORE_USE): Likewise.
        (INSTRUCTION_NULLIFIED): Likewise.
        (REGISTER_BYTE): Likewise.
        (REGISTER_VIRTUAL_TYPE): Likewise.
        (STORE_STRUCT_RETURN): Likewise.
        (CANNOT_STORE_REGISTER): Likewise.
        (FRAME_ARGS_ADDRESS): Likewise.
        (FRAME_LOCALS_ADDRESS): Likewise.
        (SMASH_TEXT_ADDRESS): Likewise.
        (COERCE_FLOAT_TO_DOUBLE): Likewise.
        (ABOUT_TO_RETURN): Delete, as no longer used.
@
text
@d29 5
@


1.20
log
@       Put in place the framework necessary for multiarching the hppa targets.
       * hppa-tdep.c (hppa_gdbarch_init): New function.
       (hppa_dump_tdep): New function.
       (_initialize_hppa_tdep): Register the hppa gdbarch init function and
       tdep structure dumper.
       * config/pa/tm-hppa.h (GDB_MULTI_ARCH): New macro, defined to 0
       until the multi-arching conversion has partially been completed.
@
text
@d55 2
a56 6
/* On the PA, any pass-by-value structure > 8 bytes is actually
   passed via a pointer regardless of its type or the compiler
   used.  */

#define REG_STRUCT_HAS_ADDR(gcc_p,type) \
  (TYPE_LENGTH (type) > 8)
a84 5
/* Immediately after a function call, return the saved pc.
   Can't go through the frames for this because on some machines
   the new frame is not set up until the new function executes
   some instructions.  */

d89 2
a90 2
/* Stack grows upward */
#define INNER_THAN(lhs,rhs) ((lhs) > (rhs))
d92 2
a93 3
/* elz: adjust the quantity to the next highest value which is 64-bit aligned.
   This is used in valops.c, when the sp is adjusted.
   On hppa the sp must always be kept 64-bit aligned */
a94 1
#define STACK_ALIGN(arg) ( ((arg)%8) ? (((arg)+7)&-8) : (arg))
d110 2
a111 29
/* Sometimes we may pluck out a minimal symbol that has a negative
   address.

   An example of this occurs when an a.out is linked against a foo.sl.
   The foo.sl defines a global bar(), and the a.out declares a signature
   for bar().  However, the a.out doesn't directly call bar(), but passes
   its address in another call.

   If you have this scenario and attempt to "break bar" before running,
   gdb will find a minimal symbol for bar() in the a.out.  But that
   symbol's address will be negative.  What this appears to denote is
   an index backwards from the base of the procedure linkage table (PLT)
   into the data linkage table (DLT), the end of which is contiguous
   with the start of the PLT.  This is clearly not a valid address for
   us to set a breakpoint on.

   Note that one must be careful in how one checks for a negative address.
   0xc0000000 is a legitimate address of something in a shared text
   segment, for example.  Since I don't know what the possible range
   is of these "really, truly negative" addresses that come from the
   minimal symbols, I'm resorting to the gross hack of checking the
   top byte of the address for all 1's.  Sigh.
 */
#define PC_REQUIRES_RUN_BEFORE_USE(pc) \
  (! target_has_stack && (pc & 0xFF000000))

/* return instruction is bv r0(rp) or bv,n r0(rp) */

#define ABOUT_TO_RETURN(pc) ((read_memory_integer (pc, 4) | 0x2) == 0xE840C002)
d229 2
a230 3
#define INSTRUCTION_NULLIFIED \
    (((int)read_register (IPSW_REGNUM) & 0x00200000) && \
     !((int)read_register (FLAGS_REGNUM) & 0x2))
d243 2
a244 4
/* Index within `registers' of the first byte of the space for
   register N.  */

#define REGISTER_BYTE(N) (N) * 4
d259 2
a260 2
/* Return the GDB type object for the "standard" data type
   of data in register N.  */
d262 2
a263 7
#define REGISTER_VIRTUAL_TYPE(N) \
 ((N) < FP4_REGNUM ? builtin_type_int : builtin_type_float)

/* Store the address of the place in which to copy the structure the
   subroutine will return.  This is called from call_function. */

#define STORE_STRUCT_RETURN(ADDR, SP) {write_register (28, (ADDR)); }
d317 2
a318 15
/*
 * This macro defines the register numbers (from REGISTER_NAMES) that
 * are effectively unavailable to the user through ptrace().  It allows
 * us to include the whole register set in REGISTER_NAMES (inorder to
 * better support remote debugging).  If it is used in
 * fetch/store_inferior_registers() gdb will not complain about I/O errors
 * on fetching these registers.  If all registers in REGISTER_NAMES
 * are available, then return false (0).
 */

#define CANNOT_STORE_REGISTER(regno)            \
                   ((regno) == 0) ||     \
                   ((regno) == PCSQ_HEAD_REGNUM) || \
                   ((regno) >= PCSQ_TAIL_REGNUM && (regno) < IPSW_REGNUM) ||  \
                   ((regno) > IPSW_REGNUM && (regno) < FP4_REGNUM)
d351 5
a355 1
#define FRAME_ARGS_ADDRESS(fi) ((fi)->frame)
a356 1
#define FRAME_LOCALS_ADDRESS(fi) ((fi)->frame)
d538 2
a539 7
/* The low two bits of the PC on the PA contain the privilege level.  Some
   genius implementing a (non-GCC) compiler apparently decided this means
   that "addresses" in a text section therefore include a privilege level,
   and thus symbol tables should contain these bits.  This seems like a
   bonehead thing to do--anyway, it seems to work for our purposes to just
   ignore those bits.  */
#define SMASH_TEXT_ADDRESS(addr) ((addr) &= ~0x3)
d688 1
a688 8
   passed as doubles and then converted in the callee.

   For the pa, it appears that the debug info marks the parameters as
   floats regardless of whether the function is prototyped, but the actual
   values are passed as doubles for the non-prototyped case and floats for
   the prototyped case.  Thus we choose to make the non-prototyped case work
   for C and break the prototyped case, since the non-prototyped case is
   probably much more common.  (FIXME). */
d690 4
a693 1
#define COERCE_FLOAT_TO_DOUBLE(formal, actual) (current_language -> la_language == language_c)
@


1.19
log
@2002-10-26  Andrew Cagney  <cagney@@redhat.com>

	* gdbint.texinfo (Target Architecture Definition): Delete
	definition of DO_REGISTERS_INFO.

2002-10-26  Andrew Cagney  <cagney@@redhat.com>

	* gdbarch.sh (DEPRECATED_DO_REGISTERS_INFO): Rename
	DO_REGISTERS_INFO.
	gdbarch.h, gdbarch.c: Re-generate.
	* infcmd.c (default_print_registers_info): Update reference.
	* mips-tdep.c (mips_gdbarch_init): Set deprecated_do_registers_info.
	(mips_dump_tdep): Do not print DO_REGISTERS_INFO.
	* sh-tdep.c (sh_gdbarch_init): Ditto.
	* mn10300-tdep.c (mn10300_gdbarch_init): Ditto.
	* h8300-tdep.c (h8300_gdbarch_init): Ditto.
@
text
@d27 2
@


1.18
log
@Index: ChangeLog
===================================================================
RCS file: /cvs/src/src/gdb/ChangeLog,v
retrieving revision 1.3144
diff -u -r1.3144 ChangeLog
--- ChangeLog	23 Aug 2002 23:05:38 -0000	1.3144
+++ ChangeLog	23 Aug 2002 23:14:45 -0000
@@@@ -1,3 +1,53 @@@@
2002-08-23  Andrew Cagney  <cagney@@redhat.com>

	* gdbarch.sh (STORE_RETURN_VALUE): Add regcache parameter.
	(DEPRECATED_STORE_RETURN_VALUE): New method.
	(EXTRACT_RETURN_VALUE): Make buffer parameter a void pointer.
	* gdbarch.h, gdbarch.c: Re-generate.

	* values.c (set_return_value): Pass current_regcache to
	STORE_RETURN_VALUE.
	* arch-utils.h (legacy_store_return_value): Declare.
	* arch-utils.c (legacy_store_return_value): New function.
	(legacy_extract_return_value): Update parameters.

	* config/pa/tm-hppa.h (DEPRECATED_STORE_RETURN_VALUE): Rename
	STORE_RETURN_VALUE.
	* config/pa/tm-hppa64.h (DEPRECATED_STORE_RETURN_VALUE): Ditto.
	* config/sparc/tm-sparc.h (DEPRECATED_STORE_RETURN_VALUE): Ditto.
	* config/z8k/tm-z8k.h (DEPRECATED_STORE_RETURN_VALUE): Ditto.
	* config/sparc/tm-sparclet.h (DEPRECATED_STORE_RETURN_VALUE): Ditto.
	* config/mn10200/tm-mn10200.h (DEPRECATED_STORE_RETURN_VALUE): Ditto.
	* config/m68k/tm-linux.h (DEPRECATED_STORE_RETURN_VALUE): Ditto.
	* config/m68k/tm-delta68.h (DEPRECATED_STORE_RETURN_VALUE): Ditto.
	* config/m32r/tm-m32r.h (DEPRECATED_STORE_RETURN_VALUE): Ditto.
	* config/h8500/tm-h8500.h (DEPRECATED_STORE_RETURN_VALUE): Ditto.
	* config/h8300/tm-h8300.h (DEPRECATED_STORE_RETURN_VALUE): Ditto.

	* m68hc11-tdep.c (m68hc11_gdbarch_init): Update.
	* i386-tdep.c (i386_extract_return_value): Update.
	* arch-utils.c (legacy_extract_return_value): Update.
	* frv-tdep.c (frv_gdbarch_init): Update.
	* cris-tdep.c (cris_gdbarch_init): Update.
	* d10v-tdep.c (d10v_gdbarch_init): Update.
	* rs6000-tdep.c (rs6000_gdbarch_init): Update.
	* m68k-tdep.c (m68k_gdbarch_init): Update.
	* mcore-tdep.c (mcore_gdbarch_init): Update.
	* mn10300-tdep.c (mn10300_gdbarch_init): Update.
	* s390-tdep.c (s390_gdbarch_init): Update.
	* sparc-tdep.c (sparc_gdbarch_init): Update.
	* sh-tdep.c (sh_gdbarch_init): Update.
	* x86-64-tdep.c (x86_64_gdbarch_init): Update.
	* v850-tdep.c (v850_gdbarch_init): Update.
	* avr-tdep.c (avr_gdbarch_init): Update.
	* ia64-tdep.c (ia64_gdbarch_init): Update.
	* ns32k-tdep.c (ns32k_gdbarch_init): Update.
	* vax-tdep.c (vax_gdbarch_init): Update.
	* alpha-tdep.c (alpha_gdbarch_init): Update.
	* arm-tdep.c (arm_gdbarch_init): Update.
	* mips-tdep.c (mips_gdbarch_init): Update.
	* i386-tdep.c (i386_gdbarch_init): Update.

Index: doc/ChangeLog
2002-08-21  Andrew Cagney  <cagney@@redhat.com>

	* gdbint.texinfo (Target Architecture Definition): Update
	STORE_RETURN_VALUE, mention regcache.
@
text
@d252 1
a252 1
/* Define DO_REGISTERS_INFO() to do machine-specific formatting
d255 1
a255 1
#define DO_REGISTERS_INFO(_regnum, fp) pa_do_registers_info (_regnum, fp)
@


1.18.10.1
log
@Merge drow-cplus-branch to:
  cvs rtag -D 2003-12-14 00:00:00 UTC drow-cplus-merge-20031214 gdb+dejagnu
@
text
@d3 1
a3 1
   1998, 1999, 2000, 2001, 2002, 2003 Free Software Foundation, Inc.
a26 14
/* Wonder if this is correct?  Should be using push_dummy_call().  */
#define DEPRECATED_DUMMY_WRITE_SP(SP) deprecated_write_sp (SP)

#define GDB_MULTI_ARCH 1

/* NOTE: cagney/2002-11-24: This is a guess.  */
#define DEPRECATED_USE_GENERIC_DUMMY_FRAMES 0
#define CALL_DUMMY_LOCATION ON_STACK
#define DEPRECATED_PC_IN_CALL_DUMMY(pc, sp, frame_address) deprecated_pc_in_call_dummy_on_stack (pc, sp, frame_address)
/* Hack, get around problem with including "arch-utils.h".  */
struct frame_info;
extern CORE_ADDR deprecated_init_frame_pc_default (int fromleaf, struct frame_info *prev);
#define DEPRECATED_INIT_FRAME_PC(l,f) (deprecated_init_frame_pc_default (l, f))

d35 71
d108 1
a108 2
const unsigned char *hppa_breakpoint_from_pc (CORE_ADDR *pcptr, int *lenptr);
#define BREAKPOINT_FROM_PC(PCPTR,LENPTR) hppa_breakpoint_from_pc ((PCPTR), (LENPTR))
d111 69
a179 2
extern int hppa_pc_requires_run_before_use (CORE_ADDR pc);
#define PC_REQUIRES_RUN_BEFORE_USE(pc) hppa_pc_requires_run_before_use (pc)
d192 3
d209 1
d217 25
d252 2
a253 2
/* Define DEPRECATED_DO_REGISTERS_INFO() to do machine-specific
   formatting of register dumps. */
d255 1
a255 1
#define DEPRECATED_DO_REGISTERS_INFO(_regnum, fp) pa_do_registers_info (_regnum, fp)
d258 5
d265 3
a267 2
extern int hppa_instruction_nullified (void);
#define INSTRUCTION_NULLIFIED hppa_instruction_nullified ()
d270 169
a438 3
extern void hppa_frame_init_saved_regs (struct frame_info *);
#define DEPRECATED_FRAME_INIT_SAVED_REGS(FI) \
  hppa_frame_init_saved_regs (FI)
d442 5
d509 8
d525 1
d528 36
d567 2
a568 2
#define DEPRECATED_CALL_DUMMY_HAS_COMPLETED(pc, sp, frame_address) \
  (DEPRECATED_PC_IN_CALL_DUMMY((pc), (sp), (frame_address)) && \
d571 9
a579 2
/* Insert the specified number of args and function address into a
   call sequence of the above form stored at DUMMYNAME.
d581 18
a598 13
   On the hppa we need to call the stack dummy through $$dyncall.
   Therefore our version of DEPRECATED_FIX_CALL_DUMMY takes an extra
   argument, real_pc, which is the location where gdb should start up
   the inferior to do the function call.  */

/* FIXME: brobecker 2002-12-26.  This macro is going to cause us some
   problems before we can go to multiarch partial as it has been
   diverted on HPUX to return the value of the PC!  */
/* NOTE: cagney/2003-05-03: This has been replaced by push_dummy_code.
   Hopefully that has all the parameters HP/UX needs.  */
#define DEPRECATED_FIX_CALL_DUMMY hppa_fix_call_dummy
extern CORE_ADDR hppa_fix_call_dummy (char *, CORE_ADDR, CORE_ADDR, int,
		                      struct value **, struct type *, int);
d602 2
d662 19
d723 15
d741 1
d743 14
@


1.18.8.1
log
@2002-11-15  David Carlton  <carlton@@math.stanford.edu>

	* Merge from mainline; tag is carlton_dictionary-20021115-merge.
@
text
@a26 2
#define GDB_MULTI_ARCH 0

d53 6
a58 2
extern int hppa_reg_struct_has_addr (int gcc_p, struct type *type);
#define REG_STRUCT_HAS_ADDR(gcc_p,type) hppa_reg_struct_has_addr (gcc_p,type)
d87 5
d96 2
a97 2
extern int hppa_inner_than (CORE_ADDR lhs, CORE_ADDR rhs);
#define INNER_THAN(lhs,rhs) hppa_inner_than(lhs,rhs)
d99 3
a101 2
extern CORE_ADDR hppa_stack_align (CORE_ADDR sp);
#define STACK_ALIGN(sp) hppa_stack_align (sp)
d103 1
d119 29
a147 2
extern int hppa_pc_requires_run_before_use (CORE_ADDR pc);
#define PC_REQUIRES_RUN_BEFORE_USE(pc) hppa_pc_requires_run_before_use (pc)
d252 1
a252 1
/* Define DEPRECATED_REGISTERS_INFO() to do machine-specific formatting
d255 1
a255 1
#define DEPRECATED_REGISTERS_INFO(_regnum, fp) pa_do_registers_info (_regnum, fp)
d265 3
a267 2
extern int hppa_instruction_nullified (void);
#define INSTRUCTION_NULLIFIED hppa_instruction_nullified ()
d280 4
a283 2
extern int hppa_register_byte (int reg_nr);
#define REGISTER_BYTE(N) hppa_register_byte (N)
d298 2
a299 2
extern struct type * hppa_register_virtual_type (int reg_nr);
#define REGISTER_VIRTUAL_TYPE(N) hppa_register_virtual_type (N)
d301 7
a307 2
extern void hppa_store_struct_return (CORE_ADDR addr, CORE_ADDR sp);
#define STORE_STRUCT_RETURN(ADDR, SP) hppa_store_struct_return (ADDR, SP)
d361 15
a375 2
extern int hppa_cannot_store_register (int regnum);
#define CANNOT_STORE_REGISTER(regno) hppa_cannot_store_register (regno)
d408 1
a408 5
extern CORE_ADDR hppa_frame_args_address (struct frame_info *fi);
#define FRAME_ARGS_ADDRESS(fi) hppa_frame_args_address (fi)

extern CORE_ADDR hppa_frame_locals_address (struct frame_info *fi);
#define FRAME_LOCALS_ADDRESS(fi) hppa_frame_locals_address (fi)
d410 1
d592 7
a598 2
extern CORE_ADDR hppa_smash_text_address (CORE_ADDR addr);
#define SMASH_TEXT_ADDRESS(addr) hppa_smash_text_address (addr)
d747 8
a754 1
   passed as doubles and then converted in the callee.  */
d756 1
a756 4
extern int hppa_coerce_float_to_double (struct type *formal,
                                        struct type *actual);
#define COERCE_FLOAT_TO_DOUBLE(formal, actual) \
  hppa_coerce_float_to_double (formal, actual)
@


1.18.8.2
log
@2002-12-23  David Carlton  <carlton@@math.stanford.edu>

	* Merge from mainline; tag is carlton_dictionary-20021223-merge.
@
text
@a28 6
/* NOTE: cagney/2002-11-24: This is a guess.  */
#define DEPRECATED_USE_GENERIC_DUMMY_FRAMES 0
#define CALL_DUMMY_LOCATION ON_STACK
#define DEPRECATED_PC_IN_CALL_DUMMY(pc, sp, frame_address) deprecated_pc_in_call_dummy_on_stack (pc, sp, frame_address)
#define DEPRECATED_INIT_FRAME_PC(l,f) (init_frame_pc_default (l, f))

d514 1
a514 1
  (DEPRECATED_PC_IN_CALL_DUMMY((pc), (sp), (frame_address)) && \
@


1.18.8.3
log
@2003-02-07  David Carlton  <carlton@@math.stanford.edu>

	* Merge with mainline; tag is carlton_dictionary-20030207-merge.
@
text
@d3 1
a3 1
   1998, 1999, 2000, 2001, 2002, 2003 Free Software Foundation, Inc.
a60 1
#if !GDB_MULTI_ARCH
a62 1
#endif
a66 1
#if !GDB_MULTI_ARCH
a67 1
#endif
a71 1
#if !GDB_MULTI_ARCH
a73 1
#endif
d78 2
a79 4
#if !GDB_MULTI_ARCH
#define	SKIP_TRAMPOLINE_CODE(pc) hppa_skip_trampoline_code (pc)
extern CORE_ADDR hppa_skip_trampoline_code (CORE_ADDR);
#endif
a82 1
#if !GDB_MULTI_ARCH
d84 2
a85 3
   hppa_in_solib_call_trampoline (pc, name)
extern int hppa_in_solib_call_trampoline (CORE_ADDR, char *);
#endif
a86 1
#if !GDB_MULTI_ARCH
d88 2
a89 3
  hppa_in_solib_return_trampoline (pc, name)
extern int hppa_in_solib_return_trampoline (CORE_ADDR, char *);
#endif
a90 1
#if !GDB_MULTI_ARCH
d92 2
a93 3
#define SAVED_PC_AFTER_CALL(frame) hppa_saved_pc_after_call (frame)
extern CORE_ADDR hppa_saved_pc_after_call (struct frame_info *);
#endif
a94 1
#if !GDB_MULTI_ARCH
a96 1
#endif
a97 1
#if !GDB_MULTI_ARCH
a99 1
#endif
a100 1
#if !GDB_MULTI_ARCH
a101 1
#endif
a113 1
#if !GDB_MULTI_ARCH
a114 1
#endif
a122 1
#if !GDB_MULTI_ARCH
a123 1
#endif
a126 1
#if !GDB_MULTI_ARCH
a127 1
#endif
a161 1
#if !GDB_MULTI_ARCH
a163 2
#endif
#if !GDB_MULTI_ARCH
a164 1
#endif
a178 1
#if !GDB_MULTI_ARCH
a179 1
#endif
a187 1
#if !GDB_MULTI_ARCH
a188 2
#endif
#if !GDB_MULTI_ARCH
a189 1
#endif
d222 2
a223 2
/* Define DEPRECATED_DO_REGISTERS_INFO() to do machine-specific
   formatting of register dumps. */
d225 1
a225 1
#define DEPRECATED_DO_REGISTERS_INFO(_regnum, fp) pa_do_registers_info (_regnum, fp)
d243 1
a243 4
#if !GDB_MULTI_ARCH
extern int hppa_register_raw_size (int reg_nr);
#define REGISTER_RAW_SIZE(N) hppa_register_raw_size (N)
#endif
a246 1
#if !GDB_MULTI_ARCH
a247 1
#endif
a248 1
#if !GDB_MULTI_ARCH
a250 1
#endif
a254 1
#if !GDB_MULTI_ARCH
a255 1
#endif
a258 1
#if !GDB_MULTI_ARCH
a259 1
#endif
a262 1
#if !GDB_MULTI_ARCH
a263 1
#endif
a264 1
#if !GDB_MULTI_ARCH
a266 1
#endif
a267 1
#if !GDB_MULTI_ARCH
a269 1
#endif
a274 1
#if !GDB_MULTI_ARCH
a277 1
#endif
a289 1
#if !GDB_MULTI_ARCH
a291 1
#endif
d296 1
a296 1
#if !GDB_MULTI_ARCH
a299 1
#endif
d301 4
a304 2
#if !GDB_MULTI_ARCH
extern CORE_ADDR hppa_extract_struct_value_address (char *regbuf);
d306 1
a306 2
  hppa_extract_struct_value_address (REGBUF)
#endif
a322 1
#if !GDB_MULTI_ARCH
a324 1
#endif
d326 2
a327 4
#if !GDB_MULTI_ARCH
#define INIT_EXTRA_FRAME_INFO(fromleaf, frame) hppa_init_extra_frame_info (fromleaf, frame)
extern void hppa_init_extra_frame_info (int, struct frame_info *);
#endif
d339 2
a340 4
#if !GDB_MULTI_ARCH
#define FRAME_CHAIN(thisframe) hppa_frame_chain (thisframe)
extern CORE_ADDR hppa_frame_chain (struct frame_info *);
#endif
a341 1
#if !GDB_MULTI_ARCH
a343 1
#endif
a349 1
#if !GDB_MULTI_ARCH
d351 2
a352 3
  (hppa_frameless_function_invocation (FI))
extern int hppa_frameless_function_invocation (struct frame_info *);
#endif
a353 1
#if !GDB_MULTI_ARCH
a355 1
#endif
a356 1
#if !GDB_MULTI_ARCH
a358 1
#endif
a359 1
#if !GDB_MULTI_ARCH
a361 1
#endif
d363 8
a370 4
#if !GDB_MULTI_ARCH
extern int hppa_frame_num_args (struct frame_info *frame);
#define FRAME_NUM_ARGS(fi) hppa_frame_num_args (fi)
#endif
a371 1
#if !GDB_MULTI_ARCH
a372 1
#endif
d376 2
a377 2
extern void hppa_frame_find_saved_regs (struct frame_info *,
					struct frame_saved_regs *);
d384 2
a385 7
/* FIXME: brobecker 2002-12-26.  This macro definition takes advantage
   of the fact that PUSH_DUMMY_FRAME is called within a function where
   a variable inf_status of type struct inferior_status * is defined.
   Ugh!  Until this is fixed, we will not be able to move to multiarch
   partial.  */
#define PUSH_DUMMY_FRAME hppa_push_dummy_frame (inf_status)
extern void hppa_push_dummy_frame (struct inferior_status *);
a388 1
#if !GDB_MULTI_ARCH
a390 1
#endif
a476 1
#if !GDB_MULTI_ARCH
a477 1
#endif
a481 3
/* FIXME: brobecker 2002-12-26.  PA_LEVEL_0 is only defined for the
   hppa-pro target, which should be obsoleted soon.  The following
   section will therefore not be included in the multiarch conversion.  */
d512 1
a512 1
#endif /* defined PA_LEVEL_0 */
a513 1
#if !GDB_MULTI_ARCH
a514 1
#endif
a532 3
/* FIXME: brobecker 2002-12-26.  This macro is going to cause us some
   problems before we can go to multiarch partial as it has been diverted
   on HPUX to return the value of the PC!  */
a533 2
extern CORE_ADDR hppa_fix_call_dummy (char *, CORE_ADDR, CORE_ADDR, int,
		                      struct value **, struct type *, int);
d535 4
a538 1
#if !GDB_MULTI_ARCH
d541 2
a542 4
extern CORE_ADDR hppa_push_arguments (int, struct value **, CORE_ADDR, int,
				      CORE_ADDR);
#endif

a543 1
#if !GDB_MULTI_ARCH
a545 1
#endif
a548 1
#if !GDB_MULTI_ARCH
a549 1
#endif
d676 2
a677 4
#if !GDB_MULTI_ARCH
#define TARGET_READ_PC(pid) hppa_target_read_pc (pid)
extern CORE_ADDR hppa_target_read_pc (ptid_t);
#endif
d679 2
a680 4
#if !GDB_MULTI_ARCH
#define TARGET_WRITE_PC(v,pid) hppa_target_write_pc (v,pid)
extern void hppa_target_write_pc (CORE_ADDR, ptid_t);
#endif
d682 2
a683 4
#if !GDB_MULTI_ARCH
#define TARGET_READ_FP() hppa_target_read_fp ()
extern CORE_ADDR hppa_target_read_fp (void);
#endif
d688 1
d690 10
@


1.18.8.4
log
@2003-03-05  David Carlton  <carlton@@math.stanford.edu>

	* Merge with mainline.  Tag is carlton_dictionary-20030305-merge.
@
text
@d305 1
a305 1
#define DEPRECATED_MAX_REGISTER_RAW_SIZE 4
d311 1
a311 1
#define DEPRECATED_MAX_REGISTER_VIRTUAL_SIZE 8
d386 1
a386 1
#define DEPRECATED_INIT_EXTRA_FRAME_INFO(fromleaf, frame) hppa_init_extra_frame_info (fromleaf, frame)
d456 5
a460 5
   of the fact that DEPRECATED_PUSH_DUMMY_FRAME is called within a
   function where a variable inf_status of type struct inferior_status
   * is defined.  Ugh!  Until this is fixed, we will not be able to
   move to multiarch partial.  */
#define DEPRECATED_PUSH_DUMMY_FRAME hppa_push_dummy_frame (inf_status)
@


1.18.8.5
log
@2003-04-16  David Carlton  <carlton@@bactrian.org>

	* Merge with mainline; tag is carlton_dictionary-20030416-merge.
@
text
@a26 3
/* Wonder if this is correct?  Should be using push_dummy_call().  */
#define DEPRECATED_DUMMY_WRITE_SP(SP) generic_target_write_sp (SP)

d104 2
a105 2
#undef	DEPRECATED_SAVED_PC_AFTER_CALL
#define DEPRECATED_SAVED_PC_AFTER_CALL(frame) hppa_saved_pc_after_call (frame)
d119 4
d393 2
a394 2
/* DEPRECATED_FRAME_CHAIN takes a frame's nominal address and produces
   the frame's chain-pointer.  */
d401 1
a401 1
#define DEPRECATED_FRAME_CHAIN(thisframe) hppa_frame_chain (thisframe)
d407 1
a407 1
#define DEPRECATED_FRAME_CHAIN_VALID(chain, thisframe) hppa_frame_chain_valid (chain, thisframe)
d423 1
a423 1
#define DEPRECATED_FRAME_SAVED_PC(FRAME) hppa_frame_saved_pc (FRAME)
d445 5
a449 3
extern void hppa_frame_init_saved_regs (struct frame_info *);
#define DEPRECATED_FRAME_INIT_SAVED_REGS(FI) \
  hppa_frame_init_saved_regs (FI)
d453 9
a461 4
#if !GDB_MULTI_ARCH
#define DEPRECATED_PUSH_DUMMY_FRAME hppa_push_dummy_frame ()
extern void hppa_push_dummy_frame (void);
#endif
d466 1
a466 1
#define DEPRECATED_POP_FRAME  hppa_pop_frame ()
d626 1
a626 1
#define DEPRECATED_PUSH_ARGUMENTS(nargs, args, sp, struct_return, struct_addr) \
@


1.18.8.6
log
@2003-04-30  David Carlton  <carlton@@bactrian.org>

	* cp-namespace.c (get_namespace_objfile): Copy the namespace
	objfile's name.

	* block.h (ALL_BLOCK_SYMBOLS): Move here from dictionary.h.
	* dictionary.c: Sync up with mainline version I just posted.
	Specifically, update some commments, and:
	(dict_create_hashed): Fiddle with nsyms updating.
	(dict_create_linear): Ditto.
	(dict_lookup): Delete.
	(iterator_next_hashed): Delete FIXME comment.
	(iter_name_first_hashed): Replace 'sym' by 'sym != NULL'.
	(iter_name_next_hashed): Replate 'next' by 'next != NULL'.
	* dictionary.h: Sync up with mainline version I just posted: add
	inclusion guards, delete declaration of dict_lookup, delete
	ALL_BLOCK_SYMBOLs.

	* Merge with mainline; tag is carlton_dictionary-20030430-merge.
@
text
@d30 1
a30 3
#ifndef GDB_MULTI_ARCH
#define GDB_MULTI_ARCH 1
#endif
d46 5
d64 58
d127 10
d140 14
d187 7
d208 3
d218 8
d263 5
d274 90
d379 65
d448 14
d464 2
d547 3
d552 41
d617 13
d632 4
d754 21
@


1.18.8.7
log
@2003-05-23  David Carlton  <carlton@@bactrian.org>

	* Merge with mainline; tag is carlton_dictionary-20030523-merge.
@
text
@d63 1
a63 2
const unsigned char *hppa_breakpoint_from_pc (CORE_ADDR *pcptr, int *lenptr);
#define BREAKPOINT_FROM_PC(PCPTR,LENPTR) hppa_breakpoint_from_pc ((PCPTR), (LENPTR))
d277 9
a285 7
/* Insert the specified number of args and function address into a
   call sequence of the above form stored at DUMMYNAME.

   On the hppa we need to call the stack dummy through $$dyncall.
   Therefore our version of DEPRECATED_FIX_CALL_DUMMY takes an extra
   argument, real_pc, which is the location where gdb should start up
   the inferior to do the function call.  */
d288 3
a290 5
   problems before we can go to multiarch partial as it has been
   diverted on HPUX to return the value of the PC!  */
/* NOTE: cagney/2003-05-03: This has been replaced by push_dummy_code.
   Hopefully that has all the parameters HP/UX needs.  */
#define DEPRECATED_FIX_CALL_DUMMY hppa_fix_call_dummy
@


1.18.8.8
log
@2003-06-27  David Carlton  <carlton@@kealia.com>

	* Merge with mainline; tag is carlton_dictionary-20030627-merge.
@
text
@d28 1
a28 1
#define DEPRECATED_DUMMY_WRITE_SP(SP) deprecated_write_sp (SP)
d48 13
d124 21
d188 3
d253 8
d354 19
@


1.18.8.9
log
@2003-08-05  David Carlton  <carlton@@kealia.com>

	* configure.in (build_warnings): Delete -Wformat-nonliteral.
	* configure (build_warnings): Ditto.

	* Merge with mainline; tag is carlton_dictionary-20030805-merge.
@
text
@a37 3
/* Hack, get around problem with including "arch-utils.h".  */
struct frame_info;
extern CORE_ADDR init_frame_pc_default (int fromleaf, struct frame_info *prev);
d56 22
@


1.18.8.10
log
@2003-09-17  David Carlton  <carlton@@kealia.com>

	* Merge with mainline; tag is carlton_dictionary-20030917-merge.
@
text
@d30 1
d32 1
@


1.18.8.11
log
@2003-11-11  David Carlton  <carlton@@kealia.com>

	* Merge with mainline; tag is carlton-dictionary-20031111-merge.
@
text
@d38 2
a39 2
extern CORE_ADDR deprecated_init_frame_pc_default (int fromleaf, struct frame_info *prev);
#define DEPRECATED_INIT_FRAME_PC(l,f) (deprecated_init_frame_pc_default (l, f))
d122 1
a122 1
struct value *hppa_value_returned_from_stack (struct type *valtype,
d124 1
a124 4
/* FIXME: cagney/2003-09-27: This method should now be redundant.
   Instead, when "struct return convention", the inferior function
   call code always saves and uses the struct return's stack address.  */
#define DEPRECATED_VALUE_RETURNED_FROM_STACK(valtype,addr) \
d208 1
a208 1
#define DEPRECATED_CALL_DUMMY_HAS_COMPLETED(pc, sp, frame_address) \
@


1.18.8.12
log
@2003-12-15  David Carlton  <carlton@@kealia.com>

	* Merge with mainline; tag is carlton_dictionary-20031215-merge.
	* cp-support.c (class_name_from_physname): Add DMGL_PARAMS to call
	to cplus_demangle.
	(method_name_from_physname): Ditto.
@
text
@d112 18
@


1.17
log
@2002-08-18  Andrew Cagney  <ac131313@@redhat.com>
* config/pa/tm-hppa.h (hppa_store_return_value): Declare.
(hppa_value_returned_from_stack): Declare.
(hppa_extract_return_value): Declare.
* config/pa/hppa.mt: New file.
* configure.tgt: Recognize hppa*-*-*.
* MAINTAINERS: Change HPPA target to hppa-elf.  Still broken.
@
text
@d336 1
a336 1
#define STORE_RETURN_VALUE(TYPE,VALBUF) \
@


1.16
log
@+	* gdbarch.sh (DEPRECATED_EXTRACT_RETURN_VALUE): Rename
+	EXTRACT_RETURN_VALUE.
+	(DEPRECATED_EXTRACT_STRUCT_VALUE_ADDRESS): Rename
+	EXTRACT_STRUCT_VALUE_ADDRESS.
+	* gdbarch.h, gdbarch.c: Regenerate.
+
+	* values.c (value_being_returned): Handle
+	DEPRECATED_EXTRACT_STRUCT_VALUE_ADDRESS.
+	(EXTRACT_RETURN_VALUE): Define as DEPRECATED_EXTRACT_RETURN_VALUE.
+
+	* arm-linux-tdep.c (arm_linux_init_abi): Update.
+	* arm-tdep.c (arm_gdbarch_init): Update.
+	* avr-tdep.c (avr_gdbarch_init): Update.
+	* cris-tdep.c (cris_gdbarch_init): Update.
+	* d10v-tdep.c (d10v_gdbarch_init): Update.
+	* ia64-tdep.c (ia64_gdbarch_init): Update.
+	* m68hc11-tdep.c (m68hc11_gdbarch_init): Update.
+	* rs6000-tdep.c (rs6000_gdbarch_init): Update.
+	* s390-tdep.c (s390_gdbarch_init): Update.
+	* sh-tdep.c (sh_gdbarch_init): Update.
+	* s390-tdep.c (s390_gdbarch_init): Update.
+	* sparc-tdep.c (sparc_gdbarch_init): Update.
+	* ns32k-tdep.c (ns32k_gdbarch_init): Update.
+	* v850-tdep.c (v850_gdbarch_init): Update.
+	* vax-tdep.c (vax_gdbarch_init): Update.
+	* x86-64-tdep.c (x86_64_gdbarch_init): Update.
+	* xstormy16-tdep.c (xstormy16_gdbarch_init): Update.
+
+	* config/arc/tm-arc.h: Update.
+	* config/d30v/tm-d30v.h: Update.
+	* config/fr30/tm-fr30.h: Update.
+	* config/h8300/tm-h8300.h: Update.
* config/h8500/tm-h8500.h: Update.
* config/i386/tm-i386.h: Update.
* config/i386/tm-ptx.h: Update.
* config/i386/tm-symmetry.h: Update.
* config/i960/tm-i960.h: Update.
* config/m32r/tm-m32r.h: Update.
* config/m68k/tm-delta68.h: Update.
* config/m68k/tm-linux.h: Update.
* config/m68k/tm-m68k.h: Update.
* config/m88k/tm-m88k.h: Update.
* config/mcore/tm-mcore.h: Update.
* config/mips/tm-mips.h: Update.
* config/mn10200/tm-mn10200.h: Update.
* config/pa/tm-hppa.h: Update.
* config/pa/tm-hppa64.h: Update.
* config/sparc/tm-sp64.h: Update.
* config/sparc/tm-sparc.h: Update.
* config/sparc/tm-sparclet.h: Update.
* config/z8k/tm-z8k.h: Update.
@
text
@d313 1
d334 2
d356 2
@


1.15
log
@* config/pa/tm-hppa.h (FRAME_CHAIN_COMBINE): Delete macro.
* blockframe.c (FRAME_CHAIN_COMBINE): Delete macro.
(get_prev_frame): Do not call FRAME_CHAIN_COMBINE.
* gdbint.texinfo (Target Architecture Definition): Remove
FRAME_CHAIN_COMBINE.
@
text
@d313 1
a313 1
#define EXTRACT_RETURN_VALUE(TYPE,REGBUF,VALBUF) \
d340 1
a340 1
#define EXTRACT_STRUCT_VALUE_ADDRESS(REGBUF) \
d344 9
a352 10
   This is defined only for the hppa, at this moment. 
   The above macro EXTRACT_STRUCT_VALUE_ADDRESS is not called anymore,
   because it assumes that on exit from a called function which returns
   a large structure on the stack, the address of the ret structure is 
   still in register 28. Unfortunately this register is usually overwritten
   by the called function itself, on hppa. This is specified in the calling
   convention doc. As far as I know, the only way to get the return value
   is to have the caller tell us where it told the callee to put it, rather
   than have the callee tell us.
 */
@


1.15.6.1
log
@Merge with mainline, kseitz_interps-20020619-merge.
@
text
@d313 1
a313 1
#define DEPRECATED_EXTRACT_RETURN_VALUE(TYPE,REGBUF,VALBUF) \
d340 1
a340 1
#define DEPRECATED_EXTRACT_STRUCT_VALUE_ADDRESS(REGBUF) \
d344 10
a353 9
   This is defined only for the hppa, at this moment.  The above macro
   DEPRECATED_EXTRACT_STRUCT_VALUE_ADDRESS is not called anymore,
   because it assumes that on exit from a called function which
   returns a large structure on the stack, the address of the ret
   structure is still in register 28. Unfortunately this register is
   usually overwritten by the called function itself, on hppa. This is
   specified in the calling convention doc. As far as I know, the only
   way to get the return value is to have the caller tell us where it
   told the callee to put it, rather than have the callee tell us.  */
@


1.15.6.2
log
@Merge with kseitz_interps-20020829-merge tag from trunk.
@
text
@a312 1
void hppa_extract_return_value (struct type *type, char *regbuf, char *valbuf);
d333 1
a333 3

extern void hppa_store_return_value (struct type *type, char *valbuf);
#define DEPRECATED_STORE_RETURN_VALUE(TYPE,VALBUF) \
a352 2
struct value *hppa_value_returned_from_stack (register struct type *valtype,
					      CORE_ADDR addr);
@


1.15.6.3
log
@merge from mainline
@
text
@d252 1
a252 1
/* Define DEPRECATED_REGISTERS_INFO() to do machine-specific formatting
d255 1
a255 1
#define DEPRECATED_REGISTERS_INFO(_regnum, fp) pa_do_registers_info (_regnum, fp)
@


1.15.4.1
log
@merge from trunk
@
text
@d313 1
a313 1
#define DEPRECATED_EXTRACT_RETURN_VALUE(TYPE,REGBUF,VALBUF) \
d340 1
a340 1
#define DEPRECATED_EXTRACT_STRUCT_VALUE_ADDRESS(REGBUF) \
d344 10
a353 9
   This is defined only for the hppa, at this moment.  The above macro
   DEPRECATED_EXTRACT_STRUCT_VALUE_ADDRESS is not called anymore,
   because it assumes that on exit from a called function which
   returns a large structure on the stack, the address of the ret
   structure is still in register 28. Unfortunately this register is
   usually overwritten by the called function itself, on hppa. This is
   specified in the calling convention doc. As far as I know, the only
   way to get the return value is to have the caller tell us where it
   told the callee to put it, rather than have the callee tell us.  */
@


1.14
log
@Eliminate TARGET_BYTE_ORDER.
@
text
@d379 2
a380 9
/* FRAME_CHAIN takes a frame's nominal address
   and produces the frame's chain-pointer.

   FRAME_CHAIN_COMBINE takes the chain pointer and the frame's nominal address
   and produces the nominal address of the caller frame.

   However, if FRAME_CHAIN_VALID returns zero,
   it means the given frame is the outermost one and has no caller.
   In that case, FRAME_CHAIN_COMBINE is not used.  */
a390 2

#define FRAME_CHAIN_COMBINE(chain, thisframe) (chain)
@


1.13
log
@Eliminate IEEE_FLOAT.
@
text
@a34 4
/* Target system byte order. */

#define	TARGET_BYTE_ORDER BFD_ENDIAN_BIG

@


1.12
log
@* config/pa/tm-hppa.h (DEPRECATED_CLEAN_UP_REGISTER_VALUE): Rename
CLEAN_UP_REGISTER_VALUE.
* regcache.c (supply_register): Update only call.
@
text
@a56 4
/* Watch out for NaNs */

#define IEEE_FLOAT (1)

@


1.11
log
@s/BIG_ENDIAN/BFD_ENDIAN_BIG/
@
text
@d254 1
a254 1
#define	CLEAN_UP_REGISTER_VALUE(regno, buf) \
@


1.10
log
@        * config/pa/tm-hppa.h (STORE_RETURN_VALUE): Use hppa_store_return_value.
        (EXTRACT_RETURN_VALUE): Similarly.
        * hppa-tdep.c (hppa_store_return_value): New function.
        (hppa_extract_return_value): New function.
@
text
@d37 1
a37 1
#define	TARGET_BYTE_ORDER	BIG_ENDIAN
@


1.9
log
@Tweeks from RDBrown to fix compiling on HP/UX using HP's compiler.
@
text
@d319 1
a319 7
   into VALBUF. 

   elz: changed what to return when length is > 4: the stored result is 
   in register 28 and in register 29, with the lower order word being in reg 29, 
   so we must start reading it from somehere in the middle of reg28

   FIXME: Not sure what to do for soft float here.  */
d322 1
a322 12
  { \
    if (TYPE_CODE (TYPE) == TYPE_CODE_FLT && !SOFT_FLOAT) \
      memcpy ((VALBUF), \
	      ((char *)(REGBUF)) + REGISTER_BYTE (FP4_REGNUM), \
	      TYPE_LENGTH (TYPE)); \
    else \
      memcpy ((VALBUF), \
	      (char *)(REGBUF) + REGISTER_BYTE (28) + \
	      (TYPE_LENGTH (TYPE) > 4 ? (8 - TYPE_LENGTH (TYPE)) : (4 - TYPE_LENGTH (TYPE))), \
	      TYPE_LENGTH (TYPE)); \
  }

d339 1
a339 6
   of type TYPE, given in virtual format.

   For software floating point the return value goes into the integer
   registers.  But we don't have any flag to key this on, so we always
   store the value into the integer registers, and if it's a float value,
   then we put it in the float registers too.  */
d342 1
a342 6
  write_register_bytes (REGISTER_BYTE (28),(VALBUF), TYPE_LENGTH (TYPE)) ; \
  if (!SOFT_FLOAT) \
    write_register_bytes ((TYPE_CODE(TYPE) == TYPE_CODE_FLT \
			   ? REGISTER_BYTE (FP4_REGNUM) \
			   : REGISTER_BYTE (28)),		\
			  (VALBUF), TYPE_LENGTH (TYPE))
@


1.8
log
@Phase 1 of the ptid_t changes.
@
text
@d571 1
a571 1
   registers (or floating point??), so we skip all that inter-space call stuff,
@


1.7
log
@Include regcache.h
@
text
@d770 1
a770 1
extern CORE_ADDR target_read_pc (int);
d773 1
a773 1
extern void target_write_pc (CORE_ADDR, int);
d775 1
a775 1
#define TARGET_READ_FP() target_read_fp (inferior_pid)
@


1.6
log
@Update/correct copyright notices.
@
text
@d25 2
@


1.5
log
@Multi-arch EXTRA_STACK_ALIGNMENT_NEEDED (nee NO_EXTRA_ALIGNMENT_NEEDED).
@
text
@d2 2
a3 1
   Copyright 1986, 1987, 1989-1993, 1995, 1999, 2000 Free Software Foundation, Inc. 
@


1.4
log
@PARAMS removal.
@
text
@d109 1
a109 1
#define NO_EXTRA_ALIGNMENT_NEEDED 1
@


1.3
log
@Bring IEEE_FLOAT under gdbarch's control.
* gdbarch.sh (IEEE_FLOAT): New entry.
* gdbarch.c, gdbarch.h: Regenerated.
* valprint.c (IEEE_FLOAT): Provide a default #definition for this.
(print_floating): Use IEEE_FLOAT as if it were an expression; use
the code specific to IEEE-format numbers whenever the value of
IEEE_FLOAT is non-zero.
* config/a29k/tm-a29k.h, config/alpha/tm-alpha.h,
config/arc/tm-arc.h, config/arm/tm-arm.h, config/fr30/tm-fr30.h,
config/h8300/tm-h8300.h, config/i386/tm-i386.h,
config/i960/tm-i960.h, config/m88k/tm-m88k.h,
config/mips/tm-mips.h, config/pa/tm-hppa.h,
config/sparc/tm-sparc.h, config/delta/tm-delta.h,
config/frv/tm-frv.h (IEEE_FLOAT): For all ports that #define
IEEE_FLOAT, make sure they give it the value (1).
@
text
@d73 1
a73 1
extern CORE_ADDR hppa_skip_prologue PARAMS ((CORE_ADDR));
d80 1
a80 1
extern CORE_ADDR skip_trampoline_code PARAMS ((CORE_ADDR, char *));
d86 1
a86 1
extern int in_solib_call_trampoline PARAMS ((CORE_ADDR, char *));
d90 1
a90 1
extern int in_solib_return_trampoline PARAMS ((CORE_ADDR, char *));
d99 1
a99 1
extern CORE_ADDR saved_pc_after_call PARAMS ((struct frame_info *));
d261 1
a261 1
extern void pa_do_registers_info PARAMS ((int, int));
d406 1
a406 1
extern void init_extra_frame_info PARAMS ((int, struct frame_info *));
d426 1
a426 1
extern CORE_ADDR frame_chain PARAMS ((struct frame_info *));
d428 1
a428 1
extern int hppa_frame_chain_valid PARAMS ((CORE_ADDR, struct frame_info *));
d440 1
a440 1
extern int frameless_function_invocation PARAMS ((struct frame_info *));
d442 1
a442 1
extern CORE_ADDR hppa_frame_saved_pc PARAMS ((struct frame_info * frame));
d462 1
a462 2
hppa_frame_find_saved_regs PARAMS ((struct frame_info *,
				    struct frame_saved_regs *));
d470 1
a470 1
extern void push_dummy_frame PARAMS ((struct inferior_status *));
d475 1
a475 1
extern void hppa_pop_frame PARAMS ((void));
d621 2
a622 2
  hppa_fix_call_dummy PARAMS ((char *, CORE_ADDR, CORE_ADDR, int,
			       struct value **, struct type *, int));
d627 1
a627 2
  hppa_push_arguments PARAMS ((int, struct value **, CORE_ADDR, int,
			       CORE_ADDR));
d761 3
a763 4
extern void target_write_pc
PARAMS ((CORE_ADDR, int))
     extern CORE_ADDR target_read_pc PARAMS ((int));
     extern CORE_ADDR skip_trampoline_code PARAMS ((CORE_ADDR, char *));
d767 1
a767 1
     extern CORE_ADDR target_read_pc PARAMS ((int));
d770 1
a770 1
     extern void target_write_pc PARAMS ((CORE_ADDR, int));
d773 1
a773 1
     extern CORE_ADDR target_read_fp PARAMS ((int));
d779 1
a779 1
     extern int hpread_adjust_stack_address PARAMS ((CORE_ADDR));
@


1.2
log
@Bring COERCE_FLOAT_TO_DOUBLE under gdbarch's control.
* valops.c (COERCE_FLOAT_TO_DOUBLE): Rework definition to be
more function-like.
(default_coerce_float_to_double, standard_coerce_float_to_double):
New functions.
(value_arg_coerce): Adjust for new definition.
* value.h (default_coerce_float_to_double,
standard_coerce_float_to_double): New declarations for the above.
* gdbarch.sh (coerce_float_to_double): New entry, replacing macro.
* gdbarch.c, gdbarch.h: Regenerated.
* tm-alpha.h, tm-fr30.h, tm-m32r.h, tm-mips.h, tm-hppa.h,
tm-rs6000.h, tm-sh.h, tm-sparc.h (COERCE_FLOAT_TO_DOUBLE): Change
definitions.
* mips-tdep.c (mips_coerce_float_to_double): Supply our own custom
function here.
(mips_gdbarch_init): Install that as our coerce_float_to_double
function.
@
text
@d56 1
a56 1
#define IEEE_FLOAT
@


1.1
log
@Initial revision
@
text
@d2 1
a2 2
   Copyright 1986, 1987, 1989, 1990, 1991, 1992, 1993, 1995
   Free Software Foundation, Inc. 
d7 1
a7 1
This file is part of GDB.
d9 14
a22 13
This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
a25 1
#ifdef __STDC__
a30 1
#endif
d69 1
a69 1
     
d73 2
a74 2
#define SKIP_PROLOGUE(pc) pc = skip_prologue (pc)
extern CORE_ADDR skip_prologue PARAMS ((CORE_ADDR));
d106 1
a106 1
   On hppa the sp must always be kept 64-bit aligned*/
d109 1
a109 1
#define NO_EXTRA_ALIGNMENT_NEEDED 1 
d146 1
a146 1
   */
d150 1
a150 1
/* return instruction is bv r0(rp) or bv,n r0(rp)*/
d213 2
a214 2
#define CR27_REGNUM 60          /* Base register for thread-local storage, cr27 */
#define FP0_REGNUM 64		/* floating point reg. 0 (fspr)*/
d217 4
a220 4
#define ARG0_REGNUM 26          /* The first argument of a callee. */
#define ARG1_REGNUM 25          /* The second argument of a callee. */
#define ARG2_REGNUM 24          /* The third argument of a callee. */
#define ARG3_REGNUM 23          /* The fourth argument of a callee. */
d230 16
a245 16
#define PSW_T   0x01000000      /* Taken Branch Trap Enable */
#define PSW_H   0x00800000      /* Higher-Privilege Transfer Trap Enable */
#define PSW_L   0x00400000      /* Lower-Privilege Transfer Trap Enable */
#define PSW_N   0x00200000      /* PC Queue Front Instruction Nullified */
#define PSW_X   0x00100000      /* Data Memory Break Disable */
#define PSW_B   0x00080000      /* Taken Branch in Previous Cycle */
#define PSW_C   0x00040000      /* Code Address Translation Enable */
#define PSW_V   0x00020000      /* Divide Step Correction */
#define PSW_M   0x00010000      /* High-Priority Machine Check Disable */
#define PSW_CB  0x0000ff00      /* Carry/Borrow Bits */
#define PSW_R   0x00000010      /* Recovery Counter Enable */
#define PSW_Q   0x00000008      /* Interruption State Collection Enable */
#define PSW_P   0x00000004      /* Protection ID Validation Enable */
#define PSW_D   0x00000002      /* Data Address Translation Enable */
#define PSW_I   0x00000001      /* External, Power Failure, Low-Priority */
                                /* Machine Check Interruption Enable */
d254 1
a254 1
      (buf)[3] &= ~0x3;	\
d265 1
a265 1
extern void pa_do_strcat_registers_info PARAMS ((int, int, GDB_FILE *, enum precision_type));
d348 1
a348 1
 */
d385 1
a385 1
*/
d438 2
a439 2
#define FRAMELESS_FUNCTION_INVOCATION(FI, FRAMELESS) \
  (FRAMELESS) = frameless_function_invocation(FI)
d442 1
a442 1
extern CORE_ADDR hppa_frame_saved_pc PARAMS ((struct frame_info *frame));
d453 1
a453 1
#define FRAME_NUM_ARGS(val,fi) (val = -1)
d464 1
a465 1

d470 1
a470 1
#define PUSH_DUMMY_FRAME push_dummy_frame (&inf_status)
d487 34
a520 34
; Call stack frame has already been built by gdb. Since we could be calling 
; a varargs function, and we do not have the benefit of a stub to put things in
; the right place, we load the first 4 word of arguments into both the general
; and fp registers.
call_dummy
	ldw -36(sp), arg0
	ldw -40(sp), arg1
	ldw -44(sp), arg2
	ldw -48(sp), arg3
	ldo -36(sp), r1
	fldws 0(0, r1), fr4
	fldds -4(0, r1), fr5
	fldws -8(0, r1), fr6
	fldds -12(0, r1), fr7
	ldil 0, r22			; FUNC_LDIL_OFFSET must point here
	ldo 0(r22), r22			; FUNC_LDO_OFFSET must point here
	ldsid (0,r22), r4
	ldil 0, r1			; SR4EXPORT_LDIL_OFFSET must point here
	ldo 0(r1), r1			; SR4EXPORT_LDO_OFFSET must point here
	ldsid (0,r1), r20
	combt,=,n r4, r20, text_space	; If target is in data space, do a
	ble 0(sr5, r22)			; "normal" procedure call
	copy r31, r2
	break 4, 8 
	mtsp r21, sr0
	ble,n 0(sr0, r22)
text_space				; Otherwise, go through _sr4export,
	ble (sr4, r1)			; which will return back here.
	stw r31,-24(r30)
	break 4, 8
	mtsp r21, sr0
	ble,n 0(sr0, r22)
	nop				; To avoid kernel bugs 
	nop				; and keep the dummy 8 byte aligned
d564 1
d572 1
a572 1
call_dummy
d574 13
a586 13
	ldw -36(%sp), %arg0
	ldw -40(%sp), %arg1
	ldw -44(%sp), %arg2
	ldw -48(%sp), %arg3
	ldil 0, %r31			; FUNC_LDIL_OFFSET must point here
	ldo 0(%r31), %r31		; FUNC_LDO_OFFSET must point here
	ble 0(%sr0, %r31)
	copy %r31, %r2
	break 4, 8 
	nop				; restore_pc_queue expects these
	bv,n 0(%r22)			; instructions to be here...
	nop
*/
d622 2
a623 2
hppa_fix_call_dummy PARAMS ((char *, CORE_ADDR, CORE_ADDR, int,
			     struct value **, struct type *, int));
d626 1
a626 1
    sp = hppa_push_arguments((nargs), (args), (sp), (struct_return), (struct_addr))
d628 2
a629 2
hppa_push_arguments PARAMS ((int, struct value **, CORE_ADDR, int,
			     CORE_ADDR));
d647 40
a686 39
struct unwind_table_entry {
  unsigned int region_start;
  unsigned int region_end;

  unsigned int Cannot_unwind         :  1;                      /* 0 */
  unsigned int Millicode             :  1;                      /* 1 */
  unsigned int Millicode_save_sr0    :  1;                      /* 2 */
  unsigned int Region_description    :  2;                      /* 3..4 */
  unsigned int reserved1             :  1;                      /* 5 */
  unsigned int Entry_SR              :  1;                      /* 6 */
  unsigned int Entry_FR              :  4; /* number saved */   /* 7..10 */
  unsigned int Entry_GR              :  5; /* number saved */   /* 11..15 */
  unsigned int Args_stored           :  1;                      /* 16 */
  unsigned int Variable_Frame	     :  1;                      /* 17 */
  unsigned int Separate_Package_Body :  1;                      /* 18 */
  unsigned int Frame_Extension_Millicode:1;                     /* 19 */
  unsigned int Stack_Overflow_Check  :  1;                      /* 20 */
  unsigned int Two_Instruction_SP_Increment:1;                  /* 21 */
  unsigned int Ada_Region	     :  1;                      /* 22 */
  unsigned int cxx_info              :  1;                      /* 23 */
  unsigned int cxx_try_catch         :  1;                      /* 24 */
  unsigned int sched_entry_seq       :  1;                      /* 25 */
  unsigned int reserved2	     :  1;                      /* 26 */
  unsigned int Save_SP               :  1;                      /* 27 */
  unsigned int Save_RP               :  1;                      /* 28 */
  unsigned int Save_MRP_in_frame     :  1;                      /* 29 */
  unsigned int extn_ptr_defined      :  1;                      /* 30 */
  unsigned int Cleanup_defined       :  1;                      /* 31 */

  unsigned int MPE_XL_interrupt_marker: 1;                      /* 0 */
  unsigned int HP_UX_interrupt_marker:  1;                      /* 1 */
  unsigned int Large_frame	     :  1;                      /* 2 */
  unsigned int Pseudo_SP_Set         :  1;                      /* 3 */
  unsigned int reserved4             :  1;                      /* 4 */
  unsigned int Total_frame_size      : 27;                      /* 5..31 */

  /* This is *NOT* part of an actual unwind_descriptor in an object
     file.  It is *ONLY* part of the "internalized" descriptors that
     we create from those in a file.
d688 7
a694 5
  struct {
    unsigned int  stub_type          : 4;                       /* 0..3 */
    unsigned int  padding            : 28;                      /* 4..31 */
  } stub_unwind;
};
d702 13
a714 13
{
  /* The offset within the executable for the associated stub.  */
  unsigned stub_offset;

  /* The type of stub this unwind entry describes.  */
  char type;

  /* Unknown.  Not needed by GDB at this time.  */
  char prs_info;

  /* Length (in instructions) of the associated stub.  */
  short stub_length;
};
d723 7
a729 6
{
  LONG_BRANCH = 1,
  PARAMETER_RELOCATION = 2,
  EXPORT = 10,
  IMPORT = 11,
};
d732 1
a732 1
 *
d739 1
a739 1
 
d741 1
a741 1
 *
d747 14
a760 10
struct obj_unwind_info {
  struct unwind_table_entry *table; /* Pointer to unwind info */
  struct unwind_table_entry *cache; /* Pointer to last entry we found */
  int last;		   	    /* Index of last entry */
};

typedef struct obj_private_struct {
   struct obj_unwind_info *unwind_info; /* a pointer */
   struct so_list         *so_info;     /* a pointer  */
} obj_private_data_t;
d763 4
a766 3
extern void target_write_pc PARAMS ((CORE_ADDR, int))
extern CORE_ADDR target_read_pc PARAMS ((int));
extern CORE_ADDR skip_trampoline_code PARAMS ((CORE_ADDR, char *));
d770 1
a770 1
extern CORE_ADDR target_read_pc PARAMS ((int));
d773 1
a773 1
extern void target_write_pc PARAMS ((CORE_ADDR, int));
d776 1
a776 1
extern CORE_ADDR  target_read_fp PARAMS ((int));
d782 1
a782 1
extern int hpread_adjust_stack_address PARAMS ((CORE_ADDR));
d796 11
a806 1
#define COERCE_FLOAT_TO_DOUBLE (current_language -> la_language == language_c)
@


1.1.1.1
log
@Initial creation of sourceware repository
@
text
@@


1.1.1.2
log
@import gdb-19990422 snapshot
@
text
@d472 1
a472 1
#define PUSH_DUMMY_FRAME push_dummy_frame (inf_status)
@


1.1.1.3
log
@import gdb-19990504 snapshot
@
text
@d75 2
a76 2
extern CORE_ADDR hppa_skip_prologue PARAMS ((CORE_ADDR));
#define SKIP_PROLOGUE(pc) (hppa_skip_prologue (pc))
@


1.1.1.4
log
@import gdb-1999-05-25 snapshot
@
text
@d440 2
a441 2
#define FRAMELESS_FUNCTION_INVOCATION(FI) \
  (frameless_function_invocation (FI))
d455 1
a455 1
#define FRAME_NUM_ARGS(fi) (-1)
d627 1
a627 1
  (hppa_push_arguments((nargs), (args), (sp), (struct_return), (struct_addr)))
@


1.1.1.5
log
@import gdb-1999-06-07 snapshot
@
text
@d2 1
a2 1
   Copyright 1986, 1987, 1989, 1990, 1991, 1992, 1993, 1995, 1999
a725 1
  IMPORT_SHLIB = 12,
@


1.1.1.6
log
@import gdb-1999-07-07 post reformat
@
text
@d8 1
a8 1
   This file is part of GDB.
d10 13
a22 14
   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place - Suite 330,
   Boston, MA 02111-1307, USA.  */
d71 1
a71 1

d108 1
a108 1
   On hppa the sp must always be kept 64-bit aligned */
d111 1
a111 1
#define NO_EXTRA_ALIGNMENT_NEEDED 1
d148 1
a148 1
 */
d152 1
a152 1
/* return instruction is bv r0(rp) or bv,n r0(rp) */
d215 2
a216 2
#define CR27_REGNUM 60		/* Base register for thread-local storage, cr27 */
#define FP0_REGNUM 64		/* floating point reg. 0 (fspr) */
d219 4
a222 4
#define ARG0_REGNUM 26		/* The first argument of a callee. */
#define ARG1_REGNUM 25		/* The second argument of a callee. */
#define ARG2_REGNUM 24		/* The third argument of a callee. */
#define ARG3_REGNUM 23		/* The fourth argument of a callee. */
d232 16
a247 16
#define PSW_T   0x01000000	/* Taken Branch Trap Enable */
#define PSW_H   0x00800000	/* Higher-Privilege Transfer Trap Enable */
#define PSW_L   0x00400000	/* Lower-Privilege Transfer Trap Enable */
#define PSW_N   0x00200000	/* PC Queue Front Instruction Nullified */
#define PSW_X   0x00100000	/* Data Memory Break Disable */
#define PSW_B   0x00080000	/* Taken Branch in Previous Cycle */
#define PSW_C   0x00040000	/* Code Address Translation Enable */
#define PSW_V   0x00020000	/* Divide Step Correction */
#define PSW_M   0x00010000	/* High-Priority Machine Check Disable */
#define PSW_CB  0x0000ff00	/* Carry/Borrow Bits */
#define PSW_R   0x00000010	/* Recovery Counter Enable */
#define PSW_Q   0x00000008	/* Interruption State Collection Enable */
#define PSW_P   0x00000004	/* Protection ID Validation Enable */
#define PSW_D   0x00000002	/* Data Address Translation Enable */
#define PSW_I   0x00000001	/* External, Power Failure, Low-Priority */
				/* Machine Check Interruption Enable */
d350 1
a350 1
  */
d387 1
a387 1
 */
d444 1
a444 1
extern CORE_ADDR hppa_frame_saved_pc PARAMS ((struct frame_info * frame));
d466 1
a467 1

d489 34
a522 34
   ; Call stack frame has already been built by gdb. Since we could be calling 
   ; a varargs function, and we do not have the benefit of a stub to put things in
   ; the right place, we load the first 4 word of arguments into both the general
   ; and fp registers.
   call_dummy
   ldw -36(sp), arg0
   ldw -40(sp), arg1
   ldw -44(sp), arg2
   ldw -48(sp), arg3
   ldo -36(sp), r1
   fldws 0(0, r1), fr4
   fldds -4(0, r1), fr5
   fldws -8(0, r1), fr6
   fldds -12(0, r1), fr7
   ldil 0, r22                  ; FUNC_LDIL_OFFSET must point here
   ldo 0(r22), r22                      ; FUNC_LDO_OFFSET must point here
   ldsid (0,r22), r4
   ldil 0, r1                   ; SR4EXPORT_LDIL_OFFSET must point here
   ldo 0(r1), r1                        ; SR4EXPORT_LDO_OFFSET must point here
   ldsid (0,r1), r20
   combt,=,n r4, r20, text_space        ; If target is in data space, do a
   ble 0(sr5, r22)                      ; "normal" procedure call
   copy r31, r2
   break 4, 8 
   mtsp r21, sr0
   ble,n 0(sr0, r22)
   text_space                           ; Otherwise, go through _sr4export,
   ble (sr4, r1)                        ; which will return back here.
   stw r31,-24(r30)
   break 4, 8
   mtsp r21, sr0
   ble,n 0(sr0, r22)
   nop                          ; To avoid kernel bugs 
   nop                          ; and keep the dummy 8 byte aligned
d573 1
a573 1
   call_dummy
d575 13
a587 13
   ldw -36(%sp), %arg0
   ldw -40(%sp), %arg1
   ldw -44(%sp), %arg2
   ldw -48(%sp), %arg3
   ldil 0, %r31                 ; FUNC_LDIL_OFFSET must point here
   ldo 0(%r31), %r31            ; FUNC_LDO_OFFSET must point here
   ble 0(%sr0, %r31)
   copy %r31, %r2
   break 4, 8 
   nop                          ; restore_pc_queue expects these
   bv,n 0(%r22)                 ; instructions to be here...
   nop
 */
d623 2
a624 2
  hppa_fix_call_dummy PARAMS ((char *, CORE_ADDR, CORE_ADDR, int,
			       struct value **, struct type *, int));
d629 2
a630 2
  hppa_push_arguments PARAMS ((int, struct value **, CORE_ADDR, int,
			       CORE_ADDR));
d648 39
a686 40
struct unwind_table_entry
  {
    unsigned int region_start;
    unsigned int region_end;

    unsigned int Cannot_unwind:1;	/* 0 */
    unsigned int Millicode:1;	/* 1 */
    unsigned int Millicode_save_sr0:1;	/* 2 */
    unsigned int Region_description:2;	/* 3..4 */
    unsigned int reserved1:1;	/* 5 */
    unsigned int Entry_SR:1;	/* 6 */
    unsigned int Entry_FR:4;	/* number saved *//* 7..10 */
    unsigned int Entry_GR:5;	/* number saved *//* 11..15 */
    unsigned int Args_stored:1;	/* 16 */
    unsigned int Variable_Frame:1;	/* 17 */
    unsigned int Separate_Package_Body:1;	/* 18 */
    unsigned int Frame_Extension_Millicode:1;	/* 19 */
    unsigned int Stack_Overflow_Check:1;	/* 20 */
    unsigned int Two_Instruction_SP_Increment:1;	/* 21 */
    unsigned int Ada_Region:1;	/* 22 */
    unsigned int cxx_info:1;	/* 23 */
    unsigned int cxx_try_catch:1;	/* 24 */
    unsigned int sched_entry_seq:1;	/* 25 */
    unsigned int reserved2:1;	/* 26 */
    unsigned int Save_SP:1;	/* 27 */
    unsigned int Save_RP:1;	/* 28 */
    unsigned int Save_MRP_in_frame:1;	/* 29 */
    unsigned int extn_ptr_defined:1;	/* 30 */
    unsigned int Cleanup_defined:1;	/* 31 */

    unsigned int MPE_XL_interrupt_marker:1;	/* 0 */
    unsigned int HP_UX_interrupt_marker:1;	/* 1 */
    unsigned int Large_frame:1;	/* 2 */
    unsigned int Pseudo_SP_Set:1;	/* 3 */
    unsigned int reserved4:1;	/* 4 */
    unsigned int Total_frame_size:27;	/* 5..31 */

    /* This is *NOT* part of an actual unwind_descriptor in an object
       file.  It is *ONLY* part of the "internalized" descriptors that
       we create from those in a file.
d688 5
a692 7
    struct
      {
	unsigned int stub_type:4;	/* 0..3 */
	unsigned int padding:28;	/* 4..31 */
      }
    stub_unwind;
  };
d700 13
a712 13
  {
    /* The offset within the executable for the associated stub.  */
    unsigned stub_offset;

    /* The type of stub this unwind entry describes.  */
    char type;

    /* Unknown.  Not needed by GDB at this time.  */
    char prs_info;

    /* Length (in instructions) of the associated stub.  */
    short stub_length;
  };
d721 7
a727 7
  {
    LONG_BRANCH = 1,
    PARAMETER_RELOCATION = 2,
    EXPORT = 10,
    IMPORT = 11,
    IMPORT_SHLIB = 12,
  };
d730 1
a730 1

d737 1
a737 1

d739 1
a739 1

d745 10
a754 13
struct obj_unwind_info
  {
    struct unwind_table_entry *table;	/* Pointer to unwind info */
    struct unwind_table_entry *cache;	/* Pointer to last entry we found */
    int last;			/* Index of last entry */
  };

typedef struct obj_private_struct
  {
    struct obj_unwind_info *unwind_info;	/* a pointer */
    struct so_list *so_info;	/* a pointer  */
  }
obj_private_data_t;
d757 3
a759 4
extern void target_write_pc
PARAMS ((CORE_ADDR, int))
     extern CORE_ADDR target_read_pc PARAMS ((int));
     extern CORE_ADDR skip_trampoline_code PARAMS ((CORE_ADDR, char *));
d763 1
a763 1
     extern CORE_ADDR target_read_pc PARAMS ((int));
d766 1
a766 1
     extern void target_write_pc PARAMS ((CORE_ADDR, int));
d769 1
a769 1
     extern CORE_ADDR target_read_fp PARAMS ((int));
d775 1
a775 1
     extern int hpread_adjust_stack_address PARAMS ((CORE_ADDR));
@


1.1.1.7
log
@import gdb-1999-08-16 snapshot
@
text
@d257 1
a257 1
      (buf)[sizeof(CORE_ADDR) -1] &= ~0x3; \
a566 1
#define REG_PARM_STACK_SPACE 16
d651 2
a652 2
    CORE_ADDR region_start;
    CORE_ADDR region_end;
a755 6
typedef struct data {
  CORE_ADDR dummy[2];
  CORE_ADDR func_addr;
  CORE_ADDR dp;
} opd_data;

a759 2
    opd_data *opd;
    int n_opd_entries;
@


1.1.1.8
log
@import gdb-1999-08-23 snapshot
@
text
@a567 1
#define ARGS_GROW_DOWNWARD
d757 6
d767 2
a768 1
    CORE_ADDR dp;
@


1.1.1.9
log
@import gdb-1999-08-30 snapshot
@
text
@d27 1
d33 1
@


1.1.1.10
log
@import gdb-1999-09-21
@
text
@d566 1
a798 4

/* Here's how to step off a permanent breakpoint.  */
#define SKIP_PERMANENT_BREAKPOINT (hppa_skip_permanent_breakpoint)
extern void hppa_skip_permanent_breakpoint (void);
@


1.1.1.11
log
@import gdb-1999-10-11 snapshot
@
text
@a801 6

/* On HP-UX, certain system routines (millicode) have names beginning
   with $ or $$, e.g. $$dyncall, which handles inter-space procedure
   calls on PA-RISC.  Tell the expression parser to check for those
   when parsing tokens that begin with "$".  */
#define SYMBOLS_CAN_START_WITH_DOLLAR (1)
@


1.1.1.12
log
@import gdb-2000-02-01 snapshot
@
text
@d2 2
a3 1
   Copyright 1986, 1987, 1989-1993, 1995, 1999, 2000 Free Software Foundation, Inc. 
d266 1
a266 1
extern void pa_do_strcat_registers_info (int, int, struct ui_file *, enum precision_type);
@


