head	1.23;
access;
symbols
	gdb_6_3-20041109-release:1.20
	gdb_6_3-branch:1.20.0.16
	gdb_6_3-20041019-branchpoint:1.20
	drow_intercu-merge-20040921:1.20
	drow_intercu-merge-20040915:1.20
	jimb-gdb_6_2-e500-branch:1.20.0.18
	jimb-gdb_6_2-e500-branchpoint:1.20
	gdb_6_2-20040730-release:1.20
	gdb_6_2-branch:1.20.0.14
	gdb_6_2-2004-07-10-gmt-branchpoint:1.20
	gdb_6_1_1-20040616-release:1.20
	gdb_6_1-2004-04-05-release:1.20
	drow_intercu-merge-20040402:1.20
	drow_intercu-merge-20040327:1.20
	ezannoni_pie-20040323-branch:1.20.0.12
	ezannoni_pie-20040323-branchpoint:1.20
	cagney_tramp-20040321-mergepoint:1.20
	cagney_tramp-20040309-branch:1.20.0.10
	cagney_tramp-20040309-branchpoint:1.20
	gdb_6_1-branch:1.20.0.8
	gdb_6_1-2004-03-01-gmt-branchpoint:1.20
	drow_intercu-20040221-branch:1.20.0.6
	drow_intercu-20040221-branchpoint:1.20
	cagney_bfdfile-20040213-branch:1.20.0.4
	cagney_bfdfile-20040213-branchpoint:1.20
	drow-cplus-merge-20040208:1.20
	carlton_dictionary-20040126-merge:1.20
	cagney_bigcore-20040122-branch:1.20.0.2
	cagney_bigcore-20040122-branchpoint:1.20
	drow-cplus-merge-20040113:1.20
	drow-cplus-merge-20031224:1.20
	drow-cplus-merge-20031220:1.20
	carlton_dictionary-20031215-merge:1.20
	drow-cplus-merge-20031214:1.20
	carlton-dictionary-20031111-merge:1.19
	gdb_6_0-2003-10-04-release:1.17
	kettenis_sparc-20030918-branch:1.18.0.4
	kettenis_sparc-20030918-branchpoint:1.18
	carlton_dictionary-20030917-merge:1.18
	ezannoni_pie-20030916-branchpoint:1.18
	ezannoni_pie-20030916-branch:1.18.0.2
	cagney_x86i386-20030821-branch:1.17.0.6
	cagney_x86i386-20030821-branchpoint:1.17
	carlton_dictionary-20030805-merge:1.17
	carlton_dictionary-20030627-merge:1.17
	gdb_6_0-branch:1.17.0.4
	gdb_6_0-2003-06-23-branchpoint:1.17
	jimb-ppc64-linux-20030613-branch:1.17.0.2
	jimb-ppc64-linux-20030613-branchpoint:1.17
	cagney_convert-20030606-branch:1.16.0.2
	cagney_convert-20030606-branchpoint:1.16
	cagney_writestrings-20030508-branch:1.15.0.32
	cagney_writestrings-20030508-branchpoint:1.15
	jimb-ppc64-linux-20030528-branch:1.15.0.30
	jimb-ppc64-linux-20030528-branchpoint:1.15
	carlton_dictionary-20030523-merge:1.15
	cagney_fileio-20030521-branch:1.15.0.28
	cagney_fileio-20030521-branchpoint:1.15
	kettenis_i386newframe-20030517-mergepoint:1.15
	jimb-ppc64-linux-20030509-branch:1.15.0.26
	jimb-ppc64-linux-20030509-branchpoint:1.15
	kettenis_i386newframe-20030504-mergepoint:1.15
	carlton_dictionary-20030430-merge:1.15
	kettenis_i386newframe-20030419-branch:1.15.0.24
	kettenis_i386newframe-20030419-branchpoint:1.15
	carlton_dictionary-20030416-merge:1.15
	cagney_frameaddr-20030409-mergepoint:1.15
	kettenis_i386newframe-20030406-branch:1.15.0.22
	kettenis_i386newframe-20030406-branchpoint:1.15
	cagney_frameaddr-20030403-branchpoint:1.15
	cagney_frameaddr-20030403-branch:1.15.0.20
	cagney_framebase-20030330-mergepoint:1.15
	cagney_framebase-20030326-branch:1.15.0.18
	cagney_framebase-20030326-branchpoint:1.15
	cagney_lazyid-20030317-branch:1.15.0.16
	cagney_lazyid-20030317-branchpoint:1.15
	kettenis-i386newframe-20030316-mergepoint:1.15
	offbyone-20030313-branch:1.15.0.14
	offbyone-20030313-branchpoint:1.15
	kettenis-i386newframe-20030308-branch:1.15.0.12
	kettenis-i386newframe-20030308-branchpoint:1.15
	carlton_dictionary-20030305-merge:1.15
	cagney_offbyone-20030303-branch:1.15.0.10
	cagney_offbyone-20030303-branchpoint:1.15
	carlton_dictionary-20030207-merge:1.15
	interps-20030203-mergepoint:1.15
	interps-20030202-branch:1.15.0.8
	interps-20030202-branchpoint:1.15
	cagney-unwind-20030108-branch:1.15.0.6
	cagney-unwind-20030108-branchpoint:1.15
	carlton_dictionary-20021223-merge:1.15
	gdb_5_3-2002-12-12-release:1.14
	carlton_dictionary-20021115-merge:1.15
	kseitz_interps-20021105-merge:1.15
	kseitz_interps-20021103-merge:1.15
	drow-cplus-merge-20021020:1.15
	drow-cplus-merge-20021025:1.15
	carlton_dictionary-20021025-merge:1.15
	carlton_dictionary-20021011-merge:1.15
	drow-cplus-branch:1.15.0.4
	drow-cplus-branchpoint:1.15
	kseitz_interps-20020930-merge:1.15
	carlton_dictionary-20020927-merge:1.15
	carlton_dictionary-branch:1.15.0.2
	carlton_dictionary-20020920-branchpoint:1.15
	gdb_5_3-branch:1.14.0.6
	gdb_5_3-2002-09-04-branchpoint:1.14
	kseitz_interps-20020829-merge:1.14
	cagney_sysregs-20020825-branch:1.14.0.4
	cagney_sysregs-20020825-branchpoint:1.14
	readline_4_3-import-branch:1.14.0.2
	readline_4_3-import-branchpoint:1.14
	gdb_5_2_1-2002-07-23-release:1.10
	kseitz_interps-20020528-branch:1.11.0.2
	kseitz_interps-20020528-branchpoint:1.11
	cagney_regbuf-20020515-branch:1.10.0.6
	cagney_regbuf-20020515-branchpoint:1.10
	jimb-macro-020506-branch:1.10.0.4
	jimb-macro-020506-branchpoint:1.10
	gdb_5_2-2002-04-29-release:1.10
	gdb_5_2-branch:1.10.0.2
	gdb_5_2-2002-03-03-branchpoint:1.10
	gdb_5_1_1-2002-01-24-release:1.7
	gdb_5_1_0_1-2002-01-03-release:1.7
	cygnus_cvs_20020108_pre:1.8
	gdb_5_1_0_1-2002-01-03-branchpoint:1.7
	gdb_5_1_0_1-2002-01-03-branch:1.7.0.8
	gdb_5_1-2001-11-21-release:1.7
	gdb_s390-2001-09-26-branch:1.7.0.6
	gdb_s390-2001-09-26-branchpoint:1.7
	gdb_5_1-2001-07-29-branch:1.7.0.4
	gdb_5_1-2001-07-29-branchpoint:1.7
	dberlin-typesystem-branch:1.7.0.2
	dberlin-typesystem-branchpoint:1.7
	gdb-post-ptid_t-2001-05-03:1.7
	gdb-pre-ptid_t-2001-05-03:1.7
	insight-precleanup-2001-01-01:1.4
	gdb-post-protoization-2000-07-29:1.4
	gdb-pre-protoization-2000-07-29:1.4
	gdb-premipsmulti-2000-06-06-branch:1.3.0.2
	gdb-premipsmulti-2000-06-06-branchpoint:1.3
	gdb-post-params-removal-2000-06-04:1.3
	gdb-pre-params-removal-2000-06-04:1.3
	gdb-post-params-removal-2000-05-28:1.3
	gdb-pre-params-removal-2000-05-28:1.2
	gdb_5_0-2000-05-19-release:1.1.1.7
	gdb_4_18_2-2000-05-18-release:1.1.1.7
	gdb_4_95_1-2000-05-11-snapshot:1.1.1.7
	gdb_4_95_0-2000-04-27-snapshot:1.1.1.7
	gdb_5_0-2000-04-10-branch:1.1.1.7.0.2
	gdb_5_0-2000-04-10-branchpoint:1.1.1.7
	repo-unification-2000-02-06:1.1.1.7
	insight-2000-02-04:1.1.1.7
	gdb-2000-02-04:1.1.1.7
	gdb-2000-02-02:1.1.1.7
	gdb-2000-02-01:1.1.1.7
	gdb-2000-01-31:1.1.1.7
	gdb-2000-01-26:1.1.1.7
	gdb-2000-01-24:1.1.1.7
	gdb-2000-01-17:1.1.1.7
	gdb-2000-01-10:1.1.1.7
	gdb-2000-01-05:1.1.1.7
	gdb-1999-12-21:1.1.1.7
	gdb-1999-12-13:1.1.1.7
	gdb-1999-12-07:1.1.1.6
	gdb-1999-12-06:1.1.1.6
	gdb-1999-11-16:1.1.1.6
	gdb-1999-11-08:1.1.1.6
	gdb-1999-11-01:1.1.1.6
	gdb-1999-10-25:1.1.1.6
	gdb-1999-10-18:1.1.1.6
	gdb-1999-10-11:1.1.1.6
	gdb-1999-10-04:1.1.1.6
	gdb-1999-09-28:1.1.1.6
	gdb-1999-09-21:1.1.1.6
	gdb-1999-09-13:1.1.1.6
	gdb-1999-09-08:1.1.1.6
	gdb-1999-08-30:1.1.1.6
	gdb-1999-08-23:1.1.1.5
	gdb-1999-08-16:1.1.1.5
	gdb-1999-08-09:1.1.1.5
	gdb-1999-08-02:1.1.1.5
	gdb-1999-07-26:1.1.1.5
	gdb-1999-07-19:1.1.1.5
	gdb-1999-07-12:1.1.1.5
	gdb-post-reformat-19990707:1.1.1.5
	gdb-1999-07-07-post-reformat-snapshot:1.1.1.5
	gdb-pre-reformat-19990707:1.1.1.4
	gdb-1999-07-07:1.1.1.4
	gdb-1999-07-05:1.1.1.4
	gdb-1999-06-28:1.1.1.4
	gdb-1999-06-21:1.1.1.4
	gdb-1999-06-14:1.1.1.4
	gdb-1999-06-07:1.1.1.4
	gdb-1999-06-01:1.1.1.4
	gdb-4_18-branch:1.1.1.1.0.2
	gdb-4_18-release:1.1.1.1
	gdb-1999-05-25:1.1.1.4
	gdb-1999-05-19:1.1.1.3
	gdb-1999-05-10:1.1.1.3
	gdb-19990504:1.1.1.3
	gdb-19990422:1.1.1.2
	SNAPSHOT:1.1.1
	gdb-4_18:1.1.1.1
	GDB_4_18:1.1.1;
locks; strict;
comment	@ * @;
expand	@o@;


1.23
date	2005.02.15.02.05.10;	author cagney;	state dead;
branches;
next	1.22;

1.22
date	2005.02.12.10.38.52;	author ysato;	state Exp;
branches;
next	1.21;

1.21
date	2004.11.14.00.10.54;	author cagney;	state dead;
branches;
next	1.20;

1.20
date	2003.12.11.06.21.12;	author drd;	state Exp;
branches;
next	1.19;

1.19
date	2003.10.17.12.43.05;	author shrinivas;	state Exp;
branches;
next	1.18;

1.18
date	2003.09.03.15.02.49;	author cagney;	state Exp;
branches
	1.18.2.1;
next	1.17;

1.17
date	2003.06.08.22.51.49;	author cagney;	state Exp;
branches;
next	1.16;

1.16
date	2003.06.04.00.25.03;	author msnyder;	state Exp;
branches;
next	1.15;

1.15
date	2002.09.16.15.03.17;	author corinna;	state Exp;
branches
	1.15.2.1
	1.15.4.1;
next	1.14;

1.14
date	2002.08.24.00.21.35;	author cagney;	state Exp;
branches;
next	1.13;

1.13
date	2002.08.05.17.12.56;	author cagney;	state Exp;
branches;
next	1.12;

1.12
date	2002.06.14.22.55.43;	author cagney;	state Exp;
branches;
next	1.11;

1.11
date	2002.05.17.19.19.23;	author avolkov;	state Exp;
branches
	1.11.2.1;
next	1.10;

1.10
date	2002.01.29.04.42.36;	author cagney;	state Exp;
branches
	1.10.6.1;
next	1.9;

1.9
date	2002.01.20.18.05.52;	author cagney;	state Exp;
branches;
next	1.8;

1.8
date	2002.01.05.04.30.29;	author cagney;	state Exp;
branches;
next	1.7;

1.7
date	2001.03.16.22.34.46;	author jtc;	state Exp;
branches;
next	1.6;

1.6
date	2001.03.14.23.23.10;	author cagney;	state Exp;
branches;
next	1.5;

1.5
date	2001.03.06.08.21.26;	author kevinb;	state Exp;
branches;
next	1.4;

1.4
date	2000.07.19.14.11.42;	author ezannoni;	state Exp;
branches;
next	1.3;

1.3
date	2000.05.28.01.12.35;	author kevinb;	state Exp;
branches;
next	1.2;

1.2
date	2000.04.14.19.12.58;	author jimb;	state Exp;
branches;
next	1.1;

1.1
date	99.04.16.01.34.16;	author shebs;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.04.16.01.34.16;	author shebs;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	99.04.26.18.26.16;	author shebs;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	99.05.05.14.43.24;	author shebs;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	99.05.25.18.04.26;	author jsm;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	99.07.07.20.12.24;	author jsm;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	99.08.31.01.06.56;	author jsm;	state Exp;
branches;
next	1.1.1.7;

1.1.1.7
date	99.12.14.01.05.40;	author jsm;	state Exp;
branches;
next	;

1.10.6.1
date	2002.06.15.16.42.58;	author cagney;	state Exp;
branches;
next	;

1.11.2.1
date	2002.06.20.01.34.20;	author kseitz;	state Exp;
branches;
next	1.11.2.2;

1.11.2.2
date	2002.08.09.18.34.29;	author kseitz;	state Exp;
branches;
next	1.11.2.3;

1.11.2.3
date	2002.08.30.22.52.47;	author kseitz;	state Exp;
branches;
next	1.11.2.4;

1.11.2.4
date	2002.10.01.00.46.17;	author kseitz;	state Exp;
branches;
next	;

1.15.2.1
date	2003.06.27.21.50.15;	author carlton;	state Exp;
branches;
next	1.15.2.2;

1.15.2.2
date	2003.09.17.21.28.39;	author carlton;	state Exp;
branches;
next	1.15.2.3;

1.15.2.3
date	2003.11.11.23.51.03;	author carlton;	state Exp;
branches;
next	1.15.2.4;

1.15.2.4
date	2003.12.16.00.00.53;	author carlton;	state Exp;
branches;
next	;

1.15.4.1
date	2003.12.14.20.27.36;	author drow;	state Exp;
branches;
next	;

1.18.2.1
date	2004.03.23.20.30.09;	author ezannoni;	state Exp;
branches;
next	;


desc
@@


1.23
log
@2005-02-14  Andrew Cagney  <cagney@@gnu.org>

	* config/h8300/h8300.mt (DEPRECATED_TM_FILE): Delete.
	* config/h8300/tm-h8300.h: Delete file.
@
text
@/* Parameters for execution on a H8/300 series machine.
   Copyright 1992, 1993, 1994, 1996, 1998, 1999, 2000
   Free Software Foundation, Inc.

   This file is part of GDB.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place - Suite 330,
   Boston, MA 02111-1307, USA.  */
/* Contributed by Steve Chamberlain sac@@cygnus.com */

/* Needed for remote.c */
#define DEPRECATED_REMOTE_BREAKPOINT { 0x57, 0x30}		/* trapa #3 */
/* Needed for remote-hms.c */
#define CCR_REGNUM 8
/* Needed for remote-e7000.c */
#define NUM_REALREGS ((TARGET_ARCHITECTURE->mach == bfd_mach_h8300s || \
		        TARGET_ARCHITECTURE->mach == bfd_mach_h8300sn || \
		        TARGET_ARCHITECTURE->mach == bfd_mach_h8300sx || \
		        TARGET_ARCHITECTURE->mach == bfd_mach_h8300sxn) ? 11 : 10)

@


1.22
log
@Restore h8300 support
@
text
@@


1.21
log
@2004-11-13  Andrew Cagney  <cagney@@gnu.org>

	* NEWS: List h8300*-*-*, mcore-*-*, mn10300-*-*, ns32k-*-*, and
	v850-*-* under removed.
	* configure.host: Delete ns32k-*-netbsd*.
	* configure.tgt: Delete h8300-*-*, mcore*-*-*, mn10300-*-*,
	ns32k-*-netbsd*, and v850*-*-*.
	* MAINTAINERS: Mark h8300, mcore, mn10300, ns32k, v850 as
	"Deleted"
	* config/h8300/tm-h8300.h, config/h8300/h8300.mt: Delete.
	* h8300-tdep.c, config/mcore/mcore.mt, mcore-rom.c: Delete.
	* mcore-tdep.c, config/mn10300/mn10300.mt: Delete.
	* mn10300-tdep.c, config/ns32k/nbsdaout.mh: Delete.
	* config/ns32k/nbsdaout.mt, config/ns32k/nm-nbsd.h: Delete.
	* config/ns32k/nm-nbsdaout.h, config/ns32k/tm-ns32k.h: Delete.
	* ns32knbsd-nat.c, ns32knbsd-tdep.c, ns32k-tdep.c: Delete.
	* ns32k-tdep.h, config/v850/v850.mt, v850ice.c: Delete.
	* v850-tdep.c: Delete.
@
text
@@


1.20
log
@ Fix GDB crash problem when object file of different H8 cpu is loaded
@
text
@@


1.19
log
@2003-10-17  Shrinivas Atre  <shrinivasa@@KPITCummins.com>
      * gdb/config/h8300/tm-h8300.h : Addition of extern variable h8300_normal_mode
      * gdb/h8300-tdep.c (BINWORD): Update BINWORD for h8300_normal_mode
        (h8300_examine_prologue): Use h8300_normal_mode flag
        (h8300_gdbarch_init): Set architecture info for normal mode
@
text
@a22 10
/* NOTE: ezannoni 2000-07-18: these variables are part of sim, defined
   in sim/h8300/compile.c.  They really should not be used this
   way. Because of this we cannot get rid of the macro
   GDB_TARGET_IS_H8300 in remote-e7000.c */
extern int h8300hmode;
extern int h8300smode;
extern int h8300_normal_mode; /* 1 - Normal Mode , 0 - Advanced mode */
extern int h8300sxmode;
#define GDB_TARGET_IS_H8300

d28 4
a31 1
#define NUM_REALREGS (h8300smode?11:10)
@


1.18
log
@2003-09-03  Andrew Cagney  <cagney@@redhat.com>

	* defs.h: Do not include "arch-utils.h".
	(GDB_MULTI_ARCH): If not defined, set to GDB_MULTI_ARCH_PARTIAL or
	GDB_MULTI_ARCH_PURE.
	* configure.in (GDB_MULTI_ARCH): Do not define.
	* configure, config.in: Regenerate.
	* configure.tgt: Do not set variable "gdb_multi_arch".
	* config/s390/s390x.mt (GDB_MULTI_ARCH): Delete.
	* config/s390/s390.mt (GDB_MULTI_ARCH): Delete.
	* config/i386/x86-64linux.mt (GDB_MULTI_ARCH): Delete.
	* config/v850/v850.mt (TM_FILE): Delete disabled definition.
	* config/m68hc11/m68hc11.mt (TM_FILE): Delete definition.
	* config/vax/tm-vax.h (GDB_MULTI_ARCH): Delete definition.
	* config/sparc/tm-sparc.h (GDB_MULTI_ARCH): Delete definition.
	* config/sparc/tm-sun4sol2.h (GDB_MULTI_ARCH): Delete definition.
	* config/sparc/tm-nbsd.h (GDB_MULTI_ARCH): Delete definition.
	* config/sparc/tm-linux.h (GDB_MULTI_ARCH): Delete definition.
	* config/sparc/tm-sp64.h (GDB_MULTI_ARCH): Delete definition.
	* config/pa/tm-hppa64.h (GDB_MULTI_ARCH): Delete definition.
	* config/ns32k/tm-ns32k.h (GDB_MULTI_ARCH): Delete definition.
	* config/m68k/tm-m68k.h (GDB_MULTI_ARCH): Delete definition.
	* config/i386/tm-i386.h (GDB_MULTI_ARCH): Delete definition.
	* config/h8300/tm-h8300.h (GDB_MULTI_ARCH): Delete definition.
	* config/frv/tm-frv.h (GDB_MULTI_ARCH): Delete definition.
	* config/alpha/tm-alpha.h (GDB_MULTI_ARCH): Delete definition.
@
text
@d29 1
@


1.18.2.1
log
@merge mainline changes into branch
@
text
@d23 9
d37 1
a37 4
#define NUM_REALREGS ((TARGET_ARCHITECTURE->mach == bfd_mach_h8300s || \
		        TARGET_ARCHITECTURE->mach == bfd_mach_h8300sn || \
		        TARGET_ARCHITECTURE->mach == bfd_mach_h8300sx || \
		        TARGET_ARCHITECTURE->mach == bfd_mach_h8300sxn) ? 11 : 10)
@


1.17
log
@2003-06-08  Andrew Cagney  <cagney@@redhat.com>

	Deprecate BIG_REMOTE_BREAKPOINT, LITTLE_REMOTE_BREAKPOINT and
	REMOTE_BREAKPOINT.
	* remote.c: Update.
	* config/sh/tm-sh.h (DEPRECATED_BIG_REMOTE_BREAKPOINT): Update.
	(DEPRECATED_LITTLE_REMOTE_BREAKPOINT): Update.
	* config/m68k/tm-sun3.h: Update.
	* config/m68k/tm-m68klynx.h: Update.
	* config/h8300/tm-h8300.h (DEPRECATED_REMOTE_BREAKPOINT): Update.
@
text
@a22 2
#define GDB_MULTI_ARCH GDB_MULTI_ARCH_PARTIAL

@


1.16
log
@2003-06-03  Michael Snyder  <msnyder@@redhat.com>

	* config/h8300/tm-h8300.h (h8300sxmode): Declare.
	* h8300-tdep.c (h8300_gdbarch_init): Set machine mode
	for h8300sx.
@
text
@d35 1
a35 1
#define REMOTE_BREAKPOINT { 0x57, 0x30}		/* trapa #3 */
@


1.15
log
@	* h8300-tdep.c: Multiarch.  Drop `set machine' command in favor of
	`set architecture'.  Unify naming convention of functions.
	(h8300_skip_prologue): Improve prologue analysis.
	(h8300_push_arguments): Rewritten to more closely match GCC's
	bizarre argument-passing behavior, along with the comment describing
	said behavior.
	* remote-hms.c (hms_regnames): Don't use NUM_REGS in definition.
	* config/h8300/tm-h8300.h: Multiarch.  Just keep stuff needed by
	sim, remote-e7000.c, remote-hms.c and remote.c
@
text
@d31 1
@


1.15.4.1
log
@Merge drow-cplus-branch to:
  cvs rtag -D 2003-12-14 00:00:00 UTC drow-cplus-merge-20031214 gdb+dejagnu
@
text
@d23 10
d34 1
a34 1
#define DEPRECATED_REMOTE_BREAKPOINT { 0x57, 0x30}		/* trapa #3 */
d38 1
a38 4
#define NUM_REALREGS ((TARGET_ARCHITECTURE->mach == bfd_mach_h8300s || \
		        TARGET_ARCHITECTURE->mach == bfd_mach_h8300sn || \
		        TARGET_ARCHITECTURE->mach == bfd_mach_h8300sx || \
		        TARGET_ARCHITECTURE->mach == bfd_mach_h8300sxn) ? 11 : 10)
@


1.15.2.1
log
@2003-06-27  David Carlton  <carlton@@kealia.com>

	* Merge with mainline; tag is carlton_dictionary-20030627-merge.
@
text
@a30 1
extern int h8300sxmode;
d34 1
a34 1
#define DEPRECATED_REMOTE_BREAKPOINT { 0x57, 0x30}		/* trapa #3 */
@


1.15.2.2
log
@2003-09-17  David Carlton  <carlton@@kealia.com>

	* Merge with mainline; tag is carlton_dictionary-20030917-merge.
@
text
@d23 2
@


1.15.2.3
log
@2003-11-11  David Carlton  <carlton@@kealia.com>

	* Merge with mainline; tag is carlton-dictionary-20031111-merge.
@
text
@a28 1
extern int h8300_normal_mode; /* 1 - Normal Mode , 0 - Advanced mode */
@


1.15.2.4
log
@2003-12-15  David Carlton  <carlton@@kealia.com>

	* Merge with mainline; tag is carlton_dictionary-20031215-merge.
	* cp-support.c (class_name_from_physname): Add DMGL_PARAMS to call
	to cplus_demangle.
	(method_name_from_physname): Ditto.
@
text
@d23 10
d38 1
a38 4
#define NUM_REALREGS ((TARGET_ARCHITECTURE->mach == bfd_mach_h8300s || \
		        TARGET_ARCHITECTURE->mach == bfd_mach_h8300sn || \
		        TARGET_ARCHITECTURE->mach == bfd_mach_h8300sx || \
		        TARGET_ARCHITECTURE->mach == bfd_mach_h8300sxn) ? 11 : 10)
@


1.14
log
@Index: ChangeLog
===================================================================
RCS file: /cvs/src/src/gdb/ChangeLog,v
retrieving revision 1.3144
diff -u -r1.3144 ChangeLog
--- ChangeLog	23 Aug 2002 23:05:38 -0000	1.3144
+++ ChangeLog	23 Aug 2002 23:14:45 -0000
@@@@ -1,3 +1,53 @@@@
2002-08-23  Andrew Cagney  <cagney@@redhat.com>

	* gdbarch.sh (STORE_RETURN_VALUE): Add regcache parameter.
	(DEPRECATED_STORE_RETURN_VALUE): New method.
	(EXTRACT_RETURN_VALUE): Make buffer parameter a void pointer.
	* gdbarch.h, gdbarch.c: Re-generate.

	* values.c (set_return_value): Pass current_regcache to
	STORE_RETURN_VALUE.
	* arch-utils.h (legacy_store_return_value): Declare.
	* arch-utils.c (legacy_store_return_value): New function.
	(legacy_extract_return_value): Update parameters.

	* config/pa/tm-hppa.h (DEPRECATED_STORE_RETURN_VALUE): Rename
	STORE_RETURN_VALUE.
	* config/pa/tm-hppa64.h (DEPRECATED_STORE_RETURN_VALUE): Ditto.
	* config/sparc/tm-sparc.h (DEPRECATED_STORE_RETURN_VALUE): Ditto.
	* config/z8k/tm-z8k.h (DEPRECATED_STORE_RETURN_VALUE): Ditto.
	* config/sparc/tm-sparclet.h (DEPRECATED_STORE_RETURN_VALUE): Ditto.
	* config/mn10200/tm-mn10200.h (DEPRECATED_STORE_RETURN_VALUE): Ditto.
	* config/m68k/tm-linux.h (DEPRECATED_STORE_RETURN_VALUE): Ditto.
	* config/m68k/tm-delta68.h (DEPRECATED_STORE_RETURN_VALUE): Ditto.
	* config/m32r/tm-m32r.h (DEPRECATED_STORE_RETURN_VALUE): Ditto.
	* config/h8500/tm-h8500.h (DEPRECATED_STORE_RETURN_VALUE): Ditto.
	* config/h8300/tm-h8300.h (DEPRECATED_STORE_RETURN_VALUE): Ditto.

	* m68hc11-tdep.c (m68hc11_gdbarch_init): Update.
	* i386-tdep.c (i386_extract_return_value): Update.
	* arch-utils.c (legacy_extract_return_value): Update.
	* frv-tdep.c (frv_gdbarch_init): Update.
	* cris-tdep.c (cris_gdbarch_init): Update.
	* d10v-tdep.c (d10v_gdbarch_init): Update.
	* rs6000-tdep.c (rs6000_gdbarch_init): Update.
	* m68k-tdep.c (m68k_gdbarch_init): Update.
	* mcore-tdep.c (mcore_gdbarch_init): Update.
	* mn10300-tdep.c (mn10300_gdbarch_init): Update.
	* s390-tdep.c (s390_gdbarch_init): Update.
	* sparc-tdep.c (sparc_gdbarch_init): Update.
	* sh-tdep.c (sh_gdbarch_init): Update.
	* x86-64-tdep.c (x86_64_gdbarch_init): Update.
	* v850-tdep.c (v850_gdbarch_init): Update.
	* avr-tdep.c (avr_gdbarch_init): Update.
	* ia64-tdep.c (ia64_gdbarch_init): Update.
	* ns32k-tdep.c (ns32k_gdbarch_init): Update.
	* vax-tdep.c (vax_gdbarch_init): Update.
	* alpha-tdep.c (alpha_gdbarch_init): Update.
	* arm-tdep.c (arm_gdbarch_init): Update.
	* mips-tdep.c (mips_gdbarch_init): Update.
	* i386-tdep.c (i386_gdbarch_init): Update.

Index: doc/ChangeLog
2002-08-21  Andrew Cagney  <cagney@@redhat.com>

	* gdbint.texinfo (Target Architecture Definition): Update
	STORE_RETURN_VALUE, mention regcache.
@
text
@a20 3

#include "regcache.h"

d23 1
a23 6
struct frame_info;
struct frame_saved_regs;
struct value;
struct type;

/* 1 if debugging H8/300H application */ 
d31 1
d33 1
a33 53
/* Number of bytes in a word */

#define BINWORD (h8300hmode?4:2)

#define EXTRA_FRAME_INFO 	\
	struct frame_saved_regs *fsr;	\
	CORE_ADDR from_pc; \
	CORE_ADDR args_pointer;\
        CORE_ADDR locals_pointer ;

/* Zero the frame_saved_regs pointer when the frame is initialized,
   so that FRAME_FIND_SAVED_REGS () will know to allocate and
   initialize a frame_saved_regs struct the first time it is called.
   Set the arg_pointer to -1, which is not valid; 0 and other values
   indicate real, cached values.  */

#define INIT_EXTRA_FRAME_INFO(fromleaf, fi) \
	h8300_init_extra_frame_info (fromleaf, fi)

extern void h8300_init_extra_frame_info ();

#undef TARGET_INT_BIT
#define TARGET_INT_BIT  16
#undef TARGET_LONG_BIT
#define TARGET_LONG_BIT  32
#undef TARGET_PTR_BIT
#define TARGET_PTR_BIT  (h8300hmode ? 32:16)

/* Offset from address of function to start of its code.
   Zero on most machines.  */

#define FUNCTION_START_OFFSET 0

/* Advance PC across any function entry prologue instructions
   to reach some "real" code.  */

#define SKIP_PROLOGUE(ip)   (h8300_skip_prologue(ip))
extern CORE_ADDR h8300_skip_prologue ();

/* Immediately after a function call, return the saved pc.
   Can't always go through the frames for this because on some machines
   the new frame is not set up until the new function executes
   some instructions.  */

#define SAVED_PC_AFTER_CALL(frame) \
  read_memory_unsigned_integer (read_register (SP_REGNUM), BINWORD)

/* Stack grows downward.  */

#define INNER_THAN(lhs,rhs) ((lhs) < (rhs))

/*#define BREAKPOINT {0x7A, 0xFF} */
#define BREAKPOINT {0x01, 0x80}	/* Sleep */
d35 3
a37 182
/* If your kernel resets the pc after the trap happens you may need to
   define this before including this file.    */

#define DECR_PC_AFTER_BREAK 0

/* Say how long registers are.  */

#define REGISTER_SIZE 4

#define NUM_REGS 14

#define REGISTER_BYTES (NUM_REGS * 4)

/* Index within `registers' of the first byte of the space for
   register N.  */

#define REGISTER_BYTE(N)  ((N) * 4)

/* Number of bytes of storage in the actual machine representation
   for register N.  On the H8/300, all regs are 2 bytes.  */

#define REGISTER_RAW_SIZE(N) (h8300hmode ? 4 : 2)

/* Number of bytes of storage in the program's representation
   for register N.  */

#define REGISTER_VIRTUAL_SIZE(N) (h8300hmode ? 4 : 2)

/* Largest value REGISTER_RAW_SIZE can have.  */

#define MAX_REGISTER_RAW_SIZE 4

/* Largest value REGISTER_VIRTUAL_SIZE can have.  */

#define MAX_REGISTER_VIRTUAL_SIZE 4

/* Return the GDB type object for the "standard" data type
   of data in register N.  */

#define REGISTER_VIRTUAL_TYPE(N) \
(h8300hmode ? builtin_type_unsigned_long : builtin_type_unsigned_short)

/* Initializer for an array of names of registers.
   Entries beyond the first NUM_REGS are ignored.  */

#define REGISTER_NAMES \
  {"r0", "r1", "r2", "r3", "r4", "r5", "r6", "sp", "ccr","pc","cycles","tick","inst",""}

/* An array of names of registers. */

extern char **h8300_register_names;
#define REGISTER_NAME(i) h8300_register_names[i]

/* Register numbers of various important registers.
   Note that some of these values are "real" register numbers,
   and correspond to the general registers of the machine,
   and some are "phony" register numbers which are too large
   to be actual register numbers as far as the user is concerned
   but do serve to get the desired values when passed to read_register.  */

#define ARG0_REGNUM    0	/* first reg in which an arg may be passed */
#define ARGLAST_REGNUM 2	/* last  reg in which an arg may be passed */
#define FP_REGNUM      6	/* Contain saddress of executing stack frame */
#define SP_REGNUM      7	/* Contains address of top of stack */
#define CCR_REGNUM     8	/* Contains processor status */
#define PC_REGNUM      9	/* Contains program counter */
#define EXR_REGNUM     11	/* Contains processor status */

/* Extract from an array REGBUF containing the (raw) register state
   a function return value of type TYPE, and copy that, in virtual format,
   into VALBUF.  */

/* FIXME: Won't work with both h8/300's.  */

extern void h8300_extract_return_value (struct type *, char *, char *);
#define DEPRECATED_EXTRACT_RETURN_VALUE(TYPE,REGBUF,VALBUF) \
    h8300_extract_return_value (TYPE, (char *)(REGBUF), (char *)(VALBUF))

/* Write into appropriate registers a function return value
   of type TYPE, given in virtual format.  Assumes floats are passed
   in d0/d1.  */
/* FIXME: Won't work with both h8/300's.  */

extern void h8300_store_return_value (struct type *, char *);
#define DEPRECATED_STORE_RETURN_VALUE(TYPE,VALBUF) \
    h8300_store_return_value(TYPE, (char *) (VALBUF))

/* struct passing and returning stuff */
#define STORE_STRUCT_RETURN(STRUCT_ADDR, SP)	\
	write_register (0, STRUCT_ADDR)

#define USE_STRUCT_CONVENTION(gcc_p, type)	(1)

/* Extract from an array REGBUF containing the (raw) register state
   the address in which a function should return its structure value,
   as a CORE_ADDR (or an expression that can be used as one).  */

#define DEPRECATED_EXTRACT_STRUCT_VALUE_ADDRESS(REGBUF) \
     extract_address (REGBUF + REGISTER_BYTE (0), \
		      REGISTER_RAW_SIZE (0))

/* Describe the pointer in each stack frame to the previous stack frame
   (its caller).  */

/* FRAME_CHAIN takes a frame's nominal address
   and produces the frame's chain-pointer.

   However, if FRAME_CHAIN_VALID returns zero,
   it means the given frame is the outermost one and has no caller.  */

#define FRAME_CHAIN(FRAME) h8300_frame_chain(FRAME)
CORE_ADDR h8300_frame_chain (struct frame_info *);

/* In the case of the H8/300, the frame's nominal address
   is the address of a 2-byte word containing the calling frame's address.  */

/* Use the alternate method of avoiding running up off the end of
   the frame chain or following frames back into the startup code.
   See the comments in objfile.h */

#define FRAME_CHAIN_VALID(fp,fi) func_frame_chain_valid (fp, fi)

/* Define other aspects of the stack frame.  */

/* A macro that tells us whether the function invocation represented
   by FI does not have a frame on the stack associated with it.  If it
   does not, FRAMELESS is set to 1, else 0.  */
#define FRAMELESS_FUNCTION_INVOCATION(FI) \
  (frameless_look_for_prologue (FI))

/* Any function with a frame looks like this
   SECOND ARG
   FIRST ARG
   RET PC
   SAVED R2
   SAVED R3
   SAVED FP   <-FP POINTS HERE
   LOCALS0
   LOCALS1    <-SP POINTS HERE
 */

#define FRAME_SAVED_PC(FRAME) h8300_frame_saved_pc(FRAME)
extern CORE_ADDR h8300_frame_saved_pc (struct frame_info *);

#define FRAME_ARGS_ADDRESS(fi) h8300_frame_args_address(fi)
extern CORE_ADDR h8300_frame_args_address (struct frame_info *);

#define FRAME_LOCALS_ADDRESS(fi) h8300_frame_locals_address(fi)
extern CORE_ADDR h8300_frame_locals_address (struct frame_info *);

/* Set VAL to the number of args passed to frame described by FI.
   Can set VAL to -1, meaning no way to tell.  */

/* We can't tell how many args there are
   now that the C compiler delays popping them.  */

#define FRAME_NUM_ARGS(fi) (-1)

/* Return number of bytes at start of arglist that are not really args.  */

#define FRAME_ARGS_SKIP 0

/* Put here the code to store, into a struct frame_saved_regs,
   the addresses of the saved registers of frame described by FRAME_INFO.
   This includes special registers such as pc and fp saved in special
   ways in the stack frame.  sp is even more special:
   the address we return for it IS the sp for the next frame.  */

#define FRAME_FIND_SAVED_REGS(frame_info, frame_saved_regs)	    \
   h8300_frame_find_saved_regs(frame_info, &(frame_saved_regs))
extern void h8300_frame_find_saved_regs (struct frame_info *,
					 struct frame_saved_regs *);


typedef unsigned short INSN_WORD;


#define	PRINT_REGISTER_HOOK(regno) h8300_print_register_hook(regno)
extern void h8300_print_register_hook (int);

#define GDB_TARGET_IS_H8300

a38 33
#define NOP { 0x01, 0x80}	/* A sleep insn */

#define BELIEVE_PCC_PROMOTION 1

/*
 * CALL_DUMMY stuff:
 */

#define USE_GENERIC_DUMMY_FRAMES 1
#define CALL_DUMMY			{0}
#define CALL_DUMMY_LENGTH		(0)
#define CALL_DUMMY_ADDRESS()		entry_point_address ()
#define CALL_DUMMY_LOCATION		AT_ENTRY_POINT
#define CALL_DUMMY_START_OFFSET		(0)
#define CALL_DUMMY_BREAKPOINT_OFFSET	(0)

extern CORE_ADDR h8300_push_arguments (int nargs,
				       struct value **args,
				       CORE_ADDR sp,
				       unsigned char struct_return,
				       CORE_ADDR struct_addr);
extern CORE_ADDR h8300_push_return_address (CORE_ADDR, CORE_ADDR);
extern void h8300_pop_frame (void);

#define PC_IN_CALL_DUMMY(PC, SP, FP)	generic_pc_in_call_dummy (PC, SP, FP)
#define FIX_CALL_DUMMY(DUMMY, START_SP, FUNADDR, NARGS, ARGS, TYPE, GCCP)
#define PUSH_ARGUMENTS(NARGS, ARGS, SP, STRUCT_RETURN, STRUCT_ADDR) \
  (h8300_push_arguments (NARGS, ARGS, SP, STRUCT_RETURN, STRUCT_ADDR))
/* Push an empty stack frame, to record the current PC, etc.  */
#define PUSH_DUMMY_FRAME	generic_push_dummy_frame ()
/* Discard from the stack the innermost frame, restoring all registers.  */
#define POP_FRAME		h8300_pop_frame ()
#define PUSH_RETURN_ADDRESS(PC, SP)	h8300_push_return_address (PC, SP)
a39 4
/* override the standard get_saved_register function with 
   one that takes account of generic CALL_DUMMY frames */
#define GET_SAVED_REGISTER(raw_buffer, optimized, addrp, frame, regnum, lval) \
     generic_unwind_get_saved_register (raw_buffer, optimized, addrp, frame, regnum, lval)
@


1.13
log
@2002-08-05  Andrew Cagney  <ac131313@@redhat.com>
* mcore-tdep.c (mcore_gdbarch_init): Use
generic_unwind_get_saved_register instead of
generic_get_saved_register.
* v850-tdep.c (v850_gdbarch_init): Ditto.
* frv-tdep.c (frv_gdbarch_init): Ditto.
* mn10300-tdep.c (mn10300_gdbarch_init): Ditto.
* s390-tdep.c (s390_gdbarch_init): Ditto.
* d10v-tdep.c (d10v_gdbarch_init): Ditto.
* config/mn10200/tm-mn10200.h (GET_SAVED_REGISTER): Ditto.
* config/h8300/tm-h8300.h (GET_SAVED_REGISTER): Ditto.
@
text
@d178 1
a178 1
#define STORE_RETURN_VALUE(TYPE,VALBUF) \
@


1.12
log
@+	* gdbarch.sh (DEPRECATED_EXTRACT_RETURN_VALUE): Rename
+	EXTRACT_RETURN_VALUE.
+	(DEPRECATED_EXTRACT_STRUCT_VALUE_ADDRESS): Rename
+	EXTRACT_STRUCT_VALUE_ADDRESS.
+	* gdbarch.h, gdbarch.c: Regenerate.
+
+	* values.c (value_being_returned): Handle
+	DEPRECATED_EXTRACT_STRUCT_VALUE_ADDRESS.
+	(EXTRACT_RETURN_VALUE): Define as DEPRECATED_EXTRACT_RETURN_VALUE.
+
+	* arm-linux-tdep.c (arm_linux_init_abi): Update.
+	* arm-tdep.c (arm_gdbarch_init): Update.
+	* avr-tdep.c (avr_gdbarch_init): Update.
+	* cris-tdep.c (cris_gdbarch_init): Update.
+	* d10v-tdep.c (d10v_gdbarch_init): Update.
+	* ia64-tdep.c (ia64_gdbarch_init): Update.
+	* m68hc11-tdep.c (m68hc11_gdbarch_init): Update.
+	* rs6000-tdep.c (rs6000_gdbarch_init): Update.
+	* s390-tdep.c (s390_gdbarch_init): Update.
+	* sh-tdep.c (sh_gdbarch_init): Update.
+	* s390-tdep.c (s390_gdbarch_init): Update.
+	* sparc-tdep.c (sparc_gdbarch_init): Update.
+	* ns32k-tdep.c (ns32k_gdbarch_init): Update.
+	* v850-tdep.c (v850_gdbarch_init): Update.
+	* vax-tdep.c (vax_gdbarch_init): Update.
+	* x86-64-tdep.c (x86_64_gdbarch_init): Update.
+	* xstormy16-tdep.c (xstormy16_gdbarch_init): Update.
+
+	* config/arc/tm-arc.h: Update.
+	* config/d30v/tm-d30v.h: Update.
+	* config/fr30/tm-fr30.h: Update.
+	* config/h8300/tm-h8300.h: Update.
* config/h8500/tm-h8500.h: Update.
* config/i386/tm-i386.h: Update.
* config/i386/tm-ptx.h: Update.
* config/i386/tm-symmetry.h: Update.
* config/i960/tm-i960.h: Update.
* config/m32r/tm-m32r.h: Update.
* config/m68k/tm-delta68.h: Update.
* config/m68k/tm-linux.h: Update.
* config/m68k/tm-m68k.h: Update.
* config/m88k/tm-m88k.h: Update.
* config/mcore/tm-mcore.h: Update.
* config/mips/tm-mips.h: Update.
* config/mn10200/tm-mn10200.h: Update.
* config/pa/tm-hppa.h: Update.
* config/pa/tm-hppa64.h: Update.
* config/sparc/tm-sp64.h: Update.
* config/sparc/tm-sparc.h: Update.
* config/sparc/tm-sparclet.h: Update.
* config/z8k/tm-z8k.h: Update.
@
text
@d314 1
a314 1
     generic_get_saved_register (raw_buffer, optimized, addrp, frame, regnum, lval)
@


1.11
log
@h8300: Add support of EXR register
@
text
@d169 1
a169 1
#define EXTRACT_RETURN_VALUE(TYPE,REGBUF,VALBUF) \
d191 1
a191 1
#define EXTRACT_STRUCT_VALUE_ADDRESS(REGBUF) \
@


1.11.2.1
log
@Merge with mainline, kseitz_interps-20020619-merge.
@
text
@d169 1
a169 1
#define DEPRECATED_EXTRACT_RETURN_VALUE(TYPE,REGBUF,VALBUF) \
d191 1
a191 1
#define DEPRECATED_EXTRACT_STRUCT_VALUE_ADDRESS(REGBUF) \
@


1.11.2.2
log
@Merge with kseitz_interps-20020809-merge of CVS head.
@
text
@d314 1
a314 1
     generic_unwind_get_saved_register (raw_buffer, optimized, addrp, frame, regnum, lval)
@


1.11.2.3
log
@Merge with kseitz_interps-20020829-merge tag from trunk.
@
text
@d178 1
a178 1
#define DEPRECATED_STORE_RETURN_VALUE(TYPE,VALBUF) \
@


1.11.2.4
log
@Merge with kseitz_interps-20020930-merge.
@
text
@d21 3
d26 6
a31 1
#define GDB_MULTI_ARCH GDB_MULTI_ARCH_PARTIAL
d39 235
a275 5
/* Needed for remote.c */
#define REMOTE_BREAKPOINT { 0x57, 0x30}		/* trapa #3 */
/* Needed for remote-hms.c */
#define CCR_REGNUM 8
/* Needed for remote-e7000.c */
d277 33
d311 4
@


1.10
log
@Eliminate TARGET_BYTE_ORDER.
@
text
@d103 1
a103 1
#define NUM_REGS 13
d140 1
a140 1
  {"r0", "r1", "r2", "r3", "r4", "r5", "r6", "sp", "ccr","pc","cycles","tick","inst"}
d160 1
d276 1
a276 1
#define NUM_REALREGS 10
@


1.10.6.1
log
@merge from trunk
@
text
@d103 1
a103 1
#define NUM_REGS 14
d140 1
a140 1
  {"r0", "r1", "r2", "r3", "r4", "r5", "r6", "sp", "ccr","pc","cycles","tick","inst",""}
a159 1
#define EXR_REGNUM     11	/* Contains processor status */
d168 1
a168 1
#define DEPRECATED_EXTRACT_RETURN_VALUE(TYPE,REGBUF,VALBUF) \
d190 1
a190 1
#define DEPRECATED_EXTRACT_STRUCT_VALUE_ADDRESS(REGBUF) \
d275 1
a275 1
#define NUM_REALREGS (h8300smode?11:10)
@


1.9
log
@Eliminate IEEE_FLOAT.
@
text
@a60 2
/* Define the bit, byte, and word ordering of the machine.  */
#define TARGET_BYTE_ORDER BFD_ENDIAN_BIG
@


1.8
log
@s/BIG_ENDIAN/BFD_ENDIAN_BIG/
@
text
@a60 1
#define IEEE_FLOAT (1)
@


1.7
log
@* config/h8300/tm-h8300.h (FRAME_ARGS_ADDRESS): Changed to use
h8300_frame_args_address from frame_args_address.
(FRAME_LOCALS_ADDRESS): Changed to use h8300_frame_locals_address
from frame_locals_address.
(PRINT_REGISTER_HOOK): Changed to use h8300_print_register_hook
from print_register_hook.
(h8300_frame_args_address): Declare.
(h8300_frame_find_saved_regs): Declare.
(h8300_frame_locals_address): Declare.
(h8300_frame_saved_pc): Declare.
(h8300_pop_frame): Declare.
(h8300_print_register_hook): Declare.
* h8300-tdep.c (h8300_frame_find_saved_regs): Removed declaration.
(h8300_frame_args_address): Renamed from frame_args_address.
(h8300_frame_locals_address): Renamed from frame_locals_address.
(h8300_pop_frame): Renamed from pop_frame.
(h8300_print_register_hook): Renamed from print_register_hook.
-------------------------------------------------------------------
@
text
@d63 1
a63 1
#define TARGET_BYTE_ORDER BIG_ENDIAN
@


1.6
log
@Include regcache.h
@
text
@d238 1
d240 2
a241 1
#define FRAME_ARGS_ADDRESS(fi) frame_args_address(fi)
d243 2
a244 1
#define FRAME_LOCALS_ADDRESS(fi) frame_locals_address(fi);
d266 2
d273 2
a274 1
#define	PRINT_REGISTER_HOOK(regno) print_register_hook(regno)
d301 1
@


1.5
log
@Update/correct copyright notices.
@
text
@d22 2
@


1.4
log
@2000-07-19  Elena Zannoni  <ezannoni@@kwikemart.cygnus.com>

        Multiarch the sh target.
	* sh-tdep.c:
	(sh_generic_reg_names, sh_reg_names,sh3_reg_names, sh3e_reg_names,
 	sh_dsp_reg_names, sh3_dsp_reg_names, sh_processor_type_table):
 	Remove.
	(XMALLOC): Define.
	(struct frame_extra_info): Define.
	(sh_register_raw_size, sh_register_virtual_size,
 	sh_register_virtual_type, sh_register_byte, sh_breakpoint_from_pc,
 	sh_frame_saved_pc, sh_skip_prologue,
 	sh_nofp_frame_init_saved_regs, sh_fp_frame_init_saved_regs,
 	sh_extract_struct_value_address, sh_use_struct_convention,
 	sh_store_struct_return, sh_push_arguments, sh_push_return_address,
 	sh_saved_pc_after_call, sh_generic_register_name,
 	sh_sh_register_name, sh_sh3_register_name, sh_sh3e_register_name,
 	sh_sh_dsp_register_name, sh_sh3_dsp_register_name,
 	sh_frame_args_address, sh_frame_locals_address,
 	sh_coerce_float_to_double, sh_default_store_return_value,
 	sh3e_sh4_store_return_value, sh_generic_show_regs,
 	sh3_show_regs,sh3e_show_regs, sh3_dsp_show_regs, sh4_show_regs,
 	sh_dsp_show_regs, sh_register_byte, sh_register_raw_size,
 	sh_register_virtual_size, sh_sh3e_register_virtual_type,
 	sh_default_register_virtual_type, sh_gdbarch_init): New functions.
	(sh_target_architecture_hook, sh_frame_find_saved_regs,
 	sh_show_regs): Delete functions.
	(sh_frame_chain, sh_find_callers_reg, sh_init_extra_frame_info,
 	sh_pop_frame, sh_extract_return_value): Update

	* config/sh/tm-sh.h (GDB_MULTI_ARCH): Define to 1.
	(struct gdbarch_tdep): Define.
	Remove all unnecessary defines.

	* remote-e7000.c ({PR,GBR,SR,MACL,VBR,MACH}_REGNUM): Define to -1,
 	for h8300 case.
	(want_sh,want_nopc_sh,want_nopc_sh3): Make nomenclature
 	consistent.
	(e7000_fetch_registers): Remove ifdef GDB_TARGET_IS_SH, use
 	runtime check instead.
	(e7000_wait): Ditto.

	* sh3-rom.c (sh3_supply_register): Use gdbarch_tdep to get the SSR
 	and SPC register numbers.
	(sh3_regnames, sh3e_regnames): Don't specify a size.

	* config/h8300/tm-h8300.h: Add comment.
@
text
@d2 2
a3 1
   Copyright 1992, 1993, 2000 Free Software Foundation, Inc.
@


1.3
log
@PARAMS removal.
@
text
@d2 1
a2 1
   Copyright 1992, 1993 Free Software Foundation, Inc.
d28 6
a33 1
/* 1 if debugging H8/300H application */
@


1.2
log
@Bring IEEE_FLOAT under gdbarch's control.
* gdbarch.sh (IEEE_FLOAT): New entry.
* gdbarch.c, gdbarch.h: Regenerated.
* valprint.c (IEEE_FLOAT): Provide a default #definition for this.
(print_floating): Use IEEE_FLOAT as if it were an expression; use
the code specific to IEEE-format numbers whenever the value of
IEEE_FLOAT is non-zero.
* config/a29k/tm-a29k.h, config/alpha/tm-alpha.h,
config/arc/tm-arc.h, config/arm/tm-arm.h, config/fr30/tm-fr30.h,
config/h8300/tm-h8300.h, config/i386/tm-i386.h,
config/i960/tm-i960.h, config/m88k/tm-m88k.h,
config/mips/tm-mips.h, config/pa/tm-hppa.h,
config/sparc/tm-sparc.h, config/delta/tm-delta.h,
config/frv/tm-frv.h (IEEE_FLOAT): For all ports that #define
IEEE_FLOAT, make sure they give it the value (1).
@
text
@d162 1
a162 1
extern void h8300_extract_return_value PARAMS ((struct type *, char *, char *));
d171 1
a171 1
extern void h8300_store_return_value PARAMS ((struct type *, char *));
d199 1
a199 1
CORE_ADDR h8300_frame_chain PARAMS ((struct frame_info *));
d281 6
a286 6
extern CORE_ADDR h8300_push_arguments PARAMS ((int nargs,
					       struct value ** args,
					       CORE_ADDR sp,
					       unsigned char struct_return,
					       CORE_ADDR struct_addr));
extern CORE_ADDR h8300_push_return_address PARAMS ((CORE_ADDR, CORE_ADDR));
@


1.1
log
@Initial revision
@
text
@d4 1
a4 1
This file is part of GDB.
d6 14
a19 13
This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
a22 1
#ifdef __STDC__
a26 1
#endif
d53 1
a53 1
#define IEEE_FLOAT
d71 1
a71 1
#define SKIP_PROLOGUE(ip)   {(ip) = h8300_skip_prologue(ip);}
d86 3
a88 3
/*#define BREAKPOINT {0x7A, 0xFF}*/
#define BREAKPOINT {0x01, 0x80}  /* Sleep */
#define REMOTE_BREAKPOINT { 0x57, 0x30}  /* trapa #3 */
d98 1
a98 1
#define NUM_REGS 13  
d162 1
a162 1
extern void h8300_extract_return_value PARAMS((struct type *, char *, char *));
d171 1
a171 1
extern void h8300_store_return_value PARAMS((struct type *, char *));
d188 1
a188 1
     
d208 1
a208 1
#define FRAME_CHAIN_VALID(fp,fi) alternate_frame_chain_valid (fp, fi)
d215 2
a216 2
#define FRAMELESS_FUNCTION_INVOCATION(FI, FRAMELESS) \
  (FRAMELESS) = frameless_look_for_prologue(FI)
d227 1
a227 1
   */
d241 1
a241 1
#define FRAME_NUM_ARGS(val,fi) (val = -1)
d265 1
a265 1
#define NOP { 0x01, 0x80} /* A sleep insn */
d273 1
a273 1
#define USE_GENERIC_DUMMY_FRAMES
d281 2
a282 2
extern CORE_ADDR h8300_push_arguments PARAMS ((int nargs, 
					       struct value **args, 
d288 1
a288 1
#define PC_IN_CALL_DUMMY(PC, SP, FP)	generic_pc_in_call_dummy (PC, SP)
d291 1
a291 1
  (SP) = h8300_push_arguments (NARGS, ARGS, SP, STRUCT_RETURN, STRUCT_ADDR)
d300 2
a301 3
#define GET_SAVED_REGISTER


@


1.1.1.1
log
@Initial creation of sourceware repository
@
text
@@


1.1.1.2
log
@import gdb-19990422 snapshot
@
text
@d274 1
a274 1
#define USE_GENERIC_DUMMY_FRAMES 1
d289 1
a289 1
#define PC_IN_CALL_DUMMY(PC, SP, FP)	generic_pc_in_call_dummy (PC, SP, FP)
d301 1
a301 3
#define GET_SAVED_REGISTER(raw_buffer, optimized, addrp, frame, regnum, lval) \
     generic_get_saved_register (raw_buffer, optimized, addrp, frame, regnum, lval)

@


1.1.1.3
log
@import gdb-19990504 snapshot
@
text
@d72 1
a72 1
#define SKIP_PROLOGUE(ip)   (h8300_skip_prologue(ip))
@


1.1.1.4
log
@import gdb-1999-05-25 snapshot
@
text
@d216 2
a217 2
#define FRAMELESS_FUNCTION_INVOCATION(FI) \
  (frameless_look_for_prologue (FI))
d242 1
a242 1
#define FRAME_NUM_ARGS(fi) (-1)
d292 1
a292 1
  (h8300_push_arguments (NARGS, ARGS, SP, STRUCT_RETURN, STRUCT_ADDR))
@


1.1.1.5
log
@import gdb-1999-07-07 post reformat
@
text
@d4 1
a4 1
   This file is part of GDB.
d6 13
a18 14
   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place - Suite 330,
   Boston, MA 02111-1307, USA.  */
d87 3
a89 3
/*#define BREAKPOINT {0x7A, 0xFF} */
#define BREAKPOINT {0x01, 0x80}	/* Sleep */
#define REMOTE_BREAKPOINT { 0x57, 0x30}		/* trapa #3 */
d99 1
a99 1
#define NUM_REGS 13
d163 1
a163 1
extern void h8300_extract_return_value PARAMS ((struct type *, char *, char *));
d172 1
a172 1
extern void h8300_store_return_value PARAMS ((struct type *, char *));
d189 1
a189 1

d228 1
a228 1
 */
d266 1
a266 1
#define NOP { 0x01, 0x80}	/* A sleep insn */
d282 2
a283 2
extern CORE_ADDR h8300_push_arguments PARAMS ((int nargs,
					       struct value ** args,
d303 3
@


1.1.1.6
log
@import gdb-1999-08-30 snapshot
@
text
@d23 1
d28 1
@


1.1.1.7
log
@import gdb-1999-12-13 snapshot
@
text
@d208 1
a208 1
#define FRAME_CHAIN_VALID(fp,fi) func_frame_chain_valid (fp, fi)
@


