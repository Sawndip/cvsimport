head	1.25;
access;
symbols
	gdb_6_0-2003-10-04-release:1.24
	kettenis_sparc-20030918-branch:1.24.0.36
	kettenis_sparc-20030918-branchpoint:1.24
	carlton_dictionary-20030917-merge:1.24
	ezannoni_pie-20030916-branchpoint:1.24
	ezannoni_pie-20030916-branch:1.24.0.34
	cagney_x86i386-20030821-branch:1.24.0.32
	cagney_x86i386-20030821-branchpoint:1.24
	carlton_dictionary-20030805-merge:1.24
	carlton_dictionary-20030627-merge:1.24
	gdb_6_0-branch:1.24.0.30
	gdb_6_0-2003-06-23-branchpoint:1.24
	jimb-ppc64-linux-20030613-branch:1.24.0.28
	jimb-ppc64-linux-20030613-branchpoint:1.24
	cagney_convert-20030606-branch:1.24.0.26
	cagney_convert-20030606-branchpoint:1.24
	cagney_writestrings-20030508-branch:1.24.0.24
	cagney_writestrings-20030508-branchpoint:1.24
	jimb-ppc64-linux-20030528-branch:1.24.0.22
	jimb-ppc64-linux-20030528-branchpoint:1.24
	carlton_dictionary-20030523-merge:1.24
	cagney_fileio-20030521-branch:1.24.0.20
	cagney_fileio-20030521-branchpoint:1.24
	kettenis_i386newframe-20030517-mergepoint:1.24
	jimb-ppc64-linux-20030509-branch:1.24.0.18
	jimb-ppc64-linux-20030509-branchpoint:1.24
	kettenis_i386newframe-20030504-mergepoint:1.24
	carlton_dictionary-20030430-merge:1.24
	kettenis_i386newframe-20030419-branch:1.24.0.16
	kettenis_i386newframe-20030419-branchpoint:1.24
	carlton_dictionary-20030416-merge:1.24
	cagney_frameaddr-20030409-mergepoint:1.24
	kettenis_i386newframe-20030406-branch:1.24.0.14
	kettenis_i386newframe-20030406-branchpoint:1.24
	cagney_frameaddr-20030403-branchpoint:1.24
	cagney_frameaddr-20030403-branch:1.24.0.12
	cagney_framebase-20030330-mergepoint:1.24
	cagney_framebase-20030326-branch:1.24.0.10
	cagney_framebase-20030326-branchpoint:1.24
	cagney_lazyid-20030317-branch:1.24.0.8
	cagney_lazyid-20030317-branchpoint:1.24
	kettenis-i386newframe-20030316-mergepoint:1.24
	offbyone-20030313-branch:1.24.0.6
	offbyone-20030313-branchpoint:1.24
	kettenis-i386newframe-20030308-branch:1.24.0.4
	kettenis-i386newframe-20030308-branchpoint:1.24
	carlton_dictionary-20030305-merge:1.24
	cagney_offbyone-20030303-branch:1.24.0.2
	cagney_offbyone-20030303-branchpoint:1.24
	carlton_dictionary-20030207-merge:1.24
	interps-20030203-mergepoint:1.23
	interps-20030202-branch:1.23.0.4
	interps-20030202-branchpoint:1.23
	cagney-unwind-20030108-branch:1.23.0.2
	cagney-unwind-20030108-branchpoint:1.23
	carlton_dictionary-20021223-merge:1.21
	gdb_5_3-2002-12-12-release:1.12
	carlton_dictionary-20021115-merge:1.13
	kseitz_interps-20021105-merge:1.12
	kseitz_interps-20021103-merge:1.12
	drow-cplus-merge-20021020:1.12
	drow-cplus-merge-20021025:1.12
	carlton_dictionary-20021025-merge:1.12
	carlton_dictionary-20021011-merge:1.12
	drow-cplus-branch:1.12.0.10
	drow-cplus-branchpoint:1.12
	kseitz_interps-20020930-merge:1.12
	carlton_dictionary-20020927-merge:1.12
	carlton_dictionary-branch:1.12.0.8
	carlton_dictionary-20020920-branchpoint:1.12
	gdb_5_3-branch:1.12.0.6
	gdb_5_3-2002-09-04-branchpoint:1.12
	kseitz_interps-20020829-merge:1.12
	cagney_sysregs-20020825-branch:1.12.0.4
	cagney_sysregs-20020825-branchpoint:1.12
	readline_4_3-import-branch:1.12.0.2
	readline_4_3-import-branchpoint:1.12
	gdb_5_2_1-2002-07-23-release:1.7
	kseitz_interps-20020528-branch:1.8.0.6
	kseitz_interps-20020528-branchpoint:1.8
	cagney_regbuf-20020515-branch:1.8.0.4
	cagney_regbuf-20020515-branchpoint:1.8
	jimb-macro-020506-branch:1.8.0.2
	jimb-macro-020506-branchpoint:1.8
	gdb_5_2-2002-04-29-release:1.7
	gdb_5_2-branch:1.7.0.2
	gdb_5_2-2002-03-03-branchpoint:1.7
	gdb_5_1_1-2002-01-24-release:1.5
	gdb_5_1_0_1-2002-01-03-release:1.5
	cygnus_cvs_20020108_pre:1.6
	gdb_5_1_0_1-2002-01-03-branchpoint:1.5
	gdb_5_1_0_1-2002-01-03-branch:1.5.0.8
	gdb_5_1-2001-11-21-release:1.5
	gdb_s390-2001-09-26-branch:1.5.0.6
	gdb_s390-2001-09-26-branchpoint:1.5
	gdb_5_1-2001-07-29-branch:1.5.0.4
	gdb_5_1-2001-07-29-branchpoint:1.5
	dberlin-typesystem-branch:1.5.0.2
	dberlin-typesystem-branchpoint:1.5
	gdb-post-ptid_t-2001-05-03:1.5
	gdb-pre-ptid_t-2001-05-03:1.5
	insight-precleanup-2001-01-01:1.2
	gdb-post-protoization-2000-07-29:1.2
	gdb-pre-protoization-2000-07-29:1.2
	gdb-premipsmulti-2000-06-06-branch:1.2.0.2
	gdb-premipsmulti-2000-06-06-branchpoint:1.2
	gdb-post-params-removal-2000-06-04:1.2
	gdb-pre-params-removal-2000-06-04:1.2
	gdb-post-params-removal-2000-05-28:1.2
	gdb-pre-params-removal-2000-05-28:1.1.1.8
	gdb_5_0-2000-05-19-release:1.1.1.8
	gdb_4_18_2-2000-05-18-release:1.1.1.8
	gdb_4_95_1-2000-05-11-snapshot:1.1.1.8
	gdb_4_95_0-2000-04-27-snapshot:1.1.1.8
	gdb_5_0-2000-04-10-branch:1.1.1.8.0.2
	gdb_5_0-2000-04-10-branchpoint:1.1.1.8
	repo-unification-2000-02-06:1.1.1.8
	insight-2000-02-04:1.1.1.8
	gdb-2000-02-04:1.1.1.8
	gdb-2000-02-02:1.1.1.8
	gdb-2000-02-01:1.1.1.8
	gdb-2000-01-31:1.1.1.8
	gdb-2000-01-26:1.1.1.8
	gdb-2000-01-24:1.1.1.8
	gdb-2000-01-17:1.1.1.8
	gdb-2000-01-10:1.1.1.8
	gdb-2000-01-05:1.1.1.8
	gdb-1999-12-21:1.1.1.8
	gdb-1999-12-13:1.1.1.8
	gdb-1999-12-07:1.1.1.7
	gdb-1999-12-06:1.1.1.7
	gdb-1999-11-16:1.1.1.7
	gdb-1999-11-08:1.1.1.7
	gdb-1999-11-01:1.1.1.7
	gdb-1999-10-25:1.1.1.7
	gdb-1999-10-18:1.1.1.7
	gdb-1999-10-11:1.1.1.7
	gdb-1999-10-04:1.1.1.7
	gdb-1999-09-28:1.1.1.7
	gdb-1999-09-21:1.1.1.7
	gdb-1999-09-13:1.1.1.7
	gdb-1999-09-08:1.1.1.7
	gdb-1999-08-30:1.1.1.6
	gdb-1999-08-23:1.1.1.5
	gdb-1999-08-16:1.1.1.5
	gdb-1999-08-09:1.1.1.5
	gdb-1999-08-02:1.1.1.5
	gdb-1999-07-26:1.1.1.5
	gdb-1999-07-19:1.1.1.5
	gdb-1999-07-12:1.1.1.5
	gdb-post-reformat-19990707:1.1.1.5
	gdb-1999-07-07-post-reformat-snapshot:1.1.1.5
	gdb-pre-reformat-19990707:1.1.1.4
	gdb-1999-07-07:1.1.1.4
	gdb-1999-07-05:1.1.1.4
	gdb-1999-06-28:1.1.1.4
	gdb-1999-06-21:1.1.1.4
	gdb-1999-06-14:1.1.1.4
	gdb-1999-06-07:1.1.1.4
	gdb-1999-06-01:1.1.1.4
	gdb-4_18-branch:1.1.1.1.0.2
	gdb-4_18-release:1.1.1.1
	gdb-1999-05-25:1.1.1.4
	gdb-1999-05-19:1.1.1.3
	gdb-1999-05-10:1.1.1.3
	gdb-19990504:1.1.1.3
	gdb-19990422:1.1.1.2
	SNAPSHOT:1.1.1
	gdb-4_18:1.1.1.1
	GDB_4_18:1.1.1;
locks; strict;
comment	@ * @;
expand	@o@;


1.25
date	2003.10.06.20.23.40;	author cagney;	state dead;
branches;
next	1.24;

1.24
date	2003.02.04.22.49.19;	author cagney;	state Exp;
branches
	1.24.34.1;
next	1.23;

1.23
date	2003.01.08.01.53.38;	author cagney;	state Exp;
branches;
next	1.22;

1.22
date	2003.01.05.01.39.55;	author drow;	state Exp;
branches;
next	1.21;

1.21
date	2002.12.11.02.26.37;	author cagney;	state Exp;
branches;
next	1.20;

1.20
date	2002.12.09.02.04.16;	author cagney;	state Exp;
branches;
next	1.19;

1.19
date	2002.12.08.22.39.09;	author cagney;	state Exp;
branches;
next	1.18;

1.18
date	2002.12.01.19.07.16;	author cagney;	state Exp;
branches;
next	1.17;

1.17
date	2002.11.28.21.38.44;	author cagney;	state Exp;
branches;
next	1.16;

1.16
date	2002.11.27.20.44.09;	author cagney;	state Exp;
branches;
next	1.15;

1.15
date	2002.11.27.01.08.49;	author cagney;	state Exp;
branches;
next	1.14;

1.14
date	2002.11.16.01.00.07;	author cagney;	state Exp;
branches;
next	1.13;

1.13
date	2002.11.14.00.25.04;	author cagney;	state Exp;
branches;
next	1.12;

1.12
date	2002.08.24.00.21.36;	author cagney;	state Exp;
branches
	1.12.8.1
	1.12.10.1;
next	1.11;

1.11
date	2002.08.05.17.12.56;	author cagney;	state Exp;
branches;
next	1.10;

1.10
date	2002.07.11.13.50.50;	author cagney;	state Exp;
branches;
next	1.9;

1.9
date	2002.06.14.22.55.48;	author cagney;	state Exp;
branches;
next	1.8;

1.8
date	2002.05.01.21.26.52;	author cagney;	state Exp;
branches
	1.8.4.1
	1.8.6.1;
next	1.7;

1.7
date	2002.01.29.04.42.42;	author cagney;	state Exp;
branches;
next	1.6;

1.6
date	2001.12.15.16.53.23;	author cagney;	state Exp;
branches;
next	1.5;

1.5
date	2001.03.06.08.21.32;	author kevinb;	state Exp;
branches;
next	1.4;

1.4
date	2001.03.03.01.38.49;	author cagney;	state Exp;
branches;
next	1.3;

1.3
date	2001.02.25.04.45.12;	author kevinb;	state Exp;
branches;
next	1.2;

1.2
date	2000.05.28.01.12.36;	author kevinb;	state Exp;
branches;
next	1.1;

1.1
date	99.04.16.01.34.23;	author shebs;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.04.16.01.34.23;	author shebs;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	99.04.26.18.26.29;	author shebs;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	99.05.05.14.43.39;	author shebs;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	99.05.25.18.05.13;	author jsm;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	99.07.07.20.15.53;	author jsm;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	99.08.31.01.07.46;	author jsm;	state Exp;
branches;
next	1.1.1.7;

1.1.1.7
date	99.09.08.23.59.59;	author shebs;	state Exp;
branches;
next	1.1.1.8;

1.1.1.8
date	99.12.14.01.05.42;	author jsm;	state Exp;
branches;
next	;

1.8.4.1
date	2002.06.15.16.43.09;	author cagney;	state Exp;
branches;
next	;

1.8.6.1
date	2002.06.20.01.35.16;	author kseitz;	state Exp;
branches;
next	1.8.6.2;

1.8.6.2
date	2002.07.22.21.47.08;	author kseitz;	state Exp;
branches;
next	1.8.6.3;

1.8.6.3
date	2002.08.09.18.34.30;	author kseitz;	state Exp;
branches;
next	1.8.6.4;

1.8.6.4
date	2002.08.30.22.52.48;	author kseitz;	state Exp;
branches;
next	;

1.12.8.1
date	2002.11.15.19.19.06;	author carlton;	state Exp;
branches;
next	1.12.8.2;

1.12.8.2
date	2002.12.23.19.39.03;	author carlton;	state Exp;
branches;
next	1.12.8.3;

1.12.8.3
date	2003.02.07.19.17.55;	author carlton;	state Exp;
branches;
next	1.12.8.4;

1.12.8.4
date	2003.11.11.23.51.05;	author carlton;	state dead;
branches;
next	;

1.12.10.1
date	2003.12.14.20.27.40;	author drow;	state dead;
branches;
next	;

1.24.34.1
date	2004.03.23.20.30.16;	author ezannoni;	state dead;
branches;
next	;


desc
@@


1.25
log
@2003-10-06  Andrew Cagney  <cagney@@redhat.com>

	* config/nm-m3.h, config/h8500/h8500.mt: Delete obsolete files.
	* config/h8500/tm-h8500.h, config/i386/nm-ptx4.h: Ditto.
	* config/i386/nm-symmetry.h, config/i386/ptx.mh: Ditto.
	* config/i386/ptx.mt, config/i386/ptx4.mh: Ditto.
	* config/i386/ptx4.mt, config/i386/symmetry.mh: Ditto.
	* config/i386/symmetry.mt, config/i386/tm-ptx.h: Ditto.
	* config/i386/tm-ptx4.h, config/i386/tm-symmetry.h: Ditto.
	* config/i386/xm-ptx.h, config/i386/xm-ptx4.h: Ditto.
	* config/i386/xm-symmetry.h, config/mips/mipsm3.mh: Ditto.
	* config/mips/mipsm3.mt, config/mips/tm-mipsm3.h: Ditto.
	* config/mips/xm-mipsm3.h, config/mn10200/mn10200.mt: Ditto.
	* config/mn10200/tm-mn10200.h, config/pa/hppabsd.mh: Ditto.
	* config/pa/hppabsd.mt, config/pa/hppaosf.mh: Ditto.
	* config/pa/hppaosf.mt, config/pa/hppapro.mt: Ditto.
	* config/pa/nm-hppab.h, config/pa/nm-hppao.h: Ditto.
	* config/pa/tm-hppab.h, config/pa/tm-hppao.h: Ditto.
	* config/pa/tm-pro.h, config/pa/xm-hppab.h: Ditto.
	* config/pa/xm-pa.h, config/sparc/sparclet.mt: Ditto.
	* config/sparc/sparclite.mt, config/sparc/tm-sparclet.h: Ditto.
	* config/sparc/tm-sparclite.h, config/z8k/tm-z8k.h: Ditto.
	* config/z8k/z8k.mt: Ditto.
@
text
@// OBSOLETE /* Parameters for execution on a Matsushita mn10200 processor.
// OBSOLETE 
// OBSOLETE    Copyright 1997, 1998, 1999, 2000, 2001, 2002, 2003 Free Software
// OBSOLETE    Foundation, Inc.
// OBSOLETE 
// OBSOLETE    Contributed by Geoffrey Noer <noer@@cygnus.com>
// OBSOLETE 
// OBSOLETE    This file is part of GDB.
// OBSOLETE 
// OBSOLETE    This program is free software; you can redistribute it and/or modify
// OBSOLETE    it under the terms of the GNU General Public License as published by
// OBSOLETE    the Free Software Foundation; either version 2 of the License, or
// OBSOLETE    (at your option) any later version.
// OBSOLETE 
// OBSOLETE    This program is distributed in the hope that it will be useful,
// OBSOLETE    but WITHOUT ANY WARRANTY; without even the implied warranty of
// OBSOLETE    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// OBSOLETE    GNU General Public License for more details.
// OBSOLETE 
// OBSOLETE    You should have received a copy of the GNU General Public License
// OBSOLETE    along with this program; if not, write to the Free Software
// OBSOLETE    Foundation, Inc., 59 Temple Place - Suite 330,
// OBSOLETE    Boston, MA 02111-1307, USA.  */
// OBSOLETE 
// OBSOLETE /* FIXME: cagney/2001-03-01: The below macros refer to functions
// OBSOLETE    declared in "regcache.h".  The ``correct fix'' is to convert those
// OBSOLETE    macros into functions.  */
// OBSOLETE #include "regcache.h"
// OBSOLETE #include "symtab.h"		/* For namespace_enum.  */
// OBSOLETE #include "symfile.h"		/* For entry_point_address().  */
// OBSOLETE 
// OBSOLETE /* ints are only 16bits on the mn10200.  */
// OBSOLETE #undef TARGET_INT_BIT
// OBSOLETE #define TARGET_INT_BIT 16
// OBSOLETE 
// OBSOLETE /* The mn10200 doesn't support long long types.  */
// OBSOLETE #undef TARGET_LONG_LONG_BIT
// OBSOLETE #define TARGET_LONG_LONG_BIT 32
// OBSOLETE 
// OBSOLETE /* The mn10200 doesn't support double or long double either.  */
// OBSOLETE #undef TARGET_DOUBLE_BIT
// OBSOLETE #undef TARGET_LONG_DOUBLE_BIT
// OBSOLETE #define TARGET_DOUBLE_BIT 32
// OBSOLETE #define TARGET_LONG_DOUBLE_BIT 32
// OBSOLETE 
// OBSOLETE /* Not strictly correct, but the machine independent code is not
// OBSOLETE    ready to handle any of the basic sizes not being a power of two.  */
// OBSOLETE #undef TARGET_PTR_BIT
// OBSOLETE #define TARGET_PTR_BIT 32
// OBSOLETE 
// OBSOLETE /* The mn10200 really has 24 bit registers but the simulator reads/writes
// OBSOLETE    them as 32bit values, so we claim they're 32bits each.  This may have
// OBSOLETE    to be tweaked if the Matsushita emulator/board really deals with them
// OBSOLETE    as 24bits each.  */
// OBSOLETE #define REGISTER_SIZE 4
// OBSOLETE 
// OBSOLETE #define MAX_REGISTER_RAW_SIZE REGISTER_SIZE
// OBSOLETE #define NUM_REGS 11
// OBSOLETE 
// OBSOLETE #define REGISTER_BYTES (NUM_REGS * REGISTER_SIZE)
// OBSOLETE 
// OBSOLETE #define REGISTER_NAMES \
// OBSOLETE { "d0", "d1", "d2", "d3", "a0", "a1", "a2", "sp", \
// OBSOLETE   "pc", "mdr", "psw"}
// OBSOLETE 
// OBSOLETE #define FP_REGNUM 6
// OBSOLETE #define SP_REGNUM 7
// OBSOLETE #define PC_REGNUM 8
// OBSOLETE #define MDR_REGNUM 9
// OBSOLETE #define PSW_REGNUM 10
// OBSOLETE 
// OBSOLETE /* Treat the registers as 32bit values.  */
// OBSOLETE #define REGISTER_VIRTUAL_TYPE(REG) builtin_type_long
// OBSOLETE 
// OBSOLETE #define REGISTER_BYTE(REG) ((REG) * REGISTER_SIZE)
// OBSOLETE #define REGISTER_VIRTUAL_SIZE(REG) REGISTER_SIZE
// OBSOLETE #define REGISTER_RAW_SIZE(REG) REGISTER_SIZE
// OBSOLETE 
// OBSOLETE #define MAX_REGISTER_VIRTUAL_SIZE REGISTER_SIZE
// OBSOLETE 
// OBSOLETE /* The breakpoint instruction must be the same size as te smallest
// OBSOLETE    instruction in the instruction set.
// OBSOLETE 
// OBSOLETE    The Matsushita mn10x00 processors have single byte instructions
// OBSOLETE    so we need a single byte breakpoint.  Matsushita hasn't defined
// OBSOLETE    one, so we defined it ourselves.
// OBSOLETE 
// OBSOLETE    0xff is the only available single byte insn left on the mn10200.  */
// OBSOLETE #define BREAKPOINT {0xff}
// OBSOLETE 
// OBSOLETE #define FUNCTION_START_OFFSET 0
// OBSOLETE 
// OBSOLETE #define DECR_PC_AFTER_BREAK 0
// OBSOLETE 
// OBSOLETE /* Stacks grow the normal way.  */
// OBSOLETE #define INNER_THAN(lhs,rhs) ((lhs) < (rhs))
// OBSOLETE 
// OBSOLETE #define SAVED_PC_AFTER_CALL(frame) \
// OBSOLETE   (read_memory_integer (read_register (SP_REGNUM), REGISTER_SIZE) & 0xffffff)
// OBSOLETE 
// OBSOLETE struct frame_info;
// OBSOLETE struct frame_saved_regs;
// OBSOLETE struct type;
// OBSOLETE struct value;
// OBSOLETE 
// OBSOLETE #define EXTRA_FRAME_INFO struct frame_saved_regs fsr; int status; int stack_size;
// OBSOLETE 
// OBSOLETE extern void mn10200_init_extra_frame_info (struct frame_info *);
// OBSOLETE #define INIT_EXTRA_FRAME_INFO(fromleaf, fi) mn10200_init_extra_frame_info (fi)
// OBSOLETE #define DEPRECATED_INIT_FRAME_PC(x,y) (init_frame_pc_noop (x, y))
// OBSOLETE #define INIT_FRAME_PC_FIRST(x,y) (init_frame_pc_noop (x, y))
// OBSOLETE 
// OBSOLETE extern void mn10200_frame_find_saved_regs (struct frame_info *,
// OBSOLETE 					   struct frame_saved_regs *);
// OBSOLETE #define FRAME_FIND_SAVED_REGS(fi, regaddr) regaddr = fi->fsr
// OBSOLETE 
// OBSOLETE extern CORE_ADDR mn10200_frame_chain (struct frame_info *);
// OBSOLETE #define FRAME_CHAIN(fi) mn10200_frame_chain (fi)
// OBSOLETE 
// OBSOLETE extern CORE_ADDR mn10200_find_callers_reg (struct frame_info *, int);
// OBSOLETE extern CORE_ADDR mn10200_frame_saved_pc (struct frame_info *);
// OBSOLETE #define FRAME_SAVED_PC(FI) (mn10200_frame_saved_pc (FI))
// OBSOLETE 
// OBSOLETE /* Extract from an array REGBUF containing the (raw) register state
// OBSOLETE    a function return value of type TYPE, and copy that, in virtual format,
// OBSOLETE    into VALBUF.  */
// OBSOLETE 
// OBSOLETE #define DEPRECATED_EXTRACT_RETURN_VALUE(TYPE, REGBUF, VALBUF) \
// OBSOLETE   { \
// OBSOLETE     if (TYPE_LENGTH (TYPE) > 8) \
// OBSOLETE       internal_error (__FILE__, __LINE__, "failed internal consistency check"); \
// OBSOLETE     else if (TYPE_LENGTH (TYPE) > 2 && TYPE_CODE (TYPE) != TYPE_CODE_PTR) \
// OBSOLETE       { \
// OBSOLETE 	memcpy (VALBUF, REGBUF + REGISTER_BYTE (0), 2); \
// OBSOLETE 	memcpy (VALBUF + 2, REGBUF + REGISTER_BYTE (1), 2); \
// OBSOLETE       } \
// OBSOLETE     else if (TYPE_CODE (TYPE) == TYPE_CODE_PTR)\
// OBSOLETE       { \
// OBSOLETE         memcpy (VALBUF, REGBUF + REGISTER_BYTE (4), TYPE_LENGTH (TYPE)); \
// OBSOLETE       } \
// OBSOLETE     else \
// OBSOLETE       { \
// OBSOLETE         memcpy (VALBUF, REGBUF + REGISTER_BYTE (0), TYPE_LENGTH (TYPE)); \
// OBSOLETE       } \
// OBSOLETE   }
// OBSOLETE 
// OBSOLETE #define DEPRECATED_EXTRACT_STRUCT_VALUE_ADDRESS(REGBUF) \
// OBSOLETE   extract_address (REGBUF + REGISTER_BYTE (4), \
// OBSOLETE 		   REGISTER_RAW_SIZE (4))
// OBSOLETE 
// OBSOLETE #define DEPRECATED_STORE_RETURN_VALUE(TYPE, VALBUF) \
// OBSOLETE   { \
// OBSOLETE     if (TYPE_LENGTH (TYPE) > 8) \
// OBSOLETE       internal_error (__FILE__, __LINE__, "failed internal consistency check"); \
// OBSOLETE     else if (TYPE_LENGTH (TYPE) > 2 && TYPE_CODE (TYPE) != TYPE_CODE_PTR) \
// OBSOLETE       { \
// OBSOLETE 	deprecated_write_register_bytes (REGISTER_BYTE (0), VALBUF, 2); \
// OBSOLETE 	deprecated_write_register_bytes (REGISTER_BYTE (1), VALBUF + 2, 2); \
// OBSOLETE       } \
// OBSOLETE     else if (TYPE_CODE (TYPE) == TYPE_CODE_PTR)\
// OBSOLETE       { \
// OBSOLETE         deprecated_write_register_bytes (REGISTER_BYTE (4), VALBUF, TYPE_LENGTH (TYPE)); \
// OBSOLETE       } \
// OBSOLETE     else \
// OBSOLETE       { \
// OBSOLETE         deprecated_write_register_bytes (REGISTER_BYTE (0), VALBUF, TYPE_LENGTH (TYPE)); \
// OBSOLETE       } \
// OBSOLETE   }
// OBSOLETE 
// OBSOLETE 
// OBSOLETE extern CORE_ADDR mn10200_store_struct_return (CORE_ADDR addr, CORE_ADDR sp);
// OBSOLETE #define STORE_STRUCT_RETURN(STRUCT_ADDR, SP) \
// OBSOLETE   (SP) = mn10200_store_struct_return (STRUCT_ADDR, SP)
// OBSOLETE 
// OBSOLETE extern CORE_ADDR mn10200_skip_prologue (CORE_ADDR);
// OBSOLETE #define SKIP_PROLOGUE(pc) (mn10200_skip_prologue (pc))
// OBSOLETE 
// OBSOLETE #define FRAME_ARGS_SKIP 0
// OBSOLETE 
// OBSOLETE #define FRAME_ARGS_ADDRESS(fi) (get_frame_base (fi))
// OBSOLETE #define FRAME_LOCALS_ADDRESS(fi) (get_frame_base (fi))
// OBSOLETE #define FRAME_NUM_ARGS(fi) (-1)
// OBSOLETE 
// OBSOLETE extern void mn10200_pop_frame (struct frame_info *);
// OBSOLETE #define POP_FRAME mn10200_pop_frame (get_current_frame ())
// OBSOLETE 
// OBSOLETE #define DEPRECATED_USE_GENERIC_DUMMY_FRAMES 1
// OBSOLETE #define CALL_DUMMY                   {0}
// OBSOLETE #define CALL_DUMMY_START_OFFSET      (0)
// OBSOLETE #define CALL_DUMMY_BREAKPOINT_OFFSET (0)
// OBSOLETE #define CALL_DUMMY_LOCATION          AT_ENTRY_POINT
// OBSOLETE #define FIX_CALL_DUMMY(DUMMY, START, FUNADDR, NARGS, ARGS, TYPE, GCCP)
// OBSOLETE #define CALL_DUMMY_ADDRESS()         entry_point_address ()
// OBSOLETE 
// OBSOLETE extern CORE_ADDR mn10200_push_return_address (CORE_ADDR, CORE_ADDR);
// OBSOLETE #define PUSH_RETURN_ADDRESS(PC, SP)  mn10200_push_return_address (PC, SP)
// OBSOLETE 
// OBSOLETE #define PUSH_DUMMY_FRAME	generic_push_dummy_frame ()
// OBSOLETE 
// OBSOLETE extern CORE_ADDR mn10200_push_arguments (int, struct value **, CORE_ADDR,
// OBSOLETE 					 unsigned char, CORE_ADDR);
// OBSOLETE #define PUSH_ARGUMENTS(NARGS, ARGS, SP, STRUCT_RETURN, STRUCT_ADDR) \
// OBSOLETE   (mn10200_push_arguments (NARGS, ARGS, SP, STRUCT_RETURN, STRUCT_ADDR))
// OBSOLETE 
// OBSOLETE #define DEPRECATED_PC_IN_CALL_DUMMY(PC, SP, FP) generic_pc_in_call_dummy (PC, SP, FP)
// OBSOLETE 
// OBSOLETE #define REG_STRUCT_HAS_ADDR(gcc_p,TYPE) \
// OBSOLETE   	(TYPE_LENGTH (TYPE) > 8)
// OBSOLETE 
// OBSOLETE extern use_struct_convention_fn mn10200_use_struct_convention;
// OBSOLETE #define USE_STRUCT_CONVENTION(GCC_P, TYPE) mn10200_use_struct_convention (GCC_P, TYPE)
// OBSOLETE 
// OBSOLETE /* Define this for Wingdb */
// OBSOLETE #define TARGET_MN10200
@


1.24
log
@2003-02-04  Andrew Cagney  <ac131313@@redhat.com>

	* NEWS: Mention that the mn10200-elf is obsolete.
	* configure.tgt: Obsolete mn10200-*-* target.
	* breakpoint.c (update_breakpoints_after_exec): Update comment to
	mention that the mn10200 is obsolete.
	* breakpoint.h: Ditto.
	* MAINTAINERS: Mark the mn10200-elf as obsolete.
	* config/mn10200/mn10200.mt: Obsolete file.
	* config/mn10200/tm-mn10200.h: Obsolete file.
	* mn10200-tdep.c: Obsolete file.

Index: testsuite/ChangeLog
2003-02-04  Andrew Cagney  <ac131313@@redhat.com>

	* gdb.disasm/mn10200.exp: Obsolete file.
	* gdb.trace/Makefile.in (clean mostlyclean): Remove mn10200.
	* gdb.disasm/Makefile.in (clean mostlyclean): Remove mn10200.
	* gdb.base/watchpoint.exp: Mark the mn10200 xfails as obsolete.
@
text
@@


1.24.34.1
log
@merge mainline changes into branch
@
text
@@


1.23
log
@2003-01-07  Andrew Cagney  <cagney@@redhat.com>

	* alpha-tdep.c: Use get_frame_base.
	* arm-tdep.c, avr-tdep.c, cris-tdep.c, d10v-tdep.c: Ditto.
	* h8300-tdep.c, i386-tdep.c, ia64-tdep.c, m68hc11-tdep.c: Ditto.
	* m68k-tdep.c, mcore-tdep.c, mips-tdep.c, mn10200-tdep.c: Ditto.
	* mn10300-tdep.c, ns32k-tdep.c, s390-tdep.c, sh-tdep.c: Ditto.
	* sparc-tdep.c, v850-tdep.c, vax-tdep.c: Ditto.
	* x86-64-linux-tdep.c, xstormy16-tdep.c: Ditto.
	* config/h8500/tm-h8500.h, config/mn10200/tm-mn10200.h: Ditto.
	* config/sparc/tm-sparc.h: Ditto.
@
text
@d1 214
a214 214
/* Parameters for execution on a Matsushita mn10200 processor.

   Copyright 1997, 1998, 1999, 2000, 2001, 2002, 2003 Free Software
   Foundation, Inc.

   Contributed by Geoffrey Noer <noer@@cygnus.com>

   This file is part of GDB.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place - Suite 330,
   Boston, MA 02111-1307, USA.  */

/* FIXME: cagney/2001-03-01: The below macros refer to functions
   declared in "regcache.h".  The ``correct fix'' is to convert those
   macros into functions.  */
#include "regcache.h"
#include "symtab.h"		/* For namespace_enum.  */
#include "symfile.h"		/* For entry_point_address().  */

/* ints are only 16bits on the mn10200.  */
#undef TARGET_INT_BIT
#define TARGET_INT_BIT 16

/* The mn10200 doesn't support long long types.  */
#undef TARGET_LONG_LONG_BIT
#define TARGET_LONG_LONG_BIT 32

/* The mn10200 doesn't support double or long double either.  */
#undef TARGET_DOUBLE_BIT
#undef TARGET_LONG_DOUBLE_BIT
#define TARGET_DOUBLE_BIT 32
#define TARGET_LONG_DOUBLE_BIT 32

/* Not strictly correct, but the machine independent code is not
   ready to handle any of the basic sizes not being a power of two.  */
#undef TARGET_PTR_BIT
#define TARGET_PTR_BIT 32

/* The mn10200 really has 24 bit registers but the simulator reads/writes
   them as 32bit values, so we claim they're 32bits each.  This may have
   to be tweaked if the Matsushita emulator/board really deals with them
   as 24bits each.  */
#define REGISTER_SIZE 4

#define MAX_REGISTER_RAW_SIZE REGISTER_SIZE
#define NUM_REGS 11

#define REGISTER_BYTES (NUM_REGS * REGISTER_SIZE)

#define REGISTER_NAMES \
{ "d0", "d1", "d2", "d3", "a0", "a1", "a2", "sp", \
  "pc", "mdr", "psw"}

#define FP_REGNUM 6
#define SP_REGNUM 7
#define PC_REGNUM 8
#define MDR_REGNUM 9
#define PSW_REGNUM 10

/* Treat the registers as 32bit values.  */
#define REGISTER_VIRTUAL_TYPE(REG) builtin_type_long

#define REGISTER_BYTE(REG) ((REG) * REGISTER_SIZE)
#define REGISTER_VIRTUAL_SIZE(REG) REGISTER_SIZE
#define REGISTER_RAW_SIZE(REG) REGISTER_SIZE

#define MAX_REGISTER_VIRTUAL_SIZE REGISTER_SIZE

/* The breakpoint instruction must be the same size as te smallest
   instruction in the instruction set.

   The Matsushita mn10x00 processors have single byte instructions
   so we need a single byte breakpoint.  Matsushita hasn't defined
   one, so we defined it ourselves.

   0xff is the only available single byte insn left on the mn10200.  */
#define BREAKPOINT {0xff}

#define FUNCTION_START_OFFSET 0

#define DECR_PC_AFTER_BREAK 0

/* Stacks grow the normal way.  */
#define INNER_THAN(lhs,rhs) ((lhs) < (rhs))

#define SAVED_PC_AFTER_CALL(frame) \
  (read_memory_integer (read_register (SP_REGNUM), REGISTER_SIZE) & 0xffffff)

struct frame_info;
struct frame_saved_regs;
struct type;
struct value;

#define EXTRA_FRAME_INFO struct frame_saved_regs fsr; int status; int stack_size;

extern void mn10200_init_extra_frame_info (struct frame_info *);
#define INIT_EXTRA_FRAME_INFO(fromleaf, fi) mn10200_init_extra_frame_info (fi)
#define DEPRECATED_INIT_FRAME_PC(x,y) (init_frame_pc_noop (x, y))
#define INIT_FRAME_PC_FIRST(x,y) (init_frame_pc_noop (x, y))

extern void mn10200_frame_find_saved_regs (struct frame_info *,
					   struct frame_saved_regs *);
#define FRAME_FIND_SAVED_REGS(fi, regaddr) regaddr = fi->fsr

extern CORE_ADDR mn10200_frame_chain (struct frame_info *);
#define FRAME_CHAIN(fi) mn10200_frame_chain (fi)

extern CORE_ADDR mn10200_find_callers_reg (struct frame_info *, int);
extern CORE_ADDR mn10200_frame_saved_pc (struct frame_info *);
#define FRAME_SAVED_PC(FI) (mn10200_frame_saved_pc (FI))

/* Extract from an array REGBUF containing the (raw) register state
   a function return value of type TYPE, and copy that, in virtual format,
   into VALBUF.  */

#define DEPRECATED_EXTRACT_RETURN_VALUE(TYPE, REGBUF, VALBUF) \
  { \
    if (TYPE_LENGTH (TYPE) > 8) \
      internal_error (__FILE__, __LINE__, "failed internal consistency check"); \
    else if (TYPE_LENGTH (TYPE) > 2 && TYPE_CODE (TYPE) != TYPE_CODE_PTR) \
      { \
	memcpy (VALBUF, REGBUF + REGISTER_BYTE (0), 2); \
	memcpy (VALBUF + 2, REGBUF + REGISTER_BYTE (1), 2); \
      } \
    else if (TYPE_CODE (TYPE) == TYPE_CODE_PTR)\
      { \
        memcpy (VALBUF, REGBUF + REGISTER_BYTE (4), TYPE_LENGTH (TYPE)); \
      } \
    else \
      { \
        memcpy (VALBUF, REGBUF + REGISTER_BYTE (0), TYPE_LENGTH (TYPE)); \
      } \
  }

#define DEPRECATED_EXTRACT_STRUCT_VALUE_ADDRESS(REGBUF) \
  extract_address (REGBUF + REGISTER_BYTE (4), \
		   REGISTER_RAW_SIZE (4))

#define DEPRECATED_STORE_RETURN_VALUE(TYPE, VALBUF) \
  { \
    if (TYPE_LENGTH (TYPE) > 8) \
      internal_error (__FILE__, __LINE__, "failed internal consistency check"); \
    else if (TYPE_LENGTH (TYPE) > 2 && TYPE_CODE (TYPE) != TYPE_CODE_PTR) \
      { \
	deprecated_write_register_bytes (REGISTER_BYTE (0), VALBUF, 2); \
	deprecated_write_register_bytes (REGISTER_BYTE (1), VALBUF + 2, 2); \
      } \
    else if (TYPE_CODE (TYPE) == TYPE_CODE_PTR)\
      { \
        deprecated_write_register_bytes (REGISTER_BYTE (4), VALBUF, TYPE_LENGTH (TYPE)); \
      } \
    else \
      { \
        deprecated_write_register_bytes (REGISTER_BYTE (0), VALBUF, TYPE_LENGTH (TYPE)); \
      } \
  }


extern CORE_ADDR mn10200_store_struct_return (CORE_ADDR addr, CORE_ADDR sp);
#define STORE_STRUCT_RETURN(STRUCT_ADDR, SP) \
  (SP) = mn10200_store_struct_return (STRUCT_ADDR, SP)

extern CORE_ADDR mn10200_skip_prologue (CORE_ADDR);
#define SKIP_PROLOGUE(pc) (mn10200_skip_prologue (pc))

#define FRAME_ARGS_SKIP 0

#define FRAME_ARGS_ADDRESS(fi) (get_frame_base (fi))
#define FRAME_LOCALS_ADDRESS(fi) (get_frame_base (fi))
#define FRAME_NUM_ARGS(fi) (-1)

extern void mn10200_pop_frame (struct frame_info *);
#define POP_FRAME mn10200_pop_frame (get_current_frame ())

#define DEPRECATED_USE_GENERIC_DUMMY_FRAMES 1
#define CALL_DUMMY                   {0}
#define CALL_DUMMY_START_OFFSET      (0)
#define CALL_DUMMY_BREAKPOINT_OFFSET (0)
#define CALL_DUMMY_LOCATION          AT_ENTRY_POINT
#define FIX_CALL_DUMMY(DUMMY, START, FUNADDR, NARGS, ARGS, TYPE, GCCP)
#define CALL_DUMMY_ADDRESS()         entry_point_address ()

extern CORE_ADDR mn10200_push_return_address (CORE_ADDR, CORE_ADDR);
#define PUSH_RETURN_ADDRESS(PC, SP)  mn10200_push_return_address (PC, SP)

#define PUSH_DUMMY_FRAME	generic_push_dummy_frame ()

extern CORE_ADDR mn10200_push_arguments (int, struct value **, CORE_ADDR,
					 unsigned char, CORE_ADDR);
#define PUSH_ARGUMENTS(NARGS, ARGS, SP, STRUCT_RETURN, STRUCT_ADDR) \
  (mn10200_push_arguments (NARGS, ARGS, SP, STRUCT_RETURN, STRUCT_ADDR))

#define DEPRECATED_PC_IN_CALL_DUMMY(PC, SP, FP) generic_pc_in_call_dummy (PC, SP, FP)

#define REG_STRUCT_HAS_ADDR(gcc_p,TYPE) \
  	(TYPE_LENGTH (TYPE) > 8)

extern use_struct_convention_fn mn10200_use_struct_convention;
#define USE_STRUCT_CONVENTION(GCC_P, TYPE) mn10200_use_struct_convention (GCC_P, TYPE)

/* Define this for Wingdb */
#define TARGET_MN10200
@


1.22
log
@	* arm-tdep.c (arm_frame_chain_valid):  Remove unnecessary test.
	* d10v-tdep.c (d10v_frame_chain_valid): Remove unnecessary tests.
	* hppa-tdep.c (hppa_frame_chain_valid): Remove unnecessary test.

	* blockframe.c: Include "gdbcmd.h" and "command.h".
	(backtrace_below_main): New variable.
	(file_frame_chain_valid, func_frame_chain_valid)
	(nonnull_frame_chain_valid, generic_file_frame_chain_valid)
	(generic_func_frame_chain_valid): Remove functions.
	(frame_chain_valid, do_flush_frames_sfunc): New functions.
	(_initialize_blockframe): New function.
	* Makefile.in (blockframe.o): Update dependencies.
	* frame.c (frame_saved_regs_id_unwind, get_prev_frame): Remove FIXME
	comment.  Call frame_chain_valid ().
	* frame.h: Remove old prototypes.  Add prototype for
	frame_chain_valid and update comments to match.
	* gdbarch.sh: Change FRAME_CHAIN_VALID into a predicated function.
	Remove old comment.
	* gdbarch.h: Regenerated.
	* gdbarch.c: Regenerated.

Plus updates to all other targets not to provide a FRAME_CHAIN_VALID.
@
text
@d180 2
a181 2
#define FRAME_ARGS_ADDRESS(fi) ((fi)->frame)
#define FRAME_LOCALS_ADDRESS(fi) ((fi)->frame)
@


1.21
log
@2002-12-10  Andrew Cagney  <cagney@@redhat.com>

	* gdbarch.sh (DEPRECATED_INIT_FRAME_PC): Rename INIT_FRAME_PC.
	Change to a function with predicate.
	* gdbarch.h, gdbarch.c: Re-generate.
	* frame.c (get_prev_frame): Update.  Test
	DEPRECATED_INIT_FRAME_PC_P.
	* config/sparc/tm-sparc.h (DEPRECATED_INIT_FRAME_PC): Update.
	* config/rs6000/tm-rs6000.h (DEPRECATED_INIT_FRAME_PC): Update.
	* config/mn10200/tm-mn10200.h (DEPRECATED_INIT_FRAME_PC): Update.
	* alpha-tdep.c (alpha_gdbarch_init): Update.
	* mn10300-tdep.c (mn10300_gdbarch_init): Update.
	* mips-tdep.c (mips_gdbarch_init): Update.
	* i386-interix-tdep.c (i386_interix_init_abi): Update.
	* arm-tdep.c: Update comments.
	* h8300-tdep.c (h8300_gdbarch_init): Explicitly set init_frame_pc.
	* config/m32r/tm-m32r.h (DEPRECATED_INIT_FRAME_PC): Ditto.
	* frv-tdep.c (frv_gdbarch_init): Ditto.
	* x86-64-tdep.c (x86_64_init_abi): Ditto.
	* ia64-tdep.c (ia64_gdbarch_init): Ditto.
	* s390-tdep.c (s390_gdbarch_init): Ditto.
	* v850-tdep.c (v850_gdbarch_init): Ditto.
	* vax-tdep.c (vax_gdbarch_init): Ditto.
	* sh-tdep.c (sh_gdbarch_init): Ditto.
	* ns32k-tdep.c (ns32k_gdbarch_init): Ditto.
	* m68hc11-tdep.c (m68hc11_gdbarch_init): Ditto.
	* mcore-tdep.c (mcore_gdbarch_init): Ditto.
	* xstormy16-tdep.c (xstormy16_gdbarch_init): Ditto.
	* i386-tdep.c (i386_gdbarch_init): Ditto.
	* d10v-tdep.c (d10v_gdbarch_init): Ditto.
	* cris-tdep.c (cris_gdbarch_init): Ditto.
	* avr-tdep.c (avr_gdbarch_init): Ditto.
	* arm-tdep.c (arm_gdbarch_init): Ditto.
	* config/z8k/tm-z8k.h (INIT_FRAME_PC_FIRST): Delete macro.
	(DEPRECATED_INIT_FRAME_PC): Rename INIT_FRAME_PC.
@
text
@d3 1
a3 1
   Copyright 1997, 1998, 1999, 2000, 2001, 2002 Free Software
a118 1
#define FRAME_CHAIN_VALID(FP, FI)	generic_file_frame_chain_valid (FP, FI)
@


1.20
log
@2002-12-08  Andrew Cagney  <ac131313@@redhat.com>

	* gdbarch.sh (INIT_FRAME_PC_FIRST, INIT_FRAME_PC_DEFAULT): Convert
	to pure functions.
	* gdbarch.h, gdbarch.c: Re-generate.
	* frame.c (get_prev_frame): Explictly assign prev's pc with value
	returned by INIT_FRAME_PC_FIRST and INIT_EXTRA_FRAME_INFO.

	* arch-utils.h (init_frame_pc_default, init_frame_pc_noop): Change
	declaration to a function returning a CORE_ADDR.
	* x86-64-tdep.h (x86_64_init_frame_pc): Ditto.
	* arch-utils.c (init_frame_pc_noop): Return the PC value.
	(init_frame_pc_default): Ditto.
	* x86-64-linux-tdep.c (x86_64_init_frame_pc): Ditto.
	* s390-tdep.c (s390_init_frame_pc_first): Ditto.
	* mips-tdep.c (mips_init_frame_pc_first): Ditto.
	* dwarf2cfi.h (cfi_init_frame_pc): Ditto.
	* dwarf2cfi.c (cfi_init_frame_pc): Ditto.
	* alpha-tdep.c (alpha_init_frame_pc_first): Ditto.

	* i386-interix-tdep.c (i386_interix_init_abi): Set init_frame_pc
	to init_frame_pc_noop.
	(i386_interix_init_frame_pc): Delete function.
	* z8k-tdep.c (init_frame_pc): Delete function.
	* config/z8k/tm-z8k.h (INIT_FRAME_PC): Define as init_frame_pc_noop.
	(INIT_FRAME_PC_FIRST): Ditto.
	* config/mn10200/tm-mn10200.h (INIT_FRAME_PC): Ditto.
	(INIT_FRAME_PC_FIRST): Ditto.
	* config/sparc/tm-sparc.h (INIT_FRAME_PC): Ditto.
	* config/rs6000/tm-rs6000.h (INIT_FRAME_PC): Redefine as
	init_frame_pc_noop.
	(INIT_FRAME_PC_FIRST): Convert to an expression.
	* config/sparc/tm-sparc.h (INIT_FRAME_PC_FIRST): Ditto.
@
text
@d110 1
a110 1
#define INIT_FRAME_PC(x,y) (init_frame_pc_noop (x, y))
@


1.19
log
@2002-12-08  Andrew Cagney  <ac131313@@redhat.com>

	* config/mn10200/tm-mn10200.h (DEPRECATED_PC_IN_CALL_DUMMY):
	Delete redundant definition.
@
text
@d110 2
a111 1
#define INIT_FRAME_PC(x,y)
@


1.18
log
@2002-12-01  Andrew Cagney  <ac131313@@redhat.com>

	* gdbarch.sh (DEPRECATED_PC_IN_CALL_DUMMY): Rename
	PC_IN_CALL_DUMMY.  Change to predicate.  Always allow call.
	* gdbarch.h, gdbarch.c: Re-generate.
	* config/sparc/tm-sparc.h, config/sparc/tm-sp64.h: Update.
	* config/mn10200/tm-mn10200.h, config/h8500/tm-h8500.h: Update.
	* config/pa/tm-hppa.h, frame.h: Update.
	* x86-64-tdep.c, vax-tdep.c, sparc-tdep.c: Update.
	* s390-tdep.c, ns32k-tdep.c, mn10300-tdep.c: Update.
	* m68k-tdep.c, i386-tdep.c, frv-tdep.c: Update.
	* cris-tdep.c, alpha-tdep.c: Update.
	* frame.c (set_unwind_by_pc, create_new_frame): Use either
	DEPRECATED_PC_IN_CALL_DUMMY or pc_in_dummy_frame.
	(get_prev_frame): Ditto.

Index: doc/ChangeLog
2002-12-01  Andrew Cagney  <ac131313@@redhat.com>

	* gdbint.texinfo (Target Architecture Definition): Delete
	PC_IN_CALL_DUMMY.
@
text
@a191 1
#define DEPRECATED_PC_IN_CALL_DUMMY(pc, sp, frame_address) deprecated_pc_in_call_dummy_at_entry_point (pc, sp, frame_address)
@


1.17
log
@2002-11-28  Andrew Cagney  <ac131313@@redhat.com>

	* gdbarch.sh (DEPRECATED_USE_GENERIC_DUMMY_FRAMES): Rename
	USE_GENERIC_DUMMY_FRAMES.
	* gdbarch.h, gdbarch.c: Regenerate.
	* valops.c, frame.c: Update.
	* config/z8k/tm-z8k.h, config/mn10200/tm-mn10200.h: Update.
	* config/m32r/tm-m32r.h, config/h8500/tm-h8500.h: Update.
	* config/pa/tm-hppa.h, blockframe.c: Update.
	* vax-tdep.c, sparc-tdep.c, ns32k-tdep.c: Ditto.
	* m68k-tdep.c, alpha-tdep.c: Ditto.

	* arm-tdep.c: Eliminate USE_GENERIC_DUMMY_FRAMES as always 1.
	* mips-tdep.c: Ditto.

Index: doc/ChangeLog
2002-11-28  Andrew Cagney  <ac131313@@redhat.com>

	* gdbint.texinfo (Host Definition): Delete documentation on
	USE_GENERIC_DUMMY_FRAMES.
@
text
@d192 1
a192 1
#define PC_IN_CALL_DUMMY(pc, sp, frame_address) deprecated_pc_in_call_dummy_at_entry_point (pc, sp, frame_address)
d206 1
a206 1
#define PC_IN_CALL_DUMMY(PC, SP, FP) generic_pc_in_call_dummy (PC, SP, FP)
@


1.16
log
@2002-11-27  Andrew Cagney  <cagney@@redhat.com>

	* config/z8k/tm-z8k.h (PC_IN_CALL_DUMMY): Update definition to use
	deprecated pc_in_call_dummy function.
	* config/sparc/tm-sparc.h (PC_IN_CALL_DUMMY): Ditto.
	* config/sparc/tm-sp64.h (PC_IN_CALL_DUMMY): Ditto.
	* config/pa/tm-hppa.h (PC_IN_CALL_DUMMY): Ditto.
	* config/mn10200/tm-mn10200.h (PC_IN_CALL_DUMMY): Ditto.
	* config/h8500/tm-h8500.h (PC_IN_CALL_DUMMY): Ditto.
@
text
@d187 1
a187 1
#define USE_GENERIC_DUMMY_FRAMES 1
@


1.15
log
@2002-11-26  Andrew Cagney  <ac131313@@redhat.com>

	* config/h8500/tm-h8500.h (CALL_DUMMY_LOCATION): Define as ON_STACK.
	(USE_GENERIC_DUMMY_FRAMES): Define as zero.
	(PC_IN_CALL_DUMMY): Define as pc_in_call_dummy_on_stack.
	* config/mn10200/tm-mn10200.h (PC_IN_CALL_DUMMY): Define as
	pc_in_call_dummy_at_entry_point.
	* config/pa/tm-hppa.h (CALL_DUMMY_LOCATION): Define as ON_STACK.
	(USE_GENERIC_DUMMY_FRAMES): Define as zero.
	(PC_IN_CALL_DUMMY): Define as pc_in_call_dummy_on_stack.
	* config/pa/tm-hppa64.h (CALL_DUMMY_LOCATION): Delete undefine.
	* config/sparc/tm-sparc.h (PC_IN_CALL_DUMMY): Define as
	pc_in_call_dummy_on_stack.
	* config/sparc/tm-sp64.h (PC_IN_CALL_DUMMY): Redefine as
	pc_in_call_dummy_at_entry_point and pc_in_call_dummy_on_stack.
	* config/z8k/tm-z8k.h (CALL_DUMMY_LOCATION): Define as ON_STACK.
	(USE_GENERIC_DUMMY_FRAMES): Define as zero.
	(PC_IN_CALL_DUMMY): Defile as pc_in_call_dummy_on_stack.
@
text
@d192 1
a192 1
#define PC_IN_CALL_DUMMY(pc, sp, frame_address) pc_in_call_dummy_at_entry_point (pc, sp, frame_address)
@


1.14
log
@2002-11-15  Andrew Cagney  <cagney@@redhat.com>

	* frame.c (generic_unwind_get_saved_register): Make static.
	* frame.h (generic_unwind_get_saved_register): Delete declaration.
	* avr-tdep.c (avr_gdbarch_init): Do not set get_saved_register,
	defaults to generic_unwind_get_saved_register.
	* mn10300-tdep.c (mn10300_gdbarch_init): Ditto.
	* h8300-tdep.c (h8300_gdbarch_init): Ditto.
	* frv-tdep.c (frv_gdbarch_init): Ditto.
	* i386-tdep.c (i386_gdbarch_init): Ditto.
	* s390-tdep.c (s390_gdbarch_init): Ditto.
	* rs6000-tdep.c (rs6000_gdbarch_init): Ditto.
	* v850-tdep.c (v850_gdbarch_init): Ditto.
	* mcore-tdep.c (mcore_gdbarch_init): Ditto.
	* d10v-tdep.c (d10v_gdbarch_init): Ditto.
	* config/mn10200/tm-mn10200.h (GET_SAVED_REGISTER): Delete macro.
@
text
@d192 1
@


1.13
log
@2002-11-13  Andrew Cagney  <cagney@@redhat.com>

	* regcache.h (deprecated_read_register_bytes): Rename
	read_register_bytes.
	(deprecated_write_register_bytes): Rename write_register_bytes.
	* alpha-tdep.c, arm-tdep.c, cris-tdep.c, d10v-tdep.c: Update.
	* dwarf2cfi.c, frv-tdep.c, hppa-tdep.c, ia64-tdep.c: Update.
	* m68k-tdep.c, mcore-tdep.c, mips-tdep.c, mn10300-tdep.c: Update.
	* ns32k-tdep.c, regcache.c, remote-sds.c, remote-vx.c: Update.
	* remote.c, rs6000-tdep.c, s390-tdep.c, sh-tdep.c: Update.
	* sparc-tdep.c, v850-tdep.c, vax-tdep.c, x86-64-tdep.c: Update.
	* xstormy16-tdep.c, z8k-tdep.c, config/nm-gnu.h: Update.
	* config/nm-m3.h, config/h8500/tm-h8500.h: Update.
	* config/i386/nm-ptx4.h, config/i386/nm-symmetry.h: Update.
	* config/m32r/tm-m32r.h, config/m68k/nm-sun3.h: Update.
	* config/m68k/tm-delta68.h, config/m68k/tm-linux.h: Update.
	* config/mn10200/tm-mn10200.h, config/pa/tm-hppa64.h: Update.
	* config/sparc/nm-nbsd.h, config/sparc/nm-sun4os4.h: Update.
	* config/sparc/nm-sun4sol2.h, config/sparc/tm-sparclet.h: Update.

2002-11-13  Andrew Cagney  <ac131313@@redhat.com>

	* mi-main.c (mi_cmd_data_write_register_values): Use
	deprecated_write_register_bytes instead of write_register_bytes.
@
text
@a212 5
/* Override the default get_saved_register function with
   one that takes account of generic CALL_DUMMY frames.  */
#define GET_SAVED_REGISTER(raw_buffer, optimized, addrp, frame, regnum, lval) \
      generic_unwind_get_saved_register (raw_buffer, optimized, addrp, frame, regnum, lval)

@


1.12
log
@Index: ChangeLog
===================================================================
RCS file: /cvs/src/src/gdb/ChangeLog,v
retrieving revision 1.3144
diff -u -r1.3144 ChangeLog
--- ChangeLog	23 Aug 2002 23:05:38 -0000	1.3144
+++ ChangeLog	23 Aug 2002 23:14:45 -0000
@@@@ -1,3 +1,53 @@@@
2002-08-23  Andrew Cagney  <cagney@@redhat.com>

	* gdbarch.sh (STORE_RETURN_VALUE): Add regcache parameter.
	(DEPRECATED_STORE_RETURN_VALUE): New method.
	(EXTRACT_RETURN_VALUE): Make buffer parameter a void pointer.
	* gdbarch.h, gdbarch.c: Re-generate.

	* values.c (set_return_value): Pass current_regcache to
	STORE_RETURN_VALUE.
	* arch-utils.h (legacy_store_return_value): Declare.
	* arch-utils.c (legacy_store_return_value): New function.
	(legacy_extract_return_value): Update parameters.

	* config/pa/tm-hppa.h (DEPRECATED_STORE_RETURN_VALUE): Rename
	STORE_RETURN_VALUE.
	* config/pa/tm-hppa64.h (DEPRECATED_STORE_RETURN_VALUE): Ditto.
	* config/sparc/tm-sparc.h (DEPRECATED_STORE_RETURN_VALUE): Ditto.
	* config/z8k/tm-z8k.h (DEPRECATED_STORE_RETURN_VALUE): Ditto.
	* config/sparc/tm-sparclet.h (DEPRECATED_STORE_RETURN_VALUE): Ditto.
	* config/mn10200/tm-mn10200.h (DEPRECATED_STORE_RETURN_VALUE): Ditto.
	* config/m68k/tm-linux.h (DEPRECATED_STORE_RETURN_VALUE): Ditto.
	* config/m68k/tm-delta68.h (DEPRECATED_STORE_RETURN_VALUE): Ditto.
	* config/m32r/tm-m32r.h (DEPRECATED_STORE_RETURN_VALUE): Ditto.
	* config/h8500/tm-h8500.h (DEPRECATED_STORE_RETURN_VALUE): Ditto.
	* config/h8300/tm-h8300.h (DEPRECATED_STORE_RETURN_VALUE): Ditto.

	* m68hc11-tdep.c (m68hc11_gdbarch_init): Update.
	* i386-tdep.c (i386_extract_return_value): Update.
	* arch-utils.c (legacy_extract_return_value): Update.
	* frv-tdep.c (frv_gdbarch_init): Update.
	* cris-tdep.c (cris_gdbarch_init): Update.
	* d10v-tdep.c (d10v_gdbarch_init): Update.
	* rs6000-tdep.c (rs6000_gdbarch_init): Update.
	* m68k-tdep.c (m68k_gdbarch_init): Update.
	* mcore-tdep.c (mcore_gdbarch_init): Update.
	* mn10300-tdep.c (mn10300_gdbarch_init): Update.
	* s390-tdep.c (s390_gdbarch_init): Update.
	* sparc-tdep.c (sparc_gdbarch_init): Update.
	* sh-tdep.c (sh_gdbarch_init): Update.
	* x86-64-tdep.c (x86_64_gdbarch_init): Update.
	* v850-tdep.c (v850_gdbarch_init): Update.
	* avr-tdep.c (avr_gdbarch_init): Update.
	* ia64-tdep.c (ia64_gdbarch_init): Update.
	* ns32k-tdep.c (ns32k_gdbarch_init): Update.
	* vax-tdep.c (vax_gdbarch_init): Update.
	* alpha-tdep.c (alpha_gdbarch_init): Update.
	* arm-tdep.c (arm_gdbarch_init): Update.
	* mips-tdep.c (mips_gdbarch_init): Update.
	* i386-tdep.c (i386_gdbarch_init): Update.

Index: doc/ChangeLog
2002-08-21  Andrew Cagney  <cagney@@redhat.com>

	* gdbint.texinfo (Target Architecture Definition): Update
	STORE_RETURN_VALUE, mention regcache.
@
text
@d157 2
a158 2
	write_register_bytes (REGISTER_BYTE (0), VALBUF, 2); \
	write_register_bytes (REGISTER_BYTE (1), VALBUF + 2, 2); \
d162 1
a162 1
        write_register_bytes (REGISTER_BYTE (4), VALBUF, TYPE_LENGTH (TYPE)); \
d166 1
a166 1
        write_register_bytes (REGISTER_BYTE (0), VALBUF, TYPE_LENGTH (TYPE)); \
@


1.12.10.1
log
@Merge drow-cplus-branch to:
  cvs rtag -D 2003-12-14 00:00:00 UTC drow-cplus-merge-20031214 gdb+dejagnu
@
text
@@


1.12.8.1
log
@2002-11-15  David Carlton  <carlton@@math.stanford.edu>

	* Merge from mainline; tag is carlton_dictionary-20021115-merge.
@
text
@d157 2
a158 2
	deprecated_write_register_bytes (REGISTER_BYTE (0), VALBUF, 2); \
	deprecated_write_register_bytes (REGISTER_BYTE (1), VALBUF + 2, 2); \
d162 1
a162 1
        deprecated_write_register_bytes (REGISTER_BYTE (4), VALBUF, TYPE_LENGTH (TYPE)); \
d166 1
a166 1
        deprecated_write_register_bytes (REGISTER_BYTE (0), VALBUF, TYPE_LENGTH (TYPE)); \
@


1.12.8.2
log
@2002-12-23  David Carlton  <carlton@@math.stanford.edu>

	* Merge from mainline; tag is carlton_dictionary-20021223-merge.
@
text
@d110 1
a110 2
#define DEPRECATED_INIT_FRAME_PC(x,y) (init_frame_pc_noop (x, y))
#define INIT_FRAME_PC_FIRST(x,y) (init_frame_pc_noop (x, y))
d187 1
a187 1
#define DEPRECATED_USE_GENERIC_DUMMY_FRAMES 1
d205 1
a205 1
#define DEPRECATED_PC_IN_CALL_DUMMY(PC, SP, FP) generic_pc_in_call_dummy (PC, SP, FP)
d212 5
@


1.12.8.3
log
@2003-02-07  David Carlton  <carlton@@math.stanford.edu>

	* Merge with mainline; tag is carlton_dictionary-20030207-merge.
@
text
@d1 215
a215 214
// OBSOLETE /* Parameters for execution on a Matsushita mn10200 processor.
// OBSOLETE 
// OBSOLETE    Copyright 1997, 1998, 1999, 2000, 2001, 2002, 2003 Free Software
// OBSOLETE    Foundation, Inc.
// OBSOLETE 
// OBSOLETE    Contributed by Geoffrey Noer <noer@@cygnus.com>
// OBSOLETE 
// OBSOLETE    This file is part of GDB.
// OBSOLETE 
// OBSOLETE    This program is free software; you can redistribute it and/or modify
// OBSOLETE    it under the terms of the GNU General Public License as published by
// OBSOLETE    the Free Software Foundation; either version 2 of the License, or
// OBSOLETE    (at your option) any later version.
// OBSOLETE 
// OBSOLETE    This program is distributed in the hope that it will be useful,
// OBSOLETE    but WITHOUT ANY WARRANTY; without even the implied warranty of
// OBSOLETE    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// OBSOLETE    GNU General Public License for more details.
// OBSOLETE 
// OBSOLETE    You should have received a copy of the GNU General Public License
// OBSOLETE    along with this program; if not, write to the Free Software
// OBSOLETE    Foundation, Inc., 59 Temple Place - Suite 330,
// OBSOLETE    Boston, MA 02111-1307, USA.  */
// OBSOLETE 
// OBSOLETE /* FIXME: cagney/2001-03-01: The below macros refer to functions
// OBSOLETE    declared in "regcache.h".  The ``correct fix'' is to convert those
// OBSOLETE    macros into functions.  */
// OBSOLETE #include "regcache.h"
// OBSOLETE #include "symtab.h"		/* For namespace_enum.  */
// OBSOLETE #include "symfile.h"		/* For entry_point_address().  */
// OBSOLETE 
// OBSOLETE /* ints are only 16bits on the mn10200.  */
// OBSOLETE #undef TARGET_INT_BIT
// OBSOLETE #define TARGET_INT_BIT 16
// OBSOLETE 
// OBSOLETE /* The mn10200 doesn't support long long types.  */
// OBSOLETE #undef TARGET_LONG_LONG_BIT
// OBSOLETE #define TARGET_LONG_LONG_BIT 32
// OBSOLETE 
// OBSOLETE /* The mn10200 doesn't support double or long double either.  */
// OBSOLETE #undef TARGET_DOUBLE_BIT
// OBSOLETE #undef TARGET_LONG_DOUBLE_BIT
// OBSOLETE #define TARGET_DOUBLE_BIT 32
// OBSOLETE #define TARGET_LONG_DOUBLE_BIT 32
// OBSOLETE 
// OBSOLETE /* Not strictly correct, but the machine independent code is not
// OBSOLETE    ready to handle any of the basic sizes not being a power of two.  */
// OBSOLETE #undef TARGET_PTR_BIT
// OBSOLETE #define TARGET_PTR_BIT 32
// OBSOLETE 
// OBSOLETE /* The mn10200 really has 24 bit registers but the simulator reads/writes
// OBSOLETE    them as 32bit values, so we claim they're 32bits each.  This may have
// OBSOLETE    to be tweaked if the Matsushita emulator/board really deals with them
// OBSOLETE    as 24bits each.  */
// OBSOLETE #define REGISTER_SIZE 4
// OBSOLETE 
// OBSOLETE #define MAX_REGISTER_RAW_SIZE REGISTER_SIZE
// OBSOLETE #define NUM_REGS 11
// OBSOLETE 
// OBSOLETE #define REGISTER_BYTES (NUM_REGS * REGISTER_SIZE)
// OBSOLETE 
// OBSOLETE #define REGISTER_NAMES \
// OBSOLETE { "d0", "d1", "d2", "d3", "a0", "a1", "a2", "sp", \
// OBSOLETE   "pc", "mdr", "psw"}
// OBSOLETE 
// OBSOLETE #define FP_REGNUM 6
// OBSOLETE #define SP_REGNUM 7
// OBSOLETE #define PC_REGNUM 8
// OBSOLETE #define MDR_REGNUM 9
// OBSOLETE #define PSW_REGNUM 10
// OBSOLETE 
// OBSOLETE /* Treat the registers as 32bit values.  */
// OBSOLETE #define REGISTER_VIRTUAL_TYPE(REG) builtin_type_long
// OBSOLETE 
// OBSOLETE #define REGISTER_BYTE(REG) ((REG) * REGISTER_SIZE)
// OBSOLETE #define REGISTER_VIRTUAL_SIZE(REG) REGISTER_SIZE
// OBSOLETE #define REGISTER_RAW_SIZE(REG) REGISTER_SIZE
// OBSOLETE 
// OBSOLETE #define MAX_REGISTER_VIRTUAL_SIZE REGISTER_SIZE
// OBSOLETE 
// OBSOLETE /* The breakpoint instruction must be the same size as te smallest
// OBSOLETE    instruction in the instruction set.
// OBSOLETE 
// OBSOLETE    The Matsushita mn10x00 processors have single byte instructions
// OBSOLETE    so we need a single byte breakpoint.  Matsushita hasn't defined
// OBSOLETE    one, so we defined it ourselves.
// OBSOLETE 
// OBSOLETE    0xff is the only available single byte insn left on the mn10200.  */
// OBSOLETE #define BREAKPOINT {0xff}
// OBSOLETE 
// OBSOLETE #define FUNCTION_START_OFFSET 0
// OBSOLETE 
// OBSOLETE #define DECR_PC_AFTER_BREAK 0
// OBSOLETE 
// OBSOLETE /* Stacks grow the normal way.  */
// OBSOLETE #define INNER_THAN(lhs,rhs) ((lhs) < (rhs))
// OBSOLETE 
// OBSOLETE #define SAVED_PC_AFTER_CALL(frame) \
// OBSOLETE   (read_memory_integer (read_register (SP_REGNUM), REGISTER_SIZE) & 0xffffff)
// OBSOLETE 
// OBSOLETE struct frame_info;
// OBSOLETE struct frame_saved_regs;
// OBSOLETE struct type;
// OBSOLETE struct value;
// OBSOLETE 
// OBSOLETE #define EXTRA_FRAME_INFO struct frame_saved_regs fsr; int status; int stack_size;
// OBSOLETE 
// OBSOLETE extern void mn10200_init_extra_frame_info (struct frame_info *);
// OBSOLETE #define INIT_EXTRA_FRAME_INFO(fromleaf, fi) mn10200_init_extra_frame_info (fi)
// OBSOLETE #define DEPRECATED_INIT_FRAME_PC(x,y) (init_frame_pc_noop (x, y))
// OBSOLETE #define INIT_FRAME_PC_FIRST(x,y) (init_frame_pc_noop (x, y))
// OBSOLETE 
// OBSOLETE extern void mn10200_frame_find_saved_regs (struct frame_info *,
// OBSOLETE 					   struct frame_saved_regs *);
// OBSOLETE #define FRAME_FIND_SAVED_REGS(fi, regaddr) regaddr = fi->fsr
// OBSOLETE 
// OBSOLETE extern CORE_ADDR mn10200_frame_chain (struct frame_info *);
// OBSOLETE #define FRAME_CHAIN(fi) mn10200_frame_chain (fi)
// OBSOLETE 
// OBSOLETE extern CORE_ADDR mn10200_find_callers_reg (struct frame_info *, int);
// OBSOLETE extern CORE_ADDR mn10200_frame_saved_pc (struct frame_info *);
// OBSOLETE #define FRAME_SAVED_PC(FI) (mn10200_frame_saved_pc (FI))
// OBSOLETE 
// OBSOLETE /* Extract from an array REGBUF containing the (raw) register state
// OBSOLETE    a function return value of type TYPE, and copy that, in virtual format,
// OBSOLETE    into VALBUF.  */
// OBSOLETE 
// OBSOLETE #define DEPRECATED_EXTRACT_RETURN_VALUE(TYPE, REGBUF, VALBUF) \
// OBSOLETE   { \
// OBSOLETE     if (TYPE_LENGTH (TYPE) > 8) \
// OBSOLETE       internal_error (__FILE__, __LINE__, "failed internal consistency check"); \
// OBSOLETE     else if (TYPE_LENGTH (TYPE) > 2 && TYPE_CODE (TYPE) != TYPE_CODE_PTR) \
// OBSOLETE       { \
// OBSOLETE 	memcpy (VALBUF, REGBUF + REGISTER_BYTE (0), 2); \
// OBSOLETE 	memcpy (VALBUF + 2, REGBUF + REGISTER_BYTE (1), 2); \
// OBSOLETE       } \
// OBSOLETE     else if (TYPE_CODE (TYPE) == TYPE_CODE_PTR)\
// OBSOLETE       { \
// OBSOLETE         memcpy (VALBUF, REGBUF + REGISTER_BYTE (4), TYPE_LENGTH (TYPE)); \
// OBSOLETE       } \
// OBSOLETE     else \
// OBSOLETE       { \
// OBSOLETE         memcpy (VALBUF, REGBUF + REGISTER_BYTE (0), TYPE_LENGTH (TYPE)); \
// OBSOLETE       } \
// OBSOLETE   }
// OBSOLETE 
// OBSOLETE #define DEPRECATED_EXTRACT_STRUCT_VALUE_ADDRESS(REGBUF) \
// OBSOLETE   extract_address (REGBUF + REGISTER_BYTE (4), \
// OBSOLETE 		   REGISTER_RAW_SIZE (4))
// OBSOLETE 
// OBSOLETE #define DEPRECATED_STORE_RETURN_VALUE(TYPE, VALBUF) \
// OBSOLETE   { \
// OBSOLETE     if (TYPE_LENGTH (TYPE) > 8) \
// OBSOLETE       internal_error (__FILE__, __LINE__, "failed internal consistency check"); \
// OBSOLETE     else if (TYPE_LENGTH (TYPE) > 2 && TYPE_CODE (TYPE) != TYPE_CODE_PTR) \
// OBSOLETE       { \
// OBSOLETE 	deprecated_write_register_bytes (REGISTER_BYTE (0), VALBUF, 2); \
// OBSOLETE 	deprecated_write_register_bytes (REGISTER_BYTE (1), VALBUF + 2, 2); \
// OBSOLETE       } \
// OBSOLETE     else if (TYPE_CODE (TYPE) == TYPE_CODE_PTR)\
// OBSOLETE       { \
// OBSOLETE         deprecated_write_register_bytes (REGISTER_BYTE (4), VALBUF, TYPE_LENGTH (TYPE)); \
// OBSOLETE       } \
// OBSOLETE     else \
// OBSOLETE       { \
// OBSOLETE         deprecated_write_register_bytes (REGISTER_BYTE (0), VALBUF, TYPE_LENGTH (TYPE)); \
// OBSOLETE       } \
// OBSOLETE   }
// OBSOLETE 
// OBSOLETE 
// OBSOLETE extern CORE_ADDR mn10200_store_struct_return (CORE_ADDR addr, CORE_ADDR sp);
// OBSOLETE #define STORE_STRUCT_RETURN(STRUCT_ADDR, SP) \
// OBSOLETE   (SP) = mn10200_store_struct_return (STRUCT_ADDR, SP)
// OBSOLETE 
// OBSOLETE extern CORE_ADDR mn10200_skip_prologue (CORE_ADDR);
// OBSOLETE #define SKIP_PROLOGUE(pc) (mn10200_skip_prologue (pc))
// OBSOLETE 
// OBSOLETE #define FRAME_ARGS_SKIP 0
// OBSOLETE 
// OBSOLETE #define FRAME_ARGS_ADDRESS(fi) (get_frame_base (fi))
// OBSOLETE #define FRAME_LOCALS_ADDRESS(fi) (get_frame_base (fi))
// OBSOLETE #define FRAME_NUM_ARGS(fi) (-1)
// OBSOLETE 
// OBSOLETE extern void mn10200_pop_frame (struct frame_info *);
// OBSOLETE #define POP_FRAME mn10200_pop_frame (get_current_frame ())
// OBSOLETE 
// OBSOLETE #define DEPRECATED_USE_GENERIC_DUMMY_FRAMES 1
// OBSOLETE #define CALL_DUMMY                   {0}
// OBSOLETE #define CALL_DUMMY_START_OFFSET      (0)
// OBSOLETE #define CALL_DUMMY_BREAKPOINT_OFFSET (0)
// OBSOLETE #define CALL_DUMMY_LOCATION          AT_ENTRY_POINT
// OBSOLETE #define FIX_CALL_DUMMY(DUMMY, START, FUNADDR, NARGS, ARGS, TYPE, GCCP)
// OBSOLETE #define CALL_DUMMY_ADDRESS()         entry_point_address ()
// OBSOLETE 
// OBSOLETE extern CORE_ADDR mn10200_push_return_address (CORE_ADDR, CORE_ADDR);
// OBSOLETE #define PUSH_RETURN_ADDRESS(PC, SP)  mn10200_push_return_address (PC, SP)
// OBSOLETE 
// OBSOLETE #define PUSH_DUMMY_FRAME	generic_push_dummy_frame ()
// OBSOLETE 
// OBSOLETE extern CORE_ADDR mn10200_push_arguments (int, struct value **, CORE_ADDR,
// OBSOLETE 					 unsigned char, CORE_ADDR);
// OBSOLETE #define PUSH_ARGUMENTS(NARGS, ARGS, SP, STRUCT_RETURN, STRUCT_ADDR) \
// OBSOLETE   (mn10200_push_arguments (NARGS, ARGS, SP, STRUCT_RETURN, STRUCT_ADDR))
// OBSOLETE 
// OBSOLETE #define DEPRECATED_PC_IN_CALL_DUMMY(PC, SP, FP) generic_pc_in_call_dummy (PC, SP, FP)
// OBSOLETE 
// OBSOLETE #define REG_STRUCT_HAS_ADDR(gcc_p,TYPE) \
// OBSOLETE   	(TYPE_LENGTH (TYPE) > 8)
// OBSOLETE 
// OBSOLETE extern use_struct_convention_fn mn10200_use_struct_convention;
// OBSOLETE #define USE_STRUCT_CONVENTION(GCC_P, TYPE) mn10200_use_struct_convention (GCC_P, TYPE)
// OBSOLETE 
// OBSOLETE /* Define this for Wingdb */
// OBSOLETE #define TARGET_MN10200
@


1.12.8.4
log
@2003-11-11  David Carlton  <carlton@@kealia.com>

	* Merge with mainline; tag is carlton-dictionary-20031111-merge.
@
text
@@


1.11
log
@2002-08-05  Andrew Cagney  <ac131313@@redhat.com>
* mcore-tdep.c (mcore_gdbarch_init): Use
generic_unwind_get_saved_register instead of
generic_get_saved_register.
* v850-tdep.c (v850_gdbarch_init): Ditto.
* frv-tdep.c (frv_gdbarch_init): Ditto.
* mn10300-tdep.c (mn10300_gdbarch_init): Ditto.
* s390-tdep.c (s390_gdbarch_init): Ditto.
* d10v-tdep.c (d10v_gdbarch_init): Ditto.
* config/mn10200/tm-mn10200.h (GET_SAVED_REGISTER): Ditto.
* config/h8300/tm-h8300.h (GET_SAVED_REGISTER): Ditto.
@
text
@d151 1
a151 1
#define STORE_RETURN_VALUE(TYPE, VALBUF) \
@


1.10
log
@Fix some K&R isms.
@
text
@d216 1
a216 1
      generic_get_saved_register (raw_buffer, optimized, addrp, frame, regnum, lval)
@


1.9
log
@+	* gdbarch.sh (DEPRECATED_EXTRACT_RETURN_VALUE): Rename
+	EXTRACT_RETURN_VALUE.
+	(DEPRECATED_EXTRACT_STRUCT_VALUE_ADDRESS): Rename
+	EXTRACT_STRUCT_VALUE_ADDRESS.
+	* gdbarch.h, gdbarch.c: Regenerate.
+
+	* values.c (value_being_returned): Handle
+	DEPRECATED_EXTRACT_STRUCT_VALUE_ADDRESS.
+	(EXTRACT_RETURN_VALUE): Define as DEPRECATED_EXTRACT_RETURN_VALUE.
+
+	* arm-linux-tdep.c (arm_linux_init_abi): Update.
+	* arm-tdep.c (arm_gdbarch_init): Update.
+	* avr-tdep.c (avr_gdbarch_init): Update.
+	* cris-tdep.c (cris_gdbarch_init): Update.
+	* d10v-tdep.c (d10v_gdbarch_init): Update.
+	* ia64-tdep.c (ia64_gdbarch_init): Update.
+	* m68hc11-tdep.c (m68hc11_gdbarch_init): Update.
+	* rs6000-tdep.c (rs6000_gdbarch_init): Update.
+	* s390-tdep.c (s390_gdbarch_init): Update.
+	* sh-tdep.c (sh_gdbarch_init): Update.
+	* s390-tdep.c (s390_gdbarch_init): Update.
+	* sparc-tdep.c (sparc_gdbarch_init): Update.
+	* ns32k-tdep.c (ns32k_gdbarch_init): Update.
+	* v850-tdep.c (v850_gdbarch_init): Update.
+	* vax-tdep.c (vax_gdbarch_init): Update.
+	* x86-64-tdep.c (x86_64_gdbarch_init): Update.
+	* xstormy16-tdep.c (xstormy16_gdbarch_init): Update.
+
+	* config/arc/tm-arc.h: Update.
+	* config/d30v/tm-d30v.h: Update.
+	* config/fr30/tm-fr30.h: Update.
+	* config/h8300/tm-h8300.h: Update.
* config/h8500/tm-h8500.h: Update.
* config/i386/tm-i386.h: Update.
* config/i386/tm-ptx.h: Update.
* config/i386/tm-symmetry.h: Update.
* config/i960/tm-i960.h: Update.
* config/m32r/tm-m32r.h: Update.
* config/m68k/tm-delta68.h: Update.
* config/m68k/tm-linux.h: Update.
* config/m68k/tm-m68k.h: Update.
* config/m88k/tm-m88k.h: Update.
* config/mcore/tm-mcore.h: Update.
* config/mips/tm-mips.h: Update.
* config/mn10200/tm-mn10200.h: Update.
* config/pa/tm-hppa.h: Update.
* config/pa/tm-hppa64.h: Update.
* config/sparc/tm-sp64.h: Update.
* config/sparc/tm-sparc.h: Update.
* config/sparc/tm-sparclet.h: Update.
* config/z8k/tm-z8k.h: Update.
@
text
@d200 2
a201 3
extern CORE_ADDR
mn10200_push_arguments (int, struct value **, CORE_ADDR,
			unsigned char, CORE_ADDR);
@


1.8
log
@* config/mn10200/tm-mn10200.h: Include "symfile.h" and "symtab.h".
* config/mcore/tm-mcore.h: Ditto.  Update copyright.
* config/v850/tm-v850.h: Ditto.  Update copyright.
@
text
@d128 1
a128 1
#define EXTRACT_RETURN_VALUE(TYPE, REGBUF, VALBUF) \
d147 1
a147 1
#define EXTRACT_STRUCT_VALUE_ADDRESS(REGBUF) \
@


1.8.6.1
log
@Merge with mainline, kseitz_interps-20020619-merge.
@
text
@d128 1
a128 1
#define DEPRECATED_EXTRACT_RETURN_VALUE(TYPE, REGBUF, VALBUF) \
d147 1
a147 1
#define DEPRECATED_EXTRACT_STRUCT_VALUE_ADDRESS(REGBUF) \
@


1.8.6.2
log
@Merge w/trunk (kseitz_interps-20020722-merge).
@
text
@d200 3
a202 2
extern CORE_ADDR mn10200_push_arguments (int, struct value **, CORE_ADDR,
					 unsigned char, CORE_ADDR);
@


1.8.6.3
log
@Merge with kseitz_interps-20020809-merge of CVS head.
@
text
@d216 1
a216 1
      generic_unwind_get_saved_register (raw_buffer, optimized, addrp, frame, regnum, lval)
@


1.8.6.4
log
@Merge with kseitz_interps-20020829-merge tag from trunk.
@
text
@d151 1
a151 1
#define DEPRECATED_STORE_RETURN_VALUE(TYPE, VALBUF) \
@


1.8.4.1
log
@merge from trunk
@
text
@d128 1
a128 1
#define DEPRECATED_EXTRACT_RETURN_VALUE(TYPE, REGBUF, VALBUF) \
d147 1
a147 1
#define DEPRECATED_EXTRACT_STRUCT_VALUE_ADDRESS(REGBUF) \
@


1.7
log
@Eliminate TARGET_BYTE_ORDER.
@
text
@d2 3
a4 1
   Copyright 1997, 1998, 1999, 2000, 2001 Free Software Foundation, Inc.
d29 2
@


1.6
log
@LITTLE_ENDIAN -> BFD_ENDIAN_LITTLE
@
text
@a27 3
/* The mn10200 is little endian.  */
#define TARGET_BYTE_ORDER BFD_ENDIAN_LITTLE

@


1.5
log
@Update/correct copyright notices.
@
text
@d29 1
a29 1
#define TARGET_BYTE_ORDER LITTLE_ENDIAN
@


1.4
log
@From 2001-03-01 Tom Rix <trix@@redhat.com>:
* mn10200-tdep.c (mn10200_frame_chain): Pass 0 for ``pc''
parameter to mn10200_analyze_prologue.
* config/mn10200/tm-mn10200.h: Include "regcache.h".
* MAINTAINERS: Document that mn10200-elf target is buildable.
@
text
@d2 1
a2 1
   Copyright 1997 Free Software Foundation, Inc. 
@


1.3
log
@Replace calls to abort() with calls to internal_error().
@
text
@d23 5
@


1.2
log
@PARAMS removal.
@
text
@d125 1
a125 1
      abort (); \
d148 1
a148 1
      abort (); \
@


1.1
log
@Initial revision
@
text
@d6 1
a6 1
This file is part of GDB.
d8 14
a21 13
This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
a94 1
#ifdef __STDC__
a98 1
#endif
d102 1
a102 1
extern void mn10200_init_extra_frame_info PARAMS ((struct frame_info *));
d106 2
a107 2
extern void mn10200_frame_find_saved_regs PARAMS ((struct frame_info *,
						   struct frame_saved_regs *));
d110 1
a110 1
extern CORE_ADDR mn10200_frame_chain PARAMS ((struct frame_info *));
d112 1
a112 1
#define FRAME_CHAIN_VALID(FP, FI)	generic_frame_chain_valid (FP, FI)
d114 2
a115 2
extern CORE_ADDR mn10200_find_callers_reg PARAMS ((struct frame_info *, int));
extern CORE_ADDR mn10200_frame_saved_pc   PARAMS ((struct frame_info *));
d164 2
d169 2
a170 2
extern CORE_ADDR mn10200_skip_prologue PARAMS ((CORE_ADDR));
#define SKIP_PROLOGUE(pc) pc = mn10200_skip_prologue (pc)
d176 1
a176 1
#define FRAME_NUM_ARGS(val, fi) ((val) = -1)
d178 1
a178 1
extern void mn10200_pop_frame PARAMS ((struct frame_info *));
d181 1
a181 1
#define USE_GENERIC_DUMMY_FRAMES
d189 1
a189 1
extern CORE_ADDR mn10200_push_return_address PARAMS ((CORE_ADDR, CORE_ADDR));
d195 2
a196 2
mn10200_push_arguments PARAMS ((int, struct value **, CORE_ADDR,
			     unsigned char, CORE_ADDR));
d198 1
a198 1
  (SP) = mn10200_push_arguments (NARGS, ARGS, SP, STRUCT_RETURN, STRUCT_ADDR)
d200 1
a200 1
#define PC_IN_CALL_DUMMY(PC, SP, FP) generic_pc_in_call_dummy (PC, SP)
d210 2
a211 1
#define GET_SAVED_REGISTER
@


1.1.1.1
log
@Initial creation of sourceware repository
@
text
@@


1.1.1.2
log
@import gdb-19990422 snapshot
@
text
@d180 1
a180 1
#define USE_GENERIC_DUMMY_FRAMES 1
d199 1
a199 1
#define PC_IN_CALL_DUMMY(PC, SP, FP) generic_pc_in_call_dummy (PC, SP, FP)
d209 1
a209 2
#define GET_SAVED_REGISTER(raw_buffer, optimized, addrp, frame, regnum, lval) \
      generic_get_saved_register (raw_buffer, optimized, addrp, frame, regnum, lval)
@


1.1.1.3
log
@import gdb-19990504 snapshot
@
text
@d169 1
a169 1
#define SKIP_PROLOGUE(pc) (mn10200_skip_prologue (pc))
@


1.1.1.4
log
@import gdb-1999-05-25 snapshot
@
text
@d175 1
a175 1
#define FRAME_NUM_ARGS(fi) (-1)
d197 1
a197 1
  (mn10200_push_arguments (NARGS, ARGS, SP, STRUCT_RETURN, STRUCT_ADDR))
@


1.1.1.5
log
@import gdb-1999-07-07 post reformat
@
text
@d6 1
a6 1
   This file is part of GDB.
d8 13
a20 14
   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place - Suite 330,
   Boston, MA 02111-1307, USA.  */
d108 1
a108 1
						struct frame_saved_regs *));
d116 1
a116 1
extern CORE_ADDR mn10200_frame_saved_pc PARAMS ((struct frame_info *));
d194 2
a195 2
  mn10200_push_arguments PARAMS ((int, struct value **, CORE_ADDR,
				  unsigned char, CORE_ADDR));
@


1.1.1.6
log
@import gdb-1999-08-30 snapshot
@
text
@d95 1
d100 1
@


1.1.1.7
log
@import gdb-1999-09-08 snapshot
@
text
@a163 2

extern CORE_ADDR mn10200_store_struct_return (CORE_ADDR addr, CORE_ADDR sp);
@


1.1.1.8
log
@import gdb-1999-12-13 snapshot
@
text
@d112 1
a112 1
#define FRAME_CHAIN_VALID(FP, FI)	generic_file_frame_chain_valid (FP, FI)
@


