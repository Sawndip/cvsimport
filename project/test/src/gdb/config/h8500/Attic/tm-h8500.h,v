head	1.23;
access;
symbols
	gdb_6_0-2003-10-04-release:1.22
	kettenis_sparc-20030918-branch:1.22.0.36
	kettenis_sparc-20030918-branchpoint:1.22
	carlton_dictionary-20030917-merge:1.22
	ezannoni_pie-20030916-branchpoint:1.22
	ezannoni_pie-20030916-branch:1.22.0.34
	cagney_x86i386-20030821-branch:1.22.0.32
	cagney_x86i386-20030821-branchpoint:1.22
	carlton_dictionary-20030805-merge:1.22
	carlton_dictionary-20030627-merge:1.22
	gdb_6_0-branch:1.22.0.30
	gdb_6_0-2003-06-23-branchpoint:1.22
	jimb-ppc64-linux-20030613-branch:1.22.0.28
	jimb-ppc64-linux-20030613-branchpoint:1.22
	cagney_convert-20030606-branch:1.22.0.26
	cagney_convert-20030606-branchpoint:1.22
	cagney_writestrings-20030508-branch:1.22.0.24
	cagney_writestrings-20030508-branchpoint:1.22
	jimb-ppc64-linux-20030528-branch:1.22.0.22
	jimb-ppc64-linux-20030528-branchpoint:1.22
	carlton_dictionary-20030523-merge:1.22
	cagney_fileio-20030521-branch:1.22.0.20
	cagney_fileio-20030521-branchpoint:1.22
	kettenis_i386newframe-20030517-mergepoint:1.22
	jimb-ppc64-linux-20030509-branch:1.22.0.18
	jimb-ppc64-linux-20030509-branchpoint:1.22
	kettenis_i386newframe-20030504-mergepoint:1.22
	carlton_dictionary-20030430-merge:1.22
	kettenis_i386newframe-20030419-branch:1.22.0.16
	kettenis_i386newframe-20030419-branchpoint:1.22
	carlton_dictionary-20030416-merge:1.22
	cagney_frameaddr-20030409-mergepoint:1.22
	kettenis_i386newframe-20030406-branch:1.22.0.14
	kettenis_i386newframe-20030406-branchpoint:1.22
	cagney_frameaddr-20030403-branchpoint:1.22
	cagney_frameaddr-20030403-branch:1.22.0.12
	cagney_framebase-20030330-mergepoint:1.22
	cagney_framebase-20030326-branch:1.22.0.10
	cagney_framebase-20030326-branchpoint:1.22
	cagney_lazyid-20030317-branch:1.22.0.8
	cagney_lazyid-20030317-branchpoint:1.22
	kettenis-i386newframe-20030316-mergepoint:1.22
	offbyone-20030313-branch:1.22.0.6
	offbyone-20030313-branchpoint:1.22
	kettenis-i386newframe-20030308-branch:1.22.0.4
	kettenis-i386newframe-20030308-branchpoint:1.22
	carlton_dictionary-20030305-merge:1.22
	cagney_offbyone-20030303-branch:1.22.0.2
	cagney_offbyone-20030303-branchpoint:1.22
	carlton_dictionary-20030207-merge:1.22
	interps-20030203-mergepoint:1.21
	interps-20030202-branch:1.21.0.2
	interps-20030202-branchpoint:1.21
	cagney-unwind-20030108-branch:1.20.0.2
	cagney-unwind-20030108-branchpoint:1.20
	carlton_dictionary-20021223-merge:1.19
	gdb_5_3-2002-12-12-release:1.13
	carlton_dictionary-20021115-merge:1.15
	kseitz_interps-20021105-merge:1.14
	kseitz_interps-20021103-merge:1.14
	drow-cplus-merge-20021020:1.13
	drow-cplus-merge-20021025:1.13
	carlton_dictionary-20021025-merge:1.13
	carlton_dictionary-20021011-merge:1.13
	drow-cplus-branch:1.13.0.10
	drow-cplus-branchpoint:1.13
	kseitz_interps-20020930-merge:1.13
	carlton_dictionary-20020927-merge:1.13
	carlton_dictionary-branch:1.13.0.8
	carlton_dictionary-20020920-branchpoint:1.13
	gdb_5_3-branch:1.13.0.6
	gdb_5_3-2002-09-04-branchpoint:1.13
	kseitz_interps-20020829-merge:1.13
	cagney_sysregs-20020825-branch:1.13.0.4
	cagney_sysregs-20020825-branchpoint:1.13
	readline_4_3-import-branch:1.13.0.2
	readline_4_3-import-branchpoint:1.13
	gdb_5_2_1-2002-07-23-release:1.10
	kseitz_interps-20020528-branch:1.11.0.6
	kseitz_interps-20020528-branchpoint:1.11
	cagney_regbuf-20020515-branch:1.11.0.4
	cagney_regbuf-20020515-branchpoint:1.11
	jimb-macro-020506-branch:1.11.0.2
	jimb-macro-020506-branchpoint:1.11
	gdb_5_2-2002-04-29-release:1.10
	gdb_5_2-branch:1.10.0.2
	gdb_5_2-2002-03-03-branchpoint:1.10
	gdb_5_1_1-2002-01-24-release:1.7
	gdb_5_1_0_1-2002-01-03-release:1.7
	cygnus_cvs_20020108_pre:1.8
	gdb_5_1_0_1-2002-01-03-branchpoint:1.7
	gdb_5_1_0_1-2002-01-03-branch:1.7.0.8
	gdb_5_1-2001-11-21-release:1.7
	gdb_s390-2001-09-26-branch:1.7.0.6
	gdb_s390-2001-09-26-branchpoint:1.7
	gdb_5_1-2001-07-29-branch:1.7.0.4
	gdb_5_1-2001-07-29-branchpoint:1.7
	dberlin-typesystem-branch:1.7.0.2
	dberlin-typesystem-branchpoint:1.7
	gdb-post-ptid_t-2001-05-03:1.7
	gdb-pre-ptid_t-2001-05-03:1.6
	insight-precleanup-2001-01-01:1.3
	gdb-post-protoization-2000-07-29:1.3
	gdb-pre-protoization-2000-07-29:1.3
	gdb-premipsmulti-2000-06-06-branch:1.3.0.2
	gdb-premipsmulti-2000-06-06-branchpoint:1.3
	gdb-post-params-removal-2000-06-04:1.3
	gdb-pre-params-removal-2000-06-04:1.3
	gdb-post-params-removal-2000-05-28:1.3
	gdb-pre-params-removal-2000-05-28:1.2
	gdb_5_0-2000-05-19-release:1.1.1.5
	gdb_4_18_2-2000-05-18-release:1.1.1.5
	gdb_4_95_1-2000-05-11-snapshot:1.1.1.5
	gdb_4_95_0-2000-04-27-snapshot:1.1.1.5
	gdb_5_0-2000-04-10-branch:1.1.1.5.0.2
	gdb_5_0-2000-04-10-branchpoint:1.1.1.5
	repo-unification-2000-02-06:1.1.1.5
	insight-2000-02-04:1.1.1.5
	gdb-2000-02-04:1.1.1.5
	gdb-2000-02-02:1.1.1.5
	gdb-2000-02-01:1.1.1.5
	gdb-2000-01-31:1.1.1.5
	gdb-2000-01-26:1.1.1.5
	gdb-2000-01-24:1.1.1.5
	gdb-2000-01-17:1.1.1.5
	gdb-2000-01-10:1.1.1.5
	gdb-2000-01-05:1.1.1.5
	gdb-1999-12-21:1.1.1.5
	gdb-1999-12-13:1.1.1.5
	gdb-1999-12-07:1.1.1.5
	gdb-1999-12-06:1.1.1.5
	gdb-1999-11-16:1.1.1.5
	gdb-1999-11-08:1.1.1.5
	gdb-1999-11-01:1.1.1.5
	gdb-1999-10-25:1.1.1.5
	gdb-1999-10-18:1.1.1.5
	gdb-1999-10-11:1.1.1.5
	gdb-1999-10-04:1.1.1.5
	gdb-1999-09-28:1.1.1.5
	gdb-1999-09-21:1.1.1.5
	gdb-1999-09-13:1.1.1.5
	gdb-1999-09-08:1.1.1.5
	gdb-1999-08-30:1.1.1.5
	gdb-1999-08-23:1.1.1.5
	gdb-1999-08-16:1.1.1.5
	gdb-1999-08-09:1.1.1.5
	gdb-1999-08-02:1.1.1.5
	gdb-1999-07-26:1.1.1.5
	gdb-1999-07-19:1.1.1.5
	gdb-1999-07-12:1.1.1.5
	gdb-post-reformat-19990707:1.1.1.5
	gdb-1999-07-07-post-reformat-snapshot:1.1.1.5
	gdb-pre-reformat-19990707:1.1.1.4
	gdb-1999-07-07:1.1.1.4
	gdb-1999-07-05:1.1.1.4
	gdb-1999-06-28:1.1.1.4
	gdb-1999-06-21:1.1.1.4
	gdb-1999-06-14:1.1.1.4
	gdb-1999-06-07:1.1.1.4
	gdb-1999-06-01:1.1.1.4
	gdb-4_18-branch:1.1.1.1.0.2
	gdb-4_18-release:1.1.1.1
	gdb-1999-05-25:1.1.1.3
	gdb-1999-05-19:1.1.1.2
	gdb-1999-05-10:1.1.1.2
	gdb-19990504:1.1.1.2
	gdb-19990422:1.1.1.1
	SNAPSHOT:1.1.1
	gdb-4_18:1.1.1.1
	GDB_4_18:1.1.1;
locks; strict;
comment	@ * @;
expand	@o@;


1.23
date	2003.10.06.20.23.40;	author cagney;	state dead;
branches;
next	1.22;

1.22
date	2003.02.04.22.04.08;	author cagney;	state Exp;
branches
	1.22.34.1;
next	1.21;

1.21
date	2003.01.14.00.49.05;	author cagney;	state Exp;
branches;
next	1.20;

1.20
date	2003.01.08.01.53.38;	author cagney;	state Exp;
branches;
next	1.19;

1.19
date	2002.12.01.19.07.15;	author cagney;	state Exp;
branches;
next	1.18;

1.18
date	2002.11.28.21.38.43;	author cagney;	state Exp;
branches;
next	1.17;

1.17
date	2002.11.27.20.44.09;	author cagney;	state Exp;
branches;
next	1.16;

1.16
date	2002.11.27.01.08.49;	author cagney;	state Exp;
branches;
next	1.15;

1.15
date	2002.11.14.00.25.04;	author cagney;	state Exp;
branches;
next	1.14;

1.14
date	2002.10.31.19.49.34;	author cagney;	state Exp;
branches;
next	1.13;

1.13
date	2002.08.24.00.21.35;	author cagney;	state Exp;
branches
	1.13.8.1
	1.13.10.1;
next	1.12;

1.12
date	2002.06.14.22.55.44;	author cagney;	state Exp;
branches;
next	1.11;

1.11
date	2002.04.06.00.02.51;	author cagney;	state Exp;
branches
	1.11.4.1
	1.11.6.1;
next	1.10;

1.10
date	2002.01.29.04.42.37;	author cagney;	state Exp;
branches;
next	1.9;

1.9
date	2002.01.20.18.05.52;	author cagney;	state Exp;
branches;
next	1.8;

1.8
date	2002.01.05.04.30.30;	author cagney;	state Exp;
branches;
next	1.7;

1.7
date	2001.05.04.04.15.30;	author kevinb;	state Exp;
branches;
next	1.6;

1.6
date	2001.03.14.23.23.11;	author cagney;	state Exp;
branches;
next	1.5;

1.5
date	2001.03.06.08.21.27;	author kevinb;	state Exp;
branches;
next	1.4;

1.4
date	2001.02.25.04.45.11;	author kevinb;	state Exp;
branches;
next	1.3;

1.3
date	2000.05.28.01.12.35;	author kevinb;	state Exp;
branches;
next	1.2;

1.2
date	2000.04.14.19.13.02;	author jimb;	state Exp;
branches;
next	1.1;

1.1
date	99.04.16.01.34.16;	author shebs;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.04.16.01.34.16;	author shebs;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	99.05.05.14.43.25;	author shebs;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	99.05.25.18.04.28;	author jsm;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	99.06.01.15.41.19;	author jsm;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	99.07.07.20.12.26;	author jsm;	state Exp;
branches;
next	;

1.11.4.1
date	2002.06.15.16.42.58;	author cagney;	state Exp;
branches;
next	;

1.11.6.1
date	2002.06.20.01.34.24;	author kseitz;	state Exp;
branches;
next	1.11.6.2;

1.11.6.2
date	2002.08.30.22.52.47;	author kseitz;	state Exp;
branches;
next	1.11.6.3;

1.11.6.3
date	2002.11.03.22.20.19;	author ezannoni;	state Exp;
branches;
next	;

1.13.8.1
date	2002.11.15.19.19.03;	author carlton;	state Exp;
branches;
next	1.13.8.2;

1.13.8.2
date	2002.12.23.19.38.56;	author carlton;	state Exp;
branches;
next	1.13.8.3;

1.13.8.3
date	2003.02.07.19.17.54;	author carlton;	state Exp;
branches;
next	1.13.8.4;

1.13.8.4
date	2003.11.11.23.51.03;	author carlton;	state dead;
branches;
next	;

1.13.10.1
date	2003.12.14.20.27.36;	author drow;	state dead;
branches;
next	;

1.22.34.1
date	2004.03.23.20.30.09;	author ezannoni;	state dead;
branches;
next	;


desc
@@


1.23
log
@2003-10-06  Andrew Cagney  <cagney@@redhat.com>

	* config/nm-m3.h, config/h8500/h8500.mt: Delete obsolete files.
	* config/h8500/tm-h8500.h, config/i386/nm-ptx4.h: Ditto.
	* config/i386/nm-symmetry.h, config/i386/ptx.mh: Ditto.
	* config/i386/ptx.mt, config/i386/ptx4.mh: Ditto.
	* config/i386/ptx4.mt, config/i386/symmetry.mh: Ditto.
	* config/i386/symmetry.mt, config/i386/tm-ptx.h: Ditto.
	* config/i386/tm-ptx4.h, config/i386/tm-symmetry.h: Ditto.
	* config/i386/xm-ptx.h, config/i386/xm-ptx4.h: Ditto.
	* config/i386/xm-symmetry.h, config/mips/mipsm3.mh: Ditto.
	* config/mips/mipsm3.mt, config/mips/tm-mipsm3.h: Ditto.
	* config/mips/xm-mipsm3.h, config/mn10200/mn10200.mt: Ditto.
	* config/mn10200/tm-mn10200.h, config/pa/hppabsd.mh: Ditto.
	* config/pa/hppabsd.mt, config/pa/hppaosf.mh: Ditto.
	* config/pa/hppaosf.mt, config/pa/hppapro.mt: Ditto.
	* config/pa/nm-hppab.h, config/pa/nm-hppao.h: Ditto.
	* config/pa/tm-hppab.h, config/pa/tm-hppao.h: Ditto.
	* config/pa/tm-pro.h, config/pa/xm-hppab.h: Ditto.
	* config/pa/xm-pa.h, config/sparc/sparclet.mt: Ditto.
	* config/sparc/sparclite.mt, config/sparc/tm-sparclet.h: Ditto.
	* config/sparc/tm-sparclite.h, config/z8k/tm-z8k.h: Ditto.
	* config/z8k/z8k.mt: Ditto.
@
text
@// OBSOLETE /* Parameters for execution on a H8/500 series machine.
// OBSOLETE 
// OBSOLETE    Copyright 1993, 1994, 1995, 1998, 1999, 2000, 2001, 2002, 2003 Free
// OBSOLETE    Software Foundation, Inc.
// OBSOLETE 
// OBSOLETE    This file is part of GDB.
// OBSOLETE 
// OBSOLETE    This program is free software; you can redistribute it and/or modify
// OBSOLETE    it under the terms of the GNU General Public License as published by
// OBSOLETE    the Free Software Foundation; either version 2 of the License, or
// OBSOLETE    (at your option) any later version.
// OBSOLETE 
// OBSOLETE    This program is distributed in the hope that it will be useful,
// OBSOLETE    but WITHOUT ANY WARRANTY; without even the implied warranty of
// OBSOLETE    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// OBSOLETE    GNU General Public License for more details.
// OBSOLETE 
// OBSOLETE    You should have received a copy of the GNU General Public License
// OBSOLETE    along with this program; if not, write to the Free Software
// OBSOLETE    Foundation, Inc., 59 Temple Place - Suite 330,
// OBSOLETE    Boston, MA 02111-1307, USA.  */
// OBSOLETE 
// OBSOLETE #include "regcache.h"
// OBSOLETE 
// OBSOLETE /* NOTE: cagney/2002-11-24: This is a guess.  */
// OBSOLETE #define DEPRECATED_USE_GENERIC_DUMMY_FRAMES 0
// OBSOLETE #define CALL_DUMMY_LOCATION ON_STACK
// OBSOLETE #define DEPRECATED_PC_IN_CALL_DUMMY(pc, sp, frame_address) deprecated_pc_in_call_dummy_on_stack (pc, sp, frame_address)
// OBSOLETE 
// OBSOLETE /* Contributed by Steve Chamberlain sac@@cygnus.com */
// OBSOLETE 
// OBSOLETE #define GDB_TARGET_IS_H8500
// OBSOLETE 
// OBSOLETE /* Define the sizes of integers and pointers.  */
// OBSOLETE 
// OBSOLETE #define TARGET_INT_BIT 16
// OBSOLETE 
// OBSOLETE #define TARGET_LONG_BIT 32
// OBSOLETE 
// OBSOLETE #define TARGET_PTR_BIT (minimum_mode ? 16 : 32)
// OBSOLETE 
// OBSOLETE /* Offset from address of function to start of its code.
// OBSOLETE    Zero on most machines.  */
// OBSOLETE 
// OBSOLETE #define FUNCTION_START_OFFSET 0
// OBSOLETE 
// OBSOLETE /* Advance PC across any function entry prologue instructions
// OBSOLETE    to reach some "real" code.  */
// OBSOLETE 
// OBSOLETE #define SKIP_PROLOGUE(ip)   (h8500_skip_prologue (ip))
// OBSOLETE extern CORE_ADDR h8500_skip_prologue (CORE_ADDR);
// OBSOLETE 
// OBSOLETE /* Immediately after a function call, return the saved pc.
// OBSOLETE    Can't always go through the frames for this because on some machines
// OBSOLETE    the new frame is not set up until the new function executes
// OBSOLETE    some instructions.  */
// OBSOLETE 
// OBSOLETE #define SAVED_PC_AFTER_CALL(frame) saved_pc_after_call()
// OBSOLETE extern CORE_ADDR saved_pc_after_call (void);
// OBSOLETE 
// OBSOLETE /* Stack grows downward.  */
// OBSOLETE 
// OBSOLETE #define INNER_THAN(lhs,rhs) ((lhs) < (rhs))
// OBSOLETE 
// OBSOLETE /* Illegal instruction - used by the simulator for breakpoint
// OBSOLETE    detection */
// OBSOLETE 
// OBSOLETE #define BREAKPOINT {0x0b}
// OBSOLETE 
// OBSOLETE /* If your kernel resets the pc after the trap happens you may need to
// OBSOLETE    define this before including this file.  */
// OBSOLETE 
// OBSOLETE #define DECR_PC_AFTER_BREAK 0
// OBSOLETE 
// OBSOLETE /* Say how long registers are.  */
// OBSOLETE 
// OBSOLETE #define REGISTER_TYPE  unsigned long
// OBSOLETE 
// OBSOLETE /* Say how much memory is needed to store a copy of the register set */
// OBSOLETE 
// OBSOLETE #define REGISTER_BYTES    (NUM_REGS * 4)
// OBSOLETE 
// OBSOLETE /* Index within `registers' of the first byte of the space for
// OBSOLETE    register N.  */
// OBSOLETE 
// OBSOLETE #define REGISTER_BYTE(N)  ((N)*4)
// OBSOLETE 
// OBSOLETE /* Number of bytes of storage in the actual machine representation
// OBSOLETE    for register N.  */
// OBSOLETE 
// OBSOLETE #define REGISTER_RAW_SIZE(N) h8500_register_size(N)
// OBSOLETE extern int h8500_register_size (int regno);
// OBSOLETE 
// OBSOLETE #define REGISTER_SIZE 4
// OBSOLETE 
// OBSOLETE #define REGISTER_VIRTUAL_SIZE(N) h8500_register_size(N)
// OBSOLETE 
// OBSOLETE /* Largest value REGISTER_RAW_SIZE can have.  */
// OBSOLETE 
// OBSOLETE #define MAX_REGISTER_RAW_SIZE 4
// OBSOLETE 
// OBSOLETE /* Largest value REGISTER_VIRTUAL_SIZE can have.  */
// OBSOLETE 
// OBSOLETE #define MAX_REGISTER_VIRTUAL_SIZE 4
// OBSOLETE 
// OBSOLETE /* Return the GDB type object for the "standard" data type
// OBSOLETE    of data in register N.  */
// OBSOLETE 
// OBSOLETE #define REGISTER_VIRTUAL_TYPE(N) h8500_register_virtual_type(N)
// OBSOLETE extern struct type *h8500_register_virtual_type (int regno);
// OBSOLETE 
// OBSOLETE /* Initializer for an array of names of registers.
// OBSOLETE    Entries beyond the first NUM_REGS are ignored.  */
// OBSOLETE 
// OBSOLETE #define REGISTER_NAMES \
// OBSOLETE   { "r0", "r1", "r2", "r3", "r4", "r5", "r6", "r7", \
// OBSOLETE    "pr0","pr1","pr2","pr3","pr4","pr5","pr6","pr7", \
// OBSOLETE     "cp", "dp", "ep", "tp", "sr", "pc"}
// OBSOLETE 
// OBSOLETE /* Register numbers of various important registers.  Note that some of
// OBSOLETE    these values are "real" register numbers, and correspond to the
// OBSOLETE    general registers of the machine, and some are "phony" register
// OBSOLETE    numbers which are too large to be actual register numbers as far as
// OBSOLETE    the user is concerned but do serve to get the desired values when
// OBSOLETE    passed to read_register.  */
// OBSOLETE 
// OBSOLETE #define R0_REGNUM	0
// OBSOLETE #define R1_REGNUM	1
// OBSOLETE #define R2_REGNUM	2
// OBSOLETE #define R3_REGNUM	3
// OBSOLETE #define R4_REGNUM	4
// OBSOLETE #define R5_REGNUM	5
// OBSOLETE #define R6_REGNUM	6
// OBSOLETE #define R7_REGNUM	7
// OBSOLETE 
// OBSOLETE #define PR0_REGNUM	8
// OBSOLETE #define PR1_REGNUM	9
// OBSOLETE #define PR2_REGNUM	10
// OBSOLETE #define PR3_REGNUM	11
// OBSOLETE #define PR4_REGNUM	12
// OBSOLETE #define PR5_REGNUM	13
// OBSOLETE #define PR6_REGNUM	14
// OBSOLETE #define PR7_REGNUM	15
// OBSOLETE 
// OBSOLETE #define SEG_C_REGNUM	16	/* Segment registers */
// OBSOLETE #define SEG_D_REGNUM	17
// OBSOLETE #define SEG_E_REGNUM	18
// OBSOLETE #define SEG_T_REGNUM	19
// OBSOLETE 
// OBSOLETE #define CCR_REGNUM      20	/* Contains processor status */
// OBSOLETE #define PC_REGNUM       21	/* Contains program counter */
// OBSOLETE 
// OBSOLETE #define NUM_REGS 	22
// OBSOLETE 
// OBSOLETE #define SP_REGNUM       PR7_REGNUM	/* Contains address of top of stack */
// OBSOLETE #define FP_REGNUM       PR6_REGNUM	/* Contains address of executing stack frame */
// OBSOLETE 
// OBSOLETE #define PTR_SIZE (minimum_mode ? 2 : 4)
// OBSOLETE #define PTR_MASK (minimum_mode ? 0x0000ffff : 0x00ffffff)
// OBSOLETE 
// OBSOLETE /* Store the address of the place in which to copy the structure the
// OBSOLETE    subroutine will return.  This is called from call_function. */
// OBSOLETE 
// OBSOLETE /*#define STORE_STRUCT_RETURN(ADDR, SP) \
// OBSOLETE    { write_register (0, (ADDR)); internal_error (__FILE__, __LINE__, "failed internal consistency check"); } */
// OBSOLETE 
// OBSOLETE /* Extract from an array REGBUF containing the (raw) register state
// OBSOLETE    a function return value of type TYPE, and copy that, in virtual format,
// OBSOLETE    into VALBUF.  */
// OBSOLETE 
// OBSOLETE #define DEPRECATED_EXTRACT_RETURN_VALUE(TYPE,REGBUF,VALBUF) \
// OBSOLETE   memcpy (VALBUF, (char *)(REGBUF), TYPE_LENGTH(TYPE))
// OBSOLETE 
// OBSOLETE /* Write into appropriate registers a function return value
// OBSOLETE    of type TYPE, given in virtual format.  */
// OBSOLETE 
// OBSOLETE #define DEPRECATED_STORE_RETURN_VALUE(TYPE,VALBUF) \
// OBSOLETE   deprecated_write_register_bytes (0, VALBUF, TYPE_LENGTH (TYPE))
// OBSOLETE 
// OBSOLETE /* Extract from an array REGBUF containing the (raw) register state
// OBSOLETE    the address in which a function should return its structure value,
// OBSOLETE    as a CORE_ADDR (or an expression that can be used as one).  */
// OBSOLETE 
// OBSOLETE #define DEPRECATED_EXTRACT_STRUCT_VALUE_ADDRESS(REGBUF) (*(CORE_ADDR *)(REGBUF))
// OBSOLETE 
// OBSOLETE 
// OBSOLETE /* Define other aspects of the stack frame.  */
// OBSOLETE 
// OBSOLETE /* A macro that tells us whether the function invocation represented
// OBSOLETE    by FI does not have a frame on the stack associated with it.  If it
// OBSOLETE    does not, FRAMELESS is set to 1, else 0.  */
// OBSOLETE 
// OBSOLETE #define FRAMELESS_FUNCTION_INVOCATION(FI) \
// OBSOLETE   (frameless_look_for_prologue (FI))
// OBSOLETE 
// OBSOLETE /* Any function with a frame looks like this
// OBSOLETE    SECOND ARG
// OBSOLETE    FIRST ARG
// OBSOLETE    RET PC
// OBSOLETE    SAVED R2
// OBSOLETE    SAVED R3
// OBSOLETE    SAVED FP   <-FP POINTS HERE
// OBSOLETE    LOCALS0
// OBSOLETE    LOCALS1    <-SP POINTS HERE
// OBSOLETE 
// OBSOLETE  */
// OBSOLETE 
// OBSOLETE #define INIT_EXTRA_FRAME_INFO(fromleaf, fci)  ;
// OBSOLETE /*       (fci)->frame |= read_register(SEG_T_REGNUM) << 16; */
// OBSOLETE 
// OBSOLETE #define FRAME_CHAIN(FRAME) h8500_frame_chain(FRAME)
// OBSOLETE struct frame_info;
// OBSOLETE extern CORE_ADDR h8500_frame_chain (struct frame_info *);
// OBSOLETE 
// OBSOLETE #define FRAME_SAVED_PC(FRAME) frame_saved_pc(FRAME)
// OBSOLETE extern CORE_ADDR frame_saved_pc (struct frame_info *frame);
// OBSOLETE 
// OBSOLETE #define FRAME_ARGS_ADDRESS(fi) (get_frame_base (fi))
// OBSOLETE 
// OBSOLETE #define FRAME_LOCALS_ADDRESS(fi) (get_frame_base (fi))
// OBSOLETE 
// OBSOLETE /* Set VAL to the number of args passed to frame described by FI.
// OBSOLETE    Can set VAL to -1, meaning no way to tell.  */
// OBSOLETE 
// OBSOLETE /* We can't tell how many args there are
// OBSOLETE    now that the C compiler delays popping them.  */
// OBSOLETE 
// OBSOLETE #define FRAME_NUM_ARGS(fi) (-1)
// OBSOLETE 
// OBSOLETE /* Return number of bytes at start of arglist that are not really args.  */
// OBSOLETE 
// OBSOLETE #define FRAME_ARGS_SKIP 0
// OBSOLETE 
// OBSOLETE /* Put here the code to store, into a struct frame_saved_regs,
// OBSOLETE    the addresses of the saved registers of frame described by FRAME_INFO.
// OBSOLETE    This includes special registers such as pc and fp saved in special
// OBSOLETE    ways in the stack frame.  sp is even more special:
// OBSOLETE    the address we return for it IS the sp for the next frame.  */
// OBSOLETE 
// OBSOLETE #define FRAME_FIND_SAVED_REGS(frame_info, frame_saved_regs)	    \
// OBSOLETE    frame_find_saved_regs(frame_info, &(frame_saved_regs))
// OBSOLETE struct frame_saved_regs;
// OBSOLETE extern void frame_find_saved_regs (struct frame_info *frame_info,
// OBSOLETE 				   struct frame_saved_regs *frame_saved_regs);
// OBSOLETE 
// OBSOLETE 
// OBSOLETE /* Discard from the stack the innermost frame, restoring all registers.  */
// OBSOLETE 
// OBSOLETE #define POP_FRAME { h8500_pop_frame (); }
// OBSOLETE extern void h8500_pop_frame (void);
// OBSOLETE 
// OBSOLETE #define SHORT_INT_MAX 32767
// OBSOLETE #define SHORT_INT_MIN -32768
// OBSOLETE 
// OBSOLETE typedef unsigned short INSN_WORD;
// OBSOLETE 
// OBSOLETE extern CORE_ADDR h8500_addr_bits_remove (CORE_ADDR);
// OBSOLETE #define ADDR_BITS_REMOVE(addr) h8500_addr_bits_remove (addr)
// OBSOLETE 
// OBSOLETE #define read_memory_short(x)  (read_memory_integer(x,2) & 0xffff)
// OBSOLETE 
// OBSOLETE extern void h8500_do_registers_info (int regnum, int all);
// OBSOLETE #define DEPRECATED_DO_REGISTERS_INFO(REGNUM,ALL) \
// OBSOLETE 	h8500_do_registers_info (REGNUM, ALL)
// OBSOLETE 
// OBSOLETE extern int minimum_mode;
// OBSOLETE 
// OBSOLETE #define CALL_DUMMY_LENGTH 10
// OBSOLETE 
// OBSOLETE /* Fake variables to make it easy to use 24 bit register pointers */
// OBSOLETE 
// OBSOLETE #define IS_TRAPPED_INTERNALVAR h8500_is_trapped_internalvar
// OBSOLETE extern int h8500_is_trapped_internalvar (char *name);
// OBSOLETE 
// OBSOLETE #define VALUE_OF_TRAPPED_INTERNALVAR h8500_value_of_trapped_internalvar
// OBSOLETE extern struct value *h8500_value_of_trapped_internalvar ( /* struct internalvar *var */ );
// OBSOLETE 
// OBSOLETE #define SET_TRAPPED_INTERNALVAR h8500_set_trapped_internalvar
// OBSOLETE extern void h8500_set_trapped_internalvar ( /* struct internalvar *var, value newval, int bitpos, int bitsize, int offset */ );
// OBSOLETE 
// OBSOLETE extern CORE_ADDR h8500_read_sp (void);
// OBSOLETE extern void h8500_write_sp (CORE_ADDR);
// OBSOLETE 
// OBSOLETE extern CORE_ADDR h8500_read_fp (void);
// OBSOLETE 
// OBSOLETE extern CORE_ADDR h8500_read_pc (ptid_t);
// OBSOLETE extern void h8500_write_pc (CORE_ADDR, ptid_t);
// OBSOLETE 
// OBSOLETE #define TARGET_READ_SP() h8500_read_sp()
// OBSOLETE #define TARGET_WRITE_SP(x) h8500_write_sp(x)
// OBSOLETE 
// OBSOLETE #define TARGET_READ_PC(pid) h8500_read_pc(pid)
// OBSOLETE #define TARGET_WRITE_PC(x,pid) h8500_write_pc(x,pid)
// OBSOLETE 
// OBSOLETE #define TARGET_READ_FP() h8500_read_fp()
@


1.22
log
@2003-02-04  Andrew Cagney  <ac131313@@redhat.com>

	* MAINTAINERS: Mark h8500 as obsolete.
	* configure.tgt (h8500-*-*): Mark h8500 code as obsolete.
	* findvar.c (value_from_register): Ditto.
	* h8500-tdep.c: Mark file as obsolete.
	* config/h8500/h8500.mt: Ditto.
	* config/h8500/tm-h8500.h: Ditto.
	* NEWS: Mention that h8500 is obsolete.
@
text
@@


1.22.34.1
log
@merge mainline changes into branch
@
text
@@


1.21
log
@2003-01-13  Andrew Cagney  <ac131313@@redhat.com>

	* ax-gdb.c, c-valprint.c, charset.c, corefile.c: Update copyright.
	* demangle.c, disasm.c, dwarf2cfi.c, dwarfread.c: Update copyright.
	* elfread.c, eval.c, expprint.c, expression.h: Update copyright.
	* f-typeprint.c, findvar.c, gcore.c, gdb_mbuild.sh: Update copyright.
	* gdbtypes.h, gnu-v2-abi.c, inferior.h, inftarg.c: Update copyright.
	* language.c, language.h, m32r-tdep.c: Update copyright.
	* mn10200-tdep.c, scm-lang.c, scm-lang.h: Update copyright.
	* somsolib.c, somsolib.h, symfile.c, symtab.h: Update copyright.
	* thread-db.c, typeprint.c, utils.c, valarith.c: Update copyright.
	* values.c, win32-nat.c, x86-64-linux-nat.c: Update copyright.
	* x86-64-linux-tdep.c, z8k-tdep.c: Update copyright.
	* cli/cli-decode.h, config/h8500/tm-h8500.h: Update copyright.

Index: mi/ChangeLog
2003-01-13  Andrew Cagney  <ac131313@@redhat.com>

	* mi-cmd-env.c: Update copyright.
@
text
@d1 295
a295 295
/* Parameters for execution on a H8/500 series machine.

   Copyright 1993, 1994, 1995, 1998, 1999, 2000, 2001, 2002, 2003 Free
   Software Foundation, Inc.

   This file is part of GDB.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place - Suite 330,
   Boston, MA 02111-1307, USA.  */

#include "regcache.h"

/* NOTE: cagney/2002-11-24: This is a guess.  */
#define DEPRECATED_USE_GENERIC_DUMMY_FRAMES 0
#define CALL_DUMMY_LOCATION ON_STACK
#define DEPRECATED_PC_IN_CALL_DUMMY(pc, sp, frame_address) deprecated_pc_in_call_dummy_on_stack (pc, sp, frame_address)

/* Contributed by Steve Chamberlain sac@@cygnus.com */

#define GDB_TARGET_IS_H8500

/* Define the sizes of integers and pointers.  */

#define TARGET_INT_BIT 16

#define TARGET_LONG_BIT 32

#define TARGET_PTR_BIT (minimum_mode ? 16 : 32)

/* Offset from address of function to start of its code.
   Zero on most machines.  */

#define FUNCTION_START_OFFSET 0

/* Advance PC across any function entry prologue instructions
   to reach some "real" code.  */

#define SKIP_PROLOGUE(ip)   (h8500_skip_prologue (ip))
extern CORE_ADDR h8500_skip_prologue (CORE_ADDR);

/* Immediately after a function call, return the saved pc.
   Can't always go through the frames for this because on some machines
   the new frame is not set up until the new function executes
   some instructions.  */

#define SAVED_PC_AFTER_CALL(frame) saved_pc_after_call()
extern CORE_ADDR saved_pc_after_call (void);

/* Stack grows downward.  */

#define INNER_THAN(lhs,rhs) ((lhs) < (rhs))

/* Illegal instruction - used by the simulator for breakpoint
   detection */

#define BREAKPOINT {0x0b}

/* If your kernel resets the pc after the trap happens you may need to
   define this before including this file.  */

#define DECR_PC_AFTER_BREAK 0

/* Say how long registers are.  */

#define REGISTER_TYPE  unsigned long

/* Say how much memory is needed to store a copy of the register set */

#define REGISTER_BYTES    (NUM_REGS * 4)

/* Index within `registers' of the first byte of the space for
   register N.  */

#define REGISTER_BYTE(N)  ((N)*4)

/* Number of bytes of storage in the actual machine representation
   for register N.  */

#define REGISTER_RAW_SIZE(N) h8500_register_size(N)
extern int h8500_register_size (int regno);

#define REGISTER_SIZE 4

#define REGISTER_VIRTUAL_SIZE(N) h8500_register_size(N)

/* Largest value REGISTER_RAW_SIZE can have.  */

#define MAX_REGISTER_RAW_SIZE 4

/* Largest value REGISTER_VIRTUAL_SIZE can have.  */

#define MAX_REGISTER_VIRTUAL_SIZE 4

/* Return the GDB type object for the "standard" data type
   of data in register N.  */

#define REGISTER_VIRTUAL_TYPE(N) h8500_register_virtual_type(N)
extern struct type *h8500_register_virtual_type (int regno);

/* Initializer for an array of names of registers.
   Entries beyond the first NUM_REGS are ignored.  */

#define REGISTER_NAMES \
  { "r0", "r1", "r2", "r3", "r4", "r5", "r6", "r7", \
   "pr0","pr1","pr2","pr3","pr4","pr5","pr6","pr7", \
    "cp", "dp", "ep", "tp", "sr", "pc"}

/* Register numbers of various important registers.  Note that some of
   these values are "real" register numbers, and correspond to the
   general registers of the machine, and some are "phony" register
   numbers which are too large to be actual register numbers as far as
   the user is concerned but do serve to get the desired values when
   passed to read_register.  */

#define R0_REGNUM	0
#define R1_REGNUM	1
#define R2_REGNUM	2
#define R3_REGNUM	3
#define R4_REGNUM	4
#define R5_REGNUM	5
#define R6_REGNUM	6
#define R7_REGNUM	7

#define PR0_REGNUM	8
#define PR1_REGNUM	9
#define PR2_REGNUM	10
#define PR3_REGNUM	11
#define PR4_REGNUM	12
#define PR5_REGNUM	13
#define PR6_REGNUM	14
#define PR7_REGNUM	15

#define SEG_C_REGNUM	16	/* Segment registers */
#define SEG_D_REGNUM	17
#define SEG_E_REGNUM	18
#define SEG_T_REGNUM	19

#define CCR_REGNUM      20	/* Contains processor status */
#define PC_REGNUM       21	/* Contains program counter */

#define NUM_REGS 	22

#define SP_REGNUM       PR7_REGNUM	/* Contains address of top of stack */
#define FP_REGNUM       PR6_REGNUM	/* Contains address of executing stack frame */

#define PTR_SIZE (minimum_mode ? 2 : 4)
#define PTR_MASK (minimum_mode ? 0x0000ffff : 0x00ffffff)

/* Store the address of the place in which to copy the structure the
   subroutine will return.  This is called from call_function. */

/*#define STORE_STRUCT_RETURN(ADDR, SP) \
   { write_register (0, (ADDR)); internal_error (__FILE__, __LINE__, "failed internal consistency check"); } */

/* Extract from an array REGBUF containing the (raw) register state
   a function return value of type TYPE, and copy that, in virtual format,
   into VALBUF.  */

#define DEPRECATED_EXTRACT_RETURN_VALUE(TYPE,REGBUF,VALBUF) \
  memcpy (VALBUF, (char *)(REGBUF), TYPE_LENGTH(TYPE))

/* Write into appropriate registers a function return value
   of type TYPE, given in virtual format.  */

#define DEPRECATED_STORE_RETURN_VALUE(TYPE,VALBUF) \
  deprecated_write_register_bytes (0, VALBUF, TYPE_LENGTH (TYPE))

/* Extract from an array REGBUF containing the (raw) register state
   the address in which a function should return its structure value,
   as a CORE_ADDR (or an expression that can be used as one).  */

#define DEPRECATED_EXTRACT_STRUCT_VALUE_ADDRESS(REGBUF) (*(CORE_ADDR *)(REGBUF))


/* Define other aspects of the stack frame.  */

/* A macro that tells us whether the function invocation represented
   by FI does not have a frame on the stack associated with it.  If it
   does not, FRAMELESS is set to 1, else 0.  */

#define FRAMELESS_FUNCTION_INVOCATION(FI) \
  (frameless_look_for_prologue (FI))

/* Any function with a frame looks like this
   SECOND ARG
   FIRST ARG
   RET PC
   SAVED R2
   SAVED R3
   SAVED FP   <-FP POINTS HERE
   LOCALS0
   LOCALS1    <-SP POINTS HERE

 */

#define INIT_EXTRA_FRAME_INFO(fromleaf, fci)  ;
/*       (fci)->frame |= read_register(SEG_T_REGNUM) << 16; */

#define FRAME_CHAIN(FRAME) h8500_frame_chain(FRAME)
struct frame_info;
extern CORE_ADDR h8500_frame_chain (struct frame_info *);

#define FRAME_SAVED_PC(FRAME) frame_saved_pc(FRAME)
extern CORE_ADDR frame_saved_pc (struct frame_info *frame);

#define FRAME_ARGS_ADDRESS(fi) (get_frame_base (fi))

#define FRAME_LOCALS_ADDRESS(fi) (get_frame_base (fi))

/* Set VAL to the number of args passed to frame described by FI.
   Can set VAL to -1, meaning no way to tell.  */

/* We can't tell how many args there are
   now that the C compiler delays popping them.  */

#define FRAME_NUM_ARGS(fi) (-1)

/* Return number of bytes at start of arglist that are not really args.  */

#define FRAME_ARGS_SKIP 0

/* Put here the code to store, into a struct frame_saved_regs,
   the addresses of the saved registers of frame described by FRAME_INFO.
   This includes special registers such as pc and fp saved in special
   ways in the stack frame.  sp is even more special:
   the address we return for it IS the sp for the next frame.  */

#define FRAME_FIND_SAVED_REGS(frame_info, frame_saved_regs)	    \
   frame_find_saved_regs(frame_info, &(frame_saved_regs))
struct frame_saved_regs;
extern void frame_find_saved_regs (struct frame_info *frame_info,
				   struct frame_saved_regs *frame_saved_regs);


/* Discard from the stack the innermost frame, restoring all registers.  */

#define POP_FRAME { h8500_pop_frame (); }
extern void h8500_pop_frame (void);

#define SHORT_INT_MAX 32767
#define SHORT_INT_MIN -32768

typedef unsigned short INSN_WORD;

extern CORE_ADDR h8500_addr_bits_remove (CORE_ADDR);
#define ADDR_BITS_REMOVE(addr) h8500_addr_bits_remove (addr)

#define read_memory_short(x)  (read_memory_integer(x,2) & 0xffff)

extern void h8500_do_registers_info (int regnum, int all);
#define DEPRECATED_DO_REGISTERS_INFO(REGNUM,ALL) \
	h8500_do_registers_info (REGNUM, ALL)

extern int minimum_mode;

#define CALL_DUMMY_LENGTH 10

/* Fake variables to make it easy to use 24 bit register pointers */

#define IS_TRAPPED_INTERNALVAR h8500_is_trapped_internalvar
extern int h8500_is_trapped_internalvar (char *name);

#define VALUE_OF_TRAPPED_INTERNALVAR h8500_value_of_trapped_internalvar
extern struct value *h8500_value_of_trapped_internalvar ( /* struct internalvar *var */ );

#define SET_TRAPPED_INTERNALVAR h8500_set_trapped_internalvar
extern void h8500_set_trapped_internalvar ( /* struct internalvar *var, value newval, int bitpos, int bitsize, int offset */ );

extern CORE_ADDR h8500_read_sp (void);
extern void h8500_write_sp (CORE_ADDR);

extern CORE_ADDR h8500_read_fp (void);

extern CORE_ADDR h8500_read_pc (ptid_t);
extern void h8500_write_pc (CORE_ADDR, ptid_t);

#define TARGET_READ_SP() h8500_read_sp()
#define TARGET_WRITE_SP(x) h8500_write_sp(x)

#define TARGET_READ_PC(pid) h8500_read_pc(pid)
#define TARGET_WRITE_PC(x,pid) h8500_write_pc(x,pid)

#define TARGET_READ_FP() h8500_read_fp()
@


1.20
log
@2003-01-07  Andrew Cagney  <cagney@@redhat.com>

	* alpha-tdep.c: Use get_frame_base.
	* arm-tdep.c, avr-tdep.c, cris-tdep.c, d10v-tdep.c: Ditto.
	* h8300-tdep.c, i386-tdep.c, ia64-tdep.c, m68hc11-tdep.c: Ditto.
	* m68k-tdep.c, mcore-tdep.c, mips-tdep.c, mn10200-tdep.c: Ditto.
	* mn10300-tdep.c, ns32k-tdep.c, s390-tdep.c, sh-tdep.c: Ditto.
	* sparc-tdep.c, v850-tdep.c, vax-tdep.c: Ditto.
	* x86-64-linux-tdep.c, xstormy16-tdep.c: Ditto.
	* config/h8500/tm-h8500.h, config/mn10200/tm-mn10200.h: Ditto.
	* config/sparc/tm-sparc.h: Ditto.
@
text
@d3 1
a3 1
   Copyright 1993, 1994, 1995, 1998, 1999, 2000, 2001, 2002 Free
@


1.19
log
@2002-12-01  Andrew Cagney  <ac131313@@redhat.com>

	* gdbarch.sh (DEPRECATED_PC_IN_CALL_DUMMY): Rename
	PC_IN_CALL_DUMMY.  Change to predicate.  Always allow call.
	* gdbarch.h, gdbarch.c: Re-generate.
	* config/sparc/tm-sparc.h, config/sparc/tm-sp64.h: Update.
	* config/mn10200/tm-mn10200.h, config/h8500/tm-h8500.h: Update.
	* config/pa/tm-hppa.h, frame.h: Update.
	* x86-64-tdep.c, vax-tdep.c, sparc-tdep.c: Update.
	* s390-tdep.c, ns32k-tdep.c, mn10300-tdep.c: Update.
	* m68k-tdep.c, i386-tdep.c, frv-tdep.c: Update.
	* cris-tdep.c, alpha-tdep.c: Update.
	* frame.c (set_unwind_by_pc, create_new_frame): Use either
	DEPRECATED_PC_IN_CALL_DUMMY or pc_in_dummy_frame.
	(get_prev_frame): Ditto.

Index: doc/ChangeLog
2002-12-01  Andrew Cagney  <ac131313@@redhat.com>

	* gdbint.texinfo (Target Architecture Definition): Delete
	PC_IN_CALL_DUMMY.
@
text
@d218 1
a218 1
#define FRAME_ARGS_ADDRESS(fi) ((fi)->frame)
d220 1
a220 1
#define FRAME_LOCALS_ADDRESS(fi) ((fi)->frame)
@


1.18
log
@2002-11-28  Andrew Cagney  <ac131313@@redhat.com>

	* gdbarch.sh (DEPRECATED_USE_GENERIC_DUMMY_FRAMES): Rename
	USE_GENERIC_DUMMY_FRAMES.
	* gdbarch.h, gdbarch.c: Regenerate.
	* valops.c, frame.c: Update.
	* config/z8k/tm-z8k.h, config/mn10200/tm-mn10200.h: Update.
	* config/m32r/tm-m32r.h, config/h8500/tm-h8500.h: Update.
	* config/pa/tm-hppa.h, blockframe.c: Update.
	* vax-tdep.c, sparc-tdep.c, ns32k-tdep.c: Ditto.
	* m68k-tdep.c, alpha-tdep.c: Ditto.

	* arm-tdep.c: Eliminate USE_GENERIC_DUMMY_FRAMES as always 1.
	* mips-tdep.c: Ditto.

Index: doc/ChangeLog
2002-11-28  Andrew Cagney  <ac131313@@redhat.com>

	* gdbint.texinfo (Host Definition): Delete documentation on
	USE_GENERIC_DUMMY_FRAMES.
@
text
@d28 1
a28 1
#define PC_IN_CALL_DUMMY(pc, sp, frame_address) deprecated_pc_in_call_dummy_on_stack (pc, sp, frame_address)
@


1.17
log
@2002-11-27  Andrew Cagney  <cagney@@redhat.com>

	* config/z8k/tm-z8k.h (PC_IN_CALL_DUMMY): Update definition to use
	deprecated pc_in_call_dummy function.
	* config/sparc/tm-sparc.h (PC_IN_CALL_DUMMY): Ditto.
	* config/sparc/tm-sp64.h (PC_IN_CALL_DUMMY): Ditto.
	* config/pa/tm-hppa.h (PC_IN_CALL_DUMMY): Ditto.
	* config/mn10200/tm-mn10200.h (PC_IN_CALL_DUMMY): Ditto.
	* config/h8500/tm-h8500.h (PC_IN_CALL_DUMMY): Ditto.
@
text
@d26 1
a26 1
#define USE_GENERIC_DUMMY_FRAMES 0
@


1.16
log
@2002-11-26  Andrew Cagney  <ac131313@@redhat.com>

	* config/h8500/tm-h8500.h (CALL_DUMMY_LOCATION): Define as ON_STACK.
	(USE_GENERIC_DUMMY_FRAMES): Define as zero.
	(PC_IN_CALL_DUMMY): Define as pc_in_call_dummy_on_stack.
	* config/mn10200/tm-mn10200.h (PC_IN_CALL_DUMMY): Define as
	pc_in_call_dummy_at_entry_point.
	* config/pa/tm-hppa.h (CALL_DUMMY_LOCATION): Define as ON_STACK.
	(USE_GENERIC_DUMMY_FRAMES): Define as zero.
	(PC_IN_CALL_DUMMY): Define as pc_in_call_dummy_on_stack.
	* config/pa/tm-hppa64.h (CALL_DUMMY_LOCATION): Delete undefine.
	* config/sparc/tm-sparc.h (PC_IN_CALL_DUMMY): Define as
	pc_in_call_dummy_on_stack.
	* config/sparc/tm-sp64.h (PC_IN_CALL_DUMMY): Redefine as
	pc_in_call_dummy_at_entry_point and pc_in_call_dummy_on_stack.
	* config/z8k/tm-z8k.h (CALL_DUMMY_LOCATION): Define as ON_STACK.
	(USE_GENERIC_DUMMY_FRAMES): Define as zero.
	(PC_IN_CALL_DUMMY): Defile as pc_in_call_dummy_on_stack.
@
text
@d28 1
a28 1
#define PC_IN_CALL_DUMMY(pc, sp, frame_address) pc_in_call_dummy_on_stack (pc, sp, frame_address)
@


1.15
log
@2002-11-13  Andrew Cagney  <cagney@@redhat.com>

	* regcache.h (deprecated_read_register_bytes): Rename
	read_register_bytes.
	(deprecated_write_register_bytes): Rename write_register_bytes.
	* alpha-tdep.c, arm-tdep.c, cris-tdep.c, d10v-tdep.c: Update.
	* dwarf2cfi.c, frv-tdep.c, hppa-tdep.c, ia64-tdep.c: Update.
	* m68k-tdep.c, mcore-tdep.c, mips-tdep.c, mn10300-tdep.c: Update.
	* ns32k-tdep.c, regcache.c, remote-sds.c, remote-vx.c: Update.
	* remote.c, rs6000-tdep.c, s390-tdep.c, sh-tdep.c: Update.
	* sparc-tdep.c, v850-tdep.c, vax-tdep.c, x86-64-tdep.c: Update.
	* xstormy16-tdep.c, z8k-tdep.c, config/nm-gnu.h: Update.
	* config/nm-m3.h, config/h8500/tm-h8500.h: Update.
	* config/i386/nm-ptx4.h, config/i386/nm-symmetry.h: Update.
	* config/m32r/tm-m32r.h, config/m68k/nm-sun3.h: Update.
	* config/m68k/tm-delta68.h, config/m68k/tm-linux.h: Update.
	* config/mn10200/tm-mn10200.h, config/pa/tm-hppa64.h: Update.
	* config/sparc/nm-nbsd.h, config/sparc/nm-sun4os4.h: Update.
	* config/sparc/nm-sun4sol2.h, config/sparc/tm-sparclet.h: Update.

2002-11-13  Andrew Cagney  <ac131313@@redhat.com>

	* mi-main.c (mi_cmd_data_write_register_values): Use
	deprecated_write_register_bytes instead of write_register_bytes.
@
text
@d25 5
@


1.14
log
@2002-10-31  Andrew Cagney  <cagney@@redhat.com>

	* h8500-tdep.c (h8500_print_registers_info): New static function,
	clone of infcmd.c's default_print_registers_info.
	(h8500_do_registers_info): New funtion.
	(h8500_print_register_hook): Rename print_register_hook, make
	static.

	* config/h8500/tm-h8500.h: Update copyright.
	(DEPRECATED_DO_REGISTERS_INFO): Define.
	(h8500_do_registers_info: Declare.
	(PRINT_REGISTER_HOOK): Delete macro.
	(print_register_hook): Delete function.
@
text
@d173 1
a173 1
  write_register_bytes (0, VALBUF, TYPE_LENGTH (TYPE))
@


1.13
log
@Index: ChangeLog
===================================================================
RCS file: /cvs/src/src/gdb/ChangeLog,v
retrieving revision 1.3144
diff -u -r1.3144 ChangeLog
--- ChangeLog	23 Aug 2002 23:05:38 -0000	1.3144
+++ ChangeLog	23 Aug 2002 23:14:45 -0000
@@@@ -1,3 +1,53 @@@@
2002-08-23  Andrew Cagney  <cagney@@redhat.com>

	* gdbarch.sh (STORE_RETURN_VALUE): Add regcache parameter.
	(DEPRECATED_STORE_RETURN_VALUE): New method.
	(EXTRACT_RETURN_VALUE): Make buffer parameter a void pointer.
	* gdbarch.h, gdbarch.c: Re-generate.

	* values.c (set_return_value): Pass current_regcache to
	STORE_RETURN_VALUE.
	* arch-utils.h (legacy_store_return_value): Declare.
	* arch-utils.c (legacy_store_return_value): New function.
	(legacy_extract_return_value): Update parameters.

	* config/pa/tm-hppa.h (DEPRECATED_STORE_RETURN_VALUE): Rename
	STORE_RETURN_VALUE.
	* config/pa/tm-hppa64.h (DEPRECATED_STORE_RETURN_VALUE): Ditto.
	* config/sparc/tm-sparc.h (DEPRECATED_STORE_RETURN_VALUE): Ditto.
	* config/z8k/tm-z8k.h (DEPRECATED_STORE_RETURN_VALUE): Ditto.
	* config/sparc/tm-sparclet.h (DEPRECATED_STORE_RETURN_VALUE): Ditto.
	* config/mn10200/tm-mn10200.h (DEPRECATED_STORE_RETURN_VALUE): Ditto.
	* config/m68k/tm-linux.h (DEPRECATED_STORE_RETURN_VALUE): Ditto.
	* config/m68k/tm-delta68.h (DEPRECATED_STORE_RETURN_VALUE): Ditto.
	* config/m32r/tm-m32r.h (DEPRECATED_STORE_RETURN_VALUE): Ditto.
	* config/h8500/tm-h8500.h (DEPRECATED_STORE_RETURN_VALUE): Ditto.
	* config/h8300/tm-h8300.h (DEPRECATED_STORE_RETURN_VALUE): Ditto.

	* m68hc11-tdep.c (m68hc11_gdbarch_init): Update.
	* i386-tdep.c (i386_extract_return_value): Update.
	* arch-utils.c (legacy_extract_return_value): Update.
	* frv-tdep.c (frv_gdbarch_init): Update.
	* cris-tdep.c (cris_gdbarch_init): Update.
	* d10v-tdep.c (d10v_gdbarch_init): Update.
	* rs6000-tdep.c (rs6000_gdbarch_init): Update.
	* m68k-tdep.c (m68k_gdbarch_init): Update.
	* mcore-tdep.c (mcore_gdbarch_init): Update.
	* mn10300-tdep.c (mn10300_gdbarch_init): Update.
	* s390-tdep.c (s390_gdbarch_init): Update.
	* sparc-tdep.c (sparc_gdbarch_init): Update.
	* sh-tdep.c (sh_gdbarch_init): Update.
	* x86-64-tdep.c (x86_64_gdbarch_init): Update.
	* v850-tdep.c (v850_gdbarch_init): Update.
	* avr-tdep.c (avr_gdbarch_init): Update.
	* ia64-tdep.c (ia64_gdbarch_init): Update.
	* ns32k-tdep.c (ns32k_gdbarch_init): Update.
	* vax-tdep.c (vax_gdbarch_init): Update.
	* alpha-tdep.c (alpha_gdbarch_init): Update.
	* arm-tdep.c (arm_gdbarch_init): Update.
	* mips-tdep.c (mips_gdbarch_init): Update.
	* i386-tdep.c (i386_gdbarch_init): Update.

Index: doc/ChangeLog
2002-08-21  Andrew Cagney  <cagney@@redhat.com>

	* gdbint.texinfo (Target Architecture Definition): Update
	STORE_RETURN_VALUE, mention regcache.
@
text
@d2 3
a4 2
   Copyright 1993, 1994, 1995, 1998, 1999, 2000, 2001
   Free Software Foundation, Inc.
d257 3
a259 2
#define	PRINT_REGISTER_HOOK(regno) print_register_hook(regno)
extern void print_register_hook (int);
@


1.13.10.1
log
@Merge drow-cplus-branch to:
  cvs rtag -D 2003-12-14 00:00:00 UTC drow-cplus-merge-20031214 gdb+dejagnu
@
text
@@


1.13.8.1
log
@2002-11-15  David Carlton  <carlton@@math.stanford.edu>

	* Merge from mainline; tag is carlton_dictionary-20021115-merge.
@
text
@d2 2
a3 3

   Copyright 1993, 1994, 1995, 1998, 1999, 2000, 2001, 2002 Free
   Software Foundation, Inc.
d172 1
a172 1
  deprecated_write_register_bytes (0, VALBUF, TYPE_LENGTH (TYPE))
d256 2
a257 3
extern void h8500_do_registers_info (int regnum, int all);
#define DEPRECATED_DO_REGISTERS_INFO(REGNUM,ALL) \
	h8500_do_registers_info (REGNUM, ALL)
@


1.13.8.2
log
@2002-12-23  David Carlton  <carlton@@math.stanford.edu>

	* Merge from mainline; tag is carlton_dictionary-20021223-merge.
@
text
@a24 5
/* NOTE: cagney/2002-11-24: This is a guess.  */
#define DEPRECATED_USE_GENERIC_DUMMY_FRAMES 0
#define CALL_DUMMY_LOCATION ON_STACK
#define DEPRECATED_PC_IN_CALL_DUMMY(pc, sp, frame_address) deprecated_pc_in_call_dummy_on_stack (pc, sp, frame_address)

@


1.13.8.3
log
@2003-02-07  David Carlton  <carlton@@math.stanford.edu>

	* Merge with mainline; tag is carlton_dictionary-20030207-merge.
@
text
@d1 295
a295 295
// OBSOLETE /* Parameters for execution on a H8/500 series machine.
// OBSOLETE 
// OBSOLETE    Copyright 1993, 1994, 1995, 1998, 1999, 2000, 2001, 2002, 2003 Free
// OBSOLETE    Software Foundation, Inc.
// OBSOLETE 
// OBSOLETE    This file is part of GDB.
// OBSOLETE 
// OBSOLETE    This program is free software; you can redistribute it and/or modify
// OBSOLETE    it under the terms of the GNU General Public License as published by
// OBSOLETE    the Free Software Foundation; either version 2 of the License, or
// OBSOLETE    (at your option) any later version.
// OBSOLETE 
// OBSOLETE    This program is distributed in the hope that it will be useful,
// OBSOLETE    but WITHOUT ANY WARRANTY; without even the implied warranty of
// OBSOLETE    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// OBSOLETE    GNU General Public License for more details.
// OBSOLETE 
// OBSOLETE    You should have received a copy of the GNU General Public License
// OBSOLETE    along with this program; if not, write to the Free Software
// OBSOLETE    Foundation, Inc., 59 Temple Place - Suite 330,
// OBSOLETE    Boston, MA 02111-1307, USA.  */
// OBSOLETE 
// OBSOLETE #include "regcache.h"
// OBSOLETE 
// OBSOLETE /* NOTE: cagney/2002-11-24: This is a guess.  */
// OBSOLETE #define DEPRECATED_USE_GENERIC_DUMMY_FRAMES 0
// OBSOLETE #define CALL_DUMMY_LOCATION ON_STACK
// OBSOLETE #define DEPRECATED_PC_IN_CALL_DUMMY(pc, sp, frame_address) deprecated_pc_in_call_dummy_on_stack (pc, sp, frame_address)
// OBSOLETE 
// OBSOLETE /* Contributed by Steve Chamberlain sac@@cygnus.com */
// OBSOLETE 
// OBSOLETE #define GDB_TARGET_IS_H8500
// OBSOLETE 
// OBSOLETE /* Define the sizes of integers and pointers.  */
// OBSOLETE 
// OBSOLETE #define TARGET_INT_BIT 16
// OBSOLETE 
// OBSOLETE #define TARGET_LONG_BIT 32
// OBSOLETE 
// OBSOLETE #define TARGET_PTR_BIT (minimum_mode ? 16 : 32)
// OBSOLETE 
// OBSOLETE /* Offset from address of function to start of its code.
// OBSOLETE    Zero on most machines.  */
// OBSOLETE 
// OBSOLETE #define FUNCTION_START_OFFSET 0
// OBSOLETE 
// OBSOLETE /* Advance PC across any function entry prologue instructions
// OBSOLETE    to reach some "real" code.  */
// OBSOLETE 
// OBSOLETE #define SKIP_PROLOGUE(ip)   (h8500_skip_prologue (ip))
// OBSOLETE extern CORE_ADDR h8500_skip_prologue (CORE_ADDR);
// OBSOLETE 
// OBSOLETE /* Immediately after a function call, return the saved pc.
// OBSOLETE    Can't always go through the frames for this because on some machines
// OBSOLETE    the new frame is not set up until the new function executes
// OBSOLETE    some instructions.  */
// OBSOLETE 
// OBSOLETE #define SAVED_PC_AFTER_CALL(frame) saved_pc_after_call()
// OBSOLETE extern CORE_ADDR saved_pc_after_call (void);
// OBSOLETE 
// OBSOLETE /* Stack grows downward.  */
// OBSOLETE 
// OBSOLETE #define INNER_THAN(lhs,rhs) ((lhs) < (rhs))
// OBSOLETE 
// OBSOLETE /* Illegal instruction - used by the simulator for breakpoint
// OBSOLETE    detection */
// OBSOLETE 
// OBSOLETE #define BREAKPOINT {0x0b}
// OBSOLETE 
// OBSOLETE /* If your kernel resets the pc after the trap happens you may need to
// OBSOLETE    define this before including this file.  */
// OBSOLETE 
// OBSOLETE #define DECR_PC_AFTER_BREAK 0
// OBSOLETE 
// OBSOLETE /* Say how long registers are.  */
// OBSOLETE 
// OBSOLETE #define REGISTER_TYPE  unsigned long
// OBSOLETE 
// OBSOLETE /* Say how much memory is needed to store a copy of the register set */
// OBSOLETE 
// OBSOLETE #define REGISTER_BYTES    (NUM_REGS * 4)
// OBSOLETE 
// OBSOLETE /* Index within `registers' of the first byte of the space for
// OBSOLETE    register N.  */
// OBSOLETE 
// OBSOLETE #define REGISTER_BYTE(N)  ((N)*4)
// OBSOLETE 
// OBSOLETE /* Number of bytes of storage in the actual machine representation
// OBSOLETE    for register N.  */
// OBSOLETE 
// OBSOLETE #define REGISTER_RAW_SIZE(N) h8500_register_size(N)
// OBSOLETE extern int h8500_register_size (int regno);
// OBSOLETE 
// OBSOLETE #define REGISTER_SIZE 4
// OBSOLETE 
// OBSOLETE #define REGISTER_VIRTUAL_SIZE(N) h8500_register_size(N)
// OBSOLETE 
// OBSOLETE /* Largest value REGISTER_RAW_SIZE can have.  */
// OBSOLETE 
// OBSOLETE #define MAX_REGISTER_RAW_SIZE 4
// OBSOLETE 
// OBSOLETE /* Largest value REGISTER_VIRTUAL_SIZE can have.  */
// OBSOLETE 
// OBSOLETE #define MAX_REGISTER_VIRTUAL_SIZE 4
// OBSOLETE 
// OBSOLETE /* Return the GDB type object for the "standard" data type
// OBSOLETE    of data in register N.  */
// OBSOLETE 
// OBSOLETE #define REGISTER_VIRTUAL_TYPE(N) h8500_register_virtual_type(N)
// OBSOLETE extern struct type *h8500_register_virtual_type (int regno);
// OBSOLETE 
// OBSOLETE /* Initializer for an array of names of registers.
// OBSOLETE    Entries beyond the first NUM_REGS are ignored.  */
// OBSOLETE 
// OBSOLETE #define REGISTER_NAMES \
// OBSOLETE   { "r0", "r1", "r2", "r3", "r4", "r5", "r6", "r7", \
// OBSOLETE    "pr0","pr1","pr2","pr3","pr4","pr5","pr6","pr7", \
// OBSOLETE     "cp", "dp", "ep", "tp", "sr", "pc"}
// OBSOLETE 
// OBSOLETE /* Register numbers of various important registers.  Note that some of
// OBSOLETE    these values are "real" register numbers, and correspond to the
// OBSOLETE    general registers of the machine, and some are "phony" register
// OBSOLETE    numbers which are too large to be actual register numbers as far as
// OBSOLETE    the user is concerned but do serve to get the desired values when
// OBSOLETE    passed to read_register.  */
// OBSOLETE 
// OBSOLETE #define R0_REGNUM	0
// OBSOLETE #define R1_REGNUM	1
// OBSOLETE #define R2_REGNUM	2
// OBSOLETE #define R3_REGNUM	3
// OBSOLETE #define R4_REGNUM	4
// OBSOLETE #define R5_REGNUM	5
// OBSOLETE #define R6_REGNUM	6
// OBSOLETE #define R7_REGNUM	7
// OBSOLETE 
// OBSOLETE #define PR0_REGNUM	8
// OBSOLETE #define PR1_REGNUM	9
// OBSOLETE #define PR2_REGNUM	10
// OBSOLETE #define PR3_REGNUM	11
// OBSOLETE #define PR4_REGNUM	12
// OBSOLETE #define PR5_REGNUM	13
// OBSOLETE #define PR6_REGNUM	14
// OBSOLETE #define PR7_REGNUM	15
// OBSOLETE 
// OBSOLETE #define SEG_C_REGNUM	16	/* Segment registers */
// OBSOLETE #define SEG_D_REGNUM	17
// OBSOLETE #define SEG_E_REGNUM	18
// OBSOLETE #define SEG_T_REGNUM	19
// OBSOLETE 
// OBSOLETE #define CCR_REGNUM      20	/* Contains processor status */
// OBSOLETE #define PC_REGNUM       21	/* Contains program counter */
// OBSOLETE 
// OBSOLETE #define NUM_REGS 	22
// OBSOLETE 
// OBSOLETE #define SP_REGNUM       PR7_REGNUM	/* Contains address of top of stack */
// OBSOLETE #define FP_REGNUM       PR6_REGNUM	/* Contains address of executing stack frame */
// OBSOLETE 
// OBSOLETE #define PTR_SIZE (minimum_mode ? 2 : 4)
// OBSOLETE #define PTR_MASK (minimum_mode ? 0x0000ffff : 0x00ffffff)
// OBSOLETE 
// OBSOLETE /* Store the address of the place in which to copy the structure the
// OBSOLETE    subroutine will return.  This is called from call_function. */
// OBSOLETE 
// OBSOLETE /*#define STORE_STRUCT_RETURN(ADDR, SP) \
// OBSOLETE    { write_register (0, (ADDR)); internal_error (__FILE__, __LINE__, "failed internal consistency check"); } */
// OBSOLETE 
// OBSOLETE /* Extract from an array REGBUF containing the (raw) register state
// OBSOLETE    a function return value of type TYPE, and copy that, in virtual format,
// OBSOLETE    into VALBUF.  */
// OBSOLETE 
// OBSOLETE #define DEPRECATED_EXTRACT_RETURN_VALUE(TYPE,REGBUF,VALBUF) \
// OBSOLETE   memcpy (VALBUF, (char *)(REGBUF), TYPE_LENGTH(TYPE))
// OBSOLETE 
// OBSOLETE /* Write into appropriate registers a function return value
// OBSOLETE    of type TYPE, given in virtual format.  */
// OBSOLETE 
// OBSOLETE #define DEPRECATED_STORE_RETURN_VALUE(TYPE,VALBUF) \
// OBSOLETE   deprecated_write_register_bytes (0, VALBUF, TYPE_LENGTH (TYPE))
// OBSOLETE 
// OBSOLETE /* Extract from an array REGBUF containing the (raw) register state
// OBSOLETE    the address in which a function should return its structure value,
// OBSOLETE    as a CORE_ADDR (or an expression that can be used as one).  */
// OBSOLETE 
// OBSOLETE #define DEPRECATED_EXTRACT_STRUCT_VALUE_ADDRESS(REGBUF) (*(CORE_ADDR *)(REGBUF))
// OBSOLETE 
// OBSOLETE 
// OBSOLETE /* Define other aspects of the stack frame.  */
// OBSOLETE 
// OBSOLETE /* A macro that tells us whether the function invocation represented
// OBSOLETE    by FI does not have a frame on the stack associated with it.  If it
// OBSOLETE    does not, FRAMELESS is set to 1, else 0.  */
// OBSOLETE 
// OBSOLETE #define FRAMELESS_FUNCTION_INVOCATION(FI) \
// OBSOLETE   (frameless_look_for_prologue (FI))
// OBSOLETE 
// OBSOLETE /* Any function with a frame looks like this
// OBSOLETE    SECOND ARG
// OBSOLETE    FIRST ARG
// OBSOLETE    RET PC
// OBSOLETE    SAVED R2
// OBSOLETE    SAVED R3
// OBSOLETE    SAVED FP   <-FP POINTS HERE
// OBSOLETE    LOCALS0
// OBSOLETE    LOCALS1    <-SP POINTS HERE
// OBSOLETE 
// OBSOLETE  */
// OBSOLETE 
// OBSOLETE #define INIT_EXTRA_FRAME_INFO(fromleaf, fci)  ;
// OBSOLETE /*       (fci)->frame |= read_register(SEG_T_REGNUM) << 16; */
// OBSOLETE 
// OBSOLETE #define FRAME_CHAIN(FRAME) h8500_frame_chain(FRAME)
// OBSOLETE struct frame_info;
// OBSOLETE extern CORE_ADDR h8500_frame_chain (struct frame_info *);
// OBSOLETE 
// OBSOLETE #define FRAME_SAVED_PC(FRAME) frame_saved_pc(FRAME)
// OBSOLETE extern CORE_ADDR frame_saved_pc (struct frame_info *frame);
// OBSOLETE 
// OBSOLETE #define FRAME_ARGS_ADDRESS(fi) (get_frame_base (fi))
// OBSOLETE 
// OBSOLETE #define FRAME_LOCALS_ADDRESS(fi) (get_frame_base (fi))
// OBSOLETE 
// OBSOLETE /* Set VAL to the number of args passed to frame described by FI.
// OBSOLETE    Can set VAL to -1, meaning no way to tell.  */
// OBSOLETE 
// OBSOLETE /* We can't tell how many args there are
// OBSOLETE    now that the C compiler delays popping them.  */
// OBSOLETE 
// OBSOLETE #define FRAME_NUM_ARGS(fi) (-1)
// OBSOLETE 
// OBSOLETE /* Return number of bytes at start of arglist that are not really args.  */
// OBSOLETE 
// OBSOLETE #define FRAME_ARGS_SKIP 0
// OBSOLETE 
// OBSOLETE /* Put here the code to store, into a struct frame_saved_regs,
// OBSOLETE    the addresses of the saved registers of frame described by FRAME_INFO.
// OBSOLETE    This includes special registers such as pc and fp saved in special
// OBSOLETE    ways in the stack frame.  sp is even more special:
// OBSOLETE    the address we return for it IS the sp for the next frame.  */
// OBSOLETE 
// OBSOLETE #define FRAME_FIND_SAVED_REGS(frame_info, frame_saved_regs)	    \
// OBSOLETE    frame_find_saved_regs(frame_info, &(frame_saved_regs))
// OBSOLETE struct frame_saved_regs;
// OBSOLETE extern void frame_find_saved_regs (struct frame_info *frame_info,
// OBSOLETE 				   struct frame_saved_regs *frame_saved_regs);
// OBSOLETE 
// OBSOLETE 
// OBSOLETE /* Discard from the stack the innermost frame, restoring all registers.  */
// OBSOLETE 
// OBSOLETE #define POP_FRAME { h8500_pop_frame (); }
// OBSOLETE extern void h8500_pop_frame (void);
// OBSOLETE 
// OBSOLETE #define SHORT_INT_MAX 32767
// OBSOLETE #define SHORT_INT_MIN -32768
// OBSOLETE 
// OBSOLETE typedef unsigned short INSN_WORD;
// OBSOLETE 
// OBSOLETE extern CORE_ADDR h8500_addr_bits_remove (CORE_ADDR);
// OBSOLETE #define ADDR_BITS_REMOVE(addr) h8500_addr_bits_remove (addr)
// OBSOLETE 
// OBSOLETE #define read_memory_short(x)  (read_memory_integer(x,2) & 0xffff)
// OBSOLETE 
// OBSOLETE extern void h8500_do_registers_info (int regnum, int all);
// OBSOLETE #define DEPRECATED_DO_REGISTERS_INFO(REGNUM,ALL) \
// OBSOLETE 	h8500_do_registers_info (REGNUM, ALL)
// OBSOLETE 
// OBSOLETE extern int minimum_mode;
// OBSOLETE 
// OBSOLETE #define CALL_DUMMY_LENGTH 10
// OBSOLETE 
// OBSOLETE /* Fake variables to make it easy to use 24 bit register pointers */
// OBSOLETE 
// OBSOLETE #define IS_TRAPPED_INTERNALVAR h8500_is_trapped_internalvar
// OBSOLETE extern int h8500_is_trapped_internalvar (char *name);
// OBSOLETE 
// OBSOLETE #define VALUE_OF_TRAPPED_INTERNALVAR h8500_value_of_trapped_internalvar
// OBSOLETE extern struct value *h8500_value_of_trapped_internalvar ( /* struct internalvar *var */ );
// OBSOLETE 
// OBSOLETE #define SET_TRAPPED_INTERNALVAR h8500_set_trapped_internalvar
// OBSOLETE extern void h8500_set_trapped_internalvar ( /* struct internalvar *var, value newval, int bitpos, int bitsize, int offset */ );
// OBSOLETE 
// OBSOLETE extern CORE_ADDR h8500_read_sp (void);
// OBSOLETE extern void h8500_write_sp (CORE_ADDR);
// OBSOLETE 
// OBSOLETE extern CORE_ADDR h8500_read_fp (void);
// OBSOLETE 
// OBSOLETE extern CORE_ADDR h8500_read_pc (ptid_t);
// OBSOLETE extern void h8500_write_pc (CORE_ADDR, ptid_t);
// OBSOLETE 
// OBSOLETE #define TARGET_READ_SP() h8500_read_sp()
// OBSOLETE #define TARGET_WRITE_SP(x) h8500_write_sp(x)
// OBSOLETE 
// OBSOLETE #define TARGET_READ_PC(pid) h8500_read_pc(pid)
// OBSOLETE #define TARGET_WRITE_PC(x,pid) h8500_write_pc(x,pid)
// OBSOLETE 
// OBSOLETE #define TARGET_READ_FP() h8500_read_fp()
@


1.13.8.4
log
@2003-11-11  David Carlton  <carlton@@kealia.com>

	* Merge with mainline; tag is carlton-dictionary-20031111-merge.
@
text
@@


1.12
log
@+	* gdbarch.sh (DEPRECATED_EXTRACT_RETURN_VALUE): Rename
+	EXTRACT_RETURN_VALUE.
+	(DEPRECATED_EXTRACT_STRUCT_VALUE_ADDRESS): Rename
+	EXTRACT_STRUCT_VALUE_ADDRESS.
+	* gdbarch.h, gdbarch.c: Regenerate.
+
+	* values.c (value_being_returned): Handle
+	DEPRECATED_EXTRACT_STRUCT_VALUE_ADDRESS.
+	(EXTRACT_RETURN_VALUE): Define as DEPRECATED_EXTRACT_RETURN_VALUE.
+
+	* arm-linux-tdep.c (arm_linux_init_abi): Update.
+	* arm-tdep.c (arm_gdbarch_init): Update.
+	* avr-tdep.c (avr_gdbarch_init): Update.
+	* cris-tdep.c (cris_gdbarch_init): Update.
+	* d10v-tdep.c (d10v_gdbarch_init): Update.
+	* ia64-tdep.c (ia64_gdbarch_init): Update.
+	* m68hc11-tdep.c (m68hc11_gdbarch_init): Update.
+	* rs6000-tdep.c (rs6000_gdbarch_init): Update.
+	* s390-tdep.c (s390_gdbarch_init): Update.
+	* sh-tdep.c (sh_gdbarch_init): Update.
+	* s390-tdep.c (s390_gdbarch_init): Update.
+	* sparc-tdep.c (sparc_gdbarch_init): Update.
+	* ns32k-tdep.c (ns32k_gdbarch_init): Update.
+	* v850-tdep.c (v850_gdbarch_init): Update.
+	* vax-tdep.c (vax_gdbarch_init): Update.
+	* x86-64-tdep.c (x86_64_gdbarch_init): Update.
+	* xstormy16-tdep.c (xstormy16_gdbarch_init): Update.
+
+	* config/arc/tm-arc.h: Update.
+	* config/d30v/tm-d30v.h: Update.
+	* config/fr30/tm-fr30.h: Update.
+	* config/h8300/tm-h8300.h: Update.
* config/h8500/tm-h8500.h: Update.
* config/i386/tm-i386.h: Update.
* config/i386/tm-ptx.h: Update.
* config/i386/tm-symmetry.h: Update.
* config/i960/tm-i960.h: Update.
* config/m32r/tm-m32r.h: Update.
* config/m68k/tm-delta68.h: Update.
* config/m68k/tm-linux.h: Update.
* config/m68k/tm-m68k.h: Update.
* config/m88k/tm-m88k.h: Update.
* config/mcore/tm-mcore.h: Update.
* config/mips/tm-mips.h: Update.
* config/mn10200/tm-mn10200.h: Update.
* config/pa/tm-hppa.h: Update.
* config/pa/tm-hppa64.h: Update.
* config/sparc/tm-sp64.h: Update.
* config/sparc/tm-sparc.h: Update.
* config/sparc/tm-sparclet.h: Update.
* config/z8k/tm-z8k.h: Update.
@
text
@d171 1
a171 1
#define STORE_RETURN_VALUE(TYPE,VALBUF) \
@


1.11
log
@* h8500-tdep.c (h8500_write_fp): Delete function.
* dwarf2cfi.c (cfi_write_fp): Document as not used.
* mips-tdep.c (mips_gdbarch_init): Do not set write_fp.
* ia64-tdep.c (ia64_gdbarch_init): Do not set write_fp.
* m68hc11-tdep.c (m68hc11_gdbarch_init): Do not set write_fp.
* rs6000-tdep.c (rs6000_gdbarch_init): Do not set write_fp.
* s390-tdep.c (s390_gdbarch_init): Do not set write_fp.
(s390_write_fp):
* sh-tdep.c (sh_gdbarch_init): Do not set write_fp.
* x86-64-tdep.c (i386_gdbarch_init): Do not set write_fp.
* d10v-tdep.c (d10v_gdbarch_init): Do not set write_fp.
(d10v_write_fp): Delete function.
* inferior.h (write_fp, generic_target_write_fp): Delete
declarations.
* regcache.c (generic_target_write_fp): Delete function.
(write_fp): Delete function.
* gdbarch.sh (TARGET_WRITE_FP): Delete.
* gdbarch.h, gdbarch.c: Regenerate.
* config/v850/tm-v850.h (TARGET_WRITE_FP): Delete macro.
* config/sparc/tm-sp64.h (TARGET_WRITE_FP): Delete macro.
(sparc64_write_fp): Delete declaration.
* config/h8500/tm-h8500.h (TARGET_WRITE_FP): Delete macro.
(h8500_write_fp): Delete declaration.
@
text
@d165 1
a165 1
#define EXTRACT_RETURN_VALUE(TYPE,REGBUF,VALBUF) \
d178 1
a178 1
#define EXTRACT_STRUCT_VALUE_ADDRESS(REGBUF) (*(CORE_ADDR *)(REGBUF))
@


1.11.6.1
log
@Merge with mainline, kseitz_interps-20020619-merge.
@
text
@d165 1
a165 1
#define DEPRECATED_EXTRACT_RETURN_VALUE(TYPE,REGBUF,VALBUF) \
d178 1
a178 1
#define DEPRECATED_EXTRACT_STRUCT_VALUE_ADDRESS(REGBUF) (*(CORE_ADDR *)(REGBUF))
@


1.11.6.2
log
@Merge with kseitz_interps-20020829-merge tag from trunk.
@
text
@d171 1
a171 1
#define DEPRECATED_STORE_RETURN_VALUE(TYPE,VALBUF) \
@


1.11.6.3
log
@merge from mainline
@
text
@d2 2
a3 3

   Copyright 1993, 1994, 1995, 1998, 1999, 2000, 2001, 2002 Free
   Software Foundation, Inc.
d256 2
a257 3
extern void h8500_do_registers_info (int regnum, int all);
#define DEPRECATED_DO_REGISTERS_INFO(REGNUM,ALL) \
	h8500_do_registers_info (REGNUM, ALL)
@


1.11.4.1
log
@merge from trunk
@
text
@d165 1
a165 1
#define DEPRECATED_EXTRACT_RETURN_VALUE(TYPE,REGBUF,VALBUF) \
d178 1
a178 1
#define DEPRECATED_EXTRACT_STRUCT_VALUE_ADDRESS(REGBUF) (*(CORE_ADDR *)(REGBUF))
@


1.10
log
@Eliminate TARGET_BYTE_ORDER.
@
text
@a277 1
extern void h8500_write_fp (CORE_ADDR);
a288 1
#define TARGET_WRITE_FP(x) h8500_write_fp(x)
@


1.9
log
@Eliminate IEEE_FLOAT.
@
text
@a27 4
/* Define the bit, byte, and word ordering of the machine.  */

#define TARGET_BYTE_ORDER BFD_ENDIAN_BIG

@


1.8
log
@s/BIG_ENDIAN/BFD_ENDIAN_BIG/
@
text
@a27 2
#define IEEE_FLOAT (1)

@


1.7
log
@Phase 1 of the ptid_t changes.
@
text
@d32 1
a32 1
#define TARGET_BYTE_ORDER BIG_ENDIAN
@


1.6
log
@Include regcache.h
@
text
@d286 2
a287 2
extern CORE_ADDR h8500_read_pc (int);
extern void h8500_write_pc (CORE_ADDR, int);
@


1.5
log
@Update/correct copyright notices.
@
text
@d22 2
@


1.4
log
@Replace calls to abort() with calls to internal_error().
@
text
@d2 2
a3 1
   Copyright (C) 1993, 1995 Free Software Foundation, Inc.
@


1.3
log
@PARAMS removal.
@
text
@d162 1
a162 1
   { write_register (0, (ADDR)); abort(); } */
@


1.2
log
@Bring IEEE_FLOAT under gdbarch's control.
* gdbarch.sh (IEEE_FLOAT): New entry.
* gdbarch.c, gdbarch.h: Regenerated.
* valprint.c (IEEE_FLOAT): Provide a default #definition for this.
(print_floating): Use IEEE_FLOAT as if it were an expression; use
the code specific to IEEE-format numbers whenever the value of
IEEE_FLOAT is non-zero.
* config/a29k/tm-a29k.h, config/alpha/tm-alpha.h,
config/arc/tm-arc.h, config/arm/tm-arm.h, config/fr30/tm-fr30.h,
config/h8300/tm-h8300.h, config/i386/tm-i386.h,
config/i960/tm-i960.h, config/m88k/tm-m88k.h,
config/mips/tm-mips.h, config/pa/tm-hppa.h,
config/sparc/tm-sparc.h, config/delta/tm-delta.h,
config/frv/tm-frv.h (IEEE_FLOAT): For all ports that #define
IEEE_FLOAT, make sure they give it the value (1).
@
text
@d48 1
a48 1
extern CORE_ADDR h8500_skip_prologue PARAMS ((CORE_ADDR));
d56 1
a56 1
extern CORE_ADDR saved_pc_after_call PARAMS ((void));
d89 1
a89 1
extern int h8500_register_size PARAMS ((int regno));
d107 1
a107 1
extern struct type *h8500_register_virtual_type PARAMS ((int regno));
d210 1
a210 1
extern CORE_ADDR h8500_frame_chain PARAMS ((struct frame_info *));
d213 1
a213 1
extern CORE_ADDR frame_saved_pc PARAMS ((struct frame_info * frame));
d240 2
a241 1
extern void frame_find_saved_regs PARAMS ((struct frame_info * frame_info, struct frame_saved_regs * frame_saved_regs));
d247 1
a247 1
extern void h8500_pop_frame PARAMS ((void));
d254 1
a254 1
extern CORE_ADDR h8500_addr_bits_remove PARAMS ((CORE_ADDR));
d260 1
a260 1
extern void print_register_hook PARAMS ((int));
d269 1
a269 1
extern int h8500_is_trapped_internalvar PARAMS ((char *name));
d277 2
a278 2
extern CORE_ADDR h8500_read_sp PARAMS ((void));
extern void h8500_write_sp PARAMS ((CORE_ADDR));
d280 2
a281 2
extern CORE_ADDR h8500_read_fp PARAMS ((void));
extern void h8500_write_fp PARAMS ((CORE_ADDR));
d283 2
a284 2
extern CORE_ADDR h8500_read_pc PARAMS ((int));
extern void h8500_write_pc PARAMS ((CORE_ADDR, int));
@


1.1
log
@Initial revision
@
text
@d4 1
a4 1
This file is part of GDB.
d6 14
a19 13
This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
d25 1
a25 1
#define IEEE_FLOAT 1
d47 1
a47 1
#define SKIP_PROLOGUE(ip)   { (ip) = h8500_skip_prologue(ip); }
d78 1
a78 1
#define REGISTER_BYTES    (NUM_REGS * 4) 
d152 2
a153 2
#define SP_REGNUM       PR7_REGNUM /* Contains address of top of stack */
#define FP_REGNUM       PR6_REGNUM /* Contains address of executing stack frame */
d162 1
a162 1
  { write_register (0, (ADDR)); abort(); }*/
d182 1
a183 1

d190 2
a191 2
#define FRAMELESS_FUNCTION_INVOCATION(FI, FRAMELESS) \
  (FRAMELESS) = frameless_look_for_prologue(FI)
d202 2
a203 2
   
   */
d206 1
a206 1
/*       (fci)->frame |= read_register(SEG_T_REGNUM) << 16;*/
d213 1
a213 1
extern CORE_ADDR frame_saved_pc PARAMS ((struct frame_info *frame));
d225 1
a225 1
#define FRAME_NUM_ARGS(val,fi) (val = -1)
d240 1
a240 1
extern void frame_find_saved_regs PARAMS ((struct frame_info *frame_info, struct frame_saved_regs *frame_saved_regs));
a250 2
#define NAMES_HAVE_UNDERSCORE

d271 1
a271 1
extern struct value * h8500_value_of_trapped_internalvar (/* struct internalvar *var */);
d274 1
a274 1
extern void h8500_set_trapped_internalvar (/* struct internalvar *var, value newval, int bitpos, int bitsize, int offset */);
@


1.1.1.1
log
@Initial creation of sourceware repository
@
text
@@


1.1.1.2
log
@import gdb-19990504 snapshot
@
text
@d46 1
a46 1
#define SKIP_PROLOGUE(ip)   (h8500_skip_prologue (ip))
@


1.1.1.3
log
@import gdb-1999-05-25 snapshot
@
text
@d189 2
a190 2
#define FRAMELESS_FUNCTION_INVOCATION(FI) \
  (frameless_look_for_prologue (FI))
d224 1
a224 1
#define FRAME_NUM_ARGS(fi) (-1)
@


1.1.1.4
log
@import gdb-1999-06-01 snapshot
@
text
@d250 2
@


1.1.1.5
log
@import gdb-1999-07-07 post reformat
@
text
@d4 1
a4 1
   This file is part of GDB.
d6 13
a18 14
   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place - Suite 330,
   Boston, MA 02111-1307, USA.  */
d77 1
a77 1
#define REGISTER_BYTES    (NUM_REGS * 4)
d151 2
a152 2
#define SP_REGNUM       PR7_REGNUM	/* Contains address of top of stack */
#define FP_REGNUM       PR6_REGNUM	/* Contains address of executing stack frame */
d161 1
a161 1
   { write_register (0, (ADDR)); abort(); } */
d181 1
a182 1

d201 2
a202 2

 */
d205 1
a205 1
/*       (fci)->frame |= read_register(SEG_T_REGNUM) << 16; */
d212 1
a212 1
extern CORE_ADDR frame_saved_pc PARAMS ((struct frame_info * frame));
d239 1
a239 1
extern void frame_find_saved_regs PARAMS ((struct frame_info * frame_info, struct frame_saved_regs * frame_saved_regs));
d270 1
a270 1
extern struct value *h8500_value_of_trapped_internalvar ( /* struct internalvar *var */ );
d273 1
a273 1
extern void h8500_set_trapped_internalvar ( /* struct internalvar *var, value newval, int bitpos, int bitsize, int offset */ );
@

