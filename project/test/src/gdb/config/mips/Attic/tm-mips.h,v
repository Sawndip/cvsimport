head	1.79;
access;
symbols
	gdb_6_3-20041109-release:1.62
	gdb_6_3-branch:1.62.0.2
	gdb_6_3-20041019-branchpoint:1.62
	drow_intercu-merge-20040921:1.62
	drow_intercu-merge-20040915:1.62
	jimb-gdb_6_2-e500-branch:1.60.0.6
	jimb-gdb_6_2-e500-branchpoint:1.60
	gdb_6_2-20040730-release:1.60
	gdb_6_2-branch:1.60.0.2
	gdb_6_2-2004-07-10-gmt-branchpoint:1.60
	gdb_6_1_1-20040616-release:1.58
	gdb_6_1-2004-04-05-release:1.58
	drow_intercu-merge-20040402:1.58
	drow_intercu-merge-20040327:1.58
	ezannoni_pie-20040323-branch:1.58.0.12
	ezannoni_pie-20040323-branchpoint:1.58
	cagney_tramp-20040321-mergepoint:1.58
	cagney_tramp-20040309-branch:1.58.0.10
	cagney_tramp-20040309-branchpoint:1.58
	gdb_6_1-branch:1.58.0.8
	gdb_6_1-2004-03-01-gmt-branchpoint:1.58
	drow_intercu-20040221-branch:1.58.0.6
	drow_intercu-20040221-branchpoint:1.58
	cagney_bfdfile-20040213-branch:1.58.0.4
	cagney_bfdfile-20040213-branchpoint:1.58
	drow-cplus-merge-20040208:1.58
	carlton_dictionary-20040126-merge:1.58
	cagney_bigcore-20040122-branch:1.58.0.2
	cagney_bigcore-20040122-branchpoint:1.58
	drow-cplus-merge-20040113:1.58
	drow-cplus-merge-20031224:1.58
	drow-cplus-merge-20031220:1.58
	carlton_dictionary-20031215-merge:1.58
	drow-cplus-merge-20031214:1.58
	carlton-dictionary-20031111-merge:1.53
	gdb_6_0-2003-10-04-release:1.52
	kettenis_sparc-20030918-branch:1.52.0.8
	kettenis_sparc-20030918-branchpoint:1.52
	carlton_dictionary-20030917-merge:1.52
	ezannoni_pie-20030916-branchpoint:1.52
	ezannoni_pie-20030916-branch:1.52.0.6
	cagney_x86i386-20030821-branch:1.52.0.4
	cagney_x86i386-20030821-branchpoint:1.52
	carlton_dictionary-20030805-merge:1.52
	carlton_dictionary-20030627-merge:1.52
	gdb_6_0-branch:1.52.0.2
	gdb_6_0-2003-06-23-branchpoint:1.52
	jimb-ppc64-linux-20030613-branch:1.50.0.4
	jimb-ppc64-linux-20030613-branchpoint:1.50
	cagney_convert-20030606-branch:1.50.0.2
	cagney_convert-20030606-branchpoint:1.50
	cagney_writestrings-20030508-branch:1.48.0.4
	cagney_writestrings-20030508-branchpoint:1.48
	jimb-ppc64-linux-20030528-branch:1.49.0.4
	jimb-ppc64-linux-20030528-branchpoint:1.49
	carlton_dictionary-20030523-merge:1.49
	cagney_fileio-20030521-branch:1.49.0.2
	cagney_fileio-20030521-branchpoint:1.49
	kettenis_i386newframe-20030517-mergepoint:1.49
	jimb-ppc64-linux-20030509-branch:1.48.0.2
	jimb-ppc64-linux-20030509-branchpoint:1.48
	kettenis_i386newframe-20030504-mergepoint:1.47
	carlton_dictionary-20030430-merge:1.47
	kettenis_i386newframe-20030419-branch:1.47.0.8
	kettenis_i386newframe-20030419-branchpoint:1.47
	carlton_dictionary-20030416-merge:1.47
	cagney_frameaddr-20030409-mergepoint:1.47
	kettenis_i386newframe-20030406-branch:1.47.0.6
	kettenis_i386newframe-20030406-branchpoint:1.47
	cagney_frameaddr-20030403-branchpoint:1.47
	cagney_frameaddr-20030403-branch:1.47.0.4
	cagney_framebase-20030330-mergepoint:1.47
	cagney_framebase-20030326-branch:1.47.0.2
	cagney_framebase-20030326-branchpoint:1.47
	cagney_lazyid-20030317-branch:1.46.0.12
	cagney_lazyid-20030317-branchpoint:1.46
	kettenis-i386newframe-20030316-mergepoint:1.46
	offbyone-20030313-branch:1.46.0.10
	offbyone-20030313-branchpoint:1.46
	kettenis-i386newframe-20030308-branch:1.46.0.8
	kettenis-i386newframe-20030308-branchpoint:1.46
	carlton_dictionary-20030305-merge:1.46
	cagney_offbyone-20030303-branch:1.46.0.6
	cagney_offbyone-20030303-branchpoint:1.46
	carlton_dictionary-20030207-merge:1.46
	interps-20030203-mergepoint:1.46
	interps-20030202-branch:1.46.0.4
	interps-20030202-branchpoint:1.46
	cagney-unwind-20030108-branch:1.46.0.2
	cagney-unwind-20030108-branchpoint:1.46
	carlton_dictionary-20021223-merge:1.46
	gdb_5_3-2002-12-12-release:1.43
	carlton_dictionary-20021115-merge:1.44
	kseitz_interps-20021105-merge:1.44
	kseitz_interps-20021103-merge:1.44
	drow-cplus-merge-20021020:1.44
	drow-cplus-merge-20021025:1.44
	carlton_dictionary-20021025-merge:1.44
	carlton_dictionary-20021011-merge:1.44
	drow-cplus-branch:1.44.0.4
	drow-cplus-branchpoint:1.44
	kseitz_interps-20020930-merge:1.44
	carlton_dictionary-20020927-merge:1.44
	carlton_dictionary-branch:1.44.0.2
	carlton_dictionary-20020920-branchpoint:1.44
	gdb_5_3-branch:1.43.0.6
	gdb_5_3-2002-09-04-branchpoint:1.43
	kseitz_interps-20020829-merge:1.43
	cagney_sysregs-20020825-branch:1.43.0.4
	cagney_sysregs-20020825-branchpoint:1.43
	readline_4_3-import-branch:1.43.0.2
	readline_4_3-import-branchpoint:1.43
	gdb_5_2_1-2002-07-23-release:1.25
	kseitz_interps-20020528-branch:1.25.0.8
	kseitz_interps-20020528-branchpoint:1.25
	cagney_regbuf-20020515-branch:1.25.0.6
	cagney_regbuf-20020515-branchpoint:1.25
	jimb-macro-020506-branch:1.25.0.4
	jimb-macro-020506-branchpoint:1.25
	gdb_5_2-2002-04-29-release:1.25
	gdb_5_2-branch:1.25.0.2
	gdb_5_2-2002-03-03-branchpoint:1.25
	gdb_5_1_1-2002-01-24-release:1.21
	gdb_5_1_0_1-2002-01-03-release:1.21
	cygnus_cvs_20020108_pre:1.24
	gdb_5_1_0_1-2002-01-03-branchpoint:1.21
	gdb_5_1_0_1-2002-01-03-branch:1.21.0.8
	gdb_5_1-2001-11-21-release:1.21
	gdb_s390-2001-09-26-branch:1.21.0.6
	gdb_s390-2001-09-26-branchpoint:1.21
	gdb_5_1-2001-07-29-branch:1.21.0.4
	gdb_5_1-2001-07-29-branchpoint:1.21
	dberlin-typesystem-branch:1.21.0.2
	dberlin-typesystem-branchpoint:1.21
	gdb-post-ptid_t-2001-05-03:1.18
	gdb-pre-ptid_t-2001-05-03:1.18
	insight-precleanup-2001-01-01:1.16
	gdb-post-protoization-2000-07-29:1.14
	gdb-pre-protoization-2000-07-29:1.14
	gdb-premipsmulti-2000-06-06-branch:1.7.0.2
	gdb-premipsmulti-2000-06-06-branchpoint:1.7
	gdb-post-params-removal-2000-06-04:1.6
	gdb-pre-params-removal-2000-06-04:1.6
	gdb-post-params-removal-2000-05-28:1.6
	gdb-pre-params-removal-2000-05-28:1.5
	gdb_5_0-2000-05-19-release:1.2
	gdb_4_18_2-2000-05-18-release:1.2
	gdb_4_95_1-2000-05-11-snapshot:1.2
	gdb_4_95_0-2000-04-27-snapshot:1.2
	gdb_5_0-2000-04-10-branch:1.2.0.2
	gdb_5_0-2000-04-10-branchpoint:1.2
	repo-unification-2000-02-06:1.1.1.11
	insight-2000-02-04:1.1.1.11
	gdb-2000-02-04:1.1.1.11
	gdb-2000-02-02:1.1.1.11
	gdb-2000-02-01:1.1.1.11
	gdb-2000-01-31:1.1.1.11
	gdb-2000-01-26:1.1.1.11
	gdb-2000-01-24:1.1.1.11
	gdb-2000-01-17:1.1.1.11
	gdb-2000-01-10:1.1.1.11
	gdb-2000-01-05:1.1.1.11
	gdb-1999-12-21:1.1.1.11
	gdb-1999-12-13:1.1.1.10
	gdb-1999-12-07:1.1.1.10
	gdb-1999-12-06:1.1.1.10
	gdb-1999-11-16:1.1.1.10
	gdb-1999-11-08:1.1.1.10
	gdb-1999-11-01:1.1.1.10
	gdb-1999-10-25:1.1.1.10
	gdb-1999-10-18:1.1.1.10
	gdb-1999-10-11:1.1.1.10
	gdb-1999-10-04:1.1.1.10
	gdb-1999-09-28:1.1.1.10
	gdb-1999-09-21:1.1.1.10
	gdb-1999-09-13:1.1.1.10
	gdb-1999-09-08:1.1.1.10
	gdb-1999-08-30:1.1.1.9
	gdb-1999-08-23:1.1.1.8
	gdb-1999-08-16:1.1.1.8
	gdb-1999-08-09:1.1.1.8
	gdb-1999-08-02:1.1.1.8
	gdb-1999-07-26:1.1.1.7
	gdb-1999-07-19:1.1.1.7
	gdb-1999-07-12:1.1.1.7
	gdb-post-reformat-19990707:1.1.1.6
	gdb-1999-07-07-post-reformat-snapshot:1.1.1.6
	gdb-pre-reformat-19990707:1.1.1.5
	gdb-1999-07-07:1.1.1.5
	gdb-1999-07-05:1.1.1.5
	gdb-1999-06-28:1.1.1.5
	gdb-1999-06-21:1.1.1.5
	gdb-1999-06-14:1.1.1.5
	gdb-1999-06-07:1.1.1.4
	gdb-1999-06-01:1.1.1.3
	gdb-4_18-branch:1.1.1.1.0.2
	gdb-4_18-release:1.1.1.1
	gdb-1999-05-25:1.1.1.3
	gdb-1999-05-19:1.1.1.2
	gdb-1999-05-10:1.1.1.2
	gdb-19990504:1.1.1.2
	gdb-19990422:1.1.1.1
	SNAPSHOT:1.1.1
	gdb-4_18:1.1.1.1
	GDB_4_18:1.1.1;
locks; strict;
comment	@ * @;
expand	@o@;


1.79
date	2004.10.31.18.20.00;	author cagney;	state dead;
branches;
next	1.78;

1.78
date	2004.10.31.17.57.43;	author cagney;	state Exp;
branches;
next	1.77;

1.77
date	2004.10.31.17.38.16;	author cagney;	state Exp;
branches;
next	1.76;

1.76
date	2004.10.31.16.14.01;	author cagney;	state Exp;
branches;
next	1.75;

1.75
date	2004.10.31.15.50.54;	author cagney;	state Exp;
branches;
next	1.74;

1.74
date	2004.10.31.04.33.14;	author cagney;	state Exp;
branches;
next	1.73;

1.73
date	2004.10.31.03.42.52;	author cagney;	state Exp;
branches;
next	1.72;

1.72
date	2004.10.31.02.59.21;	author cagney;	state Exp;
branches;
next	1.71;

1.71
date	2004.10.31.00.07.29;	author cagney;	state Exp;
branches;
next	1.70;

1.70
date	2004.10.30.23.22.54;	author cagney;	state Exp;
branches;
next	1.69;

1.69
date	2004.10.30.23.08.18;	author cagney;	state Exp;
branches;
next	1.68;

1.68
date	2004.10.30.22.54.40;	author cagney;	state Exp;
branches;
next	1.67;

1.67
date	2004.10.30.22.36.34;	author cagney;	state Exp;
branches;
next	1.66;

1.66
date	2004.10.30.22.11.18;	author cagney;	state Exp;
branches;
next	1.65;

1.65
date	2004.10.30.21.16.10;	author cagney;	state Exp;
branches;
next	1.64;

1.64
date	2004.10.30.20.54.54;	author cagney;	state Exp;
branches;
next	1.63;

1.63
date	2004.10.26.14.13.24;	author cagney;	state Exp;
branches;
next	1.62;

1.62
date	2004.09.02.14.17.41;	author cagney;	state Exp;
branches;
next	1.61;

1.61
date	2004.07.21.14.23.37;	author cagney;	state Exp;
branches;
next	1.60;

1.60
date	2004.06.22.00.01.04;	author hunt;	state Exp;
branches;
next	1.59;

1.59
date	2004.05.01.00.34.55;	author cagney;	state Exp;
branches;
next	1.58;

1.58
date	2003.11.16.22.46.49;	author cagney;	state Exp;
branches
	1.58.6.1;
next	1.57;

1.57
date	2003.11.16.19.24.05;	author cagney;	state Exp;
branches;
next	1.56;

1.56
date	2003.11.16.14.31.53;	author cagney;	state Exp;
branches;
next	1.55;

1.55
date	2003.11.16.04.57.25;	author cagney;	state Exp;
branches;
next	1.54;

1.54
date	2003.11.15.22.09.06;	author cagney;	state Exp;
branches;
next	1.53;

1.53
date	2003.11.05.16.42.35;	author cagney;	state Exp;
branches;
next	1.52;

1.52
date	2003.06.21.23.14.44;	author cagney;	state Exp;
branches
	1.52.6.1;
next	1.51;

1.51
date	2003.06.20.04.04.44;	author cagney;	state Exp;
branches;
next	1.50;

1.50
date	2003.06.01.15.45.57;	author cagney;	state Exp;
branches;
next	1.49;

1.49
date	2003.05.17.05.59.59;	author cagney;	state Exp;
branches;
next	1.48;

1.48
date	2003.05.05.17.56.56;	author cagney;	state Exp;
branches;
next	1.47;

1.47
date	2003.03.19.06.21.14;	author kevinb;	state Exp;
branches
	1.47.8.1;
next	1.46;

1.46
date	2002.12.13.18.09.30;	author kevinb;	state Exp;
branches;
next	1.45;

1.45
date	2002.11.21.18.54.44;	author cagney;	state Exp;
branches;
next	1.44;

1.44
date	2002.09.17.23.26.02;	author cagney;	state Exp;
branches
	1.44.2.1
	1.44.4.1;
next	1.43;

1.43
date	2002.08.21.22.39.26;	author msnyder;	state Exp;
branches;
next	1.42;

1.42
date	2002.08.21.01.08.23;	author msnyder;	state Exp;
branches;
next	1.41;

1.41
date	2002.08.20.23.07.43;	author msnyder;	state Exp;
branches;
next	1.40;

1.40
date	2002.08.20.22.44.55;	author msnyder;	state Exp;
branches;
next	1.39;

1.39
date	2002.08.20.21.58.44;	author msnyder;	state Exp;
branches;
next	1.38;

1.38
date	2002.08.20.19.41.59;	author msnyder;	state Exp;
branches;
next	1.37;

1.37
date	2002.08.20.19.32.47;	author msnyder;	state Exp;
branches;
next	1.36;

1.36
date	2002.08.18.18.59.53;	author cagney;	state Exp;
branches;
next	1.35;

1.35
date	2002.08.16.04.10.23;	author msnyder;	state Exp;
branches;
next	1.34;

1.34
date	2002.08.16.03.07.34;	author msnyder;	state Exp;
branches;
next	1.33;

1.33
date	2002.08.16.02.36.49;	author msnyder;	state Exp;
branches;
next	1.32;

1.32
date	2002.08.16.01.23.17;	author msnyder;	state Exp;
branches;
next	1.31;

1.31
date	2002.08.10.01.09.11;	author msnyder;	state Exp;
branches;
next	1.30;

1.30
date	2002.08.08.23.32.52;	author kevinb;	state Exp;
branches;
next	1.29;

1.29
date	2002.08.08.22.44.46;	author msnyder;	state Exp;
branches;
next	1.28;

1.28
date	2002.06.17.23.32.36;	author cagney;	state Exp;
branches;
next	1.27;

1.27
date	2002.06.14.22.55.47;	author cagney;	state Exp;
branches;
next	1.26;

1.26
date	2002.06.11.17.51.56;	author drow;	state Exp;
branches;
next	1.25;

1.25
date	2002.02.10.07.17.17;	author cagney;	state Exp;
branches
	1.25.6.1
	1.25.8.1;
next	1.24;

1.24
date	2002.01.05.04.30.37;	author cagney;	state Exp;
branches;
next	1.23;

1.23
date	2001.12.10.04.58.31;	author cagney;	state Exp;
branches;
next	1.22;

1.22
date	2001.10.15.18.18.30;	author cagney;	state Exp;
branches;
next	1.21;

1.21
date	2001.07.05.23.30.43;	author drow;	state Exp;
branches;
next	1.20;

1.20
date	2001.06.15.23.10.55;	author cagney;	state Exp;
branches;
next	1.19;

1.19
date	2001.06.15.22.10.21;	author cagney;	state Exp;
branches;
next	1.18;

1.18
date	2001.03.14.23.23.13;	author cagney;	state Exp;
branches;
next	1.17;

1.17
date	2001.03.06.08.21.32;	author kevinb;	state Exp;
branches;
next	1.16;

1.16
date	2000.12.04.04.01.16;	author cagney;	state Exp;
branches;
next	1.15;

1.15
date	2000.10.27.15.02.42;	author davea;	state Exp;
branches;
next	1.14;

1.14
date	2000.07.07.09.19.03;	author cagney;	state Exp;
branches;
next	1.13;

1.13
date	2000.06.12.04.35.39;	author cagney;	state Exp;
branches;
next	1.12;

1.12
date	2000.06.08.06.35.40;	author cagney;	state Exp;
branches;
next	1.11;

1.11
date	2000.06.08.04.51.10;	author cagney;	state Exp;
branches;
next	1.10;

1.10
date	2000.06.08.04.00.56;	author cagney;	state Exp;
branches;
next	1.9;

1.9
date	2000.06.06.07.00.45;	author cagney;	state Exp;
branches;
next	1.8;

1.8
date	2000.06.06.06.19.57;	author cagney;	state Exp;
branches;
next	1.7;

1.7
date	2000.06.04.13.46.37;	author cagney;	state Exp;
branches;
next	1.6;

1.6
date	2000.05.28.01.12.36;	author kevinb;	state Exp;
branches;
next	1.5;

1.5
date	2000.05.04.14.16.51;	author cagney;	state Exp;
branches;
next	1.4;

1.4
date	2000.05.04.11.10.22;	author cagney;	state Exp;
branches;
next	1.3;

1.3
date	2000.04.14.19.13.33;	author jimb;	state Exp;
branches;
next	1.2;

1.2
date	2000.02.22.19.18.09;	author jimb;	state Exp;
branches;
next	1.1;

1.1
date	99.04.16.01.34.23;	author shebs;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.04.16.01.34.23;	author shebs;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	99.05.05.14.43.37;	author shebs;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	99.05.25.18.05.09;	author jsm;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	99.06.07.19.18.21;	author jsm;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	99.06.14.18.08.28;	author jsm;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	99.07.07.20.15.29;	author jsm;	state Exp;
branches;
next	1.1.1.7;

1.1.1.7
date	99.07.12.11.07.52;	author jsm;	state Exp;
branches;
next	1.1.1.8;

1.1.1.8
date	99.08.02.23.46.33;	author jsm;	state Exp;
branches;
next	1.1.1.9;

1.1.1.9
date	99.08.31.01.07.39;	author jsm;	state Exp;
branches;
next	1.1.1.10;

1.1.1.10
date	99.09.08.23.59.59;	author shebs;	state Exp;
branches;
next	1.1.1.11;

1.1.1.11
date	99.12.22.21.45.14;	author jsm;	state Exp;
branches;
next	;

1.25.6.1
date	2002.06.15.16.43.09;	author cagney;	state Exp;
branches;
next	1.25.6.2;

1.25.6.2
date	2002.06.21.16.19.53;	author cagney;	state Exp;
branches;
next	;

1.25.8.1
date	2002.06.20.01.35.14;	author kseitz;	state Exp;
branches;
next	1.25.8.2;

1.25.8.2
date	2002.08.09.18.34.29;	author kseitz;	state Exp;
branches;
next	1.25.8.3;

1.25.8.3
date	2002.08.30.22.52.48;	author kseitz;	state Exp;
branches;
next	1.25.8.4;

1.25.8.4
date	2002.10.01.00.46.20;	author kseitz;	state Exp;
branches;
next	;

1.44.2.1
date	2002.12.23.19.39.02;	author carlton;	state Exp;
branches;
next	1.44.2.2;

1.44.2.2
date	2003.04.16.19.56.58;	author carlton;	state Exp;
branches;
next	1.44.2.3;

1.44.2.3
date	2003.05.23.18.40.48;	author carlton;	state Exp;
branches;
next	1.44.2.4;

1.44.2.4
date	2003.06.27.21.50.16;	author carlton;	state Exp;
branches;
next	1.44.2.5;

1.44.2.5
date	2003.11.11.23.51.04;	author carlton;	state Exp;
branches;
next	1.44.2.6;

1.44.2.6
date	2003.12.16.00.00.56;	author carlton;	state Exp;
branches;
next	;

1.44.4.1
date	2003.12.14.20.27.39;	author drow;	state Exp;
branches;
next	;

1.47.8.1
date	2003.05.18.09.44.29;	author kettenis;	state Exp;
branches;
next	;

1.52.6.1
date	2004.03.23.20.30.15;	author ezannoni;	state Exp;
branches;
next	;

1.58.6.1
date	2004.09.16.17.01.32;	author drow;	state Exp;
branches;
next	;


desc
@@


1.79
log
@2004-10-31  Andrew Cagney  <cagney@@gnu.org>

	* config/mips/tm-mips.h: Delete file.
	* remote-mips.c: Delete tm-mips.h from comment.
	* config/mips/embed.mt (DEPRECATED_TM_FILE): Delete.
	* config/mips/tm-nbsd.h: Don't include tm-mips.h.
	* config/mips/irix6.mt (DEPRECATED_TM_FILE): Delete.
	* config/mips/tm-linux.h: Don't include tm-mips.h.
	* config/mips/tm-vxmips.h: Don't include tm-mips.h.
	* config/mips/irix5.mt (DEPRECATED_TM_FILE):
	* config/mips/tm-wince.h: Don't include.
@
text
@/* Definitions to make GDB run on a mips box under 4.3bsd.

   Copyright 1986, 1987, 1989, 1991, 1992, 1993, 1994, 1995, 1996,
   1997, 1998, 1999, 2000, 2002, 2003 Free Software Foundation, Inc.

   Contributed by Per Bothner (bothner@@cs.wisc.edu) at U.Wisconsin
   and by Alessandro Forin (af@@cs.cmu.edu) at CMU..

   This file is part of GDB.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place - Suite 330,
   Boston, MA 02111-1307, USA.  */

#ifndef TM_MIPS_H
#define TM_MIPS_H 1

#include "regcache.h"

struct frame_info;
struct symbol;
struct type;
struct value;

#endif /* TM_MIPS_H */
@


1.78
log
@2004-10-31  Andrew Cagney  <cagney@@gnu.org>

	* mdebugread.h (MDEBUG_EFI_SYMBOL_NAME): Define.
	* mdebugread.c (MDEBUG_EFI_SYMBOL_NAME): Delete.
	* config/alpha/tm-alpha.h (MDEBUG_EFI_SYMBOL_NAME): Delete.
	* config/mips/tm-mips.h (MDEBUG_EFI_SYMBOL_NAME): Delete.
@
text
@@


1.77
log
@2004-10-31  Orjan Friberg <organ.friberg@@axis.com>
	    Andrew Cagney  <cagney@@gnu.org>

	* gdbarch.sh (single_step_through_delay): Add.
	* gdbarch.h, gdbarch.c: Re-generate.
	* config/mips/tm-mips.h (STEP_SKIPS_DELAY_P, STEP_SKIPS_DELAY)
	(mips_step_skips_delay): Delete.
	* mips-tdep.c (mips_single_step_through_delay): Replace
	mips_step_skips_delay.
	(mips_gdbarch_init): Set single_step_through_delay.
	(mips_dump_tdep): Do not print STEP_SKIPS_DELAY.
@
text
@a35 5
/* Special symbol found in blocks associated with routines.  We can
   hang mdebug_extra_func_info's off of this.  */

#define MDEBUG_EFI_SYMBOL_NAME "__GDB_EFI_INFO__"

@


1.76
log
@2004-10-31  Andrew Cagney  <cagney@@gnu.org>

	* mips-tdep.c (mips_ignore_helper): Delete.
	* config/mips/tm-mips.h (DEPRECATED_IGNORE_HELPER_CALL): Delete.
	* infrun.c (handle_inferior_event): Delete #ifdef
	DEPRECATED_IGNORE_HELPER_CALL code.
@
text
@a35 6
/* Return non-zero if PC points to an instruction which will cause a step
   to execute both the instruction at PC and an instruction at PC+4.  */
extern int mips_step_skips_delay (CORE_ADDR);
#define STEP_SKIPS_DELAY_P (1)
#define STEP_SKIPS_DELAY(pc) (mips_step_skips_delay (pc))

@


1.75
log
@2004-10-31  Andrew Cagney  <cagney@@gnu.org>

	* config/mips/tm-mips.h (RA_REGNUM): Delete.
@
text
@a46 4
/* Functions for dealing with MIPS16 call and return stubs.  */
#define DEPRECATED_IGNORE_HELPER_CALL(pc)			mips_ignore_helper (pc)
extern int mips_ignore_helper (CORE_ADDR pc);

@


1.74
log
@2004-10-30  Andrew Cagney  <cagney@@gnu.org>

	* mdebugread.h: Include "coff/sym.h" and "coff/symconst.h".
	(struct mdebug_extra_func_info): Define.
	* config/alpha/tm-alpha.h: Delete same.
	* config/mips/tm-mips.h: Delete same.
	* mdebugread.c: Delete same.
	* Makefile.in: Update dependencies.
	* mips-mdebug-tdep.c: Include "mdebugread.h".
@
text
@a41 2
#define RA_REGNUM 31		/* Contains return address value */

@


1.73
log
@2004-10-30  Andrew Cagney  <cagney@@gnu.org>

	* objfiles.c: Include "mdebugread.h".
	* mdebugread.c: Include "mdebugread.h".
	(ecoff_relocate_cfi): Delete.
	* config/alpha/tm-alpha.h (ecoff_relcate_cfi): Delete.
	* config/mips/tm-mips.h (ecoff_relcate_cfi): Delete.
	* mdebugread.h (ecoff_relocate_efi): New file.
	* Makefile.in: Update dependencies.
@
text
@a35 4
#include <bfd.h>
#include "coff/sym.h"		/* Needed for PDR below.  */
#include "coff/symconst.h"

a48 10
/* Specific information about a procedure.
   This overlays the MIPS's PDR records, 
   mipsread.c (ab)uses this to save memory */

struct mdebug_extra_func_info
{
  long numargs;		/* number of args to procedure (was iopt) */
  PDR pdr;			/* Procedure descriptor record */
};

@


1.72
log
@2004-10-30  Andrew Cagney  <cagney@@gnu.org>

	* config/alpha/tm-alpha.h (MDEBUG_EFI_SYMBOL_NAME): Rename
	MIPS_EFI_SYMBOL_NAME.
	(mips_extra_func_info_t, mips_extra_func_info): Delete.
	(struct mdebug_extra_func_info): Replace struct
	alpha_extra_func_info and alpha_extra_func_info_t.
	* config/mips/tm-mips.h (MDEBUG_EFI_SYMBOL_NAME): Rename
	MIPS_EFI_SYMBOL_NAME.
	(struct mdebug_extra_func_info): Replace struct
	alpha_extra_func_info and alpha_extra_func_info_t.
	* objfiles.c, mips-tdep.c, mips-mdebug-tdep.c: Update.
	* mdebugread.c, alpha-mdebug-tdep.c:
@
text
@a51 1
extern void ecoff_relocate_efi (struct symbol *, CORE_ADDR);
@


1.71
log
@2004-10-30  Andrew Cagney  <cagney@@gnu.org>

	Suggested by Mark Kettenis.
	* config/mips/tm-mips.h (struct mips_extra_func_info): Delete
	fields frame_adjust and high_addr.
	* mips-mdebug-tdep.c (PROC_HIGH_ADDR, PROC_FRAME_ADJUST): Delete.
	(non_heuristic_proc_desc): Delete references.
@
text
@d48 2
a49 2
/* Special symbol found in blocks associated with routines.  We can hang
   mips_extra_func_info_t's off of this.  */
d51 1
a51 1
#define MIPS_EFI_SYMBOL_NAME "__GDB_EFI_INFO__"
d58 5
a62 6
typedef struct mips_extra_func_info
  {
    long numargs;		/* number of args to procedure (was iopt) */
    PDR pdr;			/* Procedure descriptor record */
  }
 *mips_extra_func_info_t;
@


1.70
log
@2004-10-30  Andrew Cagney  <cagney@@gnu.org>

	* mips-tdep.h (MIPS_PRID_REGNUM): Add.
	* config/mips/tm-mips.h (PRID_REGNUM): Delete.
	* mips-tdep.c: Update.
@
text
@a60 2
    bfd_vma high_addr;		/* upper address bound */
    long frame_adjust;		/* offset of FP from SP (used on MIPS16) */
@


1.69
log
@2004-10-30  Andrew Cagney  <cagney@@gnu.org>

	* mips-tdep.h (MIPS_FIRST_EMBED_REGNUM)
	(MIPS_LAST_EMBED_REGNUM): Add.
	* config/mips/tm-mips.h (FIRST_EMBED_REGNUM)
	(LAST_EMBED_REGNUM): Delete.
	* mipsv4-nat.c, mips-tdep.c, mips-linux-tdep.c: Update.
@
text
@a46 1
#define	PRID_REGNUM 89		/* Processor ID */
@


1.68
log
@2004-10-30  Andrew Cagney  <cagney@@gnu.org>

	* config/mips/tm-mips.h (PS_REGNUM): Delete.
	* mips-tdep.h (MIPS_PS_REGNUM): Add.
	* remote-vxmips.c, mipsv4-nat.c, mips-tdep.c: Update.
	* mips-linux-nat.c: Update.
@
text
@a46 1
#define	FIRST_EMBED_REGNUM 74	/* First CP0 register for embedded use */
a47 1
#define	LAST_EMBED_REGNUM 89	/* Last one */
@


1.67
log
@2004-10-30  Andrew Cagney  <cagney@@gnu.org>

	* mips-tdep.h: Add comments on registers.
	(MIPS_UNUSED_REGNUM): Define.
	* config/mips/tm-mips.h (ZERO_REGNUM, UNUSED_REGNUM)
	(T9_REGNUM, V0_REGNUM, A0_REGNUM): Delete.
	* irix5-nat.c, mipsv4-nat.c, mips-linux-tdep.c: Update.
	* mips-linux-nat.c, remote-mips.c: Update.
@
text
@a46 1
#define PS_REGNUM 32		/* Contains processor status */
@


1.66
log
@2004-10-30  Andrew Cagney  <cagney@@gnu.org>

	* config/mips/tm-mips.h (t_insn): Delete.
	* mips-tdep.c (mips_fetch_instruction, mips_skip_trampoline_code):
	Replace t_insn with ULONGEST.
@
text
@a45 11
/* Register numbers of various important registers.
   Note that some of these values are "real" register numbers,
   and correspond to the general registers of the machine,
   and some are "phony" register numbers which are too large
   to be actual register numbers as far as the user is concerned
   but do serve to get the desired values when passed to read_register.  */

#define ZERO_REGNUM 0		/* read-only register, always 0 */
#define V0_REGNUM 2		/* Function integer return value */
#define A0_REGNUM 4		/* Loc of first arg during a subr call */
#define T9_REGNUM 25		/* Contains address of callee in PIC */
a47 1
#define	UNUSED_REGNUM 73	/* Never used, FIXME */
@


1.65
log
@2004-10-30  Andrew Cagney  <cagney@@gnu.org>

	* alpha-tdep.c (alpha_setup_arbitrary_frame): Delete.
	* config/alpha/tm-alpha.h (SETUP_ARBITRARY_FRAME): Delete.
	(alpha_setup_arbitrary_frame): Delete.
	* mips-tdep.c (setup_arbitrary_frame): Delete.
	* config/mips/tm-mips.h (SETUP_ARBITRARY_FRAME): Delete.
	(setup_arbitrary_frame): Delete.
	* stack.c (parse_frame_specification_1): When specified, call
	create_new_frame with two parameters.  Delete #ifdef
	SETUP_ARBITRARY_FRAME.
@
text
@a86 3
/* Definitions and declarations used by mips-tdep.c and remote-mips.c  */
typedef unsigned long t_inst;	/* Integer big enough to hold an instruction */

@


1.64
log
@2004-10-30  Andrew Cagney  <cagney@@gnu.org>

	* config/mips/tm-mips.h (MIPS16_INSTLEN, MIPS_NUMREGS)
	(MIPS_INSTLEN): Delete.
	* mips-tdep.h (enum mips_insn_size): Rename MIPS32_INSN_SIZE and
	MIPS16_INSN_SIZE to MIPS_INSN32_SIZE and MIPS_INSN16_SIZE.
	* remote-mips.c, mips-tdep.c: Update.
@
text
@a82 16
/* It takes two values to specify a frame on the MIPS.

   In fact, the *PC* is the primary value that sets up a frame.  The
   PC is looked up to see what function it's in; symbol information
   from that function tells us which register is the frame pointer
   base, and what offset from there is the "virtual frame pointer".
   (This is usually an offset from SP.)  On most non-MIPS machines,
   the primary value is the SP, and the PC, if needed, disambiguates
   multiple functions with the same SP.  But on the MIPS we can't do
   that since the PC is not stored in the same part of the frame every
   time.  This does not seem to be a very clever way to set up frames,
   but there is nothing we can do about that.  */

#define SETUP_ARBITRARY_FRAME(argc, argv) setup_arbitrary_frame (argc, argv)
extern struct frame_info *setup_arbitrary_frame (int, CORE_ADDR *);

@


1.63
log
@2004-10-26  Andrew Cagney  <cagney@@gnu.org>

	* mips-tdep.h (mips_software_single_step): Move to here ...
	* config/mips/tm-mips.h: ... from here.
	* config/mips/tm-linux.h (SOFTWARE_SINGLE_STEP_P)
	(SOFTWARE_SINGLE_STEP): Delete.
	* mips-linux-tdep.c (mips_linux_init_abi): Set software_single_step.
@
text
@a103 3
#define MIPS_INSTLEN 4		/* Length of an instruction */
#define MIPS16_INSTLEN 2	/* Length of an instruction on MIPS16 */
#define MIPS_NUMREGS 32		/* Number of integer or float registers */
@


1.62
log
@2004-09-02  Andrew Cagney  <cagney@@gnu.org>

	* config/sparc/tm-vxworks.h (GDB_MULTI_ARCH): Delete.
	* config/sparc/tm-sol2.h (GDB_MULTI_ARCH): Delete.
	* config/sparc/tm-nbsd.h (GDB_MULTI_ARCH): Delete.
	* config/sparc/tm-linux.h (GDB_MULTI_ARCH): Delete.
	* config/sparc/tm-fbsd.h (GDB_MULTI_ARCH): Delete.
	* config/sh/tm-sh.h (GDB_MULTI_ARCH): Delete.
	* config/rs6000/tm-rs6000.h (GDB_MULTI_ARCH): Delete.
	* config/pa/tm-hppa.h (GDB_MULTI_ARCH): Delete.
	* config/mips/tm-mips.h (GDB_MULTI_ARCH): Delete.
	* config/ia64/tm-ia64.h (GDB_MULTI_ARCH): Delete.
	* config/cris/tm-cris.h (GDB_MULTI_ARCH): Delete.
	* config/arm/tm-arm.h (GDB_MULTI_ARCH): Delete.
@
text
@a109 3

/* Single step based on where the current instruction will take us.  */
extern void mips_software_single_step (enum target_signal, int);
@


1.61
log
@2004-07-21  Andrew Cagney  <cagney@@gnu.org>

	* config/mips/tm-mips.h (DEPRECATED_IGNORE_HELPER_CALL): Deprecate.
	* mips-tdep.c (mips_dump_tdep, mips_ignore_helper): Update.
	* infrun.c (DEPRECATED_IGNORE_HELPER_CALL): Delete macro.
	(handle_inferior_event): Wrap call to deprecated
	IGNORE_HELPER_CALL in #ifdef.
	* config/mips/tm-nbsd.h: Update.
@
text
@a28 2
#define GDB_MULTI_ARCH 1

@


1.60
log
@2004-06-21  Martin Hunt  <hunt@@redhat.com>
	Kevin Buettner <kevinb@@redhat.com>

        * config/mips/tm-mips.h (SP_REGNUM): Delete define.
	* mips-tdep.h (MIPS_SP_REGNUM): Define.
	* mips-tdep.c (mips_gdbarch_init): Set SP_REGNUM via call
	to set_gdbarch_sp_regnum().  Use cooked register number.
        (SP_REGNUM): Replace all occurrences with MIPS_SP_REGNUM.
@
text
@d102 1
a102 1
#define IGNORE_HELPER_CALL(pc)			mips_ignore_helper (pc)
@


1.59
log
@2004-04-30  Andrew Cagney  <cagney@@redhat.com>

	* mips-tdep.c (mips_pc_in_sigtramp): Delete.
	(mips_gdbarch_init): Do not set pc_in_sigtramp.
	* mipsread.c (sigtramp_address): Delete extern variable.
	(mipscoff_new_init): Delete reference.
	* mdebugread.c (sigtramp_address, sigtramp_end): Delete variables.
	(fixup_sigtramp): Delete function.
	* config/mips/tm-mips.h (sigtramp_address, sigtramp_end)
	(fixup_sigtramp): Delete declarations.
@
text
@a58 1
#define SP_REGNUM 29		/* Contains address of top of stack */
@


1.58
log
@2003-11-16  Andrew Cagney  <cagney@@redhat.com>

	* mips-tdep.h (deprecated_mips_set_processor_regs_hack): Declare.
	* remote-mips.c (common_open): Instead of
	"mips_read_register_type" and "mips_set_processor_type_command"
	call "deprecated_mips_set_processor_regs_hack".
	* config/mips/tm-mips.h (mips_read_processor_type): Delete
	declaration.
	(mips_set_processor_type_command): Delete declaration.
	* mips-tdep.c (mips_gdbarch_init): Update comment.
	(mips_dump_tdep): Do not print MIPS_REGISTER_NAMES.
	(mips_set_processor_type): Delete function.
	(NUM_MIPS_PROCESSOR_REGS): Define.
	(mips_show_processor_type_command): Delete function.
	(mips_set_processor_type_command): Delete function.
	(tmp_mips_processor_type): Delete.
	(mips_processor_type): Delete.
	(mips_processor_type_table): Delete.
	(mips_r3051_reg_names): Delete.
	(mips_r3081_reg_names): Delete.
	(mips_lsi33k_reg_names): Delete.
	(mips_processor_reg_names): Delete.
	(mips_read_processor_type): Delete function.
	(deprecated_mips_set_processor_regs_hack): New function.
	(struct gdbarch_tdep): Add member "mips_processor_reg_names".
	(mips_register_name): Get the processor names from the tdep.
	(mips_tx39_reg_names): New array.
	(mips_generic_reg_names): Wire to a standard set of names.
	(mips_gdbarch_init): Set "mips_processor_reg_names".
	* config/mips/tm-irix5.h (MIPS_REGISTER_NAMES): Delete macro.
	* config/mips/tm-mips.h (MIPS_REGISTER_NAMES): Delete macro.
	* config/mips/tm-tx39.h (MIPS_REGISTER_NAMES): Delete macro.
@
text
@a101 4
/* These are defined in mdebugread.c and are used in mips-tdep.c  */
extern CORE_ADDR sigtramp_address, sigtramp_end;
extern void fixup_sigtramp (void);

@


1.58.6.1
log
@Merge mainline to intercu branch - 2004-09-15
@
text
@d29 2
d59 1
d102 4
d107 1
a107 1
#define DEPRECATED_IGNORE_HELPER_CALL(pc)			mips_ignore_helper (pc)
@


1.57
log
@2003-11-16  Andrew Cagney  <cagney@@redhat.com>

	* mips-tdep.c (struct gdbarch_tdep): Add field "regnum".
	(mips_fpa0_regnum, mips_regnum): New function.
	(mips_gdbarch_init): Fill in the "regnum" fields.
	* mips-tdep.h (struct mips_regnum): Define.
	(mips_regnum): Declare.
	* config/mips/tm-mips.h (BADVADDR_REGNUM): Delete macro.
	(LO_REGNUM, HI_REGNUM, BADVADDR_REGNUM): Ditto.
	(CAUSE_REGNUM, PC_REGNUM, FP0_REGNUM): Ditto.
	(FCRCS_REGNUM, FCRIR_REGNUM, FPA0_REGNUM): Ditto.
	* config/mips/tm-irix6.h (FP0_REGNUM): Delete macro.
	(PC_REGNUM, CAUSE_REGNUM, BADVADDR_REGNUM): Ditto.
	(HI_REGNUM, LO_REGNUM, FCRCS_REGNUM, FCRIR_REGNUM): Ditto.
	* config/mips/tm-irix5.h (FP0_REGNUM): Delete macro.
	(PC_REGNUM, CAUSE_REGNUM, BADVADDR_REGNUM): Ditto.
	(HI_REGNUM, LO_REGNUM, FCRCS_REGNUM, FCRIR_REGNUM): Ditto.
	* remote-mips.c: Include "mips-tdep.h".  Update.
	* mipsnbsd-tdep.c: Update.
	* mipsv4-nat.c: Update.
	* mips-tdep.c: Update.
	* mips-nat.c: Update.
	* mips-linux-tdep.c: Update.
	* mips-linux-nat.c: Update.
	* irix5-nat.c: Update.
	* dve3900-rom.c: Include "mips-tdep.h".  Update.
	(ignore_packet): Supress GCC warning.
	* config/mips/nm-riscos.h: Update.
	* Makefile.in (dve3900-rom.o, remote-mips.o): Update dependencies.
@
text
@a47 16
/* Initializer for an array of names for registers 32 and above.
   There should be NUM_REGS-32 strings in this initializer.  */

#ifndef MIPS_REGISTER_NAMES
#define MIPS_REGISTER_NAMES 	\
    {	"sr",	"lo",	"hi",	"bad",	"cause","pc",    \
	"f0",   "f1",   "f2",   "f3",   "f4",   "f5",   "f6",   "f7", \
	"f8",   "f9",   "f10",  "f11",  "f12",  "f13",  "f14",  "f15", \
	"f16",  "f17",  "f18",  "f19",  "f20",  "f21",  "f22",  "f23",\
	"f24",  "f25",  "f26",  "f27",  "f28",  "f29",  "f30",  "f31",\
	"fsr",  "fir",  ""/*"fp"*/,	"", \
	"",	"",	"",	"",	"",	"",	"",	"", \
	"",	"",	"",	"",	"",	"",	"",	"", \
    }
#endif

a105 3
/* Defined in mips-tdep.c and used in remote-mips.c */
extern char *mips_read_processor_type (void);

a116 3

/* Command to set the processor type. */
extern void mips_set_processor_type_command (char *, int);
@


1.56
log
@2003-11-16  Andrew Cagney  <cagney@@redhat.com>

	* mips-tdep.c (mips_register_byte): Delete function.
	(mips_gdbarch_init): Do not set "deprecated_register_byte".
	* config/mips/tm-mips.h (MIPS_REGISTER_BYTE): Delete macro.
	* config/mips/tm-irix6.h (MIPS_REGISTER_BYTE): Delete macro.
	* config/mips/tm-irix5.h (MIPS_REGISTER_BYTE): Delete macro.
@
text
@a77 9
#define HI_REGNUM 34		/* Multiple/divide temp */
#define LO_REGNUM 33		/* ... */
#define BADVADDR_REGNUM 35	/* bad vaddr for addressing exception */
#define CAUSE_REGNUM 36		/* describes last exception */
#define PC_REGNUM 37		/* Contains program counter */
#define FP0_REGNUM 38		/* Floating point register 0 (single float) */
#define FPA0_REGNUM (FP0_REGNUM+12)	/* First float argument register */
#define FCRCS_REGNUM 70		/* FP control/status */
#define FCRIR_REGNUM 71		/* FP implementation/revision */
@


1.55
log
@2003-11-15  Andrew Cagney  <cagney@@redhat.com>

	* mips-tdep.c (mips_register_type): Simplify.  Eliminate reference
	to MIPS_REGISTER_TYPE.  Make integer registers signed.  Make IRIX
	n32 registers 64 bit.
	(mips_register_raw_size, mips_register_byte): For pseudo
	registers, use the register's pseudo size and not the
	corresponding raw register's size.
	* config/mips/tm-mips64.h (MIPS_REGISTER_TYPE): Delete macro.
	* config/mips/tm-mips.h (MIPS_REGISTER_TYPE): Delete macro.
	* config/mips/tm-irix6.h: Don't #undef MIPS_REGISTER_TYPE.
	* config/mips/tm-irix5.h (MIPS_REGISTER_TYPE): Delete macro.
@
text
@a91 5
/* Index within `registers' of the first byte of the space for
   register N.  */

#define MIPS_REGISTER_BYTE(N) ((N) * mips_regsize (current_gdbarch))

@


1.54
log
@2003-11-15  Andrew Cagney  <cagney@@redhat.com>

	Replace MIPS_REGSIZE with mips_regsize.
	* mips-tdep.c (mips_regsize): New function.
	* mips-tdep.h (mips_regsize): Declare.
	* mipsnbsd-tdep.h (SIZEOF_STRUCT_FPREG): Update.
	(SIZEOF_STRUCT_REG): Update.
	* mipsnbsd-tdep.c (mipsnbsd_supply_reg): Update.
	(mipsnbsd_fill_reg): Update.
	(mipsnbsd_supply_fpreg): Update.
	(mipsnbsd_fill_fpreg): Update.
	(NBSD_MIPS_JB_ELEMENT_SIZE): Update.
	* mips-tdep.c (mips_register_raw_size): Update.
	(mips_register_type): Update.
	(SIGFRAME_BASE): Update.
	(SIGFRAME_PC_OFF): Update.
	(SIGFRAME_REGSAVE_OFF): Update.
	(SIGFRAME_FPREGSAVE_OFF): Update.
	(SIGFRAME_REG_SIZE): Update.
	(mips32_heuristic_proc_desc): Update.
	(print_gp_register_row): Update.
	(mips_dump_tdep): Do not print MIPS_REGSIZE.
	* irix5-nat.c (supply_gregset): Update.
	(fetch_core_registers): Update.
	* config/mips/tm-mips64.h (MIPS_REGSIZE): Delete macro.
	* config/mips/tm-irix6.h (MIPS_REGISTER_BYTE): Update.
	* config/mips/tm-mips.h (MIPS_REGSIZE): Delete macro.
	(MIPS_REGISTER_BYTE): Update.
	* config/mips/tm-irix5.h (MIPS_REGISTER_BYTE): Update.
@
text
@a96 11
/* Return the GDB type object for the "standard" data type of data in
   register N.  */

#ifndef MIPS_REGISTER_TYPE
#define MIPS_REGISTER_TYPE(N) \
	(((N) >= FP0_REGNUM && (N) < FP0_REGNUM+32) ? builtin_type_float \
	 : ((N) == 32 /*SR*/) ? builtin_type_uint32 \
	 : ((N) >= 70 && (N) <= 89) ? builtin_type_uint32 \
	 : builtin_type_int)
#endif

@


1.53
log
@2003-11-05  Andrew Cagney  <cagney@@redhat.com>

	* mips-tdep.c (mips_dump_tdep): Do not print
	PRINT_EXTRA_FRAME_INFO.
	* config/sparc/tm-sparc.h (DEPRECATED_PRINT_EXTRA_FRAME_INFO):
	Rename PRINT_EXTRA_FRAME_INFO.
	* mips-tdep.c (mips_print_extra_frame_info): Delete function.
	* config/mips/tm-mips.h (PRINT_EXTRA_FRAME_INFO): Delete macro.
	(mips_print_extra_frame_info): Delete declaration.
	* stack.c (frame_info): Use DEPRECATED_PRINT_EXTRA_FRAME_INFO.
@
text
@a47 6
/* The size of a register.  This is predefined in tm-mips64.h.  */

#ifndef MIPS_REGSIZE
#define MIPS_REGSIZE 4
#endif

d95 1
a95 1
#define MIPS_REGISTER_BYTE(N) ((N) * MIPS_REGSIZE)
@


1.52
log
@2003-06-21  Andrew Cagney  <cagney@@redhat.com>

	* mips-tdep.c: Include "reggroups.h" and "sim-regno.h".
	(mips_register_name): Return names for NUM_REGS..2*NUM_REGS
	instead of 0..NUM_REGS.
	(mips_register_reggroup_p): New function.
	(mips_pseudo_register_write): New function.
	(mips_pseudo_register_read): New function.
	(mips_register_raw_size): For NUM_REGS..2*NUM_REGS return the size
	based on the register's type.
	(read_next_frame_reg): Simplify.  Assert that REGNO is a pseudo /
	cooked.
	(mips_get_saved_register): Simplify.  Assert that REGNO is a
	pseudo / cooked.
	(mips_register_byte): New function.  Use MIPS_REGISTER_BYTE.
	(mips_register_type): Replace mips_register_virtual_type.  Map
	NUM_REGS..2*NUM_REGS onto 0..NUM_REGS.  Use MIPS_REGISTER_TYPE
	when available.
	(read_next_frame_reg): Simplify, but handle SP_REGNUM.  Assert
	that the register is cooked / virtual.
	(mips_frame_saved_pc): Fetch the cooked PC, and not the raw PC.
	Only get the extra info when needed.
	(set_reg_offset): Save the offset in NUM_REGS..2*NUM_REGS as well.
	(mips32_heuristic_proc_desc): Fetch the cooked register.
	(heuristic_proc_desc, mips_pop_frame, get_frame_pointer): Ditto.
	(mips_init_extra_frame_info, get_frame_pointer): Ditto.
	(mips_print_register): Use gdbarch_register_type, instead of
	REGISTER_VIRTUAL_TYPE.
	(print_gp_register_row): Use gdbarch_register_type, instead of
	REGISTER_VIRTUAL_TYPE.  Allow for a pseudo / cooked REGNUM.
	(mips_print_registers_info): Assert REGNO is pseodo / cooked.
	Print the pseudo / cooked registers.
	(mips_print_registers_info): Assert REGNO is pseodo / cooked.
	Print the pseudo / cooked registers.
	(mips_xfer_register): Use regcache_cooked_read_part.  Assert that
	REG_NUM is pseudo / cooked.
	(mips_o32_xfer_return_value): Xfer the pseudo / cooked register.
	(mips_n32n64_xfer_return_value): Ditto.
	(mips_stab_reg_to_regnum): Map onto NUM_REGS..2*NUM_REGS.
	(mips_dwarf_dwarf2_ecoff_reg_to_regnum): Ditto.
	(mips_register_sim_regno): New function.
	(mips_gdbarch_init): Set deprecated_register_byte,
	register_group_p, pseudo_register_write, pseudo_register_read,
	register_sim_regno, and num_pseudo_regs.  Set register_type,
	instead of register_virtual_type.
	* Makefile.in (mips-tdep.o): Update dependencies.
	* config/mips/tm-mips64.h (MIPS_REGISTER_TYPE): Rename
	REGISTER_VIRTUAL_TYPE.
	* config/mips/tm-mips.h	(MIPS_REGISTER_TYPE): Ditto.
	* config/mips/tm-irix5.h (MIPS_REGISTER_TYPE): Ditto.
	* config/mips/tm-mips.h (MIPS_REGISTER_BYTE): Rename REGISTER_BYTE.
	* config/mips/tm-irix6.h (MIPS_REGISTER_BYTE): Ditto.
	* config/mips/tm-irix5.h (MIPS_REGISTER_BYTE): Ditto.
@
text
@a132 4
extern void mips_print_extra_frame_info (struct frame_info *frame);
#define	PRINT_EXTRA_FRAME_INFO(fi) \
  mips_print_extra_frame_info (fi)

@


1.52.6.1
log
@merge mainline changes into branch
@
text
@d48 22
d84 9
d98 16
d133 4
d157 3
d171 3
@


1.51
log
@2003-06-19  Andrew Cagney  <cagney@@redhat.com>

	* config/mips/tm-mips.h (REGISTER_CONVERT_TO_TYPE): Delete.
	(REGISTER_CONVERT_FROM_TYPE): Delete.
	(mips_register_convert_to_type): Delete declaration.
	(mips_register_convert_from_type): Delete declaration.
	* linux-nat.h (struct target_ops): Declare opaque.  s/Linux/Linux
	kernel/.
@
text
@d101 1
a101 1
#define REGISTER_BYTE(N) ((N) * MIPS_REGSIZE)
d106 2
a107 2
#ifndef REGISTER_VIRTUAL_TYPE
#define REGISTER_VIRTUAL_TYPE(N) \
@


1.50
log
@2003-06-01  Andrew Cagney  <cagney@@redhat.com>

	* mips-tdep.c (is_mips16_addr): New function.
	(make_mips16_addr, unmake_mips16_addr): New functions.
	(pc_is_mips16, mips_fetch_instruction): Use.
	(gdb_print_insn_mips, mips_breakpoint_from_pc): Use.
	(gdb_print_insn_mips): Eliminate TM_PRINT_INSN_MACH.
	(mips_dump_tdep): Delete print of TM_PRINT_INSN_MACH,
	UNMAKE_MIPS16_ADDR, MAKE_MIPS16_ADDR, IS_MIPS16_ADDR and
	TARGET_MIPS.
	* config/mips/tm-mips.h: Update copyright.
	(TARGET_MIPS, TM_PRINT_INSN_MACH): Delete.
	(DEPRECATED_REGISTER_SIZE, DEPRECATED_REGISTER_BYTES): Delete.
	(IS_MIPS16_ADDR, MAKE_MIPS16_ADDR, UNMAKE_MIPS16_ADDR): Delete.
	* config/mips/tm-irix6.h (DEPRECATED_REGISTER_BYTES): Delete.
	(TM_PRINT_INSN_MACH): Delete.
	* config/mips/tm-irix5.h (DEPRECATED_REGISTER_BYTES): Delete.
@
text
@a113 19
/* All mips targets store doubles in a register pair with the least
   significant register in the lower numbered register.
   If the target is big endian, double register values need conversion
   between memory and register formats.  */

extern void mips_register_convert_to_type (int regnum, 
					   struct type *type,
					   char *buffer);
extern void mips_register_convert_from_type (int regnum, 
					     struct type *type,
					     char *buffer);

#define REGISTER_CONVERT_TO_TYPE(n, type, buffer)	\
  mips_register_convert_to_type ((n), (type), (buffer))

#define REGISTER_CONVERT_FROM_TYPE(n, type, buffer)	\
  mips_register_convert_from_type ((n), (type), (buffer))


@


1.49
log
@2003-05-16  Andrew Cagney  <cagney@@redhat.com>

	* gdbarch.sh (DEPRECATED_REGISTER_BYTES): Rename REGISTER_BYTES.
	* gdbarch.h, gdbarch.c: Re-generate.
	* arm-linux-tdep.c (arm_linux_extract_return_value): Delete reference.
	* TODO (REGISTER_BYTES): Delete reference.
	* alpha-tdep.c (alpha_gdbarch_init): Update.
	* xstormy16-tdep.c (xstormy16_gdbarch_init): Update.
	* x86-64-tdep.c (x86_64_init_abi): Update.
	* vax-tdep.c (vax_gdbarch_init): Update.
	* v850-tdep.c (v850_gdbarch_init): Update.
	* sparc-tdep.c (sparc_gdbarch_init): Update.
	* sh-tdep.c (sh_gdbarch_init): Update.
	* s390-tdep.c (s390_gdbarch_init): Update.
	* rs6000-tdep.c (rs6000_gdbarch_init): Update.
	* ns32k-tdep.c (ns32k_gdbarch_init_32082): Update.
	(ns32k_gdbarch_init_32382): Update.
	* mn10300-tdep.c (mn10300_gdbarch_init): Update.
	* mcore-tdep.c (mcore_gdbarch_init): Update.
	* m68k-tdep.c (m68k_gdbarch_init): Update.
	* m68hc11-tdep.c (m68hc11_gdbarch_init): Update.
	* ia64-tdep.c (ia64_gdbarch_init): Update.
	* i386-tdep.c (i386_gdbarch_init): Update.
	* i386-linux-tdep.c (i386_linux_init_abi): Update.
	* hppa-tdep.c (hppa_gdbarch_init): Update.
	* h8300-tdep.c (h8300_gdbarch_init): Update.
	* frv-tdep.c (frv_gdbarch_init): Update.
	* cris-tdep.c (cris_gdbarch_init): Update.
	* avr-tdep.c (avr_gdbarch_init): Update.
	* arm-tdep.c (arm_gdbarch_init): Update.
	* sparc-tdep.c (sparc_pop_frame): Update.
	* rs6000-tdep.c (rs6000_pop_frame): Update.
	* remote.c (init_remote_state): Update.
	(remote_prepare_to_store): Update.
	* remote-vx.c (vx_prepare_to_store): Update.
	* remote-sds.c (sds_fetch_registers): Update.
	(sds_prepare_to_store): Update.
	* remote-array.c: Update.
	* regcache.c (init_legacy_regcache_descr): Update.
	(init_regcache_descr): Update.
	* mips-tdep.c (mips_eabi_extract_return_value): Update.
	(mips_o64_extract_return_value): Update.
	* irix5-nat.c (fetch_core_registers): Update.
	* irix4-nat.c (fetch_core_registers): Update.
	* i386-tdep.h: Update.
	* hppa-tdep.c (pa_do_registers_info): Update.
	(pa_do_strcat_registers_info): Update.
	* cris-tdep.c (cris_register_bytes_ok): Update.
	* config/nm-gnu.h (CHILD_PREPARE_TO_STORE): Update.
	* config/sparc/tm-sparc.h (DEPRECATED_REGISTER_BYTES): Update.
	* config/sparc/nm-sun4sol2.h (CHILD_PREPARE_TO_STORE): Update.
	* config/sparc/nm-sun4os4.h (CHILD_PREPARE_TO_STORE): Update.
	* config/sparc/nm-nbsd.h (CHILD_PREPARE_TO_STORE): Update.
	* config/sparc/tm-sp64.h (DEPRECATED_REGISTER_BYTES): Update.
	* config/s390/tm-s390.h (DEPRECATED_REGISTER_BYTES): Update.
	* config/pa/tm-hppa64.h (DEPRECATED_REGISTER_BYTES): Update.
	* config/mips/tm-mips.h (DEPRECATED_REGISTER_BYTES): Update.
	* config/mips/tm-irix6.h (DEPRECATED_REGISTER_BYTES): Update.
	* config/mips/tm-irix5.h (DEPRECATED_REGISTER_BYTES): Update.
	* config/m68k/tm-sun3.h (DEPRECATED_REGISTER_BYTES): Update.
	(REGISTER_BYTES_OK): Update.
	* config/m68k/nm-sun3.h (CHILD_PREPARE_TO_STORE): Update.
	* config/ia64/tm-ia64.h (DEPRECATED_REGISTER_BYTES): Update.

Index: doc/ChangeLog
2003-05-16  Andrew Cagney  <cagney@@redhat.com>

	* gdbint.texinfo (Target Architecture Definition): Replace
	REGISTER_BYTES with DEPRECATED_REGISTER_BYTES.  Fix typo,
	DEPRECATED_REGISTER_SIZE instead of REGISTER_BYTE.

Index: mi/ChangeLog
2003-05-16  Andrew Cagney  <cagney@@redhat.com>

	* mi-main.c (mi_setup_architecture_data):
@
text
@d4 1
a4 1
   1997, 1998, 1999, 2000, 2002 Free Software Foundation, Inc.
d48 1
a48 9
/* Say how long (ordinary) registers are.  This is a piece of bogosity
   used in push_word and a few other places; REGISTER_RAW_SIZE is the
   real way to know how big a register is.  */

#define DEPRECATED_REGISTER_SIZE 4

/* The size of a register.  This is predefined in tm-mips64.h.  We
   can't use DEPRECATED_REGISTER_SIZE because that is used for various other
   things.  */
a97 5
/* Total amount of space needed to store our copies of the machine's
   register state, the array `registers'.  */

#define DEPRECATED_REGISTER_BYTES (NUM_REGS*MIPS_REGSIZE)

a171 4
/* Select the default mips disassembler */

#define TM_PRINT_INSN_MACH 0

a182 4
#ifndef TARGET_MIPS
#define TARGET_MIPS
#endif

a187 6

/* MIPS16 function addresses are odd (bit 0 is set).  Here are some
   macros to test, set, or clear bit 0 of addresses.  */
#define IS_MIPS16_ADDR(addr)	 ((addr) & 1)
#define MAKE_MIPS16_ADDR(addr)	 ((addr) | 1)
#define UNMAKE_MIPS16_ADDR(addr) ((addr) & ~1)
@


1.48
log
@2003-05-03  Andrew Cagney  <cagney@@redhat.com>

	* gdbarch.sh (DEPRECATED_REGISTER_SIZE): Rename REGISTER_SIZE.
	(DEPRECATED_SIZEOF_CALL_DUMMY_WORDS): Rename
	SIZEOF_CALL_DUMMY_WORDS.
	(DEPRECATED_CALL_DUMMY_WORDS): Rename CALL_DUMMY_WORDS.
	(DEPRECATED_FIX_CALL_DUMMY): Rename FIX_CALL_DUMMY.
	(DEPRECATED_CALL_DUMMY_BREAKPOINT_OFFSET): Rename
	CALL_DUMMY_BREAKPOINT_OFFSET.
	(DEPRECATED_CALL_DUMMY_START_OFFSET): Rename
	CALL_DUMMY_START_OFFSET.
	(DEPRECATED_CALL_DUMMY_LENGTH): Rename CALL_DUMMY_LENGTH.
	* gdbarch.h, gdbarch.c: Re-generate.
	* alpha-tdep.c, alphafbsd-tdep.c, arm-linux-tdep.c: Update.
	* arm-tdep.c, avr-tdep.c, breakpoint.c, cris-tdep.c: Update.
	* dummy-frame.c, dummy-frame.h, frv-tdep.c, gdbarch.c: Update.
	* gdbarch.h, gdbarch.sh, h8300-tdep.c, hppa-tdep.c: Update.
	* i386-tdep.c, ia64-tdep.c, infcall.c, inferior.h: Update.
	* m68hc11-tdep.c, m68k-tdep.c, mcore-tdep.c: Update.
	* mips-tdep.c, mn10300-tdep.c, ns32k-tdep.c: Update.
	* rs6000-tdep.c, s390-tdep.c, sh-tdep.c, sol-thread.c: Update.
	* sparc-tdep.c, target.c, v850-tdep.c, valops.c: Update.
	* vax-tdep.c, x86-64-tdep.c, xstormy16-tdep.c: Update.
	* config/ia64/tm-ia64.h, config/m68k/tm-vx68.h: Update.
	* config/mips/tm-mips.h, config/pa/nm-hppah.h: Update.
	* config/pa/tm-hppa.h, config/pa/tm-hppa64.h: Update.
	* config/s390/tm-s390.h, config/sparc/tm-sp64.h: Update.
	* config/sparc/tm-sparc.h: Update.

Index: doc/ChangeLog
2003-05-03  Andrew Cagney  <cagney@@redhat.com>

	* gdbint.texinfo (Target Architecture Definition): Make
	CALL_DUMMY_WORDS, SIZEOF_CALL_DUMMY_WORDS, CALL_DUMMY_LENGTH,
	FIX_CALL_DUMMY, CALL_DUMMY_BREAKPOINT_OFFSET and
	CALL_DUMMY_BREAKPOINT_OFFSET deprecated.

Index: mi/ChangeLog
2003-05-03  Andrew Cagney  <cagney@@redhat.com>

	* mi-main.c (mi_cmd_data_write_register_values): Replace
	REGISTER_SIZE with DEPRECATED_REGISTER_SIZE.

Index: testsuite/ChangeLog
2003-05-03  Andrew Cagney  <cagney@@redhat.com>

	* gdb.base/watchpoint.exp: Rename CALL_DUMMY_BREAKPOINT_OFFSET to
	DEPRECATED_CALL_DUMMY_BREAKPOINT_OFFSET in comments.
@
text
@d109 1
a109 1
#define REGISTER_BYTES (NUM_REGS*MIPS_REGSIZE)
@


1.47
log
@Print correct register names for MIPS targets using n32/n64 ABIs.
@
text
@d52 1
a52 1
#define REGISTER_SIZE 4
d55 1
a55 1
   can't use REGISTER_SIZE because that is used for various other
@


1.47.8.1
log
@2003-05-18  Mark Kettenis  <kettenis@@gnu.org>

	Merge from mainline.
	* i386-tdep.h (I386_SIZEOF_GREGS, I386_SIZEOF_FREGS,
	I386_SIZEOF_XREGS): Remove defenitions.
	(IS_FP_REGNUM, IS_SSE_REGNUM): Remove definitions.
	* i386-tdep.c (i386_gdbarch_init): Don't set register_bytes,
	register_size, call_dummy_words and sizeof_call_dummy.
	* i386-linux-tdep.c (i386_linux_init_abi): Don't set register_bytes.
	* x86-64-tdep.c (x86_64_init_abi): Don't set register_bytes and
	register_size.
	(x86_64_register_bytes): Remove variable.
	(_initialize_x86_64_tdep): Remove function.

	* i386-linux-tdep.c (i386_linux_sigcontext_addr): Call read_memory
	with correct arguments.
	* config/i386/x86-64linux.mt (TDEPFILES): Add i386-linux-tdep.o.
@
text
@d52 1
a52 1
#define DEPRECATED_REGISTER_SIZE 4
d55 1
a55 1
   can't use DEPRECATED_REGISTER_SIZE because that is used for various other
d109 1
a109 1
#define DEPRECATED_REGISTER_BYTES (NUM_REGS*MIPS_REGSIZE)
@


1.46
log
@Multiarch NUM_REGS for MIPS.
@
text
@d62 2
a63 2
/* Initializer for an array of names of registers.
   There should be NUM_REGS strings in this initializer.  */
d67 1
a67 5
    {	"zero",	"at",	"v0",	"v1",	"a0",	"a1",	"a2",	"a3", \
	"t0",	"t1",	"t2",	"t3",	"t4",	"t5",	"t6",	"t7", \
	"s0",	"s1",	"s2",	"s3",	"s4",	"s5",	"s6",	"s7", \
	"t8",	"t9",	"k0",	"k1",	"gp",	"sp",	"s8",	"ra", \
	"sr",	"lo",	"hi",	"bad",	"cause","pc",    \
@


1.45
log
@2002-11-21  Andrew Cagney  <cagney@@redhat.com>

	* mips-tdep.c (mips_dump_tdep): Delete references to
	GDB_TARGET_UNMASK_DISAS_PC and GDB_TARGET_MASK_DISAS_PC.
	* config/mips/tm-mips.h (GDB_TARGET_MASK_DISAS_PC): Delete macro.
	(GDB_TARGET_UNMASK_DISAS_PC): Delete macro.
	* printcmd.c (build_address_symbolic): Delete calls to
	GDB_TARGET_UNMASK_DISAS_PC and GDB_TARGET_MASK_DISAS_PC.
	(address_info): Ditto.
	Fix PR gdb/773.
@
text
@a61 6
/* Number of machine registers */

#ifndef NUM_REGS
#define NUM_REGS 90
#endif

@


1.44
log
@2002-09-17  Andrew Cagney  <ac131313@@redhat.com>

	* NEWS: Mention that MIPS $fp behavior changed.
	* mipsnbsd-tdep.c (mipsnbsd_cannot_fetch_register): Delete
 	reference to FP_REGNUM.
	(mipsnbsd_cannot_store_register): Ditto.
	* mips-linux-nat.c: Update copyright.
 	(mips_linux_cannot_fetch_register): Delete reference to FP_REGNUM.
	(mips_linux_cannot_store_register): Ditto.
	* mips-linux-tdep.c (supply_gregset): Ditto.  Update copyright.
	* config/mips/tm-mips.h: Update copyright.
 	(FP_REGNUM): Delete macro.
	(MIPS_REGISTER_NAMES): Replace "fp" with "".
	* config/mips/tm-irix6.h (FP_REGNUM): Delete macro.
	* mips-tdep.c (mips_gdbarch_init): Set read_fp to mips_read_sp.
	(mips_r3041_reg_names, mips_r3051_reg_names)
 	(mips_r3081_reg_names): Replace "fp" with "".
	Fix PR gdb/480.
@
text
@a41 8
/* PC should be masked to remove possible MIPS16 flag */
#if !defined (GDB_TARGET_MASK_DISAS_PC)
#define GDB_TARGET_MASK_DISAS_PC(addr) UNMAKE_MIPS16_ADDR(addr)
#endif
#if !defined (GDB_TARGET_UNMASK_DISAS_PC)
#define GDB_TARGET_UNMASK_DISAS_PC(addr) MAKE_MIPS16_ADDR(addr)
#endif

@


1.44.4.1
log
@Merge drow-cplus-branch to:
  cvs rtag -D 2003-12-14 00:00:00 UTC drow-cplus-merge-20031214 gdb+dejagnu
@
text
@d4 1
a4 1
   1997, 1998, 1999, 2000, 2002, 2003 Free Software Foundation, Inc.
d42 8
d56 40
d110 9
d124 40
d183 4
d203 4
d211 3
d218 4
d228 6
d235 3
@


1.44.2.1
log
@2002-12-23  David Carlton  <carlton@@math.stanford.edu>

	* Merge from mainline; tag is carlton_dictionary-20021223-merge.
@
text
@d42 8
d68 6
@


1.44.2.2
log
@2003-04-16  David Carlton  <carlton@@bactrian.org>

	* Merge with mainline; tag is carlton_dictionary-20030416-merge.
@
text
@d62 2
a63 2
/* Initializer for an array of names for registers 32 and above.
   There should be NUM_REGS-32 strings in this initializer.  */
d67 5
a71 1
    {	"sr",	"lo",	"hi",	"bad",	"cause","pc",    \
@


1.44.2.3
log
@2003-05-23  David Carlton  <carlton@@bactrian.org>

	* Merge with mainline; tag is carlton_dictionary-20030523-merge.
@
text
@d52 1
a52 1
#define DEPRECATED_REGISTER_SIZE 4
d55 1
a55 1
   can't use DEPRECATED_REGISTER_SIZE because that is used for various other
d109 1
a109 1
#define DEPRECATED_REGISTER_BYTES (NUM_REGS*MIPS_REGSIZE)
@


1.44.2.4
log
@2003-06-27  David Carlton  <carlton@@kealia.com>

	* Merge with mainline; tag is carlton_dictionary-20030627-merge.
@
text
@d4 1
a4 1
   1997, 1998, 1999, 2000, 2002, 2003 Free Software Foundation, Inc.
d48 9
a56 1
/* The size of a register.  This is predefined in tm-mips64.h.  */
d106 5
d114 1
a114 1
#define MIPS_REGISTER_BYTE(N) ((N) * MIPS_REGSIZE)
d119 2
a120 2
#ifndef MIPS_REGISTER_TYPE
#define MIPS_REGISTER_TYPE(N) \
d127 19
d185 4
d200 4
d209 6
@


1.44.2.5
log
@2003-11-11  David Carlton  <carlton@@kealia.com>

	* Merge with mainline; tag is carlton-dictionary-20031111-merge.
@
text
@d133 4
@


1.44.2.6
log
@2003-12-15  David Carlton  <carlton@@kealia.com>

	* Merge with mainline; tag is carlton_dictionary-20031215-merge.
	* cp-support.c (class_name_from_physname): Add DMGL_PARAMS to call
	to cplus_demangle.
	(method_name_from_physname): Ditto.
@
text
@d48 22
d84 9
d98 16
d153 3
d167 3
@


1.43
log
@2002-08-21  Michael Snyder  <msnyder@@redhat.com>

	* mips-tdep.c (DEFAULT_MIPS_TYPE): Delete unused macro.
	* config/mips/tm-mips.h (DEFAULT_MIPS_TYPE): Delete unused macro.
	* config/mips/tm-embed.h (DEFAULT_MIPS_TYPE): Delete unused macro.
@
text
@d2 4
a5 3
   Copyright 1986, 1987, 1989, 1991, 1992, 1993, 1994, 1995, 1996, 1997,
   1998, 1999, 2000
   Free Software Foundation, Inc.
d90 1
a90 1
	"fsr",  "fir",  "fp",	"", \
a118 1
#define FP_REGNUM 72		/* Pseudo register that contains true address of executing stack frame */
@


1.42
log
@2002-08-20  Michael Snyder  <msnyder@@redhat.com>

	* mips-tdep.c (MSYMBOL_IS_SPECIAL, MSYMBOL_SIZE): These are only
	used locally, so move them from the target machine header to here.
	(mips_set_processor_type, mips_register_name, mips32_next_pc,
	mips16_next_pc, cached_proc_desc, mips_set_processor_type):
	Make static.
	* config/mips/tm-mips.h (MSYMBOL_IS_SPECIAL, MSYMBOL_SIZE): Delete.
@
text
@a48 5
/* The name of the usual type of MIPS processor that is in the target
   system.  */

#define DEFAULT_MIPS_TYPE "generic"

@


1.41
log
@2002-08-20  Michael Snyder  <msnyder@@redhat.com>

        * mips-tdep.c (mips_in_return_stub): Make static.
	(mips_gdbarch_init): Set in_solib_return_trampoline.
	* config/mips/tm-mips.h (IN_SOLIB_RETURN_TRAMPOLINE): Delete.
@
text
@a211 1

a240 24
/* Macros for setting and testing a bit in a minimal symbol that
   marks it as 16-bit function.  The MSB of the minimal symbol's
   "info" field is used for this purpose. This field is already
   being used to store the symbol size, so the assumption is
   that the symbol size cannot exceed 2^31.

   ELF_MAKE_MSYMBOL_SPECIAL
   tests whether an ELF symbol is "special", i.e. refers
   to a 16-bit function, and sets a "special" bit in a 
   minimal symbol to mark it as a 16-bit function
   MSYMBOL_IS_SPECIAL   tests the "special" bit in a minimal symbol
   MSYMBOL_SIZE         returns the size of the minimal symbol, i.e.
   the "info" field with the "special" bit masked out
 */

#define MSYMBOL_IS_SPECIAL(msym) \
  mips_msymbol_is_special (msym)
#define MSYMBOL_SIZE(msym) \
  mips_msymbol_size (msym)
struct minimal_symbol;
extern int mips_msymbol_is_special (struct minimal_symbol *msym);
extern long mips_msymbol_size (struct minimal_symbol *msym);


a242 1

@


1.40
log
@2002-08-20  Michael Snyder  <msnyder@@redhat.com>

	* mips-tdep.c (mips_skip_stub, mips_in_call_stub): Make static.
	(mips_gdbarch_init): Set skip_trampoline_code,
	in_solib_call_trampoline.
	* config/mips/tm-mips.h (REGISTER_NAME): Delete.
	(IN_SOLIB_CALL_TRAMPOLINE, SKIP_TRAMPOLINE_CODE): Delete.
@
text
@a220 1
#define IN_SOLIB_RETURN_TRAMPOLINE(pc, name)	mips_in_return_stub (pc, name)
a221 3
extern int mips_in_call_stub (CORE_ADDR pc, char *name);
extern int mips_in_return_stub (CORE_ADDR pc, char *name);
extern CORE_ADDR mips_skip_stub (CORE_ADDR pc);
@


1.39
log
@2002-08-19  Michael Snyder  <msnyder@@redhat.com>

	* config/mips/tm-mips.h (ELF_MAKE_MSYMBOL_SPECIAL): Delete.
	(MSYMBOL_IS_SPECIAL, MSYMBOL_SIZE): Change into functions.
	(FIX_CALL_DUMMY, PUSH_RETURN_ADDRESS, PUSH_DUMMY_FRAME,
	POP_FRAME, INIT_EXTRA_FRAME_INFO): Delete.
	(CALL_DUMMY_START_OFFSET, CALL_DUMMY_BREAKPOINT_OFFSET,
	CALL_DUMMY_ADDRESS): Delete.
	* mips-tdep.c (mips_elf_make_msymbol_special, mips_msymbol_size,
	mips_msymbol_is_special, mips_fix_call_dummy): New functions.
	(mips_gdbarch_init): Set elf_make_msymbol_special, pop_frame,
	push_dummy_frame, fix_call_dummy, init_extra_frame_info,
	push_return_address.
	(mips_register_raw_size, mips_eabi_use_struct_convention,
	mips_n32n64_use_struct_convention, mips_o32_use_struct_convention,
	mips_o32_reg_struct_has_addr, mips_frame_saved_pc, mips_frame_chain,
	mips_init_extra_frame_info, mips_eabi_push_arguments,
	mips_n32n64_push_arguments, mips_push_return_address,
	mips_push_dummy_frame,	mips_pop_frame,	mips_skip_prologue,
	mips_breakpoint_from_pc, mips_call_dummy_address): Make	static.
@
text
@a79 5
/* Given the register index, return the name of the corresponding
   register. */
extern const char *mips_register_name (int regnr);
#define REGISTER_NAME(i) mips_register_name (i)

a220 1
#define IN_SOLIB_CALL_TRAMPOLINE(pc, name)	mips_in_call_stub (pc, name)
a221 1
#define SKIP_TRAMPOLINE_CODE(pc)		mips_skip_stub (pc)
@


1.38
log
@2002-08-19  Michael Snyder  <msnyder@@redhat.com>

	* mips-tdep.c (mips_frame_num_args): New function.
	(mips_gdbarch_init): Set frame_chain, frameless_function_invocation,
	frame_saved_pc, frame_args_address, frame_locals_address,
	frame_num_args, and frame_args_skip.
	* config/mips/tm-mips.h (FRAME_CHAIN, FRAMELESS_FUNCTION_INVOCATION,
	FRAME_SAVED_PC, FRAME_ARGS_ADDRESS, FRAME_LOCALS_ADDRESS,
	FRAME_NUM_ARGS, FRAME_ARGS_SKIP): Delete.
	* config/mips/tm-mipsv4.h (FRAME_CHAIN_VALID): Delete.
@
text
@a173 33
/* Things needed for making the inferior call functions.  */

/* Stack must be aligned on 32-bit boundaries when synthesizing
   function calls.  We don't need STACK_ALIGN, PUSH_ARGUMENTS will
   handle it. */

extern CORE_ADDR mips_push_return_address (CORE_ADDR pc, CORE_ADDR sp);
#define PUSH_RETURN_ADDRESS(PC, SP) (mips_push_return_address ((PC), (SP)))

/* Push an empty stack frame, to record the current PC, etc.  */

#define PUSH_DUMMY_FRAME 	mips_push_dummy_frame()
extern void mips_push_dummy_frame (void);

/* Discard from the stack the innermost frame, restoring all registers.  */

#define POP_FRAME		mips_pop_frame()
extern void mips_pop_frame (void);

#define CALL_DUMMY_START_OFFSET (0)

#define CALL_DUMMY_BREAKPOINT_OFFSET (0)

/* When calling functions on Irix 5 (or any MIPS SVR4 ABI compliant
   platform), $t9 ($25) (Dest_Reg) contains the address of the callee
   (used for PIC).  It doesn't hurt to do this on other systems; $t9
   will be ignored.  */
#define FIX_CALL_DUMMY(dummyname, start_sp, fun, nargs, args, rettype, gcc_p) \
    write_register(T9_REGNUM, fun)

#define CALL_DUMMY_ADDRESS() (mips_call_dummy_address ())
extern CORE_ADDR mips_call_dummy_address (void);

a192 4
extern void mips_init_extra_frame_info (int fromleaf, struct frame_info *);
#define INIT_EXTRA_FRAME_INFO(fromleaf, fci) \
  mips_init_extra_frame_info(fromleaf, fci)

a267 8
#define ELF_MAKE_MSYMBOL_SPECIAL(sym,msym) \
 { \
  if (((elf_symbol_type *)(sym))->internal_elf_sym.st_other == STO_MIPS16) { \
    MSYMBOL_INFO (msym) = (char *) (((long) MSYMBOL_INFO (msym)) | 0x80000000); \
    SYMBOL_VALUE_ADDRESS (msym) |= 1; \
  } \
 }

d269 1
a269 1
  (((long) MSYMBOL_INFO (msym) & 0x80000000) != 0)
d271 4
a274 1
  ((long) MSYMBOL_INFO (msym) & 0x7fffffff)
@


1.37
log
@
2002-08-20  Michael Snyder  <msnyder@@redhat.com>

	* config/mips/tm-mips.h (STORE_STRUCT_RETURN): Delete.
	(EXTRACT_STRUCT_VALUE_ADDRESS): Delete.
	* mips-tdep.c (mips_store_struct_return): New function.
	(mips_extract_struct_value_address): New function.
	(mips_gdbarch_init): Set store_struct_return and
	extract_struct_value_address.
@
text
@a173 40
/* Describe the pointer in each stack frame to the previous stack frame
   (its caller).  */

/* FRAME_CHAIN takes a frame's nominal address
   and produces the frame's chain-pointer. */

#define FRAME_CHAIN(thisframe) (CORE_ADDR) mips_frame_chain (thisframe)
extern CORE_ADDR mips_frame_chain (struct frame_info *);

/* Define other aspects of the stack frame.  */


/* A macro that tells us whether the function invocation represented
   by FI does not have a frame on the stack associated with it.  If it
   does not, FRAMELESS is set to 1, else 0.  */
/* We handle this differently for mips, and maybe we should not */

#define FRAMELESS_FUNCTION_INVOCATION(FI)  (0)

/* Saved Pc.  */

#define FRAME_SAVED_PC(FRAME)	(mips_frame_saved_pc(FRAME))
extern CORE_ADDR mips_frame_saved_pc (struct frame_info *);

#define FRAME_ARGS_ADDRESS(fi)	(fi)->frame

#define FRAME_LOCALS_ADDRESS(fi) (fi)->frame

/* Return number of args passed to a frame.
   Can return -1, meaning no way to tell.  */

#define FRAME_NUM_ARGS(fi)	(mips_frame_num_args(fi))
extern int mips_frame_num_args (struct frame_info *);

/* Return number of bytes at start of arglist that are not really args.  */

#define FRAME_ARGS_SKIP 0



@


1.36
log
@2002-08-18  Andrew Cagney  <ac131313@@redhat.com>
* config/mips/tm-mips.h (STORE_RETURN_VALUE): Delete macro.
(DEPRECATED_EXTRACT_RETURN_VALUE): Delete macro.
* mips-tdep.c (mips_gdbarch_init): Set store_return_value and
deprecated_extract_return_value.
(mips_o32_push_arguments, mips_o64_push_arguments): Clone and
rename mips_o32o64_push_arguments.
(mips_gdbarch_init): Update.
(mips_extract_return_value): Delete.
(mips_o32_extract_return_value): Clone mips_extract_return_value.
(mips_o64_extract_return_value): Clone mips_extract_return_value.
(mips_eabi_extract_return_value): Clone mips_extract_return_value.
(mips_n32n64_extract_return_value): Clone
mips_extract_return_value.
(mips_store_return_value): Delete.
(mips_o32_store_return_value): Clone mips_store_return_value.
(mips_o64_store_return_value): Clone mips_store_return_value.
(mips_eabi_store_return_value): Clone mips_store_return_value.
(mips_n32n64_store_return_value): Clone mips_store_return_value.
@
text
@a172 18
/* Store the address of the place in which to copy the structure the
   subroutine will return.  Handled by mips_push_arguments.  */

#define STORE_STRUCT_RETURN(addr, sp)
/**/

/* Extract from an array REGBUF containing the (raw) register state
   the address in which a function should return its structure value,
   as a CORE_ADDR (or an expression that can be used as one).  */
/* The address is passed in a0 upon entry to the function, but when
   the function exits, the compiler has copied the value to v0.  This
   convention is specified by the System V ABI, so I think we can rely
   on it.  */

#define DEPRECATED_EXTRACT_STRUCT_VALUE_ADDRESS(REGBUF) \
  (extract_address (REGBUF + REGISTER_BYTE (V0_REGNUM), \
		    REGISTER_RAW_SIZE (V0_REGNUM)))

@


1.35
log
@2002-08-15  Michael Snyder  <msnyder@@redhat.com>

	* config/mips/tm-mips.h (FUNCTION_START_OFFSET, IN_SIGTRAMP,
	REGISTER_VIRTUAL_SIZE): Delete.
	(REGISTER_CONVERT_FROM_TYPE, REGISTER_CONVERT_TO_TYPE): Convert
	from macros to functions.

	* mips-tdep.c (mips_register_convert_from_type,
        mips_register_convert_to_type): New functions.
        (mips_gdbarch_init): Set up function_start_offset,
	register_virtual_size, pc_in_sigtramp.
@
text
@a179 15
   a function return value of type TYPE, and copy that, in virtual format,
   into VALBUF.  XXX floats */

#define DEPRECATED_EXTRACT_RETURN_VALUE(TYPE,REGBUF,VALBUF) \
  mips_extract_return_value(TYPE, REGBUF, VALBUF)
extern void mips_extract_return_value (struct type *, char[], char *);

/* Write into appropriate registers a function return value
   of type TYPE, given in virtual format.  */

#define STORE_RETURN_VALUE(TYPE,VALBUF) \
  mips_store_return_value(TYPE, VALBUF)
extern void mips_store_return_value (struct type *, char *);

/* Extract from an array REGBUF containing the (raw) register state
@


1.34
log
@2002-08-15  Michael Snyder  <msnyder@@redhat.com>

	* mips-tdep.c (mips_do_registers_info): Make static.
        (mips_gdbarch_init): Insert mips_do_registers_info into gdbarch.
        * config/mips/tm-mips.h (DO_REGISTERS_INFO): Delete.
@
text
@a53 5
/* Offset from address of function to start of its code.
   Zero on most machines.  */

#define FUNCTION_START_OFFSET 0

a59 5
/* Are we currently handling a signal */

extern int in_sigtramp (CORE_ADDR, char *);
#define IN_SIGTRAMP(pc, name)	in_sigtramp(pc, name)

a143 5
/* Number of bytes of storage in the program's representation
   for register N. */

#define REGISTER_VIRTUAL_SIZE(N) TYPE_LENGTH (REGISTER_VIRTUAL_TYPE (N))

d160 12
a171 21
#define REGISTER_CONVERT_TO_TYPE(n, type, buffer)			\
  do {if (TARGET_BYTE_ORDER == BFD_ENDIAN_BIG				\
	  && REGISTER_RAW_SIZE (n) == 4					\
	  && (n) >= FP0_REGNUM && (n) < FP0_REGNUM + 32			\
	  && TYPE_CODE(type) == TYPE_CODE_FLT				\
	  && TYPE_LENGTH(type) == 8) {					\
        char __temp[4];							\
	memcpy (__temp, ((char *)(buffer))+4, 4);			\
	memcpy (((char *)(buffer))+4, (buffer), 4); 			\
	memcpy (((char *)(buffer)), __temp, 4); }} while (0)

#define REGISTER_CONVERT_FROM_TYPE(n, type, buffer)			\
  do {if (TARGET_BYTE_ORDER == BFD_ENDIAN_BIG				\
	  && REGISTER_RAW_SIZE (n) == 4					\
	  && (n) >= FP0_REGNUM && (n) < FP0_REGNUM + 32			\
	  && TYPE_CODE(type) == TYPE_CODE_FLT				\
	  && TYPE_LENGTH(type) == 8) {					\
        char __temp[4];							\
	memcpy (__temp, ((char *)(buffer))+4, 4);			\
	memcpy (((char *)(buffer))+4, (buffer), 4); 			\
	memcpy (((char *)(buffer)), __temp, 4); }} while (0)
@


1.33
log
@2002-08-15  Michael Snyder  <msnyder@@redhat.com>

	* mips-tdep.c (mips_gdbarch_init): Set gdbarch read_sp to
	mips_read_sp.
        * config/mips/tm-mips.h (TARGET_READ_SP): Delete.
@
text
@a143 6
/* Define DO_REGISTERS_INFO() to do machine-specific formatting
   of register dumps. */

#define DO_REGISTERS_INFO(_regnum, fp) mips_do_registers_info(_regnum, fp)
extern void mips_do_registers_info (int, int);

@


1.32
log
@2002-08-15  Michael Snyder  <msnyder@@redhat.com>

	* config/mips/tm-mips.h (REGISTER_CONVERT_TO_VIRTUAL,
	REGISTER_CONVERT_TO_RAW, REGISTER_CONVERTIBLE,
	MAX_REGISTER_RAW_SIZE, MAX_REGISTER_VIRTUAL_SIZE): Delete.
	* mips-tdep.c (mips_gdbarch_init): Set the above in the gdbarch.
	(mips_register_convertible, mips_register_convert_to_virtual,
	mips_register_convert_to_raw): Make static.
@
text
@a53 4
/* Remove useless bits from the stack pointer.  */

#define TARGET_READ_SP() ADDR_BITS_REMOVE (read_register (SP_REGNUM))

@


1.31
log
@Oversights in previous checkin.
@
text
@a163 20
/* Covert between the RAW and VIRTUAL registers.

   Some MIPS (SR, FSR, FIR) have a `raw' size of MIPS_REGSIZE but are
   really 32 bit registers.  This is a legacy of the 64 bit MIPS GDB
   protocol which transfers 64 bits for 32 bit registers. */

extern int mips_register_convertible (int reg_nr);
#define REGISTER_CONVERTIBLE(N) (mips_register_convertible ((N)))
     

void mips_register_convert_to_virtual (int reg_nr, struct type *virtual_type,
				       char *raw_buf, char *virt_buf);
#define REGISTER_CONVERT_TO_VIRTUAL(N,VIRTUAL_TYPE,RAW_BUF,VIRT_BUF) \
  mips_register_convert_to_virtual (N,VIRTUAL_TYPE,RAW_BUF,VIRT_BUF)

void mips_register_convert_to_raw (struct type *virtual_type, int reg_nr,
				   char *virt_buf, char *raw_buf);
#define REGISTER_CONVERT_TO_RAW(VIRTUAL_TYPE,N,VIRT_BUF,RAW_BUF) \
  mips_register_convert_to_raw (VIRTUAL_TYPE,N,VIRT_BUF,RAW_BUF)

a167 8

/* Largest value REGISTER_RAW_SIZE can have.  */

#define MAX_REGISTER_RAW_SIZE 8

/* Largest value REGISTER_VIRTUAL_SIZE can have.  */

#define MAX_REGISTER_VIRTUAL_SIZE 8
@


1.30
log
@	* mips-tdep.c (mips_find_saved_regs): Make static.
	(mips_frame_init_saved_regs): New function.
	(mips_gdbarch_init): Setup FRAME_INIT_SAVED_REGS method.
	* config/mips/tm-mips.h (FRAME_INIT_SAVED_REGS): Delete macro.
	(mips_find_saved_regs): Delete declaration.
@
text
@a314 5
extern CORE_ADDR mips_push_arguments (int, struct value **, CORE_ADDR, int,
				      CORE_ADDR);
#define PUSH_ARGUMENTS(nargs, args, sp, struct_return, struct_addr) \
  (mips_push_arguments((nargs), (args), (sp), (struct_return), (struct_addr)))

@


1.29
log
@2002-08-06  Michael Snyder  <msnyder@@redhat.com>

	* config/mips/tm-mips.h: Remove #define USE_STRUCT_CONVENTION.
@
text
@a306 13
/* Put here the code to store, into a struct frame_saved_regs,
   the addresses of the saved registers of frame described by FRAME_INFO.
   This includes special registers such as pc and fp saved in special
   ways in the stack frame.  sp is even more special:
   the address we return for it IS the sp for the next frame.  */

#define FRAME_INIT_SAVED_REGS(frame_info) \
  do { \
    if ((frame_info)->saved_regs == NULL) \
      mips_find_saved_regs (frame_info); \
    (frame_info)->saved_regs[SP_REGNUM] = (frame_info)->frame; \
  } while (0)
extern void mips_find_saved_regs (struct frame_info *);
@


1.28
log
@* gdbarch.sh (REGISTER_NAME): Change return type a constant string
pointer.
* gdbarch.h, gdbarch.c: Regenerate.
* config/mips/tm-mips.h (mips_register_name): Update.
* i386-tdep.h (i386_register_name): Update.
* mips-tdep.c (mips_register_name): Update
* alpha-tdep.c (alpha_register_name): Update.
* arch-utils.c (legacy_register_name): Update.
* arch-utils.h (legacy_register_name): Update.
* avr-tdep.c (avr_register_name): Update.
* ia64-tdep.c (ia64_register_name): Update.
* i386-tdep.c (i386_register_name): Update.
* sparc-tdep.c (sparc32_register_name): Update.
(sparc64_register_name): Update.
(sparclite_register_name): Update.
(sparclet_register_name):
* sh-tdep.c (sh_generic_register_name): Update.
(sh_sh_register_name): Update.
(sh_sh3_register_name): Update.
(sh_sh3e_register_name): Update.
(sh_sh_dsp_register_name): Update.
(sh_sh3_dsp_register_name): Update.
(sh_sh4_register_name): Update.
(sh_sh64_register_name): Update.
* s390-tdep.c (s390_register_name): Update.
* rs6000-tdep.c (rs6000_register_name): Update.
* ns32k-tdep.c (ns32k_register_name_32082): Update.
(ns32k_register_name_32382): Update.
* d10v-tdep.c (d10v_ts2_register_name): Update.
(d10v_ts3_register_name): Update.
* xstormy16-tdep.c (xstormy16_register_name): Update.
* vax-tdep.c (vax_register_name): Update.
* v850-tdep.c (v850_register_name): Update.
* m68hc11-tdep.c (m68hc11_register_name): Update.
* mn10300-tdep.c (mn10300_generic_register_name): Update.
(am33_register_name): Update.
@
text
@a267 2
extern use_struct_convention_fn mips_use_struct_convention;
#define USE_STRUCT_CONVENTION(gcc_p, type) mips_use_struct_convention (gcc_p, type)
@


1.27
log
@+	* gdbarch.sh (DEPRECATED_EXTRACT_RETURN_VALUE): Rename
+	EXTRACT_RETURN_VALUE.
+	(DEPRECATED_EXTRACT_STRUCT_VALUE_ADDRESS): Rename
+	EXTRACT_STRUCT_VALUE_ADDRESS.
+	* gdbarch.h, gdbarch.c: Regenerate.
+
+	* values.c (value_being_returned): Handle
+	DEPRECATED_EXTRACT_STRUCT_VALUE_ADDRESS.
+	(EXTRACT_RETURN_VALUE): Define as DEPRECATED_EXTRACT_RETURN_VALUE.
+
+	* arm-linux-tdep.c (arm_linux_init_abi): Update.
+	* arm-tdep.c (arm_gdbarch_init): Update.
+	* avr-tdep.c (avr_gdbarch_init): Update.
+	* cris-tdep.c (cris_gdbarch_init): Update.
+	* d10v-tdep.c (d10v_gdbarch_init): Update.
+	* ia64-tdep.c (ia64_gdbarch_init): Update.
+	* m68hc11-tdep.c (m68hc11_gdbarch_init): Update.
+	* rs6000-tdep.c (rs6000_gdbarch_init): Update.
+	* s390-tdep.c (s390_gdbarch_init): Update.
+	* sh-tdep.c (sh_gdbarch_init): Update.
+	* s390-tdep.c (s390_gdbarch_init): Update.
+	* sparc-tdep.c (sparc_gdbarch_init): Update.
+	* ns32k-tdep.c (ns32k_gdbarch_init): Update.
+	* v850-tdep.c (v850_gdbarch_init): Update.
+	* vax-tdep.c (vax_gdbarch_init): Update.
+	* x86-64-tdep.c (x86_64_gdbarch_init): Update.
+	* xstormy16-tdep.c (xstormy16_gdbarch_init): Update.
+
+	* config/arc/tm-arc.h: Update.
+	* config/d30v/tm-d30v.h: Update.
+	* config/fr30/tm-fr30.h: Update.
+	* config/h8300/tm-h8300.h: Update.
* config/h8500/tm-h8500.h: Update.
* config/i386/tm-i386.h: Update.
* config/i386/tm-ptx.h: Update.
* config/i386/tm-symmetry.h: Update.
* config/i960/tm-i960.h: Update.
* config/m32r/tm-m32r.h: Update.
* config/m68k/tm-delta68.h: Update.
* config/m68k/tm-linux.h: Update.
* config/m68k/tm-m68k.h: Update.
* config/m88k/tm-m88k.h: Update.
* config/mcore/tm-mcore.h: Update.
* config/mips/tm-mips.h: Update.
* config/mn10200/tm-mn10200.h: Update.
* config/pa/tm-hppa.h: Update.
* config/pa/tm-hppa64.h: Update.
* config/sparc/tm-sp64.h: Update.
* config/sparc/tm-sparc.h: Update.
* config/sparc/tm-sparclet.h: Update.
* config/z8k/tm-z8k.h: Update.
@
text
@d96 1
a96 1
extern char *mips_register_name (int regnr);
@


1.26
log
@2002-06-11  Daniel Jacobowitz  <drow@@mvista.com>

        * mips-tdep.c (MIPS_FPU_TYPE, FP_REGISTER_DOUBLE, MIPS_EABI)
        (MIPS_LAST_FP_ARG_REGNUM, MIPS_LAST_ARG_REGNUM)
        (MIPS_DEFAULT_SAVED_REGSIZE, MIPS_REGS_HAVE_HOME_P)
        (MIPS_DEFAULT_STACK_ARGSIZE, GDB_TARGET_IS_MIPS64)
        (MIPS_DEFAULT_MASK_ADDRESS_P): Remove obsolete definitions.  Define
        unconditionally.
        (set_mipsfpu_single_command, set_mipsfpu_double_command)
        (set_mipsfpu_none_command): Remove if (GDB_MULTI_ARCH).
        (_initialize_mips_tdep): Remove dead code.
        * config/mips/tm-irix5.h (MIPS_LAST_ARG_REGNUM)
        (MIPS_DEFAULT_STACK_ARGSIZE, MIPS_REGS_HAVE_HOME_P): Remove.
        * config/mips/tm-irix6.h (MIPS_LAST_ARG_REGNUM)
        (MIPS_DEFAULT_STACK_ARGSIZE, MIPS_REGS_HAVE_HOME_P): Remove.
        * config/mips/tm-mips.h (MIPS_EABI, MIPS_LAST_ARG_REGNUM,
        MIPS_LAST_FP_ARG_REGNUM): Remove.
@
text
@d245 1
a245 1
#define EXTRACT_RETURN_VALUE(TYPE,REGBUF,VALBUF) \
d264 1
a264 1
#define EXTRACT_STRUCT_VALUE_ADDRESS(REGBUF) \
@


1.25
log
@* config/mips/tm-mips.h (CALL_DUMMY_LOCATION): Delete.
@
text
@a40 4
#if !defined (MIPS_EABI)
#define MIPS_EABI 0
#endif

a128 5
#if MIPS_EABI
#define MIPS_LAST_ARG_REGNUM 11	/* EABI uses R4 through R11 for args */
#else
#define MIPS_LAST_ARG_REGNUM 7	/* old ABI uses R4 through R7 for args */
#endif
a139 5
#if MIPS_EABI			/* EABI uses F12 through F19 for args */
#define MIPS_LAST_FP_ARG_REGNUM (FP0_REGNUM+19)
#else /* old ABI uses F12 through F15 for args */
#define MIPS_LAST_FP_ARG_REGNUM (FP0_REGNUM+15)
#endif
@


1.25.8.1
log
@Merge with mainline, kseitz_interps-20020619-merge.
@
text
@d41 4
d100 1
a100 1
extern const char *mips_register_name (int regnr);
d133 5
d149 5
d259 1
a259 1
#define DEPRECATED_EXTRACT_RETURN_VALUE(TYPE,REGBUF,VALBUF) \
d278 1
a278 1
#define DEPRECATED_EXTRACT_STRUCT_VALUE_ADDRESS(REGBUF) \
@


1.25.8.2
log
@Merge with kseitz_interps-20020809-merge of CVS head.
@
text
@d268 2
d309 13
@


1.25.8.3
log
@Merge with kseitz_interps-20020829-merge tag from trunk.
@
text
@d49 14
d69 5
d94 5
d148 6
d164 33
d213 66
a278 6
extern void mips_register_convert_to_type (int regnum, 
					   struct type *type,
					   char *buffer);
extern void mips_register_convert_from_type (int regnum, 
					     struct type *type,
					     char *buffer);
a279 2
#define REGISTER_CONVERT_TO_TYPE(n, type, buffer)	\
  mips_register_convert_to_type ((n), (type), (buffer))
d281 25
a305 2
#define REGISTER_CONVERT_FROM_TYPE(n, type, buffer)	\
  mips_register_convert_from_type ((n), (type), (buffer))
d308 39
d366 4
d394 1
d403 3
d407 3
d430 29
d461 1
@


1.25.8.4
log
@Merge with kseitz_interps-20020930-merge.
@
text
@d2 3
a4 4

   Copyright 1986, 1987, 1989, 1991, 1992, 1993, 1994, 1995, 1996,
   1997, 1998, 1999, 2000, 2002 Free Software Foundation, Inc.

d89 1
a89 1
	"fsr",  "fir",  ""/*"fp"*/,	"", \
d118 1
@


1.25.6.1
log
@merge from trunk
@
text
@d41 4
d133 5
d149 5
d259 1
a259 1
#define DEPRECATED_EXTRACT_RETURN_VALUE(TYPE,REGBUF,VALBUF) \
d278 1
a278 1
#define DEPRECATED_EXTRACT_STRUCT_VALUE_ADDRESS(REGBUF) \
@


1.25.6.2
log
@Merge with trunk.
@
text
@d96 1
a96 1
extern const char *mips_register_name (int regnr);
@


1.24
log
@s/BIG_ENDIAN/BFD_ENDIAN_BIG/
@
text
@a372 2
#define CALL_DUMMY_LOCATION AT_ENTRY_POINT

@


1.23
log
@* arch-utils.c (generic_register_raw_size): New function.
* gdbarch.sh (REGISTER_RAW_SIZE): Use generic_register_raw_size as
the static default.
* gdbarch.c: Regenerate.
* arch-utils.h (generic_register_raw_size): Declare.

* config/mips/tm-mips.h (REGISTER_RAW_SIZE): Delete macro.
* mips-tdep.c (mips_register_raw_size): Make function static.
(mips_gdbarch_init): Initialize register_raw_size.
@
text
@d228 1
a228 1
  do {if (TARGET_BYTE_ORDER == BIG_ENDIAN				\
d239 1
a239 1
  do {if (TARGET_BYTE_ORDER == BIG_ENDIAN				\
@


1.22
log
@Add INTEGER_TO_ADDRESS to hadle nasty harvard architectures that do
funnies to integer to address conversions.
@
text
@a177 8
/* Number of bytes of storage in the actual machine representation for
   register N.  NOTE: This indirectly defines the register size
   transfered by the GDB protocol. */

extern int mips_register_raw_size (int reg_nr);
#define REGISTER_RAW_SIZE(N) (mips_register_raw_size ((N)))


@


1.21
log
@        * mips-tdep.c (mips_software_single_step): New function.
        * config/mips/tm-mips.h: Add prototype for
        mips_software_single_step.
@
text
@a501 4
/* MIPS sign extends addresses */
#define POINTER_TO_ADDRESS(TYPE,BUF) (signed_pointer_to_address (TYPE, BUF))
#define ADDRESS_TO_POINTER(TYPE,BUF,ADDR) (address_to_signed_pointer (TYPE, BUF, ADDR))

@


1.20
log
@Multi-arch INIT_FRAME_PC() and INIT_FRAME_PC_FIRST().
@
text
@d505 3
@


1.19
log
@multi-arch ADDR_BITS_REMOVE.
@
text
@a385 9
/* There's a mess in stack frame creation.  See comments in blockframe.c
   near reference to INIT_FRAME_PC_FIRST.  */

#define	INIT_FRAME_PC(fromleaf, prev)	/* nada */

#define INIT_FRAME_PC_FIRST(fromleaf, prev) \
   mips_init_frame_pc_first(fromleaf, prev)
extern void mips_init_frame_pc_first (int, struct frame_info *);

@


1.18
log
@Include regcache.h
@
text
@a57 5
/* Remove useless bits from an instruction address.  */

#define ADDR_BITS_REMOVE(addr) mips_addr_bits_remove(addr)
CORE_ADDR mips_addr_bits_remove (CORE_ADDR addr);

@


1.17
log
@Update/correct copyright notices.
@
text
@d30 2
@


1.16
log
@Multiarch STAB_REG_TO_REGNUM, ECOFF_REG_TO_REGNUM,
DWARF_REG_TO_REGNUM, SDB_REG_TO_REGNUM, DWARF2_REG_TO_REGNUM.
@
text
@d2 2
a3 1
   Copyright 1986, 1987, 1989, 1991, 1992, 1993, 1994, 1995
@


1.15
log
@
Corrected spelling errors in comments.
gdbarch.{c,sh} removed a word from a comment.
@
text
@a439 8
/* Convert a dbx stab register number (from `r' declaration) to a gdb REGNUM */

#define STAB_REG_TO_REGNUM(num) ((num) < 32 ? (num) : (num)+FP0_REGNUM-38)

/* Convert a ecoff register number to a gdb REGNUM */

#define ECOFF_REG_TO_REGNUM(num) ((num) < 32 ? (num) : (num)+FP0_REGNUM-32)

@


1.14
log
@More mult-arch conversions: IEEE_FLOAT, SKIP_PROLOGUE,
SAVED_PC_AFTER_CALL, DECR_PC_AFTER_BREAK, BREAKPOINT_FROM_PC,
INNER_THAN.
@
text
@d435 1
a435 1
   but there is nothing we can do about that).  */
@


1.13
log
@Multi-arch GDB_TARGET_IS_MIPS64.
@
text
@a49 3
/* Floating point is IEEE compliant */
#define IEEE_FLOAT (1)

a68 6
/* Advance PC across any function entry prologue instructions
   to reach some "real" code.  */

#define SKIP_PROLOGUE(pc) (mips_skip_prologue (pc, 0))
extern CORE_ADDR mips_skip_prologue (CORE_ADDR addr, int lenient);

a74 7
/* Immediately after a function call, return the saved pc.
   Can't always go through the frames for this because on some machines
   the new frame is not set up until the new function executes
   some instructions.  */

#define SAVED_PC_AFTER_CALL(frame)	read_register(RA_REGNUM)

a78 20

/* Stack grows downward.  */

#define INNER_THAN(lhs,rhs) ((lhs) < (rhs))

/* BREAKPOINT_FROM_PC uses the program counter value to determine whether a
   16- or 32-bit breakpoint should be used.  It returns a pointer
   to a string of bytes that encode a breakpoint instruction, stores
   the length of the string to *lenptr, and adjusts the pc (if necessary) to
   point to the actual memory location where the breakpoint should be
   inserted.  */

extern breakpoint_from_pc_fn mips_breakpoint_from_pc;
#define BREAKPOINT_FROM_PC(pcptr, lenptr) mips_breakpoint_from_pc(pcptr, lenptr)

/* Amount PC must be decremented by after a breakpoint.
   This is often the number of bytes in BREAKPOINT
   but not always.  */

#define DECR_PC_AFTER_BREAK 0
@


1.12
log
@MIPS is always multi-arch enabled.
@
text
@a37 4
#if !defined (GDB_TARGET_IS_MIPS64)
#define GDB_TARGET_IS_MIPS64 0
#endif

@


1.11
log
@Delete MIPS_DEFAULT_FPU from config/mips/*.h
@
text
@d27 2
a411 4
#if !GDB_MULTI_ARCH
#define CALL_DUMMY { 0 }
#endif

a487 16
#if !GDB_MULTI_ARCH
/* If the current gcc for for this target does not produce correct debugging
   information for float parameters, both prototyped and unprototyped, then
   define this macro.  This forces gdb to  always assume that floats are
   passed as doubles and then converted in the callee.

   For the mips chip, it appears that the debug info marks the parameters as
   floats regardless of whether the function is prototyped, but the actual
   values are passed as doubles for the non-prototyped case and floats for
   the prototyped case.  Thus we choose to make the non-prototyped case work
   for C and break the prototyped case, since the non-prototyped case is
   probably much more common.  (FIXME). */

#define COERCE_FLOAT_TO_DOUBLE(formal, actual) (current_language -> la_language == language_c)
#endif

a563 6


/* MIPS is always bi-endian */
#if !GDB_MULTI_ARCH
#define TARGET_BYTE_ORDER_SELECTABLE_P 1
#endif
@


1.10
log
@Use config.bfd to determine the default architecture and byte order.
Flush all BYTE_ORDER_DEFAULT macros from mips. Can rely on BFD's value.
@
text
@a131 5
/* The sizes of floating point registers.  */

#define MIPS_FPU_SINGLE_REGSIZE 4
#define MIPS_FPU_DOUBLE_REGSIZE 8

@


1.9
log
@Mips is always TARGET_BYTE_ORDER_SELECTABLE_P 1.
@
text
@a35 4
#if !defined (TARGET_BYTE_ORDER_DEFAULT)
#define TARGET_BYTE_ORDER_DEFAULT LITTLE_ENDIAN
#endif

@


1.8
log
@Delete TARGET_MONITOR_PROMPT.
@
text
@d591 6
@


1.7
log
@Add host_pointer_to_address() and address_to_host_pointer().  Add
signed_pointer_to_address() etc.  Rename generic_pointer_to_address()
to unsigned_pointer_to_address() etc.
@
text
@a47 4
#if !defined (TARGET_MONITOR_PROMPT)
#define TARGET_MONITOR_PROMPT "<IDT>"
#endif

@


1.6
log
@PARAMS removal.
@
text
@d590 5
@


1.5
log
@Remove more defunct macros.
@
text
@d71 1
a71 1
CORE_ADDR mips_addr_bits_remove PARAMS ((CORE_ADDR addr));
d86 1
a86 1
extern CORE_ADDR mips_skip_prologue PARAMS ((CORE_ADDR addr, int lenient));
d90 1
a90 1
extern int mips_step_skips_delay PARAMS ((CORE_ADDR));
d103 1
a103 1
extern int in_sigtramp PARAMS ((CORE_ADDR, char *));
d153 1
a153 1
extern char *mips_register_name PARAMS ((int regnr));
d219 1
a219 1
extern void mips_do_registers_info PARAMS ((int, int));
d235 1
a235 1
extern int mips_register_raw_size PARAMS ((int reg_nr));
d245 1
a245 1
extern int mips_register_convertible PARAMS ((int reg_nr));
d249 2
a250 1
void mips_register_convert_to_virtual PARAMS ((int reg_nr, struct type *virtual_type, char *raw_buf, char *virt_buf));
d254 2
a255 1
void mips_register_convert_to_raw PARAMS ((struct type *virtual_type, int reg_nr, char *virt_buf, char *raw_buf));
d322 1
a322 2
extern void
mips_extract_return_value PARAMS ((struct type *, char[], char *));
d329 1
a329 1
extern void mips_store_return_value PARAMS ((struct type *, char *));
d353 1
a353 1
extern CORE_ADDR mips_frame_chain PARAMS ((struct frame_info *));
d368 1
a368 1
extern CORE_ADDR mips_frame_saved_pc PARAMS ((struct frame_info *));
d378 1
a378 1
extern int mips_frame_num_args PARAMS ((struct frame_info *));
d396 1
a396 1
extern void mips_find_saved_regs PARAMS ((struct frame_info *));
d405 2
a406 1
extern CORE_ADDR mips_push_arguments PARAMS ((int, struct value **, CORE_ADDR, int, CORE_ADDR));
d410 1
a410 1
extern CORE_ADDR mips_push_return_address PARAMS ((CORE_ADDR pc, CORE_ADDR sp));
d416 1
a416 1
extern void mips_push_dummy_frame PARAMS ((void));
d421 1
a421 1
extern void mips_pop_frame PARAMS ((void));
d441 1
a441 1
extern CORE_ADDR mips_call_dummy_address PARAMS ((void));
d450 1
a450 1
extern void mips_init_frame_pc_first PARAMS ((int, struct frame_info *));
d456 1
a456 1
extern void ecoff_relocate_efi PARAMS ((struct symbol *, CORE_ADDR));
d471 1
a471 1
extern void mips_init_extra_frame_info PARAMS ((int fromleaf, struct frame_info *));
d475 1
a475 1
extern void mips_print_extra_frame_info PARAMS ((struct frame_info * frame));
d493 1
a493 1
extern struct frame_info *setup_arbitrary_frame PARAMS ((int, CORE_ADDR *));
d526 1
a526 1
extern void fixup_sigtramp PARAMS ((void));
d529 1
a529 1
extern char *mips_read_processor_type PARAMS ((void));
d536 4
a539 4
extern int mips_in_call_stub PARAMS ((CORE_ADDR pc, char *name));
extern int mips_in_return_stub PARAMS ((CORE_ADDR pc, char *name));
extern CORE_ADDR mips_skip_stub PARAMS ((CORE_ADDR pc));
extern int mips_ignore_helper PARAMS ((CORE_ADDR pc));
@


1.4
log
@Cleanups.  Zap unused macros.
@
text
@a203 1
#define MIPS_NUM_FP_ARG_REGS 8
a205 1
#define MIPS_NUM_FP_ARG_REGS 4
@


1.3
log
@Bring IEEE_FLOAT under gdbarch's control.
* gdbarch.sh (IEEE_FLOAT): New entry.
* gdbarch.c, gdbarch.h: Regenerated.
* valprint.c (IEEE_FLOAT): Provide a default #definition for this.
(print_floating): Use IEEE_FLOAT as if it were an expression; use
the code specific to IEEE-format numbers whenever the value of
IEEE_FLOAT is non-zero.
* config/a29k/tm-a29k.h, config/alpha/tm-alpha.h,
config/arc/tm-arc.h, config/arm/tm-arm.h, config/fr30/tm-fr30.h,
config/h8300/tm-h8300.h, config/i386/tm-i386.h,
config/i960/tm-i960.h, config/m88k/tm-m88k.h,
config/mips/tm-mips.h, config/pa/tm-hppa.h,
config/sparc/tm-sparc.h, config/delta/tm-delta.h,
config/frv/tm-frv.h (IEEE_FLOAT): For all ports that #define
IEEE_FLOAT, make sure they give it the value (1).
@
text
@a187 1
#define MIPS_NUM_ARG_REGS 8
a189 1
#define MIPS_NUM_ARG_REGS 4
d431 4
a434 2
/* On Irix, $t9 ($25) contains the address of the callee (used for PIC).
   It doesn't hurt to do this on other systems; $t9 will be ignored.  */
@


1.2
log
@Bring COERCE_FLOAT_TO_DOUBLE under gdbarch's control.
* valops.c (COERCE_FLOAT_TO_DOUBLE): Rework definition to be
more function-like.
(default_coerce_float_to_double, standard_coerce_float_to_double):
New functions.
(value_arg_coerce): Adjust for new definition.
* value.h (default_coerce_float_to_double,
standard_coerce_float_to_double): New declarations for the above.
* gdbarch.sh (coerce_float_to_double): New entry, replacing macro.
* gdbarch.c, gdbarch.h: Regenerated.
* tm-alpha.h, tm-fr30.h, tm-m32r.h, tm-mips.h, tm-hppa.h,
tm-rs6000.h, tm-sh.h, tm-sparc.h (COERCE_FLOAT_TO_DOUBLE): Change
definitions.
* mips-tdep.c (mips_coerce_float_to_double): Supply our own custom
function here.
(mips_gdbarch_init): Install that as our coerce_float_to_double
function.
@
text
@d61 1
a61 1
#define IEEE_FLOAT
@


1.1
log
@Initial revision
@
text
@d7 1
a7 1
This file is part of GDB.
d9 14
a22 13
This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
a26 1
#ifdef __STDC__
a30 1
#endif
d85 1
a85 1
#define SKIP_PROLOGUE(pc)	pc = mips_skip_prologue (pc, 0)
a109 2
#define BIG_ENDIAN 4321

d151 5
d159 2
a160 2
#ifndef REGISTER_NAMES
#define REGISTER_NAMES 	\
d187 2
a188 2
#  define MIPS_LAST_ARG_REGNUM 11 /* EABI uses R4 through R11 for args */
#  define MIPS_NUM_ARG_REGS 8
d190 2
a191 2
#  define MIPS_LAST_ARG_REGNUM 7  /* old ABI uses R4 through R7 for args */
#  define MIPS_NUM_ARG_REGS 4
d197 2
a198 2
#define HI_REGNUM 34            /* Multiple/divide temp */
#define LO_REGNUM 33            /* ... */
d202 2
a203 2
#define FP0_REGNUM 38           /* Floating point register 0 (single float) */
#define FPA0_REGNUM (FP0_REGNUM+12) /* First float argument register */
d205 5
a209 5
#  define MIPS_LAST_FP_ARG_REGNUM (FP0_REGNUM+19)
#  define MIPS_NUM_FP_ARG_REGS 8
#else				/* old ABI uses F12 through F15 for args */
#  define MIPS_LAST_FP_ARG_REGNUM (FP0_REGNUM+15)
#  define MIPS_NUM_FP_ARG_REGS 4
d211 2
a212 2
#define FCRCS_REGNUM 70         /* FP control/status */
#define FCRIR_REGNUM 71         /* FP implementation/revision */
d235 21
a255 2
/* Number of bytes of storage in the actual machine representation
   for register N. */
d257 3
a259 1
#define REGISTER_RAW_SIZE(N) REGISTER_VIRTUAL_SIZE(N)
d315 2
a316 1
#define STORE_STRUCT_RETURN(addr, sp)	/**/
d325 1
a325 1
mips_extract_return_value PARAMS ((struct type *, char [], char *));
d366 1
a366 1
#define FRAMELESS_FUNCTION_INVOCATION(FI, FRAMELESS)  {(FRAMELESS) = 0;}
d380 1
a380 1
#define FRAME_NUM_ARGS(num, fi)	(num = mips_frame_num_args(fi))
d400 1
a401 1

d408 1
d410 4
a413 3
    sp = mips_push_arguments((nargs), (args), (sp), (struct_return), (struct_addr))
extern CORE_ADDR
mips_push_arguments PARAMS ((int, struct value **, CORE_ADDR, int, CORE_ADDR));
d425 1
d427 1
d446 1
a446 1
#define	INIT_FRAME_PC(fromleaf, prev) /* nada */
d462 8
a469 10
typedef struct mips_extra_func_info {
	long	numargs;	/* number of args to procedure (was iopt) */
	bfd_vma high_addr;      /* upper address bound */
	long	frame_adjust;	/* offset of FP from SP (used on MIPS16) */
	PDR	pdr;		/* Procedure descriptor record */
} *mips_extra_func_info_t;

#define EXTRA_FRAME_INFO \
  mips_extra_func_info_t proc_desc; \
  int num_args;
d471 3
a473 2
#define INIT_EXTRA_FRAME_INFO(fromleaf, fci) init_extra_frame_info(fci)
extern void init_extra_frame_info PARAMS ((struct frame_info *));
d475 1
d477 1
a477 6
  { \
    if (fi && fi->proc_desc && fi->proc_desc->pdr.framereg < NUM_REGS) \
      printf_filtered (" frame pointer is at %s+%d\n", \
                       REGISTER_NAME (fi->proc_desc->pdr.framereg), \
                                 fi->proc_desc->pdr.frameoffset); \
  }
d503 1
d516 2
a517 1
#define COERCE_FLOAT_TO_DOUBLE (current_language -> la_language == language_c)
d536 2
a537 2
extern int mips_in_call_stub PARAMS ((CORE_ADDR pc,  char *name));
extern int mips_in_return_stub PARAMS ((CORE_ADDR pc,  char *name));
d547 1
a547 1
#define MIPS16_INSTLEN 2	/* Length of an instruction on MIPS16*/
d557 1
a557 1
#endif	/* TM_MIPS_H */
d566 7
a572 7
			tests whether an ELF symbol is "special", i.e. refers
			to a 16-bit function, and sets a "special" bit in a 
			minimal symbol to mark it as a 16-bit function
   MSYMBOL_IS_SPECIAL	tests the "special" bit in a minimal symbol
   MSYMBOL_SIZE		returns the size of the minimal symbol, i.e.
			the "info" field with the "special" bit masked out
*/
d581 1
a581 1
   
d586 4
@


1.1.1.1
log
@Initial creation of sourceware repository
@
text
@@


1.1.1.2
log
@import gdb-19990504 snapshot
@
text
@d86 1
a86 1
#define SKIP_PROLOGUE(pc) (mips_skip_prologue (pc, 0))
@


1.1.1.3
log
@import gdb-1999-05-25 snapshot
@
text
@d342 1
a342 1
#define FRAMELESS_FUNCTION_INVOCATION(FI)  (0)
d356 1
a356 1
#define FRAME_NUM_ARGS(fi)	(mips_frame_num_args(fi))
d385 1
a385 1
  (mips_push_arguments((nargs), (args), (sp), (struct_return), (struct_addr)))
@


1.1.1.4
log
@import gdb-1999-06-07 snapshot
@
text
@a153 5
/* Given the register index, return the name of the corresponding
   register. */
extern char *mips_register_name PARAMS ((int regnr));
#define REGISTER_NAME(i) mips_register_name (i)

d157 2
a158 2
#ifndef MIPS_REGISTER_NAMES
#define MIPS_REGISTER_NAMES 	\
d441 6
a446 3
extern void mips_init_extra_frame_info PARAMS ((int fromleaf, struct frame_info *));
#define INIT_EXTRA_FRAME_INFO(fromleaf, fci) \
  mips_init_extra_frame_info(fromleaf, fci)
a447 1
extern void mips_print_extra_frame_info PARAMS ((struct frame_info *frame));
d449 6
a454 1
  mips_print_extra_frame_info (fi)
@


1.1.1.5
log
@import gdb-1999-06-14 snapshot
@
text
@a388 1
extern CORE_ADDR mips_push_arguments PARAMS ((int, struct value **, CORE_ADDR, int, CORE_ADDR));
d391 2
a392 3

extern CORE_ADDR mips_push_return_address PARAMS ((CORE_ADDR pc, CORE_ADDR sp));
#define PUSH_RETURN_ADDRESS(PC, SP) (mips_push_return_address ((PC), (SP)))
@


1.1.1.6
log
@import gdb-1999-07-07 post reformat
@
text
@d7 1
a7 1
   This file is part of GDB.
d9 13
a21 14
   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place - Suite 330,
   Boston, MA 02111-1307, USA.  */
d190 2
a191 2
#define MIPS_LAST_ARG_REGNUM 11	/* EABI uses R4 through R11 for args */
#define MIPS_NUM_ARG_REGS 8
d193 2
a194 2
#define MIPS_LAST_ARG_REGNUM 7	/* old ABI uses R4 through R7 for args */
#define MIPS_NUM_ARG_REGS 4
d200 2
a201 2
#define HI_REGNUM 34		/* Multiple/divide temp */
#define LO_REGNUM 33		/* ... */
d205 2
a206 2
#define FP0_REGNUM 38		/* Floating point register 0 (single float) */
#define FPA0_REGNUM (FP0_REGNUM+12)	/* First float argument register */
d208 5
a212 5
#define MIPS_LAST_FP_ARG_REGNUM (FP0_REGNUM+19)
#define MIPS_NUM_FP_ARG_REGS 8
#else /* old ABI uses F12 through F15 for args */
#define MIPS_LAST_FP_ARG_REGNUM (FP0_REGNUM+15)
#define MIPS_NUM_FP_ARG_REGS 4
d214 2
a215 2
#define FCRCS_REGNUM 70		/* FP control/status */
#define FCRIR_REGNUM 71		/* FP implementation/revision */
d297 1
a297 2
#define STORE_STRUCT_RETURN(addr, sp)
/**/
d306 1
a306 1
mips_extract_return_value PARAMS ((struct type *, char[], char *));
d381 1
a382 1

d425 1
a425 1
#define	INIT_FRAME_PC(fromleaf, prev)	/* nada */
d441 6
a446 8
typedef struct mips_extra_func_info
  {
    long numargs;		/* number of args to procedure (was iopt) */
    bfd_vma high_addr;		/* upper address bound */
    long frame_adjust;		/* offset of FP from SP (used on MIPS16) */
    PDR pdr;			/* Procedure descriptor record */
  }
 *mips_extra_func_info_t;
d452 1
a452 1
extern void mips_print_extra_frame_info PARAMS ((struct frame_info * frame));
d511 2
a512 2
extern int mips_in_call_stub PARAMS ((CORE_ADDR pc, char *name));
extern int mips_in_return_stub PARAMS ((CORE_ADDR pc, char *name));
d522 1
a522 1
#define MIPS16_INSTLEN 2	/* Length of an instruction on MIPS16 */
d532 1
a532 1
#endif /* TM_MIPS_H */
d541 7
a547 7
   tests whether an ELF symbol is "special", i.e. refers
   to a 16-bit function, and sets a "special" bit in a 
   minimal symbol to mark it as a 16-bit function
   MSYMBOL_IS_SPECIAL   tests the "special" bit in a minimal symbol
   MSYMBOL_SIZE         returns the size of the minimal symbol, i.e.
   the "info" field with the "special" bit masked out
 */
d556 1
a556 1

@


1.1.1.7
log
@import gdb-1999-07-12 snapshot
@
text
@d239 2
a240 3
/* Number of bytes of storage in the actual machine representation for
   register N.  NOTE: This indirectly defines the register size
   transfered by the GDB protocol. */
d242 1
a242 21
extern int mips_register_raw_size PARAMS ((int reg_nr));
#define REGISTER_RAW_SIZE(N) (mips_register_raw_size ((N)))


/* Covert between the RAW and VIRTUAL registers.

   Some MIPS (SR, FSR, FIR) have a `raw' size of MIPS_REGSIZE but are
   really 32 bit registers.  This is a legacy of the 64 bit MIPS GDB
   protocol which transfers 64 bits for 32 bit registers. */

extern int mips_register_convertible PARAMS ((int reg_nr));
#define REGISTER_CONVERTIBLE(N) (mips_register_convertible ((N)))
     

void mips_register_convert_to_virtual PARAMS ((int reg_nr, struct type *virtual_type, char *raw_buf, char *virt_buf));
#define REGISTER_CONVERT_TO_VIRTUAL(N,VIRTUAL_TYPE,RAW_BUF,VIRT_BUF) \
  mips_register_convert_to_virtual (N,VIRTUAL_TYPE,RAW_BUF,VIRT_BUF)

void mips_register_convert_to_raw PARAMS ((struct type *virtual_type, int reg_nr, char *virt_buf, char *raw_buf));
#define REGISTER_CONVERT_TO_RAW(VIRTUAL_TYPE,N,VIRT_BUF,RAW_BUF) \
  mips_register_convert_to_raw (VIRTUAL_TYPE,N,VIRT_BUF,RAW_BUF)
@


1.1.1.8
log
@import gdb-1999-08-02 snapshot
@
text
@d112 2
@


1.1.1.9
log
@import gdb-1999-08-30 snapshot
@
text
@d27 1
d32 1
@


1.1.1.10
log
@import gdb-1999-09-08 snapshot
@
text
@a581 4


/* Command to set the processor type. */
extern void mips_set_processor_type_command (char *, int);
@


1.1.1.11
log
@import gdb-1999-12-21 snapshot
@
text
@a424 1
#if !GDB_MULTI_ARCH
a425 1
#endif
@


