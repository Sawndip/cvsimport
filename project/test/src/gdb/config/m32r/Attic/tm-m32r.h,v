head	1.17;
access;
symbols
	gdb_6_0-2003-10-04-release:1.16
	carlton_dictionary-20030627-merge:1.16
	gdb_6_0-branch:1.16.0.30
	gdb_6_0-2003-06-23-branchpoint:1.16
	jimb-ppc64-linux-20030613-branch:1.16.0.28
	jimb-ppc64-linux-20030613-branchpoint:1.16
	cagney_convert-20030606-branch:1.16.0.26
	cagney_convert-20030606-branchpoint:1.16
	cagney_writestrings-20030508-branch:1.16.0.24
	cagney_writestrings-20030508-branchpoint:1.16
	jimb-ppc64-linux-20030528-branch:1.16.0.22
	jimb-ppc64-linux-20030528-branchpoint:1.16
	carlton_dictionary-20030523-merge:1.16
	cagney_fileio-20030521-branch:1.16.0.20
	cagney_fileio-20030521-branchpoint:1.16
	kettenis_i386newframe-20030517-mergepoint:1.16
	jimb-ppc64-linux-20030509-branch:1.16.0.18
	jimb-ppc64-linux-20030509-branchpoint:1.16
	kettenis_i386newframe-20030504-mergepoint:1.16
	carlton_dictionary-20030430-merge:1.16
	kettenis_i386newframe-20030419-branch:1.16.0.16
	kettenis_i386newframe-20030419-branchpoint:1.16
	carlton_dictionary-20030416-merge:1.16
	cagney_frameaddr-20030409-mergepoint:1.16
	kettenis_i386newframe-20030406-branch:1.16.0.14
	kettenis_i386newframe-20030406-branchpoint:1.16
	cagney_frameaddr-20030403-branchpoint:1.16
	cagney_frameaddr-20030403-branch:1.16.0.12
	cagney_framebase-20030330-mergepoint:1.16
	cagney_framebase-20030326-branch:1.16.0.10
	cagney_framebase-20030326-branchpoint:1.16
	cagney_lazyid-20030317-branch:1.16.0.8
	cagney_lazyid-20030317-branchpoint:1.16
	kettenis-i386newframe-20030316-mergepoint:1.16
	offbyone-20030313-branch:1.16.0.6
	offbyone-20030313-branchpoint:1.16
	kettenis-i386newframe-20030308-branch:1.16.0.4
	kettenis-i386newframe-20030308-branchpoint:1.16
	carlton_dictionary-20030305-merge:1.16
	cagney_offbyone-20030303-branch:1.16.0.2
	cagney_offbyone-20030303-branchpoint:1.16
	carlton_dictionary-20030207-merge:1.16
	interps-20030203-mergepoint:1.15
	interps-20030202-branch:1.15.0.4
	interps-20030202-branchpoint:1.15
	cagney-unwind-20030108-branch:1.15.0.2
	cagney-unwind-20030108-branchpoint:1.15
	carlton_dictionary-20021223-merge:1.13
	gdb_5_3-2002-12-12-release:1.8
	carlton_dictionary-20021115-merge:1.10
	kseitz_interps-20021105-merge:1.9
	kseitz_interps-20021103-merge:1.9
	drow-cplus-merge-20021020:1.8
	drow-cplus-merge-20021025:1.8
	carlton_dictionary-20021025-merge:1.8
	carlton_dictionary-20021011-merge:1.8
	drow-cplus-branch:1.8.0.10
	drow-cplus-branchpoint:1.8
	kseitz_interps-20020930-merge:1.8
	carlton_dictionary-20020927-merge:1.8
	carlton_dictionary-branch:1.8.0.8
	carlton_dictionary-20020920-branchpoint:1.8
	gdb_5_3-branch:1.8.0.6
	gdb_5_3-2002-09-04-branchpoint:1.8
	kseitz_interps-20020829-merge:1.8
	cagney_sysregs-20020825-branch:1.8.0.4
	cagney_sysregs-20020825-branchpoint:1.8
	readline_4_3-import-branch:1.8.0.2
	readline_4_3-import-branchpoint:1.8
	gdb_5_2_1-2002-07-23-release:1.6
	kseitz_interps-20020528-branch:1.6.0.8
	kseitz_interps-20020528-branchpoint:1.6
	cagney_regbuf-20020515-branch:1.6.0.6
	cagney_regbuf-20020515-branchpoint:1.6
	jimb-macro-020506-branch:1.6.0.4
	jimb-macro-020506-branchpoint:1.6
	gdb_5_2-2002-04-29-release:1.6
	gdb_5_2-branch:1.6.0.2
	gdb_5_2-2002-03-03-branchpoint:1.6
	gdb_5_1_1-2002-01-24-release:1.4
	gdb_5_1_0_1-2002-01-03-release:1.4
	cygnus_cvs_20020108_pre:1.5
	gdb_5_1_0_1-2002-01-03-branchpoint:1.4
	gdb_5_1_0_1-2002-01-03-branch:1.4.0.8
	gdb_5_1-2001-11-21-release:1.4
	gdb_s390-2001-09-26-branch:1.4.0.6
	gdb_s390-2001-09-26-branchpoint:1.4
	gdb_5_1-2001-07-29-branch:1.4.0.4
	gdb_5_1-2001-07-29-branchpoint:1.4
	dberlin-typesystem-branch:1.4.0.2
	dberlin-typesystem-branchpoint:1.4
	gdb-post-ptid_t-2001-05-03:1.4
	gdb-pre-ptid_t-2001-05-03:1.4
	insight-precleanup-2001-01-01:1.3
	gdb-post-protoization-2000-07-29:1.3
	gdb-pre-protoization-2000-07-29:1.3
	gdb-premipsmulti-2000-06-06-branch:1.3.0.2
	gdb-premipsmulti-2000-06-06-branchpoint:1.3
	gdb-post-params-removal-2000-06-04:1.3
	gdb-pre-params-removal-2000-06-04:1.3
	gdb-post-params-removal-2000-05-28:1.3
	gdb-pre-params-removal-2000-05-28:1.2
	gdb_5_0-2000-05-19-release:1.2
	gdb_4_18_2-2000-05-18-release:1.2
	gdb_4_95_1-2000-05-11-snapshot:1.2
	gdb_4_95_0-2000-04-27-snapshot:1.2
	gdb_5_0-2000-04-10-branch:1.2.0.2
	gdb_5_0-2000-04-10-branchpoint:1.2
	repo-unification-2000-02-06:1.1.1.8
	insight-2000-02-04:1.1.1.8
	gdb-2000-02-04:1.1.1.8
	gdb-2000-02-02:1.1.1.8
	gdb-2000-02-01:1.1.1.8
	gdb-2000-01-31:1.1.1.8
	gdb-2000-01-26:1.1.1.8
	gdb-2000-01-24:1.1.1.8
	gdb-2000-01-17:1.1.1.8
	gdb-2000-01-10:1.1.1.8
	gdb-2000-01-05:1.1.1.8
	gdb-1999-12-21:1.1.1.8
	gdb-1999-12-13:1.1.1.8
	gdb-1999-12-07:1.1.1.7
	gdb-1999-12-06:1.1.1.7
	gdb-1999-11-16:1.1.1.7
	gdb-1999-11-08:1.1.1.7
	gdb-1999-11-01:1.1.1.7
	gdb-1999-10-25:1.1.1.7
	gdb-1999-10-18:1.1.1.7
	gdb-1999-10-11:1.1.1.7
	gdb-1999-10-04:1.1.1.7
	gdb-1999-09-28:1.1.1.7
	gdb-1999-09-21:1.1.1.7
	gdb-1999-09-13:1.1.1.7
	gdb-1999-09-08:1.1.1.7
	gdb-1999-08-30:1.1.1.6
	gdb-1999-08-23:1.1.1.5
	gdb-1999-08-16:1.1.1.5
	gdb-1999-08-09:1.1.1.5
	gdb-1999-08-02:1.1.1.5
	gdb-1999-07-26:1.1.1.5
	gdb-1999-07-19:1.1.1.5
	gdb-1999-07-12:1.1.1.5
	gdb-post-reformat-19990707:1.1.1.5
	gdb-1999-07-07-post-reformat-snapshot:1.1.1.5
	gdb-pre-reformat-19990707:1.1.1.4
	gdb-1999-07-07:1.1.1.4
	gdb-1999-07-05:1.1.1.4
	gdb-1999-06-28:1.1.1.4
	gdb-1999-06-21:1.1.1.4
	gdb-1999-06-14:1.1.1.4
	gdb-1999-06-07:1.1.1.4
	gdb-1999-06-01:1.1.1.4
	gdb-4_18-branch:1.1.1.1.0.2
	gdb-4_18-release:1.1.1.1
	gdb-1999-05-25:1.1.1.4
	gdb-1999-05-19:1.1.1.3
	gdb-1999-05-10:1.1.1.3
	gdb-19990504:1.1.1.3
	gdb-19990422:1.1.1.2
	SNAPSHOT:1.1.1
	gdb-4_18:1.1.1.1
	GDB_4_18:1.1.1;
locks; strict;
comment	@ * @;
expand	@o@;


1.17
date	2003.08.01.21.14.33;	author cagney;	state dead;
branches;
next	1.16;

1.16
date	2003.02.04.23.26.43;	author cagney;	state Exp;
branches;
next	1.15;

1.15
date	2003.01.05.01.39.55;	author drow;	state Exp;
branches;
next	1.14;

1.14
date	2003.01.04.22.37.47;	author drow;	state Exp;
branches;
next	1.13;

1.13
date	2002.12.11.02.26.37;	author cagney;	state Exp;
branches;
next	1.12;

1.12
date	2002.12.01.19.07.15;	author cagney;	state Exp;
branches;
next	1.11;

1.11
date	2002.11.28.21.38.43;	author cagney;	state Exp;
branches;
next	1.10;

1.10
date	2002.11.14.00.25.04;	author cagney;	state Exp;
branches;
next	1.9;

1.9
date	2002.11.01.21.21.49;	author cagney;	state Exp;
branches;
next	1.8;

1.8
date	2002.08.24.00.21.35;	author cagney;	state Exp;
branches
	1.8.8.1
	1.8.10.1;
next	1.7;

1.7
date	2002.06.14.22.55.46;	author cagney;	state Exp;
branches;
next	1.6;

1.6
date	2002.01.29.04.42.39;	author cagney;	state Exp;
branches
	1.6.6.1
	1.6.8.1;
next	1.5;

1.5
date	2002.01.05.04.30.32;	author cagney;	state Exp;
branches;
next	1.4;

1.4
date	2001.03.14.23.23.12;	author cagney;	state Exp;
branches;
next	1.3;

1.3
date	2000.05.28.01.12.36;	author kevinb;	state Exp;
branches;
next	1.2;

1.2
date	2000.02.22.19.17.55;	author jimb;	state Exp;
branches;
next	1.1;

1.1
date	99.04.16.01.34.21;	author shebs;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.04.16.01.34.21;	author shebs;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	99.04.26.18.26.25;	author shebs;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	99.05.05.14.43.30;	author shebs;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	99.05.25.18.04.47;	author jsm;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	99.07.07.20.13.54;	author jsm;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	99.08.31.01.07.15;	author jsm;	state Exp;
branches;
next	1.1.1.7;

1.1.1.7
date	99.09.08.23.59.54;	author shebs;	state Exp;
branches;
next	1.1.1.8;

1.1.1.8
date	99.12.14.01.05.41;	author jsm;	state Exp;
branches;
next	;

1.6.6.1
date	2002.06.15.16.43.08;	author cagney;	state Exp;
branches;
next	;

1.6.8.1
date	2002.06.20.01.34.52;	author kseitz;	state Exp;
branches;
next	1.6.8.2;

1.6.8.2
date	2002.08.30.22.52.48;	author kseitz;	state Exp;
branches;
next	1.6.8.3;

1.6.8.3
date	2002.11.03.22.20.20;	author ezannoni;	state Exp;
branches;
next	;

1.8.8.1
date	2002.11.15.19.19.05;	author carlton;	state Exp;
branches;
next	1.8.8.2;

1.8.8.2
date	2002.12.23.19.38.59;	author carlton;	state Exp;
branches;
next	1.8.8.3;

1.8.8.3
date	2003.02.07.19.17.55;	author carlton;	state Exp;
branches;
next	1.8.8.4;

1.8.8.4
date	2003.08.05.17.13.18;	author carlton;	state dead;
branches;
next	;

1.8.10.1
date	2003.12.14.20.27.38;	author drow;	state dead;
branches;
next	;


desc
@@


1.17
log
@2003-08-01  Andrew Cagney  <cagney@@redhat.com>

	* NEWS: Mention that m32r is multi-arch.
	From 2003-07-28 Kei Sakamoto <sakamoto.kei@@renesas.com>:
	* configure.tgt: Recognize m32r-*-*.
	* config/m32r/tm-m32r.h: Delete file.
	* config/m32r/m32r.mt: New file.
	* m32r-rom.c (m32r_upload_command): Use hostent only when
        gethostname succeeds, in order to avoid a compilation
        warning.
	* m32r-tdep.c (m32r_store_return_value): Add a cast to remove a
	compiler warning.
@
text
@// OBSOLETE /* Parameters for execution on a Mitsubishi m32r processor.
// OBSOLETE    Copyright 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003
// OBSOLETE    Free Software Foundation, Inc. 
// OBSOLETE 
// OBSOLETE    This file is part of GDB.
// OBSOLETE 
// OBSOLETE    This program is free software; you can redistribute it and/or modify
// OBSOLETE    it under the terms of the GNU General Public License as published by
// OBSOLETE    the Free Software Foundation; either version 2 of the License, or
// OBSOLETE    (at your option) any later version.
// OBSOLETE 
// OBSOLETE    This program is distributed in the hope that it will be useful,
// OBSOLETE    but WITHOUT ANY WARRANTY; without even the implied warranty of
// OBSOLETE    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// OBSOLETE    GNU General Public License for more details.
// OBSOLETE 
// OBSOLETE    You should have received a copy of the GNU General Public License
// OBSOLETE    along with this program; if not, write to the Free Software
// OBSOLETE    Foundation, Inc., 59 Temple Place - Suite 330,
// OBSOLETE    Boston, MA 02111-1307, USA.  */
// OBSOLETE 
// OBSOLETE #include "regcache.h"
// OBSOLETE 
// OBSOLETE /* Used by mswin.  */
// OBSOLETE #define TARGET_M32R 1
// OBSOLETE 
// OBSOLETE /* mvs_check REGISTER_NAMES */
// OBSOLETE #define REGISTER_NAMES \
// OBSOLETE { "r0", "r1", "r2", "r3", "r4", "r5", "r6", "r7", \
// OBSOLETE   "r8", "r9", "r10", "r11", "r12", "fp", "lr", "sp", \
// OBSOLETE   "psw", "cbr", "spi", "spu", "bpc", "pc", "accl", "acch", \
// OBSOLETE     /*  "cond", "sm", "bsm", "ie", "bie", "bcarry",  */ \
// OBSOLETE }
// OBSOLETE /* mvs_check  NUM_REGS */
// OBSOLETE #define NUM_REGS 			24
// OBSOLETE 
// OBSOLETE /* mvs_check  REGISTER_SIZE */
// OBSOLETE #define REGISTER_SIZE 			4
// OBSOLETE /* mvs_check  MAX_REGISTER_RAW_SIZE */
// OBSOLETE #define MAX_REGISTER_RAW_SIZE		4
// OBSOLETE 
// OBSOLETE /* mvs_check  *_REGNUM */
// OBSOLETE #define R0_REGNUM	0
// OBSOLETE #define STRUCT_RETURN_REGNUM 0
// OBSOLETE #define ARG0_REGNUM	0
// OBSOLETE #define ARGLAST_REGNUM	3
// OBSOLETE #define V0_REGNUM	0
// OBSOLETE #define V1_REGNUM	1
// OBSOLETE #define FP_REGNUM	13
// OBSOLETE #define RP_REGNUM	14
// OBSOLETE #define SP_REGNUM	15
// OBSOLETE #define PSW_REGNUM	16
// OBSOLETE #define CBR_REGNUM	17
// OBSOLETE #define SPI_REGNUM	18
// OBSOLETE #define SPU_REGNUM	19
// OBSOLETE #define BPC_REGNUM	20
// OBSOLETE #define PC_REGNUM	21
// OBSOLETE #define ACCL_REGNUM	22
// OBSOLETE #define ACCH_REGNUM	23
// OBSOLETE 
// OBSOLETE /* mvs_check  REGISTER_BYTES */
// OBSOLETE #define REGISTER_BYTES			(NUM_REGS * 4)
// OBSOLETE 
// OBSOLETE /* mvs_check  REGISTER_VIRTUAL_TYPE */
// OBSOLETE #define REGISTER_VIRTUAL_TYPE(REG)	builtin_type_int
// OBSOLETE 
// OBSOLETE /* mvs_check  REGISTER_BYTE */
// OBSOLETE #define REGISTER_BYTE(REG) 		((REG) * 4)
// OBSOLETE /* mvs_check  REGISTER_VIRTUAL_SIZE */
// OBSOLETE #define REGISTER_VIRTUAL_SIZE(REG) 	4
// OBSOLETE /* mvs_check  REGISTER_RAW_SIZE */
// OBSOLETE #define REGISTER_RAW_SIZE(REG)     	4
// OBSOLETE 
// OBSOLETE /* mvs_check  MAX_REGISTER_VIRTUAL_SIZE */
// OBSOLETE #define MAX_REGISTER_VIRTUAL_SIZE 	4
// OBSOLETE 
// OBSOLETE /* mvs_check  BREAKPOINT */
// OBSOLETE #define BREAKPOINT {0x10, 0xf1}
// OBSOLETE 
// OBSOLETE /* mvs_no_check  FUNCTION_START_OFFSET */
// OBSOLETE #define FUNCTION_START_OFFSET 0
// OBSOLETE 
// OBSOLETE /* mvs_check  DECR_PC_AFTER_BREAK */
// OBSOLETE #define DECR_PC_AFTER_BREAK 0
// OBSOLETE 
// OBSOLETE /* mvs_check  INNER_THAN */
// OBSOLETE #define INNER_THAN(lhs,rhs) ((lhs) < (rhs))
// OBSOLETE 
// OBSOLETE /* mvs_check  SAVED_PC_AFTER_CALL */
// OBSOLETE #define SAVED_PC_AFTER_CALL(fi) read_register (RP_REGNUM)
// OBSOLETE 
// OBSOLETE struct frame_info;
// OBSOLETE struct frame_saved_regs;
// OBSOLETE struct type;
// OBSOLETE struct value;
// OBSOLETE 
// OBSOLETE /* Define other aspects of the stack frame. 
// OBSOLETE    We keep the offsets of all saved registers, 'cause we need 'em a lot!
// OBSOLETE    We also keep the current size of the stack frame, and whether 
// OBSOLETE    the frame pointer is valid (for frameless functions, and when we're
// OBSOLETE    still in the prologue of a function with a frame) */
// OBSOLETE 
// OBSOLETE /* mvs_check  EXTRA_FRAME_INFO */
// OBSOLETE #define EXTRA_FRAME_INFO  	\
// OBSOLETE   struct frame_saved_regs fsr;	\
// OBSOLETE   int framesize;		\
// OBSOLETE   int using_frame_pointer;
// OBSOLETE 
// OBSOLETE 
// OBSOLETE extern void m32r_init_extra_frame_info (struct frame_info *fi);
// OBSOLETE /* mvs_check  INIT_EXTRA_FRAME_INFO */
// OBSOLETE #define INIT_EXTRA_FRAME_INFO(fromleaf, fi) m32r_init_extra_frame_info (fi)
// OBSOLETE /* mvs_no_check  DEPRECATED_INIT_FRAME_PC */
// OBSOLETE #define DEPRECATED_INIT_FRAME_PC		init_frame_pc_noop
// OBSOLETE 
// OBSOLETE extern void
// OBSOLETE m32r_frame_find_saved_regs (struct frame_info *fi,
// OBSOLETE 			    struct frame_saved_regs *regaddr);
// OBSOLETE 
// OBSOLETE /* Put here the code to store, into a struct frame_saved_regs,
// OBSOLETE    the addresses of the saved registers of frame described by FRAME_INFO.
// OBSOLETE    This includes special registers such as pc and fp saved in special
// OBSOLETE    ways in the stack frame.  sp is even more special:
// OBSOLETE    the address we return for it IS the sp for the next frame.  */
// OBSOLETE 
// OBSOLETE /* mvs_check  FRAME_FIND_SAVED_REGS */
// OBSOLETE #define FRAME_FIND_SAVED_REGS(frame_info, frame_saved_regs)	    \
// OBSOLETE    m32r_frame_find_saved_regs(frame_info, &(frame_saved_regs))
// OBSOLETE 
// OBSOLETE extern CORE_ADDR m32r_frame_chain (struct frame_info *fi);
// OBSOLETE /* mvs_check  FRAME_CHAIN */
// OBSOLETE #define FRAME_CHAIN(fi) 		m32r_frame_chain (fi)
// OBSOLETE 
// OBSOLETE extern CORE_ADDR m32r_find_callers_reg (struct frame_info *fi, int regnum);
// OBSOLETE extern CORE_ADDR m32r_frame_saved_pc (struct frame_info *);
// OBSOLETE /* mvs_check  FRAME_SAVED_PC */
// OBSOLETE #define FRAME_SAVED_PC(fi)		m32r_frame_saved_pc (fi)
// OBSOLETE 
// OBSOLETE /* mvs_check  DEPRECATED_EXTRACT_RETURN_VALUE */
// OBSOLETE #define DEPRECATED_EXTRACT_RETURN_VALUE(TYPE, REGBUF, VALBUF) \
// OBSOLETE   memcpy ((VALBUF), \
// OBSOLETE 	  (char *)(REGBUF) + REGISTER_BYTE (V0_REGNUM) + \
// OBSOLETE 	  ((TYPE_LENGTH (TYPE) > 4 ? 8 : 4) - TYPE_LENGTH (TYPE)), \
// OBSOLETE 	  TYPE_LENGTH (TYPE))
// OBSOLETE 
// OBSOLETE /* mvs_check  DEPRECATED_STORE_RETURN_VALUE */
// OBSOLETE #define DEPRECATED_STORE_RETURN_VALUE(TYPE, VALBUF) \
// OBSOLETE   deprecated_write_register_bytes(REGISTER_BYTE (V0_REGNUM) + \
// OBSOLETE 		       ((TYPE_LENGTH (TYPE) > 4 ? 8:4) - TYPE_LENGTH (TYPE)),\
// OBSOLETE 		       (VALBUF), TYPE_LENGTH (TYPE));
// OBSOLETE 
// OBSOLETE extern CORE_ADDR m32r_skip_prologue (CORE_ADDR pc);
// OBSOLETE /* mvs_check  SKIP_PROLOGUE */
// OBSOLETE #define SKIP_PROLOGUE(pc) (m32r_skip_prologue (pc))
// OBSOLETE 
// OBSOLETE /* mvs_no_check  FRAME_ARGS_SKIP */
// OBSOLETE #define FRAME_ARGS_SKIP 0
// OBSOLETE 
// OBSOLETE /* mvs_no_check  FRAME_ARGS_ADDRESS */
// OBSOLETE #define FRAME_ARGS_ADDRESS(fi) ((fi)->frame)
// OBSOLETE /* mvs_no_check  FRAME_LOCALS_ADDRESS */
// OBSOLETE #define FRAME_LOCALS_ADDRESS(fi) ((fi)->frame)
// OBSOLETE /* mvs_no_check  FRAME_NUM_ARGS */
// OBSOLETE #define FRAME_NUM_ARGS(fi) (-1)
// OBSOLETE 
// OBSOLETE extern void m32r_write_sp (CORE_ADDR val);
// OBSOLETE #define TARGET_WRITE_SP m32r_write_sp
// OBSOLETE 
// OBSOLETE 
// OBSOLETE 
// OBSOLETE 
// OBSOLETE 
// OBSOLETE 
// OBSOLETE /* struct passing and returning stuff */
// OBSOLETE #define STORE_STRUCT_RETURN(STRUCT_ADDR, SP)	\
// OBSOLETE 	write_register (0, STRUCT_ADDR)
// OBSOLETE 
// OBSOLETE extern use_struct_convention_fn m32r_use_struct_convention;
// OBSOLETE #define USE_STRUCT_CONVENTION(GCC_P, TYPE) m32r_use_struct_convention (GCC_P, TYPE)
// OBSOLETE 
// OBSOLETE #define DEPRECATED_EXTRACT_STRUCT_VALUE_ADDRESS(REGBUF) \
// OBSOLETE   extract_address (REGBUF + REGISTER_BYTE (V0_REGNUM), \
// OBSOLETE 		   REGISTER_RAW_SIZE (V0_REGNUM))
// OBSOLETE 
// OBSOLETE #define REG_STRUCT_HAS_ADDR(gcc_p,type)     (TYPE_LENGTH (type) > 8)
// OBSOLETE 
// OBSOLETE 
// OBSOLETE /* generic dummy frame stuff */
// OBSOLETE 
// OBSOLETE #define PUSH_DUMMY_FRAME             generic_push_dummy_frame ()
// OBSOLETE #define DEPRECATED_PC_IN_CALL_DUMMY(PC, SP, FP) generic_pc_in_call_dummy (PC, SP, FP)
// OBSOLETE 
// OBSOLETE 
// OBSOLETE /* target-specific dummy_frame stuff */
// OBSOLETE 
// OBSOLETE extern struct frame_info *m32r_pop_frame (struct frame_info *frame);
// OBSOLETE /* mvs_check  POP_FRAME */
// OBSOLETE #define POP_FRAME m32r_pop_frame (get_current_frame ())
// OBSOLETE 
// OBSOLETE /* mvs_no_check  STACK_ALIGN */
// OBSOLETE /* #define STACK_ALIGN(x) ((x + 3) & ~3) */
// OBSOLETE 
// OBSOLETE extern CORE_ADDR m32r_push_return_address (CORE_ADDR, CORE_ADDR);
// OBSOLETE extern CORE_ADDR m32r_push_arguments (int nargs,
// OBSOLETE 				      struct value **args,
// OBSOLETE 				      CORE_ADDR sp,
// OBSOLETE 				      unsigned char struct_return,
// OBSOLETE 				      CORE_ADDR struct_addr);
// OBSOLETE 
// OBSOLETE 
// OBSOLETE 
// OBSOLETE /* mvs_no_check  PUSH_ARGUMENTS */
// OBSOLETE #define PUSH_ARGUMENTS(NARGS, ARGS, SP, STRUCT_RETURN, STRUCT_ADDR) \
// OBSOLETE   (m32r_push_arguments (NARGS, ARGS, SP, STRUCT_RETURN, STRUCT_ADDR))
// OBSOLETE 
// OBSOLETE #define PUSH_RETURN_ADDRESS(PC, SP)      m32r_push_return_address (PC, SP)
// OBSOLETE 
// OBSOLETE /* override the standard get_saved_register function with 
// OBSOLETE    one that takes account of generic CALL_DUMMY frames */
// OBSOLETE #define GET_SAVED_REGISTER(raw_buffer, optimized, addrp, frame, regnum, lval) \
// OBSOLETE      deprecated_generic_get_saved_register (raw_buffer, optimized, addrp, frame, regnum, lval)
// OBSOLETE 
// OBSOLETE 
// OBSOLETE #define DEPRECATED_USE_GENERIC_DUMMY_FRAMES 1
// OBSOLETE #define CALL_DUMMY                   {0}
// OBSOLETE #define CALL_DUMMY_LENGTH            (0)
// OBSOLETE #define CALL_DUMMY_START_OFFSET      (0)
// OBSOLETE #define CALL_DUMMY_BREAKPOINT_OFFSET (0)
// OBSOLETE #define FIX_CALL_DUMMY(DUMMY1, STARTADDR, FUNADDR, NARGS, ARGS, TYPE, GCCP)
// OBSOLETE #define CALL_DUMMY_LOCATION          AT_ENTRY_POINT
// OBSOLETE #define CALL_DUMMY_ADDRESS()         entry_point_address ()
@


1.16
log
@2003-02-04  Andrew Cagney  <ac131313@@redhat.com>

	* NEWS: Note that the m32r-*-elf* is obsolete.
	* monitor.c (monitor_expect): Obsolete reference to m32r.
	* configure.tgt: Mark m32r-*-elf* as obsolete.
	* MAINTAINERS: Mark m32k as obsolete.
	* m32r-rom.c: Obsolete file.
	* config/m32r/m32r.mt: Obsolete file.
	* config/m32r/tm-m32r.h: Obsolete file.
	* m32r-stub.c: Obsolete file.
	* m32r-tdep.c: Obsolete file.
@
text
@@


1.15
log
@	* arm-tdep.c (arm_frame_chain_valid):  Remove unnecessary test.
	* d10v-tdep.c (d10v_frame_chain_valid): Remove unnecessary tests.
	* hppa-tdep.c (hppa_frame_chain_valid): Remove unnecessary test.

	* blockframe.c: Include "gdbcmd.h" and "command.h".
	(backtrace_below_main): New variable.
	(file_frame_chain_valid, func_frame_chain_valid)
	(nonnull_frame_chain_valid, generic_file_frame_chain_valid)
	(generic_func_frame_chain_valid): Remove functions.
	(frame_chain_valid, do_flush_frames_sfunc): New functions.
	(_initialize_blockframe): New function.
	* Makefile.in (blockframe.o): Update dependencies.
	* frame.c (frame_saved_regs_id_unwind, get_prev_frame): Remove FIXME
	comment.  Call frame_chain_valid ().
	* frame.h: Remove old prototypes.  Add prototype for
	frame_chain_valid and update comments to match.
	* gdbarch.sh: Change FRAME_CHAIN_VALID into a predicated function.
	Remove old comment.
	* gdbarch.h: Regenerated.
	* gdbarch.c: Regenerated.

Plus updates to all other targets not to provide a FRAME_CHAIN_VALID.
@
text
@d1 231
a231 231
/* Parameters for execution on a Mitsubishi m32r processor.
   Copyright 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003
   Free Software Foundation, Inc. 

   This file is part of GDB.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place - Suite 330,
   Boston, MA 02111-1307, USA.  */

#include "regcache.h"

/* Used by mswin.  */
#define TARGET_M32R 1

/* mvs_check REGISTER_NAMES */
#define REGISTER_NAMES \
{ "r0", "r1", "r2", "r3", "r4", "r5", "r6", "r7", \
  "r8", "r9", "r10", "r11", "r12", "fp", "lr", "sp", \
  "psw", "cbr", "spi", "spu", "bpc", "pc", "accl", "acch", \
    /*  "cond", "sm", "bsm", "ie", "bie", "bcarry",  */ \
}
/* mvs_check  NUM_REGS */
#define NUM_REGS 			24

/* mvs_check  REGISTER_SIZE */
#define REGISTER_SIZE 			4
/* mvs_check  MAX_REGISTER_RAW_SIZE */
#define MAX_REGISTER_RAW_SIZE		4

/* mvs_check  *_REGNUM */
#define R0_REGNUM	0
#define STRUCT_RETURN_REGNUM 0
#define ARG0_REGNUM	0
#define ARGLAST_REGNUM	3
#define V0_REGNUM	0
#define V1_REGNUM	1
#define FP_REGNUM	13
#define RP_REGNUM	14
#define SP_REGNUM	15
#define PSW_REGNUM	16
#define CBR_REGNUM	17
#define SPI_REGNUM	18
#define SPU_REGNUM	19
#define BPC_REGNUM	20
#define PC_REGNUM	21
#define ACCL_REGNUM	22
#define ACCH_REGNUM	23

/* mvs_check  REGISTER_BYTES */
#define REGISTER_BYTES			(NUM_REGS * 4)

/* mvs_check  REGISTER_VIRTUAL_TYPE */
#define REGISTER_VIRTUAL_TYPE(REG)	builtin_type_int

/* mvs_check  REGISTER_BYTE */
#define REGISTER_BYTE(REG) 		((REG) * 4)
/* mvs_check  REGISTER_VIRTUAL_SIZE */
#define REGISTER_VIRTUAL_SIZE(REG) 	4
/* mvs_check  REGISTER_RAW_SIZE */
#define REGISTER_RAW_SIZE(REG)     	4

/* mvs_check  MAX_REGISTER_VIRTUAL_SIZE */
#define MAX_REGISTER_VIRTUAL_SIZE 	4

/* mvs_check  BREAKPOINT */
#define BREAKPOINT {0x10, 0xf1}

/* mvs_no_check  FUNCTION_START_OFFSET */
#define FUNCTION_START_OFFSET 0

/* mvs_check  DECR_PC_AFTER_BREAK */
#define DECR_PC_AFTER_BREAK 0

/* mvs_check  INNER_THAN */
#define INNER_THAN(lhs,rhs) ((lhs) < (rhs))

/* mvs_check  SAVED_PC_AFTER_CALL */
#define SAVED_PC_AFTER_CALL(fi) read_register (RP_REGNUM)

struct frame_info;
struct frame_saved_regs;
struct type;
struct value;

/* Define other aspects of the stack frame. 
   We keep the offsets of all saved registers, 'cause we need 'em a lot!
   We also keep the current size of the stack frame, and whether 
   the frame pointer is valid (for frameless functions, and when we're
   still in the prologue of a function with a frame) */

/* mvs_check  EXTRA_FRAME_INFO */
#define EXTRA_FRAME_INFO  	\
  struct frame_saved_regs fsr;	\
  int framesize;		\
  int using_frame_pointer;


extern void m32r_init_extra_frame_info (struct frame_info *fi);
/* mvs_check  INIT_EXTRA_FRAME_INFO */
#define INIT_EXTRA_FRAME_INFO(fromleaf, fi) m32r_init_extra_frame_info (fi)
/* mvs_no_check  DEPRECATED_INIT_FRAME_PC */
#define DEPRECATED_INIT_FRAME_PC		init_frame_pc_noop

extern void
m32r_frame_find_saved_regs (struct frame_info *fi,
			    struct frame_saved_regs *regaddr);

/* Put here the code to store, into a struct frame_saved_regs,
   the addresses of the saved registers of frame described by FRAME_INFO.
   This includes special registers such as pc and fp saved in special
   ways in the stack frame.  sp is even more special:
   the address we return for it IS the sp for the next frame.  */

/* mvs_check  FRAME_FIND_SAVED_REGS */
#define FRAME_FIND_SAVED_REGS(frame_info, frame_saved_regs)	    \
   m32r_frame_find_saved_regs(frame_info, &(frame_saved_regs))

extern CORE_ADDR m32r_frame_chain (struct frame_info *fi);
/* mvs_check  FRAME_CHAIN */
#define FRAME_CHAIN(fi) 		m32r_frame_chain (fi)

extern CORE_ADDR m32r_find_callers_reg (struct frame_info *fi, int regnum);
extern CORE_ADDR m32r_frame_saved_pc (struct frame_info *);
/* mvs_check  FRAME_SAVED_PC */
#define FRAME_SAVED_PC(fi)		m32r_frame_saved_pc (fi)

/* mvs_check  DEPRECATED_EXTRACT_RETURN_VALUE */
#define DEPRECATED_EXTRACT_RETURN_VALUE(TYPE, REGBUF, VALBUF) \
  memcpy ((VALBUF), \
	  (char *)(REGBUF) + REGISTER_BYTE (V0_REGNUM) + \
	  ((TYPE_LENGTH (TYPE) > 4 ? 8 : 4) - TYPE_LENGTH (TYPE)), \
	  TYPE_LENGTH (TYPE))

/* mvs_check  DEPRECATED_STORE_RETURN_VALUE */
#define DEPRECATED_STORE_RETURN_VALUE(TYPE, VALBUF) \
  deprecated_write_register_bytes(REGISTER_BYTE (V0_REGNUM) + \
		       ((TYPE_LENGTH (TYPE) > 4 ? 8:4) - TYPE_LENGTH (TYPE)),\
		       (VALBUF), TYPE_LENGTH (TYPE));

extern CORE_ADDR m32r_skip_prologue (CORE_ADDR pc);
/* mvs_check  SKIP_PROLOGUE */
#define SKIP_PROLOGUE(pc) (m32r_skip_prologue (pc))

/* mvs_no_check  FRAME_ARGS_SKIP */
#define FRAME_ARGS_SKIP 0

/* mvs_no_check  FRAME_ARGS_ADDRESS */
#define FRAME_ARGS_ADDRESS(fi) ((fi)->frame)
/* mvs_no_check  FRAME_LOCALS_ADDRESS */
#define FRAME_LOCALS_ADDRESS(fi) ((fi)->frame)
/* mvs_no_check  FRAME_NUM_ARGS */
#define FRAME_NUM_ARGS(fi) (-1)

extern void m32r_write_sp (CORE_ADDR val);
#define TARGET_WRITE_SP m32r_write_sp






/* struct passing and returning stuff */
#define STORE_STRUCT_RETURN(STRUCT_ADDR, SP)	\
	write_register (0, STRUCT_ADDR)

extern use_struct_convention_fn m32r_use_struct_convention;
#define USE_STRUCT_CONVENTION(GCC_P, TYPE) m32r_use_struct_convention (GCC_P, TYPE)

#define DEPRECATED_EXTRACT_STRUCT_VALUE_ADDRESS(REGBUF) \
  extract_address (REGBUF + REGISTER_BYTE (V0_REGNUM), \
		   REGISTER_RAW_SIZE (V0_REGNUM))

#define REG_STRUCT_HAS_ADDR(gcc_p,type)     (TYPE_LENGTH (type) > 8)


/* generic dummy frame stuff */

#define PUSH_DUMMY_FRAME             generic_push_dummy_frame ()
#define DEPRECATED_PC_IN_CALL_DUMMY(PC, SP, FP) generic_pc_in_call_dummy (PC, SP, FP)


/* target-specific dummy_frame stuff */

extern struct frame_info *m32r_pop_frame (struct frame_info *frame);
/* mvs_check  POP_FRAME */
#define POP_FRAME m32r_pop_frame (get_current_frame ())

/* mvs_no_check  STACK_ALIGN */
/* #define STACK_ALIGN(x) ((x + 3) & ~3) */

extern CORE_ADDR m32r_push_return_address (CORE_ADDR, CORE_ADDR);
extern CORE_ADDR m32r_push_arguments (int nargs,
				      struct value **args,
				      CORE_ADDR sp,
				      unsigned char struct_return,
				      CORE_ADDR struct_addr);



/* mvs_no_check  PUSH_ARGUMENTS */
#define PUSH_ARGUMENTS(NARGS, ARGS, SP, STRUCT_RETURN, STRUCT_ADDR) \
  (m32r_push_arguments (NARGS, ARGS, SP, STRUCT_RETURN, STRUCT_ADDR))

#define PUSH_RETURN_ADDRESS(PC, SP)      m32r_push_return_address (PC, SP)

/* override the standard get_saved_register function with 
   one that takes account of generic CALL_DUMMY frames */
#define GET_SAVED_REGISTER(raw_buffer, optimized, addrp, frame, regnum, lval) \
     deprecated_generic_get_saved_register (raw_buffer, optimized, addrp, frame, regnum, lval)


#define DEPRECATED_USE_GENERIC_DUMMY_FRAMES 1
#define CALL_DUMMY                   {0}
#define CALL_DUMMY_LENGTH            (0)
#define CALL_DUMMY_START_OFFSET      (0)
#define CALL_DUMMY_BREAKPOINT_OFFSET (0)
#define FIX_CALL_DUMMY(DUMMY1, STARTADDR, FUNADDR, NARGS, ARGS, TYPE, GCCP)
#define CALL_DUMMY_LOCATION          AT_ENTRY_POINT
#define CALL_DUMMY_ADDRESS()         entry_point_address ()
@


1.14
log
@gdb/
	* buildsym.h (processing_hp_compilation): Remove obsolete variable.
	* gdbarch.sh Remove include of "value.h" in gdbarch.h.
	(COERCE_FLOAT_TO_DOUBLE): Remove.
	* gdbarch.c: Regenerate.
	* gdbarch.h: Regenerate.
	* Makefile.in: Remove value_h from gdbarch_h.
	* valops.c (coerce_float_to_double): New variable.
	(default_coerce_float_to_double): Remove.
	(standard_coerce_float_to_double): Remove.
	(value_arg_coerce): Use coerce_float_to_double.
	(_initialize_valops): Add "set coerce-float-to-double".
	* value.h (default_coerce_float_to_double): Remove prototype.
	(standard_coerce_float_to_double): Remove prototype.

	* hpread.c (hpread_process_one_debug_symbol): Mark C++ functions as
	prototyped.
	* mdebugread.c (parse_symbol): Likewise.
	* stabsread.c (define_symbol): Mark all functions as prototyped.

	* hppa-tdep.c (hppa_coerce_float_to_double): Remove.
	* alpha-tdep.c (alpha_gdbarch_init): Remove call to
	set_gdbarch_coerce_float_to_double.
	* arm-tdep.c (arm_gdbarch_init): Likewise.
	* frv-tdep.c (frv_gdbarch_init): Likewise.
	* h8300-tdep.c (h8300_gdbarch_init): Likewise (commented out).
	* i386-sol2-tdep.c (i386_sol2_init_abi): Likewise.
	* mips-tdep.c (mips_gdbarch_init): Likewise.
	(mips_coerce_float_to_double): Remove.
	* rs6000-tdep.c (rs6000_gdbarch_init): Likewise.
	(rs6000_coerce_float_to_double): Remove.
	* s390-tdep.c (s390_gdbarch_init): Likewise.
	* sh-tdep.c (sh_gdbarch_init): Likewise.
	(sh_coerce_float_to_double): Remove.
	* sparc-tdep.c (sparc_gdbarch_init): Likewise.
	(sparc_coerce_float_to_double): Remove.
	* v850-tdep.c (v850_gdbarch_init): Likewise.
	* xstormy16-tdep.c (xstormy16_gdbarch_init): Likewise.
	* config/m32r/tm-m32r.h (COERCE_FLOAT_TO_DOUBLE): Remove.
	* config/pa/tm-hppa.h: (COERCE_FLOAT_TO_DOUBLE): Remove.
	(hppa_coerce_float_to_double): Remove prototype.
	* config/sparc/tm-sparc.h (COERCE_FLOAT_TO_DOUBLE): Remove.
doc/
	* gdb.texinfo (Controlling GDB): Add ABI section.  Document
	"set coerce-float-to-double".
	* gdbint.texinfo (COERCE_FLOAT_TO_DOUBLE): Remove documentation.
testsuite/
	* gdb.base/callfuncs.exp: Don't XFAIL unprototyped functions for
	stabs.
	* gdb.base/completion.exp: Allow marker1(void) as well as marker1().
	* gdb.base/whatis.exp: Always allow (void) after function names.
@
text
@a133 2
#define FRAME_CHAIN_VALID(fp, frame)	generic_file_frame_chain_valid (fp, frame)

@


1.13
log
@2002-12-10  Andrew Cagney  <cagney@@redhat.com>

	* gdbarch.sh (DEPRECATED_INIT_FRAME_PC): Rename INIT_FRAME_PC.
	Change to a function with predicate.
	* gdbarch.h, gdbarch.c: Re-generate.
	* frame.c (get_prev_frame): Update.  Test
	DEPRECATED_INIT_FRAME_PC_P.
	* config/sparc/tm-sparc.h (DEPRECATED_INIT_FRAME_PC): Update.
	* config/rs6000/tm-rs6000.h (DEPRECATED_INIT_FRAME_PC): Update.
	* config/mn10200/tm-mn10200.h (DEPRECATED_INIT_FRAME_PC): Update.
	* alpha-tdep.c (alpha_gdbarch_init): Update.
	* mn10300-tdep.c (mn10300_gdbarch_init): Update.
	* mips-tdep.c (mips_gdbarch_init): Update.
	* i386-interix-tdep.c (i386_interix_init_abi): Update.
	* arm-tdep.c: Update comments.
	* h8300-tdep.c (h8300_gdbarch_init): Explicitly set init_frame_pc.
	* config/m32r/tm-m32r.h (DEPRECATED_INIT_FRAME_PC): Ditto.
	* frv-tdep.c (frv_gdbarch_init): Ditto.
	* x86-64-tdep.c (x86_64_init_abi): Ditto.
	* ia64-tdep.c (ia64_gdbarch_init): Ditto.
	* s390-tdep.c (s390_gdbarch_init): Ditto.
	* v850-tdep.c (v850_gdbarch_init): Ditto.
	* vax-tdep.c (vax_gdbarch_init): Ditto.
	* sh-tdep.c (sh_gdbarch_init): Ditto.
	* ns32k-tdep.c (ns32k_gdbarch_init): Ditto.
	* m68hc11-tdep.c (m68hc11_gdbarch_init): Ditto.
	* mcore-tdep.c (mcore_gdbarch_init): Ditto.
	* xstormy16-tdep.c (xstormy16_gdbarch_init): Ditto.
	* i386-tdep.c (i386_gdbarch_init): Ditto.
	* d10v-tdep.c (d10v_gdbarch_init): Ditto.
	* cris-tdep.c (cris_gdbarch_init): Ditto.
	* avr-tdep.c (avr_gdbarch_init): Ditto.
	* arm-tdep.c (arm_gdbarch_init): Ditto.
	* config/z8k/tm-z8k.h (INIT_FRAME_PC_FIRST): Delete macro.
	(DEPRECATED_INIT_FRAME_PC): Rename INIT_FRAME_PC.
@
text
@d2 2
a3 1
   Copyright 1996, 1997 Free Software Foundation, Inc. 
a166 2

#define COERCE_FLOAT_TO_DOUBLE(formal, actual) (1)
@


1.12
log
@2002-12-01  Andrew Cagney  <ac131313@@redhat.com>

	* gdbarch.sh (DEPRECATED_PC_IN_CALL_DUMMY): Rename
	PC_IN_CALL_DUMMY.  Change to predicate.  Always allow call.
	* gdbarch.h, gdbarch.c: Re-generate.
	* config/sparc/tm-sparc.h, config/sparc/tm-sp64.h: Update.
	* config/mn10200/tm-mn10200.h, config/h8500/tm-h8500.h: Update.
	* config/pa/tm-hppa.h, frame.h: Update.
	* x86-64-tdep.c, vax-tdep.c, sparc-tdep.c: Update.
	* s390-tdep.c, ns32k-tdep.c, mn10300-tdep.c: Update.
	* m68k-tdep.c, i386-tdep.c, frv-tdep.c: Update.
	* cris-tdep.c, alpha-tdep.c: Update.
	* frame.c (set_unwind_by_pc, create_new_frame): Use either
	DEPRECATED_PC_IN_CALL_DUMMY or pc_in_dummy_frame.
	(get_prev_frame): Ditto.

Index: doc/ChangeLog
2002-12-01  Andrew Cagney  <ac131313@@redhat.com>

	* gdbint.texinfo (Target Architecture Definition): Delete
	PC_IN_CALL_DUMMY.
@
text
@d112 2
a113 2
/* mvs_no_check  INIT_FRAME_PC */
#define INIT_FRAME_PC		/* Not necessary */
@


1.11
log
@2002-11-28  Andrew Cagney  <ac131313@@redhat.com>

	* gdbarch.sh (DEPRECATED_USE_GENERIC_DUMMY_FRAMES): Rename
	USE_GENERIC_DUMMY_FRAMES.
	* gdbarch.h, gdbarch.c: Regenerate.
	* valops.c, frame.c: Update.
	* config/z8k/tm-z8k.h, config/mn10200/tm-mn10200.h: Update.
	* config/m32r/tm-m32r.h, config/h8500/tm-h8500.h: Update.
	* config/pa/tm-hppa.h, blockframe.c: Update.
	* vax-tdep.c, sparc-tdep.c, ns32k-tdep.c: Ditto.
	* m68k-tdep.c, alpha-tdep.c: Ditto.

	* arm-tdep.c: Eliminate USE_GENERIC_DUMMY_FRAMES as always 1.
	* mips-tdep.c: Ditto.

Index: doc/ChangeLog
2002-11-28  Andrew Cagney  <ac131313@@redhat.com>

	* gdbint.texinfo (Host Definition): Delete documentation on
	USE_GENERIC_DUMMY_FRAMES.
@
text
@d194 1
a194 1
#define PC_IN_CALL_DUMMY(PC, SP, FP) generic_pc_in_call_dummy (PC, SP, FP)
@


1.10
log
@2002-11-13  Andrew Cagney  <cagney@@redhat.com>

	* regcache.h (deprecated_read_register_bytes): Rename
	read_register_bytes.
	(deprecated_write_register_bytes): Rename write_register_bytes.
	* alpha-tdep.c, arm-tdep.c, cris-tdep.c, d10v-tdep.c: Update.
	* dwarf2cfi.c, frv-tdep.c, hppa-tdep.c, ia64-tdep.c: Update.
	* m68k-tdep.c, mcore-tdep.c, mips-tdep.c, mn10300-tdep.c: Update.
	* ns32k-tdep.c, regcache.c, remote-sds.c, remote-vx.c: Update.
	* remote.c, rs6000-tdep.c, s390-tdep.c, sh-tdep.c: Update.
	* sparc-tdep.c, v850-tdep.c, vax-tdep.c, x86-64-tdep.c: Update.
	* xstormy16-tdep.c, z8k-tdep.c, config/nm-gnu.h: Update.
	* config/nm-m3.h, config/h8500/tm-h8500.h: Update.
	* config/i386/nm-ptx4.h, config/i386/nm-symmetry.h: Update.
	* config/m32r/tm-m32r.h, config/m68k/nm-sun3.h: Update.
	* config/m68k/tm-delta68.h, config/m68k/tm-linux.h: Update.
	* config/mn10200/tm-mn10200.h, config/pa/tm-hppa64.h: Update.
	* config/sparc/nm-nbsd.h, config/sparc/nm-sun4os4.h: Update.
	* config/sparc/nm-sun4sol2.h, config/sparc/tm-sparclet.h: Update.

2002-11-13  Andrew Cagney  <ac131313@@redhat.com>

	* mi-main.c (mi_cmd_data_write_register_values): Use
	deprecated_write_register_bytes instead of write_register_bytes.
@
text
@d227 1
a227 1
#define USE_GENERIC_DUMMY_FRAMES 1
@


1.9
log
@2002-11-01  Andrew Cagney  <cagney@@redhat.com>

	* frame.h (deprecated_generic_get_saved_register): Rename
	generic_get_saved_register.
	* blockframe.c (deprecated_generic_get_saved_register): Update.
	* xstormy16-tdep.c (xstormy16_get_saved_register): Update.
	(xstormy16_frame_saved_register): Update.
	* sh-tdep.c (sh_gdbarch_init): Update.
	* m68hc11-tdep.c (m68hc11_gdbarch_init): Update.
	* ia64-tdep.c (ia64_get_saved_register): Update.
	* cris-tdep.c (cris_gdbarch_init): Update.
	* config/m32r/tm-m32r.h (GET_SAVED_REGISTER): Update.
	* arm-tdep.c (arm_gdbarch_init): Update.
@
text
@d149 1
a149 1
  write_register_bytes(REGISTER_BYTE (V0_REGNUM) + \
@


1.8
log
@Index: ChangeLog
===================================================================
RCS file: /cvs/src/src/gdb/ChangeLog,v
retrieving revision 1.3144
diff -u -r1.3144 ChangeLog
--- ChangeLog	23 Aug 2002 23:05:38 -0000	1.3144
+++ ChangeLog	23 Aug 2002 23:14:45 -0000
@@@@ -1,3 +1,53 @@@@
2002-08-23  Andrew Cagney  <cagney@@redhat.com>

	* gdbarch.sh (STORE_RETURN_VALUE): Add regcache parameter.
	(DEPRECATED_STORE_RETURN_VALUE): New method.
	(EXTRACT_RETURN_VALUE): Make buffer parameter a void pointer.
	* gdbarch.h, gdbarch.c: Re-generate.

	* values.c (set_return_value): Pass current_regcache to
	STORE_RETURN_VALUE.
	* arch-utils.h (legacy_store_return_value): Declare.
	* arch-utils.c (legacy_store_return_value): New function.
	(legacy_extract_return_value): Update parameters.

	* config/pa/tm-hppa.h (DEPRECATED_STORE_RETURN_VALUE): Rename
	STORE_RETURN_VALUE.
	* config/pa/tm-hppa64.h (DEPRECATED_STORE_RETURN_VALUE): Ditto.
	* config/sparc/tm-sparc.h (DEPRECATED_STORE_RETURN_VALUE): Ditto.
	* config/z8k/tm-z8k.h (DEPRECATED_STORE_RETURN_VALUE): Ditto.
	* config/sparc/tm-sparclet.h (DEPRECATED_STORE_RETURN_VALUE): Ditto.
	* config/mn10200/tm-mn10200.h (DEPRECATED_STORE_RETURN_VALUE): Ditto.
	* config/m68k/tm-linux.h (DEPRECATED_STORE_RETURN_VALUE): Ditto.
	* config/m68k/tm-delta68.h (DEPRECATED_STORE_RETURN_VALUE): Ditto.
	* config/m32r/tm-m32r.h (DEPRECATED_STORE_RETURN_VALUE): Ditto.
	* config/h8500/tm-h8500.h (DEPRECATED_STORE_RETURN_VALUE): Ditto.
	* config/h8300/tm-h8300.h (DEPRECATED_STORE_RETURN_VALUE): Ditto.

	* m68hc11-tdep.c (m68hc11_gdbarch_init): Update.
	* i386-tdep.c (i386_extract_return_value): Update.
	* arch-utils.c (legacy_extract_return_value): Update.
	* frv-tdep.c (frv_gdbarch_init): Update.
	* cris-tdep.c (cris_gdbarch_init): Update.
	* d10v-tdep.c (d10v_gdbarch_init): Update.
	* rs6000-tdep.c (rs6000_gdbarch_init): Update.
	* m68k-tdep.c (m68k_gdbarch_init): Update.
	* mcore-tdep.c (mcore_gdbarch_init): Update.
	* mn10300-tdep.c (mn10300_gdbarch_init): Update.
	* s390-tdep.c (s390_gdbarch_init): Update.
	* sparc-tdep.c (sparc_gdbarch_init): Update.
	* sh-tdep.c (sh_gdbarch_init): Update.
	* x86-64-tdep.c (x86_64_gdbarch_init): Update.
	* v850-tdep.c (v850_gdbarch_init): Update.
	* avr-tdep.c (avr_gdbarch_init): Update.
	* ia64-tdep.c (ia64_gdbarch_init): Update.
	* ns32k-tdep.c (ns32k_gdbarch_init): Update.
	* vax-tdep.c (vax_gdbarch_init): Update.
	* alpha-tdep.c (alpha_gdbarch_init): Update.
	* arm-tdep.c (arm_gdbarch_init): Update.
	* mips-tdep.c (mips_gdbarch_init): Update.
	* i386-tdep.c (i386_gdbarch_init): Update.

Index: doc/ChangeLog
2002-08-21  Andrew Cagney  <cagney@@redhat.com>

	* gdbint.texinfo (Target Architecture Definition): Update
	STORE_RETURN_VALUE, mention regcache.
@
text
@d224 1
a224 1
     generic_get_saved_register (raw_buffer, optimized, addrp, frame, regnum, lval)
@


1.8.10.1
log
@Merge drow-cplus-branch to:
  cvs rtag -D 2003-12-14 00:00:00 UTC drow-cplus-merge-20031214 gdb+dejagnu
@
text
@@


1.8.8.1
log
@2002-11-15  David Carlton  <carlton@@math.stanford.edu>

	* Merge from mainline; tag is carlton_dictionary-20021115-merge.
@
text
@d149 1
a149 1
  deprecated_write_register_bytes(REGISTER_BYTE (V0_REGNUM) + \
d224 1
a224 1
     deprecated_generic_get_saved_register (raw_buffer, optimized, addrp, frame, regnum, lval)
@


1.8.8.2
log
@2002-12-23  David Carlton  <carlton@@math.stanford.edu>

	* Merge from mainline; tag is carlton_dictionary-20021223-merge.
@
text
@d112 2
a113 2
/* mvs_no_check  DEPRECATED_INIT_FRAME_PC */
#define DEPRECATED_INIT_FRAME_PC		init_frame_pc_noop
d194 1
a194 1
#define DEPRECATED_PC_IN_CALL_DUMMY(PC, SP, FP) generic_pc_in_call_dummy (PC, SP, FP)
d227 1
a227 1
#define DEPRECATED_USE_GENERIC_DUMMY_FRAMES 1
@


1.8.8.3
log
@2003-02-07  David Carlton  <carlton@@math.stanford.edu>

	* Merge with mainline; tag is carlton_dictionary-20030207-merge.
@
text
@d1 234
a234 231
// OBSOLETE /* Parameters for execution on a Mitsubishi m32r processor.
// OBSOLETE    Copyright 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003
// OBSOLETE    Free Software Foundation, Inc. 
// OBSOLETE 
// OBSOLETE    This file is part of GDB.
// OBSOLETE 
// OBSOLETE    This program is free software; you can redistribute it and/or modify
// OBSOLETE    it under the terms of the GNU General Public License as published by
// OBSOLETE    the Free Software Foundation; either version 2 of the License, or
// OBSOLETE    (at your option) any later version.
// OBSOLETE 
// OBSOLETE    This program is distributed in the hope that it will be useful,
// OBSOLETE    but WITHOUT ANY WARRANTY; without even the implied warranty of
// OBSOLETE    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// OBSOLETE    GNU General Public License for more details.
// OBSOLETE 
// OBSOLETE    You should have received a copy of the GNU General Public License
// OBSOLETE    along with this program; if not, write to the Free Software
// OBSOLETE    Foundation, Inc., 59 Temple Place - Suite 330,
// OBSOLETE    Boston, MA 02111-1307, USA.  */
// OBSOLETE 
// OBSOLETE #include "regcache.h"
// OBSOLETE 
// OBSOLETE /* Used by mswin.  */
// OBSOLETE #define TARGET_M32R 1
// OBSOLETE 
// OBSOLETE /* mvs_check REGISTER_NAMES */
// OBSOLETE #define REGISTER_NAMES \
// OBSOLETE { "r0", "r1", "r2", "r3", "r4", "r5", "r6", "r7", \
// OBSOLETE   "r8", "r9", "r10", "r11", "r12", "fp", "lr", "sp", \
// OBSOLETE   "psw", "cbr", "spi", "spu", "bpc", "pc", "accl", "acch", \
// OBSOLETE     /*  "cond", "sm", "bsm", "ie", "bie", "bcarry",  */ \
// OBSOLETE }
// OBSOLETE /* mvs_check  NUM_REGS */
// OBSOLETE #define NUM_REGS 			24
// OBSOLETE 
// OBSOLETE /* mvs_check  REGISTER_SIZE */
// OBSOLETE #define REGISTER_SIZE 			4
// OBSOLETE /* mvs_check  MAX_REGISTER_RAW_SIZE */
// OBSOLETE #define MAX_REGISTER_RAW_SIZE		4
// OBSOLETE 
// OBSOLETE /* mvs_check  *_REGNUM */
// OBSOLETE #define R0_REGNUM	0
// OBSOLETE #define STRUCT_RETURN_REGNUM 0
// OBSOLETE #define ARG0_REGNUM	0
// OBSOLETE #define ARGLAST_REGNUM	3
// OBSOLETE #define V0_REGNUM	0
// OBSOLETE #define V1_REGNUM	1
// OBSOLETE #define FP_REGNUM	13
// OBSOLETE #define RP_REGNUM	14
// OBSOLETE #define SP_REGNUM	15
// OBSOLETE #define PSW_REGNUM	16
// OBSOLETE #define CBR_REGNUM	17
// OBSOLETE #define SPI_REGNUM	18
// OBSOLETE #define SPU_REGNUM	19
// OBSOLETE #define BPC_REGNUM	20
// OBSOLETE #define PC_REGNUM	21
// OBSOLETE #define ACCL_REGNUM	22
// OBSOLETE #define ACCH_REGNUM	23
// OBSOLETE 
// OBSOLETE /* mvs_check  REGISTER_BYTES */
// OBSOLETE #define REGISTER_BYTES			(NUM_REGS * 4)
// OBSOLETE 
// OBSOLETE /* mvs_check  REGISTER_VIRTUAL_TYPE */
// OBSOLETE #define REGISTER_VIRTUAL_TYPE(REG)	builtin_type_int
// OBSOLETE 
// OBSOLETE /* mvs_check  REGISTER_BYTE */
// OBSOLETE #define REGISTER_BYTE(REG) 		((REG) * 4)
// OBSOLETE /* mvs_check  REGISTER_VIRTUAL_SIZE */
// OBSOLETE #define REGISTER_VIRTUAL_SIZE(REG) 	4
// OBSOLETE /* mvs_check  REGISTER_RAW_SIZE */
// OBSOLETE #define REGISTER_RAW_SIZE(REG)     	4
// OBSOLETE 
// OBSOLETE /* mvs_check  MAX_REGISTER_VIRTUAL_SIZE */
// OBSOLETE #define MAX_REGISTER_VIRTUAL_SIZE 	4
// OBSOLETE 
// OBSOLETE /* mvs_check  BREAKPOINT */
// OBSOLETE #define BREAKPOINT {0x10, 0xf1}
// OBSOLETE 
// OBSOLETE /* mvs_no_check  FUNCTION_START_OFFSET */
// OBSOLETE #define FUNCTION_START_OFFSET 0
// OBSOLETE 
// OBSOLETE /* mvs_check  DECR_PC_AFTER_BREAK */
// OBSOLETE #define DECR_PC_AFTER_BREAK 0
// OBSOLETE 
// OBSOLETE /* mvs_check  INNER_THAN */
// OBSOLETE #define INNER_THAN(lhs,rhs) ((lhs) < (rhs))
// OBSOLETE 
// OBSOLETE /* mvs_check  SAVED_PC_AFTER_CALL */
// OBSOLETE #define SAVED_PC_AFTER_CALL(fi) read_register (RP_REGNUM)
// OBSOLETE 
// OBSOLETE struct frame_info;
// OBSOLETE struct frame_saved_regs;
// OBSOLETE struct type;
// OBSOLETE struct value;
// OBSOLETE 
// OBSOLETE /* Define other aspects of the stack frame. 
// OBSOLETE    We keep the offsets of all saved registers, 'cause we need 'em a lot!
// OBSOLETE    We also keep the current size of the stack frame, and whether 
// OBSOLETE    the frame pointer is valid (for frameless functions, and when we're
// OBSOLETE    still in the prologue of a function with a frame) */
// OBSOLETE 
// OBSOLETE /* mvs_check  EXTRA_FRAME_INFO */
// OBSOLETE #define EXTRA_FRAME_INFO  	\
// OBSOLETE   struct frame_saved_regs fsr;	\
// OBSOLETE   int framesize;		\
// OBSOLETE   int using_frame_pointer;
// OBSOLETE 
// OBSOLETE 
// OBSOLETE extern void m32r_init_extra_frame_info (struct frame_info *fi);
// OBSOLETE /* mvs_check  INIT_EXTRA_FRAME_INFO */
// OBSOLETE #define INIT_EXTRA_FRAME_INFO(fromleaf, fi) m32r_init_extra_frame_info (fi)
// OBSOLETE /* mvs_no_check  DEPRECATED_INIT_FRAME_PC */
// OBSOLETE #define DEPRECATED_INIT_FRAME_PC		init_frame_pc_noop
// OBSOLETE 
// OBSOLETE extern void
// OBSOLETE m32r_frame_find_saved_regs (struct frame_info *fi,
// OBSOLETE 			    struct frame_saved_regs *regaddr);
// OBSOLETE 
// OBSOLETE /* Put here the code to store, into a struct frame_saved_regs,
// OBSOLETE    the addresses of the saved registers of frame described by FRAME_INFO.
// OBSOLETE    This includes special registers such as pc and fp saved in special
// OBSOLETE    ways in the stack frame.  sp is even more special:
// OBSOLETE    the address we return for it IS the sp for the next frame.  */
// OBSOLETE 
// OBSOLETE /* mvs_check  FRAME_FIND_SAVED_REGS */
// OBSOLETE #define FRAME_FIND_SAVED_REGS(frame_info, frame_saved_regs)	    \
// OBSOLETE    m32r_frame_find_saved_regs(frame_info, &(frame_saved_regs))
// OBSOLETE 
// OBSOLETE extern CORE_ADDR m32r_frame_chain (struct frame_info *fi);
// OBSOLETE /* mvs_check  FRAME_CHAIN */
// OBSOLETE #define FRAME_CHAIN(fi) 		m32r_frame_chain (fi)
// OBSOLETE 
// OBSOLETE extern CORE_ADDR m32r_find_callers_reg (struct frame_info *fi, int regnum);
// OBSOLETE extern CORE_ADDR m32r_frame_saved_pc (struct frame_info *);
// OBSOLETE /* mvs_check  FRAME_SAVED_PC */
// OBSOLETE #define FRAME_SAVED_PC(fi)		m32r_frame_saved_pc (fi)
// OBSOLETE 
// OBSOLETE /* mvs_check  DEPRECATED_EXTRACT_RETURN_VALUE */
// OBSOLETE #define DEPRECATED_EXTRACT_RETURN_VALUE(TYPE, REGBUF, VALBUF) \
// OBSOLETE   memcpy ((VALBUF), \
// OBSOLETE 	  (char *)(REGBUF) + REGISTER_BYTE (V0_REGNUM) + \
// OBSOLETE 	  ((TYPE_LENGTH (TYPE) > 4 ? 8 : 4) - TYPE_LENGTH (TYPE)), \
// OBSOLETE 	  TYPE_LENGTH (TYPE))
// OBSOLETE 
// OBSOLETE /* mvs_check  DEPRECATED_STORE_RETURN_VALUE */
// OBSOLETE #define DEPRECATED_STORE_RETURN_VALUE(TYPE, VALBUF) \
// OBSOLETE   deprecated_write_register_bytes(REGISTER_BYTE (V0_REGNUM) + \
// OBSOLETE 		       ((TYPE_LENGTH (TYPE) > 4 ? 8:4) - TYPE_LENGTH (TYPE)),\
// OBSOLETE 		       (VALBUF), TYPE_LENGTH (TYPE));
// OBSOLETE 
// OBSOLETE extern CORE_ADDR m32r_skip_prologue (CORE_ADDR pc);
// OBSOLETE /* mvs_check  SKIP_PROLOGUE */
// OBSOLETE #define SKIP_PROLOGUE(pc) (m32r_skip_prologue (pc))
// OBSOLETE 
// OBSOLETE /* mvs_no_check  FRAME_ARGS_SKIP */
// OBSOLETE #define FRAME_ARGS_SKIP 0
// OBSOLETE 
// OBSOLETE /* mvs_no_check  FRAME_ARGS_ADDRESS */
// OBSOLETE #define FRAME_ARGS_ADDRESS(fi) ((fi)->frame)
// OBSOLETE /* mvs_no_check  FRAME_LOCALS_ADDRESS */
// OBSOLETE #define FRAME_LOCALS_ADDRESS(fi) ((fi)->frame)
// OBSOLETE /* mvs_no_check  FRAME_NUM_ARGS */
// OBSOLETE #define FRAME_NUM_ARGS(fi) (-1)
// OBSOLETE 
// OBSOLETE extern void m32r_write_sp (CORE_ADDR val);
// OBSOLETE #define TARGET_WRITE_SP m32r_write_sp
// OBSOLETE 
// OBSOLETE 
// OBSOLETE 
// OBSOLETE 
// OBSOLETE 
// OBSOLETE 
// OBSOLETE /* struct passing and returning stuff */
// OBSOLETE #define STORE_STRUCT_RETURN(STRUCT_ADDR, SP)	\
// OBSOLETE 	write_register (0, STRUCT_ADDR)
// OBSOLETE 
// OBSOLETE extern use_struct_convention_fn m32r_use_struct_convention;
// OBSOLETE #define USE_STRUCT_CONVENTION(GCC_P, TYPE) m32r_use_struct_convention (GCC_P, TYPE)
// OBSOLETE 
// OBSOLETE #define DEPRECATED_EXTRACT_STRUCT_VALUE_ADDRESS(REGBUF) \
// OBSOLETE   extract_address (REGBUF + REGISTER_BYTE (V0_REGNUM), \
// OBSOLETE 		   REGISTER_RAW_SIZE (V0_REGNUM))
// OBSOLETE 
// OBSOLETE #define REG_STRUCT_HAS_ADDR(gcc_p,type)     (TYPE_LENGTH (type) > 8)
// OBSOLETE 
// OBSOLETE 
// OBSOLETE /* generic dummy frame stuff */
// OBSOLETE 
// OBSOLETE #define PUSH_DUMMY_FRAME             generic_push_dummy_frame ()
// OBSOLETE #define DEPRECATED_PC_IN_CALL_DUMMY(PC, SP, FP) generic_pc_in_call_dummy (PC, SP, FP)
// OBSOLETE 
// OBSOLETE 
// OBSOLETE /* target-specific dummy_frame stuff */
// OBSOLETE 
// OBSOLETE extern struct frame_info *m32r_pop_frame (struct frame_info *frame);
// OBSOLETE /* mvs_check  POP_FRAME */
// OBSOLETE #define POP_FRAME m32r_pop_frame (get_current_frame ())
// OBSOLETE 
// OBSOLETE /* mvs_no_check  STACK_ALIGN */
// OBSOLETE /* #define STACK_ALIGN(x) ((x + 3) & ~3) */
// OBSOLETE 
// OBSOLETE extern CORE_ADDR m32r_push_return_address (CORE_ADDR, CORE_ADDR);
// OBSOLETE extern CORE_ADDR m32r_push_arguments (int nargs,
// OBSOLETE 				      struct value **args,
// OBSOLETE 				      CORE_ADDR sp,
// OBSOLETE 				      unsigned char struct_return,
// OBSOLETE 				      CORE_ADDR struct_addr);
// OBSOLETE 
// OBSOLETE 
// OBSOLETE 
// OBSOLETE /* mvs_no_check  PUSH_ARGUMENTS */
// OBSOLETE #define PUSH_ARGUMENTS(NARGS, ARGS, SP, STRUCT_RETURN, STRUCT_ADDR) \
// OBSOLETE   (m32r_push_arguments (NARGS, ARGS, SP, STRUCT_RETURN, STRUCT_ADDR))
// OBSOLETE 
// OBSOLETE #define PUSH_RETURN_ADDRESS(PC, SP)      m32r_push_return_address (PC, SP)
// OBSOLETE 
// OBSOLETE /* override the standard get_saved_register function with 
// OBSOLETE    one that takes account of generic CALL_DUMMY frames */
// OBSOLETE #define GET_SAVED_REGISTER(raw_buffer, optimized, addrp, frame, regnum, lval) \
// OBSOLETE      deprecated_generic_get_saved_register (raw_buffer, optimized, addrp, frame, regnum, lval)
// OBSOLETE 
// OBSOLETE 
// OBSOLETE #define DEPRECATED_USE_GENERIC_DUMMY_FRAMES 1
// OBSOLETE #define CALL_DUMMY                   {0}
// OBSOLETE #define CALL_DUMMY_LENGTH            (0)
// OBSOLETE #define CALL_DUMMY_START_OFFSET      (0)
// OBSOLETE #define CALL_DUMMY_BREAKPOINT_OFFSET (0)
// OBSOLETE #define FIX_CALL_DUMMY(DUMMY1, STARTADDR, FUNADDR, NARGS, ARGS, TYPE, GCCP)
// OBSOLETE #define CALL_DUMMY_LOCATION          AT_ENTRY_POINT
// OBSOLETE #define CALL_DUMMY_ADDRESS()         entry_point_address ()
@


1.8.8.4
log
@2003-08-05  David Carlton  <carlton@@kealia.com>

	* configure.in (build_warnings): Delete -Wformat-nonliteral.
	* configure (build_warnings): Ditto.

	* Merge with mainline; tag is carlton_dictionary-20030805-merge.
@
text
@@


1.7
log
@+	* gdbarch.sh (DEPRECATED_EXTRACT_RETURN_VALUE): Rename
+	EXTRACT_RETURN_VALUE.
+	(DEPRECATED_EXTRACT_STRUCT_VALUE_ADDRESS): Rename
+	EXTRACT_STRUCT_VALUE_ADDRESS.
+	* gdbarch.h, gdbarch.c: Regenerate.
+
+	* values.c (value_being_returned): Handle
+	DEPRECATED_EXTRACT_STRUCT_VALUE_ADDRESS.
+	(EXTRACT_RETURN_VALUE): Define as DEPRECATED_EXTRACT_RETURN_VALUE.
+
+	* arm-linux-tdep.c (arm_linux_init_abi): Update.
+	* arm-tdep.c (arm_gdbarch_init): Update.
+	* avr-tdep.c (avr_gdbarch_init): Update.
+	* cris-tdep.c (cris_gdbarch_init): Update.
+	* d10v-tdep.c (d10v_gdbarch_init): Update.
+	* ia64-tdep.c (ia64_gdbarch_init): Update.
+	* m68hc11-tdep.c (m68hc11_gdbarch_init): Update.
+	* rs6000-tdep.c (rs6000_gdbarch_init): Update.
+	* s390-tdep.c (s390_gdbarch_init): Update.
+	* sh-tdep.c (sh_gdbarch_init): Update.
+	* s390-tdep.c (s390_gdbarch_init): Update.
+	* sparc-tdep.c (sparc_gdbarch_init): Update.
+	* ns32k-tdep.c (ns32k_gdbarch_init): Update.
+	* v850-tdep.c (v850_gdbarch_init): Update.
+	* vax-tdep.c (vax_gdbarch_init): Update.
+	* x86-64-tdep.c (x86_64_gdbarch_init): Update.
+	* xstormy16-tdep.c (xstormy16_gdbarch_init): Update.
+
+	* config/arc/tm-arc.h: Update.
+	* config/d30v/tm-d30v.h: Update.
+	* config/fr30/tm-fr30.h: Update.
+	* config/h8300/tm-h8300.h: Update.
* config/h8500/tm-h8500.h: Update.
* config/i386/tm-i386.h: Update.
* config/i386/tm-ptx.h: Update.
* config/i386/tm-symmetry.h: Update.
* config/i960/tm-i960.h: Update.
* config/m32r/tm-m32r.h: Update.
* config/m68k/tm-delta68.h: Update.
* config/m68k/tm-linux.h: Update.
* config/m68k/tm-m68k.h: Update.
* config/m88k/tm-m88k.h: Update.
* config/mcore/tm-mcore.h: Update.
* config/mips/tm-mips.h: Update.
* config/mn10200/tm-mn10200.h: Update.
* config/pa/tm-hppa.h: Update.
* config/pa/tm-hppa64.h: Update.
* config/sparc/tm-sp64.h: Update.
* config/sparc/tm-sparc.h: Update.
* config/sparc/tm-sparclet.h: Update.
* config/z8k/tm-z8k.h: Update.
@
text
@d147 2
a148 2
/* mvs_check  STORE_RETURN_VALUE */
#define STORE_RETURN_VALUE(TYPE, VALBUF) \
@


1.6
log
@Eliminate TARGET_BYTE_ORDER.
@
text
@d140 2
a141 2
/* mvs_check  EXTRACT_RETURN_VALUE */
#define EXTRACT_RETURN_VALUE(TYPE, REGBUF, VALBUF) \
d184 1
a184 1
#define EXTRACT_STRUCT_VALUE_ADDRESS(REGBUF) \
@


1.6.8.1
log
@Merge with mainline, kseitz_interps-20020619-merge.
@
text
@d140 2
a141 2
/* mvs_check  DEPRECATED_EXTRACT_RETURN_VALUE */
#define DEPRECATED_EXTRACT_RETURN_VALUE(TYPE, REGBUF, VALBUF) \
d184 1
a184 1
#define DEPRECATED_EXTRACT_STRUCT_VALUE_ADDRESS(REGBUF) \
@


1.6.8.2
log
@Merge with kseitz_interps-20020829-merge tag from trunk.
@
text
@d147 2
a148 2
/* mvs_check  DEPRECATED_STORE_RETURN_VALUE */
#define DEPRECATED_STORE_RETURN_VALUE(TYPE, VALBUF) \
@


1.6.8.3
log
@merge from mainline
@
text
@d224 1
a224 1
     deprecated_generic_get_saved_register (raw_buffer, optimized, addrp, frame, regnum, lval)
@


1.6.6.1
log
@merge from trunk
@
text
@d140 2
a141 2
/* mvs_check  DEPRECATED_EXTRACT_RETURN_VALUE */
#define DEPRECATED_EXTRACT_RETURN_VALUE(TYPE, REGBUF, VALBUF) \
d184 1
a184 1
#define DEPRECATED_EXTRACT_STRUCT_VALUE_ADDRESS(REGBUF) \
@


1.5
log
@s/BIG_ENDIAN/BFD_ENDIAN_BIG/
@
text
@a25 3
/* mvs_check TARGET_BYTE_ORDER BFD_ENDIAN_BIG */
#define TARGET_BYTE_ORDER BFD_ENDIAN_BIG

@


1.4
log
@Include regcache.h
@
text
@d26 2
a27 2
/* mvs_check TARGET_BYTE_ORDER BIG_ENDIAN */
#define TARGET_BYTE_ORDER BIG_ENDIAN
@


1.3
log
@PARAMS removal.
@
text
@d21 2
@


1.2
log
@Bring COERCE_FLOAT_TO_DOUBLE under gdbarch's control.
* valops.c (COERCE_FLOAT_TO_DOUBLE): Rework definition to be
more function-like.
(default_coerce_float_to_double, standard_coerce_float_to_double):
New functions.
(value_arg_coerce): Adjust for new definition.
* value.h (default_coerce_float_to_double,
standard_coerce_float_to_double): New declarations for the above.
* gdbarch.sh (coerce_float_to_double): New entry, replacing macro.
* gdbarch.c, gdbarch.h: Regenerated.
* tm-alpha.h, tm-fr30.h, tm-m32r.h, tm-mips.h, tm-hppa.h,
tm-rs6000.h, tm-sh.h, tm-sparc.h (COERCE_FLOAT_TO_DOUBLE): Change
definitions.
* mips-tdep.c (mips_coerce_float_to_double): Supply our own custom
function here.
(mips_gdbarch_init): Install that as our coerce_float_to_double
function.
@
text
@d110 1
a110 1
extern void m32r_init_extra_frame_info PARAMS ((struct frame_info * fi));
d117 2
a118 2
m32r_frame_find_saved_regs PARAMS ((struct frame_info * fi,
				    struct frame_saved_regs * regaddr));
d130 1
a130 1
extern CORE_ADDR m32r_frame_chain PARAMS ((struct frame_info * fi));
d136 2
a137 3
extern CORE_ADDR m32r_find_callers_reg PARAMS ((struct frame_info * fi,
						int regnum));
extern CORE_ADDR m32r_frame_saved_pc PARAMS ((struct frame_info *));
d154 1
a154 1
extern CORE_ADDR m32r_skip_prologue PARAMS ((CORE_ADDR pc));
d200 1
a200 1
extern struct frame_info *m32r_pop_frame PARAMS ((struct frame_info * frame));
d207 6
a212 6
extern CORE_ADDR m32r_push_return_address PARAMS ((CORE_ADDR, CORE_ADDR));
extern CORE_ADDR m32r_push_arguments PARAMS ((int nargs,
					      struct value ** args,
					      CORE_ADDR sp,
					      unsigned char struct_return,
					      CORE_ADDR struct_addr));
@


1.1
log
@Initial revision
@
text
@d4 1
a4 1
This file is part of GDB.
d6 14
a19 13
This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
a91 1
#ifdef __STDC__
a95 1
#endif
d110 1
a110 1
extern void m32r_init_extra_frame_info PARAMS ((struct frame_info *fi));
d116 3
a118 3
extern void 
m32r_frame_find_saved_regs PARAMS ((struct frame_info *fi, 
				    struct frame_saved_regs *regaddr));
d130 1
a130 1
extern CORE_ADDR m32r_frame_chain PARAMS ((struct frame_info *fi));
d134 1
a134 1
#define FRAME_CHAIN_VALID(fp, frame)	generic_frame_chain_valid (fp, frame)
d136 1
a136 1
extern CORE_ADDR m32r_find_callers_reg PARAMS ((struct frame_info *fi, 
d138 1
a138 1
extern CORE_ADDR m32r_frame_saved_pc PARAMS((struct frame_info *));
d157 1
a157 1
#define SKIP_PROLOGUE(pc) pc = m32r_skip_prologue (pc)
d167 1
a167 1
#define FRAME_NUM_ARGS(val, fi) ((val) = -1)
d169 1
a169 1
#define COERCE_FLOAT_TO_DOUBLE 1
d171 1
d196 1
a196 1
#define PC_IN_CALL_DUMMY(PC, SP, FP) generic_pc_in_call_dummy (PC, SP)
d201 1
a201 1
extern struct frame_info *m32r_pop_frame PARAMS ((struct frame_info *frame));
d209 2
a210 2
extern CORE_ADDR m32r_push_arguments PARAMS ((int nargs, 
					      struct value **args, 
d219 1
a219 1
  (SP) = m32r_push_arguments (NARGS, ARGS, SP, STRUCT_RETURN, STRUCT_ADDR)
d225 2
a226 1
#define GET_SAVED_REGISTER
d228 2
a229 1
#define USE_GENERIC_DUMMY_FRAMES
@


1.1.1.1
log
@Initial creation of sourceware repository
@
text
@@


1.1.1.2
log
@import gdb-19990422 snapshot
@
text
@d196 1
a196 1
#define PC_IN_CALL_DUMMY(PC, SP, FP) generic_pc_in_call_dummy (PC, SP, FP)
d225 1
a225 2
#define GET_SAVED_REGISTER(raw_buffer, optimized, addrp, frame, regnum, lval) \
     generic_get_saved_register (raw_buffer, optimized, addrp, frame, regnum, lval)
d227 1
a227 2

#define USE_GENERIC_DUMMY_FRAMES 1
@


1.1.1.3
log
@import gdb-19990504 snapshot
@
text
@d158 1
a158 1
#define SKIP_PROLOGUE(pc) (m32r_skip_prologue (pc))
@


1.1.1.4
log
@import gdb-1999-05-25 snapshot
@
text
@d168 1
a168 1
#define FRAME_NUM_ARGS(fi) (-1)
d219 1
a219 1
  (m32r_push_arguments (NARGS, ARGS, SP, STRUCT_RETURN, STRUCT_ADDR))
@


1.1.1.5
log
@import gdb-1999-07-07 post reformat
@
text
@d4 1
a4 1
   This file is part of GDB.
d6 13
a18 14
   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place - Suite 330,
   Boston, MA 02111-1307, USA.  */
d111 1
a111 1
extern void m32r_init_extra_frame_info PARAMS ((struct frame_info * fi));
d117 3
a119 3
extern void
m32r_frame_find_saved_regs PARAMS ((struct frame_info * fi,
				    struct frame_saved_regs * regaddr));
d131 1
a131 1
extern CORE_ADDR m32r_frame_chain PARAMS ((struct frame_info * fi));
d137 1
a137 1
extern CORE_ADDR m32r_find_callers_reg PARAMS ((struct frame_info * fi,
d139 1
a139 1
extern CORE_ADDR m32r_frame_saved_pc PARAMS ((struct frame_info *));
d201 1
a201 1
extern struct frame_info *m32r_pop_frame PARAMS ((struct frame_info * frame));
d209 2
a210 2
extern CORE_ADDR m32r_push_arguments PARAMS ((int nargs,
					      struct value ** args,
@


1.1.1.6
log
@import gdb-1999-08-30 snapshot
@
text
@d92 1
d97 1
@


1.1.1.7
log
@import gdb-1999-09-08 snapshot
@
text
@a170 1
extern void m32r_write_sp (CORE_ADDR val);
@


1.1.1.8
log
@import gdb-1999-12-13 snapshot
@
text
@d134 1
a134 1
#define FRAME_CHAIN_VALID(fp, frame)	generic_file_frame_chain_valid (fp, frame)
@


