head	1.24;
access;
symbols
	jimb-gdb_6_2-e500-branch:1.23.0.22
	jimb-gdb_6_2-e500-branchpoint:1.23
	gdb_6_2-20040730-release:1.23
	gdb_6_2-branch:1.23.0.18
	gdb_6_2-2004-07-10-gmt-branchpoint:1.23
	gdb_6_1_1-20040616-release:1.23
	gdb_6_1-2004-04-05-release:1.23
	drow_intercu-merge-20040402:1.23
	drow_intercu-merge-20040327:1.23
	ezannoni_pie-20040323-branch:1.23.0.16
	ezannoni_pie-20040323-branchpoint:1.23
	cagney_tramp-20040321-mergepoint:1.23
	cagney_tramp-20040309-branch:1.23.0.14
	cagney_tramp-20040309-branchpoint:1.23
	gdb_6_1-branch:1.23.0.12
	gdb_6_1-2004-03-01-gmt-branchpoint:1.23
	drow_intercu-20040221-branch:1.23.0.10
	drow_intercu-20040221-branchpoint:1.23
	cagney_bfdfile-20040213-branch:1.23.0.8
	cagney_bfdfile-20040213-branchpoint:1.23
	drow-cplus-merge-20040208:1.23
	carlton_dictionary-20040126-merge:1.23
	cagney_bigcore-20040122-branch:1.23.0.6
	cagney_bigcore-20040122-branchpoint:1.23
	drow-cplus-merge-20040113:1.23
	drow-cplus-merge-20031224:1.23
	drow-cplus-merge-20031220:1.23
	carlton_dictionary-20031215-merge:1.23
	drow-cplus-merge-20031214:1.23
	carlton-dictionary-20031111-merge:1.23
	gdb_6_0-2003-10-04-release:1.22
	kettenis_sparc-20030918-branch:1.23.0.4
	kettenis_sparc-20030918-branchpoint:1.23
	carlton_dictionary-20030917-merge:1.23
	ezannoni_pie-20030916-branchpoint:1.23
	ezannoni_pie-20030916-branch:1.23.0.2
	cagney_x86i386-20030821-branch:1.22.0.10
	cagney_x86i386-20030821-branchpoint:1.22
	carlton_dictionary-20030805-merge:1.22
	carlton_dictionary-20030627-merge:1.22
	gdb_6_0-branch:1.22.0.8
	gdb_6_0-2003-06-23-branchpoint:1.22
	jimb-ppc64-linux-20030613-branch:1.22.0.6
	jimb-ppc64-linux-20030613-branchpoint:1.22
	cagney_convert-20030606-branch:1.22.0.4
	cagney_convert-20030606-branchpoint:1.22
	cagney_writestrings-20030508-branch:1.20.0.24
	cagney_writestrings-20030508-branchpoint:1.20
	jimb-ppc64-linux-20030528-branch:1.22.0.2
	jimb-ppc64-linux-20030528-branchpoint:1.22
	carlton_dictionary-20030523-merge:1.21
	cagney_fileio-20030521-branch:1.21.0.2
	cagney_fileio-20030521-branchpoint:1.21
	kettenis_i386newframe-20030517-mergepoint:1.20
	jimb-ppc64-linux-20030509-branch:1.20.0.22
	jimb-ppc64-linux-20030509-branchpoint:1.20
	kettenis_i386newframe-20030504-mergepoint:1.20
	carlton_dictionary-20030430-merge:1.20
	kettenis_i386newframe-20030419-branch:1.20.0.20
	kettenis_i386newframe-20030419-branchpoint:1.20
	carlton_dictionary-20030416-merge:1.20
	cagney_frameaddr-20030409-mergepoint:1.20
	kettenis_i386newframe-20030406-branch:1.20.0.18
	kettenis_i386newframe-20030406-branchpoint:1.20
	cagney_frameaddr-20030403-branchpoint:1.20
	cagney_frameaddr-20030403-branch:1.20.0.16
	cagney_framebase-20030330-mergepoint:1.20
	cagney_framebase-20030326-branch:1.20.0.14
	cagney_framebase-20030326-branchpoint:1.20
	cagney_lazyid-20030317-branch:1.20.0.12
	cagney_lazyid-20030317-branchpoint:1.20
	kettenis-i386newframe-20030316-mergepoint:1.20
	offbyone-20030313-branch:1.20.0.10
	offbyone-20030313-branchpoint:1.20
	kettenis-i386newframe-20030308-branch:1.20.0.8
	kettenis-i386newframe-20030308-branchpoint:1.20
	carlton_dictionary-20030305-merge:1.20
	cagney_offbyone-20030303-branch:1.20.0.6
	cagney_offbyone-20030303-branchpoint:1.20
	carlton_dictionary-20030207-merge:1.20
	interps-20030203-mergepoint:1.20
	interps-20030202-branch:1.20.0.4
	interps-20030202-branchpoint:1.20
	cagney-unwind-20030108-branch:1.20.0.2
	cagney-unwind-20030108-branchpoint:1.20
	carlton_dictionary-20021223-merge:1.20
	gdb_5_3-2002-12-12-release:1.19
	carlton_dictionary-20021115-merge:1.19
	kseitz_interps-20021105-merge:1.19
	kseitz_interps-20021103-merge:1.19
	drow-cplus-merge-20021020:1.19
	drow-cplus-merge-20021025:1.19
	carlton_dictionary-20021025-merge:1.19
	carlton_dictionary-20021011-merge:1.19
	drow-cplus-branch:1.19.0.10
	drow-cplus-branchpoint:1.19
	kseitz_interps-20020930-merge:1.19
	carlton_dictionary-20020927-merge:1.19
	carlton_dictionary-branch:1.19.0.8
	carlton_dictionary-20020920-branchpoint:1.19
	gdb_5_3-branch:1.19.0.6
	gdb_5_3-2002-09-04-branchpoint:1.19
	kseitz_interps-20020829-merge:1.19
	cagney_sysregs-20020825-branch:1.19.0.4
	cagney_sysregs-20020825-branchpoint:1.19
	readline_4_3-import-branch:1.19.0.2
	readline_4_3-import-branchpoint:1.19
	gdb_5_2_1-2002-07-23-release:1.10
	kseitz_interps-20020528-branch:1.10.0.8
	kseitz_interps-20020528-branchpoint:1.10
	cagney_regbuf-20020515-branch:1.10.0.6
	cagney_regbuf-20020515-branchpoint:1.10
	jimb-macro-020506-branch:1.10.0.4
	jimb-macro-020506-branchpoint:1.10
	gdb_5_2-2002-04-29-release:1.10
	gdb_5_2-branch:1.10.0.2
	gdb_5_2-2002-03-03-branchpoint:1.10
	gdb_5_1_1-2002-01-24-release:1.7
	gdb_5_1_0_1-2002-01-03-release:1.7
	cygnus_cvs_20020108_pre:1.8
	gdb_5_1_0_1-2002-01-03-branchpoint:1.7
	gdb_5_1_0_1-2002-01-03-branch:1.7.0.6
	gdb_5_1-2001-11-21-release:1.7
	gdb_s390-2001-09-26-branch:1.7.0.4
	gdb_s390-2001-09-26-branchpoint:1.7
	gdb_5_1-2001-07-29-branch:1.7.0.2
	gdb_5_1-2001-07-29-branchpoint:1.7
	dberlin-typesystem-branch:1.6.0.2
	dberlin-typesystem-branchpoint:1.6
	gdb-post-ptid_t-2001-05-03:1.6
	gdb-pre-ptid_t-2001-05-03:1.6
	insight-precleanup-2001-01-01:1.4
	gdb-post-protoization-2000-07-29:1.3
	gdb-pre-protoization-2000-07-29:1.3
	gdb-premipsmulti-2000-06-06-branch:1.3.0.2
	gdb-premipsmulti-2000-06-06-branchpoint:1.3
	gdb-post-params-removal-2000-06-04:1.3
	gdb-pre-params-removal-2000-06-04:1.3
	gdb-post-params-removal-2000-05-28:1.3
	gdb-pre-params-removal-2000-05-28:1.2
	gdb_5_0-2000-05-19-release:1.1.1.5
	gdb_4_18_2-2000-05-18-release:1.1.1.5
	gdb_4_95_1-2000-05-11-snapshot:1.1.1.5
	gdb_4_95_0-2000-04-27-snapshot:1.1.1.5
	gdb_5_0-2000-04-10-branch:1.1.1.5.0.2
	gdb_5_0-2000-04-10-branchpoint:1.1.1.5
	repo-unification-2000-02-06:1.1.1.5
	insight-2000-02-04:1.1.1.5
	gdb-2000-02-04:1.1.1.5
	gdb-2000-02-02:1.1.1.5
	gdb-2000-02-01:1.1.1.5
	gdb-2000-01-31:1.1.1.5
	gdb-2000-01-26:1.1.1.5
	gdb-2000-01-24:1.1.1.5
	gdb-2000-01-17:1.1.1.5
	gdb-2000-01-10:1.1.1.5
	gdb-2000-01-05:1.1.1.5
	gdb-1999-12-21:1.1.1.5
	gdb-1999-12-13:1.1.1.5
	gdb-1999-12-07:1.1.1.5
	gdb-1999-12-06:1.1.1.5
	gdb-1999-11-16:1.1.1.5
	gdb-1999-11-08:1.1.1.5
	gdb-1999-11-01:1.1.1.5
	gdb-1999-10-25:1.1.1.5
	gdb-1999-10-18:1.1.1.5
	gdb-1999-10-11:1.1.1.5
	gdb-1999-10-04:1.1.1.5
	gdb-1999-09-28:1.1.1.5
	gdb-1999-09-21:1.1.1.5
	gdb-1999-09-13:1.1.1.5
	gdb-1999-09-08:1.1.1.5
	gdb-1999-08-30:1.1.1.5
	gdb-1999-08-23:1.1.1.4
	gdb-1999-08-16:1.1.1.4
	gdb-1999-08-09:1.1.1.4
	gdb-1999-08-02:1.1.1.4
	gdb-1999-07-26:1.1.1.4
	gdb-1999-07-19:1.1.1.4
	gdb-1999-07-12:1.1.1.4
	gdb-post-reformat-19990707:1.1.1.4
	gdb-1999-07-07-post-reformat-snapshot:1.1.1.4
	gdb-pre-reformat-19990707:1.1.1.3
	gdb-1999-07-07:1.1.1.3
	gdb-1999-07-05:1.1.1.3
	gdb-1999-06-28:1.1.1.3
	gdb-1999-06-21:1.1.1.3
	gdb-1999-06-14:1.1.1.3
	gdb-1999-06-07:1.1.1.3
	gdb-1999-06-01:1.1.1.3
	gdb-4_18-branch:1.1.1.1.0.2
	gdb-4_18-release:1.1.1.1
	gdb-1999-05-25:1.1.1.3
	gdb-1999-05-19:1.1.1.2
	gdb-1999-05-10:1.1.1.2
	gdb-19990504:1.1.1.2
	gdb-19990422:1.1.1.1
	SNAPSHOT:1.1.1
	gdb-4_18:1.1.1.1
	GDB_4_18:1.1.1;
locks; strict;
comment	@ * @;
expand	@o@;


1.24
date	2004.09.02.19.16.36;	author cagney;	state dead;
branches;
next	1.23;

1.23
date	2003.09.03.15.02.50;	author cagney;	state Exp;
branches
	1.23.10.1;
next	1.22;

1.22
date	2003.05.25.18.50.55;	author schwab;	state Exp;
branches;
next	1.21;

1.21
date	2003.05.18.21.10.11;	author schwab;	state Exp;
branches;
next	1.20;

1.20
date	2002.11.23.19.45.12;	author schwab;	state Exp;
branches;
next	1.19;

1.19
date	2002.07.09.19.48.40;	author graces;	state Exp;
branches
	1.19.8.1
	1.19.10.1;
next	1.18;

1.18
date	2002.07.02.18.13.54;	author graces;	state Exp;
branches;
next	1.17;

1.17
date	2002.06.26.17.09.30;	author graces;	state Exp;
branches;
next	1.16;

1.16
date	2002.06.24.17.48.43;	author graces;	state Exp;
branches;
next	1.15;

1.15
date	2002.06.22.00.33.56;	author cagney;	state Exp;
branches;
next	1.14;

1.14
date	2002.06.21.20.23.29;	author graces;	state Exp;
branches;
next	1.13;

1.13
date	2002.06.21.14.56.18;	author graces;	state Exp;
branches;
next	1.12;

1.12
date	2002.06.19.20.44.22;	author graces;	state Exp;
branches;
next	1.11;

1.11
date	2002.06.14.22.55.46;	author cagney;	state Exp;
branches;
next	1.10;

1.10
date	2002.01.29.04.42.40;	author cagney;	state Exp;
branches
	1.10.6.1
	1.10.8.1;
next	1.9;

1.9
date	2002.01.20.18.05.53;	author cagney;	state Exp;
branches;
next	1.8;

1.8
date	2002.01.05.04.30.34;	author cagney;	state Exp;
branches;
next	1.7;

1.7
date	2001.07.28.20.05.15;	author cagney;	state Exp;
branches;
next	1.6;

1.6
date	2001.03.14.23.23.12;	author cagney;	state Exp;
branches;
next	1.5;

1.5
date	2001.03.06.08.21.30;	author kevinb;	state Exp;
branches;
next	1.4;

1.4
date	2000.11.08.11.55.34;	author cagney;	state Exp;
branches;
next	1.3;

1.3
date	2000.05.28.01.12.36;	author kevinb;	state Exp;
branches;
next	1.2;

1.2
date	2000.04.14.19.13.22;	author jimb;	state Exp;
branches;
next	1.1;

1.1
date	99.04.16.01.34.22;	author shebs;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.04.16.01.34.22;	author shebs;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	99.05.05.14.43.34;	author shebs;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	99.05.25.18.04.56;	author jsm;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	99.07.07.20.14.23;	author jsm;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	99.08.31.01.07.28;	author jsm;	state Exp;
branches;
next	;

1.10.6.1
date	2002.06.15.16.43.08;	author cagney;	state Exp;
branches;
next	1.10.6.2;

1.10.6.2
date	2002.06.21.16.19.49;	author cagney;	state Exp;
branches;
next	1.10.6.3;

1.10.6.3
date	2002.06.21.16.46.56;	author cagney;	state Exp;
branches;
next	1.10.6.4;

1.10.6.4
date	2002.06.25.20.02.45;	author cagney;	state Exp;
branches;
next	;

1.10.8.1
date	2002.06.20.01.34.54;	author kseitz;	state Exp;
branches;
next	1.10.8.2;

1.10.8.2
date	2002.07.22.21.47.08;	author kseitz;	state Exp;
branches;
next	;

1.19.8.1
date	2002.12.23.19.39.00;	author carlton;	state Exp;
branches;
next	1.19.8.2;

1.19.8.2
date	2003.05.23.18.40.48;	author carlton;	state Exp;
branches;
next	1.19.8.3;

1.19.8.3
date	2003.06.27.21.50.15;	author carlton;	state Exp;
branches;
next	1.19.8.4;

1.19.8.4
date	2003.09.17.21.28.40;	author carlton;	state Exp;
branches;
next	;

1.19.10.1
date	2003.12.14.20.27.39;	author drow;	state Exp;
branches;
next	;

1.23.10.1
date	2004.09.16.17.01.32;	author drow;	state dead;
branches;
next	;


desc
@@


1.24
log
@2004-09-02  Andrew Cagney  <cagney@@gnu.org>

	* config/m68k/tm-vx68.h: Do not include "tm-m68k.h".
	* config/m68k/tm-os68k.h: Ditto.
	* config/m68k/tm-monitor.h: Ditto.
	* config/m68k/tm-cisco.h: Ditto.
	* config/m68k/st2000.mt (TM_FILE): Delete.
	* config/m68k/tm-vx68.h (GET_LONGJMP_TARGET): Delete.
	* config/m68k/tm-cisco.h (GET_LONGJMP_TARGET): Delete.
	* config/m68k/tm-m68k.h (m68k_get_longjmp_target): Delete file.
	* m68k-tdep.c (m68k_get_longjmp_target): Make static.
@
text
@/* Parameters for execution on a 68000 series machine.
   Copyright 1986, 1987, 1989, 1990, 1992, 1993, 1994, 1995, 1996, 1998,
   1999, 2000, 2003 Free Software Foundation, Inc.

   This file is part of GDB.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place - Suite 330,
   Boston, MA 02111-1307, USA.  */

extern int m68k_get_longjmp_target (CORE_ADDR *);
@


1.23
log
@2003-09-03  Andrew Cagney  <cagney@@redhat.com>

	* defs.h: Do not include "arch-utils.h".
	(GDB_MULTI_ARCH): If not defined, set to GDB_MULTI_ARCH_PARTIAL or
	GDB_MULTI_ARCH_PURE.
	* configure.in (GDB_MULTI_ARCH): Do not define.
	* configure, config.in: Regenerate.
	* configure.tgt: Do not set variable "gdb_multi_arch".
	* config/s390/s390x.mt (GDB_MULTI_ARCH): Delete.
	* config/s390/s390.mt (GDB_MULTI_ARCH): Delete.
	* config/i386/x86-64linux.mt (GDB_MULTI_ARCH): Delete.
	* config/v850/v850.mt (TM_FILE): Delete disabled definition.
	* config/m68hc11/m68hc11.mt (TM_FILE): Delete definition.
	* config/vax/tm-vax.h (GDB_MULTI_ARCH): Delete definition.
	* config/sparc/tm-sparc.h (GDB_MULTI_ARCH): Delete definition.
	* config/sparc/tm-sun4sol2.h (GDB_MULTI_ARCH): Delete definition.
	* config/sparc/tm-nbsd.h (GDB_MULTI_ARCH): Delete definition.
	* config/sparc/tm-linux.h (GDB_MULTI_ARCH): Delete definition.
	* config/sparc/tm-sp64.h (GDB_MULTI_ARCH): Delete definition.
	* config/pa/tm-hppa64.h (GDB_MULTI_ARCH): Delete definition.
	* config/ns32k/tm-ns32k.h (GDB_MULTI_ARCH): Delete definition.
	* config/m68k/tm-m68k.h (GDB_MULTI_ARCH): Delete definition.
	* config/i386/tm-i386.h (GDB_MULTI_ARCH): Delete definition.
	* config/h8300/tm-h8300.h (GDB_MULTI_ARCH): Delete definition.
	* config/frv/tm-frv.h (GDB_MULTI_ARCH): Delete definition.
	* config/alpha/tm-alpha.h (GDB_MULTI_ARCH): Delete definition.
@
text
@@


1.23.10.1
log
@Merge mainline to intercu branch - 2004-09-15
@
text
@@


1.22
log
@	* m68k-tdep.c (m68k_register_raw_size): Remove cast.
	(m68k_register_virtual_size): Likewise.
	(altos_skip_prologue): Remove obsolete function.
	(isi_frame_num_args): Likewise.
	(news_frame_num_args): Likewise.
	(m68k_fix_call_dummy): Make static.
	(m68k_push_dummy_frame): Likewise.
	(m68k_pop_frame): Likewise.
	(m68k_skip_prologue): Likewise.
	(m68k_frame_init_saved_regs): Likewise.
	(m68k_saved_pc_after_call): Likewise.
	(m68k_get_longjmp_target): Make multi-arch.
	(m68k_gdbarch_init): Allocate and initialize gdbarch_tdep
	structure.  Register m68k_get_longjmp_target if enabled.
	* m68k-tdep.h (struct gdbarch_tdep): Define.
	* config/m68k/tm-m68k.h: Don't include "regcache.h".

	* Makefile.in (config.status): Also depend on configure.tgt
	and configure.host.
	(m68klinux-tdep.o): Update dependencies.
	* configure.tgt (m68*-*-linux*): Set gdb_multi_arch to 1.
	* m68klinux-tdep.c (M68K_LINUX_JB_ELEMENT_SIZE): Define.
	(M68K_LINUX_JB_PC): Define.
	(m68k_linux_pc_in_sigtramp): Renamed from m68k_linux_in_sigtramp
	and take additional parameter.
	(m68k_linux_sigtramp_saved_pc): Update.
	(m68k_linux_init_abi): Set jb_pc and jb_elt_size.  Register
	m68k_linux_pc_in_sigtramp, in_plt_section,
	find_solib_trampoline_target.
	* config/m68k/tm-linux.h: Don't include any tm headers.
	(START_INFERIOR_TRAPS_EXPECTED): Remove definition.
	(JB_ELEMENT_SIZE): Likewise.
	(JB_PC): Likewise.
	(GET_LONGJMP_TARGET): Likewise.
	(IN_SIGTRAMP): Likewise.
	(SVR4_SHARED_LIBS): Define this and include "solib.h".
@
text
@a21 2
#define GDB_MULTI_ARCH GDB_MULTI_ARCH_PARTIAL

@


1.21
log
@	* Makefile (m68klinux-nat.o, m68klinux-tdep.o): Update
	dependencies.
	* config/m68k/tm-linux.h (DEPRECATED_EXTRACT_RETURN_VALUE): Define
	as m68k_linux_extract_return_value.
	(DEPRECATED_STORE_RETURN_VALUE): Define as
	m68k_linux_store_return_value.
	(DEPRECATED_EXTRACT_STRUCT_VALUE_ADDRESS): Define as
	m68k_linux_extract_struct_value_address.
	* m68klinux-tdep.c (m68k_linux_sigtramp_saved_pc): Use
	get_next_frame, get_frame_base, get_frame_pc.
	(m68k_linux_frame_saved_pc): Use get_frame_base.
	(m68k_linux_extract_return_value): New function.
	(m68k_linux_store_return_value): New function.
	(m68k_linux_extract_struct_value_address): New function.
	* config/m68k/tm-m68k.h: Declare m68k_get_longjmp_target.
@
text
@d3 1
a3 1
   1999, 2000 Free Software Foundation, Inc.
a20 2

#include "regcache.h"
@


1.20
log
@	* Makefile.in (m68k_tdep_h): Define.
	(abug-rom.o, cpu32bug-rom.o, dbug-rom.o, m68k-tdep.o, m68klinux-nat.o)
	(remote-est.o, rom68k-rom.o): Add $(m68k_tdep_h).
	* m68k-tdep.c: Move register number enum ...
	* m68k-tdep.h: ... to this new file and rename the constants from
	E_* to M68K_*.  All uses changed.
	* config/m68k/tm-m68k.h (D0_REGNUM, A0_REGNUM): Remove definitions.
	* abug-rom.c: Include "m68k-tdep.h".  Use
	M68K_D0_REGNUM/M68K_A0_REGNUM instead of D0_REGNUM/A0_REGNUM.
	* cpu32bug-rom.c: Likewise.
	* dbug-rom.c: Likewise.
	* m68k-tdep.c: Likewise.
	* m68klinux-nat.c: Likewise.
	* remote-est.c: Likewise.
	* rom68k-rom.c: Likewise.
	* config/m68k/tm-linux.h: Likewise.
@
text
@d25 2
@


1.19
log
@2002-07-09  Grace Sainsbury  <graces@@redhat.com>

	* config/m68k/tm-m68k.h: Remove macros wrapped in
	#if !GDB_MULTI_ARCH.
@
text
@a24 9

/* Generic 68000 stuff, to be included by other tm-*.h files.  */

/* D0_REGNM and A0_REGNUM must be defined here because they are
   used by the monitor.  */

#define D0_REGNUM 0
#define A0_REGNUM 8

@


1.19.10.1
log
@Merge drow-cplus-branch to:
  cvs rtag -D 2003-12-14 00:00:00 UTC drow-cplus-merge-20031214 gdb+dejagnu
@
text
@d3 1
a3 1
   1999, 2000, 2003 Free Software Foundation, Inc.
d22 12
a33 1
extern int m68k_get_longjmp_target (CORE_ADDR *);
@


1.19.8.1
log
@2002-12-23  David Carlton  <carlton@@math.stanford.edu>

	* Merge from mainline; tag is carlton_dictionary-20021223-merge.
@
text
@d25 9
@


1.19.8.2
log
@2003-05-23  David Carlton  <carlton@@bactrian.org>

	* Merge with mainline; tag is carlton_dictionary-20030523-merge.
@
text
@a24 2

extern int m68k_get_longjmp_target (CORE_ADDR *);
@


1.19.8.3
log
@2003-06-27  David Carlton  <carlton@@kealia.com>

	* Merge with mainline; tag is carlton_dictionary-20030627-merge.
@
text
@d3 1
a3 1
   1999, 2000, 2003 Free Software Foundation, Inc.
d21 2
@


1.19.8.4
log
@2003-09-17  David Carlton  <carlton@@kealia.com>

	* Merge with mainline; tag is carlton_dictionary-20030917-merge.
@
text
@d22 2
@


1.18
log
@* m68k-tdep.c (m68k_remote_breakpoint_from_pc): Add. Currently not
used in architecture vector. The default is
m68k_local_breakpoint_from_pc.
(m68k_local_breakpoint_from_pc): Add.
(enum): Add register numbers from tm-m68k.h.
(m68k_gdbarch_init): Add breakpoint_from_pc to architecture vector.
* config/m68k/tm-m68k.h (GDB_MULTI_ARCH): Set to
GDB_MULTI_ARCH_PARTIAL.
(BPT_VECTOR, REGISTER_BYTES_FP, REGISTER_BYTES_NOFP)
(NUM_FREGS, SIG_PC_FP_OFFSET, SP_ARG0, REMOTE_BPT_VECTOR): Move to
m68k-tdep.c.
(BREAKPOINT, REMOTE_BREAKPOINT): Remove.
(A1_REGNUM, FP0_REGNUM, FPC_REGNUM, FPS_REGNUM, FPI_REGNUM): Move
to enum in m68k-tdep.c
@
text
@a27 2
/* struct frame_info; */

a33 388
/* Sequence of bytes for breakpoint instruction.
   This is a TRAP instruction.  The last 4 bits (0xf below) is the
   vector.  Systems which don't use 0xf should define BPT_VECTOR
   themselves before including this file.  */

#if !GDB_MULTI_ARCH
#if !defined (BPT_VECTOR)
#define BPT_VECTOR 0xf
#endif

#if !defined (BREAKPOINT)
#define BREAKPOINT {0x4e, (0x40 | BPT_VECTOR)}
#endif

/* We default to vector 1 for the "remote" target, but allow targets
   to override.  */
#if !defined (REMOTE_BPT_VECTOR)
#define REMOTE_BPT_VECTOR 1
#endif
#endif

#if !GDB_MULTI_ARCH
#if !defined (REMOTE_BREAKPOINT)
#define REMOTE_BREAKPOINT {0x4e, (0x40 | REMOTE_BPT_VECTOR)}
#endif
#endif

#if !GDB_MULTI_ARCH
#define REGISTER_BYTES_FP (16*4 + 8 + 8*12 + 3*4)
#define REGISTER_BYTES_NOFP (16*4 + 8)


#define NUM_FREGS (NUM_REGS-24)


/* This was determined by experimentation on hp300 BSD 4.3.  Perhaps
   it corresponds to some offset in /usr/include/sys/user.h or
   something like that.  Using some system include file would
   have the advantage of probably being more robust in the face
   of OS upgrades, but the disadvantage of being wrong for
   cross-debugging.  */

#define SIG_PC_FP_OFFSET 530

/* Offset from SP to first arg on stack at first instruction of a function */

#define SP_ARG0 (1 * 4)

#define TARGET_M68K
#endif

#if !GDB_MULTI_ARCH
#define TARGET_LONG_DOUBLE_FORMAT &floatformat_m68881_ext

#define TARGET_LONG_DOUBLE_BIT 96

/* Offset from address of function to start of its code.
   Zero on most machines.  */

#define FUNCTION_START_OFFSET 0

/* Advance PC across any function entry prologue instructions
   to reach some "real" code.  */

#if !defined(SKIP_PROLOGUE)
#define SKIP_PROLOGUE(ip) (m68k_skip_prologue (ip))
#endif
#endif
extern CORE_ADDR m68k_skip_prologue (CORE_ADDR ip);


/* Immediately after a function call, return the saved pc.
   Can't always go through the frames for this because on some machines
   the new frame is not set up until the new function executes
   some instructions.  */

#if !GDB_MULTI_ARCH
extern CORE_ADDR m68k_saved_pc_after_call (struct frame_info *);

#define SAVED_PC_AFTER_CALL(frame) \
  m68k_saved_pc_after_call(frame)
#endif

/* Stack grows downward.  */

#if !GDB_MULTI_ARCH
#define INNER_THAN(lhs,rhs) ((lhs) < (rhs))

/* Stack must be kept short aligned when doing function calls.  */

#define STACK_ALIGN(ADDR) (((ADDR) + 1) & ~1)
#endif

/* If your kernel resets the pc after the trap happens you may need to
   define this before including this file.  */

#if !GDB_MULTI_ARCH
#if !defined (DECR_PC_AFTER_BREAK)
#define DECR_PC_AFTER_BREAK 2
#endif
#endif

#if !GDB_MULTI_ARCH
#ifndef NUM_REGS
#define NUM_REGS 29
#endif
#endif

/* Say how long (ordinary) registers are.  This is a piece of bogosity
   used in push_word and a few other places; REGISTER_RAW_SIZE is the
   real way to know how big a register is.  */

#if !GDB_MULTI_ARCH
#define REGISTER_SIZE 4
#endif

#if !GDB_MULTI_ARCH
#ifndef REGISTER_BYTES_OK
#define REGISTER_BYTES_OK(b) \
   ((b) == REGISTER_BYTES_FP \
    || (b) == REGISTER_BYTES_NOFP)
#endif

#ifndef REGISTER_BYTES
#define REGISTER_BYTES (16*4 + 8 + 8*12 + 3*4)
#endif
#endif /* multi-arch */

/* Index within `registers' of the first byte of the space for
   register N.  */

#if !GDB_MULTI_ARCH
#define REGISTER_BYTE(N)  \
 ((N) >= FPC_REGNUM ? (((N) - FPC_REGNUM) * 4) + 168	\
  : (N) >= FP0_REGNUM ? (((N) - FP0_REGNUM) * 12) + 72	\
  : (N) * 4)
#endif

/* Number of bytes of storage in the actual machine representation
   for register N.  On the 68000, all regs are 4 bytes
   except the floating point regs which are 12 bytes.  */
/* Note that the unsigned cast here forces the result of the
   subtraction to very high positive values if N < FP0_REGNUM */
#if !GDB_MULTI_ARCH
#define REGISTER_RAW_SIZE(N) (((unsigned)(N) - FP0_REGNUM) < 8 ? 12 : 4)

/* Number of bytes of storage in the program's representation
   for register N.  On the 68000, all regs are 4 bytes
   except the floating point regs which are 12-byte long doubles.  */

#define REGISTER_VIRTUAL_SIZE(N) (((unsigned)(N) - FP0_REGNUM) < 8 ? 12 : 4)

/* Largest value REGISTER_RAW_SIZE can have.  */

#define MAX_REGISTER_RAW_SIZE 12

/* Largest value REGISTER_VIRTUAL_SIZE can have.  */

#define MAX_REGISTER_VIRTUAL_SIZE 12
#endif /* multi-arch */

/* Return the GDB type object for the "standard" data type of data 
   in register N.  This should be int for D0-D7, long double for FP0-FP7,
   and void pointer for all others (A0-A7, PC, SR, FPCONTROL etc).
   Note, for registers which contain addresses return pointer to void, 
   not pointer to char, because we don't want to attempt to print 
   the string after printing the address.  */
#if !GDB_MULTI_ARCH
#define REGISTER_VIRTUAL_TYPE(N) \
  ((unsigned) (N) >= FPC_REGNUM ? lookup_pointer_type (builtin_type_void) : \
   (unsigned) (N) >= FP0_REGNUM ? builtin_type_long_double :                \
   (unsigned) (N) >=  A0_REGNUM ? lookup_pointer_type (builtin_type_void) : \
   builtin_type_int)
#endif
/* Initializer for an array of names of registers.
   Entries beyond the first NUM_REGS are ignored.  */

#if !GDB_MULTI_ARCH
#define REGISTER_NAMES  \
 {"d0", "d1", "d2", "d3", "d4", "d5", "d6", "d7", \
  "a0", "a1", "a2", "a3", "a4", "a5", "fp", "sp", \
  "ps", "pc",  \
  "fp0", "fp1", "fp2", "fp3", "fp4", "fp5", "fp6", "fp7", \
  "fpcontrol", "fpstatus", "fpiaddr", "fpcode", "fpflags" }
#endif

/* Register numbers of various important registers.
   Note that some of these values are "real" register numbers,
   and correspond to the general registers of the machine,
   and some are "phony" register numbers which are too large
   to be actual register numbers as far as the user is concerned
   but do serve to get the desired values when passed to read_register.  */

#if !GDB_MULTI_ARCH

#define A1_REGNUM 9
#define FP_REGNUM 14		/* Contains address of executing stack frame */
#define SP_REGNUM 15		/* Contains address of top of stack */
#define PS_REGNUM 16		/* Contains processor status */
#define PC_REGNUM 17		/* Contains program counter */
#define FP0_REGNUM 18		/* Floating point register 0 */
#define FPC_REGNUM 26		/* 68881 control register */
#define FPS_REGNUM 27		/* 68881 status register */
#define FPI_REGNUM 28		/* 68881 iaddr register */
#endif

/* Store the address of the place in which to copy the structure the
   subroutine will return.  This is called from call_function. */
#if !GDB_MULTI_ARCH
#define STORE_STRUCT_RETURN(ADDR, SP) \
  { write_register (A1_REGNUM, (ADDR)); }

/* Extract from an array REGBUF containing the (raw) register state
   a function return value of type TYPE, and copy that, in virtual format,
   into VALBUF.  This is assuming that floating point values are returned
   as doubles in d0/d1.  */

#if !defined (DEPRECATED_EXTRACT_RETURN_VALUE)
#define DEPRECATED_EXTRACT_RETURN_VALUE(TYPE,REGBUF,VALBUF) \
  memcpy ((VALBUF),							\
	  (char *)(REGBUF) +						\
	         (TYPE_LENGTH(TYPE) >= 4 ? 0 : 4 - TYPE_LENGTH(TYPE)),	\
	  TYPE_LENGTH(TYPE))
#endif
#endif /* multi-arch */

/* Write into appropriate registers a function return value
   of type TYPE, given in virtual format.  Assumes floats are passed
   in d0/d1.  */

#if !GDB_MULTI_ARCH
#if !defined (STORE_RETURN_VALUE)
#define STORE_RETURN_VALUE(TYPE,VALBUF) \
  write_register_bytes (0, VALBUF, TYPE_LENGTH (TYPE))
#endif

/* Extract from an array REGBUF containing the (raw) register state
   the address in which a function should return its structure value,
   as a CORE_ADDR (or an expression that can be used as one).  */

#define DEPRECATED_EXTRACT_STRUCT_VALUE_ADDRESS(REGBUF) (*(CORE_ADDR *)(REGBUF))
#endif /* multi-arch */

/* Describe the pointer in each stack frame to the previous stack frame
   (its caller).  */

/* FRAME_CHAIN takes a frame's nominal address and produces the frame's
   chain-pointer.
   In the case of the 68000, the frame's nominal address
   is the address of a 4-byte word containing the calling frame's address.  */

/* If we are chaining from sigtramp, then manufacture a sigtramp frame
   (which isn't really on the stack.  I'm not sure this is right for anything
   but BSD4.3 on an hp300.  */
#if !GDB_MULTI_ARCH
#define FRAME_CHAIN(thisframe)  \
  (thisframe->signal_handler_caller \
   ? thisframe->frame \
   : (!inside_entry_file ((thisframe)->pc) \
      ? read_memory_integer ((thisframe)->frame, 4) \
      : 0))
#endif

/* Define other aspects of the stack frame.  */

/* A macro that tells us whether the function invocation represented
   by FI does not have a frame on the stack associated with it.  If it
   does not, FRAMELESS is set to 1, else 0.  */
#if !GDB_MULTI_ARCH
#define FRAMELESS_FUNCTION_INVOCATION(FI) \
     (((FI)->signal_handler_caller) ? 0 : frameless_look_for_prologue(FI))
#endif



#if !GDB_MULTI_ARCH
#define FRAME_SAVED_PC(FRAME) \
  (((FRAME)->signal_handler_caller \
    ? ((FRAME)->next \
       ? read_memory_integer ((FRAME)->next->frame + SIG_PC_FP_OFFSET, 4) \
       : read_memory_integer (read_register (SP_REGNUM) \
			      + SIG_PC_FP_OFFSET - 8, 4) \
       ) \
    : read_memory_integer ((FRAME)->frame + 4, 4)) \
   )
#endif

#if !GDB_MULTI_ARCH
#define FRAME_ARGS_ADDRESS(fi) ((fi)->frame)

#define FRAME_LOCALS_ADDRESS(fi) ((fi)->frame)
#endif

/* Set VAL to the number of args passed to frame described by FI.
   Can set VAL to -1, meaning no way to tell.  */

/* We can't tell how many args there are
   now that the C compiler delays popping them.  */
#if !GDB_MULTI_ARCH
#if !defined (FRAME_NUM_ARGS)
#define FRAME_NUM_ARGS(fi) (-1)
#endif


/* Return number of bytes at start of arglist that are not really args.  */

#define FRAME_ARGS_SKIP 8
#endif

/* Put here the code to store, into a struct frame_saved_regs,
   the addresses of the saved registers of frame described by FRAME_INFO.
   This includes special registers such as pc and fp saved in special
   ways in the stack frame.  sp is even more special:
   the address we return for it IS the sp for the next frame.  */

#if !GDB_MULTI_ARCH
#if !defined (FRAME_INIT_SAVED_REGS)
#define FRAME_INIT_SAVED_REGS(fi) m68k_frame_init_saved_regs ((fi))
void m68k_frame_init_saved_regs (struct frame_info *frame_info);
#endif /* no FRAME_INIT_SAVED_REGS.  */
#endif


/* Things needed for making the inferior call functions.  */

/* The CALL_DUMMY macro is the sequence of instructions, as disassembled
   by gdb itself:

   These instructions exist only so that m68k_find_saved_regs can parse
   them as a "prologue"; they are never executed.

   fmovemx fp0-fp7,sp@@-                 0xf227 0xe0ff
   moveml d0-a5,sp@@-                    0x48e7 0xfffc
   clrw sp@@-                            0x4267
   movew ccr,sp@@-                               0x42e7

   The arguments are pushed at this point by GDB; no code is needed in
   the dummy for this.  The CALL_DUMMY_START_OFFSET gives the position
   of the following jsr instruction.  That is where we start
   executing.

   jsr @@#0x32323232                     0x4eb9 0x3232 0x3232
   addal #0x69696969,sp                 0xdffc 0x6969 0x6969
   trap #<your BPT_VECTOR number here>  0x4e4?
   nop                                  0x4e71

   Note this is CALL_DUMMY_LENGTH bytes (28 for the above example).

   The dummy frame always saves the floating-point registers, whether they
   actually exist on this target or not.  */

/* FIXME: Wrong to hardwire this as BPT_VECTOR when sometimes it
   should be REMOTE_BPT_VECTOR.  Best way to fix it would be to define
   CALL_DUMMY_BREAKPOINT_OFFSET.  */
#if !GDB_MULTI_ARCH
#define CALL_DUMMY {0xf227e0ff, 0x48e7fffc, 0x426742e7, 0x4eb93232, 0x3232dffc, 0x69696969, (0x4e404e71 | (BPT_VECTOR << 16))}
#define CALL_DUMMY_LENGTH 28	/* Size of CALL_DUMMY */
#define CALL_DUMMY_START_OFFSET 12	/* Offset to jsr instruction */
#define CALL_DUMMY_BREAKPOINT_OFFSET (CALL_DUMMY_START_OFFSET + 12)

/* Insert the specified number of args and function address
   into a call sequence of the above form stored at DUMMYNAME.
   We use the BFD routines to store a big-endian value of known size.  */

#define FIX_CALL_DUMMY(dummyname, pc, fun, nargs, args, type, gcc_p)     \
{ bfd_putb32 (fun,     (unsigned char *) dummyname + CALL_DUMMY_START_OFFSET + 2);  \
  bfd_putb32 (nargs*4, (unsigned char *) dummyname + CALL_DUMMY_START_OFFSET + 8); }

/* Push an empty stack frame, to record the current PC, etc.  */

#define PUSH_DUMMY_FRAME	{ m68k_push_dummy_frame (); }

extern void m68k_push_dummy_frame (void);

extern void m68k_pop_frame (void);

/* Discard from the stack the innermost frame, restoring all registers.  */

#define POP_FRAME		{ m68k_pop_frame (); }


/* Figure out where the longjmp will land.  Slurp the args out of the stack.
   We expect the first arg to be a pointer to the jmp_buf structure from which
   we extract the pc (JB_PC) that we will land at.  The pc is copied into ADDR.
   This routine returns true on success */

extern int m68k_get_longjmp_target (CORE_ADDR *);
#endif
@


1.17
log
@* config/m68k/tm-m68k.h: Rearrange code so macros not in the
gdbarch vector are at the top.
(NUM_REGS): Remove.
(FP_REGNUM, SP_REGNUM, PS_REGNUM, PC_REGNUM, FP0_REGNUM): Remove.
(FRAME_ARGS_ADDRESS): Remove.
(FRAME_LOCALS_ADDRESS): Remove.
(FRAME_NUM_ARGS): Remove.
(FRAME_ARGS_SKIP): Remove.
* m68k-tdep.c (enum): Add eumeration of special register numbers.
(m68k_gdbarch_init): Add gdbarch initializations for macros
undefined in tm-m68k.h
@
text
@d24 1
a24 1
#define GDB_MULTI_ARCH 0
d28 7
a34 1
struct frame_info;
d41 1
d55 1
d57 1
d61 1
d63 1
d70 1
d85 1
a85 1

d162 1
a162 1
#endif //multi-arch
d195 1
a195 1
#endif //multi-arch
d229 1
a230 2
#define D0_REGNUM 0
#define A0_REGNUM 8
a231 1
#if !GDB_MULTI_ARCH
a236 1
#endif
d240 1
a240 1

d260 1
a260 1
#endif //multi-arch
d277 1
a277 1
#endif //multi-arch
@


1.16
log
@	* config/m68k/tm-m68k.h (DECR_PC_AFTER_BREAK): Remove.
	(REGISTER_BYTES_OK): Remove.
	(REGISTER_BYTES): Remove.
	(STORE_STRUCT_RETURN): Remove.
	(DEPRECATED_EXTRACT_RETURN_VALUE): Remove.
	(STORE_RETURN_VALUE): Remove.
	(DEPRECATED_EXTRACT_STRUCT_VALUE_ADDRESS): Remove.
	(FRAME_CHAIN): Remove.
	(FRAMELESS_FUNCTION_INVOCATION): Remove.
	(FRAME_SAVED_PC): Remove.
	* m68k-tdep.c (m68k_register_bytes_ok):Add.
	(m68k_store_struct_return): Add.
	(m68k_deprecated_extract_return_value): Add.
	(m68k_deprecated_extract_struct_value_address): Add.
	(m68k_store_return_value): Add.
	(m68k_frame_chain): Add.
	(m68k_frameless_function_invocation): Add.
	(m68k_frame_saved_pc): Add.
	(m68k_gdbarch_init): added set_gdbarch calls for new
	functions and deleted macros.
@
text
@d28 47
a99 2
struct frame_info;

a116 23
/* Sequence of bytes for breakpoint instruction.
   This is a TRAP instruction.  The last 4 bits (0xf below) is the
   vector.  Systems which don't use 0xf should define BPT_VECTOR
   themselves before including this file.  */

#if !defined (BPT_VECTOR)
#define BPT_VECTOR 0xf
#endif

#if !defined (BREAKPOINT)
#define BREAKPOINT {0x4e, (0x40 | BPT_VECTOR)}
#endif

/* We default to vector 1 for the "remote" target, but allow targets
   to override.  */
#if !defined (REMOTE_BPT_VECTOR)
#define REMOTE_BPT_VECTOR 1
#endif

#if !defined (REMOTE_BREAKPOINT)
#define REMOTE_BREAKPOINT {0x4e, (0x40 | REMOTE_BPT_VECTOR)}
#endif

d126 6
a139 11
#define REGISTER_BYTES_FP (16*4 + 8 + 8*12 + 3*4)
#define REGISTER_BYTES_NOFP (16*4 + 8)


#ifndef NUM_REGS
#define NUM_REGS 29
#endif


#define NUM_FREGS (NUM_REGS-24)

d217 1
d221 1
d227 1
a299 6
/* This was determined by experimentation on hp300 BSD 4.3.  Perhaps
   it corresponds to some offset in /usr/include/sys/user.h or
   something like that.  Using some system include file would
   have the advantage of probably being more robust in the face
   of OS upgrades, but the disadvantage of being wrong for
   cross-debugging.  */
a300 1
#define SIG_PC_FP_OFFSET 530
d314 1
d318 1
d325 1
d330 1
d334 1
a405 4
#endif
/* Offset from SP to first arg on stack at first instruction of a function */

#define SP_ARG0 (1 * 4)
a406 1
#define TARGET_M68K
d414 1
@


1.15
log
@* config/m68k/tm-m68k.h: Fix typo.
(FRAME_INIT_SAVED_REGS): Define when non-multi-arch.
(m68k_frame_init_saved_regs): Declare.
@
text
@d98 1
d102 1
d115 1
d120 1
d123 1
d133 1
d166 2
a167 1
#endif
d215 1
a215 1

d231 1
d237 1
d248 1
d261 1
d268 1
d275 1
d278 1
d289 1
d299 1
@


1.14
log
@* config/m68k/tm-m68k.h (REGISTER_BYTE, REGISTER_RAW_SIZE)
(REGISTER_VIRTUAL_SIZE, MAX_REGISTER_RAW_SIZE)
(REGISTER_VIRTUAL_TYPE, REGISTER_NAMES, TARGET_LONG_DOUBLE_FORMAT)
(FUNCTION_START_OFFSET, SKIP_PROLOGUE, SAVED_PC_AFTER_CALL)
(INNER_THAN, STACK_ALIGN, REGISTER_SIZE): Remove macros.

* m68k-tdep.c: Include arch-utils.h
(m68k_register_raw_size): Add.
(m68k_register_virtual_size): Add.
(m68k_register_virtual_type): Add.
(m68k_register_name): Add.
(m68k_stack_align): Add.
(m68k_register_byte): Add.
(m68k_gdbarch_init): Add set_gdbarch calls for macros removed in
tm-m68k.h.
@
text
@d301 13
d347 1
a347 1
#if !GDB_MULTI_ARCH_PARTIAL
@


1.13
log
@Replaced frame_find_saved_regs with frame_init_saved_regs. Converted
call dummy macros to multi-arch.
@
text
@d28 1
d44 1
d47 1
d55 1
d60 1
d64 1
d70 1
d106 1
d108 1
d132 1
d137 1
d144 1
a144 1

d160 1
a160 1

d167 1
a167 1

d173 1
a173 1

d177 1
d184 1
d204 1
@


1.12
log
@Added functions for multi-arch.
@
text
@a50 1
struct frame_saved_regs;
a52 2
extern void m68k_find_saved_regs (struct frame_info *,
				  struct frame_saved_regs *);
a286 10

/* Put here the code to store, into a struct frame_saved_regs,
   the addresses of the saved registers of frame described by FRAME_INFO.
   This includes special registers such as pc and fp saved in special
   ways in the stack frame.  sp is even more special:
   the address we return for it IS the sp for the next frame.  */

#if !defined (FRAME_FIND_SAVED_REGS)
#define FRAME_FIND_SAVED_REGS(fi,fsr) m68k_find_saved_regs ((fi), &(fsr))
#endif /* no FIND_FRAME_SAVED_REGS.  */
d320 1
a320 1

d345 1
a345 1

@


1.11
log
@+	* gdbarch.sh (DEPRECATED_EXTRACT_RETURN_VALUE): Rename
+	EXTRACT_RETURN_VALUE.
+	(DEPRECATED_EXTRACT_STRUCT_VALUE_ADDRESS): Rename
+	EXTRACT_STRUCT_VALUE_ADDRESS.
+	* gdbarch.h, gdbarch.c: Regenerate.
+
+	* values.c (value_being_returned): Handle
+	DEPRECATED_EXTRACT_STRUCT_VALUE_ADDRESS.
+	(EXTRACT_RETURN_VALUE): Define as DEPRECATED_EXTRACT_RETURN_VALUE.
+
+	* arm-linux-tdep.c (arm_linux_init_abi): Update.
+	* arm-tdep.c (arm_gdbarch_init): Update.
+	* avr-tdep.c (avr_gdbarch_init): Update.
+	* cris-tdep.c (cris_gdbarch_init): Update.
+	* d10v-tdep.c (d10v_gdbarch_init): Update.
+	* ia64-tdep.c (ia64_gdbarch_init): Update.
+	* m68hc11-tdep.c (m68hc11_gdbarch_init): Update.
+	* rs6000-tdep.c (rs6000_gdbarch_init): Update.
+	* s390-tdep.c (s390_gdbarch_init): Update.
+	* sh-tdep.c (sh_gdbarch_init): Update.
+	* s390-tdep.c (s390_gdbarch_init): Update.
+	* sparc-tdep.c (sparc_gdbarch_init): Update.
+	* ns32k-tdep.c (ns32k_gdbarch_init): Update.
+	* v850-tdep.c (v850_gdbarch_init): Update.
+	* vax-tdep.c (vax_gdbarch_init): Update.
+	* x86-64-tdep.c (x86_64_gdbarch_init): Update.
+	* xstormy16-tdep.c (xstormy16_gdbarch_init): Update.
+
+	* config/arc/tm-arc.h: Update.
+	* config/d30v/tm-d30v.h: Update.
+	* config/fr30/tm-fr30.h: Update.
+	* config/h8300/tm-h8300.h: Update.
* config/h8500/tm-h8500.h: Update.
* config/i386/tm-i386.h: Update.
* config/i386/tm-ptx.h: Update.
* config/i386/tm-symmetry.h: Update.
* config/i960/tm-i960.h: Update.
* config/m32r/tm-m32r.h: Update.
* config/m68k/tm-delta68.h: Update.
* config/m68k/tm-linux.h: Update.
* config/m68k/tm-m68k.h: Update.
* config/m88k/tm-m88k.h: Update.
* config/mcore/tm-mcore.h: Update.
* config/mips/tm-mips.h: Update.
* config/mn10200/tm-mn10200.h: Update.
* config/pa/tm-hppa.h: Update.
* config/pa/tm-hppa64.h: Update.
* config/sparc/tm-sp64.h: Update.
* config/sparc/tm-sparc.h: Update.
* config/sparc/tm-sparclet.h: Update.
* config/z8k/tm-z8k.h: Update.
@
text
@d24 2
@


1.10
log
@Eliminate TARGET_BYTE_ORDER.
@
text
@d204 2
a205 2
#if !defined (EXTRACT_RETURN_VALUE)
#define EXTRACT_RETURN_VALUE(TYPE,REGBUF,VALBUF) \
d225 1
a225 1
#define EXTRACT_STRUCT_VALUE_ADDRESS(REGBUF) (*(CORE_ADDR *)(REGBUF))
@


1.10.8.1
log
@Merge with mainline, kseitz_interps-20020619-merge.
@
text
@d204 2
a205 2
#if !defined (DEPRECATED_EXTRACT_RETURN_VALUE)
#define DEPRECATED_EXTRACT_RETURN_VALUE(TYPE,REGBUF,VALBUF) \
d225 1
a225 1
#define DEPRECATED_EXTRACT_STRUCT_VALUE_ADDRESS(REGBUF) (*(CORE_ADDR *)(REGBUF))
@


1.10.8.2
log
@Merge w/trunk (kseitz_interps-20020722-merge).
@
text
@d24 71
a94 1
#define GDB_MULTI_ARCH GDB_MULTI_ARCH_PARTIAL
d96 77
a172 1
/* Generic 68000 stuff, to be included by other tm-*.h files.  */
d174 6
a179 2
/* D0_REGNM and A0_REGNUM must be defined here because they are
   used by the monitor.  */
d183 184
d368 1
@


1.10.6.1
log
@merge from trunk
@
text
@d204 2
a205 2
#if !defined (DEPRECATED_EXTRACT_RETURN_VALUE)
#define DEPRECATED_EXTRACT_RETURN_VALUE(TYPE,REGBUF,VALBUF) \
d225 1
a225 1
#define DEPRECATED_EXTRACT_STRUCT_VALUE_ADDRESS(REGBUF) (*(CORE_ADDR *)(REGBUF))
@


1.10.6.2
log
@Merge with trunk.
@
text
@a23 2
#define GDB_MULTI_ARCH 0

@


1.10.6.3
log
@More merging.
@
text
@d51 1
d54 2
d290 10
d333 1
a333 1
#if !GDB_MULTI_ARCH_PARTIAL
d358 1
a358 1
#endif
@


1.10.6.4
log
@merge with trunk
@
text
@a27 1
#if !GDB_MULTI_ARCH
a42 1
#endif
a44 1

a51 1
#if !GDB_MULTI_ARCH
a55 1
#endif
a58 1
#if !GDB_MULTI_ARCH
a63 1
#endif
a90 1
#if !GDB_MULTI_ARCH
a93 1
#endif
a98 1
#if !GDB_MULTI_ARCH
a99 1
#endif
a103 1

a107 1

a109 1
#if !GDB_MULTI_ARCH
a118 1
#endif //multi-arch
a122 1
#if !GDB_MULTI_ARCH
a126 1
#endif
d133 1
a133 1
#if !GDB_MULTI_ARCH
a148 1
#endif //multi-arch
d156 1
a156 1
#if !GDB_MULTI_ARCH
d162 1
a162 1
#endif
a165 1
#if !GDB_MULTI_ARCH
a171 1
#endif
a191 1

d194 1
a194 1
#if !GDB_MULTI_ARCH
a209 1
#endif //multi-arch
a214 1
#if !GDB_MULTI_ARCH
a224 1
#endif //multi-arch
a236 1
#if !GDB_MULTI_ARCH
a242 1
#endif
a248 1
#if !GDB_MULTI_ARCH
a250 1
#endif
a260 1
#if !GDB_MULTI_ARCH
a269 1
#endif
a286 13

/* Put here the code to store, into a struct frame_saved_regs,
   the addresses of the saved registers of frame described by FRAME_INFO.
   This includes special registers such as pc and fp saved in special
   ways in the stack frame.  sp is even more special:
   the address we return for it IS the sp for the next frame.  */

#if !GDB_MULTI_ARCH
#if !defined (FRAME_INIT_SAVED_REGS)
#define FRAME_INIT_SAVED_REGS(fi) m68k_frame_init_saved_regs ((fi))
void m68k_frame_init_saved_regs (struct frame_info *frame_info);
#endif /* no FRAME_INIT_SAVED_REGS.  */
#endif
d320 1
a320 1
#if !GDB_MULTI_ARCH
@


1.9
log
@Eliminate IEEE_FLOAT.
@
text
@a25 3
/* Define the bit, byte, and word ordering of the machine.  */
#define TARGET_BYTE_ORDER BFD_ENDIAN_BIG

@


1.8
log
@s/BIG_ENDIAN/BFD_ENDIAN_BIG/
@
text
@a25 2
#define IEEE_FLOAT (1)

@


1.7
log
@From 2001-07-23 Andreas Schwab <schwab@@suse.de>:
* config/m68k/tm-m68k.h (TARGET_LONG_DOUBLE_FORMAT): Define.
(TARGET_LONG_DOUBLE_BIT): Define.
(REGISTER_VIRTUAL_SIZE): Return 12 for floating point registers.
(MAX_REGISTER_VIRTUAL_SIZE): Increase to 12.
(REGISTER_VIRTUAL_TYPE): Return builtin_type_long_double for
floating point registers.
(REGISTER_CONVERTIBLE, REGISTER_CONVERT_TO_VIRTUAL)
(REGISTER_CONVERT_TO_RAW): Remove.
* config/m68k/xm-linux.h (HOST_LONG_DOUBLE_FORMAT): Define.
@
text
@d29 1
a29 1
#define TARGET_BYTE_ORDER BIG_ENDIAN
@


1.6
log
@Include regcache.h
@
text
@d31 4
d144 1
a144 1
   except the floating point regs which are 8-byte doubles.  */
d146 1
a146 1
#define REGISTER_VIRTUAL_SIZE(N) (((unsigned)(N) - FP0_REGNUM) < 8 ? 8 : 4)
d154 1
a154 30
#define MAX_REGISTER_VIRTUAL_SIZE 8

/* Nonzero if register N requires conversion
   from raw format to virtual format.  */

#define REGISTER_CONVERTIBLE(N) (((unsigned)(N) - FP0_REGNUM) < 8)

#include "floatformat.h"

/* Convert data from raw format for register REGNUM in buffer FROM
   to virtual format with type TYPE in buffer TO.  */

#define REGISTER_CONVERT_TO_VIRTUAL(REGNUM,TYPE,FROM,TO) \
do									\
  {									\
    DOUBLEST dbl_tmp_val;							\
    floatformat_to_doublest (&floatformat_m68881_ext, (FROM), &dbl_tmp_val); \
    store_floating ((TO), TYPE_LENGTH (TYPE), dbl_tmp_val);		\
  } while (0)

/* Convert data from virtual format with type TYPE in buffer FROM
   to raw format for register REGNUM in buffer TO.  */

#define REGISTER_CONVERT_TO_RAW(TYPE,REGNUM,FROM,TO)	\
do									\
  {									\
    DOUBLEST dbl_tmp_val;						\
    dbl_tmp_val = extract_floating ((FROM), TYPE_LENGTH (TYPE));	\
    floatformat_from_doublest (&floatformat_m68881_ext, &dbl_tmp_val, (TO)); \
  } while (0)
d157 1
a157 1
   in register N.  This should be int for D0-D7, double for FP0-FP7,
d165 1
a165 1
   (unsigned) (N) >= FP0_REGNUM ? builtin_type_double :                     \
@


1.5
log
@Update/correct copyright notices.
@
text
@d22 2
@


1.4
log
@Rename get_longjmp_target to m68k_get_longjmp_target.  Update all m68k
targets.
@
text
@d2 2
a3 1
   Copyright 1986, 1987, 1989, 1990, 1992 Free Software Foundation, Inc.
@


1.3
log
@PARAMS removal.
@
text
@d389 7
@


1.2
log
@Bring IEEE_FLOAT under gdbarch's control.
* gdbarch.sh (IEEE_FLOAT): New entry.
* gdbarch.c, gdbarch.h: Regenerated.
* valprint.c (IEEE_FLOAT): Provide a default #definition for this.
(print_floating): Use IEEE_FLOAT as if it were an expression; use
the code specific to IEEE-format numbers whenever the value of
IEEE_FLOAT is non-zero.
* config/a29k/tm-a29k.h, config/alpha/tm-alpha.h,
config/arc/tm-arc.h, config/arm/tm-arm.h, config/fr30/tm-fr30.h,
config/h8300/tm-h8300.h, config/i386/tm-i386.h,
config/i960/tm-i960.h, config/m88k/tm-m88k.h,
config/mips/tm-mips.h, config/pa/tm-hppa.h,
config/sparc/tm-sparc.h, config/delta/tm-delta.h,
config/frv/tm-frv.h (IEEE_FLOAT): For all ports that #define
IEEE_FLOAT, make sure they give it the value (1).
@
text
@d39 1
a39 1
extern CORE_ADDR m68k_skip_prologue PARAMS ((CORE_ADDR ip));
d49 3
a51 2
extern CORE_ADDR m68k_saved_pc_after_call PARAMS ((struct frame_info *));
extern void m68k_find_saved_regs PARAMS ((struct frame_info *, struct frame_saved_regs *));
d376 1
a376 1
extern void m68k_push_dummy_frame PARAMS ((void));
d378 1
a378 1
extern void m68k_pop_frame PARAMS ((void));
@


1.1
log
@Initial revision
@
text
@d4 1
a4 1
This file is part of GDB.
d6 14
a19 13
This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
d23 1
a23 1
#define IEEE_FLOAT 1
d37 2
a38 1
#define SKIP_PROLOGUE(ip)   {(ip) = m68k_skip_prologue(ip);}
a39 1
#endif
a45 1
#ifdef __STDC__
a47 1
#endif
d276 2
a277 7
#define FRAMELESS_FUNCTION_INVOCATION(FI, FRAMELESS) \
  do { \
    if ((FI)->signal_handler_caller) \
      (FRAMELESS) = 0; \
    else \
      (FRAMELESS) = frameless_look_for_prologue(FI); \
  } while (0)
d308 1
a308 1
#define FRAME_NUM_ARGS(val,fi) (val = -1)
d324 1
a325 1

d334 4
a337 4
	fmovemx fp0-fp7,sp@@-			0xf227 0xe0ff
	moveml d0-a5,sp@@-			0x48e7 0xfffc
	clrw sp@@-				0x4267
	movew ccr,sp@@-				0x42e7
d344 4
a347 4
	jsr @@#0x32323232			0x4eb9 0x3232 0x3232
	addal #0x69696969,sp			0xdffc 0x6969 0x6969
	trap #<your BPT_VECTOR number here>	0x4e4?
	nop					0x4e71
d359 2
a360 2
#define CALL_DUMMY_LENGTH 28		/* Size of CALL_DUMMY */
#define CALL_DUMMY_START_OFFSET 12	/* Offset to jsr instruction*/
@


1.1.1.1
log
@Initial creation of sourceware repository
@
text
@@


1.1.1.2
log
@import gdb-19990504 snapshot
@
text
@d36 2
a37 1
#define SKIP_PROLOGUE(ip) (m68k_skip_prologue (ip))
a38 1
extern CORE_ADDR m68k_skip_prologue PARAMS ((CORE_ADDR ip));
@


1.1.1.3
log
@import gdb-1999-05-25 snapshot
@
text
@d277 7
a283 2
#define FRAMELESS_FUNCTION_INVOCATION(FI) \
     (((FI)->signal_handler_caller) ? 0 : frameless_look_for_prologue(FI))
d314 1
a314 1
#define FRAME_NUM_ARGS(fi) (-1)
@


1.1.1.4
log
@import gdb-1999-07-07 post reformat
@
text
@d4 1
a4 1
   This file is part of GDB.
d6 13
a18 14
   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place - Suite 330,
   Boston, MA 02111-1307, USA.  */
d325 1
a326 1

d335 4
a338 4
   fmovemx fp0-fp7,sp@@-                 0xf227 0xe0ff
   moveml d0-a5,sp@@-                    0x48e7 0xfffc
   clrw sp@@-                            0x4267
   movew ccr,sp@@-                               0x42e7
d345 4
a348 4
   jsr @@#0x32323232                     0x4eb9 0x3232 0x3232
   addal #0x69696969,sp                 0xdffc 0x6969 0x6969
   trap #<your BPT_VECTOR number here>  0x4e4?
   nop                                  0x4e71
d360 2
a361 2
#define CALL_DUMMY_LENGTH 28	/* Size of CALL_DUMMY */
#define CALL_DUMMY_START_OFFSET 12	/* Offset to jsr instruction */
@


1.1.1.5
log
@import gdb-1999-08-30 snapshot
@
text
@d46 1
d49 1
@


