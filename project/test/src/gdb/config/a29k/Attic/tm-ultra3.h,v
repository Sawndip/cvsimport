head	1.4;
access;
symbols
	gdb_5_1_1-2002-01-24-release:1.3
	gdb_5_1_0_1-2002-01-03-release:1.3
	gdb_5_1_0_1-2002-01-03-branchpoint:1.3
	gdb_5_1_0_1-2002-01-03-branch:1.3.0.8
	gdb_5_1-2001-11-21-release:1.3
	gdb_s390-2001-09-26-branch:1.3.0.6
	gdb_s390-2001-09-26-branchpoint:1.3
	gdb_5_1-2001-07-29-branch:1.3.0.4
	gdb_5_1-2001-07-29-branchpoint:1.3
	dberlin-typesystem-branch:1.3.0.2
	dberlin-typesystem-branchpoint:1.3
	gdb-post-ptid_t-2001-05-03:1.3
	gdb-pre-ptid_t-2001-05-03:1.3
	insight-precleanup-2001-01-01:1.1.1.2
	gdb-post-protoization-2000-07-29:1.1.1.2
	gdb-pre-protoization-2000-07-29:1.1.1.2
	gdb-premipsmulti-2000-06-06-branch:1.1.1.2.0.4
	gdb-premipsmulti-2000-06-06-branchpoint:1.1.1.2
	gdb-post-params-removal-2000-06-04:1.1.1.2
	gdb-pre-params-removal-2000-06-04:1.1.1.2
	gdb-post-params-removal-2000-05-28:1.1.1.2
	gdb-pre-params-removal-2000-05-28:1.1.1.2
	gdb_5_0-2000-05-19-release:1.1.1.2
	gdb_4_18_2-2000-05-18-release:1.1.1.2
	gdb_4_95_1-2000-05-11-snapshot:1.1.1.2
	gdb_4_95_0-2000-04-27-snapshot:1.1.1.2
	gdb_5_0-2000-04-10-branch:1.1.1.2.0.2
	gdb_5_0-2000-04-10-branchpoint:1.1.1.2
	repo-unification-2000-02-06:1.1.1.2
	insight-2000-02-04:1.1.1.2
	gdb-2000-02-04:1.1.1.2
	gdb-2000-02-02:1.1.1.2
	gdb-2000-02-01:1.1.1.2
	gdb-2000-01-31:1.1.1.2
	gdb-2000-01-26:1.1.1.2
	gdb-2000-01-24:1.1.1.2
	gdb-2000-01-17:1.1.1.2
	gdb-2000-01-10:1.1.1.2
	gdb-2000-01-05:1.1.1.2
	gdb-1999-12-21:1.1.1.2
	gdb-1999-12-13:1.1.1.2
	gdb-1999-12-07:1.1.1.2
	gdb-1999-12-06:1.1.1.2
	gdb-1999-11-16:1.1.1.2
	gdb-1999-11-08:1.1.1.2
	gdb-1999-11-01:1.1.1.2
	gdb-1999-10-25:1.1.1.2
	gdb-1999-10-18:1.1.1.2
	gdb-1999-10-11:1.1.1.2
	gdb-1999-10-04:1.1.1.2
	gdb-1999-09-28:1.1.1.2
	gdb-1999-09-21:1.1.1.2
	gdb-1999-09-13:1.1.1.2
	gdb-1999-09-08:1.1.1.2
	gdb-1999-08-30:1.1.1.2
	gdb-1999-08-23:1.1.1.2
	gdb-1999-08-16:1.1.1.2
	gdb-1999-08-09:1.1.1.2
	gdb-1999-08-02:1.1.1.2
	gdb-1999-07-26:1.1.1.2
	gdb-1999-07-19:1.1.1.2
	gdb-1999-07-12:1.1.1.2
	gdb-post-reformat-19990707:1.1.1.2
	gdb-1999-07-07-post-reformat-snapshot:1.1.1.2
	gdb-pre-reformat-19990707:1.1.1.1
	gdb-1999-07-07:1.1.1.1
	gdb-1999-07-05:1.1.1.1
	gdb-1999-06-28:1.1.1.1
	gdb-1999-06-21:1.1.1.1
	gdb-1999-06-14:1.1.1.1
	gdb-1999-06-07:1.1.1.1
	gdb-1999-06-01:1.1.1.1
	gdb-4_18-branch:1.1.1.1.0.2
	gdb-4_18-release:1.1.1.1
	gdb-1999-05-25:1.1.1.1
	gdb-1999-05-19:1.1.1.1
	gdb-1999-05-10:1.1.1.1
	gdb-19990504:1.1.1.1
	gdb-19990422:1.1.1.1
	SNAPSHOT:1.1.1
	gdb-4_18:1.1.1.1
	GDB_4_18:1.1.1;
locks; strict;
comment	@ * @;
expand	@o@;


1.4
date	2001.12.01.22.34.11;	author cagney;	state dead;
branches;
next	1.3;

1.3
date	2001.04.05.14.49.29;	author cagney;	state Exp;
branches;
next	1.2;

1.2
date	2001.03.06.08.21.20;	author kevinb;	state Exp;
branches;
next	1.1;

1.1
date	99.04.16.01.34.14;	author shebs;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.04.16.01.34.14;	author shebs;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	99.07.07.20.11.48;	author jsm;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Zap the ultra series of a29k host and target.
@
text
@/* OBSOLETE /* Parameters for NYU Ultracomputer 29000 target, for GDB, the GNU debugger. */
/* OBSOLETE    Copyright 1990, 1991, 1993 Free Software Foundation, Inc. */
/* OBSOLETE    Contributed by David Wood @@ New York University (wood@@nyu.edu).  */
/* OBSOLETE  */
/* OBSOLETE    This file is part of GDB. */
/* OBSOLETE  */
/* OBSOLETE    This program is free software; you can redistribute it and/or modify */
/* OBSOLETE    it under the terms of the GNU General Public License as published by */
/* OBSOLETE    the Free Software Foundation; either version 2 of the License, or */
/* OBSOLETE    (at your option) any later version. */
/* OBSOLETE  */
/* OBSOLETE    This program is distributed in the hope that it will be useful, */
/* OBSOLETE    but WITHOUT ANY WARRANTY; without even the implied warranty of */
/* OBSOLETE    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the */
/* OBSOLETE    GNU General Public License for more details. */
/* OBSOLETE  */
/* OBSOLETE    You should have received a copy of the GNU General Public License */
/* OBSOLETE    along with this program; if not, write to the Free Software */
/* OBSOLETE    Foundation, Inc., 59 Temple Place - Suite 330, */
/* OBSOLETE    Boston, MA 02111-1307, USA.  */ */
/* OBSOLETE  */
/* OBSOLETE /* This file includes tm-a29k.h, but predefines REGISTER_NAMES and */
/* OBSOLETE    related macros.  The file supports a a29k running our flavor of */
/* OBSOLETE    Unix on our Ultra3 PE Boards.  */ */
/* OBSOLETE  */
/* OBSOLETE /* Byte order is configurable, but this machine runs big-endian.  */ */
/* OBSOLETE #define TARGET_BYTE_ORDER BIG_ENDIAN */
/* OBSOLETE  */
/* OBSOLETE /* Initializer for an array of names of registers. */
/* OBSOLETE    There should be NUM_REGS strings in this initializer. */
/* OBSOLETE  */ */
/* OBSOLETE #define NUM_REGS   (EXO_REGNUM + 1) */
/* OBSOLETE  */
/* OBSOLETE #define REGISTER_NAMES { 						 \ */
/* OBSOLETE  "gr1",									 \ */
/* OBSOLETE  "gr64", "gr65", "gr66", "gr67", "gr68", "gr69", "gr70", "gr71", "gr72", \ */
/* OBSOLETE  "gr73", "gr74", "gr75", "gr76", "gr77", "gr78", "gr79", "gr80", "gr81", \ */
/* OBSOLETE  "gr82", "gr83", "gr84", "gr85", "gr86", "gr87", "gr88", "gr89", "gr90", \ */
/* OBSOLETE  "gr91", "gr92", "gr93", "gr94", "gr95",				 \ */
/* OBSOLETE  "gr96", "gr97", "gr98", "gr99", "gr100", "gr101", "gr102", "gr103", "gr104", \ */
/* OBSOLETE  "gr105", "gr106", "gr107", "gr108", "gr109", "gr110", "gr111", "gr112", \ */
/* OBSOLETE  "gr113", "gr114", "gr115", "gr116", "gr117", "gr118", "gr119", "gr120", \ */
/* OBSOLETE  "gr121", "gr122", "gr123", "gr124", "gr125", "gr126", "gr127",		 \ */
/* OBSOLETE  "lr0", "lr1", "lr2", "lr3", "lr4", "lr5", "lr6", "lr7", "lr8", "lr9",   \ */
/* OBSOLETE  "lr10", "lr11", "lr12", "lr13", "lr14", "lr15", "lr16", "lr17", "lr18", \ */
/* OBSOLETE  "lr19", "lr20", "lr21", "lr22", "lr23", "lr24", "lr25", "lr26", "lr27", \ */
/* OBSOLETE  "lr28", "lr29", "lr30", "lr31", "lr32", "lr33", "lr34", "lr35", "lr36", \ */
/* OBSOLETE  "lr37", "lr38", "lr39", "lr40", "lr41", "lr42", "lr43", "lr44", "lr45", \ */
/* OBSOLETE  "lr46", "lr47", "lr48", "lr49", "lr50", "lr51", "lr52", "lr53", "lr54", \ */
/* OBSOLETE  "lr55", "lr56", "lr57", "lr58", "lr59", "lr60", "lr61", "lr62", "lr63", \ */
/* OBSOLETE  "lr64", "lr65", "lr66", "lr67", "lr68", "lr69", "lr70", "lr71", "lr72", \ */
/* OBSOLETE  "lr73", "lr74", "lr75", "lr76", "lr77", "lr78", "lr79", "lr80", "lr81", \ */
/* OBSOLETE  "lr82", "lr83", "lr84", "lr85", "lr86", "lr87", "lr88", "lr89", "lr90", \ */
/* OBSOLETE  "lr91", "lr92", "lr93", "lr94", "lr95", "lr96", "lr97", "lr98", "lr99", \ */
/* OBSOLETE  "lr100", "lr101", "lr102", "lr103", "lr104", "lr105", "lr106", "lr107", \ */
/* OBSOLETE  "lr108", "lr109", "lr110", "lr111", "lr112", "lr113", "lr114", "lr115", \ */
/* OBSOLETE  "lr116", "lr117", "lr118", "lr119", "lr120", "lr121", "lr122", "lr123", \ */
/* OBSOLETE  "lr124", "lr125", "lr126", "lr127",					 \ */
/* OBSOLETE  "vab", "ops", "cps", "cfg", "cha", "chd", "chc", "rbp", "tmc", "tmr",	 \ */
/* OBSOLETE  "pc0", "pc1", "pc2", "mmu", "lru",					 \ */
/* OBSOLETE  "ipc", "ipa", "ipb", "q", "alu", "bp", "fc", "cr",			 \ */
/* OBSOLETE  "fpe", "int", "fps", "exo" } */
/* OBSOLETE  */
/* OBSOLETE  */
/* OBSOLETE #ifdef KERNEL_DEBUGGING */
/* OBSOLETE #define	PADDR_U_REGNUM	22	/* gr86 */ */
/* OBSOLETE #define	RETURN_REGNUM	GR64_REGNUM */
/* OBSOLETE #else */
/* OBSOLETE #define	RETURN_REGNUM	GR96_REGNUM */
/* OBSOLETE #endif /* KERNEL_DEBUGGING */ */
/* OBSOLETE  */
/* OBSOLETE  */
/* OBSOLETE /* Should rename all GR96_REGNUM to RETURN_REGNUM */ */
/* OBSOLETE #define GR1_REGNUM 	(0) */
/* OBSOLETE #define GR64_REGNUM	1 */
/* OBSOLETE #define GR96_REGNUM 	(GR64_REGNUM + 32) */
/* OBSOLETE /* This needs to be the memory stack pointer, not the register stack pointer, */
/* OBSOLETE    to make call_function work right.  */ */
/* OBSOLETE #define SP_REGNUM 	MSP_REGNUM */
/* OBSOLETE  */
/* OBSOLETE #define FP_REGNUM 	(LR0_REGNUM + 1)	/* lr1 */ */
/* OBSOLETE /* Large Return Pointer  */ */
/* OBSOLETE #define LRP_REGNUM (123 - 96 + RETURN_REGNUM) */
/* OBSOLETE /* Static link pointer   */ */
/* OBSOLETE #define SLP_REGNUM (124 - 96 + RETURN_REGNUM) */
/* OBSOLETE /* Memory Stack Pointer.  */ */
/* OBSOLETE #define MSP_REGNUM (125 - 96 + RETURN_REGNUM) */
/* OBSOLETE /* Register allocate bound.  */ */
/* OBSOLETE #define RAB_REGNUM (126 - 96 + RETURN_REGNUM) */
/* OBSOLETE /* Register Free Bound.  */ */
/* OBSOLETE #define RFB_REGNUM (127 - 96 + RETURN_REGNUM) */
/* OBSOLETE /* Register Stack Pointer.  */ */
/* OBSOLETE #define RSP_REGNUM GR1_REGNUM */
/* OBSOLETE #define LR0_REGNUM ( 32 +  GR96_REGNUM) */
/* OBSOLETE  */
/* OBSOLETE /* Protected Special registers */ */
/* OBSOLETE #define VAB_REGNUM (LR0_REGNUM +  128) */
/* OBSOLETE #define OPS_REGNUM (VAB_REGNUM + 1) */
/* OBSOLETE #define CPS_REGNUM (VAB_REGNUM + 2) */
/* OBSOLETE #define CFG_REGNUM (VAB_REGNUM + 3) */
/* OBSOLETE #define CHA_REGNUM (VAB_REGNUM + 4) */
/* OBSOLETE #define CHD_REGNUM (VAB_REGNUM + 5) */
/* OBSOLETE #define CHC_REGNUM (VAB_REGNUM + 6) */
/* OBSOLETE #define RBP_REGNUM (VAB_REGNUM + 7) */
/* OBSOLETE #define TMC_REGNUM (VAB_REGNUM + 8) */
/* OBSOLETE #define TMR_REGNUM (VAB_REGNUM + 9) */
/* OBSOLETE #define NPC_REGNUM (VAB_REGNUM + 10)	/* pc0 */ */
/* OBSOLETE #define PC_REGNUM  (VAB_REGNUM + 11)	/* pc1 */ */
/* OBSOLETE #define PC2_REGNUM (VAB_REGNUM + 12)	/* pc2 */ */
/* OBSOLETE #define MMU_REGNUM (VAB_REGNUM + 13) */
/* OBSOLETE #define LRU_REGNUM (VAB_REGNUM + 14) */
/* OBSOLETE 	/* Register sequence gap */ */
/* OBSOLETE /* Unprotected Special registers */ */
/* OBSOLETE #define IPC_REGNUM (LRU_REGNUM + 1) */
/* OBSOLETE #define IPA_REGNUM (IPC_REGNUM + 1) */
/* OBSOLETE #define IPB_REGNUM (IPC_REGNUM + 2) */
/* OBSOLETE #define Q_REGNUM   (IPC_REGNUM + 3) */
/* OBSOLETE #define ALU_REGNUM (IPC_REGNUM + 4) */
/* OBSOLETE #define PS_REGNUM  ALU_REGNUM */
/* OBSOLETE #define BP_REGNUM  (IPC_REGNUM + 5) */
/* OBSOLETE #define FC_REGNUM  (IPC_REGNUM + 6) */
/* OBSOLETE #define CR_REGNUM  (IPC_REGNUM + 7) */
/* OBSOLETE 	/* Register sequence gap */ */
/* OBSOLETE #define FPE_REGNUM (CR_REGNUM  + 1) */
/* OBSOLETE #define INT_REGNUM (FPE_REGNUM + 1) */
/* OBSOLETE #define FPS_REGNUM (FPE_REGNUM + 2) */
/* OBSOLETE 	/* Register sequence gap */ */
/* OBSOLETE #define EXO_REGNUM (FPS_REGNUM + 1) */
/* OBSOLETE  */
/* OBSOLETE /* Special register #x.  */ */
/* OBSOLETE #define SR_REGNUM(x) \ */
/* OBSOLETE   ((x) < 15  ? VAB_REGNUM + (x)					 \ */
/* OBSOLETE    : (x) >= 128 && (x) < 136 ? IPC_REGNUM + (x-128)		 \ */
/* OBSOLETE    : (x) >= 160 && (x) < 163 ? FPE_REGNUM + (x-160)		 \ */
/* OBSOLETE    : (x) == 164 ? EXO_REGNUM                                     \ */
/* OBSOLETE    : (error ("Internal error in SR_REGNUM"), 0)) */
/* OBSOLETE  */
/* OBSOLETE #ifndef KERNEL_DEBUGGING */
/* OBSOLETE /* */
/* OBSOLETE  * This macro defines the register numbers (from REGISTER_NAMES) that */
/* OBSOLETE  * are effectively unavailable to the user through ptrace().  It allows  */
/* OBSOLETE  * us to include the whole register set in REGISTER_NAMES (inorder to  */
/* OBSOLETE  * better support remote debugging).  If it is used in  */
/* OBSOLETE  * fetch/store_inferior_registers() gdb will not complain about I/O errors  */
/* OBSOLETE  * on fetching these registers.  If all registers in REGISTER_NAMES */
/* OBSOLETE  * are available, then return false (0). */
/* OBSOLETE  */ */
/* OBSOLETE #define CANNOT_STORE_REGISTER(regno)		\ */
/* OBSOLETE                   (((regno)>=GR64_REGNUM && (regno)<GR64_REGNUM+32) ||	\ */
/* OBSOLETE                    ((regno)==VAB_REGNUM) ||	\ */
/* OBSOLETE 		   ((regno)==OPS_REGNUM) ||	\ */
/* OBSOLETE                    ((regno)>=CFG_REGNUM && (regno)<=TMR_REGNUM)     ||	\ */
/* OBSOLETE                    ((regno)==MMU_REGNUM) ||	\ */
/* OBSOLETE 		   ((regno)==LRU_REGNUM) ||	\ */
/* OBSOLETE                    ((regno)>=ALU_REGNUM) ||	\ */
/* OBSOLETE                    ((regno)==CR_REGNUM)  ||	\ */
/* OBSOLETE 		   ((regno)==EXO_REGNUM)) */
/* OBSOLETE #define CANNOT_FETCH_REGISTER(regno)	CANNOT_STORE_REGISTER(regno) */
/* OBSOLETE #endif /* KERNEL_DEBUGGING */ */
/* OBSOLETE  */
/* OBSOLETE /* */
/* OBSOLETE  * Converts an sdb register number to an internal gdb register number. */
/* OBSOLETE  * Currently under gcc, gr96->0...gr128->31...lr0->32...lr127->159, or... */
/* OBSOLETE  *                      gr64->0...gr95->31, lr0->32...lr127->159. */
/* OBSOLETE  */ */
/* OBSOLETE #define SDB_REG_TO_REGNUM(value) (((value)<32) ? ((value)+RETURN_REGNUM) : \ */
/* OBSOLETE 		 		                 ((value)-32+LR0_REGNUM)) */
/* OBSOLETE  */
/* OBSOLETE #ifdef KERNEL_DEBUGGING */
/* OBSOLETE   /* ublock virtual address as defined in our sys/param.h */ */
/* OBSOLETE   /* FIXME: Should get this from sys/param.h */ */
/* OBSOLETE #define UVADDR	((32*0x100000)-8192) */
/* OBSOLETE #endif */
/* OBSOLETE  */
/* OBSOLETE /* */
/* OBSOLETE  * Are we in sigtramp(), needed in infrun.c.  Specific to ultra3, because */
/* OBSOLETE  * we take off the leading '_'. */
/* OBSOLETE  */ */
/* OBSOLETE #if !defined(KERNEL_DEBUGGING) */
/* OBSOLETE #ifdef SYM1 */
/* OBSOLETE #define IN_SIGTRAMP(pc, name) (name && STREQ ("sigtramp", name)) */
/* OBSOLETE #else */
/* OBSOLETE Need to define */
/* OBSOLETE IN_SIGTRAMP () for sym2. */
/* OBSOLETE #endif */
/* OBSOLETE #endif				/* !KERNEL_DEBUGGING */ */
/* OBSOLETE  */
/* OBSOLETE #include "a29k/tm-a29k.h" */
/* OBSOLETE  */
/* OBSOLETE /**** The following are definitions that override those in tm-a29k.h ****/ */
/* OBSOLETE  */
/* OBSOLETE /* This sequence of words is the instructions */
/* OBSOLETE    mtsrim cr, 15 */
/* OBSOLETE    loadm 0, 0, lr2, msp     ; load first 16 words of arguments into registers */
/* OBSOLETE    add msp, msp, 16 * 4     ; point to the remaining arguments */
/* OBSOLETE    CONST_INSN: */
/* OBSOLETE    const gr96,inf */
/* OBSOLETE    consth gr96,inf */
/* OBSOLETE    calli lr0, gr96 */
/* OBSOLETE    aseq 0x40,gr1,gr1   ; nop */
/* OBSOLETE    asneq 0x50,gr1,gr1  ; breakpoint */
/* OBSOLETE    When KERNEL_DEBUGGIN is defined, msp -> gr93, gr96 -> gr64, */
/* OBSOLETE    7d  -> 5d,    60  -> 40 */
/* OBSOLETE  */ */
/* OBSOLETE  */
/* OBSOLETE /* Position of the "const" instruction within CALL_DUMMY in bytes.  */ */
/* OBSOLETE #undef CALL_DUMMY */
/* OBSOLETE #if TARGET_BYTE_ORDER == HOST_BYTE_ORDER */
/* OBSOLETE #ifdef KERNEL_DEBUGGING		/* gr96 -> gr64 */ */
/* OBSOLETE #define CALL_DUMMY {0x0400870f, 0x3600825d, 0x155d5d40, 0x03ff40ff,    \ */
/* OBSOLETE                     0x02ff40ff, 0xc8008040, 0x70400101, 0x72500101} */
/* OBSOLETE #else */
/* OBSOLETE #define CALL_DUMMY {0x0400870f, 0x3600827d, 0x157d7d40, 0x03ff60ff,    \ */
/* OBSOLETE                     0x02ff60ff, 0xc8008060, 0x70400101, 0x72500101} */
/* OBSOLETE #endif				/* KERNEL_DEBUGGING */ */
/* OBSOLETE #else				/* Byte order differs.  */ */
/* OBSOLETE you lose */
/* OBSOLETE #endif				/* Byte order differs.  */ */
/* OBSOLETE  */
/* OBSOLETE #if !defined(KERNEL_DEBUGGING) */
/* OBSOLETE #ifdef SYM1 */
/* OBSOLETE #undef  DECR_PC_AFTER_BREAK */
/* OBSOLETE #define DECR_PC_AFTER_BREAK 0	/* Sym1 kernel does the decrement */ */
/* OBSOLETE #else */
/* OBSOLETE ->"ULTRA3 running other than sym1 OS" !; */
/* OBSOLETE #endif */
/* OBSOLETE #endif /* !KERNEL_DEBUGGING */ */
@


1.3
log
@Obsolete a29k-*-* host and a29k-*-sym1* and a29k-*-kern* targets.
@
text
@@


1.2
log
@Update/correct copyright notices.
@
text
@d1 227
a227 227
/* Parameters for NYU Ultracomputer 29000 target, for GDB, the GNU debugger.
   Copyright 1990, 1991, 1993 Free Software Foundation, Inc.
   Contributed by David Wood @@ New York University (wood@@nyu.edu). 

   This file is part of GDB.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place - Suite 330,
   Boston, MA 02111-1307, USA.  */

/* This file includes tm-a29k.h, but predefines REGISTER_NAMES and
   related macros.  The file supports a a29k running our flavor of
   Unix on our Ultra3 PE Boards.  */

/* Byte order is configurable, but this machine runs big-endian.  */
#define TARGET_BYTE_ORDER BIG_ENDIAN

/* Initializer for an array of names of registers.
   There should be NUM_REGS strings in this initializer.
 */
#define NUM_REGS   (EXO_REGNUM + 1)

#define REGISTER_NAMES { 						 \
 "gr1",									 \
 "gr64", "gr65", "gr66", "gr67", "gr68", "gr69", "gr70", "gr71", "gr72", \
 "gr73", "gr74", "gr75", "gr76", "gr77", "gr78", "gr79", "gr80", "gr81", \
 "gr82", "gr83", "gr84", "gr85", "gr86", "gr87", "gr88", "gr89", "gr90", \
 "gr91", "gr92", "gr93", "gr94", "gr95",				 \
 "gr96", "gr97", "gr98", "gr99", "gr100", "gr101", "gr102", "gr103", "gr104", \
 "gr105", "gr106", "gr107", "gr108", "gr109", "gr110", "gr111", "gr112", \
 "gr113", "gr114", "gr115", "gr116", "gr117", "gr118", "gr119", "gr120", \
 "gr121", "gr122", "gr123", "gr124", "gr125", "gr126", "gr127",		 \
 "lr0", "lr1", "lr2", "lr3", "lr4", "lr5", "lr6", "lr7", "lr8", "lr9",   \
 "lr10", "lr11", "lr12", "lr13", "lr14", "lr15", "lr16", "lr17", "lr18", \
 "lr19", "lr20", "lr21", "lr22", "lr23", "lr24", "lr25", "lr26", "lr27", \
 "lr28", "lr29", "lr30", "lr31", "lr32", "lr33", "lr34", "lr35", "lr36", \
 "lr37", "lr38", "lr39", "lr40", "lr41", "lr42", "lr43", "lr44", "lr45", \
 "lr46", "lr47", "lr48", "lr49", "lr50", "lr51", "lr52", "lr53", "lr54", \
 "lr55", "lr56", "lr57", "lr58", "lr59", "lr60", "lr61", "lr62", "lr63", \
 "lr64", "lr65", "lr66", "lr67", "lr68", "lr69", "lr70", "lr71", "lr72", \
 "lr73", "lr74", "lr75", "lr76", "lr77", "lr78", "lr79", "lr80", "lr81", \
 "lr82", "lr83", "lr84", "lr85", "lr86", "lr87", "lr88", "lr89", "lr90", \
 "lr91", "lr92", "lr93", "lr94", "lr95", "lr96", "lr97", "lr98", "lr99", \
 "lr100", "lr101", "lr102", "lr103", "lr104", "lr105", "lr106", "lr107", \
 "lr108", "lr109", "lr110", "lr111", "lr112", "lr113", "lr114", "lr115", \
 "lr116", "lr117", "lr118", "lr119", "lr120", "lr121", "lr122", "lr123", \
 "lr124", "lr125", "lr126", "lr127",					 \
 "vab", "ops", "cps", "cfg", "cha", "chd", "chc", "rbp", "tmc", "tmr",	 \
 "pc0", "pc1", "pc2", "mmu", "lru",					 \
 "ipc", "ipa", "ipb", "q", "alu", "bp", "fc", "cr",			 \
 "fpe", "int", "fps", "exo" }


#ifdef KERNEL_DEBUGGING
#define	PADDR_U_REGNUM	22	/* gr86 */
#define	RETURN_REGNUM	GR64_REGNUM
#else
#define	RETURN_REGNUM	GR96_REGNUM
#endif /* KERNEL_DEBUGGING */


/* Should rename all GR96_REGNUM to RETURN_REGNUM */
#define GR1_REGNUM 	(0)
#define GR64_REGNUM	1
#define GR96_REGNUM 	(GR64_REGNUM + 32)
/* This needs to be the memory stack pointer, not the register stack pointer,
   to make call_function work right.  */
#define SP_REGNUM 	MSP_REGNUM

#define FP_REGNUM 	(LR0_REGNUM + 1)	/* lr1 */
/* Large Return Pointer  */
#define LRP_REGNUM (123 - 96 + RETURN_REGNUM)
/* Static link pointer   */
#define SLP_REGNUM (124 - 96 + RETURN_REGNUM)
/* Memory Stack Pointer.  */
#define MSP_REGNUM (125 - 96 + RETURN_REGNUM)
/* Register allocate bound.  */
#define RAB_REGNUM (126 - 96 + RETURN_REGNUM)
/* Register Free Bound.  */
#define RFB_REGNUM (127 - 96 + RETURN_REGNUM)
/* Register Stack Pointer.  */
#define RSP_REGNUM GR1_REGNUM
#define LR0_REGNUM ( 32 +  GR96_REGNUM)

/* Protected Special registers */
#define VAB_REGNUM (LR0_REGNUM +  128)
#define OPS_REGNUM (VAB_REGNUM + 1)
#define CPS_REGNUM (VAB_REGNUM + 2)
#define CFG_REGNUM (VAB_REGNUM + 3)
#define CHA_REGNUM (VAB_REGNUM + 4)
#define CHD_REGNUM (VAB_REGNUM + 5)
#define CHC_REGNUM (VAB_REGNUM + 6)
#define RBP_REGNUM (VAB_REGNUM + 7)
#define TMC_REGNUM (VAB_REGNUM + 8)
#define TMR_REGNUM (VAB_REGNUM + 9)
#define NPC_REGNUM (VAB_REGNUM + 10)	/* pc0 */
#define PC_REGNUM  (VAB_REGNUM + 11)	/* pc1 */
#define PC2_REGNUM (VAB_REGNUM + 12)	/* pc2 */
#define MMU_REGNUM (VAB_REGNUM + 13)
#define LRU_REGNUM (VAB_REGNUM + 14)
	/* Register sequence gap */
/* Unprotected Special registers */
#define IPC_REGNUM (LRU_REGNUM + 1)
#define IPA_REGNUM (IPC_REGNUM + 1)
#define IPB_REGNUM (IPC_REGNUM + 2)
#define Q_REGNUM   (IPC_REGNUM + 3)
#define ALU_REGNUM (IPC_REGNUM + 4)
#define PS_REGNUM  ALU_REGNUM
#define BP_REGNUM  (IPC_REGNUM + 5)
#define FC_REGNUM  (IPC_REGNUM + 6)
#define CR_REGNUM  (IPC_REGNUM + 7)
	/* Register sequence gap */
#define FPE_REGNUM (CR_REGNUM  + 1)
#define INT_REGNUM (FPE_REGNUM + 1)
#define FPS_REGNUM (FPE_REGNUM + 2)
	/* Register sequence gap */
#define EXO_REGNUM (FPS_REGNUM + 1)

/* Special register #x.  */
#define SR_REGNUM(x) \
  ((x) < 15  ? VAB_REGNUM + (x)					 \
   : (x) >= 128 && (x) < 136 ? IPC_REGNUM + (x-128)		 \
   : (x) >= 160 && (x) < 163 ? FPE_REGNUM + (x-160)		 \
   : (x) == 164 ? EXO_REGNUM                                     \
   : (error ("Internal error in SR_REGNUM"), 0))

#ifndef KERNEL_DEBUGGING
/*
 * This macro defines the register numbers (from REGISTER_NAMES) that
 * are effectively unavailable to the user through ptrace().  It allows 
 * us to include the whole register set in REGISTER_NAMES (inorder to 
 * better support remote debugging).  If it is used in 
 * fetch/store_inferior_registers() gdb will not complain about I/O errors 
 * on fetching these registers.  If all registers in REGISTER_NAMES
 * are available, then return false (0).
 */
#define CANNOT_STORE_REGISTER(regno)		\
                  (((regno)>=GR64_REGNUM && (regno)<GR64_REGNUM+32) ||	\
                   ((regno)==VAB_REGNUM) ||	\
		   ((regno)==OPS_REGNUM) ||	\
                   ((regno)>=CFG_REGNUM && (regno)<=TMR_REGNUM)     ||	\
                   ((regno)==MMU_REGNUM) ||	\
		   ((regno)==LRU_REGNUM) ||	\
                   ((regno)>=ALU_REGNUM) ||	\
                   ((regno)==CR_REGNUM)  ||	\
		   ((regno)==EXO_REGNUM))
#define CANNOT_FETCH_REGISTER(regno)	CANNOT_STORE_REGISTER(regno)
#endif /* KERNEL_DEBUGGING */

/*
 * Converts an sdb register number to an internal gdb register number.
 * Currently under gcc, gr96->0...gr128->31...lr0->32...lr127->159, or...
 *                      gr64->0...gr95->31, lr0->32...lr127->159.
 */
#define SDB_REG_TO_REGNUM(value) (((value)<32) ? ((value)+RETURN_REGNUM) : \
		 		                 ((value)-32+LR0_REGNUM))

#ifdef KERNEL_DEBUGGING
  /* ublock virtual address as defined in our sys/param.h */
  /* FIXME: Should get this from sys/param.h */
#define UVADDR	((32*0x100000)-8192)
#endif

/*
 * Are we in sigtramp(), needed in infrun.c.  Specific to ultra3, because
 * we take off the leading '_'.
 */
#if !defined(KERNEL_DEBUGGING)
#ifdef SYM1
#define IN_SIGTRAMP(pc, name) (name && STREQ ("sigtramp", name))
#else
Need to define
IN_SIGTRAMP () for sym2.
#endif
#endif				/* !KERNEL_DEBUGGING */

#include "a29k/tm-a29k.h"

/**** The following are definitions that override those in tm-a29k.h ****/

/* This sequence of words is the instructions
   mtsrim cr, 15
   loadm 0, 0, lr2, msp     ; load first 16 words of arguments into registers
   add msp, msp, 16 * 4     ; point to the remaining arguments
   CONST_INSN:
   const gr96,inf
   consth gr96,inf
   calli lr0, gr96
   aseq 0x40,gr1,gr1   ; nop
   asneq 0x50,gr1,gr1  ; breakpoint
   When KERNEL_DEBUGGIN is defined, msp -> gr93, gr96 -> gr64,
   7d  -> 5d,    60  -> 40
 */

/* Position of the "const" instruction within CALL_DUMMY in bytes.  */
#undef CALL_DUMMY
#if TARGET_BYTE_ORDER == HOST_BYTE_ORDER
#ifdef KERNEL_DEBUGGING		/* gr96 -> gr64 */
#define CALL_DUMMY {0x0400870f, 0x3600825d, 0x155d5d40, 0x03ff40ff,    \
                    0x02ff40ff, 0xc8008040, 0x70400101, 0x72500101}
#else
#define CALL_DUMMY {0x0400870f, 0x3600827d, 0x157d7d40, 0x03ff60ff,    \
                    0x02ff60ff, 0xc8008060, 0x70400101, 0x72500101}
#endif				/* KERNEL_DEBUGGING */
#else				/* Byte order differs.  */
you lose
#endif				/* Byte order differs.  */

#if !defined(KERNEL_DEBUGGING)
#ifdef SYM1
#undef  DECR_PC_AFTER_BREAK
#define DECR_PC_AFTER_BREAK 0	/* Sym1 kernel does the decrement */
#else
->"ULTRA3 running other than sym1 OS" !;
#endif
#endif /* !KERNEL_DEBUGGING */
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
   Copyright 1990, 1991 Free Software Foundation, Inc.
a3 2
   
This file is part of GDB.
d5 16
a20 13
This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
d32 1
a32 1
#define NUM_REGS   (EXO_REGNUM + 1)	
d66 2
a67 2
# define	PADDR_U_REGNUM	22		/* gr86 */
# define	RETURN_REGNUM	GR64_REGNUM	
d69 2
a70 2
# define	RETURN_REGNUM	GR96_REGNUM	
#endif	/* KERNEL_DEBUGGING */
d73 1
a73 1
/* Should rename all GR96_REGNUM to RETURN_REGNUM */ 
d94 1
a94 1
#define LR0_REGNUM ( 32 +  GR96_REGNUM) 
d98 9
a106 9
#define OPS_REGNUM (VAB_REGNUM + 1)  
#define CPS_REGNUM (VAB_REGNUM + 2)  
#define CFG_REGNUM (VAB_REGNUM + 3)  
#define CHA_REGNUM (VAB_REGNUM + 4)  
#define CHD_REGNUM (VAB_REGNUM + 5)  
#define CHC_REGNUM (VAB_REGNUM + 6)  
#define RBP_REGNUM (VAB_REGNUM + 7)  
#define TMC_REGNUM (VAB_REGNUM + 8)  
#define TMR_REGNUM (VAB_REGNUM + 9)  
d108 2
a109 2
#define PC_REGNUM  (VAB_REGNUM + 11)  	/* pc1 */
#define PC2_REGNUM (VAB_REGNUM + 12)  	/* pc2 */
d114 5
a118 5
#define IPC_REGNUM (LRU_REGNUM + 1) 
#define IPA_REGNUM (IPC_REGNUM + 1) 
#define IPB_REGNUM (IPC_REGNUM + 2) 
#define Q_REGNUM   (IPC_REGNUM + 3) 
#define ALU_REGNUM (IPC_REGNUM + 4) 
d120 3
a122 3
#define BP_REGNUM  (IPC_REGNUM + 5) 
#define FC_REGNUM  (IPC_REGNUM + 6) 
#define CR_REGNUM  (IPC_REGNUM + 7) 
d124 3
a126 3
#define FPE_REGNUM (CR_REGNUM  + 1) 
#define INT_REGNUM (FPE_REGNUM + 1) 
#define FPS_REGNUM (FPE_REGNUM + 2) 
d128 1
a128 1
#define EXO_REGNUM (FPS_REGNUM + 1) 
d164 1
a164 1
 * 		  	gr64->0...gr95->31, lr0->32...lr127->159.
d172 1
a172 1
# define UVADDR	((32*0x100000)-8192)    
d181 1
a181 1
# define IN_SIGTRAMP(pc, name) (name && STREQ ("sigtramp", name))
d183 2
a184 1
        Need to define IN_SIGTRAMP() for sym2.
d186 1
a186 1
#endif /* !KERNEL_DEBUGGING */
d196 1
a196 1
  CONST_INSN:
d203 2
a204 2
                                    7d  -> 5d,    60  -> 40
   */
d209 2
a210 2
#ifdef KERNEL_DEBUGGING /* gr96 -> gr64 */
#  define CALL_DUMMY {0x0400870f, 0x3600825d, 0x155d5d40, 0x03ff40ff,    \
d213 1
a213 1
#  define CALL_DUMMY {0x0400870f, 0x3600827d, 0x157d7d40, 0x03ff60ff,    \
d215 4
a218 4
#endif /* KERNEL_DEBUGGING */
#else /* Byte order differs.  */
  you lose
#endif /* Byte order differs.  */
d221 6
a226 6
# ifdef SYM1
#  undef  DECR_PC_AFTER_BREAK
#  define DECR_PC_AFTER_BREAK 0	/* Sym1 kernel does the decrement */
# else
    ->"ULTRA3 running other than sym1 OS"!;
# endif
a227 1

@


1.1.1.1
log
@Initial creation of sourceware repository
@
text
@@


1.1.1.2
log
@import gdb-1999-07-07 post reformat
@
text
@d4 2
d7 13
a19 16
   This file is part of GDB.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place - Suite 330,
   Boston, MA 02111-1307, USA.  */
d31 1
a31 1
#define NUM_REGS   (EXO_REGNUM + 1)
d65 2
a66 2
#define	PADDR_U_REGNUM	22	/* gr86 */
#define	RETURN_REGNUM	GR64_REGNUM
d68 2
a69 2
#define	RETURN_REGNUM	GR96_REGNUM
#endif /* KERNEL_DEBUGGING */
d72 1
a72 1
/* Should rename all GR96_REGNUM to RETURN_REGNUM */
d93 1
a93 1
#define LR0_REGNUM ( 32 +  GR96_REGNUM)
d97 9
a105 9
#define OPS_REGNUM (VAB_REGNUM + 1)
#define CPS_REGNUM (VAB_REGNUM + 2)
#define CFG_REGNUM (VAB_REGNUM + 3)
#define CHA_REGNUM (VAB_REGNUM + 4)
#define CHD_REGNUM (VAB_REGNUM + 5)
#define CHC_REGNUM (VAB_REGNUM + 6)
#define RBP_REGNUM (VAB_REGNUM + 7)
#define TMC_REGNUM (VAB_REGNUM + 8)
#define TMR_REGNUM (VAB_REGNUM + 9)
d107 2
a108 2
#define PC_REGNUM  (VAB_REGNUM + 11)	/* pc1 */
#define PC2_REGNUM (VAB_REGNUM + 12)	/* pc2 */
d113 5
a117 5
#define IPC_REGNUM (LRU_REGNUM + 1)
#define IPA_REGNUM (IPC_REGNUM + 1)
#define IPB_REGNUM (IPC_REGNUM + 2)
#define Q_REGNUM   (IPC_REGNUM + 3)
#define ALU_REGNUM (IPC_REGNUM + 4)
d119 3
a121 3
#define BP_REGNUM  (IPC_REGNUM + 5)
#define FC_REGNUM  (IPC_REGNUM + 6)
#define CR_REGNUM  (IPC_REGNUM + 7)
d123 3
a125 3
#define FPE_REGNUM (CR_REGNUM  + 1)
#define INT_REGNUM (FPE_REGNUM + 1)
#define FPS_REGNUM (FPE_REGNUM + 2)
d127 1
a127 1
#define EXO_REGNUM (FPS_REGNUM + 1)
d163 1
a163 1
 *                      gr64->0...gr95->31, lr0->32...lr127->159.
d171 1
a171 1
#define UVADDR	((32*0x100000)-8192)
d180 1
a180 1
#define IN_SIGTRAMP(pc, name) (name && STREQ ("sigtramp", name))
d182 1
a182 2
Need to define
IN_SIGTRAMP () for sym2.
d184 1
a184 1
#endif				/* !KERNEL_DEBUGGING */
d194 1
a194 1
   CONST_INSN:
d201 2
a202 2
   7d  -> 5d,    60  -> 40
 */
d207 2
a208 2
#ifdef KERNEL_DEBUGGING		/* gr96 -> gr64 */
#define CALL_DUMMY {0x0400870f, 0x3600825d, 0x155d5d40, 0x03ff40ff,    \
d211 1
a211 1
#define CALL_DUMMY {0x0400870f, 0x3600827d, 0x157d7d40, 0x03ff60ff,    \
d213 4
a216 4
#endif				/* KERNEL_DEBUGGING */
#else				/* Byte order differs.  */
you lose
#endif				/* Byte order differs.  */
d219 6
a224 6
#ifdef SYM1
#undef  DECR_PC_AFTER_BREAK
#define DECR_PC_AFTER_BREAK 0	/* Sym1 kernel does the decrement */
#else
->"ULTRA3 running other than sym1 OS" !;
#endif
d226 1
@

