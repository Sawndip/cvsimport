head	1.6;
access;
symbols
	gdb_5_3-2002-12-12-release:1.4
	kseitz_interps-20021105-merge:1.5
	kseitz_interps-20021103-merge:1.5
	drow-cplus-merge-20021020:1.5
	drow-cplus-merge-20021025:1.5
	carlton_dictionary-20021025-merge:1.5
	carlton_dictionary-20021011-merge:1.5
	drow-cplus-branch:1.4.0.26
	drow-cplus-branchpoint:1.4
	kseitz_interps-20020930-merge:1.4
	carlton_dictionary-20020927-merge:1.4
	carlton_dictionary-branch:1.4.0.24
	carlton_dictionary-20020920-branchpoint:1.4
	gdb_5_3-branch:1.4.0.22
	gdb_5_3-2002-09-04-branchpoint:1.4
	kseitz_interps-20020829-merge:1.4
	cagney_sysregs-20020825-branch:1.4.0.20
	cagney_sysregs-20020825-branchpoint:1.4
	readline_4_3-import-branch:1.4.0.18
	readline_4_3-import-branchpoint:1.4
	gdb_5_2_1-2002-07-23-release:1.4
	kseitz_interps-20020528-branch:1.4.0.16
	kseitz_interps-20020528-branchpoint:1.4
	cagney_regbuf-20020515-branch:1.4.0.14
	cagney_regbuf-20020515-branchpoint:1.4
	jimb-macro-020506-branch:1.4.0.12
	jimb-macro-020506-branchpoint:1.4
	gdb_5_2-2002-04-29-release:1.4
	gdb_5_2-branch:1.4.0.10
	gdb_5_2-2002-03-03-branchpoint:1.4
	gdb_5_1_1-2002-01-24-release:1.4
	gdb_5_1_0_1-2002-01-03-release:1.4
	cygnus_cvs_20020108_pre:1.4
	gdb_5_1_0_1-2002-01-03-branchpoint:1.4
	gdb_5_1_0_1-2002-01-03-branch:1.4.0.8
	gdb_5_1-2001-11-21-release:1.4
	gdb_s390-2001-09-26-branch:1.4.0.6
	gdb_s390-2001-09-26-branchpoint:1.4
	gdb_5_1-2001-07-29-branch:1.4.0.4
	gdb_5_1-2001-07-29-branchpoint:1.4
	dberlin-typesystem-branch:1.4.0.2
	dberlin-typesystem-branchpoint:1.4
	gdb-post-ptid_t-2001-05-03:1.3
	gdb-pre-ptid_t-2001-05-03:1.2
	insight-precleanup-2001-01-01:1.1.1.3
	gdb-post-protoization-2000-07-29:1.1.1.3
	gdb-pre-protoization-2000-07-29:1.1.1.3
	gdb-premipsmulti-2000-06-06-branch:1.1.1.3.0.4
	gdb-premipsmulti-2000-06-06-branchpoint:1.1.1.3
	gdb-post-params-removal-2000-06-04:1.1.1.3
	gdb-pre-params-removal-2000-06-04:1.1.1.3
	gdb-post-params-removal-2000-05-28:1.1.1.3
	gdb-pre-params-removal-2000-05-28:1.1.1.3
	gdb_5_0-2000-05-19-release:1.1.1.3
	gdb_4_18_2-2000-05-18-release:1.1.1.3
	gdb_4_95_1-2000-05-11-snapshot:1.1.1.3
	gdb_4_95_0-2000-04-27-snapshot:1.1.1.3
	gdb_5_0-2000-04-10-branch:1.1.1.3.0.2
	gdb_5_0-2000-04-10-branchpoint:1.1.1.3
	repo-unification-2000-02-06:1.1.1.3
	insight-2000-02-04:1.1.1.3
	gdb-2000-02-04:1.1.1.3
	gdb-2000-02-02:1.1.1.3
	gdb-2000-02-01:1.1.1.3
	gdb-2000-01-31:1.1.1.3
	gdb-2000-01-26:1.1.1.3
	gdb-2000-01-24:1.1.1.3
	gdb-2000-01-17:1.1.1.3
	gdb-2000-01-10:1.1.1.3
	gdb-2000-01-05:1.1.1.2
	gdb-1999-12-21:1.1.1.2
	gdb-1999-12-13:1.1.1.2
	gdb-1999-12-07:1.1.1.2
	gdb-1999-12-06:1.1.1.2
	gdb-1999-11-16:1.1.1.2
	gdb-1999-11-08:1.1.1.2
	gdb-1999-11-01:1.1.1.2
	gdb-1999-10-25:1.1.1.2
	gdb-1999-10-18:1.1.1.2
	gdb-1999-10-11:1.1.1.2
	gdb-1999-10-04:1.1.1.2
	gdb-1999-09-28:1.1.1.2
	gdb-1999-09-21:1.1.1.2
	gdb-1999-09-13:1.1.1.2
	gdb-1999-09-08:1.1.1.2
	gdb-1999-08-30:1.1.1.2
	gdb-1999-08-23:1.1.1.2
	gdb-1999-08-16:1.1.1.2
	gdb-1999-08-09:1.1.1.2
	gdb-1999-08-02:1.1.1.2
	gdb-1999-07-26:1.1.1.2
	gdb-1999-07-19:1.1.1.2
	gdb-1999-07-12:1.1.1.2
	gdb-post-reformat-19990707:1.1.1.2
	gdb-1999-07-07-post-reformat-snapshot:1.1.1.2
	gdb-pre-reformat-19990707:1.1.1.1
	gdb-1999-07-07:1.1.1.1
	gdb-1999-07-05:1.1.1.1
	gdb-1999-06-28:1.1.1.1
	gdb-1999-06-21:1.1.1.1
	gdb-1999-06-14:1.1.1.1
	gdb-1999-06-07:1.1.1.1
	gdb-1999-06-01:1.1.1.1
	gdb-4_18-branch:1.1.1.1.0.2
	gdb-4_18-release:1.1.1.1
	gdb-1999-05-25:1.1.1.1
	gdb-1999-05-19:1.1.1.1
	gdb-1999-05-10:1.1.1.1
	gdb-19990504:1.1.1.1
	gdb-19990422:1.1.1.1
	SNAPSHOT:1.1.1
	gdb-4_18:1.1.1.1
	GDB_4_18:1.1.1;
locks; strict;
comment	@ * @;
expand	@o@;


1.6
date	2002.11.08.21.00.47;	author kettenis;	state dead;
branches;
next	1.5;

1.5
date	2002.10.11.14.02.39;	author drow;	state Exp;
branches;
next	1.4;

1.4
date	2001.05.15.00.03.37;	author kevinb;	state Exp;
branches
	1.4.16.1
	1.4.24.1
	1.4.26.1;
next	1.3;

1.3
date	2001.05.04.04.15.31;	author kevinb;	state Exp;
branches;
next	1.2;

1.2
date	2001.03.06.08.21.29;	author kevinb;	state Exp;
branches;
next	1.1;

1.1
date	99.04.16.01.34.19;	author shebs;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.04.16.01.34.19;	author shebs;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	99.07.07.20.13.19;	author jsm;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2000.01.11.03.07.28;	author jsm;	state Exp;
branches;
next	;

1.4.16.1
date	2002.11.03.22.20.19;	author ezannoni;	state Exp;
branches;
next	;

1.4.24.1
date	2002.10.11.22.22.58;	author carlton;	state Exp;
branches;
next	1.4.24.2;

1.4.24.2
date	2002.11.15.19.19.04;	author carlton;	state dead;
branches;
next	;

1.4.26.1
date	2002.10.26.17.12.13;	author drow;	state Exp;
branches;
next	1.4.26.2;

1.4.26.2
date	2003.12.14.20.27.36;	author drow;	state dead;
branches;
next	;


desc
@@


1.6
log
@* config/i386/tm-i386v42mp.h: Remove file.  Move its contents,
except the inclusion of "i386/tm-i386.h", to...
* config/i386/nm-i386v42mp.h: ...here.
* config/i386/i386v42mp.mt (TM_FILE): Set to tm-i386.h.
@
text
@/* Macro definitions for GDB on an Intel i386 running SVR4.2MP
   Copyright 1991, 1994, 1997, 1999, 2000 Free Software Foundation, Inc.
   Written by Fred Fish at Cygnus Support (fnf@@cygnus.com)

   This file is part of GDB.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place - Suite 330,
   Boston, MA 02111-1307, USA.  */

#ifndef TM_I386V42MP_H
#define TM_I386V42MP_H 1

/* pick up more generic x86 sysv4 stuff */

#include "i386/tm-i386.h"

/* define to select for other sysv4.2mp weirdness (see procfs.c) */

#define UNIXWARE

#if 0
/* The following macros extract process and lwp/thread ids from a
   composite id.

   For consistency with UnixWare core files, allocate bits 0-15 for
   process ids and bits 16 and up for lwp ids.  Reserve bit 31 for
   negative return values to indicate exceptions, and use bit 30 as a
   flag to indicate a user-mode thread, leaving 14 bits for lwp
   ids. */

/* Number of bits in composite id allocated to process number. */
#define PIDBITS 16

/* Return the process id stored in composite PID. */
#define PIDGET(PID)             (((PID) & ((1 << PIDBITS) - 1)))

/* Return the thread or lwp id stored in composite PID. */
#define TIDGET(PID)             (((PID) & 0x3fffffff) >> PIDBITS)
#define LIDGET(PID)             TIDGET(PID)

/* Construct a composite id from lwp LID and the process portion of
   composite PID. */
#define MERGEPID(PID, LID)      (PIDGET(PID) | ((LID) << PIDBITS))
#define MKLID(PID, LID)         MERGEPID(PID, LID)

/* Construct a composite id from thread TID and the process portion of
   composite PID. */
#define MKTID(PID, TID)         (MERGEPID(PID, TID) | 0x40000000)

/* Return whether PID contains a user-space thread id. */
#define ISTID(PID)              ((PID) & 0x40000000)
#endif

/* New definitions of the ptid stuff.  Due to the way the
   code is structured in uw-thread.c, I'm overloading the thread id
   and lwp id onto the lwp field.  The tid field is used to indicate
   whether the lwp is a tid or not.  
   
   FIXME: Check that core file support is not broken.  (See original
   #if 0'd comments above.)
   FIXME: Restructure uw-thread.c so that the struct ptid fields
   can be used as intended. */

/* Return the process id stored in composite PID. */
#define PIDGET(PID) (ptid_get_pid (PID))

/* Return the thread or lwp id stored in composite PID. */
#define TIDGET(PID) (ptid_get_lwp (PID))
#define LIDGET(PID) TIDGET(PID)

#define MERGEPID(PID, LID) (ptid_build ((PID), (LID), 0))
#define MKLID(PID, LID) (ptid_build ((PID), (LID), 0))

/* Construct a composite id from thread TID and the process portion of
   composite PID. */
#define MKTID(PID, TID) (ptid_build ((PID), (TID), 1))

/* Return whether PID contains a user-space thread id. */
#define ISTID(PID) (ptid_get_tid (PID))

#endif /* ifndef TM_I386V42MP_H */
@


1.5
log
@        * c-exp.y (THIS): Delete token and grammar rule.
        (yylex): Don't return THIS.
        * cp-valprint.c (vtbl_ptr_name_old): Delete.
        (cp_is_vtbl_ptr_type): Don't check vtbl_ptr_name_old.
        * demangle.c (cplus_markers): Update comment.  Put '$'
        first.  Remove CPLUS_MARKER.
        (_initialize_demangler): Don't call set_cplus_marker_for_demangling.
        * jv-exp.y (THIS): Delete token and grammar rule.
        (yylex): Don't return THIS.
        * mips-tdep.c (mips_dump_tdep): Don't dump CPLUS_MARKER.
        * objc-exp.y (THIS): Delete token and grammar rule.
        (yylex): Don't return THIS.
        * p-exp.y (yylex): Remove reference to CPLUS_MARKER.
        * stabsread.c (vptr_name, vb_name): Replace CPLUS_MARKER with '$'.
        (read_member_functions): Likewise for opname.
        (read_tilde_fields): Use is_cplus_marker.

        * defs.h (CPLUS_MARKER): Don't define.
        * config/tm-sysv4.h (CPLUS_MARKER): Likewise.
        * config/i386/xm-i386sco.h (CPLUS_MARKER): Likewise.
        * config/mips/tm-irix3.h (CPLUS_MARKER): Likewise.
        * config/mips/tm-irix6.h (CPLUS_MARKER): Likewise.
        * config/rs6000/tm-rs6000.h (CPLUS_MARKER): Likewise.

        * config/i386/tm-i386v4.h: Delete file.
        * config/djgpp/fnchange.lst: Delete tm-i386v4.h.
        * config/i386/tm-i386sol2.h: Include "i386/tm-i386.h" instead.
        * config/i386/tm-i386v42mp.h: Include "i386/tm-i386.h" instead.
        * config/i386/tm-ptx.h: Include "i386/tm-i386.h" instead.
        * config/i386/i386gnu.mt (TM_FILE): Use tm-i386.h.
        * config/i386/i386sco5.mt (TM_FILE): Likewise.
        * config/i386/i386v4.mt (TM_FILE): Likewise.
        * config/i386/ncr3000.mt (TM_FILE): Likewise.
@
text
@@


1.4
log
@Redefine ptid_t to be a struct rather than an int.
@
text
@d27 1
a27 1
#include "i386/tm-i386v4.h"
@


1.4.16.1
log
@merge from mainline
@
text
@d27 1
a27 1
#include "i386/tm-i386.h"
@


1.4.26.1
log
@Merge drow-cplus-merge-20021025 to drow-cplus-branch.
@
text
@d27 1
a27 1
#include "i386/tm-i386.h"
@


1.4.26.2
log
@Merge drow-cplus-branch to:
  cvs rtag -D 2003-12-14 00:00:00 UTC drow-cplus-merge-20031214 gdb+dejagnu
@
text
@@


1.4.24.1
log
@Merge with mainline; merge tag carlton_dictionary-20021011-merge.
@
text
@d27 1
a27 1
#include "i386/tm-i386.h"
@


1.4.24.2
log
@2002-11-15  David Carlton  <carlton@@math.stanford.edu>

	* Merge from mainline; tag is carlton_dictionary-20021115-merge.
@
text
@@


1.3
log
@Phase 1 of the ptid_t changes.
@
text
@d33 1
d47 1
a47 2
#define PIDGET0(PID)            (((PID) & ((1 << PIDBITS) - 1)))
#define PIDGET(PID)             ((PIDGET0 (PID) == ((1 << PIDBITS) -1)) ? -1 : PIDGET0 (PID))
d64 28
@


1.2
log
@Update/correct copyright notices.
@
text
@d46 2
a47 1
#define PIDGET(PID)             (((PID) & ((1 << PIDBITS) - 1)))
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
   Copyright (C) 1991, 1994 Free Software Foundation, Inc.
d5 1
a5 1
This file is part of GDB.
d7 14
a20 13
This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
d29 1
a29 2
/* procfs on this architecture has multiple fds (ctl, as, map, status)
	including a control fd */
d31 1
a31 6
#ifndef HAVE_MULTIPLE_PROC_FDS
#define HAVE_MULTIPLE_PROC_FDS
#endif

/* procfs on this architecture communicates with read/write instead
	of ioctl */
d33 2
a34 1
#define PROCFS_USE_READ_WRITE
d36 24
a59 1
/* define to select for other sysv4.2mp weirdness */
d61 2
a62 1
#define UNIXWARE
d64 1
a64 1
#endif  /* ifndef TM_I386V42MP_H */
@


1.1.1.1
log
@Initial creation of sourceware repository
@
text
@@


1.1.1.2
log
@import gdb-1999-07-07 post reformat
@
text
@d5 1
a5 1
   This file is part of GDB.
d7 13
a19 14
   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place - Suite 330,
   Boston, MA 02111-1307, USA.  */
d29 1
a29 1
   including a control fd */
d36 1
a36 1
   of ioctl */
d44 1
a44 1
#endif /* ifndef TM_I386V42MP_H */
@


1.1.1.3
log
@import gdb-2000-01-10 snapshot
@
text
@d29 2
a30 1
/* define to select for other sysv4.2mp weirdness (see procfs.c) */
d32 3
a34 1
#define UNIXWARE
d36 2
a37 2
/* The following macros extract process and lwp/thread ids from a
   composite id.
d39 1
a39 5
   For consistency with UnixWare core files, allocate bits 0-15 for
   process ids and bits 16 and up for lwp ids.  Reserve bit 31 for
   negative return values to indicate exceptions, and use bit 30 as a
   flag to indicate a user-mode thread, leaving 14 bits for lwp
   ids. */
d41 1
a41 2
/* Number of bits in composite id allocated to process number. */
#define PIDBITS 16
d43 1
a43 18
/* Return the process id stored in composite PID. */
#define PIDGET(PID)             (((PID) & ((1 << PIDBITS) - 1)))

/* Return the thread or lwp id stored in composite PID. */
#define TIDGET(PID)             (((PID) & 0x3fffffff) >> PIDBITS)
#define LIDGET(PID)             TIDGET(PID)

/* Construct a composite id from lwp LID and the process portion of
   composite PID. */
#define MERGEPID(PID, LID)      (PIDGET(PID) | ((LID) << PIDBITS))
#define MKLID(PID, LID)         MERGEPID(PID, LID)

/* Construct a composite id from thread TID and the process portion of
   composite PID. */
#define MKTID(PID, TID)         (MERGEPID(PID, TID) | 0x40000000)

/* Return whether PID contains a user-space thread id. */
#define ISTID(PID)              ((PID) & 0x40000000)
@


