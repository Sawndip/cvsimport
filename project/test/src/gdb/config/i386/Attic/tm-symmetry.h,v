head	1.15;
access;
symbols
	gdb_6_0-2003-10-04-release:1.14
	kettenis_sparc-20030918-branch:1.14.0.22
	kettenis_sparc-20030918-branchpoint:1.14
	carlton_dictionary-20030917-merge:1.14
	ezannoni_pie-20030916-branchpoint:1.14
	ezannoni_pie-20030916-branch:1.14.0.20
	cagney_x86i386-20030821-branch:1.14.0.18
	cagney_x86i386-20030821-branchpoint:1.14
	carlton_dictionary-20030805-merge:1.14
	carlton_dictionary-20030627-merge:1.14
	gdb_6_0-branch:1.14.0.16
	gdb_6_0-2003-06-23-branchpoint:1.14
	jimb-ppc64-linux-20030613-branch:1.14.0.14
	jimb-ppc64-linux-20030613-branchpoint:1.14
	cagney_convert-20030606-branch:1.14.0.12
	cagney_convert-20030606-branchpoint:1.14
	cagney_writestrings-20030508-branch:1.14.0.10
	cagney_writestrings-20030508-branchpoint:1.14
	jimb-ppc64-linux-20030528-branch:1.14.0.8
	jimb-ppc64-linux-20030528-branchpoint:1.14
	carlton_dictionary-20030523-merge:1.14
	cagney_fileio-20030521-branch:1.14.0.6
	cagney_fileio-20030521-branchpoint:1.14
	kettenis_i386newframe-20030517-mergepoint:1.14
	jimb-ppc64-linux-20030509-branch:1.14.0.4
	jimb-ppc64-linux-20030509-branchpoint:1.14
	kettenis_i386newframe-20030504-mergepoint:1.14
	carlton_dictionary-20030430-merge:1.14
	kettenis_i386newframe-20030419-branch:1.14.0.2
	kettenis_i386newframe-20030419-branchpoint:1.14
	carlton_dictionary-20030416-merge:1.14
	cagney_frameaddr-20030409-mergepoint:1.14
	kettenis_i386newframe-20030406-branch:1.12.0.4
	kettenis_i386newframe-20030406-branchpoint:1.12
	cagney_frameaddr-20030403-branchpoint:1.12
	cagney_frameaddr-20030403-branch:1.12.0.2
	cagney_framebase-20030330-mergepoint:1.12
	cagney_framebase-20030326-branch:1.11.0.12
	cagney_framebase-20030326-branchpoint:1.11
	cagney_lazyid-20030317-branch:1.11.0.10
	cagney_lazyid-20030317-branchpoint:1.11
	kettenis-i386newframe-20030316-mergepoint:1.11
	offbyone-20030313-branch:1.11.0.8
	offbyone-20030313-branchpoint:1.11
	kettenis-i386newframe-20030308-branch:1.11.0.6
	kettenis-i386newframe-20030308-branchpoint:1.11
	carlton_dictionary-20030305-merge:1.11
	cagney_offbyone-20030303-branch:1.11.0.4
	cagney_offbyone-20030303-branchpoint:1.11
	carlton_dictionary-20030207-merge:1.11
	interps-20030203-mergepoint:1.11
	interps-20030202-branch:1.11.0.2
	interps-20030202-branchpoint:1.11
	cagney-unwind-20030108-branch:1.10.0.12
	cagney-unwind-20030108-branchpoint:1.10
	carlton_dictionary-20021223-merge:1.10
	gdb_5_3-2002-12-12-release:1.10
	carlton_dictionary-20021115-merge:1.10
	kseitz_interps-20021105-merge:1.10
	kseitz_interps-20021103-merge:1.10
	drow-cplus-merge-20021020:1.10
	drow-cplus-merge-20021025:1.10
	carlton_dictionary-20021025-merge:1.10
	carlton_dictionary-20021011-merge:1.10
	drow-cplus-branch:1.10.0.10
	drow-cplus-branchpoint:1.10
	kseitz_interps-20020930-merge:1.10
	carlton_dictionary-20020927-merge:1.10
	carlton_dictionary-branch:1.10.0.8
	carlton_dictionary-20020920-branchpoint:1.10
	gdb_5_3-branch:1.10.0.6
	gdb_5_3-2002-09-04-branchpoint:1.10
	kseitz_interps-20020829-merge:1.10
	cagney_sysregs-20020825-branch:1.10.0.4
	cagney_sysregs-20020825-branchpoint:1.10
	readline_4_3-import-branch:1.10.0.2
	readline_4_3-import-branchpoint:1.10
	gdb_5_2_1-2002-07-23-release:1.7
	kseitz_interps-20020528-branch:1.7.0.8
	kseitz_interps-20020528-branchpoint:1.7
	cagney_regbuf-20020515-branch:1.7.0.6
	cagney_regbuf-20020515-branchpoint:1.7
	jimb-macro-020506-branch:1.7.0.4
	jimb-macro-020506-branchpoint:1.7
	gdb_5_2-2002-04-29-release:1.7
	gdb_5_2-branch:1.7.0.2
	gdb_5_2-2002-03-03-branchpoint:1.7
	gdb_5_1_1-2002-01-24-release:1.4
	gdb_5_1_0_1-2002-01-03-release:1.4
	cygnus_cvs_20020108_pre:1.7
	gdb_5_1_0_1-2002-01-03-branchpoint:1.4
	gdb_5_1_0_1-2002-01-03-branch:1.4.0.8
	gdb_5_1-2001-11-21-release:1.4
	gdb_s390-2001-09-26-branch:1.4.0.6
	gdb_s390-2001-09-26-branchpoint:1.4
	gdb_5_1-2001-07-29-branch:1.4.0.4
	gdb_5_1-2001-07-29-branchpoint:1.4
	dberlin-typesystem-branch:1.4.0.2
	dberlin-typesystem-branchpoint:1.4
	gdb-post-ptid_t-2001-05-03:1.4
	gdb-pre-ptid_t-2001-05-03:1.4
	insight-precleanup-2001-01-01:1.1.1.2
	gdb-post-protoization-2000-07-29:1.1.1.2
	gdb-pre-protoization-2000-07-29:1.1.1.2
	gdb-premipsmulti-2000-06-06-branch:1.1.1.2.0.4
	gdb-premipsmulti-2000-06-06-branchpoint:1.1.1.2
	gdb-post-params-removal-2000-06-04:1.1.1.2
	gdb-pre-params-removal-2000-06-04:1.1.1.2
	gdb-post-params-removal-2000-05-28:1.1.1.2
	gdb-pre-params-removal-2000-05-28:1.1.1.2
	gdb_5_0-2000-05-19-release:1.1.1.2
	gdb_4_18_2-2000-05-18-release:1.1.1.2
	gdb_4_95_1-2000-05-11-snapshot:1.1.1.2
	gdb_4_95_0-2000-04-27-snapshot:1.1.1.2
	gdb_5_0-2000-04-10-branch:1.1.1.2.0.2
	gdb_5_0-2000-04-10-branchpoint:1.1.1.2
	repo-unification-2000-02-06:1.1.1.2
	insight-2000-02-04:1.1.1.2
	gdb-2000-02-04:1.1.1.2
	gdb-2000-02-02:1.1.1.2
	gdb-2000-02-01:1.1.1.2
	gdb-2000-01-31:1.1.1.2
	gdb-2000-01-26:1.1.1.2
	gdb-2000-01-24:1.1.1.2
	gdb-2000-01-17:1.1.1.2
	gdb-2000-01-10:1.1.1.2
	gdb-2000-01-05:1.1.1.2
	gdb-1999-12-21:1.1.1.2
	gdb-1999-12-13:1.1.1.2
	gdb-1999-12-07:1.1.1.2
	gdb-1999-12-06:1.1.1.2
	gdb-1999-11-16:1.1.1.2
	gdb-1999-11-08:1.1.1.2
	gdb-1999-11-01:1.1.1.2
	gdb-1999-10-25:1.1.1.2
	gdb-1999-10-18:1.1.1.2
	gdb-1999-10-11:1.1.1.2
	gdb-1999-10-04:1.1.1.2
	gdb-1999-09-28:1.1.1.2
	gdb-1999-09-21:1.1.1.2
	gdb-1999-09-13:1.1.1.2
	gdb-1999-09-08:1.1.1.2
	gdb-1999-08-30:1.1.1.2
	gdb-1999-08-23:1.1.1.2
	gdb-1999-08-16:1.1.1.2
	gdb-1999-08-09:1.1.1.2
	gdb-1999-08-02:1.1.1.2
	gdb-1999-07-26:1.1.1.2
	gdb-1999-07-19:1.1.1.2
	gdb-1999-07-12:1.1.1.2
	gdb-post-reformat-19990707:1.1.1.2
	gdb-1999-07-07-post-reformat-snapshot:1.1.1.2
	gdb-pre-reformat-19990707:1.1.1.1
	gdb-1999-07-07:1.1.1.1
	gdb-1999-07-05:1.1.1.1
	gdb-1999-06-28:1.1.1.1
	gdb-1999-06-21:1.1.1.1
	gdb-1999-06-14:1.1.1.1
	gdb-1999-06-07:1.1.1.1
	gdb-1999-06-01:1.1.1.1
	gdb-4_18-branch:1.1.1.1.0.2
	gdb-4_18-release:1.1.1.1
	gdb-1999-05-25:1.1.1.1
	gdb-1999-05-19:1.1.1.1
	gdb-1999-05-10:1.1.1.1
	gdb-19990504:1.1.1.1
	gdb-19990422:1.1.1.1
	SNAPSHOT:1.1.1
	gdb-4_18:1.1.1.1
	GDB_4_18:1.1.1;
locks; strict;
comment	@ * @;
expand	@o@;


1.15
date	2003.10.06.20.23.40;	author cagney;	state dead;
branches;
next	1.14;

1.14
date	2003.04.09.16.19.52;	author cagney;	state Exp;
branches
	1.14.20.1;
next	1.13;

1.13
date	2003.04.09.15.08.27;	author cagney;	state Exp;
branches;
next	1.12;

1.12
date	2003.03.26.22.39.53;	author cagney;	state Exp;
branches
	1.12.2.1;
next	1.11;

1.11
date	2003.02.01.17.28.41;	author cagney;	state Exp;
branches
	1.11.12.1;
next	1.10;

1.10
date	2002.08.18.22.14.24;	author kettenis;	state Exp;
branches
	1.10.8.1
	1.10.10.1;
next	1.9;

1.9
date	2002.08.12.19.05.33;	author cagney;	state Exp;
branches;
next	1.8;

1.8
date	2002.06.14.22.55.45;	author cagney;	state Exp;
branches;
next	1.7;

1.7
date	2001.10.31.22.24.06;	author kettenis;	state Exp;
branches
	1.7.6.1
	1.7.8.1;
next	1.6;

1.6
date	2001.08.12.03.19.22;	author cagney;	state Exp;
branches;
next	1.5;

1.5
date	2001.08.01.18.39.25;	author cagney;	state Exp;
branches;
next	1.4;

1.4
date	2001.03.26.12.25.31;	author kettenis;	state Exp;
branches;
next	1.3;

1.3
date	2001.03.14.23.23.11;	author cagney;	state Exp;
branches;
next	1.2;

1.2
date	2001.03.06.08.21.29;	author kevinb;	state Exp;
branches;
next	1.1;

1.1
date	99.04.16.01.34.19;	author shebs;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.04.16.01.34.19;	author shebs;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	99.07.07.20.13.26;	author jsm;	state Exp;
branches;
next	;

1.7.6.1
date	2002.06.15.16.43.07;	author cagney;	state Exp;
branches;
next	;

1.7.8.1
date	2002.06.20.01.34.39;	author kseitz;	state Exp;
branches;
next	1.7.8.2;

1.7.8.2
date	2002.08.30.22.52.47;	author kseitz;	state Exp;
branches;
next	;

1.10.8.1
date	2003.02.07.19.17.54;	author carlton;	state Exp;
branches;
next	1.10.8.2;

1.10.8.2
date	2003.04.16.19.56.58;	author carlton;	state Exp;
branches;
next	1.10.8.3;

1.10.8.3
date	2003.11.11.23.51.04;	author carlton;	state dead;
branches;
next	;

1.10.10.1
date	2003.12.14.20.27.36;	author drow;	state dead;
branches;
next	;

1.11.12.1
date	2003.03.30.16.35.23;	author cagney;	state Exp;
branches;
next	;

1.12.2.1
date	2003.04.10.21.33.50;	author cagney;	state Exp;
branches;
next	;

1.14.20.1
date	2004.03.23.20.30.11;	author ezannoni;	state dead;
branches;
next	;


desc
@@


1.15
log
@2003-10-06  Andrew Cagney  <cagney@@redhat.com>

	* config/nm-m3.h, config/h8500/h8500.mt: Delete obsolete files.
	* config/h8500/tm-h8500.h, config/i386/nm-ptx4.h: Ditto.
	* config/i386/nm-symmetry.h, config/i386/ptx.mh: Ditto.
	* config/i386/ptx.mt, config/i386/ptx4.mh: Ditto.
	* config/i386/ptx4.mt, config/i386/symmetry.mh: Ditto.
	* config/i386/symmetry.mt, config/i386/tm-ptx.h: Ditto.
	* config/i386/tm-ptx4.h, config/i386/tm-symmetry.h: Ditto.
	* config/i386/xm-ptx.h, config/i386/xm-ptx4.h: Ditto.
	* config/i386/xm-symmetry.h, config/mips/mipsm3.mh: Ditto.
	* config/mips/mipsm3.mt, config/mips/tm-mipsm3.h: Ditto.
	* config/mips/xm-mipsm3.h, config/mn10200/mn10200.mt: Ditto.
	* config/mn10200/tm-mn10200.h, config/pa/hppabsd.mh: Ditto.
	* config/pa/hppabsd.mt, config/pa/hppaosf.mh: Ditto.
	* config/pa/hppaosf.mt, config/pa/hppapro.mt: Ditto.
	* config/pa/nm-hppab.h, config/pa/nm-hppao.h: Ditto.
	* config/pa/tm-hppab.h, config/pa/tm-hppao.h: Ditto.
	* config/pa/tm-pro.h, config/pa/xm-hppab.h: Ditto.
	* config/pa/xm-pa.h, config/sparc/sparclet.mt: Ditto.
	* config/sparc/sparclite.mt, config/sparc/tm-sparclet.h: Ditto.
	* config/sparc/tm-sparclite.h, config/z8k/tm-z8k.h: Ditto.
	* config/z8k/z8k.mt: Ditto.
@
text
@// OBSOLETE /* Target machine definitions for GDB on a Sequent Symmetry under dynix 3.0,
// OBSOLETE    with Weitek 1167 and i387 support.
// OBSOLETE 
// OBSOLETE    Copyright 1986, 1987, 1989, 1991, 1992, 1993, 1994, 1995, 2003 Free
// OBSOLETE    Software Foundation, Inc.
// OBSOLETE 
// OBSOLETE    Symmetry version by Jay Vosburgh (fubar@@sequent.com).
// OBSOLETE 
// OBSOLETE    This file is part of GDB.
// OBSOLETE 
// OBSOLETE    This program is free software; you can redistribute it and/or modify
// OBSOLETE    it under the terms of the GNU General Public License as published by
// OBSOLETE    the Free Software Foundation; either version 2 of the License, or
// OBSOLETE    (at your option) any later version.
// OBSOLETE 
// OBSOLETE    This program is distributed in the hope that it will be useful,
// OBSOLETE    but WITHOUT ANY WARRANTY; without even the implied warranty of
// OBSOLETE    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// OBSOLETE    GNU General Public License for more details.
// OBSOLETE 
// OBSOLETE    You should have received a copy of the GNU General Public License
// OBSOLETE    along with this program; if not, write to the Free Software
// OBSOLETE    Foundation, Inc., 59 Temple Place - Suite 330,
// OBSOLETE    Boston, MA 02111-1307, USA.  */
// OBSOLETE 
// OBSOLETE #ifndef TM_SYMMETRY_H
// OBSOLETE #define TM_SYMMETRY_H 1
// OBSOLETE 
// OBSOLETE #include "regcache.h"
// OBSOLETE #include "doublest.h"
// OBSOLETE 
// OBSOLETE /* I don't know if this will work for cross-debugging, even if you do get
// OBSOLETE    a copy of the right include file.  */
// OBSOLETE #include <machine/reg.h>
// OBSOLETE 
// OBSOLETE #include "i386/tm-i386.h"
// OBSOLETE 
// OBSOLETE /* Amount PC must be decremented by after a breakpoint.  This is often the
// OBSOLETE    number of bytes in BREAKPOINT but not always (such as now). */
// OBSOLETE 
// OBSOLETE #undef DECR_PC_AFTER_BREAK
// OBSOLETE #define DECR_PC_AFTER_BREAK 0
// OBSOLETE 
// OBSOLETE /* Number of machine registers */
// OBSOLETE 
// OBSOLETE #undef NUM_REGS
// OBSOLETE #define NUM_REGS 49
// OBSOLETE 
// OBSOLETE /* Initializer for an array of names of registers.
// OBSOLETE    There should be NUM_REGS strings in this initializer.  */
// OBSOLETE 
// OBSOLETE /* Initializer for an array of names of registers.  There should be at least
// OBSOLETE    NUM_REGS strings in this initializer.  Any excess ones are simply ignored.
// OBSOLETE    Symmetry registers are in this weird order to match the register numbers
// OBSOLETE    in the symbol table entries.  If you change the order, things will probably
// OBSOLETE    break mysteriously for no apparent reason.  Also note that the st(0)...
// OBSOLETE    st(7) 387 registers are represented as st0...st7.  */
// OBSOLETE 
// OBSOLETE #undef REGISTER_NAME
// OBSOLETE #define REGISTER_NAMES {     "eax",  "edx",  "ecx",   "st0",  "st1", \
// OBSOLETE 			     "ebx",  "esi",  "edi",   "st2",  "st3", \
// OBSOLETE 			     "st4",  "st5",  "st6",   "st7",  "esp", \
// OBSOLETE 			     "ebp",  "eip",  "eflags","fp1",  "fp2", \
// OBSOLETE 			     "fp3",  "fp4",  "fp5",   "fp6",  "fp7", \
// OBSOLETE 			     "fp8",  "fp9",  "fp10",  "fp11", "fp12", \
// OBSOLETE 			     "fp13", "fp14", "fp15",  "fp16", "fp17", \
// OBSOLETE 			     "fp18", "fp19", "fp20",  "fp21", "fp22", \
// OBSOLETE 			     "fp23", "fp24", "fp25",  "fp26", "fp27", \
// OBSOLETE 			     "fp28", "fp29", "fp30",  "fp31" }
// OBSOLETE 
// OBSOLETE /* Register numbers of various important registers.
// OBSOLETE    Note that some of these values are "real" register numbers,
// OBSOLETE    and correspond to the general registers of the machine,
// OBSOLETE    and some are "phony" register numbers which are too large
// OBSOLETE    to be actual register numbers as far as the user is concerned
// OBSOLETE    but do serve to get the desired values when passed to read_register.  */
// OBSOLETE 
// OBSOLETE #define EAX_REGNUM	0
// OBSOLETE #define EDX_REGNUM	1
// OBSOLETE #define ECX_REGNUM	2
// OBSOLETE #define ST0_REGNUM	3
// OBSOLETE #define ST1_REGNUM	4
// OBSOLETE #define EBX_REGNUM	5
// OBSOLETE #define ESI_REGNUM	6
// OBSOLETE #define EDI_REGNUM	7
// OBSOLETE #define ST2_REGNUM	8
// OBSOLETE #define ST3_REGNUM	9
// OBSOLETE 
// OBSOLETE #define ST4_REGNUM	10
// OBSOLETE #define ST5_REGNUM	11
// OBSOLETE #define ST6_REGNUM	12
// OBSOLETE #define ST7_REGNUM	13
// OBSOLETE 
// OBSOLETE #define FP1_REGNUM 18		/* first 1167 register */
// OBSOLETE /* Get %fp2 - %fp31 by addition, since they are contiguous */
// OBSOLETE 
// OBSOLETE #undef  SP_REGNUM
// OBSOLETE #define SP_REGNUM 14		/* (usp) Contains address of top of stack */
// OBSOLETE #define ESP_REGNUM 14
// OBSOLETE #undef  FP_REGNUM
// OBSOLETE #define FP_REGNUM 15		/* (ebp) Contains address of executing stack frame */
// OBSOLETE #define EBP_REGNUM 15
// OBSOLETE #undef  PC_REGNUM
// OBSOLETE #define PC_REGNUM 16		/* (eip) Contains program counter */
// OBSOLETE #define EIP_REGNUM 16
// OBSOLETE #undef  PS_REGNUM
// OBSOLETE #define PS_REGNUM 17		/* (ps)  Contains processor status */
// OBSOLETE #define EFLAGS_REGNUM 17
// OBSOLETE 
// OBSOLETE /*
// OBSOLETE  * Following macro translates i386 opcode register numbers to Symmetry
// OBSOLETE  * register numbers.  This is used by i386_frame_find_saved_regs.
// OBSOLETE  *
// OBSOLETE  *           %eax  %ecx  %edx  %ebx  %esp  %ebp  %esi  %edi
// OBSOLETE  * i386        0     1     2     3     4     5     6     7
// OBSOLETE  * Symmetry    0     2     1     5    14    15     6     7
// OBSOLETE  *
// OBSOLETE  */
// OBSOLETE #define I386_REGNO_TO_SYMMETRY(n) \
// OBSOLETE ((n)==0?0 :(n)==1?2 :(n)==2?1 :(n)==3?5 :(n)==4?14 :(n)==5?15 :(n))
// OBSOLETE 
// OBSOLETE /* The magic numbers below are offsets into u_ar0 in the user struct.
// OBSOLETE  * They live in <machine/reg.h>.  Gdb calls this macro with blockend
// OBSOLETE  * holding u.u_ar0 - KERNEL_U_ADDR.  Only the registers listed are
// OBSOLETE  * saved in the u area (along with a few others that aren't useful
// OBSOLETE  * here.  See <machine/reg.h>).
// OBSOLETE  */
// OBSOLETE 
// OBSOLETE #define REGISTER_U_ADDR(addr, blockend, regno) \
// OBSOLETE { struct user foo;	/* needed for finding fpu regs */ \
// OBSOLETE switch (regno) { \
// OBSOLETE     case 0: \
// OBSOLETE       addr = blockend + EAX * sizeof(int); break; \
// OBSOLETE   case 1: \
// OBSOLETE       addr = blockend + EDX * sizeof(int); break; \
// OBSOLETE   case 2: \
// OBSOLETE       addr = blockend + ECX * sizeof(int); break; \
// OBSOLETE   case 3:			/* st(0) */ \
// OBSOLETE       addr = ((int)&foo.u_fpusave.fpu_stack[0][0] - (int)&foo); \
// OBSOLETE       break; \
// OBSOLETE   case 4:			/* st(1) */ \
// OBSOLETE       addr = ((int) &foo.u_fpusave.fpu_stack[1][0] - (int)&foo); \
// OBSOLETE       break; \
// OBSOLETE   case 5: \
// OBSOLETE       addr = blockend + EBX * sizeof(int); break; \
// OBSOLETE   case 6: \
// OBSOLETE       addr = blockend + ESI * sizeof(int); break; \
// OBSOLETE   case 7: \
// OBSOLETE       addr = blockend + EDI * sizeof(int); break; \
// OBSOLETE   case 8:			/* st(2) */ \
// OBSOLETE       addr = ((int) &foo.u_fpusave.fpu_stack[2][0] - (int)&foo); \
// OBSOLETE       break; \
// OBSOLETE   case 9:			/* st(3) */ \
// OBSOLETE       addr = ((int) &foo.u_fpusave.fpu_stack[3][0] - (int)&foo); \
// OBSOLETE       break; \
// OBSOLETE   case 10:			/* st(4) */ \
// OBSOLETE       addr = ((int) &foo.u_fpusave.fpu_stack[4][0] - (int)&foo); \
// OBSOLETE       break; \
// OBSOLETE   case 11:			/* st(5) */ \
// OBSOLETE       addr = ((int) &foo.u_fpusave.fpu_stack[5][0] - (int)&foo); \
// OBSOLETE       break; \
// OBSOLETE   case 12:			/* st(6) */ \
// OBSOLETE       addr = ((int) &foo.u_fpusave.fpu_stack[6][0] - (int)&foo); \
// OBSOLETE       break; \
// OBSOLETE   case 13:			/* st(7) */ \
// OBSOLETE       addr = ((int) &foo.u_fpusave.fpu_stack[7][0] - (int)&foo); \
// OBSOLETE       break; \
// OBSOLETE   case 14: \
// OBSOLETE       addr = blockend + ESP * sizeof(int); break; \
// OBSOLETE   case 15: \
// OBSOLETE       addr = blockend + EBP * sizeof(int); break; \
// OBSOLETE   case 16: \
// OBSOLETE       addr = blockend + EIP * sizeof(int); break; \
// OBSOLETE   case 17: \
// OBSOLETE       addr = blockend + FLAGS * sizeof(int); break; \
// OBSOLETE   case 18:			/* fp1 */ \
// OBSOLETE   case 19:			/* fp2 */ \
// OBSOLETE   case 20:			/* fp3 */ \
// OBSOLETE   case 21:			/* fp4 */ \
// OBSOLETE   case 22:			/* fp5 */ \
// OBSOLETE   case 23:			/* fp6 */ \
// OBSOLETE   case 24:			/* fp7 */ \
// OBSOLETE   case 25:			/* fp8 */ \
// OBSOLETE   case 26:			/* fp9 */ \
// OBSOLETE   case 27:			/* fp10 */ \
// OBSOLETE   case 28:			/* fp11 */ \
// OBSOLETE   case 29:			/* fp12 */ \
// OBSOLETE   case 30:			/* fp13 */ \
// OBSOLETE   case 31:			/* fp14 */ \
// OBSOLETE   case 32:			/* fp15 */ \
// OBSOLETE   case 33:			/* fp16 */ \
// OBSOLETE   case 34:			/* fp17 */ \
// OBSOLETE   case 35:			/* fp18 */ \
// OBSOLETE   case 36:			/* fp19 */ \
// OBSOLETE   case 37:			/* fp20 */ \
// OBSOLETE   case 38:			/* fp21 */ \
// OBSOLETE   case 39:			/* fp22 */ \
// OBSOLETE   case 40:			/* fp23 */ \
// OBSOLETE   case 41:			/* fp24 */ \
// OBSOLETE   case 42:			/* fp25 */ \
// OBSOLETE   case 43:			/* fp26 */ \
// OBSOLETE   case 44:			/* fp27 */ \
// OBSOLETE   case 45:			/* fp28 */ \
// OBSOLETE   case 46:			/* fp29 */ \
// OBSOLETE   case 47:			/* fp30 */ \
// OBSOLETE   case 48:			/* fp31 */ \
// OBSOLETE      addr = ((int) &foo.u_fpasave.fpa_regs[(regno)-18] - (int)&foo); \
// OBSOLETE   } \
// OBSOLETE }
// OBSOLETE 
// OBSOLETE /* Total amount of space needed to store our copies of the machine's
// OBSOLETE    register state, the array `registers'.  10 i*86 registers, 8 i387
// OBSOLETE    registers, and 31 Weitek 1167 registers */
// OBSOLETE 
// OBSOLETE #undef  REGISTER_BYTES
// OBSOLETE #define REGISTER_BYTES ((10 * 4) + (8 * 10) + (31 * 4))
// OBSOLETE 
// OBSOLETE /* Nonzero if register N requires conversion
// OBSOLETE    from raw format to virtual format.  */
// OBSOLETE 
// OBSOLETE #undef  REGISTER_CONVERTIBLE
// OBSOLETE #define REGISTER_CONVERTIBLE(N) \
// OBSOLETE (((N) < 3) ? 0 : \
// OBSOLETE ((N) < 5) ? 1  : \
// OBSOLETE ((N) < 8) ? 0  : \
// OBSOLETE ((N) < 14) ? 1 : \
// OBSOLETE     0)
// OBSOLETE 
// OBSOLETE #include "floatformat.h"
// OBSOLETE 
// OBSOLETE /* Convert data from raw format for register REGNUM in buffer FROM
// OBSOLETE    to virtual format with type TYPE in buffer TO.  */
// OBSOLETE 
// OBSOLETE #undef REGISTER_CONVERT_TO_VIRTUAL
// OBSOLETE #define REGISTER_CONVERT_TO_VIRTUAL(REGNUM,TYPE,FROM,TO) \
// OBSOLETE { \
// OBSOLETE   DOUBLEST val; \
// OBSOLETE   floatformat_to_doublest (&floatformat_i387_ext, (FROM), &val); \
// OBSOLETE   deprecated_store_floating ((TO), TYPE_LENGTH (TYPE), val); \
// OBSOLETE }
// OBSOLETE 
// OBSOLETE /* Convert data from virtual format with type TYPE in buffer FROM
// OBSOLETE    to raw format for register REGNUM in buffer TO.  */
// OBSOLETE 
// OBSOLETE #undef REGISTER_CONVERT_TO_RAW
// OBSOLETE #define REGISTER_CONVERT_TO_RAW(TYPE,REGNUM,FROM,TO) \
// OBSOLETE { \
// OBSOLETE   DOUBLEST val = deprecated_extract_floating ((FROM), TYPE_LENGTH (TYPE)); \
// OBSOLETE   floatformat_from_doublest (&floatformat_i387_ext, &val, (TO)); \
// OBSOLETE }
// OBSOLETE 
// OBSOLETE /* Return the GDB type object for the "standard" data type
// OBSOLETE    of data in register N.  */
// OBSOLETE 
// OBSOLETE #undef REGISTER_VIRTUAL_TYPE
// OBSOLETE #define REGISTER_VIRTUAL_TYPE(N) \
// OBSOLETE ((N < 3) ? builtin_type_int : \
// OBSOLETE (N < 5) ? builtin_type_double : \
// OBSOLETE (N < 8) ? builtin_type_int : \
// OBSOLETE (N < 14) ? builtin_type_double : \
// OBSOLETE     builtin_type_int)
// OBSOLETE 
// OBSOLETE /* Store the address of the place in which to copy the structure the
// OBSOLETE    subroutine will return.  This is called from call_function.
// OBSOLETE    Native cc passes the address in eax, gcc (up to version 2.5.8)
// OBSOLETE    passes it on the stack.  gcc should be fixed in future versions to
// OBSOLETE    adopt native cc conventions.  */
// OBSOLETE 
// OBSOLETE #undef  DEPRECATED_PUSH_ARGUMENTS
// OBSOLETE #undef  STORE_STRUCT_RETURN
// OBSOLETE #define STORE_STRUCT_RETURN(ADDR, SP) write_register(0, (ADDR))
// OBSOLETE 
// OBSOLETE /* Extract from an array REGBUF containing the (raw) register state
// OBSOLETE    a function return value of type TYPE, and copy that, in virtual format,
// OBSOLETE    into VALBUF.  */
// OBSOLETE 
// OBSOLETE #undef  DEPRECATED_EXTRACT_RETURN_VALUE
// OBSOLETE #define DEPRECATED_EXTRACT_RETURN_VALUE(TYPE,REGBUF,VALBUF) \
// OBSOLETE   symmetry_extract_return_value(TYPE, REGBUF, VALBUF)
// OBSOLETE 
// OBSOLETE /* The following redefines make backtracing through sigtramp work.
// OBSOLETE    They manufacture a fake sigtramp frame and obtain the saved pc in sigtramp
// OBSOLETE    from the sigcontext structure which is pushed by the kernel on the
// OBSOLETE    user stack, along with a pointer to it.  */
// OBSOLETE 
// OBSOLETE #define IN_SIGTRAMP(pc, name) ((name) && STREQ ("_sigcode", name))
// OBSOLETE 
// OBSOLETE /* Offset to saved PC in sigcontext, from <signal.h>.  */
// OBSOLETE #define SIGCONTEXT_PC_OFFSET 16
// OBSOLETE 
// OBSOLETE #endif /* ifndef TM_SYMMETRY_H */
@


1.14
log
@2003-04-09  Andrew Cagney  <cagney@@redhat.com>

	* NEWS: Mention that the "Sequent family" is obsolete.
	* configure.tgt: Obsolete i[3456]86-sequent-bsd*,
	i[3456]86-sequent-sysv4*, and i[3456]86-sequent-sysv*.
	* configure.host: Obsolete i[3456]86-sequent-bsd*,
	i[3456]86-sequent-sysv4*, and i[3456]86-sequent-sysv*.
	* config/i386/tm-ptx4.h: Obsolete file.
	* config/i386/tm-ptx.h: Obsolete file.
	* symm-tdep.c: Obsolete file.
	* config/i386/symmetry.mt: Obsolete file.
	* config/i386/tm-symmetry.h: Obsolete file.
	* symm-nat.c: Obsolete file.
	* config/i386/nm-symmetry.h: Obsolete file.
	* config/i386/xm-symmetry.h: Obsolete file.
	* config/i386/symmetry.mh: Obsolete file.
	* config/i386/nm-ptx4.h: Obsolete file.
	* config/i386/ptx4.mh: Obsolete file.
	* config/i386/ptx.mt: Obsolete file.
	* config/i386/ptx.mh: Obsolete file.
	* config/i386/xm-ptx4.h: Obsolete file.
	* config/i386/xm-ptx.h: Obsolete file.
@
text
@@


1.14.20.1
log
@merge mainline changes into branch
@
text
@@


1.13
log
@2003-04-09  Andrew Cagney  <cagney@@redhat.com>

	* doublest.h: Update copyright.
	(deprecated_store_floating, deprecated_extract_floating): Rename
	store_floating and extract_floating.  Update comments.
	* doublest.c: Update copyright.
	(extract_floating_by_length): Replace extract_floating.
	(store_floating_by_length): Replace store_floating.
	(deprecated_extract_floating): New function.
	(deprecated_store_floating): New function.
	(extract_typed_floating): Call extract_floating_by_length.
	(store_typed_floating): Call store_floating_by_length.
	* x86-64-tdep.c (x86_64_store_return_value): Update.
	* sh-tdep.c (sh3e_sh4_extract_return_value): Update.
	(sh64_extract_return_value): Update.
	(sh_sh4_register_convert_to_virtual): Update.
	(sh_sh64_register_convert_to_virtual): Update.
	(sh_sh4_register_convert_to_raw): Update.
	(sh_sh64_register_convert_to_raw): Update.
	* rs6000-tdep.c (rs6000_register_convert_to_virtual): Update.
	(rs6000_register_convert_to_raw): Update.
	* ia64-tdep.c (ia64_register_convert_to_virtual): Update.
	(ia64_register_convert_to_raw): Update.
	* config/i386/tm-symmetry.h (REGISTER_CONVERT_TO_RAW): Update.
	(REGISTER_CONVERT_TO_VIRTUAL): Update.
	* arm-linux-tdep.c (arm_linux_push_arguments): Update.
	* alpha-tdep.c (alpha_register_convert_to_virtual): Update.
	(alpha_register_convert_to_raw): Update.
@
text
@d1 291
a291 291
/* Target machine definitions for GDB on a Sequent Symmetry under dynix 3.0,
   with Weitek 1167 and i387 support.

   Copyright 1986, 1987, 1989, 1991, 1992, 1993, 1994, 1995, 2003 Free
   Software Foundation, Inc.

   Symmetry version by Jay Vosburgh (fubar@@sequent.com).

   This file is part of GDB.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place - Suite 330,
   Boston, MA 02111-1307, USA.  */

#ifndef TM_SYMMETRY_H
#define TM_SYMMETRY_H 1

#include "regcache.h"
#include "doublest.h"

/* I don't know if this will work for cross-debugging, even if you do get
   a copy of the right include file.  */
#include <machine/reg.h>

#include "i386/tm-i386.h"

/* Amount PC must be decremented by after a breakpoint.  This is often the
   number of bytes in BREAKPOINT but not always (such as now). */

#undef DECR_PC_AFTER_BREAK
#define DECR_PC_AFTER_BREAK 0

/* Number of machine registers */

#undef NUM_REGS
#define NUM_REGS 49

/* Initializer for an array of names of registers.
   There should be NUM_REGS strings in this initializer.  */

/* Initializer for an array of names of registers.  There should be at least
   NUM_REGS strings in this initializer.  Any excess ones are simply ignored.
   Symmetry registers are in this weird order to match the register numbers
   in the symbol table entries.  If you change the order, things will probably
   break mysteriously for no apparent reason.  Also note that the st(0)...
   st(7) 387 registers are represented as st0...st7.  */

#undef REGISTER_NAME
#define REGISTER_NAMES {     "eax",  "edx",  "ecx",   "st0",  "st1", \
			     "ebx",  "esi",  "edi",   "st2",  "st3", \
			     "st4",  "st5",  "st6",   "st7",  "esp", \
			     "ebp",  "eip",  "eflags","fp1",  "fp2", \
			     "fp3",  "fp4",  "fp5",   "fp6",  "fp7", \
			     "fp8",  "fp9",  "fp10",  "fp11", "fp12", \
			     "fp13", "fp14", "fp15",  "fp16", "fp17", \
			     "fp18", "fp19", "fp20",  "fp21", "fp22", \
			     "fp23", "fp24", "fp25",  "fp26", "fp27", \
			     "fp28", "fp29", "fp30",  "fp31" }

/* Register numbers of various important registers.
   Note that some of these values are "real" register numbers,
   and correspond to the general registers of the machine,
   and some are "phony" register numbers which are too large
   to be actual register numbers as far as the user is concerned
   but do serve to get the desired values when passed to read_register.  */

#define EAX_REGNUM	0
#define EDX_REGNUM	1
#define ECX_REGNUM	2
#define ST0_REGNUM	3
#define ST1_REGNUM	4
#define EBX_REGNUM	5
#define ESI_REGNUM	6
#define EDI_REGNUM	7
#define ST2_REGNUM	8
#define ST3_REGNUM	9

#define ST4_REGNUM	10
#define ST5_REGNUM	11
#define ST6_REGNUM	12
#define ST7_REGNUM	13

#define FP1_REGNUM 18		/* first 1167 register */
/* Get %fp2 - %fp31 by addition, since they are contiguous */

#undef  SP_REGNUM
#define SP_REGNUM 14		/* (usp) Contains address of top of stack */
#define ESP_REGNUM 14
#undef  FP_REGNUM
#define FP_REGNUM 15		/* (ebp) Contains address of executing stack frame */
#define EBP_REGNUM 15
#undef  PC_REGNUM
#define PC_REGNUM 16		/* (eip) Contains program counter */
#define EIP_REGNUM 16
#undef  PS_REGNUM
#define PS_REGNUM 17		/* (ps)  Contains processor status */
#define EFLAGS_REGNUM 17

/*
 * Following macro translates i386 opcode register numbers to Symmetry
 * register numbers.  This is used by i386_frame_find_saved_regs.
 *
 *           %eax  %ecx  %edx  %ebx  %esp  %ebp  %esi  %edi
 * i386        0     1     2     3     4     5     6     7
 * Symmetry    0     2     1     5    14    15     6     7
 *
 */
#define I386_REGNO_TO_SYMMETRY(n) \
((n)==0?0 :(n)==1?2 :(n)==2?1 :(n)==3?5 :(n)==4?14 :(n)==5?15 :(n))

/* The magic numbers below are offsets into u_ar0 in the user struct.
 * They live in <machine/reg.h>.  Gdb calls this macro with blockend
 * holding u.u_ar0 - KERNEL_U_ADDR.  Only the registers listed are
 * saved in the u area (along with a few others that aren't useful
 * here.  See <machine/reg.h>).
 */

#define REGISTER_U_ADDR(addr, blockend, regno) \
{ struct user foo;	/* needed for finding fpu regs */ \
switch (regno) { \
    case 0: \
      addr = blockend + EAX * sizeof(int); break; \
  case 1: \
      addr = blockend + EDX * sizeof(int); break; \
  case 2: \
      addr = blockend + ECX * sizeof(int); break; \
  case 3:			/* st(0) */ \
      addr = ((int)&foo.u_fpusave.fpu_stack[0][0] - (int)&foo); \
      break; \
  case 4:			/* st(1) */ \
      addr = ((int) &foo.u_fpusave.fpu_stack[1][0] - (int)&foo); \
      break; \
  case 5: \
      addr = blockend + EBX * sizeof(int); break; \
  case 6: \
      addr = blockend + ESI * sizeof(int); break; \
  case 7: \
      addr = blockend + EDI * sizeof(int); break; \
  case 8:			/* st(2) */ \
      addr = ((int) &foo.u_fpusave.fpu_stack[2][0] - (int)&foo); \
      break; \
  case 9:			/* st(3) */ \
      addr = ((int) &foo.u_fpusave.fpu_stack[3][0] - (int)&foo); \
      break; \
  case 10:			/* st(4) */ \
      addr = ((int) &foo.u_fpusave.fpu_stack[4][0] - (int)&foo); \
      break; \
  case 11:			/* st(5) */ \
      addr = ((int) &foo.u_fpusave.fpu_stack[5][0] - (int)&foo); \
      break; \
  case 12:			/* st(6) */ \
      addr = ((int) &foo.u_fpusave.fpu_stack[6][0] - (int)&foo); \
      break; \
  case 13:			/* st(7) */ \
      addr = ((int) &foo.u_fpusave.fpu_stack[7][0] - (int)&foo); \
      break; \
  case 14: \
      addr = blockend + ESP * sizeof(int); break; \
  case 15: \
      addr = blockend + EBP * sizeof(int); break; \
  case 16: \
      addr = blockend + EIP * sizeof(int); break; \
  case 17: \
      addr = blockend + FLAGS * sizeof(int); break; \
  case 18:			/* fp1 */ \
  case 19:			/* fp2 */ \
  case 20:			/* fp3 */ \
  case 21:			/* fp4 */ \
  case 22:			/* fp5 */ \
  case 23:			/* fp6 */ \
  case 24:			/* fp7 */ \
  case 25:			/* fp8 */ \
  case 26:			/* fp9 */ \
  case 27:			/* fp10 */ \
  case 28:			/* fp11 */ \
  case 29:			/* fp12 */ \
  case 30:			/* fp13 */ \
  case 31:			/* fp14 */ \
  case 32:			/* fp15 */ \
  case 33:			/* fp16 */ \
  case 34:			/* fp17 */ \
  case 35:			/* fp18 */ \
  case 36:			/* fp19 */ \
  case 37:			/* fp20 */ \
  case 38:			/* fp21 */ \
  case 39:			/* fp22 */ \
  case 40:			/* fp23 */ \
  case 41:			/* fp24 */ \
  case 42:			/* fp25 */ \
  case 43:			/* fp26 */ \
  case 44:			/* fp27 */ \
  case 45:			/* fp28 */ \
  case 46:			/* fp29 */ \
  case 47:			/* fp30 */ \
  case 48:			/* fp31 */ \
     addr = ((int) &foo.u_fpasave.fpa_regs[(regno)-18] - (int)&foo); \
  } \
}

/* Total amount of space needed to store our copies of the machine's
   register state, the array `registers'.  10 i*86 registers, 8 i387
   registers, and 31 Weitek 1167 registers */

#undef  REGISTER_BYTES
#define REGISTER_BYTES ((10 * 4) + (8 * 10) + (31 * 4))

/* Nonzero if register N requires conversion
   from raw format to virtual format.  */

#undef  REGISTER_CONVERTIBLE
#define REGISTER_CONVERTIBLE(N) \
(((N) < 3) ? 0 : \
((N) < 5) ? 1  : \
((N) < 8) ? 0  : \
((N) < 14) ? 1 : \
    0)

#include "floatformat.h"

/* Convert data from raw format for register REGNUM in buffer FROM
   to virtual format with type TYPE in buffer TO.  */

#undef REGISTER_CONVERT_TO_VIRTUAL
#define REGISTER_CONVERT_TO_VIRTUAL(REGNUM,TYPE,FROM,TO) \
{ \
  DOUBLEST val; \
  floatformat_to_doublest (&floatformat_i387_ext, (FROM), &val); \
  deprecated_store_floating ((TO), TYPE_LENGTH (TYPE), val); \
}

/* Convert data from virtual format with type TYPE in buffer FROM
   to raw format for register REGNUM in buffer TO.  */

#undef REGISTER_CONVERT_TO_RAW
#define REGISTER_CONVERT_TO_RAW(TYPE,REGNUM,FROM,TO) \
{ \
  DOUBLEST val = deprecated_extract_floating ((FROM), TYPE_LENGTH (TYPE)); \
  floatformat_from_doublest (&floatformat_i387_ext, &val, (TO)); \
}

/* Return the GDB type object for the "standard" data type
   of data in register N.  */

#undef REGISTER_VIRTUAL_TYPE
#define REGISTER_VIRTUAL_TYPE(N) \
((N < 3) ? builtin_type_int : \
(N < 5) ? builtin_type_double : \
(N < 8) ? builtin_type_int : \
(N < 14) ? builtin_type_double : \
    builtin_type_int)

/* Store the address of the place in which to copy the structure the
   subroutine will return.  This is called from call_function.
   Native cc passes the address in eax, gcc (up to version 2.5.8)
   passes it on the stack.  gcc should be fixed in future versions to
   adopt native cc conventions.  */

#undef  DEPRECATED_PUSH_ARGUMENTS
#undef  STORE_STRUCT_RETURN
#define STORE_STRUCT_RETURN(ADDR, SP) write_register(0, (ADDR))

/* Extract from an array REGBUF containing the (raw) register state
   a function return value of type TYPE, and copy that, in virtual format,
   into VALBUF.  */

#undef  DEPRECATED_EXTRACT_RETURN_VALUE
#define DEPRECATED_EXTRACT_RETURN_VALUE(TYPE,REGBUF,VALBUF) \
  symmetry_extract_return_value(TYPE, REGBUF, VALBUF)

/* The following redefines make backtracing through sigtramp work.
   They manufacture a fake sigtramp frame and obtain the saved pc in sigtramp
   from the sigcontext structure which is pushed by the kernel on the
   user stack, along with a pointer to it.  */

#define IN_SIGTRAMP(pc, name) ((name) && STREQ ("_sigcode", name))

/* Offset to saved PC in sigcontext, from <signal.h>.  */
#define SIGCONTEXT_PC_OFFSET 16

#endif /* ifndef TM_SYMMETRY_H */
@


1.12
log
@2003-03-26  Andrew Cagney  <cagney@@redhat.com>

	* gdbarch.sh (DEPRECATED_PUSH_ARGUMENTS): Rename PUSH_ARGUMENTS.
	(push_dummy_call): New pure multi-arch replacement with gdbarch,
	regcache and dummy_addr parameters.
	* gdbarch.h, gdbarch.c: Re-generate.
	* valops.c (hand_function_call): Use gdbarch_push_dummy_call when
	available; assume it will handle stack alignment and return
	address issues.  Fall back to DEPRECATED_PUSH_ARGUMENTS and
	legacy_push_arguments.
	(legacy_push_arguments): Rename default_push_arguments.
	* value.h (legacy_push_arguments): Rename default_push_arguments.
	* i386-tdep.c (i386_push_arguments): Call legacy_push_arguments.
	* config/sparc/tm-sparc.h (DEPRECATED_PUSH_ARGUMENTS): Update.
	* config/sparc/tm-sp64.h (DEPRECATED_PUSH_ARGUMENTS): Update.
	* config/pa/tm-hppa.h (DEPRECATED_PUSH_ARGUMENTS): Update.
	* config/i386/tm-symmetry.h: Update.
	* xstormy16-tdep.c (xstormy16_gdbarch_init): Update.
	* x86-64-tdep.c (x86_64_init_abi): Update.
	* v850-tdep.c (v850_gdbarch_init): Update.
	* sparc-tdep.c (sparc_gdbarch_init): Update.
	* sh-tdep.c (sh_gdbarch_init): Update.
	* s390-tdep.c (s390_gdbarch_init): Update.
	* rs6000-tdep.c (rs6000_gdbarch_init): Update.
	* mn10300-tdep.c (mn10300_gdbarch_init): Update.
	* mips-tdep.c (mips_gdbarch_init): Update.
	* mcore-tdep.c (mcore_gdbarch_init): Update.
	* m68hc11-tdep.c (m68hc11_gdbarch_init): Update.
	* ia64-tdep.c (ia64_gdbarch_init): Update.
	* i386-tdep.c (i386_gdbarch_init): Update.
	* hppa-tdep.c (hppa_gdbarch_init): Update.
	* h8300-tdep.c (h8300_gdbarch_init): Update.
	* frv-tdep.c (frv_gdbarch_init): Update.
	* d10v-tdep.c (d10v_gdbarch_init): Update.
	* cris-tdep.c (cris_gdbarch_init): Update.
	* avr-tdep.c (avr_gdbarch_init): Update.
	* arm-tdep.c (arm_gdbarch_init): Update.
	* arm-linux-tdep.c (arm_linux_init_abi): Update.
	* alpha-tdep.c (alpha_gdbarch_init): Update.

2003-03-26  Andrew Cagney  <cagney@@redhat.com>

	* gdbint.texinfo (Target Architecture Definition): Replace
	PUSH_ARGUMENTS with push_dummy_call, add gdbarch, regcache and
	dummy_addr parameters.
@
text
@d239 1
a239 1
  store_floating ((TO), TYPE_LENGTH (TYPE), val); \
d248 1
a248 1
  DOUBLEST val = extract_floating ((FROM), TYPE_LENGTH (TYPE)); \
@


1.12.2.1
log
@Merge with mainline.
@
text
@d1 291
a291 291
// OBSOLETE /* Target machine definitions for GDB on a Sequent Symmetry under dynix 3.0,
// OBSOLETE    with Weitek 1167 and i387 support.
// OBSOLETE 
// OBSOLETE    Copyright 1986, 1987, 1989, 1991, 1992, 1993, 1994, 1995, 2003 Free
// OBSOLETE    Software Foundation, Inc.
// OBSOLETE 
// OBSOLETE    Symmetry version by Jay Vosburgh (fubar@@sequent.com).
// OBSOLETE 
// OBSOLETE    This file is part of GDB.
// OBSOLETE 
// OBSOLETE    This program is free software; you can redistribute it and/or modify
// OBSOLETE    it under the terms of the GNU General Public License as published by
// OBSOLETE    the Free Software Foundation; either version 2 of the License, or
// OBSOLETE    (at your option) any later version.
// OBSOLETE 
// OBSOLETE    This program is distributed in the hope that it will be useful,
// OBSOLETE    but WITHOUT ANY WARRANTY; without even the implied warranty of
// OBSOLETE    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// OBSOLETE    GNU General Public License for more details.
// OBSOLETE 
// OBSOLETE    You should have received a copy of the GNU General Public License
// OBSOLETE    along with this program; if not, write to the Free Software
// OBSOLETE    Foundation, Inc., 59 Temple Place - Suite 330,
// OBSOLETE    Boston, MA 02111-1307, USA.  */
// OBSOLETE 
// OBSOLETE #ifndef TM_SYMMETRY_H
// OBSOLETE #define TM_SYMMETRY_H 1
// OBSOLETE 
// OBSOLETE #include "regcache.h"
// OBSOLETE #include "doublest.h"
// OBSOLETE 
// OBSOLETE /* I don't know if this will work for cross-debugging, even if you do get
// OBSOLETE    a copy of the right include file.  */
// OBSOLETE #include <machine/reg.h>
// OBSOLETE 
// OBSOLETE #include "i386/tm-i386.h"
// OBSOLETE 
// OBSOLETE /* Amount PC must be decremented by after a breakpoint.  This is often the
// OBSOLETE    number of bytes in BREAKPOINT but not always (such as now). */
// OBSOLETE 
// OBSOLETE #undef DECR_PC_AFTER_BREAK
// OBSOLETE #define DECR_PC_AFTER_BREAK 0
// OBSOLETE 
// OBSOLETE /* Number of machine registers */
// OBSOLETE 
// OBSOLETE #undef NUM_REGS
// OBSOLETE #define NUM_REGS 49
// OBSOLETE 
// OBSOLETE /* Initializer for an array of names of registers.
// OBSOLETE    There should be NUM_REGS strings in this initializer.  */
// OBSOLETE 
// OBSOLETE /* Initializer for an array of names of registers.  There should be at least
// OBSOLETE    NUM_REGS strings in this initializer.  Any excess ones are simply ignored.
// OBSOLETE    Symmetry registers are in this weird order to match the register numbers
// OBSOLETE    in the symbol table entries.  If you change the order, things will probably
// OBSOLETE    break mysteriously for no apparent reason.  Also note that the st(0)...
// OBSOLETE    st(7) 387 registers are represented as st0...st7.  */
// OBSOLETE 
// OBSOLETE #undef REGISTER_NAME
// OBSOLETE #define REGISTER_NAMES {     "eax",  "edx",  "ecx",   "st0",  "st1", \
// OBSOLETE 			     "ebx",  "esi",  "edi",   "st2",  "st3", \
// OBSOLETE 			     "st4",  "st5",  "st6",   "st7",  "esp", \
// OBSOLETE 			     "ebp",  "eip",  "eflags","fp1",  "fp2", \
// OBSOLETE 			     "fp3",  "fp4",  "fp5",   "fp6",  "fp7", \
// OBSOLETE 			     "fp8",  "fp9",  "fp10",  "fp11", "fp12", \
// OBSOLETE 			     "fp13", "fp14", "fp15",  "fp16", "fp17", \
// OBSOLETE 			     "fp18", "fp19", "fp20",  "fp21", "fp22", \
// OBSOLETE 			     "fp23", "fp24", "fp25",  "fp26", "fp27", \
// OBSOLETE 			     "fp28", "fp29", "fp30",  "fp31" }
// OBSOLETE 
// OBSOLETE /* Register numbers of various important registers.
// OBSOLETE    Note that some of these values are "real" register numbers,
// OBSOLETE    and correspond to the general registers of the machine,
// OBSOLETE    and some are "phony" register numbers which are too large
// OBSOLETE    to be actual register numbers as far as the user is concerned
// OBSOLETE    but do serve to get the desired values when passed to read_register.  */
// OBSOLETE 
// OBSOLETE #define EAX_REGNUM	0
// OBSOLETE #define EDX_REGNUM	1
// OBSOLETE #define ECX_REGNUM	2
// OBSOLETE #define ST0_REGNUM	3
// OBSOLETE #define ST1_REGNUM	4
// OBSOLETE #define EBX_REGNUM	5
// OBSOLETE #define ESI_REGNUM	6
// OBSOLETE #define EDI_REGNUM	7
// OBSOLETE #define ST2_REGNUM	8
// OBSOLETE #define ST3_REGNUM	9
// OBSOLETE 
// OBSOLETE #define ST4_REGNUM	10
// OBSOLETE #define ST5_REGNUM	11
// OBSOLETE #define ST6_REGNUM	12
// OBSOLETE #define ST7_REGNUM	13
// OBSOLETE 
// OBSOLETE #define FP1_REGNUM 18		/* first 1167 register */
// OBSOLETE /* Get %fp2 - %fp31 by addition, since they are contiguous */
// OBSOLETE 
// OBSOLETE #undef  SP_REGNUM
// OBSOLETE #define SP_REGNUM 14		/* (usp) Contains address of top of stack */
// OBSOLETE #define ESP_REGNUM 14
// OBSOLETE #undef  FP_REGNUM
// OBSOLETE #define FP_REGNUM 15		/* (ebp) Contains address of executing stack frame */
// OBSOLETE #define EBP_REGNUM 15
// OBSOLETE #undef  PC_REGNUM
// OBSOLETE #define PC_REGNUM 16		/* (eip) Contains program counter */
// OBSOLETE #define EIP_REGNUM 16
// OBSOLETE #undef  PS_REGNUM
// OBSOLETE #define PS_REGNUM 17		/* (ps)  Contains processor status */
// OBSOLETE #define EFLAGS_REGNUM 17
// OBSOLETE 
// OBSOLETE /*
// OBSOLETE  * Following macro translates i386 opcode register numbers to Symmetry
// OBSOLETE  * register numbers.  This is used by i386_frame_find_saved_regs.
// OBSOLETE  *
// OBSOLETE  *           %eax  %ecx  %edx  %ebx  %esp  %ebp  %esi  %edi
// OBSOLETE  * i386        0     1     2     3     4     5     6     7
// OBSOLETE  * Symmetry    0     2     1     5    14    15     6     7
// OBSOLETE  *
// OBSOLETE  */
// OBSOLETE #define I386_REGNO_TO_SYMMETRY(n) \
// OBSOLETE ((n)==0?0 :(n)==1?2 :(n)==2?1 :(n)==3?5 :(n)==4?14 :(n)==5?15 :(n))
// OBSOLETE 
// OBSOLETE /* The magic numbers below are offsets into u_ar0 in the user struct.
// OBSOLETE  * They live in <machine/reg.h>.  Gdb calls this macro with blockend
// OBSOLETE  * holding u.u_ar0 - KERNEL_U_ADDR.  Only the registers listed are
// OBSOLETE  * saved in the u area (along with a few others that aren't useful
// OBSOLETE  * here.  See <machine/reg.h>).
// OBSOLETE  */
// OBSOLETE 
// OBSOLETE #define REGISTER_U_ADDR(addr, blockend, regno) \
// OBSOLETE { struct user foo;	/* needed for finding fpu regs */ \
// OBSOLETE switch (regno) { \
// OBSOLETE     case 0: \
// OBSOLETE       addr = blockend + EAX * sizeof(int); break; \
// OBSOLETE   case 1: \
// OBSOLETE       addr = blockend + EDX * sizeof(int); break; \
// OBSOLETE   case 2: \
// OBSOLETE       addr = blockend + ECX * sizeof(int); break; \
// OBSOLETE   case 3:			/* st(0) */ \
// OBSOLETE       addr = ((int)&foo.u_fpusave.fpu_stack[0][0] - (int)&foo); \
// OBSOLETE       break; \
// OBSOLETE   case 4:			/* st(1) */ \
// OBSOLETE       addr = ((int) &foo.u_fpusave.fpu_stack[1][0] - (int)&foo); \
// OBSOLETE       break; \
// OBSOLETE   case 5: \
// OBSOLETE       addr = blockend + EBX * sizeof(int); break; \
// OBSOLETE   case 6: \
// OBSOLETE       addr = blockend + ESI * sizeof(int); break; \
// OBSOLETE   case 7: \
// OBSOLETE       addr = blockend + EDI * sizeof(int); break; \
// OBSOLETE   case 8:			/* st(2) */ \
// OBSOLETE       addr = ((int) &foo.u_fpusave.fpu_stack[2][0] - (int)&foo); \
// OBSOLETE       break; \
// OBSOLETE   case 9:			/* st(3) */ \
// OBSOLETE       addr = ((int) &foo.u_fpusave.fpu_stack[3][0] - (int)&foo); \
// OBSOLETE       break; \
// OBSOLETE   case 10:			/* st(4) */ \
// OBSOLETE       addr = ((int) &foo.u_fpusave.fpu_stack[4][0] - (int)&foo); \
// OBSOLETE       break; \
// OBSOLETE   case 11:			/* st(5) */ \
// OBSOLETE       addr = ((int) &foo.u_fpusave.fpu_stack[5][0] - (int)&foo); \
// OBSOLETE       break; \
// OBSOLETE   case 12:			/* st(6) */ \
// OBSOLETE       addr = ((int) &foo.u_fpusave.fpu_stack[6][0] - (int)&foo); \
// OBSOLETE       break; \
// OBSOLETE   case 13:			/* st(7) */ \
// OBSOLETE       addr = ((int) &foo.u_fpusave.fpu_stack[7][0] - (int)&foo); \
// OBSOLETE       break; \
// OBSOLETE   case 14: \
// OBSOLETE       addr = blockend + ESP * sizeof(int); break; \
// OBSOLETE   case 15: \
// OBSOLETE       addr = blockend + EBP * sizeof(int); break; \
// OBSOLETE   case 16: \
// OBSOLETE       addr = blockend + EIP * sizeof(int); break; \
// OBSOLETE   case 17: \
// OBSOLETE       addr = blockend + FLAGS * sizeof(int); break; \
// OBSOLETE   case 18:			/* fp1 */ \
// OBSOLETE   case 19:			/* fp2 */ \
// OBSOLETE   case 20:			/* fp3 */ \
// OBSOLETE   case 21:			/* fp4 */ \
// OBSOLETE   case 22:			/* fp5 */ \
// OBSOLETE   case 23:			/* fp6 */ \
// OBSOLETE   case 24:			/* fp7 */ \
// OBSOLETE   case 25:			/* fp8 */ \
// OBSOLETE   case 26:			/* fp9 */ \
// OBSOLETE   case 27:			/* fp10 */ \
// OBSOLETE   case 28:			/* fp11 */ \
// OBSOLETE   case 29:			/* fp12 */ \
// OBSOLETE   case 30:			/* fp13 */ \
// OBSOLETE   case 31:			/* fp14 */ \
// OBSOLETE   case 32:			/* fp15 */ \
// OBSOLETE   case 33:			/* fp16 */ \
// OBSOLETE   case 34:			/* fp17 */ \
// OBSOLETE   case 35:			/* fp18 */ \
// OBSOLETE   case 36:			/* fp19 */ \
// OBSOLETE   case 37:			/* fp20 */ \
// OBSOLETE   case 38:			/* fp21 */ \
// OBSOLETE   case 39:			/* fp22 */ \
// OBSOLETE   case 40:			/* fp23 */ \
// OBSOLETE   case 41:			/* fp24 */ \
// OBSOLETE   case 42:			/* fp25 */ \
// OBSOLETE   case 43:			/* fp26 */ \
// OBSOLETE   case 44:			/* fp27 */ \
// OBSOLETE   case 45:			/* fp28 */ \
// OBSOLETE   case 46:			/* fp29 */ \
// OBSOLETE   case 47:			/* fp30 */ \
// OBSOLETE   case 48:			/* fp31 */ \
// OBSOLETE      addr = ((int) &foo.u_fpasave.fpa_regs[(regno)-18] - (int)&foo); \
// OBSOLETE   } \
// OBSOLETE }
// OBSOLETE 
// OBSOLETE /* Total amount of space needed to store our copies of the machine's
// OBSOLETE    register state, the array `registers'.  10 i*86 registers, 8 i387
// OBSOLETE    registers, and 31 Weitek 1167 registers */
// OBSOLETE 
// OBSOLETE #undef  REGISTER_BYTES
// OBSOLETE #define REGISTER_BYTES ((10 * 4) + (8 * 10) + (31 * 4))
// OBSOLETE 
// OBSOLETE /* Nonzero if register N requires conversion
// OBSOLETE    from raw format to virtual format.  */
// OBSOLETE 
// OBSOLETE #undef  REGISTER_CONVERTIBLE
// OBSOLETE #define REGISTER_CONVERTIBLE(N) \
// OBSOLETE (((N) < 3) ? 0 : \
// OBSOLETE ((N) < 5) ? 1  : \
// OBSOLETE ((N) < 8) ? 0  : \
// OBSOLETE ((N) < 14) ? 1 : \
// OBSOLETE     0)
// OBSOLETE 
// OBSOLETE #include "floatformat.h"
// OBSOLETE 
// OBSOLETE /* Convert data from raw format for register REGNUM in buffer FROM
// OBSOLETE    to virtual format with type TYPE in buffer TO.  */
// OBSOLETE 
// OBSOLETE #undef REGISTER_CONVERT_TO_VIRTUAL
// OBSOLETE #define REGISTER_CONVERT_TO_VIRTUAL(REGNUM,TYPE,FROM,TO) \
// OBSOLETE { \
// OBSOLETE   DOUBLEST val; \
// OBSOLETE   floatformat_to_doublest (&floatformat_i387_ext, (FROM), &val); \
// OBSOLETE   deprecated_store_floating ((TO), TYPE_LENGTH (TYPE), val); \
// OBSOLETE }
// OBSOLETE 
// OBSOLETE /* Convert data from virtual format with type TYPE in buffer FROM
// OBSOLETE    to raw format for register REGNUM in buffer TO.  */
// OBSOLETE 
// OBSOLETE #undef REGISTER_CONVERT_TO_RAW
// OBSOLETE #define REGISTER_CONVERT_TO_RAW(TYPE,REGNUM,FROM,TO) \
// OBSOLETE { \
// OBSOLETE   DOUBLEST val = deprecated_extract_floating ((FROM), TYPE_LENGTH (TYPE)); \
// OBSOLETE   floatformat_from_doublest (&floatformat_i387_ext, &val, (TO)); \
// OBSOLETE }
// OBSOLETE 
// OBSOLETE /* Return the GDB type object for the "standard" data type
// OBSOLETE    of data in register N.  */
// OBSOLETE 
// OBSOLETE #undef REGISTER_VIRTUAL_TYPE
// OBSOLETE #define REGISTER_VIRTUAL_TYPE(N) \
// OBSOLETE ((N < 3) ? builtin_type_int : \
// OBSOLETE (N < 5) ? builtin_type_double : \
// OBSOLETE (N < 8) ? builtin_type_int : \
// OBSOLETE (N < 14) ? builtin_type_double : \
// OBSOLETE     builtin_type_int)
// OBSOLETE 
// OBSOLETE /* Store the address of the place in which to copy the structure the
// OBSOLETE    subroutine will return.  This is called from call_function.
// OBSOLETE    Native cc passes the address in eax, gcc (up to version 2.5.8)
// OBSOLETE    passes it on the stack.  gcc should be fixed in future versions to
// OBSOLETE    adopt native cc conventions.  */
// OBSOLETE 
// OBSOLETE #undef  DEPRECATED_PUSH_ARGUMENTS
// OBSOLETE #undef  STORE_STRUCT_RETURN
// OBSOLETE #define STORE_STRUCT_RETURN(ADDR, SP) write_register(0, (ADDR))
// OBSOLETE 
// OBSOLETE /* Extract from an array REGBUF containing the (raw) register state
// OBSOLETE    a function return value of type TYPE, and copy that, in virtual format,
// OBSOLETE    into VALBUF.  */
// OBSOLETE 
// OBSOLETE #undef  DEPRECATED_EXTRACT_RETURN_VALUE
// OBSOLETE #define DEPRECATED_EXTRACT_RETURN_VALUE(TYPE,REGBUF,VALBUF) \
// OBSOLETE   symmetry_extract_return_value(TYPE, REGBUF, VALBUF)
// OBSOLETE 
// OBSOLETE /* The following redefines make backtracing through sigtramp work.
// OBSOLETE    They manufacture a fake sigtramp frame and obtain the saved pc in sigtramp
// OBSOLETE    from the sigcontext structure which is pushed by the kernel on the
// OBSOLETE    user stack, along with a pointer to it.  */
// OBSOLETE 
// OBSOLETE #define IN_SIGTRAMP(pc, name) ((name) && STREQ ("_sigcode", name))
// OBSOLETE 
// OBSOLETE /* Offset to saved PC in sigcontext, from <signal.h>.  */
// OBSOLETE #define SIGCONTEXT_PC_OFFSET 16
// OBSOLETE 
// OBSOLETE #endif /* ifndef TM_SYMMETRY_H */
@


1.11
log
@2003-02-01  Andrew Cagney  <ac131313@@redhat.com>

	* infcmd.c (print_float_info): Delete code conditional on
	FLOAT_INFO.
	* config/nm-lynx.h: Delete #undef FLOAT_INFO.  Update copyright.
	* config/m68k/nm-apollo68b.h: Ditto.
	* config/i386/tm-ptx.h (FLOAT_INFO): Delete.  Update copyright.
	* config/ns32k/nm-nbsd.h (FLOAT_INFO): Ditto.
	* config/i386/tm-symmetry.h (FLOAT_INFO): Ditto.

Index: doc/ChangeLog
2003-02-01  Andrew Cagney  <ac131313@@redhat.com>

	* gdbint.texinfo (Target Architecture Definition): Delete
	FLOAT_INFO.
@
text
@d269 1
a269 1
#undef  PUSH_ARGUMENTS
@


1.11.12.1
log
@Merge with mainline.
@
text
@d269 1
a269 1
#undef  DEPRECATED_PUSH_ARGUMENTS
@


1.10
log
@* config/i386/i386aout.mt (TDEPFILES): Add i387-tdep.o
(TM_FILE): Set to tm-i386.h.
* config/i386/i386v.mt (TM_FILE): Set to tm-i386.h.
* config/i386/tm-i386v.h: Remove file.
* config/i386/tm-ptx.h [!SEQUENT_PTX4]: Include "i386/tm-i386.h"
instead of "i386/tm-i386v.h".
(START_INFERIOR_TRAPS_EXPECTED): Remove define.
* config/i386/tm-symmetry: Include "i386/tm-i386.h" instead of
"i386/tm-i386v.h".
(START_INFERIOR_TRAPS_EXPECTED): Remove define.
* config/i386/tm-vxworks.h: Include "i386/tm-i386.h" instead of
"i386/tm-i386.h".
@
text
@d3 4
a6 2
   Copyright 1986, 1987, 1989, 1991, 1992, 1993, 1994, 1995
   Free Software Foundation, Inc.
a42 9

#if 0
/* --- this code can't be used unless we know we are running native,
   since it uses host specific ptrace calls. */
/* code for 80387 fpu.  Functions are from i386-dep.c, copied into
 * symm-dep.c.
 */
#define FLOAT_INFO { i386_float_info(); }
#endif
@


1.10.10.1
log
@Merge drow-cplus-branch to:
  cvs rtag -D 2003-12-14 00:00:00 UTC drow-cplus-merge-20031214 gdb+dejagnu
@
text
@@


1.10.8.1
log
@2003-02-07  David Carlton  <carlton@@math.stanford.edu>

	* Merge with mainline; tag is carlton_dictionary-20030207-merge.
@
text
@d3 2
a4 4

   Copyright 1986, 1987, 1989, 1991, 1992, 1993, 1994, 1995, 2003 Free
   Software Foundation, Inc.

d41 9
@


1.10.8.2
log
@2003-04-16  David Carlton  <carlton@@bactrian.org>

	* Merge with mainline; tag is carlton_dictionary-20030416-merge.
@
text
@d1 291
a291 291
// OBSOLETE /* Target machine definitions for GDB on a Sequent Symmetry under dynix 3.0,
// OBSOLETE    with Weitek 1167 and i387 support.
// OBSOLETE 
// OBSOLETE    Copyright 1986, 1987, 1989, 1991, 1992, 1993, 1994, 1995, 2003 Free
// OBSOLETE    Software Foundation, Inc.
// OBSOLETE 
// OBSOLETE    Symmetry version by Jay Vosburgh (fubar@@sequent.com).
// OBSOLETE 
// OBSOLETE    This file is part of GDB.
// OBSOLETE 
// OBSOLETE    This program is free software; you can redistribute it and/or modify
// OBSOLETE    it under the terms of the GNU General Public License as published by
// OBSOLETE    the Free Software Foundation; either version 2 of the License, or
// OBSOLETE    (at your option) any later version.
// OBSOLETE 
// OBSOLETE    This program is distributed in the hope that it will be useful,
// OBSOLETE    but WITHOUT ANY WARRANTY; without even the implied warranty of
// OBSOLETE    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// OBSOLETE    GNU General Public License for more details.
// OBSOLETE 
// OBSOLETE    You should have received a copy of the GNU General Public License
// OBSOLETE    along with this program; if not, write to the Free Software
// OBSOLETE    Foundation, Inc., 59 Temple Place - Suite 330,
// OBSOLETE    Boston, MA 02111-1307, USA.  */
// OBSOLETE 
// OBSOLETE #ifndef TM_SYMMETRY_H
// OBSOLETE #define TM_SYMMETRY_H 1
// OBSOLETE 
// OBSOLETE #include "regcache.h"
// OBSOLETE #include "doublest.h"
// OBSOLETE 
// OBSOLETE /* I don't know if this will work for cross-debugging, even if you do get
// OBSOLETE    a copy of the right include file.  */
// OBSOLETE #include <machine/reg.h>
// OBSOLETE 
// OBSOLETE #include "i386/tm-i386.h"
// OBSOLETE 
// OBSOLETE /* Amount PC must be decremented by after a breakpoint.  This is often the
// OBSOLETE    number of bytes in BREAKPOINT but not always (such as now). */
// OBSOLETE 
// OBSOLETE #undef DECR_PC_AFTER_BREAK
// OBSOLETE #define DECR_PC_AFTER_BREAK 0
// OBSOLETE 
// OBSOLETE /* Number of machine registers */
// OBSOLETE 
// OBSOLETE #undef NUM_REGS
// OBSOLETE #define NUM_REGS 49
// OBSOLETE 
// OBSOLETE /* Initializer for an array of names of registers.
// OBSOLETE    There should be NUM_REGS strings in this initializer.  */
// OBSOLETE 
// OBSOLETE /* Initializer for an array of names of registers.  There should be at least
// OBSOLETE    NUM_REGS strings in this initializer.  Any excess ones are simply ignored.
// OBSOLETE    Symmetry registers are in this weird order to match the register numbers
// OBSOLETE    in the symbol table entries.  If you change the order, things will probably
// OBSOLETE    break mysteriously for no apparent reason.  Also note that the st(0)...
// OBSOLETE    st(7) 387 registers are represented as st0...st7.  */
// OBSOLETE 
// OBSOLETE #undef REGISTER_NAME
// OBSOLETE #define REGISTER_NAMES {     "eax",  "edx",  "ecx",   "st0",  "st1", \
// OBSOLETE 			     "ebx",  "esi",  "edi",   "st2",  "st3", \
// OBSOLETE 			     "st4",  "st5",  "st6",   "st7",  "esp", \
// OBSOLETE 			     "ebp",  "eip",  "eflags","fp1",  "fp2", \
// OBSOLETE 			     "fp3",  "fp4",  "fp5",   "fp6",  "fp7", \
// OBSOLETE 			     "fp8",  "fp9",  "fp10",  "fp11", "fp12", \
// OBSOLETE 			     "fp13", "fp14", "fp15",  "fp16", "fp17", \
// OBSOLETE 			     "fp18", "fp19", "fp20",  "fp21", "fp22", \
// OBSOLETE 			     "fp23", "fp24", "fp25",  "fp26", "fp27", \
// OBSOLETE 			     "fp28", "fp29", "fp30",  "fp31" }
// OBSOLETE 
// OBSOLETE /* Register numbers of various important registers.
// OBSOLETE    Note that some of these values are "real" register numbers,
// OBSOLETE    and correspond to the general registers of the machine,
// OBSOLETE    and some are "phony" register numbers which are too large
// OBSOLETE    to be actual register numbers as far as the user is concerned
// OBSOLETE    but do serve to get the desired values when passed to read_register.  */
// OBSOLETE 
// OBSOLETE #define EAX_REGNUM	0
// OBSOLETE #define EDX_REGNUM	1
// OBSOLETE #define ECX_REGNUM	2
// OBSOLETE #define ST0_REGNUM	3
// OBSOLETE #define ST1_REGNUM	4
// OBSOLETE #define EBX_REGNUM	5
// OBSOLETE #define ESI_REGNUM	6
// OBSOLETE #define EDI_REGNUM	7
// OBSOLETE #define ST2_REGNUM	8
// OBSOLETE #define ST3_REGNUM	9
// OBSOLETE 
// OBSOLETE #define ST4_REGNUM	10
// OBSOLETE #define ST5_REGNUM	11
// OBSOLETE #define ST6_REGNUM	12
// OBSOLETE #define ST7_REGNUM	13
// OBSOLETE 
// OBSOLETE #define FP1_REGNUM 18		/* first 1167 register */
// OBSOLETE /* Get %fp2 - %fp31 by addition, since they are contiguous */
// OBSOLETE 
// OBSOLETE #undef  SP_REGNUM
// OBSOLETE #define SP_REGNUM 14		/* (usp) Contains address of top of stack */
// OBSOLETE #define ESP_REGNUM 14
// OBSOLETE #undef  FP_REGNUM
// OBSOLETE #define FP_REGNUM 15		/* (ebp) Contains address of executing stack frame */
// OBSOLETE #define EBP_REGNUM 15
// OBSOLETE #undef  PC_REGNUM
// OBSOLETE #define PC_REGNUM 16		/* (eip) Contains program counter */
// OBSOLETE #define EIP_REGNUM 16
// OBSOLETE #undef  PS_REGNUM
// OBSOLETE #define PS_REGNUM 17		/* (ps)  Contains processor status */
// OBSOLETE #define EFLAGS_REGNUM 17
// OBSOLETE 
// OBSOLETE /*
// OBSOLETE  * Following macro translates i386 opcode register numbers to Symmetry
// OBSOLETE  * register numbers.  This is used by i386_frame_find_saved_regs.
// OBSOLETE  *
// OBSOLETE  *           %eax  %ecx  %edx  %ebx  %esp  %ebp  %esi  %edi
// OBSOLETE  * i386        0     1     2     3     4     5     6     7
// OBSOLETE  * Symmetry    0     2     1     5    14    15     6     7
// OBSOLETE  *
// OBSOLETE  */
// OBSOLETE #define I386_REGNO_TO_SYMMETRY(n) \
// OBSOLETE ((n)==0?0 :(n)==1?2 :(n)==2?1 :(n)==3?5 :(n)==4?14 :(n)==5?15 :(n))
// OBSOLETE 
// OBSOLETE /* The magic numbers below are offsets into u_ar0 in the user struct.
// OBSOLETE  * They live in <machine/reg.h>.  Gdb calls this macro with blockend
// OBSOLETE  * holding u.u_ar0 - KERNEL_U_ADDR.  Only the registers listed are
// OBSOLETE  * saved in the u area (along with a few others that aren't useful
// OBSOLETE  * here.  See <machine/reg.h>).
// OBSOLETE  */
// OBSOLETE 
// OBSOLETE #define REGISTER_U_ADDR(addr, blockend, regno) \
// OBSOLETE { struct user foo;	/* needed for finding fpu regs */ \
// OBSOLETE switch (regno) { \
// OBSOLETE     case 0: \
// OBSOLETE       addr = blockend + EAX * sizeof(int); break; \
// OBSOLETE   case 1: \
// OBSOLETE       addr = blockend + EDX * sizeof(int); break; \
// OBSOLETE   case 2: \
// OBSOLETE       addr = blockend + ECX * sizeof(int); break; \
// OBSOLETE   case 3:			/* st(0) */ \
// OBSOLETE       addr = ((int)&foo.u_fpusave.fpu_stack[0][0] - (int)&foo); \
// OBSOLETE       break; \
// OBSOLETE   case 4:			/* st(1) */ \
// OBSOLETE       addr = ((int) &foo.u_fpusave.fpu_stack[1][0] - (int)&foo); \
// OBSOLETE       break; \
// OBSOLETE   case 5: \
// OBSOLETE       addr = blockend + EBX * sizeof(int); break; \
// OBSOLETE   case 6: \
// OBSOLETE       addr = blockend + ESI * sizeof(int); break; \
// OBSOLETE   case 7: \
// OBSOLETE       addr = blockend + EDI * sizeof(int); break; \
// OBSOLETE   case 8:			/* st(2) */ \
// OBSOLETE       addr = ((int) &foo.u_fpusave.fpu_stack[2][0] - (int)&foo); \
// OBSOLETE       break; \
// OBSOLETE   case 9:			/* st(3) */ \
// OBSOLETE       addr = ((int) &foo.u_fpusave.fpu_stack[3][0] - (int)&foo); \
// OBSOLETE       break; \
// OBSOLETE   case 10:			/* st(4) */ \
// OBSOLETE       addr = ((int) &foo.u_fpusave.fpu_stack[4][0] - (int)&foo); \
// OBSOLETE       break; \
// OBSOLETE   case 11:			/* st(5) */ \
// OBSOLETE       addr = ((int) &foo.u_fpusave.fpu_stack[5][0] - (int)&foo); \
// OBSOLETE       break; \
// OBSOLETE   case 12:			/* st(6) */ \
// OBSOLETE       addr = ((int) &foo.u_fpusave.fpu_stack[6][0] - (int)&foo); \
// OBSOLETE       break; \
// OBSOLETE   case 13:			/* st(7) */ \
// OBSOLETE       addr = ((int) &foo.u_fpusave.fpu_stack[7][0] - (int)&foo); \
// OBSOLETE       break; \
// OBSOLETE   case 14: \
// OBSOLETE       addr = blockend + ESP * sizeof(int); break; \
// OBSOLETE   case 15: \
// OBSOLETE       addr = blockend + EBP * sizeof(int); break; \
// OBSOLETE   case 16: \
// OBSOLETE       addr = blockend + EIP * sizeof(int); break; \
// OBSOLETE   case 17: \
// OBSOLETE       addr = blockend + FLAGS * sizeof(int); break; \
// OBSOLETE   case 18:			/* fp1 */ \
// OBSOLETE   case 19:			/* fp2 */ \
// OBSOLETE   case 20:			/* fp3 */ \
// OBSOLETE   case 21:			/* fp4 */ \
// OBSOLETE   case 22:			/* fp5 */ \
// OBSOLETE   case 23:			/* fp6 */ \
// OBSOLETE   case 24:			/* fp7 */ \
// OBSOLETE   case 25:			/* fp8 */ \
// OBSOLETE   case 26:			/* fp9 */ \
// OBSOLETE   case 27:			/* fp10 */ \
// OBSOLETE   case 28:			/* fp11 */ \
// OBSOLETE   case 29:			/* fp12 */ \
// OBSOLETE   case 30:			/* fp13 */ \
// OBSOLETE   case 31:			/* fp14 */ \
// OBSOLETE   case 32:			/* fp15 */ \
// OBSOLETE   case 33:			/* fp16 */ \
// OBSOLETE   case 34:			/* fp17 */ \
// OBSOLETE   case 35:			/* fp18 */ \
// OBSOLETE   case 36:			/* fp19 */ \
// OBSOLETE   case 37:			/* fp20 */ \
// OBSOLETE   case 38:			/* fp21 */ \
// OBSOLETE   case 39:			/* fp22 */ \
// OBSOLETE   case 40:			/* fp23 */ \
// OBSOLETE   case 41:			/* fp24 */ \
// OBSOLETE   case 42:			/* fp25 */ \
// OBSOLETE   case 43:			/* fp26 */ \
// OBSOLETE   case 44:			/* fp27 */ \
// OBSOLETE   case 45:			/* fp28 */ \
// OBSOLETE   case 46:			/* fp29 */ \
// OBSOLETE   case 47:			/* fp30 */ \
// OBSOLETE   case 48:			/* fp31 */ \
// OBSOLETE      addr = ((int) &foo.u_fpasave.fpa_regs[(regno)-18] - (int)&foo); \
// OBSOLETE   } \
// OBSOLETE }
// OBSOLETE 
// OBSOLETE /* Total amount of space needed to store our copies of the machine's
// OBSOLETE    register state, the array `registers'.  10 i*86 registers, 8 i387
// OBSOLETE    registers, and 31 Weitek 1167 registers */
// OBSOLETE 
// OBSOLETE #undef  REGISTER_BYTES
// OBSOLETE #define REGISTER_BYTES ((10 * 4) + (8 * 10) + (31 * 4))
// OBSOLETE 
// OBSOLETE /* Nonzero if register N requires conversion
// OBSOLETE    from raw format to virtual format.  */
// OBSOLETE 
// OBSOLETE #undef  REGISTER_CONVERTIBLE
// OBSOLETE #define REGISTER_CONVERTIBLE(N) \
// OBSOLETE (((N) < 3) ? 0 : \
// OBSOLETE ((N) < 5) ? 1  : \
// OBSOLETE ((N) < 8) ? 0  : \
// OBSOLETE ((N) < 14) ? 1 : \
// OBSOLETE     0)
// OBSOLETE 
// OBSOLETE #include "floatformat.h"
// OBSOLETE 
// OBSOLETE /* Convert data from raw format for register REGNUM in buffer FROM
// OBSOLETE    to virtual format with type TYPE in buffer TO.  */
// OBSOLETE 
// OBSOLETE #undef REGISTER_CONVERT_TO_VIRTUAL
// OBSOLETE #define REGISTER_CONVERT_TO_VIRTUAL(REGNUM,TYPE,FROM,TO) \
// OBSOLETE { \
// OBSOLETE   DOUBLEST val; \
// OBSOLETE   floatformat_to_doublest (&floatformat_i387_ext, (FROM), &val); \
// OBSOLETE   deprecated_store_floating ((TO), TYPE_LENGTH (TYPE), val); \
// OBSOLETE }
// OBSOLETE 
// OBSOLETE /* Convert data from virtual format with type TYPE in buffer FROM
// OBSOLETE    to raw format for register REGNUM in buffer TO.  */
// OBSOLETE 
// OBSOLETE #undef REGISTER_CONVERT_TO_RAW
// OBSOLETE #define REGISTER_CONVERT_TO_RAW(TYPE,REGNUM,FROM,TO) \
// OBSOLETE { \
// OBSOLETE   DOUBLEST val = deprecated_extract_floating ((FROM), TYPE_LENGTH (TYPE)); \
// OBSOLETE   floatformat_from_doublest (&floatformat_i387_ext, &val, (TO)); \
// OBSOLETE }
// OBSOLETE 
// OBSOLETE /* Return the GDB type object for the "standard" data type
// OBSOLETE    of data in register N.  */
// OBSOLETE 
// OBSOLETE #undef REGISTER_VIRTUAL_TYPE
// OBSOLETE #define REGISTER_VIRTUAL_TYPE(N) \
// OBSOLETE ((N < 3) ? builtin_type_int : \
// OBSOLETE (N < 5) ? builtin_type_double : \
// OBSOLETE (N < 8) ? builtin_type_int : \
// OBSOLETE (N < 14) ? builtin_type_double : \
// OBSOLETE     builtin_type_int)
// OBSOLETE 
// OBSOLETE /* Store the address of the place in which to copy the structure the
// OBSOLETE    subroutine will return.  This is called from call_function.
// OBSOLETE    Native cc passes the address in eax, gcc (up to version 2.5.8)
// OBSOLETE    passes it on the stack.  gcc should be fixed in future versions to
// OBSOLETE    adopt native cc conventions.  */
// OBSOLETE 
// OBSOLETE #undef  DEPRECATED_PUSH_ARGUMENTS
// OBSOLETE #undef  STORE_STRUCT_RETURN
// OBSOLETE #define STORE_STRUCT_RETURN(ADDR, SP) write_register(0, (ADDR))
// OBSOLETE 
// OBSOLETE /* Extract from an array REGBUF containing the (raw) register state
// OBSOLETE    a function return value of type TYPE, and copy that, in virtual format,
// OBSOLETE    into VALBUF.  */
// OBSOLETE 
// OBSOLETE #undef  DEPRECATED_EXTRACT_RETURN_VALUE
// OBSOLETE #define DEPRECATED_EXTRACT_RETURN_VALUE(TYPE,REGBUF,VALBUF) \
// OBSOLETE   symmetry_extract_return_value(TYPE, REGBUF, VALBUF)
// OBSOLETE 
// OBSOLETE /* The following redefines make backtracing through sigtramp work.
// OBSOLETE    They manufacture a fake sigtramp frame and obtain the saved pc in sigtramp
// OBSOLETE    from the sigcontext structure which is pushed by the kernel on the
// OBSOLETE    user stack, along with a pointer to it.  */
// OBSOLETE 
// OBSOLETE #define IN_SIGTRAMP(pc, name) ((name) && STREQ ("_sigcode", name))
// OBSOLETE 
// OBSOLETE /* Offset to saved PC in sigcontext, from <signal.h>.  */
// OBSOLETE #define SIGCONTEXT_PC_OFFSET 16
// OBSOLETE 
// OBSOLETE #endif /* ifndef TM_SYMMETRY_H */
@


1.10.8.3
log
@2003-11-11  David Carlton  <carlton@@kealia.com>

	* Merge with mainline; tag is carlton-dictionary-20031111-merge.
@
text
@@


1.9
log
@2002-08-12  Andrew Cagney  <cagney@@redhat.com>

* i386-tdep.h (i386_register_byte, i386_register_raw_size): Delete
declarations.
* i386-linux-tdep.c (i386_linux_register_byte): Delete function.
(i386_linux_register_raw_size): Delete function.
i386_linux_init_abi): Update.
* i386-tdep.c (i386_register_raw_size): Delete function.
(i386_register_byte): Delete function.
(i386_gdbarch_init): Update.
(i386_register_size): Delete array.
(i386_register_offset): Delete array.

* config/i386/tm-symmetry.h (REGISTER_BYTE): Delete macro.
(REGISTER_RAW_SIZE): Delete macro.
* config/i386/tm-ptx.h (REGISTER_RAW_SIZE): Delete macro.
(REGISTER_BYTE): Delete macro.
@
text
@d34 1
a34 4
#include "i386/tm-i386v.h"

#undef START_INFERIOR_TRAPS_EXPECTED
#define START_INFERIOR_TRAPS_EXPECTED 2
@


1.8
log
@+	* gdbarch.sh (DEPRECATED_EXTRACT_RETURN_VALUE): Rename
+	EXTRACT_RETURN_VALUE.
+	(DEPRECATED_EXTRACT_STRUCT_VALUE_ADDRESS): Rename
+	EXTRACT_STRUCT_VALUE_ADDRESS.
+	* gdbarch.h, gdbarch.c: Regenerate.
+
+	* values.c (value_being_returned): Handle
+	DEPRECATED_EXTRACT_STRUCT_VALUE_ADDRESS.
+	(EXTRACT_RETURN_VALUE): Define as DEPRECATED_EXTRACT_RETURN_VALUE.
+
+	* arm-linux-tdep.c (arm_linux_init_abi): Update.
+	* arm-tdep.c (arm_gdbarch_init): Update.
+	* avr-tdep.c (avr_gdbarch_init): Update.
+	* cris-tdep.c (cris_gdbarch_init): Update.
+	* d10v-tdep.c (d10v_gdbarch_init): Update.
+	* ia64-tdep.c (ia64_gdbarch_init): Update.
+	* m68hc11-tdep.c (m68hc11_gdbarch_init): Update.
+	* rs6000-tdep.c (rs6000_gdbarch_init): Update.
+	* s390-tdep.c (s390_gdbarch_init): Update.
+	* sh-tdep.c (sh_gdbarch_init): Update.
+	* s390-tdep.c (s390_gdbarch_init): Update.
+	* sparc-tdep.c (sparc_gdbarch_init): Update.
+	* ns32k-tdep.c (ns32k_gdbarch_init): Update.
+	* v850-tdep.c (v850_gdbarch_init): Update.
+	* vax-tdep.c (vax_gdbarch_init): Update.
+	* x86-64-tdep.c (x86_64_gdbarch_init): Update.
+	* xstormy16-tdep.c (xstormy16_gdbarch_init): Update.
+
+	* config/arc/tm-arc.h: Update.
+	* config/d30v/tm-d30v.h: Update.
+	* config/fr30/tm-fr30.h: Update.
+	* config/h8300/tm-h8300.h: Update.
* config/h8500/tm-h8500.h: Update.
* config/i386/tm-i386.h: Update.
* config/i386/tm-ptx.h: Update.
* config/i386/tm-symmetry.h: Update.
* config/i960/tm-i960.h: Update.
* config/m32r/tm-m32r.h: Update.
* config/m68k/tm-delta68.h: Update.
* config/m68k/tm-linux.h: Update.
* config/m68k/tm-m68k.h: Update.
* config/m88k/tm-m88k.h: Update.
* config/mcore/tm-mcore.h: Update.
* config/mips/tm-mips.h: Update.
* config/mn10200/tm-mn10200.h: Update.
* config/pa/tm-hppa.h: Update.
* config/pa/tm-hppa64.h: Update.
* config/sparc/tm-sp64.h: Update.
* config/sparc/tm-sparc.h: Update.
* config/sparc/tm-sparclet.h: Update.
* config/z8k/tm-z8k.h: Update.
@
text
@a227 24
/* Index within `registers' of the first byte of the space for
   register N.  */

#undef  REGISTER_BYTE
#define REGISTER_BYTE(N) 		\
(((N) < 3) ? ((N) * 4) :		\
((N) < 5) ? ((((N) - 2) * 10) + 2) :	\
((N) < 8) ? ((((N) - 5) * 4) + 32) :	\
((N) < 14) ? ((((N) - 8) * 10) + 44) :	\
    ((((N) - 14) * 4) + 104))

/* Number of bytes of storage in the actual machine representation
 * for register N.  All registers are 4 bytes, except 387 st(0) - st(7),
 * which are 80 bits each. 
 */

#undef  REGISTER_RAW_SIZE
#define REGISTER_RAW_SIZE(N) \
(((N) < 3) ? 4 :	\
((N) < 5) ? 10 :	\
((N) < 8) ? 4 :		\
((N) < 14) ? 10 :	\
    4)

@


1.7
log
@* config/i386/tm-i386.h (REGISTER_NAMES): Remove.
(REGISTER_NAME): New define.
(i386_register_name): New prototype.
* i386-tdep.c (i386_register_names): New variable.
(i386_register_name): New function.
* config/i386/tm-i386os9k.h, config/i386/tm-ptx.h,
config/i386/tm-symmetry.h: Undefine REGISTER_NAME instead of
REGISTER_NAMES.
@
text
@d311 2
a312 2
#undef  EXTRACT_RETURN_VALUE
#define EXTRACT_RETURN_VALUE(TYPE,REGBUF,VALBUF) \
@


1.7.8.1
log
@Merge with mainline, kseitz_interps-20020619-merge.
@
text
@d311 2
a312 2
#undef  DEPRECATED_EXTRACT_RETURN_VALUE
#define DEPRECATED_EXTRACT_RETURN_VALUE(TYPE,REGBUF,VALBUF) \
@


1.7.8.2
log
@Merge with kseitz_interps-20020829-merge tag from trunk.
@
text
@d34 4
a37 1
#include "i386/tm-i386.h"
d227 24
@


1.7.6.1
log
@merge from trunk
@
text
@d311 2
a312 2
#undef  DEPRECATED_EXTRACT_RETURN_VALUE
#define DEPRECATED_EXTRACT_RETURN_VALUE(TYPE,REGBUF,VALBUF) \
@


1.6
log
@Convert some floatformat_{to,from}_double to floatformat_{to,from}_doublest.
@
text
@d69 1
a69 1
#undef  REGISTER_NAMES
@


1.5
log
@* defs.h (HOST_FLOAT_FORMAT, HOST_DOUBLE_FORMAT)
(HOST_FLOAT_FORMAT, HOST_DOUBLE_FORMAT)
(HOST_LONG_DOUBLE_FORMAT, DOUBLEST)
(floatformat_to_doublest, floatformat_from_doublest)
(floatformat_is_negative, floatformat_is_nan)
(floatformat_mantissa, store_floating)
(extract_floating): Move declaration from here.
* doublest.h: To here.  New file.
* utils.c (get_field, floatformat_to_doublest, put_field)
(ldfrexp, floatformat_from_doublest, floatformat_is_negative)
(floatformat_is_nan, floatformat_mantissa)
(FLOATFORMAT_CHAR_BIT): Move from here.
* doublest.c: To here.  New file.
* findvar.c (store_floating, extract_floating): Move from here.
* doublest.c: To here.
* Makefile.in (SFILES): Add doublest.c.
(COMMON_OBS): Add doublest.o.
(doublest.o): Specify dependencies.
(doublest_h): Define.

* config/m88k/tm-m88k.h: Include "doublest.h".
* config/i960/tm-i960.h: Ditto.
* config/i386/tm-symmetry.h: Ditto.
* rs6000-tdep.c, valarith.c: Ditto.
* valprint.c, stabsread.c, sh-tdep.c: Ditto.
* ia64-tdep.c, i387-tdep.c, i386-tdep.c: Ditto.
* values.c, arm-tdep.c, arm-linux-tdep.c: Ditto.
* alpha-tdep.c, ax.h, expression.h: Ditto.
* sh-tdep.c, parse.c, top.c, value.h: Ditto.

* Makefile.in (arm-tdep.o): Add $(doublest_h).
(i386-tdep.o, i387-tdep.o, ia64-tdep.o): Ditto.
(rs6000-tdep.o, stabsread.o, valarith.o): Ditto.
(values.o, valprint.o, arm-linux-tdep.o): Ditto.
(alpha-tdep.o, ax_h, parse.o, top.o, value_h): Ditto.
(parser_defs_h): Ditto.
(expression_h): Add $(doublest_h) and $(symtab_h).
@
text
@d271 2
a272 2
  double val; \
  floatformat_to_double (&floatformat_i387_ext, (FROM), &val); \
d282 2
a283 2
  double val = extract_floating ((FROM), TYPE_LENGTH (TYPE)); \
  floatformat_from_double (&floatformat_i387_ext, &val, (TO)); \
@


1.4
log
@* config/i386/tm-symmetry.h (PUSH_ARGUMENTS): #undef.
@
text
@d28 1
@


1.3
log
@Include regcache.h
@
text
@d302 1
@


1.2
log
@Update/correct copyright notices.
@
text
@d27 2
@


1.1
log
@Initial revision
@
text
@d3 1
a3 1
   Copyright 1986, 1987, 1989, 1991, 1992, 1993, 1994
d7 1
a7 1
This file is part of GDB.
d9 14
a22 13
This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
d44 1
a44 1
       since it uses host specific ptrace calls. */
d105 1
a105 1
#define SP_REGNUM 14	/* (usp) Contains address of top of stack */
d108 1
a108 1
#define FP_REGNUM 15	/* (ebp) Contains address of executing stack frame */
d111 1
a111 1
#define PC_REGNUM 16	/* (eip) Contains program counter */
d114 1
a114 1
#define PS_REGNUM 17	/* (ps)  Contains processor status */
d321 1
a321 2
#endif	/* ifndef TM_SYMMETRY_H */

@


1.1.1.1
log
@Initial creation of sourceware repository
@
text
@@


1.1.1.2
log
@import gdb-1999-07-07 post reformat
@
text
@d7 1
a7 1
   This file is part of GDB.
d9 13
a21 14
   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place - Suite 330,
   Boston, MA 02111-1307, USA.  */
d43 1
a43 1
   since it uses host specific ptrace calls. */
d104 1
a104 1
#define SP_REGNUM 14		/* (usp) Contains address of top of stack */
d107 1
a107 1
#define FP_REGNUM 15		/* (ebp) Contains address of executing stack frame */
d110 1
a110 1
#define PC_REGNUM 16		/* (eip) Contains program counter */
d113 1
a113 1
#define PS_REGNUM 17		/* (ps)  Contains processor status */
d320 2
a321 1
#endif /* ifndef TM_SYMMETRY_H */
@

