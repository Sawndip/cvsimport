head	1.48;
access;
symbols
	gdb_6_1_1-20040616-release:1.47
	gdb_6_1-2004-04-05-release:1.47
	drow_intercu-merge-20040402:1.47
	drow_intercu-merge-20040327:1.47
	ezannoni_pie-20040323-branch:1.47.0.16
	ezannoni_pie-20040323-branchpoint:1.47
	cagney_tramp-20040321-mergepoint:1.47
	cagney_tramp-20040309-branch:1.47.0.14
	cagney_tramp-20040309-branchpoint:1.47
	gdb_6_1-branch:1.47.0.12
	gdb_6_1-2004-03-01-gmt-branchpoint:1.47
	drow_intercu-20040221-branch:1.47.0.10
	drow_intercu-20040221-branchpoint:1.47
	cagney_bfdfile-20040213-branch:1.47.0.8
	cagney_bfdfile-20040213-branchpoint:1.47
	drow-cplus-merge-20040208:1.47
	carlton_dictionary-20040126-merge:1.47
	cagney_bigcore-20040122-branch:1.47.0.6
	cagney_bigcore-20040122-branchpoint:1.47
	drow-cplus-merge-20040113:1.47
	drow-cplus-merge-20031224:1.47
	drow-cplus-merge-20031220:1.47
	carlton_dictionary-20031215-merge:1.47
	drow-cplus-merge-20031214:1.47
	carlton-dictionary-20031111-merge:1.47
	gdb_6_0-2003-10-04-release:1.46
	kettenis_sparc-20030918-branch:1.47.0.4
	kettenis_sparc-20030918-branchpoint:1.47
	carlton_dictionary-20030917-merge:1.47
	ezannoni_pie-20030916-branchpoint:1.47
	ezannoni_pie-20030916-branch:1.47.0.2
	cagney_x86i386-20030821-branch:1.46.0.4
	cagney_x86i386-20030821-branchpoint:1.46
	carlton_dictionary-20030805-merge:1.46
	carlton_dictionary-20030627-merge:1.46
	gdb_6_0-branch:1.46.0.2
	gdb_6_0-2003-06-23-branchpoint:1.46
	jimb-ppc64-linux-20030613-branch:1.45.0.42
	jimb-ppc64-linux-20030613-branchpoint:1.45
	cagney_convert-20030606-branch:1.45.0.40
	cagney_convert-20030606-branchpoint:1.45
	cagney_writestrings-20030508-branch:1.45.0.38
	cagney_writestrings-20030508-branchpoint:1.45
	jimb-ppc64-linux-20030528-branch:1.45.0.36
	jimb-ppc64-linux-20030528-branchpoint:1.45
	carlton_dictionary-20030523-merge:1.45
	cagney_fileio-20030521-branch:1.45.0.34
	cagney_fileio-20030521-branchpoint:1.45
	kettenis_i386newframe-20030517-mergepoint:1.45
	jimb-ppc64-linux-20030509-branch:1.45.0.32
	jimb-ppc64-linux-20030509-branchpoint:1.45
	kettenis_i386newframe-20030504-mergepoint:1.45
	carlton_dictionary-20030430-merge:1.45
	kettenis_i386newframe-20030419-branch:1.45.0.30
	kettenis_i386newframe-20030419-branchpoint:1.45
	carlton_dictionary-20030416-merge:1.45
	cagney_frameaddr-20030409-mergepoint:1.45
	kettenis_i386newframe-20030406-branch:1.45.0.28
	kettenis_i386newframe-20030406-branchpoint:1.45
	cagney_frameaddr-20030403-branchpoint:1.45
	cagney_frameaddr-20030403-branch:1.45.0.26
	cagney_framebase-20030330-mergepoint:1.45
	cagney_framebase-20030326-branch:1.45.0.24
	cagney_framebase-20030326-branchpoint:1.45
	cagney_lazyid-20030317-branch:1.45.0.22
	cagney_lazyid-20030317-branchpoint:1.45
	kettenis-i386newframe-20030316-mergepoint:1.45
	offbyone-20030313-branch:1.45.0.20
	offbyone-20030313-branchpoint:1.45
	kettenis-i386newframe-20030308-branch:1.45.0.18
	kettenis-i386newframe-20030308-branchpoint:1.45
	carlton_dictionary-20030305-merge:1.45
	cagney_offbyone-20030303-branch:1.45.0.16
	cagney_offbyone-20030303-branchpoint:1.45
	carlton_dictionary-20030207-merge:1.45
	interps-20030203-mergepoint:1.45
	interps-20030202-branch:1.45.0.14
	interps-20030202-branchpoint:1.45
	cagney-unwind-20030108-branch:1.45.0.12
	cagney-unwind-20030108-branchpoint:1.45
	carlton_dictionary-20021223-merge:1.45
	gdb_5_3-2002-12-12-release:1.45
	carlton_dictionary-20021115-merge:1.45
	kseitz_interps-20021105-merge:1.45
	kseitz_interps-20021103-merge:1.45
	drow-cplus-merge-20021020:1.45
	drow-cplus-merge-20021025:1.45
	carlton_dictionary-20021025-merge:1.45
	carlton_dictionary-20021011-merge:1.45
	drow-cplus-branch:1.45.0.10
	drow-cplus-branchpoint:1.45
	kseitz_interps-20020930-merge:1.45
	carlton_dictionary-20020927-merge:1.45
	carlton_dictionary-branch:1.45.0.8
	carlton_dictionary-20020920-branchpoint:1.45
	gdb_5_3-branch:1.45.0.6
	gdb_5_3-2002-09-04-branchpoint:1.45
	kseitz_interps-20020829-merge:1.45
	cagney_sysregs-20020825-branch:1.45.0.4
	cagney_sysregs-20020825-branchpoint:1.45
	readline_4_3-import-branch:1.45.0.2
	readline_4_3-import-branchpoint:1.45
	gdb_5_2_1-2002-07-23-release:1.29
	kseitz_interps-20020528-branch:1.29.0.8
	kseitz_interps-20020528-branchpoint:1.29
	cagney_regbuf-20020515-branch:1.29.0.6
	cagney_regbuf-20020515-branchpoint:1.29
	jimb-macro-020506-branch:1.29.0.4
	jimb-macro-020506-branchpoint:1.29
	gdb_5_2-2002-04-29-release:1.29
	gdb_5_2-branch:1.29.0.2
	gdb_5_2-2002-03-03-branchpoint:1.29
	gdb_5_1_1-2002-01-24-release:1.20
	gdb_5_1_0_1-2002-01-03-release:1.20
	cygnus_cvs_20020108_pre:1.27
	gdb_5_1_0_1-2002-01-03-branchpoint:1.20
	gdb_5_1_0_1-2002-01-03-branch:1.20.0.6
	gdb_5_1-2001-11-21-release:1.20
	gdb_s390-2001-09-26-branch:1.20.0.4
	gdb_s390-2001-09-26-branchpoint:1.20
	gdb_5_1-2001-07-29-branch:1.20.0.2
	gdb_5_1-2001-07-29-branchpoint:1.20
	dberlin-typesystem-branch:1.19.0.2
	dberlin-typesystem-branchpoint:1.19
	gdb-post-ptid_t-2001-05-03:1.17
	gdb-pre-ptid_t-2001-05-03:1.17
	insight-precleanup-2001-01-01:1.9
	gdb-post-protoization-2000-07-29:1.8
	gdb-pre-protoization-2000-07-29:1.8
	gdb-premipsmulti-2000-06-06-branch:1.6.0.2
	gdb-premipsmulti-2000-06-06-branchpoint:1.6
	gdb-post-params-removal-2000-06-04:1.6
	gdb-pre-params-removal-2000-06-04:1.6
	gdb-post-params-removal-2000-05-28:1.6
	gdb-pre-params-removal-2000-05-28:1.5
	gdb_5_0-2000-05-19-release:1.4
	gdb_4_18_2-2000-05-18-release:1.4
	gdb_4_95_1-2000-05-11-snapshot:1.4
	gdb_4_95_0-2000-04-27-snapshot:1.4
	gdb_5_0-2000-04-10-branch:1.4.0.2
	gdb_5_0-2000-04-10-branchpoint:1.4
	repo-unification-2000-02-06:1.1.1.11
	insight-2000-02-04:1.1.1.11
	gdb-2000-02-04:1.1.1.11
	gdb-2000-02-02:1.1.1.11
	gdb-2000-02-01:1.1.1.11
	gdb-2000-01-31:1.1.1.11
	gdb-2000-01-26:1.1.1.11
	gdb-2000-01-24:1.1.1.11
	gdb-2000-01-17:1.1.1.11
	gdb-2000-01-10:1.1.1.11
	gdb-2000-01-05:1.1.1.11
	gdb-1999-12-21:1.1.1.11
	gdb-1999-12-13:1.1.1.11
	gdb-1999-12-07:1.1.1.11
	gdb-1999-12-06:1.1.1.10
	gdb-1999-11-16:1.1.1.10
	gdb-1999-11-08:1.1.1.9
	gdb-1999-11-01:1.1.1.9
	gdb-1999-10-25:1.1.1.9
	gdb-1999-10-18:1.1.1.8
	gdb-1999-10-11:1.1.1.7
	gdb-1999-10-04:1.1.1.6
	gdb-1999-09-28:1.1.1.6
	gdb-1999-09-21:1.1.1.6
	gdb-1999-09-13:1.1.1.6
	gdb-1999-09-08:1.1.1.6
	gdb-1999-08-30:1.1.1.6
	gdb-1999-08-23:1.1.1.5
	gdb-1999-08-16:1.1.1.5
	gdb-1999-08-09:1.1.1.5
	gdb-1999-08-02:1.1.1.5
	gdb-1999-07-26:1.1.1.5
	gdb-1999-07-19:1.1.1.5
	gdb-1999-07-12:1.1.1.5
	gdb-post-reformat-19990707:1.1.1.5
	gdb-1999-07-07-post-reformat-snapshot:1.1.1.5
	gdb-pre-reformat-19990707:1.1.1.4
	gdb-1999-07-07:1.1.1.4
	gdb-1999-07-05:1.1.1.4
	gdb-1999-06-28:1.1.1.4
	gdb-1999-06-21:1.1.1.4
	gdb-1999-06-14:1.1.1.4
	gdb-1999-06-07:1.1.1.4
	gdb-1999-06-01:1.1.1.4
	gdb-4_18-branch:1.1.1.1.0.2
	gdb-4_18-release:1.1.1.1
	gdb-1999-05-25:1.1.1.4
	gdb-1999-05-19:1.1.1.3
	gdb-1999-05-10:1.1.1.3
	gdb-19990504:1.1.1.3
	gdb-19990422:1.1.1.2
	SNAPSHOT:1.1.1
	gdb-4_18:1.1.1.1
	GDB_4_18:1.1.1;
locks; strict;
comment	@ * @;
expand	@o@;


1.48
date	2004.04.06.01.53.51;	author cagney;	state dead;
branches;
next	1.47;

1.47
date	2003.09.03.15.02.49;	author cagney;	state Exp;
branches
	1.47.10.1;
next	1.46;

1.46
date	2003.06.15.00.27.54;	author cagney;	state Exp;
branches;
next	1.45;

1.45
date	2002.08.15.19.00.47;	author kettenis;	state Exp;
branches
	1.45.8.1
	1.45.10.1;
next	1.44;

1.44
date	2002.08.15.18.35.11;	author kettenis;	state Exp;
branches;
next	1.43;

1.43
date	2002.08.15.17.36.57;	author kettenis;	state Exp;
branches;
next	1.42;

1.42
date	2002.06.30.18.55.19;	author kettenis;	state Exp;
branches;
next	1.41;

1.41
date	2002.06.16.15.32.09;	author kettenis;	state Exp;
branches;
next	1.40;

1.40
date	2002.06.15.22.10.58;	author kettenis;	state Exp;
branches;
next	1.39;

1.39
date	2002.06.15.21.15.43;	author kettenis;	state Exp;
branches;
next	1.38;

1.38
date	2002.06.15.20.41.51;	author kettenis;	state Exp;
branches;
next	1.37;

1.37
date	2002.06.15.19.59.08;	author kettenis;	state Exp;
branches;
next	1.36;

1.36
date	2002.06.15.18.09.31;	author kettenis;	state Exp;
branches;
next	1.35;

1.35
date	2002.06.15.17.41.29;	author kettenis;	state Exp;
branches;
next	1.34;

1.34
date	2002.06.15.12.59.09;	author kettenis;	state Exp;
branches;
next	1.33;

1.33
date	2002.06.14.22.55.45;	author cagney;	state Exp;
branches;
next	1.32;

1.32
date	2002.06.14.21.28.07;	author kettenis;	state Exp;
branches;
next	1.31;

1.31
date	2002.06.14.21.17.28;	author kettenis;	state Exp;
branches;
next	1.30;

1.30
date	2002.06.14.19.42.20;	author kettenis;	state Exp;
branches;
next	1.29;

1.29
date	2002.01.29.04.42.37;	author cagney;	state Exp;
branches
	1.29.6.1
	1.29.8.1;
next	1.28;

1.28
date	2002.01.20.18.05.53;	author cagney;	state Exp;
branches;
next	1.27;

1.27
date	2001.12.27.15.22.27;	author kettenis;	state Exp;
branches;
next	1.26;

1.26
date	2001.12.15.16.53.23;	author cagney;	state Exp;
branches;
next	1.25;

1.25
date	2001.11.18.22.14.13;	author cagney;	state Exp;
branches;
next	1.24;

1.24
date	2001.11.12.22.27.35;	author kettenis;	state Exp;
branches;
next	1.23;

1.23
date	2001.11.08.18.32.08;	author cagney;	state Exp;
branches;
next	1.22;

1.22
date	2001.11.04.13.51.48;	author kettenis;	state Exp;
branches;
next	1.21;

1.21
date	2001.10.31.22.24.06;	author kettenis;	state Exp;
branches;
next	1.20;

1.20
date	2001.07.28.19.30.41;	author kettenis;	state Exp;
branches;
next	1.19;

1.19
date	2001.05.09.16.16.33;	author kettenis;	state Exp;
branches;
next	1.18;

1.18
date	2001.05.09.09.58.45;	author kettenis;	state Exp;
branches;
next	1.17;

1.17
date	2001.04.19.11.39.48;	author kettenis;	state Exp;
branches;
next	1.16;

1.16
date	2001.04.17.23.20.55;	author kettenis;	state Exp;
branches;
next	1.15;

1.15
date	2001.04.16.13.03.15;	author kettenis;	state Exp;
branches;
next	1.14;

1.14
date	2001.04.01.12.39.52;	author kettenis;	state Exp;
branches;
next	1.13;

1.13
date	2001.03.26.12.11.14;	author kettenis;	state Exp;
branches;
next	1.12;

1.12
date	2001.03.14.23.23.11;	author cagney;	state Exp;
branches;
next	1.11;

1.11
date	2001.03.06.08.21.28;	author kevinb;	state Exp;
branches;
next	1.10;

1.10
date	2001.01.04.15.46.21;	author nsd;	state Exp;
branches;
next	1.9;

1.9
date	2000.12.21.20.52.59;	author kettenis;	state Exp;
branches;
next	1.8;

1.8
date	2000.07.21.20.52.27;	author msnyder;	state Exp;
branches;
next	1.7;

1.7
date	2000.06.12.01.44.35;	author kettenis;	state Exp;
branches;
next	1.6;

1.6
date	2000.05.28.01.12.35;	author kevinb;	state Exp;
branches;
next	1.5;

1.5
date	2000.04.14.19.13.07;	author jimb;	state Exp;
branches;
next	1.4;

1.4
date	2000.03.26.22.10.59;	author kettenis;	state Exp;
branches;
next	1.3;

1.3
date	2000.03.26.21.21.50;	author kettenis;	state Exp;
branches;
next	1.2;

1.2
date	2000.02.29.13.28.24;	author cagney;	state Exp;
branches;
next	1.1;

1.1
date	99.04.16.01.34.19;	author shebs;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.04.16.01.34.19;	author shebs;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	99.04.26.18.26.21;	author shebs;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	99.05.05.14.43.27;	author shebs;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	99.05.25.18.04.36;	author jsm;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	99.07.07.20.13.02;	author jsm;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	99.08.31.01.07.07;	author jsm;	state Exp;
branches;
next	1.1.1.7;

1.1.1.7
date	99.10.12.04.37.28;	author jsm;	state Exp;
branches;
next	1.1.1.8;

1.1.1.8
date	99.10.19.02.46.43;	author jsm;	state Exp;
branches;
next	1.1.1.9;

1.1.1.9
date	99.10.26.03.43.18;	author jsm;	state Exp;
branches;
next	1.1.1.10;

1.1.1.10
date	99.11.17.02.30.33;	author jsm;	state Exp;
branches;
next	1.1.1.11;

1.1.1.11
date	99.12.08.02.50.45;	author jsm;	state Exp;
branches;
next	;

1.29.6.1
date	2002.06.15.16.43.05;	author cagney;	state Exp;
branches;
next	1.29.6.2;

1.29.6.2
date	2002.06.21.16.19.44;	author cagney;	state Exp;
branches;
next	;

1.29.8.1
date	2002.06.20.01.34.32;	author kseitz;	state Exp;
branches;
next	1.29.8.2;

1.29.8.2
date	2002.07.22.21.47.07;	author kseitz;	state Exp;
branches;
next	1.29.8.3;

1.29.8.3
date	2002.08.30.22.52.47;	author kseitz;	state Exp;
branches;
next	;

1.45.8.1
date	2003.06.27.21.50.15;	author carlton;	state Exp;
branches;
next	1.45.8.2;

1.45.8.2
date	2003.09.17.21.28.39;	author carlton;	state Exp;
branches;
next	;

1.45.10.1
date	2003.12.14.20.27.36;	author drow;	state Exp;
branches;
next	;

1.47.10.1
date	2004.09.16.17.01.29;	author drow;	state dead;
branches;
next	;


desc
@@


1.48
log
@2004-04-05  Andrew Cagney  <cagney@@redhat.com>

	* config/i386/tm-i386.h: Delete file.
	* config/i386/tm-vxworks.h: Update copyright, do not include
	"tm-i386.h".
	* config/i386/tm-nto.h, config/i386/tm-linux.h: Ditto.
	* config/i386/tm-i386sol2.h, config/i386/tm-i386lynx.h: Ditto.
	* config/i386/tm-go32.h, config/i386/tm-cygwin.h: Ditto.
	* config/i386/ncr3000.mt (TM_FILE): Delete.
	* config/i386/interix.mt (TM_FILE): Delete.
	* config/i386/i386v.mt (TM_FILE): Delete.
	* config/i386/i386nw.mt (TM_FILE): Delete.
	* config/i386/i386gnu.mt (TM_FILE): Delete.
	* config/i386/i386aout.mt (TM_FILE): Delete.
	* config/i386/embed.mt (TM_FILE): Delete.
@
text
@/* Macro definitions for GDB on an Intel i[345]86.
   Copyright 1995, 1996, 1998, 1999, 2000, 2001
   Free Software Foundation, Inc.

   This file is part of GDB.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place - Suite 330,
   Boston, MA 02111-1307, USA.  */

#ifndef TM_I386_H
#define TM_I386_H 1

#endif /* ifndef TM_I386_H */
@


1.47
log
@2003-09-03  Andrew Cagney  <cagney@@redhat.com>

	* defs.h: Do not include "arch-utils.h".
	(GDB_MULTI_ARCH): If not defined, set to GDB_MULTI_ARCH_PARTIAL or
	GDB_MULTI_ARCH_PURE.
	* configure.in (GDB_MULTI_ARCH): Do not define.
	* configure, config.in: Regenerate.
	* configure.tgt: Do not set variable "gdb_multi_arch".
	* config/s390/s390x.mt (GDB_MULTI_ARCH): Delete.
	* config/s390/s390.mt (GDB_MULTI_ARCH): Delete.
	* config/i386/x86-64linux.mt (GDB_MULTI_ARCH): Delete.
	* config/v850/v850.mt (TM_FILE): Delete disabled definition.
	* config/m68hc11/m68hc11.mt (TM_FILE): Delete definition.
	* config/vax/tm-vax.h (GDB_MULTI_ARCH): Delete definition.
	* config/sparc/tm-sparc.h (GDB_MULTI_ARCH): Delete definition.
	* config/sparc/tm-sun4sol2.h (GDB_MULTI_ARCH): Delete definition.
	* config/sparc/tm-nbsd.h (GDB_MULTI_ARCH): Delete definition.
	* config/sparc/tm-linux.h (GDB_MULTI_ARCH): Delete definition.
	* config/sparc/tm-sp64.h (GDB_MULTI_ARCH): Delete definition.
	* config/pa/tm-hppa64.h (GDB_MULTI_ARCH): Delete definition.
	* config/ns32k/tm-ns32k.h (GDB_MULTI_ARCH): Delete definition.
	* config/m68k/tm-m68k.h (GDB_MULTI_ARCH): Delete definition.
	* config/i386/tm-i386.h (GDB_MULTI_ARCH): Delete definition.
	* config/h8300/tm-h8300.h (GDB_MULTI_ARCH): Delete definition.
	* config/frv/tm-frv.h (GDB_MULTI_ARCH): Delete definition.
	* config/alpha/tm-alpha.h (GDB_MULTI_ARCH): Delete definition.
@
text
@@


1.47.10.1
log
@Merge mainline to intercu branch - 2004-09-15
@
text
@@


1.46
log
@2003-06-14  Andrew Cagney  <cagney@@redhat.com>

	* mips-tdep.c (mips_register_to_value): Make static.
	(mips_value_to_register): Make static.
	* i386-tdep.c (i386_fetch_pointer_argument): Make static.
	* ia64-tdep.c (ia64_register_raw_size): Make static.
	(ia64_register_virtual_size): Make static.
	(ia64_register_byte): Make static.
	* i387-tdep.c: Include "i387-tdep.h".
	(print_387_control_word): Delete function.
	(print_387_status_word): Delete function.
	(print_387_status_bits): Delete function.
	(print_387_control_bits): Delete function.
	* Makefile.in (i387-tdep.o): Update dependencies.
	* rdi-share/host.h (Fail): Declare.
	* remote-rdi.c (Fail): Update to match declaration.
@
text
@a24 2
#define GDB_MULTI_ARCH GDB_MULTI_ARCH_PARTIAL

@


1.45
log
@* uw-thread.c (SP_ARG0): Define if not already defined.
* config/i386/tm-i386.h (SO_ARG0): Remove define.
@
text
@a26 4
/* FIXME: kettenis/2000-06-12: These do not belong here.  */
extern void print_387_control_word (unsigned int);
extern void print_387_status_word (unsigned int);

@


1.45.10.1
log
@Merge drow-cplus-branch to:
  cvs rtag -D 2003-12-14 00:00:00 UTC drow-cplus-merge-20031214 gdb+dejagnu
@
text
@d25 6
@


1.45.8.1
log
@2003-06-27  David Carlton  <carlton@@kealia.com>

	* Merge with mainline; tag is carlton_dictionary-20030627-merge.
@
text
@d27 4
@


1.45.8.2
log
@2003-09-17  David Carlton  <carlton@@kealia.com>

	* Merge with mainline; tag is carlton_dictionary-20030917-merge.
@
text
@d25 2
@


1.44
log
@* config/i386/tm-i386.h: Don't include "regcache.h".
@
text
@a30 4
/* Offset from SP to first arg on stack at first instruction of a function */

#define SP_ARG0 (1 * 4)

@


1.43
log
@* i387-tdep.h (i387_print_float_info): New prototype.
* i387-tdep.c (print_i387_value, print_i387_ext,
print_i387_status_word, print_i387_control_word): Add `struct
ui_file *' argument and use it for output.
(i387_print_float_info): Renamed from i387_float_info.  Add
`struct gdbarch *' and `struct ui_file *' arguments and use the
latter for output.
* i386-tdep.c: Include "i387-tdep.h".
(i386_gdbarch_init): Set print_float_info.
* config/i386/tm-i386.h (i387_float_info): Remove prototype.
(FLOAT_INFO): Remove define.
@
text
@a26 2
#include "regcache.h"

@


1.42
log
@* config/i386/tm-i386.h (struct frame_info, struct
frame_saved_regs, struct value, struct type): Remove forward
declarations.
@
text
@a28 5
/* Print out the i387 floating point state.  */
extern void i387_float_info (void);
#define FLOAT_INFO { i387_float_info (); }


@


1.41
log
@* config/i386/tm-i386.h (REGISTER_VIRTUAL_TYPE,
REGISTER_CONVERTIBLE, REGISTER_CONVERT_TO_VIRTUAL,
REGISTER_CONVERT_TO_RAW): Remove defines.
(i386_register_virtual_type, i386_register_convertible,
i386_register_convert_to_virtual, i386_register_convert_to_raw):
Remove prototypes.
* i386-tdep.c (i386_gdbarch_init): Adjust for removal of the
macros mentioned above.
@
text
@a28 6
/* Forward declarations for prototypes.  */
struct frame_info;
struct frame_saved_regs;
struct value;
struct type;

@


1.40
log
@* config/i386/tm-i386.h (PARM_BOUNDARY, CALL_DUMMY,
CALL_DUMMY_LENGTH, CALL_DUMMY_START_OFFSET,
CALL_DUMMY_BREAKPOINT_OFFSET, FIX_CALL_DUMMY): Remove defines.
(i386_fix_call_dummy): Remove prototype.
* i386-tdep.c (i386_call_dummy_words): New variable.
(i386_gdbarch_init): Adjust for removal of the
macros mentioned above.
@
text
@a34 28
/* Return the GDB type object for the "standard" data type of data in
   register REGNUM.  */

#define REGISTER_VIRTUAL_TYPE(regnum) i386_register_virtual_type (regnum)
extern struct type *i386_register_virtual_type (int regnum);

/* Return true iff register REGNUM's virtual format is different from
   its raw format.  */

#define REGISTER_CONVERTIBLE(regnum) i386_register_convertible (regnum)
extern int i386_register_convertible (int regnum);

/* Convert data from raw format for register REGNUM in buffer FROM to
   virtual format with type TYPE in buffer TO.  */

#define REGISTER_CONVERT_TO_VIRTUAL(regnum, type, from, to) \
  i386_register_convert_to_virtual ((regnum), (type), (from), (to))
extern void i386_register_convert_to_virtual (int regnum, struct type *type,
					      char *from, char *to);

/* Convert data from virtual format with type TYPE in buffer FROM to
   raw format for register REGNUM in buffer TO.  */

#define REGISTER_CONVERT_TO_RAW(type, regnum, from, to) \
  i386_register_convert_to_raw ((type), (regnum), (from), (to))
extern void i386_register_convert_to_raw (struct type *type, int regnum,
					  char *from, char *to);

@


1.39
log
@* config/i386/tm-i386.h (PUSH_ARGUMENTS, STORE_STRUCT_RETURN,
DEPRECATED_EXTRACT_RETURN_VALUE, STORE_RETURN_VALUE,
DEPRECATED_EXTRACT_STRUCT_VALUE_ADDRESS, PUSH_DUMMY_FRAME,
POP_FRAME): Remove defines.
(i386_push_arguments, i386_store_struct_return,
i386_extract_return_value, i386_store_return_value,
i386_extract_struct_value_address, i386_push_dummy_frame,
i386_pop_frame): Renove prototypes.
* i386-tdep.c (i386_gdbarch_init): Adjust for removal of the
macros mentioned above.
@
text
@a67 30
/* Things needed for making the inferior call functions.  */

/* "An argument's size is increased, if necessary, to make it a
   multiple of [32 bit] words.  This may require tail padding,
   depending on the size of the argument" - from the x86 ABI.  */
#define PARM_BOUNDARY 32


/* this is 
 *   call 11223344 (32 bit relative)
 *   int3
 */

#define CALL_DUMMY { 0x223344e8, 0xcc11 }

#define CALL_DUMMY_LENGTH 8

#define CALL_DUMMY_START_OFFSET 0	/* Start execution at beginning of dummy */

#define CALL_DUMMY_BREAKPOINT_OFFSET 5

/* Insert the specified number of args and function address
   into a call sequence of the above form stored at DUMMYNAME.  */

#define FIX_CALL_DUMMY(dummyname, pc, fun, nargs, args, type, gcc_p) \
  i386_fix_call_dummy (dummyname, pc, fun, nargs, args, type, gcc_p)
extern void i386_fix_call_dummy (char *dummy, CORE_ADDR pc, CORE_ADDR fun,
				 int nargs, struct value **args,
				 struct type *type, int gcc_p);

@


1.38
log
@* config/i386/tm-i386.h (FUNCTION_START_OFFSET, INNER_THAN,
BREAKPOINT, DECR_PC_AFTER_BREAK): Removed.
* i386-tdep.c (i386_skip_prologue): Adjust function signature to
fit into multi-arch framework.
(i386_breakpoint_from_pc): New function.
(i386_gdbarch_init): Adjust for removal of the macros mentioned
above.
@
text
@a67 38
#define PUSH_ARGUMENTS(nargs, args, sp, struct_return, struct_addr) \
  i386_push_arguments ((nargs), (args), (sp), (struct_return), (struct_addr))
extern CORE_ADDR i386_push_arguments (int nargs, struct value **args,
				      CORE_ADDR sp, int struct_return,
				      CORE_ADDR struct_addr);

/* Store the address of the place in which to copy the structure the
   subroutine will return.  This is called from call_function.  */

#define STORE_STRUCT_RETURN(addr, sp) \
  i386_store_struct_return ((addr), (sp))
extern void i386_store_struct_return (CORE_ADDR addr, CORE_ADDR sp);

/* Extract from an array REGBUF containing the (raw) register state
   a function return value of type TYPE, and copy that, in virtual format,
   into VALBUF.  */

#define DEPRECATED_EXTRACT_RETURN_VALUE(type, regbuf, valbuf) \
  i386_extract_return_value ((type), (regbuf), (valbuf))
extern void i386_extract_return_value (struct type *type, char *regbuf,
				       char *valbuf);

/* Write into the appropriate registers a function return value stored
   in VALBUF of type TYPE, given in virtual format.  */

#define STORE_RETURN_VALUE(type, valbuf) \
  i386_store_return_value ((type), (valbuf))
extern void i386_store_return_value (struct type *type, char *valbuf);

/* Extract from an array REGBUF containing the (raw) register state
   the address in which a function should return its structure value,
   as a CORE_ADDR.  */

#define DEPRECATED_EXTRACT_STRUCT_VALUE_ADDRESS(regbuf) \
  i386_extract_struct_value_address ((regbuf))
extern CORE_ADDR i386_extract_struct_value_address (char *regbuf);


a73 12

/* Push an empty stack frame, to record the current PC, etc.  */

#define PUSH_DUMMY_FRAME { i386_push_dummy_frame (); }

extern void i386_push_dummy_frame (void);

/* Discard from the stack the innermost frame, restoring all registers.  */

#define POP_FRAME  { i386_pop_frame (); }

extern void i386_pop_frame (void);
@


1.37
log
@* config/i386/tm-i386.h (FRAMELESS_FUNCTION_INVOCATION,
FRAME_ARGS_ADDRESS, FRAME_LOCALS_ADDRESS, FRAME_NUM_ARGS,
FRAME_ARGS_SKIP, FRAME_INIT_SAVED_REGS): Remove defines.
(i386_frameless_function_invocation, i386_frame_num_args,
i386_frame_init_saved_regs): Remove prototypes.
* i386-tdep.c (i386_gdbarch_init): Adjust for removal of the
macros mentioned above.
@
text
@a34 26
/* Offset from address of function to start of its code.
   Zero on most machines.  */

#define FUNCTION_START_OFFSET 0

/* Advance PC across any function entry prologue instructions to reach some
   "real" code.  */

#define SKIP_PROLOGUE(frompc)   (i386_skip_prologue (frompc))

extern int i386_skip_prologue (int);

/* Stack grows downward.  */

#define INNER_THAN(lhs,rhs) ((lhs) < (rhs))

/* Sequence of bytes for breakpoint instruction.  */

#define BREAKPOINT {0xcc}

/* Amount PC must be decremented by after a breakpoint.  This is often the
   number of bytes in BREAKPOINT but not always. */

#define DECR_PC_AFTER_BREAK 1


@


1.36
log
@* config/i386/tm-cygwin.h, config/i386/tm-fbsd.h,
config/i386/tm-go32.h, config/i386/tm-i386gnu.h,
config/i386/tm-i386sol2.h, config/i386/tm-i386v4.h,
config/i386/tm-linux.h, config/i386/tm-nbsd.h,
config/i386/tm-obsd.h (HAVE_I387_REGS): Remove define.
* config/i386/tm-i386.h: Unconditionally define FLOAT_INFO.
@
text
@a129 33

/* Determine whether the function invocation represented by FRAME does
   not have a from on the stack associated with it.  If it does not,
   return non-zero, otherwise return zero.  */

#define FRAMELESS_FUNCTION_INVOCATION(frame) \
  i386_frameless_function_invocation (frame)
extern int i386_frameless_function_invocation (struct frame_info *frame);

#define FRAME_ARGS_ADDRESS(fi) ((fi)->frame)

#define FRAME_LOCALS_ADDRESS(fi) ((fi)->frame)

/* Return number of args passed to a frame.  Can return -1, meaning no way
   to tell, which is typical now that the C compiler delays popping them.  */

#define FRAME_NUM_ARGS(fi) (i386_frame_num_args(fi))

extern int i386_frame_num_args (struct frame_info *);

/* Return number of bytes at start of arglist that are not really args.  */

#define FRAME_ARGS_SKIP 8

/* Put here the code to store, into a struct frame_saved_regs,
   the addresses of the saved registers of frame described by FRAME_INFO.
   This includes special registers such as pc and fp saved in special
   ways in the stack frame.  sp is even more special:
   the address we return for it IS the sp for the next frame.  */

extern void i386_frame_init_saved_regs (struct frame_info *);
#define FRAME_INIT_SAVED_REGS(FI) i386_frame_init_saved_regs (FI)

@


1.35
log
@* config/i386/tm-i386.h (REGISTER_SIZE): Remove define.
(NUM_GREGS, NUM_FREGS, NUM_SSE_REGS): Remove defines.
(FP_REGNUM, SP_REGNUM, PC_REGNUM, PS_REGNUM): Remove defines.
(FP0_REGNUM): Remove define.
(MAX_REGISTER_RAW_SIZE, MAX_REGISTER_VIRTUAL_SIZE,
MAX_REGISTER_VIRTUAL_SIZE): Remove define.
(i386_register_virtual_size): Remove protoype.
* i386-tdep.c (i386_register_virtual_size): Removed.
(i386_extract_return_value, i386_store_return_value): Use
FP0_REGNUM instead of NUM_FREGS to determine whether the
floating-point registers are available.
(i386_gdbarch_init): Tweak FIXME about FPU registers.
Adjust for removal of macros mentioned above.


* i386-tdep.c (i386_gdbarch_init): Tewak
@
text
@a89 1
#ifdef HAVE_I387_REGS
a91 1
#endif
@


1.34
log
@* config/i386/tm-i386.h (MAX_NUM_REGS): Removed.
* i386-tdep.c (i386_register_offset, i386_register_size): Use
I386_SSE_NUM_REGS instead of MAX_NUM_REGS for the number of
elements in these arrays.
(_initialize_i386_tdep): Use I386_SSE_NUM_REGS instead of
MAX_NUM_REGS.
@
text
@a58 56

/* Say how long (ordinary) registers are.  This is a piece of bogosity
   used in push_word and a few other places; REGISTER_RAW_SIZE is the
   real way to know how big a register is.  */

#define REGISTER_SIZE 4

/* This register file is parameterized by two macros:
   HAVE_I387_REGS --- register file should include i387 registers
   HAVE_SSE_REGS  --- register file should include SSE registers
   If HAVE_SSE_REGS is #defined, then HAVE_I387_REGS must also be #defined.
   
   However, GDB code should not test those macros with #ifdef, since
   that makes code which is annoying to multi-arch.  Instead, GDB code
   should check the values of NUM_GREGS, NUM_FREGS, and NUM_SSE_REGS,
   which will eventually get mapped onto architecture vector entries.

   It's okay to use the macros in tm-*.h files, though, since those
   files will get completely replaced when we multi-arch anyway.  */

/* Number of general registers, present on every 32-bit x86 variant.  */
#define NUM_GREGS (16)

/* Number of floating-point unit registers.  */
#ifdef HAVE_I387_REGS
#define NUM_FREGS (16)
#else
#define NUM_FREGS (0)
#endif

/* Number of SSE registers.  */
#ifdef HAVE_SSE_REGS
#define NUM_SSE_REGS (9)
#else
#define NUM_SSE_REGS (0)
#endif

/* Register numbers of various important registers.
   Note that some of these values are "real" register numbers,
   and correspond to the general registers of the machine,
   and some are "phony" register numbers which are too large
   to be actual register numbers as far as the user is concerned
   but do serve to get the desired values when passed to read_register.  */

#define FP_REGNUM 5		/* (ebp) Contains address of executing stack
				   frame */
#define SP_REGNUM 4		/* (usp) Contains address of top of stack */
#define PC_REGNUM 8		/* (eip) Contains program counter */
#define PS_REGNUM 9		/* (ps)  Contains processor status */

/* First FPU data register.  */
#ifdef HAVE_I387_REGS
#define FP0_REGNUM 16
#else
#define FP0_REGNUM 0
#endif
a59 10

/* Largest value REGISTER_RAW_SIZE can have.  */
#define MAX_REGISTER_RAW_SIZE 16

/* Return the size in bytes of the virtual type of register REG.  */
#define REGISTER_VIRTUAL_SIZE(reg) i386_register_virtual_size ((reg))
extern int i386_register_virtual_size (int reg);

/* Largest value REGISTER_VIRTUAL_SIZE can have.  */
#define MAX_REGISTER_VIRTUAL_SIZE 16
@


1.33
log
@+	* gdbarch.sh (DEPRECATED_EXTRACT_RETURN_VALUE): Rename
+	EXTRACT_RETURN_VALUE.
+	(DEPRECATED_EXTRACT_STRUCT_VALUE_ADDRESS): Rename
+	EXTRACT_STRUCT_VALUE_ADDRESS.
+	* gdbarch.h, gdbarch.c: Regenerate.
+
+	* values.c (value_being_returned): Handle
+	DEPRECATED_EXTRACT_STRUCT_VALUE_ADDRESS.
+	(EXTRACT_RETURN_VALUE): Define as DEPRECATED_EXTRACT_RETURN_VALUE.
+
+	* arm-linux-tdep.c (arm_linux_init_abi): Update.
+	* arm-tdep.c (arm_gdbarch_init): Update.
+	* avr-tdep.c (avr_gdbarch_init): Update.
+	* cris-tdep.c (cris_gdbarch_init): Update.
+	* d10v-tdep.c (d10v_gdbarch_init): Update.
+	* ia64-tdep.c (ia64_gdbarch_init): Update.
+	* m68hc11-tdep.c (m68hc11_gdbarch_init): Update.
+	* rs6000-tdep.c (rs6000_gdbarch_init): Update.
+	* s390-tdep.c (s390_gdbarch_init): Update.
+	* sh-tdep.c (sh_gdbarch_init): Update.
+	* s390-tdep.c (s390_gdbarch_init): Update.
+	* sparc-tdep.c (sparc_gdbarch_init): Update.
+	* ns32k-tdep.c (ns32k_gdbarch_init): Update.
+	* v850-tdep.c (v850_gdbarch_init): Update.
+	* vax-tdep.c (vax_gdbarch_init): Update.
+	* x86-64-tdep.c (x86_64_gdbarch_init): Update.
+	* xstormy16-tdep.c (xstormy16_gdbarch_init): Update.
+
+	* config/arc/tm-arc.h: Update.
+	* config/d30v/tm-d30v.h: Update.
+	* config/fr30/tm-fr30.h: Update.
+	* config/h8300/tm-h8300.h: Update.
* config/h8500/tm-h8500.h: Update.
* config/i386/tm-i386.h: Update.
* config/i386/tm-ptx.h: Update.
* config/i386/tm-symmetry.h: Update.
* config/i960/tm-i960.h: Update.
* config/m32r/tm-m32r.h: Update.
* config/m68k/tm-delta68.h: Update.
* config/m68k/tm-linux.h: Update.
* config/m68k/tm-m68k.h: Update.
* config/m88k/tm-m88k.h: Update.
* config/mcore/tm-mcore.h: Update.
* config/mips/tm-mips.h: Update.
* config/mn10200/tm-mn10200.h: Update.
* config/pa/tm-hppa.h: Update.
* config/pa/tm-hppa64.h: Update.
* config/sparc/tm-sp64.h: Update.
* config/sparc/tm-sparc.h: Update.
* config/sparc/tm-sparclet.h: Update.
* config/z8k/tm-z8k.h: Update.
@
text
@a95 3
/* Largest number of registers we could have in any configuration.  */
#define MAX_NUM_REGS (16 + 16 + 9 + 1)

@


1.32
log
@* config/i386/tm-i386.h (START_INFERIOR_TRAPS_EXPECTED): Removed.
Already covered by the default.
@
text
@d182 1
a182 1
#define EXTRACT_RETURN_VALUE(type, regbuf, valbuf) \
d198 1
a198 1
#define EXTRACT_STRUCT_VALUE_ADDRESS(regbuf) \
@


1.31
log
@* config/i386/tm-i386.h (TARGET_LONG_DOUBLE_FORMAT,
TARGET_LONG_DOUBLE_BIT): Remove.  * i386-tdep.c
(i386_gdbarch_init): Initialize long_double_format and long_double
bit.
@
text
@a34 6
/* Number of traps that happen between exec'ing the shell to run an
   inferior, and when we finally get to the inferior code.  This is 2
   on most implementations. */

#define START_INFERIOR_TRAPS_EXPECTED 2

@


1.30
log
@* config/i386/i386sol2.mt (TDEPFILES): Add i386-sol2-tdep.o and
i386bsd-tdep.o.  Remove solib.o, solib-svr4.o and solib-legacy.o.
Move these to ...
* config/i386/i386sol2.mh: ... here.
* config/i386/tm-i386sol2.h (STAB_REG_TO_REGNUM): Remove define.
(sigtramp_saved_pc, I386V4_SIGTRAMP_SAVED_PC): Don't #undef.
(SIGCONTEXT_PC_OFFSET): Remove define.
(IN_SIGTRAMP): Remove define.
* i386-sol2-tdep.c: New file.

* config/i386/i386nw.mt (TM_FILE): Change to tm-i386.h.
* config/i386/tm-i386nw.h: Removed.

* config/i386/tm-fbsd.h (STAB_REG_TO_REGNUM,
USE_STRUCT_CONVENTION): Remove defines.
(JB_ELEMENT_SIZE, JB_PC, GET_LONGJMP_TARGET): Remove defines.
(get_longjmp_target): Remove prototype.
(IN_SIGTRAMP): Remove define.
(i386bsd_in_sigtramp): Remove prototype.
(i386bsd_sigtramp_start, i386bsd_sigtramp_end): Turn into a
function.  Update comment accordingly
(SIGTRAMP_START, SIGTRAMP): Adjust definition accordingly.
(FRAME_SAVED_PC): Remove define.
(i386bsd_frame_saved_pc): Remove prototype.
* config/i386/tm-nbsd.h (JB_ELEMENT_SIZE, JB_PC,
GET_LONGJMP_TARGET): Remove defines.
(get_longjmp_target): Remove prototype.
(IN_SIGTRAMP): Remove define.
(i386bsd_in_sigtramp): Remove prototype.
(i386bsd_sigtramp_start, i386bsd_sigtramp_end): Turn into a
function.  Update comment accordingly
(SIGTRAMP_START, SIGTRAMP): Adjust definition accordingly.
(FRAME_SAVED_PC): Remove define.
(i386bsd_frame_saved_pc): Remove prototype.
* config/i386/tm-nbsdaout.h (i386nbsd_aout_use_struct_convention):
Remove prototype.
(USE_STRUCT_CONVENTION): Remove prototype.
* i386bsd-nat.c (i386bsd_sigcontext_pc_offset): Remove
declaration.
(_initialize_i386bsd_nat): Revise logic to determine some
constants at compile time when compiling a native GDB.  Warn if
things don't match up with what we expect.
* i386bsd-tdep.c (i386bsd_sigtramp_start, i386bsd_sigtramp_end):
Remove variables.
(i386bsd_in_sigtramp): Rename tp i386bsd_pc_in_sigtramp.  Rewrite
to use date stored in `struct gdbarch_tdep'.
(i386bsd_sigcontext_offset): Remove varaible.
(i386bsd_sigtramp_saved_pc): Make public.  Rewrite to use data
stored in `struct gdbarch_tdep'.
(i386bsd_frame_saved_pc): Make static.
(i386bsd_sigtramp_start, i386bsd_sigtramp_end): New functions.
(i386bsd_sc_pc_offset, i386nbsd_sc_pc_offset,
i386fbsd_sigtramp_start, i386fbsd_sigtramp_end,
i386fbsd4_sc_pc_offset): New variables.
(i386bsd_init_abi, i386nbsd_init_abi, i386nbsdelf_init_abi,
i386fbsdaout_init_abi, i386fbsd_init_abi, i386fbsd4_init_abi): New
functions.
(i386bsd_aout_osabi_sniffer, _initialize_i386bsd_tdep): New
functions.
* i386fbsd-nat.c (_initialize_i386fbsd_nat): Fix type in comment.
Modify the value of i386fbsd_sigtramp_start and
i386fbsd_sigtramp_end instead of i386bsd_sigtramp_start and
i386fbsd_sigtramp_end.
* i386nbsd-tdep.c: (i386nbsd_aout_use_struct_convention): Remove
function.

* config/i386/tm-linux.h (I386_LINUX_ORIG_EAX_REGNUM): Move
define to i386-linux-tdep.h.
(NUM_REGS, MAX_NUM_REGS, REGISTER_BYTES, REGISTER_NAME,
REGISTER_BYTE, REGISTER_RAW_SIZE, STAB_REG_TO_REGNUM): Remove
defines.
(i386_linux_register_name, i386_linux_register_byte,
i386_linux_register_raw_size): Remove prototypes.
(i386_linux_svr4_fetch_link_map_offsets): Remove prototype.
(SVR4_FETCH_LINK_MAP_OFFSETS): Remove define.
(IN_SIGTRAMP, FRAME_CHAIN, FRAME_SAVED_PC, SAVED_PC_AFTER_CALL,
TARGET_WRITE_PC): Remove defines.
(i386_linux_in_sigtramp, i386_linux_frame_chain,
i386_linux_frame_saved_pc, i386_linux_saved_pc_after_call,
i386_linux_write_pc): Remove prototypes.
(JB_ELEMENT_SIZE, JB_PC, GET_LONGJMP_TARGET): Remove defines.
(get_longjmp_target): Remove prototype.
* i386-linux-tdep.h: New file.
* i386-linux-nat.c: Include "i386-linux-tdep.h".
* i386-linux-tdep.c: Include "i386-tdep.h" and
"i386-linux-tdep.h".
(i386_linux_register_name, i386_linux_register_byte,
i386_linux_register_raw_size, i386_linux_in_sigtramp,
i386_linux_write_pc, i386_linux_svr4_fetch_link_map_offsets):
Make static.
(i386_linux_init_abi): New function.
(_initialize_i386_linux_tdep): New function.

* config/i386/tm-i386.h (SAVED_PC_AFTER_CALL): Remove define.
(i386_saved_pc_after_call): Remove prototype.
(MAX_NUM_REGS): Increase to deal with Linux's orig_eax "register".
(REGISTER_NAME, STAB_REG_TO_REGNUM, SDB_REG_TO_REGNUM,
DWARF_REG_TO_REGNUM, DWARF2_REG_TO_REGNUM): Remove defines.
(i386_register_name, i386_stab_reg_to_regnum,
i386_dwarf_reg_to_regnum): Remove prototypes.
(SIZEOF_GREGS, SIZEOF_FPU_REGS, SIZEOF_FPU_CTL_REGS,
SIZEOF_SSE_REGS): Remove defines.
(REGISTER_BYTES): Remove define.
(REGISTER_BYTE, REGISTER_RAW_SIZE): Remove defines.
(i386_register_byte, i386_register_raw_size): Remove prototypes.
(FRAME_CHAIN, FRAME_SAVED_PC): Remove defines.
(i386_frame_chain, i386_frame_saved_pc): Remove prototypes.
* config/i386/tm-i386v4.h (FRAME_CHAIN_VALID): Remove define.
(JB_ELEMENT_SIZE, JB_PC, JB_EBX, JB_ESI, JB_EDI, JB_EBP, JB_ESP,
JB_EDX, GET_LONGJMP_TARGET): Remove defines.
(get_longjmp_target): Remove prototype.
(I386V4_SIGTRAMP_SAVED_PC, IN_SIGTRAMP): Remove defines.
(sigtramp_saved_pc): Remove define.
(i386v4_sigtramp_saved_pc): Remove prototype.
* config/i386/tm-go32.h (FRAME_CHAIN,
FRAMELESS_FUNCTION_INVOCATION, FRAME_SAVED_PC): Remove defines.
(i386go32_frame_saved_pc): Remove prototype.
(JB_ELEMENT_SIZE, JB_PC, GET_LONGJMP_TARGET): Remove defines.
(get_longjmp_target): Remove prototype.
* i386-tdep.h: Include "osabi.h".
(enum i386_abi): Removed.
(enum struct_return): New enum.
(struct gdbarch_tdep): Remove abi member, add osabi, jb_pc_offset,
struct_return, sigtramp_saved_pc, sigtramp_start, sigtramp_end and
sc_pc_offset members.
(i386_gdbarch_register_os_abi): Remove prototype.
(I386_NUM_GREGS, I386_NUM_FREGS, I386_NUM_XREGS,
I386_SSE_NUM_REGS): New defines.
(I386_SIZEOF_GREGS, I386_SIZEOF_FREGS, I386_SIZEOF_XREGS,
I386_SSE_SIZEOF_REGS): New defines.
(i386_register_name, i386_register_byte, i386_register_raw_size):
New prototypes.
(i386_elf_init_abi, i386_svr4_init_abi): New prototypes.
(i386bsd_sigtramp_saved_pc): New prototype.
* i386-tdep.c: Don't include "elf-bfd.h".
(i386_stab_reg_to_regnum, i386_dwarf_reg_to_regnum,
i386_frame_chain, i386_saved_pc_after_call): Make static.
(i386_frame_saved_pc): Rewrite to call architecture dependent
function to deal with signal handlers.  Make static.
(i386go32_frame_saved_pc): Removed.
[GET_LONGJMP_TARGET] (JB_PC, JB_ELEMENT_SIZE, get_longjmp_target):
Removed.
(i386_get_longjmp_target): New function.
(default_struct_convention, pcc_struct_convention,
reg_struct_convention, valid_conventions, struct_convention): New
variables.
(i386_use_struct_convention): New function.
(i386v4_sigtramp_saved_pc): Renamed to
i386_svr4_sigtramp_saved_pc.  Made static.  Moved.
(i386_pc_in_sigtramp): New function.
(i386_abi_names): Removed.
(ABI_TAG_OS_GNU_LINUX, ABI_TAG_OS_GNU_HURD,
ABI_TAG_OS_GNU_SOLARIS, ABI_TAG_OS_FREEBSD, ABI_TAG_OS_NETBSD):
Removed.
(process_note_sections, i386_elf_abi_from_note, i386_elf_abi,
i386_gdbarch_register_os_abi): Removed.
(struct i386_abi_handler): Removed.
(i386_abi_handler_list): Removed.
(i386_svr4_pc_in_sigtramp, i386_go32_pc_in_sigtramp): New
functions.
(i386_elf_init_abi, i386_svr4_init_abi, i386_go32_init_abi,
i386_nw_init_abi): New functions.
(i386_gdbarch_init): Rewritten to use generic OS ABI framework.
Use set_gdbarch_xxx() calls instead of relying on macros for a
number of calls.
(i386_coff_osabi_sniffer, i386_nlm_osabi_sniffer): New functions.
(_initialize_i386_tdep): Add new 'struct-convcention' command.
Register the various architecture variants defined in this file.
@
text
@a34 13
/* The format used for `long double' on almost all i386 targets is the
   i387 extended floating-point format.  In fact, of all targets in the
   GCC 2.95 tree, only OSF/1 does it different, and insists on having
   a `long double' that's not `long' at all.  */

#define TARGET_LONG_DOUBLE_FORMAT &floatformat_i387_ext

/* Although the i386 extended floating-point has only 80 significant
   bits, a `long double' actually takes up 96, probably to enforce
   alignment.  */

#define TARGET_LONG_DOUBLE_BIT 96

@


1.29
log
@Eliminate TARGET_BYTE_ORDER.
@
text
@a65 5
/* Immediately after a function call, return the saved pc.  */

#define SAVED_PC_AFTER_CALL(frame) i386_saved_pc_after_call (frame)
extern CORE_ADDR i386_saved_pc_after_call (struct frame_info *frame);

d116 1
a116 1
#define MAX_NUM_REGS (16 + 16 + 9)
a136 20

/* Return the name of register REG.  */

#define REGISTER_NAME(reg) i386_register_name ((reg))
extern char *i386_register_name (int reg);

/* Use the "default" register numbering scheme for stabs and COFF.  */

#define STAB_REG_TO_REGNUM(reg) i386_stab_reg_to_regnum ((reg))
#define SDB_REG_TO_REGNUM(reg) i386_stab_reg_to_regnum ((reg))
extern int i386_stab_reg_to_regnum (int reg);

/* Use the DWARF register numbering scheme for DWARF and DWARF 2.  */

#define DWARF_REG_TO_REGNUM(reg) i386_dwarf_reg_to_regnum ((reg))
#define DWARF2_REG_TO_REGNUM(reg) i386_dwarf_reg_to_regnum ((reg))
extern int i386_dwarf_reg_to_regnum (int reg);

/* We don't define ECOFF_REG_TO_REGNUM, since ECOFF doesn't seem to be
   in use on any of the supported i386 targets.  */
a138 32
/* Sizes of individual register sets.  These cover the entire register
   file, so summing up the sizes of those portions actually present
   yields REGISTER_BYTES.  */
#define SIZEOF_GREGS (NUM_GREGS * 4)
#define SIZEOF_FPU_REGS (8 * 10)
#define SIZEOF_FPU_CTRL_REGS (8 * 4)
#define SIZEOF_SSE_REGS (8 * 16 + 4)


/* Total amount of space needed to store our copies of the machine's register
   state, the array `registers'. */
#ifdef HAVE_SSE_REGS
#define REGISTER_BYTES \
  (SIZEOF_GREGS + SIZEOF_FPU_REGS + SIZEOF_FPU_CTRL_REGS + SIZEOF_SSE_REGS)
#else
#ifdef HAVE_I387_REGS
#define REGISTER_BYTES (SIZEOF_GREGS + SIZEOF_FPU_REGS + SIZEOF_FPU_CTRL_REGS)
#else
#define REGISTER_BYTES (SIZEOF_GREGS)
#endif
#endif

/* Return the offset into the register array of the start of register
   number REG.  */
#define REGISTER_BYTE(reg) i386_register_byte ((reg))
extern int i386_register_byte (int reg);

/* Return the number of bytes of storage in GDB's register array
   occupied by register REG.  */
#define REGISTER_RAW_SIZE(reg) i386_register_raw_size ((reg))
extern int i386_register_raw_size (int reg);

a220 12
/* The following redefines make backtracing through sigtramp work.
   They manufacture a fake sigtramp frame and obtain the saved pc in sigtramp
   from the sigcontext structure which is pushed by the kernel on the
   user stack, along with a pointer to it.  */

/* Return the chain-pointer for FRAME.  In the case of the i386, the
   frame's nominal address is the address of a 4-byte word containing
   the calling frame's address.  */

#define FRAME_CHAIN(frame) i386_frame_chain ((frame))
extern CORE_ADDR i386_frame_chain (struct frame_info *frame);

a227 5

/* Return the saved program counter for FRAME.  */

#define FRAME_SAVED_PC(frame) i386_frame_saved_pc (frame)
extern CORE_ADDR i386_frame_saved_pc (struct frame_info *frame);
@


1.29.8.1
log
@Merge with mainline, kseitz_interps-20020619-merge.
@
text
@d35 199
d235 1
d238 109
d348 22
@


1.29.8.2
log
@Merge w/trunk (kseitz_interps-20020722-merge).
@
text
@d29 6
@


1.29.8.3
log
@Merge with kseitz_interps-20020829-merge tag from trunk.
@
text
@d27 7
d37 4
@


1.29.6.1
log
@merge from trunk
@
text
@d35 19
d66 5
d121 1
a121 1
#define MAX_NUM_REGS (16 + 16 + 9 + 1)
d142 20
d164 32
d258 1
a258 1
#define DEPRECATED_EXTRACT_RETURN_VALUE(type, regbuf, valbuf) \
d274 1
a274 1
#define DEPRECATED_EXTRACT_STRUCT_VALUE_ADDRESS(regbuf) \
d278 12
d297 5
@


1.29.6.2
log
@Merge with trunk.
@
text
@d35 123
d159 1
d162 92
d255 22
@


1.28
log
@Eliminate IEEE_FLOAT.
@
text
@a34 2
#define TARGET_BYTE_ORDER BFD_ENDIAN_LITTLE

@


1.27
log
@* config/i386/tm-i386.h (FP7_REGNUM, FIRST_FPU_CTRL_REGNUM,
FCTRL_REGNUM, FPC_REGNUM, FSTAT_REGNUM, FTAG_REGNUM, FCS_REGNUM,
FCOFF_REGNUM, FDS_REGNUM, FDOFF_REGNUM, FOP_REGNUM,
LAST_FPU_CTRL_REGNUM, XMM0_REGNUM, XMM7_REGNUM, MXCSR_REGNUM,
IS_FP_REGNUM, IS_SSE_REGNUM): Removed.
(FP0_REGNUM): Define conditionally depending on HAVE_I387_REGS.
(SIZEOF_FPU_CTRL_REGS): Hardcode value.
* i386-tdep.h (struct gdbarch_tdep): Change such that it contains
a single member `num_xmm_regs'.
(FPC_REGNUM): New macro.
(FIRST_FPU_REGNUM, LAST_FPU_REGNUM, FISRT_XMM_REGNUM,
LAST_XMM_REGNUM, MXCSR_REGNUM, FIRST_FPU_CTRL_REGNUM,
LAST_FPU_CTRL_REGNUM): Removed.
(FCTRL_REGNUM, FSTAT_REGNUM, FTAG_REGNUM, FOP_REGNUM, XMM0_REGNUM,
MXCSR_REGNUM): Define unconditionally.  Change macros to match the
comment describing the register layout.
(FISEG_REGNUM, FIOFF_REGNUM, FOSEG_REGNUM, FOOFF_REGNUM): New macros.
(FP_REGNUM_P, FPC_REGNUM_P, SSE_REGNUM_P): New macros.
(IS_FP_REGNUM, IS_FPU_CTRL_REGNUM, IS_SSE_REGNUM): Make obsolete,
unconditionally define in terms of FP_REGNUM_P, FPC_REGNUM_P and
SSE_REGNUM_P).
(FCS_REGNUM, FCOFF_REGNUM, FDS_REGNUM, FDOFF_REGNUM): Make
obsolete, unconditionally define in terms of FISEG_REGNUM,
FIOFF_REGNUM, FOSEG_REGNUM, FOOFF_REGNUM.
* i386-tdep.c (i386_gdbarch_init): Initialize `num_xmm_regs'
member of `struct gdbarch_tdep'.
* x86-64-tdep.c (i386_gdbarch_init): Change initialization of
`struct gdbarch_tdep'.
* i387-nat.c (FCS_REGNUM, FCOFF_REGNUM, FDS_REGNUM, FDOFF_REGNUM):
Replace with FISEG_REGNUM, FIOFF_REGNUM, FOSEG_REGNUM and
FOOFF_REGNUM.  Use FPC_REGNUM instead of FIRST_FPU_CTRL_REGNUM.
Use XMM0_REGNUM instead of LAST_FPU_CTRL_REGNUM.
@
text
@a49 5
/* Used for example in valprint.c:print_floating() to enable checking
   for NaN's */

#define IEEE_FLOAT (1)

@


1.26
log
@LITTLE_ENDIAN -> BFD_ENDIAN_LITTLE
@
text
@d143 6
a148 33
/* These registers are present only if HAVE_I387_REGS is #defined.
   We promise that FP0 .. FP7 will always be consecutive register numbers.  */
#define FP0_REGNUM   16		/* first FPU floating-point register */
#define FP7_REGNUM   23		/* last  FPU floating-point register */

/* All of these control registers (except for FCOFF and FDOFF) are
   sixteen bits long (at most) in the FPU, but are zero-extended to
   thirty-two bits in GDB's register file.  This makes it easier to
   compute the size of the control register file, and somewhat easier
   to convert to and from the FSAVE instruction's 32-bit format.  */
#define FIRST_FPU_CTRL_REGNUM 24
#define FCTRL_REGNUM 24	        /* FPU control word */
#define FPC_REGNUM   24		/* old name for FCTRL_REGNUM */
#define FSTAT_REGNUM 25		/* FPU status word */
#define FTAG_REGNUM  26		/* FPU register tag word */
#define FCS_REGNUM   27		/* FPU instruction's code segment selector
				   16 bits, called "FPU Instruction Pointer
				   Selector" in the x86 manuals  */
#define FCOFF_REGNUM 28		/* FPU instruction's offset within segment
				   ("Fpu Code OFFset") */
#define FDS_REGNUM   29		/* FPU operand's data segment */
#define FDOFF_REGNUM 30		/* FPU operand's offset within segment */
#define FOP_REGNUM   31		/* FPU opcode, bottom eleven bits */
#define LAST_FPU_CTRL_REGNUM 31

/* These registers are present only if HAVE_SSE_REGS is #defined.
   We promise that XMM0 .. XMM7 will always have consecutive reg numbers. */
#define XMM0_REGNUM  32		/* first SSE data register */
#define XMM7_REGNUM  39		/* last  SSE data register */
#define MXCSR_REGNUM 40		/* Streaming SIMD Extension control/status */

#define IS_FP_REGNUM(n) (FP0_REGNUM <= (n) && (n) <= FP7_REGNUM)
#define IS_SSE_REGNUM(n) (XMM0_REGNUM <= (n) && (n) <= XMM7_REGNUM)
d176 1
a176 2
#define SIZEOF_FPU_CTRL_REGS \
  ((LAST_FPU_CTRL_REGNUM - FIRST_FPU_CTRL_REGNUM + 1) * 4)
@


1.25
log
@* i386-tdep.c (i386_gdbarch_init): Initialize num_regs.
* config/i386/tm-i386.h (NUM_REGS): Delete.
@
text
@d35 1
a35 1
#define TARGET_BYTE_ORDER LITTLE_ENDIAN
@


1.24
log
@* i386-tdep.h (FPU_REG_RAW_SIZE): Define unconditionally.
* i387-nat.c, i387-tdep.c: Unconditionally include "i386-tdep.h".
* config/i386/tm-i386.h (FPU_REG_RAW_SIZE): Removed.
(SIZEOF_FPU_REGS): Don't use FPU_REG_RAW_SIZE here.
@
text
@a126 2
#define NUM_REGS (NUM_GREGS + NUM_FREGS + NUM_SSE_REGS)

@


1.23
log
@Enable multi-arch for i386.
@
text
@a178 2
#define FPU_REG_RAW_SIZE (10)

d204 1
a204 1
#define SIZEOF_FPU_REGS (8 * FPU_REG_RAW_SIZE)
@


1.22
log
@* i386-tdep.c (i386_register_offset): Renamed from
i386_register_byte.  Made static.
(i386_register_size): Renamed from i386_register_raw_size.  Made
static.
(i386_register_virtual_size): Removed.
(i386_register_byte, i386_register_raw_size,
i386_register_virtual_size): New functions.
(_initialize_i386_tdep): Initialize i386_register_offset instead
of i386_register_byte.  Remove code to initialize
i386_register_virtual_size.
* config/i386/tm-i386.h (REGISTER_BYTE): Redefine to use
i386_register_byte function.
(REGISTER_RAW_SIZE): Redefine to use i386_register_raw_size
function.
(REGISTER_VIRTUAL_SIZE): Redefine to use
i386_register_virtual_size function.
(i386_register_byte, i386_register_raw_size,
i386_register_virtual_size): New functions.
@
text
@d25 2
@


1.21
log
@* config/i386/tm-i386.h (REGISTER_NAMES): Remove.
(REGISTER_NAME): New define.
(i386_register_name): New prototype.
* i386-tdep.c (i386_register_names): New variable.
(i386_register_name): New function.
* config/i386/tm-i386os9k.h, config/i386/tm-ptx.h,
config/i386/tm-symmetry.h: Undefine REGISTER_NAME instead of
REGISTER_NAMES.
@
text
@d223 4
a226 3
/* Index within `registers' of the first byte of the space for register N. */
#define REGISTER_BYTE(n) (i386_register_byte[(n)])
extern int i386_register_byte[];
d228 4
a231 4
/* Number of bytes of storage in the actual machine representation for
   register N.  */
#define REGISTER_RAW_SIZE(n) (i386_register_raw_size[(n)])
extern int i386_register_raw_size[];
d236 3
a238 4
/* Number of bytes of storage in the program's representation
   for register N. */
#define REGISTER_VIRTUAL_SIZE(n) (i386_register_virtual_size[(n)])
extern int i386_register_virtual_size[];
@


1.20
log
@* config/i386/tm-i386.h (STAB_REG_TO_REGNUM, SDB_REG_TO_REGNUM,
DWARF_REG_TO_REGNUM, DWARF2_REG_TO_REGNUM): New defines.
(i386_stab_reg_to_regnum, i386_dwarf_reg_to_regnum): New
prototypes.
* config/i386/tm-fbsd.h, config/i386/tm-i386gnu.h,
config/i386/tm-linux.h (STAB_REG_TO_REGNUM): Redefine to call
i386_dwarf_reg_to_regnum.
* i386-tdep.c (i386_stab_reg_to_regnum, i386_dwarf_reg_to_regnum):
New functions.
@
text
@a129 19
/* Initializer for an array of names of registers.  There should be at least
   NUM_REGS strings in this initializer.  Any excess ones are simply ignored.
   The order of the first 8 registers must match the compiler's numbering
   scheme (which is the same as the 386 scheme) and also regmap in the various
   *-nat.c files. */

#define REGISTER_NAMES { "eax",   "ecx",    "edx",   "ebx",	\
			 "esp",   "ebp",    "esi",   "edi",	\
			 "eip",   "eflags", "cs",    "ss",	\
			 "ds",    "es",     "fs",    "gs",	\
			 "st0",   "st1",    "st2",   "st3",	\
			 "st4",   "st5",    "st6",   "st7",	\
			 "fctrl", "fstat",  "ftag",  "fiseg",	\
                         "fioff", "foseg",  "fooff", "fop",	\
			 "xmm0",  "xmm1",   "xmm2",  "xmm3",	\
			 "xmm4",  "xmm5",   "xmm6",  "xmm7",	\
                         "mxcsr"				\
		       }

d178 5
@


1.19
log
@* i386-tdep.c (i386_frame_saved_pc): New function.
* config/i386/tm-i386.h (FRAME_SAVED_PC): Redefine in terms of
i386_frame_saved_pc.
(i386_frame_saved_pc): New prototype.
@
text
@d198 16
@


1.18
log
@* i386-tdep.c (i386_register_virtual_type): New function.
(i386_register_convertible): New function.
* config/i386/tm-i386.h (REGISTER_VIRTUAL_TYPE): Redefine in terms
of i386_register_virtual_type.
(REGISTER_CONVERTIBLE): Redefine in terms of
i386_register_convertible.
(i386_register_virtual_type, i386_register_convertible): New
prototypes.
@
text
@d333 1
a333 1
/* Saved Pc.  Get it from sigcontext if within sigtramp.  */
d335 2
a336 7
#define FRAME_SAVED_PC(FRAME) \
  (((FRAME)->signal_handler_caller \
    ? sigtramp_saved_pc (FRAME) \
    : read_memory_unsigned_integer ((FRAME)->frame + 4, 4)) \
   )

extern CORE_ADDR sigtramp_saved_pc (struct frame_info *);
@


1.17
log
@* i386-tdep.c (i386_frameless_function_invocation): New function.
* config/i386/tm-i386.h (FRAMELESS_FUNCTION_INVOCATION): Redefine
in terms of i386_frameless_function_invocation.  Adjust comment.
(i386_frameless_function_invocation): New prototype.
@
text
@d241 2
a242 3
/* Return the GDB type object for the "standard" data type of data in 
   register N.  Perhaps si and di should go here, but potentially they
   could be used for things other than address.  */
d244 2
a245 6
#define REGISTER_VIRTUAL_TYPE(N)				\
  (((N) == PC_REGNUM || (N) == FP_REGNUM || (N) == SP_REGNUM)	\
   ? lookup_pointer_type (builtin_type_void)			\
   : IS_FP_REGNUM(N) ? builtin_type_long_double			\
   : IS_SSE_REGNUM(N) ? builtin_type_v4sf			\
   : builtin_type_int)
d247 5
a251 6
/* REGISTER_CONVERTIBLE(N) is true iff register N's virtual format is
   different from its raw format.  Note that this definition assumes
   that the host supports IEEE 32-bit floats, since it doesn't say
   that SSE registers need conversion.  Even if we can't find a
   counterexample, this is still sloppy.  */
#define REGISTER_CONVERTIBLE(n) (IS_FP_REGNUM (n))
@


1.16
log
@* i386-tdep.c (i386_saved_pc_after_call): New function.
* config/i386/tm-i386.h (SAVED_PC_AFTER_CALL): Redefine in terms
of i386_saved_pc_after_call.
(i386_saved_pc_after_call): New prototype.
@
text
@d331 3
a333 3
/* A macro that tells us whether the function invocation represented
   by FI does not have a frame on the stack associated with it.  If it
   does not, FRAMELESS is set to 1, else 0.  */
d335 3
a337 2
#define FRAMELESS_FUNCTION_INVOCATION(FI) \
     (((FI)->signal_handler_caller) ? 0 : frameless_look_for_prologue(FI))
@


1.15
log
@* i386-tdep.c (i386_frame_chain): New function.
* config/i386/tm-i386.h (FRAME_CHAIN): Redefine in terms of
i386_frame_chain.
(i386_frame_chain): New prototype.
@
text
@d71 1
a71 3
/* Immediately after a function call, return the saved pc.  Can't always go
   through the frames for this because on some machines the new frame is not
   set up until the new function executes some instructions.  */
d73 2
a74 2
#define SAVED_PC_AFTER_CALL(frame) \
     (read_memory_unsigned_integer (read_register (SP_REGNUM), 4))
@


1.14
log
@* i386-tdep.c (i386_extract_struct_value_address): New function.
* config/i386/tm-i386.h (EXTRACT_STRUCT_VALUE_ADDRESS): Redefine
in terms of i386_extract_struct_value_address.
(i386_extract_struct_value_address): New prototype.
@
text
@d326 3
a328 4
/* FRAME_CHAIN takes a frame's nominal address and produces the frame's
   chain-pointer.
   In the case of the i386, the frame's nominal address
   is the address of a 4-byte word containing the calling frame's address.  */
d330 2
a331 6
#define FRAME_CHAIN(thisframe)  \
  ((thisframe)->signal_handler_caller \
   ? (thisframe)->frame \
   : (!inside_entry_file ((thisframe)->pc) \
      ? read_memory_unsigned_integer ((thisframe)->frame, 4) \
      : 0))
@


1.13
log
@* i386-tdep.c (i386_push_arguments, i386_store_struct_return): New
functions.
* config/i386/tm-i386.h (PUSH_ARGUMENTS): New macro.
(STORE_STRUCT_RETURN): Redefine in terms of
i386_store_struct_return.
(i386_push_arguments, i386_store_struct_return): New prototypes.
* config/i386/tm-i386v.h (STORE_STRUCT_RETURN): Remove.  It's
definition was identical to the definition in "i386/tm-i386.h" so
the new definition should suffice too.
@
text
@d308 1
d313 3
a315 3
/* Extract from an array REGBUF containing the (raw) register state the address
   in which a function should return its structure value, as a CORE_ADDR (or an
   expression that can be used as one).  */
d317 3
a319 1
#define EXTRACT_STRUCT_VALUE_ADDRESS(REGBUF) (*(int *)(REGBUF))
@


1.12
log
@Include regcache.h
@
text
@d282 7
a289 1

d291 1
a291 1
   subroutine will return.  This is called from call_function. */
d293 3
a295 5
#define STORE_STRUCT_RETURN(ADDR, SP) \
  { char buf[REGISTER_SIZE];	\
    (SP) -= sizeof (ADDR);	\
    store_address (buf, sizeof (ADDR), ADDR);	\
    write_memory ((SP), buf, sizeof (ADDR)); }
@


1.11
log
@Update/correct copyright notices.
@
text
@d25 2
@


1.10
log
@	* config/i386/tm-i386.h (REGISTER_CONVERT_TO_VIRTUAL,
	REGISTER_CONVERT_TO_RAW): Delete trailing semicolon.
@
text
@d2 2
a3 1
   Copyright (C) 1995, 1996, 2000 Free Software Foundation, Inc.
@


1.9
log
@* i386-tdep.c: Add missing ')' in comment.
(i386_extract_return_value): Return directly after issuing the
warning and filling *VALBUF with zeroes if we cannot get at the
floating-point registers.
(i386_store_return_value): New function.
* config/i386/tm-i386.h (STORE_RETURN_VALUE): Simply call
i386_store_return_value.
Add prototype for i386_store_return_value.
@
text
@d262 1
a262 1
  i386_register_convert_to_virtual ((regnum), (type), (from), (to));
d270 1
a270 1
  i386_register_convert_to_raw ((type), (regnum), (from), (to));
@


1.8
log
@2000-07-21  Michael Snyder  <msnyder@@cleaver.cygnus.com>

      * config/i386/tm-i386.h: treat PC and FP as unsigned.
      (SAVED_PC_AFTER_CALL): Use read_memory_unsigned_integer.
      (FRAME_SAVED_PC): Ditto.
      (FRAME_CHAIN): Ditto.
@
text
@d299 5
a303 11
/* Write into appropriate registers a function return value of type TYPE, given
   in virtual format.  */

#define STORE_RETURN_VALUE(TYPE,VALBUF) \
  {    	       	       	       	       	       	       	       	       	     \
    if (TYPE_CODE (TYPE) == TYPE_CODE_FLT)				     \
      write_register_bytes (REGISTER_BYTE (FP0_REGNUM), (VALBUF),	     \
			    TYPE_LENGTH (TYPE));			     \
    else								     \
      write_register_bytes (0, (VALBUF), TYPE_LENGTH (TYPE));  		     \
  }
@


1.7
log
@* config/i386/tm-i386.h: Add forward declaration of `struct value'.
(FIX_CALL_DUMMY): Redefined to call i386_fix_call_dummy.
(i386_fix_call_dummy): Add prototype.
* i386-tdep.c (i386_fix_call_dummy): New function based on the
code from the old FIX_CALL_DUMMY macro.
@
text
@d72 2
a73 1
#define SAVED_PC_AFTER_CALL(frame) (read_memory_integer (read_register (SP_REGNUM), 4))
d331 1
a331 1
      ? read_memory_integer ((thisframe)->frame, 4) \
d346 1
a346 1
    : read_memory_integer ((FRAME)->frame + 4, 4)) \
@


1.6
log
@PARAMS removal.
@
text
@d24 1
a24 1
/* Forward decl's for prototypes */
d27 1
d412 5
a416 12
#define FIX_CALL_DUMMY(dummyname, pc, fun, nargs, args, type, gcc_p)   \
{ \
	int from, to, delta, loc; \
	loc = (int)(read_register (SP_REGNUM) - CALL_DUMMY_LENGTH); \
	from = loc + 5; \
	to = (int)(fun); \
	delta = to - from; \
	*((char *)(dummyname) + 1) = (delta & 0xff); \
	*((char *)(dummyname) + 2) = ((delta >> 8) & 0xff); \
	*((char *)(dummyname) + 3) = ((delta >> 16) & 0xff); \
	*((char *)(dummyname) + 4) = ((delta >> 24) & 0xff); \
}
d418 1
@


1.5
log
@Bring IEEE_FLOAT under gdbarch's control.
* gdbarch.sh (IEEE_FLOAT): New entry.
* gdbarch.c, gdbarch.h: Regenerated.
* valprint.c (IEEE_FLOAT): Provide a default #definition for this.
(print_floating): Use IEEE_FLOAT as if it were an expression; use
the code specific to IEEE-format numbers whenever the value of
IEEE_FLOAT is non-zero.
* config/a29k/tm-a29k.h, config/alpha/tm-alpha.h,
config/arc/tm-arc.h, config/arm/tm-arm.h, config/fr30/tm-fr30.h,
config/h8300/tm-h8300.h, config/i386/tm-i386.h,
config/i960/tm-i960.h, config/m88k/tm-m88k.h,
config/mips/tm-mips.h, config/pa/tm-hppa.h,
config/sparc/tm-sparc.h, config/delta/tm-delta.h,
config/frv/tm-frv.h (IEEE_FLOAT): For all ports that #define
IEEE_FLOAT, make sure they give it the value (1).
@
text
@d65 1
a65 1
extern int i386_skip_prologue PARAMS ((int));
d347 1
a347 1
extern CORE_ADDR sigtramp_saved_pc PARAMS ((struct frame_info *));
d358 1
a358 1
extern int i386_frame_num_args PARAMS ((struct frame_info *));
d370 1
a370 1
extern void i386_frame_init_saved_regs PARAMS ((struct frame_info *));
d386 1
a386 1
extern void i386_push_dummy_frame PARAMS ((void));
d392 1
a392 1
extern void i386_pop_frame PARAMS ((void));
d424 2
a425 2
extern void print_387_control_word PARAMS ((unsigned int));
extern void print_387_status_word PARAMS ((unsigned int));
@


1.4
log
@2000-03-27  Mark Kettenis  <kettenis@@gnu.org>

	* config/i386/tm-i386.h: Fix typo.  It is TARGET_LONG_DOUBLE_BIT
	instead of TARGET_LONG_DOUBLE_BITS.
	* config/i386/tm-i386mk.h: Likewise.
@
text
@d47 1
a47 1
#define IEEE_FLOAT
@


1.3
log
@2000-03-26  Mark Kettenis  <kettenis@@gnu.org>

	Provide `long double' support for most i386 targets.
	* config/i386/tm-i386.h (TARGET_LONG_DOUBLE_FORMAT): Define as
	&floatformat_i387_ext.
	(TARGET_LONG_DOUBLE_BITS): Define as 96.
	(REGISTER_VIRTUAL_TYPE): Change type for FPU registers to
	`builtin_type_long_double'.
	(REGISTER_CONVERT_TO_VIRTUAL): Call
	i386_register_convert_to_virtual.
	(REGISTER_CONVERT_TO_RAW): Call i386_register_convert_to_raw.
	(i387_to_double, double_to_i387): Remove prototypes.
	(i386_extract_return_value): Change prototype to match definition
	in i386-tdep.c.
	* config/i386/tm-i386mk.h (TARGET_LONG_DOUBLE_FORMAT): #undef.
	(TARGET_LONG_DOUBLE_BITS): #undef.
	* config/i386/tm-linux.h (TARGET_LONG_DOUBLE_BIT): Remove.
	[HAVE_LONG_DOUBLE && HOST_I386] (LD_I387): Remove.
	(i387_extract_floating, i387_store_floating): Remove prototypes.
	(TARGET_EXTRACT_FLOATING, TARGET_STORE_FLOATING): Remove.
	(REGISTER_CONVERT_TO_VIRTUAL, REGOISTER_CONVERT_TO_RAW): Remove.
	(REGISTER_VIRTUAL_TYPE): Remove.
	* i386-tdep.c (i386_register_convert_to_virtual): New function.
	(i386_register_convert_to_raw): New function.
	* i387-tdep.c [LD_I387] (i387_extract_floating): Remove.
	(i387_store_floating): Remove.
@
text
@d42 1
a42 1
#define TARGET_LONG_DOUBLE_BITS 96
@


1.2
log
@From J.T.: Convert i386 to updated frame_saved_regs.
@
text
@d2 1
a2 1
   Copyright (C) 1995, 1996 Free Software Foundation, Inc.
d31 13
d245 1
a245 1
   : IS_FP_REGNUM(N) ? builtin_type_double			\
d256 15
a270 18
/* Convert data from raw format for register REGNUM in buffer FROM
   to virtual format with type TYPE in buffer TO.  */
extern void i387_to_double (char *, char *);

#define REGISTER_CONVERT_TO_VIRTUAL(REGNUM,TYPE,FROM,TO)	\
{								\
  double val;							\
  i387_to_double ((FROM), (char *)&val);			\
  store_floating ((TO), TYPE_LENGTH (TYPE), val);		\
}

extern void double_to_i387 (char *, char *);

#define REGISTER_CONVERT_TO_RAW(TYPE,REGNUM,FROM,TO)		\
{								\
  double val = extract_floating ((FROM), TYPE_LENGTH (TYPE));	\
  double_to_i387((char *)&val, (TO));				\
}
d292 4
a295 4
#define EXTRACT_RETURN_VALUE(TYPE,REGBUF,VALBUF) \
   i386_extract_return_value ((TYPE),(REGBUF),(VALBUF))

extern void i386_extract_return_value PARAMS ((struct type *, char[], char *));
@


1.1
log
@Initial revision
@
text
@d4 1
a4 1
This file is part of GDB.
d6 14
a19 13
This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.  */
d24 1
a24 1
#ifdef __STDC__		/* Forward decl's for prototypes */
a27 1
#endif
d50 1
a50 1
#define SKIP_PROLOGUE(frompc)   {(frompc) = i386_skip_prologue((frompc));}
d79 31
a109 1
/* Number of machine registers */
d111 2
a112 2
#define NUM_FREGS 0 /*8*/		/* Number of FP regs */
#define NUM_REGS (16 + NUM_FREGS)	/* Basic i*86 regs + FP regs */
d120 12
a131 7
#define REGISTER_NAMES { "eax",   "ecx",    "edx",   "ebx", \
			 "esp",   "ebp",    "esi",   "edi", \
			 "eip",   "eflags", "cs",    "ss", \
			 "ds",    "es",     "fs",    "gs", \
			 "st0",   "st1",    "st2",   "st3", \
			 "st4",   "st5",    "st6",   "st7", \
			 }
d140 50
a189 4
#define FP_REGNUM 5	/* (ebp) Contains address of executing stack frame */
#define SP_REGNUM 4	/* (usp) Contains address of top of stack */
#define PC_REGNUM 8	/* (eip) Contains program counter */
#define PS_REGNUM 9	/* (ps)  Contains processor status */
a190 2
#define FP0_REGNUM 16   /* (st0) 387 register */
#define FPC_REGNUM 25	/* 80387 control register */
d194 10
a203 2

#define REGISTER_BYTES ((NUM_REGS - NUM_FREGS)*4 + NUM_FREGS*10)
d206 2
a208 3
#define REGISTER_BYTE(N) \
  (((N) < FP0_REGNUM) ? ((N) * 4) : ((((N) - FP0_REGNUM) * 10) + 64))
 
d210 3
a212 4
   register N.  All registers are 4 bytes, except 387 st(0) - st(7),
   which are 80 bits each. */

#define REGISTER_RAW_SIZE(N) (((N) < FP0_REGNUM) ? 4 : 10)
d215 1
a215 2

#define MAX_REGISTER_RAW_SIZE 10
d219 2
a220 2

#define REGISTER_VIRTUAL_SIZE(N) (((N) < FP0_REGNUM) ? 4 : 8)
d223 1
a223 2

#define MAX_REGISTER_VIRTUAL_SIZE 8
d229 38
a266 6
#define REGISTER_VIRTUAL_TYPE(N) \
  (((N) == PC_REGNUM || (N) == FP_REGNUM || (N) == SP_REGNUM) \
   ? lookup_pointer_type (builtin_type_void) \
   : (((N) < FP0_REGNUM) \
      ? builtin_type_int \
      : builtin_type_double))
d268 1
d285 1
a285 1
extern void i386_extract_return_value PARAMS ((struct type *, char [], char *));
d326 2
a327 7
#define FRAMELESS_FUNCTION_INVOCATION(FI, FRAMELESS) \
  do { \
    if ((FI)->signal_handler_caller) \
      (FRAMELESS) = 0; \
    else \
      (FRAMELESS) = frameless_look_for_prologue(FI); \
  } while (0)
d346 1
a346 1
#define FRAME_NUM_ARGS(numargs, fi) (numargs) = i386_frame_num_args(fi)
d360 2
a361 2
#define FRAME_FIND_SAVED_REGS(frame_info, frame_saved_regs) \
{ i386_frame_find_saved_regs ((frame_info), &(frame_saved_regs)); }
d363 1
a363 2
extern void i386_frame_find_saved_regs PARAMS ((struct frame_info *,
						struct frame_saved_regs *));
a364 1

d367 5
d383 1
a384 1

d394 1
a394 1
#define CALL_DUMMY_START_OFFSET 0  /* Start execution at beginning of dummy */
@


1.1.1.1
log
@Initial creation of sourceware repository
@
text
@@


1.1.1.2
log
@import gdb-19990422 snapshot
@
text
@d18 1
a18 1
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
@


1.1.1.3
log
@import gdb-19990504 snapshot
@
text
@d50 1
a50 1
#define SKIP_PROLOGUE(frompc)   (i386_skip_prologue (frompc))
@


1.1.1.4
log
@import gdb-1999-05-25 snapshot
@
text
@d210 7
a216 2
#define FRAMELESS_FUNCTION_INVOCATION(FI) \
     (((FI)->signal_handler_caller) ? 0 : frameless_look_for_prologue(FI))
d235 1
a235 1
#define FRAME_NUM_ARGS(fi) (i386_frame_num_args(fi))
@


1.1.1.5
log
@import gdb-1999-07-07 post reformat
@
text
@d4 1
a4 1
   This file is part of GDB.
d6 13
a18 14
   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place - Suite 330,
   Boston, MA 02111-1307, USA.  */
d23 1
a23 1
#ifdef __STDC__			/* Forward decl's for prototypes */
d81 1
a81 1
#define NUM_FREGS 0 /*8*/	/* Number of FP regs */
d105 4
a108 4
#define FP_REGNUM 5		/* (ebp) Contains address of executing stack frame */
#define SP_REGNUM 4		/* (usp) Contains address of top of stack */
#define PC_REGNUM 8		/* (eip) Contains program counter */
#define PS_REGNUM 9		/* (ps)  Contains processor status */
d110 2
a111 2
#define FP0_REGNUM 16		/* (st0) 387 register */
#define FPC_REGNUM 25		/* 80387 control register */
d122 1
a122 1

d169 1
a169 1
extern void i386_extract_return_value PARAMS ((struct type *, char[], char *));
d249 1
a250 1

d264 1
a265 1

d275 1
a275 1
#define CALL_DUMMY_START_OFFSET 0	/* Start execution at beginning of dummy */
@


1.1.1.6
log
@import gdb-1999-08-30 snapshot
@
text
@d24 1
a24 1
/* Forward decl's for prototypes */
d28 1
@


1.1.1.7
log
@import gdb-1999-10-11 snapshot
@
text
@a252 5
/* "An argument's size is increased, if necessary, to make it a
   multiple of [32 bit] words.  This may require tail padding,
   depending on the size of the argument" - from the x86 ABI.  */
#define PARM_BOUNDARY 32

@


1.1.1.8
log
@import gdb-1999-10-18 snapshot
@
text
@d79 1
a79 29
/* This register file is parameterized by two macros:
   HAVE_I387_REGS --- register file should include i387 registers
   HAVE_SSE_REGS  --- register file should include SSE registers
   If HAVE_SSE_REGS is #defined, then HAVE_I387_REGS must also be #defined.
   
   However, GDB code should not test those macros with #ifdef, since
   that makes code which is annoying to multi-arch.  Instead, GDB code
   should check the values of NUM_GREGS, NUM_FREGS, and NUM_SSE_REGS,
   which will eventually get mapped onto architecture vector entries.

   It's okay to use the macros in tm-*.h files, though, since those
   files will get completely replaced when we multi-arch anyway.  */

/* Number of general registers, present on every 32-bit x86 variant.  */
#define NUM_GREGS (16)

/* Number of floating-point unit registers.  */
#ifdef HAVE_I387_REGS
#define NUM_FREGS (16)
#else
#define NUM_FREGS (0)
#endif

/* Number of SSE registers.  */
#ifdef HAVE_SSE_REGS
#define NUM_SSE_REGS (9)
#else
#define NUM_SSE_REGS (0)
#endif
d81 2
a82 4
#define NUM_REGS (NUM_GREGS + NUM_FREGS + NUM_SSE_REGS)

/* Largest number of registers we could have in any configuration.  */
#define MAX_NUM_REGS (16 + 16 + 9)
d90 7
a96 12
#define REGISTER_NAMES { "eax",   "ecx",    "edx",   "ebx",	\
			 "esp",   "ebp",    "esi",   "edi",	\
			 "eip",   "eflags", "cs",    "ss",	\
			 "ds",    "es",     "fs",    "gs",	\
			 "st0",   "st1",    "st2",   "st3",	\
			 "st4",   "st5",    "st6",   "st7",	\
			 "fctrl", "fstat",  "ftag",  "fcs",	\
                         "fcoff", "fds",    "fdoff", "fop",	\
			 "xmm0",  "xmm1",   "xmm2",  "xmm3",	\
			 "xmm4",  "xmm5",   "xmm6",  "xmm7",	\
                         "mxcsr"				\
		       }
d105 1
a105 2
#define FP_REGNUM 5		/* (ebp) Contains address of executing stack
				   frame */
d110 2
a111 45
/* These registers are present only if HAVE_I387_REGS is #defined.
   We promise that FP0 .. FP7 will always be consecutive register numbers.  */
#define FP0_REGNUM   16		/* first FPU floating-point register */
#define FP7_REGNUM   23		/* last  FPU floating-point register */

/* All of these control registers are sixteen bits long (at most) in
   the FPU, but are zero-extended to thirty-two bits in GDB's register
   file.  This makes it easier to compute the size of the control
   register file, and somewhat easier to convert to and from the FSAVE
   instruction's 32-bit format.  */
#define FIRST_FPU_CTRL_REGNUM 24
#define FCTRL_REGNUM 24	        /* FPU control word */
#define FPC_REGNUM   24		/* old name for FCTRL_REGNUM */
#define FSTAT_REGNUM 25		/* FPU status word */
#define FTAG_REGNUM  26		/* FPU register tag word */
#define FCS_REGNUM   27		/* FPU instruction's code segment selector
				   16 bits, called "FPU Instruction Pointer
				   Selector" in the x86 manuals  */
#define FCOFF_REGNUM 28		/* FPU instruction's offset within segment
				   ("Fpu Code OFFset") */
#define FDS_REGNUM   29		/* FPU operand's data segment */
#define FDOFF_REGNUM 30		/* FPU operand's offset within segment */
#define FOP_REGNUM   31		/* FPU opcode, bottom eleven bits */
#define LAST_FPU_CTRL_REGNUM 31

/* These registers are present only if HAVE_SSE_REGS is #defined.
   We promise that XMM0 .. XMM7 will always have consecutive reg numbers. */
#define XMM0_REGNUM  32		/* first SSE data register */
#define XMM7_REGNUM  39		/* last  SSE data register */
#define MXCSR_REGNUM 40		/* Streaming SIMD Extension control/status */

#define IS_FP_REGNUM(n) (FP0_REGNUM <= (n) && (n) <= FP7_REGNUM)
#define IS_SSE_REGNUM(n) (XMM0_REGNUM <= (n) && (n) <= XMM7_REGNUM)

#define FPU_REG_RAW_SIZE (10)

/* Sizes of individual register sets.  These cover the entire register
   file, so summing up the sizes of those portions actually present
   yields REGISTER_BYTES.  */
#define SIZEOF_GREGS (NUM_GREGS * 4)
#define SIZEOF_FPU_REGS (8 * FPU_REG_RAW_SIZE)
#define SIZEOF_FPU_CTRL_REGS \
  ((LAST_FPU_CTRL_REGNUM - FIRST_FPU_CTRL_REGNUM + 1) * 4)
#define SIZEOF_SSE_REGS (8 * 16 + 4)

d115 2
a116 10
#ifdef HAVE_SSE_REGS
#define REGISTER_BYTES \
  (SIZEOF_GREGS + SIZEOF_FPU_REGS + SIZEOF_FPU_CTRL_REGS + SIZEOF_SSE_REGS)
#else
#ifdef HAVE_I387_REGS
#define REGISTER_BYTES (SIZEOF_GREGS + SIZEOF_FPU_REGS + SIZEOF_FPU_CTRL_REGS)
#else
#define REGISTER_BYTES (SIZEOF_GREGS)
#endif
#endif
d119 3
a121 2
#define REGISTER_BYTE(n) (i386_register_byte[(n)])
extern int i386_register_byte[];
d124 4
a127 3
   register N.  */
#define REGISTER_RAW_SIZE(n) (i386_register_raw_size[(n)])
extern int i386_register_raw_size[];
d130 2
a131 1
#define MAX_REGISTER_RAW_SIZE 16
d135 2
a136 2
#define REGISTER_VIRTUAL_SIZE(n) (i386_register_virtual_size[(n)])
extern int i386_register_virtual_size[];
d139 2
a140 1
#define MAX_REGISTER_VIRTUAL_SIZE 16
d146 6
a151 32
#define REGISTER_VIRTUAL_TYPE(N)				\
  (((N) == PC_REGNUM || (N) == FP_REGNUM || (N) == SP_REGNUM)	\
   ? lookup_pointer_type (builtin_type_void)			\
   : IS_FP_REGNUM(N) ? builtin_type_double			\
   : IS_SSE_REGNUM(N) ? builtin_type_v4sf			\
   : builtin_type_int)

/* REGISTER_CONVERTIBLE(N) is true iff register N's virtual format is
   different from its raw format.  Note that this definition assumes
   that the host supports IEEE 32-bit floats, since it doesn't say
   that SSE registers need conversion.  Even if we can't find a
   counterexample, this is still sloppy.  */
#define REGISTER_CONVERTIBLE(n) (IS_FP_REGNUM (n))

/* Convert data from raw format for register REGNUM in buffer FROM
   to virtual format with type TYPE in buffer TO.  */
extern void i387_to_double (char *, char *);

#define REGISTER_CONVERT_TO_VIRTUAL(REGNUM,TYPE,FROM,TO)	\
{								\
  double val;							\
  i387_to_double ((FROM), (char *)&val);			\
  store_floating ((TO), TYPE_LENGTH (TYPE), val);		\
}

extern void double_to_i387 (char *, char *);

#define REGISTER_CONVERT_TO_RAW(TYPE,REGNUM,FROM,TO)		\
{								\
  double val = extract_floating ((FROM), TYPE_LENGTH (TYPE));	\
  double_to_i387((char *)&val, (TO));				\
}
@


1.1.1.9
log
@import gdb-1999-10-25 snapshot
@
text
@d126 2
a127 2
			 "fctrl", "fstat",  "ftag",  "fiseg",	\
                         "fioff", "foseg",  "fooff", "fop",	\
@


1.1.1.10
log
@import gdb-1999-11-16 snapshot
@
text
@d151 5
a155 5
/* All of these control registers (except for FCOFF and FDOFF) are
   sixteen bits long (at most) in the FPU, but are zero-extended to
   thirty-two bits in GDB's register file.  This makes it easier to
   compute the size of the control register file, and somewhat easier
   to convert to and from the FSAVE instruction's 32-bit format.  */
@


1.1.1.11
log
@import gdb-1999-12-07 snapshot
@
text
@a261 7
/* Print out the i387 floating point state.  */
#ifdef HAVE_I387_REGS
extern void i387_float_info (void);
#define FLOAT_INFO { i387_float_info (); }
#endif


@


