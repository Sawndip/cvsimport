head	1.12;
access;
symbols
	insight_7_6-2013-04-10-branchpoint:1.12
	gdb_7_6-branch:1.12.0.4
	gdb_7_5-branch:1.12.0.2
	gdb_7_4-branch:1.11.0.8
	gdb_7_3-branch:1.11.0.6
	gdb_7_1-branch:1.11.0.4
	gdb_7_0-branch:1.11.0.2
	arc-sim-20090309:1.10
	arc-insight_6_8-branch:1.10.0.10
	arc-insight_6_8-branchpoint:1.10
	insight_6_8-branch:1.10.0.8
	insight_6_8-branchpoint:1.10
	gdb_6_8-branch:1.10.0.6
	insight_6_6-20070208-release:1.10
	gdb_6_6-branch:1.10.0.4
	gdb_6_6-2006-11-15-branchpoint:1.10
	insight_6_5-20061003-release:1.10
	gdb_6_5-branch:1.10.0.2
	gdb_6_5-2006-05-14-branchpoint:1.10
	gdb-csl-gxxpro-6_3-branch:1.9.0.8
	gdb-csl-gxxpro-6_3-branchpoint:1.9
	gdb_6_4-branch:1.9.0.6
	gdb_6_4-2005-11-01-branchpoint:1.9
	gdb_6_1-2004-04-05-release:1.9
	gdb_6_1-branch:1.9.0.4
	gdb_6_1-2004-03-01-gmt-branchpoint:1.9
	gdb_6_0-2003-10-04-release:1.9
	gdb_6_0-branch:1.9.0.2
	gdb_6_0-2003-06-23-branchpoint:1.9
	gdb_5_3-2002-12-12-release:1.6
	gdb_5_3-branch:1.6.0.2
	gdb_5_3-2002-09-04-branchpoint:1.6
	gdb_5_2_1-2002-07-23-release:1.4
	gdb_5_2-2002-04-29-release:1.4
	gdb_5_2-branch:1.4.0.2
	gdb_5_2-2002-03-03-branchpoint:1.4
	gdb_5_1_1-2002-01-24-release:1.1.1.1
	cygnus_cvs_20020108_pre:1.4
	gdb_5_1_0_1-2002-01-03-branch:1.1.1.1.0.10
	gdb_5_1_0_1-2002-01-03-branchpoint:1.1.1.1
	gdb_5_1-2001-11-21-release:1.1.1.1
	gdb_s390-2001-09-26-branch:1.1.1.1.0.8
	gdb_s390-2001-09-26-branchpoint:1.1.1.1
	gdb_5_1-2001-07-29-branch:1.1.1.1.0.6
	gdb_5_1-2001-07-29-branchpoint:1.1.1.1
	dberlin-typesystem-branch:1.1.1.1.0.4
	dberlin-typesystem-branchpoint:1.1.1.1
	insight-precleanup-2001-01-01:1.1.1.1
	gdb_5_0-2000-05-19-release:1.1.1.1
	gdb_4_18_2-2000-05-18-release:1.1.1.1
	gdb_4_95_1-2000-05-11-snapshot:1.1.1.1
	gdb_4_95_0-2000-04-27-snapshot:1.1.1.1
	gdb_5_0-2000-04-10-branch:1.1.1.1.0.2
	gdb_5_0-2000-04-10-branchpoint:1.1.1.1
	repo-unification-2000-02-06:1.1.1.1
	insight-2000-02-04:1.1.1.1
	SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.12
date	2012.05.25.10.34.32;	author rosch;	state Exp;
branches;
next	1.11;

1.11
date	2008.08.02.22.08.32;	author kseitz;	state Exp;
branches;
next	1.10;

1.10
date	2005.12.23.18.26.50;	author eliz;	state Exp;
branches;
next	1.9;

1.9
date	2003.02.04.07.43.32;	author hunt;	state Exp;
branches;
next	1.8;

1.8
date	2002.12.03.22.52.23;	author hunt;	state Exp;
branches;
next	1.7;

1.7
date	2002.10.15.21.19.51;	author hunt;	state Exp;
branches;
next	1.6;

1.6
date	2002.06.07.09.22.44;	author hunt;	state Exp;
branches;
next	1.5;

1.5
date	2002.03.05.22.22.20;	author hunt;	state Exp;
branches;
next	1.4;

1.4
date	2001.10.18.17.57.50;	author hunt;	state Exp;
branches;
next	1.3;

1.3
date	2001.10.04.15.01.36;	author tromey;	state Exp;
branches;
next	1.2;

1.2
date	2001.08.28.23.04.59;	author kseitz;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.07.00.19.42;	author jsm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.07.00.19.42;	author jsm;	state Exp;
branches;
next	;


desc
@@


1.12
log
@2012-05-25  Roland Schwingel  <roland.schwingel@@onevision.com>

   * library/locals.tcl: Updated copyright.
   (reconfig): New method for getting prefs updates.
   * library/prefs.tcl: Updated copyright.
   (pref_read): Moved comment. Take color for changed
   fields from gdb/src/PC_TAG prefs value.
   (pref_set_defaults): Change default of
   PC_TAG color to a somewhat darker green.
   (pref_set_colors): Call pref_load_default in central place.
   (pref_set_option_db): Remove hard wired old color for
   changed values.
   * library/regwin.itb: Update copyright.
   (reconfig): Update highlight color of register table.
   * library/srcpref.itb: Update copyright.
   (_build_win): Change text of PC color chooser.
   (_apply): Update global changed fields color from PC_TAG color.
   * library/vartree.itb (update_var): use changed field color from
   global colors list.
   (_init_data): Remove local copy of changed vars color.
@
text
@# Source preferences dialog for Insight.
# Copyright (C) 1998-2012 Red Hat, Inc.
#
# This program is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License (GPL) as published by
# the Free Software Foundation; either version 2 of the License, or (at
# your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.


# ------------------------------------------------------------------
#  CONSTRUCTOR - create new source preferences window
# ------------------------------------------------------------------
itcl::body SrcPref::constructor {args} {
  window_name "Source Preferences"
  _init_var
  _build_win
}

# ------------------------------------------------------------------
#  METHOD:  init_var - initialize preference variables
# ------------------------------------------------------------------
itcl::body SrcPref::_init_var {} {
  set vlist {gdb/src/PC_TAG gdb/src/STACK_TAG gdb/src/BROWSE_TAG
    gdb/src/run_attach gdb/src/run_load gdb/src/run_run
    gdb/src/run_cont gdb/src/bp_fg gdb/src/temp_bp_fg 
    gdb/src/trace_fg gdb/src/thread_fg gdb/src/variableBalloons
    gdb/src/source2_fg gdb/src/tab_size gdb/mode gdb/editor
    gdb/B1_behavior}

  foreach var $vlist {
    set _saved($var) [pref get $var]
    set _new($var) $_saved($var)
  }
}


# ------------------------------------------------------------------
#  METHOD:  build_win - build the dialog
# ------------------------------------------------------------------
itcl::body SrcPref::_build_win {} {
  frame $itk_interior.f
  frame $itk_interior.f.a
  frame $itk_interior.f.b
  set f $itk_interior.f.a

  # Colors frame
  set a [Labelledframe $f.colors]
  $a configure -anchor nw -text {Colors}
  set w [$f.colors get_frame]

  set color [pref get gdb/src/PC_TAG]
  label $w.pcl -text {Highlight}
  button $w.pcb -text {     } -activebackground $color -bg $color \
    -command [code $this _pick $color $w.pcb PC_TAG]
  
  set color [pref get gdb/src/STACK_TAG]
  label $w.stl -text {Stack}
  button $w.stb -text {     } -activebackground $color -bg $color \
    -command [code $this _pick $color $w.stb STACK_TAG]

  set color [pref get gdb/src/BROWSE_TAG]
  label $w.brl -text {Browse}
  button $w.brb -text {     } -activebackground $color -bg $color\
    -command [code $this _pick $color $w.brb BROWSE_TAG]

  set color [pref get gdb/src/source2_fg]
  label $w.s2l -text {Mixed Source}
  button $w.s2b -text {     } -activebackground $color -bg $color \
    -command [code $this _pick $color $w.s2b source2_fg]

  set color [pref get gdb/src/bp_fg]
  label $w.nbpl -text {Normal Breakpoint}
  button $w.nbpb -text {     } -activebackground $color -bg $color\
    -command [code $this _pick $color $w.nbpb bp_fg]
  
  set color [pref get gdb/src/temp_bp_fg]
  label $w.tbpl -text {Temporary Breakpoint}
  button $w.tbpb -text {     } -activebackground $color -bg $color \
    -command [code $this _pick $color $w.tbpb temp_bp_fg]
  
  set color [pref get gdb/src/thread_fg]
  label $w.dbpl -text {Thread Breakpoint}
  button $w.dbpb -text {     } -activebackground $color -bg $color \
    -command [code $this _pick $color $w.dbpb thread_fg]

  set color [pref get gdb/src/trace_fg]
  label $w.tpl -text {Tracepoint}
  button $w.tpb -text {     } -activebackground $color -bg $color \
    -command [code $this _pick $color $w.tpb trace_fg]

  grid $w.pcl $w.pcb $w.nbpl $w.nbpb -padx 10 -pady 2 -sticky w
  grid $w.stl $w.stb $w.tbpl $w.tbpb -padx 10 -pady 2 -sticky w
  grid $w.brl $w.brb $w.dbpl $w.dbpb -padx 10 -pady 2 -sticky w
  grid $w.s2l $w.s2b $w.tpl  $w.tpb  -padx 10 -pady 2 -sticky w

  frame $f.rmv

  # Debug Mode frame
  set a [Labelledframe $f.rmv.mode]
  $a configure -anchor nw -text "Mouse Button-1 Behavior"
  set w [$f.rmv.mode get_frame]

  if {[pref get gdb/mode]} {
    set state normal
  } else {
    pref set gdb/B1_behavior 1
    set state disabled
  }

  radiobutton $w.async -text "Set/Clear Tracepoints"  \
    -variable [scope _new(gdb/B1_behavior)] -value 0 -state $state
  radiobutton $w.sync  -text "Set/Clear Breakpoints" \
    -variable [scope _new(gdb/B1_behavior)] -value 1 -state $state
  
  pack $w.async $w.sync -side top

  # Variable Balloons
  set a [Labelledframe $f.rmv.var]
  $a configure -anchor nw -text "Variable Balloons"
  set w [$f.rmv.var get_frame]
  set var _new(gdb/src/variableBalloons)
  radiobutton $w.var_on -text "On " -variable [scope $var] -value 1
  radiobutton $w.var_off -text "Off" -variable [scope $var] -value 0
  pack $w.var_on $w.var_off -side top
  grid $f.rmv.mode -sticky nsew -pady 5 -row 0 -column 0
  grid $f.rmv.var -sticky nsew -pady 5 -row 0 -column 2
  grid columnconfigure $f.rmv 0 -weight 1
  grid columnconfigure $f.rmv 1 -minsize 4
  grid columnconfigure $f.rmv 2 -weight 1
  grid rowconfigure $f.rmv 0 -weight 1


  frame $f.x
  # Tab size
  itk_component add size {
    iwidgets::spinint $f.x.size -labeltext "Tab Size" -range {1 16} \
      -step 1 -fixed 2 -width 2 -textvariable [scope _new(gdb/src/tab_size)] \
      -wrap 0 -textbackground $::Colors(textbg)
  }
  $f.x.size delete 0 end
  $f.x.size insert end $_saved(gdb/src/tab_size)

  # Linenumbers
  # commented out because this option isn't really useful
#  checkbutton $f.x.linenum -text "Line Numbers" \
#    -variable [pref varname gdb/src/linenums]
#  pack $f.x.size $f.x.linenum -side left -padx 5 -pady 5
  pack $f.x.size -side left -padx 5 -pady 5

  # Disassembly flavor - We tell whether this architecture supports
  # the flag by checking whether the flag exists.  
  
  set have_disassembly_flavor 0
  set vals [list_disassembly_flavors]
  if {[llength $vals] != 0} {
    set have_disassembly_flavor 1
    frame $f.dis
    label $f.dis.l -text "Disassembly Flavor: "
    combobox::combobox $f.dis.combo -maxheight 15 -width 15 \
      -font global/fixed -editable 0 -command [code $this _set_flavor] \
      -bg $::Colors(textbg)
    
    foreach elem $vals {
      $f.dis.combo list insert end $elem
    }
    
    set _saved_disassembly_flavor [get_disassembly_flavor]
    $f.dis.combo entryset $_saved_disassembly_flavor
    
    pack $f.dis.l -side left
    pack $f.dis.combo -side left -padx 4
    
  } else {
    set _saved_disassembly_flavor ""
  }

  # External editor.
  frame $f.exted
  label $f.exted.l -text "External Editor: "
  entry $f.exted.e -width 40 -textvariable [scope _new(gdb/editor)]
  pack $f.exted.l -side left
  pack $f.exted.e -side left -padx 4

  pack $f.colors -fill both -expand 1
  pack $f.rmv  -fill both -expand yes
  pack $f.x -fill x -expand yes
  
  if {$have_disassembly_flavor} {
    pack $f.dis -side top -fill x -padx 4
  }

  pack $f.exted -side top -fill x -padx 4 -pady 4

  button $itk_interior.f.b.ok -text OK -width 7 -underline 0 -command [code $this _save]
  button $itk_interior.f.b.apply -text Apply -width 7 -underline 0 -command [code $this _apply]
  button $itk_interior.f.b.quit -text Cancel -width 7 -underline 0 -command [code $this _cancel]
  standard_button_box $itk_interior.f.b
  pack $itk_interior.f.a $itk_interior.f.b $itk_interior.f -expand yes -fill both -padx 5 -pady 5
}

# ------------------------------------------------------------------
#  METHOD:  apply - apply changes
# ------------------------------------------------------------------
itcl::body SrcPref::_apply {} {
  foreach var [array names _new] {
    if {$_new($var) != [pref get $var]} {
      #debug "$var = $_new($var)"
      pref set $var $_new($var)
    }
    
    # Update color for changed values.
    global Colors
    set Colors(change) [pref get gdb/src/PC_TAG]
  }
  if {$_new_disassembly_flavor != ""} {
    gdb_cmd "set disassembly-flavor $_new_disassembly_flavor"
    pref set gdb/src/disassembly-flavor $_new_disassembly_flavor
  }
  ManagedWin::restart
}

itcl::body SrcPref::cancel {} {
  _save
}

# ------------------------------------------------------------------
#  METHOD:  _cancel
# ------------------------------------------------------------------
itcl::body SrcPref::_cancel {} {
  set any_changed 0
  
  foreach elem [array names _saved] {
    set cur_val [pref get $elem]
    if {[string compare $cur_val $_saved($elem)] != 0} {
      set any_changed 1
      pref set $elem $_saved($elem)
    }
  }

  if {$_new_disassembly_flavor != ""} {
    set any_changed 1
    gdb_cmd "set disassembly-flavor $_saved_disassembly_flavor"
    pref set gdb/src/disassembly-flavor $_saved_disassembly_flavor
  }
  
  if {$any_changed} {
    ManagedWin::restart
  }
  unpost
}

# ------------------------------------------------------------------
#  METHOD:  save - apply changes and quit
# ------------------------------------------------------------------
itcl::body SrcPref::_save {} {
  _apply
  unpost
}

# ------------------------------------------------------------------
#  METHOD:  _set_flavor - sets the disassembly flavor.  The set disassembly-flavor
#           gdb command is already known to exist, so I don't have to check...
# ------------------------------------------------------------------
itcl::body SrcPref::_set_flavor {w new_mode} {
  $w entryset $new_mode
  set _new_disassembly_flavor $new_mode
}


# ------------------------------------------------------------------
#  METHOD:  pick - pick colors
# ------------------------------------------------------------------
itcl::body SrcPref::_pick {color win tag} {
  set new_color [tk_chooseColor -initialcolor $color -title "Choose color"]
  if {$new_color != $color && $new_color != {}} {
    set _new(gdb/src/$tag) $new_color
    $win configure -activebackground $new_color -bg $new_color
  }
}

@


1.11
log
@        * generic/gdbtk-cmds.c: Don't include itcl.h.
        * generic/gdbtk-hooks.c: Likewise.
        * generic/gdbtk.c: Include tcl.h and tk.h instead of itcl.h
        and itk.h.
        (gdbtk_init): Rewrite to accommodate using a system-provided
        Tcl, Tk, Itcl, Itk.
        (gdbtk_source_start_file) [!_WIN32]: Don't call error() when
        we fail to source the start file. Just dump the message to stderr.
        Throw an exception indicating the failure.
        * library/ehandler.itb (GDBEventHander::dispatch): "itcl_info" is
        deprecated: use "itcl::find objects" instead.
        * library/managedwin.itb (window_instance): Ditto.
        (restart): Ditto.
        (shutdown): Ditto.
        (_open): Ditto.
        (find): Ditto.
        * library/globalpref.itb (_build_win): Don't pass config arguments
        for libgui widgets to the constructor. Configure the widget after
        creation.
        * library/srcpref.itb (_build_win): Ditto.
        * library/main.tcl: Update Tcl, Tk, Itcl, Itk, and Iwidgets (just
        added to this loop) version requirements.
        No need to initialize Iwidgets separately.
        * plugins/Make-rules (TCLHDIR): Renamed to TCL_INCLUDES. Change
        all references.
        (TCL_BUILD_LIB_SPEC): Renamed to TCL_LIBRARY. Change all references.
        * plugins/acinclude.m4: Include the standard tcl.m4 instead
        of the sourceware-derived one.
        * plugins/configure.ac: Use Tcl's standard SC_* macros instead of
        the sourceware-derived CYG_AC_* macros.
        Add logic to deal with using a system-supplied Tcl/Tk.
        * plugins/configure: Regenerated.
        * plugins/Makefile.in: Regenerated.
@
text
@d2 1
a2 1
# Copyright (C) 1998, 1999, 2002, 2003, 2008 Red Hat
d57 1
a57 1
  label $w.pcl -text {PC}
d215 4
@


1.10
log
@	* library/attachdlg.itb:
	* library/actiondlg.tcl:
	* library/about.tcl:
	* library/ehandler.itb:
	* library/editor.tcl:
	* library/download.ith:
	* library/download.itb:
	* library/debugwin.ith:
	* library/debugwin.itb:
	* library/cspref.ith:
	* library/cspref.itb:
	* library/console.ith:
	* library/console.itb:
	* library/browserwin.ith:
	* library/browserwin.itb:
	* library/bpwin.ith:
	* library/bpwin.itb:
	* library/blockframe.ith:
	* library/managedwin.ith:
	* library/managedwin.itb:
	* library/main.tcl:
	* library/locals.tcl:
	* library/ipcpref.ith:
	* library/ipcpref.itb:
	* library/ipc.tcl:
	* library/interface.tcl:
	* library/helpviewer.tcl:
	* library/globalpref.ith:
	* library/globalpref.itb:
	* library/gdbwin.ith:
	* library/gdbtoolbar.itcl:
	* library/gdbmenubar.itcl:
	* library/gdbevent.ith:
	* library/gdbevent.itb:
	* library/embeddedwin.ith:
	* library/ehandler.ith:
	* library/srcwin.itb:
	* library/srctextwin.ith:
	* library/srctextwin.itb:
	* library/srcpref.ith:
	* library/srcpref.itb:
	* library/srcbar.itcl:
	* library/session.tcl:
	* library/regwin.ith:
	* library/regwin.itb:
	* library/process.ith:
	* library/process.itb:
	* library/prefs.tcl:
	* library/pluginwin.itcl:
	* library/modal.tcl:
	* library/memwin.ith:
	* library/memwin.itb:
	* library/mempref.ith:
	* library/mempref.itb:
	* library/watch.tcl:
	* library/watch.tcl:
	* library/warning.tcl:
	* library/vartree.ith:
	* library/vartree.itb:
	* library/util.tcl:
	* library/tracedlg.tcl:
	* library/toplevelwin.ith:
	* library/tfind_args.tcl:
	* library/tdump.tcl:
	* library/targetselection.ith:
	* library/targetselection.itb:
	* library/stackwin.ith:
	* library/stackwin.itb:
	* library/srcwin.ith:
@
text
@d2 1
a2 1
# Copyright (C) 1998, 1999, 2002, 2003 Red Hat
d52 2
a53 1
  Labelledframe $f.colors -anchor nw -text {Colors}
d104 2
a105 1
  Labelledframe $f.rmv.mode -anchor nw -text "Mouse Button-1 Behavior"
d123 2
a124 1
  Labelledframe $f.rmv.var -anchor nw -text "Variable Balloons"
@


1.9
log
@2003-02-03  Martin M. Hunt  <hunt@@redhat.com>

        * library/globalpref.itb, library/mempref.itb, library/srcpref.itb,
        library/srcwin.itb, library/targetselection.itb, library/tracedlg.tcl:
        Set background color of comboboxes to Colors(textbg).

        * library/main.tcl: Load combobox version 2.2.

        * library/prefs.tcl: Minor optimization. Change order of main_names
        to have the most common, "main", first.
@
text
@d2 1
a2 1
# Copyright 1998, 1999, 2002, 2003 Red Hat
@


1.8
log
@2002-12-03  Martin M. Hunt  <hunt@@redhat.com>

	* library/srcpref.itb: Latest tk doesn't support
	"-col" as a grid option.  Use "-column".

	* library/regwin.itb: Ditto.
@
text
@d2 1
a2 1
# Copyright 1998, 1999, 2002 Red Hat
d162 2
a163 1
      -font global/fixed -editable 0 -command [code $this _set_flavor]
@


1.7
log
@2002-10-15  Martin M. Hunt  <hunt@@redhat.com>

	* library/* : auto_mkindex cannot rebuild
	tclIndex because it does not recognize the namespace
	import in main.tcl.  To get it to work again, rename the
	following:
		body -> itcl::body
		configbody -> itcl::configbody
		class -> itcl::class
@
text
@d127 2
a128 2
  grid $f.rmv.mode -sticky nsew -pady 5 -row 0 -col 0
  grid $f.rmv.var -sticky nsew -pady 5 -row 0 -col 2
@


1.6
log
@2002-06-07  Martin M. Hunt  <hunt@@redhat.com>

	* library/prefs.tcl (pref_set_colors): New function.  Set up colors
	from Windows system colors or X resource database. Save in array.
	(pref_set_defaults): Remove gdb/font/normal_fg, etc.
	(pref_read): Call pref_set_colors.

	* library/main.tcl: Remove call to "tix resetoptions TixGray".

	* library/bpwin.itb, library/browserwin.itb, library/console.itb,
	library/globalpref.itb, library/memwin.itb, library/process.itb,
	library/regwin.itb, library/srcpref.itb, library/srctextwin.itb,
	library/stackwin.itb, library/tdump.tcl, library/tracedlg.tcl,
	library/variables.tcl: Replace calls to [pref get gdb/fonts/*]
	for colors with references to Color array. Remove all tixOptions calls.
	Fix up colors as necessary.
@
text
@d18 1
a18 1
body SrcPref::constructor {args} {
d27 1
a27 1
body SrcPref::_init_var {} {
d45 1
a45 1
body SrcPref::_build_win {} {
d205 1
a205 1
body SrcPref::_apply {} {
d219 1
a219 1
body SrcPref::cancel {} {
d226 1
a226 1
body SrcPref::_cancel {} {
d252 1
a252 1
body SrcPref::_save {} {
d261 1
a261 1
body SrcPref::_set_flavor {w new_mode} {
d270 1
a270 1
body SrcPref::_pick {color win tag} {
@


1.5
log
@2002-03-05  Martin M. Hunt  <hunt@@redhat.com>

	* library/prefs.tcl (pref_read): If a preference specifies
	"src-font", substitute "global/fixed".
	(pref_set_defaults): Change defaults from "src-font" to
	"global/fixed". Do not create font object "src-font". Do
	not add hook to trace its changes.
	(pref_src-font_trace): Remove.

	* library/console.itb (Console::_update_option): Remove
	font update because this happens automatically.

	* library/globalpref.itb: No need to set
	changed flag for fonts; updates happen automatically
	when prefs are updated.

	* library/bpwin.itb: Replaced src-font with global/fixed.
	* library/browserwin.itb: Ditto.
	* library/mempref.itb: Ditto.
	* library/memwin.itb: Ditto.
	* library/process.itb: Ditto.
	* library/regwin.itb: Ditto.
	* library/srcbar.itcl: Ditto.
	* library/srcpref.itb: Ditto.
	* library/srctextwin.itb: Ditto.
	* library/srcwin.itb: Ditto.
	* library/stackwin.itb: Ditto.
	* library/tdump.tcl: Ditto.
	* library/tracedlg.tcl: Ditto.
	* library/variables.tcl: Ditto.
	* library/watch.tcl: Ditto.
@
text
@d140 1
a140 1
      -wrap 0
@


1.4
log
@2001-10-18  Martin M. Hunt  <hunt@@redhat.com>

	* library/srcpref.itb (SrcPref::contructor): Move array
	initialization to _init_var.
	(SrcPref::_init_var): New method to initialize _saved and
	_new arrays.
	(SrcPref::buildwin): Rename to _buildwin. Have widgets use
	_new instead of [pref varname ...].  Set initial value of
	tab size spinint.
	(SrcPref::_apply): Set prefs with values from the _new array.
	(SrcPref::_cancel): Reset disassembly flavor and don't call
	_save because nothing is saved unless OK is selected.
	(SrcPref::set_flavor): Rename to _set_flavor.
	(SrcPref::_pick): Just set _new, not prefs.

	* library/srcpref.ith: Add private variable _new and
	private method cancel. Rename others with leading underscore.
@
text
@d1 2
a2 2
# Source preferences dialog for GDBtk.
# Copyright 1998, 1999 Cygnus Solutions
d161 2
a162 2
    combobox::combobox $f.dis.combo -maxheight 15 -width 15 -font src-font -editable 0 \
      -command [code $this _set_flavor]
@


1.3
log
@	* library/tclIndex: Updated.
	* library/prefs.tcl (pref_set_defaults): Define gdb/editor
	preference.
	* library/srcpref.itb (SrcPref::constructor): Save gdb/editor
	preference.
	(SrcPref::build_win): Added external editor control.
	* library/srctextwin.itb (SrcTextWin::do_source_popup): Always
	enable external editor.  Use `code' instead of `list'.
	* library/srcwin.itb (SrcWin::edit): Use Editor::edit.
	* library/editor.tcl: New file.
	* generic/gdbtk.c (enable_external_editor): Removed.
	(external_editor_command): Default to NULL.
	(gdbtk_init): Don't set enable_external_editor.  Free external
	editor command when finished with it.
@
text
@d20 3
d24 15
a38 17
  build_win
  set saved(gdb/src/PC_TAG)           [pref get gdb/src/PC_TAG]
  set saved(gdb/src/STACK_TAG)        [pref get gdb/src/STACK_TAG]
  set saved(gdb/src/BROWSE_TAG)       [pref get gdb/src/BROWSE_TAG]
  set saved(gdb/src/run_attach)       [pref get gdb/src/run_attach]
  set saved(gdb/src/run_load)         [pref get gdb/src/run_load]
  set saved(gdb/src/run_run)          [pref get gdb/src/run_run]
  set saved(gdb/src/run_cont)         [pref get gdb/src/run_cont]
  set saved(gdb/src/bp_fg)            [pref get gdb/src/bp_fg]
  set saved(gdb/src/temp_bp_fg)       [pref get gdb/src/temp_bp_fg]
  set saved(gdb/src/trace_fg)         [pref get gdb/src/trace_fg]
  set saved(gdb/src/thread_fg)        [pref get gdb/src/thread_fg]
  set saved(gdb/src/variableBalloons) [pref get gdb/src/variableBalloons]
  set saved(gdb/src/source2_fg)       [pref get gdb/src/source2_fg]
  set saved(gdb/src/tab_size)         [pref get gdb/src/tab_size]
  set saved(gdb/mode)                 [pref get gdb/mode]
  set saved(gdb/editor)		      [pref get gdb/editor]
d41 1
d45 1
a45 1
body SrcPref::build_win {} {
d105 1
a105 1
  set var [pref varname gdb/B1_behavior]
d113 5
a117 5
  radiobutton $w.async -text "Set/Clear Tracepoints" -variable $var \
    -value 0 -state $state
  radiobutton $w.sync  -text "Set/Clear Breakpoints" -variable $var  \
    -value 1 -state $state

d123 3
a125 3
  set var [pref varname gdb/src/variableBalloons]
  radiobutton $w.var_on -text "On " -variable $var -value 1
  radiobutton $w.var_off -text "Off" -variable $var -value 0
d139 1
a139 1
      -step 1 -fixed 2 -width 2 -textvariable [pref varname gdb/src/tab_size] \
d142 2
d162 1
a162 1
      -command [code $this set_flavor]
d168 2
a169 2
    set current_disassembly_flavor [get_disassembly_flavor]
    $f.dis.combo entryset $current_disassembly_flavor
d175 1
a175 1
    set current_disassembly_flavor ""
d181 1
a181 1
  entry $f.exted.e -width 40 -textvariable [pref varname gdb/editor]
d206 9
a214 3
  if {$current_disassembly_flavor != ""} {
    gdb_cmd "set disassembly-flavor $current_disassembly_flavor"
    pref set gdb/src/disassembly-flavor $current_disassembly_flavor
d219 4
d224 1
a224 1
#  METHOD:  cancel
d236 6
d244 1
a244 3
    _save
  } else {
    unpost
d246 1
d258 1
a258 1
#  METHOD:  set_flavor - sets the disassembly flavor.  The set disassembly-flavor
d261 1
a261 1
body SrcPref::set_flavor {w new_mode} {
d263 1
a263 1
  set current_disassembly_flavor $new_mode
d273 1
a273 1
    pref set gdb/src/$tag $new_color
@


1.2
log
@	* library/srcpref.itb (build_win): Use iwidgets::spinint
	instead of tixControl.
@
text
@d37 1
d174 7
d188 2
@


1.1
log
@Initial revision
@
text
@d134 5
a138 3
  tixControl $f.x.size -label "Tab Size" -integer true -max 16 -min 1 \
    -variable [pref varname gdb/src/tab_size] \
    -options { entry.width 2	entry.font src-font}
@


1.1.1.1
log
@import insight-2000-02-04 snapshot (2nd try)
@
text
@@
