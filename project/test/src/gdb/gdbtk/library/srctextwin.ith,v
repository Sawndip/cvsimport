head	1.15;
access;
symbols
	insight_7_6-2013-04-10-branchpoint:1.15
	gdb_7_6-branch:1.15.0.10
	gdb_7_5-branch:1.15.0.8
	gdb_7_4-branch:1.15.0.6
	gdb_7_3-branch:1.15.0.4
	gdb_7_1-branch:1.15.0.2
	gdb_7_0-branch:1.14.0.12
	arc-sim-20090309:1.14
	arc-insight_6_8-branch:1.14.0.10
	arc-insight_6_8-branchpoint:1.14
	insight_6_8-branch:1.14.0.8
	insight_6_8-branchpoint:1.14
	gdb_6_8-branch:1.14.0.6
	insight_6_6-20070208-release:1.14
	gdb_6_6-branch:1.14.0.4
	gdb_6_6-2006-11-15-branchpoint:1.14
	insight_6_5-20061003-release:1.14
	gdb_6_5-branch:1.14.0.2
	gdb_6_5-2006-05-14-branchpoint:1.14
	gdb-csl-gxxpro-6_3-branch:1.13.0.8
	gdb-csl-gxxpro-6_3-branchpoint:1.13
	gdb_6_4-branch:1.13.0.6
	gdb_6_4-2005-11-01-branchpoint:1.13
	gdb_6_1-2004-04-05-release:1.13
	gdb_6_1-branch:1.13.0.4
	gdb_6_1-2004-03-01-gmt-branchpoint:1.13
	gdb_6_0-2003-10-04-release:1.13
	gdb_6_0-branch:1.13.0.2
	gdb_6_0-2003-06-23-branchpoint:1.13
	gdb_5_3-2002-12-12-release:1.12
	gdb_5_3-branch:1.12.0.12
	gdb_5_3-2002-09-04-branchpoint:1.12
	gdb_5_2_1-2002-07-23-release:1.12
	gdb_5_2-2002-04-29-release:1.12
	gdb_5_2-branch:1.12.0.10
	gdb_5_2-2002-03-03-branchpoint:1.12
	gdb_5_1_1-2002-01-24-release:1.12
	cygnus_cvs_20020108_pre:1.12
	gdb_5_1_0_1-2002-01-03-branch:1.12.0.8
	gdb_5_1_0_1-2002-01-03-branchpoint:1.12
	gdb_5_1-2001-11-21-release:1.12
	gdb_s390-2001-09-26-branch:1.12.0.6
	gdb_s390-2001-09-26-branchpoint:1.12
	gdb_5_1-2001-07-29-branch:1.12.0.4
	gdb_5_1-2001-07-29-branchpoint:1.12
	dberlin-typesystem-branch:1.12.0.2
	dberlin-typesystem-branchpoint:1.12
	insight-precleanup-2001-01-01:1.8
	gdb_5_0-2000-05-19-release:1.2
	gdb_4_18_2-2000-05-18-release:1.2
	gdb_4_95_1-2000-05-11-snapshot:1.2
	gdb_4_95_0-2000-04-27-snapshot:1.2
	gdb_5_0-2000-04-10-branch:1.2.0.2
	gdb_5_0-2000-04-10-branchpoint:1.2
	repo-unification-2000-02-06:1.1.1.1
	insight-2000-02-04:1.1.1.1
	SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.15
date	2009.10.09.02.51.47;	author kseitz;	state Exp;
branches;
next	1.14;

1.14
date	2005.12.23.18.26.50;	author eliz;	state Exp;
branches;
next	1.13;

1.13
date	2002.10.15.21.19.51;	author hunt;	state Exp;
branches;
next	1.12;

1.12
date	2001.04.20.18.47.33;	author kseitz;	state Exp;
branches;
next	1.11;

1.11
date	2001.04.19.22.51.02;	author kseitz;	state Exp;
branches;
next	1.10;

1.10
date	2001.01.19.16.09.10;	author fnasser;	state Exp;
branches;
next	1.9;

1.9
date	2001.01.17.23.45.06;	author fnasser;	state Exp;
branches;
next	1.8;

1.8
date	2000.12.07.20.14.02;	author tromey;	state Exp;
branches;
next	1.7;

1.7
date	2000.12.01.06.37.57;	author tromey;	state Exp;
branches;
next	1.6;

1.6
date	2000.11.30.22.49.46;	author tromey;	state Exp;
branches;
next	1.5;

1.5
date	2000.11.30.22.37.29;	author tromey;	state Exp;
branches;
next	1.4;

1.4
date	2000.08.10.15.55.06;	author fnasser;	state Exp;
branches;
next	1.3;

1.3
date	2000.04.27.16.46.12;	author jingham;	state Exp;
branches;
next	1.2;

1.2
date	2000.02.24.03.12.58;	author kseitz;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.07.00.19.42;	author jsm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.07.00.19.42;	author jsm;	state Exp;
branches;
next	;


desc
@@


1.15
log
@	* library/srctextwin.ith (ExecutableLineLimit): Define.
	* library/srctextwin.itb (insertBreakTag): Search for next
	executable line, just in case they changed.
	When there are no tags on a line, the proper index is
	line.4, not just 4.
@
text
@# SrcTextWin class definition, for Insight
# Copyright (C) 1997, 1998, 1999, 2001, 2009 Red Hat, Inc.
#
# This program is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License (GPL) as published by
# the Free Software Foundation; either version 2 of the License, or (at
# your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.


itcl::class SrcTextWin {
  inherit itk::Widget GDBWin

  public {
    variable Tracing	;# 1 if we are running in trace mode
    variable Browsing     0 ;# 1 if we are browsing a trace experiment
    variable parent {}	;# the parent SrcWin
    variable ignore_var_balloons 0;  # ignore all variable balloons

    # Set the height of the src window
    variable textheight 5i {
      catch {$itk_interior.p configure -height $itk_option(-textheight)}
    }
    
    method constructor {args}
    method destructor {}
    method disassembly_changed {}
    method reconfig {}
    method trace_find_hook {mode from_tty}
    method set_control_mode {mode}
    method build_popups {}
    method build_win {}
    method SetRunningState {state}
    method enable {on}
    method setTabs {win {asm S}}
    method enable_disable_src_tags {win how}
    method config_win {win {asm S}}
    method addPopup {menu label command {abg {}} {browse 1} {run 1}}
    method updateBalloon {}
    method ClearTags {}
    method FillSource {winname tagname filename funcname line addr pc_addr lib}
    method FillAssembly {winname tagname filename funcname line addr pc_addr lib}
    method FillMixed {winname tagname filename funcname line addr pc_addr lib}
    method location {tagname filename funcname line addr pc_addr lib}
    method LoadFile {winname name lib mtime_changed}
    method display_line { win line }
    method display_breaks {}
    method insertBreakTag {win linenum tag}
    method removeBreakTag {win linenum tag }
    method bp {action bpnum addr {linenum {}} {file {}} {type 0} {enabled 0} {thread -1}}
    method do_bp { win action linenum type bpnum enabled thread asm}
    method hasBP {win line}
    method hasTP {win line}
    method report_source_location {}
    method lookup_line {win y}
    method continue_to_here {{win {}} {y -1} {threads -1}}
    method jump_to_here {{win {}} {y -1} {threads -1}}
    method set_bp_at_line {{type N} {win {}} {y -1} {threads "-1"}}
    method remove_bp_at_line {{win {}} {y -1}}
    method enable_disable_at_line {action}
    method set_tp_at_line {{win {}} {y -1}}
    method next_hit_at_line {{win {}} {y -1}}
    method remove_tp_at_line {{win {}} {y -1}}
    method do_tag_popup {name X Y y}
    method do_source_popup { X Y x y }
    method addToWatch {var}
    method do_key {key}
    method mode_get {}
    method mode_set {new_mode {go 1}}
    method cancelMotion {}
    method motion {type win x y}
    method showBPBalloon {win x y}
    method showBalloon {win x y}
    method getVariable {x y {line {}}}
    method trace_help {args}
    method line_is_executable {win line}
    method tracepoint_range {win low high}
    method search {exp direction}
    method LoadFromCache {pname name asm lib}
    method UnLoadFromCache {pname oldpane name asm lib}
    method print {top}
    method ask_thread_bp {}
    method do_thread_bp {listbox}
    method test_get {var}
    method clear_file {}
    method get_file {}
    method set_tag_to_stack {}

    # GDB Events
    method breakpoint {event}
    method tracepoint {event}
    method set_variable {event}
  }

  private {
    variable top	;# toplevel window
    variable twin	;# top text window of pane
    variable _tpane	;# top pane name
    variable bwin ""	;# bottom text window of pane
    variable _bpane ""	;# bottom pane name

    variable do_display_breaks 0	;# flag    
    variable popups
    
    variable timeoutID {} ;# The timeout ID for the variable balloon help
    variable UseVariableBalloons
    
    variable mode_changed 0
    variable current	;# our current state
    variable pc		;# where the PC is now
    variable oldmode ""	;# remember the mode we want, even if we can't have it
    
    variable Running 0	;# another way to disable things while target is active
    variable Linenums	;# use linenumbers?
    variable SearchIndex 1.0	;# static
    variable id	;#thread id to line mapping
    # needed for assembly support
    variable _map
    variable Cname  ""	;# cache index name for _map
    # cache is not shared among windows yet.  That could be a later
    # optimization
    variable Stwc	;# Source Text Window Cache
    variable filenum 0

    # The variable object which the variable balloon describes 
    variable _balloon_var {}

    method balloon_value {variable}
    method _mtime_changed {filename}
    method _initialize_srctextwin {}
    method _clear_cache {}
    method _highlightAsmLine {win addr pc_addr tagname filename funcname} {}

    proc makeBreakDot {size colorList {image {}}}
  }


  
  # common variables are shared among all objects of this type
  # break_images stores the images associated with the break dot.
  # bp
  # temp_bp
  # disabled_bp
  # tp
  # thread_bp
  protected common break_images

  # This is the list of bp types.  Be nice, and don't put spaces in
  # any of the elements of this list...
  protected common bp_types {bp temp_bp disabled_bp thread_bp}

  # This variable is used in the "Continue to here" case, where we are
  # disabling then reenabling breakpoints behind the user's back to
  # implement this feature, but we don't want the user to see this...
  protected common dont_change_appearance 0

  protected common TimeOut 100 ;# The timeout value for variable balloon help

  # Executabe line search limit: When an executable changes, we might
  # have a breakpoint at a location that is no longer valid.  This variable
  # limits the search for the "nearest" (next) executable line.
  protected common ExecutableLineLimit 100
}
@


1.14
log
@	* library/attachdlg.itb:
	* library/actiondlg.tcl:
	* library/about.tcl:
	* library/ehandler.itb:
	* library/editor.tcl:
	* library/download.ith:
	* library/download.itb:
	* library/debugwin.ith:
	* library/debugwin.itb:
	* library/cspref.ith:
	* library/cspref.itb:
	* library/console.ith:
	* library/console.itb:
	* library/browserwin.ith:
	* library/browserwin.itb:
	* library/bpwin.ith:
	* library/bpwin.itb:
	* library/blockframe.ith:
	* library/managedwin.ith:
	* library/managedwin.itb:
	* library/main.tcl:
	* library/locals.tcl:
	* library/ipcpref.ith:
	* library/ipcpref.itb:
	* library/ipc.tcl:
	* library/interface.tcl:
	* library/helpviewer.tcl:
	* library/globalpref.ith:
	* library/globalpref.itb:
	* library/gdbwin.ith:
	* library/gdbtoolbar.itcl:
	* library/gdbmenubar.itcl:
	* library/gdbevent.ith:
	* library/gdbevent.itb:
	* library/embeddedwin.ith:
	* library/ehandler.ith:
	* library/srcwin.itb:
	* library/srctextwin.ith:
	* library/srctextwin.itb:
	* library/srcpref.ith:
	* library/srcpref.itb:
	* library/srcbar.itcl:
	* library/session.tcl:
	* library/regwin.ith:
	* library/regwin.itb:
	* library/process.ith:
	* library/process.itb:
	* library/prefs.tcl:
	* library/pluginwin.itcl:
	* library/modal.tcl:
	* library/memwin.ith:
	* library/memwin.itb:
	* library/mempref.ith:
	* library/mempref.itb:
	* library/watch.tcl:
	* library/watch.tcl:
	* library/warning.tcl:
	* library/vartree.ith:
	* library/vartree.itb:
	* library/util.tcl:
	* library/tracedlg.tcl:
	* library/toplevelwin.ith:
	* library/tfind_args.tcl:
	* library/tdump.tcl:
	* library/targetselection.ith:
	* library/targetselection.itb:
	* library/stackwin.ith:
	* library/stackwin.itb:
	* library/srcwin.ith:
@
text
@d2 1
a2 1
# Copyright (C) 1997, 1998, 1999, 2001 Red Hat, Inc.
d163 4
@


1.13
log
@2002-10-15  Martin M. Hunt  <hunt@@redhat.com>

	* library/* : auto_mkindex cannot rebuild
	tclIndex because it does not recognize the namespace
	import in main.tcl.  To get it to work again, rename the
	following:
		body -> itcl::body
		configbody -> itcl::configbody
		class -> itcl::class
@
text
@d2 1
a2 1
# Copyright 1997, 1998, 1999, 2001 Red Hat, Inc.
@


1.12
log
@Other half of SetVariableEvent:

	* library/srctextwin.ith (handle_set_hook): Rename to set_variable.
	* library/srctextwin.itb (set_variable): Handle SetVariableEvent.
	(constructor): Remove gdb_set_hook.
	(destructor): Ditto.
	* library/srcbar.itcl: Inherit from GDBEventHandler.
	(set_hook): Rename to set_variable and handle SetVariableEvent.
	(constructor): Remove gdb_set_hook.
	(destructor): Ditto.
	* library/regwin.ith (handle_set_hook): Renamed to set_variable.
	* library/regwin.itb (set_variable): Handle SetVariableEvent.
	(constructor): Remove gdb_set_hook.
	(destructor): Ditto.
	* library/kod.ith (set_os): Renamed to "set_variable".
	* library/kod.itb (set_variable): Handle SetVariableEvent.
	(constructor): Remove gdb_set_hook.
	(destructor): Ditto.
	* library/tclIndex: Regenerated.
@
text
@d15 1
a15 1
class SrcTextWin {
@


1.11
log
@Breakpoint/tracepoint event notification using new event model...

	* generic/gdbtk-cmds.c (gdb_set_bp): Use create_breakpoint_hook
	to notify gui of changes.
	(gdb_set_bp_addr): Ditto.
	(gdb_get_breakpoint_info): Update comments to match reality.
	* generic/gdbtk-hooks.c (breakpoint_notify): Only pass the
	breakpoint number which generated the event.
	(tracepoint_notify): Ditto for tracepoints.
	* library/interface.tcl (gdb_breakpoint_change_hook): Mark
	as deprecated and comment out definition.
	(gdbtk_tcl_breakpoint): Use new GDBEvent event "breakpoint"
	to notify rest of UI about breakpoint event.
	(gdbtk_tcl_tracepoint): Ditto for "tracepoint" event.
	* library/bpwin.ith (update): Renamed to "breakpoint".
	(breakpoint): New public method.
	(tracepoint): New public method.
	(bp_add): Take event as argument instead of number.
	(bp_modify): Ditto.
	(bp_delete): Ditto.
	* library/bpwin.itb (constructor): Remove
	gdb_breakpoint_changed_hook.
	(destructor): Ditto.
	(build_win): Insert any existing breakpoints by
	making BreakpointEvents for them.
	(breakpoint): Renamed from "update" to handle
	breakpoint events.
	Remove code to deal with tracepoints.
	(tracepoint): New method to handle tracepoint
	events.
	(bp_add): Deal with breakpoint events, not breakpoint
	numbers.
	(bp_modify): Ditto.
	(bp_delete): Ditto.
	* library/srctextwin.ith: Inherit from GDBWin.
	(breakpoint): New public method.
	(tracepoint): New public method.
	* library/srctextwin.itb (constructor): Remove
	gdb_breakpoint_changed_hook.
	(destructor): Ditto.
	(breakpoint): New method to handle breakpoint event.
	(tracepoint): New method to handle tracepoint event.
	(do_bp): Handle duplicate breakpoints for asm, too.
	(remove_bp_at_line): Delete breakpoints by number, not
	linespec. clear_command removes breakpoints from the
	breakpoint_chain BEFORE deleting the breakpoint. delete_command
	does this afterward (so we can call gdb_get_breakpoint_info on
	an about-to-be-deleted breakpoint).
@
text
@d96 1
a98 3
  protected {
    method handle_set_hook {var val}
  }
@


1.10
log
@Fix previous checkout of this:
2001-01-18  Fernando Nasser  <fnasser@@redhat.com>

        * library/srctextwin.itb (_highlightAsmLine): Add missing FUNCNAME
	parameter.
        (FillAssembly, FillMixed): Pass the FUNCNAME parameter that is
        needed by the above method.
        * library/srctextwin.ith (_highlightAsmLine): Add FUNCNAME parameter
	to method definition.
@
text
@d1 2
a2 2
# SrcTextWin class definition, for GDBtk.
# Copyright 1997, 1998, 1999 Cygnus Solutions
d16 1
a16 1
  inherit itk::Widget
d92 4
@


1.9
log
@2001-01-17  Fernando Nasser  <fnasser@@redhat.com>

        * library/srctextwin.itb (_highlightAsmLine): Add missing FILENAME
	parameter.
        (FillAssembly, FillMixed): Pass the FILENAME parameter that is
        needed by the above method.
        * library/srctextwin.ith (_highlightAsmLine): Add FILENAME parameter
	to method definition.
@
text
@d134 1
a134 1
    method _highlightAsmLine {win addr pc_addr tagname filename} {}
@


1.8
log
@	* bpwin.itb (BpWin::goto_bp): Handle multiple source windows.
	* srctextwin.itb (SrcTextWin::get_file): New method.
	(SrcTextWin::set_tag_to_stack): New method.
	* srctextwin.ith (get_file): Declare.
	* srcwin.ith (update_hook_init, window_list, pc_window): New
	common variables.
	(_choose_window, choose_and_update, is_fixed, get_file): Declare.
	* srcwin.itb (SrcWin::_choose_window): New method.
	(SrcWin::choose_and_update): Likewise.
	(SrcWin::_update): Renamed from update.  Now private.  Added `loc'
	argument.
	(SrcWin::get_file): New method.
	(SrcWin::is_fixed): Likewise.
	(SrcWin::constructor): Only add update hook once.  Append this
	object to window list.
	(SrcWin::destructor): Don't add update hook.  Remove this object
	from window list.  Clear pc_window if necessary.
	(SrcWin::get_top): New method.
	(SrcWin::_set_tag_to_stack): New method.
	(SrcWin::choose_and_display): New method.
@
text
@d134 1
a134 1
    method _highlightAsmLine {win addr pc_addr tagname} {}
@


1.7
log
@	* srctextwin.ith (enable_disable_at_line): Declare.
	* srctextwin.itb (SrcTextWin::build_popups): Create popup for
	disabled breakpoint.  Add "disable" to breakpoint menu.
	(enable_disable_at_line): New method.
	(SrcTextWin::do_bp): Don't remove the tag we are adding -- remove
	the "opposite" tag.
@
text
@d90 2
@


1.6
log
@Reverted erroneous checkin.  Sorry about that.
@
text
@d64 1
@


1.5
log
@	* prefs.tcl (pref_save): Put version number into file.  Added
	`session' to list of top-level keys.  Allow keys with many `/'s.
	(pref_read): Recognize version number.
	(escape_value): Generate URL-style encoding.
	(unescape_value): Added `version' argument.  Handle URL decoding.
@
text
@a88 2
    method get_file {}
    method set_tag_to_stack {}
@


1.4
log
@2000-08-10  Fernando Nasser  <fnasser@@cygnus.com>

	* srctextwin.itb (jump_to_here): New method. Implements the
	"Jump to Here" popup menu option.
	(build_popups): Add the "Jump to Here" option to the popup menu.
	* srctextwin.ith: Add declaration of jump_to_here().
@
text
@d89 2
@


1.3
log
@2000-04-27  James Ingham  <jingham@@leda.cygnus.com>

	These changes allow Insight to handle the case where there are
	symbols for the source files, but the source files are not in the
	location pointed to by the symbol.

	* srctextwin.itb (SrcTextWin::setTabs): Make the "asm" type for
	the source display "S" not "", which is not very clear.
        (SrcTextWin::configWin): ditto.
	(SrcTextWin::FillAssembly): Handle all return values from
	LoadFromCache.
	* (SrcTextWin::LoadFile): Handle "couldn't find file" return from
	LoadFromCache.
	* (SrcTextWin::LoadFromCache): If the source file could not be
	found, return -1 rather than choking.
	Also change "asm" type for source from "" to "S".
	* srctextwin.ith: Change the defaults for the "asm" type from ""
	to "S" for Source display.  This is just cosmetic, but clearer.
@
text
@d61 1
@


1.2
log
@        * srctextwin.ith (_highlightAsmLine): Define new method.
        * srctextwin.itb (_highlightAsmLine): New method.
        (FillAssembly, FillMixed): Use _highlightAsmLine to highlight
        the current assembly line.
@
text
@d39 1
a39 1
    method setTabs {win {asm ""}}
d41 1
a41 1
    method config_win {win {asm ""}}
@


1.1
log
@Initial revision
@
text
@d130 1
@


1.1.1.1
log
@import insight-2000-02-04 snapshot (2nd try)
@
text
@@
