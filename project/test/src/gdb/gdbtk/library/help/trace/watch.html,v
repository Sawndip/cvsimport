head	1.2;
access;
symbols
	insight_7_6-2013-04-10-branchpoint:1.2
	gdb_7_6-branch:1.2.0.20
	gdb_7_5-branch:1.2.0.18
	gdb_7_4-branch:1.2.0.16
	gdb_7_3-branch:1.2.0.14
	gdb_7_1-branch:1.2.0.12
	gdb_7_0-branch:1.2.0.10
	arc-sim-20090309:1.2
	arc-insight_6_8-branch:1.2.0.8
	arc-insight_6_8-branchpoint:1.2
	insight_6_8-branch:1.2.0.6
	insight_6_8-branchpoint:1.2
	gdb_6_8-branch:1.2.0.4
	insight_6_6-20070208-release:1.2
	gdb_6_6-branch:1.2.0.2
	gdb_6_6-2006-11-15-branchpoint:1.2
	insight_6_5-20061003-release:1.1.1.1
	gdb_6_5-branch:1.1.1.1.0.24
	gdb_6_5-2006-05-14-branchpoint:1.1.1.1
	gdb-csl-gxxpro-6_3-branch:1.1.1.1.0.22
	gdb-csl-gxxpro-6_3-branchpoint:1.1.1.1
	gdb_6_4-branch:1.1.1.1.0.20
	gdb_6_4-2005-11-01-branchpoint:1.1.1.1
	gdb_6_1-2004-04-05-release:1.1.1.1
	gdb_6_1-branch:1.1.1.1.0.18
	gdb_6_1-2004-03-01-gmt-branchpoint:1.1.1.1
	gdb_6_0-2003-10-04-release:1.1.1.1
	gdb_6_0-branch:1.1.1.1.0.16
	gdb_6_0-2003-06-23-branchpoint:1.1.1.1
	gdb_5_3-2002-12-12-release:1.1.1.1
	gdb_5_3-branch:1.1.1.1.0.14
	gdb_5_3-2002-09-04-branchpoint:1.1.1.1
	gdb_5_2_1-2002-07-23-release:1.1.1.1
	gdb_5_2-2002-04-29-release:1.1.1.1
	gdb_5_2-branch:1.1.1.1.0.12
	gdb_5_2-2002-03-03-branchpoint:1.1.1.1
	gdb_5_1_1-2002-01-24-release:1.1.1.1
	cygnus_cvs_20020108_pre:1.1.1.1
	gdb_5_1_0_1-2002-01-03-branch:1.1.1.1.0.10
	gdb_5_1_0_1-2002-01-03-branchpoint:1.1.1.1
	gdb_5_1-2001-11-21-release:1.1.1.1
	gdb_s390-2001-09-26-branch:1.1.1.1.0.8
	gdb_s390-2001-09-26-branchpoint:1.1.1.1
	gdb_5_1-2001-07-29-branch:1.1.1.1.0.6
	gdb_5_1-2001-07-29-branchpoint:1.1.1.1
	dberlin-typesystem-branch:1.1.1.1.0.4
	dberlin-typesystem-branchpoint:1.1.1.1
	insight-precleanup-2001-01-01:1.1.1.1
	gdb_5_0-2000-05-19-release:1.1.1.1
	gdb_4_18_2-2000-05-18-release:1.1.1.1
	gdb_4_95_1-2000-05-11-snapshot:1.1.1.1
	gdb_4_95_0-2000-04-27-snapshot:1.1.1.1
	gdb_5_0-2000-04-10-branch:1.1.1.1.0.2
	gdb_5_0-2000-04-10-branchpoint:1.1.1.1
	repo-unification-2000-02-06:1.1.1.1
	insight-2000-02-04:1.1.1.1
	SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2006.11.10.07.10.40;	author kseitz;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.07.00.19.42;	author jsm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.07.00.19.42;	author jsm;	state Exp;
branches;
next	;


desc
@@


1.2
log
@        * help/trace/locals.html: Remove all references to gdb.ini. Even
        Cygwin now uses .gdbinit.
        * help/trace/watch.html: Likewise.
@
text
@<HTML>
<HEAD>
<TITLE>Watch Window Help</TITLE>
</HEAD>
<BODY>
<H1>The Watch Window</H1>
<H3>Overview</H3>
<P>The Watch Window may be used to inspect any collected expression, including
global variables, static variables, local variables, function arguments,
and registers.</P>

<P>Watch Window topics:
<UL>
    <LI><UL><A HREF="#menus">Watch Menu</A>
            <LI><A HREF="#menus_fmt">Format</A>
            <LI><A HREF="#menus_remove">Remove</A>
        </UL>
    <LI><UL><A HREF="#new">Adding Watch Expressions</A>
            <LI><A HREF="#new_ent">In the Watch Window</A>
            <LI><A HREF="#new_src">In the Source Window</A>
            <LI><A HREF="#new_cast">Casting Pointers</A>
        </UL>
    <LI><UL><A HREF="#display">Watch Display</A>
            <LI><A HREF="#display_deref">Dereferencing Pointers</A>
            <LI><A HREF="#display_struct">Viewing a Structure or Class</A>
            <LI><A HREF="#display_popup">Watch Pop-up Menu</A>
        </UL>
</UL></P>

<H3><A NAME="menus">Watch Menu</A></H3>
The Watch Menu gives on-screen access to the funtions of the Watch Window.
To use any of these functions, first use the left mouse button to select an
expression from the display. Then select:

<DL>
    <DT><A NAME="menus_fmt">Format</A>
        <DD>Change the display format of the expression
    <DT><A NAME="menus_remove">Remove</A>
        <DD>Remove the expression from the Watch Window
</DL>

<H3><A NAME="new">Adding Watch Expressions</A></H3>
<A NAME="new_ent">To add an expression to the Watch Window</A>, simply enter
the expression into the entry at the bottom of the window and press return
or click the "Add Watch" button. The expression is validated and added to the
Watch Window Display.

<P><A NAME="new_src">To add an expression to the Watch Window from the
<A HREF="source.html">Source Window</A></A>, use the
"<A HREF="source.html#add_to_watch">Add to Watch</A>" option of the
<A HREF="source.html#display_popup">Source Window Pop-up Menu</A>.</P>

<P>Any legal expression may be added to the Watch Window, which will
evaluate each of its expressions everytime the program runs. Be cautious
adding expressions which cause assignments, such as "<CODE>i++</CODE>".</P>

<P>Adding a register to the Watch Window can be advantages when debugging
via a slow serial line. In this case, keeping the entire Register Window open
may be inefficient. Consider adding the register to the Watch Window. Simply
enter the name of the register preceded with a dollar sign ($) into the
Entry. For example, to watch the PC register, enter "<CODE>$pc</CODE>" into
the Watch Window Entry. The program counter is added to the Display.</P>

<P><A NAME="new_cast">To cast pointers</A>, simply enter the cast into the
Watch Window Entry at the bottom of the window. Use the same syntax for the
cast that the source file uses. If the source file uses C, the a simple
cast of "<CODE>ptr</CODE>" of type "<CODE>void *</CODE>" can be cast to type
"<CODE>my_struct</CODE>" by entering "<CODE>(my_struct *) ptr</CODE>" into
the Entry.</P>

<H3><A NAME="display">Watch Display</A></H3>
The Watch Window Display consists of a scrolled listbox which contains all
watch expressions, one per line. To use any of the functions of the Watch
Window, use the left mouse button to select any element from the Display.

<P>Pointers, structures, and classes appear in the display with a small
exapansion box before their names. To <A NAME="display_deref">dereference
pointers</A> or <A NAME="display_struct">view the members of classes or
structures</A>, click the closed expansion box (which appears as a small
plus sign, "+") to "expand" the listing. The expansion box changes to a
minus sign, "-", indicating that the display is now open. Pointers,
structures and classes may be expanded recursively to allow multiple pointer
dereferences and embedded structure viewing.

<P>The Locals Display updates as the trace buffer is navigated, highlighting
in blue those variables whose values have changed.</P>

<P>The Watch Window will, by default, display all pointers in hexadecimal and all
other variables in decimal. To change the default display of variables, use the
"set output-radix" command in the console window. (Type "help set output-radix" in the
console window for help. To make this change permanent, it must be added to the user's
init file -- .gdbinit.) To change the display
format for a variable, select the Format option from either the Variable Menu or the
<A HREF="#display_popup">Watch Pop-up Menu</A>.
<BR>

<H4><A NAME="display_popup">Watch Pop-up Menu</A></H4>
The Watch Pop-up Menu provides quick access to the functions of the Watch Window.
To use the Locals Pop-up Menu, first select an expression from the Display (by
clicking the left mouse button on it) and click the right mouse button, choosing
from the pop-up:
<DL>
    <DT>Format
        <DD>Change the display format of the expression. The expression may be
            displayed as:
            <DL>
                <DT>Hex
                    <DD>hexadecimal (base 16)
                <DT>Decimal
                    <DD>decimal (base 10)
                <DT>Binary
                    <DD>binary (base 2)
                <DT>Octal
                    <DD>octal (base 8)
            </DL>
</DL>
</BODY>
</HTML>
@


1.1
log
@Initial revision
@
text
@d92 1
a92 1
init file -- .gdbinit under unix and gdb.ini under Windows.) To change the display
@


1.1.1.1
log
@import insight-2000-02-04 snapshot (2nd try)
@
text
@@
