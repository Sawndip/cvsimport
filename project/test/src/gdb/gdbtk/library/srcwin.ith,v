head	1.12;
access;
symbols
	insight_7_6-2013-04-10-branchpoint:1.12
	gdb_7_6-branch:1.12.0.22
	gdb_7_5-branch:1.12.0.20
	gdb_7_4-branch:1.12.0.18
	gdb_7_3-branch:1.12.0.16
	gdb_7_1-branch:1.12.0.14
	gdb_7_0-branch:1.12.0.12
	arc-sim-20090309:1.12
	arc-insight_6_8-branch:1.12.0.10
	arc-insight_6_8-branchpoint:1.12
	insight_6_8-branch:1.12.0.8
	insight_6_8-branchpoint:1.12
	gdb_6_8-branch:1.12.0.6
	insight_6_6-20070208-release:1.12
	gdb_6_6-branch:1.12.0.4
	gdb_6_6-2006-11-15-branchpoint:1.12
	insight_6_5-20061003-release:1.12
	gdb_6_5-branch:1.12.0.2
	gdb_6_5-2006-05-14-branchpoint:1.12
	gdb-csl-gxxpro-6_3-branch:1.11.0.8
	gdb-csl-gxxpro-6_3-branchpoint:1.11
	gdb_6_4-branch:1.11.0.6
	gdb_6_4-2005-11-01-branchpoint:1.11
	gdb_6_1-2004-04-05-release:1.11
	gdb_6_1-branch:1.11.0.4
	gdb_6_1-2004-03-01-gmt-branchpoint:1.11
	gdb_6_0-2003-10-04-release:1.11
	gdb_6_0-branch:1.11.0.2
	gdb_6_0-2003-06-23-branchpoint:1.11
	gdb_5_3-2002-12-12-release:1.10
	gdb_5_3-branch:1.10.0.4
	gdb_5_3-2002-09-04-branchpoint:1.10
	gdb_5_2_1-2002-07-23-release:1.10
	gdb_5_2-2002-04-29-release:1.10
	gdb_5_2-branch:1.10.0.2
	gdb_5_2-2002-03-03-branchpoint:1.10
	gdb_5_1_1-2002-01-24-release:1.7
	cygnus_cvs_20020108_pre:1.8
	gdb_5_1_0_1-2002-01-03-branch:1.7.0.8
	gdb_5_1_0_1-2002-01-03-branchpoint:1.7
	gdb_5_1-2001-11-21-release:1.7
	gdb_s390-2001-09-26-branch:1.7.0.6
	gdb_s390-2001-09-26-branchpoint:1.7
	gdb_5_1-2001-07-29-branch:1.7.0.4
	gdb_5_1-2001-07-29-branchpoint:1.7
	dberlin-typesystem-branch:1.7.0.2
	dberlin-typesystem-branchpoint:1.7
	insight-precleanup-2001-01-01:1.4
	gdb_5_0-2000-05-19-release:1.1.1.1
	gdb_4_18_2-2000-05-18-release:1.1.1.1
	gdb_4_95_1-2000-05-11-snapshot:1.1.1.1
	gdb_4_95_0-2000-04-27-snapshot:1.1.1.1
	gdb_5_0-2000-04-10-branch:1.1.1.1.0.2
	gdb_5_0-2000-04-10-branchpoint:1.1.1.1
	repo-unification-2000-02-06:1.1.1.1
	insight-2000-02-04:1.1.1.1
	SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.12
date	2005.12.23.18.26.50;	author eliz;	state Exp;
branches;
next	1.11;

1.11
date	2002.10.15.21.19.51;	author hunt;	state Exp;
branches;
next	1.10;

1.10
date	2002.02.26.00.29.06;	author irox;	state Exp;
branches;
next	1.9;

1.9
date	2002.01.18.17.41.49;	author kseitz;	state Exp;
branches;
next	1.8;

1.8
date	2002.01.07.08.58.47;	author irox;	state Exp;
branches;
next	1.7;

1.7
date	2001.06.04.15.49.53;	author kseitz;	state Exp;
branches;
next	1.6;

1.6
date	2001.05.31.20.32.58;	author kseitz;	state Exp;
branches;
next	1.5;

1.5
date	2001.05.31.15.21.40;	author kseitz;	state Exp;
branches;
next	1.4;

1.4
date	2000.12.07.20.14.02;	author tromey;	state Exp;
branches;
next	1.3;

1.3
date	2000.11.30.22.49.46;	author tromey;	state Exp;
branches;
next	1.2;

1.2
date	2000.11.30.22.37.29;	author tromey;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.07.00.19.42;	author jsm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.07.00.19.42;	author jsm;	state Exp;
branches;
next	;


desc
@@


1.12
log
@	* library/attachdlg.itb:
	* library/actiondlg.tcl:
	* library/about.tcl:
	* library/ehandler.itb:
	* library/editor.tcl:
	* library/download.ith:
	* library/download.itb:
	* library/debugwin.ith:
	* library/debugwin.itb:
	* library/cspref.ith:
	* library/cspref.itb:
	* library/console.ith:
	* library/console.itb:
	* library/browserwin.ith:
	* library/browserwin.itb:
	* library/bpwin.ith:
	* library/bpwin.itb:
	* library/blockframe.ith:
	* library/managedwin.ith:
	* library/managedwin.itb:
	* library/main.tcl:
	* library/locals.tcl:
	* library/ipcpref.ith:
	* library/ipcpref.itb:
	* library/ipc.tcl:
	* library/interface.tcl:
	* library/helpviewer.tcl:
	* library/globalpref.ith:
	* library/globalpref.itb:
	* library/gdbwin.ith:
	* library/gdbtoolbar.itcl:
	* library/gdbmenubar.itcl:
	* library/gdbevent.ith:
	* library/gdbevent.itb:
	* library/embeddedwin.ith:
	* library/ehandler.ith:
	* library/srcwin.itb:
	* library/srctextwin.ith:
	* library/srctextwin.itb:
	* library/srcpref.ith:
	* library/srcpref.itb:
	* library/srcbar.itcl:
	* library/session.tcl:
	* library/regwin.ith:
	* library/regwin.itb:
	* library/process.ith:
	* library/process.itb:
	* library/prefs.tcl:
	* library/pluginwin.itcl:
	* library/modal.tcl:
	* library/memwin.ith:
	* library/memwin.itb:
	* library/mempref.ith:
	* library/mempref.itb:
	* library/watch.tcl:
	* library/watch.tcl:
	* library/warning.tcl:
	* library/vartree.ith:
	* library/vartree.itb:
	* library/util.tcl:
	* library/tracedlg.tcl:
	* library/toplevelwin.ith:
	* library/tfind_args.tcl:
	* library/tdump.tcl:
	* library/targetselection.ith:
	* library/targetselection.itb:
	* library/stackwin.ith:
	* library/stackwin.itb:
	* library/srcwin.ith:
@
text
@# Source window class definition for GDBtk.
# Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002 Red Hat, Inc.
#
# This program is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License (GPL) as published by
# the Free Software Foundation; either version 2 of the License, or (at
# your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.


# ----------------------------------------------------------------------
# Implements a source display widget using primitive widgets as the
# building blocks.
#
# The main display for SrcWin is a SrcTextWin widget.  This file
# should contain all the code for controlling the SrcTextWin.
# SrcTextWin should just display the requested file and lines, without
# having to be very intelligent.  If there are problems, error codes
# should be returned and SrcWin should figure out what to do.
# ----------------------------------------------------------------------

itcl::class SrcWin {
  inherit TopLevelWin GDBWin

  public {
    method constructor {args}
    method destructor {}
    method download_progress { section num tot {msg ""} }
    method edit {}
    method enable_ui { on }
    method fillNameCB {}
    method fillFuncCB {name}
    method goto_func {w {val ""}}
    method location {tag linespec}
    method mode {w new_mode {go 1}}
    method no_inferior {}
    method print {}
    method reconfig {}
    method reset {}
    method set_status { {msg ""} {tmp 0} }
    method set_execution_status { {line ""} {pc ""}}
    method stack {cmd}
    method test_get {var {private_func 0}}
    method toggle_updates {value}
    method toolbar {state}
    method inferior {action}
    method clear_file {}
    method get_file {}
    method is_fixed {}
    method search {direction string}

    proc choose_and_update {}
    proc choose_and_display {tag linespec}
    proc point_to_main {}

    #
    # GDB Events
    #
    method busy {event}
    method idle {event}
    method update {event}
  }

  private {
    method _build_win {}
    method _exit {}
    method _name {w {val ""}}
    method _set_name { val {found 1} }
    method _set_state {varname}
    method _update_title {name}
    method _update {loc}
    method get_top {}
    method _set_tag_to_stack {}
    proc _choose_window {file}
    variable _statbar
    variable _status
    variable _toolbar
    variable _statusframe
    variable top
    variable twin
    variable current
    variable need_files 0
    variable do_updates 1	;# if the window does updates
    variable _mangled_func
    variable Tracing  
    variable saved_msg ""	;# static

    # statics used for downloads
    variable last_section ""
    variable last_section_start 0
    variable last_done 0

    # These keep track of the current PC window and the list of all
    # source windows.
    common window_list ""
    common pc_window ""

    # fenceposts
    variable Running 0
    variable NoRun 0
  }  
}
@


1.11
log
@2002-10-15  Martin M. Hunt  <hunt@@redhat.com>

	* library/* : auto_mkindex cannot rebuild
	tclIndex because it does not recognize the namespace
	import in main.tcl.  To get it to work again, rename the
	following:
		body -> itcl::body
		configbody -> itcl::configbody
		class -> itcl::class
@
text
@d2 1
a2 1
# Copyright 1997, 1998, 1999, 2000, 2001, 2002 Red Hat, Inc.
@


1.10
log
@
	* library/srcbar.itcl (SrcBar::create_buttons): Added
	"Search in source file" entry box and label to the top
	row toolbar.
	* library/srcwin.itb (SrcWin::_build_win): Removed
	"Search in source file" entry box.
	(SrcWin::_search): Renamed to "search", add string
	parameter and cleaned up.
	* library/srcwin.ith (SrcWin): Removed private
	method "_search" and added public method "search".
@
text
@d26 1
a26 1
class SrcWin {
@


1.9
log
@Update copyright (dates verified with cvs)
@
text
@d54 1
a71 1
    method _search {direction}
@


1.8
log
@	* library/srcbar.itcl (SrcBar::create_buttons): Line number
	and address fields have been removed and added to the
	status bar.
	* library/srcwin.itb (SrcWin::_build_win): Add address and
	line number fields to status bar.  Moved download progress
	bar to status bar.
	(SrcWin::download_progress):  Use canvas on status bar.
	Remember to adjust width of 64-bit address.
	(SrcWin::location): Set line number and address on status bar.
	* library/srcwin.ith (SrcWin): Added new private variable.
@
text
@d2 1
a2 1
# Copyright 1997, 1998, 1999 Cygnus Solutions
@


1.7
log
@	* library/interface.tcl (gdb_update_hook): Mark as deprecated.
	(gdbtk_update): Dispatch and UpdateEvent, too.
	* library/ehandler.ith (update): New event handler.
	* library/gdbevent.ith (UpdateEvent): New event.
	* library/gdbevent.itb (UpdateEvent::constructor): New method.
	(UpdateEvent::get): New method.
	* library/kod.ith (udpate): Match event handler definition.
	* library/kod.itb (update): Ditto.
	(build_win): Pass dummy argument to update method.
	(top): Ditto.
	(up): Ditto.
	(set_variable): Ditto.
	* library/memwin.ith (update): Match event handler definition.
	* library/memwin.itb (update): Ditto.
	(constructor): Remove gdb_update_hook.
	(destructor): Ditto.
	* library/process.ith (update): Match event handler definition.
	* library/process.itb (update): Ditto.
	(constructor): Remove gdb_update_hook.
	(destructor): Ditto.
	(build_win): Pass dummy argument to update method.
	* library/regwin.ith (update): Match event handler definition.
	* library/regwin.itb (update): Ditto.
	(constructor): Remove gdb_update_hook.
	(destructor): Ditto.
	(build_win): Pass dummy argument to update method.
	(but3): Ditto.
	(unedit): Ditto.
	* library/stackwin.ith (update): Match event handler definition.
	* library/stackwin.itb (update): Ditto.
	(constructor): Remove gdb_update_hook.
	(destructor): Ditto.
	(build_win): Pass dummy argument to update method.
	* library/tdump.tcl (update): Match event handler definition.
	(constructor): Remove gdb_update_hook.
	(destructor): Ditto.
	(build_win): Pass dummy argument to update method.
	* library/variables.tcl (update): Match event handler definition.
	(build_win): Pass dummy argument to update method.
	* library/locals.tcl (update): Match event handler definition.
	(constructor): Pass dummy argument to update method.
	* library/watch.tcl (update): Match event handler definition.
	Pass dummy argument to VariableWin::update.
	(add): Pass dummy argument to update method.
	* library/srcwin.ith (update): New method.
	(update_hook_init): Remove.
	* library/srcwin.itb (update): New method.
	(constructor): Remove gdb_update_hook.
	(destructor): Ditto.
	* tclIndex: Regenerate.
@
text
@d82 1
@


1.6
log
@	* library/interface.tcl (gdb_idle_hook): Mark as deprecated.
	(gdbtk_idle): Dispatch an IdleEvent. gdb_idle_hook is gone.
	* library/ehandler.ith (idle): New event handler.
	* library/gdbevent.ith (IdleEvent): New event.
	* library/console.ith (idle): Match event handler definition.
	* library/console.itb (idle): Ditto.
	(constructor): Remove gdb_idle_hook.
	(destructor): Ditto.
	* library/kod.ith (idle): Match event handler definition.
	* library/kod.itb (idle): Ditto.
	(constructor): Remove gdb_idle_hook.
	(destructor): Ditto.
	* library/memwin.ith (idle): Match event handler definition.
	* library/memwin.itb (idle): Ditto.
	(constructor): Remove gdb_idle_hook.
	(destructor): Ditto.
	* library/pluginwin.itcl (stopped): Rename to "idle" and
	match event handler definition.
	Fix misleading comments.
	* library/process.ith (idle): Match event handler definition.
	* library/process.itb (idle): Ditto.
	(constructor): Remove gdb_idle_hook.
	(destructor): Ditto.
	* library/regwin.ith (idle): Match event handler definition.
	* library/regwin.itb (idle): Ditto.
	(constructor): Remove gdb_idle_hook.
	(destructor): Ditto.
	* library/srcbar.itcl (idle): New method.
	(constructor): Remove gdb_idle_hook.
	(destructor): Ditto.
	* library/srcwin.ith (idle): Match event handler definition.
	* library/srcwin.itb (idle): Ditto.
	(constructor): Remove gdb_idle_hook.
	(destructor): Ditto.
	* library/stackwin.ith (idle): Match event handler definition.
	* library/stackwin.itb (idle): Ditto.
	(constructor): Remove gdb_idle_hook.
	(destructor): Ditto.
	* library/variables.tcl (idle): Match event handler definition.
	(constructor): Remove gdb_idle_hook.
	(destructor): Ditto.
	* library/plugins/rhabout/rhabout.itcl (stopped): Rename
	to "idle" and match new event handler definition.
	* library/tclIndex: Regenerated.
@
text
@d64 1
a99 1
    common update_hook_init 0
@


1.5
log
@	* library/interface.tcl (gdb_busy_hook): Deprecate.
	(gdbtk_busy): Create and dispatch a BusyEvent instead
	of running hooks.
	* library/ehandler.ith (busy): New event handler.
	* library/gdbevent.ith (BusyEvent): New event class.
	* library/console.ith: Inherit from GDBEventHandler.
	(busy): Match event handler definition.
	* library/console.itb (busy): Ditto.
	(constructor): Remove gdb_busy_event.
	(destructor): Ditto.
	* library/kod.ith (busy): Match event handler definition.
	* library/kod.itb (busy): Ditto.
	(constructor): Remove gdb_busy_hook.
	(destructor): Ditto.
	* library/memwin.ith (busy): Match event handler definition.
	* library/memwin.itb (busy): Ditto.
	(constructor): Remove gdb_busy_hook.
	(destructor): Ditto.
	* library/pluginwin.itcl (running): Rename to "busy" and
	match event handler definition.
	(consturctor): Remove gdb_busy_hook.
	(destructor): Ditto.
	* library/process.ith (busy): Match event handler definition.
	* library/process.itb (busy): Ditto.
	(constructor): Remove gdb_busy_hook.
	(destructor): Ditto.
	* library/regwin.ith (busy): Match event handler definition.
	* library/regwin.itb (busy): Ditto.
	(constructor): Remove gdb_busy_hook.
	(destructor): Ditto.
	* library/srcbar.itcl (constructor): Remove gdb_busy_hook.
	(destructor): Ditto.
	(busy): New method.
	* library/srcwin.ith (busy): Match event handler definition.
	* library/srcwin.itb (busy): Ditto.
	Only do the "busy" stuff if do_updates is set.
	(toggle_updates): Remove gdb_busy_hook.
	(constructor): Ditto.
	(destructor): Ditto.
	* library/stackwin.ith (busy): Match event handler definition.
	* library/stackwin.itb (busy): Ditto.
	(constructor): Remove gdb_busy_hook.
	(destructor): Ditto.
	* library/variables.tcl (constructor): Ditto.
	(destructor): Ditto.
	(disable_ui): Rename to "busy" and match event handler
	definition.
	* library/plugins/rhabout/rhabout.itcl (running): Rename
	to "busy" and match new event handler definition.
	* library/tclIndex: Regenerated.
@
text
@a37 1
    method idle {}
d63 1
@


1.4
log
@	* bpwin.itb (BpWin::goto_bp): Handle multiple source windows.
	* srctextwin.itb (SrcTextWin::get_file): New method.
	(SrcTextWin::set_tag_to_stack): New method.
	* srctextwin.ith (get_file): Declare.
	* srcwin.ith (update_hook_init, window_list, pc_window): New
	common variables.
	(_choose_window, choose_and_update, is_fixed, get_file): Declare.
	* srcwin.itb (SrcWin::_choose_window): New method.
	(SrcWin::choose_and_update): Likewise.
	(SrcWin::_update): Renamed from update.  Now private.  Added `loc'
	argument.
	(SrcWin::get_file): New method.
	(SrcWin::is_fixed): Likewise.
	(SrcWin::constructor): Only add update hook once.  Append this
	object to window list.
	(SrcWin::destructor): Don't add update hook.  Remove this object
	from window list.  Clear pc_window if necessary.
	(SrcWin::get_top): New method.
	(SrcWin::_set_tag_to_stack): New method.
	(SrcWin::choose_and_display): New method.
@
text
@a29 1
    method busy {}
d59 5
@


1.3
log
@Reverted erroneous checkin.  Sorry about that.
@
text
@a50 1
    method update {}
d54 2
d57 2
d70 4
d85 1
a85 1
    
d90 7
a96 1
    
@


1.2
log
@	* prefs.tcl (pref_save): Put version number into file.  Added
	`session' to list of top-level keys.  Allow keys with many `/'s.
	(pref_read): Recognize version number.
	(escape_value): Generate URL-style encoding.
	(unescape_value): Added `version' argument.  Handle URL decoding.
@
text
@d51 1
a54 2
    method get_file {}
    method is_fixed {}
a55 2
    proc choose_and_update {}
    proc choose_and_display {tag linespec}
a66 4
    method _update {loc}
    method get_top {}
    method _set_tag_to_stack {}
    proc _choose_window {file}
d78 1
a78 1

d83 1
a83 7

    # These keep track of the current PC window and the list of all
    # source windows.
    common window_list ""
    common pc_window ""
    common update_hook_init 0

@


1.1
log
@Initial revision
@
text
@a50 1
    method update {}
d54 2
d57 2
d70 4
d85 1
a85 1
    
d90 7
a96 1
    
@


1.1.1.1
log
@import insight-2000-02-04 snapshot (2nd try)
@
text
@@
