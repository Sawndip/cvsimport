head	1.3;
access;
symbols
	insight_7_6-2013-04-10-branchpoint:1.3
	gdb_7_6-branch:1.3.0.2
	gdb_7_5-branch:1.2.0.24
	gdb_7_4-branch:1.2.0.22
	gdb_7_3-branch:1.2.0.20
	gdb_7_1-branch:1.2.0.18
	gdb_7_0-branch:1.2.0.16
	arc-sim-20090309:1.2
	arc-insight_6_8-branch:1.2.0.14
	arc-insight_6_8-branchpoint:1.2
	insight_6_8-branch:1.2.0.12
	insight_6_8-branchpoint:1.2
	gdb_6_8-branch:1.2.0.10
	insight_6_6-20070208-release:1.2
	gdb_6_6-branch:1.2.0.8
	gdb_6_6-2006-11-15-branchpoint:1.2
	insight_6_5-20061003-release:1.2
	gdb_6_5-branch:1.2.0.6
	gdb_6_5-2006-05-14-branchpoint:1.2
	gdb-csl-gxxpro-6_3-branch:1.2.0.4
	gdb-csl-gxxpro-6_3-branchpoint:1.2
	gdb_6_4-branch:1.2.0.2
	gdb_6_4-2005-11-01-branchpoint:1.2
	gdb_6_1-2004-04-05-release:1.1
	gdb_6_1-branch:1.1.0.6
	gdb_6_1-2004-03-01-gmt-branchpoint:1.1
	gdb_6_0-2003-10-04-release:1.1
	gdb_6_0-branch:1.1.0.4
	gdb_6_0-2003-06-23-branchpoint:1.1
	gdb_5_3-2002-12-12-release:1.1
	gdb_5_3-branch:1.1.0.2
	gdb_5_3-2002-09-04-branchpoint:1.1;
locks; strict;
comment	@ * @;


1.3
date	2013.02.16.17.05.59;	author kseitz;	state Exp;
branches;
next	1.2;

1.2
date	2004.12.08.20.21.08;	author kseitz;	state Exp;
branches;
next	1.1;

1.1
date	2002.08.14.18.06.06;	author kseitz;	state Exp;
branches;
next	;


desc
@@


1.3
log
@	* rhabout.c (extra_text): Use Tcl_SetObjResult instead
	of setting the interpreter's result directly.
@
text
@/* Sample command procedure library for a plug-in. */

/* You have to include the Tcl headers, of course. */
#include <tcl.h>

/* Define the functions that implement your commands as required by Tcl */
#ifdef __CYGWIN__
#  define EXPORT __declspec(dllexport)
#else
#  define EXPORT /* nothing */
#endif

int extra_text (ClientData clientData,
                Tcl_Interp *interp,
                int objc, Tcl_Obj *CONST objv[]);

/* Here you actually do whatever you want, like calling your target 
   libraries etc.  Here we just return a string. */

int
extra_text (ClientData clientData,
                Tcl_Interp *interp,
                int objc, Tcl_Obj *CONST objv[])
{
  Tcl_SetObjResult (interp,
		    Tcl_NewStringObj ("\nThis is a sample plug-in\n", -1));
  return TCL_OK;
}

/* Initialization function required in Tcl libraries. */

int EXPORT
Rhabout_Init (Tcl_Interp *interp)
{
  /* Register your command as a Tcl command with this interpreter. */
  Tcl_CreateObjCommand (interp, "rhabout_extra_text", extra_text,
                        (ClientData) NULL, (Tcl_CmdDeleteProc *) NULL);

  /* Register this package */
  Tcl_PkgProvide (interp, "RHABOUT", "1.0");
  return TCL_OK;
}

/* This is REQUIRED for cygwin */
#ifdef __CYGWIN__
#include <windows.h>
#include <tclInt.h>

struct _reent *_impure_ptr;
extern struct _reent *_imp__reent_data;

BOOL APIENTRY
DllMain (HINSTANCE hInstance, DWORD reason, LPVOID reserved)
{
  _impure_ptr = _imp__reent_data;
  return TRUE;
}
#endif
@


1.2
log
@        From Ben Elliston (bje@@gnu.org):
        * rhabout.c (extra_text): Convert to object interface.
@
text
@d25 2
a26 1
  interp->result = "\nThis is a sample plug-in\n";
@


1.1
log
@Add improved support for plugin handling. Much of the plugins have simply
been copied from ../library/plugins.
@
text
@d15 1
a15 1
                int argc, char *argv[]);
d23 1
a23 1
                int argc, char *argv[])
d35 2
a36 2
  Tcl_CreateCommand (interp, "rhabout_extra_text", extra_text,
                     (ClientData) NULL, (Tcl_CmdDeleteProc *) NULL);
@

