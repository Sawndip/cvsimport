head	1.26;
access;
symbols
	gdb_7_6_1-2013-08-30-release:1.26
	gdb_7_6-2013-04-26-release:1.26
	gdb_7_6-branch:1.26.0.2
	gdb_7_6-2013-03-12-branchpoint:1.26
	gdb_7_5_1-2012-11-29-release:1.25
	gdb_7_5-2012-08-17-release:1.25
	gdb_7_5-branch:1.25.0.2
	gdb_7_5-2012-07-18-branchpoint:1.25
	gdb_7_4_1-2012-04-26-release:1.24.4.1
	gdb_7_4-2012-01-24-release:1.24.4.1
	gdb_7_4-branch:1.24.0.4
	gdb_7_4-2011-12-13-branchpoint:1.24
	gdb_7_3_1-2011-09-04-release:1.24
	gdb_7_3-2011-07-26-release:1.24
	gdb_7_3-branch:1.24.0.2
	gdb_7_3-2011-04-01-branchpoint:1.24
	gdb_7_2-2010-09-02-release:1.22
	gdb_7_2-branch:1.22.0.2
	gdb_7_2-2010-07-07-branchpoint:1.22
	gdb_7_1-2010-03-18-release:1.21
	gdb_7_1-branch:1.21.0.2
	gdb_7_1-2010-02-18-branchpoint:1.21
	gdb_7_0_1-2009-12-22-release:1.20
	gdb_7_0-2009-10-06-release:1.20
	gdb_7_0-branch:1.20.0.4
	gdb_7_0-2009-09-16-branchpoint:1.20
	arc-sim-20090309:1.18
	msnyder-checkpoint-072509-branch:1.20.0.2
	msnyder-checkpoint-072509-branchpoint:1.20
	arc-insight_6_8-branch:1.18.0.16
	arc-insight_6_8-branchpoint:1.18
	insight_6_8-branch:1.18.0.14
	insight_6_8-branchpoint:1.18
	reverse-20081226-branch:1.18.0.12
	reverse-20081226-branchpoint:1.18
	multiprocess-20081120-branch:1.18.0.10
	multiprocess-20081120-branchpoint:1.18
	reverse-20080930-branch:1.18.0.8
	reverse-20080930-branchpoint:1.18
	reverse-20080717-branch:1.18.0.6
	reverse-20080717-branchpoint:1.18
	msnyder-reverse-20080609-branch:1.18.0.4
	msnyder-reverse-20080609-branchpoint:1.18
	drow-reverse-20070409-branch:1.11.0.2
	drow-reverse-20070409-branchpoint:1.11
	gdb_6_8-2008-03-27-release:1.18
	gdb_6_8-branch:1.18.0.2
	gdb_6_8-2008-02-26-branchpoint:1.18
	gdb_6_7_1-2007-10-29-release:1.17
	gdb_6_7-2007-10-10-release:1.17
	gdb_6_7-branch:1.17.0.2
	gdb_6_7-2007-09-07-branchpoint:1.17
	insight_6_6-20070208-release:1.10
	gdb_6_6-2006-12-18-release:1.10
	gdb_6_6-branch:1.10.0.18
	gdb_6_6-2006-11-15-branchpoint:1.10
	insight_6_5-20061003-release:1.10
	gdb-csl-symbian-6_4_50_20060226-12:1.10
	gdb-csl-sourcerygxx-3_4_4-25:1.9
	nickrob-async-20060828-mergepoint:1.10
	gdb-csl-symbian-6_4_50_20060226-11:1.10
	gdb-csl-sourcerygxx-4_1-17:1.10
	gdb-csl-20060226-branch-local-2:1.10
	gdb-csl-sourcerygxx-4_1-14:1.10
	gdb-csl-sourcerygxx-4_1-13:1.10
	gdb-csl-sourcerygxx-4_1-12:1.10
	gdb-csl-sourcerygxx-3_4_4-21:1.10
	gdb_6_5-20060621-release:1.10
	gdb-csl-sourcerygxx-4_1-9:1.10
	gdb-csl-sourcerygxx-4_1-8:1.10
	gdb-csl-sourcerygxx-4_1-7:1.10
	gdb-csl-arm-2006q1-6:1.10
	gdb-csl-sourcerygxx-4_1-6:1.10
	gdb-csl-symbian-6_4_50_20060226-10:1.10
	gdb-csl-symbian-6_4_50_20060226-9:1.10
	gdb-csl-symbian-6_4_50_20060226-8:1.10
	gdb-csl-coldfire-4_1-11:1.10
	gdb-csl-sourcerygxx-3_4_4-19:1.10
	gdb-csl-coldfire-4_1-10:1.10
	gdb_6_5-branch:1.10.0.16
	gdb_6_5-2006-05-14-branchpoint:1.10
	gdb-csl-sourcerygxx-4_1-5:1.10
	nickrob-async-20060513-branch:1.10.0.14
	nickrob-async-20060513-branchpoint:1.10
	gdb-csl-sourcerygxx-4_1-4:1.10
	msnyder-reverse-20060502-branch:1.10.0.12
	msnyder-reverse-20060502-branchpoint:1.10
	gdb-csl-morpho-4_1-4:1.10
	gdb-csl-sourcerygxx-3_4_4-17:1.10
	readline_5_1-import-branch:1.10.0.10
	readline_5_1-import-branchpoint:1.10
	gdb-csl-20060226-branch-merge-to-csl-symbian-1:1.10
	gdb-csl-symbian-20060226-branch:1.10.0.8
	gdb-csl-symbian-20060226-branchpoint:1.10
	gdb-csl-20060226-branch-merge-to-csl-local-1:1.10
	msnyder-reverse-20060331-branch:1.10.0.6
	msnyder-reverse-20060331-branchpoint:1.10
	gdb-csl-available-20060303-branch:1.10.0.4
	gdb-csl-available-20060303-branchpoint:1.10
	gdb-csl-20060226-branch:1.10.0.2
	gdb-csl-20060226-branchpoint:1.10
	gdb_6_4-20051202-release:1.9
	msnyder-fork-checkpoint-branch:1.9.0.28
	msnyder-fork-checkpoint-branchpoint:1.9
	gdb-csl-gxxpro-6_3-branch:1.9.0.26
	gdb-csl-gxxpro-6_3-branchpoint:1.9
	gdb_6_4-branch:1.9.0.24
	gdb_6_4-2005-11-01-branchpoint:1.9
	gdb-csl-arm-20051020-branch:1.9.0.22
	gdb-csl-arm-20051020-branchpoint:1.9
	msnyder-tracepoint-checkpoint-branch:1.9.0.20
	msnyder-tracepoint-checkpoint-branchpoint:1.9
	gdb-csl-arm-20050325-2005-q1b:1.9
	gdb-csl-arm-20050325-2005-q1a:1.9
	csl-arm-20050325-branch:1.9.0.18
	csl-arm-20050325-branchpoint:1.9
	gdb-post-i18n-errorwarning-20050211:1.9
	gdb-pre-i18n-errorwarning-20050211:1.9
	gdb_6_3-20041109-release:1.9
	gdb_6_3-branch:1.9.0.14
	gdb_6_3-20041019-branchpoint:1.9
	drow_intercu-merge-20040921:1.9
	drow_intercu-merge-20040915:1.9
	jimb-gdb_6_2-e500-branch:1.9.0.16
	jimb-gdb_6_2-e500-branchpoint:1.9
	gdb_6_2-20040730-release:1.9
	gdb_6_2-branch:1.9.0.12
	gdb_6_2-2004-07-10-gmt-branchpoint:1.9
	gdb_6_1_1-20040616-release:1.9
	gdb_6_1-2004-04-05-release:1.9
	drow_intercu-merge-20040402:1.9
	drow_intercu-merge-20040327:1.9
	ezannoni_pie-20040323-branch:1.9.0.10
	ezannoni_pie-20040323-branchpoint:1.9
	ezannoni_pie-20030916-branch:1.9.0.8
	cagney_tramp-20040321-mergepoint:1.9
	cagney_tramp-20040309-branch:1.9.0.6
	cagney_tramp-20040309-branchpoint:1.9
	gdb_6_1-branch:1.9.0.4
	gdb_6_1-2004-03-01-gmt-branchpoint:1.9
	drow_intercu-20040221-branch:1.9.0.2
	drow_intercu-20040221-branchpoint:1.9
	cagney_bfdfile-20040213-branch:1.8.0.2
	cagney_bfdfile-20040213-branchpoint:1.8
	drow-cplus-branch:1.7.0.2
	drow-cplus-merge-20040208:1.6
	carlton_dictionary-branch:1.2.0.4
	carlton_dictionary-20040126-merge:1.2
	cagney_bigcore-20040122-branch:1.2.0.2
	cagney_bigcore-20040122-branchpoint:1.2;
locks; strict;
comment	@ * @;


1.26
date	2013.01.01.06.41.30;	author brobecke;	state Exp;
branches;
next	1.25;

1.25
date	2012.01.04.08.27.59;	author brobecke;	state Exp;
branches;
next	1.24;

1.24
date	2011.01.06.00.57.05;	author msnyder;	state Exp;
branches
	1.24.4.1;
next	1.23;

1.23
date	2011.01.01.15.33.53;	author brobecke;	state Exp;
branches;
next	1.22;

1.22
date	2010.05.05.22.53.54;	author msnyder;	state Exp;
branches;
next	1.21;

1.21
date	2010.01.01.07.32.07;	author brobecke;	state Exp;
branches;
next	1.20;

1.20
date	2009.02.21.16.14.50;	author palves;	state Exp;
branches;
next	1.19;

1.19
date	2009.01.03.05.58.08;	author brobecke;	state Exp;
branches;
next	1.18;

1.18
date	2008.01.01.22.53.22;	author drow;	state Exp;
branches;
next	1.17;

1.17
date	2007.08.23.18.08.50;	author brobecke;	state Exp;
branches;
next	1.16;

1.16
date	2007.08.15.00.19.44;	author msnyder;	state Exp;
branches;
next	1.15;

1.15
date	2007.08.14.23.50.39;	author msnyder;	state Exp;
branches;
next	1.14;

1.14
date	2007.08.14.21.39.22;	author msnyder;	state Exp;
branches;
next	1.13;

1.13
date	2007.08.14.21.20.09;	author msnyder;	state Exp;
branches;
next	1.12;

1.12
date	2007.08.14.20.23.29;	author msnyder;	state Exp;
branches;
next	1.11;

1.11
date	2007.01.09.17.59.15;	author drow;	state Exp;
branches;
next	1.10;

1.10
date	2005.12.23.19.10.03;	author eliz;	state Exp;
branches;
next	1.9;

1.9
date	2004.02.16.21.05.09;	author cagney;	state Exp;
branches
	1.9.8.1;
next	1.8;

1.8
date	2004.02.10.19.08.19;	author cagney;	state Exp;
branches;
next	1.7;

1.7
date	2004.02.08.00.05.16;	author cagney;	state Exp;
branches
	1.7.2.1;
next	1.6;

1.6
date	2004.02.07.20.57.02;	author cagney;	state Exp;
branches;
next	1.5;

1.5
date	2004.02.07.16.31.22;	author cagney;	state Exp;
branches;
next	1.4;

1.4
date	2004.02.07.00.23.56;	author cagney;	state Exp;
branches;
next	1.3;

1.3
date	2004.02.06.23.55.34;	author cagney;	state Exp;
branches;
next	1.2;

1.2
date	2004.01.19.16.06.04;	author cagney;	state Exp;
branches
	1.2.4.1;
next	1.1;

1.1
date	2004.01.19.04.31.51;	author cagney;	state Exp;
branches;
next	;

1.24.4.1
date	2012.01.06.04.54.36;	author brobecke;	state Exp;
branches;
next	;

1.9.8.1
date	2004.03.23.20.09.16;	author ezannoni;	state Exp;
branches;
next	;

1.7.2.1
date	2004.02.09.19.43.58;	author drow;	state Exp;
branches;
next	;

1.2.4.1
date	2004.01.26.19.11.45;	author carlton;	state Exp;
branches;
next	;


desc
@@


1.26
log
@Update years in copyright notice for the GDB files.

Two modifications:
  1. The addition of 2013 to the copyright year range for every file;
  2. The use of a single year range, instead of potentially multiple
     year ranges, as approved by the FSF.
@
text
@/* Data/register window display.

   Copyright (C) 1998-2013 Free Software Foundation, Inc.

   Contributed by Hewlett-Packard Company.

   This file is part of GDB.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */

#include "defs.h"
#include "tui/tui.h"
#include "tui/tui-data.h"
#include "tui/tui-wingeneral.h"
#include "tui/tui-regs.h"
#include "tui/tui-windata.h"

#include "gdb_string.h"
#include "gdb_curses.h"


/*****************************************
** STATIC LOCAL FUNCTIONS FORWARD DECLS    **
******************************************/



/*****************************************
** PUBLIC FUNCTIONS                        **
******************************************/


/* Answer the index first element displayed.  If none are displayed,
   then return (-1).  */
int
tui_first_data_item_displayed (void)
{
  int element_no = (-1);
  int i;

  for (i = 0; 
       i < TUI_DATA_WIN->generic.content_size && element_no < 0;
       i++)
    {
      struct tui_gen_win_info *data_item_win;

      data_item_win = &((tui_win_content)
			TUI_DATA_WIN->generic.content)[i]->which_element.data_window;
      if (data_item_win->handle != (WINDOW *) NULL 
	  && data_item_win->is_visible)
	element_no = i;
    }

  return element_no;
}


/* Answer the index of the first element in line_no.  If line_no is
   past the data area (-1) is returned.  */
int
tui_first_data_element_no_in_line (int line_no)
{
  int first_element_no = (-1);

  /* First see if there is a register on line_no, and if so, set the
     first element number.  */
  if ((first_element_no = tui_first_reg_element_no_inline (line_no)) == -1)
    { /* Looking at the general data, the 1st element on line_no.  */
    }

  return first_element_no;
}


/* Function to delete all the item windows in the data window.  This
   is usually done when the data window is scrolled.  */
void
tui_delete_data_content_windows (void)
{
  int i;
  struct tui_gen_win_info *data_item_win_ptr;

  for (i = 0; (i < TUI_DATA_WIN->generic.content_size); i++)
    {
      data_item_win_ptr = &((tui_win_content)
			    TUI_DATA_WIN->generic.content)[i]->which_element.data_window;
      tui_delete_win (data_item_win_ptr->handle);
      data_item_win_ptr->handle = (WINDOW *) NULL;
      data_item_win_ptr->is_visible = FALSE;
    }
}


void
tui_erase_data_content (char *prompt)
{
  werase (TUI_DATA_WIN->generic.handle);
  tui_check_and_display_highlight_if_needed (TUI_DATA_WIN);
  if (prompt != (char *) NULL)
    {
      int half_width = (TUI_DATA_WIN->generic.width - 2) / 2;
      int x_pos;

      if (strlen (prompt) >= half_width)
	x_pos = 1;
      else
	x_pos = half_width - strlen (prompt);
      mvwaddstr (TUI_DATA_WIN->generic.handle,
		 (TUI_DATA_WIN->generic.height / 2),
		 x_pos,
		 prompt);
    }
  wrefresh (TUI_DATA_WIN->generic.handle);
}


/* This function displays the data that is in the data window's
   content.  It does not set the content.  */
void
tui_display_all_data (void)
{
  if (TUI_DATA_WIN->generic.content_size <= 0)
    tui_erase_data_content (NO_DATA_STRING);
  else
    {
      tui_erase_data_content ((char *) NULL);
      tui_delete_data_content_windows ();
      tui_check_and_display_highlight_if_needed (TUI_DATA_WIN);
      tui_display_registers_from (0);

      /* Then display the other data.  */
      if (TUI_DATA_WIN->detail.data_display_info.data_content !=
	  (tui_win_content) NULL 
	  && TUI_DATA_WIN->detail.data_display_info.data_content_count > 0)
	{
	}
    }
}


/* Function to display the data starting at line, line_no, in the data
   window.  */
void
tui_display_data_from_line (int line_no)
{
  int _line_no = line_no;

  if (line_no < 0)
    _line_no = 0;

  tui_check_and_display_highlight_if_needed (TUI_DATA_WIN);

  /* There is no general data, force regs to display (if there are
     any).  */
  if (TUI_DATA_WIN->detail.data_display_info.data_content_count <= 0)
    tui_display_registers_from_line (_line_no, TRUE);
  else
    {
      int regs_last_line = tui_last_regs_line_no ();


      /* Display regs if we can.  */
      if (tui_display_registers_from_line (_line_no, FALSE) < 0)
	{ /* _line_no is past the regs display, so calc where the
	     start data element is.  */
	  if (regs_last_line < _line_no)
	    { /* Figure out how many lines each element is to obtain
		 the start element_no.  */
	    }
	}
      else
	{ /* Calculate the starting element of the data display, given
	     regs_last_line and how many lines each element is, up to
	     _line_no.  */
	}
      /* Now display the data , starting at element_no.  */
    }
}


/* Display data starting at element element_no.  */
void
tui_display_data_from (int element_no, int reuse_windows)
{
  int first_line = (-1);

  if (element_no < TUI_DATA_WIN->detail.data_display_info.regs_content_count)
    first_line = tui_line_from_reg_element_no (element_no);
  else
    { /* Calculate the first_line from the element number.  */
    }

  if (first_line >= 0)
    {
      tui_erase_data_content ((char *) NULL);
      if (!reuse_windows)
	tui_delete_data_content_windows ();
      tui_display_data_from_line (first_line);
    }
}


/* Function to redisplay the contents of the data window.  */
void
tui_refresh_data_win (void)
{
  tui_erase_data_content ((char *) NULL);
  if (TUI_DATA_WIN->generic.content_size > 0)
    {
      int first_element = tui_first_data_item_displayed ();

      if (first_element >= 0)	/* Re-use existing windows.  */
	tui_display_data_from (first_element, TRUE);
    }
}


/* Function to check the data values and hilite any that have
   changed.  */
void
tui_check_data_values (struct frame_info *frame)
{
  tui_check_register_values (frame);

  /* Now check any other data values that there are.  */
  if (TUI_DATA_WIN != NULL && TUI_DATA_WIN->generic.is_visible)
    {
      int i;

      for (i = 0; 
	   TUI_DATA_WIN->detail.data_display_info.data_content_count; 
	   i++)
	{
#ifdef LATER
	  tui_data_element_ptr data_element_ptr;
	  struct tui_gen_win_info *data_item_win_ptr;
	  Opaque new_value;

	  data_item_ptr = &TUI_DATA_WIN->detail.data_display_info.
	    data_content[i]->which_element.data_window;
	  data_element_ptr = &((tui_win_content)
			       data_item_win_ptr->content)[0]->which_element.data;
	  if value
	    has changed (data_element_ptr, frame, &new_value)
	    {
	      data_element_ptr->value = new_value;
	      update the display with the new value, hiliting it.
	    }
#endif
	}
    }
}


/* Scroll the data window vertically forward or backward.  */
void
tui_vertical_data_scroll (enum tui_scroll_direction scroll_direction,
			  int num_to_scroll)
{
  int first_element_no;
  int first_line = (-1);

  first_element_no = tui_first_data_item_displayed ();
  if (first_element_no 
      < TUI_DATA_WIN->detail.data_display_info.regs_content_count)
    first_line = tui_line_from_reg_element_no (first_element_no);
  else
    { /* Calculate the first line from the element number which is in
        the general data content.  */
    }

  if (first_line >= 0)
    {
      if (scroll_direction == FORWARD_SCROLL)
	first_line += num_to_scroll;
      else
	first_line -= num_to_scroll;
      tui_erase_data_content ((char *) NULL);
      tui_delete_data_content_windows ();
      tui_display_data_from_line (first_line);
    }
}


/*****************************************
** STATIC LOCAL FUNCTIONS               **
******************************************/
@


1.25
log
@Copyright year update in most files of the GDB Project.

gdb/ChangeLog:

        Copyright year update in most files of the GDB Project.
@
text
@d3 1
a3 1
   Copyright (C) 1998-2004, 2007-2012 Free Software Foundation, Inc.
@


1.24
log
@2011-01-05  Michael Snyder  <msnyder@@vmware.com>

	* cli/cli-cmds.c: Shorten lines of >= 80 columns.
	* cli/cli-decode.c: Ditto.
	* cli/cli-dump.c: Ditto.
	* cli/cli-logging.c: Ditto.
	* cli/cli-script.c: Ditto.
	* cli/cli-setshow.c: Ditto.
	* common/signals.c: Ditto.
	* mi/mi-cmd-break.c: Ditto.
	* mi/mi-cmd-disas.c: Ditto.
	* mi/mi-cmd-stack.c: Ditto.
	* mi/mi-cmd-var.c: Ditto.
	* mi/mi-cmds.c: Ditto.
	* mi/mi-common.h: Ditto.
	* mi/mi-console.c: Ditto.
	* mi/mi-interp.c: Ditto.
	* mi/mi-main.c: Ditto.
	* osf-share/cma_attr.c: Ditto.
	* osf-share/cma_deb_core.h: Ditto.
	* osf-share/cma_debug_client.h: Ditto.
	* osf-share/cma_handle.h: Ditto.
	* osf-share/cma_mutex.h: Ditto.
	* osf-share/cma_stack_int.h: Ditto.
	* osf-share/cma_tcb_defs.h: Ditto.
	* python/py-auto-load.c: Ditto.
	* python/py-breakpoint.c: Ditto.
	* python/py-cmd.c: Ditto.
	* python/py-frame.c: Ditto.
	* python/py-objfile.c: Ditto.
	* python/py-param.c: Ditto.
	* python/py-progspace.c: Ditto.
	* python/py-symbol.c: Ditto.
	* python/py-value.c: Ditto.
	* python/python-internal.h: Ditto.
	* python/python.c: Ditto.
	* tui/tui-data.c: Ditto.
	* tui/tui-disasm.c: Ditto.
	* tui/tui-hooks.c: Ditto.
	* tui/tui-io.c: Ditto.
	* tui/tui-layout.c: Ditto.
	* tui/tui-regs.c: Ditto.
	* tui/tui-source.c: Ditto.
	* tui/tui-stack.c: Ditto.
	* tui/tui-win.c: Ditto.
	* tui/tui-windata.c: Ditto.
	* tui/tui-winsource.c: Ditto.
@
text
@d3 1
a3 2
   Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2007, 2008, 2009,
   2010, 2011 Free Software Foundation, Inc.
@


1.24.4.1
log
@Copyright year update in most files of the GDB Project.

gdb/ChangeLog:

        Copyright year update in most files of the GDB Project.
@
text
@d3 2
a4 1
   Copyright (C) 1998-2004, 2007-2012 Free Software Foundation, Inc.
@


1.23
log
@run copyright.sh for 2011.
@
text
@d254 1
a254 1
			     data_item_win_ptr->content)[0]->which_element.data;
d276 2
a277 1
  if (first_element_no < TUI_DATA_WIN->detail.data_display_info.regs_content_count)
@


1.22
log
@2010-05-05  Michael Snyder  <msnyder@@vmware.com>

	* tui/tui-interp.c (_initialize_tui_interp):
	Delete unused variable.
	* tui/tui-regs.c tui_display_registers_from):
	Delete unused variable.
	(tui_check_register_values): Delete unused variable.
	(tui_register_format): Delete unused variable.
	* tui/tui-win.c (_initialize_tui_win): Delete unused variable.
	* tui/tui-windata.c (tui_display_data_from_line):
	Delete unused variables.
	(tui_vertical_data_scroll): Delete unused variables.
@
text
@d4 1
a4 1
   2010 Free Software Foundation, Inc.
@


1.21
log
@Update copyright year in most headers.

Automatic update by copyright.sh.
@
text
@a170 1
      int element_no, start_line_no;
a284 2
      int last_element_no, last_line;

@


1.20
log
@2008-02-21  Pedro Alves  <pedro@@codesorcery.com>

	Silence a few -Wmissing-prototypes warnings.

	PR build/9877:
	* amd64-nat.c: Include "amd64-nat.h".
	* fork-child.c (_initialize_fork_child): Ditto.
	* gcore.c (_initialize_gcore): Ditto.
	* inf-ptrace.c: Include "inf-ptrace.h".
	(inf_ptrace_store_registers): Make it static.
	* linux-nat.c (linux_nat_terminal_ours): Make it static.
	(_initialize_linux_nat): Declare before definition.
	* linux-tdep.c: Include "linux-tdep.h".
	* linux-thread-db.c (_initialize_thread_db): Declare before
	definition.
	* proc-service.c (_initialize_proc_service): Ditto.
	* remote.c (remote_send_printf): Make it static.
	* solib.c: Include "solib.h".
	* symfile-mem.c (_initialize_symfile_mem): Declare before
	definition.
	* ada-lang.c (ada_la_decode, ada_match_name)
	(ada_suppress_symbol_printing, ada_is_array_type)
	(ada_value_ptr_subscript, ada_array_length)
	(ada_to_static_fixed_value): Make them static.
	(_initialize_ada_language): Declare before definition.
	* ada-tasks.c (ada_get_task_number, ada_get_environment_task)
	(ada_task_list_changed, ada_new_objfile_observer): Make them
	static.
	(_initialize_tasks): Declare before definition.
	* addrmap.c (_initialize_addrmap): Declare before definition.
	* auxv.c (default_auxv_parse): Make it static.
	* bfd-target.c (target_bfd_xfer_partial, target_bfd_xclose): Make
	them static.
	* breakpoint.c (remove_sal): Add line break.
	(expand_line_sal_maybe): Make it static.
	* cp-name-parser.y: Include "cp-support.h".
	* cp-valprint.c (cp_find_class_member): Make it static.
	* eval.c (value_f90_subarray): Ditto.
	* exceptions.c (print_any_exception): Ditto.
	* findcmd.c (_initialize_mem_search): Declare before definition.
	* frame.c (frame_observer_target_changed): Make it static.
	* gnu-v3-abi.c (gnuv3_find_method_in): Make it static.
	* inf-child.c: Include "inf-child.h".
	* inferior.h (valid_inferior_id): Rename to ...
	(valid_gdb_inferior_id): ... this.
	* infrun.c (infrun_thread_stop_requested, siginfo_make_value):
	Make them static.
	* jv-lang.c (java_language_arch_info): Make it static.
	* m2-typeprint.c (m2_get_discrete_bounds): Ditto.
	* osdata.c (info_osdata_command): Make it static.
	* regcache.c (regcache_observer_target_changed): Make it static.
	* reverse.c (_initialize_reverse): Declare before definition.
	* stabsread.c (cleanup_undefined_types_noname)
	(cleanup_undefined_types_1): Make them static.
	* symfile.c (place_section): Make it static.
	* symtab.c (find_pc_sect_psymtab_closer): Make it static.
	* target-descriptions.c (_initialize_target_descriptions): Declare
	before definition.
	* target.c (default_get_ada_task_ptid, find_default_can_async_p)
	(find_default_is_async_p, find_default_supports_non_stop): Make
	them static.
	(target_supports_non_stop): Add prototype.
	(dummy_pid_to_str): Make it static.
	* utils.c (_initialize_utils): Declare before definition.
	* ada-exp.y (_initialize_ada_exp): Declare before definition.
	* solib-svr4.c (HAS_LM_DYNAMIC_FROM_LINK_MAP): Add a prototype.
	* target.h (struct target_ops): Add a prototype to the
	to_can_execute_reverse callback.
	* macroscope.c (_initialize_macroscope): Declare before definition.
	* cp-namespace.c (_initialize_cp_namespace): Declare before definition.
	* python/python.c (_initialize_python): Declare before definition.
	* tui/tui-command.c: Include "tui/tui-command.h".
	* tui/tui-data.c (init_content_element, init_win_info): Make them
	static.
	* tui/tui-disasm.c: Include "tui/tui-disasm.h".
	* tui/tui-interp.c (_initialize_tui_interp): Declare before
	definition.
	* tui/tui-layout.c: Include "tui/tui-layout.h".
	(_initialize_tui_layout): Declare before definition.
	* tui/tui-regs.c: Include "tui/tui-regs.h".
	(tui_display_reg_element_at_line): Make it static.
	(_initialize_tui_regs): Declare before definition.
	* tui/tui-stack.c (_initialize_tui_stack): Declare before
	definition.
	* tui/tui-win.c: Include "tui/tui-win.h".
	(_initialize_tui_win): Declare before definition.
	(tui_sigwinch_handler): Make it static.  Wrap in ifdef SIGWINCH.
	* tui/tui-win.h (tui_sigwinch_handler): Delete declaration.
	(tui_get_cmd_list): Add a prototype.
	* tui/tui-windata.c: Include tui-windata.h.
	* tui/tui-wingeneral.c (box_win): Make it static.
	* cli/cli-logging.c (show_logging_command): Make it static.
	(_initialize_cli_logging): Declare before definition.
	* mi/mi-common.c (_initialize_gdb_mi_common): Declare before
	definition.
@
text
@d3 2
a4 2
   Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2007, 2008, 2009
   Free Software Foundation, Inc.
@


1.19
log
@        Updated copyright notices for most files.
@
text
@d28 1
@


1.18
log
@	Updated copyright notices for most files.
@
text
@d3 1
a3 1
   Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2007, 2008
@


1.17
log
@        Switch the license of all .c files to GPLv3.
        Switch the license of all .h files to GPLv3.
        Switch the license of all .cc files to GPLv3.
@
text
@d3 1
a3 1
   Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2007
@


1.16
log
@2007-08-14  Michael Snyder  <msnyder@@access-company.com>

	* tui-command.c, tui-data.c, tui-disasm.c, tui-file.c, tui-io.c,
	tui-layout.c, tui-regs.c, tui-source.c, tui-win.c, tui-windata.c,
	tui-wingeneral.c, tui-winsource.c: Coding standard, && and ||
	go at beginning of new line.
@
text
@d12 1
a12 1
   the Free Software Foundation; either version 2 of the License, or
d21 1
a21 3
   along with this program; if not, write to the Free Software
   Foundation, Inc., 51 Franklin Street, Fifth Floor,
   Boston, MA 02110-1301, USA.  */
@


1.15
log
@2007-08-14  Michael Snyder  <msnyder@@access-company.com>

	* tui-data.c, tui-data.h, tui-disasm.c, tui-disasm.h, tui-hooks.c,
	tui-io.c, tui-layout.c, tui-layout.h, tui-out.c, tui-regs.c,
	tui-source.c, tui-source.h, tui-stack.c, tui-win.c, tui-win.h,
	tui-windata.c, tui-windata.h, tui-wingeneral.c, tui-winsource.c,
	tui-winsource.h, tui.c, tui.h: Function declarations and
	definitions, wrap long lines.
@
text
@d54 3
a56 1
  for (i = 0; (i < TUI_DATA_WIN->generic.content_size && element_no < 0); i++)
d62 2
a63 1
      if (data_item_win->handle != (WINDOW *) NULL && data_item_win->is_visible)
d146 2
a147 2
	  (tui_win_content) NULL &&
	  TUI_DATA_WIN->detail.data_display_info.data_content_count > 0)
d244 3
a246 1
      for (i = 0; TUI_DATA_WIN->detail.data_display_info.data_content_count; i++)
@


1.14
log
@2007-08-14  Michael Snyder  <msnyder@@access-company.com>

	* tui-command.c, tui-data.c, tui-disasm.c, tui-layout.c,
	tui-regs.c, tui-win.c, tui-windata.c, tui-winsource.c, tui.c:
	Reformat block comments to GNU standard.
@
text
@d59 1
a59 1
		      TUI_DATA_WIN->generic.content)[i]->which_element.data_window;
d96 1
a96 1
		      TUI_DATA_WIN->generic.content)[i]->which_element.data_window;
d266 2
a267 1
tui_vertical_data_scroll (enum tui_scroll_direction scroll_direction, int num_to_scroll)
@


1.13
log
@2007-08-14  Michael Snyder  <msnyder@@access-company.com>

	* tui-command.c, tui-data.c, tui-data.h, tui-disasm.c, tui-file.c,
	tui-hooks.c, tui-interp.c, tui-io.c, tui-layout.c, tui-out.c,
	tui-regs.c, tui-regs.h, tui-source.c, tui-stack.c, tui-win.c,
	tui-windata.c, tui-wingeneral.c, tui-winsource.c, tui-winsource.h,
	tui.c, tui.h: Comment reformatting to coding standard (capitals,
	spaces after periods, etc).
@
text
@d75 2
a76 4
  /*
     ** First see if there is a register on line_no, and if so, set the
     ** first element number.
   */
d78 1
a78 3
    {	/*
	   ** Looking at the general data, the 1st element on line_no.
	 */
d140 2
a141 3
      /*
         ** Then display the other data.
       */
d175 2
a176 4
	{	/*
		   ** _line_no is past the regs display, so calc where the
		   ** start data element is.
		 */
d178 2
a179 2
	    {	/* Figure out how many lines each element is to obtain
		   the start element_no.  */
d183 3
a185 5
	{	/*
		   ** Calculate the starting element of the data display,
		   ** given regs_last_line and how many lines each element
		   ** is, up to _line_no.
		 */
@


1.12
log
@2007-08-14  Michael Snyder  <msnyder@@access-company.com>

	* tui-data.c, tui-data.h, tui-disasm.c, tui-hooks.c, tui-layout.c,
	tui-regs.c, tui-source.c, tui-stack.c, tui-win.c, tui-windata.c,
	tui-wingeneral.c, tui-wingeneral.h, tui-winsource.c, tui.c,
	tui-winsource.h: Whitespace changes, fix pointer declarations
	to be consistant.
@
text
@d77 1
a77 1
     ** first element number
d80 3
a82 3
    {				/*
				   ** Looking at the general data, the 1st element on line_no
				 */
d145 1
a145 1
         ** Then display the other data
d168 2
a169 1
  /* there is no general data, force regs to display (if there are any) */
d178 1
a178 1
      /* display regs if we can */
d180 4
a183 4
	{			/*
				   ** _line_no is past the regs display, so calc where the
				   ** start data element is
				 */
d185 2
a186 2
	    {			/* figure out how many lines each element is to obtain
				   the start element_no */
d190 5
a194 5
	{			/*
				   ** calculate the starting element of the data display, given
				   ** regs_last_line and how many lines each element is, up to
				   ** _line_no
				 */
d196 1
a196 1
      /* Now display the data , starting at element_no */
d201 1
a201 1
/* Display data starting at element element_no.   */
d210 1
a210 1
    {				/* calculate the first_line from the element number */
d232 1
a232 1
      if (first_element >= 0)	/* re-use existing windows */
d238 2
a239 1
/* Function to check the data values and hilite any that have changed.  */
d245 1
a245 1
  /* Now check any other data values that there are */
d273 1
a273 1
/* Scroll the data window vertically forward or backward.   */
d284 2
a285 3
    {				/* calculate the first line from the element number which is in
				   ** the general data content
				 */
@


1.11
log
@Copyright updates for 2007.
@
text
@d56 1
a56 1
      struct tui_gen_win_info * data_item_win;
d95 1
a95 1
  struct tui_gen_win_info * data_item_win_ptr;
d252 1
a252 1
	  struct tui_gen_win_info * data_item_win_ptr;
@


1.10
log
@	* tui/tui-file.c:
	* tui/tui-disasm.c:
	* tui/tui-data.h:
	* tui/tui-data.c:
	* tui/tui-command.h:
	* tui/tui-command.c:
	* tui/tui-win.h:
	* tui/tui-win.h:
	* tui/tui-win.c:
	* tui/tui-stack.h:
	* tui/tui-stack.c:
	* tui/tui-source.h:
	* tui/tui-source.c:
	* tui/tui-regs.h:
	* tui/tui-regs.c:
	* tui/tui-out.c:
	* tui/tui-main.c:
	* tui/tui-layout.h:
	* tui/tui-layout.c:
	* tui/tui-io.h:
	* tui/tui-io.c:
	* tui/tui-interp.c:
	* tui/tui-hooks.h:
	* tui/tui-hooks.c:
	* tui/tui-file.h:
	* tui/tui.h:
	* tui/tui.c:
	* tui/tui-winsource.h:
	* tui/tui-winsource.c:
	* tui/tui-wingeneral.h:
	* tui/tui-wingeneral.c:
	* tui/tui-windata.h:
	* tui/tui-windata.c: Add (C) after Copyright.  Update the FSF
	address.
@
text
@d3 2
a4 2
   Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2004 Free Software
   Foundation, Inc.
@


1.9
log
@2004-02-16  Andrew Cagney  <cagney@@redhat.com>

	* tui/tui-windata.c: Include "gdb_string.h".
	* tui/tui-source.c, tui/tui-winsource.c: Ditto.
	* tui/tui-layout.c, tui/tui-command.c: Ditto.
	* Makefile.in: Update dependencies.
@
text
@d3 1
a3 1
   Copyright 1998, 1999, 2000, 2001, 2002, 2003, 2004 Free Software
d22 2
a23 2
   Foundation, Inc., 59 Temple Place - Suite 330,
   Boston, MA 02111-1307, USA.  */
@


1.9.8.1
log
@merge mainline changes to branch
@
text
@@


1.8
log
@2004-02-10  Andrew Cagney  <cagney@@redhat.com>

	* defs.h: Do not include "tui.h".
	* gdb_curses.h: New file.
	* tui/tui-hooks.h: New file.
	* tui/tui.h (tui_update_all_exec_infos): Delete declaration.
	(tui_install_hooks, tui_remove_hooks): Delete declarations.
	(tui_initialize_io): Delete declaration.
	(tui_initialize_readline: Delete redundant declaration.
	(struct tui_point): Delete definition.
	* tui/tui-data.h (struct tui_point): Define.
	* cli/cli-decode.c [TUI]: Include "tui/tui.h".
	* utils.c: Include "tui/tui.h".
	* tui/tui-data.h: Include "tui/tui.h" and "gdb_curses.h".
	* printcmd.c [TUI]: Include "tui/tui.h".
	* cli/cli-cmds.c [TUI]: Include "tui/tui.h".
	* tui/tui-command.c: Include "gdb_curses.h".
	* tui/tui.c, tui/tui-winsource.c, tui/tui-wingeneral.c: Ditto.
	* tui/tui-windata.c, tui/tui-win.c, tui/tui-stack.c: Ditto.
	* tui/tui-source.c, tui/tui-regs.c, tui/tui-layout.c: Ditto.
	* tui/tui-io.c, tui/tui-disasm.c, tui/tui-data.c: : Ditto.
	* tui/tui-hooks.c: Include "tui-hooks.h" and "gdb_curses.h".
	* Makefile.in: Update all dependencies.
	(tui_hooks_h, gdb_curses_h): Define.
	(SUBDIR_TUI_CFLAGS): Remove -I${srcdir}/tui.
@
text
@d31 1
@


1.7
log
@2004-02-07  Andrew Cagney  <cagney@@redhat.com>

	* tui/tui-command.c: Change variable and function names to lower
	case.
	* tui/tui-data.c, tui/tui-disasm.c: Ditto.
	* tui/tui-hooks.c, tui/tui-io.c, tui/tui-layout.c: Ditto.
	* tui/tui-regs.c, tui/tui-source.c, tui/tui-stack.c: Ditto.
	* tui/tui-win.c, tui/tui-windata.c, tui/tui-wingeneral.c: Ditto.
	* tui/tui-winsource.c, tui/tui.c: Ditto.
@
text
@d31 1
a31 7
#ifdef HAVE_NCURSES_H       
#include <ncurses.h>
#else
#ifdef HAVE_CURSES_H
#include <curses.h>
#endif
#endif
@


1.7.2.1
log
@Merge drow-cplus-merge-20040208 to drow-cplus-branch.
@
text
@d51 2
a52 5
/*
   ** tuiFirstDataItemDisplayed()
   **    Answer the index first element displayed.
   **    If none are displayed, then return (-1).
 */
d54 1
a54 1
tuiFirstDataItemDisplayed (void)
d56 1
a56 1
  int elementNo = (-1);
d59 1
a59 1
  for (i = 0; (i < TUI_DATA_WIN->generic.content_size && elementNo < 0); i++)
d61 1
a61 1
      struct tui_gen_win_info * dataItemWin;
d63 1
a63 1
      dataItemWin = &((tui_win_content)
d65 2
a66 2
      if (dataItemWin->handle != (WINDOW *) NULL && dataItemWin->is_visible)
	elementNo = i;
d69 2
a70 2
  return elementNo;
}				/* tuiFirstDataItemDisplayed */
d73 2
a74 5
/*
   ** tuiFirstDataElementNoInLine()
   **        Answer the index of the first element in lineNo.  If lineNo is
   **        past the data area (-1) is returned.
 */
d76 1
a76 1
tuiFirstDataElementNoInLine (int lineNo)
d78 1
a78 1
  int firstElementNo = (-1);
d81 1
a81 1
     ** First see if there is a register on lineNo, and if so, set the
d84 1
a84 1
  if ((firstElementNo = tui_first_reg_element_no_inline (lineNo)) == -1)
d86 1
a86 1
				   ** Looking at the general data, the 1st element on lineNo
d90 2
a91 2
  return firstElementNo;
}				/* tuiFirstDataElementNoInLine */
d94 2
a95 5
/*
   ** tuiDeleteDataContentWindows()
   **        Function to delete all the item windows in the data window.
   **        This is usually done when the data window is scrolled.
 */
d97 1
a97 1
tuiDeleteDataContentWindows (void)
d100 1
a100 1
  struct tui_gen_win_info * dataItemWinPtr;
d104 1
a104 1
      dataItemWinPtr = &((tui_win_content)
d106 3
a108 3
      tui_delete_win (dataItemWinPtr->handle);
      dataItemWinPtr->handle = (WINDOW *) NULL;
      dataItemWinPtr->is_visible = FALSE;
d110 1
a110 3

  return;
}				/* tuiDeleteDataContentWindows */
d120 2
a121 2
      int halfWidth = (TUI_DATA_WIN->generic.width - 2) / 2;
      int xPos;
d123 2
a124 2
      if (strlen (prompt) >= halfWidth)
	xPos = 1;
d126 1
a126 1
	xPos = halfWidth - strlen (prompt);
d129 1
a129 1
		 xPos,
d146 1
a146 1
      tuiDeleteDataContentWindows ();
d161 2
a162 5
/*
   ** tuiDisplayDataFromLine()
   **        Function to display the data starting at line, lineNo, in the
   **        data window.
 */
d164 1
a164 1
tuiDisplayDataFromLine (int lineNo)
d166 1
a166 1
  int _lineNo = lineNo;
d168 2
a169 2
  if (lineNo < 0)
    _lineNo = 0;
d175 1
a175 1
    tui_display_registers_from_line (_lineNo, TRUE);
d178 2
a179 2
      int elementNo, startLineNo;
      int regsLastLine = tui_last_regs_line_no ();
d183 1
a183 1
      if (tui_display_registers_from_line (_lineNo, FALSE) < 0)
d185 1
a185 1
				   ** _lineNo is past the regs display, so calc where the
d188 1
a188 1
	  if (regsLastLine < _lineNo)
d190 1
a190 1
				   the start elementNo */
d196 2
a197 2
				   ** regsLastLine and how many lines each element is, up to
				   ** _lineNo
d200 1
a200 1
      /* Now display the data , starting at elementNo */
d202 1
a203 2
  return;
}				/* tuiDisplayDataFromLine */
d205 1
a205 5

/*
   ** tuiDisplayDataFrom()
   **        Display data starting at element elementNo
 */
d207 1
a207 1
tuiDisplayDataFrom (int elementNo, int reuseWindows)
d209 1
a209 1
  int firstLine = (-1);
d211 2
a212 2
  if (elementNo < TUI_DATA_WIN->detail.data_display_info.regs_content_count)
    firstLine = tui_line_from_reg_element_no (elementNo);
d214 1
a214 1
    {				/* calculate the firstLine from the element number */
d217 1
a217 1
  if (firstLine >= 0)
d220 3
a222 3
      if (!reuseWindows)
	tuiDeleteDataContentWindows ();
      tuiDisplayDataFromLine (firstLine);
d224 1
a224 3

  return;
}				/* tuiDisplayDataFrom */
d234 1
a234 1
      int firstElement = tuiFirstDataItemDisplayed ();
d236 2
a237 2
      if (firstElement >= 0)	/* re-use existing windows */
	tuiDisplayDataFrom (firstElement, TRUE);
d256 3
a258 3
	  TuiDataElementPtr dataElementPtr;
	  struct tui_gen_win_info * dataItemWinPtr;
	  Opaque newValue;
d260 1
a260 1
	  dataItemPtr = &TUI_DATA_WIN->detail.data_display_info.
d262 2
a263 2
	  dataElementPtr = &((tui_win_content)
			     dataItemWinPtr->content)[0]->which_element.data;
d265 1
a265 1
	    has changed (dataElementPtr, frame, &newValue)
d267 1
a267 1
	      dataElementPtr->value = newValue;
d278 1
a278 1
tui_vertical_data_scroll (enum tui_scroll_direction scrollDirection, int numToScroll)
d280 2
a281 2
  int firstElementNo;
  int firstLine = (-1);
d283 3
a285 3
  firstElementNo = tuiFirstDataItemDisplayed ();
  if (firstElementNo < TUI_DATA_WIN->detail.data_display_info.regs_content_count)
    firstLine = tui_line_from_reg_element_no (firstElementNo);
d292 1
a292 1
  if (firstLine >= 0)
d294 1
a294 1
      int lastElementNo, lastLine;
d296 2
a297 2
      if (scrollDirection == FORWARD_SCROLL)
	firstLine += numToScroll;
d299 1
a299 1
	firstLine -= numToScroll;
d301 2
a302 2
      tuiDeleteDataContentWindows ();
      tuiDisplayDataFromLine (firstLine);
d304 1
a304 3

  return;
}				/* tuiVerticalDataScroll */
@


1.6
log
@2004-02-07  Andrew Cagney  <cagney@@redhat.com>

	* tui/tui.h: Do not include <stdarg.h>, <string.h>, and
	"ansidecl.h".  Do not undef "reg" and "chtype".  Fix case of
	fields and variables.
	* tui/tui-wingeneral.h (m_beVisible): Delete macro.
	(m_beInvisible): Delete macro.
	* tui/tui-data.h: Fix case case fields and variables.
	(m_genWinPtrIsNull): Delete macro.
	(tui_win_list): Rename winList.
	(TUI_SRC_WIN): Rename srcWin.
	(TUI_DISASM_WIN): Rename disassemWin.
	(TUI_DATA_WIN): Rename dataWin.
	(TUI_CMD_WIN): Rename cmdWin.
	(m_genWinPtrNotNull): Delete macro.
	(m_winPtrIsNull): Delete macro.
	(m_winPtrNotNull): Delete macro.
	(tui_win_is_source_type): Replace m_winIsSourceType
	(tui_win_is_auxillary): Replace m_winIsAuzillary.
	(tui_win_has_locator): Replace m_hasLocator.
	(tui_set_win_highlight): Replace m_setWinHighlightOn and
	m_setWinHighlightOff.
	* tui/tui-data.c: Update references.
	(tui_win_is_source_type, tui_set_win_highlight): New functions.
	(tui_win_has_locator, tui_win_is_auxillary): New functions.
	* tui/tui-command.c, tui/tui-disasm.c: Update references.
	* tui/tui-io.c, tui/tui-layout.c, tui/tui-regs.c: Ditto.
	* tui/tui-regs.h, tui/tui-source.c, tui/tui-stack.c: Ditto.
	* tui/tui-win.c, tui/tui-windata.c, tui/tui-wingeneral.c: Ditto.
	* tui/tui-winsource.c, tui/tui.c: Ditto.
@
text
@d51 2
a52 5
/*
   ** tuiFirstDataItemDisplayed()
   **    Answer the index first element displayed.
   **    If none are displayed, then return (-1).
 */
d54 1
a54 1
tuiFirstDataItemDisplayed (void)
d56 1
a56 1
  int elementNo = (-1);
d59 1
a59 1
  for (i = 0; (i < TUI_DATA_WIN->generic.content_size && elementNo < 0); i++)
d61 1
a61 1
      struct tui_gen_win_info * dataItemWin;
d63 1
a63 1
      dataItemWin = &((tui_win_content)
d65 2
a66 2
      if (dataItemWin->handle != (WINDOW *) NULL && dataItemWin->is_visible)
	elementNo = i;
d69 2
a70 2
  return elementNo;
}				/* tuiFirstDataItemDisplayed */
d73 2
a74 5
/*
   ** tuiFirstDataElementNoInLine()
   **        Answer the index of the first element in lineNo.  If lineNo is
   **        past the data area (-1) is returned.
 */
d76 1
a76 1
tuiFirstDataElementNoInLine (int lineNo)
d78 1
a78 1
  int firstElementNo = (-1);
d81 1
a81 1
     ** First see if there is a register on lineNo, and if so, set the
d84 1
a84 1
  if ((firstElementNo = tui_first_reg_element_no_inline (lineNo)) == -1)
d86 1
a86 1
				   ** Looking at the general data, the 1st element on lineNo
d90 2
a91 2
  return firstElementNo;
}				/* tuiFirstDataElementNoInLine */
d94 2
a95 5
/*
   ** tuiDeleteDataContentWindows()
   **        Function to delete all the item windows in the data window.
   **        This is usually done when the data window is scrolled.
 */
d97 1
a97 1
tuiDeleteDataContentWindows (void)
d100 1
a100 1
  struct tui_gen_win_info * dataItemWinPtr;
d104 1
a104 1
      dataItemWinPtr = &((tui_win_content)
d106 3
a108 3
      tui_delete_win (dataItemWinPtr->handle);
      dataItemWinPtr->handle = (WINDOW *) NULL;
      dataItemWinPtr->is_visible = FALSE;
d110 1
a110 3

  return;
}				/* tuiDeleteDataContentWindows */
d120 2
a121 2
      int halfWidth = (TUI_DATA_WIN->generic.width - 2) / 2;
      int xPos;
d123 2
a124 2
      if (strlen (prompt) >= halfWidth)
	xPos = 1;
d126 1
a126 1
	xPos = halfWidth - strlen (prompt);
d129 1
a129 1
		 xPos,
d146 1
a146 1
      tuiDeleteDataContentWindows ();
d161 2
a162 5
/*
   ** tuiDisplayDataFromLine()
   **        Function to display the data starting at line, lineNo, in the
   **        data window.
 */
d164 1
a164 1
tuiDisplayDataFromLine (int lineNo)
d166 1
a166 1
  int _lineNo = lineNo;
d168 2
a169 2
  if (lineNo < 0)
    _lineNo = 0;
d175 1
a175 1
    tui_display_registers_from_line (_lineNo, TRUE);
d178 2
a179 2
      int elementNo, startLineNo;
      int regsLastLine = tui_last_regs_line_no ();
d183 1
a183 1
      if (tui_display_registers_from_line (_lineNo, FALSE) < 0)
d185 1
a185 1
				   ** _lineNo is past the regs display, so calc where the
d188 1
a188 1
	  if (regsLastLine < _lineNo)
d190 1
a190 1
				   the start elementNo */
d196 2
a197 2
				   ** regsLastLine and how many lines each element is, up to
				   ** _lineNo
d200 1
a200 1
      /* Now display the data , starting at elementNo */
d202 1
a203 2
  return;
}				/* tuiDisplayDataFromLine */
d205 1
a205 5

/*
   ** tuiDisplayDataFrom()
   **        Display data starting at element elementNo
 */
d207 1
a207 1
tuiDisplayDataFrom (int elementNo, int reuseWindows)
d209 1
a209 1
  int firstLine = (-1);
d211 2
a212 2
  if (elementNo < TUI_DATA_WIN->detail.data_display_info.regs_content_count)
    firstLine = tui_line_from_reg_element_no (elementNo);
d214 1
a214 1
    {				/* calculate the firstLine from the element number */
d217 1
a217 1
  if (firstLine >= 0)
d220 3
a222 3
      if (!reuseWindows)
	tuiDeleteDataContentWindows ();
      tuiDisplayDataFromLine (firstLine);
d224 1
a224 3

  return;
}				/* tuiDisplayDataFrom */
d234 1
a234 1
      int firstElement = tuiFirstDataItemDisplayed ();
d236 2
a237 2
      if (firstElement >= 0)	/* re-use existing windows */
	tuiDisplayDataFrom (firstElement, TRUE);
d256 3
a258 3
	  TuiDataElementPtr dataElementPtr;
	  struct tui_gen_win_info * dataItemWinPtr;
	  Opaque newValue;
d260 1
a260 1
	  dataItemPtr = &TUI_DATA_WIN->detail.data_display_info.
d262 2
a263 2
	  dataElementPtr = &((tui_win_content)
			     dataItemWinPtr->content)[0]->which_element.data;
d265 1
a265 1
	    has changed (dataElementPtr, frame, &newValue)
d267 1
a267 1
	      dataElementPtr->value = newValue;
d278 1
a278 1
tui_vertical_data_scroll (enum tui_scroll_direction scrollDirection, int numToScroll)
d280 2
a281 2
  int firstElementNo;
  int firstLine = (-1);
d283 3
a285 3
  firstElementNo = tuiFirstDataItemDisplayed ();
  if (firstElementNo < TUI_DATA_WIN->detail.data_display_info.regs_content_count)
    firstLine = tui_line_from_reg_element_no (firstElementNo);
d292 1
a292 1
  if (firstLine >= 0)
d294 1
a294 1
      int lastElementNo, lastLine;
d296 2
a297 2
      if (scrollDirection == FORWARD_SCROLL)
	firstLine += numToScroll;
d299 1
a299 1
	firstLine -= numToScroll;
d301 2
a302 2
      tuiDeleteDataContentWindows ();
      tuiDisplayDataFromLine (firstLine);
d304 1
a304 3

  return;
}				/* tuiVerticalDataScroll */
@


1.5
log
@2004-02-07  Andrew Cagney  <cagney@@redhat.com>

        * tui/tui-data.h (tui_win_element): Rename TuiWinElement.
        (tui_exec_info_content): Rename TuiExecInfoContent.
        (TuiGenWinInfo, TuiGenWinInfoPtr): Delete definitions.
        (TuiWinInfo, TuiWinInfoPtr): Ditto.
        (TuiScrollDirection, TuiScrollDirectionPtr): Ditto.
        (TuiList, TuiListPtr): Ditto.
        (TuiLayoutType, TuiLayoutTypePtr): Ditto.
        (TuiDataType, TuiDataTypePtr): Ditto.
        (TuiRegisterDisplayType, TuiRegisterDisplayTypePtr): Ditto.
        (TuiLineOrAddress, TuiLineOrAddressPtr): Ditto.
        (TuiLayoutDef, TuiLayoutDefPtr): Ditto.
        (TuiSourceElement, TuiSourceElementPtr): Ditto.
        (TuiDataElement, TuiDataElementPtr): Ditto.
        (TuiWinElement, TuiWinElementPtr): Ditto.
        (TuiDataInfo, TuiDataInfoPtr): Ditto.
        (TuiCommandElement, TuiCommandElementPtr): Ditto.
        (TuiLocatorElement, TuiLocatorElementPtr): Ditto.
        (TuiWhichElement, TuiWhichElementPtr): Ditto.
        (TuiSourceInfo, TuiSourceInfoPtr): Ditto.
        (TuiCommandInfo, TuiCommandInfoPtr): Ditto.
        * tui/tui-command.c, tui/tui-data.c: Update references.
        * tui/tui-data.h, tui/tui-disasm.c, tui/tui-layout.c: Ditto.
        * tui/tui-regs.c, tui/tui-source.c, tui/tui-stack.c: Ditto.
        * tui/tui-win.c, tui/tui-windata.c, tui/tui-wingeneral.c: Ditto.
        * tui/tui-winsource.c, tui/tui.c: Ditto.
@
text
@d62 1
a62 1
  for (i = 0; (i < dataWin->generic.contentSize && elementNo < 0); i++)
d67 2
a68 2
		      dataWin->generic.content)[i]->whichElement.dataWindow;
      if (dataItemWin->handle != (WINDOW *) NULL && dataItemWin->isVisible)
d111 1
a111 1
  for (i = 0; (i < dataWin->generic.contentSize); i++)
d114 1
a114 1
		      dataWin->generic.content)[i]->whichElement.dataWindow;
d117 1
a117 1
      dataItemWinPtr->isVisible = FALSE;
d127 2
a128 2
  werase (dataWin->generic.handle);
  tui_check_and_display_highlight_if_needed (dataWin);
d131 1
a131 1
      int halfWidth = (dataWin->generic.width - 2) / 2;
d138 2
a139 2
      mvwaddstr (dataWin->generic.handle,
		 (dataWin->generic.height / 2),
d143 1
a143 1
  wrefresh (dataWin->generic.handle);
d152 1
a152 1
  if (dataWin->generic.contentSize <= 0)
d158 1
a158 1
      tui_check_and_display_highlight_if_needed (dataWin);
d163 1
a163 1
      if (dataWin->detail.dataDisplayInfo.dataContent !=
d165 1
a165 1
	  dataWin->detail.dataDisplayInfo.dataContentCount > 0)
d185 1
a185 1
  tui_check_and_display_highlight_if_needed (dataWin);
d188 1
a188 1
  if (dataWin->detail.dataDisplayInfo.dataContentCount <= 0)
d230 1
a230 1
  if (elementNo < dataWin->detail.dataDisplayInfo.regsContentCount)
d253 1
a253 1
  if (dataWin->generic.contentSize > 0)
d270 1
a270 1
  if (m_winPtrNotNull (dataWin) && dataWin->generic.isVisible)
d274 1
a274 1
      for (i = 0; dataWin->detail.dataDisplayInfo.dataContentCount; i++)
d281 2
a282 2
	  dataItemPtr = &dataWin->detail.dataDisplayInfo.
	    dataContent[i]->whichElement.dataWindow;
d284 1
a284 1
			     dataItemWinPtr->content)[0]->whichElement.data;
d305 1
a305 1
  if (firstElementNo < dataWin->detail.dataDisplayInfo.regsContentCount)
@


1.4
log
@2004-02-06  Andrew Cagney  <cagney@@redhat.com>

	* tui/tui-windata.h: Update copyright.  Include "tui-data.h".
	(tui_erase_data_content): Rename tuiEraseDataContent.
	(tui_display_all_data): Rename tuiDisplayAllData.
	(tui_check_data_values): Rename tuiCheckDataValues.
	(tui_display_data_from_line): Rename tuiDisplayDataFromLine.
	(tui_first_data_item_displayed): Rename tuiFirstDataItemDisplayed.
	(tui_first_data_element_no_in_line): Rename
	tuiFirstDataElementNoInLine.
	(tui_delete_data_content_windows): Rename
	tuiDeleteDataContentWindows.
	(tui_refresh_data_win): Rename tuiRefreshDataWin.
	(tui_display_data_from): Rename tuiDisplayDataFrom.
	(tui_vertical_data_scroll): Rename tuiVerticalDataScroll.
	* tui/tui-windata.c, tui/tui-hooks.c: Update references.
	* tui/tui-win.c, tui/tui-regs.c: Update references.
	* tui/tui-layout.c, tui/tui.c: Update references.
@
text
@d64 1
a64 1
      TuiGenWinInfoPtr dataItemWin;
d66 1
a66 1
      dataItemWin = &((TuiWinContent)
d109 1
a109 1
  TuiGenWinInfoPtr dataItemWinPtr;
d113 1
a113 1
      dataItemWinPtr = &((TuiWinContent)
d164 1
a164 1
	  (TuiWinContent) NULL &&
d278 1
a278 1
	  TuiGenWinInfoPtr dataItemWinPtr;
d283 1
a283 1
	  dataElementPtr = &((TuiWinContent)
d299 1
a299 1
tui_vertical_data_scroll (TuiScrollDirection scrollDirection, int numToScroll)
@


1.3
log
@2004-02-06  Andrew Cagney  <cagney@@redhat.com>

	* tui/tui-wingeneral.h: Update copyright.
	(m_allBeVisible): Delete macro.
	(m_allBeInvisible): Delete macro.
	(struct tui_gen_win_info): Declare.
	(struct tui_win_info): Declare.
	(tui_unhighlight_win): Rename unhighlightWin.
	(tui_make_visible, tui_make_invisible): Replace makeVisible.
	(tui_make_all_visible, tui_make_all_invisible): Replace makeAllVisible.
	(tui_make_window): Rename makeWindow.
	(tui_copy_win): Rename copyWin.
	(tui_box_win): Rename boxWin.
	(tui_highlight_win): Rename highlightWin.
	(tui_check_and_display_highlight_if_needed): Rename
	checkAndDisplayHighlightIfNeeded.
	(tui_refresh_all): Rename refreshAll.
	(tui_delete_win): Rename tuiDelwin.
	(tui_refresh_win): Rename tuiRefreshWin.
	* tui/tui-wingeneral.c (make_visible): Rename makeVisible.
	(tui_make_visible, tui_make_invisible): New functions.
	(tui_make_all_visible, tui_make_all_invisible): New functions.
	(make_all_visible): Rename makeAllVisible.
	* tui/tui-winsource.c, tui/tui-windata.c: Update references.
	* tui/tui-data.c, tui/tui-winsource.c: Update references.
	* tui/tui-windata.c, tui/tui-win.c: Update references.
	* tui/tui-regs.c, tui/tui-layout.c: Update references.
	* tui/tui-data.h (struct tui_gen_win_info): Rename _TuiGenWinInfo.
@
text
@d125 1
a125 1
tuiEraseDataContent (char *prompt)
d144 1
a144 3

  return;
}				/* tuiEraseDataContent */
d147 2
a148 5
/*
   ** tuiDisplayAllData().
   **        This function displays the data that is in the data window's
   **        content.  It does not set the content.
 */
d150 1
a150 1
tuiDisplayAllData (void)
d153 1
a153 1
    tuiEraseDataContent (NO_DATA_STRING);
d156 1
a156 1
      tuiEraseDataContent ((char *) NULL);
d169 1
a169 2
  return;
}				/* tuiDisplayAllData */
d238 1
a238 1
      tuiEraseDataContent ((char *) NULL);
d248 1
a248 4
/*
   ** tuiRefreshDataWin()
   **        Function to redisplay the contents of the data window.
 */
d250 1
a250 1
tuiRefreshDataWin (void)
d252 1
a252 1
  tuiEraseDataContent ((char *) NULL);
d260 1
a260 3

  return;
}				/* tuiRefreshDataWin */
d263 1
a263 4
/*
   ** tuiCheckDataValues().
   **        Function to check the data values and hilite any that have changed
 */
d265 1
a265 1
tuiCheckDataValues (struct frame_info *frame)
d294 1
a294 1
}				/* tuiCheckDataValues */
d297 1
a297 4
/*
   ** tuiVerticalDataScroll()
   **        Scroll the data window vertically forward or backward.
 */
d299 1
a299 1
tuiVerticalDataScroll (TuiScrollDirection scrollDirection, int numToScroll)
d321 1
a321 1
      tuiEraseDataContent ((char *) NULL);
@


1.2
log
@2004-01-19  Andrew Cagney  <cagney@@redhat.com>

	* tui/tui-regs.h: Include "tui-data.h".
	(tuiFirstRegElementNoInLine): Delete declaration.
	(tui_display_registers_from): Rename tuiDisplayRegistersFrom.
	(tui_last_regs_line_no): Rename tuiLastRegsLineNo.
	(tui_line_from_reg_element_no): Rename tuiLineFromRegElementNo.
	(tui_calculate_regs_column_count): Rename
	tuiCalculateRegsColumnCount.
	(tui_check_register_values): Rename tuiCheckRegisterValues.
	(tui_show_registers): Rename tuiShowRegisters.
	(tui_display_registers_from_line): Rename
	tuiDisplayRegistersFromLine.
	(tui_first_reg_element_inline): Rename tuiFirstRegElementInLine.
	(tui_toggle_float_regs): Rename tuiToggleFloatRegs.
	(tui_first_reg_element_no_inline): Rename
	tuiFirstRegElementNoInLine.
	* tui/tui-data.h: Update copyright.
	(enum tui_register_display_type): Rename _TuiRegisterDisplayType.
	* tui/tui-windata.c: Update copyright, update references.
	* tui/tui-regs.c: Update copyright, update references.
	* tui/tui-win.c: Update copyright, update references.
	* tui/tui-layout.c: Update copyright, update references.
@
text
@d115 1
a115 1
      tuiDelwin (dataItemWinPtr->handle);
d128 1
a128 1
  checkAndDisplayHighlightIfNeeded (dataWin);
d163 1
a163 1
      checkAndDisplayHighlightIfNeeded (dataWin);
d191 1
a191 1
  checkAndDisplayHighlightIfNeeded (dataWin);
@


1.2.4.1
log
@2004-01-26  David Carlton  <carlton@@kealia.com>

	* Merge with mainline; tag is carlton_dictionary-20040126-merge.
@
text
@@


1.1
log
@2004-01-18  Andrew Cagney  <cagney@@redhat.com>

	* tui/tui-command.c: Rename tui/tuiCommand.c.
	* tui/tui-command.h: Rename tui/tuiCommand.h.
	* tui/tui-data.c: Rename tui/tuiData.c.
	* tui/tui-data.h: Rename tui/tuiData.h.
	* tui/tui-disasm.c: Rename tui/tuiDisassem.c.
	* tui/tui-disasm.h: Rename tui/tuiDisassem.h.
	* tui/tui-io.c: Rename tui/tuiIO.c.
	* tui/tui-io.h: Rename tui/tuiIO.h.
	* tui/tui-layout.c: Rename tui/tuiLayout.c.
	* tui/tui-layout.h: Rename tui/tuiLayout.h.
	* tui/tui-regs.c: Rename tui/tuiRegs.c.
	* tui/tui-regs.h: Rename tui/tuiRegs.h.
	* tui/tui-source.c: Rename tui/tuiSource.c.
	* tui/tui-source.h: Rename tui/tuiSource.h.
	* tui/tui-stack.c: Rename tui/tuiStack.c.
	* tui/tui-stack.h: Rename tui/tuiStack.h.
	* tui/tui-win.c: Rename tui/tuiWin.c.
	* tui/tui-win.h: Rename tui/tuiWin.h.
	* tui/tui-windata.c: Rename tui/tuiDataWin.c.
	* tui/tui-windata.h: Rename tui/tuiDataWin.h.
	* tui/tui-wingeneral.c: Rename tui/tuiGeneralWin.c.
	* tui/tui-wingeneral.h: Rename tui/tuiGeneralWin.h.
	* tui/tui-winsource.c: Rename tui/tuiSourceWin.c.
	* tui/tui-winsource.h: Rename tui/tuiSourceWin.h.
	* tui/tui-file.c: Update includes.
	* tui/tui-hooks.c: Update includes.
	* tui/tui-interp.c: Update includes.
	* tui/tui.c: Update includes.
	* Makefile.in: Update all tui/ dependencies.
	(SUBDIR_TUI_OBS, SUBDIR_TUI_SRCS): Update file names.
@
text
@d3 2
a4 2
   Copyright 1998, 1999, 2000, 2001, 2002, 2003 Free Software Foundation,
   Inc.
d90 1
a90 1
  if ((firstElementNo = tuiFirstRegElementNoInLine (lineNo)) == -1)
d164 1
a164 1
      tuiDisplayRegistersFrom (0);
d195 1
a195 1
    tuiDisplayRegistersFromLine (_lineNo, TRUE);
d199 1
a199 1
      int regsLastLine = tuiLastRegsLineNo ();
d203 1
a203 1
      if (tuiDisplayRegistersFromLine (_lineNo, FALSE) < 0)
d237 1
a237 1
    firstLine = tuiLineFromRegElementNo (elementNo);
d281 1
a281 1
  tuiCheckRegisterValues (frame);
d323 1
a323 1
    firstLine = tuiLineFromRegElementNo (firstElementNo);
@

