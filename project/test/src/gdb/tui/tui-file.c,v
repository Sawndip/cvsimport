head	1.25;
access;
symbols
	gdb_7_6_1-2013-08-30-release:1.25
	gdb_7_6-2013-04-26-release:1.25
	gdb_7_6-branch:1.25.0.2
	gdb_7_6-2013-03-12-branchpoint:1.25
	gdb_7_5_1-2012-11-29-release:1.24
	gdb_7_5-2012-08-17-release:1.24
	gdb_7_5-branch:1.24.0.2
	gdb_7_5-2012-07-18-branchpoint:1.24
	gdb_7_4_1-2012-04-26-release:1.23.4.1
	gdb_7_4-2012-01-24-release:1.23.4.1
	gdb_7_4-branch:1.23.0.4
	gdb_7_4-2011-12-13-branchpoint:1.23
	gdb_7_3_1-2011-09-04-release:1.23
	gdb_7_3-2011-07-26-release:1.23
	gdb_7_3-branch:1.23.0.2
	gdb_7_3-2011-04-01-branchpoint:1.23
	gdb_7_2-2010-09-02-release:1.22
	gdb_7_2-branch:1.22.0.2
	gdb_7_2-2010-07-07-branchpoint:1.22
	gdb_7_1-2010-03-18-release:1.21
	gdb_7_1-branch:1.21.0.2
	gdb_7_1-2010-02-18-branchpoint:1.21
	gdb_7_0_1-2009-12-22-release:1.20
	gdb_7_0-2009-10-06-release:1.20
	gdb_7_0-branch:1.20.0.4
	gdb_7_0-2009-09-16-branchpoint:1.20
	arc-sim-20090309:1.19
	msnyder-checkpoint-072509-branch:1.20.0.2
	msnyder-checkpoint-072509-branchpoint:1.20
	arc-insight_6_8-branch:1.19.0.16
	arc-insight_6_8-branchpoint:1.19
	insight_6_8-branch:1.19.0.14
	insight_6_8-branchpoint:1.19
	reverse-20081226-branch:1.19.0.12
	reverse-20081226-branchpoint:1.19
	multiprocess-20081120-branch:1.19.0.10
	multiprocess-20081120-branchpoint:1.19
	reverse-20080930-branch:1.19.0.8
	reverse-20080930-branchpoint:1.19
	reverse-20080717-branch:1.19.0.6
	reverse-20080717-branchpoint:1.19
	msnyder-reverse-20080609-branch:1.19.0.4
	msnyder-reverse-20080609-branchpoint:1.19
	drow-reverse-20070409-branch:1.14.0.2
	drow-reverse-20070409-branchpoint:1.14
	gdb_6_8-2008-03-27-release:1.19
	gdb_6_8-branch:1.19.0.2
	gdb_6_8-2008-02-26-branchpoint:1.19
	gdb_6_7_1-2007-10-29-release:1.18
	gdb_6_7-2007-10-10-release:1.18
	gdb_6_7-branch:1.18.0.2
	gdb_6_7-2007-09-07-branchpoint:1.18
	insight_6_6-20070208-release:1.13
	gdb_6_6-2006-12-18-release:1.13
	gdb_6_6-branch:1.13.0.18
	gdb_6_6-2006-11-15-branchpoint:1.13
	insight_6_5-20061003-release:1.13
	gdb-csl-symbian-6_4_50_20060226-12:1.13
	gdb-csl-sourcerygxx-3_4_4-25:1.12
	nickrob-async-20060828-mergepoint:1.13
	gdb-csl-symbian-6_4_50_20060226-11:1.13
	gdb-csl-sourcerygxx-4_1-17:1.13
	gdb-csl-20060226-branch-local-2:1.13
	gdb-csl-sourcerygxx-4_1-14:1.13
	gdb-csl-sourcerygxx-4_1-13:1.13
	gdb-csl-sourcerygxx-4_1-12:1.13
	gdb-csl-sourcerygxx-3_4_4-21:1.13
	gdb_6_5-20060621-release:1.13
	gdb-csl-sourcerygxx-4_1-9:1.13
	gdb-csl-sourcerygxx-4_1-8:1.13
	gdb-csl-sourcerygxx-4_1-7:1.13
	gdb-csl-arm-2006q1-6:1.13
	gdb-csl-sourcerygxx-4_1-6:1.13
	gdb-csl-symbian-6_4_50_20060226-10:1.13
	gdb-csl-symbian-6_4_50_20060226-9:1.13
	gdb-csl-symbian-6_4_50_20060226-8:1.13
	gdb-csl-coldfire-4_1-11:1.13
	gdb-csl-sourcerygxx-3_4_4-19:1.13
	gdb-csl-coldfire-4_1-10:1.13
	gdb_6_5-branch:1.13.0.16
	gdb_6_5-2006-05-14-branchpoint:1.13
	gdb-csl-sourcerygxx-4_1-5:1.13
	nickrob-async-20060513-branch:1.13.0.14
	nickrob-async-20060513-branchpoint:1.13
	gdb-csl-sourcerygxx-4_1-4:1.13
	msnyder-reverse-20060502-branch:1.13.0.12
	msnyder-reverse-20060502-branchpoint:1.13
	gdb-csl-morpho-4_1-4:1.13
	gdb-csl-sourcerygxx-3_4_4-17:1.13
	readline_5_1-import-branch:1.13.0.10
	readline_5_1-import-branchpoint:1.13
	gdb-csl-20060226-branch-merge-to-csl-symbian-1:1.13
	gdb-csl-symbian-20060226-branch:1.13.0.8
	gdb-csl-symbian-20060226-branchpoint:1.13
	gdb-csl-20060226-branch-merge-to-csl-local-1:1.13
	msnyder-reverse-20060331-branch:1.13.0.6
	msnyder-reverse-20060331-branchpoint:1.13
	gdb-csl-available-20060303-branch:1.13.0.4
	gdb-csl-available-20060303-branchpoint:1.13
	gdb-csl-20060226-branch:1.13.0.2
	gdb-csl-20060226-branchpoint:1.13
	gdb_6_4-20051202-release:1.12
	msnyder-fork-checkpoint-branch:1.12.0.12
	msnyder-fork-checkpoint-branchpoint:1.12
	gdb-csl-gxxpro-6_3-branch:1.12.0.10
	gdb-csl-gxxpro-6_3-branchpoint:1.12
	gdb_6_4-branch:1.12.0.8
	gdb_6_4-2005-11-01-branchpoint:1.12
	gdb-csl-arm-20051020-branch:1.12.0.6
	gdb-csl-arm-20051020-branchpoint:1.12
	msnyder-tracepoint-checkpoint-branch:1.12.0.4
	msnyder-tracepoint-checkpoint-branchpoint:1.12
	gdb-csl-arm-20050325-2005-q1b:1.12
	gdb-csl-arm-20050325-2005-q1a:1.12
	csl-arm-20050325-branch:1.12.0.2
	csl-arm-20050325-branchpoint:1.12
	gdb-post-i18n-errorwarning-20050211:1.11
	gdb-pre-i18n-errorwarning-20050211:1.11
	gdb_6_3-20041109-release:1.11
	gdb_6_3-branch:1.11.0.14
	gdb_6_3-20041019-branchpoint:1.11
	drow_intercu-merge-20040921:1.11
	drow_intercu-merge-20040915:1.11
	jimb-gdb_6_2-e500-branch:1.11.0.16
	jimb-gdb_6_2-e500-branchpoint:1.11
	gdb_6_2-20040730-release:1.11
	gdb_6_2-branch:1.11.0.12
	gdb_6_2-2004-07-10-gmt-branchpoint:1.11
	gdb_6_1_1-20040616-release:1.11
	gdb_6_1-2004-04-05-release:1.11
	drow_intercu-merge-20040402:1.11
	drow_intercu-merge-20040327:1.11
	ezannoni_pie-20040323-branch:1.11.0.10
	ezannoni_pie-20040323-branchpoint:1.11
	cagney_tramp-20040321-mergepoint:1.11
	cagney_tramp-20040309-branch:1.11.0.8
	cagney_tramp-20040309-branchpoint:1.11
	gdb_6_1-branch:1.11.0.6
	gdb_6_1-2004-03-01-gmt-branchpoint:1.11
	drow_intercu-20040221-branch:1.11.0.4
	drow_intercu-20040221-branchpoint:1.11
	cagney_bfdfile-20040213-branch:1.11.0.2
	cagney_bfdfile-20040213-branchpoint:1.11
	drow-cplus-merge-20040208:1.10
	carlton_dictionary-20040126-merge:1.10
	cagney_bigcore-20040122-branch:1.10.0.2
	cagney_bigcore-20040122-branchpoint:1.10
	drow-cplus-merge-20040113:1.9
	drow-cplus-merge-20031224:1.9
	drow-cplus-merge-20031220:1.9
	carlton_dictionary-20031215-merge:1.9
	drow-cplus-merge-20031214:1.9
	carlton-dictionary-20031111-merge:1.9
	gdb_6_0-2003-10-04-release:1.9
	kettenis_sparc-20030918-branch:1.9.0.64
	kettenis_sparc-20030918-branchpoint:1.9
	carlton_dictionary-20030917-merge:1.9
	ezannoni_pie-20030916-branchpoint:1.9
	ezannoni_pie-20030916-branch:1.9.0.62
	cagney_x86i386-20030821-branch:1.9.0.60
	cagney_x86i386-20030821-branchpoint:1.9
	carlton_dictionary-20030805-merge:1.9
	carlton_dictionary-20030627-merge:1.9
	gdb_6_0-branch:1.9.0.58
	gdb_6_0-2003-06-23-branchpoint:1.9
	jimb-ppc64-linux-20030613-branch:1.9.0.56
	jimb-ppc64-linux-20030613-branchpoint:1.9
	cagney_convert-20030606-branch:1.9.0.54
	cagney_convert-20030606-branchpoint:1.9
	cagney_writestrings-20030508-branch:1.9.0.52
	cagney_writestrings-20030508-branchpoint:1.9
	jimb-ppc64-linux-20030528-branch:1.9.0.50
	jimb-ppc64-linux-20030528-branchpoint:1.9
	carlton_dictionary-20030523-merge:1.9
	cagney_fileio-20030521-branch:1.9.0.48
	cagney_fileio-20030521-branchpoint:1.9
	kettenis_i386newframe-20030517-mergepoint:1.9
	jimb-ppc64-linux-20030509-branch:1.9.0.46
	jimb-ppc64-linux-20030509-branchpoint:1.9
	kettenis_i386newframe-20030504-mergepoint:1.9
	carlton_dictionary-20030430-merge:1.9
	kettenis_i386newframe-20030419-branch:1.9.0.44
	kettenis_i386newframe-20030419-branchpoint:1.9
	carlton_dictionary-20030416-merge:1.9
	cagney_frameaddr-20030409-mergepoint:1.9
	kettenis_i386newframe-20030406-branch:1.9.0.42
	kettenis_i386newframe-20030406-branchpoint:1.9
	cagney_frameaddr-20030403-branchpoint:1.9
	cagney_frameaddr-20030403-branch:1.9.0.40
	cagney_framebase-20030330-mergepoint:1.9
	cagney_framebase-20030326-branch:1.9.0.38
	cagney_framebase-20030326-branchpoint:1.9
	cagney_lazyid-20030317-branch:1.9.0.36
	cagney_lazyid-20030317-branchpoint:1.9
	kettenis-i386newframe-20030316-mergepoint:1.9
	offbyone-20030313-branch:1.9.0.34
	offbyone-20030313-branchpoint:1.9
	kettenis-i386newframe-20030308-branch:1.9.0.32
	kettenis-i386newframe-20030308-branchpoint:1.9
	carlton_dictionary-20030305-merge:1.9
	cagney_offbyone-20030303-branch:1.9.0.30
	cagney_offbyone-20030303-branchpoint:1.9
	carlton_dictionary-20030207-merge:1.9
	interps-20030203-mergepoint:1.9
	interps-20030202-branch:1.9.0.28
	interps-20030202-branchpoint:1.9
	cagney-unwind-20030108-branch:1.9.0.26
	cagney-unwind-20030108-branchpoint:1.9
	carlton_dictionary-20021223-merge:1.9
	gdb_5_3-2002-12-12-release:1.9
	carlton_dictionary-20021115-merge:1.9
	kseitz_interps-20021105-merge:1.9
	kseitz_interps-20021103-merge:1.9
	drow-cplus-merge-20021020:1.9
	drow-cplus-merge-20021025:1.9
	carlton_dictionary-20021025-merge:1.9
	carlton_dictionary-20021011-merge:1.9
	drow-cplus-branch:1.9.0.24
	drow-cplus-branchpoint:1.9
	kseitz_interps-20020930-merge:1.9
	carlton_dictionary-20020927-merge:1.9
	carlton_dictionary-branch:1.9.0.22
	carlton_dictionary-20020920-branchpoint:1.9
	gdb_5_3-branch:1.9.0.20
	gdb_5_3-2002-09-04-branchpoint:1.9
	kseitz_interps-20020829-merge:1.9
	cagney_sysregs-20020825-branch:1.9.0.18
	cagney_sysregs-20020825-branchpoint:1.9
	readline_4_3-import-branch:1.9.0.16
	readline_4_3-import-branchpoint:1.9
	gdb_5_2_1-2002-07-23-release:1.9
	kseitz_interps-20020528-branch:1.9.0.14
	kseitz_interps-20020528-branchpoint:1.9
	cagney_regbuf-20020515-branch:1.9.0.12
	cagney_regbuf-20020515-branchpoint:1.9
	jimb-macro-020506-branch:1.9.0.10
	jimb-macro-020506-branchpoint:1.9
	gdb_5_2-2002-04-29-release:1.9
	gdb_5_2-branch:1.9.0.8
	gdb_5_2-2002-03-03-branchpoint:1.9
	gdb_5_1_1-2002-01-24-release:1.9
	gdb_5_1_0_1-2002-01-03-release:1.9
	cygnus_cvs_20020108_pre:1.9
	gdb_5_1_0_1-2002-01-03-branch:1.9.0.6
	gdb_5_1_0_1-2002-01-03-branchpoint:1.9
	gdb_5_1-2001-11-21-release:1.9
	gdb_s390-2001-09-26-branch:1.9.0.4
	gdb_s390-2001-09-26-branchpoint:1.9
	gdb_5_1-2001-07-29-branch:1.9.0.2
	gdb_5_1-2001-07-29-branchpoint:1.9
	dberlin-typesystem-branch:1.6.0.2
	dberlin-typesystem-branchpoint:1.6
	gdb-post-ptid_t-2001-05-03:1.6
	gdb-pre-ptid_t-2001-05-03:1.6
	insight-precleanup-2001-01-01:1.5
	gdb-post-protoization-2000-07-29:1.4
	gdb-pre-protoization-2000-07-29:1.3
	gdb-premipsmulti-2000-06-06-branch:1.3.0.2
	gdb-premipsmulti-2000-06-06-branchpoint:1.3
	gdb-post-params-removal-2000-06-04:1.3
	gdb-pre-params-removal-2000-06-04:1.3
	gdb-post-params-removal-2000-05-28:1.3
	gdb-pre-params-removal-2000-05-28:1.2
	gdb_5_0-2000-05-19-release:1.1.1.2
	gdb_4_18_2-2000-05-18-release:1.1.1.2
	gdb_4_95_1-2000-05-11-snapshot:1.1.1.2
	gdb_4_95_0-2000-04-27-snapshot:1.1.1.2
	gdb_5_0-2000-04-10-branch:1.1.1.2.0.2
	gdb_5_0-2000-04-10-branchpoint:1.1.1.2
	repo-unification-2000-02-06:1.1.1.2
	insight-2000-02-04:1.1.1.2
	gdb-2000-02-04:1.1.1.2
	gdb-2000-02-02:1.1.1.2
	gdb-2000-02-01:1.1.1.2
	gdb-2000-01-31:1.1.1.1
	SNAPSHOT:1.1.1;
locks; strict;
comment	@ * @;
expand	@o@;


1.25
date	2013.01.01.06.41.30;	author brobecke;	state Exp;
branches;
next	1.24;

1.24
date	2012.01.04.08.27.58;	author brobecke;	state Exp;
branches;
next	1.23;

1.23
date	2011.01.01.15.33.52;	author brobecke;	state Exp;
branches
	1.23.4.1;
next	1.22;

1.22
date	2010.05.17.22.21.43;	author msnyder;	state Exp;
branches;
next	1.21;

1.21
date	2010.01.01.07.32.07;	author brobecke;	state Exp;
branches;
next	1.20;

1.20
date	2009.01.03.05.58.08;	author brobecke;	state Exp;
branches;
next	1.19;

1.19
date	2008.01.01.22.53.22;	author drow;	state Exp;
branches;
next	1.18;

1.18
date	2007.08.23.18.08.50;	author brobecke;	state Exp;
branches;
next	1.17;

1.17
date	2007.08.15.00.19.44;	author msnyder;	state Exp;
branches;
next	1.16;

1.16
date	2007.08.14.21.20.09;	author msnyder;	state Exp;
branches;
next	1.15;

1.15
date	2007.08.01.20.15.36;	author msnyder;	state Exp;
branches;
next	1.14;

1.14
date	2007.01.09.17.59.14;	author drow;	state Exp;
branches;
next	1.13;

1.13
date	2005.12.23.19.10.02;	author eliz;	state Exp;
branches;
next	1.12;

1.12
date	2005.02.11.18.13.55;	author cagney;	state Exp;
branches;
next	1.11;

1.11
date	2004.02.08.01.32.26;	author cagney;	state Exp;
branches;
next	1.10;

1.10
date	2004.01.19.04.31.50;	author cagney;	state Exp;
branches;
next	1.9;

1.9
date	2001.07.21.20.55.34;	author ciceron;	state Exp;
branches
	1.9.22.1
	1.9.24.1
	1.9.62.1;
next	1.8;

1.8
date	2001.07.17.20.22.51;	author ezannoni;	state Exp;
branches;
next	1.7;

1.7
date	2001.07.17.06.42.58;	author ciceron;	state Exp;
branches;
next	1.6;

1.6
date	2001.02.08.06.03.54;	author cagney;	state Exp;
branches;
next	1.5;

1.5
date	2000.12.15.01.01.51;	author kevinb;	state Exp;
branches;
next	1.4;

1.4
date	2000.07.30.01.48.28;	author kevinb;	state Exp;
branches;
next	1.3;

1.3
date	2000.05.28.01.12.42;	author kevinb;	state Exp;
branches;
next	1.2;

1.2
date	2000.05.26.06.15.49;	author cagney;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.01.03.19.29;	author jsm;	state Exp;
branches
	1.1.1.1;
next	;

1.23.4.1
date	2012.01.06.04.54.35;	author brobecke;	state Exp;
branches;
next	;

1.9.22.1
date	2004.01.26.19.11.45;	author carlton;	state Exp;
branches;
next	;

1.9.24.1
date	2004.02.09.19.43.56;	author drow;	state Exp;
branches;
next	;

1.9.62.1
date	2004.03.23.20.09.16;	author ezannoni;	state Exp;
branches;
next	;

1.1.1.1
date	2000.02.01.03.19.29;	author jsm;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2000.02.02.00.21.19;	author jsm;	state Exp;
branches;
next	;


desc
@@


1.25
log
@Update years in copyright notice for the GDB files.

Two modifications:
  1. The addition of 2013 to the copyright year range for every file;
  2. The use of a single year range, instead of potentially multiple
     year ranges, as approved by the FSF.
@
text
@/* UI_FILE - a generic STDIO like output stream.
   Copyright (C) 1999-2013 Free Software Foundation, Inc.

   This file is part of GDB.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */

#include "defs.h"
#include "ui-file.h"
#include "tui/tui-file.h"
#include "tui/tui-io.h"

#include "tui.h"

#include "gdb_string.h"

/* A ``struct ui_file'' that is compatible with all the legacy
   code.  */

/* new */
enum streamtype
{
  afile,
  astring
};

/* new */
struct tui_stream
{
  int *ts_magic;
  enum streamtype ts_streamtype;
  FILE *ts_filestream;
  char *ts_strbuf;
  int ts_buflen;
};

static ui_file_flush_ftype tui_file_flush;
extern ui_file_fputs_ftype tui_file_fputs;
static ui_file_isatty_ftype tui_file_isatty;
static ui_file_rewind_ftype tui_file_rewind;
static ui_file_put_ftype tui_file_put;
static ui_file_delete_ftype tui_file_delete;
static struct ui_file *tui_file_new (void);
static int tui_file_magic;

static struct ui_file *
tui_file_new (void)
{
  struct tui_stream *tui = XMALLOC (struct tui_stream);
  struct ui_file *file = ui_file_new ();

  set_ui_file_data (file, tui, tui_file_delete);
  set_ui_file_flush (file, tui_file_flush);
  set_ui_file_fputs (file, tui_file_fputs);
  set_ui_file_isatty (file, tui_file_isatty);
  set_ui_file_rewind (file, tui_file_rewind);
  set_ui_file_put (file, tui_file_put);
  tui->ts_magic = &tui_file_magic;
  return file;
}

static void
tui_file_delete (struct ui_file *file)
{
  struct tui_stream *tmpstream = ui_file_data (file);

  if (tmpstream->ts_magic != &tui_file_magic)
    internal_error (__FILE__, __LINE__,
		    _("tui_file_delete: bad magic number"));
  if ((tmpstream->ts_streamtype == astring) 
      && (tmpstream->ts_strbuf != NULL))
    {
      xfree (tmpstream->ts_strbuf);
    }
  xfree (tmpstream);
}

struct ui_file *
tui_fileopen (FILE *stream)
{
  struct ui_file *file = tui_file_new ();
  struct tui_stream *tmpstream = ui_file_data (file);

  tmpstream->ts_streamtype = afile;
  tmpstream->ts_filestream = stream;
  tmpstream->ts_strbuf = NULL;
  tmpstream->ts_buflen = 0;
  return file;
}

struct ui_file *
tui_sfileopen (int n)
{
  struct ui_file *file = tui_file_new ();
  struct tui_stream *tmpstream = ui_file_data (file);

  tmpstream->ts_streamtype = astring;
  tmpstream->ts_filestream = NULL;
  if (n > 0)
    {
      tmpstream->ts_strbuf = xmalloc ((n + 1) * sizeof (char));
      tmpstream->ts_strbuf[0] = '\0';
    }
  else
    /* Do not allocate the buffer now.  The first time something is
       printed one will be allocated by tui_file_adjust_strbuf().  */
    tmpstream->ts_strbuf = NULL;
  tmpstream->ts_buflen = n;
  return file;
}

static int
tui_file_isatty (struct ui_file *file)
{
  struct tui_stream *stream = ui_file_data (file);

  if (stream->ts_magic != &tui_file_magic)
    internal_error (__FILE__, __LINE__,
		    _("tui_file_isatty: bad magic number"));
  if (stream->ts_streamtype == afile)
    return (isatty (fileno (stream->ts_filestream)));
  else
    return 0;
}

static void
tui_file_rewind (struct ui_file *file)
{
  struct tui_stream *stream = ui_file_data (file);

  if (stream->ts_magic != &tui_file_magic)
    internal_error (__FILE__, __LINE__,
		    _("tui_file_rewind: bad magic number"));
  stream->ts_strbuf[0] = '\0';
}

static void
tui_file_put (struct ui_file *file,
	      ui_file_put_method_ftype *write,
	      void *dest)
{
  struct tui_stream *stream = ui_file_data (file);

  if (stream->ts_magic != &tui_file_magic)
    internal_error (__FILE__, __LINE__,
		    _("tui_file_put: bad magic number"));
  if (stream->ts_streamtype == astring)
    write (dest, stream->ts_strbuf, strlen (stream->ts_strbuf));
}

/* All TUI I/O sent to the *_filtered and *_unfiltered functions
   eventually ends up here.  The fputs_unfiltered_hook is primarily
   used by GUIs to collect all output and send it to the GUI, instead
   of the controlling terminal.  Only output to gdb_stdout and
   gdb_stderr are sent to the hook.  Everything else is sent on to
   fputs to allow file I/O to be handled appropriately.  */

/* FIXME: Should be broken up and moved to a TUI specific file.  */

void
tui_file_fputs (const char *linebuffer, struct ui_file *file)
{
  struct tui_stream *stream = ui_file_data (file);

  if (stream->ts_streamtype == astring)
    {
      tui_file_adjust_strbuf (strlen (linebuffer), file);
      strcat (stream->ts_strbuf, linebuffer);
    }
  else
    {
      tui_puts (linebuffer);
    }
}

char *
tui_file_get_strbuf (struct ui_file *file)
{
  struct tui_stream *stream = ui_file_data (file);

  if (stream->ts_magic != &tui_file_magic)
    internal_error (__FILE__, __LINE__,
		    _("tui_file_get_strbuf: bad magic number"));
  return (stream->ts_strbuf);
}

/* Adjust the length of the buffer by the amount necessary to
   accomodate appending a string of length N to the buffer
   contents.  */
void
tui_file_adjust_strbuf (int n, struct ui_file *file)
{
  struct tui_stream *stream = ui_file_data (file);
  int non_null_chars;

  if (stream->ts_magic != &tui_file_magic)
    internal_error (__FILE__, __LINE__,
		    _("tui_file_adjust_strbuf: bad magic number"));

  if (stream->ts_streamtype != astring)
    return;

  if (stream->ts_strbuf)
    {
      /* There is already a buffer allocated.  */
      non_null_chars = strlen (stream->ts_strbuf);

      if (n > (stream->ts_buflen - non_null_chars - 1))
	{
	  stream->ts_buflen = n + non_null_chars + 1;
	  stream->ts_strbuf = xrealloc (stream->ts_strbuf, stream->ts_buflen);
	}
    }
  else
    /* No buffer yet, so allocate one of the desired size.  */
    stream->ts_strbuf = xmalloc ((n + 1) * sizeof (char));
}

static void
tui_file_flush (struct ui_file *file)
{
  struct tui_stream *stream = ui_file_data (file);

  if (stream->ts_magic != &tui_file_magic)
    internal_error (__FILE__, __LINE__,
		    _("tui_file_flush: bad magic number"));

  switch (stream->ts_streamtype)
    {
    case astring:
      break;
    case afile:
      fflush (stream->ts_filestream);
      break;
    }
}
@


1.24
log
@Copyright year update in most files of the GDB Project.

gdb/ChangeLog:

        Copyright year update in most files of the GDB Project.
@
text
@d2 1
a2 1
   Copyright (C) 1999-2001, 2007-2012 Free Software Foundation, Inc.
@


1.23
log
@run copyright.sh for 2011.
@
text
@d2 1
a2 2
   Copyright (C) 1999, 2000, 2001, 2007, 2008, 2009, 2010, 2011
   Free Software Foundation, Inc.
@


1.23.4.1
log
@Copyright year update in most files of the GDB Project.

gdb/ChangeLog:

        Copyright year update in most files of the GDB Project.
@
text
@d2 2
a3 1
   Copyright (C) 1999-2001, 2007-2012 Free Software Foundation, Inc.
@


1.22
log
@2010-05-17  Michael Snyder  <msnyder@@vmware.com>

	* tui/tui.c: White space.
	* tui/tui-data.c: White space.
	* tui/tui-disasm.c: White space.
	* tui/tui-file.c: White space.
	* tui/tui-interp.c: White space.
	* tui/tui-main.c: White space.
	* tui/tui-out.c: White space.
	* tui/tui-regs.c: White space.
	* tui/tui-source.c: White space.
	* tui/tui-stack.c: White space.
	* tui/tui-win.c: White space.
	* tui/tui-winsource.c: White space.
@
text
@d2 1
a2 1
   Copyright (C) 1999, 2000, 2001, 2007, 2008, 2009, 2010
@


1.21
log
@Update copyright year in most headers.

Automatic update by copyright.sh.
@
text
@d63 1
d78 1
d95 1
d108 1
d128 1
d142 1
d155 1
d192 1
d207 1
d235 1
@


1.20
log
@        Updated copyright notices for most files.
@
text
@d2 1
a2 1
   Copyright (C) 1999, 2000, 2001, 2007, 2008, 2009
@


1.19
log
@	Updated copyright notices for most files.
@
text
@d2 2
a3 1
   Copyright (C) 1999, 2000, 2001, 2007, 2008 Free Software Foundation, Inc.
@


1.18
log
@        Switch the license of all .c files to GPLv3.
        Switch the license of all .h files to GPLv3.
        Switch the license of all .cc files to GPLv3.
@
text
@d2 1
a2 1
   Copyright (C) 1999, 2000, 2001, 2007 Free Software Foundation, Inc.
@


1.17
log
@2007-08-14  Michael Snyder  <msnyder@@access-company.com>

	* tui-command.c, tui-data.c, tui-disasm.c, tui-file.c, tui-io.c,
	tui-layout.c, tui-regs.c, tui-source.c, tui-win.c, tui-windata.c,
	tui-wingeneral.c, tui-winsource.c: Coding standard, && and ||
	go at beginning of new line.
@
text
@d8 1
a8 1
   the Free Software Foundation; either version 2 of the License, or
d17 1
a17 3
   along with this program; if not, write to the Free Software
   Foundation, Inc., 51 Franklin Street, Fifth Floor,
   Boston, MA 02110-1301, USA.  */
@


1.16
log
@2007-08-14  Michael Snyder  <msnyder@@access-company.com>

	* tui-command.c, tui-data.c, tui-data.h, tui-disasm.c, tui-file.c,
	tui-hooks.c, tui-interp.c, tui-io.c, tui-layout.c, tui-out.c,
	tui-regs.c, tui-regs.h, tui-source.c, tui-stack.c, tui-win.c,
	tui-windata.c, tui-wingeneral.c, tui-winsource.c, tui-winsource.h,
	tui.c, tui.h: Comment reformatting to coding standard (capitals,
	spaces after periods, etc).
@
text
@d81 2
a82 2
  if ((tmpstream->ts_streamtype == astring) &&
      (tmpstream->ts_strbuf != NULL))
@


1.15
log
@2007-08-01  Michael Snyder  <msnyder@@access-company.com>

	* tui/tui-data.c (tui_alloc_content): Move assign out of if,
	clean up long lines.
	(tui_alloc_generic_win_info): Tidy by using XMALLOC macro.
	(tui_alloc_win_info): Ditto.
	(tui_add_content_elements): Ditto.
	* tui/tui-file.c (tui_file_magic): Ditto.
@
text
@d31 1
a31 1
   code. */
d114 2
a115 2
    /* Do not allocate the buffer now.  The first time something is printed
       one will be allocated by tui_file_adjust_strbuf()  */
d164 1
a164 1
/* FIXME: Should be broken up and moved to a TUI specific file. */
d192 3
a194 2
/* adjust the length of the buffer by the amount necessary
   to accomodate appending a string of length N to the buffer contents */
d209 1
a209 1
      /* There is already a buffer allocated */
d219 1
a219 1
    /* No buffer yet, so allocate one of the desired size */
@


1.14
log
@Copyright updates for 2007.
@
text
@d62 1
a62 1
  struct tui_stream *tui = xmalloc (sizeof (struct tui_stream));
@


1.13
log
@	* tui/tui-file.c:
	* tui/tui-disasm.c:
	* tui/tui-data.h:
	* tui/tui-data.c:
	* tui/tui-command.h:
	* tui/tui-command.c:
	* tui/tui-win.h:
	* tui/tui-win.h:
	* tui/tui-win.c:
	* tui/tui-stack.h:
	* tui/tui-stack.c:
	* tui/tui-source.h:
	* tui/tui-source.c:
	* tui/tui-regs.h:
	* tui/tui-regs.c:
	* tui/tui-out.c:
	* tui/tui-main.c:
	* tui/tui-layout.h:
	* tui/tui-layout.c:
	* tui/tui-io.h:
	* tui/tui-io.c:
	* tui/tui-interp.c:
	* tui/tui-hooks.h:
	* tui/tui-hooks.c:
	* tui/tui-file.h:
	* tui/tui.h:
	* tui/tui.c:
	* tui/tui-winsource.h:
	* tui/tui-winsource.c:
	* tui/tui-wingeneral.h:
	* tui/tui-wingeneral.c:
	* tui/tui-windata.h:
	* tui/tui-windata.c: Add (C) after Copyright.  Update the FSF
	address.
@
text
@d2 1
a2 1
   Copyright (C) 1999, 2000, 2001 Free Software Foundation, Inc.
@


1.12
log
@2005-02-11  Andrew Cagney  <cagney@@gnu.org>

	Mark up error_no_arg, query, perror_with_name, complaint, and
	internal_error.
	* breakpoint.c, cp-abi.c, cp-namespace.c, cp-support.c: Update.
	* cris-tdep.c, dbxread.c, dictionary.c, dsrec.c: Update.
	* dummy-frame.c, dve3900-rom.c, dwarf2-frame.c, dwarf2expr.c: Update.
	* dwarf2read.c, dwarfread.c, elfread.c, event-loop.c: Update.
	* exceptions.c, exec.c, f-lang.c, findvar.c, fork-child.c: Update.
	* frame-unwind.c, frame.c, frv-linux-tdep.c, frv-tdep.c: Update.
	* gdb_assert.h, gdbarch.c, gdbtypes.c, gnu-nat.c: Update.
	* go32-nat.c, hppa-tdep.c, hppabsd-nat.c, hpread.c: Update.
	* i386-linux-nat.c, i386-nat.c, i386-tdep.c, i386bsd-nat.c: Update.
	* i386fbsd-nat.c, inf-ptrace.c, inf-ttrace.c, infcall.c: Update.
	* infcmd.c, inflow.c, infptrace.c, infrun.c, inftarg.c: Update.
	* interps.c, language.c, linespec.c, linux-nat.c: Update.
	* m32r-linux-nat.c, m68k-tdep.c, m68kbsd-nat.c: Update.
	* m68klinux-nat.c, m88kbsd-nat.c, macroexp.c, macroscope.c: Update.
	* macrotab.c, maint.c, mdebugread.c, memattr.c: Update.
	* mips-linux-tdep.c, mips-tdep.c, mips64obsd-nat.c: Update.
	* mipsnbsd-nat.c, mn10300-tdep.c, monitor.c, nto-procfs.c: Update.
	* objc-lang.c, objfiles.c, objfiles.h, ocd.c, osabi.c: Update.
	* parse.c, ppc-bdm.c, ppc-linux-nat.c, ppc-sysv-tdep.c: Update.
	* ppcnbsd-nat.c, ppcobsd-nat.c, printcmd.c, procfs.c: Update.
	* regcache.c, reggroups.c, remote-e7000.c, remote-mips.c: Update.
	* remote-rdp.c, remote-sds.c, remote-sim.c, remote-st.c: Update.
	* remote-utils.c, remote.c, rs6000-nat.c, rs6000-tdep.c: Update.
	* s390-nat.c, s390-tdep.c, sentinel-frame.c, serial.c: Update.
	* sh-tdep.c, sh3-rom.c, sh64-tdep.c, shnbsd-nat.c: Update.
	* solib-aix5.c, solib-svr4.c, solib.c, source.c: Update.
	* sparc-nat.c, stabsread.c, stack.c, symfile.c, symtab.c: Update.
	* symtab.h, target.c, tracepoint.c, ui-file.c, ui-out.c: Update.
	* utils.c, valops.c, valprint.c, vax-nat.c, vaxbsd-nat.c: Update.
	* win32-nat.c, xcoffread.c, xstormy16-tdep.c: Update.
	* cli/cli-cmds.c, cli/cli-logging.c, cli/cli-script.c: Update.
	* cli/cli-setshow.c, mi/mi-cmd-break.c, mi/mi-cmds.c: Update.
	* mi/mi-console.c, mi/mi-getopt.c, mi/mi-out.c: Update.
	* tui/tui-file.c, tui/tui-interp.c: Update.
@
text
@d2 1
a2 1
   Copyright 1999, 2000, 2001 Free Software Foundation, Inc.
d18 2
a19 2
   Foundation, Inc., 59 Temple Place - Suite 330,
   Boston, MA 02111-1307, USA.  */
@


1.11
log
@2004-02-07  Andrew Cagney  <cagney@@redhat.com>

	* tui/tui-command.c: Include "gdb_string.h", delete register
	attribute, use ISO-C function signatures.
	* tui/tui-disasm.c, tui/tui-file.c, tui/tui-io.c: Ditto.
	* tui/tui-layout.c, tui/tui-regs.c, tui/tui-source.c: Ditto.
	* tui/tui-stack.c, tui/tui-win.c, tui/tui-winsource.c: Ditto.
	* tui/tui.c: Ditto.
@
text
@d80 1
a80 1
		    "tui_file_delete: bad magic number");
d127 1
a127 1
		    "tui_file_isatty: bad magic number");
d140 1
a140 1
		    "tui_file_rewind: bad magic number");
d152 1
a152 1
		    "tui_file_put: bad magic number");
d188 1
a188 1
		    "tui_file_get_strbuf: bad magic number");
d201 1
a201 1
		    "tui_file_adjust_strbuf: bad magic number");
d228 1
a228 1
		    "tui_file_flush: bad magic number");
@


1.10
log
@2004-01-18  Andrew Cagney  <cagney@@redhat.com>

	* tui/tui-command.c: Rename tui/tuiCommand.c.
	* tui/tui-command.h: Rename tui/tuiCommand.h.
	* tui/tui-data.c: Rename tui/tuiData.c.
	* tui/tui-data.h: Rename tui/tuiData.h.
	* tui/tui-disasm.c: Rename tui/tuiDisassem.c.
	* tui/tui-disasm.h: Rename tui/tuiDisassem.h.
	* tui/tui-io.c: Rename tui/tuiIO.c.
	* tui/tui-io.h: Rename tui/tuiIO.h.
	* tui/tui-layout.c: Rename tui/tuiLayout.c.
	* tui/tui-layout.h: Rename tui/tuiLayout.h.
	* tui/tui-regs.c: Rename tui/tuiRegs.c.
	* tui/tui-regs.h: Rename tui/tuiRegs.h.
	* tui/tui-source.c: Rename tui/tuiSource.c.
	* tui/tui-source.h: Rename tui/tuiSource.h.
	* tui/tui-stack.c: Rename tui/tuiStack.c.
	* tui/tui-stack.h: Rename tui/tuiStack.h.
	* tui/tui-win.c: Rename tui/tuiWin.c.
	* tui/tui-win.h: Rename tui/tuiWin.h.
	* tui/tui-windata.c: Rename tui/tuiDataWin.c.
	* tui/tui-windata.h: Rename tui/tuiDataWin.h.
	* tui/tui-wingeneral.c: Rename tui/tuiGeneralWin.c.
	* tui/tui-wingeneral.h: Rename tui/tuiGeneralWin.h.
	* tui/tui-winsource.c: Rename tui/tuiSourceWin.c.
	* tui/tui-winsource.h: Rename tui/tuiSourceWin.h.
	* tui/tui-file.c: Update includes.
	* tui/tui-hooks.c: Update includes.
	* tui/tui-interp.c: Update includes.
	* tui/tui.c: Update includes.
	* Makefile.in: Update all tui/ dependencies.
	(SUBDIR_TUI_OBS, SUBDIR_TUI_SRCS): Update file names.
@
text
@d28 1
a28 1
#include <string.h>
@


1.9
log
@	* tui-file.c (tui_file_fputs): Use tui_puts.
@
text
@d24 1
a24 1
#include "tui/tuiIO.h"
@


1.9.62.1
log
@merge mainline changes to branch
@
text
@d24 1
a24 1
#include "tui/tui-io.h"
d28 1
a28 1
#include "gdb_string.h"
@


1.9.24.1
log
@Merge drow-cplus-merge-20040208 to drow-cplus-branch.
@
text
@d24 1
a24 1
#include "tui/tui-io.h"
@


1.9.22.1
log
@2004-01-26  David Carlton  <carlton@@kealia.com>

	* Merge with mainline; tag is carlton_dictionary-20040126-merge.
@
text
@d24 1
a24 1
#include "tui/tui-io.h"
@


1.8
log
@2001-07-17  Elena Zannoni  <ezannoni@@redhat.com>

	* Makefile.in (tui-file.o): Update dependencies.
	* tui/tui-file.c: Add include of tuiIO.h, for tuiPuts_unfiltered.
@
text
@d178 1
a178 1
      tuiPuts_unfiltered (linebuffer, file);
@


1.7
log
@	* tui-file.h (fputs_unfiltered_hook): Remove.
	* tui-file.c (tui_file_flush): Remove fputs_unfiltered_hook.
	(tui_file_fputs): Likewise; simplify
@
text
@d24 1
@


1.6
log
@Add __FILE__ and __LINE__ parameter to internal_error() /
internal_verror().
@
text
@a24 1
#ifdef TUI
a25 4
#include "tuiData.h"
#include "tuiIO.h"
#include "tuiCommand.h"
#endif
a28 5
/* Called instead of fputs for all TUI_FILE output.  */

void (*fputs_unfiltered_hook) (const char *linebuffer,
			       struct ui_file * stream);

d169 6
a174 11
#if defined(TUI)
  extern int tui_owns_terminal;
#endif
  /* NOTE: cagney/1999-10-13: The use of fputs_unfiltered_hook is
     seriously discouraged.  Those wanting to hook output should
     instead implement their own ui_file object and install that. See
     also tui_file_flush(). */
  if (fputs_unfiltered_hook
      && (file == gdb_stdout
	  || file == gdb_stderr))
    fputs_unfiltered_hook (linebuffer, file);
d177 1
a177 47
#if defined(TUI)
      if (tui_version && tui_owns_terminal)
	{
	  /* If we get here somehow while updating the TUI (from
	   * within a tuiDo(), then we need to temporarily 
	   * set up the terminal for GDB output. This probably just
	   * happens on error output.
	   */

	  if (stream->ts_streamtype == astring)
	    {
	      tui_file_adjust_strbuf (strlen (linebuffer), file);
	      strcat (stream->ts_strbuf, linebuffer);
	    }
	  else
	    {
	      tuiTermUnsetup (0, (tui_version) ? cmdWin->detail.commandInfo.curch : 0);
	      fputs (linebuffer, stream->ts_filestream);
	      tuiTermSetup (0);
	      if (linebuffer[strlen (linebuffer) - 1] == '\n')
		tuiClearCommandCharCount ();
	      else
		tuiIncrCommandCharCountBy (strlen (linebuffer));
	    }
	}
      else
	{
	  /* The normal case - just do a fputs() */
	  if (stream->ts_streamtype == astring)
	    {
	      tui_file_adjust_strbuf (strlen (linebuffer), file);
	      strcat (stream->ts_strbuf, linebuffer);
	    }
	  else
	    fputs (linebuffer, stream->ts_filestream);
	}


#else
      if (stream->ts_streamtype == astring)
	{
	  tui_file_adjust_strbuf (strlen (linebuffer), file);
	  strcat (stream->ts_strbuf, linebuffer);
	}
      else
	fputs (linebuffer, stream->ts_filestream);
#endif
a227 7

  /* NOTE: cagney/1999-10-12: If we've been linked with code that uses
     fputs_unfiltered_hook then we assume that it doesn't need to know
     about flushes.  Code that does need to know about flushes can
     implement a proper ui_file object. */
  if (fputs_unfiltered_hook)
    return;
@


1.5
log
@Replace free() with xfree().
@
text
@d2 1
a2 1
   Copyright (C) 1999, 2000 Free Software Foundation, Inc.
d88 2
a89 1
    internal_error ("tui_file_delete: bad magic number");
d135 2
a136 1
    internal_error ("tui_file_isatty: bad magic number");
d148 2
a149 1
    internal_error ("tui_file_rewind: bad magic number");
d160 2
a161 1
    internal_error ("tui_file_put: bad magic number");
d247 2
a248 1
    internal_error ("tui_file_get_strbuf: bad magic number");
d260 2
a261 1
    internal_error ("tui_file_adjust_strbuf: bad magic number");
d287 2
a288 1
    internal_error ("tui_file_flush: bad magic number");
@


1.4
log
@Protoization.
@
text
@d92 1
a92 1
      free (tmpstream->ts_strbuf);
d94 1
a94 1
  free (tmpstream);
@


1.3
log
@PARAMS removal.
@
text
@d69 1
a69 1
tui_file_new ()
d84 1
a84 2
tui_file_delete (file)
     struct ui_file *file;
d98 1
a98 2
tui_fileopen (stream)
     FILE *stream;
d110 1
a110 2
tui_sfileopen (n)
     int n;
d130 1
a130 2
tui_file_isatty (file)
     struct ui_file *file;
d142 1
a142 2
tui_file_rewind (file)
     struct ui_file *file;
d172 1
a172 3
tui_file_fputs (linebuffer, file)
     const char *linebuffer;
     struct ui_file *file;
d277 1
a277 2
tui_file_flush (file)
     struct ui_file *file;
@


1.2
log
@Fix bitrot in tui-file.c.
@
text
@d65 1
a65 1
static struct ui_file *tui_file_new PARAMS ((void));
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/* GDB_FILE - a generic STDIO like output stream.
d22 1
a22 1
#include "gdb-file.h"
d25 7
d36 2
a37 1
void (*fputs_unfiltered_hook) (const char *linebuffer, GDB_FILE * stream);
d39 1
a39 1
/* A ``struct gdb_file'' that is compatible with all the legacy
d59 7
a65 7
static gdb_file_flush_ftype tui_file_flush;
extern gdb_file_fputs_ftype tui_file_fputs;
static gdb_file_isatty_ftype tui_file_isatty;
static gdb_file_rewind_ftype tui_file_rewind;
static gdb_file_put_ftype tui_file_put;
static gdb_file_delete_ftype tui_file_delete;
static struct gdb_file *tui_file_new PARAMS ((void));
d68 1
a68 1
static struct gdb_file *
d72 7
a78 7
  struct gdb_file *file = gdb_file_new ();
  set_gdb_file_data (file, tui, tui_file_delete);
  set_gdb_file_flush (file, tui_file_flush);
  set_gdb_file_fputs (file, tui_file_fputs);
  set_gdb_file_isatty (file, tui_file_isatty);
  set_gdb_file_rewind (file, tui_file_rewind);
  set_gdb_file_put (file, tui_file_put);
d85 1
a85 1
     struct gdb_file *file;
d87 1
a87 1
  struct tui_stream *tmpstream = gdb_file_data (file);
d98 1
a98 1
struct gdb_file *
d102 2
a103 2
  struct gdb_file *file = tui_file_new ();
  struct tui_stream *tmpstream = gdb_file_data (file);
d111 1
a111 1
struct gdb_file *
d115 2
a116 2
  struct gdb_file *file = tui_file_new ();
  struct tui_stream *tmpstream = gdb_file_data (file);
d134 1
a134 1
     struct gdb_file *file;
d136 1
a136 1
  struct tui_stream *stream = gdb_file_data (file);
d147 1
a147 1
     struct gdb_file *file;
d149 1
a149 1
  struct tui_stream *stream = gdb_file_data (file);
d156 2
a157 2
tui_file_put (struct gdb_file *file,
	      gdb_file_put_method_ftype *write,
d160 1
a160 1
  struct tui_stream *stream = gdb_file_data (file);
d179 1
a179 1
     GDB_FILE *file;
d181 1
a181 1
  struct tui_stream *stream = gdb_file_data (file);
d187 1
a187 1
     instead implement their own gdb_file object and install that. See
d206 1
a206 1
	      tui_file_adjust_strbuf (strlen (linebuffer), stream);
d225 1
a225 1
	      tui_file_adjust_strbuf (strlen (linebuffer), stream);
d246 1
a246 1
tui_file_get_strbuf (struct gdb_file *file)
d248 1
a248 1
  struct tui_stream *stream = gdb_file_data (file);
d257 1
a257 1
tui_file_adjust_strbuf (int n, struct gdb_file *file)
d259 1
a259 1
  struct tui_stream *stream = gdb_file_data (file);
d285 1
a285 1
     GDB_FILE *file;
d287 1
a287 1
  struct tui_stream *stream = gdb_file_data (file);
d294 1
a294 1
     implement a proper gdb_file object. */
@


1.1.1.1
log
@import gdb-2000-01-31 snapshot
@
text
@@


1.1.1.2
log
@import gdb-2000-02-01 snapshot
@
text
@d1 1
a1 1
/* UI_FILE - a generic STDIO like output stream.
d22 1
a22 1
#include "ui-file.h"
d29 1
a29 2
void (*fputs_unfiltered_hook) (const char *linebuffer,
			       struct ui_file * stream);
d31 1
a31 1
/* A ``struct ui_file'' that is compatible with all the legacy
d51 7
a57 7
static ui_file_flush_ftype tui_file_flush;
extern ui_file_fputs_ftype tui_file_fputs;
static ui_file_isatty_ftype tui_file_isatty;
static ui_file_rewind_ftype tui_file_rewind;
static ui_file_put_ftype tui_file_put;
static ui_file_delete_ftype tui_file_delete;
static struct ui_file *tui_file_new PARAMS ((void));
d60 1
a60 1
static struct ui_file *
d64 7
a70 7
  struct ui_file *file = ui_file_new ();
  set_ui_file_data (file, tui, tui_file_delete);
  set_ui_file_flush (file, tui_file_flush);
  set_ui_file_fputs (file, tui_file_fputs);
  set_ui_file_isatty (file, tui_file_isatty);
  set_ui_file_rewind (file, tui_file_rewind);
  set_ui_file_put (file, tui_file_put);
d77 1
a77 1
     struct ui_file *file;
d79 1
a79 1
  struct tui_stream *tmpstream = ui_file_data (file);
d90 1
a90 1
struct ui_file *
d94 2
a95 2
  struct ui_file *file = tui_file_new ();
  struct tui_stream *tmpstream = ui_file_data (file);
d103 1
a103 1
struct ui_file *
d107 2
a108 2
  struct ui_file *file = tui_file_new ();
  struct tui_stream *tmpstream = ui_file_data (file);
d126 1
a126 1
     struct ui_file *file;
d128 1
a128 1
  struct tui_stream *stream = ui_file_data (file);
d139 1
a139 1
     struct ui_file *file;
d141 1
a141 1
  struct tui_stream *stream = ui_file_data (file);
d148 2
a149 2
tui_file_put (struct ui_file *file,
	      ui_file_put_method_ftype *write,
d152 1
a152 1
  struct tui_stream *stream = ui_file_data (file);
d171 1
a171 1
     struct ui_file *file;
d173 1
a173 1
  struct tui_stream *stream = ui_file_data (file);
d179 1
a179 1
     instead implement their own ui_file object and install that. See
d238 1
a238 1
tui_file_get_strbuf (struct ui_file *file)
d240 1
a240 1
  struct tui_stream *stream = ui_file_data (file);
d249 1
a249 1
tui_file_adjust_strbuf (int n, struct ui_file *file)
d251 1
a251 1
  struct tui_stream *stream = ui_file_data (file);
d277 1
a277 1
     struct ui_file *file;
d279 1
a279 1
  struct tui_stream *stream = ui_file_data (file);
d286 1
a286 1
     implement a proper ui_file object. */
@

