head	1.14;
access;
symbols
	drow-cplus-merge-20040113:1.13
	drow-cplus-merge-20031224:1.13
	drow-cplus-merge-20031220:1.13
	carlton_dictionary-20031215-merge:1.13
	drow-cplus-merge-20031214:1.13
	carlton-dictionary-20031111-merge:1.13
	gdb_6_0-2003-10-04-release:1.13
	kettenis_sparc-20030918-branch:1.13.0.46
	kettenis_sparc-20030918-branchpoint:1.13
	carlton_dictionary-20030917-merge:1.13
	ezannoni_pie-20030916-branchpoint:1.13
	ezannoni_pie-20030916-branch:1.13.0.44
	cagney_x86i386-20030821-branch:1.13.0.42
	cagney_x86i386-20030821-branchpoint:1.13
	carlton_dictionary-20030805-merge:1.13
	carlton_dictionary-20030627-merge:1.13
	gdb_6_0-branch:1.13.0.40
	gdb_6_0-2003-06-23-branchpoint:1.13
	jimb-ppc64-linux-20030613-branch:1.13.0.38
	jimb-ppc64-linux-20030613-branchpoint:1.13
	cagney_convert-20030606-branch:1.13.0.36
	cagney_convert-20030606-branchpoint:1.13
	cagney_writestrings-20030508-branch:1.13.0.34
	cagney_writestrings-20030508-branchpoint:1.13
	jimb-ppc64-linux-20030528-branch:1.13.0.32
	jimb-ppc64-linux-20030528-branchpoint:1.13
	carlton_dictionary-20030523-merge:1.13
	cagney_fileio-20030521-branch:1.13.0.30
	cagney_fileio-20030521-branchpoint:1.13
	kettenis_i386newframe-20030517-mergepoint:1.13
	jimb-ppc64-linux-20030509-branch:1.13.0.28
	jimb-ppc64-linux-20030509-branchpoint:1.13
	kettenis_i386newframe-20030504-mergepoint:1.13
	carlton_dictionary-20030430-merge:1.13
	kettenis_i386newframe-20030419-branch:1.13.0.26
	kettenis_i386newframe-20030419-branchpoint:1.13
	carlton_dictionary-20030416-merge:1.13
	cagney_frameaddr-20030409-mergepoint:1.13
	kettenis_i386newframe-20030406-branch:1.13.0.24
	kettenis_i386newframe-20030406-branchpoint:1.13
	cagney_frameaddr-20030403-branchpoint:1.13
	cagney_frameaddr-20030403-branch:1.13.0.22
	cagney_framebase-20030330-mergepoint:1.13
	cagney_framebase-20030326-branch:1.13.0.20
	cagney_framebase-20030326-branchpoint:1.13
	cagney_lazyid-20030317-branch:1.13.0.18
	cagney_lazyid-20030317-branchpoint:1.13
	kettenis-i386newframe-20030316-mergepoint:1.13
	offbyone-20030313-branch:1.13.0.16
	offbyone-20030313-branchpoint:1.13
	kettenis-i386newframe-20030308-branch:1.13.0.14
	kettenis-i386newframe-20030308-branchpoint:1.13
	carlton_dictionary-20030305-merge:1.13
	cagney_offbyone-20030303-branch:1.13.0.12
	cagney_offbyone-20030303-branchpoint:1.13
	carlton_dictionary-20030207-merge:1.13
	interps-20030203-mergepoint:1.13
	interps-20030202-branch:1.13.0.10
	interps-20030202-branchpoint:1.13
	cagney-unwind-20030108-branch:1.13.0.8
	cagney-unwind-20030108-branchpoint:1.13
	carlton_dictionary-20021223-merge:1.13
	gdb_5_3-2002-12-12-release:1.13
	carlton_dictionary-20021115-merge:1.13
	kseitz_interps-20021105-merge:1.13
	kseitz_interps-20021103-merge:1.13
	drow-cplus-merge-20021020:1.13
	drow-cplus-merge-20021025:1.13
	carlton_dictionary-20021025-merge:1.13
	carlton_dictionary-20021011-merge:1.13
	drow-cplus-branch:1.13.0.6
	drow-cplus-branchpoint:1.13
	kseitz_interps-20020930-merge:1.13
	carlton_dictionary-20020927-merge:1.13
	carlton_dictionary-branch:1.13.0.4
	carlton_dictionary-20020920-branchpoint:1.13
	gdb_5_3-branch:1.13.0.2
	gdb_5_3-2002-09-04-branchpoint:1.13
	kseitz_interps-20020829-merge:1.11
	cagney_sysregs-20020825-branch:1.11.0.2
	cagney_sysregs-20020825-branchpoint:1.11
	readline_4_3-import-branch:1.7.0.16
	readline_4_3-import-branchpoint:1.7
	gdb_5_2_1-2002-07-23-release:1.7
	kseitz_interps-20020528-branch:1.7.0.14
	kseitz_interps-20020528-branchpoint:1.7
	cagney_regbuf-20020515-branch:1.7.0.12
	cagney_regbuf-20020515-branchpoint:1.7
	jimb-macro-020506-branch:1.7.0.10
	jimb-macro-020506-branchpoint:1.7
	gdb_5_2-2002-04-29-release:1.7
	gdb_5_2-branch:1.7.0.8
	gdb_5_2-2002-03-03-branchpoint:1.7
	gdb_5_1_1-2002-01-24-release:1.7
	gdb_5_1_0_1-2002-01-03-release:1.7
	cygnus_cvs_20020108_pre:1.7
	gdb_5_1_0_1-2002-01-03-branch:1.7.0.6
	gdb_5_1_0_1-2002-01-03-branchpoint:1.7
	gdb_5_1-2001-11-21-release:1.7
	gdb_s390-2001-09-26-branch:1.7.0.4
	gdb_s390-2001-09-26-branchpoint:1.7
	gdb_5_1-2001-07-29-branch:1.7.0.2
	gdb_5_1-2001-07-29-branchpoint:1.7
	dberlin-typesystem-branch:1.3.0.2
	dberlin-typesystem-branchpoint:1.3
	gdb-post-ptid_t-2001-05-03:1.3
	gdb-pre-ptid_t-2001-05-03:1.3
	insight-precleanup-2001-01-01:1.3
	gdb-post-protoization-2000-07-29:1.3
	gdb-pre-protoization-2000-07-29:1.3
	gdb-premipsmulti-2000-06-06-branch:1.2.0.2
	gdb-premipsmulti-2000-06-06-branchpoint:1.2
	gdb-post-params-removal-2000-06-04:1.2
	gdb-pre-params-removal-2000-06-04:1.2
	gdb-post-params-removal-2000-05-28:1.2
	gdb-pre-params-removal-2000-05-28:1.1.1.2
	gdb_5_0-2000-05-19-release:1.1.1.2
	gdb_4_18_2-2000-05-18-release:1.1.1.2
	gdb_4_95_1-2000-05-11-snapshot:1.1.1.2
	gdb_4_95_0-2000-04-27-snapshot:1.1.1.2
	gdb_5_0-2000-04-10-branch:1.1.1.2.0.2
	gdb_5_0-2000-04-10-branchpoint:1.1.1.2
	repo-unification-2000-02-06:1.1.1.2
	insight-2000-02-04:1.1.1.2
	gdb-2000-02-04:1.1.1.2
	gdb-2000-02-02:1.1.1.2
	gdb-2000-02-01:1.1.1.2
	gdb-2000-01-31:1.1.1.2
	gdb-2000-01-26:1.1.1.2
	gdb-2000-01-24:1.1.1.2
	gdb-2000-01-17:1.1.1.2
	gdb-2000-01-10:1.1.1.2
	gdb-2000-01-05:1.1.1.2
	gdb-1999-12-21:1.1.1.2
	gdb-1999-12-13:1.1.1.2
	gdb-1999-12-07:1.1.1.2
	gdb-1999-12-06:1.1.1.2
	gdb-1999-11-16:1.1.1.2
	gdb-1999-11-08:1.1.1.2
	gdb-1999-11-01:1.1.1.2
	gdb-1999-10-25:1.1.1.2
	gdb-1999-10-18:1.1.1.2
	gdb-1999-10-11:1.1.1.2
	gdb-1999-10-04:1.1.1.2
	gdb-1999-09-28:1.1.1.2
	gdb-1999-09-21:1.1.1.2
	gdb-1999-09-13:1.1.1.2
	gdb-1999-09-08:1.1.1.2
	gdb-1999-08-30:1.1.1.2
	gdb-1999-08-23:1.1.1.2
	gdb-1999-08-16:1.1.1.2
	gdb-1999-08-09:1.1.1.2
	gdb-1999-08-02:1.1.1.2
	gdb-1999-07-26:1.1.1.2
	gdb-1999-07-19:1.1.1.2
	gdb-1999-07-12:1.1.1.2
	gdb-post-reformat-19990707:1.1.1.2
	gdb-1999-07-07-post-reformat-snapshot:1.1.1.2
	gdb-pre-reformat-19990707:1.1.1.1
	gdb-1999-07-07:1.1.1.1
	gdb-1999-07-05:1.1.1.1
	gdb-1999-06-28:1.1.1.1
	gdb-1999-06-21:1.1.1.1
	gdb-1999-06-14:1.1.1.1
	gdb-1999-06-07:1.1.1.1
	gdb-1999-06-01:1.1.1.1
	gdb-4_18-branch:1.1.1.1.0.2
	gdb-4_18-release:1.1.1.1
	gdb-1999-05-25:1.1.1.1
	gdb-1999-05-19:1.1.1.1
	gdb-1999-05-10:1.1.1.1
	gdb-19990504:1.1.1.1
	gdb-19990422:1.1.1.1
	SNAPSHOT:1.1.1
	gdb-4_18:1.1.1.1
	GDB_4_18:1.1.1;
locks; strict;
comment	@ * @;
expand	@o@;


1.14
date	2004.01.19.04.31.53;	author cagney;	state dead;
branches;
next	1.13;

1.13
date	2002.08.31.12.25.29;	author ciceron;	state Exp;
branches
	1.13.4.1
	1.13.6.1
	1.13.44.1;
next	1.12;

1.12
date	2002.08.30.20.07.05;	author ciceron;	state Exp;
branches;
next	1.11;

1.11
date	2002.08.25.19.19.50;	author ciceron;	state Exp;
branches;
next	1.10;

1.10
date	2002.08.25.08.44.44;	author ciceron;	state Exp;
branches;
next	1.9;

1.9
date	2002.08.24.12.28.32;	author ciceron;	state Exp;
branches;
next	1.8;

1.8
date	2002.08.24.10.15.54;	author ciceron;	state Exp;
branches;
next	1.7;

1.7
date	2001.07.20.23.06.48;	author ciceron;	state Exp;
branches
	1.7.14.1;
next	1.6;

1.6
date	2001.07.20.22.26.54;	author ciceron;	state Exp;
branches;
next	1.5;

1.5
date	2001.07.18.20.59.00;	author ciceron;	state Exp;
branches;
next	1.4;

1.4
date	2001.07.14.19.01.25;	author ciceron;	state Exp;
branches;
next	1.3;

1.3
date	2000.06.22.07.16.20;	author kevinb;	state Exp;
branches;
next	1.2;

1.2
date	2000.05.28.01.12.42;	author kevinb;	state Exp;
branches;
next	1.1;

1.1
date	99.04.16.01.34.13;	author shebs;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.04.16.01.34.13;	author shebs;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	99.07.07.20.19.32;	author jsm;	state Exp;
branches;
next	;

1.7.14.1
date	2002.08.30.22.52.52;	author kseitz;	state Exp;
branches;
next	1.7.14.2;

1.7.14.2
date	2002.10.01.00.46.35;	author kseitz;	state Exp;
branches;
next	;

1.13.4.1
date	2004.01.26.19.11.45;	author carlton;	state dead;
branches;
next	;

1.13.6.1
date	2004.02.09.19.43.58;	author drow;	state dead;
branches;
next	;

1.13.44.1
date	2004.03.23.20.09.17;	author ezannoni;	state dead;
branches;
next	;


desc
@@


1.14
log
@2004-01-18  Andrew Cagney  <cagney@@redhat.com>

	* tui/tui-command.c: Rename tui/tuiCommand.c.
	* tui/tui-command.h: Rename tui/tuiCommand.h.
	* tui/tui-data.c: Rename tui/tuiData.c.
	* tui/tui-data.h: Rename tui/tuiData.h.
	* tui/tui-disasm.c: Rename tui/tuiDisassem.c.
	* tui/tui-disasm.h: Rename tui/tuiDisassem.h.
	* tui/tui-io.c: Rename tui/tuiIO.c.
	* tui/tui-io.h: Rename tui/tuiIO.h.
	* tui/tui-layout.c: Rename tui/tuiLayout.c.
	* tui/tui-layout.h: Rename tui/tuiLayout.h.
	* tui/tui-regs.c: Rename tui/tuiRegs.c.
	* tui/tui-regs.h: Rename tui/tuiRegs.h.
	* tui/tui-source.c: Rename tui/tuiSource.c.
	* tui/tui-source.h: Rename tui/tuiSource.h.
	* tui/tui-stack.c: Rename tui/tuiStack.c.
	* tui/tui-stack.h: Rename tui/tuiStack.h.
	* tui/tui-win.c: Rename tui/tuiWin.c.
	* tui/tui-win.h: Rename tui/tuiWin.h.
	* tui/tui-windata.c: Rename tui/tuiDataWin.c.
	* tui/tui-windata.h: Rename tui/tuiDataWin.h.
	* tui/tui-wingeneral.c: Rename tui/tuiGeneralWin.c.
	* tui/tui-wingeneral.h: Rename tui/tuiGeneralWin.h.
	* tui/tui-winsource.c: Rename tui/tuiSourceWin.c.
	* tui/tui-winsource.h: Rename tui/tuiSourceWin.h.
	* tui/tui-file.c: Update includes.
	* tui/tui-hooks.c: Update includes.
	* tui/tui-interp.c: Update includes.
	* tui/tui.c: Update includes.
	* Makefile.in: Update all tui/ dependencies.
	(SUBDIR_TUI_OBS, SUBDIR_TUI_SRCS): Update file names.
@
text
@/* TUI display source/assembly window.
   Copyright 1998, 1999, 2000, 2001, 2002 Free Software Foundation, Inc.
   Contributed by Hewlett-Packard Company.

   This file is part of GDB.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place - Suite 330,
   Boston, MA 02111-1307, USA.  */

#ifndef _TUI_SOURCEWIN_H
#define _TUI_SOURCEWIN_H

/* Update the execution windows to show the active breakpoints.
   This is called whenever a breakpoint is inserted, removed or
   has its state changed.  */
extern void tui_update_all_breakpoint_info (void);

/* Scan the source window and the breakpoints to update the
   hasBreak information for each line.
   Returns 1 if something changed and the execution window
   must be refreshed.  */
extern int tui_update_breakpoint_info (TuiWinInfoPtr win, int current_only);

/* Function to display the "main" routine.  */
extern void tui_display_main (void);
extern void tuiUpdateSourceWindow (TuiWinInfoPtr, struct symtab *, TuiLineOrAddress,
				   int);
extern void tuiUpdateSourceWindowAsIs (TuiWinInfoPtr, struct symtab *, TuiLineOrAddress,
				       int);
extern void tuiUpdateSourceWindowsWithAddr (CORE_ADDR);
extern void tuiUpdateSourceWindowsWithLine (struct symtab *, int);
extern void tuiClearSourceContent (TuiWinInfoPtr, int);
extern void tuiEraseSourceContent (TuiWinInfoPtr, int);
extern void tuiSetSourceContentNil (TuiWinInfoPtr, char *);
extern void tuiShowSourceContent (TuiWinInfoPtr);
extern void tuiHorizontalSourceScroll (TuiWinInfoPtr, TuiScrollDirection,
				       int);
extern TuiStatus tuiSetExecInfoContent (TuiWinInfoPtr);
extern void tuiShowExecInfoContent (TuiWinInfoPtr);
extern void tuiEraseExecInfoContent (TuiWinInfoPtr);
extern void tuiClearExecInfoContent (TuiWinInfoPtr);
extern void tuiUpdateExecInfo (TuiWinInfoPtr);

extern void tuiSetIsExecPointAt (TuiLineOrAddress, TuiWinInfoPtr);
extern TuiStatus tuiAllocSourceBuffer (TuiWinInfoPtr);
extern int tuiLineIsDisplayed (int, TuiWinInfoPtr, int);
extern int tuiAddrIsDisplayed (CORE_ADDR, TuiWinInfoPtr, int);


/*
   ** Constant definitions
 */
#define        SCROLL_THRESHOLD            2	/* threshold for lazy scroll */

#endif
/*_TUI_SOURCEWIN_H */
@


1.13
log
@	* tuiSourceWin.h (tuiUpdateAllExecInfos): Don't declare.
	(tuiClearAllExecInfosContent): Likewise.
	(tuiEraseAllExecInfosContent): Ditto.
	(tuiUpdateSourceWindowsFromLocator): Ditto.
	* tuiSourceWin.c (tuiUpdateAllExecInfos): Remove.
	* tui.h (tui_vCheckDataValues): Don't declare.
	(tui_vStartNewLines, tui_vAllSetHasBreakAt): Likewise.
	(tui_vUpdateLocatorFilename, tui_vUpdateSourceWindowsWithAddr): Ditto.
	(tui_vShowFrameInfo): Ditto.
@
text
@@


1.13.44.1
log
@merge mainline changes to branch
@
text
@@


1.13.6.1
log
@Merge drow-cplus-merge-20040208 to drow-cplus-branch.
@
text
@@


1.13.4.1
log
@2004-01-26  David Carlton  <carlton@@kealia.com>

	* Merge with mainline; tag is carlton_dictionary-20040126-merge.
@
text
@@


1.12
log
@	* tuiSourceWin.h (tui_update_all_breakpoint_info): Declare.
	(tui_update_breakpoint_info): Declare.
	(tuiSetHasBreakAt, tuiAllSetHasBreakAt): Remove.

	* tuiSourceWin.c (tuiUpdateSourceWindowAsIs): Update breakpoint
	information using tui_update_breakpoint_info.
	(tui_update_all_breakpoint_info): New function to refresh all
	execution windows.
	(tui_update_breakpoint_info): New function to recompute the status
	of exec info window from breakpoints.
	(tuiSetHasBreakAt, tuiAllSetHasBreakAt): Remove.
	(tuiSetExecInfoContent): Use the exec info flags computed by
	tui_update_breakpoint_info to display a short status about breakpoints.

	* tuiData.h (TuiExecInfoContent): New for exec info string.
	(TuiWhichElement): Use it.
	(TUI_BP_ENABLED, TUI_BP_DISABLED, TUI_BP_HIT): New defines.
	(TUI_BP_CONDITIONAL, TUI_BP_HARDWARE): New defines.
	(TUI_BP_HIT_POS, TUI_BP_BREAK_POS, TUI_EXEC_POS): Likewise.
	(TUI_EXECINFO_SIZE): Likewise.
	* tuiData.c (initContentElement): Clear exec info string.

	* tui-hooks.c (get_breakpoint): Remove.
	(tui_event_create_breakpoint): Call tui_update_all_breakpoint_info.
	(tui_event_delete_breakpoint): Likewise.
	(tui_event_modify_breakpoint): Likewise.
@
text
@a43 1
extern void tuiUpdateSourceWindowsFromLocator (void);
a52 1
extern void tuiEraseAllExecInfosContent (void);
a53 1
extern void tuiClearAllExecInfosContent (void);
a54 1
extern void tuiUpdateAllExecInfos (void);
@


1.11
log
@	* tuiSourceWin.c (tui_display_main): Rename from tuiDisplayMainFunction
	and use tuiGetBeginAsmAddress.
	* tuiSourceWin.h (tui_display_main): Declare.
	* tui.h (tuiDisplayMainFunction): Remove.
	* tui-hooks.c (tui_new_objfile_hook): Update.
@
text
@d25 11
a60 2
extern void tuiSetHasBreakAt (struct breakpoint *, TuiWinInfoPtr, int);
extern void tuiAllSetHasBreakAt (struct breakpoint *, int);
@


1.10
log
@	* tuiSourceWin.h (tuiEraseAllSourceContent): Don't declare.
	(tuiShowAllExecInfosContent): Likewise.
	* tuiSourceWin.c (tuiEraseAllSourceContent): Remove.
	(tuiShowAllExecInfosContent): Remove.
	(tuiAllocSourceBuffer): Remove unused locals.
@
text
@d25 2
a26 1
extern void tuiDisplayMainFunction (void);
@


1.9
log
@	* tuiSourceWin.c (tui_show_source_line): New function.
	(tuiShowSourceContent): Call it and avoid clearing the window before
	redrawing it.
	(tuiClearAllSourceWinsContent): Remove.
	* tuiSourceWin.h (tuiClearAllSourceWinsContent): Don't declare.
	* tuiWin.h (tuiClearWinFocus, tuiClearWinFocusFrom): Don't declare.
	* tuiWin.c (tuiClearWinFocus, tuiClearWinFocusFrom): Remove.
	(tuiRefreshAll): Don't clear the window.
	(_makeVisibleWithNewHeight): Don't clear locator line.
	(tuiResizeAll): Remove unused locals.
	(_tuiAdjustWinHeights): Likewise.
	(_makeInvisibleAndSetNewHeight): Likewise.
	(_newHeightOk): Likewise.
	* tuiLayout.c (showLayout): Don't clear source windows.
	(tuiSetLayout): Don't clear the window.
	(_initAndMakeWin): Likewise for status line.
	* tuiGeneralWin.c (makeVisible): Don't clear or refresh the window.
	(makeWindow): Likewise.
	(tuiClearWin): Remove.
	* tuiGeneralWin.h (tuiClearWin): Don't declare.
@
text
@a34 1
extern void tuiEraseAllSourceWinsContent (int);
a40 1
extern void tuiShowAllExecInfosContent (void);
@


1.8
log
@	* tuiSourceWin.c (tuiSrcWinIsDisplayed): Remove.
	(tuiAsmWinIsDisplayed): Remove.
	(tuiShowAllSourceWinsContent): Remove.
	(tuiUpdateOnEnd): Remove.
	* tuiGeneralWin.c (scrollWinForward): Remove.
	(scrollWinBackward): Remove.
	(_winResize): Don't declare.
	* tui.h (tuiUpdateOnEnd): Don't declare.
	(vcatch_errors, va_catch_errors): Likewise.
	* tuiSourceWin.h (tuiUpdateOnEnd): Likewise.
	(tuiShowAllSourceWinsContent): Likewise.
	* tuiGeneralWin.h (scrollWinForward): Likewise.
	(scrollWinBackward): Likewise.
@
text
@d2 1
a2 1
   Copyright 1998, 1999, 2000, 2001 Free Software Foundation, Inc.
a33 1
extern void tuiClearAllSourceWinsContent (int);
@


1.7
log
@	* tuiWin.c (_parseScrollingArgs): Fix uninitialized variable.
	(_makeVisibleWithNewHeight): Use TuiLineOrAddress type.

	* tuiStack.c (tuiShowFrameInfo): Use TuiLineOrAddress type.
	(tui_vUpdateLocatorFilename): Remove.
	* tuiStack.h: Update prototypes.

	* tuiSourceWin.c (tuiAddrIsDisplayed): New function.
	(tuiLineIsDisplayed): Split for address and line.
	(tuiUpdateSourceWindow): Use TuiLineOrAddress type.
	(tuiUpdateSourceWindowAsIs): Likewise.
	(tuiUpdateSourceWindowsWithAddr): Likewise.
	(tuiUpdateSourceWindowsWithLine): Likewise.
	(tuiHorizontalSourceScroll): Likewise.
	(tuiSetIsExecPointAt): Likewise.
	(tuiUpdateOnEnd): Likewise.
	* tuiSourceWin.h: Update prototypes.

	* tuiSource.c (tuiVerticalSourceScroll): Use TuiLineOrAddress type.
	(tuiShowSource): Likewise.
	(tuiVerticalSourceScroll): Likewise.
	* tuiSource.h (tuiShowSource): Update prototype.

	* tuiDisassem.c (tuiSetDisassemContent): Use CORE_ADDR for address.
	(tuiShowDisassem): Use TuiLineOrAddress type.
	(tuiShowDisassemAndUpdateSource): Likewise.
	(tuiVerticalDisassemScroll): Likewise.
	(tuiShowDisassemAsIs): Remove.
	* tuiDisassem.h (tuiSetDisassemContent): Update prototype.

	* tuiData.c (initWinInfo): Use CORE_ADDR for address.
	(clearWinDetail): Likewise.
	(displayableWinContentOf): Fix address conversion.
	(tuiNextWin): Fix crash when the window is not yet created.
	(partialWinByName): Likewise.
@
text
@a38 1
extern void tuiShowAllSourceWinsContent (void);
a40 2
extern void tuiUpdateOnEnd (void);

@


1.7.14.1
log
@Merge with kseitz_interps-20020829-merge tag from trunk.
@
text
@d2 1
a2 1
   Copyright 1998, 1999, 2000, 2001, 2002 Free Software Foundation, Inc.
d25 1
a25 2
/* Function to display the "main" routine.  */
extern void tui_display_main (void);
d34 1
d36 1
d39 1
d42 2
d46 1
@


1.7.14.2
log
@Merge with kseitz_interps-20020930-merge.
@
text
@a24 11
/* Update the execution windows to show the active breakpoints.
   This is called whenever a breakpoint is inserted, removed or
   has its state changed.  */
extern void tui_update_all_breakpoint_info (void);

/* Scan the source window and the breakpoints to update the
   hasBreak information for each line.
   Returns 1 if something changed and the execution window
   must be refreshed.  */
extern int tui_update_breakpoint_info (TuiWinInfoPtr win, int current_only);

d33 1
d43 1
d45 1
d47 1
d50 2
@


1.6
log
@	* tuiSourceWin.h: Remove unused declarations.
	* tuiSourceWin.c (tui_vUpdateSourceWindowsWithAddr): Remove.
	(tui_vUpdateSourceWindowsWithLine): Remove.
	(tui_vAllSetHasBreakAt): Remove.

	* tuiLayout.h (tui_set_layout): Declare.
	(tui_vSetLayoutTo): Remove.
	(tui_vAddWinToLayout): Remove.
	* tuiLayout.c (_tuiLayout_command): Call tui_enable() to force TUI.
	(_tuiToggleLayout_command): Remove.
	(_tuiToggleSplitLayout_command): Remove.
	(_tuiLayout_command): Remove.
	(tui_vSetLayoutTo): Remove.
	(tui_vAddWinToLayout): Remove.

	* tuiDataWin.h (tui_vCheckDataValues): Remove.
	* tuiDataWin.c (tui_vCheckDataValues): Remove.
@
text
@d26 1
a26 1
extern void tuiUpdateSourceWindow (TuiWinInfoPtr, struct symtab *, Opaque,
d28 1
a28 1
extern void tuiUpdateSourceWindowAsIs (TuiWinInfoPtr, struct symtab *, Opaque,
d54 1
a54 1
extern void tuiSetIsExecPointAt (Opaque, TuiWinInfoPtr);
d58 2
a59 1
extern int tuiLineIsDisplayed (Opaque, TuiWinInfoPtr, int);
@


1.5
log
@	* tuiData.h (TuiLocatorElement): Use CORE_ADDR for address member.
	(TuiLineOrAddress): Likewise.
	* tuiDisassem.c (tuiGetBeginAsmAddress): Use CORE_ADDR to specify
	an address.
	(tuiSetDisassemContent): Likewise.
	(tuiShowDisassem, tuiShowDisassemAndUpdateSource): Likewise.
	* tuiLayout.c (_extractDisplayStartAddr): Likewise.
	(tuiSetLayout): Likewise.
	* tuiSourceWin.c (tuiDisplayMainFunction): Likewise.
	(tuiUpdateSourceWindowsWithAddr): Likewise.
	(tuiUpdateSourceWindowsWithLine): Likewise.
	(tuiSetHasBreakAt): Likewise.
	* tuiStack.c (tuiSetLocatorInfo): Likewise.
	(tuiSwitchFilename): Likewise.
	(tuiUpdateLocatorInfoFromFrame): Likewise.
	(tuiSetLocatorContent): Likewise.
	(tuiShowFrameInfo): Likewise.
	* tuiDisassem.h: Update prototypes to use CORE_ADDR.
	* tuiSourceWin.h: Likewise.
	* tuiStack.h: Likewise.
@
text
@a30 1
extern void tui_vUpdateSourceWindowsWithAddr (va_list);
a31 1
extern void tui_vUpdateSourceWindowsWithLine (va_list);
a56 1
extern void tui_vAllSetHasBreakAt (va_list);
a64 23


/*
   ** Macros 
 */
#define    m_tuiSetBreakAt(bp, winInfo)       tuiSetHasBreakAt((bp, winInfo, TRUE)
#define    m_tuiClearBreakAt(bp, winInfo)     tuiSetHasBreakAt(bp, winInfo, FALSE)

#define    m_tuiAllSetBreakAt(bp)             tuiAllSetHasBreakAt(bp, TRUE)
#define    m_tuiAllClearBreakAt(bp)           tuiAllSetHasBreakAt(bp, FALSE)

#define    m_tuiSrcLineDisplayed(lineNo)      tuiLineIsDisplayed((Opaque)(lineNo), srcWin, FALSE)
#define    m_tuiSrcAddrDisplayed(addr)        tuiLineIsDisplayed((Opaque)(addr), disassemWin, FALSE)
#define    m_tuiSrcLineDisplayedWithinThreshold(lineNo) \
                                            tuiLineIsDisplayed((Opaque)(lineNo), srcWin, TRUE)
#define    m_tuiSrcAddrDisplayedWithinThreshold(addr) \
                                            tuiLineIsDisplayed((Opaque)(addr), disassemWin, TRUE)
#define m_tuiLineDisplayedWithinThreshold(winInfo, lineOrAddr)                                 \
                                    ( (winInfo == srcWin) ?                                    \
                                        m_tuiSrcLineDisplayedWithinThreshold(lineOrAddr) :    \
                                        m_tuiSrcAddrDisplayedWithinThreshold(lineOrAddr) )


@


1.4
log
@	* tuiWin.c, tuiWin.h, tui.c, tui.h, tuiCommand.c: Add FSF copyright.
	tuiCommand.h, tuiIO.c, tuiIO.h, tuiData.h, tuiData.c: Likewise.
	tuiDataWin.c, tuiDataWin.h, tuiDisassem.c, tuiDisassem.h: Likewise.
	tuiGeneralWin.c, tuiGeneralWin.h, tuiLayout.c, tuiLayout.h: Likewise.
	tuiRegs.c, tuiRegs.h, tuiSource.c, tuiSource.h: Likewise.
	tuiSouceWin.c, tuiSourceWin.h, tuiStack.c, tuiStack.h: Likewise.
@
text
@d30 1
a30 1
extern void tuiUpdateSourceWindowsWithAddr (Opaque);
@


1.3
log
@PARAMS elimination.
@
text
@d1 21
a23 4
/*
   ** This header file supports
 */

@


1.2
log
@PARAMS removal.
@
text
@d9 4
a12 4
extern void tuiUpdateSourceWindow PARAMS
  ((TuiWinInfoPtr, struct symtab *, Opaque, int));
extern void tuiUpdateSourceWindowAsIs PARAMS
  ((TuiWinInfoPtr, struct symtab *, Opaque, int));
@


1.1
log
@Initial revision
@
text
@d4 2
a5 2
** This header file supports
*/
d8 37
a44 36
extern void         tuiDisplayMainFunction PARAMS ((void));
extern void         tuiUpdateSourceWindow PARAMS 
                    	((TuiWinInfoPtr, struct symtab *, Opaque, int));
extern void         tuiUpdateSourceWindowAsIs PARAMS 
                        ((TuiWinInfoPtr, struct symtab *, Opaque, int));
extern void         tuiUpdateSourceWindowsWithAddr PARAMS ((Opaque));
extern void         tui_vUpdateSourceWindowsWithAddr PARAMS ((va_list));
extern void         tuiUpdateSourceWindowsWithLine PARAMS ((struct symtab *, int));
extern void         tui_vUpdateSourceWindowsWithLine PARAMS ((va_list));
extern void         tuiUpdateSourceWindowsFromLocator PARAMS ((void));
extern void         tuiClearSourceContent PARAMS ((TuiWinInfoPtr, int));
extern void         tuiClearAllSourceWinsContent PARAMS ((int));
extern void         tuiEraseSourceContent PARAMS ((TuiWinInfoPtr, int));
extern void         tuiEraseAllSourceWinsContent PARAMS ((int));
extern void         tuiSetSourceContentNil PARAMS ((TuiWinInfoPtr, char *));
extern void         tuiShowSourceContent PARAMS ((TuiWinInfoPtr));
extern void         tuiShowAllSourceWinsContent PARAMS ((void));
extern void         tuiHorizontalSourceScroll PARAMS ((TuiWinInfoPtr, TuiScrollDirection, int));
extern void         tuiUpdateOnEnd PARAMS ((void));

extern TuiStatus    tuiSetExecInfoContent PARAMS ((TuiWinInfoPtr));
extern void         tuiShowExecInfoContent PARAMS ((TuiWinInfoPtr));
extern void         tuiShowAllExecInfosContent PARAMS ((void));
extern void         tuiEraseExecInfoContent PARAMS ((TuiWinInfoPtr));
extern void         tuiEraseAllExecInfosContent PARAMS ((void));
extern void         tuiClearExecInfoContent PARAMS ((TuiWinInfoPtr));
extern void         tuiClearAllExecInfosContent PARAMS ((void));
extern void         tuiUpdateExecInfo PARAMS ((TuiWinInfoPtr));
extern void         tuiUpdateAllExecInfos PARAMS ((void));

extern void         tuiSetIsExecPointAt PARAMS ((Opaque, TuiWinInfoPtr));
extern void         tuiSetHasBreakAt PARAMS ((struct breakpoint *, TuiWinInfoPtr, int));
extern void         tuiAllSetHasBreakAt PARAMS ((struct breakpoint *, int));
extern void         tui_vAllSetHasBreakAt PARAMS ((va_list));
extern TuiStatus    tuiAllocSourceBuffer PARAMS ((TuiWinInfoPtr));
extern int          tuiLineIsDisplayed PARAMS ((Opaque, TuiWinInfoPtr, int));
d48 3
a50 3
** Constant definitions
*/
#define        SCROLL_THRESHOLD            2 /* threshold for lazy scroll */
d54 2
a55 2
** Macros 
*/
d75 2
a76 1
#endif /*_TUI_SOURCEWIN_H */
@


1.1.1.1
log
@Initial creation of sourceware repository
@
text
@@


1.1.1.2
log
@import gdb-1999-07-07 post reformat
@
text
@d4 2
a5 2
   ** This header file supports
 */
d8 36
a43 36
extern void tuiDisplayMainFunction PARAMS ((void));
extern void tuiUpdateSourceWindow PARAMS
  ((TuiWinInfoPtr, struct symtab *, Opaque, int));
extern void tuiUpdateSourceWindowAsIs PARAMS
  ((TuiWinInfoPtr, struct symtab *, Opaque, int));
extern void tuiUpdateSourceWindowsWithAddr PARAMS ((Opaque));
extern void tui_vUpdateSourceWindowsWithAddr PARAMS ((va_list));
extern void tuiUpdateSourceWindowsWithLine PARAMS ((struct symtab *, int));
extern void tui_vUpdateSourceWindowsWithLine PARAMS ((va_list));
extern void tuiUpdateSourceWindowsFromLocator PARAMS ((void));
extern void tuiClearSourceContent PARAMS ((TuiWinInfoPtr, int));
extern void tuiClearAllSourceWinsContent PARAMS ((int));
extern void tuiEraseSourceContent PARAMS ((TuiWinInfoPtr, int));
extern void tuiEraseAllSourceWinsContent PARAMS ((int));
extern void tuiSetSourceContentNil PARAMS ((TuiWinInfoPtr, char *));
extern void tuiShowSourceContent PARAMS ((TuiWinInfoPtr));
extern void tuiShowAllSourceWinsContent PARAMS ((void));
extern void tuiHorizontalSourceScroll PARAMS ((TuiWinInfoPtr, TuiScrollDirection, int));
extern void tuiUpdateOnEnd PARAMS ((void));

extern TuiStatus tuiSetExecInfoContent PARAMS ((TuiWinInfoPtr));
extern void tuiShowExecInfoContent PARAMS ((TuiWinInfoPtr));
extern void tuiShowAllExecInfosContent PARAMS ((void));
extern void tuiEraseExecInfoContent PARAMS ((TuiWinInfoPtr));
extern void tuiEraseAllExecInfosContent PARAMS ((void));
extern void tuiClearExecInfoContent PARAMS ((TuiWinInfoPtr));
extern void tuiClearAllExecInfosContent PARAMS ((void));
extern void tuiUpdateExecInfo PARAMS ((TuiWinInfoPtr));
extern void tuiUpdateAllExecInfos PARAMS ((void));

extern void tuiSetIsExecPointAt PARAMS ((Opaque, TuiWinInfoPtr));
extern void tuiSetHasBreakAt PARAMS ((struct breakpoint *, TuiWinInfoPtr, int));
extern void tuiAllSetHasBreakAt PARAMS ((struct breakpoint *, int));
extern void tui_vAllSetHasBreakAt PARAMS ((va_list));
extern TuiStatus tuiAllocSourceBuffer PARAMS ((TuiWinInfoPtr));
extern int tuiLineIsDisplayed PARAMS ((Opaque, TuiWinInfoPtr, int));
d47 3
a49 3
   ** Constant definitions
 */
#define        SCROLL_THRESHOLD            2	/* threshold for lazy scroll */
d53 2
a54 2
   ** Macros 
 */
d74 1
a74 2
#endif
/*_TUI_SOURCEWIN_H */
@

