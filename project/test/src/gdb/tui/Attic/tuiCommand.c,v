head	1.8;
access;
symbols
	drow-cplus-merge-20040113:1.7
	drow-cplus-merge-20031224:1.7
	drow-cplus-merge-20031220:1.7
	carlton_dictionary-20031215-merge:1.7
	drow-cplus-merge-20031214:1.7
	carlton-dictionary-20031111-merge:1.7
	gdb_6_0-2003-10-04-release:1.7
	kettenis_sparc-20030918-branch:1.7.0.8
	kettenis_sparc-20030918-branchpoint:1.7
	carlton_dictionary-20030917-merge:1.7
	ezannoni_pie-20030916-branchpoint:1.7
	ezannoni_pie-20030916-branch:1.7.0.6
	cagney_x86i386-20030821-branch:1.7.0.4
	cagney_x86i386-20030821-branchpoint:1.7
	carlton_dictionary-20030805-merge:1.7
	carlton_dictionary-20030627-merge:1.7
	gdb_6_0-branch:1.7.0.2
	gdb_6_0-2003-06-23-branchpoint:1.7
	jimb-ppc64-linux-20030613-branch:1.6.0.50
	jimb-ppc64-linux-20030613-branchpoint:1.6
	cagney_convert-20030606-branch:1.6.0.48
	cagney_convert-20030606-branchpoint:1.6
	cagney_writestrings-20030508-branch:1.6.0.46
	cagney_writestrings-20030508-branchpoint:1.6
	jimb-ppc64-linux-20030528-branch:1.6.0.44
	jimb-ppc64-linux-20030528-branchpoint:1.6
	carlton_dictionary-20030523-merge:1.6
	cagney_fileio-20030521-branch:1.6.0.42
	cagney_fileio-20030521-branchpoint:1.6
	kettenis_i386newframe-20030517-mergepoint:1.6
	jimb-ppc64-linux-20030509-branch:1.6.0.40
	jimb-ppc64-linux-20030509-branchpoint:1.6
	kettenis_i386newframe-20030504-mergepoint:1.6
	carlton_dictionary-20030430-merge:1.6
	kettenis_i386newframe-20030419-branch:1.6.0.38
	kettenis_i386newframe-20030419-branchpoint:1.6
	carlton_dictionary-20030416-merge:1.6
	cagney_frameaddr-20030409-mergepoint:1.6
	kettenis_i386newframe-20030406-branch:1.6.0.36
	kettenis_i386newframe-20030406-branchpoint:1.6
	cagney_frameaddr-20030403-branchpoint:1.6
	cagney_frameaddr-20030403-branch:1.6.0.34
	cagney_framebase-20030330-mergepoint:1.6
	cagney_framebase-20030326-branch:1.6.0.32
	cagney_framebase-20030326-branchpoint:1.6
	cagney_lazyid-20030317-branch:1.6.0.30
	cagney_lazyid-20030317-branchpoint:1.6
	kettenis-i386newframe-20030316-mergepoint:1.6
	offbyone-20030313-branch:1.6.0.28
	offbyone-20030313-branchpoint:1.6
	kettenis-i386newframe-20030308-branch:1.6.0.26
	kettenis-i386newframe-20030308-branchpoint:1.6
	carlton_dictionary-20030305-merge:1.6
	cagney_offbyone-20030303-branch:1.6.0.24
	cagney_offbyone-20030303-branchpoint:1.6
	carlton_dictionary-20030207-merge:1.6
	interps-20030203-mergepoint:1.6
	interps-20030202-branch:1.6.0.22
	interps-20030202-branchpoint:1.6
	cagney-unwind-20030108-branch:1.6.0.20
	cagney-unwind-20030108-branchpoint:1.6
	carlton_dictionary-20021223-merge:1.6
	gdb_5_3-2002-12-12-release:1.6
	carlton_dictionary-20021115-merge:1.6
	kseitz_interps-20021105-merge:1.6
	kseitz_interps-20021103-merge:1.6
	drow-cplus-merge-20021020:1.6
	drow-cplus-merge-20021025:1.6
	carlton_dictionary-20021025-merge:1.6
	carlton_dictionary-20021011-merge:1.6
	drow-cplus-branch:1.6.0.18
	drow-cplus-branchpoint:1.6
	kseitz_interps-20020930-merge:1.6
	carlton_dictionary-20020927-merge:1.6
	carlton_dictionary-branch:1.6.0.16
	carlton_dictionary-20020920-branchpoint:1.6
	gdb_5_3-branch:1.6.0.14
	gdb_5_3-2002-09-04-branchpoint:1.6
	kseitz_interps-20020829-merge:1.6
	cagney_sysregs-20020825-branch:1.6.0.12
	cagney_sysregs-20020825-branchpoint:1.6
	readline_4_3-import-branch:1.6.0.10
	readline_4_3-import-branchpoint:1.6
	gdb_5_2_1-2002-07-23-release:1.6
	kseitz_interps-20020528-branch:1.6.0.8
	kseitz_interps-20020528-branchpoint:1.6
	cagney_regbuf-20020515-branch:1.6.0.6
	cagney_regbuf-20020515-branchpoint:1.6
	jimb-macro-020506-branch:1.6.0.4
	jimb-macro-020506-branchpoint:1.6
	gdb_5_2-2002-04-29-release:1.6
	gdb_5_2-branch:1.6.0.2
	gdb_5_2-2002-03-03-branchpoint:1.6
	gdb_5_1_1-2002-01-24-release:1.4
	gdb_5_1_0_1-2002-01-03-release:1.4
	cygnus_cvs_20020108_pre:1.4
	gdb_5_1_0_1-2002-01-03-branch:1.4.0.6
	gdb_5_1_0_1-2002-01-03-branchpoint:1.4
	gdb_5_1-2001-11-21-release:1.4
	gdb_s390-2001-09-26-branch:1.4.0.4
	gdb_s390-2001-09-26-branchpoint:1.4
	gdb_5_1-2001-07-29-branch:1.4.0.2
	gdb_5_1-2001-07-29-branchpoint:1.4
	dberlin-typesystem-branch:1.1.1.2.0.6
	dberlin-typesystem-branchpoint:1.1.1.2
	gdb-post-ptid_t-2001-05-03:1.1.1.2
	gdb-pre-ptid_t-2001-05-03:1.1.1.2
	insight-precleanup-2001-01-01:1.1.1.2
	gdb-post-protoization-2000-07-29:1.1.1.2
	gdb-pre-protoization-2000-07-29:1.1.1.2
	gdb-premipsmulti-2000-06-06-branch:1.1.1.2.0.4
	gdb-premipsmulti-2000-06-06-branchpoint:1.1.1.2
	gdb-post-params-removal-2000-06-04:1.1.1.2
	gdb-pre-params-removal-2000-06-04:1.1.1.2
	gdb-post-params-removal-2000-05-28:1.1.1.2
	gdb-pre-params-removal-2000-05-28:1.1.1.2
	gdb_5_0-2000-05-19-release:1.1.1.2
	gdb_4_18_2-2000-05-18-release:1.1.1.2
	gdb_4_95_1-2000-05-11-snapshot:1.1.1.2
	gdb_4_95_0-2000-04-27-snapshot:1.1.1.2
	gdb_5_0-2000-04-10-branch:1.1.1.2.0.2
	gdb_5_0-2000-04-10-branchpoint:1.1.1.2
	repo-unification-2000-02-06:1.1.1.2
	insight-2000-02-04:1.1.1.2
	gdb-2000-02-04:1.1.1.2
	gdb-2000-02-02:1.1.1.2
	gdb-2000-02-01:1.1.1.2
	gdb-2000-01-31:1.1.1.2
	gdb-2000-01-26:1.1.1.2
	gdb-2000-01-24:1.1.1.2
	gdb-2000-01-17:1.1.1.2
	gdb-2000-01-10:1.1.1.2
	gdb-2000-01-05:1.1.1.2
	gdb-1999-12-21:1.1.1.2
	gdb-1999-12-13:1.1.1.2
	gdb-1999-12-07:1.1.1.2
	gdb-1999-12-06:1.1.1.2
	gdb-1999-11-16:1.1.1.2
	gdb-1999-11-08:1.1.1.2
	gdb-1999-11-01:1.1.1.2
	gdb-1999-10-25:1.1.1.2
	gdb-1999-10-18:1.1.1.2
	gdb-1999-10-11:1.1.1.2
	gdb-1999-10-04:1.1.1.2
	gdb-1999-09-28:1.1.1.2
	gdb-1999-09-21:1.1.1.2
	gdb-1999-09-13:1.1.1.2
	gdb-1999-09-08:1.1.1.2
	gdb-1999-08-30:1.1.1.2
	gdb-1999-08-23:1.1.1.2
	gdb-1999-08-16:1.1.1.2
	gdb-1999-08-09:1.1.1.2
	gdb-1999-08-02:1.1.1.2
	gdb-1999-07-26:1.1.1.2
	gdb-1999-07-19:1.1.1.2
	gdb-1999-07-12:1.1.1.2
	gdb-post-reformat-19990707:1.1.1.2
	gdb-1999-07-07-post-reformat-snapshot:1.1.1.2
	gdb-pre-reformat-19990707:1.1.1.1
	gdb-1999-07-07:1.1.1.1
	gdb-1999-07-05:1.1.1.1
	gdb-1999-06-28:1.1.1.1
	gdb-1999-06-21:1.1.1.1
	gdb-1999-06-14:1.1.1.1
	gdb-1999-06-07:1.1.1.1
	gdb-1999-06-01:1.1.1.1
	gdb-4_18-branch:1.1.1.1.0.2
	gdb-4_18-release:1.1.1.1
	gdb-1999-05-25:1.1.1.1
	gdb-1999-05-19:1.1.1.1
	gdb-1999-05-10:1.1.1.1
	gdb-19990504:1.1.1.1
	gdb-19990422:1.1.1.1
	SNAPSHOT:1.1.1
	gdb-4_18:1.1.1.1
	GDB_4_18:1.1.1;
locks; strict;
comment	@ * @;
expand	@o@;


1.8
date	2004.01.19.04.31.51;	author cagney;	state dead;
branches;
next	1.7;

1.7
date	2003.06.22.15.21.38;	author drow;	state Exp;
branches
	1.7.6.1;
next	1.6;

1.6
date	2002.03.01.06.19.28;	author cagney;	state Exp;
branches
	1.6.16.1
	1.6.18.1;
next	1.5;

1.5
date	2002.02.08.15.54.32;	author drow;	state Exp;
branches;
next	1.4;

1.4
date	2001.07.20.22.17.49;	author ciceron;	state Exp;
branches;
next	1.3;

1.3
date	2001.07.14.19.31.09;	author ciceron;	state Exp;
branches;
next	1.2;

1.2
date	2001.07.14.19.01.25;	author ciceron;	state Exp;
branches;
next	1.1;

1.1
date	99.04.16.01.34.12;	author shebs;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.04.16.01.34.12;	author shebs;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	99.07.07.20.19.10;	author jsm;	state Exp;
branches;
next	;

1.6.16.1
date	2003.06.27.21.50.21;	author carlton;	state Exp;
branches;
next	1.6.16.2;

1.6.16.2
date	2004.01.26.19.11.45;	author carlton;	state dead;
branches;
next	;

1.6.18.1
date	2003.12.14.20.27.59;	author drow;	state Exp;
branches;
next	1.6.18.2;

1.6.18.2
date	2004.02.09.19.43.58;	author drow;	state dead;
branches;
next	;

1.7.6.1
date	2004.03.23.20.09.16;	author ezannoni;	state dead;
branches;
next	;


desc
@@


1.8
log
@2004-01-18  Andrew Cagney  <cagney@@redhat.com>

	* tui/tui-command.c: Rename tui/tuiCommand.c.
	* tui/tui-command.h: Rename tui/tuiCommand.h.
	* tui/tui-data.c: Rename tui/tuiData.c.
	* tui/tui-data.h: Rename tui/tuiData.h.
	* tui/tui-disasm.c: Rename tui/tuiDisassem.c.
	* tui/tui-disasm.h: Rename tui/tuiDisassem.h.
	* tui/tui-io.c: Rename tui/tuiIO.c.
	* tui/tui-io.h: Rename tui/tuiIO.h.
	* tui/tui-layout.c: Rename tui/tuiLayout.c.
	* tui/tui-layout.h: Rename tui/tuiLayout.h.
	* tui/tui-regs.c: Rename tui/tuiRegs.c.
	* tui/tui-regs.h: Rename tui/tuiRegs.h.
	* tui/tui-source.c: Rename tui/tuiSource.c.
	* tui/tui-source.h: Rename tui/tuiSource.h.
	* tui/tui-stack.c: Rename tui/tuiStack.c.
	* tui/tui-stack.h: Rename tui/tuiStack.h.
	* tui/tui-win.c: Rename tui/tuiWin.c.
	* tui/tui-win.h: Rename tui/tuiWin.h.
	* tui/tui-windata.c: Rename tui/tuiDataWin.c.
	* tui/tui-windata.h: Rename tui/tuiDataWin.h.
	* tui/tui-wingeneral.c: Rename tui/tuiGeneralWin.c.
	* tui/tui-wingeneral.h: Rename tui/tuiGeneralWin.h.
	* tui/tui-winsource.c: Rename tui/tuiSourceWin.c.
	* tui/tui-winsource.h: Rename tui/tuiSourceWin.h.
	* tui/tui-file.c: Update includes.
	* tui/tui-hooks.c: Update includes.
	* tui/tui-interp.c: Update includes.
	* tui/tui.c: Update includes.
	* Makefile.in: Update all tui/ dependencies.
	(SUBDIR_TUI_OBS, SUBDIR_TUI_SRCS): Update file names.
@
text
@/* Specific command window processing.

   Copyright 1998, 1999, 2000, 2001, 2002, 2003 Free Software Foundation,
   Inc.

   Contributed by Hewlett-Packard Company.

   This file is part of GDB.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place - Suite 330,
   Boston, MA 02111-1307, USA.  */

#include "defs.h"
#include <ctype.h>
#include "tui.h"
#include "tuiData.h"
#include "tuiWin.h"
#include "tuiIO.h"

#ifdef HAVE_NCURSES_H       
#include <ncurses.h>
#else
#ifdef HAVE_CURSES_H
#include <curses.h>
#endif
#endif


/*****************************************
** STATIC LOCAL FUNCTIONS FORWARD DECLS    **
******************************************/



/*****************************************
** PUBLIC FUNCTIONS                        **
******************************************/

/*
   ** tuiDispatchCtrlChar().
   **        Dispatch the correct tui function based upon the control character.
 */
unsigned int
tuiDispatchCtrlChar (unsigned int ch)
{
  TuiWinInfoPtr winInfo = tuiWinWithFocus ();
  WINDOW *w = cmdWin->generic.handle;

  /*
     ** If the command window has the logical focus, or no-one does
     ** assume it is the command window; in this case, pass the
     ** character on through and do nothing here.
   */
  if (winInfo == (TuiWinInfoPtr) NULL || winInfo == cmdWin)
    return ch;
  else
    {
      unsigned int c = 0, chCopy = ch;
      register int i;
      char *term;

      /* If this is an xterm, page next/prev keys aren't returned
         ** by keypad as a single char, so we must handle them here.
         ** Seems like a bug in the curses library?
       */
      term = (char *) getenv ("TERM");
      for (i = 0; (term && term[i]); i++)
	term[i] = toupper (term[i]);
      if ((strcmp (term, "XTERM") == 0) && m_isStartSequence (ch))
	{
	  unsigned int pageCh = 0, tmpChar;

	  tmpChar = 0;
	  while (!m_isEndSequence (tmpChar))
	    {
	      tmpChar = (int) wgetch (w);
	      if (tmpChar == ERR)
		{
		  return ch;
		}
	      if (!tmpChar)
		break;
	      if (tmpChar == 53)
		pageCh = KEY_PPAGE;
	      else if (tmpChar == 54)
		pageCh = KEY_NPAGE;
	      else
		{
		  return 0;
		}
	    }
	  chCopy = pageCh;
	}

      switch (chCopy)
	{
	case KEY_NPAGE:
	  tuiScrollForward (winInfo, 0);
	  break;
	case KEY_PPAGE:
	  tuiScrollBackward (winInfo, 0);
	  break;
	case KEY_DOWN:
	case KEY_SF:
	  tuiScrollForward (winInfo, 1);
	  break;
	case KEY_UP:
	case KEY_SR:
	  tuiScrollBackward (winInfo, 1);
	  break;
	case KEY_RIGHT:
	  tuiScrollLeft (winInfo, 1);
	  break;
	case KEY_LEFT:
	  tuiScrollRight (winInfo, 1);
	  break;
	case '\f':
	  tuiRefreshAll ();
	  break;
	default:
	  c = chCopy;
	  break;
	}
      return c;
    }
}
@


1.7
log
@	* tui-hooks.c: Update include order.
	* tui.c: Likewise.
	* tuiCommand.c: Likewise.
	* tuiData.c: Likewise.
	* tuiDataWin.c: Likewise.
	* tuiDisassem.c: Likewise.
	* tuiGeneralWin.c: Likewise.
	* tuiIO.c: Likewise.
	* tuiLayout.c: Likewise.
	* tuiRegs.c: Likewise.
	* tuiSource.c: Likewise.
	* tuiSourceWin.c: Likewise.
	* tuiStack.c: Likewise.
	* tuiWin.c: Likewise.
@
text
@@


1.7.6.1
log
@merge mainline changes to branch
@
text
@@


1.6
log
@Add FIXME explaining include problem.
@
text
@d3 1
a3 1
   Copyright 1998, 1999, 2000, 2001, 2002 Free Software Foundation,
d25 6
a30 7
/* FIXME: cagney/2002-02-28: The GDB coding standard indicates that
   "defs.h" should be included first.  Unfortunatly some systems
   (currently Debian GNU/Linux) include the <stdbool.h> via <curses.h>
   and they clash with "bfd.h"'s definiton of true/false.  The correct
   fix is to remove true/false from "bfd.h", however, until that
   happens, hack around it by including "config.h" and <curses.h>
   first.  */
a31 1
#include "config.h"
a38 7

#include "defs.h"
#include <ctype.h>
#include "tui.h"
#include "tuiData.h"
#include "tuiWin.h"
#include "tuiIO.h"
@


1.6.18.1
log
@Merge drow-cplus-branch to:
  cvs rtag -D 2003-12-14 00:00:00 UTC drow-cplus-merge-20031214 gdb+dejagnu
@
text
@d3 1
a3 1
   Copyright 1998, 1999, 2000, 2001, 2002, 2003 Free Software Foundation,
d25 7
a31 6
#include "defs.h"
#include <ctype.h>
#include "tui.h"
#include "tuiData.h"
#include "tuiWin.h"
#include "tuiIO.h"
d33 1
d41 7
@


1.6.18.2
log
@Merge drow-cplus-merge-20040208 to drow-cplus-branch.
@
text
@@


1.6.16.1
log
@2003-06-27  David Carlton  <carlton@@kealia.com>

	* Merge with mainline; tag is carlton_dictionary-20030627-merge.
@
text
@d3 1
a3 1
   Copyright 1998, 1999, 2000, 2001, 2002, 2003 Free Software Foundation,
d25 7
a31 6
#include "defs.h"
#include <ctype.h>
#include "tui.h"
#include "tuiData.h"
#include "tuiWin.h"
#include "tuiIO.h"
d33 1
d41 7
@


1.6.16.2
log
@2004-01-26  David Carlton  <carlton@@kealia.com>

	* Merge with mainline; tag is carlton_dictionary-20040126-merge.
@
text
@@


1.5
log
@2002-02-08  Daniel Jacobowitz  <drow@@mvista.com>

        * utils.c: Include <curses.h> before "bfd.h".
        * tui/tui-hooks.c: Likewise.
        * tui/tui.c: Likewise.
        * tui/tuiCommand.c: Likewise.
        * tui/tuiData.c: Likewise.
        * tui/tuiDataWin.c: Likewise.
        * tui/tuiDisassem.c: Likewise.
        * tui/tuiGeneralWin.c: Likewise.
        * tui/tuiIO.c: Likewise.
        * tui/tuiLayout.c: Likewise.
        * tui/tuiRegs.c: Likewise.
        * tui/tuiSource.c: Likewise.
        * tui/tuiSourceWin.c: Likewise.
        * tui/tuiStack.c: Likewise.
        * tui/tuiWin.c: Likewise.
@
text
@d2 4
a5 1
   Copyright 1998, 1999, 2000, 2001 Free Software Foundation, Inc.
d25 8
a32 1
/* If we need <curses.h>, we must include it before we get "bfd.h".  */
@


1.4
log
@	* tuiCommand.c (tuiDispatchCtrlChar): Fix escape sequences.
	(tuiIncrCommandCharCountBy): Remove.
	(tuiDecrCommandCharCountBy): Remove.
	(tuiSetCommandCharCountTo): Remove.
	(tuiClearCommandCharCount): Remove.
@
text
@d22 10
@


1.3
log
@	* tuiWin.c, tui.c, tuiCommand.c: Use ansi prototype.
	tuiIO.c, tuiData.c: Likewise.
	tuiDataWin.c, tuiDisassem.c: Likewise.
	tuiGeneralWin.c, tuiLayout.c: Likewise.
	tuiRegs.c, tuiSource.c: Likewise.
	tuiSouceWin.c, tuiStack.c: Likewise.
@
text
@d23 1
d48 1
d77 5
a81 1
	      tmpChar = (int) wgetch (cmdWin->generic.handle);
d88 4
d127 1
a127 86
}				/* tuiDispatchCtrlChar */


/*
   ** tuiIncrCommandCharCountBy()
   **     Increment the current character count in the command window,
   **     checking for overflow.  Returns the new value of the char count.
 */
int
tuiIncrCommandCharCountBy (int count)
{
  if (tui_version)
    {
      if ((count + cmdWin->detail.commandInfo.curch) >= cmdWin->generic.width)
	cmdWin->detail.commandInfo.curch =
	  (count + cmdWin->detail.commandInfo.curch) - cmdWin->generic.width;
      else
	cmdWin->detail.commandInfo.curch += count;
    }

  return cmdWin->detail.commandInfo.curch;
}				/* tuiIncrCommandCharCountBy */


/*
   ** tuiDecrCommandCharCountBy()
   **     Decrement the current character count in the command window,
   **     checking for overflow.  Returns the new value of the char count.
 */
int
tuiDecrCommandCharCountBy (int count)
{
  if (tui_version)
    {
      if ((cmdWin->detail.commandInfo.curch - count) < 0)
	cmdWin->detail.commandInfo.curch =
	  cmdWin->generic.width + (cmdWin->detail.commandInfo.curch - count);
      else
	cmdWin->detail.commandInfo.curch -= count;
    }

  return cmdWin->detail.commandInfo.curch;
}				/* tuiDecrCommandCharCountBy */


/*
   ** tuiSetCommandCharCountTo()
   **     Set the character count to count.
 */
int
tuiSetCommandCharCountTo (int count)
{
  if (tui_version)
    {
      if (count > cmdWin->generic.width - 1)
	{
	  cmdWin->detail.commandInfo.curch = 0;
	  tuiIncrCommandCharCountBy (count);
	}
      else
	cmdWin->detail.commandInfo.curch -= count;
    }

  return cmdWin->detail.commandInfo.curch;
}				/* tuiSetCommandCharCountTo */



/*
   ** tuiClearCommandCharCount()
   **     Clear the character count to count.
 */
int
tuiClearCommandCharCount (void)
{
  if (tui_version)
    cmdWin->detail.commandInfo.curch = 0;

  return cmdWin->detail.commandInfo.curch;
}				/* tuiClearCommandCharCount */



/*****************************************
** STATIC LOCAL FUNCTIONS                 **
******************************************/
@


1.2
log
@	* tuiWin.c, tuiWin.h, tui.c, tui.h, tuiCommand.c: Add FSF copyright.
	tuiCommand.h, tuiIO.c, tuiIO.h, tuiData.h, tuiData.c: Likewise.
	tuiDataWin.c, tuiDataWin.h, tuiDisassem.c, tuiDisassem.h: Likewise.
	tuiGeneralWin.c, tuiGeneralWin.h, tuiLayout.c, tuiLayout.h: Likewise.
	tuiRegs.c, tuiRegs.h, tuiSource.c, tuiSource.h: Likewise.
	tuiSouceWin.c, tuiSourceWin.h, tuiStack.c, tuiStack.h: Likewise.
@
text
@d44 1
a44 7
#ifdef __STDC__
tuiDispatchCtrlChar (
		      unsigned int ch)
#else
tuiDispatchCtrlChar (ch)
     unsigned int ch;
#endif
d126 1
a126 7
#ifdef __STDC__
tuiIncrCommandCharCountBy (
			    int count)
#else
tuiIncrCommandCharCountBy (count)
     int count;
#endif
d147 1
a147 7
#ifdef __STDC__
tuiDecrCommandCharCountBy (
			    int count)
#else
tuiDecrCommandCharCountBy (count)
     int count;
#endif
d167 1
a167 7
#ifdef __STDC__
tuiSetCommandCharCountTo (
			   int count)
#else
tuiSetCommandCharCountTo (count)
     int count;
#endif
a189 1
#ifdef __STDC__
a190 3
#else
tuiClearCommandCharCount ()
#endif
@


1.1
log
@Initial revision
@
text
@d1 20
a20 5
/*
** tuiCommand.c
**     This module contains functions specific to command window processing.
*/

d40 3
a42 3
** tuiDispatchCtrlChar().
**        Dispatch the correct tui function based upon the control character.
*/
d55 4
a58 4
    ** If the command window has the logical focus, or no-one does
    ** assume it is the command window; in this case, pass the
    ** character on through and do nothing here.
    */
d68 3
a70 3
        ** by keypad as a single char, so we must handle them here.
        ** Seems like a bug in the curses library?
        */
d127 4
a130 4
** tuiIncrCommandCharCountBy()
**     Increment the current character count in the command window,
**     checking for overflow.  Returns the new value of the char count.
*/
d154 4
a157 4
** tuiDecrCommandCharCountBy()
**     Decrement the current character count in the command window,
**     checking for overflow.  Returns the new value of the char count.
*/
d181 3
a183 3
** tuiSetCommandCharCountTo()
**     Set the character count to count.
*/
d210 3
a212 3
** tuiClearCommandCharCount()
**     Clear the character count to count.
*/
@


1.1.1.1
log
@Initial creation of sourceware repository
@
text
@@


1.1.1.2
log
@import gdb-1999-07-07 post reformat
@
text
@d2 3
a4 3
   ** tuiCommand.c
   **     This module contains functions specific to command window processing.
 */
d25 3
a27 3
   ** tuiDispatchCtrlChar().
   **        Dispatch the correct tui function based upon the control character.
 */
d40 4
a43 4
     ** If the command window has the logical focus, or no-one does
     ** assume it is the command window; in this case, pass the
     ** character on through and do nothing here.
   */
d53 3
a55 3
         ** by keypad as a single char, so we must handle them here.
         ** Seems like a bug in the curses library?
       */
d112 4
a115 4
   ** tuiIncrCommandCharCountBy()
   **     Increment the current character count in the command window,
   **     checking for overflow.  Returns the new value of the char count.
 */
d139 4
a142 4
   ** tuiDecrCommandCharCountBy()
   **     Decrement the current character count in the command window,
   **     checking for overflow.  Returns the new value of the char count.
 */
d166 3
a168 3
   ** tuiSetCommandCharCountTo()
   **     Set the character count to count.
 */
d195 3
a197 3
   ** tuiClearCommandCharCount()
   **     Clear the character count to count.
 */
@

