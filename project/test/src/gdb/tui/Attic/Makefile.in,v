head	1.3;
access;
symbols
	gdb_5_0-2000-05-19-release:1.1.1.1.4.1
	gdb_4_18_2-2000-05-18-release:1.1.1.1.4.1
	gdb_4_95_1-2000-05-11-snapshot:1.1.1.1.4.1
	gdb_4_95_0-2000-04-27-snapshot:1.1.1.1.4.1
	gdb_5_0-2000-04-10-branch:1.1.1.1.0.4
	gdb_5_0-2000-04-10-branchpoint:1.1.1.1
	repo-unification-2000-02-06:1.1.1.1
	insight-2000-02-04:1.1.1.1
	gdb-2000-02-04:1.1.1.1
	gdb-2000-02-02:1.1.1.1
	gdb-2000-02-01:1.1.1.1
	gdb-2000-01-31:1.1.1.1
	gdb-2000-01-26:1.1.1.1
	gdb-2000-01-24:1.1.1.1
	gdb-2000-01-17:1.1.1.1
	gdb-2000-01-10:1.1.1.1
	gdb-2000-01-05:1.1.1.1
	gdb-1999-12-21:1.1.1.1
	gdb-1999-12-13:1.1.1.1
	gdb-1999-12-07:1.1.1.1
	gdb-1999-12-06:1.1.1.1
	gdb-1999-11-16:1.1.1.1
	gdb-1999-11-08:1.1.1.1
	gdb-1999-11-01:1.1.1.1
	gdb-1999-10-25:1.1.1.1
	gdb-1999-10-18:1.1.1.1
	gdb-1999-10-11:1.1.1.1
	gdb-1999-10-04:1.1.1.1
	gdb-1999-09-28:1.1.1.1
	gdb-1999-09-21:1.1.1.1
	gdb-1999-09-13:1.1.1.1
	gdb-1999-09-08:1.1.1.1
	gdb-1999-08-30:1.1.1.1
	gdb-1999-08-23:1.1.1.1
	gdb-1999-08-16:1.1.1.1
	gdb-1999-08-09:1.1.1.1
	gdb-1999-08-02:1.1.1.1
	gdb-1999-07-26:1.1.1.1
	gdb-1999-07-19:1.1.1.1
	gdb-1999-07-12:1.1.1.1
	gdb-post-reformat-19990707:1.1.1.1
	gdb-1999-07-07-post-reformat-snapshot:1.1.1.1
	gdb-pre-reformat-19990707:1.1.1.1
	gdb-1999-07-07:1.1.1.1
	gdb-1999-07-05:1.1.1.1
	gdb-1999-06-28:1.1.1.1
	gdb-1999-06-21:1.1.1.1
	gdb-1999-06-14:1.1.1.1
	gdb-1999-06-07:1.1.1.1
	gdb-1999-06-01:1.1.1.1
	gdb-4_18-branch:1.1.1.1.0.2
	gdb-4_18-release:1.1.1.1
	gdb-1999-05-25:1.1.1.1
	gdb-1999-05-19:1.1.1.1
	gdb-1999-05-10:1.1.1.1
	gdb-19990504:1.1.1.1
	gdb-19990422:1.1.1.1
	SNAPSHOT:1.1.1
	gdb-4_18:1.1.1.1
	GDB_4_18:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.3
date	2000.05.25.01.50.50;	author cagney;	state dead;
branches;
next	1.2;

1.2
date	2000.04.18.08.04.59;	author cagney;	state Exp;
branches;
next	1.1;

1.1
date	99.04.16.01.34.12;	author shebs;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.04.16.01.34.12;	author shebs;	state Exp;
branches
	1.1.1.1.4.1;
next	;

1.1.1.1.4.1
date	2000.04.18.08.04.57;	author cagney;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Have TUI use the same configury mechanism as MI.
@
text
@# Copyright 1998 Free Software Foundation, Inc.

# This file is part of GDB.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

all: libtui.a

srcdir=@@srcdir@@
VPATH = @@srcdir@@

SHELL = @@SHELL@@

CC=@@CC@@
CFLAGS=@@CFLAGS@@
AR=@@AR@@
RANLIB=@@RANLIB@@

# Host and target-dependent makefile fragments come in here.
@@host_makefile_frag@@
@@target_makefile_frag@@
# End of host and target-dependent makefile fragments

# Where is our "include" directory?  Typically $(srcdir)/../include.
# This is essentially the header file directory for the library
# routines in libiberty.
INCLUDE_DIR =  $(srcdir)/../../include
INCLUDE_CFLAGS = -I$(INCLUDE_DIR)

# Configured by the --with-mmalloc option to configure.
MMALLOC = @@MMALLOC@@
MMALLOC_CFLAGS = @@MMALLOC_CFLAGS@@

# Where is the BFD library?  Typically in ../bfd.
BFD_DIR = ../../bfd
BFD_SRC = $(srcdir)/$(BFD_DIR)
BFD_CFLAGS = -I$(BFD_DIR) -I$(BFD_SRC)

# Where is the READLINE library?  Typically in ../readline.
READLINE_DIR = ../../readline
READLINE_SRC = $(srcdir)/$(READLINE_DIR)
READLINE_CFLAGS = -I$(READLINE_SRC)

# Where is the INTL library?  Typically in ../intl.
INTL_DIR = ../../intl
INTL_SRC = $(srcdir)/$(INTL_DIR)
INTL_CFLAGS = -I$(INTL_DIR) -I$(INTL_SRC)

# Where is the TCL library?  Typically in ../tcl.
TCL_CFLAGS = @@TCLHDIR@@

# Where is the TK library?  Typically in ../tk.
TK_CFLAGS = @@TKHDIR@@ @@TK_BUILD_INCLUDES@@

# Where is Itcl?  Typically in ../itcl.
ITCL_CFLAGS = @@ITCLHDIR@@

# Where is Tix?  Typically in ../tix.
TIX_CFLAGS = @@TIXHDIR@@

X11_CFLAGS = @@TK_XINCLUDES@@

ENABLE_IDE= @@ENABLE_IDE@@

GUI_CFLAGS_X = -I$(srcdir)/../../libgui/src

IDE_CFLAGS_X = -I$(srcdir)/../../libidetcl/src -I$(srcdir)/../../libide/src \
  `if [ x"$(ENABLE_IDE)" != x ] ; then \
    echo -DIDE -I$(srcdir)/../../ilu/runtime/mainloop;\
  fi`

IDE_CFLAGS=$(GUI_CFLAGS_X) $(IDE_CFLAGS_X)

ENABLE_CFLAGS= @@ENABLE_CFLAGS@@

# -I. for config files.
# -I$(srcdir) for gdb internal headers and possibly for gnu-regex.h also.
# -I$(srcdir)/config for more generic config files.

# It is also possible that you will need to add -I/usr/include/sys if
# your system doesn't have fcntl.h in /usr/include (which is where it
# should be according to Posix).
DEFS = @@DEFS@@
GDB_CFLAGS = -I. -I.. -I$(srcdir) -I$(srcdir)/.. -I$(srcdir)/../config $(DEFS)

# M{H,T}_CFLAGS, if defined, have host- and target-dependent CFLAGS
# from the config directory.
GLOBAL_CFLAGS = $(MT_CFLAGS) $(MH_CFLAGS)
#PROFILE_CFLAGS = -pg

# INTERNAL_CFLAGS is the aggregate of all other *CFLAGS macros.
INTERNAL_CFLAGS = $(CFLAGS) $(GLOBAL_CFLAGS) $(PROFILE_CFLAGS) \
	$(GDB_CFLAGS) $(READLINE_CFLAGS) $(BFD_CFLAGS) \
	$(MMALLOC_CFLAGS) $(INCLUDE_CFLAGS) $(INTL_CFLAGS) \
	$(ENABLE_CFLAGS)

HEADERS = tuiIO.h tuiData.h tuiGeneralWin.h tuiLayout.h tuiStack.h \
	  tuiSource.h tuiCommand.h tuiWin.h tuiDisassem.h \
	  tuiSourceWin.h tuiRegs.h tuiDataWin.h

SOURCES = tui.c tuiData.c tuiSource.c tuiStack.c tuiIO.c \
	  tuiGeneralWin.c tuiLayout.c tuiWin.c tuiCommand.c \
	  tuiDisassem.c tuiSourceWin.c tuiRegs.c tuiDataWin.c

OBJECTS = tui.o tuiData.o tuiSource.o tuiStack.o tuiIO.o \
	  tuiGeneralWin.o tuiLayout.o tuiWin.o tuiCommand.o \
	  tuiDisassem.o tuiSourceWin.o tuiRegs.o tuiDataWin.o \
	  tuiInit.o


# Prevent Sun make from putting in the machine type.  Setting
# TARGET_ARCH to nothing works for SunOS 3, 4.0, but not for 4.1.
.c.o:
	$(CC) -c $(INTERNAL_CFLAGS) $<
.SUFFIXES: .cpp
.c.cpp:
	$(CC) -E $(INTERNAL_CFLAGS) $< > $@@

libtui.a: $(OBJECTS)
	rm -f libtui.a
	$(AR) rc libtui.a $(OBJECTS)
	$(RANLIB) libtui.a

tui.o: tui.c tui.h tuiData.h tuiLayout.h tuiIO.h tuiRegs.h tuiWin.h
tuiCommand.o: tui.h tuiData.h tuiWin.h tuiIO.h
tuiData.o: tui.h tuiData.h
tuiDataWin.o: tui.h tuiData.h tuiRegs.h
tuiDisassem.o: tui.h tuiData.h tuiLayout.h tuiSourceWin.h tuiStack.h
tuiGeneralWin.o: tui.h tuiData.h tuiGeneralWin.h
tuiIO.o: tui.h tuiData.h tuiIO.h tuiCommand.h tuiWin.h
tuiLayout.o: tui.h tuiData.h tuiGeneralWin.h tuiStack.h tuiRegs.h \
	tuiDisassem.h
tuiRegs.o: tui.h tuiData.h tuiLayout.h tuiWin.h
tuiSource.o: tui.h tuiData.h tuiStack.h tuiSourceWin.h tuiSource.h
tuiSourceWin.o: tui.h tuiData.h tuiStack.h tuiSourceWin.h tuiSource.h \
	tuiDisassem.h
tuiStack.o: tui.h tuiData.h tuiStack.h tuiSourceWin.h
tuiWin.o: tui.h tuiData.h tuiGeneralWin.h tuiStack.h tuiSourceWin.h \
	tuiDataWin.h

tuiInit.o: tuiInit.c
tuiInit.c: $(SOURCES)
	@@echo Making tuiInit.c
	@@rm -f init.c-tmp
	@@echo '/* Do not modify this file.  */' >init.c-tmp
	@@echo '/* It is created automatically by the Makefile.	*/'>>init.c-tmp
	@@echo '#include "ansidecl.h"' >>init.c-tmp
	@@echo 'extern void initialize_tui_files PARAMS ((void));' >>init.c-tmp
	@@echo 'void initialize_tui_files PARAMS ((void)) {' >>init.c-tmp
	@@-( cd $(srcdir) ; grep '^_initialize_[a-z_0-9A-Z]* *(' $(SOURCES) ) 2>/dev/null \
	| sed -e 's/^.*://' -e 's/^\([a-z_0-9A-Z]*\).*/  {extern void \1 PARAMS ((void)); \1 ();}/' >>init.c-tmp
	@@echo '}' >>init.c-tmp
	@@mv init.c-tmp tuiInit.c

clean mostlyclean:
	-rm -f *.o *.a

distclean maintainer-clean realclean: clean
	-rm -f Makefile config.log config.cache
@


1.2
log
@Add full set of cleanup rules.
@
text
@@


1.1
log
@Initial revision
@
text
@d167 5
a171 2
clean:
	rm -f *.o *.a
@


1.1.1.1
log
@Initial creation of sourceware repository
@
text
@@


1.1.1.1.4.1
log
@Add full set of cleanup rules.
@
text
@d167 2
a168 5
clean mostlyclean:
	-rm -f *.o *.a

distclean maintainer-clean realclean: clean
	-rm -f Makefile config.log config.cache
@


