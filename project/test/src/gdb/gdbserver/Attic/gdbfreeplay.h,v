head	1.1;
access;
symbols
	reverse-20080717-branch:1.1.0.4
	msnyder-reverse-20080609-branch:1.1.0.2;
locks; strict;
comment	@ * @;


1.1
date	2008.06.21.19.41.01;	author msnyder;	state dead;
branches
	1.1.2.1
	1.1.4.1;
next	;

1.1.2.1
date	2008.06.21.19.41.01;	author msnyder;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2008.06.21.22.58.24;	author msnyder;	state Exp;
branches;
next	1.1.2.3;

1.1.2.3
date	2008.06.21.23.09.20;	author msnyder;	state Exp;
branches;
next	1.1.2.4;

1.1.2.4
date	2008.06.24.03.05.27;	author msnyder;	state Exp;
branches;
next	;

1.1.4.1
date	2008.09.07.04.09.34;	author msnyder;	state Exp;
branches;
next	;


desc
@@


1.1
log
@file gdbfreeplay.h was initially added on branch msnyder-reverse-20080609-branch.
@
text
@@


1.1.4.1
log
@2008-06-25  Michael Snyder  <msnyder@@specifix.com>

	* gdbfreeplay-back.c (frame_find_request): Rewrite loop to
	avoid fencepost error on last frame.

2008-06-23  Michael Snyder  <msnyder@@specifix.com>

	* gdbfreeplay.h: Replace all address values with unsigned long long.
	* gdbfreeplay-i386.c: Ditto.
	* gdbfreeplay-mips64.c: Ditto.
	* gdbfreeplay-back.c: Ditto.
	* remote-break.c: Ditto.
	* remote-break.h: Ditto.

	* configure.srv: Add configuration for mips64-linux.
	* gdbfreeplay-mips64.c: New file, back-end for mips64.
	* Makefile.in: Add rules for mips and intel back-ends.

2008-06-21  Michael Snyder  <msnyder@@specifix.com>

	* gdbfreeplay-back.c (scan_gdbreplay_file): Add support for 'W'
	reply (exiting), but not for 'X' (terminated).
	(freeplay_find_event): Make sure we always advance by at least
	one frame, unles it's the first or last frame.
	(handle_special_case): Add support for 'S' and 'C' requests.

	* gdbfreeplay-back.c (handle_special_case): No need to re-compose
	a T packet (with doctored PC) on any stop signal except SIGTRAP.

	Fix stepping/breakpoint off-by-one issues.
	* gdbfreeplay-back.c (freeplay_find_event): Fix off-by-one error
	on last_cached_frame.
	(freeplay_show_next_commands): Ditto.
	(handle_special_case): Ditto, plus don't pass breakpoint_p == TRUE
	to target_compose_T_packet if we're stopped at the end of the
	event cache.

	* gdbfreeplay-back.c (handle_special_case): Silence gcc warning.
	* gdbfreeplay-i386.c (target_compose_g_packet): Ditto.

	Add monitor gdbreplay-next command.
	* gdbfreeplay-back.c (freeplay_show_next_commands): New function.
	Echo the next set of gdb commands, in the manner of gdbreplay.
	(handle_special_case): Handle monitor gdbreplay-next command.
	(fallbacks): Catch any unhandled qRcmd requests.

	Add support for 'R' packet (restart).
	* gdbfreeplay-back.c (handle_special_case).  Add support for 'R'.
	Remove support for "monitor gdbfreeplay-echo".

	Add support for 'O' packet output.
	* remote-breakpoint.h (PLAY_O_PACKETS): New enum const.
	* gdbfreeplay-back.c (StopFrame): Discard gpos, replace with Opos.
	(scan_gdbreplay_file): Record Opos for frame if 'O' packet found.
	(frame_replay_O_packets): New function.
	(freeplay_find_event): Call frame_replay_O_packets.
	(handle_special_case): Pass PLAY_O_PACKETS to freeplay_find_event.
	Add temporary support for "monitor gdbfreeplay-echo" command
	(just for testing).

	* gdbfreeplay-back.c: Clean up round, comments, remove #if 0 etc.
	* gdbfreeplay-i386.c: Ditto.

	* gdbfreeplay-i386.c (target_pc_from_g): Accept a char * instead
	of a FILE *.
	* gdbfreeplay.h (target_pc_from_g): Change prototype.
	* gdbfreeplay-back.c (scan_gdbreplay_file): Change call.

	* gdbfreeplay-i386.c (target_compose_T_packet): Add default return.
	(target_compose_g_packet): New function.
	* gdbfreeplay.h (target_compose_g_packet): Export.
	* gdbfreeplay-back.c (handle_special_case): Give correct args
	for target_compose_T_packet.
	(fallbacks): Add handling for 'G', 'M', 'X', and 'g'.

	* gdbfreeplay-front.c: New file.  Extended gdbreplay.
	* gdbfreeplay-back.c: New file.
	* gdbfreeplay-i386.c: New file.
	* gdbfreeplay.h: New file.
	* remote-breakpoint.c: New file.
	* remote-breakpoint.h: New file.
	* Makefile.in: Add rules for gdb-freeplay.
	* configure.srv: Ditto.
	* configure.ac: Ditto.
	* configure: Regenerate.
@
text
@a0 26
/*
 * gdbfreeplay -- interface
 */

#ifndef GDBFREEPLAY_H
#define GDBFREEPLAY_H

#include "remote-breakpoint.h"

extern int verbose;

extern enum successcode gdbfreeplay_open (char *filename);
extern void gdbfreeplay (int socket_fd);

extern unsigned long long target_pc_from_T (char *tpacket);
extern unsigned long long target_pc_from_G (char *gpacket);
extern unsigned long long target_pc_from_g (char *gpacket);

extern char *target_compose_T_packet (char *origTpacket, 
				      unsigned long long pc,
				      int breakpoint_p);
extern char *target_compose_g_packet (char *origTpacket);

extern int hex_to_int (int ch);

#endif
@


1.1.2.1
log
@2008-06-21  Michael Snyder  <msnyder@@specifix.com>

	* gdbfreeplay-front.c: New file.  Extended gdbreplay.
	* gdbfreeplay-back.c: New file.
	* gdbfreeplay-i386.c: New file.
	* gdbfreeplay.h: New file.
	* remote-breakpoint.c: New file.
	* remote-breakpoint.h: New file.
	* Makefile.in: Add rules for gdb-freeplay.
	* configure.srv: Ditto.
	* configure.ac: Ditto.
	* configure: Regenerate.
@
text
@a0 21
/*
 * gdbfreeplay -- interface
 */

#ifndef GDBFREEPLAY_H
#define GDBFREEPLAY_H

#include "remote-breakpoint.h"

extern int verbose;

extern enum successcode gdbfreeplay_open (char *filename);
extern void gdbfreeplay (int socket_fd);

extern unsigned long target_pc_from_T (char *tpacket);
extern unsigned long target_pc_from_G (char *gpacket);
extern unsigned long target_pc_from_g (FILE *infile);

extern int hex_to_int (int ch);

#endif
@


1.1.2.2
log
@2008-06-21  Michael Snyder  <msnyder@@specifix.com>

	* gdbfreeplay-i386.c (target_compose_T_packet): Add default return.
	(target_compose_g_packet): New function.
	* gdbfreeplay.h (target_compose_g_packet): Export.
	* gdbfreeplay-back.c (handle_special_case): Give correct args
	for target_compose_T_packet.
	(fallbacks): Add handling for 'G', 'M', 'X', and 'g'.
@
text
@a17 4
extern char *target_compose_T_packet (char *origTpacket, 
				      unsigned long pc,
				      int breakpoint_p);
extern char *target_compose_g_packet (char *origTpacket);
@


1.1.2.3
log
@2008-06-21  Michael Snyder  <msnyder@@specifix.com>

	* gdbfreeplay-i386.c (target_pc_from_g): Accept a char * instead
	of a FILE *.
	* gdbfreeplay.h (target_pc_from_g): Change prototype.
	* gdbfreeplay-back.c (scan_gdbreplay_file): Change call.
@
text
@d17 1
a17 2
extern unsigned long target_pc_from_g (char *gpacket);

@


1.1.2.4
log
@2008-06-23  Michael Snyder  <msnyder@@specifix.com>

	* gdbfreeplay.h: Replace all address values with unsigned long long.
	* gdbfreeplay-i386.c: Ditto.
	* gdbfreeplay-mips64.c: Ditto.
	* gdbfreeplay-back.c: Ditto.
	* remote-break.c: Ditto.
	* remote-break.h: Ditto.
@
text
@d15 3
a17 3
extern unsigned long long target_pc_from_T (char *tpacket);
extern unsigned long long target_pc_from_G (char *gpacket);
extern unsigned long long target_pc_from_g (char *gpacket);
d20 1
a20 1
				      unsigned long long pc,
@


