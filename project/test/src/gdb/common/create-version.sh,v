head	1.6;
access;
symbols;
locks; strict;
comment	@# @;


1.6
date	2013.07.04.01.22.38;	author qiyao;	state Exp;
branches;
next	1.5;

1.5
date	2013.06.28.18.59.50;	author tromey;	state Exp;
branches;
next	1.4;

1.4
date	2013.06.27.00.12.13;	author qiyao;	state Exp;
branches;
next	1.3;

1.3
date	2013.06.25.16.04.54;	author tromey;	state Exp;
branches;
next	1.2;

1.2
date	2013.06.24.22.03.51;	author brobecke;	state Exp;
branches;
next	1.1;

1.1
date	2013.06.24.15.06.27;	author tromey;	state Exp;
branches;
next	;


desc
@@


1.6
log
@gdb/

2013-07-04  Yao Qi  <yao@@codesourcery.com>

	Revert:
	2013-06-27  Yao Qi  <yao@@codesourcery.com>

	* common/create-version.sh: Update comments.  Handle the case
	that TARGET_ALIAS is empty.

gdb/gdbserver/

2013-07-04  Yao Qi  <yao@@codesourcery.com>

	* Makefile.in (host_alias): Use @@host_noncanonical@@.
	(target_alias): Use @@target_noncanonical@@.
	* configure.ac: Use ACX_NONCANONICAL_TARGET and
	ACX_NONCANONICAL_HOST.
	* configure: Regenerated.

	Revert:
	2013-06-28  Mircea Gherzan  <mircea.gherzan@@intel.com>

	* configure.ac (version_host, version_target): Set and AC_SUBST them.
	* configure: Rebuild.
	* Makefile.in (version_host, version_target): Get from configure.
	(version.c): Use $(version_host) and $(version_target).
@
text
@#!/bin/sh

# Copyright (C) 1989-2013 Free Software Foundation, Inc.

# This file is part of GDB.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Create version.c from version.in.
# Usage:
#    create-version.sh PATH-TO-GDB-SRCDIR HOST_ALIAS \
#        TARGET_ALIAS OUTPUT-FILE-NAME

srcdir="$1"
host_alias="$2"
target_alias="$3"
output="$4"

rm -f version.c-tmp $output version.tmp
date=`sed -n -e 's/^.* BFD_VERSION_DATE \(.*\)$/\1/p' $srcdir/../bfd/version.h`
sed -e "s/DATE/$date/" < $srcdir/version.in > version.tmp
echo '#include "version.h"' >> version.c-tmp
echo 'const char version[] = "'"`sed q version.tmp`"'";' >> version.c-tmp
echo 'const char host_name[] = "'"$host_alias"'";' >> version.c-tmp
echo 'const char target_name[] = "'"$target_alias"'";' >> version.c-tmp
mv version.c-tmp $output
rm -f version.tmp
@


1.5
log
@move version.in from gdb/common back to gdb

This reverts part of the earlier version.in change.  It moves
version.in back to the gdb directory.  This works around the CVS bug
we've found.

gdb
	* Makefile.in (version.c): Use version.in, not
	common/version.in.
	* common/create-version.sh: Likewise.
	* common/version.in: Move...
	* version.in: ...here.
gdb/doc
	* Makefile.in (version.subst): Use version.in, not
	common/version.in.
	* gdbint.texinfo (Versions and Branches, Releasing GDB):
	Likewise.
gdb/gdbserver
	* Makefile.in (version.c): Use version.in, not
	common/version.in.
sim/common
	* Make-common.in (version.c): Use version.in, not
	common/version.in.
	* create-version.sh: Likewise.
sim/ppc:
	* Make-common.in (version.c): Use version.in, not
	common/version.in.
@
text
@d23 1
a23 1
#        [TARGET_ALIAS] OUTPUT-FILE-NAME
d27 2
a28 7

if [ "$#" = "4" ]; then
    target_alias="$3"
    output="$4"
else
    output="$3"
fi
d36 1
a36 5

if [ "$#" = "4" ]; then
    echo 'const char target_name[] = "'"$target_alias"'";' >> version.c-tmp
fi

@


1.4
log
@gdb/

	* common/create-version.sh: Update comments.  Handle the case
	that TARGET_ALIAS is empty.
@
text
@d37 1
a37 1
sed -e "s/DATE/$date/" < $srcdir/common/version.in > version.tmp
@


1.3
log
@	* common/create-version.sh (date): Use "$", not "$$" in sed
	expression.
@
text
@d23 1
a23 1
#        TARGET_ALIAS OUTPUT-FILE-NAME
d27 7
a33 2
target_alias="$3"
output="$4"
d41 5
a45 1
echo 'const char target_name[] = "'"$target_alias"'";' >> version.c-tmp
@


1.2
log
@Fix host_name and target_name generation by common/create-version.sh.

This new script has one small snafoo, which prevented the $host_alias
and $target_alias from being expanded during the generation of the
version.c file.  As a result, the version info yields:

    This GDB was configured as "--host=$host_alias --target=$target_alias".
                                       ^^^^^^^^^^^          ^^^^^^^^^^^^^

This patch fixes this issue.

gdb/ChangeLog:

        * common/create-version.sh: Fix expansion of $host_alias
        and $target_alias in generation of HOST_NAME and TARGET_NAME
        (resp.).
@
text
@d31 1
a31 1
date=`sed -n -e 's/^.* BFD_VERSION_DATE \(.*\)$$/\1/p' $srcdir/../bfd/version.h`
@


1.1
log
@don't keep a gdb-specific date

Right now there are two nightly commits to update a file in the tree
with the current date.  One commit is for BFD, one is for gdb.

It seems unnecessary to me to do this twice.  We can make do with a
single such commit.

This patch changes gdb in a minimal way to reuse the BFD date -- it
extracts it from bfd/version.h and changes version.in to use the
placeholder string "DATE" for those times when a date is wanted.

I propose removing the cron job that updates the version on trunk, and
then check in this patch.

For release branches, we can keep the cron job, but just tell it to
rewrite bfd/version.h.  I believe this is a simple change in the
crontab -- the script will work just fine on this file.

This also moves version.in and version.h into common/, to reflect
their shared status; and updates gdbserver to use version.h besides.

	* common/create-version.sh: New file.
	* Makefile.in (version.c): Use bfd/version.h, common/version.in,
	create-version.sh.
	(HFILES_NO_SRCDIR): Use common/version.h.
	* version.in: Move to ...
	* common/version.in: ... here.  Replace date with "DATE".
	* version.h: Move to ...
	* common/version.h: ... here.
gdbserver:
	* Makefile.in (version.c): Use bfd/version.h, common/version.in,
	create-version.sh.
	(version.o): Remove.
	* gdbreplay.c: Include version.h.
	(version, host_name): Don't declare.
	* server.h: Include version.h.
	(version, host_name): Don't declare.
doc:
	* Makefile.in (POD2MAN1, POD2MAN5): Use version.subst.
	(GDBvn.texi): Use version.subst.
	(version.subst): New target.
	(mostlyclean): Remove version.subst.
@
text
@d35 2
a36 2
echo 'const char host_name[] = "$host_alias";' >> version.c-tmp
echo 'const char target_name[] = "$target_alias";' >> version.c-tmp
@

