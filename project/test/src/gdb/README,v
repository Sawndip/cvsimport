head	1.51;
access;
symbols
	gdb_7_6_1-2013-08-30-release:1.50
	gdb_7_6-2013-04-26-release:1.50
	gdb_7_6-branch:1.50.0.4
	gdb_7_6-2013-03-12-branchpoint:1.50
	gdb_7_5_1-2012-11-29-release:1.50
	gdb_7_5-2012-08-17-release:1.50
	gdb_7_5-branch:1.50.0.2
	gdb_7_5-2012-07-18-branchpoint:1.50
	gdb_7_4_1-2012-04-26-release:1.48.2.1
	gdb_7_4-2012-01-24-release:1.48.2.1
	gdb_7_4-branch:1.48.0.2
	gdb_7_4-2011-12-13-branchpoint:1.48
	gdb_7_3_1-2011-09-04-release:1.47
	gdb_7_3-2011-07-26-release:1.47
	gdb_7_3-branch:1.47.0.4
	gdb_7_3-2011-04-01-branchpoint:1.47
	gdb_7_2-2010-09-02-release:1.47
	gdb_7_2-branch:1.47.0.2
	gdb_7_2-2010-07-07-branchpoint:1.47
	gdb_7_1-2010-03-18-release:1.45.6.2
	gdb_7_1-branch:1.45.0.6
	gdb_7_1-2010-02-18-branchpoint:1.45
	gdb_7_0_1-2009-12-22-release:1.45.4.4
	gdb_7_0-2009-10-06-release:1.45.4.3
	gdb_7_0-branch:1.45.0.4
	gdb_7_0-2009-09-16-branchpoint:1.45
	arc-sim-20090309:1.42.2.2
	msnyder-checkpoint-072509-branch:1.45.0.2
	msnyder-checkpoint-072509-branchpoint:1.45
	arc-insight_6_8-branch:1.42.2.2.0.4
	arc-insight_6_8-branchpoint:1.42.2.2
	insight_6_8-branch:1.42.2.2.0.2
	insight_6_8-branchpoint:1.42.2.2
	reverse-20081226-branch:1.42.0.12
	reverse-20081226-branchpoint:1.42
	multiprocess-20081120-branch:1.42.0.10
	multiprocess-20081120-branchpoint:1.42
	reverse-20080930-branch:1.42.0.8
	reverse-20080930-branchpoint:1.42
	reverse-20080717-branch:1.42.0.6
	reverse-20080717-branchpoint:1.42
	msnyder-reverse-20080609-branch:1.42.0.4
	msnyder-reverse-20080609-branchpoint:1.42
	drow-reverse-20070409-branch:1.40.0.2
	drow-reverse-20070409-branchpoint:1.40
	gdb_6_8-2008-03-27-release:1.42.2.2
	gdb_6_8-branch:1.42.0.2
	gdb_6_8-2008-02-26-branchpoint:1.42
	gdb_6_7_1-2007-10-29-release:1.41.2.3
	gdb_6_7-2007-10-10-release:1.41.2.2
	gdb_6_7-branch:1.41.0.2
	gdb_6_7-2007-09-07-branchpoint:1.41
	insight_6_6-20070208-release:1.37.2.2
	gdb_6_6-2006-12-18-release:1.37.2.2
	gdb_6_6-branch:1.37.0.2
	gdb_6_6-2006-11-15-branchpoint:1.37
	insight_6_5-20061003-release:1.35.16.2
	gdb-csl-symbian-6_4_50_20060226-12:1.35
	gdb-csl-sourcerygxx-3_4_4-25:1.34
	nickrob-async-20060828-mergepoint:1.37
	gdb-csl-symbian-6_4_50_20060226-11:1.35
	gdb-csl-sourcerygxx-4_1-17:1.35
	gdb-csl-20060226-branch-local-2:1.35
	gdb-csl-sourcerygxx-4_1-14:1.35
	gdb-csl-sourcerygxx-4_1-13:1.35
	gdb-csl-sourcerygxx-4_1-12:1.35
	gdb-csl-sourcerygxx-3_4_4-21:1.35
	gdb_6_5-20060621-release:1.35.16.2
	gdb-csl-sourcerygxx-4_1-9:1.35
	gdb-csl-sourcerygxx-4_1-8:1.35
	gdb-csl-sourcerygxx-4_1-7:1.35
	gdb-csl-arm-2006q1-6:1.35
	gdb-csl-sourcerygxx-4_1-6:1.35
	gdb-csl-symbian-6_4_50_20060226-10:1.35
	gdb-csl-symbian-6_4_50_20060226-9:1.35
	gdb-csl-symbian-6_4_50_20060226-8:1.35
	gdb-csl-coldfire-4_1-11:1.35
	gdb-csl-sourcerygxx-3_4_4-19:1.35
	gdb-csl-coldfire-4_1-10:1.35
	gdb_6_5-branch:1.35.0.16
	gdb_6_5-2006-05-14-branchpoint:1.35
	gdb-csl-sourcerygxx-4_1-5:1.35
	nickrob-async-20060513-branch:1.35.0.14
	nickrob-async-20060513-branchpoint:1.35
	gdb-csl-sourcerygxx-4_1-4:1.35
	msnyder-reverse-20060502-branch:1.35.0.12
	msnyder-reverse-20060502-branchpoint:1.35
	gdb-csl-morpho-4_1-4:1.35
	gdb-csl-sourcerygxx-3_4_4-17:1.35
	readline_5_1-import-branch:1.35.0.10
	readline_5_1-import-branchpoint:1.35
	gdb-csl-20060226-branch-merge-to-csl-symbian-1:1.35
	gdb-csl-symbian-20060226-branch:1.35.0.8
	gdb-csl-symbian-20060226-branchpoint:1.35
	gdb-csl-20060226-branch-merge-to-csl-local-1:1.35
	msnyder-reverse-20060331-branch:1.35.0.6
	msnyder-reverse-20060331-branchpoint:1.35
	gdb-csl-available-20060303-branch:1.35.0.4
	gdb-csl-available-20060303-branchpoint:1.35
	gdb-csl-20060226-branch:1.35.0.2
	gdb-csl-20060226-branchpoint:1.35
	gdb_6_4-20051202-release:1.34.8.2
	msnyder-fork-checkpoint-branch:1.34.0.12
	msnyder-fork-checkpoint-branchpoint:1.34
	gdb-csl-gxxpro-6_3-branch:1.34.0.10
	gdb-csl-gxxpro-6_3-branchpoint:1.34
	gdb_6_4-branch:1.34.0.8
	gdb_6_4-2005-11-01-branchpoint:1.34
	gdb-csl-arm-20051020-branch:1.34.0.6
	gdb-csl-arm-20051020-branchpoint:1.34
	msnyder-tracepoint-checkpoint-branch:1.34.0.4
	msnyder-tracepoint-checkpoint-branchpoint:1.34
	gdb-csl-arm-20050325-2005-q1b:1.34
	gdb-csl-arm-20050325-2005-q1a:1.34
	csl-arm-20050325-branch:1.34.0.2
	csl-arm-20050325-branchpoint:1.34
	gdb-post-i18n-errorwarning-20050211:1.34
	gdb-pre-i18n-errorwarning-20050211:1.34
	gdb_6_3-20041109-release:1.32.2.1
	gdb_6_3-branch:1.32.0.2
	gdb_6_3-20041019-branchpoint:1.32
	drow_intercu-merge-20040921:1.32
	drow_intercu-merge-20040915:1.32
	jimb-gdb_6_2-e500-branch:1.31.8.1.0.4
	jimb-gdb_6_2-e500-branchpoint:1.31.8.1
	gdb_6_2-20040730-release:1.31.8.1
	gdb_6_2-branch:1.31.0.8
	gdb_6_2-2004-07-10-gmt-branchpoint:1.31
	gdb_6_1_1-20040616-release:1.31
	gdb_6_1-2004-04-05-release:1.31
	drow_intercu-merge-20040402:1.31
	drow_intercu-merge-20040327:1.31
	ezannoni_pie-20040323-branch:1.31.0.6
	ezannoni_pie-20040323-branchpoint:1.31
	cagney_tramp-20040321-mergepoint:1.31
	cagney_tramp-20040309-branch:1.31.0.4
	cagney_tramp-20040309-branchpoint:1.31
	gdb_6_1-branch:1.31.0.2
	gdb_6_1-2004-03-01-gmt-branchpoint:1.31
	drow_intercu-20040221-branch:1.29.0.6
	drow_intercu-20040221-branchpoint:1.29
	cagney_bfdfile-20040213-branch:1.29.0.4
	cagney_bfdfile-20040213-branchpoint:1.29
	drow-cplus-merge-20040208:1.29
	carlton_dictionary-20040126-merge:1.29
	cagney_bigcore-20040122-branch:1.29.0.2
	cagney_bigcore-20040122-branchpoint:1.29
	drow-cplus-merge-20040113:1.29
	drow-cplus-merge-20031224:1.29
	drow-cplus-merge-20031220:1.29
	carlton_dictionary-20031215-merge:1.29
	drow-cplus-merge-20031214:1.29
	carlton-dictionary-20031111-merge:1.29
	gdb_6_0-2003-10-04-release:1.27.2.1
	kettenis_sparc-20030918-branch:1.28.0.6
	kettenis_sparc-20030918-branchpoint:1.28
	carlton_dictionary-20030917-merge:1.28
	ezannoni_pie-20030916-branchpoint:1.28
	ezannoni_pie-20030916-branch:1.28.0.4
	cagney_x86i386-20030821-branch:1.28.0.2
	cagney_x86i386-20030821-branchpoint:1.28
	carlton_dictionary-20030805-merge:1.28
	carlton_dictionary-20030627-merge:1.28
	gdb_6_0-branch:1.27.0.2
	gdb_6_0-2003-06-23-branchpoint:1.27
	jimb-ppc64-linux-20030613-branch:1.26.0.30
	jimb-ppc64-linux-20030613-branchpoint:1.26
	cagney_convert-20030606-branch:1.26.0.28
	cagney_convert-20030606-branchpoint:1.26
	cagney_writestrings-20030508-branch:1.26.0.26
	cagney_writestrings-20030508-branchpoint:1.26
	jimb-ppc64-linux-20030528-branch:1.26.0.24
	jimb-ppc64-linux-20030528-branchpoint:1.26
	carlton_dictionary-20030523-merge:1.26
	cagney_fileio-20030521-branch:1.26.0.22
	cagney_fileio-20030521-branchpoint:1.26
	kettenis_i386newframe-20030517-mergepoint:1.26
	jimb-ppc64-linux-20030509-branch:1.26.0.20
	jimb-ppc64-linux-20030509-branchpoint:1.26
	kettenis_i386newframe-20030504-mergepoint:1.26
	carlton_dictionary-20030430-merge:1.26
	kettenis_i386newframe-20030419-branch:1.26.0.18
	kettenis_i386newframe-20030419-branchpoint:1.26
	carlton_dictionary-20030416-merge:1.26
	cagney_frameaddr-20030409-mergepoint:1.26
	kettenis_i386newframe-20030406-branch:1.26.0.16
	kettenis_i386newframe-20030406-branchpoint:1.26
	cagney_frameaddr-20030403-branchpoint:1.26
	cagney_frameaddr-20030403-branch:1.26.0.14
	cagney_framebase-20030330-mergepoint:1.26
	cagney_framebase-20030326-branch:1.26.0.12
	cagney_framebase-20030326-branchpoint:1.26
	cagney_lazyid-20030317-branch:1.26.0.10
	cagney_lazyid-20030317-branchpoint:1.26
	kettenis-i386newframe-20030316-mergepoint:1.26
	offbyone-20030313-branch:1.26.0.8
	offbyone-20030313-branchpoint:1.26
	kettenis-i386newframe-20030308-branch:1.26.0.6
	kettenis-i386newframe-20030308-branchpoint:1.26
	carlton_dictionary-20030305-merge:1.26
	cagney_offbyone-20030303-branch:1.26.0.4
	cagney_offbyone-20030303-branchpoint:1.26
	carlton_dictionary-20030207-merge:1.26
	interps-20030203-mergepoint:1.26
	interps-20030202-branch:1.26.0.2
	interps-20030202-branchpoint:1.26
	cagney-unwind-20030108-branch:1.23.0.2
	cagney-unwind-20030108-branchpoint:1.23
	carlton_dictionary-20021223-merge:1.22
	gdb_5_3-2002-12-12-release:1.21.6.1
	carlton_dictionary-20021115-merge:1.22
	kseitz_interps-20021105-merge:1.22
	kseitz_interps-20021103-merge:1.22
	drow-cplus-merge-20021020:1.22
	drow-cplus-merge-20021025:1.22
	carlton_dictionary-20021025-merge:1.22
	carlton_dictionary-20021011-merge:1.22
	drow-cplus-branch:1.22.0.4
	drow-cplus-branchpoint:1.22
	kseitz_interps-20020930-merge:1.22
	carlton_dictionary-20020927-merge:1.22
	carlton_dictionary-branch:1.22.0.2
	carlton_dictionary-20020920-branchpoint:1.22
	gdb_5_3-branch:1.21.0.6
	gdb_5_3-2002-09-04-branchpoint:1.21
	kseitz_interps-20020829-merge:1.21
	cagney_sysregs-20020825-branch:1.21.0.4
	cagney_sysregs-20020825-branchpoint:1.21
	readline_4_3-import-branch:1.21.0.2
	readline_4_3-import-branchpoint:1.21
	gdb_5_2_1-2002-07-23-release:1.17.2.3
	kseitz_interps-20020528-branch:1.19.0.6
	kseitz_interps-20020528-branchpoint:1.19
	cagney_regbuf-20020515-branch:1.19.0.4
	cagney_regbuf-20020515-branchpoint:1.19
	jimb-macro-020506-branch:1.19.0.2
	jimb-macro-020506-branchpoint:1.19
	gdb_5_2-2002-04-29-release:1.17.2.2
	gdb_5_2-branch:1.17.0.2
	gdb_5_2-2002-03-03-branchpoint:1.17
	gdb_5_1_1-2002-01-24-release:1.8.2.7
	gdb_5_1_0_1-2002-01-03-release:1.8.2.5
	cygnus_cvs_20020108_pre:1.14
	gdb_5_1_0_1-2002-01-03-branchpoint:1.8.2.5
	gdb_5_1_0_1-2002-01-03-branch:1.8.2.5.0.2
	gdb_5_1-2001-11-21-release:1.8.2.5
	gdb_s390-2001-09-26-branch:1.8.0.4
	gdb_s390-2001-09-26-branchpoint:1.8
	gdb_5_1-2001-07-29-branch:1.8.0.2
	gdb_5_1-2001-07-29-branchpoint:1.8
	dberlin-typesystem-branch:1.6.0.2
	dberlin-typesystem-branchpoint:1.6
	gdb-post-ptid_t-2001-05-03:1.6
	gdb-pre-ptid_t-2001-05-03:1.6
	insight-precleanup-2001-01-01:1.5
	gdb-post-protoization-2000-07-29:1.4
	gdb-pre-protoization-2000-07-29:1.4
	gdb-premipsmulti-2000-06-06-branch:1.4.0.2
	gdb-premipsmulti-2000-06-06-branchpoint:1.4
	gdb-post-params-removal-2000-06-04:1.4
	gdb-pre-params-removal-2000-06-04:1.4
	gdb-post-params-removal-2000-05-28:1.4
	gdb-pre-params-removal-2000-05-28:1.4
	gdb_5_0-2000-05-19-release:1.1.1.2.2.4
	gdb_4_18_2-2000-05-18-release:1.1.1.2.2.4
	gdb_4_95_1-2000-05-11-snapshot:1.1.1.2.2.3
	gdb_4_95_0-2000-04-27-snapshot:1.1.1.2.2.1
	gdb_5_0-2000-04-10-branch:1.1.1.2.0.2
	gdb_5_0-2000-04-10-branchpoint:1.1.1.2
	repo-unification-2000-02-06:1.1.1.2
	insight-2000-02-04:1.1.1.2
	gdb-2000-02-04:1.1.1.2
	gdb-2000-02-02:1.1.1.2
	gdb-2000-02-01:1.1.1.2
	gdb-2000-01-31:1.1.1.2
	gdb-2000-01-26:1.1.1.2
	gdb-2000-01-24:1.1.1.2
	gdb-2000-01-17:1.1.1.2
	gdb-2000-01-10:1.1.1.2
	gdb-2000-01-05:1.1.1.2
	gdb-1999-12-21:1.1.1.2
	gdb-1999-12-13:1.1.1.2
	gdb-1999-12-07:1.1.1.2
	gdb-1999-12-06:1.1.1.2
	gdb-1999-11-16:1.1.1.2
	gdb-1999-11-08:1.1.1.2
	gdb-1999-11-01:1.1.1.2
	gdb-1999-10-25:1.1.1.2
	gdb-1999-10-18:1.1.1.2
	gdb-1999-10-11:1.1.1.2
	gdb-1999-10-04:1.1.1.2
	gdb-1999-09-28:1.1.1.2
	gdb-1999-09-21:1.1.1.2
	gdb-1999-09-13:1.1.1.2
	gdb-1999-09-08:1.1.1.2
	gdb-1999-08-30:1.1.1.2
	gdb-1999-08-23:1.1.1.2
	gdb-1999-08-16:1.1.1.2
	gdb-1999-08-09:1.1.1.2
	gdb-1999-08-02:1.1.1.2
	gdb-1999-07-26:1.1.1.2
	gdb-1999-07-19:1.1.1.2
	gdb-1999-07-12:1.1.1.2
	gdb-post-reformat-19990707:1.1.1.2
	gdb-1999-07-07-post-reformat-snapshot:1.1.1.2
	gdb-pre-reformat-19990707:1.1.1.2
	gdb-1999-07-07:1.1.1.2
	gdb-1999-07-05:1.1.1.2
	gdb-1999-06-28:1.1.1.2
	gdb-1999-06-21:1.1.1.2
	gdb-1999-06-14:1.1.1.2
	gdb-1999-06-07:1.1.1.2
	gdb-1999-06-01:1.1.1.2
	gdb-4_18-branch:1.1.1.1.0.2
	gdb-4_18-release:1.1.1.1
	gdb-1999-05-25:1.1.1.2
	gdb-1999-05-19:1.1.1.2
	gdb-1999-05-10:1.1.1.2
	gdb-19990504:1.1.1.2
	gdb-19990422:1.1.1.2
	SNAPSHOT:1.1.1
	gdb-4_18:1.1.1.1
	GDB_4_18:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.51
date	2013.09.16.18.00.33;	author shebs;	state Exp;
branches;
next	1.50;

1.50
date	2012.03.08.19.08.11;	author jkratoch;	state Exp;
branches;
next	1.49;

1.49
date	2012.01.04.04.11.38;	author brobecke;	state Exp;
branches;
next	1.48;

1.48
date	2011.04.19.18.04.06;	author tromey;	state Exp;
branches
	1.48.2.1;
next	1.47;

1.47
date	2010.06.07.07.42.49;	author nathan;	state Exp;
branches;
next	1.46;

1.46
date	2010.05.02.16.10.03;	author palves;	state Exp;
branches;
next	1.45;

1.45
date	2009.06.29.16.41.44;	author tromey;	state Exp;
branches
	1.45.4.1
	1.45.6.1;
next	1.44;

1.44
date	2009.05.23.13.18.38;	author eliz;	state Exp;
branches;
next	1.43;

1.43
date	2009.04.23.21.28.16;	author tromey;	state Exp;
branches;
next	1.42;

1.42
date	2008.01.17.20.18.48;	author jimb;	state Exp;
branches
	1.42.2.1;
next	1.41;

1.41
date	2007.04.13.14.17.46;	author drow;	state Exp;
branches
	1.41.2.1;
next	1.40;

1.40
date	2007.03.30.12.58.13;	author drow;	state Exp;
branches;
next	1.39;

1.39
date	2007.03.30.12.57.42;	author drow;	state Exp;
branches;
next	1.38;

1.38
date	2006.11.21.05.12.44;	author brobecke;	state Exp;
branches;
next	1.37;

1.37
date	2006.08.08.20.26.23;	author drow;	state Exp;
branches
	1.37.2.1;
next	1.36;

1.36
date	2006.05.17.14.40.39;	author drow;	state Exp;
branches;
next	1.35;

1.35
date	2006.01.21.01.29.03;	author mmitchel;	state Exp;
branches
	1.35.14.1
	1.35.16.1;
next	1.34;

1.34
date	2004.12.03.10.30.13;	author rsandifo;	state Exp;
branches
	1.34.8.1;
next	1.33;

1.33
date	2004.11.08.15.55.49;	author cagney;	state Exp;
branches;
next	1.32;

1.32
date	2004.07.17.14.46.39;	author cagney;	state Exp;
branches
	1.32.2.1;
next	1.31;

1.31
date	2004.02.29.02.59.16;	author cagney;	state Exp;
branches
	1.31.8.1;
next	1.30;

1.30
date	2004.02.29.02.57.24;	author cagney;	state Exp;
branches;
next	1.29;

1.29
date	2003.10.10.07.13.10;	author ksakamot;	state Exp;
branches
	1.29.6.1;
next	1.28;

1.28
date	2003.06.23.03.28.13;	author cagney;	state Exp;
branches;
next	1.27;

1.27
date	2003.06.14.23.43.15;	author cagney;	state Exp;
branches
	1.27.2.1;
next	1.26;

1.26
date	2003.01.31.16.32.44;	author cagney;	state Exp;
branches;
next	1.25;

1.25
date	2003.01.18.17.43.14;	author chastain;	state Exp;
branches;
next	1.24;

1.24
date	2003.01.13.23.25.55;	author cagney;	state Exp;
branches;
next	1.23;

1.23
date	2003.01.05.17.10.33;	author chastain;	state Exp;
branches;
next	1.22;

1.22
date	2002.09.05.12.13.08;	author cagney;	state Exp;
branches
	1.22.2.1
	1.22.4.1;
next	1.21;

1.21
date	2002.07.24.23.51.35;	author cagney;	state Exp;
branches
	1.21.6.1;
next	1.20;

1.20
date	2002.07.23.21.28.38;	author cagney;	state Exp;
branches;
next	1.19;

1.19
date	2002.04.25.23.26.23;	author cagney;	state Exp;
branches
	1.19.6.1;
next	1.18;

1.18
date	2002.04.07.19.09.58;	author cagney;	state Exp;
branches;
next	1.17;

1.17
date	2002.02.23.20.59.55;	author cagney;	state Exp;
branches
	1.17.2.1;
next	1.16;

1.16
date	2002.01.24.08.05.31;	author cagney;	state Exp;
branches;
next	1.15;

1.15
date	2002.01.13.16.16.58;	author cagney;	state Exp;
branches;
next	1.14;

1.14
date	2001.12.07.23.33.19;	author cagney;	state Exp;
branches;
next	1.13;

1.13
date	2001.11.18.04.43.50;	author cagney;	state Exp;
branches;
next	1.12;

1.12
date	2001.11.11.18.34.46;	author cagney;	state Exp;
branches;
next	1.11;

1.11
date	2001.11.02.21.59.18;	author cagney;	state Exp;
branches;
next	1.10;

1.10
date	2001.10.31.02.53.17;	author cagney;	state Exp;
branches;
next	1.9;

1.9
date	2001.10.18.04.35.35;	author cagney;	state Exp;
branches;
next	1.8;

1.8
date	2001.07.28.17.13.42;	author cagney;	state Exp;
branches
	1.8.2.1;
next	1.7;

1.7
date	2001.07.25.14.58.38;	author eliz;	state Exp;
branches;
next	1.6;

1.6
date	2001.04.05.16.52.30;	author eliz;	state Exp;
branches;
next	1.5;

1.5
date	2000.12.22.15.03.10;	author fnasser;	state Exp;
branches;
next	1.4;

1.4
date	2000.05.12.10.15.16;	author cagney;	state Exp;
branches;
next	1.3;

1.3
date	2000.05.11.07.55.25;	author cagney;	state Exp;
branches;
next	1.2;

1.2
date	2000.04.12.16.51.27;	author eliz;	state Exp;
branches;
next	1.1;

1.1
date	99.04.16.01.33.57;	author shebs;	state Exp;
branches
	1.1.1.1;
next	;

1.48.2.1
date	2012.01.06.04.22.04;	author brobecke;	state Exp;
branches;
next	;

1.45.4.1
date	2009.09.16.22.23.54;	author gdbadmin;	state Exp;
branches;
next	1.45.4.2;

1.45.4.2
date	2009.09.30.20.20.50;	author gdbadmin;	state Exp;
branches;
next	1.45.4.3;

1.45.4.3
date	2009.10.06.16.25.13;	author gdbadmin;	state Exp;
branches;
next	1.45.4.4;

1.45.4.4
date	2009.12.22.13.17.41;	author gdbadmin;	state Exp;
branches;
next	;

1.45.6.1
date	2010.02.19.01.04.57;	author gdbadmin;	state Exp;
branches;
next	1.45.6.2;

1.45.6.2
date	2010.03.18.20.56.27;	author gdbadmin;	state Exp;
branches;
next	;

1.42.2.1
date	2008.03.13.17.40.27;	author gdbadmin;	state Exp;
branches;
next	1.42.2.2;

1.42.2.2
date	2008.03.27.18.06.49;	author gdbadmin;	state Exp;
branches;
next	;

1.41.2.1
date	2007.09.19.19.47.54;	author gdbadmin;	state Exp;
branches;
next	1.41.2.2;

1.41.2.2
date	2007.10.10.17.03.10;	author gdbadmin;	state Exp;
branches;
next	1.41.2.3;

1.41.2.3
date	2007.10.29.17.45.01;	author gdbadmin;	state Exp;
branches;
next	;

1.37.2.1
date	2006.11.20.00.27.40;	author brobecke;	state Exp;
branches;
next	1.37.2.2;

1.37.2.2
date	2006.11.21.05.15.39;	author brobecke;	state Exp;
branches;
next	;

1.35.14.1
date	2006.08.28.07.48.50;	author nickrob;	state Exp;
branches;
next	;

1.35.16.1
date	2006.05.16.20.08.13;	author brobecke;	state Exp;
branches;
next	1.35.16.2;

1.35.16.2
date	2006.05.16.20.11.01;	author brobecke;	state Exp;
branches;
next	;

1.34.8.1
date	2005.11.03.01.45.06;	author brobecke;	state Exp;
branches;
next	1.34.8.2;

1.34.8.2
date	2005.11.22.08.07.34;	author brobecke;	state Exp;
branches;
next	;

1.32.2.1
date	2004.11.08.15.54.34;	author cagney;	state Exp;
branches;
next	;

1.31.8.1
date	2004.07.17.14.47.05;	author cagney;	state Exp;
branches;
next	;

1.29.6.1
date	2004.03.27.17.37.43;	author drow;	state Exp;
branches;
next	1.29.6.2;

1.29.6.2
date	2004.09.16.17.00.49;	author drow;	state Exp;
branches;
next	;

1.27.2.1
date	2003.06.23.03.26.04;	author cagney;	state Exp;
branches;
next	;

1.22.2.1
date	2003.02.07.19.17.43;	author carlton;	state Exp;
branches;
next	1.22.2.2;

1.22.2.2
date	2003.06.27.21.49.42;	author carlton;	state Exp;
branches;
next	1.22.2.3;

1.22.2.3
date	2003.11.11.23.50.37;	author carlton;	state Exp;
branches;
next	;

1.22.4.1
date	2003.12.14.20.27.04;	author drow;	state Exp;
branches;
next	;

1.21.6.1
date	2002.09.05.12.12.55;	author cagney;	state Exp;
branches;
next	1.21.6.2;

1.21.6.2
date	2003.01.13.23.29.07;	author cagney;	state Exp;
branches;
next	;

1.19.6.1
date	2002.08.09.18.34.22;	author kseitz;	state Exp;
branches;
next	1.19.6.2;

1.19.6.2
date	2002.10.01.00.46.00;	author kseitz;	state Exp;
branches;
next	;

1.17.2.1
date	2002.04.07.18.59.14;	author cagney;	state Exp;
branches;
next	1.17.2.2;

1.17.2.2
date	2002.04.25.23.24.38;	author cagney;	state Exp;
branches;
next	1.17.2.3;

1.17.2.3
date	2002.07.23.20.30.38;	author gdbadmin;	state Exp;
branches;
next	;

1.8.2.1
date	2001.10.18.04.38.40;	author cagney;	state Exp;
branches;
next	1.8.2.2;

1.8.2.2
date	2001.10.31.02.53.15;	author cagney;	state Exp;
branches;
next	1.8.2.3;

1.8.2.3
date	2001.11.02.21.53.19;	author cagney;	state Exp;
branches;
next	1.8.2.4;

1.8.2.4
date	2001.11.11.18.35.19;	author cagney;	state Exp;
branches;
next	1.8.2.5;

1.8.2.5
date	2001.11.18.04.42.41;	author cagney;	state Exp;
branches;
next	1.8.2.6;

1.8.2.6
date	2001.12.07.23.30.56;	author cagney;	state Exp;
branches;
next	1.8.2.7;

1.8.2.7
date	2002.01.24.07.38.30;	author gdbadmin;	state Exp;
branches;
next	;

1.1.1.1
date	99.04.16.01.33.57;	author shebs;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	99.04.26.18.23.21;	author shebs;	state Exp;
branches
	1.1.1.2.2.1;
next	;

1.1.1.2.2.1
date	2000.04.12.16.55.15;	author eliz;	state Exp;
branches;
next	1.1.1.2.2.2;

1.1.1.2.2.2
date	2000.05.11.00.32.18;	author cagney;	state Exp;
branches;
next	1.1.1.2.2.3;

1.1.1.2.2.3
date	2000.05.11.07.55.16;	author cagney;	state Exp;
branches;
next	1.1.1.2.2.4;

1.1.1.2.2.4
date	2000.05.12.10.13.48;	author cagney;	state Exp;
branches;
next	;


desc
@@


1.51
log
@	* README: Update references to writing code for GDB.
	* configure.ac (build_warnings): Remove obsolete comment.
	* configure: Regenerate.
	* gdbarch.sh: Remove references to gdbint.texinfo.
	* gdbarch.h: Regenerate.
	* gdbtypes.c (objfile_type): Remove comments referencing internals
	manual and D10V.

	[gdb/doc]
	Remove the internals manual gdbint.texinfo.
	* Makefile.in (INFO_DEPS): Remove gdbint.info.
	(PDFFILES): Remove gdbint.pdf.
	(HTMLFILES): Remove gdbint/index.html.
	(HTMLFILES_INSTALL): Remove gdbint.
	(GDBINT_DOC_FILES): Remove.
	(dvi): Remove gdbint.dvi.
	(ps): Remove gdbint.ps.
	* gdbint.texinfo: Remove file.
	* gdb.texinfo (Maintenance Commands): Remove reference to gdbint.
@
text
@		     README for GDB release

This is GDB, the GNU source-level debugger.

A summary of new features is in the file `gdb/NEWS'.

Check the GDB home page at http://www.gnu.org/software/gdb/ for up to
date release information, mailing list links and archives, etc.

The file `gdb/PROBLEMS' contains information on problems identified
late in the release cycle.  GDB's bug tracking data base at
http://www.gnu.org/software/gdb/bugs/ contains a more complete list of
bugs.


Unpacking and Installation -- quick overview
==========================

   The release is provided as a gzipped tar file called
'gdb-VERSION.tar.gz', where VERSION is the version of GDB.

   The GDB debugger sources, the generic GNU include
files, the BFD ("binary file description") library, the readline
library, and other libraries all have directories of their own
underneath the gdb-VERSION directory.  The idea is that a variety of GNU
tools can share a common copy of these things.  Be aware of variation
over time--for example don't try to build GDB with a copy of bfd from
a release other than the GDB release (such as a binutils release),
especially if the releases are more than a few weeks apart.
Configuration scripts and makefiles exist to cruise up and down this
directory tree and automatically build all the pieces in the right
order.

   When you unpack the gdb-VERSION.tar.gz file, it will create a
source directory called `gdb-VERSION'.

You can build GDB right in the source directory:

      cd gdb-VERSION
      ./configure
      make
      cp gdb/gdb /usr/local/bin/gdb	(or wherever you want)

However, we recommend that an empty directory be used instead.
This way you do not clutter your source tree with binary files
and will be able to create different builds with different 
configuration options.

You can build GDB in any empty build directory:

      mkdir build
      cd build
      <full path to your sources>/gdb-VERSION/configure
      make
      cp gdb/gdb /usr/local/bin/gdb	(or wherever you want)

(Building GDB with DJGPP tools for MS-DOS/MS-Windows is slightly
different; see the file gdb-VERSION/gdb/config/djgpp/README for details.)

   This will configure and build all the libraries as well as GDB.  If
`configure' can't determine your system type, specify one as its
argument, e.g., `./configure sun4' or `./configure decstation'.

   Make sure that your 'configure' line ends in 'gdb-VERSION/configure':

      /berman/migchain/source/gdb-VERSION/configure      # RIGHT
      /berman/migchain/source/gdb-VERSION/gdb/configure  # WRONG

   The GDB package contains several subdirectories, such as 'gdb',
'bfd', and 'readline'.  If your 'configure' line ends in
'gdb-VERSION/gdb/configure', then you are configuring only the gdb
subdirectory, not the whole GDB package.  This leads to build errors
such as:

      make: *** No rule to make target `../bfd/bfd.h', needed by `gdb.o'.  Stop.

   If you get other compiler errors during this stage, see the `Reporting
Bugs' section below; there are a few known problems.

   GDB requires an ISO C (ANSI C) compiler.  If you do not have an ISO
C compiler for your system, you may be able to download and install
the GNU CC compiler.  It is available via anonymous FTP from the
directory `ftp://ftp.gnu.org/pub/gnu/gcc'.  GDB also requires an ISO
C standard library.  The GDB remote server, GDBserver, builds with some
non-ISO standard libraries - e.g. for Windows CE.

   GDB uses Expat, an XML parsing library, to implement some target-specific
features.  Expat will be linked in if it is available at build time, or
those features will be disabled.  The latest version of Expat should be
available from `http://expat.sourceforge.net'.

   GDB can be used as a cross-debugger, running on a machine of one
type while debugging a program running on a machine of another type.
See below.


More Documentation
******************

   All the documentation for GDB comes as part of the machine-readable
distribution.  The documentation is written in Texinfo format, which
is a documentation system that uses a single source file to produce
both on-line information and a printed manual.  You can use one of the
Info formatting commands to create the on-line version of the
documentation and TeX (or `texi2roff') to typeset the printed version.

   GDB includes an already formatted copy of the on-line Info version
of this manual in the `gdb/doc' subdirectory.  The main Info file is
`gdb-VERSION/gdb/doc/gdb.info', and it refers to subordinate files
matching `gdb.info*' in the same directory.  If necessary, you can
print out these files, or read them with any editor; but they are
easier to read using the `info' subsystem in GNU Emacs or the
standalone `info' program, available as part of the GNU Texinfo
distribution.

   If you want to format these Info files yourself, you need one of the
Info formatting programs, such as `texinfo-format-buffer' or
`makeinfo'.

   If you have `makeinfo' installed, and are in the top level GDB
source directory (`gdb-VERSION'), you can make the Info file by
typing:

      cd gdb/doc
      make info

   If you want to typeset and print copies of this manual, you need
TeX, a program to print its DVI output files, and `texinfo.tex', the
Texinfo definitions file.  This file is included in the GDB
distribution, in the directory `gdb-VERSION/texinfo'.

   TeX is a typesetting program; it does not print files directly, but
produces output files called DVI files.  To print a typeset document,
you need a program to print DVI files.  If your system has TeX
installed, chances are it has such a program.  The precise command to
use depends on your system; `lpr -d' is common; another (for PostScript
devices) is `dvips'.  The DVI print command may require a file name
without any extension or a `.dvi' extension.

   TeX also requires a macro definitions file called `texinfo.tex'. 
This file tells TeX how to typeset a document written in Texinfo
format.  On its own, TeX cannot read, much less typeset a Texinfo file.
 `texinfo.tex' is distributed with GDB and is located in the
`gdb-VERSION/texinfo' directory.

   If you have TeX and a DVI printer program installed, you can typeset
and print this manual.  First switch to the `gdb' subdirectory of
the main source directory (for example, to `gdb-VERSION/gdb') and then type:

      make doc/gdb.dvi

   If you prefer to have the manual in PDF format, type this from the
`gdb/doc' subdirectory of the main source directory:

      make gdb.pdf

For this to work, you will need the PDFTeX package to be installed.


Installing GDB
**************

   GDB comes with a `configure' script that automates the process of
preparing GDB for installation; you can then use `make' to build the
`gdb' program.

   The GDB distribution includes all the source code you need for GDB in
a single directory.  That directory contains:

`gdb-VERSION/{COPYING,COPYING.LIB}'
     Standard GNU license files.  Please read them.

`gdb-VERSION/bfd'
     source for the Binary File Descriptor library

`gdb-VERSION/config*'
     script for configuring GDB, along with other support files

`gdb-VERSION/gdb'
     the source specific to GDB itself

`gdb-VERSION/include'
     GNU include files

`gdb-VERSION/libiberty'
     source for the `-liberty' free software library

`gdb-VERSION/opcodes'
     source for the library of opcode tables and disassemblers

`gdb-VERSION/readline'
     source for the GNU command-line interface
     NOTE:  The readline library is compiled for use by GDB, but will
     not be installed on your system when "make install" is issued.

`gdb-VERSION/sim'
     source for some simulators (ARM, D10V, SPARC, M32R, MIPS, PPC, V850, etc)

`gdb-VERSION/texinfo'
     The `texinfo.tex' file, which you need in order to make a printed
     manual using TeX.

`gdb-VERSION/etc'
     Coding standards, useful files for editing GDB, and other
     miscellanea.

   Note: the following instructions are for building GDB on Unix or
Unix-like systems.  Instructions for building with DJGPP for
MS-DOS/MS-Windows are in the file gdb/config/djgpp/README.

   The simplest way to configure and build GDB is to run `configure'
from the `gdb-VERSION' directory.

   First switch to the `gdb-VERSION' source directory if you are
not already in it; then run `configure'.

   For example:

      cd gdb-VERSION
      ./configure
      make

   Running `configure' followed by `make' builds the `bfd',
`readline', `mmalloc', and `libiberty' libraries, then `gdb' itself.
The configured source files, and the binaries, are left in the
corresponding source directories.

   `configure' is a Bourne-shell (`/bin/sh') script; if your system
does not recognize this automatically when you run a different shell,
you may need to run `sh' on it explicitly:

      sh configure

   If you run `configure' from a directory that contains source
directories for multiple libraries or programs, `configure' creates
configuration files for every directory level underneath (unless
you tell it not to, with the `--norecursion' option).

   You can install `gdb' anywhere; it has no hardwired paths. However,
you should make sure that the shell on your path (named by the `SHELL'
environment variable) is publicly readable.  Remember that GDB uses the
shell to start your program--some systems refuse to let GDB debug child
processes whose programs are not readable.


Compiling GDB in another directory
==================================

   If you want to run GDB versions for several host or target machines,
you need a different `gdb' compiled for each combination of host and
target.  `configure' is designed to make this easy by allowing you to
generate each configuration in a separate subdirectory, rather than in
the source directory.  If your `make' program handles the `VPATH'
feature correctly (GNU `make' and SunOS 'make' are two that should),
running `make' in each of these directories builds the `gdb' program
specified there.

   To build `gdb' in a separate directory, run `configure' with the
`--srcdir' option to specify where to find the source. (You also need
to specify a path to find `configure' itself from your working
directory.  If the path to `configure' would be the same as the
argument to `--srcdir', you can leave out the `--srcdir' option; it
will be assumed.)

   For example, you can build GDB in a separate
directory for a Sun 4 like this:

     cd gdb-VERSION
     mkdir ../gdb-sun4
     cd ../gdb-sun4
     ../gdb-VERSION/configure
     make

   When `configure' builds a configuration using a remote source
directory, it creates a tree for the binaries with the same structure
(and using the same names) as the tree under the source directory.  In
the example, you'd find the Sun 4 library `libiberty.a' in the
directory `gdb-sun4/libiberty', and GDB itself in `gdb-sun4/gdb'.

   One popular reason to build several GDB configurations in separate
directories is to configure GDB for cross-compiling (where GDB runs on
one machine--the host--while debugging programs that run on another
machine--the target).  You specify a cross-debugging target by giving
the `--target=TARGET' option to `configure'.

   When you run `make' to build a program or library, you must run it
in a configured directory--whatever directory you were in when you
called `configure' (or one of its subdirectories).

   The `Makefile' that `configure' generates in each source directory
also runs recursively.  If you type `make' in a source directory such
as `gdb-VERSION' (or in a separate configured directory configured with
`--srcdir=PATH/gdb-VERSION'), you will build all the required libraries,
and then build GDB.

   When you have multiple hosts or targets configured in separate
directories, you can run `make' on them in parallel (for example, if
they are NFS-mounted on each of the hosts); they will not interfere
with each other.


Specifying names for hosts and targets
======================================

   The specifications used for hosts and targets in the `configure'
script are based on a three-part naming scheme, but some short
predefined aliases are also supported.  The full naming scheme encodes
three pieces of information in the following pattern:

     ARCHITECTURE-VENDOR-OS

   For example, you can use the alias `sun4' as a HOST argument or in a
`--target=TARGET' option.  The equivalent full name is
`sparc-sun-sunos4'.

   The `configure' script accompanying GDB does not provide any query
facility to list all supported host and target names or aliases. 
`configure' calls the Bourne shell script `config.sub' to map
abbreviations to full names; you can read the script, if you wish, or
you can use it to test your guesses on abbreviations--for example:

     % sh config.sub sun4
     sparc-sun-sunos4.1.1
     % sh config.sub sun3
     m68k-sun-sunos4.1.1
     % sh config.sub decstation
     mips-dec-ultrix4.2
     % sh config.sub hp300bsd
     m68k-hp-bsd
     % sh config.sub i386v
     i386-pc-sysv
     % sh config.sub i786v
     Invalid configuration `i786v': machine `i786v' not recognized

`config.sub' is also distributed in the GDB source directory.


`configure' options
===================

   Here is a summary of the `configure' options and arguments that are
most often useful for building GDB.  `configure' also has several other
options not listed here.  *note : (configure.info)What Configure Does,
for a full explanation of `configure'.

     configure [--help]
               [--prefix=DIR]
               [--srcdir=PATH]
               [--norecursion] [--rm]
	       [--enable-build-warnings]
               [--target=TARGET]
	       [--host=HOST]
	       [HOST]

You may introduce options with a single `-' rather than `--' if you
prefer; but you may abbreviate option names if you use `--'.

`--help'
     Display a quick summary of how to invoke `configure'.

`-prefix=DIR'
     Configure the source to install programs and files under directory
     `DIR'.

`--srcdir=PATH'
     *Warning: using this option requires GNU `make', or another `make'
     that compatibly implements the `VPATH' feature.*
     Use this option to make configurations in directories separate
     from the GDB source directories.  Among other things, you can use
     this to build (or maintain) several configurations simultaneously,
     in separate directories.  `configure' writes configuration
     specific files in the current directory, but arranges for them to
     use the source in the directory PATH.  `configure' will create
     directories under the working directory in parallel to the source
     directories below PATH.

`--host=HOST'
     Configure GDB to run on the specified HOST.

     There is no convenient way to generate a list of all available
     hosts.

`HOST ...'
     Same as `--host=HOST'.  If you omit this, GDB will guess; it's
     quite accurate.

`--norecursion'
     Configure only the directory level where `configure' is executed;
     do not propagate configuration to subdirectories.

`--rm'
     Remove the configuration that the other arguments specify.

`--enable-build-warnings'
     When building the GDB sources, ask the compiler to warn about any
     code which looks even vaguely suspicious.  You should only using
     this feature if you're compiling with GNU CC.  It passes the
     following flags:
	-Wimplicit
	-Wreturn-type
	-Wcomment
	-Wtrigraphs
	-Wformat
	-Wparentheses
	-Wpointer-arith

`--enable-werror'
     Treat compiler warnings as werrors.  Use this only with GCC.  It
     adds the -Werror flag to the compiler, which will fail the
     compilation if the compiler outputs any warning messages.

`--target=TARGET'
     Configure GDB for cross-debugging programs running on the specified
     TARGET.  Without this option, GDB is configured to debug programs
     that run on the same machine (HOST) as GDB itself.

     There is no convenient way to generate a list of all available
     targets.

`--with-gdb-datadir=PATH'
     Set the GDB-specific data directory.  GDB will look here for
     certain supporting files or scripts.  This defaults to the `gdb'
     subdirectory of `datadir' (which can be set using `--datadir').

`--with-relocated-sources=DIR'
     Sets up the default source path substitution rule so that
     directory names recorded in debug information will be
     automatically adjusted for any directory under DIR.  DIR should
     be a subdirectory of GDB's configured prefix, the one mentioned
     in the `--prefix' or `--exec-prefix' options to configure.  This
     option is useful if GDB is supposed to be moved to a different
     place after it is built.

`--enable-64-bit-bfd'
     Enable 64-bit support in BFD on 32-bit hosts.

`--disable-gdbmi'
     Build GDB without the GDB/MI machine interface.

`--enable-tui'
     Build GDB with the text-mode full-screen user interface (TUI).
     Requires a curses library (ncurses and cursesX are also
     supported).

`--enable-gdbtk'
     Build GDB with the gdbtk GUI interface.  Requires TCL/Tk to be
     installed.

`--with-libunwind-ia64'
     Use the libunwind library for unwinding function call stack on ia64
     target platforms.
     See http://www.nongnu.org/libunwind/index.html for details.

`--with-curses'
     Use the curses library instead of the termcap library, for
     text-mode terminal operations.

`--enable-profiling' Enable profiling of GDB itself.  Necessary if you
     want to use the "maint set profile" command for profiling GDB.
     Requires the functions `monstartup' and `_mcleanup' to be present
     in the standard C library used to build GDB, and also requires a
     compiler that supports the `-pg' option.

`--with-system-readline'
     Use the readline library installed on the host, rather than the
     library supplied as part of GDB tarball.

`--with-expat'
     Build GDB with the libexpat library.  (Done by default if
     libexpat is installed and found at configure time.)  This library
     is used to read XML files supplied with GDB.  If it is
     unavailable, some features, such as remote protocol memory maps,
     target descriptions, and shared library lists, that are based on
     XML files, will not be available in GDB.  If your host does not
     have libexpat installed, you can  get the latest version from
     http://expat.sourceforge.net.

`--with-python[=PATH]'
     Build GDB with Python scripting support.  (Done by default if
     libpython is present and found at configure time.)  Python makes
     GDB scripting much more powerful than the restricted CLI
     scripting language.  If your host does not have Python installed,
     you can find it on http://www.python.org/download/.  The oldest
     version of Python supported by GDB is 2.4.  The optional argument
     PATH says where to find the Python headers and libraries; the
     configure script will look in PATH/include for headers and in
     PATH/lib for the libraries.

`--without-included-regex'
     Don't use the regex library included with GDB (as part of the
     libiberty library).  This is the default on hosts with version 2
     of the GNU C library.

`--with-sysroot=DIR'
     Use DIR as the default system root directory for libraries whose
     file names begin with `/lib' or `/usr/lib'.  (The value of DIR
     can be modified at run time by using the "set sysroot" command.)
     If DIR is under the GDB configured prefix (set with `--prefix' or
     `--exec-prefix' options), the default system root will be
     automatically adjusted if and when GDB is moved to a different
     location.

`--with-system-gdbinit=FILE'
     Configure GDB to automatically load a system-wide init file.
     FILE should be an absolute file name.  If FILE is in a directory
     under the configured prefix, and GDB is moved to another location
     after being built, the location of the system-wide init file will
     be adjusted accordingly. 

`configure' accepts other options, for compatibility with configuring
other GNU tools recursively; but these are the only options that affect
GDB or its supporting libraries.


Remote debugging
=================

   The files m68k-stub.c, i386-stub.c, and sparc-stub.c are examples
of remote stubs to be used with remote.c.  They are designed to run
standalone on an m68k, i386, or SPARC cpu and communicate properly
with the remote.c stub over a serial line.

   The directory gdb/gdbserver/ contains `gdbserver', a program that
allows remote debugging for Unix applications.  GDBserver is only
supported for some native configurations, including Sun 3, Sun 4, and
Linux.
The file gdb/gdbserver/README includes further notes on GDBserver; in
particular, it explains how to build GDBserver for cross-debugging
(where GDBserver runs on the target machine, which is of a different
architecture than the host machine running GDB).

   There are a number of remote interfaces for talking to existing ROM
monitors and other hardware:

	remote-mips.c	 MIPS remote debugging protocol
	remote-sds.c	 PowerPC SDS monitor
	remote-sim.c	 Generalized simulator protocol


Reporting Bugs in GDB
=====================

   There are several ways of reporting bugs in GDB.  The prefered
method is to use the World Wide Web:

      http://www.gnu.org/software/gdb/bugs/

As an alternative, the bug report can be submitted, via e-mail, to the
address "bug-gdb@@gnu.org".

   When submitting a bug, please include the GDB version number, and
how you configured it (e.g., "sun4" or "mach386 host,
i586-intel-synopsys target").  Since GDB now supports so many
different configurations, it is important that you be precise about
this.  If at all possible, you should include the actual banner
that GDB prints when it starts up, or failing that, the actual
configure command that you used when configuring GDB.

   For more information on how/whether to report bugs, see the
Reporting Bugs chapter of the GDB manual (gdb/doc/gdb.texinfo).


Graphical interface to GDB -- X Windows, MS Windows
==========================

   Several graphical interfaces to GDB are available.  You should
check:

	http://www.gnu.org/software/gdb/links/

for an up-to-date list.

   Emacs users will very likely enjoy the Grand Unified Debugger mode;
try typing `M-x gdb RET'.


Writing Code for GDB
=====================

   There is information about writing code for GDB in the file
`CONTRIBUTE' and at the website:

	http://www.gnu.org/software/gdb/

in particular in the wiki.

   If you are pondering writing anything but a short patch, especially
take note of the information about copyrights and copyright assignment.
It can take quite a while to get all the paperwork done, so
we encourage you to start that process as soon as you decide you are
planning to work on something, or at least well ahead of when you
think you will be ready to submit the patches.


GDB Testsuite
=============

   Included with the GDB distribution is a DejaGNU based testsuite
that can either be used to test your newly built GDB, or for
regression testing a GDB with local modifications.

   Running the testsuite requires the prior installation of DejaGNU,
which is generally available via ftp.  The directory
ftp://sources.redhat.com/pub/dejagnu/ will contain a recent snapshot.
Once DejaGNU is installed, you can run the tests in one of the
following ways:

  (1)	cd gdb-VERSION
	make check-gdb

or

  (2)	cd gdb-VERSION/gdb
	make check

or

  (3)	cd gdb-VERSION/gdb/testsuite
	make site.exp	(builds the site specific file)
	runtest -tool gdb GDB=../gdb    (or GDB=<somepath> as appropriate)

When using a `make'-based method, you can use the Makefile variable
`RUNTESTFLAGS' to pass flags to `runtest', e.g.:

	make RUNTESTFLAGS=--directory=gdb.cp check

If you use GNU make, you can use its `-j' option to run the testsuite
in parallel.  This can greatly reduce the amount of time it takes for
the testsuite to run.  In this case, if you set `RUNTESTFLAGS' then,
by default, the tests will be run serially even under `-j'.  You can
override this and force a parallel run by setting the `make' variable
`FORCE_PARALLEL' to any non-empty value.  Note that the parallel `make
check' assumes that you want to run the entire testsuite, so it is not
compatible with some dejagnu options, like `--directory'.

The last method gives you slightly more control in case of problems
with building one or more test executables or if you are using the
testsuite `standalone', without it being part of the GDB source tree.

See the DejaGNU documentation for further details.


Copyright and License Notices
=============================

Most files maintained by the GDB Project contain a copyright notice
as well as a license notice, usually at the start of the file.

To reduce the length of copyright notices, consecutive years in the
copyright notice can be combined into a single range.  For instance,
the following list of copyright years...

    1986, 1988, 1989, 1991-1993, 1999, 2000, 2007, 2008, 2009, 2010, 2011

... is abbreviated into:

    1986, 1988-1989, 1991-1993, 1999-2000, 2007-2011

Every year of each range, inclusive, is a copyrightable year that
could be listed individually.


(this is for editing this file with GNU emacs)
Local Variables:
mode: text
End:
@


1.50
log
@gdb/
	* libunwind-frame.c: Rename to ...
	* ia64-libunwind-tdep.c: ... here.
	* libunwind-frame.h: Rename to ...
	* ia64-libunwind-tdep.h: ... here.
	* Makefile.in (HFILES_NO_SRCDIR): Rename libunwind-frame.h to
	ia64-libunwind-tdep.h.
	(ALLDEPFILES): Rename libunwind-frame.c to ia64-libunwind-tdep.c.
	* README (--with-libunwind): Rename to ...
	(--with-libunwind-ia64): ... here, note it is ia64 specific now.
	* config.in: Regenerate.
	* configure: Regenerate.
	* configure.ac: New option --with-libunwind-ia64, make the
	AS_HELP_STRING ia64 specific.  Deprecate option --with-libunwind.
	Remove AC_DEFINE for HAVE_LIBUNWIND.
	* ia64-libunwind-tdep.c: Make the file top comment ia64 specific.
	Rename libunwind-frame.h #include to ia64-libunwind-tdep.h.
	Rename libunwind-frame in the general comment.
	* ia64-libunwind-tdep.h: Make the file top comment ia64 specific.
	Rename symbol LIBUNWIND_FRAME_H to IA64_TDEP_LIBUNWIND_FRAME_H.
	Move forward declarations inside #ifndef.  Rename libunwind-frame in
	the general comment.
	* ia64-tdep.c: Rename libunwind-frame.h #include to
	ia64-libunwind-tdep.h.
	(ia64_gdb2uw_regnum, ia64_uw2gdb_regnum, ia64_is_fpreg)
	(ia64_libunwind_descr): Rename libunwind-frame to
	ia64-libunwind-tdep in these function comments.
	* ia64-tdep.h: Rename libunwind-frame.h #include to
	ia64-libunwind-tdep.h.
	* ia64-vms-tdep.c (ia64_vms_libunwind_descr): Rename libunwind-frame to
	ia64-libunwind-tdep in that data comment.
@
text
@d580 6
a585 5
   There is a lot of information about writing code for GDB in the
internals manual, distributed with GDB in gdb/doc/gdbint.texinfo.  You
can read it by hand, print it by using TeX and texinfo, or process it
into an `info' file for use with Emacs' info mode or the standalone
`info' program.
d588 2
a589 2
take note of the information about copyrights in the node Submitting
Patches.  It can take quite a while to get all the paperwork done, so
@


1.49
log
@[README] Add note about copyright and license notices

Also explain the use of year ranges in copyright notices.

gdb/ChangeLog:

        * README (Copyright and License Notices): New section.
@
text
@d449 4
a452 4
`--with-libunwind'
     Use the libunwind library for unwinding function call stack.  See
     http://www.nongnu.org/libunwind/index.html fro details.
     Supported only on some platforms.
@


1.48
log
@gdb
	* windows-tdep.c (windows_xfer_shared_library):
	* windows-nat.c (get_module_name, windows_make_so):
	* v850-tdep.c (v850_handle_pushm):
	* utils.c (null_cleanup, gdb_realpath):
	* ui-out.c (get_next_header):
	* tracepoint.c (clear_traceframe_info):
	* symtab.c (lookup_symtab):
	* serial.h (struct serial_ops):
	* mipsread.c (read_alphacoff_dynamic_symtab):
	* infcmd.c (print_return_value):
	* ia64-linux-tdep.c (ia64_linux_sigcontext_register_address):
	* f-exp.y (parse_number):
	* exceptions.c (catch_exceptions):
	* dummy-frame.c (dummy_frame_this_id):
	* defs.h (struct cleanup):
	* breakpoint.c (disable_breakpoints_in_unloaded_shlib):
	* arm-tdep.c (arm_push_dummy_call):
	* amd64-tdep.h (amd64_collect_xsave):
	* amd64-tdep.c (amd64_collect_xsave):
	* alpha-tdep.c (alpha_heuristic_frame_unwind_cache):
	* README (typing): Remove duplicate words.
	* cli/cli-decode.c (lookup_cmd_composition): Add comma.
	* infrun.c (siginfo_value_read): Fix typo.
	* solib-frv.c (frv_fdpic_find_global_pointer): Likewise.
	* top.c (source_line_number): Add comma.
gdb/doc
	* gdbint.texinfo (Register Information Functions): Remove
	duplicate "the".
	* gdb.texinfo (Emacs): Remove duplicate "to".
	(GDB/MI Variable Objects): Remove duplicate "the".
	(General Query Packets): Likewise.
gdb/testsuite
	* gdb.mi/mi-nsmoribund.exp:
	* gdb.hp/gdb.objdbg/objdbg01.exp:
	* gdb.base/structs.exp (test_struct_returns):
	* gdb.base/call-sc.exp (test_scalar_returns):
	* gdb.base/bigcore.exp: Remove duplicate words.
gdb/gdbserver
	* win32-low.c (handle_load_dll): Remove duplicate "the".
@
text
@d641 20
@


1.48.2.1
log
@[README] Add note about copyright and license notices

Also explain the use of year ranges in copyright notices.

gdb/ChangeLog:

        * README (Copyright and License Notices): New section.
@
text
@a640 20

Copyright and License Notices
=============================

Most files maintained by the GDB Project contain a copyright notice
as well as a license notice, usually at the start of the file.

To reduce the length of copyright notices, consecutive years in the
copyright notice can be combined into a single range.  For instance,
the following list of copyright years...

    1986, 1988, 1989, 1991-1993, 1999, 2000, 2007, 2008, 2009, 2010, 2011

... is abbreviated into:

    1986, 1988-1989, 1991-1993, 1999-2000, 2007-2011

Every year of each range, inclusive, is a copyrightable year that
could be listed individually.

@


1.47
log
@	* README: Make version-agnostic.
@
text
@d147 1
a147 1
and print this manual.  First switch to the the `gdb' subdirectory of
@


1.46
log
@	gdb/
	* README: Use consistent `GDB' and `GDBserver' spellings.

	gdb/gdbserver/
	* README: Use consistent `GDB' and `GDBserver' spellings.
@
text
@d1 1
a1 2
		     README for gdb-6.3 release
		     Updated 20, November, 2006
d19 4
a22 1
   In this release, the GDB debugger sources, the generic GNU include
d25 1
a25 1
underneath the gdb-6.3 directory.  The idea is that a variety of GNU
d34 2
a35 11
   When you unpack the gdb-6.3.tar.gz file, you'll find a directory
called `gdb-6.3', which contains:

  COPYING       config-ml.in  gettext.m4   ltconfig        sim
  COPYING.LIB   config.guess  include      ltmain.sh       src-release
  Makefile.def  config.sub    install-sh   md5.sum         symlink-tree
  Makefile.in   configure     libiberty    missing         texinfo
  Makefile.tpl  configure.in  libtool.m4   mkinstalldirs   ylwrap
  README        djunpack.bat  ltcf-c.sh    move-if-change
  bfd           etc           ltcf-cxx.sh  opcodes
  config        gdb           ltcf-gcj.sh  readline
d39 1
a39 1
      cd gdb-6.3
d53 1
a53 1
      <full path to your sources>/gdb-6.3/configure
d58 1
a58 1
different; see the file gdb-6.3/gdb/config/djgpp/README for details.)
d64 1
a64 1
   Make sure that your 'configure' line ends in 'gdb-6.3/configure':
d66 2
a67 2
      /berman/migchain/source/gdb-6.3/configure      # RIGHT
      /berman/migchain/source/gdb-6.3/gdb/configure  # WRONG
d71 1
a71 1
'gdb-6.3/gdb/configure', then you are configuring only the gdb
d109 1
a109 1
`gdb-6.3/gdb/doc/gdb.info', and it refers to subordinate files
d121 2
a122 2
source directory (`gdb-6.3', in the case of version 6.3), you can make
the Info file by typing:
d130 1
a130 1
distribution, in the directory `gdb-6.3/texinfo'.
d144 1
a144 1
`gdb-6.3/texinfo' directory.
d148 1
a148 1
the main source directory (for example, to `gdb-6.3/gdb') and then type:
d168 1
a168 5
a single directory, whose name is usually composed by appending the
version number to `gdb'.

   For example, the GDB version 6.3 distribution is in the `gdb-6.3'
directory.  That directory contains:
d170 1
a170 1
`gdb-6.3/{COPYING,COPYING.LIB}'
d173 1
a173 1
`gdb-6.3/bfd'
d176 1
a176 1
`gdb-6.3/config*'
d179 1
a179 1
`gdb-6.3/gdb'
d182 1
a182 1
`gdb-6.3/include'
d185 1
a185 1
`gdb-6.3/libiberty'
d188 1
a188 1
`gdb-6.3/opcodes'
d191 1
a191 1
`gdb-6.3/readline'
d196 1
a196 1
`gdb-6.3/sim'
d199 1
a199 1
`gdb-6.3/texinfo'
d203 1
a203 1
`gdb-6.3/etc'
d212 1
a212 2
from the `gdb-VERSION-NUMBER' source directory, which in this example
is the `gdb-6.3' directory.
d214 1
a214 1
   First switch to the `gdb-VERSION-NUMBER' source directory if you are
d219 1
a219 1
      cd gdb-6.3
d235 3
a237 14
directories for multiple libraries or programs, such as the `gdb-6.3'
source directory for version 6.3, `configure' creates configuration
files for every directory level underneath (unless you tell it not to,
with the `--norecursion' option).

   You can run the `configure' script from any of the subordinate
directories in the GDB distribution, if you only want to configure that
subdirectory; but be sure to specify a path to it.

   For example, with version 6.3, type the following to configure only
the `bfd' subdirectory:

      cd gdb-6.3/bfd
      ../configure
d265 1
a265 1
   For example, with version 6.3, you can build GDB in a separate
d268 1
a268 1
     cd gdb-6.3
d271 1
a271 1
     ../gdb-6.3/configure
d292 2
a293 2
as `gdb-6.3' (or in a separate configured directory configured with
`--srcdir=PATH/gdb-6.3'), you will build all the required libraries,
d335 1
a335 2
`config.sub' is also distributed in the GDB source directory
(`gdb-6.3', for version 6.3).
d551 2
a552 2
   When submitting a bug, please include the GDB version number (e.g.,
gdb-6.3), and how you configured it (e.g., "sun4" or "mach386 host,
d555 3
a557 3
this.  If at all possible, you should include the actual banner that
GDB prints when it starts up, or failing that, the actual configure
command that you used when configuring GDB.
d607 1
a607 1
  (1)	cd gdb-6.3
d612 1
a612 1
  (2)	cd gdb-6.3/gdb
d617 1
a617 1
  (3)	cd gdb-6.3/gdb/testsuite
@


1.45
log
@gdb
	* README: Mention parallel check.
gdb/testsuite
	* dg-extract-results.sh: New file.
	* Makefile.in (FORCE_PARALLEL): New variable.
	(CHECK_TARGET): New conditional variable.
	(check): Use CHECK_TARGET.
	(DO_RUNTEST): New variable.
	(check-single): New target.
	(TEST_DIRS): New variable.
	(TEST_TARGETS): Likewise.
	(check-parallel): New target.
	(check-gdb.%): New pattern.
	(BASE1_FILES): New variable.
	(BASE2_FILES): Likewise.
	(check-gdb.base%): New pattern.
	(%/.dir): New pattern.
	* configure: Rebuild.
	* aclocal.m4 (AM_CONDITIONAL): New defun.
	* configure.ac: Check whether user is using GNU make.
	(GMAKE): New conditional.
@
text
@d25 2
a26 2
over time--for example don't try to build gdb with a copy of bfd from
a release other than the gdb release (such as a binutils release),
d76 1
a76 1
   The gdb package contains several subdirectories, such as 'gdb',
d79 1
a79 1
subdirectory, not the whole gdb package.  This leads to build errors
d91 1
a91 1
C standard library.  The GDB remote server, gdbserver, builds with some
d548 1
a548 1
allows remote debugging for Unix applications.  gdbserver is only
d551 3
a553 3
The file gdb/gdbserver/README includes further notes on gdbserver; in
particular, it explains how to build gdbserver for cross-debugging
(where gdbserver runs on the target machine, which is of a different
@


1.45.6.1
log
@Update GDB version number in README and version.in
@
text
@d1 2
a2 2
		     README for gdb-7.0.90 release
		     Updated 19, February, 2010
d23 1
a23 1
underneath the gdb-7.0.90 directory.  The idea is that a variety of GNU
d32 2
a33 2
   When you unpack the gdb-7.0.90.tar.gz file, you'll find a directory
called `gdb-7.0.90', which contains:
d46 1
a46 1
      cd gdb-7.0.90
d60 1
a60 1
      <full path to your sources>/gdb-7.0.90/configure
d65 1
a65 1
different; see the file gdb-7.0.90/gdb/config/djgpp/README for details.)
d71 1
a71 1
   Make sure that your 'configure' line ends in 'gdb-7.0.90/configure':
d73 2
a74 2
      /berman/migchain/source/gdb-7.0.90/configure      # RIGHT
      /berman/migchain/source/gdb-7.0.90/gdb/configure  # WRONG
d78 1
a78 1
'gdb-7.0.90/gdb/configure', then you are configuring only the gdb
d116 1
a116 1
`gdb-7.0.90/gdb/doc/gdb.info', and it refers to subordinate files
d128 1
a128 1
source directory (`gdb-7.0.90', in the case of version 7.0.90), you can make
d137 1
a137 1
distribution, in the directory `gdb-7.0.90/texinfo'.
d151 1
a151 1
`gdb-7.0.90/texinfo' directory.
d155 1
a155 1
the main source directory (for example, to `gdb-7.0.90/gdb') and then type:
d178 1
a178 1
   For example, the GDB version 7.0.90 distribution is in the `gdb-7.0.90'
d181 1
a181 1
`gdb-7.0.90/{COPYING,COPYING.LIB}'
d184 1
a184 1
`gdb-7.0.90/bfd'
d187 1
a187 1
`gdb-7.0.90/config*'
d190 1
a190 1
`gdb-7.0.90/gdb'
d193 1
a193 1
`gdb-7.0.90/include'
d196 1
a196 1
`gdb-7.0.90/libiberty'
d199 1
a199 1
`gdb-7.0.90/opcodes'
d202 1
a202 1
`gdb-7.0.90/readline'
d207 1
a207 1
`gdb-7.0.90/sim'
d210 1
a210 1
`gdb-7.0.90/texinfo'
d214 1
a214 1
`gdb-7.0.90/etc'
d224 1
a224 1
is the `gdb-7.0.90' directory.
d231 1
a231 1
      cd gdb-7.0.90
d247 2
a248 2
directories for multiple libraries or programs, such as the `gdb-7.0.90'
source directory for version 7.0.90, `configure' creates configuration
d256 1
a256 1
   For example, with version 7.0.90, type the following to configure only
d259 1
a259 1
      cd gdb-7.0.90/bfd
d288 1
a288 1
   For example, with version 7.0.90, you can build GDB in a separate
d291 1
a291 1
     cd gdb-7.0.90
d294 1
a294 1
     ../gdb-7.0.90/configure
d315 2
a316 2
as `gdb-7.0.90' (or in a separate configured directory configured with
`--srcdir=PATH/gdb-7.0.90'), you will build all the required libraries,
d359 1
a359 1
(`gdb-7.0.90', for version 7.0.90).
d576 1
a576 1
gdb-7.0.90), and how you configured it (e.g., "sun4" or "mach386 host,
d631 1
a631 1
  (1)	cd gdb-7.0.90
d636 1
a636 1
  (2)	cd gdb-7.0.90/gdb
d641 1
a641 1
  (3)	cd gdb-7.0.90/gdb/testsuite
@


1.45.6.2
log
@Update GDB version number in README and version.in
@
text
@d1 2
a2 2
		     README for gdb-7.1 release
		     Updated 18, March, 2010
d23 1
a23 1
underneath the gdb-7.1 directory.  The idea is that a variety of GNU
d32 2
a33 2
   When you unpack the gdb-7.1.tar.gz file, you'll find a directory
called `gdb-7.1', which contains:
d46 1
a46 1
      cd gdb-7.1
d60 1
a60 1
      <full path to your sources>/gdb-7.1/configure
d65 1
a65 1
different; see the file gdb-7.1/gdb/config/djgpp/README for details.)
d71 1
a71 1
   Make sure that your 'configure' line ends in 'gdb-7.1/configure':
d73 2
a74 2
      /berman/migchain/source/gdb-7.1/configure      # RIGHT
      /berman/migchain/source/gdb-7.1/gdb/configure  # WRONG
d78 1
a78 1
'gdb-7.1/gdb/configure', then you are configuring only the gdb
d116 1
a116 1
`gdb-7.1/gdb/doc/gdb.info', and it refers to subordinate files
d128 1
a128 1
source directory (`gdb-7.1', in the case of version 7.1), you can make
d137 1
a137 1
distribution, in the directory `gdb-7.1/texinfo'.
d151 1
a151 1
`gdb-7.1/texinfo' directory.
d155 1
a155 1
the main source directory (for example, to `gdb-7.1/gdb') and then type:
d178 1
a178 1
   For example, the GDB version 7.1 distribution is in the `gdb-7.1'
d181 1
a181 1
`gdb-7.1/{COPYING,COPYING.LIB}'
d184 1
a184 1
`gdb-7.1/bfd'
d187 1
a187 1
`gdb-7.1/config*'
d190 1
a190 1
`gdb-7.1/gdb'
d193 1
a193 1
`gdb-7.1/include'
d196 1
a196 1
`gdb-7.1/libiberty'
d199 1
a199 1
`gdb-7.1/opcodes'
d202 1
a202 1
`gdb-7.1/readline'
d207 1
a207 1
`gdb-7.1/sim'
d210 1
a210 1
`gdb-7.1/texinfo'
d214 1
a214 1
`gdb-7.1/etc'
d224 1
a224 1
is the `gdb-7.1' directory.
d231 1
a231 1
      cd gdb-7.1
d247 2
a248 2
directories for multiple libraries or programs, such as the `gdb-7.1'
source directory for version 7.1, `configure' creates configuration
d256 1
a256 1
   For example, with version 7.1, type the following to configure only
d259 1
a259 1
      cd gdb-7.1/bfd
d288 1
a288 1
   For example, with version 7.1, you can build GDB in a separate
d291 1
a291 1
     cd gdb-7.1
d294 1
a294 1
     ../gdb-7.1/configure
d315 2
a316 2
as `gdb-7.1' (or in a separate configured directory configured with
`--srcdir=PATH/gdb-7.1'), you will build all the required libraries,
d359 1
a359 1
(`gdb-7.1', for version 7.1).
d576 1
a576 1
gdb-7.1), and how you configured it (e.g., "sun4" or "mach386 host,
d631 1
a631 1
  (1)	cd gdb-7.1
d636 1
a636 1
  (2)	cd gdb-7.1/gdb
d641 1
a641 1
  (3)	cd gdb-7.1/gdb/testsuite
@


1.45.4.1
log
@Update GDB version number in README and version.in
@
text
@d1 2
a2 2
		     README for gdb-6.8.91 release
		     Updated 16, September, 2009
d23 1
a23 1
underneath the gdb-6.8.91 directory.  The idea is that a variety of GNU
d32 2
a33 2
   When you unpack the gdb-6.8.91.tar.gz file, you'll find a directory
called `gdb-6.8.91', which contains:
d46 1
a46 1
      cd gdb-6.8.91
d60 1
a60 1
      <full path to your sources>/gdb-6.8.91/configure
d65 1
a65 1
different; see the file gdb-6.8.91/gdb/config/djgpp/README for details.)
d71 1
a71 1
   Make sure that your 'configure' line ends in 'gdb-6.8.91/configure':
d73 2
a74 2
      /berman/migchain/source/gdb-6.8.91/configure      # RIGHT
      /berman/migchain/source/gdb-6.8.91/gdb/configure  # WRONG
d78 1
a78 1
'gdb-6.8.91/gdb/configure', then you are configuring only the gdb
d116 1
a116 1
`gdb-6.8.91/gdb/doc/gdb.info', and it refers to subordinate files
d128 1
a128 1
source directory (`gdb-6.8.91', in the case of version 6.8.91), you can make
d137 1
a137 1
distribution, in the directory `gdb-6.8.91/texinfo'.
d151 1
a151 1
`gdb-6.8.91/texinfo' directory.
d155 1
a155 1
the main source directory (for example, to `gdb-6.8.91/gdb') and then type:
d178 1
a178 1
   For example, the GDB version 6.8.91 distribution is in the `gdb-6.8.91'
d181 1
a181 1
`gdb-6.8.91/{COPYING,COPYING.LIB}'
d184 1
a184 1
`gdb-6.8.91/bfd'
d187 1
a187 1
`gdb-6.8.91/config*'
d190 1
a190 1
`gdb-6.8.91/gdb'
d193 1
a193 1
`gdb-6.8.91/include'
d196 1
a196 1
`gdb-6.8.91/libiberty'
d199 1
a199 1
`gdb-6.8.91/opcodes'
d202 1
a202 1
`gdb-6.8.91/readline'
d207 1
a207 1
`gdb-6.8.91/sim'
d210 1
a210 1
`gdb-6.8.91/texinfo'
d214 1
a214 1
`gdb-6.8.91/etc'
d224 1
a224 1
is the `gdb-6.8.91' directory.
d231 1
a231 1
      cd gdb-6.8.91
d247 2
a248 2
directories for multiple libraries or programs, such as the `gdb-6.8.91'
source directory for version 6.8.91, `configure' creates configuration
d256 1
a256 1
   For example, with version 6.8.91, type the following to configure only
d259 1
a259 1
      cd gdb-6.8.91/bfd
d288 1
a288 1
   For example, with version 6.8.91, you can build GDB in a separate
d291 1
a291 1
     cd gdb-6.8.91
d294 1
a294 1
     ../gdb-6.8.91/configure
d315 2
a316 2
as `gdb-6.8.91' (or in a separate configured directory configured with
`--srcdir=PATH/gdb-6.8.91'), you will build all the required libraries,
d359 1
a359 1
(`gdb-6.8.91', for version 6.8.91).
d576 1
a576 1
gdb-6.8.91), and how you configured it (e.g., "sun4" or "mach386 host,
d631 1
a631 1
  (1)	cd gdb-6.8.91
d636 1
a636 1
  (2)	cd gdb-6.8.91/gdb
d641 1
a641 1
  (3)	cd gdb-6.8.91/gdb/testsuite
@


1.45.4.2
log
@Update GDB version number in README and version.in
@
text
@d1 2
a2 2
		     README for gdb-6.8.92 release
		     Updated 30, September, 2009
d23 1
a23 1
underneath the gdb-6.8.92 directory.  The idea is that a variety of GNU
d32 2
a33 2
   When you unpack the gdb-6.8.92.tar.gz file, you'll find a directory
called `gdb-6.8.92', which contains:
d46 1
a46 1
      cd gdb-6.8.92
d60 1
a60 1
      <full path to your sources>/gdb-6.8.92/configure
d65 1
a65 1
different; see the file gdb-6.8.92/gdb/config/djgpp/README for details.)
d71 1
a71 1
   Make sure that your 'configure' line ends in 'gdb-6.8.92/configure':
d73 2
a74 2
      /berman/migchain/source/gdb-6.8.92/configure      # RIGHT
      /berman/migchain/source/gdb-6.8.92/gdb/configure  # WRONG
d78 1
a78 1
'gdb-6.8.92/gdb/configure', then you are configuring only the gdb
d116 1
a116 1
`gdb-6.8.92/gdb/doc/gdb.info', and it refers to subordinate files
d128 1
a128 1
source directory (`gdb-6.8.92', in the case of version 6.8.92), you can make
d137 1
a137 1
distribution, in the directory `gdb-6.8.92/texinfo'.
d151 1
a151 1
`gdb-6.8.92/texinfo' directory.
d155 1
a155 1
the main source directory (for example, to `gdb-6.8.92/gdb') and then type:
d178 1
a178 1
   For example, the GDB version 6.8.92 distribution is in the `gdb-6.8.92'
d181 1
a181 1
`gdb-6.8.92/{COPYING,COPYING.LIB}'
d184 1
a184 1
`gdb-6.8.92/bfd'
d187 1
a187 1
`gdb-6.8.92/config*'
d190 1
a190 1
`gdb-6.8.92/gdb'
d193 1
a193 1
`gdb-6.8.92/include'
d196 1
a196 1
`gdb-6.8.92/libiberty'
d199 1
a199 1
`gdb-6.8.92/opcodes'
d202 1
a202 1
`gdb-6.8.92/readline'
d207 1
a207 1
`gdb-6.8.92/sim'
d210 1
a210 1
`gdb-6.8.92/texinfo'
d214 1
a214 1
`gdb-6.8.92/etc'
d224 1
a224 1
is the `gdb-6.8.92' directory.
d231 1
a231 1
      cd gdb-6.8.92
d247 2
a248 2
directories for multiple libraries or programs, such as the `gdb-6.8.92'
source directory for version 6.8.92, `configure' creates configuration
d256 1
a256 1
   For example, with version 6.8.92, type the following to configure only
d259 1
a259 1
      cd gdb-6.8.92/bfd
d288 1
a288 1
   For example, with version 6.8.92, you can build GDB in a separate
d291 1
a291 1
     cd gdb-6.8.92
d294 1
a294 1
     ../gdb-6.8.92/configure
d315 2
a316 2
as `gdb-6.8.92' (or in a separate configured directory configured with
`--srcdir=PATH/gdb-6.8.92'), you will build all the required libraries,
d359 1
a359 1
(`gdb-6.8.92', for version 6.8.92).
d576 1
a576 1
gdb-6.8.92), and how you configured it (e.g., "sun4" or "mach386 host,
d631 1
a631 1
  (1)	cd gdb-6.8.92
d636 1
a636 1
  (2)	cd gdb-6.8.92/gdb
d641 1
a641 1
  (3)	cd gdb-6.8.92/gdb/testsuite
@


1.45.4.3
log
@Update GDB version number in README and version.in
@
text
@d1 2
a2 2
		     README for gdb-7.0 release
		     Updated 06, October, 2009
d23 1
a23 1
underneath the gdb-7.0 directory.  The idea is that a variety of GNU
d32 2
a33 2
   When you unpack the gdb-7.0.tar.gz file, you'll find a directory
called `gdb-7.0', which contains:
d46 1
a46 1
      cd gdb-7.0
d60 1
a60 1
      <full path to your sources>/gdb-7.0/configure
d65 1
a65 1
different; see the file gdb-7.0/gdb/config/djgpp/README for details.)
d71 1
a71 1
   Make sure that your 'configure' line ends in 'gdb-7.0/configure':
d73 2
a74 2
      /berman/migchain/source/gdb-7.0/configure      # RIGHT
      /berman/migchain/source/gdb-7.0/gdb/configure  # WRONG
d78 1
a78 1
'gdb-7.0/gdb/configure', then you are configuring only the gdb
d116 1
a116 1
`gdb-7.0/gdb/doc/gdb.info', and it refers to subordinate files
d128 1
a128 1
source directory (`gdb-7.0', in the case of version 7.0), you can make
d137 1
a137 1
distribution, in the directory `gdb-7.0/texinfo'.
d151 1
a151 1
`gdb-7.0/texinfo' directory.
d155 1
a155 1
the main source directory (for example, to `gdb-7.0/gdb') and then type:
d178 1
a178 1
   For example, the GDB version 7.0 distribution is in the `gdb-7.0'
d181 1
a181 1
`gdb-7.0/{COPYING,COPYING.LIB}'
d184 1
a184 1
`gdb-7.0/bfd'
d187 1
a187 1
`gdb-7.0/config*'
d190 1
a190 1
`gdb-7.0/gdb'
d193 1
a193 1
`gdb-7.0/include'
d196 1
a196 1
`gdb-7.0/libiberty'
d199 1
a199 1
`gdb-7.0/opcodes'
d202 1
a202 1
`gdb-7.0/readline'
d207 1
a207 1
`gdb-7.0/sim'
d210 1
a210 1
`gdb-7.0/texinfo'
d214 1
a214 1
`gdb-7.0/etc'
d224 1
a224 1
is the `gdb-7.0' directory.
d231 1
a231 1
      cd gdb-7.0
d247 2
a248 2
directories for multiple libraries or programs, such as the `gdb-7.0'
source directory for version 7.0, `configure' creates configuration
d256 1
a256 1
   For example, with version 7.0, type the following to configure only
d259 1
a259 1
      cd gdb-7.0/bfd
d288 1
a288 1
   For example, with version 7.0, you can build GDB in a separate
d291 1
a291 1
     cd gdb-7.0
d294 1
a294 1
     ../gdb-7.0/configure
d315 2
a316 2
as `gdb-7.0' (or in a separate configured directory configured with
`--srcdir=PATH/gdb-7.0'), you will build all the required libraries,
d359 1
a359 1
(`gdb-7.0', for version 7.0).
d576 1
a576 1
gdb-7.0), and how you configured it (e.g., "sun4" or "mach386 host,
d631 1
a631 1
  (1)	cd gdb-7.0
d636 1
a636 1
  (2)	cd gdb-7.0/gdb
d641 1
a641 1
  (3)	cd gdb-7.0/gdb/testsuite
@


1.45.4.4
log
@Update GDB version number in README and version.in
@
text
@d1 2
a2 2
		     README for gdb-7.0.1 release
		     Updated 22, December, 2009
d23 1
a23 1
underneath the gdb-7.0.1 directory.  The idea is that a variety of GNU
d32 2
a33 2
   When you unpack the gdb-7.0.1.tar.gz file, you'll find a directory
called `gdb-7.0.1', which contains:
d46 1
a46 1
      cd gdb-7.0.1
d60 1
a60 1
      <full path to your sources>/gdb-7.0.1/configure
d65 1
a65 1
different; see the file gdb-7.0.1/gdb/config/djgpp/README for details.)
d71 1
a71 1
   Make sure that your 'configure' line ends in 'gdb-7.0.1/configure':
d73 2
a74 2
      /berman/migchain/source/gdb-7.0.1/configure      # RIGHT
      /berman/migchain/source/gdb-7.0.1/gdb/configure  # WRONG
d78 1
a78 1
'gdb-7.0.1/gdb/configure', then you are configuring only the gdb
d116 1
a116 1
`gdb-7.0.1/gdb/doc/gdb.info', and it refers to subordinate files
d128 1
a128 1
source directory (`gdb-7.0.1', in the case of version 7.0.1), you can make
d137 1
a137 1
distribution, in the directory `gdb-7.0.1/texinfo'.
d151 1
a151 1
`gdb-7.0.1/texinfo' directory.
d155 1
a155 1
the main source directory (for example, to `gdb-7.0.1/gdb') and then type:
d178 1
a178 1
   For example, the GDB version 7.0.1 distribution is in the `gdb-7.0.1'
d181 1
a181 1
`gdb-7.0.1/{COPYING,COPYING.LIB}'
d184 1
a184 1
`gdb-7.0.1/bfd'
d187 1
a187 1
`gdb-7.0.1/config*'
d190 1
a190 1
`gdb-7.0.1/gdb'
d193 1
a193 1
`gdb-7.0.1/include'
d196 1
a196 1
`gdb-7.0.1/libiberty'
d199 1
a199 1
`gdb-7.0.1/opcodes'
d202 1
a202 1
`gdb-7.0.1/readline'
d207 1
a207 1
`gdb-7.0.1/sim'
d210 1
a210 1
`gdb-7.0.1/texinfo'
d214 1
a214 1
`gdb-7.0.1/etc'
d224 1
a224 1
is the `gdb-7.0.1' directory.
d231 1
a231 1
      cd gdb-7.0.1
d247 2
a248 2
directories for multiple libraries or programs, such as the `gdb-7.0.1'
source directory for version 7.0.1, `configure' creates configuration
d256 1
a256 1
   For example, with version 7.0.1, type the following to configure only
d259 1
a259 1
      cd gdb-7.0.1/bfd
d288 1
a288 1
   For example, with version 7.0.1, you can build GDB in a separate
d291 1
a291 1
     cd gdb-7.0.1
d294 1
a294 1
     ../gdb-7.0.1/configure
d315 2
a316 2
as `gdb-7.0.1' (or in a separate configured directory configured with
`--srcdir=PATH/gdb-7.0.1'), you will build all the required libraries,
d359 1
a359 1
(`gdb-7.0.1', for version 7.0.1).
d576 1
a576 1
gdb-7.0.1), and how you configured it (e.g., "sun4" or "mach386 host,
d631 1
a631 1
  (1)	cd gdb-7.0.1
d636 1
a636 1
  (2)	cd gdb-7.0.1/gdb
d641 1
a641 1
  (3)	cd gdb-7.0.1/gdb/testsuite
@


1.44
log
@
	* README (`configure' options): Document GDB-specific options to
	`configure'.
@
text
@d645 14
@


1.43
log
@gdb
2009-04-23  Sergio Durigan Junior <sergiodj@@linux.vnet.ibm.com>
	    Tom Tromey  <tromey@@redhat.com>

	* configure, config.in: Regenerate.
	* configure.ac: Support for relocatable GDB datadir.  Use
	GDB_AC_WITH_DIR.  Always define TARGET_SYSTEM_ROOT_RELOCATABLE.
	* acinclude.m4 (GDB_AC_WITH_DIR): New defun.
	* top.c (init_main): Add "set data-directory".
	* defs.h (gdb_datadir): Declare.
	* main.c (gdb_datadir): New global.
	(captured_main): Initialize gdb_datadir.  Use relocate_directory.
	(relocate_path): New function.
	(relocate_directory): Likewise.
	(get_init_files): Use relocate_path.
	(README): Mention --with-gdb-datadir.
gdb/doc
2009-04-23  Tom Tromey  <tromey@@redhat.com>

	* gdb.texinfo (Data Files): New node.
	(GDB Files): Update menu.
@
text
@d401 10
d431 5
a443 10
`--host=HOST'
     Configure GDB to run on the specified HOST.

     There is no convenient way to generate a list of all available
     hosts.

`HOST ...'
     Same as `--host=HOST'.  If you omit this, GDB will guess; it's
     quite accurate.

d449 85
@


1.42
log
@* README: Mention gdbserver/README.
@
text
@d439 5
@


1.42.2.1
log
@Update GDB version number in README file.
@
text
@d1 2
a2 2
		     README for gdb-6.7.90 release
		     Updated 13, March, 2008
d23 1
a23 1
underneath the gdb-6.7.90 directory.  The idea is that a variety of GNU
d32 2
a33 2
   When you unpack the gdb-6.7.90.tar.gz file, you'll find a directory
called `gdb-6.7.90', which contains:
d46 1
a46 1
      cd gdb-6.7.90
d60 1
a60 1
      <full path to your sources>/gdb-6.7.90/configure
d65 1
a65 1
different; see the file gdb-6.7.90/gdb/config/djgpp/README for details.)
d71 1
a71 1
   Make sure that your 'configure' line ends in 'gdb-6.7.90/configure':
d73 2
a74 2
      /berman/migchain/source/gdb-6.7.90/configure      # RIGHT
      /berman/migchain/source/gdb-6.7.90/gdb/configure  # WRONG
d78 1
a78 1
'gdb-6.7.90/gdb/configure', then you are configuring only the gdb
d116 1
a116 1
`gdb-6.7.90/gdb/doc/gdb.info', and it refers to subordinate files
d128 1
a128 1
source directory (`gdb-6.7.90', in the case of version 6.7.90), you can make
d137 1
a137 1
distribution, in the directory `gdb-6.7.90/texinfo'.
d151 1
a151 1
`gdb-6.7.90/texinfo' directory.
d155 1
a155 1
the main source directory (for example, to `gdb-6.7.90/gdb') and then type:
d178 1
a178 1
   For example, the GDB version 6.7.90 distribution is in the `gdb-6.7.90'
d181 1
a181 1
`gdb-6.7.90/{COPYING,COPYING.LIB}'
d184 1
a184 1
`gdb-6.7.90/bfd'
d187 1
a187 1
`gdb-6.7.90/config*'
d190 1
a190 1
`gdb-6.7.90/gdb'
d193 1
a193 1
`gdb-6.7.90/include'
d196 1
a196 1
`gdb-6.7.90/libiberty'
d199 1
a199 1
`gdb-6.7.90/opcodes'
d202 1
a202 1
`gdb-6.7.90/readline'
d207 1
a207 1
`gdb-6.7.90/sim'
d210 1
a210 1
`gdb-6.7.90/texinfo'
d214 1
a214 1
`gdb-6.7.90/etc'
d224 1
a224 1
is the `gdb-6.7.90' directory.
d231 1
a231 1
      cd gdb-6.7.90
d247 2
a248 2
directories for multiple libraries or programs, such as the `gdb-6.7.90'
source directory for version 6.7.90, `configure' creates configuration
d256 1
a256 1
   For example, with version 6.7.90, type the following to configure only
d259 1
a259 1
      cd gdb-6.7.90/bfd
d288 1
a288 1
   For example, with version 6.7.90, you can build GDB in a separate
d291 1
a291 1
     cd gdb-6.7.90
d294 1
a294 1
     ../gdb-6.7.90/configure
d315 2
a316 2
as `gdb-6.7.90' (or in a separate configured directory configured with
`--srcdir=PATH/gdb-6.7.90'), you will build all the required libraries,
d359 1
a359 1
(`gdb-6.7.90', for version 6.7.90).
d481 1
a481 1
gdb-6.7.90), and how you configured it (e.g., "sun4" or "mach386 host,
d536 1
a536 1
  (1)	cd gdb-6.7.90
d541 1
a541 1
  (2)	cd gdb-6.7.90/gdb
d546 1
a546 1
  (3)	cd gdb-6.7.90/gdb/testsuite
@


1.42.2.2
log
@Update GDB version number in README and version.in
@
text
@d1 2
a2 2
		     README for gdb-6.8 release
		     Updated 27, March, 2008
d23 1
a23 1
underneath the gdb-6.8 directory.  The idea is that a variety of GNU
d32 2
a33 2
   When you unpack the gdb-6.8.tar.gz file, you'll find a directory
called `gdb-6.8', which contains:
d46 1
a46 1
      cd gdb-6.8
d60 1
a60 1
      <full path to your sources>/gdb-6.8/configure
d65 1
a65 1
different; see the file gdb-6.8/gdb/config/djgpp/README for details.)
d71 1
a71 1
   Make sure that your 'configure' line ends in 'gdb-6.8/configure':
d73 2
a74 2
      /berman/migchain/source/gdb-6.8/configure      # RIGHT
      /berman/migchain/source/gdb-6.8/gdb/configure  # WRONG
d78 1
a78 1
'gdb-6.8/gdb/configure', then you are configuring only the gdb
d116 1
a116 1
`gdb-6.8/gdb/doc/gdb.info', and it refers to subordinate files
d128 1
a128 1
source directory (`gdb-6.8', in the case of version 6.8), you can make
d137 1
a137 1
distribution, in the directory `gdb-6.8/texinfo'.
d151 1
a151 1
`gdb-6.8/texinfo' directory.
d155 1
a155 1
the main source directory (for example, to `gdb-6.8/gdb') and then type:
d178 1
a178 1
   For example, the GDB version 6.8 distribution is in the `gdb-6.8'
d181 1
a181 1
`gdb-6.8/{COPYING,COPYING.LIB}'
d184 1
a184 1
`gdb-6.8/bfd'
d187 1
a187 1
`gdb-6.8/config*'
d190 1
a190 1
`gdb-6.8/gdb'
d193 1
a193 1
`gdb-6.8/include'
d196 1
a196 1
`gdb-6.8/libiberty'
d199 1
a199 1
`gdb-6.8/opcodes'
d202 1
a202 1
`gdb-6.8/readline'
d207 1
a207 1
`gdb-6.8/sim'
d210 1
a210 1
`gdb-6.8/texinfo'
d214 1
a214 1
`gdb-6.8/etc'
d224 1
a224 1
is the `gdb-6.8' directory.
d231 1
a231 1
      cd gdb-6.8
d247 2
a248 2
directories for multiple libraries or programs, such as the `gdb-6.8'
source directory for version 6.8, `configure' creates configuration
d256 1
a256 1
   For example, with version 6.8, type the following to configure only
d259 1
a259 1
      cd gdb-6.8/bfd
d288 1
a288 1
   For example, with version 6.8, you can build GDB in a separate
d291 1
a291 1
     cd gdb-6.8
d294 1
a294 1
     ../gdb-6.8/configure
d315 2
a316 2
as `gdb-6.8' (or in a separate configured directory configured with
`--srcdir=PATH/gdb-6.8'), you will build all the required libraries,
d359 1
a359 1
(`gdb-6.8', for version 6.8).
d481 1
a481 1
gdb-6.8), and how you configured it (e.g., "sun4" or "mach386 host,
d536 1
a536 1
  (1)	cd gdb-6.8
d541 1
a541 1
  (2)	cd gdb-6.8/gdb
d546 1
a546 1
  (3)	cd gdb-6.8/gdb/testsuite
@


1.41
log
@	* mips-mdebug-tdep.c, mips-mdebug-tdep.h, ocd.c, ocd.h, ppc-bdm.c,
	remote-e7000.c, remote-hms.c, remote-utils.c, remote-utils.h,
	scm-exp.c, scm-lang.c, scm-lang.h, scm-tags.h, scm-valprint.c,
	ser-e7kpc.c, sh3-rom.c, stop-gdb.c: Delete.
	* Makefile.in: Remove references to deleted files.
	* README: Do not mention deleted ROM monitor interfaces.
	* defs.h (enum language): Delete language_scm.
	* expprint.c (print_subexp_standard): Do not handle OP_EXPRSTRING.
	(dump_subexp_body_standard): Likewise.
	* parse.c (operator_length_standard): Likewise.
	* expression.h (enum exp_opcode): Delete OP_EXPRSTRING.
	* remote-mips.c: Do not include remote-utils.h.
	* remote-sim.c: Likewise.  Use remote_debug instead of sr_get_debug
	throughout.
	* value.c: Do not include scm-lang.h.
	(unpack_long): Delete scm_unpack call.
	* config/h8300/h8300.mt, config/mips/embed.mt,
	config/powerpc/ppc-eabi.mt, config/powerpc/ppc-sim.mt,
	config/sh/embed.mt, config/sh/linux.mt: Remove references to
	deleted files.
	* NEWS: Mention removed files.

	* gdb.texinfo (Memory): Reference Remote Debugging chapter.
	(Character Sets, Caching Data of Remote Targets): Likewise.
	(Targets): Delete Remote node.  Move its text...
	(Debugging Remote Programs): ...to here.  Delete description
	of the "remote" command.
	(Remote configuration): Delete description of "set remotedevice"
	and "show remotedevice".
	(Embedded Processors): Delete H8/300, H8/500, and SH nodes.
@
text
@d456 4
@


1.41.2.1
log
@Update GDB version number in README file.
@
text
@d1 2
a2 2
		     README for gdb-6.6.90 release
		     Updated 19, September, 2007
d23 1
a23 1
underneath the gdb-6.6.90 directory.  The idea is that a variety of GNU
d32 2
a33 2
   When you unpack the gdb-6.6.90.tar.gz file, you'll find a directory
called `gdb-6.6.90', which contains:
d46 1
a46 1
      cd gdb-6.6.90
d60 1
a60 1
      <full path to your sources>/gdb-6.6.90/configure
d65 1
a65 1
different; see the file gdb-6.6.90/gdb/config/djgpp/README for details.)
d71 1
a71 1
   Make sure that your 'configure' line ends in 'gdb-6.6.90/configure':
d73 2
a74 2
      /berman/migchain/source/gdb-6.6.90/configure      # RIGHT
      /berman/migchain/source/gdb-6.6.90/gdb/configure  # WRONG
d78 1
a78 1
'gdb-6.6.90/gdb/configure', then you are configuring only the gdb
d116 1
a116 1
`gdb-6.6.90/gdb/doc/gdb.info', and it refers to subordinate files
d128 1
a128 1
source directory (`gdb-6.6.90', in the case of version 6.6.90), you can make
d137 1
a137 1
distribution, in the directory `gdb-6.6.90/texinfo'.
d151 1
a151 1
`gdb-6.6.90/texinfo' directory.
d155 1
a155 1
the main source directory (for example, to `gdb-6.6.90/gdb') and then type:
d178 1
a178 1
   For example, the GDB version 6.6.90 distribution is in the `gdb-6.6.90'
d181 1
a181 1
`gdb-6.6.90/{COPYING,COPYING.LIB}'
d184 1
a184 1
`gdb-6.6.90/bfd'
d187 1
a187 1
`gdb-6.6.90/config*'
d190 1
a190 1
`gdb-6.6.90/gdb'
d193 1
a193 1
`gdb-6.6.90/include'
d196 1
a196 1
`gdb-6.6.90/libiberty'
d199 1
a199 1
`gdb-6.6.90/opcodes'
d202 1
a202 1
`gdb-6.6.90/readline'
d207 1
a207 1
`gdb-6.6.90/sim'
d210 1
a210 1
`gdb-6.6.90/texinfo'
d214 1
a214 1
`gdb-6.6.90/etc'
d224 1
a224 1
is the `gdb-6.6.90' directory.
d231 1
a231 1
      cd gdb-6.6.90
d247 2
a248 2
directories for multiple libraries or programs, such as the `gdb-6.6.90'
source directory for version 6.6.90, `configure' creates configuration
d256 1
a256 1
   For example, with version 6.6.90, type the following to configure only
d259 1
a259 1
      cd gdb-6.6.90/bfd
d288 1
a288 1
   For example, with version 6.6.90, you can build GDB in a separate
d291 1
a291 1
     cd gdb-6.6.90
d294 1
a294 1
     ../gdb-6.6.90/configure
d315 2
a316 2
as `gdb-6.6.90' (or in a separate configured directory configured with
`--srcdir=PATH/gdb-6.6.90'), you will build all the required libraries,
d359 1
a359 1
(`gdb-6.6.90', for version 6.6.90).
d477 1
a477 1
gdb-6.6.90), and how you configured it (e.g., "sun4" or "mach386 host,
d532 1
a532 1
  (1)	cd gdb-6.6.90
d537 1
a537 1
  (2)	cd gdb-6.6.90/gdb
d542 1
a542 1
  (3)	cd gdb-6.6.90/gdb/testsuite
@


1.41.2.2
log
@Update GDB version number in README file.
@
text
@d1 2
a2 2
		     README for gdb-6.7 release
		     Updated 10, October, 2007
d23 1
a23 1
underneath the gdb-6.7 directory.  The idea is that a variety of GNU
d32 2
a33 2
   When you unpack the gdb-6.7.tar.gz file, you'll find a directory
called `gdb-6.7', which contains:
d46 1
a46 1
      cd gdb-6.7
d60 1
a60 1
      <full path to your sources>/gdb-6.7/configure
d65 1
a65 1
different; see the file gdb-6.7/gdb/config/djgpp/README for details.)
d71 1
a71 1
   Make sure that your 'configure' line ends in 'gdb-6.7/configure':
d73 2
a74 2
      /berman/migchain/source/gdb-6.7/configure      # RIGHT
      /berman/migchain/source/gdb-6.7/gdb/configure  # WRONG
d78 1
a78 1
'gdb-6.7/gdb/configure', then you are configuring only the gdb
d116 1
a116 1
`gdb-6.7/gdb/doc/gdb.info', and it refers to subordinate files
d128 1
a128 1
source directory (`gdb-6.7', in the case of version 6.7), you can make
d137 1
a137 1
distribution, in the directory `gdb-6.7/texinfo'.
d151 1
a151 1
`gdb-6.7/texinfo' directory.
d155 1
a155 1
the main source directory (for example, to `gdb-6.7/gdb') and then type:
d178 1
a178 1
   For example, the GDB version 6.7 distribution is in the `gdb-6.7'
d181 1
a181 1
`gdb-6.7/{COPYING,COPYING.LIB}'
d184 1
a184 1
`gdb-6.7/bfd'
d187 1
a187 1
`gdb-6.7/config*'
d190 1
a190 1
`gdb-6.7/gdb'
d193 1
a193 1
`gdb-6.7/include'
d196 1
a196 1
`gdb-6.7/libiberty'
d199 1
a199 1
`gdb-6.7/opcodes'
d202 1
a202 1
`gdb-6.7/readline'
d207 1
a207 1
`gdb-6.7/sim'
d210 1
a210 1
`gdb-6.7/texinfo'
d214 1
a214 1
`gdb-6.7/etc'
d224 1
a224 1
is the `gdb-6.7' directory.
d231 1
a231 1
      cd gdb-6.7
d247 2
a248 2
directories for multiple libraries or programs, such as the `gdb-6.7'
source directory for version 6.7, `configure' creates configuration
d256 1
a256 1
   For example, with version 6.7, type the following to configure only
d259 1
a259 1
      cd gdb-6.7/bfd
d288 1
a288 1
   For example, with version 6.7, you can build GDB in a separate
d291 1
a291 1
     cd gdb-6.7
d294 1
a294 1
     ../gdb-6.7/configure
d315 2
a316 2
as `gdb-6.7' (or in a separate configured directory configured with
`--srcdir=PATH/gdb-6.7'), you will build all the required libraries,
d359 1
a359 1
(`gdb-6.7', for version 6.7).
d477 1
a477 1
gdb-6.7), and how you configured it (e.g., "sun4" or "mach386 host,
d532 1
a532 1
  (1)	cd gdb-6.7
d537 1
a537 1
  (2)	cd gdb-6.7/gdb
d542 1
a542 1
  (3)	cd gdb-6.7/gdb/testsuite
@


1.41.2.3
log
@Update GDB version number in README file.
@
text
@d1 2
a2 2
		     README for gdb-6.7.1 release
		     Updated 29, October, 2007
d23 1
a23 1
underneath the gdb-6.7.1 directory.  The idea is that a variety of GNU
d32 2
a33 2
   When you unpack the gdb-6.7.1.tar.gz file, you'll find a directory
called `gdb-6.7.1', which contains:
d46 1
a46 1
      cd gdb-6.7.1
d60 1
a60 1
      <full path to your sources>/gdb-6.7.1/configure
d65 1
a65 1
different; see the file gdb-6.7.1/gdb/config/djgpp/README for details.)
d71 1
a71 1
   Make sure that your 'configure' line ends in 'gdb-6.7.1/configure':
d73 2
a74 2
      /berman/migchain/source/gdb-6.7.1/configure      # RIGHT
      /berman/migchain/source/gdb-6.7.1/gdb/configure  # WRONG
d78 1
a78 1
'gdb-6.7.1/gdb/configure', then you are configuring only the gdb
d116 1
a116 1
`gdb-6.7.1/gdb/doc/gdb.info', and it refers to subordinate files
d128 1
a128 1
source directory (`gdb-6.7.1', in the case of version 6.7.1), you can make
d137 1
a137 1
distribution, in the directory `gdb-6.7.1/texinfo'.
d151 1
a151 1
`gdb-6.7.1/texinfo' directory.
d155 1
a155 1
the main source directory (for example, to `gdb-6.7.1/gdb') and then type:
d178 1
a178 1
   For example, the GDB version 6.7.1 distribution is in the `gdb-6.7.1'
d181 1
a181 1
`gdb-6.7.1/{COPYING,COPYING.LIB}'
d184 1
a184 1
`gdb-6.7.1/bfd'
d187 1
a187 1
`gdb-6.7.1/config*'
d190 1
a190 1
`gdb-6.7.1/gdb'
d193 1
a193 1
`gdb-6.7.1/include'
d196 1
a196 1
`gdb-6.7.1/libiberty'
d199 1
a199 1
`gdb-6.7.1/opcodes'
d202 1
a202 1
`gdb-6.7.1/readline'
d207 1
a207 1
`gdb-6.7.1/sim'
d210 1
a210 1
`gdb-6.7.1/texinfo'
d214 1
a214 1
`gdb-6.7.1/etc'
d224 1
a224 1
is the `gdb-6.7.1' directory.
d231 1
a231 1
      cd gdb-6.7.1
d247 2
a248 2
directories for multiple libraries or programs, such as the `gdb-6.7.1'
source directory for version 6.7.1, `configure' creates configuration
d256 1
a256 1
   For example, with version 6.7.1, type the following to configure only
d259 1
a259 1
      cd gdb-6.7.1/bfd
d288 1
a288 1
   For example, with version 6.7.1, you can build GDB in a separate
d291 1
a291 1
     cd gdb-6.7.1
d294 1
a294 1
     ../gdb-6.7.1/configure
d315 2
a316 2
as `gdb-6.7.1' (or in a separate configured directory configured with
`--srcdir=PATH/gdb-6.7.1'), you will build all the required libraries,
d359 1
a359 1
(`gdb-6.7.1', for version 6.7.1).
d477 1
a477 1
gdb-6.7.1), and how you configured it (e.g., "sun4" or "mach386 host,
d532 1
a532 1
  (1)	cd gdb-6.7.1
d537 1
a537 1
  (2)	cd gdb-6.7.1/gdb
d542 1
a542 1
  (3)	cd gdb-6.7.1/gdb/testsuite
@


1.40
log
@	* README: Mention ISO C library requirement.
@
text
@a459 3
	remote-e7000.c	 Renesas E7000 ICE
	remote-est.c	 EST emulator
	remote-hms.c	 Renesas Micro Systems H8/300 monitor
@


1.39
log
@	* Makefile.in (SFILES): Remove nlmread.c.
	(COMMON_OBS): Remove nlmread.o.
	(nlmread.o): Delete rule.
	* README: Delete reference to remote-st.c.
	* acinclude.m4 (CY_AC_TCL_LYNX_POSIX): Delete.
	* defs.h (enum gdb_osabi): Delete GDB_OSABI_NETWARE and
	GDB_OSABI_LYNXOS.
	* i386-tdep.c (i386_nw_init_abi, i386_nlm_osabi_sniffer): Delete.
	(_initialize_i386_tdep): Do not reference them.
	* nlmread.c: Delete file.
	* osabi.c (gdb_osabi_names): Remove NetWare and LynxOS.
	* target.c: Doc update.
	* thread.c: Delete commented include.
	* config/alpha/tm-alpha.h: Doc update.

	* gdb.texinfo (Startup): Delete references to some alternate
	names for .gdbinit.
	(Thread): Remove LynxOS reference.
	(Tandem ST2000): Delete target-specific documentation.
	* gdbint.texinfo (Symbol Handling): Remove mention of NLM.
	(Target Architecture Definition): Remove mention of GDB_OSABI_NETWARE
	and GDB_OSABI_LYNXOS.

	* config/netware.exp: Delete file.
@
text
@d90 3
a92 1
directory `ftp://ftp.gnu.org/pub/gnu/gcc'.
@


1.38
log
@        * README: Remove obsolete information.
@
text
@a463 1
	remote-st.c	 Tandem ST-2000 monitor
@


1.37
log
@gdb/
	* configure.ac: Check for expat.
	* acinclude.m4: Include AC_LIB_HAVE_LINKFLAGS dependencies.
	* Makefile.in (LIBEXPAT): New.
	(CLIBS): Include $(LIBEXPAT).
	* README: Mention expat.
	* configure, config.in: Regenerated.
gdb/doc/
	* gdb.texinfo (Installing GDB): Update menu.  Move text to...
	(Running Configure): ...here.
	(Requirements): New node.  Mention expat.
@
text
@d2 1
a2 1
		Updated 8, November, 2004 by Andrew Cagney
a464 6
	remote-vx.c	 VxWorks realtime kernel

   Remote-vx.c and the vx-share subdirectory contain a remote
interface for the VxWorks realtime kernel, which communicates over TCP
using the Sun RPC library.  This would be a useful starting point for
other remote- via-ethernet back ends.
@


1.37.2.1
log
@        * README: Update GDB version number to 6.6.
@
text
@d1 1
a1 1
		     README for gdb-6.6 release
d23 1
a23 1
underneath the gdb-6.6 directory.  The idea is that a variety of GNU
d32 2
a33 2
   When you unpack the gdb-6.6.tar.gz file, you'll find a directory
called `gdb-6.6', which contains:
d46 1
a46 1
      cd gdb-6.6
d60 1
a60 1
      <full path to your sources>/gdb-6.6/configure
d65 1
a65 1
different; see the file gdb-6.6/gdb/config/djgpp/README for details.)
d71 1
a71 1
   Make sure that your 'configure' line ends in 'gdb-6.6/configure':
d73 2
a74 2
      /berman/migchain/source/gdb-6.6/configure      # RIGHT
      /berman/migchain/source/gdb-6.6/gdb/configure  # WRONG
d78 1
a78 1
'gdb-6.6/gdb/configure', then you are configuring only the gdb
d114 1
a114 1
`gdb-6.6/gdb/doc/gdb.info', and it refers to subordinate files
d126 1
a126 1
source directory (`gdb-6.6', in the case of version 6.6), you can make
d135 1
a135 1
distribution, in the directory `gdb-6.6/texinfo'.
d149 1
a149 1
`gdb-6.6/texinfo' directory.
d153 1
a153 1
the main source directory (for example, to `gdb-6.6/gdb') and then type:
d176 1
a176 1
   For example, the GDB version 6.6 distribution is in the `gdb-6.6'
d179 1
a179 1
`gdb-6.6/{COPYING,COPYING.LIB}'
d182 1
a182 1
`gdb-6.6/bfd'
d185 1
a185 1
`gdb-6.6/config*'
d188 1
a188 1
`gdb-6.6/gdb'
d191 1
a191 1
`gdb-6.6/include'
d194 1
a194 1
`gdb-6.6/libiberty'
d197 1
a197 1
`gdb-6.6/opcodes'
d200 1
a200 1
`gdb-6.6/readline'
d205 1
a205 1
`gdb-6.6/sim'
d208 1
a208 1
`gdb-6.6/texinfo'
d212 1
a212 1
`gdb-6.6/etc'
d222 1
a222 1
is the `gdb-6.6' directory.
d229 1
a229 1
      cd gdb-6.6
d245 2
a246 2
directories for multiple libraries or programs, such as the `gdb-6.6'
source directory for version 6.6, `configure' creates configuration
d254 1
a254 1
   For example, with version 6.6, type the following to configure only
d257 1
a257 1
      cd gdb-6.6/bfd
d286 1
a286 1
   For example, with version 6.6, you can build GDB in a separate
d289 1
a289 1
     cd gdb-6.6
d292 1
a292 1
     ../gdb-6.6/configure
d313 2
a314 2
as `gdb-6.6' (or in a separate configured directory configured with
`--srcdir=PATH/gdb-6.6'), you will build all the required libraries,
d357 1
a357 1
(`gdb-6.6', for version 6.6).
d485 1
a485 1
gdb-6.6), and how you configured it (e.g., "sun4" or "mach386 host,
d540 1
a540 1
  (1)	cd gdb-6.6
d545 1
a545 1
  (2)	cd gdb-6.6/gdb
d550 1
a550 1
  (3)	cd gdb-6.6/gdb/testsuite
@


1.37.2.2
log
@        * README: Remove obsolete information.
@
text
@d2 1
a2 1
		     Updated 20, November, 2006
d465 6
@


1.36
log
@	* remote-rdp.c: Deleted.
	* NEWS: Mention removal of remote-rdp.c.

	* Makefile.in (ALLDEPFILES): Remove remote-rdp.c.
	(remote-rdp.o): Delete.
	* README: Remove description of remote-rdp.c.
	* arm-tdep.c (arm_breakpoint_from_pc): Remove obsolete comment.
	* config/arm/embed.mt (TDEPFILES): Remove remote-rdp.o.
@
text
@d92 5
@


1.35
log
@	* Makefile.in (remote-rdi.o): Remove.
	(rdi-share/libangsd.a): Likewise.
	* README: Don't mention remote-rdi.c.
	* NEWS: Mention removal of rdi-share.
	* configure.ac: Don't configure rdi-share subdirectory.
	* remote-rdi.c: Remove.
	* config/arm/embed.mt (TDEPFILES): Remove remote-rdi.o.
	(TDEPLIBS): Remove rdi-share/libangsd.a.
	* rdi-share/Makefile.am: Remove.
	* rdi-share/Makefile.in: Likewise.
	* rdi-share/README.CYGNUS: Likewise.
	* rdi-share/aclocal.m4: Likewise.
	* rdi-share/adp.h: Likewise.
	* rdi-share/adperr.h: Likewise.
	* rdi-share/angel.h: Likewise.
	* rdi-share/angel_bytesex.c: Likewise.
	* rdi-share/angel_bytesex.h: Likewise.
	* rdi-share/angel_endian.h: Likewise.
	* rdi-share/ardi.c: Likewise.
	* rdi-share/ardi.h: Likewise.
	* rdi-share/armdbg.h: Likewise.
	* rdi-share/buffers.h: Likewise.
	* rdi-share/chandefs.h: Likewise.
	* rdi-share/channels.h: Likewise.
	* rdi-share/chanpriv.h: Likewise.
	* rdi-share/configure: Likewise.
	* rdi-share/configure.in: Likewise.
	* rdi-share/crc.c: Likewise.
	* rdi-share/crc.h: Likewise.
	* rdi-share/dbg_conf.h: Likewise.
	* rdi-share/dbg_cp.h: Likewise.
	* rdi-share/dbg_hif.h: Likewise.
	* rdi-share/dbg_rdi.h: Likewise.
	* rdi-share/devclnt.h: Likewise.
	* rdi-share/devices.h: Likewise.
	* rdi-share/devsw.c: Likewise.
	* rdi-share/devsw.h: Likewise.
	* rdi-share/drivers.c: Likewise.
	* rdi-share/drivers.h: Likewise.
	* rdi-share/etherdrv.c: Likewise.
	* rdi-share/ethernet.h: Likewise.
	* rdi-share/host.h: Likewise.
	* rdi-share/hostchan.c: Likewise.
	* rdi-share/hostchan.h: Likewise.
	* rdi-share/hsys.c: Likewise.
	* rdi-share/hsys.h: Likewise.
	* rdi-share/logging.c: Likewise.
	* rdi-share/logging.h: Likewise.
	* rdi-share/msgbuild.c: Likewise.
	* rdi-share/msgbuild.h: Likewise.
	* rdi-share/params.c: Likewise.
	* rdi-share/params.h: Likewise.
	* rdi-share/rx.c: Likewise.
	* rdi-share/rxtx.h: Likewise.
	* rdi-share/serdrv.c: Likewise.
	* rdi-share/serpardr.c: Likewise.
	* rdi-share/sys.h: Likewise.
	* rdi-share/tx.c: Likewise.
	* rdi-share/unixcomm.c: Likewise.
	* rdi-share/unixcomm.h: Likewise.
@
text
@a456 1
	remote-rdp.c	 ARM with Demon monitor
@


1.35.14.1
log
@Changes from nickrob-async-20060828-mergepoint.
@
text
@a91 5
   GDB uses Expat, an XML parsing library, to implement some target-specific
features.  Expat will be linked in if it is available at build time, or
those features will be disabled.  The latest version of Expat should be
available from `http://expat.sourceforge.net'.

d457 1
@


1.35.16.1
log
@        * README: Update GDB version number.
@
text
@d1 1
a1 1
		     README for gdb-6.5 release
d23 1
a23 1
underneath the gdb-6.5 directory.  The idea is that a variety of GNU
d32 2
a33 2
   When you unpack the gdb-6.5.tar.gz file, you'll find a directory
called `gdb-6.5', which contains:
d46 1
a46 1
      cd gdb-6.5
d60 1
a60 1
      <full path to your sources>/gdb-6.5/configure
d65 1
a65 1
different; see the file gdb-6.5/gdb/config/djgpp/README for details.)
d71 1
a71 1
   Make sure that your 'configure' line ends in 'gdb-6.5/configure':
d73 2
a74 2
      /berman/migchain/source/gdb-6.5/configure      # RIGHT
      /berman/migchain/source/gdb-6.5/gdb/configure  # WRONG
d78 1
a78 1
'gdb-6.5/gdb/configure', then you are configuring only the gdb
d109 1
a109 1
`gdb-6.5/gdb/doc/gdb.info', and it refers to subordinate files
d121 1
a121 1
source directory (`gdb-6.5', in the case of version 6.5), you can make
d130 1
a130 1
distribution, in the directory `gdb-6.5/texinfo'.
d144 1
a144 1
`gdb-6.5/texinfo' directory.
d148 1
a148 1
the main source directory (for example, to `gdb-6.5/gdb') and then type:
d171 1
a171 1
   For example, the GDB version 6.5 distribution is in the `gdb-6.5'
d174 1
a174 1
`gdb-6.5/{COPYING,COPYING.LIB}'
d177 1
a177 1
`gdb-6.5/bfd'
d180 1
a180 1
`gdb-6.5/config*'
d183 1
a183 1
`gdb-6.5/gdb'
d186 1
a186 1
`gdb-6.5/include'
d189 1
a189 1
`gdb-6.5/libiberty'
d192 1
a192 1
`gdb-6.5/opcodes'
d195 1
a195 1
`gdb-6.5/readline'
d200 1
a200 1
`gdb-6.5/sim'
d203 1
a203 1
`gdb-6.5/texinfo'
d207 1
a207 1
`gdb-6.5/etc'
d217 1
a217 1
is the `gdb-6.5' directory.
d224 1
a224 1
      cd gdb-6.5
d240 2
a241 2
directories for multiple libraries or programs, such as the `gdb-6.5'
source directory for version 6.5, `configure' creates configuration
d249 1
a249 1
   For example, with version 6.5, type the following to configure only
d252 1
a252 1
      cd gdb-6.5/bfd
d281 1
a281 1
   For example, with version 6.5, you can build GDB in a separate
d284 1
a284 1
     cd gdb-6.5
d287 1
a287 1
     ../gdb-6.5/configure
d308 2
a309 2
as `gdb-6.5' (or in a separate configured directory configured with
`--srcdir=PATH/gdb-6.5'), you will build all the required libraries,
d352 1
a352 1
(`gdb-6.5', for version 6.5).
d481 1
a481 1
gdb-6.5), and how you configured it (e.g., "sun4" or "mach386 host,
d536 1
a536 1
  (1)	cd gdb-6.5
d541 1
a541 1
  (2)	cd gdb-6.5/gdb
d546 1
a546 1
  (3)	cd gdb-6.5/gdb/testsuite
@


1.35.16.2
log
@        * README: Update date of last modification.
@
text
@d2 1
a2 1
		Updated May 16, 2006 by Joel Brobecker
@


1.34
log
@Remove config.if.
@
text
@a456 1
	remote-rdi.c	 ARM with Angel monitor
@


1.34.8.1
log
@        * NEWS: Changes sinces GDB 6.3 are now labled as changes in GDB 6.4.
        * README: Update README for GDB 6.4 release by replacing all 6.3
        occurrences with 6.4.
@
text
@d1 1
a1 1
		     README for gdb-6.4 release
d23 1
a23 1
underneath the gdb-6.4 directory.  The idea is that a variety of GNU
d32 2
a33 2
   When you unpack the gdb-6.4.tar.gz file, you'll find a directory
called `gdb-6.4', which contains:
d46 1
a46 1
      cd gdb-6.4
d60 1
a60 1
      <full path to your sources>/gdb-6.4/configure
d65 1
a65 1
different; see the file gdb-6.4/gdb/config/djgpp/README for details.)
d71 1
a71 1
   Make sure that your 'configure' line ends in 'gdb-6.4/configure':
d73 2
a74 2
      /berman/migchain/source/gdb-6.4/configure      # RIGHT
      /berman/migchain/source/gdb-6.4/gdb/configure  # WRONG
d78 1
a78 1
'gdb-6.4/gdb/configure', then you are configuring only the gdb
d109 1
a109 1
`gdb-6.4/gdb/doc/gdb.info', and it refers to subordinate files
d121 1
a121 1
source directory (`gdb-6.4', in the case of version 6.4), you can make
d130 1
a130 1
distribution, in the directory `gdb-6.4/texinfo'.
d144 1
a144 1
`gdb-6.4/texinfo' directory.
d148 1
a148 1
the main source directory (for example, to `gdb-6.4/gdb') and then type:
d171 1
a171 1
   For example, the GDB version 6.4 distribution is in the `gdb-6.4'
d174 1
a174 1
`gdb-6.4/{COPYING,COPYING.LIB}'
d177 1
a177 1
`gdb-6.4/bfd'
d180 1
a180 1
`gdb-6.4/config*'
d183 1
a183 1
`gdb-6.4/gdb'
d186 1
a186 1
`gdb-6.4/include'
d189 1
a189 1
`gdb-6.4/libiberty'
d192 1
a192 1
`gdb-6.4/opcodes'
d195 1
a195 1
`gdb-6.4/readline'
d200 1
a200 1
`gdb-6.4/sim'
d203 1
a203 1
`gdb-6.4/texinfo'
d207 1
a207 1
`gdb-6.4/etc'
d217 1
a217 1
is the `gdb-6.4' directory.
d224 1
a224 1
      cd gdb-6.4
d240 2
a241 2
directories for multiple libraries or programs, such as the `gdb-6.4'
source directory for version 6.4, `configure' creates configuration
d249 1
a249 1
   For example, with version 6.4, type the following to configure only
d252 1
a252 1
      cd gdb-6.4/bfd
d281 1
a281 1
   For example, with version 6.4, you can build GDB in a separate
d284 1
a284 1
     cd gdb-6.4
d287 1
a287 1
     ../gdb-6.4/configure
d308 2
a309 2
as `gdb-6.4' (or in a separate configured directory configured with
`--srcdir=PATH/gdb-6.4'), you will build all the required libraries,
d352 1
a352 1
(`gdb-6.4', for version 6.4).
d482 1
a482 1
gdb-6.4), and how you configured it (e.g., "sun4" or "mach386 host,
d537 1
a537 1
  (1)	cd gdb-6.4
d542 1
a542 1
  (2)	cd gdb-6.4/gdb
d547 1
a547 1
  (3)	cd gdb-6.4/gdb/testsuite
@


1.34.8.2
log
@        * README: Update last updated date and author.
@
text
@d2 1
a2 1
		Updated November 22nd, 2005 by Joel Brobecker
@


1.33
log
@2004-11-08  Andrew Cagney  <cagney@@gnu.org>

	* README: Refer to 6.3, not 6.2, update directory listing droppng
	references to intl/ and mmalloc/.
	* PROBLEMS: Refer to 6.3 not 6.2.
@
text
@d35 8
a42 8
  COPYING       config-ml.in  gdb          ltcf-gcj.sh     readline
  COPYING.LIB   config.guess  gettext.m4   ltconfig        sim
  Makefile.def  config.if     include      ltmain.sh       src-release
  Makefile.in   config.sub    install-sh   md5.sum         symlink-tree
  Makefile.tpl  configure     libiberty    missing         texinfo
  README        configure.in  libtool.m4   mkinstalldirs   ylwrap
  bfd           djunpack.bat  ltcf-c.sh    move-if-change
  config        etc           ltcf-cxx.sh  opcodes
@


1.32
log
@2004-07-17  Andrew Cagney  <cagney@@gnu.org>

	* README: Update to 6.2.
@
text
@d1 2
a2 2
		     README for gdb-6.2 release
		Updated 17 July, 2004 by Andrew Cagney
d23 1
a23 1
underneath the gdb-6.2 directory.  The idea is that a variety of GNU
d32 2
a33 2
   When you unpack the gdb-6.2.tar.gz file, you'll find a directory
called `gdb-6.2', which contains:
d35 8
a42 9
  COPYING       config.sub    intl         missing         opcodes
  COPYING.LIB   configure     libiberty    mkinstalldirs   readline
  Makefile.in   configure.in  libtool.m4   mmalloc         sim
  README        djunpack.bat  ltcf-c.sh    move-if-change  symlink-tree
  bfd           etc           ltcf-cxx.sh  mpw-README      texinfo
  config        gdb           ltcf-gcj.sh  mpw-build.in    utils
  config-ml.in  gettext.m4    ltconfig     mpw-config.in   ylwrap
  config.guess  include       ltmain.sh    mpw-configure
  config.if     install-sh    md5.sum      mpw-install
d46 1
a46 1
      cd gdb-6.2
d60 1
a60 1
      <full path to your sources>/gdb-6.2/configure
d65 1
a65 1
different; see the file gdb-6.2/gdb/config/djgpp/README for details.)
d71 1
a71 1
   Make sure that your 'configure' line ends in 'gdb-6.2/configure':
d73 2
a74 2
      /berman/migchain/source/gdb-6.2/configure      # RIGHT
      /berman/migchain/source/gdb-6.2/gdb/configure  # WRONG
d78 1
a78 1
'gdb-6.2/gdb/configure', then you are configuring only the gdb
d109 1
a109 1
`gdb-6.2/gdb/doc/gdb.info', and it refers to subordinate files
d121 1
a121 1
source directory (`gdb-6.2', in the case of version 6.2), you can make
d130 1
a130 1
distribution, in the directory `gdb-6.2/texinfo'.
d144 1
a144 1
`gdb-6.2/texinfo' directory.
d148 1
a148 1
the main source directory (for example, to `gdb-6.2/gdb') and then type:
d171 1
a171 1
   For example, the GDB version 6.2 distribution is in the `gdb-6.2'
d174 1
a174 1
`gdb-6.2/{COPYING,COPYING.LIB}'
d177 1
a177 1
`gdb-6.2/bfd'
d180 1
a180 1
`gdb-6.2/config*'
d183 1
a183 1
`gdb-6.2/gdb'
d186 1
a186 1
`gdb-6.2/include'
d189 1
a189 1
`gdb-6.2/libiberty'
d192 1
a192 4
`gdb-6.2/mmalloc'
     source for the GNU memory-mapped malloc package

`gdb-6.2/opcodes'
d195 1
a195 1
`gdb-6.2/readline'
d200 1
a200 1
`gdb-6.2/sim'
d203 1
a203 6
`gdb-6.2/intl'
     source for the GNU gettext library, for internationalization.
     This is slightly modified from the standalone gettext
     distribution you can get from GNU.

`gdb-6.2/texinfo'
d207 1
a207 1
`gdb-6.2/etc'
a210 3
`gdb-6.2/utils'
     A grab bag of random utilities.

d217 1
a217 1
is the `gdb-6.2' directory.
d224 1
a224 1
      cd gdb-6.2
d240 2
a241 2
directories for multiple libraries or programs, such as the `gdb-6.2'
source directory for version 6.2, `configure' creates configuration
d249 1
a249 1
   For example, with version 6.2, type the following to configure only
d252 1
a252 1
      cd gdb-6.2/bfd
d281 1
a281 1
   For example, with version 6.2, you can build GDB in a separate
d284 1
a284 1
     cd gdb-6.2
d287 1
a287 1
     ../gdb-6.2/configure
d308 2
a309 2
as `gdb-6.2' (or in a separate configured directory configured with
`--srcdir=PATH/gdb-6.2'), you will build all the required libraries,
d352 1
a352 1
(`gdb-6.2', for version 6.2).
d482 1
a482 1
gdb-6.2), and how you configured it (e.g., "sun4" or "mach386 host,
d537 1
a537 1
  (1)	cd gdb-6.2
d542 1
a542 1
  (2)	cd gdb-6.2/gdb
d547 1
a547 1
  (3)	cd gdb-6.2/gdb/testsuite
@


1.32.2.1
log
@2004-11-08  Andrew Cagney  <cagney@@gnu.org>

	* README: Refer to 6.3, not 6.2, update directory listing droppng
	references to intl/ and mmalloc/.
	* PROBLEMS: Refer to 6.3 not 6.2.
@
text
@d1 2
a2 2
		     README for gdb-6.3 release
		Updated 8, November, 2004 by Andrew Cagney
d23 1
a23 1
underneath the gdb-6.3 directory.  The idea is that a variety of GNU
d32 2
a33 2
   When you unpack the gdb-6.3.tar.gz file, you'll find a directory
called `gdb-6.3', which contains:
d35 9
a43 8
  COPYING       config-ml.in  gdb          ltcf-gcj.sh     readline
  COPYING.LIB   config.guess  gettext.m4   ltconfig        sim
  Makefile.def  config.if     include      ltmain.sh       src-release
  Makefile.in   config.sub    install-sh   md5.sum         symlink-tree
  Makefile.tpl  configure     libiberty    missing         texinfo
  README        configure.in  libtool.m4   mkinstalldirs   ylwrap
  bfd           djunpack.bat  ltcf-c.sh    move-if-change
  config        etc           ltcf-cxx.sh  opcodes
d47 1
a47 1
      cd gdb-6.3
d61 1
a61 1
      <full path to your sources>/gdb-6.3/configure
d66 1
a66 1
different; see the file gdb-6.3/gdb/config/djgpp/README for details.)
d72 1
a72 1
   Make sure that your 'configure' line ends in 'gdb-6.3/configure':
d74 2
a75 2
      /berman/migchain/source/gdb-6.3/configure      # RIGHT
      /berman/migchain/source/gdb-6.3/gdb/configure  # WRONG
d79 1
a79 1
'gdb-6.3/gdb/configure', then you are configuring only the gdb
d110 1
a110 1
`gdb-6.3/gdb/doc/gdb.info', and it refers to subordinate files
d122 1
a122 1
source directory (`gdb-6.3', in the case of version 6.3), you can make
d131 1
a131 1
distribution, in the directory `gdb-6.3/texinfo'.
d145 1
a145 1
`gdb-6.3/texinfo' directory.
d149 1
a149 1
the main source directory (for example, to `gdb-6.3/gdb') and then type:
d172 1
a172 1
   For example, the GDB version 6.3 distribution is in the `gdb-6.3'
d175 1
a175 1
`gdb-6.3/{COPYING,COPYING.LIB}'
d178 1
a178 1
`gdb-6.3/bfd'
d181 1
a181 1
`gdb-6.3/config*'
d184 1
a184 1
`gdb-6.3/gdb'
d187 1
a187 1
`gdb-6.3/include'
d190 1
a190 1
`gdb-6.3/libiberty'
d193 4
a196 1
`gdb-6.3/opcodes'
d199 1
a199 1
`gdb-6.3/readline'
d204 1
a204 1
`gdb-6.3/sim'
d207 6
a212 1
`gdb-6.3/texinfo'
d216 1
a216 1
`gdb-6.3/etc'
d220 3
d229 1
a229 1
is the `gdb-6.3' directory.
d236 1
a236 1
      cd gdb-6.3
d252 2
a253 2
directories for multiple libraries or programs, such as the `gdb-6.3'
source directory for version 6.3, `configure' creates configuration
d261 1
a261 1
   For example, with version 6.3, type the following to configure only
d264 1
a264 1
      cd gdb-6.3/bfd
d293 1
a293 1
   For example, with version 6.3, you can build GDB in a separate
d296 1
a296 1
     cd gdb-6.3
d299 1
a299 1
     ../gdb-6.3/configure
d320 2
a321 2
as `gdb-6.3' (or in a separate configured directory configured with
`--srcdir=PATH/gdb-6.3'), you will build all the required libraries,
d364 1
a364 1
(`gdb-6.3', for version 6.3).
d494 1
a494 1
gdb-6.3), and how you configured it (e.g., "sun4" or "mach386 host,
d549 1
a549 1
  (1)	cd gdb-6.3
d554 1
a554 1
  (2)	cd gdb-6.3/gdb
d559 1
a559 1
  (3)	cd gdb-6.3/gdb/testsuite
@


1.31
log
@Fix tipo.
@
text
@d1 2
a2 2
		     README for gdb-6.1 release
		Updated 29 February, 2004 by Andrew Cagney
d23 1
a23 1
underneath the gdb-6.1 directory.  The idea is that a variety of GNU
d32 2
a33 2
   When you unpack the gdb-6.1.tar.gz file, you'll find a directory
called `gdb-6.1', which contains:
d47 1
a47 1
      cd gdb-6.1
d61 1
a61 1
      <full path to your sources>/gdb-6.1/configure
d66 1
a66 1
different; see the file gdb-6.1/gdb/config/djgpp/README for details.)
d72 1
a72 1
   Make sure that your 'configure' line ends in 'gdb-6.1/configure':
d74 2
a75 2
      /berman/migchain/source/gdb-6.1/configure      # RIGHT
      /berman/migchain/source/gdb-6.1/gdb/configure  # WRONG
d79 1
a79 1
'gdb-6.1/gdb/configure', then you are configuring only the gdb
d110 1
a110 1
`gdb-6.1/gdb/doc/gdb.info', and it refers to subordinate files
d122 1
a122 1
source directory (`gdb-6.1', in the case of version 6.1), you can make
d131 1
a131 1
distribution, in the directory `gdb-6.1/texinfo'.
d145 1
a145 1
`gdb-6.1/texinfo' directory.
d149 1
a149 1
the main source directory (for example, to `gdb-6.1/gdb') and then type:
d172 1
a172 1
   For example, the GDB version 6.1 distribution is in the `gdb-6.1'
d175 1
a175 1
`gdb-6.1/{COPYING,COPYING.LIB}'
d178 1
a178 1
`gdb-6.1/bfd'
d181 1
a181 1
`gdb-6.1/config*'
d184 1
a184 1
`gdb-6.1/gdb'
d187 1
a187 1
`gdb-6.1/include'
d190 1
a190 1
`gdb-6.1/libiberty'
d193 1
a193 1
`gdb-6.1/mmalloc'
d196 1
a196 1
`gdb-6.1/opcodes'
d199 1
a199 1
`gdb-6.1/readline'
d204 1
a204 1
`gdb-6.1/sim'
d207 1
a207 1
`gdb-6.1/intl'
d212 1
a212 1
`gdb-6.1/texinfo'
d216 1
a216 1
`gdb-6.1/etc'
d220 1
a220 1
`gdb-6.1/utils'
d229 1
a229 1
is the `gdb-6.1' directory.
d236 1
a236 1
      cd gdb-6.1
d252 2
a253 2
directories for multiple libraries or programs, such as the `gdb-6.1'
source directory for version 6.1, `configure' creates configuration
d261 1
a261 1
   For example, with version 6.1, type the following to configure only
d264 1
a264 1
      cd gdb-6.1/bfd
d293 1
a293 1
   For example, with version 6.1, you can build GDB in a separate
d296 1
a296 1
     cd gdb-6.1
d299 1
a299 1
     ../gdb-6.1/configure
d320 2
a321 2
as `gdb-6.1' (or in a separate configured directory configured with
`--srcdir=PATH/gdb-6.1'), you will build all the required libraries,
d364 1
a364 1
(`gdb-6.1', for version 6.1).
d494 1
a494 1
gdb-6.1), and how you configured it (e.g., "sun4" or "mach386 host,
d549 1
a549 1
  (1)	cd gdb-6.1
d554 1
a554 1
  (2)	cd gdb-6.1/gdb
d559 1
a559 1
  (3)	cd gdb-6.1/gdb/testsuite
@


1.31.8.1
log
@2004-07-17  Andrew Cagney  <cagney@@gnu.org>

	* README: Update to 6.2.
@
text
@d1 2
a2 2
		     README for gdb-6.2 release
		Updated 17 July, 2004 by Andrew Cagney
d23 1
a23 1
underneath the gdb-6.2 directory.  The idea is that a variety of GNU
d32 2
a33 2
   When you unpack the gdb-6.2.tar.gz file, you'll find a directory
called `gdb-6.2', which contains:
d47 1
a47 1
      cd gdb-6.2
d61 1
a61 1
      <full path to your sources>/gdb-6.2/configure
d66 1
a66 1
different; see the file gdb-6.2/gdb/config/djgpp/README for details.)
d72 1
a72 1
   Make sure that your 'configure' line ends in 'gdb-6.2/configure':
d74 2
a75 2
      /berman/migchain/source/gdb-6.2/configure      # RIGHT
      /berman/migchain/source/gdb-6.2/gdb/configure  # WRONG
d79 1
a79 1
'gdb-6.2/gdb/configure', then you are configuring only the gdb
d110 1
a110 1
`gdb-6.2/gdb/doc/gdb.info', and it refers to subordinate files
d122 1
a122 1
source directory (`gdb-6.2', in the case of version 6.2), you can make
d131 1
a131 1
distribution, in the directory `gdb-6.2/texinfo'.
d145 1
a145 1
`gdb-6.2/texinfo' directory.
d149 1
a149 1
the main source directory (for example, to `gdb-6.2/gdb') and then type:
d172 1
a172 1
   For example, the GDB version 6.2 distribution is in the `gdb-6.2'
d175 1
a175 1
`gdb-6.2/{COPYING,COPYING.LIB}'
d178 1
a178 1
`gdb-6.2/bfd'
d181 1
a181 1
`gdb-6.2/config*'
d184 1
a184 1
`gdb-6.2/gdb'
d187 1
a187 1
`gdb-6.2/include'
d190 1
a190 1
`gdb-6.2/libiberty'
d193 1
a193 1
`gdb-6.2/mmalloc'
d196 1
a196 1
`gdb-6.2/opcodes'
d199 1
a199 1
`gdb-6.2/readline'
d204 1
a204 1
`gdb-6.2/sim'
d207 1
a207 1
`gdb-6.2/intl'
d212 1
a212 1
`gdb-6.2/texinfo'
d216 1
a216 1
`gdb-6.2/etc'
d220 1
a220 1
`gdb-6.2/utils'
d229 1
a229 1
is the `gdb-6.2' directory.
d236 1
a236 1
      cd gdb-6.2
d252 2
a253 2
directories for multiple libraries or programs, such as the `gdb-6.2'
source directory for version 6.2, `configure' creates configuration
d261 1
a261 1
   For example, with version 6.2, type the following to configure only
d264 1
a264 1
      cd gdb-6.2/bfd
d293 1
a293 1
   For example, with version 6.2, you can build GDB in a separate
d296 1
a296 1
     cd gdb-6.2
d299 1
a299 1
     ../gdb-6.2/configure
d320 2
a321 2
as `gdb-6.2' (or in a separate configured directory configured with
`--srcdir=PATH/gdb-6.2'), you will build all the required libraries,
d364 1
a364 1
(`gdb-6.2', for version 6.2).
d494 1
a494 1
gdb-6.2), and how you configured it (e.g., "sun4" or "mach386 host,
d549 1
a549 1
  (1)	cd gdb-6.2
d554 1
a554 1
  (2)	cd gdb-6.2/gdb
d559 1
a559 1
  (3)	cd gdb-6.2/gdb/testsuite
@


1.30
log
@2004-02-28  Andrew Cagney  <cagney@@redhat.com>

	* NEWS: Refer to GDB 6.1.
	* README: Refer to GDB 6.1.
	* PROBLEMS: Refer to GDB 6.1.

Index: doc/ChangeLog
2004-02-28  Andrew Cagney  <cagney@@redhat.com>

	* gdb.texinfo (Contributors): Mention GDB 6.1 release engineer.
@
text
@d2 1
a2 1
		Updated 29 Febuary, 2004 by Andrew Cagney
@


1.29
log
@2003-10-10  Kei Sakamoto  <sakamoto.kei@@renesas.com>

	* NEWS: Replace "Hitachi" and "Mitsubishi" with "Renesas".
	* README: Ditto.
	* d10v-tdep.c: Ditto.
	* h8300-tdep.c: Ditto.
	* remote-e7000.c: Ditto.
	* remote-hms.c: Ditto.
	* ser-e7kpc.c: Ditto.
	* sh-stub.c: Ditto.
	* sh-tdep.c: Ditto.
	* sh-tdep.h: Ditto.
	* sh3-rom.c: Ditto.
	* sh64-tdep.c: Ditto.
	* top.c: Ditto.
	* wince.c: Ditto.
	* config/d10v/d10v.mt: Ditto.
	* config/sh/embed.mt: Ditto.
	* config/sh/linux.mt: Ditto.
	* config/sh/tm-linux.h: Ditto.
	* config/sh/tm-sh.h: Ditto.
	* config/sh/wince.mt: Ditto.
@
text
@d1 2
a2 2
		     README for gdb-6.0 release
		Updated 23th June, 2003 by Andrew Cagney
d23 1
a23 1
underneath the gdb-6.0 directory.  The idea is that a variety of GNU
d32 2
a33 2
   When you unpack the gdb-6.0.tar.gz file, you'll find a directory
called `gdb-6.0', which contains:
d47 1
a47 1
      cd gdb-6.0
d61 1
a61 1
      <full path to your sources>/gdb-6.0/configure
d66 1
a66 1
different; see the file gdb-6.0/gdb/config/djgpp/README for details.)
d72 1
a72 1
   Make sure that your 'configure' line ends in 'gdb-6.0/configure':
d74 2
a75 2
      /berman/migchain/source/gdb-6.0/configure      # RIGHT
      /berman/migchain/source/gdb-6.0/gdb/configure  # WRONG
d79 1
a79 1
'gdb-6.0/gdb/configure', then you are configuring only the gdb
d110 1
a110 1
`gdb-6.0/gdb/doc/gdb.info', and it refers to subordinate files
d122 1
a122 1
source directory (`gdb-6.0', in the case of version 6.0), you can make
d131 1
a131 1
distribution, in the directory `gdb-6.0/texinfo'.
d145 1
a145 1
`gdb-6.0/texinfo' directory.
d149 1
a149 1
the main source directory (for example, to `gdb-6.0/gdb') and then type:
d172 1
a172 1
   For example, the GDB version 6.0 distribution is in the `gdb-6.0'
d175 1
a175 1
`gdb-6.0/{COPYING,COPYING.LIB}'
d178 1
a178 1
`gdb-6.0/bfd'
d181 1
a181 1
`gdb-6.0/config*'
d184 1
a184 1
`gdb-6.0/gdb'
d187 1
a187 1
`gdb-6.0/include'
d190 1
a190 1
`gdb-6.0/libiberty'
d193 1
a193 1
`gdb-6.0/mmalloc'
d196 1
a196 1
`gdb-6.0/opcodes'
d199 1
a199 1
`gdb-6.0/readline'
d204 1
a204 1
`gdb-6.0/sim'
d207 1
a207 1
`gdb-6.0/intl'
d212 1
a212 1
`gdb-6.0/texinfo'
d216 1
a216 1
`gdb-6.0/etc'
d220 1
a220 1
`gdb-6.0/utils'
d229 1
a229 1
is the `gdb-6.0' directory.
d236 1
a236 1
      cd gdb-6.0
d252 2
a253 2
directories for multiple libraries or programs, such as the `gdb-6.0'
source directory for version 6.0, `configure' creates configuration
d261 1
a261 1
   For example, with version 6.0, type the following to configure only
d264 1
a264 1
      cd gdb-6.0/bfd
d293 1
a293 1
   For example, with version 6.0, you can build GDB in a separate
d296 1
a296 1
     cd gdb-6.0
d299 1
a299 1
     ../gdb-6.0/configure
d320 2
a321 2
as `gdb-6.0' (or in a separate configured directory configured with
`--srcdir=PATH/gdb-6.0'), you will build all the required libraries,
d364 1
a364 1
(`gdb-6.0', for version 6.0).
d494 1
a494 1
gdb-6.0), and how you configured it (e.g., "sun4" or "mach386 host,
d549 1
a549 1
  (1)	cd gdb-6.0
d554 1
a554 1
  (2)	cd gdb-6.0/gdb
d559 1
a559 1
  (3)	cd gdb-6.0/gdb/testsuite
@


1.29.6.1
log
@Merge mainline to intercu branch.
@
text
@d1 2
a2 2
		     README for gdb-6.1 release
		Updated 29 February, 2004 by Andrew Cagney
d23 1
a23 1
underneath the gdb-6.1 directory.  The idea is that a variety of GNU
d32 2
a33 2
   When you unpack the gdb-6.1.tar.gz file, you'll find a directory
called `gdb-6.1', which contains:
d47 1
a47 1
      cd gdb-6.1
d61 1
a61 1
      <full path to your sources>/gdb-6.1/configure
d66 1
a66 1
different; see the file gdb-6.1/gdb/config/djgpp/README for details.)
d72 1
a72 1
   Make sure that your 'configure' line ends in 'gdb-6.1/configure':
d74 2
a75 2
      /berman/migchain/source/gdb-6.1/configure      # RIGHT
      /berman/migchain/source/gdb-6.1/gdb/configure  # WRONG
d79 1
a79 1
'gdb-6.1/gdb/configure', then you are configuring only the gdb
d110 1
a110 1
`gdb-6.1/gdb/doc/gdb.info', and it refers to subordinate files
d122 1
a122 1
source directory (`gdb-6.1', in the case of version 6.1), you can make
d131 1
a131 1
distribution, in the directory `gdb-6.1/texinfo'.
d145 1
a145 1
`gdb-6.1/texinfo' directory.
d149 1
a149 1
the main source directory (for example, to `gdb-6.1/gdb') and then type:
d172 1
a172 1
   For example, the GDB version 6.1 distribution is in the `gdb-6.1'
d175 1
a175 1
`gdb-6.1/{COPYING,COPYING.LIB}'
d178 1
a178 1
`gdb-6.1/bfd'
d181 1
a181 1
`gdb-6.1/config*'
d184 1
a184 1
`gdb-6.1/gdb'
d187 1
a187 1
`gdb-6.1/include'
d190 1
a190 1
`gdb-6.1/libiberty'
d193 1
a193 1
`gdb-6.1/mmalloc'
d196 1
a196 1
`gdb-6.1/opcodes'
d199 1
a199 1
`gdb-6.1/readline'
d204 1
a204 1
`gdb-6.1/sim'
d207 1
a207 1
`gdb-6.1/intl'
d212 1
a212 1
`gdb-6.1/texinfo'
d216 1
a216 1
`gdb-6.1/etc'
d220 1
a220 1
`gdb-6.1/utils'
d229 1
a229 1
is the `gdb-6.1' directory.
d236 1
a236 1
      cd gdb-6.1
d252 2
a253 2
directories for multiple libraries or programs, such as the `gdb-6.1'
source directory for version 6.1, `configure' creates configuration
d261 1
a261 1
   For example, with version 6.1, type the following to configure only
d264 1
a264 1
      cd gdb-6.1/bfd
d293 1
a293 1
   For example, with version 6.1, you can build GDB in a separate
d296 1
a296 1
     cd gdb-6.1
d299 1
a299 1
     ../gdb-6.1/configure
d320 2
a321 2
as `gdb-6.1' (or in a separate configured directory configured with
`--srcdir=PATH/gdb-6.1'), you will build all the required libraries,
d364 1
a364 1
(`gdb-6.1', for version 6.1).
d494 1
a494 1
gdb-6.1), and how you configured it (e.g., "sun4" or "mach386 host,
d549 1
a549 1
  (1)	cd gdb-6.1
d554 1
a554 1
  (2)	cd gdb-6.1/gdb
d559 1
a559 1
  (3)	cd gdb-6.1/gdb/testsuite
@


1.29.6.2
log
@Merge mainline to intercu branch - 2004-09-15
@
text
@d1 2
a2 2
		     README for gdb-6.2 release
		Updated 17 July, 2004 by Andrew Cagney
d23 1
a23 1
underneath the gdb-6.2 directory.  The idea is that a variety of GNU
d32 2
a33 2
   When you unpack the gdb-6.2.tar.gz file, you'll find a directory
called `gdb-6.2', which contains:
d47 1
a47 1
      cd gdb-6.2
d61 1
a61 1
      <full path to your sources>/gdb-6.2/configure
d66 1
a66 1
different; see the file gdb-6.2/gdb/config/djgpp/README for details.)
d72 1
a72 1
   Make sure that your 'configure' line ends in 'gdb-6.2/configure':
d74 2
a75 2
      /berman/migchain/source/gdb-6.2/configure      # RIGHT
      /berman/migchain/source/gdb-6.2/gdb/configure  # WRONG
d79 1
a79 1
'gdb-6.2/gdb/configure', then you are configuring only the gdb
d110 1
a110 1
`gdb-6.2/gdb/doc/gdb.info', and it refers to subordinate files
d122 1
a122 1
source directory (`gdb-6.2', in the case of version 6.2), you can make
d131 1
a131 1
distribution, in the directory `gdb-6.2/texinfo'.
d145 1
a145 1
`gdb-6.2/texinfo' directory.
d149 1
a149 1
the main source directory (for example, to `gdb-6.2/gdb') and then type:
d172 1
a172 1
   For example, the GDB version 6.2 distribution is in the `gdb-6.2'
d175 1
a175 1
`gdb-6.2/{COPYING,COPYING.LIB}'
d178 1
a178 1
`gdb-6.2/bfd'
d181 1
a181 1
`gdb-6.2/config*'
d184 1
a184 1
`gdb-6.2/gdb'
d187 1
a187 1
`gdb-6.2/include'
d190 1
a190 1
`gdb-6.2/libiberty'
d193 1
a193 1
`gdb-6.2/mmalloc'
d196 1
a196 1
`gdb-6.2/opcodes'
d199 1
a199 1
`gdb-6.2/readline'
d204 1
a204 1
`gdb-6.2/sim'
d207 1
a207 1
`gdb-6.2/intl'
d212 1
a212 1
`gdb-6.2/texinfo'
d216 1
a216 1
`gdb-6.2/etc'
d220 1
a220 1
`gdb-6.2/utils'
d229 1
a229 1
is the `gdb-6.2' directory.
d236 1
a236 1
      cd gdb-6.2
d252 2
a253 2
directories for multiple libraries or programs, such as the `gdb-6.2'
source directory for version 6.2, `configure' creates configuration
d261 1
a261 1
   For example, with version 6.2, type the following to configure only
d264 1
a264 1
      cd gdb-6.2/bfd
d293 1
a293 1
   For example, with version 6.2, you can build GDB in a separate
d296 1
a296 1
     cd gdb-6.2
d299 1
a299 1
     ../gdb-6.2/configure
d320 2
a321 2
as `gdb-6.2' (or in a separate configured directory configured with
`--srcdir=PATH/gdb-6.2'), you will build all the required libraries,
d364 1
a364 1
(`gdb-6.2', for version 6.2).
d494 1
a494 1
gdb-6.2), and how you configured it (e.g., "sun4" or "mach386 host,
d549 1
a549 1
  (1)	cd gdb-6.2
d554 1
a554 1
  (2)	cd gdb-6.2/gdb
d559 1
a559 1
  (3)	cd gdb-6.2/gdb/testsuite
@


1.28
log
@2003-06-22  Andrew Cagney  <cagney@@redhat.com>

	GDB 6.0 branch created.
	* README: Update.
	* PROBLEMS: Update.  Empty.
	* NEWS: Update.

Index: doc/ChangeLog
2003-06-22  Andrew Cagney  <cagney@@redhat.com>

	* gdb.texinfo (Contributors): Mention 6.0 release engineer.
@
text
@d465 1
a465 1
	remote-e7000.c	 Hitachi E7000 ICE
d467 1
a467 1
	remote-hms.c	 Hitachi Micro Systems H8/300 monitor
@


1.27
log
@2003-06-14  Andrew Cagney  <cagney@@redhat.com>

	* config/mips/embedl64.mt (TDEPFILES): Delete "remote-array.o".
	* config/mips/embedl.mt (TDEPFILES): Delete "remote-array.o".
	* config/mips/embed64.mt (TDEPFILES): Delete "remote-array.o".
	* config/djgpp/fnchange.lst: Delete "remote-array.c".
	* README: Delete reference to remote-array.
	* Makefile.in (ALLDEPFILES): Remove "remote-array.c".
	(remote-array.o): Delete target.
	* config/mips/embed.mt (TDEPFILES): Delete "remote-array.o".
	* remote-array.c: Delete file.
@
text
@d1 2
a2 2
		     README for gdb-5.3 release
		Updated 5th September, 2002 by Andrew Cagney
d23 1
a23 1
underneath the gdb-5.3 directory.  The idea is that a variety of GNU
d32 2
a33 2
   When you unpack the gdb-5.3.tar.gz file, you'll find a directory
called `gdb-5.3', which contains:
d47 1
a47 1
      cd gdb-5.3
d61 1
a61 1
      <full path to your sources>/gdb-5.3/configure
d66 1
a66 1
different; see the file gdb-5.3/gdb/config/djgpp/README for details.)
d72 1
a72 1
   Make sure that your 'configure' line ends in 'gdb-5.3/configure':
d74 2
a75 2
      /berman/migchain/source/gdb-5.3/configure      # RIGHT
      /berman/migchain/source/gdb-5.3/gdb/configure  # WRONG
d79 1
a79 1
'gdb-5.3/gdb/configure', then you are configuring only the gdb
d110 1
a110 1
`gdb-5.3/gdb/doc/gdb.info', and it refers to subordinate files
d122 1
a122 1
source directory (`gdb-5.3', in the case of version 5.3), you can make
d131 1
a131 1
distribution, in the directory `gdb-5.3/texinfo'.
d145 1
a145 1
`gdb-5.3/texinfo' directory.
d149 1
a149 1
the main source directory (for example, to `gdb-5.3/gdb') and then type:
d172 1
a172 1
   For example, the GDB version 5.3 distribution is in the `gdb-5.3'
d175 1
a175 1
`gdb-5.3/{COPYING,COPYING.LIB}'
d178 1
a178 1
`gdb-5.3/bfd'
d181 1
a181 1
`gdb-5.3/config*'
d184 1
a184 1
`gdb-5.3/gdb'
d187 1
a187 1
`gdb-5.3/include'
d190 1
a190 1
`gdb-5.3/libiberty'
d193 1
a193 1
`gdb-5.3/mmalloc'
d196 1
a196 1
`gdb-5.3/opcodes'
d199 1
a199 1
`gdb-5.3/readline'
d204 1
a204 1
`gdb-5.3/sim'
d207 1
a207 1
`gdb-5.3/intl'
d212 1
a212 1
`gdb-5.3/texinfo'
d216 1
a216 1
`gdb-5.3/etc'
d220 1
a220 1
`gdb-5.3/utils'
d229 1
a229 1
is the `gdb-5.3' directory.
d236 1
a236 1
      cd gdb-5.3
d252 2
a253 2
directories for multiple libraries or programs, such as the `gdb-5.3'
source directory for version 5.3, `configure' creates configuration
d261 1
a261 1
   For example, with version 5.3, type the following to configure only
d264 1
a264 1
      cd gdb-5.3/bfd
d293 1
a293 1
   For example, with version 5.3, you can build GDB in a separate
d296 1
a296 1
     cd gdb-5.3
d299 1
a299 1
     ../gdb-5.3/configure
d320 2
a321 2
as `gdb-5.3' (or in a separate configured directory configured with
`--srcdir=PATH/gdb-5.3'), you will build all the required libraries,
d364 1
a364 1
(`gdb-5.3', for version 5.3).
d494 1
a494 1
gdb-5.3), and how you configured it (e.g., "sun4" or "mach386 host,
d549 1
a549 1
  (1)	cd gdb-5.3
d554 1
a554 1
  (2)	cd gdb-5.3/gdb
d559 1
a559 1
  (3)	cd gdb-5.3/gdb/testsuite
@


1.27.2.1
log
@2003-06-22  Andrew Cagney  <cagney@@redhat.com>

	GDB 6.0 branch created.
	* README: Update.
	* PROBLEMS: Update.  Empty.
	* NEWS: Update.

Index: doc/ChangeLog
2003-06-22  Andrew Cagney  <cagney@@redhat.com>

	* gdb.texinfo (Contributors): Mention 6.0 release engineer.
@
text
@d1 2
a2 2
		     README for gdb-6.0 release
		Updated 23th June, 2003 by Andrew Cagney
d23 1
a23 1
underneath the gdb-6.0 directory.  The idea is that a variety of GNU
d32 2
a33 2
   When you unpack the gdb-6.0.tar.gz file, you'll find a directory
called `gdb-6.0', which contains:
d47 1
a47 1
      cd gdb-6.0
d61 1
a61 1
      <full path to your sources>/gdb-6.0/configure
d66 1
a66 1
different; see the file gdb-6.0/gdb/config/djgpp/README for details.)
d72 1
a72 1
   Make sure that your 'configure' line ends in 'gdb-6.0/configure':
d74 2
a75 2
      /berman/migchain/source/gdb-6.0/configure      # RIGHT
      /berman/migchain/source/gdb-6.0/gdb/configure  # WRONG
d79 1
a79 1
'gdb-6.0/gdb/configure', then you are configuring only the gdb
d110 1
a110 1
`gdb-6.0/gdb/doc/gdb.info', and it refers to subordinate files
d122 1
a122 1
source directory (`gdb-6.0', in the case of version 6.0), you can make
d131 1
a131 1
distribution, in the directory `gdb-6.0/texinfo'.
d145 1
a145 1
`gdb-6.0/texinfo' directory.
d149 1
a149 1
the main source directory (for example, to `gdb-6.0/gdb') and then type:
d172 1
a172 1
   For example, the GDB version 6.0 distribution is in the `gdb-6.0'
d175 1
a175 1
`gdb-6.0/{COPYING,COPYING.LIB}'
d178 1
a178 1
`gdb-6.0/bfd'
d181 1
a181 1
`gdb-6.0/config*'
d184 1
a184 1
`gdb-6.0/gdb'
d187 1
a187 1
`gdb-6.0/include'
d190 1
a190 1
`gdb-6.0/libiberty'
d193 1
a193 1
`gdb-6.0/mmalloc'
d196 1
a196 1
`gdb-6.0/opcodes'
d199 1
a199 1
`gdb-6.0/readline'
d204 1
a204 1
`gdb-6.0/sim'
d207 1
a207 1
`gdb-6.0/intl'
d212 1
a212 1
`gdb-6.0/texinfo'
d216 1
a216 1
`gdb-6.0/etc'
d220 1
a220 1
`gdb-6.0/utils'
d229 1
a229 1
is the `gdb-6.0' directory.
d236 1
a236 1
      cd gdb-6.0
d252 2
a253 2
directories for multiple libraries or programs, such as the `gdb-6.0'
source directory for version 6.0, `configure' creates configuration
d261 1
a261 1
   For example, with version 6.0, type the following to configure only
d264 1
a264 1
      cd gdb-6.0/bfd
d293 1
a293 1
   For example, with version 6.0, you can build GDB in a separate
d296 1
a296 1
     cd gdb-6.0
d299 1
a299 1
     ../gdb-6.0/configure
d320 2
a321 2
as `gdb-6.0' (or in a separate configured directory configured with
`--srcdir=PATH/gdb-6.0'), you will build all the required libraries,
d364 1
a364 1
(`gdb-6.0', for version 6.0).
d494 1
a494 1
gdb-6.0), and how you configured it (e.g., "sun4" or "mach386 host,
d549 1
a549 1
  (1)	cd gdb-6.0
d554 1
a554 1
  (2)	cd gdb-6.0/gdb
d559 1
a559 1
  (3)	cd gdb-6.0/gdb/testsuite
@


1.26
log
@2003-01-31  Andrew Cagney  <ac131313@@redhat.com>

	* README: Remove reference to Ericsson 1800 monitor.
	* Makefile.in (remote-es.o): Delete rule.
	(ALLDEPFILES): Delete remote-es.c.
	* remote-es.c: Delete file.
	* config/m68k/es1800.mt: Delete file.
	* config/djgpp/fnchange.lst: Update.
	* configure.tgt: Delete m68*-ericsson-* target.
@
text
@a464 1
	remote-array.c   Array Tech RAID controller
@


1.25
log
@2003-01-16  Michael Chastain  <mec@@shout.net>

	* README (Unpacking and Installation -- quick overview):
	Warn against ".../gdb-5.3/gdb/configure".
@
text
@a466 1
	remote-es.c	 Ericsson 1800 monitor
@


1.24
log
@2003-01-13  Andrew Cagney  <ac131313@@redhat.com>

	* README (Graphical interface to GDB): Update URL.  Point at
	gdb/links/.
@
text
@d72 14
a85 1
   If you get compiler errors during this stage, see the `Reporting
@


1.23
log
@2003-01-05  Michael Chastain  <mec@@shout.net>

	* README: Remove references to deleted remote-*.c files:
	remote-adapt.c, remote-eb.c, remote-mm.c, remote-nindy.c,
	remote-nrom.c, remote-os9k.c, remote-udi.c.
@
text
@d500 1
a500 1
	http://www.gnu.org/software/gdb/gui/
@


1.22
log
@2002-09-05  Andrew Cagney  <ac131313@@redhat.com>

	* NEWS: Update for 5.3.  Add new section ``Changes since 5.3''.
	* README: Update.

Index: doc/ChangeLog
2002-09-05  Andrew Cagney  <ac131313@@redhat.com>

	* gdb.texinfo (Contributors): Mention 5.2 and 5.3 release
	engineer.
@
text
@a451 1
	remote-adapt.c	 AMD 29000 "Adapt"
a453 1
	remote-eb.c	 AMD 29000 "EBMON"
a457 4
	remote-mm.c	 AMD 29000 "minimon"
	remote-nindy.c   Intel 960 "Nindy"
	remote-nrom.c	 NetROM ROM emulator
	remote-os9k.c	 PC running OS/9000
a462 1
	remote-udi.c	 AMD 29000 using the AMD "Universal Debug Interface"
a468 8

   Remote-udi.c and the 29k-share subdirectory contain a remote
interface for AMD 29000 programs, which uses the AMD "Universal Debug
Interface".  This allows GDB to talk to software simulators,
emulators, and/or bare hardware boards, via network or serial
interfaces.  Note that GDB only provides an interface that speaks UDI,
not a complete solution.  You will need something on the other end
that also speaks UDI.
@


1.22.4.1
log
@Merge drow-cplus-branch to:
  cvs rtag -D 2003-12-14 00:00:00 UTC drow-cplus-merge-20031214 gdb+dejagnu
@
text
@d1 2
a2 2
		     README for gdb-6.0 release
		Updated 23th June, 2003 by Andrew Cagney
d23 1
a23 1
underneath the gdb-6.0 directory.  The idea is that a variety of GNU
d32 2
a33 2
   When you unpack the gdb-6.0.tar.gz file, you'll find a directory
called `gdb-6.0', which contains:
d47 1
a47 1
      cd gdb-6.0
d61 1
a61 1
      <full path to your sources>/gdb-6.0/configure
d66 1
a66 1
different; see the file gdb-6.0/gdb/config/djgpp/README for details.)
d72 1
a72 14
   Make sure that your 'configure' line ends in 'gdb-6.0/configure':

      /berman/migchain/source/gdb-6.0/configure      # RIGHT
      /berman/migchain/source/gdb-6.0/gdb/configure  # WRONG

   The gdb package contains several subdirectories, such as 'gdb',
'bfd', and 'readline'.  If your 'configure' line ends in
'gdb-6.0/gdb/configure', then you are configuring only the gdb
subdirectory, not the whole gdb package.  This leads to build errors
such as:

      make: *** No rule to make target `../bfd/bfd.h', needed by `gdb.o'.  Stop.

   If you get other compiler errors during this stage, see the `Reporting
d97 1
a97 1
`gdb-6.0/gdb/doc/gdb.info', and it refers to subordinate files
d109 1
a109 1
source directory (`gdb-6.0', in the case of version 6.0), you can make
d118 1
a118 1
distribution, in the directory `gdb-6.0/texinfo'.
d132 1
a132 1
`gdb-6.0/texinfo' directory.
d136 1
a136 1
the main source directory (for example, to `gdb-6.0/gdb') and then type:
d159 1
a159 1
   For example, the GDB version 6.0 distribution is in the `gdb-6.0'
d162 1
a162 1
`gdb-6.0/{COPYING,COPYING.LIB}'
d165 1
a165 1
`gdb-6.0/bfd'
d168 1
a168 1
`gdb-6.0/config*'
d171 1
a171 1
`gdb-6.0/gdb'
d174 1
a174 1
`gdb-6.0/include'
d177 1
a177 1
`gdb-6.0/libiberty'
d180 1
a180 1
`gdb-6.0/mmalloc'
d183 1
a183 1
`gdb-6.0/opcodes'
d186 1
a186 1
`gdb-6.0/readline'
d191 1
a191 1
`gdb-6.0/sim'
d194 1
a194 1
`gdb-6.0/intl'
d199 1
a199 1
`gdb-6.0/texinfo'
d203 1
a203 1
`gdb-6.0/etc'
d207 1
a207 1
`gdb-6.0/utils'
d216 1
a216 1
is the `gdb-6.0' directory.
d223 1
a223 1
      cd gdb-6.0
d239 2
a240 2
directories for multiple libraries or programs, such as the `gdb-6.0'
source directory for version 6.0, `configure' creates configuration
d248 1
a248 1
   For example, with version 6.0, type the following to configure only
d251 1
a251 1
      cd gdb-6.0/bfd
d280 1
a280 1
   For example, with version 6.0, you can build GDB in a separate
d283 1
a283 1
     cd gdb-6.0
d286 1
a286 1
     ../gdb-6.0/configure
d307 2
a308 2
as `gdb-6.0' (or in a separate configured directory configured with
`--srcdir=PATH/gdb-6.0'), you will build all the required libraries,
d351 1
a351 1
(`gdb-6.0', for version 6.0).
d452 5
a456 1
	remote-e7000.c	 Renesas E7000 ICE
d458 1
a458 1
	remote-hms.c	 Renesas Micro Systems H8/300 monitor
d460 4
d469 1
d477 8
d498 1
a498 1
gdb-6.0), and how you configured it (e.g., "sun4" or "mach386 host,
d515 1
a515 1
	http://www.gnu.org/software/gdb/links/
d553 1
a553 1
  (1)	cd gdb-6.0
d558 1
a558 1
  (2)	cd gdb-6.0/gdb
d563 1
a563 1
  (3)	cd gdb-6.0/gdb/testsuite
@


1.22.2.1
log
@2003-02-07  David Carlton  <carlton@@math.stanford.edu>

	* Merge with mainline; tag is carlton_dictionary-20030207-merge.
@
text
@d72 1
a72 14
   Make sure that your 'configure' line ends in 'gdb-5.3/configure':

      /berman/migchain/source/gdb-5.3/configure      # RIGHT
      /berman/migchain/source/gdb-5.3/gdb/configure  # WRONG

   The gdb package contains several subdirectories, such as 'gdb',
'bfd', and 'readline'.  If your 'configure' line ends in
'gdb-5.3/gdb/configure', then you are configuring only the gdb
subdirectory, not the whole gdb package.  This leads to build errors
such as:

      make: *** No rule to make target `../bfd/bfd.h', needed by `gdb.o'.  Stop.

   If you get other compiler errors during this stage, see the `Reporting
d452 1
d455 2
d460 4
d469 1
d477 8
d515 1
a515 1
	http://www.gnu.org/software/gdb/links/
@


1.22.2.2
log
@2003-06-27  David Carlton  <carlton@@kealia.com>

	* Merge with mainline; tag is carlton_dictionary-20030627-merge.
@
text
@d1 2
a2 2
		     README for gdb-6.0 release
		Updated 23th June, 2003 by Andrew Cagney
d23 1
a23 1
underneath the gdb-6.0 directory.  The idea is that a variety of GNU
d32 2
a33 2
   When you unpack the gdb-6.0.tar.gz file, you'll find a directory
called `gdb-6.0', which contains:
d47 1
a47 1
      cd gdb-6.0
d61 1
a61 1
      <full path to your sources>/gdb-6.0/configure
d66 1
a66 1
different; see the file gdb-6.0/gdb/config/djgpp/README for details.)
d72 1
a72 1
   Make sure that your 'configure' line ends in 'gdb-6.0/configure':
d74 2
a75 2
      /berman/migchain/source/gdb-6.0/configure      # RIGHT
      /berman/migchain/source/gdb-6.0/gdb/configure  # WRONG
d79 1
a79 1
'gdb-6.0/gdb/configure', then you are configuring only the gdb
d110 1
a110 1
`gdb-6.0/gdb/doc/gdb.info', and it refers to subordinate files
d122 1
a122 1
source directory (`gdb-6.0', in the case of version 6.0), you can make
d131 1
a131 1
distribution, in the directory `gdb-6.0/texinfo'.
d145 1
a145 1
`gdb-6.0/texinfo' directory.
d149 1
a149 1
the main source directory (for example, to `gdb-6.0/gdb') and then type:
d172 1
a172 1
   For example, the GDB version 6.0 distribution is in the `gdb-6.0'
d175 1
a175 1
`gdb-6.0/{COPYING,COPYING.LIB}'
d178 1
a178 1
`gdb-6.0/bfd'
d181 1
a181 1
`gdb-6.0/config*'
d184 1
a184 1
`gdb-6.0/gdb'
d187 1
a187 1
`gdb-6.0/include'
d190 1
a190 1
`gdb-6.0/libiberty'
d193 1
a193 1
`gdb-6.0/mmalloc'
d196 1
a196 1
`gdb-6.0/opcodes'
d199 1
a199 1
`gdb-6.0/readline'
d204 1
a204 1
`gdb-6.0/sim'
d207 1
a207 1
`gdb-6.0/intl'
d212 1
a212 1
`gdb-6.0/texinfo'
d216 1
a216 1
`gdb-6.0/etc'
d220 1
a220 1
`gdb-6.0/utils'
d229 1
a229 1
is the `gdb-6.0' directory.
d236 1
a236 1
      cd gdb-6.0
d252 2
a253 2
directories for multiple libraries or programs, such as the `gdb-6.0'
source directory for version 6.0, `configure' creates configuration
d261 1
a261 1
   For example, with version 6.0, type the following to configure only
d264 1
a264 1
      cd gdb-6.0/bfd
d293 1
a293 1
   For example, with version 6.0, you can build GDB in a separate
d296 1
a296 1
     cd gdb-6.0
d299 1
a299 1
     ../gdb-6.0/configure
d320 2
a321 2
as `gdb-6.0' (or in a separate configured directory configured with
`--srcdir=PATH/gdb-6.0'), you will build all the required libraries,
d364 1
a364 1
(`gdb-6.0', for version 6.0).
d465 1
d495 1
a495 1
gdb-6.0), and how you configured it (e.g., "sun4" or "mach386 host,
d550 1
a550 1
  (1)	cd gdb-6.0
d555 1
a555 1
  (2)	cd gdb-6.0/gdb
d560 1
a560 1
  (3)	cd gdb-6.0/gdb/testsuite
@


1.22.2.3
log
@2003-11-11  David Carlton  <carlton@@kealia.com>

	* Merge with mainline; tag is carlton-dictionary-20031111-merge.
@
text
@d465 1
a465 1
	remote-e7000.c	 Renesas E7000 ICE
d467 1
a467 1
	remote-hms.c	 Renesas Micro Systems H8/300 monitor
@


1.21
log
@Obsolete m88k.
@
text
@d1 2
a2 2
		     README for gdb-5.2.1 release
		Updated 19 July, 2002 by Andrew Cagney
d23 1
a23 1
underneath the gdb-5.2.1 directory.  The idea is that a variety of GNU
d32 2
a33 2
   When you unpack the gdb-5.2.1.tar.gz file, you'll find a directory
called `gdb-5.2.1', which contains:
d47 1
a47 1
      cd gdb-5.2.1
d61 1
a61 1
      <full path to your sources>/gdb-5.2.1/configure
d66 1
a66 1
different; see the file gdb-5.2.1/gdb/config/djgpp/README for details.)
d97 1
a97 1
`gdb-5.2.1/gdb/doc/gdb.info', and it refers to subordinate files
d109 1
a109 1
source directory (`gdb-5.2.1', in the case of version 5.2.1), you can make
d118 1
a118 1
distribution, in the directory `gdb-5.2.1/texinfo'.
d132 1
a132 1
`gdb-5.2.1/texinfo' directory.
d136 1
a136 1
the main source directory (for example, to `gdb-5.2.1/gdb') and then type:
d159 1
a159 1
   For example, the GDB version 5.2.1 distribution is in the `gdb-5.2.1'
d162 1
a162 1
`gdb-5.2.1/{COPYING,COPYING.LIB}'
d165 1
a165 1
`gdb-5.2.1/bfd'
d168 1
a168 1
`gdb-5.2.1/config*'
d171 1
a171 1
`gdb-5.2.1/gdb'
d174 1
a174 1
`gdb-5.2.1/include'
d177 1
a177 1
`gdb-5.2.1/libiberty'
d180 1
a180 1
`gdb-5.2.1/mmalloc'
d183 1
a183 1
`gdb-5.2.1/opcodes'
d186 1
a186 1
`gdb-5.2.1/readline'
d191 1
a191 1
`gdb-5.2.1/sim'
d194 1
a194 1
`gdb-5.2.1/intl'
d199 1
a199 1
`gdb-5.2.1/texinfo'
d203 1
a203 1
`gdb-5.2.1/etc'
d207 1
a207 1
`gdb-5.2.1/utils'
d216 1
a216 1
is the `gdb-5.2.1' directory.
d223 1
a223 1
      cd gdb-5.2.1
d239 2
a240 2
directories for multiple libraries or programs, such as the `gdb-5.2.1'
source directory for version 5.2.1, `configure' creates configuration
d248 1
a248 1
   For example, with version 5.2.1, type the following to configure only
d251 1
a251 1
      cd gdb-5.2.1/bfd
d280 1
a280 1
   For example, with version 5.2.1, you can build GDB in a separate
d283 1
a283 1
     cd gdb-5.2.1
d286 1
a286 1
     ../gdb-5.2.1/configure
d307 2
a308 2
as `gdb-5.2.1' (or in a separate configured directory configured with
`--srcdir=PATH/gdb-5.2.1'), you will build all the required libraries,
d351 1
a351 1
(`gdb-5.2.1', for version 5.2.1).
d498 1
a498 1
gdb-5.2.1), and how you configured it (e.g., "sun4" or "mach386 host,
d553 1
a553 1
  (1)	cd gdb-5.2.1
d558 1
a558 1
  (2)	cd gdb-5.2.1/gdb
d563 1
a563 1
  (3)	cd gdb-5.2.1/gdb/testsuite
@


1.21.6.1
log
@2002-09-05  Andrew Cagney  <ac131313@@redhat.com>

	* NEWS: Update for 5.3.  Add new section ``Changes since 5.3''.
	* README: Update.

Index: doc/ChangeLog
2002-09-05  Andrew Cagney  <ac131313@@redhat.com>

	* gdb.texinfo (Contributors): Mention 5.2 and 5.3 release
	engineer.
@
text
@d1 2
a2 2
		     README for gdb-5.3 release
		Updated 5th September, 2002 by Andrew Cagney
d23 1
a23 1
underneath the gdb-5.3 directory.  The idea is that a variety of GNU
d32 2
a33 2
   When you unpack the gdb-5.3.tar.gz file, you'll find a directory
called `gdb-5.3', which contains:
d47 1
a47 1
      cd gdb-5.3
d61 1
a61 1
      <full path to your sources>/gdb-5.3/configure
d66 1
a66 1
different; see the file gdb-5.3/gdb/config/djgpp/README for details.)
d97 1
a97 1
`gdb-5.3/gdb/doc/gdb.info', and it refers to subordinate files
d109 1
a109 1
source directory (`gdb-5.3', in the case of version 5.3), you can make
d118 1
a118 1
distribution, in the directory `gdb-5.3/texinfo'.
d132 1
a132 1
`gdb-5.3/texinfo' directory.
d136 1
a136 1
the main source directory (for example, to `gdb-5.3/gdb') and then type:
d159 1
a159 1
   For example, the GDB version 5.3 distribution is in the `gdb-5.3'
d162 1
a162 1
`gdb-5.3/{COPYING,COPYING.LIB}'
d165 1
a165 1
`gdb-5.3/bfd'
d168 1
a168 1
`gdb-5.3/config*'
d171 1
a171 1
`gdb-5.3/gdb'
d174 1
a174 1
`gdb-5.3/include'
d177 1
a177 1
`gdb-5.3/libiberty'
d180 1
a180 1
`gdb-5.3/mmalloc'
d183 1
a183 1
`gdb-5.3/opcodes'
d186 1
a186 1
`gdb-5.3/readline'
d191 1
a191 1
`gdb-5.3/sim'
d194 1
a194 1
`gdb-5.3/intl'
d199 1
a199 1
`gdb-5.3/texinfo'
d203 1
a203 1
`gdb-5.3/etc'
d207 1
a207 1
`gdb-5.3/utils'
d216 1
a216 1
is the `gdb-5.3' directory.
d223 1
a223 1
      cd gdb-5.3
d239 2
a240 2
directories for multiple libraries or programs, such as the `gdb-5.3'
source directory for version 5.3, `configure' creates configuration
d248 1
a248 1
   For example, with version 5.3, type the following to configure only
d251 1
a251 1
      cd gdb-5.3/bfd
d280 1
a280 1
   For example, with version 5.3, you can build GDB in a separate
d283 1
a283 1
     cd gdb-5.3
d286 1
a286 1
     ../gdb-5.3/configure
d307 2
a308 2
as `gdb-5.3' (or in a separate configured directory configured with
`--srcdir=PATH/gdb-5.3'), you will build all the required libraries,
d351 1
a351 1
(`gdb-5.3', for version 5.3).
d498 1
a498 1
gdb-5.3), and how you configured it (e.g., "sun4" or "mach386 host,
d553 1
a553 1
  (1)	cd gdb-5.3
d558 1
a558 1
  (2)	cd gdb-5.3/gdb
d563 1
a563 1
  (3)	cd gdb-5.3/gdb/testsuite
@


1.21.6.2
log
@2003-01-13  Andrew Cagney  <ac131313@@redhat.com>

	* README (Graphical interface to GDB): Update URL.  Point at
	gdb/links/.
@
text
@d515 1
a515 1
	http://www.gnu.org/software/gdb/links/
@


1.20
log
@Mention 5.2.1 on mainline.
@
text
@a453 1
	remote-bug.c	 Motorola BUG monitor
@


1.19
log
@* README: Update to GDB 5.2.
@
text
@d1 2
a2 2
		     README for gdb-5.2 release
		Updated 17 April, 2002 by Andrew Cagney
d23 1
a23 1
underneath the gdb-5.2 directory.  The idea is that a variety of GNU
d32 2
a33 2
   When you unpack the gdb-5.2.tar.gz file, you'll find a directory
called `gdb-5.2', which contains:
d47 1
a47 1
      cd gdb-5.2
d61 1
a61 1
      <full path to your sources>/gdb-5.2/configure
d66 1
a66 1
different; see the file gdb-5.2/gdb/config/djgpp/README for details.)
d97 1
a97 1
`gdb-5.2/gdb/doc/gdb.info', and it refers to subordinate files
d109 1
a109 1
source directory (`gdb-5.2', in the case of version 5.2), you can make
d118 1
a118 1
distribution, in the directory `gdb-5.2/texinfo'.
d132 1
a132 1
`gdb-5.2/texinfo' directory.
d136 1
a136 1
the main source directory (for example, to `gdb-5.2/gdb') and then type:
d159 1
a159 1
   For example, the GDB version 5.2 distribution is in the `gdb-5.2'
d162 1
a162 1
`gdb-5.2/{COPYING,COPYING.LIB}'
d165 1
a165 1
`gdb-5.2/bfd'
d168 1
a168 1
`gdb-5.2/config*'
d171 1
a171 1
`gdb-5.2/gdb'
d174 1
a174 1
`gdb-5.2/include'
d177 1
a177 1
`gdb-5.2/libiberty'
d180 1
a180 1
`gdb-5.2/mmalloc'
d183 1
a183 1
`gdb-5.2/opcodes'
d186 1
a186 1
`gdb-5.2/readline'
d191 1
a191 1
`gdb-5.2/sim'
d194 1
a194 1
`gdb-5.2/intl'
d199 1
a199 1
`gdb-5.2/texinfo'
d203 1
a203 1
`gdb-5.2/etc'
d207 1
a207 1
`gdb-5.2/utils'
d216 1
a216 1
is the `gdb-5.2' directory.
d223 1
a223 1
      cd gdb-5.2
d239 2
a240 2
directories for multiple libraries or programs, such as the `gdb-5.2'
source directory for version 5.2, `configure' creates configuration
d248 1
a248 1
   For example, with version 5.2, type the following to configure only
d251 1
a251 1
      cd gdb-5.2/bfd
d280 1
a280 1
   For example, with version 5.2, you can build GDB in a separate
d283 1
a283 1
     cd gdb-5.2
d286 1
a286 1
     ../gdb-5.2/configure
d307 2
a308 2
as `gdb-5.2' (or in a separate configured directory configured with
`--srcdir=PATH/gdb-5.2'), you will build all the required libraries,
d351 1
a351 1
(`gdb-5.2', for version 5.2).
d499 1
a499 1
gdb-5.2), and how you configured it (e.g., "sun4" or "mach386 host,
d554 1
a554 1
  (1)	cd gdb-5.2
d559 1
a559 1
  (2)	cd gdb-5.2/gdb
d564 1
a564 1
  (3)	cd gdb-5.2/gdb/testsuite
@


1.19.6.1
log
@Merge with kseitz_interps-20020809-merge of CVS head.
@
text
@d1 2
a2 2
		     README for gdb-5.2.1 release
		Updated 19 July, 2002 by Andrew Cagney
d23 1
a23 1
underneath the gdb-5.2.1 directory.  The idea is that a variety of GNU
d32 2
a33 2
   When you unpack the gdb-5.2.1.tar.gz file, you'll find a directory
called `gdb-5.2.1', which contains:
d47 1
a47 1
      cd gdb-5.2.1
d61 1
a61 1
      <full path to your sources>/gdb-5.2.1/configure
d66 1
a66 1
different; see the file gdb-5.2.1/gdb/config/djgpp/README for details.)
d97 1
a97 1
`gdb-5.2.1/gdb/doc/gdb.info', and it refers to subordinate files
d109 1
a109 1
source directory (`gdb-5.2.1', in the case of version 5.2.1), you can make
d118 1
a118 1
distribution, in the directory `gdb-5.2.1/texinfo'.
d132 1
a132 1
`gdb-5.2.1/texinfo' directory.
d136 1
a136 1
the main source directory (for example, to `gdb-5.2.1/gdb') and then type:
d159 1
a159 1
   For example, the GDB version 5.2.1 distribution is in the `gdb-5.2.1'
d162 1
a162 1
`gdb-5.2.1/{COPYING,COPYING.LIB}'
d165 1
a165 1
`gdb-5.2.1/bfd'
d168 1
a168 1
`gdb-5.2.1/config*'
d171 1
a171 1
`gdb-5.2.1/gdb'
d174 1
a174 1
`gdb-5.2.1/include'
d177 1
a177 1
`gdb-5.2.1/libiberty'
d180 1
a180 1
`gdb-5.2.1/mmalloc'
d183 1
a183 1
`gdb-5.2.1/opcodes'
d186 1
a186 1
`gdb-5.2.1/readline'
d191 1
a191 1
`gdb-5.2.1/sim'
d194 1
a194 1
`gdb-5.2.1/intl'
d199 1
a199 1
`gdb-5.2.1/texinfo'
d203 1
a203 1
`gdb-5.2.1/etc'
d207 1
a207 1
`gdb-5.2.1/utils'
d216 1
a216 1
is the `gdb-5.2.1' directory.
d223 1
a223 1
      cd gdb-5.2.1
d239 2
a240 2
directories for multiple libraries or programs, such as the `gdb-5.2.1'
source directory for version 5.2.1, `configure' creates configuration
d248 1
a248 1
   For example, with version 5.2.1, type the following to configure only
d251 1
a251 1
      cd gdb-5.2.1/bfd
d280 1
a280 1
   For example, with version 5.2.1, you can build GDB in a separate
d283 1
a283 1
     cd gdb-5.2.1
d286 1
a286 1
     ../gdb-5.2.1/configure
d307 2
a308 2
as `gdb-5.2.1' (or in a separate configured directory configured with
`--srcdir=PATH/gdb-5.2.1'), you will build all the required libraries,
d351 1
a351 1
(`gdb-5.2.1', for version 5.2.1).
d454 1
d499 1
a499 1
gdb-5.2.1), and how you configured it (e.g., "sun4" or "mach386 host,
d554 1
a554 1
  (1)	cd gdb-5.2.1
d559 1
a559 1
  (2)	cd gdb-5.2.1/gdb
d564 1
a564 1
  (3)	cd gdb-5.2.1/gdb/testsuite
@


1.19.6.2
log
@Merge with kseitz_interps-20020930-merge.
@
text
@d1 2
a2 2
		     README for gdb-5.3 release
		Updated 5th September, 2002 by Andrew Cagney
d23 1
a23 1
underneath the gdb-5.3 directory.  The idea is that a variety of GNU
d32 2
a33 2
   When you unpack the gdb-5.3.tar.gz file, you'll find a directory
called `gdb-5.3', which contains:
d47 1
a47 1
      cd gdb-5.3
d61 1
a61 1
      <full path to your sources>/gdb-5.3/configure
d66 1
a66 1
different; see the file gdb-5.3/gdb/config/djgpp/README for details.)
d97 1
a97 1
`gdb-5.3/gdb/doc/gdb.info', and it refers to subordinate files
d109 1
a109 1
source directory (`gdb-5.3', in the case of version 5.3), you can make
d118 1
a118 1
distribution, in the directory `gdb-5.3/texinfo'.
d132 1
a132 1
`gdb-5.3/texinfo' directory.
d136 1
a136 1
the main source directory (for example, to `gdb-5.3/gdb') and then type:
d159 1
a159 1
   For example, the GDB version 5.3 distribution is in the `gdb-5.3'
d162 1
a162 1
`gdb-5.3/{COPYING,COPYING.LIB}'
d165 1
a165 1
`gdb-5.3/bfd'
d168 1
a168 1
`gdb-5.3/config*'
d171 1
a171 1
`gdb-5.3/gdb'
d174 1
a174 1
`gdb-5.3/include'
d177 1
a177 1
`gdb-5.3/libiberty'
d180 1
a180 1
`gdb-5.3/mmalloc'
d183 1
a183 1
`gdb-5.3/opcodes'
d186 1
a186 1
`gdb-5.3/readline'
d191 1
a191 1
`gdb-5.3/sim'
d194 1
a194 1
`gdb-5.3/intl'
d199 1
a199 1
`gdb-5.3/texinfo'
d203 1
a203 1
`gdb-5.3/etc'
d207 1
a207 1
`gdb-5.3/utils'
d216 1
a216 1
is the `gdb-5.3' directory.
d223 1
a223 1
      cd gdb-5.3
d239 2
a240 2
directories for multiple libraries or programs, such as the `gdb-5.3'
source directory for version 5.3, `configure' creates configuration
d248 1
a248 1
   For example, with version 5.3, type the following to configure only
d251 1
a251 1
      cd gdb-5.3/bfd
d280 1
a280 1
   For example, with version 5.3, you can build GDB in a separate
d283 1
a283 1
     cd gdb-5.3
d286 1
a286 1
     ../gdb-5.3/configure
d307 2
a308 2
as `gdb-5.3' (or in a separate configured directory configured with
`--srcdir=PATH/gdb-5.3'), you will build all the required libraries,
d351 1
a351 1
(`gdb-5.3', for version 5.3).
d498 1
a498 1
gdb-5.3), and how you configured it (e.g., "sun4" or "mach386 host,
d553 1
a553 1
  (1)	cd gdb-5.3
d558 1
a558 1
  (2)	cd gdb-5.3/gdb
d563 1
a563 1
  (3)	cd gdb-5.3/gdb/testsuite
@


1.18
log
@* README (Reporting Bugs in GDB): Document the bug web page as the
prefered way of submitting bugs.
Fix PR gdb/402.

* gdb.texinfo (Bug Reporting): Document that the web is the
prefered way of submitting bug reports.
(Bug Reporting): Delete the s-mail address as the last resort.
@
text
@d1 2
a2 2
		     README for gdb-5.1.1 release
		Updated 23 January, 2002 by Andrew Cagney
d8 2
a9 2
The GDB home page at http://www.gnu.org/software/gdb/ for up to date
release information, mailing list links and archives, etc.
d23 1
a23 1
underneath the gdb-5.1.1 directory.  The idea is that a variety of GNU
d32 2
a33 2
   When you unpack the gdb-5.1.1.tar.gz file, you'll find a directory
called `gdb-5.1.1', which contains:
d47 1
a47 1
      cd gdb-5.1.1
d61 1
a61 1
      <full path to your sources>/gdb-5.1.1/configure
d66 1
a66 1
different; see the file gdb-5.1.1/gdb/config/djgpp/README for details.)
d97 1
a97 1
`gdb-5.1.1/gdb/doc/gdb.info', and it refers to subordinate files
d109 1
a109 1
source directory (`gdb-5.1.1', in the case of version 5.1.1), you can make
d118 1
a118 1
distribution, in the directory `gdb-5.1.1/texinfo'.
d132 1
a132 1
`gdb-5.1.1/texinfo' directory.
d136 1
a136 1
the main source directory (for example, to `gdb-5.1.1/gdb') and then type:
d159 1
a159 1
   For example, the GDB version 5.1.1 distribution is in the `gdb-5.1.1'
d162 1
a162 1
`gdb-5.1.1/{COPYING,COPYING.LIB}'
d165 1
a165 1
`gdb-5.1.1/bfd'
d168 1
a168 1
`gdb-5.1.1/config*'
d171 1
a171 1
`gdb-5.1.1/gdb'
d174 1
a174 1
`gdb-5.1.1/include'
d177 1
a177 1
`gdb-5.1.1/libiberty'
d180 1
a180 1
`gdb-5.1.1/mmalloc'
d183 1
a183 1
`gdb-5.1.1/opcodes'
d186 1
a186 1
`gdb-5.1.1/readline'
d191 1
a191 1
`gdb-5.1.1/sim'
d194 1
a194 1
`gdb-5.1.1/intl'
d199 1
a199 1
`gdb-5.1.1/texinfo'
d203 1
a203 1
`gdb-5.1.1/etc'
d207 1
a207 1
`gdb-5.1.1/utils'
d216 1
a216 1
is the `gdb-5.1.1' directory.
d223 1
a223 1
      cd gdb-5.1.1
d239 2
a240 2
directories for multiple libraries or programs, such as the `gdb-5.1.1'
source directory for version 5.1.1, `configure' creates configuration
d248 1
a248 1
   For example, with version 5.1.1, type the following to configure only
d251 1
a251 1
      cd gdb-5.1.1/bfd
d280 1
a280 1
   For example, with version 5.1.1, you can build GDB in a separate
d283 1
a283 1
     cd gdb-5.1.1
d286 1
a286 1
     ../gdb-5.1.1/configure
d307 2
a308 2
as `gdb-5.1.1' (or in a separate configured directory configured with
`--srcdir=PATH/gdb-5.1.1'), you will build all the required libraries,
d351 1
a351 1
(`gdb-5.1.1', for version 5.1.1).
d499 1
a499 1
gdb-5.1.1), and how you configured it (e.g., "sun4" or "mach386 host,
d554 1
a554 1
  (1)	cd gdb-5.1.1
d559 1
a559 1
  (2)	cd gdb-5.1.1/gdb
d564 1
a564 1
  (3)	cd gdb-5.1.1/gdb/testsuite
@


1.17
log
@s/cygnus.com/.../
@
text
@a4 1
A summary of new features is in the file `NEWS'.
d6 1
a6 2
See the GDB home page at http://www.gnu.org/software/gdb/ for up to
date release information, mailing list links and archives, etc.
d8 7
a14 1
See the file PROBLEMS for late breaking news.
d487 10
a496 2
Reporting Bugs
===============
d498 3
a500 5
   The correct address for reporting bugs found in gdb is
"bug-gdb@@gnu.org".  Please email all bugs, and all requests for help
with GDB, to that address.  Please include the GDB version number
(e.g., gdb-5.1.1), and how you configured it (e.g., "sun4" or "mach386
host, i586-intel-synopsys target").  Since GDB now supports so many
d506 2
a507 3
   For more information on how/whether to report bugs, see the GDB
Bugs section of the GDB manual (gdb/doc/gdb.texinfo) or the
gdb/CONTRIBUTE file.
@


1.17.2.1
log
@* README (Reporting Bugs in GDB): Document the bug web page as the
prefered way of submitting bugs.
Fix PR gdb/402.

* gdb.texinfo (Bug Reporting): Document that the web is the
prefered way of submitting bug reports.
(Bug Reporting): Delete the s-mail address as the last resort.
@
text
@d5 1
d7 2
a8 1
A summary of new features is in the file `gdb/NEWS'.
d10 1
a10 7
The GDB home page at http://www.gnu.org/software/gdb/ for up to date
release information, mailing list links and archives, etc.

The file `gdb/PROBLEMS' contains information on problems identified
late in the release cycle.  GDB's bug tracking data base at
http://www.gnu.org/software/gdb/bugs/ contains a more complete list of
bugs.
d483 2
a484 10
Reporting Bugs in GDB
=====================

   There are several ways of reporting bugs in GDB.  The prefered
method is to use the World Wide Web:

      http://www.gnu.org/software/gdb/bugs/

As an alternative, the bug report can be submitted, via e-mail, to the
address "bug-gdb@@gnu.org".
d486 5
a490 3
   When submitting a bug, please include the GDB version number (e.g.,
gdb-5.1.1), and how you configured it (e.g., "sun4" or "mach386 host,
i586-intel-synopsys target").  Since GDB now supports so many
d496 3
a498 2
   For more information on how/whether to report bugs, see the
Reporting Bugs chapter of the GDB manual (gdb/doc/gdb.texinfo).
@


1.17.2.2
log
@* README: Update to GDB 5.2.
@
text
@d1 2
a2 2
		     README for gdb-5.2 release
		Updated 17 April, 2002 by Andrew Cagney
d8 2
a9 2
Check the GDB home page at http://www.gnu.org/software/gdb/ for up to
date release information, mailing list links and archives, etc.
d23 1
a23 1
underneath the gdb-5.2 directory.  The idea is that a variety of GNU
d32 2
a33 2
   When you unpack the gdb-5.2.tar.gz file, you'll find a directory
called `gdb-5.2', which contains:
d47 1
a47 1
      cd gdb-5.2
d61 1
a61 1
      <full path to your sources>/gdb-5.2/configure
d66 1
a66 1
different; see the file gdb-5.2/gdb/config/djgpp/README for details.)
d97 1
a97 1
`gdb-5.2/gdb/doc/gdb.info', and it refers to subordinate files
d109 1
a109 1
source directory (`gdb-5.2', in the case of version 5.2), you can make
d118 1
a118 1
distribution, in the directory `gdb-5.2/texinfo'.
d132 1
a132 1
`gdb-5.2/texinfo' directory.
d136 1
a136 1
the main source directory (for example, to `gdb-5.2/gdb') and then type:
d159 1
a159 1
   For example, the GDB version 5.2 distribution is in the `gdb-5.2'
d162 1
a162 1
`gdb-5.2/{COPYING,COPYING.LIB}'
d165 1
a165 1
`gdb-5.2/bfd'
d168 1
a168 1
`gdb-5.2/config*'
d171 1
a171 1
`gdb-5.2/gdb'
d174 1
a174 1
`gdb-5.2/include'
d177 1
a177 1
`gdb-5.2/libiberty'
d180 1
a180 1
`gdb-5.2/mmalloc'
d183 1
a183 1
`gdb-5.2/opcodes'
d186 1
a186 1
`gdb-5.2/readline'
d191 1
a191 1
`gdb-5.2/sim'
d194 1
a194 1
`gdb-5.2/intl'
d199 1
a199 1
`gdb-5.2/texinfo'
d203 1
a203 1
`gdb-5.2/etc'
d207 1
a207 1
`gdb-5.2/utils'
d216 1
a216 1
is the `gdb-5.2' directory.
d223 1
a223 1
      cd gdb-5.2
d239 2
a240 2
directories for multiple libraries or programs, such as the `gdb-5.2'
source directory for version 5.2, `configure' creates configuration
d248 1
a248 1
   For example, with version 5.2, type the following to configure only
d251 1
a251 1
      cd gdb-5.2/bfd
d280 1
a280 1
   For example, with version 5.2, you can build GDB in a separate
d283 1
a283 1
     cd gdb-5.2
d286 1
a286 1
     ../gdb-5.2/configure
d307 2
a308 2
as `gdb-5.2' (or in a separate configured directory configured with
`--srcdir=PATH/gdb-5.2'), you will build all the required libraries,
d351 1
a351 1
(`gdb-5.2', for version 5.2).
d499 1
a499 1
gdb-5.2), and how you configured it (e.g., "sun4" or "mach386 host,
d554 1
a554 1
  (1)	cd gdb-5.2
d559 1
a559 1
  (2)	cd gdb-5.2/gdb
d564 1
a564 1
  (3)	cd gdb-5.2/gdb/testsuite
@


1.17.2.3
log
@GDB 5.2.1
@
text
@d1 2
a2 2
		     README for gdb-5.2.1 release
		Updated 19 July, 2002 by Andrew Cagney
d23 1
a23 1
underneath the gdb-5.2.1 directory.  The idea is that a variety of GNU
d32 2
a33 2
   When you unpack the gdb-5.2.1.tar.gz file, you'll find a directory
called `gdb-5.2.1', which contains:
d47 1
a47 1
      cd gdb-5.2.1
d61 1
a61 1
      <full path to your sources>/gdb-5.2.1/configure
d66 1
a66 1
different; see the file gdb-5.2.1/gdb/config/djgpp/README for details.)
d97 1
a97 1
`gdb-5.2.1/gdb/doc/gdb.info', and it refers to subordinate files
d109 1
a109 1
source directory (`gdb-5.2.1', in the case of version 5.2.1), you can make
d118 1
a118 1
distribution, in the directory `gdb-5.2.1/texinfo'.
d132 1
a132 1
`gdb-5.2.1/texinfo' directory.
d136 1
a136 1
the main source directory (for example, to `gdb-5.2.1/gdb') and then type:
d159 1
a159 1
   For example, the GDB version 5.2.1 distribution is in the `gdb-5.2.1'
d162 1
a162 1
`gdb-5.2.1/{COPYING,COPYING.LIB}'
d165 1
a165 1
`gdb-5.2.1/bfd'
d168 1
a168 1
`gdb-5.2.1/config*'
d171 1
a171 1
`gdb-5.2.1/gdb'
d174 1
a174 1
`gdb-5.2.1/include'
d177 1
a177 1
`gdb-5.2.1/libiberty'
d180 1
a180 1
`gdb-5.2.1/mmalloc'
d183 1
a183 1
`gdb-5.2.1/opcodes'
d186 1
a186 1
`gdb-5.2.1/readline'
d191 1
a191 1
`gdb-5.2.1/sim'
d194 1
a194 1
`gdb-5.2.1/intl'
d199 1
a199 1
`gdb-5.2.1/texinfo'
d203 1
a203 1
`gdb-5.2.1/etc'
d207 1
a207 1
`gdb-5.2.1/utils'
d216 1
a216 1
is the `gdb-5.2.1' directory.
d223 1
a223 1
      cd gdb-5.2.1
d239 2
a240 2
directories for multiple libraries or programs, such as the `gdb-5.2.1'
source directory for version 5.2.1, `configure' creates configuration
d248 1
a248 1
   For example, with version 5.2.1, type the following to configure only
d251 1
a251 1
      cd gdb-5.2.1/bfd
d280 1
a280 1
   For example, with version 5.2.1, you can build GDB in a separate
d283 1
a283 1
     cd gdb-5.2.1
d286 1
a286 1
     ../gdb-5.2.1/configure
d307 2
a308 2
as `gdb-5.2.1' (or in a separate configured directory configured with
`--srcdir=PATH/gdb-5.2.1'), you will build all the required libraries,
d351 1
a351 1
(`gdb-5.2.1', for version 5.2.1).
d499 1
a499 1
gdb-5.2.1), and how you configured it (e.g., "sun4" or "mach386 host,
d554 1
a554 1
  (1)	cd gdb-5.2.1
d559 1
a559 1
  (2)	cd gdb-5.2.1/gdb
d564 1
a564 1
  (3)	cd gdb-5.2.1/gdb/testsuite
@


1.16
log
@Merge in 5.1.1 tweeks.
@
text
@d507 1
a507 1
	http://sourceware.cygnus.com/gdb/#gui
d541 3
a543 3
ftp://sourceware.cygnus.com/pub/dejagnu/ will contain a recent
snapshot.  Once DejaGNU is installed, you can run the tests in one of
the following ways:
@


1.15
log
@From 2002-01-09 John Marshall <johnm@@falch.net>:
* CONTRIBUTE, README, TODO: Change sourceware.cygnus.com to
sources.redhat.com, and tweak some related URLs which had
suffered from linkrot.
@
text
@d1 2
a2 2
		     README for gdb-5.1 release
		Updated 11 November 2001 by Andrew Cagney
d19 1
a19 1
underneath the gdb-5.1 directory.  The idea is that a variety of GNU
d28 2
a29 2
   When you unpack the gdb-5.1.tar.gz file, you'll find a directory
called `gdb-5.1', which contains:
d43 1
a43 1
      cd gdb-5.1
d57 1
a57 1
      <full path to your sources>/gdb-5.1/configure
d62 1
a62 1
different; see the file gdb-5.1/gdb/config/djgpp/README for details.)
d93 1
a93 1
`gdb-5.1/gdb/doc/gdb.info', and it refers to subordinate files
d105 1
a105 1
source directory (`gdb-5.1', in the case of version 5.1), you can make
d114 1
a114 1
distribution, in the directory `gdb-5.1/texinfo'.
d128 1
a128 1
`gdb-5.1/texinfo' directory.
d132 1
a132 1
the main source directory (for example, to `gdb-5.1/gdb') and then type:
d155 1
a155 1
   For example, the GDB version 5.1 distribution is in the `gdb-5.1'
d158 1
a158 1
`gdb-5.1/{COPYING,COPYING.LIB}'
d161 1
a161 1
`gdb-5.1/bfd'
d164 1
a164 1
`gdb-5.1/config*'
d167 1
a167 1
`gdb-5.1/gdb'
d170 1
a170 1
`gdb-5.1/include'
d173 1
a173 1
`gdb-5.1/libiberty'
d176 1
a176 1
`gdb-5.1/mmalloc'
d179 1
a179 1
`gdb-5.1/opcodes'
d182 1
a182 1
`gdb-5.1/readline'
d187 1
a187 1
`gdb-5.1/sim'
d190 1
a190 1
`gdb-5.1/intl'
d195 1
a195 1
`gdb-5.1/texinfo'
d199 1
a199 1
`gdb-5.1/etc'
d203 1
a203 1
`gdb-5.1/utils'
d212 1
a212 1
is the `gdb-5.1' directory.
d219 1
a219 1
      cd gdb-5.1
d235 2
a236 2
directories for multiple libraries or programs, such as the `gdb-5.1'
source directory for version 5.1, `configure' creates configuration
d244 1
a244 1
   For example, with version 5.1, type the following to configure only
d247 1
a247 1
      cd gdb-5.1/bfd
d276 1
a276 1
   For example, with version 5.1, you can build GDB in a separate
d279 1
a279 1
     cd gdb-5.1
d282 1
a282 1
     ../gdb-5.1/configure
d303 2
a304 2
as `gdb-5.1' (or in a separate configured directory configured with
`--srcdir=PATH/gdb-5.1'), you will build all the required libraries,
d347 1
a347 1
(`gdb-5.1', for version 5.1).
d489 1
a489 1
(e.g., gdb-5.1), and how you configured it (e.g., "sun4" or "mach386
d507 1
a507 1
	http://www.gnu.org/software/gdb/gui/
d541 1
a541 1
ftp://sources.redhat.com/pub/dejagnu/ will contain a recent
d545 1
a545 1
  (1)	cd gdb-5.1
d550 1
a550 1
  (2)	cd gdb-5.1/gdb
d555 1
a555 1
  (3)	cd gdb-5.1/gdb/testsuite
@


1.14
log
@PROBLEMS.
@
text
@d507 1
a507 1
	http://sourceware.cygnus.com/gdb/#gui
d541 1
a541 1
ftp://sourceware.cygnus.com/pub/dejagnu/ will contain a recent
@


1.13
log
@doco more build probs.
@
text
@d10 2
a429 50


Host/target specific installation notes
=======================================

hppa2.0-hp-hpux10.20

Due to a problem (conflicting types) with libiberty/regex.c, GDB 5.1
does not build on HP/UX 10.20 when using the HP supplied compiler.

Due to bit rot, GDB 5.1 does not work on HP/UX 10.20 when built with
GCC.


hppa2.0w-hp-hpux11.00

Due to a problem with ltconfig and long argument lines, GDB 5.1 does
not configure on HP/UX 11.00.


alpha-dec-osf5.1

GDB 5.1 has a number of problems on this platform (Ref PR gdb/237).  A
GDB 5.1 built with ``CC="cc -DUSE_LDR_ROUTINES"'' is reported to work
much better.


alpha-dec-osf4.0e

GDB 5.1 is known to have problems on this platform (encounters an
internal error in the symbol table reader).


sparcv9-sun-solaris2.8

There are known problems with building GDB 5.1 using GCC 3.0.x for the
64 bit SPARC target (bad code gen).  You could try a development
version of GCC.


i586-sco-sysv5uw7.1.1

There are known problems with GDB 5.1's thread support on this
platform.  Non-threaded programs should work.


*-*-*

GDB 5.1 assumes that the host C compiler implemends alloca().  GCC is
one such compiler.  This problem should be fixed on the trunk.
@


1.12
log
@* README (alpha-dec-osf5.1): Mention -DUSE_LDR_ROUTINES.
(sparcv9-sun-solars2.8): Mention problem with 64 bit GCC 3.0.x.
(i586-sco-sysv5uw7.1.1): Mention problem with threads.
@
text
@d435 2
a436 2
Due to a problem with libiberty/regex.c, GDB does not build on HP/UX
10.20 when using the HP supplied compiler.
d438 2
a439 2
Due to bit rot problems, GDB does not work on HP/UX 10.20 when built
with GCC.
d444 2
a445 2
Due to a problem with ltconfig and long argument lines, GDB does not
configure on HP/UX 11.00.
d450 9
a458 3
GDB has a number of problems on this platform (Ref PR gdb/237).  A GDB
built with ``CC="cc -DUSE_LDR_ROUTINES"'' is reported to be more
reliable.
d463 3
a465 2
There are known problems with GCC 3.0.x for the 64 bit sparc target
(bad code gen).  You could try a development version of GCC.
d470 8
a477 1
There are known problems with GDB's thread support on this platform.
@


1.11
log
@Doco problem with alpha-dec-osf5.1.
@
text
@d2 1
a2 1
		Updated 20 October 2001 by Andrew Cagney
d450 14
a463 2
Due to a problem in GDB's symbol table reader, GDB builds but does not
run on this platform.  See gdb/237.
@


1.10
log
@Update README and NEWS to 5.1.
@
text
@d448 6
@


1.9
log
@* README: Mention problems with HP/UX.
@
text
@d1 2
a2 2
		     README for gdb-5.0 release
		Updated 11 May 2000 by Andrew Cagney
d7 1
a7 1
See the GDB home page at http://sourceware.cygnus.com/gdb/ for up to
d17 1
a17 1
underneath the gdb-5.0 directory.  The idea is that a variety of GNU
d20 2
a21 2
a release other than the gdb release (such as a binutils or gas
release), especially if the releases are more than a few weeks apart.
d26 2
a27 2
   When you unpack the gdb-5.0.tar.gz file, you'll find a directory
called `gdb-5.0', which contains:
d29 9
a37 8
  COPYING       config.if     install-sh     mmalloc         readline
  COPYING.LIB   config.sub    intl           move-if-change  sim
  Makefile.in   configure     libiberty      mpw-README      symlink-tree
  README        configure.in  ltconfig       mpw-build.in    texinfo
  bfd           djunpack.bat  ltmain.sh      mpw-config.in   utils
  config        etc           md5.sum        mpw-configure   ylwrap
  config-ml.in  gdb           missing        mpw-install
  config.guess  include       mkinstalldirs  opcodes
d41 4
a44 4
	cd gdb-5.0
	./configure
	make
	cp gdb/gdb /usr/local/bin/gdb	(or wherever you want)
d53 5
a57 5
     
     mkdir build
     cd build
     <full path to your sources>/gdb-5.0/configure
     make
d60 1
a60 1
different; see the file gdb-5.0/gdb/config/djgpp/README for details.)
d69 4
a72 4
   GDB requires an ISO-C (ANSI C) compiler.  If you do not have an
ISO-C compiler for your system, you may be able to download and
install the GNU CC compiler.  It is available via anonymous FTP from
the directory `ftp://ftp.gnu.org/pub/gnu/gcc'.
d91 1
a91 1
`gdb-5.0/gdb/doc/gdb.info', and it refers to subordinate files
d103 1
a103 1
source directory (`gdb-5.0', in the case of version 5.0), you can make
d106 2
a107 2
     cd gdb/doc
     make info
d112 1
a112 1
distribution, in the directory `gdb-5.0/texinfo'.
d126 1
a126 1
`gdb-5.0/texinfo' directory.
d130 1
a130 1
the main source directory (for example, to `gdb-5.0/gdb') and then type:
d132 1
a132 1
     make doc/gdb.dvi
d137 1
a137 1
     make gdb.pdf
d153 1
a153 1
   For example, the GDB version 5.0 distribution is in the `gdb-5.0'
d156 1
a156 1
`gdb-5.0/{COPYING,COPYING.LIB}'
d159 1
a159 1
`gdb-5.0/bfd'
d162 1
a162 1
`gdb-5.0/config*'
d165 1
a165 1
`gdb-5.0/gdb'
d168 1
a168 1
`gdb-5.0/include'
d171 1
a171 1
`gdb-5.0/libiberty'
d174 1
a174 1
`gdb-5.0/mmalloc'
d177 1
a177 1
`gdb-5.0/opcodes'
d180 1
a180 1
`gdb-5.0/readline'
d185 1
a185 1
`gdb-5.0/sim'
d188 1
a188 1
`gdb-5.0/intl'
d193 1
a193 1
`gdb-5.0/texinfo'
d197 1
a197 1
`gdb-5.0/etc'
d201 1
a201 1
`gdb-5.0/utils'
d210 1
a210 1
is the `gdb-5.0' directory.
d217 3
a219 3
     cd gdb-5.0
     ./configure
     make
d230 1
a230 1
     sh configure
d233 2
a234 2
directories for multiple libraries or programs, such as the `gdb-5.0'
source directory for version 5.0, `configure' creates configuration
d242 1
a242 1
   For example, with version 5.0, type the following to configure only
d245 2
a246 2
     cd gdb-5.0/bfd
     ../configure
d274 1
a274 1
   For example, with version 5.0, you can build GDB in a separate
d277 1
a277 1
     cd gdb-5.0
d280 1
a280 1
     ../gdb-5.0/configure
d301 2
a302 2
as `gdb-5.0' (or in a separate configured directory configured with
`--srcdir=PATH/gdb-5.0'), you will build all the required libraries,
d345 1
a345 1
(`gdb-5.0', for version 5.0).
d505 1
a505 1
(e.g., gdb-5.0), and how you configured it (e.g., "sun4" or "mach386
d561 1
a561 1
  (1)	cd gdb-5.0
d566 1
a566 1
  (2)	cd gdb-5.0/gdb
d571 1
a571 1
  (3)	cd gdb-5.0/gdb/testsuite
@


1.8
log
@* README (Known bugs): Delete section.
(Kernel debugging): Delete section.
(Languages other than C): Delete section.
(Host/target specific installation notes) New section.
@
text
@d432 1
a432 1
solaris??-64-???
d434 11
a444 1
Something goes here on how to set up a 64 bit build.
@


1.8.2.1
log
@* README: Mention problems with HP/UX.
@
text
@d432 1
a432 1
hppa2.0-hp-hpux10.20
d434 1
a434 11
Due to a problem with libiberty/regex.c, GDB does not build on HP/UX
10.20 when using the HP supplied compiler.

Due to bit rot problems, GDB does not work on HP/UX 10.20 when built
with GCC.


hppa2.0w-hp-hpux11.00

Due to a problem with ltconfig and long argument lines, GDB does not
configure on HP/UX 11.00.
@


1.8.2.2
log
@Update README and NEWS to 5.1.
@
text
@d1 2
a2 2
		     README for gdb-5.1 release
		Updated 20 October 2001 by Andrew Cagney
d7 1
a7 1
See the GDB home page at http://www.gnu.org/software/gdb/ for up to
d17 1
a17 1
underneath the gdb-5.1 directory.  The idea is that a variety of GNU
d20 2
a21 2
a release other than the gdb release (such as a binutils release),
especially if the releases are more than a few weeks apart.
d26 2
a27 2
   When you unpack the gdb-5.1.tar.gz file, you'll find a directory
called `gdb-5.1', which contains:
d29 8
a36 9
  COPYING       config.sub    intl         missing         opcodes
  COPYING.LIB   configure     libiberty    mkinstalldirs   readline
  Makefile.in   configure.in  libtool.m4   mmalloc         sim
  README        djunpack.bat  ltcf-c.sh    move-if-change  symlink-tree
  bfd           etc           ltcf-cxx.sh  mpw-README      texinfo
  config        gdb           ltcf-gcj.sh  mpw-build.in    utils
  config-ml.in  gettext.m4    ltconfig     mpw-config.in   ylwrap
  config.guess  include       ltmain.sh    mpw-configure
  config.if     install-sh    md5.sum      mpw-install
d40 4
a43 4
      cd gdb-5.1
      ./configure
      make
      cp gdb/gdb /usr/local/bin/gdb	(or wherever you want)
d52 5
a56 5
      mkdir build
      cd build
      <full path to your sources>/gdb-5.1/configure
      make
      cp gdb/gdb /usr/local/bin/gdb	(or wherever you want)
d59 1
a59 1
different; see the file gdb-5.1/gdb/config/djgpp/README for details.)
d68 4
a71 4
   GDB requires an ISO C (ANSI C) compiler.  If you do not have an ISO
C compiler for your system, you may be able to download and install
the GNU CC compiler.  It is available via anonymous FTP from the
directory `ftp://ftp.gnu.org/pub/gnu/gcc'.
d90 1
a90 1
`gdb-5.1/gdb/doc/gdb.info', and it refers to subordinate files
d102 1
a102 1
source directory (`gdb-5.1', in the case of version 5.1), you can make
d105 2
a106 2
      cd gdb/doc
      make info
d111 1
a111 1
distribution, in the directory `gdb-5.1/texinfo'.
d125 1
a125 1
`gdb-5.1/texinfo' directory.
d129 1
a129 1
the main source directory (for example, to `gdb-5.1/gdb') and then type:
d131 1
a131 1
      make doc/gdb.dvi
d136 1
a136 1
      make gdb.pdf
d152 1
a152 1
   For example, the GDB version 5.1 distribution is in the `gdb-5.1'
d155 1
a155 1
`gdb-5.1/{COPYING,COPYING.LIB}'
d158 1
a158 1
`gdb-5.1/bfd'
d161 1
a161 1
`gdb-5.1/config*'
d164 1
a164 1
`gdb-5.1/gdb'
d167 1
a167 1
`gdb-5.1/include'
d170 1
a170 1
`gdb-5.1/libiberty'
d173 1
a173 1
`gdb-5.1/mmalloc'
d176 1
a176 1
`gdb-5.1/opcodes'
d179 1
a179 1
`gdb-5.1/readline'
d184 1
a184 1
`gdb-5.1/sim'
d187 1
a187 1
`gdb-5.1/intl'
d192 1
a192 1
`gdb-5.1/texinfo'
d196 1
a196 1
`gdb-5.1/etc'
d200 1
a200 1
`gdb-5.1/utils'
d209 1
a209 1
is the `gdb-5.1' directory.
d216 3
a218 3
      cd gdb-5.1
      ./configure
      make
d229 1
a229 1
      sh configure
d232 2
a233 2
directories for multiple libraries or programs, such as the `gdb-5.1'
source directory for version 5.1, `configure' creates configuration
d241 1
a241 1
   For example, with version 5.1, type the following to configure only
d244 2
a245 2
      cd gdb-5.1/bfd
      ../configure
d273 1
a273 1
   For example, with version 5.1, you can build GDB in a separate
d276 1
a276 1
     cd gdb-5.1
d279 1
a279 1
     ../gdb-5.1/configure
d300 2
a301 2
as `gdb-5.1' (or in a separate configured directory configured with
`--srcdir=PATH/gdb-5.1'), you will build all the required libraries,
d344 1
a344 1
(`gdb-5.1', for version 5.1).
d504 1
a504 1
(e.g., gdb-5.1), and how you configured it (e.g., "sun4" or "mach386
d560 1
a560 1
  (1)	cd gdb-5.1
d565 1
a565 1
  (2)	cd gdb-5.1/gdb
d570 1
a570 1
  (3)	cd gdb-5.1/gdb/testsuite
@


1.8.2.3
log
@* README: Mention problem with alpha-dec-osf5.1.
@
text
@a447 6
alpha-dec-osf5.1

Due to a problem in GDB's symbol table reader, GDB builds but does not
run on this platform.  See gdb/237.


@


1.8.2.4
log
@* README (alpha-dec-osf5.1): Mention -DUSE_LDR_ROUTINES.
(sparcv9-sun-solars2.8): Mention problem with 64 bit GCC 3.0.x.
(i586-sco-sysv5uw7.1.1): Mention problem with threads.
@
text
@d2 1
a2 1
		Updated 11 November 2001 by Andrew Cagney
d450 2
a451 14
GDB has a number of problems on this platform (Ref PR gdb/237).  A GDB
built with ``CC="cc -DUSE_LDR_ROUTINES"'' is reported to be more
reliable.


sparcv9-sun-solaris2.8

There are known problems with GCC 3.0.x for the 64 bit sparc target
(bad code gen).  You could try a development version of GCC.


i586-sco-sysv5uw7.1.1

There are known problems with GDB's thread support on this platform.
@


1.8.2.5
log
@Doco more build probs.
@
text
@d435 2
a436 2
Due to a problem (conflicting types) with libiberty/regex.c, GDB 5.1
does not build on HP/UX 10.20 when using the HP supplied compiler.
d438 2
a439 2
Due to bit rot, GDB 5.1 does not work on HP/UX 10.20 when built with
GCC.
d444 2
a445 2
Due to a problem with ltconfig and long argument lines, GDB 5.1 does
not configure on HP/UX 11.00.
d450 3
a452 9
GDB 5.1 has a number of problems on this platform (Ref PR gdb/237).  A
GDB 5.1 built with ``CC="cc -DUSE_LDR_ROUTINES"'' is reported to work
much better.


alpha-dec-osf4.0e

GDB 5.1 is known to have problems on this platform (encounters an
internal error in the symbol table reader).
d457 2
a458 3
There are known problems with building GDB 5.1 using GCC 3.0.x for the
64 bit SPARC target (bad code gen).  You could try a development
version of GCC.
d463 1
a463 8
There are known problems with GDB 5.1's thread support on this
platform.  Non-threaded programs should work.


*-*-*

GDB 5.1 assumes that the host C compiler implemends alloca().  GCC is
one such compiler.  This problem should be fixed on the trunk.
@


1.8.2.6
log
@New FILE - problems.
@
text
@a9 2
See the file PROBLEMS for late breaking news.

d428 50
@


1.8.2.7
log
@5.1.1 released.
@
text
@d1 2
a2 2
		     README for gdb-5.1.1 release
		Updated 23 January, 2002 by Andrew Cagney
d19 1
a19 1
underneath the gdb-5.1.1 directory.  The idea is that a variety of GNU
d28 2
a29 2
   When you unpack the gdb-5.1.1.tar.gz file, you'll find a directory
called `gdb-5.1.1', which contains:
d43 1
a43 1
      cd gdb-5.1.1
d57 1
a57 1
      <full path to your sources>/gdb-5.1.1/configure
d62 1
a62 1
different; see the file gdb-5.1.1/gdb/config/djgpp/README for details.)
d93 1
a93 1
`gdb-5.1.1/gdb/doc/gdb.info', and it refers to subordinate files
d105 1
a105 1
source directory (`gdb-5.1.1', in the case of version 5.1.1), you can make
d114 1
a114 1
distribution, in the directory `gdb-5.1.1/texinfo'.
d128 1
a128 1
`gdb-5.1.1/texinfo' directory.
d132 1
a132 1
the main source directory (for example, to `gdb-5.1.1/gdb') and then type:
d155 1
a155 1
   For example, the GDB version 5.1.1 distribution is in the `gdb-5.1.1'
d158 1
a158 1
`gdb-5.1.1/{COPYING,COPYING.LIB}'
d161 1
a161 1
`gdb-5.1.1/bfd'
d164 1
a164 1
`gdb-5.1.1/config*'
d167 1
a167 1
`gdb-5.1.1/gdb'
d170 1
a170 1
`gdb-5.1.1/include'
d173 1
a173 1
`gdb-5.1.1/libiberty'
d176 1
a176 1
`gdb-5.1.1/mmalloc'
d179 1
a179 1
`gdb-5.1.1/opcodes'
d182 1
a182 1
`gdb-5.1.1/readline'
d187 1
a187 1
`gdb-5.1.1/sim'
d190 1
a190 1
`gdb-5.1.1/intl'
d195 1
a195 1
`gdb-5.1.1/texinfo'
d199 1
a199 1
`gdb-5.1.1/etc'
d203 1
a203 1
`gdb-5.1.1/utils'
d212 1
a212 1
is the `gdb-5.1.1' directory.
d219 1
a219 1
      cd gdb-5.1.1
d235 2
a236 2
directories for multiple libraries or programs, such as the `gdb-5.1.1'
source directory for version 5.1.1, `configure' creates configuration
d244 1
a244 1
   For example, with version 5.1.1, type the following to configure only
d247 1
a247 1
      cd gdb-5.1.1/bfd
d276 1
a276 1
   For example, with version 5.1.1, you can build GDB in a separate
d279 1
a279 1
     cd gdb-5.1.1
d282 1
a282 1
     ../gdb-5.1.1/configure
d303 2
a304 2
as `gdb-5.1.1' (or in a separate configured directory configured with
`--srcdir=PATH/gdb-5.1.1'), you will build all the required libraries,
d347 1
a347 1
(`gdb-5.1.1', for version 5.1.1).
d489 1
a489 1
(e.g., gdb-5.1.1), and how you configured it (e.g., "sun4" or "mach386
d545 1
a545 1
  (1)	cd gdb-5.1.1
d550 1
a550 1
  (2)	cd gdb-5.1.1/gdb
d555 1
a555 1
  (3)	cd gdb-5.1.1/gdb/testsuite
@


1.7
log
@Mention how to make the PDF version of the manual.
@
text
@d429 2
a430 2
Languages other than C
=======================
d432 1
a432 1
See the GDB manual (gdb/doc/gdb.texinfo) for information on this.
d434 1
a434 7

Kernel debugging
=================

   Remote debugging over serial lines works fine, but the kernel
debugging code in here has not been tested in years.  Van Jacobson has
better kernel debugging, but the UC lawyers won't let FSF have it.
a503 62

Known bugs:

  * Under Ultrix 4.2 (DECstation-3100) or Alphas under OSF/1, we have
    seen problems with backtraces after interrupting the inferior out
    of a read().  The problem is caused by ptrace() returning an
    incorrect value for the frame pointer register (register 15 or
    30).  As far as we can tell, this is a kernel problem.  Any help
    with this would be greatly appreciated.

  * Under Ultrix 4.4 (DECstation-3100), setting the TERMCAP environment
    variable to a string without a trailing ':' can cause GDB to dump
    core upon startup.  Although the core file makes it look as though
    GDB code failed, the crash actually occurs within a call to the
    termcap library function tgetent().  The problem can be solved by
    using the GNU Termcap library.

    Alphas running OSF/1 (versions 1.0 through 2.1) have the same buggy
    termcap code, but GDB behaves strangely rather than crashing.

  * On DECstations there are warnings about shift counts out of range in
    various BFD modules.  None of them is a cause for alarm, they are actually
    a result of bugs in the DECstation compiler.

  * Notes for the DEC Alpha using OSF/1:
    The debugging output of native cc has two known problems; we view these
    as compiler bugs.
    The linker miscompacts symbol tables, which causes gdb to confuse the
    type of variables or results in `struct <illegal>' type outputs.
    dbx has the same problems with those executables.  A workaround is to
    specify -Wl,-b when linking, but that will increase the executable size
    considerably.
    If a structure has incomplete type in one file (e.g., "struct foo *"
    without a definition for "struct foo"), gdb will be unable to find the
    structure definition from another file.
    It has been reported that the Ultrix 4.3A compiler on decstations has the
    same problems.

  * Notes for Solaris 2.x, using the SPARCworks cc compiler:
    You have to compile your program with the -xs option of the SPARCworks
    compiler to be able to debug your program with gdb.
    Under Solaris 2.3 you also need patch 101409-03 (Jumbo linker patch).
    Under Solaris 2.2, if you have patch 101052 installed, make sure
    that it is at least at revision 101052-06.

  * Under Irix 5 for SGIs, you must have installed the `compiler_dev.hdr'
    subsystem that is on the IDO CD, otherwise you will get complaints
    that certain files such as `/usr/include/syms.h' cannot be found.

  * Under Irix 6 you must build with GCC.  The vendor compiler reports
    as errors certain assignments that GCC considers to be warnings.
  
   GDB can produce warnings about symbols that it does not understand.
By default, these warnings are disabled.  You can enable them by
executing `set complaint 10' (which you can put in your ~/.gdbinit if
you like).  I recommend doing this if you are working on a compiler,
assembler, linker, or GDB, since it will point out problems that you
may be able to fix.  Warnings produced during symbol reading indicate
some mismatch between the object file and GDB's symbol reading code.
In many cases, it's a mismatch between the specs for the object file
format, and what the compiler actually outputs or the debugger
actually understands.
@


1.6
log
@	* README: Don't mention gdba.el.
@
text
@d131 8
a138 1
     make gdb.dvi
@


1.5
log
@2000-12-22  Fernando Nasser  <fnasser@@redhat.com>

        * README: Suggest building in an empty directory.
@
text
@d578 1
a578 3
try typing `M-x gdb RET'.  Those interested in experimenting with a
new kind of gdb-mode should load gdb/gdba.el into GNU Emacs 19.25 or
later.  Comments on this mode are also welcome.
@


1.4
log
@Update section on kernel debugging.
@
text
@d38 1
a38 1
To build GDB, you can just do:
d44 13
@


1.3
log
@Update README file to 5.0.
@
text
@d418 1
a418 2
   I have't done this myself so I can't really offer any advice.
Remote debugging over serial lines works fine, but the kernel
@


1.2
log
@	* README: Mention special build instructions for DJGPP.
	* NEWS: Update with FP features on x87 platforms, and
	DJGPP-related changes.
@
text
@d1 2
a2 2
		     README for gdb-4.18 release
		   Updated 4 Apr 1999 by Jim Blandy
d14 1
a14 1
In this release, the GDB debugger sources, the generic GNU include
d17 1
a17 1
underneath the gdb-4.18 directory.  The idea is that a variety of GNU
d26 2
a27 2
When you unpack the gdb-4.18.tar.gz file, you'll find a directory
called `gdb-4.18', which contains:
d29 8
a36 7
  COPYING          config.sub*      libiberty/       opcodes/
  COPYING.LIB      configure*       mmalloc/         readline/
  Makefile.in      configure.in     move-if-change*  sim/
  README           etc/             mpw-README       texinfo/
  bfd/             gdb/             mpw-build.in     utils/
  config/          include/         mpw-config.in
  config.guess*    install.sh*      mpw-configure
d40 1
a40 1
	cd gdb-4.18
d46 1
a46 1
different; see the file gdb/config/djgpp/README for details.)
d48 15
a62 14
This will configure and build all the libraries as well as GDB.
If `configure' can't determine your system type, specify one as its
argument, e.g., sun4 or decstation.

If you get compiler warnings during this stage, see the `Reporting Bugs'
section below; there are a few known problems.

GDB requires an ANSI C compiler.  If you do not have an ANSI C
compiler for your system, you may be able to download and install the
GNU CC compiler.  It is available via anonymous FTP from ftp.gnu.org,
in /pub/gnu/gcc (as a URL, that's ftp://ftp.gnu.org/pub/gnu/gcc).

GDB can be used as a cross-debugger, running on a machine of one type
while debugging a program running on a machine of another type.  See below.
d69 14
a82 13
distribution.  The documentation is written in Texinfo format, which is
a documentation system that uses a single source file to produce both
on-line information and a printed manual.  You can use one of the Info
formatting commands to create the on-line version of the documentation
and TeX (or `texi2roff') to typeset the printed version.

   GDB includes an already formatted copy of the on-line Info version of
this manual in the `gdb/doc' subdirectory.  The main Info file is
`gdb-4.18/gdb/doc/gdb.info', and it refers to subordinate files matching
`gdb.info*' in the same directory.  If necessary, you can print out
these files, or read them with any editor; but they are easier to read
using the `info' subsystem in GNU Emacs or the standalone `info' program,
available as part of the GNU Texinfo distribution.
d89 1
a89 1
source directory (`gdb-4.18', in the case of version 4.18), you can make
d98 1
a98 1
distribution, in the directory `gdb-4.18/texinfo'.
d112 1
a112 1
`gdb-4.18/texinfo' directory.
d116 1
a116 1
the main source directory (for example, to `gdb-4.18/gdb') and then type:
d132 1
a132 1
   For example, the GDB version 4.18 distribution is in the `gdb-4.18'
d135 1
a135 1
`gdb-4.18/{COPYING,COPYING.LIB}'
d138 1
a138 1
`gdb-4.18/bfd'
d141 1
a141 1
`gdb-4.18/config*'
d144 1
a144 1
`gdb-4.18/gdb'
d147 1
a147 1
`gdb-4.18/include'
d150 1
a150 1
`gdb-4.18/libiberty'
d153 1
a153 1
`gdb-4.18/mmalloc'
d156 1
a156 1
`gdb-4.18/opcodes'
d159 1
a159 1
`gdb-4.18/readline'
d164 1
a164 1
`gdb-4.18/sim'
d167 1
a167 1
`gdb-4.18/intl'
d172 1
a172 1
`gdb-4.18/texinfo'
d176 1
a176 1
`gdb-4.18/etc'
d180 1
a180 1
`gdb-4.18/utils'
d189 1
a189 1
is the `gdb-4.18' directory.
d196 1
a196 1
     cd gdb-4.18
d212 2
a213 2
directories for multiple libraries or programs, such as the `gdb-4.18'
source directory for version 4.18, `configure' creates configuration
d221 1
a221 1
   For example, with version 4.18, type the following to configure only
d224 1
a224 1
     cd gdb-4.18/bfd
d253 1
a253 1
   For example, with version 4.18, you can build GDB in a separate
d256 1
a256 1
     cd gdb-4.18
d259 1
a259 1
     ../gdb-4.18/configure sun4
d280 2
a281 2
as `gdb-4.18' (or in a separate configured directory configured with
`--srcdir=PATH/gdb-4.18'), you will build all the required libraries,
d324 1
a324 1
(`gdb-4.18', for version 4.18).
d378 6
a383 1
	-Wall
a384 3
	-Wstrict-prototypes
	-Wmissing-prototypes
	-Wmissing-declarations
d418 3
a420 3
I have't done this myself so I can't really offer any advice.
Remote debugging over serial lines works fine, but the kernel debugging
code in here has not been tested in years.  Van Jacobson has
d427 4
a430 4
The files m68k-stub.c, i386-stub.c, and sparc-stub.c are examples of
remote stubs to be used with remote.c.  They are designed to run
standalone on an m68k, i386, or SPARC cpu and communicate properly with
the remote.c stub over a serial line.
d432 1
a432 1
The directory gdb/gdbserver/ contains `gdbserver', a program that
d434 2
a435 2
supported for some native configurations, including Sun 3, Sun 4,
and Linux.
d437 1
a437 1
There are a number of remote interfaces for talking to existing ROM
a442 1
        remote-d10v.c    GDB protocol, talking to a d10v chip
d461 12
a472 11
Remote-vx.c and the vx-share subdirectory contain a remote interface for the
VxWorks realtime kernel, which communicates over TCP using the Sun
RPC library.  This would be a useful starting point for other remote-
via-ethernet back ends.

Remote-udi.c and the 29k-share subdirectory contain a remote interface
for AMD 29000 programs, which uses the AMD "Universal Debug Interface".
This allows GDB to talk to software simulators, emulators, and/or bare
hardware boards, via network or serial interfaces.  Note that GDB only
provides an interface that speaks UDI, not a complete solution.  You
will need something on the other end that also speaks UDI.
d478 4
a481 4
The correct address for reporting bugs found in gdb is
"bug-gdb@@gnu.org".  Please email all bugs, and all requests for
help with GDB, to that address.  Please include the GDB version number
(e.g., gdb-4.18), and how you configured it (e.g., "sun4" or "mach386
d483 8
a490 7
different configurations, it is important that you be precise about this.
If at all possible, you should include the actual banner that GDB prints
when it starts up, or failing that, the actual configure command that
you used when configuring GDB.

For more information on how/whether to report bugs, see the GDB Bugs
section of the GDB manual (gdb/doc/gdb.texinfo).
d540 17
a556 18
  * Notes for BSD/386:
    To compile gdb-4.18 on BSD/386, you must run the configure script and
    its subscripts with bash.  Here is an easy way to do this:

	bash -c 'CONFIG_SHELL=/bin/bash ./configure'

    (configure will report i386-unknown-bsd).  Then, compile with the
    standard "make" command.

GDB can produce warnings about symbols that it does not understand.  By
default, these warnings are disabled.  You can enable them by executing
`set complaint 10' (which you can put in your ~/.gdbinit if you like).
I recommend doing this if you are working on a compiler, assembler,
linker, or GDB, since it will point out problems that you may be able
to fix.  Warnings produced during symbol reading indicate some mismatch
between the object file and GDB's symbol reading code.  In many cases,
it's a mismatch between the specs for the object file format, and what
the compiler actually outputs or the debugger actually understands.
d558 2
d561 1
a561 2
X Windows versus GDB
=====================
d563 1
a563 2
You should check out DDD, the Data Display Debugger.  Here's the blurb
from the DDD web site, http://www.cs.tu-bs.de/softech/ddd:
d565 4
a568 17
    The Data Display Debugger (DDD) is a popular graphical user
    interface for command-line debuggers such as GDB, DBX, JDB, WDB,
    XDB, the Perl debugger, and the Python debugger.  Besides ``usual''
    front-end features such as viewing source texts, DDD has become
    famous through its interactive graphical data display, where data
    structures are displayed as graphs. A simple mouse click
    dereferences pointers or views structure contents, updated each
    time the program stops. Using DDD, you can reason about your
    application by watching its data, not just by viewing it execute
    lines of source code.

Emacs users will very likely enjoy the Grand Unified Debugger mode;
try typing `M-x gdb RET'.

Those interested in experimenting with a new kind of gdb-mode
should load gdb/gdba.el into GNU Emacs 19.25 or later.  Comments
on this mode are also welcome.
d574 1
a574 1
There is a lot of information about writing code for GDB in the
d580 1
a580 1
If you are pondering writing anything but a short patch, especially
d591 9
a599 2
There is a DejaGNU based testsuite available for testing your newly
built GDB, or for regression testing GDBs with local modifications.
d601 4
a604 4
Running the testsuite requires the prior installation of DejaGNU,
which is generally available via ftp; you'll need a pretty recent
release.  Once DejaGNU is installed, you can run the tests in one of
two ways:
d606 1
a606 1
  (1)	cd gdb-4.18/gdb		(assuming you also unpacked gdb)
d611 1
a611 1
  (2)	cd gdb-4.18/gdb/testsuite
d615 3
a617 3
The second method gives you slightly more control in case of problems with
building one or more test executables or if you are using the testsuite
'standalone', without it being part of the GDB source tree.
@


1.1
log
@Initial revision
@
text
@d7 2
a8 2
See the GDB home page at http://www.cygnus.com/gdb/ for up to date
release information, mailing list links and archives, etc.
d44 3
d158 2
d180 3
@


1.1.1.1
log
@Initial creation of sourceware repository
@
text
@@


1.1.1.2
log
@import gdb-19990422 snapshot
@
text
@d7 2
a8 2
See the GDB home page at http://sourceware.cygnus.com/gdb/ for up to
date release information, mailing list links and archives, etc.
a154 2
     NOTE:  The readline library is compiled for use by GDB, but will
     not be installed on your system when "make install" is issued.
@


1.1.1.2.2.1
log
@	* README: Mention special build instructions for DJGPP.
	* NEWS: Update with FP features on x87 platforms, and
	DJGPP-related changes.
@
text
@a43 3
(Building GDB with DJGPP tools for MS-DOS/MS-Windows is slightly
different; see the file gdb/config/djgpp/README for details.)

a176 3
   Note: the following instructions are for building GDB on Unix or
Unix-like systems.  Instructions for building with DJGPP for
MS-DOS/MS-Windows are in the file gdb/config/djgpp/README.
@


1.1.1.2.2.2
log
@Fix IRIX 6.5 compile problems (GCC only).
@
text
@a533 3
  * Under Irix 6 you must build with GCC.  The vendor compiler reports
    as errors certain assignments that GCC considers to be warnings.

a541 2
  
  * See, also the file TODO for other minor problems.
@


1.1.1.2.2.3
log
@Update README file to 5.0.
@
text
@d1 2
a2 2
		     README for gdb-5.0 release
		Updated 11 May 2000 by Andrew Cagney
d14 1
a14 1
   In this release, the GDB debugger sources, the generic GNU include
d17 1
a17 1
underneath the gdb-5.0 directory.  The idea is that a variety of GNU
d26 2
a27 2
   When you unpack the gdb-5.0.tar.gz file, you'll find a directory
called `gdb-5.0', which contains:
d29 7
a35 8
  COPYING       config.if     install-sh     mmalloc         readline
  COPYING.LIB   config.sub    intl           move-if-change  sim
  Makefile.in   configure     libiberty      mpw-README      symlink-tree
  README        configure.in  ltconfig       mpw-build.in    texinfo
  bfd           djunpack.bat  ltmain.sh      mpw-config.in   utils
  config        etc           md5.sum        mpw-configure   ylwrap
  config-ml.in  gdb           missing        mpw-install
  config.guess  include       mkinstalldirs  opcodes
d39 1
a39 1
	cd gdb-5.0
d45 1
a45 1
different; see the file gdb-5.0/gdb/config/djgpp/README for details.)
d47 14
a60 15
   This will configure and build all the libraries as well as GDB.  If
`configure' can't determine your system type, specify one as its
argument, e.g., `./configure sun4' or `./configure decstation'.

   If you get compiler errors during this stage, see the `Reporting
Bugs' section below; there are a few known problems.

   GDB requires an ISO-C (ANSI C) compiler.  If you do not have an
ISO-C compiler for your system, you may be able to download and
install the GNU CC compiler.  It is available via anonymous FTP from
the directory `ftp://ftp.gnu.org/pub/gnu/gcc'.

   GDB can be used as a cross-debugger, running on a machine of one
type while debugging a program running on a machine of another type.
See below.
d67 13
a79 14
distribution.  The documentation is written in Texinfo format, which
is a documentation system that uses a single source file to produce
both on-line information and a printed manual.  You can use one of the
Info formatting commands to create the on-line version of the
documentation and TeX (or `texi2roff') to typeset the printed version.

   GDB includes an already formatted copy of the on-line Info version
of this manual in the `gdb/doc' subdirectory.  The main Info file is
`gdb-5.0/gdb/doc/gdb.info', and it refers to subordinate files
matching `gdb.info*' in the same directory.  If necessary, you can
print out these files, or read them with any editor; but they are
easier to read using the `info' subsystem in GNU Emacs or the
standalone `info' program, available as part of the GNU Texinfo
distribution.
d86 1
a86 1
source directory (`gdb-5.0', in the case of version 5.0), you can make
d95 1
a95 1
distribution, in the directory `gdb-5.0/texinfo'.
d109 1
a109 1
`gdb-5.0/texinfo' directory.
d113 1
a113 1
the main source directory (for example, to `gdb-5.0/gdb') and then type:
d129 1
a129 1
   For example, the GDB version 5.0 distribution is in the `gdb-5.0'
d132 1
a132 1
`gdb-5.0/{COPYING,COPYING.LIB}'
d135 1
a135 1
`gdb-5.0/bfd'
d138 1
a138 1
`gdb-5.0/config*'
d141 1
a141 1
`gdb-5.0/gdb'
d144 1
a144 1
`gdb-5.0/include'
d147 1
a147 1
`gdb-5.0/libiberty'
d150 1
a150 1
`gdb-5.0/mmalloc'
d153 1
a153 1
`gdb-5.0/opcodes'
d156 1
a156 1
`gdb-5.0/readline'
d161 1
a161 1
`gdb-5.0/sim'
d164 1
a164 1
`gdb-5.0/intl'
d169 1
a169 1
`gdb-5.0/texinfo'
d173 1
a173 1
`gdb-5.0/etc'
d177 1
a177 1
`gdb-5.0/utils'
d186 1
a186 1
is the `gdb-5.0' directory.
d193 1
a193 1
     cd gdb-5.0
d209 2
a210 2
directories for multiple libraries or programs, such as the `gdb-5.0'
source directory for version 5.0, `configure' creates configuration
d218 1
a218 1
   For example, with version 5.0, type the following to configure only
d221 1
a221 1
     cd gdb-5.0/bfd
d250 1
a250 1
   For example, with version 5.0, you can build GDB in a separate
d253 1
a253 1
     cd gdb-5.0
d256 1
a256 1
     ../gdb-5.0/configure
d277 2
a278 2
as `gdb-5.0' (or in a separate configured directory configured with
`--srcdir=PATH/gdb-5.0'), you will build all the required libraries,
d321 1
a321 1
(`gdb-5.0', for version 5.0).
d375 1
a375 6
	-Wimplicit
	-Wreturn-type
	-Wcomment
	-Wtrigraphs
	-Wformat
	-Wparentheses
d377 3
d413 3
a415 3
   I have't done this myself so I can't really offer any advice.
Remote debugging over serial lines works fine, but the kernel
debugging code in here has not been tested in years.  Van Jacobson has
d422 4
a425 4
   The files m68k-stub.c, i386-stub.c, and sparc-stub.c are examples
of remote stubs to be used with remote.c.  They are designed to run
standalone on an m68k, i386, or SPARC cpu and communicate properly
with the remote.c stub over a serial line.
d427 1
a427 1
   The directory gdb/gdbserver/ contains `gdbserver', a program that
d429 2
a430 2
supported for some native configurations, including Sun 3, Sun 4, and
Linux.
d432 1
a432 1
   There are a number of remote interfaces for talking to existing ROM
d438 1
d457 11
a467 12
   Remote-vx.c and the vx-share subdirectory contain a remote
interface for the VxWorks realtime kernel, which communicates over TCP
using the Sun RPC library.  This would be a useful starting point for
other remote- via-ethernet back ends.

   Remote-udi.c and the 29k-share subdirectory contain a remote
interface for AMD 29000 programs, which uses the AMD "Universal Debug
Interface".  This allows GDB to talk to software simulators,
emulators, and/or bare hardware boards, via network or serial
interfaces.  Note that GDB only provides an interface that speaks UDI,
not a complete solution.  You will need something on the other end
that also speaks UDI.
d473 4
a476 4
   The correct address for reporting bugs found in gdb is
"bug-gdb@@gnu.org".  Please email all bugs, and all requests for help
with GDB, to that address.  Please include the GDB version number
(e.g., gdb-5.0), and how you configured it (e.g., "sun4" or "mach386
d478 7
a484 8
different configurations, it is important that you be precise about
this.  If at all possible, you should include the actual banner that
GDB prints when it starts up, or failing that, the actual configure
command that you used when configuring GDB.

   For more information on how/whether to report bugs, see the GDB
Bugs section of the GDB manual (gdb/doc/gdb.texinfo) or the
gdb/CONTRIBUTE file.
d536 9
d546 1
a546 10
   GDB can produce warnings about symbols that it does not understand.
By default, these warnings are disabled.  You can enable them by
executing `set complaint 10' (which you can put in your ~/.gdbinit if
you like).  I recommend doing this if you are working on a compiler,
assembler, linker, or GDB, since it will point out problems that you
may be able to fix.  Warnings produced during symbol reading indicate
some mismatch between the object file and GDB's symbol reading code.
In many cases, it's a mismatch between the specs for the object file
format, and what the compiler actually outputs or the debugger
actually understands.
d548 9
a557 2
Graphical interface to GDB -- X Windows, MS Windows
==========================
d559 2
a560 4
   Several graphical interfaces to GDB are available.  You should
check:

	http://sourceware.cygnus.com/gdb/#gui
d562 2
a563 1
for an up-to-date list.
d565 17
a581 4
   Emacs users will very likely enjoy the Grand Unified Debugger mode;
try typing `M-x gdb RET'.  Those interested in experimenting with a
new kind of gdb-mode should load gdb/gdba.el into GNU Emacs 19.25 or
later.  Comments on this mode are also welcome.
d587 1
a587 1
   There is a lot of information about writing code for GDB in the
d593 1
a593 1
   If you are pondering writing anything but a short patch, especially
d604 2
a605 9
   Included with the GDB distribution is a DejaGNU based testsuite
that can either be used to test your newly built GDB, or for
regression testing a GDB with local modifications.

   Running the testsuite requires the prior installation of DejaGNU,
which is generally available via ftp.  The directory
ftp://sourceware.cygnus.com/pub/dejagnu/ will contain a recent
snapshot.  Once DejaGNU is installed, you can run the tests in one of
the following ways:
d607 4
a610 4
  (1)	cd gdb-5.0
	make check-gdb

or
d612 1
a612 1
  (2)	cd gdb-5.0/gdb
d617 1
a617 1
  (3)	cd gdb-5.0/gdb/testsuite
d621 3
a623 3
The last method gives you slightly more control in case of problems
with building one or more test executables or if you are using the
testsuite `standalone', without it being part of the GDB source tree.
@


1.1.1.2.2.4
log
@Update section on kernel debugging.
@
text
@d418 2
a419 1
   Remote debugging over serial lines works fine, but the kernel
@


