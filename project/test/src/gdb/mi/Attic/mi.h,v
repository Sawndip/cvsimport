head	1.1;
access;
symbols
	interps-20030202-branch:1.1.0.4
	kseitz_interps-20020528-branch:1.1.0.2;
locks; strict;
comment	@ * @;


1.1
date	2002.05.29.20.03.17;	author kseitz;	state dead;
branches
	1.1.2.1
	1.1.4.1;
next	;

1.1.2.1
date	2002.05.29.20.03.17;	author kseitz;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2002.06.19.18.51.32;	author kseitz;	state Exp;
branches;
next	1.1.2.3;

1.1.2.3
date	2002.07.22.22.01.31;	author kseitz;	state Exp;
branches;
next	1.1.2.4;

1.1.2.4
date	2002.07.25.17.20.56;	author kseitz;	state Exp;
branches;
next	1.1.2.5;

1.1.2.5
date	2002.08.09.19.53.56;	author kseitz;	state Exp;
branches;
next	1.1.2.6;

1.1.2.6
date	2002.08.21.23.04.27;	author kseitz;	state Exp;
branches;
next	1.1.2.7;

1.1.2.7
date	2002.11.04.16.18.02;	author ezannoni;	state Exp;
branches;
next	1.1.2.8;

1.1.2.8
date	2002.11.04.23.45.13;	author ezannoni;	state Exp;
branches;
next	;

1.1.4.1
date	2003.02.03.06.02.46;	author cagney;	state Exp;
branches;
next	1.1.4.2;

1.1.4.2
date	2003.02.04.01.26.55;	author cagney;	state Exp;
branches;
next	1.1.4.3;

1.1.4.3
date	2003.02.04.07.02.36;	author cagney;	state Exp;
branches;
next	1.1.4.4;

1.1.4.4
date	2003.02.04.19.59.02;	author cagney;	state dead;
branches;
next	;


desc
@@


1.1
log
@file mi.h was initially added on branch kseitz_interps-20020528-branch.
@
text
@@


1.1.4.1
log
@Merge kseitz_interps-20020528-branch.
@
text
@a0 38
/* MI Internal Functions
   Copyright 2002 Free Software Foundation, Inc.

   This file is part of GDB.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place - Suite 330,
   Boston, MA 02111-1307, USA.  */

#ifndef MI_H
#define MI_H
/* The mi interpreters. */

extern struct gdb_interpreter *mi_interp;
extern struct gdb_interpreter *mi1_interp;
extern struct gdb_events mi_event_handlers;
extern struct ui_file *mi_event_channel;

extern void mi_setup_architecture_data (void);
extern void mi_register_gdbarch_swap (void);

extern void mi_load_progress (const char *section_name,
			      unsigned long sent_so_far,
			      unsigned long total_section,
			      unsigned long total_sent,
			      unsigned long grand_total);
#endif /* MI_H */
@


1.1.4.2
log
@Kill off anything not directly related to the CLI command.
@
text
@d27 1
@


1.1.4.3
log
@Clean up.
@
text
@d25 2
a26 2
extern struct interp *mi_interp;
extern struct interp *mi1_interp;
@


1.1.4.4
log
@Overhaul changelog entries.
@
text
@@


1.1.2.1
log
@Add files mentioned in yesterday's changelog. Oops.
@
text
@a0 43
/* MI Internal Functions
   Copyright 2002 Free Software Foundation, Inc.

   This file is part of GDB.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place - Suite 330,
   Boston, MA 02111-1307, USA.  */

#ifndef MI_H
#define MI_H
/* The mi interpreters. */
struct gdb_interpreter;
extern struct gdb_interpreter *mi_interp;
extern struct gdb_interpreter *mi0_interp;

extern void mi_setup_architecture_data (void);
extern void mi_register_gdbarch_swap (void);

/* Events/Hooks */
extern void mi_load_progress (const char *section_name,
			      unsigned long sent_so_far,
			      unsigned long total_section,
			      unsigned long total_sent,
			      unsigned long grand_total);
extern void mi_interp_create_breakpoint_hook (struct breakpoint *bpt);
extern void mi_interp_delete_breakpoint_hook (struct breakpoint *bpt);
extern void mi_interp_modify_breakpoint_hook (struct breakpoint *bpt);
extern void mi_interp_frame_changed_hook (int new_frame_number);
extern void mi_interp_context_hook (int thread_id);

#endif /* MI_H */
@


1.1.2.2
log
@        * mi-cmd-break.c (breakpoint_notify): Only query the breakpoint
        for user breakpoints.
        (mi_cmd_break_insert): Only reset event handlers for MI0 and MI1
        interpreters.
        (mi_cmd_break_watch): Reset uiout output to clear watchpoint
        query. This is only used for MI0 and MI1.

        * mi-console.h (mi_console_file_new): Add "quote" parameter.
        * mi_console.c (struct mi_console_file): Add "quote".
        (mi_console_file_new): Add "quote" parameter.
        (mi_console_raw_packet): Use the quote character specified in
        mi_console_file_new, instead of assuming it is '"'.

        * mi-interp.c (mi_event_channel): New channel for event notifications.
        (mi_interpreter_init): Make static.
        Set event handlers.
        (mi_interpreter_resume): Make static.
        Deal with MI version bump.
        (mi_interpreter_suspend): Make static.
        (mi_interpreter_delete): Ditto.
        (mi_do_one_event): Ditto.
        (mi_cmd_exec_continuation): Ditto.
        (mi_interp_query_hook): Ditto.
        (mi_interp_read_one_line_hook): Ditto.
        (_initialize_mi_interp): Create explicit mi1 interp.

        * mi-events.c (notify_event): New helper function.
        (mi_create_breakpoint, mi_modify_breakpoint, mi_delete_breakpoint,
        mi_create_tracepoint, mi_modify_tracepoint, mi_delete_tracepoint,
        mi_architecture_changed): New functions.

        * mi.h: Add declarations for mi_create_breakpoint, mi_modify_breakpoint,
        mi_delete_breakpoint, mi_create_tracepoint, mi_modify_tracepoint,
        mi_delete_tracepoint, mi_architecture_changed, mi_stdout, mi_stderr,
        mi_stdtarg, mi_stdlog, and mi_eventchannel.

        * mi-main.c (captured_mi_execute_command): Deal with mi version
        bump.
        (mi_load_progress): Ditto.

        * gdbmi.texinfo: Expand notify-async-output to include GDB events.
        Update all examples to show breakpoint events and
        remove redundant breakpoint info on "-break-insert" and "-break-watch".
        The event now supplies everything that is needed.
@
text
@a23 2
struct ui_file;
struct breakpoint;
a30 7
/* MI's output channels */
extern struct ui_file *mi_stdout;
extern struct ui_file *mi_stderr;
extern struct ui_file *mi_stdlog;
extern struct ui_file *mi_stdtarg;
extern struct ui_file *mi_event_channel;

a42 7
extern void mi_create_breakpoint (int bpnum);
extern void mi_modify_breakpoint (int bpnum);
extern void mi_delete_breakpoint (int bpnum);
extern void mi_create_tracepoint (int bpnum);
extern void mi_modify_tracepoint (int bpnum);
extern void mi_delete_tracepoint (int bpnum);
extern void mi_architecture_changed (void);
@


1.1.2.3
log
@        * mi-events.c (mi_register_update): New function.
        * mi-interp.c (mi_event_handlers): Add mi_register_update
        event handler.
        * mi.h (mi_register_update): Add declaration.
@
text
@a58 1
extern void mi_register_update(int regno);
@


1.1.2.4
log
@        * mi-interp.c (mi_event_handlers): Add selected_frame_level_changed
        handler.
        (mi_insert_notify_hooks): Remove breakpoint hooks and frame
        changed hook.
        (mi_remove_notify_hooks): Likewise.
        * mi-events.c (mi_selected_frame_level_changed): New function.
        (mi_interp_frame_changed_hook): Remove.
        (mi_interp_create_breakpoint_hook): Remove.
        (mi_interp_modify_breakpoint_hook): Remove.
        (mi_interp_delete_breakpoint_hook): Remove.
        * mi.h (mi_selected_frame_level_changed): Add declaration.
        (mi_interp_create_breakpoint_hook): Remove declaration.
        (mi_interp_modify_breakpoint_hook): Remove declaration.
        (mi_interp_delete_breakpoint_hook): Remove declaration.
        * mi-cmd-stack.c (mi_cmd_stack_select_frame): If the stack level changes,
        issue a selected_frame_level_changed event.
@
text
@d46 3
a59 1
extern void mi_selected_frame_level_changed (int level);
@


1.1.2.5
log
@        * mi-interp.c (mi_event_handlers): Add context_changed event
        handler.
        (mi_command_loop): Remove big block of code repeated in
        mi_interpreter_resume. I don't think this is needed.
        (mi_insert_notify_hooks): Remove context_hook.
        (mi_remove_notify_hooks): Likewise.
        * mi-events.c (mi_context_changed): New function.
        * mi.h (mi_context_changed): Add declaration.
@
text
@a57 1
extern void mi_context_changed (int thread_id);
@


1.1.2.6
log
@        * mi-events.c (mi_target_changed): Renamed from mi_register_update.
        * mi.h (mi_target_changed): Ditto.
        * mi-interp.c (mi_event_handlers): Ditto.
@
text
@d56 1
a56 1
extern void mi_target_changed (void);
@


1.1.2.7
log
@2002-11-04  Elena Zannoni  <ezannoni@@redhat.com>

	* interps.h (GDB_INTERPRETER_MI2): Define.
	(GDB_INTERPRETER_MI0): Remove.

2002-11-04  Elena Zannoni  <ezannoni@@redhat.com>

	* mi-interp.c: Increment mi version numbers: 0->1, 1->2,
	and 2->3. Remove MI0 references.
	* mi-events.c: Ditto.
	* mi-main.c: Ditto. Remove erroneously merged code.
	* mi.h: Ditto.
@
text
@d28 1
a28 1
extern struct gdb_interpreter *mi1_interp;
@


1.1.2.8
log
@2002-11-04  Elena Zannoni  <ezannoni@@redhat.com>

	* interps.h (clear_interpreter_hooks): Add 'extern' keyword.

2002-11-04  Elena Zannoni  <ezannoni@@redhat.com>

	* mi.h: Clean up interface, removing unnecessarily exported
	functions and data structures.
	* mi-events.c (mi_event_handlers): Move here...
	* mi-interps.c: .. from here.
	Include gdb_string.h.
@
text
@d24 3
a26 1

a28 2
extern struct gdb_events mi_event_handlers;
extern struct ui_file *mi_event_channel;
d33 8
d46 13
@


