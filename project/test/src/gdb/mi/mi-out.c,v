head	1.46;
access;
symbols
	gdb_7_6_1-2013-08-30-release:1.46
	gdb_7_6-2013-04-26-release:1.46
	gdb_7_6-branch:1.46.0.2
	gdb_7_6-2013-03-12-branchpoint:1.46
	gdb_7_5_1-2012-11-29-release:1.43
	gdb_7_5-2012-08-17-release:1.43
	gdb_7_5-branch:1.43.0.2
	gdb_7_5-2012-07-18-branchpoint:1.43
	gdb_7_4_1-2012-04-26-release:1.41.2.1
	gdb_7_4-2012-01-24-release:1.41.2.1
	gdb_7_4-branch:1.41.0.2
	gdb_7_4-2011-12-13-branchpoint:1.41
	gdb_7_3_1-2011-09-04-release:1.40
	gdb_7_3-2011-07-26-release:1.40
	gdb_7_3-branch:1.40.0.2
	gdb_7_3-2011-04-01-branchpoint:1.40
	gdb_7_2-2010-09-02-release:1.39
	gdb_7_2-branch:1.39.0.2
	gdb_7_2-2010-07-07-branchpoint:1.39
	gdb_7_1-2010-03-18-release:1.36
	gdb_7_1-branch:1.36.0.2
	gdb_7_1-2010-02-18-branchpoint:1.36
	gdb_7_0_1-2009-12-22-release:1.35
	gdb_7_0-2009-10-06-release:1.35
	gdb_7_0-branch:1.35.0.4
	gdb_7_0-2009-09-16-branchpoint:1.35
	arc-sim-20090309:1.34
	msnyder-checkpoint-072509-branch:1.35.0.2
	msnyder-checkpoint-072509-branchpoint:1.35
	arc-insight_6_8-branch:1.34.0.16
	arc-insight_6_8-branchpoint:1.34
	insight_6_8-branch:1.34.0.14
	insight_6_8-branchpoint:1.34
	reverse-20081226-branch:1.34.0.12
	reverse-20081226-branchpoint:1.34
	multiprocess-20081120-branch:1.34.0.10
	multiprocess-20081120-branchpoint:1.34
	reverse-20080930-branch:1.34.0.8
	reverse-20080930-branchpoint:1.34
	reverse-20080717-branch:1.34.0.6
	reverse-20080717-branchpoint:1.34
	msnyder-reverse-20080609-branch:1.34.0.4
	msnyder-reverse-20080609-branchpoint:1.34
	drow-reverse-20070409-branch:1.32.0.2
	drow-reverse-20070409-branchpoint:1.32
	gdb_6_8-2008-03-27-release:1.34
	gdb_6_8-branch:1.34.0.2
	gdb_6_8-2008-02-26-branchpoint:1.34
	gdb_6_7_1-2007-10-29-release:1.33
	gdb_6_7-2007-10-10-release:1.33
	gdb_6_7-branch:1.33.0.2
	gdb_6_7-2007-09-07-branchpoint:1.33
	insight_6_6-20070208-release:1.31
	gdb_6_6-2006-12-18-release:1.31
	gdb_6_6-branch:1.31.0.18
	gdb_6_6-2006-11-15-branchpoint:1.31
	insight_6_5-20061003-release:1.31
	gdb-csl-symbian-6_4_50_20060226-12:1.31
	gdb-csl-sourcerygxx-3_4_4-25:1.30
	nickrob-async-20060828-mergepoint:1.31
	gdb-csl-symbian-6_4_50_20060226-11:1.31
	gdb-csl-sourcerygxx-4_1-17:1.31
	gdb-csl-20060226-branch-local-2:1.31
	gdb-csl-sourcerygxx-4_1-14:1.31
	gdb-csl-sourcerygxx-4_1-13:1.31
	gdb-csl-sourcerygxx-4_1-12:1.31
	gdb-csl-sourcerygxx-3_4_4-21:1.31
	gdb_6_5-20060621-release:1.31
	gdb-csl-sourcerygxx-4_1-9:1.31
	gdb-csl-sourcerygxx-4_1-8:1.31
	gdb-csl-sourcerygxx-4_1-7:1.31
	gdb-csl-arm-2006q1-6:1.31
	gdb-csl-sourcerygxx-4_1-6:1.31
	gdb-csl-symbian-6_4_50_20060226-10:1.31
	gdb-csl-symbian-6_4_50_20060226-9:1.31
	gdb-csl-symbian-6_4_50_20060226-8:1.31
	gdb-csl-coldfire-4_1-11:1.31
	gdb-csl-sourcerygxx-3_4_4-19:1.31
	gdb-csl-coldfire-4_1-10:1.31
	gdb_6_5-branch:1.31.0.16
	gdb_6_5-2006-05-14-branchpoint:1.31
	gdb-csl-sourcerygxx-4_1-5:1.31
	nickrob-async-20060513-branch:1.31.0.14
	nickrob-async-20060513-branchpoint:1.31
	gdb-csl-sourcerygxx-4_1-4:1.31
	msnyder-reverse-20060502-branch:1.31.0.12
	msnyder-reverse-20060502-branchpoint:1.31
	gdb-csl-morpho-4_1-4:1.31
	gdb-csl-sourcerygxx-3_4_4-17:1.31
	readline_5_1-import-branch:1.31.0.10
	readline_5_1-import-branchpoint:1.31
	gdb-csl-20060226-branch-merge-to-csl-symbian-1:1.31
	gdb-csl-symbian-20060226-branch:1.31.0.8
	gdb-csl-symbian-20060226-branchpoint:1.31
	gdb-csl-20060226-branch-merge-to-csl-local-1:1.31
	msnyder-reverse-20060331-branch:1.31.0.6
	msnyder-reverse-20060331-branchpoint:1.31
	gdb-csl-available-20060303-branch:1.31.0.4
	gdb-csl-available-20060303-branchpoint:1.31
	gdb-csl-20060226-branch:1.31.0.2
	gdb-csl-20060226-branchpoint:1.31
	gdb_6_4-20051202-release:1.30
	msnyder-fork-checkpoint-branch:1.30.0.8
	msnyder-fork-checkpoint-branchpoint:1.30
	gdb-csl-gxxpro-6_3-branch:1.30.0.6
	gdb-csl-gxxpro-6_3-branchpoint:1.30
	gdb_6_4-branch:1.30.0.4
	gdb_6_4-2005-11-01-branchpoint:1.30
	gdb-csl-arm-20051020-branch:1.30.0.2
	gdb-csl-arm-20051020-branchpoint:1.30
	msnyder-tracepoint-checkpoint-branch:1.29.0.4
	msnyder-tracepoint-checkpoint-branchpoint:1.29
	gdb-csl-arm-20050325-2005-q1b:1.29
	gdb-csl-arm-20050325-2005-q1a:1.29
	csl-arm-20050325-branch:1.29.0.2
	csl-arm-20050325-branchpoint:1.29
	gdb-post-i18n-errorwarning-20050211:1.28
	gdb-pre-i18n-errorwarning-20050211:1.28
	gdb_6_3-20041109-release:1.28
	gdb_6_3-branch:1.28.0.16
	gdb_6_3-20041019-branchpoint:1.28
	drow_intercu-merge-20040921:1.28
	drow_intercu-merge-20040915:1.28
	jimb-gdb_6_2-e500-branch:1.28.0.18
	jimb-gdb_6_2-e500-branchpoint:1.28
	gdb_6_2-20040730-release:1.28
	gdb_6_2-branch:1.28.0.14
	gdb_6_2-2004-07-10-gmt-branchpoint:1.28
	gdb_6_1_1-20040616-release:1.28
	gdb_6_1-2004-04-05-release:1.28
	drow_intercu-merge-20040402:1.28
	drow_intercu-merge-20040327:1.28
	ezannoni_pie-20040323-branch:1.28.0.12
	ezannoni_pie-20040323-branchpoint:1.28
	cagney_tramp-20040321-mergepoint:1.28
	cagney_tramp-20040309-branch:1.28.0.10
	cagney_tramp-20040309-branchpoint:1.28
	gdb_6_1-branch:1.28.0.8
	gdb_6_1-2004-03-01-gmt-branchpoint:1.28
	drow_intercu-20040221-branch:1.28.0.6
	drow_intercu-20040221-branchpoint:1.28
	cagney_bfdfile-20040213-branch:1.28.0.4
	cagney_bfdfile-20040213-branchpoint:1.28
	drow-cplus-merge-20040208:1.28
	carlton_dictionary-20040126-merge:1.28
	cagney_bigcore-20040122-branch:1.28.0.2
	cagney_bigcore-20040122-branchpoint:1.28
	drow-cplus-merge-20040113:1.27
	drow-cplus-merge-20031224:1.27
	drow-cplus-merge-20031220:1.27
	carlton_dictionary-20031215-merge:1.27
	drow-cplus-merge-20031214:1.27
	carlton-dictionary-20031111-merge:1.27
	gdb_6_0-2003-10-04-release:1.26.26.1
	kettenis_sparc-20030918-branch:1.27.0.6
	kettenis_sparc-20030918-branchpoint:1.27
	carlton_dictionary-20030917-merge:1.27
	ezannoni_pie-20030916-branchpoint:1.27
	ezannoni_pie-20030916-branch:1.27.0.4
	cagney_x86i386-20030821-branch:1.27.0.2
	cagney_x86i386-20030821-branchpoint:1.27
	carlton_dictionary-20030805-merge:1.27
	carlton_dictionary-20030627-merge:1.26
	gdb_6_0-branch:1.26.0.26
	gdb_6_0-2003-06-23-branchpoint:1.26
	jimb-ppc64-linux-20030613-branch:1.26.0.24
	jimb-ppc64-linux-20030613-branchpoint:1.26
	cagney_convert-20030606-branch:1.26.0.22
	cagney_convert-20030606-branchpoint:1.26
	cagney_writestrings-20030508-branch:1.26.0.20
	cagney_writestrings-20030508-branchpoint:1.26
	jimb-ppc64-linux-20030528-branch:1.26.0.18
	jimb-ppc64-linux-20030528-branchpoint:1.26
	carlton_dictionary-20030523-merge:1.26
	cagney_fileio-20030521-branch:1.26.0.16
	cagney_fileio-20030521-branchpoint:1.26
	kettenis_i386newframe-20030517-mergepoint:1.26
	jimb-ppc64-linux-20030509-branch:1.26.0.14
	jimb-ppc64-linux-20030509-branchpoint:1.26
	kettenis_i386newframe-20030504-mergepoint:1.26
	carlton_dictionary-20030430-merge:1.26
	kettenis_i386newframe-20030419-branch:1.26.0.12
	kettenis_i386newframe-20030419-branchpoint:1.26
	carlton_dictionary-20030416-merge:1.26
	cagney_frameaddr-20030409-mergepoint:1.26
	kettenis_i386newframe-20030406-branch:1.26.0.10
	kettenis_i386newframe-20030406-branchpoint:1.26
	cagney_frameaddr-20030403-branchpoint:1.26
	cagney_frameaddr-20030403-branch:1.26.0.8
	cagney_framebase-20030330-mergepoint:1.26
	cagney_framebase-20030326-branch:1.26.0.6
	cagney_framebase-20030326-branchpoint:1.26
	cagney_lazyid-20030317-branch:1.26.0.4
	cagney_lazyid-20030317-branchpoint:1.26
	kettenis-i386newframe-20030316-mergepoint:1.26
	offbyone-20030313-branch:1.26.0.2
	offbyone-20030313-branchpoint:1.26
	kettenis-i386newframe-20030308-branch:1.25.0.10
	kettenis-i386newframe-20030308-branchpoint:1.25
	carlton_dictionary-20030305-merge:1.25
	cagney_offbyone-20030303-branch:1.25.0.8
	cagney_offbyone-20030303-branchpoint:1.25
	carlton_dictionary-20030207-merge:1.25
	interps-20030203-mergepoint:1.25
	interps-20030202-branch:1.25.0.6
	interps-20030202-branchpoint:1.25
	cagney-unwind-20030108-branch:1.25.0.4
	cagney-unwind-20030108-branchpoint:1.25
	carlton_dictionary-20021223-merge:1.25
	gdb_5_3-2002-12-12-release:1.23
	carlton_dictionary-20021115-merge:1.25
	kseitz_interps-20021105-merge:1.25
	kseitz_interps-20021103-merge:1.25
	drow-cplus-merge-20021020:1.25
	drow-cplus-merge-20021025:1.25
	carlton_dictionary-20021025-merge:1.25
	carlton_dictionary-20021011-merge:1.25
	drow-cplus-branch:1.25.0.2
	drow-cplus-branchpoint:1.25
	kseitz_interps-20020930-merge:1.24
	carlton_dictionary-20020927-merge:1.23
	carlton_dictionary-branch:1.23.0.14
	carlton_dictionary-20020920-branchpoint:1.23
	gdb_5_3-branch:1.23.0.12
	gdb_5_3-2002-09-04-branchpoint:1.23
	kseitz_interps-20020829-merge:1.23
	cagney_sysregs-20020825-branch:1.23.0.10
	cagney_sysregs-20020825-branchpoint:1.23
	readline_4_3-import-branch:1.23.0.8
	readline_4_3-import-branchpoint:1.23
	gdb_5_2_1-2002-07-23-release:1.22
	kseitz_interps-20020528-branch:1.23.0.6
	kseitz_interps-20020528-branchpoint:1.23
	cagney_regbuf-20020515-branch:1.23.0.4
	cagney_regbuf-20020515-branchpoint:1.23
	jimb-macro-020506-branch:1.23.0.2
	jimb-macro-020506-branchpoint:1.23
	gdb_5_2-2002-04-29-release:1.22
	gdb_5_2-branch:1.22.0.8
	gdb_5_2-2002-03-03-branchpoint:1.22
	gdb_5_1_1-2002-01-24-release:1.22
	gdb_5_1_0_1-2002-01-03-release:1.22
	cygnus_cvs_20020108_pre:1.22
	gdb_5_1_0_1-2002-01-03-branch:1.22.0.6
	gdb_5_1_0_1-2002-01-03-branchpoint:1.22
	gdb_5_1-2001-11-21-release:1.22
	gdb_s390-2001-09-26-branch:1.22.0.4
	gdb_s390-2001-09-26-branchpoint:1.22
	gdb_5_1-2001-07-29-branch:1.22.0.2
	gdb_5_1-2001-07-29-branchpoint:1.22
	dberlin-typesystem-branch:1.20.0.2
	dberlin-typesystem-branchpoint:1.20
	gdb-post-ptid_t-2001-05-03:1.6
	gdb-pre-ptid_t-2001-05-03:1.6
	insight-precleanup-2001-01-01:1.5
	gdb-post-protoization-2000-07-29:1.5
	gdb-pre-protoization-2000-07-29:1.4
	gdb-premipsmulti-2000-06-06-branch:1.4.0.2
	gdb-premipsmulti-2000-06-06-branchpoint:1.4
	gdb-post-params-removal-2000-06-04:1.4
	gdb-pre-params-removal-2000-06-04:1.4
	gdb-post-params-removal-2000-05-28:1.4
	gdb-pre-params-removal-2000-05-28:1.3
	gdb_5_0-2000-05-19-release:1.2
	gdb_4_18_2-2000-05-18-release:1.2
	gdb_4_95_1-2000-05-11-snapshot:1.2
	gdb_4_95_0-2000-04-27-snapshot:1.2
	gdb_5_0-2000-04-10-branch:1.2.0.2
	gdb_5_0-2000-04-10-branchpoint:1.2;
locks; strict;
comment	@ * @;


1.46
date	2013.02.12.01.47.49;	author sivachandra;	state Exp;
branches;
next	1.45;

1.45
date	2013.01.01.06.33.01;	author brobecke;	state Exp;
branches;
next	1.44;

1.44
date	2012.11.13.09.46.11;	author muller;	state Exp;
branches;
next	1.43;

1.43
date	2012.03.06.22.48.53;	author shebs;	state Exp;
branches;
next	1.42;

1.42
date	2012.01.04.08.17.24;	author brobecke;	state Exp;
branches;
next	1.41;

1.41
date	2011.04.27.10.17.37;	author vprus;	state Exp;
branches
	1.41.2.1;
next	1.40;

1.40
date	2011.01.01.15.33.25;	author brobecke;	state Exp;
branches;
next	1.39;

1.39
date	2010.05.17.20.49.39;	author msnyder;	state Exp;
branches;
next	1.38;

1.38
date	2010.05.06.00.32.38;	author msnyder;	state Exp;
branches;
next	1.37;

1.37
date	2010.05.02.21.14.59;	author jkratoch;	state Exp;
branches;
next	1.36;

1.36
date	2010.01.01.07.31.50;	author brobecke;	state Exp;
branches;
next	1.35;

1.35
date	2009.01.03.05.57.57;	author brobecke;	state Exp;
branches;
next	1.34;

1.34
date	2008.01.01.22.53.14;	author drow;	state Exp;
branches;
next	1.33;

1.33
date	2007.08.23.18.08.48;	author brobecke;	state Exp;
branches;
next	1.32;

1.32
date	2007.01.09.17.59.08;	author drow;	state Exp;
branches;
next	1.31;

1.31
date	2005.12.23.18.57.46;	author eliz;	state Exp;
branches;
next	1.30;

1.30
date	2005.07.31.20.56.26;	author drow;	state Exp;
branches;
next	1.29;

1.29
date	2005.02.11.18.13.55;	author cagney;	state Exp;
branches;
next	1.28;

1.28
date	2004.01.19.01.20.12;	author cagney;	state Exp;
branches;
next	1.27;

1.27
date	2003.06.28.16.19.06;	author drow;	state Exp;
branches
	1.27.4.1;
next	1.26;

1.26
date	2003.03.08.20.04.27;	author cagney;	state Exp;
branches
	1.26.26.1;
next	1.25;

1.25
date	2002.10.01.21.15.43;	author cagney;	state Exp;
branches
	1.25.2.1
	1.25.10.1;
next	1.24;

1.24
date	2002.09.30.20.18.52;	author cagney;	state Exp;
branches;
next	1.23;

1.23
date	2002.03.19.02.51.08;	author cagney;	state Exp;
branches
	1.23.6.1
	1.23.14.1;
next	1.22;

1.22
date	2001.07.09.22.19.50;	author kettenis;	state Exp;
branches;
next	1.21;

1.21
date	2001.07.09.05.53.44;	author kevinb;	state Exp;
branches;
next	1.20;

1.20
date	2001.07.06.03.53.11;	author cagney;	state Exp;
branches;
next	1.19;

1.19
date	2001.06.27.17.27.06;	author cagney;	state Exp;
branches;
next	1.18;

1.18
date	2001.06.21.19.27.50;	author cagney;	state Exp;
branches;
next	1.17;

1.17
date	2001.06.21.16.15.20;	author cagney;	state Exp;
branches;
next	1.16;

1.16
date	2001.06.21.15.39.54;	author cagney;	state Exp;
branches;
next	1.15;

1.15
date	2001.06.19.16.19.16;	author cagney;	state Exp;
branches;
next	1.14;

1.14
date	2001.06.18.17.57.41;	author cagney;	state Exp;
branches;
next	1.13;

1.13
date	2001.06.11.21.54.04;	author cagney;	state Exp;
branches;
next	1.12;

1.12
date	2001.06.10.01.16.14;	author cagney;	state Exp;
branches;
next	1.11;

1.11
date	2001.06.10.00.22.41;	author cagney;	state Exp;
branches;
next	1.10;

1.10
date	2001.05.14.16.59.49;	author cagney;	state Exp;
branches;
next	1.9;

1.9
date	2001.05.12.04.08.24;	author cagney;	state Exp;
branches;
next	1.8;

1.8
date	2001.05.10.22.32.26;	author cagney;	state Exp;
branches;
next	1.7;

1.7
date	2001.05.09.01.33.10;	author cagney;	state Exp;
branches;
next	1.6;

1.6
date	2001.03.06.08.21.45;	author kevinb;	state Exp;
branches;
next	1.5;

1.5
date	2000.07.30.01.48.28;	author kevinb;	state Exp;
branches;
next	1.4;

1.4
date	2000.05.28.01.12.42;	author kevinb;	state Exp;
branches;
next	1.3;

1.3
date	2000.05.16.05.07.53;	author cagney;	state Exp;
branches;
next	1.2;

1.2
date	2000.02.23.06.19.22;	author cagney;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.23.00.25.43;	author cagney;	state Exp;
branches;
next	;

1.41.2.1
date	2012.01.06.04.43.40;	author brobecke;	state Exp;
branches;
next	;

1.27.4.1
date	2004.03.23.20.15.09;	author ezannoni;	state Exp;
branches;
next	;

1.26.26.1
date	2003.07.02.20.52.31;	author drow;	state Exp;
branches;
next	;

1.25.2.1
date	2003.12.14.20.27.44;	author drow;	state Exp;
branches;
next	1.25.2.2;

1.25.2.2
date	2004.02.09.19.43.54;	author drow;	state Exp;
branches;
next	;

1.25.10.1
date	2003.03.16.14.01.54;	author kettenis;	state Exp;
branches;
next	;

1.23.6.1
date	2002.10.01.00.46.23;	author kseitz;	state Exp;
branches;
next	1.23.6.2;

1.23.6.2
date	2002.11.04.00.23.11;	author ezannoni;	state Exp;
branches;
next	;

1.23.14.1
date	2002.10.11.22.23.00;	author carlton;	state Exp;
branches;
next	1.23.14.2;

1.23.14.2
date	2003.04.16.19.57.01;	author carlton;	state Exp;
branches;
next	1.23.14.3;

1.23.14.3
date	2003.08.05.17.13.21;	author carlton;	state Exp;
branches;
next	1.23.14.4;

1.23.14.4
date	2004.01.26.19.11.40;	author carlton;	state Exp;
branches;
next	;


desc
@@


1.46
log
@	Add support for a destructor for ui_out data and use it to
	provide a ui_out destructor.
	* ui-out.h: Declare the new ui_out destructor.
	(ui_out_impl): Add a field for data destructor in ui_out_impl.
	* ui-out.c (default_data_destroy): Add a default data destructor
	which does nothing.
	(default_ui_out_impl): Set the new data_destroy field to
	default_data_destroy
	(uo_data_destroy): Local function which invokes the data
	destructor if present.
	(clear_table): Local function which clears the table data of a
	ui_out object.
	(ui_out_destroy): Public function which frees a ui_out object.
	(ui_out_table_end): Use the new clear_table function.
	* cli-out.c (cli_ui_out_impl): Set the new data_destroy field to
	NULL.
	* mi/mi-out.c (mi_ui_out_impl): Set the new data_destroy field
	to NULL.
@
text
@/* MI Command Set - output generating routines.

   Copyright (C) 2000-2013 Free Software Foundation, Inc.

   Contributed by Cygnus Solutions (a Red Hat company).

   This file is part of GDB.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */

#include "defs.h"
#include "ui-out.h"
#include "mi-out.h"

struct ui_out_data
  {
    int suppress_field_separator;
    int suppress_output;
    int mi_version;
    struct ui_file *buffer;
    struct ui_file *original_buffer;
  };
typedef struct ui_out_data mi_out_data;

/* These are the MI output functions */

static void mi_table_begin (struct ui_out *uiout, int nbrofcols,
			    int nr_rows, const char *tblid);
static void mi_table_body (struct ui_out *uiout);
static void mi_table_end (struct ui_out *uiout);
static void mi_table_header (struct ui_out *uiout, int width,
			     enum ui_align alig, const char *col_name,
			     const char *colhdr);
static void mi_begin (struct ui_out *uiout, enum ui_out_type type,
		      int level, const char *id);
static void mi_end (struct ui_out *uiout, enum ui_out_type type, int level);
static void mi_field_int (struct ui_out *uiout, int fldno, int width,
			  enum ui_align alig, const char *fldname, int value);
static void mi_field_skip (struct ui_out *uiout, int fldno, int width,
			   enum ui_align alig, const char *fldname);
static void mi_field_string (struct ui_out *uiout, int fldno, int width,
			     enum ui_align alig, const char *fldname,
			     const char *string);
static void mi_field_fmt (struct ui_out *uiout, int fldno,
			  int width, enum ui_align align,
			  const char *fldname, const char *format,
			  va_list args) ATTRIBUTE_PRINTF (6, 0);
static void mi_spaces (struct ui_out *uiout, int numspaces);
static void mi_text (struct ui_out *uiout, const char *string);
static void mi_message (struct ui_out *uiout, int verbosity,
			const char *format, va_list args)
     ATTRIBUTE_PRINTF (3, 0);
static void mi_wrap_hint (struct ui_out *uiout, char *identstring);
static void mi_flush (struct ui_out *uiout);
static int mi_redirect (struct ui_out *uiout, struct ui_file *outstream);

/* This is the MI ui-out implementation functions vector */

/* FIXME: This can be initialized dynamically after default is set to
   handle initial output in main.c */

struct ui_out_impl mi_ui_out_impl =
{
  mi_table_begin,
  mi_table_body,
  mi_table_end,
  mi_table_header,
  mi_begin,
  mi_end,
  mi_field_int,
  mi_field_skip,
  mi_field_string,
  mi_field_fmt,
  mi_spaces,
  mi_text,
  mi_message,
  mi_wrap_hint,
  mi_flush,
  mi_redirect,
  0,
  1, /* Needs MI hacks.  */
};

/* Prototypes for local functions */

extern void _initialize_mi_out (void);
static void field_separator (struct ui_out *uiout);
static void mi_open (struct ui_out *uiout, const char *name,
		     enum ui_out_type type);
static void mi_close (struct ui_out *uiout, enum ui_out_type type);

/* Mark beginning of a table.  */

void
mi_table_begin (struct ui_out *uiout,
		int nr_cols,
		int nr_rows,
		const char *tblid)
{
  mi_open (uiout, tblid, ui_out_type_tuple);
  mi_field_int (uiout, -1, -1, -1, "nr_rows", nr_rows);
  mi_field_int (uiout, -1, -1, -1, "nr_cols", nr_cols);
  mi_open (uiout, "hdr", ui_out_type_list);
}

/* Mark beginning of a table body.  */

void
mi_table_body (struct ui_out *uiout)
{
  mi_out_data *data = ui_out_data (uiout);

  if (data->suppress_output)
    return;
  /* close the table header line if there were any headers */
  mi_close (uiout, ui_out_type_list);
  mi_open (uiout, "body", ui_out_type_list);
}

/* Mark end of a table.  */

void
mi_table_end (struct ui_out *uiout)
{
  mi_out_data *data = ui_out_data (uiout);

  data->suppress_output = 0;
  mi_close (uiout, ui_out_type_list); /* body */
  mi_close (uiout, ui_out_type_tuple);
}

/* Specify table header.  */

void
mi_table_header (struct ui_out *uiout, int width, enum ui_align alignment,
		 const char *col_name, const char *colhdr)
{
  mi_out_data *data = ui_out_data (uiout);

  if (data->suppress_output)
    return;

  mi_open (uiout, NULL, ui_out_type_tuple);
  mi_field_int (uiout, 0, 0, 0, "width", width);
  mi_field_int (uiout, 0, 0, 0, "alignment", alignment);
  mi_field_string (uiout, 0, 0, 0, "col_name", col_name);
  mi_field_string (uiout, 0, width, alignment, "colhdr", colhdr);
  mi_close (uiout, ui_out_type_tuple);
}

/* Mark beginning of a list.  */

void
mi_begin (struct ui_out *uiout, enum ui_out_type type, int level,
	  const char *id)
{
  mi_out_data *data = ui_out_data (uiout);

  if (data->suppress_output)
    return;

  mi_open (uiout, id, type);
}

/* Mark end of a list.  */

void
mi_end (struct ui_out *uiout, enum ui_out_type type, int level)
{
  mi_out_data *data = ui_out_data (uiout);

  if (data->suppress_output)
    return;

  mi_close (uiout, type);
}

/* Output an int field.  */

static void
mi_field_int (struct ui_out *uiout, int fldno, int width,
              enum ui_align alignment, const char *fldname, int value)
{
  char buffer[20];	/* FIXME: how many chars long a %d can become? */
  mi_out_data *data = ui_out_data (uiout);

  if (data->suppress_output)
    return;

  xsnprintf (buffer, sizeof (buffer), "%d", value);
  mi_field_string (uiout, fldno, width, alignment, fldname, buffer);
}

/* Used to omit a field.  */

void
mi_field_skip (struct ui_out *uiout, int fldno, int width,
               enum ui_align alignment, const char *fldname)
{
}

/* Other specific mi_field_* end up here so alignment and field
   separators are both handled by mi_field_string. */

void
mi_field_string (struct ui_out *uiout, int fldno, int width,
		 enum ui_align align, const char *fldname, const char *string)
{
  mi_out_data *data = ui_out_data (uiout);

  if (data->suppress_output)
    return;

  field_separator (uiout);
  if (fldname)
    fprintf_unfiltered (data->buffer, "%s=", fldname);
  fprintf_unfiltered (data->buffer, "\"");
  if (string)
    fputstr_unfiltered (string, '"', data->buffer);
  fprintf_unfiltered (data->buffer, "\"");
}

/* This is the only field function that does not align.  */

void
mi_field_fmt (struct ui_out *uiout, int fldno, int width,
	      enum ui_align align, const char *fldname,
	      const char *format, va_list args)
{
  mi_out_data *data = ui_out_data (uiout);

  if (data->suppress_output)
    return;

  field_separator (uiout);
  if (fldname)
    fprintf_unfiltered (data->buffer, "%s=\"", fldname);
  else
    fputs_unfiltered ("\"", data->buffer);
  vfprintf_unfiltered (data->buffer, format, args);
  fputs_unfiltered ("\"", data->buffer);
}

void
mi_spaces (struct ui_out *uiout, int numspaces)
{
}

void
mi_text (struct ui_out *uiout, const char *string)
{
}

void
mi_message (struct ui_out *uiout, int verbosity,
	    const char *format, va_list args)
{
}

void
mi_wrap_hint (struct ui_out *uiout, char *identstring)
{
  wrap_here (identstring);
}

void
mi_flush (struct ui_out *uiout)
{
  mi_out_data *data = ui_out_data (uiout);

  gdb_flush (data->buffer);
}

int
mi_redirect (struct ui_out *uiout, struct ui_file *outstream)
{
  mi_out_data *data = ui_out_data (uiout);

  if (outstream != NULL)
    {
      data->original_buffer = data->buffer;
      data->buffer = outstream;
    }
  else if (data->original_buffer != NULL)
    {
      data->buffer = data->original_buffer;
      data->original_buffer = NULL;
    }

  return 0;
}

/* local functions */

/* access to ui_out format private members */

static void
field_separator (struct ui_out *uiout)
{
  mi_out_data *data = ui_out_data (uiout);

  if (data->suppress_field_separator)
    data->suppress_field_separator = 0;
  else
    fputc_unfiltered (',', data->buffer);
}

static void
mi_open (struct ui_out *uiout, const char *name, enum ui_out_type type)
{
  mi_out_data *data = ui_out_data (uiout);

  field_separator (uiout);
  data->suppress_field_separator = 1;
  if (name)
    fprintf_unfiltered (data->buffer, "%s=", name);
  switch (type)
    {
    case ui_out_type_tuple:
      fputc_unfiltered ('{', data->buffer);
      break;
    case ui_out_type_list:
      fputc_unfiltered ('[', data->buffer);
      break;
    default:
      internal_error (__FILE__, __LINE__, _("bad switch"));
    }
}

static void
mi_close (struct ui_out *uiout, enum ui_out_type type)
{
  mi_out_data *data = ui_out_data (uiout);

  switch (type)
    {
    case ui_out_type_tuple:
      fputc_unfiltered ('}', data->buffer);
      break;
    case ui_out_type_list:
      fputc_unfiltered (']', data->buffer);
      break;
    default:
      internal_error (__FILE__, __LINE__, _("bad switch"));
    }
  data->suppress_field_separator = 0;
}

/* Add a string to the buffer.  */

void
mi_out_buffered (struct ui_out *uiout, char *string)
{
  mi_out_data *data = ui_out_data (uiout);

  fprintf_unfiltered (data->buffer, "%s", string);
}

/* Clear the buffer.  */

void
mi_out_rewind (struct ui_out *uiout)
{
  mi_out_data *data = ui_out_data (uiout);

  ui_file_rewind (data->buffer);
}

/* Dump the buffer onto the specified stream.  */

static void
do_write (void *data, const char *buffer, long length_buffer)
{
  ui_file_write (data, buffer, length_buffer);
}

void
mi_out_put (struct ui_out *uiout, struct ui_file *stream)
{
  mi_out_data *data = ui_out_data (uiout);

  ui_file_put (data->buffer, do_write, stream);
  ui_file_rewind (data->buffer);
}

/* Return the current MI version.  */

int
mi_version (struct ui_out *uiout)
{
  mi_out_data *data = ui_out_data (uiout);

  return data->mi_version;
}

/* Initialize private members at startup.  */

struct ui_out *
mi_out_new (int mi_version)
{
  int flags = 0;

  mi_out_data *data = XMALLOC (mi_out_data);
  data->suppress_field_separator = 0;
  data->suppress_output = 0;
  data->mi_version = mi_version;
  /* FIXME: This code should be using a ``string_file'' and not the
     TUI buffer hack. */
  data->buffer = mem_fileopen ();
  return ui_out_new (&mi_ui_out_impl, data, flags);
}
@


1.45
log
@Update years in copyright notice for the GDB files.

Two modifications:
  1. The addition of 2013 to the copyright year range for every file;
  2. The use of a single year range, instead of potentially multiple
     year ranges, as approved by the FSF.
@
text
@d91 1
@


1.44
log
@	ARI fixes: Avoid sprintf function use rule.
	* charset.c (convert_between_encodings): Use xsnprintf.
	* cli-out.c (cli_field_int): Likewise.
	* cp-namespace.c (cp_lookup_nested_symbol): Likewise.
	* expprint.c (op_name_standard): Likewise.
	* frv-tdep.c (set_variant_num_gprs): Likewise.
	(set_variant_num_fprs): Likewise.
	* m68hc11-tdep.c (m68hc11_initialize_register_info): Likewise.
	* nto-tdep.c (nto_find_and_open_solib): Likewise.
	(nto_init_solib_absolute_prefix): Likewise.
	* source.c (init_source_path): Likewise.
	(print_source_lines_base): Likewise.
	* valprint.c (print_wchar): Likewise.
	* mi/mi-out.c (mi_field_int): Likewise.
	windows-nat.c (windows_pid_to_exec_file): Likewise.
	(windows_create_inferior): Likewise.
	(_initialize_check_for_gdb_ini): Likewise.
@
text
@d3 1
a3 2
   Copyright (C) 2000, 2002-2005, 2007-2012 Free Software Foundation,
   Inc.
@


1.43
log
@	* mi/mi-cmd-break.c: Enforce coding standards, fix comments.
	* mi/mi-cmd-disas.c: Ditto.
	* mi/mi-cmd-env.c: Ditto.
	* mi/mi-cmd-file.c: Ditto.
	* mi/mi-cmd-stack.c: Ditto.
	* mi/mi-cmd-target.c: Ditto.
	* mi/mi-cmd-var.c: Ditto.
	* mi/mi-cmds.c: Ditto.
	* mi/mi-cmds.h: Ditto.
	* mi/mi-console.c: Ditto.
	* mi/mi-getopt.c: Ditto.
	* mi/mi-getopt.h: Ditto.
	* mi/mi-interp.c: Ditto.
	* mi/mi-main.c: Ditto.
	* mi/mi-out.c: Ditto.
	* mi/mi-parse.c: Ditto.
	* mi/mi-parse.h: Ditto.
	* mi/mi-symbol-cmds.c: Ditto.

	* mi/mi-getopt.h: Move mi_opt struct up.
	* mi/mi-main.c (captured_mi_execute_command): Remove redundant
	return.
	* mi/mi-out.c (_initialize_mi_out): Remove empty initialize.
@
text
@d201 1
a201 1
  sprintf (buffer, "%d", value);
@


1.42
log
@Copyright year update in most files of the GDB Project.

gdb/ChangeLog:

        Copyright year update in most files of the GDB Project.
@
text
@d103 1
a103 1
/* Mark beginning of a table */
d112 2
a113 4
  mi_field_int (uiout, -1/*fldno*/, -1/*width*/, -1/*alin*/,
		"nr_rows", nr_rows);
  mi_field_int (uiout, -1/*fldno*/, -1/*width*/, -1/*alin*/,
		"nr_cols", nr_cols);
d117 1
a117 1
/* Mark beginning of a table body */
d131 1
a131 1
/* Mark end of a table */
d143 1
a143 1
/* Specify table header */
d147 1
a147 2
		 const char *col_name,
		 const char *colhdr)
d153 1
d162 1
a162 1
/* Mark beginning of a list */
d165 1
a165 3
mi_begin (struct ui_out *uiout,
	  enum ui_out_type type,
	  int level,
d172 1
d176 1
a176 1
/* Mark end of a list */
d179 1
a179 3
mi_end (struct ui_out *uiout,
	enum ui_out_type type,
	int level)
d185 1
d189 1
a189 1
/* output an int field */
d191 1
a191 1
void
d205 1
a205 1
/* used to ommit a field */
d213 2
a214 2
/* other specific mi_field_* end up here so alignment and field
   separators are both handled by mi_field_string */
d217 2
a218 6
mi_field_string (struct ui_out *uiout,
		 int fldno,
		 int width,
		 enum ui_align align,
		 const char *fldname,
		 const char *string)
d224 1
d234 1
a234 1
/* This is the only field function that does not align */
d237 3
a239 5
mi_field_fmt (struct ui_out *uiout, int fldno,
	      int width, enum ui_align align,
	      const char *fldname,
	      const char *format,
	      va_list args)
d245 1
d267 1
a267 2
	    const char *format,
	    va_list args)
d320 1
a320 3
mi_open (struct ui_out *uiout,
	 const char *name,
	 enum ui_out_type type)
d342 1
a342 2
mi_close (struct ui_out *uiout,
	  enum ui_out_type type)
d360 1
a360 1
/* add a string to the buffer */
d370 1
a370 1
/* clear the buffer */
d380 1
a380 1
/* dump the buffer onto the specified stream */
d389 1
a389 2
mi_out_put (struct ui_out *uiout,
	    struct ui_file *stream)
d397 1
a397 1
/* Current MI version.  */
d407 1
a407 1
/* initalize private members at startup */
a422 7

/* standard gdb initialization hook */
void
_initialize_mi_out (void)
{
  /* nothing happens here */
}
@


1.41
log
@	MI breakpoint notifications.

        * annotate.c (breakpoint_changed): Adjust parameter type.
        * breakpoint.c (set_breakpoint_condition): Adjust to change
        in breakpoint_modified type.
        (breakpoint_set_commands): Likewise.
        (do_map_commands_command): Likewise.
        (bpstat_check_breakpoint_conditions): Notify that breakpoint has
        changed after bumping hit count.
        (bpstat_stop_status): Likewise.
        (print_one_breakpoint_location): Don't wrap in tuple here.
        (print_one_breakpoint): Always print individual locations.
        For locations, use unnamed tuple.
        (disable_breakpoints_in_unloaded_shlib): Notify that breakpoint
        has changed.
        (create_catchpoint, create_syscall_event_catchpoint): Call
        breakpoint_created obsever.
        (mention): Don't call breakpoint_created observer.
        (create_breakpoint_sal): Call breakpoint_created observer.
        (create_breakpoint, watch_command_1): Likewise.
        (create_ada_exception_breakpoint): Likewise.
        (delete_breakpoint): Call breakpoint_deleted breakpoint.
        (locations_are_equal): New.
        (update_breakpoint_locations): If locations were changed, notify.
        (set_ignore_count, disable_breakpoint, do_enable_breakpoint):
        Call breakpoint_modified observer.

        * mi/mi-cmd-break.c (breakpoint_notify): Adjust.
        (mi_cmd_break_insert): Don't set observers for modify and delete.
        * mi/mi-interp.c (mi_suppress_breakpoint_notifications): New.
        (mi_breakpoint_created, mi_breakpoint_deleted)
        (mi_breakpoint_modified): New.
        (mi_interpreter_init): Hook the above.
        * mi/mi-main.c (mi_cmd_execute): Disable breakpoint notifications
        while -break-* commands are executing.
        * mi/mi-main.h (mi_suppress_breakpoint_notifications): New.
        * mi/mi-out.c (struct ui_out_data): New field original_buffer.
        (mi_redirect): New.
        (mi_ui_out_impl): Hook in mi_redirect.
        (mi_field_skip): True to the name, skip the field, don't output
        a field with an empty value.

        * python/py-breakpoint.c (gdbpy_breakpoint_created)
        (gdbpy_breakpoint_deleted): Adjust.
        * tui/tui-hooks.c (tui_event_create_breakpoint)
        (tui_event_delete_breakpoint, tui_event_modify_breakpoint): Adjust.
@
text
@d3 2
a4 2
   Copyright (C) 2000, 2002, 2003, 2004, 2005, 2007, 2008, 2009, 2010, 2011
   Free Software Foundation, Inc.
@


1.41.2.1
log
@Copyright year update in most files of the GDB Project.

gdb/ChangeLog:

        Copyright year update in most files of the GDB Project.
@
text
@d3 2
a4 2
   Copyright (C) 2000, 2002-2005, 2007-2012 Free Software Foundation,
   Inc.
@


1.40
log
@run copyright.sh for 2011.
@
text
@d33 1
d67 1
d91 1
a91 1
  NULL,
a214 5
  mi_out_data *data = ui_out_data (uiout);

  if (data->suppress_output)
    return;
  mi_field_string (uiout, fldno, width, alignment, fldname, "");
d294 19
@


1.39
log
@2010-05-17  Michael Snyder  <msnyder@@vmware.com>

	* mi/mi-cmd-break.c: White space.
	* mi/mi-cmd-env.c: White space.
	* mi/mi-cmds.c: White space.
	* mi/mi-cmd-stack.c: White space.
	* mi/mi-cmd-var.c: White space.
	* mi/mi-console.c: White space.
	* mi/mi-getopt.c: White space.
	* mi/mi-interp.c: White space.
	* mi/mi-main.c: White space.
	* mi/mi-out.c: White space.
	* mi/mi-parse.c: White space.
@
text
@d3 1
a3 1
   Copyright (C) 2000, 2002, 2003, 2004, 2005, 2007, 2008, 2009, 2010
@


1.38
log
@2010-05-05  Michael Snyder  <msnyder@@vmware.com>

	* mi/mi-out.c (mi_table_begin): Delete unused variable.
	* mi/mi-cmd-var.c (print_varobj): Delete unused variable.
	(mi_cmd_var_list_children): Delete unused variable.
	(varobj_update_one): Delete unused variable.
	* mi/mi-cmd-break.c (mi_cmd_break_insert): Delete unused variables.
	* mi/mi-cmd-stack.c (mi_cmd_stack_list_locals):
	Delete unused variable.
	(mi_cmd_stack_list_variables): Delete unused variable.
	(list_args_or_locals): Delete unused variable.
	* mi/mi-cmd-file.c (mi_cmd_file_list_exec_source_file):
	Delete unused variables.
	(mi_cmd_file_list_exec_source_files): Delete unused variable.
	* mi/mi-cmd-target.c (mi_cmd_target_file_delete):
	Delete unused variable.
	* mi/mi-interp.c (mi_interpreter_exec): Delete unused variable.
	(mi_cmd_interpreter_exec): Delete unused variable.
	(mi_on_normal_stop): Delete unused variable.
	* mi/mi-main.c (run_one_inferior): Delete unused variable.
	(print_one_inferior): Delete unused variables.
	(mi_execute_command): Delete unused variable.
	(mi_cmd_execute): Delete unused variable.
	(timestamp): Delete unused variable.
@
text
@d123 1
d137 1
d151 1
d171 1
d185 1
d197 1
a197 1
  char buffer[20];		/* FIXME: how many chars long a %d can become? */
d199 1
d214 1
d232 1
d254 1
d293 1
d305 1
d318 1
d341 1
d362 1
d372 1
d389 1
d400 1
d410 1
@


1.37
log
@gdb/
	* ada-lang.c (lim_warning): Change ATTR_FORMAT to ATTRIBUTE_PRINTF.
	* amd64-tdep.c (amd64_insn_length_fprintf): Likewise.
	* cli-out.c (cli_field_fmt): New ATTRIBUTE_PRINTF.
	(cli_message, out_field_fmt): Change ATTR_FORMAT to ATTRIBUTE_PRINTF.
	* complaints.c (find_complaint): New ATTRIBUTE_PRINTF.
	(vcomplaint): Change ATTR_FORMAT to ATTRIBUTE_PRINTF.
	* complaints.h (complaint, internal_complaint): Likewise.
	* defs.h: Change ATTR_FORMAT to ATTRIBUTE_PRINTF in the top comment.
	(ATTR_FORMAT): Remove.
	(query, nquery, yquery, vprintf_filtered, vfprintf_filtered)
	(fprintf_filtered, fprintfi_filtered, printf_filtered, printfi_filtered)
	(vprintf_unfiltered, vfprintf_unfiltered, fprintf_unfiltered)
	(printf_unfiltered, xasprintf, xvasprintf, xstrprintf, xstrvprintf)
	(xsnprintf, verror, error, vfatal, fatal, internal_verror)
	(internal_error, internal_vwarning, internal_warning, warning)
	(vwarning): Change ATTR_FORMAT to ATTRIBUTE_PRINTF.
	* disasm.c (fprintf_disasm): Likewise.
	* exceptions.c (throw_it): Likewise.
	* exceptions.h (exception_fprintf, throw_verror, throw_vfatal)
	(throw_error): Likewise.
	* language.h (type_error, range_error): Likewise.
	* linespec.c (cplusplus_error): Likewise.
	* mi/mi-interp.c (mi_interp_query_hook): Likewise.
	* mi/mi-out.c (mi_field_fmt, mi_message): Likewise.
	* monitor.c (monitor_debug): Likewise.
	* parser-defs.h (parser_fprintf): Likewise.
	* serial.h (serial_printf): Likewise.
	* tui/tui-hooks.c (tui_query_hook): Likewise.
	* ui-out.c (default_field_fmt, default_message, uo_field_fmt)
	(uo_message): Likewise.
	* ui-out.h (ui_out_field_fmt, ui_out_message): Likewise.
	* utils.c (vfprintf_maybe_filtered, internal_vproblem, defaulted_query):
	Likewise.
	* xml-support.h (gdb_xml_debug, gdb_xml_error): Likewise.
@
text
@a108 1
  mi_out_data *data = ui_out_data (uiout);
@


1.36
log
@Update copyright year in most headers.

Automatic update by copyright.sh.
@
text
@d58 1
a58 1
			  va_list args) ATTR_FORMAT (printf, 6, 0);
d63 1
a63 1
     ATTR_FORMAT (printf, 3, 0);
@


1.35
log
@        Updated copyright notices for most files.
@
text
@d3 1
a3 1
   Copyright (C) 2000, 2002, 2003, 2004, 2005, 2007, 2008, 2009
@


1.34
log
@	Updated copyright notices for most files.
@
text
@d3 1
a3 1
   Copyright (C) 2000, 2002, 2003, 2004, 2005, 2007, 2008
@


1.33
log
@        Switch the license of all .c files to GPLv3.
        Switch the license of all .h files to GPLv3.
        Switch the license of all .cc files to GPLv3.
@
text
@d3 1
a3 1
   Copyright (C) 2000, 2002, 2003, 2004, 2005, 2007
@


1.32
log
@Copyright updates for 2007.
@
text
@d12 1
a12 1
   the Free Software Foundation; either version 2 of the License, or
d21 1
a21 3
   along with this program; if not, write to the Free Software
   Foundation, Inc., 51 Franklin Street, Fifth Floor,
   Boston, MA 02110-1301, USA.  */
@


1.31
log
@	* mi/mi-symbol-cmds.c:
	* mi/mi-parse.h:
	* mi/mi-parse.c:
	* mi/mi-out.h:
	* mi/mi-out.c:
	* mi/mi-main.h:
	* mi/mi-main.c:
	* mi/mi-interp.c:
	* mi/mi-getopt.h:
	* mi/mi-getopt.c:
	* mi/mi-console.h:
	* mi/mi-console.c:
	* mi/mi-common.h:
	* mi/mi-common.c:
	* mi/mi-cmds.h:
	* mi/mi-cmds.c:
	* mi/mi-cmd-var.c:
	* mi/mi-cmd-stack.c:
	* mi/mi-cmd-file.c:
	* mi/mi-cmd-env.c:
	* mi/mi-cmd-disas.c:
	* mi/mi-cmd-break.c: Add (C) after Copyright.  Update the FSF
	address.
@
text
@d3 2
a4 1
   Copyright (C) 2000, 2002, 2003, 2004, 2005 Free Software Foundation, Inc.
@


1.30
log
@From  Kaveh R. Ghazi  <ghazi@@caip.rutgers.edu>:
gdb/
	* cli-out.c (cli_field_fmt, cli_message, out_field_fmt): Add
	ATTR_FORMAT or ATTRIBUTE_FPTR_PRINTF.
	* complaints.c (vcomplaint): Likewise.
	* defs.h (xvasprintf, xstrvprintf, verror, vfatal)
	(internal_verror, internal_vwarning, vwarning)
	(deprecated_query_hook, deprecated_warning_hook)
	(deprecated_readline_begin_hook): Likewise.
	* disasm.c (fprintf_disasm): Likewise.
	* exceptions.c (throw_it): Likewise.
	* exceptions.h (throw_verror, throw_vfatal): Likewise.
	* mi/mi-interp.c (mi_interp_query_hook): Likewise.
	* mi/mi-out.c (mi_field_fmt, mi_message): Likewise.
	* tui/tui-hooks.c (tui_query_hook): Likewise.
	* tui/tui-out.c (tui_field_fmt, tui_message, out_field_fmt):
	Likewise.
	* ui-out.c (default_field_fmt, default_message, uo_field_fmt)
	(uo_message): Likewise.
	* ui-out.h (ui_out_field_fmt, ui_out_message, field_fmt_ftype)
	(message_ftype): Likewise.
	* utils.c (vfprintf_maybe_filtered, internal_vproblem)
	(defaulted_query, printchar): Likewise.
gdb/gdbserver/
	* server.h (error, fatal, warning): Add ATTR_FORMAT.
@
text
@d3 1
a3 1
   Copyright 2000, 2002, 2003, 2004, 2005 Free Software Foundation, Inc.
d21 2
a22 2
   Foundation, Inc., 59 Temple Place - Suite 330,
   Boston, MA 02111-1307, USA.  */
@


1.29
log
@2005-02-11  Andrew Cagney  <cagney@@gnu.org>

	Mark up error_no_arg, query, perror_with_name, complaint, and
	internal_error.
	* breakpoint.c, cp-abi.c, cp-namespace.c, cp-support.c: Update.
	* cris-tdep.c, dbxread.c, dictionary.c, dsrec.c: Update.
	* dummy-frame.c, dve3900-rom.c, dwarf2-frame.c, dwarf2expr.c: Update.
	* dwarf2read.c, dwarfread.c, elfread.c, event-loop.c: Update.
	* exceptions.c, exec.c, f-lang.c, findvar.c, fork-child.c: Update.
	* frame-unwind.c, frame.c, frv-linux-tdep.c, frv-tdep.c: Update.
	* gdb_assert.h, gdbarch.c, gdbtypes.c, gnu-nat.c: Update.
	* go32-nat.c, hppa-tdep.c, hppabsd-nat.c, hpread.c: Update.
	* i386-linux-nat.c, i386-nat.c, i386-tdep.c, i386bsd-nat.c: Update.
	* i386fbsd-nat.c, inf-ptrace.c, inf-ttrace.c, infcall.c: Update.
	* infcmd.c, inflow.c, infptrace.c, infrun.c, inftarg.c: Update.
	* interps.c, language.c, linespec.c, linux-nat.c: Update.
	* m32r-linux-nat.c, m68k-tdep.c, m68kbsd-nat.c: Update.
	* m68klinux-nat.c, m88kbsd-nat.c, macroexp.c, macroscope.c: Update.
	* macrotab.c, maint.c, mdebugread.c, memattr.c: Update.
	* mips-linux-tdep.c, mips-tdep.c, mips64obsd-nat.c: Update.
	* mipsnbsd-nat.c, mn10300-tdep.c, monitor.c, nto-procfs.c: Update.
	* objc-lang.c, objfiles.c, objfiles.h, ocd.c, osabi.c: Update.
	* parse.c, ppc-bdm.c, ppc-linux-nat.c, ppc-sysv-tdep.c: Update.
	* ppcnbsd-nat.c, ppcobsd-nat.c, printcmd.c, procfs.c: Update.
	* regcache.c, reggroups.c, remote-e7000.c, remote-mips.c: Update.
	* remote-rdp.c, remote-sds.c, remote-sim.c, remote-st.c: Update.
	* remote-utils.c, remote.c, rs6000-nat.c, rs6000-tdep.c: Update.
	* s390-nat.c, s390-tdep.c, sentinel-frame.c, serial.c: Update.
	* sh-tdep.c, sh3-rom.c, sh64-tdep.c, shnbsd-nat.c: Update.
	* solib-aix5.c, solib-svr4.c, solib.c, source.c: Update.
	* sparc-nat.c, stabsread.c, stack.c, symfile.c, symtab.c: Update.
	* symtab.h, target.c, tracepoint.c, ui-file.c, ui-out.c: Update.
	* utils.c, valops.c, valprint.c, vax-nat.c, vaxbsd-nat.c: Update.
	* win32-nat.c, xcoffread.c, xstormy16-tdep.c: Update.
	* cli/cli-cmds.c, cli/cli-logging.c, cli/cli-script.c: Update.
	* cli/cli-setshow.c, mi/mi-cmd-break.c, mi/mi-cmds.c: Update.
	* mi/mi-console.c, mi/mi-getopt.c, mi/mi-out.c: Update.
	* tui/tui-file.c, tui/tui-interp.c: Update.
@
text
@d3 1
a3 1
   Copyright 2000, 2002, 2003, 2004 Free Software Foundation, Inc.
d59 1
a59 1
			  va_list args);
d63 2
a64 1
			const char *format, va_list args);
@


1.28
log
@2004-01-18  Andrew Cagney  <cagney@@redhat.com>

	* remote-sds.c (tohex): Delete unused function.  Update copyright.
	* xstormy16-tdep.c (xstormy16_register_virtual_size): Ditto.
	* v850-tdep.c (v850_register_virtual_size): Ditto.
	* target.c (normal_target_post_startup_inferior): Ditto.
	* source.c (ambiguous_line_spec): Ditto.
	* remote.c (adapt_remote_get_threadinfo): Ditto.
	* mi/mi-out.c (out_field_fmt): Ditto.
	* mi/mi-interp.c (mi_interp_read_one_line_hook): Ditto.
	(output_control_change_notification): Ditto.
	* m68k-tdep.c (m68k_register_byte): Ditto.
	(m68k_remote_breakpoint_from_pc): Ditto.
	* ui-out.c (init_ui_out_state): Delete unused declaration.
	* stabsread.c (search_value): Ditto.
	* mi/mi-cmd-env.c (env_cli_command): Ditto.
	* maint.c (print_section_table): Ditto.
	* infrun.c (set_follow_fork_mode_command): Ditto.
@
text
@d321 1
a321 1
      internal_error (__FILE__, __LINE__, "bad switch");
d339 1
a339 1
      internal_error (__FILE__, __LINE__, "bad switch");
@


1.27
log
@./
	* cli/cli-logging.c: New file.
	* cli-out.c (struct ui_out_data): Add original_stream.
	(cli_redirect): New function.
	(cli_ui_out_impl): Add cli_redirect.
	(cli_out_new): Initialize original_stream.
	* ui-out.c (default_ui_out_impl): Add NULL for redirect member.
	(uo_redirect, ui_out_redirect): New.
	* ui-out.h (struct ui_out_impl): Add redirect member.
	(redirect_ftype): New.
	(ui_out_redirect): Add prototype.
	* Makefile.in: Add rules for cli-logging.c.
	* NEWS: Mention "set logging".
mi/
	* mi-out.c (mi_ui_out_impl): Add NULL for redirect member.
tui/
	* tui-out.c (tui_ui_out_impl): Add NULL for redirect member.
doc/
	* gdb.texinfo (Logging output): New chapter.
@
text
@d3 1
a3 1
   Copyright 2000, 2002, 2003 Free Software Foundation, Inc.
a100 3
static void out_field_fmt (struct ui_out *uiout, int fldno, char *fldname,
			   char *format,...);

a288 25

/* Like mi_field_fmt, but takes a variable number of args
   and makes a va_list and does not insert a separator */

/* VARARGS */
static void
out_field_fmt (struct ui_out *uiout, int fldno, char *fldname,
	       char *format,...)
{
  mi_out_data *data = ui_out_data (uiout);
  va_list args;

  field_separator (uiout);
  if (fldname)
    fprintf_unfiltered (data->buffer, "%s=\"", fldname);
  else
    fputs_unfiltered ("\"", data->buffer);

  va_start (args, format);
  vfprintf_unfiltered (data->buffer, format, args);

  fputs_unfiltered ("\"", data->buffer);

  va_end (args);
}
@


1.27.4.1
log
@merge mainline changes into branch
@
text
@d3 1
a3 1
   Copyright 2000, 2002, 2003, 2004 Free Software Foundation, Inc.
d101 3
d292 25
@


1.26
log
@Index: ChangeLog
2003-03-08  Andrew Cagney  <cagney@@redhat.com>

	* cli-out.c: Update copyright.
	(cli_out_data): Define typedef.  Use instead of ui_out_data.

Index: mi/ChangeLog
2003-03-08  Andrew Cagney  <cagney@@redhat.com>

	* mi-out.c: Update copyright.
	(mi_out_data): Define typedef.  Use instead of ui_out_data.

Index: tui/ChangeLog
2003-03-08  Andrew Cagney  <cagney@@redhat.com>

	* tui-out.c: Update copyright.
	(tui_out_data): Define typedef.  Use instead of ui_out_data.
@
text
@d89 1
@


1.26.26.1
log
@./
	* cli/cli-logging.c: New file.
	* cli-out.c (struct ui_out_data): Add original_stream.
	(cli_redirect): New function.
	(cli_ui_out_impl): Add cli_redirect.
	(cli_out_new): Initialize original_stream.
	* ui-out.c (default_ui_out_impl): Add NULL for redirect member.
	(uo_redirect, ui_out_redirect): New.
	* ui-out.h (struct ui_out_impl): Add redirect member.
	(redirect_ftype): New.
	(ui_out_redirect): Add prototype.
	* Makefile.in: Add rules for cli-logging.c.
	* NEWS: Mention "set logging".
mi/
	* mi-out.c (mi_ui_out_impl): Add NULL for redirect member.
tui/
	* tui-out.c (tui_ui_out_impl): Add NULL for redirect member.
doc/
	* gdb.texinfo (Logging output): New chapter.
@
text
@a88 1
  NULL,
@


1.25
log
@2002-10-01  Andrew Cagney  <ac131313@@redhat.com>

        * NEWS: Mention that MI syntax, selected by "mi" changed to "mi2"
        and that "mi0" syntax has been removed.

2002-10-01  Andrew Cagney  <ac131313@@redhat.com>

        * gdb.texinfo (Mode Options): Update --interpreter option.  "mi2"
        and "mi1" instead of "mi1" and "mi0".

2002-10-01  Andrew Cagney  <ac131313@@redhat.com>

        * mi-main.c (mi2_command_loop): New function.
        (mi0_command_loop): Delete function.
        (_initialize_mi_main): Recognize, and default to, "mi2".  Do not
        recognize "mi0".
        * mi-out.c (mi_table_begin): Remove mi0 code.
        (mi_table_body, mi_table_end): Ditto.
        (mi_table_header, mi_open, mi_close): Ditto.
@
text
@d3 1
a3 1
   Copyright 2000, 2002 Free Software Foundation, Inc.
d35 1
d111 1
a111 1
  struct ui_out_data *data = ui_out_data (uiout);
d125 1
a125 1
  struct ui_out_data *data = ui_out_data (uiout);
d138 1
a138 1
  struct ui_out_data *data = ui_out_data (uiout);
d151 1
a151 1
  struct ui_out_data *data = ui_out_data (uiout);
d170 1
a170 1
  struct ui_out_data *data = ui_out_data (uiout);
d183 1
a183 1
  struct ui_out_data *data = ui_out_data (uiout);
d196 1
a196 1
  struct ui_out_data *data = ui_out_data (uiout);
d210 1
a210 1
  struct ui_out_data *data = ui_out_data (uiout);
d227 1
a227 1
  struct ui_out_data *data = ui_out_data (uiout);
d248 1
a248 1
  struct ui_out_data *data = ui_out_data (uiout);
d286 1
a286 1
  struct ui_out_data *data = ui_out_data (uiout);
d300 1
a300 1
  struct ui_out_data *data = ui_out_data (uiout);
d322 1
a322 1
  struct ui_out_data *data = ui_out_data (uiout);
d334 1
a334 1
  struct ui_out_data *data = ui_out_data (uiout);
d356 1
a356 1
  struct ui_out_data *data = ui_out_data (uiout);
d376 1
a376 1
  struct ui_out_data *data = ui_out_data (uiout);
d385 1
a385 1
  struct ui_out_data *data = ui_out_data (uiout);
d401 1
a401 1
  struct ui_out_data *data = ui_out_data (uiout);
d411 1
a411 1
  struct ui_out_data *data = ui_out_data (uiout);
d421 1
a421 1
  struct ui_out_data *data = XMALLOC (struct ui_out_data);
@


1.25.2.1
log
@Merge drow-cplus-branch to:
  cvs rtag -D 2003-12-14 00:00:00 UTC drow-cplus-merge-20031214 gdb+dejagnu
@
text
@d3 1
a3 1
   Copyright 2000, 2002, 2003 Free Software Foundation, Inc.
a34 1
typedef struct ui_out_data mi_out_data;
a87 1
  NULL,
d110 1
a110 1
  mi_out_data *data = ui_out_data (uiout);
d124 1
a124 1
  mi_out_data *data = ui_out_data (uiout);
d137 1
a137 1
  mi_out_data *data = ui_out_data (uiout);
d150 1
a150 1
  mi_out_data *data = ui_out_data (uiout);
d169 1
a169 1
  mi_out_data *data = ui_out_data (uiout);
d182 1
a182 1
  mi_out_data *data = ui_out_data (uiout);
d195 1
a195 1
  mi_out_data *data = ui_out_data (uiout);
d209 1
a209 1
  mi_out_data *data = ui_out_data (uiout);
d226 1
a226 1
  mi_out_data *data = ui_out_data (uiout);
d247 1
a247 1
  mi_out_data *data = ui_out_data (uiout);
d285 1
a285 1
  mi_out_data *data = ui_out_data (uiout);
d299 1
a299 1
  mi_out_data *data = ui_out_data (uiout);
d321 1
a321 1
  mi_out_data *data = ui_out_data (uiout);
d333 1
a333 1
  mi_out_data *data = ui_out_data (uiout);
d355 1
a355 1
  mi_out_data *data = ui_out_data (uiout);
d375 1
a375 1
  mi_out_data *data = ui_out_data (uiout);
d384 1
a384 1
  mi_out_data *data = ui_out_data (uiout);
d400 1
a400 1
  mi_out_data *data = ui_out_data (uiout);
d410 1
a410 1
  mi_out_data *data = ui_out_data (uiout);
d420 1
a420 1
  mi_out_data *data = XMALLOC (mi_out_data);
@


1.25.2.2
log
@Merge drow-cplus-merge-20040208 to drow-cplus-branch.
@
text
@d3 1
a3 1
   Copyright 2000, 2002, 2003, 2004 Free Software Foundation, Inc.
d101 3
d292 25
@


1.25.10.1
log
@2003-03-16  Mark Kettenis  <kettenis@@gnu.org>

	Merge with mainline.  Tag is kettenis-i386newframe-20030316-mergepoint.
@
text
@d3 1
a3 1
   Copyright 2000, 2002, 2003 Free Software Foundation, Inc.
a34 1
typedef struct ui_out_data mi_out_data;
d110 1
a110 1
  mi_out_data *data = ui_out_data (uiout);
d124 1
a124 1
  mi_out_data *data = ui_out_data (uiout);
d137 1
a137 1
  mi_out_data *data = ui_out_data (uiout);
d150 1
a150 1
  mi_out_data *data = ui_out_data (uiout);
d169 1
a169 1
  mi_out_data *data = ui_out_data (uiout);
d182 1
a182 1
  mi_out_data *data = ui_out_data (uiout);
d195 1
a195 1
  mi_out_data *data = ui_out_data (uiout);
d209 1
a209 1
  mi_out_data *data = ui_out_data (uiout);
d226 1
a226 1
  mi_out_data *data = ui_out_data (uiout);
d247 1
a247 1
  mi_out_data *data = ui_out_data (uiout);
d285 1
a285 1
  mi_out_data *data = ui_out_data (uiout);
d299 1
a299 1
  mi_out_data *data = ui_out_data (uiout);
d321 1
a321 1
  mi_out_data *data = ui_out_data (uiout);
d333 1
a333 1
  mi_out_data *data = ui_out_data (uiout);
d355 1
a355 1
  mi_out_data *data = ui_out_data (uiout);
d375 1
a375 1
  mi_out_data *data = ui_out_data (uiout);
d384 1
a384 1
  mi_out_data *data = ui_out_data (uiout);
d400 1
a400 1
  mi_out_data *data = ui_out_data (uiout);
d410 1
a410 1
  mi_out_data *data = ui_out_data (uiout);
d420 1
a420 1
  mi_out_data *data = XMALLOC (mi_out_data);
@


1.24
log
@2002-09-29  Andrew Cagney  <ac131313@@redhat.com>

	* mi-out.c (mi_version): New function.
	* mi-out.h (mi_version): Declare.
@
text
@a111 8
  if (data->mi_version == 0)
    {
      if (nr_rows == 0)
	data->suppress_output = 1;
      else
	mi_open (uiout, "hdr", ui_out_type_list);
      return;
    }
a128 2
  if (data->mi_version == 0)
    return;
a138 5
  if (data->mi_version == 0)
    {
      mi_close (uiout, ui_out_type_tuple);
      return;
    }
a152 5
  if (data->mi_version == 0)
    {
      mi_field_string (uiout, 0, width, alignment, 0, colhdr);
      return;
    }
d344 1
a344 4
      if (data->mi_version == 0)
	fputc_unfiltered ('{', data->buffer);
      else
	fputc_unfiltered ('[', data->buffer);
d362 1
a362 4
      if (data->mi_version == 0)
	fputc_unfiltered ('}', data->buffer);
      else
	fputc_unfiltered (']', data->buffer);
@


1.23
log
@* defs.h (XMALLOC): Define.
* gdb-events.sh (XMALLOC): Delete macro.
* gdb-events.c, gdb-events.h: Regenerate.
* gdbarch.sh (XMALLOC): Delete macro.
* gdbarch.c: Regenerate.
* serial.c (XMALLOC): Delete macro.
* ui-file.c (XMALLOC): Ditto.
* ser-unix.h (XMALLOC): Ditto.
* sh-tdep.c (XMALLOC): Ditto.
* ui-out.c (XMALLOC): Ditto.
* utils.c (XMALLOC): Ditto.
* i386-tdep.c (XMALLOC): Ditto.
* gdb-events.c (XMALLOC): Ditto.
* d10v-tdep.c (XMALLOC): Ditto.
* cli-out.c (XMALLOC): Ditto.

* cli-out.c, d10v-tdep.c, gdb-events.c: Update copyright.
* gdb-events.sh, i386-tdep.c, ser-unix.h, serial.c: Ditto.
* ui-file.c, ui-out.c: Ditto.
@
text
@d431 9
@


1.23.14.1
log
@Merge with mainline; merge tag carlton_dictionary-20021011-merge.
@
text
@d112 8
d137 2
d149 5
d168 5
d364 4
a367 1
      fputc_unfiltered ('[', data->buffer);
d385 4
a388 1
      fputc_unfiltered (']', data->buffer);
a428 9
}

/* Current MI version.  */

int
mi_version (struct ui_out *uiout)
{
  struct ui_out_data *data = ui_out_data (uiout);
  return data->mi_version;
@


1.23.14.2
log
@2003-04-16  David Carlton  <carlton@@bactrian.org>

	* Merge with mainline; tag is carlton_dictionary-20030416-merge.
@
text
@d3 1
a3 1
   Copyright 2000, 2002, 2003 Free Software Foundation, Inc.
a34 1
typedef struct ui_out_data mi_out_data;
d110 1
a110 1
  mi_out_data *data = ui_out_data (uiout);
d124 1
a124 1
  mi_out_data *data = ui_out_data (uiout);
d137 1
a137 1
  mi_out_data *data = ui_out_data (uiout);
d150 1
a150 1
  mi_out_data *data = ui_out_data (uiout);
d169 1
a169 1
  mi_out_data *data = ui_out_data (uiout);
d182 1
a182 1
  mi_out_data *data = ui_out_data (uiout);
d195 1
a195 1
  mi_out_data *data = ui_out_data (uiout);
d209 1
a209 1
  mi_out_data *data = ui_out_data (uiout);
d226 1
a226 1
  mi_out_data *data = ui_out_data (uiout);
d247 1
a247 1
  mi_out_data *data = ui_out_data (uiout);
d285 1
a285 1
  mi_out_data *data = ui_out_data (uiout);
d299 1
a299 1
  mi_out_data *data = ui_out_data (uiout);
d321 1
a321 1
  mi_out_data *data = ui_out_data (uiout);
d333 1
a333 1
  mi_out_data *data = ui_out_data (uiout);
d355 1
a355 1
  mi_out_data *data = ui_out_data (uiout);
d375 1
a375 1
  mi_out_data *data = ui_out_data (uiout);
d384 1
a384 1
  mi_out_data *data = ui_out_data (uiout);
d400 1
a400 1
  mi_out_data *data = ui_out_data (uiout);
d410 1
a410 1
  mi_out_data *data = ui_out_data (uiout);
d420 1
a420 1
  mi_out_data *data = XMALLOC (mi_out_data);
@


1.23.14.3
log
@2003-08-05  David Carlton  <carlton@@kealia.com>

	* configure.in (build_warnings): Delete -Wformat-nonliteral.
	* configure (build_warnings): Ditto.

	* Merge with mainline; tag is carlton_dictionary-20030805-merge.
@
text
@a88 1
  NULL,
@


1.23.14.4
log
@2004-01-26  David Carlton  <carlton@@kealia.com>

	* Merge with mainline; tag is carlton_dictionary-20040126-merge.
@
text
@d3 1
a3 1
   Copyright 2000, 2002, 2003, 2004 Free Software Foundation, Inc.
d101 3
d292 25
@


1.23.6.1
log
@Merge with kseitz_interps-20020930-merge.
@
text
@a430 9
/* Current MI version.  */

int
mi_version (struct ui_out *uiout)
{
  struct ui_out_data *data = ui_out_data (uiout);
  return data->mi_version;
}

@


1.23.6.2
log
@merge from mainline
@
text
@d112 8
d137 2
d149 5
d168 5
d364 4
a367 1
      fputc_unfiltered ('[', data->buffer);
d385 4
a388 1
      fputc_unfiltered (']', data->buffer);
@


1.22
log
@* mi-out.c (mi_out_new): Initialize suppress_ouput field of newly
created `struct ui_out_data'.
@
text
@d2 3
a4 1
   Copyright 2000 Free Software Foundation, Inc.
a26 6

/* Convenience macro for allocting typesafe memory. */

#ifndef XMALLOC
#define XMALLOC(TYPE) (TYPE*) xmalloc (sizeof (TYPE))
#endif
@


1.21
log
@Make function declarators match function declarations.
@
text
@d443 1
@


1.20
log
@Replace:
  if (interpreter_p && strncmp (interpreter_p, "mi", 2) == 0)
with:
  if (ui_out_is_mi_like_p (uiout))
@
text
@d165 1
a165 1
mi_table_header (struct ui_out *uiout, int width, int alignment,
d215 2
a216 2
mi_field_int (struct ui_out *uiout, int fldno, int width, int alignment,
	      const char *fldname, int value)
d230 2
a231 2
mi_field_skip (struct ui_out *uiout, int fldno, int width, int alignment,
	       const char *fldname)
d246 1
a246 1
		 int align,
@


1.19
log
@For MI>0, output full breakpoint table header information.  Output the
breakpoint table body as a list.
@
text
@d91 2
a92 1
  mi_flush
@


1.18
log
@* mi-out.c (struct ui_out_data): Replace field first_header with
suppress_output.
(mi_begin, mi_end): Check suppress_header.
(mi_field_int, mi_field_skip): Ditto.
(mi_field_string, mi_field_fmt): Ditto.
(mi_table_begin): When nr_rows is zero, set suppress_header else,
output the start of the header.
(mi_table_body): Clear suppress header.
@
text
@d108 2
a109 1
mi_table_begin (struct ui_out *uiout, int nbrofcols,
d115 1
a115 1
  if (nr_rows == 0)
d117 4
a120 1
      data->suppress_output = 1;
d123 5
a127 1
  mi_open (uiout, "hdr", ui_out_type_tuple);
d136 2
d139 2
a140 1
  if (data->suppress_output)
d142 1
a142 1
  mi_close (uiout, ui_out_type_tuple);
d152 6
d171 11
a181 1
  mi_field_string (uiout, 0, width, alignment, 0, colhdr);
d367 3
a369 1
      if (data->mi_version > 0)
a370 2
      else
	fputc_unfiltered ('{', data->buffer);
d388 3
a390 1
      if (data->mi_version > 0)
a391 2
      else
	fputc_unfiltered ('}', data->buffer);
@


1.17
log
@Output ``[]'' when a list.
@
text
@d35 1
a35 1
    int first_header;
d114 6
a119 1
  data->first_header = 0;
d129 3
a131 2
  if (data->first_header)
    mi_close (uiout, ui_out_type_tuple);
d140 1
d152 2
a153 4
  if (!data->first_header++)
    {
      mi_open (uiout, "hdr", ui_out_type_tuple);
    }
d166 2
d179 2
d191 3
d205 3
d223 2
d244 2
@


1.16
log
@* ui-out.h (ui_out_table_header): Add parameter ``col_name''.
(table_header_ftype): Ditto.
* cli-out.c (cli_table_header): Update.
* ui-out.c (ui_out_table_header): Update.
(uo_table_header): Update.
(default_table_header): Update.
(append_header_to_list): Update.
(struct ui_out_header): Add field ``col_name''.
(append_header_to_list): Use xstrdup.  Initialize col_name.
* breakpoint.c (breakpoint_1): Pass COL_NAME to
ui_out_table_header.
@
text
@d321 4
a324 1
      fputc_unfiltered ('[', data->buffer);
d342 4
a345 1
      fputc_unfiltered (']', data->buffer);
@


1.15
log
@* ui-out.c (ui_out_table_begin): Add parameter ``nr_rows''.
(default_table_begin): Ditto.
* breakpoint.c (breakpoint_1): Pass nr_printable_breakpoints to
ui_out_table_begin.
Update everything.
@
text
@d47 1
a47 1
			     enum ui_align alig,
d141 1
@


1.14
log
@Recognize -i=mi0, -i=mi1 and -i=mi.
@
text
@d43 1
a43 1
			    const char *tblid);
d109 1
@


1.13
log
@s/supress/suppress/
@
text
@d36 1
d383 1
a383 1
mi_out_new (void)
d388 1
@


1.12
log
@Move supress_field_separator logic into mi_open() and mi_close().
@
text
@d34 1
a34 1
    int supress_field_separator;
d296 2
a297 2
  if (data->supress_field_separator)
    data->supress_field_separator = 0;
d309 1
a309 1
  data->supress_field_separator = 1;
d341 1
a341 1
  data->supress_field_separator = 0;
d386 1
a386 1
  data->supress_field_separator = 0;
@


1.11
log
@Make char *, const char *.
@
text
@d97 2
a98 1
static void mi_open (struct ui_out *uiout, enum ui_out_type type);
d111 1
a111 4
  field_separator (uiout);
  if (tblid)
    fprintf_unfiltered (data->buffer, "%s=", tblid);
  mi_open (uiout, ui_out_type_tuple);
a112 1
  data->supress_field_separator = 1;
a132 2
  /* If table was empty this flag did not get reset yet */
  data->supress_field_separator = 0;
d144 1
a144 2
      fputs_unfiltered ("hdr=", data->buffer);
      mi_open (uiout, ui_out_type_tuple);
d158 1
a158 5
  field_separator (uiout);
  data->supress_field_separator = 1;
  if (id)
    fprintf_unfiltered (data->buffer, "%s=", id);
  mi_open (uiout, type);
a169 2
  /* If list was empty this flag did not get reset yet */
  data->supress_field_separator = 0;
d304 1
d308 4
d341 1
@


1.10
log
@Output ``[...]'' when a list.
@
text
@d41 2
a42 1
static void mi_table_begin (struct ui_out *uiout, int nbrofcols, char *tblid);
d46 2
a47 1
			     enum ui_align alig, char *colhdr);
d52 1
a52 1
			  enum ui_align alig, char *fldname, int value);
d54 1
a54 1
			   enum ui_align alig, char *fldname);
d56 1
a56 1
			     enum ui_align alig, char *fldname,
d60 2
a61 1
			  char *fldname, char *format, va_list args);
d63 3
a65 3
static void mi_text (struct ui_out *uiout, char *string);
static void mi_message (struct ui_out *uiout, int verbosity, char *format,
			va_list args);
d106 2
a107 1
mi_table_begin (struct ui_out *uiout, int nbrofcols, char *tblid)
d143 2
a144 1
mi_table_header (struct ui_out *uiout, int width, int alignment, char *colhdr)
d188 1
a188 1
	      char *fldname, int value)
d200 1
a200 1
	       char *fldname)
d213 1
a213 1
		 char *fldname,
d231 3
a233 1
	      char *fldname, char *format, va_list args)
d251 1
a251 1
mi_text (struct ui_out *uiout, char *string)
d256 3
a258 1
mi_message (struct ui_out *uiout, int verbosity, char *format, va_list args)
@


1.9
log
@s/ui_out_list/ui_out_tupple/
@
text
@d310 11
a320 1
  fputc_unfiltered ('{', data->buffer);
d328 11
a338 1
  fputc_unfiltered ('}', data->buffer);
@


1.8
log
@Pass the tupple/list parameter.
@
text
@d109 1
a109 1
  mi_open (uiout, ui_out_type_tupple);
d122 1
a122 1
    mi_close (uiout, ui_out_type_tupple);
d131 1
a131 1
  mi_close (uiout, ui_out_type_tupple);
d145 1
a145 1
      mi_open (uiout, ui_out_type_tupple);
@


1.7
log
@Replace ui_out_list_{begin,end}() with ui_out_{begin,end}().
@
text
@d94 2
a95 2
static void list_open (struct ui_out *uiout);
static void list_close (struct ui_out *uiout);
d109 1
a109 1
  list_open (uiout);
d122 1
a122 1
    list_close (uiout);
d131 1
a131 1
  list_close (uiout);
d145 1
a145 1
      list_open (uiout);
d156 1
a156 1
	  const char *lstid)
d161 3
a163 3
  if (lstid)
    fprintf_unfiltered (data->buffer, "%s=", lstid);
  list_open (uiout);
d174 1
a174 1
  list_close (uiout);
d306 2
a307 1
list_open (struct ui_out *uiout)
d314 2
a315 1
list_close (struct ui_out *uiout)
@


1.6
log
@Update/correct copyright notices.
@
text
@d46 3
a48 2
static void mi_list_begin (struct ui_out *uiout, int list_flag, char *lstid);
static void mi_list_end (struct ui_out *uiout, int list_flag);
d77 2
a78 2
  mi_list_begin,
  mi_list_end,
d153 4
a156 1
mi_list_begin (struct ui_out *uiout, int list_flag, char *lstid)
d169 3
a171 1
mi_list_end (struct ui_out *uiout, int list_flag)
@


1.5
log
@Protoization.
@
text
@d2 1
a2 1
   Copyright (C) 2000, Free Software Foundation, Inc.
@


1.4
log
@PARAMS removal.
@
text
@d102 1
a102 4
mi_table_begin (uiout, nbrofcols, tblid)
     struct ui_out *uiout;
     int nbrofcols;
     char *tblid;
d116 1
a116 2
mi_table_body (uiout)
     struct ui_out *uiout;
d127 1
a127 2
mi_table_end (uiout)
     struct ui_out *uiout;
d138 1
a138 5
mi_table_header (uiout, width, alignment, colhdr)
     struct ui_out *uiout;
     int width;
     int alignment;
     char *colhdr;
d152 1
a152 4
mi_list_begin (uiout, list_flag, lstid)
     struct ui_out *uiout;
     int list_flag;
     char *lstid;
d165 1
a165 3
mi_list_end (uiout, list_flag)
     struct ui_out *uiout;
     int list_flag;
d176 2
a177 7
mi_field_int (uiout, fldno, width, alignment, fldname, value)
     struct ui_out *uiout;
     int fldno;
     int width;
     int alignment;
     char *fldname;
     int value;
d188 2
a189 6
mi_field_skip (uiout, fldno, width, alignment, fldname)
     struct ui_out *uiout;
     int fldno;
     int width;
     int alignment;
     char *fldname;
d233 1
a233 3
mi_spaces (uiout, numspaces)
     struct ui_out *uiout;
     int numspaces;
d238 1
a238 3
mi_text (uiout, string)
     struct ui_out *uiout;
     char *string;
d248 1
a248 3
mi_wrap_hint (uiout, identstring)
     struct ui_out *uiout;
     char *identstring;
d254 1
a254 2
mi_flush (uiout)
     struct ui_out *uiout;
d364 1
a364 1
_initialize_mi_out ()
@


1.3
log
@Rename mi/ChangeLog-mi -> mi/ChangeLog
@
text
@d91 1
a91 1
extern void _initialize_mi_out PARAMS ((void));
@


1.2
log
@Fix copyright - Cygnus is a Red Hat company.
@
text
@a397 4

/* Local variables: */
/* change-log-default-name: "ChangeLog-mi" */
/* End: */
@


1.1
log
@Add mi/ and testsuite/gdb.mi/ subdirectories.
Add --enable-gdbmi option to configury.
Add mi rules to Makefile.in
Add mi conditional output to event-top.c infrun.c main.c top.c.
Add -i=mi option.
@
text
@d3 1
a3 1
   Contributed by Cygnus Solutions.
@

