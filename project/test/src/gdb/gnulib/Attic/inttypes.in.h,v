head	1.3;
access;
symbols;
locks; strict;
comment	@ * @;


1.3
date	2012.04.19.15.27.49;	author palves;	state dead;
branches;
next	1.2;

1.2
date	2012.04.18.20.45.17;	author palves;	state Exp;
branches;
next	1.1;

1.1
date	2012.04.14.05.24.57;	author qiyao;	state Exp;
branches;
next	;


desc
@@


1.3
log
@2012-04-19  Pedro Alves  <palves@@redhat.com>

	gdb/
	* gnulib/: Move whole directory ...
	* gnulib/import/: ... here, and re-rerun gnulib-tool to adjust.
	* Makefile.in (LIBGNU, INCGNU, GNULIB_H, CLEANDIRS)
	(REQUIRED_SUBDIRS, all-lib, gnulib/Makefile, ACLOCAL_AMFLAGS)
	(aclocal_m4_deps): Adjust.
	* aclocal.m4: Regenerate.
	* configure: Regenerate.
	* configure.ac: Adjust AC_OUTPUT output.

	gdbserver/
	* Makefile.in (LIBGNU, INCGNU): Adjust.
	(GNULIB_FLAGS_TO_PASS, GNULIB_H): Adjust.
	(all, install-only, uninstall, clean-info, all-lib, clean)
	(maintainer-clean, Makefile, gnulib/Makefile): Adjust.
	* configure.ac: Adjust AC_OUTPUT output.
	* aclocal.m4: Regenerate.
	* configure: Regenerate.
@
text
@/* Copyright (C) 2006-2012 Free Software Foundation, Inc.
   Written by Paul Eggert, Bruno Haible, Derek Price.
   This file is part of gnulib.

   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */

/*
 * ISO C 99 <inttypes.h> for platforms that lack it.
 * <http://www.opengroup.org/susv3xbd/inttypes.h.html>
 */

#if __GNUC__ >= 3
@@PRAGMA_SYSTEM_HEADER@@
#endif
@@PRAGMA_COLUMNS@@

/* Include the original <inttypes.h> if it exists, and if this file
   has not been included yet or if this file includes gnulib stdint.h
   which in turn includes this file.
   The include_next requires a split double-inclusion guard.  */
#if ! defined INTTYPES_H || defined _GL_JUST_INCLUDE_SYSTEM_INTTYPES_H
# if @@HAVE_INTTYPES_H@@

   /* Some pre-C++11 <stdint.h> implementations need this.  */
#  if defined __cplusplus && ! defined __STDC_FORMAT_MACROS
#   define __STDC_FORMAT_MACROS 1
#  endif

#  @@INCLUDE_NEXT@@ @@NEXT_INTTYPES_H@@
# endif
#endif

#if ! defined INTTYPES_H && ! defined _GL_JUST_INCLUDE_SYSTEM_INTTYPES_H
#define INTTYPES_H

/* Include <stdint.h> or the gnulib replacement.
   But avoid namespace pollution on glibc systems.  */
#ifndef __GLIBC__
# include <stdint.h>
#endif
/* Get CHAR_BIT.  */
#include <limits.h>

#if !(INT_MIN == INT32_MIN && INT_MAX == INT32_MAX)
# error "This file assumes that 'int' has exactly 32 bits. Please report your platform and compiler to <bug-gnulib@@gnu.org>."
#endif

/* The definitions of _GL_FUNCDECL_RPL etc. are copied here.  */

/* The definition of _GL_ARG_NONNULL is copied here.  */

/* The definition of _GL_WARN_ON_USE is copied here.  */

/* 7.8.1 Macros for format specifiers */

#if defined _TNS_R_TARGET
   /* Tandem NonStop R series and compatible platforms released before
      July 2005 support %Ld but not %lld.  */
# define _LONG_LONG_FORMAT_PREFIX "L"
#else
# define _LONG_LONG_FORMAT_PREFIX "ll"
#endif

#if !defined PRId8 || @@PRI_MACROS_BROKEN@@
# undef PRId8
# ifdef INT8_MAX
#  define PRId8 "d"
# endif
#endif
#if !defined PRIi8 || @@PRI_MACROS_BROKEN@@
# undef PRIi8
# ifdef INT8_MAX
#  define PRIi8 "i"
# endif
#endif
#if !defined PRIo8 || @@PRI_MACROS_BROKEN@@
# undef PRIo8
# ifdef UINT8_MAX
#  define PRIo8 "o"
# endif
#endif
#if !defined PRIu8 || @@PRI_MACROS_BROKEN@@
# undef PRIu8
# ifdef UINT8_MAX
#  define PRIu8 "u"
# endif
#endif
#if !defined PRIx8 || @@PRI_MACROS_BROKEN@@
# undef PRIx8
# ifdef UINT8_MAX
#  define PRIx8 "x"
# endif
#endif
#if !defined PRIX8 || @@PRI_MACROS_BROKEN@@
# undef PRIX8
# ifdef UINT8_MAX
#  define PRIX8 "X"
# endif
#endif
#if !defined PRId16 || @@PRI_MACROS_BROKEN@@
# undef PRId16
# ifdef INT16_MAX
#  define PRId16 "d"
# endif
#endif
#if !defined PRIi16 || @@PRI_MACROS_BROKEN@@
# undef PRIi16
# ifdef INT16_MAX
#  define PRIi16 "i"
# endif
#endif
#if !defined PRIo16 || @@PRI_MACROS_BROKEN@@
# undef PRIo16
# ifdef UINT16_MAX
#  define PRIo16 "o"
# endif
#endif
#if !defined PRIu16 || @@PRI_MACROS_BROKEN@@
# undef PRIu16
# ifdef UINT16_MAX
#  define PRIu16 "u"
# endif
#endif
#if !defined PRIx16 || @@PRI_MACROS_BROKEN@@
# undef PRIx16
# ifdef UINT16_MAX
#  define PRIx16 "x"
# endif
#endif
#if !defined PRIX16 || @@PRI_MACROS_BROKEN@@
# undef PRIX16
# ifdef UINT16_MAX
#  define PRIX16 "X"
# endif
#endif
#if !defined PRId32 || @@PRI_MACROS_BROKEN@@
# undef PRId32
# ifdef INT32_MAX
#  define PRId32 "d"
# endif
#endif
#if !defined PRIi32 || @@PRI_MACROS_BROKEN@@
# undef PRIi32
# ifdef INT32_MAX
#  define PRIi32 "i"
# endif
#endif
#if !defined PRIo32 || @@PRI_MACROS_BROKEN@@
# undef PRIo32
# ifdef UINT32_MAX
#  define PRIo32 "o"
# endif
#endif
#if !defined PRIu32 || @@PRI_MACROS_BROKEN@@
# undef PRIu32
# ifdef UINT32_MAX
#  define PRIu32 "u"
# endif
#endif
#if !defined PRIx32 || @@PRI_MACROS_BROKEN@@
# undef PRIx32
# ifdef UINT32_MAX
#  define PRIx32 "x"
# endif
#endif
#if !defined PRIX32 || @@PRI_MACROS_BROKEN@@
# undef PRIX32
# ifdef UINT32_MAX
#  define PRIX32 "X"
# endif
#endif
#ifdef INT64_MAX
# if (@@APPLE_UNIVERSAL_BUILD@@ ? defined _LP64 : @@INT64_MAX_EQ_LONG_MAX@@)
#  define _PRI64_PREFIX "l"
# elif defined _MSC_VER || defined __MINGW32__
#  define _PRI64_PREFIX "I64"
# elif @@HAVE_LONG_LONG_INT@@ && LONG_MAX >> 30 == 1
#  define _PRI64_PREFIX _LONG_LONG_FORMAT_PREFIX
# endif
# if !defined PRId64 || @@PRI_MACROS_BROKEN@@
#  undef PRId64
#  define PRId64 _PRI64_PREFIX "d"
# endif
# if !defined PRIi64 || @@PRI_MACROS_BROKEN@@
#  undef PRIi64
#  define PRIi64 _PRI64_PREFIX "i"
# endif
#endif
#ifdef UINT64_MAX
# if (@@APPLE_UNIVERSAL_BUILD@@ ? defined _LP64 : @@UINT64_MAX_EQ_ULONG_MAX@@)
#  define _PRIu64_PREFIX "l"
# elif defined _MSC_VER || defined __MINGW32__
#  define _PRIu64_PREFIX "I64"
# elif @@HAVE_UNSIGNED_LONG_LONG_INT@@ && ULONG_MAX >> 31 == 1
#  define _PRIu64_PREFIX _LONG_LONG_FORMAT_PREFIX
# endif
# if !defined PRIo64 || @@PRI_MACROS_BROKEN@@
#  undef PRIo64
#  define PRIo64 _PRIu64_PREFIX "o"
# endif
# if !defined PRIu64 || @@PRI_MACROS_BROKEN@@
#  undef PRIu64
#  define PRIu64 _PRIu64_PREFIX "u"
# endif
# if !defined PRIx64 || @@PRI_MACROS_BROKEN@@
#  undef PRIx64
#  define PRIx64 _PRIu64_PREFIX "x"
# endif
# if !defined PRIX64 || @@PRI_MACROS_BROKEN@@
#  undef PRIX64
#  define PRIX64 _PRIu64_PREFIX "X"
# endif
#endif

#if !defined PRIdLEAST8 || @@PRI_MACROS_BROKEN@@
# undef PRIdLEAST8
# define PRIdLEAST8 "d"
#endif
#if !defined PRIiLEAST8 || @@PRI_MACROS_BROKEN@@
# undef PRIiLEAST8
# define PRIiLEAST8 "i"
#endif
#if !defined PRIoLEAST8 || @@PRI_MACROS_BROKEN@@
# undef PRIoLEAST8
# define PRIoLEAST8 "o"
#endif
#if !defined PRIuLEAST8 || @@PRI_MACROS_BROKEN@@
# undef PRIuLEAST8
# define PRIuLEAST8 "u"
#endif
#if !defined PRIxLEAST8 || @@PRI_MACROS_BROKEN@@
# undef PRIxLEAST8
# define PRIxLEAST8 "x"
#endif
#if !defined PRIXLEAST8 || @@PRI_MACROS_BROKEN@@
# undef PRIXLEAST8
# define PRIXLEAST8 "X"
#endif
#if !defined PRIdLEAST16 || @@PRI_MACROS_BROKEN@@
# undef PRIdLEAST16
# define PRIdLEAST16 "d"
#endif
#if !defined PRIiLEAST16 || @@PRI_MACROS_BROKEN@@
# undef PRIiLEAST16
# define PRIiLEAST16 "i"
#endif
#if !defined PRIoLEAST16 || @@PRI_MACROS_BROKEN@@
# undef PRIoLEAST16
# define PRIoLEAST16 "o"
#endif
#if !defined PRIuLEAST16 || @@PRI_MACROS_BROKEN@@
# undef PRIuLEAST16
# define PRIuLEAST16 "u"
#endif
#if !defined PRIxLEAST16 || @@PRI_MACROS_BROKEN@@
# undef PRIxLEAST16
# define PRIxLEAST16 "x"
#endif
#if !defined PRIXLEAST16 || @@PRI_MACROS_BROKEN@@
# undef PRIXLEAST16
# define PRIXLEAST16 "X"
#endif
#if !defined PRIdLEAST32 || @@PRI_MACROS_BROKEN@@
# undef PRIdLEAST32
# define PRIdLEAST32 "d"
#endif
#if !defined PRIiLEAST32 || @@PRI_MACROS_BROKEN@@
# undef PRIiLEAST32
# define PRIiLEAST32 "i"
#endif
#if !defined PRIoLEAST32 || @@PRI_MACROS_BROKEN@@
# undef PRIoLEAST32
# define PRIoLEAST32 "o"
#endif
#if !defined PRIuLEAST32 || @@PRI_MACROS_BROKEN@@
# undef PRIuLEAST32
# define PRIuLEAST32 "u"
#endif
#if !defined PRIxLEAST32 || @@PRI_MACROS_BROKEN@@
# undef PRIxLEAST32
# define PRIxLEAST32 "x"
#endif
#if !defined PRIXLEAST32 || @@PRI_MACROS_BROKEN@@
# undef PRIXLEAST32
# define PRIXLEAST32 "X"
#endif
#ifdef INT64_MAX
# if !defined PRIdLEAST64 || @@PRI_MACROS_BROKEN@@
#  undef PRIdLEAST64
#  define PRIdLEAST64 PRId64
# endif
# if !defined PRIiLEAST64 || @@PRI_MACROS_BROKEN@@
#  undef PRIiLEAST64
#  define PRIiLEAST64 PRIi64
# endif
#endif
#ifdef UINT64_MAX
# if !defined PRIoLEAST64 || @@PRI_MACROS_BROKEN@@
#  undef PRIoLEAST64
#  define PRIoLEAST64 PRIo64
# endif
# if !defined PRIuLEAST64 || @@PRI_MACROS_BROKEN@@
#  undef PRIuLEAST64
#  define PRIuLEAST64 PRIu64
# endif
# if !defined PRIxLEAST64 || @@PRI_MACROS_BROKEN@@
#  undef PRIxLEAST64
#  define PRIxLEAST64 PRIx64
# endif
# if !defined PRIXLEAST64 || @@PRI_MACROS_BROKEN@@
#  undef PRIXLEAST64
#  define PRIXLEAST64 PRIX64
# endif
#endif

#if !defined PRIdFAST8 || @@PRI_MACROS_BROKEN@@
# undef PRIdFAST8
# if INT_FAST8_MAX > INT32_MAX
#  define PRIdFAST8 PRId64
# else
#  define PRIdFAST8 "d"
# endif
#endif
#if !defined PRIiFAST8 || @@PRI_MACROS_BROKEN@@
# undef PRIiFAST8
# if INT_FAST8_MAX > INT32_MAX
#  define PRIiFAST8 PRIi64
# else
#  define PRIiFAST8 "i"
# endif
#endif
#if !defined PRIoFAST8 || @@PRI_MACROS_BROKEN@@
# undef PRIoFAST8
# if UINT_FAST8_MAX > UINT32_MAX
#  define PRIoFAST8 PRIo64
# else
#  define PRIoFAST8 "o"
# endif
#endif
#if !defined PRIuFAST8 || @@PRI_MACROS_BROKEN@@
# undef PRIuFAST8
# if UINT_FAST8_MAX > UINT32_MAX
#  define PRIuFAST8 PRIu64
# else
#  define PRIuFAST8 "u"
# endif
#endif
#if !defined PRIxFAST8 || @@PRI_MACROS_BROKEN@@
# undef PRIxFAST8
# if UINT_FAST8_MAX > UINT32_MAX
#  define PRIxFAST8 PRIx64
# else
#  define PRIxFAST8 "x"
# endif
#endif
#if !defined PRIXFAST8 || @@PRI_MACROS_BROKEN@@
# undef PRIXFAST8
# if UINT_FAST8_MAX > UINT32_MAX
#  define PRIXFAST8 PRIX64
# else
#  define PRIXFAST8 "X"
# endif
#endif
#if !defined PRIdFAST16 || @@PRI_MACROS_BROKEN@@
# undef PRIdFAST16
# if INT_FAST16_MAX > INT32_MAX
#  define PRIdFAST16 PRId64
# else
#  define PRIdFAST16 "d"
# endif
#endif
#if !defined PRIiFAST16 || @@PRI_MACROS_BROKEN@@
# undef PRIiFAST16
# if INT_FAST16_MAX > INT32_MAX
#  define PRIiFAST16 PRIi64
# else
#  define PRIiFAST16 "i"
# endif
#endif
#if !defined PRIoFAST16 || @@PRI_MACROS_BROKEN@@
# undef PRIoFAST16
# if UINT_FAST16_MAX > UINT32_MAX
#  define PRIoFAST16 PRIo64
# else
#  define PRIoFAST16 "o"
# endif
#endif
#if !defined PRIuFAST16 || @@PRI_MACROS_BROKEN@@
# undef PRIuFAST16
# if UINT_FAST16_MAX > UINT32_MAX
#  define PRIuFAST16 PRIu64
# else
#  define PRIuFAST16 "u"
# endif
#endif
#if !defined PRIxFAST16 || @@PRI_MACROS_BROKEN@@
# undef PRIxFAST16
# if UINT_FAST16_MAX > UINT32_MAX
#  define PRIxFAST16 PRIx64
# else
#  define PRIxFAST16 "x"
# endif
#endif
#if !defined PRIXFAST16 || @@PRI_MACROS_BROKEN@@
# undef PRIXFAST16
# if UINT_FAST16_MAX > UINT32_MAX
#  define PRIXFAST16 PRIX64
# else
#  define PRIXFAST16 "X"
# endif
#endif
#if !defined PRIdFAST32 || @@PRI_MACROS_BROKEN@@
# undef PRIdFAST32
# if INT_FAST32_MAX > INT32_MAX
#  define PRIdFAST32 PRId64
# else
#  define PRIdFAST32 "d"
# endif
#endif
#if !defined PRIiFAST32 || @@PRI_MACROS_BROKEN@@
# undef PRIiFAST32
# if INT_FAST32_MAX > INT32_MAX
#  define PRIiFAST32 PRIi64
# else
#  define PRIiFAST32 "i"
# endif
#endif
#if !defined PRIoFAST32 || @@PRI_MACROS_BROKEN@@
# undef PRIoFAST32
# if UINT_FAST32_MAX > UINT32_MAX
#  define PRIoFAST32 PRIo64
# else
#  define PRIoFAST32 "o"
# endif
#endif
#if !defined PRIuFAST32 || @@PRI_MACROS_BROKEN@@
# undef PRIuFAST32
# if UINT_FAST32_MAX > UINT32_MAX
#  define PRIuFAST32 PRIu64
# else
#  define PRIuFAST32 "u"
# endif
#endif
#if !defined PRIxFAST32 || @@PRI_MACROS_BROKEN@@
# undef PRIxFAST32
# if UINT_FAST32_MAX > UINT32_MAX
#  define PRIxFAST32 PRIx64
# else
#  define PRIxFAST32 "x"
# endif
#endif
#if !defined PRIXFAST32 || @@PRI_MACROS_BROKEN@@
# undef PRIXFAST32
# if UINT_FAST32_MAX > UINT32_MAX
#  define PRIXFAST32 PRIX64
# else
#  define PRIXFAST32 "X"
# endif
#endif
#ifdef INT64_MAX
# if !defined PRIdFAST64 || @@PRI_MACROS_BROKEN@@
#  undef PRIdFAST64
#  define PRIdFAST64 PRId64
# endif
# if !defined PRIiFAST64 || @@PRI_MACROS_BROKEN@@
#  undef PRIiFAST64
#  define PRIiFAST64 PRIi64
# endif
#endif
#ifdef UINT64_MAX
# if !defined PRIoFAST64 || @@PRI_MACROS_BROKEN@@
#  undef PRIoFAST64
#  define PRIoFAST64 PRIo64
# endif
# if !defined PRIuFAST64 || @@PRI_MACROS_BROKEN@@
#  undef PRIuFAST64
#  define PRIuFAST64 PRIu64
# endif
# if !defined PRIxFAST64 || @@PRI_MACROS_BROKEN@@
#  undef PRIxFAST64
#  define PRIxFAST64 PRIx64
# endif
# if !defined PRIXFAST64 || @@PRI_MACROS_BROKEN@@
#  undef PRIXFAST64
#  define PRIXFAST64 PRIX64
# endif
#endif

#if !defined PRIdMAX || @@PRI_MACROS_BROKEN@@
# undef PRIdMAX
# if @@INT32_MAX_LT_INTMAX_MAX@@
#  define PRIdMAX PRId64
# else
#  define PRIdMAX "ld"
# endif
#endif
#if !defined PRIiMAX || @@PRI_MACROS_BROKEN@@
# undef PRIiMAX
# if @@INT32_MAX_LT_INTMAX_MAX@@
#  define PRIiMAX PRIi64
# else
#  define PRIiMAX "li"
# endif
#endif
#if !defined PRIoMAX || @@PRI_MACROS_BROKEN@@
# undef PRIoMAX
# if @@UINT32_MAX_LT_UINTMAX_MAX@@
#  define PRIoMAX PRIo64
# else
#  define PRIoMAX "lo"
# endif
#endif
#if !defined PRIuMAX || @@PRI_MACROS_BROKEN@@
# undef PRIuMAX
# if @@UINT32_MAX_LT_UINTMAX_MAX@@
#  define PRIuMAX PRIu64
# else
#  define PRIuMAX "lu"
# endif
#endif
#if !defined PRIxMAX || @@PRI_MACROS_BROKEN@@
# undef PRIxMAX
# if @@UINT32_MAX_LT_UINTMAX_MAX@@
#  define PRIxMAX PRIx64
# else
#  define PRIxMAX "lx"
# endif
#endif
#if !defined PRIXMAX || @@PRI_MACROS_BROKEN@@
# undef PRIXMAX
# if @@UINT32_MAX_LT_UINTMAX_MAX@@
#  define PRIXMAX PRIX64
# else
#  define PRIXMAX "lX"
# endif
#endif

#if !defined PRIdPTR || @@PRI_MACROS_BROKEN@@
# undef PRIdPTR
# ifdef INTPTR_MAX
#  define PRIdPTR @@PRIPTR_PREFIX@@ "d"
# endif
#endif
#if !defined PRIiPTR || @@PRI_MACROS_BROKEN@@
# undef PRIiPTR
# ifdef INTPTR_MAX
#  define PRIiPTR @@PRIPTR_PREFIX@@ "i"
# endif
#endif
#if !defined PRIoPTR || @@PRI_MACROS_BROKEN@@
# undef PRIoPTR
# ifdef UINTPTR_MAX
#  define PRIoPTR @@PRIPTR_PREFIX@@ "o"
# endif
#endif
#if !defined PRIuPTR || @@PRI_MACROS_BROKEN@@
# undef PRIuPTR
# ifdef UINTPTR_MAX
#  define PRIuPTR @@PRIPTR_PREFIX@@ "u"
# endif
#endif
#if !defined PRIxPTR || @@PRI_MACROS_BROKEN@@
# undef PRIxPTR
# ifdef UINTPTR_MAX
#  define PRIxPTR @@PRIPTR_PREFIX@@ "x"
# endif
#endif
#if !defined PRIXPTR || @@PRI_MACROS_BROKEN@@
# undef PRIXPTR
# ifdef UINTPTR_MAX
#  define PRIXPTR @@PRIPTR_PREFIX@@ "X"
# endif
#endif

#if !defined SCNd8 || @@PRI_MACROS_BROKEN@@
# undef SCNd8
# ifdef INT8_MAX
#  define SCNd8 "hhd"
# endif
#endif
#if !defined SCNi8 || @@PRI_MACROS_BROKEN@@
# undef SCNi8
# ifdef INT8_MAX
#  define SCNi8 "hhi"
# endif
#endif
#if !defined SCNo8 || @@PRI_MACROS_BROKEN@@
# undef SCNo8
# ifdef UINT8_MAX
#  define SCNo8 "hho"
# endif
#endif
#if !defined SCNu8 || @@PRI_MACROS_BROKEN@@
# undef SCNu8
# ifdef UINT8_MAX
#  define SCNu8 "hhu"
# endif
#endif
#if !defined SCNx8 || @@PRI_MACROS_BROKEN@@
# undef SCNx8
# ifdef UINT8_MAX
#  define SCNx8 "hhx"
# endif
#endif
#if !defined SCNd16 || @@PRI_MACROS_BROKEN@@
# undef SCNd16
# ifdef INT16_MAX
#  define SCNd16 "hd"
# endif
#endif
#if !defined SCNi16 || @@PRI_MACROS_BROKEN@@
# undef SCNi16
# ifdef INT16_MAX
#  define SCNi16 "hi"
# endif
#endif
#if !defined SCNo16 || @@PRI_MACROS_BROKEN@@
# undef SCNo16
# ifdef UINT16_MAX
#  define SCNo16 "ho"
# endif
#endif
#if !defined SCNu16 || @@PRI_MACROS_BROKEN@@
# undef SCNu16
# ifdef UINT16_MAX
#  define SCNu16 "hu"
# endif
#endif
#if !defined SCNx16 || @@PRI_MACROS_BROKEN@@
# undef SCNx16
# ifdef UINT16_MAX
#  define SCNx16 "hx"
# endif
#endif
#if !defined SCNd32 || @@PRI_MACROS_BROKEN@@
# undef SCNd32
# ifdef INT32_MAX
#  define SCNd32 "d"
# endif
#endif
#if !defined SCNi32 || @@PRI_MACROS_BROKEN@@
# undef SCNi32
# ifdef INT32_MAX
#  define SCNi32 "i"
# endif
#endif
#if !defined SCNo32 || @@PRI_MACROS_BROKEN@@
# undef SCNo32
# ifdef UINT32_MAX
#  define SCNo32 "o"
# endif
#endif
#if !defined SCNu32 || @@PRI_MACROS_BROKEN@@
# undef SCNu32
# ifdef UINT32_MAX
#  define SCNu32 "u"
# endif
#endif
#if !defined SCNx32 || @@PRI_MACROS_BROKEN@@
# undef SCNx32
# ifdef UINT32_MAX
#  define SCNx32 "x"
# endif
#endif
#ifdef INT64_MAX
# if (@@APPLE_UNIVERSAL_BUILD@@ ? defined _LP64 : @@INT64_MAX_EQ_LONG_MAX@@)
#  define _SCN64_PREFIX "l"
# elif defined _MSC_VER || defined __MINGW32__
#  define _SCN64_PREFIX "I64"
# elif @@HAVE_LONG_LONG_INT@@ && LONG_MAX >> 30 == 1
#  define _SCN64_PREFIX _LONG_LONG_FORMAT_PREFIX
# endif
# if !defined SCNd64 || @@PRI_MACROS_BROKEN@@
#  undef SCNd64
#  define SCNd64 _SCN64_PREFIX "d"
# endif
# if !defined SCNi64 || @@PRI_MACROS_BROKEN@@
#  undef SCNi64
#  define SCNi64 _SCN64_PREFIX "i"
# endif
#endif
#ifdef UINT64_MAX
# if (@@APPLE_UNIVERSAL_BUILD@@ ? defined _LP64 : @@UINT64_MAX_EQ_ULONG_MAX@@)
#  define _SCNu64_PREFIX "l"
# elif defined _MSC_VER || defined __MINGW32__
#  define _SCNu64_PREFIX "I64"
# elif @@HAVE_UNSIGNED_LONG_LONG_INT@@ && ULONG_MAX >> 31 == 1
#  define _SCNu64_PREFIX _LONG_LONG_FORMAT_PREFIX
# endif
# if !defined SCNo64 || @@PRI_MACROS_BROKEN@@
#  undef SCNo64
#  define SCNo64 _SCNu64_PREFIX "o"
# endif
# if !defined SCNu64 || @@PRI_MACROS_BROKEN@@
#  undef SCNu64
#  define SCNu64 _SCNu64_PREFIX "u"
# endif
# if !defined SCNx64 || @@PRI_MACROS_BROKEN@@
#  undef SCNx64
#  define SCNx64 _SCNu64_PREFIX "x"
# endif
#endif

#if !defined SCNdLEAST8 || @@PRI_MACROS_BROKEN@@
# undef SCNdLEAST8
# define SCNdLEAST8 "hhd"
#endif
#if !defined SCNiLEAST8 || @@PRI_MACROS_BROKEN@@
# undef SCNiLEAST8
# define SCNiLEAST8 "hhi"
#endif
#if !defined SCNoLEAST8 || @@PRI_MACROS_BROKEN@@
# undef SCNoLEAST8
# define SCNoLEAST8 "hho"
#endif
#if !defined SCNuLEAST8 || @@PRI_MACROS_BROKEN@@
# undef SCNuLEAST8
# define SCNuLEAST8 "hhu"
#endif
#if !defined SCNxLEAST8 || @@PRI_MACROS_BROKEN@@
# undef SCNxLEAST8
# define SCNxLEAST8 "hhx"
#endif
#if !defined SCNdLEAST16 || @@PRI_MACROS_BROKEN@@
# undef SCNdLEAST16
# define SCNdLEAST16 "hd"
#endif
#if !defined SCNiLEAST16 || @@PRI_MACROS_BROKEN@@
# undef SCNiLEAST16
# define SCNiLEAST16 "hi"
#endif
#if !defined SCNoLEAST16 || @@PRI_MACROS_BROKEN@@
# undef SCNoLEAST16
# define SCNoLEAST16 "ho"
#endif
#if !defined SCNuLEAST16 || @@PRI_MACROS_BROKEN@@
# undef SCNuLEAST16
# define SCNuLEAST16 "hu"
#endif
#if !defined SCNxLEAST16 || @@PRI_MACROS_BROKEN@@
# undef SCNxLEAST16
# define SCNxLEAST16 "hx"
#endif
#if !defined SCNdLEAST32 || @@PRI_MACROS_BROKEN@@
# undef SCNdLEAST32
# define SCNdLEAST32 "d"
#endif
#if !defined SCNiLEAST32 || @@PRI_MACROS_BROKEN@@
# undef SCNiLEAST32
# define SCNiLEAST32 "i"
#endif
#if !defined SCNoLEAST32 || @@PRI_MACROS_BROKEN@@
# undef SCNoLEAST32
# define SCNoLEAST32 "o"
#endif
#if !defined SCNuLEAST32 || @@PRI_MACROS_BROKEN@@
# undef SCNuLEAST32
# define SCNuLEAST32 "u"
#endif
#if !defined SCNxLEAST32 || @@PRI_MACROS_BROKEN@@
# undef SCNxLEAST32
# define SCNxLEAST32 "x"
#endif
#ifdef INT64_MAX
# if !defined SCNdLEAST64 || @@PRI_MACROS_BROKEN@@
#  undef SCNdLEAST64
#  define SCNdLEAST64 SCNd64
# endif
# if !defined SCNiLEAST64 || @@PRI_MACROS_BROKEN@@
#  undef SCNiLEAST64
#  define SCNiLEAST64 SCNi64
# endif
#endif
#ifdef UINT64_MAX
# if !defined SCNoLEAST64 || @@PRI_MACROS_BROKEN@@
#  undef SCNoLEAST64
#  define SCNoLEAST64 SCNo64
# endif
# if !defined SCNuLEAST64 || @@PRI_MACROS_BROKEN@@
#  undef SCNuLEAST64
#  define SCNuLEAST64 SCNu64
# endif
# if !defined SCNxLEAST64 || @@PRI_MACROS_BROKEN@@
#  undef SCNxLEAST64
#  define SCNxLEAST64 SCNx64
# endif
#endif

#if !defined SCNdFAST8 || @@PRI_MACROS_BROKEN@@
# undef SCNdFAST8
# if INT_FAST8_MAX > INT32_MAX
#  define SCNdFAST8 SCNd64
# elif INT_FAST8_MAX == 0x7fff
#  define SCNdFAST8 "hd"
# elif INT_FAST8_MAX == 0x7f
#  define SCNdFAST8 "hhd"
# else
#  define SCNdFAST8 "d"
# endif
#endif
#if !defined SCNiFAST8 || @@PRI_MACROS_BROKEN@@
# undef SCNiFAST8
# if INT_FAST8_MAX > INT32_MAX
#  define SCNiFAST8 SCNi64
# elif INT_FAST8_MAX == 0x7fff
#  define SCNiFAST8 "hi"
# elif INT_FAST8_MAX == 0x7f
#  define SCNiFAST8 "hhi"
# else
#  define SCNiFAST8 "i"
# endif
#endif
#if !defined SCNoFAST8 || @@PRI_MACROS_BROKEN@@
# undef SCNoFAST8
# if UINT_FAST8_MAX > UINT32_MAX
#  define SCNoFAST8 SCNo64
# elif UINT_FAST8_MAX == 0xffff
#  define SCNoFAST8 "ho"
# elif UINT_FAST8_MAX == 0xff
#  define SCNoFAST8 "hho"
# else
#  define SCNoFAST8 "o"
# endif
#endif
#if !defined SCNuFAST8 || @@PRI_MACROS_BROKEN@@
# undef SCNuFAST8
# if UINT_FAST8_MAX > UINT32_MAX
#  define SCNuFAST8 SCNu64
# elif UINT_FAST8_MAX == 0xffff
#  define SCNuFAST8 "hu"
# elif UINT_FAST8_MAX == 0xff
#  define SCNuFAST8 "hhu"
# else
#  define SCNuFAST8 "u"
# endif
#endif
#if !defined SCNxFAST8 || @@PRI_MACROS_BROKEN@@
# undef SCNxFAST8
# if UINT_FAST8_MAX > UINT32_MAX
#  define SCNxFAST8 SCNx64
# elif UINT_FAST8_MAX == 0xffff
#  define SCNxFAST8 "hx"
# elif UINT_FAST8_MAX == 0xff
#  define SCNxFAST8 "hhx"
# else
#  define SCNxFAST8 "x"
# endif
#endif
#if !defined SCNdFAST16 || @@PRI_MACROS_BROKEN@@
# undef SCNdFAST16
# if INT_FAST16_MAX > INT32_MAX
#  define SCNdFAST16 SCNd64
# elif INT_FAST16_MAX == 0x7fff
#  define SCNdFAST16 "hd"
# else
#  define SCNdFAST16 "d"
# endif
#endif
#if !defined SCNiFAST16 || @@PRI_MACROS_BROKEN@@
# undef SCNiFAST16
# if INT_FAST16_MAX > INT32_MAX
#  define SCNiFAST16 SCNi64
# elif INT_FAST16_MAX == 0x7fff
#  define SCNiFAST16 "hi"
# else
#  define SCNiFAST16 "i"
# endif
#endif
#if !defined SCNoFAST16 || @@PRI_MACROS_BROKEN@@
# undef SCNoFAST16
# if UINT_FAST16_MAX > UINT32_MAX
#  define SCNoFAST16 SCNo64
# elif UINT_FAST16_MAX == 0xffff
#  define SCNoFAST16 "ho"
# else
#  define SCNoFAST16 "o"
# endif
#endif
#if !defined SCNuFAST16 || @@PRI_MACROS_BROKEN@@
# undef SCNuFAST16
# if UINT_FAST16_MAX > UINT32_MAX
#  define SCNuFAST16 SCNu64
# elif UINT_FAST16_MAX == 0xffff
#  define SCNuFAST16 "hu"
# else
#  define SCNuFAST16 "u"
# endif
#endif
#if !defined SCNxFAST16 || @@PRI_MACROS_BROKEN@@
# undef SCNxFAST16
# if UINT_FAST16_MAX > UINT32_MAX
#  define SCNxFAST16 SCNx64
# elif UINT_FAST16_MAX == 0xffff
#  define SCNxFAST16 "hx"
# else
#  define SCNxFAST16 "x"
# endif
#endif
#if !defined SCNdFAST32 || @@PRI_MACROS_BROKEN@@
# undef SCNdFAST32
# if INT_FAST32_MAX > INT32_MAX
#  define SCNdFAST32 SCNd64
# else
#  define SCNdFAST32 "d"
# endif
#endif
#if !defined SCNiFAST32 || @@PRI_MACROS_BROKEN@@
# undef SCNiFAST32
# if INT_FAST32_MAX > INT32_MAX
#  define SCNiFAST32 SCNi64
# else
#  define SCNiFAST32 "i"
# endif
#endif
#if !defined SCNoFAST32 || @@PRI_MACROS_BROKEN@@
# undef SCNoFAST32
# if UINT_FAST32_MAX > UINT32_MAX
#  define SCNoFAST32 SCNo64
# else
#  define SCNoFAST32 "o"
# endif
#endif
#if !defined SCNuFAST32 || @@PRI_MACROS_BROKEN@@
# undef SCNuFAST32
# if UINT_FAST32_MAX > UINT32_MAX
#  define SCNuFAST32 SCNu64
# else
#  define SCNuFAST32 "u"
# endif
#endif
#if !defined SCNxFAST32 || @@PRI_MACROS_BROKEN@@
# undef SCNxFAST32
# if UINT_FAST32_MAX > UINT32_MAX
#  define SCNxFAST32 SCNx64
# else
#  define SCNxFAST32 "x"
# endif
#endif
#ifdef INT64_MAX
# if !defined SCNdFAST64 || @@PRI_MACROS_BROKEN@@
#  undef SCNdFAST64
#  define SCNdFAST64 SCNd64
# endif
# if !defined SCNiFAST64 || @@PRI_MACROS_BROKEN@@
#  undef SCNiFAST64
#  define SCNiFAST64 SCNi64
# endif
#endif
#ifdef UINT64_MAX
# if !defined SCNoFAST64 || @@PRI_MACROS_BROKEN@@
#  undef SCNoFAST64
#  define SCNoFAST64 SCNo64
# endif
# if !defined SCNuFAST64 || @@PRI_MACROS_BROKEN@@
#  undef SCNuFAST64
#  define SCNuFAST64 SCNu64
# endif
# if !defined SCNxFAST64 || @@PRI_MACROS_BROKEN@@
#  undef SCNxFAST64
#  define SCNxFAST64 SCNx64
# endif
#endif

#if !defined SCNdMAX || @@PRI_MACROS_BROKEN@@
# undef SCNdMAX
# if @@INT32_MAX_LT_INTMAX_MAX@@
#  define SCNdMAX SCNd64
# else
#  define SCNdMAX "ld"
# endif
#endif
#if !defined SCNiMAX || @@PRI_MACROS_BROKEN@@
# undef SCNiMAX
# if @@INT32_MAX_LT_INTMAX_MAX@@
#  define SCNiMAX SCNi64
# else
#  define SCNiMAX "li"
# endif
#endif
#if !defined SCNoMAX || @@PRI_MACROS_BROKEN@@
# undef SCNoMAX
# if @@UINT32_MAX_LT_UINTMAX_MAX@@
#  define SCNoMAX SCNo64
# else
#  define SCNoMAX "lo"
# endif
#endif
#if !defined SCNuMAX || @@PRI_MACROS_BROKEN@@
# undef SCNuMAX
# if @@UINT32_MAX_LT_UINTMAX_MAX@@
#  define SCNuMAX SCNu64
# else
#  define SCNuMAX "lu"
# endif
#endif
#if !defined SCNxMAX || @@PRI_MACROS_BROKEN@@
# undef SCNxMAX
# if @@UINT32_MAX_LT_UINTMAX_MAX@@
#  define SCNxMAX SCNx64
# else
#  define SCNxMAX "lx"
# endif
#endif

#if !defined SCNdPTR || @@PRI_MACROS_BROKEN@@
# undef SCNdPTR
# ifdef INTPTR_MAX
#  define SCNdPTR @@PRIPTR_PREFIX@@ "d"
# endif
#endif
#if !defined SCNiPTR || @@PRI_MACROS_BROKEN@@
# undef SCNiPTR
# ifdef INTPTR_MAX
#  define SCNiPTR @@PRIPTR_PREFIX@@ "i"
# endif
#endif
#if !defined SCNoPTR || @@PRI_MACROS_BROKEN@@
# undef SCNoPTR
# ifdef UINTPTR_MAX
#  define SCNoPTR @@PRIPTR_PREFIX@@ "o"
# endif
#endif
#if !defined SCNuPTR || @@PRI_MACROS_BROKEN@@
# undef SCNuPTR
# ifdef UINTPTR_MAX
#  define SCNuPTR @@PRIPTR_PREFIX@@ "u"
# endif
#endif
#if !defined SCNxPTR || @@PRI_MACROS_BROKEN@@
# undef SCNxPTR
# ifdef UINTPTR_MAX
#  define SCNxPTR @@PRIPTR_PREFIX@@ "x"
# endif
#endif

/* 7.8.2 Functions for greatest-width integer types */

#ifdef __cplusplus
extern "C" {
#endif

#if @@GNULIB_IMAXABS@@
# if !@@HAVE_DECL_IMAXABS@@
extern intmax_t imaxabs (intmax_t);
# endif
#elif defined GNULIB_POSIXCHECK
# undef imaxabs
# if HAVE_RAW_DECL_IMAXABS
_GL_WARN_ON_USE (imaxabs, "imaxabs is unportable - "
                 "use gnulib module imaxabs for portability");
# endif
#endif

#if @@GNULIB_IMAXDIV@@
# if !@@HAVE_DECL_IMAXDIV@@
#  if !GNULIB_defined_imaxdiv_t
typedef struct { intmax_t quot; intmax_t rem; } imaxdiv_t;
#   define GNULIB_defined_imaxdiv_t 1
#  endif
extern imaxdiv_t imaxdiv (intmax_t, intmax_t);
# endif
#elif defined GNULIB_POSIXCHECK
# undef imaxdiv
# if HAVE_RAW_DECL_IMAXDIV
_GL_WARN_ON_USE (imaxdiv, "imaxdiv is unportable - "
                 "use gnulib module imaxdiv for portability");
# endif
#endif

#if @@GNULIB_STRTOIMAX@@
# if @@REPLACE_STRTOIMAX@@
#  if !(defined __cplusplus && defined GNULIB_NAMESPACE)
#   undef strtoimax
#   define strtoimax rpl_strtoimax
#  endif
_GL_FUNCDECL_RPL (strtoimax, intmax_t,
                  (const char *, char **, int) _GL_ARG_NONNULL ((1)));
_GL_CXXALIAS_RPL (strtoimax, intmax_t, (const char *, char **, int));
# else
#  if !@@HAVE_DECL_STRTOIMAX@@
#   undef strtoimax
_GL_FUNCDECL_SYS (strtoimax, intmax_t,
                  (const char *, char **, int) _GL_ARG_NONNULL ((1)));
#  endif
_GL_CXXALIAS_SYS (strtoimax, intmax_t, (const char *, char **, int));
# endif
_GL_CXXALIASWARN (strtoimax);
#elif defined GNULIB_POSIXCHECK
# undef strtoimax
# if HAVE_RAW_DECL_STRTOIMAX
_GL_WARN_ON_USE (strtoimax, "strtoimax is unportable - "
                 "use gnulib module strtoimax for portability");
# endif
#endif

#if @@GNULIB_STRTOUMAX@@
# if !@@HAVE_DECL_STRTOUMAX@@
#  undef strtoumax
_GL_FUNCDECL_SYS (strtoumax, uintmax_t,
                  (const char *, char **, int) _GL_ARG_NONNULL ((1)));
# endif
_GL_CXXALIAS_SYS (strtoumax, uintmax_t, (const char *, char **, int));
_GL_CXXALIASWARN (strtoumax);
#elif defined GNULIB_POSIXCHECK
# undef strtoumax
# if HAVE_RAW_DECL_STRTOUMAX
_GL_WARN_ON_USE (strtoumax, "strtoumax is unportable - "
                 "use gnulib module strtoumax for portability");
# endif
#endif

/* Don't bother defining or declaring wcstoimax and wcstoumax, since
   wide-character functions like this are hardly ever useful.  */

#ifdef __cplusplus
}
#endif

#endif /* !defined INTTYPES_H && !defined _GL_JUST_INCLUDE_SYSTEM_INTTYPES_H */
@


1.2
log
@2012-04-18  Pedro Alves  <palves@@redhat.com>

	Update gnulib from latest git.
	(639ea5ae15e39fe48d43e04864b2997301e4b969)

	* gnulib/Makefile.am: Update.
	* gnulib/dummy.c: Update.
	* gnulib/extra/arg-nonnull.h: Update.
	* gnulib/extra/c++defs.h: Update.
	* gnulib/extra/update-copyright: Update.
	* gnulib/extra/warn-on-use.h: Update.
	* gnulib/inttypes.in.h: Update.
	* gnulib/m4/00gnulib.m4: Update.
	* gnulib/m4/extensions.m4: Update.
	* gnulib/m4/gnulib-cache.m4: Update.
	* gnulib/m4/gnulib-common.m4: Update.
	* gnulib/m4/gnulib-comp.m4: Update.
	* gnulib/m4/gnulib-tool.m4: Update.
	* gnulib/m4/include_next.m4: Update.
	* gnulib/m4/inttypes-pri.m4: Update.
	* gnulib/m4/inttypes.m4: Update.
	* gnulib/m4/longlong.m4: Update.
	* gnulib/m4/memchr.m4: Update.
	* gnulib/m4/memmem.m4: Update.
	* gnulib/m4/mmap-anon.m4: Update.
	* gnulib/m4/multiarch.m4: Update.
	* gnulib/m4/onceonly.m4: Update.
	* gnulib/m4/stddef_h.m4: Update.
	* gnulib/m4/stdint.m4: Update.
	* gnulib/m4/string_h.m4: Update.
	* gnulib/m4/warn-on-use.m4: Update.
	* gnulib/m4/wchar_h.m4: Update.
	* gnulib/m4/wchar_t.m4: Update.
	* gnulib/m4/wint_t.m4: Update.
	* gnulib/memchr.c: Update.
	* gnulib/memmem.c: Update.
	* gnulib/stddef.in.h: Update.
	* gnulib/stdint.in.h: Update.
	* gnulib/str-two-way.h: Update.
	* gnulib/string.in.h: Update.
	* gnulib/wchar.in.h: Update.

	* gnulib/extra/arg-nonnull.h: Delete.
	* gnulib/extra/c++defs.h: Delete.
	* gnulib/extra/warn-on-use.h: Delete.
	* gnulib/m4/wchar_h.m4: Delete.
	* gnulib/m4/wint_t.m4: Delete.
	* gnulib/wchar.in.h: Delete.

	* gnulib/extra/snippets/arg-nonnull.h: New.
	* gnulib/extra/snippets/c++defs.h: New.
	* gnulib/extra/snippets/warn-on-use.h: New.

	* aclocal.m4: Regenerate.
	* config.in: Regenerate.
	* configure: Regenerate.
	* gnulib/Makefile.in: Regenerate.

	* gdbserver/aclocal.m4: Regenerate.
	* gdbserver/config.in: Regenerate.
	* gdbserver/configure: Regenerate.
@
text
@@


1.1
log
@gdb/
	Import gnulib module inttypes from git
	(250b80067c1e1d8faa0c42fb572f721975b929c5)
	* Makefile.in (HFILES_NO_SRCDIR): Add gnulib/inttypes.in.h.
	(aclocal_m4_deps): Add gnulib/m4/inttypes.m4 and gnulib/m4/inttypes-pri.m4
	* aclocal.m4, config.in, configure: Regenerated.
	* gnulib/Makefile.am: Update.
	* gnulib/Makefile.in: Update.
	* gnulib/m4/gnulib-cache.m4: Update.
	* gnulib/m4/gnulib-comp.m4: Update.
	* gnulib/inttypes.in.h: New.
	* gnulib/m4/inttypes-pri.m4: New.
 	* gnulib/m4/inttypes.m4: New.

gdb/gdbserver/
	Import gnulib module inttypes.
	* aclocal.m4, config.in, configure: Regenerated.
@
text
@d1 1
a1 1
/* Copyright (C) 2006-2010 Free Software Foundation, Inc.
d26 1
d34 6
d59 2
d67 1
a67 3
#if ! defined __cplusplus || defined __STDC_FORMAT_MACROS

# if defined _TNS_R_TARGET
d70 4
a73 4
#  define _LONG_LONG_FORMAT_PREFIX "L"
# else
#  define _LONG_LONG_FORMAT_PREFIX "ll"
# endif
d75 4
a78 5
# if !defined PRId8 || @@PRI_MACROS_BROKEN@@
#  undef PRId8
#  ifdef INT8_MAX
#   define PRId8 "d"
#  endif
d80 5
a84 5
# if !defined PRIi8 || @@PRI_MACROS_BROKEN@@
#  undef PRIi8
#  ifdef INT8_MAX
#   define PRIi8 "i"
#  endif
d86 5
a90 5
# if !defined PRIo8 || @@PRI_MACROS_BROKEN@@
#  undef PRIo8
#  ifdef UINT8_MAX
#   define PRIo8 "o"
#  endif
d92 5
a96 5
# if !defined PRIu8 || @@PRI_MACROS_BROKEN@@
#  undef PRIu8
#  ifdef UINT8_MAX
#   define PRIu8 "u"
#  endif
d98 5
a102 5
# if !defined PRIx8 || @@PRI_MACROS_BROKEN@@
#  undef PRIx8
#  ifdef UINT8_MAX
#   define PRIx8 "x"
#  endif
d104 5
a108 5
# if !defined PRIX8 || @@PRI_MACROS_BROKEN@@
#  undef PRIX8
#  ifdef UINT8_MAX
#   define PRIX8 "X"
#  endif
d110 5
a114 5
# if !defined PRId16 || @@PRI_MACROS_BROKEN@@
#  undef PRId16
#  ifdef INT16_MAX
#   define PRId16 "d"
#  endif
d116 5
a120 5
# if !defined PRIi16 || @@PRI_MACROS_BROKEN@@
#  undef PRIi16
#  ifdef INT16_MAX
#   define PRIi16 "i"
#  endif
d122 5
a126 5
# if !defined PRIo16 || @@PRI_MACROS_BROKEN@@
#  undef PRIo16
#  ifdef UINT16_MAX
#   define PRIo16 "o"
#  endif
d128 5
a132 5
# if !defined PRIu16 || @@PRI_MACROS_BROKEN@@
#  undef PRIu16
#  ifdef UINT16_MAX
#   define PRIu16 "u"
#  endif
d134 5
a138 5
# if !defined PRIx16 || @@PRI_MACROS_BROKEN@@
#  undef PRIx16
#  ifdef UINT16_MAX
#   define PRIx16 "x"
#  endif
d140 5
a144 5
# if !defined PRIX16 || @@PRI_MACROS_BROKEN@@
#  undef PRIX16
#  ifdef UINT16_MAX
#   define PRIX16 "X"
#  endif
d146 5
a150 5
# if !defined PRId32 || @@PRI_MACROS_BROKEN@@
#  undef PRId32
#  ifdef INT32_MAX
#   define PRId32 "d"
#  endif
d152 5
a156 5
# if !defined PRIi32 || @@PRI_MACROS_BROKEN@@
#  undef PRIi32
#  ifdef INT32_MAX
#   define PRIi32 "i"
#  endif
d158 5
a162 5
# if !defined PRIo32 || @@PRI_MACROS_BROKEN@@
#  undef PRIo32
#  ifdef UINT32_MAX
#   define PRIo32 "o"
#  endif
d164 5
a168 5
# if !defined PRIu32 || @@PRI_MACROS_BROKEN@@
#  undef PRIu32
#  ifdef UINT32_MAX
#   define PRIu32 "u"
#  endif
d170 5
a174 5
# if !defined PRIx32 || @@PRI_MACROS_BROKEN@@
#  undef PRIx32
#  ifdef UINT32_MAX
#   define PRIx32 "x"
#  endif
d176 5
a180 5
# if !defined PRIX32 || @@PRI_MACROS_BROKEN@@
#  undef PRIX32
#  ifdef UINT32_MAX
#   define PRIX32 "X"
#  endif
d182 16
a197 16
# ifdef INT64_MAX
#  if (@@APPLE_UNIVERSAL_BUILD@@ ? defined _LP64 : @@INT64_MAX_EQ_LONG_MAX@@)
#   define _PRI64_PREFIX "l"
#  elif defined _MSC_VER || defined __MINGW32__
#   define _PRI64_PREFIX "I64"
#  elif @@HAVE_LONG_LONG_INT@@ && LONG_MAX >> 30 == 1
#   define _PRI64_PREFIX _LONG_LONG_FORMAT_PREFIX
#  endif
#  if !defined PRId64 || @@PRI_MACROS_BROKEN@@
#   undef PRId64
#   define PRId64 _PRI64_PREFIX "d"
#  endif
#  if !defined PRIi64 || @@PRI_MACROS_BROKEN@@
#   undef PRIi64
#   define PRIi64 _PRI64_PREFIX "i"
#  endif
d199 24
a222 24
# ifdef UINT64_MAX
#  if (@@APPLE_UNIVERSAL_BUILD@@ ? defined _LP64 : @@UINT64_MAX_EQ_ULONG_MAX@@)
#   define _PRIu64_PREFIX "l"
#  elif defined _MSC_VER || defined __MINGW32__
#   define _PRIu64_PREFIX "I64"
#  elif @@HAVE_UNSIGNED_LONG_LONG_INT@@ && ULONG_MAX >> 31 == 1
#   define _PRIu64_PREFIX _LONG_LONG_FORMAT_PREFIX
#  endif
#  if !defined PRIo64 || @@PRI_MACROS_BROKEN@@
#   undef PRIo64
#   define PRIo64 _PRIu64_PREFIX "o"
#  endif
#  if !defined PRIu64 || @@PRI_MACROS_BROKEN@@
#   undef PRIu64
#   define PRIu64 _PRIu64_PREFIX "u"
#  endif
#  if !defined PRIx64 || @@PRI_MACROS_BROKEN@@
#   undef PRIx64
#   define PRIx64 _PRIu64_PREFIX "x"
#  endif
#  if !defined PRIX64 || @@PRI_MACROS_BROKEN@@
#   undef PRIX64
#   define PRIX64 _PRIu64_PREFIX "X"
#  endif
d224 1
d226 80
a305 81
# if !defined PRIdLEAST8 || @@PRI_MACROS_BROKEN@@
#  undef PRIdLEAST8
#  define PRIdLEAST8 "d"
# endif
# if !defined PRIiLEAST8 || @@PRI_MACROS_BROKEN@@
#  undef PRIiLEAST8
#  define PRIiLEAST8 "i"
# endif
# if !defined PRIoLEAST8 || @@PRI_MACROS_BROKEN@@
#  undef PRIoLEAST8
#  define PRIoLEAST8 "o"
# endif
# if !defined PRIuLEAST8 || @@PRI_MACROS_BROKEN@@
#  undef PRIuLEAST8
#  define PRIuLEAST8 "u"
# endif
# if !defined PRIxLEAST8 || @@PRI_MACROS_BROKEN@@
#  undef PRIxLEAST8
#  define PRIxLEAST8 "x"
# endif
# if !defined PRIXLEAST8 || @@PRI_MACROS_BROKEN@@
#  undef PRIXLEAST8
#  define PRIXLEAST8 "X"
# endif
# if !defined PRIdLEAST16 || @@PRI_MACROS_BROKEN@@
#  undef PRIdLEAST16
#  define PRIdLEAST16 "d"
# endif
# if !defined PRIiLEAST16 || @@PRI_MACROS_BROKEN@@
#  undef PRIiLEAST16
#  define PRIiLEAST16 "i"
# endif
# if !defined PRIoLEAST16 || @@PRI_MACROS_BROKEN@@
#  undef PRIoLEAST16
#  define PRIoLEAST16 "o"
# endif
# if !defined PRIuLEAST16 || @@PRI_MACROS_BROKEN@@
#  undef PRIuLEAST16
#  define PRIuLEAST16 "u"
# endif
# if !defined PRIxLEAST16 || @@PRI_MACROS_BROKEN@@
#  undef PRIxLEAST16
#  define PRIxLEAST16 "x"
# endif
# if !defined PRIXLEAST16 || @@PRI_MACROS_BROKEN@@
#  undef PRIXLEAST16
#  define PRIXLEAST16 "X"
# endif
# if !defined PRIdLEAST32 || @@PRI_MACROS_BROKEN@@
#  undef PRIdLEAST32
#  define PRIdLEAST32 "d"
# endif
# if !defined PRIiLEAST32 || @@PRI_MACROS_BROKEN@@
#  undef PRIiLEAST32
#  define PRIiLEAST32 "i"
# endif
# if !defined PRIoLEAST32 || @@PRI_MACROS_BROKEN@@
#  undef PRIoLEAST32
#  define PRIoLEAST32 "o"
# endif
# if !defined PRIuLEAST32 || @@PRI_MACROS_BROKEN@@
#  undef PRIuLEAST32
#  define PRIuLEAST32 "u"
# endif
# if !defined PRIxLEAST32 || @@PRI_MACROS_BROKEN@@
#  undef PRIxLEAST32
#  define PRIxLEAST32 "x"
# endif
# if !defined PRIXLEAST32 || @@PRI_MACROS_BROKEN@@
#  undef PRIXLEAST32
#  define PRIXLEAST32 "X"
# endif
# ifdef INT64_MAX
#  if !defined PRIdLEAST64 || @@PRI_MACROS_BROKEN@@
#   undef PRIdLEAST64
#   define PRIdLEAST64 PRId64
#  endif
#  if !defined PRIiLEAST64 || @@PRI_MACROS_BROKEN@@
#   undef PRIiLEAST64
#   define PRIiLEAST64 PRIi64
#  endif
d307 17
a323 17
# ifdef UINT64_MAX
#  if !defined PRIoLEAST64 || @@PRI_MACROS_BROKEN@@
#   undef PRIoLEAST64
#   define PRIoLEAST64 PRIo64
#  endif
#  if !defined PRIuLEAST64 || @@PRI_MACROS_BROKEN@@
#   undef PRIuLEAST64
#   define PRIuLEAST64 PRIu64
#  endif
#  if !defined PRIxLEAST64 || @@PRI_MACROS_BROKEN@@
#   undef PRIxLEAST64
#   define PRIxLEAST64 PRIx64
#  endif
#  if !defined PRIXLEAST64 || @@PRI_MACROS_BROKEN@@
#   undef PRIXLEAST64
#   define PRIXLEAST64 PRIX64
#  endif
d325 1
d327 6
a332 7
# if !defined PRIdFAST8 || @@PRI_MACROS_BROKEN@@
#  undef PRIdFAST8
#  if INT_FAST8_MAX > INT32_MAX
#   define PRIdFAST8 PRId64
#  else
#   define PRIdFAST8 "d"
#  endif
d334 7
a340 7
# if !defined PRIiFAST8 || @@PRI_MACROS_BROKEN@@
#  undef PRIiFAST8
#  if INT_FAST8_MAX > INT32_MAX
#   define PRIiFAST8 PRIi64
#  else
#   define PRIiFAST8 "i"
#  endif
d342 7
a348 7
# if !defined PRIoFAST8 || @@PRI_MACROS_BROKEN@@
#  undef PRIoFAST8
#  if UINT_FAST8_MAX > UINT32_MAX
#   define PRIoFAST8 PRIo64
#  else
#   define PRIoFAST8 "o"
#  endif
d350 7
a356 7
# if !defined PRIuFAST8 || @@PRI_MACROS_BROKEN@@
#  undef PRIuFAST8
#  if UINT_FAST8_MAX > UINT32_MAX
#   define PRIuFAST8 PRIu64
#  else
#   define PRIuFAST8 "u"
#  endif
d358 7
a364 7
# if !defined PRIxFAST8 || @@PRI_MACROS_BROKEN@@
#  undef PRIxFAST8
#  if UINT_FAST8_MAX > UINT32_MAX
#   define PRIxFAST8 PRIx64
#  else
#   define PRIxFAST8 "x"
#  endif
d366 7
a372 7
# if !defined PRIXFAST8 || @@PRI_MACROS_BROKEN@@
#  undef PRIXFAST8
#  if UINT_FAST8_MAX > UINT32_MAX
#   define PRIXFAST8 PRIX64
#  else
#   define PRIXFAST8 "X"
#  endif
d374 7
a380 7
# if !defined PRIdFAST16 || @@PRI_MACROS_BROKEN@@
#  undef PRIdFAST16
#  if INT_FAST16_MAX > INT32_MAX
#   define PRIdFAST16 PRId64
#  else
#   define PRIdFAST16 "d"
#  endif
d382 7
a388 7
# if !defined PRIiFAST16 || @@PRI_MACROS_BROKEN@@
#  undef PRIiFAST16
#  if INT_FAST16_MAX > INT32_MAX
#   define PRIiFAST16 PRIi64
#  else
#   define PRIiFAST16 "i"
#  endif
d390 7
a396 7
# if !defined PRIoFAST16 || @@PRI_MACROS_BROKEN@@
#  undef PRIoFAST16
#  if UINT_FAST16_MAX > UINT32_MAX
#   define PRIoFAST16 PRIo64
#  else
#   define PRIoFAST16 "o"
#  endif
d398 7
a404 7
# if !defined PRIuFAST16 || @@PRI_MACROS_BROKEN@@
#  undef PRIuFAST16
#  if UINT_FAST16_MAX > UINT32_MAX
#   define PRIuFAST16 PRIu64
#  else
#   define PRIuFAST16 "u"
#  endif
d406 7
a412 7
# if !defined PRIxFAST16 || @@PRI_MACROS_BROKEN@@
#  undef PRIxFAST16
#  if UINT_FAST16_MAX > UINT32_MAX
#   define PRIxFAST16 PRIx64
#  else
#   define PRIxFAST16 "x"
#  endif
d414 7
a420 7
# if !defined PRIXFAST16 || @@PRI_MACROS_BROKEN@@
#  undef PRIXFAST16
#  if UINT_FAST16_MAX > UINT32_MAX
#   define PRIXFAST16 PRIX64
#  else
#   define PRIXFAST16 "X"
#  endif
d422 7
a428 7
# if !defined PRIdFAST32 || @@PRI_MACROS_BROKEN@@
#  undef PRIdFAST32
#  if INT_FAST32_MAX > INT32_MAX
#   define PRIdFAST32 PRId64
#  else
#   define PRIdFAST32 "d"
#  endif
d430 7
a436 7
# if !defined PRIiFAST32 || @@PRI_MACROS_BROKEN@@
#  undef PRIiFAST32
#  if INT_FAST32_MAX > INT32_MAX
#   define PRIiFAST32 PRIi64
#  else
#   define PRIiFAST32 "i"
#  endif
d438 7
a444 7
# if !defined PRIoFAST32 || @@PRI_MACROS_BROKEN@@
#  undef PRIoFAST32
#  if UINT_FAST32_MAX > UINT32_MAX
#   define PRIoFAST32 PRIo64
#  else
#   define PRIoFAST32 "o"
#  endif
d446 7
a452 7
# if !defined PRIuFAST32 || @@PRI_MACROS_BROKEN@@
#  undef PRIuFAST32
#  if UINT_FAST32_MAX > UINT32_MAX
#   define PRIuFAST32 PRIu64
#  else
#   define PRIuFAST32 "u"
#  endif
d454 7
a460 7
# if !defined PRIxFAST32 || @@PRI_MACROS_BROKEN@@
#  undef PRIxFAST32
#  if UINT_FAST32_MAX > UINT32_MAX
#   define PRIxFAST32 PRIx64
#  else
#   define PRIxFAST32 "x"
#  endif
d462 7
a468 7
# if !defined PRIXFAST32 || @@PRI_MACROS_BROKEN@@
#  undef PRIXFAST32
#  if UINT_FAST32_MAX > UINT32_MAX
#   define PRIXFAST32 PRIX64
#  else
#   define PRIXFAST32 "X"
#  endif
d470 9
a478 9
# ifdef INT64_MAX
#  if !defined PRIdFAST64 || @@PRI_MACROS_BROKEN@@
#   undef PRIdFAST64
#   define PRIdFAST64 PRId64
#  endif
#  if !defined PRIiFAST64 || @@PRI_MACROS_BROKEN@@
#   undef PRIiFAST64
#   define PRIiFAST64 PRIi64
#  endif
d480 17
a496 17
# ifdef UINT64_MAX
#  if !defined PRIoFAST64 || @@PRI_MACROS_BROKEN@@
#   undef PRIoFAST64
#   define PRIoFAST64 PRIo64
#  endif
#  if !defined PRIuFAST64 || @@PRI_MACROS_BROKEN@@
#   undef PRIuFAST64
#   define PRIuFAST64 PRIu64
#  endif
#  if !defined PRIxFAST64 || @@PRI_MACROS_BROKEN@@
#   undef PRIxFAST64
#   define PRIxFAST64 PRIx64
#  endif
#  if !defined PRIXFAST64 || @@PRI_MACROS_BROKEN@@
#   undef PRIXFAST64
#   define PRIXFAST64 PRIX64
#  endif
d498 1
d500 6
a505 7
# if !defined PRIdMAX || @@PRI_MACROS_BROKEN@@
#  undef PRIdMAX
#  if @@INT32_MAX_LT_INTMAX_MAX@@
#   define PRIdMAX PRId64
#  else
#   define PRIdMAX "ld"
#  endif
d507 7
a513 7
# if !defined PRIiMAX || @@PRI_MACROS_BROKEN@@
#  undef PRIiMAX
#  if @@INT32_MAX_LT_INTMAX_MAX@@
#   define PRIiMAX PRIi64
#  else
#   define PRIiMAX "li"
#  endif
d515 7
a521 7
# if !defined PRIoMAX || @@PRI_MACROS_BROKEN@@
#  undef PRIoMAX
#  if @@UINT32_MAX_LT_UINTMAX_MAX@@
#   define PRIoMAX PRIo64
#  else
#   define PRIoMAX "lo"
#  endif
d523 7
a529 7
# if !defined PRIuMAX || @@PRI_MACROS_BROKEN@@
#  undef PRIuMAX
#  if @@UINT32_MAX_LT_UINTMAX_MAX@@
#   define PRIuMAX PRIu64
#  else
#   define PRIuMAX "lu"
#  endif
d531 7
a537 7
# if !defined PRIxMAX || @@PRI_MACROS_BROKEN@@
#  undef PRIxMAX
#  if @@UINT32_MAX_LT_UINTMAX_MAX@@
#   define PRIxMAX PRIx64
#  else
#   define PRIxMAX "lx"
#  endif
d539 7
a545 7
# if !defined PRIXMAX || @@PRI_MACROS_BROKEN@@
#  undef PRIXMAX
#  if @@UINT32_MAX_LT_UINTMAX_MAX@@
#   define PRIXMAX PRIX64
#  else
#   define PRIXMAX "lX"
#  endif
d547 1
d549 4
a552 5
# if !defined PRIdPTR || @@PRI_MACROS_BROKEN@@
#  undef PRIdPTR
#  ifdef INTPTR_MAX
#   define PRIdPTR @@PRIPTR_PREFIX@@ "d"
#  endif
d554 5
a558 5
# if !defined PRIiPTR || @@PRI_MACROS_BROKEN@@
#  undef PRIiPTR
#  ifdef INTPTR_MAX
#   define PRIiPTR @@PRIPTR_PREFIX@@ "i"
#  endif
d560 5
a564 5
# if !defined PRIoPTR || @@PRI_MACROS_BROKEN@@
#  undef PRIoPTR
#  ifdef UINTPTR_MAX
#   define PRIoPTR @@PRIPTR_PREFIX@@ "o"
#  endif
d566 5
a570 5
# if !defined PRIuPTR || @@PRI_MACROS_BROKEN@@
#  undef PRIuPTR
#  ifdef UINTPTR_MAX
#   define PRIuPTR @@PRIPTR_PREFIX@@ "u"
#  endif
d572 5
a576 5
# if !defined PRIxPTR || @@PRI_MACROS_BROKEN@@
#  undef PRIxPTR
#  ifdef UINTPTR_MAX
#   define PRIxPTR @@PRIPTR_PREFIX@@ "x"
#  endif
d578 5
a582 5
# if !defined PRIXPTR || @@PRI_MACROS_BROKEN@@
#  undef PRIXPTR
#  ifdef UINTPTR_MAX
#   define PRIXPTR @@PRIPTR_PREFIX@@ "X"
#  endif
d584 1
d586 4
a589 5
# if !defined SCNd8 || @@PRI_MACROS_BROKEN@@
#  undef SCNd8
#  ifdef INT8_MAX
#   define SCNd8 "hhd"
#  endif
d591 5
a595 5
# if !defined SCNi8 || @@PRI_MACROS_BROKEN@@
#  undef SCNi8
#  ifdef INT8_MAX
#   define SCNi8 "hhi"
#  endif
d597 5
a601 5
# if !defined SCNo8 || @@PRI_MACROS_BROKEN@@
#  undef SCNo8
#  ifdef UINT8_MAX
#   define SCNo8 "hho"
#  endif
d603 5
a607 5
# if !defined SCNu8 || @@PRI_MACROS_BROKEN@@
#  undef SCNu8
#  ifdef UINT8_MAX
#   define SCNu8 "hhu"
#  endif
d609 5
a613 5
# if !defined SCNx8 || @@PRI_MACROS_BROKEN@@
#  undef SCNx8
#  ifdef UINT8_MAX
#   define SCNx8 "hhx"
#  endif
d615 5
a619 5
# if !defined SCNd16 || @@PRI_MACROS_BROKEN@@
#  undef SCNd16
#  ifdef INT16_MAX
#   define SCNd16 "hd"
#  endif
d621 5
a625 5
# if !defined SCNi16 || @@PRI_MACROS_BROKEN@@
#  undef SCNi16
#  ifdef INT16_MAX
#   define SCNi16 "hi"
#  endif
d627 5
a631 5
# if !defined SCNo16 || @@PRI_MACROS_BROKEN@@
#  undef SCNo16
#  ifdef UINT16_MAX
#   define SCNo16 "ho"
#  endif
d633 5
a637 5
# if !defined SCNu16 || @@PRI_MACROS_BROKEN@@
#  undef SCNu16
#  ifdef UINT16_MAX
#   define SCNu16 "hu"
#  endif
d639 5
a643 5
# if !defined SCNx16 || @@PRI_MACROS_BROKEN@@
#  undef SCNx16
#  ifdef UINT16_MAX
#   define SCNx16 "hx"
#  endif
d645 5
a649 5
# if !defined SCNd32 || @@PRI_MACROS_BROKEN@@
#  undef SCNd32
#  ifdef INT32_MAX
#   define SCNd32 "d"
#  endif
d651 5
a655 5
# if !defined SCNi32 || @@PRI_MACROS_BROKEN@@
#  undef SCNi32
#  ifdef INT32_MAX
#   define SCNi32 "i"
#  endif
d657 5
a661 5
# if !defined SCNo32 || @@PRI_MACROS_BROKEN@@
#  undef SCNo32
#  ifdef UINT32_MAX
#   define SCNo32 "o"
#  endif
d663 5
a667 5
# if !defined SCNu32 || @@PRI_MACROS_BROKEN@@
#  undef SCNu32
#  ifdef UINT32_MAX
#   define SCNu32 "u"
#  endif
d669 5
a673 5
# if !defined SCNx32 || @@PRI_MACROS_BROKEN@@
#  undef SCNx32
#  ifdef UINT32_MAX
#   define SCNx32 "x"
#  endif
d675 16
a690 16
# ifdef INT64_MAX
#  if (@@APPLE_UNIVERSAL_BUILD@@ ? defined _LP64 : @@INT64_MAX_EQ_LONG_MAX@@)
#   define _SCN64_PREFIX "l"
#  elif defined _MSC_VER || defined __MINGW32__
#   define _SCN64_PREFIX "I64"
#  elif @@HAVE_LONG_LONG_INT@@ && LONG_MAX >> 30 == 1
#   define _SCN64_PREFIX _LONG_LONG_FORMAT_PREFIX
#  endif
#  if !defined SCNd64 || @@PRI_MACROS_BROKEN@@
#   undef SCNd64
#   define SCNd64 _SCN64_PREFIX "d"
#  endif
#  if !defined SCNi64 || @@PRI_MACROS_BROKEN@@
#   undef SCNi64
#   define SCNi64 _SCN64_PREFIX "i"
#  endif
d692 20
a711 20
# ifdef UINT64_MAX
#  if (@@APPLE_UNIVERSAL_BUILD@@ ? defined _LP64 : @@UINT64_MAX_EQ_ULONG_MAX@@)
#   define _SCNu64_PREFIX "l"
#  elif defined _MSC_VER || defined __MINGW32__
#   define _SCNu64_PREFIX "I64"
#  elif @@HAVE_UNSIGNED_LONG_LONG_INT@@ && ULONG_MAX >> 31 == 1
#   define _SCNu64_PREFIX _LONG_LONG_FORMAT_PREFIX
#  endif
#  if !defined SCNo64 || @@PRI_MACROS_BROKEN@@
#   undef SCNo64
#   define SCNo64 _SCNu64_PREFIX "o"
#  endif
#  if !defined SCNu64 || @@PRI_MACROS_BROKEN@@
#   undef SCNu64
#   define SCNu64 _SCNu64_PREFIX "u"
#  endif
#  if !defined SCNx64 || @@PRI_MACROS_BROKEN@@
#   undef SCNx64
#   define SCNx64 _SCNu64_PREFIX "x"
#  endif
d713 1
d715 68
a782 69
# if !defined SCNdLEAST8 || @@PRI_MACROS_BROKEN@@
#  undef SCNdLEAST8
#  define SCNdLEAST8 "hhd"
# endif
# if !defined SCNiLEAST8 || @@PRI_MACROS_BROKEN@@
#  undef SCNiLEAST8
#  define SCNiLEAST8 "hhi"
# endif
# if !defined SCNoLEAST8 || @@PRI_MACROS_BROKEN@@
#  undef SCNoLEAST8
#  define SCNoLEAST8 "hho"
# endif
# if !defined SCNuLEAST8 || @@PRI_MACROS_BROKEN@@
#  undef SCNuLEAST8
#  define SCNuLEAST8 "hhu"
# endif
# if !defined SCNxLEAST8 || @@PRI_MACROS_BROKEN@@
#  undef SCNxLEAST8
#  define SCNxLEAST8 "hhx"
# endif
# if !defined SCNdLEAST16 || @@PRI_MACROS_BROKEN@@
#  undef SCNdLEAST16
#  define SCNdLEAST16 "hd"
# endif
# if !defined SCNiLEAST16 || @@PRI_MACROS_BROKEN@@
#  undef SCNiLEAST16
#  define SCNiLEAST16 "hi"
# endif
# if !defined SCNoLEAST16 || @@PRI_MACROS_BROKEN@@
#  undef SCNoLEAST16
#  define SCNoLEAST16 "ho"
# endif
# if !defined SCNuLEAST16 || @@PRI_MACROS_BROKEN@@
#  undef SCNuLEAST16
#  define SCNuLEAST16 "hu"
# endif
# if !defined SCNxLEAST16 || @@PRI_MACROS_BROKEN@@
#  undef SCNxLEAST16
#  define SCNxLEAST16 "hx"
# endif
# if !defined SCNdLEAST32 || @@PRI_MACROS_BROKEN@@
#  undef SCNdLEAST32
#  define SCNdLEAST32 "d"
# endif
# if !defined SCNiLEAST32 || @@PRI_MACROS_BROKEN@@
#  undef SCNiLEAST32
#  define SCNiLEAST32 "i"
# endif
# if !defined SCNoLEAST32 || @@PRI_MACROS_BROKEN@@
#  undef SCNoLEAST32
#  define SCNoLEAST32 "o"
# endif
# if !defined SCNuLEAST32 || @@PRI_MACROS_BROKEN@@
#  undef SCNuLEAST32
#  define SCNuLEAST32 "u"
# endif
# if !defined SCNxLEAST32 || @@PRI_MACROS_BROKEN@@
#  undef SCNxLEAST32
#  define SCNxLEAST32 "x"
# endif
# ifdef INT64_MAX
#  if !defined SCNdLEAST64 || @@PRI_MACROS_BROKEN@@
#   undef SCNdLEAST64
#   define SCNdLEAST64 SCNd64
#  endif
#  if !defined SCNiLEAST64 || @@PRI_MACROS_BROKEN@@
#   undef SCNiLEAST64
#   define SCNiLEAST64 SCNi64
#  endif
d784 13
a796 13
# ifdef UINT64_MAX
#  if !defined SCNoLEAST64 || @@PRI_MACROS_BROKEN@@
#   undef SCNoLEAST64
#   define SCNoLEAST64 SCNo64
#  endif
#  if !defined SCNuLEAST64 || @@PRI_MACROS_BROKEN@@
#   undef SCNuLEAST64
#   define SCNuLEAST64 SCNu64
#  endif
#  if !defined SCNxLEAST64 || @@PRI_MACROS_BROKEN@@
#   undef SCNxLEAST64
#   define SCNxLEAST64 SCNx64
#  endif
d798 1
d800 10
a809 11
# if !defined SCNdFAST8 || @@PRI_MACROS_BROKEN@@
#  undef SCNdFAST8
#  if INT_FAST8_MAX > INT32_MAX
#   define SCNdFAST8 SCNd64
#  elif INT_FAST8_MAX == 0x7fff
#   define SCNdFAST8 "hd"
#  elif INT_FAST8_MAX == 0x7f
#   define SCNdFAST8 "hhd"
#  else
#   define SCNdFAST8 "d"
#  endif
d811 11
a821 11
# if !defined SCNiFAST8 || @@PRI_MACROS_BROKEN@@
#  undef SCNiFAST8
#  if INT_FAST8_MAX > INT32_MAX
#   define SCNiFAST8 SCNi64
#  elif INT_FAST8_MAX == 0x7fff
#   define SCNiFAST8 "hi"
#  elif INT_FAST8_MAX == 0x7f
#   define SCNiFAST8 "hhi"
#  else
#   define SCNiFAST8 "i"
#  endif
d823 11
a833 11
# if !defined SCNoFAST8 || @@PRI_MACROS_BROKEN@@
#  undef SCNoFAST8
#  if UINT_FAST8_MAX > UINT32_MAX
#   define SCNoFAST8 SCNo64
#  elif UINT_FAST8_MAX == 0xffff
#   define SCNoFAST8 "ho"
#  elif UINT_FAST8_MAX == 0xff
#   define SCNoFAST8 "hho"
#  else
#   define SCNoFAST8 "o"
#  endif
d835 11
a845 11
# if !defined SCNuFAST8 || @@PRI_MACROS_BROKEN@@
#  undef SCNuFAST8
#  if UINT_FAST8_MAX > UINT32_MAX
#   define SCNuFAST8 SCNu64
#  elif UINT_FAST8_MAX == 0xffff
#   define SCNuFAST8 "hu"
#  elif UINT_FAST8_MAX == 0xff
#   define SCNuFAST8 "hhu"
#  else
#   define SCNuFAST8 "u"
#  endif
d847 11
a857 11
# if !defined SCNxFAST8 || @@PRI_MACROS_BROKEN@@
#  undef SCNxFAST8
#  if UINT_FAST8_MAX > UINT32_MAX
#   define SCNxFAST8 SCNx64
#  elif UINT_FAST8_MAX == 0xffff
#   define SCNxFAST8 "hx"
#  elif UINT_FAST8_MAX == 0xff
#   define SCNxFAST8 "hhx"
#  else
#   define SCNxFAST8 "x"
#  endif
d859 9
a867 9
# if !defined SCNdFAST16 || @@PRI_MACROS_BROKEN@@
#  undef SCNdFAST16
#  if INT_FAST16_MAX > INT32_MAX
#   define SCNdFAST16 SCNd64
#  elif INT_FAST16_MAX == 0x7fff
#   define SCNdFAST16 "hd"
#  else
#   define SCNdFAST16 "d"
#  endif
d869 9
a877 9
# if !defined SCNiFAST16 || @@PRI_MACROS_BROKEN@@
#  undef SCNiFAST16
#  if INT_FAST16_MAX > INT32_MAX
#   define SCNiFAST16 SCNi64
#  elif INT_FAST16_MAX == 0x7fff
#   define SCNiFAST16 "hi"
#  else
#   define SCNiFAST16 "i"
#  endif
d879 9
a887 9
# if !defined SCNoFAST16 || @@PRI_MACROS_BROKEN@@
#  undef SCNoFAST16
#  if UINT_FAST16_MAX > UINT32_MAX
#   define SCNoFAST16 SCNo64
#  elif UINT_FAST16_MAX == 0xffff
#   define SCNoFAST16 "ho"
#  else
#   define SCNoFAST16 "o"
#  endif
d889 9
a897 9
# if !defined SCNuFAST16 || @@PRI_MACROS_BROKEN@@
#  undef SCNuFAST16
#  if UINT_FAST16_MAX > UINT32_MAX
#   define SCNuFAST16 SCNu64
#  elif UINT_FAST16_MAX == 0xffff
#   define SCNuFAST16 "hu"
#  else
#   define SCNuFAST16 "u"
#  endif
d899 9
a907 9
# if !defined SCNxFAST16 || @@PRI_MACROS_BROKEN@@
#  undef SCNxFAST16
#  if UINT_FAST16_MAX > UINT32_MAX
#   define SCNxFAST16 SCNx64
#  elif UINT_FAST16_MAX == 0xffff
#   define SCNxFAST16 "hx"
#  else
#   define SCNxFAST16 "x"
#  endif
d909 7
a915 7
# if !defined SCNdFAST32 || @@PRI_MACROS_BROKEN@@
#  undef SCNdFAST32
#  if INT_FAST32_MAX > INT32_MAX
#   define SCNdFAST32 SCNd64
#  else
#   define SCNdFAST32 "d"
#  endif
d917 7
a923 7
# if !defined SCNiFAST32 || @@PRI_MACROS_BROKEN@@
#  undef SCNiFAST32
#  if INT_FAST32_MAX > INT32_MAX
#   define SCNiFAST32 SCNi64
#  else
#   define SCNiFAST32 "i"
#  endif
d925 7
a931 7
# if !defined SCNoFAST32 || @@PRI_MACROS_BROKEN@@
#  undef SCNoFAST32
#  if UINT_FAST32_MAX > UINT32_MAX
#   define SCNoFAST32 SCNo64
#  else
#   define SCNoFAST32 "o"
#  endif
d933 7
a939 7
# if !defined SCNuFAST32 || @@PRI_MACROS_BROKEN@@
#  undef SCNuFAST32
#  if UINT_FAST32_MAX > UINT32_MAX
#   define SCNuFAST32 SCNu64
#  else
#   define SCNuFAST32 "u"
#  endif
d941 7
a947 7
# if !defined SCNxFAST32 || @@PRI_MACROS_BROKEN@@
#  undef SCNxFAST32
#  if UINT_FAST32_MAX > UINT32_MAX
#   define SCNxFAST32 SCNx64
#  else
#   define SCNxFAST32 "x"
#  endif
d949 9
a957 9
# ifdef INT64_MAX
#  if !defined SCNdFAST64 || @@PRI_MACROS_BROKEN@@
#   undef SCNdFAST64
#   define SCNdFAST64 SCNd64
#  endif
#  if !defined SCNiFAST64 || @@PRI_MACROS_BROKEN@@
#   undef SCNiFAST64
#   define SCNiFAST64 SCNi64
#  endif
d959 13
a971 13
# ifdef UINT64_MAX
#  if !defined SCNoFAST64 || @@PRI_MACROS_BROKEN@@
#   undef SCNoFAST64
#   define SCNoFAST64 SCNo64
#  endif
#  if !defined SCNuFAST64 || @@PRI_MACROS_BROKEN@@
#   undef SCNuFAST64
#   define SCNuFAST64 SCNu64
#  endif
#  if !defined SCNxFAST64 || @@PRI_MACROS_BROKEN@@
#   undef SCNxFAST64
#   define SCNxFAST64 SCNx64
#  endif
d973 1
d975 6
a980 7
# if !defined SCNdMAX || @@PRI_MACROS_BROKEN@@
#  undef SCNdMAX
#  if @@INT32_MAX_LT_INTMAX_MAX@@
#   define SCNdMAX SCNd64
#  else
#   define SCNdMAX "ld"
#  endif
d982 7
a988 7
# if !defined SCNiMAX || @@PRI_MACROS_BROKEN@@
#  undef SCNiMAX
#  if @@INT32_MAX_LT_INTMAX_MAX@@
#   define SCNiMAX SCNi64
#  else
#   define SCNiMAX "li"
#  endif
d990 7
a996 7
# if !defined SCNoMAX || @@PRI_MACROS_BROKEN@@
#  undef SCNoMAX
#  if @@UINT32_MAX_LT_UINTMAX_MAX@@
#   define SCNoMAX SCNo64
#  else
#   define SCNoMAX "lo"
#  endif
d998 7
a1004 7
# if !defined SCNuMAX || @@PRI_MACROS_BROKEN@@
#  undef SCNuMAX
#  if @@UINT32_MAX_LT_UINTMAX_MAX@@
#   define SCNuMAX SCNu64
#  else
#   define SCNuMAX "lu"
#  endif
d1006 7
a1012 7
# if !defined SCNxMAX || @@PRI_MACROS_BROKEN@@
#  undef SCNxMAX
#  if @@UINT32_MAX_LT_UINTMAX_MAX@@
#   define SCNxMAX SCNx64
#  else
#   define SCNxMAX "lx"
#  endif
d1014 1
d1016 4
a1019 5
# if !defined SCNdPTR || @@PRI_MACROS_BROKEN@@
#  undef SCNdPTR
#  ifdef INTPTR_MAX
#   define SCNdPTR @@PRIPTR_PREFIX@@ "d"
#  endif
d1021 5
a1025 5
# if !defined SCNiPTR || @@PRI_MACROS_BROKEN@@
#  undef SCNiPTR
#  ifdef INTPTR_MAX
#   define SCNiPTR @@PRIPTR_PREFIX@@ "i"
#  endif
d1027 5
a1031 5
# if !defined SCNoPTR || @@PRI_MACROS_BROKEN@@
#  undef SCNoPTR
#  ifdef UINTPTR_MAX
#   define SCNoPTR @@PRIPTR_PREFIX@@ "o"
#  endif
d1033 5
a1037 5
# if !defined SCNuPTR || @@PRI_MACROS_BROKEN@@
#  undef SCNuPTR
#  ifdef UINTPTR_MAX
#   define SCNuPTR @@PRIPTR_PREFIX@@ "u"
#  endif
d1039 5
a1043 5
# if !defined SCNxPTR || @@PRI_MACROS_BROKEN@@
#  undef SCNxPTR
#  ifdef UINTPTR_MAX
#   define SCNxPTR @@PRIPTR_PREFIX@@ "x"
#  endif
a1044 1

d1067 1
d1069 2
d1082 15
a1096 2
# if !@@HAVE_DECL_STRTOIMAX@@
extern intmax_t strtoimax (const char *, char **, int) _GL_ARG_NONNULL ((1));
d1098 1
d1109 3
a1111 1
extern uintmax_t strtoumax (const char *, char **, int) _GL_ARG_NONNULL ((1));
d1113 2
@

