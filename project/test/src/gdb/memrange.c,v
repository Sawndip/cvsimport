head	1.4;
access;
symbols
	gdb_7_6_1-2013-08-30-release:1.4
	gdb_7_6-2013-04-26-release:1.4
	gdb_7_6-branch:1.4.0.2
	gdb_7_6-2013-03-12-branchpoint:1.4
	gdb_7_5_1-2012-11-29-release:1.3
	gdb_7_5-2012-08-17-release:1.3
	gdb_7_5-branch:1.3.0.2
	gdb_7_5-2012-07-18-branchpoint:1.3
	gdb_7_4_1-2012-04-26-release:1.2.4.1
	gdb_7_4-2012-01-24-release:1.2.4.1
	gdb_7_4-branch:1.2.0.4
	gdb_7_4-2011-12-13-branchpoint:1.2
	gdb_7_3_1-2011-09-04-release:1.2
	gdb_7_3-2011-07-26-release:1.2
	gdb_7_3-branch:1.2.0.2
	gdb_7_3-2011-04-01-branchpoint:1.2;
locks; strict;
comment	@ * @;


1.4
date	2013.01.01.06.32.47;	author brobecke;	state Exp;
branches;
next	1.3;

1.3
date	2012.01.04.08.17.06;	author brobecke;	state Exp;
branches;
next	1.2;

1.2
date	2011.02.14.19.19.18;	author palves;	state Exp;
branches
	1.2.4.1;
next	1.1;

1.1
date	2011.02.14.11.20.27;	author palves;	state Exp;
branches;
next	;

1.2.4.1
date	2012.01.06.04.43.20;	author brobecke;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Update years in copyright notice for the GDB files.

Two modifications:
  1. The addition of 2013 to the copyright year range for every file;
  2. The use of a single year range, instead of potentially multiple
     year ranges, as approved by the FSF.
@
text
@/* Memory ranges

   Copyright (C) 2010-2013 Free Software Foundation, Inc.

   This file is part of GDB.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */

#include "defs.h"
#include "memrange.h"

int
mem_ranges_overlap (CORE_ADDR start1, int len1,
		    CORE_ADDR start2, int len2)
{
  ULONGEST h, l;

  l = max (start1, start2);
  h = min (start1 + len1, start2 + len2);
  return (l < h);
}

/* qsort comparison function, that compares mem_ranges.  Ranges are
   sorted in ascending START order.  */

static int
compare_mem_ranges (const void *ap, const void *bp)
{
  const struct mem_range *r1 = ap;
  const struct mem_range *r2 = bp;

  if (r1->start > r2->start)
    return 1;
  else if (r1->start < r2->start)
    return -1;
  else
    return 0;
}

void
normalize_mem_ranges (VEC(mem_range_s) *ranges)
{
  /* This function must not use any VEC operation on RANGES that
     reallocates the memory block as that invalidates the RANGES
     pointer, which callers expect to remain valid.  */

  if (!VEC_empty (mem_range_s, ranges))
    {
      struct mem_range *ra, *rb;
      int a, b;

      qsort (VEC_address (mem_range_s, ranges),
	     VEC_length (mem_range_s, ranges),
	     sizeof (mem_range_s),
	     compare_mem_ranges);

      a = 0;
      ra = VEC_index (mem_range_s, ranges, a);
      for (b = 1; VEC_iterate (mem_range_s, ranges, b, rb); b++)
	{
	  /* If mem_range B overlaps or is adjacent to mem_range A,
	     merge them.  */
	  if (rb->start <= ra->start + ra->length)
	    {
	      ra->length = max (ra->length,
				(rb->start - ra->start) + rb->length);
	      continue;		/* next b, same a */
	    }
	  a++;			/* next a */
	  ra = VEC_index (mem_range_s, ranges, a);

	  if (a != b)
	    *ra = *rb;
	}
      VEC_truncate (mem_range_s, ranges, a + 1);
    }
}
@


1.3
log
@Copyright year update in most files of the GDB Project.

gdb/ChangeLog:

        Copyright year update in most files of the GDB Project.
@
text
@d3 1
a3 1
   Copyright (C) 2010-2012 Free Software Foundation, Inc.
@


1.2
log
@	gdb/
	* memrange.c (compare_mem_ranges): Mention sort order in
	describing comment.
	(normalize_mem_ranges): Add comment.  Fix ra->length calculation.
	* tracepoint.c (traceframe_available_memory): Extend comment to
	mention what happens to RESULT when the target does not support
	the query.
@
text
@d3 1
a3 1
   Copyright (C) 2010, 2011 Free Software Foundation, Inc.
@


1.2.4.1
log
@Copyright year update in most files of the GDB Project.

gdb/ChangeLog:

        Copyright year update in most files of the GDB Project.
@
text
@d3 1
a3 1
   Copyright (C) 2010-2012 Free Software Foundation, Inc.
@


1.1
log
@2011-02-14  Pedro Alves  <pedro@@codesourcery.com>

	gdb/
	* Makefile.in (SFILES): Add memrange.c.
	(HFILES_NO_SRCDIR): Add memrange.h.
	(COMMON_OBS): Add memrange.o.
	* memrange.c: New file.
	* memrange.h: New file.
	* tracepoint.c: Include memrange.h.
	(struct mem_range): Delete.
	(mem_range_s): Delete.
	(traceframe_available_memory): New function.
	* tracepoint.h (traceframe_available_memory): Declare.
@
text
@d34 2
a35 1
/* qsort comparison function, that compares mem_ranges.  */
d54 4
d76 2
a77 1
	      ra->length = (rb->start + rb->length) - ra->start;
@

