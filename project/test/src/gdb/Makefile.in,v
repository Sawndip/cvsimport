head	1.1274;
access;
symbols
	gdb_7_6_1-2013-08-30-release:1.1243.2.1
	gdb_7_6-2013-04-26-release:1.1243.2.1
	gdb_7_6-branch:1.1243.0.2
	gdb_7_6-2013-03-12-branchpoint:1.1243
	gdb_7_5_1-2012-11-29-release:1.1210
	gdb_7_5-2012-08-17-release:1.1210
	gdb_7_5-branch:1.1210.0.2
	gdb_7_5-2012-07-18-branchpoint:1.1210
	gdb_7_4_1-2012-04-26-release:1.1179.2.2
	gdb_7_4-2012-01-24-release:1.1179.2.2
	gdb_7_4-branch:1.1179.0.2
	gdb_7_4-2011-12-13-branchpoint:1.1179
	gdb_7_3_1-2011-09-04-release:1.1164
	gdb_7_3-2011-07-26-release:1.1164
	gdb_7_3-branch:1.1164.0.2
	gdb_7_3-2011-04-01-branchpoint:1.1164
	gdb_7_2-2010-09-02-release:1.1127.2.3
	gdb_7_2-branch:1.1127.0.2
	gdb_7_2-2010-07-07-branchpoint:1.1127
	gdb_7_1-2010-03-18-release:1.1110
	gdb_7_1-branch:1.1110.0.2
	gdb_7_1-2010-02-18-branchpoint:1.1110
	gdb_7_0_1-2009-12-22-release:1.1099.2.1
	gdb_7_0-2009-10-06-release:1.1099.2.1
	gdb_7_0-branch:1.1099.0.2
	gdb_7_0-2009-09-16-branchpoint:1.1099
	arc-sim-20090309:1.984.2.1.4.1
	msnyder-checkpoint-072509-branch:1.1091.0.2
	msnyder-checkpoint-072509-branchpoint:1.1091
	arc-insight_6_8-branch:1.984.2.1.0.4
	arc-insight_6_8-branchpoint:1.984.2.1
	insight_6_8-branch:1.984.2.1.0.2
	insight_6_8-branchpoint:1.984.2.1
	reverse-20081226-branch:1.1061.0.2
	reverse-20081226-branchpoint:1.1061
	multiprocess-20081120-branch:1.1060.0.2
	multiprocess-20081120-branchpoint:1.1060
	reverse-20080930-branch:1.1051.0.2
	reverse-20080930-branchpoint:1.1051
	reverse-20080717-branch:1.1038.0.2
	reverse-20080717-branchpoint:1.1038
	msnyder-reverse-20080609-branch:1.1026.0.2
	msnyder-reverse-20080609-branchpoint:1.1026
	drow-reverse-20070409-branch:1.890.0.2
	drow-reverse-20070409-branchpoint:1.890
	gdb_6_8-2008-03-27-release:1.984.2.1
	gdb_6_8-branch:1.984.0.2
	gdb_6_8-2008-02-26-branchpoint:1.984
	gdb_6_7_1-2007-10-29-release:1.936
	gdb_6_7-2007-10-10-release:1.936
	gdb_6_7-branch:1.936.0.2
	gdb_6_7-2007-09-07-branchpoint:1.936
	insight_6_6-20070208-release:1.848.2.1
	gdb_6_6-2006-12-18-release:1.848.2.1
	gdb_6_6-branch:1.848.0.2
	gdb_6_6-2006-11-15-branchpoint:1.848
	insight_6_5-20061003-release:1.813
	gdb-csl-symbian-6_4_50_20060226-12:1.787.2.3.2.3
	gdb-csl-sourcerygxx-3_4_4-25:1.761.2.2
	nickrob-async-20060828-mergepoint:1.840
	gdb-csl-symbian-6_4_50_20060226-11:1.787.2.3.2.3
	gdb-csl-sourcerygxx-4_1-17:1.787.2.5
	gdb-csl-20060226-branch-local-2:1.787.2.5
	gdb-csl-sourcerygxx-4_1-14:1.787.2.4
	gdb-csl-sourcerygxx-4_1-13:1.787.2.4
	gdb-csl-sourcerygxx-4_1-12:1.787.2.4
	gdb-csl-sourcerygxx-3_4_4-21:1.787.2.4
	gdb_6_5-20060621-release:1.813
	gdb-csl-sourcerygxx-4_1-9:1.787.2.4
	gdb-csl-sourcerygxx-4_1-8:1.787.2.4
	gdb-csl-sourcerygxx-4_1-7:1.787.2.4
	gdb-csl-arm-2006q1-6:1.787.2.4
	gdb-csl-sourcerygxx-4_1-6:1.787.2.4
	gdb-csl-symbian-6_4_50_20060226-10:1.787.2.3.2.3
	gdb-csl-symbian-6_4_50_20060226-9:1.787.2.3.2.2
	gdb-csl-symbian-6_4_50_20060226-8:1.787.2.3.2.2
	gdb-csl-coldfire-4_1-11:1.787.2.4
	gdb-csl-sourcerygxx-3_4_4-19:1.787.2.4
	gdb-csl-coldfire-4_1-10:1.787.2.4
	gdb_6_5-branch:1.813.0.2
	gdb_6_5-2006-05-14-branchpoint:1.813
	gdb-csl-sourcerygxx-4_1-5:1.787.2.4
	nickrob-async-20060513-branch:1.812.0.2
	nickrob-async-20060513-branchpoint:1.812
	gdb-csl-sourcerygxx-4_1-4:1.787.2.4
	msnyder-reverse-20060502-branch:1.811.0.2
	msnyder-reverse-20060502-branchpoint:1.811
	gdb-csl-morpho-4_1-4:1.787.2.3
	gdb-csl-sourcerygxx-3_4_4-17:1.787.2.3
	readline_5_1-import-branch:1.809.0.2
	readline_5_1-import-branchpoint:1.809
	gdb-csl-20060226-branch-merge-to-csl-symbian-1:1.787.2.3
	gdb-csl-symbian-20060226-branch:1.787.2.3.0.2
	gdb-csl-symbian-20060226-branchpoint:1.787.2.3
	gdb-csl-20060226-branch-merge-to-csl-local-1:1.787.2.3
	msnyder-reverse-20060331-branch:1.798.0.2
	msnyder-reverse-20060331-branchpoint:1.798
	gdb-csl-available-20060303-branch:1.789.0.2
	gdb-csl-available-20060303-branchpoint:1.789
	gdb-csl-20060226-branch:1.787.0.2
	gdb-csl-20060226-branchpoint:1.787
	gdb_6_4-20051202-release:1.758.2.3
	msnyder-fork-checkpoint-branch:1.761.0.4
	msnyder-fork-checkpoint-branchpoint:1.761
	gdb-csl-gxxpro-6_3-branch:1.761.0.2
	gdb-csl-gxxpro-6_3-branchpoint:1.761
	gdb_6_4-branch:1.758.0.2
	gdb_6_4-2005-11-01-branchpoint:1.758
	gdb-csl-arm-20051020-branch:1.756.0.2
	gdb-csl-arm-20051020-branchpoint:1.756
	msnyder-tracepoint-checkpoint-branch:1.734.0.2
	msnyder-tracepoint-checkpoint-branchpoint:1.734
	gdb-csl-arm-20050325-2005-q1b:1.707.2.5
	gdb-csl-arm-20050325-2005-q1a:1.707.2.5
	csl-arm-20050325-branch:1.707.0.2
	csl-arm-20050325-branchpoint:1.707
	gdb-post-i18n-errorwarning-20050211:1.698
	gdb-pre-i18n-errorwarning-20050211:1.698
	gdb_6_3-20041109-release:1.643.2.1
	gdb_6_3-branch:1.643.0.2
	gdb_6_3-20041019-branchpoint:1.643
	drow_intercu-merge-20040921:1.625
	drow_intercu-merge-20040915:1.619
	jimb-gdb_6_2-e500-branch:1.594.4.3.0.2
	jimb-gdb_6_2-e500-branchpoint:1.594
	gdb_6_2-20040730-release:1.594
	gdb_6_2-branch:1.594.0.2
	gdb_6_2-2004-07-10-gmt-branchpoint:1.594
	gdb_6_1_1-20040616-release:1.518
	gdb_6_1-2004-04-05-release:1.518
	drow_intercu-merge-20040402:1.531
	drow_intercu-merge-20040327:1.530
	ezannoni_pie-20040323-branch:1.529.0.2
	ezannoni_pie-20040323-branchpoint:1.529
	cagney_tramp-20040321-mergepoint:1.526
	cagney_tramp-20040309-branch:1.518.0.4
	cagney_tramp-20040309-branchpoint:1.518
	gdb_6_1-branch:1.518.0.2
	gdb_6_1-2004-03-01-gmt-branchpoint:1.518
	drow_intercu-20040221-branch:1.512.0.2
	drow_intercu-20040221-branchpoint:1.512
	cagney_bfdfile-20040213-branch:1.496.0.2
	cagney_bfdfile-20040213-branchpoint:1.496
	drow-cplus-merge-20040208:1.487
	carlton_dictionary-20040126-merge:1.482
	cagney_bigcore-20040122-branch:1.479.0.2
	cagney_bigcore-20040122-branchpoint:1.479
	drow-cplus-merge-20040113:1.475
	drow-cplus-merge-20031224:1.474
	drow-cplus-merge-20031220:1.474
	carlton_dictionary-20031215-merge:1.473
	drow-cplus-merge-20031214:1.473
	carlton-dictionary-20031111-merge:1.469
	gdb_6_0-2003-10-04-release:1.410.2.14
	kettenis_sparc-20030918-branch:1.445.0.2
	kettenis_sparc-20030918-branchpoint:1.445
	carlton_dictionary-20030917-merge:1.444
	ezannoni_pie-20030916-branchpoint:1.444
	ezannoni_pie-20030916-branch:1.444.0.2
	cagney_x86i386-20030821-branch:1.431.0.2
	cagney_x86i386-20030821-branchpoint:1.431
	carlton_dictionary-20030805-merge:1.423
	carlton_dictionary-20030627-merge:1.410
	gdb_6_0-branch:1.410.0.2
	gdb_6_0-2003-06-23-branchpoint:1.410
	jimb-ppc64-linux-20030613-branch:1.403.0.2
	jimb-ppc64-linux-20030613-branchpoint:1.403
	cagney_convert-20030606-branch:1.391.0.2
	cagney_convert-20030606-branchpoint:1.391
	cagney_writestrings-20030508-branch:1.374.0.4
	cagney_writestrings-20030508-branchpoint:1.374
	jimb-ppc64-linux-20030528-branch:1.383.0.2
	jimb-ppc64-linux-20030528-branchpoint:1.383
	carlton_dictionary-20030523-merge:1.381
	cagney_fileio-20030521-branch:1.381.0.2
	cagney_fileio-20030521-branchpoint:1.381
	kettenis_i386newframe-20030517-mergepoint:1.377
	jimb-ppc64-linux-20030509-branch:1.374.0.2
	jimb-ppc64-linux-20030509-branchpoint:1.374
	kettenis_i386newframe-20030504-mergepoint:1.373
	carlton_dictionary-20030430-merge:1.371
	kettenis_i386newframe-20030419-branch:1.364.0.2
	kettenis_i386newframe-20030419-branchpoint:1.364
	carlton_dictionary-20030416-merge:1.364
	cagney_frameaddr-20030409-mergepoint:1.361
	kettenis_i386newframe-20030406-branch:1.360.0.2
	kettenis_i386newframe-20030406-branchpoint:1.360
	cagney_frameaddr-20030403-branchpoint:1.358
	cagney_frameaddr-20030403-branch:1.358.0.2
	cagney_framebase-20030330-mergepoint:1.354
	cagney_framebase-20030326-branch:1.351.0.2
	cagney_framebase-20030326-branchpoint:1.351
	cagney_lazyid-20030317-branch:1.341.0.6
	cagney_lazyid-20030317-branchpoint:1.341
	kettenis-i386newframe-20030316-mergepoint:1.341
	offbyone-20030313-branch:1.341.0.4
	offbyone-20030313-branchpoint:1.341
	kettenis-i386newframe-20030308-branch:1.341.0.2
	kettenis-i386newframe-20030308-branchpoint:1.341
	carlton_dictionary-20030305-merge:1.341
	cagney_offbyone-20030303-branch:1.338.0.2
	cagney_offbyone-20030303-branchpoint:1.338
	carlton_dictionary-20030207-merge:1.328
	interps-20030203-mergepoint:1.323
	interps-20030202-branch:1.323.0.2
	interps-20030202-branchpoint:1.323
	cagney-unwind-20030108-branch:1.311.0.2
	cagney-unwind-20030108-branchpoint:1.311
	carlton_dictionary-20021223-merge:1.297
	jimb-separate-debug-021223-branch:1.297.0.2
	gdb_5_3-2002-12-12-release:1.257.2.5
	jimb-separate-debug-021125-branch:1.279.0.2
	carlton_dictionary-20021115-merge:1.279
	kseitz_interps-20021105-merge:1.274
	kseitz_interps-20021103-merge:1.274
	drow-cplus-merge-20021020:1.269
	drow-cplus-merge-20021025:1.272
	carlton_dictionary-20021025-merge:1.272
	carlton_dictionary-20021011-merge:1.269
	drow-cplus-branch:1.268.0.2
	drow-cplus-branchpoint:1.268
	kseitz_interps-20020930-merge:1.266
	carlton_dictionary-20020927-merge:1.265
	carlton_dictionary-branch:1.262.0.2
	carlton_dictionary-20020920-branchpoint:1.262
	gdb_5_3-branch:1.257.0.2
	gdb_5_3-2002-09-04-branchpoint:1.257
	kseitz_interps-20020829-merge:1.252
	cagney_sysregs-20020825-branch:1.248.0.4
	cagney_sysregs-20020825-branchpoint:1.248
	readline_4_3-import-branch:1.248.0.2
	readline_4_3-import-branchpoint:1.248
	gdb_5_2_1-2002-07-23-release:1.163.2.3
	kseitz_interps-20020528-branch:1.200.0.2
	kseitz_interps-20020528-branchpoint:1.200
	cagney_regbuf-20020515-branch:1.190.0.2
	cagney_regbuf-20020515-branchpoint:1.190
	jimb-macro-020506-branch:1.180.0.2
	jimb-macro-020506-branchpoint:1.180
	gdb_5_2-2002-04-29-release:1.163
	gdb_5_2-branch:1.163.0.2
	gdb_5_2-2002-03-03-branchpoint:1.163
	gdb_5_1_1-2002-01-24-release:1.107.2.1
	gdb_5_1_0_1-2002-01-03-release:1.107.2.1
	cygnus_cvs_20020108_pre:1.147
	gdb_5_1_0_1-2002-01-03-branchpoint:1.107.2.1
	gdb_5_1_0_1-2002-01-03-branch:1.107.2.1.0.2
	gdb_5_1-2001-11-21-release:1.107.2.1
	gdb_s390-2001-09-26-branch:1.107.0.4
	gdb_s390-2001-09-26-branchpoint:1.107
	gdb_5_1-2001-07-29-branch:1.107.0.2
	gdb_5_1-2001-07-29-branchpoint:1.107
	dberlin-typesystem-branch:1.91.0.2
	dberlin-typesystem-branchpoint:1.91
	gdb-post-ptid_t-2001-05-03:1.81
	gdb-pre-ptid_t-2001-05-03:1.81
	insight-precleanup-2001-01-01:1.55
	gdb-post-protoization-2000-07-29:1.39
	gdb-pre-protoization-2000-07-29:1.39
	gdb-premipsmulti-2000-06-06-branch:1.33.0.2
	gdb-premipsmulti-2000-06-06-branchpoint:1.33
	gdb-post-params-removal-2000-06-04:1.33
	gdb-pre-params-removal-2000-06-04:1.33
	gdb-post-params-removal-2000-05-28:1.33
	gdb-pre-params-removal-2000-05-28:1.33
	gdb_5_0-2000-05-19-release:1.25.2.7
	gdb_4_18_2-2000-05-18-release:1.25.2.7
	gdb_4_95_1-2000-05-11-snapshot:1.25.2.5
	gdb_4_95_0-2000-04-27-snapshot:1.25.2.3
	gdb_5_0-2000-04-10-branch:1.25.0.2
	gdb_5_0-2000-04-10-branchpoint:1.25
	repo-unification-2000-02-06:1.1.1.46
	insight-2000-02-04:1.1.1.46
	gdb-2000-02-04:1.1.1.45
	gdb-2000-02-02:1.1.1.44
	gdb-2000-02-01:1.1.1.43
	gdb-2000-01-31:1.1.1.42
	gdb-2000-01-26:1.1.1.41
	gdb-2000-01-24:1.1.1.40
	gdb-2000-01-17:1.1.1.39
	gdb-2000-01-10:1.1.1.38
	gdb-2000-01-05:1.1.1.37
	gdb-1999-12-21:1.1.1.36
	gdb-1999-12-13:1.1.1.35
	gdb-1999-12-07:1.1.1.34
	gdb-1999-12-06:1.1.1.33
	gdb-1999-11-16:1.1.1.32
	gdb-1999-11-08:1.1.1.31
	gdb-1999-11-01:1.1.1.30
	gdb-1999-10-25:1.1.1.29
	gdb-1999-10-18:1.1.1.28
	gdb-1999-10-11:1.1.1.27
	gdb-1999-10-04:1.1.1.26
	gdb-1999-09-28:1.1.1.25
	gdb-1999-09-21:1.1.1.24
	gdb-1999-09-13:1.1.1.23
	gdb-1999-09-08:1.1.1.22
	gdb-1999-08-30:1.1.1.21
	gdb-1999-08-23:1.1.1.20
	gdb-1999-08-16:1.1.1.19
	gdb-1999-08-09:1.1.1.18
	gdb-1999-08-02:1.1.1.17
	gdb-1999-07-26:1.1.1.16
	gdb-1999-07-19:1.1.1.15
	gdb-1999-07-12:1.1.1.14
	gdb-post-reformat-19990707:1.1.1.13
	gdb-1999-07-07-post-reformat-snapshot:1.1.1.13
	gdb-pre-reformat-19990707:1.1.1.13
	gdb-1999-07-07:1.1.1.13
	gdb-1999-07-05:1.1.1.12
	gdb-1999-06-28:1.1.1.11
	gdb-1999-06-21:1.1.1.10
	gdb-1999-06-14:1.1.1.9
	gdb-1999-06-07:1.1.1.8
	gdb-1999-06-01:1.1.1.7
	gdb-4_18-branch:1.1.1.1.0.2
	gdb-4_18-release:1.1.1.1
	gdb-1999-05-25:1.1.1.6
	gdb-1999-05-19:1.1.1.5
	gdb-1999-05-10:1.1.1.4
	gdb-19990504:1.1.1.3
	gdb-19990422:1.1.1.2
	SNAPSHOT:1.1.1
	gdb-4_18:1.1.1.1
	GDB_4_18:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.1274
date	2013.10.17.13.31.33;	author qiyao;	state Exp;
branches;
next	1.1273;

1.1273
date	2013.10.17.13.28.36;	author qiyao;	state Exp;
branches;
next	1.1272;

1.1272
date	2013.10.11.17.32.30;	author devans;	state Exp;
branches;
next	1.1271;

1.1271
date	2013.10.08.19.56.14;	author tromey;	state Exp;
branches;
next	1.1270;

1.1270
date	2013.09.25.23.17.11;	author devans;	state Exp;
branches;
next	1.1269;

1.1269
date	2013.09.24.13.51.55;	author jkratoch;	state Exp;
branches;
next	1.1268;

1.1268
date	2013.09.06.10.50.10;	author ricard;	state Exp;
branches;
next	1.1267;

1.1267
date	2013.08.22.23.46.28;	author luisgpm;	state Exp;
branches;
next	1.1266;

1.1266
date	2013.08.19.16.54.11;	author luisgpm;	state Exp;
branches;
next	1.1265;

1.1265
date	2013.08.09.15.37.34;	author palves;	state Exp;
branches;
next	1.1264;

1.1264
date	2013.07.27.07.49.04;	author qiyao;	state Exp;
branches;
next	1.1263;

1.1263
date	2013.07.24.16.20.12;	author luisgpm;	state Exp;
branches;
next	1.1262;

1.1262
date	2013.07.10.18.13.52;	author tromey;	state Exp;
branches;
next	1.1261;

1.1261
date	2013.07.03.13.25.45;	author palves;	state Exp;
branches;
next	1.1260;

1.1260
date	2013.06.28.18.59.50;	author tromey;	state Exp;
branches;
next	1.1259;

1.1259
date	2013.06.25.01.16.31;	author kevinb;	state Exp;
branches;
next	1.1258;

1.1258
date	2013.06.24.15.06.27;	author tromey;	state Exp;
branches;
next	1.1257;

1.1257
date	2013.06.19.22.29.36;	author vapier;	state Exp;
branches;
next	1.1256;

1.1256
date	2013.05.20.18.00.36;	author andreast;	state Exp;
branches;
next	1.1255;

1.1255
date	2013.05.15.12.26.14;	author brobecke;	state Exp;
branches;
next	1.1254;

1.1254
date	2013.05.10.10.26.01;	author pmuldoon;	state Exp;
branches;
next	1.1253;

1.1253
date	2013.05.07.01.09.27;	author sandra;	state Exp;
branches;
next	1.1252;

1.1252
date	2013.05.06.14.15.49;	author brobecke;	state Exp;
branches;
next	1.1251;

1.1251
date	2013.04.22.16.46.14;	author tromey;	state Exp;
branches;
next	1.1250;

1.1250
date	2013.04.15.18.04.53;	author tromey;	state Exp;
branches;
next	1.1249;

1.1249
date	2013.04.11.14.13.43;	author jkratoch;	state Exp;
branches;
next	1.1248;

1.1248
date	2013.04.10.09.42.56;	author qiyao;	state Exp;
branches;
next	1.1247;

1.1247
date	2013.04.05.20.01.33;	author jkratoch;	state Exp;
branches;
next	1.1246;

1.1246
date	2013.04.05.13.24.24;	author eliz;	state Exp;
branches;
next	1.1245;

1.1245
date	2013.04.02.17.44.27;	author eliz;	state Exp;
branches;
next	1.1244;

1.1244
date	2013.03.14.09.02.27;	author qiyao;	state Exp;
branches;
next	1.1243;

1.1243
date	2013.03.11.08.51.58;	author mmetzger;	state Exp;
branches
	1.1243.2.1;
next	1.1242;

1.1242
date	2013.03.11.08.42.54;	author mmetzger;	state Exp;
branches;
next	1.1241;

1.1241
date	2013.03.11.08.28.58;	author mmetzger;	state Exp;
branches;
next	1.1240;

1.1240
date	2013.03.11.08.24.06;	author mmetzger;	state Exp;
branches;
next	1.1239;

1.1239
date	2013.03.11.08.17.07;	author mmetzger;	state Exp;
branches;
next	1.1238;

1.1238
date	2013.02.08.09.00.34;	author mshawcroft;	state Exp;
branches;
next	1.1237;

1.1237
date	2013.02.04.20.48.53;	author andreast;	state Exp;
branches;
next	1.1236;

1.1236
date	2013.02.04.12.57.44;	author mshawcroft;	state Exp;
branches;
next	1.1235;

1.1235
date	2013.02.04.12.53.59;	author mshawcroft;	state Exp;
branches;
next	1.1234;

1.1234
date	2013.02.04.12.48.37;	author mshawcroft;	state Exp;
branches;
next	1.1233;

1.1233
date	2013.02.01.20.54.18;	author andreast;	state Exp;
branches;
next	1.1232;

1.1232
date	2013.01.23.19.59.09;	author sivachandra;	state Exp;
branches;
next	1.1231;

1.1231
date	2013.01.21.18.15.31;	author tromey;	state Exp;
branches;
next	1.1230;

1.1230
date	2013.01.17.11.06.26;	author palves;	state Exp;
branches;
next	1.1229;

1.1229
date	2013.01.16.17.31.36;	author tromey;	state Exp;
branches;
next	1.1228;

1.1228
date	2013.01.01.06.32.35;	author brobecke;	state Exp;
branches;
next	1.1227;

1.1227
date	2012.12.18.19.26.28;	author tromey;	state Exp;
branches;
next	1.1226;

1.1226
date	2012.12.18.14.52.58;	author brobecke;	state Exp;
branches;
next	1.1225;

1.1225
date	2012.12.16.04.46.40;	author brobecke;	state Exp;
branches;
next	1.1224;

1.1224
date	2012.12.15.14.30.18;	author brobecke;	state Exp;
branches;
next	1.1223;

1.1223
date	2012.12.15.14.29.00;	author brobecke;	state Exp;
branches;
next	1.1222;

1.1222
date	2012.12.15.14.27.55;	author brobecke;	state Exp;
branches;
next	1.1221;

1.1221
date	2012.12.15.03.50.22;	author qiyao;	state Exp;
branches;
next	1.1220;

1.1220
date	2012.12.12.21.20.12;	author mgherzan;	state Exp;
branches;
next	1.1219;

1.1219
date	2012.12.07.02.57.49;	author brobecke;	state Exp;
branches;
next	1.1218;

1.1218
date	2012.11.26.19.23.50;	author tromey;	state Exp;
branches;
next	1.1217;

1.1217
date	2012.11.15.16.12.16;	author muller;	state Exp;
branches;
next	1.1216;

1.1216
date	2012.09.13.14.35.16;	author palves;	state Exp;
branches;
next	1.1215;

1.1215
date	2012.08.22.21.04.53;	author khooyp;	state Exp;
branches;
next	1.1214;

1.1214
date	2012.08.18.11.00.36;	author eliz;	state Exp;
branches;
next	1.1213;

1.1213
date	2012.07.26.20.11.08;	author tromey;	state Exp;
branches;
next	1.1212;

1.1212
date	2012.07.18.23.37.58;	author devans;	state Exp;
branches;
next	1.1211;

1.1211
date	2012.07.18.19.33.33;	author tromey;	state Exp;
branches;
next	1.1210;

1.1210
date	2012.07.02.15.29.33;	author shebs;	state Exp;
branches;
next	1.1209;

1.1209
date	2012.05.30.19.31.44;	author palves;	state Exp;
branches;
next	1.1208;

1.1208
date	2012.05.24.00.33.45;	author shebs;	state Exp;
branches;
next	1.1207;

1.1207
date	2012.04.27.20.47.50;	author sergiodj;	state Exp;
branches;
next	1.1206;

1.1206
date	2012.04.25.14.07.19;	author devans;	state Exp;
branches;
next	1.1205;

1.1205
date	2012.04.19.19.34.49;	author palves;	state Exp;
branches;
next	1.1204;

1.1204
date	2012.04.19.17.15.07;	author palves;	state Exp;
branches;
next	1.1203;

1.1203
date	2012.04.19.15.27.44;	author palves;	state Exp;
branches;
next	1.1202;

1.1202
date	2012.04.19.05.58.51;	author qiyao;	state Exp;
branches;
next	1.1201;

1.1201
date	2012.04.17.21.13.19;	author devans;	state Exp;
branches;
next	1.1200;

1.1200
date	2012.04.17.15.49.12;	author jkratoch;	state Exp;
branches;
next	1.1199;

1.1199
date	2012.04.14.05.24.53;	author qiyao;	state Exp;
branches;
next	1.1198;

1.1198
date	2012.04.10.22.48.41;	author qiyao;	state Exp;
branches;
next	1.1197;

1.1197
date	2012.04.10.22.46.13;	author qiyao;	state Exp;
branches;
next	1.1196;

1.1196
date	2012.03.28.21.31.18;	author brobecke;	state Exp;
branches;
next	1.1195;

1.1195
date	2012.03.13.15.00.30;	author jkratoch;	state Exp;
branches;
next	1.1194;

1.1194
date	2012.03.08.19.08.11;	author jkratoch;	state Exp;
branches;
next	1.1193;

1.1193
date	2012.03.05.11.41.51;	author gingold;	state Exp;
branches;
next	1.1192;

1.1192
date	2012.03.03.03.32.44;	author qiyao;	state Exp;
branches;
next	1.1191;

1.1191
date	2012.03.01.23.55.39;	author jkratoch;	state Exp;
branches;
next	1.1190;

1.1190
date	2012.02.16.23.39.37;	author kevinb;	state Exp;
branches;
next	1.1189;

1.1189
date	2012.02.15.22.17.01;	author kevinb;	state Exp;
branches;
next	1.1188;

1.1188
date	2012.02.09.16.06.43;	author palves;	state Exp;
branches;
next	1.1187;

1.1187
date	2012.01.18.18.35.41;	author devans;	state Exp;
branches;
next	1.1186;

1.1186
date	2012.01.10.16.30.43;	author jkratoch;	state Exp;
branches;
next	1.1185;

1.1185
date	2012.01.09.20.27.46;	author kseitz;	state Exp;
branches;
next	1.1184;

1.1184
date	2012.01.04.08.16.54;	author brobecke;	state Exp;
branches;
next	1.1183;

1.1183
date	2012.01.02.17.18.46;	author jkratoch;	state Exp;
branches;
next	1.1182;

1.1182
date	2012.01.02.02.31.18;	author jkratoch;	state Exp;
branches;
next	1.1181;

1.1181
date	2012.01.02.02.28.56;	author jkratoch;	state Exp;
branches;
next	1.1180;

1.1180
date	2011.12.23.17.06.10;	author kpouget;	state Exp;
branches;
next	1.1179;

1.1179
date	2011.12.02.22.26.51;	author jkratoch;	state Exp;
branches
	1.1179.2.1;
next	1.1178;

1.1178
date	2011.11.20.08.59.56;	author sanjoyd;	state Exp;
branches;
next	1.1177;

1.1177
date	2011.11.20.08.30.58;	author sanjoyd;	state Exp;
branches;
next	1.1176;

1.1176
date	2011.11.01.14.51.19;	author jlebar;	state Exp;
branches;
next	1.1175;

1.1175
date	2011.10.12.15.54.56;	author jkratoch;	state Exp;
branches;
next	1.1174;

1.1174
date	2011.10.09.19.26.42;	author jkratoch;	state Exp;
branches;
next	1.1173;

1.1173
date	2011.10.07.07.38.28;	author kpouget;	state Exp;
branches;
next	1.1172;

1.1172
date	2011.08.30.02.09.05;	author qiyao;	state Exp;
branches;
next	1.1171;

1.1171
date	2011.08.24.12.07.23;	author luisgpm;	state Exp;
branches;
next	1.1170;

1.1170
date	2011.07.27.18.25.26;	author tromey;	state Exp;
branches;
next	1.1169;

1.1169
date	2011.07.21.23.46.08;	author kcy;	state Exp;
branches;
next	1.1168;

1.1168
date	2011.06.30.17.01.29;	author tromey;	state Exp;
branches;
next	1.1167;

1.1167
date	2011.06.24.19.29.49;	author tromey;	state Exp;
branches;
next	1.1166;

1.1166
date	2011.05.27.14.00.25;	author palves;	state Exp;
branches;
next	1.1165;

1.1165
date	2011.04.11.13.23.08;	author gary;	state Exp;
branches;
next	1.1164;

1.1164
date	2011.03.30.06.55.39;	author muller;	state Exp;
branches;
next	1.1163;

1.1163
date	2011.03.09.06.10.37;	author qiyao;	state Exp;
branches;
next	1.1162;

1.1162
date	2011.03.07.11.42.54;	author qiyao;	state Exp;
branches;
next	1.1161;

1.1161
date	2011.03.03.04.16.33;	author qiyao;	state Exp;
branches;
next	1.1160;

1.1160
date	2011.02.24.18.09.51;	author msnyder;	state Exp;
branches;
next	1.1159;

1.1159
date	2011.02.24.07.39.47;	author brobecke;	state Exp;
branches;
next	1.1158;

1.1158
date	2011.02.22.08.00.25;	author brobecke;	state Exp;
branches;
next	1.1157;

1.1157
date	2011.02.21.18.13.16;	author tromey;	state Exp;
branches;
next	1.1156;

1.1156
date	2011.02.21.08.38.09;	author teawater;	state Exp;
branches;
next	1.1155;

1.1155
date	2011.02.18.20.31.18;	author tromey;	state Exp;
branches;
next	1.1154;

1.1154
date	2011.02.15.21.05.52;	author jkratoch;	state Exp;
branches;
next	1.1153;

1.1153
date	2011.02.14.11.20.27;	author palves;	state Exp;
branches;
next	1.1152;

1.1152
date	2011.02.14.11.13.11;	author palves;	state Exp;
branches;
next	1.1151;

1.1151
date	2011.02.12.13.07.39;	author qiyao;	state Exp;
branches;
next	1.1150;

1.1150
date	2011.02.11.09.57.24;	author qiyao;	state Exp;
branches;
next	1.1149;

1.1149
date	2011.02.04.21.54.14;	author swagiaal;	state Exp;
branches;
next	1.1148;

1.1148
date	2011.01.31.04.41.25;	author brobecke;	state Exp;
branches;
next	1.1147;

1.1147
date	2011.01.24.21.34.19;	author kevinb;	state Exp;
branches;
next	1.1146;

1.1146
date	2011.01.14.13.38.23;	author palves;	state Exp;
branches;
next	1.1145;

1.1145
date	2011.01.13.16.24.10;	author brobecke;	state Exp;
branches;
next	1.1144;

1.1144
date	2011.01.01.15.32.55;	author brobecke;	state Exp;
branches;
next	1.1143;

1.1143
date	2010.12.29.16.11.48;	author vapier;	state Exp;
branches;
next	1.1142;

1.1142
date	2010.11.23.14.37.21;	author tromey;	state Exp;
branches;
next	1.1141;

1.1141
date	2010.11.22.20.30.58;	author tromey;	state Exp;
branches;
next	1.1140;

1.1140
date	2010.11.19.18.10.51;	author tromey;	state Exp;
branches;
next	1.1139;

1.1139
date	2010.11.05.14.31.25;	author kwerner;	state Exp;
branches;
next	1.1138;

1.1138
date	2010.11.02.18.55.52;	author tromey;	state Exp;
branches;
next	1.1137;

1.1137
date	2010.10.21.23.50.45;	author jiez;	state Exp;
branches;
next	1.1136;

1.1136
date	2010.10.06.16.46.12;	author devans;	state Exp;
branches;
next	1.1135;

1.1135
date	2010.10.06.16.02.43;	author devans;	state Exp;
branches;
next	1.1134;

1.1134
date	2010.09.13.17.59.59;	author tromey;	state Exp;
branches;
next	1.1133;

1.1133
date	2010.09.02.13.58.06;	author jkratoch;	state Exp;
branches;
next	1.1132;

1.1132
date	2010.08.19.18.40.46;	author tromey;	state Exp;
branches;
next	1.1131;

1.1131
date	2010.08.18.22.57.46;	author tromey;	state Exp;
branches;
next	1.1130;

1.1130
date	2010.08.10.18.35.52;	author tromey;	state Exp;
branches;
next	1.1129;

1.1129
date	2010.07.30.20.46.34;	author tromey;	state Exp;
branches;
next	1.1128;

1.1128
date	2010.07.28.18.32.33;	author tromey;	state Exp;
branches;
next	1.1127;

1.1127
date	2010.06.28.21.16.02;	author pmuldoon;	state Exp;
branches
	1.1127.2.1;
next	1.1126;

1.1126
date	2010.06.15.17.57.38;	author palves;	state Exp;
branches;
next	1.1125;

1.1125
date	2010.06.11.12.44.15;	author uweigand;	state Exp;
branches;
next	1.1124;

1.1124
date	2010.05.28.18.50.30;	author jkratoch;	state Exp;
branches;
next	1.1123;

1.1123
date	2010.04.29.15.45.56;	author pmuldoon;	state Exp;
branches;
next	1.1122;

1.1122
date	2010.04.29.14.45.38;	author brobecke;	state Exp;
branches;
next	1.1121;

1.1121
date	2010.04.26.13.53.56;	author muller;	state Exp;
branches;
next	1.1120;

1.1120
date	2010.04.24.13.12.50;	author palves;	state Exp;
branches;
next	1.1119;

1.1119
date	2010.04.23.16.20.08;	author devans;	state Exp;
branches;
next	1.1118;

1.1118
date	2010.04.15.19.54.12;	author devans;	state Exp;
branches;
next	1.1117;

1.1117
date	2010.04.09.09.41.42;	author pmuldoon;	state Exp;
branches;
next	1.1116;

1.1116
date	2010.03.23.21.31.29;	author vapier;	state Exp;
branches;
next	1.1115;

1.1115
date	2010.03.10.18.20.05;	author tromey;	state Exp;
branches;
next	1.1114;

1.1114
date	2010.02.28.15.04.13;	author corinna;	state Exp;
branches;
next	1.1113;

1.1113
date	2010.02.25.20.30.58;	author palves;	state Exp;
branches;
next	1.1112;

1.1112
date	2010.02.24.21.18.26;	author pmuldoon;	state Exp;
branches;
next	1.1111;

1.1111
date	2010.02.24.15.14.30;	author davem;	state Exp;
branches;
next	1.1110;

1.1110
date	2010.02.02.23.16.53;	author tromey;	state Exp;
branches;
next	1.1109;

1.1109
date	2010.01.14.08.03.35;	author pmuldoon;	state Exp;
branches;
next	1.1108;

1.1108
date	2010.01.12.21.40.23;	author vprus;	state Exp;
branches;
next	1.1107;

1.1107
date	2010.01.01.07.31.28;	author brobecke;	state Exp;
branches;
next	1.1106;

1.1106
date	2009.12.23.20.28.44;	author tromey;	state Exp;
branches;
next	1.1105;

1.1105
date	2009.10.26.18.30.39;	author teawater;	state Exp;
branches;
next	1.1104;

1.1104
date	2009.10.26.18.28.13;	author teawater;	state Exp;
branches;
next	1.1103;

1.1103
date	2009.10.21.14.14.56;	author ams;	state Exp;
branches;
next	1.1102;

1.1102
date	2009.10.19.09.51.40;	author palves;	state Exp;
branches;
next	1.1101;

1.1101
date	2009.10.15.19.28.52;	author eager;	state Exp;
branches;
next	1.1100;

1.1100
date	2009.09.16.21.55.57;	author hjl;	state Exp;
branches;
next	1.1099;

1.1099
date	2009.09.15.16.09.31;	author jkratoch;	state Exp;
branches
	1.1099.2.1;
next	1.1098;

1.1098
date	2009.09.15.03.30.03;	author sergiodj;	state Exp;
branches;
next	1.1097;

1.1097
date	2009.09.09.17.45.39;	author brobecke;	state Exp;
branches;
next	1.1096;

1.1096
date	2009.09.08.18.50.40;	author rwild;	state Exp;
branches;
next	1.1095;

1.1095
date	2009.08.20.18.02.46;	author devans;	state Exp;
branches;
next	1.1094;

1.1094
date	2009.08.18.15.22.12;	author tromey;	state Exp;
branches;
next	1.1093;

1.1093
date	2009.07.31.15.28.27;	author uweigand;	state Exp;
branches;
next	1.1092;

1.1092
date	2009.07.30.22.44.49;	author rwild;	state Exp;
branches;
next	1.1091;

1.1091
date	2009.07.03.12.06.35;	author gingold;	state Exp;
branches
	1.1091.2.1;
next	1.1090;

1.1090
date	2009.06.30.22.36.27;	author nickrob;	state Exp;
branches;
next	1.1089;

1.1089
date	2009.06.30.21.23.38;	author jkratoch;	state Exp;
branches;
next	1.1088;

1.1088
date	2009.06.29.13.10.39;	author uweigand;	state Exp;
branches;
next	1.1087;

1.1087
date	2009.06.28.00.20.21;	author drow;	state Exp;
branches;
next	1.1086;

1.1086
date	2009.05.28.01.05.13;	author tromey;	state Exp;
branches;
next	1.1085;

1.1085
date	2009.05.28.00.47.20;	author tromey;	state Exp;
branches;
next	1.1084;

1.1084
date	2009.05.28.00.40.23;	author tromey;	state Exp;
branches;
next	1.1083;

1.1083
date	2009.05.18.13.25.33;	author jbeniston;	state Exp;
branches;
next	1.1082;

1.1082
date	2009.04.30.03.04.28;	author teawater;	state Exp;
branches;
next	1.1081;

1.1081
date	2009.04.30.02.58.37;	author teawater;	state Exp;
branches;
next	1.1080;

1.1080
date	2009.04.25.10.05.22;	author eliz;	state Exp;
branches;
next	1.1079;

1.1079
date	2009.04.21.20.19.13;	author schwab;	state Exp;
branches;
next	1.1078;

1.1078
date	2009.04.18.17.11.02;	author jsm28;	state Exp;
branches;
next	1.1077;

1.1077
date	2009.04.17.17.44.03;	author jsm28;	state Exp;
branches;
next	1.1076;

1.1076
date	2009.03.30.19.54.19;	author bauermann;	state Exp;
branches;
next	1.1075;

1.1075
date	2009.03.25.00.58.33;	author tromey;	state Exp;
branches;
next	1.1074;

1.1074
date	2009.03.24.01.37.48;	author brobecke;	state Exp;
branches;
next	1.1073;

1.1073
date	2009.03.21.03.03.53;	author bauermann;	state Exp;
branches;
next	1.1072;

1.1072
date	2009.03.20.23.04.27;	author tromey;	state Exp;
branches;
next	1.1071;

1.1071
date	2009.03.18.08.51.10;	author nathan;	state Exp;
branches;
next	1.1070;

1.1070
date	2009.03.02.01.27.35;	author devans;	state Exp;
branches;
next	1.1069;

1.1069
date	2009.03.02.00.45.12;	author devans;	state Exp;
branches;
next	1.1068;

1.1068
date	2009.02.17.17.56.50;	author palves;	state Exp;
branches;
next	1.1067;

1.1067
date	2009.02.06.22.59.00;	author palves;	state Exp;
branches;
next	1.1066;

1.1066
date	2009.02.06.21.33.58;	author bauermann;	state Exp;
branches;
next	1.1065;

1.1065
date	2009.01.30.22.14.52;	author tromey;	state Exp;
branches;
next	1.1064;

1.1064
date	2009.01.12.01.10.27;	author cgf;	state Exp;
branches;
next	1.1063;

1.1063
date	2009.01.09.21.15.10;	author schwab;	state Exp;
branches;
next	1.1062;

1.1062
date	2009.01.03.05.57.50;	author brobecke;	state Exp;
branches;
next	1.1061;

1.1061
date	2008.12.02.07.57.36;	author vprus;	state Exp;
branches
	1.1061.2.1;
next	1.1060;

1.1060
date	2008.10.28.20.50.17;	author tromey;	state Exp;
branches;
next	1.1059;

1.1059
date	2008.10.27.11.46.24;	author palves;	state Exp;
branches;
next	1.1058;

1.1058
date	2008.10.27.11.37.39;	author palves;	state Exp;
branches;
next	1.1057;

1.1057
date	2008.10.22.19.45.05;	author brobecke;	state Exp;
branches;
next	1.1056;

1.1056
date	2008.10.17.19.43.46;	author msnyder;	state Exp;
branches;
next	1.1055;

1.1055
date	2008.10.16.03.53.58;	author bauermann;	state Exp;
branches;
next	1.1054;

1.1054
date	2008.10.09.16.06.22;	author tschwinge;	state Exp;
branches;
next	1.1053;

1.1053
date	2008.10.09.13.49.13;	author palves;	state Exp;
branches;
next	1.1052;

1.1052
date	2008.10.02.17.39.08;	author tromey;	state Exp;
branches;
next	1.1051;

1.1051
date	2008.09.22.15.12.19;	author palves;	state Exp;
branches
	1.1051.2.1;
next	1.1050;

1.1050
date	2008.09.12.10.39.03;	author palves;	state Exp;
branches;
next	1.1049;

1.1049
date	2008.09.10.18.13.21;	author palves;	state Exp;
branches;
next	1.1048;

1.1048
date	2008.08.20.10.18.23;	author kettenis;	state Exp;
branches;
next	1.1047;

1.1047
date	2008.08.09.18.57.08;	author drow;	state Exp;
branches;
next	1.1046;

1.1046
date	2008.08.09.18.27.04;	author tromey;	state Exp;
branches;
next	1.1045;

1.1045
date	2008.08.08.17.38.35;	author tromey;	state Exp;
branches;
next	1.1044;

1.1044
date	2008.08.07.22.49.09;	author rwild;	state Exp;
branches;
next	1.1043;

1.1043
date	2008.08.06.19.41.30;	author bauermann;	state Exp;
branches;
next	1.1042;

1.1042
date	2008.08.02.21.36.06;	author kseitz;	state Exp;
branches;
next	1.1041;

1.1041
date	2008.07.28.17.53.52;	author tromey;	state Exp;
branches;
next	1.1040;

1.1040
date	2008.07.25.16.12.02;	author tromey;	state Exp;
branches;
next	1.1039;

1.1039
date	2008.07.18.20.55.32;	author tromey;	state Exp;
branches;
next	1.1038;

1.1038
date	2008.07.14.18.28.56;	author ppluzhnikov;	state Exp;
branches
	1.1038.2.1;
next	1.1037;

1.1037
date	2008.07.13.05.31.44;	author vprus;	state Exp;
branches;
next	1.1036;

1.1036
date	2008.07.12.22.16.34;	author uweigand;	state Exp;
branches;
next	1.1035;

1.1035
date	2008.07.11.11.07.38;	author palves;	state Exp;
branches;
next	1.1034;

1.1034
date	2008.07.09.22.42.42;	author palves;	state Exp;
branches;
next	1.1033;

1.1033
date	2008.07.09.22.30.45;	author palves;	state Exp;
branches;
next	1.1032;

1.1032
date	2008.07.09.22.16.14;	author palves;	state Exp;
branches;
next	1.1031;

1.1031
date	2008.07.09.11.02.56;	author palves;	state Exp;
branches;
next	1.1030;

1.1030
date	2008.07.07.22.05.45;	author palves;	state Exp;
branches;
next	1.1029;

1.1029
date	2008.06.27.11.54.21;	author palves;	state Exp;
branches;
next	1.1028;

1.1028
date	2008.06.26.15.51.26;	author drow;	state Exp;
branches;
next	1.1027;

1.1027
date	2008.06.10.10.23.53;	author vprus;	state Exp;
branches;
next	1.1026;

1.1026
date	2008.06.06.20.58.08;	author tromey;	state Exp;
branches
	1.1026.2.1;
next	1.1025;

1.1025
date	2008.06.05.18.25.30;	author jkratoch;	state Exp;
branches;
next	1.1024;

1.1024
date	2008.05.24.16.32.01;	author cseo;	state Exp;
branches;
next	1.1023;

1.1023
date	2008.05.21.14.47.26;	author uweigand;	state Exp;
branches;
next	1.1022;

1.1022
date	2008.05.20.21.06.56;	author nickrob;	state Exp;
branches;
next	1.1021;

1.1021
date	2008.05.16.12.51.21;	author uweigand;	state Exp;
branches;
next	1.1020;

1.1020
date	2008.05.15.09.38.40;	author schwab;	state Exp;
branches;
next	1.1019;

1.1019
date	2008.05.14.04.23.02;	author brobecke;	state Exp;
branches;
next	1.1018;

1.1018
date	2008.05.09.17.02.01;	author devans;	state Exp;
branches;
next	1.1017;

1.1017
date	2008.05.06.21.34.59;	author brobecke;	state Exp;
branches;
next	1.1016;

1.1016
date	2008.05.04.17.27.00;	author jkratoch;	state Exp;
branches;
next	1.1015;

1.1015
date	2008.05.03.23.50.43;	author uweigand;	state Exp;
branches;
next	1.1014;

1.1014
date	2008.05.03.18.04.02;	author drow;	state Exp;
branches;
next	1.1013;

1.1013
date	2008.05.03.17.16.43;	author uweigand;	state Exp;
branches;
next	1.1012;

1.1012
date	2008.05.03.00.37.34;	author uweigand;	state Exp;
branches;
next	1.1011;

1.1011
date	2008.05.02.20.38.15;	author drow;	state Exp;
branches;
next	1.1010;

1.1010
date	2008.05.02.16.49.53;	author palves;	state Exp;
branches;
next	1.1009;

1.1009
date	2008.05.02.13.58.38;	author ams;	state Exp;
branches;
next	1.1008;

1.1008
date	2008.05.01.23.09.14;	author palves;	state Exp;
branches;
next	1.1007;

1.1007
date	2008.05.01.18.50.13;	author drow;	state Exp;
branches;
next	1.1006;

1.1006
date	2008.04.30.21.19.10;	author drow;	state Exp;
branches;
next	1.1005;

1.1005
date	2008.04.30.21.16.45;	author drow;	state Exp;
branches;
next	1.1004;

1.1004
date	2008.04.24.10.21.44;	author vprus;	state Exp;
branches;
next	1.1003;

1.1003
date	2008.04.23.21.17.05;	author maxim2405;	state Exp;
branches;
next	1.1002;

1.1002
date	2008.04.19.06.12.16;	author nickrob;	state Exp;
branches;
next	1.1001;

1.1001
date	2008.04.17.00.25.01;	author tromey;	state Exp;
branches;
next	1.1000;

1.1000
date	2008.04.14.19.47.29;	author drow;	state Exp;
branches;
next	1.999;

1.999
date	2008.04.14.18.04.00;	author drow;	state Exp;
branches;
next	1.998;

1.998
date	2008.04.09.13.29.51;	author marckhouzam;	state Exp;
branches;
next	1.997;

1.997
date	2008.04.07.11.45.58;	author palves;	state Exp;
branches;
next	1.996;

1.996
date	2008.03.26.14.53.28;	author uweigand;	state Exp;
branches;
next	1.995;

1.995
date	2008.03.23.09.53.52;	author vprus;	state Exp;
branches;
next	1.994;

1.994
date	2008.03.21.17.09.35;	author palves;	state Exp;
branches;
next	1.993;

1.993
date	2008.03.16.08.50.43;	author skrll;	state Exp;
branches;
next	1.992;

1.992
date	2008.03.15.13.53.25;	author vprus;	state Exp;
branches;
next	1.991;

1.991
date	2008.03.14.18.57.42;	author vprus;	state Exp;
branches;
next	1.990;

1.990
date	2008.03.14.17.21.07;	author vprus;	state Exp;
branches;
next	1.989;

1.989
date	2008.03.13.12.22.08;	author drow;	state Exp;
branches;
next	1.988;

1.988
date	2008.03.10.23.14.05;	author drow;	state Exp;
branches;
next	1.987;

1.987
date	2008.03.05.17.21.10;	author drow;	state Exp;
branches;
next	1.986;

1.986
date	2008.03.01.04.39.36;	author drow;	state Exp;
branches;
next	1.985;

1.985
date	2008.02.27.01.06.20;	author drow;	state Exp;
branches;
next	1.984;

1.984
date	2008.02.20.15.45.20;	author deuling;	state Exp;
branches
	1.984.2.1;
next	1.983;

1.983
date	2008.02.14.04.49.12;	author deuling;	state Exp;
branches;
next	1.982;

1.982
date	2008.02.11.21.58.41;	author maxim2405;	state Exp;
branches;
next	1.981;

1.981
date	2008.02.09.13.45.33;	author eliz;	state Exp;
branches;
next	1.980;

1.980
date	2008.02.08.00.42.07;	author devans;	state Exp;
branches;
next	1.979;

1.979
date	2008.02.07.19.06.51;	author brobecke;	state Exp;
branches;
next	1.978;

1.978
date	2008.01.30.07.17.31;	author vprus;	state Exp;
branches;
next	1.977;

1.977
date	2008.01.29.22.47.19;	author drow;	state Exp;
branches;
next	1.976;

1.976
date	2008.01.29.21.26.04;	author brobecke;	state Exp;
branches;
next	1.975;

1.975
date	2008.01.19.15.03.49;	author skrll;	state Exp;
branches;
next	1.974;

1.974
date	2008.01.11.13.34.14;	author deuling;	state Exp;
branches;
next	1.973;

1.973
date	2008.01.08.19.28.08;	author brobecke;	state Exp;
branches;
next	1.972;

1.972
date	2008.01.07.22.33.57;	author bauermann;	state Exp;
branches;
next	1.971;

1.971
date	2008.01.01.22.53.09;	author drow;	state Exp;
branches;
next	1.970;

1.970
date	2007.12.29.17.01.41;	author kettenis;	state Exp;
branches;
next	1.969;

1.969
date	2007.12.21.04.59.00;	author brobecke;	state Exp;
branches;
next	1.968;

1.968
date	2007.12.20.05.36.14;	author brobecke;	state Exp;
branches;
next	1.967;

1.967
date	2007.12.19.13.21.32;	author brobecke;	state Exp;
branches;
next	1.966;

1.966
date	2007.12.17.17.49.28;	author macro;	state Exp;
branches;
next	1.965;

1.965
date	2007.12.06.11.17.03;	author muller;	state Exp;
branches;
next	1.964;

1.964
date	2007.12.04.23.43.57;	author jimb;	state Exp;
branches;
next	1.963;

1.963
date	2007.11.30.21.50.18;	author drow;	state Exp;
branches;
next	1.962;

1.962
date	2007.11.27.17.06.11;	author uweigand;	state Exp;
branches;
next	1.961;

1.961
date	2007.11.17.01.02.01;	author uweigand;	state Exp;
branches;
next	1.960;

1.960
date	2007.11.17.00.55.28;	author uweigand;	state Exp;
branches;
next	1.959;

1.959
date	2007.11.17.00.54.14;	author uweigand;	state Exp;
branches;
next	1.958;

1.958
date	2007.11.17.00.44.37;	author uweigand;	state Exp;
branches;
next	1.957;

1.957
date	2007.11.17.00.41.16;	author uweigand;	state Exp;
branches;
next	1.956;

1.956
date	2007.11.15.06.28.18;	author vprus;	state Exp;
branches;
next	1.955;

1.955
date	2007.10.30.19.35.34;	author drow;	state Exp;
branches;
next	1.954;

1.954
date	2007.10.25.17.52.31;	author bauermann;	state Exp;
branches;
next	1.953;

1.953
date	2007.10.25.11.30.55;	author macro;	state Exp;
branches;
next	1.952;

1.952
date	2007.10.24.21.21.15;	author uweigand;	state Exp;
branches;
next	1.951;

1.951
date	2007.10.24.21.18.51;	author uweigand;	state Exp;
branches;
next	1.950;

1.950
date	2007.10.24.21.16.30;	author uweigand;	state Exp;
branches;
next	1.949;

1.949
date	2007.10.24.21.15.35;	author uweigand;	state Exp;
branches;
next	1.948;

1.948
date	2007.10.24.21.14.16;	author uweigand;	state Exp;
branches;
next	1.947;

1.947
date	2007.10.24.21.08.23;	author uweigand;	state Exp;
branches;
next	1.946;

1.946
date	2007.10.22.14.37.36;	author drow;	state Exp;
branches;
next	1.945;

1.945
date	2007.10.15.19.45.30;	author drow;	state Exp;
branches;
next	1.944;

1.944
date	2007.10.15.19.19.17;	author drow;	state Exp;
branches;
next	1.943;

1.943
date	2007.10.12.16.13.19;	author uweigand;	state Exp;
branches;
next	1.942;

1.942
date	2007.10.09.06.59.27;	author muller;	state Exp;
branches;
next	1.941;

1.941
date	2007.10.08.15.09.04;	author muller;	state Exp;
branches;
next	1.940;

1.940
date	2007.10.08.07.43.42;	author muller;	state Exp;
branches;
next	1.939;

1.939
date	2007.09.27.18.48.32;	author drow;	state Exp;
branches;
next	1.938;

1.938
date	2007.09.17.19.32.53;	author brobecke;	state Exp;
branches;
next	1.937;

1.937
date	2007.09.17.14.53.04;	author guitton;	state Exp;
branches;
next	1.936;

1.936
date	2007.09.05.00.14.02;	author msnyder;	state Exp;
branches;
next	1.935;

1.935
date	2007.09.05.00.01.41;	author msnyder;	state Exp;
branches;
next	1.934;

1.934
date	2007.09.04.01.12.18;	author palves;	state Exp;
branches;
next	1.933;

1.933
date	2007.09.03.23.06.35;	author palves;	state Exp;
branches;
next	1.932;

1.932
date	2007.09.03.22.24.24;	author palves;	state Exp;
branches;
next	1.931;

1.931
date	2007.09.03.19.00.15;	author schwab;	state Exp;
branches;
next	1.930;

1.930
date	2007.09.01.08.18.14;	author jkratoch;	state Exp;
branches;
next	1.929;

1.929
date	2007.08.23.20.33.48;	author brobecke;	state Exp;
branches;
next	1.928;

1.928
date	2007.08.10.17.52.09;	author brobecke;	state Exp;
branches;
next	1.927;

1.927
date	2007.08.10.17.26.45;	author brobecke;	state Exp;
branches;
next	1.926;

1.926
date	2007.08.09.23.01.10;	author ludo;	state Exp;
branches;
next	1.925;

1.925
date	2007.07.26.10.33.59;	author macro;	state Exp;
branches;
next	1.924;

1.924
date	2007.07.25.15.25.14;	author macro;	state Exp;
branches;
next	1.923;

1.923
date	2007.07.03.12.14.43;	author uweigand;	state Exp;
branches;
next	1.922;

1.922
date	2007.07.02.22.01.08;	author drow;	state Exp;
branches;
next	1.921;

1.921
date	2007.06.18.15.46.36;	author drow;	state Exp;
branches;
next	1.920;

1.920
date	2007.06.15.20.19.17;	author vprus;	state Exp;
branches;
next	1.919;

1.919
date	2007.06.13.18.47.58;	author drow;	state Exp;
branches;
next	1.918;

1.918
date	2007.06.13.18.26.59;	author drow;	state Exp;
branches;
next	1.917;

1.917
date	2007.05.28.16.55.30;	author brobecke;	state Exp;
branches;
next	1.916;

1.916
date	2007.05.22.10.57.12;	author macro;	state Exp;
branches;
next	1.915;

1.915
date	2007.05.16.14.07.54;	author drow;	state Exp;
branches;
next	1.914;

1.914
date	2007.05.14.17.33.33;	author drow;	state Exp;
branches;
next	1.913;

1.913
date	2007.05.14.17.23.53;	author drow;	state Exp;
branches;
next	1.912;

1.912
date	2007.05.13.13.02.54;	author uweigand;	state Exp;
branches;
next	1.911;

1.911
date	2007.05.11.19.58.38;	author uweigand;	state Exp;
branches;
next	1.910;

1.910
date	2007.05.11.19.55.19;	author uweigand;	state Exp;
branches;
next	1.909;

1.909
date	2007.05.08.23.18.22;	author uweigand;	state Exp;
branches;
next	1.908;

1.908
date	2007.05.07.11.49.04;	author drow;	state Exp;
branches;
next	1.907;

1.907
date	2007.05.07.00.21.02;	author uweigand;	state Exp;
branches;
next	1.906;

1.906
date	2007.05.06.14.32.30;	author uweigand;	state Exp;
branches;
next	1.905;

1.905
date	2007.05.06.14.29.58;	author uweigand;	state Exp;
branches;
next	1.904;

1.904
date	2007.05.06.14.29.15;	author uweigand;	state Exp;
branches;
next	1.903;

1.903
date	2007.05.06.14.12.12;	author uweigand;	state Exp;
branches;
next	1.902;

1.902
date	2007.04.29.19.44.22;	author uweigand;	state Exp;
branches;
next	1.901;

1.901
date	2007.04.28.16.47.00;	author uweigand;	state Exp;
branches;
next	1.900;

1.900
date	2007.04.27.15.39.49;	author macro;	state Exp;
branches;
next	1.899;

1.899
date	2007.04.27.13.22.18;	author uweigand;	state Exp;
branches;
next	1.898;

1.898
date	2007.04.27.13.20.59;	author uweigand;	state Exp;
branches;
next	1.897;

1.897
date	2007.04.26.00.13.12;	author uweigand;	state Exp;
branches;
next	1.896;

1.896
date	2007.04.25.22.22.11;	author uweigand;	state Exp;
branches;
next	1.895;

1.895
date	2007.04.25.22.17.47;	author uweigand;	state Exp;
branches;
next	1.894;

1.894
date	2007.04.25.22.10.07;	author uweigand;	state Exp;
branches;
next	1.893;

1.893
date	2007.04.20.12.13.52;	author shinwell;	state Exp;
branches;
next	1.892;

1.892
date	2007.04.13.14.17.46;	author drow;	state Exp;
branches;
next	1.891;

1.891
date	2007.04.10.11.58.15;	author drow;	state Exp;
branches;
next	1.890;

1.890
date	2007.03.30.22.50.32;	author palves;	state Exp;
branches
	1.890.2.1;
next	1.889;

1.889
date	2007.03.30.17.21.46;	author drow;	state Exp;
branches;
next	1.888;

1.888
date	2007.03.30.12.57.41;	author drow;	state Exp;
branches;
next	1.887;

1.887
date	2007.03.30.00.46.49;	author brobecke;	state Exp;
branches;
next	1.886;

1.886
date	2007.03.29.19.58.27;	author drow;	state Exp;
branches;
next	1.885;

1.885
date	2007.03.27.19.02.41;	author drow;	state Exp;
branches;
next	1.884;

1.884
date	2007.03.27.18.09.34;	author drow;	state Exp;
branches;
next	1.883;

1.883
date	2007.03.02.21.28.18;	author kettenis;	state Exp;
branches;
next	1.882;

1.882
date	2007.02.27.23.04.28;	author uweigand;	state Exp;
branches;
next	1.881;

1.881
date	2007.02.26.19.20.21;	author drow;	state Exp;
branches;
next	1.880;

1.880
date	2007.02.23.22.50.41;	author kevinb;	state Exp;
branches;
next	1.879;

1.879
date	2007.02.20.16.05.54;	author schwab;	state Exp;
branches;
next	1.878;

1.878
date	2007.02.20.12.45.06;	author drow;	state Exp;
branches;
next	1.877;

1.877
date	2007.02.16.21.49.59;	author drow;	state Exp;
branches;
next	1.876;

1.876
date	2007.02.08.21.00.28;	author drow;	state Exp;
branches;
next	1.875;

1.875
date	2007.02.08.10.39.19;	author kettenis;	state Exp;
branches;
next	1.874;

1.874
date	2007.02.07.22.48.05;	author drow;	state Exp;
branches;
next	1.873;

1.873
date	2007.01.09.22.55.09;	author drow;	state Exp;
branches;
next	1.872;

1.872
date	2007.01.09.17.58.49;	author drow;	state Exp;
branches;
next	1.871;

1.871
date	2007.01.08.03.14.18;	author brobecke;	state Exp;
branches;
next	1.870;

1.870
date	2007.01.04.22.11.44;	author drow;	state Exp;
branches;
next	1.869;

1.869
date	2007.01.04.21.59.10;	author drow;	state Exp;
branches;
next	1.868;

1.868
date	2007.01.04.19.16.51;	author vprus;	state Exp;
branches;
next	1.867;

1.867
date	2007.01.04.07.09.54;	author qinwei;	state Exp;
branches;
next	1.866;

1.866
date	2007.01.04.05.27.31;	author brobecke;	state Exp;
branches;
next	1.865;

1.865
date	2007.01.03.21.46.11;	author drow;	state Exp;
branches;
next	1.864;

1.864
date	2007.01.03.18.05.43;	author drow;	state Exp;
branches;
next	1.863;

1.863
date	2006.12.31.23.59.07;	author kettenis;	state Exp;
branches;
next	1.862;

1.862
date	2006.12.31.01.28.07;	author kettenis;	state Exp;
branches;
next	1.861;

1.861
date	2006.12.17.13.30.43;	author kettenis;	state Exp;
branches;
next	1.860;

1.860
date	2006.12.16.21.00.29;	author drow;	state Exp;
branches;
next	1.859;

1.859
date	2006.12.16.19.18.37;	author drow;	state Exp;
branches;
next	1.858;

1.858
date	2006.12.16.10.45.52;	author kettenis;	state Exp;
branches;
next	1.857;

1.857
date	2006.12.15.23.57.35;	author kettenis;	state Exp;
branches;
next	1.856;

1.856
date	2006.11.28.22.14.31;	author drow;	state Exp;
branches;
next	1.855;

1.855
date	2006.11.28.22.10.26;	author drow;	state Exp;
branches;
next	1.854;

1.854
date	2006.11.28.21.41.02;	author uweigand;	state Exp;
branches;
next	1.853;

1.853
date	2006.11.28.19.07.50;	author uweigand;	state Exp;
branches;
next	1.852;

1.852
date	2006.11.24.18.23.33;	author uweigand;	state Exp;
branches;
next	1.851;

1.851
date	2006.11.22.18.51.58;	author drow;	state Exp;
branches;
next	1.850;

1.850
date	2006.11.22.13.49.52;	author uweigand;	state Exp;
branches;
next	1.849;

1.849
date	2006.11.22.10.43.34;	author vprus;	state Exp;
branches;
next	1.848;

1.848
date	2006.11.14.21.53.59;	author drow;	state Exp;
branches
	1.848.2.1;
next	1.847;

1.847
date	2006.10.17.20.17.44;	author drow;	state Exp;
branches;
next	1.846;

1.846
date	2006.10.10.03.17.53;	author drow;	state Exp;
branches;
next	1.845;

1.845
date	2006.10.05.19.42.31;	author drow;	state Exp;
branches;
next	1.844;

1.844
date	2006.09.21.14.00.53;	author drow;	state Exp;
branches;
next	1.843;

1.843
date	2006.09.21.13.54.02;	author drow;	state Exp;
branches;
next	1.842;

1.842
date	2006.09.21.13.48.29;	author drow;	state Exp;
branches;
next	1.841;

1.841
date	2006.09.21.13.47.55;	author drow;	state Exp;
branches;
next	1.840;

1.840
date	2006.08.22.19.08.31;	author drow;	state Exp;
branches;
next	1.839;

1.839
date	2006.08.19.15.15.18;	author drow;	state Exp;
branches;
next	1.838;

1.838
date	2006.08.08.22.06.06;	author brobecke;	state Exp;
branches;
next	1.837;

1.837
date	2006.08.08.20.26.23;	author drow;	state Exp;
branches;
next	1.836;

1.836
date	2006.08.08.17.39.10;	author drow;	state Exp;
branches;
next	1.835;

1.835
date	2006.08.02.21.32.37;	author kettenis;	state Exp;
branches;
next	1.834;

1.834
date	2006.07.31.20.15.50;	author kettenis;	state Exp;
branches;
next	1.833;

1.833
date	2006.07.19.23.23.35;	author kettenis;	state Exp;
branches;
next	1.832;

1.832
date	2006.07.18.22.53.20;	author drow;	state Exp;
branches;
next	1.831;

1.831
date	2006.07.18.21.10.28;	author kettenis;	state Exp;
branches;
next	1.830;

1.830
date	2006.07.17.19.34.57;	author kettenis;	state Exp;
branches;
next	1.829;

1.829
date	2006.07.16.15.29.09;	author kettenis;	state Exp;
branches;
next	1.828;

1.828
date	2006.07.15.21.22.51;	author kettenis;	state Exp;
branches;
next	1.827;

1.827
date	2006.07.12.20.46.32;	author drow;	state Exp;
branches;
next	1.826;

1.826
date	2006.07.12.18.04.30;	author drow;	state Exp;
branches;
next	1.825;

1.825
date	2006.07.10.19.40.27;	author kettenis;	state Exp;
branches;
next	1.824;

1.824
date	2006.07.09.16.12.11;	author kettenis;	state Exp;
branches;
next	1.823;

1.823
date	2006.07.05.19.03.46;	author drow;	state Exp;
branches;
next	1.822;

1.822
date	2006.06.23.13.01.05;	author drow;	state Exp;
branches;
next	1.821;

1.821
date	2006.05.31.15.14.36;	author drow;	state Exp;
branches;
next	1.820;

1.820
date	2006.05.30.15.57.09;	author drow;	state Exp;
branches;
next	1.819;

1.819
date	2006.05.19.20.42.47;	author fnf;	state Exp;
branches;
next	1.818;

1.818
date	2006.05.17.14.53.02;	author drow;	state Exp;
branches;
next	1.817;

1.817
date	2006.05.17.14.40.39;	author drow;	state Exp;
branches;
next	1.816;

1.816
date	2006.05.15.21.53.20;	author kettenis;	state Exp;
branches;
next	1.815;

1.815
date	2006.05.15.17.11.58;	author drow;	state Exp;
branches;
next	1.814;

1.814
date	2006.05.15.16.53.38;	author drow;	state Exp;
branches;
next	1.813;

1.813
date	2006.05.12.20.53.15;	author kettenis;	state Exp;
branches;
next	1.812;

1.812
date	2006.05.05.22.39.12;	author davem;	state Exp;
branches
	1.812.2.1;
next	1.811;

1.811
date	2006.04.23.14.15.01;	author schwab;	state Exp;
branches;
next	1.810;

1.810
date	2006.04.20.23.18.48;	author msnyder;	state Exp;
branches;
next	1.809;

1.809
date	2006.04.09.08.22.42;	author davem;	state Exp;
branches;
next	1.808;

1.808
date	2006.04.09.00.26.08;	author uweigand;	state Exp;
branches;
next	1.807;

1.807
date	2006.04.08.23.40.03;	author jimb;	state Exp;
branches;
next	1.806;

1.806
date	2006.04.08.21.15.26;	author davem;	state Exp;
branches;
next	1.805;

1.805
date	2006.04.08.21.01.36;	author davem;	state Exp;
branches;
next	1.804;

1.804
date	2006.04.05.21.51.11;	author schwab;	state Exp;
branches;
next	1.803;

1.803
date	2006.04.05.20.27.08;	author davem;	state Exp;
branches;
next	1.802;

1.802
date	2006.04.04.22.14.52;	author davem;	state Exp;
branches;
next	1.801;

1.801
date	2006.04.04.17.06.36;	author schwab;	state Exp;
branches;
next	1.800;

1.800
date	2006.03.30.16.34.23;	author drow;	state Exp;
branches;
next	1.799;

1.799
date	2006.03.30.14.27.44;	author tausq;	state Exp;
branches;
next	1.798;

1.798
date	2006.03.29.22.58.53;	author drow;	state Exp;
branches
	1.798.2.1;
next	1.797;

1.797
date	2006.03.29.22.53.33;	author drow;	state Exp;
branches;
next	1.796;

1.796
date	2006.03.28.19.19.16;	author jimb;	state Exp;
branches;
next	1.795;

1.795
date	2006.03.24.23.08.16;	author drow;	state Exp;
branches;
next	1.794;

1.794
date	2006.03.24.22.44.05;	author drow;	state Exp;
branches;
next	1.793;

1.793
date	2006.03.15.23.38.09;	author kevinb;	state Exp;
branches;
next	1.792;

1.792
date	2006.03.15.17.13.36;	author drow;	state Exp;
branches;
next	1.791;

1.791
date	2006.03.15.16.37.52;	author drow;	state Exp;
branches;
next	1.790;

1.790
date	2006.03.15.16.08.23;	author drow;	state Exp;
branches;
next	1.789;

1.789
date	2006.02.28.22.38.03;	author kevinb;	state Exp;
branches
	1.789.2.1;
next	1.788;

1.788
date	2006.02.28.04.28.47;	author aoliva;	state Exp;
branches;
next	1.787;

1.787
date	2006.02.21.18.22.26;	author ams;	state Exp;
branches
	1.787.2.1;
next	1.786;

1.786
date	2006.02.10.22.01.43;	author drow;	state Exp;
branches;
next	1.785;

1.785
date	2006.02.10.21.53.50;	author drow;	state Exp;
branches;
next	1.784;

1.784
date	2006.02.10.20.56.14;	author brobecke;	state Exp;
branches;
next	1.783;

1.783
date	2006.02.02.02.26.48;	author drow;	state Exp;
branches;
next	1.782;

1.782
date	2006.02.02.02.04.28;	author drow;	state Exp;
branches;
next	1.781;

1.781
date	2006.02.01.23.14.09;	author drow;	state Exp;
branches;
next	1.780;

1.780
date	2006.01.24.22.34.34;	author drow;	state Exp;
branches;
next	1.779;

1.779
date	2006.01.24.22.09.28;	author drow;	state Exp;
branches;
next	1.778;

1.778
date	2006.01.23.17.35.22;	author ams;	state Exp;
branches;
next	1.777;

1.777
date	2006.01.21.01.29.03;	author mmitchel;	state Exp;
branches;
next	1.776;

1.776
date	2006.01.15.19.45.27;	author kettenis;	state Exp;
branches;
next	1.775;

1.775
date	2006.01.15.13.45.24;	author kettenis;	state Exp;
branches;
next	1.774;

1.774
date	2006.01.15.00.22.50;	author kettenis;	state Exp;
branches;
next	1.773;

1.773
date	2006.01.07.14.17.16;	author kettenis;	state Exp;
branches;
next	1.772;

1.772
date	2006.01.04.19.34.58;	author msnyder;	state Exp;
branches;
next	1.771;

1.771
date	2005.12.27.22.14.42;	author kettenis;	state Exp;
branches;
next	1.770;

1.770
date	2005.12.27.12.23.01;	author kettenis;	state Exp;
branches;
next	1.769;

1.769
date	2005.12.26.19.31.22;	author kettenis;	state Exp;
branches;
next	1.768;

1.768
date	2005.12.26.19.27.03;	author kettenis;	state Exp;
branches;
next	1.767;

1.767
date	2005.12.26.19.15.11;	author kettenis;	state Exp;
branches;
next	1.766;

1.766
date	2005.12.22.17.06.24;	author drow;	state Exp;
branches;
next	1.765;

1.765
date	2005.12.22.13.17.49;	author kettenis;	state Exp;
branches;
next	1.764;

1.764
date	2005.12.19.22.19.49;	author kettenis;	state Exp;
branches;
next	1.763;

1.763
date	2005.12.17.22.33.59;	author eliz;	state Exp;
branches;
next	1.762;

1.762
date	2005.12.04.20.19.25;	author kettenis;	state Exp;
branches;
next	1.761;

1.761
date	2005.11.15.12.03.07;	author ams;	state Exp;
branches
	1.761.2.1
	1.761.4.1;
next	1.760;

1.760
date	2005.11.07.15.27.06;	author ams;	state Exp;
branches;
next	1.759;

1.759
date	2005.11.07.15.12.48;	author ams;	state Exp;
branches;
next	1.758;

1.758
date	2005.10.31.23.35.52;	author kettenis;	state Exp;
branches
	1.758.2.1;
next	1.757;

1.757
date	2005.10.21.06.26.27;	author brobecke;	state Exp;
branches;
next	1.756;

1.756
date	2005.10.13.09.31.59;	author schwab;	state Exp;
branches
	1.756.2.1;
next	1.755;

1.755
date	2005.09.28.02.55.41;	author nickrob;	state Exp;
branches;
next	1.754;

1.754
date	2005.09.26.21.45.37;	author nickrob;	state Exp;
branches;
next	1.753;

1.753
date	2005.09.10.18.11.01;	author drow;	state Exp;
branches;
next	1.752;

1.752
date	2005.09.06.23.14.44;	author kevinb;	state Exp;
branches;
next	1.751;

1.751
date	2005.09.03.00.35.45;	author kevinb;	state Exp;
branches;
next	1.750;

1.750
date	2005.09.02.23.51.50;	author kevinb;	state Exp;
branches;
next	1.749;

1.749
date	2005.09.02.23.42.28;	author kevinb;	state Exp;
branches;
next	1.748;

1.748
date	2005.09.02.22.53.33;	author kevinb;	state Exp;
branches;
next	1.747;

1.747
date	2005.08.21.15.51.41;	author kettenis;	state Exp;
branches;
next	1.746;

1.746
date	2005.08.21.10.47.48;	author kettenis;	state Exp;
branches;
next	1.745;

1.745
date	2005.08.18.13.26.38;	author kettenis;	state Exp;
branches;
next	1.744;

1.744
date	2005.08.15.21.46.37;	author kevinb;	state Exp;
branches;
next	1.743;

1.743
date	2005.08.15.21.19.20;	author kettenis;	state Exp;
branches;
next	1.742;

1.742
date	2005.08.08.20.59.18;	author kettenis;	state Exp;
branches;
next	1.741;

1.741
date	2005.07.15.20.10.18;	author kettenis;	state Exp;
branches;
next	1.740;

1.740
date	2005.07.03.20.46.50;	author bje;	state Exp;
branches;
next	1.739;

1.739
date	2005.07.01.15.10.26;	author kettenis;	state Exp;
branches;
next	1.738;

1.738
date	2005.06.25.11.54.29;	author kettenis;	state Exp;
branches;
next	1.737;

1.737
date	2005.06.21.05.32.00;	author kettenis;	state Exp;
branches;
next	1.736;

1.736
date	2005.06.13.16.15.34;	author drow;	state Exp;
branches;
next	1.735;

1.735
date	2005.06.02.16.52.04;	author brobecke;	state Exp;
branches;
next	1.734;

1.734
date	2005.05.29.03.13.17;	author bobbybrasko;	state Exp;
branches;
next	1.733;

1.733
date	2005.05.22.20.36.18;	author kettenis;	state Exp;
branches;
next	1.732;

1.732
date	2005.05.18.08.52.17;	author corinna;	state Exp;
branches;
next	1.731;

1.731
date	2005.05.15.18.19.43;	author drow;	state Exp;
branches;
next	1.730;

1.730
date	2005.05.12.21.36.08;	author kettenis;	state Exp;
branches;
next	1.729;

1.729
date	2005.05.12.21.20.37;	author eliz;	state Exp;
branches;
next	1.728;

1.728
date	2005.05.12.20.21.18;	author kettenis;	state Exp;
branches;
next	1.727;

1.727
date	2005.05.12.16.01.08;	author drow;	state Exp;
branches;
next	1.726;

1.726
date	2005.05.02.12.05.11;	author kettenis;	state Exp;
branches;
next	1.725;

1.725
date	2005.05.01.16.04.23;	author kettenis;	state Exp;
branches;
next	1.724;

1.724
date	2005.04.29.14.21.21;	author corinna;	state Exp;
branches;
next	1.723;

1.723
date	2005.04.27.20.48.24;	author kettenis;	state Exp;
branches;
next	1.722;

1.722
date	2005.04.27.14.30.13;	author kettenis;	state Exp;
branches;
next	1.721;

1.721
date	2005.04.25.21.45.55;	author mmitchel;	state Exp;
branches;
next	1.720;

1.720
date	2005.04.23.20.20.16;	author kettenis;	state Exp;
branches;
next	1.719;

1.719
date	2005.04.22.19.59.07;	author kettenis;	state Exp;
branches;
next	1.718;

1.718
date	2005.04.21.22.04.03;	author davem;	state Exp;
branches;
next	1.717;

1.717
date	2005.04.21.19.38.19;	author davem;	state Exp;
branches;
next	1.716;

1.716
date	2005.04.17.22.20.19;	author kettenis;	state Exp;
branches;
next	1.715;

1.715
date	2005.04.17.10.24.14;	author kettenis;	state Exp;
branches;
next	1.714;

1.714
date	2005.04.16.22.12.08;	author kettenis;	state Exp;
branches;
next	1.713;

1.713
date	2005.04.16.21.37.02;	author kettenis;	state Exp;
branches;
next	1.712;

1.712
date	2005.04.15.08.01.13;	author corinna;	state Exp;
branches;
next	1.711;

1.711
date	2005.04.09.11.39.38;	author kettenis;	state Exp;
branches;
next	1.710;

1.710
date	2005.03.31.19.58.24;	author kevinb;	state Exp;
branches;
next	1.709;

1.709
date	2005.03.29.20.34.57;	author drow;	state Exp;
branches;
next	1.708;

1.708
date	2005.03.25.19.47.22;	author mmitchel;	state Exp;
branches;
next	1.707;

1.707
date	2005.03.18.21.03.38;	author kevinb;	state Exp;
branches
	1.707.2.1;
next	1.706;

1.706
date	2005.03.14.03.09.45;	author bje;	state Exp;
branches;
next	1.705;

1.705
date	2005.03.11.02.24.20;	author drow;	state Exp;
branches;
next	1.704;

1.704
date	2005.03.08.08.59.45;	author corinna;	state Exp;
branches;
next	1.703;

1.703
date	2005.03.08.04.34.44;	author brobecke;	state Exp;
branches;
next	1.702;

1.702
date	2005.03.06.21.29.10;	author kettenis;	state Exp;
branches;
next	1.701;

1.701
date	2005.03.05.14.36.10;	author kettenis;	state Exp;
branches;
next	1.700;

1.700
date	2005.03.04.17.52.52;	author drow;	state Exp;
branches;
next	1.699;

1.699
date	2005.02.16.13.21.47;	author kettenis;	state Exp;
branches;
next	1.698;

1.698
date	2005.02.10.18.15.40;	author drow;	state Exp;
branches;
next	1.697;

1.697
date	2005.02.09.00.04.27;	author cagney;	state Exp;
branches;
next	1.696;

1.696
date	2005.01.28.06.40.24;	author cagney;	state Exp;
branches;
next	1.695;

1.695
date	2005.01.28.06.16.47;	author cagney;	state Exp;
branches;
next	1.694;

1.694
date	2005.01.23.19.35.04;	author kettenis;	state Exp;
branches;
next	1.693;

1.693
date	2005.01.19.22.54.55;	author cagney;	state Exp;
branches;
next	1.692;

1.692
date	2005.01.16.21.53.34;	author kettenis;	state Exp;
branches;
next	1.691;

1.691
date	2005.01.16.21.20.04;	author cagney;	state Exp;
branches;
next	1.690;

1.690
date	2005.01.16.20.29.10;	author kettenis;	state Exp;
branches;
next	1.689;

1.689
date	2005.01.16.17.54.38;	author kettenis;	state Exp;
branches;
next	1.688;

1.688
date	2005.01.13.02.35.36;	author cagney;	state Exp;
branches;
next	1.687;

1.687
date	2005.01.12.21.54.12;	author kettenis;	state Exp;
branches;
next	1.686;

1.686
date	2005.01.12.18.31.28;	author cagney;	state Exp;
branches;
next	1.685;

1.685
date	2005.01.10.20.56.16;	author kettenis;	state Exp;
branches;
next	1.684;

1.684
date	2005.01.10.20.36.38;	author kettenis;	state Exp;
branches;
next	1.683;

1.683
date	2005.01.05.22.51.46;	author schwab;	state Exp;
branches;
next	1.682;

1.682
date	2005.01.05.17.01.57;	author kevinb;	state Exp;
branches;
next	1.681;

1.681
date	2005.01.04.22.59.44;	author kettenis;	state Exp;
branches;
next	1.680;

1.680
date	2004.12.18.17.36.32;	author kettenis;	state Exp;
branches;
next	1.679;

1.679
date	2004.12.18.14.21.07;	author kettenis;	state Exp;
branches;
next	1.678;

1.678
date	2004.12.13.04.06.15;	author tausq;	state Exp;
branches;
next	1.677;

1.677
date	2004.12.10.09.42.09;	author kettenis;	state Exp;
branches;
next	1.676;

1.676
date	2004.12.07.22.17.59;	author kettenis;	state Exp;
branches;
next	1.675;

1.675
date	2004.12.07.19.57.21;	author kettenis;	state Exp;
branches;
next	1.674;

1.674
date	2004.11.23.21.14.32;	author kettenis;	state Exp;
branches;
next	1.673;

1.673
date	2004.11.21.13.51.53;	author kettenis;	state Exp;
branches;
next	1.672;

1.672
date	2004.11.21.01.51.16;	author schwab;	state Exp;
branches;
next	1.671;

1.671
date	2004.11.20.17.23.56;	author kettenis;	state Exp;
branches;
next	1.670;

1.670
date	2004.11.20.10.20.33;	author kettenis;	state Exp;
branches;
next	1.669;

1.669
date	2004.11.14.19.29.46;	author drow;	state Exp;
branches;
next	1.668;

1.668
date	2004.11.14.18.53.32;	author drow;	state Exp;
branches;
next	1.667;

1.667
date	2004.11.14.18.47.49;	author drow;	state Exp;
branches;
next	1.666;

1.666
date	2004.11.14.03.57.03;	author cagney;	state Exp;
branches;
next	1.665;

1.665
date	2004.11.13.23.10.00;	author cagney;	state Exp;
branches;
next	1.664;

1.664
date	2004.11.12.16.07.19;	author kettenis;	state Exp;
branches;
next	1.663;

1.663
date	2004.11.12.01.00.41;	author ksakamot;	state Exp;
branches;
next	1.662;

1.662
date	2004.11.09.20.41.57;	author cagney;	state Exp;
branches;
next	1.661;

1.661
date	2004.11.09.14.28.41;	author cagney;	state Exp;
branches;
next	1.660;

1.660
date	2004.11.08.20.42.53;	author kettenis;	state Exp;
branches;
next	1.659;

1.659
date	2004.11.07.21.33.29;	author drow;	state Exp;
branches;
next	1.658;

1.658
date	2004.11.07.20.20.32;	author kettenis;	state Exp;
branches;
next	1.657;

1.657
date	2004.11.07.17.08.34;	author kettenis;	state Exp;
branches;
next	1.656;

1.656
date	2004.11.07.17.02.43;	author kettenis;	state Exp;
branches;
next	1.655;

1.655
date	2004.11.06.17.18.10;	author brobecke;	state Exp;
branches;
next	1.654;

1.654
date	2004.11.04.02.15.19;	author ksakamot;	state Exp;
branches;
next	1.653;

1.653
date	2004.11.01.21.05.46;	author jsm28;	state Exp;
branches;
next	1.652;

1.652
date	2004.10.31.20.47.55;	author kettenis;	state Exp;
branches;
next	1.651;

1.651
date	2004.10.31.20.37.00;	author kettenis;	state Exp;
branches;
next	1.650;

1.650
date	2004.10.31.04.33.13;	author cagney;	state Exp;
branches;
next	1.649;

1.649
date	2004.10.31.03.42.51;	author cagney;	state Exp;
branches;
next	1.648;

1.648
date	2004.10.30.21.40.48;	author kettenis;	state Exp;
branches;
next	1.647;

1.647
date	2004.10.30.20.26.24;	author cagney;	state Exp;
branches;
next	1.646;

1.646
date	2004.10.30.19.49.37;	author kettenis;	state Exp;
branches;
next	1.645;

1.645
date	2004.10.30.14.31.19;	author kettenis;	state Exp;
branches;
next	1.644;

1.644
date	2004.10.29.20.49.14;	author kettenis;	state Exp;
branches;
next	1.643;

1.643
date	2004.10.15.16.17.34;	author chastain;	state Exp;
branches
	1.643.2.1;
next	1.642;

1.642
date	2004.10.15.13.29.31;	author cagney;	state Exp;
branches;
next	1.641;

1.641
date	2004.10.12.22.18.54;	author kettenis;	state Exp;
branches;
next	1.640;

1.640
date	2004.10.11.20.03.55;	author kettenis;	state Exp;
branches;
next	1.639;

1.639
date	2004.10.10.19.50.59;	author kettenis;	state Exp;
branches;
next	1.638;

1.638
date	2004.10.06.09.28.55;	author hilfingr;	state Exp;
branches;
next	1.637;

1.637
date	2004.10.03.08.35.57;	author hilfingr;	state Exp;
branches;
next	1.636;

1.636
date	2004.10.02.09.55.14;	author hilfingr;	state Exp;
branches;
next	1.635;

1.635
date	2004.10.01.17.26.09;	author cagney;	state Exp;
branches;
next	1.634;

1.634
date	2004.10.01.07.29.33;	author ksakamot;	state Exp;
branches;
next	1.633;

1.633
date	2004.09.30.21.04.35;	author kettenis;	state Exp;
branches;
next	1.632;

1.632
date	2004.09.30.20.52.59;	author kettenis;	state Exp;
branches;
next	1.631;

1.631
date	2004.09.28.19.00.52;	author cagney;	state Exp;
branches;
next	1.630;

1.630
date	2004.09.28.17.29.03;	author cagney;	state Exp;
branches;
next	1.629;

1.629
date	2004.09.27.19.55.16;	author cagney;	state Exp;
branches;
next	1.628;

1.628
date	2004.09.26.18.42.29;	author kettenis;	state Exp;
branches;
next	1.627;

1.627
date	2004.09.24.18.17.58;	author hilfingr;	state Exp;
branches;
next	1.626;

1.626
date	2004.09.24.09.50.27;	author hilfingr;	state Exp;
branches;
next	1.625;

1.625
date	2004.09.20.22.26.18;	author drow;	state Exp;
branches;
next	1.624;

1.624
date	2004.09.19.20.49.26;	author kettenis;	state Exp;
branches;
next	1.623;

1.623
date	2004.09.19.17.21.28;	author kettenis;	state Exp;
branches;
next	1.622;

1.622
date	2004.09.19.15.37.55;	author kettenis;	state Exp;
branches;
next	1.621;

1.621
date	2004.09.16.19.54.17;	author cagney;	state Exp;
branches;
next	1.620;

1.620
date	2004.09.16.18.12.31;	author cagney;	state Exp;
branches;
next	1.619;

1.619
date	2004.09.13.20.55.36;	author cagney;	state Exp;
branches;
next	1.618;

1.618
date	2004.09.12.16.13.03;	author cagney;	state Exp;
branches;
next	1.617;

1.617
date	2004.09.12.13.04.37;	author cagney;	state Exp;
branches;
next	1.616;

1.616
date	2004.09.11.15.04.15;	author cagney;	state Exp;
branches;
next	1.615;

1.615
date	2004.09.08.21.58.18;	author jimb;	state Exp;
branches;
next	1.614;

1.614
date	2004.09.08.14.24.07;	author kettenis;	state Exp;
branches;
next	1.613;

1.613
date	2004.09.01.18.00.27;	author jjohnstn;	state Exp;
branches;
next	1.612;

1.612
date	2004.09.01.14.13.27;	author cagney;	state Exp;
branches;
next	1.611;

1.611
date	2004.08.22.19.03.41;	author kettenis;	state Exp;
branches;
next	1.610;

1.610
date	2004.08.22.15.35.02;	author kettenis;	state Exp;
branches;
next	1.609;

1.609
date	2004.08.21.08.56.38;	author kettenis;	state Exp;
branches;
next	1.608;

1.608
date	2004.08.14.20.40.14;	author kettenis;	state Exp;
branches;
next	1.607;

1.607
date	2004.08.08.19.27.09;	author nathanw;	state Exp;
branches;
next	1.606;

1.606
date	2004.08.06.19.14.44;	author kettenis;	state Exp;
branches;
next	1.605;

1.605
date	2004.08.05.14.34.16;	author cagney;	state Exp;
branches;
next	1.604;

1.604
date	2004.08.04.20.43.14;	author kettenis;	state Exp;
branches;
next	1.603;

1.603
date	2004.08.04.17.39.22;	author cagney;	state Exp;
branches;
next	1.602;

1.602
date	2004.08.04.17.17.54;	author jimb;	state Exp;
branches;
next	1.601;

1.601
date	2004.08.04.17.04.35;	author jimb;	state Exp;
branches;
next	1.600;

1.600
date	2004.08.02.17.39.53;	author cagney;	state Exp;
branches;
next	1.599;

1.599
date	2004.07.31.19.36.32;	author kettenis;	state Exp;
branches;
next	1.598;

1.598
date	2004.07.30.14.30.06;	author cagney;	state Exp;
branches;
next	1.597;

1.597
date	2004.07.29.15.13.05;	author cagney;	state Exp;
branches;
next	1.596;

1.596
date	2004.07.23.10.33.36;	author kettenis;	state Exp;
branches;
next	1.595;

1.595
date	2004.07.17.11.03.46;	author kettenis;	state Exp;
branches;
next	1.594;

1.594
date	2004.07.03.15.14.47;	author kettenis;	state Exp;
branches
	1.594.4.1;
next	1.593;

1.593
date	2004.07.03.13.11.39;	author kettenis;	state Exp;
branches;
next	1.592;

1.592
date	2004.06.29.17.19.46;	author jimb;	state Exp;
branches;
next	1.591;

1.591
date	2004.06.27.16.22.42;	author kettenis;	state Exp;
branches;
next	1.590;

1.590
date	2004.06.26.11.47.53;	author kettenis;	state Exp;
branches;
next	1.589;

1.589
date	2004.06.26.10.06.34;	author kettenis;	state Exp;
branches;
next	1.588;

1.588
date	2004.06.20.18.10.13;	author cagney;	state Exp;
branches;
next	1.587;

1.587
date	2004.06.14.20.40.39;	author tausq;	state Exp;
branches;
next	1.586;

1.586
date	2004.06.08.05.32.51;	author aoliva;	state Exp;
branches;
next	1.585;

1.585
date	2004.06.07.02.08.06;	author tausq;	state Exp;
branches;
next	1.584;

1.584
date	2004.06.07.02.02.44;	author tausq;	state Exp;
branches;
next	1.583;

1.583
date	2004.05.31.10.01.18;	author kettenis;	state Exp;
branches;
next	1.582;

1.582
date	2004.05.30.18.29.10;	author kettenis;	state Exp;
branches;
next	1.581;

1.581
date	2004.05.26.05.31.39;	author tausq;	state Exp;
branches;
next	1.580;

1.580
date	2004.05.25.21.55.43;	author cagney;	state Exp;
branches;
next	1.579;

1.579
date	2004.05.25.16.04.05;	author cagney;	state Exp;
branches;
next	1.578;

1.578
date	2004.05.24.21.00.08;	author kettenis;	state Exp;
branches;
next	1.577;

1.577
date	2004.05.22.23.03.54;	author kettenis;	state Exp;
branches;
next	1.576;

1.576
date	2004.05.22.22.42.53;	author kettenis;	state Exp;
branches;
next	1.575;

1.575
date	2004.05.22.22.34.42;	author kettenis;	state Exp;
branches;
next	1.574;

1.574
date	2004.05.22.17.21.35;	author kettenis;	state Exp;
branches;
next	1.573;

1.573
date	2004.05.20.00.53.05;	author jimb;	state Exp;
branches;
next	1.572;

1.572
date	2004.05.17.15.16.39;	author tausq;	state Exp;
branches;
next	1.571;

1.571
date	2004.05.13.22.26.38;	author brobecke;	state Exp;
branches;
next	1.570;

1.570
date	2004.05.11.16.16.29;	author cagney;	state Exp;
branches;
next	1.569;

1.569
date	2004.05.11.04.55.31;	author jimb;	state Exp;
branches;
next	1.568;

1.568
date	2004.05.10.18.58.44;	author jimb;	state Exp;
branches;
next	1.567;

1.567
date	2004.05.10.17.07.02;	author jimb;	state Exp;
branches;
next	1.566;

1.566
date	2004.05.08.22.52.43;	author kettenis;	state Exp;
branches;
next	1.565;

1.565
date	2004.05.08.17.33.23;	author kettenis;	state Exp;
branches;
next	1.564;

1.564
date	2004.05.08.16.10.07;	author kettenis;	state Exp;
branches;
next	1.563;

1.563
date	2004.05.08.03.27.24;	author tausq;	state Exp;
branches;
next	1.562;

1.562
date	2004.05.07.22.51.52;	author cagney;	state Exp;
branches;
next	1.561;

1.561
date	2004.05.07.05.48.48;	author tausq;	state Exp;
branches;
next	1.560;

1.560
date	2004.05.04.23.47.15;	author kettenis;	state Exp;
branches;
next	1.559;

1.559
date	2004.05.03.22.12.29;	author kettenis;	state Exp;
branches;
next	1.558;

1.558
date	2004.05.03.22.06.13;	author kettenis;	state Exp;
branches;
next	1.557;

1.557
date	2004.05.03.21.56.09;	author kettenis;	state Exp;
branches;
next	1.556;

1.556
date	2004.05.02.10.14.01;	author jimb;	state Exp;
branches;
next	1.555;

1.555
date	2004.05.01.16.28.11;	author cagney;	state Exp;
branches;
next	1.554;

1.554
date	2004.05.01.15.10.15;	author cagney;	state Exp;
branches;
next	1.553;

1.553
date	2004.05.01.14.00.57;	author cagney;	state Exp;
branches;
next	1.552;

1.552
date	2004.04.30.23.28.51;	author kettenis;	state Exp;
branches;
next	1.551;

1.551
date	2004.04.26.09.49.35;	author orjanf;	state Exp;
branches;
next	1.550;

1.550
date	2004.04.25.14.36.15;	author kettenis;	state Exp;
branches;
next	1.549;

1.549
date	2004.04.24.18.44.28;	author chastain;	state Exp;
branches;
next	1.548;

1.548
date	2004.04.22.21.13.06;	author kettenis;	state Exp;
branches;
next	1.547;

1.547
date	2004.04.21.23.27.02;	author cagney;	state Exp;
branches;
next	1.546;

1.546
date	2004.04.18.16.50.29;	author kettenis;	state Exp;
branches;
next	1.545;

1.545
date	2004.04.17.17.41.10;	author tausq;	state Exp;
branches;
next	1.544;

1.544
date	2004.04.17.17.19.27;	author tausq;	state Exp;
branches;
next	1.543;

1.543
date	2004.04.16.15.18.23;	author drow;	state Exp;
branches;
next	1.542;

1.542
date	2004.04.15.15.03.30;	author kettenis;	state Exp;
branches;
next	1.541;

1.541
date	2004.04.15.14.29.20;	author cagney;	state Exp;
branches;
next	1.540;

1.540
date	2004.04.14.18.02.43;	author kettenis;	state Exp;
branches;
next	1.539;

1.539
date	2004.04.14.17.52.01;	author kettenis;	state Exp;
branches;
next	1.538;

1.538
date	2004.04.12.19.49.48;	author kettenis;	state Exp;
branches;
next	1.537;

1.537
date	2004.04.09.23.15.53;	author kettenis;	state Exp;
branches;
next	1.536;

1.536
date	2004.04.09.23.09.03;	author kettenis;	state Exp;
branches;
next	1.535;

1.535
date	2004.04.09.16.28.49;	author kettenis;	state Exp;
branches;
next	1.534;

1.534
date	2004.04.07.00.04.28;	author kettenis;	state Exp;
branches;
next	1.533;

1.533
date	2004.04.06.18.29.06;	author cagney;	state Exp;
branches;
next	1.532;

1.532
date	2004.04.06.17.55.58;	author cagney;	state Exp;
branches;
next	1.531;

1.531
date	2004.03.29.18.07.13;	author drow;	state Exp;
branches;
next	1.530;

1.530
date	2004.03.25.01.27.26;	author drow;	state Exp;
branches;
next	1.529;

1.529
date	2004.03.23.14.12.30;	author cagney;	state Exp;
branches
	1.529.2.1;
next	1.528;

1.528
date	2004.03.23.13.58.03;	author cagney;	state Exp;
branches;
next	1.527;

1.527
date	2004.03.23.13.49.49;	author cagney;	state Exp;
branches;
next	1.526;

1.526
date	2004.03.21.22.34.11;	author nathanw;	state Exp;
branches;
next	1.525;

1.525
date	2004.03.18.16.21.59;	author cagney;	state Exp;
branches;
next	1.524;

1.524
date	2004.03.15.23.08.28;	author cagney;	state Exp;
branches;
next	1.523;

1.523
date	2004.03.15.19.42.24;	author kevinb;	state Exp;
branches;
next	1.522;

1.522
date	2004.03.14.22.39.26;	author kettenis;	state Exp;
branches;
next	1.521;

1.521
date	2004.03.13.00.50.52;	author kevinb;	state Exp;
branches;
next	1.520;

1.520
date	2004.03.13.00.36.53;	author kevinb;	state Exp;
branches;
next	1.519;

1.519
date	2004.03.13.00.16.23;	author kevinb;	state Exp;
branches;
next	1.518;

1.518
date	2004.02.28.18.04.36;	author cagney;	state Exp;
branches
	1.518.4.1;
next	1.517;

1.517
date	2004.02.26.23.48.01;	author cagney;	state Exp;
branches;
next	1.516;

1.516
date	2004.02.25.20.45.30;	author kettenis;	state Exp;
branches;
next	1.515;

1.515
date	2004.02.22.17.34.17;	author cagney;	state Exp;
branches;
next	1.514;

1.514
date	2004.02.22.16.48.23;	author kettenis;	state Exp;
branches;
next	1.513;

1.513
date	2004.02.22.11.19.13;	author kettenis;	state Exp;
branches;
next	1.512;

1.512
date	2004.02.21.19.11.37;	author kettenis;	state Exp;
branches
	1.512.2.1;
next	1.511;

1.511
date	2004.02.20.19.03.13;	author kettenis;	state Exp;
branches;
next	1.510;

1.510
date	2004.02.18.19.01.33;	author cagney;	state Exp;
branches;
next	1.509;

1.509
date	2004.02.18.17.44.51;	author kettenis;	state Exp;
branches;
next	1.508;

1.508
date	2004.02.18.17.16.46;	author kettenis;	state Exp;
branches;
next	1.507;

1.507
date	2004.02.18.04.17.34;	author jimb;	state Exp;
branches;
next	1.506;

1.506
date	2004.02.18.04.07.48;	author jimb;	state Exp;
branches;
next	1.505;

1.505
date	2004.02.18.03.42.50;	author jimb;	state Exp;
branches;
next	1.504;

1.504
date	2004.02.18.00.21.00;	author ezannoni;	state Exp;
branches;
next	1.503;

1.503
date	2004.02.17.16.23.22;	author cagney;	state Exp;
branches;
next	1.502;

1.502
date	2004.02.17.15.21.21;	author cagney;	state Exp;
branches;
next	1.501;

1.501
date	2004.02.16.21.05.08;	author cagney;	state Exp;
branches;
next	1.500;

1.500
date	2004.02.16.20.49.51;	author drow;	state Exp;
branches;
next	1.499;

1.499
date	2004.02.15.15.03.01;	author cagney;	state Exp;
branches;
next	1.498;

1.498
date	2004.02.15.14.49.23;	author cagney;	state Exp;
branches;
next	1.497;

1.497
date	2004.02.14.15.46.32;	author ezannoni;	state Exp;
branches;
next	1.496;

1.496
date	2004.02.11.18.47.26;	author drow;	state Exp;
branches;
next	1.495;

1.495
date	2004.02.10.22.15.40;	author cagney;	state Exp;
branches;
next	1.494;

1.494
date	2004.02.10.19.08.11;	author cagney;	state Exp;
branches;
next	1.493;

1.493
date	2004.02.10.16.43.58;	author cagney;	state Exp;
branches;
next	1.492;

1.492
date	2004.02.09.05.29.53;	author cagney;	state Exp;
branches;
next	1.491;

1.491
date	2004.02.08.21.42.06;	author cagney;	state Exp;
branches;
next	1.490;

1.490
date	2004.02.08.13.47.01;	author cagney;	state Exp;
branches;
next	1.489;

1.489
date	2004.02.08.04.46.13;	author cagney;	state Exp;
branches;
next	1.488;

1.488
date	2004.02.08.04.25.06;	author cagney;	state Exp;
branches;
next	1.487;

1.487
date	2004.02.04.21.49.55;	author kettenis;	state Exp;
branches;
next	1.486;

1.486
date	2004.02.02.03.12.32;	author drow;	state Exp;
branches;
next	1.485;

1.485
date	2004.02.01.22.35.08;	author roland;	state Exp;
branches;
next	1.484;

1.484
date	2004.02.01.05.50.53;	author drow;	state Exp;
branches;
next	1.483;

1.483
date	2004.01.29.21.54.22;	author roland;	state Exp;
branches;
next	1.482;

1.482
date	2004.01.25.11.46.44;	author kettenis;	state Exp;
branches;
next	1.481;

1.481
date	2004.01.24.22.18.21;	author kettenis;	state Exp;
branches;
next	1.480;

1.480
date	2004.01.23.23.03.28;	author carlton;	state Exp;
branches;
next	1.479;

1.479
date	2004.01.20.09.29.12;	author chastain;	state Exp;
branches;
next	1.478;

1.478
date	2004.01.19.04.31.49;	author cagney;	state Exp;
branches;
next	1.477;

1.477
date	2004.01.19.03.51.12;	author cagney;	state Exp;
branches;
next	1.476;

1.476
date	2004.01.18.14.47.56;	author kettenis;	state Exp;
branches;
next	1.475;

1.475
date	2004.01.03.10.08.44;	author kettenis;	state Exp;
branches;
next	1.474;

1.474
date	2003.12.18.18.22.33;	author chastain;	state Exp;
branches;
next	1.473;

1.473
date	2003.11.25.16.01.36;	author cagney;	state Exp;
branches;
next	1.472;

1.472
date	2003.11.23.23.13.00;	author cagney;	state Exp;
branches;
next	1.471;

1.471
date	2003.11.16.19.24.04;	author cagney;	state Exp;
branches;
next	1.470;

1.470
date	2003.11.14.21.17.51;	author jjohnstn;	state Exp;
branches;
next	1.469;

1.469
date	2003.11.09.17.28.07;	author kettenis;	state Exp;
branches;
next	1.468;

1.468
date	2003.11.03.17.03.11;	author cagney;	state Exp;
branches;
next	1.467;

1.467
date	2003.11.01.01.42.48;	author kevinb;	state Exp;
branches;
next	1.466;

1.466
date	2003.10.31.21.13.45;	author cagney;	state Exp;
branches;
next	1.465;

1.465
date	2003.10.31.19.19.51;	author cagney;	state Exp;
branches;
next	1.464;

1.464
date	2003.10.31.16.37.03;	author cagney;	state Exp;
branches;
next	1.463;

1.463
date	2003.10.24.20.24.05;	author cagney;	state Exp;
branches;
next	1.462;

1.462
date	2003.10.23.22.36.14;	author cagney;	state Exp;
branches;
next	1.461;

1.461
date	2003.10.23.03.01.54;	author cagney;	state Exp;
branches;
next	1.460;

1.460
date	2003.10.23.00.13.53;	author cagney;	state Exp;
branches;
next	1.459;

1.459
date	2003.10.22.23.54.10;	author cagney;	state Exp;
branches;
next	1.458;

1.458
date	2003.10.18.18.41.22;	author kettenis;	state Exp;
branches;
next	1.457;

1.457
date	2003.10.16.02.36.39;	author ksakamot;	state Exp;
branches;
next	1.456;

1.456
date	2003.10.11.15.22.39;	author kettenis;	state Exp;
branches;
next	1.455;

1.455
date	2003.10.10.18.29.13;	author cagney;	state Exp;
branches;
next	1.454;

1.454
date	2003.10.08.02.41.49;	author ksakamot;	state Exp;
branches;
next	1.453;

1.453
date	2003.10.06.22.41.17;	author brobecke;	state Exp;
branches;
next	1.452;

1.452
date	2003.10.06.21.56.40;	author cagney;	state Exp;
branches;
next	1.451;

1.451
date	2003.10.06.20.43.39;	author cagney;	state Exp;
branches;
next	1.450;

1.450
date	2003.09.26.14.36.56;	author kettenis;	state Exp;
branches;
next	1.449;

1.449
date	2003.09.25.16.39.38;	author carlton;	state Exp;
branches;
next	1.448;

1.448
date	2003.09.25.16.12.32;	author drow;	state Exp;
branches;
next	1.447;

1.447
date	2003.09.25.09.10.29;	author schwab;	state Exp;
branches;
next	1.446;

1.446
date	2003.09.25.08.40.45;	author hilfingr;	state Exp;
branches;
next	1.445;

1.445
date	2003.09.17.21.34.29;	author jimb;	state Exp;
branches
	1.445.2.1;
next	1.444;

1.444
date	2003.09.13.11.44.21;	author kettenis;	state Exp;
branches
	1.444.2.1;
next	1.443;

1.443
date	2003.09.11.19.49.16;	author carlton;	state Exp;
branches;
next	1.442;

1.442
date	2003.09.11.02.00.50;	author brobecke;	state Exp;
branches;
next	1.441;

1.441
date	2003.09.10.07.32.47;	author kevinb;	state Exp;
branches;
next	1.440;

1.440
date	2003.09.09.04.41.31;	author cagney;	state Exp;
branches;
next	1.439;

1.439
date	2003.09.08.23.01.28;	author kevinb;	state Exp;
branches;
next	1.438;

1.438
date	2003.09.08.19.22.30;	author jimb;	state Exp;
branches;
next	1.437;

1.437
date	2003.09.08.11.26.20;	author corinna;	state Exp;
branches;
next	1.436;

1.436
date	2003.09.04.16.48.42;	author cagney;	state Exp;
branches;
next	1.435;

1.435
date	2003.09.03.20.46.01;	author drow;	state Exp;
branches;
next	1.434;

1.434
date	2003.09.01.02.11.06;	author chastain;	state Exp;
branches;
next	1.433;

1.433
date	2003.08.28.03.03.44;	author cagney;	state Exp;
branches;
next	1.432;

1.432
date	2003.08.28.00.49.31;	author cagney;	state Exp;
branches;
next	1.431;

1.431
date	2003.08.20.20.22.41;	author kevinb;	state Exp;
branches;
next	1.430;

1.430
date	2003.08.17.18.22.25;	author drow;	state Exp;
branches;
next	1.429;

1.429
date	2003.08.16.17.49.12;	author cagney;	state Exp;
branches;
next	1.428;

1.428
date	2003.08.16.17.44.51;	author cagney;	state Exp;
branches;
next	1.427;

1.427
date	2003.08.15.23.02.04;	author brobecke;	state Exp;
branches;
next	1.426;

1.426
date	2003.08.12.19.34.20;	author cagney;	state Exp;
branches;
next	1.425;

1.425
date	2003.08.10.19.58.21;	author cagney;	state Exp;
branches;
next	1.424;

1.424
date	2003.08.08.17.30.35;	author hjl;	state Exp;
branches;
next	1.423;

1.423
date	2003.08.04.19.28.05;	author drow;	state Exp;
branches;
next	1.422;

1.422
date	2003.08.02.20.11.48;	author cagney;	state Exp;
branches;
next	1.421;

1.421
date	2003.07.22.15.41.59;	author ezannoni;	state Exp;
branches;
next	1.420;

1.420
date	2003.07.17.12.49.52;	author ezannoni;	state Exp;
branches;
next	1.419;

1.419
date	2003.07.13.16.15.59;	author kettenis;	state Exp;
branches;
next	1.418;

1.418
date	2003.07.11.17.53.20;	author troth;	state Exp;
branches;
next	1.417;

1.417
date	2003.07.11.16.22.17;	author rth;	state Exp;
branches;
next	1.416;

1.416
date	2003.07.08.20.18.41;	author cagney;	state Exp;
branches;
next	1.415;

1.415
date	2003.07.07.15.56.03;	author drow;	state Exp;
branches;
next	1.414;

1.414
date	2003.07.07.15.06.11;	author schwab;	state Exp;
branches;
next	1.413;

1.413
date	2003.07.07.14.36.57;	author cagney;	state Exp;
branches;
next	1.412;

1.412
date	2003.06.30.16.21.15;	author carlton;	state Exp;
branches;
next	1.411;

1.411
date	2003.06.28.16.19.05;	author drow;	state Exp;
branches;
next	1.410;

1.410
date	2003.06.21.23.14.43;	author cagney;	state Exp;
branches
	1.410.2.1;
next	1.409;

1.409
date	2003.06.21.18.38.27;	author drow;	state Exp;
branches;
next	1.408;

1.408
date	2003.06.19.22.52.03;	author msnyder;	state Exp;
branches;
next	1.407;

1.407
date	2003.06.15.20.56.46;	author drow;	state Exp;
branches;
next	1.406;

1.406
date	2003.06.15.00.27.54;	author cagney;	state Exp;
branches;
next	1.405;

1.405
date	2003.06.14.23.43.15;	author cagney;	state Exp;
branches;
next	1.404;

1.404
date	2003.06.14.16.18.32;	author drow;	state Exp;
branches;
next	1.403;

1.403
date	2003.06.13.15.28.29;	author rearnsha;	state Exp;
branches;
next	1.402;

1.402
date	2003.06.12.18.01.28;	author cagney;	state Exp;
branches;
next	1.401;

1.401
date	2003.06.12.15.44.22;	author schwab;	state Exp;
branches;
next	1.400;

1.400
date	2003.06.12.15.33.44;	author carlton;	state Exp;
branches;
next	1.399;

1.399
date	2003.06.11.23.29.45;	author carlton;	state Exp;
branches;
next	1.398;

1.398
date	2003.06.11.13.50.11;	author cagney;	state Exp;
branches;
next	1.397;

1.397
date	2003.06.10.19.29.57;	author cagney;	state Exp;
branches;
next	1.396;

1.396
date	2003.06.10.14.37.02;	author corinna;	state Exp;
branches;
next	1.395;

1.395
date	2003.06.09.15.20.20;	author cagney;	state Exp;
branches;
next	1.394;

1.394
date	2003.06.08.18.27.11;	author cagney;	state Exp;
branches;
next	1.393;

1.393
date	2003.06.08.16.09.44;	author cagney;	state Exp;
branches;
next	1.392;

1.392
date	2003.06.07.18.08.23;	author cagney;	state Exp;
branches;
next	1.391;

1.391
date	2003.06.05.20.59.15;	author cagney;	state Exp;
branches
	1.391.2.1;
next	1.390;

1.390
date	2003.06.04.06.22.16;	author rth;	state Exp;
branches;
next	1.389;

1.389
date	2003.06.03.23.49.32;	author brobecke;	state Exp;
branches;
next	1.388;

1.388
date	2003.06.02.04.34.37;	author rth;	state Exp;
branches;
next	1.387;

1.387
date	2003.05.31.21.13.20;	author kettenis;	state Exp;
branches;
next	1.386;

1.386
date	2003.05.31.19.18.04;	author kettenis;	state Exp;
branches;
next	1.385;

1.385
date	2003.05.31.08.15.38;	author kettenis;	state Exp;
branches;
next	1.384;

1.384
date	2003.05.30.19.24.28;	author kettenis;	state Exp;
branches;
next	1.383;

1.383
date	2003.05.25.18.50.54;	author schwab;	state Exp;
branches;
next	1.382;

1.382
date	2003.05.23.16.02.30;	author cagney;	state Exp;
branches;
next	1.381;

1.381
date	2003.05.20.23.44.22;	author schwab;	state Exp;
branches
	1.381.2.1;
next	1.380;

1.380
date	2003.05.20.03.56.27;	author carlton;	state Exp;
branches;
next	1.379;

1.379
date	2003.05.20.01.55.17;	author carlton;	state Exp;
branches;
next	1.378;

1.378
date	2003.05.18.21.10.10;	author schwab;	state Exp;
branches;
next	1.377;

1.377
date	2003.05.15.22.18.42;	author cagney;	state Exp;
branches;
next	1.376;

1.376
date	2003.05.14.16.14.25;	author ian;	state Exp;
branches;
next	1.375;

1.375
date	2003.05.12.00.26.18;	author cagney;	state Exp;
branches;
next	1.374;

1.374
date	2003.05.05.18.33.10;	author cagney;	state Exp;
branches;
next	1.373;

1.373
date	2003.05.04.03.55.34;	author brobecke;	state Exp;
branches;
next	1.372;

1.372
date	2003.05.03.19.13.03;	author cagney;	state Exp;
branches;
next	1.371;

1.371
date	2003.04.30.22.01.36;	author cagney;	state Exp;
branches;
next	1.370;

1.370
date	2003.04.30.01.27.53;	author fedor;	state Exp;
branches;
next	1.369;

1.369
date	2003.04.29.02.34.24;	author fedor;	state Exp;
branches;
next	1.368;

1.368
date	2003.04.27.03.23.37;	author fedor;	state Exp;
branches;
next	1.367;

1.367
date	2003.04.26.01.57.28;	author fedor;	state Exp;
branches;
next	1.366;

1.366
date	2003.04.25.03.30.16;	author fedor;	state Exp;
branches;
next	1.365;

1.365
date	2003.04.21.16.48.36;	author cagney;	state Exp;
branches;
next	1.364;

1.364
date	2003.04.15.23.07.11;	author carlton;	state Exp;
branches
	1.364.2.1;
next	1.363;

1.363
date	2003.04.14.18.42.26;	author jimb;	state Exp;
branches;
next	1.362;

1.362
date	2003.04.12.00.31.28;	author aoliva;	state Exp;
branches;
next	1.361;

1.361
date	2003.04.10.13.15.50;	author corinna;	state Exp;
branches;
next	1.360;

1.360
date	2003.04.06.01.13.58;	author cagney;	state Exp;
branches;
next	1.359;

1.359
date	2003.04.05.03.55.59;	author cagney;	state Exp;
branches;
next	1.358;

1.358
date	2003.04.02.22.10.35;	author bobbybrasko;	state Exp;
branches
	1.358.2.1;
next	1.357;

1.357
date	2003.04.02.03.02.46;	author fedor;	state Exp;
branches;
next	1.356;

1.356
date	2003.04.01.19.55.02;	author cagney;	state Exp;
branches;
next	1.355;

1.355
date	2003.04.01.19.11.00;	author cagney;	state Exp;
branches;
next	1.354;

1.354
date	2003.03.30.14.52.41;	author cagney;	state Exp;
branches;
next	1.353;

1.353
date	2003.03.29.23.29.46;	author cagney;	state Exp;
branches;
next	1.352;

1.352
date	2003.03.29.01.40.00;	author cagney;	state Exp;
branches;
next	1.351;

1.351
date	2003.03.26.03.39.42;	author fedor;	state Exp;
branches
	1.351.2.1;
next	1.350;

1.350
date	2003.03.25.02.18.55;	author fedor;	state Exp;
branches;
next	1.349;

1.349
date	2003.03.22.14.54.58;	author rearnsha;	state Exp;
branches;
next	1.348;

1.348
date	2003.03.22.14.42.54;	author rearnsha;	state Exp;
branches;
next	1.347;

1.347
date	2003.03.21.10.07.17;	author corinna;	state Exp;
branches;
next	1.346;

1.346
date	2003.03.20.22.43.10;	author cagney;	state Exp;
branches;
next	1.345;

1.345
date	2003.03.20.22.09.54;	author cagney;	state Exp;
branches;
next	1.344;

1.344
date	2003.03.19.06.21.13;	author kevinb;	state Exp;
branches;
next	1.343;

1.343
date	2003.03.18.19.06.54;	author brobecke;	state Exp;
branches;
next	1.342;

1.342
date	2003.03.17.23.25.08;	author brobecke;	state Exp;
branches;
next	1.341;

1.341
date	2003.03.05.18.07.15;	author drow;	state Exp;
branches;
next	1.340;

1.340
date	2003.03.05.18.01.46;	author drow;	state Exp;
branches;
next	1.339;

1.339
date	2003.03.05.18.00.02;	author drow;	state Exp;
branches;
next	1.338;

1.338
date	2003.03.01.17.03.19;	author cagney;	state Exp;
branches;
next	1.337;

1.337
date	2003.02.28.20.03.16;	author drow;	state Exp;
branches;
next	1.336;

1.336
date	2003.02.28.17.14.16;	author brobecke;	state Exp;
branches;
next	1.335;

1.335
date	2003.02.21.15.24.17;	author drow;	state Exp;
branches;
next	1.334;

1.334
date	2003.02.20.03.12.46;	author cgf;	state Exp;
branches;
next	1.333;

1.333
date	2003.02.20.00.01.04;	author carlton;	state Exp;
branches;
next	1.332;

1.332
date	2003.02.18.23.27.42;	author kseitz;	state Exp;
branches;
next	1.331;

1.331
date	2003.02.14.13.58.05;	author cagney;	state Exp;
branches;
next	1.330;

1.330
date	2003.02.13.18.07.24;	author kseitz;	state Exp;
branches;
next	1.329;

1.329
date	2003.02.11.16.11.16;	author cagney;	state Exp;
branches;
next	1.328;

1.328
date	2003.02.07.05.33.44;	author cagney;	state Exp;
branches;
next	1.327;

1.327
date	2003.02.07.04.49.34;	author cagney;	state Exp;
branches;
next	1.326;

1.326
date	2003.02.07.04.21.33;	author cagney;	state Exp;
branches;
next	1.325;

1.325
date	2003.02.06.05.30.16;	author cagney;	state Exp;
branches;
next	1.324;

1.324
date	2003.02.06.01.19.11;	author cagney;	state Exp;
branches;
next	1.323;

1.323
date	2003.01.31.20.43.53;	author cagney;	state Exp;
branches
	1.323.2.1;
next	1.322;

1.322
date	2003.01.31.16.32.43;	author cagney;	state Exp;
branches;
next	1.321;

1.321
date	2003.01.30.16.29.03;	author cagney;	state Exp;
branches;
next	1.320;

1.320
date	2003.01.30.15.11.20;	author cagney;	state Exp;
branches;
next	1.319;

1.319
date	2003.01.27.21.41.39;	author cagney;	state Exp;
branches;
next	1.318;

1.318
date	2003.01.23.23.03.31;	author jimb;	state Exp;
branches;
next	1.317;

1.317
date	2003.01.23.07.30.17;	author jimb;	state Exp;
branches;
next	1.316;

1.316
date	2003.01.22.23.50.35;	author drow;	state Exp;
branches;
next	1.315;

1.315
date	2003.01.21.21.39.31;	author hunt;	state Exp;
branches;
next	1.314;

1.314
date	2003.01.21.19.32.42;	author cagney;	state Exp;
branches;
next	1.313;

1.313
date	2003.01.18.17.25.22;	author cagney;	state Exp;
branches;
next	1.312;

1.312
date	2003.01.13.18.00.16;	author drow;	state Exp;
branches;
next	1.311;

1.311
date	2003.01.09.18.03.35;	author cagney;	state Exp;
branches
	1.311.2.1;
next	1.310;

1.310
date	2003.01.06.20.45.30;	author cagney;	state Exp;
branches;
next	1.309;

1.309
date	2003.01.05.01.39.54;	author drow;	state Exp;
branches;
next	1.308;

1.308
date	2003.01.04.23.47.10;	author drow;	state Exp;
branches;
next	1.307;

1.307
date	2003.01.04.23.38.44;	author drow;	state Exp;
branches;
next	1.306;

1.306
date	2003.01.04.22.37.46;	author drow;	state Exp;
branches;
next	1.305;

1.305
date	2003.01.04.19.27.19;	author kettenis;	state Exp;
branches;
next	1.304;

1.304
date	2003.01.03.23.19.28;	author kettenis;	state Exp;
branches;
next	1.303;

1.303
date	2003.01.03.14.10.07;	author kettenis;	state Exp;
branches;
next	1.302;

1.302
date	2003.01.02.20.29.15;	author kettenis;	state Exp;
branches;
next	1.301;

1.301
date	2003.01.02.16.54.54;	author kettenis;	state Exp;
branches;
next	1.300;

1.300
date	2003.01.02.14.27.25;	author cagney;	state Exp;
branches;
next	1.299;

1.299
date	2002.12.26.09.36.41;	author brobecke;	state Exp;
branches;
next	1.298;

1.298
date	2002.12.24.19.21.10;	author kevinb;	state Exp;
branches;
next	1.297;

1.297
date	2002.12.21.05.07.36;	author kevinb;	state Exp;
branches
	1.297.2.1;
next	1.296;

1.296
date	2002.12.16.16.51.45;	author brobecke;	state Exp;
branches;
next	1.295;

1.295
date	2002.12.13.17.55.49;	author jjohnstn;	state Exp;
branches;
next	1.294;

1.294
date	2002.12.09.01.28.10;	author ezannoni;	state Exp;
branches;
next	1.293;

1.293
date	2002.12.08.21.10.28;	author ezannoni;	state Exp;
branches;
next	1.292;

1.292
date	2002.12.06.18.38.44;	author ezannoni;	state Exp;
branches;
next	1.291;

1.291
date	2002.12.06.07.35.55;	author cagney;	state Exp;
branches;
next	1.290;

1.290
date	2002.12.05.05.17.39;	author kevinb;	state Exp;
branches;
next	1.289;

1.289
date	2002.12.04.23.00.14;	author carlton;	state Exp;
branches;
next	1.288;

1.288
date	2002.12.02.23.30.34;	author brobecke;	state Exp;
branches;
next	1.287;

1.287
date	2002.11.29.19.15.14;	author cagney;	state Exp;
branches;
next	1.286;

1.286
date	2002.11.27.19.13.08;	author hunt;	state Exp;
branches;
next	1.285;

1.285
date	2002.11.24.03.20.08;	author cagney;	state Exp;
branches;
next	1.284;

1.284
date	2002.11.23.19.45.10;	author schwab;	state Exp;
branches;
next	1.283;

1.283
date	2002.11.19.23.14.45;	author schwab;	state Exp;
branches;
next	1.282;

1.282
date	2002.11.19.15.17.50;	author fedor;	state Exp;
branches;
next	1.281;

1.281
date	2002.11.19.03.36.44;	author fedor;	state Exp;
branches;
next	1.280;

1.280
date	2002.11.18.21.53.31;	author kdienes;	state Exp;
branches;
next	1.279;

1.279
date	2002.11.09.03.14.11;	author cagney;	state Exp;
branches
	1.279.2.1;
next	1.278;

1.278
date	2002.11.08.20.48.54;	author cagney;	state Exp;
branches;
next	1.277;

1.277
date	2002.11.08.19.42.00;	author cagney;	state Exp;
branches;
next	1.276;

1.276
date	2002.11.08.03.35.13;	author brobecke;	state Exp;
branches;
next	1.275;

1.275
date	2002.11.07.20.43.22;	author jimb;	state Exp;
branches;
next	1.274;

1.274
date	2002.11.02.15.13.34;	author cagney;	state Exp;
branches;
next	1.273;

1.273
date	2002.10.25.21.23.57;	author kettenis;	state Exp;
branches;
next	1.272;

1.272
date	2002.10.24.00.13.57;	author carlton;	state Exp;
branches;
next	1.271;

1.271
date	2002.10.20.20.27.19;	author kettenis;	state Exp;
branches;
next	1.270;

1.270
date	2002.10.20.14.38.25;	author kettenis;	state Exp;
branches;
next	1.269;

1.269
date	2002.10.06.19.53.52;	author cgf;	state Exp;
branches;
next	1.268;

1.268
date	2002.10.02.21.33.58;	author ezannoni;	state Exp;
branches
	1.268.2.1;
next	1.267;

1.267
date	2002.10.01.19.26.04;	author carlton;	state Exp;
branches;
next	1.266;

1.266
date	2002.09.30.15.57.25;	author fnasser;	state Exp;
branches;
next	1.265;

1.265
date	2002.09.27.19.33.48;	author carlton;	state Exp;
branches;
next	1.264;

1.264
date	2002.09.26.17.46.04;	author cagney;	state Exp;
branches;
next	1.263;

1.263
date	2002.09.20.18.14.49;	author carlton;	state Exp;
branches;
next	1.262;

1.262
date	2002.09.20.14.58.59;	author fnasser;	state Exp;
branches
	1.262.2.1;
next	1.261;

1.261
date	2002.09.20.00.24.01;	author kevinb;	state Exp;
branches;
next	1.260;

1.260
date	2002.09.19.00.42.41;	author cagney;	state Exp;
branches;
next	1.259;

1.259
date	2002.09.17.04.44.21;	author brobecke;	state Exp;
branches;
next	1.258;

1.258
date	2002.09.14.02.09.39;	author drow;	state Exp;
branches;
next	1.257;

1.257
date	2002.09.02.18.09.06;	author thorpej;	state Exp;
branches
	1.257.2.1;
next	1.256;

1.256
date	2002.09.01.23.24.19;	author thorpej;	state Exp;
branches;
next	1.255;

1.255
date	2002.08.31.22.46.20;	author thorpej;	state Exp;
branches;
next	1.254;

1.254
date	2002.08.31.22.43.38;	author thorpej;	state Exp;
branches;
next	1.253;

1.253
date	2002.08.31.20.28.36;	author thorpej;	state Exp;
branches;
next	1.252;

1.252
date	2002.08.28.14.02.18;	author cagney;	state Exp;
branches;
next	1.251;

1.251
date	2002.08.27.22.37.06;	author tromey;	state Exp;
branches;
next	1.250;

1.250
date	2002.08.27.19.06.34;	author ezannoni;	state Exp;
branches;
next	1.249;

1.249
date	2002.08.25.21.43.05;	author cagney;	state Exp;
branches;
next	1.248;

1.248
date	2002.08.22.21.52.44;	author cagney;	state Exp;
branches
	1.248.4.1;
next	1.247;

1.247
date	2002.08.21.05.40.07;	author cagney;	state Exp;
branches;
next	1.246;

1.246
date	2002.08.21.05.03.38;	author cagney;	state Exp;
branches;
next	1.245;

1.245
date	2002.08.21.04.50.20;	author cagney;	state Exp;
branches;
next	1.244;

1.244
date	2002.08.21.00.57.42;	author cagney;	state Exp;
branches;
next	1.243;

1.243
date	2002.08.20.21.32.17;	author jimb;	state Exp;
branches;
next	1.242;

1.242
date	2002.08.20.17.38.46;	author kettenis;	state Exp;
branches;
next	1.241;

1.241
date	2002.08.19.10.52.20;	author aidan;	state Exp;
branches;
next	1.240;

1.240
date	2002.08.17.00.04.36;	author cagney;	state Exp;
branches;
next	1.239;

1.239
date	2002.08.16.23.32.04;	author cagney;	state Exp;
branches;
next	1.238;

1.238
date	2002.08.15.22.51.40;	author kettenis;	state Exp;
branches;
next	1.237;

1.237
date	2002.08.15.22.23.59;	author kettenis;	state Exp;
branches;
next	1.236;

1.236
date	2002.08.14.18.13.30;	author kseitz;	state Exp;
branches;
next	1.235;

1.235
date	2002.08.10.00.36.46;	author cagney;	state Exp;
branches;
next	1.234;

1.234
date	2002.08.06.15.53.07;	author cagney;	state Exp;
branches;
next	1.233;

1.233
date	2002.08.05.16.17.41;	author brobecke;	state Exp;
branches;
next	1.232;

1.232
date	2002.08.03.16.22.06;	author cagney;	state Exp;
branches;
next	1.231;

1.231
date	2002.08.02.20.51.21;	author cagney;	state Exp;
branches;
next	1.230;

1.230
date	2002.08.01.22.55.36;	author cagney;	state Exp;
branches;
next	1.229;

1.229
date	2002.08.01.17.18.32;	author cagney;	state Exp;
branches;
next	1.228;

1.228
date	2002.07.30.19.59.06;	author kevinb;	state Exp;
branches;
next	1.227;

1.227
date	2002.07.30.13.45.13;	author cagney;	state Exp;
branches;
next	1.226;

1.226
date	2002.07.29.22.55.26;	author cagney;	state Exp;
branches;
next	1.225;

1.225
date	2002.07.29.16.34.06;	author cagney;	state Exp;
branches;
next	1.224;

1.224
date	2002.07.27.01.41.15;	author kevinb;	state Exp;
branches;
next	1.223;

1.223
date	2002.07.24.23.51.35;	author cagney;	state Exp;
branches;
next	1.222;

1.222
date	2002.07.19.18.22.14;	author cagney;	state Exp;
branches;
next	1.221;

1.221
date	2002.07.18.12.12.42;	author mludvig;	state Exp;
branches;
next	1.220;

1.220
date	2002.07.16.15.19.18;	author cagney;	state Exp;
branches;
next	1.219;

1.219
date	2002.07.12.15.23.10;	author cagney;	state Exp;
branches;
next	1.218;

1.218
date	2002.07.03.20.36.54;	author cagney;	state Exp;
branches;
next	1.217;

1.217
date	2002.06.28.23.42.33;	author cagney;	state Exp;
branches;
next	1.216;

1.216
date	2002.06.28.22.09.11;	author cagney;	state Exp;
branches;
next	1.215;

1.215
date	2002.06.27.15.49.23;	author cagney;	state Exp;
branches;
next	1.214;

1.214
date	2002.06.26.16.07.16;	author thorpej;	state Exp;
branches;
next	1.213;

1.213
date	2002.06.25.18.38.56;	author cagney;	state Exp;
branches;
next	1.212;

1.212
date	2002.06.24.04.47.09;	author tromey;	state Exp;
branches;
next	1.211;

1.211
date	2002.06.21.23.48.32;	author tromey;	state Exp;
branches;
next	1.210;

1.210
date	2002.06.21.21.19.52;	author brolley;	state Exp;
branches;
next	1.209;

1.209
date	2002.06.14.22.30.41;	author cagney;	state Exp;
branches;
next	1.208;

1.208
date	2002.06.12.21.19.41;	author cagney;	state Exp;
branches;
next	1.207;

1.207
date	2002.06.11.01.31.36;	author cagney;	state Exp;
branches;
next	1.206;

1.206
date	2002.06.09.15.45.42;	author cagney;	state Exp;
branches;
next	1.205;

1.205
date	2002.05.31.00.59.13;	author thorpej;	state Exp;
branches;
next	1.204;

1.204
date	2002.05.31.00.19.46;	author thorpej;	state Exp;
branches;
next	1.203;

1.203
date	2002.05.30.01.21.51;	author thorpej;	state Exp;
branches;
next	1.202;

1.202
date	2002.05.29.16.39.53;	author cagney;	state Exp;
branches;
next	1.201;

1.201
date	2002.05.29.01.51.15;	author cagney;	state Exp;
branches;
next	1.200;

1.200
date	2002.05.24.00.12.16;	author cagney;	state Exp;
branches
	1.200.2.1;
next	1.199;

1.199
date	2002.05.22.04.15.36;	author thorpej;	state Exp;
branches;
next	1.198;

1.198
date	2002.05.22.03.59.53;	author thorpej;	state Exp;
branches;
next	1.197;

1.197
date	2002.05.21.21.23.44;	author thorpej;	state Exp;
branches;
next	1.196;

1.196
date	2002.05.21.20.53.31;	author thorpej;	state Exp;
branches;
next	1.195;

1.195
date	2002.05.21.15.36.02;	author thorpej;	state Exp;
branches;
next	1.194;

1.194
date	2002.05.17.17.57.48;	author jimb;	state Exp;
branches;
next	1.193;

1.193
date	2002.05.17.06.55.48;	author thorpej;	state Exp;
branches;
next	1.192;

1.192
date	2002.05.16.21.15.52;	author jimb;	state Exp;
branches;
next	1.191;

1.191
date	2002.05.16.21.00.14;	author jimb;	state Exp;
branches;
next	1.190;

1.190
date	2002.05.15.21.19.16;	author jimb;	state Exp;
branches
	1.190.2.1;
next	1.189;

1.189
date	2002.05.14.22.19.49;	author cagney;	state Exp;
branches;
next	1.188;

1.188
date	2002.05.13.18.13.06;	author jimb;	state Exp;
branches;
next	1.187;

1.187
date	2002.05.12.07.40.37;	author drow;	state Exp;
branches;
next	1.186;

1.186
date	2002.05.12.02.20.38;	author drow;	state Exp;
branches;
next	1.185;

1.185
date	2002.05.11.23.14.25;	author cagney;	state Exp;
branches;
next	1.184;

1.184
date	2002.05.11.22.14.19;	author thorpej;	state Exp;
branches;
next	1.183;

1.183
date	2002.05.11.17.22.26;	author thorpej;	state Exp;
branches;
next	1.182;

1.182
date	2002.05.11.16.56.16;	author thorpej;	state Exp;
branches;
next	1.181;

1.181
date	2002.05.11.16.21.15;	author thorpej;	state Exp;
branches;
next	1.180;

1.180
date	2002.05.04.15.52.37;	author cagney;	state Exp;
branches
	1.180.2.1;
next	1.179;

1.179
date	2002.04.25.20.34.54;	author troth;	state Exp;
branches;
next	1.178;

1.178
date	2002.04.25.02.44.05;	author thorpej;	state Exp;
branches;
next	1.177;

1.177
date	2002.04.25.02.28.56;	author thorpej;	state Exp;
branches;
next	1.176;

1.176
date	2002.04.23.00.53.30;	author thorpej;	state Exp;
branches;
next	1.175;

1.175
date	2002.04.22.20.19.52;	author hjl;	state Exp;
branches;
next	1.174;

1.174
date	2002.04.22.03.51.33;	author davem;	state Exp;
branches;
next	1.173;

1.173
date	2002.04.22.01.02.02;	author davem;	state Exp;
branches;
next	1.172;

1.172
date	2002.04.21.22.03.10;	author thorpej;	state Exp;
branches;
next	1.171;

1.171
date	2002.04.21.21.53.44;	author thorpej;	state Exp;
branches;
next	1.170;

1.170
date	2002.04.21.16.52.39;	author thorpej;	state Exp;
branches;
next	1.169;

1.169
date	2002.04.09.03.06.13;	author cagney;	state Exp;
branches;
next	1.168;

1.168
date	2002.04.09.01.52.57;	author cagney;	state Exp;
branches;
next	1.167;

1.167
date	2002.03.29.01.22.41;	author msnyder;	state Exp;
branches;
next	1.166;

1.166
date	2002.03.27.05.10.38;	author drow;	state Exp;
branches;
next	1.165;

1.165
date	2002.03.24.00.40.35;	author cagney;	state Exp;
branches;
next	1.164;

1.164
date	2002.03.11.00.01.07;	author drow;	state Exp;
branches;
next	1.163;

1.163
date	2002.02.25.18.15.52;	author schauer;	state Exp;
branches
	1.163.2.1;
next	1.162;

1.162
date	2002.02.24.03.35.39;	author cagney;	state Exp;
branches;
next	1.161;

1.161
date	2002.02.23.20.36.49;	author cagney;	state Exp;
branches;
next	1.160;

1.160
date	2002.02.21.12.19.55;	author rearnsha;	state Exp;
branches;
next	1.159;

1.159
date	2002.02.15.13.35.25;	author rearnsha;	state Exp;
branches;
next	1.158;

1.158
date	2002.02.13.20.47.16;	author ezannoni;	state Exp;
branches;
next	1.157;

1.157
date	2002.02.12.13.36.03;	author rearnsha;	state Exp;
branches;
next	1.156;

1.156
date	2002.02.09.18.45.06;	author cagney;	state Exp;
branches;
next	1.155;

1.155
date	2002.02.03.16.20.22;	author rearnsha;	state Exp;
branches;
next	1.154;

1.154
date	2002.02.03.11.43.17;	author schauer;	state Exp;
branches;
next	1.153;

1.153
date	2002.01.24.03.44.10;	author ezannoni;	state Exp;
branches;
next	1.152;

1.152
date	2002.01.20.09.29.41;	author aj;	state Exp;
branches;
next	1.151;

1.151
date	2002.01.20.01.12.50;	author cagney;	state Exp;
branches;
next	1.150;

1.150
date	2002.01.18.04.50.56;	author cagney;	state Exp;
branches;
next	1.149;

1.149
date	2002.01.10.23.32.25;	author msnyder;	state Exp;
branches;
next	1.148;

1.148
date	2002.01.08.22.09.46;	author msnyder;	state Exp;
branches;
next	1.147;

1.147
date	2002.01.06.15.02.00;	author cagney;	state Exp;
branches;
next	1.146;

1.146
date	2002.01.05.05.54.28;	author cagney;	state Exp;
branches;
next	1.145;

1.145
date	2001.12.30.00.14.50;	author ezannoni;	state Exp;
branches;
next	1.144;

1.144
date	2001.12.19.02.45.35;	author jimb;	state Exp;
branches;
next	1.143;

1.143
date	2001.12.17.21.14.09;	author bjh21;	state Exp;
branches;
next	1.142;

1.142
date	2001.12.17.16.23.02;	author fnasser;	state Exp;
branches;
next	1.141;

1.141
date	2001.12.13.13.34.39;	author corinna;	state Exp;
branches;
next	1.140;

1.140
date	2001.12.12.14.21.30;	author jimb;	state Exp;
branches;
next	1.139;

1.139
date	2001.12.12.14.13.24;	author jimb;	state Exp;
branches;
next	1.138;

1.138
date	2001.12.08.20.28.44;	author drow;	state Exp;
branches;
next	1.137;

1.137
date	2001.12.07.12.10.15;	author smid;	state Exp;
branches;
next	1.136;

1.136
date	2001.12.01.23.06.46;	author cagney;	state Exp;
branches;
next	1.135;

1.135
date	2001.12.01.22.19.30;	author cagney;	state Exp;
branches;
next	1.134;

1.134
date	2001.12.01.22.02.02;	author cagney;	state Exp;
branches;
next	1.133;

1.133
date	2001.12.01.19.34.37;	author cagney;	state Exp;
branches;
next	1.132;

1.132
date	2001.12.01.19.10.00;	author cagney;	state Exp;
branches;
next	1.131;

1.131
date	2001.11.30.02.14.08;	author ezannoni;	state Exp;
branches;
next	1.130;

1.130
date	2001.11.18.05.09.26;	author cagney;	state Exp;
branches;
next	1.129;

1.129
date	2001.11.17.18.38.29;	author drow;	state Exp;
branches;
next	1.128;

1.128
date	2001.11.16.19.53.29;	author bjh21;	state Exp;
branches;
next	1.127;

1.127
date	2001.11.14.18.38.01;	author msnyder;	state Exp;
branches;
next	1.126;

1.126
date	2001.11.08.04.39.04;	author ezannoni;	state Exp;
branches;
next	1.125;

1.125
date	2001.11.08.02.59.32;	author ezannoni;	state Exp;
branches;
next	1.124;

1.124
date	2001.11.06.22.31.00;	author ezannoni;	state Exp;
branches;
next	1.123;

1.123
date	2001.11.06.21.58.53;	author jimb;	state Exp;
branches;
next	1.122;

1.122
date	2001.11.04.13.14.43;	author kettenis;	state Exp;
branches;
next	1.121;

1.121
date	2001.10.21.19.20.29;	author cagney;	state Exp;
branches;
next	1.120;

1.120
date	2001.10.21.17.19.36;	author cagney;	state Exp;
branches;
next	1.119;

1.119
date	2001.10.02.23.11.20;	author kevinb;	state Exp;
branches;
next	1.118;

1.118
date	2001.10.02.02.53.48;	author ezannoni;	state Exp;
branches;
next	1.117;

1.117
date	2001.10.02.02.51.41;	author ezannoni;	state Exp;
branches;
next	1.116;

1.116
date	2001.09.21.12.19.15;	author smid;	state Exp;
branches;
next	1.115;

1.115
date	2001.09.07.21.27.35;	author jimb;	state Exp;
branches;
next	1.114;

1.114
date	2001.09.01.21.38.05;	author kettenis;	state Exp;
branches;
next	1.113;

1.113
date	2001.08.17.17.58.25;	author kseitz;	state Exp;
branches;
next	1.112;

1.112
date	2001.08.16.22.47.00;	author kseitz;	state Exp;
branches;
next	1.111;

1.111
date	2001.08.15.21.09.46;	author kseitz;	state Exp;
branches;
next	1.110;

1.110
date	2001.08.11.00.59.29;	author cagney;	state Exp;
branches;
next	1.109;

1.109
date	2001.08.01.18.39.22;	author cagney;	state Exp;
branches;
next	1.108;

1.108
date	2001.08.01.17.41.50;	author cagney;	state Exp;
branches;
next	1.107;

1.107
date	2001.07.28.19.48.15;	author cagney;	state Exp;
branches
	1.107.2.1;
next	1.106;

1.106
date	2001.07.28.19.45.04;	author ciceron;	state Exp;
branches;
next	1.105;

1.105
date	2001.07.27.16.35.27;	author juanito;	state Exp;
branches;
next	1.104;

1.104
date	2001.07.22.12.41.49;	author ciceron;	state Exp;
branches;
next	1.103;

1.103
date	2001.07.21.20.16.44;	author kettenis;	state Exp;
branches;
next	1.102;

1.102
date	2001.07.19.18.09.11;	author drow;	state Exp;
branches;
next	1.101;

1.101
date	2001.07.18.20.53.35;	author ciceron;	state Exp;
branches;
next	1.100;

1.100
date	2001.07.17.20.22.49;	author ezannoni;	state Exp;
branches;
next	1.99;

1.99
date	2001.07.16.14.46.34;	author ezannoni;	state Exp;
branches;
next	1.98;

1.98
date	2001.07.15.18.57.06;	author ezannoni;	state Exp;
branches;
next	1.97;

1.97
date	2001.07.14.09.50.25;	author kettenis;	state Exp;
branches;
next	1.96;

1.96
date	2001.07.13.20.03.52;	author ezannoni;	state Exp;
branches;
next	1.95;

1.95
date	2001.07.10.23.08.12;	author cagney;	state Exp;
branches;
next	1.94;

1.94
date	2001.07.10.22.38.38;	author cagney;	state Exp;
branches;
next	1.93;

1.93
date	2001.07.10.21.06.34;	author cagney;	state Exp;
branches;
next	1.92;

1.92
date	2001.07.08.20.11.12;	author cagney;	state Exp;
branches;
next	1.91;

1.91
date	2001.06.28.03.33.26;	author cagney;	state Exp;
branches
	1.91.2.1;
next	1.90;

1.90
date	2001.06.10.00.47.02;	author cagney;	state Exp;
branches;
next	1.89;

1.89
date	2001.05.26.00.52.13;	author nsd;	state Exp;
branches;
next	1.88;

1.88
date	2001.05.22.21.02.41;	author jimb;	state Exp;
branches;
next	1.87;

1.87
date	2001.05.12.04.09.38;	author jimb;	state Exp;
branches;
next	1.86;

1.86
date	2001.05.12.00.31.09;	author cagney;	state Exp;
branches;
next	1.85;

1.85
date	2001.05.10.20.31.45;	author cagney;	state Exp;
branches;
next	1.84;

1.84
date	2001.05.10.18.02.58;	author kseitz;	state Exp;
branches;
next	1.83;

1.83
date	2001.05.09.05.45.30;	author jimb;	state Exp;
branches;
next	1.82;

1.82
date	2001.05.09.05.23.24;	author jimb;	state Exp;
branches;
next	1.81;

1.81
date	2001.05.01.20.15.43;	author msnyder;	state Exp;
branches;
next	1.80;

1.80
date	2001.04.27.00.19.08;	author jimb;	state Exp;
branches;
next	1.79;

1.79
date	2001.04.17.21.20.48;	author cagney;	state Exp;
branches;
next	1.78;

1.78
date	2001.04.11.22.39.07;	author cagney;	state Exp;
branches;
next	1.77;

1.77
date	2001.04.05.14.49.28;	author cagney;	state Exp;
branches;
next	1.76;

1.76
date	2001.04.02.20.57.26;	author cagney;	state Exp;
branches;
next	1.75;

1.75
date	2001.03.23.00.58.48;	author cagney;	state Exp;
branches;
next	1.74;

1.74
date	2001.03.21.11.36.57;	author eliz;	state Exp;
branches;
next	1.73;

1.73
date	2001.03.20.21.23.38;	author jimb;	state Exp;
branches;
next	1.72;

1.72
date	2001.03.10.06.17.20;	author kevinb;	state Exp;
branches;
next	1.71;

1.71
date	2001.03.09.03.36.07;	author cagney;	state Exp;
branches;
next	1.70;

1.70
date	2001.03.07.03.00.33;	author jtc;	state Exp;
branches;
next	1.69;

1.69
date	2001.03.07.02.57.08;	author jtc;	state Exp;
branches;
next	1.68;

1.68
date	2001.03.06.08.21.05;	author kevinb;	state Exp;
branches;
next	1.67;

1.67
date	2001.03.05.16.38.07;	author cagney;	state Exp;
branches;
next	1.66;

1.66
date	2001.03.01.18.19.28;	author cagney;	state Exp;
branches;
next	1.65;

1.65
date	2001.03.01.16.13.18;	author cagney;	state Exp;
branches;
next	1.64;

1.64
date	2001.03.01.15.49.13;	author cagney;	state Exp;
branches;
next	1.63;

1.63
date	2001.02.20.22.39.02;	author cagney;	state Exp;
branches;
next	1.62;

1.62
date	2001.02.18.07.22.16;	author eliz;	state Exp;
branches;
next	1.61;

1.61
date	2001.02.09.01.47.34;	author kingdon;	state Exp;
branches;
next	1.60;

1.60
date	2001.02.06.04.17.03;	author jtc;	state Exp;
branches;
next	1.59;

1.59
date	2001.02.02.19.14.32;	author jtc;	state Exp;
branches;
next	1.58;

1.58
date	2001.01.23.22.48.55;	author jtc;	state Exp;
branches;
next	1.57;

1.57
date	2001.01.08.12.47.49;	author fnasser;	state Exp;
branches;
next	1.56;

1.56
date	2001.01.04.15.50.48;	author nsd;	state Exp;
branches;
next	1.55;

1.55
date	2000.12.21.16.16.17;	author fnasser;	state Exp;
branches;
next	1.54;

1.54
date	2000.12.20.21.24.26;	author fnasser;	state Exp;
branches;
next	1.53;

1.53
date	2000.12.11.22.36.26;	author fnasser;	state Exp;
branches;
next	1.52;

1.52
date	2000.12.11.21.11.16;	author fnasser;	state Exp;
branches;
next	1.51;

1.51
date	2000.12.04.23.27.59;	author kettenis;	state Exp;
branches;
next	1.50;

1.50
date	2000.12.02.14.08.22;	author cagney;	state Exp;
branches;
next	1.49;

1.49
date	2000.12.01.18.01.37;	author fnasser;	state Exp;
branches;
next	1.48;

1.48
date	2000.12.01.00.41.27;	author fnasser;	state Exp;
branches;
next	1.47;

1.47
date	2000.11.10.23.02.56;	author fnasser;	state Exp;
branches;
next	1.46;

1.46
date	2000.11.09.09.49.00;	author schauer;	state Exp;
branches;
next	1.45;

1.45
date	2000.10.24.20.05.35;	author kevinb;	state Exp;
branches;
next	1.44;

1.44
date	2000.10.08.22.31.22;	author bje;	state Exp;
branches;
next	1.43;

1.43
date	2000.08.25.07.54.32;	author muller;	state Exp;
branches;
next	1.42;

1.42
date	2000.08.04.09.27.18;	author cagney;	state Exp;
branches;
next	1.41;

1.41
date	2000.08.02.11.11.46;	author cagney;	state Exp;
branches;
next	1.40;

1.40
date	2000.07.31.20.56.43;	author kevinb;	state Exp;
branches;
next	1.39;

1.39
date	2000.07.10.06.16.51;	author msnyder;	state Exp;
branches;
next	1.38;

1.38
date	2000.07.05.08.12.04;	author cagney;	state Exp;
branches;
next	1.37;

1.37
date	2000.07.01.05.49.13;	author cagney;	state Exp;
branches;
next	1.36;

1.36
date	2000.06.16.21.02.21;	author nsd;	state Exp;
branches;
next	1.35;

1.35
date	2000.06.12.06.09.04;	author cagney;	state Exp;
branches;
next	1.34;

1.34
date	2000.06.07.04.38.02;	author cagney;	state Exp;
branches;
next	1.33;

1.33
date	2000.05.25.01.50.50;	author cagney;	state Exp;
branches;
next	1.32;

1.32
date	2000.05.23.03.22.29;	author cagney;	state Exp;
branches;
next	1.31;

1.31
date	2000.05.15.07.10.04;	author eliz;	state Exp;
branches;
next	1.30;

1.30
date	2000.05.10.20.07.24;	author msnyder;	state Exp;
branches;
next	1.29;

1.29
date	2000.05.01.16.12.10;	author shebs;	state Exp;
branches;
next	1.28;

1.28
date	2000.04.26.07.16.15;	author kevinb;	state Exp;
branches;
next	1.27;

1.27
date	2000.04.13.05.33.41;	author cagney;	state Exp;
branches;
next	1.26;

1.26
date	2000.04.11.01.21.14;	author cagney;	state Exp;
branches;
next	1.25;

1.25
date	2000.04.09.14.37.28;	author cagney;	state Exp;
branches
	1.25.2.1;
next	1.24;

1.24
date	2000.04.08.22.35.35;	author jimb;	state Exp;
branches;
next	1.23;

1.23
date	2000.04.07.22.04.01;	author scottb;	state Exp;
branches;
next	1.22;

1.22
date	2000.04.07.08.57.38;	author cagney;	state Exp;
branches;
next	1.21;

1.21
date	2000.04.04.02.08.52;	author hjl;	state Exp;
branches;
next	1.20;

1.20
date	2000.04.03.18.58.48;	author kevinb;	state Exp;
branches;
next	1.19;

1.19
date	2000.04.03.15.12.59;	author eliz;	state Exp;
branches;
next	1.18;

1.18
date	2000.04.03.00.00.32;	author cagney;	state Exp;
branches;
next	1.17;

1.17
date	2000.03.28.21.19.04;	author msnyder;	state Exp;
branches;
next	1.16;

1.16
date	2000.03.27.06.51.30;	author cagney;	state Exp;
branches;
next	1.15;

1.15
date	2000.03.27.06.42.08;	author cagney;	state Exp;
branches;
next	1.14;

1.14
date	2000.03.20.20.38.22;	author jimb;	state Exp;
branches;
next	1.13;

1.13
date	2000.03.16.10.23.38;	author eliz;	state Exp;
branches;
next	1.12;

1.12
date	2000.03.04.07.11.38;	author aoliva;	state Exp;
branches;
next	1.11;

1.11
date	2000.03.03.05.44.38;	author cagney;	state Exp;
branches;
next	1.10;

1.10
date	2000.03.03.02.50.23;	author cagney;	state Exp;
branches;
next	1.9;

1.9
date	2000.02.26.13.57.35;	author kettenis;	state Exp;
branches;
next	1.8;

1.8
date	2000.02.24.08.16.26;	author cagney;	state Exp;
branches;
next	1.7;

1.7
date	2000.02.23.00.25.41;	author cagney;	state Exp;
branches;
next	1.6;

1.6
date	2000.02.22.01.17.29;	author kevinb;	state Exp;
branches;
next	1.5;

1.5
date	2000.02.16.23.35.19;	author fnasser;	state Exp;
branches;
next	1.4;

1.4
date	2000.02.16.04.45.41;	author jsm;	state Exp;
branches;
next	1.3;

1.3
date	2000.02.09.08.52.44;	author cagney;	state Exp;
branches;
next	1.2;

1.2
date	2000.02.08.16.25.07;	author ezannoni;	state Exp;
branches;
next	1.1;

1.1
date	99.04.16.01.33.57;	author shebs;	state Exp;
branches
	1.1.1.1;
next	;

1.1243.2.1
date	2013.04.02.17.38.43;	author eliz;	state Exp;
branches;
next	;

1.1179.2.1
date	2011.12.23.17.55.19;	author kpouget;	state Exp;
branches;
next	1.1179.2.2;

1.1179.2.2
date	2012.01.06.04.43.01;	author brobecke;	state Exp;
branches;
next	;

1.1127.2.1
date	2010.07.28.18.32.47;	author tromey;	state Exp;
branches;
next	1.1127.2.2;

1.1127.2.2
date	2010.08.18.22.55.55;	author tromey;	state Exp;
branches;
next	1.1127.2.3;

1.1127.2.3
date	2010.08.19.18.40.34;	author tromey;	state Exp;
branches;
next	;

1.1099.2.1
date	2009.10.02.22.06.10;	author brobecke;	state Exp;
branches;
next	;

1.1091.2.1
date	2009.07.26.01.32.59;	author msnyder;	state Exp;
branches;
next	;

1.1061.2.1
date	2008.12.26.21.09.13;	author msnyder;	state Exp;
branches;
next	;

1.1051.2.1
date	2008.10.01.00.22.32;	author msnyder;	state Exp;
branches;
next	1.1051.2.2;

1.1051.2.2
date	2008.10.01.03.16.04;	author msnyder;	state Exp;
branches;
next	1.1051.2.3;

1.1051.2.3
date	2008.10.01.03.39.00;	author msnyder;	state Exp;
branches;
next	;

1.1038.2.1
date	2008.07.18.04.23.49;	author msnyder;	state Exp;
branches;
next	1.1038.2.2;

1.1038.2.2
date	2008.07.20.14.30.09;	author teawater;	state Exp;
branches;
next	1.1038.2.3;

1.1038.2.3
date	2008.08.15.06.47.48;	author teawater;	state Exp;
branches;
next	;

1.1026.2.1
date	2008.06.10.02.11.17;	author msnyder;	state Exp;
branches;
next	;

1.984.2.1
date	2008.03.17.12.15.08;	author skrll;	state Exp;
branches
	1.984.2.1.4.1;
next	;

1.984.2.1.4.1
date	2009.03.09.20.36.07;	author amylaar;	state Exp;
branches;
next	1.984.2.1.4.2;

1.984.2.1.4.2
date	2009.09.11.04.45.43;	author amylaar;	state Exp;
branches;
next	;

1.890.2.1
date	2008.06.10.00.13.14;	author msnyder;	state Exp;
branches;
next	;

1.848.2.1
date	2006.11.24.19.54.14;	author uweigand;	state Exp;
branches;
next	;

1.812.2.1
date	2006.08.15.08.11.42;	author nickrob;	state Exp;
branches;
next	1.812.2.2;

1.812.2.2
date	2006.08.21.11.01.46;	author nickrob;	state Exp;
branches;
next	1.812.2.3;

1.812.2.3
date	2006.08.28.07.48.50;	author nickrob;	state Exp;
branches;
next	1.812.2.4;

1.812.2.4
date	2006.08.30.01.25.41;	author nickrob;	state Exp;
branches;
next	1.812.2.5;

1.812.2.5
date	2006.08.31.01.15.58;	author nickrob;	state Exp;
branches;
next	1.812.2.6;

1.812.2.6
date	2006.09.15.22.51.13;	author nickrob;	state Exp;
branches;
next	;

1.798.2.1
date	2006.03.31.21.36.26;	author msnyder;	state Exp;
branches;
next	;

1.789.2.1
date	2006.03.03.20.46.35;	author drow;	state Exp;
branches;
next	1.789.2.2;

1.789.2.2
date	2006.03.12.19.20.46;	author drow;	state Exp;
branches;
next	1.789.2.3;

1.789.2.3
date	2006.03.14.13.58.41;	author drow;	state Exp;
branches;
next	1.789.2.4;

1.789.2.4
date	2006.03.21.20.48.28;	author drow;	state Exp;
branches;
next	1.789.2.5;

1.789.2.5
date	2006.03.23.16.52.21;	author drow;	state Exp;
branches;
next	1.789.2.6;

1.789.2.6
date	2006.03.27.19.11.10;	author drow;	state Exp;
branches;
next	1.789.2.7;

1.789.2.7
date	2006.03.31.22.51.14;	author drow;	state Exp;
branches;
next	1.789.2.8;

1.789.2.8
date	2006.04.02.02.35.32;	author drow;	state Exp;
branches;
next	;

1.787.2.1
date	2006.03.15.19.53.36;	author drow;	state Exp;
branches;
next	1.787.2.2;

1.787.2.2
date	2006.03.21.02.13.35;	author pbrook;	state Exp;
branches;
next	1.787.2.3;

1.787.2.3
date	2006.04.03.00.47.36;	author drow;	state Exp;
branches
	1.787.2.3.2.1;
next	1.787.2.4;

1.787.2.4
date	2006.05.03.16.30.55;	author pbrook;	state Exp;
branches;
next	1.787.2.5;

1.787.2.5
date	2006.07.15.09.44.49;	author vprus;	state Exp;
branches;
next	;

1.787.2.3.2.1
date	2006.04.12.18.11.38;	author drow;	state Exp;
branches;
next	1.787.2.3.2.2;

1.787.2.3.2.2
date	2006.05.09.17.46.17;	author drow;	state Exp;
branches;
next	1.787.2.3.2.3;

1.787.2.3.2.3
date	2006.06.01.20.03.30;	author drow;	state Exp;
branches;
next	;

1.761.2.1
date	2006.01.26.18.10.22;	author drow;	state Exp;
branches;
next	1.761.2.2;

1.761.2.2
date	2006.01.26.18.11.52;	author drow;	state Exp;
branches;
next	;

1.761.4.1
date	2005.11.28.22.35.26;	author msnyder;	state Exp;
branches;
next	;

1.758.2.1
date	2005.11.07.15.16.19;	author ams;	state Exp;
branches;
next	1.758.2.2;

1.758.2.2
date	2005.11.14.15.35.16;	author ams;	state Exp;
branches;
next	1.758.2.3;

1.758.2.3
date	2005.11.16.12.44.10;	author ams;	state Exp;
branches;
next	;

1.756.2.1
date	2005.10.20.03.34.52;	author pbrook;	state Exp;
branches;
next	1.756.2.2;

1.756.2.2
date	2005.10.20.03.36.27;	author pbrook;	state Exp;
branches;
next	1.756.2.3;

1.756.2.3
date	2006.01.26.18.05.54;	author drow;	state Exp;
branches;
next	1.756.2.4;

1.756.2.4
date	2006.01.26.18.11.40;	author drow;	state Exp;
branches;
next	;

1.707.2.1
date	2005.03.25.21.09.22;	author drow;	state Exp;
branches;
next	1.707.2.2;

1.707.2.2
date	2005.03.25.22.20.47;	author drow;	state Exp;
branches;
next	1.707.2.3;

1.707.2.3
date	2005.03.28.18.31.41;	author mmitchel;	state Exp;
branches;
next	1.707.2.4;

1.707.2.4
date	2005.03.29.02.52.04;	author pbrook;	state Exp;
branches;
next	1.707.2.5;

1.707.2.5
date	2005.03.30.14.59.26;	author drow;	state Exp;
branches;
next	;

1.643.2.1
date	2004.11.04.02.18.49;	author ksakamot;	state Exp;
branches;
next	1.643.2.2;

1.643.2.2
date	2004.11.12.00.58.27;	author ksakamot;	state Exp;
branches;
next	;

1.594.4.1
date	2004.09.01.17.39.02;	author jimb;	state Exp;
branches;
next	1.594.4.2;

1.594.4.2
date	2004.09.01.18.09.52;	author jimb;	state Exp;
branches;
next	1.594.4.3;

1.594.4.3
date	2004.09.07.15.53.48;	author jimb;	state Exp;
branches;
next	;

1.529.2.1
date	2004.03.24.04.10.00;	author ezannoni;	state Exp;
branches;
next	;

1.518.4.1
date	2004.03.09.22.58.58;	author cagney;	state Exp;
branches;
next	1.518.4.2;

1.518.4.2
date	2004.03.21.23.57.32;	author cagney;	state Exp;
branches;
next	1.518.4.3;

1.518.4.3
date	2004.03.22.03.15.23;	author cagney;	state Exp;
branches;
next	;

1.512.2.1
date	2004.02.21.20.17.22;	author drow;	state Exp;
branches;
next	1.512.2.2;

1.512.2.2
date	2004.02.21.20.58.39;	author drow;	state Exp;
branches;
next	1.512.2.3;

1.512.2.3
date	2004.03.27.17.37.43;	author drow;	state Exp;
branches;
next	1.512.2.4;

1.512.2.4
date	2004.04.02.16.47.43;	author drow;	state Exp;
branches;
next	1.512.2.5;

1.512.2.5
date	2004.04.19.20.35.19;	author drow;	state Exp;
branches;
next	1.512.2.6;

1.512.2.6
date	2004.09.16.17.00.48;	author drow;	state Exp;
branches;
next	1.512.2.7;

1.512.2.7
date	2004.09.21.20.44.11;	author drow;	state Exp;
branches;
next	;

1.445.2.1
date	2003.09.18.20.14.16;	author kettenis;	state Exp;
branches;
next	1.445.2.2;

1.445.2.2
date	2003.09.20.14.48.06;	author kettenis;	state Exp;
branches;
next	1.445.2.3;

1.445.2.3
date	2003.10.18.18.25.46;	author kettenis;	state Exp;
branches;
next	1.445.2.4;

1.445.2.4
date	2003.10.25.18.42.28;	author kettenis;	state Exp;
branches;
next	1.445.2.5;

1.445.2.5
date	2003.11.02.20.26.32;	author kettenis;	state Exp;
branches;
next	1.445.2.6;

1.445.2.6
date	2003.11.02.20.54.47;	author kettenis;	state Exp;
branches;
next	1.445.2.7;

1.445.2.7
date	2003.11.15.21.27.05;	author kettenis;	state Exp;
branches;
next	1.445.2.8;

1.445.2.8
date	2003.11.16.10.19.37;	author kettenis;	state Exp;
branches;
next	1.445.2.9;

1.445.2.9
date	2003.12.15.20.29.18;	author kettenis;	state Exp;
branches;
next	1.445.2.10;

1.445.2.10
date	2003.12.26.21.12.07;	author kettenis;	state Exp;
branches;
next	1.445.2.11;

1.445.2.11
date	2003.12.26.21.19.58;	author kettenis;	state Exp;
branches;
next	1.445.2.12;

1.445.2.12
date	2003.12.26.23.42.59;	author kettenis;	state Exp;
branches;
next	1.445.2.13;

1.445.2.13
date	2003.12.26.23.53.33;	author kettenis;	state Exp;
branches;
next	;

1.444.2.1
date	2003.09.29.17.35.33;	author ezannoni;	state Exp;
branches;
next	;

1.410.2.1
date	2003.06.30.16.26.38;	author carlton;	state Exp;
branches;
next	1.410.2.2;

1.410.2.2
date	2003.07.02.20.52.28;	author drow;	state Exp;
branches;
next	1.410.2.3;

1.410.2.3
date	2003.07.07.15.07.23;	author schwab;	state Exp;
branches;
next	1.410.2.4;

1.410.2.4
date	2003.07.07.15.57.29;	author drow;	state Exp;
branches;
next	1.410.2.5;

1.410.2.5
date	2003.07.08.20.17.35;	author cagney;	state Exp;
branches;
next	1.410.2.6;

1.410.2.6
date	2003.07.11.16.56.09;	author rth;	state Exp;
branches;
next	1.410.2.7;

1.410.2.7
date	2003.07.11.17.56.47;	author troth;	state Exp;
branches;
next	1.410.2.8;

1.410.2.8
date	2003.07.17.12.51.55;	author ezannoni;	state Exp;
branches;
next	1.410.2.9;

1.410.2.9
date	2003.07.22.15.44.10;	author ezannoni;	state Exp;
branches;
next	1.410.2.10;

1.410.2.10
date	2003.08.02.20.09.52;	author cagney;	state Exp;
branches;
next	1.410.2.11;

1.410.2.11
date	2003.08.05.14.59.59;	author drow;	state Exp;
branches;
next	1.410.2.12;

1.410.2.12
date	2003.08.08.18.00.07;	author hjl;	state Exp;
branches;
next	1.410.2.13;

1.410.2.13
date	2003.08.17.18.22.33;	author drow;	state Exp;
branches;
next	1.410.2.14;

1.410.2.14
date	2003.08.18.18.10.52;	author kettenis;	state Exp;
branches;
next	1.410.2.15;

1.410.2.15
date	2003.10.17.21.44.26;	author jimb;	state Exp;
branches;
next	;

1.391.2.1
date	2003.06.06.18.02.26;	author cagney;	state Exp;
branches;
next	;

1.381.2.1
date	2003.05.21.22.02.11;	author cagney;	state Exp;
branches;
next	;

1.364.2.1
date	2003.05.04.11.37.38;	author kettenis;	state Exp;
branches;
next	1.364.2.2;

1.364.2.2
date	2003.05.04.22.00.08;	author kettenis;	state Exp;
branches;
next	1.364.2.3;

1.364.2.3
date	2003.05.18.09.43.55;	author kettenis;	state Exp;
branches;
next	;

1.358.2.1
date	2003.04.10.21.33.46;	author cagney;	state Exp;
branches;
next	;

1.351.2.1
date	2003.03.26.20.33.47;	author cagney;	state Exp;
branches;
next	1.351.2.2;

1.351.2.2
date	2003.03.30.16.35.18;	author cagney;	state Exp;
branches;
next	;

1.323.2.1
date	2003.02.03.06.02.44;	author cagney;	state Exp;
branches;
next	1.323.2.2;

1.323.2.2
date	2003.02.03.21.13.28;	author cagney;	state Exp;
branches;
next	1.323.2.3;

1.323.2.3
date	2003.02.04.01.26.54;	author cagney;	state Exp;
branches;
next	1.323.2.4;

1.323.2.4
date	2003.02.04.19.59.01;	author cagney;	state Exp;
branches;
next	1.323.2.5;

1.323.2.5
date	2003.02.06.05.11.32;	author cagney;	state Exp;
branches;
next	;

1.311.2.1
date	2003.01.10.15.22.39;	author cagney;	state Exp;
branches;
next	1.311.2.2;

1.311.2.2
date	2003.01.10.21.56.43;	author cagney;	state Exp;
branches;
next	1.311.2.3;

1.311.2.3
date	2003.01.13.17.03.52;	author cagney;	state Exp;
branches;
next	1.311.2.4;

1.311.2.4
date	2003.01.20.00.38.13;	author cagney;	state Exp;
branches;
next	;

1.297.2.1
date	2002.12.23.08.48.07;	author jimb;	state Exp;
branches;
next	;

1.279.2.1
date	2002.11.26.02.32.12;	author jimb;	state Exp;
branches;
next	1.279.2.2;

1.279.2.2
date	2002.12.23.07.23.57;	author jimb;	state Exp;
branches;
next	;

1.268.2.1
date	2002.10.22.19.59.36;	author carlton;	state Exp;
branches;
next	1.268.2.2;

1.268.2.2
date	2002.10.26.17.12.03;	author drow;	state Exp;
branches;
next	1.268.2.3;

1.268.2.3
date	2002.11.22.17.15.55;	author carlton;	state Exp;
branches;
next	1.268.2.4;

1.268.2.4
date	2003.12.14.20.27.04;	author drow;	state Exp;
branches;
next	1.268.2.5;

1.268.2.5
date	2003.12.16.13.32.13;	author drow;	state Exp;
branches;
next	1.268.2.6;

1.268.2.6
date	2003.12.20.18.16.48;	author drow;	state Exp;
branches;
next	1.268.2.7;

1.268.2.7
date	2003.12.24.21.59.05;	author drow;	state Exp;
branches;
next	1.268.2.8;

1.268.2.8
date	2003.12.24.22.35.25;	author drow;	state Exp;
branches;
next	1.268.2.9;

1.268.2.9
date	2004.01.04.19.10.45;	author drow;	state Exp;
branches;
next	1.268.2.10;

1.268.2.10
date	2004.01.04.22.42.41;	author drow;	state Exp;
branches;
next	1.268.2.11;

1.268.2.11
date	2004.01.13.16.11.46;	author drow;	state Exp;
branches;
next	1.268.2.12;

1.268.2.12
date	2004.01.13.18.30.52;	author drow;	state Exp;
branches;
next	1.268.2.13;

1.268.2.13
date	2004.02.09.19.43.29;	author drow;	state Exp;
branches;
next	1.268.2.14;

1.268.2.14
date	2004.02.29.17.24.05;	author drow;	state Exp;
branches;
next	;

1.262.2.1
date	2002.09.20.18.52.15;	author carlton;	state Exp;
branches;
next	1.262.2.2;

1.262.2.2
date	2002.09.20.23.55.02;	author carlton;	state Exp;
branches;
next	1.262.2.3;

1.262.2.3
date	2002.09.24.00.04.49;	author carlton;	state Exp;
branches;
next	1.262.2.4;

1.262.2.4
date	2002.09.25.00.19.26;	author carlton;	state Exp;
branches;
next	1.262.2.5;

1.262.2.5
date	2002.09.26.00.04.42;	author carlton;	state Exp;
branches;
next	1.262.2.6;

1.262.2.6
date	2002.09.27.00.18.17;	author carlton;	state Exp;
branches;
next	1.262.2.7;

1.262.2.7
date	2002.09.27.20.03.04;	author carlton;	state Exp;
branches;
next	1.262.2.8;

1.262.2.8
date	2002.09.30.22.57.22;	author carlton;	state Exp;
branches;
next	1.262.2.9;

1.262.2.9
date	2002.10.09.23.08.10;	author carlton;	state Exp;
branches;
next	1.262.2.10;

1.262.2.10
date	2002.10.11.21.56.48;	author carlton;	state Exp;
branches;
next	1.262.2.11;

1.262.2.11
date	2002.10.11.22.22.52;	author carlton;	state Exp;
branches;
next	1.262.2.12;

1.262.2.12
date	2002.10.18.23.42.57;	author carlton;	state Exp;
branches;
next	1.262.2.13;

1.262.2.13
date	2002.10.22.00.17.27;	author carlton;	state Exp;
branches;
next	1.262.2.14;

1.262.2.14
date	2002.10.25.23.49.51;	author carlton;	state Exp;
branches;
next	1.262.2.15;

1.262.2.15
date	2002.11.14.00.07.54;	author carlton;	state Exp;
branches;
next	1.262.2.16;

1.262.2.16
date	2002.11.15.01.10.42;	author carlton;	state Exp;
branches;
next	1.262.2.17;

1.262.2.17
date	2002.11.15.19.18.35;	author carlton;	state Exp;
branches;
next	1.262.2.18;

1.262.2.18
date	2002.11.21.01.04.21;	author carlton;	state Exp;
branches;
next	1.262.2.19;

1.262.2.19
date	2002.11.22.01.16.13;	author carlton;	state Exp;
branches;
next	1.262.2.20;

1.262.2.20
date	2002.11.23.00.42.53;	author carlton;	state Exp;
branches;
next	1.262.2.21;

1.262.2.21
date	2002.11.24.18.47.17;	author carlton;	state Exp;
branches;
next	1.262.2.22;

1.262.2.22
date	2002.12.18.00.45.40;	author carlton;	state Exp;
branches;
next	1.262.2.23;

1.262.2.23
date	2002.12.19.01.03.06;	author carlton;	state Exp;
branches;
next	1.262.2.24;

1.262.2.24
date	2002.12.23.19.38.09;	author carlton;	state Exp;
branches;
next	1.262.2.25;

1.262.2.25
date	2003.02.07.19.17.43;	author carlton;	state Exp;
branches;
next	1.262.2.26;

1.262.2.26
date	2003.02.12.23.37.09;	author carlton;	state Exp;
branches;
next	1.262.2.27;

1.262.2.27
date	2003.03.06.00.56.21;	author carlton;	state Exp;
branches;
next	1.262.2.28;

1.262.2.28
date	2003.04.16.19.56.48;	author carlton;	state Exp;
branches;
next	1.262.2.29;

1.262.2.29
date	2003.04.30.23.11.30;	author carlton;	state Exp;
branches;
next	1.262.2.30;

1.262.2.30
date	2003.05.01.00.46.44;	author carlton;	state Exp;
branches;
next	1.262.2.31;

1.262.2.31
date	2003.05.23.18.40.33;	author carlton;	state Exp;
branches;
next	1.262.2.32;

1.262.2.32
date	2003.05.23.22.28.53;	author carlton;	state Exp;
branches;
next	1.262.2.33;

1.262.2.33
date	2003.06.16.20.00.44;	author carlton;	state Exp;
branches;
next	1.262.2.34;

1.262.2.34
date	2003.06.27.21.49.41;	author carlton;	state Exp;
branches;
next	1.262.2.35;

1.262.2.35
date	2003.08.05.17.13.03;	author carlton;	state Exp;
branches;
next	1.262.2.36;

1.262.2.36
date	2003.09.17.21.28.03;	author carlton;	state Exp;
branches;
next	1.262.2.37;

1.262.2.37
date	2003.09.30.18.16.06;	author carlton;	state Exp;
branches;
next	1.262.2.38;

1.262.2.38
date	2003.11.11.23.50.36;	author carlton;	state Exp;
branches;
next	1.262.2.39;

1.262.2.39
date	2003.12.16.00.00.07;	author carlton;	state Exp;
branches;
next	1.262.2.40;

1.262.2.40
date	2004.01.26.19.11.14;	author carlton;	state Exp;
branches;
next	;

1.257.2.1
date	2002.09.28.15.10.31;	author cagney;	state Exp;
branches;
next	1.257.2.2;

1.257.2.2
date	2002.10.23.03.14.16;	author cgf;	state Exp;
branches;
next	1.257.2.3;

1.257.2.3
date	2002.10.25.21.27.43;	author kettenis;	state Exp;
branches;
next	1.257.2.4;

1.257.2.4
date	2002.11.09.05.27.20;	author cagney;	state Exp;
branches;
next	1.257.2.5;

1.257.2.5
date	2002.11.25.22.05.38;	author cagney;	state Exp;
branches;
next	;

1.248.4.1
date	2002.08.26.19.57.38;	author cagney;	state Exp;
branches;
next	;

1.200.2.1
date	2002.05.28.23.47.00;	author kseitz;	state Exp;
branches;
next	1.200.2.2;

1.200.2.2
date	2002.06.20.01.31.57;	author kseitz;	state Exp;
branches;
next	1.200.2.3;

1.200.2.3
date	2002.06.24.23.59.57;	author kseitz;	state Exp;
branches;
next	1.200.2.4;

1.200.2.4
date	2002.07.22.21.46.54;	author kseitz;	state Exp;
branches;
next	1.200.2.5;

1.200.2.5
date	2002.08.09.18.34.22;	author kseitz;	state Exp;
branches;
next	1.200.2.6;

1.200.2.6
date	2002.08.30.22.52.41;	author kseitz;	state Exp;
branches;
next	1.200.2.7;

1.200.2.7
date	2002.10.01.00.45.59;	author kseitz;	state Exp;
branches;
next	1.200.2.8;

1.200.2.8
date	2002.10.01.16.19.07;	author kseitz;	state Exp;
branches;
next	1.200.2.9;

1.200.2.9
date	2002.11.04.00.17.28;	author ezannoni;	state Exp;
branches;
next	1.200.2.10;

1.200.2.10
date	2002.11.04.20.45.45;	author ezannoni;	state Exp;
branches;
next	;

1.190.2.1
date	2002.05.16.00.54.54;	author cagney;	state Exp;
branches;
next	1.190.2.2;

1.190.2.2
date	2002.05.16.19.07.57;	author cagney;	state Exp;
branches;
next	1.190.2.3;

1.190.2.3
date	2002.06.15.16.42.49;	author cagney;	state Exp;
branches;
next	1.190.2.4;

1.190.2.4
date	2002.06.25.20.02.37;	author cagney;	state Exp;
branches;
next	1.190.2.5;

1.190.2.5
date	2002.06.28.23.19.25;	author cagney;	state Exp;
branches;
next	1.190.2.6;

1.190.2.6
date	2002.07.03.18.43.56;	author cagney;	state Exp;
branches;
next	;

1.180.2.1
date	2002.05.08.18.26.26;	author jimb;	state Exp;
branches;
next	1.180.2.2;

1.180.2.2
date	2002.05.09.15.03.28;	author jimb;	state Exp;
branches;
next	1.180.2.3;

1.180.2.3
date	2002.05.09.15.18.33;	author jimb;	state Exp;
branches;
next	1.180.2.4;

1.180.2.4
date	2002.05.09.18.35.54;	author jimb;	state Exp;
branches;
next	1.180.2.5;

1.180.2.5
date	2002.05.09.18.47.13;	author jimb;	state Exp;
branches;
next	1.180.2.6;

1.180.2.6
date	2002.05.09.20.03.35;	author jimb;	state Exp;
branches;
next	1.180.2.7;

1.180.2.7
date	2002.05.09.23.58.46;	author jimb;	state Exp;
branches;
next	1.180.2.8;

1.180.2.8
date	2002.05.10.16.43.34;	author jimb;	state Exp;
branches;
next	;

1.163.2.1
date	2002.05.29.02.36.55;	author troth;	state Exp;
branches;
next	1.163.2.2;

1.163.2.2
date	2002.06.28.22.05.47;	author cagney;	state Exp;
branches;
next	1.163.2.3;

1.163.2.3
date	2002.07.19.18.22.06;	author cagney;	state Exp;
branches;
next	;

1.107.2.1
date	2001.11.18.05.08.36;	author cagney;	state Exp;
branches;
next	;

1.91.2.1
date	2001.07.06.19.16.56;	author dberlin;	state Exp;
branches;
next	;

1.25.2.1
date	2000.04.13.05.29.42;	author cagney;	state Exp;
branches;
next	1.25.2.2;

1.25.2.2
date	2000.04.19.03.37.11;	author cagney;	state Exp;
branches;
next	1.25.2.3;

1.25.2.3
date	2000.04.27.01.45.58;	author cagney;	state Exp;
branches;
next	1.25.2.4;

1.25.2.4
date	2000.05.01.16.30.55;	author shebs;	state Exp;
branches;
next	1.25.2.5;

1.25.2.5
date	2000.05.11.08.25.17;	author cagney;	state Exp;
branches;
next	1.25.2.6;

1.25.2.6
date	2000.05.15.07.15.21;	author eliz;	state Exp;
branches;
next	1.25.2.7;

1.25.2.7
date	2000.05.18.04.44.54;	author cagney;	state Exp;
branches;
next	1.25.2.8;

1.25.2.8
date	2000.07.05.08.15.10;	author cagney;	state Exp;
branches;
next	;

1.1.1.1
date	99.04.16.01.33.57;	author shebs;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	99.04.26.18.23.18;	author shebs;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	99.05.05.14.42.06;	author shebs;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	99.05.11.13.28.55;	author shebs;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	99.05.19.19.51.39;	author jsm;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	99.05.25.18.00.45;	author jsm;	state Exp;
branches;
next	1.1.1.7;

1.1.1.7
date	99.06.01.15.39.34;	author jsm;	state Exp;
branches;
next	1.1.1.8;

1.1.1.8
date	99.06.07.19.17.06;	author jsm;	state Exp;
branches;
next	1.1.1.9;

1.1.1.9
date	99.06.14.18.07.15;	author jsm;	state Exp;
branches;
next	1.1.1.10;

1.1.1.10
date	99.06.21.13.24.12;	author jsm;	state Exp;
branches;
next	1.1.1.11;

1.1.1.11
date	99.06.28.16.00.07;	author jsm;	state Exp;
branches;
next	1.1.1.12;

1.1.1.12
date	99.07.05.17.51.54;	author jsm;	state Exp;
branches;
next	1.1.1.13;

1.1.1.13
date	99.07.07.17.20.04;	author jsm;	state Exp;
branches;
next	1.1.1.14;

1.1.1.14
date	99.07.12.11.05.38;	author jsm;	state Exp;
branches;
next	1.1.1.15;

1.1.1.15
date	99.07.19.23.27.47;	author jsm;	state Exp;
branches;
next	1.1.1.16;

1.1.1.16
date	99.07.27.00.50.40;	author jsm;	state Exp;
branches;
next	1.1.1.17;

1.1.1.17
date	99.08.02.23.45.09;	author jsm;	state Exp;
branches;
next	1.1.1.18;

1.1.1.18
date	99.08.09.21.33.17;	author jsm;	state Exp;
branches;
next	1.1.1.19;

1.1.1.19
date	99.08.16.19.51.59;	author jsm;	state Exp;
branches;
next	1.1.1.20;

1.1.1.20
date	99.08.23.22.34.45;	author jsm;	state Exp;
branches;
next	1.1.1.21;

1.1.1.21
date	99.08.31.01.04.22;	author jsm;	state Exp;
branches;
next	1.1.1.22;

1.1.1.22
date	99.09.08.23.58.59;	author shebs;	state Exp;
branches;
next	1.1.1.23;

1.1.1.23
date	99.09.13.21.37.14;	author jsm;	state Exp;
branches;
next	1.1.1.24;

1.1.1.24
date	99.09.22.03.24.12;	author jsm;	state Exp;
branches;
next	1.1.1.25;

1.1.1.25
date	99.09.28.21.51.56;	author jsm;	state Exp;
branches;
next	1.1.1.26;

1.1.1.26
date	99.10.05.23.07.56;	author jsm;	state Exp;
branches;
next	1.1.1.27;

1.1.1.27
date	99.10.12.04.37.18;	author jsm;	state Exp;
branches;
next	1.1.1.28;

1.1.1.28
date	99.10.19.02.46.34;	author jsm;	state Exp;
branches;
next	1.1.1.29;

1.1.1.29
date	99.10.26.03.43.08;	author jsm;	state Exp;
branches;
next	1.1.1.30;

1.1.1.30
date	99.11.02.04.44.12;	author jsm;	state Exp;
branches;
next	1.1.1.31;

1.1.1.31
date	99.11.09.01.23.01;	author jsm;	state Exp;
branches;
next	1.1.1.32;

1.1.1.32
date	99.11.17.02.30.20;	author jsm;	state Exp;
branches;
next	1.1.1.33;

1.1.1.33
date	99.12.07.03.55.57;	author jsm;	state Exp;
branches;
next	1.1.1.34;

1.1.1.34
date	99.12.08.02.50.35;	author jsm;	state Exp;
branches;
next	1.1.1.35;

1.1.1.35
date	99.12.14.01.05.27;	author jsm;	state Exp;
branches;
next	1.1.1.36;

1.1.1.36
date	99.12.22.21.45.01;	author jsm;	state Exp;
branches;
next	1.1.1.37;

1.1.1.37
date	2000.01.06.03.06.34;	author jsm;	state Exp;
branches;
next	1.1.1.38;

1.1.1.38
date	2000.01.11.03.07.17;	author jsm;	state Exp;
branches;
next	1.1.1.39;

1.1.1.39
date	2000.01.18.00.54.07;	author jsm;	state Exp;
branches;
next	1.1.1.40;

1.1.1.40
date	2000.01.25.02.39.23;	author jsm;	state Exp;
branches;
next	1.1.1.41;

1.1.1.41
date	2000.01.26.21.48.42;	author jsm;	state Exp;
branches;
next	1.1.1.42;

1.1.1.42
date	2000.02.01.03.19.03;	author jsm;	state Exp;
branches;
next	1.1.1.43;

1.1.1.43
date	2000.02.02.00.21.03;	author jsm;	state Exp;
branches;
next	1.1.1.44;

1.1.1.44
date	2000.02.03.04.14.25;	author jsm;	state Exp;
branches;
next	1.1.1.45;

1.1.1.45
date	2000.02.05.07.29.38;	author jsm;	state Exp;
branches;
next	1.1.1.46;

1.1.1.46
date	2000.02.07.00.19.31;	author jsm;	state Exp;
branches;
next	;


desc
@@


1.1274
log
@Remove ada-varobj.h.

As a result of previous patch, extern functions in ada-varobj.c can be
made static, and ada-varobj.h can be removed too.

gdb:

2013-10-17  Yao Qi  <yao@@codesourcery.com>

	* Makefile.in (HFILES_NO_SRCDIR): Remove ada-varobj.h.
	* ada-varobj.c: Remove the include of ada-varobj.h.
	(ada_varobj_get_number_of_children): Declare.
	(ada_varobj_get_name_of_child): Make it static.
	(ada_varobj_get_path_expr_of_child): Likewise.
	(ada_varobj_get_value_of_child): Likewise.
	(ada_varobj_get_type_of_child): Likewise.
	(ada_varobj_get_value_of_array_variable): Likewise.
	* ada-varobj.h: Remove.
@
text
@# Copyright (C) 1989-2013 Free Software Foundation, Inc.

# This file is part of GDB.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

prefix = @@prefix@@
exec_prefix = @@exec_prefix@@

host_alias = @@host_alias@@
target_alias = @@target_alias@@
program_transform_name = @@program_transform_name@@
bindir = @@bindir@@
libdir = @@libdir@@
tooldir = $(libdir)/$(target_alias)

datadir = @@datadir@@
localedir = @@localedir@@
mandir = @@mandir@@
man1dir = $(mandir)/man1
man2dir = $(mandir)/man2
man3dir = $(mandir)/man3
man4dir = $(mandir)/man4
man5dir = $(mandir)/man5
man6dir = $(mandir)/man6
man7dir = $(mandir)/man7
man8dir = $(mandir)/man8
man9dir = $(mandir)/man9
infodir = @@infodir@@
datarootdir = @@datarootdir@@
docdir = @@docdir@@
htmldir = @@htmldir@@
pdfdir = @@pdfdir@@
includedir = @@includedir@@

# This can be referenced by `LIBINTL' as computed by
# ZW_GNU_GETTEXT_SISTER_DIR.
top_builddir = .

SHELL = @@SHELL@@
EXEEXT = @@EXEEXT@@

AWK = @@AWK@@
LN_S = @@LN_S@@

INSTALL = @@INSTALL@@
INSTALL_PROGRAM = @@INSTALL_PROGRAM@@
INSTALL_DATA = @@INSTALL_DATA@@

DESTDIR =

AR = @@AR@@
AR_FLAGS = qv
RANLIB = @@RANLIB@@
DLLTOOL = @@DLLTOOL@@
WINDRES = @@WINDRES@@
MIG = @@MIG@@

XGETTEXT = @@XGETTEXT@@
GMSGFMT = @@GMSGFMT@@
MSGMERGE = msgmerge

PACKAGE = @@PACKAGE@@
CATALOGS = @@CATALOGS@@

# If you are compiling with GCC, make sure that either 1) You have the
# fixed include files where GCC can reach them, or 2) You use the
# -traditional flag.  Otherwise the ioctl calls in inflow.c
# will be incorrectly compiled.  The "fixincludes" script in the gcc
# distribution will fix your include files up.
CC=@@CC@@

# Dependency tracking information.
DEPMODE = @@CCDEPMODE@@
DEPDIR = @@DEPDIR@@
depcomp = $(SHELL) $(srcdir)/../depcomp

# Note that these are overridden by GNU make-specific code below if
# GNU make is used.  The overrides implement dependency tracking.
COMPILE.pre = $(CC)
COMPILE.post = -c -o $@@
COMPILE = $(COMPILE.pre) $(INTERNAL_CFLAGS) $(COMPILE.post)
POSTCOMPILE = @@true

# Directory containing source files.
srcdir = @@srcdir@@
VPATH = @@srcdir@@

YACC=@@YACC@@

# This is used to rebuild ada-lex.c from ada-lex.l.  If the program is
# not defined, but ada-lex.c is present, compilation will continue,
# possibly with a warning.
FLEX = flex

YLWRAP = $(srcdir)/../ylwrap

# where to find makeinfo, preferably one designed for texinfo-2
MAKEINFO = @@MAKEINFO@@
MAKEINFOFLAGS = @@MAKEINFOFLAGS@@
MAKEINFO_EXTRA_FLAGS = @@MAKEINFO_EXTRA_FLAGS@@
MAKEINFO_CMD = $(MAKEINFO) $(MAKEINFOFLAGS) $(MAKEINFO_EXTRA_FLAGS)

MAKEHTML = $(MAKEINFO_CMD) --html
MAKEHTMLFLAGS =

# Set this up with gcc if you have gnu ld and the loader will print out
# line numbers for undefined references.
#CC_LD=gcc -static
CC_LD=$(CC)

# Where is our "include" directory?  Typically $(srcdir)/../include.
# This is essentially the header file directory for the library
# routines in libiberty.
INCLUDE_DIR =  $(srcdir)/../include
INCLUDE_CFLAGS = -I$(INCLUDE_DIR)

# Where is the "-liberty" library?  Typically in ../libiberty.
LIBIBERTY = ../libiberty/libiberty.a

# Where is the BFD library?  Typically in ../bfd.
BFD_DIR = ../bfd
BFD = $(BFD_DIR)/libbfd.a
BFD_SRC = $(srcdir)/$(BFD_DIR)
BFD_CFLAGS = -I$(BFD_DIR) -I$(BFD_SRC)

# Where is the decnumber library?  Typically in ../libdecnumber.
LIBDECNUMBER_DIR = ../libdecnumber
LIBDECNUMBER = $(LIBDECNUMBER_DIR)/libdecnumber.a
LIBDECNUMBER_SRC = $(srcdir)/$(LIBDECNUMBER_DIR)
LIBDECNUMBER_CFLAGS = -I$(LIBDECNUMBER_DIR) -I$(LIBDECNUMBER_SRC)

# Where is the READLINE library?  Typically in ../readline.
READLINE_DIR = ../readline
READLINE_SRC = $(srcdir)/$(READLINE_DIR)
READLINE = @@READLINE@@
READLINE_DEPS = @@READLINE_DEPS@@
READLINE_CFLAGS = @@READLINE_CFLAGS@@

# Where is expat?  This will be empty if expat was not available.
LIBEXPAT = @@LIBEXPAT@@

# Where is lzma?  This will be empty if lzma was not available.
LIBLZMA = @@LIBLZMA@@

# Where is libbabeltrace? This will be empty if lbabeltrace was not
# available.
LIBBABELTRACE = @@LIBBABELTRACE@@

WARN_CFLAGS = @@WARN_CFLAGS@@
WERROR_CFLAGS = @@WERROR_CFLAGS@@
GDB_WARN_CFLAGS = $(WARN_CFLAGS)
GDB_WERROR_CFLAGS = $(WERROR_CFLAGS)

GDB_WARN_CFLAGS_NO_FORMAT = `echo " $(GDB_WARN_CFLAGS) " \
		   | sed "s/ -Wformat-nonliteral / -Wno-format-nonliteral /g"`
GDB_WARN_CFLAGS_NO_DEFS = `echo " $(GDB_WARN_CFLAGS) " \
		   | sed "s/ -Wold-style-definition / -Wno-old-style-definition /g"`

RDYNAMIC = @@RDYNAMIC@@

# Where is the INTL library?  Typically in ../intl.
INTL = @@LIBINTL@@
INTL_DEPS = @@LIBINTL_DEP@@
INTL_CFLAGS = @@INCINTL@@

# Did the user give us a --with-gdb-datadir option?
GDB_DATADIR = @@GDB_DATADIR@@

# Flags to pass to gdb when invoked with "make run".
GDBFLAGS =

# Helper code from gnulib.
GNULIB_BUILDDIR = build-gnulib
LIBGNU = $(GNULIB_BUILDDIR)/import/libgnu.a
INCGNU = -I$(srcdir)/gnulib/import -I$(GNULIB_BUILDDIR)/import

# Generated headers in the gnulib directory.  These must be listed
# so that they are generated before other files are compiled.
GNULIB_H = $(GNULIB_BUILDDIR)/import/string.h @@GNULIB_STDINT_H@@

#
# CLI sub directory definitons
#
SUBDIR_CLI_OBS = \
	cli-dump.o \
	cli-decode.o cli-script.o cli-cmds.o cli-setshow.o \
	cli-logging.o \
	cli-interp.o cli-utils.o
SUBDIR_CLI_SRCS = \
	cli/cli-dump.c \
	cli/cli-decode.c cli/cli-script.c cli/cli-cmds.c cli/cli-setshow.c \
	cli/cli-logging.c \
	cli/cli-interp.c cli/cli-utils.c
SUBDIR_CLI_DEPS =
SUBDIR_CLI_LDFLAGS=
SUBDIR_CLI_CFLAGS=

#
# MI sub directory definitons
#
SUBDIR_MI_OBS = \
	mi-out.o mi-console.o \
	mi-cmds.o mi-cmd-catch.o mi-cmd-env.o \
	mi-cmd-var.o mi-cmd-break.o mi-cmd-stack.o \
	mi-cmd-file.o mi-cmd-disas.o mi-symbol-cmds.o mi-cmd-target.o \
	mi-cmd-info.o mi-interp.o \
	mi-main.o mi-parse.o mi-getopt.o
SUBDIR_MI_SRCS = \
	mi/mi-out.c mi/mi-console.c \
	mi/mi-cmds.c mi/mi-cmd-catch.c mi/mi-cmd-env.c \
	mi/mi-cmd-var.c mi/mi-cmd-break.c mi/mi-cmd-stack.c \
	mi/mi-cmd-file.c mi/mi-cmd-disas.c mi/mi-symbol-cmds.c \
	mi/mi-cmd-target.c mi/mi-cmd-info.c mi/mi-interp.c \
	mi/mi-main.c mi/mi-parse.c mi/mi-getopt.c
SUBDIR_MI_DEPS =
SUBDIR_MI_LDFLAGS=
SUBDIR_MI_CFLAGS=

#
# TUI sub directory definitions
#

SUBDIR_TUI_OBS = \
	tui-command.o \
	tui-data.o \
	tui-disasm.o \
	tui-file.o \
	tui-hooks.o \
	tui-interp.o \
	tui-io.o \
	tui-layout.o \
	tui-out.o \
	tui-regs.o \
	tui-source.o \
	tui-stack.o \
	tui-win.o \
	tui-windata.o \
	tui-wingeneral.o \
	tui-winsource.o \
	tui.o

SUBDIR_TUI_SRCS = \
	tui/tui-command.c \
	tui/tui-data.c \
	tui/tui-disasm.c \
	tui/tui-file.c \
	tui/tui-hooks.c \
	tui/tui-interp.c \
	tui/tui-io.c \
	tui/tui-layout.c \
	tui/tui-out.c \
	tui/tui-regs.c \
	tui/tui-source.c \
	tui/tui-stack.c \
	tui/tui-win.c \
	tui/tui-windata.c \
	tui/tui-wingeneral.c \
	tui/tui-winsource.c \
	tui/tui.c

SUBDIR_TUI_DEPS =
SUBDIR_TUI_LDFLAGS=
SUBDIR_TUI_CFLAGS= \
	-DTUI=1

#
# python sub directory definitons
#
SUBDIR_PYTHON_OBS = \
	python.o \
	py-arch.o \
	py-auto-load.o \
	py-block.o \
	py-bpevent.o \
	py-breakpoint.o \
	py-cmd.o \
	py-continueevent.o \
	py-event.o \
	py-evtregistry.o \
	py-evts.o \
	py-exitedevent.o \
	py-finishbreakpoint.o \
	py-frame.o \
	py-framefilter.o \
	py-function.o \
	py-gdb-readline.o \
	py-inferior.o \
	py-infthread.o \
	py-lazy-string.o \
	py-newobjfileevent.o \
	py-objfile.o \
	py-param.o \
	py-prettyprint.o \
	py-progspace.o \
	py-signalevent.o \
	py-stopevent.o \
	py-symbol.o \
	py-symtab.o \
	py-threadevent.o \
	py-type.o \
	py-utils.o \
	py-value.o

SUBDIR_PYTHON_SRCS = \
	python/python.c \
	python/py-arch.c \
	python/py-auto-load.c \
	python/py-block.c \
	python/py-bpevent.c \
	python/py-breakpoint.c \
	python/py-cmd.c \
	python/py-continueevent.c \
	python/py-event.c \
	python/py-evtregistry.c \
	python/py-evts.c \
	python/py-exitedevent.c \
	python/py-finishbreakpoint.c \
	python/py-frame.c \
	python/py-framefilter.c \
	python/py-function.c \
	python/py-gdb-readline.c \
	python/py-inferior.c \
	python/py-infthread.c \
	python/py-lazy-string.c \
	python/py-newobjfileevent.c \
	python/py-objfile.c \
	python/py-param.c \
	python/py-prettyprint.c \
	python/py-progspace.c \
	python/py-signalevent.c \
	python/py-stopevent.c \
	python/py-symbol.c \
	python/py-symtab.c \
	python/py-threadevent.c \
	python/py-type.c \
	python/py-utils.c \
	python/py-value.c
SUBDIR_PYTHON_DEPS =
SUBDIR_PYTHON_LDFLAGS=
SUBDIR_PYTHON_CFLAGS=

# Opcodes currently live in one of two places.  Either they are in the
# opcode library, typically ../opcodes, or they are in a header file
# in INCLUDE_DIR.
# Where is the "-lopcodes" library, with (some of) the opcode tables and
# disassemblers?
OPCODES_DIR = ../opcodes
OPCODES_SRC = $(srcdir)/$(OPCODES_DIR)
OPCODES = $(OPCODES_DIR)/libopcodes.a
# Where are the other opcode tables which only have header file
# versions?
OP_INCLUDE = $(INCLUDE_DIR)/opcode
# Some source files like to use #include "opcodes/file.h"
OPCODES_CFLAGS = -I$(OP_INCLUDE) -I$(OPCODES_SRC)/..

# The simulator is usually nonexistent; targets that include one
# should set this to list all the .o or .a files to be linked in.
SIM = @@SIM@@

WIN32LIBS = @@WIN32LIBS@@

# Tcl et al cflags and libraries
TCL = @@TCL_LIBRARY@@
TCL_CFLAGS = @@TCL_INCLUDE@@
GDBTKLIBS = @@GDBTKLIBS@@
# Extra flags that the GDBTK files need:
GDBTK_CFLAGS = @@GDBTK_CFLAGS@@

TK = @@TK_LIBRARY@@
TK_CFLAGS = @@TK_INCLUDE@@

X11_CFLAGS = @@TK_XINCLUDES@@
X11_LDFLAGS =
X11_LIBS =

WIN32LDAPP = @@WIN32LDAPP@@

LIBGUI = @@LIBGUI@@
GUI_CFLAGS_X = @@GUI_CFLAGS_X@@
IDE_CFLAGS=$(GUI_CFLAGS_X) $(IDE_CFLAGS_X)

ALL_TCL_CFLAGS = $(TCL_CFLAGS) $(TK_CFLAGS)

# The version of gdbtk we're building. This should be kept
# in sync with GDBTK_VERSION and friends in gdbtk.h.
GDBTK_VERSION = 1.0
GDBTK_LIBRARY = $(datadir)/insight$(GDBTK_VERSION)

# Gdbtk requires an absolute path to the source directory or
# the testsuite won't run properly.
GDBTK_SRC_DIR = @@GDBTK_SRC_DIR@@

SUBDIR_GDBTK_OBS = \
	gdbtk.o gdbtk-bp.o gdbtk-cmds.o gdbtk-hooks.o gdbtk-interp.o \
	gdbtk-register.o gdbtk-stack.o gdbtk-varobj.o gdbtk-wrapper.o
SUBDIR_GDBTK_SRCS = \
	gdbtk/generic/gdbtk.c gdbtk/generic/gdbtk-bp.c \
	gdbtk/generic/gdbtk-cmds.c gdbtk/generic/gdbtk-hooks.c \
	gdbtk/generic/gdbtk-interp.c \
	gdbtk/generic/gdbtk-register.c gdbtk/generic/gdbtk-stack.c \
	gdbtk/generic/gdbtk-varobj.c gdbtk/generic/gdbtk-wrapper.c \
	gdbtk/generic/gdbtk-main.c
SUBDIR_GDBTK_DEPS = $(LIBGUI) $(TCL_DEPS) $(TK_DEPS)
SUBDIR_GDBTK_LDFLAGS=
SUBDIR_GDBTK_CFLAGS= -DGDBTK

CONFIG_OBS= @@CONFIG_OBS@@
CONFIG_SRCS= @@CONFIG_SRCS@@
CONFIG_DEPS= @@CONFIG_DEPS@@
CONFIG_LDFLAGS = @@CONFIG_LDFLAGS@@
ENABLE_CFLAGS= @@ENABLE_CFLAGS@@
CONFIG_ALL= @@CONFIG_ALL@@
CONFIG_CLEAN= @@CONFIG_CLEAN@@
CONFIG_INSTALL = @@CONFIG_INSTALL@@
CONFIG_UNINSTALL = @@CONFIG_UNINSTALL@@
HAVE_NATIVE_GCORE_TARGET = @@HAVE_NATIVE_GCORE_TARGET@@

# -I. for config files.
# -I$(srcdir) for gdb internal headers.
# -I$(srcdir)/config for more generic config files.

# It is also possible that you will need to add -I/usr/include/sys if
# your system doesn't have fcntl.h in /usr/include (which is where it
# should be according to Posix).
DEFS = @@DEFS@@
GDB_CFLAGS = -I. -I$(srcdir) -I$(srcdir)/common -I$(srcdir)/config \
	-DLOCALEDIR="\"$(localedir)\"" $(DEFS)

# MH_CFLAGS, if defined, has host-dependent CFLAGS from the config directory.
GLOBAL_CFLAGS = $(MH_CFLAGS)

PROFILE_CFLAGS = @@PROFILE_CFLAGS@@

# CFLAGS is specifically reserved for setting from the command line
# when running make.  I.E.  "make CFLAGS=-Wmissing-prototypes".
CFLAGS = @@CFLAGS@@

# Set by configure, for e.g. expat.  Python installations are such that
# C headers are included using their basename (for example, we #include
# <Python.h> rather than, say, <python/Python.h>).  Since the file names
# are sometimes a little generic, we think that the risk of collision
# with other header files is high.  If that happens, we try to mitigate
# a bit the consequences by putting the Python includes last in the list.
INTERNAL_CPPFLAGS = @@CPPFLAGS@@ @@PYTHON_CPPFLAGS@@

# Need to pass this to testsuite for "make check".  Probably should be
# consistent with top-level Makefile.in and gdb/testsuite/Makefile.in
# so "make check" has the same result no matter where it is run.
CXXFLAGS = -g -O

# INTERNAL_CFLAGS is the aggregate of all other *CFLAGS macros.
INTERNAL_CFLAGS_BASE = \
	$(CFLAGS) $(GLOBAL_CFLAGS) $(PROFILE_CFLAGS) \
	$(GDB_CFLAGS) $(OPCODES_CFLAGS) $(READLINE_CFLAGS) \
	$(BFD_CFLAGS) $(INCLUDE_CFLAGS) $(LIBDECNUMBER_CFLAGS) \
	$(INTL_CFLAGS) $(INCGNU) $(ENABLE_CFLAGS) $(INTERNAL_CPPFLAGS)
INTERNAL_WARN_CFLAGS = $(INTERNAL_CFLAGS_BASE) $(GDB_WARN_CFLAGS)
INTERNAL_CFLAGS = $(INTERNAL_WARN_CFLAGS) $(GDB_WERROR_CFLAGS)

# LDFLAGS is specifically reserved for setting from the command line
# when running make.
LDFLAGS = @@LDFLAGS@@

# Profiling options need to go here to work.
# I think it's perfectly reasonable for a user to set -pg in CFLAGS
# and have it work; that's why CFLAGS is here.
# PROFILE_CFLAGS is _not_ included, however, because we use monstartup.
INTERNAL_LDFLAGS = $(CFLAGS) $(GLOBAL_CFLAGS) $(MH_LDFLAGS) $(LDFLAGS) $(CONFIG_LDFLAGS)

# If your system is missing alloca(), or, more likely, it's there but
# it doesn't work, then refer to libiberty.

# Libraries and corresponding dependencies for compiling gdb.
# XM_CLIBS, defined in *config files, have host-dependent libs.
# LIBIBERTY appears twice on purpose.
CLIBS = $(SIM) $(READLINE) $(OPCODES) $(BFD) $(INTL) $(LIBIBERTY) $(LIBDECNUMBER) \
	$(XM_CLIBS) $(NAT_CLIBS) $(GDBTKLIBS) @@LIBS@@ @@PYTHON_LIBS@@ \
	$(LIBEXPAT) $(LIBLZMA) $(LIBBABELTRACE) \
	$(LIBIBERTY) $(WIN32LIBS) $(LIBGNU)
CDEPS = $(XM_CDEPS) $(NAT_CDEPS) $(SIM) $(BFD) $(READLINE_DEPS) \
	$(OPCODES) $(INTL_DEPS) $(LIBIBERTY) $(CONFIG_DEPS) $(LIBGNU)

ADD_FILES = $(XM_ADD_FILES) $(TM_ADD_FILES) $(NAT_ADD_FILES)
ADD_DEPS = $(XM_ADD_FILES) $(TM_ADD_FILES) $(NAT_ADD_FILES)

DIST=gdb

LINT=/usr/5bin/lint
LINTFLAGS= $(GDB_CFLAGS) $(OPCODES_CFLAGS) $(READLINE_CFLAGS) \
	$(BFD_CFLAGS) $(INCLUDE_CFLAGS) \
	$(INTL_CFLAGS)

RUNTEST = runtest
RUNTESTFLAGS=

# XML files to build in to GDB.
XMLFILES = $(srcdir)/features/gdb-target.dtd $(srcdir)/features/xinclude.dtd \
	$(srcdir)/features/library-list.dtd \
	$(srcdir)/features/library-list-aix.dtd \
	$(srcdir)/features/library-list-svr4.dtd $(srcdir)/features/osdata.dtd \
	$(srcdir)/features/threads.dtd $(srcdir)/features/traceframe-info.dtd \
	$(srcdir)/features/btrace.dtd

# This is ser-unix.o for any system which supports a v7/BSD/SYSV/POSIX
# interface to the serial port.  Hopefully if get ported to OS/2, VMS,
# etc., then there will be (as part of the C library or perhaps as
# part of libiberty) a POSIX interface.  But at least for now the
# host-dependent makefile fragment might need to use something else
# besides ser-unix.o
SER_HARDWIRE = @@SER_HARDWIRE@@

# The `remote' debugging target is supported for most architectures,
# but not all (e.g. 960)
REMOTE_OBS = remote.o dcache.o tracepoint.o ax-general.o ax-gdb.o remote-fileio.o \
	remote-notif.o ctf.o

# This is remote-sim.o if a simulator is to be linked in.
SIM_OBS = @@SIM_OBS@@

# Target-dependent object files.
TARGET_OBS = @@TARGET_OBS@@

# All target-dependent objects files that require 64-bit CORE_ADDR
# (used with --enable-targets=all --enable-64-bit-bfd).
ALL_64_TARGET_OBS = \
	aarch64-tdep.o aarch64-linux-tdep.o aarch64-newlib-tdep.o \
	alphabsd-tdep.o alphafbsd-tdep.o alpha-linux-tdep.o alpha-mdebug-tdep.o \
	alphanbsd-tdep.o alphaobsd-tdep.o alpha-osf1-tdep.o alpha-tdep.o \
	amd64fbsd-tdep.o amd64-darwin-tdep.o amd64-dicos-tdep.o \
	amd64-linux-tdep.o amd64nbsd-tdep.o \
	amd64obsd-tdep.o amd64-sol2-tdep.o amd64-tdep.o amd64-windows-tdep.o \
	ia64-hpux-tdep.o ia64-linux-tdep.o ia64-vms-tdep.o ia64-tdep.o \
	mips64obsd-tdep.o \
	sparc64fbsd-tdep.o sparc64-linux-tdep.o sparc64nbsd-tdep.o \
	sparc64obsd-tdep.o sparc64-sol2-tdep.o sparc64-tdep.o

# All other target-dependent objects files (used with --enable-targets=all).
ALL_TARGET_OBS = \
	armbsd-tdep.o arm-linux-tdep.o arm-symbian-tdep.o \
	armnbsd-tdep.o armobsd-tdep.o \
	arm-tdep.o arm-wince-tdep.o \
	avr-tdep.o \
	bfin-linux-tdep.o bfin-tdep.o \
	cris-linux-tdep.o cris-tdep.o \
	dicos-tdep.o \
	frv-linux-tdep.o frv-tdep.o \
	h8300-tdep.o \
	hppabsd-tdep.o hppanbsd-tdep.o hppaobsd-tdep.o \
	hppa-hpux-tdep.o hppa-linux-tdep.o hppa-tdep.o \
	i386bsd-tdep.o i386-cygwin-tdep.o i386fbsd-tdep.o i386gnu-tdep.o \
	i386-linux-tdep.o i386nbsd-tdep.o i386-nto-tdep.o i386obsd-tdep.o \
	i386-sol2-tdep.o i386-tdep.o i387-tdep.o \
	i386-dicos-tdep.o i386-darwin-tdep.o \
	iq2000-tdep.o \
	linux-tdep.o \
	lm32-tdep.o \
	m32c-tdep.o \
	m32r-linux-tdep.o m32r-tdep.o \
	m68hc11-tdep.o \
	m68kbsd-tdep.o m68klinux-tdep.o m68k-tdep.o \
	m88k-tdep.o \
	mep-tdep.o \
	microblaze-tdep.o microblaze-linux-tdep.o \
	mips-irix-tdep.o mips-linux-tdep.o \
	mipsnbsd-tdep.o mips-tdep.o \
	mn10300-linux-tdep.o mn10300-tdep.o \
	moxie-tdep.o \
	msp430-tdep.o \
	mt-tdep.o \
	nios2-tdep.o nios2-linux-tdep.o \
	nto-tdep.o \
	ppc-linux-tdep.o ppcfbsd-tdep.o ppcnbsd-tdep.o ppcobsd-tdep.o  \
	ppc-sysv-tdep.o ppc64-tdep.o rl78-tdep.o \
	rs6000-aix-tdep.o rs6000-tdep.o solib-aix.o ppc-ravenscar-thread.o \
	rs6000-lynx178-tdep.o \
	rx-tdep.o \
	s390-tdep.o \
	score-tdep.o \
	sh64-tdep.o sh-linux-tdep.o shnbsd-tdep.o sh-tdep.o \
	sparc-linux-tdep.o sparcnbsd-tdep.o sparcobsd-tdep.o \
	sparc-sol2-tdep.o sparc-tdep.o sparc-ravenscar-thread.o \
	spu-tdep.o spu-multiarch.o solib-spu.o \
	tic6x-tdep.o tic6x-linux-tdep.o \
	tilegx-tdep.o tilegx-linux-tdep.o \
	v850-tdep.o \
	vaxnbsd-tdep.o vaxobsd-tdep.o vax-tdep.o \
	xstormy16-tdep.o \
	xtensa-config.o xtensa-tdep.o xtensa-linux-tdep.o \
	glibc-tdep.o \
	bsd-uthread.o \
	nbsd-tdep.o obsd-tdep.o \
	sol2-tdep.o \
	solib-frv.o solib-irix.o solib-svr4.o \
	solib-som.o solib-pa64.o solib-darwin.o solib-dsbt.o \
	dbug-rom.o dink32-rom.o ppcbug-rom.o m32r-rom.o dsrec.o monitor.o \
	remote-m32r-sdi.o remote-mips.o \
	xcoffread.o \
	symfile-mem.o \
	windows-tdep.o \
	linux-record.o \
	ravenscar-thread.o

# Host-dependent makefile fragment comes in here.
@@host_makefile_frag@@
# End of host-dependent makefile fragment

FLAGS_TO_PASS = \
	"prefix=$(prefix)" \
	"exec_prefix=$(exec_prefix)" \
	"infodir=$(infodir)" \
	"datarootdir=$(datarootdir)" \
	"docdir=$(docdir)" \
	"htmldir=$(htmldir)" \
	"pdfdir=$(pdfdir)" \
	"libdir=$(libdir)" \
	"mandir=$(mandir)" \
	"datadir=$(datadir)" \
	"includedir=$(includedir)" \
	"against=$(against)" \
	"DESTDIR=$(DESTDIR)" \
	"AR=$(AR)" \
	"AR_FLAGS=$(AR_FLAGS)" \
	"CC=$(CC)" \
	"CFLAGS=$(CFLAGS)" \
	"CXX=$(CXX)" \
	"CXXFLAGS=$(CXXFLAGS)" \
	"DLLTOOL=$(DLLTOOL)" \
	"LDFLAGS=$(LDFLAGS)" \
	"RANLIB=$(RANLIB)" \
	"MAKEINFO=$(MAKEINFO)" \
	"MAKEINFOFLAGS=$(MAKEINFOFLAGS)" \
	"MAKEINFO_EXTRA_FLAGS=$(MAKEINFO_EXTRA_FLAGS)" \
	"MAKEHTML=$(MAKEHTML)" \
	"MAKEHTMLFLAGS=$(MAKEHTMLFLAGS)" \
	"INSTALL=$(INSTALL)" \
	"INSTALL_PROGRAM=$(INSTALL_PROGRAM)" \
	"INSTALL_DATA=$(INSTALL_DATA)" \
	"RUNTEST=$(RUNTEST)" \
	"RUNTESTFLAGS=$(RUNTESTFLAGS)"

# Flags that we pass when building the testsuite.

# empty for native, $(target_alias)/ for cross
target_subdir = @@target_subdir@@

CC_FOR_TARGET = ` \
  if [ -f $${rootme}/../gcc/xgcc ] ; then \
    if [ -f $${rootme}/../$(target_subdir)newlib/Makefile ] ; then \
      echo $${rootme}/../gcc/xgcc -B$${rootme}/../gcc/ -idirafter $${rootme}/$(target_subdir)newlib/targ-include -idirafter $${rootsrc}/../$(target_subdir)newlib/libc/include -nostdinc -B$${rootme}/../$(target_subdir)newlib/; \
    else \
      echo $${rootme}/../gcc/xgcc -B$${rootme}/../gcc/; \
    fi; \
  else \
    if [ "$(host_canonical)" = "$(target_canonical)" ] ; then \
      echo $(CC); \
    else \
      t='$(program_transform_name)'; echo gcc | sed -e '' $$t; \
    fi; \
  fi`

CXX = gcc
CXX_FOR_TARGET = ` \
  if [ -f $${rootme}/../gcc/xgcc ] ; then \
    if [ -f $${rootme}/../$(target_subdir)newlib/Makefile ] ; then \
      echo $${rootme}/../gcc/xgcc -B$${rootme}/../gcc/ -idirafter $${rootme}/$(target_subdir)newlib/targ-include -idirafter $${rootsrc}/../$(target_subdir)newlib/libc/include -nostdinc -B$${rootme}/../$(target_subdir)newlib/; \
    else \
      echo $${rootme}/../gcc/xgcc -B$${rootme}/../gcc/; \
    fi; \
  else \
    if [ "$(host_canonical)" = "$(target_canonical)" ] ; then \
      echo $(CXX); \
    else \
      t='$(program_transform_name)'; echo gcc | sed -e '' $$t; \
    fi; \
  fi`

# The use of $$(x_FOR_TARGET) reduces the command line length by not
# duplicating the lengthy definition.
TARGET_FLAGS_TO_PASS = \
	"prefix=$(prefix)" \
	"exec_prefix=$(exec_prefix)" \
	"against=$(against)" \
	'CC=$$(CC_FOR_TARGET)' \
	"CC_FOR_TARGET=$(CC_FOR_TARGET)" \
	"CFLAGS=$(CFLAGS)" \
	'CXX=$$(CXX_FOR_TARGET)' \
	"CXX_FOR_TARGET=$(CXX_FOR_TARGET)" \
	"CXXFLAGS=$(CXXFLAGS)" \
	"INSTALL=$(INSTALL)" \
	"INSTALL_PROGRAM=$(INSTALL_PROGRAM)" \
	"INSTALL_DATA=$(INSTALL_DATA)" \
	"MAKEINFO=$(MAKEINFO)" \
	"MAKEHTML=$(MAKEHTML)" \
	"RUNTEST=$(RUNTEST)" \
	"RUNTESTFLAGS=$(RUNTESTFLAGS)" \
	"FORCE_PARALLEL=$(FORCE_PARALLEL)"

# All source files that go into linking GDB.
# Links made at configuration time should not be specified here, since
# SFILES is used in building the distribution archive.

SFILES = ada-exp.y ada-lang.c ada-typeprint.c ada-valprint.c ada-tasks.c \
	ada-varobj.c \
	addrmap.c auto-load.c \
	auxv.c ax-general.c ax-gdb.c \
	agent.c \
	bcache.c \
	bfd-target.c \
	block.c blockframe.c \
	breakpoint.c break-catch-sig.c break-catch-throw.c \
	build-id.c buildsym.c \
	c-exp.y c-lang.c c-typeprint.c c-valprint.c c-varobj.c \
	charset.c cleanups.c cli-out.c coffread.c coff-pe-read.c \
	complaints.c completer.c continuations.c corefile.c corelow.c \
	cp-abi.c cp-support.c cp-namespace.c cp-valprint.c \
	d-lang.c d-valprint.c \
	cp-name-parser.y \
	dbxread.c demangle.c dictionary.c disasm.c doublest.c dummy-frame.c \
	dwarf2expr.c dwarf2loc.c dwarf2read.c dwarf2-frame.c \
	dwarf2-frame-tailcall.c \
	elfread.c environ.c eval.c event-loop.c event-top.c \
	exceptions.c expprint.c \
	f-exp.y f-lang.c f-typeprint.c f-valprint.c filesystem.c \
	findcmd.c findvar.c frame.c frame-base.c frame-unwind.c \
	gdbarch.c arch-utils.c gdb_bfd.c gdb_obstack.c \
	gdbtypes.c gnu-v2-abi.c gnu-v3-abi.c \
	go-exp.y go-lang.c go-typeprint.c go-valprint.c \
	inf-loop.c \
	infcall.c \
	infcmd.c inflow.c infrun.c \
	inline-frame.c \
	interps.c \
	jv-exp.y jv-lang.c jv-valprint.c jv-typeprint.c jv-varobj.c \
	language.c linespec.c minidebug.c \
	m2-exp.y m2-lang.c m2-typeprint.c m2-valprint.c \
	macrotab.c macroexp.c macrocmd.c macroscope.c main.c maint.c \
	mdebugread.c memattr.c mem-break.c minsyms.c mipsread.c memory-map.c \
	memrange.c mi/mi-common.c \
	objc-lang.c \
	objfiles.c osabi.c observer.c osdata.c \
	opencl-lang.c \
	p-exp.y p-lang.c p-typeprint.c p-valprint.c parse.c printcmd.c \
	proc-service.list progspace.c \
	prologue-value.c psymtab.c \
	regcache.c reggroups.c remote.c remote-fileio.c remote-notif.c reverse.c \
	sentinel-frame.c \
	serial.c ser-base.c ser-unix.c skip.c \
	solib.c solib-target.c source.c \
	stabsread.c stack.c probe.c stap-probe.c std-regs.c \
	symfile.c symfile-debug.c symfile-mem.c symmisc.c symtab.c \
	target.c target-descriptions.c target-memory.c \
	thread.c top.c tracepoint.c \
	trad-frame.c \
	tramp-frame.c \
	typeprint.c \
	ui-out.c utils.c ui-file.h ui-file.c \
	user-regs.c \
	valarith.c valops.c valprint.c value.c varobj.c common/vec.c \
	xml-tdesc.c xml-support.c \
	inferior.c gdb_usleep.c \
	record.c record-full.c gcore.c \
	jit.c \
	xml-syscall.c \
	annotate.c common/signals.c copying.c dfp.c gdb.c inf-child.c \
	regset.c sol-thread.c windows-termcap.c \
	common/gdb_vecs.c common/common-utils.c common/xml-utils.c \
	common/ptid.c common/buffer.c gdb-dlfcn.c common/agent.c \
	common/format.c common/filestuff.c btrace.c record-btrace.c ctf.c \
	target/waitstatus.c

LINTFILES = $(SFILES) $(YYFILES) $(CONFIG_SRCS) init.c

# Header files that need to have srcdir added.  Note that in the cases
# where we use a macro like $(gdbcmd_h), things are carefully arranged
# so that each .h file is listed exactly once (M-x tags-search works
# wrong if TAGS has files twice).  Because this is tricky to get
# right, it is probably easiest just to list .h files here directly.

HFILES_NO_SRCDIR = \
common/gdb_signals.h common/gdb_thread_db.h common/gdb_vecs.h \
common/i386-xstate.h common/linux-ptrace.h common/mips-linux-watch.h \
proc-utils.h aarch64-tdep.h arm-tdep.h ax-gdb.h ppcfbsd-tdep.h \
ppcnbsd-tdep.h cli-out.h gdb_expat.h breakpoint.h infcall.h obsd-tdep.h \
exec.h m32r-tdep.h osabi.h gdbcore.h solib-som.h amd64bsd-nat.h \
i386bsd-nat.h xml-support.h xml-tdesc.h alphabsd-tdep.h gdb_obstack.h \
ia64-tdep.h ada-lang.h varobj.h frv-tdep.h nto-tdep.h serial.h \
c-lang.h d-lang.h go-lang.h frame.h event-loop.h block.h cli/cli-setshow.h \
cli/cli-decode.h cli/cli-cmds.h cli/cli-utils.h \
cli/cli-script.h macrotab.h symtab.h common/version.h \
gnulib/import/string.in.h gnulib/import/str-two-way.h \
gnulib/import/stdint.in.h remote.h remote-notif.h gdb.h sparc-nat.h \
gdbthread.h dwarf2-frame.h dwarf2-frame-tailcall.h nbsd-nat.h dcache.h \
amd64-nat.h s390-tdep.h arm-linux-tdep.h exceptions.h macroscope.h \
gdbarch.h bsd-uthread.h common/gdb_stat.h memory-map.h	memrange.h \
mdebugread.h m88k-tdep.h stabsread.h hppa-linux-offsets.h linux-fork.h \
ser-unix.h inf-ptrace.h terminal.h ui-out.h frame-base.h \
f-lang.h dwarf2loc.h value.h sparc-tdep.h defs.h target-descriptions.h \
objfiles.h common/vec.h disasm.h mips-tdep.h ser-base.h \
gdb_curses.h bfd-target.h memattr.h inferior.h ax.h dummy-frame.h \
inflow.h fbsd-nat.h ia64-libunwind-tdep.h completer.h inf-ttrace.h \
solib-target.h gdb_vfork.h alpha-tdep.h dwarf2expr.h \
m2-lang.h stack.h charset.h cleanups.h addrmap.h command.h solist.h source.h \
target.h prologue-value.h cp-abi.h tui/tui-hooks.h tui/tui.h \
tui/tui-file.h tui/tui-command.h tui/tui-disasm.h tui/tui-wingeneral.h \
tui/tui-windata.h tui/tui-data.h tui/tui-win.h tui/tui-stack.h \
tui/tui-winsource.h tui/tui-regs.h tui/tui-io.h tui/tui-layout.h \
tui/tui-source.h sol2-tdep.h gregset.h sh-tdep.h sh64-tdep.h \
expression.h score-tdep.h gdb_select.h ser-tcp.h \
build-id.h buildsym.h valprint.h \
typeprint.h mi/mi-getopt.h mi/mi-parse.h mi/mi-console.h \
mi/mi-out.h mi/mi-main.h mi/mi-common.h mi/mi-cmds.h linux-nat.h \
complaints.h gdb_proc_service.h gdb_regex.h xtensa-tdep.h inf-loop.h \
common/gdb_wait.h common/gdb_assert.h solib.h ppc-tdep.h cp-support.h glibc-tdep.h \
interps.h auxv.h gdbcmd.h tramp-frame.h mipsnbsd-tdep.h	\
amd64-linux-tdep.h linespec.h i387-tdep.h mn10300-tdep.h \
sparc64-tdep.h monitor.h ppcobsd-tdep.h srec.h solib-pa64.h \
coff-pe-read.h parser-defs.h gdb_ptrace.h mips-linux-tdep.h \
m68k-tdep.h spu-tdep.h jv-lang.h environ.h solib-irix.h amd64-tdep.h \
doublest.h regset.h hppa-tdep.h ppc-linux-tdep.h ppc64-tdep.h \
rs6000-tdep.h rs6000-aix-tdep.h \
common/gdb_locale.h common/gdb_dirent.h arch-utils.h trad-frame.h gnu-nat.h \
language.h nbsd-tdep.h solib-svr4.h \
macroexp.h ui-file.h regcache.h tracepoint.h i386-tdep.h \
inf-child.h p-lang.h event-top.h gdbtypes.h user-regs.h \
regformats/regdef.h config/alpha/nm-osf3.h  config/i386/nm-i386gnu.h \
config/i386/nm-fbsd.h \
config/nm-nto.h config/sparc/nm-sol2.h config/nm-linux.h \
top.h bsd-kvm.h gdb-stabs.h reggroups.h \
annotate.h sim-regno.h dictionary.h dfp.h main.h frame-unwind.h	\
remote-fileio.h i386-linux-tdep.h vax-tdep.h objc-lang.h \
sentinel-frame.h bcache.h symfile.h windows-tdep.h linux-tdep.h \
gdb_usleep.h jit.h xml-syscall.h microblaze-tdep.h \
psymtab.h psympriv.h progspace.h bfin-tdep.h ia64-hpux-tdep.h \
amd64-darwin-tdep.h charset-list.h \
config/djgpp/langinfo.h config/djgpp/nl_types.h darwin-nat.h \
dicos-tdep.h filesystem.h gcore.h gdb_wchar.h hppabsd-tdep.h \
i386-darwin-tdep.h i386-nat.h linux-record.h moxie-tdep.h nios2-tdep.h \
osdata.h procfs.h python/py-event.h python/py-events.h python/py-stopevent.h \
python/python-internal.h python/python.h ravenscar-thread.h record.h \
record-full.h solib-aix.h \
solib-darwin.h solib-ia64-hpux.h solib-spu.h windows-nat.h xcoffread.h \
gnulib/import/extra/snippet/arg-nonnull.h gnulib/import/extra/snippet/c++defs.h \
gnulib/import/extra/snippet/warn-on-use.h \
gnulib/import/stddef.in.h gnulib/import/inttypes.in.h inline-frame.h skip.h \
common/common-utils.h common/xml-utils.h common/buffer.h common/ptid.h \
common/format.h common/host-defs.h utils.h common/queue.h common/gdb_string.h \
common/linux-osdata.h gdb-dlfcn.h auto-load.h probe.h stap-probe.h \
gdb_bfd.h sparc-ravenscar-thread.h ppc-ravenscar-thread.h common/linux-btrace.h \
ctf.h common/i386-cpuid.h common/i386-gcc-cpuid.h target/resume.h \
target/wait.h target/waitstatus.h nat/linux-nat.h nat/linux-waitpid.h

# Header files that already have srcdir in them, or which are in objdir.

HFILES_WITH_SRCDIR = ../bfd/bfd.h jit-reader.h


# GDB "info" files, which should be included in their entirety
INFOFILES = gdb.info*

REMOTE_EXAMPLES = m68k-stub.c i386-stub.c sparc-stub.c rem-multi.shar

# {X,T,NAT}DEPFILES are something of a pain in that it's hard to
# default their values the way we do for SER_HARDWIRE; in the future
# maybe much of the stuff now in {X,T,NAT}DEPFILES will go into other
# variables analogous to SER_HARDWIRE which get defaulted in this
# Makefile.in

DEPFILES = $(TARGET_OBS) $(SER_HARDWIRE) $(NATDEPFILES) \
	   $(REMOTE_OBS) $(SIM_OBS)

SOURCES = $(SFILES) $(ALLDEPFILES) $(YYFILES) $(CONFIG_SRCS)
# Don't include YYFILES (*.c) because we already include *.y in SFILES,
# and it's more useful to see it in the .y file.
TAGFILES_NO_SRCDIR = $(SFILES) $(HFILES_NO_SRCDIR) $(ALLDEPFILES) \
	$(CONFIG_SRCS)
TAGFILES_WITH_SRCDIR = $(HFILES_WITH_SRCDIR)

COMMON_OBS = $(DEPFILES) $(CONFIG_OBS) $(YYOBJ) \
	version.o \
	annotate.o \
	addrmap.o \
	auto-load.o auxv.o \
	agent.o \
	bfd-target.o \
	blockframe.o breakpoint.o break-catch-sig.o break-catch-throw.o \
	findvar.o regcache.o cleanups.o \
	charset.o continuations.o corelow.o disasm.o dummy-frame.o dfp.o \
	source.o value.o eval.o valops.o valarith.o valprint.o printcmd.o \
	block.o symtab.o psymtab.o symfile.o symfile-debug.o symmisc.o \
	linespec.o dictionary.o \
	infcall.o \
	infcmd.o infrun.o \
	expprint.o environ.o stack.o thread.o \
	exceptions.o \
	filesystem.o \
	filestuff.o \
	inf-child.o \
	interps.o \
	minidebug.o \
	main.o \
	macrotab.o macrocmd.o macroexp.o macroscope.o \
	mi-common.o \
	event-loop.o event-top.o inf-loop.o completer.o \
	gdbarch.o arch-utils.o gdbtypes.o gdb_bfd.o gdb_obstack.o \
	osabi.o copying.o \
	memattr.o mem-break.o target.o parse.o language.o \
	build-id.o buildsym.o \
	findcmd.o \
	std-regs.o \
	signals.o \
	exec.o reverse.o \
	bcache.o objfiles.o observer.o minsyms.o maint.o demangle.o \
	dbxread.o coffread.o coff-pe-read.o \
	dwarf2read.o mipsread.o stabsread.o corefile.o \
	dwarf2expr.o dwarf2loc.o dwarf2-frame.o dwarf2-frame-tailcall.o \
	ada-lang.o c-lang.o d-lang.o f-lang.o objc-lang.o \
	ada-tasks.o ada-varobj.o c-varobj.o \
	ui-out.o cli-out.o \
	varobj.o vec.o \
	go-lang.o go-valprint.o go-typeprint.o \
	jv-lang.o jv-valprint.o jv-typeprint.o jv-varobj.o \
	m2-lang.o opencl-lang.o p-lang.o p-typeprint.o p-valprint.o \
	sentinel-frame.o \
	complaints.o typeprint.o \
	ada-typeprint.o c-typeprint.o f-typeprint.o m2-typeprint.o \
	ada-valprint.o c-valprint.o cp-valprint.o d-valprint.o f-valprint.o \
	m2-valprint.o \
	serial.o mdebugread.o top.o utils.o \
	ui-file.o \
	user-regs.o \
	frame.o frame-unwind.o doublest.o \
	frame-base.o \
	inline-frame.o \
	gnu-v2-abi.o gnu-v3-abi.o cp-abi.o cp-support.o \
	cp-namespace.o \
	reggroups.o regset.o \
	trad-frame.o \
	tramp-frame.o \
	solib.o solib-target.o \
	prologue-value.o memory-map.o memrange.o \
	xml-support.o xml-syscall.o xml-utils.o \
	target-descriptions.o target-memory.o xml-tdesc.o xml-builtin.o \
	inferior.o osdata.o gdb_usleep.o record.o record-full.o gcore.o \
	gdb_vecs.o jit.o progspace.o skip.o probe.o \
	common-utils.o buffer.o ptid.o gdb-dlfcn.o common-agent.o \
	format.o registry.o btrace.o record-btrace.o waitstatus.o

TSOBS = inflow.o

SUBDIRS = doc @@subdirs@@ data-directory $(GNULIB_BUILDDIR)
CLEANDIRS = $(SUBDIRS)

# List of subdirectories in the build tree that must exist.
# This is used to force build failures in existing trees when
# a new directory is added.
# The format here is for the `case' shell command.
REQUIRED_SUBDIRS = doc | testsuite | $(GNULIB_BUILDDIR) | data-directory

# For now, shortcut the "configure GDB for fewer languages" stuff.
YYFILES = c-exp.c \
	cp-name-parser.c \
	ada-lex.c \
	ada-exp.c \
	jv-exp.c \
	f-exp.c go-exp.c m2-exp.c p-exp.c
YYOBJ = c-exp.o \
	cp-name-parser.o \
	ada-exp.o \
	jv-exp.o \
	f-exp.o go-exp.o m2-exp.o p-exp.o

# Things which need to be built when making a distribution.

DISTSTUFF = $(YYFILES)


# All generated files which can be included by another file.
generated_files = config.h observer.h observer.inc ada-lex.c jit-reader.h \
	$(GNULIB_H) $(NAT_GENERATED_FILES) gcore

.c.o:
	$(COMPILE) $<
	$(POSTCOMPILE)

all: gdb$(EXEEXT) $(CONFIG_ALL)
	@@$(MAKE) $(FLAGS_TO_PASS) DO=all "DODIRS=`echo $(SUBDIRS) | sed 's/testsuite//'`" subdir_do

installcheck:

# The check target can not use subdir_do, because subdir_do does not
# use TARGET_FLAGS_TO_PASS.
check: force
	@@if [ -f testsuite/Makefile ]; then \
	  rootme=`pwd`; export rootme; \
	  rootsrc=`cd $(srcdir); pwd`; export rootsrc; \
	  cd testsuite; \
	  $(MAKE) $(TARGET_FLAGS_TO_PASS) check; \
	else true; fi

# The idea is to parallelize testing of multilibs, for example:
#   make -j3 check//sh-hms-sim/{-m1,-m2,-m3,-m3e,-m4}/{,-nofpu}
# will run 3 concurrent sessions of check, eventually testing all 10
# combinations.  GNU make is required for the % pattern to work, as is
# a shell that expands alternations within braces.  If GNU make is not
# used, this rule will harmlessly fail to match.  Used FORCE_PARALLEL to
# prevent serialized checking due to the passed RUNTESTFLAGS.
# FIXME: use config.status --config not --version, when available.
check//%: force
	@@if [ -f testsuite/config.status ]; then \
	  rootme=`pwd`; export rootme; \
	  rootsrc=`cd $(srcdir); pwd`; export rootsrc; \
	  target=`echo "$@@" | sed 's,//.*,,'`; \
	  variant=`echo "$@@" | sed 's,^[^/]*//,,'`; \
	  vardots=`echo "$$variant" | sed 's,/,.,g'`; \
	  testdir=testsuite.$$vardots; \
	  if [ ! -f $$testdir/Makefile ] && [ -f testsuite/config.status ]; then \
	    configargs=`cd testsuite && ./config.status --version | \
	      sed -n -e 's,"$$,,' -e 's,^ *with options ",,p'`; \
	    $(SHELL) $(srcdir)/../mkinstalldirs $$testdir && \
	    (cd $$testdir && \
	     eval $(SHELL) "\"\$$rootsrc/testsuite/configure\" $$configargs" \
			   "\"--srcdir=\$$rootsrc/testsuite\"" \
	     ); \
	  else :; fi && cd $$testdir && \
	  $(MAKE) $(TARGET_FLAGS_TO_PASS) \
	    RUNTESTFLAGS="--target_board=$$variant $(RUNTESTFLAGS)" \
	    FORCE_PARALLEL=$(if $(FORCE_PARALLEL),1,$(if $(RUNTESTFLAGS),,1)) \
	    "$$target"; \
	else true; fi

info install-info clean-info dvi pdf install-pdf html install-html: force
	@@$(MAKE) $(FLAGS_TO_PASS) DO=$@@ "DODIRS=$(SUBDIRS)" subdir_do

# Traditionally "install" depends on "all".  But it may be useful
# not to; for example, if the user has made some trivial change to a
# source file and doesn't care about rebuilding or just wants to save the
# time it takes for make to check that all is up to date.
# install-only is intended to address that need.
install: all
	@@$(MAKE) $(FLAGS_TO_PASS) install-only

install-only: $(CONFIG_INSTALL)
	transformed_name=`t='$(program_transform_name)'; \
			  echo gdb | sed -e "$$t"` ; \
		if test "x$$transformed_name" = x; then \
		  transformed_name=gdb ; \
		else \
		  true ; \
		fi ; \
		$(SHELL) $(srcdir)/../mkinstalldirs $(DESTDIR)$(bindir) ; \
		$(INSTALL_PROGRAM) gdb$(EXEEXT) \
			$(DESTDIR)$(bindir)/$$transformed_name$(EXEEXT) ; \
		$(SHELL) $(srcdir)/../mkinstalldirs $(DESTDIR)$(includedir)/gdb ; \
		$(INSTALL_DATA) jit-reader.h $(DESTDIR)$(includedir)/gdb/jit-reader.h
	if test "x$(HAVE_NATIVE_GCORE_TARGET)$(HAVE_NATIVE_GCORE_HOST)" != x; \
	then \
	  transformed_name=`t='$(program_transform_name)'; \
			    echo gcore | sed -e "$$t"` ; \
		  if test "x$$transformed_name" = x; then \
		    transformed_name=gcore ; \
		  else \
		    true ; \
		  fi ; \
		  $(SHELL) $(srcdir)/../mkinstalldirs $(DESTDIR)$(bindir) ; \
		  $(INSTALL_PROGRAM) gcore \
			  $(DESTDIR)$(bindir)/$$transformed_name; \
	fi
	@@$(MAKE) DO=install "DODIRS=$(SUBDIRS)" $(FLAGS_TO_PASS) subdir_do

install-python:
	$(SHELL) $(srcdir)/../mkinstalldirs $(DESTDIR)$(GDB_DATADIR)/python/gdb

uninstall: force $(CONFIG_UNINSTALL)
	transformed_name=`t='$(program_transform_name)'; \
			  echo gdb | sed -e $$t` ; \
		if test "x$$transformed_name" = x; then \
		  transformed_name=gdb ; \
		else \
		  true ; \
		fi ; \
		rm -f $(DESTDIR)$(bindir)/$$transformed_name$(EXEEXT) \
		      $(DESTDIR)$(man1dir)/$$transformed_name.1
	if test "x$(HAVE_NATIVE_GCORE_TARGET)$(HAVE_NATIVE_GCORE_HOST)" != x; \
	then \
	  transformed_name=`t='$(program_transform_name)'; \
			    echo gcore | sed -e "$$t"` ; \
		  if test "x$$transformed_name" = x; then \
		    transformed_name=gcore ; \
		  else \
		    true ; \
		  fi ; \
		  rm -f $(DESTDIR)$(bindir)/$$transformed_name; \
	fi
	@@$(MAKE) DO=uninstall "DODIRS=$(SUBDIRS)" $(FLAGS_TO_PASS) subdir_do

# The C++ name parser can be built standalone for testing.
test-cp-name-parser.o: cp-name-parser.c
	$(COMPILE) -DTEST_CPNAMES cp-name-parser.c
	$(POSTCOMPILE)

test-cp-name-parser$(EXEEXT): test-cp-name-parser.o $(LIBIBERTY)
	$(CC_LD) $(INTERNAL_LDFLAGS) -o test-cp-name-parser$(EXEEXT) \
		test-cp-name-parser.o $(LIBIBERTY)

# We do this by grepping through sources.  If that turns out to be too slow,
# maybe we could just require every .o file to have an initialization routine
# of a given name (top.o -> _initialize_top, etc.).
#
# Formatting conventions:  The name of the _initialize_* routines must start
# in column zero, and must not be inside #if.
#
# Note that the set of files with init functions might change, or the names
# of the functions might change, so this files needs to depend on all the
# object files that will be linked into gdb.

# FIXME: There is a problem with this approach - init.c may force
# unnecessary files to be linked in.

# FIXME: cagney/2002-06-09: gdb/564: gdb/563: Force the order so that
# the first call is to _initialize_gdbtypes (implemented by explicitly
# putting that function's name first in the init.l-tmp file).  This is
# a hack to ensure that all the architecture dependant global
# builtin_type_* variables are initialized before anything else
# (per-architecture code is called in the same order that it is
# registered).  The ``correct fix'' is to have all the builtin types
# made part of the architecture and initialize them on-demand (using
# gdbarch_data) just like everything else.  The catch is that other
# modules still take the address of these builtin types forcing them
# to be variables, sigh!

# NOTE: cagney/2003-03-18: The sed pattern ``s|^\([^ /]...'' is
# anchored on the first column and excludes the ``/'' character so
# that it doesn't add the $(srcdir) prefix to any file that already
# has an absolute path.  It turns out that $(DEC)'s True64 make
# automatically adds the $(srcdir) prefixes when it encounters files
# in sub-directories such as cli/ and mi/.

# NOTE: cagney/2004-02-08: The ``case "$$fs" in'' eliminates
# duplicates.  Files in the gdb/ directory can end up appearing in
# COMMON_OBS (as a .o file) and CONFIG_SRCS (as a .c file).

INIT_FILES = $(COMMON_OBS) $(TSOBS) $(CONFIG_SRCS)
init.c: $(INIT_FILES)
	@@echo Making init.c
	@@rm -f init.c-tmp init.l-tmp
	@@touch init.c-tmp
	@@echo gdbtypes > init.l-tmp
	@@-LANG=C ; export LANG ; \
	LC_ALL=C ; export LC_ALL ; \
	echo $(INIT_FILES) | \
	tr ' ' '\012' | \
	sed \
	    -e '/^gdbtypes.[co]$$/d' \
	    -e '/^init.[co]$$/d' \
	    -e '/xdr_ld.[co]$$/d' \
	    -e '/xdr_ptrace.[co]$$/d' \
	    -e '/xdr_rdb.[co]$$/d' \
	    -e '/udr.[co]$$/d' \
	    -e '/udip2soc.[co]$$/d' \
	    -e '/udi2go32.[co]$$/d' \
	    -e '/version.[co]$$/d' \
	    -e '/^[a-z0-9A-Z_]*_[SU].[co]$$/d' \
	    -e '/[a-z0-9A-Z_]*-exp.tab.[co]$$/d' \
	    -e 's/\.[co]$$/.c/' \
	    -e 's,signals\.c,common/signals\.c,' \
	    -e 's|^\([^  /][^     ]*\)|$(srcdir)/\1|g' | \
	while read f; do \
	    sed -n -e 's/^_initialize_\([a-z_0-9A-Z]*\).*/\1/p' $$f 2>/dev/null; \
	done | \
	while read f; do \
	    case " $$fs " in \
	        *" $$f "* ) ;; \
	        * ) echo $$f ; fs="$$fs $$f";; \
            esac; \
	done >> init.l-tmp
	@@echo '/* Do not modify this file.  */' >>init.c-tmp
	@@echo '/* It is created automatically by the Makefile.  */'>>init.c-tmp
	@@echo '#include "defs.h"      /* For initialize_file_ftype.  */' >>init.c-tmp
	@@echo 'extern void initialize_all_files(void);' >>init.c-tmp
	@@sed -e 's/\(.*\)/extern initialize_file_ftype _initialize_\1;/' <init.l-tmp >>init.c-tmp
	@@echo 'void' >>init.c-tmp
	@@echo 'initialize_all_files (void)' >>init.c-tmp
	@@echo '{' >>init.c-tmp
	@@sed -e 's/\(.*\)/  _initialize_\1 ();/' <init.l-tmp >>init.c-tmp
	@@echo '}' >>init.c-tmp
	@@rm init.l-tmp
	@@mv init.c-tmp init.c

.PRECIOUS: init.c

# Create a library of the gdb object files and build GDB by linking
# against that.
#
# init.o is very important.  It pulls in the rest of GDB.
LIBGDB_OBS= $(COMMON_OBS) $(TSOBS) $(ADD_FILES) init.o
libgdb.a: $(LIBGDB_OBS)
	-rm -f libgdb.a
	$(AR) q libgdb.a $(LIBGDB_OBS)
	$(RANLIB) libgdb.a

# Removing the old gdb first works better if it is running, at least on SunOS.
gdb$(EXEEXT): gdb.o $(LIBGDB_OBS) $(ADD_DEPS) $(CDEPS) $(TDEPLIBS)
	rm -f gdb$(EXEEXT)
	$(CC_LD) $(INTERNAL_LDFLAGS) $(WIN32LDAPP) \
		-o gdb$(EXEEXT) gdb.o $(LIBGDB_OBS) \
		$(TDEPLIBS) $(TUI_LIBRARY) $(CLIBS) $(LOADLIBES)

# Convenience rule to handle recursion.
$(LIBGNU) $(GNULIB_H): all-lib
all-lib: $(GNULIB_BUILDDIR)/Makefile
	@@$(MAKE) $(FLAGS_TO_PASS) DO=all DODIRS=$(GNULIB_BUILDDIR) subdir_do
.PHONY: all-lib

# Convenience rule to handle recursion.
.PHONY: all-data-directory
all-data-directory: data-directory/Makefile
	@@$(MAKE) $(FLAGS_TO_PASS) DO=all DODIRS=data-directory subdir_do

# This is useful when debugging GDB, because some Unix's don't let you run GDB
# on itself without copying the executable.  So "make gdb1" will make
# gdb and put a copy in gdb1, and you can run it with "gdb gdb1".
# Removing gdb1 before the copy is the right thing if gdb1 is open
# in another process.
gdb1$(EXEEXT): gdb$(EXEEXT)
	rm -f gdb1$(EXEEXT)
	cp gdb$(EXEEXT) gdb1$(EXEEXT)

# Put the proper machine-specific files first, so M-. on a machine
# specific routine gets the one for the correct machine.  (FIXME: those
# files go in twice; we should be removing them from the main list).

# TAGS depends on all the files that go into it so you can rebuild TAGS
# with `make TAGS' and not have to say `rm TAGS' first.

GDB_NM_FILE = @@GDB_NM_FILE@@
TAGS: $(TAGFILES_NO_SRCDIR) $(TAGFILES_WITH_SRCDIR)
	@@echo Making TAGS
	etags `(test -n "$(GDB_NM_FILE)" && echo "$(srcdir)/$(GDB_NM_FILE)")` \
	`(for i in $(DEPFILES) $(TAGFILES_NO_SRCDIR); do \
		echo $(srcdir)/$$i ; \
	done ; for i in $(TAGFILES_WITH_SRCDIR); do \
		echo $$i ; \
	done) | sed -e 's/\.o$$/\.c/'` \
	`find $(srcdir)/config -name '*.h' -print`

tags: TAGS

clean mostlyclean: $(CONFIG_CLEAN)
	@@$(MAKE) $(FLAGS_TO_PASS) DO=clean "DODIRS=$(CLEANDIRS)" subdir_do
	rm -f *.o *.a $(ADD_FILES) *~ init.c-tmp init.l-tmp version.c-tmp
	rm -f init.c version.c observer.h observer.inc
	rm -f gdb$(EXEEXT) core make.log
	rm -f gdb[0-9]$(EXEEXT)
	rm -f test-cp-name-parser$(EXEEXT)
	rm -f xml-builtin.c stamp-xml
	rm -f $(DEPDIR)/*

# This used to depend on c-exp.c m2-exp.c TAGS
# I believe this is wrong; the makefile standards for distclean just
# describe removing files; the only sort of "re-create a distribution"
# functionality described is if the distributed files are unmodified.
# NB: While GDBSERVER might be configured on native systems, it isn't
# always included in SUBDIRS.  Remove the gdbserver files explicitly.
distclean: clean
	@@$(MAKE) $(FLAGS_TO_PASS) DO=distclean "DODIRS=$(CLEANDIRS)" subdir_do
	rm -rf $(GNULIB_BUILDDIR)
	rm -f gdbserver/config.status gdbserver/config.log
	rm -f gdbserver/tm.h gdbserver/xm.h gdbserver/nm.h
	rm -f gdbserver/Makefile gdbserver/config.cache
	rm -f nm.h config.status config.h stamp-h gdb-gdb.gdb jit-reader.h
	rm -f y.output yacc.acts yacc.tmp y.tab.h
	rm -f config.log config.cache
	rm -f Makefile
	rm -rf $(DEPDIR)

maintainer-clean: local-maintainer-clean do-maintainer-clean distclean
realclean: maintainer-clean

local-maintainer-clean:
	@@echo "This command is intended for maintainers to use;"
	@@echo "it deletes files that may require special tools to rebuild."
	rm -f c-exp.c \
		cp-name-parser.c \
		ada-lex.c ada-exp.c \
		jv-exp.tab \
		f-exp.c go-exp.c m2-exp.c p-exp.c
	rm -f TAGS $(INFOFILES)
	rm -f $(YYFILES)
	rm -f nm.h config.status

do-maintainer-clean:
	@@$(MAKE) $(FLAGS_TO_PASS) DO=maintainer-clean "DODIRS=$(CLEANDIRS)" \
		subdir_do

diststuff: $(DISTSTUFF) $(PACKAGE).pot $(CATALOGS)
	cd doc; $(MAKE) $(MFLAGS) diststuff

subdir_do: force
	@@for i in $(DODIRS); do \
		case $$i in \
		$(REQUIRED_SUBDIRS)) \
			if [ ! -f ./$$i/Makefile ] ; then \
				echo "Missing $$i/Makefile" >&2 ; \
				exit 1 ; \
			fi ;; \
		esac ; \
		if [ -f ./$$i/Makefile ] ; then \
			if (cd ./$$i; \
				$(MAKE) $(FLAGS_TO_PASS) $(DO)) ; then true ; \
			else exit 1 ; fi ; \
		else true ; fi ; \
	done

Makefile: Makefile.in config.status @@frags@@
	# Regenerate the Makefile and the tm.h / nm.h links.
	CONFIG_FILES="Makefile" \
	  CONFIG_COMMANDS= \
	  CONFIG_HEADERS= \
	  $(SHELL) config.status

$(GNULIB_BUILDDIR)/Makefile: gnulib/Makefile.in config.status @@frags@@
	@@cd $(GNULIB_BUILDDIR); CONFIG_FILES="Makefile" \
	  CONFIG_COMMANDS="depfiles" \
	  CONFIG_HEADERS= \
	  CONFIG_LINKS= \
	  $(SHELL) config.status

data-directory/Makefile: data-directory/Makefile.in config.status @@frags@@
	CONFIG_FILES="data-directory/Makefile" \
	  CONFIG_COMMANDS="depfiles" \
	  CONFIG_HEADERS= \
	  CONFIG_LINKS= \
	  $(SHELL) config.status

.PHONY: run
run: Makefile
	./gdb$(EXEEXT) --data-directory=`pwd`/data-directory $(GDBFLAGS)

jit-reader.h: $(srcdir)/jit-reader.in
	$(SHELL) config.status $@@

gcore: $(srcdir)/gcore.in
	$(SHELL) config.status $@@

config.h: stamp-h ; @@true
stamp-h: $(srcdir)/config.in config.status
	CONFIG_HEADERS=config.h:config.in \
	  CONFIG_COMMANDS="default depdir" \
	  CONFIG_FILES= \
	  CONFIG_LINKS= \
	  $(SHELL) config.status

config.status: $(srcdir)/configure configure.tgt configure.host development.sh
	$(SHELL) config.status --recheck

ACLOCAL = aclocal
ACLOCAL_AMFLAGS = -I ../config

# Keep these in sync with the includes in acinclude.m4.
aclocal_m4_deps = \
	configure.ac \
	acx_configure_dir.m4 \
	libmcheck.m4 \
	../bfd/bfd.m4 \
	../config/acinclude.m4 \
	../config/plugins.m4 \
	../config/lead-dot.m4 \
	../config/override.m4 \
	../config/largefile.m4 \
	../config/gettext-sister.m4 \
	../config/lib-ld.m4 \
	../config/lib-prefix.m4 \
	../config/lib-link.m4 \
	../config/acx.m4 \
	../config/tcl.m4 \
	../config/depstand.m4 \
	../config/lcmessage.m4 \
	../config/codeset.m4 \
	../config/zlib.m4

$(srcdir)/aclocal.m4: @@MAINTAINER_MODE_TRUE@@ $(aclocal_m4_deps)
	cd $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)

AUTOCONF = autoconf
configure_deps = $(srcdir)/configure.ac $(srcdir)/aclocal.m4
$(srcdir)/configure: @@MAINTAINER_MODE_TRUE@@ $(configure_deps)
	cd $(srcdir) && $(AUTOCONF)

AUTOHEADER = autoheader
$(srcdir)/config.in: @@MAINTAINER_MODE_TRUE@@ $(configure_deps)
	cd $(srcdir) && $(AUTOHEADER)
	rm -f stamp-h
	touch $@@

# automatic rebuilding in automake-generated Makefiles requires
# this rule in the toplevel Makefile, which, with GNU make, causes
# the desired updates through the implicit regeneration of the Makefile
# and all of its prerequisites.
am--refresh:
	@@:

force:

# Documentation!
# GDB QUICK REFERENCE (TeX dvi file, CM fonts)
doc/refcard.dvi:
	cd doc; $(MAKE) refcard.dvi $(FLAGS_TO_PASS)

# GDB QUICK REFERENCE (PostScript output, common PS fonts)
doc/refcard.ps:
	cd doc; $(MAKE) refcard.ps $(FLAGS_TO_PASS)

# GDB MANUAL: TeX dvi file
doc/gdb.dvi:
	cd doc; $(MAKE) gdb.dvi $(FLAGS_TO_PASS)

# GDB MANUAL: info file
doc/gdb.info:
	cd doc; $(MAKE) gdb.info $(FLAGS_TO_PASS)

# Make copying.c from COPYING
$(srcdir)/copying.c: @@MAINTAINER_MODE_TRUE@@ $(srcdir)/../COPYING3 $(srcdir)/copying.awk
	awk -f $(srcdir)/copying.awk \
		< $(srcdir)/../COPYING3 > $(srcdir)/copying.tmp
	mv $(srcdir)/copying.tmp $(srcdir)/copying.c

version.c: Makefile version.in $(srcdir)/../bfd/version.h $(srcdir)/common/create-version.sh
	$(SHELL) $(srcdir)/common/create-version.sh $(srcdir) \
	    $(host_alias) $(target_alias) version.c

observer.h: observer.sh doc/observer.texi
	${srcdir}/observer.sh h ${srcdir}/doc/observer.texi observer.h

observer.inc: observer.sh doc/observer.texi
	${srcdir}/observer.sh inc ${srcdir}/doc/observer.texi observer.inc

lint: $(LINTFILES)
	$(LINT) $(INCLUDE_CFLAGS) $(LINTFLAGS) $(LINTFILES) \
	   `echo $(DEPFILES) $(CONFIG_OBS) | sed 's/\.o /\.c /g'`

gdb.cxref: $(SFILES)
	cxref -I. $(SFILES) >gdb.cxref

force_update:

# GNU Make has an annoying habit of putting *all* the Makefile variables
# into the environment, unless you include this target as a circumvention.
# Rumor is that this will be fixed (and this target can be removed)
# in GNU Make 4.0.
.NOEXPORT:

# GNU Make 3.63 has a different problem: it keeps tacking command line
# overrides onto the definition of $(MAKE).  This variable setting
# will remove them.
MAKEOVERRIDES=

ALLDEPFILES = \
	aarch64-tdep.c aarch64-linux-tdep.c aarch64-newlib-tdep.c \
	aarch64-linux-nat.c \
	aix-thread.c \
	alpha-nat.c alphabsd-nat.c alpha-linux-nat.c \
	alpha-tdep.c alpha-mdebug-tdep.c \
	alpha-linux-tdep.c alpha-osf1-tdep.c \
	alphabsd-tdep.c alphafbsd-tdep.c alphanbsd-tdep.c alphaobsd-tdep.c \
	amd64-nat.c amd64-tdep.c \
	amd64bsd-nat.c amd64fbsd-nat.c amd64fbsd-tdep.c \
	amd64nbsd-nat.c amd64nbsd-tdep.c \
	amd64obsd-nat.c amd64obsd-tdep.c \
	amd64-darwin-tdep.c \
	amd64-dicos-tdep.c \
	amd64-linux-nat.c amd64-linux-tdep.c \
	amd64-sol2-tdep.c \
	arm-linux-nat.c arm-linux-tdep.c arm-symbian-tdep.c arm-tdep.c \
	armnbsd-nat.c armbsd-tdep.c armnbsd-tdep.c armobsd-tdep.c \
	avr-tdep.c \
	bfin-linux-tdep.c bfin-tdep.c \
	bsd-uthread.c bsd-kvm.c \
	core-regset.c \
	dcache.c dicos-tdep.c darwin-nat.c \
	exec.c \
	fbsd-nat.c \
	fork-child.c \
	glibc-tdep.c \
	go32-nat.c h8300-tdep.c \
	hppa-tdep.c hppa-hpux-tdep.c hppa-hpux-nat.c \
	hppa-linux-tdep.c hppa-linux-nat.c \
	hppabsd-nat.c hppabsd-tdep.c \
	hppaobsd-tdep.c \
	hppanbsd-nat.c hppanbsd-tdep.c \
	i386-tdep.c i386-linux-nat.c \
	i386v4-nat.c i386-cygwin-tdep.c \
	i386bsd-nat.c i386bsd-tdep.c i386fbsd-nat.c i386fbsd-tdep.c \
	i386nbsd-nat.c i386nbsd-tdep.c i386obsd-nat.c i386obsd-tdep.c \
	i387-tdep.c \
	i386-darwin-tdep.c i386-darwin-nat.c \
	i386-dicos-tdep.c \
	i386-linux-tdep.c i386-nat.c \
	i386-sol2-nat.c i386-sol2-tdep.c \
	i386gnu-nat.c i386gnu-tdep.c \
	ia64-hpux-nat.c ia64-hpux-tdep.c \
	ia64-linux-nat.c ia64-linux-tdep.c ia64-tdep.c ia64-vms-tdep.c \
	inf-ptrace.c inf-ttrace.c \
	irix5-nat.c \
	ia64-libunwind-tdep.c \
	linux-fork.c \
	linux-tdep.c \
	linux-record.c \
	lm32-tdep.c \
	m68hc11-tdep.c \
	m32r-tdep.c \
	m32r-linux-nat.c m32r-linux-tdep.c \
	m68k-tdep.c \
	m68kbsd-nat.c m68kbsd-tdep.c \
	m68klinux-nat.c m68klinux-tdep.c \
	m88k-tdep.c m88kbsd-nat.c \
	microblaze-tdep.c microblaze-linux-tdep.c \
	mingw-hdep.c \
	mips-linux-nat.c mips-linux-tdep.c \
	mips-irix-tdep.c \
	mips-tdep.c \
	mipsnbsd-nat.c mipsnbsd-tdep.c \
	mips64obsd-nat.c mips64obsd-tdep.c \
	msp430-tdep.c \
	nios2-tdep.c nios2-linux-tdep.c \
	nbsd-nat.c nbsd-tdep.c obsd-tdep.c \
	solib-osf.c \
	somread.c solib-som.c \
	posix-hdep.c \
	ppc-sysv-tdep.c ppc-linux-nat.c ppc-linux-tdep.c ppc64-tdep.c \
	ppcfbsd-nat.c ppcfbsd-tdep.c \
	ppcnbsd-nat.c ppcnbsd-tdep.c \
	ppcobsd-nat.c ppcobsd-tdep.c \
	procfs.c \
	ravenscar-thread.c \
	remote-m32r-sdi.c remote-mips.c \
	remote-sim.c \
	dcache.c \
	rl78-tdep.c \
	rs6000-nat.c rs6000-tdep.c solib-aix.c ppc-ravenscar-thread.c \
	rs6000-lynx178-tdep.c \
	rx-tdep.c \
	s390-tdep.c s390-nat.c \
	score-tdep.c \
	ser-go32.c ser-pipe.c ser-tcp.c ser-mingw.c \
	sh-tdep.c sh64-tdep.c shnbsd-tdep.c shnbsd-nat.c \
	sol2-tdep.c \
	solib-irix.c solib-svr4.c \
	sparc-linux-nat.c sparc-linux-tdep.c \
	sparc-sol2-nat.c sparc-sol2-tdep.c sparc64-sol2-tdep.c \
	sparc-nat.c sparc-tdep.c sparc64-linux-nat.c sparc64-linux-tdep.c \
	sparc64-nat.c sparc64-tdep.c sparc64fbsd-nat.c sparc64fbsd-tdep.c \
	sparc64nbsd-nat.c sparc64nbsd-tdep.c sparc64obsd-tdep.c \
	sparcnbsd-nat.c sparcnbsd-tdep.c sparcobsd-tdep.c \
	sparc-ravenscar-thread.c \
	spu-linux-nat.c spu-tdep.c spu-multiarch.c solib-spu.c \
	tilegx-linux-nat.c tilegx-tdep.c tilegx-linux-tdep.c \
	v850-tdep.c \
	vax-nat.c vax-tdep.c vaxbsd-nat.c vaxnbsd-tdep.c \
	windows-nat.c windows-tdep.c \
	xcoffread.c \
	xstormy16-tdep.c \
	xtensa-tdep.c xtensa-config.c \
	xtensa-linux-tdep.c xtensa-linux-nat.c xtensa-xtregs.c

# Some files need explicit build rules (due to -Werror problems) or due
# to sub-directory fun 'n' games.

# FIXME: cagney/2003-08-10: "monitor.c" gets -Wformat-nonliteral
# errors.  It turns out that that is the least of monitor.c's
# problems.  The function print_vsprintf appears to be using
# va_arg(long) to extract CORE_ADDR parameters - something that
# definitly will not work.  "monitor.c" needs to be rewritten so that
# it doesn't use format strings and instead uses callbacks.
monitor.o: $(srcdir)/monitor.c
	$(COMPILE.pre) $(INTERNAL_CFLAGS) $(GDB_WARN_CFLAGS_NO_FORMAT) \
		$(COMPILE.post) $(srcdir)/monitor.c
	$(POSTCOMPILE)

# Do not try to build "printcmd.c" with -Wformat-nonliteral.  It manually
# checks format strings.
printcmd.o: $(srcdir)/printcmd.c
	$(COMPILE.pre) $(INTERNAL_CFLAGS) $(GDB_WARN_CFLAGS_NO_FORMAT) \
		$(COMPILE.post) $(srcdir)/printcmd.c
	$(POSTCOMPILE)

# ada-exp.c can appear in srcdir, for releases; or in ., for
# development builds.
ADA_EXP_C = `if test -f ada-exp.c; then echo ada-exp.c; else echo $(srcdir)/ada-exp.c; fi`

# Some versions of flex give output that triggers
# -Wold-style-definition.
ada-exp.o: ada-exp.c
	$(COMPILE.pre) $(INTERNAL_CFLAGS) $(GDB_WARN_CFLAGS_NO_DEFS) \
		$(COMPILE.post) $(ADA_EXP_C)
	$(POSTCOMPILE)

# Message files.  Based on code in gcc/Makefile.in.

# Rules for generating translated message descriptions.  Disabled by
# autoconf if the tools are not available.

.SUFFIXES: .po .gmo .pox .pot
.PHONY: all-po install-po uninstall-po clean-po update-po $(PACKAGE).pot

all-po: $(CATALOGS)

# This notation should be acceptable to all Make implementations used
# by people who are interested in updating .po files.
update-po: $(CATALOGS:.gmo=.pox)

# N.B. We do not attempt to copy these into $(srcdir).  The snapshot
# script does that.
.po.gmo:
	-test -d po || mkdir po
	$(GMSGFMT) --statistics -o $@@ $<

# The new .po has to be gone over by hand, so we deposit it into
# build/po with a different extension.  If build/po/$(PACKAGE).pot
# exists, use it (it was just created), else use the one in srcdir.
.po.pox:
	-test -d po || mkdir po
	$(MSGMERGE) $< `if test -f po/$(PACKAGE).pot; \
			then echo po/$(PACKAGE).pot; \
			else echo $(srcdir)/po/$(PACKAGE).pot; fi` -o $@@

# This rule has to look for .gmo modules in both srcdir and the cwd,
# and has to check that we actually have a catalog for each language,
# in case they weren't built or included with the distribution.
install-po:
	$(SHELL) $(srcdir)/../mkinstalldirs $(DESTDIR)$(datadir)
	cats="$(CATALOGS)"; for cat in $$cats; do \
	  lang=`basename $$cat | sed 's/\.gmo$$//'`; \
	  if [ -f $$cat ]; then :; \
	  elif [ -f $(srcdir)/$$cat ]; then cat=$(srcdir)/$$cat; \
	  else continue; \
	  fi; \
	  dir=$(localedir)/$$lang/LC_MESSAGES; \
	  echo $(SHELL) $(srcdir)/../mkinstalldirs $(DESTDIR)$$dir; \
	  $(SHELL) $(srcdir)/../mkinstalldirs $(DESTDIR)$$dir || exit 1; \
	  echo $(INSTALL_DATA) $$cat $(DESTDIR)$$dir/$(PACKAGE).mo; \
	  $(INSTALL_DATA) $$cat $(DESTDIR)$$dir/$(PACKAGE).mo; \
	done
uninstall-po:
	cats="$(CATALOGS)"; for cat in $$cats; do \
	  lang=`basename $$cat | sed 's/\.gmo$$//'`; \
	  if [ -f $$cat ]; then :; \
	  elif [ -f $(srcdir)/$$cat ]; then cat=$(srcdir)/$$cat; \
	  else continue; \
	  fi; \
	  dir=$(localedir)/$$lang/LC_MESSAGES; \
	  rm -f $(DESTDIR)$$dir/$(PACKAGE).mo; \
	done
# Delete po/*.gmo only if we are not building in the source directory.
clean-po:
	-if [ ! -f Makefile.in ]; then rm -f po/*.gmo; fi

# Rule for regenerating the message template (gdb.pot).  Instead of
# forcing everyone to edit POTFILES.in, which proved impractical, this
# rule has no dependencies and always regenerates gdb.pot.  This is
# relatively harmless since the .po files do not directly depend on
# it.  The .pot file is left in the build directory.  Since GDB's
# Makefile lacks a cannonical list of sources (missing xm, tm and nm
# files) force this rule.
$(PACKAGE).pot: po/$(PACKAGE).pot
po/$(PACKAGE).pot: force
	-test -d po || mkdir po
	sh -e $(srcdir)/po/gdbtext $(XGETTEXT) $(PACKAGE) . $(srcdir)


#
# YACC/LEX dependencies
#
# LANG-exp.c is generated in objdir from LANG-exp.y if it doesn't
# exist in srcdir, then compiled in objdir to LANG-exp.o.  If we
# said LANG-exp.c rather than ./c-exp.c some makes would
# sometimes re-write it into $(srcdir)/c-exp.c.  Remove bogus
# decls for malloc/realloc/free which conflict with everything else.
# Strictly speaking c-exp.c should therefore depend on
# Makefile.in, but that was a pretty big annoyance.

.SUFFIXES: .y .l
.y.c:
	rm -f $@@ $@@.tmp
	$(SHELL) $(YLWRAP) $< y.tab.c $@@ -- $(YACC) $(YFLAGS) && mv $@@ $@@.tmp \
		|| (rm -f $@@; false)
	sed -e '/extern.*malloc/d' \
	     -e '/extern.*realloc/d' \
	     -e '/extern.*free/d' \
	     -e '/include.*malloc.h/d' \
	     -e 's/\([^x]\)malloc/\1xmalloc/g' \
	     -e 's/\([^x]\)realloc/\1xrealloc/g' \
	     -e 's/\([ \t;,(]\)free\([ \t]*[&(),]\)/\1xfree\2/g' \
	     -e 's/\([ \t;,(]\)free$$/\1xfree/g' \
	     -e '/^#line.*y.tab.c/d' \
	     -e "s/^\(#line.*\)`basename $<`/\1`echo $<|sed 's/\//\\\\\//g'`/" \
	  < $@@.tmp > $@@
	rm -f $@@.tmp
.l.c:
	if [ "$(FLEX)" ] && $(FLEX) --version >/dev/null 2>&1; then \
	    $(FLEX) -o$@@ $< && \
	    rm -f $@@.new && \
	    sed -e '/extern.*malloc/d' \
	        -e '/extern.*realloc/d' \
	        -e '/extern.*free/d' \
	        -e '/include.*malloc.h/d' \
	        -e 's/\([^x]\)malloc/\1xmalloc/g' \
	        -e 's/\([^x]\)realloc/\1xrealloc/g' \
	        -e 's/\([ \t;,(]\)free\([ \t]*[&(),]\)/\1xfree\2/g' \
	        -e 's/\([ \t;,(]\)free$$/\1xfree/g' \
		-e 's/yy_flex_xrealloc/yyxrealloc/g' \
	      < $@@ > $@@.new && \
	    rm -f $@@ && \
	    mv $@@.new $@@; \
	elif [ -f $@@ ]; then \
	    echo "Warning: $*.c older than $*.l and flex not available."; \
	else \
	    echo "$@@ missing and flex not available."; \
	    false; \
	fi

.PRECIOUS: ada-lex.c

# XML rules

xml-builtin.c: stamp-xml; @@true
stamp-xml: $(srcdir)/features/feature_to_c.sh Makefile $(XMLFILES)
	rm -f xml-builtin.tmp
	AWK="$(AWK)" \
	  $(SHELL) $(srcdir)/features/feature_to_c.sh \
	  xml-builtin.tmp $(XMLFILES)
	$(SHELL) $(srcdir)/../move-if-change xml-builtin.tmp xml-builtin.c
	echo stamp > stamp-xml

.PRECIOUS: xml-builtin.c

#
# gdb/cli/ dependencies
#
# Need to explicitly specify the compile rule as make will do nothing
# or try to compile the object file into the sub-directory.

cli-cmds.o: $(srcdir)/cli/cli-cmds.c
	$(COMPILE) $(srcdir)/cli/cli-cmds.c
	$(POSTCOMPILE)

cli-decode.o: $(srcdir)/cli/cli-decode.c
	$(COMPILE) $(srcdir)/cli/cli-decode.c
	$(POSTCOMPILE)

cli-dump.o: $(srcdir)/cli/cli-dump.c
	$(COMPILE) $(srcdir)/cli/cli-dump.c
	$(POSTCOMPILE)

cli-interp.o: $(srcdir)/cli/cli-interp.c
	$(COMPILE) $(srcdir)/cli/cli-interp.c
	$(POSTCOMPILE)

cli-logging.o: $(srcdir)/cli/cli-logging.c
	$(COMPILE) $(srcdir)/cli/cli-logging.c
	$(POSTCOMPILE)

cli-script.o: $(srcdir)/cli/cli-script.c
	$(COMPILE) $(srcdir)/cli/cli-script.c
	$(POSTCOMPILE)

cli-setshow.o: $(srcdir)/cli/cli-setshow.c
	$(COMPILE) $(srcdir)/cli/cli-setshow.c
	$(POSTCOMPILE)

cli-utils.o: $(srcdir)/cli/cli-utils.c
	$(COMPILE) $(srcdir)/cli/cli-utils.c
	$(POSTCOMPILE)


#
# GDBTK sub-directory
#
# Need to explicitly specify the compile rule as make will do nothing
# or try to compile the object file into the mi directory.

all-gdbtk: insight$(EXEEXT)

install-gdbtk:
	transformed_name=`t='$(program_transform_name)'; \
		  echo insight | sed -e $$t` ; \
	if test "x$$transformed_name" = x; then \
	  transformed_name=insight ; \
	else \
	  true ; \
	fi ; \
	$(SHELL) $(srcdir)/../mkinstalldirs $(DESTDIR)$(bindir); \
	$(INSTALL_PROGRAM) insight$(EXEEXT) \
		$(DESTDIR)$(bindir)/$$transformed_name$(EXEEXT) ; \
	$(SHELL) $(srcdir)/../mkinstalldirs \
		$(DESTDIR)$(GDBTK_LIBRARY) ; \
	$(SHELL) $(srcdir)/../mkinstalldirs \
		$(DESTDIR)$(libdir)/insight$(GDBTK_VERSION) ; \
	$(INSTALL_DATA) $(srcdir)/gdbtk/plugins/plugins.tcl \
		$(DESTDIR)$(libdir)/insight$(GDBTK_VERSION)/plugins.tcl ; \
	$(SHELL) $(srcdir)/../mkinstalldirs \
		$(DESTDIR)$(GDBTK_LIBRARY)/images \
		$(DESTDIR)$(GDBTK_LIBRARY)/images2 ; \
	$(SHELL) $(srcdir)/../mkinstalldirs \
		$(DESTDIR)$(GDBTK_LIBRARY)/help \
		$(DESTDIR)$(GDBTK_LIBRARY)/help/images \
		$(DESTDIR)$(GDBTK_LIBRARY)/help/trace ; \
	cd $(srcdir)/gdbtk/library ; \
	for i in *.tcl *.itcl *.ith *.itb images/*.gif images2/*.gif images/icons.txt images2/icons.txt tclIndex help/*.html  help/trace/*.html help/trace/index.toc help/images/*.gif help/images/*.png; \
	  do \
		$(INSTALL_DATA) $$i $(DESTDIR)$(GDBTK_LIBRARY)/$$i ; \
	  done ;

uninstall-gdbtk:
	transformed_name=`t='$(program_transform_name)'; \
		  echo insight | sed -e $$t` ; \
	if test "x$$transformed_name" = x; then \
		transformed_name=insight ; \
	else \
		true ; \
	fi ; \
	rm -f $(DESTDIR)$(bindir)/$$transformed_name$(EXEEXT) ; \
	rm -rf $(DESTDIR)$(GDBTK_LIBRARY)

clean-gdbtk:
	rm -f insight$(EXEEXT)

# Removing the old gdb first works better if it is running, at least on SunOS.
insight$(EXEEXT): gdbtk-main.o libgdb.a $(ADD_DEPS) \
		$(CDEPS) $(TDEPLIBS)
	rm -f insight$(EXEEXT)
	$(CC_LD) $(INTERNAL_LDFLAGS) $(WIN32LDAPP) \
		-o insight$(EXEEXT) gdbtk-main.o libgdb.a \
		$(TDEPLIBS) $(TUI_LIBRARY) $(CLIBS) $(LOADLIBES)

gdbres.o: $(srcdir)/gdbtk/gdb.rc $(srcdir)/gdbtk/gdbtool.ico
	$(WINDRES) --include $(srcdir)/gdbtk $(srcdir)/gdbtk/gdb.rc gdbres.o

all_gdbtk_cflags = $(IDE_CFLAGS) $(ITCL_CFLAGS) \
		$(ITK_CFLAGS) $(TCL_CFLAGS) $(TK_CFLAGS) $(X11_CFLAGS) \
		$(GDBTK_CFLAGS) \
		-DGDBTK_LIBRARY=\"$(GDBTK_LIBRARY)\" \
		-DSRC_DIR=\"$(GDBTK_SRC_DIR)\"

gdbtk.o: $(srcdir)/gdbtk/generic/gdbtk.c
	$(COMPILE) $(all_gdbtk_cflags) $(srcdir)/gdbtk/generic/gdbtk.c
	$(POSTCOMPILE)

gdbtk-bp.o: $(srcdir)/gdbtk/generic/gdbtk-bp.c
	$(COMPILE) $(all_gdbtk_cflags) $(srcdir)/gdbtk/generic/gdbtk-bp.c
	$(POSTCOMPILE)

gdbtk-cmds.o: $(srcdir)/gdbtk/generic/gdbtk-cmds.c
	$(COMPILE) $(all_gdbtk_cflags) $(srcdir)/gdbtk/generic/gdbtk-cmds.c
	$(POSTCOMPILE)

gdbtk-hooks.o: $(srcdir)/gdbtk/generic/gdbtk-hooks.c
	$(COMPILE) $(all_gdbtk_cflags) $(srcdir)/gdbtk/generic/gdbtk-hooks.c
	$(POSTCOMPILE)

gdbtk-interp.o: $(srcdir)/gdbtk/generic/gdbtk-interp.c
	$(COMPILE) $(all_gdbtk_cflags) $(srcdir)/gdbtk/generic/gdbtk-interp.c
	$(POSTCOMPILE)

gdbtk-main.o: $(srcdir)/gdbtk/generic/gdbtk-main.c
	$(COMPILE) $(all_gdbtk_cflags) $(srcdir)/gdbtk/generic/gdbtk-main.c
	$(POSTCOMPILE)

gdbtk-register.o: $(srcdir)/gdbtk/generic/gdbtk-register.c
	$(COMPILE) $(all_gdbtk_cflags) $(srcdir)/gdbtk/generic/gdbtk-register.c
	$(POSTCOMPILE)

gdbtk-stack.o: $(srcdir)/gdbtk/generic/gdbtk-stack.c
	$(COMPILE) $(all_gdbtk_cflags) $(srcdir)/gdbtk/generic/gdbtk-stack.c
	$(POSTCOMPILE)

gdbtk-varobj.o: $(srcdir)/gdbtk/generic/gdbtk-varobj.c
	$(COMPILE) $(all_gdbtk_cflags) $(srcdir)/gdbtk/generic/gdbtk-varobj.c
	$(POSTCOMPILE)

gdbtk-wrapper.o: $(srcdir)/gdbtk/generic/gdbtk-wrapper.c
	$(COMPILE) $(all_gdbtk_cflags) $(srcdir)/gdbtk/generic/gdbtk-wrapper.c
	$(POSTCOMPILE)


#
# gdb/mi/ dependencies
#
# Need to explicitly specify the compile rule as make will do nothing
# or try to compile the object file into the sub-directory.

mi-cmd-break.o: $(srcdir)/mi/mi-cmd-break.c
	$(COMPILE) $(srcdir)/mi/mi-cmd-break.c
	$(POSTCOMPILE)

mi-cmd-catch.o: $(srcdir)/mi/mi-cmd-catch.c
	$(COMPILE) $(srcdir)/mi/mi-cmd-catch.c
	$(POSTCOMPILE)

mi-cmd-disas.o: $(srcdir)/mi/mi-cmd-disas.c
	$(COMPILE) $(srcdir)/mi/mi-cmd-disas.c
	$(POSTCOMPILE)

mi-cmd-env.o: $(srcdir)/mi/mi-cmd-env.c
	$(COMPILE) $(srcdir)/mi/mi-cmd-env.c
	$(POSTCOMPILE)

mi-cmd-file.o: $(srcdir)/mi/mi-cmd-file.c
	$(COMPILE) $(srcdir)/mi/mi-cmd-file.c
	$(POSTCOMPILE)

mi-cmd-info.o: $(srcdir)/mi/mi-cmd-info.c
	$(COMPILE) $(srcdir)/mi/mi-cmd-info.c
	$(POSTCOMPILE)

mi-cmds.o: $(srcdir)/mi/mi-cmds.c
	$(COMPILE) $(srcdir)/mi/mi-cmds.c
	$(POSTCOMPILE)

mi-cmd-stack.o: $(srcdir)/mi/mi-cmd-stack.c
	$(COMPILE) $(srcdir)/mi/mi-cmd-stack.c
	$(POSTCOMPILE)

mi-cmd-target.o: $(srcdir)/mi/mi-cmd-target.c
	$(COMPILE) $(srcdir)/mi/mi-cmd-target.c
	$(POSTCOMPILE)

mi-cmd-var.o: $(srcdir)/mi/mi-cmd-var.c
	$(COMPILE) $(srcdir)/mi/mi-cmd-var.c
	$(POSTCOMPILE)

mi-console.o: $(srcdir)/mi/mi-console.c
	$(COMPILE) $(srcdir)/mi/mi-console.c
	$(POSTCOMPILE)

mi-getopt.o: $(srcdir)/mi/mi-getopt.c
	$(COMPILE) $(srcdir)/mi/mi-getopt.c
	$(POSTCOMPILE)

mi-interp.o: $(srcdir)/mi/mi-interp.c
	$(COMPILE) $(srcdir)/mi/mi-interp.c
	$(POSTCOMPILE)

mi-main.o: $(srcdir)/mi/mi-main.c
	$(COMPILE) $(srcdir)/mi/mi-main.c
	$(POSTCOMPILE)

mi-out.o: $(srcdir)/mi/mi-out.c
	$(COMPILE) $(srcdir)/mi/mi-out.c
	$(POSTCOMPILE)

mi-parse.o: $(srcdir)/mi/mi-parse.c
	$(COMPILE) $(srcdir)/mi/mi-parse.c
	$(POSTCOMPILE)

mi-symbol-cmds.o: $(srcdir)/mi/mi-symbol-cmds.c
	$(COMPILE) $(srcdir)/mi/mi-symbol-cmds.c
	$(POSTCOMPILE)

mi-common.o: $(srcdir)/mi/mi-common.c
	$(COMPILE) $(srcdir)/mi/mi-common.c
	$(POSTCOMPILE)

# gdb/common/ dependencies
#
# Need to explicitly specify the compile rule as make will do nothing
# or try to compile the object file into the sub-directory.

signals.o: $(srcdir)/common/signals.c
	$(COMPILE) $(srcdir)/common/signals.c
	$(POSTCOMPILE)

common-utils.o: ${srcdir}/common/common-utils.c
	$(COMPILE) $(srcdir)/common/common-utils.c
	$(POSTCOMPILE)

gdb_vecs.o: ${srcdir}/common/gdb_vecs.c
	$(COMPILE) $(srcdir)/common/gdb_vecs.c
	$(POSTCOMPILE)

xml-utils.o: ${srcdir}/common/xml-utils.c
	$(COMPILE) $(srcdir)/common/xml-utils.c
	$(POSTCOMPILE)

ptid.o: ${srcdir}/common/ptid.c
	$(COMPILE) $(srcdir)/common/ptid.c
	$(POSTCOMPILE)

buffer.o: ${srcdir}/common/buffer.c
	$(COMPILE) $(srcdir)/common/buffer.c
	$(POSTCOMPILE)

filestuff.o: $(srcdir)/common/filestuff.c
	$(COMPILE) $(srcdir)/common/filestuff.c
	$(POSTCOMPILE)

format.o: ${srcdir}/common/format.c
	$(COMPILE) $(srcdir)/common/format.c
	$(POSTCOMPILE)

linux-osdata.o: ${srcdir}/common/linux-osdata.c
	$(COMPILE) $(srcdir)/common/linux-osdata.c
	$(POSTCOMPILE)

linux-procfs.o: $(srcdir)/common/linux-procfs.c
	$(COMPILE) $(srcdir)/common/linux-procfs.c
	$(POSTCOMPILE)

linux-ptrace.o: $(srcdir)/common/linux-ptrace.c
	$(COMPILE) $(srcdir)/common/linux-ptrace.c
	$(POSTCOMPILE)

common-agent.o: $(srcdir)/common/agent.c
	$(COMPILE) $(srcdir)/common/agent.c
	$(POSTCOMPILE)

vec.o: ${srcdir}/common/vec.c
	$(COMPILE) $(srcdir)/common/vec.c
	$(POSTCOMPILE)

linux-btrace.o: ${srcdir}/common/linux-btrace.c
	$(COMPILE) $(srcdir)/common/linux-btrace.c
	$(POSTCOMPILE)

mips-linux-watch.o: ${srcdir}/common/mips-linux-watch.c
	$(COMPILE) $(srcdir)/common/mips-linux-watch.c
	$(POSTCOMPILE)

#
# gdb/target/ dependencies
#
# Need to explicitly specify the compile rule as make will do nothing
# or try to compile the object file into the sub-directory.

waitstatus.o: ${srcdir}/target/waitstatus.c
	$(COMPILE) $(srcdir)/target/waitstatus.c
	$(POSTCOMPILE)

# gdb/nat/ dependencies
#
# Need to explicitly specify the compile rule as make will do nothing
# or try to compile the object file into the sub-directory.

linux-waitpid.o: ${srcdir}/nat/linux-waitpid.c
	$(COMPILE) $(srcdir)/nat/linux-waitpid.c
	$(POSTCOMPILE)

#
# gdb/tui/ dependencies
#
# Need to explicitly specify the compile rule as make will do nothing
# or try to compile the object file into the sub-directory.

tui.o: $(srcdir)/tui/tui.c
	$(COMPILE) $(srcdir)/tui/tui.c
	$(POSTCOMPILE)

tui-command.o: $(srcdir)/tui/tui-command.c
	$(COMPILE) $(srcdir)/tui/tui-command.c
	$(POSTCOMPILE)

tui-data.o: $(srcdir)/tui/tui-data.c
	$(COMPILE) $(srcdir)/tui/tui-data.c
	$(POSTCOMPILE)

tui-disasm.o: $(srcdir)/tui/tui-disasm.c
	$(COMPILE) $(srcdir)/tui/tui-disasm.c
	$(POSTCOMPILE)

tui-file.o: $(srcdir)/tui/tui-file.c
	$(COMPILE) $(srcdir)/tui/tui-file.c
	$(POSTCOMPILE)

tui-hooks.o: $(srcdir)/tui/tui-hooks.c
	$(COMPILE) $(srcdir)/tui/tui-hooks.c
	$(POSTCOMPILE)

tui-interp.o: $(srcdir)/tui/tui-interp.c
	$(COMPILE) $(srcdir)/tui/tui-interp.c
	$(POSTCOMPILE)

tui-io.o: $(srcdir)/tui/tui-io.c
	$(COMPILE) $(srcdir)/tui/tui-io.c
	$(POSTCOMPILE)

tui-layout.o: $(srcdir)/tui/tui-layout.c
	$(COMPILE) $(srcdir)/tui/tui-layout.c
	$(POSTCOMPILE)

tui-out.o: $(srcdir)/tui/tui-out.c
	$(COMPILE) $(srcdir)/tui/tui-out.c
	$(POSTCOMPILE)

tui-regs.o: $(srcdir)/tui/tui-regs.c
	$(COMPILE) $(srcdir)/tui/tui-regs.c
	$(POSTCOMPILE)

tui-source.o: $(srcdir)/tui/tui-source.c
	$(COMPILE) $(srcdir)/tui/tui-source.c
	$(POSTCOMPILE)

tui-stack.o: $(srcdir)/tui/tui-stack.c
	$(COMPILE) $(srcdir)/tui/tui-stack.c
	$(POSTCOMPILE)

tui-win.o: $(srcdir)/tui/tui-win.c
	$(COMPILE) $(srcdir)/tui/tui-win.c
	$(POSTCOMPILE)

tui-windata.o: $(srcdir)/tui/tui-windata.c
	$(COMPILE) $(srcdir)/tui/tui-windata.c
	$(POSTCOMPILE)

tui-wingeneral.o: $(srcdir)/tui/tui-wingeneral.c
	$(COMPILE) $(srcdir)/tui/tui-wingeneral.c
	$(POSTCOMPILE)

tui-winsource.o: $(srcdir)/tui/tui-winsource.c
	$(COMPILE) $(srcdir)/tui/tui-winsource.c
	$(POSTCOMPILE)

#
# gdb/python/ dependencies
#
# Need to explicitly specify the compile rule as make will do nothing
# or try to compile the object file into the sub-directory.

# Flags needed to compile Python code
PYTHON_CFLAGS=@@PYTHON_CFLAGS@@

python.o: $(srcdir)/python/python.c
	$(COMPILE) $(PYTHON_CFLAGS) $(srcdir)/python/python.c
	$(POSTCOMPILE)

py-arch.o: $(srcdir)/python/py-arch.c
	$(COMPILE) $(PYTHON_CFLAGS) $(srcdir)/python/py-arch.c
	$(POSTCOMPILE)

py-auto-load.o: $(srcdir)/python/py-auto-load.c
	$(COMPILE) $(PYTHON_CFLAGS) $(srcdir)/python/py-auto-load.c
	$(POSTCOMPILE)

py-block.o: $(srcdir)/python/py-block.c
	$(COMPILE) $(PYTHON_CFLAGS) $(srcdir)/python/py-block.c
	$(POSTCOMPILE)

py-bpevent.o: $(srcdir)/python/py-bpevent.c
	$(COMPILE) $(PYTHON_CFLAGS) $(srcdir)/python/py-bpevent.c
	$(POSTCOMPILE)

py-breakpoint.o: $(srcdir)/python/py-breakpoint.c
	$(COMPILE) $(PYTHON_CFLAGS) $(srcdir)/python/py-breakpoint.c
	$(POSTCOMPILE)

py-cmd.o: $(srcdir)/python/py-cmd.c
	$(COMPILE) $(PYTHON_CFLAGS) $(srcdir)/python/py-cmd.c
	$(POSTCOMPILE)

py-continueevent.o: $(srcdir)/python/py-continueevent.c
	$(COMPILE) $(PYTHON_CFLAGS) $(srcdir)/python/py-continueevent.c
	$(POSTCOMPILE)

py-event.o: $(srcdir)/python/py-event.c
	$(COMPILE) $(PYTHON_CFLAGS) $(srcdir)/python/py-event.c
	$(POSTCOMPILE)

py-evtregistry.o: $(srcdir)/python/py-evtregistry.c
	$(COMPILE) $(PYTHON_CFLAGS) $(srcdir)/python/py-evtregistry.c
	$(POSTCOMPILE)

py-evts.o: $(srcdir)/python/py-evts.c
	$(COMPILE) $(PYTHON_CFLAGS) $(srcdir)/python/py-evts.c
	$(POSTCOMPILE)

py-exitedevent.o: $(srcdir)/python/py-exitedevent.c
	$(COMPILE) $(PYTHON_CFLAGS) $(srcdir)/python/py-exitedevent.c
	$(POSTCOMPILE)

py-finishbreakpoint.o: $(srcdir)/python/py-finishbreakpoint.c
	$(COMPILE) $(PYTHON_CFLAGS) $(srcdir)/python/py-finishbreakpoint.c
	$(POSTCOMPILE)

py-frame.o: $(srcdir)/python/py-frame.c
	$(COMPILE) $(PYTHON_CFLAGS) $(srcdir)/python/py-frame.c
	$(POSTCOMPILE)

py-framefilter.o: $(srcdir)/python/py-framefilter.c
	$(COMPILE) $(PYTHON_CFLAGS) $(srcdir)/python/py-framefilter.c
	$(POSTCOMPILE)

py-function.o: $(srcdir)/python/py-function.c
	$(COMPILE) $(PYTHON_CFLAGS) $(srcdir)/python/py-function.c
	$(POSTCOMPILE)

py-gdb-readline.o: $(srcdir)/python/py-gdb-readline.c
	$(COMPILE) $(PYTHON_CFLAGS) $(srcdir)/python/py-gdb-readline.c
	$(POSTCOMPILE)

py-inferior.o: $(srcdir)/python/py-inferior.c
	$(COMPILE) $(PYTHON_CFLAGS) $(srcdir)/python/py-inferior.c
	$(POSTCOMPILE)

py-infthread.o: $(srcdir)/python/py-infthread.c
	$(COMPILE) $(PYTHON_CFLAGS) $(srcdir)/python/py-infthread.c
	$(POSTCOMPILE)

py-lazy-string.o: $(srcdir)/python/py-lazy-string.c
	$(COMPILE) $(PYTHON_CFLAGS) $(srcdir)/python/py-lazy-string.c
	$(POSTCOMPILE)

py-newobjfileevent.o: $(srcdir)/python/py-newobjfileevent.c
	$(COMPILE) $(PYTHON_CFLAGS) $(srcdir)/python/py-newobjfileevent.c
	$(POSTCOMPILE)

py-objfile.o: $(srcdir)/python/py-objfile.c
	$(COMPILE) $(PYTHON_CFLAGS) $(srcdir)/python/py-objfile.c
	$(POSTCOMPILE)

py-param.o: $(srcdir)/python/py-param.c
	$(COMPILE) $(PYTHON_CFLAGS) $(srcdir)/python/py-param.c
	$(POSTCOMPILE)

py-prettyprint.o: $(srcdir)/python/py-prettyprint.c
	$(COMPILE) $(PYTHON_CFLAGS) $(srcdir)/python/py-prettyprint.c
	$(POSTCOMPILE)

py-progspace.o: $(srcdir)/python/py-progspace.c
	$(COMPILE) $(PYTHON_CFLAGS) $(srcdir)/python/py-progspace.c
	$(POSTCOMPILE)

py-signalevent.o: $(srcdir)/python/py-signalevent.c
	$(COMPILE) $(PYTHON_CFLAGS) $(srcdir)/python/py-signalevent.c
	$(POSTCOMPILE)

py-stopevent.o: $(srcdir)/python/py-stopevent.c
	$(COMPILE) $(PYTHON_CFLAGS) $(srcdir)/python/py-stopevent.c
	$(POSTCOMPILE)

py-symbol.o: $(srcdir)/python/py-symbol.c
	$(COMPILE) $(PYTHON_CFLAGS) $(srcdir)/python/py-symbol.c
	$(POSTCOMPILE)

py-symtab.o: $(srcdir)/python/py-symtab.c
	$(COMPILE) $(PYTHON_CFLAGS) $(srcdir)/python/py-symtab.c
	$(POSTCOMPILE)

py-threadevent.o: $(srcdir)/python/py-threadevent.c
	$(COMPILE) $(PYTHON_CFLAGS) $(srcdir)/python/py-threadevent.c
	$(POSTCOMPILE)

py-type.o: $(srcdir)/python/py-type.c
	$(COMPILE) $(PYTHON_CFLAGS) $(srcdir)/python/py-type.c
	$(POSTCOMPILE)

py-utils.o: $(srcdir)/python/py-utils.c
	$(COMPILE) $(PYTHON_CFLAGS) $(srcdir)/python/py-utils.c
	$(POSTCOMPILE)

py-value.o: $(srcdir)/python/py-value.c
	$(COMPILE) $(PYTHON_CFLAGS) $(srcdir)/python/py-value.c
	$(POSTCOMPILE)

#
# Dependency tracking.  Most of this is conditional on GNU Make being
# found by configure; if GNU Make is not found, we fall back to a
# simpler scheme.
#

@@GMAKE_TRUE@@ifeq ($(DEPMODE),depmode=gcc3)
# Note that we put the dependencies into a .Tpo file, then move them
# into place if the compile succeeds.  We need this because gcc does
# not atomically write the dependency output file.
@@GMAKE_TRUE@@override COMPILE.post = -c -o $@@ -MT $@@ -MMD -MP \
@@GMAKE_TRUE@@	-MF $(DEPDIR)/$(basename $(@@F)).Tpo
@@GMAKE_TRUE@@override POSTCOMPILE = @@mv $(DEPDIR)/$(basename $(@@F)).Tpo \
@@GMAKE_TRUE@@	$(DEPDIR)/$(basename $(@@F)).Po
@@GMAKE_TRUE@@else
@@GMAKE_TRUE@@override COMPILE.pre = source='$<' object='$@@' libtool=no \
@@GMAKE_TRUE@@	DEPDIR=$(DEPDIR) $(DEPMODE) $(depcomp) $(CC)
# depcomp handles atomicity for us, so we don't need a postcompile
# step.
@@GMAKE_TRUE@@override POSTCOMPILE =
@@GMAKE_TRUE@@endif

# A list of all the objects we might care about in this build, for
# dependency tracking.
all_object_files = gdb.o $(LIBGDB_OBS) gdbtk-main.o \
	test-cp-name-parser.o

# Ensure that generated files are created early.  Use order-only
# dependencies if available.  They require GNU make 3.80 or newer,
# and the .VARIABLES variable was introduced at the same time.
@@GMAKE_TRUE@@ifdef .VARIABLES
@@GMAKE_TRUE@@$(all_object_files): | $(generated_files)
@@GMAKE_TRUE@@else
$(all_object_files) : $(generated_files)
@@GMAKE_TRUE@@endif

# Dependencies.
@@GMAKE_TRUE@@-include $(patsubst %.o, $(DEPDIR)/%.Po, $(all_object_files))

### end of the gdb Makefile.in.
@


1.1273
log
@gdb/

	* Makefile.in (SFILES): Add c-varobj.c and jv-varobj.c.
	(COMMON_OBS): Add c-varobj.o and jv-varobj.o.
	* ada-varobj.c: Include "varobj.h".
	(ada_number_of_children): New.  Moved from varobj.c.
	(ada_name_of_variable, ada_name_of_child): Likewise.
	(ada_path_expr_of_child, ada_value_of_child): Likewise.
	(ada_type_of_child, ada_value_of_variable): Likewise.
	(ada_value_is_changeable_p, ada_value_has_mutated): Likewise.
	(ada_varobj_ops): New.
	* c-varobj.c, jv-varobj.c: New file.  Moved from varobj.c.
	* gdbtypes.c (get_target_type): New.  Moved from varobj.c.
	* gdbtypes.h (get_target_type): Declare.
	* varobj.c: Remove the inclusion of "ada-varobj.h" and
	"ada-lang.h".
	(ANONYMOUS_STRUCT_NAME): Move it to c-varobj.c.
	(ANONYMOUS_UNION_NAME): Likewise.
	(get_type, get_value_type, get_target_type): Remove declarations.
	(value_get_print_value, varobj_value_get_print_value): Likewise.
	(c_number_of_children, c_name_of_variable): Likewise.
	(c_name_of_child, c_path_expr_of_child): Likewise.
	(c_value_of_child, c_type_of_child): Likewise.
	(c_value_of_variable, cplus_number_of_children): Likewise.
	(cplus_class_num_children, cplus_name_of_variable): Likewise.
	(cplus_name_of_child, cplus_path_expr_of_child): Likewise.
	(cplus_value_of_child, cplus_type_of_child): Likewise.
	(cplus_value_of_variable, java_number_of_children): Likewise.
	(java_name_of_variable, java_name_of_child): Likewise.
	(java_path_expr_of_child, java_value_of_child): Likewise.
	(java_type_of_child, java_value_of_variable): Likewise.
	(ada_number_of_children, ada_name_of_variable): Likewise.
	(ada_name_of_child, ada_path_expr_of_child): Likewise.
	(ada_value_of_child, ada_type_of_child): Likewise.
	(ada_value_of_variable, ada_value_is_changeable_p): Likewise.
	(ada_value_has_mutated): Likewise.
	(struct language_specific): Move it to varobj.h.
	(CPLUS_FAKE_CHILD): Move it to varobj.h.
	(restrict_range): Rename it varobj_restrict_range.  Make it extern.
	Callers update.
	(get_path_expr_parent): Rename it to varobj_get_path_expr_parent.
	Make it extern.
	(is_anonymous_child): Move it to c-varobj.c and rename to
	varobj_is_anonymous_child.  Caller update.
	(get_type): Move it to c-varobj.c.
	(get_value_type): Rename it varobj_get_value_type.  Make it
	extern.
	(get_target_type): Move it gdbtypes.c.
	(varobj_formatted_print_options): New function.
	(value_get_print_value): Rename it to
	varobj_value_get_print_value and make it extern.
	(varobj_value_is_changeable_p): Make it extern.
	(adjust_value_for_child_access): Move it to c-varobj.c.
	(default_value_is_changeable_p): Rename it to
	varobj_default_value_is_changeable_p.  Make it extern.
	(c_number_of_children, c_name_of_variable): Move it to c-varobj.c
	(c_name_of_child, c_path_expr_of_child): Likewise.
	(c_value_of_child, c_type_of_child): Likewise.
	(c_value_of_variable, cplus_number_of_children): Likewise.
	(cplus_class_num_children, cplus_name_of_variable): Likewise.
	(cplus_name_of_child, cplus_path_expr_of_child): Likewise.
	(cplus_value_of_child, cplus_type_of_child): Likewise.
	(cplus_value_of_variable): Likewise.
	(java_number_of_children, java_name_of_variable): Move it to jv-varobj.c.
	(java_name_of_child, java_path_expr_of_child): Likewise.
	(java_value_of_child, java_type_of_child): Likewise.
	(java_value_of_variable): Likewise.
	(ada_number_of_children, ada_name_of_variable): Move it to ada-varobj.c.
	(ada_name_of_child, ada_path_expr_of_child): Likewise.
	(ada_value_of_child, ada_type_of_child): Likewise.
	(ada_value_of_variable, ada_value_is_changeable_p): Likewise.
	(ada_value_has_mutated): Likewise.
	* varobj.h (CPLUS_FAKE_CHILD): New macro, moved from varobj.c.
	(struct lang_varobj_ops): New.  Renamed by 'struct language_specific'.
	(c_varobj_ops, cplus_varobj_ops): Declare.
	(java_varobj_ops, ada_varobj_ops): Declare.
	(varobj_default_value_is_changeable_p): Declare.
	(varobj_value_is_changeable_p): Declare.
	(varobj_get_value_type, varobj_is_anonymous_child): Declare.
	(varobj_get_path_expr_parent): Declare.
	(varobj_value_get_print_value): Declare.
	(varobj_formatted_print_options): Declare.
	(varobj_restrict_range): Declare.
@
text
@d798 1
a798 1
ia64-tdep.h ada-lang.h ada-varobj.h varobj.h frv-tdep.h nto-tdep.h serial.h \
@


1.1272
log
@	* Makefile.in (GDBFLAGS): New variable.
	(run): New rule.
@
text
@d724 1
a724 1
	c-exp.y c-lang.c c-typeprint.c c-valprint.c \
d745 1
a745 1
	jv-exp.y jv-lang.c jv-valprint.c jv-typeprint.c \
d929 1
a929 1
	ada-tasks.o ada-varobj.o \
d933 1
a933 1
	jv-lang.o jv-valprint.o jv-typeprint.o \
@


1.1271
log
@fix PR symtab/15597

This patch fixes gdb PR symtab/15597.

The bug is that the .gnu_debugaltlink section includes the build-id of
the alt file, but gdb does not use it.

This patch fixes the problem by changing gdb to do what it ought to
always have done: verify the build id of the file found using the
filename in .gnu_debugaltlink; and if that does not match, try to find
the correct debug file using the build-id and debug-file-directory.

This patch touches BFD.  Previously, gdb had its own code for parsing
.gnu_debugaltlink; I changed it to use the BFD functions after those
were introduced.  However, the BFD functions are incorrect -- they
assume that .gnu_debugaltlink is formatted like .gnu_debuglink.
However, it it is not.  Instead, it consists of a file name followed
by the build-id -- no alignment, and the build-id is not a CRC.

Fixing this properly is a bit of a pain.  But, because
separate_alt_debug_file_exists just has a FIXME for the build-id case,
I did not fix it properly.  Instead I introduced a hack.  This leaves
BFD working just as well as it did before my patch.

I'm willing to do something better here but I could use some guidance
as to what.  It seems that the build-id code in BFD is largely punted
on.

FWIW gdb is the only user of bfd_get_alt_debug_link_info outside of
BFD itself.

I moved the build-id logic out of elfread.c and into a new file.
This seemed cleanest to me.

Writing a test case was a bit of a pain.  I added a couple new
features to the DWARF assembler to handle this.

Built and regtested on x86-64 Fedora 18.

	* bfd-in2.h: Rebuild.
	* opncls.c (bfd_get_alt_debug_link_info): Add buildid_len
	parameter.  Change type of buildid_out.  Update.
	(get_alt_debug_link_info_shim): New function.
	(bfd_follow_gnu_debuglink): Use it.

	* Makefile.in (SFILES): Add build-id.c.
	(HFILES_NO_SRCDIR): Add build-id.h.
	* build-id.c: New file, largely from elfread.c.  Modified
	most functions.
	* build-id.h: New file.
	* dwarf2read.c (dwarf2_get_dwz_file): Update for change to
	bfd_get_alt_debug_link_info.  Verify dwz file's build-id.
	Search for dwz file using build-id.
	* elfread.c (build_id_bfd_get, build_id_verify)
	(build_id_to_debug_filename, find_separate_debug_file): Remove.

	* gdb.dwarf2/dwzbuildid.exp: New file.
	* lib/dwarf.exp (Dwarf::_section): Add "flags" and "type"
	parameters.
	(Dwarf::_defer_output): Change "section" parameter to
	"section_spec"; update.
	(Dwarf::gnu_debugaltlink, Dwarf::_note, Dwarf::build_id): New
	procs.
@
text
@d181 3
d1347 4
@


1.1270
log
@	New option "set debug symfile on".
	* NEWS: Mention "set debug symfile".
	* Makefile.in (SFILES): Add symfile-debug.c.
	(COMMON_OBS): Add symfile-debug.o.
	* elfread.c (elf_symfile_read): Use objfile_set_sym_fns to set the
	objfile's symbol functions.
	* objfiles.h (objfile_set_sym_fns): Declare.
	* symfile-debug.c: New file.
	* symfile.c (syms_from_objfile_1): Use objfile_set_sym_fns to set the
	objfile's symbol functions.
	(reread_symbols): Ditto.
@
text
@d720 1
a720 1
	buildsym.c \
d817 2
a818 1
expression.h score-tdep.h gdb_select.h ser-tcp.h buildsym.h valprint.h \
d915 2
a916 1
	memattr.o mem-break.o target.o parse.o language.o buildsym.o \
@


1.1269
log
@Remove solib-sunos.c

gdb/
2013-09-24  Jan Kratochvil  <jan.kratochvil@@redhat.com>

	Remove solib-sunos.c.
	* Makefile.in (ALLDEPFILES): Remove solib-sunos.c.
	* config/m68k/obsd.mh (NATDEPFILES): Remove solib-sunos.o.
	* objfiles.c (rt_common_objfile): Remove.
	(free_objfile): Remove rt_common_objfile comparison.
	* objfiles.h (rt_common_objfile): Remove.
	* solib-sunos.c: Remove.
	* symfile.c (reread_symbols): Remove solib-sunos.c comment.
@
text
@d759 1
a759 1
	symfile.c symfile-mem.c symmisc.c symtab.c \
d897 2
a898 1
	block.o symtab.o psymtab.o symfile.o symmisc.o linespec.o dictionary.o \
@


1.1268
log
@Extract Linux-specific portitions of cris-tdep.c to a new file.
This brings in some standard functionality hitherdo missing from
the CRIS/CRISv32 port thanks to the new call to gdbarch_init_osabi,
as well as clearly showing that there is Linux support for this
platform by virtue of the existence of a cris-linux-tdep.c file.

2013-09-06  Ricard Wanderlof  <ricardw@@axis.com>

	* Makefile.in (ALL_TARGET_OBS): Add cris-linux-tdep.o.
	* configure.tgt: Add cris-linux-tdep.o and linux-tdep.o to
	gdb_target_obs for cris target.
	* cris-tdep.c (struct gdbarch_tdep): Move to cris-tdep.h.
	(cris_gdbarch_init): Move calls to
	set_gdbarch_fetch_tls_load_module_address and
	set_solib_svr4_fetch_link_map_offsets to cris-linux-tdep.c.
	Add call to gdbarch_init_osabi.
	* cris-linux-tdep.c: New file.
	* cris-tdep.h: New file.
@
text
@d1549 1
a1549 1
	solib-irix.c solib-svr4.c solib-sunos.c \
@


1.1267
log
@	Unify ptrace options discovery code and make both GDB and
	gdbserver use it.

	gdb/
	* Makefile.in (HFILES_NO_SRCDIR): Add nat/linux-nat.h and
	nat/linux-waitpid.h.
	(linux-waitpid.o): New object file rule.
	* common/linux-ptrace.c: Include nat/linux-waitpid.h.
	(current_ptrace_options): Moved from linux-nat.c.
	(linux_ptrace_test_ret_to_nx): Use type casts for ptrace
	parameters.
	(linux_fork_to_function): New function.
	(linux_grandchild_function): Likewise.
	(linux_child_function): Likewise.
	(linux_check_ptrace_features): New function, heavily
	based on linux-nat.c:linux_test_for_tracefork.
	(linux_enable_event_reporting): New function.
	(ptrace_supports_feature): Likewise.
	(linux_supports_tracefork): Likewise.
	(linux_supports_traceclone): Likewise.
	(linux_supports_tracevforkdone): Likewise.
	(linux_supports_tracesysgood): Likewise.
	* common/linux-ptrace.h (HAS_NOMMU): Moved from
	gdbserver/linux-low.c.
	(linux_enable_event_reporting): New declaration.
	(linux_supports_tracefork): Likewise.
	(linux_supports_traceclone): Likewise.
	(linux_supports_tracevforkdone): Likewise.
	(linux_supports_tracesysgood): Likewise.
	* config.in (PTRACE_TYPE_ARG4): Regenerate.
	* config/aarch64/linux.mh (NATDEPFILES): Add linux-waitpid.o.
	* config/alpha/alpha-linux.mh (NATDEPFILES): Likewise.
	* config/arm/linux.mh (NATDEPFILES): Likewise.
	* config/i386/linux.mh (NATDEPFILES): Likewise.
	* config/i386/linux64.mh (NATDEPFILES): Likewise.
	* config/ia64/linux.mh (NATDEPFILES): Likewise.
	* config/m32r/linux.mh (NATDEPFILES): Likewise.
	* config/m68k/linux.mh (NATDEPFILES): Likewise.
	* config/mips/linux.mh (NATDEPFILES): Likewise.
	* config/pa/linux.mh (NATDEPFILES): Likewise..
	* config/powerpc/linux.mh (NATDEPFILES): Likewise..
	* config/powerpc/ppc64-linux.mh (NATDEPFILES): Likewise.
	* config/powerpc/spu-linux.mh (NATDEPFILES): Likewise.
	* config/sparc/linux.mh (NATDEPFILES): Likewise.
	* config/sparc/linux64.mh (NATDEPFILES): Likewise.
	* config/tilegx/linux.mh (NATDEPFILES): Likewise.
	* config/xtensa/linux.mh (NATDEPFILES): Likewise.
	* configure.ac (AC_CACHE_CHECK): Add void * to the list of
	ptrace's 4th argument's types.
	Check the type of PTRACE_TYPE_ARG4.
	* configure: Regenerate.
	* linux-nat.c: Include nat/linux-nat.h and nat/linux-waitpid.h.
	(SYSCALL_SIGTRAP): Moved to nat/linux-nat.h.
	(linux_supports_tracefork_flag): Remove.
	(linux_supports_tracesysgood_flag): Likewise.
	(linux_supports_tracevforkdone_flag): Likewise.
	(current_ptrace_options): Moved to
	common/linux-ptrace.c.
	(linux_tracefork_child): Remove.
	(my_waitpid): Remove.
	(linux_test_for_tracefork): Renamed to
	linux_check_ptrace_features and moved to common/linux-ptrace.c.
	(linux_test_for_tracesysgood): Remove.
	(linux_supports_tracesysgood): Remove.
	(linux_supports_tracefork): Remove.
	(linux_supports_tracevforkdone): Remove.
	(linux_enable_tracesysgood): Remove.
	(linux_enable_event_reporting): Remove.
	(linux_init_ptrace): New function.
	(linux_child_post_attach): Call linux_init_ptrace.
	(linux_child_post_startup_inferior): Call linux_init_ptrace.
	(linux_child_follow_fork): Call linux_supports_tracefork
	and linux_supports_tracevforkdone.
	(linux_child_insert_fork_catchpoint): Call
	linux_supports_tracefork.
	(linux_child_insert_vfork_catchpoint): Likewise.
	(linux_child_set_syscall_catchpoint): Call
	linux_supports_tracesysgood.
	(lin_lwp_attach_lwp): Call linux_supports_tracefork.
	* nat/linux-nat.h: New file.
	* nat/linux-waitpid.c: New file.
	* nat/linux-waitpid.h: New file.

	gdb/gdbserver/
	* Makefile.in: Explain why ../target and ../nat are not
	listed as include file search paths.
	(linux-waitpid.o): New object file rule.
	* configure.srv (srv_native_linux_obj): New variable.
	Replace all occurrences of linux native object files with
	$srv_native_linux_obj.
	* linux-low.c: Include nat/linux-nat.h and nat/linux-waitpid.h.
	(HAS_NOMMU): Move defining logic to common/linux-ptrace.c.
	(linux_enable_event_reporting): Remove declaration.
	(my_waitpid): Moved to common/linux-waitpid.c.
	(linux_wait_for_event): Pass ptid when calling
	linux_enable_event_reporting.
	(linux_supports_tracefork_flag): Remove.
	(linux_enable_event_reporting): Likewise.
	(linux_tracefork_grandchild): Remove.
	(STACK_SIZE): Moved to common/linux-ptrace.c.
	(linux_tracefork_child): Remove.
	(linux_test_for_tracefork): Remove.
	(linux_look_up_symbols): Call linux_supports_traceclone.
	(initialize_low): Remove call to linux_test_for_tracefork.
	* linux-low.h (PTRACE_TYPE_ARG3): Move to
	common/linux-ptrace.h.
	(PTRACE_TYPE_ARG4): Likewise.
	Include linux-ptrace.h.
@
text
@d553 1
a553 1
	cris-tdep.o \
@


1.1266
log
@	gdb/
	* Makefile.in (SFILES): Remove common/target-common.c and
	add target/waitstatus.c.
	(HFILES_NO_SRCDIR): Remove common/target-common.h and add
	target/resume.h, target/wait.h and target/waitstatus.h.
	(COMMON_OBS): Remove target-common.o and add
	waitstatus.o.
	(target-common.o): Remove.
	(waitstatus.o): New target object file.
	* common/target-common.c: Move contents to
	target/waitstatus.c and remove.
	* common/target-common.h: Move contents to other files and
	remove.
	(enum resume_kind: Move to target/resume.h.
	(TARGET_WNOHANG): Move to target/wait.h.
	(enum target_waitkind): Move to target/waitstatus.h.
	(struct target_waitstatus): Likewise.
	* target.h: Do not include target-common.h and
	include target/resume.h, target/wait.h and
	target/waitstatus.h.
	* target/resume.h: New file.
	* target/wait.h: New file.
	* target/waitstatus.h: New file.
	* target/waitstatus.c: New file.

	gdb/gdbserver/
	* Makefile.in (INCLUDE_CFLAGS): Include -I$(srcdir)/../.
	(SFILES): Remove $(srcdir)/common/target-common.c and
	add $(srcdir)/target/waitstatus.c.
	(OBS): Remove target-common.o and add waitstatus.o.
	(server_h): Remove $(srcdir)/../common/target-common.h and
	add $(srcdir)/../target/resume.h, $(srcdir)/../target/wait.h
	and $(srcdir)/../target/waitstatus.h.
	(target-common.o): Remove.
	(waitstatus.o): New target object file.
	* target.h: Do not include target-common.h and
	include target/resume.h, target/wait.h and
	target/waitstatus.h.
@
text
@d858 1
a858 1
target/wait.h target/waitstatus.h
d2040 9
@


1.1265
log
@Make functions in cli-dump.c static and remove cli-dump.h.

I noticed the functions declared in cli-dump.h aren't used anywhere
outside cli-dump.c.

The original patch that introduced cli-dump.c didn't include this header:

 http://sourceware.org/ml/gdb-patches/2002-03/msg00518.html

But for some reason that I couldn't find from reading the archives around
that patch's discussion, cli-dump.h was introduced in the final checkin,
at:

 http://sourceware.org/ml/gdb-patches/2002-03/msg00596.html

There seems to be no point in keeping this around nowadays.

gdb/
2013-08-09  Pedro Alves  <palves@@redhat.com>

	* cli/cli-dump.c: Don't include cli/cli-dump.h.
	(scan_expression_with_cleanup, scan_filename_with_cleanup)
	(fopen_with_cleanup, add_dump_command): Make static.
	* cli/cli-dump.h: Delete file.
	* Makefile.in (HFILES_NO_SRCDIR): Remove reference to
	cli/cli-dump.h.
@
text
@d778 1
a778 1
	common/target-common.c
d857 2
a858 1
ctf.h common/i386-cpuid.h common/i386-gcc-cpuid.h common/target-common.h
d952 1
a952 1
	format.o registry.o btrace.o record-btrace.o target-common.o
d2026 2
a2027 2
target-common.o: ${srcdir}/common/target-common.c
	$(COMPILE) $(srcdir)/common/target-common.c
d2030 8
a2037 2
mips-linux-watch.o: ${srcdir}/common/mips-linux-watch.c
	$(COMPILE) $(srcdir)/common/mips-linux-watch.c
@


1.1264
log
@gdb/

	* Makefile.in (HFILES_NO_SRCDIR): Add
	common/mips-linux-watch.h.
	(mips-linux-watch.o): New rule.
	* common/mips-linux-watch.c: New.
	* common/mips-linux-watch.h: New.
	* config/mips/linux.mh (NATDEPFILES): Add mips-linux-watch.o
	* mips-linux-nat.c: Include mips-linux-watch.h.
	(W_BIT, R_BIT, I_BIT, W_MASK, R_MASK, I_MASK, IRW_MASK): Move
	to common/mips-linux-watch.h.
	(MAX_DEBUG_REGISTER): Likewise.
	(enum pt_watch_style): Likewise.
	(struct mips32_watch_regs): Likewise.
	(struct mips64_watch_regs): Likewise.
	(struct pt_watch_regs): Likewise.
	(struct mips_watchpoint): Likewise.
	(mips_linux_watch_get_irw_mask): Move to
	common/mips-linux-watch.c.
	(get_reg_mask, mips_linux_watch_get_num_valid): Likewise.
	(mips_linux_watch_get_watchlo): Likewise.
	(mips_linux_watch_set_watchlo): Likewise.
	(mips_linux_watch_get_watchhi): Likewise.
	(mips_linux_watch_set_watchhi): Likewise.
	(mips_linux_read_watch_registers): Likewise.
	(mips_linux_watch_type_to_irw): Likewise.
	(mips_linux_stopped_data_address, fill_mask): Likewise.
	(mips_linux_watch_try_one_watch): Likewise.
	(mips_linux_watch_populate_regs): Likewise.
@
text
@d797 1
a797 1
cli/cli-decode.h cli/cli-cmds.h cli/cli-dump.h cli/cli-utils.h \
@


1.1263
log
@	gdb/
	* Makefile.in (SFILES): Add common/target-common.c.
	Add common/target-common.h to headers.
	(COMMON_OBS): Add target-common.o.
	(target-common.o): New target.
	* linux-nat.h (resume_kind): Move to common/target-common.h.
	* target.c (target_waitstatus_to_string): Move to
	common/target-common.c.
	* target.h: Include target-common.h.
	(target_waitkind): Move to common/target-common.h.
	(target_waitstatus): Likewise.
	(TARGET_WNOHANG): Likewise.
	* common/target-common.c: New file.
	* common/target-common.h: New file.

	gdb/gdbserver/
	* Makefile.in (SFILES): /common/target-common.c.
	(OBS): Add target-common.o.
	(server_h): Add $(srcdir)/../common/target-common.h.
	(target-common.o): New target.
	* server.c (queue_stop_reply_callback): Free
	status string after use.
	* target.c (target_waitstatus_to_string): Remove.
	* target.h: Include target-common.h.
	(resume_kind): Likewise.
	(target_waitkind): Likewise.
	(target_waitstatus): Likewise.
	(TARGET_WNOHANG): Likewise.
@
text
@d790 1
a790 1
common/i386-xstate.h common/linux-ptrace.h \
d2029 4
@


1.1262
log
@	* Makefile.in (GDB_WARN_CFLAGS_NO_DEFS, ADA_EXP_C): New macros.
	(ada-exp.o): New target.
@
text
@d777 2
a778 1
	common/format.c common/filestuff.c btrace.c record-btrace.c ctf.c
d857 1
a857 1
ctf.h common/i386-cpuid.h common/i386-gcc-cpuid.h
d951 1
a951 1
	format.o registry.o btrace.o record-btrace.o
d2025 4
@


1.1261
log
@On mainline/development, also link GDBserver with -lmcheck.

This factors --enable-libmcheck related bits from GDB's configure.ac
and makes GDBserver use them too.  Specifically, the 'development'
global is moved to a separate script to it can be sourced by both GDB
and GDBserver, and the --enable-libmcheck/--disable-libmcheck bits
proper are moved to a new m4 file.

I started out by defining 'development' in the m4 file, but in the end
decided against it, as a separate script has the advantage that
changing it in release branches does not require regenerating
configure, unlike today.

I had also started out by making the new GDB_AC_LIBMCHECK itself
handle the yes/no default fallback depending on release/developement,
but since I had split out 'development' to a separate script, and, GDB
needs the python checks anyway (hence we'd need to do the python
checks in gdb's configure.ac, and pass in a 'default lmcheck yes/no'
parameter to GDB_AC_LIBMCHECK anyway), I ended up keeping
GDB_AC_LIBMCHECK isolated from the 'development' global.  IOW, it's
the caller's business to handle it.

Tested on x86_64 Fedora 17.  Built GDB and GDBserver with and without
--enable-libmcheck, and observed --enable-libmcheck overrides the
disablement of -lmcheck caused by python supporting threads, and that
GDBserver links with -lmcheck when expected.  Also observed that
changing the 'development' global, and issuing "make" triggers a
relink, and '-lmcheck' is included or not from the link accordingly.

gdb/
2013-07-03  Pedro Alves  <palves@@redhat.com>

	* Makefile.in (config.status): Depend on development.sh.
	(aclocal_m4_deps): Add libmcheck.m4.
	* acinclude.m4: Include libmcheck.m4.
	* configure.ac: Source development.sh instead of setting
	'development' here.  --enable-libmcheck/--disable-libmcheck code
	factored out to GDB_AC_LIBMCHECK.  Run it.
	* development.sh: New file.
	* libmcheck.m4: New file.
	* configure: Regenerate.

gdb/gdbserver/
2013-07-03  Pedro Alves  <palves@@redhat.com>

	* Makefile.in (config.status): Depend on development.sh.
	* acinclude.m4: Include libmcheck.m4.
	* configure: Regenerate.
@
text
@d168 2
d1586 11
@


1.1260
log
@move version.in from gdb/common back to gdb

This reverts part of the earlier version.in change.  It moves
version.in back to the gdb directory.  This works around the CVS bug
we've found.

gdb
	* Makefile.in (version.c): Use version.in, not
	common/version.in.
	* common/create-version.sh: Likewise.
	* common/version.in: Move...
	* version.in: ...here.
gdb/doc
	* Makefile.in (version.subst): Use version.in, not
	common/version.in.
	* gdbint.texinfo (Versions and Branches, Releasing GDB):
	Likewise.
gdb/gdbserver
	* Makefile.in (version.c): Use version.in, not
	common/version.in.
sim/common
	* Make-common.in (version.c): Use version.in, not
	common/version.in.
	* create-version.sh: Likewise.
sim/ppc:
	* Make-common.in (version.c): Use version.in, not
	common/version.in.
@
text
@d1351 1
a1351 1
config.status: $(srcdir)/configure configure.tgt configure.host
d1361 1
@


1.1259
log
@	* Makefile.in (ALL_TARGET_OBS): Add msp430-tdep.o.
	(ALLDEPFILES): Add msp430-tdep.c.
	* configure.tgt (msp430*-*-elf): New target.
	* msp430-tdep.c: New file.
@
text
@d1424 1
a1424 1
version.c: Makefile common/version.in $(srcdir)/../bfd/version.h $(srcdir)/common/create-version.sh
@


1.1258
log
@don't keep a gdb-specific date

Right now there are two nightly commits to update a file in the tree
with the current date.  One commit is for BFD, one is for gdb.

It seems unnecessary to me to do this twice.  We can make do with a
single such commit.

This patch changes gdb in a minimal way to reuse the BFD date -- it
extracts it from bfd/version.h and changes version.in to use the
placeholder string "DATE" for those times when a date is wanted.

I propose removing the cron job that updates the version on trunk, and
then check in this patch.

For release branches, we can keep the cron job, but just tell it to
rewrite bfd/version.h.  I believe this is a simple change in the
crontab -- the script will work just fine on this file.

This also moves version.in and version.h into common/, to reflect
their shared status; and updates gdbserver to use version.h besides.

	* common/create-version.sh: New file.
	* Makefile.in (version.c): Use bfd/version.h, common/version.in,
	create-version.sh.
	(HFILES_NO_SRCDIR): Use common/version.h.
	* version.in: Move to ...
	* common/version.in: ... here.  Replace date with "DATE".
	* version.h: Move to ...
	* common/version.h: ... here.
gdbserver:
	* Makefile.in (version.c): Use bfd/version.h, common/version.in,
	create-version.sh.
	(version.o): Remove.
	* gdbreplay.c: Include version.h.
	(version, host_name): Don't declare.
	* server.h: Include version.h.
	(version, host_name): Don't declare.
doc:
	* Makefile.in (POD2MAN1, POD2MAN5): Use version.subst.
	(GDBvn.texi): Use version.subst.
	(version.subst): New target.
	(mostlyclean): Remove version.subst.
@
text
@d575 1
d1520 1
@


1.1257
log
@gdb: clean up x86 cpuid implementations

We've currently got 3 files doing open coded implementations of cpuid.
Each has its own set of workarounds and varying levels of how well
they're written and are generally hardcoded to specific cpuid functions.
If you try to build the latest gdb as a PIE on an i386 system, the build
will fail because one of them lacks PIC workarounds (wrt ebx).

Specifically, we have:
common/linux-btrace.c:
	two copies of cpuid asm w/specific args, one has no workarounds
	while the other implicitly does to avoid memcpy
go32-nat.c:
	two copies of cpuid asm w/specific args, one has workarounds to
	avoid memcpy
gdb/testsuite/gdb.arch/i386-cpuid.h:
	one general cpuid asm w/many workarounds copied from older gcc

Fortunately, that last header there is pretty damn good -- it handles
lots of edge cases, the code is nice & tight (uses gcc asm operands
rather than manual movs), and is already almost a general library type
header.  It's also the basis of what is now the public cpuid.h that is
shipped with gcc-4.3+.

So what I've done is pull that test header out and into gdb/common/
(not sure if there's a better place), synced to the version found in
gcc-4.8.0, put a wrapper API around it, and then cut over all the
existing call points to this new header.

Since the func already has support for "is cpuid supported on this proc",
it makes it trivial to push the i386/x86_64 ifdefs down into this wrapper
API too.  Now it can be safely used for all targets and gcc will elide
the unused code for us.

I've verified the gdb.arch testsuite still passes, and this code compiles
for an armv7a host as well as x86_64.  The go32-nat code has been left
ifdef-ed out until someone can test & verify the new stuff works (and if
it doesn't, figure out how to make the new code work).

URL: https://bugs.gentoo.org/467806
Signed-off-by: Mike Frysinger <vapier@@gentoo.org>
@
text
@d794 1
a794 1
cli/cli-script.h macrotab.h symtab.h version.h \
d1423 3
a1425 7
version.c: Makefile version.in
	rm -f version.c-tmp version.c
	echo '#include "version.h"' >> version.c-tmp
	echo 'const char version[] = "'"`sed q ${srcdir}/version.in`"'";' >> version.c-tmp
	echo 'const char host_name[] = "$(host_alias)";' >> version.c-tmp
	echo 'const char target_name[] = "$(target_alias)";' >> version.c-tmp
	mv version.c-tmp version.c
@


1.1256
log
@2013-05-20  Andreas Tobler  <andreas@@fgznet.ch>

        * Makefile.in (ALL_TARGET_OBS): Add ppcfbsd-tdep.o.
        (ALLDEPFILES): Add ppcfbsd-nat.c and ppcfbsd-tdep.c.
@
text
@d853 1
a853 1
ctf.h
@


1.1255
log
@ppc-aix core file relocation.

The current code attempts to provide relocation support when debugging
core files via the rs6000_xfer_partial method of the rs6000-nat
target_ops vector. However, this target_ops vector does not get pushed
on the target stack at all when debugging core files, thus bypassing
completely that part of the code.

This patch fixes the problem by extending corelow's core_xfer_partial
into handling the TARGET_OBJECT_LIBRARIES_AIX object.

gdb/ChangeLog:

	* gdbarch.sh (core_xfer_shared_libraries_aix): New method.
	* gdbarch.h, gdbarch.c: Regenerate.
	* corelow.c (core_xfer_partial): Add TARGET_OBJECT_LIBRARIES_AIX
	handling.

	* rs6000-aix-tdep.h: New file.
	* Makefile.in (HFILES_NO_SRCDIR): Add rs6000-aix-tdep.h.
	* rs6000-aix-tdep.c: Include "rs6000-aix-tdep.h" and
	"xml-utils.h".
	(struct field_info, struct ld_info_desc): New types.
	(ld_info32_desc, ld_info64_desc): New static constants.
	(struct ld_info): New type.
	(rs6000_aix_extract_ld_info): New function.
	(rs6000_aix_shared_library_to_xml): Likewise.
	(rs6000_aix_ld_info_to_xml): Likewise.
	(rs6000_aix_core_xfer_shared_libraries_aix): Likewise.
	(rs6000_aix_init_osabi): Add call to
	set_gdbarch_core_xfer_shared_libraries_aix.
	* rs6000-nat.c: Add "rs6000-aix-tdep.h" include.
	Remove "xml-utils.h" include.
	(LdInfo): Delete typedef.
	(ARCH64_DECL, LDI_FIELD, LDI_NEXT, LDI_FD, LDI_FILENAME):
	Delete macros.
	(rs6000_ptrace_ldinfo): Change return type to gdb_byte *.
	Adjust code accordingly.
	(rs6000_core_ldinfo): Delete, folded into
	rs6000_aix_core_xfer_shared_libraries_aix.
	(rs6000_xfer_shared_library): Delete.
	(rs6000_xfer_shared_libraries): Reimplement.
@
text
@d578 2
a579 2
	ppc-linux-tdep.o ppcnbsd-tdep.o ppcobsd-tdep.o ppc-sysv-tdep.o \
	ppc64-tdep.o rl78-tdep.o \
d1529 1
@


1.1254
log
@2013-05-10  Phil Muldoon  <pmuldoon@@redhat.com>

	* stack.c (backtrace_command_1): Add "no-filters", and Python frame
	filter logic.
	(backtrace_command): Add "no-filters" option parsing.
	(_initialize_stack): Alter help to reflect "no-filters" option.
	* Makefile.in (SUBDIR_PYTHON_OBS): Add py-framefilter.o
	(SUBDIR_PYTHON_SRCS): Add py-framefilter.c
	(py-frame.o): Add target
	* data-directory/Makefile.in (PYTHON_DIR): Add Python frame
	filter files.
	* python/python.h: Add new frame filter constants, and flag enum.
	(apply_frame_filter): Add definition.
	* python/python.c (apply_frame_filter): New non-Python
	enabled function.
	* python/py-utils.c (py_xdecref): New function.
	(make_cleanup_py_xdecref): Ditto.
	* python/py-objfile.c: Declare frame_filters dictionary.
	(objfpy_dealloc): Add frame_filters dealloc.
	(objfpy_new): Initialize frame_filters attribute.
	(objfile_to_objfile_object): Ditto.
	(objfpy_get_frame_filters): New function.
	(objfpy_set_frame_filters): New function.
	* python/py-progspace.c: Declare frame_filters dictionary.
	(pspy_dealloc): Add frame_filters dealloc.
	(pspy_new): Initialize frame_filters attribute.
	(pspacee_to_pspace_object): Ditto.
	(pspy_get_frame_filters): New function.
	(pspy_set_frame_filters): New function.
	* python/py-framefilter.c: New file.
	* python/lib/gdb/command/frame_filters.py: New file.
	* python/lib/gdb/frames.py: New file.
	* python/lib/gdb/__init__.py: Initialize global frame_filters
	dictionary
	* python/lib/gdb/FrameDecorator.py: New file.
	* python/lib/gdb/FrameIterator.py: New file.
	* mi/mi-cmds.c (mi_cmds): Add frame filters command.
	* mi/mi-cmds.h: Declare.
	* mi/mi-cmd-stack.c (mi_cmd_stack_list_frames): Add
	--no-frame-filter logic, and Python frame filter logic.
	(stack_enable_frame_filters): New function.
	(parse_no_frame_option): Ditto.
	(mi_cmd_stack_list_frames): Add --no-frame-filter and Python frame
	filter logic.
	(mi_cmd_stack_list_locals): Ditto.
	(mi_cmd_stack_list_args): Ditto.
	(mi_cmd_stack_list_variables): Ditto.
	* NEWS: Add frame filter note.

2013-05-10  Phil Muldoon  <pmuldoon@@redhat.com>

	* gdb.python/py-framefilter.py: New File.
	* gdb.python/py-framefilter-mi.exp: Ditto.
	* gdb.python/py-framefilter.c: Ditto.
	* gdb.python/py-framefilter-mi.exp: Ditto.
	* gdb.python/py-framefilter-mi.c: Ditto,
	* gdb.python/py-framefilter-gdb.py.in: Ditto.

2013-05-10 Phil Muldoon  <pmuldoon@@redhat.com>

	* gdb.texinfo (Backtrace): Add "no-filter" argument.
	(Python API): Add Frame	Filters API, Frame Wrapper API,
	Writing a Frame Filter/Wrapper,	Managing Management of Frame
	Filters chapter entries.
	(Frame Filters API): New Node.
	(Frame Wrapper API): New Node.
	(Writing a Frame Filter): New Node.
	(Managing Frame Filters): New Node.
	(Progspaces In Python): Add note about frame_filters attribute.
	(Objfiles in Python): Ditto.
	(GDB/MI Stack Manipulation): Add -enable-frame-filters command,
	@@anchors and --no-frame-filters option to -stack-list-variables,
	-stack-list-frames, -stack-list-locals and -stack-list-arguments
	commands.
@
text
@d823 2
a824 1
doublest.h regset.h hppa-tdep.h ppc-linux-tdep.h ppc64-tdep.h rs6000-tdep.h \
@


1.1253
log
@2013-05-06  Sandra Loosemore  <sandra@@codesourcery.com>
	    Andrew Jenner  <andrew@@codesourcery.com>
	    Chung-Lin Tang  <cltang@@codesourcery.com>
	    Julian Brown  <julian@@codesourcery.com>

	Based on the nios2-elf port from Altera Corporation.

	gdb/
	* Makefile.in (ALL_TARGET_OBS): Add nios2-tdep.o and
	nios2-linux-tdep.o.
	(HFILES_NO_SRCDIR): Add nios2-tdep.h.
	(ALLDEPFILES): Add nios2-tdep.c and nios2-linux-tdep.c.
	* configure.tgt: Add nios2*-*-linux* and nios2*-*-* targets.
	* nios2-tdep.h: New.
	* nios2-tdep.c: New.
	* nios2-linux-tdep.c: New.
	* features/Makefile (WHICH): Add nios2-linux.
	(nios2-linux-expedite): Set.
	* features/nios2-cpu.xml: New.
	* features/nios2.xml: New.
	* features/nios2-linux.xml: New.
	* features/nios2.c: New (autogenerated).
	* features/nios2-linux.c: New (autogenerated).
	* regformats/nios2-linux.dat: New (autogenerated).
	* NEWS (Changes since GDB 7.6): Add new Nios II targets
	and commands.

	gdb/doc/
	* gdb.texinfo (Nios II): New section.
	(Nios II Features): New section.
@
text
@d291 1
d326 1
d2149 4
@


1.1252
log
@Reimplement shared library support on ppc-aix...

... using the target_so_ops framework.

gdb/ChangeLog:

        * target.h (TARGET_OBJECT_AIX_LIBRARIES): New target_object enum.
        * features/library-list-aix.dtd: New file.
        * solib-aix.h, solib-aix.c: New file.
        * rs6000-aix-tdep.c: #include "solib.h" and "solib-aix.h".
        (rs6000_find_toc_address_hook): Delete.
        (rs6000_push_dummy_call): Rewrite code setting the TOC value.
        (rs6000_aix_init_osabi): Register solib_aix_so_ops.
        * rs6000-nat.c: Remove "xcoffsolib.h" include.  Include
        "xml-utils.h".
        (map_vmap, vmap_exec, vmap_ldinfo, add_vmap, objfile_symbol_add)
        (vmap_symtab, fixup_breakpoints): Delete.
        (rs6000_xfer_shared_libraries): New function.
        (rs6000_xfer_partial): Add TARGET_OBJECT_AIX_LIBRARIES handling.
        (vmap_secs, bss_data_overlap, vmap_add_symbols): Delete.
        (xcoff_relocate_symtab, xcoff_relocate_core): Delete.
        (rs6000_ptrace_ldinfo, rs6000_core_ldinfo)
        (rs6000_xfer_shared_library): New function.
        (find_toc_address): Delete.
        (_initialize_rs6000_nat): Do not set rs6000_find_toc_address_hook.
        * rs6000-tdep.h (rs6000_find_toc_address_hook): Remove.
        * xcoffread.c (record_minimal_symbol): Reloate symbol address
        before creating minimal symbol.  Adjust function description
        accordingly.
        (scan_xcoff_symtab): Replace call to
        prim_record_minimal_symbol_and_info by call to
        record_minimal_symbol.
        (xcoff_symfile_offsets): Reimplement mostly as a wrapper
        around default_symfile_offsets.
        * configure.tgt: Add solib-aix.o to gdb_target_obs for
        powerpc-aix targets.
        * config/rs6000/nm-rs6000.h: Delete.
        * config/powerpc/aix.mh (NAT_FILE): Delete.
        (NATDEPFILES): Remove xcoffsolib.o.
        * Makefile.in (XMLFILES): Add library-list-aix.dtd.
        (ALL_TARGET_OBS): Add solib-aix.o.
        (HFILES_NO_SRCDIR): Remove xcoffsolib.h and
        config/rs6000/nm-rs6000.h.  Add solib-aix.h.
        (ALLDEPFILES): Add solib-aix.c.  Remove xcoffsolib.c.
        * xcoffsolib.h, xcoffsolib.c: Delete.

        * solib.c (reload_shared_libraries): Remove reference to
        SOLIB_CREATE_INFERIOR_HOOK.
        * breakpoint.c (handle_solib_event): Remove reference to SOLIB_ADD.
        (disable_breakpoints_in_shlibs): Remove reference to PC_SOLIB.
        (momentary_bkpt_re_set): Replace SOLIB_ADD by solib_add in
        comment.
        * corelow.c (deprecated_core_resize_section_table): Delete.
        * exec.c: Remove include of xcoffsolib.h".
        (map_vmap, vmap): Delete.
        (exec_close_1): Remove references to vmap.
        (exec_file_attach): Remove vmap handling code, and reference
        to DEPRECATED_IBM6000_TARGET.
        (bfdsec_to_vmap): Delete.
        (exec_files_info): Remove block of code handling VMAP.
        * infcmd.c (post_create_inferior): Remove reference to
        SOLIB_CREATE_INFERIOR_HOOK and SOLIB_ADD.
        * infrun.c (follow_exec): Remove reference to
        SOLIB_CREATE_INFERIOR_HOOK.
        * stack.c (print_frame): Remove reference to PC_SOLIB.
        * solib-dsbt.c (dsbt_current_sos): Adjust comment.
        (dsbt_relocate_main_executable): Likewise.
        * solib-frv.c (frv_current_sos): Likewise.

gdb/doc/ChangeLog:

        * gdbint.texinfo (Algorithms): Remove entries documenting
        DEPRECATED_IBM6000_TARGET, SOLIB_ADD, and
        SOLIB_CREATE_INFERIOR_HOOK.
@
text
@d574 1
d838 1
a838 1
i386-darwin-tdep.h i386-nat.h linux-record.h moxie-tdep.h \
d1520 1
@


1.1251
log
@	PR gdb/7912:
	* Makefile.in (SFILES): Add filestuff.c
	(COMMON_OBS): Add filestuff.o.
	(filestuff.o): New target.
	* auto-load.c (auto_load_objfile_script_1): Use
	gdb_fopen_cloexec.
	* auxv.c (procfs_xfer_auxv): Use gdb_open_cloexec.
	* cli/cli-cmds.c (shell_escape): Call close_most_fds.
	* cli/cli-dump.c (fopen_with_cleanup): Use gdb_fopen_cloexec.
	* common/agent.c (gdb_connect_sync_socket): Use
	gdb_socket_cloexec.
	* common/filestuff.c: New file.
	* common/filestuff.h: New file.
	* common/linux-osdata.c (linux_common_core_of_thread)
	(command_from_pid, commandline_from_pid, print_source_lines)
	(linux_xfer_osdata_shm, linux_xfer_osdata_sem)
	(linux_xfer_osdata_msg, linux_xfer_osdata_modules): Use
	gdb_fopen_cloexec.
	* common/linux-procfs.c (linux_proc_get_int)
	(linux_proc_pid_has_state): Use gdb_fopen_cloexec.
	* config.in, configure: Rebuild.
	* configure.ac: Don't check for sys/socket.h.  Check for
	fdwalk, pipe2.
	* corelow.c (core_open): Use gdb_open_cloexec.
	* dwarf2read.c (write_psymtabs_to_index): Use gdb_fopen_cloexec.
	* fork-child.c (fork_inferior): Call close_most_fds.
	* gdb_bfd.c (gdb_bfd_open): Use gdb_open_cloexec.
	* inf-child.c (inf_child_fileio_readlink): Use gdb_open_cloexec.
	* linux-nat.c (linux_nat_thread_name, linux_proc_pending_signals):
	Use gdb_fopen_cloexec.
	(linux_proc_xfer_partial, linux_proc_xfer_spu): Use
	gdb_open_cloexec.
	(linux_async_pipe): Use gdb_pipe_cloexec.
	* remote-fileio.c (remote_fileio_func_open): Use
	gdb_open_cloexec.
	* remote.c (remote_file_put, remote_file_get): Use
	gdb_fopen_cloexec.
	* ser-pipe.c (pipe_open): Use gdb_socketpair_cloexec,
	close_most_fds.
	* ser-tcp.c (net_open): Use gdb_socket_cloexec.
	* ser-unix.c (hardwire_open): Use gdb_open_cloexec.
	* solib.c (solib_find): Use gdb_open_cloexec.
	* source.c (openp, find_and_open_source): Use gdb_open_cloexec.
	* tracepoint.c (tfile_start): Use gdb_fopen_cloexec.
	(tfile_open): Use gdb_open_cloexec.
	* tui/tui-io.c (tui_initialize_io): Use gdb_pipe_cloexec.
	* ui-file.c (gdb_fopen): Use gdb_fopen_cloexec.
	* xml-support.c (xml_fetch_content_from_file): Use
	gdb_fopen_cloexec.
	* main.c (captured_main): Call notice_open_fds.
gdbserver
	* Makefile.in (SFILES): Add filestuff.c.
	(OBS): Add filestuff.o.
	(filestuff.o): New target.
	* config.in, configure: Rebuild.
	* configure.ac: Check for fdwalk, pipe2.
@
text
@d504 1
d577 1
a577 1
	rs6000-aix-tdep.o rs6000-tdep.o ppc-ravenscar-thread.o \
d809 1
a809 1
tui/tui-source.h xcoffsolib.h sol2-tdep.h gregset.h sh-tdep.h sh64-tdep.h \
d828 1
a828 1
config/rs6000/nm-rs6000.h top.h bsd-kvm.h gdb-stabs.h reggroups.h \
d840 1
a840 1
record-full.h \
d1532 1
a1532 1
	rs6000-nat.c rs6000-tdep.c ppc-ravenscar-thread.c \
d1553 1
a1553 1
	xcoffread.c xcoffsolib.c \
@


1.1250
log
@	* Makefile.in (SFILES): Add break-catch-throw.c
	(COMMON_OBS): Add break-catch-throw.o.
	* break-catch-throw.c: New file.
	* breakpoint.c: Move exception-catching code to new file.
	(ep_parse_optional_if_clause): No longer static.
	* breakpoint.h (ep_parse_optional_if_clause): Declare.
@
text
@d770 1
a770 1
	common/format.c btrace.c record-btrace.c ctf.c
d893 1
d1973 4
@


1.1249
log
@gdb/
	* Makefile.in (HAVE_NATIVE_GCORE_TARGET): New.
	(generated_files): Add gcore.
	(install-only, uninstall): Add gcore if HAVE_NATIVE_GCORE_TARGET or
	HAVE_NATIVE_GCORE_HOST.
	(gcore): New.
	* NEWS (Changes since GDB 7.6): Mention newly installed gcore.
	* config/alpha/alpha-osf3.mh, config/i386/fbsd.mh,
	config/i386/fbsd64.mh, config/i386/i386gnu.mh, config/i386/i386sol2.mh,
	config/i386/sol2-64.mh, config/mips/irix5.mh, config/mips/irix6.mh,
	config/powerpc/fbsd.mh, config/sparc/fbsd.mh, config/sparc/sol2.mh:
	Add HAVE_NATIVE_GCORE_HOST.
	* configure: Regenerate.
	* configure.ac (HAVE_NATIVE_GCORE_TARGET): New, set it, AC_SUBST it.
	New AC_SUBST fir GDB_TRANSFORM_NAME and GCORE_TRANSFORM_NAME.  New
	AC_CONFIG_FILES for gcore.
	* configure.tgt: Add gdb_have_gcore to the initial comment.  Set
	gdb_have_gcore.
	* gdb_gcore.sh: Rename to ...
	* gcore.in: ... here.  Remove gcore.sh comment.  Use GDB_TRANSFORM_NAME
	and GCORE_TRANSFORM_NAME substitutions.

gdb/doc/
	* Makefile.in (MAN1S): Add gcore.1.
	Remove "Host, target, and site specific Makefile fragments" comment.
	(@@host_makefile_frag@@, HAVE_NATIVE_GCORE_TARGET): New.
	(install-man1, uninstall-man1): Conditionalize gcore.1.
	(gcore.1): New.
	* gdb.texinfo (Man Pages): Add gcore man.
	(gcore man): New node.
@
text
@d711 3
a713 1
	block.c blockframe.c breakpoint.c break-catch-sig.c buildsym.c \
d883 1
a883 1
	blockframe.o breakpoint.o break-catch-sig.o \
@


1.1248
log
@gdb/

2013-04-10  Hui Zhu  <hui@@codesourcery.com>
	    Yao Qi  <yao@@codesourcery.com>

	* configure.ac: Check libbabeltrace is installed.
	* config.in: Regenerate.
	* configure: Regenerate.
	* Makefile.in (LIBBABELTRACE): New.
	(CLIBS): Add LIBBABELTRACE.
	* ctf.c: Include "exec.h".
	(CTF_EVENT_ID_STATUS, CTF_EVENT_ID_TSV_DEF): New macros.
	(CTF_EVENT_ID_TP_DEF, ctf_save_write_int32): New macros.
	(ctf_save_metadata_header): Define new type aliases in
	metadata.
	(ctf_write_header): Define event type "tsv_def" and "tp_def"
	in metadata.  Start a new faked packet for trace status.
	(ctf_write_status): Write trace status to CTF.
	(ctf_write_uploaded_tsv): Write TSV to CTF.
	(ctf_write_uploaded_tp): Write tracepoint definition to CTF.
	(ctf_write_definition_end): End the faked packet.

	(ctx, ctf_iter, trace_dirname): New.
	(start_pos): New variable.
	(ctf_destroy, ctf_open_dir, ctf_open): New.
	(SET_INT32_FIELD, SET_ARRAY_FIELD, SET_STRING_FIELD): New
	macros.
	(ctf_read_tsv, ctf_read_tp, ctf_close, ctf_files_info): New.
	(ctf_fetch_registers, ctf_xfer_partial): New.
	(ctf_get_trace_state_variable_value): New.
	(ctf_get_tpnum_from_frame_event): New.
	(ctf_get_traceframe_address): New.
	(ctf_trace_find, ctf_has_stack): New.
	(ctf_has_registers, ctf_traceframe_info, init_ctf_ops): New.
	(ctf_get_trace_status, ctf_read_status): New.
	(_initialize_ctf): New.
	* tracepoint.c (get_tracepoint_number): New
	(get_uploaded_tsv): Remove 'static'.
 	(struct traceframe_info, trace_regblock_size): Move it to ...
	* tracepoint.h: ... here.
	(get_tracepoint_number): Declare it.
	(get_uploaded_tsv): Declare it.

	* NEWS: Mention new configure option.

gdb/doc/

2013-04-10  Yao Qi  <yao@@codesourcery.com>

	* gdb.texinfo (Trace Files): Add "target ctf".

gdb/testsuite/

2013-04-10  Yao Qi  <yao@@codesourcery.com>

	* gdb.trace/actions.exp: Save trace data to CTF.
	Change to ctf target if GDB supports, read CTF data in ctf
	target, and check the actions of tracepoints.
	* gdb.trace/while-stepping.exp: Likewise.
	* gdb.trace/report.exp: Test GDB saves trace data to CTF
	format and read CTF trace file if GDB supports.
	* gdb.trace/tstatus.exp: Save trace data to CTF.  If ctf
	target is supported, change to ctf target, read trace data and
	check output of command "tstatus".
	* gdb.trace/tsv.exp: Save trace frame to CTF.  If GDB supports,
	read CTF data by target ctf and call check_tsv.
@
text
@d421 1
d972 1
a972 1
	$(GNULIB_H) $(NAT_GENERATED_FILES)
d1048 13
d1076 11
d1331 3
@


1.1247
log
@gdb/
	Convert man pages to texinfo, new gdbinit.5 texinfo page.
	* Makefile.in (gdb.z): Remove.
	(install-only): Remove $(man1dir) and gdb.1 installation.
	* gdb.1: Remove.

gdb/gdbserver/
	Convert man pages to texinfo, new gdbinit.5 texinfo page.
	* Makefile.in (install-only): Remove $(man1dir) and gdbserver.1
	installation.
	* gdbserver.1: Remove.

gdb/doc/
	Convert man pages to texinfo, new gdbinit.5 texinfo page.
	* Makefile.in (mandir, man1dir, man5dir, SYSTEM_GDBINIT, MANCONF,
	(TEXI2POD, POD2MAN1, POD2MAN5, MAN1S, MAN5S, MANS, man): New.
	(diststuff): Add man.
	(install-man, install-man1, install-man5, uninstall-man, uninstall-man1)
	(uninstall-man5): New.
	(STAGESTUFF): Add *.1 and *.5.
	(GDBvn.texi): Add SYSTEM_GDBINIT.
	(gdb.1, gdbserver.1, gdbinit.5): New.
	(maintainer-clean realclean): Add $(MANS).
	(install): Add install-man.
	(uninstall): Add uninstall-man.
	* gdb.texinfo (@@include gdb-cfg.texi): Wrap it by @@c man begin INCLUDE.
	(@@copying): Wrap it by @@c man begin COPYRIGHT.
	(Top): Add Man Pages.
	(Man Pages, gdb man, gdbserver man, gdbinit man): New.
@
text
@d157 4
d482 1
a482 1
	$(LIBEXPAT) $(LIBLZMA) \
@


1.1246
log
@Avoid warning in "make tags".

	* Makefile.in (TAGS): Avoid warning from etags when $GDB_NM_FILE is
	empty.  See http://sourceware.org/ml/gdb-patches/2012-08/msg00504.html
	and http://sourceware.org/ml/gdb-patches/2013-04/msg00055.html for
	details of the problem.
@
text
@a1021 5
gdb.z:gdb.1
	nroff -man $(srcdir)/gdb.1 | col -b > gdb.t
	pack gdb.t ; rm -f gdb.t
	mv gdb.t.z gdb.z

a1040 4
		$(SHELL) $(srcdir)/../mkinstalldirs \
			$(DESTDIR)$(man1dir) ; \
		$(INSTALL_DATA) $(srcdir)/gdb.1 \
			$(DESTDIR)$(man1dir)/$$transformed_name.1 ; \
@


1.1245
log
@Fix list of files submitted to "make TAGS".

	* Makefile.in (HFILES_NO_SRCDIR): Remove call-cmds.h.
	gdb_string.h is now in common/.
@
text
@d1211 1
a1211 1
	@@etags $(srcdir)/$(GDB_NM_FILE) \
@


1.1244
log
@gdb/
2013-03-14  Hui Zhu  <hui@@codesourcery.com>
	    Yao Qi  <yao@@codesourcery.com>

	* Makefile.in (REMOTE_OBS): Add ctf.o.
	(SFILES): Add ctf.c.
	(HFILES_NO_SRCDIR): Add ctf.h.
	* ctf.c, ctf.h: New files.
	* tracepoint.c: Include 'ctf.h'.
	(collect_pseudocommand): Remove static.
	(trace_save_command): Parse option "-ctf".
	Produce different trace file writers per option.
	Adjust output message.
	(trace_save_tfile, trace_save_ctf): New.
	* tracepoint.h (trace_save_tfile, trace_save_ctf): Declare.
	* mi/mi-main.c: Include 'ctf.h'.
	(mi_cmd_trace_save): Handle option '-ctf'.  Call either
	trace_save_tfile or trace_save_ctf.
	* NEWS: Mention these changes.

gdb/doc/
2013-03-14  Hui Zhu  <hui@@codesourcery.com>
	    Yao Qi  <yao@@codesourcery.com>

	* gdb.texinfo (Trace Files): Add "tsave -ctf".
@
text
@d803 1
a803 1
call-cmds.h typeprint.h mi/mi-getopt.h mi/mi-parse.h mi/mi-console.h \
d815 1
a815 1
macroexp.h ui-file.h regcache.h gdb_string.h tracepoint.h i386-tdep.h \
d838 1
a838 1
common/format.h common/host-defs.h utils.h common/queue.h \
@


1.1243
log
@Add a target for branch trace recording.

The target implements the new record sub-commands
"record instruction-history" and
"record function-call-history".

The target does not support reverse execution or navigation in the
recorded execution log.

gdb/
	* Makefile.in (SFILES): Add record-btrace.c
	(COMMON_OBS): Add record-btrace.o
	* record-btrace.c: New.
	* objfiles.c: Include btrace.h.
	(free_objfile): call btrace_free_objfile.
@
text
@d514 1
a514 1
	remote-notif.o
d763 1
a763 1
	common/format.c btrace.c record-btrace.c
d840 2
a841 1
gdb_bfd.h sparc-ravenscar-thread.h ppc-ravenscar-thread.h common/linux-btrace.h
@


1.1243.2.1
log
@Fix list of files used to produce TAGS.

	* Makefile.in (HFILES_NO_SRCDIR): Remove call-cmds.h.
	gdb_string.h is now in common/.
@
text
@d803 1
a803 1
typeprint.h mi/mi-getopt.h mi/mi-parse.h mi/mi-console.h \
d815 1
a815 1
macroexp.h ui-file.h regcache.h tracepoint.h i386-tdep.h \
d838 1
a838 1
common/format.h common/host-defs.h utils.h common/queue.h common/gdb_string.h \
@


1.1242
log
@Split record.h into record.h and record-full.h.
Split record.c into record.c and record-full.c.

The split leaves the command part in record.c and moves the target part into
record-full.c.

gdb/
	* record.h: Split into this and ...
	* record-full.h: ... this.
	* record.c: Split into this and ...
	* record-full.c: ... this.
	* target.h (target_ops): Add new fields to_info_record,
	to_save_record, to_delete_record, to_record_is_replaying,
	to_goto_record_begin, to_goto_record_end, to_goto_record.
	(target_info_record): New.
	(target_save_record): New.
	(target_supports_delete_record): New.
	(target_delete_record): New.
	(target_record_is_replaying): New.
	(target_goto_record_begin): New.
	(target_goto_record_end): New.
	(target_goto_record): New.
	* target.c (target_info_record): New.
	(target_save_record): New.
	(target_supports_delete_record): New.
	(target_delete_record): New.
	(target_record_is_replaying): New.
	(target_goto_record_begin): New.
	(target_goto_record_end): New.
	(target_goto_record): New.
	* record.h: Declare struct cmd_list_element.
	(record_cmdlist): New declaration.
	(set_record_cmdlist): New declaration.
	(show_record_cmdlist): New declaration.
	(info_record_cmdlist): New declaration.
	(cmd_record_goto): New declaration.
	* record.c: Remove unnecessary includes.
	Include inferior.h.
	(cmd_record_goto): Remove declaration.
	(record_cmdlist): Now extern. Initialize.
	(set_record_cmdlist): Now extern. Initialize.
	(show_record_cmdlist): Now extern. Initialize.
	(info_record_cmdlist): Now extern. Initialize.
	(find_record_target): New.
	(require_record_target): New.
	(cmd_record_start): Update.
	(cmd_record_delete): Remove target-specific code.
	Call target_delete_record.
	(cmd_record_stop): Unpush any record target.
	(set_record_insn_max_num): Move to record-full.c
	(set_record_command): Add comment.
	(show_record_command): Add comment.
	(info_record_command): Update comment.
	Remove target-specific code.
	Call the record target's to_info_record.
	(cmd_record_start): New.
	(cmd_record_goto): Now extern.
	Remove target-specific code.
	Call target_goto_begin,  target_goto_end, or target_goto.
	(_initialize_record): Move record target ops initialization to
	record-full.c.
	Change "record" command help text.
	Move "record restore", "record set", and "record show" commands to
	record-full.c.
	* Makefile.in (SFILES): Add record-full.c.
	(HFILES_NO_SRCDIR): Add record-full.h.
	(COMMON_OBS): Add record-full.o.
	* amd64-linux-tdep.c: Include record-full.h instead of record.h.
	* arm-tdep.c: Include record-full.h.
	* i386-linux-tdep.c: Include record-full.h instead of record.h.
	* i386-tdep.c: Include record-full.h.
	* infrun.c: Include record-full.h.
	* linux-record.c: Include record-full.h.
	* moxie-tdep.c: Include record-full.h.
	* record-full.c: Include record-full.h.
	Change module comment.
	(set_record_full_cmdlist): New.
	(show_record_full_cmdlist): New.
	(record_full_cmdlist): New.
	(record_goto_insn): New declaration.
	(record_save): New declaration.
	(record_check_insn_num): Change query string.
	(record_info): New.
	(record_delete): New.
	(record_is_replaying): New.
	(record_goto_entry): New.
	(record_goto_begin): New.
	(record_goto_end): New.
	(record_goto): New.
	(init_record_ops): Update.
	(init_record_core_ops): Update.
	(cmd_record_save): Rename to record_save. Remove target and arg checks.
	(cmd_record_start): New.
	(set_record_insn_max_num): Moved from record.c
	(set_record_full_command): New.
	(show_record_full_command): New.
	(_initialize_record_full): New.
@
text
@d763 1
a763 1
	common/format.c btrace.c
d933 1
a933 1
	format.o registry.o btrace.o
@


1.1241
log
@Define the xml document style for transferring branch trace data.

Add a function to parse a btrace xml document into a vector of branch trace
blocks.

gdb/
	* features/btrace.dtd: New file.
	* Makefile.in (XMLFILES): Add btrace.dtd.
	* btrace.h (parse_xml_btrace): New declaration.
	* btrace.c: Include xml-support.h.
	(parse_xml_btrace): New function.
	(parse_xml_btrace_block): New function.
	(block_attributes): New struct.
	(btrace_attributes): New struct.
	(btrace_children): New struct.
	(btrace_elements): New struct.
@
text
@d756 1
a756 1
	record.c gcore.c \
d832 1
d930 1
a930 1
	inferior.o osdata.o gdb_usleep.o record.o gcore.o \
@


1.1240
log
@Implement branch tracing on Linux based on perf_event such that it can be shared
between gdb and gdbserver.

gdb/
	* common/linux_btrace.h: New file.
	* common/linux_btrace.c: New file.
	* Makefile.in (SFILES): Add btrace.c.
	(HFILES_NO_SRCDIR): Add common/linux-btrace.h.
	(COMMON_OBS): Add btrace.o.
	(linux-btrace.o): New rule.

gdbserver/
	* Makefile.in (SFILES): Add $(srcdir)/common/linux-btrace.c.
	(linux_btrace_h): New variable.
	(linux-btrace.o): New rule.
@
text
@d500 2
a501 1
	$(srcdir)/features/threads.dtd $(srcdir)/features/traceframe-info.dtd
@


1.1239
log
@Add branch trace information to struct thread_info.

Add functions to enable, disable, clear, and fetch a thread's branch trace.

gdb/
	* target.h: Include btrace.h.
	(struct target_ops) <to_supports_btrace, to_enable_btrace,
	to_disable_btrace, to_teardown_btrace, to_read_btrace>: New.
	* target.c (target_supports_btrace): New function.
	(target_enable_btrace): New function.
	(target_disable_btrace): New function.
	(target_teardown_btrace): New function.
	(target_read_btrace): New function.
	* btrace.h: New file.
	* btrace.c: New file.
	* Makefile.in: Add btrace.c.
	* gdbthread.h: Include btrace.h.
	(struct thread_info): Add btrace field.
	* thread.c: Include btrace.h.
	(clear_thread_inferior_resources): Call target_teardown_btrace.
	* common/btrace-common.h: New file.
@
text
@d838 1
a838 1
gdb_bfd.h sparc-ravenscar-thread.h ppc-ravenscar-thread.h
d1968 4
@


1.1238
log
@Adding aarch64-linux-nat support.

2013-02-08  Jim MacArthur  <jim.macarthur@@arm.com>
	    Marcus Shawcroft  <marcus.shawcroft@@arm.com>
	    Nigel Stephens  <nigel.stephens@@arm.com>
	    Yufeng Zhang  <yufeng.zhang@@arm.com>

	* aarch64-linux-nat.c: New file.
	* config/aarch64/linux.mh: New file.
	* configure.host: Add AArch64.
	* Makefile.in (ALLDEPFILES): Add aarch64-linux-nat.c.
@
text
@d762 1
a762 1
	common/format.c
d931 1
a931 1
	format.o registry.o
@


1.1237
log
@2013-02-04  Andreas Tobler  <andreast@@fgznet.ch>

	* Makefile.in (ALL_TARGET_OBS): Add powerpc FreeBSD files.
	* configure.host: Add powerpc*-*-freebsd* target.
	* configure.tgt: Add target info for powerpc*-*-freebsd*.
	* ppcfbsd-nat.c, ppcfbsd-tdep.h, ppcfbsd-tdep.c: New files.
	* config/powerpc/fbsd.mh: New file.
@
text
@d1425 1
@


1.1236
log
@Adding aarch64-newlib-tdep support.

        * aarch64-newlib-tdep.c: New file.
        * configure.tgt: Add aarch64-newlib-tdep.o to gdb_target_obs of
        aarch64*-*-elf.
        * defs.h (enum gdb_osabi): Add GDB_OSABI_NEWLIB.
        * Makefile.in (ALL_64_TARGET_OBS): Add aarch64-newlib-tdep.o.
        (ALLDEPFILES): Add aarch64-newlib-tdep.c.
        * osabi.c (gdb_osabi_names): Add "Newlib".
@
text
@d775 2
a776 2
proc-utils.h aarch64-tdep.h arm-tdep.h ax-gdb.h ppcnbsd-tdep.h	\
cli-out.h gdb_expat.h breakpoint.h infcall.h obsd-tdep.h \
@


1.1235
log
@Adding aarch64-linux-tdep support.

2013-02-04  Jim MacArthur  <jim.macarthur@@arm.com>
            Marcus Shawcroft  <marcus.shawcroft@@arm.com>
            Nigel Stephens  <nigel.stephens@@arm.com>
            Yufeng Zhang  <yufeng.zhang@@arm.com>

        * Makefile.in (ALL_64_TARGET_OBS): Add aarch64-linux-tdep.o.
        (ALLDEPFILES): Add aarch64-linux-tdep.c.
        * aarch64-linux-tdep.c: New file.
        * aarch64-linux-tdep.h: New file.
        * aarch64-tdep.h (gdbarch_tdep): Define gregset and fpregset.
        * configure.tgt: Add aarch64-none-linux-gnu.
@
text
@d524 1
a524 1
	aarch64-tdep.o aarch64-linux-tdep.o \
d1424 1
a1424 1
	aarch64-tdep.c aarch64-linux-tdep.c \
@


1.1234
log
@Add basic support for AArch64.

        * Makefile.in (ALL_64_TARGET_OBS): Add arch64-tdep.o.
        (HFILES_NO_SRCDIR): Add aarch64-tdep.h.
        (ALLDEPFILES): Add aarch64-tdep.c.
        * aarch64-tdep.c: New file.
        * aarch64-tdep.h: New file.
        * configure.tgt: Add AArch64.
        * features/Makefile (WHICH): Add aarch64 and aarch64-without-fpu.
        (aarch64-expedite): New definition.
        * features/aarch64-core.xml: New file.
        * features/aarch64-fpu.xml: New file.
        * features/aarch64-without-fpu.c: New file (generated).
        * features/aarch64-without-fpu.xml: New file.
        * features/aarch64.c: New file (generated).
        * features/aarch64.xml: New file.
        * regformats/aarch64-without-fpu.dat: New file (generated).
        * regformats/aarch64.dat: New file (generated).
@
text
@d524 1
a524 1
	aarch64-tdep.o \
d1424 1
a1424 1
	aarch64-tdep.c \
@


1.1233
log
@2013-02-01  Andreas Tobler  <andreast@@fgznet.ch>

	* Makefile.in (ALL_TARGET_OBS): Add ppc64-tdep.o.
	(HFILES_NO_SRCDIR): Add ppc64-tdep.h.
	(ALLDEPFILES): Add ppc64-tdep.c.
	* configure.tgt (powerpc-*-linux* | powerpc64-*-linux*): Add
	ppc64-tdep.o to gdb_target_obs.
	* ppc64-tdep.h: New file.
	* ppc64-tdep.c: New file.
	(insn_d, insn_ds, insn_xfx, ppc64_desc_entry_point): Move from
	ppc-linux-tdep.c to here.
	(PPC64_STANDARD_LINKAGE1_LEN, PPC64_STANDARD_LINKAGE2_LEN)
	(PPC64_STANDARD_LINKAGE2_LEN): Likewise and use ARRAY_SIZE macro.
	(ppc64_standard_linkage1_target, ppc64_standard_linkage2_target)
	(ppc64_standard_linkage3_target, ppc64_skip_trampoline_code): Move
	from ppc-linux-tdep.c to here.
	(ppc64_convert_from_func_ptr_addr): Rename from
	ppc64_linux_convert_from_func_ptr_addr to
	ppc64_convert_from_func_ptr_addr and move from ppc-linux-tdep.c to
	here.
	* rs6000-tdep.c:
	(read_insn): Move from ppc-linux-tdep.c to here.
	(insns_match_pattern, insn_d_field, insn_ds_field): Move
	from ppc-linux-tdep.c to here and rename them with the ppc_ prefix.
	* ppc-linux-tdep.c: Include ppc64-tdep.h.
	Removed above functions.
	(ppc_linux_init_abi): Adjust.
@
text
@d524 1
d775 1
a775 1
proc-utils.h arm-tdep.h ax-gdb.h ppcnbsd-tdep.h	\
d1424 1
@


1.1232
log
@	Add a new class gdb.Architecture which exposes GDB's
	internal representation of architecture via GDB Python API.

	* Makefile.in: Add entries corresponding to the new file
	python/py-arch.c.
	* NEWS (Python Scripting): Add entries for the new class
	gdb.Architecture and the new method gdb.Frame.architecture.
	* python/py-arch.c: Implement gdb.Architecture class.
	* python/py-frame.c (frapy_arch): Implement the method
	gdb.Frame.architecture().
	(frame_object_methods): Add 'architecture' to the method table.
	* python/python-internal.h: Add declarations of new utility
	functions.
	* python/python.c (_initialize_python): Initialize
	gdb.Architecture class.

	* doc/gdb.texinfo (Architectures In Python): New sub-sub-section
	describing the gdb.Architecture class.
	(Frames In Python): Add description about the new method
	gdb.Frame.architecture().

	* testsuite/gdb.python/frame.exp: Add a test for
	gdb.Frame.architecture() method.
@
text
@d568 1
a568 1
	rl78-tdep.o \
d810 1
a810 1
doublest.h regset.h hppa-tdep.h ppc-linux-tdep.h rs6000-tdep.h \
d1490 1
a1490 1
	ppc-sysv-tdep.c ppc-linux-nat.c ppc-linux-tdep.c \
@


1.1231
log
@	* gdb_obstack.h (obconcat): Move declaration here, from...
	* symfile.h (obconcat): ... here.
	* gdb_obstack.c: New file.
	(obconcat): Move from...
	* symfile.c (obconcat): ... here.
	* Makefile.in (SFILES): Add gdb_obstack.c.
	(COMMON_OBS): Add gdb_obstack.o.
@
text
@d274 1
d308 1
d2052 4
@


1.1230
log
@2013-01-17  Pedro Alves  <palves@@redhat.com>

	* acinclude.m4: Include ../config/plugins.m4,
	../config/largefile.m4 and ../config/lead-dot.m4.  Add comments.
	* Makefile.in (aclocal_m4_deps): Update.
	* aclocal.m4: Renegerate.
@
text
@d716 2
a717 1
	gdbarch.c arch-utils.c gdb_bfd.c gdbtypes.c gnu-v2-abi.c gnu-v3-abi.c \
d887 2
a888 1
	gdbarch.o arch-utils.o gdbtypes.o gdb_bfd.o osabi.o copying.o \
@


1.1229
log
@2013-01-03  Pedro Alves  <palves@@redhat.com>
	    Tom Tromey  <tromey@@redhat.com>
	PR cli/7221:
	* NEWS: Add "catch signal".
	* breakpoint.c (base_breakpoint_ops): No longer static.
	(bpstat_explains_signal): New function.
	(init_catchpoint): No longer static.
	(base_breakpoint_explains_signal): New function.
	(base_breakpoint_ops): Initialize new field.
	* breakpoint.h (enum bpstat_signal_value): New.
	(struct breakpoint_ops) <explains_signal>: New field.
	(bpstat_explains_signal): Remove macro, declare as function.
	(base_breakpoint_ops, init_catchpoint): Declare.
	* break-catch-sig.c: New file.
	* inferior.h (signal_catch_update): Declare.
	* infrun.c (signal_catch): New global.
	(handle_syscall_event): Update for change to
	bpstat_explains_signal.
	(handle_inferior_event): Likewise.  Always handle random signals
	via bpstats.
	(signal_cache_update): Check signal_catch.
	(signal_catch_update): New function.
	(_initialize_infrun): Initialize signal_catch.
	* Makefile.in (SFILES): Add break-catch-sig.c.
	(COMMON_OBS): Add break-catch-sig.o.
gdb/doc
	* gdb.texinfo (Set Catchpoints): Document "catch signal".
	(Signals): Likewise.
gdb/testsuite
	* gdb.base/catch-signal.c: New file.
	* gdb.base/catch-signal.exp: New file.
@
text
@d1316 2
a1320 3
	../config/extensions.m4 \
	../config/lead-dot.m4 \
	../config/proginstall.m4 \
d1323 2
d1326 1
d1335 2
a1336 1
	../config/codeset.m4
@


1.1228
log
@Update years in copyright notice for the GDB files.

Two modifications:
  1. The addition of 2013 to the copyright year range for every file;
  2. The use of a single year range, instead of potentially multiple
     year ranges, as approved by the FSF.
@
text
@d702 1
a702 1
	block.c blockframe.c breakpoint.c buildsym.c \
d869 2
a870 1
	blockframe.o breakpoint.o findvar.o regcache.o cleanups.o \
@


1.1227
log
@	* Makefile.in (init.c): Declare initialize_all_files;
	don't include call-cmds.h.
	* call-cmds.h: Remove.
	* symtab.c: Don't include call-cmds.h.
	* top.c: Don't include call-cmds.h.  Declare
	initialize_all_files.
@
text
@d1 1
a1 1
# Copyright (C) 1989-2012 Free Software Foundation, Inc.
@


1.1226
log
@Port GDB to powerpc-lynx178.

gdb/ChangeLog:

        * defs.h (enum gdb_osabi): Add GDB_OSABI_LYNXOS178.
        * osabi.c (gdb_osabi_names): Add entry for GDB_OSABI_LYNXOS178.
        * xcoffread.c (xcoff_get_core_n_import_files): New function.
        (xcoff_get_n_import_files): New function.
        * xcoffread.h (xcoffread.h): Add declaration.
        * rs6000-aix-tdep.c: #include "xcoffread.h".
        (rs6000_aix_osabi_sniffer): Do not return GDB_OSABI_AIX for
        XCOFF executables that do not depend on any shared library.
        * rs6000-lynx178-tdep.c: New file.
        * configure.tgt: Add powerpc-*-lynx*178 handling.
        * Makefile.in (ALL_TARGET_OBS): Add rs6000-lynx178-tdep.o.
        (ALLDEPFILES): Add rs6000-lynx178-tdep.c.
@
text
@d1143 1
a1143 1
	@@echo '#include "call-cmds.h" /* For initialize_all_files.  */' >>init.c-tmp
@


1.1225
log
@Makefile.in: Move ravenscar-thread.c from SFILES to ALLDEPFILES.

gdb/ChangeLog:

	* Makefile.in (SFILES): Move ravenscar-thread.c from here...
	(ALLDEPFILES): ... to there.
@
text
@d568 1
d1492 1
@


1.1224
log
@Add ravenscar-thread support for powerpc.

gdb/ChangeLog:

        * ppc-ravenscar-thread.h, ppc-ravenscar-thread.c: New files.
        * Makefile.in (ALL_TARGET_OBS): Add ppc-ravenscar-thread.o.
        (HFILES_NO_SRCDIR): Add ppc-ravenscar-thread.h.
        (ALLDEPFILES): Add ppc-ravenscar-thread.c.
        * configure.tgt: Add ravenscar-thread.o and ppc-ravenscar-thread.o
        to gdb_target_obs for every target that uses rs6000-tdep.o.
        * rs6000-tdep.c: #include "ppc-ravenscar-thread.h".
        (rs6000_gdbarch_init): Call register_e500_ravenscar_ops
        or register_ppc_ravenscar_ops.
@
text
@a733 1
	ravenscar-thread.c \
d1485 1
@


1.1223
log
@Rename ravenscar-sparc-thread.[hc] into sparc-ravenscar-thread.[hc].

gdb/ChangeLog:

        * sparc-ravenscar-thread.h: Renames ravenscar-sparc-thread.h.
        * sparc-ravenscar-thread.c: Renames ravenscar-sparc-thread.c.
        Adjust sparc-ravenscar-thread.h #include.
        * sparc-tdep.c: Adjust sparc-ravenscar-thread.h #include
        accordingly.
        * Makefile.in: Replace ravenscar-sparc-thread with
        sparc-ravenscar-thread throughout.
        * configure.tgt: Likewise.
@
text
@d567 1
a567 1
	rs6000-aix-tdep.o rs6000-tdep.o \
d834 1
a834 1
gdb_bfd.h sparc-ravenscar-thread.h
d1490 1
a1490 1
	rs6000-nat.c rs6000-tdep.c \
@


1.1222
log
@gdbarch-ification of ravenscar-thread support.

gdb/ChangeLog:

        * gdbarch.sh: Add "struct ravenscar_arch_ops" advance
        declaration.
        (ravenscar_ops): New gdbarch variable.
        * gdbarch.h, gdbarch.c: Regenerate.
        * ravenscar-thread.h (ravenscar_register_arch_ops): Delete.
        * ravenscar-thread.c (current_arch_ops): Delete.
        (ravenscar_fetch_registers): Get the ravenscar_arch_ops
        from the gdbarch.
        (ravenscar_store_registers, ravenscar_prepare_to_store): Likewise.
        (ravenscar_inferior_created): Add gdbarch_ravenscar_ops check.
        (ravenscar_register_arch_ops): Delete.
        * ravenscar-sparc-thread.h: New file.
        * ravenscar-sparc-thread.c: #include "ravenscar-sparc-thread.h".
        (ravenscar_sparc_ops): Define value statically.
        (_initialize_ravenscar_sparc): Delete.
        (register_sparc_ravenscar_ops): New function.
        * sparc-tdep.c: #include "ravenscar-sparc-thread.h".
        (sparc32_gdbarch_init): Add call to register_sparc_ravenscar_ops.
        * Makefile.in (ALL_TARGET_OBS): Add ravenscar-thread.o and
        ravenscar-sparc-thread.o.
        (SFILES): Add ravenscar-thread.c.
        (HFILES_NO_SRCDIR): Add ravenscar-sparc-thread.h.
        (ALLDEPFILES): ravenscar-sparc-thread.c.
        * configure.tgt: Add ravenscar-thread.o and ravenscar-sparc-thread.o
        to gdb_target_obs
        for all the targets that use sparc-tdep.o.
@
text
@d573 1
a573 1
	sparc-sol2-tdep.o sparc-tdep.o ravenscar-sparc-thread.o \
d834 1
a834 1
gdb_bfd.h ravenscar-sparc-thread.h
d1504 1
a1504 1
	ravenscar-sparc-thread.c \
@


1.1221
log
@gdb/
2012-12-15  Yao Qi  <yao@@codesourcery.com>

	* Makefile.in (REMOTE_OBS): Add "remote-notif.o".
	(SFILES): Add "remote-notif.c".
	(HFILES_NO_SRCDIR): Add "remote-notif.h" and "common/queue.h".
	* remote-notif.c: New.  Factored out from remote.c.
	* remote-notif.h: New.
	* remote.c: Include "remote-notif.h".
	(stop_reply_xmalloc, do_stop_reply_xfree):
	(remote_parse_stop_reply, remote_get_pending_stop_replies):
	(remote_async_get_pending_events_handler): Remove declarations.
	(remote_parse_stop_reply): Declare.
	(pending_stop_reply): Remove.
	(remote_async_get_pending_events_token): Move to
	remote-notif.c.
	(remote_close): Replace 'delete_async_event_handler' with
	remote_notif_unregister_async_event_handler.
	Don't call discard_pending_stop_replies.
	(remote_start_remote): Replace code with remote_notif_parse
	and remote_notif_get_pending_replies.
	(remote_open_1): Replace 'create_async_event_handler' with
	remote_notif_register_async_event_handler.
	(extended_remote_attach_1): Call remote_notif_parse and
	notif_stop_reply_push.
	(struct stop_reply) <next>: Remove.
	<base>: New field.
	Callers update.
	(stop_reply_queue): Change its type.
	(stop_reply_xmalloc, do_stop_reply_xfree): Remove.
	(remote_notif_remove_all): New.
	(discard_pending_stop_replies): Update.
	(remote_notif_stop_ack, stop_reply_dtr): New.
	(remote_notif_stop_alloc_event): New.
	(notif_client_stop): New variable.
	(stop_reply_match_ptid, stop_reply_match_ptid_and_ws: New.
	(queued_stop_reply, peek_stop_reply): Adjust.
	(remote_get_pending_stop_replies): Rename to
	remote_notif_get_pending_events.
	(handle_notification): Move to remote-notif.c.
	(remote_async_get_pending_events_handler): Likewise.
	(remote_wait_as): Adjust to call remote_notif_parse.
	Call 'getpkt_or_notif_sane' instead of 'getpkt_sane'.
	Return minus_one_ptid early if gets a notification.
	(remote_wait): Call QUEUE_is_empty (notif_reply_p).
	(_initialize_remote): Call QUEUE_alloc.  Update caller.
	(remote_resume): Call 'remote_notif_process' in all-stop mode.
	* remote.h: Include "remote-notif.h".
	(remote_notif_get_pending_replies): Declare.
@
text
@d573 1
a573 1
	sparc-sol2-tdep.o sparc-tdep.o \
d592 2
a593 1
	linux-record.o
d734 1
d833 2
a834 1
common/linux-osdata.h gdb-dlfcn.h auto-load.h probe.h stap-probe.h gdb_bfd.h
d1504 1
@


1.1220
log
@MI: add the -catch-load and -catch-unload commands

They are equivalent to "catch load" and "catch unload" from CLI.

Rationale: GUIs might be interested in catching solib load or
unload events.

2012-11-16  Mircea Gherzan  <mircea.gherzan@@intel.com>

	* Makefile.in (SUBDIR_MI_OBS): Add mi-cmd-catch.o.
	(SUBDIR_MI_SRCS): Add mi/mi-cmd-catch.c.
	* breakpoint.c (add_solib_catchpoint): New function that
	can be used by both CLI and MI, factored out from
	catch_load_or_unload.
	(catch_load_or_unload): Strip it down and make it use the
	new add_solib_catchpoint.
	* breakpoint.h (add_solib_catchpoint): Declare it.
	* mi/mi-cmd-break.h: New file.
	* mi/mi-cmd-break.c: Include mi-cmd-break.h.
	(setup_breakpoint_reporting): New function used for both
	catchpoints and breakpoints.
	(mi_cmd_break_insert): Use setup_breakpoint_reporting.
	* mi/mi-cmd-catch.c: New file.
	* mi/mi-cmds.c (mi_cmds): Add the handlers for -catch-load
	and -catch-unload.
	* mi/mi-cmds.h: Declare the handlers for -catch-load and
	-catch-unload.
@
text
@d510 2
a511 1
REMOTE_OBS = remote.o dcache.o tracepoint.o ax-general.o ax-gdb.o remote-fileio.o
d733 1
a733 1
	regcache.c reggroups.c remote.c remote-fileio.c reverse.c \
d778 1
a778 1
gnulib/import/stdint.in.h remote.h gdb.h sparc-nat.h \
d830 1
a830 1
common/format.h common/host-defs.h utils.h \
@


1.1219
log
@Delete the gdb/osf-share directory.

These are old files that GDB does not use anymore, and probably has not
used for a long time.

gdb/ChangeLog:

        * osf-share/AT386/cma_thread_io.h: Delete.
        * osf-share/HP800/cma_thread_io.h: Delete.
        * osf-share/README: Delete.
        * osf-share/RIOS/cma_thread_io.h: Delete.
        * osf-share/cma_attr.h: Delete.
        * osf-share/cma_deb_core.h: Delete.
        * osf-share/cma_debug_client.h: Delete.
        * osf-share/cma_errors.h: Delete.
        * osf-share/cma_handle.h: Delete.
        * osf-share/cma_init.h: Delete.
        * osf-share/cma_list.h: Delete.
        * osf-share/cma_mutex.h: Delete.
        * osf-share/cma_sched.h: Delete.
        * osf-share/cma_semaphore_defs.h: Delete.
        * osf-share/cma_sequence.h: Delete.
        * osf-share/cma_stack.h: Delete.
        * osf-share/cma_stack_int.h: Delete.
        * osf-share/cma_tcb_defs.h: Delete.
        * osf-share/cma_util.h: Delete.
        * Makefile.in (HFILES_NO_SRCDIR): Remove entries for the files
        in osf-share.
        * config/djgpp/fnchange.lst: Remove osf-share/cma_stack_int.h entry.
        * contrib/ari/gdb_find.sh: Remove handling of osf-share.
        * copyright.sh (NOT_FSF_LIST): Remove "gdb/osf-share" entry.
@
text
@d206 2
a207 1
	mi-cmds.o mi-cmd-env.o mi-cmd-var.o mi-cmd-break.o mi-cmd-stack.o \
d213 1
a213 1
	mi/mi-cmds.c mi/mi-cmd-env.c \
d1829 4
@


1.1218
log
@2012-11-26  Alexander Larsson  <alexl@@redhat.com>
	    Jan Kratochvil  <jan.kratochvil@@redhat.com>
	    Tom Tromey  <tromey@@redhat.com>

	* NEWS: Mention mini debuginfo feature.
	* minidebug.c: New file.
	* configure.ac: Check for lzma.
	* configure, config.in: Rebuild.
	* Makefile.in (LIBLZMA): New variable.
	(CLIBS): Include LIBLZMA.
	(SFILES): Mention minidebug.c.
	(COMMON_OBS): Mention minidebug.o.
	* symfile.c (read_symbols): New function.
	(syms_from_objfile, reread_symbols): Call it.
	* symfile.h (find_separate_debug_file_in_section): Declare.
doc
	* gdb.texinfo (MiniDebugInfo): New node.
	(GDB Files): Update.
testsuite
	* gdb.base/gnu-debugdata.exp: New file.
	* gdb.base/gnu-debugdata.c: New file.
	* lib/gdb.exp (gdb_file_cmd): Handle LZMA warning.
	(gdb_unload): Return 0 on success.
@
text
@d764 1
a764 9
HFILES_NO_SRCDIR = osf-share/cma_debug_client.h	\
osf-share/HP800/cma_thread_io.h osf-share/cma_sequence.h \
osf-share/cma_mutex.h osf-share/cma_semaphore_defs.h \
osf-share/cma_list.h osf-share/cma_handle.h osf-share/cma_stack.h \
osf-share/cma_util.h osf-share/RIOS/cma_thread_io.h \
osf-share/cma_errors.h osf-share/cma_tcb_defs.h osf-share/cma_attr.h \
osf-share/cma_stack_int.h osf-share/cma_init.h \
osf-share/cma_deb_core.h osf-share/AT386/cma_thread_io.h \
osf-share/cma_sched.h \
@


1.1217
log
@2012-11-15  Pierre Muller  <muller@@sourceware.org>

	ARI fixes: move gdb_wait and gdb_stat headers to common subdirectory.
	* gdb_stat.h: Delete. Moved to common directory.
	* common/gdb_stat.h: New file.
	* gdb_wait.h: Delete. Moved to common directory.
	* common/gdb_wait.h: New file.
	* Makefile.in (H_FILES_NO_SRC): Adapt to new header
	location.
	* contrib/ari/gdb_ari.sh (wait.h rule): Adapt to new gdb_wait.h
	location.
	(stat.h rule): Adapt to new gdb_stat.h location.
	* common/linux-osdata.c: Include "gdb_stat.h" header instead of
	<sys/stat.h> header.
	* common/linux-ptrace.c: Include "gdb_wait.h" header instead of
	<sys/wait.h> header.


gdbserver ChangeLog entry:

2012-11-15  Pierre Muller  <muller@@sourceware.org>

	* configure.ac (AC_CHECK_HEADERS): Add wait.h header.
	* config.in: Regenerate.
	* configure: Regenerate.
	* linux-low.c: Use "gdb_stat.h" header instead of <sys/stat.h> header.
	Use "gdb_wait.h" header instead of <sys/wait.h> header.
	* lynx-low.c: Use "gdb_wait.h" header instead of <sys/wait.h> header.
	* remote-utils.c: Use "gdb_stat.h" header instead of <sys/stat.h>
	header.
	* server.c: Remove HAVE_WAIT_H conditional.  Use "gdb_wait.h" header
	instead of <sys/wait.h> header.
	* spu-low.c: Use "gdb_wait.h" header instead of <sys/wait.h> header.
@
text
@d154 3
d475 1
a475 1
	$(LIBEXPAT) \
d720 1
a720 1
	language.c linespec.c \
d883 1
@


1.1216
log
@2012-09-13  Pedro Alves  <palves@@redhat.com>

	* Makefile.in (COMMON_OBS): Add registry.o.
	* registry.c: New file.
	* registry.h (struct registry_container): Declare.
	(registry_data_callback): New typedef.
	(struct registry_data, struct registry_data_registration, struct
	registry_data_registry): New type.
	(register_data_with_cleanup, registry_alloc_data)
	(registry_callback_adaptor, registry_clear_data)
	(registry_container_free_data, registry_set_data, registry_data):
	Declare.
	(DEFINE_REGISTRY): Refactor structures and functions as shims over
	the new common structures and functions.
	(DECLARE_REGISTRY): Declare struct TAG ## _data.  Use the tagged
	callback typedefs.
@
text
@d784 1
a784 1
gdbarch.h bsd-uthread.h gdb_stat.h memory-map.h	memrange.h \
d802 1
a802 1
gdb_wait.h common/gdb_assert.h solib.h ppc-tdep.h cp-support.h glibc-tdep.h \
@


1.1215
log
@	Enable readline in Python in a GDB-specific way and block the
	standard Python readline module to prevent conflicts with GDB.
	* Makefile.in (SUBDIR_PYTHON_OBS): Add py-gdb-readline.o.
	(SUBDIR_PYTHON_SRCS): Add python/py-gdb-readline.c.
	(py-gdb-readline.o): Add rule to compile python/py-gdb-readline.c.
	* python/py-gdb-readline.c: New file.
	* python/python-internal.h (gdbpy_initialize_gdb_readline): New
	prototype.
	* python/python.c (_initialize_python): Call
	gdbpy_initialize_gdb_readline.
@
text
@d924 1
a924 1
	format.o
@


1.1214
log
@Fix a typo that prevented "make TAGS" from working.

 gdb/Makefile.in (HFILES_NO_SRCDIR): Fix a typo: golang.h -> go-lang.h.
 The typo broke "make TAGS".
@
text
@d283 1
d316 1
d2088 4
@


1.1213
log
@    	* Makefile.in (SFILES): Remove objc-exp.y.
    	(YYFILES): Remove objc-exp.c.
    	(YYOBJ): Remove objc-exp.o.
    	(local-maintainer-clean): Don't mention objc-exp.c.
    	* c-exp.y: Include objc-lang.h.
    	(%union) <class>: New field.
    	(NSSTRING, SELECTOR, CLASSNAME, OBJC_LBRAC): New tokens.
    	(exp): Clone subscript production for OBJC_LBRAC.  Add various
    	Objective C productions.
    	(msglist, msgarglist, msgarg): New productions.
    	(array_mod, func_mod, operator): Clone productions for
    	OBJC_LBRAC.
    	(parse_string_or_char): Handle '@@' strings.
    	(lex_one_token): Return OBJC_LBRAC.  Recognize @@selector.
    	(classify_name): Check la_name_of_this.  Recognize ObjC class
    	names.
    	* objc-exp.y: Remove.
    	* objc-lang.c (objc_language_defn): Use c_parse, c_error.
    	* objc-lang.h (objc_parse, objc_error): Don't declare.
gdb/testsuite
    	* gdb.objc/print.exp (test_float_accepted): Remove kfails.
@
text
@d775 1
a775 1
c-lang.h d-lang.h golang.h frame.h event-loop.h block.h cli/cli-setshow.h \
@


1.1212
log
@	* common/gdb_vecs.h: Moved here from ./gdb_vecs.h.
	* common/gdb_vecs.c: New file, contents from utils.c.
	* common/host-defs.h: New file, contents from defs.h.
	* utils.h: New file, contents from defs.h.
	* defs.h: Move all declarations of objects defined in utils.c
	to utils.h (except QUIT() and related).
	#include "utils.h", "host-defs.h".
	* probe.h (probe_p): Move here from gdb_vecs.h.
	* symfile.c: #include "probe.h" instead of "gdb_vecs.h".
	* utils.c (free_char_ptr_vec): Moved to common/gdb_vecs.c.
	(dirnames_to_char_ptr_vec_append, dirnames_to_char_ptr_vec): Ditto.
	* Makefile.in (SFILES): Add common/gdb_vecs.c.
	(HFILES_NO_SRCDIR): Add common/gdb_vecs.h, common/host-defs.h, utils.h.
	(COMMON_OBS): Add gdb_vecs.o.
	(gdb_vecs.o): New rule.
@
text
@d720 1
a720 1
	objc-exp.y objc-lang.c \
a937 1
	objc-exp.c \
a943 1
	objc-exp.o \
a1245 1
	        objc-exp.c \
@


1.1211
log
@	* dwarf2read.c (try_open_dwo_file): Use gdb_bfd_ref and
	gdb_bfd_unref.
	(free_dwo_file): Use gdb_bfd_unref.
	* cli/cli-dump.c: Include gdb_bfd.h.
	(bfd_openw_with_cleanup): Use gdb_bfd_ref.
	(bfd_openr_with_cleanup): Likewise.
	* windows-nat.c (windows_make_so): Use gdb_bfd_ref,
	gdb_bfd_unref.
	* utils.c: Include gdb_bfd.h.
	(do_bfd_close_cleanup): Use gdb_bfd_unref.
	* symfile.c: Include gdb_bfd.h.
	(separate_debug_file_exists): Use gdb_bfd_unref.
	(bfd_open_maybe_remote): Use gdb_bfd_ref.
	(symfile_bfd_open): Use gdb_bfd_ref, gdb_bfd_unref.
	(generic_load): Use gdb_bfd_ref.
	(reread_symbols): Use gdb_bfd_unref.
	* symfile-mem.c: Include gdb_bfd.h.
	(symbol_file_add_from_memory): Use make_cleanup_bfd_close.
	* spu-linux-nat.c (spu_bfd_open): Use gdb_bfd_ref, gdb_bfd_unref.
	* solib.c: Include gdb_bfd.h.
	(solib_bfd_fopen): Use gdb_bfd_ref.
	(solib_bfd_open): Use gdb_bfd_unref.
	(free_so_symbols): Use gdb_bfd_unref.
	(reload_shared_libraries_1): Use gdb_bfd_unref.
	* solib-spu.c: Include gdb_bfd.h.
	(spu_bfd_fopen): Use gdb_bfd_ref, gdb_bfd_unref.
	* solib-pa64.c (pa64_solib_create_inferior_hook): Use gdb_bfd_ref,
	gdb_bfd_unref.
	* solib-frv.c: Include gdb_bfd.h.
	(enable_break2): Use gdb_bfd_unref.
	* solib-dsbt.c: Include gdb_bfd.h.
	(enable_break2): Use gdb_bfd_unref.
	* solib-darwin.c: Include gdb_bfd.h.
	(darwin_solib_get_all_image_info_addr_at_init): Use gdb_bfd_ref,
	gdb_bfd_unref.
	(darwin_bfd_open): Use gdb_bfd_unref.
	* rs6000-nat.c (add_vmap): Use gdb_bfd_ref, gdb_bfd_unref.
	* remote-mips.c: Include gdb_bfd.h.
	(mips_load_srec): Use gdb_bfd_ref.
	(pmon_load_fast): Use gdb_bfd_ref.
	* remote-m32r-sdi.c: Include gdb_bfd.h.
	(m32r_load): Use gdb_bfd_ref.
	* record.c: Include gdb_bfd.h.
	(record_save_cleanups): Use gdb_bfd_unref.
	(cmd_record_save): Use gdb_bfd_unref.
	* procfs.c (insert_dbx_link_bpt_in_file): Use gdb_bfd_ref,
	gdb_bfd_unref.
	* objfiles.h (gdb_bfd_close_or_warn): Remove.
	(gdb_bfd_ref, gdb_bfd_unref): Move to gdb_bfd.h.
	* objfiles.c: Include gdb_bfd.h.
	(free_objfile): Use gdb_bfd_unref.
	(gdb_bfd_close_or_warn, gdb_bfd_ref, gdb_bfd_unref): Move to
	gdb_bfd.c.
	* machoread.c (macho_add_oso_symfile): Use gdb_bfd_unref.
	(macho_symfile_read_all_oso): Use gdb_bfd_ref, gdb_bfd_unref.
	(macho_check_dsym): Likewise.
	* m32r-rom.c: Include gdb_bfd.h.
	(m32r_load): Use gdb_bfd_ref.
	(m32r_upload_command): Use gdb_bfd_ref.
	* jit.c: Include gdb_bfd.h.
	(jit_bfd_try_read_symtab): Use gdb_bfd_ref, gdb_bfd_unref.
	* gdb_bfd.h: New file.
	* gdb_bfd.c: New file.
	* gcore.c: Include gdb_bfd.h.
	(create_gcore_bfd): Use gdb_bfd_ref.
	(do_bfd_delete_cleanup): Use gdb_bfd_unref.
	(gcore_command): Use gdb_bfd_unref.
	* exec.c: Include gdb_bfd.h.
	(exec_close): Use gdb_bfd_unref.
	(exec_close_1): Use gdb_bfd_unref.
	(exec_file_attach): Use gdb_bfd_ref.
	* elfread.c: Include gdb_bfd.h.
	(build_id_verify): Use gdb_bfd_unref.
	* dsrec.c: Include gdb_bfd.h.
	(load_srec): Use gdb_bfd_ref.
	* corelow.c: Include gdb_bfd.h.
	(core_close): Use gdb_bfd_unref.
	(core_open): Use gdb_bfd_ref.
	* bfd-target.c: Include gdb_bfd.h.
	(target_bfd_xclose): Use gdb_bfd_unref.
	(target_bfd_reopen): Use gdb_bfd_ref.
	* Makefile.in (SFILES): Add gdb_bfd.c.
	(HFILES_NO_SRCDIR): Add gdb_bfd.h.
	(COMMON_OBS): Add gdb_bfd.o.
@
text
@d747 1
a747 1
	common/common-utils.c common/xml-utils.c \
d768 2
a769 2
common/gdb_signals.h common/gdb_thread_db.h common/i386-xstate.h \
common/linux-ptrace.h \
d831 1
a831 1
common/format.h \
d920 1
a920 1
	jit.o progspace.o skip.o probe.o \
d1910 4
@


1.1210
log
@	Add target-side support for dynamic printf.
	* NEWS: Mention the additional style.
	* breakpoint.h (struct bp_target_info): New fields tcommands, persist.
	(struct bp_location): New field cmd_bytecode.
	* breakpoint.c: Include format.h.
	(disconnected_dprintf): New global.
	(parse_cmd_to_aexpr): New function.
	(build_target_command_list): New function.
	(insert_bp_location): Call it.
	(remove_breakpoints_pid): Skip dprintf breakpoints.
	(print_one_breakpoint_location): Ditto.
	(dprintf_style_agent): New global.
	(dprintf_style_enums): Add dprintf_style_agent.
	(update_dprintf_command_list): Add agent case.
	(agent_printf_command): New function.
	(_initialize_breakpoint): Add new commands.
	* common/ax.def (printf): New bytecode.
	* ax.h (ax_string): Declare.
	* ax-gdb.h (gen_printf): Declare.
	* ax-gdb.c: Include cli-utils.h, format.h.
	(gen_printf): New function.
	(maint_agent_print_command): New function.
	(_initialize_ax_gdb): Add maint agent-printf command.
	* ax-general.c (ax_string): New function.
	(ax_print): Add printf disassembly.
	* Makefile.in (SFILES): Add format.c
	(COMMON_OBS): Add format.o.
	* common/format.h: New file.
	* common/format.c: New file.
	* printcmd.c: Include format.h.
	(ui_printf): Call parse_format_string.
	* remote.c (remote_state): New field breakpoint_commands.
	(PACKET_BreakpointCommands): New enum.
	(remote_breakpoint_commands_feature): New function.
	(remote_protocol_features): Add new BreakpointCommands entry.
	(remote_can_run_breakpoint_commands): New function.
	(remote_add_target_side_commands): New function.
	(remote_insert_breakpoint): Call it.
	(remote_insert_hw_breakpoint): Ditto.
	(_initialize_remote): Add new packet configuration for
	target-side breakpoint commands.
	* target.h (struct target_ops): New field
	to_can_run_breakpoint_commands.
	(target_can_run_breakpoint_commands): New macro.
	* target.c (update_current_target): Handle
	to_can_run_breakpoint_commands.

	[gdbserver]
	* Makefile.in (WARN_CFLAGS_NO_FORMAT): Define.
	(ax.o): Add it to build rule.
	(ax-ipa.o): Ditto.
	(OBS): Add format.o.
	(IPA_OBS): Add format.o.
	* server.c (handle_query): Claim support for breakpoint commands.
	(process_point_options): Add command case.
	(process_serial_event): Leave running if there are printfs in
	effect.
	* mem-break.h (any_persistent_commands): Declare.
	(add_breakpoint_commands): Declare.
	(gdb_no_commands_at_breakpoint): Declare.
	(run_breakpoint_commands): Declare.
	* mem-break.c (struct point_command_list): New struct.
	(struct breakpoint): New field command_list.
	(any_persistent_commands): New function.
	(add_commands_to_breakpoint): New function.
	(add_breakpoint_commands): New function.
	(gdb_no_commands_at_breakpoint): New function.
	(run_breakpoint_commands): New function.
	* linux-low.c (linux_wait_1): Test for and run breakpoint commands
	locally.
	* ax.c: Include format.h.
	(ax_printf): New function.
	(gdb_eval_agent_expr): Add printf opcode.

	[doc]
	* gdb.texinfo (Dynamic Printf): Mention agent style and
	disconnected dprintf.
	(Maintenance Commands): Describe maint agent-printf.
	(General Query Packets): Mention BreakpointCommands feature.
	(Packets): Document commands extension to Z0 packet.
	* agentexpr.texi (Bytecode Descriptions): Document printf
	bytecode.

	[testsuite]
	* gdb.base/dprintf.exp: Add agent style tests.
@
text
@d707 1
a707 1
	gdbarch.c arch-utils.c gdbtypes.c gnu-v2-abi.c gnu-v3-abi.c \
d832 1
a832 1
common/linux-osdata.h gdb-dlfcn.h auto-load.h probe.h stap-probe.h
d882 1
a882 1
	gdbarch.o arch-utils.o gdbtypes.o osabi.o copying.o \
@


1.1209
log
@2012-05-30  Jeff Kenton  <jkenton@@tilera.com>

	* Makefile.in (ALL_TARGET_OBJS): Add tilegx-tdep.o and
	tilegx-linux-tdep.o.
	(ALLDEPFILES): Add tilegx-linux-nat.c, tilegx-tdep.c and
	tilegx-linux-tdep.c.
	* configure.tgt: Handle tilegx-*-linux*.
	* tilegx-tdep.h: New file.
	* tilegx-tdep.c: New file.
	* tilegx-linux-tdep.c: New file.
	* regformats/reg-tilegx.dat: New file.
@
text
@d748 2
a749 1
	common/ptid.c common/buffer.c gdb-dlfcn.c common/agent.c
d831 1
d921 2
a922 1
	common-utils.o buffer.o ptid.o gdb-dlfcn.o common-agent.o
d1922 4
@


1.1208
log
@2012-05-23  Stan Shebs  <stan@@codesourcery.com>
	    Kwok Cheung Yeung  <kcy@@codesourcery.com>

	* Makefile.in (SUBDIR_MI_OBS): Add mi-cmd-info.o.
	(SUBDIR_MI_SRCS): Add mi-cmd-info.c.
	(mi-cmd-info.o): New rule.
	* osdata.h (info_osdata_command): New declaration.
	* osdata.c (info_osdata_command): Change to non-static.
	* mi/mi-cmds.h (mi_cmd_info_os): New declaration.
	* mi/mi-cmds.c (mi_cmds): Add -info-os MI command.
	* mi/mi-cmd-info.c: New file.

	* gdb.texinfo (Miscellaneous GDB/MI Commands): Document -info-os.

	* gdb.mi/mi-info-os.exp: New file.
@
text
@d569 1
d1502 1
@


1.1207
log
@2012-04-27  Sergio Durigan Junior  <sergiodj@@redhat.com>
	    Tom Tromey  <tromey@@redhat.com>
	    Jan Kratochvil  <jan.kratochvil@@redhat.com>

	* Makefile.in (SFILES): Add `probe' and `stap-probe'.
	(COMMON_OBS): Likewise.
	(HFILES_NO_SRCDIR): Add `probe'.
	* NEWS: Mention support for static and SystemTap probes.
	* amd64-tdep.c (amd64_init_abi): Initializing proper fields used by
	SystemTap probes' arguments parser.
	* arm-linux-tdep.c: Including headers needed to perform the parsing
	of SystemTap probes' arguments.
	(arm_stap_is_single_operand): New function.
	(arm_stap_parse_special_token): Likewise.
	(arm_linux_init_abi): Initializing proper fields used by SystemTap
	probes' arguments parser.
	* ax-gdb.c (require_rvalue): Removing static declaration.
	(gen_expr): Likewise.
	* ax-gdb.h (gen_expr): Declaring function.
	(require_rvalue): Likewise.
	* breakpoint.c: Include `gdb_regex.h' and `probe.h'.
	(bkpt_probe_breakpoint_ops): New variable.
	(momentary_breakpoint_from_master): Set the `probe' value.
	(add_location_to_breakpoint): Likewise.
	(break_command_1): Using proper breakpoint_ops according to the
	argument passed by the user in the command line.
	(bkpt_probe_insert_location): New function.
	(bkpt_probe_remove_location): Likewise.
	(bkpt_probe_create_sals_from_address): Likewise.
	(bkpt_probe_decode_linespec): Likewise.
	(tracepoint_probe_create_sals_from_address): Likewise.
	(tracepoint_probe_decode_linespec): Likewise.
	(tracepoint_probe_breakpoint_ops): New variable.
	(trace_command): Using proper breakpoint_ops according to the
	argument passed by the user in the command line.
	(initialize_breakpoint_ops): Initializing breakpoint_ops for
	static probes on breakpoints and tracepoints.
	* breakpoint.h (struct bp_location) <probe>: New field.
	* cli-utils.c (skip_spaces_const): New function.
	(extract_arg): Likewise.
	* cli-utils.h (skip_spaces_const): Likewise.
	(extract_arg): Likewise.
	* coffread.c (coff_sym_fns): Add `sym_probe_fns' value.
	* configure.ac: Append `stap-probe.o' to be generated when ELF
	support is present.
	* configure: Regenerate.
	* dbxread.c (aout_sym_fns): Add `sym_probe_fns' value.
	* elfread.c: Include `probe.h' and `arch-utils.h'.
	(probe_key): New variable.
	(elf_get_probes): New function.
	(elf_get_probe_argument_count): Likewise.
	(elf_evaluate_probe_argument): Likewise.
	(elf_compile_to_ax): Likewise.
	(elf_symfile_relocate_probe): Likewise.
	(stap_probe_key_free): Likewise.
	(elf_probe_fns): New variable.
	(elf_sym_fns): Add `sym_probe_fns' value.
	(elf_sym_fns_lazy_psyms): Likewise.
	(elf_sym_fns_gdb_index): Likewise.
	(_initialize_elfread): Initialize objfile cache for static
	probes.
	* gdb_vecs.h (struct probe): New forward declaration.
	(probe_p): New VEC declaration.
	* gdbarch.c: Regenerate.
	* gdbarch.h: Regenerate.
	* gdbarch.sh (stap_integer_prefix): New variable.
	(stap_integer_suffix): Likewise.
	(stap_register_prefix): Likewise.
	(stap_register_suffix): Likewise.
	(stap_register_indirection_prefix): Likewise.
	(stap_register_indirection_suffix): Likewise.
	(stap_gdb_register_prefix): Likewise.
	(stap_gdb_register_suffix): Likewise.
	(stap_is_single_operand): New function.
	(stap_parse_special_token): Likewise.
	(struct stap_parse_info): Forward declaration.
	* i386-tdep.c: Including headers needed to perform the parsing
	of SystemTap probes' arguments.
	(i386_stap_is_single_operand): New function.
	(i386_stap_parse_special_token): Likewise.
	(i386_elf_init_abi): Initializing proper fields used by SystemTap
	probes' arguments parser.
	* i386-tdep.h (i386_stap_is_single_operand): New function.
	(i386_stap_parse_special_token): Likewise.
	* machoread.c (macho_sym_fns): Add `sym_probe_fns' value.
	* mipsread.c (ecoff_sym_fns): Likewise.
	* objfiles.c (objfile_relocate1): Support relocation for static
	probes.
	* parse.c (prefixify_expression): Remove static declaration.
	(initialize_expout): Likewise.
	(reallocate_expout): Likewise.
	* parser-defs.h (initialize_expout): Declare function.
	(reallocate_expout): Likewise.
	(prefixify_expression): Likewise.
	* ppc-linux-tdep.c: Including headers needed to perform the parsing
	of SystemTap probes' arguments.
	(ppc_stap_is_single_operand): New function.
	(ppc_stap_parse_special_token): Likewise.
	(ppc_linux_init_abi): Initializing proper fields used by SystemTap
	probes' arguments parser.
	* probe.c: New file, for generic statically defined probe support.
	* probe.h: Likewise.
	* s390-tdep.c: Including headers needed to perform the parsing of
	SystemTap probes' arguments.
	(s390_stap_is_single_operand): New function.
	(s390_gdbarch_init): Initializing proper fields used by SystemTap
	probes' arguments parser.
	* somread.c (som_sym_fns): Add `sym_probe_fns' value.
	* stap-probe.c: New file, for SystemTap probe support.
	* stap-probe.h: Likewise.
	* symfile.h: Include `gdb_vecs.h'.
	(struct sym_probe_fns): New struct.
	(struct sym_fns) <sym_probe_fns>: New field.
	* symtab.c (init_sal): Initialize `probe' field.
	* symtab.h (struct probe): Forward declaration.
	(struct symtab_and_line) <probe>: New field.
	* tracepoint.c (start_tracing): Adjust semaphore on breakpoints
	locations.
	(stop_tracing): Likewise.
	* xcoffread.c (xcoff_sym_fns): Add `sym_probe_fns' value.
@
text
@d205 1
a205 1
	mi-interp.o \
d212 1
a212 1
	mi/mi-cmd-target.c mi/mi-interp.c \
d1840 4
@


1.1206
log
@	Initial pass at Go language support.
	* NEWS: Mention Go.
	* Makefile.in (SFILES): Add go-exp.y, go-lang.c, go-typeprint.c,
	go-valprint.c.
	(COMMON_OBS): Add go-lang.o, go-val.print.o, go-typeprint.o.
	(YYFILES): Add go-exp.c.
	(YYOBJ): Add go-exp.o.
	(local-maintainer-clean): Delete go-exp.c.
	* defs.h (enum language): Add language_go.
	* dwarf2read.c: #include "go-lang.h".
	(fixup_go_packaging): New function.
	(process_full_comp_unit): Call it when processing Go CUs.
	(dwarf2_physname): Add Go support.
	(read_file_scope): Handle missing language spec for GNU Go.
	(set_cu_language): Handle DW_LANG_Go.
	* go-exp.y: New file.
	* go-lang.h: New file.
	* go-lang.c: New file.
	* go-typeprint.c: New file.
	* go-valprint.c: New file.
	* symtab.c: #include "go-lang.h".
	(symbol_set_language): Handle language_go.
	(symbol_find_demangled_name, symbol_set_names): Ditto.
	(symbol_natural_name, demangle_for_lookup, find_main_name): Ditto.

	testsuite/
	* configure.ac: Create gdb.go/Makefile.
	* configure: Regenerate.
	* gdb.base/default.exp: Add "go" to "set language" testing.
	* gdb.go/Makefile.in: New file.
	* gdb.go/basic-types.exp: New file.
	* gdb.go/chan.exp: New file.
	* gdb.go/chan.go: New file.
	* gdb.go/handcall.exp: New file.
	* gdb.go/handcall.go: New file.
	* gdb.go/hello.exp: New file.
	* gdb.go/hello.go: New file.
	* gdb.go/integers.exp: New file.
	* gdb.go/integers.go: New file.
	* gdb.go/methods.exp: New file.
	* gdb.go/methods.go: New file.
	* gdb.go/package.exp: New file.
	* gdb.go/package1.go: New file.
	* gdb.go/package2.go: New file.
	* gdb.go/print.exp: New file.
	* gdb.go/strings.exp: New file.
	* gdb.go/strings.go: New file.
	* gdb.go/types.exp: New file.
	* gdb.go/types.go: New file.
	* gdb.go/unsafe.exp: New file.
	* gdb.go/unsafe.go: New file.
	* lib/future.exp: Add Go support.
	(gdb_find_go, gdb_find_go_linker): New procs.
	(gdb_default_target_compile): Add Go support.
	* lib/gdb.exp (skip_go_tests): New proc.
	* lib/go.exp: New file.

	doc/
	* gdb.texinfo (Supported Languages): Add Go.
	(Go): New node.
@
text
@d729 2
a730 2
	stabsread.c stack.c std-regs.c symfile.c symfile-mem.c symmisc.c \
	symtab.c \
d829 1
a829 1
common/linux-osdata.h gdb-dlfcn.h auto-load.h
d917 1
a917 1
	jit.o progspace.o skip.o \
@


1.1205
log
@2012-04-19  Pedro Alves  <palves@@redhat.com>

	gdb/
	* Makefile.in (GNULIB_BUILDDIR): New.
	(LIBGNU, INCGNU, GNULIB_H): Adjust.
	(SUBDIRS): Add $(GNULIB_BUILDDIR).
	(CLEANDIRS). Remove gnulib/import.
	(REQUIRED_SUBDIRS): Replace gnulib/import with $(GNULIB_BUILDDIR).
	(all-lib): Ditto.
	(distclean): Remove the $(GNULIB_BUILDDIR) directory.
	(gnulib/import/Makefile): Replace gnulib/import with
	$(GNULIB_BUILDDIR).  Set CONFIG_FILES to just Makefile.
	(ACLOCAL_AMFLAGS): Remove '-I gnulib/import/m4'.
	(aclocal_m4_deps): Remove the gnulib dependencies.  Add
	acx_configure_dir.m4.
	* acinclude.m4: Include acx_configure_dir.m4.
	* acx_configure_dir.m4: New file.
	* aclocal.m4: Regenerate.
        * configure.ac: Remove gl_EARLY, gl_INIT and AM_INIT_AUTOMAKE
        calls.  Configure gnulib using ACX_CONFIGURE_DIR.
        (GNULIB): New variable.
        (GNULIB_STDINT_H): Adjust.
        (AC_OUTPUT): Don't output gnulib/Makefile.
        * gdb/defs.h: Include build-gnulib/config.h.
        * aclocal.m4: Regenerate.
        * config.in: Regenerate.
        * configure: Regenerate.

        * gnulib/Makefile.in: New file.
        * gnulib/configure.ac: New file.
        * gnulib/aclocal.m4: New file.
        * gnulib/config.in: New file.
        * gnulib/configure: New file.
	* gnulib/: Re-run gnulib-tool to adjust.

        gdb/gdbserver/
        * Makefile.in (GNULIB_BUILDDIR): New.
	(LIBGNU, INCGNU, GNULIB_H): Adjust.
        (SUBDIRS, CLEANDIRS, REQUIRED_SUBDIRS): New.
        (all, install-only, uninstall, clean-info, all-lib, clean): No
        longer pass GNULIB_FLAGS_TO_PASS.  Use subdir_do.
        (maintainer-clean realclean distclean): Use subdir_do.
        (subdir_do): New.
        (gnulib/import/Makefile): Adjust.  Replace gnulib/import with
	$(GNULIB_BUILDDIR).  Don't pass argument to config.status.
        * acinclude.m4: Include acx_configure_dir.m4.
        * configure.ac: Remove gl_EARLY, gl_INIT, and AM_INIT_AUTOMAKE
        calls.  Call AC_PROG_RANLIB.  Configure gnulib using
        ACX_CONFIGURE_DIR.
        (GNULIB): New.
        (GNULIB_STDINT_H): Adjust.
        (AC_OUTPUT): Don't output gnulib/Makefile anymore.
        * gdbreplay.c: Include build-gnulib/config.h.
        * server.h: Likewise.
        * aclocal.m4: Regenerate.
        * config.in: Regenerate.
        * configure: Regenerate.
@
text
@d707 1
d773 1
a773 1
c-lang.h d-lang.h frame.h event-loop.h block.h cli/cli-setshow.h	\
d893 1
d938 1
a938 1
	f-exp.c m2-exp.c p-exp.c
d944 1
a944 1
	f-exp.o m2-exp.o p-exp.o
d1246 1
a1246 1
		f-exp.c m2-exp.c p-exp.c
@


1.1204
log
@2012-04-19  Pedro Alves  <palves@@redhat.com>

	* Makefile.in (HFILES_NO_SRCDIR): Remove gnulib/wchar.in.h.
	Adjust paths to gnulib imported files.
C
@
text
@d173 3
a175 2
LIBGNU = gnulib/import/libgnu.a
INCGNU = -I$(srcdir)/gnulib/import -Ignulib/import
d179 1
a179 1
GNULIB_H = gnulib/import/string.h @@GNULIB_STDINT_H@@
d920 2
a921 2
SUBDIRS = doc @@subdirs@@ data-directory
CLEANDIRS = $(SUBDIRS) gnulib/import
d927 1
a927 1
REQUIRED_SUBDIRS = doc | testsuite | gnulib/import | data-directory
d1167 2
a1168 2
all-lib: gnulib/import/Makefile
	@@$(MAKE) $(FLAGS_TO_PASS) DO=all DODIRS=gnulib/import subdir_do
d1223 1
d1279 2
a1280 2
gnulib/import/Makefile: gnulib/import/Makefile.in config.status @@frags@@
	CONFIG_FILES="gnulib/import/Makefile" \
d1308 1
a1308 1
ACLOCAL_AMFLAGS = -I gnulib/import/m4 -I ../config
d1311 1
a1311 22
	gnulib/import/m4/00gnulib.m4 \
	gnulib/import/m4/extensions.m4 \
	gnulib/import/m4/gnulib-cache.m4 \
	gnulib/import/m4/gnulib-common.m4 \
	gnulib/import/m4/gnulib-comp.m4 \
	gnulib/import/m4/gnulib-tool.m4 \
	gnulib/import/m4/include_next.m4 \
	gnulib/import/m4/inttypes.m4 \
	gnulib/import/m4/inttypes-pri.m4 \
	gnulib/import/m4/longlong.m4 \
	gnulib/import/m4/memchr.m4 \
	gnulib/import/m4/memmem.m4 \
	gnulib/import/m4/mmap-anon.m4 \
	gnulib/import/m4/multiarch.m4 \
	gnulib/import/m4/onceonly.m4 \
	gnulib/import/m4/stddef_h.m4 \
	gnulib/import/m4/stdint.m4 \
	gnulib/import/m4/string_h.m4 \
	gnulib/import/m4/warn-on-use.m4 \
	gnulib/import/m4/wchar_h.m4 \
	gnulib/import/m4/wchar_t.m4 \
	gnulib/import/m4/wint_t.m4 \
@


1.1203
log
@2012-04-19  Pedro Alves  <palves@@redhat.com>

	gdb/
	* gnulib/: Move whole directory ...
	* gnulib/import/: ... here, and re-rerun gnulib-tool to adjust.
	* Makefile.in (LIBGNU, INCGNU, GNULIB_H, CLEANDIRS)
	(REQUIRED_SUBDIRS, all-lib, gnulib/Makefile, ACLOCAL_AMFLAGS)
	(aclocal_m4_deps): Adjust.
	* aclocal.m4: Regenerate.
	* configure: Regenerate.
	* configure.ac: Adjust AC_OUTPUT output.

	gdbserver/
	* Makefile.in (LIBGNU, INCGNU): Adjust.
	(GNULIB_FLAGS_TO_PASS, GNULIB_H): Adjust.
	(all, install-only, uninstall, clean-info, all-lib, clean)
	(maintainer-clean, Makefile, gnulib/Makefile): Adjust.
	* configure.ac: Adjust AC_OUTPUT output.
	* aclocal.m4: Regenerate.
	* configure: Regenerate.
@
text
@d773 3
a775 3
cli/cli-script.h macrotab.h symtab.h version.h gnulib/wchar.in.h \
gnulib/string.in.h gnulib/str-two-way.h \
gnulib/stdint.in.h remote.h gdb.h sparc-nat.h \
d823 3
a825 2
gnulib/extra/arg-nonnull.h gnulib/extra/c++defs.h gnulib/extra/warn-on-use.h \
gnulib/stddef.in.h gnulib/inttypes.in.h inline-frame.h skip.h \
@


1.1202
log
@gdb:
        * Makefile.in (SFILES): Add common/vec.c and remove vec.c.
        (vec.o): New rule.
        * vec.c: Move it ...
        * common/vec.c: ... here.
        * vec.h: Move it ...
        * common/vec.h: ... here.

gdb/gdbserver:

        * Makefile.in (SFILES): Add common/vec.c.
        (OBS): Add vec.o.
        (vec.o): New rule.
@
text
@d173 2
a174 2
LIBGNU = gnulib/libgnu.a
INCGNU = -I$(srcdir)/gnulib -Ignulib
d178 1
a178 1
GNULIB_H = gnulib/string.h @@GNULIB_STDINT_H@@
d919 1
a919 1
CLEANDIRS = $(SUBDIRS) gnulib 
d925 1
a925 1
REQUIRED_SUBDIRS = doc | testsuite | gnulib | data-directory
d1165 2
a1166 2
all-lib: gnulib/Makefile
	@@$(MAKE) $(FLAGS_TO_PASS) DO=all DODIRS=gnulib subdir_do
d1276 2
a1277 2
gnulib/Makefile: gnulib/Makefile.in config.status @@frags@@
	CONFIG_FILES="gnulib/Makefile" \
d1305 1
a1305 1
ACLOCAL_AMFLAGS = -I gnulib/m4 -I ../config
d1308 22
a1329 22
	gnulib/m4/00gnulib.m4 \
	gnulib/m4/extensions.m4 \
	gnulib/m4/gnulib-cache.m4 \
	gnulib/m4/gnulib-common.m4 \
	gnulib/m4/gnulib-comp.m4 \
	gnulib/m4/gnulib-tool.m4 \
	gnulib/m4/include_next.m4 \
	gnulib/m4/inttypes.m4 \
	gnulib/m4/inttypes-pri.m4 \
	gnulib/m4/longlong.m4 \
	gnulib/m4/memchr.m4 \
	gnulib/m4/memmem.m4 \
	gnulib/m4/mmap-anon.m4 \
	gnulib/m4/multiarch.m4 \
	gnulib/m4/onceonly.m4 \
	gnulib/m4/stddef_h.m4 \
	gnulib/m4/stdint.m4 \
	gnulib/m4/string_h.m4 \
	gnulib/m4/warn-on-use.m4 \
	gnulib/m4/wchar_h.m4 \
	gnulib/m4/wchar_t.m4 \
	gnulib/m4/wint_t.m4 \
@


1.1201
log
@	* cleanups.h: New file.
	* cleanups.c: New file.
	* Makefile.in (SFILES): Add cleanups.c.
	(HFILES_NO_SRCDIR): Add cleanups.h.
	(COMMON_OBS): Add cleanups.o.
	* defs.h (struct cleanup): Moved to cleanups.h.
	(do_cleanups,do_final_cleanups): Ditto.
	(discard_cleanups,discard_final_cleanups): Ditto
	(make_cleanup,make_cleanup_dtor,make_final_cleanup): Ditto.
	(save_cleanups,save_final_cleanups): Ditto.
	(restore_cleanups,restore_final_cleanups): Ditto.
	(null_cleanup): Ditto.
	(make_my_cleanup,make_my_cleanup2): Ditto.
	(discard_my_cleanups,save_my_cleanups,restore_my_cleanups): Ditto.
	* utils.c (cleanup_chain,final_cleanup_chain): Moved to cleanups.c.
	(do_cleanups,do_final_cleanups): Ditto.
	(discard_cleanups,discard_final_cleanups): Ditto
	(make_cleanup,make_cleanup_dtor,make_final_cleanup): Ditto.
	(save_cleanups,save_final_cleanups): Ditto.
	(restore_cleanups,restore_final_cleanups): Ditto.
	(null_cleanup): Ditto.
	(make_my_cleanup,make_my_cleanup2): Ditto.
	(discard_my_cleanups,save_my_cleanups,restore_my_cleanups): Ditto.
@
text
@d736 1
a736 1
	valarith.c valops.c valprint.c value.c varobj.c vec.c \
d782 1
a782 1
objfiles.h vec.h disasm.h mips-tdep.h ser-base.h \
d1945 4
@


1.1200
log
@gdb/
	auto-load: Move files.
	* Makefile.in (SFILES): Add auto-load.c.
	(HFILES_NO_SRCDIR): Add auto-load.h.
	(COMMON_OBS): Add auto-load.o.
	(distclean): Change .gdbinit for gdb-gdb.gdb.
	* auto-load.c: New file, with parts from python/py-auto-load.c.
	* auto-load.h: New file, with parts from python/python.h.
	* configure: Regenerate.
	* configure.ac (AC_OUTPUT): Change .gdbinit for gdb-gdb.gdb.
	* gdb-gdb.gdb.in: New file, renamed from gdbinit.in.
	* gdbinit.in: Remove file, rename it to gdb-gdb.gdb.in.
	* main.c: Include auto-load.h.
	* python/py-auto-load.c: Move include filenames.h, gdb_regex.h,
	command.h, observer.h and progspace.h to auto-load.c.  Add include
	auto-load.h.
	(gdbpy_global_auto_load, struct auto_load_pspace_info)
	(struct loaded_script, auto_load_pspace_data)
	(auto_load_pspace_data_cleanup, get_auto_load_pspace_data)
	(hash_loaded_script_entry, eq_loaded_script_entry)
	(init_loaded_scripts_info, get_auto_load_pspace_data_for_loading)
	(maybe_add_script): Move to auto-load.c.
	(source_section_scripts): Change maybe_add_script parameters passing,
	use script_not_found_warning_print.
	(clear_section_scripts, auto_load_objfile_script)
	(auto_load_new_objfile, loaded_script_ptr)
	(DEF_VEC_P (loaded_script_ptr), collect_matching_scripts, print_script)
	(sort_scripts_by_name, info_auto_load_scripts): Move to auto-load.c.
	(gdbpy_initialize_auto_load): Move auto_load_pspace_data,
	auto_load_new_objfile and info_auto_load_scripts initizations to
	auto-load.c.
	* python/python.h (gdbpy_global_auto_load): Move to auto-load.h.
@
text
@d693 1
a693 1
	charset.c cli-out.c coffread.c coff-pe-read.c \
d786 1
a786 1
m2-lang.h stack.h charset.h addrmap.h command.h solist.h source.h \
d861 1
a861 1
	blockframe.o breakpoint.o findvar.o regcache.o \
@


1.1199
log
@gdb/
	Import gnulib module inttypes from git
	(250b80067c1e1d8faa0c42fb572f721975b929c5)
	* Makefile.in (HFILES_NO_SRCDIR): Add gnulib/inttypes.in.h.
	(aclocal_m4_deps): Add gnulib/m4/inttypes.m4 and gnulib/m4/inttypes-pri.m4
	* aclocal.m4, config.in, configure: Regenerated.
	* gnulib/Makefile.am: Update.
	* gnulib/Makefile.in: Update.
	* gnulib/m4/gnulib-cache.m4: Update.
	* gnulib/m4/gnulib-comp.m4: Update.
	* gnulib/inttypes.in.h: New.
	* gnulib/m4/inttypes-pri.m4: New.
 	* gnulib/m4/inttypes.m4: New.

gdb/gdbserver/
	Import gnulib module inttypes.
	* aclocal.m4, config.in, configure: Regenerated.
@
text
@d686 1
a686 1
	addrmap.c \
d826 1
a826 1
common/linux-osdata.h gdb-dlfcn.h
d858 1
a858 1
	auxv.o \
d1224 1
a1224 1
	rm -f nm.h config.status config.h stamp-h .gdbinit jit-reader.h
@


1.1198
log
@gdb/
	* Makefile.in (gnulib/Makefile): Remove duplicated dependency.
@
text
@d824 1
a824 1
gnulib/stddef.in.h inline-frame.h skip.h \
d1315 2
@


1.1197
log
@gdb/

	* Makefile.in (aclocal_m4_deps): Add gnulib/m4/gnulib-cache.m4
	and gnulib/m4/gnulib-tool.m4.
@
text
@d1276 1
a1276 1
gnulib/Makefile: gnulib/Makefile.in gnulib/Makefile.in config.status @@frags@@
@


1.1196
log
@Varobj support for Ada.

This patch adds varobj support for Ada variables.  Most of the code
is implemented in a separate Ada-specific file called ada-varobj.c.
The only bits in varobj.c are the functions used as the hooks in
the language-specific varobj's vector.

gdb/ChangeLog:

        * ada-varobj.h, ada-varobj.c: New files.
        * Makefile.in (SFILES): Add ada-varobj.c.
        (HFILES_NO_SRCDIR): Add ada-varobj.h.
        (COMMON_OBS): Add ada-varobj.o.
@
text
@d1310 1
d1313 1
@


1.1195
log
@gdb/
	* Makefile.in (linux-ptrace.o): New.
	* common/linux-procfs.c (linux_proc_pid_is_zombie): New,
	from linux-nat.c.
	* common/linux-procfs.h (linux_proc_pid_is_zombie): New declaration.
	* common/linux-ptrace.c: New file.
	* config/alpha/alpha-linux.mh (NATDEPFILES): Add linux-ptrace.o.
	* config/arm/linux.mh: Likewise.
	* config/i386/linux.mh: Likewise.
	* config/i386/linux64.mh: Likewise.
	* config/ia64/linux.mh: Likewise.
	* config/m32r/linux.mh: Likewise.
	* config/m68k/linux.mh: Likewise.
	* config/mips/linux.mh: Likewise.
	* config/pa/linux.mh: Likewise.
	* config/powerpc/linux.mh: Likewise.
	* config/powerpc/ppc64-linux.mh: Likewise.
	* config/powerpc/spu-linux.mh: Likewise.
	* config/s390/s390.mh: Likewise.
	* config/sparc/linux.mh: Likewise.
	* config/sparc/linux64.mh: Likewise.
	* config/xtensa/linux.mh: Likewise.
	* linux-nat.c (linux_lwp_is_zombie): Remove, move it to
	common/linux-procfs.c.
	(wait_lwp): Rename linux_lwp_is_zombie to linux_proc_pid_is_zombie.

gdb/gdbserver/
	* Makefile.in (linux-ptrace.o): New.
	* configure.srv (arm*-*-linux*, bfin-*-*linux*, crisv32-*-linux*)
	(cris-*-linux*, i[34567]86-*-linux*, ia64-*-linux*, m32r*-*-linux*)
	(m68*-*-linux*, m68*-*-uclinux*, mips*-*-linux*, powerpc*-*-linux*)
	(s390*-*-linux*, sh*-*-linux*, sparc*-*-linux*, tic6x-*-uclinux)
	(x86_64-*-linux*, xtensa*-*-linux*): Add linux-ptrace.o to SRV_TGTOBJ
	of these targets.
	* linux-low.c (linux_attach_lwp_1): Remove redundent else clause.
@
text
@d685 1
d770 1
a770 1
ia64-tdep.h ada-lang.h varobj.h frv-tdep.h nto-tdep.h serial.h \
d887 1
a887 1
	ada-tasks.o \
@


1.1194
log
@gdb/
	* libunwind-frame.c: Rename to ...
	* ia64-libunwind-tdep.c: ... here.
	* libunwind-frame.h: Rename to ...
	* ia64-libunwind-tdep.h: ... here.
	* Makefile.in (HFILES_NO_SRCDIR): Rename libunwind-frame.h to
	ia64-libunwind-tdep.h.
	(ALLDEPFILES): Rename libunwind-frame.c to ia64-libunwind-tdep.c.
	* README (--with-libunwind): Rename to ...
	(--with-libunwind-ia64): ... here, note it is ia64 specific now.
	* config.in: Regenerate.
	* configure: Regenerate.
	* configure.ac: New option --with-libunwind-ia64, make the
	AS_HELP_STRING ia64 specific.  Deprecate option --with-libunwind.
	Remove AC_DEFINE for HAVE_LIBUNWIND.
	* ia64-libunwind-tdep.c: Make the file top comment ia64 specific.
	Rename libunwind-frame.h #include to ia64-libunwind-tdep.h.
	Rename libunwind-frame in the general comment.
	* ia64-libunwind-tdep.h: Make the file top comment ia64 specific.
	Rename symbol LIBUNWIND_FRAME_H to IA64_TDEP_LIBUNWIND_FRAME_H.
	Move forward declarations inside #ifndef.  Rename libunwind-frame in
	the general comment.
	* ia64-tdep.c: Rename libunwind-frame.h #include to
	ia64-libunwind-tdep.h.
	(ia64_gdb2uw_regnum, ia64_uw2gdb_regnum, ia64_is_fpreg)
	(ia64_libunwind_descr): Rename libunwind-frame to
	ia64-libunwind-tdep in these function comments.
	* ia64-tdep.h: Rename libunwind-frame.h #include to
	ia64-libunwind-tdep.h.
	* ia64-vms-tdep.c (ia64_vms_libunwind_descr): Rename libunwind-frame to
	ia64-libunwind-tdep in that data comment.
@
text
@d1932 4
@


1.1193
log
@2012-03-05  Tristan Gingold  <gingold@@adacore.com>

	* ia64-tdep.h: Include libunwind-frame.h and libunwind-ia64.h.
	(ia64_unw_accessors, ia64_unw_rse_accessors)
	(ia64_libunwind_descr): Declare.
	* ia64-vms-tdep.c: New file.
	* ia64-tdep.c (ia64_unw_accessors, ia64_unw_rse_accessors)
	(ia64_libunwind_descr): Make them public.
	* configure.tgt: Add ia64-*-*vms*.
	* Makefile.in (ALL_64_TARGET_OBS): Add ia64-vms-tdep.o
	(ALLDEPFILES): Add ia64-vms-tdep.c
@
text
@d783 1
a783 1
inflow.h fbsd-nat.h libunwind-frame.h completer.h inf-ttrace.h \
d1466 1
a1466 1
	libunwind-frame.c \
@


1.1192
log
@gdb:
	* target.h (struct target_ops) <to_use_agent>: New field.
	(struct target_ops) <to_can_use_agent>: New field.
	(target_use_agent, target_can_use_agent): New macro.
	* target.c (update_current_target): Update.
	* remote.c: New enum `PACKET_QAgent'.
	(remote_protocol_features): Add a new element.
	(remote_use_agent, remote_can_use_agent): New.
	(init_remote_ops): Initialize field `can_use_agent' with
	remote_can_use_agent.  Intiailize field `use_agent' with
	remote_use_agent.
	* common/agent.c (use_agent): New global.
	* common/agent.h: Declare it.
	* tracepoint.c (info_static_tracepoint_markers_command): Add
	comment.
	* Makefile.in (SFILES): Add common/agent.c and agent.c.
	(COMMON_OBS): Add common/agent.o and agent.o
	(common-agent.o): New rule.
	* agent.c: New.

gdb/doc:
	* gdb.texinfo (In-Process Agent): New node.
	Document new commands.
	(General Query Packets): Add packet `QAgent'.

gdb/gdbserver:
	* linux-low.c (linux_supports_agent): New.
	(linux_target_ops): Initialize field `supports_agent' with
	linux_supports_agent.
	* target.h (struct target_ops) <supports_agent>: New.
	(target_supports_agent): New macro.
	* server.c (handle_general_set): Handle packet 'QAgent'.
	(handle_query): Send `QAgent+'.
	* Makefile.in (server.o): Depends on agent.h.
@
text
@d519 1
a519 1
	ia64-hpux-tdep.o ia64-linux-tdep.o ia64-tdep.o \
d1463 1
a1463 1
	ia64-linux-nat.c ia64-linux-tdep.c ia64-tdep.c \
@


1.1191
log
@gdb/
	Fix -Wmissing-prototypes build.
	* Makefile.in (HFILES_NO_SRCDIR): Add sh64-tdep.h.
	* sh-tdep.c: Include sh64-tdep.h.
	* sh-tdep.h (sh64_gdbarch_init, sh64_show_regs): Remove declarations.
	* sh64-tdep.c: Include sh64-tdep.h.
	* sh64-tdep.h: New file.
@
text
@d687 1
d744 1
a744 1
	common/ptid.c common/buffer.c gdb-dlfcn.c
d858 1
d913 1
a913 1
	common-utils.o buffer.o ptid.o gdb-dlfcn.o
d1932 4
@


1.1190
log
@	* MAINTAINERS: Add rx to target ISA section.
	* Makefile.in (ALL_TARGET_OBS): Add rx-tdep.o.
	(ALLDEPFILES): Add rx-tdep.c.
@
text
@d789 1
a789 1
tui/tui-source.h xcoffsolib.h sol2-tdep.h gregset.h sh-tdep.h \
@


1.1189
log
@	* MAINTAINERS: Add rl78 to target ISA section.
	* Makefile.in (ALL_TARGET_OBS): Add rl78-tdep.o.
	(ALLDEPFILES): Add rl78-tdep.c.
	* NEWS: Mention rl78 as a new target.
@
text
@d560 1
d1496 1
@


1.1188
log
@2012-02-09  Valery Khromov  <valery.khromov@@gmail.com>

	PR gdb/12953
	* Makefile.in (HFILES_NO_SRCDIR): Add amd64bsd-nat.h.
	* amd64bsd-nat.c: Add support for debug registers (adapted from
	i386bsd-nat.c).
	[HAVE_PT_GETDBREGS] (amd64bsd_dr_get, amd64bsd_dr_set)
	(amd64bsd_dr_set_control, amd64bsd_dr_set_addr)
	(amd64bsd_dr_get_addr, amd64bsd_dr_get_status)
	(amd64bsd_dr_get_control): New functions.
	* amd64bsd-nat.h: New file (adapted from i386bsd-nat.h).
	* amd64fbsd-nat.c: Include "amd64bsd-nat.h", "i386-nat.h".
	[HAVE_PT_GETDBREGS] (_initialize_amd64fbsd_nat): Add hardware
	watchpoints initialization.
	* config/i386/fbsd64.mh (NATDEPFILES): Add i386-nat.o.
@
text
@d558 1
d1493 1
@


1.1187
log
@	* Makefile.in (TARGET_SYSTEM_ROOT, TARGET_SYSTEM_ROOT_DEFINE): Delete.
	(main.o): Remove rule.
	* configure.ac (BINDIR): Define with AC_DEFINE_DIR.
	(--with-sysroot): Rewrite.
	* configure: Regenerate.
	* config.in: Regenerate.
@
text
@d764 1
a764 1
exec.h m32r-tdep.h osabi.h gdbcore.h solib-som.h \
@


1.1186
log
@gdb/
	Fix duplicate .o files after omitting libbfd.a.
	* Makefile.in (ALL_TARGET_OBS): Remove corelow.o.
	(SFILES): Add corelow.c.
	(COMMON_OBS): Add corelow.o.
	(ALLDEPFILES): Remove corelow.c.
	* config/alpha/alpha-linux.mh (NATDEPFILES): Remove corelow.o.
	* config/alpha/alpha-osf3.mh: Likewise.
	* config/alpha/fbsd.mh: Likewise.
	* config/arm/nbsdaout.mh: Likewise.
	* config/arm/nbsdelf.mh: Likewise.
	* config/i386/i386gnu.mh: Likewise.
	* config/ia64/hpux.mh: Likewise.
	* config/ia64/linux.mh: Likewise.
	* config/m32r/linux.mh: Likewise.
	* config/m68k/linux.mh: Likewise.
	* config/mips/irix5.mh: Likewise.
	* config/mips/irix6.mh: Likewise.
	* config/pa/hpux.mh: Likewise.
	* config/pa/linux.mh: Likewise.
	* config/powerpc/aix.mh: Likewise.
	* config/sparc/linux.mh: Likewise.
	* config/sparc/linux64.mh: Likewise.
	* config/sparc/sol2.mh: Likewise.
	* config/vax/vax.mh: Likewise.
	* configure.tgt (alpha*-*-freebsd* alpha*-*-kfreebsd*-gnu)
	(alpha*-*-netbsd*, alpha*-*-knetbsd*-gnu, alpha*-*-openbsd*)
	(am33_2.0*-*-linux*, arm*-wince-pe, arm*-*-mingw32ce*, arm*-*-linux*)
	(arm*-*-openbsd*, cris*, frv-*-*, hppa*-*-hpux*, hppa*-*-netbsd*)
	(hppa*-*-openbsd*, i[34567]86-*-dicos*, i[34567]86-*-freebsd*)
	(i[34567]86-*-kfreebsd*-gnu, i[34567]86-*-netbsd*)
	(i[34567]86-*-knetbsd*-gnu, i[34567]86-*-openbsd*, i[34567]86-*-nto*)
	(i[34567]86-*-solaris2.1[0-9]*, x86_64-*-solaris2.1[0-9]*)
	(i[34567]86-*-solaris*, i[34567]86-*-linux*, i[34567]86-*-cygwin*)
	(i[34567]86-*-mingw32*, m68*-*-netbsd*, m68*-*-knetbsd*-gnu)
	(m68*-*-openbsd*, m88*-*-openbsd*, microblaze*-linux-*)
	(microblaze*-*-linux*, mips*-*-linux*, mips*-*-netbsd*)
	(mips*-*-knetbsd*-gnu, mips64*-*-openbsd*, powerpc-*-netbsd*)
	(powerpc-*-knetbsd*-gnu, powerpc-*-openbsd*, powerpc-*-linux*)
	(powerpc64-*-linux*, s390*-*-*, score-*-*, sh*-*-linux*)
	(sh*-*-netbsdelf*, sh*-*-knetbsd*-gnu, sh*-*-openbsd*)
	(sparc*-*-freebsd*, sparc*-*-kfreebsd*-gnu, sparc-*-netbsd*)
	(sparc-*-knetbsd*-gnu, sparc64-*-netbsd*, sparc64-*-knetbsd*-gnu)
	(sparc-*-openbsd*, sparc64-*-openbsd*, tic6x-*-*linux, vax-*-netbsd*)
	(vax-*-knetbsd*-gnu, vax-*-openbsd*, x86_64-*-dicos*, x86_64-*-linux*)
	(x86_64-*-freebsd*, x86_64-*-kfreebsd*-gnu, x86_64-*-netbsd*)
	(x86_64-*-knetbsd*-gnu, x86_64-*-openbsd*, xtensa*-*-linux*): Remove
	corelow.o from gdb_target_obs.
	* corefile.c (core_target): Update the comment on NULL value.
	(core_file_command): Replace error by gdb_assert on CORE_TARGET.
	* corelow.c (sniff_core_bfd): Call error instead of warning on zero
	MATCHES.  Drop YUMMY set on NULL.
	(core_close): Do not call exit_inferior_silent on zero PID.  Do not
	reclaim CORE_DATA if it is already NULL.
@
text
@a168 4
# Did the user give us a --with-sysroot option?
TARGET_SYSTEM_ROOT = @@TARGET_SYSTEM_ROOT@@
TARGET_SYSTEM_ROOT_DEFINE = @@TARGET_SYSTEM_ROOT_DEFINE@@

a1516 5
# main.o needs an explicit build rule to get TARGET_SYSTEM_ROOT and BINDIR.
main.o: $(srcdir)/main.c
	$(COMPILE) $(TARGET_SYSTEM_ROOT_DEFINE) -DBINDIR=\"$(bindir)\" $(srcdir)/main.c
	$(POSTCOMPILE)

@


1.1185
log
@	* Makefile.in (SFILES): Remove wrapper.c.
	(HFILES_NO_SRCDIR): Remove wrapper.h.
	(COMMON_OBS): Remove wrapper.o.
	* cli/cli-interp.c: Don't inlude wrapper.h.
	* corelow.c: Likewise.
	(core_open): Replace gdb_target_find_new_threads with
	TRY_CATCH around target_find_new_threads.
	* eval.c (fetch_subexp_value): Likewise for value_fetch_lazy.
	* gdbtypes.c (safe_parse_type): Likewise for parse_and_eval_type.
	* varobj.c (varobj_create): Likewise for parse_exp_1 and
	evaluate_expression.
	(varobj_set_value): Likewise for evaluate_expression and
	value_assign.
	(install_new_variable): Likewise for value_fetch_lazy.
	(adjust_value_for_child_access): Likewise for value_ind.
	(c_describe_child): Likewise for value_subscript and
	value_ind.
	(c_value_of_root): Likewise for evaluate_expression.
	* wrapper.c: Remove.
	* wrapper.h: Remove.
@
text
@a583 1
	corelow.o \
d694 1
a694 1
	complaints.c completer.c continuations.c corefile.c \
d861 1
a861 1
	charset.o continuations.o disasm.o dummy-frame.o dfp.o \
d1440 1
a1440 1
	core-regset.c corelow.c \
@


1.1184
log
@Copyright year update in most files of the GDB Project.

gdb/ChangeLog:

        Copyright year update in most files of the GDB Project.
@
text
@a737 1
	wrapper.c \
d805 1
a805 1
language.h nbsd-tdep.h wrapper.h solib-svr4.h \
d889 1
a889 1
	varobj.o vec.o wrapper.o \
@


1.1183
log
@gdb/
	* Makefile.in (ALL_TARGET_OBS): Remove solib-target.o.
	* configure.tgt (arm*-wince-pe, arm*-*-mingw32ce*, arm*-*-symbianelf*)
	(i[34567]86-*-dicos*, i[34567]86-*-cygwin*, i[34567]86-*-mingw32*)
	(x86_64-*-dicos*, x86_64-*-mingw*): Remove solib-target.o.
	Revert this part of:
	2012-01-02  Jan Kratochvil  <jan.kratochvil@@redhat.com>
	Build gdb directly from *.o files not using libgdb.a.
	* Makefile.in (COMMON_OBS): Remove solib-target.o.
@
text
@d1 1
a1 3
# Copyright (C) 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998,
# 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011
# Free Software Foundation, Inc.
@


1.1182
log
@gdb/
	Build gdb directly from *.o files not using libgdb.a.
	* Makefile.in (SUBDIR_TUI_OBS): Remove duplicate tui.o.
	(COMMON_OBS): Remove solib-target.o.
	(LIBGDB_OBS, libgdb.a): Move it before the gdb$(EXEEXT) rule.
	(gdb$(EXEEXT)): Replace libgdb.a with $(LIBGDB_OBS).
	(LIBGDB_OBS, libgdb.a): Move it above.
	* configure.tgt (alpha*-*-linux*, alpha*-*-freebsd*)
	(alpha*-*-kfreebsd*-gnu, alpha*-*-netbsd*, alpha*-*-knetbsd*-gnu)
	(alpha*-*-openbsd*, am33_2.0*-*-linux*, arm*-wince-pe)
	(arm*-*-mingw32ce*, arm*-*-linux*, arm*-*-netbsd*, arm*-*-knetbsd*-gnu)
	(arm*-*-openbsd*, cris*, frv-*-*, hppa*-*-hpux*, hppa*-*-linux*)
	(hppa*-*-netbsd*, hppa*-*-openbsd*, i[34567]86-*-darwin*)
	(i[34567]86-*-dicos*, i[34567]86-*-freebsd*, i[34567]86-*-kfreebsd*-gnu)
	(i[34567]86-*-netbsd*, i[34567]86-*-knetbsd*-gnu, i[34567]86-*-openbsd*)
	(i[34567]86-*-nto*, i[34567]86-*-solaris2.1[0-9]*)
	(x86_64-*-solaris2.1[0-9]*, i[34567]86-*-solaris*, i[34567]86-*-linux*)
	(i[34567]86-*-gnu*, ia64-*-linux*, m32r*-*-linux*, m68*-*-linux*)
	(m68*-*-netbsd*, m68*-*-knetbsd*-gnu, m68*-*-openbsd*)
	(microblaze*-linux-*, microblaze*-*-linux*, mips*-sgi-irix5*)
	(mips*-sgi-irix6*, mips*-*-linux*, mips*-*-netbsd*)
	(mips*-*-knetbsd*-gnu, mips64*-*-openbsd*, powerpc-*-netbsd*)
	(powerpc-*-knetbsd*-gnu, powerpc-*-openbsd*, powerpc-*-aix*, rs6000-*-*)
	(powerpc-*-linux*, powerpc64-*-linux*, powerpc*-*-*, s390*-*-*)
	(sh*-*-linux*, sh*-*-netbsdelf*, sh*-*-knetbsd*-gnu, sh*-*-openbsd*)
	(sparc-*-linux*, sparc64-*-linux*, sparc*-*-freebsd*)
	(sparc*-*-kfreebsd*-gnu, sparc-*-netbsd*, sparc-*-knetbsd*-gnu)
	(sparc64-*-netbsd*, sparc64-*-knetbsd*-gnu, sparc-*-openbsd*)
	(sparc64-*-openbsd*, sparc-*-solaris2.[0-6], sparc-*-solaris2.[0-6].*)
	(sparc-*-solaris2*, sparcv9-*-solaris2*, sparc64-*-solaris2*)
	(vax-*-netbsd*, vax-*-knetbsd*-gnu, x86_64-*-darwin*, x86_64-*-dicos*)
	(x86_64-*-linux*, x86_64-*-freebsd*, x86_64-*-kfreebsd*-gnu)
	(x86_64-*-netbsd*, x86_64-*-knetbsd*-gnu, x86_64-*-openbsd*)
	(xtensa*-*-linux*, xtensa*): Remove solib.o from gdb_target_obs.
@
text
@d580 1
a580 1
	solib-frv.o solib-irix.o solib-svr4.o solib-target.o \
d911 1
a911 1
	solib.o \
@


1.1181
log
@gdb/
	Remove the gdbtui binary.
	* .gitignore (/gdbtui): Remove.
	* Makefile.in (TUI): Remove.
	(SUBDIR_TUI_OBS): Remove tui-main.o.
	(SUBDIR_TUI_SRCS): Remove tui/tui-main.c.
	(all-tui, install-tui, uninstall-tui, $(TUI)$(EXEEXT), clean-tui)
	(tui-main.o): Remove.
	(all_object_files): Remove tui-main.o.
	* NEWS: New note for the gdbtui removal.
	* configure: Rebuilt.
	* configure.ac: No longer add all-tui, clean-tui, install-tui and
	uninstall-tui to CONFIG_ALL, CONFIG_CLEAN, CONFIG_INSTALL and
	CONFIG_UNINSTALL respectively.
	* gdb.c (main): Remove args.interpreter_p initialization.
	* main.c (captured_main): Set INTERPRETER_P directly by INTERP_CONSOLE.
	* main.h (struct captured_main_args): Remove interpreter_p.
	* tui/tui-main.c: Remove.

gdb/doc/
	Remove the gdbtui binary.
	* all-cfg.texi (GDBTUI): Remove.
	* gdb.texinfo (Mode Options): Remove the GDBTUI reference.
	(TUI): Remove GDBTUI pindex.  Remove the GDBTUI reference.
	* gdbint.texinfo (Testsuite): Replace `gdbtui' by `gdb -tui'.
@
text
@d231 1
a231 1
	tui-file.o tui.o \
d911 1
a911 1
	solib.o solib-target.o \
d1149 10
d1160 1
a1160 1
gdb$(EXEEXT): gdb.o libgdb.a $(ADD_DEPS) $(CDEPS) $(TDEPLIBS)
d1163 1
a1163 1
		-o gdb$(EXEEXT) gdb.o libgdb.a \
a1176 10
# Create a library of the gdb object files and build GDB by linking
# against that.
#
# init.o is very important.  It pulls in the rest of GDB.
LIBGDB_OBS= $(COMMON_OBS) $(TSOBS) $(ADD_FILES) init.o
libgdb.a: $(LIBGDB_OBS)
	-rm -f libgdb.a
	$(AR) q libgdb.a $(LIBGDB_OBS)
	$(RANLIB) libgdb.a

@


1.1180
log
@	Introduce gdb.FinishBreakpoint in Python

	* Makefile.in (SUBDIR_PYTHON_OBS): Add py-finishbreakpoint.o.
	(SUBDIR_PYTHON_SRCS): Add python/py-finishbreakpoint.c.
	Add build rule for this file.
	* infcmd.c (print_return_value): Split to create get_return_value.
	(get_return_value): New function based on print_return_value. Handle
	case where stop_registers are not set.
	* inferior.h (get_return_value): New prototype.
	* python/py-breakpoint.c (bppy_pending_object): Make non-static.
	(gdbpy_breakpoint_created): Set is_py_finish_bp is necessary.
	(struct breakpoint_object): Move to python-internal.h
	(BPPY_REQUIRE_VALID): Likewise.
	(BPPY_SET_REQUIRE_VALID): Likewise.
	(gdbpy_breakpoint_created): Initialize is_finish_bp.
	(gdbpy_should_stop): Add  pre/post hooks before/after calling stop
	method.
	* python/python-internal.h (breakpoint_object_type): Add as extern.
	(bppy_pending_object): Likewise.
	(typedef struct breakpoint_object) Removed.
	(struct breakpoint_object): Moved from py-breakpoint.c.
	Add field is_finish_bp.
	(BPPY_REQUIRE_VALID): Moved from py-breakpoint.c.
	(BPPY_SET_REQUIRE_VALID): Likewise.
	(frame_object_to_frame_info): New prototype.
	(gdbpy_initialize_finishbreakpoints): New prototype.
	(bpfinishpy_is_finish_bp): Likewise.
	(bpfinishpy_pre_stop_hook): Likewise.
	(bpfinishpy_post_stop_hook): Likewise.
	* python/py-finishbreakpoint.c: New file.
	* python/py-frame.c(frame_object_to_frame_info): Make non-static and
	accept PyObject instead of frame_object.
	(frapy_is_valid): Don't cast to frame_object.
	(frapy_name): Likewise.
	(frapy_type): Likewise.
	(frapy_unwind_stop_reason): Likewise.
	(frapy_pc): Likewise.
	(frapy_block): Likewise.
	(frapy_function): Likewise.
	(frapy_older): Likewise.
	(frapy_newer): Likewise.
	(frapy_find_sal): Likewise.
	(frapy_read_var): Likewise.
	(frapy_select): Likewise.
	* python/python.c (gdbpy_is_stopped_at_finish_bp): New noop function.
	(_initialize_python): Add gdbpy_initialize_finishbreakpoints.
	* python/python.h: Include breakpoint.h
	(gdbpy_is_stopped_at_finish_bp): New prototype.

doc/
	* gdb.texinfo (Finish Breakpoints in Python): New subsection.
	(Python API): Add menu entry for Finish Breakpoints.

testsuite/
	* Makefile.in (EXECUTABLES): Add py-finish-breakpoint and
	py-finish-breakpoint2
	(MISCALLANEOUS): Add py-events-shlib.so and py-events-shlib-nodebug.so
	* gdb.python/py-breakpoint.exp (mult_line): Define and use variable
	instead of line number.
	* gdb.python/py-finish-breakpoint.c: New file.
	* gdb.python/py-finish-breakpoint.exp: New file.
	* gdb.python/py-finish-breakpoint.py: New file.
	* gdb.python/py-finish-breakpoint2.cc: New file.
	* gdb.python/py-finish-breakpoint2.exp: New file.
	* gdb.python/py-finish-breakpoint2.py: New file.
@
text
@a226 3
# Name of the TUI program
TUI=gdbtui

a236 1
	tui-main.o \
a254 1
	tui/tui-main.c \
a959 2
.PHONY: all-tui
all-tui: $(TUI)$(EXEEXT)
a1037 16
.PHONY: install-tui
install-tui:
	transformed_name=`t='$(program_transform_name)'; \
			  echo $(TUI) | sed -e "$$t"` ; \
		if test "x$$transformed_name" = x; then \
		  transformed_name=$(TUI) ; \
		else \
		  true ; \
		fi ; \
		$(SHELL) $(srcdir)/../mkinstalldirs $(DESTDIR)$(bindir) ; \
		$(INSTALL_PROGRAM) $(TUI)$(EXEEXT) \
			$(DESTDIR)$(bindir)/$$transformed_name$(EXEEXT) ; \
		$(SHELL) $(srcdir)/../mkinstalldirs \
			$(DESTDIR)$(man1dir) ; \
		$(INSTALL_DATA) $(srcdir)/gdb.1 \
			$(DESTDIR)$(man1dir)/$$transformed_name.1
a1052 11
.PHONY: uninstall-tui
uninstall-tui:
	transformed_name=`t='$(program_transform_name)'; \
			  echo $(TUI) | sed -e $$t` ; \
		if test "x$$transformed_name" = x; then \
		  transformed_name=$(TUI) ; \
		else \
		  true ; \
		fi ; \
		rm -f $(DESTDIR)$(bindir)/$$transformed_name$(EXEEXT) \
		      $(DESTDIR)$(man1dir)/$$transformed_name.1
a1155 6
$(TUI)$(EXEEXT): tui-main.o libgdb.a $(ADD_DEPS) $(CDEPS) $(TDEPLIBS)
	rm -f $(TUI)$(EXEEXT)
	$(CC_LD) $(INTERNAL_LDFLAGS) $(WIN32LDAPP) \
		-o $(TUI)$(EXEEXT) tui-main.o libgdb.a \
		$(TDEPLIBS) $(TUI_LIBRARY) $(CLIBS) $(LOADLIBES)

a1215 4
.PHONY: clean-tui
clean-tui:
	rm -f $(TUI)$(EXEEXT)

a1980 4
tui-main.o: $(srcdir)/tui/tui-main.c
	$(COMPILE) $(srcdir)/tui/tui-main.c
	$(POSTCOMPILE)

d2166 1
a2166 1
all_object_files = gdb.o tui-main.o $(LIBGDB_OBS) gdbtk-main.o \
@


1.1179
log
@gdb/
	* Makefile.in (XMLFILES): Add library-list-svr4.dtd.
	* features/library-list-svr4.dtd: New file.
	* remote.c (PACKET_qXfer_libraries_svr4): New.
	(remote_protocol_features): new entry for PACKET_qXfer_libraries_svr4.
	(remote_xfer_partial): Handle TARGET_OBJECT_LIBRARIES_SVR4.
	* solib-svr4.c (struct svr4_library_list): New.
	[HAVE_LIBEXPAT]: Include xml-support.h.
	[HAVE_LIBEXPAT] (svr4_library_list_start_library)
	[HAVE_LIBEXPAT] (svr4_library_list_start_list, svr4_library_attributes)
	[HAVE_LIBEXPAT] (svr4_library_list_children)
	[HAVE_LIBEXPAT] (svr4_library_list_attributes)
	[HAVE_LIBEXPAT] (svr4_library_list_elements, svr4_parse_libraries)
	[HAVE_LIBEXPAT] (svr4_current_sos_via_xfer_libraries)
	[!HAVE_LIBEXPAT] (svr4_current_sos_via_xfer_libraries): New.
	(svr4_read_so_list): Extend the corruption message by addresses.
	(svr4_current_sos): New variable library_list, call
	svr4_current_sos_via_xfer_libraries.
	* target.h (enum target_object): New TARGET_OBJECT_LIBRARIES_SVR4.

gdb/gdbserver/
	* linux-low.c (get_phdr_phnum_from_proc_auxv, get_dynamic, get_r_debug)
	(read_one_ptr, struct link_map_offsets, linux_qxfer_libraries_svr4):
	New.
	(struct linux_target_ops): Install linux_qxfer_libraries_svr4.
	* linux-low.h (struct process_info_private): New member r_debug.
	* server.c (handle_qxfer_libraries): Call
	the_target->qxfer_libraries_svr4.
	(handle_qxfer_libraries_svr4): New function.
	(qxfer_packets): New entry "libraries-svr4".
	(handle_query): Check QXFER_LIBRARIES_SVR4 and report libraries-svr4.
	* target.h (struct target_ops): New member qxfer_libraries_svr4.
	* remote.c (remote_xfer_partial): Call add_packet_config_cmd for
	PACKET_qXfer_libraries_svr4.

gdb/doc/
	* gdb.texinfo (Requirements, Remote Protocol): Reference also `Library
	List Format for SVR4 Targets'.
	(General Query Packets): New item qXfer:libraries-svr4:read.
	(Library List Format for SVR4 Targets): New node.

gdb/testsuite/
	* gdb.base/solib-corrupted.exp: Suppress test on is_remote target.
	(corrupted list): Adjust the expectation.
@
text
@d290 1
d322 1
d2114 4
@


1.1179.2.1
log
@	Introduce gdb.FinishBreakpoint in Python

	* Makefile.in (SUBDIR_PYTHON_OBS): Add py-finishbreakpoint.o.
	(SUBDIR_PYTHON_SRCS): Add python/py-finishbreakpoint.c.
	Add build rule for this file.
	* infcmd.c (print_return_value): Split to create get_return_value.
	(get_return_value): New function based on print_return_value. Handle
	case where stop_registers are not set.
	* inferior.h (get_return_value): New prototype.
	* python/py-breakpoint.c (bppy_pending_object): Make non-static.
	(gdbpy_breakpoint_created): Set is_py_finish_bp is necessary.
	(struct breakpoint_object): Move to python-internal.h
	(BPPY_REQUIRE_VALID): Likewise.
	(BPPY_SET_REQUIRE_VALID): Likewise.
	(gdbpy_breakpoint_created): Initialize is_finish_bp.
	(gdbpy_should_stop): Add  pre/post hooks before/after calling stop
	method.
	* python/python-internal.h (breakpoint_object_type): Add as extern.
	(bppy_pending_object): Likewise.
	(typedef struct breakpoint_object) Removed.
	(struct breakpoint_object): Moved from py-breakpoint.c.
	Add field is_finish_bp.
	(BPPY_REQUIRE_VALID): Moved from py-breakpoint.c.
	(BPPY_SET_REQUIRE_VALID): Likewise.
	(frame_object_to_frame_info): New prototype.
	(gdbpy_initialize_finishbreakpoints): New prototype.
	(bpfinishpy_is_finish_bp): Likewise.
	(bpfinishpy_pre_stop_hook): Likewise.
	(bpfinishpy_post_stop_hook): Likewise.
	* python/py-finishbreakpoint.c: New file.
	* python/py-frame.c(frame_object_to_frame_info): Make non-static and
	accept PyObject instead of frame_object.
	(frapy_is_valid): Don't cast to frame_object.
	(frapy_name): Likewise.
	(frapy_type): Likewise.
	(frapy_unwind_stop_reason): Likewise.
	(frapy_pc): Likewise.
	(frapy_block): Likewise.
	(frapy_function): Likewise.
	(frapy_older): Likewise.
	(frapy_newer): Likewise.
	(frapy_find_sal): Likewise.
	(frapy_read_var): Likewise.
	(frapy_select): Likewise.
	* python/python.c (gdbpy_is_stopped_at_finish_bp): New noop function.
	(_initialize_python): Add gdbpy_initialize_finishbreakpoints.
	* python/python.h: Include breakpoint.h
	(gdbpy_is_stopped_at_finish_bp): New prototype.

doc/
	* gdb.texinfo (Finish Breakpoints in Python): New subsection.
	(Python API): Add menu entry for Finish Breakpoints.

testsuite/
	* Makefile.in (EXECUTABLES): Add py-finish-breakpoint and
	py-finish-breakpoint2
	(MISCALLANEOUS): Add py-events-shlib.so and py-events-shlib-nodebug.so
	* gdb.python/py-breakpoint.exp (mult_line): Define and use variable
	instead of line number.
	* gdb.python/py-finish-breakpoint.c: New file.
	* gdb.python/py-finish-breakpoint.exp: New file.
	* gdb.python/py-finish-breakpoint.py: New file.
	* gdb.python/py-finish-breakpoint2.cc: New file.
	* gdb.python/py-finish-breakpoint2.exp: New file.
	* gdb.python/py-finish-breakpoint2.py: New file.
@
text
@a289 1
	py-finishbreakpoint.o \
a320 1
	python/py-finishbreakpoint.c \
a2111 4
py-finishbreakpoint.o: $(srcdir)/python/py-finishbreakpoint.c
	$(COMPILE) $(PYTHON_CFLAGS) $(srcdir)/python/py-finishbreakpoint.c
	$(POSTCOMPILE)

@


1.1179.2.2
log
@Copyright year update in most files of the GDB Project.

gdb/ChangeLog:

        Copyright year update in most files of the GDB Project.
@
text
@d1 3
a3 1
# Copyright (C) 1989-2012 Free Software Foundation, Inc.
@


1.1178
log
@gdb/
	* Makefile.in: Add gdb-dlfcn.c and gdb-dlfcn.h to build system.
	* config.in: Add new #define HAVE_LIBDL.
	* configure.ac: Add check for -ldl.
	* configure: Re-generated by autoconf.
	* gdb-dlfcn.c: New file.
	* gdb-dlfcn.h: New file.
@
text
@d498 2
a499 1
	$(srcdir)/features/library-list.dtd $(srcdir)/features/osdata.dtd \
@


1.1177
log
@gdb/
	* Makefile.in: Add jit-reader.h as a header.  Have it installed in
	$(includedir)/gdb.
	* configure.ac: Generate a correct value for TARGET_PTR for
	jit-reader.h.  Tell configure to generate jit-reader.h from
	jit-reader.in.
	* configure: Re-generated by autoconf.
	* jit-reader.in: New file.
	* jit.c: Include jit-reader.h.
@
text
@d751 1
a751 1
	common/ptid.c common/buffer.c
d832 1
a832 1
common/linux-osdata.h
d919 1
a919 1
	common-utils.o buffer.o ptid.o
@


1.1176
log
@2011-10-06  Justin Lebar  <justin.lebar@@gmail.com>

	* Makefile.in: (SFILES): Add skip.c.
	(HFILES_NO_SRCDIR): Add skip.h.
	(COMMON_OBS): Add skip.o.
	* skip.h, skip.c: New.
	* breakpoint.h (set_default_breakpoint): Remove.
	(get_sal_arch): Declare.
	* breakpoint.c: Remove default_breakpoint_valid,
	default_breakpoint_address, default_breakpoint_symtab,
	default_breakpoint_line, default_breakpoint_pspace variables.
	(get_sal_arch): Make public.
	(set_default_breakpoint): Remove.
	(parse_breakpoint_sals, create_breakpoint, clear_command,
	decode_line_spec_1): Remove uses of default_breakpoint variables;
	replaced with function calls into stack.c.
	* cli/cli-cmds.h: Add cmd_list_element *skiplist.
	* cli/cli-cmds.c: Add skiplist.
	(init_cmd_lists): Initialize skiplist.
	(init_cli_cmds): Fix comment (classes of commands appear in
	alphabetical order).
	* infrun.c (handle_inferior_event): Add check that we don't step into
	a function whose pc is marked for skip.
	* stack.c: Declare last_displayed_sal_valid, last_displayed_pspace,
	last_displayed_addr, last_displayed_symtab, last_displayed_line
	variables.
	(set_last_displayed_sal): New static function.
	(print_frame_info): Switch call to set_default_breakpoint to call to
	set_last_displayed_sal.
	(clear_last_displayed_sal, last_displayed_sal_is_valid,
	get_last_displayed_pspace, get_last_displayed_addr,
	get_last_displayed_symtab, get_last_displayed_line,
	get_last_displayed_sal): New public functions.
	* stack.h (clear_last_displayed_sal, last_displayed_sal_is_valid,
	get_last_displayed_pspace, get_last_displayed_addr,
	get_last_displayed_symtab, get_last_displayed_line,
	get_last_displayed_sal): Declare.

2011-10-06  Justin Lebar <justin.lebar@@gmail.com>

	Add tests for skip command.
	* testsuite/gdb.base/skip-solib-lib.c: New
	* testsuite/gdb.base/skip-solib-main.c: New
	* testsuite/gdb.base/skip-solib.exp: New
	* testsuite/gdb.base/skip.c: New
	* testsuite/gdb.base/skip.exp: New
	* testsuite/gdb.base/skip1.c: New
	* testsuite/gdb.base/Makefile.in: Adding new files.
@
text
@d836 1
a836 1
HFILES_WITH_SRCDIR = ../bfd/bfd.h
d953 1
a953 1
generated_files = config.h observer.h observer.inc ada-lex.c \
d1038 3
a1040 1
			$(DESTDIR)$(man1dir)/$$transformed_name.1
d1268 1
a1268 1
	rm -f nm.h config.status config.h stamp-h .gdbinit
d1334 3
@


1.1175
log
@gdb/
	Fix compatibility with texinfo versions older than 4.12.
	* Makefile.in (MAKEINFO): Set to @@MAKEINFO@@.
	(MAKEINFOFLAGS, MAKEINFO_EXTRA_FLAGS, MAKEINFO_CMD): New.
	(MAKEHTMLFLAGS): Use MAKEINFO_CMD.
	(FLAGS_TO_PASS): Add MAKEINFOFLAGS and MAKEINFO_EXTRA_FLAGS.
	* configure: Regenerate.
	* configure.ac (MAKEINFO): Find it, from libiberty/configure.ac.
	(MAKEINFOFLAGS): Pre-set it to --split-size=5000000.
	(MAKEINFO_EXTRA_FLAGS): New test for -DHAVE_MAKEINFO_CLICK.

gdb/doc/
	Fix compatibility with texinfo versions older than 4.12.
	* Makefile.in (MAKEINFO): Set to @@MAKEINFO@@.
	(MAKEINFOFLAGS, MAKEINFO_EXTRA_FLAGS, MAKEINFO_CMD): New.
	(MAKEHTMLFLAGS): Use MAKEINFO_CMD.
	(gdb.info, gdbint.info, stabs.info, annotate.info): Use MAKEINFO_CMD.
	* gdb.texinfo (Tail Call Frames): Convert @@arrow{} to @@click, when possible.
	Make the conversion conditional on HAVE_MAKEINFO_CLICK, using variables
	CALLSEQ1A, CALLSEQ1B, CALLSEQ2A and CALLSEQ2B.
@
text
@d730 1
a730 1
	serial.c ser-base.c ser-unix.c \
d830 1
a830 1
gnulib/stddef.in.h inline-frame.h \
d918 1
a918 1
	jit.o progspace.o \
@


1.1174
log
@gdb/
	Recognize virtual tail call frames.
	* Makefile.in (SFILES): Add dwarf2-frame-tailcall.c.
	(HFILES_NO_SRCDIR): Add dwarf2-frame-tailcall.h.
	(COMMON_OBS): Add dwarf2-frame-tailcall.o.
	* dwarf2-frame-tailcall.c: New file.
	* dwarf2-frame-tailcall.h: New file.
	* dwarf2-frame.c: Include dwarf2-frame-tailcall.h.
	(execute_cfa_program): New function comment.  Return INSN_PTR.  Reset
	REGS.PREV only after CIE execution.
	(struct dwarf2_frame_cache): New field tailcall_cache.
	(dwarf2_frame_cache): New variables entry_pc, entry_cfa_sp_offset,
	entry_cfa_sp_offset_p and instr.  Execute FDE instructions in two
	parts, try to find entry_cfa_sp_offset.  Call
	dwarf2_tailcall_sniffer_first.
	(dwarf2_frame_prev_register): Call dwarf2_tailcall_prev_register_first
	when appropriate.
	(dwarf2_frame_dealloc_cache): New function.
	(dwarf2_frame_sniffer): Preinitialize cache by dwarf2_frame_cache.
	(dwarf2_frame_unwind): Install dwarf2_frame_dealloc_cache.
	(dwarf2_signal_frame_unwind): Do not install dwarf2_frame_dealloc_cache.
	(dwarf2_append_unwinders): Add dwarf2_tailcall_frame_unwind.
	(dwarf2_frame_cfa): Support also dwarf2_tailcall_frame_unwind.
	* dwarf2loc.c (func_addr_to_tail_call_list)
	(tailcall_dump, call_sitep, VEC (call_sitep), chain_candidate)
	(call_site_find_chain_1, call_site_find_chain): New.
	* dwarf2loc.h (struct call_site_chain): New.
	(call_site_find_chain): New declaration.
	* frame.c (get_frame_address_in_block): Support also TAILCALL_FRAME.
	* frame.h (enum frame_type): New entry TAILCALL_FRAME.
	* python/py-frame.c (gdbpy_initialize_frames): Add TAILCALL_FRAME.
	* stack.c (frame_info): Support also TAILCALL_FRAME.

gdb/doc/
	Recognize virtual tail call frames.
	* gdb.texinfo (Optimized Code): Add reference to Tail Call Frames.
	(Tail Call Frames): New node.
	(Frames In Python): Add gdb.TAILCALL_FRAME.

gdb/testsuite/
	Recognize virtual tail call frames.
	* gdb.arch/amd64-entry-value.cc (c, a, b, amb_z, amb_y, amb_x, amb)
	(amb_b, amb_a): New.
	(main): Call a and b.
	* gdb.arch/amd64-entry-value.exp (tailcall: breakhere, tailcall: bt)
	(tailcall: p i, tailcall: p j, set $sp0=$sp, up, p $sp0 == $sp, frame 3)
	(p $sp0 + sizeof (void *) == $sp, ambiguous: breakhere, ambiguous: bt):
	New tests.
@
text
@d112 4
a115 1
MAKEINFO=makeinfo
d117 1
a117 1
MAKEHTML = $(MAKEINFO) --html
d620 2
@


1.1173
log
@	Allow Python notification of new object-file loadings.

	* Makefile.in (SUBDIR_PYTHON_SRCS): Add py-newobjfilevent.c.
	(SUBDIR_PYTHON_OBS): Add py-newobjfileevent.o.
	Add build rule for this file.
	* python/py-event.h (emit_new_objfile_event): New prototype.
	(newobjfile): New Python event emitter.
	* python/py-evts.c (gdbpy_initialize_py_events): Add new_objfile to
	Python event registry.
	* python/py-inferior.c: Include objfiles.h
	(python_new_objfile): New function.
	(gdbpy_initialize_inferior): Add python_new_objfile to the new objfile
	observers.
	* python/py-newobjfileevent.c: New file.
	* python-internal.h (gdbpy_initialize_new_objfile_event): New
	prototype.
	* python/python.c (_initialize_python): Add
	gdbpy_initialize_new_objfile_event call.
	* NEWS: Add item for new Python event "gdb.newobjfile"

2011-10-06  Kevin Pouget  <kevin.pouget@@st.com>

	Allow Python notification of new object-file loadings.
	* gdb.texinfo (Events In Python): Document `gdb.NewObjFileEvent'
	event type.

2011-10-06  Kevin Pouget  <kevin.pouget@@st.com>

	Allow Python notification of new object-file loadings.
	* gdb.python/py-events.exp: Test newobjfile event.
	* gdb.python/py-events.py: Register newobjfile callback.
	* gdb.python/py-events.c: Add call to shared library
	* gdb.python/py-events-shlib.c: New file.
@
text
@d700 1
d777 1
a777 1
gdbthread.h dwarf2-frame.h nbsd-nat.h dcache.h \
d885 1
a885 1
	dwarf2expr.o dwarf2loc.o dwarf2-frame.o \
@


1.1172
log
@	gdb/
	* Makefile.in (ALL_TARGET_OBS): Add tic6x-tdep.o tic6x-linux-tdep.o
	and solib-dsbt.o.
@
text
@d292 1
d323 1
d2120 4
@


1.1171
log
@Move common linux procfs code to common/
@
text
@d568 1
d578 1
a578 1
	solib-som.o solib-pa64.o solib-darwin.o \
@


1.1170
log
@	* Makefile.in (HFILES_NO_SRCDIR): Add 'common' prefix for
	gdb_assert.h, gdb_locale.h, gdb_dirent.h.
@
text
@d1962 4
@


1.1169
log
@2011-07-22  Kwok Cheung Yeung  <kcy@@codesourcery.com>

gdb/
	* defs.h: Add guard against inclusion in gdbserver.
	(struct ptid, ptid_t): Move to common/ptid.h.
	(xfree, xzalloc, xasprintf, xvasprintf, xstrprintf, xstrvprintf,
	xsnprintf, internal_error): Move to common/common-utils.h.
	(nomem): Delete.
	* gdb_assert.h: Move into common/ sub-directory.
	* gdb_locale.h: Ditto.
	* gdb_dirent.h: Ditto.
	* inferior.h (minus_one_ptid, null_ptid, ptid_build, pid_to_ptid,
	ptid_get_pid, ptid_get_lwp, ptid_get_tid, ptid_equal, ptid_is_pid):
	Move into common/ptid.h.
	* xml-support.c (xml_escape_text): Move into common/xml-utils.c.
	(gdb_xml_create_parser_and_cleanup_1, xml_fetch_context_from_file):
	Change nomem to malloc_failure.
	* xml-support.h (xml_escape_text): Move into common/xml-utils.h.
	* utils.c (nomem): Rename to malloc_failure.
	(xmalloc, xzalloc, xrealloc, xcalloc, xfree, xstrprintf, xasprintf,
	xvasprintf, xstrvprintf, xsnprintf): Move to common/common-utils.c.
	(gdb_buildargv): Change nomem to malloc_failure.
	* infrun.c (null_ptid, minus_one_ptid, ptid_build, pid_to_ptid,
	ptid_get_pid, ptid_get_lwp, ptid_get_tid, ptid_equal,
	ptid_is_pid): Move into common/ptid.c.
	(initialize_infrun): Delete initialization of null_ptid and
	minus_one_ptid.
	* linux-nat.c (linux_nat_xfer_osdata): Defer to
	linux_common_xfer_osdata.
	* Makefile.in (SFILES): Add common/common-utils.c, common/xml-utils.c,
	common/ptid.c and common/buffer.c.
	(HFILES_NO_SRCDIR): Add common/common-utils.h, common/xml-utils.h,
	common/ptid.h, common/buffer.h and common/linux-osdata.h.
	(COMMON_OBS): Add xml-utils.o, common-utils.o, buffer.o and ptid.o.
	(common-utils.o, xml-utils.o, ptid.o, buffer.o, linux-osdata.o): New
	rules.
	* common/gdb_assert.h: New.
	* common/gdb_dirent.h: New.
	* common/gdb_locale.h: New.
	* common/buffer.c: New.
	* common/buffer.h: New.
	* common/ptid.c: New.
	* common/ptid.h: New.
	* common/xml-utils.c: New.
	* common/xml-utils.h: New.
	* common/common-utils.c: New.
	* common/common-utils.h: New.
	* common/linux-osdata.c: New.
	* common/linux-osdata.h: New.
	* config/alpha/alpha-linux.mh (NATDEPFILES): Add linux-osdata.o.
	* config/arm/linux.mh (NATDEPFILES): Ditto.
	* config/i386/linux.mh (NATDEPFILES): Ditto.
	* config/i386/linux64.mh (NATDEPFILES): Ditto.
	* config/ia64/linux.mh (NATDEPFILES): Ditto.
	* config/m32r/linux.mh (NATDEPFILES): Ditto.
	* config/m68k/linux.mh (NATDEPFILES): Ditto.
	* config/mips/linux.mh (NATDEPFILES): Ditto.
	* config/pa/linux.mh (NATDEPFILES): Ditto.
	* config/powerpc/linux.mh (NATDEPFILES): Ditto.
	* config/powerpc/ppc64-linux.mh (NATDEPFILES): Ditto.
	* config/s390/s390.mh (NATDEPFILES): Ditto.
	* config/sparc/linux.mh (NATDEPFILES): Ditto.
	* config/sparc/linux64.mh (NATDEPFILES): Ditto.
	* config/xtensa/linux.mh (NATDEPFILES): Ditto.

gdbserver/
	* linux-low.c (compare_ints, unique, list_threads, show_process,
	linux_core_of_thread): Delete.
	(linux_target_ops): Change linux_core_of_thread to
	linux_common_core_of_thread.
	(linux_qxfer_osdata): Defer to linux_common_xfer_osdata.
	* utils.c (malloc_failure): Change type of argument.
	(xmalloc, xrealloc, xcalloc, xsnprintf): Delete.
	* Makefile.in (SFILES): Add common/common-utils.c, common/xml-utils.c,
	common/linux-osdata.c, common/ptid.c and common/buffer.c.
	(OBS): Add xml-utils.o, common-utils.o, ptid.o and buffer.o.
	(IPA_OBJS): Add common-utils-ipa.o.
	(ptid_h, linux_osdata_h): New macros.
	(server_h): Add common/common-utils.h, common/xml-utils.h,
	common/buffer.h, common/gdb_assert.h, common/gdb_locale.h and
	common/ptid.h.
	(common-utils-ipa.o, common-utils.o, xml-utils.o, linux-osdata.o,
	ptid.o, buffer.o): New rules.
	(linux-low.o): Add common/linux-osdata.h as a dependency.
	* configure.srv (srv_tgtobj): Add linux-osdata.o to Linux targets.
	* configure.ac: Add AC_HEADER_DIRENT check.
	* config.in: Regenerate.
	* configure: Regenerate.
	* remote-utils.c (xml_escape_text): Delete.
	(buffer_grow, buffer_free, buffer_init, buffer_finish,
	buffer_xml_printf): Move to common/buffer.c.
	* server.c (main): Remove call to initialize_inferiors.
	* server.h (struct ptid, ptid_t, minus_one_ptid, null_ptid,
	ptid_build, pid_to_ptid, ptid_get_pid, ptid_get_lwp, ptid_get_tid,
	ptid_equal, ptid_is_pid, initialize_inferiors, xml_escape_text,
	internal_error, gdb_assert, gdb_assert_fail): Delete.
	(struct buffer, buffer_grow, buffer_free, buffer_init, buffer_finish,
	buffer_xml_printf, buffer_grow_str, buffer_grow_str0): Move to
	common/buffer.h.
	* inferiors.c (null_ptid, minus_one_ptid, ptid_build, pid_to_ptid,
	ptid_get_pid, ptid_get_lwp, ptid_get_tid, ptid_equal, ptid_is_pid,
	initialize_inferiors): Delete.
@
text
@d793 1
a793 1
gdb_wait.h gdb_assert.h solib.h ppc-tdep.h cp-support.h glibc-tdep.h \
d800 1
a800 1
gdb_locale.h gdb_dirent.h arch-utils.h trad-frame.h gnu-nat.h \
@


1.1168
log
@	* Makefile.in (SUBDIR_MI_CFLAGS): Don't add -DMI_OUT=1.
@
text
@d740 3
a742 1
	regset.c sol-thread.c windows-termcap.c
d821 3
a823 1
gnulib/stddef.in.h inline-frame.h
d905 2
a906 1
	prologue-value.o memory-map.o memrange.o xml-support.o xml-syscall.o \
d909 2
a910 1
	jit.o progspace.o
d1942 20
@


1.1167
log
@	* Makefile.in (HFILES_NO_SRCDIR): Add "common/" to
	gdb_thread_db.h.  Move all common/ entries to be together.
	(TAGS): Don't depend on DEPFILES.
@
text
@d218 1
a218 2
SUBDIR_MI_CFLAGS= \
	-DMI_OUT=1
@


1.1166
log
@2011-05-27  Pedro Alves  <pedro@@codesourcery.com>

	gdb/
	* utils.c (struct continuation, add_continuation)
	(add_inferior_continuation)
	(do_all_inferior_continuations, discard_all_inferior_continuations)
	(restore_thread_cleanup, do_all_continuations_ptid)
	(do_all_continuations_thread_callback)
	(do_all_continuations_thread, do_all_continuations)
	(discard_all_continuations_thread_callback)
	(discard_all_continuations_thread, discard_all_continuations)
	(add_intermediate_continuation)
	(do_all_intermediate_continuations_thread_callback)
	(do_all_intermediate_continuations_thread)
	(do_all_intermediate_continuations)
	(discard_all_intermediate_continuations_thread_callback)
	(discard_all_intermediate_continuations_thread)
	(discard_all_intermediate_continuations): Move to ...
	* continuations.c: ... this new file, and adjust to no longer
	implement continuations on top of cleanups.
	* Makefile.in (SFILES): Add continuations.c.
	(COMMON_OBS): Add continuations.o.
@
text
@d759 4
a762 1
osf-share/cma_sched.h proc-utils.h arm-tdep.h ax-gdb.h ppcnbsd-tdep.h \
d774 1
a774 1
gdbarch.h bsd-uthread.h gdb_thread_db.h gdb_stat.h memory-map.h	memrange.h \
d812 1
a812 1
amd64-darwin-tdep.h charset-list.h common/gdb_signals.h common/i386-xstate.h \
d1215 1
a1215 1
TAGS: $(DEPFILES) $(TAGFILES_NO_SRCDIR) $(TAGFILES_WITH_SRCDIR)
@


1.1165
log
@2011-04-11  Gary Benson  <gbenson@@redhat.com>

        Fix failure with --enable-maintainer-mode.
        * Makefile.in (aclocal_m4_deps): Updated gnulib dependencies.
@
text
@d692 1
a692 1
	complaints.c completer.c corefile.c \
d852 1
a852 1
	charset.o disasm.o dummy-frame.o dfp.o \
@


1.1164
log
@	* Makefile.in (SFILES): Add missing C sources.
	(HFILES_NO_SRCDIR): Remove gdbserver subdirectory headers.
	Add missing headers.
@
text
@d1330 1
d1338 4
a1341 1
	gnulib/m4/onceonly_2_57.m4 \
d1344 4
a1347 1
	gnulib/m4/wchar.m4 \
@


1.1163
log
@gdb/
2011-03-09  Yao Qi  <yao@@codesourcery.com>

	Revert:
	2011-02-11  Yao Qi  <yao@@codesourcery.com>

	* common/Makefile.in: Add copyright header.

	2011-02-11  Yao Qi  <yao@@codesourcery.com>

	* Makefile.in: Remove signals.o from COMMON_OBS.  Link
	libcommon.a.
	* configure.ac: Add common to sub dir.
	* configure: Regenerate.

gdb/gdbserver/
2011-03-09  Yao Qi  <yao@@codesourcery.com>

	Revert:
	2011-03-04  Yao Qi  <yao@@codesourcery.com>

	* Makefile.in: Remove GNU make feature --directory.

	2011-03-05  Yao Qi  <yao@@codesourcery.com>

	* Makefile.in (CLEANDIRS, REQUIRED_SUBDIRS): New variable.
	(subdir_do): New make target.  Copied from gdb/Makefile.
	(maintainer-clean, realclean, distclean, clean): Call corresponding
	make targets in common/Makefile.

	2011-02-11  Yao Qi  <yao@@codesourcery.com>

	* configure.ac: Call AC_PROG_RANLIB.
	* Makefile.in: Remove signals.o from OBS.  Link libcommon.a.
	* configure: Regenerate.
@
text
@d238 1
d245 3
a247 1
	tui-winsource.o
d257 1
d267 1
d740 2
d768 2
a769 5
gnulib/stdint.in.h remote.h gdb.h sparc-nat.h gdbserver/win32-low.h \
gdbserver/i387-fp.h gdbserver/server.h gdbserver/terminal.h \
gdbserver/mem-break.h gdbserver/wincecompat.h gdbserver/target.h \
gdbserver/linux-low.h gdbserver/gdb_proc_service.h \
gdbserver/regcache.h gdbthread.h dwarf2-frame.h nbsd-nat.h dcache.h \
d808 10
a817 1
psymtab.h psympriv.h progspace.h bfin-tdep.h ia64-hpux-tdep.h
@


1.1162
log
@2011-03-07  Yao Qi  <yao@@codesourcery.com>

	* Makefile.in (aclocal_m4_deps): Remove gnulib/m4/memcmp.m4.
@
text
@a90 2
PWD_COMMAND = $${PWDCMD-pwd}

a142 4
LIBCOMMON_DIR = common
LIBCOMMON = $(LIBCOMMON_DIR)/libcommon.a
LIBCOMMON_SRC = $(srcdir)/$(LIBCOMMON_DIR)

d470 1
a470 1
	$(LIBIBERTY) $(WIN32LIBS) $(LIBGNU) $(LIBCOMMON)
d472 1
a472 2
	$(OPCODES) $(INTL_DEPS) $(LIBIBERTY) $(CONFIG_DEPS) $(LIBGNU) \
        $(LIBCOMMON)
d857 1
d900 1
a900 1
REQUIRED_SUBDIRS = doc | testsuite | gnulib | data-directory | common
a1166 4
# 
$(LIBCOMMON): $(LIBCOMMON_DIR)/Makefile
	@@$(MAKE) $(FLAGS_TO_PASS) DO=all DODIRS=common subdir_do

d1905 9
@


1.1161
log
@2011-03-03  Yao Qi  <yao@@codesourcery.com>

	* Makefile.in (configure-common): Remove.  Let Makefile
	in dir common to rebuild itself.
	(common/Makefile): Likewise.
@
text
@a1332 1
	gnulib/m4/memcmp.m4 \
@


1.1160
log
@2011-02-24  Michael Snyder  <msnyder@@vmware.com>

	* Makefile.in (clean): Make clean should remove generated files
	observer.h and observer.inc.
@
text
@a1176 16
configure-common: 
	@@: $(MAKE); $(unstage)
	@@r=`${PWD_COMMAND}`; export r; \
	s=`cd $(srcdir); ${PWD_COMMAND}`; export s; \
        test ! -f common/Makefile || exit 0; \
        $(SHELL) $(srcdir)/../mkinstalldirs common ; \
        $(HOST_EXPORTS)  \
        echo Configuring in common; \
        cd "common" || exit 1; \
        commondir="$$s/common"; \
        srcdiroption="--srcdir=$${commondir}"; \
	$(SHELL) $${commondir}/configure --enable-gdbserver=no \
          $(HOST_CONFIGARGS) --build=${build_alias} --host=${host_alias} \
          --target=${target_alias} $${srcdiroption}  \
          || exit 1

a1311 7
common/Makefile: configure-common common/Makefile.in config.status @@frags@@
        CONFIG_FILES="common/Makefile" \
          CONFIG_COMMANDS="depfiles" \
          CONFIG_HEADERS= \
          CONFIG_LINKS= \
          $(SHELL) config.status

@


1.1159
log
@Revert the following change (not approved yet):

	2011-02-21  Hui Zhu  <teawater@@gmail.com>
	* Makefile.in (HFILES_NO_SRCDIR): Add printcmd.h.
	* ax-gdb.c (gen_printf_expr_callback): New function.
	* ax-gdb.h (gen_printf_expr_callback): Forward declare.
	* ax-general.c (ax_memcpy): New function.
	(ax_print): Handle "printf".
	(ax_reqs): Ditto.
	* ax.h (ax_memcpy): Forward declare.
	* common/ax.def (invalid2): Removed.
	(printf): New entry.
	* printcmd.c (printcmd.h): New include.
	(string_printf): New function.
	(ui_printf): Removed.
	(printf_command): Remove static.  Call string_printf.
	(eval_command): Call string_printf.
	* printcmd.h: New file.
	* tracepoint.c (validate_actionline,
	encode_actions_1): handle printf_command.
@
text
@d1240 1
a1240 1
	rm -f init.c version.c
@


1.1158
log
@Delete Makefile.in:INSTALLED_LIBS (unused)

gdb/ChangeLog:

        * Makefile.in (INSTALLED_LIBS): Delete.  Update comment.
@
text
@d811 1
a811 1
psymtab.h psympriv.h progspace.h bfin-tdep.h ia64-hpux-tdep.h printcmd.h
@


1.1157
log
@	* reverse.c: Include cli-utils.h.
	* printcmd.c: Include cli-utils.h.
	(string_printf): Use skip_spaces.
	* cli/cli-utils.h: New file.
	* cli/cli-utils.c: New file.
	* cli/cli-dump.h (skip_spaces): Move to cli-utils.h.
	* cli/cli-dump.c (skip_spaces): Move to cli-utils.c.
	* breakpoint.h (get_number, get_number_or_range): Move to
	cli-utils.h.
	* breakpoint.c: Include cli-utils.h.
	(get_number_trailer, get_number, get_number_or_range)
	(ep_skip_leading_whitespace): Move to cli-utils.c.
	(create_breakpoint_sal, find_condition_and_thread)
	(decode_static_tracepoint_spec, watch_command_1)
	(watch_maybe_just_location, ep_parse_optional_if_clause)
	(catch_fork_command_1, catch_exec_command_1)
	(catch_syscall_command_1): Use skip_spaces, skip_to_space.
	* Makefile.in (SUBDIR_CLI_OBS): Add cli-utils.o.
	(SUBDIR_CLI_SRCS): Add cli-utils.c.
	(HFILES_NO_SRCDIR): Add cli-utils.h.
	(cli-utils.o): New target.
@
text
@d471 1
a471 1
# {X,T}M_CLIBS, defined in *config files, have host- and target-dependent libs.
a472 5
# If you have the Cygnus libraries installed,
# you can use 'CLIBS=$(INSTALLED_LIBS)' 'CDEPS='
INSTALLED_LIBS=-lbfd -lreadline -lopcodes -liberty -ldecnumber \
	$(XM_CLIBS) $(NAT_CLIBS) $(GDBTKLIBS) @@LIBS@@ @@PYTHON_LIBS@@ \
	-lintl -liberty $(LIBGNU)
@


1.1156
log
@2011-02-21  Hui Zhu  <teawater@@gmail.com>

	* Makefile.in (HFILES_NO_SRCDIR): Add printcmd.h.
	* ax-gdb.c (gen_printf_expr_callback): New function.
	* ax-gdb.h (gen_printf_expr_callback): Forward declare.
	* ax-general.c (ax_memcpy): New function.
	(ax_print): Handle "printf".
	(ax_reqs): Ditto.
	* ax.h (ax_memcpy): Forward declare.
	* common/ax.def (invalid2): Removed.
	(printf): New entry.
	* printcmd.c (printcmd.h): New include.
	(string_printf): New function.
	(ui_printf): Removed.
	(printf_command): Remove static.  Call string_printf.
	(eval_command): Call string_printf.
	* printcmd.h: New file.
	* tracepoint.c (validate_actionline,
	encode_actions_1): handle printf_command.
@
text
@d196 1
a196 1
	cli-interp.o
d201 1
a201 1
	cli/cli-interp.c
d770 1
a770 1
cli/cli-decode.h cli/cli-cmds.h cli/cli-dump.h \
d1759 4
@


1.1155
log
@	* Makefile.in (HFILES_NO_SRCDIR): Don't mention ada-operator.inc.
@
text
@d816 1
a816 1
psymtab.h psympriv.h progspace.h bfin-tdep.h ia64-hpux-tdep.h
@


1.1154
log
@gdb/
	* Makefile.in (ACLOCAL_AMFLAGS): Add `-I ../config'.
	* aclocal.m4: Regenerated with aclocal-1.11.1.
	* common/configure: Regenerate with autoconf-2.64.

gdb/gdbserver/
	* aclocal.m4: Regenerated with aclocal-1.11.1.
@
text
@d815 1
a815 1
gdb_usleep.h jit.h xml-syscall.h ada-operator.inc microblaze-tdep.h \
@


1.1153
log
@2011-02-14  Pedro Alves  <pedro@@codesourcery.com>

	gdb/
	* Makefile.in (SFILES): Add memrange.c.
	(HFILES_NO_SRCDIR): Add memrange.h.
	(COMMON_OBS): Add memrange.o.
	* memrange.c: New file.
	* memrange.h: New file.
	* tracepoint.c: Include memrange.h.
	(struct mem_range): Delete.
	(mem_range_s): Delete.
	(traceframe_available_memory): New function.
	* tracepoint.h (traceframe_available_memory): Declare.
@
text
@d1352 1
a1352 1
ACLOCAL_AMFLAGS = -I gnulib/m4
@


1.1152
log
@	gdb/
	* target.h (struct traceframe_info): Forward declare.
	(enum target_object): Add TARGET_OBJECT_TRACEFRAME_INFO.
	(struct target_ops) <to_traceframe_info>: New field.
	(target_traceframe_info): New.
	* target.c (update_current_target): Inherit and default
	to_traceframe_info.
	* remote.c (PACKET_qXfer_traceframe_info): New.
	(remote_protocol_features): Register qXfer:traceframe-info:read.
	(remote_xfer_partial): Handle TARGET_OBJECT_TRACEFRAME_INFO.
	(remote_traceframe_info): New.
	(init_remote_ops): Install it.
	(_initialize_remote): Install "set/show remote traceframe-info"
	commands.
	* tracepoint.h (parse_traceframe_info): Declare.
	* tracepoint.c (struct mem_range): New.
	(mem_range_s): New typedef.
	(struct traceframe_info): New.
	(traceframe_info): New global.
	(free_traceframe_info): New function.
	(clear_traceframe_info): New function.
	(start_tracing, tfind_1, set_traceframe_number): Clear traceframe
	info.
	(build_traceframe_info): New function.
	(tfile_traceframe_info): New function.
	(init_tfile_ops): Install tfile_traceframe_info.
	(traceframe_info_start_memory, free_result): New functions.
	(memory_attributes, traceframe_info_elements): New globals.
	(parse_traceframe_info, get_traceframe_info): New functions.
	* features/traceframe-info.dtd: New file.
	* Makefile.in (XMLFILES): Add traceframe-info.dtd.

	gdb/gdbserver/
	* server.c (handle_qxfer_traceframe_info): New.
	(qxfer_packets): Register "traceframe-info".
	(handle_query): Report support for qXfer:traceframe-info:read+.
	* tracepoint.c (match_blocktype): New.
	(traceframe_find_block_type): Rename to ...
	(traceframe_walk_blocks): ... this.  Add callback filter argument,
	and use it.
	(traceframe_find_block_type): New, reimplemented on top of
	traceframe_walk_blocks.
	(build_traceframe_info_xml): New.
	(traceframe_read_info): New.
	* server.h (traceframe_read_info): Declare.

	gdb/doc/
	* gdb.texinfo (Remote Configuration): Mention set/show remote
	traceframe-info.
	(Tools/Packages Optional for Building GDB): Mention that expat is
	used for traceframe info.
	(Remote Protocol) <Menu>: Add "Traceframe Info Format".
	(General Query Packets) <qSupported>: Describe the
	qXfer:traceframe-info:read feature.
	(qXfer::read): Describe qXfer:traceframe-info:read.
	(Traceframe Info Format): New section.
@
text
@d720 1
a720 1
	mi/mi-common.c \
d779 1
a779 1
gdbarch.h bsd-uthread.h gdb_thread_db.h gdb_stat.h memory-map.h	\
d897 1
a897 1
	prologue-value.o memory-map.o xml-support.o xml-syscall.o \
@


1.1151
log
@2011-02-12  Yao Qi  <yao@@codesourcery.com>

        * Makefile.in (CLEANDIRS): Remove duplicated common dir.
@
text
@d502 1
a502 1
	$(srcdir)/features/threads.dtd
@


1.1150
log
@2011-02-11  Yao Qi  <yao@@codesourcery.com>

	* Makefile.in: Remove signals.o from COMMON_OBS.  Link
	libcommon.a.
	* configure.ac: Add common to sub dir.
	* configure: Regenerate.

common/
2011-02-11  Yao Qi  <yao@@codesourcery.com>

	Build libcommon.a.

	* Makefile.in: New.
	* configure.ac: New.
	* aclocal.m4: New.
	* configure: Generate.

gdbserver/
2011-02-11  Yao Qi  <yao@@codesourcery.com>

	* configure.ac: Call AC_PROG_RANLIB.
	* Makefile.in: Remove signals.o from OBS.  Link libcommon.a.
	* configure: Regenerate.
@
text
@d905 1
a905 1
CLEANDIRS = $(SUBDIRS) gnulib common
@


1.1149
log
@Add Python support for GDB events.

2011-02-04  Sami Wagiaalla  <swagiaal@@redhat.com>

	* gdb.python/py-evthreads.c: New file.
	* gdb.python/py-evthreads.exp: New file.
	* gdb.python/py-events.py: New file.
	* gdb.python/py-events.exp: New file.
	* gdb.python/py-events.c: New file.

2011-02-04  Sami Wagiaalla  <swagiaal@@redhat.com>
                Oguz Kayral <oguzkayral@@gmail.com>

	* python/py-inferior.c (python_on_normal_stop): New function.
	(python_on_resume): New function.
	(python_inferior_exit): New function.
	(gdbpy_initialize_inferior): Add normal_stop, target_resumed, and
	inferior_exit observers.
	* python/py-evtregistry.c: New file.
	* python/py-threadevent.c : New file.
	* python/py-event.c: New file.
	* python/py-evts.c: New file.
	* python/py-continueevent.c: New file.
	* python/py-bpevent.c: New file.
	* python/py-signalevent.c: New file.
	* python/py-exetiedevent.c: New file.
	* python/py-breakpoint.c (gdbpy_breakpoint_from_bpstats): New function.
	Move struct breakpoint_object from here...
	* python/python-internal.h: ... to here.
	* python/py-event.h: New file.
	* python/py-events.h: New file.
	* Makefile.in (SUBDIR_PYTHON_OBS): Add py-breakpointstopevent.o,
	py-continueevent.o, py-event.o, py-eventregistry.o, py-events.o,
	py-exitedevent.o, py-signalstopevent.o, and py-stopevent.o.
	(SUBDIR_PYTHON_SRCS): Add py-breakpointstopevent.c,
	py-continueevent.c, py-event.c, py-eventregistry.c, py-events.c,
	py-exitedevent.c, py-signalstopevent.c, and py-stopevent.c.
	Add build rules for all the above.
@
text
@d91 2
d145 4
a339 1

d481 1
a481 1
	$(LIBIBERTY) $(WIN32LIBS) $(LIBGNU)
d483 2
a484 1
	$(OPCODES) $(INTL_DEPS) $(LIBIBERTY) $(CONFIG_DEPS) $(LIBGNU)
a868 1
	signals.o \
d905 1
a905 1
CLEANDIRS = $(SUBDIRS) gnulib
d911 1
a911 1
REQUIRED_SUBDIRS = doc | testsuite | gnulib | data-directory
d1178 20
d1333 7
a1940 10
# gdb/common/ dependencies
#
# Need to explicitly specify the compile rule as make will do nothing
# or try to compile the object file into the sub-directory.

signals.o: $(srcdir)/common/signals.c
	$(COMPILE) $(srcdir)/common/signals.c
	$(POSTCOMPILE)

#
@


1.1148
log
@do not use python<version> subdir when including Python .h file

This is preparation work for being able to build GDB with Python
support on MinGW.

So far, the "python<version>" subdirectory needs to be specified
when including a Python header file.  In order to do that, we have
some special configury that tweaks the include path returned by
python-config.py such that the use of the subdirectory in the include
is necessary.  This was done in order to protect ourselves from
possible filename conflicts, since some of the filenames chosen by
Python were a little generic.

The problem is that this cannot work with a standard Python install
on MinGW systems.  On such systems, the .h files are located in
<python_prefix>/include.  So, in preparation for allowing us to build
GDB on MinGW with Python support enabled, this patch changes the
requirement to provide the "python<version>" subdirectory in the
include directive.

The positive consequence is that we no longer need to have a set
of #include directives for each version of Python, since the include
directive is now the same for all versions of Python.  However, the
downside is that we are losing the level of protection we were trying
to achieve by forcing the subdirectory in the include directive.
In order to reduce a bit the consequences of a possible conflict,
this patch also changes the location where the -I/path/to/python
switch goes, to be last in the list (suggested by Doug Evans).

One last change is the fact that we are now including Python.h
and all other Python include headers using angle brackets rather
than double-quotes.  This fixes a problem on case-insensitive
systems where #include "Python.h" causes our gdb/python/python.h
header to be included instead of Python's <Python.h> header.

gdb/ChangeLog:

	* configure.ac: Remove fallback behavior for building
	against Python.  Remove tweaking of Python include path.
	Add PYTHON_CPPFLAGS and PYTHON_LIBS substitution.
	(AC_TRY_LIBPYTHON):  Adjust program used in linking test.
	If link is successful, set PYTHON_CPPFLAGS and PYTHON_LIBS.
	Always restore CPPFLAGS and LIBS after linking test.
	* configure: Regenerated.
	* Makefile.in (INTERNAL_CPPFLAGS): Add @@PYTHON_CPPFLAGS@@.
	(INSTALLED_LIBS, CLIBS): Add @@PYTHON_LIBS@@.
	* python/python-internal.h: Adjust includes of Python .h files.
@
text
@d275 1
d278 5
d292 2
d296 1
d300 1
d305 1
d308 5
d322 2
d326 1
d2017 4
d2029 20
d2085 8
d2101 4
@


1.1147
log
@	* configure.tgt (mips*-*-elf): New; just like mips*-*-*, but
	with remote-mips.o added to gdb_target_obs.
	* Makefile.in (ALL_TARGET_OBS): Add remote-mips.o.
@
text
@d411 7
a417 2
# Set by configure, for e.g. expat.
INTERNAL_CPPFLAGS = @@CPPFLAGS@@
d452 1
a452 1
	$(XM_CLIBS) $(NAT_CLIBS) $(GDBTKLIBS) @@LIBS@@ \
d455 1
a455 1
	$(XM_CLIBS) $(NAT_CLIBS) $(GDBTKLIBS) @@LIBS@@ \
@


1.1146
log
@	* Makefile.in (hpux-thread.o): Delete rule.
	* configure.ac: Don't check for HPUX DCE threads support.
	* configure, config.in: Regenerate.
	* hppa-hpux-nat.c (child_suppress_run): Delete.
	(hppa_hpux_child_can_run): Delete.
	(_initialize_hppa_hpux_nat): Don't override to_can_run.
	* hpux-thread.c: Delete.
@
text
@d557 1
a557 1
	remote-m32r-sdi.o \
@


1.1145
log
@port GDB to ia64-hpux (native).

ChangeLog:

        * configure.ac: Remove readline, mmalloc, and gdb from noconfigdirs
        for ia64-hpux.
        * configure: Regenerate.

gdb/ChangeLog:

        * config/ia64/hpux.mh, ia64-hpux-nat.c, ia64-hpux-tdep.c,
        ia64-hpux-tdep.h, solib-ia64-hpux.c, solib-ia64-hpux.h: New files.

        * configure.host: Add handling for ia64-hpux hosts.  Add associated
        floatformats.
        * configure.tgt: Add handling for ia64-hpux targets.
        * Makefile.in (ALL_64_TARGET_OBS): Add ia64-hpux-tdep.o.
        (HFILES_NO_SRCDIR): Add ia64-hpux-tdep.h.
        (ALLDEPFILES): Add ia64-hpux-nat.c ia64-hpux-tdep.c.
@
text
@a1506 5
hpux-thread.o: $(srcdir)/hpux-thread.c
	$(COMPILE) -I$(srcdir)/osf-share -I$(srcdir)/osf-share/HP800 \
		-I/usr/include/dce $(srcdir)/hpux-thread.c
	$(POSTCOMPILE)

@


1.1144
log
@run copyright.sh for 2011.
@
text
@d500 1
a500 1
	ia64-linux-tdep.o ia64-tdep.o \
d786 1
a786 1
psymtab.h psympriv.h progspace.h bfin-tdep.h
d1448 1
@


1.1143
log
@gdb: bfin: new port

Initial support for Blackfin processors.  This supports the standard ABI.

Signed-off-by: Jie Zhang <jie.zhang@@analog.com>
Signed-off-by: Mike Frysinger <vapier@@gentoo.org>
@
text
@d2 1
a2 1
# 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010
@


1.1142
log
@gdb
	* Makefile.in (SUBDIRS): Add doc.
	* configure: Rebuild.
	* configure.ac: Don't configure in doc.  Create doc/Makefile.
gdb/doc
	* Makefile.in (Makefile): Run ../config.status.
	(distclean): Update.
	* configure: Remove.
	* configure.ac: Remove.
@
text
@d511 1
d786 1
a786 1
psymtab.h psympriv.h progspace.h
d1424 1
@


1.1141
log
@	* Makefile.in (.PRECIOUS): Reference ada-lex.c.
@
text
@d874 1
a874 1
SUBDIRS = @@subdirs@@ data-directory
@


1.1140
log
@2010-11-19  Jan Kratochvil  <jan.kratochvil@@redhat.com>
	    Tom Tromey  <tromey@@redhat.com>

	* Makefile.in (.y.c): Directly create $@@ from YLWRAP.
	(.PHONY): Remove for .y outputs.
@
text
@d1656 1
a1656 1
.PRECIOUS: ada-exp.c
@


1.1139
log
@gdb:
	* NEWS: Mention OpenCL C language support.
	* Makefile.in (SFILES): Add opencl-lang.c.
	(COMMON_OBS): Add opencl-lang.o.
	* opencl-lang.c: New File
	* defs.h (enum language): Add language_opencl.
	* dwarf2read.c (read_file_scope): Handle DW_AT_producer for the
	IBM XL C OpenCL compiler.
	* c-lang.h: Include "parser-defs.h".
	(evaluate_subexp_c): Declare.
	* c-lang.c (evaluate_subexp_c): Remove the static qualifier.
	(c_op_print_tab): Add declaration.
	* eval.c (binop_promote): Handle language_opencl.
	* c-exp.y: Lookup the primitive types instead of referring to the
	builtins.

gdb/testsuite:
	* Makefile.in (ALL_SUBDIRS): Add gdb.opencl.
	* configure.ac (AC_OUTPUT): Add gdb.opencl/Makefile.
	* configure: Regenerate.
	* gdb.opencl/Makefile.in: New File.
	* gdb.opencl/datatypes.exp: Likewise.
	* gdb.opencl/datatypes.cl: Likewise.
	* gdb.opencl/operators.exp: Likewise.
	* gdb.opencl/operators.cl: Likewise.
	* gdb.opencl/vec_comps.exp: Likewise.
	* gdb.opencl/vec_comps.cl: Likewise.
	* gdb.opencl/convs_casts.exp: Likewise.
	* gdb.opencl/convs_casts.cl: Likewise.
	* lib/opencl.exp: Likewise.
	* lib/opencl_hostapp.c: Likewise.
	* lib/opencl_kernel.cl: Likewise.
	* lib/cl_util.c: Likewise.
	* lib/cl_util.c: Likewise.
	* gdb.base/default.exp (set language): Add "opencl" to the list of
	languages.

gdb/doc:
	* gdb.texinfo: (Summary) Add mention about OpenCL C language support.
	(OpenCL C): New node.
@
text
@d1618 4
a1621 2
	$(SHELL) $(YLWRAP) $< y.tab.c $@@.tmp -- $(YACC) $(YFLAGS)
	-sed -e '/extern.*malloc/d' \
d1630 3
a1632 3
	  < $@@.tmp > $@@.new
	-rm $@@.tmp
	mv $@@.new ./$*.c
d1656 1
a1656 7
.PRECIOUS: ada-exp.c ada-lex.c
.PRECIOUS: c-exp.c
.PRECIOUS: f-exp.c
.PRECIOUS: jv-exp.c
.PRECIOUS: m2-exp.c
.PRECIOUS: objc-exp.c
.PRECIOUS: p-exp.c
@


1.1138
log
@gdb
	* NEWS: Mention Guile removal.
	* defs.h (enum language) <language_scm>: Remove.
	* Makefile.in (SFILES): Remove scm-exp.c, scm-lang.c,
	scm-valprint.c.
	(HFILES_NO_SRCDIR): Remove scm-lang.h, scm-tags.h.
	(COMMON_OBS): Remove scm-exp.o, scm-lang.o, scm-valprint.o.
	* scm-exp.c, scm-lang.c, scm-valprint.c, scm-lang.h, scm-tags.h:
	Remove.
gdb/testsuite
	* gdb.base/default.exp: Remove "scheme" from language list.
@
text
@d692 1
d849 1
a849 1
	m2-lang.o p-lang.o p-typeprint.o p-valprint.o \
@


1.1137
log
@	* Makefile.in (install): Remove dependency of install-only and
	recursively invoke make for install-only.
	* data-directory/Makefile.in: Add FLAGS_TO_PASS variable.
	(install): Pass FLAGS_TO_PASS when recursively make install-only.

	gdbserver/
	* Makefile.in: Add FLAGS_TO_PASS variable.
	(install): Remove dependency of install-only and recursively
	invoke make for install-only.
@
text
@a695 1
	scm-exp.c scm-lang.c scm-valprint.c \
d749 1
a749 1
ser-unix.h scm-lang.h inf-ptrace.h terminal.h ui-out.h frame-base.h \
d775 1
a775 1
inf-child.h p-lang.h event-top.h gdbtypes.h scm-tags.h user-regs.h \
a848 1
	scm-exp.o scm-lang.o scm-valprint.o \
@


1.1136
log
@	* Makefile.in (REQUIRED_SUBDIRS): New var.
	(subdir_do): Verify required subdir Makefiles exist.
@
text
@d973 2
a974 1
install: all install-only 
@


1.1135
log
@	Create subdir data-directory.
	* Makefile.in (XML_SYSCALL_DIR, XML_SYSCALL_FILES): Moved to
	data-directory/Makefile.in.
	(SUBDIRS): Add data-directory.
	(all): Remove xml-syscall-copy dependency.
	(xml-syscall-copy): Moved to data-directory/Makefile.in as
	stamp-syscalls.
	(xml-syscall-install): Moved to data-directory/Makefile.in as
	install-syscalls.
	(install-only): Remove xml-syscall-install dependency.
	(all-data-directory): New rule.
	(data-directory/Makefile): New rule.
	* configure.ac (AC_OUTPUT): Add data-directory/Makefile.
	* configure: Regenerate.
	* data-directory/Makefile.in: New file.
	* python/lib/gdb/__init__.py: New file.

	testsuite/
	* gdb.base/catch-syscall.exp (do_syscall_tests): Update location
	of syscall staging area.
@
text
@d878 6
d1248 7
@


1.1134
log
@	* Makefile.in (HFILES_NO_SRCDIR): Add progspace.h.
@
text
@a872 7
# Definitions for the syscall's XML files and dir
XML_SYSCALLS_DIR = syscalls/
XML_SYSCALLS_FILES = gdb-syscalls.dtd \
		     ppc-linux.xml ppc64-linux.xml \
		     i386-linux.xml amd64-linux.xml \
		     sparc-linux.xml sparc64-linux.xml

d875 1
a875 1
SUBDIRS = @@subdirs@@
d906 1
a906 1
all: gdb$(EXEEXT) $(CONFIG_ALL) xml-syscall-copy
a910 30
# This is needed for running GDB from the build directory
.PHONY: xml-syscall-copy
xml-syscall-copy:
	if [ "`cd $(srcdir) && pwd`" != "`pwd`" ] ; then \
	  mkdir -p ./$(XML_SYSCALLS_DIR) ; \
	  list='$(XML_SYSCALLS_FILES)' ; \
 	  for file in $$list ; do \
	    f=$(srcdir)/$(XML_SYSCALLS_DIR)/$$file ; \
	    if test -f $$f ; then \
	      $(INSTALL_DATA) $$f \
	    	  ./$(XML_SYSCALLS_DIR) ; \
	    fi ; \
	  done ; \
	fi ;

# This target is responsible for properly installing the syscalls'
# XML files in the system.
.PHONY: xml-syscall-install
xml-syscall-install:
	$(SHELL) $(srcdir)/../mkinstalldirs \
		$(DESTDIR)$(GDB_DATADIR)/$(XML_SYSCALLS_DIR) ; \
	list='$(XML_SYSCALLS_FILES)' ; \
	for file in $$list ; do \
	  f=$(srcdir)/$(XML_SYSCALLS_DIR)/$$file ; \
	  if test -f $$f ; then \
	    $(INSTALL_DATA) $$f \
	    	$(DESTDIR)$(GDB_DATADIR)/$(XML_SYSCALLS_DIR) ; \
	  fi ; \
	done ;

d969 1
a969 3
# The "install-only" target also installs the syscalls' XML files in
# the system.
install-only: $(CONFIG_INSTALL) xml-syscall-install
d1142 5
d1263 7
@


1.1133
log
@gdb/
	* Makefile.in (GDB_WARN_CFLAGS_NO_FORMAT): Convert it to the no- form.
	(monitor.o): Replace $(INTERNAL_WARN_CFLAGS) by $(INTERNAL_CFLAGS) and
	add $(GDB_WARN_CFLAGS_NO_FORMAT).
	(printcmd.o): Replace $(INTERNAL_CFLAGS_BASE) by $(INTERNAL_CFLAGS).
@
text
@d785 1
a785 1
psymtab.h psympriv.h
@


1.1132
log
@	* Makefile.in (install-python): Add DESTDIR.
@
text
@d158 2
a159 1
GDB_WARN_CFLAGS_NO_FORMAT = `echo " $(GDB_WARN_CFLAGS) " | sed "s/ -Wformat-nonliteral / /g"`
d1535 2
a1536 1
	$(COMPILE.pre) $(INTERNAL_WARN_CFLAGS) $(COMPILE.post) $(srcdir)/monitor.c
d1542 2
a1543 2
	$(COMPILE.pre) $(INTERNAL_CFLAGS_BASE) $(GDB_WARN_CFLAGS_NO_FORMAT) \
		$(GDB_WERROR_CFLAGS) $(COMPILE.post) $(srcdir)/printcmd.c
@


1.1131
log
@	PR python/11900:
	* configure: Rebuild.
	* configure.ac: Add install-python to CONFIG_INSTALL.
	* Makefile.in (install-python): New.
@
text
@d1041 1
a1041 1
	$(SHELL) $(srcdir)/../mkinstalldirs $(GDB_DATADIR)/python/gdb
@


1.1130
log
@gdb
	Revert gdb-add-index addition:
	* Makefile.in (install-only): Don't install gdb-add-index.
	* gdb-add-index.sh: Remove.
gdb/doc
	Revert gdb-add-index addition:
	* gdb.texinfo (Index Files): Don't document gdb-add-index.
@
text
@d1040 2
@


1.1129
log
@gdb
	* Makefile.in (install-only): Install gdb-add-index.
	* gdb-add-index.sh: New file.
gdb/doc
	* gdb.texinfo (Index Files): Mention gdb-add-index.
@
text
@d1021 1
a1021 10
			$(DESTDIR)$(man1dir)/$$transformed_name.1; \
	transformed_name=`t='$(program_transform_name)'; \
			  echo gdb-add-index | sed -e "$$t"` ; \
		if test "x$$transformed_name" = x; then \
		  transformed_name=gdb-add-index ; \
		else \
		  true ; \
		fi ; \
		$(INSTALL_PROGRAM) $(srcdir)/gdb-add-index.sh \
			$(DESTDIR)$(bindir)/$$transformed_name$(EXEEXT)
@


1.1128
log
@	* Makefile.in (HFILES_NO_SRCDIR): Remove link-warning.h.
@
text
@d1021 10
a1030 1
			$(DESTDIR)$(man1dir)/$$transformed_name.1
@


1.1127
log
@2010-06-28  Phil Muldoon  <pmuldoon@@redhat.com>
            Tom Tromey  <tromey@@redhat.com>
            Thiago Jung Bauermann  <bauerman@@br.ibm.com>

	* value.c (pack_unsigned_long): New function.
	(value_from_ulongest): New function.
	* value.h (value_from_ulongest): Declare.
	* python/python.c (_initialize_python): Call
	gdbpy_initialize_thread and gdbpy_initialize_inferior.
	* python/python-internal.h: Define thread_object.
	(gdbpy_inferiors, gdbpy_selected_thread)
	(frame_info_to_frame_object, create_thread_object)
	(find_thread_object, find_inferior_object)
	(gdbpy_initialize_thread, gdbpy_initialize_inferiors)
	(gdbpy_is_value_object, get_addr_from_python): Declare.
	* python/py-value.c (builtin_type_upylong): Define.
	(convert_value_from_python): Add logic for ulongest.
	(gdbpy_is_value_object): New function.
	* python/py-utils.c (get_addr_from_python): New function.
	* python/py-frame.c (frame_info_to_frame_object): Return a PyObject.
	(gdbpy_selected_frame): Use PyObject over frame_info.
	* Makefile.in (SUBDIR_PYTHON_OBS): Add py-inferior and
	py-infthread.
	(SUBDIR_PYTHON_SRCS): Likewise.
	(py-inferior.o): New Rule.
	(py-infthread.o): New Rule.
	* python/py-inferior.c: New File.
	* python/py-infthread.c: New File.

2010-06-28  Phil Muldoon  <pmuldoon@@redhat.com>
	    Tom Tromey  <tromey@@redhat.com>
	    Thiago Jung Bauermann  <bauerman@@br.ibm.com>

	* gdb.texinfo (Inferiors In Python): New node.
	* gdb.texinfo (Threads In Python): New node.

2010-06-28  Phil Muldoon  <pmuldoon@@redhat.com>
            Tom Tromey  <tromey@@redhat.com>
            Thiago Jung Bauermann  <bauerman@@br.ibm.com>

	* gdb.python/py-inferior.c: New File.
	* gdb.python/py-infthread.c: New File.
	* gdb.python/py-inferior.exp: New File.
	* gdb.python/py-infthread.exp: New File.
@
text
@d740 1
a740 1
gnulib/string.in.h gnulib/str-two-way.h gnulib/extra/link-warning.h \
@


1.1127.2.1
log
@	* Makefile.in (HFILES_NO_SRCDIR): Remove link-warning.h.
@
text
@d740 1
a740 1
gnulib/string.in.h gnulib/str-two-way.h \
@


1.1127.2.2
log
@	PR python/11900:
	* configure: Rebuild.
	* configure.ac: Add install-python to CONFIG_INSTALL.
	* Makefile.in (install-python): New.
@
text
@a1039 2
install-python:
	$(SHELL) $(srcdir)/../mkinstalldirs $(GDB_DATADIR)/python/gdb
@


1.1127.2.3
log
@	* Makefile.in (install-python): Add DESTDIR.
@
text
@d1041 1
a1041 1
	$(SHELL) $(srcdir)/../mkinstalldirs $(DESTDIR)$(GDB_DATADIR)/python/gdb
@


1.1126
log
@	* Makefile.in (ALL_TARGET_OBS): Remove solib-target.o.
	(SFILES): Remove solib-null.c, add solib-target.c.
	(COMMON_OBS): Remove solib-null.o, add solib-target.o.
	(ALLDEPFILES): Remove solib-target.c.
	* solib-target.c (_initialize_solib_target): Set
	current_target_so_ops to solib_target_so_ops if not already set.
	* solib-null.c: Delete.
@
text
@d278 2
d298 2
d2025 8
@


1.1125
log
@	* Makefile.in (HFILES_NO_SRCDIR): Remove config/i386/nm-linux.h
@
text
@d694 1
a694 1
	solib.c solib-null.c source.c \
d862 1
a862 1
	solib.o solib-null.o \
a1476 1
	solib-target.c \
@


1.1124
log
@gdb/
	* Makefile.in (RDYNAMIC): New.
	(SFILES): Add proc-service.list.
	* config/alpha/alpha-linux.mh (NAT_CDEPS): New.
	(LOADLIBES): Replace -rdynamic by $(RDYNAMIC).
	* config/arm/linux.mh: Likewise.
	* config/i386/linux.mh: Likewise.
	* config/i386/linux64.mh: Likewise.
	* config/ia64/linux.mh: Likewise.
	* config/m32r/linux.mh: Likewise.
	* config/m68k/linux.mh: Likewise.
	* config/mips/linux.mh: Likewise.
	* config/pa/linux.mh: Likewise.
	* config/powerpc/linux.mh: Likewise.
	* config/powerpc/ppc64-linux.mh: Likewise.
	* config/s390/s390.mh: Likewise.
	* config/sparc/linux.mh: Likewise.
	* config/sparc/linux64.mh: Likewise.
	* config/xtensa/linux.mh: Likewise.
	* configure.ac: New RDYNAMIC on native host and GCC.
	(solaris*): Replace -Wl,-export-dynamic by $RDYNAMIC.
	* configure: Regenerate.
	* proc-service.list: New.

gdb/gdbserver/
	* Makefile.in (SFILES): Add $(srcdir)/proc-service.list.
	(CDEPS): New.
	* configure.ac (RDYNAMIC): New AC_MSG_CHECKING wrapping.  Test also
	-Wl,--dynamic-list.
	* configure: Regenerate.
	* proc-service.list: New.
@
text
@d773 1
a773 1
config/i386/nm-fbsd.h config/i386/nm-linux.h \
@


1.1123
log
@2010-04-29  Phil Muldoon  <pmuldoon@@redhat.com>
            Tom Tromey  <tromey@@redhat.com>
            Thiago Jung Bauermann  <bauerman@@br.ibm.com>

       	* Makefile.in (SUBDIR_PYTHON_OBS): Add py-parameter.
        (SUBDIR_PYTHON_SRCS): Likewise.
       	(py-parameter.o): New rule.
       	* python/py-parameter.c: New file.
        * python/python-internal.h (gdbpy_initialize_parameter)
        (gdbpy_parameter, gdbpy_parameter_value)
        (gdbpy_parse_command_name): Declare.
        * python/py-cmd.c (parse_command_name): Rename to
       	gdbpy_parse_command_name.
        (gdbpy_parse_command_name): Accept a starting list parameter and
       	use over cmdlist.
       	(cmdpy_init): Use gdbpy_parse_command_name.
        * python/python.c (parameter_to_python): Rename to
        gdbpy_parameter_to_python.  Accept enum var_types and value.
        (gdbpy_parameter): Use gdbpy_parameter_value.
        (_initialize_python): Call gdbpy_initialize_parameters.

2010-04-29  Phil Muldoon  <pmuldoon@@redhat.com>

        * gdb.python/py-param.exp: New File.

2010-04-29  Phil Muldoon  <pmuldoon@@redhat.com>
            Tom Tromey  <tromey@@redhat.com>
            Thiago Jung Bauermann  <bauerman@@br.ibm.com>

        * gdb.texinfo (Parameters In Python): New Node.
@
text
@d160 2
d688 1
a688 1
	progspace.c \
@


1.1122
log
@D language support.

gdb/ChangeLog:

        D language support.
        * Makefile.in (SFILES): Add d-lang.c d-valprint.c.
        (COMMON_OBS): Add d-lang.o d-valprint.o.
        (HFILES_NO_SRCDIR): Add d-lang.h.
        * NEWS: Mention D language support.
        * c-lang.c (c_emit_char, exp_descriptor_c): Make public.
        * c-lang.h (c_emit_char, exp_descriptor_c): Add declaration.
        * d-lang.c: New file.
        * d-lang.h: New file.
        * d-valprint.c: New file.
        * defs.h (enum language): Add language_d.
        * dwarf2read.c (set_cu_language): Add DW_LANG_D.
        * language.c (binop_result_type, integral_type, character_type)
        (string_type, boolean_type, structured_type): Add language_d.
        * symfile.c (init_filename_language_table): Add language_d.
        * symtab.c: Include d-lang.h.
        (symbol_init_language_specific, symbol_find_demangled_name)
        (symbol_natural_name, lookup_symbol_in_language)
        (symbol_demangled_name, symbol_matches_domain): Add language_d.

gdb/doc/ChangeLog:

        * gdb.texinfo: (Summary) Add mention about D language support.
        (Filenames): Add D suffixes.
        (D): New node.

gdb/testsuite/ChangeLog:

        * gdb.base/default.exp: Fix "set language" test.
@
text
@d278 1
d296 1
d2028 4
@


1.1121
log
@	Removal of config/i386/nm-i386sol2.h native configuration file.
	* config/i386/nm-i386sol2.h: Remove file.
	* config/i386/i386sol2.mh: Remove NAT_FILE definition.
	* config/i386/sol2-64.mh: Idem.
	* config/djgpp/fnchange.lst: Idem.
	* Makefile.in (HFILES_NO_SRCDIR): Remove reference to that file.
@
text
@d661 1
d729 1
a729 1
c-lang.h frame.h event-loop.h block.h cli/cli-setshow.h	\
d835 1
a835 1
	ada-lang.o c-lang.o f-lang.o objc-lang.o \
d845 2
a846 1
	ada-valprint.o c-valprint.o cp-valprint.o f-valprint.o m2-valprint.o \
@


1.1120
log
@	* defs.h: Adjust comment.
	* filesystem.h, filesystem.c: New files.
	* Makefile.in (SFILES): Add filesystem.c.
	(COMMON_OBS): Add filesystem.o.
	* solib.c (solib_find): Handle DOS-based filesystems.  Handle
	different target and host path flavours.
	* arm-symbian-tdep.c (arm_symbian_init_abi): Set
	has_dos_based_file_system on the gdbarch.
	* arm-wince-tdep.c (arm_wince_init_abi): Ditto.
	* i386-cygwin-tdep.c (i386_cygwin_init_abi): Ditto.
	* i386-tdep.c (i386_go32_init_abi): Ditto.
	* gdbarch.sh (has_dos_based_file_system): New.
	* gdbarch.h, gdbarch.c: Regenerate.
	* NEWS: Mention improved support for remote targets with DOS-based
	filesystems.  Mention new `set/show target-file-system-kind'
	commands.

	gdb/doc/
	* gdb.texinfo (Commands to specify files): Describe what how GDB
	looks up DOS-based filesystem paths on the system root.  Document
	the new `set/show target-file-system-kind' commands.
@
text
@d768 1
a768 1
config/i386/nm-fbsd.h config/i386/nm-i386sol2.h config/i386/nm-linux.h \
@


1.1119
log
@	Add support for auto-loading scripts from .debug_gdb_scripts section.
	* NEWS: Add entry for .debug_gdb_scripts.
	* Makefile.in SUBDIR_PYTHON_OBS): Add py-auto-load.o.
	(SUBDIR_PYTHON_SRCS): Add py-auto-load.c.
	(py-auto-load.o): New rule.
	* cli/cli-cmds.c (find_and_open_script): Make externally visible.
	* cli/cli-cmds.h (find_and_open_script): Update prototype.
	* python/py-auto-load.c: New file.
	* python/python-internal.h: #include <stdio.h>.
	(set_python_list, show_python_list): Declare.
	(gdbpy_initialize_auto_load): Declare.
	(source_python_script_for_objfile): Declare.
	* python/python.c: Remove #include of observer.h.
	(gdbpy_auto_load): Moved to py-auto-load.c.
	(GDBPY_AUTO_FILENAME): Ditto.
	(gdbpy_new_objfile): Delete.
	(source_python_script_for_objfile): New function.
	(set_python_list, show_python_list): Make externally visible.
	(_initialize_python): Move "auto-load" command to py-auto-load.c
	and observer_attach_new_objfile to py-auto-load.c.

	doc/
	* gdb.texinfo (Python): Move Auto-loading section here ...
	(Python API): from here.
	(Auto-loading): Add docs for .debug_gdb_scripts auto-loaded scripts.
	(Maintenance Commands): Add docs for "maint print section-scripts".

	testsuite/
	* gdb.python/py-section-script.c: New file.
	* gdb.python/py-section-script.exp: New file.
	* gdb.python/py-section-script.py: New file.
@
text
@d666 2
a667 2
	f-exp.y f-lang.c f-typeprint.c f-valprint.c findcmd.c findvar.c \
	frame.c frame-base.c frame-unwind.c \
d817 1
@


1.1118
log
@	* NEWS: Add entry for python program space support.
	* Makefile.in (SUBDIR_PYTHON_OBS): Add py-progspace.o.
	(SUBDIR_PYTHON_SRCS): Add py-progspace.c.
	(py-progspace.o): New rule.
	* python/py-prettyprint.c (find_pretty_printer_from_objfiles): New
	function.
	(find_pretty_printer_from_progspace): New function.
	(find_pretty_printer_from_gdb): New function.
	(find_pretty_printer): Rewrite.
	* python/py-progspace.c: New file.
	* python/python-internal.h (program_space): Add forward decl.
	(pspace_to_pspace_object, pspy_get_printers): Declare.
	(gdbpy_initialize_pspace): Declare.
	* python/python.c: #include "progspace.h".
	(gdbpy_get_current_progspace, gdbpy_progspaces): New functions.
	(_initialize_python): Call gdbpy_initialize_pspace.
	(GdbMethods): Add current_progspace, progspaces.

	doc/
	* gdb.texinfo (Python API): Add progspaces section.
	(Selecting Pretty-Printers): Progspace pretty-printers are
	searched too.
	(Progspaces In Python): New section.

	testsuite/
	* gdb.python/py-progspace.c: New file.
	* gdb.python/py-progspace.exp: New file.
@
text
@d270 1
d287 1
d1991 4
@


1.1117
log
@2010-04-09  Phil Muldoon  <pmuldoon@@redhat.com>
	    Thiago Jung Bauermann  <bauerman@@br.ibm.com>
   	    Tom Tromey  <tromey@@redhat.com>

	* breakpoint.c (condition_command): Simplify.  Move condition
	setting code to ...
	(set_breakpoint_condition): ... here.  New function.
	* breakpoint.h  (set_breakpoint_condition): Declare.
	* Makefile.in (SUBDIR_PYTHON_OBS): Add py-breakpoint.
	(SUBDIR_PYTHON_SRCS): Likewise.
	(py-breakpoint.o): New rule.
	* python/py-breakpoint.c: New file.
	* python/python-internal.h (gdbpy_breakpoints)
	(gdbpy_initialize_breakpoints): Declare.
	(GDB_PY_SET_HANDLE_EXCEPTION) Define.


2010-04-09  Phil Muldoon  <pmuldoon@@redhat.com>

	* gdb.python/py-breakpoint.exp: New File.
	* gdb.python/py-breakpoint.C: Ditto.

2010-04-09  Phil Muldoon  <pmuldoon@@redhat.com>
	    Thiago Jung Bauermann  <bauerman@@br.ibm.com>
   	    Tom Tromey  <tromey@@redhat.com>

	* gdb.texinfo (Breakpoints In Python): New Node.
@
text
@d278 1
d294 1
d2021 4
@


1.1116
log
@gdb: fix building with system readline

Building gdb with --enable-targets=all and --with-system-readline hits a
failure in a few targets all related to the inclusion of some opcodes
headers.  The usage of the bundled readline results in an -I to the top
srcdir, but if that isn't used, then there is no such -I path.  A few gdb
targets use this implicitly to include opcodes/ source header files.  So
make sure there is always an explicit -I path to the opcodes/ directory.
@
text
@d271 1
d286 1
d1991 4
@


1.1115
log
@gdb
	* xcoffread.c: Include psymtab.h.
	(xcoff_sym_fns): Update.
	* symtab.h (struct partial_symbol): Remove.
	(PSYMBOL_DOMAIN, PSYMBOL_CLASS): Remove.
	(struct partial_symtab): Remove.
	(PSYMTAB_TO_SYMTAB): Remove.
	(lookup_partial_symbol, lookup_partial_symtab, find_pc_psymtab)
	(find_pc_sect_psymtab): Remove.
	(find_pc_sect_symtab_via_partial): Declare.
	(find_pc_psymtab, find_pc_sect_psymbol, psymtab_to_symtab)
	(find_main_psymtab): Remove.
	(find_main_filename): Declare.
	(fixup_psymbol_section): Remove.
	(fixup_section): Declare.
	* symtab.c: Include psymtab.h.
	(lookup_symtab): Use lookup_symtab method.
	(lookup_partial_symtab): Remove.
	(find_pc_sect_psymtab_closer): Remove.
	(find_pc_sect_psymtab): Remove.
	(find_pc_sect_symtab_via_partial): New function.
	(find_pc_psymtab, find_pc_sect_psymbol, find_pc_psymbol): Remove.
	(fixup_section): No longer static.
	(fixup_psymbol_section): Remove.
	(lookup_symbol_aux): Use lookup_symbol_aux_quick.
	(lookup_global_symbol_from_objfile): Likewise.
	(lookup_symbol_aux_psymtabs): Remove.
	(lookup_symbol_aux_quick): New function.
	(lookup_symbol_global): Use lookup_symbol_aux_quick.
	(lookup_partial_symbol): Remove.
	(basic_lookup_transparent_type_quick): New function.
	(basic_lookup_transparent_type): Use it.
	(find_main_psymtab): Remove.
	(find_main_filename): New function.
	(find_pc_sect_symtab): Use find_pc_sect_symtab method.
	(find_line_symtab): Use expand_symtabs_with_filename method.
	(output_partial_symbol_filename): New function.
	(sources_info): Use map_partial_symbol_filenames.
	(struct search_symbols_data): New type.
	(search_symbols_file_matches): New function.
	(search_symbols_name_matches): Likewise.
	(search_symbols): Use expand_symtabs_matching method.
	(struct add_name_data): Rename from add_macro_name_data.
	(add_macro_name): Update.
	(add_partial_symbol_name): New function.
	(default_make_symbol_completion_list): Use
	map_partial_symbol_names.
	(struct add_partial_symbol_name): New type.
	(maybe_add_partial_symtab_filename): New function.
	(make_source_files_completion_list): Use
	map_partial_symbol_filenames.
	(expand_line_sal): Use expand_symtabs_with_filename method.
	* symmisc.c: Include psymtab.h.
	(print_objfile_statistics): Use print_stats method.
	(dump_objfile): Use dump method.
	(dump_psymtab, maintenance_print_psymbols)
	(maintenance_info_psymtabs, maintenance_check_symtabs)
	(extend_psymbol_list): Remove.
	* symfile.h (struct quick_symbol_functions): New struct.
	(struct sym_fns) <qf>: New field.
	(sort_pst_symbols): Remove.
	(increment_reading_symtab): Declare.
	* symfile.c: Include psymtab.h.
	(compare_psymbols, sort_pst_symbols): Remove.
	(psymtab_to_symtab): Remove.
	(increment_reading_symtab): New function.
	(symbol_file_add_with_addrs_or_offsets): Use expand_all_symtabs
	method.
	(set_initial_language): Use find_main_filename.
	(allocate_psymtab, discard_psymtab, cashier_psymtab): Remove.
	(free_named_symtabs): Remove unused code.
	(start_psymtab_common, add_psymbol_to_bcache)
	(append_psymbol_to_list, add_psymbol_to_list, init_psymbol_list):
	Remove.
	* stack.c: Include psymtab.h, symfile.h.
	(backtrace_command_1): Use find_pc_sect_symtab_via_partial.
	* source.h (psymtab_to_fullname): Don't declare.
	* source.c: Include psymtab.h.
	(select_source_symtab): Use find_last_source_symtab method.
	(forget_cached_source_info): Use forget_cached_source_info
	method.
	(find_and_open_source): No longer static.
	(psymtab_to_fullname): Remove.
	* somread.c: Include psymtab.h.
	(som_sym_fns): Update.
	* psympriv.h: New file.
	* psymtab.h: New file.
	* psymtab.c: New file.
	* objfiles.h: (ALL_OBJFILE_PSYMTABS): Remove.
	(ALL_PSYMTABS, ALL_PSPACE_PSYMTABS): Likewise.
	* objfiles.c: Include psymtab.h.
	(objfile_relocate1): Use relocate method.
	(objfile_has_partial_symbols): Use has_symbols method.
	* mipsread.c: Include psymtab.h.
	(ecoff_sym_fns): Update.
	* mi/mi-cmd-file.c: Include psymtab.h.
	(print_partial_file_name): New function.
	(mi_cmd_file_list_exec_source_files): Use
	map_partial_symbol_filenames.
	* mdebugread.c: Include psympriv.h.
	* machoread.c: Include psympriv.h.
	(macho_sym_fns): Update.
	* m2-exp.y (yylex): Use lookup_symtab.
	* elfread.c: Include psympriv.h.
	(elf_sym_fns): Update.
	* dwarf2read.c: Include psympriv.h.
	* dbxread.c: Include psympriv.h.
	(aout_sym_fns): Update.
	* cp-support.c: Include psymtab.h.
	(read_in_psymtabs): Remove.
	(make_symbol_overload_list_qualified): Use
	expand_symtabs_for_function method.
	* coffread.c: Include psympriv.h.
	(coff_sym_fns): Update.
	* blockframe.c: Include psymtab.h.
	(find_pc_partial_function): Use find_pc_sect_symtab method.
	* ada-lang.h (ada_update_initial_language): Update.
	* ada-lang.c: Include psymtab.h.
	(ada_update_initial_language): Remove 'main_pst' argument.
	(ada_lookup_partial_symbol): Remove.
	(struct ada_psym_data): New type.
	(ada_add_psyms): New function.
	(ada_add_non_local_symbols): Use map_ada_symtabs method.
	(struct add_partial_datum): New type.
	(ada_add_partial_symbol_completions): New function.
	(ada_make_symbol_completion_list): Use map_partial_symbol_names.
	(ada_exception_support_info_sniffer): Update.
	* Makefile.in (SFILES): Add psymtab.c.
	(COMMON_OBS): Add psymtab.o.
	(HFILES_NO_SRCDIR): Add psymtab.h, psympriv.h.
gdb/doc
	* gdbint.texinfo (Symbol Handling): Update.
@
text
@d312 2
a313 1
OPCODES_CFLAGS = -I$(OP_INCLUDE)
@


1.1114
log
@	* Makefile.in (SUBDIR_MI_OBS): Move mi-common.o from here...
	(COMMON_OBS): ... to here since it's used unconditionally.
	(SUBDIR_MI_SRCS): Move mi/mi-common.c from here...
	(SFILES): To here.
@
text
@d677 1
a677 1
	prologue-value.c \
d767 2
a768 1
gdb_usleep.h jit.h xml-syscall.h ada-operator.inc microblaze-tdep.h
d805 1
a805 1
	block.o symtab.o symfile.o symmisc.o linespec.o dictionary.o \
@


1.1113
log
@	Symbian config

	gdb/
	* arm-symbian-tdep.c: New.
	* configure.tgt (arm*-*-symbianelf*): New target.
	(*-*-symbianelf*): New OS.
	* osabi.c (gdb_osabi_names): Add Symbian.
	* defs.h (gdb_osabi): Add GDB_OSABI_SYMBIAN.
	* Makefile.in (ALL_TARGET_OBJS): Add arm-symbian-tdep.o.
	(ALLDEPFILES): Add arm-symbian-tdep.c.
@
text
@d205 1
a205 1
	mi-main.o mi-parse.o mi-getopt.o mi-common.o
d212 1
a212 1
	mi/mi-main.c mi/mi-parse.c mi/mi-getopt.c mi/mi-common.c
d672 1
d813 1
@


1.1112
log
@2010-02-24  Phil Muldoon  <pmuldoon@@redhat.com>
   	    Tom Tromey  <tromey@@redhat.com>
	    Thiago Jung Bauermann  <bauerman@@br.ibm.com>

	* python/python.c (_initialize_python): Call
	gdbpy_initialize_symtabs, gdbpy_initialize_symbols and
	gdbpy_initialize_blocks.
	* python/python-internal.h: Declare struct symbol, block and
	symtab_and_line.  Declare block_object_type and
	symbol_object_type
	(gdbpy_lookup_symbol gdbpy_block_for_pc)
	(symtab_and_line_to_sal_object, symtab_to_symtab_object)
	(symbol_to_symbol_object,  block_to_block_object)
	(gdbpy_initialize_symtabs,gdbpy_initialize_symbols)
	(gdbpy_initialize_blocks ): Declare.
	* python/py-frame.c (frapy_block, frapy_function, frapy_find_sal)
	(frapy_select): Add methods.
	(frapy_read_var): Add symbol branch.
	* Makefile.in (SUBDIR_PYTHON_OBS): Add py-symbol, py-symtab,
	py-block.
	(SUBDIR_PYTHON_SRCS): Likewise.
	(py-symbol.o): New rule.
	(py-symtab.o): Likewise.
	(py-block.o): Likewise.
	* python/py-symbol.c: New file.
	* python/py-symtab.c: Likewise.
	* python/py-block.c: Likewise.


2010-02-24  Phil Muldoon  <pmuldoon@@redhat.com>

	* Makefile.in: Add py-block and py-symbol.
	* gdb.python/py-symbol.exp: New File.
	* gdb.python/py-symtab.exp: New File.
	* gdb.python/py-block.exp: New File.
	* gdb.python/py-symbol.c: New File.
	* gdb.python/py-block.c: New File.


2010-02-24  Phil Muldoon  <pmuldoon@@redhat.com>

	* gdb.texinfo (Frames In Python): Add block, find_sal, function
	and select method descriptions.
	(Python API): Add Blocks In Python, Symbols in Python and Symbol
	Tables in Python to menu.
	(Blocks In Python): New node.
	(Symbols In Python): New node.
	(Symbol Tables in Python): New node.
@
text
@d491 2
a492 1
	armbsd-tdep.o arm-linux-tdep.o armnbsd-tdep.o armobsd-tdep.o \
d1410 1
a1410 1
	arm-linux-nat.c arm-linux-tdep.c arm-tdep.c \
@


1.1111
log
@gdb: Add sparc*-*-linux catch syscall support.

2010-02-24  David S. Miller  <davem@@davemloft.net>

	* gdb_ptrace.h (PT_SYSCALL): If PTRACE_SYSCALL is available, use it.
	* syscalls/sparc-linux.xml: New.
	* syscalls/sparc64-linux.xml: New.
	* Makefile.in (XML_SYSCALL_FILES): Add new syscall XML files.
	* sparc-linux-tdep.c (XML_SYSCALL_FILENAME_SPARC32): Define.
	(sparc32_linux_get_syscall_number): New function.
	(sparc32_linux_init_abi): Set syscall XML file name and hook up
	syscall number fetcher.
	* sparc64-linux-tdep.c (XML_SYSCALL_FILENAME_SPARC64): Define.
	(sparc64_linux_get_syscall_number): New function.
	(sparc64_linux_init_abi): Set syscall XML file name and hook up
	syscall number fetcher.
@
text
@d270 1
d277 2
d284 1
d291 2
d1980 4
d2008 8
@


1.1110
log
@	* gnu-v2-abi.c: Don't include gnu-v2-abi.h.
	(gnuv2_baseclass_offset): Now static.
	* Makefile.in (HFILES_NO_SRCDIR): Remove gnu-v2-abi.h.
	* gnu-v2-abi.h: Remove.
@
text
@d848 2
a849 1
		     i386-linux.xml amd64-linux.xml
@


1.1109
log
@2010-01-13  Phil Muldoon  <pmuldoon@@redhat.com>

	PR python/10705

	* python/python-internal.h: Add lazy_string_object_type
	definition.
	(create_lazy_string_object, gdbpy_initialize_lazy_string)
	(gdbpy_is_lazystring, gdbpy_extract_lazy_string): Define.
	* python/py-value.c (valpy_lazy_string): New function.
	(convert_value_from_python): Add lazy string conversion.
	* python/py-prettyprint.c (pretty_print_one_value): Check if
	return is also a lazy string.
	(print_string_repr): Add lazy string printing branch.
	(print_children): Likewise.
	* python/py-lazy-string.c: New file. Implement lazy strings.
	* python/python.c (_initialize_python): Call
	gdbpy_initialize_lazy_string.
	* varobj.c (value_get_print_value): Add lazy string printing
	branch.  Account for encoding.
	* c-lang.c (c_printstr): Account for new encoding argument.  If
	encoding is NULL, find encoding suited for type, otherwise use
	user encoding.
	* language.h (language_defn): Add encoding argument.
	(LA_PRINT_STRING): Likewise.
	* language.c (unk_lang_printstr): Update to reflect new encoding
	argument to language_defn.
	* ada-lang.h (ada_printstr): Likewise.
	* c-lang.h (c_printstr): Likewise.
	* p-lang.h (pascal_printstr);
	* f-lang.c (f_printstr): Likewise.
	* m2-lang.c (m2_printstr): Likewise.
	* objc-lang.c (objc_printstr): Likewise.
	* p-lang.c (pascal_printstr): Likewise.
	* scm-lang.c (scm_printstr): Likewise.
	* c-valprint.c (c_val_print): Update LA_PRINT_STRING call for
	encoding argument.
	* ada-valprint.c (ada_printstr): Likewise.
	* f-valprint.c (f_val_print): Likewise
	* m2-valprint.c (m2_val_print): Likewise.
	* p-valprint.c (pascal_val_print): Likewise.
	* expprint.c (print_subexp_standard): Likewise.
	* valprint.c (val_print_string): Likewise.
	* Makefile.in (SUBDIR_PYTHON_OBS): Add py-lazy-string.
	(SUBDIR_PYTHON_SRCS): Likewise.
	(py-lazy-string.o): New rule.

2010-01-13  Phil Muldoon  <pmuldoon@@redhat.com>

	* gdb.texinfo (Values From Inferior): Document lazy_string value
	method.
	(Python API): Add Lazy strings menu item.
	(Lazy Strings In Python): New node.

2010-01-13  Phil Muldoon  <pmuldoon@@redhat.com>

	* gdb.python/py-value.exp (test_lazy_strings): Add lazy string test.
	* gdb.python/py-prettyprint.py (pp_ls): New printer.
	* gdb.python/py-prettyprint.exp (run_lang_tests): Add lazy string
	test.
	* gdb.python/py-prettyprint.c: Define lazystring test structure.
	* gdb.python/py-mi.exp: Add lazy string test.
@
text
@d709 1
a709 1
cli-out.h gdb_expat.h breakpoint.h infcall.h obsd-tdep.h gnu-v2-abi.h \
@


1.1108
log
@	Implement core awareness.

	* bcache.c (compare_ints): Remove
	(print_percentage): Use compare_positive_ints.
	* defs.h (compare_positive_ints): Declare.
	* linux-nat.h (struct lin_lwp): New field core.
	(linux_nat_core_of_thread_1): Declare.
	* linux-nat.c (add_lwp): Init the 'core' field.
	(linux_nat_wait_1): Record the core.
	(linux_nat_core_of_thread_1, linux_nat_core_of_thread): New.
	(linux_nat_add_target): Register the above.
	* linux-thread-db.c (update_thread_core): New.
	(thread_db_find_new_threads): Update core information for
	every thread.
	* remote.c (struct private_thread_info): New.
	(free_private_thread_info, demand_private_info): New.
	(PACKET_qXfer_threads, use_osdata_threads): New.
	(struct thread_item, threads_parsing_context
	(start_thread, end_thread, thread_attributes)
	(thread_children, threads_children, threads_elements): New.
	(remote_threads_info): Try qXfer:threads before anything
	else.
	(remote_protocol_packets): Register qXfer:threads.
	(remote_open_1): Init use_osdata_threads.
	(struct stop_reply): New field 'core'.
	(remote_parse_stop_reply): Parse core number.
	(process_stop_reply): Record core number.
	(remote_xfer_partial): Handle qXfer:threads.
	(remote_core_of_thread): New.
	(init_remote_ops): Register remote_core_of_thread.
	(_initialize_remote): Register qXfer:read.
	* target.c (target_core_of_thread): New
	* target.h (enum target_object): New value TARGET_OBJECT_THREADS.
	(struct target_ops): New field to_core_of_threads.
	(target_core_of_thread): Declare.
	* gdbthread.h (struct thread_info): New field private_dtor.
	* thread.c (print_thread_info): Report the core.
	* ui-out.c (MAX_UI_OUT_LEVELS): Increase.
	* utils.c (compare_positive_ints): New.
	* features/threads.dtd: New.
	* mi/mi-interp.c (mi_on_normal_stop): Report the core.
	* mi/mi-main.c (struct collect_cores_data, collect_cores)
	(do_nothing, free_vector_of_osdata_items)
	(splay_tree_int_comparator, free_splay_tree): New.
	(print_one_inferior_data): Implemented printing of selected
	inferiors.  Collect and print cores.
	(output_cores): New.
	(mi_cmd_list_thread_groups): Support --recurse.  Permit specifying
	thread groups together with --available.
@
text
@d273 1
d284 1
d1985 4
@


1.1107
log
@Update copyright year in most headers.

Automatic update by copyright.sh.
@
text
@d447 2
a448 1
	$(srcdir)/features/library-list.dtd $(srcdir)/features/osdata.dtd
@


1.1106
log
@	* Makefile.in (SFILES): Add exceptions.c.
@
text
@d2 1
a2 1
# 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009
@


1.1105
log
@2009-10-26  Michael Snyder  <msnyder@@vmware.com>
	    Hui Zhu  <teawater@@gmail.com>

	* Makefile.in (SFILES): Add gcore.c.
	(COMMON_OBS): Add gcore.o.
	* config/alpha/alpha-linux.mh (NATDEPFILES): Delete gcore.o.
	* config/alpha/fbsd.mh (NATDEPFILES): Ditto.
	* config/arm/linux.mh (NATDEPFILES): Ditto.
	* config/i386/fbsd.mh (NATDEPFILES): Ditto.
	* config/i386/fbsd64.mh (NATDEPFILES): Ditto.
	* config/i386/i386sol2.mh (NATDEPFILES): Ditto.
	* config/i386/linux.mh (NATDEPFILES): Ditto.
	* config/i386/linux64.mh (NATDEPFILES): Ditto.
	* config/i386/sol2-64.mh (NATDEPFILES): Ditto.
	* config/ia64/linux.mh (NATDEPFILES): Ditto.
	* config/m32r/linux.mh (NATDEPFILES): Ditto.
	* config/m68k/linux.mh (NATDEPFILES): Ditto.
	* config/mips/linux.mh (NATDEPFILES): Ditto.
	* config/pa/linux.mh (NATDEPFILES): Ditto.
	* config/powerpc/linux.mh (NATDEPFILES): Ditto.
	* config/powerpc/ppc64-linux.mh (NATDEPFILES): Ditto.
	* config/s390/s390.mh (NATDEPFILES): Ditto.
	* config/sparc/fbsd.mh (NATDEPFILES): Ditto.
	* config/sparc/linux.mh (NATDEPFILES): Ditto.
	* config/sparc/linux64.mh (NATDEPFILES): Ditto.
	* config/sparc/sol2.mh (NATDEPFILES): Ditto.
	* config/xtensa/linux.mh (NATDEPFILES): Ditto.
	* target.c (dummy_find_memory_regions): Change output.
	(dummy_make_corefile_notes): Ditto.
@
text
@d647 2
a648 1
	elfread.c environ.c eval.c event-loop.c event-top.c expprint.c \
@


1.1104
log
@2009-10-26  Michael Snyder  <msnyder@@vmware.com>
	    Hui Zhu  <teawater@@gmail.com>

	* Makefile.in (SFILES): Add gcore.c.
	(COMMON_OBS): Add gcore.o.
	* config/alpha/alpha-linux.mh (NATDEPFILES): Delete gcore.o.
	* config/alpha/fbsd.mh (NATDEPFILES): Ditto.
	* config/arm/linux.mh (NATDEPFILES): Ditto.
	* config/i386/fbsd.mh (NATDEPFILES): Ditto.
	* config/i386/fbsd64.mh (NATDEPFILES): Ditto.
	* config/i386/i386sol2.mh (NATDEPFILES): Ditto.
	* config/i386/linux.mh (NATDEPFILES): Ditto.
	* config/i386/linux64.mh (NATDEPFILES): Ditto.
	* config/i386/sol2-64.mh (NATDEPFILES): Ditto.
	* config/ia64/linux.mh (NATDEPFILES): Ditto.
	* config/m32r/linux.mh (NATDEPFILES): Ditto.
	* config/m68k/linux.mh (NATDEPFILES): Ditto.
	* config/mips/linux.mh (NATDEPFILES): Ditto.
	* config/pa/linux.mh (NATDEPFILES): Ditto.
	* config/powerpc/linux.mh (NATDEPFILES): Ditto.
	* config/powerpc/ppc64-linux.mh (NATDEPFILES): Ditto.
	* config/s390/s390.mh (NATDEPFILES): Ditto.
	* config/sparc/fbsd.mh (NATDEPFILES): Ditto.
	* config/sparc/linux.mh (NATDEPFILES): Ditto.
	* config/sparc/linux64.mh (NATDEPFILES): Ditto.
	* config/sparc/sol2.mh (NATDEPFILES): Ditto.
	* config/xtensa/linux.mh (NATDEPFILES): Ditto.
	* target.c (dummy_find_memory_regions): Change output.
	(dummy_make_corefile_notes): Ditto.
@
text
@d684 1
a684 1
	record.c gcore.c\
@


1.1103
log
@2009-10-21  Andrew Stubbs  <ams@@codesourcery.com>
	    Joel Brobecker  <brobecker@@adacore.com>

	* Makefile.in (HFILES_NO_SRCDIR): Remove shnbsd-tdep.h
	* configure.tgt (sh*-*-linux*): Add corelow.o to gdb_target_obs.
	* sh-linux-tdep.c: Include sh-tdep.h.
	(REGSx16): New macro.
	(gregs_table, fpregs_table): New variables.
	(sh_linux_init_abi): Set core_gregmap and fpregmap.
	* sh-tdep.c: Include regset.h.
	(sh_corefile_supply_regset): New function.
	(sh_corefile_collect_regset): New function.
	(sh_corefile_gregset, sh_corefile_fpregset): New variables.
	(sh_regset_from_core_section): New function.
	(sh_gdbarch_init): Set up tdep value.
	Call set_gdbarch_regset_from_core_section.
	* sh-tdep.h (PC_REGNUM): New enum value.
	(struct sh_corefile_regs): New type.
	(sh_corefile_gregset): Export variable.
	(sh_corefile_supply_regset): New prototype.
	(sh_corefile_collect_regset): New prototype.
	* shnbsd-tdep.c: Remove include of regcache.h, gdb_assert.h and
	shnbsd-tdep.h.
	(regmap): Use new definition using struct sh_corefile_regs.
	(shnbsd_supply_gregset, shnbsd_collect_gregset): Delete.
	(shnbsd_gregset): Delete.
	(shnbsd_regset_from_core_section): Delete.
	(shnbsd_supply_reg, shnbsd_fill_reg): Use new regset interface.
	(shnbsd_init_abi): Set core_gregmap.
	(shnbsd_supply_reg): Delete.
	(shnbsd_fill_reg): Delete.
	(SHNBSD_SIZEOF_GREGS): Move ...
	* shnbsd-nat.c (SHNBSD_SIZEOF_GREGS): ... to here.
	Remove include of shnbsd-tdep.h.
	(shnbsd_fetch_inferior_registers): Replace shnbsd_supply_reg call
	with sh_corefile_supply_regset.
	(shnbsd_store_inferior_registers): Replace shnbsd_fill_reg call with
	sh_corefile_collect_regset.
	* shnbsd-tdep.h: Delete file.
@
text
@d684 1
a684 1
	record.c \
d837 1
a837 1
	inferior.o osdata.o gdb_usleep.o record.o \
@


1.1102
log
@2009-10-19  Pedro Alves	 <pedro@@codesourcery.com>
	    Stan Shebs	<stan@@codesourcery.com>

	Add base multi-executable/process support to GDB.

	gdb/
	* Makefile.in (SFILES): Add progspace.c.
	(COMMON_OBS): Add progspace.o.
	* progspace.h: New.
	* progspace.c: New.

	* breakpoint.h (struct bp_target_info) <placed_address_space>: New
	field.
	(struct bp_location) <pspace>: New field.
	(struct breakpoint) <pspace>: New field.
	(bpstat_stop_status, breakpoint_here_p)
	(moribund_breakpoint_here_p, breakpoint_inserted_here_p)
	(regular_breakpoint_inserted_here_p)
	(software_breakpoint_inserted_here_p, breakpoint_thread_match)
	(set_default_breakpoint): Adjust prototypes.
	(remove_breakpoints_pid, breakpoint_program_space_exit): Declare.
	(insert_single_step_breakpoint, deprecated_insert_raw_breakpoint):
	Adjust prototypes.
	* breakpoint.c (executing_startup): Delete.
	(default_breakpoint_sspace): New.
	(breakpoint_restore_shadows): Skip if the address space doesn't
	match.
	(update_watchpoint): Record the frame's program space in the
	breakpoint location.
	(insert_bp_location): Record the address space in target_info.
	Adjust to pass the symbol space to solib_name_from_address.
	(breakpoint_program_space_exit): New.
	(insert_breakpoint_locations): Switch the symbol space and thread
	when inserting breakpoints.  Don't insert breakpoints in a vfork
	parent waiting for vfork done if we're not attached to the vfork
	child.
	(remove_breakpoints_pid): New.
	(reattach_breakpoints): Switch to a thread of PID.  Ignore
	breakpoints of other symbol spaces.
	(create_internal_breakpoint): Store the symbol space in the sal.
	(create_longjmp_master_breakpoint): Iterate over all symbol
	spaces.
	(update_breakpoints_after_exec): Ignore breakpoints for other
	symbol spaces.
	(remove_breakpoint): Rename to ...
	(remove_breakpoint_1): ... this.  Pass the breakpoints symbol
	space to solib_name_from_address.
	(remove_breakpoint): New.
	(mark_breakpoints_out): Ignore breakpoints from other symbol
	spaces.
	(breakpoint_init_inferior): Ditto.
	(breakpoint_here_p): Add an address space argument and adjust to
	use breakpoint_address_match.
	(moribund_breakpoint_here_p): Ditto.
	(regular_breakpoint_inserted_here_p): Ditto.
	(breakpoint_inserted_here_p): Ditto.
	(software_breakpoint_inserted_here_p): Ditto.
	(breakpoint_thread_match): Ditto.
	(bpstat_check_location): Ditto.
	(bpstat_stop_status): Ditto.
	(print_breakpoint_location): If there's a location to print,
	switch the current symbol space.
	(print_one_breakpoint_location): Add `allflag' argument.
	(print_one_breakpoint): Ditto.	Adjust.
	(do_captured_breakpoint_query): Adjust.
	(breakpoint_1): Adjust.
	(breakpoint_has_pc): Also match the symbol space.
	(describe_other_breakpoints): Add a symbol space argument and
	adjust.
	(set_default_breakpoint): Add a symbol space argument.	Set
	default_breakpoint_sspace.
	(breakpoint_address_match): New.
	(check_duplicates_for): Add an address space argument, and adjust.
	(set_raw_breakpoint): Record the symbol space in the location and
	in the breakpoint.
	(set_longjmp_breakpoint): Skip longjmp master breakpoints from
	other symbol spaces.
	(remove_thread_event_breakpoints, remove_solib_event_breakpoints)
	(disable_breakpoints_in_shlibs): Skip breakpoints from other
	symbol spaces.
	(disable_breakpoints_in_unloaded_shlib): Match symbol spaces.
	(create_catchpoint): Set the symbol space in the sal.
	(disable_breakpoints_before_startup): Skip breakpoints from other
	symbol spaces.	Set executing_startup in the current symbol space.
	(enable_breakpoints_after_startup): Clear executing_startup in the
	current symbol space.  Skip breakpoints from other symbol spaces.
	(clone_momentary_breakpoint): Also copy the symbol space.
	(add_location_to_breakpoint): Set the location's symbol space.
	(bp_loc_is_permanent): Switch thread and symbol space.
	(create_breakpoint): Adjust.
	(expand_line_sal_maybe): Expand comment to mention symbol spaces.
	Switch thread and symbol space when reading memory.
	(parse_breakpoint_sals): Set the symbol space in the sal.
	(break_command_really): Ditto.
	(skip_prologue_sal): Switch and space.
	(resolve_sal_pc): Ditto.
	(watch_command_1): Record the symbol space in the sal.
	(create_ada_exception_breakpoint): Adjust.
	(clear_command): Adjust.  Match symbol spaces.
	(update_global_location_list): Use breakpoint_address_match.
	(breakpoint_re_set_one): Switch thread and space.
	(breakpoint_re_set): Save symbol space.
	(breakpoint_re_set_thread): Also reset the symbol space.
	(deprecated_insert_raw_breakpoint): Add an address space argument.
	Adjust.
	(insert_single_step_breakpoint): Ditto.
	(single_step_breakpoint_inserted_here_p): Ditto.
	(clear_syscall_counts): New.
	(_initialize_breakpoint): Install it as inferior_exit observer.

	* exec.h: Include "progspace.h".
	(exec_bfd, exec_bfd_mtime): New defines.
	(exec_close): Declare.
	* exec.c: Include "gdbthread.h" and "progspace.h".
	(exec_bfd, exec_bfd_mtime, current_target_sections_1): Delete.
	(using_exec_ops): New.
	(exec_close_1): Rename to exec_close, and make public.
	(exec_close): Rename to exec_close_1, and adjust all callers.  Add
	description.  Remove target sections and close executables from
	all program spaces.
	(exec_file_attach): Add comment.
	(add_target_sections): Check on `using_exec_ops' to check if the
	target should be pushed.
	(remove_target_sections): Only unpush the target if there are no
	more target sections in any symbol space.
	* gdbcore.h: Include "exec.h".
	(exec_bfd, exec_bfd_mtime): Remove declarations.

	* frame.h (get_frame_program_space, get_frame_address_space)
	(frame_unwind_program_space): Declare.
	* frame.c (struct frame_info) <pspace, aspace>: New fields.
	(create_sentinel_frame): Add program space argument.  Set the
	pspace and aspace fields of the frame object.
	(get_current_frame, create_new_frame): Adjust.
	(get_frame_program_space): New.
	(frame_unwind_program_space): New.
	(get_frame_address_space): New.
	* stack.c (print_frame_info): Adjust.
	(print_frame): Use the frame's program space.

	* gdbthread.h (any_live_thread_of_process): Declare.
	* thread.c (any_live_thread_of_process): New.
	(switch_to_thread): Switch the program space as well.
	(restore_selected_frame): Don't warn if trying to restore frame
	level 0.

	* inferior.h: Include "progspace.h".
	(detach_fork): Declare.
	(struct inferior) <removable, aspace, pspace>
	<vfork_parent, vfork_child, pending_detach>
	<waiting_for_vfork_done>: New fields.
	<terminal_info>: Remove field.
	<data, num_data>: New fields.
	(register_inferior_data, register_inferior_data_with_cleanup)
	(clear_inferior_data, set_inferior_data, inferior_data): Declare.
	(exit_inferior, exit_inferior_silent, exit_inferior_num_silent)
	(inferior_appeared): Declare.
	(find_inferior_pid): Typo.
	(find_inferior_id, find_inferior_for_program_space): Declare.
	(set_current_inferior, save_current_inferior, prune_inferiors)
	(number_of_inferiors): Declare.
	(inferior_list): Declare.
	* inferior.c: Include "gdbcore.h" and "symfile.h".
	(inferior_list): Make public.
	(delete_inferior_1): Always delete thread silently.
	(find_inferior_id): Make public.
	(current_inferior_): New.
	(current_inferior): Use it.
	(set_current_inferior): New.
	(restore_inferior): New.
	(save_current_inferior): New.
	(free_inferior): Free the per-inferior data.
	(add_inferior_silent): Allocate per-inferior data.
	Call inferior_appeared.
	(delete_threads_of_inferior): New.
	(delete_inferior_1): Adjust interface to take an inferior pointer.
	(delete_inferior): Adjust.
	(delete_inferior_silent): Adjust.
	(exit_inferior_1): New.
	(exit_inferior): New.
	(exit_inferior_silent): New.
	(exit_inferior_num_silent): New.
	(detach_inferior): Adjust.
	(inferior_appeared): New.
	(discard_all_inferiors): Adjust.
	(find_inferior_id): Make public.  Assert pid is not zero.
	(find_inferior_for_program_space): New.
	(have_inferiors): Check if we have any inferior with pid not zero.
	(have_live_inferiors): Go over all pushed targets looking for
	process_stratum.
	(prune_inferiors): New.
	(number_of_inferiors): New.
	(print_inferior): Add executable column.  Print vfork parent/child
	relationships.
	(inferior_command): Adjust to cope with not running inferiors.
	(remove_inferior_command): New.
	(add_inferior_command): New.
	(clone_inferior_command): New.
	(struct inferior_data): New.
	(struct inferior_data_registration): New.
	(struct inferior_data_registry): New.
	(inferior_data_registry): New.
	(register_inferior_data_with_cleanup): New.
	(register_inferior_data): New.
	(inferior_alloc_data): New.
	(inferior_free_data): New.
	(clear_inferior_data): New.
	(set_inferior_data): New.
	(inferior_data): New.
	(initialize_inferiors): New.
	(_initialize_inferiors): Register "add-inferior",
	"remove-inferior" and "clone-inferior" commands.

	* objfiles.h: Include "progspace.h".
	(struct objfile) <pspace>: New field.
	(symfile_objfile, object_files): Don't declare.
	(ALL_PSPACE_OBJFILES): New.
	(ALL_PSPACE_OBJFILES_SAFE): New.
	(ALL_OBJFILES, ALL_OBJFILES_SAFE): Adjust.
	(ALL_PSPACE_SYMTABS): New.
	(ALL_PRIMARY_SYMTABS): Adjust.
	(ALL_PSPACE_PRIMARY_SYMTABS): New.
	(ALL_PSYMTABS): Adjust.
	(ALL_PSPACE_PSYMTABS): New.
	* objfiles.c (object_files, symfile_objfile): Delete.
	(struct objfile_sspace_info): New.
	(objfiles_pspace_data): New.
	(objfiles_pspace_data_cleanup): New.
	(get_objfile_pspace_data): New.
	(objfiles_changed_p): Delete.
	(allocate_objfile): Set the objfile's program space.  Adjust to
	reference objfiles_changed_p in pspace data.
	(free_objfile): Adjust to reference objfiles_changed_p in pspace
	data.
	(objfile_relocate): Ditto.
	(update_section_map): Add pspace argument.  Adjust to iterate over
	objfiles in the passed in pspace.
	(find_pc_section): Delete sections and num_sections statics.
	Adjust to refer to program space's objfiles_changed_p.	Adjust to
	refer to sections and num_sections store in the objfile's pspace
	data.
	(objfiles_changed): Adjust to reference objfiles_changed_p in
	pspace data.
	(_initialize_objfiles): New.
	* linespec.c (decode_all_digits, decode_dollar): Set the sal's
	program space.
	* source.c (current_source_pspace): New.
	(get_current_source_symtab_and_line): Set the sal's program space.
	(set_current_source_symtab_and_line): Set current_source_pspace.
	(select_source_symtab): Ditto.	Use ALL_OBJFILES.
	(forget_cached_source_info): Iterate over all program spaces.
	* symfile.c (clear_symtab_users): Adjust.
	* symmisc.c (print_symbol_bcache_statistics): Iterate over all
	program spaces.
	(print_objfile_statistics): Ditto.
	(maintenance_print_msymbols): Ditto.
	(maintenance_print_objfiles): Ditto.
	(maintenance_info_symtabs): Ditto.
	(maintenance_info_psymtabs): Ditto.
	* symtab.h (SYMTAB_PSPACE): New.
	(struct symtab_and_line) <pspace>: New field.
	* symtab.c (init_sal): Clear the sal's program space.
	(find_pc_sect_symtab): Set the sal's program space.  Switch thread
	and space.
	(append_expanded_sal): Add program space argument.  Iterate over
	all program spaces.
	(expand_line_sal): Iterate over all program spaces.  Switch
	program space.

	* target.h (enum target_waitkind) <TARGET_WAITKIND_VFORK_DONE>: New.
	(struct target_ops) <to_thread_address_space>: New field.
	(target_thread_address_space): Define.
	* target.c (target_detach): Only remove breakpoints from the
	inferior we're detaching.
	(target_thread_address_space): New.

	* defs.h (initialize_progspace): Declare.
	* top.c (gdb_init): Call it.

	* solist.h (struct so_list) <sspace>: New field.
	* solib.h (struct program_space): Forward declare.
	(solib_name_from_address): Adjust prototype.
	* solib.c (so_list_head): Replace with a macro referencing the
	program space.
	(update_solib_list): Set the so's program space.
	(solib_name_from_address): Add a program space argument and adjust.

	* solib-svr4.c (struct svr4_info) <pid>: Delete field.
	<interp_text_sect_low, interp_text_sect_high, interp_plt_sect_low>
	<interp_plt_sect_high>: New fields.
	(svr4_info_p, svr4_info): Delete.
	(solib_svr4_sspace_data): New.
	(get_svr4_info): Rewrite.
	(svr4_sspace_data_cleanup): New.
	(open_symbol_file_object): Adjust.
	(svr4_default_sos): Adjust.
	(svr4_fetch_objfile_link_map): Adjust.
	(interp_text_sect_low, interp_text_sect_high, interp_plt_sect_low)
	(interp_plt_sect_high): Delete.
	(svr4_in_dynsym_resolve_code): Adjust.
	(enable_break): Adjust.
	(svr4_clear_solib): Revert bit that removed the svr4_info here,
	and reinstate clearing debug_base, debug_loader_offset_p,
	debug_loader_offset and debug_loader_name.
	(_initialize_svr4_solib): Register solib_svr4_pspace_data.  Don't
	install an inferior_exit observer anymore.

	* printcmd.c (struct display) <pspace>: New field.
	(display_command): Set the display's sspace.
	(do_one_display): Match the display's sspace.
	(display_uses_solib_p): Ditto.

	* linux-fork.c (detach_fork): Moved to infrun.c.
	(_initialize_linux_fork): Moved "detach-on-fork" command to
	infrun.c.
	* infrun.c (detach_fork): Moved from linux-fork.c.
	(proceed_after_vfork_done): New.
	(handle_vfork_child_exec_or_exit): New.
	(follow_exec_mode_replace, follow_exec_mode_keep)
	(follow_exec_mode_names, follow_exec_mode_string)
	(show_follow_exec_mode_string): New.
	(follow_exec): New.  Reinstate the mark_breakpoints_out call.
	Remove shared libraries before attaching new executable.  If user
	wants to keep the inferior, keep it.
	(displaced_step_fixup): Adjust to pass an address space to the
	breakpoints module.
	(resume): Ditto.
	(clear_proceed_status): In all-stop mode, always clear the proceed
	status of all threads.
	(prepare_to_proceed): Adjust to pass an address space to the
	breakpoints module.
	(proceed): Ditto.
	(adjust_pc_after_break): Ditto.
	(handle_inferior_event): When handling a process exit, switch the
	program space to the inferior's that had exited.  Call
	handle_vfork_child_exec_or_exit.  Adjust to pass an address space
	to the breakpoints module.  In non-stop mode, when following a
	fork and detach-fork is off, also resume the other branch.  Handle
	TARGET_WAITKIND_VFORK_DONE.  Set the program space in sals.
	(normal_stop): Prune inferiors.
	(_initialize_infrun): Install the new "follow-exec-mode" command.
	"detach-on-fork" moved here.

	* regcache.h (get_regcache_aspace): Declare.
	* regcache.c (struct regcache) <aspace>: New field.
	(regcache_xmalloc): Clear the aspace.
	(get_regcache_aspace): New.
	(regcache_cpy): Copy the aspace field.
	(regcache_cpy_no_passthrough): Ditto.
	(get_thread_regcache): Fetch the thread's address space from the
	target, and store it in the regcache.

	* infcall.c (call_function_by_hand): Set the sal's pspace.

	* arch-utils.c (default_has_shared_address_space): New.
	* arch-utils.h (default_has_shared_address_space): Declare.

	* gdbarch.sh (has_shared_address_space): New.
	* gdbarch.h, gdbarch.c: Regenerate.

	* linux-tdep.c: Include auxv.h, target.h, elf/common.h.
	(linux_has_shared_address_space): New.
	(_initialize_linux_tdep): Declare.

	* arm-tdep.c (arm_software_single_step): Pass the frame's address
	space to insert_single_step_breakpoint.
	* arm-linux-tdep.c (arm_linux_software_single_step): Pass the
	frame's pspace to breakpoint functions.
	* cris-tdep.c (crisv32_single_step_through_delay): Ditto.
	(cris_software_single_step): Ditto.
	* mips-tdep.c (deal_with_atomic_sequence): Add frame argument.
	Pass the frame's pspace to breakpoint functions.
	(mips_software_single_step): Adjust.
	(mips_single_step_through_delay): Adjust.
	* rs6000-aix-tdep.c (rs6000_software_single_step): Adjust.
	* rs6000-tdep.c (ppc_deal_with_atomic_sequence): Adjust.
	* solib-irix.c (enable_break): Adjust to pass the current frame's
	address space to breakpoint functions.
	* sparc-tdep.c (sparc_software_single_step): Ditto.
	* spu-tdep.c (spu_software_single_step): Ditto.
	* alpha-tdep.c (alpha_software_single_step): Ditto.
	* record.c (record_wait): Adjust to pass an address space to the
	breakpoints module.

	* fork-child.c (fork_inferior): Set the new inferior's program and
	address spaces.
	* inf-ptrace.c (inf_ptrace_follow_fork): Copy the parent's program
	and address spaces.
	(inf_ptrace_attach): Set the inferior's program and address spaces.
	* linux-nat.c: Include "solib.h".
	(linux_child_follow_fork): Manage parent and child's program and
	address spaces.	 Clone the parent's program space if necessary.
	Don't wait for the vfork to be done here.  Refuse to resume if
	following the vfork parent while leaving the child stopped.
	(resume_callback): Don't resume a vfork parent.
	(linux_nat_resume): Also check for pending events in the
	lp->waitstatus field.
	(linux_handle_extended_wait): Report TARGET_WAITKIND_VFORK_DONE
	events to the core.
	(stop_wait_callback): Don't wait for SIGSTOP on vfork parents.
	(cancel_breakpoint): Adjust.
	* linux-thread-db.c (thread_db_wait): Don't remove thread event
	breakpoints here.
	(thread_db_mourn_inferior): Don't mark breakpoints out here.
	Remove thread event breakpoints after mourning.
	* corelow.c: Include progspace.h.
	(core_open): Set the inferior's program and address spaces.
	* remote.c (remote_add_inferior): Set the new inferior's program
	and address spaces.
	(remote_start_remote): Update address spaces.
	(extended_remote_create_inferior_1): Don't init the thread list if
	we already debugging other inferiors.
	* darwin-nat.c (darwin_attach): Set the new inferior's program and
	address spaces.
	* gnu-nat.c (gnu_attach): Ditto.
	* go32-nat.c (go32_create_inferior): Ditto.
	* inf-ttrace.c (inf_ttrace_follow_fork, inf_ttrace_attach): Ditto.
	* monitor.c (monitor_open): Ditto.
	* nto-procfs.c (procfs_attach, procfs_create_inferior): Ditto.
	* procfs.c (do_attach): Ditto.
	* windows-nat.c (do_initial_windows_stuff): Ditto.

	* inflow.c (inferior_process_group)
	(terminal_init_inferior_with_pgrp, terminal_inferior,
	(terminal_ours_1, inflow_inferior_exit, copy_terminal_info)
	(child_terminal_info, new_tty_postfork, set_sigint_trap): Adjust
	to use per-inferior data instead of inferior->terminal_info.
	(inflow_inferior_data): New.
	(inflow_new_inferior): Delete.
	(inflow_inferior_data_cleanup): New.
	(get_inflow_inferior_data): New.

	* mi/mi-interp.c (mi_new_inferior): Rename to...
	(mi_inferior_appeared): ... this.
	(mi_interpreter_init): Adjust.

	* tui/tui-disasm.c: Include "progspace.h".
	(tui_set_disassem_content): Pass an address space to
	breakpoint_here_p.

	* NEWS: Mention multi-program debugging support.  Mention new
	commands "add-inferior", "clone-inferior", "remove-inferior",
	"maint info program-spaces", and new option "set
	follow-exec-mode".

2009-10-19  Pedro Alves	 <pedro@@codesourcery.com>
	    Stan Shebs	<stan@@codesourcery.com>

	gdb/doc/
	* observer.texi (new_inferior): Rename to...
	(inferior_appeared): ... this.

2009-10-19  Pedro Alves	 <pedro@@codesourcery.com>
	    Stan Shebs	<stan@@codesourcery.com>

	gdb/testsuite/
	* gdb.base/foll-vfork.exp: Adjust to spell out "follow-fork".
	* gdb.base/foll-exec.exp: Adjust to expect a process id before
	"Executing new program".
	* gdb.base/foll-fork.exp: Adjust to spell out "follow-fork".
	* gdb.base/multi-forks.exp: Ditto.  Adjust to the inferior being
	left listed after having been killed.
	* gdb.base/attach.exp: Adjust to spell out "symbol-file".
	* gdb.base/maint.exp: Adjust test.

	* Makefile.in (ALL_SUBDIRS): Add gdb.multi.
	* gdb.multi/Makefile.in: New.
	* gdb.multi/base.exp: New.
	* gdb.multi/goodbye.c: New.
	* gdb.multi/hangout.c: New.
	* gdb.multi/hello.c: New.
	* gdb.multi/bkpt-multi-exec.c: New.
	* gdb.multi/bkpt-multi-exec.exp: New.
	* gdb.multi/crashme.c: New.

2009-10-19  Pedro Alves	 <pedro@@codesourcery.com>
	    Stan Shebs	<stan@@codesourcery.com>

	gdb/doc/
	* gdb.texinfo (Inferiors): Rename node to ...
	(Inferiors and Programs): ... this.  Mention running multiple
	programs in the same debug session.
	<info inferiors>: Mention the new 'Executable' column if "info
	inferiors".  Update examples.  Document the "add-inferior",
	"clone-inferior", "remove-inferior" and "maint info
	program-spaces" commands.
	(Process): Rename node to...
	(Forks): ... this.  Document "set|show follow-exec-mode".
@
text
@d726 1
a726 1
solib-target.h shnbsd-tdep.h gdb_vfork.h alpha-tdep.h dwarf2expr.h \
@


1.1101
log
@	* config/djgpp/fnchange.lst: Add translations for cpu-microblaze.c,
	elf32-microblaze.c, microblaze-rom.c, microblaze-linux-tdep.c,
	microblaze-tdep.h, microblaze-tdep.c, microblaze-opc.h,
	microblaze-opcm.h, microblaze-dis.c, microblaze-dis.h, sim/microblaze,
	microblaze.h, and microblaze.isa.
	* configure.tgt: Add targets microblaze*-linux-*, microblaze*-xilinx-*.
	* Makefile.in: Build microblaze-tdep.o, microblaze-linux-tdep.o.
	HFILES_NO_SRCDIR: Add microblaze-tdep.h.
	* microblaze-linux-tdep.c: New.
	* microblaze-tdep.c: New.
	* microblaze-tdep.h: New.
	* NEWS: Announce Xilinx MicroBlaze support.
@
text
@d664 1
d838 1
a838 1
	jit.o
@


1.1100
log
@2009-09-16  H.J. Lu  <hongjiu.lu@@intel.com>

	PR gdb/10649
	* Makefile.in (GDB_DATADIR_PATH): Renamed to ...
	(GDB_DATADIR): This.
	(xml-syscall-install): Updated.
@
text
@d504 1
d754 1
a754 1
gdb_usleep.h jit.h xml-syscall.h ada-operator.inc
d1438 1
@


1.1099
log
@gdb/
	Fix gcc-4.5 HEAD warnings for enum ada_operator.
	* Makefile.in (HFILES_NO_SRCDIR): Add ada-operator.inc.
	* ada-lang.h (enum ada_operator): Move it to ...
	* ada-operator.inc: ... a new file.
	* expression.h (enum exp_opcode): Include ada-operator.inc.
	New element OP_UNUSED_LAST.  Update comment for OP_EXTENDED0.

gdb/
	Fix gcc-4.5 HEAD warnings for GDB_FORM_cached_string.
	* dwarf2read.c (GDB_FORM_cached_string)
	(dwarf_form_name <GDB_FORM_cached_string>): Remove.
	(struct attribute <dwarf_form>): Reduce the bit width.
	(struct attribute <string_is_canonical>, DW_STRING_IS_CANONICAL): New.
	(read_attribute_value <DW_FORM_string>)
	(read_attribute_value <DW_FORM_strp>): Initialize
	DW_STRING_IS_CANONICAL.
	(dwarf2_name, dump_die_shallow <DW_FORM_string>)
	(dump_die_shallow <DW_FORM_strp>): Update the code using former
	GDB_FORM_cached_string.
@
text
@d170 1
a170 1
GDB_DATADIR_PATH = @@GDB_DATADIR_PATH@@
d902 1
a902 1
		$(DESTDIR)$(GDB_DATADIR_PATH)/$(XML_SYSCALLS_DIR) ; \
d908 1
a908 1
	    	$(DESTDIR)$(GDB_DATADIR_PATH)/$(XML_SYSCALLS_DIR) ; \
@


1.1099.2.1
log
@        PR gdb/10649
        * Makefile.in (GDB_DATADIR_PATH): Renamed to ...
        (GDB_DATADIR): This.
        (xml-syscall-install): Updated.
@
text
@d170 1
a170 1
GDB_DATADIR = @@GDB_DATADIR@@
d902 1
a902 1
		$(DESTDIR)$(GDB_DATADIR)/$(XML_SYSCALLS_DIR) ; \
d908 1
a908 1
	    	$(DESTDIR)$(GDB_DATADIR)/$(XML_SYSCALLS_DIR) ; \
@


1.1098
log
@Implementing catch syscall.

* amd64-linux-tdep.c: Include xml-syscall.h header, define the XML
syscall name for the architecture.
(amd64_linux_get_syscall_number): New function.
(amd64_linux_init_abi): Register the correct functions for syscall
catchpoint; set the correct syscall file name.
* breakpoint.c: New include: xml-syscall.h.
(set_raw_breakpoint_without_location): Setting the parameters
for the catch syscall feature.
(insert_catch_syscall): New.
(remove_catch_syscall): New.
(breakpoint_hit_catch_syscall): New.
(print_it_catch_syscall): New.
(print_one_catch_syscall): New.
(print_mention_catch_syscall): New.
(catch_syscall_breakpoint_ops): New.
(syscall_catchpoint_p): New.
(create_catchpoint_without_mention): New.
(create_catchpoint): Modified in order to use
create_catchpoint_without_mention.
(create_syscall_event_catchpoint): New.
(clean_up_filters): New.
(catch_syscall_split_args): New.
(catch_syscall_command_1): New.
(delete_breakpoint): Add cleanup for catch syscall.
(is_syscall_catchpoint_enabled): New.
(catch_syscall_enabled): New.
(catching_syscall_number): New.
(catch_syscall_completer): New completer function.
(add_catch_command): Add the completer function for catchpoints.
* breakpoint.h (syscalls_to_be_caught): New vector.
(catch_syscall_enabled): New.
(catching_syscall_number): New.
* gdbarch.c: Regenerated.
* gdbarch.h: Regenerated.
* gdbarch.sh: Add syscall catchpoint functions and structures.
(get_syscall_number): New.
(UNKNOWN_SYSCALL): New definition.
* i386-linux-nat.c (i386_linux_resume): Select the proper request
to be made for ptrace() considering if we are catching syscalls
or not.
* i386-linux-tdep.c: Include xml-syscall.h header, define the XML
syscall name for the architecture.
(i386_linux_get_syscall_number): New.
(i386_linux_init_abi): Register the correct functions for syscall
catchpoint; set the correct syscall file name.
* inf-child.c (inf_child_set_syscall_catchpoint): New.
(inf_child_target): Assign default values to target_ops.
* inf-ptrace.c (inf_ptrace_resume): Select the proper request
to be made for ptrace() considering if we are catching syscalls
or not.
* inferior.h (struct inferior): Included new variables
any_syscall_count, syscalls_counts and total_syscalls_count,
used to keep track of requested syscall catchpoints.
* infrun.c (resume): Add syscall catchpoint.
(deal_with_syscall_event): New.
(handle_inferior_event): Add syscall entry/return events.
(inferior_has_called_syscall): New.
* linux-nat.c: Define some helpful variables to track wether we have
support for the needed ptrace option.
(linux_test_for_tracesysgood): New.
(linux_supports_tracesysgood): New.
(linux_enable_tracesysgood): New.
(linux_enable_event_reporting): Save the current used ptrace
options.
(linux_child_post_attach): Calling linux_enable_tracesysgood.
(linux_child_post_startup_inferior): Likewise.
(linux_child_set_syscall_catchpoint): New function.
(linux_handle_extended_wait): Handle the case which the inferior stops
because it has called or returned from a syscall.
(linux_target_install_ops): Install the necessary functions to handle
syscall catchpoints.
* linux-nat.h (struct lwp_info): Include syscall_state into the
structure, which indicates if we are in a syscall entry or return.
* ppc-linux-tdep.c: Include xml-syscall.h header, define the XML
syscall filename for the arch.
(ppc_linux_get_syscall_number): New.
(ppc_linux_init_abi): Register the correct functions for syscall
catchpoint; setting the correct name for the XML syscall file.
* target.c (update_current_target): Update/copy functions related to
syscall catchpoint.
(target_waitstatus_to_string): Add syscall catchpoint entry/return
events.
* target.h (struct target_waitstatus): Add syscall number.
(struct syscall): New struct to hold information about syscalls
in the system.
(struct target_ops): Add ops for syscall catchpoint.
(inferior_has_called_syscall): New.
(target_set_syscall_catchpoint): New.
* xml-support.c (xml_fetch_content_from_file): New function,
transferred from xml-tdesc.c.
* xml-support.h (xml_fetch_content_from_file): New.
* xml-tdesc.c (fetch_xml_from_file): Function removed;
transferred to xml-support.c.
(file_read_description_xml): Updated to use the new
xml_fetch_content_from_file function.
* syscalls/gdb-syscalls.dtd: New definition file for syscall's XML
support.
* syscalls/amd64-linux.xml: New file containing information about
syscalls for GNU/Linux systems that use amd64 architecture.
* syscalls/i386-linux.xml: New file containing information about
syscalls for GNU/Linux systems that use i386 architecture.
* syscalls/ppc-linux.xml: New file containing information about
syscalls for GNU/Linux systems that use PPC architecture.
* syscalls/ppc64-linux.xml: New file containing information about
syscalls for GNU/Linux systems that use PPC64 architecture.
* xml-syscall.c: New file containing functions for manipulating
syscall's XML files.
* xml-syscall.h: New file, exporting the functions above mentioned.
* Makefile.in: Support for relocatable GDB datadir and XML
syscall.
* NEWS: Added information about the catch syscall feature.
* doc/gdb.texinfo (Set Catchpoints): Documentation about the new
feature.
* testsuite/Makefile.in: Inclusion of catch-syscall object.
* testsuite/gdb.base/catch-syscall.c: New file.
* testsuite/gdb.base/catch-syscall.exp: New file.
@
text
@d753 1
a753 1
gdb_usleep.h jit.h xml-syscall.h
@


1.1097
log
@Checking in this patch for Thiago: Rename python-* files into py-*,
more 8+3 friendly.


gdb/
        * Makefile.in (py-cmd.o): Renamed from python-cmd.o.  Updated
        references.
        (py-frame.o): Renamed from python-frame.o.  Updated references.
        (py-function.o): Renamed from python-function.o.  Updated references.
        (py-objfile.o): Renamed from python-objfile.o.  Updated references.
        (py-prettyprint.o): Renamed from python-prettyprint.o.  Updated
+references.
        (py-type.o): Renamed from python-type.o.  Updated references.
        (py-utils.o): Renamed from python-utils.o.  Updated references.
        (py-value.o): Renamed from python-value.o.  Updated references.
        * py-cmd.o: Renamed from python-cmd.o.
        * py-frame.o: Renamed from python-frame.o.
        * py-function.o: Renamed from python-function.o.
        * py-objfile.o: Renamed from python-objfile.o.
        * py-prettyprint.o: Renamed from python-prettyprint.o.
        * py-type.o: Renamed from python-type.o.
        * py-utils.o: Renamed from python-utils.o.
        * py-value.o: Renamed from python-value.o.

gdb/testsuite/
        * gdb.python/Makefile.in (EXECUTABLES): Adjust to new executable
        names, add missing ones.
        * gdb.python/py-cmd.exp: Rename from python-cmd.exp.
        * gdb.python/py-frame.c: Rename from python-frame.c.
        * gdb.python/py-frame.exp: Rename from python-frame.exp.  Adjust
        testfile name.
        * gdb.python/py-function.exp: Rename from python-function.exp.
        * gdb.python/py-mi.exp: Rename from python-mi.exp.  Adjust
        testfile name.
        * gdb.python/py-prettyprint.c: Rename from python-prettyprint.c.
        * gdb.python/py-prettyprint.exp: Rename from python-prettyprint.exp.
        Adjust testfile name.
        * gdb.python/py-prettyprint.py: Rename from python-prettyprint.py.
        * gdb.python/py-template.cc: Rename from python-template.cc.
        * gdb.python/py-template.exp: Rename from python-template.exp.
        Adjust testfile name.
        * gdb.python/py-value.c: Rename from python-value.c.
        * gdb.python/py-value.exp: Rename from python-value.exp.  Adjust
        testfile name.
@
text
@d169 3
d683 2
a684 1
	jit.c
d753 1
a753 1
gdb_usleep.h jit.h
d833 1
a833 1
	prologue-value.o memory-map.o xml-support.o \
d838 6
d877 1
a877 1
all: gdb$(EXEEXT) $(CONFIG_ALL)
d882 30
d968 5
a972 2
install: all install-only
install-only: $(CONFIG_INSTALL)
@


1.1096
log
@Fix parallel check//% rule in gdb for non-VPATH build.

gdb/:
	* gdb/Makefile.in (check//%): Parse 'config.status --version'
	output to recreate the configuration from the testsuite directory,
	rather than running 'config.status --recheck' from a different
	build directory.  Let configure do the recursion rather than
	doing it manually.
@
text
@d267 8
a274 8
	python-cmd.o \
	python-frame.o \
	python-function.o \
	python-objfile.o \
	python-prettyprint.o \
	python-type.o \
	python-utils.o \
	python-value.o
d277 8
a284 8
	python/python-cmd.c \
	python/python-frame.c \
	python/python-function.c \
	python/python-objfile.c \
	python/python-prettyprint.c \
	python/python-type.c \
	python/python-utils.c \
	python/python-value.c
d1923 2
a1924 2
python-cmd.o: $(srcdir)/python/python-cmd.c
	$(COMPILE) $(PYTHON_CFLAGS) $(srcdir)/python/python-cmd.c
d1927 2
a1928 2
python-frame.o: $(srcdir)/python/python-frame.c
	$(COMPILE) $(PYTHON_CFLAGS) $(srcdir)/python/python-frame.c
d1931 2
a1932 2
python-function.o: $(srcdir)/python/python-function.c
	$(COMPILE) $(PYTHON_CFLAGS) $(srcdir)/python/python-function.c
d1935 2
a1936 2
python-objfile.o: $(srcdir)/python/python-objfile.c
	$(COMPILE) $(PYTHON_CFLAGS) $(srcdir)/python/python-objfile.c
d1939 2
a1940 2
python-prettyprint.o: $(srcdir)/python/python-prettyprint.c
	$(COMPILE) $(PYTHON_CFLAGS) $(srcdir)/python/python-prettyprint.c
d1943 2
a1944 2
python-type.o: $(srcdir)/python/python-type.c
	$(COMPILE) $(PYTHON_CFLAGS) $(srcdir)/python/python-type.c
d1947 2
a1948 2
python-utils.o: $(srcdir)/python/python-utils.c
	$(COMPILE) $(PYTHON_CFLAGS) $(srcdir)/python/python-utils.c
d1951 2
a1952 2
python-value.o: $(srcdir)/python/python-value.c
	$(COMPILE) $(PYTHON_CFLAGS) $(srcdir)/python/python-value.c
@


1.1095
log
@	Add interface for JIT code generation.
	* NEWS: Announce JIT interface.
	* Makefile.in (SFILES): Add jit.c.
	(HFILES_NO_SRCDIR): Add jit.h.
	(COMMON_OBS): Add jit.o.
	* jit.c: New file.
	* jit.h: New file.
	* breakpoint.h (enum bptype): Add bp_jit_event to enum.
	* breakpoint.c:
	(update_breakpoints_after_exec): Delete jit breakpoints after exec.
	(bpstat_what): Update event table for bp_jit_event.
	(print_it_typical): Added case for bp_jit_event.
	(print_one_breakpoint_location): Added case for bp_jit_event.
	(allocate_bp_location): Added case for bp_jit_event.
	(mention): Added case for bp_jit_event.
	(delete_command): Added case for bp_jit_event.
	(breakpoint_re_set_one): Added case for bp_jit_event.
	(breakpoint_re_set): Added call to jit_inferior_created_hook.
	(create_jit_event_breakpoint): New.
	* infrun.c (handle_inferior_event): Add handler for jit event.
	(follow_exec): Add call to jit_inferior_created_hook.
	* doc/gdb.texinfo: Add chapter on JIT interface.
@
text
@d891 1
d900 8
a907 8
	  if [ ! -f $$testdir/Makefile ]; then \
	    (cd testsuite && find . -name config.status) | \
	    sed s,/config.status$$,, | sort | while read subdir; do \
	      $(SHELL) $(srcdir)/../mkinstalldirs $$testdir/$$subdir && \
	      (cd $$testdir/$$subdir && \
	       $(SHELL) $$rootme/testsuite/$$subdir/config.status \
		 --recheck && \
	       $(SHELL) ./config.status); done; \
@


1.1094
log
@	* Makefile.in (ALL_TARGET_OBS): Remove prologue-value.o, solib.o.
@
text
@d679 2
a680 1
	record.c
d749 1
a749 1
gdb_usleep.h
d831 2
a832 1
	inferior.o osdata.o gdb_usleep.o record.o
@


1.1093
log
@ChangeLog:

	* target.h (enum strata): New value arch_stratum.
	* target.c (target_require_runnable): Skip arch_stratum targets.

	* configure.tgt (powerpc-*-linux* | powerpc64-*-linux*): Add
	solib-spu.o and spu-multiarch.o to gdb_target_obs.
	* Makefile.in (ALL_TARGET_OBS): Add solib-spu.o and spu-multiarch.o.
	(ALLDEPFILES): Add solib-spu.c and spu-multiarch.c.

	* solib-spu.c: New file.
	* solib-spu.h: New file.
	* spu-multiarch.c: New file.

	* spu-tdep.h (SPUADDR, SPUADDR_SPU, SPUADDR_ADDR): New macros.

	* spu-tdep.c (struct gdbarch_tdep): New member id.
	(spu_gdbarch_id): New function.
	(spu_lslr): New function.

	(spu_address_to_pointer): New function.
	(spu_pointer_to_address): Support SPU ID address encoding.  Use
	spu_gdbarch_id and spu_lslr.
	(spu_integer_to_address): Likewise.
	(spu_frame_unwind_cache): Update for encoded addresses.
	(spu_unwind_pc, spu_unwind_sp): Likewise.
	(spu_read_pc, spu_write_pc): Likewise.
	(spu_push_dummy_call): Likewise.
	(spu_software_single_step): Likewise.
	(spu_get_longjmp_target): Likewise.
	(spu_overlay_update_osect): Likewise.

	(spu_dis_asm_print_address): New function.
	(gdb_print_insn_spu): Likewise.

	(spu_gdbarch_init): Store SPU ID in tdep structure.
	Install spu_address_to_pointer and gdb_print_insn_spu.

	* ppc-linux-tdep.c: Include "observer.h", "auxv.h", "elf/common.h"
	and "solib-spu.h".
	(ppc_linux_entry_point_addr): New static variable.
	(ppc_linux_inferior_created): New function.
	(ppc_linux_displaced_step_location): Likewise.
	(ppc_linux_init_abi): Enable Cell/B.E. support if supported
	by the target.
	(_initialize_ppc_linux_tdep): Attach to inferior_created observer.

	* NEWS: Mention multi-architecture and Cell/B.E. debugging
	capabilities.

testsuite/ChangeLog:

	* gdb.xml/tdesc-regs.exp: Skip for SPU targets.
@
text
@d523 1
a523 1
	solib.o solib-frv.o solib-irix.o solib-svr4.o solib-target.o \
a527 1
	prologue-value.o \
@


1.1092
log
@intl/
	* Makefile.in (aclocal_deps): New variable.
	($(srcdir)/aclocal.m4): Use it, for portable makefile syntax.

libdecnumber/
	* Makefile.in (aclocal_deps): New variable.
	($(srcdir)/aclocal.m4): Use it, for portable makefile syntax.

etc/
	* Makefile.in (AUTOCONF, configure_deps): New variables.
	($(srcdir)/configure, config.status): New rules.
	(Makefile): Depend on config.status.
	* configure.in: Accept --enable-maintainer-mode, set and
	substitute MAINT accordingly.

gdb/
	* Makefile.in (ACLOCAL, ACLOCAL_AMFLAGS, aclocal_m4_deps)
	(AUTOCONF, configure_deps, AUTOHEADER): New variables.
	($(srcdir)/aclocal.m4, $(srcdir)/configure, $(srcdir)/config.in)
	(am--refresh): New rules.
	(stamp-h, config.status): List config.in and configure including
	$(srcdir)/ prefix.
	* aclocal.m4: Regenerate.
	* configure: Regenerate.
@
text
@d514 1
a514 1
	spu-tdep.o \
d1423 1
a1423 1
	spu-linux-nat.c spu-tdep.c \
@


1.1091
log
@2009-06-29  Tristan Gingold  <gingold@@adacore.com>

	* i386-darwin-tdep.c (amd64_darwin_thread_state_reg_offset)
	(amd64_darwin_thread_state_num_regs)
	(amd64_darwin_sigcontext_addr, x86_darwin_init_abi_64): Moved to
	amd64-darwin-tdep.c
	(_initialize_i386_darwin_tdep): Remove 64 bits parts.
	(darwin_dwarf_signal_frame_p): Make public.
	* amd64-darwin-tdep.c: New file with most chunks from
	i386-darwin-tdep.c
	* i386-darwin-tdep.h: Add a prototype for darwin_dwarf_signal_frame_p.
	(amd64_darwin_thread_state_reg_offset)
	(amd64_darwin_thread_state_num_regs): Moved to amd64-darwin-tdep.h
	* amd64-darwin-tdep.h: New file.
	* i386-darwin-nat.c: Only includes amd64-nat.h and amd64-darwin-tdep.h
	if BFD64 is defined.
	(i386_darwin_fetch_inferior_registers): Add #ifdef BFD64/#endif around
	64 bits parts.
	(i386_darwin_store_inferior_registers): Ditto.
	(darwin_set_sstep): Ditto.
	(darwin_complete_target): Ditto.
	(amd64_darwin_sstep_at_sigreturn): Ditto.
	* configure.tgt: Create a separate entry for x86_64-*-darwin.
	Add 64 bits support for i386-*-darwin if --enable-64-bit-bfd.
	* Makefile.in (ALLDEPFILES): Add amd64-darwin-tdep.c, darwin-nat.c,
	i386-darwin-tdep.c i386-darwin-nat.c
	(ALL_64_TARGET_OBS): Add amd64-darwin-tdep.o
@
text
@d1215 1
a1215 1
stamp-h: config.in config.status
d1222 1
a1222 1
config.status: configure configure.tgt configure.host
d1225 53
@


1.1091.2.1
log
@2009-07-25  Michael Snyder  <msnyder@@vmware.com>

	* checkpoint.c: New file, target-agnostic checkpoints.
	* checkpoint.h: New file, interface.
	* Makefile.in (SFILES): Add checkpoint.c.
@
text
@d670 1
a670 1
	thread.c top.c tracepoint.c checkpoint.c \
d739 1
a739 1
language.h nbsd-tdep.h wrapper.h solib-svr4.h checkpoint.h \
a788 1
	checkpoint.o \
@


1.1090
log
@(HFILES_NO_SRCDIR): Remove entries for deleted files.
@
text
@d469 2
a470 1
	amd64fbsd-tdep.o amd64-dicos-tdep.o amd64-linux-tdep.o amd64nbsd-tdep.o \
d1294 1
d1303 1
a1303 1
	dcache.c dicos-tdep.c \
d1319 1
@


1.1089
log
@gdb/
	* Makefile.in (TARGET_FLAGS_TO_PASS): Include also FORCE_PARALLEL.
	(check//%): Construct FORCE_PARALLEL for the sub-make.  Extend the
	comment for it.

gdb/testsuite/
	Fix `make check//%' target after `make check' has been ran.
	* Makefile.in (TEST_TARGETS): Remove the %/.dir dependency.  Add
	a mkdir call.
	(check-gdb.base%): Remove the gdb.base%/.dir dependency.
	(%/.dir): Remove.
@
text
@d741 1
a741 2
regformats/regdef.h config/alpha/nm-osf3.h config/i386/nm-cygwin.h \
config/i386/nm-linux64.h config/i386/nm-i386gnu.h \
d743 1
a743 2
config/i386/nm-i386.h config/i386/nm-go32.h config/nm-nto.h \
config/sparc/nm-sol2.h config/nm-linux.h config/mips/nm-irix5.h	\
@


1.1088
log
@	* Makefile.in (ALL_64_TARGET_OBS): Add amd64-windows-tdep.o.
	(ALL_TARGET_OBS): Add moxie-tdep.o, i386-darwin-tdep.o, and
	solib-darwin.o.

	* configure.tgt: Add comment.
@
text
@d623 2
a624 1
	"RUNTESTFLAGS=$(RUNTESTFLAGS)"
d889 2
a890 1
# used, this rule will harmlessly fail to match.
d910 1
@


1.1087
log
@	gdb/
	* NEWS: Document inlined function support.
	* Makefile.in (SFILES): Add inline-frame.c.
	(COMMON_OBS): Add inline-frame.o.
	* block.c (contained_in): Rewrite to use lexical nesting.
	(block_linkage_function): Skip inlined function blocks.
	(block_inlined_p): New.
	* block.h (struct block): Update comment.
	(block_inlined_p): New prototype.
	* blockframe.c (get_frame_block): Handle inlined functions.
	(get_frame_function): Do not use block_linkage_function.
	(block_innermost_frame): Use get_frame_block and contained_in.
	* breakpoint.c (watchpoint_check): Remove extra reinit_frame_cache.
	Skip over inlined functions.  Simplify epilogue check.
	(bpstat_check_breakpoint_conditions): Use get_stack_frame_id.
	Update comments.
	(set_momentary_breakpoint): Only accept non-inlined frames.
	(watch_command_1): Use frame_unwind_caller_pc and
	frame_unwind_caller_id instead of get_prev_frame.
	(until_break_command): Likewise.  Use get_stack_frame_id.
	* buildsym.c (end_symtab): Set SYMBOL_SYMTAB for block functions.
	* dwarf2loc.c (dwarf_expr_frame_base): Use block_linkage_function.
	* dwarf2read.c (process_die): Handle DW_TAG_inlined_subroutine.
	(read_func_scope, new_symbol): Likewise.  Handle arguments specially
	for inlined functions without call site information.
	(inherit_abstract_dies): Allow tag mismatch for inlined subroutines.
	(die_specification): Treat DW_AT_abstract_origin as a specification.
	(read_type_die): Handle DW_TAG_inlined_subroutine.
	* frame-unwind.c (frame_unwind_init): Add inline_frame_unwind.
	* frame.c (fprint_frame_id): Print inline depth.
	(fprint_frame_type): Handle INLINE_FRAME and SENTINEL_FRAME.
	(skip_inlined_frames, get_stack_frame_id): New.
	(frame_unwind_caller_id): Use skip_inlined_frames.
	(frame_id_inlined_p): New.
	(frame_id_eq): Make the logic match the comments.  Add inline_depth
	check.
	(frame_id_inner): Handle inlined functions.
	(frame_unwind_pc): New function, copied from frame_unwind_caller_pc.
	(frame_unwind_caller_pc): Use skip_inlined_frames and frame_unwind_pc.
	(get_prev_frame_1): Check for inline frames.  Split out frame
	allocation to get_prev_frame_raw.
	(get_prev_frame_raw): New function.
	(get_prev_frame): Handle inline frames.
	(get_frame_pc): Use frame_unwind_pc.
	(get_frame_address_in_block): Skip inlined frames on both sides.
	(pc_notcurrent): Delete.
	(find_frame_sal): Rewrite to handle inline call sites.  Use
	get_frame_address_in_block.
	(deprecated_update_frame_pc_hack): Make static.
	* frame.h: Update comments.
	(struct frame_id): Add inline_depth.
	(enum frame_type): Add INLINE_FRAME.
	(frame_id_inlined_p, get_stack_frame_id): New prototypes.
	* gdbthread.h (struct thread_info): Add step_stack_frame_id field.
	* infcmd.c (set_step_frame): New function.
	(step_once): Use set_step_frame.  Handle inlined functions.
	(until_next_command): Use set_step_frame.
	(finish_backward), finish_forward): Use get_stack_frame_id.
	(finish_command): Support inlined functions.
	* inferior.h (set_step_info): New prototype.
	* infrun.c (RESUME_ALL): Use minus_one_ptid.
	(clear_proceed_status): Clear step_stack_frame_id.
	(init_wait_for_inferior): Call clear_inline_frame_state.
	(init_execution_control_state): Make static.
	(set_step_info): New function.
	(init_thread_stepping_state): Do not set the symtab or line here.
	(stepped_in_from): New function.
	(handle_inferior_event): Handle inlined functions.  Use set_step_info.
	(insert_step_resume_breakpoint_at_frame): Use get_stack_frame_id.
	(struct inferior_status): Add step_stack_frame_id.
	(save_inferior_status, restore_inferior_status): Save and restore
	step_stack_frame_id.
	* inline-frame.c, inline-frame.h: New files.
	* minsyms.c (prim_record_minimal_symbol_and_info): Use XCALLOC.
	* regcache.c (regcache_write_pc): Call reinit_frame_cache.
	* s390-tdep.c (s390_prologue_frame_unwind_cache): Handle INLINE_FRAME.
	* stack.c (frame_show_address): New.
	(print_frame_info, print_frame): Use it.
	(find_frame_funname): Use get_frame_function.  Handle inlined blocks.
	(frame_info): Mark inlined functions.
	(backtrace_command_1): Use get_current_user_frame.
	(print_frame_local_vars, print_frame_label_vars): Update comments.
	(return_command): Refuse inlined functions.
	* symtab.c (lookup_symbol_aux_local): Stop at inlined function
	boundaries.
	(find_function_start_sal): Avoid inlined functions.
	(completion_list_add_fields): New function.
	(default_make_symbol_completion_list): Use it.  Use block_static_block
	and block_global_block.  Check for inlined functions.
	(skip_prologue_using_sal): Avoid line number comparison across
	inlining.
	* symtab.h (struct symbol): Add is_inlined.
	(SYMBOL_INLINED): New.
	* target.c (target_resume): Call clear_inline_frame_state.
	* valops.c (value_of_variable): Check block_inlined_p.

	gdb/doc/
	* gdb.texinfo (Debugging Optimized Code): New chapter.
	(Compiling for Debugging): Reference it.  Move some
	text to the new section.

	gdb/testsuite/
	* gdb.base/break.exp: Add an XFAIL for gcc/36748.
	* gdb.cp/annota2.exp: Accept frames-invalid in more places.
	* gdb.opt/Makefile.in (EXECUTABLES): Update.
	* gdb.opt/clobbered-registers-O2.exp: Update to GPL v3.
	* gdb.opt/inline-bt.c, gdb.opt/inline-bt.exp,
	gdb.opt/inline-cmds.c, gdb.opt/inline-cmds.exp,
	gdb.opt/inline-locals.c, gdb.opt/inline-locals.exp,
	gdb.opt/inline-markers.c: New files.
	* lib/gdb.exp (skip_inline_frame_tests): New function.
	(skip_inline_var_tests): New function.
@
text
@d470 1
a470 1
	amd64obsd-tdep.o amd64-sol2-tdep.o amd64-tdep.o \
d490 1
a490 1
	i386-dicos-tdep.o \
d503 1
d523 1
a523 1
	solib-som.o solib-pa64.o \
@


1.1086
log
@gdb

2009-05-27  Tom Tromey  <tromey@@redhat.com>
	    Thiago Jung Bauermann  <bauerman@@br.ibm.com>
	    Phil Muldoon  <pmuldoon@@redhat.com>
	    Paul Pluzhnikov  <ppluzhnikov@@google.com>
	    Vladimir Prus  <vladimir@@codesourcery.com>

	* python/python-value.c (value_object_to_value): New function.
	* python/python-internal.h: Include frameobject.h.
	(gdbpy_children_cst, gdbpy_to_string_cst, gdbpy_display_hint_cst):
	Declare.
	(value_object_to_value): Declare.
	* printcmd.c (struct format_data) <raw>: New field.
	(last_format): Default to 0.
	(decode_format): Initialize val.raw.  Handle /r flag.
	(print_command_1): Initialize fmt.raw and opts.raw.
	(output_command): Likewise.
	(x_command): Fix initialization of fmt.format.  Initialize
	fmt.raw.
	(display_command): Initialize fmt.raw.
	(do_one_display): Set opts.raw.
	* python/python.c (gdbpy_to_string_cst, gdbpy_children_cst,
	gdbpy_display_hint_cst): New globals.
	(_initialize_python): Initialize them.  Set gdb.pretty_printers.
	* cp-valprint.c: Include python.h.
	(cp_print_value): Call apply_val_pretty_printer.
	* python/python.h (apply_val_pretty_printer): Declare.
	* stack.c (print_this_frame_argument_p): Remove.
	(print_frame_args): Compute summary flag.  Don't use
	print_this_frame_argument_p.
	* valprint.c: Include python.h.
	(user_print_options): Initialize new fields.
	(scalar_type_p): New function.
	(val_print): Handle 'raw' and 'summary' modes.  Call
	apply_val_pretty_printer.
	(value_print): Handle 'raw' mode.
	* valprint.h (struct value_print_options) <raw, summary>: New
	fields.
	* Makefile.in (SUBDIR_PYTHON_OBS): Add python-prettyprint.o
	(SUBDIR_PYTHON_SRCS): Add python-prettyprint.c.
	(python-prettyprint.o): New target.
	* python/python-prettyprint.c: New file.

gdb/doc

2009-05-27  Tom Tromey  <tromey@@redhat.com>
	    Thiago Jung Bauermann  <bauerman@@br.ibm.com>
	    Phil Muldoon  <pmuldoon@@redhat.com>

	* gdb.texinfo (Objfiles In Python): Reference pretty printing.
	(Pretty Printing): New node.
	(Selecting Pretty-Printers): Likewise.
	(Python API): Update.
	(Output Formats): Document /r format.

gdb/testsuite

2009-05-27  Tom Tromey  <tromey@@redhat.com>
	    Thiago Jung Bauermann  <bauerman@@br.ibm.com>
	    Phil Muldoon  <pmuldoon@@redhat.com>
	    Paul Pluzhnikov  <ppluzhnikov@@google.com>

	* gdb.python/python-prettyprint.exp: New file.
	* gdb.python/python-prettyprint.c: New file.
	* gdb.python/python-prettyprint.py: New file.
	* gdb.base/display.exp: print/r is now valid.
@
text
@d648 1
d821 1
@


1.1085
log
@gdb

2009-05-27  Tom Tromey  <tromey@@redhat.com>
	    Thiago Jung Bauermann  <bauerman@@br.ibm.com>
	    Phil Muldoon  <pmuldoon@@redhat.com>
	    Paul Pluzhnikov  <ppluzhnikov@@google.com>

	* python/python.c (_initialize_python): Call
	gdbpy_initialize_types.
	(GdbMethods): Add "lookup_type".
	* python/python-value.c (value_object) <type>: New field.
	(valpy_dealloc): Decref type.
	(valpy_new): Initialize type.
	(valpy_get_type): New function.
	(value_to_value_object): Initialize type.
	(valpy_cast): New function.
	(value_object_getset): Add "type".
	(value_object_methods): Add "cast".
	* python/python-internal.h (type_to_type_object): Declare.
	(type_object_to_type): Likewise.
	(gdbpy_initialize_types): Likewise.
	(gdbpy_lookup_type): Declare.
	* Makefile.in (SUBDIR_PYTHON_OBS): Add python-type.o.
	(SUBDIR_PYTHON_SRCS): Add python-type.c.
	(python-type.o): New target.
	* python/python-type.c: New file.

gdb/doc

2009-05-27  Thiago Jung Bauermann  <bauerman@@br.ibm.com>
	    Tom Tromey  <tromey@@redhat.com>

	* gdb.texinfo (Types In Python): New node.
	(Values From Inferior): "type" is now an attribute.
	(Python API): Update.


gdb/testsuite

2009-05-27  Thiago Jung Bauermann  <bauerman@@br.ibm.com>
	    Tom Tromey  <tromey@@redhat.com>
	    Pedro Alves  <pedro@@codesourcery.com>
	    Paul Pluzhnikov  <ppluzhnikov@@google.com>

	* gdb.python/python-template.exp: New file.
	* gdb.python/python-template.cc: New file.
	* gdb.python/python.exp (gdb_py_test_multiple): Add two objfile
	tests.
	* gdb.python/python-value.exp (py_objfile_tests): New proc.
	Call it.
	(test_value_after_death): New proc.
	* gdb.python/python-value.c (PTR): New typedef.
	(main): New variable 'x'.
@
text
@d271 1
d281 1
d1877 4
@


1.1084
log
@gdb

2009-04-01  Tom Tromey  <tromey@@redhat.com>
	    Thiago Jung Bauermann  <bauerman@@br.ibm.com>
	    Phil Muldoon  <pmuldoon@@redhat.com>

	* python/python.c: Include objfiles.h, observer.h.
	(gdbpy_auto_load): New global.
	(gdbpy_current_objfile): Likewise.
	(GDBPY_AUTO_FILENAME): New define.
	(gdbpy_new_objfile): New function.
	(gdbpy_get_current_objfile): Likewise.
	(gdbpy_objfiles): Likewise.
	(_initialize_python): Add "maint set auto-load".  Call
	gdbpy_initialize_objfile.  Attach objfile observer.
	(GdbMethods): New methods current_objfile, objfiles.
	* python/python-objfile.c: New file.
	* python/python-internal.h (objfile_to_objfile_object): Declare.
	(objfpy_get_printers): Likewise.
	(gdbpy_initialize_objfile): Likewise.
	* Makefile.in (SUBDIR_PYTHON_OBS): Add python-objfile.o.
	(SUBDIR_PYTHON_SRCS): Add python-objfile.c.
	(python-objfile.o): New target.

gdb/doc

2009-04-01  Tom Tromey  <tromey@@redhat.com>
	    Thiago Jung Bauermann  <bauerman@@br.ibm.com>

	* gdb.texinfo (Python API): Update.
	(Auto-loading): New node.
	(Objfiles In Python): New node.

gdb/testsuite

2009-04-06  Tom Tromey  <tromey@@redhat.com>

	* gdb.python/python.exp (gdb_py_test_multiple): Add two objfile
	tests.
	* gdb.python/python-value.exp (py_objfile_tests): New proc.
	Call it.
@
text
@d271 1
d280 1
d1875 4
@


1.1083
log
@gdb/
2009-05-18  Jon Beniston <jon@@beniston.com>

        * MAINTAINERS: Add lm32 target.
        * Makefile.in: Add lm32 dependencies.
        * NEWS: Indicate lm32 is a new target.
        * configure.tgt: Add lm32 targets.
        * lm32-tdep.c: New file.

gdb/testsuite
2009-05-18  Jon Beniston <jon@@beniston.com>

        * gdb.asm/asm-source.exp: Add lm32 target.

include/gdb/
2009-05-18  Jon Beniston <jon@@beniston.com>

        * sim-lm32.h: New file.

sim/
2009-05-18  Jon Beniston <jon@@beniston.com>

        * MAINTAINERS: Add Jon Beniston as maintainer of lm32 sim.
        * configure.ac: Add lm32 target.
        * lm32: New directory.

sim/common
2009-05-18  Jon Beniston <jon@@beniston.com>

        * gennltvals.sh: Add lm32 target.
        * nltvals.def: Add lm32 syscall definitions.

sim/lm32/
2009-05-18  Jon Beniston <jon@@beniston.com>

        * Makefile.in: New file.
        * arch.c: New file.
        * arch.h: New file.
        * config.in: New file.
        * configure: New file.
        * configure.ac: New file.
        * cpu.c: New file.
        * cpu.h: New file.
        * cpuall.h: New file.
        * decode.c: New file.
        * decode.h: New file.
        * dv-lm32cpu.c: New file.
        * dv-lm32timer.c: New file.
        * dv-lm32uart.c: New file.
        * lm32.c: New file.
        * lm32-sim.h: New file.
        * mloop.in: New file.
        * model.c: New file.
        * sem.c: New file.
        * sem-switch.c: New file.
        * sim-if.c: New file.
        * sim-main.c: New file.
        * tconfig.in: New file.
        * traps.c: New file.
        * user.c: New file.
@
text
@d270 1
d278 1
d1869 4
@


1.1082
log
@Linux process record and replay support.

* Makefile.in (ALLDEPFILES): Add linux-record.c.
(ALL_TARGET_OBS): Add linux-record.o.
* configure.tgt (x86_64-*-linux*): Add linux-record.o.
(i[34567]86-*-linux*): Add linux-record.o.
* linux-record.c, linux-record.h: New file.
@
text
@d487 1
d1318 1
@


1.1081
log
@Process record and replay target.

* Makefile.in (SFILES): Add record.c.
(COMMON_OBS): Add record.o.
* record.c, record.h: New file.
@
text
@d522 2
a523 1
	windows-tdep.o
d1316 1
@


1.1080
log
@
	* Makefile.in (ALLDEPFILES): Remove duplicate entries for
	sparc-sol2-nat.c and sparc-sol2-tdep.c.
@
text
@d667 2
a668 1
	inferior.c gdb_usleep.c
d820 1
a820 1
	inferior.o osdata.o gdb_usleep.o
@


1.1079
log
@	* configure.ac: Don't postprocess Makefile in config.status.
	Substitute GDB_NM_FILE.  Don't substitute nm_h.
	* Makefile.in (GDB_NM_FILE): Substitute.
	(TAGS): Use $(GDB_NM_FILE) instead of $(NAT_FILE).
	* configure: Regenerate.
	* gnulib/Makefile.in: Regenerate.
@
text
@d1346 4
a1349 5
	sparc-linux-nat.c \
	sparc-linux-tdep.c sparc-nat.c sparc-sol2-nat.c sparc-sol2-tdep.c \
	sparc-tdep.c sparc-sol2-nat.c sparc-sol2-tdep.c sparc64-linux-nat.c \
	sparc64-linux-tdep.c sparc64-nat.c sparc64-sol2-tdep.c \
	sparc64-tdep.c sparc64fbsd-nat.c sparc64fbsd-tdep.c \
@


1.1078
log
@gdb:
2009-04-18  Carlos O'Donell  <carlos@@codesourcery.com>

	* Makefile.in (MAKEHTML): Set to makeinfo --html.
	(MAKEHTMLFLAGS): Set to empty.

gdb/doc:
2009-04-18  Carlos O'Donell  <carlos@@codesourcery.com>
            Joseph Myers  <joseph@@codesourcery.com>

	* Makefile.in (MAKEHTML): Set to makeinfo --html.
	(MAKEHTMLFLAGS): Set to empty.
	(html__strip_dir): Define.
	(HTMLFILES): Define.
	(HTMLFILES_INSTALL): Define.
	(install-html): Copy new automake rule.
	(html): Depend on $(HTMLFILES).
	(gdb_toc.html): Rename to gdb/index.html.
	(gdbint_toc.html): Rename to gdbint/index.html.
	(stabs_toc.html): Rename to stabs/index.html.
	(annotate_toc.html): Rename to annotate/index.html.
@
text
@d1110 1
d1113 1
a1113 1
	@@etags $(srcdir)/$(NAT_FILE) \
@


1.1077
log
@gdb:
2009-04-17  Carlos O'Donell  <carlos@@codesourcery.com>

	* configure.ac: AC_SUBST datarootdir, docdir, htmldir, pdfdir.
	* configure: Regenerate.
	* Makefile.in: Set datarootdir, docdir, htmldir, and pdfdir from
	configure substitutions.
	(FLAGS_TO_PASS): Add datarootdir, docdir, and htmldir.

gdb/doc:
2009-04-17  Carlos O'Donell  <carlos@@codesourcery.com>

	* Makefile.in: Set pdfdir and htmldir from configure
	substitutions.
	* configure.ac: AC_SUBST datarootdir, docdir, htmldir, pdfdir.
	* configure: Regenerate.

readline:
2009-04-17  Carlos O'Donell  <carlos@@codesourcery.com>

	* Makefile.in: Add html target.  Add dummy install-html and
	install-pdf targets.

sim:
2009-04-17  Carlos O'Donell  <carlos@@codesourcery.com>

	* Makefile.in: Add dummy install-pdf, html, and
	install-html targets.
@
text
@d114 2
a115 5
# Contrary to documentation, the current directory is not
# searched by texi2html, so specify it explicitly.
# -macro 2007-07-26
MAKEHTML = texi2html
MAKEHTMLFLAGS = -menu -split_chapter -I .
@


1.1076
log
@gdb/
	Expose frames to Python.
	* Makefile.in (SUBDIR_PYTHON_OBS): Add python-frame.o.
	(SUBDIR_PYTHON_SRCS): Add python-frame.c.
	(python-frame.o): New target.
	* python/python-frame.c: New file.
	* python/python-internal.h (gdbpy_frames, gdbpy_newest_frame,
	gdbpy_frame_stop_reason_string, gdbpy_selected_frame,
	gdbpy_initialize_frames): New prototypes.
	* python/python.c (_initialize_python): Call gdbpy_initialize_frames.
	(GdbMethods): Add `selected_frame' and `frame_stop_reason_string'
	entries.
	* stack.c (find_frame_funname): New function, factored out of
	print_frame.
	(print_frame): Call find_frame_funname.
	* stack.h (find_frame_funname): Add prototype.

gdb/doc/
	* gdb.texinfo (Frames in Python): New node.
	(Python API): Update.

gdb/testsuite/
	* gdb.python/python-frame.c: New file.
	* gdb.python/python-frame.exp: New file.
@
text
@d43 4
a46 2
pdfdir = $(prefix)/share/doc/gdb
htmldir = $(prefix)/html
d535 3
@


1.1075
log
@2009-03-24  Tom Tromey  <tromey@@redhat.com>
	    Pedro Alves  <pedro@@codesourcery.com>

	* configure, config.in: Rebuild.
	* configure.ac: Check for libiconvlist.
	* charset.c: Check HAVE_LIBICONVLIST.
	* acinclude.m4 (AM_ICONV): Don't subst LIBICONV, LIBICONV_INCLUDE,
	LIBICONV_LIBDIR.  Update CPPFLAGS and LIBS.
	* Makefile.in (LIBICONV, LIBICONV_INCLUDE, LIBICONV_LIBDIR):
	Remove.
	(INTERNAL_CFLAGS_BASE): Update.
	(INTERNAL_LDFLAGS): Update.
	(CLIBS): Update.
@
text
@d269 1
d276 1
d1852 4
@


1.1074
log
@            * gdb_usleep.h, gdb_usleep.c: New files.
            * Makefile.in (SFILES): Add gdb_usleep.c.
            (HFILES_NO_SRCDIR): Add gdb_usleep.h.
            (COMMON_OBS): Add gdb_usleep.o.
            * ser-unix.c (hardwire_send_break): Replace call to gdb_select
            by call to gdb_usleep.
@
text
@a165 5
# Where is the ICONV library?  This can be empty if libc has iconv.
LIBICONV = @@LIBICONV@@
LIBICONV_INCLUDE = @@LIBICONV_INCLUDE@@
LIBICONV_LIBDIR = @@LIBICONV_LIBDIR@@

d390 1
a390 2
	$(INTL_CFLAGS) $(INCGNU) $(ENABLE_CFLAGS) $(INTERNAL_CPPFLAGS) \
	$(LIBICONV_INCLUDE)
d402 1
a402 1
INTERNAL_LDFLAGS = $(CFLAGS) $(GLOBAL_CFLAGS) $(MH_LDFLAGS) $(LDFLAGS) $(CONFIG_LDFLAGS) $(LIBICONV_LIBDIR)
d417 1
a417 1
	$(LIBICONV) $(LIBEXPAT) \
@


1.1073
log
@gdb/
2009-03-05  Tom Tromey  <tromey@@redhat.com>

	Add support for convenience functions in Python.
	* Makefile.in (SUBDIR_PYTHON_OBS): Add python-function.o.
	(SUBDIR_PYTHON_SRCS): Add python-function.c.
	(python-function.o): New target.
	* eval.c: Include "python/python.h" and <ctype.h>.
	(evaluate_subexp_standard): Handle values of type
	TYPE_CODE_INTERNAL_FUNCTION.
	* gdbtypes.h (type_code): Add TYPE_CODE_INTERNAL_FUNCTION.
	* parse.c (write_exp_string): Remove duplicate word in comment.
	* python/python-function.c: New file.
	* python/python-internal.h (gdbpy_initialize_functions): Add
	prototype.
	* python/python.c (_initialize_python): Call
	gdbpy_initialize_functions.
	* valprint.c (value_check_printable): Handle values of type
	TYPE_CODE_INTERNAL_FUNCTION.
	* value.c: Include "cli/cli-decode.h".
	(internal_function): New struct.
	(functionlist, internal_fn_type): New static variables.
	(lookup_only_internalvar,
	lookup_internalvar): Add const qualifier to name argument.
	(create_internalvar): Likewise.  Initialize new field.
	(set_internal_var): Fix typo in comment.  Don't allow assignment
	to canonical variable.
	(value_create_internal_function, value_internal_function_name,
	call_internal_function, function_command, function_destroyer,
	add_internal_function): New functions.
	(_initialize_values): Create `function' placeholder command.
	Initialize internal_fn_type.
	* value.h (lookup_only_internalvar, create_internalvar,
	lookup_internalvar): Add const qualifier to name argument.
	(internal_function_fn, add_internal_function, call_internal_function,
	value_internal_function_name): Add prototypes.
	(struct internalvar) <canonical>: New field.

gdb/doc/
2008-03-05  Tom Tromey  <tromey@@redhat.com>

	* gdb.texinfo (Convenience Vars): Document convenience functions.
	(Functions In Python): New node.
	(Python API): Update.

gdb/testsuite/
2009-03-05  Thiago Jung Bauermann  <bauerman@@br.ibm.com>

	* gdb.python/python-function.exp: New file.
@
text
@d669 1
a669 1
	inferior.c
d739 2
a740 1
sentinel-frame.h bcache.h symfile.h windows-tdep.h linux-tdep.h
d821 1
a821 1
	inferior.o osdata.o
@


1.1072
log
@gdb:
2009-03-19  Tom Tromey  <tromey@@redhat.com>
	    Julian Brown  <julian@@codesourcery.com>

	PR i18n/7220, PR i18n/7821, PR exp/8815, PR exp/9103,
	PR i18n/9401, PR exp/9613:
	* NEWS: Update
	* value.h (value_typed_string): Declare.
	(val_print_string): Update.
	* valprint.h (print_char_chars): Update.
	* valprint.c (print_char_chars): Add type argument.  Update.
	(val_print_string): Likewise.
	* valops.c (value_typed_string): New function.
	* utils.c (host_char_to_target): New function.
	(parse_escape): Use host_char_to_target, host_hex_value.  Update.
	Remove '^' case.
	(no_control_char_error): Remove.
	* typeprint.c (print_type_scalar): Update.
	* scm-valprint.c (scm_scmval_print): Update.
	* scm-lang.h (scm_printchar, scm_printstr): Update.
	* scm-lang.c (scm_printchar): Add type argument.
	(scm_printstr): Likewise.
	* printcmd.c (print_formatted): Update.
	(print_scalar_formatted): Update.
	(printf_command) <wide_string_arg, wide_char_arg>: New constants.
	Handle '%lc' and '%ls'.
	* parser-defs.h (struct typed_stoken): New type.
	(struct stoken_vector): Likewise.
	(write_exp_string_vector): Declare.
	* parse.c (write_exp_string_vector): New function.
	* p-valprint.c (pascal_val_print): Update.
	* p-lang.h (is_pascal_string_type, pascal_printchar,
	pascal_printstr): Update.
	* p-lang.c (is_pascal_string_type): Remove 'char_size' argument.
	Add 'char_type' argument.
	(pascal_emit_char): Add type argument.
	(pascal_printchar): Likewise.
	(pascal_printstr): Likewise.
	* objc-lang.c (objc_emit_char): Add type argument.
	(objc_printchar): Likewise.
	(objc_printstr): Likewise.
	* macroexp.c (get_character_constant): Handle unicode characters.
	Use c_parse_escape.
	(get_string_literal): Handle unicode strings.  Use
	c_parse_escape.
	* m2-valprint.c (print_unpacked_pointer): Update.
	(m2_print_array_contents): Update.
	(m2_val_print): Update.
	* m2-lang.c (m2_emit_char): Add type argument.
	(m2_printchar): Likewise.
	(m2_printstr): Likewise.
	* language.h (struct language_defn) <la_printchar>: Add type
	argument.
	<la_printstr, la_emitchar>: Likewise.
	(LA_PRINT_CHAR): Likewise.
	(LA_PRINT_STRING): Likewise.
	(LA_EMIT_CHAR): Likewise.
	* language.c (unk_lang_emit_char): Add type argument.
	(unk_lang_printchar): Likewise.
	(unk_lang_printstr): Likewise.
	* jv-valprint.c (java_val_print): Update.
	* jv-lang.c (java_emit_char): Add type argument.
	* f-valprint.c (f_val_print): Update.
	* f-lang.c (f_emit_char): Add type argument.
	(f_printchar): Likewise.
	(f_printstr): Likewise.
	* expprint.c (print_subexp_standard): Update.
	* charset.h (target_wide_charset): Declare.
	(c_target_char_has_backslash_escape, c_parse_backslash,
	host_char_print_literally, host_char_to_target,
	target_char_to_host, target_char_to_control_char): Remove.
	(enum transliterations): New type.
	(convert_between_encodings): Declare.
	(HOST_ESCAPE_CHAR): New define.
	(host_letter_to_control_character, host_hex_value): Declare.
	(enum wchar_iterate_result): New enum.
	(struct wchar_iterator): Declare.
	(make_wchar_iterator, make_cleanup_wchar_iterator, wchar_iterator,
	wchar_push_back): Declare.
	* charset-list.h: New file.
	* c-valprint.c (textual_name): New function.
	(textual_element_type): Handle wide character types.
	(c_val_print): Pass original type to textual_element_type.  Handle
	wide character types.
	(c_value_print): Use textual_element_type.  Pass original type of
	value to val_print.
	* c-lang.h (enum c_string_type): New type.
	(c_printchar, c_printstr): Update.
	* c-lang.c (classify_type): New function.
	(print_wchar): Likewise.
	(c_emit_char): Add type argument.  Handle wide characters.
	(c_printchar): Likewise.
	(c_printstr): Add type argument.  Handle wide and multibyte
	character sets.
	(convert_ucn): New function.
	(emit_numeric_character): Likewise.
	(convert_octal): Likewise.
	(convert_hex): Likewise.
	(ADVANCE): New macro.
	(convert_escape): New function.
	(parse_one_string): Likewise.
	(evaluate_subexp_c): Likewise.
	(exp_descriptor_c): New global.
	(c_language_defn): Use exp_descriptor_c.
	(cplus_language_defn): Likewise.
	(asm_language_defn): Likewise.
	(minimal_language_defn): Likewise.
	(charset_for_string_type): New function.
	* c-exp.y (%union): Add 'svec' and 'tsval'.
	(CHAR): New token.
	(exp): Add CHAR production.
	(string_exp): Rewrite.
	(exp) <string_exp>: Rewrite.
	(tempbuf): Now global.
	(tempbuf_init): New global.
	(parse_string_or_char): New function.
	(yylex) <tempbuf>: Now global.
	<tokptr, tempbufindex, tempbufsize, token_string, class_prefix>:
	Remove.
	Handle 'u', 'U', and 'L' prefixes.  Call parse_string_or_char.
	(c_parse_escape): New function.
	* auxv.c (fprint_target_auxv): Update.
	* ada-valprint.c (ada_emit_char): Add type argument.
	(ada_printchar): Likewise.
	(ada_print_scalar): Update.
	(printstr): Add type argument.  Update calls to ada_emit_char.
	(ada_printstr): Add type argument.
	(ada_val_print_array): Update.
	(ada_val_print_1): Likewise.
	* ada-lang.c (emit_char): Add type argument.
	* ada-lang.h (ada_emit_char, ada_printchar, ada_printstr): Add
	type arguments.
	* gdb_locale.h: Include langinfo.h.
	* charset.c (_initialize_charset): Set default host charset from
	the locale.  Don't register charsets.  Add target-wide-charset
	commands.  Call find_charset_names.
	(struct charset, struct translation): Remove.
	(GDB_DEFAULT_HOST_CHARSET): Remove.
	(GDB_DEFAULT_TARGET_WIDE_CHARSET): New define.
	(target_wide_charset_name): New global.
	(show_host_charset_name): Handle "auto".
	(show_target_wide_charset_name): New function.
	(host_charset_enum, target_charset_enum): Remove.
	(charset_enum): New global.
	(all_charsets, register_charset, lookup_charset, all_translations,
	register_translation, lookup_translation): Remove.
	(simple_charset, ascii_print_literally, ascii_to_control): Remove.
	(iso_8859_print_literally, iso_8859_to_control,
	iso_8859_family_charset): Remove.
	(ebcdic_print_literally, ebcdic_to_control,
	ebcdic_family_charset): Remove.
	(struct cached_iconv, check_iconv_cache, cached_iconv_convert,
	register_iconv_charsets): Remove.
	(target_wide_charset_be_name, target_wide_charset_le_name): New
	globals.
	(identity_either_char_to_other): Remove.
	(set_be_le_names, validate): New functions.
	(backslashable, backslashed, represented): Remove.
	(default_c_target_char_has_backslash_escape): Remove.
	(default_c_parse_backslash, iconv_convert): Remove.
	(ascii_to_iso_8859_1_table, ascii_to_ebcdic_us_table,
	ascii_to_ibm1047_table, iso_8859_1_to_ascii_table,
	iso_8859_1_to_ebcdic_us_table, iso_8859_1_to_ibm1047_table,
	ebcdic_us_to_ascii_table, ebcdic_us_to_iso_8859_1_table,
	ebcdic_us_to_ibm1047_table, ibm1047_to_ascii_table,
	ibm1047_to_iso_8859_1_table, ibm1047_to_ebcdic_us_table): Remove.
	(table_convert_char, table_translation, simple_table_translation):
	Remove.
	(current_host_charset, current_target_charset,
	c_target_char_has_backslash_escape_func,
	c_target_char_has_backslash_escape_baton): Remove.
	(c_parse_backslash_func, c_parse_backslash_baton): Remove.
	(host_char_to_target_func, host_char_to_target_baton): Remove.
	(target_char_to_host_func, target_char_to_host_baton): Remove.
	(cached_iconv_host_to_target, cached_iconv_target_to_host):
	Remove.
	(lookup_charset_or_error, check_valid_host_charset): Remove.
	(set_host_and_target_charsets): Remove.
	(set_host_charset, set_target_charset): Remove.
	(set_host_charset_sfunc, set_target_charset_sfunc): Rewrite.
	(set_target_wide_charset_sfunc): New function.
	(show_charset): Print target wide character set.
	(host_charset, target_charset): Rewrite.
	(target_wide_charset): New function.
	(c_target_char_has_backslash_escape): Remove.
	(c_parse_backslash): Remove.
	(host_letter_to_control_character): New function.
	(host_char_print_literally): Remove.
	(host_hex_value): New function.
	(target_char_to_control_char): Remove.
	(cleanup_iconv): New function.
	(convert_between_encodings): New function.
	(target_char_to_host): Remove.
	(struct wchar_iterator): Define.
	(make_wchar_iterator, make_cleanup_wchar_iterator, wchar_iterator,
	wchar_push_back): New functions.
	(do_cleanup_iterator): New function.
	(char_ptr): New typedef.
	(charsets): New global.
	(add_one, find_charset_names): New functions.
	(default_charset_names): New global.
	(auto_host_charset_name): Likewise.
	* aclocal.m4, config.in, configure: Rebuild.
	* configure.ac: Call AM_LANGINFO_CODESET.
	(GDB_DEFAULT_HOST_CHARSET): Default to UTF-8.
	(AM_ICONV): Invoke earlier.
	* acinclude.m4: Include codeset.m4.  Subst LIBICONV_INCLUDE and
	LIBICONV_LIBDIR.  Check for libiconv in build tree.
	* Makefile.in (LIBICONV_LIBDIR, LIBICONV_INCLUDE): New macros.
	(INTERNAL_CFLAGS_BASE): Add LIBICONV_INCLUDE.
	(INTERNAL_LDFLAGS): Add LIBICONV_LIBDIR.
	* gdb_obstack.h (obstack_grow_wstr): New define.
        * gdb_wchar.h: New file.
        * defs.h: Include it.
gdb/testsuite:
	* gdb.base/store.exp: Update for change to escape output.
	* gdb.base/callfuncs.exp (fetch_all_registers): Update for change
	to escape output.
	* gdb.base/pointers.exp: Update for change to escape output.
	* gdb.base/long_long.exp (gdb_test_long_long): Update for change
	to escape output.
	* gdb.base/constvars.exp (do_constvar_tests): Update for change to
	escape output.
	* gdb.base/call-rt-st.exp (print_struct_call): Update for change
	to escape output.
	* gdb.cp/ref-types.exp (gdb_start_again): Update for change to
	escape output.
	* gdb.base/setvar.exp: Update for change to escape output.
	* lib/gdb.exp (default_gdb_start): Set LC_CTYPE to C.
	* gdb.base/printcmds.exp (test_print_all_chars): Update for change
	to escape output.
	(test_print_string_constants): Likewise.
	* gdb.base/charset.exp (valid_host_charset): Check size of
	wchar_t.  Handle UCS-2 and UCS-4.  Add tests for wide and unicode
	cases.  Handle "auto"-related output.
	* gdb.base/charset.c (char16_t, char32_t): New typedefs.
	(uvar, Uvar): New globals.
gdb/doc:
	* gdb.texinfo (Character Sets): Remove obsolete text.  Document
	set target-wide-charset.
	(Requirements): Mention iconv.
@
text
@d274 1
d280 1
d1855 4
@


1.1071
log
@	* Makefile.in: Update license to GPLv3.
	* ada-exp.y: Update license to GPLv3.
	* ada-lex.l: Update license to GPLv3.
	* c-exp.y: Update license to GPLv3.
	* cp-name-parser.y: Update license to GPLv3.
	* darwin-nat-info.c: Update license to GPLv3.
	* f-exp.y: Update license to GPLv3.
	* gdb_thread_db.h: Update license to GPLv3.
	* hppanbsd-nat.c: Update license to GPLv3.
	* hppanbsd-tdep.c: Update license to GPLv3.
	* hppaobsd-tdep.c: Update license to GPLv3.
	* jv-exp.y: Update license to GPLv3.
	* m2-exp.y: Update license to GPLv3.
	* objc-exp.y: Update license to GPLv3.
	* p-exp.y: Update license to GPLv3.
	* reply_mig_hack.awk: Update license to GPLv3.
	* reverse.c: Update license to GPLv3.
	* xtensa-xtregs.c: Update license to GPLv3.
@
text
@d168 2
d393 2
a394 1
	$(INTL_CFLAGS) $(INCGNU) $(ENABLE_CFLAGS) $(INTERNAL_CPPFLAGS)
d406 1
a406 1
INTERNAL_LDFLAGS = $(CFLAGS) $(GLOBAL_CFLAGS) $(MH_LDFLAGS) $(LDFLAGS) $(CONFIG_LDFLAGS)
@


1.1070
log
@	* Makefile.in (clean): rm -f $(DEPDIR)/*.
@
text
@d9 1
a9 1
# the Free Software Foundation; either version 2 of the License, or
d18 1
a18 3
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor,
# Boston, MA 02110-1301, USA.
@


1.1069
log
@	* Makefile.in (GDB_CFLAGS): Add -I$(srcdir)/common.
	(init.c): signals/ -> common/.
	(signals.o): Update.
	* target.h (target_signal_to_string,target_signal_to_string)
	(target_signal_from_name,target_signal_to_host_p)
	(target_signal_from_host,target_signal_to_host): Move to ...
	* common/gdb_signals.h: ... here.  New file.
	* common/signals.c: Moved here from signals/signals.c.
	#include gdb_signals.h, remove #include of target.h in gdb case.
	(target_signal_from_command,default_target_signal_to_host)
	(default_target_signal_from_host): Move inside #ifndef GDBSERVER.

	* gdbserver/Makefile.in (INCLUDE_CFLAGS): Add -I$(srcdir)/../common.
	(server_h): Add gdb_signals.h.
	(signals.o): Update.
	* server.h (target_signal_from_host,target_signal_to_host_p)
	(target_signal_to_host,target_signal_to_name): Moved to gdb_signals.h.
@
text
@d1128 1
@


1.1068
log
@	* Makefile.in (ALL_64_TARGET_OBS): Add amd64-dicos-tdep.o.
	(ALL_TARGET_OBS): Add dicos-tdep.o.
	(ALLDEPFILES): Add amd64-dicos-tdep.c and dicos-tdep.c.
	* configure.tgt (i[34567]86-*-dicos*): Add dicos-tdep.o to
	gdb_target_obs.
	(x86_64-*-dicos*): Add dicos-tdep.o and amd64-dicos-tdep.o to
	gdb_target_obs.
	* dicos-tdep.h, dicos-tdep.c: New.
	* amd64-dicos-tdep.c: New.
	* i386-dicos-tdep.c: Don't include solib.h, solib-target.h or
	inferior.h.  Include dicos-tdep.h.
	(i386_dicos_init_abi): Call dicos_init_abi.
	(i386_dicos_bfd_has_symbol_p): Delete.
	(i386_dicos_osabi_sniffer): Use dicos_load_module_p.

	* NEWS: Mention x86-64 DICOS target support.
@
text
@d368 2
a369 1
GDB_CFLAGS = -I. -I$(srcdir) -I$(srcdir)/config -DLOCALEDIR="\"$(localedir)\"" $(DEFS)
d1037 1
a1037 1
	    -e 's,signals\.c,signals/signals\.c,' \
d1747 1
a1747 1
# gdb/signals/ dependencies
d1752 2
a1753 2
signals.o: $(srcdir)/signals/signals.c
	$(COMPILE) $(srcdir)/signals/signals.c
@


1.1067
log
@2009-02-06  Pedro Alves  <pedro@@codesourcery.com>

	gdb/
	* target.h (enum target_object): Add new TARGET_OBJECT_SIGNAL_INFO.
	* infrun.c (siginfo_value_read, siginfo_value_write): New.
	(siginfo_value_funcs): New.
	(siginfo_make_value): New.
	(_initialize_infrun): Create the $_siginfo convenience variable.
	* gdbtypes.h (append_composite_type_field_aligned): Declare.
	* gdbtypes.c (append_composite_type_field): Rename to...
	(append_composite_type_field_aligned): ... this.  Add ALIGNMENT
	argument.  Handle it.
	(append_composite_type_field): Rewrite on top of
	append_composite_type_field_aligned.
	* value.h (internalvar_make_value): New typedef.
	(struct internalvar) <make_value>: New field.
	(create_internalvar_type_lazy): Declare.
	* value.c (create_internalvar): Clear make_value.
	(create_internalvar_type_lazy): New.
	(value_of_internalvar): If make_value is set use it.
	(preserve_values): Skip internal variables that don't have a
	value.
	* gdbarch.sh (get_siginfo_type): New.
	* gdbarch.h, gdbarch.c: Regenerate.

	* linux-tdep.h, linux-tdep.c: New.
	* amd64-linux-tdep.c: Include "linux-tdep.h".
	(amd64_linux_init_abi): Register linux_get_siginfo_type and
	linux_get_siginfo_mapper.
	* i386-linux-tdep.c: Include "linux-tdep.h".
	(i386_linux_init_abi): Register linux_get_siginfo_type and
	linux_get_siginfo_mapper.
	* arm-linux-tdep.c: Include "linux-tdep.h".
	(i386_linux_init_abi): Register linux_get_siginfo_type and
	linux_get_siginfo_mapper.

	* linux-nat.c (linux_xfer_siginfo): New.
	(linux_nat_xfer_partial): Handle TARGET_OBJECT_SIGNAL_INFO.
	* remote.c (PACKET_qXfer_siginfo_read)
	(PACKET_qXfer_siginfo_write): New.
	(feature remote_protocol_features): Add "qXfer:siginfo:read" and
	"qXfer:siginfo:write" features.
	(remote_xfer_partial): Handle TARGET_OBJECT_SIGNAL_INFO.
	(_initialize_remote): Add "set/show remote read-siginfo-object"
	and "set/show remote write-siginfo-object" commands.

	* Makefile.in (ALL_TARGET_OBS): Add linux-tdep.o.
	(HFILES_NO_SRCDIR): Add linux-tdep.h.
	(ALLDEPFILES): Add linux-tdep.c.

	* configure.tgt (arm*-*-linux* | arm*-*-uclinux*)
	(i[34567]86-*-linux*, x86_64-*-linux*): Add linux-tdep.o to
	gdb_target_obs.

2009-02-06  Pedro Alves  <pedro@@codesourcery.com>

	gdb/gdbserver/
	* server.c (handle_query): Report qXfer:siginfo:read and
	qXfer:siginfo:write as supported and handle them.
	* target.h (struct target_ops) <qxfer_siginfo>: New field.
	* linux-low.c (linux_xfer_siginfo): New.
	(linux_target_ops): Set it.

2009-02-06  Pedro Alves  <pedro@@codesourcery.com>

	gdb/doc/
	* gdb.texinfo (Signals): Document $_siginfo.
	(Convenience Variables): Mention $_siginfo.
	(Remote Configuration): Document qXfer:siginfo:read,
	qXfer:siginfo:write packets, and the read-siginfo-object,
	write-siginfo-object commands.

2009-02-06  Pedro Alves  <pedro@@codesourcery.com>

	gdb/testsuite/
	* gdb.base/siginfo-obj.c, gdb.base/siginfo-obj.exp: New.
@
text
@d464 2
a465 2
	amd64fbsd-tdep.o amd64-linux-tdep.o amd64nbsd-tdep.o amd64obsd-tdep.o \
	amd64-sol2-tdep.o amd64-tdep.o \
d477 1
d1275 1
d1283 2
a1284 1
	dcache.c exec.c \
@


1.1066
log
@gdb/
2009-02-06  Tom Tromey  <tromey@@redhat.com>

	* Makefile.in (SUBDIR_PYTHON_OBS): Add python-cmd.o.
	(SUBDIR_PYTHON_SRCS): Add python-cmd.c.
	(python-cmd.o): New target.
	* cli/cli-decode.c (set_cmd_completer): Add self parameter to
	completer prototype.
	(add_cmd): Initialize destroyer member of cmd_list_element. Use
	make_symbol_completion_list_fn as completer.
	(delete_cmd): Call destroyer if one is set.
	* cli/cli-decode.h (cmd_list_element): Add cmd parameter to
	completer member.  Add destroyer member.
	(set_cmd_completer): Add self parameter to
	completer prototype.
	* command.h (set_cmd_completer): Add cmd parameter to
	completer prototype.
	* completer.c (noop_completer, filename_completer,
	location_completer, expression_completer, command_completer): Adapt
	to new completer prototype.
	(complete_line_internal): Pass new parameter to completer function.
	* completer.h (noop_completer, filename_completer,
	location_completer, expression_completer, command_completer): Adapt
	prototypes to new completer prototype.
	* interps.c (interpreter_completer): Adapt to new completer
	prototype.
	* python/python-cmd.c: New file.
	* python/python-internal.h (gdbpy_initialize_commands): Add
	prototype.
	(gdbpy_doc_cst): Add forward declaration.
	* python/python.c (gdbpy_doc_cst): Declare.
	(_initialize_python): Call gdbpy_initialize_commands.  Initialize
	gdbpy_doc_cst.
	* symtab.c (make_symbol_completion_list_fn): New function.
	* symtab.h (make_symbol_completion_list_fn): Add prototype.

gdb/doc/
2009-02-06  Tom Tromey  <tromey@@redhat.com>

	* gdb.texinfo (Python API): Add entry for Commands In Python.
	(Commands In Python): New node.

gdb/testsuite/
2009-02-06  Thiago Jung Bauermann  <bauerman@@br.ibm.com>

	* gdb.python/python-cmd.exp: New file.
@
text
@d486 1
d734 1
a734 1
sentinel-frame.h bcache.h symfile.h windows-tdep.h
d1305 1
@


1.1065
log
@	* Makefile.in (HFILES_NO_SRCDIR): Remove i386-cygwin-tdep.h.
@
text
@d273 1
d278 1
d1841 4
@


1.1064
log
@Fix linking with --enable-targets=all:
* Makefile.in (ALL_TARGET_OBS): Add windows-tdep.o.
(HFILES_NO_SRCDIR): Add windows-tdep.h.
(ALLDEPFILES): Add windows-tdep.c.
* win32-tdep.h: Delete.
* windows-tdep.h: Rename from win32-tdep.h.
* win32-nat.h: Delete.
* windows-nat.h: Rename from win32-nat.h.
* win32-nat.c: Delete.
* windows-nat.c: Rename from win32-nat.c.
* win32-termcap.c: Delete.
* windows-termcap.c: Rename from win32-termcap.c.
* amd64-windows-nat.c: Handle rename from win32-nat.h -> windows-nat.h.
* configure.ac: Handle rename from win32-termcap.c -> windows-termcap.c.
* configure: Regenerate.
* gdb_curses.h: Change comment to reflect rename from win32-termcap.c ->
windows-termcap.c.
* i386-cygwin-tdep.c: Handle rename from win32-tdep.h -> windows-tdep.h.
* i386-windows-nat.c: Refect rename from win32-nat.h -> windows-nat.h.
* windows-nat.c: Ditto.  Also reflect rename from from win32-tdep.h ->
windows-tdep.h.
(win32_make_so): Handle cygwin compiler warning due to change of load_addr from
DWORD to LPVOID.
(handle_load_dll): Use %p in format string to properly print address and avoid
a compiler warning.
(DEBUG_EXCEPTION_SIMPLE): Ditto.
(handle_exception): Ditto.
* windows-tdep.c: Handle rename from win32-tdep.h -> windows-tdep.h.
* config/i386/cygwin.mh: Handle rename from win32-nat.o -> windows-nat.o.
* config/i386/mingw.mh: Ditto.
* config/i386/mingw64.mh: Ditto.
@
text
@d720 1
a720 1
language.h i386-cygwin-tdep.h nbsd-tdep.h wrapper.h solib-svr4.h \
@


1.1063
log
@* Makefile.in (init.c): Set LANG/LC_ALL to C, not c.
@
text
@d518 2
a519 1
	corelow.o
d731 1
a731 1
sentinel-frame.h bcache.h symfile.h
d1344 1
a1344 1
	win32-nat.c \
@


1.1062
log
@        Updated copyright notices for most files.
@
text
@d1014 2
a1015 2
	@@-LANG=c ; export LANG ; \
	LC_ALL=c ; export LC_ALL ; \
@


1.1061
log
@	Implement -list-thread-groups --available

        * Makefile.in (XMLFILES): Add osdata.dtd.
        (SFILES): Add osdata.c.
        (COMMON_OBS): Add osdata.o.
        * linux-nat.c: Include pwd.h, sys/types.h, gdb_dirent.h and xml-support.h.
        (linux_nat_xfer_osdata): New function.
        (linux_xfer_partial): Handle TARGET_OBJECT_OSDATA.
        * osdata.c: New file.
        * osdata.h: New file.
        * remote.c (PACKET_qXfer_osdata): New packet enum.
        (remote_protocol_features): Add "qXfer:osdata:read".
        (remote_read_qxfer): Handle TARGET_OBJECT_OSDATA.
        (extended_remote_can_run): New.
        (init_extended_remote_ops): Set to_can_run to
        extended_remote_can_run.
        (_initialize_remote): Add packet config command for
        "qXfer:osdata:read".
        * xml-support.c (obstack_xml_printf): New function.
        * xml-support.h (obstack_xml_printf): Declare.
        * target.c (target_get_osdata): New function.
        * target.h (enum target_object): Add TARGET_OBJECT_OSDATA.
        (target_os_data): Declare.
        * features/osdata.dtd: New file.
        * mi/mi-main.c (mi_list_thread_groups): Handle the --available
        option.
@
text
@d2 1
a2 1
# 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008
@


1.1061.2.1
log
@2008-12-26  Michael Snyder  <msnyder@@vmware.com>

	* Marker: adding teawater patches to branch.
@
text
@d518 1
a518 1
	corelow.o linux-record.o
d660 1
a660 1
	inferior.c record.c
d811 1
a811 1
	inferior.o osdata.o record.o
d1300 1
a1300 1
	linux-fork.c linux-record.c \
@


1.1060
log
@	* Makefile.in (SUBDIR_CLI_OBS): Don't mention cli-utils.o.
	(SUBDIR_CLI_DEPS): Don't mention cli-utils.c.
	(HFILES_NO_SRCDIR): Don't mention cli-utils.h.
	(cli-utils.o): Remove.
	* cli/cli-utils.c: Remove.
	* cli/cli-utils.h: Remove.
@
text
@d437 1
a437 1
	$(srcdir)/features/library-list.dtd
d640 1
a640 1
	objfiles.c osabi.c observer.c \
d811 1
a811 1
	inferior.o
@


1.1059
log
@	* Makefile.in (.y.c, .l.c): sed free to xfree.
@
text
@d188 1
a188 1
	cli-decode.o cli-script.o cli-cmds.o cli-setshow.o cli-utils.o \
d195 1
a195 2
	cli/cli-interp.c \
	cli/cli-utils.c
d684 1
a684 1
cli/cli-decode.h cli/cli-cmds.h cli/cli-utils.h cli/cli-dump.h \
a1555 4
cli-utils.o: $(srcdir)/cli/cli-utils.c
	$(COMPILE) $(srcdir)/cli/cli-utils.c
	$(POSTCOMPILE)

@


1.1058
log
@gdb/
	* Makefile.in (INSTALLED_LIBS, CLIBS): Remove reference to
	$(TM_CLIBS).
	(CDEPS): Remove reference to $(TM_CDEPS).

gdb/doc/
	* gdbint.texinfo (Adding a New Target): Don't mention TDEPFILES,
	.mt files, TM_CLIBS or TM_CDEPS.
	(x86 Watchpoints): Don't mention TDEPFILES.
@
text
@d1473 2
d1489 2
@


1.1057
log
@        * target.h (struct target_ops): Add new field to_get_ada_task_ptid.
        (target_get_ada_task_ptid): New macro.
        * target.c (default_get_ada_task_ptid): New function.
        (update_current_target): Inherit field default_get_ada_task_ptid.
        (update_current_target): Make default_get_ada_task_ptid the default
        value for field to_get_ada_task_ptid.
        * ada-lang.h (struct task_control_block): Delete. Never used.
        (struct task_ptid, task_ptid_t, struct task_entry, task_list):
        Likewise.
        (struct ada_task_info): New.
        (ada_task_is_alive, ada_find_printable_frame)
        (ada_task_list_iterator_ftype, iterate_over_live_ada_tasks): Add
        declarations.
        (ada_build_task_list): Update prototype.
        (init_task_list, ada_is_exception_breakpoint): Remove prototypes.
        * ada-lang.c (ada_find_printable_frame): Make non-static.
        * ada-tasks.c: New file.
        * Makefile.in (SFILES): Add ada-tasks.c.
        (COMMON_OBS): Add ada-tasks.o.
        * linux-thread-db.c (thread_db_find_thread_from_tid)
        (thread_db_get_ada_task_ptid): New functions.
        (init_thread_db_ops): Set thread_db_ops.to_get_ada_task_ptid.
@
text
@d414 1
a414 1
	$(XM_CLIBS) $(TM_CLIBS) $(NAT_CLIBS) $(GDBTKLIBS) @@LIBS@@ \
d417 1
a417 1
	$(XM_CLIBS) $(TM_CLIBS) $(NAT_CLIBS) $(GDBTKLIBS) @@LIBS@@ \
d420 1
a420 1
CDEPS = $(XM_CDEPS) $(TM_CDEPS) $(NAT_CDEPS) $(SIM) $(BFD) $(READLINE_DEPS) \
@


1.1056
log
@2008-10-17  Michael Snyder  <msnyder@@vmware.com>
	Target interface for reverse debugging.
	* target.h (enum target_waitkind):
	Add new wait event, TARGET_WAITKIND_NO_HISTORY.
	(struct target_ops): New method to_can_execute_reverse.
	(target_can_execute_reverse): New macro.
	* target.c (update_current_target): Inherit to_can_execute_reverse.

	Remote interface for reverse debugging.
	* remote.c (remote_can_execute_reverse): New target method.
	(remote_resume): Check for reverse exec direction, and send
	appropriate command to target.
	(remote_wait_as): Check target response for NO_HISTORY status.
	Also check for empty reply (target doesn't understand "bs" or "bc).
	(remote_vcont_resume): Jump out if attempting reverse execution.

	Event handling interface for reverse debugging.
	* infrun.c (execution_direction): New state variable.
	(enum inferior_stop_reason): Add NO_HISTORY reason.
	(handle_inferior_event): Handle TARGET_WAITKIND_NO_HISTORY.
	Handle stepping over a function call in reverse.
	Handle stepping thru a line range in reverse.
	Handle setting a step-resume breakpoint in reverse.
	Handle stepping into a function in reverse.
	Handle stepping between line ranges in reverse.
	(print_stop_reason): Print reason for NO_HISTORY.
	(step_into_function): Rename to handle_step_into_function.
	(handle_step_into_function_backward): New function.
	(set_exec_direction_func, show_exec_direction_func): New funcs.
	(proceed): No need to singlestep over a breakpoint
	when resuming in reverse.

	* inferior.h (enum exec_direction_kind): New enum.
	(execution_direction): Export new execution state variable.

	* breakpoint.c (make_breakpoint_silent): New function.
	* breakpoint.h (make_breakpoint_silent): Export.
	* infcmd.c (finish_command): Check for reverse exec direction.
	(finish_backward): New function, handle finish cmd in reverse.

	User interface for reverse execution.
	* Makefile.in (reverse.c): New file.
	* reverse.c: New file.  User interface for reverse execution.
@
text
@d614 1
a614 1
SFILES = ada-exp.y ada-lang.c ada-typeprint.c ada-valprint.c  \
d789 1
@


1.1055
log
@2008-10-16  Thiago Jung Bauermann  <bauerman@@br.ibm.com>
	    Tom Tromey  <tromey@@redhat.com>

gdb/
	* Makefile.in (SUBDIR_PYTHON_OBS): Add python-value.o.
	(SUBDIR_PYTHON_SRCS): Add python-value.c.
	(python-value.o): New target.
	* configure.ac (CONFIG_OBS): Add python-value.o.
	(CONFIG_SRCS): Add python/python-value.c
	* configure: Regenerate.
	* python-internal.h (value_object_type): Add external declaration.
	(gdbpy_get_value_from_history, value_to_value_object,
	convert_value_from_python, gdbpy_initialize_values): Add function
	prototype.
	* python/python-value.c: New file.
	* python/python.c (GdbMethods): Add gdbpy_get_value_from_history.
	(_initialize_python): Call gdbpy_initialize_values.
	* python/python.h (values_in_python): Add external declaration.
	* value.c (value_prepend_to_list, value_remove_from_list): New
	functions.
	(preserve_values): Iterate over values_in_python list as well.
	* value.h (value_prepend_to_list, value_remove_from_list): Add
	function prototypes.

gdb/doc/
	* gdb.texinfo. (Values From Inferior): New subsubsection.

gdb/testsuite/
	* gdb.python/python-value.c: New file.
	* gdb.python/python-value.exp: New file.
@
text
@d644 1
a644 1
	regcache.c reggroups.c remote.c remote-fileio.c \
d783 2
a784 1
	exec.o bcache.o objfiles.o observer.o minsyms.o maint.o demangle.o \
@


1.1054
log
@2008-10-09  Thomas Schwinge  <tschwinge@@gnu.org>

	* Makefile.in (gnu-nat.o): Revert the 2008-09-10 change, as the problem
	is fixed upstream.
@
text
@d274 2
a275 1
	python-utils.o
d278 2
a279 1
	python/python-utils.c
d1841 4
@


1.1053
log
@2008-10-09  Pedro Alves  <pedro@@codesourcery.com>

	Make it compile without warnings.

	* procfs.c (create_procinfo): Initialize `parent'.
	(dead_procinfo): Pass a constant string as format to error.
	(procfs_address_to_host_pointer): Add cast to gdb_type *.
	(procfs_find_LDT_entry): Adjust format string to long int
	ptid.tid.
	(procfs_xfer_partial): Adjust prototype.  Add gdb_byte* cast.
	(procfs_xfer_memory): Adjust prototype.
	(info_mappings_callback, info_proc_mappings): Adjust to not pass a
	variable as printf_filtered format.
	(procfs_make_note_section): Change type of auxv local to gdb_byte.
	* Makefile.in: Remove special rule.
@
text
@a1348 7
# "gnu-nat.c" gets "suggest parentheses around assignment used as
# truth value" errors.  It turns out that there is a system header
# that does `if (a = b)'.
gnu-nat.o: $(srcdir)/gnu-nat.c
	$(COMPILE.pre) $(INTERNAL_WARN_CFLAGS) $(COMPILE.post) $(srcdir)/gnu-nat.c
	$(POSTCOMPILE)

@


1.1052
log
@	* Makefile.in (HFILES_NO_SRCDIR): Remove gdb-events.h, gstdint.h.
@
text
@a1382 6
# FIXME: Procfs.o gets -Wformat errors because things like pid_t don't
# match output format strings.
procfs.o: $(srcdir)/procfs.c
	$(COMPILE.pre) $(INTERNAL_WARN_CFLAGS) $(COMPILE.post) $(srcdir)/procfs.c
	$(POSTCOMPILE)

@


1.1051
log
@gdb/
	* inferior.h: Forward declare struct ui_out.
	Forward declare struct private_inferior.
	(struct inferior): New.
	(init_inferior_list, add_inferior, add_inferior_silent)
	(delete_inferior, delete_inferior_silent, detach_inferior)
	(gdb_inferior_id_to_pid, pid_to_gdb_inferior_id, in_inferior_list)
	(valid_inferior_id, find_inferior_pid): New functions.
	(inferior_callback_func): New typedef.
	(iterate_over_inferiors, print_inferior, have_inferiors)
	(current_inferior): New functions.
	* inferior.c: New file.

	* Makefile.in (SFILES): Add inferior.c.
	(COMMON_OBS): Add inferior.o.

gdb/doc/
	* gdb.texinfo (Inferiors): New section.
@
text
@d679 1
a679 1
exec.h m32r-tdep.h osabi.h gdb-events.h gdbcore.h solib-som.h \
d696 1
a696 1
objfiles.h vec.h disasm.h mips-tdep.h gstdint.h ser-base.h \
@


1.1051.2.1
log
@2008-09-30  Michael Snyder  <msnyder@@vmware.com>

	User interface for reverse execution.
	* Makefile.in (reverse.c): New file.
	* reverse.c: New file.  User interface for reverse execution.
@
text
@d642 1
a642 1
	regcache.c reggroups.c remote.c remote-fileio.c reverse.c \
d781 1
a781 2
	exec.o reverse.o \
	bcache.o objfiles.o observer.o minsyms.o maint.o demangle.o \
@


1.1051.2.2
log
@2008-09-30  Hui Zhu  <teawater@@gmail.com>
	Add process record and replay to GDB.
	* record.c, record.h: New files. Record and reverse target.
	* gdbarch.sh: New methods process_record and process_record_dasm.
	* gdbarch.c, gdbarch.h: Re-generate.
	* target.h (enum strata): Add record_stratum.
	* target.h (target_ops): Add a element "to_support_record_wait".
	Default value is 0. meaning that this target doesn't support record
	wait.
	* target.c: Add include of "record.h".
	(update_current_target): Set the real beneath function.
	(add_target): Set the default value of "to_support_record_wait".
	pointers.
 	* Makefile.in: Add files record.c, record.o.
@
text
@d659 1
a659 1
	inferior.c record.c
d809 1
a809 1
	inferior.o record.o
@


1.1051.2.3
log
@2008-09-30  Hui Zhu  <teawater@@gmail.com>

	Add process record and replay to Linux.
	* linux-record.c, linux-record.h: New files.
	* config/i386/linux.mh: Add linux-record.o to NATDEPFILES.
	* Makefile.in: Add files linux-record.c, linux-record.o.
@
text
@d517 1
a517 1
	corelow.o linux-record.o
d1298 1
a1298 1
	linux-fork.c linux-record.c \
@


1.1050
log
@gdb/
	* Makefile.in (generated_files): Add $(NAT_GENERATED_FILES).
	* config/i386/i386gnu.mh (NAT_GENERATED_FILES): New.

gdb/doc/
	* gdbint.texinfo (Native Debugging): Mention NAT_GENERATED_FILES.
@
text
@d658 2
a659 1
	xml-tdesc.c xml-support.c
d807 2
a808 1
	target-descriptions.o target-memory.o xml-tdesc.o xml-builtin.o
@


1.1049
log
@	* Makefile.in (gnu-nat.o): New rule.
@
text
@d834 2
a835 1
generated_files = config.h observer.h observer.inc ada-lex.c $(GNULIB_H)
@


1.1048
log
@* Makefile.in: Remove page break; OpenBSD make chokes on them.
@
text
@d1346 7
@


1.1047
log
@	* Makefile.in (stamp-h): Also create .deps.
@
text
@a1841 2


@


1.1046
log
@	* Makefile.in (generated_files): Add GNULIB_H.
@
text
@d1187 1
a1187 1
	  CONFIG_COMMANDS=default \
@


1.1045
log
@	* Makefile.in (python.o): Remove dependencies.  Use COMPILE and
	POSTCOMPILE.
	(python-utils.o): Likewise.
@
text
@d834 1
a834 1
generated_files = config.h observer.h observer.inc ada-lex.c
@


1.1044
log
@gdb/
	* aclocal.m4, configure: Rebuild.
	* configure.in: Call ZW_CREATE_DEPDIR,
	ZW_PROG_COMPILER_DEPENDENCIES, AC_PROG_MAKE_SET.
	(MAKE, GMAKE): New substs.
	* acinclude.m4: Include depstand.m4.
	* Makefile.in (DEPMODE, DEPDIR, COMPILE.post, COMPILE.pre,
	COMPILE, POSTCOMPILE, depcomp): New variables.
	Remove all _h variables.
	Remove many .o targets.
	($(srcdir)/copying.c): avoid backslash-newline after comment
	sign (@@maintainer_mode_true@@).
	(HFILES_NO_SRCDIR): Regenerate.
	(generated_files): New variable.
	(all_gdbtk_cflags): Likewise.
	(.c.o): Rewrote.
	(init.o, version.o, copying.o): Remove.
	(distclean): Remove DEPDIR.
	(test-cp-name-parser.o, hpux-thread.o, main.o, monitor.o,
	printcmd.o, procfs.o, v850ice.o): Rewrite.
	(cli-cmds.o, cli-decode.o, cli-dump.o, cli-interp.o, cli-logging.o,
	cli-script.o, cli-setshow.o, cli-utils.o): Likewise.
	(gdbtk.o, gdbtk-bp.o, gdbtk-cmds.o, gdbtk-hooks.o, gdbtk-interp.o,
	gdbtk-main.o, gdbtk-register.o, gdbtk-stack.o, gdbtk-varobj.o,
	gdbtk-wrapper.o): Likewise.
	(mi-cmd-break.o, mi-cmd-disas.o, mi-cmd-env.o, mi-cmd-file.o,
	mi-cmds.o, mi-cmd-stack.o, mi-cmd-target.o, mi-cmd-var.o,
	mi-console.o, mi-getopt.o, mi-interp.o, mi-main.o, mi-out.o,
	mi-parse.o, mi-symbol-cmds.o, mi-common.o, signals.o, tui.o,
	tui-command.o, tui-data.o, tui-disasm.o, tui-file.o, tui-hooks.o,
	tui-interp.o, tui-io.o, tui-layout.o, tui-main.o, tui-out.o,
	tui-regs.o, tui-source.o, tui-stack.o, tui-win.o, tui-windata.o,
	tui-wingeneral.o, tui-winsource.o): Likewise.
	(all_object_files): New variable.
	($(all_object_files)): New target.
	Include dependency files, when using GNU Make.

gdb/gdbserver/
	* Makefile.in (GDBREPLAY_OBS): New variable.
	(gdbreplay$(EXEEXT)): Use it to avoid unportable $^.
@
text
@d1825 17
a1882 18
#
# gdb/python/ dependencies
#
# Need to explicitly specify the compile rule as make will do nothing
# or try to compile the object file into the sub-directory.

# Flags needed to compile Python code
PYTHON_CFLAGS=@@PYTHON_CFLAGS@@

python.o: $(srcdir)/python/python.c $(defs_h) $(python_h) \
	$(command_h) $(libiberty_h) $(cli_decode_h) $(charset_h) $(top_h) \
	$(exceptions_h) $(python_internal_h) $(version_h) $(cli_script_h) \
	$(ui_out_h) $(target_h) $(gdbthread_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(PYTHON_CFLAGS) $(srcdir)/python/python.c
python-utils.o: $(srcdir)/python/python-utils.c $(defs_h) $(python_internal_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(PYTHON_CFLAGS) \
	  $(srcdir)/python/python-utils.c -o python-utils.o

@


1.1043
log
@Initial python support.

gdb/
2008-08-06  Vladimir Prus  <vladimir@@codesourcery.com>
	    Tom Tromey  <tromey@@redhat.com>
	    Thiago Jung Bauermann  <bauerman@@br.ibm.com>
	    Doug Evans  <dje@@google.com>

	* Makefile.in (SUBDIR_PYTHON_OBS, SUBDIR_PYTHON_SRCS,
	SUBDIR_PYTHON_DEPS, SUBDIR_PYTHON_LDFLAGS, SUBDIR_PYTHON_CFLAGS,
	PYTHON_CFLAGS): New.
	(python_h, python_internal_h): New.
	(cli-script.o): Depend on python.h
	(python.o, python-utils.o): New.
	* cli/cli-script.c (print_command_lines): Handle python_control.
	(execute_control_command): Handle python_control.
	(execute_control_command_untraced): New function.
	(while_command): Call execute_control_command_untraced.
	(if_command): Likewise.
	(get_command_line): Remove static attribute.
	(read_next_line): Handle "python".
	(recurse_read_control_structure): Handle python_control.
	(read_command_lines): Handle python_control.
	Include python.h.
	* cli/cli-script.h (get_command_line): Add prototype.
	(execute_control_command_untraced): Likewise.
	* configure.ac: Add --with-python.
	* defs.h (enum command_control_type) <python_control>: New
	constant.
	* python/python-internal.h: New file.
	* python/python.c: New file.
	* python/python.h: New file.
	* python/python-utils.c: New file.
	* NEWS: Mention Python scripting support and its new commands.

gdb/doc/
2008-08-06  Tom Tromey  <tromey@@redhat.com>

	* gdb.texinfo (Extending GDB): New chapter.
	(Sequences): Demoted chapter, now a section under the new
	Extending GDB chapter.
	(Python): New section.

gdb/testsuite/
2008-08-06  Tom Tromey  <tromey@@redhat.com>

	* gdb.python/python.exp: New file.
@
text
@d86 12
a661 351
# "system" headers.  Using these in dependencies is a rather personal
# choice. (-rich, summer 1993)
# (Why would we not want to depend on them?  If one of these changes in a
# non-binary-compatible way, it is a real pain to remake the right stuff
# without these dependencies -kingdon, 13 Mar 1994)
aout_aout64_h =	$(INCLUDE_DIR)/aout/aout64.h
aout_stabs_gnu_h =	$(INCLUDE_DIR)/aout/stabs_gnu.h
getopt_h =	$(INCLUDE_DIR)/getopt.h
floatformat_h =	$(INCLUDE_DIR)/floatformat.h
bfd_h =		$(BFD_DIR)/bfd.h
coff_sym_h =	$(INCLUDE_DIR)/coff/sym.h
coff_symconst_h =	$(INCLUDE_DIR)/coff/symconst.h
coff_ecoff_h =	$(INCLUDE_DIR)/coff/ecoff.h
coff_internal_h =	$(INCLUDE_DIR)/coff/internal.h
dis_asm_h =	$(INCLUDE_DIR)/dis-asm.h $(bfd_h)
elf_common_h =	$(INCLUDE_DIR)/elf/common.h
elf_internal_h =	$(INCLUDE_DIR)/elf/internal.h
elf_reloc_macros_h =	$(INCLUDE_DIR)/elf/reloc-macros.h
elf_sh_h =	$(INCLUDE_DIR)/elf/sh.h
elf_arm_h =	$(INCLUDE_DIR)/elf/arm.h $(elf_reloc_macros_h)
elf_bfd_h =	$(BFD_SRC)/elf-bfd.h
elf_frv_h =	$(INCLUDE_DIR)/elf/frv.h $(elf_reloc_macros_h)
elf_m32c_h =    $(INCLUDE_DIR)/elf/m32c.h $(elf_reloc_macros_h)
elf_mep_h =     $(INCLUDE_DIR)/elf/mep.h $(elf_reloc_macros_h)
elf_ppc_h =     $(INCLUDE_DIR)/elf/ppc.h $(elf_reloc_macros_h)
libaout_h =	$(BFD_SRC)/libaout.h
libiberty_h =	$(INCLUDE_DIR)/libiberty.h
libbfd_h =	$(BFD_SRC)/libbfd.h
remote_sim_h =	$(INCLUDE_DIR)/gdb/remote-sim.h
demangle_h =    $(INCLUDE_DIR)/demangle.h
obstack_h =     $(INCLUDE_DIR)/obstack.h
opcode_m68hc11_h = $(INCLUDE_DIR)/opcode/m68hc11.h
readline_h = 	$(READLINE_SRC)/readline.h
readline_tilde_h =	$(READLINE_SRC)/tilde.h
readline_history_h =	$(READLINE_SRC)/history.h
frv_desc_h =	$(OPCODES_SRC)/frv-desc.h
mep_desc_h =	$(OPCODES_SRC)/mep-desc.h
mep_opc_h =	$(OPCODES_SRC)/mep-opc.h
sh_opc_h = 	$(OPCODES_SRC)/sh-opc.h
gdb_callback_h = $(INCLUDE_DIR)/gdb/callback.h
gdb_fileio_h = $(INCLUDE_DIR)/gdb/fileio.h
gdb_sim_arm_h =	$(INCLUDE_DIR)/gdb/sim-arm.h
gdb_sim_frv_h = $(INCLUDE_DIR)/gdb/sim-frv.h
gdb_sim_m32c_h = $(INCLUDE_DIR)/gdb/sim-m32c.h
gdb_sim_ppc_h =	$(INCLUDE_DIR)/gdb/sim-ppc.h
gdb_sim_sh_h =	$(INCLUDE_DIR)/gdb/sim-sh.h
splay_tree_h =  $(INCLUDE_DIR)/splay-tree.h
safe_ctype_h =  $(INCLUDE_DIR)/safe-ctype.h
hashtab_h =	$(INCLUDE_DIR)/hashtab.h
filenames_h =	$(INCLUDE_DIR)/filenames.h

decimal128_h = $(LIBDECNUMBER_DIR)/dpd/decimal128.h
decimal64_h = $(LIBDECNUMBER_DIR)/dpd/decimal64.h
decimal32_h = $(LIBDECNUMBER_DIR)/dpd/decimal32.h

#
# $BUILD/ headers
#

config_h = config.h
exc_request_U_h = exc_request_U.h
exc_request_S_h = exc_request_S.h
msg_reply_S_h = msg_reply_S.h
msg_U_h = msg_U.h
notify_S_h = notify_S.h
observer_h = observer.h
observer_inc = observer.inc
process_reply_S_h = process_reply_S.h

#
# config/ headers
#

nm_h =		@@nm_h@@

#
# gdb/ headers
#

ada_lang_h = ada-lang.h $(value_h) $(gdbtypes_h) $(breakpoint_h)
ada_lex_c = ada-lex.c $(gdb_string_h)
addrmap_h = addrmap.h
alphabsd_tdep_h = alphabsd-tdep.h
alpha_tdep_h = alpha-tdep.h
amd64_linux_tdep_h = amd64-linux-tdep.h
amd64_nat_h = amd64-nat.h
amd64_tdep_h = amd64-tdep.h $(i386_tdep_h)
annotate_h = annotate.h $(symtab_h) $(gdbtypes_h)
arch_utils_h = arch-utils.h
arm_linux_tdep_h = arm-linux-tdep.h
arm_tdep_h = arm-tdep.h
auxv_h = auxv.h
ax_gdb_h = ax-gdb.h
ax_h = ax.h $(doublest_h)
bcache_h = bcache.h
bfd_target_h = bfd-target.h
block_h = block.h
breakpoint_h = breakpoint.h $(frame_h) $(value_h) $(vec_h)
bsd_kvm_h = bsd-kvm.h
bsd_uthread_h = bsd-uthread.h
buildsym_h = buildsym.h
call_cmds_h = call-cmds.h
charset_h = charset.h
c_lang_h = c-lang.h $(value_h) $(macroexp_h)
cli_out_h = cli-out.h
coff_pe_read_h = coff-pe-read.h
command_h = command.h
complaints_h = complaints.h
completer_h = completer.h
cp_abi_h = cp-abi.h
cp_support_h = cp-support.h $(symtab_h)
dcache_h = dcache.h
# Depend on $(GNULIB_H), since generated files are created in the gnulib build.
defs_h = defs.h $(config_h) $(ansidecl_h) $(gdb_locale_h) $(gdb_signals_h) \
	$(libiberty_h) $(bfd_h) $(ui_file_h) $(nm_h) \
	$(fopen_bin_h) $(gdbarch_h) $(GNULIB_H)
dictionary_h = dictionary.h
disasm_h = disasm.h
doublest_h = doublest.h $(floatformat_h)
dummy_frame_h = dummy-frame.h
dfp_h = dfp.h
dwarf2expr_h = dwarf2expr.h
dwarf2_frame_h = dwarf2-frame.h
dwarf2loc_h = dwarf2loc.h
environ_h = environ.h
event_loop_h = event-loop.h
event_top_h = event-top.h
exceptions_h = exceptions.h $(ui_out_h)
exec_h = exec.h $(target_h)
expression_h = expression.h $(symtab_h) $(doublest_h)
fbsd_nat_h = fbsd-nat.h
f_lang_h = f-lang.h
frame_base_h = frame-base.h
frame_h = frame.h
frame_unwind_h = frame-unwind.h $(frame_h)
frv_tdep_h = frv-tdep.h
gdbarch_h = gdbarch.h
gdb_assert_h = gdb_assert.h
gdbcmd_h = gdbcmd.h $(command_h) $(ui_out_h)
gdbcore_h = gdbcore.h $(bfd_h)
gdb_curses_h = gdb_curses.h
gdb_dirent_h = gdb_dirent.h
gdb_h = gdb.h
gdb_expat_h = gdb_expat.h
gdb_locale_h = gdb_locale.h
gdb_obstack_h = gdb_obstack.h $(obstack_h)
gdb_proc_service_h = gdb_proc_service.h $(gregset_h)
gdb_ptrace_h = gdb_ptrace.h
gdb_regex_h = gdb_regex.h $(xregex_h)
gdb_select_h = gdb_select.h
gdb_stabs_h = gdb-stabs.h
gdb_stat_h = gdb_stat.h
gdb_string_h = gdb_string.h
gdb_thread_db_h = gdb_thread_db.h
gdbthread_h = gdbthread.h $(breakpoint_h) $(frame_h) $(ui_out_h) $(inferior_h)
gdbtypes_h = gdbtypes.h $(hashtab_h)
gdb_vfork_h = gdb_vfork.h
gdb_wait_h = gdb_wait.h
glibc_tdep_h = glibc-tdep.h
gnu_nat_h = gnu-nat.h
gnu_v2_abi_h = gnu-v2-abi.h
gregset_h = gregset.h
hppa_tdep_h = hppa-tdep.h
i386bsd_nat_h = i386bsd-nat.h
i386_cygwin_tdep_h = i386-cygwin-tdep.h
i386_linux_tdep_h = i386-linux-tdep.h
i386_tdep_h = i386-tdep.h
i387_tdep_h = i387-tdep.h
ia64_tdep_h = ia64-tdep.h
infcall_h = infcall.h
inf_child_h = inf-child.h
inferior_h = inferior.h $(breakpoint_h) $(target_h) $(frame_h)
inf_loop_h = inf-loop.h
inflow_h = inflow.h $(terminal_h)
inf_ptrace_h = inf-ptrace.h
inf_ttrace_h = inf-ttrace.h
interps_h = interps.h $(exceptions_h)
jv_lang_h = jv-lang.h
language_h = language.h
libunwind_frame_h = libunwind-frame.h $(libunwind_h)
linespec_h = linespec.h
linux_fork_h = linux-fork.h
linux_nat_h = linux-nat.h $(target_h)
m2_lang_h = m2-lang.h
m32r_tdep_h = m32r-tdep.h
m68k_tdep_h = m68k-tdep.h
m88k_tdep_h = m88k-tdep.h
macroexp_h = macroexp.h
macroscope_h = macroscope.h $(macrotab_h) $(symtab_h)
macrotab_h = macrotab.h
main_h = main.h
mdebugread_h = mdebugread.h $(coff_sym_h) $(coff_symconst_h)
memattr_h = memattr.h $(vec_h)
mips_linux_tdep_h = mips-linux-tdep.h
mipsnbsd_tdep_h = mipsnbsd-tdep.h
mips_tdep_h = mips-tdep.h
memory_map_h = memory-map.h $(memattr_h)
mn10300_tdep_h = mn10300-tdep.h
monitor_h = monitor.h
nbsd_nat_h = nbsd-nat.h
nbsd_tdep_h = nbsd-tdep.h
nto_tdep_h = nto-tdep.h $(solist_h) $(osabi_h) $(regset_h)
objc_lang_h = objc-lang.h
objfiles_h = objfiles.h $(gdb_obstack_h) $(symfile_h)
obsd_tdep_h = obsd-tdep.h
osabi_h = osabi.h
parser_defs_h = parser-defs.h $(doublest_h)
p_lang_h = p-lang.h
ppcnbsd_tdep_h = ppcnbsd-tdep.h
ppcobsd_tdep_h = ppcobsd-tdep.h
ppc_tdep_h = ppc-tdep.h
ppc_linux_tdep_h = ppc-linux-tdep.h
proc_utils_h = proc-utils.h
prologue_value_h = prologue-value.h
regcache_h = regcache.h
reggroups_h = reggroups.h
regset_h = regset.h
remote_fileio_h = remote-fileio.h
remote_h = remote.h
rs6000_tdep_h = rs6000-tdep.h
s390_tdep_h = s390-tdep.h
scm_lang_h = scm-lang.h $(scm_tags_h)
scm_tags_h = scm-tags.h
score_tdep_h = score-tdep.h
sentinel_frame_h = sentinel-frame.h
serial_h = serial.h
ser_base_h = ser-base.h
ser_tcp_h = ser-tcp.h
ser_unix_h = ser-unix.h
shnbsd_tdep_h = shnbsd-tdep.h
sh_tdep_h = sh-tdep.h
sim_regno_h = sim-regno.h
sol2_tdep_h = sol2-tdep.h
solib_h = solib.h
solib_irix_h = solib-irix.h
solib_pa64_h = solib-pa64.h
solib_som_h = solib-som.h
solib_svr4_h = solib-svr4.h
solib_target_h = solib-target.h
solist_h = solist.h $(symtab_h)
source_h = source.h
sparc64_tdep_h = sparc64-tdep.h $(sparc_tdep_h)
sparc_nat_h = sparc-nat.h
sparc_tdep_h = sparc-tdep.h
spu_tdep_h = spu-tdep.h
srec_h = srec.h
stabsread_h = stabsread.h
stack_h = stack.h
symfile_h = symfile.h $(symtab_h)
symtab_h = symtab.h
target_h = target.h $(bfd_h) $(symtab_h) $(dcache_h) $(memattr_h) $(vec_h)
target_descriptions_h = target-descriptions.h
terminal_h = terminal.h
top_h = top.h
tracepoint_h = tracepoint.h
trad_frame_h = trad-frame.h $(frame_h)
tramp_frame_h = tramp-frame.h $(frame_h)
typeprint_h = typeprint.h
ui_file_h = ui-file.h
ui_out_h = ui-out.h
user_regs_h = user-regs.h
valprint_h = valprint.h
value_h = value.h $(doublest_h) $(frame_h) $(symtab_h) $(gdbtypes_h) \
	$(expression_h)
varobj_h = varobj.h $(symtab_h) $(gdbtypes_h) $(vec_h)
vax_tdep_h = vax-tdep.h
vec_h = vec.h $(gdb_assert_h) $(gdb_string_h)
version_h = version.h
wrapper_h = wrapper.h $(gdb_h)
xcoffsolib_h = xcoffsolib.h
xml_support_h = xml-support.h $(gdb_obstack_h) $(vec_h)
xml_tdesc_h = xml-tdesc.h
xtensa_tdep_h = xtensa-tdep.h 

#
# gdb/cli/ headers
#

cli_cmds_h = $(srcdir)/cli/cli-cmds.h
cli_decode_h = $(srcdir)/cli/cli-decode.h $(command_h)
cli_dump_h = $(srcdir)/cli/cli-dump.h
cli_script_h = $(srcdir)/cli/cli-script.h
cli_setshow_h = $(srcdir)/cli/cli-setshow.h
cli_utils_h = $(srcdir)/cli/cli-utils.h

#
# gdb/mi/ headers
#

mi_cmds_h = $(srcdir)/mi/mi-cmds.h
mi_console_h = $(srcdir)/mi/mi-console.h
mi_getopt_h = $(srcdir)/mi/mi-getopt.h
mi_main_h = $(srcdir)/mi/mi-main.h
mi_out_h = $(srcdir)/mi/mi-out.h
mi_parse_h = $(srcdir)/mi/mi-parse.h
mi_common_h = $(srcdir)/mi/mi-common.h

#
# gdb/tui/ headers
#

tui_command_h = $(srcdir)/tui/tui-command.h
tui_data_h = $(srcdir)/tui/tui-data.h $(tui_h) $(gdb_curses_h)
tui_disasm_h = $(srcdir)/tui/tui-disasm.h $(tui_h) $(tui_data_h)
tui_file_h = $(srcdir)/tui/tui-file.h
tui_h = $(srcdir)/tui/tui.h
tui_hooks_h = $(srcdir)/tui/tui-hooks.h
tui_io_h = $(srcdir)/tui/tui-io.h
tui_layout_h = $(srcdir)/tui/tui-layout.h $(tui_h) $(tui_data_h)
tui_regs_h = $(srcdir)/tui/tui-regs.h $(tui_data_h)
tui_source_h = $(srcdir)/tui/tui-source.h $(tui_data_h)
tui_stack_h = $(srcdir)/tui/tui-stack.h
tui_windata_h = $(srcdir)/tui/tui-windata.h $(tui_data_h)
tui_wingeneral_h = $(srcdir)/tui/tui-wingeneral.h
tui_win_h = $(srcdir)/tui/tui-win.h $(tui_data_h)
tui_winsource_h = $(srcdir)/tui/tui-winsource.h $(tui_data_h)

#
# gdb/python/ headers
#

python_h = $(srcdir)/python/python.h $(value_h)
python_internal_h = $(srcdir)/python/python-internal.h

# gdb/features preparsed descriptions
features_headers = $(defs_h) $(gdbtypes_h) $(target_descriptions_h)
arm_with_iwmmxt_c = $(srcdir)/features/arm-with-iwmmxt.c $(features_headers)
mips_linux_c = $(srcdir)/features/mips-linux.c $(features_headers)
mips64_linux_c = $(srcdir)/features/mips64-linux.c $(features_headers)
powerpc_32_c = $(srcdir)/features/rs6000/powerpc-32.c $(features_headers)
powerpc_32l_c = $(srcdir)/features/rs6000/powerpc-32l.c $(features_headers)
powerpc_altivec32_c = $(srcdir)/features/rs6000/powerpc-altivec32.c $(features_headers)
powerpc_altivec32l_c = $(srcdir)/features/rs6000/powerpc-altivec32l.c $(features_headers)
powerpc_403_c = $(srcdir)/features/rs6000/powerpc-403.c $(features_headers)
powerpc_403gc_c = $(srcdir)/features/rs6000/powerpc-403gc.c $(features_headers)
powerpc_505_c = $(srcdir)/features/rs6000/powerpc-505.c $(features_headers)
powerpc_601_c = $(srcdir)/features/rs6000/powerpc-601.c $(features_headers)
powerpc_602_c = $(srcdir)/features/rs6000/powerpc-602.c $(features_headers)
powerpc_603_c = $(srcdir)/features/rs6000/powerpc-603.c $(features_headers)
powerpc_604_c = $(srcdir)/features/rs6000/powerpc-604.c $(features_headers)
powerpc_64_c = $(srcdir)/features/rs6000/powerpc-64.c $(features_headers)
powerpc_64l_c = $(srcdir)/features/rs6000/powerpc-64l.c $(features_headers)
powerpc_altivec64_c = $(srcdir)/features/rs6000/powerpc-altivec64.c $(features_headers)
powerpc_altivec64l_c = $(srcdir)/features/rs6000/powerpc-altivec64l.c $(features_headers)
powerpc_7400_c = $(srcdir)/features/rs6000/powerpc-7400.c $(features_headers)
powerpc_750_c = $(srcdir)/features/rs6000/powerpc-750.c $(features_headers)
powerpc_860_c = $(srcdir)/features/rs6000/powerpc-860.c $(features_headers)
powerpc_e500_c = $(srcdir)/features/rs6000/powerpc-e500.c $(features_headers)
powerpc_e500l_c = $(srcdir)/features/rs6000/powerpc-e500l.c $(features_headers)
rs6000_c = $(srcdir)/features/rs6000/rs6000.c $(features_headers)

d668 61
a728 15
HFILES_NO_SRCDIR = bcache.h buildsym.h call-cmds.h defs.h \
	exceptions.h \
	environ.h $(gdbcmd_h) gdb.h gdbcore.h \
	gdb-stabs.h $(inferior_h) language.h monitor.h \
	objfiles.h parser-defs.h serial.h solib.h \
	symfile.h stabsread.h target.h terminal.h typeprint.h \
	xcoffsolib.h \
	macrotab.h macroexp.h macroscope.h \
	prologue-value.h \
	ada-lang.h c-lang.h f-lang.h \
	jv-lang.h \
	m2-lang.h  p-lang.h \
	complaints.h valprint.h \
	gdbthread.h \
	dcache.h top.h solib-som.h
d832 4
a835 2
# Prevent Sun make from putting in the machine type.  Setting
# TARGET_ARCH to nothing works for SunOS 3, 4.0, but not for 4.1.
d837 2
a838 1
	$(CC) -c $(INTERNAL_CFLAGS) $<
d957 3
a959 4
test-cp-name-parser.o: cp-name-parser.c $(safe_ctype_h) $(libiberty_h) \
  $(demangle_h)
	$(CC) -c $(INTERNAL_CFLAGS) -DTEST_CPNAMES \
		-o test-cp-name-parser.o cp-name-parser.c
a1050 2
init.o: init.c $(defs_h) $(call_cmds_h)

d1136 1
d1215 1
a1215 2
$(srcdir)/copying.c: @@MAINTAINER_MODE_TRUE@@ \
		$(srcdir)/../COPYING3 $(srcdir)/copying.awk
a1226 1
version.o: version.c $(version_h)
a1345 4
# Provide explicit rule/dependency - works for more makes.
copying.o: $(srcdir)/copying.c
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/copying.c

d1347 3
a1349 3
	$(CC) -c $(INTERNAL_CFLAGS) -I$(srcdir)/osf-share \
		-I$(srcdir)/osf-share/HP800 -I/usr/include/dce \
		$(srcdir)/hpux-thread.c
d1352 3
a1354 3
main.o: main.c
	$(CC) -c $(INTERNAL_CFLAGS) $(TARGET_SYSTEM_ROOT_DEFINE) \
		-DBINDIR=\"$(bindir)\" $(srcdir)/main.c
d1363 2
a1364 1
	$(CC) -c $(INTERNAL_WARN_CFLAGS) $(srcdir)/monitor.c
d1369 3
a1371 2
	$(CC) -c $(INTERNAL_CFLAGS_BASE) $(GDB_WARN_CFLAGS_NO_FORMAT) \
	   $(GDB_WERROR_CFLAGS) $(srcdir)/printcmd.c
d1376 2
a1377 1
	$(CC) -c $(INTERNAL_WARN_CFLAGS) $(srcdir)/procfs.c
d1464 1
a1464 1
.y.c: 
a1518 1223
# gdb/ dependencies
#

ada-exp.o: ada-exp.c $(defs_h) $(gdb_string_h) $(expression_h) $(value_h) \
	$(parser_defs_h) $(language_h) $(ada_lang_h) $(bfd_h) $(symfile_h) \
	$(objfiles_h) $(frame_h) $(block_h) $(ada_lex_c)
ada-lang.o: ada-lang.c $(defs_h) $(gdb_string_h) $(demangle_h) \
	$(gdb_regex_h) $(frame_h) $(symtab_h) $(gdbtypes_h) $(gdbcmd_h) \
	$(expression_h) $(parser_defs_h) $(language_h) $(c_lang_h) \
	$(inferior_h) $(symfile_h) $(objfiles_h) $(breakpoint_h) \
	$(gdbcore_h) $(hashtab_h) $(gdb_obstack_h) $(ada_lang_h) \
	$(completer_h) $(gdb_stat_h) $(ui_out_h) $(block_h) $(infcall_h) \
	$(dictionary_h) $(exceptions_h) $(annotate_h) $(valprint_h) \
	$(source_h) $(observer_h) $(vec_h)
ada-typeprint.o: ada-typeprint.c $(defs_h) $(gdb_obstack_h) $(bfd_h) \
	$(symtab_h) $(gdbtypes_h) $(expression_h) $(value_h) $(gdbcore_h) \
	$(target_h) $(command_h) $(gdbcmd_h) $(language_h) $(demangle_h) \
	$(c_lang_h) $(typeprint_h) $(ada_lang_h) $(gdb_string_h)
ada-valprint.o: ada-valprint.c $(defs_h) $(gdb_string_h) $(symtab_h) \
	$(gdbtypes_h) $(expression_h) $(value_h) $(demangle_h) $(valprint_h) \
	$(language_h) $(annotate_h) $(ada_lang_h) $(c_lang_h) $(infcall_h) \
	$(exceptions_h)
addrmap.o: addrmap.c $(defs_h) $(splay_tree_h) $(gdb_obstack_h) $(addrmap_h) \
	$(gdb_assert_h)
aix-thread.o: aix-thread.c $(defs_h) $(gdb_assert_h) $(gdbthread_h) \
	$(target_h) $(inferior_h) $(regcache_h) $(gdbcmd_h) $(ppc_tdep_h) \
	$(gdb_string_h) $(observer_h)
alphabsd-nat.o: alphabsd-nat.c $(defs_h) $(inferior_h) $(regcache_h) \
	$(alpha_tdep_h) $(alphabsd_tdep_h) $(inf_ptrace_h) $(gregset_h) \
	$(bsd_kvm_h)
alphabsd-tdep.o: alphabsd-tdep.c $(defs_h) $(regcache_h) $(alpha_tdep_h) \
	$(alphabsd_tdep_h)
alphafbsd-tdep.o: alphafbsd-tdep.c $(defs_h) $(value_h) $(osabi_h) \
	$(alpha_tdep_h) $(solib_svr4_h)
alpha-linux-nat.o: alpha-linux-nat.c $(defs_h) $(target_h) $(regcache_h) \
	$(linux_nat_h) $(alpha_tdep_h) $(gregset_h)
alpha-linux-tdep.o: alpha-linux-tdep.c $(defs_h) $(frame_h) $(gdb_assert_h) \
	$(gdb_string_h) $(osabi_h) $(solib_svr4_h) $(symtab_h) $(regset_h) \
	$(regcache_h) $(alpha_tdep_h)
alpha-mdebug-tdep.o: alpha-mdebug-tdep.c $(defs_h) $(frame_h) \
	$(frame_unwind_h) $(frame_base_h) $(symtab_h) $(gdbcore_h) \
	$(block_h) $(gdb_assert_h) $(gdb_string_h) $(trad_frame_h) \
	$(alpha_tdep_h) $(mdebugread_h)
alpha-nat.o: alpha-nat.c $(defs_h) $(gdb_string_h) $(inferior_h) \
	$(gdbcore_h) $(target_h) $(regcache_h) $(alpha_tdep_h) $(gregset_h)
alphanbsd-tdep.o: alphanbsd-tdep.c $(defs_h) $(frame_h) $(gdbcore_h) \
	$(regcache_h) $(regset_h) $(value_h) $(osabi_h) $(gdb_string_h) \
	$(gdb_assert_h) $(alpha_tdep_h) $(alphabsd_tdep_h) $(nbsd_tdep_h) \
	$(solib_svr4_h) $(target_h)
alphaobsd-tdep.o: alphaobsd-tdep.c $(defs_h) $(frame_h) $(gdbcore_h) \
	$(osabi_h) $(obsd_tdep_h) $(alpha_tdep_h) $(alphabsd_tdep_h) \
	$(solib_svr4_h)
alpha-osf1-tdep.o: alpha-osf1-tdep.c $(defs_h) $(frame_h) $(gdbcore_h) \
	$(value_h) $(osabi_h) $(gdb_string_h) $(objfiles_h) $(alpha_tdep_h)
alpha-tdep.o: alpha-tdep.c $(defs_h) $(doublest_h) $(frame_h) \
	$(frame_unwind_h) $(frame_base_h) $(dwarf2_frame_h) $(inferior_h) \
	$(symtab_h) $(value_h) $(gdbcmd_h) $(gdbcore_h) $(dis_asm_h) \
	$(symfile_h) $(objfiles_h) $(gdb_string_h) $(linespec_h) \
	$(regcache_h) $(reggroups_h) $(arch_utils_h) $(osabi_h) $(block_h) \
	$(infcall_h) $(elf_bfd_h) $(alpha_tdep_h) $(trad_frame_h)
amd64bsd-nat.o: amd64bsd-nat.c $(defs_h) $(inferior_h) $(regcache_h) \
	$(target_h) $(gdb_assert_h) $(amd64_tdep_h) $(amd64_nat_h) \
	$(inf_ptrace_h)
amd64fbsd-nat.o: amd64fbsd-nat.c $(defs_h) $(inferior_h) $(regcache_h) \
	$(target_h) $(gdb_assert_h) $(fbsd_nat_h) $(amd64_tdep_h) \
	$(amd64_nat_h) $(bsd_kvm_h)
amd64fbsd-tdep.o: amd64fbsd-tdep.c $(defs_h) $(arch_utils_h) $(frame_h) \
	$(gdbcore_h) $(regcache_h) $(osabi_h) $(gdb_assert_h) \
	$(gdb_string_h) $(amd64_tdep_h) $(bsd_uthread_h) $(solib_svr4_h)
amd64-linux-nat.o: amd64-linux-nat.c $(defs_h) $(inferior_h) $(gdbcore_h) \
	$(regcache_h) $(linux_nat_h) $(gdb_assert_h) $(gdb_string_h) \
	$(gdb_proc_service_h) $(gregset_h) $(amd64_tdep_h) \
	$(i386_linux_tdep_h) $(amd64_nat_h) $(amd64_linux_tdep_h)
amd64-linux-tdep.o: amd64-linux-tdep.c $(defs_h) $(frame_h) $(gdbcore_h) \
	$(regcache_h) $(osabi_h) $(symtab_h) $(gdb_string_h) $(amd64_tdep_h) \
	$(solib_svr4_h) $(gdbtypes_h) $(reggroups_h) $(amd64_linux_tdep_h)
amd64-nat.o: amd64-nat.c $(defs_h) $(gdbarch_h) $(regcache_h) \
	$(gdb_assert_h) $(gdb_string_h) $(i386_tdep_h) $(amd64_tdep_h)
amd64nbsd-nat.o: amd64nbsd-nat.c $(defs_h) $(target_h) $(gdb_assert_h) \
	$(amd64_tdep_h) $(amd64_nat_h) $(nbsd_nat_h)
amd64nbsd-tdep.o: amd64nbsd-tdep.c $(defs_h) $(arch_utils_h) $(frame_h) \
	$(gdbcore_h) $(osabi_h) $(symtab_h) $(gdb_assert_h) $(amd64_tdep_h) \
	$(nbsd_tdep_h) $(solib_svr4_h)
amd64obsd-nat.o: amd64obsd-nat.c $(defs_h) $(gdbcore_h) $(regcache_h) \
	$(target_h) $(gdb_assert_h) $(amd64_tdep_h) $(amd64_nat_h) \
	$(bsd_kvm_h)
amd64obsd-tdep.o: amd64obsd-tdep.c $(defs_h) $(frame_h) $(frame_unwind_h) \
	$(gdbcore_h) $(symtab_h) $(objfiles_h) $(osabi_h) $(regcache_h) \
	$(regset_h) $(target_h) $(trad_frame_h) $(gdb_assert_h) \
	$(gdb_string_h) $(amd64_tdep_h) $(i387_tdep_h) $(solib_svr4_h) \
	$(bsd_uthread_h)
amd64-sol2-tdep.o: amd64-sol2-tdep.c $(defs_h) $(frame_h) $(gdbcore_h) \
	$(regcache_h) $(osabi_h) $(symtab_h) $(gdb_string_h) \
	$(sol2_tdep_h) $(amd64_tdep_h) $(solib_svr4_h)
amd64-tdep.o: amd64-tdep.c $(defs_h) $(arch_utils_h) $(block_h) \
	$(dummy_frame_h) $(frame_h) $(frame_base_h) $(frame_unwind_h) \
	$(inferior_h) $(gdbcmd_h) $(gdbcore_h) $(objfiles_h) $(regcache_h) \
	$(regset_h) $(symfile_h) $(gdb_assert_h) $(amd64_tdep_h) \
	$(i387_tdep_h)
annotate.o: annotate.c $(defs_h) $(annotate_h) $(value_h) $(target_h) \
	$(gdbtypes_h) $(breakpoint_h) $(observer_h)
arch-utils.o: arch-utils.c $(defs_h) $(arch_utils_h) $(buildsym_h) \
	$(gdbcmd_h) $(inferior_h) $(gdb_string_h) $(regcache_h) \
	$(gdb_assert_h) $(sim_regno_h) $(gdbcore_h) $(osabi_h) $(version_h) \
	$(floatformat_h) $(target_descriptions_h) $(objfiles_h)
arm-linux-nat.o: arm-linux-nat.c $(defs_h) $(inferior_h) $(gdbcore_h) \
	$(gdb_string_h) $(regcache_h) $(arm_tdep_h) $(gregset_h) \
	$(target_h) $(linux_nat_h) $(gdb_proc_service_h) $(arm_linux_tdep_h) \
	$(target_descriptions_h) $(arm_with_iwmmxt_c)
arm-linux-tdep.o: arm-linux-tdep.c $(defs_h) $(target_h) $(value_h) \
	$(gdbtypes_h) $(floatformat_h) $(gdbcore_h) $(frame_h) $(regcache_h) \
	$(doublest_h) $(solib_svr4_h) $(osabi_h) $(arm_tdep_h) \
	$(regset_h) $(arm_linux_tdep_h) $(breakpoint_h) \
	$(glibc_tdep_h) $(trad_frame_h) $(tramp_frame_h) $(gdb_string_h)
armnbsd-nat.o: armnbsd-nat.c $(defs_h) $(gdbcore_h) $(inferior_h) \
	$(regcache_h) $(target_h) $(gdb_string_h) $(arm_tdep_h) $(inf_ptrace_h)
armbsd-tdep.o: armbsd-tdep.c $(defs_h) $(osabi_h) $(regcache_h) $(regset_h) \
	$(gdb_assert_h) $(gdb_string_h) $(arm_tdep_h)
armnbsd-tdep.o: armnbsd-tdep.c $(defs_h) $(osabi_h) $(gdb_string_h) \
	$(arm_tdep_h) $(solib_svr4_h)
armobsd-tdep.o: armobsd-tdep.c $(defs_h) $(osabi_h) $(trad_frame_h) \
	$(tramp_frame_h) $(gdb_string_h) $(obsd_tdep_h) $(arm_tdep_h) \
	$(solib_svr4_h)
arm-tdep.o: arm-tdep.c $(defs_h) $(frame_h) $(inferior_h) $(gdbcmd_h) \
	$(gdbcore_h) $(gdb_string_h) $(dis_asm_h) $(regcache_h) \
	$(doublest_h) $(value_h) $(arch_utils_h) $(osabi_h) \
	$(frame_unwind_h) $(frame_base_h) $(trad_frame_h) $(arm_tdep_h) \
	$(gdb_sim_arm_h) $(elf_bfd_h) $(coff_internal_h) $(elf_arm_h) \
	$(gdb_assert_h) $(bfd_in2_h) $(libcoff_h) $(objfiles_h) \
	$(dwarf2_frame_h) $(gdbtypes_h) $(prologue_value_h) \
	$(target_descriptions_h) $(user_regs_h) $(vec_h)
arm-wince-tdep.o: arm-wince-tdep.c $(defs_h) $(osabi_h) \
	$(gdbcore_h) $(target_h) $(solib_h) $(solib_target_h) \
	$(gdb_string_h) $(arm_tdep_h)
auxv.o: auxv.c $(defs_h) $(target_h) $(gdbtypes_h) $(command_h) \
	$(inferior_h) $(valprint_h) $(gdb_assert_h) $(auxv_h) \
	$(elf_common_h)
avr-tdep.o: avr-tdep.c $(defs_h) $(frame_h) $(frame_unwind_h) \
	$(frame_base_h) $(trad_frame_h) $(gdbcmd_h) $(gdbcore_h) \
	$(inferior_h) $(symfile_h) $(arch_utils_h) $(regcache_h) \
	$(gdb_string_h) $(dis_asm_h) $(gdbtypes_h)
ax-gdb.o: ax-gdb.c $(defs_h) $(symtab_h) $(symfile_h) $(gdbtypes_h) \
	$(value_h) $(expression_h) $(command_h) $(gdbcmd_h) $(frame_h) \
	$(target_h) $(ax_h) $(ax_gdb_h) $(gdb_string_h) $(block_h) \
	$(regcache_h)
ax-general.o: ax-general.c $(defs_h) $(ax_h) $(value_h) $(gdb_string_h)
bcache.o: bcache.c $(defs_h) $(gdb_obstack_h) $(bcache_h) $(gdb_string_h) \
	$(gdb_assert_h)
bfd-target.o: bfd-target.c $(defs_h) $(target_h) $(bfd_target_h) \
	$(gdb_assert_h) $(gdb_string_h)
block.o: block.c $(defs_h) $(block_h) $(symtab_h) $(symfile_h) \
	$(gdb_obstack_h) $(cp_support_h) $(addrmap_h)
blockframe.o: blockframe.c $(defs_h) $(symtab_h) $(bfd_h) $(objfiles_h) \
	$(frame_h) $(gdbcore_h) $(value_h) $(target_h) $(inferior_h) \
	$(annotate_h) $(regcache_h) $(gdb_assert_h) $(dummy_frame_h) \
	$(command_h) $(gdbcmd_h) $(block_h)
breakpoint.o: breakpoint.c $(defs_h) $(symtab_h) $(frame_h) $(breakpoint_h) \
	$(gdbtypes_h) $(expression_h) $(gdbcore_h) $(gdbcmd_h) $(value_h) \
	$(command_h) $(inferior_h) $(gdbthread_h) $(target_h) $(language_h) \
	$(gdb_string_h) $(demangle_h) $(annotate_h) $(symfile_h) \
	$(objfiles_h) $(source_h) $(linespec_h) $(completer_h) $(gdb_h) \
	$(ui_out_h) $(cli_script_h) $(gdb_assert_h) $(block_h) $(solib_h) \
	$(solist_h) $(observer_h) $(exceptions_h) \
	$(mi_common_h) $(memattr_h) $(ada_lang_h) $(top_h) $(hashtab_h)
bsd-kvm.o: bsd-kvm.c $(defs_h) $(cli_cmds_h) $(command_h) $(frame_h) \
	$(regcache_h) $(target_h) $(value_h) $(gdbcore_h) $(gdb_assert_h) \
	$(readline_h) $(bsd_kvm_h)
bsd-uthread.o: bsd-uthread.c $(defs_h) $(gdbcore_h) $(gdbthread_h) \
	$(inferior_h) $(objfiles_h) $(observer_h) $(regcache_h) $(solib_h) \
	$(solist_h) $(symfile_h) $(target_h) $(gdb_assert_h) \
	$(gdb_obstack_h) $(bsd_uthread_h)
buildsym.o: buildsym.c $(defs_h) $(bfd_h) $(gdb_obstack_h) $(symtab_h) \
	$(symfile_h) $(objfiles_h) $(gdbtypes_h) $(gdb_assert_h) \
	$(complaints_h) $(gdb_string_h) $(expression_h) $(bcache_h) \
	$(filenames_h) $(macrotab_h) $(demangle_h) $(block_h) \
	$(cp_support_h) $(dictionary_h) $(buildsym_h) $(stabsread_h) \
	$(addrmap_h)
c-exp.o: c-exp.c $(defs_h) $(gdb_string_h) $(expression_h) $(value_h) \
	$(parser_defs_h) $(language_h) $(c_lang_h) $(bfd_h) $(symfile_h) \
	$(objfiles_h) $(charset_h) $(block_h) $(cp_support_h) $(dfp_h)
charset.o: charset.c $(defs_h) $(charset_h) $(gdbcmd_h) $(gdb_assert_h) \
	$(gdb_string_h)
c-lang.o: c-lang.c $(defs_h) $(symtab_h) $(gdbtypes_h) $(expression_h) \
	$(parser_defs_h) $(language_h) $(c_lang_h) $(valprint_h) \
	$(macroscope_h) $(gdb_assert_h) $(charset_h) $(gdb_string_h) \
	$(demangle_h) $(cp_abi_h) $(cp_support_h)
cli-out.o: cli-out.c $(defs_h) $(ui_out_h) $(cli_out_h) $(gdb_string_h) \
	$(gdb_assert_h)
coff-pe-read.o: coff-pe-read.c $(coff_pe_read_h) $(bfd_h) $(defs_h) \
	$(gdbtypes_h) $(symtab_h) $(symfile_h) $(objfiles_h)
coffread.o: coffread.c $(defs_h) $(symtab_h) $(gdbtypes_h) $(demangle_h) \
	$(breakpoint_h) $(bfd_h) $(gdb_obstack_h) $(gdb_string_h) \
	$(coff_internal_h) $(libcoff_h) $(objfiles_h) $(buildsym_h) \
	$(gdb_stabs_h) $(stabsread_h) $(complaints_h) $(target_h) \
	$(gdb_assert_h) $(block_h) $(dictionary_h) $(coff_pe_read_h)
complaints.o: complaints.c $(defs_h) $(complaints_h) $(gdb_assert_h) \
	$(command_h) $(gdbcmd_h)
completer.o: completer.c $(defs_h) $(symtab_h) $(gdbtypes_h) $(expression_h) \
	$(filenames_h) $(language_h) $(cli_decode_h) $(gdbcmd_h) \
	$(readline_h) $(completer_h)
copying.o: copying.c $(defs_h) $(command_h) $(gdbcmd_h)
corefile.o: corefile.c $(defs_h) $(gdb_string_h) $(inferior_h) $(symtab_h) \
	$(command_h) $(gdbcmd_h) $(bfd_h) $(target_h) $(gdbcore_h) \
	$(dis_asm_h) $(gdb_stat_h) $(completer_h) $(exceptions_h)
corelow.o: corelow.c $(defs_h) $(arch_utils_h) $(gdb_string_h) $(frame_h) \
	$(inferior_h) $(symtab_h) $(command_h) $(bfd_h) $(target_h) \
	$(gdbcore_h) $(gdbthread_h) $(regcache_h) $(regset_h) $(symfile_h) \
	$(exec_h) $(readline_h) $(gdb_assert_h) \
	$(exceptions_h) $(solib_h) $(filenames_h)
core-regset.o: core-regset.c $(defs_h) $(command_h) $(gdbcore_h) \
	$(inferior_h) $(target_h) $(regcache_h) $(gdb_string_h) $(gregset_h)
cp-abi.o: cp-abi.c $(defs_h) $(value_h) $(cp_abi_h) $(command_h) $(gdbcmd_h) \
	$(ui_out_h) $(gdb_string_h) $(exceptions_h)
cp-name-parser.o: cp-name-parser.c $(safe_ctype_h) $(libiberty_h) $(demangle_h)
cp-namespace.o: cp-namespace.c $(defs_h) $(cp_support_h) $(gdb_obstack_h) \
	$(symtab_h) $(symfile_h) $(gdb_assert_h) $(block_h) $(objfiles_h) \
	$(gdbtypes_h) $(dictionary_h) $(command_h) $(frame_h)
cp-support.o: cp-support.c $(defs_h) $(cp_support_h) $(gdb_string_h) \
	$(demangle_h) $(gdb_assert_h) $(gdbcmd_h) $(dictionary_h) \
	$(objfiles_h) $(frame_h) $(symtab_h) $(block_h) $(complaints_h) \
	$(gdbtypes_h) $(safe_ctype_h)
cp-valprint.o: cp-valprint.c $(defs_h) $(gdb_obstack_h) $(symtab_h) \
	$(gdbtypes_h) $(expression_h) $(value_h) $(command_h) $(gdbcmd_h) \
	$(demangle_h) $(annotate_h) $(gdb_string_h) $(c_lang_h) $(target_h) \
	$(cp_abi_h) $(valprint_h) $(cp_support_h) $(language_h)
cris-tdep.o: cris-tdep.c $(defs_h) $(frame_h) $(frame_unwind_h) \
	$(frame_base_h) $(trad_frame_h) $(dwarf2_frame_h) $(symtab_h) \
	$(inferior_h) $(gdbtypes_h) $(gdbcore_h) $(gdbcmd_h) $(target_h) \
	$(value_h) $(opcode_cris_h) $(arch_utils_h) $(regcache_h) \
	$(gdb_assert_h) $(objfiles_h) $(solib_h) $(solib_svr4_h) \
	$(gdb_string_h) $(dis_asm_h)
c-typeprint.o: c-typeprint.c $(defs_h) $(gdb_obstack_h) $(bfd_h) $(symtab_h) \
	$(gdbtypes_h) $(expression_h) $(value_h) $(gdbcore_h) $(target_h) \
	$(language_h) $(demangle_h) $(c_lang_h) $(typeprint_h) $(cp_abi_h) \
	$(gdb_string_h)
c-valprint.o: c-valprint.c $(defs_h) $(gdb_string_h) $(symtab_h) \
	$(gdbtypes_h) $(expression_h) $(value_h) $(valprint_h) $(language_h) \
	$(c_lang_h) $(cp_abi_h) $(target_h)
dbug-rom.o: dbug-rom.c $(defs_h) $(gdbcore_h) $(target_h) $(monitor_h) \
	$(serial_h) $(regcache_h) $(m68k_tdep_h)
dbxread.o: dbxread.c $(defs_h) $(gdb_string_h) $(gdb_obstack_h) \
	$(gdb_stat_h) $(symtab_h) $(breakpoint_h) $(target_h) $(gdbcore_h) \
	$(libaout_h) $(objfiles_h) $(buildsym_h) $(stabsread_h) \
	$(gdb_stabs_h) $(demangle_h) $(complaints_h) $(cp_abi_h) \
	$(gdb_assert_h) $(gdb_string_h) $(aout_aout64_h) $(aout_stab_gnu_h)
dcache.o: dcache.c $(defs_h) $(dcache_h) $(gdbcmd_h) $(gdb_string_h) \
	$(gdbcore_h) $(target_h)
demangle.o: demangle.c $(defs_h) $(command_h) $(gdbcmd_h) $(demangle_h) \
	$(gdb_string_h)
dictionary.o: dictionary.c $(defs_h) $(gdb_obstack_h) $(symtab_h) \
	$(buildsym_h) $(gdb_assert_h) $(dictionary_h)
dink32-rom.o: dink32-rom.c $(defs_h) $(gdbcore_h) $(target_h) $(monitor_h) \
	$(serial_h) $(symfile_h) $(inferior_h) $(regcache_h)
disasm.o: disasm.c $(defs_h) $(target_h) $(value_h) $(ui_out_h) \
	$(gdb_string_h) $(disasm_h) $(gdbcore_h) $(dis_asm_h)
doublest.o: doublest.c $(defs_h) $(doublest_h) $(floatformat_h) \
	$(gdb_assert_h) $(gdb_string_h) $(gdbtypes_h)
dsrec.o: dsrec.c $(defs_h) $(serial_h) $(srec_h) $(gdb_assert_h) \
	$(gdb_string_h)
dummy-frame.o: dummy-frame.c $(defs_h) $(dummy_frame_h) $(regcache_h) \
	$(frame_h) $(inferior_h) $(gdb_assert_h) $(frame_unwind_h) \
	$(command_h) $(gdbcmd_h) $(gdb_string_h)
dfp.o: dfp.c $(defs_h) $(expression_h) $(gdbtypes_h) $(value_h) $(dfp_h) \
	$(decimal128_h) $(decimal64_h) $(decimal32_h)
dwarf2expr.o: dwarf2expr.c $(defs_h) $(symtab_h) $(gdbtypes_h) $(value_h) \
	$(gdbcore_h) $(elf_dwarf2_h) $(dwarf2expr_h) $(gdb_assert_h)
dwarf2-frame.o: dwarf2-frame.c $(defs_h) $(dwarf2expr_h) $(elf_dwarf2_h) \
	$(frame_h) $(frame_base_h) $(frame_unwind_h) $(gdbcore_h) \
	$(gdbtypes_h) $(symtab_h) $(objfiles_h) $(regcache_h) \
	$(gdb_assert_h) $(gdb_string_h) $(complaints_h) $(dwarf2_frame_h) \
	$(value_h)
dwarf2loc.o: dwarf2loc.c $(defs_h) $(ui_out_h) $(value_h) $(frame_h) \
	$(gdbcore_h) $(target_h) $(inferior_h) $(ax_h) $(ax_gdb_h) \
	$(regcache_h) $(objfiles_h) $(exceptions_h) $(elf_dwarf2_h) \
	$(dwarf2expr_h) $(dwarf2loc_h) $(gdb_string_h) $(gdb_assert_h)
dwarf2read.o: dwarf2read.c $(defs_h) $(bfd_h) $(symtab_h) $(gdbtypes_h) \
	$(objfiles_h) $(elf_dwarf2_h) $(buildsym_h) $(demangle_h) \
	$(expression_h) $(filenames_h) $(macrotab_h) $(language_h) \
	$(complaints_h) $(bcache_h) $(dwarf2expr_h) $(dwarf2loc_h) \
	$(cp_support_h) $(hashtab_h) $(command_h) $(gdbcmd_h) \
	$(addrmap_h) $(gdb_string_h) $(gdb_assert_h)
elfread.o: elfread.c $(defs_h) $(bfd_h) $(gdb_string_h) $(elf_bfd_h) \
	$(elf_mips_h) $(symtab_h) $(symfile_h) $(objfiles_h) $(buildsym_h) \
	$(stabsread_h) $(gdb_stabs_h) $(complaints_h) $(demangle_h) \
	$(elf_common_h) $(elf_internal_h)
environ.o: environ.c $(defs_h) $(environ_h) $(gdb_string_h)
eval.o: eval.c $(defs_h) $(gdb_string_h) $(symtab_h) $(gdbtypes_h) \
	$(value_h) $(expression_h) $(target_h) $(frame_h) $(language_h) \
	$(f_lang_h) $(cp_abi_h) $(infcall_h) $(objc_lang_h) $(block_h) \
	$(parser_defs_h) $(cp_support_h) $(gdb_assert_h) $(exceptions_h) \
	$(uiout_h) $(regcache_h)
event-loop.o: event-loop.c $(defs_h) $(event_loop_h) $(event_top_h) \
	$(gdb_string_h) $(exceptions_h) $(gdb_assert_h) $(gdb_select_h)
event-top.o: event-top.c $(defs_h) $(top_h) $(inferior_h) $(target_h) \
	$(terminal_h) $(event_loop_h) $(event_top_h) $(interps_h) \
	$(exceptions_h) $(cli_script_h) $(gdbcmd_h) $(readline_h) \
	$(readline_history_h) $(main_h) $(gdbthread_h)
exceptions.o: exceptions.c $(defs_h) $(exceptions_h) $(breakpoint_h) \
	$(target_h) $(inferior_h) $(annotate_h) $(ui_out_h) $(gdb_assert_h) \
	$(gdb_string_h) $(serial_h)
exec.o: exec.c $(defs_h) $(frame_h) $(inferior_h) $(target_h) $(gdbcmd_h) \
	$(language_h) $(symfile_h) $(objfiles_h) $(completer_h) $(value_h) \
	$(exec_h) $(readline_h) $(gdb_string_h) $(gdbcore_h) $(gdb_stat_h) \
	$(xcoffsolib_h) $(observer_h) $(arch_utils_h)
expprint.o: expprint.c $(defs_h) $(symtab_h) $(gdbtypes_h) $(expression_h) \
	$(value_h) $(language_h) $(parser_defs_h) $(user_regs_h) $(target_h) \
	$(gdb_string_h) $(block_h) $(objfiles_h) $(gdb_assert_h)
fbsd-nat.o: fbsd-nat.c $(defs_h) $(gdbcore_h) $(inferior_h) $(regcache_h) \
	$(regset_h) $(gdb_assert_h) $(gdb_string_h) $(elf_bfd_h) \
	$(fbsd_nat_h)
f-exp.o: f-exp.c $(defs_h) $(gdb_string_h) $(expression_h) $(value_h) \
	$(parser_defs_h) $(language_h) $(f_lang_h) $(bfd_h) $(symfile_h) \
	$(objfiles_h) $(block_h)
findcmd.o: findcmd.c $(defs_h) $(gdb_string_h) $(gdbcmd_h) $(value_h) \
	$(target_h)
findvar.o: findvar.c $(defs_h) $(symtab_h) $(gdbtypes_h) $(frame_h) \
	$(value_h) $(gdbcore_h) $(inferior_h) $(target_h) $(gdb_string_h) \
	$(gdb_assert_h) $(floatformat_h) $(symfile_h) $(regcache_h) \
	$(user_regs_h) $(block_h)
f-lang.o: f-lang.c $(defs_h) $(gdb_string_h) $(symtab_h) $(gdbtypes_h) \
	$(expression_h) $(parser_defs_h) $(language_h) $(f_lang_h) \
	$(valprint_h) $(value_h)
fork-child.o: fork-child.c $(defs_h) $(gdb_string_h) $(frame_h) \
	$(inferior_h) $(target_h) $(gdb_wait_h) $(gdb_vfork_h) $(gdbcore_h) \
	$(terminal_h) $(gdbthread_h) $(command_h) $(gdbcmd_h) $(solib_h)
frame-base.o: frame-base.c $(defs_h) $(frame_base_h) $(frame_h) \
	$(gdb_obstack_h)
frame.o: frame.c $(defs_h) $(frame_h) $(target_h) $(value_h) $(inferior_h) \
	$(regcache_h) $(gdb_assert_h) $(gdb_string_h) $(user_regs_h) \
	$(gdb_obstack_h) $(dummy_frame_h) $(sentinel_frame_h) $(gdbcore_h) \
	$(annotate_h) $(language_h) $(frame_unwind_h) $(frame_base_h) \
	$(command_h) $(gdbcmd_h) $(observer_h) $(objfiles_h) $(exceptions_h) \
	$(gdbthread_h)
frame-unwind.o: frame-unwind.c $(defs_h) $(frame_h) $(frame_unwind_h) \
	$(gdb_assert_h) $(dummy_frame_h) $(gdb_obstack_h) $(value_h) \
	$(regcache_h)
frv-linux-tdep.o: frv-linux-tdep.c $(defs_h) $(gdbcore_h) $(target_h) \
	$(frame_h) $(osabi_h) $(regcache_h) $(elf_bfd_h) $(elf_frv_h) \
	$(frv_tdep_h) $(trad_frame_h) $(frame_unwind_h) $(regset_h) \
	$(gdb_string_h)
frv-tdep.o: frv-tdep.c $(defs_h) $(gdb_string_h) $(inferior_h) $(gdbcore_h) \
	$(arch_utils_h) $(regcache_h) $(frame_h) $(frame_unwind_h) \
	$(frame_base_h) $(trad_frame_h) $(dis_asm_h) $(gdb_assert_h) \
	$(sim_regno_h) $(gdb_sim_frv_h) $(opcodes_frv_desc_h) $(symtab_h) \
	$(elf_bfd_h) $(elf_frv_h) $(osabi_h) $(infcall_h) $(solib_h) \
	$(frv_tdep_h)
f-typeprint.o: f-typeprint.c $(defs_h) $(gdb_obstack_h) $(bfd_h) $(symtab_h) \
	$(gdbtypes_h) $(expression_h) $(value_h) $(gdbcore_h) $(target_h) \
	$(f_lang_h) $(gdb_string_h)
f-valprint.o: f-valprint.c $(defs_h) $(gdb_string_h) $(symtab_h) \
	$(gdbtypes_h) $(expression_h) $(value_h) $(valprint_h) $(language_h) \
	$(f_lang_h) $(frame_h) $(gdbcore_h) $(command_h) $(block_h)
gcore.o: gcore.c $(defs_h) $(elf_bfd_h) $(infcall_h) $(inferior_h) \
	$(gdbcore_h) $(objfiles_h) $(symfile_h) $(cli_decode_h) \
	$(gdb_assert_h)
gdbarch.o: gdbarch.c $(defs_h) $(arch_utils_h) $(gdbcmd_h) $(inferior_h) \
	$(symcat_h) $(floatformat_h) $(gdb_assert_h) $(gdb_string_h) \
	$(reggroups_h) $(osabi_h) $(gdb_obstack_h) $(observer_h)
gdb.o: gdb.c $(defs_h) $(main_h) $(gdb_string_h) $(interps_h)
gdbtypes.o: gdbtypes.c $(defs_h) $(gdb_string_h) $(bfd_h) $(symtab_h) \
	$(symfile_h) $(objfiles_h) $(gdbtypes_h) $(expression_h) \
	$(language_h) $(target_h) $(value_h) $(demangle_h) $(complaints_h) \
	$(gdbcmd_h) $(wrapper_h) $(cp_abi_h) $(gdb_assert_h) $(hashtab_h)
glibc-tdep.o: glibc-tdep.c $(defs_h) $(frame_h) $(symtab_h) $(symfile_h) \
	$(objfiles_h) $(glibc_tdep_h)
gnu-nat.o: gnu-nat.c $(gdb_string_h) $(defs_h) $(inferior_h) $(symtab_h) \
	$(value_h) $(language_h) $(target_h) $(gdb_wait_h) $(gdbcmd_h) \
	$(gdbcore_h) $(gdbthread_h) $(gdb_assert_h) $(gdb_obstack_h) \
	$(gnu_nat_h) $(exc_request_S_h) $(notify_S_h) $(process_reply_S_h) \
	$(msg_reply_S_h) $(exc_request_U_h) $(msg_U_h)
gnu-v2-abi.o: gnu-v2-abi.c $(defs_h) $(gdb_string_h) $(symtab_h) \
	$(gdbtypes_h) $(value_h) $(demangle_h) $(cp_abi_h) $(cp_support_h) \
	$(gnu_v2_abi_h)
gnu-v3-abi.o: gnu-v3-abi.c $(defs_h) $(value_h) $(cp_abi_h) $(cp_support_h) \
	$(demangle_h) $(objfiles_h) $(valprint_h) \
	$(gdb_assert_h) $(gdb_string_h)
go32-nat.o: go32-nat.c $(defs_h) $(inferior_h) $(gdb_wait_h) $(gdbcore_h) \
	$(command_h) $(gdbcmd_h) $(floatformat_h) $(buildsym_h) \
	$(i387_tdep_h) $(i386_tdep_h) $(value_h) $(regcache_h) \
	$(gdb_string_h) $(top_h)
h8300-tdep.o: h8300-tdep.c $(defs_h) $(value_h) $(arch_utils_h) $(regcache_h) \
	$(gdbcore_h) $(objfiles_h) $(gdb_assert_h) $(dis_asm_h) \
	 $(dwarf2_frame_h) $(frame_base_h) $(frame_unwind_h)
hppabsd-nat.o: hppabsd-nat.c $(defs_h) $(inferior_h) $(regcache_h) \
	$(hppa_tdep_h) $(inf_ptrace_h)
hppabsd-tdep.o: hppabsd-tdep.c $(defs_h) $(objfiles_h) $(target_h) \
	$(value_h) $(elf_common_h) $(hppa_tdep_h) $(solib_svr4_h)
hppanbsd-nat.o: hppabsd-nat.c $(defs_h) $(inferior_h) $(regcache_h) \
	$(target_h) $(hppa_tdep_h) $(inf_ptrace_h)
hppanbsd-tdep.o: hppanbsd-tdep.c $(defs_h) $(osabi_h) $(regcache_h) $(regset_h) \
	$(trad_frame_h) $(tramp_frame_h) $(gdb_assert_h) $(gdb_string_h) \
	$(hppa_tdep_h)
hppaobsd-tdep.o: hppaobsd-tdep.c $(defs_h) $(osabi_h) $(regcache_h) $(regset_h) \
	$(gdb_assert_h) $(gdb_string_h) $(hppa_tdep_h)
hppa-hpux-nat.o: hppa-hpux-nat.c $(defs_h) $(inferior_h) $(regcache_h) \
	$(target_h) $(gdb_assert_h) $(hppa_tdep_h) $(inf_ptrace_h) \
	$(inf_ttrace_h)
hppa-hpux-tdep.o: hppa-hpux-tdep.c $(defs_h) $(arch_utils_h) $(gdbcore_h) \
	$(osabi_h) $(frame_h) $(frame_unwind_h) $(trad_frame_h) $(symtab_h) \
	$(objfiles_h) $(inferior_h) $(infcall_h) $(observer_h) \
	$(hppa_tdep_h) $(solib_som_h) $(solib_pa64_h) $(regset_h) \
	$(regcache_h) $(exceptions_h) $(gdb_string_h) $(hppa_tdep_h)
hppa-linux-nat.o: hppa-linux-nat.c $(defs_h) $(gdbcore_h) $(regcache_h) \
	$(gdb_string_h) $(inferior_h) $(hppa_tdep_h) $(gregset_h) \
	$(target_h) $(linux_nat_h)
hppa-linux-tdep.o: hppa-linux-tdep.c $(defs_h) $(gdbcore_h) $(osabi_h) \
	$(target_h) $(objfiles_h) $(solib_svr4_h) $(glibc_tdep_h) \
	$(frame_unwind_h) $(trad_frame_h) $(dwarf2_frame_h) $(value_h) \
	$(hppa_tdep_h) $(elf_common_h) $(regset_h) $(regcache_h)
hppa-tdep.o: hppa-tdep.c $(defs_h) $(bfd_h) $(inferior_h) $(regcache_h) \
	$(completer_h) $(osabi_h) $(gdb_assert_h) \
	$(arch_utils_h) $(symtab_h) $(dis_asm_h) $(trad_frame_h) \
	$(frame_unwind_h) $(frame_base_h) $(gdbcore_h) $(gdbcmd_h) \
	$(objfiles_h) $(hppa_tdep_h) $(gdbtypes_h)
hpux-thread.o: hpux-thread.c $(defs_h) $(gdbthread_h) $(target_h) \
	$(inferior_h) $(regcache_h) $(gdb_stat_h) $(gdbcore_h) \
	$(hppa_tdep_h) $(observer_h)
i386bsd-nat.o: i386bsd-nat.c $(defs_h) $(inferior_h) $(regcache_h) \
	$(gdb_assert_h) $(i386_tdep_h) $(i387_tdep_h) $(i386bsd_nat_h) \
	$(inf_ptrace_h)
i386bsd-tdep.o: i386bsd-tdep.c $(defs_h) $(arch_utils_h) $(frame_h) \
	$(gdbcore_h) $(regcache_h) $(osabi_h) $(gdb_string_h) $(i386_tdep_h)
i386-cygwin-tdep.o: i386-cygwin-tdep.c $(defs_h) $(osabi_h) $(gdb_string_h) \
	$(i386_tdep_h) $(regset_h) $(gdb_obstack_h) $(xml_support_h) \
	$(gdbcore_h) $(solib_h) $(solib_target_h) $(i386_cygwin_tdep_h)
i386-dicos-tdep.o: i386-dicos-tdep.c $(defs_h) $(osabi_h) $(gdb_string_h) \
	$(solib_h) $(solib_target_h) $(inferior_h)
i386fbsd-nat.o: i386fbsd-nat.c $(defs_h) $(inferior_h) $(regcache_h) \
	$(target_h) $(fbsd_nat_h) $(i386_tdep_h) $(i386bsd_nat_h) \
	$(bsd_kvm_h)
i386fbsd-tdep.o: i386fbsd-tdep.c $(defs_h) $(arch_utils_h) $(gdbcore_h) \
	$(osabi_h) $(regcache_h) $(gdb_assert_h) $(i386_tdep_h) \
	$(i387_tdep_h) $(bsd_uthread_h) $(solib_svr4_h)
i386gnu-nat.o: i386gnu-nat.c $(defs_h) $(inferior_h) $(floatformat_h) \
	$(regcache_h) $(gdb_assert_h) $(gdb_string_h) $(i386_tdep_h) \
	$(gnu_nat_h) $(i387_tdep_h) $(gregset_h)
i386gnu-tdep.o: i386gnu-tdep.c $(defs_h) $(osabi_h) $(solib_svr4_h) \
	$(i386_tdep_h)
i386-linux-nat.o: i386-linux-nat.c $(defs_h) $(inferior_h) $(gdbcore_h) \
	$(regcache_h) $(linux_nat_h) $(gdb_assert_h) $(gdb_string_h) \
	$(gregset_h) $(i387_tdep_h) $(i386_tdep_h) $(i386_linux_tdep_h) \
	$(gdb_proc_service_h) $(target_h)
i386-linux-tdep.o: i386-linux-tdep.c $(defs_h) $(gdbcore_h) $(frame_h) \
	$(value_h) $(regcache_h) $(inferior_h) $(osabi_h) $(reggroups_h) \
	$(dwarf2_frame_h) $(gdb_string_h) $(i386_tdep_h) \
	$(i386_linux_tdep_h) $(glibc_tdep_h) $(solib_svr4_h) $(symtab_h) \
	$(arch_utils_h) $(regset_h)
i386-nat.o: i386-nat.c $(defs_h) $(breakpoint_h) $(command_h) $(gdbcmd_h) \
	$(target_h)
i386nbsd-nat.o: i386nbsd-nat.c $(defs_h) $(gdbcore_h) $(regcache_h) \
	$(target_h) $(i386_tdep_h) $(i386bsd_nat_h) $(nbsd_nat_h) \
	$(bsd_kvm_h)
i386nbsd-tdep.o: i386nbsd-tdep.c $(defs_h) $(arch_utils_h) $(frame_h) \
	$(gdbcore_h) $(regcache_h) $(regset_h) $(osabi_h) $(symtab_h) \
	$(gdb_assert_h) $(gdb_string_h) $(i386_tdep_h) $(i387_tdep_h) \
	$(nbsd_tdep_h) $(solib_svr4_h) $(trad_frame_h) $(tramp_frame_h)
i386-nto-tdep.o: i386-nto-tdep.c $(defs_h) $(frame_h) $(osabi_h) \
	$(regcache_h) $(target_h) $(gdb_assert_h) $(gdb_string_h) \
	$(i386_tdep_h) $(i387_tdep_h) $(nto_tdep_h) $(solib_h) \
	$(solib_svr4_h)
i386obsd-nat.o: i386obsd-nat.c $(defs_h) $(gdbcore_h) $(regcache_h) \
	$(target_h) $(i386_tdep_h) $(i386bsd_nat_h) $(bsd_kvm_h)
i386obsd-tdep.o: i386obsd-tdep.c $(defs_h) $(arch_utils_h) $(frame_h) \
	$(frame_unwind_h) $(gdbcore_h) $(regcache_h) $(regset_h) $(symtab_h) \
	$(objfiles_h) $(osabi_h) $(target_h) $(trad_frame_h) $(gdb_assert_h) \
	$(gdb_string_h) $(i386_tdep_h) $(i387_tdep_h) $(solib_svr4_h) \
	$(bsd_uthread_h)
i386-sol2-nat.o: i386-sol2-nat.c $(defs_h) $(regcache_h) $(gregset_h) \
	$(amd64_nat_h) $(amd64_tdep_h)
i386-sol2-tdep.o: i386-sol2-tdep.c $(defs_h) $(value_h) $(osabi_h) \
	$(gdb_string_h) $(sol2_tdep_h) $(i386_tdep_h) $(solib_svr4_h)
i386-stub.o: i386-stub.c
i386-tdep.o: i386-tdep.c $(defs_h) $(arch_utils_h) $(command_h) \
	$(dummy_frame_h) $(dwarf2_frame_h) $(doublest_h) $(gdbtypes_h) \
	$(frame_h) $(frame_base_h) $(frame_unwind_h) $(inferior_h) \
	$(gdbcmd_h) $(gdbcore_h) $(objfiles_h) $(osabi_h) $(regcache_h) \
	$(reggroups_h) $(regset_h) $(symfile_h) $(symtab_h) $(target_h) \
	$(value_h) $(dis_asm_h) $(gdb_assert_h) $(gdb_string_h) \
	$(i386_tdep_h) $(i387_tdep_h)
i386v4-nat.o: i386v4-nat.c $(defs_h) $(value_h) $(inferior_h) $(regcache_h) \
	$(i386_tdep_h) $(i387_tdep_h) $(gregset_h)
i387-tdep.o: i387-tdep.c $(defs_h) $(doublest_h) $(floatformat_h) $(frame_h) \
	$(gdbcore_h) $(inferior_h) $(language_h) $(regcache_h) $(value_h) \
	$(gdb_assert_h) $(gdb_string_h) $(i386_tdep_h) $(i387_tdep_h)
ia64-linux-nat.o: ia64-linux-nat.c $(defs_h) $(gdb_string_h) $(inferior_h) \
	$(target_h) $(gdbcore_h) $(regcache_h) $(ia64_tdep_h) $(gdb_wait_h) \
	$(gregset_h) $(linux_nat_h)
ia64-linux-tdep.o: ia64-linux-tdep.c $(defs_h) $(ia64_tdep_h) \
	$(arch_utils_h) $(gdbcore_h) $(regcache_h) $(osabi_h) $(solib_svr4_h) \
	$(symtab_h)
ia64-tdep.o: ia64-tdep.c $(defs_h) $(inferior_h) $(gdbcore_h) \
	$(arch_utils_h) $(floatformat_h) $(regcache_h) $(reggroups_h) \
	$(frame_h) $(frame_base_h) $(frame_unwind_h) $(doublest_h) \
	$(value_h) $(gdb_assert_h) $(objfiles_h) $(elf_common_h) \
	$(elf_bfd_h) $(dis_asm_h) $(infcall_h) $(osabi_h) $(ia64_tdep_h) \
	$(elf_ia64_h) $(libunwind_frame_h) $(libunwind_ia64_h) \
	$(cp_abi_h) $(gdbtypes_h)
infcall.o: infcall.c $(defs_h) $(breakpoint_h) $(target_h) $(regcache_h) \
	$(inferior_h) $(gdb_assert_h) $(block_h) $(gdbcore_h) $(language_h) \
	$(objfiles_h) $(gdbcmd_h) $(command_h) $(gdb_string_h) $(infcall_h) \
	$(dummy_frame_h) $(ada_lang_h)
inf-child.o: inf-child.c $(defs_h) $(regcache_h) $(memattr_h) $(symtab_h) \
	$(target_h) $(inferior_h) $(gdb_string_h)
infcmd.o: infcmd.c $(defs_h) $(gdb_string_h) $(symtab_h) $(gdbtypes_h) \
	$(frame_h) $(inferior_h) $(environ_h) $(value_h) $(gdbcmd_h) \
	$(symfile_h) $(gdbcore_h) $(target_h) $(language_h) $(symfile_h) \
	$(objfiles_h) $(completer_h) $(ui_out_h) $(event_top_h) \
	$(parser_defs_h) $(regcache_h) $(reggroups_h) $(block_h) \
	$(solib_h) $(gdb_assert_h) $(observer_h) $(target_descriptions_h) \
	$(user_regs_h) $(exceptions_h) $(cli_decode_h) $(gdbthread_h)
inf-loop.o: inf-loop.c $(defs_h) $(inferior_h) $(target_h) $(event_loop_h) \
	$(event_top_h) $(inf_loop_h) $(remote_h) $(exceptions_h) \
	$(language_h) $(gdbthread_h)
inflow.o: inflow.c $(defs_h) $(frame_h) $(inferior_h) $(command_h) \
	$(serial_h) $(terminal_h) $(target_h) $(gdbthread_h) $(gdb_string_h) \
	$(inflow_h) $(gdb_select_h)
inf-ptrace.o: inf-ptrace.c $(defs_h) $(command_h) $(inferior_h) $(inflow_h) \
	$(gdbcore_h) $(regcache_h) $(gdb_assert_h) \
	$(gdb_string_h) $(gdb_ptrace_h) $(gdb_wait_h) $(inf_child_h)
infrun.o: infrun.c $(defs_h) $(gdb_string_h) $(symtab_h) $(frame_h) \
	$(inferior_h) $(exceptions_h) $(breakpoint_h) $(gdb_wait_h) \
	$(gdbcore_h) $(gdbcmd_h) $(cli_script_h) $(target_h) $(gdbthread_h) \
	$(annotate_h) $(symfile_h) $(top_h) $(inf_loop_h) $(regcache_h) \
	$(value_h) $(observer_h) $(language_h) $(solib_h) $(gdb_assert_h) \
	$(mi_common_h) $(main_h) $(event_top_h)
inf-ttrace.o: inf-ttrace.c $(defs_h) $(command_h) $(gdbcore_h) \
	$(gdbthread_h) $(inferior_h) $(target_h) \
	$(gdb_assert_h) $(gdb_string_h) $(inf_child_h) $(inf_ttrace_h)
interps.o: interps.c $(defs_h) $(gdbcmd_h) $(ui_out_h) $(event_loop_h) \
	$(event_top_h) $(interps_h) $(completer_h) $(gdb_string_h) \
	$(gdb_assert_h) $(top_h) $(exceptions_h)
iq2000-tdep.o: iq2000-tdep.c $(defs_h) $(frame_h) $(frame_base_h) \
	$(frame_unwind_h) $(dwarf2_frame_h) $(gdbtypes_h) $(value_h) \
	$(dis_asm_h) $(gdb_string_h) $(arch_utils_h) $(regcache_h) \
	$(osabi_h) $(gdbcore_h)
irix5-nat.o: irix5-nat.c $(defs_h) $(inferior_h) $(gdbcore_h) $(target_h) \
	$(regcache_h) $(gdb_string_h) $(gregset_h) $(mips_tdep_h)
jv-exp.o: jv-exp.c $(defs_h) $(gdb_string_h) $(expression_h) $(value_h) \
	$(parser_defs_h) $(language_h) $(jv_lang_h) $(bfd_h) $(symfile_h) \
	$(objfiles_h) $(block_h)
jv-lang.o: jv-lang.c $(defs_h) $(symtab_h) $(gdbtypes_h) $(expression_h) \
	$(parser_defs_h) $(language_h) $(gdbtypes_h) $(symtab_h) \
	$(symfile_h) $(objfiles_h) $(gdb_string_h) $(value_h) $(c_lang_h) \
	$(jv_lang_h) $(gdbcore_h) $(block_h) $(demangle_h) $(dictionary_h) \
	$(gdb_assert_h)
jv-typeprint.o: jv-typeprint.c $(defs_h) $(symtab_h) $(gdbtypes_h) \
	$(value_h) $(demangle_h) $(jv_lang_h) $(gdb_string_h) $(typeprint_h) \
	$(c_lang_h) $(cp_abi_h)
jv-valprint.o: jv-valprint.c $(defs_h) $(symtab_h) $(gdbtypes_h) \
	$(gdbcore_h) $(expression_h) $(value_h) $(demangle_h) $(valprint_h) \
	$(language_h) $(jv_lang_h) $(c_lang_h) $(annotate_h) $(gdb_string_h)
language.o: language.c $(defs_h) $(gdb_string_h) $(symtab_h) $(gdbtypes_h) \
	$(value_h) $(gdbcmd_h) $(expression_h) $(language_h) $(target_h) \
	$(parser_defs_h) $(jv_lang_h) $(demangle_h)
libunwind-frame.o: libunwind-frame.c $(defs_h) $(inferior_h) $(frame_h) \
	$(frame_base_h) $(frame_unwind_h) $(gdbcore_h) $(gdbtypes_h) \
	$(symtab_h) $(objfiles_h) $(regcache_h) $(gdb_assert_h) \
	$(gdb_string_h) $(libunwind_frame_h) $(complaints_h)
linespec.o: linespec.c $(defs_h) $(symtab_h) $(frame_h) $(command_h) \
	$(symfile_h) $(objfiles_h) $(source_h) $(demangle_h) $(value_h) \
	$(completer_h) $(cp_abi_h) $(parser_defs_h) $(block_h) $(interps_h) \
	$(objc_lang_h) $(linespec_h) $(exceptions_h) $(language_h) \
	$(mi_cmds_h) $(target_h)
linux-fork.o: linux-fork.c $(defs_h) $(inferior_h) $(regcache_h) $(gdbcmd_h) \
	$(infcall_h) $(gdb_assert_h) $(gdb_string_h) $(linux_fork_h) \
	$(linux_nat_h) $(gdb_wait_h) $(gdb_dirent_h)
linux-nat.o: linux-nat.c $(defs_h) $(inferior_h) $(target_h) $(gdb_string_h) \
	$(gdb_wait_h) $(gdb_assert_h) $(linux_nat_h) $(gdbthread_h) \
	$(gdbcmd_h) $(regcache_h) $(regset_h) $(inf_ptrace_h) $(auxv_h) \
	$(elf_bfd_h) $(gregset_h) $(gdbcore_h) $(gdbthread_h) $(gdb_stat_h) \
	$(linux_fork_h) $(inf_loop_h) $(event_loop_h) $(event_top_h)
linux-thread-db.o: linux-thread-db.c $(defs_h) $(gdb_assert_h) \
	$(gdb_proc_service_h) $(gdb_thread_db_h) $(bfd_h) $(exceptions_h) \
	$(gdbthread_h) $(inferior_h) $(symfile_h) $(objfiles_h) $(target_h) \
	$(regcache_h) $(solib_svr4_h) $(gdbcore_h) $(observer_h) $(linux_nat_h)
m2-exp.o: m2-exp.c $(defs_h) $(gdb_string_h) $(expression_h) $(language_h) \
	$(value_h) $(parser_defs_h) $(m2_lang_h) $(bfd_h) $(symfile_h) \
	$(objfiles_h) $(block_h)
m2-lang.o: m2-lang.c $(defs_h) $(symtab_h) $(gdbtypes_h) $(expression_h) \
	$(parser_defs_h) $(language_h) $(m2_lang_h) $(c_lang_h) \
	$(valprint_h)
m2-typeprint.o: m2-typeprint.c $(defs_h) $(gdb_obstack_h) $(bfd_h) \
	$(symtab_h) $(gdbtypes_h) $(expression_h) $(value_h) $(gdbcore_h) \
	$(m2_lang_h) $(target_h) $(language_h) $(demangle_h) $(c_lang_h) \
	$(typeprint_h) $(cp_abi_h) $(gdb_string_h)
m2-valprint.o: m2-valprint.c $(defs_h) $(symtab_h) $(gdbtypes_h) \
	$(expression_h) $(value_h) $(valprint_h) $(language_h) \
	$(typeprint_h) $(c_lang_h) $(m2_lang_h) $(target_h)
m32c-tdep.o: m32c-tdep.c $(defs_h) $(gdb_assert_h) $(elf_bfd_h)		\
	$(elf_m32c_h) $(gdb_sim_m32c_h) $(dis_asm_h) $(gdbtypes_h)	\
	$(regcache_h) $(arch_utils_h) $(frame_h) $(frame_unwind_h)	\
	$(dwarf2_frame_h) $(dwarf2expr_h) $(symtab_h) $(gdbcore_h)	\
	$(value_h) $(reggroups_h) $(prologue_value_h) $(target_h)
m32r-linux-nat.o: m32r-linux-nat.c $(defs_h) $(inferior_h) $(gdbcore_h) \
	$(regcache_h) $(linux_nat_h) $(gdb_assert_h) $(gdb_string_h) \
	$(gregset_h) $(m32r_tdep_h) $(target_h)
m32r-linux-tdep.o: m32r-linux-tdep.c $(defs_h) $(gdbcore_h) $(frame_h) \
	$(value_h) $(regcache_h) $(inferior_h) $(osabi_h) $(reggroups_h) \
	$(regset_h) $(gdb_string_h) $(glibc_tdep_h) $(solib_svr4_h) \
	$(symtab_h) $(trad_frame_h) $(frame_unwind_h) $(m32r_tdep_h)
m32r-rom.o: m32r-rom.c $(defs_h) $(gdbcore_h) $(target_h) $(exceptions_h) \
	$(monitor_h) $(serial_h) $(symtab_h) $(command_h) $(gdbcmd_h) \
	$(symfile_h) $(gdb_string_h) $(objfiles_h) $(inferior_h) \
	$(regcache_h)
m32r-stub.o: m32r-stub.c $(syscall_h)
m32r-tdep.o: m32r-tdep.c $(defs_h) $(frame_h) $(frame_unwind_h) \
	$(frame_base_h) $(symtab_h) $(gdbtypes_h) $(gdbcmd_h) $(gdbcore_h) \
	$(gdb_string_h) $(value_h) $(inferior_h) $(symfile_h) $(objfiles_h) \
	$(osabi_h) $(language_h) $(arch_utils_h) $(regcache_h) \
	$(trad_frame_h) $(dis_asm_h) $(gdb_assert_h) $(m32r_tdep_h)
m68hc11-tdep.o: m68hc11-tdep.c $(defs_h) $(frame_h) $(frame_unwind_h) \
	$(frame_base_h) $(dwarf2_frame_h) $(trad_frame_h) $(symtab_h) \
	$(gdbtypes_h) $(gdbcmd_h) $(gdbcore_h) $(gdb_string_h) $(value_h) \
	$(inferior_h) $(dis_asm_h) $(symfile_h) $(objfiles_h) \
	$(arch_utils_h) $(regcache_h) $(reggroups_h) $(target_h) \
	$(opcode_m68hc11_h) $(elf_m68hc11_h) $(elf_bfd_h)
m68kbsd-nat.o: m68kbsd-nat.c $(defs_h) $(gdbcore_h) $(inferior_h) \
	$(regcache_h) $(gdb_assert_h) $(m68k_tdep_h) $(inf_ptrace_h) \
	$(bsd_kvm_h)
m68kbsd-tdep.o: m68kbsd-tdep.c $(defs_h) $(arch_utils_h) $(frame_h) \
	$(osabi_h) $(regcache_h) $(regset_h) $(trad_frame_h) \
	$(tramp_frame_h) $(gdbtypes_h) $(gdb_assert_h) $(gdb_string_h) \
	$(m68k_tdep_h) $(solib_svr4_h)
m68klinux-nat.o: m68klinux-nat.c $(defs_h) $(frame_h) $(inferior_h) \
	$(language_h) $(gdbcore_h) $(gdb_string_h) $(regcache_h) \
	$(m68k_tdep_h) $(gdb_stat_h) $(floatformat_h) $(target_h) \
	$(gregset_h) $(target_h) $(linux_nat_h)
m68klinux-tdep.o: m68klinux-tdep.c $(defs_h) $(gdbcore_h) $(doublest_h) \
	$(floatformat_h) $(frame_h) $(target_h) $(gdb_string_h) \
	$(gdbtypes_h) $(osabi_h) $(regcache_h) $(objfiles_h) $(symtab_h) \
	$(m68k_tdep_h) $(trad_frame_h) $(frame_unwind_h) $(glibc_tdep_h) \
	$(solib_svr4_h) $(observer_h) $(elf_common_h) $(auxv_h)
m68k-stub.o: m68k-stub.c
m68k-tdep.o: m68k-tdep.c $(defs_h) $(dwarf2_frame_h) $(frame_h) \
	$(frame_base_h) $(frame_unwind_h) $(gdbtypes_h) $(symtab_h) \
	$(gdbcore_h) $(value_h) $(gdb_string_h) $(gdb_assert_h) \
	$(inferior_h) $(regcache_h) $(arch_utils_h) $(osabi_h) $(dis_asm_h) \
	$(m68k_tdep_h) $(target_descriptions_h)
m88kbsd-nat.o: m88kbsd-nat.c $(defs_h) $(inferior_h) $(regcache_h) \
	$(target_h) $(m88k_tdep_h) $(inf_ptrace_h)
m88k-tdep.o: m88k-tdep.c $(defs_h) $(arch_utils_h) $(dis_asm_h) $(frame_h) \
	$(frame_base_h) $(frame_unwind_h) $(gdbcore_h) $(gdbtypes_h) \
	$(regcache_h) $(regset_h) $(symtab_h) $(trad_frame_h) $(value_h) \
	$(gdb_assert_h) $(gdb_string_h) $(m88k_tdep_h)
macrocmd.o: macrocmd.c $(defs_h) $(macrotab_h) $(macroexp_h) $(macroscope_h) \
	$(command_h) $(gdbcmd_h) $(gdb_string_h)
macroexp.o: macroexp.c $(defs_h) $(gdb_obstack_h) $(bcache_h) $(macrotab_h) \
	$(macroexp_h) $(gdb_assert_h)
macroscope.o: macroscope.c $(defs_h) $(macroscope_h) $(symtab_h) $(source_h) \
	$(target_h) $(frame_h) $(inferior_h) $(complaints_h)
macrotab.o: macrotab.c $(defs_h) $(gdb_obstack_h) $(splay_tree_h) \
	$(symtab_h) $(symfile_h) $(objfiles_h) $(macrotab_h) $(gdb_assert_h) \
	$(bcache_h) $(complaints_h)
main.o: main.c $(defs_h) $(top_h) $(target_h) $(inferior_h) $(symfile_h) \
	$(gdbcore_h) $(exceptions_h) $(getopt_h) $(gdb_stat_h) \
	$(gdb_string_h) $(event_loop_h) $(ui_out_h) $(interps_h) $(main_h)
maint.o: maint.c $(defs_h) $(command_h) $(gdbcmd_h) $(symtab_h) \
	$(gdbtypes_h) $(demangle_h) $(gdbcore_h) $(expression_h) \
	$(language_h) $(symfile_h) $(objfiles_h) $(value_h) $(cli_decode_h)
mdebugread.o: mdebugread.c $(defs_h) $(symtab_h) $(gdbtypes_h) $(gdbcore_h) \
	$(objfiles_h) $(gdb_obstack_h) $(buildsym_h) $(stabsread_h) \
	$(complaints_h) $(demangle_h) $(gdb_assert_h) $(block_h) \
	$(dictionary_h) $(mdebugread_h) $(gdb_stat_h) $(gdb_string_h) \
	$(bfd_h) $(coff_ecoff_h) $(libaout_h) $(aout_aout64_h) \
	$(aout_stab_gnu_h) $(expression_h)
memattr.o: memattr.c $(defs_h) $(command_h) $(gdbcmd_h) $(memattr_h) \
	$(target_h) $(value_h) $(language_h) $(vec_h) $(gdb_string_h)
mem-break.o: mem-break.c $(defs_h) $(symtab_h) $(breakpoint_h) $(inferior_h) \
	$(target_h)
mep-tdep.o: $(defs_h) $(frame_h) $(frame_unwind_h) $(frame_base_h) \
	$(symtab_h) $(gdbtypes_h) $(gdbcmd_h) $(gdbcore_h) $(gdb_string_h) \
	$(value_h) $(inferior_h) $(dis_asm_h) $(symfile_h) $(objfiles_h) \
	$(language_h) $(arch_utils_h) $(regcache_h) $(remote_h) \
	$(floatformat_h) $(sim_regno_h) $(disasm_h) $(trad_frame_h) \
	$(reggroups_h) $(elf_bfd_h) $(elf_mep_h) $(gdb_assert_h) \
	$(mep_desc_h) $(mep_opc_h) $(prologue_value_h) $(infcall_h)
mingw-hdep.o: mingw-hdep.c $(defs_h) $(serial_h) $(event_loop_h) \
	$(gdb_assert_h) $(gdb_select_h) $(gdb_string_h) $(readline_h)
minsyms.o: minsyms.c $(defs_h) $(gdb_string_h) $(symtab_h) $(bfd_h) \
	$(symfile_h) $(objfiles_h) $(demangle_h) $(value_h) $(cp_abi_h) \
	$(target_h)
mips64obsd-nat.o: mips64obsd-nat.c $(defs_h) $(inferior_h) $(regcache_h) \
	$(target_h) $(mips_tdep_h) $(inf_ptrace_h)
mips64obsd-tdep.o: mips64obsd-tdep.c $(defs_h) $(osabi_h) $(regcache_h) \
	$(regset_h) $(trad_frame_h) $(tramp_frame_h) $(gdb_assert_h) \
	$(gdb_string_h) $(mips_tdep_h) $(solib_svr4_h)
mips-irix-tdep.o: mips-irix-tdep.c $(defs_h) $(osabi_h) $(gdb_string_h) \
	$(solib_h) $(solib_irix_h) $(elf_bfd_h)
mips-linux-nat.o: mips-linux-nat.c $(defs_h) $(mips_tdep_h) $(target_h) \
	$(regcache_h) $(linux_nat_h) $(gdb_proc_service_h) $(gregset_h) \
	$(mips_linux_tdep_h) $(inferior_h) $(target_descriptions_h) \
	$(mips_linux_c) $(mips64_linux_c)
mips-linux-tdep.o: mips-linux-tdep.c $(defs_h) $(gdbcore_h) $(target_h) \
	$(solib_svr4_h) $(osabi_h) $(mips_tdep_h) $(gdb_string_h) \
	$(gdb_assert_h) $(frame_h) $(regcache_h) $(trad_frame_h) \
	$(tramp_frame_h) $(gdbtypes_h) $(solib_h) $(symtab_h) \
	$(mips_linux_tdep_h) $(solist_h) $(solib_svr4_h) \
	$(target_descriptions_h)
mipsnbsd-nat.o: mipsnbsd-nat.c $(defs_h) $(inferior_h) $(regcache_h) \
	$(target_h) $(mips_tdep_h) $(mipsnbsd_tdep_h) $(inf_ptrace_h)
mipsnbsd-tdep.o: mipsnbsd-tdep.c $(defs_h) $(gdbcore_h) $(regcache_h) \
	$(regset_h) $(target_h) $(value_h) $(osabi_h) $(gdb_assert_h) \
	$(gdb_string_h) $(nbsd_tdep_h) $(mipsnbsd_tdep_h) $(mips_tdep_h) \
	$(solib_svr4_h)
mipsread.o: mipsread.c $(defs_h) $(gdb_string_h) $(bfd_h) $(symtab_h) \
	$(objfiles_h) $(buildsym_h) $(stabsread_h) $(coff_sym_h) \
	$(coff_internal_h) $(coff_ecoff_h) $(libcoff_h) $(libecoff_h) \
	$(elf_common_h) $(elf_mips_h)
mips-tdep.o: mips-tdep.c $(defs_h) $(gdb_string_h) $(gdb_assert_h) \
	$(frame_h) $(inferior_h) $(symtab_h) $(value_h) $(gdbcmd_h) \
	$(language_h) $(gdbcore_h) $(symfile_h) $(objfiles_h) $(gdbtypes_h) \
	$(target_h) $(arch_utils_h) $(regcache_h) $(osabi_h) $(mips_tdep_h) \
	$(block_h) $(reggroups_h) $(opcode_mips_h) $(elf_mips_h) \
	$(elf_bfd_h) $(symcat_h) $(sim_regno_h) $(dis_asm_h) \
	$(frame_unwind_h) $(frame_base_h) $(trad_frame_h) $(infcall_h) \
	$(floatformat_h) $(remote_h) $(target_descriptions_h) \
	$(dwarf2_frame_h) $(user_regs_h)
memory-map.o: memory-map.c $(defs_h) $(memory_map_h) $(xml_support_h) \
	$(gdb_assert_h) $(exceptions_h) $(gdb_string_h)
mn10300-linux-tdep.o: mn10300-linux-tdep.c $(defs_h) $(gdbcore_h) \
	$(gdb_string_h) $(regcache_h) $(mn10300_tdep_h) $(gdb_assert_h) \
	$(bfd_h) $(elf_bfd_h) $(osabi_h) $(regset_h) $(solib_svr4_h) \
	$(frame_h) $(trad_frame_h) $(tramp_frame_h)
mn10300-tdep.o: mn10300-tdep.c $(defs_h) $(arch_utils_h) $(dis_asm_h) \
	$(gdbtypes_h) $(regcache_h) $(gdb_string_h) $(gdb_assert_h) \
	$(gdbcore_h) $(value_h) $(gdbtypes_h) \
	$(frame_h) $(frame_unwind_h) $(frame_base_h) $(trad_frame_h) \
	$(symtab_h) $(dwarf2_frame_h) $(osabi_h) $(target_h) $(mn10300_tdep_h)
monitor.o: monitor.c $(defs_h) $(gdbcore_h) $(target_h) $(exceptions_h) \
	$(gdb_string_h) $(command_h) $(serial_h) $(monitor_h) $(gdbcmd_h) \
	$(inferior_h) $(gdb_regex_h) $(srec_h) $(regcache_h) $(gdbthread_h)
mt-tdep.o: mt-tdep.c $(defs_h) $(frame_h) $(frame_unwind_h) $(frame_base_h) \
	$(symtab_h) $(dis_asm_h) $(arch_utils_h) $(gdbtypes_h) \
	$(gdb_string_h) $(regcache_h) $(reggroups_h) $(gdbcore_h) \
	$(trad_frame_h) $(inferior_h) $(dwarf2_frame_h) $(infcall_h) \
	$(gdb_assert_h) $(language_h)
nbsd-nat.o: nbsd-nat.c $(defs_h) $(nbsd_nat_h)
nbsd-tdep.o: nbsd-tdep.c $(defs_h) $(gdb_string_h) $(solib_svr4_h)
nto-procfs.o: nto-procfs.c $(defs_h) $(gdb_dirent_h) $(exceptions_h) \
	$(gdb_string_h) $(gdbcore_h) $(inferior_h) $(target_h) $(objfiles_h) \
	$(gdbthread_h) $(nto_tdep_h) $(command_h) $(regcache_h) $(solib_h)
nto-tdep.o: nto-tdep.c $(defs_h) $(gdb_stat_h) $(gdb_string_h) $(nto_tdep_h) \
	$(top_h) \
	$(cli_decode_h) $(cli_cmds_h) $(inferior_h) $(gdbarch_h) $(bfd_h) \
	$(elf_bfd_h) $(solib_svr4_h) $(gdbcore_h) $(objfiles_h)
objc-exp.o: objc-exp.c $(defs_h) $(gdb_string_h) $(expression_h) \
	$(objc_lang_h) $(value_h) $(parser_defs_h) $(language_h) $(c_lang_h) \
	$(bfd_h) $(symfile_h) $(objfiles_h) $(top_h) $(completer_h) \
	$(block_h)
objc-lang.o: objc-lang.c $(defs_h) $(symtab_h) $(gdbtypes_h) $(expression_h) \
	$(parser_defs_h) $(language_h) $(c_lang_h) $(objc_lang_h) \
	$(exceptions_h) $(complaints_h) $(value_h) $(symfile_h) \
	$(objfiles_h) $(gdb_string_h) $(target_h) $(gdbcore_h) $(gdbcmd_h) \
	$(frame_h) $(gdb_regex_h) $(regcache_h) $(block_h) $(infcall_h) \
	$(valprint_h) $(gdb_assert_h)
objfiles.o: objfiles.c $(defs_h) $(bfd_h) $(symtab_h) $(symfile_h) \
	$(objfiles_h) $(gdb_stabs_h) $(target_h) $(bcache_h) $(mdebugread_h) \
	$(gdb_assert_h) $(gdb_stat_h) $(gdb_obstack_h) $(gdb_string_h) \
	$(hashtab_h) $(breakpoint_h) $(block_h) $(dictionary_h) $(source_h) \
	$(parser_defs_h) $(expression_h) $(addrmap_h) $(arch_utils_h) \
	$(exec_h)
observer.o: observer.c $(defs_h) $(observer_h) $(command_h) $(gdbcmd_h) \
	$(observer_inc)
obsd-tdep.o: obsd-tdep.c $(defs_h) $(frame_h) $(symtab_h) $(obsd_tdep_h)
osabi.o: osabi.c $(defs_h) $(gdb_assert_h) $(gdb_string_h) $(osabi_h) \
	$(arch_utils_h) $(gdbcmd_h) $(command_h) $(elf_bfd_h)
parse.o: parse.c $(defs_h) $(gdb_string_h) $(symtab_h) $(gdbtypes_h) \
	$(frame_h) $(expression_h) $(value_h) $(command_h) $(language_h) \
	$(f_lang_h) $(parser_defs_h) $(gdbcmd_h) $(symfile_h) $(inferior_h) \
	$(doublest_h) $(gdb_assert_h) $(block_h) $(source_h) $(objfiles_h) \
	$(exceptions_h)
p-exp.o: p-exp.c $(defs_h) $(gdb_string_h) $(expression_h) $(value_h) \
	$(parser_defs_h) $(language_h) $(p_lang_h) $(bfd_h) $(symfile_h) \
	$(objfiles_h) $(block_h)
p-lang.o: p-lang.c $(defs_h) $(gdb_string_h) $(symtab_h) $(gdbtypes_h) \
	$(expression_h) $(parser_defs_h) $(language_h) $(p_lang_h) \
	$(valprint_h) $(value_h)
posix-hdep.o: posix-hdep.c $(defs_h) $(event_loop_h) $(gdb_string_h) \
	$(gdb_select_h)
ppcbug-rom.o: ppcbug-rom.c $(defs_h) $(gdbcore_h) $(target_h) $(monitor_h) \
	$(serial_h) $(regcache_h)
ppc-linux-nat.o: ppc-linux-nat.c $(defs_h) $(gdb_string_h) $(frame_h) \
	$(inferior_h) $(gdbcore_h) $(regcache_h) $(gdb_assert_h) \
	$(gdb_wait_h) $(gregset_h) $(ppc_tdep_h) $(ppc_linux_tdep_h) \
	$(target_h) $(linux_nat_h)
ppc-linux-tdep.o: ppc-linux-tdep.c $(defs_h) $(frame_h) $(inferior_h) \
	$(symtab_h) $(target_h) $(gdbcore_h) $(gdbcmd_h) $(symfile_h) \
	$(objfiles_h) $(regcache_h) $(value_h) $(osabi_h) $(regset_h) \
	$(solib_svr4_h) $(ppc_tdep_h) $(ppc_linux_tdep_h) $(trad_frame_h) \
	$(frame_unwind_h) $(tramp_frame_h) \
	$(powerpc_32l_c) $(powerpc_altivec32l_c) $(powerpc_e500l_c) \
	$(powerpc_64l_c) $(powerpc_altivec64l_c)
ppcnbsd-nat.o: ppcnbsd-nat.c $(defs_h) $(inferior_h) $(gdb_assert_h) \
	$(gdbcore_h) $(regcache_h) $(bsd_kvm_h) $(ppc_tdep_h) \
	$(ppcnbsd_tdep_h) $(inf_ptrace_h)
ppcnbsd-tdep.o: ppcnbsd-tdep.c $(defs_h) $(gdbcore_h) $(gdb_types_h) \
	$(osabi_h) $(regcache_h) $(regset_h) $(trad_frame_h) \
	$(tramp_frame_h) $(gdb_assert_h) $(gdb_string_h) \
	$(ppc_tdep_h) $(ppcnbsd_tdep_h) $(solib_svr4_h)
ppcobsd-nat.o: ppcobsd-nat.c $(defs_h) $(gdbcore_h) $(inferior_h) \
	$(regcache_h) $(gdb_assert_h) $(ppc_tdep_h) $(ppcobsd_tdep_h) \
	$(bsd_kvm_h) $(inf_ptrace_h)
ppcobsd-tdep.o: ppcobsd-tdep.c $(defs_h) $(arch_utils_h) $(gdbtypes_h) \
	$(frame_h) $(frame_unwind_h) $(osabi_h) $(regcache_h) $(regset_h) \
	$(symtab_h) $(trad_frame_h) $(gdb_assert_h) $(gdb_string_h) \
	$(ppc_tdep_h) $(ppcobsd_tdep_h) $(solib_svr4_h)
ppc-sysv-tdep.o: ppc-sysv-tdep.c $(defs_h) $(gdbcore_h) $(inferior_h) \
	$(regcache_h) $(value_h) $(gdb_string_h) $(gdb_assert_h) \
	$(ppc_tdep_h) $(target_h) $(objfiles_h) $(infcall_h)
printcmd.o: printcmd.c $(defs_h) $(gdb_string_h) $(frame_h) $(symtab_h) \
	$(gdbtypes_h) $(value_h) $(language_h) $(expression_h) $(gdbcore_h) \
	$(gdbcmd_h) $(target_h) $(breakpoint_h) $(demangle_h) $(valprint_h) \
	$(annotate_h) $(symfile_h) $(objfiles_h) $(completer_h) $(ui_out_h) \
	$(gdb_assert_h) $(block_h) $(disasm_h) $(tui_h)
proc-api.o: proc-api.c $(defs_h) $(gdbcmd_h) $(completer_h) $(gdb_wait_h) \
	$(proc_utils_h)
proc-events.o: proc-events.c $(defs_h)
proc-flags.o: proc-flags.c $(defs_h)
procfs.o: procfs.c $(defs_h) $(inferior_h) $(target_h) $(gdbcore_h) \
	$(elf_bfd_h) $(gdbcmd_h) $(gdbthread_h) $(regcache_h) $(gdb_wait_h) \
	$(gdb_string_h) $(gdb_assert_h) $(inflow_h) $(auxv_h) \
	$(gdb_dirent_h) $(gdb_stat_h) $(proc_utils_h) $(gregset_h)
proc-service.o: proc-service.c $(defs_h) $(gdb_proc_service_h) $(inferior_h) \
	$(symtab_h) $(target_h) $(regcache_h) $(gregset_h) $(gdbcore_h)
proc-why.o: proc-why.c $(defs_h) $(proc_utils_h)
prologue-value.o: prologue-value.c $(defs_h) $(gdb_string_h) $(gdb_assert_h) \
	$(prologue_value_h) $(regcache_h)
p-typeprint.o: p-typeprint.c $(defs_h) $(gdb_obstack_h) $(bfd_h) $(symtab_h) \
	$(gdbtypes_h) $(expression_h) $(value_h) $(gdbcore_h) $(target_h) \
	$(language_h) $(p_lang_h) $(typeprint_h) $(gdb_string_h)
p-valprint.o: p-valprint.c $(defs_h) $(gdb_obstack_h) $(symtab_h) \
	$(gdbtypes_h) $(expression_h) $(value_h) $(command_h) $(gdbcmd_h) \
	$(gdbcore_h) $(demangle_h) $(valprint_h) $(typeprint_h) \
	$(language_h) $(target_h) $(annotate_h) $(p_lang_h) $(cp_abi_h) \
	$(cp_support_h)
regcache.o: regcache.c $(defs_h) $(inferior_h) $(target_h) $(gdbarch_h) \
	$(gdbcmd_h) $(regcache_h) $(reggroups_h) $(gdb_assert_h) \
	$(gdb_string_h) $(gdbcmd_h) $(observer_h)
reggroups.o: reggroups.c $(defs_h) $(reggroups_h) $(gdbtypes_h) \
	$(gdb_assert_h) $(regcache_h) $(command_h) $(gdbcmd_h)
regset.o: regset.c $(defs_h) $(regset_h) $(gdb_assert_h)
remote.o: remote.c $(defs_h) $(gdb_string_h) $(inferior_h) $(bfd_h) \
	$(symfile_h) $(exceptions_h) $(target_h) $(gdbcmd_h) $(objfiles_h) \
	$(gdb_stabs_h) $(gdbthread_h) $(remote_h) $(regcache_h) $(value_h) \
	$(gdb_assert_h) $(event_loop_h) $(event_top_h) $(inf_loop_h) \
	$(serial_h) $(gdbcore_h) $(remote_fileio_h) $(solib_h) $(observer_h) \
	$(cli_decode_h) $(cli_setshow_h) $(memory_map_h) \
	$(target_descriptions_h) $(gdb_fileio_h)
remote-fileio.o: remote-fileio.c $(defs_h) $(gdb_string_h) $(gdbcmd_h) \
	$(remote_h) $(gdb_fileio_h) $(gdb_wait_h) $(gdb_stat_h) \
	$(exceptions_h) $(remote_fileio_h) $(event_loop_h)
remote-m32r-sdi.o: remote-m32r-sdi.c $(defs_h) $(gdbcmd_h) $(gdbcore_h) \
	$(inferior_h) $(target_h) $(regcache_h) $(gdb_string_h) $(serial_h)
remote-mips.o: remote-mips.c $(defs_h) $(inferior_h) $(bfd_h) $(symfile_h) \
	$(gdbcmd_h) $(gdbcore_h) $(serial_h) $(target_h) $(exceptions_h) \
	$(gdb_string_h) $(gdb_stat_h) $(regcache_h) \
	$(mips_tdep_h)
remote-sim.o: remote-sim.c $(defs_h) $(inferior_h) $(value_h) \
	$(gdb_string_h) $(terminal_h) $(target_h) $(gdbcore_h) \
	$(gdb_callback_h) $(gdb_remote_sim_h) $(command_h) \
	$(regcache_h) $(gdb_assert_h) $(sim_regno_h) $(arch_utils_h) \
	$(readline_h) $(gdbthread_h)
rs6000-nat.o: rs6000-nat.c $(defs_h) $(inferior_h) $(target_h) $(gdbcore_h) \
	$(xcoffsolib_h) $(symfile_h) $(objfiles_h) $(libbfd_h) $(bfd_h) \
	$(exceptions_h) $(gdb_stabs_h) $(regcache_h) $(arch_utils_h) \
	$(inf_ptrace_h) $(ppc_tdep_h) $(rs6000_tdep_h) $(exec_h) \
	$(observer_h) $(gdb_stat_h)
rs6000-tdep.o: rs6000-tdep.c $(defs_h) $(frame_h) $(inferior_h) $(symtab_h) \
	$(target_h) $(gdbcore_h) $(gdbcmd_h) $(objfiles_h) $(arch_utils_h) \
	$(regcache_h) $(regset_h) $(doublest_h) $(value_h) $(parser_defs_h) \
	$(osabi_h) $(infcall_h) $(sim_regno_h) $(gdb_sim_ppc_h) \
	$(reggroups_h) $(libbfd_h) $(coff_internal_h) $(libcoff_h) \
	$(coff_xcoff_h) $(libxcoff_h) $(elf_bfd_h) $(solib_svr4_h) \
	$(ppc_tdep_h) $(gdb_assert_h) $(dis_asm_h) $(trad_frame_h) \
	$(frame_unwind_h) $(frame_base_h) $(dwarf2_frame_h) \
	$(target_descriptions) $(user_regs_h) $(elf_ppc_h) \
	$(powerpc_32_c) $(powerpc_altivec32_c) $(powerpc_403_c) \
	$(powerpc_403gc_c) $(powerpc_505_c)  $(powerpc_601_c) \
	$(powerpc_602_c) $(powerpc_603_c) $(powerpc_604_c) \
	$(powerpc_64_c) $(powerpc_altivec64_c) $(powerpc_7400_c) \
	$(powerpc_750_c) $(powerpc_860_c) $(powerpc_e500_c) $(rs6000_c)
rs6000-aix-tdep.o: rs6000-aix-tdep.c $(defs_h) $(gdb_string_h) $(gdb_assert) \
	$(osabi_h) $(regcache_h) $(regset_h) $(gdbtypes_h) $(gdbcore_h) \
	$(target_h) $(value_h) $(infcall_h) $(objfiles_h) $(breakpoint_h) \
	$(rs6000_tdep_h) $(ppc_tdep_h)
s390-nat.o: s390-nat.c $(defs_h) $(regcache_h) $(inferior_h) \
	$(s390_tdep_h) $(target_h) $(linux_nat_h)
s390-tdep.o: s390-tdep.c $(defs_h) $(arch_utils_h) $(frame_h) $(inferior_h) \
	$(symtab_h) $(target_h) $(gdbcore_h) $(gdbcmd_h) $(objfiles_h) \
	$(floatformat_h) $(regcache_h) $(trad_frame_h) $(frame_base_h) \
	$(frame_unwind_h) $(dwarf2_frame_h) $(reggroups_h) $(regset_h) \
	$(value_h) $(gdb_assert_h) $(dis_asm_h) $(solib_svr4_h) \
	$(prologue_value_h) $(s390_tdep_h)
scm-exp.o: scm-exp.c $(defs_h) $(symtab_h) $(gdbtypes_h) $(expression_h) \
	$(parser_defs_h) $(language_h) $(value_h) $(c_lang_h) $(scm_lang_h) \
	$(scm_tags_h)
scm-lang.o: scm-lang.c $(defs_h) $(symtab_h) $(gdbtypes_h) $(expression_h) \
	$(parser_defs_h) $(language_h) $(value_h) $(c_lang_h) $(scm_lang_h) \
	$(scm_tags_h) $(source_h) $(gdb_string_h) $(gdbcore_h) $(infcall_h)
scm-valprint.o: scm-valprint.c $(defs_h) $(symtab_h) $(gdbtypes_h) \
	$(expression_h) $(parser_defs_h) $(language_h) $(value_h) \
	$(scm_lang_h) $(valprint_h) $(gdbcore_h) $(c_lang_h)
score-tdep.o: score-tdep.c $(defs_h) $(gdb_assert_h) $(inferior_h) \
	$(symtab_h) $(objfiles_h) $(gdbcore_h) $(target_h) \
	$(arch_utils_h) $(regcache_h) $(dis_asm_h) $(frame_unwind_h) \
	$(frame_base_h) $(trad_frame_h) $(dwarf2_frame_h) $(score_tdep_h)
sentinel-frame.o: sentinel-frame.c $(defs_h) $(regcache_h) \
	$(sentinel_frame_h) $(inferior_h) $(frame_unwind_h)
ser-go32.o: ser-go32.c $(defs_h) $(gdbcmd_h) $(serial_h) $(gdb_string_h)
serial.o: serial.c $(defs_h) $(serial_h) $(gdb_string_h) $(gdbcmd_h)
ser-base.o: ser-base.c $(defs_h) $(serial_h) $(ser_base_h) $(event_loop_h) \
	$(gdb_select_h) $(gdb_string_h)
ser-pipe.o: ser-pipe.c $(defs_h) $(serial_h) $(ser_base_h) $(ser_unix_h) \
	$(gdb_vfork_h) $(gdb_string_h)
ser-tcp.o: ser-tcp.c $(defs_h) $(serial_h) $(ser_base_h) $(ser_tcp_h) \
	$(gdb_string_h)
ser-unix.o: ser-unix.c $(defs_h) $(serial_h) $(ser_base_h) $(ser_unix_h) \
	$(terminal_h) $(gdb_select_h) $(gdb_string_h) $(gdbcmd_h)
ser-mingw.o: ser-mingw.c $(defs_h) $(serial_h) $(ser_base_h) \
	$(ser_tcp_h) $(gdb_assert_h) $(gdb_string_h)
sh64-tdep.o: sh64-tdep.c $(defs_h) $(frame_h) $(frame_base_h) \
	$(frame_unwind_h) $(dwarf2_frame_h) $(symtab_h) $(gdbtypes_h) \
	$(gdbcmd_h) $(gdbcore_h) $(value_h) $(dis_asm_h) $(inferior_h) \
	$(gdb_string_h) $(gdb_assert_h) $(arch_utils_h) $(regcache_h) \
	$(osabi_h) $(elf_bfd_h) $(elf_sh_h) $(gdb_sim_sh_h) $(language_h)
shnbsd-nat.o: shnbsd-nat.c $(defs_h) $(inferior_h) $(sh_tdep_h) \
	$(shnbsd_tdep_h) $(inf_ptrace_h) $(regcache_h)
shnbsd-tdep.o: shnbsd-tdep.c $(defs_h) $(gdbcore_h) $(regcache_h) $(regset_h) \
	$(value_h) $(osabi_h) $(gdb_assert_h) $(gdb_string_h) $(sh_tdep_h) \
	$(shnbsd_tdep_h) $(solib_svr4_h)
sh-stub.o: sh-stub.c
sh-linux-tdep.o: sh-linux-tdep.c $(defs_h) $(osabi_h) $(solib_svr4_h) \
	$(symtab_h) $(glibc_tdep_h)
sh-tdep.o: sh-tdep.c $(defs_h) $(frame_h) $(frame_base_h) $(frame_unwind_h) \
	$(dwarf2_frame_h) $(symtab_h) $(gdbtypes_h) $(gdbcmd_h) $(gdbcore_h) \
	$(value_h) $(dis_asm_h) $(inferior_h) $(gdb_string_h) \
	$(gdb_assert_h) $(arch_utils_h) $(floatformat_h) $(regcache_h) \
	$(doublest_h) $(osabi_h) $(sh_tdep_h) $(elf_bfd_h) $(solib_svr4_h) \
	$(elf_sh_h) $(gdb_sim_sh_h) $(reggroups_h)
sol2-tdep.o: sol2-tdep.c $(defs_h) $(frame_h) $(symtab_h) $(sol2_tdep_h)
solib.o: solib.c $(defs_h) $(gdb_string_h) $(symtab_h) $(bfd_h) $(symfile_h) \
	$(objfiles_h) $(exceptions_h) $(gdbcore_h) $(command_h) $(target_h) \
	$(frame_h) $(gdb_regex_h) $(inferior_h) $(environ_h) $(language_h) \
	$(gdbcmd_h) $(completer_h) $(filenames_h) $(exec_h) $(solist_h) \
	$(observer_h) $(readline_h)
solib-frv.o: solib-frv.c $(defs_h) $(gdb_string_h) $(inferior_h) \
	$(gdbcore_h) $(solist_h) $(frv_tdep_h) $(objfiles_h) $(symtab_h) \
	$(language_h) $(command_h) $(gdbcmd_h) $(elf_frv_h) $(solib_h)
solib-irix.o: solib-irix.c $(defs_h) $(symtab_h) $(bfd_h) $(symfile_h) \
	$(objfiles_h) $(gdbcore_h) $(target_h) $(inferior_h) $(solist_h) \
	$(solib_h) $(solib_irix_h)
solib-null.o: solib-null.c $(defs_h) $(solist_h)
solib-osf.o: solib-osf.c $(defs_h) $(gdb_string_h) $(bfd_h) $(symtab_h) \
	$(symfile_h) $(objfiles_h) $(target_h) $(inferior_h) $(solist_h)
solib-pa64.o: solib-pa64.c $(defs_h) $(symtab_h) $(bfd_h) $(symfile_h) \
	$(objfiles_h) $(gdbcore_h) $(target_h) $(inferior_h) $(hppa_tdep_h) \
	$(solist_h) $(solib_h) $(solib_pa64_h)
solib-som.o: solib-som.c $(defs_h) $(symtab_h) $(bfd_h) $(symfile_h) \
	$(objfiles_h) $(gdbcore_h) $(target_h) $(inferior_h) \
	$(hppa_tdep_h) $(solist_h) $(solib_h)
solib-sunos.o: solib-sunos.c $(defs_h) $(gdb_string_h) $(symtab_h) $(bfd_h) \
	$(symfile_h) $(objfiles_h) $(gdbcore_h) $(inferior_h) $(solist_h) \
	$(bcache_h) $(regcache_h)
solib-svr4.o: solib-svr4.c $(defs_h) $(elf_external_h) $(elf_common_h) \
	$(elf_mips_h) $(symtab_h) $(bfd_h) $(symfile_h) $(objfiles_h) \
	$(gdbcore_h) $(target_h) $(inferior_h) $(gdb_assert_h) \
	$(solist_h) $(solib_h) $(solib_svr4_h) $(bfd_target_h) $(elf_bfd_h) \
	$(exec_h) $(auxv_h)
solib-target.o: solib-target.c $(defs_h) $(objfiles_h) $(solist_h) \
	$(symtab_h) $(symfile_h) $(target_h) $(vec_h) $(xml_support_h) \
	$(solib_target_h) $(gdb_string_h)
sol-thread.o: sol-thread.c $(defs_h) $(gdbthread_h) $(target_h) \
	$(inferior_h) $(gdb_stat_h) $(gdbcmd_h) $(gdbcore_h) $(regcache_h) \
	$(solib_h) $(symfile_h) $(observer_h) $(gdb_string_h) $(gregset_h)
somread.o: somread.c $(defs_h) $(bfd_h) $(symtab_h) $(symfile_h) \
	$(objfiles_h) $(buildsym_h) $(stabsread_h) $(gdb_stabs_h) \
	$(complaints_h) $(gdb_string_h) $(demangle_h) $(som_h) $(libhppa_h) \
	$(solib_som_h)
source.o: source.c $(defs_h) $(symtab_h) $(expression_h) $(language_h) \
	$(command_h) $(source_h) $(gdbcmd_h) $(frame_h) $(value_h) \
	$(gdb_string_h) $(gdb_stat_h) $(gdbcore_h) $(gdb_regex_h) \
	$(symfile_h) $(objfiles_h) $(annotate_h) $(gdbtypes_h) $(linespec_h) \
	$(filenames_h) $(completer_h) $(ui_out_h) $(readline_h) \
	$(gdb_assert_h)
sparc64fbsd-nat.o: sparc64fbsd-nat.c $(defs_h) $(regcache_h) $(target_h) \
	$(fbsd_nat_h) $(sparc64_tdep_h) $(sparc_nat_h) $(bsd_kvm_h)
sparc64fbsd-tdep.o: sparc64fbsd-tdep.c $(defs_h) $(frame_h) \
	$(frame_unwind_h) $(gdbcore_h) $(osabi_h) $(regcache_h) $(regset_h) \
	$(target_h) $(trad_frame_h) $(gdb_assert_h) $(gdb_string_h) \
	$(sparc64_tdep_h) $(solib_svr4_h)
sparc64-linux-nat.o: sparc64-linux-nat.c $(defs_h) $(regcache_h) \
	$(gregset_h) $(sparc64_tdep_h) $(sparc_tdep_h) \
	$(sparc_nat_h) $(inferior_h) $(target_h) $(linux_nat_h)
sparc64-linux-tdep.o: sparc64-linux-tdep.c $(defs_h) $(frame_h) \
	$(frame_unwind_h) $(dwarf2_frame_h) $(regset_h) $(regcache_h) \
	$(gdbarch_h) $(gdbcore_h) $(osabi_h) $(solib_svr4_h) $(symtab_h) \
	$(trad_frame_h) $(tramp_frame_h) $(sparc64_tdep_h)
sparc64-nat.o: sparc64-nat.c $(defs_h) $(gdbarch_h) $(sparc64_tdep_h) \
	$(sparc_nat_h)
sparc64nbsd-nat.o: sparc64nbsd-nat.c $(defs_h) $(gdbcore_h) $(regcache_h) \
	$(target_h) $(sparc64_tdep_h) $(sparc_nat_h) $(bsd_kvm_h)
sparc64nbsd-tdep.o: sparc64nbsd-tdep.c $(defs_h) $(frame_h) \
	$(frame_unwind_h) $(gdbcore_h) $(osabi_h) $(regcache_h) $(regset_h) \
	$(symtab_h) $(objfiles_h) $(solib_svr4_h) $(trad_frame_h) \
	$(gdb_assert_h) $(gdb_string_h) $(sparc64_tdep_h) $(nbsd_tdep_h)
sparc64obsd-tdep.o: sparc64obsd-tdep.c $(defs_h) $(frame_h) \
	$(frame_unwind_h) $(gdbcore_h) $(osabi_h) $(regcache_h) $(regset_h) \
	$(symtab_h) $(objfiles_h) $(trad_frame_h) $(gdb_assert_h) \
	$(obsd_tdep_h) $(sparc64_tdep_h) $(solib_svr4_h) $(bsd_uthread_h)
sparc64-sol2-tdep.o: sparc64-sol2-tdep.c $(defs_h) $(frame_h) \
	$(frame_unwind_h) $(gdbarch_h) $(symtab_h) $(objfiles_h) $(osabi_h) \
	$(trad_frame_h) $(gdb_assert_h) $(sol2_tdep_h) $(sparc64_tdep_h) \
	$(solib_svr4_h)
sparc64-tdep.o: sparc64-tdep.c $(defs_h) $(arch_utils_h) $(dwarf2_frame_h) \
	$(floatformat_h) $(frame_h) $(frame_base_h) $(frame_unwind_h) \
	$(gdbcore_h) $(gdbtypes_h) $(inferior_h) $(symtab_h) $(objfiles_h) \
	$(osabi_h) $(regcache_h) $(target_h) $(value_h) $(gdb_assert_h) \
	$(gdb_string_h) $(sparc64_tdep_h)
sparc-linux-nat.o: sparc-linux-nat.c $(defs_h) $(regcache_h) $(gregset_h) \
	$(sparc_tdep_h) $(sparc_nat_h) $(inferior_h) $(target_h) \
	$(linux_nat_h)
sparc-linux-tdep.o: sparc-linux-tdep.c $(defs_h) $(dwarf2_frame_h) \
	$(gdbtypes_h) $(frame_h) $(frame_unwind_h) $(regset_h) \
	$(gdbarch_h) $(gdbcore_h) $(osabi_h) $(regcache_h) $(solib_svr4_h) \
	$(symtab_h) $(trad_frame_h) $(tramp_frame_h) $(sparc_tdep_h)
sparc-nat.o: sparc-nat.c $(defs_h) $(inferior_h) $(regcache_h) $(target_h) \
	$(gdb_assert_h) $(gdb_string_h) $(gdb_wait_h) $(sparc_tdep_h) \
	$(sparc_nat_h) $(inf_ptrace_h)
sparcnbsd-nat.o: sparcnbsd-nat.c $(defs_h) $(regcache_h) $(target_h) \
	$(sparc_tdep_h) $(sparc_nat_h) $(bsd_kvm_h)
sparcnbsd-tdep.o: sparcnbsd-tdep.c $(defs_h) $(frame_h) $(frame_unwind_h) \
	$(gdbcore_h) $(gdbtypes_h) $(osabi_h) $(regcache_h) $(regset_h) \
	$(solib_svr4_h) $(symtab_h) $(trad_frame_h) $(gdb_assert_h) \
	$(gdb_string_h) $(sparc_tdep_h) $(nbsd_tdep_h)
sparcobsd-tdep.o: sparcobsd-tdep.c $(defs_h) $(floatformat_h) $(frame_h) \
	$(frame_unwind_h) $(gdbcore_h) $(osabi_h) $(regcache_h) \
	$(symtab_h) $(trad_frame_h) $(gdb_assert_h) $(obsd_tdep_h) \
	$(sparc_tdep_h) $(solib_svr4_h) $(bsd_uthread_h)
sparc-sol2-nat.o: sparc-sol2-nat.c $(defs_h) $(regcache_h) $(gregset_h) \
	$(sparc_tdep_h) $(sparc64_tdep_h)
sparc-sol2-tdep.o: sparc-sol2-tdep.c $(defs_h) $(frame_h) $(frame_unwind_h) \
	$(gdbcore_h) $(symtab_h) $(objfiles_h) $(osabi_h) $(regcache_h) \
	$(target_h) $(trad_frame_h) $(gdb_assert_h) $(gdb_string_h) \
	$(sol2_tdep_h) $(sparc_tdep_h) $(solib_svr4_h)
sparc-stub.o: sparc-stub.c
sparc-tdep.o: sparc-tdep.c $(defs_h) $(arch_utils_h) $(dis_asm_h) \
	$(dwarf2_frame_h) $(floatformat_h) $(frame_h) $(frame_base_h) \
	$(frame_unwind_h) $(gdbcore_h) $(gdbtypes_h) $(inferior_h) \
	$(symtab_h) $(objfiles_h) $(osabi_h) $(regcache_h) $(target_h) \
	$(value_h) $(gdb_assert_h) $(gdb_string_h) $(sparc_tdep_h)
spu-linux-nat.o: spu-linux-nat.c $(defs_h) $(gdbcore_h) $(gdb_string_h) \
	$(target_h) $(inferior_h) $(inf_ptrace_h) $(regcache_h) $(symfile_h) \
	$(gdb_wait_h) $(gdbthread_h) $(spu_tdep_h)
spu-tdep.o: spu-tdep.c $(defs_h) $(arch_utils_h) $(gdbtypes_h) $(gdbcmd_h) \
	$(gdbcore_h) $(gdb_string_h) $(gdb_assert_h) $(frame_h) \
	$(frame_unwind_h) $(frame_base_h) $(trad_frame_h) $(symtab_h) \
	$(symfile_h) $(value_h) $(inferior_h) $(dis_asm_h) $(objfiles_h) \
	$(language_h) $(regcache_h) $(reggroups_h) $(floatformat_h) \
	$(observer_h) $(spu_tdep_h)
stabsread.o: stabsread.c $(defs_h) $(gdb_string_h) $(bfd_h) $(gdb_obstack_h) \
	$(symtab_h) $(gdbtypes_h) $(expression_h) $(symfile_h) $(objfiles_h) \
	$(aout_stab_gnu_h) $(libaout_h) $(aout_aout64_h) $(gdb_stabs_h) \
	$(buildsym_h) $(complaints_h) $(demangle_h) $(language_h) \
	$(doublest_h) $(cp_abi_h) $(cp_support_h) $(stabsread_h) \
	$(gdb_assert_h)
stack.o: stack.c $(defs_h) $(value_h) $(symtab_h) $(gdbtypes_h) \
	$(expression_h) $(language_h) $(frame_h) $(gdbcmd_h) $(gdbcore_h) \
	$(target_h) $(source_h) $(breakpoint_h) $(demangle_h) $(inferior_h) \
	$(annotate_h) $(ui_out_h) $(block_h) $(stack_h) $(dictionary_h) \
	$(exceptions_h) $(reggroups_h) $(regcache_h) $(solib_h) \
	$(valprint_h) $(gdb_assert_h) $(gdb_string_h)
std-regs.o: std-regs.c $(defs_h) $(user_regs_h) $(frame_h) $(gdbtypes_h) \
	$(value_h) $(gdb_string_h)
symfile.o: symfile.c $(defs_h) $(bfdlink_h) $(symtab_h) $(gdbtypes_h) \
	$(gdbcore_h) $(frame_h) $(target_h) $(value_h) $(symfile_h) \
	$(objfiles_h) $(source_h) $(gdbcmd_h) $(breakpoint_h) $(language_h) \
	$(complaints_h) $(demangle_h) $(inferior_h) $(filenames_h) \
	$(gdb_stabs_h) $(gdb_obstack_h) $(completer_h) $(bcache_h) \
	$(hashtab_h) $(readline_h) $(gdb_assert_h) $(block_h) \
	$(gdb_string_h) $(gdb_stat_h) $(observer_h) $(exec_h) \
	$(parser_defs_h) $(varobj_h) $(elf_bfd_h) $(solib_h)
symfile-mem.o: symfile-mem.c $(defs_h) $(symtab_h) $(gdbcore_h) \
	$(objfiles_h) $(exceptions_h) $(gdbcmd_h) $(target_h) $(value_h) \
	$(symfile_h) $(observer_h) $(auxv_h) $(elf_common_h)
symmisc.o: symmisc.c $(defs_h) $(symtab_h) $(gdbtypes_h) $(bfd_h) \
	$(symfile_h) $(objfiles_h) $(breakpoint_h) $(command_h) \
	$(gdb_obstack_h) $(exceptions_h) $(language_h) $(bcache_h) \
	$(block_h) $(gdb_regex_h) $(gdb_stat_h) $(dictionary_h) \
	$(gdb_string_h) $(readline_h)
symtab.o: symtab.c $(defs_h) $(symtab_h) $(gdbtypes_h) $(gdbcore_h) \
	$(frame_h) $(target_h) $(value_h) $(symfile_h) $(objfiles_h) \
	$(gdbcmd_h) $(call_cmds_h) $(gdb_regex_h) $(expression_h) \
	$(language_h) $(demangle_h) $(inferior_h) $(linespec_h) $(source_h) \
	$(filenames_h) $(objc_lang_h) $(ada_lang_h) $(hashtab_h) \
	$(gdb_obstack_h) $(block_h) $(dictionary_h) $(gdb_string_h) \
	$(gdb_stat_h) $(cp_abi_h) $(observer_h) $(gdb_assert_h) \
	$(solist_h) $(p_lang_h) $(addrmap_h)
target.o: target.c $(defs_h) $(gdb_string_h) $(target_h) $(gdbcmd_h) \
	$(symtab_h) $(inferior_h) $(bfd_h) $(symfile_h) $(objfiles_h) \
	$(gdb_wait_h) $(dcache_h) $(regcache_h) $(gdb_assert_h) $(gdbcore_h) \
	$(exceptions_h) $(target_descriptions_h) $(gdbthread_h)
target-descriptions.o: target-descriptions.c $(defs_h) $(arch_utils_h) \
	$(target_h) $(target_descriptions_h) $(vec_h) $(xml_tdesc_h) \
	$(gdbcmd_h) $(gdb_assert_h) $(gdbtypes_h) $(reggroups_h) \
	$(xml_support_h) $(gdb_obstack_h) $(hashtab_h)
target-memory.o: target-memory.c $(defs_h) $(vec_h) $(target_h) \
	$(memory_map_h) $(gdb_assert_h)
thread.o: thread.c $(defs_h) $(symtab_h) $(frame_h) $(inferior_h) \
	$(environ_h) $(value_h) $(target_h) $(gdbthread_h) $(exceptions_h) \
	$(command_h) $(gdbcmd_h) $(regcache_h) $(gdb_h) $(gdb_string_h) \
	$(ui_out_h) $(observer_h) $(annotate_h) $(cli_decode_h)
top.o: top.c $(defs_h) $(gdbcmd_h) $(call_cmds_h) $(cli_cmds_h) \
	$(cli_script_h) $(cli_setshow_h) $(cli_decode_h) $(symtab_h) \
	$(inferior_h) $(exceptions_h) $(target_h) $(breakpoint_h) \
	$(gdbtypes_h) $(expression_h) $(value_h) $(language_h) $(terminal_h) \
	$(annotate_h) $(completer_h) $(top_h) $(version_h) $(serial_h) \
	$(doublest_h) $(gdb_assert_h) $(readline_h) $(readline_history_h) \
	$(event_top_h) $(gdb_string_h) $(gdb_stat_h) $(ui_out_h) \
	$(cli_out_h) $(main_h) $(event_loop_h) $(gdbthread_h)
tracepoint.o: tracepoint.c $(defs_h) $(symtab_h) $(frame_h) $(gdbtypes_h) \
	$(expression_h) $(gdbcmd_h) $(value_h) $(target_h) $(language_h) \
	$(gdb_string_h) $(inferior_h) $(tracepoint_h) $(remote_h) \
	$(linespec_h) $(regcache_h) $(completer_h) \
	$(block_h) $(dictionary_h) $(ax_h) $(ax_gdb_h) $(readline_h) \
	$(readline_history_h) $(observer_h)
trad-frame.o: trad-frame.c $(defs_h) $(frame_h) $(trad_frame_h) \
	$(regcache_h) $(frame_unwind_h) $(value_h)
tramp-frame.o: tramp-frame.c $(defs_h) $(tramp_frame_h) $(frame_unwind_h) \
	$(gdbcore_h) $(symtab_h) $(objfiles_h) $(target_h) $(trad_frame_h) \
	$(frame_base_h) $(gdb_assert_h)
typeprint.o: typeprint.c $(defs_h) $(gdb_obstack_h) $(bfd_h) $(symtab_h) \
	$(gdbtypes_h) $(expression_h) $(value_h) $(gdbcore_h) $(command_h) \
	$(gdbcmd_h) $(target_h) $(language_h) $(cp_abi_h) $(typeprint_h) \
	$(gdb_string_h)
ui-file.o: ui-file.c $(defs_h) $(ui_file_h) $(gdb_string_h)
ui-out.o: ui-out.c $(defs_h) $(gdb_string_h) $(expression_h) $(language_h) \
	$(ui_out_h) $(gdb_assert_h)
user-regs.o: user-regs.c $(defs_h) $(user_regs_h) $(gdbtypes_h) \
	$(gdb_string_h) $(gdb_assert_h) $(frame_h)
utils.o: utils.c $(defs_h) $(gdb_assert_h) $(gdb_string_h) $(event_top_h) \
	$(exceptions_h) $(tui_h) $(gdbcmd_h) $(serial_h) $(bfd_h) \
	$(target_h) $(demangle_h) $(expression_h) $(language_h) $(charset_h) \
	$(annotate_h) $(filenames_h) $(symfile_h) $(inferior_h) $(top_h) \
	$(gdb_curses_h) $(readline_h) $(gdb_obstack_h) $(gdbcore_h)
v850-tdep.o: v850-tdep.c $(defs_h) $(frame_h) $(frame_base_h) $(trad_frame_h) \
	$(frame_unwind_h) $(dwarf2_frame_h) $(gdbtypes_h) $(inferior_h) \
	$(gdb_string_h) $(gdb_assert_h) $(gdbcore_h) $(arch_utils_h) \
	$(regcache_h) $(dis_asm_h) $(osabi_h)
valarith.o: valarith.c $(defs_h) $(value_h) $(symtab_h) $(gdbtypes_h) \
	$(expression_h) $(target_h) $(language_h) $(gdb_string_h) \
	$(doublest_h) $(dfp_h) $(infcall_h)
valops.o: valops.c $(defs_h) $(symtab_h) $(gdbtypes_h) $(value_h) $(frame_h) \
	$(inferior_h) $(gdbcore_h) $(target_h) $(demangle_h) $(language_h) \
	$(gdbcmd_h) $(regcache_h) $(cp_abi_h) $(block_h) $(infcall_h) \
	$(dictionary_h) $(cp_support_h) $(gdb_string_h) $(gdb_assert_h) \
	$(cp_support_h) $(observer_h) $(dfp_h)
valprint.o: valprint.c $(defs_h) $(gdb_string_h) $(symtab_h) $(gdbtypes_h) \
	$(value_h) $(gdbcore_h) $(gdbcmd_h) $(target_h) $(language_h) \
	$(annotate_h) $(valprint_h) $(floatformat_h) $(doublest_h) \
	$(exceptions_h) $(dfp_h)
value.o: value.c $(defs_h) $(gdb_string_h) $(symtab_h) $(gdbtypes_h) \
	$(value_h) $(gdbcore_h) $(command_h) $(gdbcmd_h) $(target_h) \
	$(language_h) $(demangle_h) $(doublest_h) \
	$(gdb_assert_h) $(regcache_h) $(block_h) $(dfp_h) $(objfiles_h)
varobj.o: varobj.c $(defs_h) $(exceptions_h) $(value_h) $(expression_h) \
	$(frame_h) $(language_h) $(wrapper_h) $(gdbcmd_h) $(block_h) \
	$(gdb_assert_h) $(gdb_string_h) $(varobj_h) $(vec_h) $(gdbthread_h) \
	$(inferior_h)
vaxbsd-nat.o: vaxbsd-nat.c $(defs_h) $(inferior_h) $(regcache_h) $(target_h) \
	$(vax_tdep_h) $(inf_ptrace_h) $(bsd_kvm_h)
vax-nat.o: vax-nat.c $(defs_h) $(inferior_h) $(gdb_assert_h) $(vax_tdep_h) \
	$(inf_ptrace_h)
vaxnbsd-tdep.o: vaxnbsd-tdep.c $(defs_h) $(arch_utils_h) $(osabi_h) \
	$(vax_tdep_h) $(solib_svr4_h) $(gdb_string_h)
vaxobsd-tdep.o: vaxobsd-tdep.c $(defs_h) $(arch_utils_h) $(frame_h) \
	$(frame_unwind_h) $(osabi_h) $(symtab_h) $(trad_frame_h) \
	$(vax_tdep_h) $(gdb_string_h)
vax-tdep.o: vax-tdep.c $(defs_h) $(arch_utils_h) $(dis_asm_h) \
	$(floatformat_h) $(frame_h) $(frame_base_h) $(frame_unwind_h) \
	$(gdbcore_h) $(gdbtypes_h) $(osabi_h) $(regcache_h) $(regset_h) \
	$(trad_frame_h) $(value_h) $(gdb_string_h) $(vax_tdep_h)
vec.o: vec.c $(defs_h) $(vec_h)
win32-nat.o: win32-nat.c $(defs_h) $(frame_h) $(inferior_h) $(target_h) \
	$(exceptions_h) $(gdbcore_h) $(command_h) $(completer_h) \
	$(regcache_h) $(top_h) $(buildsym_h) $(symfile_h) $(objfiles_h) \
	$(gdb_string_h) $(gdbthread_h) $(gdbcmd_h) $(exec_h) $(solist_h) \
	$(solib_h) $(i386_tdep_h) $(i387_tdep_h) $(gdb_obstack_h) \
	$(xml_support_h) $(i386_cygwin_tdep_h)
win32-termcap.o: win32-termcap.c
wrapper.o: wrapper.c $(defs_h) $(value_h) $(exceptions_h) $(wrapper_h) \
	$(ui_out_h)
xcoffread.o: xcoffread.c $(defs_h) $(bfd_h) $(gdb_string_h) $(gdb_stat_h) \
	$(coff_internal_h) $(libcoff_h) $(coff_xcoff_h) $(libxcoff_h) \
	$(coff_rs6000_h) $(symtab_h) $(gdbtypes_h) $(symfile_h) \
	$(objfiles_h) $(buildsym_h) $(stabsread_h) $(expression_h) \
	$(complaints_h) $(gdb_stabs_h) $(aout_stab_gnu_h)
xcoffsolib.o: xcoffsolib.c $(defs_h) $(bfd_h) $(xcoffsolib_h) $(inferior_h) \
	$(gdbcmd_h) $(symfile_h) $(frame_h) $(gdb_regex_h)
xml-tdesc.o: xml-tdesc.c $(defs_h) $(target_h) $(target_descriptions_h) \
	$(xml_tdesc_h) $(xml_support_h) $(filenames_h) $(gdb_assert_h) \
	$(gdbtypes_h)
xml-support.o: xml-support.c $(defs_h) $(xml_support_h) $(exceptions_h) \
	$(gdbcmd_h) $(gdb_string_h) $(gdb_expat_h) $(safe_ctype_h)
xstormy16-tdep.o: xstormy16-tdep.c $(defs_h) $(frame_h) $(frame_base_h) \
	$(frame_unwind_h) $(dwarf2_frame_h) $(symtab_h) $(gdbtypes_h) \
	$(gdbcmd_h) $(gdbcore_h) $(value_h) $(dis_asm_h) $(inferior_h) \
	$(gdb_string_h) $(gdb_assert_h) $(arch_utils_h) $(floatformat_h) \
	$(regcache_h) $(doublest_h) $(osabi_h) $(objfiles_h)
xtensa-linux-nat.o: xtensa-linux-nat.c $(defs_h) $(gdb_string_h) $(frame_h) \
	$(inferior_h) $(gdbcore_h) $(regcache_h) $(gdb_assert_h) \
	$(gdb_wait_h) $(gregset_h) $(ppc_tdep_h) $(target_h) \
	$(linux_nat_h) $(xtensa_tdep_h) xtensa-xtregs.c
xtensa-linux-tdep.o: xtensa-linux-tdep.c $(defs_h) $(osabi_h) $(solib_svr4_h) \
	$(symtab_h) $(xtensa_tdep_h)
xtensa-tdep.o: xtensa-tdep.c $(defs_h) $(doublest_h) $(frame_h) \
	$(frame_unwind_h) $(frame_base_h) $(inferior_h) $(symtab_h) \
	$(value_h) $(gdbcmd_h) $(gdbcore_h) $(dis_asm_h) $(symfile_h) \
	$(objfiles_h) $(gdb_string_h) $(linespec_h) $(regcache_h) \
	$(reggroups_h) $(arch_utils_h) $(osabi_h) $(block_h) $(gdb_assert_h) \
	$(elf_bfd_h) $(xtensa_tdep_h) $(dwarf2_frame_h) $(solib_svr4_h)
xtensa-config.o: $(defs_h) $(xtensa_tdep_h)

#
d1524 32
a1555 34
cli-cmds.o: $(srcdir)/cli/cli-cmds.c $(defs_h) $(readline_h) \
	$(readline_tilde_h) $(completer_h) $(target_h) $(gdb_wait_h) \
	$(gdb_regex_h) $(gdb_string_h) $(gdb_vfork_h) $(linespec_h) \
	$(expression_h) $(frame_h) $(value_h) $(language_h) $(filenames_h) \
	$(objfiles_h) $(source_h) $(disasm_h) $(ui_out_h) $(top_h) \
	$(cli_decode_h) $(cli_script_h) $(cli_setshow_h) $(cli_cmds_h) \
	$(tui_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/cli/cli-cmds.c
cli-decode.o: $(srcdir)/cli/cli-decode.c $(defs_h) $(symtab_h) \
	$(gdb_regex_h) $(gdb_string_h) $(completer_h) $(ui_out_h) \
	$(cli_cmds_h) $(cli_decode_h) $(tui_h) $(gdb_assert_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/cli/cli-decode.c
cli-dump.o: $(srcdir)/cli/cli-dump.c $(defs_h) $(gdb_string_h) \
	$(cli_decode_h) $(cli_cmds_h) $(value_h) $(completer_h) \
	$(cli_dump_h) $(gdb_assert_h) $(target_h) $(readline_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/cli/cli-dump.c
cli-interp.o: $(srcdir)/cli/cli-interp.c $(defs_h) $(interps_h) $(wrapper_h) \
	$(event_top_h) $(ui_out_h) $(cli_out_h) $(top_h) $(gdb_string_h) \
	$(exceptions_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/cli/cli-interp.c
cli-logging.o: $(srcdir)/cli/cli-logging.c $(defs_h) $(gdbcmd_h) $(ui_out_h) \
	$(gdb_string_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/cli/cli-logging.c
cli-script.o: $(srcdir)/cli/cli-script.c $(defs_h) $(value_h) $(language_h) \
	$(ui_out_h) $(gdb_string_h) $(exceptions_h) $(top_h) $(cli_cmds_h) \
	$(cli_decode_h) $(cli_script_h) $(gdb_assert_h) $(breakpoint_h) \
	$(python_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/cli/cli-script.c
cli-setshow.o: $(srcdir)/cli/cli-setshow.c $(defs_h) $(readline_tilde_h) \
	$(value_h) $(gdb_string_h) $(ui_out_h) $(cli_decode_h) $(cli_cmds_h) \
	$(cli_setshow_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/cli/cli-setshow.c
cli-utils.o: $(srcdir)/cli/cli-utils.c $(defs_h) $(cli_utils_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/cli/cli-utils.c
d1620 46
a1665 90
gdbtk.o: $(srcdir)/gdbtk/generic/gdbtk.c \
		$(srcdir)/gdbtk/generic/gdbtk.h $(defs_h) \
		$(symtab_h) $(inferior_h) $(command_h) \
		$(bfd_h) $(symfile_h) $(objfiles_h) $(target_h) \
		$(gdb_string_h) $(tracepoint_h) $(top_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(IDE_CFLAGS) $(ALL_TCL_CFLAGS) \
		$(X11_CFLAGS) $(GDBTK_CFLAGS)\
		$(srcdir)/gdbtk/generic/gdbtk.c \
		-DGDBTK_LIBRARY=\"$(GDBTK_LIBRARY)\" -DSRC_DIR=\"$(GDBTK_SRC_DIR)\"

gdbtk-bp.o: $(srcdir)/gdbtk/generic/gdbtk-bp.c \
		$(srcdir)/gdbtk/generic/gdbtk.h \
		$(srcdir)/gdbtk/generic/gdbtk-cmds.h \
		$(defs_h) $(breakpoint_h) $(tracepoint_h) \
		$(symfile_h) $(symtab_h) $(gdb_string_h) $(observer_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(IDE_CFLAGS) $(ALL_TCL_CFLAGS) \
		$(X11_CFLAGS) $(GDBTK_CFLAGS) \
		$(srcdir)/gdbtk/generic/gdbtk-bp.c \
		-DGDBTK_LIBRARY=\"$(GDBTK_LIBRARY)\"

gdbtk-cmds.o: $(srcdir)/gdbtk/generic/gdbtk-cmds.c \
		$(srcdir)/gdbtk/generic/gdbtk.h \
		$(srcdir)/gdbtk/generic/gdbtk-cmds.h \
		$(defs_h) $(inferior_h)	$(source_h) $(symfile_h) \
		$(objfiles_h) $(gdbcore_h) $(demangle_h) $(linespec_h) \
		$(tui_file_h) $(top_h) $(annotate_h) $(block_h) \
		$(dictionary_h) $(gdb_string_h) $(dis_asm_h) $(gdbcmd_h) \
		$(varobj_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(IDE_CFLAGS) $(ALL_TCL_CFLAGS) \
		$(X11_CFLAGS) $(GDBTK_CFLAGS) \
		$(srcdir)/gdbtk/generic/gdbtk-cmds.c \
		-DGDBTK_LIBRARY=\"$(GDBTK_LIBRARY)\"

gdbtk-hooks.o: $(srcdir)/gdbtk/generic/gdbtk-hooks.c \
		$(srcdir)/gdbtk/generic/gdbtk.h $(defs_h) \
		$(symtab_h) $(inferior_h) $(command_h) \
		$(bfd_h) $(symfile_h) $(objfiles_h) $(target_h) \
		$(gdb_string_h) $(tracepoint_h) $(observer_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(IDE_CFLAGS) $(ALL_TCL_CFLAGS)  \
		$(X11_CFLAGS) $(GDBTK_CFLAGS)\
		$(srcdir)/gdbtk/generic/gdbtk-hooks.c \
		-DGDBTK_LIBRARY=\"$(GDBTK_LIBRARY)\"

gdbtk-interp.o: $(srcdir)/gdbtk/generic/gdbtk-interp.c \
		$(defs_h) $(interps_h) $(ui_out_h) $(ui_file_h) \
		$(cli_out_h) $(gdb_string_h) $(cli_cmds_h) $(cli_decode_h) \
		$(srcdir)/gdbtk/generic/gdbtk.h
	$(CC) -c $(INTERNAL_CFLAGS) $(IDE_CFLAGS) $(ALL_TCL_CFLAGS) \
		$(X11_CFLAGS) $(GDBTK_CFLAGS) \
		$(srcdir)/gdbtk/generic/gdbtk-interp.c

gdbtk-main.o: $(srcdir)/gdbtk/generic/gdbtk-main.c $(defs_h) $(main_h) \
		$(gdb_string_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(IDE_CFLAGS) $(ALL_TCL_CFLAGS)  \
		$(X11_CFLAGS) $(GDBTK_CFLAGS)\
		$(srcdir)/gdbtk/generic/gdbtk-main.c \
		-DGDBTK_LIBRARY=\"$(GDBTK_LIBRARY)\"

gdbtk-register.o: $(srcdir)/gdbtk/generic/gdbtk-register.c \
		$(srcdir)/gdbtk/generic/gdbtk.h \
		$(srcdir)/gdbtk/generic/gdbtk-cmds.h \
		$(defs_h) $(frame_h) $(value_h) $(gdb_string_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(IDE_CFLAGS) $(ALL_TCL_CFLAGS) \
		$(X11_CFLAGS) \
		$(GDBTK_CFLAGS) $(srcdir)/gdbtk/generic/gdbtk-register.c \
		-DGDBTK_LIBRARY=\"$(GDBTK_LIBRARY)\"

gdbtk-stack.o: $(srcdir)/gdbtk/generic/gdbtk-stack.c \
	$(srcdir)/gdbtk/generic/gdbtk.h $(srcdir)/gdbtk/generic/gdbtk-cmds.h \
	$(srcdir)/gdbtk/generic/gdbtk-wrapper.h \
	$(defs_h) $(target_h) $(breakpoint_h) $(linespec_h) \
	$(block_h) $(dictionary_h) $(varobj_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(IDE_CFLAGS) $(ALL_TCL_CFLAGS) \
	 	$(X11_CFLAGS) $(GDBTK_CFLAGS) \
		$(srcdir)/gdbtk/generic/gdbtk-stack.c \
		-DGDBTK_LIBRARY=\"$(GDBTK_LIBRARY)\"

gdbtk-varobj.o: $(srcdir)/gdbtk/generic/gdbtk-varobj.c \
		$(srcdir)/gdbtk/generic/gdbtk.h \
		$(srcdir)/gdbtk/generic/gdbtk-wrapper.h \
		$(defs_h) $(value_h) $(varobj_h) $(gdb_string_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(IDE_CFLAGS) $(ALL_TCL_CFLAGS)  \
		$(X11_CFLAGS) $(GDBTK_CFLAGS) \
		$(srcdir)/gdbtk/generic/gdbtk-varobj.c

gdbtk-wrapper.o: $(srcdir)/gdbtk/generic/gdbtk-wrapper.c \
	$(srcdir)/gdbtk/generic/gdbtk-wrapper.h \
	$(defs_h) $(frame_h) $(value_h) $(varobj_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(IDE_CFLAGS) $(GDBTK_CFLAGS)\
		$(srcdir)/gdbtk/generic/gdbtk-wrapper.c
d1673 63
a1735 56
mi-cmd-break.o: $(srcdir)/mi/mi-cmd-break.c $(defs_h) $(mi_cmds_h) \
	$(ui_out_h) $(mi_out_h) $(breakpoint_h) $(gdb_string_h) \
	$(mi_getopt_h) $(gdb_h) $(observer_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/mi/mi-cmd-break.c
mi-cmd-disas.o: $(srcdir)/mi/mi-cmd-disas.c $(defs_h) $(target_h) $(value_h) \
	$(mi_cmds_h) $(mi_getopt_h) $(gdb_string_h) $(ui_out_h) $(disasm_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/mi/mi-cmd-disas.c
mi-cmd-env.o: $(srcdir)/mi/mi-cmd-env.c $(defs_h) $(inferior_h) $(value_h) \
	$(mi_out_h) $(mi_cmds_h) $(mi_getopt_h) $(symtab_h) $(target_h) \
	$(environ_h) $(command_h) $(ui_out_h) $(top_h) $(gdb_string_h) \
	$(gdb_stat_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/mi/mi-cmd-env.c
mi-cmd-file.o: $(srcdir)/mi/mi-cmd-file.c $(defs_h) $(mi_cmds_h) \
	$(mi_getopt_h) $(ui_out_h) $(symtab_h) $(source_h) $(objfiles_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/mi/mi-cmd-file.c
mi-cmds.o: $(srcdir)/mi/mi-cmds.c $(defs_h) $(top_h) $(mi_cmds_h) \
	$(gdb_string_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/mi/mi-cmds.c
mi-cmd-stack.o: $(srcdir)/mi/mi-cmd-stack.c $(defs_h) $(target_h) $(frame_h) \
	$(value_h) $(mi_cmds_h) $(ui_out_h) $(symtab_h) $(block_h) \
	$(stack_h) $(dictionary_h) $(gdb_string_h) $(language_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/mi/mi-cmd-stack.c
mi-cmd-target.o: $(srcdir)/mi/mi-cmd-target.c $(defs_h) $(mi_cmds_h) \
	$(mi_getopt_h) $(remote_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/mi/mi-cmd-target.c
mi-cmd-var.o: $(srcdir)/mi/mi-cmd-var.c $(defs_h) $(mi_cmds_h) $(ui_out_h) \
	$(mi_out_h) $(varobj_h) $(value_h) $(gdb_string_h) $(mi_getopt_h) \
	$(gdbthread_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/mi/mi-cmd-var.c
mi-console.o: $(srcdir)/mi/mi-console.c $(defs_h) $(mi_console_h) \
	$(gdb_string_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/mi/mi-console.c
mi-getopt.o: $(srcdir)/mi/mi-getopt.c $(defs_h) $(mi_getopt_h) \
	$(gdb_string_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/mi/mi-getopt.c
mi-interp.o: $(srcdir)/mi/mi-interp.c $(defs_h) $(gdb_string_h) $(interps_h) \
	$(event_top_h) $(event_loop_h) $(inferior_h) $(ui_out_h) $(top_h) \
	$(exceptions_h) $(mi_main_h) $(mi_cmds_h) $(mi_out_h) \
	$(mi_console_h) $(observer_h) $(gdbthread_h) $(interps_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/mi/mi-interp.c
mi-main.o: $(srcdir)/mi/mi-main.c $(defs_h) $(target_h) $(inferior_h) \
	$(gdb_string_h) $(exceptions_h) $(top_h) $(gdbthread_h) $(mi_cmds_h) \
	$(mi_parse_h) $(mi_getopt_h) $(mi_console_h) $(ui_out_h) $(mi_out_h) \
	$(interps_h) $(event_loop_h) $(event_top_h) $(gdbcore_h) $(value_h) \
	$(regcache_h) $(gdb_h) $(frame_h) $(mi_main_h) $(language_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/mi/mi-main.c
mi-out.o: $(srcdir)/mi/mi-out.c $(defs_h) $(ui_out_h) $(mi_out_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/mi/mi-out.c
mi-parse.o: $(srcdir)/mi/mi-parse.c $(defs_h) $(mi_cmds_h) $(mi_parse_h) \
	$(gdb_string_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/mi/mi-parse.c
mi-symbol-cmds.o: $(srcdir)/mi/mi-symbol-cmds.c $(defs_h) $(mi_cmds_h) \
	$(symtab_h) $(ui_out_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/mi/mi-symbol-cmds.c
mi-common.o: $(srcdir)/mi/mi-common.c $(defs_h) $(mi_common_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/mi/mi-common.c
d1743 3
a1745 3
signals.o: $(srcdir)/signals/signals.c $(server_h) $(defs_h) $(target_h) \
	$(gdb_string_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/signals/signals.c
d1753 112
a1864 85
tui.o: $(srcdir)/tui/tui.c $(defs_h) $(gdbcmd_h) $(tui_h) $(tui_hooks_h) \
	$(tui_data_h) $(tui_layout_h) $(tui_io_h) $(tui_regs_h) \
	$(tui_stack_h) $(tui_win_h) $(tui_winsource_h) $(tui_windata_h) \
	$(target_h) $(frame_h) $(breakpoint_h) $(inferior_h) $(symtab_h) \
	$(source_h) $(gdb_curses_h) $(readline_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tui.c
tui-command.o: $(srcdir)/tui/tui-command.c $(defs_h) $(tui_h) $(tui_data_h) \
	$(tui_win_h) $(tui_io_h) $(gdb_curses_h) $(gdb_string_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tui-command.c
tui-data.o: $(srcdir)/tui/tui-data.c $(defs_h) $(symtab_h) $(tui_h) \
	$(tui_data_h) $(tui_wingeneral_h) $(gdb_string_h) $(gdb_curses_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tui-data.c
tui-disasm.o: $(srcdir)/tui/tui-disasm.c $(defs_h) $(symtab_h) \
	$(breakpoint_h) $(frame_h) $(value_h) $(source_h) $(disasm_h) \
	$(gdb_string_h) $(tui_h) $(tui_data_h) $(tui_win_h) $(tui_layout_h) \
	$(tui_winsource_h) $(tui_stack_h) $(tui_file_h) $(gdb_curses_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tui-disasm.c
tui-file.o: $(srcdir)/tui/tui-file.c $(defs_h) $(ui_file_h) $(tui_file_h) \
	$(tui_io_h) $(tui_h) $(gdb_string_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tui-file.c
tui-hooks.o: $(srcdir)/tui/tui-hooks.c $(defs_h) $(symtab_h) $(inferior_h) \
	$(command_h) $(bfd_h) $(symfile_h) $(objfiles_h) $(target_h) \
	$(gdbcore_h) $(event_loop_h) $(event_top_h) $(frame_h) \
	$(breakpoint_h) $(ui_out_h) $(top_h) $(observer_h) \
	$(tui_h) $(tui_hooks_h) $(tui_data_h) $(tui_layout_h) $(tui_io_h) \
	$(tui_regs_h) $(tui_win_h) $(tui_stack_h) $(tui_windata_h) \
	$(tui_winsource_h) $(gdb_curses_h) $(readline_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tui-hooks.c
tui-interp.o: $(srcdir)/tui/tui-interp.c $(defs_h) $(interps_h) $(top_h) \
	$(event_top_h) $(event_loop_h) $(ui_out_h) $(cli_out_h) \
	$(tui_data_h) $(readline_h) $(tui_win_h) $(tui_h) $(tui_io_h) \
	$(exceptions_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tui-interp.c
tui-io.o: $(srcdir)/tui/tui-io.c $(defs_h) $(target_h) \
	$(event_loop_h) $(event_top_h) $(command_h) $(top_h) $(tui_h) \
	$(tui_data_h) $(tui_io_h) $(tui_command_h) $(tui_win_h) \
	$(tui_wingeneral_h) $(tui_file_h) $(ui_out_h) $(cli_out_h) \
	$(gdb_curses_h) $(readline_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tui-io.c
tui-layout.o: $(srcdir)/tui/tui-layout.c $(defs_h) $(command_h) $(symtab_h) \
	$(frame_h) $(source_h) $(tui_h) $(tui_data_h) $(tui_windata_h) \
	$(tui_wingeneral_h) $(tui_stack_h) $(tui_regs_h) $(tui_win_h) \
	$(tui_winsource_h) $(tui_disasm_h) $(gdb_string_h) $(gdb_curses_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tui-layout.c
tui-main.o: $(srcdir)/tui/tui-main.c $(defs_h) $(main_h) $(gdb_string_h) \
	$(interps_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tui-main.c
tui-out.o: $(srcdir)/tui/tui-out.c $(defs_h) $(ui_out_h) $(tui_h) \
	$(gdb_string_h) $(gdb_assert_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tui-out.c
tui-regs.o: $(srcdir)/tui/tui-regs.c $(defs_h) $(tui_h) $(tui_data_h) \
	$(symtab_h) $(gdbtypes_h) $(gdbcmd_h) $(frame_h) $(regcache_h) \
	$(inferior_h) $(target_h) $(gdb_string_h) $(tui_layout_h) \
	$(tui_win_h) $(tui_windata_h) $(tui_wingeneral_h) $(tui_file_h) \
	$(reggroups_h) $(gdb_curses_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tui-regs.c
tui-source.o: $(srcdir)/tui/tui-source.c $(defs_h) $(symtab_h) $(frame_h) \
	$(breakpoint_h) $(source_h) $(symtab_h) $(tui_h) $(tui_data_h) \
	$(tui_stack_h) $(tui_winsource_h) $(tui_source_h) $(gdb_string_h) \
	$(gdb_curses_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tui-source.c
tui-stack.o: $(srcdir)/tui/tui-stack.c $(defs_h) $(symtab_h) $(breakpoint_h) \
	$(frame_h) $(command_h) $(inferior_h) $(target_h) $(top_h) \
	$(gdb_string_h) $(tui_h) $(tui_data_h) $(tui_stack_h) \
	$(tui_wingeneral_h) $(tui_source_h) $(tui_winsource_h) $(tui_file_h) \
	$(gdb_curses_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tui-stack.c
tui-win.o: $(srcdir)/tui/tui-win.c $(defs_h) $(command_h) $(symtab_h) \
	$(breakpoint_h) $(frame_h) $(cli_cmds_h) $(top_h) $(source_h) \
	$(tui_h) $(tui_data_h) $(tui_wingeneral_h) $(tui_stack_h) \
	$(tui_regs_h) $(tui_disasm_h) $(tui_source_h) $(tui_winsource_h) \
	$(tui_windata_h) $(gdb_curses_h) $(gdb_string_h) $(readline_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tui-win.c
tui-windata.o: $(srcdir)/tui/tui-windata.c $(defs_h) $(tui_h) $(tui_data_h) \
	$(tui_wingeneral_h) $(tui_regs_h) $(gdb_string_h) $(gdb_curses_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tui-windata.c
tui-wingeneral.o: $(srcdir)/tui/tui-wingeneral.c $(defs_h) $(tui_h) \
	$(tui_data_h) $(tui_wingeneral_h) $(tui_win_h) $(gdb_curses_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tui-wingeneral.c
tui-winsource.o: $(srcdir)/tui/tui-winsource.c $(defs_h) $(symtab_h) \
	$(frame_h) $(breakpoint_h) $(value_h) $(source_h) $(tui_h) \
	$(tui_data_h) $(tui_stack_h) $(tui_win_h) $(tui_wingeneral_h) \
	$(tui_winsource_h) $(tui_source_h) $(tui_disasm_h) $(gdb_string_h) \
	$(gdb_curses_h) $(gdb_assert_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tui-winsource.c
@


1.1042
log
@        * acinclude.m4: Include ../config/tcl.m4 to pick up
        standard Tcl configury bits.
        Remove all Tcl, Tk, Itcl, Itk, etc definitions.
        * configure.ac: Don't check if ../itcl exists when building
        gdbtk. It could be installed.
        Rewrite gdbtk configury to allow for using system-supplied
        Tcl and Tk. Gdbtk no longer requires build-time access to
        itcl and itk.
        * Makefile.in: Remove everything related to itcl and itk.
        Rewrite the Tcl bits for gdbtk to correspond to rewrite of
        configure.ac.
        Remove v850ice.o build rule.
        (ALL_TCL_CFLAGS): New convenience defintion. Change all
        gdbtk sources to use it.
        * configure: Regenerate.
@
text
@d257 13
d967 7
d3067 2
a3068 1
	$(cli_decode_h) $(cli_script_h) $(gdb_assert_h) $(breakpoint_h)
d3396 18
@


1.1041
log
@	* annotate.h (deprecated_annotate_starting_hook): Remove.
	(deprecated_annotate_stopped_hook): Remove.
	(deprecated_annotate_exited_hook): Remove.
	* Makefile.in (annotate.o): Depend on observer_h.
	* top.c (deprecated_delete_breakpoint_hook): Remove.
	(deprecated_create_breakpoint_hook): Likewise.
	(deprecated_modify_breakpoint_hook): Likewise.
	* interps.c (clear_interpreter_hooks): Update for removed hooks.
	* breakpoint.c (mention): Don't call removed hook.
	(delete_breakpoint): Likewise.
	(disable_breakpoint): Likewise.
	(do_enable_breakpoint): Likewise.
	* annotate.c: Include observer.h.
	(breakpoint_changed): Change type of argument.
	(_initialize_annotate): Register observers.
	(deprecated_annotate_starting_hook): Remove.
	(deprecated_annotate_stopped_hook): Remove.
	(deprecated_annotate_exited_hook): Remove.
	(annotate_starting): Update for hook removal.
	(annotate_stopped): Likewise.
	(annotate_exited): Likewise.
	* defs.h (deprecated_delete_breakpoint_hook): Remove.
	(deprecated_create_breakpoint_hook): Likewise.
	(deprecated_modify_breakpoint_hook): Likewise.
@
text
@d277 3
a279 6
# Where is the TCL library?  Typically in ../tcl.
LIB_INSTALL_DIR = $(libdir)
# This variable is needed when doing dynamic linking.
LIB_RUNTIME_DIR = $(libdir)
TCL = @@TCL_CC_SEARCH_FLAGS@@ @@TCL_BUILD_LIB_SPEC@@
TCL_CFLAGS = @@TCLHDIR@@
d284 2
a285 11
# Where is the TK library?  Typically in ../tk.
TK = @@TK_BUILD_LIB_SPEC@@
TK_CFLAGS = @@TKHDIR@@ @@TK_BUILD_INCLUDES@@

# Where is Itcl?  Typically in ../itcl/itcl.
ITCL_CFLAGS = @@ITCLHDIR@@
ITCL = @@ITCLLIB@@

# Where is Itk?  Typically in ../itcl/itk.
ITK_CFLAGS = @@ITKHDIR@@
ITK = @@ITKLIB@@
d297 2
d318 1
a318 2
SUBDIR_GDBTK_DEPS = \
	$(LIBGUI) $(ITCL_DEPS) $(ITK_DEPS) $(TK_DEPS) $(TCL_DEPS)
a1653 6
v850ice.o: $(srcdir)/v850ice.c
	$(CC) -c $(INTERNAL_CFLAGS) $(IDE_CFLAGS) $(ITCL_CFLAGS) \
		$(TCL_CFLAGS) $(TK_CFLAGS) $(X11_CFLAGS) \
		$(GDBTK_CFLAGS) \
		$(srcdir)/v850ice.c

d3120 6
a3125 7
	$(srcdir)/gdbtk/generic/gdbtk.h $(defs_h) \
	$(symtab_h) $(inferior_h) $(command_h) \
	$(bfd_h) $(symfile_h) $(objfiles_h) $(target_h) $(gdb_string_h) \
	$(tracepoint_h) $(top_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(IDE_CFLAGS) $(ITCL_CFLAGS) \
        $(ITK_CFLAGS)  \
	$(TCL_CFLAGS) $(TK_CFLAGS) $(X11_CFLAGS) $(GDBTK_CFLAGS)\
d3134 4
a3137 4
	$(CC) -c $(INTERNAL_CFLAGS) $(IDE_CFLAGS) $(ITCL_CFLAGS) \
	 $(TCL_CFLAGS) $(TK_CFLAGS) $(X11_CFLAGS)   \
	$(GDBTK_CFLAGS) $(srcdir)/gdbtk/generic/gdbtk-bp.c \
	-DGDBTK_LIBRARY=\"$(GDBTK_LIBRARY)\"
d3140 11
a3150 9
	$(srcdir)/gdbtk/generic/gdbtk.h $(srcdir)/gdbtk/generic/gdbtk-cmds.h \
	$(defs_h) $(inferior_h)	$(source_h) $(symfile_h) $(objfiles_h) \
	$(gdbcore_h) $(demangle_h) $(linespec_h) $(tui_file_h) $(top_h) \
	$(annotate_h) $(block_h) $(dictionary_h) $(gdb_string_h) \
	$(dis_asm_h) $(gdbcmd_h) $(varobj_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(IDE_CFLAGS) $(ITCL_CFLAGS)	\
	 $(TCL_CFLAGS) $(TK_CFLAGS) $(X11_CFLAGS)		\
	$(GDBTK_CFLAGS) $(srcdir)/gdbtk/generic/gdbtk-cmds.c		\
	-DGDBTK_LIBRARY=\"$(GDBTK_LIBRARY)\"
d3153 8
a3160 7
	$(srcdir)/gdbtk/generic/gdbtk.h $(defs_h) \
	$(symtab_h) $(inferior_h) $(command_h) \
	$(bfd_h) $(symfile_h) $(objfiles_h) $(target_h) $(gdb_string_h) \
	$(tracepoint_h) $(observer_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(IDE_CFLAGS) $(ITCL_CFLAGS)  \
	$(TCL_CFLAGS) $(TK_CFLAGS) $(X11_CFLAGS) $(GDBTK_CFLAGS)\
		$(srcdir)/gdbtk/generic/gdbtk-hooks.c -DGDBTK_LIBRARY=\"$(GDBTK_LIBRARY)\"
d3163 5
a3167 5
	$(defs_h) $(interps_h) $(ui_out_h) $(ui_file_h) \
	$(cli_out_h) $(gdb_string_h) $(cli_cmds_h) $(cli_decode_h) \
	$(srcdir)/gdbtk/generic/gdbtk.h
	$(CC) -c $(INTERNAL_CFLAGS) $(IDE_CFLAGS) $(ITCL_CFLAGS) \
	$(TCL_CFLAGS) $(TK_CFLAGS) $(X11_CFLAGS) $(GDBTK_CFLAGS) \
d3171 5
a3175 4
	$(gdb_string_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(IDE_CFLAGS) $(ITCL_CFLAGS)  \
	$(TCL_CFLAGS) $(TK_CFLAGS) $(X11_CFLAGS) $(GDBTK_CFLAGS)\
		$(srcdir)/gdbtk/generic/gdbtk-main.c -DGDBTK_LIBRARY=\"$(GDBTK_LIBRARY)\"
d3181 4
a3184 4
	$(CC) -c $(INTERNAL_CFLAGS) $(IDE_CFLAGS) $(ITCL_CFLAGS) \
	 $(TCL_CFLAGS) $(TK_CFLAGS) $(X11_CFLAGS)   \
	$(GDBTK_CFLAGS) $(srcdir)/gdbtk/generic/gdbtk-register.c \
	-DGDBTK_LIBRARY=\"$(GDBTK_LIBRARY)\"
d3191 4
a3194 4
	$(CC) -c $(INTERNAL_CFLAGS) $(IDE_CFLAGS) $(ITCL_CFLAGS) \
	 $(TCL_CFLAGS) $(TK_CFLAGS) $(X11_CFLAGS)   \
	$(GDBTK_CFLAGS) $(srcdir)/gdbtk/generic/gdbtk-stack.c \
	-DGDBTK_LIBRARY=\"$(GDBTK_LIBRARY)\"
d3200 2
a3201 2
	$(CC) -c $(INTERNAL_CFLAGS) $(IDE_CFLAGS) $(ITCL_CFLAGS)  \
	$(TCL_CFLAGS) $(TK_CFLAGS) $(X11_CFLAGS) $(GDBTK_CFLAGS)\
@


1.1040
log
@gdb:
	* tui/tui-hooks.c: Include observer.h.
	(tui_event_default, tui_old_event_hooks, tui_event_hooks):
	Remove.
	(tui_bp_created_observer, tui_bp_deleted_observer,
	tui_bp_modified_observer): New globals.
	(tui_install_hooks): Use observers, not events.
	(tui_remove_hooks): Likewise.
	* mi/mi-cmd-break.c: Include observer.h, not gdb-events.h.
	(mi_breakpoint_observers_installed, mi_can_breakpoint_notify): New
	globals.
	(breakpoint_notify): Check mi_can_breakpoint_notify.
	(breakpoint_hooks): Remove.
	(mi_cmd_break_insert): Attach observers.  Don't use events.
	* tracepoint.c: Include observer.h, not gdb-events.h.
	(tracepoint_operation, trace_pass_command): Notify observer.
	* interps.c: Don't include gdb-events.h.
	(clear_interpreter_hooks): Don't call clear_gdb_event_hooks.
	* gdbarch.c: Rebuild.
	* gdbarch.sh: Emit include for observer.h, not gdb-events.h.
	(deprecated_current_gdbarch_select_hack): Notify observer.
	* breakpoint.h: Don't include gdb-events.h.
	* breakpoint.c: Don't include gdb-events.h.
	(condition_command): Notify observer.
	(commands_command): Likewise.
	(commands_from_control_command): Likewise.
	(mention, delete_breakpoint, set_ignore_count): Likewise.
	(disable_breakpoint, do_enable_breakpoint): Likewise.
	* Makefile.in (gdb_events_h): Remove.
	(breakpoint_h): Update.
	(COMMON_OBS): Remove gdb-events.o.
	(gdb-events.o): Remove.
	(breakpoint.o, gdbarch.o, interps.o, tracepoint.o, gdbtk-bp.o,
	gdbtk-hooks.o, mi-cmd-break.o, tui-hooks.o): Update.
	* gdb-events.c: Remove.
	* gdb-events.h: Remove.
	* gdb-events.sh: Remove.
gdb/doc:
	* observer.texi (GDB Observers): Document new observers:
	breakpoint_created, breakpoint_deleted, breakpoint_modified,
	tracepoint_created, tracepoint_deleted, tracepoint_modified,
	architecture_changed.
gdb/gdbtk:
	* generic/gdbtk-hooks.c: Include observer.h, not gdb-events.h.
	(gdbtk_add_hooks): Use observers, not events.
	(gdbtk_architecture_changed): Add argument, for observer.
	* generic/gdbtk-bp.c: Include observer.h.
	(gdb_set_bp): Notify observer.
	(gdb_set_bp_addr): Likewise.
@
text
@d1911 1
a1911 1
	$(gdbtypes_h) $(breakpoint_h)
@


1.1039
log
@gdb
	PR gdb/855:
	* NEWS: Add entry for macro commands.
	* Makefile.in (macrocmd.o): Add gdb_string.h.
	* macroscope.h (user_macro_scope): Declare.
	(default_macro_scope): Update documentation.
	(macro_user_macros): Declare.
	* c-lang.c (c_preprocess_and_parse): Always attempt macro lookup.
	Use user_macro_scope.
	(null_macro_lookup): Remove.
	* macrotab.h (macro_callback_fn): Declare.
	(macro_for_each): Likewise.
	(macro_allow_redefinitions): Likewise.
	* macrotab.c (foreach_macro): New function
	(macro_for_each): Likewise.
	(struct macro_table) <redef_ok>: New field.
	(macro_allow_redefinitions): New function.
	(new_macro_table): Update.
	(macro_define_function): Likewise.
	(macro_define_object): Likewise.
	* macroscope.c (user_macro_scope): New function.
	(default_macro_scope): Use it.
	(macro_user_macros): New global.
	(standard_macro_lookup): Look in macro_user_macros.
	(_initialize_macroscope): New function.
	* macroexp.h (macro_is_whitespace, macro_is_digit,
	macro_is_identifier_nondigit): Declare.
	* macroexp.c (macro_is_whitespace): Rename.  No longer static.
	(macro_is_digit): Likewise.
	(macro_is_identifier_nondigit): Likewise.
	(get_identifier): Update.
	(get_pp_number): Likewise.
	(get_token): Likewise.
	* macrocmd.c (skip_ws): New function.
	(extract_identifier): Likewise.
	(free_macro_definition_ptr): Likewise.
	(user_macros): Remove.
	(macro_define_command): Implement.
	(_initialize_macrocmd): Update.
	(macro_undef_command): Implement.
	(print_one_macro): New function.
	(macro_list_command): Implement.
gdb/doc
	* gdb.texinfo (Macros): Update.  Use @@code rather than @@command.
gdb/testsuite
	* gdb.base/macscp.exp: Add macro tests.
@
text
@d745 1
a745 1
breakpoint_h = breakpoint.h $(frame_h) $(value_h) $(gdb_events_h) $(vec_h)
a789 1
gdb_events_h = gdb-events.h
a1063 1
	gdb-events.o \
d1973 1
a1973 1
	$(solist_h) $(observer_h) $(exceptions_h) $(gdb_events_h) \
d2168 1
a2168 1
	$(gdb_events_h) $(reggroups_h) $(osabi_h) $(gdb_obstack_h)
a2169 1
gdb-events.o: gdb-events.c $(defs_h) $(gdb_events_h) $(gdbcmd_h)
d2341 1
a2341 1
	$(gdb_events_h) $(gdb_assert_h) $(top_h) $(exceptions_h)
d2933 1
a2933 1
	$(linespec_h) $(regcache_h) $(completer_h) $(gdb_events_h) \
d2935 1
a2935 1
	$(readline_history_h)
d3151 1
a3151 1
		$(symfile_h) $(symtab_h) $(gdb_string_h)
d3172 1
a3172 1
	$(tracepoint_h)
d3232 1
a3232 1
	$(mi_getopt_h) $(gdb_events_h) $(gdb_h)
d3326 1
a3326 1
	$(breakpoint_h) $(gdb_events_h) $(ui_out_h) $(top_h) $(observer_h) \
@


1.1038
log
@Fix for PR gdb/2477
@
text
@d2459 1
a2459 1
	$(command_h) $(gdbcmd_h)
@


1.1038.2.1
log
@2008-07-17  Michael Snyder  <msnyder@@specifix.com>
	2006-05-02  Michael Snyder  <msnyder@@redhat.com>

	* Target interface for reverse execution.
	* target.h (enum target_waitkind):
	Add new wait event, TARGET_WAITKIND_NO_HISTORY.
	(enum exec_direction_kind): New enum.
	(struct target_ops): New methods to_set_execdir, to_get_execdir.
	* target.c (target_get_execdir): New generic method.
	(target_set_execdir): Ditto.
	* remote.c (remote_get_execdir, remote_set_execdir): New methods.
	(remote_vcont_resume): Jump out if attempting reverse execution.
	(remote_resume): Check for reverse exec direction, and send
	appropriate command to target.
	(remote_wait): Check target response for NO_HISTORY status.
	Also check for empty reply (target doesn't understand "bs" or "bc).
	(_initialize_remote): Add new methods to remote target vector.

	* breakpoint.h (breakpoint_silence): Export.
	* breakpoint.c (breakpoint_silence): New function.
	* infcmd.c (finish_command): Check for reverse exec direction.
	(finish_backward): New function, handle finish cmd in reverse.
	* infrun.c (enum inferior_stop_reason): Add NO_HISTORY reason.
	(handle_inferior_event): Handle TARGET_WAITKIND_NO_HISTORY.
	Handle stepping over a function call in reverse.
	Handle stepping thru a line range in reverse.
	Handle setting a step-resume breakpoint in reverse.
	Handle stepping into a function in reverse.
	Handle stepping between line ranges in reverse.
	(print_stop_reason): Print reason for NO_HISTORY.

	2006-03-31  Michael Snyder  <msnyder@@redhat.com>
	User interface for reverse execution.
	* Makefile.in (reverse.c): New file.
	* reverse.c: New file.  User interface for reverse execution.

	2007-04-18  Daniel Jacobowitz  <dan@@codesourcery.com>

	* infcmd.c (finish_backwards): Correct check for whether to back
	up after finishing.

	* arm-tdep.c (arm_scan_epilogue): New.
	(arm_make_prologue_cache): Use it.
	(arm_epilogue_unwind_sniffer): New.
	(arm_gdbarch_init): Register it.
@
text
@d628 1
a628 1
	regcache.c reggroups.c remote.c remote-fileio.c reverse.c \
d1066 1
a1066 2
	exec.o reverse.o \
	bcache.o objfiles.o observer.o minsyms.o maint.o demangle.o \
a2675 2
reverse.o: reverse.c $(defs_h) $(gdb_string_h) $(target_h) $(cli_cmds_h) \
	$(cli_decode_h) $(top_h)
@


1.1038.2.2
log
@Add record target to GDB.
@
text
@d503 1
a503 2
	corelow.o \
	linux-record.o
d644 1
a644 2
	xml-tdesc.c xml-support.c \
	record.c
a921 2
record_h = record.h
linux_record_h = linux-record.h
d1093 1
a1093 2
	target-descriptions.o target-memory.o xml-tdesc.o xml-builtin.o \
	record.o
d1629 1
a1629 2
	xtensa-linux-tdep.c xtensa-linux-nat.c xtensa-xtregs.c \
	linux-record.c
d2324 1
a2324 2
	$(user_regs_h) $(exceptions_h) $(cli_decode_h) $(gdbthread_h) \
	$(record_h)
d2330 1
a2330 1
	$(inflow_h) $(gdb_select_h) $(record_h)
d2339 1
a2339 1
	$(mi_common_h) $(main_h) $(event_top_h) $(record_h)
d2385 1
a2385 2
	$(linux_fork_h) $(inf_loop_h) $(event_loop_h) $(event_top_h) \
	$(record_h)
d2652 1
a2652 1
	$(gdb_string_h) $(gdbcmd_h) $(observer_h) $(record_h)
a3037 4
record.o: record.c $(defs_h) $(target_h) $(gdbcmd_h) $(regcache_h) \
	$(inferior_h) $(gdbthread_h) $(record_h)
linux-record.o: linux-record.c $(defs_h) $(target_h) $(regcache_h) \
	$(record_h) $(linux_record_h)
@


1.1038.2.3
log
@2008-08-10  Hui Zhu  <teawater@@gmail.com>

	Add the real beneath function pointers for record target.

	* Makefile.in: Add record.h to depend of target.c.
	* record.c (record_beneath_to_resume, record_beneath_to_wait,
	record_beneath_to_prepare_to_store, record_beneath_to_xfer_partial,
	record_beneath_to_insert_breakpoint,
	record_beneath_to_remove_breakpoint): New function pointers. The real
	beneath function pointers.
	(record_resume): Change "record_ops.beneath->to_resume" to
	"record_beneath_to_resume".
	(record_wait): Change "record_ops.beneath->to_wait" to
	"record_beneath_to_wait".
	(record_prepare_to_store): Change
	"record_ops.beneath->to_prepare_to_store" to
	"record_beneath_to_prepare_to_store".
	(record_xfer_partial): Change "record_ops.beneath->to_xfer_partial" to
	"record_beneath_to_xfer_partial".
	(record_insert_breakpoint): Change
	"record_ops.beneath->to_insert_breakpoint" to
	"record_beneath_to_insert_breakpoint".
	(record_remove_breakpoint): Change
	"record_ops.beneath->to_remove_breakpoint" to
	"record_beneath_to_remove_breakpoint".
	* record.h (record_beneath_to_resume, record_beneath_to_wait,
	record_beneath_to_prepare_to_store, record_beneath_to_xfer_partial,
	record_beneath_to_insert_breakpoint,
	record_beneath_to_remove_breakpoint): Extern.
	* target.c: Add include of "record.h".
	(update_current_target): Set the real beneath function pointers.
@
text
@d2925 1
a2925 1
	$(exceptions_h) $(target_descriptions_h) $(gdbthread_h) $(record_h)
@


1.1037
log
@	Skip varobj in running threads.
        * mi/mi-cmd-var.c (mi_cmd_var_update): If varobj's
        thread is not stopped, skip the varobj.
        * Makefile.in: Update dependencies.
@
text
@d2025 1
a2025 1
	$(ui_out_h) $(gdb_string_h)
@


1.1036
log
@	* spu-linux-nat.c: Include "gdbthread.h".
	(spu_child_post_startup_inferior): Register main thread.
	(spu_child_post_attach): Likewise.
	* Makefile.in (spu-linux-nat.o): Update dependencies.
@
text
@d3259 2
a3260 1
	$(mi_out_h) $(varobj_h) $(value_h) $(gdb_string_h) $(mi_getopt_h)
@


1.1035
log
@	Exited threads.

	* thread.c (enum thread_state): New.
	(thread_state main_thread_running): Delete, in favor of...
	(thread_state main_thread_state): ... this.  Update throughout.
	(clear_thread_inferior_resources): New, split from free_thread.
	(free_thread): Call clear_thread_inferior_resources.
	(init_thread_list): Set main thread to stopped state.
	(add_thread_silent): Take care of PTID reuses.
	(delete_thread): If deleting inferior_ptid or a thread with
	refcount > 0, mark it as exited, but still keep it in the list.
	Only notify of thread exits, if we haven't done so yet.
	(iterate_over_threads): Make it safe to delete threads while
	iterating over them.
	(do_captured_list_thread_ids): Don't account for exited threads.
	(thread_alive): Check for the THREAD_EXITED state, and don't set
	ptid to -1 on exited threads.
	(set_running): Update to account for extra possible states.
	(is_thread_state): New.
	(is_stopped, is_exited): New.
	(is_running): Implement in terms of is_thread_state.
	(any_running): Update.
	(print_thread_info): Update.  Account for exited threads.  Don't
	warn about missed frame restoring here, its done in the cleanup.
	(switch_to_thread): Don't read from a thread that has gone.
	(restore_current_thread): In non-stop mode, do a full context
	switch.
	(restore_selected_frame): Add a frame_level argument.  Rewrite.
	(struct current_thread_cleanup): Add selected_frame_level and
	was_stopped members.
	(do_restore_current_thread_cleanup): Check if thread was stopped
	and still is, and if the target has registers, stack and memory
	before restoring the selected frame.  Don't delete the cleanup
	argument here.
	(restore_current_thread_cleanup_dtor): New.
	(make_cleanup_restore_current_thread): Remove all arguments.
	Rewrite.
	(thread_apply_all_command): Update.  Prune threads.
	(thread_apply_command): Update.
	(thread_command): Account for currently selected exited thread.
	(do_captured_thread_select): Check for a running thread.  Prune
	threads.
	(_initialize_thread): Make "info threads", "thread", "thread
	apply", and "thread apply all" appliable without a selected thread.
	* gdbthread.h (struct thread_info): Replace running_ by state_.
	Add refcount.
	(is_exited, is_stopped): Declare.
	(make_cleanup_restore_current_thread): Remove all arguments.
	* infrun.c: Include "event-top.h".
	(fetch_inferior_event): In non-stop mode, restore selected thread
	and frame after handling the event and running breakpoint
	commands.  Display GDB prompt if needed.
	(normal_stop): In non-stop mode, don't print thread switching
	notice.
	* cli/cli-decode.c (set_cmd_no_selected_thread_ok)
	(get_cmd_no_selected_thread_ok): New.
	* cli/cli-decode.h (CMD_NO_SELECTED_THREAD_OK): New.
	(set_cmd_no_selected_thread_ok, get_cmd_no_selected_thread_ok):
	Declare.
	* cli/cli-cmds.c: Set "pwd", "help", "info", "show" as
	no-selected-thread ok.
	* top.c (execute_command): Check for non no-selected-thread-ok
	commands.
	* linux-nat.c (struct saved_ptids, threads_to_delete)
	(record_dead_thread, prune_lwps): Delete.
	(exit_lwp): Unconditionally delete thread.
	(linux_nat_resume): Remove prune_lwps call.
	* infcmd.c (proceed_thread_callback): Check if !is_stopped instead
	of is_running.  Adjust to make_cleanup_restore_current_thread
	interface change.
	* mi/mi-main.c (mi_cmd_execute): Only allow a few commands if the
	selected thread has exited.
	* inf-loop.c (inferior_event_handler): Don't display the prompt
	here.
	* varobj.c (c_value_of_root): Update.
	* defs.h (make_cleanup_dtor): Declare.
	* utils.c (make_cleanup_dtor): New.

	* Makefile.in (infrun.o): Depend on $(event_top_h).
@
text
@d2866 1
a2866 1
	$(gdb_wait_h) $(spu_tdep_h)
@


1.1034
log
@	Non-stop inferior control.

	* infrun.c (resume): In non-stop mode, always resume just one
	thread.
	(proceed): Don't call prepare_to_proceed in non-stop mode.
	(fetch_inferior_event): In non-stop mode, switch context before
	handling the event.
	(error_is_running, ensure_not_running): New.
	(handle_inferior_event): In non-stop mode: Mark only the event
	thread as stopped.  Require that the target module manages adding
	threads to the thread list.  Assert that there isn't a
	deferred_step_ptid set.  Don't switch to infwait_thread_hop_state.
	(normal_stop): Only mark not-running if inferior hasn't exited.
	In non-stop mode, only mark the event thread.

	* thread.c:Include "cli/cli-decode.h".
	(print_thread_info): Don't read from a running thread.
	Output "(running)" if thread is running.
	(switch_to_thread): Don't read stop_pc if thread is executing.
	(do_restore_current_thread_cleanup): Don't write to a running
	thread.
	(thread_apply_all_command): Don't read from a running thread.  In
	non-stop mode, do a full context-switch instead of just switching
	threads.
	(thread_apply_command): In non-stop mode, do a full context-switch
	instead of just switching threads.
	(do_captured_thread_select): Likewise.  Inform user if selected
	thread is running.
	(_initialize_thread): Mark "info threads" and "thread" and
	async_ok.

	* inf-loop.c (inferior_event_handler): In non-stop mode, don't
	unregister the target from the event loop.

	* infcmd.c (continue_command, step_1, jump_command)
	(signal_command): Ensure the selected thread isn't running.
	(interrupt_target_command): In non-stop mode, interrupt only the
	selected thread.

	* inferior.h (error_is_running, ensure_not_running): Declare.

	* target.h (struct target_ops): Add ptid argument to the to_stop
	member.
	(target_stop): Add ptid_t argument.

	* target.c (update_current_target): Add ptid argument to to_stop's
	type.
	(debug_to_stop): Add ptid_t argument.
	(debug_to_rcmd): Set to_stop_ptid.

	* remote.c (remote_stop): Add ptid_t argument.
	(async_remote_interrupt): Add inferior_ptid to target_stop.
	* inf-ptrace.c (inf_ptrace_stop): Add ptid argument.

	* Makefile.in (thread.o): Depend on $(cli_decode_h).
@
text
@d2338 1
a2338 1
	$(mi_common_h) $(main_h)
@


1.1033
log
@	Per-thread commands.

	* gdbthread.h: Remove unneeded forward declarations.
	Include "inferior.h".
	(struct thread_info): Add continuations,
	intermediate_continuations, proceed_to_finish, step_over_calls,
	stop_step, step_multi and stop_signal members.
	(save_infrun_state): Add continuations,
	intermediate_continuations, proceed_to_finish, step_over_calls,
	stop_step, step_multi, stop_signal and stop_bpstat parameters.
	(load_infrun_state): Add continuations,
	intermediate_continuations, proceed_to_finish, step_over_calls,
	stop_step, step_multi, stop_signal and stop_bpstat parameters.

	* thread.c (load_infrun_state): In non-stop mode, load
	continuations, intermediate_continuations, proceed_to_finish,
	step_over_calls, stop_step, step_multi and stop_signal.
	(save_infrun_state): Store continuations,
	intermediate_continuations, proceed_to_finish, step_over_calls,
	stop_step, step_multi, stop_signal and stop_bpstat.
	(save_infrun_state): Store continuations,
	intermediate_continuations, proceed_to_finish, step_over_calls,
	stop_step, step_multi, stop_signal and stop_bpstat.
	(free_thread): Clear The thread's stop_bpstat.

	* inferior.h (context_switch_to): Declare.

	* infrun.c (ecss): New global.
	(context_switch): Context switch continuations,
	intermediate_continuations, proceed_to_finish, step_over_calls,
	stop_step, step_multi, stop_signal and stop_bpstat.
	(wait_for_inferior): Use global ecss.
	(async_ecss, async_ecs): Delete.
	(fetch_inferior_event): Use global ecss.
	(context_switch_to): New.

	* top.c (execute_command): In non-stop, only check if the current
	thread is running, in all-stop, check if there's any thread
	running.

	* breakpoint.c (bpstat_remove_breakpoint): New.
	(bpstat_remove_breakpoint_callback): New.
	(delete_breakpoint): Clear the stop_bpstats of all threads.

	* mi/mi-main.c (mi_cmd_execute): In non-stop, only check if the
	current thread is running, in all-stop, check if there's any
	thread running.

	* Makefile.in (gdbthread_h): Depend on $(inferior_h).
@
text
@d2924 1
a2924 1
	$(ui_out_h) $(observer_h) $(annotate_h)
@


1.1032
log
@	Add "executing" property to threads.

	* inferior.h (target_executing): Delete.
	* gdbthread.h (struct thread_info): Add executing_ field.
	(set_executing, is_executing): New.
	* thread.c (main_thread_executing): New.
	(init_thread_list): Clear it and also main_thread_running.
	(is_running): Return false if target has no execution.
	(any_running, is_executing, set_executing): New.

	* top.c: Include "gdbthread.h".
	(target_executing): Delete.
	(execute_command): Replace target_executing check by any_running.
	* event-top.c: Include "gdbthread.h".
	(display_gdb_prompt, command_handler): Replace target_executing by
	is_running.
	* inf-loop.c: Include "gdbthread.h".  Don't mark as not executing
	here.  Replace target_executing by is_running.
	* infrun.c (handle_inferior_event): Mark all threads as
	not-executing.
	* linux-nat.c (linux_nat_resume): Don't mark thread as executing
	here.
	* stack.c (get_selected_block): Return null if inferior is
	executing.
	* target.c (target_resume): Mark resumed ptid as executing.
	* breakpoint.c (until_break_command): Replace target_executing
	check by is_executing.
	* remote.c (remote_async_resume): Don't mark inferior as executing
	here.
	* mi/mi-interp.c (mi_cmd_interpreter_exec): Replace target_executing
	by any_running.

	* mi/mi-main.c (mi_cmd_exec_interrupt, mi_cmd_execute)
	(mi_execute_async_cli_command): Replace target_executing by
	is_running.

	* frame.c (get_current_frame): Error out if the current thread is
	executing.
	(has_stack_frames): New.
	(get_selected_frame, deprecated_safe_get_selected_frame): Check
	has_stack_frames.

	* Makefile.in (event-top.o, frame.o, inf-loop.o, top.o): Depend on
	$(gdbthread_h).
@
text
@d803 1
a803 1
gdbthread_h = gdbthread.h $(breakpoint_h) $(frame_h) $(ui_out_h)
@


1.1031
log
@	* remote-sim.c: Include gdbthread.h.
	(remote_sim_ptid): New global.
	(gdbsim_create_inferior): Silently add the main task to GDB's
	thread list.
	(gdbsim_close, gdbsim_mourn_inferior): Silently delete the main
	task from GDB's thread list.
	(gdbsim_resume): Adjust to use remote_sim_ptid.
	(gdbsim_thread_alive, gdbsim_pid_to_str): New.
	(init_gdbsim_ops): Register gdbsim_thread_alive and
	gdbsim_pid_to_str.
	(_initialize_remote_sim): Initialize remote_sim_ptid.
	* Makefile.in (remote-sim.o): Depend on $(gdbthread_h).
@
text
@d2109 1
a2109 1
	$(readline_history_h) $(main_h)
d2144 2
a2145 1
	$(command_h) $(gdbcmd_h) $(observer_h) $(objfiles_h) $(exceptions_h)
d2326 1
a2326 1
	$(language_h)
d2932 1
a2932 1
	$(cli_out_h) $(main_h) $(event_loop_h)
@


1.1030
log
@	* i386-dicos-tdep.c: Include "inferior.h".
	(i386_dicos_frame_align): New.
	(i386_dicos_init_abi): Register i386_dicos_frame_align.  Set call
	dummy location ON_STACK.
	* Makefile.in (i386-dicos-tdep.o): Depend on $(inferior_h).
@
text
@d2674 1
a2674 1
	$(readline_h)
@


1.1029
log
@	* infrun.c (start_remote): Don't clear thread list here.
	* monitor.c (monitor_open): Include "gdbthread.h".  Clear thread
	list here.
	* remote.c (record_currthread): Upgrade the main thread and its
	entry in the thread list if this is the first time we hear about
	threads.
	(remote_thread_alive): Consider magic_null_ptid or a ptid without
	a tid member always alive.
	(remote_find_new_threads): Don't update the main thread here.
	(remote_start_remote): Clear thread list here.  Always add the
	main thread.
	(extended_remote_attach_1): Add the main thread here.
	(extended_remote_mourn_1): Re-add the main thread here.
	(extended_remote_create_inferior_1): Add a main thread.

	* Makefile.in (monitor.o): Depend on $(gdbthread_h).
@
text
@d2239 1
a2239 1
	$(solib_h) $(solib_target_h)
@


1.1028
log
@	* Makefile.in (GNULIB_H): Use GNULIB_STDINT_H.
	(gdb_stdint_h, gdb_stdint.h, stamp-int): Delete.  Remove
	all dependencies on $(gdb_stdint_h).
	(distclean): Do not delete gdb_stdint.h.
	* acinclude.m4: Do not use stdint.m4.
	* configure.ac: Set GNULIB_STDINT_H.  Remove tests for stdint.h,
	uintptr_t, and gdb_stdint.h.
	* defs.h: Include <stdint.h>.
	* gdb_thread_db.h: Assume stdint.h is already included.
	* breakpoint.c, findcmd.c, hppa-tdep.c, inf-ptrace.c, proc-service.c,
	rs6000-nat.c, spu-linux-nat.c, target.c, win32-nat.c: Do not
	include gdb_stdint.h.
	* configure, config.in: Regenerate.
@
text
@d2543 1
a2543 1
	$(inferior_h) $(gdb_regex_h) $(srec_h) $(regcache_h)
@


1.1027
log
@	Implement *running.
        * Makefile.in: Update dependencies.
        * gdbthread.h (struct thread_info): New field
        running_.
        (set_running, is_running): New.
        * thread.c (set_running, is_running): New.
        * inferior.h (suppress_normal_stop_observer): Rename to...
        (suppress_run_stop_observers): ..this.
        * infcmd.c (suppress_normal_stop_observer): Rename to...
        (suppress_run_stop_observers): ..this.
        (finish_command_continuation, finish_command): Adjust.
        * infcall.c (call_function_by_hand): Adjust.
        * infrun.c (normal_stop): Call set_running.
        * target.c (target_resume): New.  Call set_running.
        * target.h (target_resume): Convert from macro to
        a function.

        * mi/mi-interp.c (mi_on_resume): New.
        (mi_interpreter_init): Register mi_on_resume.
@
text
@d169 1
a169 1
GNULIB_H = gnulib/string.h
a709 1
gdb_stdint_h = gdb_stdint.h
a1418 1
	rm -f gdb_stdint.h
a1476 9
gdb_stdint.h: stamp-int ; @@true
stamp-int: config.status
	CONFIG_COMMANDS=gdb_stdint.h \
	  CONFIG_FILES= \
	  CONFIG_HEADERS= \
	  CONFIG_LINKS= \
	  $(SHELL) config.status
	echo stamp > stamp-int

d1976 1
a1976 2
	$(mi_common_h) $(memattr_h) $(ada_lang_h) $(top_h) $(hashtab_h) \
	$(gdb_stdint_h)
d2127 1
a2127 1
	$(target_h) $(gdb_stdint_h)
d2223 1
a2223 1
	$(completer_h) $(osabi_h) $(gdb_assert_h) $(gdb_stdint_h) \
d2330 1
a2330 1
	$(gdbcore_h) $(regcache_h) $(gdb_stdint_h) $(gdb_assert_h) \
d2636 1
a2636 2
	$(symtab_h) $(target_h) $(regcache_h) $(gregset_h) $(gdbcore_h) \
	$(gdb_stdint_h)
d2679 1
a2679 1
	$(gdb_stdint_h) $(observer_h) $(gdb_stat_h)
d2865 1
a2865 1
	$(gdb_wait_h) $(gdb_stdint_h) $(spu_tdep_h)
d2913 1
a2913 1
	$(exceptions_h) $(target_descriptions_h) $(gdb_stdint_h) $(gdbthread_h)
d3000 1
a3000 1
	$(xml_support_h) $(i386_cygwin_tdep_h) $(gdb_stdint_h)
@


1.1026
log
@gdb
	* value.h (evaluate_subexpression_type, extract_field_op):
	Declare.
	* printcmd.c (_initialize_printcmd): Use expression_completer for
	'p', 'inspect', 'call'.
	* parser-defs.h (parse_field_expression): Declare.
	* parse.c: Include exceptions.h.
	(in_parse_field, expout_last_struct): New globals.
	(mark_struct_expression): New function.
	(prefixify_expression): Return int.
	(prefixify_subexp): Return int.  Use expout_last_struct.
	(parse_exp_1): Update.
	(parse_exp_in_context): Add 'out_subexp' argument.  Handle
	in_parse_field.
	(parse_field_expression): New function.
	* expression.h (parse_field_expression): Declare.
	(in_parse_field): Likewise.
	* eval.c (evaluate_subexpression_type): New function.
	(extract_field_op): Likewise.
	* completer.h (expression_completer): Declare.
	* completer.c (expression_completer): New function.
	(count_struct_fields, add_struct_fields): New functions.
	* c-exp.y (yyparse): Redefine.
	(COMPLETE): New token.
	(exp): New productions.
	(saw_name_at_eof, last_was_structop): New globals.
	(yylex): Return COMPLETE when needed.  Recognize in_parse_field.
	(c_parse): New function.
	* breakpoint.c (_initialize_breakpoint): Use expression_completer
	for watch, awatch, and rwatch.
	* Makefile.in (parse.o): Depend on exceptions_h.
gdb/testsuite
	* gdb.base/break1.c (struct some_struct): New struct.
	(values): New global.
	* gdb.base/completion.exp: Add field name completion test.
gdb/doc
	* gdb.texinfo (Completion): Add field name example.
@
text
@d2926 1
a2926 1
	$(exceptions_h) $(target_descriptions_h) $(gdb_stdint_h)
@


1.1026.2.1
log
@Reverse execution branch

2008-06-09  Michael Snyder  <msnyder@@specifix.com>
	2006-05-02  Michael Snyder  <msnyder@@redhat.com>

	* Target interface for reverse execution.
	* target.h (enum target_waitkind):
	Add new wait event, TARGET_WAITKIND_NO_HISTORY.
	(enum exec_direction_kind): New enum.
	(struct target_ops): New methods to_set_execdir, to_get_execdir.
	* target.c (target_get_execdir): New generic method.
	(target_set_execdir): Ditto.
	* remote.c (remote_get_execdir, remote_set_execdir): New methods.
	(remote_vcont_resume): Jump out if attempting reverse execution.
	(remote_resume): Check for reverse exec direction, and send
	appropriate command to target.
	(remote_wait): Check target response for NO_HISTORY status.
	Also check for empty reply (target doesn't understand "bs" or "bc).
	(_initialize_remote): Add new methods to remote target vector.

	* breakpoint.h (breakpoint_silence): Export.
	* breakpoint.c (breakpoint_silence): New function.
	* infcmd.c (finish_command): Check for reverse exec direction.
	(finish_backward): New function, handle finish cmd in reverse.
	* infrun.c (enum inferior_stop_reason): Add NO_HISTORY reason.
	(handle_inferior_event): Handle TARGET_WAITKIND_NO_HISTORY.
	Handle stepping over a function call in reverse.
	Handle stepping thru a line range in reverse.
	Handle setting a step-resume breakpoint in reverse.
	Handle stepping into a function in reverse.
	Handle stepping between line ranges in reverse.
	(print_stop_reason): Print reason for NO_HISTORY.

	2006-03-31  Michael Snyder  <msnyder@@redhat.com>
	User interface for reverse execution.
	* Makefile.in (reverse.c): New file.
	* reverse.c: New file.  User interface for reverse execution.
@
text
@d628 1
a628 1
	regcache.c reggroups.c remote.c remote-fileio.c reverse.c \
d1067 1
a1067 2
	exec.o reverse.o \
	bcache.o objfiles.o observer.o minsyms.o maint.o demangle.o \
a2687 2
reverse.o: reverse.c $(defs_h) $(gdb_string_h) $(target_h) $(cli_cmds_h) \
	$(cli_decode_h) $(top_h)
@


1.1025
log
@	* Makefile.in: Update dependencies.
	* dwarf2expr.c: New include "gdb_assert.h".
	(new_dwarf_expr_context): Initialize MAX_RECURSION_DEPTH.
	(dwarf_expr_eval): Sanity check the RECURSION_DEPTH count.
	(execute_stack_op): Error out on too large RECURSION_DEPTH.
	Increase/decrease RECURSION_DEPTH around the function.
@
text
@d2594 2
a2595 1
	$(doublest_h) $(gdb_assert_h) $(block_h) $(source_h) $(objfiles_h)
@


1.1024
log
@
	* gdbarch.sh: Added new gdbarch struct
	core_regset_sections.
	* gdbarch.c: Refreshed.
	* gdbarch.h: Refreshed.
	* regset.h (core_regset_section): Declared.
	* linux-nat.c (linux_nat_do_thread_registers): Added
	support for the new gdbarch struct core_regset_sections.
	* utils.c (host_address_to_string): New function.
	* defs.h (host_address_to_string): New prototype.
	* i386-linux-tdep.c (i386_regset_rections): New register
	sections list for i386.
	  (i386_linux_init_abi): Initialized new gdbarch struct
	  core_regset_sections.
	* Makefile.in: Updated to reflect dependency changes.
	* ppc-linux-tdep.c (ppc_regset_sections): Register
	sections list for ppc.
	  (ppc_linux_init_abi): Initialized new gdbarch struct
	  core_regset_sections
@
text
@d2090 1
a2090 1
	$(gdbcore_h) $(elf_dwarf2_h) $(dwarf2expr_h)
@


1.1023
log
@	* alpha-mdebug-tdep.c: Include "trad-frame.h".
	(struct alpha_mdebug_unwind_cache): Change type of SAVED_REGS to
	struct trad_frame_saved_reg *.
	(alpha_mdebug_frame_unwind_cache): Allocate SAVED_REGS using
	trad_frame_alloc_saved_regs.  Update accesses.  Record previous
	value of SP as being vfp.
	(alpha_mdebug_frame_prev_register): Use trad_frame_get_prev_register.
	* Makefile.in (alpha-mdebug-tdep.o): Update dependencies.
@
text
@d2271 1
a2271 1
	$(arch_utils_h)
@


1.1022
log
@(thread.o): Add dependency on annotate.h.
@
text
@d1865 2
a1866 2
	$(block_h) $(gdb_assert_h) $(gdb_string_h) $(alpha_tdep_h) \
	$(mdebugread_h)
@


1.1021
log
@	* minsyms.c: Include "target.h".
	(find_solib_trampoline_target): Handle minimal symbols pointing
	to function descriptors as well.
	* Makefile.in (minsyms.o): Update dependencies.

	* ppc-linux-tdep.c (ppc64_standard_linkage): Rename to ...
	(ppc64_standard_linkage1): ... this.  Fix optional instructions.
	(PPC64_STANDARD_LINKAGE_LEN): Rename to ...
	(PPC64_STANDARD_LINKAGE1_LEN): ... this.
	(ppc64_standard_linkage2, ppc64_standard_linkage3): New.
	(PPC64_STANDARD_LINKAGE2_LEN, PPC64_STANDARD_LINKAGE3_LEN): New.
	(ppc64_standard_linkage_target): Rename to ...
	(ppc64_standard_linkage1_target): ... this.
	(ppc64_standard_linkage2_target, ppc64_standard_linkage3_target): New.
	(ppc64_skip_trampoline_code): Support three variants of standard
	linkage stubs.  Call find_solib_trampoline_target to handle
	glink stubs.
@
text
@d2935 1
a2935 1
	$(ui_out_h) $(observer_h)
@


1.1020
log
@(dwarf2loc.o): Remove $(addrmap_h).
(dwarf2read.o): Add $(addrmap_h).
@
text
@d2504 2
a2505 1
	$(symfile_h) $(objfiles_h) $(demangle_h) $(value_h) $(cp_abi_h)
@


1.1019
log
@        * findcmd.c: Add #include "gdb_stdint.h".
        * Makefile.in (findcmd.o): Update dependencies.
@
text
@d2099 1
a2099 2
	$(dwarf2expr_h) $(dwarf2loc_h) $(gdb_string_h) $(gdb_assert_h) \
	$(addrmap_h)
d2105 1
a2105 1
	$(gdb_string_h) $(gdb_assert_h)
@


1.1018
log
@	New "find" command.
	* NEWS: Document find command and qSearch:memory packet.
	* Makefile.in (SFILES): Add findcmd.c.
	(COMMON_OBJS): Add findcmd.o.
	(findcmd.o): New rule.
	* findcmd.c: New file.
	* target.h (target_ops): New member to_search_memory.
	(simple_search_memory): Declare.
	(target_search_memory): Declare.
	* target.c (simple_search_memory): New fn.
	(target_search_memory): New fn.
	* remote.c (PACKET_qSearch_memory): New packet kind.
	(remote_search_memory): New fn.
	(init_remote_ops): Init to_search_memory.
	(init_extended_remote_ops): Ditto.
	(_initialize_remote): Add qSearch:memory packet config command.

	* gdbserver/server.h (decode_search_memory_packet): Declare.
	* gdbserver/remote-utils.c (decode_search_memory_packet): New fn.
	* gdbserver/server.c (handle_search_memory_1): New fn.
	(handle_search_memory): New fn.
	(handle_query): Process qSearch:memory packets.

	* doc/gdb.texinfo: Document "find" command, qSearch:memory packet.

	* testsuite/gdb.base/find.exp: New file.
	* testsuite/gdb.base/find.c: New file.
@
text
@d2140 1
a2140 1
	$(target_h)
@


1.1017
log
@        * valprint.c (val_print): Add new language parameter and use it
        instead of using the current_language. Update calls to val_print
        throughout.
        (common_val_print): Add new langauge parameter and pass it to
        val_print.
        * value.h (struct language_defn): Add opaque declaration.
        (val_print, common_val_print): Update declarations.
        * stack.c (print_frame_args): Update call to common_val_print
        using the appropriate language.
        * mi/mi-cmd-stack.c (list_args_or_locals): Likewise.
        * c-valprint, f-valprint.c, m2-valprint.c, mt-tdep.c, infcmd.c,
        mi/mi-main.c, jv-valprint.c, ada-valprint.c, varobj.c, p-valprint.c,
        scm-valprint.c, cp-valprint.c, sh64-tdep.c, printcmd.c:
        #include "language.h" if necessary.
        Update calls to val_print and common_val_print.
        * Makefile.in (mt-tdep.o, sh64-tdep.o, mi-cmds.o, mi-main.o):
        Update dependencies.
@
text
@d612 2
a613 3
	f-exp.y f-lang.c f-typeprint.c f-valprint.c findvar.c frame.c \
	frame-base.c \
	frame-unwind.c \
d1063 1
d2139 2
@


1.1016
log
@	gdb/
	* Makefile.in: Update dependencies.
	* dwarf2read.c: Include "addrmap.h"
	(struct dwarf2_cu): New fields RANGES_OFFSET and HAS_RANGES_OFFSET.
	(dwarf2_ranges_read): New prototype.
	(dwarf2_build_psymtabs_hard): Initialize and prepare PSYMTABS_ADDRMAP.
	Add discontiguous range to PSYMTABS_ADDRMAP by DWARF2_RANGES_READ on
	HAS_RANGES_OFFSET, otherwise add there the contiguous range.
	(dwarf2_ranges_read): New parameter RANGES_PST, update the function
	comment for it.  Add the found ranges to RANGES_PST.  New variable
	BASEADDR, initialize it the common way.
	(dwarf2_get_pc_bounds): Update the caller for the new parameter.
	(read_partial_die): `DW_AT_ranges' now only sets RANGES_OFFSET and
	HAS_RANGES_OFFSET for the later processing.
	* objfiles.h (struct objfile): New field PSYMTABS_ADDRMAP.
	* symtab.c: Include "addrmap.h"
	(find_pc_sect_psymtab): Support reading the field PSYMTABS_ADDRMAP.
	Move the psymtab locator into ...
	(find_pc_sect_psymtab_closer): ... a new function.

	gdb/testsuite/
	* gdb.dwarf2/dw2-ranges.S: Merge the secondary section with `.fini'.
	* gdb.dwarf2/dw2-ranges.exp: Compile also `dw2-ranges2.S' and
	`dw2-ranges3.S' and test also their MAIN2, FUNC2 and MAIN3 symbols.
	* gdb.dwarf2/dw2-ranges2.S, gdb.dwarf2/dw2-ranges3.S: New files.
@
text
@d2558 1
a2558 1
	$(gdb_assert_h)
d2747 1
a2747 1
	$(osabi_h) $(elf_bfd_h) $(elf_sh_h) $(gdb_sim_sh_h)
d3262 1
a3262 1
	$(stack_h) $(dictionary_h) $(gdb_string_h)
d3285 1
a3285 1
	$(regcache_h) $(gdb_h) $(frame_h) $(mi_main_h)
@


1.1015
log
@	* rs6000-tdep.c: Do not include "rs6000-tdep.h".
	(rs6000_find_toc_address_hook): Move to rs6000-aix-tdep.c.
	(SIG_FRAME_PC_OFFSET): Likewise.
	(SIG_FRAME_LR_OFFSET): Likewise.
	(SIG_FRAME_FP_OFFSET): Likewise.
	(rs6000_push_dummy_call): Likewise.
	(rs6000_return_value): Likewise.
	(rs6000_convert_from_func_ptr_addr): Likewise.
	(branch_dest, rs6000_software_single_step): Likewise.
	(deal_with_atomic_sequence): Rename to ...
	(ppc_deal_with_atomic_sequence): ... this.  Adapt all callers.
	Do not call branch_dest; inline required parts of that function.
	(rs6000_skip_trampoline_code): Replace DEPRECATED_SYMBOL_NAME
	with SYMBOL_LINKAGE_NAME.
	(struct reg, regsize): Delete.
	(read_memory_addr): Delete; inline into callers.
	(rs6000_skip_prologue): Move after skip_prologue.
	(skip_prologue): Remove prototype.
	(rs6000_gdbarch_init): Remove sysv_abi variable; perform all
	initialization as if this variable were true.  Do not install
	ppc64_sysv_abi_adjust_breakpoint_address.

	* rs6000-aix-tdep.c: Include "gdb_assert.h", "gdbtypes.h",
	"gdbcore.h", "target.h", "value.h", "infcall.h", "objfiles.h",
	and "breakpoint.h".
	(rs6000_find_toc_address_hook): Move here from rs6000-tdep.c.
	(SIG_FRAME_PC_OFFSET): Likewise.
	(SIG_FRAME_LR_OFFSET): Likewise.
	(SIG_FRAME_FP_OFFSET): Likewise.
	(rs6000_push_dummy_call): Likewise.
	(rs6000_return_value): Likewise.
	(rs6000_convert_from_func_ptr_addr): Likewise.
	(branch_dest, rs6000_software_single_step): Likewise.  Replace
	tdep->text_segment_base by AIX_TEXT_SEGMENT_BASE.
	(rs6000_aix_init_osabi): Install rs6000_push_dummy_call,
	rs6000_return_value, and rs6000_convert_from_func_ptr_addr.
	Call set_gdbarch_long_double_bit and set_gdbarch_frame_red_zone_size.
	Set tdep->lr_frame_offset.  Do not set tdep->text_segment_base.

	* rs6000-tdep.h (rs6000_software_single_step): Remove prototype.
	(AIX_TEXT_SEGMENT_BASE): New macro.
	* rs6000-nat.c (exec_one_dummy_insn): Replace tdep->text_segment_base
	by AIX_TEXT_SEGMENT_BASE.

	* ppc-tdep.h (ppc_deal_with_atomic_sequence): Add prototype.
	(struct gdbarch_tdep): Remove text_segment_base member.
	* ppc-linux-tdep.c (ppc_linux_init_abi): On 64-bit, install
	ppc64_sysv_abi_adjust_breakpoint_address.

	* Makefile.in (rs6000-tdep.o): Update dependencies.
	(rs6000-aix-tdep.o): Likewise.
@
text
@d2099 2
a2100 1
	$(dwarf2expr_h) $(dwarf2loc_h) $(gdb_string_h) $(gdb_assert_h)
d2919 1
a2919 1
	$(solist_h) $(p_lang_h)
@


1.1014
log
@	* Makefile.in (objfiles.o): Update.
	* exec.c (exec_set_section_address): Support p->addr != 0.
	* objfiles.c (objfile_relocate): Update exec_ops section
	addresses.
	* symfile.c (place_section): Move exec_set_section_address call...
	(default_symfile_offsets): ...to here.
@
text
@d2696 1
a2696 1
	$(frame_unwind_h) $(frame_base_h) $(rs6000_tdep_h) $(dwarf2_frame_h) \
d2703 4
a2706 2
rs6000-aix-tdep.o: rs6000-aix-tdep.c $(defs_h) $(gdb_string_h) $(osabi_h) \
	$(regcache_h) $(regset_h) $(rs6000_tdep_h) $(ppc_tdep_h)
@


1.1013
log
@ChangeLog:

	* Makefile.in (ppc_linux_tdep_h): New macro.
	(powerpc_32l_c, powerpc_altivec32_c, powerpc_altivec32l_c): Likewise.
	(powerpc_64l_c, powerpc_altivec64_c, powerpc_altivec64l_c): Likewise.
	(powerpc_e500l_c): Likewise.
	(ppc-linux-nat.o): Update dependencies.
	(ppc-linux-tdep.o): Update dependencies.
	(rs6000-tdep.o): Update dependencies.

	* ppc-tdep.h (ppc_linux_memory_remove_breakpoint): Remove.
	(ppc_linux_svr4_fetch_link_map_offsets): Remove.
	(ppc_linux_gregset, ppc_linux_fpregset): Move to ppc-linux-tdep.h
	(ppc_supply_reg, ppc_collect_reg): Add prototypes.
	(tdesc_powerpc_e500): Remove.

	* rs6000.c: Include "features/rs6000/powerpc-altivec32.c"
	and "features/rs6000/powerpc-altivec64.c".
	(ppc_supply_reg, ppc_collect_reg): Make global.
	(variants): Use tdesc_powerpc_32 for "powerpc" and
	tdesc_powerpc_altivec64 for "powerpc64".
	(_initialize_rs6000_tdep): Initialize AltiVec descriptions.

	* ppc-linux-tdep.h: New file.

	* ppc-linux-tdep.c: Include "ppc-linux-tdep.c".
	Include "features/rs6000/powerpc-32l.c".
	Include "features/rs6000/powerpc-altivec32l.c".
	Include "features/rs6000/powerpc-64l.c".
	Include "features/rs6000/powerpc-altivec64l.c".
	Include "features/rs6000/powerpc-e500l.c".
	(ppc_linux_supply_gregset): New function.
	(ppc_linux_collect_gregset): Handle orig_r3 and trap registers.
	(ppc32_linux_gregset): Use ppc_linux_supply_gregset.
	(ppc64_linux_gregset): Likewise.
	(ppc_linux_sigtramp_cache): Handle orig_r3 and trap registers.
	(ppc_linux_trap_reg_p): New function.
	(ppc_linux_write_pc): New function.
	(ppc_linux_core_read_description): New function.
	(ppc_linux_init_abi): Install ppc_linux_write_pc and
	ppc_linux_core_read_description.  Install orig_r3 and trap
	registers if present in the target description.
	(_initialize_ppc_linux_tdep): Initialize Linux target descriptions.

	* ppc-linux-nat.c: Include "ppc-linux-tdep.h".
	(PT_ORIG_R3, PT_TRAP): Define if necessary.
	(ppc_register_u_addr): Handle orig_r3 and trap registers.
	(fetch_ppc_registers): Likewise.
	(store_ppc_registers): Likewise.
	(store_register): Likewise.
	(ppc_linux_read_description): Check whether AltiVec is supported.
	Check whether inferior is 32-bit or 64-bit.  Return the appropriate
	Linux target description.

	* features/Makefile (WHICH): Use rs6000/powerpc-32l and
	rs6000/powerpc-altivec32l instead of rs6000/powerpc-32.
	Use rs6000/powerpc-64l and rs6000/powerpc-altivec64l instead
	of rs6000/powerpc-64.  Use rs6000/powerpc-e500l instead of
	rs6000/powerpc-e500.  Update -expedite variables accordingly.

	* features/rs6000/power-spe.xml: Use regnum 73 for "acc".
	* features/rs6000/powerpc-32.xml: Do not include power-altivec.xml.
	* features/rs6000/powerpc-64.xml: Do not include power-altivec.xml.
	* features/rs6000/powerpc-e500.c: Regenerate.
	* features/rs6000/powerpc-32.c: Regenerate.
	* features/rs6000/powerpc-64.c: Regenerate.

	* features/rs6000/power-linux.xml: New file.
	* features/rs6000/power64-linux.xml: New file.
	* features/rs6000/powerpc-32l.xml: New file.
	* features/rs6000/powerpc-altivec32l.xml: New file.
	* features/rs6000/powerpc-64l.xml: New file.
	* features/rs6000/powerpc-altivec64l.xml: New file.
	* features/rs6000/powerpc-e500l.xml: New file.
	* features/rs6000/powerpc-32l.c: New (generated) file.
	* features/rs6000/powerpc-altivec32l.c: New (generated) file.
	* features/rs6000/powerpc-64l.c: New (generated) file.
	* features/rs6000/powerpc-altivec64l.c: New (generated) file.
	* features/rs6000/powerpc-e500l.xml: New (generated) file.

	* regformats/reg-ppc.dat: Remove.
	* regformats/reg-ppc64.dat: Remove.
	* regformats/rs6000/powerpc-32.dat: Remove.
	* regformats/rs6000/powerpc-64.dat: Remove.
	* regformats/rs6000/powerpc-e500.dat: Remove.
	* regformats/rs6000/powerpc-32l.dat: New (generated) file.
	* regformats/rs6000/powerpc-altivec32l.dat: New (generated) file.
	* regformats/rs6000/powerpc-64l.dat: New (generated) file.
	* regformats/rs6000/powerpc-altivec64l.dat: New (generated) file.
	* regformats/rs6000/powerpc-e500l.dat: New (generated) file.

gdbserver/ChangeLog:

	* configure.srv (powerpc*-*-linux*): Set srv_regobj to
	powerpc-32l.o, powerpc-altivec32l.o, powerpc-e500l.o,
	powerpc-64l.o, and powerpc-altivec64l.o.
	Remove rs6000/powerpc-32.xml, rs6000/powerpc-64.xml, and
	rs6000/powerpc-e500.xml; add rs6000/powerpc-32l.xml,
	rs6000/powerpc-altivec32l.xml, rs6000/powerpc-e500l.xml,
	rs6000/powerpc-64l.xml, rs6000/powerpc-altivec64l.xml,
	rs6000/power-linux.xml, and rs6000/power64-linux.xml
	to srv_xmlfiles.

	* Makefile.in (reg-ppc.o, reg-ppc.c): Remove, replace by ...
	(powerpc-32l.o, powerpc-32l.c): ... these new rules.
	(powerpc-32.o, powerpc-32.c): Remove, replace by ...
	(powerpc-altivec32l.o, powerpc-altivec32l.c): ... these new rules.
	(powerpc-e500.o, powerpc-e500.c): Remove, replace by ...
	(powerpc-e500l.o, powerpc-e500l.c): ... these new rules.
	(reg-ppc64.o, reg-ppc64.c): Remove, replace by ...
	(powerpc-64l.o, powerpc-64l.c): ... these new rules.
	(powerpc-64.o, powerpc-64.c): Remove, replace by ...
	(powerpc-altivec64l.o, powerpc-altivec64l.c): ... these new rules.
	(clean): Update.

	* linux-ppc-low.c (init_registers_ppc): Remove, replace by ...
	(init_registers_powerpc_32l): ... this new prototype.
	(init_registers_powerpc_32): Remove, replace by ...
	(init_registers_powerpc_altivec32l): ... this new prototype.
	(init_registers_powerpc_e500): Remove, replace by ...
	(init_registers_powerpc_e500l): ... this new prototype.
	(init_registers_ppc64): Remove, replace by ...
	(init_registers_powerpc_64l): ... this new prototype.
	(init_registers_powerpc_64): Remove, replace by ...
	(init_registers_powerpc_altivec64l): ... this new prototype.
	(ppc_num_regs): Set to 73.
	(PT_ORIG_R3, PT_TRAP): Define if necessary.
	(ppc_regmap, ppc_regmap_e500): Add values for orig_r3 and trap.
	(ppc_cannot_store_register): Handle orig_r3 and trap.
	(ppc_arch_setup): Update init_registers_... calls.
	(ppc_fill_gregset): Handle orig_r3 and trap.

	* inferiors.c (clear_inferiors): Reset current_inferior.
@
text
@d2581 2
a2582 1
	$(parser_defs_h) $(expression_h) $(addrmap_h) $(arch_utils_h)
@


1.1012
log
@	* linespec.c: Include "target.h".
	(minsym_found): Handle minimal symbols pointing to function
	descriptors.  Use find_function_start_pc.
	* minsyms.c (msymbol_objfile): New function.
	* parse.c (write_exp_msymbol): Handle minimal symbols pointing
	to function descriptors.
	* symtab.c (fixup_section): Only use minimal symbol at the same
	address to determine section of a symbol.
	(find_function_start_pc): New function.
	(find_function_start_sal): Use it.
	* symtab.h (msymbol_objfile): Add prototype.
	(find_function_start_pc): Likewise.
	* value.c: Include "objfiles.h".
	(value_fn_field): Handle minimal symbols pointing to function
	descriptors.
	* Makefile.in (linespec.o): Update dependencies.
	(value.o): Likewise.
@
text
@d862 1
d974 3
d985 3
d992 1
d2603 2
a2604 2
	$(gdb_wait_h) $(gregset_h) $(ppc_tdep_h) $(target_h) \
	$(linux_nat_h)
d2608 4
a2611 2
	$(solib_svr4_h) $(ppc_tdep_h) $(trad_frame_h) $(frame_unwind_h) \
	$(tramp_frame_h)
d2697 5
a2701 4
	$(powerpc_32_c) $(powerpc_403_c) $(powerpc_403gc_c) $(powerpc_505_c) \
	$(powerpc_601_c) $(powerpc_602_c) $(powerpc_603_c) $(powerpc_604_c) \
	$(powerpc_64_c) $(powerpc_7400_c) $(powerpc_750_c) $(powerpc_860_c) \
	$(powerpc_e500_c) $(rs6000_c)
@


1.1011
log
@	* Makefile.in (arm-tdep.o): Update.
	* arm-tdep.c (arm_objfile_data_key, struct arm_mapping_symbol)
	(struct arm_per_objfile, arm_compare_mapping_symbols): New.
	(arm_pc_is_thumb): Use mapping symbols.
	(arm_objfile_data_cleanup, arm_record_special_symbol): New.
	(arm_gdbarch_init): Call set_gdbarch_record_special_symbol.
	(_initialize_arm_tdep): Initialize arm_objfile_data_key.
	* elfread.c (elf_symtab_read): Use gdbarch_record_special_symbol.
	* gdbarch.sh: Add record_special_symbol.
	* gdbarch.c, gdbarch.h: Regenerated.
	* objfiles.c (struct objfile_data): Add cleanup member.
	(register_objfile_data_with_cleanup): New function, from
	register_objfile_data.
	(register_objfile_data): Use it.
	(objfile_free_data): Call clear_objfile_data.
	(clear_objfile_data): Call cleanup functions.
	* objfiles.h (register_objfile_data_with_cleanup): Declare.
@
text
@d2376 2
a2377 1
	$(objc_lang_h) $(linespec_h) $(exceptions_h) $(language_h) $(mi_cmds_h)
d2971 1
a2971 1
	$(gdb_assert_h) $(regcache_h) $(block_h) $(dfp_h)
@


1.1010
log
@	Implement displaced stepping.

	gdb/
	* gdbarch.sh (max_insn_length): New 'variable'.
	(displaced_step_copy, displaced_step_fixup)
	(displaced_step_free_closure, displaced_step_location): New
	functions.
	(struct displaced_step_closure): Add forward declaration.
	* gdbarch.c, gdbarch.h: Regenerated.

	* arch-utils.c: #include "objfiles.h".
	(simple_displaced_step_copy_insn)
	(simple_displaced_step_free_closure)
	(displaced_step_at_entry_point): New functions.
	* arch-utils.h (simple_displaced_step_copy_insn)
	(simple_displaced_step_free_closure)
	(displaced_step_at_entry_point): New prototypes.

	* i386-tdep.c (I386_MAX_INSN_LEN): Rename to...
	(I386_MAX_MATCHED_INSN_LEN): ... this.
	(i386_absolute_jmp_p, i386_absolute_call_p)
	(i386_ret_p, i386_call_p, i386_breakpoint_p, i386_syscall_p)
	(i386_displaced_step_fixup): New functions.
	(struct i386_insn, i386_match_insn): Update.
	(i386_gdbarch_init): Set gdbarch_max_insn_length.
	* i386-tdep.h (I386_MAX_INSN_LEN): New.
	(i386_displaced_step_fixup): New prototype.
	* i386-linux-tdep.c (i386_linux_init_abi): Include "arch-utils.h".
	Register gdbarch_displaced_step_copy,
	gdbarch_displaced_step_fixup, gdbarch_displaced_step_free_closure,
	and gdbarch_displaced_step_location functions.

	* infrun.c (debug_displaced): New variable.
	(show_debug_displaced): New function.
	(struct displaced_step_request): New struct.
	(displaced_step_request_queue, displaced_step_ptid)
	(displaced_step_gdbarch, displaced_step_closure)
	(displaced_step_original, displaced_step_copy)
	(displaced_step_saved_copy, can_use_displaced_stepping): New
	variables.
	(show_can_use_displaced_stepping, use_displaced_stepping)
	(displaced_step_clear, cleanup_displaced_step_closure)
	(displaced_step_dump_bytes, displaced_step_prepare)
	(displaced_step_clear_cleanup, write_memory_ptid)
	(displaced_step_fixup): New functions.
	(resume): Call displaced_step_prepare.
	(proceed): Call read_pc once, and remember the value.  If using
	displaced stepping, don't remove breakpoints.
	(handle_inferior_event): Call displaced_step_fixup.  Add some
	debugging output.  When we try to step over a breakpoint, but get
	a signal to deliver to the thread instead, ensure the step-resume
	breakpoint is actually inserted.  If a thread hop is needed, and
	displaced stepping is enabled, don't remove breakpoints.
	(init_wait_for_inferior): Call displaced_step_clear.
	(_initialize_infrun): Add "set debug displaced" command.  Add
	"maint set can-use-displaced-stepping" command.  Clear
	displaced_step_ptid.
	* inferior.h (debug_displaced): Declare variable.
	(displaced_step_dump_bytes): Declare function.

	* Makefile.in (arch-utils.o, i386-linux-tdep.o): Update
	dependencies.

	gdb/testsuite/
	* gdb.asm/asmsrc1.s: Add scratch space.

	gdb/doc/
	* gdb.texinfo (Debugging Output): Document "set/show debug
	displaced".
	(Maintenance Commands): Document "maint set/show
	can-use-displaced-stepping".
@
text
@d1946 1
a1946 1
	$(target_descriptions_h) $(user_regs_h)
@


1.1009
log
@2008-05-02  Andrew Stubbs  <andrew.stubbs@@st.com>

	* main.h (batch_silent): Declare.
	* event-top.c: Include main.h.
	(gdb_setup_readline): Remove extern batch_silent declaration.
	* infrun.c (normal_stop): Don't print source location when running in
	--batch-silent mode.
	* Makefile.in (event-top.o): Add main.h dependency.
@
text
@d1920 1
a1920 1
	$(floatformat_h) $(target_descriptions_h)
d2260 2
a2261 1
	$(i386_linux_tdep_h) $(glibc_tdep_h) $(solib_svr4_h) $(symtab_h)
@


1.1008
log
@	* configure.tgt: Add i[34567]86-*-dicos* and x86_64-*-dicos*.
	(i[34567]86-*-dicos*, x86_64-*-dicos*):
	Set gdb_osabi to GDB_OSABI_DICOS.

	* defs.h (enum gdb_osabi): Add GDB_OSABI_DICOS.
	* osabi.c (gdb_osabi_name): Add "DICOS".

	* i386-dicos-tdep.c: New file.

	* Makefile.in (ALL_TARGET_OBS): Add i386-dicos-tdep.o.
	(ALLDEPFILES): Add i386-dicos-tdep.c.
	(i386-dicos-tdep.o): New rule.
@
text
@d2113 1
a2113 1
	$(readline_history_h)
@


1.1007
log
@2008-05-01  Daniel Jacobowitz  <dan@@codesourcery.com>
	    Pedro Alves  <pedro@@codesourcery.com>

	Based on work by Jan Kratochvil <jan.kratochvil@@redhat.com> and Jeff
 	Johnston <jjohnstn@@redhat.com>.

	* NEWS: Mention attach to stopped process fix.
	* infcmd.c (detach_command, disconnect_command): Discard the thread
	list.
	* infrun.c (handle_inferior_event): Do not ignore non-SIGSTOP while
	attaching.  Use signal_stop_state.
	(signal_stop_state): Check stop_soon.
	* linux-nat.c (kill_lwp): Declare earlier.
	(pid_is_stopped, linux_nat_post_attach_wait): New.
	(lin_lwp_attach_lwp): Use linux_nat_post_attach_wait.  Update
	comments.
	(linux_nat_attach): Use linux_nat_post_attach_wait.
	(detach_callback, linux_nat_detach): Improve handling for signalled
	processes.
	(linux_nat_pid_to_str): Always print out the LWP ID if it differs
	from the process ID.
	* Makefile.in (infcmd.o): Update.

2008-05-01  Jan Kratochvil  <jan.kratochvil@@redhat.com>
	    Daniel Jacobowitz  <dan@@codesourcery.com>

	* gdb.threads/attach-into-signal.c, gdb.threads/attach-into-signal.exp,
	gdb.threads/attach-stopped.c, gdb.threads/attach-stopped.exp,
	gdb.threads/attachstop-mt.c, gdb.threads/attachstop-mt.exp: New.
@
text
@d467 1
d1576 1
d2240 2
@


1.1006
log
@	* trad-frame.c (struct trad_frame_cache): Rename next_frame to this_frame.
	(trad_frame_cache_zalloc, trad_frame_alloc_saved_regs): Expect
	this_frame.
	(trad_frame_get_prev_register, trad_frame_get_register): Update signature.
	* trad-frame.h (trad_frame_cache_zalloc, trad_frame_get_register)
	(trad_frame_alloc_saved_regs, trad_frame_get_prev_register): Update
	signature.
	* tramp-frame.c (tramp_frame_cache, tramp_frame_start): Expect
	this_frame.
	(tramp_frame_this_id, tramp_frame_prev_register, tramp_frame_sniffer):
	Update signature.
	* tramp-frame.h (struct tramp_frame): Update signature of init.
	* Makefile.in (trad-frame.o): Update.
@
text
@d2319 1
a2319 1
	$(user_regs_h) $(exceptions_h) $(cli_decode_h)
@


1.1005
log
@	Convert frame unwinders to use the current frame and
	"struct value".

	* frame.c (frame_debug): Make global.
	(get_frame_id): Pass this frame to unwinder routines.
	(frame_pc_unwind): Remove unused unwind->prev_pc support.
	(do_frame_register_read): Do not discard the return value of
	frame_register_read.
	(frame_register_unwind): Remove debug messages.  Use
	frame_unwind_register_value.
	(frame_unwind_register_value, get_frame_register_value): New
	functions.
	(create_new_frame, get_frame_base_address, get_frame_locals_address)
	(get_frame_args_address, get_frame_type): Pass this frame to
	unwinder routines.
	(frame_cleanup_after_sniffer, frame_prepare_for_sniffer): New
	functions.
	* frame.h: Update comments.
	(frame_debug, frame_unwind_register_value, get_frame_register_value)
	(frame_prepare_for_sniffer): Declare.
	* frame-unwind.h: Update comments and parameter names.
	(default_frame_sniffer): Declare.
	(frame_prev_register_ftype): Return a struct value *.
	(struct frame_unwind): Remove prev_pc member.
	(frame_unwind_sniffer_ftype, frame_unwind_append_sniffer): Delete.
	(frame_unwind_append_unwinder, frame_unwind_got_optimized)
	(frame_unwind_got_register, frame_unwind_got_memory)
	(frame_unwind_got_constant, frame_unwind_got_address): Declare.
	* frame-base.h: Update comments and parameter names.
	* valops.c (value_fetch_lazy): Use get_frame_register_value.  Iterate
	if necessary.  Add debugging output.
	* sentinel-frame.c (sentinel_frame_prev_register)
	(sentinel_frame_this_id): Update for new signature.
	(sentinel_frame_prev_pc): Delete.
	(sentinel_frame_unwinder): Remove prev_pc.
	* ia64-tdep.c (ia64_libunwind_frame_unwind): Do not initialize
	prev_pc.
	* libunwind-frame.c (libunwind_frame_unwind): Likewise.
	* frame-unwind.c (struct frame_unwind_table_entry): Remove sniffer.
	(frame_unwind_append_sniffer): Delete.
	(frame_unwind_append_unwinder): New function.
	(frame_unwind_find_by_frame): Take this frame.  Only use sniffers
	from unwinders.  Use frame_prepare_for_sniffer.
	(default_frame_sniffer, frame_unwind_got_optimized)
	(frame_unwind_got_register, frame_unwind_got_memory)
	(frame_unwind_got_constant, frame_unwind_got_address): New functions.
	* dummy-frame.c (dummy_frame_sniffer): Use gdbarch_dummy_id.
	(dummy_frame_prev_register, dummy_frame_this_id): Update for new
	signature.
	* gdbarch.sh: Replace unwind_dummy_id with dummy_id.
	* gdbarch.c, gdbarch.c: Regenerated.
	* frame-base.c (default_frame_base_address)
	(default_frame_locals_address, default_frame_args_address): Update
	for new signature.
	(frame_base_find_by_frame): Pass this frame to unwinder routines.
	* infcall.c (call_function_by_hand): Update comments.
	* Makefile.in (frame-unwind.o): Update dependencies.

	* gdbint.texinfo (Stack Frames): New chapter.
	(Algorithms): Move Frames text to the new chapter.
	(Target Conditionals): Delete SAVE_DUMMY_FRAME_TOS.  Document
	gdbarch_dummy_id instead of gdbarch_unwind_dummy_id.
@
text
@d2928 1
a2928 1
	$(regcache_h)
@


1.1004
log
@	* breakpoint.h (bp_location_p): New typedef.
	Register a vector of bp_location_p.
	* breakpoint.c (always_inserted_mode)
	(show_always_inserted_mode): New.
	(unlink_locations_from_global_list): Remove.
	(update_global_location_list)
	(update_global_location_list_nothrow): New.
	(update_watchpoint): Don't free locations.
	(should_insert_location): New.
	(insert_bp_location): Use should_insert_location.
	(insert_breakpoint_locations): Copied from
	insert_breakpoints.
	(insert_breakpoint): Use insert_breakpoint_locations.
	(bpstat_stop_status): Call update_global_location_list
	when disabling breakpoint.
	(allocate_bp_location): Don't add to bp_location_chain.
	(set_raw_breakpoint)
	(create_longjmp_breakpoint, enable_longjmp_breakpoint)
	(disable_longjmp_breakpoint, create_overlay_event_breakpoint)
	(enable_overlay_breakpoints, disable_overlay_breakpoints)
	(set_longjmp_resume_breakpoint)
	(enable_watchpoints_after_interactive_call_stop)
	(disable_watchpoints_before_interactive_call_start)
	(create_internal_breakpoint)
	(create_fork_vfork_event_catchpoint)
	(create_exec_event_catchpoint, set_momentary_breakpoint)
	(create_breakpoints, break_command_1, watch_command_1)
	(create_exception_catchpoint)
	(handle_gnu_v3_exceptions)
	(disable_breakpoint, breakpoint_re_set_one)
	(create_thread_event_breakpoint, create_solib_event_breakpoint)
	(create_ada_exception_breakpoint): : Don't call check_duplicates.
	Call update_global_location_list.
	(delete_breakpoint): Don't remove locations and don't
	try to reinsert them. Call update_global_location_list.
	(update_breakpoint_locations): Likewise.
	(restore_always_inserted_mode): New.
	(update_breakpoints_after_exec): Temporary disable
	always inserted mode.
	* Makefile.in: Update dependencies.

	* infrun.c (proceed): Remove breakpoints while stepping
	over breakpoint.
	(handle_inferior_event): Don't remove or insert
	breakpoints.
	* linux-fork.c (checkpoint_command): Remove breakpoints
	before fork and insert after.
	(linux_fork_context): Remove breakpoints before switch
	and insert after.
	* target.c (target_disconnect, target_detach): Remove
	breakpoints from target.
@
text
@d2146 2
a2147 1
	$(gdb_assert_h) $(dummy_frame_h) $(gdb_obstack_h)
@


1.1003
log
@2008-04-23  Maxim Grigoriev  <maxim2405@@gmail.com>

	* Makefile.in (xtensa-tdep.o): Update dependencies.
	* configure.tgt (xtensa*): Update dependencies.
	* xtensa-tdep.c (arreg_number): Renamed from areg_number.
	Local variable areg renamed to arreg.
	(areg_number): New function.
	(xtensa_pseudo_register_read, xtensa_pseudo_register_write)
	(xtensa_extract_return_value, xtensa_store_return_value): areg_number
	replaced by arreg_number.
	(xtensa_windowed_frame_cache, struct xtensa_frame_cache): New comments.
	(xtensa_alloc_frame_cache): Initialize cache->wd.ws.
	(xtensa_scan_prologue): New function.
	(xtensa_frame_cache): New local fp_regnum. Handle separately the case,
	when ENTRY instraction hasn't been executed yet. Get the frame pointer
	value based on prologue analysis. Fix the bugs preventing WS and
	AR4-AR7/A11 registers from getting right values for intermediate frames,
	whose registers have been already spilled.
	(xtensa_frame_prev_register): Fix WS register value. Use are_number
	and arreg_number appropriately.
	(xtensa_gdbarch_init): Set solib_svr4_fetch_link_map_offsets to
	svr4_ilp32_fetch_link_map_offsets.
@
text
@d1977 2
a1978 1
	$(mi_common_h) $(memattr_h) $(ada_lang_h) $(top_h) $(hashtab_h)
@


1.1002
log
@(linespec.o, mi-interp.o): Add dependencies.
@
text
@d3019 1
a3019 1
	$(elf_bfd_h) $(xtensa_tdep_h) $(dwarf2_frame_h)
@


1.1001
log
@	* cli/cli-decode.h (CMD_ASYNC_OK): New define.
	(set_cmd_async_ok, get_cmd_async_ok): Declare.
	* cli/cli-decode.c (set_cmd_async_ok): New function.
	(get_cmd_async_ok): New function.
	* cli/cli-cmds.c (init_cli_cmds): Mark "pwd", "help", "info", and
	"show" as async-ok.
	* top.c (execute_command): Use get_cmd_async_ok.
	* infcmd.c: Include cli/cli-decode.h.
	(_initialize_infcmd): Mark "interrupt" as async-ok.
	* Makefile.in (infcmd.o): Depend on cli_decode_h.
@
text
@d2368 2
a2369 2
	$(completer_h) $(cp_abi_h) $(parser_defs_h) $(block_h) \
	$(objc_lang_h) $(linespec_h) $(exceptions_h) $(language_h)
d3256 1
a3256 1
	$(mi_console_h) $(observer_h) $(gdbthread_h)
@


1.1000
log
@	* Makefile.in (GNULIB_H): New.  Trigger all-lib.
	(defs_h): Use $(GNULIB_H).
	(all-lib): Depend on gnulib/Makefile.
	(gnulib/Makefile): Regenerate gnulib/Makefile and gnulib/.deps.
	* config.in, gnulib/Makefile.in: Regenerated.
@
text
@d2317 1
a2317 1
	$(user_regs_h) $(exceptions_h)
@


1.999
log
@	* Makefile.in (LIBGNU, INCGNU): Define.
	(INTERNAL_CFLAGS_BASE): Add INCGNU.
	(INTERNAL_LIBS, CLIBS, CDEPS): Add LIBGNU.
	(CLEANDIRS): New.
	($(LIBGNU), all-lib): New rules.
	(clean, distclean, do-maintainer-clean): Use CLEANDIRS.
	* configure.ac: Use gl_EARLY, gl_INIT, and AM_INIT_AUTOMAKE.
	Simplify AC_CONFIG_AUX_DIR.  Generate gnulib/Makefile.
	* gnulib: New directory, from gnulib-tool.
	* configure, aclocal.m4: Regenerated.

	* Makefile.in (LIBOBJS): New.
	(OBS): Use LIBOBJS.
	(memmem.o): New rule.
	* configure.ac: Use AC_CONFIG_LIBOBJ_DIR and check for memmem.
	* configure: Regenerated.
@
text
@d167 4
d761 1
d764 1
a764 1
	$(fopen_bin_h) $(gdbarch_h)
d1343 2
a1344 2
$(LIBGNU): all-lib
all-lib:
d1450 1
a1450 1
	CONFIG_FILES=Makefile \
d1455 7
@


1.998
log
@gdb/ChangeLog
2008-04-09  Marc Khouzam  <marc.khouzam@@ericsson.com>

        * mi/mi-cmd-var.c: Include "mi-getopt.h".
        (mi_parse_format): New.  Factored out from mi_cmd_var_set_format.
        (mi_cmd_var_set_format): Use new mi_parse_format.
        (mi_cmd_var_evaluate_expression): Support for -f option to specify
        format.
        * Makefile.in (mi-cmd-var.o): Update dependencies.

        * varobj.h (varobj_get_formatted_value): Declare.
        * varobj.c (my_value_of_variable): Added format parameter.
        (cplus_value_of_variable): Likewise.
        (java_value_of_variable): Likewise.
        (c_value_of_variable): Likewise.  Evaluate expression based
        on format parameter.
        (struct language_specific): Add format parameter to function member
        *value_of_variable.
        (varobj_get_formatted_value): New.
        (varobj_get_value): Added format parameter to method call.

gdb/doc/ChangeLog
2008-04-09  Marc Khouzam  <marc.khouzam@@ericsson.com>

        * gdb.texinfo (GDB/MI Variable Objects): Add anchor to
        -var-set-format.  Add -f option to -var-evaluate-expression.

gdb/testsuite/ChangeLog
2008-04-09  Marc Khouzam  <marc.khouzam@@ericsson.com>

        * gdb.mi/mi2-var-display.exp: Added tests for the new -f
        option of -var-evaluate-expression.
        * gdb.mi/mi2-var-display.exp: Likewise.
@
text
@d163 4
d371 1
a371 1
	$(INTL_CFLAGS) $(ENABLE_CFLAGS) $(INTERNAL_CPPFLAGS)
d395 1
a395 1
	-lintl -liberty
d399 1
a399 1
	$(LIBIBERTY) $(WIN32LIBS)
d401 1
a401 1
	$(OPCODES) $(INTL_DEPS) $(LIBIBERTY) $(CONFIG_DEPS)
d1084 1
d1337 6
d1382 1
a1382 1
	@@$(MAKE) $(FLAGS_TO_PASS) DO=clean "DODIRS=$(SUBDIRS)" subdir_do
d1401 1
a1401 1
	@@$(MAKE) $(FLAGS_TO_PASS) DO=distclean "DODIRS=$(SUBDIRS)" subdir_do
d1428 1
a1428 1
	@@$(MAKE) $(FLAGS_TO_PASS) DO=maintainer-clean "DODIRS=$(SUBDIRS)" \
@


1.997
log
@	* alphanbsd-tdep.c: Include "target.h".
	* mn10300-tdep.c: Include "target.h".
	* Makefile.in (alphanbsd-tdep.o, mn10300-tdep.o): Update.
@
text
@d3222 1
a3222 1
	$(mi_out_h) $(varobj_h) $(value_h) $(gdb_string_h)
@


1.996
log
@	* objfiles.h (struct objfile): New GDBARCH member.
	(get_objfile_arch): Add prototype.
	* objfiles.c: Include "arch-utils.h".
	(allocate_objfile): Look up gdbarch associated with bfd.
	(get_objfile_arch): New function.
	* Makefile (objfiles.o): Update dependencies.

	* dwarf2-frame.c (decode_frame_entry_1): Replace current_gdbarch
	by objfile arch.
	* dwarf2loc.c (dwarf_expr_read_reg): Replace current_gdbarch
	by frame arch.
	(locexpr_describe_location): Replace current_gdbarch by
	objfile arch.
	* dwarf2read.c (die_type): Replace current_gdbarch by objfile arch.
	(dwarf2_add_field): Likewise.
	(read_tag_pointer_type): Likewise.
	(read_base_type): Likewise.
	(new_symbol): Likewise.

	* coffread.c (decode_type): Add OBJFILE argument.  Update callers.
	(decode_base_type, decode_function_type): Likewise.
	(coff_read_struct_type, coff_read_enum_type): Likewise.
	(coff_symtab_read): Replace current_gdbarch by objfile arch.
	(decode_base_type): Likewise.
	(coff_read_enum_type): Likewise.
	(coff_read_struct_type): Replace current_objfile by OBJFILE argument.
	(coff_read_enum_type): Likewise.

	* dbxread.c (read_dbx_symtab): Replace current_gdbarch by objfile arch.
	(end_psymtab): Likewise.
	(process_one_symbol): Likewise.

	* mdebugread.c (parse_symbol): Replace current_gdbarch by objfile arch.
	(parse_procedure): Likewise.
	(parse_partial_symbols): Likewise.

	* somread.c (som_symtab_read): Replace current_gdbarch by objfile arch.

	* stabsread.c (define_symbol): Replace current_gdbarch by objfile arch.
	Replace static pcc_promotion_type and pcc_unsigned_promotion_type by
	built-in types.
	(read_range_type): Replace current_gdbarch by objfile arch.  Replace
	static range_index_type by built-in type.
	(read_one_struct_field): Replace current_gdbarch by objfile arch.
	(read_enum_type): Likewise.

	* xcoffread.c (read_xcoff_symtab): Replace current_gdbarch by
	objfile arch.
@
text
@d1839 1
a1839 1
	$(solib_svr4_h)
d2510 1
a2510 1
	$(symtab_h) $(dwarf2_frame_h) $(osabi_h) $(mn10300_tdep_h)
@


1.995
log
@	* thread.c (make_cleanup_restore_current_thread): Make it
	globally visible.
	* gdbthread.h (make_cleanup_restore_current_thread): Declare.
	* varobj.c (varobj_update): Don't save/restore frame.
	(c_value_of_root): Save/restore thread and frame here,
	using make_cleanup_restore_current_thread.
	* Makefile.in: Update dependecies.
@
text
@d2542 1
a2542 1
	$(parser_defs_h) $(expression_h) $(addrmap_h)
@


1.994
log
@gdb/
	* target.h (struct target_ops): Delete to_async_mask_value and add
	to_async_mask.
	(target_is_async_p, target_async): Formatting.
	(target_async_mask_value): Delete.
	(target_async_mask): Delete function declaration, and add new
	target macro with the same name.

	* target.c (update_current_target): Replace to_async_mask_value by
	to_async_mask.  Default to_async_mask to return_one.
	(target_async_mask): Delete.
	(find_default_can_async_p, find_default_is_async_p): New.
	(init_dummy_target): register find_default_can_async_p and
	find_default_is_async_p on the dummy target.

	* linux-nat.c: Include inf-loop.h, event-loop.h and event-top.h.
	(debug_linux_nat_async): New global.
	(show_debug_linux_nat_async): New function.
	(linux_nat_async_enabled, linux_nat_async_mask_value)
	(linux_nat_event_pipe, linux_nat_num_queued_events)
	(linux_nat_async_events_enabled): New globals.
	(struct waitpid_result): New struct.
	(waitpid_queue): New global.
	(queued_waitpid, push_waitpid, drain_queued_events): New.
	(my_waitpid): Call queued_waitpid.
	(linux_child_follow_fork): Disable async events during the call.
	(blocked_mask): Delete.
	(sync_sigchld_action, async_sigchld_action): New globals.
	(lin_lwp_attach_lwp): In sync mode, don't reblock SIGCHLD.  In
	async mode, block events during the call.
	(linux_nat_create_inferior): New.
	(linux_nat_attach): In sync mode, restore the mask states.  In
	async mode, wake the event loop immediatelly.
	(detach_callback): Drain all queued events of the lwp we're
	detaching from.
	(linux_nat_detach): Block async mode, and drain events of the main
	process.
	(linux_nat_resume): If in async mode, mask async events during the
	call.  If short circuiting, force event loop to wake up.  If
	resuming, set target_executing, and register target events in the
	event loop.
	(pipe_to_local_event_queue, local_event_queue_to_pipe): New.
	(linux_nat_wait): In async mode, block events during the call.
	Only enable/disable passing SIGINT to the inferior in sync mode.
	Get events from local waitpid queue.  If no interesting events was
	found, return to events loop.  Reregister target events in the
	event loop on exit.  In sync mode, no need to reblock SIGCHLD.
	(linux_nat_kill): Disable events on entry.
	(linux_nat_mourn_inferior): In sync mode, don't restore the masks
	here.  Detach async mode from the event loop if there are no more
	forks available, otherwise leave it on.
	(sigchld_handler): Assure this is called only in sync mode.
	(linux_async_permitted, linux_async_permitted_1): New globals.
	(set_maintenance_linux_async_permitted)
	(show_maintenance_linux_async_permitted): New functions.
	(linux_nat_is_async_p, linux_nat_can_async_p)
	(linux_nat_async_mask): New.
	(linux_nat_event_pipe_pop, linux_nat_event_pipe_push): New.
	(get_pending_events, async_sigchld_handler): New.
	(linux_nat_async_events): New.
	(async_terminal_is_ours): New global.
	(linux_nat_terminal_inferior, linux_nat_terminal_ours): New.
	(async_client_callback, async_client_context): New.
	(linux_nat_async_file_handler, linux_nat_async)
	(linux_nat_disable_async, linux_nat_enable_async): New.
	(linux_nat_add_target): Register linux_nat_create_inferior,
	linux_nat_can_async_p, linux_nat_is_async_p, linux_nat_async,
	linux_nat_async_mask, linux_nat_terminal_inferior and
	linux_nat_terminal_ours.
	(_initialize_linux_nat): Remove local action variable, and update
	code that used it to use sync_sigchld_action.  Add new
	"lin-lwp-async" debug set/show command.  Put the "lin-lwp" debug
	set/show command in the maintenance class.  Add new "linux-async"
	maintenance set/show command.  Block SIGCHLD by default.  Setup
	async_sichld_action, and sync_sigchld_action.  Install the default
	async mode.
	(lin_thread_get_thread_signals): Use a local sigset_t for blocking
	the cancel signals.

	* linux-thread-db.c (re_check_for_thread_db): New.
	(clear_lwpid_callback): Handle TARGET_WAITKIND_IGNORE.
	(thread_db_can_async_p, thread_db_is_async_p, thread_db_async)
	(thread_db_async_mask): New.
	(init_thread_db_ops): Register thread_db_can_async_p,
	thread_db_is_async_p, thread_db_async and thread_db_async_mask.

	* remote.c (remote_async_mask_value): New.
	(remote_return_zero): New.
	(init_remote_ops): Register remote_return_zero as callbacks of
	to_can_async_p and to_is_async_p.
	(remote_can_async_p, remote_is_async_p, remote_async): Update to
	use remote_async_mask_value.
	(remote_async_mask): New.
	(init_remote_async_ops): Remove to_async_mask_value setting and
	register remote_async_mask as to_async_mask callback in
	remote_async_ops.

	* Makefile.in (linux-nat.o): Update.

gdb/doc/
	* gdb.texinfo (Debugging Output): Document
	"set/show debug lin-lwp-async".
	(Maintenance Commands): Document "maint set/show linux-async".
@
text
@d2943 2
a2944 1
	$(gdb_assert_h) $(gdb_string_h) $(varobj_h) $(vec_h)
@


1.993
log
@        * Makefile.in (amd64nbsd-nat.o): New dependency.
        * amd64nbsd-nat.c: Include "nbsd-nat.h".
        (_initialize_amd64nbsd_nat): Update target vector to use
        nbsd_pid_to_exec_file.
        * config/i386/nbsd64.mh (NATDEPFILES): Add nbsd-nat.o.
@
text
@d2354 1
a2354 1
	$(linux_fork_h)
@


1.992
log
@	Implement -thread-info.
        * gdbthread.h (print_thread_info): Declare.

        * thread.c (print_thread_info): New, extracted
        from info_threads_command and adjusted to
        work for CLI and MI.
        (info_threads_command): Use print_thread_info.
	* Makefile.in: Update dependencies.

        * mi/mi-cmds.c (mi_cmds): Specify a handler
        for -thread-info.
        * mi/mi-cmds.h (mi_cmd_thread_info): Declare.
        * mi/mi-main.c (mi_cmd_thread_info): New.
        (mi_cmd_list_features): Include 'thread-info'.
@
text
@d1870 1
a1870 1
	$(amd64_tdep_h) $(amd64_nat_h)
@


1.991
log
@	Async mode fixes.
        * Makefile.in (infcmd.o, inf-loop.o): Update dependencies.
        * breakpoint.c (bpstat_do_actions): In async mode,
        don't jump to top expecting stop_bpstat to be already
        updated.
        * event-loop.c (start_event_loop): Call async_enable_stdin
        on exception.
        * event-top.c (async_enable_stdin): Do nothing if sync_execution
        is not set.
        (command_handler): Do not setup continuation here.
        (command_line_handler_continuation): Move to...
        * top.c (command_line_handler_continuation): ... here.
        (execute_command): In async mode, register continuation.
        Don't check frame's language in running in async mode.
        * exceptions.c (throw_exception): Don't do exec_error_cleanups.
        * inf-loop.c (complete_execution): Inline into...
        (inferior_event_handler): ... here.  Clear target_executing before
        doing any cleanups.  Don't try to show prompt if the target was
        resumed.
        * infcmd.c (signal_command): Add support for async mode.
        (finish_command): Only add continuation if the target was
        successfully resumed.
        * remote.c (init_async_opts): Register to_get_thread_local_address
        handler.
        * mi/mi-interp.c (mi_cmd_interpreter_exec): Don't mess
        with sync_execution.
        * tui/tui-interp.c (tui_command_loop): Call async_enable_stdin
        on exception.
@
text
@d795 1
a795 1
gdbthread_h = gdbthread.h $(breakpoint_h) $(frame_h)
@


1.990
log
@	Implement MI notification for new threads.
        * doc/observer.texi (new_thread): Document.
        * observer.sh: Forward declare struct thread_info.
        * thread.c (add_thread): Notify observer.

        * interps.h (interp_init_ftype): New parameter
        top_level.
        (interp_set): Likewise.
        (top_level_interpreter_data): Declare.
        * interps.c (interp_set): New parameter top_level.
        Pass it to interpreter's init function.  Remember
        top level interpreter.
        (interpreter_exec_cmd): Adjust.
        (top_level_interpreter_data): New.
        * main.c (captured_main): Pass 1 for top_level
        parameter of interp_set.
	* cli/cli-interp.c (cli_interpreter_init): New
        parameter top_level.
        * tui/tui-interp.c (tui_init): New parameter top_level.

        * mi/mi-interp.c (mi_new_thread): New.
        (mi_interpreter_init): If top level, register
        observer for new threads.

        * Makefile.in (mi-interp.o, thread.o): Update dependencies.
@
text
@d2294 1
a2294 1
	$(user_regs_h)
d2296 2
a2297 1
	$(event_top_h) $(inf_loop_h) $(remote_h) $(exceptions_h)
@


1.989
log
@	* breakpoint.h (breakpoint_restore_shadows): New
	declaration.
	* breakpoint.c (breakpoint_restore_shadows): New.
	(read_memory_nobpt): Delete.
	* gdbcore.h (read_memory_nobpt): Delete declaration.
	* target.c (memory_xfer_partial): Call
	breakpoint_restore_shadows.
	(restore_show_memory_breakpoints)
	(make_show_memory_beakpoints_cleanup): New.
	(show_memory_breakpoints): New.
	* target.h (make_show_memory_beakpoints_cleanup): Declare.
	* ppc-linux-tdep.c (ppc_linux_memory_remove_breakpoint):
	Make sure we see memory breakpoints when checking if
	breakpoint is still there.
	* alpha-tdep.c, alphanbsd-tdep.c, frame.c, frv-tdep.c,
	hppa-linux-tdep.c, hppa-tdep.c, i386-linux-nat.c, i386-tdep.c,
	m68klinux-tdep.c, mips-tdep.c, mn10300-tdep.c, s390-tdep.c,
	sparc-tdep.c: Use target_read_memory instead of read_memory_nobpt.
@
text
@d2886 1
a2886 1
	$(ui_out_h)
d3231 1
a3231 1
	$(mi_console_h)
@


1.988
log
@	* Makefile.in (fork-child.o): Update.
	* NEWS: Document "set exec-wrapper" and the gdbserver --wrapper
	argument.  Gather all gdbserver features together.
	* fork-child.c (exec_wrapper): New variable.
	(fork_inferior): Use it.
	(startup_inferior): Skip an extra trap if using "set exec-wrapper".
	(unset_exec_wrapper_command, _initialize_fork_child): New.

	* gdb.texinfo (Starting): Document "set exec-wrapper".
	(Server): Document gdbserver --wrapper.

	* server.c (wrapper_argv): New.
	(start_inferior): Handle wrapper_argv.  If set, expect an extra
	trap.
	(gdbserver_usage): Document --wrapper.
	(main): Parse --wrapper.
@
text
@d2876 1
a2876 1
	$(exceptions_h) $(target_descriptions_h)
@


1.987
log
@	* Makefile.in (mingw-hdep.o, posix-hdep.o, remote-fileio.o): Update.
	* event-loop.c (call_async_signal_handler): New.
	* event-loop.h (call_async_signal_handler)
	(gdb_call_async_signal_handler): Declare.
	(mark_async_signal_handler): Add comments.
	* event-top.c (handle_sigint): Use gdb_call_async_signal_handler.
	* mingw-hdep.c (sigint_event, sigint_handler): New.
	(gdb_select): Use them.  Wait for the readline signal handler
	to finish.
	(gdb_call_async_signal_handler, _initialize_mingw_hdep): New functions.
	* posix-hdep.c (gdb_call_async_signal_handler): New function.
	* remote-fileio.c (sigint_fileio_token, async_remote_fileio_interrupt):
	New.
	(remote_fileio_ctrl_c_signal_handler): Use
	gdb_call_async_signal_handler.
	(initialize_remote_fileio): Initialize sigint_fileio_token.
	* remote.c (initialize_sigint_signal_handler, handle_remote_sigint): Do
	not initialize tokens here.
	(handle_remote_sigint_twice): Likewise.  Reinstall
	handle_remote_sigint.
	(async_remote_interrupt_twice): Just call interrupt_query.
	(cleanup_sigint_signal_handler): Do not delete tokens.
	(remote_interrupt, remote_interrupt_twice): Use
	gdb_call_async_signal_handler.
	(interrupt_query): Reinstall the default signal handler.
	(_initialize_remote): Initialize tokens here.
@
text
@d2113 1
a2113 1
	$(terminal_h) $(gdbthread_h) $(command_h) $(solib_h)
@


1.986
log
@	* Makefile.in (i386-nat.o): Update.
	* amd64-linux-nat.c (_initialize_amd64_linux_nat): Call
	i386_use_watchpoints.
	* i386-linux-nat.c (_initialize_i386_linux_nat): Call
	i386_use_watchpoints.
	* i386-nat.c (i386_stopped_data_address): Take two arguments.
	(i386_stopped_by_watchpoint): Update call.
	(i386_can_use_hw_breakpoint, i386_use_watchpoints): New.
	* config/i386/nm-i386.h: Conditionalize definitions on
	! I386_WATCHPOINTS_IN_TARGET_VECTOR.
	(i386_use_watchpoints): Declare.
	(i386_stopped_data_address): Update.
	* config/i386/nm-linux.h (I386_WATCHPOINTS_IN_TARGET_VECTOR): Define.
	* config/i386/nm-linux64.h (I386_WATCHPOINTS_IN_TARGET_VECTOR): Define.
@
text
@d2459 2
a2460 2
mingw-hdep.o: mingw-hdep.c $(defs_h) $(serial_h) $(gdb_assert_h) \
	$(gdb_select_h) $(gdb_string_h)
d2557 2
a2558 1
posix-hdep.o: posix-hdep.c $(defs_h) $(gdb_string_h) $(gdb_select_h)
d2629 1
a2629 1
	$(exceptions_h) $(remote_fileio_h)
@


1.985
log
@	* configure.tgt (sh-*-linux*): Match sh*.  Add glibc-tdep.o.
	* sh-linux-tdep.c (sh_linux_init_abi): Use glibc_skip_solib_resolver
	and svr4_fetch_objfile_link_map.
	* Makefile.in (sh-linux-tdep.o): Update.
@
text
@d2232 2
a2233 1
i386-nat.o: i386-nat.c $(defs_h) $(breakpoint_h) $(command_h) $(gdbcmd_h)
@


1.984
log
@
2008-02-20  Markus Deuling  <deuling@@de.ibm.com>
	    Mark Kettenis  <kettenis@@gnu.org>

	* alpha-tdep.c (alpha_heuristic_unwind_cache): Replace saved_regs by
	trad_frame_saved_reg.
	(trad-frame.h): New include.

	(alpha_heuristic_frame_unwind_cache): Use trad_frame_alloc_saved_regs
	instead of frame_obstack_zalloc.
	(alpha_heuristic_frame_prev_register): Use trad_frame_get_prev_register.

	* Makefile.in (alpha-tdep.o): Add dependency to trad_frame_h.
@
text
@d2706 1
a2706 1
	$(symtab_h)
@


1.984.2.1
log
@        * Makefile.in (amd64nbsd-nat.o): New dependency.
        * amd64nbsd-nat.c: Include "nbsd-nat.h".
        (_initialize_amd64nbsd_nat): Update target vector to use
        nbsd_pid_to_exec_file.
        * config/i386/nbsd64.mh (NATDEPFILES): Add nbsd-nat.o.
@
text
@d1870 1
a1870 1
	$(amd64_tdep_h) $(amd64_nat_h) $(nbsd_nat_h)
@


1.984.2.1.4.1
log
@Check in ARCompact simulator.  A valid configuration is arc-elf.
This is not quite finished and has most likely a few files that are
obsolete & not used, but it's good enough to run gcc regression tests.
@
text
@a659 1
elf_arc_h =	$(INCLUDE_DIR)/elf/arc.h $(elf_reloc_macros_h)
a671 1
opcode_arc_h = $(INCLUDE_DIR)/opcode/arc.h
a731 4
arc_tdep_h = arc-tdep.h
arc_jtag_h = arc-jtag.h
arc_jtag_ops_h = arc-jtag-ops.h
arc_regnums_defs_h = arc-regnums-defs.h
a1531 2
	arc-tdep.c arc-linux-tdep.c arc-jtag.c \
	arc-jtag-ops.c arc-jtag.c \
a1895 14
arc-jtag.o:arc-jtag.c $(arc_jtag_h) $(defs_h) $(gdbcore_h) \
	$(arc_regnums_defs_h) $(gdbcmd_h)
arc-jtag-ops.o: arc-jtag-ops.c $(arc_jtag_ops_h) $(arc_tdep_h)
arc-jtag-tdep.o:arc-jtag-tdep.c $(arc_tdep_h) $(arc_jtag_h) $(defs_h) \
	$(osabi_h) $(frame_h) $(regcache_h) $(gdb_assert_h) $(inferior_h) \
	$(arc_tdep_h) $(arc_jtag_h)
arc-linux-tdep.o: arc-linux-tdep.c $(defs_h) $(osabi_h) $(frame_h) \
	$(regcache_h) $(gdb_assert_h) $(inferior_h) $(reggroups_h) \
	$(solib_svr4_h) $(symtab_h) $(objfiles_h) $(block_h) $(arc_tdep_h)
arc-tdep.o: arc-tdep.c $(defs_h) $(arch_utils_h) $(frame_h) $(inferior_h) \
	$(gdbcmd_h) $(gdbcore_h) $(gdb_string_h) $(dis_asm_h) $(regcache_h) \
	$(doublest_h) $(value_h)  $(frame_unwind_h) $(frame_base_h) \
	$(trad_frame_h) $(arc_tdep_h)  $(elf_bfd_h) $(elf_arc_h) \
	$(opcode_arc_h) $(gdb_assert_h) $(bfd_in2_h) $(observer_h)
@


1.984.2.1.4.2
log
@gdb/insight for ARCompact (from Richard Stuckey)
@
text
@d2 1
a2 1
# 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009
a143 3
# Where are the ARC xISS header files?
XISS_INCLUDES = @@XISS_INCLUDES@@

d367 1
a367 2
	$(INTL_CFLAGS) $(ENABLE_CFLAGS) $(INTERNAL_CPPFLAGS) \
        $(XISS_INCLUDES)
d395 1
a395 1
	$(LIBIBERTY) $(WIN32LIBS) -lz
d414 1
a414 2
	$(srcdir)/features/library-list.dtd \
	$(srcdir)/features/arc-registers.dtd 
d426 1
a426 1
REMOTE_OBS = remote.o dcache.o tracepoint.o ax-general.o ax-gdb.o remote-fileio.o target-fileio.o
d627 1
a627 1
	target.c target-descriptions.c target-fileio.c target-memory.c \
a649 1
bfd_in2_h =		$(BFD_DIR)/bfd-in2.h
a733 2
arc_board_h = arc-board.h
arc_gpio_h = arc-gpio.h
a735 6
arc_xiss_h = arc-xiss.h
arc_inst_tracing_h = arc-inst-tracing.h
arc_memory_h = arc-memory.h
arc_arguments_h = arc-arguments.h
arc_elf32_tdep_h = arc-elf32-tdep.h
arc_linux_tdep_h = arc-linux-tdep.h
d737 1
a737 8
arc_tm_linux_h = config/arc/tm-linux.h
arc_tm_embed_h = config/arc/tm-embed.h
arc_sim_registers_h = ../sim/arc/arc-sim-registers.h
arc_jtag_actionpoints_h = arc-jtag-actionpoints.h
arc_registers_h = arc-registers.h
arc_remote_fileio_h = arc-remote-fileio.h
arc_architecture_h = arc-architecture.h
arc_support_h = arc-support.h
a851 2
opcodes_arc_dis_h = $(OPCODES_DIR)/arc-dis.h
opcodes_arcompact_dis_h = $(OPCODES_DIR)/arcompact-dis.h
a897 1
target_fileio_h = target-fileio.h
d1538 2
a1539 5
	arc-jtag-actionpoints.c arc-remote-fileio.c \
	arc-tdep.c arc-linux-tdep.c arc-jtag.c arc-architecture.c \
	arc-jtag-ops.c arc-jtag.c arc-registers.c arc-board.c \
	arc-xiss.c arc-gpio.c arc-memory.c arc-arguments.c \
	arc-inst-tracing.c \
d1904 14
a1917 72
arc-architecture.o: arc-architecture.c \
	$(arc_architecture_h) $(arc_registers_h) $(arch_utils_h) \
	$(arc_elf32_tdep_h) $(arc_support_h) $(arc_tdep_h) $(bfd_in2_h) \
	$(defs_h) $(gdbarch_h) $(gdb_events_h) $(objfiles_h) $(breakpoint_h) \
	$(target_h) $(gdb_assert_h)
	$(CC) -c $(INTERNAL_CFLAGS) -Wno-format-nonliteral $<
arc-registers.o: arc-registers.c \
	$(arc_architecture_h) $(arc_registers_h) $(arc_elf32_tdep_h) \
	$(arc_sim_registers_h) $(arc_support_h) $(arc_tdep_h) \
	$(arc_tm_embed_h) $(bfd_in2_h) $(defs_h) $(gdbarch_h) $(gdbcmd_h) \
	$(inferior_h) $(objfiles_h) $(regcache_h) \
	$(target_h) $(xml_support_h) $(breakpoint_h) $(gdb_assert_h)
	$(CC) -c $(INTERNAL_CFLAGS) -Wno-format-nonliteral $<
arc-board.o: arc-board.c $(arc_architecture_h) $(arc_registers_h) \
	$(arc_board_h) $(arc_gpio_h) $(arc_jtag_h) $(arc_jtag_ops_h) \
	$(arc_support_h) $(arc_tdep_h) $(bfd_in2_h) \
	$(completer_h) $(defs_h) $(gdbarch_h) $(gdbcmd_h) $(objfiles_h)
	$(CC) -c $(INTERNAL_CFLAGS) -Wno-format-nonliteral $<
arc-gpio.o: arc-gpio.c \
	$(arc_gpio_h) $(arc_support_h) $(defs_h)
arc-jtag.o: arc-jtag.c \
	$(arc_architecture_h) $(arc_registers_h) $(arc_board_h) \
	$(arc_gpio_h) $(arc_jtag_actionpoints_h) $(arc_jtag_h) \
	$(arc_jtag_ops_h) $(arc_elf32_tdep_h) $(arc_support_h) $(arc_tdep_h) \
	$(arc_tm_embed_h) $(bfd_in2_h) $(breakpoint_h) $(defs_h) $(gdbarch_h) \
	$(gdbcmd_h) $(inferior_h) $(libiberty_h) $(objfiles_h) $(target_h) \
	$(gdb_assert_h)
arc-arguments.o: arc-arguments.c $(arc_arguments_h) $(arc_support_h) \
	$(arc_tdep_h) $(defs_h) $(objfiles_h) \
	$(regcache_h) $(symtab_h) $(target_h)
arc-memory.o: arc-memory.c \
	$(arc_memory_h) $(arc_tdep_h) $(arc_support_h) $(defs_h)
arc-inst-tracing.o: arc-inst-tracing.c \
	$(arc_inst_tracing_h) $(arc_tdep_h) $(arc_support_h)
arc-xiss.o: arc-xiss.c \
	$(arc_architecture_h) $(arc_elf32_tdep_h) $(arc_registers_h) \
	$(arc_support_h) $(arc_tdep_h) $(arc_tm_embed_h) $(arc_xiss_h) \
	$(arc_inst_tracing_h) $(bfd_in2_h) $(breakpoint_h) $(defs_h) \
	$(disasm_h) $(gdbarch_h) $(gdbcmd_h) $(inferior_h) $(libiberty_h) \
	$(objfiles_h) $(completer_h) $(target_h) $(gdb_assert_h)
arc-jtag-ops.o: arc-jtag-ops.c $(arc_gpio_h) $(arc_jtag_h) $(arc_jtag_ops_h) \
	$(arc_support_h) $(defs_h) $(gdb_assert_h)
arc-elf32-tdep.o:arc-elf32-tdep.c $(arc_architecture_h) $(arc_registers_h) \
	$(arch_utils_h) $(arc_remote_fileio_h) $(arc_memory_h) \
	$(arc_elf32_tdep_h) $(arc_support_h) $(arc_tdep_h) $(arc_tm_embed_h) \
	$(arc_arguments_h) $(bfd_in2_h) $(defs_h) $(gdbarch_h) $(gdbcmd_h) \
	$(gdb_events_h) $(inferior_h) $(objfiles_h) \
	$(observer_h) $(exceptions_h) $(regcache_h) $(reggroups_h) \
	$(gdbcore_h) $(breakpoint_h) $(target_h) $(gdb_assert_h)
	$(CC) -c $(INTERNAL_CFLAGS) -Wno-format-nonliteral $<
arc-linux-tdep.o: arc-linux-tdep.c $(arc_linux_tdep_h) $(arc_support_h) \
	$(arc_tdep_h) $(arc_tm_linux_h) $(block_h) $(defs_h) $(dis_asm_h) \
	$(gdbarch_h) $(inferior_h) $(opcode_arc_h) $(osabi_h) $(regcache_h) \
	$(reggroups_h) $(regset_h) $(solib_svr4_h) $(gdb_assert_h)
arc-tdep.o: arc-tdep.c $(arch_utils_h) $(arc_support_h) $(arc_tdep_h) \
	$(arc_tm_linux_h) $(arc_tm_embed_h) \
	$(block_h) $(defs_h) $(demangle_h) $(dictionary_h) $(dis_asm_h) \
	$(dwarf2_frame_h) $(frame_h) $(frame_unwind_h) $(gdbcmd_h) \
	$(gdbcore_h) $(inferior_h) $(language_h) \
	$(objfiles_h) $(observer_h) $(opcode_arc_h) $(opcodes_arc_dis_h) \
	$(opcodes_arcompact_dis_h) $(osabi_h) $(regcache_h) $(reggroups_h) \
	$(trad_frame_h) $(gdb_assert_h)
arc-jtag-actionpoints.o: arc-jtag-actionpoints.c $(arc_architecture_h) \
	$(arc_registers_h) $(arc_jtag_actionpoints_h) $(arc_jtag_h) \
	$(arc_jtag_ops_h) $(arc_support_h) $(arc_tdep_h) $(arc_elf32_tdep_h) \
	$(bfd_in2_h) $(defs_h) $(gdbarch_h) $(gdb_assert_h) $(inferior_h) \
	$(target_h) $(breakpoint_h)
arc-remote-fileio.o:  arc-remote-fileio.c \
	$(arc_remote_fileio_h) $(arc_support_h) $(arc_tm_embed_h) \
	$(block_h) $(defs_h) $(frame_h) $(target_h) \
	$(gdb_fileio_h) $(symtab_h) $(target_fileio_h) $(exceptions_h)
	$(CC) -c $(INTERNAL_CFLAGS) -Wno-format-nonliteral $<
d2648 2
a2649 2
	$(remote_h) $(gdb_fileio_h) \
	$(exceptions_h) $(remote_fileio_h) $(target_fileio_h)
a2900 3
target-fileio.o: target-fileio.c $(defs_h) $(exceptions_h) $(gdbcmd_h) \
	$(gdb_fileio_h) $(gdb_stat_h) $(gdb_string_h) $(gdb_wait_h) \
	$(target_fileio_h)
@


1.983
log
@
	* Makefile.in (ALL_TARGET_OBS): Remove dependency to xtensa-linux-nat.o.
@
text
@d1850 1
a1850 1
	$(infcall_h) $(elf_bfd_h) $(alpha_tdep_h)
@


1.982
log
@2008-02-11  Maxim Grigoriev  <maxim2405@@gmail.com>

	* NEWS (New native configurations): Xtensa GNU/Linux.
	(New targets): Xtensa GNU/Linux.
	* Makefile.in (ALL_TARGET_OBS): Add xtensa-linux-nat.o and
	xtensa-linux-tdep.o
	(ALLDEPFILES): Add xtensa-linux-tdep.c and xtensa-linux-nat.c
	(xtensa-linux-nat.o, xtensa-linux-tdep.o): New dependencies.
	* configure.tgt (xtensa*-*-linux*): New entry.
	* xtensa-config.c (xtensa_tdep): New variable.
	(xtensa_config_byte_order, xtensa_config_tdep): Removed.
	(rmap): Change format based on new macro XTREG.
	(XTENSA_CONFIG_INSTANTIATE): Use new macro defined in xtensa-tdep.h.
	* xtensa-linux-nat.c: New.
	* xtensa-linux-tdep.c: New.
	* xtensa-xtregs.c: New.
	* xtensa-tdep.h (xtensa_elf_gregset_t): Update.
	(XTENSA_ELF_NGREG, XTREG, XTREG_END, XTENSA_GDBARCH_TDEP_INSTANTIATE)
	(XCHAL_NUM_CONTEXTS, XCHAL_HAVE_EXCEPTIONS): New macros.
	(xtensa_register_t): New field coprocessor.
	(XTENSA_REGISTER_FLAGS_PRIVILEGED): Name spelling corrected.
	* xtensa-tdep.c (xtensa_config_tdep, xtensa_config_byte_order): Removed.
	(xtensa_pseudo_register_read, xtensa_pseudo_register_write):
	Update to handle privileged registers.
	(xtensa_supply_gregset) Remove exccause and excvaddr registers.
	(xtensa_push_dummy_call): Set windowstart register correctly.
	(call0_analyze_prologue): Initialize xtensa_default_isa.
	(xtensa_derive_tdep): New.
	(xtensa_gdbarch_init): Get rid of xtensa_config_byte_order and
	xtensa_config_tdep, use XCHAL_HAVE_BE and xtensa_tdep instead.
	Call xtensa_derive_tdep().
	* config/xtensa/linux.mh: New.
	* regformats/reg-xtensa.dat: New.
@
text
@d482 1
a482 1
	xtensa-config.o xtensa-tdep.o xtensa-linux-nat.o xtensa-linux-tdep.o \
@


1.981
log
@	* corelow.c (core_open): Use IS_ABSOLUTE_PATH.
	(filenames.h): New include.
	* Makefile.in (corelow.o): Add dependency for filenames.h.
@
text
@d482 1
a482 1
	xtensa-config.o xtensa-tdep.o \
d1605 2
a1606 1
	xtensa-tdep.c xtensa-config.c
d2981 6
@


1.980
log
@	* breakpoint.c: #include "hashtab.h".
	(ambiguous_names_p): New fn.
	(update_breakpoint_locations): When restoring bp enable status, don't
	compare function names if any functions have same name.
	* Makefile.in (breakpoint.o): Add hashtab.h dependency.

	* gdb.cp/mb-inline.exp: New.
	* gdb.cp/mb-inline.h: New.
	* gdb.cp/mb-inline1.cc: New.
	* gdb.cp/mb-inline2.cc: New.
@
text
@d1998 1
a1998 1
	$(exceptions_h) $(solib_h)
@


1.979
log
@        * ada-lang.c: #include "vec.h".
        (struct string_vector, new_string_vector, string_vector_append):
        Delete.
        (char_ptr): New typedef.
        (DEF_VEC_P (char_ptr)): New VEC type.
        (symbol_completion_add): Update profile to take the new VEC type
        instead of the old string_vector structure. Update code accordingly.
        (ada_make_symbol_completion_list): Use the new VEC type instead of
        the old string_vector structure, and update the code accordingly.
        * Makefile.in (ada-lang.o): Add dependency on vec.h.
@
text
@d1953 1
a1953 1
	$(mi_common_h) $(memattr_h) $(ada_lang_h) $(top_h)
@


1.978
log
@	Use vector for varobj_list_children interface.
        * gdb/varobj.c (varobj_list_children): Return vector
        of varobjs.
        * gdb/varobj.h (varobj_list_children): Adjust
        prototype.
        (varobj_p): Declare.  Declare vector thereof.
        * mi/mi-cmd-var.c (mi_cmd_var_list_children): Adjust
        for varobj_list_children change.
	* Makefile.in (varobj_h): Update dependencies.
@
text
@d1803 1
a1803 1
	$(source_h) $(observer_h)
@


1.977
log
@	* Makefile.in (symfile.o): Update.
	* NEWS: Mention exec tracing support.
	* inf-ttrace.c (inf_ttrace_wait): Return TARGET_WAITKIND_EXECD for
	exec events.
	* infcmd.c (kill_if_already_running, detach_command)
	(disconnect_command): Replace SOLIB_RESTART with no_shared_libraries.
	* infrun.c (MAY_FOLLOW_EXEC, may_follow_exec): Delete.
	(follow_exec): Do not check may_follow_exec.  Do not mourn and push
	targets.  Apply the sysroot path to the loaded executable.  Use
	no_shared_libraries.
	* linux-nat.c (linux_child_follow_fork): Print fork following
	messages if verbose.
	(kill_wait_callback): Kill again before waiting a second time.
	* symfile.c (symbol_file_clear): Replace SOLIB_RESTART with
	no_shared_libraries.

	* gdb.base/foll-exec.exp: Update header.  Skip on remote targets.
	Run on GNU/Linux.
	(do_exec_tests): Check for systems which do not support catchpoints.
	Do not match START.
	* gdb.base/foll-fork.exp: Update header.  Skip on remote targets.
	Run on GNU/Linux.  Enable verbose output.
	(check_fork_catchpoints): New.
	(explicit_fork_child_follow, catch_fork_child_follow)
	(tcatch_fork_parent_follow): Update expected messages.
	(do_fork_tests): Use check_fork_catchpoints.
	* gdb.base/foll-vfork.exp: Update header.  Skip on remote targets.
	Run on GNU/Linux.  Enable verbose output.
	(check_vfork_catchpoints): New.
	(vfork_parent_follow_to_bp, tcatch_vfork_then_child_follow): Update
	expected messages.
	(do_vfork_and_exec_tests): Use check_fork_catchpoints.
@
text
@d904 1
a904 1
varobj_h = varobj.h $(symtab_h) $(gdbtypes_h)
@


1.976
log
@        * nto-tdep.h: Remove #include "defs.h".
        * nto-tdep.c: Add #include "defs.h".
        * Makefile.in (nto_tdep_h): Update dependencies.
        (nto-tdep.o): Likewise.
@
text
@d2853 1
a2853 1
	$(parser_defs_h) $(varobj_h) $(elf_bfd_h)
@


1.975
log
@	Add NetBSD/hppa target and host support.

	* hppabsd-tdep.c (hppabsd_supply_gregset): Move to ...
	(hppabsd_gregset): Move to ...
	(hppabsd_regset_from_core_section): Rename
	hppaobsd_regset_from_core_section and move to ...
	(hppabsd_find_global_pointer): Update comment.
	(hppabsd_init_abi): Make global. Do not register
	hppabsd_regset_from_core_section.
	(hppabsd_core_osabi_sniffer): Rename hppaobsd_core_osabi_sniffer and
	move to ...
	(_initialize_hppabsd_tdep): Move to ...
	* hppaobsd-tdep.c: ... here. New file.
	* hppnbsd-tdep.c: New file.
	* hppnbsd-nat.c: New file.
        * Makefile.in (ALL_TARGET_OBS): Add hppanbsd-tdep.o and hppaobsd-tdep.o.
	(ALLDEPFILES): Add hppabsd-nat.c and hppabsd-tdep.c.
        (hppabsd-nat.o, hppabsd-tdep.o): New dependencies.
        (hppabsd-tdep.o, hppaobsd-tdep.o): Update dependencies.
	* configure.host (hppa*-*-netbsd*): New entry.
	* configure.tgt (hppa*-*-netbsd*): New entry.
	(hppa*-*-openbsd*): Update.
	* NEWS (New native configuration): Mention NetBSD/hppa.
	(New targets): Mention NetBSD/hppa.
@
text
@d842 1
a842 1
nto_tdep_h = nto-tdep.h $(defs_h) $(solist_h) $(osabi_h) $(regset_h)
d2521 2
a2522 1
nto-tdep.o: nto-tdep.c $(gdb_stat_h) $(gdb_string_h) $(nto_tdep_h) $(top_h) \
@


1.974
log
@	* exec.c: #include "arch-utils.h"
	 (print_section_info): Use gdbarch_from_bfd to get at the
	current architecture. Replace current_gdbarch. Fix indention.
	Replace deprecated_print_address_numeric by paddress.
	* Makefile.in (exec.o) Add dependency to arch-utils.h.

	* valprint.c (val_print_string): Replace
	deprecated_print_address_numeric.
	* tracepoint.c (trace_mention, scope_info): Likewise.
	* symmisc.c (dump_msymbols, dump_psymtab, dump_symtab_1, print_symbol)
	(print_symbol, print_partial_symbols, maintenance_info_psymtabs)
	(maintenance_check_symtabs): Likewise.
	* symfile.c (list_overlays_command): Likewise.
	* stack.c (frame_info, print_block_frame_labels): Likewise.
	* printcmd.c (print_address, print_address_demangle)
	(address_info): Likewise.
	* corefile.c (memory_error): Likewise.
	* infcmd.c (jump_command): Likewise.
	* breakpoint.c (insert_bp_location, describe_other_breakpoints)
	(mention, delete_breakpoint): Likewise.
	* c-valprint.c (print_function_pointer_address, c_val_print): Likewise.
	* dwarf2read.c (dump_die): Likewise.
	* ada-valprint.c (ada_val_print_1): Likewise.
	* f-valprint.c (f_val_print): Likewise.
	* linux-fork.c (info_forks_command): Likewise.
	* m32r-com.c (m32r_load_section, m32r_load)
	(m32r_upload_command): Likewise.

	* ui-out.c (ui_out_field_core_addr): Remove unnecessary comment.
@
text
@d454 2
a455 1
	hppabsd-tdep.o hppa-hpux-tdep.o hppa-linux-tdep.o hppa-tdep.o \
d1545 2
d2171 4
d2176 5
a2180 4
hppabsd-tdep.o: hppabsd-tdep.c $(defs_h) $(arch_utils_h) $(symtab_h) \
	$(objfiles_h) $(osabi_h) $(regcache_h) $(regset_h) $(target_h) \
	$(value_h) $(gdb_assert_h) $(gdb_string_h) $(elf_common_h) \
	$(hppa_tdep_h) $(solib_svr4_h) $(gdbtypes_h)
@


1.973
log
@        * ada-lang.c (ada_convert_actual): Renames convert_actual.
        Make non-static.
        (ada_convert_actuals): Delete.
        * ada-lang.h (ada_convert_actual): Add declaration.
        (ada_convert_actuals): Remove declaration.
        * infcall.c: #include "ada-lang.h".
        (value_arg_coerce): Add new parameter sp.  Update function
        documetnation.  Add handling of Ada function call parameters.
        * Makefile.in (infcall.o): Update dependencies.
@
text
@d2090 1
a2090 1
	$(xcoffsolib_h) $(observer_h)
@


1.972
log
@	* Makefile.in (dfp.o): Depend on expression.h, gdbtypes.h and value.h.
	(valarith.o): Depend on dfp.h.
	(valops.o): Likewise.
	* dfp.c: Include expression.h, gdbtypes.h, value.h and dfp.h.
	(set_decnumber_context): New function.
	(decimal_check_errors): Likewise.
	(decimal_from_number): Likewise.
	(decimal_to_number): Likewise.
	(decimal_from_string): Use set_decnumber_context and
	decimal_check_errors.
	(decimal_from_integral): New function.
	(decimal_from_floating): Likewise.
	(decimal_to_double): Likewise.
	(promote_decimal): Likewise.
	(decimal_binop): Likewise.
	(decimal_is_zero): Likewise.
	(decimal_compare): Likewise.
	(decimal_convert): Likewise.
	* dfp.h (decimal_from_integral): New prototype.
	(decimal_from_floating): Likewise.
	(decimal_to_double): Likewise.
	(decimal_binop): Likewise.
	(decimal_is_zero): Likewise.
	(decimal_compare): Likewise.
	(decimal_convert): Likewise.
	* eval.c (evaluate_subexp_standard): Remove expect_type argument from
	call to value_from_decfloat.
	* valarith.c: Include dfp.h.
	(value_args_as_decimal): New function.
	(value_binop): Add if block to handle TYPE_CODE_DECFLOAT values.
	(value_logical_not): Likewise.
	(value_equal): Likewise.
	(value_less): Likewise.
	(value_pos): Likewise.
	(value_neg): Formatting fix.
	* valops.c: Include dfp.h.
	(value_cast): Add if block to handle TYPE_CODE_DECFLOAT values.
	* value.c (unpack_long): Add case to handle TYPE_CODE_DECFLOAT.
	(unpack_double): Add if block to handle TYPE_CODE_DECFLOAT.
	(value_from_decfloat): Remove expect_type argument.
	* value.h (value_from_decfloat): Update prototype.
@
text
@d2275 1
a2275 1
	$(dummy_frame_h)
@


1.971
log
@	Updated copyright notices for most files.
@
text
@d2049 2
a2050 1
dfp.o: dfp.c $(defs_h) $(dfp_h) $(decimal128_h) $(decimal64_h) $(decimal32_h)
d2914 1
a2914 1
	$(doublest_h) $(infcall_h)
d2919 1
a2919 1
	$(cp_support_h) $(observer_h)
@


1.970
log
@* i386nbsd-tdep.c: Include "trad-frame.h" and "tramp-frame.h"
(sigtramp_retcode, i386nbsd_sigtramp_offset, i386nbsd_sigtramp_p):
Remove
(i386nbsd_mc_reg_offset): New array.
(i386nbsd_sigtramp_cache_init): New function.
(i386nbsd_sigtramp_sc16, i386nbsd_sigtramp_sc2, i386nbsd_sigtramp_si2)
(i386nbsd_sigtramp_si31, i386nbsd_sigtramp_si4): New signal trampoline
frame descriptions.
(i386nbsd_init_abi): Override ABI sigcontext defaults and register
new signal frame unwinders
* Makefile.in (i386nbsd-tdep.o): Update dependencies.
* tramp-frame.h (struct tramp_frame): Allow for 48 instructions
@
text
@d2 1
a2 1
# 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007
@


1.969
log
@        * rs6000-tdep.h: Remove defs.h #include.
        * Makefile.in (rs6000_tdep_h): Update dependencies.
@
text
@d2229 1
a2229 1
	$(nbsd_tdep_h) $(solib_svr4_h)
@


1.968
log
@        * symtab.h: Remove "defs.h" #include.
        * Makefile.in (symtab_h): Update dependencies.
@
text
@d858 1
a858 1
rs6000_tdep_h = rs6000-tdep.h $(defs_h)
@


1.967
log
@        * symtab.h: #include "defs.h".
        (enum language): Remove opaque declaration.
        * Makefile.in (symtab_h): Update dependencies.
@
text
@d888 1
a888 1
symtab_h = symtab.h $(defs_h)
@


1.966
log
@* utils.c (string_to_core_addr): If the executable format
indicates that addresses should be sign-extended and there are
only 8 hex digits in the address, then do so.
* Makefile.in (utils.o): Depend on $(gdbcore_h).
@
text
@d888 1
a888 1
symtab_h = symtab.h
@


1.965
log
@2007-12-06  Pierre Muller  <muller@@ics.u-strasbg.fr>

	* win32-nat.c: Allow compilation if CORE_ADDR is 8 byte long.
	Add "gdb_stdint.h" dependency required for uintptr_t type use.
	(handle_output_debug_string): Use uintptr_t typecast.
	(handle_exception): Ditto.
	(win32_xfer_memory): Ditto.
	* Makefile.in (win32-nat.o): Add dependency to gdb_stdint header.
@
text
@d2906 1
a2906 1
	$(gdb_curses_h) $(readline_h) $(gdb_obstack_h)
@


1.964
log
@Support lexical blocks and function bodies that occupy
non-contiguous address ranges.
* addrmap.c, addrmap.h: New files.
* block.h (struct addrmap): New forward declaration.
(struct blockvector): New member, 'map'.
(BLOCKVECTOR_MAP): New accessor macro.
* block.c: #include "addrmap.h"
(blockvector_for_pc_sect): If the blockvector we've found has
an address map, use it instead of searching the blocks.
* buildsym.c: #include "addrmap.h"
(pending_addrmap_obstack, pending_addrmap_interesting): New static
variables.
(really_free_pendings): If we have a pending addrmap, free it too.
(record_block_range): New function.
(make_blockvector): If we have an interesting pending addrmap,
record it in the new blockvector.
(start_symtab, buildsym_init): Assert that there is no pending
addrmap now; we should have cleaned up any addrmaps we'd built
previously.
(end_symtab): If there is a pending addrmap left over that didn't
get included in the blockvector, free it.
* buildsym.h (struct addrmap): New forward declaration.
(record_block_range): New prototype.
* objfiles.c: #include "addrmap.h".
(objfile_relocate): Relocate the blockvector's address map, if
present.
* dwarf2read.c (dwarf2_record_block_ranges): New function.
(read_func_scope, read_lexical_block_scope): Call it.
* Makefile.in (SFILES): Add addrmap.c.
(addrmap_h): New header dependency variable.
(COMMON_OBS): Add addrmap.o.
(addrmap.o): New rule.l
(block.o, objfiles.o, buildsym.o): Depend on $(addrmap_h).

* block.c (blockvector_for_pc, blockvector_for_pc_sect): Return a
pointer to the block, not its index in the blockvector.
(block_for_pc_sect): Use the returned block, instead of looking it
up ourselves.
* block.h (blockvector_for_pc, blockvector_for_pc_sect): Update
declarations.
* breakpoint.c (resolve_sal_pc): Use returned block, instead of
looking it up ourselves.
* stack.c (print_frame_label_vars): Disable function, which
depends on the block's index.

* buildsym.c (finish_block): Return the block we've built.
* buildsym.h (finish_block): Update prototype.

* defs.h (CORE_ADDR_MAX): New constant.
@
text
@d2949 1
a2949 1
	$(xml_support_h) $(i386_cygwin_tdep_h)
@


1.963
log
@	* remote.c (remote_cmdlist): New variable.
	(PACKET_vFile_open, PACKET_vFile_pread, PACKET_vFile_pwrite)
	(PACKET_vFile_close, PACKET_vFile_unlink): New constants.
	(remote_buffer_add_string, remote_buffer_add_bytes)
	(remote_buffer_add_int, remote_hostio_parse_result)
	(remote_hostio_send_command, remote_hostio_open, remote_hostio_pwrite)
	(remote_hostio_pread, remote_hostio_close, remote_hostio_unlink)
	(remote_fileio_errno_to_host, remote_hostio_error, fclose_cleanup)
	(remote_hostio_close_cleanup, remote_file_put, remote_file_get)
	(remote_file_delete, remote_put_command, remote_get_command)
	(remote_delete_command, remote_command): New functions.
	(_initialize_remote): Register new packets and commands.
	* Makefile.in (gdb_fileio_h): New variable.
	(remote.o): Update.
	(SUBDIR_MI_OBS): Add mi-cmd-target.o.
	(SUBDIR_MI_SRCS): Add mi/mi-cmd-target.c.
	(mi-cmd-target.o): New rule.
	* mi/mi-cmd-target.c: New file.
	* mi/mi-cmds.c (mi_cmds): Add target-file-delete, target-file-get,
	and target-file-put.
	* mi/mi-cmds.h (mi_cmd_target_file_get, mi_cmd_target_file_put)
	(mi_cmd_target_file_delete): Declare.
	* remote.h (remote_file_put, remote_file_get, remote_file_delete):
	Declare.
	* NEWS: Describe new file transfer support.

	* gdb.texinfo (Debugging Programs with Multiple Processes): Correct
	formatting.
	(Remote Debugging): Add File Transfer section.
	(Remote Configuration): Document Host I/O packets.
	(GDB/MI): Add GDB/MI File Transfer Commands section.
	(Remote Protocol): Add Host I/O Packets section.
	(Packets): Add vFile.

	* Makefile.in (OBS): Add hostio.o.
	(hostio.o): New rule.
	* server.h (handle_vFile): Declare.
	* hostio.c: New file.
	* server.c (handle_v_requests): Take packet_len and new_packet_len
	for binary packets.  Call handle_vFile.
	(main): Update call to handle_v_requests.

	* gdb.server/file-transfer.exp, gdb.server/transfer.txt,
	gdb.mi/mi-file-transfer.exp: New.
@
text
@d589 1
d721 1
d1027 1
d1809 2
d1938 1
a1938 1
	$(gdb_obstack_h) $(cp_support_h)
d1962 2
a1963 1
	$(cp_support_h) $(dictionary_h) $(buildsym_h) $(stabsread_h)
d2529 1
a2529 1
	$(parser_defs_h) $(expression_h)
@


1.962
log
@	* Makefile.in (ALL_TARGET_OBS): Remove object files that require
	64-bit CORE_ADDR and BFD support, move them to ...
	(ALL_64_TARGET_OBS): ... this new variable.
	* configure.ac: Check for --enable-64-bit-bfd option.  Only add
	64-bit targets with --enable-targets=all if BFD supports 64-bit.
	* configure: Regenerate.

	* i386-cygwin-tdep.c (i386_cygwin_osabi_sniffer): Do not claim
	all elf32-i386 executables, only cygwin core files.
@
text
@d187 1
a187 1
	mi-cmd-file.o mi-cmd-disas.o mi-symbol-cmds.o \
d195 1
a195 1
	mi/mi-interp.c \
d678 1
d2606 2
a2607 1
	$(cli_decode_h) $(cli_setshow_h) $(memory_map_h) $(target_descriptions_h)
d3191 3
@


1.961
log
@	* configure.ac (--enable-targets): New configure option.
	Collect gdb_target_obs of multiple targets into TARGET_OBS.
	Call configure.tgt multiple times, using $targ as operand.
	* configure.tgt: Operate on $targ instead of $target.
	* configure: Regenerate.
	* Makefile.in (ALL_TARGET_OBS): Define.

	* NEWS: Mention --enable-targets option.
@
text
@d434 3
a436 2
# All target-dependent objects files (used with --enable-targets=all).
ALL_TARGET_OBS = \
d441 7
a457 1
	ia64-linux-tdep.o ia64-tdep.o \
d465 1
a465 1
	mips64obsd-tdep.o mips-irix-tdep.o mips-linux-tdep.o \
a474 2
	sparc64fbsd-tdep.o sparc64-linux-tdep.o sparc64nbsd-tdep.o \
	sparc64obsd-tdep.o sparc64-sol2-tdep.o sparc64-tdep.o \
@


1.960
log
@	* amd64fsdb-tdep.c (amd64fbsd_sigtramp_start_addr): Use ULL suffix.
	(amd64fbsd_sigtramp_end_addr): Likewise.

	* iq2000-tdep.c (iq2000_pointer_to_address): Fix argument type.
	(iq2000_address_to_pointer): Likewise.
	(iq2000_frame_prev_register): Likewise.
	(iq2000_extract_return_value): Use regcache_cooked_read_unsigned
	instead of regcache_cooked_read into CORE_ADDR variable.
	(iq2000_return_value): Fix argument types.

	* m32r-rom.c (m32r_load_section): Fix printf argument type.
	(m32r_load): Likewise.

	* m68kbsd-tdep.c: Include "gdbtypes.h".
	* Makefile.in: Update dependencies.

	* mn10300-tdep.c (mn10300_frame_unwind_cache): Fix aliasing violation.

	* nto-tdep.c (LM_ADDR): Do not refer to no-longer-existing
	lmo->l_addr_size element.

	* remote-m32r-sdi.c (m32r_xfer_memory): Use paddr to print address.
	(m32r_insert_breakpoint): Likewise.
	(m32r_remove_breakpoint): Likewise.
	(m32r_insert_watchpoint): Likewise.
	(m32r_remove_watchpoint): Likewise.
	(m32r_load): Fix printf argument type.

	* xtensa-tdep.c (xtensa_regset_from_core_section): Fix printf
	argument type.
	(xtensa_frame_this_id): Do not cast pointers to "int" for output.
	(xtensa_frame_prev_register): Likewise.
	(xtensa_push_dummy_call): Likewise.
@
text
@d434 56
@


1.959
log
@	* config/alpha/alpha-linux.mt: Remove file.
	* config/alpha/alpha.mt: Remove file.
	* config/alpha/alpha-osf1.mt: Remove file.
	* config/alpha/fbsd.mt: Remove file.
	* config/alpha/nbsd.mt: Remove file.
	* config/alpha/obsd.mt: Remove file.
	* config/arm/embed.mt: Remove file.
	* config/arm/linux.mt: Remove file.
	* config/arm/nbsd.mt: Remove file.
	* config/arm/obsd.mt: Remove file.
	* config/arm/wince.mt: Remove file.
	* config/avr/avr.mt: Remove file.
	* config/cris/cris.mt: Remove file.
	* config/frv/frv.mt: Remove file.
	* config/h8300/h8300.mt: Remove file.
	* config/i386/cygwin.mt: Remove file.
	* config/i386/fbsd64.mt: Remove file.
	* config/i386/fbsd.mt: Remove file.
	* config/i386/i386gnu.mt: Remove file.
	* config/i386/i386.mt: Remove file.
	* config/i386/i386sol2.mt: Remove file.
	* config/i386/linux64.mt: Remove file.
	* config/i386/linux.mt: Remove file.
	* config/i386/mingw.mt: Remove file.
	* config/i386/nbsd64.mt: Remove file.
	* config/i386/nbsd.mt: Remove file.
	* config/i386/nto.mt: Remove file.
	* config/i386/obsd64.mt: Remove file.
	* config/i386/obsd.mt: Remove file.
	* config/i386/sol2-64.mt: Remove file.
	* config/ia64/ia64.mt: Remove file.
	* config/ia64/linux.mt: Remove file.
	* config/iq2000/iq2000.mt: Remove file.
	* config/m32c/m32c.mt: Remove file.
	* config/m32r/linux.mt: Remove file.
	* config/m32r/m32r.mt: Remove file.
	* config/m68hc11/m68hc11.mt: Remove file.
	* config/m68k/linux.mt: Remove file.
	* config/m68k/monitor.mt: Remove file.
	* config/m68k/nbsd.mt: Remove file.
	* config/m68k/obsd.mt: Remove file.
	* config/m88k/obsd.mt: Remove file.
	* config/mep/mep.mt: Remove file.
	* config/mips/embed.mt: Remove file.
	* config/mips/irix5.mt: Remove file.
	* config/mips/irix6.mt: Remove file.
	* config/mips/linux.mt: Remove file.
	* config/mips/nbsd.mt: Remove file.
	* config/mips/obsd64.mt: Remove file.
	* config/mn10300/linux.mt: Remove file.
	* config/mn10300/mn10300.mt: Remove file.
	* config/mt/mt.mt: Remove file.
	* config/pa/hppahpux.mt: Remove file.
	* config/pa/hppa.mt: Remove file.
	* config/pa/linux.mt: Remove file.
	* config/pa/obsd.mt: Remove file.
	* config/powerpc/aix.mt: Remove file.
	* config/powerpc/linux.mt: Remove file.
	* config/powerpc/nbsd.mt: Remove file.
	* config/powerpc/obsd.mt: Remove file.
	* config/powerpc/ppc-eabi.mt: Remove file.
	* config/s390/s390.mt: Remove file.
	* config/score/embed.mt: Remove file.
	* config/sh/embed.mt: Remove file.
	* config/sh/linux.mt: Remove file.
	* config/sh/nbsd.mt: Remove file.
	* config/sh/obsd.mt: Remove file.
	* config/sh/sh64.mt: Remove file.
	* config/sparc/embed.mt: Remove file.
	* config/sparc/fbsd.mt: Remove file.
	* config/sparc/linux64.mt: Remove file.
	* config/sparc/linux.mt: Remove file.
	* config/sparc/nbsd64.mt: Remove file.
	* config/sparc/nbsd.mt: Remove file.
	* config/sparc/obsd64.mt: Remove file.
	* config/sparc/obsd.mt: Remove file.
	* config/sparc/sol2-64.mt: Remove file.
	* config/sparc/sol2.mt: Remove file.
	* config/sparc/sparc64.mt: Remove file.
	* config/sparc/sparc.mt: Remove file.
	* config/spu/spu.mt: Remove file.
	* config/v850/v850.mt: Remove file.
	* config/vax/nbsd.mt: Remove file.
	* config/vax/obsd.mt: Remove file.
	* config/vax/vax.mt: Remove file.
	* config/xstormy16/xstormy16.mt: Remove file.
	* config/xtensa/xtensa.mt: Remove file.

	* configure.tgt (gdb_target_cpu): Remove.  Do not set anywhere.
	(gdb_target): Likewise.
	(gdb_target_obs): Document.  Set for every target to contents
	of TDEPFILES in former .mt makefile fragment.

	* configure.ac (TARGET_OBS): Define.
	(target_makefile_frag, gdb_target_cpu): Do not define.
	* configure: Regenerate.

	* Makefile.in (MT_FLAGS): Remove.
	(GLOBAL_CFLAGS): Update.
	(TARGET_OBS): Substitute from configure.
	(DEPFILES): Remove TDEPFILES, add TARGET_OBS.
	(@@target_makefile_frag@@): Remove.

doc/ChangeLog:

	* Makefile.in (Makefile): Do not depend on target_makefile_frag.

testsuite/ChangeLog:

	* Makefile.in (Makefile): Do not depend on target_makefile_frag.
	(target_cpu): Remove.
@
text
@d2325 2
a2326 2
	$(tramp_frame_h) $(gdb_assert_h) $(gdb_string_h) $(m68k_tdep_h) \
	$(solib_svr4_h)
@


1.958
log
@	* config/arm/embed.mt (SIM_OBS, SIM): Remove.
	* config/avr/avr.mt (SIM_OBS, SIM): Remove.
	* config/frv/frv.mt (SIM_OBS, SIM): Remove.
	* config/h8300/h8300.mt (SIM_OBS, SIM): Remove.
	* config/iq2000/iq2000.mt (SIM_OBS, SIM): Remove.
	* config/m32c/m32c.mt (SIM_OBS, SIM): Remove.
	* config/m32r/linux.mt (SIM_OBS, SIM): Remove.
	* config/m32r/m32r.mt (SIM_OBS, SIM): Remove.
	* config/m68hc11/m68hc11.mt (SIM_OBS, SIM): Remove.
	* config/mips/embed.mt (SIM_OBS, SIM): Remove.
	* config/mips/linux.mt (SIM_OBS, SIM): Remove.
	* config/mips/nbsd.mt (SIM_OBS, SIM): Remove.
	* config/mn10300/mn10300.mt (SIM_OBS, SIM): Remove.
	* config/powerpc/linux.mt (SIM_OBS, SIM): Remove.
	* config/powerpc/nbsd.mt (SIM_OBS, SIM): Remove.
	* config/powerpc/ppc-sim.mt: Remove file.
	* config/sh/embed.mt (SIM_OBS, SIM): Remove.
	* config/sh/linux.mt (SIM_OBS, SIM): Remove.
	* config/sh/nbsd.mt (SIM_OBS, SIM): Remove.
	* config/sh/sh64.mt (SIM_OBS, SIM): Remove.
	* config/sparc/embed.mt (SIM_OBS, SIM): Remove.
	* config/v850/v850.mt (SIM_OBS, SIM): Remove.
	* config/xstormy16/xstormy16.mt (SIM_OBS, SIM): Remove.

	* configure.tgt (gdb_sim): Document variable.
	(arm*-*-* | thumb*-*-* | strongarm*-*-* | xscale-*-*): Set it.
	(avr-*-*): Likewise.
	(frv-*-*): Likewise.
	(h8300-*-*): Likewise.
	(iq2000-*-*): Likewise.
	(m32c-*-*): Likewise.
	(m32r*-*-linux*): Likewise.
	(m32r*-*-*): Likewise.
	(m68hc11*-*-*|m6811*-*-*): Likewise.
	(mips*-*-*): Likewise.
	(mips*-*-linux*): Likewise.
	(mips*-*-netbsd* | mips*-*-knetbsd*-gnu): Likewise.
	(mn10300-*-*): Likewise.
	(powerpc-*-linux* | powerpc64-*-linux*): Likewise.
	(powerpc-*-netbsd* | powerpc-*-knetbsd*-gnu): Likewise.
	(powerpc*-*-*): Use ppc-eabi target.  Conditionally set gdb_sim.
	(sh*): Set gdb_sim.
	(sh-*-linux*): Likewise.
	(sh*-*-netbsdelf* | sh*-*-knetbsd*-gnu): Likewise.
	(sh64-*-elf*): Likewise.
	(sparc-*-rtems*): Likewise.
	(v850*-*-elf): Likewise.
	(xstormy16-*-*): Likewise.

	* configure.ac (IGNORE_SIM, IGNORE_SIM_OBS): Do not set.
	(SIM, SIM_OBS): Set depending on ${ignore_sim} and ${gdb_sim}.
	* configure: Regenerate.
	* Makefile.in (SIM, SIM_OBS): Substitute from configure.
	(@@IGNORE_SIM@@, @@IGNORE_SIM_OBS@@): Remove.
@
text
@d345 2
a346 3
# M{H,T}_CFLAGS, if defined, have host- and target-dependent CFLAGS
# from the config directory.
GLOBAL_CFLAGS = $(MT_CFLAGS) $(MH_CFLAGS)
d431 4
a434 1
# Host and target-dependent makefile fragments come in here.
d436 1
a436 2
@@target_makefile_frag@@
# End of host and target-dependent makefile fragments
d950 1
a950 1
DEPFILES = $(TDEPFILES) $(SER_HARDWIRE) $(NATDEPFILES) \
@


1.957
log
@	* configure.ac (hostfile, targetfile): Remove.
	(GDB_XM_FILE, GDB_TM_FILE): Do not define.
	(xm_h, tm_h): Likewise.
	(DEPRECATED_TM_FILE, XM_FILE): Do not substitute into Makefile.
	* configure, config.in: Regenerate.

	* Makefile.in (xm_h, tm_h): Remove.  Update dependencies.
	(TAGS): Do not consider DEPRECATED_TM_FILE or XM_FILE.
	(clean, local-maintainer-clean): Do not remove xm.h or tm.h.
	* defs.h: Do not include "xm.h" or "tm.h".

	* gdbarch.sh (verify_gdbarch): Do not dump GDB_XM_FILE or GDB_TM_FILE.
	* gdbarch.c: Regenerate.

	* config/score/embed.mt: Remove obsolete comment.
@
text
@d265 1
a265 1
SIM =
d430 1
a430 1
SIM_OBS =
a436 7
# Possibly ignore the simulator.  If the simulator is being ignored,
# these expand into SIM= and SIM_OBJ=, overriding the entries from
# target_makefile_frag
#
@@IGNORE_SIM@@
@@IGNORE_SIM_OBS@@

@


1.956
log
@	Prevent clear_command from directly modifying breakpoint list.
	* Makefile.in (breakpoint_h): Update dependency.
	* breakpoint.c (clear_command): Do not remove
	breakpoints from breakpoint_chain.  Collect breakpoints
	to delete in a vector.
	* breakpoint.h (breakpoint_p): New typedef for pointer to
	breakpoint.  Register vector of breakpoint_p.
@
text
@a655 2
xm_h =		@@xm_h@@
tm_h =		@@tm_h@@
d695 1
a695 1
	$(libiberty_h) $(bfd_h) $(ui_file_h) $(xm_h) $(nm_h) $(tm_h) \
d1300 1
a1300 3
	@@etags $(srcdir)/$(DEPRECATED_TM_FILE) \
	  $(srcdir)/$(XM_FILE) \
	  $(srcdir)/$(NAT_FILE) \
d1334 1
a1334 1
	rm -f nm.h tm.h xm.h config.status config.h stamp-h .gdbinit
d1354 1
a1354 1
	rm -f nm.h tm.h xm.h config.status
@


1.955
log
@	* ppc-sysv-tdep.c (ppc_sysv_abi_push_dummy_call): Check the selected
	soft float and vector ABIs.  Support the generic vector ABI for
	AltiVec types.
	(do_ppc_sysv_return_value): Likewise.  Correct argument types and
	casts.
	(ppc64_sysv_abi_push_dummy_call): Assert that floating point is
	supported.
	* ppc-tdep.h (enum powerpc_vector_abi): New.
	(struct gdbarch_tdep): Add soft_float and vector_abi.
	* rs6000-tdep.c (setpowerpccmdlist, showpowerpccmdlist)
	(powerpc_soft_float_global, powerpc_vector_strings)
	(powerpc_vector_abi_global, powerpc_vector_abi_string): New.
	(rs6000_gdbarch_init): Check for soft-float and vector ABI markings.
	(set_powerpc_command, show_powerpc_command, powerpc_set_soft_float)
	(powerpc_set_vector_abi): New.
	(_initialize_rs6000_tdep): Register "set powerpc" and "show powerpc"
	commands.
	* Makefile.in (elf_ppc_h): New.
	(rs6000-tdep.o): Update.

	* gdb.texinfo (PowerPC): Document "set powerpc vector-abi" and "set
	powerpc soft-float".

	* gdb.arch/altivec-abi.exp: Run multiple times for GCC on GNU/Linux.
	Test "set powerpc vector-abi".  Skip auto-detection tests for old
	toolchains.
@
text
@d681 1
a681 1
breakpoint_h = breakpoint.h $(frame_h) $(value_h) $(gdb_events_h)
@


1.954
log
@2007-10-25  Wu Zhou  <woodzltc@@cn.ibm.com>
	    Thiago Jung Bauermann  <bauerman@@br.ibm.com>

	* Makefile.in (LIBDECNUMBER_DIR, LIBDECNUMBER, LIBDECNUMBER_SRC
	LIBDECNUMBER_CFLAGS): New macros for libdecnumber.
	(INTERNAL_CFLAGS_BASE): Add LIBDECNUMBER_CFLAGS in.
	(INSTALLED_LIBS): Add -ldecnumber in.
	(CLIBS): Add LIBDECNUMBER in.
	(decimal128_h, decimal64_h, decimal32_h): New macros for decimal
	headers.
	(dfp_h): New macros for decimal floating point.
	(dfp.o): New target.
	(COMMON_OBS): Add dfp.o in.
	(c-exp.o): Add dfp_h as dependency.
	(valprint.o): Add dfp_h as dependency.
	(value.o): Add dfp_h as dependency.
	* dfp.h: New header file for decimal floating point support in
	GDB.
	* dfp.c: New source file for decimal floating point support in
	GDB.  Implement decimal_from_string and decimal_to_string based
	on libdecnumber API.
	* configure.ac: Add AC_C_BIGENDIAN test.
	* config.in, configure: Regenerate.
@
text
@d607 1
d2582 1
a2582 1
	$(target_descriptions) $(user_regs_h) \
@


1.953
log
@PR exp/1926
* infcmd.c (registers_info): Check for a user register before
calling target's gdbarch_print_registers_info().  If found to be
so, extract the implicit value of user register and call
print_scalar_formatted().
* Makefile.in: (infcmd.o): Add $(user_regs_h).
@
text
@d128 6
d367 1
a367 1
	$(BFD_CFLAGS) $(INCLUDE_CFLAGS) \
d390 1
a390 1
INSTALLED_LIBS=-lbfd -lreadline -lopcodes -liberty \
d393 1
a393 1
CLIBS = $(SIM) $(READLINE) $(OPCODES) $(BFD) $(INTL) $(LIBIBERTY) \
d632 4
d702 1
d973 1
a973 1
	charset.o disasm.o dummy-frame.o \
d1907 1
a1907 1
	$(objfiles_h) $(charset_h) $(block_h) $(cp_support_h)
d1990 1
d2862 1
a2862 1
	$(exceptions_h)
d2866 1
a2866 1
	$(gdb_assert_h) $(regcache_h) $(block_h)
@


1.952
log
@	* solib-svr4.c (legacy_svr4_fetch_link_map_offsets_hook): Remove.
	(solib_svr4_init): Initialize fetch_link_map_offsets to NULL.
	* solib-svr4.h (legacy_svr4_fetch_link_map_offsets_hook): Remove.
	* solib-legacy.c: Remove file.

	* config/alpha/alpha-linux.mt (TDEPFILES): Remove solib-legacy.o.
	* config/arm/linux.mt (TDEPFILES): Likewise.
	* config/i386/i386gnu.mh (NATDEPFILES): Likewise.
	* config/ia64/linux.mt (TDEPFILES): Likewise.
	* config/m32r/linux.mt (TDEPFILES): Likewise.
	* config/powerpc/linux.mt (TDEPFILES): Likewise.
	* config/s390/s390.mt (TDEPFILES): Likewise.

	* alpha-linux-tdep.c (alpha_linux_init_abi): Call
	set_solib_svr4_fetch_link_map_offsets.
	* i386gnu-tdep.c (i386gnu_init_abi): Likewise.
	* ia64-linux-tdep.c (ia64_linux_init_abi): Likewise.

	* i386gnu-tdep.c: Include "solib-svr4.h".
	* Makefile.in: Update dependencies.
@
text
@d2211 2
a2212 1
	$(solib_h) $(gdb_assert_h) $(observer_h) $(target_descriptions_h)
@


1.951
log
@	* i386-nto-tdep.c: Include "solib.h".
	(i386nto_init_abi): Use set_solib_ops instead of overwriting
	current_target_so_ops members.
	* solist.h (TARGET_SO_RELOCATE_SECTION_ADDRESSES): Remove.
	(TARGET_SO_FIND_AND_OPEN_SOLIB): Remove.
	(TARGET_SO_IN_DYNSYM_RESOLVE_CODE): Remove.
	* Makefile.in: Update dependencies.
@
text
@d2141 2
a2142 1
i386gnu-tdep.o: i386gnu-tdep.c $(defs_h) $(osabi_h) $(i386_tdep_h)
a2640 1
solib-legacy.o: solib-legacy.c $(defs_h) $(gdbcore_h) $(solib_svr4_h)
@


1.950
log
@	* arm-wince-tdep.c: Include "solib.h" and "solib-target.h".
	(arm_wince_init_abi): Call set_solib_ops.
	* i386-cygwin-tdep.c: Include "solib.h" and "solib-target.h".
	(i386_cygwin_init_abi): Call set_solib_ops.
	* solib-target.c: Include "solib-target.h".
	(solib_target_so_ops): Make global.
	(_initialize_solib_target): Do not set current_target_so_ops.
	* solib-target.h: New file.
	* Makefile.in: Update dependencies.
@
text
@d2160 2
a2161 1
	$(i386_tdep_h) $(i387_tdep_h) $(nto_tdep_h) $(solib_svr4_h)
@


1.949
log
@	* mips-irix-tdep.c: Include "gdb_string.h", "solib.h", "solib-irix.h".
	(mips_irix_init_abi): Call set_solib_ops.
	* solib-irix.c: Include "solib.h" and "solib-irix.h".
	(irix_so_ops): Make global.
	(_initialize_irix_solib): Do not set current_target_so_ops.
	* solib-irix.h: New file.
	* Makefile.in: Update dependencies.
@
text
@d809 1
d1850 2
a1851 1
	$(gdbcore_h) $(target_h) $(gdb_string_h) $(arm_tdep_h)
d2131 1
a2131 1
	$(gdbcore_h) $(i386_cygwin_tdep_h)
d2659 1
a2659 1
	$(gdb_string_h)
@


1.948
log
@	* configure.tgt: Remove hppa*64*-*-hpux11* special case.
	* config/pa/hppa64.mt: Delete file.
	* config/pa/hppahpux.mt (MT_CFLAGS): Remove.
	(TDEPFILES): Move somread.o to ...
	* config/pa/hpux.mh (NATDEPFILES): ... here.

	* configure.ac: Add check for elf_hp.h header.
	Search libdl and libxpdl for dlgetmodinfo.
	* config.in, configure: Regenerate.
	* solib-pa64.c: Conditionalize compilation on #ifdef HAVE_ELF_HP_H
	instead of #ifndef PA_SOM_ONLY.  Include "solib.h".
	(pa64_solib_select): Take gdbarch instead of tdep argument.  Call
	set_solib_ops instead of modifying current_target_so_ops.
	* solib-pa64.h (pa64_solib_select): Update prototype.
	* solib-som.c: Remove include of "som.h".  Include "solib.h".
	(som_solib_select): Take gdbarch instead of tdep argument.  Call
	set_solib_ops instead of modifying current_target_so_ops.
	* solib-som.h (som_solib_select): Update prototype.
	* hppa-hpux-tdep.c (hppa_hpux_som_init_abi): Pass gdbarch instead
	of tdep to som_solib_select call.
	(hppa_hpux_elf_init_abi): Pass gdbarch instead of tdep to
	pa64_solib_select call.
	* Makefile.in: Update dependencies.
@
text
@d805 1
d2381 2
a2382 1
mips-irix-tdep.o: mips-irix-tdep.c $(defs_h) $(osabi_h) $(elf_bfd_h)
d2635 2
a2636 1
	$(objfiles_h) $(gdbcore_h) $(target_h) $(inferior_h) $(solist_h)
@


1.947
log
@	* frv-tdep.c: Include "solib.h".
	(frv_gdbarch_init): Call set_solib_ops.
	* frv-tdep.h (struct target_so_ops): Add forward reference.
	(frv_so_ops): Add extern declaration.
	* solib-frv.c (frv_so_ops): Make global.
	(_initialize_frv_solib): Do not set current_target_so_ops.
	* Makefile.in: Update dependencies.
@
text
@d2640 4
a2643 4
	$(solist_h) $(solib_pa64_h)
solib-som.o: solib-som.c $(defs_h) $(som_h) $(symtab_h) $(bfd_h) \
	$(symfile_h) $(objfiles_h) $(gdbcore_h) $(target_h) $(inferior_h) \
	$(hppa_tdep_h) $(solist_h)
@


1.946
log
@	* cp-support.c: Include "safe-ctype.h".
	(cp_already_canonical): New function.
	(cp_canonicalize_string): Use it.  Return NULL for already canonical
	strings.
	(mangled_name_to_comp): Update call to cp_demangled_name_to_comp.
	(cp_func_name, remove_params): Likewise.
	(cp_find_first_component_aux): Use ISSPACE.
	* cp-support.h (cp_demangled_name_to_comp): Correct comment.  Remove
	MEMORY_P argument.
	* cp-name-parser.y (ALLOC_CHUNK): Define.
	(struct demangle_info): Add PREV and NEXT.  Increase the size of
	COMPS.
	(d_grab): Convert to a function.
	(allocate_info): Rewrite.
	(cp_demangled_name_to_comp): Remove MEMORY argument.  Do not use
	strlen.  Update call to allocate_info.  Do not free it on failure.
	(main): Update calls to cp_demangled_name_to_comp.
	* Makefile.in (cp-support.o): Update.
@
text
@d2052 2
a2053 1
	$(elf_bfd_h) $(elf_frv_h) $(osabi_h) $(infcall_h) $(frv_tdep_h)
@


1.945
log
@	* NEWS: Document target described register support for PowerPC.
	* ppc-tdep.h: Remove ppc_spr constants.
	(struct gdbarch_tdep): Remove regs, ppc_sr0_regnum, and
	ppc_builtin_type_vec128 members.
	(PPC_R0_REGNUM, PPC_F0_REGNUM, PPC_PC_REGNUM, PPC_MSR_REGNUM)
	(PPC_CR_REGNUM, PPC_LR_REGNUM, PPC_CTR_REGNUM, PPC_XER_REGNUM)
	(PPC_FPSCR_REGNUM, PPC_MQ_REGNUM, PPC_SPE_UPPER_GP0_REGNUM)
	(PPC_SPE_ACC_REGNUM, PPC_SPE_FSCR_REGNUM, PPC_VR0_REGNUM)
	(PPC_VSCR_REGNUM, PPC_VRSAVE_REGNUM, PPC_NUM_REGS): New constants.
	* rs6000-tdep.c: Include preparsed descriptions.
	(init_sim_regno_table): Do not iterate over pseudo registers.
	Look up segment registers by name.  Use sim_spr_register_name
	for SPRs.
	(rs6000_register_sim_regno): Call init_sim_regno_table here.
	(rs6000_builtin_type_vec128): Delete.
	(rs6000_register_name): Only handle SPE pseudo registers and upper
	halves.  Call tdesc_register_name for everything else.
	(rs6000_register_type): Delete.  Replace with...
	(rs6000_pseudo_register_type): ...this new function.  Only handle
	SPE pseudo registers.
	(rs6000_register_reggroup_p): Delete.  Replace with...
	(rs6000_pseudo_register_reggroup_p): ...this new function.  Only
	handle SPE pseudo registers.
	(rs6000_convert_register_p): Use ppc_fp0_regnum instead of
	"struct reg".
	(rs6000_register_to_value, rs6000_value_to_register): Remove check
	of reg->fpr.
	(e500_register_reggroup_p): Delete.
	(STR, R, R4, R8, R16, F, P8, R32, R64, R0, A4, S, S4, SN4, S64)
	(COMMON_UISA_REGS, PPC_UISA_SPRS, PPC_UISA_NOFP_SPRS)
	(PPC_SEGMENT_REGS, PPC_OEA_SPRS, PPC_ALTIVEC_REGS, PPC_SPE_GP_REGS)
	(PPC_SPE_UPPER_GP_REGS, PPC_EV_PSEUDO_REGS): Delete macros.
	(registers_powerpc, registers_403, registers_403GC, registers_505)
	(registers_860, registers_601, registers_602, registers_603)
	(registers_604, registers_750, registers_7400, registers_e500): Delete
	variables.
	(struct variant): Delete nregs, npregs, num_tot_regs, and regs.  Add
	tdesc.
	(tot_num_registers, num_registers, num_pseudo_registers): Delete.
	(variants): Delete outdated comment.  Use standard target descriptions
	instead of "struct reg" arrays.
	(init_variants): Delete.
	(rs6000_gdbarch_init): Do not guess word size from the BFD
	architecture if we have a target description.  Select a variant
	before creating a new architecture.  Use the variant's target
	description if the target did not define a register layout.
	Validate target-supplied registers.  Reject mismatches.  Use
	fixed register numbers and new constants instead of magic
	numbers.  Call set_gdbarch_ps_regnum.  Call tdesc_use_registers.
	(_initialize_rs6000_tdep): Initialize the preparsed target
	descriptions.
	* target-descriptions.c (tdesc_predefined_types): Add int128 and
	uint128.
	(tdesc_find_register_early): New function.
	(tdesc_numbered_register): Use it.
	(tdesc_register_size): New function.
	(tdesc_use_registers): Take a target_desc argument.  Do not use
	gdbarch_target_desc.
	* target-descriptions.h (tdesc_use_registers): Update prototype
	and comment.
	(tdesc_register_size): New prototype.
	* Makefile.in (powerpc_32_c, powerpc_403_c, powerpc_403gc_c)
	(powerpc_505_c, powerpc_601_c, powerpc_602_c, powerpc_603_c)
	(powerpc_604_c, powerpc_64_c, powerpc_7400_c, powerpc_750_c)
	(powerpc_860_c, powerpc_e500_c, rs6000_c): New macros.
	(rs6000-tdep.o): Update.
	* arm-tdep.c (arm_gdbarch_init): Update call to tdesc_use_registers.
	* m68k-tdep.c (m68k_gdbarch_init): Likewise.
	* mips-tdep.c (mips_gdbarch_init): Likewise.

	* gdb.texinfo (Predefined Target Types): Add int128
	and uint128.
	(Standard Target Features): Add PowerPC features.

	* gdb.xml/tdesc-regs.exp: Add PowerPC support.

	* sim-ppc.h (sim_spr_register_name): New prototype.

	* gdb-sim.c (regnum2spr): Rename to...
	(sim_spr_register_name): ... this.  Make global.
@
text
@d1934 1
a1934 1
	$(gdbtypes_h)
@


1.944
log
@	* target-descriptions.c (tdesc_predefined_types): New.
	(tdesc_named_type): Use it.
	(tdesc_type_id, maint_print_c_tdesc_cmd): New functions.
	(_intialize_target_descriptions): Register "maint print c-tdesc".
	* features/Makefile (XMLTOC, CFILES, GDB): New macros.
	(cfiles, %.c): New rules.
	* features/arm-with-iwmmxt.c, features/mips-linux.c,
	features/mips64-linux.c: New generated files.

	* arm-linux-nat.c: Include preparsed description instead of
	"xml-support.h".
	(super_xfer_partial, arm_linux_xfer_partial): Remove.
	(arm_linux_read_description): New function.
	(_initialize_arm_linux_nat): Set to_read_description instead of
	to_xfer_partial.  Initialize preparsed description.
	* config/arm/linux.mh (TDEP_XML): Delete.
	* mips-linux-nat.c: Include preparsed descriptions instead of
	"xml-support.h".
	(super_xfer_partial, mips_linux_xfer_partial): Remove.
	(mips_linux_read_description): New function.
	(_initialize_mips_linux_nat): Set to_read_description instead of
	to_xfer_partial.  Initialize preparsed description.
	* config/mips/linux.mh (TDEP_XML): Delete.
	* Makefile.in (XMLFILES): Remove $(TDEP_XML).
	(features_headers, arm_with_iwmmxt_c, mips_linux_c)
	(mips64_linux_c): New macros.
	(arm-linux-nat.o, mips-linux-nat.o): Update.

	* gdb.texinfo (Maintenance Commands): Document "maint print c-tdesc".
@
text
@d891 14
d2560 6
a2565 1
	$(frame_unwind_h) $(frame_base_h) $(rs6000_tdep_h) $(dwarf2_frame_h)
@


1.943
log
@	* alpha-mdebug-tdep.c: Include "gdb_string.h".
	(find_proc_desc): Add fix-up code for setjmp procedure descriptor.
	* mdebugread.c (parse_procedure): Remove setjmp fix-up code.
	* Makefile.in (alpha-mdebug-tdep.o): Update dependencies.

	* config/alpha/alpha.mt (DEPRECATED_TM_FILE): Remove.
	* config/alpha/alpha-linux.mt (DEPRECATED_TM_FILE): Remove.
	* config/alpha/alpha-osf1.mt (DEPRECATED_TM_FILE): Remove.
	* config/alpha/fbsd.mt (DEPRECATED_TM_FILE): Remove.
	* config/alpha/tm-alpha.h: Remove file.
@
text
@d409 1
a409 2
	$(srcdir)/features/library-list.dtd \
	$(TDEP_XML)
d886 6
d1810 1
a1810 1
	$(target_descriptions_h) $(xml_support_h)
d2369 1
a2369 1
	$(xml_support_h)
@


1.942
log
@2007-10-09  Pierre Muller  <muller@@ics.u-strasbg.fr>

        * p-lang.h (pascal_main_name): Add declaration.
        * p-lang.c (GPC_P_INITIALIZE, GPC_MAIN_PROGRAM_NAME_1)
        (GPC_MAIN_PROGRAM_NAME_2): New constants.
        (pascal_main_name): New function.
        * symtab.c: Include p-lang.h.
        (find_main_name): Add call to pascal_main_name.
        * Makefile.in (symtab.o): Add dependency on p-lang.h.
@
text
@d1738 2
a1739 1
	$(block_h) $(gdb_assert_h) $(alpha_tdep_h) $(mdebugread_h)
@


1.941
log
@2007-10-08  Pierre Muller  <muller@@ics.u-strasbg.fr>

	* linux-fork.c: ARI fix: include "gdb_dirent.h" instead of <dirent.h>.
	Makefile.in (linux-fork.o): Add gdb_dirent.h dependency.
@
text
@d2754 1
a2754 1
	$(solist_h) $(ada_lang_h)
@


1.940
log
@2007-10-08  Pierre Muller  <muller@@ics.u-strasbg.fr>

	* linux-fork.c: ARI fix: include "gdb_wait.h" instead of <sys/wait.h>.
	Makefile.in (linux-fork.o): Add gdb_wait.h dependency.
@
text
@d2239 1
a2239 1
	$(linux_nat_h) $(gdb_wait_h)
@


1.939
log
@	* arm-linux-tdep.c (arm_linux_software_single_step): New.
	(arm_linux_init_abi): Use it.
	* arm-tdep.c (arm_get_next_pc): Make global.  Handle all-ones
	condition correctly.
	* arm-tdep.h (arm_get_next_pc): Declare.
	* Makefile.in (arm-linux-tdep.o): Update.
@
text
@d2239 1
a2239 1
	$(linux_nat_h)
@


1.938
log
@        * solib-svr4.c: Add include of "auxv.h".
        (enable_break): Use the AT_BASE auxiliary entry if available.
        * Makefile.in (solib-svr4.o): Update dependencies.
@
text
@d1808 1
a1808 1
	$(regset_h) $(arm_linux_tdep_h) \
@


1.937
log
@	* dwarf2loc.c (dwarf_expr_frame_base): Guard against NULL.
	* Makefile.in (dwarf2loc.o): Depend on gdb_assert.h.
@
text
@d2625 1
a2625 1
	$(exec_h)
@


1.936
log
@2007-09-04  Michael Snyder  <msnyder@@access-company.com>

	* expprint.c (print_subexp_standard): Check strchr for null.
	* Makefile.in (expprint.o): Depend on gdb_assert.h.
@
text
@d1966 1
a1966 1
	$(dwarf2expr_h) $(dwarf2loc_h) $(gdb_string_h)
@


1.935
log
@2007-09-04  Michael Snyder  <msnyder@@access-company.com>

	* stabsread.c (patch_block_status): Guard against null.
	* Makefile.in (stabsread.o): Depend on gdb_assert.h.
@
text
@d1998 1
a1998 1
	$(gdb_string_h) $(block_h) $(objfiles_h)
@


1.934
log
@	* infcmd.c (post_create_inferior): Update comment.
	(run_command_1): Always call post_create_inferior with 0 as
	from_tty.

	* i386-cygwin-tdep.h: New.
	* i386-cygwin-tdep.c: Include "i386-cygwin-tdep.h".
	(win32_xfer_shared_library): Make it extern.

	* win32-nat.c: Include gdb_obstack.h and xml-support.h and
	i386-cygwin-tdep.h.
	(win32_so_ops): Delete.
	(get_relocated_section_addrs): Delete.
	(solib_symbols_add): Delete.
	(register_loaded_dll): Delete.
	(win32_make_so): New.
	(handle_load_dll): Use win32_make_so.
	(win32_free_so): Free the passed in so.
	(win32_relocate_section_addresses): Delete.
	(win32_solib_create_inferior_hook): Delete.
	(handle_unload_dll): Don't add PE offset here.  Free so with
	win32_free_so instead of free_so.
	(win32_special_symbol_handling): Delete.
	(get_win32_debug_event): Remove unneeded calls.  Set state to
	TARGET_WAITKIND_LOADED on a dll unload.
	(do_initial_win32_stuff): Clear cygwin_load_start and
	cygwin_load_end.
	(map_code_section_args): Delete.
	(dll_code_sections_add): Delete.
	(core_section_load_dll_symbols): Delete.
	(win32_xfer_shared_libraries): New.
	(win32_current_sos): Delete.
	(win32_xfer_partial): New.
	(open_symbol_file_object): Delete.
	(in_dynsym_resolve_code): Delete.
	(init_win32_ops): Set win32_xfer_partial as to_xfer_partial member
	of win32_ops.  Remove win32_so_ops settings.  Don't set
	current_target_so_ops here.

	* Makefile.in (i386_cygwin_tdep_h): New variable.
	(i386-cygwin-tdep.o): Update dependencies.
	(win32-nat.o): Update dependencies.
@
text
@d2721 2
a2722 1
	$(doublest_h) $(cp_abi_h) $(cp_support_h) $(stabsread_h)
@


1.933
log
@	* gdbarch.sh (core_xfer_shared_libraries): New.

	* corelow.c (core_xfer_partial): Handle TARGET_OBJECT_LIBRARIES.

	* gdb_obstack.h (obstack_grow_str, obstack_grow_str0): New.

	* xml-support.c (gdb_xml_parse): Debug output tweaks.
	(xml_escape_text): New.
	* xml-support.h (xml_escape_text): Declare.

	* config/i386/cygwin.mh (NATDEPFILES): Move corelow.o to ...
	* config/i386/cygwin.mt (TDEPFILES): ... here.

	* win32-nat.c: (fetch_elf_core_registers): Delete.
	(win32_elf_core_fn): Delete.
	(_initialize_core_win32): Delete.

	* i386-cygwin-tdep.c: Include "regset.h", "gdb_objstack.h",
	"xml-support.h" and "gdbcore.h".
	(i386_win32_gregset_reg_offset): New.
	(I386_WIN32_SIZEOF_GREGSET): New.
	(i386_win32_regset_from_core_section): New.
	(win32_xfer_shared_library): New.
	(struct cpms_data): New.
	(core_process_module_section): New.
	(win32_core_xfer_shared_libraries): New.
	(i386_cygwin_skip_trampoline_code): Register gregset_reg_offset,
	gregset_num_regs, sizeof_gregset members of tdep.  Register
	regset_from_core_section and core_xfer_shared_libraries callbacks.

	* Makefile.in (i386-cygwin-tdep.o): Update dependencies.
	* gdbarch.h, gdbarch.c: Regenerate.
@
text
@d737 1
d2107 1
a2107 1
	$(gdbcore_h)
d2842 2
a2843 1
	$(solib_h) $(i386_tdep_h) $(i387_tdep_h)
@


1.932
log
@	* arm-tdep.h (arm_skip_stub): Declare.
	* arm-wince-tdep.c: Don't include "solib-svr4.h".  Include
	"gdbcore.h".
	(arm_pe_skip_trampoline_code): New function.
	(arm_wince_init_abi): Register arm_pe_skip_trampoline_code as
	gdbarch_skip_trampoline_code callback.
	* Makefile.in (arm-wince-tdep.o): Update dependencies.
@
text
@d2105 2
a2106 1
	$(i386_tdep_h)
@


1.931
log
@	* configure.ac: Accept --with-system-readline.
	(READLINE, READLINE_DEPS, READLINE_CFLAGS): Define and substitute.
	* configure: Regenerate.
	* Makefile.in (READLINE, READLINE_DEPS, READLINE_CFLAGS): Use
	substituted values.
	(CDEPS): Use $(READLINE_DEPS) instead of $(READLINE).
@
text
@d1826 2
a1827 2
arm-wince-tdep.o: arm-wince-tdep.c $(defs_h) $(osabi_h) $(solib_svr4_h) \
	$(target_h) $(gdb_string_h) $(arm_tdep_h)
@


1.930
log
@	* Makefile.in (symfile.o): Update dependencies.
	* symfile.c (symbol_file_add_with_addrs_or_offsets): Initialize the
	DEBUGFILE variable.  FIND_SEPARATE_DEBUG_FILE called only if !PSYMTABS.
	(struct build_id): New structure.
	(build_id_bfd_get, build_id_verify, build_id_to_debug_filename): New.
	(find_separate_debug_file): New variable BUILD_ID.
	Call BUILD_ID_BFD_GET with BUILD_ID_TO_DEBUG_FILENAME as the first try.
@
text
@a129 1
READLINE = $(READLINE_DIR)/libreadline.a
d131 3
a133 1
READLINE_CFLAGS = -I$(READLINE_SRC)/..
d391 1
a391 1
CDEPS = $(XM_CDEPS) $(TM_CDEPS) $(NAT_CDEPS) $(SIM) $(BFD) $(READLINE) \
@


1.929
log
@        * Makefile.in (copying.c): Use the top-level COPYING3 as the file
        that contains the GDB license.
        * copying.awk: Adjust to the GPLv3 wording.
        * copying.c: Regenerate.
@
text
@d2734 1
a2734 1
	$(parser_defs_h) $(varobj_h)
@


1.928
log
@        * Makefile.in (i386nbsd-nat.o): Add missing dependency.
@
text
@d1389 1
a1389 1
		$(srcdir)/COPYING $(srcdir)/copying.awk
d1391 1
a1391 1
		< $(srcdir)/COPYING > $(srcdir)/copying.tmp
@


1.927
log
@        * Makefile.in: Minor cleanup throughout; add some missing variables,
        add some missing rules, remove some rules that are no longer needed,
        and fix the dependencies in several rules.
@
text
@d2125 2
a2126 1
	$(target_h) $(i386_tdep_h) $(i386bsd_nat_h) $(bsd_kvm_h)
@


1.926
log
@Re-instated Guile/Scheme support.
@
text
@d816 1
a816 1
symfile_h = symfile.h
d839 1
d1710 1
a1710 1
	$(source_h)
d1766 1
a1766 1
	$(i386_linux_tdep_h) $(amd64_nat_h) $(target_h) $(amd64_linux_tdep_h)
d1825 2
d1855 2
a1856 2
	$(solist_h) $(observer_h) $(exceptions_h) $(gdb_events_h) $(mi_common_h) \
	$(memattr_h) $(ada_lang_h)
d1985 2
a1986 1
	$(exceptions_h) $(gdbcmd_h) $(readline_h) $(readline_history_h)
d2082 1
a2082 1
	$(regcache_h) $(exceptions_h) $(gdb_string_h)
d2214 2
a2215 1
	$(jv_lang_h) $(gdbcore_h) $(block_h) $(demangle_h) $(dictionary_h)
d2232 1
a2232 1
	$(objc_lang_h) $(linespec_h) $(exceptions_h)
d2251 4
a2254 2
m2-typeprint.o: m2-typeprint.c $(defs_h) $(bfd_h) $(symtab_h) $(gdbtypes_h) \
	$(expression_h) $(value_h) $(gdbcore_h) $(target_h) $(m2_lang_h)
d2256 2
a2257 1
	$(m2_lang_h) $(c_lang_h)
d2399 1
a2399 1
ms1-tdep.o: ms1-tdep.c $(defs_h) $(frame_h) $(frame_unwind_h) $(frame_base_h) \
a2512 2
remote-hms.o: remote-hms.c $(defs_h) $(gdbcore_h) $(target_h) $(monitor_h) \
	$(serial_h) $(regcache_h)
d2648 1
a2648 1
	$(frame_unwind_h) $(dwarf2-frame_h) $(regset_h) $(regcache_h) \
d2749 1
a2749 1
	$(solist_h)
d2830 1
a2830 1
	$(float_format_h) $(frame_h) $(frame_base_h) $(frame_unwind_h) \
d2839 1
a2858 3
xtensa-linux-tdep.o: xtensa-linux-tdep.c $(defs_h) $(inferior_h) \
	$(gdbcore_h) $(regcache_h) $(osabi_h) $(gdb_string_h) \
	$(xtensa_tdep_h) $(xtensa_linux_tdep_h)
d2898 1
a2898 1
	$(cli_decode_h) $(cli_script_h) $(gdb_assert_h)
@


1.925
log
@gdb/:
* Makefile.in (MAKEHTMLFLAGS): Also search the current directory
for include files.

gdb/doc/:
* Makefile.in (MAKEHTMLFLAGS): Also search the current directory
for include files.
@
text
@d558 1
d791 2
d964 1
d2541 9
@


1.924
log
@* Makefile.in (MAKEHTMLFLAGS): Remove "-glossary".
@
text
@d102 3
d106 1
a106 2

MAKEHTMLFLAGS = -menu -split_chapter
@


1.923
log
@2007-07-03  Markus Deuling  <deuling@@de.ibm.com>

	* cp-namespace.c (lookup_symbol_file): Add block to
	lookup_symbol_global call.
	* Makefile.in (solist_h): Add dependency on symtab header.
	(symtab.o): Add dependency on solist header.
	* solib.c (solib_global_lookup): New function.
	* solib-svr4.c (scan_dyntag): Likewise.
	(elf_locate_base): Call helper routine scan_dyntag.
	(elf_lookup_lib_symbol): New function.
	(_initialize_svr4_solib): Add elf_lookup_lib_symbol to svr4_so_ops.
	* solist.h (symtab.h): New include.
	(struct target_so_ops): New member lookup_lib_global_symbol.
	(solib_global_lookup): New prototype.
	* symtab.c: New include solist.h.
	(lookup_objfile_from_block): New function.
	(lookup_global_symbol_from_objfile): New function.
	(basic_lookup_symbol_nonlocal): Add block to lookup_symbol_global call.
	(lookup_symbol_global): Call library-specific lookup procedure.
	* symtab.h (lookup_global_symbol_from_objfile): New prototype.

	* NEWS: Document framework.

testsuite/

	* gdb.base/solib-symbol.exp: New file (testcase multiple symbol lookup).
	* gdb.base/solib-symbol-lib.c: Likewise.
	* gdb.base/solib-symbol-main.c: Likewise.
@
text
@d104 1
a104 1
MAKEHTMLFLAGS = -glossary -menu -split_chapter
@


1.922
log
@	* Makefile.in (XMLFILES): Add library-list.dtd.
	(ALLDEPFILES): Add solib-target.o.
	(solib-target.o): New rule.
	* remote.c (PACKET_qXfer_libraries): New constant.
	(remote_protocol_features): Add qXfer:libraries:read.
	(remote_wait): Recognize library stop replies.
	(remote_async_wait): Likewise.  Fix typo.
	(remote_xfer_partial): Handle TARGET_OBJECT_LIBRARIES.
	(init_remote_async_ops): Fix typo.
	(_initialize_remote): Register "set remote library-info-packet".
	* solib-som.c (som_current_sos): Set addr_low and addr_high.
	* solib-target.c: New file.
	* solib.c (solib_map_sections): Use addr_low and addr_high instead
	of textsection.
	(info_sharedlibrary_command): Likewise.
	(solib_add_library, solib_remove_library): New.
	* solist.h (struct so_list): Replace textsection with addr_low and
	addr_high.
	* target.h (enum target_object): Add TARGET_OBJECT_LIBRARIES.
	* NEWS: Describe new qXfer:libraries:read and shared library
	event support.
	* features/library-list.dtd: New.

	* gdb.texinfo (Remote Configuration): Document library-info-packet.
	Add other missing entries.  Adjust the table size to fit.
	(Stop Reply Packets): Use @@itemize instead of @@enumerate.  Document
	stop reasons including the new "library" event.
	(General Query Packets): Adjust table widths for qSupported.  Mention
	qXfer:libraries:read reply to qSupported and document the new packet.
	(Library List Format): New section.
@
text
@d802 1
a802 1
solist_h = solist.h
d2727 2
a2728 1
	$(gdb_stat_h) $(cp_abi_h) $(observer_h) $(gdb_assert_h)
@


1.921
log
@	* coffread.c (coff_sym_fns): Add default_symfile_segments.
	* dbxread.c (start_psymtab): Check HAVE_ELF.
	(aout_sym_fns): Likewise.
	* elfread.c (elf_symfile_segments): New.
	(elf_sym_fns): Add elf_symfile_segments.
	* mipsread.c (ecoff_sym_fns): Add default_symfile_segments.
	* remote.c (get_offsets): Use symfile_map_offsets_to_segments.
	Skip if there is no symfile_objfile.  Handle TextSeg and DataSeg.
	* somread.c (som_sym_fns): Use default_symfile_segments.
	* symfile.c (find_sym_fns): Take a BFD and return the sym_fns.
	(init_objfile_sect_indices): Call symfile_find_segment_sections.
	(default_symfile_segments): New function.
	(syms_from_objfile): Update call to find_sym_fns.
	(symfile_get_segment_data, free_symfile_segment_data): New.
	(symfile_map_offsets_to_segments): New.
	(symfile_find_segment_sections): New.
	* symfile.h (struct symfile_segment_data): New.
	(struct sym_fns): Add sym_segments.
	(default_symfile_segments, symfile_get_segment_data)
	(free_symfile_segment_data): New prototypes.
	(symfile_map_offsets_to_segments): Likewise.
	* xcoffread.c (xcoff_sym_fns): Add default_symfile_segments.
	* Makefile.in (COMMON_OBS): Remove elfread.o.
	(elf_internal_h): New.
	(elfread.o): Update.
	* configure.ac: Add elfread.o to COMMON_OBS if bfd/elf.o was
	compiled.
	* config.in, configure: Regenerated.
	* NEWS: Mention qOffsets changes.

	* gdb.texinfo (General Query Packets): Document qOffsets changes.

	* Makefile.def: Add dependency from configure-gdb to all-bfd.
	* Makefile.in: Regenerated.
@
text
@d406 1
d1475 1
d2601 3
@


1.920
log
@	* m68k-tdep.h (enum m68k_flavour): New.
	(struct gdbarch_tdep): New fields
	float_return, flavour and fpregs_present.
	* m68k-tdep.c (m68k_register_type): Use
	fpregs_present and conditionalize floating
	registers type on flavour.
	(m68k_register_names): New.
	(m68k_register_name): Use the above.
	(m68k_convert_register_p): Consult fpregs_present.
	(m68k_register_to_value, m68k_value_to_register):
	Use register_type to obtain the type of floating
	point registers.
	(m68k_svr4_extract_return_value): Check tdep->float_return.
	Use register_type to get the type of floating
	point regiters.
	(m68k_svr4_store_return_value): Likewise.
	(m68k_dwarf_reg_to_regnum): Check tdep->fpregs_present.
	(m68k_analyze_register_saves): Likewise.
	(m68k_gdbarch_init): Extract infromation
	from XML description, if present.  Guess coldfire by
	looking at the file, if present. Conditionalize
	setting of long double format.  Set decr_pc_after_break
	to 2 on coldfire and fido.  Enable XML-driven
	register description.
	* m68kbsd-tdep.c (m68kbsd_fpreg_offset): Use
	size of tdep->fpreg_type, as opposed to hardcoded value.
	* Makefile.in (m68k-tdep.o): Update dependencies.
@
text
@d589 1
d950 1
a950 1
	dbxread.o coffread.o coff-pe-read.o elfread.o \
d1962 2
a1963 1
	$(stabsread_h) $(gdb_stabs_h) $(complaints_h) $(demangle_h)
@


1.919
log
@	* config/mips/linux.mh (TDEP_XML): New.
	* features/mips-linux.xml, features/mips64-linux.xml: New files.
	* mips-linux-nat.c (mips_linux_register_addr): Handle
	MIPS_RESTART_REGNUM.
	(mips64_linux_register_addr): Likewise.
	(super_xfer_partial, mips_linux_xfer_partial): New.
	(_initialize_mips_linux_nat): Add them to the target_ops.
	* mips-linux-tdep.c (mips_supply_gregset): Handle MIPS_RESTART_REGNUM.
	(mips_fill_gregset, mips64_supply_gregset, mips64_fill_gregset)
	(mips_linux_o32_sigframe_init)
	(mips_linux_n32n64_sigframe_init): Likewise.
	(mips_linux_write_pc, mips_linux_restart_reg_p): New.
	(mips_linux_init_abi): Use mips_linux_write_pc.  Check for the
	"org.gnu.gdb.mips.linux" feature.
	* mips-linux-tdep.h (MIPS_RESTART_REGNUM): New constant.
	(mips_linux_restart_reg_p): New prototype.
	* mips-tdep.c (mips_gdbarch_init): Pass tdesc_data to the OS/ABI
	initialization routine.
	* Makefile.in (mips-linux-tdep.o, mips-linux-nat.o): Update.

	* gdb.texinfo (MIPS Features): Document org.gnu.gdb.mips.linux.
@
text
@d2289 1
a2289 1
	$(m68k_tdep_h)
@


1.918
log
@	* Makefile.in (mips-tdep.o): Update.
	* mips-tdep.c (struct register_alias, mips_o32_aliases)
	(mips_n32_n64_aliases, mips_register_aliases): New.
	(mips_register_name): Call tdesc_register_name.
	(mips_tdesc_register_reggroup_p): New.
	(mips_pseudo_register_type, value_of_mips_user_reg): New.
	(mips_gdbarch_init): Add target-described register support.
	Register aliases for register names.
	* target-descriptions.c (tdesc_register_name): Make global.
	(tdesc_register_in_reggroup_p): New function, broken out from
	tdesc_register_reggroup_p.
	(tdesc_register_reggroup_p): Use it.
	* target-descriptions.h (tdesc_register_name)
	(tdesc_register_in_reggroup_p): New prototypes.
	* NEWS: Correct formatting.  Mention MIPS register support.
	* features/mips-cp0.xml, features/mips-fpu.xml,
	features/mips64-cp0.xml, gdb/features/mips64-fpu.xml, mips-cpu.xml,
	features/mips64-cpu.xml: New files.

	* gdb.xml/tdesc-regs.exp: Add MIPS support.  Allow multiple
	required features to be included.

	* gdb.texinfo (MIPS Features): New subsection.
@
text
@d2340 2
a2341 1
	$(mips_linux_tdep_h) $(inferior_h)
d2346 2
a2347 1
	$(mips_linux_tdep_h) $(solist_h) $(solib_svr4_h)
@


1.917
log
@        * solib-aix5.c: Delete.
        * Makefile.in (solib-aix5.o): Delete rule.
@
text
@d2364 1
a2364 1
	$(dwarf2_frame_h)
@


1.916
log
@gdb/:
* ser-unix.c (show_serial_hwflow): New function.
(hardwire_raw): Add hardware flow control support.
(_initialize_ser_hardwire): Add "set/show remoteflow".
* Makefile.in (ser-unix.o): Depend on $(gdbcmd_h).
* NEWS: Document the new command.

gdb/doc/:
* gdb.texinfo (Remote Configuration): Document "set/show
remoteflow".
@
text
@a2566 4
solib-aix5.o: solib-aix5.c $(defs_h) $(gdb_string_h) $(elf_external_h) \
	$(symtab_h) $(bfd_h) $(symfile_h) $(objfiles_h) $(gdbcore_h) \
	$(command_h) $(target_h) $(frame_h) $(gdb_regex_h) $(inferior_h) \
	$(environ_h) $(language_h) $(gdbcmd_h) $(solist_h)
@


1.915
log
@	* config/mips/linux.mt (DEPRECATED_TM_FILE): Delete.
	* config/mips/tm-linux.h: Delete.
	* mips-linux-tdep.c (mips_svr4_so_ops): New.
	(mips_linux_in_dynsym_resolve_code): Make static.  Use
	svr4_in_dynsym_resolve_code.
	(mips_linux_init_abi): Initialize mips_svr4_so_ops.  Call
	set_solib_ops.
	* solib-svr4.c (svr4_in_dynsym_resolve_code, svr4_so_ops): Make
	global.
	* solib-svr4.h (svr4_so_ops, svr4_in_dynsym_resolve_code): Declare.
	* Makefile.in (mips-linux-tdep.o): Update.
	* solib.c (set_solib_ops): New.
	(current_target_so_ops): Update comment.
	* solib.h (set_solib_ops): New prototype.
@
text
@d2544 1
a2544 1
	$(terminal_h) $(gdb_select_h) $(gdb_string_h)
@


1.914
log
@	* gdb_proc_service.h (paddr_t): Delete typedef.
	* proc-service.c (ps_addr_to_core_addr, core_addr_to_ps_addr): New.
	(ps_xfer_memory): Take a psaddr_t.  Use ps_addr_to_core_addr.
	(ps_pglobal_lookup): Take a psaddr_t *.  Use core_addr_to_ps_addr.
	(ps_pdread, ps_pdwrite, ps_ptread, ps_ptwrite): Take a psaddr_t.
	* sol-thread.c (gdb_ps_addr_t): Use psaddr_t instead of paddr_t.
	* Makefile.in (proc-service.o): Update.
@
text
@d2345 1
a2345 1
	$(mips_linux_tdep_h)
@


1.913
log
@	* Makefile.in (mips-tdep.o): Update.
	* mips-tdep.c (mips_gdbarch_init): Register the dwarf2 CFI
	unwinder.
@
text
@d2465 2
a2466 1
	$(symtab_h) $(target_h) $(regcache_h) $(gregset_h)
@


1.912
log
@	* hppa-hpux-tdep.c: Include "regcache.h".
	* hppa-linux-tdep.c: Likewise.
	* hppa-tdep.c: Include "gdb_stdint.h".
	(find_unwind_entry): Cast host pointer to uintptr_t before passing
	it to paddr_nz.
	* Makefile.in: Update dependencies.
@
text
@d2363 2
a2364 1
	$(floatformat_h) $(remote_h) $(target_descriptions_h)
@


1.911
log
@	* spu-tdep.c: Include "observer.h".
	(spu_frame_unwind_cache): Unwind PC through overlay return stubs.
	(spu_overlay_data): New variable.
	(struct spu_overlay_table): New type.
	(spu_get_overlay_table, spu_overlay_update_osect, spu_overlay_update,
	spu_overlay_new_objfile): New functions.
	(spu_gdbarch_init): Install spu_overlay_update.
	(_initialize_spu_tdep): Register spu_overlay_new_objfile,
	allocate spu_overlay_data objfile data.
@
text
@d2068 1
a2068 1
	$(exceptions_h) $(gdb_string_h)
d2075 1
a2075 1
	$(hppa_tdep_h) $(elf_common_h) $(regset_h)
d2077 4
a2080 4
	$(completer_h) $(osabi_h) $(gdb_assert_h) $(arch_utils_h) \
	$(symtab_h) $(dis_asm_h) $(trad_frame_h) $(frame_unwind_h) \
	$(frame_base_h) $(gdbcore_h) $(gdbcmd_h) $(objfiles_h) \
	$(hppa_tdep_h) $(gdbtypes_h)
@


1.910
log
@doc/ChangeLog:

	* observer.texi (GDB Observers): New observer "new_objfile".

ChangeLog:

	* observer.sh: Add "struct objfile" forward declaration.
	* target.h (deprecated_target_new_objfile_hook): Remove.
	* symfile.c (deprecated_target_new_objfile_hook): Remove.
	(clear_symtab_users): Call observer_notify_new_objfile.
	(symbol_file_add_with_addrs_or_offsets): Likewise.
	* rs6000-nat.c: Include "observer.h".
	(vmap_ldinfo): Call observer_notify_new_objfile.
	(xcoff_relocate_core): Likewise.
	* remote.c (remote_new_objfile_chain): Remove.
	(remote_new_objfile): Do not call remote_new_objfile_chain.
	(_initialize_remote): Use observer_attach_new_objfile.
	* tui/tui-hooks.c (tui_target_new_objfile_chain): Remove.
	(tui_new_objfile_hook): Do not call tui_target_new_objfile_chain.
	(_initialize_tui_hooks): Use observer_attach_new_objfile.
	* aix-thread.c: Include "observer.h".
	(target_new_objfile_chain): Remove.
	(new_objfile): Do not call target_new_objfile_chain.
	(_initialize_aix_thread): Use observer_attach_new_objfile.
	* hpux-thread.c: Include "observer.h"
	(target_new_objfile_chain): Remove.
	(hpux_thread_new_objfile): Make static.  Do not call
	target_new_objfile_chain.
	(_initialize_hpux_thread): Use observer_attach_new_objfile.
	* linux-thread-db.c: Include "observer.h".
	(target_new_objfile_chain): Remove.
	(thread_db_new_objfile): Do not call target_new_objfile_chain.
	(_initialize_thread_db): Use observer_attach_new_objfile.
	* sol-thread.c: Include "observer.h".
	(target_new_objfile_chain): Remove.
	(sol_thread_new_objfile): Make static.  Do not call
	target_new_objfile_chain.
	(_initialize_sol_thread): Use observer_attach_new_objfile.
	* Makefile.in (aix-thread.o, hpux-thread.o, linux-thread-db.o,
	rs6000-nat.o, sol-thread.o, tui-hooks.o): Add dependency on
	$(observer_h).
@
text
@d2684 1
a2684 1
	$(spu_tdep_h)
@


1.909
log
@	* spu-linux-nat.c: Include "gdb_stdint.h".
	(fetch_ppc_register): Use uint64_t instead of unsigned long long.
	(fetch_ppc_memory_1, store_ppc_memory_1): Likewise.
	(fetch_ppc_memory, store_ppc_memory): Fix coding style.
	(spu_symbol_file_add_from_memory): Use strtoulst instead of sscanf.
	(spu_child_wait): Mark up string for translation.
@
text
@d1711 1
a1711 1
	$(gdb_string_h)
d2083 1
a2083 1
	$(hppa_tdep_h)
d2229 1
a2229 1
	$(regcache_h) $(solib_svr4_h) $(gdbcore_h) $(linux_nat_h)
d2508 1
a2508 1
	$(gdb_stdint_h) $(gdb_stat_h)
d2599 1
a2599 1
	$(solib_h) $(symfile_h) $(gdb_string_h) $(gregset_h)
d3129 2
a3130 2
	$(breakpoint_h) $(gdb_events_h) $(ui_out_h) $(top_h) $(tui_h) \
	$(tui_hooks_h) $(tui_data_h) $(tui_layout_h) $(tui_io_h) \
@


1.908
log
@	* Makefile.in (c-lang.o, gnu-v3-abi.o): Update.
	* NEWS: Mention improved C++ thunk support.
	* c-lang.c (cplus_language_defn): Mention cplus_skip_trampoline.
	* cp-abi.c (cplus_skip_trampoline): New.
	* cp-abi.h (cplus_skip_trampoline): New prototype.
	(struct cp_abi_ops): Add skip_trampoline member.
	* gnu-v3-abi.c (gnuv3_skip_trampoline): New.
	(init_gnuv3_ops): Set skip_trampoline.

	* gdb.cp/virtfunc.exp (proc do_tests): Test stepping through a thunk.
@
text
@d2678 1
a2678 1
	$(gdb_wait_h) $(spu_tdep_h)
@


1.907
log
@	* inftarg.c, infptrace.c: Remove files.
	* Makefile.in (ALLDEPFILES): Remove inftarg.c and infptrace.c
	(inftarg.o, infptrace.o): Remove rules.
	* gdbcore.h (register_addr): Remove prototype.
	* inferior.h (kill_inferior, store_inferior_registers,
	fetch_inferior_registers, attach, detach, ptrace_wait, child_resume,
	call_ptrace, pre_fork_inferior): Remove prototypes.
	* target.h (child_xfer_memory, child_pid_to_exec_file,
	child_core_file_to_sym_file, child_post_attach,
	child_post_startup_inferior, child_acknowledge_created_inferior,
	child_insert_fork_catchpoint, child_remove_fork_catchpoint,
	child_insert_vfork_catchpoint, child_remove_vfork_catchpoint,
	child_insert_exec_catchpoint, child_remove_exec_catchpoint,
	child_follow_fork, child_reported_exec_events_per_exec_call,
	child_has_exited, child_thread_alive): Remove prototypes.
@
text
@d1865 1
a1865 1
	$(demangle_h) $(cp_support_h)
d2046 2
a2047 1
	$(demangle_h) $(valprint_h) $(gdb_assert_h) $(gdb_string_h)
@


1.906
log
@	* gregset.h (struct regcache): Add forward declaration.
	(supply_gregset): Add REGCACHE parameter, make GREGS const.
	(supply_fpregset): Add REGCACHE parameter, make FPREGS const.
	(supply_fpxregset): Add REGCACHE parameter, make FPXREGS const.
	(fill_gregset): Add REGCACHE parameter.
	(fill_fpregset): Likewise.
	(fill_fpxregset): Likewise.

	Update all definitions accordingly:
	* alphabsd-nat.c, alpha-linux-nat.c, alpha-nat.c, amd64-linux-nat.c,
	arm-linux-nat.c, hppa-linux-nat.c, i386gnu-nat.c, i386-linux-nat.c,
	i386-sol2-nat.c, i386v4-nat.c, ia64-linux-nat.c, irix5-nat.c,
	m32r-linux-nat.c, m68klinux-nat.c, mips-linux-nat.c, ppc-linux-nat.c,
	s390-nat.c, sparc64-linux-nat.c, sparc-linux-nat.c, sparc-sol2-nat.c
	(supply_gregset): Add REGCACHE parameter, use it instead of
	current_regcache.  Make GREGSETP parameter const, adapt casts.
	(supply_fpregset): Add REGCACHE parameter, use it instead of
	current_regcache.  Make FPREGSETP parameter const, adapt casts.
	(fill_gregset): Add REGCACHE parameter, use it instead of
	current_regcache.
	(fill_fpregset): Likewise.

	Update all callers to pass in current_regcache as the new argument:
	* core-regset.c: Include "regcache.h".
	(fetch_core_registers): Update supply_gregset,and supply_fpregset calls.
	* procfs.c: Include "regcache.h".
	(procfs_fetch_registers): Update supply_gregset, supply_fpregset calls.
	(procfs_store_registers): Update fill_gregset, fill_fpregset calls.
	(procfs_do_thread_registers): Likewise.
	(procfs_make_note_section): Likewise.
	* proc-service.c: Include "regcache.h".
	(ps_lgetregs): Update fill_gregset call.
	(ps_lsetregs): Update supply_gregset call.
	(ps_lgetfpregs): Update fill_fpregset call.
	(ps_lsetfpregs): Update supply_fpregset call.
	* sol-thread.c (sol_thread_fetch_registers): Update supply_gregset,
	supply_fpregset calls.
	(sol_thread_store_registers): Update fill_gregset, fill_fpregset calls.
	(ps_lgetregs): Update fill_gregset call.
	(ps_lsetregs): Update supply_gregset call.
	(ps_lgetfpregs): Update fill_fpregset call.
	(ps_lsetfpregs): Update supply_fpregset call.

	* linux-nat.c (linux_nat_do_thread_registers): Update fill_gregset,
	fill_fpregset, and fill_fpxregset calls.
	* i386-linux-nat.c (fetch_regs): Update supply_gregset call.
	(store_regs): Update fill_gregset call.
	(fetch_fpregs): Update supply_fpregset call.
	(store_fpregs): Update fill_fpregset call.
	(fetch_fpxregs): Update supply_fpxregset call.
	(store_fpxregs): Update fill_fpxregset call.
	* m32r-linux-nat.c (fetch_regs): Update supply_gregset call.
	(store_regs): Update fill_gregset call.
	* m68klinux-nat.c (fetch_regs): Update supply_gregset call.
	(store_regs): Update fill_gregset call.
	(fetch_fpregs): Update supply_fpregset call.
	(store_fpregs): Update fill_fpregset call.
	(fetch_core_registers): Update supply_gregset, supply_fpregset calls.
	* s390-nat.c (fetch_regs): Update supply_gregset call.
	(store_regs): Update fill_gregset call.
	(fetch_fpregs): Update supply_fpregset call.
	(store_fpregs): Update fill_fpregset call.

	* Makefile.in (core-regset.o, procfs.o, proc-service.o): Update
	dependencies.
@
text
@d1455 1
a1455 1
	infptrace.c inftarg.c irix5-nat.c \
a2174 3
infptrace.o: infptrace.c $(defs_h) $(command_h) $(frame_h) $(gdbcore_h) \
	$(inferior_h) $(regcache_h) $(target_h) $(gdb_assert_h) \
	$(gdb_wait_h) $(gdb_string_h) $(gdb_dirent_h) $(gdb_ptrace_h)
a2180 3
inftarg.o: inftarg.c $(defs_h) $(frame_h) $(inferior_h) $(target_h) \
	$(gdbcore_h) $(command_h) $(gdb_stat_h) $(gdb_wait_h) \
	$(inflow_h)
@


1.905
log
@	* shnbsd-tdep.c (shnbsd_supply_reg): Add REGCACHE parameter, use it
	instead of current_regcache.  Make REGS const.
	(shnbsd_fill_reg): Add REGCACHE parameter; replace current_regcache.
	* shnbsd-tdep.h (shnbsd_supply_reg, shnbsd_fill_reg): Update
	prototypes.
	* shnbsd-nat.c: Include "regcache.h".
	(shnbsd_fetch_inferior_registers): Pass current_regcache to
	shnbsd_supply_reg.
	(shnbsd_store_inferior_registers): Pass current_regcache to
	shnbsd_fill_reg.
	* Makefile.in (shbsd-nat.o): Update dependencies.
@
text
@d1890 1
a1890 1
	$(inferior_h) $(target_h) $(gdb_string_h) $(gregset_h)
d2465 1
a2465 1
	$(elf_bfd_h) $(gdbcmd_h) $(gdbthread_h) $(gdb_wait_h) \
d2469 1
a2469 1
	$(symtab_h) $(target_h) $(gregset_h)
@


1.904
log
@	* mips-linux-tdep.c (supply_32bit_reg): Add REGCACHE parameter.  Use it
	instead of current_regcache.
	(mips_supply_gregset): Likewise.  Pass REGCACHE to supply_32bit_reg.
	Make GREGSETP const, remove superfluous casts.
	(mips_fill_gregset): Add REGCACHE parameter; replace current_regcache.
	(mips_supply_fpregset): Likewise.  Make FPREGSETP const, remove
	superfluous casts.
	(mips_fill_fpregset): Add REGCACHE parameter; replace current_regcache.
	(supply_64bit_reg): Likewise
	(mips64_supply_gregset): Likewise.  Pass REGCACHE to supply_64bit_reg.
	Make GREGSETP const, adapt casts accordingly.
	(mips64_fill_gregset): Add REGCACHE parameter; replace current_regcache.
	(mips64_supply_fpregset): Likewise.  Make FPREGSET const, adapt
	casts accordingly.
	(mips64_fill_fpregset): Add REGCACHE parameter; replace current_regcache.
	(fetch_core_registers): Pass current_regcache to mips{64}_(supply|fill)_
	helper routines.
	* mips-linux-tdep.h (mips_supply_gregset, mips_fill_gregset,
	mips_supply_fpregset, mips_fill_fpregset, mips64_supply_gregset,
	mips64_fill_gregset, mips64_supply_fpregset, mips64_fill_fpregset):
	Adapt prototypes.
	* mips-linux-nat.c: Include "regcache.h".
	(supply_gregset, fill_gregset, supply_fpregset, fill_fpregset): Pass
	current_regcache to mips{64}_(supply|fill)_ helper routines.
	(mips64_linux_regsets_fetch_registers): Likewise.
	(mips64_linux_regsets_store_registers): Likewise.

	* mipsnbsd-tdep.c (mipsnbsd_supply_reg, mipsnbsd_supply_fpreg): Add
	REGCACHE argument; replace current_regcache.  Make REGS const.
	(mipsnbds_fill_reg, mipsnbsd_fill_fpreg): Add REGCACHE argument;
	replace current_regcache.
	* mipsnbsd-tdep.h (ipsnbsd_supply_reg, mipsnbsd_supply_fpreg,
	mipsnbds_fill_reg, mipsnbsd_fill_fpreg): Adapt prototypes.
	* mipsnbsd-nat.c (mipsnbsd_fetch_inferior_registers,
	mipsnbsd_store_inferior_registers): Pass current_regcache to
	mipsnbsd_(supply|fill)_... helper routines.

	* Makefile.in (mips-linux-nat.o): Update dependencies.
@
text
@d2556 1
a2556 1
	$(shnbsd_tdep_h) $(inf_ptrace_h)
@


1.903
log
@	* alpha-tdep.c (alpha_supply_int_regs, alpha_fill_int_regs,
	alpha_supply_fp_regs, alpha_fill_fp_regs): Add REGCACHE parameter,
	use it instead of current_regcache.
	* alpha-tdep.h (struct regcache): Add forward declaration.
	(alpha_supply_int_regs, alpha_fill_int_regs, alpha_supply_fp_regs,
	alpha_fill_fp_regs): Update prototypes.

	* alpha-nat.c: (supply_gregset, fill_gregset, supply_fpregset,
	fill_fpregset): Pass current_regcache to alpha_supply/fill_ routines.
	* alpha-linux-nat.c: Include "regcache.h".
	(supply_gregset, fill_gregset, supply_fpregset, fill_fpregset): Pass
	current_regcache to alpha_supply/fill_ routines.

	* alphabsd-tdep.c: Include "regcache.h".
	(alphabsd_supply_reg, alphabsd_supply_fpreg): Add REGCACHE paramter,
	pass it to alpha_supply_ routines.  Make REGS const.
	(alphabsd_fill_reg, alphabsd_fill_fpreg): Add REGCACHE parameter,
	pass it to alpha_fill_ routines.
	* alphabsd-tdep.h (struct regcache): Add forward declaration.
	(alphabsd_supply_reg, alphabsd_fill_reg, alphabsd_supply_fpreg,
	alphabsd_fill_fpreg): Update prototypes.

	* alphanbsd-nat.c (supply_gregset, fill_gregset, supply_fpregset,
	fill_fpregset, alphabsd_fetch_inferior_registers,
	alphabsd_store_inferior_registers): Pass current_regcache to
	alphabsd_supply/fill_ routines.

	* Makefile.in (alpha-linux-nat.o, alphabsd-tdep.o): Update
	dependencies.
@
text
@d2344 1
a2344 1
	$(linux_nat_h) $(gdb_proc_service_h) $(gregset_h) \
@


1.902
log
@	* m68klinux-nat.c: Remove #ifndef USE_PROC_FS check.
	* m68k-tdep.c: Remove code within #ifdef USE_PROC_FS.

	* mips-linux-nat.c: Include "gregset.h".
	(supply_gregset, fill_gregset, supply_fpregset, fill_fpregset): Move
	from mips-linux-tdep.c.  Change parameter type to gdb_gregset_t.
	* mips-linux-tdep.c (supply_gregset, fill_gregset, supply_fpregset,
	fill_fpregset): Move to mips-linux-nat.c.

	* Makefile.in (m68k-tdep.o, mips-linux-nat.o): Update dependencies.
@
text
@d1715 1
a1715 1
alphabsd-tdep.o: alphabsd-tdep.c $(defs_h) $(alpha_tdep_h) \
d1719 2
a1720 2
alpha-linux-nat.o: alpha-linux-nat.c $(defs_h) $(target_h) $(linux_nat_h) \
	$(alpha_tdep_h) $(gregset_h)
@


1.901
log
@	* rs6000-aix-tdep.c: Include "regcache.h", "regset.h", and
	"gdb_string.h".
	(rs6000_aix32_reg_offsets, rs6000_aix64_reg_offsets): New variables.
	(rs6000_aix_supply_regset, rs6000_aix_collect_regset): New functions.
	(rs6000_aix32_regset, rs6000_aix64_regset): New variables.
	(rs6000_aix_regset_from_core_section): New function.
	(rs6000_aix_init_osabi): Register it.
	(_initialize_rs6000_aix_tdep): Register GDB_OSABI_AIX osabi and
	sniffer for bfd_arch_powerpc as well as bfd_arch_rs6000.
	* rs6000-nat.c (CoreRegs): Do not define type.
	(fetch_core_registers, rs6000_core_fns): Remove.
	(_initialize_core_rs6000): Do not register it.  Rename to ...
	(_initialize_rs6000_nat): ... this.
	* Makefile.in (rs6000-aix-tdep.o): Update dependencies.
@
text
@d2294 1
a2294 1
	$(m68k_tdep_h) $(gregset_h)
d2344 2
a2345 2
	$(linux_nat_h) $(gdb_proc_service_h) $(mips_linux_tdep_h) \
	$(inferior_h)
@


1.900
log
@gdb/:
* Makefile.in (gdbtk-wrapper.o): Update dependencies.
(gdbtk-varobj.o, gdbtk-cmds.o, gdbtk-stack.o): Likewise.

gdb/gdbtk/:
* generic/gdbtk-wrapper.c (GDB_varobj_update): New function.
(wrap_varobj_update): Likewise.
* generic/gdbtk-wrapper.h (GDB_varobj_update): New declaration.
* generic/gdbtk-varobj.c (variable_update): Call
GDB_varobj_update() rather than varobj_update() directly.  Take
the new semantics of the latter into account.
* generic/gdbtk-cmds.c: Include "varobj.h".
* generic/gdbtk-stack.c: Likewise.
@
text
@d2522 2
a2523 2
rs6000-aix-tdep.o: rs6000-aix-tdep.c $(defs_h) $(osabi_h) $(rs6000_tdep_h) \
	$(ppc_tdep_h)
@


1.899
log
@	* aix-thread.c (aix_thread_xfer_memory): Replace by ...
	(aix_thread_xfer_partial): ... this.
	(init_aix_thread_ops): Install to_xfer_partial instead
	of deprecated_xfer_memory target method.

	* config/powerpc/aix.mh (NATDEPFILES): Remove infptrace.o
	and inftarg.o, add inf-ptrace.o.
	* config/rs6000/nm-rs6000.h (FETCH_INFERIOR_REGISTERS,
	CHILD_XFER_MEMORY, KERNEL_U_SIZE, kernel_u_size): Remove.
	* rs6000-nat.c: Include "inf-ptrace.h" and "gdb_stdint.h".
	(fetch_inferior_registers): Rename to ...
	(rs6000_fetch_inferior_registers): ... this.  Make static.
	(store_inferior_registers): Rename to ...
	(rs6000_store_inferior_registers): ... this.  Make static.
	(read_word, child_xfer_memory): Remove.
	(rs6000_xfer_partial): New function.
	(kernel_u_size): Remove.
	(_initialize_core_rs6000): Add inf_ptrace-based target.
	* Makefile.in (rs6000-nat.o): Update dependencies.
@
text
@d2974 1
a2974 1
	$(dis_asm_h) $(gdbcmd_h)
d3016 1
a3016 1
	$(block_h) $(dictionary_h)
d3024 1
d3032 1
a3032 1
	$(defs_h) $(frame_h) $(value_h)
@


1.898
log
@	* inf-ptrace.c: Include "gdb_stdint.h".
	(inf_ptrace_xfer_partial): Use "uintptr_t" instead of "long" as
	intermediate type when casting CORE_ADDR to PTRACE_TYPE_ARG3.
	(inf_ptrace_fetch_register): Add intermediate cast to "uintptr_t"
	before casting CORE_ADDR to PTRACE_TYPE_ARG3.
	(inf_ptrace_store_register): Likewise.
	* Makefile.in (inf-ptrace.o): Update dependencies.
@
text
@d2512 2
a2513 1
	$(ppc_tdep_h) $(rs6000_tdep_h) $(exec_h) $(gdb_stat_h)
@


1.897
log
@	* alpha-linux-tdep.c: Include "gdb_string.h", "regset.h",
	and "regcache.h".
	(alpha_linux_supply_gregset, alpha_linux_supply_fpregset): New.
	(alpha_linux_gregset, alpha_linux_fpregset): New variables.
	(alpha_linux_regset_from_core_section): New function.
	(alpha_linux_init_abi): Install it.
	* alpha-linux-nat.c: Do not include "gdbcore.h".  Include
	"alpha-tdep.h", <sys/ptrace.h>, <alpha/ptrace.h>,
	<sys/procfs.h>, and "gregset.h".
	(ALPHA_REGSET_BASE, ALPHA_REGSET_UNIQUE, ALPHA_UNIQUE_PTRACE_ADDR):
	Move from config/alpha/nm-linux.h.
	(supply_gregset, fill_gregset, supply_fpregset, fill_fpregset): Copy
	from alpha-nat.c.
	(alpha_linux_register_u_offset): Inline register_addr from alpha-nat.c.
	* alpha-nat.c: Remove #ifdef __linux__ section.
	(fetch_elf_core_registers, alpha_elf_core_fns): Remove.
	(_initialize_core_alpha): Do not register alpha_elf_core_fns.
	(ALPHA_UNIQUE_PTRACE_ADDR, ALPHA_REGSET_UNIQUE): Define unconditionally.
	(ALPHA_REGSET_BASE): Move from config/alpha/nm-osf.h.
	* config/alpha/alpha-linux.mh (NAT_FILE): Set to config/nm-linux.h.
	(NATDEPFILES): Remove alpha-nat.o.
	* config/alpha/nm-linux.h: Delete file.
	* config/alpha/nm-osf.h (ALPHA_REGSET_BASE): Move to alpha-nat.c.
	* Makefile.in (alpha-linux-nat.o): Update dependencies.
	(alpha-linux-tdep.o): Likewise.
@
text
@d2173 1
a2173 1
	$(gdbcore_h) $(regcache_h) $(gdb_assert_h) \
@


1.896
log
@	* mips-linux-nat.c: No longer include "gdbcore.h".
	(mips_linux_register_addr): Move from mips-linux-tdep.c.
	(mips64_linux_register_addr): Likewise.
	(mips_linux_register_u_offset): Call mips_linux_register_addr or
	mips64_linux_register_addr instead of register_addr.
	* mips-linux-tdep.c (mips_linux_register_addr,
	mips64_linux_register_addr): Move to mips-linux-nat.c.
	(register_addr): Remove.
	(register_addr_data, init_register_addr_data): Remove.
	(_initialize_mips_linux_tdep): Do not initialize register_addr_data.
	(set_mips_linux_register_addr): Remove.
	(mips_linux_init_abi): Do not call set_mips_linux_register_addr.
	* Makefile.in (mips-linux-nat.o): Update dependencies.
@
text
@d1720 1
a1720 1
	$(gdbcore_h)
d1722 2
a1723 1
	$(osabi_h) $(solib_svr4_h) $(symtab_h) $(alpha_tdep_h)
@


1.895
log
@	* linux-nat.c (linux_register_u_offset): Remove.
	(linux_target_install_ops): New function.
	(linux_target): Use it.
	(linux_trad_target): New function.
	* linux-nat.h (linux_trad_target): Declare.

	* alpha-linux-nat.c: Include "gdbcore.h".
	(alpha_linux_register_u_offset): New function.
	(_initialize_alpha_linux_nat): Use linux_trad_target.

	* mips-linux-nat.c: Include "gdbcore.h".
	(mips_linux_register_u_offset): New function.
	(_initialize_mips_linux_nat): Use linux_trad_target.

	* config/arm/linux.mh (NAT_FILE): Set to config/nm-linux.h.
	* config/arm/nm-linux.h: Delete file.

	* config/i386/nm-linux64.h (FETCH_INFERIOR_REGISTERS): Remove.
	* config/i386/nm-linux.h (FETCH_INFERIOR_REGISTERS): Remove.

	* config/ia64/linux.mh (NAT_FILE): Set to config/nm-linux.h.
	* config/ia64/nm-linux.h: Delete file.

	* config/m32r/linux.mh (NAT_FILE): Set to config/nm-linux.h.
	* config/m32r/nm-linux.h: Delete file.

	* config/m68k/linux.mh (NAT_FILE): Set to config/nm-linux.h.
	* config/m68k/nm-linux.h: Delete file.

	* config/pa/linux.mh (NAT_FILE): Set to config/nm-linux.h.
	* config/pa/nm-linux.h: Delete file.

	* config/powerpc/linux.mh (NAT_FILE): Set to config/nm-linux.h.
	* config/powerpc/ppc64-linux.mh (NAT_FILE): Likewise.
	* config/powerpc/nm-linux.h: Delete file.

	* config/s390/s390.mh (NAT_FILE): Set to config/nm-linux.h.
	* config/s390/nm-linux.h: Delete file.

	* config/sparc/linux.mh (NAT_FILE): Set to config/nm-linux.h.
	* config/sparc/linux64.mh (NAT_FILE): Likewise.
	* config/sparc/nm-linux.h: Delete file.

	* Makefile.in (alpha-linux-nat.o): Update dependencies.
	(mips-linux-nat.o): Likewise.
@
text
@d2344 1
a2344 1
	$(gdbcore_h) $(inferior_h)
@


1.894
log
@	* core-aout.c: Delete file.
	* Makefile.in (ALLDEPFILES): Remove core-aout.c.
	(core-aout.o): Delete rule.
	* gdbcore.h (kernel_u_addr, KERNEL_U_ADDR): Remove.

        * config/alpha/nm-linux.h (U_REGS_OFFSET): Remove.

        * arm-linux-nat.c (arm_linux_kernel_u_size): Remove.
        * config/arm/nm-linux.h (U_REGS_OFFSET, KERNEL_U_SIZE,
        KERNEL_U_ADDR): Remove.

        * i386-linux-nat.c (register_u_addr, kernel_u_size): Remove.
        (cannot_fetch_register, cannot_store_register): Remove.
        (fetch_register): Inline cannot_fetch_register and register_addr.
        (store_register): Inline cannot_store_register and register_addr.
        * config/i386/linux.mh (NATDEPFILES): Remove core-aout.o.
        * config/i386/nm-linux.h (KERNEL_U_SIZE, KERNEL_U_ADDR,
        REGISTER_U_ADDR, CANNOT_FETCH_REGISTER, CANNOT_STORE_REGISTER):
        Remove.

        * m68klinux-nat.c (m68k_linux_register_u_addr, kernel_u_size): Remove.
        (fetch_register): Inline register_addr.
        (store_register): Inline register_addr.
        * config/m68k/linux.mh (NATDEPFILES): Remove core-aout.o.
        * config/m68k/nm-linux.h (KERNEL_U_SIZE, KERNEL_U_ADDR,
        U_REGS_OFFSET, REGISTER_U_ADDR): Remove.

        * config/mips/nm-irix5.h (REGISTER_U_ADDR): Remove.
        * config/mips/nm-linux.h (KERNEL_U_SIZE, U_REGS_OFFSET,
        REGISTER_U_ADDR): Remove.

        * hppa-linux-nat.c (register_addr): Rename to ...
        (hppa_linux_register_addr): ... this.  Make static.
        (fetch_register, store_register): Adapt callers.
        * config/pa/nm-linux.h (U_REGS_OFFSET): Remove.

        * ppc-linux-nat.c (kernel_u_size): Remove.
        * config/powerpc/nm-linux.h (KERNEL_U_SIZE, KERNEL_U_ADDR): Remove.

	* vax-nat.c (vax_kernel_u_addr, vax_register_u_addr): Make static.
	* config/vax/vax.mh (NATDEPFILES): Remove core-aout.o.
	(NAT_FILE): Remove.
	* config/vax/nm-vax.h: Delete file.
@
text
@d1719 2
a1720 1
alpha-linux-nat.o: alpha-linux-nat.c $(defs_h) $(target_h) $(linux_nat_h)
d2344 1
a2344 1
	$(inferior_h)
@


1.893
log
@	* Makefile.in: Adjust dependencies of m68klinux-tdep.c.
	* m68klinux-tdep.c (m68k_uclinux_sigcontext_reg_offset): New.
	(m68k_linux_sigcontext_reg_offset): Fix typo.
	(target_is_uclinux): New.
	(m68k_linux_inferior_created): New.
	(m68k_linux_get_sigtramp_info):  Check for uClinux or
	normal Linux.  Use m68k_uclinux_sigcontext_reg_offset for
	uClinux.
	(_initialize_m68k_linux_tdep): Register
	m68k_linux_inferior_created.
@
text
@d1436 1
a1436 1
	core-regset.c core-aout.c corelow.c \
a1878 2
core-aout.o: core-aout.c $(defs_h) $(gdbcore_h) $(value_h) $(regcache_h) \
	$(gdb_dirent_h) $(gdb_stat_h)
@


1.892
log
@	* mips-mdebug-tdep.c, mips-mdebug-tdep.h, ocd.c, ocd.h, ppc-bdm.c,
	remote-e7000.c, remote-hms.c, remote-utils.c, remote-utils.h,
	scm-exp.c, scm-lang.c, scm-lang.h, scm-tags.h, scm-valprint.c,
	ser-e7kpc.c, sh3-rom.c, stop-gdb.c: Delete.
	* Makefile.in: Remove references to deleted files.
	* README: Do not mention deleted ROM monitor interfaces.
	* defs.h (enum language): Delete language_scm.
	* expprint.c (print_subexp_standard): Do not handle OP_EXPRSTRING.
	(dump_subexp_body_standard): Likewise.
	* parse.c (operator_length_standard): Likewise.
	* expression.h (enum exp_opcode): Delete OP_EXPRSTRING.
	* remote-mips.c: Do not include remote-utils.h.
	* remote-sim.c: Likewise.  Use remote_debug instead of sr_get_debug
	throughout.
	* value.c: Do not include scm-lang.h.
	(unpack_long): Delete scm_unpack call.
	* config/h8300/h8300.mt, config/mips/embed.mt,
	config/powerpc/ppc-eabi.mt, config/powerpc/ppc-sim.mt,
	config/sh/embed.mt, config/sh/linux.mt: Remove references to
	deleted files.
	* NEWS: Mention removed files.

	* gdb.texinfo (Memory): Reference Remote Debugging chapter.
	(Character Sets, Caching Data of Remote Targets): Likewise.
	(Targets): Delete Remote node.  Move its text...
	(Debugging Remote Programs): ...to here.  Delete description
	of the "remote" command.
	(Remote configuration): Delete description of "set remotedevice"
	and "show remotedevice".
	(Embedded Processors): Delete H8/300, H8/500, and SH nodes.
@
text
@d2288 1
a2288 1
	$(solib_svr4_h)
@


1.891
log
@	* Makefile.in (SFILES): Remove hpacc-abi.c.
	(COMMON_OBS): Remove hpacc-abi.o.
	(ALLDEPFILES): Remove hpread.c and $(HPREAD_SOURCE).
	(hpacc-abi.o, hpread.o): Delete rules.
	* somread.c: Delete extern declarations from hpread.c.
	(som_symfile_read): Do not call do_pxdb or hpread_build_psymtabs.
	(som_symfile_finish): Do not call hpread_symfile_finish.
	(som_symfile_init): Do not call hpread_symfile_init.
	* config/pa/hppa64.mt (TDEPFILES): Remove hpread.o.
	* config/pa/hppahpux.mt (TDEPFILES): Likewise.
	* hpacc-abi.c, hpread.c: Deleted.

	* gdbint.texinfo (SOM): Correct location of the SOM reader.
@
text
@d418 1
a418 1
REMOTE_OBS = remote.o dcache.o remote-utils.o tracepoint.o ax-general.o ax-gdb.o remote-fileio.o
a554 1
	scm-exp.c scm-lang.c scm-valprint.c \
a759 1
mips_mdebug_tdep_h = mips-mdebug-tdep.h
a770 1
ocd_h = ocd.h
a783 1
remote_utils_h = remote-utils.h $(target_h)
a785 2
scm_lang_h = scm-lang.h $(scm_tags_h)
scm_tags_h = scm-tags.h
d897 1
a897 1
	dcache.h remote-utils.h top.h solib-som.h
a956 1
	scm-exp.o scm-lang.o scm-valprint.o \
a1239 6
# A Mach 3.0 program to force gdb back to command level

stop-gdb: stop-gdb.o
	${CC_LD} $(GLOBAL_CFLAGS) $(LDFLAGS) -o stop-gdb \
	stop-gdb.o $(CLIBS) $(LOADLIBES)

d1479 1
a1479 2
	remote-e7000.c \
	remote-hms.c remote-m32r-sdi.c remote-mips.c \
d1481 1
a1481 1
	remote-utils.c dcache.c \
a2350 4
mips-mdebug-tdep.o: mips-mdebug-tdep.c $(defs_h) $(frame_h) $(mips_tdep_h) \
	$(trad_frame_h) $(block_h) $(symtab_h) $(objfiles_h) $(elf_mips_h) \
	$(elf_bfd_h) $(gdb_assert_h) $(frame_unwind_h) $(frame_base_h) \
	$(mips_mdebug_tdep_h) $(mdebugread_h)
a2413 3
ocd.o: ocd.c $(defs_h) $(gdbcore_h) $(gdb_string_h) $(frame_h) $(inferior_h) \
	$(bfd_h) $(symfile_h) $(target_h) $(exceptions_h) $(gdbcmd_h) \
	$(objfiles_h) $(gdb_stabs_h) $(serial_h) $(ocd_h) $(regcache_h)
a2426 4
ppc-bdm.o: ppc-bdm.c $(defs_h) $(gdbcore_h) $(gdb_string_h) $(frame_h) \
	$(inferior_h) $(bfd_h) $(symfile_h) $(target_h) $(gdbcmd_h) \
	$(objfiles_h) $(gdb_stabs_h) $(serial_h) $(ocd_h) $(ppc_tdep_h) \
	$(regcache_h) $(gdb_assert_h)
a2492 4
remote-e7000.o: remote-e7000.c $(defs_h) $(gdbcore_h) $(gdbarch_h) \
	$(inferior_h) $(target_h) $(value_h) $(command_h) $(gdb_string_h) \
	$(exceptions_h) $(gdbcmd_h) $(serial_h) $(remote_utils_h) \
	$(symfile_h) $(regcache_h)
d2502 1
a2502 1
	$(remote_utils_h) $(gdb_string_h) $(gdb_stat_h) $(regcache_h) \
d2506 1
a2506 1
	$(gdb_callback_h) $(gdb_remote_sim_h) $(remote_utils_h) $(command_h) \
a2508 3
remote-utils.o: remote-utils.c $(defs_h) $(gdb_string_h) $(gdbcmd_h) \
	$(target_h) $(serial_h) $(gdbcore_h) $(inferior_h) $(remote_utils_h) \
	$(regcache_h)
a2530 9
scm-exp.o: scm-exp.c $(defs_h) $(symtab_h) $(gdbtypes_h) $(expression_h) \
	$(parser_defs_h) $(language_h) $(value_h) $(c_lang_h) $(scm_lang_h) \
	$(scm_tags_h)
scm-lang.o: scm-lang.c $(defs_h) $(symtab_h) $(gdbtypes_h) $(expression_h) \
	$(parser_defs_h) $(language_h) $(value_h) $(c_lang_h) $(scm_lang_h) \
	$(scm_tags_h) $(source_h) $(gdb_string_h) $(gdbcore_h) $(infcall_h)
scm-valprint.o: scm-valprint.c $(defs_h) $(symtab_h) $(gdbtypes_h) \
	$(expression_h) $(parser_defs_h) $(language_h) $(value_h) \
	$(scm_lang_h) $(valprint_h) $(gdbcore_h) $(c_lang_h)
a2536 1
ser-e7kpc.o: ser-e7kpc.c $(defs_h) $(serial_h) $(gdb_string_h)
a2548 3
sh3-rom.o: sh3-rom.c $(defs_h) $(gdbcore_h) $(target_h) $(monitor_h) \
	$(serial_h) $(srec_h) $(arch_utils_h) $(regcache_h) $(gdb_string_h) \
	$(sh_tdep_h)
a2701 1
stop-gdb.o: stop-gdb.c $(defs_h)
d2790 1
a2790 1
	$(language_h) $(scm_lang_h) $(demangle_h) $(doublest_h) \
@


1.890
log
@gdb/

	* configure.tgt: Move mips*-*-pe and sh*-*-pe to
	the obsoletion stanza.
	* NEWS: Mention deleted targets.

	* config/sh/tm-wince.h: Remove.
	* config/sh/wince.mt: Remove.
	* config/mips/tm-wince.h: Remove.
	* config/mips/wince.mt: Remove.

	* wince.c: Remove.
	* wince-stub.c: Remove.
	* wince-stub.h: Remove.
	* Makefile.in (wince.o): Remove rule.
	(wince-stub.o): Likewise.

	* mips-tdep.c (mips_next_pc): Make static.
	* mips-tdep.h (mips_next_pc): Remove declaration.
	* arm-tdep.c (arm_pc_is_thumb): Make static.
	(thumb_get_next_pc): Likewise.
	(arm_get_next_pc): Likewise.
	* arm-tdep.h (arm_pc_is_thumb_dummy): Remove declaration.
	(arm_pc_is_thumb): Likewise.
	(thumb_get_next_pc): Likewise.
	(arm_get_next_pc): Likewise.

gdb/doc/

	* gdb.texinfo (WinCE): Delete obsolete subsection.
@
text
@a540 1
	hpacc-abi.c \
d973 1
a973 1
	gnu-v2-abi.o gnu-v3-abi.o hpacc-abi.o cp-abi.o cp-support.o \
a1457 1
	hpread.c \
d1486 1
a1486 1
	somread.c solib-som.c $(HPREAD_SOURCE) \
a2067 2
hpacc-abi.o: hpacc-abi.c $(defs_h) $(value_h) $(gdb_regex_h) $(gdb_string_h) \
	$(gdbtypes_h) $(gdbcore_h) $(cp_abi_h) $(gnu_v2_abi_h)
a2093 4
hpread.o: hpread.c $(defs_h) $(bfd_h) $(gdb_string_h) $(hp_symtab_h) \
	$(syms_h) $(symtab_h) $(symfile_h) $(objfiles_h) $(buildsym_h) \
	$(complaints_h) $(gdb_stabs_h) $(gdbtypes_h) $(demangle_h) \
	$(solib_som_h) $(gdb_assert_h) $(hppa_tdep_h) $(gdb_string_h)
@


1.890.2.1
log
@Daniel Jacobowitz' update to Michael Snyder's reverse debugging patches
@
text
@d555 1
a555 1
	regcache.c reggroups.c remote.c remote-fileio.c reverse.c \
d955 1
a955 2
	exec.o reverse.o \
	bcache.o objfiles.o observer.o minsyms.o maint.o demangle.o \
a2548 2
reverse.o: reverse.c $(defs_h) $(gdb_string_h) $(target_h) $(cli_cmds_h) \
	$(cli_decode_h) $(top_h)
@


1.889
log
@	* MAINTAINERS: Remove d10v entry.
	* Makefile.in (SFILES): Remove dwarfread.c.
	(COMMON_OBS): Remove dwarfread.o.
	(gdb_sim_d10v_h, abug-rom.o, cpu32bug-rom.o, d10v-tdep.o, dwarfread.o)
	(remote-est.o, rom68k-rom.o): Delete.
	* NEWS: Mention removal of d10v, target abug, target cpu32bug,
	target est, target rom68k, and DWARF 1.
	* configure.tgt: Mark d10v as removed.
	* dwarf2read.c: Doc update.
	* elfread.c (struct elfinfo): Remove dboffset, dbsize, lnoffset,
	and lnsize.
	(elf_locate_sections): Do not set them.
	(elf_symfile_read): Do not call dwarf_build_psymtabs.
	* symfile.h (dwarf_build_psymtabs): Delete prototype.
	* config/m68k/monitor.mt (TDEPFILES): Prune.
	* abug-rom.c, cpu32bug-rom.c, d10v-tdep.c, dwarfread.c,
	remote-est.c, rom68k-rom.c, config/d10v/d10v.mt: Delete.

	* gdb.texinfo (M68K): Remove obsolete ROM monitors.
	* gdbint.texinfo (DWARF 1): Delete section and other dwarfread.c
	references.

	* gdb.asm/asm-source.exp: Remove d10v case.
	* lib/gdb.exp (skip_cplus_tests): Likewise.
	* gdb.asm/d10v.inc: Deleted.
@
text
@a835 1
wince_stub_h = wince-stub.h
a2867 5
wince.o: wince.c $(defs_h) $(frame_h) $(inferior_h) $(target_h) \
	$(exceptions_h) $(gdbcore_h) $(command_h) $(buildsym_h) $(symfile_h) \
	$(objfiles_h) $(gdb_string_h) $(gdbthread_h) $(gdbcmd_h) \
	$(wince_stub_h) $(regcache_h) $(mips_tdep_h)
wince-stub.o: wince-stub.c $(wince_stub_h)
@


1.888
log
@	* Makefile.in (SFILES): Remove nlmread.c.
	(COMMON_OBS): Remove nlmread.o.
	(nlmread.o): Delete rule.
	* README: Delete reference to remote-st.c.
	* acinclude.m4 (CY_AC_TCL_LYNX_POSIX): Delete.
	* defs.h (enum gdb_osabi): Delete GDB_OSABI_NETWARE and
	GDB_OSABI_LYNXOS.
	* i386-tdep.c (i386_nw_init_abi, i386_nlm_osabi_sniffer): Delete.
	(_initialize_i386_tdep): Do not reference them.
	* nlmread.c: Delete file.
	* osabi.c (gdb_osabi_names): Remove NetWare and LynxOS.
	* target.c: Doc update.
	* thread.c: Delete commented include.
	* config/alpha/tm-alpha.h: Doc update.

	* gdb.texinfo (Startup): Delete references to some alternate
	names for .gdbinit.
	(Thread): Remove LynxOS reference.
	(Tandem ST2000): Delete target-specific documentation.
	* gdbint.texinfo (Symbol Handling): Remove mention of NLM.
	(Target Architecture Definition): Remove mention of GDB_OSABI_NETWARE
	and GDB_OSABI_LYNXOS.

	* config/netware.exp: Delete file.
@
text
@d535 1
a535 1
	dwarfread.c dwarf2expr.c dwarf2loc.c dwarf2read.c dwarf2-frame.c \
a613 1
gdb_sim_d10v_h = $(INCLUDE_DIR)/gdb/sim-d10v.h
d958 1
a958 1
	dwarfread.o dwarf2read.o mipsread.o stabsread.o corefile.o \
a1706 2
abug-rom.o: abug-rom.c $(defs_h) $(gdbcore_h) $(target_h) $(monitor_h) \
	$(serial_h) $(regcache_h) $(m68k_tdep_h)
a1917 2
cpu32bug-rom.o: cpu32bug-rom.c $(defs_h) $(gdbcore_h) $(target_h) \
	$(monitor_h) $(serial_h) $(regcache_h) $(m68k_tdep_h)
a1934 1
# OBSOLETE d10v-tdep.o: d10v-tdep.c
a1975 3
dwarfread.o: dwarfread.c $(defs_h) $(symtab_h) $(gdbtypes_h) $(objfiles_h) \
	$(elf_dwarf_h) $(buildsym_h) $(demangle_h) $(expression_h) \
	$(language_h) $(complaints_h) $(gdb_string_h)
a2530 2
remote-est.o: remote-est.c $(defs_h) $(gdbcore_h) $(target_h) $(monitor_h) \
	$(serial_h) $(regcache_h) $(m68k_tdep_h)
a2549 2
rom68k-rom.o: rom68k-rom.c $(defs_h) $(gdbcore_h) $(target_h) $(monitor_h) \
	$(serial_h) $(regcache_h) $(value_h) $(m68k_tdep_h)
@


1.887
log
@        * Makefile.in (varobj.o): Add missing dependency.
@
text
@a550 1
	nlmread.c \
d971 1
a971 1
	nlmread.o serial.o mdebugread.o top.o utils.o \
a2425 2
nlmread.o: nlmread.c $(defs_h) $(bfd_h) $(symtab_h) $(symfile_h) \
	$(objfiles_h) $(buildsym_h) $(stabsread_h) $(block_h)
@


1.886
log
@	* Makefile.in (coff_solib_h, coff-solib.o, i386v-nat.o, lynx-nat.o)
	(remote-st.o, uw-thread.o): Delete.
	(HFILES_NO_SRCDIR, ALLDEPFILES): Update.
	* configure.host: Move hppa*-*-hiux*, i[34567]86-ncr-*,
	i[34567]86-*-dgux*, i[34567]86-*-lynxos*, i[34567]86-*-sco3.2v5*,
	i[34567]86-*-sco3.2v4*, i[34567]86-*-sco*, i[34567]86-*-sysv4.2*,
	i[34567]86-*-sysv4*, i[34567]86-*-sysv5*, i[34567]86-*-unixware2*,
	i[34567]86-*-unixware*, i[34567]86-*-sysv*, i[34567]86-*-isc*, and
	rs6000-*-lynxos* to an obsoletion stanza.
	* configure.tgt: Move hppa*-*-hiux*, i[34567]86-ncr-*,
	i[34567]86-*-lynxos*, m68*-cisco*-*, m68*-tandem-*, m68*-*-os68k*,
	and rs6000-*-lynxos* to an obsoletion stanza.  Do not mention
	i[34567]86-*-netware*.
	* NEWS: Mention deleted targets.

	* coff-solib.c, coff-solib.h, i386v-nat.c, lynx-nat.c, remote-st.c,
	uw-thread.c, config/nm-lynx.h, config/i386/i386sco.mh,
	config/i386/i386sco4.mh, config/i386/i386sco5.mh, config/i386/i386v.mh,
	config/i386/i386v4.mh, config/i386/i386v42mp.mh,
	config/i386/ncr3000.mh, config/i386/ncr3000.mt,
	config/i386/nm-i386sco.h, config/i386/nm-i386sco4.h,
	config/i386/nm-i386sco5.h, config/i386/nm-i386v.h,
	config/i386/nm-i386v4.h, config/i386/nm-i386v42mp.h,
	config/m68k/cisco.mt, config/m68k/os68k.mt, config/m68k/st2000.mt,
	config/m68k/tm-cisco.h, config/m68k/tm-os68k.h,
	config/rs6000/rs6000lynx.mh, config/rs6000/rs6000lynx.mt,
	config/rs6000/tm-rs6000ly.h: Delete files.
@
text
@d2864 2
a2865 2
	$(frame_h) $(language_h) $(wrapper_h) $(gdbcmd_h) $(gdb_assert_h) \
	$(gdb_string_h) $(varobj_h) $(vec_h)
@


1.885
log
@	* dwarf2-frame.c (dwarf2_frame_eh_frame_regnum): Rename to...
	(dwarf2_frame_adjust_regnum): ...this.  Make static.  Add eh_frame_p
	argument.  Update all callers.
	(struct dwarf2_frame_ops): Replace eh_frame_regnum with adjust_regnum.
	(dwarf2_frame_set_eh_frame_regnum): Rename to...
	(dwarf2_frame_set_adjust_regnum): ...this.  Update argument type.
	* dwarf2frame.h (dwarf2_frame_set_eh_frame_regnum): Rename to...
	(dwarf2_frame_set_adjust_regnum): ...this.
	(dwarf2_frame_eh_frame_regnum): Delete prototype.
	* rs6000-tdep.c: Include "dwarf2-frame.h".
	(rs6000_adjust_frame_regnum): Define.
	(rs6000_gdbarch_init): Enable use of DWARF CFI frame unwinder.
	Register rs6000_adjust_frame_regnum.

	* Makefile.in (rs6000-tdep.o): Update dependencies.
@
text
@a677 1
coff_solib_h = coff-solib.h
d893 1
a893 1
HFILES_NO_SRCDIR = bcache.h buildsym.h call-cmds.h coff-solib.h defs.h \
a1452 1
	coff-solib.c \
d1463 1
a1463 1
	i386-tdep.c i386v-nat.c i386-linux-nat.c \
a1475 1
	lynx-nat.c \
d1500 1
a1500 1
	remote-st.c remote-utils.c dcache.c \
a1893 2
coff-solib.o: coff-solib.c $(defs_h) $(frame_h) $(bfd_h) $(gdbcore_h) \
	$(symtab_h) $(symfile_h) $(objfiles_h)
a2171 3
i386v-nat.o: i386v-nat.c $(defs_h) $(frame_h) $(inferior_h) $(language_h) \
	$(gdbcore_h) $(gdb_stat_h) $(floatformat_h) $(target_h) \
	$(i386_tdep_h)
a2267 2
lynx-nat.o: lynx-nat.c $(defs_h) $(frame_h) $(inferior_h) $(target_h) \
	$(gdbcore_h) $(regcache_h)
a2560 2
remote-st.o: remote-st.c $(defs_h) $(gdbcore_h) $(target_h) $(gdb_string_h) \
	$(serial_h) $(regcache_h)
a2842 2
uw-thread.o: uw-thread.c $(defs_h) $(gdbthread_h) $(target_h) $(inferior_h) \
	$(regcache_h) $(gregset_h)
@


1.884
log
@Add "make pdf" and "make install-pdf", from Brooks Moses
<brooks.moses@@codesourcery.com>.
@
text
@d2589 1
a2589 1
	$(frame_unwind_h) $(frame_base_h) $(rs6000_tdep_h)
@


1.883
log
@	* shnbsd-tdep.c: Include "regset.h", "gdb_assert.h" and
	"gdb_string.h".  Don't include "nbsd-tdep.h".
	(SIZEOF_STRUCT_REG): Remove.
	(SHNBSD_SIZEOF_GREGS): New.
	(shnbsd_supply_gregset, shnbsd_collect_gregset)
	(shnbsd_regset_from_core_section): New functions.
	(fetch_core_registers, fetch_elfcore_registers): Remove functions.
	(shnbsd_supply_reg, shnbsd_fill_reg): Simply call
	shnbsd_supply_gregset, shnbsd_collect_gregset.
	(shnbsd_gregset): New variable.
	(shnbsd_init_abi): Set regset_from_core_section.
	(GDB_OSABI_NETBSD_CORE): New define.
	(shnbsd_core_osabi_sniffer): New function.
	(_initialize_shnbsd_tdep): Register shnbsd_core_osabi_sniffer.
	* Makefile.in (shnbsd-tdep.o): Update dependencies.
	* config/sh/nbsd.mt (TDEPFILES): Add corelow.o, remove
	nbsd-tdep.o.
	* config/sh/obsd.mt (TDEPFILES): Remove nbsd-tdep.o.
@
text
@d45 1
d439 1
d1060 1
a1060 1
info dvi install-info clean-info html install-html: force
@


1.882
log
@	* config/powerpc/linux.mt (DEPRECATED_TM_FILE): Set to tm-ppc-eabi.h.
	* config/powerpc/tm-linux.h: Delete file.
	* config/powerpc/tm-ppc-eabi.h: Do not include "rs6000/tm-rs6000.h".
	(PROCESS_LINENUMBER_HOOK): Do not undefine.
	(TEXT_SEGMENT_BASE): Do not redefine.
	* config/rs6000/nm-rs6000.h (CHILD_SPECIAL_WAITSTATUS): Move here
	from config/rs6000/tm-rs6000.h.
	(TARGET_CREATE_INFERIOR_HOOK, rs6000_create_inferior): Likewise.
	* config/rs6000/tm-rs6000.h (struct frame_info): Remove declaration.
	(TEXT_SEGMENT_BASE): Remove.
	(IN_SOLIB_RETURN_TRAMPOLINE): Remove.
	(rs6000_in_solib_return_trampoline): Remove.
	(SKIP_TRAMPOLINE_CODE): Remove.
	(rs6000_skip_trampoline_code): Remove.
	(CHILD_SPECIAL_WAITSTATUS): Move to config/rs6000/nm-rs6000.h.
	(TARGET_CREATE_INFERIOR_HOOK, rs6000_create_inferior): Likewise.
	(FP0_REGNUM): Remove.
	(rs6000_find_toc_address_hook): Move to rs6000-tdep.h.
	(rs6000_set_host_arch_hook): Remove.
	* Makefile.in (rs6000-nat.o): Add dependency on $(rs6000_tdep_h).
	(rs6000-aix-tdep.o): Add dependency on $(ppc_tdep_h).
	* ppc-tdep.h (struct gdbarch_tdep): Add field text_segment_base.
	* rs6000-aix-tdep.c: Include "ppc-tdep.h".
	(rs6000_aix_init_osabi): Set text_segment_base tdep field.
	* rs6000-nat.c: Include "rs6000-tdep.h".
	(exec_one_dummy_insn): Replace TEXT_SEGMENT_BASE by tdep field.
	(set_host_arch): Rename to ...
	(rs6000_create_inferior): ... this.  Make public.
	(_initialize_core_rs6000): Do not set rs6000_set_host_arch_hook.
	* rs6000-tdep.c (rs6000_set_host_arch_hook): Remove.
	(rs6000_create_inferior): Remove.
	(branch_dest): Replace TEXT_SEGMENT_BASE by tdep field.
	(rs6000_gdbarch_init): Call set_gdbarch_fp0_regnum,
	set_gdbarch_in_solib_return_trampoline, and
	set_gdbarch_skip_trampoline_code.
	* rs6000-tdep.h (rs6000_find_toc_address_hook): Move here
	from config/rs6000/tm-rs6000.h.
@
text
@d2636 3
a2638 3
shnbsd-tdep.o: shnbsd-tdep.c $(defs_h) $(gdbcore_h) $(regcache_h) $(value_h) \
	$(osabi_h) $(solib_svr4_h) $(nbsd_tdep_h) $(sh_tdep_h) \
	$(shnbsd_tdep_h)
@


1.881
log
@	* Makefile.in (XMLFILES): Include $(TDEP_XML).
	(filenames_h): New variable.
	(clean): Clean up xml-builtin.c and stamp-xml.
	(arm-linux-nat.o): Update.
	* config/arm/linux.mh (TDEP_XML): Define.
	* arm-linux-nat.c (PTRACE_GETWMMXREGS, PTRACE_SETWMMXREGS): Define.
	(arm_linux_has_wmmx_registers): New.
	(GET_THREAD_ID): Fix typo.
	(IWMMXT_REGS_SIZE): Define.
	(fetch_wmmx_regs, store_wmmx_regs): New.
	(arm_linux_fetch_inferior_registers): Use fetch_wmmx_regs.
	(arm_linux_store_inferior_registers): Use store_wmmx_regs.
	(super_xfer_partial, arm_linux_xfer_partial): New.
	(_initialize_arm_linux_nat): Use them.
	* xml-support.c (fetch_xml_builtin): Move outside HAVE_LIBEXPAT.
	(xml_builtin_xfer_partial): New function.
	* xml-support.h (xml_builtin_xfer_partial): New prototype.
	* NEWS: Update mention of iWMMXt support.
@
text
@d2579 1
a2579 1
	$(ppc_tdep_h) $(exec_h) $(gdb_stat_h)
d2588 2
a2589 1
rs6000-aix-tdep.o: rs6000-aix-tdep.c $(defs_h) $(osabi_h) $(rs6000_tdep_h)
@


1.880
log
@Add support for new target, Toshiba Media Processor (MeP).
@
text
@d404 2
a405 1
XMLFILES = $(srcdir)/features/gdb-target.dtd $(srcdir)/features/xinclude.dtd
d621 1
d1293 1
d1811 2
a1812 1
	$(target_h) $(linux_nat_h) $(gdb_proc_service_h) $(arm_linux_tdep_h)
@


1.879
log
@	* Makefile.in (symfile.o): Update dependencies.
@
text
@d595 1
d607 2
d2363 7
@


1.878
log
@gdb/
	* MAINTAINERS: Disable -Werror for cris simulator.  Build
	sparc64-solaris2.10 instead of the broken sparc-elf.
	* solib-frv.c: Include "solib.h".
	* Makefile.in (solib-frv.o): Update.
	* mt-tdep.c (mt_gdbarch_init): Correct typo in floatformats patch.
	* xtensa-tdep.c (xtensa_regset_from_core_section): Cast size_t to int.
	(xtensa_frame_this_id, xtensa_frame_prev_register)
	(xtensa_push_dummy_call): Use %p.
sim/v850/
	* Makefile.in (interp.o): Uncomment and update.
@
text
@d2775 1
a2775 1
	$(parser_defs_h)
@


1.877
log
@	* avr-tdep.c, hppa-tdep.c, hppabsd-tdep.c, i386-tdep.c,
	ia64-tdep.c, m68k-tdep.c, mips-linux-tdep.c, ppcobsd-tdep.c,
	sparc-linux-tdep.c: Include "gdbtypes.h" instead of "floatformat.h".
	* Makefile.in (avr-tdep.o, hppabsd-tdep.o, hppa-tdep.o, i386-tdep.o)
	(ia64-tdep.o, m68k-tdep.o, mips-linux-tdep.o, ppcobsd-tdep.o)
	(sparc-linux-tdep.o): Update.
@
text
@d2645 1
a2645 1
	$(language_h) $(command_h) $(gdbcmd_h) $(elf_frv_h)
@


1.876
log
@	* Makefile.in (arm-tdep.o, eval.o, target-descriptions.o)
	(xml-tdesc.o): Update.
	* xml-support.c: Add a comment.
	(gdb_xml_enums_boolean): New variable.
	(gdb_xml_parse_attr_enum): Use strcasecmp.
	* xml-support.h (gdb_xml_enums_boolean): Declare.
	* xml-tdesc.c (struct tdesc_parsing_data): Record current_feature,
	next_regnum, and current_union.
	(tdesc_start_feature, tdesc_start_reg, tdesc_start_union)
	(tdesc_end_union, tdesc_start_field, tdesc_start_vector)
	(field_attributes, union_children, reg_attributes, union_attributes)
	(vector_attributes, feature_attributes, feature_children): New.
	(target_children): Make static.  Add <feature>.
	(tdesc_elements): Make static.
	* target-descriptions.c (struct tdesc_reg, tdesc_reg_p, type_p)
	(struct tdesc_feature, tdesc_feature_p): New types.
	(struct target_desc): Add features member.
	(struct tdesc_arch_data, tdesc_data): New.
	(target_find_description): Clarify error message.  Warn about
	ignored register descriptions.
	(tdesc_has_registers, tdesc_find_feature, tdesc_feature_name)
	(tdesc_named_type, tdesc_data_init, tdesc_data_alloc)
	(tdesc_data_cleanup, tdesc_numbered_register)
	(tdesc_numbered_register_choices, tdesc_find_register)
	(tdesc_register_name, tdesc_register_type)
	(tdesc_remote_register_number, tdesc_register_reggroup_p)
	(set_tdesc_pseudo_register_name, set_tdesc_pseudo_register_type)
	(set_tdesc_pseudo_register_reggroup_p, tdesc_use_registers)
	(tdesc_free_reg, tdesc_create_reg, tdesc_free_feature)
	(tdesc_create_feature, tdesc_record_type): New.
	(free_target_description): Free features.
	(_initialize_target_descriptions): Initialize tdesc_data.
	* arch-utils.c (default_remote_register_number): New.
	* arch-utils.h (default_remote_register_number): New prototype.
	* target-descriptions.h (set_tdesc_pseudo_register_name)
	(set_tdesc_pseudo_register_type, set_tdesc_pseudo_register_reggroup_p)
	(tdesc_use_registers, tdesc_data_alloc, tdesc_data_cleanup)
	(tdesc_numbered_register, tdesc_numbered_register_choices)
	(tdesc_has_registers, tdesc_find_feature, tdesc_feature_name)
	(tdesc_named_type, tdesc_create_feature, tdesc_record_type)
	(tdesc_create_reg): Declare.
	* gdbarch.sh (remote_register_number): New entry.
	* gdbarch.c, gdbarch.h: Regenerate.
	* remote.c (init_remote_state): Use gdbarch_remote_register_number.
	* features/gdb-target.dtd: Add feature, reg, vector, union, and field.

	* arm-tdep.c (arm_register_aliases): New.
	(arm_register_name_strings): Rename to...
	(arm_register_names): ...this.  Make const.  Delete the old version.
	(current_option, arm_register_byte): Delete.
	(set_disassembly_style): Simplify.  Do not adjust arm_register_names.
	(value_of_arm_user_reg): New.
	(arm_gdbarch_init): Verify any described registers.  Call
	tdesc_use_registers.  Don't use arm_register_byte.  Create aliases
	for standard register names.
	(_initialize_arm_tdep): Do not adjust arm_register_names.
	* user-regs.c (struct user_reg): Add baton member.
	(append_user_reg, user_reg_add_builtin, user_regs_init)
	(user_reg_add, value_of_user_reg): Use a baton for user
	register functions.
	* std-regs.c: Update.
	* user-regs.h (user_reg_read_ftype, user_reg_add_builtin)
	(user_reg_add): Add baton argument.
	* NEWS: Mention target description register support.
	* features/arm-core.xml, features/arm-fpa.xml: New.
	* eval.c (evaluate_subexp_standard): Allow ptype $register
	when the program is not running.

	* gdb.texinfo (-target-disconnect): Use @@smallexample.
	(Requirements): Add anchor for Expat.  Update description.
	(Target Descriptions): Mention Expat.
	(Target Description Format): Document new elements.  Use
	@@smallexample.
	(Predefined Target Types, Standard Target Features): New sections.
	* doc/gdbint.texinfo (Target Descriptions): New section.

	* gdb.xml/single-reg.xml, gdb.xml/tdesc-regs.exp,
	gdb.xml/core-only.xml, gdb.xml/extra-regs.xml: New files.
@
text
@d1834 1
a1834 1
	$(gdb_string_h) $(dis_asm_h)
d2084 1
a2084 1
	$(hppa_tdep_h) $(solib_svr4_h)
d2104 1
a2104 1
	$(hppa_tdep_h)
d2160 1
a2160 1
	$(dummy_frame_h) $(dwarf2_frame_h) $(doublest_h) $(floatformat_h) \
d2186 1
a2186 1
	$(cp_abi_h)
d2325 1
a2325 1
	$(frame_base_h) $(frame_unwind_h) $(floatformat_h) $(symtab_h) \
d2376 1
a2376 1
	$(tramp_frame_h) $(floatformat_h) $(solib_h) $(symtab_h) \
d2488 1
a2488 1
ppcobsd-tdep.o: ppcobsd-tdep.c $(defs_h) $(arch_utils_h) $(floatformat_h) \
d2717 1
a2717 1
	$(floatformat_h) $(frame_h) $(frame_unwind_h) $(regset_h) \
@


1.875
log
@        * sparcnbsd-tdep.c: Include "gdbtypes.h" instead of "floatformat.h".
        * Makefile.in (sparcnbsd-tdep.o): Update dependencies.
@
text
@d1826 2
a1827 1
	$(dwarf2_frame_h) $(gdbtypes_h) $(prologue_value_h)
d1990 1
a1990 1
	$(uiout_h)
d2797 2
a2798 1
	$(gdbcmd_h) $(gdb_assert_h)
d2897 2
a2898 1
	$(xml_tdesc_h) $(xml_support_h) $(filenames_h) $(gdb_assert_h)
@


1.874
log
@	* Makefile.in (XMLFILES): New.
	(COMMON_OBS): Add xml-builtin.o.
	(xml-builtin.c, stamp-xml): New rules.
	(xml-tdesc.o): Update.
	* features/feature_to_c.sh: New file.
	* xml-support.c (MAX_XINCLUDE_DEPTH): Define.
	(struct gdb_xml_parser): Add dtd_name and is_xinclude.
	(gdb_xml_start_element): Initialize scope after possibly reallocating
	scopes.  Move cleanup later.  Handle the XInclude description
	specially.
	(gdb_xml_end_element): Only parse the body if there is a current element.
	Call XML_DefaultCurrent if there is no element.
	(gdb_xml_fetch_external_entity, gdb_xml_use_dtd): New.
	(struct xinclude_parsing_data, xinclude_start_include)
	(xinclude_end_include, xml_xinclude_default)
	(xml_xinclude_start_doctype, xml_xinclude_end_doctype)
	(xml_xinclude_xml_decl, xml_xinclude_cleanup, xinclude_attributes)
	(xinclude_elements, xml_process_xincludes, fetch_xml_builtin): New.
	* xml-support.h (xml_fetch_another, xml_process_xincludes)
	(fetch_xml_builtin, xml_builtin, gdb_xml_use_dtd): New declarations.
	* xml-tdesc.c (tdesc_parse_xml): Add fetcher_baton argument.  Expand
	XInclude directives.  Use the compiled in DTD.
	(fetch_xml_from_file): Add baton argument.  Treat it as a containing
	directory name.  Do not warn here.
	(file_read_description_xml): Update call.  Warn here instead.  Pass
	a dirname as baton.
	(fetch_available_features_from_target): New.
	(target_read_description_xml): Use it.
	* features/gdb-target.dtd: Add copyright notice.  Use xinclude.dtd
	to handle XInclude.
	* features/xinclude.dtd: New file.

	* gdb.xml/bad-include.xml, gdb.xml/inc-2.xml, gdb.xml/inc-body.xml,
	gdb.xml/includes.xml, gdb.xml/tdesc-xinclude.exp: New files.

	* gdb.texinfo (Target Description Format): Add section on XInclude.
@
text
@d2724 2
a2725 2
sparcnbsd-tdep.o: sparcnbsd-tdep.c $(defs_h) $(floatformat_h) $(frame_h) \
	$(frame_unwind_h) $(gdbcore_h) $(osabi_h) $(regcache_h) $(regset_h) \
@


1.873
log
@XML feature description support.

	* NEWS: Mention target descriptions, "set tdesc filename",
	"unset tdesc filename", "show tdesc filename", and
	qXfer:features:read.
	* arch-utils.c (choose_architecture_for_target): New function.
	(gdbarch_info_fill): Call it.
	* target-descriptions.c (struct property): Make members non-const.
	(struct target_desc): Add arch member.
	(target_description_filename): New variable.
	(target_find_description): Try via XML first.
	(tdesc_architecture): New.
	(free_target_description, make_cleanup_free_target_description): New.
	(set_tdesc_property): Call xstrdup.
	(set_tdesc_architecture, tdesc_set_cmdlist, tdesc_show_cmdlist)
	(tdesc_unset_cmdlist, unset_tdesc_cmd, unset_tdesc_filename_cmd)
	(set_tdesc_cmd, show_tdesc_cmd, set_tdesc_filename_cmd)
	(show_tdesc_filename_cmd, _initialize_target_descriptions): New.
	* target-descriptions.h (tdesc_architecture)
	(make_cleanup_free_target_description, set_tdesc_architecture): New
	prototypes.
	* Makefile.in (SFILES): Add xml-tdesc.c.
	(COMMON_OBS): Add xml-tdesc.o.
	(target-descriptions.o): Update.
	(xml-tdesc.o): New rule.
	* xml-tdesc.c, xml-tdesc.h: New files.
	* remote.c (PACKET_qXfer_features): New enum.
	(remote_protocol_features): Add qXfer:features:read.
	(remote_xfer_partial): Handle TARGET_OBJECT_AVAILABLE_FEATURES.
	(_initialize_remote): Register qXfer:features:read.
	* target.h (enum target_object): Add TARGET_OBJECT_AVAILABLE_FEATURES.
	* features/gdb-target.dtd: New file.

	* linux-i386-low.c (the_low_target): Set arch_string.
	* linux-x86-64-low.c (the_low_target): Likewise.
	* linux-low.c (linux_arch_string): New.
	(linux_target_ops): Add it.
	* linux-low.h (struct linux_target_ops): Add arch_string.
	* server.c (write_qxfer_response): Use const void * for DATA.
	(get_features_xml): New.
	(handle_query): Handle qXfer:features:read.  Report it for qSupported.
	* target.h (struct target_ops): Add arch_string method.

	* gdb.texinfo (Target Descriptions): New section.
	(General Query Packets): Add QPassSignals anchor.  Mention
	qXfer:features:read under qSupported.  Expand mentions of
	qXfer:memory-map:read and QPassSignals.  Document
	qXfer:features:read.
@
text
@d403 3
d978 1
a978 1
	target-descriptions.o target-memory.o xml-tdesc.o
d1687 13
d2895 1
a2895 1
	$(xml_tdesc_h) $(xml_support_h) $(gdb_assert_h)
@


1.872
log
@Copyright updates for 2007.
@
text
@d566 1
a566 1
	xml-support.c
d975 1
a975 1
	target-descriptions.o target-memory.o
d2779 2
a2780 1
	$(target_h) $(target_descriptions_h) $(vec_h) $(gdb_assert_h)
d2878 2
@


1.871
log
@        * ada-lang.c: Add include of source.h.
        (is_known_support_routine): Improve the check verifying that the file
        associated to this frame exists.
        * Makefile.in (ada-lang.o): Add dependency on source.h.
@
text
@d1 2
a2 2
# Copyright (C) 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997,
# 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007
@


1.870
log
@	* memory-map.c (struct_memory_map_parsing_data): Remove most
	members.  Make property_name an array.
	(free_memory_map_parsing_data, memory_map_start_element)
	(memory_map_end_element, memory_map_character_data): Delete.
	(memory_map_start_memory, memory_map_end_memory)
	(memory_map_start_property, memory_map_end_property): New functions.
	(property_attributes, memory_children, memory_type_enum)
	(memory_attributes, memory_map_children, memory_map_elements): New.
	(parse_memory_map): Rewrite.
	* xml-support.c (debug_xml): New.
	(xml_get_required_attribute, xml_get_integer_attribute)
	(xml_get_enum_value, free_xml_parser, make_cleanup_free_xml_parser):
	Delete.
	(struct scope_level, struct gdb_xml_parser, gdb_xml_body_text)
	(gdb_xml_debug, gdb_xml_error, gdb_xml_values_cleanup)
	(gdb_xml_start_element, gdb_xml_start_element_wrapper)
	(gdb_xml_end_element, gdb_xml_end_element_wrapper, gdb_xml_cleanup)
	(gdb_xml_create_parser_and_cleanup, gdb_xml_parse)
	(gdb_xml_parse_ulongest, gdb_xml_parse_attr_ulongest)
	(gdb_xml_parse_attr_enum, show_debug_xml, _initialize_xml_support):
	New.
	* xml-support.h (struct gdb_xml_value, gdb_xml_attribute_handler)
	(enum gdb_xml_attribute_flag, struct gdb_xml_attribute)
	(enum gdb_xml_element_flag, struct gdb_xml_element)
	(gdb_xml_element_start_handler, gdb_xml_element_end_handler)
	(struct gdb_xml_enum): New.
	(gdb_xml_create_parser_and_cleanup, gdb_xml_parse, gdb_xml_debug)
	(gdb_xml_error, gdb_xml_parse_attr_ulongest)
	(gdb_xml_parse_attr_enum, gdb_xml_parse_ulongest): New prototypes.
	(xml_get_required_attribute, xml_get_integer_attribute)
	(xml_get_enum_value, make_cleanup_free_xml_parser): Delete prototypes.
	* Makefile.in (xml_support_h, xml-support.o): Update.

	* gdb.texinfo (Debugging Output): Document "set debug xml"
	and "show debug xml".
@
text
@d1699 2
a1700 1
	$(dictionary_h) $(exceptions_h) $(annotate_h) $(valprint_h)
@


1.869
log
@	* Makefile.in (eval.o): Update dependencies.
	* eval.c: Include "ui-out.h" and "exceptions.h".
	(evaluate_subexp_standard): Use TRY_CATCH around value_of_variable.
	Use value_zero if an error occurs when avoiding side effects.
	* varobj.c (c_value_of_root): Initialize new_val.

	* gdb.mi/mi-var-cmd.exp: Add tests for unreadable varobjs.
@
text
@d832 1
a832 1
xml_support_h = xml-support.h $(gdb_expat_h)
d2383 1
a2383 1
	$(gdb_assert_h) $(exceptions_h) $(gdb_string_h) $(gdb_expat_h)
d2877 1
a2877 1
	$(gdb_string_h) $(gdb_expat_h)
@


1.868
log
@        gdb/
        * varobj.c: Include "vec.h".
        (varobj_p): New typedef, declare vector of those.
        (struct varobj): Use vector for the 'children' member.
        (child_exists): Remove.
        (save_child_in_parent): Remove.
        (remove_child_from_parent): Remove.
        (struct varobj_child): Remove.
        (struct vstack): Remove.
        (vpush, vpop): Remove.
        (varobj_list_children): Adjust to work work vector.
        (varobj_update): Likewise. Use vectors for
        working stack and result.
        (delete_variable_1): Likewise.
        * Makefile.in (varobj.o): Update dependencies.
@
text
@d1971 2
a1972 1
	$(parser_defs_h) $(cp_support_h) $(gdb_assert_h)
@


1.867
log
@2007-01-04  Qinwei  <qinwei@@sunnorth.com.cn>

	* NEWS: New port to S+core.
	* MAINTAINERS (Write After Approval, Responsible Maintainers):
	Add myself.

	* Makefile.in: Add dependencies for S+core files.
	* configure.tgt (score*, score-*-*): Add S+core target.
	* config/score/embed.mt: New file.
	* score-tdep.c: New file.
	* score-tdep.h: New file.
@
text
@d2841 1
a2841 1
	$(gdb_string_h) $(varobj_h)
@


1.866
log
@        * ada-lang.h (ada_find_printable_frame): Remove.
        (ada_exception_catchpoint_p, ada_decode_exception_location)
        (ada_decode_assert_location): Add declaration.
        * ada-lang.c: Add include of annotate.h and valprint.h.
        (exception_catchpoint_kind): New enum.
        (function_name_from_pc, is_known_support_routine)
        (ada_find_printable_frame, ada_unhandled_exception_name_addr)
        (ada_exception_name_addr_1, ada_exception_name_addr)
        (print_it_exception, print_one_exception, print_mention_exception)
        (print_it_catch_exception, print_one_catch_exception)
        (print_mention_catch_exception, catch_exception_breakpoint_ops)
        (print_it_catch_exception_unhandled)
        (print_one_catch_exception_unhandled)
        (print_mention_catch_exception_unhandled, print_it_catch_assert)
        (print_one_catch_assert, print_mention_catch_assert)
        (ada_exception_catchpoint_p, error_breakpoint_runtime_sym_not_found)
        (ada_get_next_arg, catch_ada_exception_command_split)
        (ada_exception_sym_name, ada_exception_sym_name)
        (ada_exception_breakption_ops, ada_exception_catchpoint_cond_string)
        (ada_parse_catchpoint_condition, ada_exception_sal)
        (ada_decode_exception_location)
        (ada_decode_assert_location): New function.
        (catch_exception_unhandled_breakpoint_ops): New global variable.
        (catch_assert_breakpoint_ops): New global variable.
        * breakpoint.c: Add include of ada-lang.h.
        (print_one_breakpoint): Do not print the condition for Ada
        exception catchpoints.
        (create_ada_exception_breakpoint): New function.
        (catch_ada_exception_command, catch_assert_command): New function.
        (catch_command_1): Add support for the new "catch exception" and
        "catch assert" commands.
        (_initialize_breakpoint): Add help description for the new catch
        commands.
        * Makefile.in (ada-lang.o): Add dependency on annotate.h and
        valprint.h.
        (breakpoint.o): Add dependency on ada-lang.h.
@
text
@d786 1
d1495 1
d2573 4
@


1.865
log
@2007-01-03  Jan Kratochvil  <jan.kratochvil@@redhat.com>
	    Daniel Jacobowitz  <dan@@codesourcery.com>

	* Makefile.in (top.o): Update.
	* top.c (gdb_readline_wrapper_done, gdb_readline_wrapper_result)
	(saved_after_char_processing_hook, gdb_readline_wrapper_line)
	(struct gdb_readline_wrapper_cleanup, gdb_readline_wrapper_cleanup):
	New.
	(gdb_readline_wrapper): Rewrite to use asynchronous readline.

2007-01-03  Jan Kratochvil  <jan.kratochvil@@redhat.com>
	    Daniel Jacobowitz  <dan@@codesourcery.com>

	* gdb.base/readline.exp: Set $TERM.  Test arrow keys in
	secondary prompts.
@
text
@d2 1
a2 1
# 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006
d1697 1
a1697 1
	$(dictionary_h) $(exceptions_h)
d1837 1
a1837 1
	$(memattr_h)
@


1.864
log
@	* NEWS: Mention pointer to member improvements.
	* Makefile.in (gnu-v3-abi.o): Delete special rule.
	(eval.o, gnu-v3-abi.o, ia64-tdep.o): Update.
	* ada-valprint.c (ada_print_scalar): Update for new type codes.
	* c-typeprint.c (c_print_type): Update for new type codes.
	(c_type_print_varspec_prefix, c_type_print_varspec_suffix)
	(c_type_print_base): Likewise.
	(c_type_print_args): Rewrite.
	* c-valprint.c (c_val_print): Update for new type codes.  Remove
	support for references to members.  Treat methods like functions.
	* cp-abi.c (cplus_print_method_ptr, cplus_method_ptr_size)
	(cplus_make_method_ptr, cplus_method_ptr_to_value): New.
	* cp-abi.h (cplus_print_method_ptr, cplus_method_ptr_size)
	(cplus_make_method_ptr, cplus_method_ptr_to_value): New prototypes.
	(struct cp_abi_ops): Add corresponding members.
	* cp-valprint.c (cp_print_class_method): Delete.
	(cp_find_class_member): New function.
	(cp_print_class_member): Use it.  Simplify support for bogus
	member pointers.
	* dwarf2read.c (quirk_gcc_member_function_pointer): Use
	lookup_methodptr_type.
	(read_tag_ptr_to_member_type): Likewise, and lookup_memberptr_type.
	* eval.c (evaluate_subexp_standard): Implement EVAL_SKIP for
	OP_SCOPE.  Update call to value_aggregate_elt.  Rewrite member
	pointer support.
	(evaluate_subexp_for_address): Handle OP_SCOPE explicitly.  Handle
	references returned by user defined operators.
	* f-typeprint.c (f_print_type, f_type_print_varspec_prefix)
	(f_type_print_varspec_suffix): Remove support for member pointers.
	* gdbtypes.c (lookup_memberptr_type): Renamed from lookup_member_type
	and adjusted.
	(smash_to_memberptr_type): Likewise, from smash_to_member_type.
	(lookup_methodptr_type): New.
	(rank_one_type): Adjust for TYPE_CODE_MEMBERPTR.
	(recursive_dump_type): Update for new types.
	* gdbtypes.h (enum type_code): Replace TYPE_CODE_MEMBER with
	TYPE_CODE_MEMBERPTR and TYPE_CODE_METHODPTR.
	(lookup_memberptr_type, lookup_methodptr_type)
	(smash_to_memberptr_type): New prototypes.
	(smash_to_method_type): Formatting fix.
	(lookup_member_type, smash_to_member_type): Delete prototypes.
	* gnu-v3-abi.c (gnuv3_get_vtable, gnuv3_get_virtual_fn): New.
	Do not rely on debug information for the vptr or the method's
	enclosing type.  Handle function descriptors for IA64.
	(gnuv3_virtual_fn_field): Rewrite using the new functions.
	(gnuv3_find_method_in, gnuv3_print_method_ptr)
	(gnuv3_method_ptr_size, gnuv3_make_method_ptr)
	(gnuv3_method_ptr_to_value): New.
	(init_gnuv3_ops): Set new members of gnu_v3_abi_ops.
	* hpread.c (hpread_type_lookup): Update for new types.
	* infcall.c (value_arg_coerce): Likewise.
	* m2-typeprint.c (m2_print_type): Remove explicit support
	for member pointers.
	* m2-valprint.c (m2_val_print): Likewise.
	* p-typeprint.c (pascal_type_print_varspec_prefix)
	(pascal_type_print_varspec_suffix, pascal_type_print_base): Likewise.
	* p-valprint.c (pascal_val_print): Likewise.
	(pascal_object_print_class_method, pascal_object_print_class_member):
	Delete.
	* p-lang.h (pascal_object_print_class_method)
	(pascal_object_print_class_member): Delete prototypes.
	* stabsread.c (read_type): Update for new types.
	* typeprint.c (print_type_scalar): Likewise.
	* valops.c (value_struct_elt_for_reference, value_namespace_elt)
	(value_maybe_namespace_elt, value_aggregate_elt): Add want_address
	argument.  Construct a pointer to member if the address of a
	function or data member is requested.
	(value_cast_pointers): Don't modify the input value.
	(value_cast): Adjust pointer to member handling for new types.
	Allow null pointer to member constants.  Don't modify the input
	value.
	(value_ind): Remove pointer to member check.  Handle function
	descriptors for function pointers.
	(value_struct_elt, value_find_oload_method_list, check_field):
	Remove pointer to member checks.
	* value.c (unpack_long): Allow pointers to data members.
	(value_from_longest): Allow member pointers.
	* value.h (value_aggregate_elt): Add want_address.
	* varobj.c (c_variable_editable): Remove check for members.
	* gdbarch.sh: Add vtable_function_descriptors and vbit_in_delta.
	* ia64-tdep.c (ia64_convert_from_func_ptr_addr): Handle descriptors
	in virtual tables.
	(ia64_gdbarch_init): Call set_gdbarch_vtable_function_descriptors.
	* c-lang.h (cp_print_class_method): Delete prototype.
	* arm-tdep.c (arm_gdbarch_init): Call set_gdbarch_vbit_in_delta.
	* mips-tdep.c (mips_gdbarch_init): Likewise.
	* gdbarch.c, gdbarch.h: Regenerated.

	* gdb.cp/classes.exp (test_pointers_to_class_members): Update expected
	output.  Test the types of members and member pointers.
	* gdb.cp/inherit.exp (test_print_mi_member_types): Remove KFAILs for
	gdb/2092.
	* gdb.cp/member-ptr.exp: Search for a comment instead of a
	statement.  Enable for GCC.  Update expected output for some tests
	and add new tests.  Remove obsolete GCC KFAILs.  Allow GCC's class
	layout.
	* gdb.cp/member-ptr.cc (Padding, Padding::vspacer, Base, Base::get_x)
	(Base::vget_base, Left, Left::vget, Right, Right::vget, Diamond)
	(Diamond::vget_base): New.
	(main): Add new tests.
	* gdb.cp/printmethod.exp: Update expected output for member functions.
	* gdb.cp/virtfunc.exp (test_virtual_calls): Add a KFAIL for
	print pEe->D::vg().
@
text
@d2785 1
a2785 1
	$(cli_out_h) $(main_h)
@


1.863
log
@* Makefile.in (remote-sds.o): Remove.
* remote-sds.c: Delete.
@
text
@a1529 7
# FIXME: cagney/2004-09-16: "gnu-v3-abi.c", with a GCC 3.4 compiler,
# gets a "assignment from incompatible pointer type" warning.  The
# return types - "enum gnu_v3_dtor_kinds" vs "enum ctor_kinds" -
# conflict.
gnu-v3-abi.o: $(srcdir)/gnu-v3-abi.c
	$(CC) -c $(INTERNAL_WARN_CFLAGS) $(srcdir)/gnu-v3-abi.c

d1969 1
a1969 1
	$(parser_defs_h) $(cp_support_h)
d2048 1
a2048 1
	$(demangle_h) $(gdb_assert_h) $(gdb_string_h)
d2164 2
a2165 1
	$(elf_ia64_h) $(libunwind_frame_h) $(libunwind_ia64_h)
@


1.862
log
@* sparc64-tdep.h (SPARC64_PSTATE_AG, SPARC64_PSTATE_IE)
(SPARC64_PSTATE_PRIV, SPARC64_PSTATE_AM, SPARC64_PSTATE_PEF)
(SPARC64_PSTATE_RED, SPARC64_PSTATE_TLE, SPARC64_PSTATE_CLE)
(SPARC64_PSTATE_PID0, SPARC64_PSTATE_PID1): New defines.
* sparc64nbsd-nat.c: Include "gdbcore.h".
(sparc64nbsd_supply_pcb): Get %pc from stack if necessary.  Supply
processor state register.
* sparc64obsd-tdep.c (sparc64obsd_trapframe_cache)
(sparc64obsd_trapframe_this_id)
(sparc64obsd_trapframe_prev_register)
(sparc64obsd_trapframe_sniffer): New functions.
(sparc64obsd_trapframe_unwind): New variable.
(sparc64obsd_init_abi): Append trapframe unwinder.
* Makefile.in (sparc64nbsd-nat.o): Update dependencies.
@
text
@a2534 4
remote-sds.o: remote-sds.c $(defs_h) $(gdb_string_h) $(frame_h) \
	$(inferior_h) $(exceptions_h) $(bfd_h) $(symfile_h) $(target_h) \
	$(gdbcmd_h) $(objfiles_h) $(gdb_stabs_h) $(gdbthread_h) $(gdbcore_h) \
	$(regcache_h) $(serial_h)
@


1.861
log
@    Mark Kettenis  <kettenis@@gnu.org>

* i386nbsd-nat.c: Include "nbsd-nat.h".
(_initialize_i386nbsd_nat): Update target vector to use
nbsd_pid_to_exec_file.
* config/i386/nbsdelf.mh (NATDEPFILES): Add nbsd-nat.o.
* config/i386/nbsdaout.mh (NATDEPFILES): Add nbsd-nat.o.
* nbsd-nat.c: New file.
* nbsd-nat.h: New file.
* Makefile.in (ALLDEPFILES): Add nbsd-nat.c.
(nbsd_nat_h): New variable.
(nbsd-nat.o): New dependency.
@
text
@d2679 2
a2680 2
sparc64nbsd-nat.o: sparc64nbsd-nat.c $(defs_h) $(regcache_h) $(target_h) \
	$(sparc64_tdep_h) $(sparc_nat_h) $(bsd_kvm_h)
@


1.860
log
@	* Makefile.in (ALLDEPFILES): Remove mipsv4-nat.c.
	(mipsv4-nat.o): Delete.
	* mipsv4-nat.c: Delete.
@
text
@d761 1
d1480 1
a1480 1
	nbsd-tdep.c obsd-tdep.c \
d2404 1
@


1.859
log
@	* dve3900-rom.c: Delete file.
	* Makefile.in (dve3900-rom.o): Delete.
@
text
@d1476 1
a1476 1
	mips-tdep.c mipsv4-nat.c \
a2383 2
mipsv4-nat.o: mipsv4-nat.c $(defs_h) $(inferior_h) $(gdbcore_h) $(target_h) \
	$(regcache_h) $(gregset_h)
@


1.858
log
@* i386obsd-nat.c: Include "gdbcore.h", "regcache.h", "target.h",
<machine/frame.h>, <machine/pcb.h>, "i386bsd-nat.h" and
"bsd-kvm.h".
(i386obsd_supply_pcb): New function.
(_initialize_i386obsd_nat): Construct and add target
vector. Enable libkvm interface.
* Makefile.in (i386obsd-nat.o): Update dependencies.
* config/i386/obsd.mh (NATDEPFILES): Remove i386nbsd-nat.c
@
text
@a1947 3
dve3900-rom.o: dve3900-rom.c $(defs_h) $(gdbcore_h) $(target_h) $(monitor_h) \
	$(serial_h) $(inferior_h) $(command_h) $(gdb_string_h) $(regcache_h) \
	$(mips_tdep_h)
@


1.857
log
@Add OpenBSD/sh native support.
* NEWS (New native configurations): Mention OpenBSD/sh.
* configure.host: Add sh*-*-openbsd*.
* shnbsd-nat.c: Include "inf-ptrace.h".
(shnbsd_fetch_inferior_registers): Rename from
fetch_inferior_registers.  Make static.
(shnbsd_store_inferior_registers): Rename from
store_inferior_registers.  Make static.
(_initialize_shnbsd_nat): New function.
* Makefile.in (shnbsd-nat.o): Update dependencies.
* config/sh/nbsd.mh (NAT_CLIBS, NAT_FILE): Remove.
(NATDEPFILES): Remove infptrace.o and inftarg.o.  Add
inf-ptrace.o.
@
text
@d2135 2
a2136 1
i386obsd-nat.o: i386obsd-nat.c $(defs_h) $(i386_tdep_h)
@


1.856
log
@	* Makefile.in (mips-tdep.o, target-descriptions.o): Update.
	* target-descriptions.c (struct property): New.
	(struct target_desc): Add properties member.
	(tdesc_property, set_tdesc_property): New.
	* target-descriptions.h (tdesc_property, set_tdesc_property):
	Declare.
	* mips-tdep.c (PROPERTY_GP32, PROPERTY_GP64): New constants.
	(struct gdbarch_tdep): Add register_size_valid_p and register_size.
	(mips_isa_regsize): Use them.
	(mips_register_g_packet_guesses): New.
	(mips_gdbarch_init): Call it.  If a target description is supplied,
	check for internal properties.  Check for register size mismatches.
	* remote.c (send_g_packet, process_g_packet): New functions, split
	out from fetch_registers_using_g.
	(fetch_registers_using_g): Use them.
	(struct remote_g_packet_guess, remote_g_packet_guess_s)
	(struct remote_g_packet_data, remote_g_packet_data_handle)
	(remote_g_packet_data_init, register_remote_g_packet_guess)
	(remote_read_description): New.
	(init_remote_ops, init_remote_async_ops): Set to_read_description.
	(_initialize_remote): Register remote_g_packet_data_handle.
	* remote.h (register_remote_g_packet_guess): Declare.
@
text
@d2607 1
a2607 1
	$(shnbsd_tdep_h)
@


1.855
log
@	* Makefile.in (SFILES): Add new and missed files.
	(target_descriptions_h): New.
	(COMMON_OBS): Add target-descriptions.o.
	(arch-utils.o, infcmd.o, remote.o, target.o): Update.
	(target-descriptions.o): New.
	* arch-utils.c (gdbarch_info_fill): Check for a target
	description.
	* target-descriptions.c, target-descriptions.h: New files.
	* gdbarch.sh: Add target_desc to info.  Declare it in gdbarch.h.
	Correct typos.
	(gdbarch_list_lookup_by_info): Check target_desc.
	* gdbarch.c, gdbarch.h: Regenerated.
	* target.c (update_current_target): Mention to_read_description.
	(target_pre_inferior): Call target_clear_description.
	(target_read_description): New.
	* target.h (struct target_ops): Add to_read_description.
	(target_read_description): New prototype.
	* infcmd.c (post_create_inferior): Call target_find_description.
	* remote.c (remote_open_1): Likewise.
	(extended_remote_create_inferior): Add a comment.
	(extended_remote_async_create_inferior): Likewise.
@
text
@d2385 1
a2385 1
	$(floatformat_h)
d2783 1
a2783 1
	$(target_h) $(target_descriptions_h) $(gdb_assert_h)
@


1.854
log
@	* config/tm-linux.h: Delete file.
	* config/alpha/alpha-linux.mt (DEPRECATED_TM_FILE): Set to tm-alpha.h.
	* config/alpha/tm-alphalinux.h: Delete file.
	* config/arm/linux.mt (DEPRECATED_TM_FILE): Set to tm-arm.h
	* config/arm/tm-linux.h: Delete file.
	* config/i386/tm-linux.h: Do not include "config/tm-linux.h".
	* config/ia64/tm-linux.h: Do not include "config/tm-linux.h".
	* config/m32r/linux.mt (DEPRECATED_TM_FILE): Remove.
	* config/mips/tm-linux.h:  Do not include "config/tm-linux.h".
	* config/pa/linux.mt (DEPRECATED_TM_FILE): Set to tm-hppa.h.
	* config/pa/tm-linux.h: Delete file.
	* config/powerpc/tm-linux.h: Do not include "config/tm-linux.h".
	* config/s390/linux.mt (DEPRECATED_TM_FILE): Remove.
	* config/sh/linux.mt (DEPRECATED_TM_FILE): Set to tm-sh.h.
	* config/sh/tm-linux.h: Delete file.
	* alpha-linux-tdep.c: Include "symtab.h".
	(alpha_linux_init_abi): Call set_gdbarch_skip_trampoline_code.
	* i386-linux-tdep.c: Include "symtab.h".
	(i386_linux_init_abi): Call set_gdbarch_skip_trampoline_code.
	* ia64-linux-tdep.c: Include "symtab.h".
	(ia64_linux_init_abi): Call set_gdbarch_skip_trampoline_code.
	* m32r-linux-tdep.c: Include "symtab.h".
	(m32r_linux_init_abi): Call set_gdbarch_skip_trampoline_code.
	* mips-linux-tdep.c: Include "symtab.h".
	(mips_linux_init_abi): Call set_gdbarch_skip_trampoline_code.
	* sh-linux-tdep.c: Include "symtab.h".
	(sh_linux_init_abi): Call set_gdbarch_skip_trampoline_code.
	* s390-tdep.c (s390_gdbarch_init): Call
	set_gdbarch_skip_trampoline_code.
	* s390-nat.c: Do not include "tm.h".
	* Makefile.in (alpha-linux-tdep.o): Add dependency on $(symtab_h).
	(i386-linux-tdep.o): Likewise.
	(ia64-linux-tdep.o): Likewise.
	(m32r-linux-tdep.o): Likewise.
	(mips-linux-tdep.o): Likewise.
	(sh-linux-tdep.o): Likewise.
	(s390-nat.o): Remove dependency on $(tm_h).
@
text
@d519 1
a519 1
	ax-general.c ax-gdb.c \
d557 2
a558 1
	target.c target-memory.c thread.c top.c tracepoint.c \
d810 1
d972 2
a973 1
	prologue-value.o memory-map.o xml-support.o target-memory.o
d1789 1
a1789 1
	$(floatformat_h)
d2184 1
a2184 1
	$(solib_h) $(gdb_assert_h) $(observer_h)
d2519 1
a2519 1
	$(cli_decode_h) $(cli_setshow_h) $(memory_map_h)
d2781 3
a2783 1
	$(exceptions_h)
@


1.853
log
@	* config/tm-linux.h (REALTIME_LO, REALTIME_HI): Do not define.
	* config/mips/tm-linux.h (REALTIME_LO, REALTIME_HI): Likewise.

	* config/rs6000/tm-rs6000ly.h (REALTIME_LO, REALTIME_HI): Move to ...
	* config/nm-lynx.h (REALTIME_LO, REALTIME_HI): ... here.

	* config/i386/nto.mh (NAT_FILE): Define.
	* config/i386/nto.mt (DEPRECATED_TM_FILE): Remove.
	* config/i386/tm-nto.h: Delete file.
	* config/tm-nto.h: Delete file.
	* config/nm-nto.h: New file.

	* Makefile.in (nto-tdep.o): Add dependency on $(objfiles_h).
	* nto-tdep.c: Include "objfiles.h" and <string.h>.

	* coff-solib.h (SOLIB_UNLOADED_LIBRARY_PATHNAME): Define as "".
	* xcoffread.c (read_xcoff_symtab): Initialize fcn_stab_saved.
	* config/rs6000/rs6000lynx.mt (TDEPFILES): Add xcoffread.o.
@
text
@d1721 1
a1721 1
	$(osabi_h) $(solib_svr4_h) $(alpha_tdep_h)
d2121 1
a2121 1
	$(i386_linux_tdep_h) $(glibc_tdep_h) $(solib_svr4_h)
d2162 2
a2163 1
	$(arch_utils_h) $(gdbcore_h) $(regcache_h) $(osabi_h) $(solib_svr4_h)
d2273 1
a2273 1
	$(trad_frame_h) $(frame_unwind_h) $(m32r_tdep_h)
d2359 2
a2360 1
	$(tramp_frame_h) $(floatformat_h) $(solib_h) $(mips_linux_tdep_h)
d2563 1
a2563 1
s390-nat.o: s390-nat.c $(defs_h) $(tm_h) $(regcache_h) $(inferior_h) \
d2609 2
a2610 1
sh-linux-tdep.o: sh-linux-tdep.c $(defs_h) $(osabi_h) $(solib_svr4_h)
@


1.852
log
@	* Makefile.in (mips-linux-tdep.o) Add $(solib_h) dependency.
	(nto-procfs.o): Likewise.
	* mips-linux-tdep.c: Include "solib.h".
	* nto-procfs.c: Likewise.
	* config/nm-linux.h: Do not include "solib.h".
	* config/nm-nbsd.h: Likewise.
	* config/tm-linux.h: Likewise.
	* config/alpha/nm-osf.h: Likewise.
	* config/frv/tm-frv.h: Likewise.
	* config/i386/nm-fbsh.h: Likewise.
	* config/i386/nm-i386gnu.h: Likewise.
	* config/i386/nm-i386sco5.h: Likewise.
	* config/i386/nm-i386sol2.h: Likewise.
	* config/i386/nm-i386v4.h: Likewise.
	* config/i386/nm-i386v42mp.h: Likewise.
	* config/i386/tm-i386sol2.h: Likewise.
	* config/i386/tm-nto.h: Likewise.
	* config/mips/nm-irix5.h: Likewise.
	* config/mips/tm-nbsd.h: Likewise.
	* config/pa/tm-hppah.h: Likewise.
	* config/powerpc/tm-ppc-eabi.h: Likewise.
	* config/rs6000/tm-rs6000.h: Likewise.
	* config/sh/tm-nbsd.h: Likewise.
	* config/sparc/nm-sol2.h: Likewise.
	* config/sparc/tm-sol2.h: Likewise.
	* config/arm/nbsdaout.mh: Remove NAT_FILE.
	* config/i386/nbsdaout.mh: Likewise.
	* config/i386/nbsdelf.mh: Likewise.
	* config/i386/obsdaout.mh: Likewise.
	* config/m68k/nbsdaout.mh: Likewise.
	* config/m68k/obsd.mh: Likewise.
	* config/sparc/nbsdaout.mh: Likewise.
	* config/cris/cris.mt: Remove DEPRECATED_TM_FILE.
	* config/i386/linux64.mt: Likewise.
	* config/m68k/linux.mt: Likewise.
	* config/m68k/nbsd.mt: Likewise.
	* config/sparc/linux.mt: Likewise.
	* config/sparc/linux64.mt: Likewise.
	* config/vax/nbsd.mt: Likewise.
@
text
@d2410 1
a2410 1
	$(elf_bfd_h) $(solib_svr4_h) $(gdbcore_h)
@


1.851
log
@gdb/
	* Makefile.in (arm-tdep.o): Update dependencies.
	* arm-tdep.c (thumb_skip_prologue): Remove.
	(thumb_analyze_prologue): New function.
	(arm_skip_prologue): Use thumb_analyze_prologue.
	(thumb_scan_prologue): Ditto.
gdb/testsuite/
	* gdb.arch/thumb-prologue.c, gdb.arch/thumb-prologue.exp: New files.
@
text
@d2358 1
a2358 1
	$(tramp_frame_h) $(floatformat_h) $(mips_linux_tdep_h)
d2407 1
a2407 1
	$(gdbthread_h) $(nto_tdep_h) $(command_h) $(regcache_h)
@


1.850
log
@	* config/powerpc/spu-linux.mh: New file.
	* config/spu/spu.mt: New file.
	* configure.ac: Provide gdb_native configuration variable.
	* configure: Regenerate.
	* configure.host: Support powerpc64 to spu 'pseudo-native' mode.
	* configure.tgt: Add "spu" target_cpu and "spu*-*-*" target.
	* Makefile.in (spu_tdep_h): New variable.
	(ALLDEPFILES): Add spu-linux-nat.c and spu-tdep.c
	(spu-linux-nat.o, spu-tdep.o): Add dependencies.
	* spu-linux-nat.c: New file.
	* spu-tdep.c: New file.
	* spu-tdep.h: New file.
@
text
@d1810 1
a1810 1
	$(dwarf2_frame_h) $(gdbtypes_h)
@


1.849
log
@2006-11-22  Vladimir Prus  <vladimir@@codesourcery.com>

        * breakpoint.c: Include "memattr.h".
        (automatic_hardware_breakpoints): New.
        (show_automatic_hardware_breakpoints): New.
        (insert_bp_location): Automatically use
        hardware breakpoints.
        (_initialize_breakpoint): Register the "auto-hw"
        variable.
        * Makefile.in (breakpoint.o): Update dependencies.
@
text
@d802 1
d1501 1
d2726 9
@


1.848
log
@2006-11-14  Maxim Grigoriev  <maxim@@tensilica.com>

	* NEWS: New port to Xtensa.
	* Makefile.in: Add dependencies for Xtensa files.
	* configure.tgt (xtensa*, xtensa*-*-elf*): New.
	* configure.host (xtensa*-*-elf*): New.
	* config/xtensa/xtensa.mt: New file.
	* xtensa-config.c: New file.
	* xtensa-tdep.h: New file.
	* xtensa-tdep.c: New file.

2006-11-14  Maxim Grigoriev  <maxim@@tensilica.com>

	* gdb.texinfo (Contributors): Add contributors of Xtensa port.
@
text
@d1837 2
a1838 1
	$(solist_h) $(observer_h) $(exceptions_h) $(gdb_events_h) $(mi_common_h)
@


1.848.2.1
log
@	* config/powerpc/spu-linux.mh: New file.
	* config/spu/spu.mt: New file.
	* configure.ac: Provide gdb_native configuration variable.
	* configure: Regenerate.
	* configure.host: Support powerpc64 to spu 'pseudo-native' mode.
	* configure.tgt: Add "spu" target_cpu and "spu*-*-*" target.
	* Makefile.in (spu_tdep_h): New variable.
	(ALLDEPFILES): Add spu-linux-nat.c and spu-tdep.c
	(spu-linux-nat.o, spu-tdep.o): Add dependencies.
	* spu-linux-nat.c: New file.
	* spu-tdep.c: New file.
	* spu-tdep.h: New file.
@
text
@a801 1
spu_tdep_h = spu-tdep.h
a1499 1
	spu-linux-nat.c spu-tdep.c \
a2722 9
spu-linux-nat.o: spu-linux-nat.c $(defs_h) $(gdbcore_h) $(gdb_string_h) \
	$(target_h) $(inferior_h) $(inf_ptrace_h) $(regcache_h) $(symfile_h) \
	$(gdb_wait_h) $(spu_tdep_h)
spu-tdep.o: spu-tdep.c $(defs_h) $(arch_utils_h) $(gdbtypes_h) $(gdbcmd_h) \
	$(gdbcore_h) $(gdb_string_h) $(gdb_assert_h) $(frame_h) \
	$(frame_unwind_h) $(frame_base_h) $(trad_frame_h) $(symtab_h) \
	$(symfile_h) $(value_h) $(inferior_h) $(dis_asm_h) $(objfiles_h) \
	$(language_h) $(regcache_h) $(reggroups_h) $(floatformat_h) \
	$(spu_tdep_h)
@


1.847
log
@gdb/
	* Makefile.in (symtab.o): Update.
	* symtab.h (matching_bfd_section): New prototype.
	* symtab.c (matching_bfd_section): New.
	(find_pc_sect_psymbol, find_pc_sect_symtab): Use it.
	* minsyms.c (lookup_minimal_symbol_by_pc_section): Likewise.
	* printcmd.c (sym_info): Ignore separate debug objfiles.
gdb/testsuite/
	* gdb.base/sepdebug.exp: Remove debug format test.
	* lib/gdb.exp (gdb_gnu_strip_debug): Perform debug format test.
	Handle no-symtab.
	* gdb.base/sepsymtab.c, gdb.base/sepsymtab.exp: New.
@
text
@d828 1
d1504 2
a1505 1
	xstormy16-tdep.c
d2868 10
@


1.846
log
@2006-10-09  Jan Kratochvil  <jan.kratochvil@@redhat.com>
	    Daniel Jacobowitz  <dan@@codesourcery.com>

	* Makefile.in (expprint.o, parse.o, target.o): Update.
	* dwarf2loc.c (dwarf_expr_tls_address): Move body to
	target_translate_tls_address.  Call it.
	* eval.c (evaluate_subexp_standard): Handle UNOP_MEMVAL_TLS.
	* expprint.c (print_subexp_standard): Likewise.
	(op_name_standard, dump_subexp_body_standard): Likewise.
	* expression.h (enum exp_opcode): Add UNOP_MEMVAL_TLS.
	(union exp_element): Add objfile.
	* parse.c (write_exp_elt_objfile): New function.
	(msym_tls_symbol_type): New.
	(write_exp_msymbol): Handle TLS.
	(operator_length_standard): Handle UNOP_MEMVAL_TLS.
	(build_parse): Initialize msym_tls_symbol_type.
	* parser-defs.h (write_exp_elt_objfile): New prototype.
	* target.c (target_translate_tls_address): New.
	* target.h (target_translate_tls_address): Add prototype.

2006-10-09  Jan Kratochvil  <jan.kratochvil@@redhat.com>

	* gdb.threads/tls-nodebug.c, gdb.threads/tls-nodebug.exp: New test.
@
text
@d2757 1
a2757 1
	$(gdb_stat_h) $(cp_abi_h) $(observer_h)
@


1.845
log
@	* Makefile.in (gdb_expat_h): New.
	(xml_support_h): Add gdb_expat.h dependency.
	(memory-map.o, xml-support.o): Likewise.
	* gdb_expat.h: New file.
	* xml-support.h: Include it.
	* memory-map.c, xml-support.c: Likewise.  Remove XML_STATUS_OK
	definitions.
@
text
@d1985 1
a1985 1
	$(gdb_string_h) $(block_h)
d2432 1
a2432 1
	$(doublest_h) $(gdb_assert_h) $(block_h) $(source_h)
d2760 2
a2761 1
	$(gdb_wait_h) $(dcache_h) $(regcache_h) $(gdb_assert_h) $(gdbcore_h)
@


1.844
log
@	* Makefile.in (SFILES): Add target-memory.c.
	(COMMON_OBS): Add target-memory.o.
	* memattr.c (lookup_mem_region): Adjust handling for
	the top of memory.  Improve comments.
	* remote.c (packet_check_result): New function, split out
	from packet_ok.  Recognize "E." as an error prefix.
	(packet_ok): Use it.
	(remote_write_bytes_aux): New function, renamed from
	remote_write_bytes.  Take packet header, packet format,
	and length flag as arguments.
	(remote_write_bytes): Rewrite to use remote_write_bytes_aux.
	(remote_send_printf, restore_remote_timeout)
	(remote_flash_timeout, remote_flash_erase, remote_flash_write)
	(remote_flash_done): New.
	(remote_xfer_partial): Handle flash writes.
	(init_remote_ops, init_remote_async_ops): Set to_flash_erase
	and to_flash_done.
	* symfile.c (struct load_section_data): Include a pointer to
	the cumulative stats and a request queue.  Move most members
	to other types.
	(struct load_progress_data, struct load_progress_section_data): New
	types.
	(load_progress): Handle a NULL baton and zero bytes.  Update for
	type changes.
	(load_section_callback): Create memory write requests instead of
	writing to memory.  Don't print the progress message here.
	(clear_memory_write_data): New function.
	(generic_load): Use target_write_memory_blocks.
	* target-memory.c: New file.
	* target.c (update_current_target): Mention new uninherited methods.
	(memory_xfer_partial): Issue an error for flash writes.
	(target_flash_erase, target_flash_done): New functions.
	(target_write_with_progress): Call the progress callback at the
	start also.
	* target.h (enum target_object): Add TARGET_OBJECT_FLASH.
	(target_write_with_progress): Update comment.
	(struct target_ops): Add to_flash_erase and to_flash_done.
	(target_flash_erase, target_flash_done, struct memory_write_request)
	(memory_write_request_s, enum flash_preserve_mode)
	(target_write_memory_blocks): New, including a vector type
	for memory_write_request_s.
@
text
@d704 1
d827 1
a827 1
xml_support_h = xml-support.h
d2379 1
a2379 1
	$(gdb_assert_h) $(exceptions_h) $(gdb_string_h)
d2859 1
a2859 1
	$(gdb_string_h)
@


1.843
log
@gdb/
2006-09-21  Vladimir Prus  <vladimir@@codesourcery.com>
	    Daniel Jacobowitz  <dan@@codesourcery.com>
	    Nathan Sidwell  <nathan@@codesourcery.com>

	* Makefile.in (SFILES): Add memory-map.c and xml-support.c.
	(memory_map_h, xml_support_h): New.
	(target_h): Add vec_h dependency.
	(COMMON_OBS): Add memory-map.o and xml-support.o.
	(memory-map.o, xml-support.o): New rules.
	(remote.o): Update.
	* exceptions.h (enum errors): Add XML_PARSE_ERROR.
	* infcmd.c (run_command_1, attach_command): Call target_pre_inferior.
	* memattr.c (default_mem_attrib): Initialize blocksize.
	(target_mem_region_list, mem_use_target)
	(target_mem_regions_valid, mem_region_cmp, mem_region_init)
	(require_user_regions, require_target_regions)
	(invalidate_target_mem_regions): New.
	(create_mem_region): Use mem_region_init.
	(mem_clear): Move higher.
	(lookup_mem_region): Use require_target_regions.
	(mem_command): Implement "mem auto".
	(mem_info_command): Handle target-supplied regions and flash
	attributes.
	(mem_enable_command, mem_disable_command, mem_delete_command): Use
	require_user_regions.
	(_initialize_mem): Mention "mem auto" in help.
	* memattr.h (enum mem_access_mode): Add MEM_FLASH.
	(struct mem_attrib): Add blocksize.
	(invalidate_target_mem_regions, mem_region_init, mem_region_cmp): New
	prototypes.
	* remote.c: Include "memory-map.h".
	(PACKET_qXfer_memory_map): New enum value.
	(remote_protocol_features): Add qXfer:memory-map:read.
	(remote_xfer_partial): Handle memory maps.
	(remote_memory_map): New.
	(init_remote_ops, init_remote_async_ops): Set to_memory_map.
	(_initialize_remote): Register qXfer:memory-map:read.
	* target.c (update_current_target): Mention to_memory_map.
	(target_memory_map, target_pre_inferior): New.
	(target_preopen): Call target_pre_inferior.
	* target.h: Include "vec.h".
	(enum target_object): Add TARGET_OBJECT_MEMORY_MAP.
	(struct target_ops): Add to_memory_map.
	(target_memory_map, target_pre_inferior): New prototypes.
	* memory-map.c, memory-map.h, xml-support.c, xml-support.h: New files.
gdb/doc/
2006-09-21  Vladimir Prus  <vladimir@@codesourcery.com>
	    Daniel Jacobowitz  <dan@@codesourcery.com>

	* gdb.texinfo (Memory Region Attributes): Mention target-supplied
	memory regions and "mem auto".
@
text
@d557 1
a557 1
	target.c thread.c top.c tracepoint.c \
d967 1
a967 1
	prologue-value.o memory-map.o xml-support.o
d2760 2
@


1.842
log
@	* Makefile.in (memattr_h, memattr.o): Update.
	* memattr.h: Include "vec.h".
	(struct mem_region): Remove linked list pointer.
	(mem_region_s): New typedef and corresponding vector.
	* memattr.c: Include "vec.h".
	(mem_region_chain): Delete.
	(mem_region_list): New vector pointer.
	(mem_region_lessthan): New function.
	(create_mem_region): Remove unused return value.  Use vector
	operations.  Remove linear search.
	(delete_mem_region): Delete.
	(lookup_mem_region): Use vector operations.  Add a FIXME.
	(mem_info_command): Update to work with vectors.
	(mem_enable, mem_enable_command, mem_disable, mem_disable_command)
	(mem_free, mem_delete): Likewise.
@
text
@d544 1
a544 1
	mdebugread.c memattr.c mem-break.c minsyms.c mipsread.c \
d564 2
a565 1
	wrapper.c
d756 1
d806 1
a806 1
target_h = target.h $(bfd_h) $(symtab_h) $(dcache_h) $(memattr_h)
d826 1
d967 1
a967 1
	prologue-value.o
d2377 2
d2508 1
a2508 1
	$(cli_decode_h) $(cli_setshow_h)
d2855 2
@


1.841
log
@2006-09-21  Nathan Sidwell  <nathan@@codesourcery.com>
gdb/
	* vec.h: New file.
	* vec.c: New file.
	* Makefile.in (SFILES): Add vec.c.
	(vec_h): New.
	(COMMON_OBJS): Add vec.o.
	(vec.o): New target.
gdb/doc/
	* gdbint.texinfo (Array Containers): New section.
@
text
@d750 1
a750 1
memattr_h = memattr.h
d2330 1
a2330 1
	$(target_h) $(value_h) $(language_h) $(gdb_string_h)
@


1.840
log
@	* Makefile.in (INTERNAL_CPPFLAGS): New.
	(INTERNAL_CFLAGS_BASE): Use it.
@
text
@d563 1
a563 1
	valarith.c valops.c valprint.c value.c varobj.c \
d819 1
d945 1
a945 1
	varobj.o wrapper.o \
d2830 1
@


1.839
log
@gdb/
	* Makefile.in (amd64_linux_tdep_h): New.
	(amd64-linux-nat.o, amd64-linux-tdep.o): Update.
	* amd64-linux-nat.c (amd64_linux_gregset64_reg_offset): Add
	ORIG_RAX.
	(_initialize_amd64_linux_nat): Set amd64_native_gregset64_num_regs.
	* amd64-linux-tdep.c (amd64_linux_register_name)
	(amd64_linux_register_type, amd64_linux_register_reggroup_p)
	(amd64_linux_write_pc): New.
	(amd64_linux_init_abi): Use them, and update num_regs.
	* amd64-linux-tdep.h: New file.
	* amd64-tdep.c (amd64_register_name, amd64_register_type): Make
	public.
	* amd64-tdep.h (amd64_register_name, amd64_register_type): New
	prototypes.

	* regformats/reg-x86-64-linux.dat: New file.
gdb/testsuite/
	* Makefile.in (clean): Clean reg-x86-64-linux.c.
	(reg-x86-64-linux.o, reg-x86-64-linux.c): New.
	* configure.srv (x86_64-*-linux*): Use reg-x86-64-linux.o.
	* linux-x86-64-low.c (x86_64_regmap): Include ORIG_RAX.
	(x86_64_fill_gregset, x86_64_store_gregset): Skip floating
	point registers.
@
text
@d345 3
d358 1
a358 1
	$(INTL_CFLAGS) $(ENABLE_CFLAGS)
@


1.838
log
@        * source.c: #include gdb_assert.h.
        (substitute_path_rule): New struct.
        (substitute_path_rules): New static global variable.
        (substitute_path_rule_matches): New function.
        (get_substitute_path_rule): New function.
        (rewrite_source_path): New function.
        (find_and_open_source): Add source path rewriting support.
        (strip_trailing_directory_separator): New function.
        (find_substitute_path_rule): New function.
        (add_substitute_path_rule): New function.
        (delete_substitute_path_rule): New function.
        (show_substitute_path_command): New function.
        (unset_substitute_path_command): New function.
        (set_substitute_path_command): New function.
        (_initialize_source): Add new substitute-path commands.
        * Makefile.in (source.o): Add dependency on gdb_assert.h.
@
text
@d641 1
d1742 1
a1742 1
	$(i386_linux_tdep_h) $(amd64_nat_h) $(target_h)
d1745 1
a1745 1
	$(solib_svr4_h)
@


1.837
log
@gdb/
	* configure.ac: Check for expat.
	* acinclude.m4: Include AC_LIB_HAVE_LINKFLAGS dependencies.
	* Makefile.in (LIBEXPAT): New.
	(CLIBS): Include $(LIBEXPAT).
	* README: Mention expat.
	* configure, config.in: Regenerated.
gdb/doc/
	* gdb.texinfo (Installing GDB): Update menu.  Move text to...
	(Running Configure): ...here.
	(Requirements): New node.  Mention expat.
@
text
@d2642 2
a2643 1
	$(filenames_h) $(completer_h) $(ui_out_h) $(readline_h)
@


1.836
log
@	* Makefile.in (objfiles.o, symfile.o): Update.
	* objfiles.c: Include "expression.h" and "parser-defs.h".
	(free_objfile): Clear global blocks.
	* symfile.c: Include "parser-defs.h".
	(clear_symtab_users): Clear global blocks.
@
text
@d131 3
d382 1
a382 1
	$(LIBICONV) \
@


1.835
log
@* arm-tdep.h: Add multiple inclusion protection.
(struct gdbarch): Add forward declaration.
(armobsd_regset_from_core_section): New prototype.
* armbsd-tdep.c: New file.
* armobsd-tdep.c: Include "gdb_string.h".
(armobsd_init_abi): Set regset_from_core_section.
(armobsd_core_osabi_sniffer): New function.
(_initialize_armobsd_tdep): Register armobsd_core_osabi_sniffer.
* Makefile.in (ALLDEPFILES): Add armbsd-tdep.c.
(armbsd-tdep.o): New dependency.
(armnbsd-tdep.o): Update dependencies.
* config/arm/obsd.mt (TDEPFILES): Add armbsd-tdep.o and corelow.o.
@
text
@d2405 2
a2406 1
	$(hashtab_h) $(breakpoint_h) $(block_h) $(dictionary_h) $(source_h)
d2726 2
a2727 1
	$(gdb_string_h) $(gdb_stat_h) $(observer_h) $(exec_h)
@


1.834
log
@* alpha-tdep.h (ALPHA_S0_REGNUM): New define.
* alphabsd-nat.c: Include <sys/types.h>, <sys/signal.h>,
<machine/pcb.h> and "bsd-kvm.h".
(alphabsd_supply_pcb): New function.
(_initialize_alphabsd_nat): Enable libkvm interface.
* Makefile.in (alphabsd-nat.o): Update dependencies.
* config/alpha/fbsd.mh (NATDEPFILES): Add bsd-kvm.o.
(LOADLIBES): New variable.
* config/alpha/nbsd.mh (NATDEPFILES): Add bsd-kvm.o.
(LOADLIBES): New variable.
@
text
@d1421 1
a1421 1
	armnbsd-nat.c armnbsd-tdep.c armobsd-tdep.c \
d1781 2
d1786 2
a1787 1
	$(tramp_frame_h) $(obsd_tdep_h) $(arm_tdep_h) $(solib_svr4_h)
@


1.833
log
@* alphaobsd-tdep.c: Include "obsd-tdep.h".
(alphaobsd_init_abi): Set skip_solib_resolver.
* Makefile.in (alphaobsd-tdep.o): Update dependencies.
* config/alpha/obsd.mt (TDEPFILES): Add obsd-tdep.o.
@
text
@d1697 2
a1698 1
	$(alpha_tdep_h) $(alphabsd_tdep_h) $(inf_ptrace_h) $(gregset_h)
@


1.832
log
@	* linux-thread-db.c (td_thr_getfpregs_p, td_thr_getgregs_p)
	(td_thr_setfpregs_p, td_thr_setgregs_p, thread_db_get_info)
	(thread_db_fetch_registers, thread_db_store_registers)
	(thread_db_thread_alive, thread_db_state_str): Delete.
	(thread_db_load): Don't look up regset functions.
	(thread_db_pid_to_str): Simplify.
	(thread_db_extra_thread_info): New.
	(init_thread_db_ops): Do not set to_fetch_registers,
	to_store_registers, or to_thread_alive.  Set to_extra_thread_info.
	* Makefile.in: Remove linux-thread-db.o rule.
@
text
@d1715 2
a1716 1
	$(osabi_h) $(alpha_tdep_h) $(alphabsd_tdep_h) $(solib_svr4_h)
@


1.831
log
@* armobsd-tdep.c: Include "trad-frame.h" and "tramp-frame.h".
(armobsd_sigframe_init): New function.
(armobsd_sigframe): New variable.
(armobsd_init_abi): Prepend armobsd_sigframe unwinder.
* Makefile.in (armobsd-tdep.o): Update dependencies.
@
text
@a1536 5
# FIXME: Thread-db.o gets warnings because the definitions of the register
# sets are different from kernel to kernel.
linux-thread-db.o: $(srcdir)/linux-thread-db.c
	$(CC) -c $(INTERNAL_WARN_CFLAGS) $(srcdir)/linux-thread-db.c

@


1.830
log
@* armobsd-tdep.c (armobsd_init_abi): Set skip_solib_resolver.
* Makefile.in (armobsd-tdep.o): Update dependencies.
* config/arm/obsd.mt (TDEPFILES): Add obsd-tdep.o.
@
text
@d1786 2
a1787 2
armobsd-tdep.o: armobsd-tdep.c $(defs_h) $(osabi_h) \
	$(obsd_tdep_h) $(arm_tdep_h) $(solib_svr4_h)
@


1.829
log
@* armobsd-tdep.c: New file.
* Makefile.in (ALLDEPFILES): Add armobsd-tdep.c.
(armobsd-tdep.o): New dependency.
* config/arm/obsd.mt: New file.
* configure.tgt: (arm*-*-openbsd*): Set gdb_target to obsd.
@
text
@d1787 1
a1787 1
	$(arm_tdep_h) $(solib_svr4_h)
@


1.828
log
@* armnbsd-tdep.c: Don't include "nbsd-tdep.h".
* config/arm/nbsd.mt (TDEPFILES): Remove nbsd-tdep.o.
(DEPRECATED_TM_FILE): Remove.
* Makefile.in (armnbsd-tdep.o): Update dependencies.
@
text
@d1421 1
a1421 1
	armnbsd-nat.c armnbsd-tdep.c \
d1786 2
@


1.827
log
@	* Makefile.in (arm_linux_tdep_h): New variable.
	(arm-linux-nat.o, arm-linux-tdep.o): Update.
	* arm-linux-nat.c: Include "arm-linux-tdep.h".
	(typeNone, typeSingle, typeDouble, typeExtended)
	(FPWORDS, ARM_CPSR_REGNUM, FPREG, FPA11)
	(fetch_nwfpe_single, fetch_nwfpe_double, fetch_nwfpe_none)
	(fetch_nwfpe_extended, fetch_nwfpe_register, store_nwfpe_single)
	(store_nwfpe_double, store_nwfpe_extended, store_nwfpe_register):
	Delete.
	(fetch_fpregister, fetch_fpregs, store_fpregister, store_fpregs):
	Use gdb_byte buffers, NWFPE_FPSR_OFFSET, supply_nwfpe_register,
	and collect_nwfpe_register.
	(fill_gregset, supply_gregset, fill_fpregset, supply_fpregset): Use
	new regset functions.
	* arm-linux-tdep.c: Include "regset.h" and "arm-linux-tdep.h".
	(arm_apcs_32): New declaration.
	(ARM_LINUX_SIZEOF_GREGSET, arm_linux_supply_gregset)
	(arm_linux_collect_gregset, typeNone, typeSingle, typeDouble)
	(typeExtended, supply_nwfpe_register, collect_nwfpe_register)
	(arm_linux_supply_nwfpe, arm_linux_collect_nwfpe)
	(arm_linux_regset_from_core_section): New.
	(arm_linux_init_abi): Register arm_linux_regset_from_core_section.
	* arm-linux-tdep.h: New file.
	* arm-tdep.h (struct regset): Declare.
	(struct gdbarch_tdep): Add gregset, fpregset members.
	* config/arm/linux.mh (NATDEPFILES): Remove corelow.o and
	core-regset.o.
	* config/arm/linux.mt (TDEPFILES): Add corelow.o.
@
text
@d1785 1
a1785 1
	$(arm_tdep_h) $(nbsd_tdep_h) $(solib_svr4_h)
@


1.826
log
@	* Makefile.in (init.c) [LANG, LC_ALL]: Set to `c'.
	* gdb_indent.sh, gdb_mbuild.sh, observer.sh: Likewise.
	* gdbarch.sh: Correct comment.
@
text
@d642 1
d1776 1
a1776 1
	$(target_h) $(linux_nat_h) $(gdb_proc_service_h)
d1780 1
@


1.825
log
@* alphaobsd-tdep.c: New file.
* alphanbsd-tdep.c (_initialize_alphanbsd_tdep): Do not register a
handler for GDB_OSABI_OPENBSD_ELF.
* Makefile.in (ALLDEPFILES): Add alphaobsd-tdep.c.
(alphaobsd-tdep.o): New target.
* config/alpha/obsd.mt: New file.
* configure.tgt (alpha*-*-openbsd*): Set gdb_target to obsd.
@
text
@d1154 3
a1156 1
	@@-echo $(INIT_FILES) | \
@


1.824
log
@* alphabsd-tdep.h: Tweak comments.
(SIZOEF_STRUCT_REG, SIZEOF_STRUCT_FPREG): Remove.
* alphanbsd-tdep.c: Reorder includes.  Include "regset.h".
(ALPHANBSD_SIZEOF_GREGS, ALPHANBSD_SIZEOF_FPREGS): New defines.
(alphanbsd_supply_fpregset, alphanbsd_supply_gregset)
(alphanbsd_aout_supply_gregset): New functions.
(alphanbsd_gregset, alphanbsd_fpregset, alphanbsd_aout_gregset):
New variables.
(alphanbsd_regset_from_core_section)
(alphanbsd_aout_regset_from_core_section): New functions.
(fetch_core_registers, fetch_elfcore_registers): Remove functions.
(alphanbsd_core_fns, alphanbsd_elf_fns): Remove variables.
(alphanbsd_init_abi): Set regset_from_core_section.
(alphanbsd_aout_init_abi, alphanbsd_core_osabi_sniffer): New
functions.
(_initialize_alphanbsd_tdep): Register NetBSD core file sniffer.
Use alphanbsd_aout_init_abi whre appropriate.  Don't call
deprecated_add_core_fns.
* Makefile.in (alphanbsd-tdep.o): Update dependencies.
@
text
@d1407 4
a1410 3
	alpha-nat.c alphabsd-nat.c alpha-linux-nat.c linux-fork.c \
	alpha-tdep.c alpha-linux-tdep.c alphabsd-tdep.c alphanbsd-tdep.c \
	alpha-osf1-tdep.c alphafbsd-tdep.c alpha-mdebug-tdep.c \
d1444 1
d1716 2
@


1.823
log
@gdb/
	* remote.c (remote_xfer_partial): Remove KOD support.
	* target.h (enum target_object): Remove TARGET_OBJECT_KOD.
	* MAINTAINERS: Move Kernel Object Display entry to past maintainers.
	* Makefile.in (SFILES, kod_h, COMMON_OBS, kod.o, kod-cisco.o): Remove KOD
	support.
	* mi/mi-cmds.c (mi_cmds): Remove dummy KOD commands.
	* NEWS: Mention KOD.
	* kod.h, kod.c, kod-cisco.c: Delete files.
gdb/doc/
	* doc/gdb.texinfo (KOD): Remove node.
	(GDB/MI Kod Commands): Remove commented out node.
@
text
@d1710 4
a1713 3
alphanbsd-tdep.o: alphanbsd-tdep.c $(defs_h) $(gdbcore_h) $(frame_h) \
	$(regcache_h) $(value_h) $(osabi_h) $(gdb_string_h) $(alpha_tdep_h) \
	$(alphabsd_tdep_h) $(nbsd_tdep_h) $(solib_svr4_h)
@


1.822
log
@	* arm-tdep.c (arm_register_type): Use unsigned types for registers.
	Add special types for sp and pc.
	* Makefile.in (arm-tdep.o): Update.
@
text
@a534 1
	kod.c kod-cisco.c \
a727 1
kod_h = kod.h
a928 1
	kod.o kod-cisco.o \
a2197 3
kod.o: kod.c $(defs_h) $(command_h) $(gdbcmd_h) $(target_h) $(gdb_string_h) \
	$(kod_h)
kod-cisco.o: kod-cisco.c $(defs_h) $(gdb_string_h) $(kod_h)
@


1.821
log
@Configury changes: update src repository (binutils, gdb, and rda) to use
config/gettext-sister.m4 instead of the old gettext.m4.  Regenerate all
affected autotools files.  Include intl in gdb releases again.
@
text
@d1786 1
a1786 1
	$(dwarf2_frame_h)
@


1.820
log
@gdb/
	* Makefile.in (arm-linux-nat.o): Update dependencies.
	* arm-linux-nat.c: Include "gdb_proc_service.h".
	(PTRACE_GET_THREAD_AREA): Define.
	(ps_get_thread_area): New function.
gdb/gdbserver/
	* Makefile.in (linux-arm-low.o): Update dependencies.
	* linux-arm-low.c: Include "../gdb_proc_service.h".
	(PTRACE_GET_THREAD_AREA): Define.
	(ps_get_thread_area): New function.
@
text
@d48 2
a49 1
# This can be referenced by `INTLDEPS' as computed by CY_GNU_GETTEXT.
d139 3
a141 5
INTL_DIR = ../intl
INTL = @@INTLLIBS@@
INTL_DEPS = @@INTLDEPS@@
INTL_SRC = $(srcdir)/$(INTL_DIR)
INTL_CFLAGS = -I$(INTL_DIR) -I$(INTL_SRC)
@


1.819
log
@Checked in under the 'obvious fix rule'

	2006-05-19  Fred Fish  <fnf@@specifix.com>
	* Makefile.in: Fix spelling of 'explicitly' and 'explicit'.
	* dwarfread.c: Fix spelling of 'unexpected'.
	* mips-tdep.c: Fix spelling of 'possible' and 'Determine'.
	* stack.c: Fix spelling of 'RETURN_VALUE'.
@
text
@d1772 1
a1772 1
	$(target_h) $(linux_nat_h)
@


1.818
log
@	* dwarf2-frame.c: Include "value.h".
	(read_reg): Use unpack_long and register_type.
	* Makefile.in (dwarf2-frame.o): Update.
@
text
@d1277 1
a1277 1
# always included in SUBDIRS.  Remove the gdbserver files explictly.
d1492 1
a1492 1
# Some files need explict build rules (due to -Werror problems) or due
@


1.817
log
@	* remote-rdp.c: Deleted.
	* NEWS: Mention removal of remote-rdp.c.

	* Makefile.in (ALLDEPFILES): Remove remote-rdp.c.
	(remote-rdp.o): Delete.
	* README: Remove description of remote-rdp.c.
	* arm-tdep.c (arm_breakpoint_from_pc): Remove obsolete comment.
	* config/arm/embed.mt (TDEPFILES): Remove remote-rdp.o.
@
text
@d1929 2
a1930 1
	$(gdb_assert_h) $(gdb_string_h) $(complaints_h) $(dwarf2_frame_h)
@


1.816
log
@* ppcobsd-nat.c: Include "gdb_assert.h".
[PT_GETFPREGS] (getfpregs_supplies): New function.
(ppcobsd_fetch_registers, ppcobsd_fetch_registers): Hanlde OS
versions that have PT_GETFPREGS.
(_initialize_ppcobsd_nat) [PT_GETFPREGS]: Initialize
ppcobsd_fpreg_offsets.
* ppcobsd-tdep.h (ppcobsd_fpreg_offsets, ppcobsd_fpregset):
Declare.
* ppcobsd-tdep.c (ppcobsd_fpreg_offsets, ppcobsd_fpregset): New
variables.
(_initialize_ppcobsd_tdep): Initialize ppcobsd_fpreg_offsets.
* Makefile.in (ppcobsd-nat.o): Update dependencies.
@
text
@d1471 1
a1471 1
	remote-rdp.c remote-sim.c \
a2506 3
remote-rdp.o: remote-rdp.c $(defs_h) $(inferior_h) $(value_h) \
	$(gdb_callback_h) $(command_h) $(symfile_h) $(remote_utils_h) \
	$(gdb_string_h) $(gdbcore_h) $(regcache_h) $(serial_h) $(arm_tdep_h)
@


1.815
log
@	* configure.ac: Use GCC_HEADER_STDINT.
	* acinclude.m4: Include stdint.m4.
	* Makefile.in (gdb_stdint_h): Define.
	(distclean): Remove gdb_stdint.h.
	(Makefile, stamp-h): Update rules to generate only the correct
	files.
	(gdb_stdint.h, stamp-int): New rules.
	* config.in, configure: Regenerated.
@
text
@d2443 2
a2444 2
	$(regcache_h) $(ppc_tdep_h) $(ppcobsd_tdep_h) $(bsd_kvm_h) \
	$(inf_ptrace_h)
@


1.814
log
@	* valprint.c: Include "exceptions.h".
	(val_print): If something goes wrong while printing, supply an
	error message.
@
text
@d616 1
d1284 1
d1322 5
a1326 1
	$(SHELL) config.status
d1330 14
a1343 1
	CONFIG_HEADERS=config.h:config.in $(SHELL) config.status
@


1.813
log
@* ppcnbsd-tdep.h: Update copyright year.  Include <stddef.h>
(ppcnbsd_supply_reg, ppcnbsd_fill_reg, ppcnbsd_supply_fpreg)
(ppcnbsd_fill_fpreg): Remove prototypes.
(struct regset): Add forward declaration.
(ppcnbsd_gregset, ppcnbsd_fpregset): Extern declarations.
* ppcnbsd-tdep.c: Update copyright year.  Include "gdbtypes.h",
"regset.h" and "gdb_string.h".  Don't include "breakpoint.h",
"value.h", target.h and nbsd-tdep.h".  Reorder includes.
(REG_FIXREG_OFFSET, REG_LR_OFFSET, REG_CR_OFFSET, REG_XER_OFFSET)
(REG_CTR_OFFSET, REG_PC_OFFSET, SIZEOF_STRUCT_REG)
(FPREG_FPR_OFFSET, FPREG_FPSCR_OFFSET, SIZEOF_STRUCT_FPREG):
Remove macros.
(ppcnbsd_supply_reg, ppcnbsd_fill_reg, ppcnbsd_supply_fpreg)
(ppcnbsd_fill_fpreg): Remove functions.
(fetch_core_registers, fetch_elfcore_registers): Remove functions.
(ppcnbsd_core_fns, ppcnbsd_elfcore_fns): Remove variables.
(ppcnbsd_reg_offsets): New variable.
(ppcnbsd_gregset, ppcnbsd_fpregset): New variables.
(ppcnbsd_sigtramp_cache_init): Deal with new signal trampoline
introduced in NetBSD 2.0.
(ppcnbsd_sigtramp): Provide complete signal trampoline.
(ppcnbsd2_sigtramp): New variable.
(ppcnbsd_init_abi): Set svr4_fetch_link_map_offsets to
svr4_ilp32_fetch_link_map_offsets.  Set regset_from_core_section.
Add ppcnbs2_sigtramp unwinder.
(_initialize_ppcnbsd_tdep): Don't use deprecated_add_core_fns.
Initialize ppcnbsd_reg_offsets.
* ppcnbsd-nat.c: Update copyright year.  Reorder includes.
(getregs_supplies): Use regnum instead of regno.
(getfpregs_supplies): Likewise.
(ppcnbsd_fetch_inferior_registers): Likewise.  Call
ppc_supply_gregset and ppc_suppply_fpregset instead of
ppcnbsd_supply_reg and ppcnbsd_supply_fpreg
(ppcnbsd_store_inferior_registers): Likewise.  Call
ppc_collect_gregset and ppc_collect_fpregset instead of
ppcnbsd_fill_reg and ppcnbsd_fill_fpreg.
(ppcnbsd_supply_pcb): Use `gdb_byte *' instead of `char *'.
(_initialize_ppcnbsd_nat): Add some whitespace.
* Makefile.in (ppcnbsd-nat.o, ppcnbsd-tdep.o): Update dependencies.
* config/powerpc/nbsd.mh (NATDEPFILES): Remove infptrace.o.
(NAT_FILE): Remove.
* config/powerpc/nbsd.mt (TDEPFILES): Remove nbsd-tdep.o.
@
text
@d2776 2
a2777 1
	$(annotate_h) $(valprint_h) $(floatformat_h) $(doublest_h)
@


1.812
log
@	* linux-nat.c (linux_nat_do_thread_registers): Use the
	regset_from_core_section infrastructure if the target
	supports it.
	* Makefile.in: Update dependencies.
@
text
@d2419 4
a2422 4
ppcnbsd-tdep.o: ppcnbsd-tdep.c $(defs_h) $(gdbcore_h) $(regcache_h) \
	$(target_h) $(breakpoint_h) $(value_h) $(osabi_h) $(ppc_tdep_h) \
	$(ppcnbsd_tdep_h) $(nbsd_tdep_h) $(tramp_frame_h) $(trad_frame_h) \
	$(gdb_assert_h) $(solib_svr4_h)
d2424 2
a2425 2
	$(regcache_h) $(ppc_tdep_h) $(ppcobsd_tdep_h) $(inf_ptrace_h) \
	$(bsd_kvm_h)
@


1.812.2.1
log
@Commit the changes described in the ChangeLog
but not committed on 2006-05-13.
@
text
@a643 2
async_nat_inferior_h = async-nat-inferior.h
async_nat_sigthread_h = async-nat-sigthread.h
a911 1
	async-nat-inferior.o async-nat-sigthread.o \
d1205 1
a1205 1
		$(TDEPLIBS) $(TUI_LIBRARY) $(CLIBS) $(LOADLIBES) -lpthread
d1211 1
a1211 1
		$(TDEPLIBS) $(TUI_LIBRARY) $(CLIBS) $(LOADLIBES) -lpthread
a1768 2
async-nat-inferior.o: async-nat-inferior.c $(defs_h) $(async_nat_inferior_h)
async-nat-sigthread.o: async-nat-sigthread.c $(defs_h) $(async_nat_sigthread_h)
d1943 1
a1943 1
	$(xcoffsolib_h) $(observer_h) $(async_nat_inferior_h)
d2073 1
a2073 1
	$(gdb_proc_service_h) $(target_h) $(async_nat_inferior_h)
a2144 1
	$(async_nat_inferior_h)
d2203 1
a2203 1
	$(linux_fork_h) $(async_nat_inferior_h)
@


1.812.2.2
log
@(inf-ptrace.o): Add missing backslash.
@
text
@d2149 1
a2149 1
	$(gdb_string_h) $(gdb_ptrace_h) $(gdb_wait_h) $(inf_child_h) \
@


1.812.2.3
log
@Changes from nickrob-async-20060828-mergepoint.
@
text
@d48 1
a48 2
# This can be referenced by `LIBINTL' as computed by
# ZW_GNU_GETTEXT_SISTER_DIR.
a129 3
# Where is expat?  This will be empty if expat was not available.
LIBEXPAT = @@LIBEXPAT@@

d138 5
a142 3
INTL = @@LIBINTL@@
INTL_DEPS = @@LIBINTL_DEP@@
INTL_CFLAGS = @@INCINTL@@
a342 3
# Set by configure, for e.g. expat.
INTERNAL_CPPFLAGS = @@CPPFLAGS@@

d353 1
a353 1
	$(INTL_CFLAGS) $(ENABLE_CFLAGS) $(INTERNAL_CPPFLAGS)
d380 1
a380 1
	$(LIBICONV) $(LIBEXPAT) \
d536 1
a615 1
gdb_stdint_h = gdb_stdint.h
a638 1
amd64_linux_tdep_h = amd64-linux-tdep.h
a642 1
arm_linux_tdep_h = arm-linux-tdep.h
d731 1
d934 1
d1160 1
a1160 3
	@@-LANG=c ; export LANG ; \
	LC_ALL=c ; export LC_ALL ; \
	echo $(INIT_FILES) | \
d1279 1
a1279 1
# always included in SUBDIRS.  Remove the gdbserver files explicitly.
a1285 1
	rm -f gdb_stdint.h
d1323 1
a1323 5
	# Regenerate the Makefile and the tm.h / nm.h links.
	CONFIG_FILES=Makefile \
	  CONFIG_COMMANDS= \
	  CONFIG_HEADERS= \
	  $(SHELL) config.status
d1327 1
a1327 14
	CONFIG_HEADERS=config.h:config.in \
	  CONFIG_COMMANDS=default \
	  CONFIG_FILES= \
	  CONFIG_LINKS= \
	  $(SHELL) config.status

gdb_stdint.h: stamp-int ; @@true
stamp-int: config.status
	CONFIG_COMMANDS=gdb_stdint.h \
	  CONFIG_FILES= \
	  CONFIG_HEADERS= \
	  CONFIG_LINKS= \
	  $(SHELL) config.status
	echo stamp > stamp-int
d1395 3
a1397 4
	alpha-nat.c alphabsd-nat.c alpha-linux-nat.c \
	alpha-tdep.c alpha-mdebug-tdep.c \
	alpha-linux-tdep.c alpha-osf1-tdep.c \
	alphabsd-tdep.c alphafbsd-tdep.c alphanbsd-tdep.c alphaobsd-tdep.c \
d1405 1
a1405 1
	armnbsd-nat.c armbsd-tdep.c armnbsd-tdep.c armobsd-tdep.c \
a1430 1
	linux-fork.c \
d1455 1
a1455 1
	remote-sim.c \
d1476 1
a1476 1
# Some files need explicit build rules (due to -Werror problems) or due
d1520 5
d1685 1
a1685 2
	$(alpha_tdep_h) $(alphabsd_tdep_h) $(inf_ptrace_h) $(gregset_h) \
	$(bsd_kvm_h)
d1698 3
a1700 7
alphanbsd-tdep.o: alphanbsd-tdep.c $(defs_h) $(frame_h) $(gdbcore_h) \
	$(regcache_h) $(regset_h) $(value_h) $(osabi_h) $(gdb_string_h) \
	$(gdb_assert_h) $(alpha_tdep_h) $(alphabsd_tdep_h) $(nbsd_tdep_h) \
	$(solib_svr4_h)
alphaobsd-tdep.o: alphaobsd-tdep.c $(defs_h) $(frame_h) $(gdbcore_h) \
	$(osabi_h) $(obsd_tdep_h) $(alpha_tdep_h) $(alphabsd_tdep_h) \
	$(solib_svr4_h)
d1721 1
a1721 1
	$(i386_linux_tdep_h) $(amd64_nat_h) $(target_h) $(amd64_linux_tdep_h)
d1724 1
a1724 1
	$(solib_svr4_h) $(gdbtypes_h) $(reggroups_h) $(amd64_linux_tdep_h)
d1756 1
a1756 1
	$(target_h) $(linux_nat_h) $(gdb_proc_service_h) $(arm_linux_tdep_h)
a1759 1
	$(regset_h) $(arm_linux_tdep_h) \
a1762 2
armbsd-tdep.o: armbsd-tdep.c $(defs_h) $(osabi_h) $(regcache_h) $(regset_h) \
	$(gdb_assert_h) $(gdb_string_h) $(arm_tdep_h)
d1764 1
a1764 4
	$(arm_tdep_h) $(solib_svr4_h)
armobsd-tdep.o: armobsd-tdep.c $(defs_h) $(osabi_h) $(trad_frame_h) \
	$(tramp_frame_h) $(gdb_string_h) $(obsd_tdep_h) $(arm_tdep_h) \
	$(solib_svr4_h)
d1771 1
a1771 1
	$(dwarf2_frame_h) $(gdbtypes_h)
d1915 1
a1915 2
	$(gdb_assert_h) $(gdb_string_h) $(complaints_h) $(dwarf2_frame_h) \
	$(value_h)
d2188 3
d2387 1
a2387 2
	$(hashtab_h) $(breakpoint_h) $(block_h) $(dictionary_h) $(source_h) \
	$(parser_defs_h) $(expression_h)
d2425 4
a2428 4
ppcnbsd-tdep.o: ppcnbsd-tdep.c $(defs_h) $(gdbcore_h) $(gdb_types_h) \
	$(osabi_h) $(regcache_h) $(regset_h) $(trad_frame_h) \
	$(tramp_frame_h) $(gdb_assert_h) $(gdb_string_h) \
	$(ppc_tdep_h) $(ppcnbsd_tdep_h) $(solib_svr4_h)
d2430 2
a2431 2
	$(regcache_h) $(gdb_assert_h) $(ppc_tdep_h) $(ppcobsd_tdep_h) \
	$(bsd_kvm_h) $(inf_ptrace_h)
d2494 3
d2623 1
a2623 2
	$(filenames_h) $(completer_h) $(ui_out_h) $(readline_h) \
	$(gdb_assert_h)
d2710 1
a2710 2
	$(gdb_string_h) $(gdb_stat_h) $(observer_h) $(exec_h) \
	$(parser_defs_h)
d2782 1
a2782 2
	$(annotate_h) $(valprint_h) $(floatformat_h) $(doublest_h) \
	$(exceptions_h)
@


1.812.2.4
log
@Move link flag for pthread library to config/i386/linux.mh (LOADLIBES).
@
text
@d1215 1
a1215 1
		$(TDEPLIBS) $(TUI_LIBRARY) $(CLIBS) $(LOADLIBES)
d1221 1
a1221 1
		$(TDEPLIBS) $(TUI_LIBRARY) $(CLIBS) $(LOADLIBES)
@


1.812.2.5
log
@Move async-nat-sigthread.o from (COMMON_OBS) to
config/i386/linux.mh (NATDEPFILES).
@
text
@d920 1
@


1.812.2.6
log
@Add new header dependencies.
@
text
@d2166 1
a2166 1
	$(dummy_frame_h) $(async_nat_inferior_h) $(async_nat_sigthread_h)
d2174 1
a2174 2
	$(solib_h) $(gdb_assert_h) $(observer_h) $(async_nat_inferior_h) \
	$(async_nat_sigthread_h)
d2239 1
a2239 1
	$(linux_fork_h) $(inf_loop_h) $(async_nat_inferior_h)
@


1.811
log
@	* rs6000-tdep.c: Include "reggroups.h" only once.
	* Makefile.in (rs6000-tdep.o): Update dependencies.
@
text
@d2201 2
a2202 2
	$(gdbcmd_h) $(regcache_h) $(inf_ptrace_h) $(auxv_h) $(elf_bfd_h) \
	$(gregset_h) $(gdbcore_h) $(gdbthread_h) $(gdb_stat_h) \
@


1.810
log
@2006-04-20  Michael Snyder  <msnyder@@redhat.com>

	* 2006-03-22  Jim Blandy  <jimb@@redhat.com>
	Add support for the Renesas M32C and M16C.

	* configure.tgt (m32c-*-*): New entry.
	* config/m32c/m32c.mt: New file.
	* m32c-tdep.c: New file.
	* Makefile.in (elf_m32c_h): New variable.
	(m32c-tdep.o): New rule.
	* NEWS: Mention new target.
	* MAINTAINERS: Designate Jim Blandy as responsible maintainer.
@
text
@d2518 1
a2518 1
	$(frame_unwind_h) $(frame_base_h) $(reggroups_h) $(rs6000_tdep_h)
@


1.809
log
@	* sparc64-linux-tdep.c (sparc64_linux_init_abi): Append dwarf2
	frame sniffer.
	* sparc-tdep.c (sparc32_gdbarch_init): Make sure to call
	dwarf2_frame_set_init_reg() before gdbarch_init_osabi() so
	that the latter can override.
	* Makefile.in (sparc64-linux-tdep.o): Update dependencies.
@
text
@d585 1
d602 1
d2220 5
@


1.808
log
@	* Makefile.in (s390-tdep.o): Add dependency on $(prologue_value_h).
	* s390-tdep.c: Include "prologue-value.h".
	(struct prologue_value): Remove.
	(pv_set_to_unknown, pv_set_to_constant, pv_set_to_register,
	pv_constant_last, pv_add, pv_add_constant, pv_subtract,
	pv_logical_and, pv_is_identical, pv_is_register): Remove.
	(compute_x_addr): Remove, replace by ...
	(s390_addr): ... this new function.
	(struct s390_prologue_data): Use pv_t instead of prologue_value.
	(s390_store, s390_load): Likewise.
	(s390_prologue_frame_unwind_cache): Likewise.
	(s390_analyze_prologue): Likewise.  Also, simplify and combine
	several conditional statements.
@
text
@d2621 3
a2623 3
	$(frame_unwind_h) $(regset_h) $(regcache_h) $(gdbarch_h) \
	$(gdbcore_h) $(osabi_h) $(solib_svr4_h) $(symtab_h) $(trad_frame_h) \
	$(tramp_frame_h) $(sparc64_tdep_h)
@


1.807
log
@2006-04-08  Jim Blandy  <jimb@@codesourcery.com>

	* Makefile.in (COMMON_OBS): List prologue-value.o.  (Omitted from
	last patch.)
@
text
@d2519 2
a2520 1
	$(value_h) $(gdb_assert_h) $(dis_asm_h) $(solib_svr4_h) $(s390_tdep_h)
@


1.806
log
@	* sparc64-linux-tdep.c (sparc64_linux_core_gregset,
	sparc64_linux_supply_core_gregset,
	sparc64_linux_collect_core_gregset,
	sparc64_linux_supply_core_fpregset,
	sparc64_linux_collect_core_fpregset): New.
	(sparc64_linux_init_abi): Register them with generic sparc
	core regset infrastructure.
	* sparc32-linux-tdep.c (sparc32_linux_core_gregset,
	sparc32_linux_supply_core_gregset,
	sparc32_linux_collect_core_gregset,
	sparc32_linux_supply_core_fpregset,
	sparc32_linux_collect_core_fpregset): New.
	(sparc32_linux_init_abi): Register them with generic sparc
	core regset infrastructure.
	* Makefile.in: Update dependencies.
@
text
@d955 2
a956 1
	solib.o solib-null.o
@


1.805
log
@	* sparc-linux-tdep.c (sparc32_linux_step_trap): New.
	(sparc32_linux_init_abi): Hook it into tdep->step_trap.
	* sparc64-linux-tdep.c (sparc64_linux_step_trap): New.
	(sparc64_linux_init_abi): Hook it into tdep->step_trap.
	* Makefile.in: Update dependencies.
@
text
@d2619 2
a2620 2
	$(frame_unwind_h) $(regcache_h) $(gdbarch_h) $(gdbcore_h) \
	$(osabi_h) $(solib_svr4_h) $(symtab_h) $(trad_frame_h) \
d2647 3
a2649 3
	$(floatformat_h) $(frame_h) $(frame_unwind_h) $(gdbarch_h) \
	$(gdbcore_h) $(osabi_h) $(regcache_h) $(solib_svr4_h) $(symtab_h) \
	$(trad_frame_h) $(tramp_frame_h) $(sparc_tdep_h)
@


1.804
log
@	* Makefile.in: Update dependencies.
@
text
@d2619 3
a2621 2
	$(frame_unwind_h) $(gdbarch_h) $(osabi_h) $(solib_svr4_h) \
	$(symtab_h) $(trad_frame_h) $(tramp_frame_h) $(sparc64_tdep_h)
@


1.803
log
@	* sparc-linux-tdep.c (sparc32_linux_init_abi): Append
	dwarf2 frame sniffer.
	* Makefile.in (sparc-linux-tdep.o): Update dependencies.
@
text
@d2198 1
a2198 1
	$(gdbcmd_h) $(regcache_h) $(inf_ptrace.h) $(auxv.h) $(elf_bfd_h) \
d2340 1
a2342 1

d2373 1
a2373 1
	$(hashtab_h) $(breakpoint_h) $(block_h) $(dictionary_h)
d2384 2
a2385 2
	$(parser_defs_h) $(gdbcmd_h) $(symfile_h) $(inferior_h) \
	$(doublest_h) $(gdb_assert_h) $(block_h)
d2420 2
a2421 2
	$(trad_frame_h) $(gdb_assert_h) $(gdb_string_h) $(ppc_tdep_h) \
	$(ppcobsd_tdep_h) $(solib_svr4_h)
d2437 1
a2437 1
	$(gdb_dirent_h) $(X_OK) $(gdb_stat_h) $(proc_utils_h) $(gregset_h)
d2564 1
a2564 1
sol2-tdep.o: sol2-tdep.c $(defs_h) $(frame_h) $(symtab_h)
d2635 2
a2636 1
	$(trad_frame_h) $(gdb_assert_h) $(sparc64_tdep_h) $(solib_svr4_h)
d2667 1
a2667 1
	$(sparc_tdep_h) $(solib_svr4_h)
d2684 1
a2684 1
	$(valprint.h)$(gdb_assert_h) $(gdb_string_h)
d2701 2
a2702 2
	$(block_h) $(gdb_regex_h) $(dictionary_h) $(gdb_string_h) \
	$(readline_h)
d2771 3
a2773 2
varobj.o: varobj.c $(defs_h) $(value_h) $(expression_h) $(frame_h) \
	$(language_h) $(wrapper_h) $(gdbcmd_h) $(gdb_string_h) $(varobj_h)
d2780 1
a2780 1
vaxobsd-tdep.o: vaxobsd-tdep.c  $(defs_h) $(arch_utils_h) $(frame_h) \
d2784 1
a2784 1
	$(float_format_h)$(frame_h) $(frame_base_h) $(frame_unwind_h) \
d2790 2
a2791 2
	$(gdb_string_h) $(gdbthread_h) $(gdbcmd_h) $(exec_h) $(i386_tdep_h) \
	$(i387_tdep_h)
d2827 2
a2828 2
	$(gdb_regex_h) $(gdb_string_h) $(ui_out_h) $(cli_cmds_h) \
	$(cli_decode_h) $(tui_h) $(gdb_assert_h)
d3058 1
a3058 1
mi-common.o: $(srcdir)/mi/mi-common.c $(mi_common_h)
d3107 2
a3108 1
	$(tui_data_h) $(readline_h) $(tui_win_h) $(tui_h) $(tui_io_h)
@


1.802
log
@	* Makefile.in (sparc-linux-nat.o, sparc64-linux-nat.o): Update for
	new includes.
@
text
@d2644 4
a2647 4
sparc-linux-tdep.o: sparc-linux-tdep.c $(defs_h) $(floatformat_h) $(frame_h) \
	$(frame_unwind_h) $(gdbarch_h) $(gdbcore_h) $(osabi_h) $(regcache_h) \
	$(solib_svr4_h) $(symtab_h) $(trad_frame_h) $(tramp_frame_h) \
	$(sparc_tdep_h)
d2669 4
a2672 4
	$(floatformat_h) $(frame_h) $(frame_base_h) $(frame_unwind_h) \
	$(gdbcore_h) $(gdbtypes_h) $(inferior_h) $(symtab_h) $(objfiles_h) \
	$(osabi_h) $(regcache_h) $(target_h) $(value_h) $(gdb_assert_h) \
	$(gdb_string_h) $(sparc_tdep_h)
@


1.801
log
@	* Makefile.in (elf_common_h): Define.
@
text
@d2615 2
a2616 1
sparc64-linux-nat.o: sparc64-linux-nat.c $(defs_h) $(sparc64_tdep_h) \
d2641 2
a2642 1
sparc-linux-nat.o: sparc-linux-nat.c $(defs_h) $(inferior_h) $(target_h) \
@


1.800
log
@	* linux-thread-db.c: Include "linux-nat.h".
	(check_for_thread_db): New function, split out from
	thread_db_new_objfile.  Remove dead check for active
	thread_db on inapplicable targets.
	(thread_db_new_objfile): Call check_for_thread_db.
	* Makefile.in (linux-thread-db.o): Update.
	* linux-nat.c (child_post_attach): Call check_for_thread_db.
	(linux_child_post_startup_inferior): Likewise.
	(lin_lwp_attach_lwp): Call target_post_attach instead of
	child_post_attach.
	* linux-nat.h (check_for_thread_db): New prototype.
@
text
@d579 1
@


1.799
log
@2005-03-30  Randolph Chung  <tausq@@debian.org>

	* hppa-linux-tdep.c: Include regset.h.
	(GR_REGNUM, TR_REGNUM, greg_map): New.
	(hppa_linux_supply_regset, hppa_linux_supply_fpregset): New.
	(hppa_linux_regset, hppa_linux_fpregset): New.
	(hppa_linux_regset_from_core_section): New.
	(hppa_linux_init_abi): Set regset_from_core_section.
	(_initialize_hppa_linux_tdep): Register osabi handler for
	64-bit Linux.
	* Makefile.in (hppa-linux-tdep.o): Update dependencies.
	* config/pa/linux.mh: Stop using core-regset.o
@
text
@d2203 1
a2203 1
	$(regcache_h) $(solib_svr4_h) $(gdbcore_h)
@


1.798
log
@2006-03-29  Daniel Jacobowitz  <dan@@codesourcery.com>

	* NEWS: Mention the removal of NLM.

2006-03-29  Steve Ellcey  <sje@@cup.hp.com>

	* Makefile.in (nlm): Remove target.
	* configure.tgt (i[34567]86-*-netware*): Do not set build_nlm.
	* configure.ac: Remove AC_CONFIG_SUBDIRS of nlm.
	* configure: Regenerate.
	* doc/gdb.texinfo: Remove gdbserve.nlm documentation.
	* nlm: Remove directory.
@
text
@d2036 1
a2036 1
	$(hppa_tdep_h) $(elf_common_h)
@


1.798.2.1
log
@2006-03-31  Michael Snyder  <msnyder@@redhat.com>

	User interface for reverse execution.
	* Makefile.in (reverse.c): New file.
	* reverse.c: New file.  User interface for reverse execution.
@
text
@d546 1
a546 1
	regcache.c reggroups.c remote.c remote-fileio.c reverse.c \
d930 1
a930 2
	exec.o reverse.o \
	bcache.o objfiles.o observer.o minsyms.o maint.o demangle.o \
a2495 2
reverse.o: reverse.c $(defs_h) $(gdb_string_h) $(target_h) $(cli_cmds_h) \
	$(cli_decode_h) $(top_h)
@


1.797
log
@	* Makefile.in (utils.o): Update.
	* top.c (in_user_command): New.
	(command_line_input): Use input_from_terminal_p.
	(input_from_terminal_p): Don't check caution.  Handle
	stdin == NULL for Insight.
	* top.h (in_user_command, caution): New declarations.
	* utils.c: Include "top.h".
	(query, defaulted_query): Check caution here.  Move the call
	to input_from_terminal_p higher.
	* cli/cli-script.c (do_restore_user_call_depth): Only decrement
	the depth.  Update in_user_command if necessary.
	(execute_user_command): Don't clobber old_chain.  Set
	in_user_command.  Let do_restore_user_call_depth handle
	user_call_depth.
	(read_command_lines): Check whether to prompt before calling
	Insight hooks.
	* tui/tui-hooks.c (tui_query_hook): Remove newly unnecessary
	input_from_terminal_p check.
@
text
@a1208 3
nlm:	force
	rootme=`pwd`; export rootme; $(MAKE) $(TARGET_FLAGS_TO_PASS) DO=all DODIRS=nlm subdir_do

@


1.796
log
@src/gdb/ChangeLog:
2006-03-28  Jim Blandy  <jimb@@codesourcery.com>

	* prologue-value.c, prologue-value.h: New files.
	* Makefile.in (prologue_value_h): New variable.
	(HFILES_NO_SRCDIR): List prologue-value.h.
	(SFILES): List prologue-value.c.
	(COMMON_OBS): List prologue-value.o.
	(prologue-value.o): New rule.

src/gdb/doc/ChangeLog:
2006-03-28  Jim Blandy  <jimb@@codesourcery.com>

	* gdbint.texinfo (Prologue Analysis): New section.
@
text
@d2747 1
a2747 1
	$(annotate_h) $(filenames_h) $(symfile_h) $(inferior_h) \
@


1.795
log
@	* linux-nat.c (linux_ops_saved): New.
	(super_mourn_inferior, kill_inferior, threaded, linux_nat_ops)
	(child_mourn_inferior, child_wait, linux_nat_create_inferior)
	(linux_nat_fetch_registers, linux_nat_store_registers)
	(linux_nat_child_post_startup_inferior, init_linux_nat_ops): Delete.
	(init_lwp_list): Don't set threaded.
	(add_lwp): Don't modify threaded.
	(delete_lwp): Don't mention non-threaded mode.
	(linux_nat_switch_fork): New.
	(linux_nat_attach): Update inferior_ptid.
	(linux_nat_wait): Handle num_lwps == 0 at entry.  Don't check
	threaded flag.
	(linux_nat_kill): Handle pending forks and saved forks.
	(linux_nat_mourn_inferior): Handle saved forks.
	(linux_nat_pid_to_str): Don't use the LWP form when there is
	only one thread.
	(linux_target): Don't set to_wait, to_kill, or to_mourn_inferior.
	(linux_nat_add_target): New.
	(_initialize_linux_nat): Don't initialize the linux native target
	here.
	* linux-nat.h (linux_nat_add_target, linux_nat_switch_fork): New
	prototypes.
	* linux-fork.c: Include "linux-nat.h".
	(add_fork): Update initial PID.
	(fork_load_infrun_state): Call linux_nat_switch_fork.
	* Makefile.in (linux-fork.o): Update.

	* alpha-linux-nat.c (_initialize_alpha_linux_nat): Use
	linux_nat_add_target instead of add_target.
	* amd64-linux-nat.c (_initialize_amd64_linux_nat): Likewise.
	* arm-linux-nat.c (_initialize_arm_linux_nat): Likewise.
	* hppa-linux-nat.c (_initialize_hppa_linux_nat): Likewise.
	* ia64-linux-nat.c (_initialize_ia64_linux_nat): Likewise.
	* i386-linux-nat.c (_initialize_i386_linux_nat): Likewise.
	* m32r-linux-nat.c (_initialize_m32r_linux_nat): Likewise.
	* m68klinux-nat.c (_initialize_m68k_linux_nat): Likewise.
	* mips-linux-nat.c (_initialize_mips_linux_nat): Likewise.
	* ppc-linux-nat.c (_initialize_ppc_linux_nat): Likewise.
	* s390-nat.c (_initialize_s390_nat): Likewise.
	* sparc-linux-nat.c (_initialize_sparc_linux_nat): Likewise.
	* sparc64-linux-nat.c (_initialize_sparc64_linux_nat): Likewise.
@
text
@d545 1
d761 1
d872 1
d2443 2
@


1.794
log
@	* linux-fork.c: Include "gdb_assert.h".
	(fork_load_infrun_state): Set inferior_ptid and stop_pc here.
	Update the register cache and selected frame also.
	(linux_fork_mourn_inferior): Use fork_load_infrun_state.  Return
	to single fork mode if necessary.
	(linux_fork_context): Remove bits handled by fork_load_infrun_state.
	* Makefile.in (linux_fork_h): New.
	(linux-fork.o, linux-nat.o): Update.
@
text
@d2193 2
a2194 1
	$(infcall_h) $(gdb_assert_h) $(gdb_string_h) $(linux_fork_h)
@


1.793
log
@Add FR-V Linux core file support.
@
text
@d729 1
d2192 2
a2193 2
linux-fork.o: linux-fork.c linux-fork.h $(defs_h) $(inferior_h) \
	$(regcache_h) $(gdbcmd_h) $(infcall_h)
d2197 2
a2198 1
	$(gregset_h) $(gdbcore_h) $(gdbthread_h) $(gdb_stat_h) linux-fork.h
@


1.792
log
@	* Makefile.in (mips_linux_tdep_h): New.
	(mpis-linux-nat.o, mips-linux-tdep.o): Update.
	* mips-linux-nat.c: Include "inferior.h", "mips-linux-tdep.h", and
	<sys/ptrace.h>.
	(have_ptrace_regsets, super_fetch_registers, super_store_registers)
	(mips64_linux_regsets_fetch_registers)
	(mips64_linux_regsets_store_registers, mips64_linux_fetch_registers)
	(mips64_linux_store_registers): New.
	(_initialize_mips_linux_nat): Override to_fetch_registers and
	to_store_registers.
	* mips-linux-tdep.h: New file.
	* mips-linux-tdep.c: Include "mips-linux-tdep.c".
	(ELF_NGREG, ELF_NFPREG, elf_greg_t, elf_gregset_t, elf_fpreg_t)
	(elf_fpregset_t, FPR_BASE, PC, CAUSE, BADVADDR, MMHI, MMLO)
	(FPC_CSR, FPC_EIR, EF_REG0, EF_REG31, EF_LO, EF_HI, EF_CP0_EPC)
	(EF_CP0_BADVADDR, EF_CP0_STATUS, EF_CP0_CAUSE, EF_SIZE)
	(MIPS64_ELF_NGREG, MIPS64_ELF_NFPREG, mips64_elf_greg_t)
	(mips64_elf_gregset_t, mips64_elf_fpreg_t, mips64_elf_fpregset_t)
	(MIPS64_FPR_BASE, MIPS64_PC, MIPS64_CAUSE, MIPS64_BADVADDR)
	(MIPS64_MMHI, MIPS64_MMLO, MIPS64_FPC_CSR, MIPS64_FPC_EIR)
	(MIPS64_EF_REG0, MIPS64_EF_REG31, MIPS64_EF_LO, MIPS64_EF_HI)
	(MIPS64_EF_CP0_EPC, MIPS64_EF_CP0_BADVADDR, MIPS64_EF_CP0_STATUS)
	(MIPS64_EF_CP0_CAUSE, MIPS64_EF_SIZE): Delete.
	(supply_32bit_reg): Use gdb_byte.
	(supply_64bit_reg): New.
	(mips_supply_gregset, mips_fill_gregset, mips_supply_fpregset)
	(mips_fill_fpregset, fetch_core_registers, supply_gregset)
	(fill_gregset, supply_fpregset): Update for renamed types.
	(mips64_supply_gregset): Use gdb_byte and supply_64bit_reg.
	(mips64_fill_gregset): Make global.  Handle 32-bit register
	sizes.
	(mips64_fill_fpregset): Make global.  Use gdb_byte.  Handle
	FP regsets properly.
@
text
@d1967 4
a1970 3
frv-linux-tdep.o: frv-linux-tdep.c $(defs_h) $(target_h) $(frame_h) \
	$(osabi_h) $(elf_bfd_h) $(elf_frv_h) $(frv_tdep_h) $(trad_frame_h) \
	$(frame_unwind_h)
@


1.791
log
@	* mips-linux-tdep.c: Include "floatformat.h".
	(mips_linux_init_abi): Use 128-bit long double for N32 and N64.
	(mips_n32n64_return_value): Support 128-bit long double.
	(print_gp_register_row): Don't print spaces before ignored
	or floating point registers.
@
text
@d740 1
d2299 2
a2300 1
	$(linux_nat_h) $(gdb_proc_service_h)
d2304 1
a2304 1
	$(tramp_frame_h) $(floatformat_h)
@


1.790
log
@	* mips-linux-nat.c: Include "gdb_proc_service.h".
	(PTRACE_GET_THREAD_AREA): Define.
	(ps_get_thread_area): New.
	* Makefile.in (mips-linux-nat.o): Update.
@
text
@d2302 1
a2302 1
	$(tramp_frame_h)
@


1.789
log
@Add am33 linux signal frame support.
@
text
@d2298 1
a2298 1
	$(linux_nat_h)
@


1.789.2.1
log
@Initial version of available features support.
@
text
@a129 4
# Where is the expat library?  Typically in ../expat.
EXPAT = ../expat/.libs/libexpat.a
EXPAT_CFLAGS = -I$(srcdir)/expat/lib -I../expat

a352 1
	$(EXPAT_CFLAGS) \
d381 1
a381 1
	$(LIBIBERTY) $(WIN32LIBS) $(EXPAT)
d383 1
a383 1
	$(OPCODES) $(INTL_DEPS) $(LIBIBERTY) $(CONFIG_DEPS) $(EXPAT)
d393 1
a393 1
	$(INTL_CFLAGS) $(EXPAT_CFLAGS)
a513 1
	auxv.c available.c \
a544 1
	parse-avail.c \
a640 1
available_h = available.h
d789 1
a789 1
symfile_h = symfile.h $(symtab_h)
a904 1
	available.o parse-avail.o \
d1762 1
a1762 1
	$(dwarf2_frame_h) $(available_h)
a1765 3
available.o: available.c $(defs_h) $(symfile_h) $(target_h) $(available_h) \
	$(arch_utils_h) $(gdbtypes_h) \
	$(gdb_string) $(gdb_assert) $(gdb_obstack_h)
d1985 1
a1985 2
	$(gdb_events_h) $(reggroups_h) $(osabi_h) $(gdb_obstack_h) \
	$(available_h)
d2129 1
a2129 1
	$(solib_h) $(gdb_assert_h) $(gdb_obstack_h) $(observer_h)
a2378 2
parse-avail.o: parse-avail.c $(defs_h) $(available_h) \
	$(gdb_string) $(gdb_obstack_h)
d2453 1
a2453 1
	$(cli_decode_h) $(cli_setshow_h) $(available_h)
@


1.789.2.2
log
@Build SHA-1 support for checksumming.
@
text
@a555 1
	sha1.c \
a618 1
gdb_stdint_h = gdb_stdint.h
a780 1
sha1_h = sha1.h $(gdb_stdint_h)
a944 1
	sha1.o \
a1285 1
	rm -f gdb_stdint.h
d1323 1
a1323 5
	# Regenerate the Makefile and the tm.h / nm.h links.
	CONFIG_FILES=Makefile \
	 CONFIG_COMMANDS= \
	 CONFIG_HEADERS= \
	 $(SHELL) config.status
d1327 1
a1327 5
	CONFIG_HEADERS=config.h:config.in \
	 CONFIG_COMMANDS=default \
	 CONFIG_FILES= \
	 CONFIG_LINKS= \
	 $(SHELL) config.status
a1331 8
gdb_stdint.h: stamp-int ; @@true
stamp-int: config.status
	CONFIG_COMMANDS=gdb_stdint.h \
	 CONFIG_FILES= \
	 CONFIG_HEADERS= \
	 CONFIG_LINKS= \
	 $(SHELL) config.status
	echo stamp > stamp-int
a2548 1
sha1.o: sha1.c $(config_h) $(sha1_h)
@


1.789.2.3
log
@Add RAM caching, checksum, and non-sequential register support.
@
text
@a611 1
filenames_h =	$(INCLUDE_DIR)/filenames.h
d1797 2
a1798 2
	$(arch_utils_h) $(gdbtypes_h) $(sha1_h) \
	$(gdb_string) $(gdb_assert) $(gdb_obstack_h) $(gdb_stdint_h)
d2413 2
a2414 2
parse-avail.o: parse-avail.c $(defs_h) $(available_h) $(gdb_assert_h) \
	$(filenames_h) $(gdb_string) $(gdb_obstack_h)
@


1.789.2.4
log
@Compile in the XML DTD.
Handle XInclude processing as a separate pass.
@
text
@a402 3
# XML files to build in to GDB.
XMLFILES = $(srcdir)/features/gdb-target.dtd $(TDEP_XML)

d963 1
a963 2
	solib.o solib-null.o \
	xml-builtin.o
a1273 1
	rm -f xml-builtin.c stamp-xml
a1678 25
# XML rules

xml-builtin.c: stamp-xml; @@true
stamp-xml: $(srcdir)/features/feature_to_c.sh Makefile $(XMLFILES)
	rm -f xml-builtin.tmp
	for f in dummy $(XMLFILES); do \
	  if test $$f != dummy; then \
	    $(SHELL) $(srcdir)/features/feature_to_c.sh "$$f" xml-builtin.tmp; \
	  fi; \
	done
	echo "const char *const xml_builtin[][2] = {" >> xml-builtin.tmp
	for f in dummy $(XMLFILES); do \
	  if test $$f != dummy; then \
	    basename=`echo $$f | sed 's,.*/,,'`; \
            arrayname=xml_feature_`echo $$basename | sed 's/[-.]/_/g'`; \
	    echo "  { \"$$basename\", $$arrayname }," >> xml-builtin.tmp; \
	  fi; \
	done
	echo "  { 0, 0 }" >> xml-builtin.tmp
	echo "};" >> xml-builtin.tmp
	$(SHELL) $(srcdir)/../move-if-change xml-builtin.tmp xml-builtin.c
	echo stamp > stamp-xml

.PRECIOUS: xml-builtin.c

d2415 1
a2415 1
	$(filenames_h) $(gdb_string) $(gdb_obstack_h) $(sha1_h)
@


1.789.2.5
log
@Require targets to provide all their registers if an XML description
is used; fix various bugs this uncovered.  Allow ARM descriptions without
FPA.
@
text
@d1689 15
a1703 1
	$(SHELL) $(srcdir)/features/feature_to_c.sh xml-builtin.tmp $(XMLFILES)
d1828 1
a1828 1
	$(arch_utils_h) $(exceptions_h) $(gdbtypes_h) $(sha1_h) \
@


1.789.2.6
log
@Basic register group support.
@
text
@a1814 1
	$(reggroups_h) \
@


1.789.2.7
log
@Correct path to expat headers.
@
text
@d132 1
a132 1
EXPAT_CFLAGS = -I$(srcdir)/../expat/lib -I../expat
@


1.789.2.8
log
@Add support for VFP DWARF information and VFP single-precision
pseudo-registers.
@
text
@d1809 1
a1809 1
	$(dwarf2_frame_h) $(available_h) $(user_regs_h)
@


1.788
log
@gdb/ChangeLog:
* solib-svr4.h (struct link_map_offsets): Add l_ld_offset and
l_ld_size fields.
* solib-svr4.c (struct lm_info): Add l_addr field.
(LM_ADDR_FROM_LINK_MAP): Renamed from LM_ADDR.
(HAS_LM_DYNAMIC_FROM_LINK_MAP): New.
(LM_DYNAMIC_FROM_LINK_MAP): New.
(LM_ADDR_CHECK): New.  Use it instead of LM_ADDR.
(svr4_current_sos): Initialize l_addr.  Adjust.
(svr4_relocate_section_addresses): Adjust.
(svr4_ilp32_fetch_link_map_offsets): Define new members.
(svr4_lp64_fetch_link_map_offsets): Likewise.
* solib-legacy.c (legacy_svr4_fetch_link_map_offsets): Likewise.
* mipsnbsd-tdep.c (mipsnbsd_ilp32_fetch_link_map_offsets): Likewise.
(mipsnbsd_lp64_fetch_link_map_offsets): Likewise.
* Makefile.in (solib-svr4.o): Depend on $(elf_bfd_h).
gdb/testsuite/ChangeLog:
* gdb.base/prelink.exp: New test.
* gdb.base/prelink.c, gdb.base/prelink-lib.c: New sources.
@
text
@d2329 2
a2330 1
	$(bfd_h) $(elf_bfd_h) $(osabi_h) $(regset_h) $(solib_svr4_h)
@


1.787
log
@2006-02-21  Andrew Stubbs  <andrew.stubbs@@st.com>

	* symfile.c (generic_load): Use buildargv() and tilde_expand()
	to parse file names with quoting, spaces and tildes properly.
	(load_command): Quote all special characters before calling
	target_load() such that buildargv() doesn't break file names.
	(_initialize_symfile): Mention the load offset in the help for
	the load command.
	* remote-sim.c: Include readline.h.
	(gdbsim_load): Use buildargv and tilde_expand() to parse file
	names with quoting, spaces and tildes properly.
	* target.h (target_load): Comment the parameters better.
	* Makefile.in (remote_sim.o): Add readline.h dependency.

testsuite/
	* gdb.base/help.exp (help load): Update expected results.
@
text
@d2585 2
a2586 1
	$(solist_h) $(solib_h) $(solib_svr4_h) $(bfd_target_h) $(exec_h)
@


1.787.2.1
log
@Merge ten gdb and gdbserver patches for MIPS/MIPS64 support.
@
text
@a739 1
mips_linux_tdep_h = mips-linux-tdep.h
d2298 1
a2298 2
	$(linux_nat_h) $(gdb_proc_service_h) $(mips_linux_tdep_h) \
	$(inferior_h)
d2302 1
a2302 1
	$(tramp_frame_h) $(floatformat_h) $(mips_linux_tdep_h)
@


1.787.2.2
log
@2006-03-21  Paul Brook  <paul@@codesourcery.com>
	Daniel Jacobowitz <dan@@codesourcery.com>
	Jim Blandy <jimb@@codesourcery.com>

	* gdb/Makefile.in: Add prologue_value.{c,h}
	* gdb/arm-tdep.c: Include prologue-value.h.
	(thumb_skip_prologue): Remove.
	(thumb_analyze_prologue): New function.
	(arm_skip_prologue): Use thumb_analyze_prologue.
	(thumb_scan_prologue): Ditto.
	* gdb/prologue-value.c: New file.
	* gdb/prologue-value.h: New file.
	* gdb/config/arm/embed.mt (TDEPFILES): Add prologue-value.o.
	* gdb/config/arm/linux.mt (TDEPFILES): Add prologue-value.o.
	* gdb/config/arm/nbsd.mt (TDEPFILES): Add prologue-value.o.
	* gdb/config/arm/wince.mt (TDEPFILES): Add prologue-value.o.
	* gdb/testsuite/gdb.arch/thumb-prologue.c: New file.
	* gdb/testsuite/gdb.arch/thumb-prologue.exp: New file.
@
text
@a544 1
	prologue-value.h \
a758 1
prologue_value_h = prologue-value.h
a1444 1
	prologue-value.c \
a2434 2
prologue-value.o: prologue-value.c $(defs_h) $(gdb_string_h) $(gdb_assert_h) \
	$(prologue_value_h) $(regcache_h)
@


1.787.2.3
log
@Merge XML and VFP support to this branch.
@
text
@a129 4
# Where is the expat library?  Typically in ../expat.
EXPAT = ../expat/.libs/libexpat.a
EXPAT_CFLAGS = -I$(srcdir)/../expat/lib -I../expat

a352 1
	$(EXPAT_CFLAGS) \
d381 1
a381 1
	$(LIBIBERTY) $(WIN32LIBS) $(EXPAT)
d383 1
a383 1
	$(OPCODES) $(INTL_DEPS) $(LIBIBERTY) $(CONFIG_DEPS) $(EXPAT)
d393 1
a393 1
	$(INTL_CFLAGS) $(EXPAT_CFLAGS)
a397 3
# XML files to build in to GDB.
XMLFILES = $(srcdir)/features/gdb-target.dtd $(TDEP_XML)

a513 1
	auxv.c available.c \
a545 1
	parse-avail.c \
a549 1
	sha1.c \
a604 1
filenames_h =	$(INCLUDE_DIR)/filenames.h
a612 1
gdb_stdint_h = gdb_stdint.h
a641 1
available_h = available.h
a775 1
sha1_h = sha1.h $(gdb_stdint_h)
d792 1
a792 1
symfile_h = symfile.h $(symtab_h)
a907 1
	available.o parse-avail.o \
a938 1
	sha1.o \
d952 1
a952 2
	solib.o solib-null.o \
	xml-builtin.o
a1262 1
	rm -f xml-builtin.c stamp-xml
a1279 1
	rm -f gdb_stdint.h
d1317 1
a1317 5
	# Regenerate the Makefile and the tm.h / nm.h links.
	CONFIG_FILES=Makefile \
	 CONFIG_COMMANDS= \
	 CONFIG_HEADERS= \
	 $(SHELL) config.status
d1321 1
a1321 5
	CONFIG_HEADERS=config.h:config.in \
	 CONFIG_COMMANDS=default \
	 CONFIG_FILES= \
	 CONFIG_LINKS= \
	 $(SHELL) config.status
a1325 8
gdb_stdint.h: stamp-int ; @@true
stamp-int: config.status
	CONFIG_COMMANDS=gdb_stdint.h \
	 CONFIG_FILES= \
	 CONFIG_HEADERS= \
	 CONFIG_LINKS= \
	 $(SHELL) config.status
	echo stamp > stamp-int
a1651 11
# XML rules

xml-builtin.c: stamp-xml; @@true
stamp-xml: $(srcdir)/features/feature_to_c.sh Makefile $(XMLFILES)
	rm -f xml-builtin.tmp
	$(SHELL) $(srcdir)/features/feature_to_c.sh xml-builtin.tmp $(XMLFILES)
	$(SHELL) $(srcdir)/../move-if-change xml-builtin.tmp xml-builtin.c
	echo stamp > stamp-xml

.PRECIOUS: xml-builtin.c

d1766 1
a1766 1
	$(dwarf2_frame_h) $(available_h) $(user_regs_h)
a1769 4
available.o: available.c $(defs_h) $(symfile_h) $(target_h) $(available_h) \
	$(arch_utils_h) $(exceptions_h) $(gdbtypes_h) $(sha1_h) \
	$(reggroups_h) \
	$(gdb_string) $(gdb_assert) $(gdb_obstack_h) $(gdb_stdint_h)
d1989 1
a1989 2
	$(gdb_events_h) $(reggroups_h) $(osabi_h) $(gdb_obstack_h) \
	$(available_h)
d2133 1
a2133 1
	$(solib_h) $(gdb_assert_h) $(gdb_obstack_h) $(observer_h)
a2382 2
parse-avail.o: parse-avail.c $(defs_h) $(available_h) $(gdb_assert_h) \
	$(filenames_h) $(gdb_string) $(gdb_obstack_h) $(sha1_h)
d2459 1
a2459 1
	$(cli_decode_h) $(cli_setshow_h) $(available_h)
a2539 1
sha1.o: sha1.c $(config_h) $(sha1_h)
@


1.787.2.4
log
@2006-05-03  Paul Brook  <paul@@codesourcery.com>
	Daniel Jacobowitz  <dan@@codesourcery.com>

	* gdb/c-valprint.c: Handle class member typedefs.

	* gdb/symtab.c (skip_prologue_using_sal): Treat two consecutive lines
	at the same address as a prolouge marker.
	* gdb/arm-tdep.c (arm_skip_prologue): Use skip_prologue_using_sal.

	* gdb/dwarf2expr.c (execute_stack_op): Check for bogus DW_OP_reg.

	* gdb/dwarf2read.c (read_structure_type): Use tag name for C++/Java
	classes.

	* Makefile.in (eval.o): Update dependencies.
	* eval.c: Include "ui-out.h" and "exceptions.h".
	(evaluate_subexp_standard): Use TRY_CATCH around value_of_variable.
	Use value_zero if an error occurs when avoiding side effects.
	* varobj.c (varobj_create): Call release_value after evaluate_type.
	(c_value_of_root): Initialize new_val.  Don't release_value a NULL
	value.

	* gdb/c-typeprint.c (cp_type_print_method_args): Don't print type
	details.

	* gdb/dwarf2read.c (dwarf2_debug_line_missing_file_complaint): New
	function.
	(dwarf_decode_lines): Check for line info without a file.
@
text
@d1980 1
a1980 1
	$(parser_defs_h) $(cp_support_h) $(exceptions_h) $(uiout_h)
@


1.787.2.5
log
@	* configure.ac: Accept --with-versuffix and --with-bugurl.
	* configure: Regenerate.
	* Makefile.in: (VERSUFFIX_s, BUGURL_s): New.
	(GDB_FLAGS): Add -DVERSUFFIX and -DBUGURL.
	* top.c (print_gdb_version): Print VERSUFFIX and BUGURL.
@
text
@d335 1
a335 5
VERSUFFIX_s := "\"@@VERSUFFIX@@\""
BUGURL_s    := "\"@@BUGURL@@\""
GDB_CFLAGS = -I. -I$(srcdir) -I$(srcdir)/config \
   -DLOCALEDIR="\"$(localedir)\"" -DVERSUFFIX=$(VERSUFFIX_s) \
   -DBUGURL=$(BUGURL_s) $(DEFS)
@


1.787.2.3.2.1
log
@Add experimental support for SymbianOS-related protocol features.
@
text
@a1476 1
	solib-target.c \
d2513 1
a2513 1
	$(cli_decode_h) $(cli_setshow_h) $(available_h) $(solist_h)
a2647 2
solib-target.o: solib-target.c $(defs_h) $(solist_h) $(symtab_h) \
	$(symfile_h) $(target_h) $(gdb_string_h)
a2735 1
symbian-tdep.o: symbian-tdep.c $(defs_h) $(solib_h)
@


1.787.2.3.2.2
log
@	* gdb/bsd-uthread.c (bsd_uthread_solib_loaded): Always pass 0 for
	from_tty.
	* gdb/remote.c (remote_get_shared_libraries): Don't call solib_add.
	* gdb/solib.c: Include "exceptions.h".
	(solib_map_sections): Throw NOT_FOUND_ERROR if appropriate.
	(symbol_add_stub): Delete.
	(solib_read_symbols): Use TRY_CATCH.  Inline symbol_add_stub.
	Use current from_tty, not a copy from the so_list.  Don't warn
	a second time for a missing library.
	(update_solib_list): Don't save from_tty.  Use TRY_CATCH.  Print
	out a single warning for all missing libraries.
	* gdb/solist.h (struct so_list): Remove from_tty.
	* gdb/Makefile.in (solib.o): Update.
@
text
@d2626 1
a2626 1
	$(observer_h) $(readline_h) $(exceptions_h)
@


1.787.2.3.2.3
log
@	* gdb/exec.c (exec_set_section_address): Always update the
	section's address.
	* gdb/objfiles.c (objfile_relocate): Also relocate the
	target sections table.
	* gdb/Makefile.in (objfiles.o): Update.

	* gdb/remote.c (remote_xfer_partial): Fail if the target is not
	running.
@
text
@d2420 1
a2420 1
objfiles.o: objfiles.c $(defs_h) $(bfd_h) $(symtab_h) $(symfile_h) $(exec_h) \
@


1.786
log
@	* NEWS: Mention native Windows support.
	* Makefile.in (gdb_select_h, ser_tcp_h): New.
	(ALLDEPFILES): Add ser-mingw.c.
	(event-loop.o, inflow.o, mingw-hdep.o, posix-hdep.o, ser-base.o)
	(ser-tcp.o, ser-unix.o): Update.
	(ser-mingw.o): New rule.
	* configure: Regenerated.
	* configure.ac: Add ser-mingw.o for mingw32.
	* ser-mingw.c: New file.
	* event-loop.c: Include "gdb_select.h".
	(gdb_select): Remove, moved to mingw-hdep.c and posix-hdep.c.
	* ser-base.c: Include "gdb_select.h".
	(ser_base_wait_for): Use gdb_select.
	* serial.c (serial_for_fd): New function.
	(serial_fdopen): Try "terminal" before "hardwire".  Initialize
	the allocated struct serial.
	(serial_wait_handle): New function.
	* serial.h (serial_for_fd, serial_wait_handle): New prototypes.
	(struct serial_ops) [USE_WIN32API]: Add wait_handle.
	* gdb_select.h: New file.
	* ser-tcp.c: Include "ser-tcp.h".  Remove unused "ser-unix.h" include.
	(net_close, net_read_prim, net_write_prim): Make global.
	(net_open): Likewise.  Pass an exception set to select.  Whitespace fix.
	Document why we can not use gdb_select.
	(_initialize_ser_tcp) [USE_WIN32API]: Do not register TCP support here.
	* ser-tcp.h: New file.
	* inflow.c (gdb_has_a_terminal): Don't initialize stdin_serial here.
	(handle_sigio): Use gdb_select.
	(initialize_stdin_serial): New function.
	* terminal.h (initialize_stdin_serial): New prototype.
	* top.c (gdb_init): Call initialize_stdin_serial.
	* mingw-hdep.c (gdb_select): New function, moved from gdb_select in
	event-loop.c.  Add exception condition support.  Use serial_for_fd
	and serial_wait_handle.  Fix timeout handling.
	* posix-hdep.c: Include "gdb_select.h".
	(gdb_select): New function.
	* remote-st.c (connect_command): Use gdb_select.
	* ser-unix.c: Include "gdb_select.h".
	(hardwire_send_break, wait_for): Use gdb_select.
@
text
@d2480 2
a2481 1
	$(regcache_h) $(gdb_assert_h) $(sim_regno_h) $(arch_utils_h)
@


1.785
log
@	* Makefile.in (mingw-hdep.o, posix-hdep.o): New dependencies.
	(ALLDEPFILES): Add mingw-hdep.c and posix-hdep.c.
	* configure.ac: Add gdb_host_obs to CONFIG_OBS.  Set gdb_host_obs
	to posix-hdep.o by default.
	* configure: Regenerated.
	* configure.host: Document gdb_host_obs.  Add an entry for
	i[34567]86-*-mingw32*.
	* mingw-hdep.c, posix-hdep.c: New files.
	* utils.c (safe_strerror): Remove, moved to posix-hdep.o.
@
text
@d697 1
d771 1
d1450 1
a1450 1
	ser-go32.c ser-pipe.c ser-tcp.c \
d1927 1
a1927 1
	$(gdb_string_h) $(exceptions_h) $(gdb_assert_h)
d2134 1
a2134 1
	$(inflow_h)
d2287 2
a2288 1
mingw-hdep.o: mingw-hdep.c $(defs_h) $(gdb_string_h)
d2384 1
a2384 1
posix-hdep.o: posix-hdep.c $(defs_h) $(gdb_string_h)
d2523 1
a2523 1
	$(gdb_string_h)
d2526 1
a2526 1
ser-tcp.o: ser-tcp.c $(defs_h) $(serial_h) $(ser_base_h) $(ser_unix_h) \
d2529 3
a2531 1
	$(terminal_h) $(gdb_string_h)
@


1.784
log
@        * defs.h (gdb_osabi): New enum value GDB_OSABI_AIX.
        * osabi.c (gdb_osabi_name): Add name of new value GDB_OSABI_AIX.
        * rs6000-tdep.h: New file.
        * rs6000-tdep.c: Include "rs6000-tdep.h".
        (rs6000_gdbarch_init): Remove enabling of software single step.
        Will be done in the AIX-specific initialization routine.
        * rs6000-aix-tdep.c: New file.
        * config/powerpc/aix.mt (TDEPFILES): Add rs6000-aix-tdep.o.
        * Makefile.in (rs6000_tdep_h): New variable.
        (rs6000-tdep.o): Update dependencies.
        (rs6000-aix-tdep.o): New rule.
@
text
@d1428 1
d1437 1
d2285 1
d2381 1
@


1.783
log
@	* printcmd.c (printf_command): Make format string checking
	stricter.  Add separate cases for long_arg, ptr_arg, and
	long_double_arg.
	* utils.c (xstrvprintf): Improve the error message issued
	for a bad format string.
	* Makefile.in (GDB_WARN_CFLAGS_NO_FORMAT, INTERNAL_CFLAGS_BASE):
	New variables.
	(gnu-v3-abi.o, monitor.o, procfs.o, linux-thread-db.o): Remove
	$(NO_WERROR_CFLAGS).
	(printcmd.o): Likewise.  Use $(GDB_WARN_CFLAGS_NO_FORMAT) and
	enable -Werror.
@
text
@d763 1
d2492 2
a2493 1
	$(frame_unwind_h) $(frame_base_h) $(reggroups_h)
@


1.782
log
@	* Makefile.in (remote.o): Update.
	* remote.c (show_packet_config_cmd): Shorten messages.
	(remote_set_cmdlist, remote_show_cmdlist): Make file-static.
	(show_remote_cmd): Iterate.
	(_initialize_remote): Remove remote_set_cmdlist,
	remote_show_cmdlist.
@
text
@d135 2
d349 1
a349 1
INTERNAL_WARN_CFLAGS = \
d353 2
a354 2
	$(INTL_CFLAGS) $(ENABLE_CFLAGS) \
	$(GDB_WARN_CFLAGS)
d1484 1
a1484 2
	$(CC) -c $(INTERNAL_WARN_CFLAGS) $(NO_WERROR_CFLAGS) \
		$(srcdir)/gnu-v3-abi.c
d1493 1
a1493 1
	$(CC) -c $(INTERNAL_WARN_CFLAGS) $(NO_WERROR_CFLAGS) $(srcdir)/monitor.c
d1495 2
a1496 4
# FIXME: cagney/2003-08-10: Do not try to build "printcmd.c" with
# -Wformat-nonliteral.  It needs to be overhauled so that it doesn't
# pass user input strings as the format parameter to host printf
# function calls.
d1498 2
a1499 1
	$(CC) -c $(INTERNAL_WARN_CFLAGS) $(NO_WERROR_CFLAGS) $(srcdir)/printcmd.c
d1504 1
a1504 1
	$(CC) -c $(INTERNAL_WARN_CFLAGS) $(NO_WERROR_CFLAGS) $(srcdir)/procfs.c
d1509 1
a1509 2
	$(CC) -c $(INTERNAL_WARN_CFLAGS) $(NO_WERROR_CFLAGS) \
		$(srcdir)/linux-thread-db.c
@


1.781
log
@gdb/
	* Makefile.in (gdbtypes_h, gdbtypes.o, utils.o): Update.
	* defs.h (hashtab_obstack_allocate, dummy_obstack_deallocate): Add
	prototypes.
	* dwarf2read.c (read_subroutine_type): Use TYPE_ZALLOC.
	(hashtab_obstack_allocate, dummy_obstack_deallocate): Moved to...
	* utils.c (hashtab_obstack_allocate, dummy_obstack_deallocate):
	...here.
	* gdbtypes.c: Include "hashtab.h".
	(build_gdbtypes): Remove extra prototype.
	(struct type_pair, type_pair_hash, type_pair_eq)
	(create_copied_types_hash, copy_type_recursive): New.
	* gdbtypes.h: Include "hashtab.h".
	(TYPE_ZALLOC): New.
	(create_copied_types_hash, copy_type_recursive): New prototypes.
	* objfiles.c (free_objfile): Call preserve_values.
	* symfile.c (reread_symbols): Likewise.
	(clear_symtab_users): Remove calls to clear_value_history and
	clear_internalvars.
	* value.c (clear_value_history, clear_internalvars): Removed.
	(preserve_one_value, preserve_values): New functions.
	* value.h (clear_value_history, clear_internalvars): Removed.
	(preserve_values): New prototype.

	* tracepoint.c (_initialize_tracepoint): Do not initialize convenience
	variables here.
gdb/doc/
	* gdb.texinfo (Files): Remove obsolete bits from the description
	of "symbol-file".
@
text
@d2444 2
a2445 1
	$(serial_h) $(gdbcore_h) $(remote_fileio_h) $(solib_h) $(observer_h)
@


1.780
log
@	PR gdb/1914
	* fork-child.c (fork_inferior): Don't call
	solib_create_inferior_hook.
	* infcmd.c (post_create_inferior): Call solib_add,
	solib_create_inferior_hook, and re_enable_breakpoints_in_shlibs.
	(attach_command): Don't call solib_add or
	re_enable_breakpoints_in_shlibs.  Call post_create_inferior
	instead.
	* remote.c (remote_open_1): Don't call solib_create_inferior_hook
	or observer_notify_inferior_created.  Call post_create_inferior
	instead.
	* corelow.c: Don't include "observer.h".
	(solib_add_stub): Deleted.
	(core_open): Don't call observer_notify_inferior_created or
	solib_add_stub.  Call post_create_inferior instead.
	* inf-ptrace.c: Don't include "observer.h".
	(inf_ptrace_attach): Don't call observer_notify_inferior_created.
	* inf-ttrace.c: Don't include "observer.h".
	(inf_ttrace_attach): Don't call observer_notify_inferior_created.
	* inferior.h (solib_create_inferior_hook): Remove redundant
	prototype.
	* inftarg.c: Don't include "observer.h".
	(child_attach): Don't call observer_notify_inferior_created.
	* Makefile.in: Update dependencies.
@
text
@d700 1
a700 1
gdbtypes_h = gdbtypes.h
d1987 1
a1987 1
	$(gdbcmd_h) $(wrapper_h) $(cp_abi_h) $(gdb_assert_h)
d2723 1
a2723 1
	$(gdb_curses_h) $(readline_h)
@


1.779
log
@	* infcmd.c: Include "observer.h".
	(post_create_inferior): New function.
	(run_command_1): Call it.  Also call proceed.
	* inferior.h (post_create_inferior): New prototype.
	* Makefile.in (infcmd.o): Update.

	* gnu-nat.c (gnu_create_inferior): Don't call proceed.
	* go32-nat.c (go32_create_inferior): Likewise.
	* nto-procfs.c (procfs_create_inferior): Likewise.
	* procfs.c (procfs_create_inferior): Likewise.
	* remote-sim.c (gdbsim_create_inferior): Likewise.
	* remote.c (extended_remote_create_inferior)
	(extended_remote_async_create_inferior): Likewise.
	* win32-nat.c (win32_create_inferior): Likewise.
	* wince.c (child_create_inferior): Likewise.

	* monitor.c (monitor_create_inferior): Don't call proceed.
	Set the PC manually.
	* ocd.c (ocd_create_inferior): Likewise.
	* remote-e7000.c (e7000_create_inferior): Likewise.
	* remote-m32r-sdi.c (m32r_create_inferior): Likewise.
	* remote-mips.c (mips_create_inferior): Likewise.
	* remote-rdp.c (remote_rdp_create_inferior): Likewise.
	* remote-sds.c (sds_create_inferior): Likewise.
	* remote-st.c (st2000_create_inferior): Likewise.

	* inf-ptrace.c (inf_ptrace_create_inferior): Don't call
	proceed or observer_notify_inferior_created.
	* inf-ttrace.c (inf_ttrace_create_inferior): Likewise.
	* inftarg.c (child_create_inferior): Likewise.
@
text
@d1834 1
a1834 1
	$(exec_h) $(readline_h) $(observer_h) $(gdb_assert_h) \
d2132 1
a2132 1
	$(gdbcore_h) $(observer_h) $(regcache_h) $(gdb_assert_h) \
d2144 1
a2144 1
	$(gdbcore_h) $(command_h) $(gdb_stat_h) $(observer_h) $(gdb_wait_h) \
d2147 1
a2147 1
	$(gdbthread_h) $(inferior_h) $(observer_h) $(target_h) \
@


1.778
log
@2006-01-23  Andrew Stubbs  <andrew.stubbs@@st.com>

	* sh-tdep.c: Include reggroups.h.
	(sh_register_reggroup_p): New function.
	(sh_gdbarch_init): Add call to set_gdbarch_register_reggroup_p.
	* Makefile.in (sh-tdep.o): Add dependency on reggroups.h.
@
text
@d2 2
a3 2
# 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005 Free Software Foundation,
# Inc.
d2125 1
a2125 1
	$(solib_h) $(gdb_assert_h)
@


1.777
log
@	* Makefile.in (remote-rdi.o): Remove.
	(rdi-share/libangsd.a): Likewise.
	* README: Don't mention remote-rdi.c.
	* NEWS: Mention removal of rdi-share.
	* configure.ac: Don't configure rdi-share subdirectory.
	* remote-rdi.c: Remove.
	* config/arm/embed.mt (TDEPFILES): Remove remote-rdi.o.
	(TDEPLIBS): Remove rdi-share/libangsd.a.
	* rdi-share/Makefile.am: Remove.
	* rdi-share/Makefile.in: Likewise.
	* rdi-share/README.CYGNUS: Likewise.
	* rdi-share/aclocal.m4: Likewise.
	* rdi-share/adp.h: Likewise.
	* rdi-share/adperr.h: Likewise.
	* rdi-share/angel.h: Likewise.
	* rdi-share/angel_bytesex.c: Likewise.
	* rdi-share/angel_bytesex.h: Likewise.
	* rdi-share/angel_endian.h: Likewise.
	* rdi-share/ardi.c: Likewise.
	* rdi-share/ardi.h: Likewise.
	* rdi-share/armdbg.h: Likewise.
	* rdi-share/buffers.h: Likewise.
	* rdi-share/chandefs.h: Likewise.
	* rdi-share/channels.h: Likewise.
	* rdi-share/chanpriv.h: Likewise.
	* rdi-share/configure: Likewise.
	* rdi-share/configure.in: Likewise.
	* rdi-share/crc.c: Likewise.
	* rdi-share/crc.h: Likewise.
	* rdi-share/dbg_conf.h: Likewise.
	* rdi-share/dbg_cp.h: Likewise.
	* rdi-share/dbg_hif.h: Likewise.
	* rdi-share/dbg_rdi.h: Likewise.
	* rdi-share/devclnt.h: Likewise.
	* rdi-share/devices.h: Likewise.
	* rdi-share/devsw.c: Likewise.
	* rdi-share/devsw.h: Likewise.
	* rdi-share/drivers.c: Likewise.
	* rdi-share/drivers.h: Likewise.
	* rdi-share/etherdrv.c: Likewise.
	* rdi-share/ethernet.h: Likewise.
	* rdi-share/host.h: Likewise.
	* rdi-share/hostchan.c: Likewise.
	* rdi-share/hostchan.h: Likewise.
	* rdi-share/hsys.c: Likewise.
	* rdi-share/hsys.h: Likewise.
	* rdi-share/logging.c: Likewise.
	* rdi-share/logging.h: Likewise.
	* rdi-share/msgbuild.c: Likewise.
	* rdi-share/msgbuild.h: Likewise.
	* rdi-share/params.c: Likewise.
	* rdi-share/params.h: Likewise.
	* rdi-share/rx.c: Likewise.
	* rdi-share/rxtx.h: Likewise.
	* rdi-share/serdrv.c: Likewise.
	* rdi-share/serpardr.c: Likewise.
	* rdi-share/sys.h: Likewise.
	* rdi-share/tx.c: Likewise.
	* rdi-share/unixcomm.c: Likewise.
	* rdi-share/unixcomm.h: Likewise.
@
text
@d2541 1
a2541 1
	$(elf_sh_h) $(gdb_sim_sh_h)
@


1.776
log
@* alphafbsd-tdep.c: Include "solib-svr4.h".
(alphafbsd_init_abi): Set solib_svr4_fetch_link_map_offsets to
svr4_lp64_fetch_link_map_offsets.
* Makefile.in (alphafbsd-tdep.o): Update dependencies.
* config/alpha/fbsd.mt (TDEPFILES): Add corelow.o, solib.o and
solib-svr4.o.
* config/alpha/fbsd.mh (NATDEPFILES): Remove solib.o, solib-svr4.o
and solib-legacy.o.
* config/alpha/nm-fbsd.h: Don't include "solib.h".
@
text
@a2461 5
remote-rdi.o: remote-rdi.c $(defs_h) $(gdb_string_h) $(frame_h) \
	$(inferior_h) $(bfd_h) $(symfile_h) $(target_h) $(gdbcmd_h) \
	$(objfiles_h) $(gdb_stabs_h) $(gdbthread_h) $(gdbcore_h) \
	$(breakpoint_h) $(completer_h) $(regcache_h) $(arm_tdep_h) \
	$(rdi_share_ardi_h) $(rdi_share_adp_h) $(rdi_share_hsys_h)
a3034 16
# rdi-share sub-directory
#
# Need to explicitly specify the compile rule as make will do nothing
# or try to compile the object file into the mi directory.

rdi-share/libangsd.a:	force
	@@dir=rdi-share; \
	if [ -f ./$${dir}/Makefile ] ; then \
	  r=`pwd`; export r; \
	  srcroot=`cd $(srcdir); pwd`; export srcroot; \
	  (cd $${dir}; $(MAKE) $(FLAGS_TO_PASS) all); \
	else \
	  true; \
	fi

#
@


1.775
log
@* s390-tdep.c: Do not include "tm.h" and "../bfd/bfd.h".
* Makefile.in (s390-tdep.o): Update dependencies.
@
text
@d1676 1
a1676 1
	$(alpha_tdep_h)
@


1.774
log
@* sol2-tdep.h. sol2-tdep.c: New files.
* amd64-sol2-tdep.c: Include "sol2-tdep.h".
(amd64_sol2_init_abi): Set skip_solib_resolver.
* i386-sol2-tdep.c: Include "sol2-tdep.h".
(i386_sol2_init_abi): Set skip_solib_resolver.
* sparc-sol2-tdep.c: Include "sol2-tdep.h".
(sparc32_sol2_init_abi): Set skip_solib_resolver.
* sparc64-sol2-tdep.c: Include "sol2-tdep.h".
(sparc64_sol2_init_abi): Set skip_solib_resolver.
* Makefile.in (sol2_tdep_h): New variable.
(ALLDEPFILES): Add sol2-tdep.c.
(sol2-tdep.o): New target.
(amd64-sol2-tdep.o, i386-sol2-tdep.o, sparc-sol2-tdep.o)
(sparc64-sol2-tdep.o): Update dependencies
* config/i386/i386sol2.mt (TDEPFILES): Add sol2-tdep.o.
* config/i386/sol2-64.mt (TDEPFILES): Add sol2-tdep.o.
* config/sparc/sol2.mt (TDEPFILES): Add sol2-tdep.o.
* config/sparc/sol2-64.mt (TDEPFILES): Add sol2-tdep.o.
@
text
@d2501 3
a2503 4
	$(tm_h) $(__bfd_bfd_h) $(floatformat_h) $(regcache_h) \
	$(trad_frame_h) $(frame_base_h) $(frame_unwind_h) $(dwarf2_frame_h) \
	$(reggroups_h) $(regset_h) $(value_h) $(gdb_assert_h) $(dis_asm_h) \
	$(solib_svr4_h) $(s390_tdep_h)
@


1.773
log
@* Makefile.in: Sort dependencies.
@
text
@d771 1
d1445 1
d1728 2
a1729 2
	$(regcache_h) $(osabi_h) $(symtab_h) $(gdb_string_h) $(amd64_tdep_h) \
	$(solib_svr4_h)
d2086 1
a2086 1
	$(gdb_string_h) $(i386_tdep_h) $(solib_svr4_h)
d2548 1
@


1.772
log
@2006-01-04  Michael Snyder  <msnyder@@redhat.com>

	Checkpoint/Restart for Linux.
	* linux-nat.c: Add support for debugging multiple forks.
	Add #include for linux-fork.h (interface spec).
	(super_mourn_inferior): New function pointer.
	(child_mourn_inferior): New function / target method.
	(linux_target): Claim to_mourn_inferior method pointer.
	(child_follow_fork): Call interface to linux-fork, conditionally
	add new fork processes to list of debugged processes.
	(kill_inferior): Use interface to linux-fork to kill
	multiple processes.

	* linux-fork.h: New file.
	* linux-fork.c: New file.  Support for debugging multiple forks
	of the same program.  Support for checkpoint and restart commands.

	* infrun.c (nullify_last_target_wait_ptid): New function.

	* Makefile.in: Add linux-fork.
	* config/*/linux.mh: Add linux-fork.
	* NEWS: Mention new functionality.
@
text
@a2343 1
obsd-tdep.o: obsd-tdep.c $(defs_h) $(frame_h) $(symtab_h) $(obsd_tdep_h)
d2360 1
@


1.771
log
@* sparc64obsd-tdep.c: Include "gdbcore.h", "regcache.h" amd
"bsd-uthread.h".
(SPARC64OBSD_UTHREAD_FP_OFFSET, SPARC64OBSD_UTHREAD_PC_OFFSET):
New defines.
(sparc64obsd_supply_uthread, sparc64obsd_collect_uthread): New
functions.
(sparc64obsd_init_abi): Set supply_uthread and collect_uthread.
* Makefile.in (sparc64obsd-tdep.o): Update dependencies.
@
text
@d1380 1
a1380 1
	alpha-nat.c alphabsd-nat.c alpha-linux-nat.c \
d2183 2
d2188 1
a2188 1
	$(gregset_h) $(gdbcore_h) $(gdbthread_h) $(gdb_stat_h)
@


1.770
log
@* sparcobsd-tdep.c: Include "gdbcore.h", "regcache.h" and
"bsd-uthread.h".
(SPARC32OBSD_UTHREAD_FP_OFFSET, SPARC32OBSD_UTHREAD_PC_OFFSET):
New defines.
(sparc32obsd_supply_uthread, sparc32obsd_collect_uthread): New
functions.
(sparc32obsd_init_abi): Set supply_uthread and collect_uthread.
* Makefile.in (sparcobsd-tdep.o): Update dependencies.
* config/sparc/obsd.mt (TDEPFILES): Add bsd-uthread.o.
* config/sparc/obsd64.mt (TDEPFILES): Likewise.
@
text
@d2607 3
a2609 3
	$(frame_unwind_h) $(osabi_h) $(regset_h) $(symtab_h) $(objfiles_h) \
	$(solib_svr4_h) $(trad_frame_h) $(gdb_assert_h) $(obsd_tdep_h) \
	$(sparc64_tdep_h)
@


1.769
log
@* sparc64obsd-tdep.c: Include "obsd-tdep.h".
(sparc64obsd_init_abi): Set skip_solib_resolver to
obsd_skip_solib_resolver instead of find_solib_trampoline_target.
* Makefile.in (sparc64obsd-tdep.o): Update dependencies.
* config/sparc/obsd64.mt (TDEPFILES): Add obsd-tdep.o.
@
text
@d2634 3
a2636 2
	$(frame_unwind_h) $(osabi_h) $(solib_svr4_h) $(symtab_h) \
	$(trad_frame_h) $(gdb_assert_h) $(obsd_tdep_h) $(sparc_tdep_h)
@


1.768
log
@* sparcobsd-tdep.c: Include "obsd-tdep.h".
(sparc32obsd_init_abi): Set skip_solib_resolver.
* Makefile.in (sparcobsd-tdep.o): Update dependencies.
* config/sparc/obsd.mt (TDEPFILES): Add obsd-tdep.o.
@
text
@d2608 2
a2609 1
	$(solib_svr4_h) $(trad_frame_h) $(gdb_assert_h) $(sparc64_tdep_h)
@


1.767
log
@* obsd-tdep.c: New file.
* obsd-tdep.h: New file.
* Makefile.in (obsd_tdep_h): New variable.
(ALLDEPFILES): Add obsd-tdep.c.
(obsd-tdep.o): New target.
@
text
@d2634 1
a2634 1
	$(trad_frame_h) $(gdb_assert_h) $(sparc_tdep_h)
@


1.766
log
@	* arm-linux-tdep.c (ARM_SET_R7_SIGRETURN, ARM_SET_R7_RT_SIGRETURN)
	(ARM_EABI_SYSCALL, arm_linux_sigtramp_cache, arm_linux_sigreturn_init)
	(arm_linux_rt_sigreturn_init, arm_linux_sigreturn_tramp_frame)
	(arm_linux_rt_sigreturn_tramp_frame)
	(arm_eabi_linux_sigreturn_tramp_frame)
	(arm_eabi_linux_rt_sigreturn_tramp_frame): New.
	(arm_linux_init_abi): Register the new signal unwinders.
	(arm_linux_in_sigtramp, arm_linux_sigcontext_register_address):
	Delete.
	* arm-tdep.c (SIGCONTEXT_REGISTER_ADDRESS_P)
	(SIGCONTEXT_REGISTER_ADDRESS, arm_make_sigtramp_cache)
	(arm_sigtramp_this_id, arm_sigtramp_prev_register)
	(arm_sigtramp_unwind, arm_sigtramp_unwind_sniffer): Delete.
	(arm_gdbarch_init): Don't register a signal unwinder.
	* config/arm/tm-linux.h (arm_linux_in_sigtramp)
	(arm_linux_sigcontext_register_address): Delete prototypes.
	(DEPRECATED_IN_SIGTRAMP, SIGCONTEXT_REGISTER_ADDRESS): Delete.
	* Makefile.in (arm-linux-tdep.o): Update.
@
text
@d746 1
d1429 1
a1429 1
	nbsd-tdep.c \
d2342 1
@


1.765
log
@* amd64obsd-tdep.c: Include "frame-unwind.h" and "trad-frame.h".
(amd64obsd_tf_reg_offset): New define.
(amd64obsd_trapframe_cache, amd64obsd_trapframe_this_id)
(amd64obsd_trapframe_prev_register, amd64obsd_trapframe_sniffer):
New functions.
(amd64obsd_trapframe_unwind): New variable.
(amd64obsd_init_abi): Prepend amd64obsd_trapframe_unwind.
* Makefile.in (amd64obsd-tdep.o): Update dependencies.
@
text
@d1744 1
a1744 1
	$(glibc_tdep_h)
@


1.764
log
@* i386-tdep.h (I386_SEL_RPL, I386_SEL_UPL, I386_SEL_KPL): New
defines.
* i386obsd-tdep.c: Include "frame-unwind.h" and "trad-frame.h".
(i386obsd_tf_reg_offset, i386obsd_trapframe_unwind): New
variables.
(i386obsd_trapframe_cache, i386obsd_trapframe_this_id)
(i386obsd_trapframe_prev_register, i386obsd_trapframe_sniffer):
New functions.
(i386obsd_init_abi): Append i386obsd_trapframe_sniffer.
* Makefile.in (i386obsd-tdep.o): Update dependencies.
@
text
@d1719 5
a1723 4
amd64obsd-tdep.o: amd64obsd-tdep.c $(defs_h) $(frame_h) $(gdbcore_h) \
	$(symtab_h) $(objfiles_h) $(osabi_h) $(regcache_h) $(regset_h) \
	$(target_h) $(gdb_assert_h) $(gdb_string_h) $(amd64_tdep_h) \
	$(i387_tdep_h) $(solib_svr4_h) $(bsd_uthread_h)
@


1.763
log
@
	* breakpoint.c:
	* arm-tdep.c:
	* ia64-tdep.c:
	* i386-tdep.c:
	* hpread.c:
	* hppa-tdep.c:
	* hppa-hpux-tdep.c:
	* gnu-nat.c:
	* gdbtypes.c:
	* gdbarch.h:
	* gdbarch.c:
	* eval.c:
	* dwarf2read.c:
	* dbxread.c:
	* copying:
	* symfile.c:
	* stabsread.c:
	* sh64-tdep.c:
	* sh-tdep.c:
	* s390-tdep.c:
	* rs6000-tdep.c:
	* remote.c:
	* remote-mips.c:
	* mips-tdep.c:
	* mdebugread.c:
	* linux-nat.c:
	* infrun.c:
	* xcoffread.c:
	* win32-nat.c:
	* valops.c:
	* utils.c:
	* tracepoint.c:
	* target.c:
	* symtab.c:
	* c-exp.y:
	* ada-valprint.c:
	* ada-typeprint.c:
	* ada-lex.l:
	* ada-lang.h:
	* ada-lang.c:
	* ada-exp.y:
	* alphafbsd-tdep.c:
	* alphabsd-tdep.h:
	* alphabsd-tdep.c:
	* alphabsd-nat.c:
	* alpha-tdep.h:
	* alpha-tdep.c:
	* alpha-osf1-tdep.c:
	* alpha-nat.c:
	* alpha-mdebug-tdep.c:
	* alpha-linux-tdep.c:
	* alpha-linux-nat.c:
	* aix-thread.c:
	* abug-rom.c:
	* arch-utils.c:
	* annotate.h:
	* annotate.c:
	* amd64obsd-tdep.c:
	* amd64obsd-nat.c:
	* amd64nbsd-tdep.c:
	* amd64nbsd-nat.c:
	* amd64fbsd-tdep.c:
	* amd64fbsd-nat.c:
	* amd64bsd-nat.c:
	* amd64-tdep.h:
	* amd64-tdep.c:
	* amd64-sol2-tdep.c:
	* amd64-nat.h:
	* amd64-nat.c:
	* amd64-linux-tdep.c:
	* amd64-linux-nat.c:
	* alphanbsd-tdep.c:
	* block.h:
	* block.c:
	* bfd-target.h:
	* bfd-target.c:
	* bcache.h:
	* bcache.c:
	* ax.h:
	* ax-general.c:
	* ax-gdb.h:
	* ax-gdb.c:
	* avr-tdep.c:
	* auxv.h:
	* auxv.c:
	* armnbsd-tdep.c:
	* armnbsd-nat.c:
	* arm-tdep.h:
	* arm-linux-nat.c:
	* arch-utils.h:
	* charset.c:
	* call-cmds.h:
	* c-valprint.c:
	* c-typeprint.c:
	* c-lang.h:
	* c-lang.c:
	* buildsym.h:
	* buildsym.c:
	* bsd-uthread.h:
	* bsd-uthread.c:
	* bsd-kvm.h:
	* bsd-kvm.c:
	* breakpoint.h:
	* core-regset.c:
	* core-aout.c:
	* completer.h:
	* completer.c:
	* complaints.h:
	* complaints.c:
	* command.h:
	* coffread.c:
	* coff-solib.h:
	* coff-solib.c:
	* coff-pe-read.h:
	* coff-pe-read.c:
	* cli-out.h:
	* cli-out.c:
	* charset.h:
	* dink32-rom.c:
	* dictionary.h:
	* dictionary.c:
	* demangle.c:
	* defs.h:
	* dcache.h:
	* dcache.c:
	* d10v-tdep.c:
	* cpu32bug-rom.c:
	* cp-valprint.c:
	* cp-support.h:
	* cp-support.c:
	* cp-namespace.c:
	* cp-abi.h:
	* cp-abi.c:
	* corelow.c:
	* corefile.c:
	* environ.c:
	* elfread.c:
	* dwarfread.c:
	* dwarf2loc.c:
	* dwarf2expr.h:
	* dwarf2expr.c:
	* dwarf2-frame.h:
	* dwarf2-frame.c:
	* dve3900-rom.c:
	* dummy-frame.h:
	* dummy-frame.c:
	* dsrec.c:
	* doublest.h:
	* doublest.c:
	* disasm.h:
	* disasm.c:
	* fork-child.c:
	* findvar.c:
	* fbsd-nat.h:
	* fbsd-nat.c:
	* f-valprint.c:
	* f-typeprint.c:
	* f-lang.h:
	* f-lang.c:
	* expression.h:
	* expprint.c:
	* exec.h:
	* exec.c:
	* exceptions.h:
	* exceptions.c:
	* event-top.h:
	* event-top.c:
	* event-loop.h:
	* event-loop.c:
	* gdb.c:
	* gdb-stabs.h:
	* gdb-events.h:
	* gdb-events.c:
	* gcore.c:
	* frv-tdep.h:
	* frv-tdep.c:
	* frv-linux-tdep.c:
	* frame.h:
	* frame.c:
	* frame-unwind.h:
	* frame-unwind.c:
	* frame-base.h:
	* frame-base.c:
	* gdb_vfork.h:
	* gdb_thread_db.h:
	* gdb_string.h:
	* gdb_stat.h:
	* gdb_regex.h:
	* gdb_ptrace.h:
	* gdb_proc_service.h:
	* gdb_obstack.h:
	* gdb_locale.h:
	* gdb_dirent.h:
	* gdb_curses.h:
	* gdb_assert.h:
	* gdbarch.sh:
	* gdb.h:
	* hpux-thread.c:
	* hppabsd-nat.c:
	* hppa-tdep.h:
	* hpacc-abi.c:
	* h8300-tdep.c:
	* gregset.h:
	* go32-nat.c:
	* gnu-v3-abi.c:
	* gnu-v2-abi.h:
	* gnu-v2-abi.c:
	* gnu-nat.h:
	* glibc-tdep.c:
	* gdbtypes.h:
	* gdbcore.h:
	* gdbcmd.h:
	* i386nbsd-tdep.c:
	* i386nbsd-nat.c:
	* i386gnu-tdep.c:
	* i386gnu-nat.c:
	* i386fbsd-tdep.c:
	* i386fbsd-nat.c:
	* i386bsd-tdep.c:
	* i386bsd-nat.h:
	* i386bsd-nat.c:
	* i386-tdep.h:
	* i386-sol2-nat.c:
	* i386-nto-tdep.c:
	* i386-nat.c:
	* i386-linux-tdep.h:
	* i386-linux-tdep.c:
	* i386-linux-nat.c:
	* i386-cygwin-tdep.c:
	* inf-ttrace.c:
	* inf-ptrace.h:
	* inf-ptrace.c:
	* inf-loop.h:
	* inf-loop.c:
	* inf-child.h:
	* inf-child.c:
	* ia64-tdep.h:
	* ia64-linux-nat.c:
	* i387-tdep.h:
	* i387-tdep.c:
	* i386v4-nat.c:
	* i386v-nat.c:
	* i386obsd-tdep.c:
	* i386obsd-nat.c:
	* kod.c:
	* jv-valprint.c:
	* jv-typeprint.c:
	* jv-lang.h:
	* jv-lang.c:
	* irix5-nat.c:
	* iq2000-tdep.c:
	* interps.h:
	* interps.c:
	* inftarg.c:
	* inflow.h:
	* inflow.c:
	* inferior.h:
	* infcmd.c:
	* infcall.h:
	* infcall.c:
	* inf-ttrace.h:
	* m32r-tdep.h:
	* m32r-tdep.c:
	* m32r-rom.c:
	* m32r-linux-tdep.c:
	* m32r-linux-nat.c:
	* m2-valprint.c:
	* m2-typeprint.c:
	* m2-lang.h:
	* m2-lang.c:
	* lynx-nat.c:
	* linux-thread-db.c:
	* linux-nat.h:
	* linespec.c:
	* libunwind-frame.h:
	* libunwind-frame.c:
	* language.h:
	* language.c:
	* macroexp.c:
	* macrocmd.c:
	* m88kbsd-nat.c:
	* m88k-tdep.h:
	* m88k-tdep.c:
	* m68klinux-tdep.c:
	* m68klinux-nat.c:
	* m68kbsd-tdep.c:
	* m68kbsd-nat.c:
	* m68k-tdep.h:
	* m68k-tdep.c:
	* mips-linux-nat.c:
	* mips-irix-tdep.c:
	* minsyms.c:
	* memattr.h:
	* memattr.c:
	* mem-break.c:
	* mdebugread.h:
	* main.h:
	* main.c:
	* macrotab.h:
	* macrotab.c:
	* macroscope.h:
	* macroscope.c:
	* macroexp.h:
	* nbsd-tdep.c:
	* mt-tdep.c:
	* monitor.h:
	* monitor.c:
	* mn10300-tdep.h:
	* mn10300-tdep.c:
	* mn10300-linux-tdep.c:
	* mipsv4-nat.c:
	* mipsread.c:
	* mipsnbsd-tdep.h:
	* mipsnbsd-tdep.c:
	* mipsnbsd-nat.c:
	* mips64obsd-tdep.c:
	* mips64obsd-nat.c:
	* mips-tdep.h:
	* mips-mdebug-tdep.c:
	* mips-linux-tdep.c:
	* osabi.h:
	* osabi.c:
	* ocd.h:
	* ocd.c:
	* observer.c:
	* objfiles.h:
	* objfiles.c:
	* objc-lang.h:
	* objc-lang.c:
	* objc-exp.y:
	* nto-tdep.h:
	* nto-tdep.c:
	* nto-procfs.c:
	* nlmread.c:
	* nbsd-tdep.h:
	* ppcobsd-tdep.c:
	* ppcobsd-nat.c:
	* ppcnbsd-tdep.h:
	* ppcnbsd-tdep.c:
	* ppcnbsd-nat.c:
	* ppcbug-rom.c:
	* ppc-tdep.h:
	* ppc-sysv-tdep.c:
	* ppc-linux-tdep.c:
	* ppc-linux-nat.c:
	* ppc-bdm.c:
	* parser-defs.h:
	* parse.c:
	* p-valprint.c:
	* p-typeprint.c:
	* p-lang.h:
	* p-lang.c:
	* remote-fileio.h:
	* remote-fileio.c:
	* remote-est.c:
	* remote-e7000.c:
	* regset.h:
	* regset.c:
	* reggroups.h:
	* reggroups.c:
	* regcache.h:
	* regcache.c:
	* proc-why.c:
	* proc-service.c:
	* proc-events.c:
	* printcmd.c:
	* ppcobsd-tdep.h:
	* sentinel-frame.h:
	* sentinel-frame.c:
	* scm-valprint.c:
	* scm-tags.h:
	* scm-lang.h:
	* scm-lang.c:
	* scm-exp.c:
	* s390-tdep.h:
	* rom68k-rom.c:
	* remote.h:
	* remote-utils.c:
	* remote-st.c:
	* remote-sim.c:
	* remote-sds.c:
	* remote-rdp.c:
	* remote-rdi.c:
	* remote-hms.c:
	* sim-regno.h:
	* shnbsd-tdep.h:
	* shnbsd-tdep.c:
	* shnbsd-nat.c:
	* sh-tdep.h:
	* serial.h:
	* serial.c:
	* ser-unix.h:
	* ser-unix.c:
	* ser-tcp.c:
	* ser-pipe.c:
	* ser-go32.c:
	* ser-e7kpc.c:
	* ser-base.h:
	* ser-base.c:
	* solib.c:
	* solib-svr4.h:
	* solib-svr4.c:
	* solib-sunos.c:
	* solib-som.h:
	* solib-som.c:
	* solib-pa64.h:
	* solib-pa64.c:
	* solib-osf.c:
	* solib-null.c:
	* solib-legacy.c:
	* solib-irix.c:
	* solib-frv.c:
	* solib-aix5.c:
	* sol-thread.c:
	* sparc64-linux-tdep.c:
	* sparc64-linux-nat.c:
	* sparc-tdep.h:
	* sparc-tdep.c:
	* sparc-sol2-tdep.c:
	* sparc-sol2-nat.c:
	* sparc-nat.h:
	* sparc-nat.c:
	* sparc-linux-tdep.c:
	* sparc-linux-nat.c:
	* source.h:
	* source.c:
	* somread.c:
	* solist.h:
	* solib.h:
	* std-regs.c:
	* stack.h:
	* stack.c:
	* stabsread.h:
	* sparcobsd-tdep.c:
	* sparcnbsd-tdep.c:
	* sparcnbsd-nat.c:
	* sparc64obsd-tdep.c:
	* sparc64nbsd-tdep.c:
	* sparc64nbsd-nat.c:
	* sparc64fbsd-tdep.c:
	* sparc64fbsd-nat.c:
	* sparc64-tdep.h:
	* sparc64-tdep.c:
	* sparc64-sol2-tdep.c:
	* sparc64-nat.c:
	* ui-file.c:
	* typeprint.h:
	* typeprint.c:
	* tramp-frame.h:
	* tramp-frame.c:
	* trad-frame.h:
	* trad-frame.c:
	* tracepoint.h:
	* top.c:
	* tobs.inc:
	* thread.c:
	* terminal.h:
	* target.h:
	* symfile.h:
	* stop-gdb.c:
	* vaxbsd-nat.c:
	* vax-tdep.h:
	* vax-tdep.c:
	* vax-nat.c:
	* varobj.h:
	* varobj.c:
	* value.h:
	* value.c:
	* valprint.h:
	* valprint.c:
	* v850-tdep.c:
	* uw-thread.c:
	* user-regs.c:
	* ui-out.h:
	* ui-out.c:
	* ui-file.h:
	* xcoffsolib.h:
	* xcoffsolib.c:
	* wrapper.c:
	* wince.c:
	* wince-stub.h:
	* wince-stub.c:
	* vaxobsd-tdep.c:
	* vaxnbsd-tdep.c:
	* gdb_gcore.sh:
	* copying.c:
	* configure.ac:
	* aclocal.m4:
	* acinclude.m4:
	* reply_mig_hack.awk:
	* observer.sh:
	* gdb_mbuild.sh:
	* arm-linux-tdep.c:
	* blockframe.c:
	* dbug-rom.c:
	* environ.h:
	* dwarf2loc.h:
	* gdb-events.sh:
	* glibc-tdep.h:
	* gdb_wait.h:
	* gdbthread.h:
	* i386-sol2-tdep.c:
	* hppabsd-tdep.c:
	* hppa-linux-nat.c:
	* hppa-hpux-nat.c:
	* ia64-linux-tdep.c:
	* infptrace.c:
	* linespec.h:
	* maint.c:
	* mips-mdebug-tdep.h:
	* remote-m32r-sdi.c:
	* s390-nat.c:
	* rs6000-nat.c:
	* remote-utils.h:
	* sh3-rom.c:
	* sh-linux-tdep.c:
	* top.h:
	* symtab.h:
	* symmisc.c:
	* symfile-mem.c:
	* srec.h:
	* user-regs.h:
	* version.h:
	* valarith.c:
	* xstormy16-tdep.c:
	* wrapper.h:
	* Makefile.in:
	* f-exp.y:
	* cris-tdep.c:
	* cp-name-parser.y:
	* procfs.c:
	* proc-utils.h:
	* proc-flags.c:
	* proc-api.c:
	* p-exp.y:
	* m68hc11-tdep.c:
	* m2-exp.y:
	* kod.h:
	* kod-cisco.c:
	* jv-exp.y:
	* hppa-linux-tdep.c: Add (c) after Copyright.  Update the FSF
	address.
@
text
@d2075 4
a2078 3
	$(gdbcore_h) $(regcache_h) $(regset_h) $(symtab_h) $(objfiles_h) \
	$(osabi_h) $(target_h) $(gdb_assert_h) $(gdb_string_h) \
	$(i386_tdep_h) $(i387_tdep_h) $(solib_svr4_h) $(bsd_uthread_h)
@


1.762
log
@* amd64obsd-tdep.c: Include "regcache.h" and "bsd-uthread.h".
(amd64obsd_uthread_reg_offset): New variable.
(AMD64OBSD_UTHREAD_RSP_OFFSET): New define.
(amd64obsd_supply_uthread, amd64obsd_collect_uthread): New
functions.
(amd64obsd_init_abi): Set supply_uthread and collect_uthread.
* Makefile.in (amd64obsd-tdep.o): Update dependencies.
@
text
@d1 1
a1 1
# Copyright 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997,
d19 2
a20 1
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
@


1.761
log
@2005-11-15  Andrew Stubbs  <andrew.stubbs@@st.com>

	* cli/cli-script.c: Include gdb_assert.h.
	(locate_arg): Detect $argc.
	(insert_args): Substitute $argc.
	* Makefile.in (cli-script.o): Add dependency on gdb_assert.h.

doc/
	* gdb.texinfo (User-defined commands): Add $argc. Add missing 'end'.
	Change @@var{$arg0 to @@code{$arg0.
@
text
@d1719 3
a1721 3
	$(symtab_h) $(objfiles_h) $(osabi_h) $(regset_h) $(target_h) \
	$(gdb_assert_h) $(gdb_string_h) $(amd64_tdep_h) $(i387_tdep_h) \
	$(solib_svr4_h)
@


1.761.2.1
log
@	Backport:
	2006-01-24  Daniel Jacobowitz  <dan@@codesourcery.com>

	* infcmd.c: Include "observer.h".
	(post_create_inferior): New function.
	(run_command_1): Call it.  Also call proceed.
	* inferior.h (post_create_inferior): New prototype.
	* Makefile.in (infcmd.o): Update.
...
@
text
@d2119 1
a2119 1
	$(solib_h) $(gdb_assert_h) $(observer_h)
@


1.761.2.2
log
@	Backport:
	2006-01-24  Daniel Jacobowitz  <dan@@codesourcery.com>

	PR gdb/1914
	* fork-child.c (fork_inferior): Don't call
	solib_create_inferior_hook.
	* infcmd.c (post_create_inferior): Call solib_add,
	solib_create_inferior_hook, and re_enable_breakpoints_in_shlibs.
	(attach_command): Don't call solib_add or
	re_enable_breakpoints_in_shlibs.  Call post_create_inferior
	instead.
...
@
text
@d1829 1
a1829 1
	$(exec_h) $(readline_h) $(gdb_assert_h) \
d2126 1
a2126 1
	$(gdbcore_h) $(regcache_h) $(gdb_assert_h) \
d2138 1
a2138 1
	$(gdbcore_h) $(command_h) $(gdb_stat_h) $(gdb_wait_h) \
d2141 1
a2141 1
	$(gdbthread_h) $(inferior_h) $(target_h) \
@


1.761.4.1
log
@2005-11-28  Michael Snyder  <msnyder@@redhat.com>

	* Makefile.in: Add linux-fork.c.
	* config/i386/linux.mh: Add linux-fork.o.
@
text
@d1378 1
a1378 1
	alpha-nat.c alphabsd-nat.c alpha-linux-nat.c linux-fork.c \
a2178 2
linux-fork.o: linux-fork.c linux-fork.h $(defs_h) $(inferior_h) \
	$(regcache_h) $(gdbcmd_h) $(infcall_h)
d2182 1
a2182 1
	$(gregset_h) $(gdbcore_h) $(gdbthread_h) $(gdb_stat_h) linux-fork.h
@


1.760
log
@2005-11-07  Andrew Stubbs  <andrew.stubbs@@st.com>

	* main.h (return_child_result, return_child_result_value): Declare.
	* infrun.c: Include main.h.
	(print_stop_reason): Remove declaration of return_child_result_value.
	* top.c: Include main.h.
	(quit_force): Remove declarations of return_child_result_value and
	return_child_result.
	* Makefile.in (top.o, infrun.o): Add main.h to dependencies.
@
text
@d2810 1
a2810 1
	$(cli_decode_h) $(cli_script_h)
@


1.759
log
@2005-11-07  Andrew Stubbs  <andrew.stubbs@@st.com>

	* Makefile.in (tui-winsource.o): Add gdb_assert.h to dependencies.
@
text
@d2136 1
a2136 1
	$(mi_common_h)
d2692 1
a2692 1
	$(cli_out_h)
@


1.758
log
@* doublest.c (floatformat_normalize_byteorder): Handle
floatformat_vax.
(convert_doublest_to_floatformat): Use
floatformat_normalize_byteorder to swap bytes if necessary.
* vax-tdep.c: Include floatformat.h.
(vax_gdbarch_init): Set float_format, double_format,
long_double_format and long_double_bit.
* Makefile.in (vax-tdep.o): Update dependencies.
@
text
@d3142 1
a3142 1
	$(gdb_curses_h)
@


1.758.2.1
log
@2005-11-07  Andrew Stubbs  <andrew.stubbs@@st.com>

	* Makefile.in (tui-winsource.o): Add gdb_assert.h to dependencies.
@
text
@d3142 1
a3142 1
	$(gdb_curses_h) $(gdb_assert_h)
@


1.758.2.2
log
@2005-11-14  Andrew Stubbs  <andrew.stubbs@@st.com>

	* infrun.c: Include main.h.
	(print_stop_reason): Set return_child_result_value on exit.
	* main.c (return_child_result): New variable.
	(return_child_result_value): Likewise.
	(captured_main): Add option --return-child-result.
	Replace call to target_detach and exit (in batch mode) with quit_force.
	(print_gdb_help): Add option --return-child-result.
	* top.c: Include main.h.
	(quit_force): Return child result if appropriate.
	* main.h (return_child_result, return_child_result_value): Declare.
	* Makefile.in (top.o, infrun.o): Add main.h to dependencies.

doc/
	* gdb.texinfo (Choosing modes): Add --return-child-result.
@
text
@d2136 1
a2136 1
	$(mi_common_h) $(main_h)
d2692 1
a2692 1
	$(cli_out_h) $(main_h)
@


1.758.2.3
log
@2005-11-16  Andrew Stubbs  <andrew.stubbs@@st.com>

	* NEWS (6.4): Mention $argc.
	* cli/cli-script.c: Include gdb_assert.h.
	(locate_arg): Detect $argc.
	(insert_args): Substitute $argc.
	* Makefile.in (cli-script.o): Add dependency on gdb_assert.h.

doc/
	* gdb.texinfo (User-defined commands): Add $argc. Add missing 'end'.
	Change @@var{$arg0 to @@code{$arg0.
@
text
@d2810 1
a2810 1
	$(cli_decode_h) $(cli_script_h) $(gdb_assert_h)
@


1.757
log
@        * Makefile.in (YYFILES): Add ada-lex.c
@
text
@d2750 4
a2753 4
vax-tdep.o: vax-tdep.c $(defs_h) $(arch_utils_h) $(dis_asm_h) $(frame_h) \
	$(frame_base_h) $(frame_unwind_h) $(gdbcore_h) $(gdbtypes_h) \
	$(osabi_h) $(regcache_h) $(regset_h) $(trad_frame_h) $(value_h) \
	$(gdb_string_h) $(vax_tdep_h)
@


1.756
log
@	* Makefile.in (linux-thread-db.o): Depend on $(gdbcore_h).

	* linux-thread-db.c (enable_thread_event): Extend pointer value as
	specified by target.
	(thread_db_get_thread_local_address): Likewise.
@
text
@d951 1
@


1.756.2.1
log
@2005-03-25  Daniel Jacobowitz  <dan@@codesourcery.com>

	* gdb/Makefile.in (arm-linux-nat.o): Update dependencies.
	* gdb/arm-linux-nat.c: Include "gdb_proc_service.h".
	(PTRACE_GET_THREAD_AREA): Define.
	(ps_get_thread_area): New function.

	* gdb/gdbserver/Makefile.in (linux-arm-low.o): Update dependencies.
	* gdb/gdbserver/linux-arm-low.c: Include "../gdb_proc_service.h".
	(PTRACE_GET_THREAD_AREA): Define.
	(ps_get_thread_area): New function.
@
text
@d1737 1
a1737 1
	$(target_h) $(linux_nat_h) $(gdb_proc_service_h) $(gdb_assert_h)
@


1.756.2.2
log
@2005-03-30  Daniel Jacobowitz  <dan@@codesourcery.com>

	* gdb/Makefile.in (arm-linux-nat.o): Update dependencies.
	* gdb/arm-linux-nat.c: Include "gdb_assert.h".
	(PTRACE_GETWMMXREGS, PTRACE_SETWMMXREGS): Define.
	(arm_linux_has_wmmx_registers): New flag.
	(GET_THREAD_ID): Remove stray punctuation.
	(IWMMXT_REGS_SIZE): Define.
	(fetch_wmmx_regs, store_wmmx_regs): New functions.
	(fetch_inferior_registers, store_inferior_registers): Call them.
	(arm_linux_available_registers): New function.
	* gdb/inftarg.c (child_xfer_partial): Handle
	TARGET_OBJECT_AVAILABLE_REGISTERS.
	* gdb/config/arm/nm-linux.h (arm_linux_available_registers): Add
	prototype.
	(NATIVE_XFER_AVAILABLE_REGISTERS): Define.

	* gdb/gdbserver/linux-arm-low.c (arm_fill_wmmxregset)
	(arm_store_wmmxregset): Remove stray text.
	(arm_available_registers): Remove debugging output.  Use hex.
	* gdb/gdbserver/regcache.c (num_registers): Make global.
	* gdb/gdbserver/server.c (handle_p_packet, handle_P_packet): Check
	the value of regnum.

2005-03-28  Paul Brook  <paul@@codesourcery.com>
	Daniel Jacobowitz  <dan@@codesourcery.com>

	* gdb/Makefile.in: arm-tdep.o depends on $(observer_h).
	* gdb/arm-linux-nat.c (fetch_fpregister, fetch_fpregs,
	store_fpregister, store_fpregs): Rename...
	(fetch_fpa_register, fetch_fpa_regs, store_fpa_register,
	store_fpa_regs): ... to this.
	* gdb/arm-linux-tdep.c (arm_linux_init_abi): Provide ABI specific
	overrides.
	* gdb/arm-tdep.c: Include opserver.h.
	(struct gdbarch_tdep_info): Add.
	(arm_push_dummy_call): Handle doubleword alignment.
	(arm_register_type): Handle iWMMXt and VFP regs.
	(arm_register_byte): Ditto.
	(arm_pseudo_register_read): New function.
	(arm_pseudo_register_write): New function.
	(arm_dwarf_reg_to_regnum): New function.
	(arm_register_sim_regno): Handle iWMMXT regs.
	(arm_register_remote_regno): New function.
	(arm_extract_return_value): Use new macro names.
	(arm_register_name): Handle iWMMXt and VFP registers.
	(arm_sim_available_registers): New function.
	(arm_update_architecture): New function.
	(arm_gdbarch_init): Handle optional register sets.  Register new
	hooks.  Fix misleading error message.
	(_initialize_arm_tdep): Call observer_attach_inferior_created.
	* gdb/arm-tdep.h (ARM_NUM_FP_ARG_REGS, ARM_LAST_FP_ARG_REGNUM,
	FP_REGISTER_SIZE, NUM_FREGS): Rename ...
	(ARM_NUM_FPA_ARG_REGS, ARM_LAST_FPA_ARG_REGNUM, FPA_REGISTER_SIZE,
	NUM_FPA_REGS): ... to this.
	(NUM_IWMMXT_COP0REGS, NUM_IWMMXT_COP1REGS, NUM_IWMMXT_REGS,
	IWMMXT_COP0_REGSIZE, IWMMXT_COP1_REGSIZE, NUM_VFP_XREGS,
	VFP_XREG_SIZE, NUM_VFP_SREGS, VFP_SREG_SIZE, NUM_VFP_PSEUDOS): Define.
	(struct gdbarch_tdep): Add target_has_iwmmxt_regs,
	target_has_vfp_regs, first_iwmmxt_regnum, target_iwmmxt_regnum,
	first_vfp_regnum, first_vfp_pseudo and target_vfp_regnum.
	* gdb/gdbarch.c (struct gdbarch): Add remote_num_g_packet_regs,
	sim_available_registers and register_remote_regno.
	(startup_gdbarch, verify_gdbarch): Ditto.
	(gdbarch_dump): Dump new fields.
	(gdbarch_remote_num_g_packet_regs_p, gdbarch_remote_num_g_packet_regs,
	set_gdbarch_remote_num_g_packet_regs,
	gdbarch_sim_available_registers_p, gdbarch_sim_available_registers,
	set_gdbarch_sim_available_registers, gdbarch_register_remote_regno_p,
	gdbarch_register_remote_regno, set_gdbarch_register_remote_regno):
	New functions.
	* gdb/gdbarch.h: Add prototypes.
	* gdb/gdbarch.sh: Add new fields.
	(deprecated_current_gdbarch_select_hack): Call flush_cached_frames.
	* gdb/remote-sim.h (gdbsim_create_inferior): Call
	observer_notify_inferior_created.
	(gdbsim_xfer_partial): New function.
	(init_gdbsim_ops): Use it.
	* gdb/remote.c (struct remote_state): Add num_g_regs.
	(init_remote_state): Only consider hard regs.  Allow target to provide
	register mapping.
	(packet_reg_from_regnum): Don't check pseudo regs.
	(packet_reg_from_pnum): Ditto.
	(remote_protocol_qPart_availableRegisters): Add.
	(set_remote_protocol_qPart_availableRegisters_packet_cmd,
	show_remote_protocol_qPart_availableRegisters_packet_cmd): New
	functions.
	(fetch_register_using_p, store_register_using_P): Handle arbitrary
	register mappings.
	(fetch_registers_using_g): New function.
	(remote_fetch_registers): Use it.
	(store_registers_using_G): New function.
	(remote_store_registers): Use it.
	(remote_xfer_partial): Handle TARGET_OBJECT_AVAILABLE_REGISTERS.
	(show_remote_cmd): Display availableRegisters.
	(_initialize_remote): Register qPart_availableRegisters.
	* gdb/target.h (enum target_object): Add
	TARGET_OBJECT_AVAILABLE_REGISTERS.
	* gdb/gdbserver/configure.srv (arm*-*-linux*): set
	srv_linux_regsets=yes.
	* gdb/gdbserver/linux-arm-low.c (PTRACE_GETWMMXREGS,
	PTRACE_SETWMMXREGS): Define.
	(arm_fill_gregset, arm_store_gregset, arm_fill_wmmxregset,
	arm_store_wmmxregset, arm_available_registers): New functions.
	(target_regsets): Add.
	(the_low_target): Use arm_available_registers.
	* gdb/gdbserver/linux-low.c (linux_available_registers): New function.
	(linux_target_op): Use it.
	* gdb/gdbserver/linux-low.h (gdbserver/linux-low.h): Add
	available_registers.
	(use_regsets_p): Declare.
	* gdb/gdbserver/regcache.c (g_register_bytes): Add.
	(regcache_invalidate, registers_to_string, registers_from_string):
	Use it.
	(set_register_cache): Set g_register_bytes.
	(supply_register_as_string): New function.
	* gdb/gdbserver/regcache.h (supply_register_as_string): Add prototype.
	* gdb/gdbserver/server.c (handle_query): Handle
	qPart:availableRegisters.
	(handle_p_packet, handle_P_packet): New functions.
	(main): Handle 'p' and 'P' packets.
	* gdb/gdbserver/target.h (struct target_ops): Add available_registers.
	* gdb/regformats/reg-arm.dat: Add last_g_reg and iWMMXT regs.
	* gdb/regformats/regdat.sh: Handle last_g_reg.
	* gdb/regformats/regdef.h (set_register_cache): Update prototype.
@
text
@d1752 1
a1752 1
	$(dwarf2_frame_h) $(observer_h)
@


1.756.2.3
log
@	Backport:
	2006-01-24  Daniel Jacobowitz  <dan@@codesourcery.com>

	* infcmd.c: Include "observer.h".
	(post_create_inferior): New function.
	(run_command_1): Call it.  Also call proceed.
	* inferior.h (post_create_inferior): New prototype.
	* Makefile.in (infcmd.o): Update.
...
@
text
@d2118 1
a2118 1
	$(solib_h) $(gdb_assert_h) $(observer_h)
@


1.756.2.4
log
@	Backport:
	2006-01-24  Daniel Jacobowitz  <dan@@codesourcery.com>

	PR gdb/1914
	* fork-child.c (fork_inferior): Don't call
	solib_create_inferior_hook.
	* infcmd.c (post_create_inferior): Call solib_add,
	solib_create_inferior_hook, and re_enable_breakpoints_in_shlibs.
	(attach_command): Don't call solib_add or
	re_enable_breakpoints_in_shlibs.  Call post_create_inferior
	instead.
...
@
text
@d1828 1
a1828 1
	$(exec_h) $(readline_h) $(gdb_assert_h) \
d2125 1
a2125 1
	$(gdbcore_h) $(regcache_h) $(gdb_assert_h) \
d2137 1
a2137 1
	$(gdbcore_h) $(command_h) $(gdb_stat_h) $(gdb_wait_h) \
d2140 1
a2140 1
	$(gdbthread_h) $(inferior_h) $(target_h) \
@


1.755
log
@(TAGS): Put DEPFILES back and add as a dependency.
@
text
@d2185 1
a2185 1
	$(regcache_h) $(solib_svr4_h)
@


1.754
log
@(HFILES_NO_SRCDIR): Remove minimon.h, symfile-mem.h.
(ALLDEPFILES) Correct typo amdfbsd-nat.c -> amd64fbsd-nat.c.
Remove irix4-nat.c, m3-nat.c, mipsm3-nat.c, ns32k-tdep.c
symm-tdep.c and symm-nat.c.
(TAGFILES_NO_SRCDIR): Add CONFIG_SRCS.
(DEPFILES): Remove CONFIG_OBS and include it explicitly where
needed.
@
text
@d1230 1
a1230 1
TAGS: $(TAGFILES_NO_SRCDIR) $(TAGFILES_WITH_SRCDIR)
d1235 1
a1235 1
	`(for i in $(TAGFILES_NO_SRCDIR); do \
@


1.753
log
@	* Makefile.in (ALLDEPFILES): Update.
	(alpha-linux-nat.o, sparc-linux-nat.o): New rules.
	(amd64-linux-nat.o, arm-linux-nat.o, hppa-linux-nat.o)
	(i386-linux-nat.o, ia64-linux-nat.o, linux-nat.o, m32r-linux-nat.o)
	(m68klinux-nat.o, mips-linux-nat.o, ppc-linux-nat.o, s390-nat.o)
	(sparc64-linux-nat.o): Update dependencies.
	* alpha-linux-nat.c, sparc-linux-nat.c: New files.
	* amd64-linux-nat.c (amd64_linux_fetch_inferior_registers): Renamed
	from fetch_inferior_registers and made static.
	(amd64_linux_store_inferior_registers): Renamed from
	store_inferior_registers and made static.
	(amd64_linux_child_post_start_inferior): Renamed from
	child_post_startup_inferior and made static.  Call
	super_post_startup_inferior.
	(super_post_startup_inferior): New.
	(_initialize_amd64_linux_nat): Set it.  Call linux_target and
	add_target.
	* arm-linux-nat.c (arm_linux_fetch_inferior_registers): Renamed
	from fetch_inferior_registers and made static.
	(arm_linux_store_inferior_registers): Renamed from
	store_inferior_registers and made static.
	(_initialize_arm_linux_nat): Add a prototype.  Use linux_target and
	add_target.
	* hppa-linux-nat.c (hppa_linux_fetch_inferior_registers): Renamed
	from fetch_inferior_registers and made static.
	(hppa_linux_store_inferior_registers): Renamed from
	store_inferior_registers and made static.
	(_initialize_hppa_linux_nat): New function.
	* i386-linux-nat.c (i386_linux_fetch_inferior_registers): Renamed
	from fetch_inferior_registers and made static.
	(i386_linux_store_inferior_registers): Renamed from
	store_inferior_registers and made static.
	(i386_linux_resume): Renamed from child_resume and made static.
	(i386_linux_child_post_start_inferior): Renamed from
	child_post_startup_inferior and made static.  Call
	super_post_startup_inferior.
	(super_post_startup_inferior): New.
	(_initialize_i386_linux_nat): New function.
	* i386-nat.c: Remove LINUX_CHILD_POST_STARTUP_INFERIOR #ifndef.
	* ia64-linux-nat.c (ia64_linux_xfer_unwind_table): Remove.
	(super_xfer_partial): New.
	(ia64_linux_xfer_partial): New function.  Use it.
	(_initialize_ia64_linux_nat): New function.
	* ia64-tdep.c (getunwind_table): Revert 2005-06-08 change; use
	target_read_partial and document the problem.
	* inf-ptrace.c (inf_ptrace_fetch_register): Use
	CANNOT_FETCH_REGISTER.  Fix some comments.
	(inf_ptrace_store_register): Use CANNOT_STORE_REGISTER.  Fix some
	comments.
	* linux-nat.c: Include "inf-ptrace.h" and "auxv.h".
	(linux_ops, super_xfer_partial): New variables.
	(linux_child_post_startup_inferior): Make static.
	(child_post_startup_inferior): Delete.
	(linux_nat_attach, linux_nat_detach, resume_callback)
	(linux_nat_resume, linux_nat_wait, linux_nat_create_inferior)
	(linux_nat_mourn_inferior): Use linux_ops instead of
	deprecated_child_ops.
	(child_wait): Do not depend on CHILD_WAIT.
	(linux_nat_xfer_memory): Remove, replace by ...
	(linux_nat_xfer_partial): ... this.  Use linux_ops->to_xfer_partial
	instead of linux_proc_xfer_memory and child_xfer_memory.
	(linux_nat_fetch_registers, linux_nat_store_registers)
	(linux_nat_child_post_startup_inferior): New functions.
	(init_linux_nat_ops): Use the new functions.
	(linux_proc_xfer_memory): Remove, replace by ...
	(linux_proc_xfer_partial): ... this.  Make static.
	(linux_xfer_partial, linux_register_u_offset, linux_target): New
	functions.
	(_initialize_linux_nat): Do not modify deprecated_child_ops.
	* linux-nat.h (linux_proc_xfer_memory): Remove prototype.
	(struct mem_attrib, struct target_ops): Remove forward declarations.
	(linux_child_post_startup_inferior): Remove prototype.
	(linux_target): Add prototype.
	* linux-thread-db.c (thread_db_xfer_memory): Remove, replace by ...
	(thread_db_xfer_partial): ... this.
	(init_thread_db_ops): Set to_xfer_partial instead of
	deprecated_xfer_memory.
	* m32r-linux-nat.c (m32r_linux_fetch_inferior_registers): Renamed
	from fetch_inferior_registers and made static.
	(m32r_linux_store_inferior_registers): Renamed from
	store_inferior_registers and made static.
	(_initialize_m32r_linux_nat): New function.
	* m68klinux-nat.c (m68k_linux_fetch_inferior_registers): Renamed
	from fetch_inferior_registers and made static.
	(m68k_linux_store_inferior_registers): Renamed from
	store_inferior_registers and made static.
	(old_fetch_inferior_registers, old_store_inferior_registers): Made
	static.
	(_initialize_m68k_linux_nat): Use linux_target and add_target.
	* mips-linux-nat.c (_initialize_mips_linux_nat): New function.
	* ppc-linux-nat.c (ppc_linux_fetch_inferior_registers): Renamed
	from fetch_inferior_registers and made static.
	(ppc_linux_store_inferior_registers): Renamed from
	store_inferior_registers and made static.
	(_initialize_ppc_linux_nat): New function.
	* s390-nat.c (s390_linux_fetch_inferior_registers): Renamed
	from fetch_inferior_registers and made static.
	(s390_linux_store_inferior_registers): Renamed from
	store_inferior_registers and made static.
	(_initialize_s390_nat): New function.
	* sparc64-linux-nat.c (_initialize_sparc64_linux_nat): Use
	linux_target and add_target.
	* config/nm-linux.h: Don't include "auxv.h".
	(struct target_waitstatus, child_wait, CHILD_WAIT)
	(CHILD_PID_TO_EXEC_FILE, CHILD_INSERT_FORK_CATCHPOINT)
	(CHILD_INSERT_VFORK_CATCHPOINT, CHILD_INSERT_EXEC_CATCHPOINT)
	(CHILD_POST_STARTUP_INFERIOR, CHILD_POST_ATTACH, CHILD_FOLLOW_FORK)
	(DEPRECATED_KILL_INFERIOR, NATIVE_XFER_AUXV): Delete.
	* config/alpha/alpha-linux.mh (NATDEPFILES): Replace infptrace.o
	and inftarg.o with inf-ptrace.o and alpha-linux-nat.o.
	* config/sparc/linux.mh (NATDEPFILES): Replace infptrace.o and
	inftarg.o with sparc-linux-nat.o.
	* config/sparc/linux64.mh (NATDEPFILES): Remove infptrace.o and
	inftarg.o.
	* config/arm/linux.mh (NATDEPFILES): Replace infptrace.o and
	inftarg.o with inf-ptrace.o.
	* config/i386/linux.mh (NATDEPFILES): Likewise.
	* config/i386/linux64.mh (NATDEPFILES): Likewise.
	* config/ia64/linux.mh (NATDEPFILES): Likewise.
	* config/m32r/linux.mh (NATDEPFILES): Likewise.
	* config/m68k/linux.mh (NATDEPFILES): Likewise.
	* config/mips/linux.mh (NATDEPFILES): Likewise.
	* config/pa/linux.mh (NATDEPFILES): Likewise.
	* config/powerpc/linux.mh (NATDEPFILES): Likewise.
	* config/powerpc/ppc64-linux.mh (NATDEPFILES): Likewise.
	* config/s390/s390.mh (NATDEPFILES): Likewise.
	* config/i386/nm-linux.h (DEPRECATED_CHILD_RESUME): Don't define.
	(LINUX_CHILD_POST_STARTUP_INFERIOR): Don't define.
	* config/i386/nm-linux64.h (LINUX_CHILD_POST_STARTUP_INFERIOR):
	Don't define.
	* config/ia64/nm-linux.h: Don't include "target.h".
	(NATIVE_XFER_UNWIND_TABLE, ia64_linux_xfer_unwind_table): Remove.
	* config/djgpp/fnchange.lst: Add alpha-linux-tdep.c,
	alpha-linux-nat.c, sparc-linux-tdep.c, and sparc-linux-nat.c.
@
text
@d855 1
a855 1
	gdb-stabs.h $(inferior_h) language.h minimon.h monitor.h \
d857 1
a857 1
	symfile.h symfile-mem.h stabsread.h target.h terminal.h typeprint.h \
d884 1
a884 1
	   $(REMOTE_OBS) $(SIM_OBS) $(CONFIG_OBS)
d890 1
a890 1
	$(SUBDIR_CLI_SRCS)
d893 1
a893 1
COMMON_OBS = $(DEPFILES) $(YYOBJ) \
d1235 1
a1235 1
	`(for i in $(DEPFILES) $(TAGFILES_NO_SRCDIR); do \
d1357 1
a1357 1
	   `echo $(DEPFILES) | sed 's/\.o /\.c /g'`
d1381 1
a1381 1
	amd64bsd-nat.c amdfbsd-nat.c amd64fbsd-tdep.c \
d1411 1
a1411 1
	infptrace.c inftarg.c irix4-nat.c irix5-nat.c \
d1413 1
a1413 1
	lynx-nat.c m3-nat.c \
a1420 1
	mcore-tdep.c \
d1423 1
a1423 1
	mips-tdep.c mipsm3-nat.c mipsv4-nat.c \
d1427 1
a1427 1
	ns32k-tdep.c solib-osf.c \
a1448 1
	symm-tdep.c symm-nat.c \
@


1.752
log
@	* mn10300-linux-tdep.c (solib-svr4.h): Include.
	(mn10300_linux_svr4_fetch_link_map_offsets): New function.
	(am33_linux_init_osabi): Register it.
	* Makefile.in (mn10300-linux-tdep.o): Update dependencies.
@
text
@d1377 1
a1377 1
	alpha-nat.c alphabsd-nat.c \
d1419 1
d1443 1
d1674 1
d1705 1
a1705 1
	$(i386_linux_tdep_h) $(amd64_nat_h)
d1738 2
a1739 1
	$(gdb_string_h) $(regcache_h) $(arm_tdep_h) $(gregset_h)
d2020 2
a2021 1
	$(gdb_string_h) $(inferior_h) $(hppa_tdep_h) $(gregset_h)
d2058 1
a2058 1
	$(gdb_proc_service_h)
d2100 1
a2100 1
	$(gregset_h)
d2182 2
a2183 2
	$(gdbcmd_h) $(regcache_h) $(elf_bfd_h) $(gregset_h) $(gdbcore_h) \
	$(gdbthread_h) $(gdb_stat_h)
d2202 1
a2202 1
	$(gregset_h) $(m32r_tdep_h)
d2233 1
a2233 1
	$(gregset_h)
d2284 2
a2285 1
mips-linux-nat.o: mips-linux-nat.c $(defs_h) $(mips_tdep_h)
d2378 2
a2379 1
	$(gdb_wait_h) $(gregset_h) $(ppc_tdep_h)
d2490 1
a2490 1
	$(s390_tdep_h)
d2590 1
a2590 1
	$(sparc_nat_h)
d2613 2
@


1.751
log
@Remove inadvertent tab after mn10300-tdep.o entry.
@
text
@d2309 2
a2310 1
	$(gdb_string_h) $(regcache_h) $(mn10300_tdep_h)
@


1.750
log
@	* mn10300-tdep.c (regcache.h): Delete duplicate include.
	* Makefile.in (mn10300-tdep.o): Update dependencies.
@
text
@d2314 1
a2314 1
	
@


1.749
log
@	* mn10300-tdep.c (osabi.h): Include.
	(mn10300_gdbarch_init): Invoke gdbarch_init_osabi().
	* Makefile.in (mn10300-tdep.o): Update dependencies.
@
text
@d2313 1
a2313 1
	$(symtab_h) $(dwarf2_frame_h) $(regcache_h) $(osabi_h) $(mn10300_tdep_h)
@


1.748
log
@	* mn10300-linux-tdep.c: New file.
	* Makefile.in (mn10300-linux-tdep.o): New Makefile target.
	* config/mn10300/linux.mt (TDEPFILES): Add mn10300-linux-tdep.o and
	corelow.o.
	* mn10300-tdep.h (E_E8_REGNUM, E_E9_REGNUM, E_E10_REGNUM)
	(E_FPCR_REGNUM, E_FS0_REGNUM): New constants.
@
text
@d2313 2
a2314 1
	$(symtab_h) $(dwarf2_frame_h) $(regcache_h) $(mn10300_tdep_h)
@


1.747
log
@* vaxobsd-tdep.c: New file.
* config/vax/obsd.mt (TDEPFILES): Add vaxobsd-tdep.o.
* Makefile.in (vaxobsd-tdep.o): New dependency.
@
text
@d2308 2
@


1.746
log
@* ppcobsd-tdep.c: Include "frame.h" and "frame-unwind.h".  Don't
include "tramp-frame.h".
(ppcobsd_sigtramp_cache_init): Remove function.
(ppcobsd_sigtramp): Remove variable.
(ppcobsd_page_size, ppcobsd_sigreturn_offset): New variables.
(ppcobsd_sigtramp_p): New function.
(ppcobsd_sigtramp_frame_cache, ppcobsd_sigtramp_frame_this_id)
(ppcobsd_sigtramp_frame_prev_register): New functions.
(ppcobsd_sigtramp_frame_unwind): New variable.
(ppcobsd_sigtramp_frame_sniffer): New function.
(ppcobsd_init_abi): Adjust to register new sigtramp sniffer
instead of the old one.
* Makefile.in (ppcobsd-tdep.o): Update dependencies.
@
text
@d2735 3
@


1.745
log
@* stack.c: Reformat.  Improve comments.  Include "valprint.h".
(args_info, locals_info, backtrace_command, backtrace_command_1)
(backtrace_full_command, frame_info, frame_command, down_command)
(down_silently_base, down_silently_command, up_command)
(up_silently_base, up_silently_command, parse_frame_specification)
(current_frame_command, print_frame_args_vars, catch_info)
(args_plus_locals_info), print_frame_label_vars)
(print_block_frame_labels, print_block_frame_locals)
(func_command): Remove prototypes.
(print_stack_frame, backtrace_command_stub, backtrace_command,
backtrace_full_command, print_frame_args, print_frame_arg_vars,
print_args_stub, func_command): Remove redundant casts.
(addressprint): Remove extern declaration.
(frame_command): Make static.
(struct print_stack_frame_args, struct print_args_args): Rename
`fi' member to `frame'.
(print_stack_frame, print_frame_nameless_args, print_frame_args)
(set_current_sal_from_frame, print_frame_info, print_frame)
(show_stack_frame, print_block_frame_locals)
(print_frame_local_vars, print_frame_label_vars)
(print_frame_arg_vars, select_and_print_frame): Rename `fi'
argument to `frame'.
(func_command): Rename `fp' variable to `frame'.
(get_language): Restructure.
* Makefile.in (stack.o): Update dependencies.
@
text
@d2385 2
a2386 2
	$(osabi_h) $(regcache_h) $(regset_h) $(trad_frame_h) \
	$(tramp_frame_h) $(gdb_assert_h) $(gdb_string_h) $(ppc_tdep_h) \
@


1.744
log
@Contribute target dependent code for Morpho Technologies ms1 processor.
@
text
@d2635 6
a2640 6
stack.o: stack.c $(defs_h) $(gdb_string_h) $(value_h) $(symtab_h) \
	$(gdbtypes_h) $(expression_h) $(language_h) $(frame_h) $(gdbcmd_h) \
	$(gdbcore_h) $(target_h) $(source_h) $(breakpoint_h) $(demangle_h) \
	$(inferior_h) $(annotate_h) $(ui_out_h) $(block_h) $(stack_h) \
	$(gdb_assert_h) $(dictionary_h) $(exceptions_h) $(reggroups_h) \
	$(regcache_h) $(solib_h)
@


1.743
log
@* Makefile.in (m68kbsd-tdep.o): Ad missing space.
@
text
@d2315 5
@


1.742
log
@* tramp-frame.h (struct tramp_frame): Allow for 16 instructions
instead of 8.
* m68kbsd-tdep.c: Include "frame.h", "trad-frame.h" and
"tramp-frame.h".
(m68kobsd_sigtramp_cache_init): New function.
(m68kbsd_aout_init_abi): Prepend m68kobsd_sigtramp unwinder.
@
text
@d2223 1
a2223 1
	$(tramp_frame_h)$(gdb_assert_h) $(gdb_string_h) $(m68k_tdep_h) \
@


1.741
log
@    Marcel Moolenaar  <marcel@@xcllnt.net>
* sparc64fbsd-nat.c: Include "regcache.h", <sys/types.h>,
<machine/pcb.h> and "bsd-kvm.h".
(sparc64fbsd_kvm_supply_pcb): New function.
(_initialize_sparc64fbsd_nat): Enable libkvm interface.
* config/sparc/fbsd.mh (NATDEPFILES): Add bsd-kvm.o.
(LOADLIBES): New variable.
* Makefile.in (sparc64fbsd-nat.o): Update dependencies.
@
text
@d2221 4
a2224 3
m68kbsd-tdep.o: m68kbsd-tdep.c $(defs_h) $(arch_utils_h) $(osabi_h) \
	$(regcache_h) $(regset_h) $(gdb_assert_h) $(gdb_string_h) \
	$(m68k_tdep_h) $(solib_svr4_h)
@


1.740
log
@	* Makefile.in (RUNTEST): Set to runtest.
@
text
@d2566 2
a2567 2
sparc64fbsd-nat.o: sparc64fbsd-nat.c $(defs_h) $(target_h) $(fbsd_nat_h) \
	$(sparc64_tdep_h) $(sparc_nat_h)
@


1.739
log
@* solib-svr4.c: Include "solib.h".
* Makefile.in (solib-svr4.o): Update dependencies.
@
text
@d392 1
a392 4
RUNTEST = `if [ -f $${rootsrc}/../dejagnu/runtest ] ; then \
		echo $${rootsrc}/../dejagnu/runtest ; else echo runtest; \
	   fi`

@


1.738
log
@* ppcobsd-nat.c: Include "gdbcore.h", <sys/signal.h>,
<machine/frame.h>, <machine/pcb.h> and "bsd-kvm.h".
(ppcobsd_supply_pcb): New function.
(_initialize_ppcobsd_nat): Enable libkvm interface.
* Makefile.in (ppcobsd-nat.o): Update dependencies.
* config/powerpc/obsd.mh (NATDEPFILES): Add bsd-kvm.o.
(LOADLIBES): New variable.
@
text
@d2556 1
a2556 1
	$(solist_h) $(solib_svr4_h) $(bfd_target_h) $(exec_h)
@


1.737
log
@* hppabsd-tdep.c: Include "symtab.h", "objfiles.h", "target.h",
"value.h" and "elf/common.h".
(hppabsd_supply_gregset): Use `gdb_byte *' for byte buffer.
(hppabsd_find_global_pointer): New function.
(hppabsd_init_abi): Set TDEP->find_global_pointer to
hppabsd_find_global_pointer.
* Makefile.in (hppabsd-tdep.o): Update dependencies.
@
text
@d2378 3
a2380 2
ppcobsd-nat.o: ppcobsd-nat.c $(defs_h) $(inferior_h) $(regcache_h) \
	$(ppc_tdep_h) $(ppcobsd_tdep_h) $(inf_ptrace_h)
@


1.736
log
@gdb/
	* Makefile.in (symfile.o): Add $(exec_h).
	* exec.h (exec_set_section_address): Add prototype.
	* exec.c (exec_set_section_address): New function.
	* symfile.c: Include "exec.h".
	(struct place_section_arg, place_section): New.
	(default_symfile_offsets): Call place_section for each
	section of a relocatable file.
gdb/testsuite/
	* gdb.base/relocate.c: Add a copyright notice.
	(dummy): Remove.
	* gdb.base/relocate.exp: Test printing the values of variables
	from a relocatable file.
@
text
@d2006 3
a2008 2
hppabsd-tdep.o: hppabsd-tdep.c $(defs_h) $(arch_utils_h) $(osabi_h) \
	$(regcache_h) $(regset_h) $(gdb_assert_h) $(gdb_string_h) \
@


1.735
log
@        * exceptions.h: Include ui-out.h.
        (ui_out): Remove declaration.
        * Makefile.in (exceptions_h): Add dependency on ui-out.h.
@
text
@d2645 1
a2645 1
	$(gdb_string_h) $(gdb_stat_h) $(observer_h)
@


1.734
log
@This is a cleanup change. It is the beggining of allowing GDB/MI to be
better understood (internally).
@
text
@d675 1
a675 1
exceptions_h = exceptions.h
@


1.733
log
@* armnbsd-nat.c: Include "gdb_string.h" and "inf_ptrace.h".
Reorder includes.  Don't require FETCH_INFERIOR_REGISTERS to be
defined.
(armnbsd_fetch_registers): Rename from armnbsd_fetch_registers.
Make static.
(armnbsd_store_registers): Rename from armnbsd_store_registers.
Make static.
(_initialize_arm_netbsd_nat): Construct and add target vector.
* Makefile.in (armnbsd-nat.o): Update dependencies.
* config/arm/nbsdaout.mh (NATDEPFILES): Remove infptrace.o and
intarg.o, add inf-ptrace.o.
(NAT_FILE): Set to solib.h.
* config/arm/nbsdelf.mh (NATDEPFILES): Remove infptrace.o and
inftarg.o, add inf-ptrace.o.
(NAT_FILE): Remove.
@
text
@d174 1
a174 1
	mi-main.o mi-parse.o mi-getopt.o
d181 1
a181 1
	mi/mi-main.c mi/mi-parse.c mi/mi-getopt.c
d827 1
d1782 1
a1782 1
	$(solist_h) $(observer_h) $(exceptions_h) $(gdb_events_h)
d2133 2
a2134 1
	$(value_h) $(observer_h) $(language_h) $(solib_h) $(gdb_assert_h)
d3005 2
@


1.732
log
@	* MAINTAINERS: Undelete v850.
	* Makefile.in: Re-add v850-tdep.o dependencies.
	* configure.tgt: Re-add v850.
	* v850-tdep.c: Reorder code slightly.  Add register number enumerator.
	(struct v850_frame_cache): New structure.
	(v850_processor_type_table): Remove. Move functionality into
	v850_register_name, v850e_register_name and v850_gdbarch_init.
	(v850_register_name): New function.
	(v850e_register_name): New function.
	(struct prologue_info): Remove definition.
	(v850_register_type): New function.
	(v850_type_is_scalar): New function.
	(v850_use_struct_convention): Align to gcc behaviour.
	(v850_handle_prepare): Renamed from handle_prepare. Change third
	parameter to struct v850_frame_cache *.
	(v850_handle_pushm): Renamed from handle_pushm. Change third parameter
	to struct v850_frame_cache *.
	(v850_is_save_register): New function to evaluate if a register is
	caller-save.
	(v850_analyze_prologue): Replace v850_scan_prologue.  Change to support
	new frame code.
	(v850_init_extra_frame_info): Remove.
	(v850_frame_chain): Remove.
	(v850_find_callers_reg): Remove.
	(v850_skip_prologue): Make static.
	(v850_pop_frame): Remove.
	(v850_frame_align): New function.
	(v850_push_dummy_call): Replace v850_push_arguments.
	(v850_push_return_address): Remove.
	(v850_extract_return_value): New function.
	(v850_store_return_value): New function.
	(v850_return_value): New function.
	(v850_frame_saved_pc): Remove.
	(v850_breakpoint_from_pc): New function.
	(v850_alloc_frame_cache): New function.
	(v850_fix_call_dummy): Remove.
	(v850_frame_cache): New function.
	(v850_target_architecture_hook): Remove.
	(v850_frame_prev_register): New function.
	(v850_frame_this_id): New function.
	(v850_frame_unwind): New structure.
	(v850_frame_sniffer): New function.
	(v850_unwind_sp): New function.
	(v850_unwind_pc): New function.
	(v850_unwind_dummy_id): New function.
	(v850_frame_base_address): New function.
	(v850_frame_base): New structure.
	(v850_gdbarch_init): New function.
	* config/v850/v850.mt: Undelete.  Drop TM_FILE.
@
text
@d1742 2
a1743 2
armnbsd-nat.o: armnbsd-nat.c $(defs_h) $(arm_tdep_h) $(inferior_h) \
	$(regcache_h) $(gdbcore_h)
@


1.731
log
@./
	* ylwrap: Import from Automake 1.9.5.
binutils/
	* acinclude.m4: Remove obsolete code.
	* configure.in: Update AC_PREREQ.
	* doc/Makefile.am (binutils_TEXINFOS): Define.
	(config.texi): Depend on distributed files instead of built
	files.
	(binutils.dvi, binutils.info): Remove unnecessary rules.
	(DISTCLEANFILES): Remove.
	(install-data-local): Renamed from install.
	(info-local): Renamed from info.
	* Makefile.in, aclocal.m4, config.in, configure,
	doc/Makefile.in: Regenerated.
gas/
	* Makefile.am (m68k-parse.c, itbl-parse.c): Update ylwrap
	invocation.
	* Makefile.in: Regenerated.
ld/
	* Makefile.am (AM_MAKEINFOFLAGS): Define.
	(TEXI2DVI): Define.
	(ldver.texi): Depend on distributed files instead of built files.
	(ld.info): Include $(srcdir) in the rule target.  Remove actions.
	(ld.dvi): Remove actions.
	(MAINTAINERCLEANFILES): Add configdoc.texi.
	(CONFIG_STATUS_DEPENDENCIES): Add bfd/configure.in.
	(install-data-local): Renamed from install.
	(Makefile): Remove explicit dependency.
	* acinclude.m4: Remove obsolete code.
	* configure.in: Update AC_PREREQ.  Remove extra $CONFIG_SHELL.
	* Makefile.in, aclocal.m4, config.in, configure: Regenerated.
gdb/
	* Makefile.in (.y.c): Update ylwrap invocation.
@
text
@d1451 1
d2701 4
@


1.730
log
@* sol-thread.c: Include "solib.h".
(sol_thread_attach): Use solib_add instead of SOLIB_ADD.
* Makefile.in (sol-thread.o): Update dependencies.
@
text
@d1600 1
a1600 1
	$(SHELL) $(YLWRAP) "$(YACC)" $< y.tab.c $@@.tmp -- $(YFLAGS)
@


1.729
log
@
	* Makefile.in (go32-nat.o): Add $(top_h) to prerequisites.

	* go32-nat.c: Include top.h.  Update copyright years.
	(init_go32_ops): Override the default value of gdbinit[] with
	"gdb.ini".

	* cli/cli-cmds.c (init_cli_cmds): Use gdbinit[] instead of a
	compile-time literal string GDBINIT_FILENAME.

	* top.c (PATH_MAX): Define if not defined.
	(gdbinit): Declare with a constant size PATH_MAX.

	* config/i386/go32.mh (XM_FILE): Remove.

	* config/i386/xm-go32.h: Remove file.
@
text
@d2554 1
a2554 1
	$(symfile_h) $(gdb_string_h) $(gregset_h)
@


1.728
log
@* solib.h (CLEAR_SOLIB, SOLIB_ADD)
(SOLIB_CREATE_INFERIOR_HOOK, SOLIB_REMOVE_INFERIOR_HOOK)
(SOLIB_IN_DYNAMIC_LINKER, SOLIB_RESTART)
(DISABLE_UNSETTABLE_BREAK, PC_SOLIB)
(IN_SOLIB_DYNSYM_RESOLVE_CODE): Remove defines and orphaned
comments.
* breakpoint.c: Include "solib.h".
(insert_bp_location) [!DISABLE_UNSETTABLE_BREAK]: Call
solib_address.
(remove_solib_event_breakpoints, create_solib_event_breakpoint)
(disable_breakpoints_in_shlibs)
(disable_breakpoints_in_unloaded_shlib)
(re_enable_breakpoints_in_shlibs): Compile if SOLIB_ADD isn't
defined. If PC_SOLIB isn't defined, call solib_address.
(_initialize_breakpoint): Unconditionally install observer.
* corelow.c: Include "solib.h".
[SOLIB_ADD] (solib_add_stub): Remove prototype.
(core_close) [!CLEAR_SOLIB]: Call clear_solib.
(solib_add_stub) [!SOLIB_ADD] Call solib_add.
(core_open): Unconditionally call solib_add_stub.
* fork-child.c: Include "solib.h".
(fork_inferior) [!SOLIB_CREATE_INFERIOR_HOOK]: Call
solib_create_inferior_hook.
* infcmd.c: Include "solib.h".
(attach_command) [!SOLIB_ADD]: Call shlib_rescan.  Unconditionally
call re_enable_breakpoints_in_shlibs.
* infrun.c: Include "solib.h".
(SOLIB_IN_SYNSYM_RESOLVE_CODE): Don't define if not already
defined.
(stop_on_solib_events, show_stop_on_solib_events): Include
unconditionally.
(follow_exec) [!SOLIB_CREATE_INFERIOR_HOOK]: Call
solib_create_inferior_hook.
(handle_inferior_event) [!SOLIB_ADD]: Call shlib_add.
[!IN_SOLIB_DYNSYM_RESOLVE_CODE]: Call in_solib_dynsym_resolve_code.
(_initialize_infrun): Unconditionally add "stop_on_solib-events"
command.
* remote.c: Include "solib.h".
(remote_open_1): Unconditionally call no_shared_libraries.
[!SOLIB_CREATE_INFERIOR_HOOK] Call solib_create_inferior_hook.
* stack.c: Include "solib.h".
(print_frame) [!PC_SOLIB] Call shlib_for_pc.
* xcoffsolib.c (no_shared_libraries): Remove function.
* Makefile.in (SFILES): Add solib.c.
(ALLDEPFILES): Remove solib.c.
(COMMON_OBS): Add solib.o.
(breakpoint.o, corelow.o, fork-chiled.o, infcmd.o, infrun.o)
(remote.o, stack.o): Update dependencies.
@
text
@d1996 1
a1996 1
	$(gdb_string_h)
@


1.727
log
@	* cp-names.y: Renamed to ...
	* cp-name-parser.y: ... this.
	* Makefile.in (SFILES, YYFILES, YYOBJ): Rename cp-names.y to
	cp-name-parser.y.
	(test-cp-names.o): Renamed to test-cp-name-parser.o.
	(test-cp-names): Renamed to test-cp-name-parser.
	(clean, local-maintainer-clean): Update.
	(cp-names.o): Renamed to cp-name-parser.o.
@
text
@d548 2
a549 1
	serial.c ser-base.c ser-unix.c source.c \
d942 2
a943 1
	tramp-frame.o
d1443 1
a1443 1
	solib.c solib-irix.c solib-svr4.c solib-sunos.c \
d1779 2
a1780 2
	$(ui_out_h) $(cli_script_h) $(gdb_assert_h) $(block_h) $(solist_h) \
	$(observer_h) $(exceptions_h) $(gdb_events_h)
d1828 1
a1828 1
	$(exceptions_h)
d1945 1
a1945 1
	$(terminal_h) $(gdbthread_h) $(command_h)
d2115 1
a2115 1
	$(gdb_assert_h)
d2131 1
a2131 1
	$(value_h) $(observer_h) $(language_h) $(gdb_assert_h)
d2417 1
a2417 1
	$(serial_h) $(gdbcore_h) $(remote_fileio_h) $(observer_h)
d2632 1
a2632 1
	$(regcache_h)
@


1.726
log
@* bsd-uthread.c: Include "solib.h".
* Makefile.in (bsd-uthread.o): Update dependencies.
@
text
@d522 1
a522 1
	cp-names.y \
d949 1
a949 1
	cp-names.c \
d955 1
a955 1
	cp-names.o \
d1087 2
a1088 1
test-cp-names.o: cp-names.c $(safe_ctype_h) $(libiberty_h) $(demangle_h)
d1090 1
a1090 1
		-o test-cp-names.o cp-names.c
d1092 3
a1094 2
test-cp-names$(EXEEXT): test-cp-names.o $(LIBIBERTY)
	$(CC) -o test-cp-names$(EXEEXT) test-cp-names.o $(LIBIBERTY)
d1250 1
a1250 1
	rm -f test-cp-names$(EXEEXT)
d1279 1
a1279 1
		cp-names.c \
d1831 1
a1831 1
cp-names.o: cp-names.c $(safe_ctype_h) $(libiberty_h) $(demangle_h)
@


1.725
log
@* somsolib.c, somsolib.h: Remove files.
* Makefile.in (somsolib_h): Remove.
(somsolib.o): Remove dependency.
@
text
@d1781 3
a1783 3
	$(inferior_h) $(objfiles_h) $(observer_h) $(regcache_h) $(solist_h) \
	$(symfile_h) $(target_h) $(gdb_assert_h) $(gdb_obstack_h) \
	$(bsd_uthread_h)
@


1.724
log
@	* MAINTAINERS: Revert h8300 state to un-deleted.
	* Makefile.in: Re-add h8300-tdep.o dependencies.
	* h8300-tdep.c: Slightly rearrange type definitions and functions.
	(struct frame_extra_info): Remove.
	(struct h8300_frame_cache): Replace locals with differently defined
	uses_fp member.
	(h8300_unwind_pc): Simplify.
	(h8300_unwind_sp): New function.
	(h8300_unwind_dummy_id): Simplify.
	(h8300_init_frame_cache): New function.
	(h8300_is_argument_spill): Use reworked defines for opcode scanning.
	(h8300_skip_prologue): Rewrite.
	(h8300_alloc_frame_cache): Remove.
	(h8300_analyze_frame_setup): Remove.
	(h8300_analyze_register_saves): Remove.
	(h8300_analyze_prologue): Rewrite.
	(h8300_frame_cache): Use h8300_init_frame_cache instead of
	h8300_alloc_frame_cache.  Use BINWORD instead of constant 4 to
	accomodate 16 bit mode.  Fix saved_sp and register offset evaluation.
	(h8300_frame_this_id): Correctly calculate this_id using saved stack
	pointer instead of base.
	(h8300_frame_prev_register): Drop needless braces.
	(h8300_frame_base_address): New function.
	(h8300_frame_base): New frame_base.
	(h8300_push_dummy_call): Return correct CFA value.
	(h8300h_extract_return_value): Fix 8 byte value handling.
	(h8300_use_struct_convention): New function.
	(h8300h_use_struct_convention): New function.
	(h8300h_store_return_value): Fix 8 byte value handling.
	(h8300_return_value): New function.
	(h8300h_return_value): New function.
	(h8300_extract_struct_value_address): Remove deprecated functionality.
	(h8300_push_dummy_code): Remove.
	(h8300_gdbarch_init): Replace set_gdbarch_extract_return_value and
	set_gdbarch_store_return_value calls by set_gdbarch_return_value.
	Remove calls to set_gdbarch_deprecated_fp_regnum,
	set_gdbarch_deprecated_extract_struct_value_address,
	set_gdbarch_deprecated_use_struct_convention and
	set_gdbarch_push_dummy_code.
	Add calls to set_gdbarch_unwind_sp and frame_base_set_default.
	Slightly rearrange code.
@
text
@a775 1
somsolib_h = somsolib.h
a2554 4
somsolib.o: somsolib.c $(defs_h) $(frame_h) $(bfd_h) $(som_h) $(libhppa_h) \
	$(gdbcore_h) $(symtab_h) $(breakpoint_h) $(symfile_h) $(objfiles_h) \
	$(inferior_h) $(gdb_stabs_h) $(gdb_stat_h) $(gdbcmd_h) $(language_h) \
	$(regcache_h) $(gdb_assert_h) $(exec_h) $(hppa_tdep_h)
@


1.723
log
@* sh-tdep.c (sh_linux_svr4_fetch_link_map_offsets): Remove function.
(sh_gdbarch_init): Remove redundant prototype.
* sh-linux-tdep.c: New file.
* config/sh/tm-linux.h (sh_linux_svr4_fetch_link_map_offsets):
Remove prototype.
(SVR4_FETCH_LINK_MAP_OFFSETS): Remove define.
* config/sh/linux.mt (TDEPFILES): Add sh64-tdep.o, remove
solib-legacy.o.
* Makefile.in (sh-linux-tdep.o): New.
@
text
@d1994 3
@


1.722
log
@* solib-svr4.c: Update copyright year.  Include "gdb_assert.h".
(SVR4_FETCH_LINK_MAP_OFFSETS): Don't define if not already
defined.
(legacy_fetch_link_map_offsets): Remove prototype.
(fetch_link_map_offsets_gdbarch_data): Remove.
(LM_ADDR, LM_NEXT, IGNORE_FIRST_LINK_MAP_ENTRY)
(first_link_map_member, open_symbol_file_object, svr4_current_sos)
(svr4_fetch_objfile_link_map): Call svr4_fetch_link_map_offsets
instead of SVR4_FETCH_LINK_MAP_OFFSETS.
(solib_svr4_data): New variable.
(struct solib_svr4_ops): New.
(solib_svr4_init): New fynction.
(legacy_fetch_link_map_offsets, init_fetch_link_map_offsets):
Remove functions.
(svr4_fetch_link_map_offsets, svr4_have_link_map_offsets): Rewrite
using the new `struct solib_svr4_ops'.
(_initialize_svr4_solib): Replace registration of per-architecture
data.  Add temporary hack to set
svr4_legacy_fetch_link_map_offsets if SVR4_FETCH_LINK_MAP_OFFSETS
is set.
* Makefile.in (solib-svr4.o): Update dependencies.
@
text
@d2508 1
@


1.721
log
@	* event-loop.c (gdb_assert.h): Include.
	(<windows.h>): Include under Windows.
	(<io.h>): Likeiwse.
	(gdb_select): New function.
	(gdb_wait_for_event): Use it.
	* Makefile.in (event-loop.o): Depend on $(gdb_assert_h).
@
text
@d2543 2
a2544 2
	$(gdbcore_h) $(target_h) $(inferior_h) $(solist_h) $(solib_svr4_h) \
	$(bfd_target_h) $(exec_h)
@


1.720
log
@* sparc64-tdep.c: Include "dwarf2-frame.h".
(sparc64_dwarf2_frame_init_reg): New function.
* Makefile.in (sparc64-tdep.o): Update dependencies.
@
text
@d1913 1
a1913 1
	$(gdb_string_h) $(exceptions_h)
@


1.719
log
@* sparc-linux-tdep.c: Reorder includes.  Tweak a few comments.
(LINUX32_SIGTRAMP_INSN0, LINUX32_SIGTRAMP_INSN1)
(LINUX32_RT_SIGTRAMP_INSN0, LINUX32_RT_SIGTRAMP_INSN1): Remove
macros.
(sparc32_linux_sigframe, sparc32_linux_rt_sigframe): Hardcode
instructions.
* sparc64-linux-tdep.c: Reorder includes.  Tweak a few comments.
(LINUX64_RT_SIGTRAMP_INSN0, LINUX64_RT_SIGTRAMP_INSN1): Remove
macros.
(sparc64_linux_rt_sigframe): Hardcode instructions.
* Makefile.in (sparc-linux-tdep.o, sparc64-linux-tdep.o): Update
@
text
@d2586 5
a2590 5
sparc64-tdep.o: sparc64-tdep.c $(defs_h) $(arch_utils_h) $(floatformat_h) \
	$(frame_h) $(frame_base_h) $(frame_unwind_h) $(gdbcore_h) \
	$(gdbtypes_h) $(inferior_h) $(symtab_h) $(objfiles_h) $(osabi_h) \
	$(regcache_h) $(target_h) $(value_h) $(gdb_assert_h) $(gdb_string_h) \
	$(sparc64_tdep_h)
@


1.718
log
@	* sparc-linux-tdep.c (sparc32_linux_sigframe_init): New function.
	(sparc32_linux_sigframe, sparc32_linux_rt_sigframe): New tramp_frames.
	(sparc_linux_sigtramp_start, sparc32_linux_sigtramp_start,
	sparc32_linux_rt_sigtramp_start, sparc32_linux_sigtramp_p,
	sparc32_linux_sigtramp_frame_cache,
	sparc32_linux_sigtramp_frame_this_id,
	sparc32_linux_sigtramp_frame_prev_register,
	sparc32_linux_sigtramp_frame_unwind,
	sparc32_linux_sigtramp_frame_sniffer): Delete.
	(sparc32_linux_init_abi): Register new tramp unwinders.  Kill
	register of old sigtramp sniffer.
	* sparc64-linux-tdep.c (sparc64_linux_sigframe_init): New
	function.
	(sparc64_linux_rt_sigframe): New tramp frame.
	(sparc64_linux_sigtramp_start, sparc64_linux_sigtramp_p,
	sparc64_linux_sigtramp_frame_cache,
	sparc64_linux_sigtramp_frame_this_id,
	sparc64_linux_sigtramp_frame_prev_register,
	sparc64_linux_sigtramp_frame_unwind,
	sparc64_linux_sigtramp_frame_sniffer): Delete.
	(sparc64_linux_init_abi): Register new tramp unwinders.  Kill
	register of old sigtramp sniffer.
	Makefile.in (sparc64-linux-tdep.o): Update dependencies.
	(sparc-linux-tdep.o): Likewise.
@
text
@d2486 2
a2487 1
ser-base.o: ser-base.c $(defs_h) $(serial_h) $(ser_base_h) $(event_loop_h)
d2571 1
a2571 2
	$(symtab_h) $(trad_frame_h) \
	$(sparc64_tdep_h)
d2593 1
a2593 1
	$(solib_svr4_h) $(symtab_h) $(trad_frame_h) \
@


1.717
log
@	* sparc-linux-tdep.c (sparc32_linux_sigtramp_p): Fix
	signal return stub symbol names, __restore and __restore_rt are
	the i386 symbol names not the sparc ones.
	(sparc32_linux_sigtramp_frame_cache): Document bits/sigcontext.h
	as where the offsets were obtained from.
	* sparc64-linux-tdep.c (LINUX64_RT_SIGTRAMP_INSN0,
	LINUX64_RT_SIGTRAMP_INSN1): New defines.
	(sparc64_linux_sigtramp_start, sparc64_linux_sigtramp_p,
	sparc64_linux_sigtramp_frame_cache,
	sparc64_linux_sigtramp_frame_this_id,
	sparc64_linux_sigtramp_frame_prev_register,
	sparc64_linux_sigtramp_frame_sniffer): New functions.
	(sparc64_linux_sigtramp_frame_unwind): New frame unwinder.
	(sparc64_linux_init_abi): Register sigtramp frame sniffer.
	* Makefile.in (sparc64-linux-tdep.o): Update dependencies.
@
text
@d2570 1
a2570 1
	$(symtab_h) $(trad_frame_h) $(gdb_assert_h) $(gdb_string_h) \
d2593 2
a2594 2
	$(solib_svr4_h) $(symtab_h) $(trad_frame_h) $(gdb_assert_h) \
	$(gdb_string_h) $(sparc_tdep_h)
@


1.716
log
@* hppabsd-nat.c: Update copyright year.  Include "target.h" and
"inf-ptrace.h".
(hppabsd_fetch_registers): Renamed from fetch_inferior_registers;
made static.
(hppabsd_store_registers): Renamed from store_inferior_registers;
made static.
(_initialize_hppabsd_nat): New function and prototype.
* config/pa/obsd.mh (NATDEPFILES): Remove infptrace.o and
inftarg.o.  Add inf-ptrace.o.
(NAT_FILE): Remove.
* Makefile.in (hppabsd-nat.o): Update dependencies.
@
text
@d2568 4
a2571 2
sparc64-linux-tdep.o: sparc64-linux-tdep.c $(defs_h) $(gdbarch_h) $(osabi_h) \
	$(solib_svr4_h) $(sparc64_tdep_h)
@


1.715
log
@* pa64solib.c, pa64solib.h: Remove files.
* Makefile.in (pa64solib_h): Remove variable
(pa64solib.o): Remove dependency.
@
text
@d1997 1
a1997 1
	$(hppa_tdep_h)
@


1.714
log
@* ppcobsd-nat.c: Update copyright year.  Include "inf-ptrace.h".
(ppcobsd_fetch_registers): Renamed from fetch_inferior_registers;
made static.
(ppcobsd_store_registers): Renamed from store_inferior_registers;
made static.
(_initialize_ppcobsd_nat): Construct and add target vector.
* config/powerpc/obsd.mh (NATDEPFILES): Remove infptrace.o and
inftarg.o.  Add inf-ptrace.o.
(NAT_FILE): Remove.
* Makefile.in (ppcobsd-nat.o): Update dependencies.
@
text
@a748 1
pa64solib_h = pa64solib.h
a2336 4
pa64solib.o: pa64solib.c $(defs_h) $(frame_h) $(bfd_h) $(libhppa_h) \
	$(gdbcore_h) $(symtab_h) $(breakpoint_h) $(symfile_h) $(objfiles_h) \
	$(inferior_h) $(gdb_stabs_h) $(gdb_stat_h) $(gdbcmd_h) $(language_h) \
	$(regcache_h) $(exec_h) $(hppa_tdep_h)
@


1.713
log
@* ppcobsd-tdep.c: Include "floatformat.h".
(ppcobsd_init_abi): Set long_double_bit and long_double_format.
* Makefile.in (ppcobsd-tdep.o): Update dependencies.
@
text
@d2374 1
a2374 1
	$(ppc_tdep_h) $(ppcobsd_tdep_h)
@


1.712
log
@	* MAINTAINERS: Change sh64-elf state to non-broken.
	* Makefile.in: Fix dependencies for sh64-tdep.o.
	* configure.tgt: Add sh64-*-elf case.
	* sh-tdep.c (sh_gdbarch_init): Reactivate bfd_mach_sh5 case.
	* sh64-tdep.c: Rework to replace all deprecated mechanisms with
	modern methods.
	* config/sh/embed.mt (TDEPFILES): Add sh64-tdep.o.
	* config/sh/sh64.mt: Resurrect.
@
text
@d2375 4
a2378 4
ppcobsd-tdep.o: ppcobsd-tdep.c $(defs_h) $(arch_utils_h) $(osabi_h) \
	$(regcache_h) $(regset_h) $(trad_frame_h_ $(tramp_frame_h) \
	$(gdb_assert_h) $(gdb_string_h) $(ppc_tdep_h) $(ppcobsd_tdep_h) \
	$(solib_svr4_h)
@


1.711
log
@* ppcobsd-tdep.c: Update copyright year.  Include "trad-frame.h"
and "tramp-frame.h".
(ppcobsd_sigtramp_cache_init): New function.
(ppcobsd_sigtramp): New variable.
(ppcobsd_init_abi): Prepend signal trampoline unwinder.
* Makefile.in (ppcobsd-tdep.o): Update dependencies.
@
text
@d2501 5
a2505 5
sh64-tdep.o: sh64-tdep.c $(defs_h) $(frame_h) $(symtab_h) $(objfiles_h) \
	$(gdbtypes_h) $(gdbcmd_h) $(gdbcore_h) $(value_h) $(dis_asm_h) \
	$(inferior_h) $(gdb_string_h) $(arch_utils_h) $(floatformat_h) \
	$(regcache_h) $(doublest_h) $(osabi_h) $(elf_bfd_h) $(solib_svr4_h) \
	$(elf_sh_h) $(gdb_sim_sh_h)
@


1.710
log
@	* gdbarch.sh (fetch_tls_load_module_address): New architecture method.
	* gdbarch.c, gdbarch.h: Regenerate.
	* dwarf2loc.c (dwarf_expr_tls_address): Fetch TLS load module
	address and pass this address, instead of the objfile address, to
	target_get_thread_local_address().
	* linux-thread-db.c (thread_db_get_thread_local_address): Change
	second parameter from type ``struct objfile *'' to CORE_ADDR.  Do
	not call svr4_fetch_objfile_link_map() to fetch the load module
	address.
	* target.h (struct target_ops): Change second parameter of
	``to_get_thread_local_address'' from ``struct objfile *'' to
	``CORE_ADDR''.
	* alpha-linux-tdep.c (solib-svr4.h): Include.
	(alpha_linux_init_abi): Register TLS load module fetcher.
	* amd64-linux-tdep.c (amd64_linux_init_abi): Likewise.
	* hppa-linux-tdep.c (hppa_linux_init_abi): Likewise.
	* i386-linux-tdep.c (i386_linux_init_abi): Likewise.
	* ia64-linux-tdep.c (solib-svr4.h): Include.
	(ia64_linux_init_abi): Register TLS load module fetcher.
	* m32r-linux-tdep.c (m32r_linux_init_abi): Likewise.
	* m68klinux-tdep.c (m68k_linux_init_abi): Likewise.
	* mips-linux-tdep.c (mips_linux_init_abi): Likewise.
	* s390-tdep.c (s390_gdbarch_init): Likewise.
	* sparc-linux-tdep.c (sparc32_linux_init_abi): Likewise.
	* sparc64-linux-tdep.c (solib-svr4.h): Include.
	(sparc64_linux_init_abi): Register TLS load module fetcher.
	* Makefile.in (alpha-linux-tdep.o, ia64-linux-tdep.o)
	(sparc-linux-tdep.o): Update dependencies.
@
text
@d2376 3
a2378 2
	$(regcache_h) $(regset_h) $(gdb_assert_h) $(gdb_string_h) \
	$(ppc_tdep_h) $(ppcobsd_tdep_h) $(solib_svr4_h)
@


1.709
log
@Missed part of earlier commit.
@
text
@d1672 1
a1672 1
	$(osabi_h) $(alpha_tdep_h)
d2092 1
a2092 1
	$(arch_utils_h) $(gdbcore_h) $(regcache_h) $(osabi_h)
d2573 1
a2573 1
	$(sparc64_tdep_h)
@


1.708
log
@	* Makefile.in (SFILES): Add ser-base.c.
	(ser_base_h): New variable.
	(ser-base.o): New target.
	(ser-pipe.o): Depend on $(ser_base_h).
	(ser-tcp.o): Likewise.
	(ser-unix.o): Likewise.  Do not depend on $(event_loop_h).
	* configure.ac (SER_HARDWIRE): Include ser-base.o where
	appropriate.
	* ser-base.c: New file.
	(push_event): Move from ser-unix.c.
	(fd_event): Likewise.
	(reschedule): Likewise.
	(ser_unix_write): Likewise.
	(ser_unix_nop_flush_output): Likewise.
	(ser_unix_flush_input): Likewise.
	(ser_unix_nop_send_break): Likewise.
	(ser_unix_nop_drain_output): Likewise.
	(ser_unix_nop_raw): Likewise.
	(ser_unix_nop_get_tty_state): Likewise.
	(ser_unix_nop_set_tty_state): Likewise.
	(ser_unix_nop_noflush_set_tty_state): Likewise.
	(ser_unix_nop_print_tty_state): Likewise.
	(ser_unix_nop_setbaudrate): Likewise.
	(ser_unix_nop_setstopbits): Likewise.
	(ser_unix_async): Likewise.
	* ser-base.h: New file.
	* ser-pipe.c (ser-base.h): Include it.
	* ser-tcp.c (ser-base.h): Likewise.
	* ser-unix.h (ser_unix_nop_flush_output): Remove.
	(ser_unix_flush_input): Likewise.
	(ser_unix_nop_send_break): Likewise.
	(ser_unix_nop_raw): Likewise.
	(ser_unix_nop_get_tty_state): Likewise.
	(ser_unix_nop_set_tty_state): Likewise.
	(ser_unix_nop_print_tty_state): Likewise.
	(ser_unix_nop_noflush_set_tty_state): Likewise.
	(ser_unix_nop_setbaudrate): Likewise.
	(ser_unix_nop_setstopbits): Likewise.
	(ser_unix_nop_drain_output): Likewise.
	(ser_unix_wait_for): Likewise.
	(ser_unix_write): Likewise.
	(ser_unix_async): Likewise.
	* ser-unix.c (event-loop.h): Do not include it.
	(push_event): Move to ser-base.c.
	(fd_event): Likewise.
	(reschedule): Likewise.
	(ser_unix_write): Likewise.
	(ser_unix_nop_flush_output): Likewise.
	(ser_unix_flush_input): Likewise.
	(ser_unix_nop_send_break): Likewise.
	(ser_unix_nop_drain_output): Likewise.
	(ser_unix_nop_raw): Likewise.
	(ser_unix_nop_get_tty_state): Likewise.
	(ser_unix_nop_set_tty_state): Likewise.
	(ser_unix_nop_noflush_set_tty_state): Likewise.
	(ser_unix_nop_print_tty_state): Likewise.
	(ser_unix_nop_setbaudrate): Likewise.
	(ser_unix_nop_setstopbits): Likewise.
	(ser_unix_async): Likewise.
	(ser_unix_wait_for): Make it static.
	* configure: Regenerated.
@
text
@d1748 2
a1749 1
	$(gdb_assert_h) $(bfd_in2_h) $(libcoff_h)
@


1.707
log
@Move printing of TLS related error messages to dwarf2loc.c.
@
text
@d548 1
a548 1
	serial.c ser-unix.c source.c \
d767 1
d2489 4
a2492 1
ser-pipe.o: ser-pipe.c $(defs_h) $(serial_h) $(ser_unix_h) $(gdb_vfork_h) \
d2494 2
a2495 3
ser-tcp.o: ser-tcp.c $(defs_h) $(serial_h) $(ser_unix_h) $(gdb_string_h)
ser-unix.o: ser-unix.c $(defs_h) $(serial_h) $(ser_unix_h) $(terminal_h) \
	$(gdb_string_h) $(event_loop_h)
@


1.707.2.1
log
@	* gdb/Makefile.in (arm-tdep.o): Update dependencies.
	* gdb/arm-tdep.c: Include "objfiles.h" and "dwarf2-frame.h".
	(arm_gdbarch_init): Register dwarf2_frame_sniffer.
@
text
@d1747 1
a1747 2
	$(gdb_assert_h) $(bfd_in2_h) $(libcoff_h) $(objfiles_h) \
	$(dwarf2_frame_h)
@


1.707.2.2
log
@	* gdb/Makefile.in (arm-linux-nat.o): Update dependencies.
	* gdb/arm-linux-nat.c: Include "gdb_proc_service.h".
	(PTRACE_GET_THREAD_AREA): Define.
	(ps_get_thread_area): New function.

	* gdb/gdbserver/Makefile.in (linux-arm-low.o): Update dependencies.
	* gdb/gdbserver/linux-arm-low.c: Include "../gdb_proc_service.h".
	(PTRACE_GET_THREAD_AREA): Define.
	(ps_get_thread_area): New function.
@
text
@d1733 1
a1733 2
	$(gdb_string_h) $(regcache_h) $(arm_tdep_h) $(gregset_h)\
	$(gdb_proc_service_h)
@


1.707.2.3
log
@	Backport from mainline.
	2005-03-22  Mark Mitchell  <mark@@codesourcery.com>
	* Makefile.in (SFILES): Add ser-base.c.
	(ser_base_h): New variable.
	(ser-base.o): New target.
	(ser-pipe.o): Depend on $(ser_base_h).
	(ser-tcp.o): Likewise.
	(ser-unix.o): Likewise.  Do not depend on $(event_loop_h).
	* configure.ac (SER_HARDWIRE): Include ser-base.o where
	appropriate.
	* ser-base.c: New file.
	(push_event): Move from ser-unix.c.
	(fd_event): Likewise.
	(reschedule): Likewise.
	(ser_unix_write): Likewise.
	(ser_unix_nop_flush_output): Likewise.
	(ser_unix_flush_input): Likewise.
	(ser_unix_nop_send_break): Likewise.
	(ser_unix_nop_drain_output): Likewise.
	(ser_unix_nop_raw): Likewise.
	(ser_unix_nop_get_tty_state): Likewise.
	(ser_unix_nop_set_tty_state): Likewise.
	(ser_unix_nop_noflush_set_tty_state): Likewise.
	(ser_unix_nop_print_tty_state): Likewise.
	(ser_unix_nop_setbaudrate): Likewise.
	(ser_unix_nop_setstopbits): Likewise.
	(ser_unix_async): Likewise.
	* ser-base.h: New file.
	* ser-pipe.c (ser-base.h): Include it.
	* ser-tcp.c (ser-base.h): Likewise.
	* ser-unix.h (ser_unix_nop_flush_output): Remove.
	(ser_unix_flush_input): Likewise.
	(ser_unix_nop_send_break): Likewise.
	(ser_unix_nop_raw): Likewise.
	(ser_unix_nop_get_tty_state): Likewise.
	(ser_unix_nop_set_tty_state): Likewise.
	(ser_unix_nop_print_tty_state): Likewise.
	(ser_unix_nop_noflush_set_tty_state): Likewise.
	(ser_unix_nop_setbaudrate): Likewise.
	(ser_unix_nop_setstopbits): Likewise.
	(ser_unix_nop_drain_output): Likewise.
	(ser_unix_wait_for): Likewise.
	(ser_unix_write): Likewise.
	(ser_unix_async): Likewise.
	* ser-unix.c (event-loop.h): Do not include it.
	(push_event): Move to ser-base.c.
	(fd_event): Likewise.
	(reschedule): Likewise.
	(ser_unix_write): Likewise.
	(ser_unix_nop_flush_output): Likewise.
	(ser_unix_flush_input): Likewise.
	(ser_unix_nop_send_break): Likewise.
	(ser_unix_nop_drain_output): Likewise.
	(ser_unix_nop_raw): Likewise.
	(ser_unix_nop_get_tty_state): Likewise.
	(ser_unix_nop_set_tty_state): Likewise.
	(ser_unix_nop_noflush_set_tty_state): Likewise.
	(ser_unix_nop_print_tty_state): Likewise.
	(ser_unix_nop_setbaudrate): Likewise.
	(ser_unix_nop_setstopbits): Likewise.
	(ser_unix_async): Likewise.
	(ser_unix_wait_for): Make it static.
@
text
@d548 1
a548 1
	serial.c ser-base.c ser-unix.c source.c \
a766 1
ser_base_h = ser-base.h
d2490 1
a2490 4
ser-base.o: ser-base.c $(defs_h) $(serial_h) $(ser_base_h) $(event_loop_h)
ser-pipe.o: ser-pipe.c $(defs_h) $(serial_h) $(ser_base_h) $(ser_unix_h) \
	$(gdb_vfork_h) $(gdb_string_h)
ser-tcp.o: ser-tcp.c $(defs_h) $(serial_h) $(ser_base_h) $(ser_unix_h) \
d2492 3
a2494 2
ser-unix.o: ser-unix.c $(defs_h) $(serial_h) $(ser_base_h) $(ser_unix_h) \
	$(terminal_h) $(gdb_string_h)
@


1.707.2.4
log
@2005-03-28  Paul Brook  <paul@@codesourcery.com>
	Daniel Jacobowitz  <dan@@codesourcery.com>

	* gdb/Makefile.in: arm-tdep.o depends on $(observer_h).
	* gdb/arm-linux-nat.c (fetch_fpregister, fetch_fpregs,
	store_fpregister, store_fpregs): Rename...
	(fetch_fpa_register, fetch_fpa_regs, store_fpa_register,
	store_fpa_regs): ... to this.
	* gdb/arm-linux-tdep.c (arm_linux_init_abi): Provide ABI specific
	overrides.
	* gdb/arm-tdep.c: Include opserver.h.
	(struct gdbarch_tdep_info): Add.
	(arm_push_dummy_call): Handle doubleword alignment.
	(arm_register_type): Handle iWMMXt and VFP regs.
	(arm_register_byte): Ditto.
	(arm_pseudo_register_read): New function.
	(arm_pseudo_register_write): New function.
	(arm_dwarf_reg_to_regnum): New function.
	(arm_register_sim_regno): Handle iWMMXT regs.
	(arm_register_remote_regno): New function.
	(arm_extract_return_value): Use new macro names.
	(arm_register_name): Handle iWMMXt and VFP registers.
	(arm_sim_available_registers): New function.
	(arm_update_architecture): New function.
	(arm_gdbarch_init): Handle optional register sets.  Register new
	hooks.  Fix misleading error message.
	(_initialize_arm_tdep): Call observer_attach_inferior_created.
	* gdb/arm-tdep.h (ARM_NUM_FP_ARG_REGS, ARM_LAST_FP_ARG_REGNUM,
	FP_REGISTER_SIZE, NUM_FREGS): Rename ...
	(ARM_NUM_FPA_ARG_REGS, ARM_LAST_FPA_ARG_REGNUM, FPA_REGISTER_SIZE,
	NUM_FPA_REGS): ... to this.
	(NUM_IWMMXT_COP0REGS, NUM_IWMMXT_COP1REGS, NUM_IWMMXT_REGS,
	IWMMXT_COP0_REGSIZE, IWMMXT_COP1_REGSIZE, NUM_VFP_XREGS,
	VFP_XREG_SIZE, NUM_VFP_SREGS, VFP_SREG_SIZE, NUM_VFP_PSEUDOS): Define.
	(struct gdbarch_tdep): Add target_has_iwmmxt_regs,
	target_has_vfp_regs, first_iwmmxt_regnum, target_iwmmxt_regnum,
	first_vfp_regnum, first_vfp_pseudo and target_vfp_regnum.
	* gdb/gdbarch.c (struct gdbarch): Add remote_num_g_packet_regs,
	sim_available_registers and register_remote_regno.
	(startup_gdbarch, verify_gdbarch): Ditto.
	(gdbarch_dump): Dump new fields.
	(gdbarch_remote_num_g_packet_regs_p, gdbarch_remote_num_g_packet_regs,
	set_gdbarch_remote_num_g_packet_regs,
	gdbarch_sim_available_registers_p, gdbarch_sim_available_registers,
	set_gdbarch_sim_available_registers, gdbarch_register_remote_regno_p,
	gdbarch_register_remote_regno, set_gdbarch_register_remote_regno):
	New functions.
	* gdb/gdbarch.h: Add prototypes.
	* gdb/gdbarch.sh: Add new fields.
	(deprecated_current_gdbarch_select_hack): Call flush_cached_frames.
	* gdb/remote-sim.h (gdbsim_create_inferior): Call
	observer_notify_inferior_created.
	(gdbsim_xfer_partial): New function.
	(init_gdbsim_ops): Use it.
	* gdb/remote.c (struct remote_state): Add num_g_regs.
	(init_remote_state): Only consider hard regs.  Allow target to provide
	register mapping.
	(packet_reg_from_regnum): Don't check pseudo regs.
	(packet_reg_from_pnum): Ditto.
	(remote_protocol_qPart_availableRegisters): Add.
	(set_remote_protocol_qPart_availableRegisters_packet_cmd,
	show_remote_protocol_qPart_availableRegisters_packet_cmd): New
	functions.
	(fetch_register_using_p, store_register_using_P): Handle arbitrary
	register mappings.
	(fetch_registers_using_g): New function.
	(remote_fetch_registers): Use it.
	(store_registers_using_G): New function.
	(remote_store_registers): Use it.
	(remote_xfer_partial): Handle TARGET_OBJECT_AVAILABLE_REGISTERS.
	(show_remote_cmd): Display availableRegisters.
	(_initialize_remote): Register qPart_availableRegisters.
	* gdb/target.h (enum target_object): Add
	TARGET_OBJECT_AVAILABLE_REGISTERS.
	* gdb/gdbserver/configure.srv (arm*-*-linux*): set
	srv_linux_regsets=yes.
	* gdb/gdbserver/linux-arm-low.c (PTRACE_GETWMMXREGS,
	PTRACE_SETWMMXREGS): Define.
	(arm_fill_gregset, arm_store_gregset, arm_fill_wmmxregset,
	arm_store_wmmxregset, arm_available_registers): New functions.
	(target_regsets): Add.
	(the_low_target): Use arm_available_registers.
	* gdb/gdbserver/linux-low.c (linux_available_registers): New function.
	(linux_target_op): Use it.
	* gdb/gdbserver/linux-low.h (gdbserver/linux-low.h): Add
	available_registers.
	(use_regsets_p): Declare.
	* gdb/gdbserver/regcache.c (g_register_bytes): Add.
	(regcache_invalidate, registers_to_string, registers_from_string):
	Use it.
	(set_register_cache): Set g_register_bytes.
	(supply_register_as_string): New function.
	* gdb/gdbserver/regcache.h (supply_register_as_string): Add prototype.
	* gdb/gdbserver/server.c (handle_query): Handle
	qPart:availableRegisters.
	(handle_p_packet, handle_P_packet): New functions.
	(main): Handle 'p' and 'P' packets.
	* gdb/gdbserver/target.h (struct target_ops): Add available_registers.
	* gdb/regformats/reg-arm.dat: Add last_g_reg and iWMMXT regs.
	* gdb/regformats/regdat.sh: Handle last_g_reg.
	* gdb/regformats/regdef.h (set_register_cache): Update prototype.
@
text
@d1750 1
a1750 1
	$(observer_h) $(dwarf2_frame_h)
@


1.707.2.5
log
@	* gdb/Makefile.in (arm-linux-nat.o): Update dependencies.
	* gdb/arm-linux-nat.c: Include "gdb_assert.h".
	(PTRACE_GETWMMXREGS, PTRACE_SETWMMXREGS): Define.
	(arm_linux_has_wmmx_registers): New flag.
	(GET_THREAD_ID): Remove stray punctuation.
	(IWMMXT_REGS_SIZE): Define.
	(fetch_wmmx_regs, store_wmmx_regs): New functions.
	(fetch_inferior_registers, store_inferior_registers): Call them.
	(arm_linux_available_registers): New function.
	* gdb/inftarg.c (child_xfer_partial): Handle
	TARGET_OBJECT_AVAILABLE_REGISTERS.
	* gdb/config/arm/nm-linux.h (arm_linux_available_registers): Add
	prototype.
	(NATIVE_XFER_AVAILABLE_REGISTERS): Define.

	* gdb/gdbserver/linux-arm-low.c (arm_fill_wmmxregset)
	(arm_store_wmmxregset): Remove stray text.
	(arm_available_registers): Remove debugging output.  Use hex.
	* gdb/gdbserver/regcache.c (num_registers): Make global.
	* gdb/gdbserver/server.c (handle_p_packet, handle_P_packet): Check
	the value of regnum.
@
text
@d1735 1
a1735 1
	$(gdb_proc_service_h) $(gdb_assert_h)
@


1.706
log
@	* Makefile.in (CLIBS): Link libbfd after libopcodes, as it is a
	more primitive library.
@
text
@d1892 2
a1893 2
	$(regcache_h) $(objfiles_h) $(elf_dwarf2_h) $(dwarf2expr_h) \
	$(dwarf2loc_h) $(gdb_string_h)
d2172 3
a2174 3
	$(gdb_proc_service_h) $(gdb_thread_db_h) $(bfd_h) $(gdbthread_h) \
	$(inferior_h) $(symfile_h) $(objfiles_h) $(target_h) $(regcache_h) \
	$(solib_svr4_h)
@


1.705
log
@	* Makefile.in (SFILES): Add cp-names.y.
	(libiberty_h, safe_ctype_h): New.
	(YYFILES): Add cp-names.c.
	(YYOBJ): Add cp-names.o.
	(test-cp-names.o, test-cp-names$(EXEEXT), cp-names.o): New rules.
	(clean): Remove test-cp-names$(EXEEXT).
	(local-maintainer-clean): Remove cp-names.c.
	* cp-names.y: New file.
	* cp-support.c (find_last_component): Delete.
	(d_left, d_right): Define.
	(cp_canonicalize_string, mangled_name_to_comp): New functions.
	(cp_class_name_from_physname, method_name_from_physname): Rewrite
	to use mangled_name_to_comp.
	* cp-support.h (cp_canonicalize_string, cp_demangled_name_to_comp)
	(cp_comp_to_string): New prototypes.
	* config/djgpp/fnchange.lst: Add cp-names.c.
@
text
@d375 1
a375 1
CLIBS = $(SIM) $(BFD) $(READLINE) $(OPCODES) $(INTL) $(LIBIBERTY) \
@


1.704
log
@	* Makefile.in: Add dependencies for iq2000-tdep.o.
	* configure.tgt: Add iq2000-*-* target.
	* iq2000-tdep.c: New file.
	* config/iq2000/iq2000.mt: New file.
@
text
@d522 1
d583 1
d601 1
d950 1
d956 1
d1087 8
d1249 2
d1278 1
a1510 1

d1829 1
@


1.703
log
@        * doc/observer.texi (executable_changed): New observer.
        * symtab.c: Include "observer.h".
        (find_main_name): New function.
        (main_name): If name_of_main is unset, then compute it
        using find_main_name.
        (symtab_observer_executable_changed): New function.
        (_initialize_symtab): Attach executable_changed observer.
        * exec.c: Include "observer.h".
        (exec_file_attach): Emit executable_changed notification.
        * symfile.c: Include "observer.h".
        (reread_symbols): Send an executable_changed if appropriate.
        * Makefile.in (exec.o): Add dependency on observer.h.
        (symfile.o): Likewise.
        (symtab.o): Likewise.
@
text
@d2118 4
@


1.702
log
@* sparc64fbsd-tdep.c: Include "solib-svr4.h".
(sparc64fbsd_init_abi): Set skip_trampoline_code and
solib_svr4_fetch_link_map_offsets.
* Makefile.in (sparc64fbsd-tdep.o): Update dependencies.
@
text
@d1906 1
a1906 1
	$(xcoffsolib_h)
d2617 1
a2617 1
	$(gdb_string_h) $(gdb_stat_h)
d2632 1
a2632 1
	$(gdb_stat_h) $(cp_abi_h)
@


1.701
log
@* alphabsd-nat.c: Update copyright year.  Include "inf-ptrace.h".
(alphabsd_fetch_inferior_registers): Rename from
fetch_inferior_registers.  Make static.
(alphabsd_store_inferior_registers): Rename from
store_inferior_registers.  Make static.
(_initialize_alphabsd_nat): New function.
* Makefile.in (alphabsd-nat.o): Update dependencies.
* config/alpha/fbsd.mh (NATDEPFILES): Remove infptrace.o and
inftarg.o.  Add inf-ptrace.o, fbsd-nat.o and gcore.o.
* config/alpha/nbsd.mh (NAT_CLIBS): Remove variable.
(NATDEPFILES): Remove infptrace.o and inftarg.o.  Add
alphabsd-nat.o.
* config/alpha/nm-fbsd.h: Update copyright year.  Don't include
"config/nm-bsd.h" and "elf/common.h".
* config/alpha/nm-nbsd.h: Update copyright year.  Don't include
"config/nm-nbsd.h".
@
text
@d2545 1
a2545 1
	$(sparc64_tdep_h)
@


1.700
log
@	* Makefile.in (remote.o): Update dependencies.
	* remote.c: Include "observer.h".
@
text
@d1650 1
a1650 1
	$(alpha_tdep_h) $(alphabsd_tdep_h) $(gregset_h)
@


1.699
log
@* wrapper.h: Update copyright year.  Properly wrap a few
prototypes.
(struct gdb_wrapper_arguments): Remove forward declaration.
* wrapper.c: Update copyright year.  Include "ui-out.h".
(struct gdb_wrapper_arguments): Remove.
(struct captured_value_struct_elt_args): Remove.
(wrapper_parse_exp_1, wrap_evaluate_expression)
(wrap_value_fetch_lazy, wrap_value_equal, wrap_value_assign)
(wrap_value_subscript, wrap_value_ind, wrap_parse_and_eval_type)
(do_captured_value_struct_elf): Remove functions.
(gdb_parse_exp_1, gdb_evaluate_expression, gdb_value_fetch_lazy)
(gdb_value_equal, gdb_value_assign, gdb_value_subscript)
(gdb_value_ind, gdb_parse_and_eval_type, gdb_value_struct_elt):
Re-implement using TRY_CATCH.
@
text
@d2393 1
a2393 1
	$(serial_h) $(gdbcore_h) $(remote_fileio_h)
@


1.698
log
@	From Ramana Radhakrishnan <ramana.radhakrishnan@@codito.com>:
	PR exp/1821
	* cp-valprint.c: Include "language.h".
	(cp_print_value_fields): Pass the current language to
	fprintf_symbol_filtered.
	* Makefile.in (cp-valprint.o): Update dependencies.

testsuite/
	From Ramana Radhakrishnan <ramana.radhakrishnan@@codito.com>:
	PR exp/1821
	* gdb.base/gdb1821.c: New test file.
	* gdb.base/gdb1821.exp: New test file.
@
text
@d2712 2
a2713 1
wrapper.o: wrapper.c $(defs_h) $(value_h) $(exceptions_h) $(wrapper_h)
@


1.697
log
@2005-02-08  Andrew Cagney  <cagney@@gnu.org>

	* value.h (METHOD_PTR_IS_VIRTUAL, METHOD_PTR_FROM_VOFFSET)
	(METHOD_PTR_TO_VOFFSET): Move from here ...
	* cp-support.h (METHOD_PTR_IS_VIRTUAL, METHOD_PTR_FROM_VOFFSET)
	(METHOD_PTR_TO_VOFFSET): ... to here.
	* cp-valprint.c, p-valprint.c, eval.c: Include "cp-support.h".
	* Makefile.in: Update dependencies.
@
text
@d1826 1
a1826 1
	$(cp_abi_h) $(valprint_h) $(cp_support_h)
@


1.696
log
@2005-01-28  Andrew Cagney  <cagney@@gnu.org>

	* m2-valprint.c: Include "c-lang.h".
	(c_val_print): Delete extern declaration.
	* scm-valprint.c: Include "c-lang.h".
	(c_val_print): Delete extern declaration.
	Makefile.in: Update dependencies.
@
text
@d1826 1
a1826 1
	$(cp_abi_h) $(valprint_h)
d1894 1
a1894 1
	$(parser_defs_h)
d2381 2
a2382 1
	$(language_h) $(target_h) $(annotate_h) $(p_lang_h) $(cp_abi_h)
@


1.695
log
@2005-01-28  Andrew Cagney  <cagney@@gnu.org>

	* gnu-v2-abi.h: New file.
	* gnu-v2-abi.c: Include "gnu-v2-abi.h".
	(gnuv2_baseclass_offset): Delete declaration.
	* hpacc-abi.c: Include "gnu-v2-abi.h".
	(gnuv2_baseclass_offset): Delete extern declaration.
	* Makefile.in: Update dependencies.
@
text
@d2166 1
a2166 1
	$(m2_lang_h)
d2461 1
a2461 1
	$(scm_lang_h) $(valprint_h) $(gdbcore_h)
@


1.694
log
@* i386obsd-tdep.c: Update copyright year.  Include
"bsd-uthread.h".
(i386obsd_uthread_reg_offset): New variable.
(I386OBSD_UTHREAD_ESP_OFFSET): New define.
(i386obsd_supply_uthread, i386obsd_collect_uthread): New
functions.
(i386obsd_init_abi): Set supply_uthread and collect_uthread.
* Makefile.in (i386obsd-tdep.o): Update dependencies.
* config/i386/obsd.mt (TDEPFILES): Add bsd-uthread.o.
@
text
@d703 1
d1969 2
a1970 1
	$(gdbtypes_h) $(value_h) $(demangle_h) $(cp_abi_h) $(cp_support_h)
d1978 1
a1978 1
	$(gdbtypes_h) $(gdbcore_h) $(cp_abi_h)
d2342 2
a2343 1
	$(solib_svr4_h) $(ppc_tdep_h) $(trad_frame_h) $(frame_unwind_h)
d2444 1
a2444 1
	$(frame_unwind_h) $(frame_base_h)
@


1.693
log
@2005-01-19  Andrew Cagney  <cagney@@gnu.org>

	* utils.c (quit): Simplify, call fatal.
	* exceptions.c: Include "serial.h"
	(print_flush): Mimic flush code found in utils.c:quit.
	* Makefile.in: Update dependencies.
@
text
@d2047 1
a2047 1
	$(i386_tdep_h) $(i387_tdep_h) $(solib_svr4_h)
@


1.692
log
@* amd64fbsd-tdep.c: Update copyright year.  Include "gdb_assert.h"
and "bsd-uthread.h".
(amd64fbsd_jmp_buf_reg_offset): New variable.
(amd64fbsd_supply_uthread, amd64fbsd_collect_uthread): New
functions.
(amd64fbsd_init_abi): Set supply_uthread and collect_uthread.
* i386fbsd-tdep.c: Fix typo.
* Makefile.in (amd64fbsd-tdep.o): Update dependencies.
* config/i386/fbsd64.mt (TDEPFILES): Add bsd-uthread.o.
@
text
@d1901 1
a1901 1
	$(gdb_string_h)
@


1.691
log
@2005-01-16  Andrew Cagney  <cagney@@gnu.org>

	* cli/cli-script.c: Include "exceptions.h".
	(struct wrapped_read_command_file_args): Define.
	(wrapped_read_command_file): New function.
	(script_from_file): Replace direct call to read_command_file by
	one wrapped by an exception handler.
	* exceptions.c (throw_it): Free the old message after creating the
	new.
	* Makefile.in: Update dependencies.

Index: testsuite/ChangeLog
2005-01-16  Andrew Cagney  <cagney@@gnu.org>

	* gdb.base/source.exp: Delete KFAIL gdb/1846, simplify.
@
text
@d1679 2
a1680 2
	$(gdbcore_h) $(regcache_h) $(osabi_h) $(gdb_string_h) \
	$(amd64_tdep_h) $(solib_svr4_h)
@


1.690
log
@* sparc64fbsd-nat.c: Include "fbsd-nat.h".
(_initialize_sparc64fbsd_nat): Add some extra features to the
generic SPARC target.
* Makefile.in (sparc64fbsd-nat.o): Update dependencies.
* config/sparc/fbsd.mh (NATDEPFILES): Add fbsd-nat.o and gcore.o.
(NAT_FILE): Set to solib.h.
* config/sparc/nm-fbsd.h: Remove file.
@
text
@d2069 2
a2070 1
	$(target_h) $(gdbcore_h) $(regcache_h) $(gdb_wait_h) $(gregset_h)
d2144 1
a2144 1
	$(objc_lang_h) $(linespec_h)
d2536 2
a2537 2
sparc64fbsd-nat.o: sparc64fbsd-nat.c $(defs_h) $(target_h) \
	$(fbsd_nat_h) $(sparc64_tdep_h) $(sparc_nat_h)
d2752 2
a2753 2
	$(ui_out_h) $(gdb_string_h) $(top_h) $(cli_cmds_h) $(cli_decode_h) \
	$(cli_script_h)
@


1.689
log
@* Makefile.in (sparc64fbsd-nat.o): Update dependencies.
* sparc64fbsd-nat.c: Update copyright year.  Include "target.h".
@
text
@d2536 1
a2536 1
	$(sparc64_tdep_h) $(sparc_nat_h)
@


1.688
log
@2005-01-12  Andrew Cagney  <cagney@@gnu.org>

	* exceptions.c (exception_none): New variable.
	* Makefile.in: Update dependencies.
	* interps.c: Include "exceptions.h".
	(interpreter_exec_cmd, interp_exec): Update to return "struct
	exception"
	* exceptions.h (no_exception): Declare.
	* tui/tui-interp.c (tui_exec): Update to return "struct exception"
	* mi/mi-interp.c: Include "exceptions.h".
	(mi_cmd_interpreter_exec, mi_interpreter_exec): Update to return
	'struct exception".
	* cli/cli-interp.c (cli_interpreter_exec, safe_execute_command)
	(do_captured_execute_command): Update to use catch_exception.
	* interps.h: Include "exceptions.h".
	(interp_exec_ftype, interp_exec): Return "struct exception".
@
text
@d2535 2
a2536 2
sparc64fbsd-nat.o: sparc64fbsd-nat.c $(defs_h) $(sparc64_tdep_h) \
	$(sparc_nat_h)
@


1.687
log
@* i386fbsd-tdep.c: Update copyright year.  Include "gdbcore.h",
"regcache.h", "gdb_assert.h" and "bsd-uthread.h".
(i386fbsd_jmp_buf_reg_offset): New variable.
(i386fbsd_supply_uthread, i386fbsd_collect_uthread): New
functions.
(i386fbsdaout_init_abi): Set supply_uthread and collect_uthread.
* Makefile.in (i386fbsd-tdep.o): Update dependency.
* config/i386/fbsd.mt (TDEPFILES): Add bsd-uthread.o.
@
text
@d717 1
a717 1
interps_h = interps.h
a1760 4
bsd-uthread.o: bsd-uthread.c $(defs_h) $(gdb_core_h) $(gdbthread_h) \
	$(inferior_h) $(objfiles_h) $(observer_h) $(regcache_h)	\
	$(solist_h) $(symfile_h) $(target_h) $(gdb_assert_h) \
	$(gdb_obstack_h) $(bsd_uthread_h)
d1764 4
d1899 3
a1901 1
exceptions.o: exceptions.c
d2114 1
a2114 1
	$(gdb_events_h) $(gdb_assert_h) $(top_h)
d2950 2
a2951 1
	$(mi_main_h) $(mi_cmds_h) $(mi_out_h) $(mi_console_h)
@


1.686
log
@2005-01-12  Andrew Cagney  <cagney@@gnu.org>

	* exceptions.h (enum return_reason, RETURN_MASK)
	(RETURN_MASK_QUIT, RETURN_MASK_ERROR, RETURN_MASK_ALL)
	(return_mask, throw_exception, catch_exceptions_ftype)
	(catch_exceptions_with_msg, catch_errors_ftype, catch_errors)
	(catch_command_errors_ftype, catch_command_errors): Move to
	exceptions.h.
	* exceptions.c, exceptions.h: New files.
	* top.c: Do not include <setjmp.h>.
	(SIGJMP_BUF, SIGSETJMP, SIGLONGJMP, catch_return)
	(throw_exception, catcher, catch_exceptions)
	(catch_exceptions_with_msg, struct catch_errors_args)
	(do_catch_errors, catch_errors, struct captured_command_args)
	(do_captured_command, catch_command_errors): Move to exceptions.c.
	* wrapper.c, wince.c, win32-nat.c, utils.c: Include "exceptions.h".
	* tui/tui-interp.c, top.c, thread.c, symmisc.c: Ditto.
	* symfile-mem.c, stack.c, solib.c, rs6000-nat.c: Ditto.
	* remote-sds.c, remote-mips.c, remote-fileio.c: Ditto.
	* remote-e7000.c, objc-lang.c, ocd.c: Ditto.
	* remote.c, nto-procfs.c, monitor.c, mi/mi-main.c: Ditto.
	* main.c, m32r-rom.c, infrun.c, inf-loop.c: Ditto.
	* hppa-hpux-tdep.c, frame.c, event-top.c, event-loop.c: Ditto.
	* corelow.c, corefile.c, cli/cli-interp.c, breakpoint.c: Ditto.
	* ada-valprint.c, ada-lang.c: Ditto.
	* Makefile.in (HFILES_NO_SRCDIR, COMMON_OBS): Add exceptions.h and
	exceptions.o.  Update all dependencies.
@
text
@d644 1
d1371 1
a1371 1
	bsd-kvm.c \
d1761 4
d2016 3
a2018 2
i386fbsd-tdep.o: i386fbsd-tdep.c $(defs_h) $(arch_utils_h) $(osabi_h) \
	$(i386_tdep_h) $(i387_tdep_h) $(solib_svr4_h)
@


1.685
log
@* vax-nat.c: Update copyright year.  Include "inf-ptrace.h".
(vax_register_u_offset): Make statuc.
(_initialize_vax_nat): Construct and add target vector.
* config/vax/vax.mh (NATDEPFILES): Remove infptrace.o and
inftarg.o.  Add inf-ptrace.o.
* Makefile.in (vax-nat.o): Update dependencies.
@
text
@d670 1
d736 1
d739 1
a739 2
ns32k_tdep_h = ns32k-tdep.h
nto_tdep_h = nto-tdep.h $(defs_h) $(solist_h)
d744 1
a744 1
solib_pa64_h = solib-pa64.h
d767 2
d771 1
a771 1
solib_som_h = solib-som.h
d850 1
d902 1
d1635 1
a1635 1
	$(dictionary_h)
d1642 2
a1643 1
	$(language_h) $(annotate_h) $(ada_lang_h) $(c_lang_h) $(infcall_h)
d1759 1
a1759 1
	$(observer_h) $(gdb_events_h)
d1798 1
a1798 1
	$(dis_asm_h) $(gdb_stat_h) $(completer_h)
d1802 2
a1803 1
	$(exec_h) $(readline_h) $(observer_h) $(gdb_assert_h)
d1890 1
a1890 1
	$(gdb_string_h)
d1893 2
a1894 1
	$(gdbcmd_h) $(readline_h) $(readline_history_h)
d1924 1
a1924 1
	$(command_h) $(gdbcmd_h) $(observer_h) $(objfiles_h)
a1967 3
h8300-tdep.o: h8300-tdep.c $(defs_h) $(value_h) $(inferior_h) $(symfile_h) \
	$(arch_utils_h) $(regcache_h) $(gdbcore_h) $(objfiles_h) $(gdbcmd_h) \
	$(gdb_assert_h) $(dis_asm_h)
d1979 4
a1982 4
	$(osabi_h) $(gdb_string_h) $(frame_h) $(frame_unwind_h) \
	$(trad_frame_h) $(tramp_frame_h) $(symtab_h) $(objfiles_h) \
	$(inferior_h) $(infcall_h) $(observer_h) $(hppa_tdep_h) $(solib_som_h) \
	$(solib_pa64_h) $(regset_h)
d1997 1
a1997 1
	$(solib_som_h) $(gdb_assert_h) $(hppa_tdep_h)
d1999 2
a2000 1
	$(inferior_h) $(regcache_h) $(gdb_stat_h) $(gdbcore_h)
d2032 3
a2034 3
i386-nto-tdep.o: i386-nto-tdep.c $(gdb_string_h) $(gdb_assert_h) $(defs_h) \
	$(frame_h) $(target_h) $(regcache_h) $(solib_svr4_h) $(i386_tdep_h) \
	$(nto_tdep_h) $(osabi_h) $(i387_tdep_h)
d2068 2
a2069 2
	$(elf_bfd_h) $(dis_asm_h) $(infcall_h) $(ia64_tdep_h) $(elf_ia64_h) \
	$(libunwind_frame_h) $(libunwind_ia64_h) $(osabi_h)
d2083 1
a2083 1
	$(event_top_h) $(inf_loop_h) $(remote_h)
a2089 3
inf-ttrace.o: inf-ttrace.c $(defs_h) $(command_h) $(gdbcore_h) \
	$(gdbthread_h) $(inferior_h) $(observer_h) $(target_h) \
	$(gdb_assert_h) $(gdb_string_h) $(inf_child_h) $(inf_ttrace_h)
d2094 4
a2097 4
	$(inferior_h) $(breakpoint_h) $(gdb_wait_h) $(gdbcore_h) $(gdbcmd_h) \
	$(cli_script_h) $(target_h) $(gdbthread_h) $(annotate_h) \
	$(symfile_h) $(top_h) $(inf_loop_h) $(regcache_h) $(value_h) \
	$(observer_h) $(language_h) $(gdb_assert_h)
d2101 3
d2140 4
d2161 6
a2166 5
	$(gdb_string_h) $(glibc_tdep_h) $(solib_svr4_h) $(trad_frame_h) \
	$(frame_unwind_h) $(regset_h) $(m32r_tdep_h)
m32r-rom.o: m32r-rom.c $(defs_h) $(gdbcore_h) $(target_h) $(monitor_h) \
	$(serial_h) $(symtab_h) $(command_h) $(gdbcmd_h) $(symfile_h) \
	$(gdb_string_h) $(objfiles_h) $(inferior_h) $(regcache_h)
d2192 2
a2193 2
	$(m68k_tdep_h) $(trad_frame_h) $(frame_unwind_h) $(solib_svr4_h) \
	$(glibc_tdep_h)
d2216 2
a2217 2
	$(gdbcore_h) $(getopt_h) $(gdb_stat_h) $(gdb_string_h) \
	$(event_loop_h) $(ui_out_h) $(interps_h) $(main_h)
a2220 5
mcore-rom.o: mcore-rom.c $(defs_h) $(gdbcore_h) $(target_h) $(monitor_h) \
	$(gdb_string_h) $(regcache_h) $(serial_h)
mcore-tdep.o: mcore-tdep.c $(defs_h) $(frame_h) $(symtab_h) $(value_h) \
	$(gdbcmd_h) $(regcache_h) $(objfiles_h) $(gdbcore_h) $(inferior_h) \
	$(arch_utils_h) $(gdb_string_h) $(disasm_h) $(dis_asm_h)
d2271 4
a2274 4
	$(symtab_h) $(dwarf2_frame_h) $(regcache_h)
monitor.o: monitor.c $(defs_h) $(gdbcore_h) $(target_h) $(gdb_string_h) \
	$(command_h) $(serial_h) $(monitor_h) $(gdbcmd_h) $(inferior_h) \
	$(gdb_regex_h) $(srec_h) $(regcache_h)
d2278 3
a2280 10
ns32knbsd-nat.o: ns32knbsd-nat.c $(defs_h) $(inferior_h) $(target_h) \
	$(gdbcore_h) $(regcache_h)
ns32knbsd-tdep.o: ns32knbsd-tdep.c $(defs_h) $(osabi_h) $(ns32k_tdep_h) \
	$(gdb_string_h)
ns32k-tdep.o: ns32k-tdep.c $(defs_h) $(frame_h) $(gdbtypes_h) $(gdbcore_h) \
	$(inferior_h) $(regcache_h) $(target_h) $(arch_utils_h) $(osabi_h) \
	$(dis_asm_h) $(ns32k_tdep_h) $(gdb_string_h)
nto-procfs.o: nto-procfs.c $(defs_h) $(gdb_dirent_h) $(gdb_string_h) \
	$(gdbcore_h) $(inferior_h) $(target_h) $(objfiles_h) $(gdbthread_h) \
	$(nto_tdep_h) $(command_h) $(regcache_h)
d2290 4
a2293 4
	$(complaints_h) $(value_h) $(symfile_h) $(objfiles_h) \
	$(gdb_string_h) $(target_h) $(gdbcore_h) $(gdbcmd_h) $(frame_h) \
	$(gdb_regex_h) $(regcache_h) $(block_h) $(infcall_h) $(valprint_h) \
	$(gdb_assert_h)
d2301 2
a2302 2
	$(bfd_h) $(symfile_h) $(target_h) $(gdbcmd_h) $(objfiles_h) \
	$(gdb_stabs_h) $(serial_h) $(ocd_h) $(regcache_h)
d2305 4
a2308 3
solib-pa64.o: solib-pa64.c $(defs_h) $(symtab_h) $(bfd_h) $(symfile_h) \
	$(objfiles_h) $(gdbcore_h) $(target_h) $(inferior_h) $(hppa_tdep_h) \
	$(solist_h) $(solib_pa64_h)
d2377 4
a2380 4
	$(symfile_h) $(target_h) $(gdbcmd_h) $(objfiles_h) $(gdb_stabs_h) \
	$(gdbthread_h) $(remote_h) $(regcache_h) $(value_h) $(gdb_assert_h) \
	$(event_loop_h) $(event_top_h) $(inf_loop_h) $(serial_h) \
	$(gdbcore_h) $(remote_fileio_h)
d2383 2
a2384 1
	$(gdbcmd_h) $(serial_h) $(remote_utils_h) $(symfile_h) $(regcache_h)
d2389 1
a2389 1
	$(remote_fileio_h)
d2395 3
a2397 2
	$(gdbcmd_h) $(gdbcore_h) $(serial_h) $(target_h) $(remote_utils_h) \
	$(gdb_string_h) $(gdb_stat_h) $(regcache_h) $(mips_tdep_h)
d2407 2
a2408 2
	$(inferior_h) $(bfd_h) $(symfile_h) $(target_h) $(gdbcmd_h) \
	$(objfiles_h) $(gdb_stabs_h) $(gdbthread_h) $(gdbcore_h) \
d2423 2
a2424 2
	$(gdb_stabs_h) $(regcache_h) $(arch_utils_h) $(ppc_tdep_h) $(exec_h) \
	$(gdb_stat_h)
d2485 4
a2488 4
	$(objfiles_h) $(gdbcore_h) $(command_h) $(target_h) $(frame_h) \
	$(gdb_regex_h) $(inferior_h) $(environ_h) $(language_h) $(gdbcmd_h) \
	$(completer_h) $(filenames_h) $(exec_h) $(solist_h) $(observer_h) \
	$(readline_h)
d2495 1
d2498 6
d2518 4
a2521 3
solib-som.o: solib-som.c $(defs_h) $(som_h) $(symtab_h) $(bfd_h) $(symfile_h) \
	$(objfiles_h) $(gdbcore_h) $(target_h) $(inferior_h) $(hppa_tdep_h) \
	$(solist_h)
d2593 2
a2594 1
	$(gdb_assert_h) $(dictionary_h) $(reggroups_h) $(regcache_h)
d2606 2
a2607 2
	$(objfiles_h) $(gdbcmd_h) $(target_h) $(value_h) $(symfile_h) \
	$(observer_h) $(auxv_h) $(elf_common_h)
d2610 3
a2612 2
	$(gdb_obstack_h) $(language_h) $(bcache_h) $(block_h) $(gdb_regex_h) \
	$(dictionary_h) $(gdb_string_h) $(readline_h)
d2624 3
a2626 6
	$(environ_h) $(value_h) $(target_h) $(gdbthread_h) $(command_h) \
	$(gdbcmd_h) $(regcache_h) $(gdb_h) $(gdb_string_h) $(ui_out_h)
linux-thread-db.o: linux-thread-db.c $(defs_h) $(gdb_assert_h) \
	$(gdb_proc_service_h) $(gdb_thread_db_h) $(bfd_h) $(gdbthread_h) \
	$(inferior_h) $(symfile_h) $(objfiles_h) $(target_h) $(regcache_h) \
	$(solib_svr4_h)
d2629 6
a2634 5
	$(inferior_h) $(target_h) $(breakpoint_h) $(gdbtypes_h) \
	$(expression_h) $(value_h) $(language_h) $(terminal_h) $(annotate_h) \
	$(completer_h) $(top_h) $(version_h) $(serial_h) $(doublest_h) \
	$(gdb_assert_h) $(readline_h) $(readline_history_h) $(event_top_h) \
	$(gdb_string_h) $(gdb_stat_h) $(ui_out_h) $(cli_out_h)
d2656 4
a2659 4
	$(tui_h) $(gdbcmd_h) $(serial_h) $(bfd_h) $(target_h) $(demangle_h) \
	$(expression_h) $(language_h) $(charset_h) $(annotate_h) \
	$(filenames_h) $(symfile_h) $(inferior_h) $(gdb_curses_h) \
	$(readline_h)
a2661 6
v850ice.o: v850ice.c $(defs_h) $(gdb_string_h) $(frame_h) $(symtab_h) \
	$(inferior_h) $(breakpoint_h) $(symfile_h) $(target_h) $(objfiles_h) \
	$(gdbcore_h) $(value_h) $(command_h) $(regcache_h)
v850-tdep.o: v850-tdep.c $(defs_h) $(frame_h) $(inferior_h) $(target_h) \
	$(value_h) $(bfd_h) $(gdb_string_h) $(gdbcore_h) $(objfiles_h) \
	$(arch_utils_h) $(regcache_h) $(symtab_h) $(dis_asm_h)
d2690 8
a2697 7
	$(gdbcore_h) $(command_h) $(completer_h) $(regcache_h) $(top_h) \
	$(buildsym_h) $(symfile_h) $(objfiles_h) $(gdb_string_h) \
	$(gdbthread_h) $(gdbcmd_h) $(exec_h) $(i386_tdep_h) $(i387_tdep_h)
wince.o: wince.c $(defs_h) $(frame_h) $(inferior_h) $(target_h) $(gdbcore_h) \
	$(command_h) $(buildsym_h) $(symfile_h) $(objfiles_h) \
	$(gdb_string_h) $(gdbthread_h) $(gdbcmd_h) $(wince_stub_h) \
	$(regcache_h) $(mips_tdep_h)
d2699 1
a2699 1
wrapper.o: wrapper.c $(defs_h) $(value_h) $(wrapper_h)
d2736 2
a2737 1
	$(event_top_h) $(ui_out_h) $(cli_out_h) $(top_h) $(gdb_string_h)
d2945 4
a2948 4
	$(gdb_string_h) $(top_h) $(gdbthread_h) $(mi_cmds_h) $(mi_parse_h) \
	$(mi_getopt_h) $(mi_console_h) $(ui_out_h) $(mi_out_h) $(interps_h) \
	$(event_loop_h) $(event_top_h) $(gdbcore_h) $(value_h) $(regcache_h) \
	$(gdb_h) $(frame_h) $(mi_main_h)
@


1.684
log
@* inf-ptrace.h: Update copyright year.  Sync comment with
inf-ptrace.c.
(inf_ptrace_trad_target): New prototype.
* inf-ptrace.c: Update copyright year.  Include "regcache.h" and
"gdb_assert.h"
(inf_ptrace_target): Add comment.
(inf_ptrace+register_u_offset): New variable.
(inf_ptrace_fetch_register, inf_ptrace_fetch_registers)
(inf_ptrace_store_register, inf_ptrace_store_registers)
(inf_ptrace_trad_target): New functions.
* Makefile.in (inf-ptrace.o): Update dependencies.
@
text
@d2677 2
a2678 1
vax-nat.o: vax-nat.c $(defs_h) $(inferior_h) $(gdb_assert_h) $(vax_tdep_h)
@


1.683
log
@	* ia64-tdep.c: Include "osabi.h".
	(native_find_global_pointer): Delete.
	(ia64_find_global_pointer): Renamed from
	generic_elf_find_global_pointer.
	(FIND_GLOBAL_POINTER): Delete.  Change all users to call
	ia64_find_global_pointer instead.
	(ia64_gdbarch_init): Call gdbarch_init_osabi.  Remove references
	to ia64_linux_sigcontext_register_address and
	ia64_linux_write_pc.  Don't set tdep->find_global_pointer.
	(_initialize_ia64_tdep): Call gdbarch_register instead of
	deprecated register_gdbarch_init.
	(struct gdbarch_tdep): Remove find_global_pointer field and move
	to ...
	* ia64-tdep.h (struct gdbarch_tdep): ... here.
	(ia64_linux_sigcontext_register_address): Remove declaration.
	(ia64_linux_getunwind_table): Likewise.
	(ia64_linux_write_pc): Likewise.
	* ia64-linux-tdep.c: Include "osabi.h".
	(ia64_linux_sigcontext_register_address): Make static.
	(ia64_linux_write_pc): Likewise.
	(ia64_linux_init_abi): New.
	(_initialize_ia64_linux_tdep): New.
	* Makefile.in (ia64-tdep.o, ia64-linux-tdep.o): Depend on
	$(osabi_h).
@
text
@d2082 2
a2083 2
	$(gdbcore_h) $(observer_h) $(gdb_string_h) $(gdb_ptrace_h) \
	$(gdb_wait_h) $(inf_child_h)
@


1.682
log
@Eliminate ia64-aix-tdep.c.
@
text
@d2 1
a2 1
# 1998, 1999, 2000, 2001, 2002, 2003, 2004 Free Software Foundation,
d2057 1
a2057 1
	$(arch_utils_h) $(gdbcore_h) $(regcache_h)
d2063 1
a2063 1
	$(libunwind_frame_h) $(libunwind_ia64_h)
@


1.681
log
@* configure.host (ia64-*-aix*): Remove.
* configure.tgt (ia64-*-aix*): Remove.
* config/ia64/aix.mh: Remove file.
* config/ia64/aix.mt: Remove file.
* config/ia64/tm-aix.h: Remove file.
* ia64-aix-nat.c: Remove file.
* Makefile.in (ia64-aix-nat.o): Remove dependency.
@
text
@a2053 1
ia64-aix-tdep.o: ia64-aix-tdep.c $(defs_h)
@


1.680
log
@* hppah-nat.c: Remove file.
* infttrace.h: Remove file.
* infttrace.c: Remove file.
* Makefile.in (ALLDEPFILES): Remove hppah-nat.c
(infttrace_h): Remove variable.
(hppah-nat.o, infttrace.o): Remove dependencies.
* configure.host (hppa*64*-*-hpux11*): Remove.
* config/pa/hpux11w.mh: Remove file.
* config/pa/nm-hppah.h: Remove file.
* config/pa/nm-hppah11.h: Remove file.
@
text
@a2053 3
ia64-aix-nat.o: ia64-aix-nat.c $(defs_h) $(inferior_h) $(target_h) \
	$(gdbcore_h) $(regcache_h) $(symtab_h) $(bfd_h) $(symfile_h) \
	$(objfiles_h) $(gdb_stat_h)
@


1.679
log
@* somread.c: Include "solib-som.h".
(som_symfile_init, som_new_init, som_symfile_read,
som_symfile_finish, som_symtab_read, som_symfile_offsets): Remove
redudant prototypes.
* Makefile.in (somread.o): Update dependencies.
@
text
@a713 1
infttrace_h = infttrace.h
a1373 1
	hppah-nat.c hpread.c \
d1376 1
a1969 3
hppah-nat.o: hppah-nat.c $(defs_h) $(inferior_h) $(target_h) $(gdbcore_h) \
	$(gdb_wait_h) $(regcache_h) $(gdb_string_h) $(infttrace_h) \
	$(hppa_tdep_h)
a2101 3
infttrace.o: infttrace.c $(defs_h) $(frame_h) $(inferior_h) $(target_h) \
	$(gdb_string_h) $(gdb_wait_h) $(command_h) $(gdbthread_h) \
	$(infttrace_h) $(gdbcore_h)
@


1.678
log
@2004-12-13  Randolph Chung  <tausq@@debian.org>

	* Makefile.in (pa64solib_h, somsolib_h): Delete.
	(solib_pa64_h, solib_som_h): New.
	(HFILES_NO_SRCDIR, ALLDEPFILES): Replace somsolib.h with solib-som.h.
	(hppa-hpux-tdep.o, hpread.o): Update dependencies.
	(pa64solib.o, somsolib.o): Delete.
	(solib-pa64.o, solib-som.o): New.
	* hppa-hpux-tdep.c: Include new solib interfaces.
	(hppa_hpux_som_init_abi): Attach to SOM solib interface.
	(hppa_hpux_elf_init_abi): Attach to PA64 ELF solib interface.
	* hppa-tdep.c (internalize_unwinds): If solib_get_text_base method
	is available, use it to determine the base of unwind records.
	* hppa-tdep.h (gdbarch_tdep): Add new solib methods.
	* hpread.c: Replace somsolib.h with solib-som.h.
	(hpread_process_one_debug_symbol): Use target vector to get thread
	start address.
	* config/pa/hppa64.mt (TDEPFILES): Use new solib interface.
	* config/pa/hppahpux.mt (TDEPFILES): Likewise.
	* config/pa/hpux.mh (NATDEPFILES): Delete references to target objects.
	* config/pa/tm-hppah.h: Use new solib interface.
@
text
@d2518 2
a2519 1
	$(complaints_h) $(gdb_string_h) $(demangle_h) $(som_h) $(libhppa_h)
@


1.677
log
@* hppa-hpux-tdep.c: Include "regset.h".
(HPPA_HPUX_SS_WIDEREGS, HPPA_HPUX_SS_FLAGS_OFFSET)
(HPPA_HPUX_SS_NARROW_OFFSET, HPPA_HPUX_SS_FPBLOCK_OFFSET)
(HPPA_HPUX_SS_WIDE_OFFSET, HPPA_HPUX_SAVE_STATE_SIZE)
(HPPA_HPUX_PA89_SAVE_STATE_SIZE): New defines.
(hppa_hpux_supply_ss_narrow, hppa_hpux_supply_ss_fpblock)
(hppa_hpux_supply_ss_wide, hppa_hpux_supply_save_state): New
functions.
(hppa_hpux_regset): New variable.
(hppa_hpux_regset_from_core_section): New function.
(hppa_hpux_init_abi): Set regset_from_core_section.
(hppa_hpux_core_osabi_sniffer): New function.
(_initialize_hppa_hpux_tdep): Register
hppa_hpux_core_osabi_sniffer.
* Makefile.in (hppa-hpux-tdep.o): Update dependencies.
* config/pa/hppahpux.mt (TDEPFILES): Add corelow.o.
@
text
@d744 1
a744 1
pa64solib_h = pa64solib.h
d769 1
a769 1
somsolib_h = somsolib.h
d859 1
a859 1
	dcache.h remote-utils.h top.h somsolib.h
d1405 1
a1405 1
	somread.c somsolib.c $(HPREAD_SOURCE) \
d1978 4
a1981 3
	$(osabi_h) $(frame_h) $(frame_unwind_h) $(trad_frame_h) $(symtab_h) \
	$(objfiles_h) $(inferior_h) $(infcall_h) $(observer_h) $(regset_h) \
	$(gdb_string_h) $(hppa_tdep_h)
d1996 1
a1996 1
	$(somsolib_h) $(gdb_assert_h) $(hppa_tdep_h) $(gdb_string_h)
d2317 3
a2319 4
pa64solib.o: pa64solib.c $(defs_h) $(frame_h) $(bfd_h) $(libhppa_h) \
	$(gdbcore_h) $(symtab_h) $(breakpoint_h) $(symfile_h) $(objfiles_h) \
	$(inferior_h) $(gdb_stabs_h) $(gdb_stat_h) $(gdbcmd_h) $(language_h) \
	$(regcache_h) $(exec_h) $(hppa_tdep_h)
d2519 3
a2521 4
somsolib.o: somsolib.c $(defs_h) $(frame_h) $(bfd_h) $(som_h) $(libhppa_h) \
	$(gdbcore_h) $(symtab_h) $(breakpoint_h) $(symfile_h) $(objfiles_h) \
	$(inferior_h) $(gdb_stabs_h) $(gdb_stat_h) $(gdbcmd_h) $(language_h) \
	$(regcache_h) $(gdb_assert_h) $(exec_h) $(hppa_tdep_h)
@


1.676
log
@* Makefile.in (inf-ttrace.o): Fix typo.
@
text
@d1978 3
a1980 3
	$(osabi_h) $(gdb_string_h) $(frame_h) $(frame_unwind_h) \
	$(trad_frame_h) $(symtab_h) $(objfiles_h) $(inferior_h) $(infcall_h) \
	$(observer_h) $(hppa_tdep_h)
@


1.675
log
@* inf-ttrace.c: Include "gdbthread.h".
(inf_ttrace_num_lwps): New variable.
(inf_ttrace_num_lwps_in_syscall): Renamed from
inf_ttrace_num_threads_in_syscall.
(inf_ttrace_him): Track TTEVT_LWP_CREATE, TTEVT_LWP_EXIT and
TTEVT_LWP_TERMINATE events.
(inf_ttrace_create_inferior): Assert that INF_TTRACE_NUM_LWPS is
zero.
(inf_ttrace_mourn_inferior): Set INF_TTRACE_NUM_LWPS to zero.
(inf_ttrace_attach): Assert that INF_TTRACE_NUM_LWPS is zero.
Track TTEVT_LWP_CREATE, TTEVT_LWP_EXIT and TTEVT_LWP_TERMINATE
events.
(inf_ttrace_wait): Report status as TARGET_WAITKIND_SPURIOUS by
default.  Handle TTEVT_LWP_CREATE, TTEVT_LWP_EXIT and
TTEVT_LWP_TERMINATE events.
(inf_ttrace_thread_alive, inf_ttrace_pid_to_str): New functions.
(inf_ttrace_target): Set to_thread_alive and to_pid_to_str.
* Makefile.in (inf-ttrace.o): Update dependencies.
@
text
@d2092 1
a2092 1
	$(gdbthread_h)$(inferior_h) $(observer_h) $(target_h) \
@


1.674
log
@* inf-ttrace.c: New file.
* inf-ttrace.h: New file.
* hppa-hpux-nat.c [HAVE_TTRACE]: Include <sys/ttrace>.
Include "inf-ttrace.h".
(ss_mpsfu_high): Define to ss_tlsp if necessary.
(hppa_hpux_fetch_register, hppa_hpux_store_register): Use
ptid_get_pid instead of PIDGET.  Modify to handle both ttrace and
ptrace systems.
(_initialize_hppa_hpux_nat) [HAVE_TTRACE]: Call inf_ttrace_traget
instead of inf_ptrace_target.
* config/pa/hpux.mh (NATDEPFILES): Add inf-ttrace.o.
* Makefile.in (inf_ttrace_h): New variable.
(hppa-hpux-nat.o): Update dependency.
(inf-ttrace.o): New dependency.
(ALLDEPFILES): Add inf-ptrace.c and inf-ttrace.c.
@
text
@d2091 3
a2093 3
inf-ttrace.o: inf-ttrace.c $(defs_h) $(command_h) $(inferior_h) \
	$(observer_h) $(target_h) $(gdb_assert_h) $(gdb_string_h) \
	$(inf_child_h) $(inf_ttrace_h)
@


1.673
log
@* inf-ptrace.c: Don't include "regcache.h" and "gdbcmd.h".
Reorder includes a bit.  Fix comment.
* Makefile.in (inf-ptrace.o): Update dependencies.
@
text
@d715 1
d1387 1
d1975 2
a1976 1
	$(target_h) $(gdb_assert_h) $(hppa_tdep_h) $(inf_ptrace_h)
d2091 3
@


1.672
log
@	* m68klinux-tdep.c: Include "glibc-tdep.h" and "solib-svr4.h".
	(m68k_linux_init_abi): Set solib_svr4_fetch_link_map_offsets to
	svr4_ilp32_fetch_link_map_offsets and gdbarch_skip_solib_resolver
	to glibc_skip_solib_resolver.
	* config/m68k/linux.mt (TDEPFILES): Add glibc-tdep.o.  Remove
	solib-legacy.o.
	* Makefile.in (m68klinux-tdep.o): Update dependencies.
@
text
@d2085 3
a2087 3
inf-ptrace.o: inf-ptrace.c $(defs_h) $(observer_h) $(gdb_ptrace_h) \
	$(inflow_h) $(inferior_h) $(regcache_h) $(command_h) $(gdbcore_h) \
	$(inf_child_h) $(gdbcmd_h) $(gdb_string_h) $(gdb_wait_h)
@


1.671
log
@* hppa-hpux-nat.c: New file.
* config/pa/hpux.mh (NATDEPFILES): New file.
* Makefile.in (ALLDEPFILES): Add hppa-hpux-nat.c.
(hppa-hpux-nat.o): New dependency.
* configure.host: Remove hppa*-*-hpux10.20.
(hppa*-*-hpux*, hppa*-*-hiux*): Set gdb_host to hpux.mh.
@
text
@d2185 2
a2186 1
	$(m68k_tdep_h) $(trad_frame_h) $(frame_unwind_h)
@


1.670
log
@* dbxread.c: Include "gdb_string.h".
(record_minimal_symbol, read_ofile_symtab): Replace
DEPRECATED_STREQ and DEPRECATED_STREQN with strcmp and strncmp.
* Makefile.in (dbxread.o): Update dependencies.
@
text
@d1373 1
a1373 1
	hppa-tdep.c hppa-hpux-tdep.c \
d1972 2
@


1.669
log
@	* Makefile.in (mips-linux-tdep.o): Update dependencies.
	* mips-linux-tdep.c: Include "regcache.h".
	(fill_fpregset, mips64_fill_fpregset): Use regcache_raw_collect.
@
text
@d1833 1
a1833 1
	$(gdb_assert_h) $(aout_aout64_h) $(aout_stab_gnu_h)
@


1.668
log
@	* Makefile.in (linux-thread-db.o): Fix typo in last change.
@
text
@d2237 2
a2238 1
	$(gdb_assert_h) $(frame_h) $(trad_frame_h) $(tramp_frame_h)
@


1.667
log
@	* linux-thread-db.c: New file, renamed from thread-db.c.
	* thread-db.c: Remove.
	* Makefile.in (linux-thread-db.o): Rename from thread-db.o rule.
	* config/alpha/alpha-linux.mh (NATDEPFILES): Rename thread-db.o
	to linux-thread-db.o.
	* config/arm/linux.mh (NATDEPFILES): Likewise.
	* config/i386/linux.mh (NATDEPFILES): Likewise.
	* config/i386/linux64.mh (NATDEPFILES): Likewise.
	* config/ia64/linux.mh (NATDEPFILES): Likewise.
	* config/m32r/linux.mh (NATDEPFILES): Likewise.
	* config/m68k/linux.mh (NATDEPFILES): Likewise.
	* config/mips/linux.mh (NATDEPFILES): Likewise.
	* config/pa/linux.mh (NATDEPFILES): Likewise.
	* config/powerpc/linux.mh (NATDEPFILES): Likewise.
	* config/powerpc/ppc64-linux.mh (NATDEPFILES): Likewise.
	* config/s390/s390.mh (NATDEPFILES): Likewise.
	* config/sparc/linux.mh (NATDEPFILES): Likewise.
	* config/sparc/linux64.mh (NATDEPFILES): Likewise.
@
text
@d2615 1
a2615 1
linux-thread-db.o: linux-thread-db.c $(defs_h) $(gdb_assert_h)
@


1.666
log
@2004-11-13  Andrew Cagney  <cagney@@gnu.org>

	* config/i386/i386lynx.mh: Delete file.
	* config/i386/i386lynx.mt: Delete file.
	* Makefile.in (ALLDEPFILES, i386ly-tdep.o): Remove i386ly-tdep.c.
	* i386ly-tdep.c: Delete.
@
text
@d1477 1
a1477 1
thread-db.o: $(srcdir)/thread-db.c
d1479 1
a1479 1
		$(srcdir)/thread-db.c
d2615 4
a2618 3
thread-db.o: thread-db.c $(defs_h) $(gdb_assert_h) $(gdb_proc_service_h) \
	$(gdb_thread_db_h) $(bfd_h) $(gdbthread_h) $(inferior_h) \
	$(symfile_h) $(objfiles_h) $(target_h) $(regcache_h) $(solib_svr4_h)
@


1.665
log
@2004-11-13  Andrew Cagney  <cagney@@gnu.org>

	* configure.tgt: Delete i[34567]86-*-vxworks*, m68*-netx-*,
	m68*-*-vxworks*, mips*-*-vxworks*, powerpc-*-vxworks*, and
	sparc-*-vxworks*.
	* NEWS: Mention that vxworks was deleted.
	* config/m68k/tm-vx68.h, config/mips/tm-vxmips.h: Delete.
	* config/powerpc/tm-vxworks.h, config/tm-vxworks.h: Delete.
	* config/i386/vxworks.mt, config/m68k/vxworks68.mt: Delete.
	* config/mips/vxmips.mt, config/powerpc/vxworks.mt: Delete.
	* config/sparc/vxworks.mt, vx-share/dbgRpcLib.h: Delete.
	* vx-share/ptrace.h, vx-share/regPacket.h: Delete.
	* vx-share/vxTypes.h, vx-share/vxWorks.h: Delete.
	* vx-share/wait.h, vx-share/xdr_ld.c: Delete.
	* vx-share/xdr_ld.h, vx-share/xdr_ptrace.c: Delete.
	* vx-share/xdr_ptrace.h, vx-share/xdr_rdb.c: Delete.
	* vx-share/xdr_rdb.h, remote-vxsparc.c: Delete.
	* remote-vxmips.c, remote-vx.c: Delete.
	* remote-vx68.c: Delete.
	* config/m68k/tm-os68k.h: Remove reference to VxWorks.
	* config/m68k/os68k.mt, ada-lang.h: Ditto.
	* Makefile.in (HFILES_NO_SRCDIR, ALLDEPFILES, remote-vx68.o)
	(remote-vx.o, remote-vxmips.o, remote-vxsparc.o): Delete vx files.
@
text
@d1378 1
a1378 1
	i386v4-nat.c i386ly-tdep.c i386-cygwin-tdep.c \
a2016 2
i386ly-tdep.o: i386ly-tdep.c $(defs_h) $(gdbcore_h) $(inferior_h) \
	$(regcache_h) $(target_h) $(osabi_h) $(i386_tdep_h)
@


1.664
log
@* tui/tui-io.c: Don't include "terminal.h".
* Makefile.in (tui-io.o): Update dependencies.
@
text
@d857 1
a857 3
	vx-share/dbgRpcLib.h vx-share/ptrace.h vx-share/vxTypes.h \
	vx-share/vxWorks.h vx-share/wait.h vx-share/xdr_ld.h \
	vx-share/xdr_ptrace.h vx-share/xdr_rdb.h gdbthread.h \
a1411 1
	remote-vx.c \
a1424 1
	vx-share/xdr_ld.c vx-share/xdr_ptrace.c vx-share/xdr_rdb.c \
a2419 17
remote-vx68.o: remote-vx68.c $(defs_h) $(vx_share_regPacket_h) $(frame_h) \
	$(inferior_h) $(target_h) $(gdbcore_h) $(command_h) $(symtab_h) \
	$(symfile_h) $(regcache_h) $(gdb_string_h) $(vx_share_ptrace_h) \
	$(vx_share_xdr_ptrace_h) $(vx_share_xdr_ld_h) $(vx_share_xdr_rdb_h) \
	$(vx_share_dbgRpcLib_h)
remote-vx.o: remote-vx.c $(defs_h) $(frame_h) $(inferior_h) $(target_h) \
	$(gdbcore_h) $(command_h) $(symtab_h) $(complaints_h) $(gdbcmd_h) \
	$(bfd_h) $(symfile_h) $(objfiles_h) $(gdb_stabs_h) $(regcache_h) \
	$(gdb_string_h) $(vx_share_ptrace_h) $(vx_share_xdr_ptrace_h) \
	$(vx_share_xdr_ld_h) $(vx_share_xdr_rdb_h) $(vx_share_dbgRpcLib_h)
remote-vxmips.o: remote-vxmips.c $(defs_h) $(vx_share_regPacket_h) \
	$(frame_h) $(inferior_h) $(target_h) $(gdbcore_h) $(command_h) \
	$(symtab_h) $(symfile_h) $(regcache_h) $(gdb_string_h) \
	$(vx_share_ptrace_h) $(vx_share_xdr_ptrace_h) $(vx_share_xdr_ld_h) \
	$(vx_share_xdr_rdb_h) $(vx_share_dbgRpcLib_h)
remote-vxsparc.o: remote-vxsparc.c $(defs_h) $(regcache_h) $(gdb_string_h) \
	$(sparc_tdep_h) $(vx_share_ptrace_h) $(vx_share_regPacket_h)
a3070 16
#
# vx-share sub-directory
#

xdr_ld.o: vx-share/xdr_ld.c $(defs_h) vx-share/vxTypes.h \
	vx-share/vxWorks.h vx-share/xdr_ld.h
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/vx-share/xdr_ld.c

xdr_ptrace.o: vx-share/xdr_ptrace.c $(defs_h) vx-share/vxTypes.h \
	vx-share/vxWorks.h vx-share/xdr_ptrace.h
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/vx-share/xdr_ptrace.c

xdr_rdb.o: vx-share/xdr_rdb.c $(defs_h) vx-share/vxTypes.h \
	vx-share/vxWorks.h vx-share/xdr_rdb.h
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/vx-share/xdr_rdb.c

@


1.663
log
@2004-11-12  Kei Sakamoto  <sakamoto.kei@@renesas.com>

	* Makefile.in (m32r-linux-tdep.o): Update dependencies.
	* m32r-linux-tdep.c (m32r_linux_init_abi): Call
	set_gdbarch_regset_from_core_section for core file support.
	(m32r_linux_supply_gregset, m32r_linux_regset_from_core_section):
	New functions.
@
text
@d3039 1
a3039 1
tui-io.o: $(srcdir)/tui/tui-io.c $(defs_h) $(terminal_h) $(target_h) \
@


1.662
log
@2004-11-09  Andrew Cagney  <cagney@@gnu.org>

	* values.c: Rename to ...
	* value.c: ..., new file.
	* Makefile.in: Update.
@
text
@d2160 1
a2160 1
	$(frame_unwind_h) $(m32r_tdep_h)
@


1.661
log
@2004-11-09  Andrew Cagney  <cagney@@gnu.org>

	* i386-linux-tdep.c: Include "dwarf2-frame.h".
	* Makefile.in: Update all dependencies.
@
text
@d556 1
a556 1
	valarith.c valops.c valprint.c values.c varobj.c \
d895 1
a895 1
	source.o values.o eval.o valops.o valarith.o valprint.o printcmd.o \
d2692 1
a2692 1
values.o: values.c $(defs_h) $(gdb_string_h) $(symtab_h) $(gdbtypes_h) \
@


1.660
log
@* m68kbsd-nat.c: Include "inf-ptrace.h".
(_initialize_m68kbsd_nat): Fix pasto.
* Makefile.in (m68kbsd-nat.o): Update dependencies.
@
text
@d1830 1
a1830 6
d10v-tdep.o: d10v-tdep.c $(defs_h) $(frame_h) $(frame_unwind_h) \
	$(frame_base_h) $(symtab_h) $(gdbtypes_h) $(gdbcmd_h) $(gdbcore_h) \
	$(gdb_string_h) $(value_h) $(inferior_h) $(dis_asm_h) $(symfile_h) \
	$(objfiles_h) $(language_h) $(arch_utils_h) $(regcache_h) \
	$(remote_h) $(floatformat_h) $(gdb_sim_d10v_h) $(sim_regno_h) \
	$(disasm_h) $(trad_frame_h) $(gdb_assert_h)
d2019 2
a2020 2
	$(gdb_string_h) $(i386_tdep_h) $(i386_linux_tdep_h) $(glibc_tdep_h) \
	$(solib_svr4_h)
d2168 2
a2169 2
	$(language_h) $(arch_utils_h) $(regcache_h) $(trad_frame_h) \
	$(dis_asm_h) $(gdb_assert_h) $(osabi_h) $(m32r_tdep_h)
d2671 2
a2672 1
	$(filenames_h) $(symfile_h) $(inferior_h) $(readline_h)
@


1.659
log
@	* Makefile.in (symfile-mem.o): Update dependencies.
	* i386-linux-tdep.c (i386_linux_dwarf_signal_frame_p): New.
	(i386_linux_init_abi): Call dwarf2_frame_set_signal_frame_p.
	* inf-ptrace.c (inf_ptrace_attach): Call
	observer_notify_inferior_created.
	* inftarg.c (child_attach): Likewise.
	* symfile-mem.c: Include "observer.h", "auxv.h", and "elf/common.h".
	(symbol_file_add_from_memory): Take NAME argument.  Use it for
	the new BFD's filename.
	(add_symbol_file_from_memory_command): Update call to
	symbol_file_add_from_memory.
	(struct symbol_file_add_from_memory_args, add_vsyscall_page)
	(symbol_file_add_from_memory_wrapper): New.
	(_initialize_symfile_mem): Register add_vsyscall_page as an
	inferior_created observer.
@
text
@d2182 2
a2183 1
	$(regcache_h) $(gdb_assert_h) $(m68k_tdep_h) $(bsd_kvm_h)
@


1.658
log
@* Makefile.in (mips64obsd-tdep.o): Fix typo.
@
text
@d2623 2
a2624 1
	$(objfiles_h) $(gdbcmd_h) $(target_h) $(value_h) $(symfile_h)
@


1.657
log
@* mips64obsd-nat.c: Include "mips-tdep.h".
(MIPS64OBSD_NUM_REGS): Remove define.
(MIPS_PC_REGNUM, MIPS_FP0_REGNUM, MIPS_FSR_REGNUM): New defines.
(mips64obsd_supply_gregset, mips64obsd_collect_gregset): Handle
floating-point registers correctly.
* Makefile.in (mips64obsd-nat.o): Update dependencies.
@
text
@d2241 1
a2241 1
	$(regset_h) $(trad_frame_h) $(tramp_frame_h) $gdb_assert_h) \
@


1.656
log
@* mips64obsd-tdep.c: Include "trad-frame.h", "tramp-frame.h" and
"gdb_assert.h".
(mips64obsd_sigframe_init): New function.
(mips64obsd_sigframe): New variable.
(mips64obsd_init_abi): Add comments.  Prepend mips64obsd_sigrame
unwinder.
* Makefile.in (mips64obsd-tdep.o): Update dependencies.
@
text
@d2239 1
a2239 1
	$(target_h) $(inf_ptrace_h)
@


1.655
log
@        * alpha-mdebug-tdep.c: #include mdebugread.h.
        Replace alpha_extra_func_info_t by struct mdebug_extra_func_info *.
        * Makefile.in (alpha-mdebug-tdep.o): Add dependency on mdebugread.h.
@
text
@d2241 2
a2242 1
	$(regset_h) $(gdb_string_h) $(mips_tdep_h) $(solib_svr4_h)
@


1.654
log
@2004-11-04  Kei Sakamoto  <sakamoto.kei@@denesas.com>
	* Makefile.in (m32r-tdep.o): Update dependencies.
	* m32r-tdep.c (m32r_gdbarch_init): Call gdbarch_init_osabi for
	ABI-specific overrides.
@
text
@d1654 1
a1654 1
	$(block_h) $(gdb_assert_h) $(alpha_tdep_h)
@


1.653
log
@	* Makefile.in (ALLDEPFILES): Add amd64-sol2-tdep.c.
	(amd64-sol2-tdep.o): Add dependencies.
	* amd64-sol2-tdep.c, config/i386/sol2-64.mh,
	config/i386/sol2-64.mt: New files.
	* i386-sol2-nat.c (amd64_sol2_gregset64_reg_offset,
	amd64_sol2_gregset32_reg_offset, _initialize_amd64_sol2_nat): New.
	(supply_gregset): Correct order of arguments to
	amd64_supply_native_gregset.
	(fill_gregset): Correct order of arguments to
	amd64_collect_native_gregset.
	* configure.host (i[34567]86-*-solaris2.1[0-9]*): Add new case.
	* configure.tgt (i[34567]86-*-solaris2.1[0-9]*): Likewise.
	* configure.in (*-*-solaris2.[[6789]]): Add *-*-solaris2.1[[0-9]]
	for definition of NEW_PROC_API.
	* configure: Regenerate.
@
text
@d2174 1
a2174 1
	$(dis_asm_h) $(gdb_assert_h) $(m32r_tdep_h)
@


1.652
log
@* mipsnbsd-nat.c: Include "target.h" and "inf-ptrace.h".
(mipsnbsd_fetch_inferior_registers): Rename from
fetch_inferior_registers.  Make static.
(mipsnbsd_store_inferior_registers): Rename from
store_inferior_registers.  Make static.
(_initialize_mipsnbsd_nat): New function and prototype.
* Makefile.in (mipsnbsd-nat.o): Update dependencies.
* config/mips/nbsd.mh (NAT_CLIBS, NAT_FILE): Remove variables.
(NATDEPFILES): Remove infptrace.o and inftarg.o.  Add
inf-ptrace.o.
@
text
@d1363 1
d1698 3
@


1.651
log
@* i386v4-nat.c (supply_gregset, supply_fpregset, fill_gregset)
(fill_fpregset): Do not compile for 64-bit systems.
* i386-sol2-nat.c: Don't include "i386v4-nat.c".
* Makefile.in (i386-sol2-nat.o): Update dependencies.
* config/i386/i386sol2.mh (NATDEPFILES): Add back i386v4-nat.c.
@
text
@d2248 1
a2248 1
	$(mips_tdep_h) $(mipsnbsd_tdep_h)
@


1.650
log
@2004-10-30  Andrew Cagney  <cagney@@gnu.org>

	* mdebugread.h: Include "coff/sym.h" and "coff/symconst.h".
	(struct mdebug_extra_func_info): Define.
	* config/alpha/tm-alpha.h: Delete same.
	* config/mips/tm-mips.h: Delete same.
	* mdebugread.c: Delete same.
	* Makefile.in: Update dependencies.
	* mips-mdebug-tdep.c: Include "mdebugread.h".
@
text
@d2040 1
a2040 1
	$(amd64_nat_h) $(amd64_tdep_h) $(i386v4_nat_c)
@


1.649
log
@2004-10-30  Andrew Cagney  <cagney@@gnu.org>

	* objfiles.c: Include "mdebugread.h".
	* mdebugread.c: Include "mdebugread.h".
	(ecoff_relocate_cfi): Delete.
	* config/alpha/tm-alpha.h (ecoff_relcate_cfi): Delete.
	* config/mips/tm-mips.h (ecoff_relcate_cfi): Delete.
	* mdebugread.h (ecoff_relocate_efi): New file.
	* Makefile.in: Update dependencies.
@
text
@d730 1
a730 1
mdebugread_h = mdebugread.h
d2225 3
a2227 3
	$(dictionary_h) $(mdebugread_h) $(coff_sym_h) $(coff_symconst_h) \
	$(gdb_stat_h) $(gdb_string_h) $(bfd_h) $(coff_ecoff_h) $(libaout_h) \
	$(aout_aout64_h) $(aout_stab_gnu_h) $(expression_h)
d2246 1
a2246 1
	$(mips_mdebug_tdep_h)
@


1.648
log
@* mipsnbsd-tdep.c: Include "regset.h" and "gdb_assert.h".
(MIPS_PC_REGNUM, MIPS_FP0_REGNUM, MIPS_FSR_REGNUM)
(MIPSNBSD_NUM_GREGS, MIPSNBSD_NUM_FPREGS): New defines.
(fetch_core_registers, fetch_elfcore_registers): Remove functions.
(mipsnbsd_core_fns, mipsnbsd_elfcore_fns): Remove variables.
(mipsnbsd_core_osabi_sniffer): New function.
(mipsnbsd_init_abi): Set regset_from_core_section.
(_initialize_mipsnbsd_tdep): Remove calls to
deprecated_add_core_fns.
(mipsnbsd_supply_fpregset, mipsnbsd_supply_gregset)
(mipsnbsd_regset_from_core_section): New functions.
(mipsnbsd_gregset, mipsnbsd_fpregset): New variables.
* Makefile.in (mipsnbsd-tdep.o): Update dependencies.
@
text
@d730 1
d2225 2
a2226 2
	$(dictionary_h) $(coff_sym_h) $(coff_symconst_h) $(gdb_stat_h) \
	$(gdb_string_h) $(bfd_h) $(coff_ecoff_h) $(libaout_h) \
d2301 3
a2303 3
	$(objfiles_h) $(gdb_stabs_h) $(target_h) $(bcache_h) $(gdb_assert_h) \
	$(gdb_stat_h) $(gdb_obstack_h) $(gdb_string_h) $(hashtab_h) \
	$(breakpoint_h) $(block_h) $(dictionary_h)
@


1.647
log
@2004-10-30  Andrew Cagney  <cagney@@gnu.org>

	* config/mips/embed.mt (TDEPFILES): Add mips-mdebug-tdep.o.
	* mips-mdebug-tdep.h, mips-mdebug-tdep.c: New files.
	* mips-tdep.c (mips_mdebug_frame_cache)
	(mips_mdebug_frame_this_id, mips_mdebug_frame_prev_register)
	(mips_mdebug_frame_unwind, mips_mdebug_frame_sniffer)
	(mips_mdebug_frame_base_address, mips_mdebug_frame_sniffer)
	(mips_mdebug_frame_base_sniffer, non_heuristic_proc_desc)
	(compare_pdr_entries, the_bfd, mips16_fetch_instruction): Delete.
	(mips_gdbarch_init): Do not append mdebug sniffers.
	(PROC_LOW_ADDR, PROC_HIGH_ADDR, PROC_FRAME_OFFSET)
	(PROC_FRAME_REG, PROC_FRAME_ADJUST, PROC_REG_MASK)
	(PROC_FREG_MASK, PROC_REG_OFFSET, PROC_FREG_OFFSET, PROC_PC_REG)
	(PROC_SYMBOL, _PROC_MAGIC_): Delete.
	* Makefile.in: Update dependencies.
@
text
@d2249 3
a2251 2
	$(target_h) $(value_h) $(osabi_h) $(gdb_string_h) $(nbsd_tdep_h) \
	$(mipsnbsd_tdep_h) $(mips_tdep_h) $(solib_svr4_h)
@


1.646
log
@* i386-sol2-nat.c: New file.
* Makefile.in (ALLDEPFILES): Add i386-sol2-nat.c and
i386-sol2-tdep.c.
(i386-sol2-nat.o): Update dependencies.
* config/i386/i386sol2.mh (NATDEPFILES): Remove i386v4.o, add
i386-sol2-nat.o.
@
text
@d731 1
d2039 1
a2039 1
	i386v4-nat.c
d2233 1
a2233 1
mips64obsd-nat.o: mips64obsd-tdep.c $(defs_h) $(inferior_h) $(regcache_h) \
d2242 4
d2249 2
a2250 2
	$(target_h) $(value_h) $(osabi_h) $(nbsd_tdep_h) $(mipsnbsd_tdep_h) \
	$(mips_tdep_h) $(solib_svr4_h)
d2265 4
a2268 4
mn10300-tdep.o: mn10300-tdep.c $(defs_h) $(frame_h) $(inferior_h) \
	$(target_h) $(value_h) $(bfd_h) $(gdb_string_h) $(gdbcore_h) \
	$(objfiles_h) $(regcache_h) $(arch_utils_h) $(gdb_assert_h) \
	$(dis_asm_h)
@


1.645
log
@* mips-tdep.c (mips_fetch_instruction, mips16_fetch_instruction)
(mips_mdebug_frame_cache, mips16_scan_prologue)
(mips32_scan_prologue, mips_stub_frame_cache)
(heuristic_proc_start, heuristic_proc_desc)
(mips_eabi_push_dummy_call, mips_n32n64_push_dummy_call)
(mips_n32n64_return_value, mips_o32_push_dummy_call)
(mips_o32_return_value, mips_o64_push_dummy_call)
(mips_step_skips_delay, mips_skip_trampoline_code)
(mips_gdbarch_init): Use MIPS_A0_REGNUM instead of A0_REGNUM,
MIPS_RA_REGNUM instead of RA_REGNUM, MIPS_T9_REGNUM instead of
T9_REGNUM, MIPS_V0_REGNUM instead of V0_REGNUM, MIPS_ZERO_REGNUM
instead of ZERO_REGNUM, MIPS32_SIZE_INSN instead of MIPS_INSTLEN
and MIPS16_INSN_SIZE instead of MIPS16_INSTLEN.
(mips_dump_tdep): Don't print A0_REGNUM, RA_REGNUM,
T9_REGNUM, V0_REGNUM, ZERO_REGNUM, MIPS_INSTLEN and
MIPS16_INSTLEN.  Use MIPS_A0_REGNUM instead of A0_REGNUM.
* mips-linux-tdep.c (mips_linux_o32_sigframe_init)
(mips_linux_n32n64_sigframe_init): Use MIPS_ZERO_REGNUM instead of
ZERO_REGNUM.
* mipsnbsd-tdep.c (mipsnbsd_cannot_fetch_register)
(mipsnbsd_cannot_store_register): Use MIPS_ZERO_REGNUM instead of
ZERO_REGNUM.
(mipsnbsd_get_longjmp_target): Use MIPS_A0_REGNUM instead of
A0_REGNUM.
* mipsnbsd-nat.c: Include "mips-tdep.h".
(getregs_supplies): Use MIPS_ZERO_REGNUM instead of ZERO_REGNUM.
* Makefile.in (mipsnbsd-nat.o): Update dependencies.
@
text
@d1382 1
d2037 2
@


1.644
log
@Really commit this file.
@
text
@d2239 1
a2239 1
	$(mipsnbsd_tdep_h)
@


1.643
log
@2004-10-15  Michael Chastain  <mec.gnu@@mindspring.com>

	From Andreas Schwab <schwab@@suse.de>:
	* Makefile.in (.y.c, .l.c.): Fix the substitutions for
	for xmalloc and xrealloc.
@
text
@d1398 1
d2229 4
@


1.643.2.1
log
@2004-11-04  Kei Sakamoto  <sakamoto.kei@@denesas.com>

	* Makefile.in (m32r-tdep.o): Update dependencies.
	* m32r-tdep.c (m32r_gdbarch_init): Call gdbarch_init_osabi for
	ABI-specific overrides.
@
text
@d2164 1
a2164 1
	$(dis_asm_h) $(gdb_assert_h) $(osabi_h) $(m32r_tdep_h)
@


1.643.2.2
log
@2004-11-12  Kei Sakamoto  <sakamoto.kei@@renesas.com>

	* Makefile.in (m32r-linux-tdep.o): Update dependencies.
	* m32r-linux-tdep.c (m32r_linux_init_abi): Call
	set_gdbarch_regset_from_core_section for core file support.
	(m32r_linux_supply_gregset, m32r_linux_regset_from_core_section):
	New functions.
@
text
@d2155 1
a2155 1
	$(frame_unwind_h) $(regs_h) $(m32r_tdep_h)
@


1.642
log
@2004-10-15  Andrew Cagney  <cagney@@gnu.org>

	* ada-exp.y, ada-lex.l: Use xmalloc and xrealloc through out.
	* inf-ptrace.c: Include "gdb_wait.h" instead of <wait.h>.
	* Makefile.in (.y.c, .l.c): Don't replace xmalloc with xxmalloc.
	Update dependencies.
@
text
@d1578 2
a1579 2
	     -e 's/[^x]malloc/xmalloc/g' \
	     -e 's/[^x]realloc/xrealloc/g' \
d1592 2
a1593 2
	        -e 's/[^x]malloc/xmalloc/g' \
	        -e 's/[^x]realloc/xrealloc/g' \
@


1.641
log
@* sparc-nat.c: Include "inf-ptrace.h".
(sparc_target): New function.
* sparc-nat.h: Update copyright year.
(sparc_target): New prototype.
* sparcnbsd-nat.c: Don't include "gdbcore.h", include "target.h".
(_initialize_sparcnbsd_nat): Construct and add target vector.
* sparc64nbsd-nat.c: Include "target.h".
(_initialize_sparc64nbsd_nat): Construct and add target vector.
* Makefile.in (sparc-nat.o, sparcnbsd-nat.o, sparc64nbsd-nat.o):
Update dependencies.
* config/sparc/nbsd64.mh (NATDEPFILES): Remove infptrace.o and
inftarg.o, add inf-ptrace.o.
* config/sparc/nbsdaout.mh (NATDEPFILES): Remove infptrace.o and
inftarg.o, add inf-ptrace.o and bsd-kvm.o.
(NAT_FILE): Set to nm-bsd.h.
(LOADLIBES): New variable.
* config/sparc/nbsdelf.mh (NATDEPFILES): Remove infptrace.o and
infarg.o, add inf-ptrace.o.
* config/sparc/nm-nbsdaout.h: Remove file.
* config/sparc/fbsd.mh (NATDEPFILES): Add inf-ptrace.o.
* config/sparc/linux.mh (NATDEPFILES): Add inf-ptrace.o.
* config/sparc/linux64.mh (NATDEPFILES): Add inf-ptrace.o.
@
text
@d659 1
a659 1
	$(fopen_same_h) $(gdbarch_h)
d1578 2
a1579 2
	     -e 's/malloc/xmalloc/g' \
	     -e 's/realloc/xrealloc/g' \
d1592 2
a1593 2
	        -e 's/malloc/xmalloc/g' \
	        -e 's/realloc/xrealloc/g' \
d2086 1
a2086 1
	$(inf_child_h) $(gdbcmd_h) $(gdb_string_h)
d2151 1
a2151 1
	$(m32r_tdep_h)
d2154 2
a2155 1
	$(gdb_string_h) $(glibc_tdep_h) $(solib_svr4_h) $(m32r_tdep_h)
d2191 1
a2191 1
	$(target_h) $(m88k_tdep_h) $(inf_ptrace.h)
d2612 3
a2614 2
	$(filenames_h) $(objc_lang_h) $(hashtab_h) $(gdb_obstack_h) \
	$(block_h) $(dictionary_h) $(gdb_string_h) $(gdb_stat_h) $(cp_abi_h)
d2680 2
a2681 2
vaxbsd-nat.o: vaxbsd-nat.c $(defs_h) $(inferior_h) $(regcache_h) \
	$(target_h) $(vax_tdep_h) $(inf_ptrace_h) $(bsd_kvm_h)
@


1.640
log
@* i386gnu-nat.c: Include "gdb_string.h".
(fetch_fpregs): Use i387_supply_fxsave to fill the floating-point
registers when the floating-point state isn't initialized.
* Makefile.in (i386gnu-nat.o): Update dependencies.
@
text
@d2536 1
a2536 1
sparc64nbsd-nat.o: sparc64nbsd-nat.c $(defs_h) $(regcache_h) \
d2559 2
a2560 2
	$(sparc_nat_h)
sparcnbsd-nat.o: sparcnbsd-nat.c $(defs_h) $(gdbcore_h) $(regcache_h) \
@


1.639
log
@* sparc64-linux-tdep.c: Update copyright year.  Don't include
"solib-svr4.h".
(sparc64_linux_svr4_fetch_link_map_offsets): Remove function.
(sparc64_linux_init_abi): Don't set solib_svr4_link_map_offsets.
* Makefile.in (sparc64-linux-tdep.o): Update dependencies.
@
text
@d2007 2
a2008 2
	$(regcache_h) $(gdb_assert_h) $(i386_tdep_h) $(gnu_nat_h) \
	$(i387_tdep_h) $(gregset_h)
@


1.638
log
@2004-10-06  Paul N. Hilfinger  <Hilfinger@@gnat.com>

* Makefile.in (.l.c): Do conversions of names of alloc and free
functions that are done for .y.c files, plus special one
for yy_flex_realloc.  Also, correct missing-file tests here.
* ada-lex.l (malloc, free): Remove macros.
(resize_tempbuf): Use "realloc"; rely on sed changes to convert to
xrealloc.
(ada_flex_use): Dummy definition to remove warnings about unused
functions.
* ada-exp.y (dummy_string_to_ada_operator): Temporary definition
to suppress warning.
@
text
@d2533 1
a2533 1
	$(solib_svr4_h) $(sparc64_tdep_h)
@


1.637
log
@* Makefile.in (.l.c): Modify rule for compatibility with recent
versions of flex, and remove most command-line options.
* ada-lex.l: Add %options line in place of -I -i and -s command-line
options.
@
text
@d1585 17
a1601 5
	@@if [ "$(FLEX)" ] && $(FLEX) --version >/dev/null 2>&1; then \
	    echo $(FLEX) -o$@@ $<; \
	    $(FLEX) -o$@@ $<; \
	elif [ ! -f $@@ -a ! -f $< ]; then \
	    echo "$< missing and flex not available."; \
a1602 2
	elif [ ! -f $@@ ]; then \
	    echo "Warning: $*.c older than $*.l and flex not available."; \
@


1.636
log
@Turn on initial Ada support (mainly expression evaluation).

* Makefile.in (SFILES): Remove ada-tasks.c.
(HFILES_NO_SRCDIR): Add ada-lang.h.
(COMMON_OBS): Add ada-lang.o, ada-typeprint.o, ada-valprint.o.
(YYOBJ): Add ada-exp.o.
(rule .l.c): Generalize to not mention ada.
* symtab.c: Include ada-lang.h.
(symbol_natural_name, symbol_demangled_name)
(symbol_search_name): Add Ada case.
@
text
@d1586 2
a1587 2
	    echo $(FLEX) -Isit $< ">" $@@; \
	    $(FLEX) -Isit $< > $@@; \
@


1.635
log
@2004-10-01  Andrew Cagney  <cagney@@gnu.org>

	* Makefile.in (COMMON_OBS): Add inf-child.o.
	* config/vax/obsd.mh (NATDEPFILES): Remove inf-child.o.
	* config/vax/nbsdelf.mh (NATDEPFILES): Remove inf-child.o.
	* config/vax/nbsdaout.mh (NATDEPFILES): Remove inf-child.o.
	* config/powerpc/nbsd.mh (NATDEPFILES): Remove inf-child.o.
	* config/m88k/obsd.mh (NATDEPFILES): Remove inf-child.o.
	* config/i386/obsdaout.mh (NATDEPFILES): Remove inf-child.o.
	* config/i386/obsd64.mh (NATDEPFILES): Remove inf-child.o.
	* config/i386/obsd.mh (NATDEPFILES): Remove inf-child.o.
	* config/i386/nbsdelf.mh (NATDEPFILES): Remove inf-child.o.
	* config/i386/nbsdaout.mh (NATDEPFILES): Remove inf-child.o.
	* config/i386/nbsd64.mh (NATDEPFILES): Remove inf-child.o.
	* config/i386/fbsd64.mh (NATDEPFILES): Remove inf-child.o.
	* config/i386/fbsd.mh (NATDEPFILES): Remove inf-child.o.
@
text
@d513 1
a513 1
SFILES = ada-exp.y ada-lang.c ada-typeprint.c ada-valprint.c ada-tasks.c \
d851 1
a851 1
	c-lang.h f-lang.h \
d913 1
a913 1
	c-lang.o f-lang.o objc-lang.o \
d921 2
a922 2
	c-typeprint.o f-typeprint.o m2-typeprint.o \
	c-valprint.o cp-valprint.o f-valprint.o m2-valprint.o \
d946 1
d1589 1
a1589 1
	    echo "ada-lex.c missing and flex not available."; \
@


1.634
log
@2004-09-30    Kei Sakamoto  <sakamoto.kei@@renesas.com>

        Add m32r-linux support.
        * configure.tgt: Add m32r*-*-linux*.
        * Makefile.in (ALLDEPFILES): Add m32r-tdep.c, m32r-linux-nat.c
        and m32r-linux-tdep.c.
        (m32r-linux-nat.o, m32r-linux-tdep.o): New dependencies.
        * m32r-tdep.c: Move some definitions to m32r-tdep.h.
        * config/djgpp/fnchange.lst: Add m32r-linux-nat.c and
        m32r-linux-tdep.c.
        * m32r-tdep.h, m32r-linux-nat.c, m32r-linux-tdep.c,
        config/m32r/linux.mh, config/m32r/linux.mt,
        config/m32r/nm-linux.h: New files.
@
text
@d898 1
@


1.633
log
@* vaxbsd-nat.c: Include "target,h" and "inf-ptrace.h".
(vaxbsd_fetch_inferior_registers): Rename from
fetch_inferior_registers.  Make static.
(vaxbsd_store_inferior_registers): Rename from
store_inferior_registers.  Make static.
(_initialize_vaxbsd_nat): Construct and add target vector.
* config/vax/nbsdaout.mh (NATDEPFILES): Remove infptrace.o and
inftarg.o.  Add inf-child.o and inf-ptrace.o.
* config/vax/nbsdelf.mh (NATDEPFILES): Remove infptrace.o and
inftarg.o.  Add inf-child.o and inf-ptrace.o.
(NAT_FILE): Remove.
* config/vax/obsd.mh (NATDEPFILES): Remove infptrace.o and
inftarg.o.  Add inf-child.o and inf-ptrace.o.
(NAT_FILE): Remove.
* Makefile.in (vaxbsd-nat.o): Update dependencies.
@
text
@d723 1
d1386 2
d2137 6
d2151 1
a2151 1
	$(dis_asm_h) $(gdb_assert_h)
@


1.632
log
@* m88kbsd-nat.c: Include "target.h" and "inf-ptrace.h".
(m88kbsd_fetch_inferior_registers): Rename from
fetch_inferior_registers.  Make static.
(m88kbsd_store_inferior_registers): Rename from
store_inferior_registers.  Make static.
(_initialize_m88kbsd_nat): New prototype and function.
* config/m88k/obsd.mh (NATDEPFILES): Remove infptrace.o and
inftarg.o.  Add inf-child.o and inf-ptrace.o.
(NAT_FILE): Remove.
* Makefile.in (m88kbsd-nat.o): Update dependencies.
@
text
@d2658 1
a2658 1
	$(vax_tdep_h) $(bsd_kvm_h)
@


1.631
log
@2004-09-28  Andrew Cagney  <cagney@@gnu.org>

	Problem identified by Paul Hilfinger.
	* Makefile.in (ada_lex_c): Define.
	(ada-lex.o): Delete rule.
@
text
@d2169 1
a2169 1
	$(m88k_tdep_h)
@


1.630
log
@2004-09-28  Andrew Cagney  <cagney@@gnu.org>

	* linux-proc.c: Delete file.
	* Makefile.in: Update.
	* config/sparc/linux64.mh (NATDEPFILES):
	* config/sparc/linux.mh (NATDEPFILES): Update.
	* config/s390/s390.mh (NATDEPFILES): Update.
	* config/powerpc/ppc64-linux.mh (NATDEPFILES): Update.
	* config/powerpc/linux.mh (NATDEPFILES): Update.
	* config/pa/linux.mh (NATDEPFILES): Update.
	* config/mips/linux.mh (NATDEPFILES): Update.
	* config/m68k/linux.mh (NATDEPFILES): Update.
	* config/ia64/linux.mh (NATDEPFILES): Update.
	* config/i386/linux64.mh (NATDEPFILES): Update.
	* config/i386/linux.mh (NATDEPFILES): Update.
	* config/arm/linux.mh (NATDEPFILES): Update.
	* config/alpha/alpha-linux.mh (NATDEPFILES): Update.
	* linux-nat.c: Update copyright.  Include <sys/param.h>,
	<sys/procfs.h>, "elf-bfd.h", "gregset.h", <ctype.h>,
	"gdbthread.h", "gdb_stat.h", <fcntl.h>.
	(O_LARGEFILE): Possibly define.
	(_initialize_linux_nat, linux_proc_pending_signals)
	(add_line_to_sigset, linux_proc_xfer_memory)
	(linux_nat_info_proc_cmd, linux_nat_make_corefile_notes)
	(linux_nat_do_registers, linux_nat_corefile_thread_callback)
	(struct linux_corefile_thread_data)
	(linux_nat_do_thread_registers, linux_nat_find_memory_regions)
	(child_pid_to_exec_file): Insert code previously in linux-proc.c.
@
text
@d628 1
a1613 1
ada-lex.o: ada-lex.c $(gdb_string_h)
@


1.629
log
@2004-09-16  Andrew Cagney  <cagney@@gnu.org>

	* lin-lwp.c: Delete file.
	* linux-nat.c: Include "gdb_assert.h", "gdb_string.h", <unistd.h>,
	<sys/syscall.h>, "gdbthread.h", "gdbcmd.h", "regcache.h".
	(status_to_str, init_lwp_list, add_lwp, delete_lwp)
	(find_lwp_pid, iterate_over_lwps, lin_lwp_attach_lwp)
	(linux_nat_attach, detach_callback, linux_nat_detach)
	(resume_callback, resume_clear_callback, linux_nat_resume)
	(kill_lwp, linux_nat_handle_extended, wait_lwp, stop_callback)
	(stop_wait_callback, linux_nat_has_pending, flush_callback)
	(status_callback, running_callback, count_events_callback)
	(select_singlestep_lwp_callback, select_event_lwp_callback)
	(cancel_breakpoints_callback, select_event_lwp, resumed_callback)
	(child_wait, stop_and_resume_callback, linux_nat_wait)
	(kill_callback, kill_wait_callback, linux_nat_kill)
	(linux_nat_create_inferior, linux_nat_mourn_inferior)
	(linux_nat_xfer_memory, linux_nat_thread_alive)
	(linux_nat_pid_to_str, init_linux_nat_ops, sigchld_handler)
	(_initialize_linux_nat): New functions.
	* Makefile.in: Update all dependencies.
	* config/sparc/linux64.mh (NATDEPFILES): Remove lin-lwp.o.
	* config/sparc/linux.mh (NATDEPFILES): Remove lin-lwp.o.
	* config/s390/s390.mh (NATDEPFILES): Remove lin-lwp.o.
	* config/powerpc/ppc64-linux.mh (NATDEPFILES): Remove lin-lwp.o.
	* config/powerpc/linux.mh (NATDEPFILES): Remove lin-lwp.o.
	* config/pa/linux.mh (NATDEPFILES): Remove lin-lwp.o.
	* config/mips/linux.mh (NATDEPFILES): Remove lin-lwp.o.
	* config/m68k/linux.mh (NATDEPFILES): Remove lin-lwp.o.
	* config/ia64/linux.mh (NATDEPFILES): Remove lin-lwp.o.
	* config/i386/linux64.mh (NATDEPFILES): Remove lin-lwp.o.
	* config/i386/linux.mh (NATDEPFILES): Remove lin-lwp.o.
	* config/arm/linux.mh (NATDEPFILES): Remove lin-lwp.o.
	* config/alpha/alpha-linux.mh (NATDEPFILES): Remove lin-lwp.o.
@
text
@d1672 2
a1673 1
	$(target_h) $(gdb_assert_h) $(amd64_tdep_h) $(amd64_nat_h) $(bsd_kvm_h)
d1854 2
a1855 2
	$(cp_support_h) $(hashtab_h) $(gdb_string_h) $(gdb_assert_h) \
	$(command_h) $(gdbcmd_h)
a1881 2
fbsd-proc.o: fbsd-proc.c $(defs_h) $(gdbcore_h) $(inferior_h) $(regcache_h) \
	$(regset_h) $(gdb_assert_h) $(gdb_string_h) $(elf_bfd_h)
a2117 3
lin-lwp.o: lin-lwp.c $(defs_h) $(gdb_assert_h) $(gdb_string_h) $(gdb_wait_h) \
	$(gdbthread_h) $(inferior_h) $(target_h) $(regcache_h) $(gdbcmd_h) \
	$(linux_nat_h)
d2120 2
a2121 4
	$(gdbcmd_h) $(regcache_h)
linux-proc.o: linux-proc.c $(defs_h) $(inferior_h) $(gdb_stat_h) \
	$(regcache_h) $(gregset_h) $(gdbcore_h) $(gdbthread_h) $(elf_bfd_h) \
	$(cli_decode_h) $(gdb_string_h) $(linux_nat_h)
d2683 5
a2687 3
xstormy16-tdep.o: xstormy16-tdep.c $(defs_h) $(value_h) $(inferior_h) \
	$(arch_utils_h) $(regcache_h) $(gdbcore_h) $(objfiles_h) \
	$(dis_asm_h)
@


1.628
log
@* amd64-nat.h: Update copyright year.
(amd64bsd_target): New prototype.
* amd64bsd-nat.c: Include "target.h" and "inf-ptrace.h".
(amd64bsd_target): New function.
(amd64bsd_fetch_inferior_registers): Rename from
fetch_inferior_registers.  Make static.
(amd64bsd_store_inferior_registers): Rename from
store_inferior_registers.  Make static.
* amd64fbsd-nat.c: Include "target.h" and "fbsd-nat.h".
(_initialize_amd64fbsd_nat): Construct and add target vector.
* amd64nbsd-nat.o: Include "target.h".
(_initialize_amd64nbsd_nat): Construct and add target vector.
* amd64obsd-nat.c: Include "target.h".
(_initialize_amd64obsd_nat): Construct and add target vector.
* config/i386/nm-fbsd64.h (CHILD_PID_TO_EXEC_FILE): Remove define.
* config/i386/fbsd64.mh (NATDEPFILES): Remove infptrace.o,
inftarg.o and fbsd-proc.o.  Add inf-child.o, inf-ptrace.o and
fbsd-nat.o.
* config/i386/nbsd64.mh, config/i386/obsd64.mh (NATDEPFILES):
Remove infptrace.o and inftarg.o.  Add inf-child.o and
inf-ptrace.o.
* Makefile.in (amd64bsd-nat.o, amd64fbsd-nat.o, amd64nbsd-nat.o)
(amd64obsd-nat.o): Update dependencies.
@
text
@d2122 3
a2124 2
linux-nat.o: linux-nat.c $(defs_h) $(inferior_h) $(target_h) $(gdb_wait_h) \
	$(linux_nat_h)
@


1.627
log
@Makefile.in: Revert previous change.  yylwrap was rolled back instead.
@
text
@d1649 2
a1650 1
	$(gdb_assert_h) $(amd64_tdep_h) $(amd64_nat_h)
d1652 2
a1653 1
	$(gdb_assert_h) $(amd64_tdep_h) $(amd64_nat_h) $(bsd_kvm_h)
d1666 2
a1667 2
amd64nbsd-nat.o: amd64nbsd-nat.c $(defs_h) $(gdb_assert_h) $(amd64_tdep_h) \
	$(amd64_nat_h)
d1672 1
a1672 1
	$(gdb_assert_h) $(amd64_tdep_h) $(amd64_nat_h) $(bsd_kvm_h)
@


1.626
log
@* Makefile.in (.y.c): Modify $(YLWRAP) invocation to use
the new argument order.
@
text
@d1567 1
a1567 1
	$(SHELL) $(YLWRAP) $< y.tab.c $@@.tmp -- "$(YACC)" $(YFLAGS)
@


1.625
log
@gdb/doc/
	* gdb.texinfo (Maintenance Commands): Document "maint set dwarf2
	max-cache-age" and "maint show dwarf2 max-cache-age".
gdb/
	* Makefile.in (dwarf2read.o): Update dependencies.
	* dwarf2read.c: Include "command.h" and "gdbcmd.h".
	(struct dwarf2_per_objfile): Add all_comp_units, n_comp_units,
	and read_in_chain.
	(struct dwarf2_cu): Add read_in_chain, per_cu, last_used,
	mark, and has_form_ref_addr.
	(struct dwarf2_per_cu_data): New.
	(dwarf2_max_cache_age): New.
	(dwarf2_build_psymtabs_hard): Free cached compilation units
	after loading.  Create and manage the list of compilation units.
	Remove unnecessary NULL initialization.  Fix indentation.
	(psymtab_to_symtab_1): Initialize all of CU.
	(dwarf2_read_abbrevs): Set has_form_ref_addr.
	(find_partial_die): Use dwarf2_find_containing_comp_unit
	and load_comp_unit.
	(free_stack_comp_unit): Update comments.  Clear the per-cu
	pointer.  Handle aging.
	(dwarf2_find_containing_comp_unit, free_cached_comp_units)
	(age_cached_comp_units, free_one_cached_comp_unit)
	(dwarf2_mark, dwarf2_clear_marks, create_all_comp_units)
	(load_comp_unit, dwarf2_find_comp_unit, free_one_comp_unit)
	(set_dwarf2_cmdlist, show_dwarf2_cmdlist, set_dwarf2_cmd)
	(show_dwarf2_cmd): New.
	(_initialize_dwarf2_read): Provide "maint set dwarf2 max-cache-age"
	and "maint show dwarf2 max-cache-age".
	* gdbcmd.h (maintenance_set_cmdlist, maintenance_show_cmdlist): New
	externs.
	* maint.c (maintenance_set_cmdlist, maintenance_show_cmdlist): Make
	global.
@
text
@d1567 1
a1567 1
	$(SHELL) $(YLWRAP) "$(YACC)" $< y.tab.c $@@.tmp -- $(YFLAGS)
@


1.624
log
@* i386bsd-nat.c: Include "i386bsd-nat.h" and "inf-ptrace.h".
(i386bsd_fetch_inferior_registers): Rename from
fetch_inferior_registers.  Make static.
(i386bsd_store_inferior_registers): Rename from
store_inferior_registers.  Make static.
(i386bsd_target): New function.
* i386bsd-nat.h: New file.
* i386fbsd-nat.c: Include "target.h", "fbsd-nat.h" and
"i386bsd-nat.h".
(i386fbsd_resume): Rename from child_resume.  Make static.
(_initialize_i386fbsd_nat): Construct and add target vector.
* i386nbsd-nat.c: Include "target.h" and "i386bsd-nat.h".
(_initialize_i386nbsd_nat): Construct and add target vector.
* config/i386/nm-fbsd.h: (CHILD_RESUME, CHILD_PID_TO_EXEC_FILE):
Remove defines.
* config/i386/fbsd.mh (NATDEPFILES): Add inf-child.o, inf-ptrace.o
and fbsd-nat.o.  Remove inftarg.o and fbsd-proc.o.
* config/i386/nbsdaout.mh (NATDEPFILES): Add inf-child.o,
inf-ptrace.o, i386bsd-nat.o and bsd-kvm.o.  Remove inftarg.o.
(LOADLIBES): New variable.
* config/i386/nbsdelf.mh (NATDEPFILES): Add inf-child.o and
inf-ptrace.o.  Remove inftarg.o.
* config/i386/obsd.mh (NATDEPFILES): Add inf-child.o and
inf-ptrace.o. Remove inftarg.o.
* config/i386/obsdaout.mh (NATDEPFILES): Add inf-child.o,
inf-ptrace.o, i386nbsd-nat.o and bsd-kvm.o.  Remove inftarg.o.
(LOADLIBES): New variable.
* Makefile.in (i386bsd_nat_h): New variable.
(i386bsd-nat.o, i386fbsd-nat.o, i386nbsd-nat.o): Update
dependencies.
@
text
@d1851 2
a1852 1
	$(cp_support_h) $(hashtab_h) $(gdb_string_h) $(gdb_assert_h)
@


1.623
log
@* sparc64nbsd-tdep.c: Include "objfiles.h".
(sparc64nbsd_init_abi): Set in_solib_call_trampoline and
skip_trampoline_code.  Set solib_svr4_fetch_link_map_offsets to
svr4_lp64_fetch_link_map_offsets.
* sparc64obsd-tdep.c: Include "objfiles.h".  Don't include
"nbsd-tdep.h".
(sparc64obsd_init_abi): Set in_solib_call_trampoline and
skip_trampoline_code.  Set solib_svr4_fetch_link_map_offsets to
svr4_lp64_fetch_link_map_offsets.
* Makefile.in (sparc64nbsd-tdep.o, sparc64obsd-tdep.o): Update
dependencies.
@
text
@d702 1
d1978 2
a1979 1
	$(gdb_assert_h) $(i386_tdep_h) $(i387_tdep_h)
d1985 2
a1986 1
	$(i386_tdep_h) $(bsd_kvm_h)
d2005 1
a2005 1
	$(i386_tdep_h) $(bsd_kvm_h)
@


1.622
log
@* fbsd-nat.c: New files with cleaned up contents of fbsd-proc.c.
* fbsd-nat.h: New file.
* Makefile.in (ALLDEPFILES): Add fbsd-nat.c.
(fbsd_nat_h): New variable.
(fbsd-nat.o): New dependency.
@
text
@d2518 2
a2519 2
	$(symtab_h) $(solib_svr4_h) $(trad_frame_h) $(gdb_assert_h) \
	$(gdb_string_h) $(sparc64_tdep_h) $(nbsd_tdep_h)
d2521 2
a2522 2
	$(frame_unwind_h) $(osabi_h) $(regset_h) $(symtab_h) $(solib_svr4_h) \
	$(trad_frame_h) $(gdb_assert_h) $(sparc64_tdep_h) $(nbsd_tdep_h)
@


1.621
log
@2004-09-16  Andrew Cagney  <cagney@@gnu.org>

	* inf-child.c: Include "gdb_string.h".
	(inf_child_core_file_to_sym_file): Delete.
	(inf_child_target): Set to_fetch_registers and to_store_registers.
	* inf-ptrace.c: Include "gdb_string.h".
	* Makefile.in: Update all dependencies.
@
text
@d671 1
d1362 3
a1364 1
	dcache.c exec.c fork-child.c \
d1874 3
@


1.620
log
@2004-09-16  Andrew Cagney  <cagney@@gnu.org>

	* Makefile.in (gnu-v3-abi.o): Add explict rule to avoid -Werror
	problem.
@
text
@d2046 1
a2046 1
	$(target_h) $(inferior_h)
d2060 1
a2060 1
	$(inf_child_h) $(gdbcmd_h)
@


1.619
log
@Index: ChangeLog
2004-09-13  Andrew Cagney  <cagney@@gnu.org>

	* configure.in (frags): Replace TM_FILE with DEPRECATED_TM_FILE.
	* configure: Re-generate.
	* nlm/Makefile.in (TAGS): Update.
	* Makefile.in (TAGS): Update.
	* config/vax/nbsd.mt (TM_FILE): Update.
	* config/sparc/vxworks.mt (TM_FILE): Update.
	* config/sparc/sol2.mt (TM_FILE): Update.
	* config/sparc/sol2-64.mt (TM_FILE): Update.
	* config/sparc/obsd64.mt (TM_FILE): Update.
	* config/sparc/obsd.mt (TM_FILE): Update.
	* config/sparc/nbsd64.mt (TM_FILE): Update.
	* config/sparc/nbsd.mt (TM_FILE): Update.
	* config/sparc/linux64.mt (TM_FILE): Update.
	* config/sparc/linux.mt (TM_FILE): Update.
	* config/sparc/fbsd.mt (TM_FILE): Update.
	* config/sh/wince.mt (TM_FILE): Update.
	* config/sh/nbsd.mt (TM_FILE): Update.
	* config/sh/linux.mt (TM_FILE): Update.
	* config/sh/embed.mt (TM_FILE): Update.
	* config/s390/s390.mt (TM_FILE): Update.
	* config/rs6000/rs6000lynx.mt (TM_FILE): Update.
	* config/rs6000/rs6000.mt (TM_FILE): Update.
	* config/rs6000/aix4.mt (TM_FILE): Update.
	* config/powerpc/vxworks.mt (TM_FILE): Update.
	* config/powerpc/ppc-sim.mt (TM_FILE): Update.
	* config/powerpc/ppc-eabi.mt (TM_FILE): Update.
	* config/powerpc/obsd.mt (TM_FILE): Update.
	* config/powerpc/nbsd.mt (TM_FILE): Update.
	* config/powerpc/linux.mt (TM_FILE): Update.
	* config/powerpc/aix.mt (TM_FILE): Update.
	* config/pa/obsd.mt (TM_FILE): Update.
	* config/pa/linux.mt (TM_FILE): Update.
	* config/pa/hppahpux.mt (TM_FILE): Update.
	* config/pa/hppa64.mt (TM_FILE): Update.
	* config/pa/hppa.mt (TM_FILE): Update.
	* config/ns32k/nbsdaout.mt (TM_FILE): Update.
	* config/mips/wince.mt (TM_FILE): Update.
	* config/mips/vxmips.mt (TM_FILE): Update.
	* config/mips/nbsd.mt (TM_FILE): Update.
	* config/mips/linux.mt (TM_FILE): Update.
	* config/mips/irix6.mt (TM_FILE): Update.
	* config/mips/irix5.mt (TM_FILE): Update.
	* config/mips/embed.mt (TM_FILE): Update.
	* config/m68k/vxworks68.mt (TM_FILE): Update.
	* config/m68k/st2000.mt (TM_FILE): Update.
	* config/m68k/os68k.mt (TM_FILE): Update.
	* config/m68k/obsd.mt (TM_FILE): Update.
	* config/m68k/nbsd.mt (TM_FILE): Update.
	* config/m68k/monitor.mt (TM_FILE): Update.
	* config/m68k/linux.mt (TM_FILE): Update.
	* config/m68k/cisco.mt (TM_FILE): Update.
	* config/ia64/linux.mt (TM_FILE): Update.
	* config/ia64/aix.mt (TM_FILE): Update.
	* config/ia64/ia64.mt (TM_FILE): Update.
	* config/i386/vxworks.mt (TM_FILE): Update.
	* config/i386/obsd64.mt (TM_FILE): Update.
	* config/i386/obsd.mt (TM_FILE): Update.
	* config/i386/nto.mt (TM_FILE): Update.
	* config/i386/nbsd64.mt (TM_FILE): Update.
	* config/i386/nbsd.mt (TM_FILE): Update.
	* config/i386/linux64.mt (TM_FILE): Update.
	* config/i386/linux.mt (TM_FILE): Update.
	* config/i386/i386sol2.mt (TM_FILE): Update.
	* config/i386/i386lynx.mt (TM_FILE): Update.
	* config/i386/fbsd64.mt (TM_FILE): Update.
	* config/i386/fbsd.mt (TM_FILE): Update.
	* config/i386/cygwin.mt (TM_FILE): Update.
	* config/h8300/h8300.mt (TM_FILE): Update.
	* config/frv/frv.mt (TM_FILE): Update.
	* config/cris/cris.mt (TM_FILE): Update.
	* config/arm/wince.mt (TM_FILE): Update.
	* config/arm/nbsd.mt (TM_FILE): Update.
	* config/arm/linux.mt (TM_FILE): Update.
	* config/arm/embed.mt (TM_FILE): Update.
	* config/alpha/nbsd.mt (TM_FILE): Update.
	* config/alpha/fbsd.mt (TM_FILE): Update.
	* config/alpha/alpha.mt (TM_FILE): Update.
	* config/alpha/alpha-osf1.mt (TM_FILE): Update.
	* config/alpha/alpha-linux.mt (TM_FILE): Update.

Index: gdbserver/ChangeLog
2004-09-02  Andrew Cagney  <cagney@@gnu.org>

	* Makefile.in (TAGS): Replace TM_FILE with DEPRECATED_TM_FILE.
@
text
@d1435 8
@


1.618
log
@2004-09-12  Andrew Cagney  <cagney@@gnu.org>

	* valprint.c (print_longest): Use fputs_filtered.  Make "val"
	const.
	* Makefile.in (valprint.o): Delete explict rule.
@
text
@d1205 1
a1205 1
	@@etags $(srcdir)/$(TM_FILE) \
@


1.617
log
@2004-09-12  Andrew Cagney  <cagney@@gnu.org>

	* ppcnbsd-nat.c: Include "inf-ptrace.h".
	(ppcnbsd_fetch_inferior_registers): Rename fetch_inferior_registers.
	(ppcnbsd_store_inferior_registers): Rename store_inferior_registers.
	(_initialize_ppcnbsd_nat): Create and add a NetBSD/PPC ptrace
	target.
	* config/powerpc/nbsd.mh (NATDEPFILES): Replace and inftarg.o with
	inf-ptrace.o and inf-child.o.
	* inf-ptrace.h, inf-ptrace.c, inf-child.h, inf-child.c: New files.
	* Makefile.in: Update dependencies.
@
text
@a1467 6
# FIXME: cagney/2003-08-10: Do not try to build "valprint.c" with
# -Wformat-nonliteral.  It relies on local_hex_format et.al. and
# that's a mess.  It needs a serious overhaul.
valprint.o: $(srcdir)/valprint.c
	$(CC) -c $(INTERNAL_WARN_CFLAGS) $(NO_WERROR_CFLAGS) $(srcdir)/valprint.c

@


1.616
log
@2004-09-11  Andrew Cagney  <cagney@@gnu.org>

	* language.c (hex_string, hex_string_custom): Move from here ...
	* utils.c (hex_string, hex_string_custom): ... to here, rewrite.
	(CELLSIZE): Increase to 50.
	* language.h (hex_string, hex_string_custom): Move from here ...
	* defs.h: ... to here.
	* Makefile.in: Update all dependencies.
@
text
@d706 1
d710 1
d2043 2
d2056 3
d2294 1
a2294 1
	$(ppcnbsd_tdep_h)
@


1.615
log
@Fix bug reported and analyzed by Olivier Crete:
* symfile.c (copy_section_addr_info): New function.
(symbol_file_add_with_addrs_or_offsets): Use it to save the
original set of address arguments, instead of handwritten code
that uses one length to allocate and a different length to
initialize.  Use make_cleanup_free_section_addr_info.
* symfile.h (copy_section_addr_info): New declaration.
* utils.c: #include "symfile.h".
(do_free_section_addr_info, make_cleanup_free_section_addr_info):
New functions.
* defs.h (make_cleanup_free_section_addr_info): New declaration.
* Makefile.in (utils.o): Update dependencies.
@
text
@d1614 2
a1615 2
	$(target_h) $(inferior_h) $(regcache_h) $(gdbcmd_h) $(language_h) \
	$(ppc_tdep_h) $(gdb_string_h)
d1721 2
a1722 2
	$(ui_out_h) $(cli_script_h) $(gdb_assert_h) $(block_h) \
	$(gdb_events_h) $(observer_h) $(solist_h)
d1724 2
a1725 2
	$(regcache_h) $(target_h) $(value_h) $(gdb_assert_h) $(readline_h) \
	$(bsd_kvm_h)
d1728 2
a1729 2
	$(complaints_h) $(gdb_string_h) $(expression_h) $(language_h) \
	$(bcache_h) $(filenames_h) $(macrotab_h) $(demangle_h) $(block_h) \
d1807 2
a1808 2
	$(gdb_stabs_h) $(demangle_h) $(language_h) $(complaints_h) \
	$(cp_abi_h) $(gdb_assert_h) $(aout_aout64_h) $(aout_stab_gnu_h)
d2183 1
a2183 1
	$(aout_aout64_h) $(aout_stab_gnu_h) $(expression_h) $(language_h)
d2210 2
a2211 1
	$(frame_unwind_h) $(frame_base_h) $(trad_frame_h) $(infcall_h)
d2286 2
a2287 2
	$(ppc_tdep_h) $(ppcnbsd_tdep_h) $(gdbcore.h) $(regcache_h) \
	$(bsd_kvm_h)
d2391 2
a2392 2
	$(gdb_stabs_h) $(regcache_h) $(arch_utils_h) $(language_h) \
	$(ppc_tdep_h) $(exec_h) $(gdb_stat_h)
d2455 2
a2456 2
	$(completer_h) $(filenames_h) $(exec_h) $(solist_h) $(readline_h) \
	$(observer_h)
d2615 1
a2615 1
	$(filenames_h) $(inferior_h) $(readline_h) $(symfile_h)
d2643 1
a2645 1
vax-nat.o: vax-nat.c $(defs_h) $(inferior_h) $(gdb_assert_h) $(vax_tdep_h)
@


1.614
log
@* sparcnbsd-tdep.c (sparc32nbsd_elf_init_abi): Set
solib_svr4_fetch_link_map_offsets to
svr4_ilp32_fetch_link_map_offsets.
* sparcobsd-tdep.c: Don't include "nbsd-tdep.h".
(sparc32obsd_init_abi): Set solib_svr4_fetch_link_map_offsets to
svr4_ilp32_fetch_link_map_offsets.
* Makefile.in (sparcobsd-tdep.o): Update dependencies.
@
text
@d2614 1
a2614 1
	$(filenames_h) $(inferior_h) $(readline_h)
@


1.613
log
@
2004-09-01  Jeff Johnston  <jjohnstn@@redhat.com>

        * observer.sh: Add struct so_list declaration.
        * Makefile.in: Add dependencies on observer.h for solib.c and
        breakpoint.c.
        * breakpoint.c (disable_breakpoints_in_unloaded_shlib): New
        function.
        (_initialize_breakpoint): Register
        disable_breakpoints_in_unloaded_shlib as an observer of the
        "solib unloaded" observation event.
        (re_enable_breakpoints_in_shlibs): For bp_shlib_disabled breakpoints,
        call decode_line_1 so unfound breakpoint errors are silent.
        * solib.c (update_solib_list): When a solib is discovered to have
        been unloaded by the program, notify all observers of the
        "solib unloaded" observation event.
@
text
@d2530 1
a2530 1
	$(trad_frame_h) $(gdb_assert_h) $(sparc_tdep_h) $(nbsd_tdep_h)
@


1.612
log
@2004-08-31  Andrew Cagney  <cagney@@gnu.org>

	* frame.c: Include "objfiles.h".
	(inside_main_func): New function.
	(get_prev_frame): Use new inside_main_func.
	* Makefile.in (frame.o): Update dependencies.
	* defs.h (inside_main_func): Delete declaration.
	* blockframe.c (inside_main_func): Delete function.
@
text
@d1722 1
a1722 1
	$(gdb_events_h)
d2454 2
a2455 1
	$(completer_h) $(filenames_h) $(exec_h) $(solist_h) $(readline_h)
@


1.611
log
@* infptrace.c: Remove #ifdef'ed out inclusion of gdb_stat.h.
Reorder includes.
(fetch_register, store_register): Remove prototypes.
(child_resume): Reorganize code and comments such that it is
grouped a bit more logically.
(attach): Explicitly compare errno against 0.
(detach): Likewise.  Use perror_with_name instead of
print_sys_errmsg.
* Makefile.in (infptrace.o): Update dependencies.
@
text
@d1888 1
a1888 1
	$(command_h) $(gdbcmd_h) $(observer_h)
@


1.610
log
@* infptrace.c: Include "gdb_assert.h".
(PTRACE_XFER_TYPE): Remove define.
(offsetof): Only define if U_REGS_OFFSET isn't defined.
(fetch_register, store_register): Rewrite to use PTRACE_TYPE_RET.
Tweak comment.
(fetch_inferior_registers, store_inferior_registers): Remove
redundant culry braces.  Tweak comment.  s/regno/regnum.
* Makefile.in (infptrace.o): Update dependencies.
@
text
@d2052 3
a2054 4
infptrace.o: infptrace.c $(defs_h) $(frame_h) $(inferior_h) $(target_h) \
	$(gdb_string_h) $(regcache_h) $(gdb_wait_h) $(command_h) \
	$(gdb_dirent_h) $(gdb_ptrace_h) $(gdbcore_h) $(gdb_stat_h) \
	$(gdb_assert_h)
@


1.609
log
@* gdb_ptrace.h: New file.
* infptrace.c: Include "gdb_ptrace.h" instead of <ptrace.h> or
<sys/ptrace.h>.
(PT_READ_I, PT_READ_D, PT_READ_U, PT_WRITE_I, PT_WRITE_D)
(PT_WRITE_U, PT_CONTINUE, PT_STEP, PT_KILL): Remove defines.
(attach): Don't define PT_ATTACH.
(detach): Don't define PT_DETACH.
* Makefile.in (gdb_ptrace_h): New variable.
(infptrace.o): Update dependencies.
@
text
@d2054 2
a2055 1
	$(gdb_dirent_h) $(gdb_ptrace_h) $(gdbcore_h) $(gdb_stat_h)
@


1.608
log
@* standalone.c: Remove file.
* Makefile.in (standalone.o): Remove dependency.
@
text
@d687 1
d2054 1
a2054 1
	$(gdb_dirent_h) $(gdbcore_h) $(gdb_stat_h)
@


1.607
log
@        * ppcnbsd-nat.c: Include <machine/frame.h>, <machine/pcb.h>,
        "gdbcore.h", "regcache.h", and "bsd-kvm.h".
        (ppcnbsd_supply_pcb): New function.
        (_initialize_ppcnbsd_nat): New prototype and function.
        * config/powerpc/nbsd.mh (NATDEPFILES): Add bsd-kvm.o.
        (LOADLIBES): New variable.
        * Makefile.in (ppcnbsd-nat.o): Update dependencies.
@
text
@a2550 2
standalone.o: standalone.c $(gdb_stat_h) $(defs_h) $(symtab_h) $(frame_h) \
	$(inferior_h) $(gdb_wait_h)
@


1.606
log
@* vax-nat.c: New file.
* vaxbsd-nat.c: Tweak comment.
* Makefile.in (ALLDEPFILES): Add vax-nat.c, vaxbsd-nat.c and
vaxnbsd-tdep.c.
(vax-nat.o): New dependency.
* configure.host (vax-*-bsd*, vax-*-ultrix*): Set gdb_host to vax.
(vax-*-ultrix2*): Remove.
* config/vax/vax.mh: New file.
* config/vax/nm-vax.h (vax_kernel_u_addr): New extern declaration.
(KERNEL_U_ADDR): Define as vax_kernel_u_addr.
(vax_register_u_addr): New prototype.
(REGISTER_U_ADDR): Define using vax_register_u_addr.
* config/vax/vaxult2.mh: Remove file.
* config/vax/vaxult.mh: Remove file.
* config/vax/vaxbsd.mh: Remove file.
* config/vax/vax.mt (TM_FILE): Remove.
* config/vax/tm-vaxbsd.h: Remove file.
@
text
@d2284 2
a2285 1
	$(ppc_tdep_h) $(ppcnbsd_tdep_h)
@


1.605
log
@2004-08-05  Andrew Cagney  <cagney@@gnu.org>

	* config/vax/xm-vax.h: Delete file.
	* Makefile.in (xm-vaxult.h, xm-vaxbsd.h): Delete.
	* config/vax/xm-vaxult2.h: Delete file.
	* config/djgpp/fnchange.lst: Do not fix xm-vaxult2.h.
	* config/vax/vaxult2.mh (XM_FILE): Delete.
	* config/vax/xm-vaxult.h: Delete file.
	* config/vax/vaxult.mh (XM_FILE): Delete.
	* config/vax/xm-vaxbsd.h: Delete file.
	* config/vax/vaxbsd.mh (XM_FILE): Delete.
@
text
@d1409 1
a1409 1
	vax-tdep.c \
d2643 1
@


1.604
log
@* Makefile.in: Remove embedded page breaks.
@
text
@a1192 7
# FIXME. These are not generated by "make depend" because they only are there
# for some machines.
# But these rules don't do what we want; we want to hack the foo.o: tm.h
# dependency to do the right thing.
xm-vaxult.h: xm-vax.h
xm-vaxbsd.h: xm-vax.h

@


1.603
log
@2004-08-04  Andrew Cagney  <cagney@@gnu.org>

	* Makefile.in: Update dependencies.
@
text
@d1478 1
a1478 1

d1551 1
a1551 1

@


1.602
log
@Change the layout of the PowerPC E500 raw register cache to allow
the lower 32-bit halves of the GPRS to be their own raw registers,
not pseudoregisters.
* ppc-tdep.h (struct gdbarch_tdep): Remove ppc_gprs_pseudo_p flag;
add ppc_ev0_upper_regnum flag.
* rs6000-tdep.c: #include "reggroups.h".
(spe_register_p): Recognize the ev upper half registers as SPE
registers.
(init_sim_regno_table): Build gdb->sim mappings for the upper-half
registers.
(e500_move_ev_register): New function.
(e500_pseudo_register_read, e500_pseudo_register_write): The 'ev'
vector registers are the pseudo-registers now, formed by splicing
together the gprs and the upper-half registers.
(e500_register_reggroup_p): New function.
(P): Macro deleted.
(P8, A4): New macro.
(PPC_EV_REGS, PPC_GPRS_PSEUDO_REGS): Macros deleted.
(PPC_SPE_GP_REGS, PPC_SPE_UPPER_GP_REGS, PPC_EV_PSEUDO_REGS): New
macros.
(registers_e500): Rearrange register set so that the raw register
set contains 32-bit GPRs and upper-half registers, and the SPE
vector registers become pseudo-registers.
(rs6000_gdbarch_init): Don't initialize tdep->ppc_gprs_pseudo_p;
it has been deleted.  Initialize ppc_ev0_upper_regnum.  Many other
register numbers are now the same for the E500 as they are for
other PowerPC variants.  Register e500_register_reggroup_p as the
register group function for the E500.
* Makefile.in (rs6000-tdep.o): Update dependencies.

Adapt PPC E500 native support to the new raw regcache layout.
* ppc-linux-nat.c (struct gdb_evrregset_t): Doc fixes.
(read_spliced_spe_reg, write_spliced_spe_reg): Deleted.
(fetch_spe_register, store_spe_register): Handle fetching/storing
all the SPE registers at once, if regno == -1.  These now take
over the job of fetch_spe_registers and store_spe_registers.
(fetch_spe_registers, store_spe_registers): Deleted.
(fetch_ppc_registers, store_ppc_registers): Fetch/store gprs
unconditionally; they're always raw.  Fetch/store SPE upper half
registers, if present, instead of ev registers.
(fetch_register, store_register): Remove sanity checks: gprs are
never pseudo-registers now, so we never need to even mention any
registers that are ever pseudoregisters.
@
text
@d627 1
a627 1
ada_lang_h = ada-lang.h $(value_h) $(gdbtypes_h)
d708 1
a708 1
infttrace_h = infttrace.h $(target_h)
a723 1
minimon_h = minimon.h
d738 1
d774 1
a774 1
tramp_frame_h = tramp-frame.h
d1601 11
a1611 12
ada-exp.o: ada-exp.c $(defs_h) $(expression_h) $(value_h) $(parser_defs_h) \
	$(language_h) $(ada_lang_h) $(bfd_h) $(symfile_h) $(objfiles_h) \
	$(frame_h) $(block_h) $(ada_lex_c)
ada-lang.o: ada-lang.c $(gdb_string_h) $(demangle_h) $(defs_h) $(symtab_h) \
	$(gdbtypes_h) $(gdbcmd_h) $(expression_h) $(parser_defs_h) \
	$(language_h) $(c_lang_h) $(inferior_h) $(symfile_h) $(objfiles_h) \
	$(breakpoint_h) $(gdbcore_h) $(ada_lang_h) $(ui_out_h) $(block_h) \
	$(infcall_h) $(dictionary_h)
ada-lex.o: ada-lex.c
ada-tasks.o: ada-tasks.c $(defs_h) $(command_h) $(value_h) $(language_h) \
	$(inferior_h) $(symtab_h) $(target_h) $(regcache_h) $(gdbcore_h) \
	$(gregset_h) $(ada_lang_h)
d1616 3
a1618 3
ada-valprint.o: ada-valprint.c $(defs_h) $(symtab_h) $(gdbtypes_h) \
	$(expression_h) $(value_h) $(demangle_h) $(valprint_h) $(language_h) \
	$(annotate_h) $(ada_lang_h) $(c_lang_h) $(infcall_h)
d1645 1
a1645 1
	$(elf_bfd_h) $(infcall_h) $(alpha_tdep_h)
d1649 1
a1649 1
	$(gdb_assert_h) $(amd64_tdep_h) $(amd64_nat_h)
d1658 2
a1659 2
	$(regcache_h) $(osabi_h) $(symtab_h) $(gdb_string_h) \
	$(amd64_tdep_h) $(solib_svr4_h)
d1682 2
a1683 2
	$(gdb_assert_h) $(sim_regno_h) $(osabi_h) $(version_h) \
	$(floatformat_h) $(gdbcore_h)
d1729 2
a1730 2
bsd-kvm.o: bsd-kvm.c $(defs_h) $(cli_cmds.h) $(command_h) $(value_h) \
	$(frame_h) $(regcache_h) $(target_h) $(gdb_assert_h) $(readline_h) \
d1771 1
a1771 1
	$(exec_h) $(readline_h) $(gdb_assert_h) $(observer_h)
d1849 1
a1849 1
	$(cp_support_h) $(gdb_string_h) $(gdb_assert_h) $(hashtab_h)
d1873 2
a1874 3
fbsd-proc.o: fbsd-proc.c $(defs_h) $(gdbcore_h) $(inferior_h) \
	$(regcache_h) $(regset_h) $(gdb_assert_h) $(gdb_string_h) \
	$(elf_bfd_h)
d1898 2
a1899 2
	$(osabi_h) $(elf_bfd_h) $(elf_frv_h) $(frv_tdep_h) \
	$(trad_frame_h) $(frame_unwind_h)
d1943 5
d1955 2
a1956 5
hppa-tdep.o: hppa-tdep.c $(defs_h) $(frame_h) $(bfd_h) $(inferior_h) \
	$(regcache_h) $(completer_h) $(osabi_h) $(gdb_assert_h) \
	$(arch_utils_h) $(symtab_h) $(dis_asm_h) $(trad_frame_h) \
	$(frame_unwind_h) $(frame_base_h) $(gdbcore_h) $(gdbcmd_h) \
	$(symfile_h) $(objfiles_h) $(hppa_tdep_h)
d1959 6
a1964 5
	$(frame_unwind_h) $(trad_frame_h) $(dwarf2_frame_h) $(hppa_tdep_h) \
	$(elf_common_h) $(value_h)
hppa-linux-nat.o: hppa-linux-nat.c $(defs_h) $(gdbcore_h) $(regcache_h) \
	$(gdb_string_h) $(inferior_h)
hppabsd-nat.o: hppabsd-nat.c $(defs_h) $(inferior_h) $(regcache_h) \
a1965 3
hppabsd-tdep.o: hppabsd-tdep.c $(defs_h) $(arch_utils_h) $(osabi_h) \
	$(regcache_h) $(regset_h) $(gdb_assert_h) $(gdb_string_h) \
	$(hppa_tdep_h) $(solib_svr4_h)
d1969 1
a1969 1
	$(somsolib_h) $(gdb_assert_h) $(gdb_string_h) $(hppa_tdep_h)
d2041 1
a2041 1
	$(elf_bfd_h) $(elf_h) $(dis_asm_h) $(infcall_h) $(ia64_tdep_h) \
d2067 2
a2068 2
	$(gdbcore_h) $(command_h) $(gdb_stat_h) $(gdb_wait_h) $(inflow_h) \
	$(observer_h)
d2071 1
a2071 1
	$(gdbcore_h) $(infttrace_h)
d2139 5
a2151 5
m68kbsd-nat.o: m68kbsd-nat.c $(defs_h) $(gdbcore_h) $(inferior_h) \
	$(regcache_h) $(gdb_assert_h) $(m68k_tdep_h) $(bsd_kvm_h)
m68kbsd-tdep.o: m68kbsd-tdep.c $(defs_h) $(arch_utils_h) $(osabi_h) \
	$(regcache_h) $(regset_h) $(gdb_assert_h) $(gdb_string_h) \
	$(m68k_tdep_h) $(solib_svr4_h)
d2154 2
a2155 2
	$(frame_base_h) $(frame_unwind_h) $(floatformat_h) $(symtab_h)\
	$(gdbcore_h) $(value_h) $(gdb_string_h) $(gdb_assert_h)	\
d2159 1
a2159 1
	$(gdb_assert_h) $(m88k_tdep_h)
d2163 1
a2163 1
	$(gdb_string_h) $(gdb_string_h) $(m88k_tdep_h)
d2256 2
a2257 2
observer.o: observer.c $(defs_h) $(observer_h) $(observer_inc) \
	$(command_h) $(gdbcmd_h)
d2290 2
a2291 2
ppcnbsd-nat.o: ppcnbsd-nat.c $(defs_h) $(inferior_h) $(ppc_tdep_h) \
	$(ppcnbsd_tdep_h) $(gdb_assert_h)
d2294 2
a2295 1
	$(ppcnbsd_tdep_h) $(nbsd_tdep_h) $(solib_svr4_h) $(gdb_assert)
d2300 1
a2300 1
        $(ppc_tdep_h) $(ppcobsd_tdep_h) $(solib_svr4_h)
d2399 3
a2401 2
	$(regcache_h) $(regset_g) $(doublest_h) $(value_h) $(parser_defs_h) \
	$(osabi_h) $(libbfd_h) $(coff_internal_h) $(libcoff_h) \
d2404 1
a2404 2
	$(frame_unwind_h) $(frame_base_h) $(infcall_h) $(sim_regno_h) \
	$(gdb_sim_ppc_h) $(reggroups_h)
d2607 1
a2607 1
	$(frame_base_h)
a2645 4
vax-tdep.o: vax-tdep.c $(defs_h) $(arch_utils_h) $(dis_asm_h) $(frame_h) \
	$(frame_base_h) $(frame_unwind_h) $(gdbcore_h) $(osabi_h) \
	$(regcache_h) $(regset_h) $(value_h) $(trad_frame_h) \
	$(gdb_string_h) $(vax_tdep_h)
d2650 4
d2883 1
a2883 1
	$(mi_getopt_h) $(ui_out_h) $(symtab_h) $(source_h)
d2975 2
a2976 2
	$(breakpoint_h) $(gdb_events_h) $(ui_out_h) $(top_h) $(readline_h) \
	$(tui_h) $(tui_hooks_h) $(tui_data_h) $(tui_layout_h) $(tui_io_h) \
d2978 1
a2978 1
	$(tui_winsource_h) $(gdb_curses_h)
d2985 2
a2986 2
	$(event_loop_h) $(event_top_h) $(command_h) $(top_h) $(readline_h) \
	$(tui_h) $(tui_data_h) $(tui_io_h) $(tui_command_h) $(tui_win_h) \
d2988 1
a2988 1
	$(gdb_curses_h)
@


1.601
log
@gdb/ChangeLog:
2004-07-20  Jim Blandy  <jimb@@redhat.com>

	Use a fixed register numbering when communicating with the PowerPC
	simulator.
	* ppc-tdep.h (struct gdbarch_tdep): New member: 'sim_regno'.
	* rs6000-tdep.c: #include "sim-regno.h" and "gdb/sim-ppc.h".
	(set_sim_regno, init_sim_regno_table, rs6000_register_sim_regno):
	New functions.
	(rs6000_gdbarch_init): Register rs6000_register_sim_regno.  Call
	init_sim_regno_table.
	* Makefile.in (gdb_sim_ppc_h): New variable.
	(rs6000-tdep.o): Update dependencies.

include/gdb/ChangeLog:
2004-07-20  Jim Blandy  <jimb@@redhat.com>

	* sim-ppc.h: New file.

sim/ppc/ChangeLog:
2004-07-20  Jim Blandy  <jimb@@redhat.com>

	Use a fixed register numbering when communicating with the PowerPC
	simulator.
	* sim_calls.c: #include "registers.h" and "gdb/sim-ppc.h"; do not
	include GDB's "defs.h".
	(gdb_register_name_table): New variable.
	(gdb_register_name_table_size): New enum constant.
	(gdb_register_name): New function.
	(sim_fetch_register, sim_store_register): Use gdb_register_name,
	instead of calling gdbarch_register_name.
	* Makefile.in (GDB_SIM_PPC_H): New variable.
	(DEFS_H): Delete variable.
	(sim_calls.o): Update dependencies.
@
text
@d2405 1
a2405 1
	$(gdb_sim_ppc_h)
@


1.600
log
@2004-08-02  Andrew Cagney  <cagney@@gnu.org>

	* dummy-frame.c: Include "gdb_string.h".
	(generic_save_call_dummy_addr, generic_push_dummy_frame)
	(generic_save_dummy_frame_tos): Delete.
	(dummy_frame_push): New function, replaces above.
	* dummy-frame.h: Update copyright.
	(dummy_frame_push): Declare.
	* frame.h (generic_save_dummy_frame_tos, generic_push_dummy_frame)
	(generic_save_call_dummy_addr): Delete declarations.
	* infcall.c: Include "dummy-frame.h".
	(call_function_by_hand): Add locals caller_regcache,
	caller_regcache_cleanup and dummy_id.  Replace push_dummy_frame
	with call to frame_save_as_regcache plus cleanup.  Delete calls to
	generic_save_call_dummy_addr and generic_save_dummy_frame_tos.
	Move clear_proceed_status to just before the resume, add call to
	dummy_frame_push (discard cleanup).
	* Makefile.in (infcall.o): Add $(dummy_frame_h).
	(dummy-frame.o): Add $(gdb_string_h).
@
text
@d596 1
d2404 2
a2405 1
	$(frame_unwind_h) $(frame_base_h) $(infcall_h)
@


1.599
log
@* mips-nat.c: Remove file.
* Makefile.in (ALLDEPFILES): Remove mips-nat.c
(mips-nat.o): Remove dependency.
@
text
@d1831 1
a1831 1
	$(command_h) $(gdbcmd_h)
d2046 2
a2047 1
	$(objfiles_h) $(gdbcmd_h) $(command_h) $(gdb_string_h) $(infcall_h)
@


1.598
log
@2004-07-29  Andrew Cagney  <cagney@@gnu.org>

	Fix PR i18n/761.
	* Makefile.in (.SUFFIXES): Add po .gmo, and .pox.
	(.PHONY): Add all-po install-po, uninstall-po, clean-po,
	$(PACKAGE).pot and update-po.
	(all-po, .po.gmo, .po.pox, install-po, $(PACKAGE).pot)
	(po/$(PACKAGE).pot, clean-po, uninstall-po, install-po)
	(update-po): New rules.
	(localedir): Define using autoconf.
	(diststuff): Add $(PACKAGE).pot and $(CATALOGS)
	(GDB_CFLAGS): Define LOCALEDIR using $(localedir).
	(XGETTEXT, GMSGFMT, MSGMERGE, PACKAGE, CATALOGS): Define.
	* configure.in: Generate CATALOGS and LINGUAS from contents of
	src/gdb/po/ directory.  Set @@localedir@@ in Makefile.in.
	* configure: Re-generate.
	* po/gdbtext: New file
@
text
@a1387 1
	mips-nat.c \
a2200 1
mips-nat.o: mips-nat.c $(defs_h) $(inferior_h) $(gdbcore_h) $(regcache_h)
@


1.597
log
@2004-07-29  Andrew Cagney  <cagney@@gnu.org>

	* Makefile.in (CONFIG_CLEAN): Delete duplicate definition.
@
text
@d32 1
d69 7
d328 1
a328 1
GDB_CFLAGS = -I. -I$(srcdir) -I$(srcdir)/config -DLOCALEDIR="\"$(prefix)/share/locale\"" $(DEFS)
d1265 1
a1265 1
diststuff: $(DISTSTUFF)
d1478 74
@


1.596
log
@* sparc64nbsd-nat.c: Include "regcache.h", <sys/types.h>,
<machine/pcb.h> and "bsd-kvm.h".
(sparc64nbsd_supply_pcb): New function.
(_initialize_sparc64nbsd_nat): Renamed from
_initialize_sparcnbsd_nat.  Enable libkvm interface.
* Makefile.in (sparc64nbsd-nat.o): Update dependencies.
* config/sparc/nbsd64.mh (NATDEPFILES): Add bsd-kvm.o
(LOADLIBES): New variable.
@
text
@a308 1
CONFIG_CLEAN= @@CONFIG_CLEAN@@
@


1.595
log
@* vaxbsd-nat.c: Include <sys/types.h>, <machine/pcb.h> and
"bsd-kvm.h".
(vaxbsd_supply_pcb): New function.
(_initialize_vaxbsd_nat): New prototype and function.
* config/vax/nbsdaout.mh (NATDEPFILES): Add bsd-kvm.o, solib.o and
solib-sunos.o.
(LOADLIBES): New variable.
* config/vax/nbsdelf.mh (NATDEPFILES): Add bsd-kvm.o.
(LOADLIBES): New variable.
* config/vax/obsd.mh (NATDEPFILES): Add bsd-kvm.o.
(LOADLIBES): New variable.
* Makefile.in (vaxbsd-nat.o): Update dependencies.
@
text
@d2421 2
a2422 2
sparc64nbsd-nat.o: sparc64nbsd-nat.c $(defs_h) $(sparc64_tdep_h) \
	$(sparc_nat_h)
@


1.594
log
@* m68kbsd-nat.c: Include "gdbcore.h", <sys/types.h>,
<machine/pcb.h> and "bsd-kvm.h".
(PCB_REGS_FP, PCB_REGS_SP): Define if not already defined.
(m68kbsd_supply_pcb): New function.
(_initialize_m68kbsd_nat): New prototype and function.
* Makefile.in (m68kbsd-nat.o): Update dependencies.
* config/m68k/nbsdelf.mh (NATDEPFILES): Add bsd-kvm.o.
(LOADLIBES): New variable.
* config/m68k/obsd.mh (NATDEPFILES): Add bsd-kvm.o.
(LOADLIBES): New variable.
@
text
@d2569 2
a2570 1
vaxbsd-nat.o: vaxbsd-nat.c $(defs_h) $(inferior_h) $(regcache_h) $(vax_tdep_h)
@


1.594.4.1
log
@gdb/ChangeLog:
2004-08-25  Jim Blandy  <jimb@@redhat.com>

	Merge changes from trunk:

	2004-08-09  Jim Blandy  <jimb@@redhat.com>

	* rs6000-tdep.c (set_sim_regno, init_sim_regno_table,
	rs6000_register_sim_regno): Doc fixes.

	2004-08-04  Jim Blandy  <jimb@@redhat.com>

	* ppc-linux-nat.c (fetch_register): Replace 'gdb_assert (0)' with
	a call to 'internal_error', with a more helpful error message.
	* rs6000-tdep.c (e500_pseudo_register_read,
	e500_pseudo_register_write, rs6000_store_return_value): Same.

	Change the layout of the PowerPC E500 raw register cache to allow
	the lower 32-bit halves of the GPRS to be their own raw registers,
	not pseudoregisters.
	* ppc-tdep.h (struct gdbarch_tdep): Remove ppc_gprs_pseudo_p flag;
	add ppc_ev0_upper_regnum flag.
	* rs6000-tdep.c: #include "reggroups.h".
	(spe_register_p): Recognize the ev upper half registers as SPE
	registers.
	(init_sim_regno_table): Build gdb->sim mappings for the upper-half
	registers.
	(e500_move_ev_register): New function.
	(e500_pseudo_register_read, e500_pseudo_register_write): The 'ev'
	vector registers are the pseudo-registers now, formed by splicing
	together the gprs and the upper-half registers.
	(e500_register_reggroup_p): New function.
	(P): Macro deleted.
	(P8, A4): New macro.
	(PPC_EV_REGS, PPC_GPRS_PSEUDO_REGS): Macros deleted.
	(PPC_SPE_GP_REGS, PPC_SPE_UPPER_GP_REGS, PPC_EV_PSEUDO_REGS): New
	macros.
	(registers_e500): Rearrange register set so that the raw register
	set contains 32-bit GPRs and upper-half registers, and the SPE
	vector registers become pseudo-registers.
	(rs6000_gdbarch_init): Don't initialize tdep->ppc_gprs_pseudo_p;
	it has been deleted.  Initialize ppc_ev0_upper_regnum.  Many other
	register numbers are now the same for the E500 as they are for
	other PowerPC variants.  Register e500_register_reggroup_p as the
	register group function for the E500.
	* Makefile.in (rs6000-tdep.o): Update dependencies.

	Adapt PPC E500 native support to the new raw regcache layout.
	* ppc-linux-nat.c (struct gdb_evrregset_t): Doc fixes.
	(read_spliced_spe_reg, write_spliced_spe_reg): Deleted.
	(fetch_spe_register, store_spe_register): Handle fetching/storing
	all the SPE registers at once, if regno == -1.  These now take
	over the job of fetch_spe_registers and store_spe_registers.
	(fetch_spe_registers, store_spe_registers): Deleted.
	(fetch_ppc_registers, store_ppc_registers): Fetch/store gprs
	unconditionally; they're always raw.  Fetch/store SPE upper half
	registers, if present, instead of ev registers.
	(fetch_register, store_register): Remove sanity checks: gprs are
	never pseudo-registers now, so we never need to even mention any
	registers that are ever pseudoregisters.

	Use a fixed register numbering when communicating with the PowerPC
	simulator.
	* ppc-tdep.h (struct gdbarch_tdep): New member: 'sim_regno'.
	* rs6000-tdep.c: #include "sim-regno.h" and "gdb/sim-ppc.h".
	(set_sim_regno, init_sim_regno_table, rs6000_register_sim_regno):
	New functions.
	(rs6000_gdbarch_init): Register rs6000_register_sim_regno.  Call
	init_sim_regno_table.
	* Makefile.in (gdb_sim_ppc_h): New variable.
	(rs6000-tdep.o): Update dependencies.

	2004-08-02  Andrew Cagney  <cagney@@gnu.org>

	Replace DEPRECATED_REGISTER_RAW_SIZE with register_size.
	* rs6000-tdep.c (rs6000_push_dummy_call)
	(rs6000_extract_return_value): Use register_size.
	...
	* ppc-linux-nat.c (fetch_altivec_register, fetch_register)
	(supply_vrregset, store_altivec_register, fill_vrregset): Ditto.

	2004-07-20  Jim Blandy  <jimb@@redhat.com>

	* rs6000-tdep.c (rs6000_gdbarch_init): The register set used for
	bfd_mach_ppc has no segment registers.

	Include PowerPC SPR numbers for special-purpose registers.
	* rs6000-tdep.c (struct reg): Add new member, 'spr_num'.
	(R, R4, R8, R16, F, P, R32, R64, R0): Include value for
	new member in initializer.
	(S, S4, SN4, S64): New macros for defining special-purpose
	registers.
	(PPC_UISA_SPRS, PPC_UISA_NOFP_SPRS, PPC_OEA_SPRS, registers_power,
	registers_403, registers_403GC, registers_505, registers_860,
	registers_601, registers_602, registers_603, registers_604,
	registers_750, registers_e500): Use them.

	* rs6000-tdep.c (rs6000_gdbarch_init): Delete variable 'power';
	replace references with expression used to initialize variable.

	2004-07-16  Jim Blandy  <jimb@@redhat.com>

	* ppc-tdep.h (ppc_spr_asr): Add missing OEA SPR.
        (ppc_spr_mi_dbcam, ppc_spr_mi_dbram0, ppc_spr_mi_dbram1)
	(ppc_spr_md_cam, ppc_spr_md_ram0, ppc_spr_md_ram1): Add
	missing MPC823 SPRs.
	(ppc_spr_m_twb): Renamed from ppc_spr_md_twb; the old name was
	incorrect.  (This was corrected in GDB's register name tables on
	2004-07-14.)

	* rs6000-tdep.c (registers_602): Correct register name: "esassr"
	should be "esasrr" ("ESA Save and Restore Register").

	2004-07-15  Jim Blandy  <jimb@@redhat.com>

	* ppc-tdep.h (struct gdbarch_tdep): New member: ppc_sr0_regnum.
	* rs6000-tdep.c (rs6000_gdbarch_init): Initialize it.

	2004-07-14  Jim Blandy  <jimb@@redhat.com>

	* rs6000-tdep.c (COMMON_UISA_NOFP_REGS): Delete; unused.

	* ppc-tdep.h (ppc_num_vrs): New enum constant.

	* ppc-tdep.h (ppc_num_srs): New enum constant.

	* ppc-tdep.h (ppc_spr_mq, ppc_spr_xer, ppc_spr_rtcu, ppc_spr_rtcl)
	(ppc_spr_lr, ppc_spr_ctr, ppc_spr_cnt, ppc_spr_dsisr, ppc_spr_dar)
	(ppc_spr_dec, ppc_spr_sdr1, ppc_spr_srr0, ppc_spr_srr1)
	(ppc_spr_eie, ppc_spr_eid, ppc_spr_nri, ppc_spr_sp, ppc_spr_cmpa)
	(ppc_spr_cmpb, ppc_spr_cmpc, ppc_spr_cmpd, ppc_spr_icr)
	(ppc_spr_der, ppc_spr_counta, ppc_spr_countb, ppc_spr_cmpe)
	(ppc_spr_cmpf, ppc_spr_cmpg, ppc_spr_cmph, ppc_spr_lctrl1)
	(ppc_spr_lctrl2, ppc_spr_ictrl, ppc_spr_bar, ppc_spr_vrsave)
	(ppc_spr_sprg0, ppc_spr_sprg1, ppc_spr_sprg2, ppc_spr_sprg3)
	(ppc_spr_ear, ppc_spr_tbl, ppc_spr_tbu, ppc_spr_pvr)
	(ppc_spr_spefscr, ppc_spr_ibat0u, ppc_spr_ibat0l, ppc_spr_ibat1u)
	(ppc_spr_ibat1l, ppc_spr_ibat2u, ppc_spr_ibat2l, ppc_spr_ibat3u)
	(ppc_spr_ibat3l, ppc_spr_dbat0u, ppc_spr_dbat0l, ppc_spr_dbat1u)
	(ppc_spr_dbat1l, ppc_spr_dbat2u, ppc_spr_dbat2l, ppc_spr_dbat3u)
	(ppc_spr_dbat3l, ppc_spr_ic_cst, ppc_spr_ic_adr, ppc_spr_ic_dat)
	(ppc_spr_dc_cst, ppc_spr_dc_adr, ppc_spr_dc_dat, ppc_spr_dpdr)
	(ppc_spr_dpir, ppc_spr_immr, ppc_spr_mi_ctr, ppc_spr_mi_ap)
	(ppc_spr_mi_epn, ppc_spr_mi_twc, ppc_spr_mi_rpn, ppc_spr_mi_cam)
	(ppc_spr_mi_ram0, ppc_spr_mi_ram1, ppc_spr_md_ctr, ppc_spr_m_casid)
	(ppc_spr_md_ap, ppc_spr_md_epn, ppc_spr_md_twb, ppc_spr_md_twc)
	(ppc_spr_md_rpn, ppc_spr_m_tw, ppc_spr_md_dbcam, ppc_spr_md_dbram0)
	(ppc_spr_md_dbram1, ppc_spr_ummcr0, ppc_spr_upmc1, ppc_spr_upmc2)
	(ppc_spr_usia, ppc_spr_ummcr1, ppc_spr_upmc3, ppc_spr_upmc4)
	(ppc_spr_zpr, ppc_spr_pid, ppc_spr_mmcr0, ppc_spr_pmc1)
	(ppc_spr_sgr, ppc_spr_pmc2, ppc_spr_dcwr, ppc_spr_sia)
	(ppc_spr_mmcr1, ppc_spr_pmc3, ppc_spr_pmc4, ppc_spr_sda)
	(ppc_spr_tbhu, ppc_spr_tblu, ppc_spr_dmiss, ppc_spr_dcmp)
	(ppc_spr_hash1, ppc_spr_hash2, ppc_spr_icdbdr, ppc_spr_imiss)
	(ppc_spr_esr, ppc_spr_icmp, ppc_spr_dear, ppc_spr_rpa)
	(ppc_spr_evpr, ppc_spr_cdbcr, ppc_spr_tsr, ppc_spr_602_tcr)
	(ppc_spr_403_tcr, ppc_spr_ibr, ppc_spr_pit, ppc_spr_esasrr)
	(ppc_spr_tbhi, ppc_spr_tblo, ppc_spr_srr2, ppc_spr_sebr)
	(ppc_spr_srr3, ppc_spr_ser, ppc_spr_hid0, ppc_spr_dbsr)
	(ppc_spr_hid1, ppc_spr_iabr, ppc_spr_dbcr, ppc_spr_iac1)
	(ppc_spr_dabr, ppc_spr_iac2, ppc_spr_dac1, ppc_spr_dac2)
	(ppc_spr_l2cr, ppc_spr_dccr, ppc_spr_ictc, ppc_spr_iccr)
	(ppc_spr_thrm1, ppc_spr_pbl1, ppc_spr_thrm2, ppc_spr_pbu1)
	(ppc_spr_thrm3, ppc_spr_pbl2, ppc_spr_fpecr, ppc_spr_lt)
	(ppc_spr_pir, ppc_spr_pbu2): New enum constants for PowerPC
	special-purpose register numbers.

	* rs6000-tdep.c (registers_860): Correct register name.  (No PPC
	manual mentions 'md_twb', but many mention 'm_twb', and at that
	point in the register list.)

include/gdb/ChangeLog:
2004-08-04  Andrew Cagney  <cagney@@gnu.org>

	* sim-ppc.h: Add extern "C" wrapper.
	(enum sim_ppc_regnum): Add full list of SPRs.

2004-08-04  Jim Blandy  <jimb@@redhat.com>

	* sim-ppc.h: New file.

sim/ppc/ChangeLog:
2004-08-04  Andrew Cagney  <cagney@@gnu.org>
	    Jim Blandy <jimb@@redhat.com>

	* sim_callbacks.h (simulator): Declare.
	* Makefile.in (gdb-sim.o): New rule.
	(MAIN_SRC, GDB_OBJ): Add gdb-sim.o, gdb-sim.c.
	(DEFS_H): Delete.
	(GDB_SIM_PPC_H): Define.
	* gdb-sim.c: New file.
	* sim_calls.c: Do not include "defs.h".
	(simulator): Drop static.
	(sim_store_register, sim_fetch_register): Delete.
@
text
@a588 1
gdb_sim_ppc_h =	$(INCLUDE_DIR)/gdb/sim-ppc.h
d2319 1
a2319 1
	$(regcache_h) $(regset_h) $(doublest_h) $(value_h) $(parser_defs_h) \
d2323 1
a2323 2
	$(frame_unwind_h) $(frame_base_h) $(infcall_h) $(sim_regno_h) \
	$(gdb_sim_ppc_h) $(reggroups_h)
@


1.594.4.2
log
@Allow access to all 64 bits of the SPE GPR's in multi-threaded
programs.
* ppc-tdep.h (struct speregset): New struct type.
* ppc-linux-tdep.c: #include "gdb_assert.h".
(ppc_linux_supply_speregset, ppc_linux_collect_speregset): New
functions.
(ppc_linux_speregset): New structure.
(ppc_linux_init_abi): Describe how to pass the full 64-bit values
of the SPE GPRs across the thread-db interface.
* ppc-linux-nat.c (struct gdb_evrregset_t): Doc fix.
* Makefile.in (ppc-linux-tdep.o): Update dependencies.

Allow targets to specify an extended register set, to be passed
through libthread_db via its 'xregs' functions.
* gdbarch.sh (XREGS_REGSET, XREGS_SIZE, XREGS_NAME): New gdbarch
members.
* gdbarch.c, gdbarch.h: Regenerated.
* proc-service.c: #include "regset.h" and "regcache.h".
(ps_lgetxregsize, ps_lgetxregs, ps_lsetxregs): Fill in real
implementations of these functions.
* thread-db.c: #include "regset.h".
(td_thr_getxregsize_p, td_thr_getxregs_p, td_thr_setxregs_p): New
variables.
(thread_db_load): Initialize them.
(warned_xregs_not_implemented): New variable.
(thread_db_new_objfile): Clear it here.
(thread_db_fetch_registers, thread_db_store_registers): Supply and
collect the xregset, too, if the architecture says it has one, and
libthread_db seems to be able to support it.
* Makefile.in (proc-service.o, thread-db.o): Update dependencies.
@
text
@d2211 1
a2211 2
	$(solib_svr4_h) $(ppc_tdep_h) $(trad_frame_h) $(frame_unwind_h) \
	$(gdb_assert_h)
d2239 1
a2239 1
	$(symtab_h) $(target_h) $(regset_h) $(regcache_h) $(gregset_h)
d2510 1
a2510 2
	$(symfile_h) $(objfiles_h) $(target_h) $(regset_h) $(regcache_h) \
	$(solib_svr4_h)
@


1.594.4.3
log
@* rs6000-tdep.c: #include "dwarf2-frame.h".
(rs6000_dwarf2_reg_to_regnum): Recognize 65 as another number for lr.
(rs6000_gdbarch_init): Hook in dwarf2_frame_sniffer.
* Makefile.in (rs6000-tdep.o): Update dependencies.
@
text
@d2326 1
a2326 1
	$(gdb_sim_ppc_h) $(reggroups_h) $(dwarf2_frame_h)
@


1.593
log
@* bsd-kvm.c: Include "cli/cli-cmds.h", "command.h", "value.h" and
<sys/proc.h>.
(bsd_kvm_cmdlist): New variable.
(bsd_kvm_cmd, bsd_kvm_proc_cmd, bsd_kvm_pcb_cmd): New functions.
(bsd_kvm_add_target): Register "kvm" command prefix, "kvm pcb"
command and "kvm proc" command.
* Makefile.in (bsd-kvm.o): Update dependencies.
@
text
@d2067 2
a2068 2
m68kbsd-nat.o: m68kbsd-nat.c $(defs_h) $(inferior_h) $(regcache_h) \
	$(gdb_assert_h) $(m68k_tdep_h)
@


1.592
log
@* Makefile.in (gdb_callback_h): Renamed from callback_h to the
name actually used in the dependency lists.
@
text
@d1649 3
a1651 2
bsd-kvm.o: bsd-kvm.c $(defs_h) $(frame_h) $(regcache_h) $(target_h) \
	$(gdb_assert_h) $(readline_h) $(bsd_kvm_h)
@


1.591
log
@* i386nbsd-nat.c: New file.
* Makefile.in (ALLDEPFILES): Add i386nbsd-nat.c, i386nbsd-tdep.c,
i386obsd-nat.c and i386obsd-tdep.c.
(i386nbsd-nat.o): New dependency.
* config/i386/obsd.mh (NATDEPFILES): Add i386nbsd-nat.o and
bsd-kvm.o.
(LOADLIBES): New variable.
* config/i386/nbsdelf.mh (NATDEPFILES): Add i386nbsd-nat.o and
bsd-kvm.o.
(LOADLIBES): New variable.
@
text
@a563 1
callback_h =	$(INCLUDE_DIR)/gdb/callback.h
d585 1
@


1.590
log
@* amd64fbsd-nat.c: Don't include <sys/procfs.h> and "gregset.h".
(gregset_t, fpregset_t): Remove typedefs.
(REG_OFFSET): Rename argument.
(amd64bsd_r_reg_offset): Rename from reg_offset.
(supply_gregset, fill_gregset, supply_fpregset, fill_fpregset):
Remove functions.
(_initialize_amd64fbsd_nat): Use amd64fbsd64_r_reg_offset instead
of reg_offset.
* Makefile.in (amd64fbsd-nat.o): Update dependencies.
@
text
@d1367 1
d1917 2
@


1.589
log
@Add OpenBSD/hppa support.
* NEWS (New native configurations): Mention OpenBSD/hppa.
* hppabsd-nat.c, hppabsd-tdep.c, config/pa/obsd.mh,
config/pa/obsd.mt, config/pa/nm-obsd.h, config/pa/tm-bsd.h: New
files.
* Makefile.in (ALLDEPFILES): Add hppabsd-nat.c and hppabsd-tdep.c.
(hppabsd-nat.o, hppabsd-tdep.c): New dependencies.
* configure.host: Add hppa*-*-openbsd*.
* configure.tgt: Add hppa*-*-openbsd*.
@
text
@d1568 1
a1568 1
	$(gdb_assert_h) $(gregset_h) $(amd64_tdep_h) $(amd64_nat_h)
@


1.588
log
@2004-06-20  Andrew Cagney  <cagney@@gnu.org>

	* gdbarch.sh (RETURN_VALUE): Default to legacy_return_value.
	* gdbarch.h, gdbarch.c: Re-generate.
	* Makefile.in (arch-utils.o): Update dependencies.
	* values.c (using_struct_return): Move code calling
	USE_STRUCT_CONVENTION to legacy_return_value, simplify.
	* stack.c (return_command): Move code calling STORE_RETURN_VALUE
	to legacy_return_value, simplify.
	* infcmd.c (print_return_value): Move code calling
	DEPRECATED_EXTRACT_STRUCT_VALUE_ADDRESS and EXTRACT_RETURN_VALUE
	to legacy_return_value, simplify.
	* infcall.c (call_function_by_hand): Move code calling
	EXTRACT_RETURN_VALUE to legacy_return_value, simplify.
	* arch-utils.c: Update copyright.  Include "gdbcore.h".
	(legacy_return_value): New function.
	* arch-utils.h: Update copyright.
	(legacy_return_value): Declare.
@
text
@d1363 1
d1880 5
@


1.587
log
@2004-06-14  Randolph Chung  <tausq@@debian.org>

	* Makefile.in (hppa-hpux-tdep.o): Update dependency.
	* hppa-hpux-tdep.c (hp_cxx_exception_support_initialized): Make
	static.
	(hppa_hpux_inferior_created): New function.
	(hppa_hpux_init_abi): Register observer.
	* symfile.c (hp_cxx_exception_support_initialized)
	(RESET_HP_UX_GLOBALS): Remove HPUXHPPA specific hacks.
	(symbol_file_add_main_1, symbol_file_clear): Likewise.
@
text
@d1601 1
a1601 1
	$(floatformat_h)
@


1.586
log
@* Makefile.in (check//%): New.
@
text
@d1867 1
a1867 1
	$(hppa_tdep_h)
@


1.585
log
@2004-06-06  Randolph Chung  <tausq@@debian.org>

	* hppa-tdep.h (struct value): Forward declaration.
	(gdbarch_tdep): Define tdep find_global_pointer method.
	* hppa-tdep.c (hppa32_push_dummy_call): Find the global pointer
	associated with the function we are trying to call, and write it
	to the gp register.
	(hppa32_convert_from_funct_ptr_addr): New function.
	(hppa_find_global_pointer): New function.
	(hppa_gdbarch_init): Set default find_global_pointer method; set
	convert_from_func_ptr_addr method.
	* hppa-linux-tdep.c (hppa_linux_find_global_pointer): New function.
	(hppa_linux_init_abi): Set find_global_pointer method.
	* Makefile.in (hppa-linux-tdep.o): Add value.h dependency.
@
text
@d959 28
@


1.584
log
@2004-06-06  Randolph Chung  <tausq@@debian.org>

	* gdbarch.sh (PUSH_DUMMY_CALL): Change CORE_ADDR func_addr argument
	to struct value *function.
	* gdbarch.c: Regenerate.
	* gdbarch.h: Likewise.
	* infcall.c (call_function_by_hand): Pass entire function value
	to push_dummy_call.

	* Makefile.in (alpha-tdep.o, frv-tdep.o, ia64-tdep.o, mips-tdep.o)
	(ppc-sysv-tdep.o, rs6000-tdep.o): Update dependencies.
	* alpha-tdep.c (alpha_push_dummy_call): Update call signature.
	* amd64-tdep.c (amd64_push_dummy_call): Likewise.
	* arm-tdep.c (arm_push_dummy_call): Likewise.
	* avr-tdep.c (avr_push_dummy_call): Likewise.
	* cris-tdep.c (cris_push_dummy_call): Likewise.
	* d10v-tdep.c (d10v_push_dummy_call): Likewise.
	* frv-tdep.c (frv_push_dummy_call): Likewise.
	* h8300-tdep.c (h8300_push_dummy_call): Likewise.
	* hppa-tdep.c (hppa32_push_dummy_call)
	(hppa64_push_dummy_call): Likewise.
	* i386-tdep.c (i386_push_dummy_call): Likewise.
	* ia64-tdep.c (ia64_push_dummy_call): Likewise.
	* m32r-tdep.c (m32r_push_dummy_call): Likewise.
	* m68hc11-tdep.c (m68hc11_push_dummy_call): Likewise.
	* m68k-tdep.c (m68k_push_dummy_call): Likewise.
	* m88k-tdep.c (m88k_push_dummy_call): Likewise.
	* mips-tdep.c (mips_eabi_push_dummy_call, mips_n32n64_push_dummy_call)
	(mips_o32_push_dummy_call, mips_o64_push_dummy_call): Likewise.
	* ppc-sysv-tdep.c (ppc_sysv_abi_push_dummy_call)
	(ppc64_sysv_abi_push_dummy_call): Likewise.
	* ppc-tdep.h (ppc_sysv_abi_push_dummy_call)
	(ppc64_sysv_abi_push_dummy_call): Likewise.
	* rs6000-tdep.c (rs6000_push_dummy_call): Likewise.
	* s390-tdep.c (s390_push_dummy_call): Likewise.
	* sh-tdep.c (sh_push_dummy_call_fpu)
	(sh_push_dummy_call_nofpu): Likewise.
	* sparc-tdep.c (sparc32_push_dummy_call): Likewise.
	* sparc64-tdep.c (sparc64_push_dummy_call): Likewise.
	* vax-tdep.c (vax_push_dummy_call): Likewise.
@
text
@d1848 1
a1848 1
	$(elf_common_h) 
@


1.583
log
@* i386bsd-nat.c: Don't include "gregset.h".
(supply_gregset, fill_gregset): Make static.
(supply_fpregset, fill_fpregset): Remove.
* Makefile.in (i386bsd-nat.o): Update dependencies.
@
text
@d1535 1
a1535 1
	$(elf_bfd_h) $(alpha_tdep_h)
d1794 1
a1794 1
	$(elf_bfd_h) $(elf_frv_h) $(osabi_h) $(frv_tdep_h)
d1924 1
a1924 1
	$(elf_bfd_h) $(elf_h) $(dis_asm_h) $(ia64_tdep_h) \
d2099 1
a2099 1
	$(frame_unwind_h) $(frame_base_h) $(trad_frame_h)
d2185 1
a2185 1
	$(ppc_tdep_h) $(target_h) $(objfiles_h)
d2285 1
a2285 1
	$(frame_unwind_h) $(frame_base_h)
@


1.582
log
@* fbsd-proc.c: Include "regcache.h", "regset.h" and
"gdb_assert.h".  Con't include "gregset.h".
(fbsd_make_corefile_notes): Use regset-based core file support
instead off fill_gregset and fill_fpregset.
* Makefile.in (fbsd-proc.o): Update dependencies.
@
text
@d1858 1
a1858 1
	$(gdb_assert_h) $(gregset_h) $(i386_tdep_h) $(i387_tdep_h)
@


1.581
log
@2004-05-25  Randolph Chung  <tausq@@debian.org>

	* hppa-hpux-tdep.c (offsetof): Define.
	(hppa_hpux_pc_in_sigtramp, hppa32_hpux_frame_saved_pc_in_sigtramp)
	(hppa32_hpux_frame_base_before_sigtramp)
	(hppa32_hpux_frame_find_saved_regs_in_sigtramp)
	(hppa64_hpux_frame_saved_pc_in_sigtramp)
	(hppa64_hpux_frame_base_before_sigtramp)
	(hppa64_hpux_frame_find_saved_regs_in_sigtramp): Remove unused
	functions.
	(struct hppa_hpux_sigtramp_unwind_cache, hppa_hpux_tramp_reg)
	(hppa_hpux_sigtramp_frame_unwind_cache)
	(hppa_hpux_sigtramp_frame_this_id)
	(hppa_hpux_sigtramp_frame_prev_register)
	(hppa_hpux_sigtramp_frame_unwind)
	(hppa_hpux_sigtramp_unwind_sniffer): New signal trampoline unwinder.
	(hppa_hpux_init_abi): Register sigtramp unwinder.
	* Makefile.in (hppa-hpux-tdep.o): Update dependencies.
@
text
@d1763 2
a1764 1
	$(gdb_string_h) $(elf_bfd_h) $(gregset_h)
@


1.580
log
@2004-05-25  Andrew Cagney  <cagney@@gnu.org>

	* symfile.h (symbol_file_add_from_memory): Delete declaration.
	* symfile-mem.h: Delete file.
	* symfile-mem.c: Do not include "symfile-mem.h".
	(symbol_file_add_from_memory): Make static. Use "struct bfd" and
	"struct bfd_section".  When an error do not bother returning NULL.
	(add_symbol_file_from_memory_command): Use "struct bfd" and
	"struct bfd_section".
	* Makefile.in (symfile_mem_h): Delete.
	(symfile-mem.o): Update dependencies.
@
text
@d1836 3
a1838 1
	$(osabi_h) $(gdb_string_h) $(frame_h) $(hppa_tdep_h)
@


1.579
log
@2004-05-25  Andrew Cagney  <cagney@@gnu.org>

	* inftarg.c: Include "observer.h".
	(child_attach, child_create_inferior): Notify inferior_created.
	* corelow.c: Include "observer.h".
	(core_open): Notify inferior_created.
	* Makefile.in (inftarg.o, corelow.o): Update dependencies.
@
text
@a759 1
symfile_mem_h = symfile-mem.h
d2448 1
a2448 2
	$(objfiles_h) $(gdbcmd_h) $(target_h) $(value_h) $(symfile_h) \
	$(symfile_mem_h)
@


1.578
log
@Add OpenBSD/m88k support.
* NEWS (New native configurations): Mention OpenBSD/m88k.
* m88k-tdep.c, m88k-tdep.h, m88kbsd-nat.c, config/m88k/nm-obsd.h,
config/m88k/obsd.mh, config/m88k/obsd.mt: New files.
* Makefile.in (m88k_tdep_h): New variable.
(ALLDEPFILES): Add m88k-tdep.c and m88kbsd-nat.c.
(m88kbsd-nat.o, m88k-tdep.o): New dependencies.
* configure.host: Add m88*-*-openbsd*.
* configure.tgt: Add m88*-*-openbsd*.
@
text
@d1661 1
a1661 1
	$(exec_h) $(readline_h) $(gdb_assert_h)
d1947 2
a1948 1
	$(gdbcore_h) $(command_h) $(gdb_stat_h) $(gdb_wait_h) $(inflow_h)
@


1.577
log
@* dpx2-nat.c: Remove file.
* Makefile.in (ALLDEPFILES): Remove dpx2-nat.c.
(dpx2-nat.o): Remove dependencies.
@
text
@d710 1
d1349 1
d2037 6
@


1.576
log
@* amd64obsd-nat.c: Include "gdbcore.h", "regcache.h",
<sys/types.h>, <machine/frame.h>, <machine/pcb.h> and "bsd-kvm.h".
(amd64obsd_supply_pcb): New function.
(_initialize_amd64obsd_nat): Enable libkvm interface.
* Makefile.in (amd64obsd-nat.o): Update dependencies.
* config/i386/obsd64.mh (NATDEPFILES): Add bsd-kvm.o
(LOADLIBES): New variable.
@
text
@d1329 1
a1329 1
	dcache.c dpx2-nat.c exec.c fork-child.c \
a1714 1
dpx2-nat.o: dpx2-nat.c $(defs_h) $(gdbcore_h) $(gdb_string_h)
@


1.575
log
@* sparcnbsd-nat.c: Include "gdbcore.h", "regcache.h",
<sys/types.h>, <machine/pcb.h> and "bsd-kvm.h".
(sparc32nbsd_supply_pcb): New function.
(_initialize_sparcnbsd_nat): Enable libkvm interface.
* Makefile.in (sparcnbsd-nat.o): Update dependencies.
* config/sparc/nbsdelf.mh (NATDEPFILES): Add bsd-kvm.o.
(LOADLIBES): New variable.
@
text
@d1556 2
a1557 2
amd64obsd-nat.o: amd64obsd-nat.c $(defs_h) $(gdb_assert_h) $(amd64_tdep_h) \
	$(amd64_nat_h)
@


1.574
log
@* bsd-kvm.c, bsd-kvm.h: New files.
* i386fbsd-nat.c: Include <sys/types.h>, <machine/pcb.h> and
"bsd-kvm.h".
(i386fbsd_supply_pcb): New function.
* Makefile.in (ALLDEPFILES): Add bsd-kvm.c.
(i386fbsd-nat.o): Update dependencies.
(bsd_kvm_h): New variable.
(bsd-kvm.o): New dependency.
* config/i386/fbsd.mh (NATDEPFILES): Add bsd-kvm.o.
(LOADLIBES): New variable.
@
text
@d2397 2
a2398 1
sparcnbsd-nat.o: sparcnbsd-nat.c $(defs_h) $(sparc_tdep_h) $(sparc_nat_h)
@


1.573
log
@Use a constructor function to create regset structures.
* regset.h (supply_regset_ftype, collect_regset_ftype): New typedefs.
(struct regset): Use supply_regset_ftype.  Add new
'collect_regset' member.
(regset_xmalloc): New declaration.
* regset.c: New file.
* am64-tdep.c (amd64_regset_from_core_section): Use
regset_xmalloc to construct regset structures.
* amd64obsd-tdep.c (amd64obsd_regset_from_core_section): Same.
* i386-tdep.c (i386_regset_from_core_section): Same.
* i386nbsd-tdep.c (i386nbsd_aout_regset_from_core_section): Same.
* i386obsd-tdep.c (i386obsd_aout_regset_from_core_section): Same.
* sparc64fbsd-tdep.c (sparc64fbsd_init_abi): Same.
* sparc64nbsd-tdep.c (sparc64nbsd_init_abi): Same.
* sparc64obsd-tdep.c (sparc64obsd_init_abi): Same.
* sparcnbsd-tdep.c (sparc32nbsd_init_abi): Same.
* Makefile.in (COMMON_OBS): Add regset.o.
(regset.o): New rule.
@
text
@d634 1
d1326 1
d1618 2
d1861 1
a1861 1
	$(i386_tdep_h)
@


1.572
log
@2004-05-17  Randolph Chung  <tausq@@debian.org>

	* hppa-tdep.c: Remove superfluous #include's.
	* Makefile.in (hppa-tdep.o): Update dependencies.
@
text
@d913 1
a913 1
	reggroups.o \
d2200 1
@


1.571
log
@        * aix-thread.c: #include "gdb_string.h". Needed for memset and memcopy.
        * Makefile.in (aix-thread.o): Add dependency on gdb_string.h.
@
text
@d1834 4
a1837 6
	$(value_h) $(regcache_h) $(completer_h) $(language_h) $(osabi_h) \
	$(gdb_assert_h) $(infttrace_h) $(arch_utils_h) $(symtab_h) \
	$(infcall_h) $(dis_asm_h) $(trad_frame_h) $(frame_unwind_h) \
	$(frame_base_h) $(a_out_encap_h) $(gdb_stat_h) $(gdb_wait_h) \
	$(gdbcore_h) $(gdbcmd_h) $(target_h) $(symfile_h) $(objfiles_h) \
	$(hppa_tdep_h)
@


1.570
log
@2004-05-11  Andrew Cagney  <cagney@@redhat.com>

	* ppcnbsd-tdep.c: Include "gdb_assert.h".
	* Makefile.in (ppcnbsd-tdep.o): Update dependencies.
@
text
@d1508 1
a1508 1
	$(ppc_tdep_h)
@


1.569
log
@* ppc-tdep.h (struct gdbarch_tdep): Change definition of
ppc_fp0_regnum and ppc_fpscr_regnum: if they are -1, then this
processor variant lacks those registers.
(ppc_floating_point_unit_p): Change description to make it clear
that this returns info about the ISA, not the ABI.
* rs6000-tdep.c (ppc_floating_point_unit_p): Decide whether to
return true or false by checking tdep->ppc_fp0_regnum and
tdep->ppc_fpscr_regnum.  The original code replicated the BFD
arch/mach switching done in rs6000_gdbarch_init; it's better to
keep that logic there, and just check the results here.
(rs6000_gdbarch_init): On the E500, set tdep->ppc_fp0_regnum and
tdep->ppc_fpscr_regnum to -1 to indicate that we have no
floating-point registers.
(ppc_supply_fpregset, ppc_collect_fpregset)
(rs6000_push_dummy_call, rs6000_extract_return_value)
(rs6000_store_return_value): Assert that we have floating-point
registers.
(rs6000_dwarf2_stab_reg_to_regnum): Add FIXME.
(rs6000_frame_cache): Don't note the locations at which
floating-point registers were saved if we have no fprs.
* aix-thread.c (supply_fprs, fill_fprs): Assert that we have FP
registers.
(fetch_regs_user_thread, fetch_regs_kernel_thread)
(store_regs_user_thread, store_regs_kernel_thread): Only call
supply_fprs / fill_fprs if we actually have floating-point
registers.
(special_register_p): Check ppc_fpscr_regnum before matching
against it.
(supply_sprs64, supply_sprs32, fill_sprs64, fill_sprs32): Don't
supply / collect fpscr if we don't have it.
* ppc-bdm.c: #include "gdb_assert.h".
(bdm_ppc_fetch_registers, bdm_ppc_store_registers): Assert that we
have floating-point registers, since I can't test this code on
FP-free systems to adapt it.
* ppc-linux-nat.c (ppc_register_u_addr): Don't match against the
fpscr and floating point register numbers if they don't exist.
(fetch_register): Assert that we have floating-point registers
before we reach the code that handles them.
(store_register): Same.  And use tdep instead of calling
gdbarch_tdep again.
(fill_fpregset): Don't try to collect FP registers and fpscr if we
don't have them.
(ppc_linux_sigtramp_cache): Don't record the saved locations of
fprs and fpscr if we don't have them.
(ppc_linux_supply_fpregset): Don't supply fp regs and fpscr if we
don't have them.
* ppcnbsd-nat.c: #include "gdb_assert.h".
(getfpregs_supplies): Assert that we have floating-point registers.
* ppcnbsd-tdep.c (ppcnbsd_supply_fpreg, ppcnbsd_fill_fpreg): Same.
* ppcobsd-tdep.c: #include "gdb_assert.h".
(ppcobsd_supply_gregset, ppcobsd_collect_gregset): Assert that we
have floating-point registers.
* rs6000-nat.c (regmap): Don't match against the fpscr and
floating point register numbers if they don't exist.
(fetch_inferior_registers, store_inferior_registers,
fetch_core_registers): Only fetch / store / supply the
floating-point registers and the fpscr if we have them.
* Makefile.in (ppc-bdm.o, ppc-linux-nat.o, ppcnbsd-nat.o)
(ppcobsd-tdep.o): Update dependencies.
@
text
@d2165 1
a2165 1
	$(ppcnbsd_tdep_h) $(nbsd_tdep_h) $(solib_svr4_h)
@


1.568
log
@Back out change.  The NetBSD changes need Jason Thorpe's approval, but
he hasn't reviewed it yet.
@
text
@d2151 1
a2151 1
	$(regcache_h)
d2155 2
a2156 2
	$(inferior_h) $(gdbcore_h) $(regcache_h) $(gdb_wait_h) $(gregset_h) \
	$(ppc_tdep_h)
d2162 1
a2162 1
	$(ppcnbsd_tdep_h)
d2169 2
a2170 2
	$(regcache_h) $(regset_h) $(gdb_string_h) $(ppc_tdep_h) \
	$(ppcobsd_tdep_h) $(solib_svr4_h)
@


1.567
log
@* ppc-tdep.h (struct gdbarch_tdep): Change definition of
ppc_fp0_regnum and ppc_fpscr_regnum: if they are -1, then this
processor variant lacks those registers.
(ppc_floating_point_unit_p): Change description to make it clear
that this returns info about the ISA, not the ABI.
* rs6000-tdep.c (ppc_floating_point_unit_p): Decide whether to
return true or false by checking tdep->ppc_fp0_regnum and
tdep->ppc_fpscr_regnum.  The original code replicated the BFD
arch/mach switching done in rs6000_gdbarch_init; it's better to
keep that logic there, and just check the results here.
(rs6000_gdbarch_init): On the E500, set tdep->ppc_fp0_regnum and
tdep->ppc_fpscr_regnum to -1 to indicate that we have no
floating-point registers.
(ppc_supply_fpregset, ppc_collect_fpregset)
(rs6000_push_dummy_call, rs6000_extract_return_value)
(rs6000_store_return_value): Assert that we have floating-point
registers.
(rs6000_dwarf2_stab_reg_to_regnum): Add FIXME.
(rs6000_frame_cache): Don't note the locations at which
floating-point registers were saved if we have no fprs.
* aix-thread.c (supply_fprs, fill_fprs): Assert that we have FP
registers.
(fetch_regs_user_thread, fetch_regs_kernel_thread)
(store_regs_user_thread, store_regs_kernel_thread): Only call
supply_fprs / fill_fprs if we actually have floating-point
registers.
(special_register_p): Check ppc_fpscr_regnum before matching
against it.
(supply_sprs64, supply_sprs32, fill_sprs64, fill_sprs32): Don't
supply / collect fpscr if we don't have it.
* ppc-bdm.c: #include "gdb_assert.h".
(bdm_ppc_fetch_registers, bdm_ppc_store_registers): Assert that we
have floating-point registers, since I can't test this code on
FP-free systems to adapt it.
* ppc-linux-nat.c (ppc_register_u_addr): Don't match against the
fpscr and floating point register numbers if they don't exist.
(fetch_register): Assert that we have floating-point registers
before we reach the code that handles them.
(store_register): Same.  And use tdep instead of calling
gdbarch_tdep again.
(fill_fpregset): Don't try to collect FP registers and fpscr if we
don't have them.
(ppc_linux_sigtramp_cache): Don't record the saved locations of
fprs and fpscr if we don't have them.
(ppc_linux_supply_fpregset): Don't supply fp regs and fpscr if we
don't have them.
* ppcnbsd-nat.c: #include "gdb_assert.h".
(getfpregs_supplies): Assert that we have floating-point registers.
* ppcnbsd-tdep.c (ppcnbsd_supply_fpreg, ppcnbsd_fill_fpreg): Same.
* ppcobsd-tdep.c: #include "gdb_assert.h".
(ppcobsd_supply_gregset, ppcobsd_collect_gregset): Assert that we
have floating-point registers.
* rs6000-nat.c (regmap): Don't match against the fpscr and
floating point register numbers if they don't exist.
(fetch_inferior_registers, store_inferior_registers,
fetch_core_registers): Only fetch / store / supply the
floating-point registers and the fpscr if we have them.
* Makefile.in (ppc-bdm.o, ppc-linux-nat.o, ppcnbsd-nat.o)
(ppcobsd-tdep.o): Update dependencies.
@
text
@d2151 1
a2151 1
	$(regcache_h) $(gdb_assert_h)
d2155 2
a2156 2
	$(inferior_h) $(gdbcore_h) $(regcache_h) $(gdb_assert_h) \
	$(gdb_wait_h) $(gregset_h) $(ppc_tdep_h)
d2162 1
a2162 1
	$(ppcnbsd_tdep_h) $(gdb_assert_h)
d2169 2
a2170 2
	$(regcache_h) $(regset_h) $(gdb_assert_h) $(gdb_string_h) \
        $(ppc_tdep_h) $(ppcobsd_tdep_h) $(solib_svr4_h)
@


1.566
log
@* vax-tdep.c: Tweak comments.  Reorder include files.  Don't
include "symtab.h", "opcode/vax.h" and "inferior.h".
(vax_skip_prologue): Replace calls to read_memory_integer by calls
to read_memory_unsigned_integer.
(vax_gdbarch_init): Reorder.
(_initialize_vax_tdep): Spell out prototype.
* Makefile.in (vax-tdep.o): Update dependencies.
@
text
@d2151 1
a2151 1
	$(regcache_h)
d2155 2
a2156 2
	$(inferior_h) $(gdbcore_h) $(regcache_h) $(gdb_wait_h) $(gregset_h) \
	$(ppc_tdep_h)
d2162 1
a2162 1
	$(ppcnbsd_tdep_h)
d2169 2
a2170 2
	$(regcache_h) $(regset_h) $(gdb_string_h) $(ppc_tdep_h) \
	$(ppcobsd_tdep_h) $(solib_svr4_h)
@


1.565
log
@* alphanbsd-tdep.c: Include "gdb_string.h".
* armnbsd-tdep.c: Update copyright year.
Include "gdb_string.h".
* Makefile.in (alphanbsd-tdep.o, armnbsd-tdep.o): Update
dependencies.
@
text
@d2514 4
a2517 4
vax-tdep.o: vax-tdep.c $(defs_h) $(symtab_h) $(opcode_vax_h) $(gdbcore_h) \
	$(inferior_h) $(regcache_h) $(frame_h) $(frame_base_h) \
	$(frame_unwind_h) $(value_h) $(arch_utils_h) $(osabi_h) \
	$(dis_asm_h) $(regset_h) $(gdb_string_h) $(vax_tdep_h)
@


1.564
log
@* delta68-nat.c: Remove file.
* m68k-tdep.c (delta68_in_sigtramp, delta68_frame_args_address)
(delta68_frame_saved_pc, delta68_frame_num_args): Remove functions.
* Makefile.in (ALLDEPFILES): Remove delta68-nat.c.
(delta68-nat.o): Remove dependency.
@
text
@d1523 2
a1524 2
	$(regcache_h) $(value_h) $(osabi_h) $(solib_svr4_h) $(alpha_tdep_h) \
	$(alphabsd_tdep_h) $(nbsd_tdep_h)
d1579 2
a1580 2
armnbsd-tdep.o: armnbsd-tdep.c $(defs_h) $(osabi_h) $(arm_tdep_h) \
	$(nbsd_tdep_h) $(solib_svr4_h)
@


1.563
log
@2004-05-07  Randolph Chung  <tausq@@debian.org>

	* Makefile.in (ALLDEPFILES): Add hppa-linux-tdep.c and
	hppa-linux-nat.c.
	(hppa-linux-tdep.o, hppa-linux-nat.o): Define rules.
	* hppa-linux-nat.c (fetch_register, store_register): Define.
	(fetch_inferior_registers, store_inferior_registers): Define.
	(supply_gregset): Add comment and clean up some unneeded code.
	(fill_gregset): Add comment and fix so that it saves registers in
	the right place in the gregset.
	(fill_fpregset): Fix buffer overrun problem.
	* config/pa/nm-linux.h (FETCH_INFERIOR_REGISTERS): Define.
@
text
@d1327 1
a1327 1
	dcache.c delta68-nat.c dpx2-nat.c exec.c fork-child.c \
a1700 1
delta68-nat.o: delta68-nat.c $(defs_h)
@


1.562
log
@2004-05-07  Andrew Cagney  <cagney@@redhat.com>

	* observer.c: Include "commands.h" and "gdbcmd.h".
	(observer_debug, _initialize_observer): Add the
	command "set/show debug observer".
	* observer.sh: When observer debugging, log notify calls.
	* Makefile.in (observer.o): Update dependencies.

Index: doc/ChangeLog
2004-05-07  Andrew Cagney  <cagney@@redhat.com>

	* observer.texi (GDB Observers): Add "Debugging" section.  Include
	cross reference to "set/show debug observer".
	* gdb.texinfo (Debugging Output): Document "set/show debug
	observer".
@
text
@d1332 1
d1841 6
@


1.561
log
@2004-05-06  Randolph Chung  <tausq@@debian.org>

	* config/pa/tm-hppa.h (RO_REGNUM, FLAGS_REGNUM, RP_REGNUM)
	(HPPA_FP_REGNUM, HPPA_SP_REGNUM, SAR_REGNUM, IPSW_REGNUM)
	(PCOQ_HEAD_REGNUM, PCSQ_HEAD_REGNUM, PCOQ_TAIL_REGNUM, PCSQ_TAIL_REGNUM)
	(EIEM_REGNUM, IIR_REGNUM, ISR_REGNUM, IOR_REGNUM, SR4_REGNUM)
	(RCR_REGNUM, PID0_REGNUM, PID1_REGNUM, PID2_REGNUM, PID3_REGNUM)
	(CCR_REGNUM, TR0_REGNUM, CR27_REGNUM, HPPA_FP0_REGNUM, FP4_REGNUM)
	(ARG0_REGNUM, ARG1_REGNUM, ARG2_REGNUM, ARG3_REGNUM): Move *_REGNUM
	definitions ...
	* hppa-tdep.h: ... to here, with HPPA_ prefix.
	* Makefile.in (hppah-nat.o): Add $(hppa_tdep_h)
	* hppa-hpux-tdep.c (hppa32_hpux_frame_find_saved_regs_in_sig)
	(hppa64_hpux_frame_find_saved_regs_in_sig)
	(child_get_current_exception_event): Add HPPA_ prefix to *_REGNUM usage.
	* hppa-linux-nat.c (GR_REGNUM, TR_REGNUM, greg_map): Likewise.
	* hppa-linux-tdep.c (hppa_dwarf_reg_to_regnum)
	(hppa_linux_target_write_pc, hppa_linux_sigtramp_frame_unwind_cache)
	(hppa_linux_sigtramp_frame_prev_register): Likewise.
	* hppa-tdep.c (hppa32_return_value, hppa64_return_value)
	(hppa32_push_dummy_call, hppa64_push_dummy_call, hppa64_frame_align)
	(hppa_target_read_pc, hppa_target_write_pc, hppa_frame_cache)
	(hppa_frame_prev_register, hppa_stub_frame_unwind_cache)
	(hppa_stub_frame_prev_register, hppa_unwind_dummy_id)
	(hppa_skip_permanent_breakpoint, hppa_instruction_nullified)
	(hppa32_register_type, hppa_cannot_store_register)
	(hppa_fetch_pointer_argument, hppa_pseudo_register_read): Likewise.
	* hppah-nat.c (store_inferior_registers, fetch_register): Likewise.
	* hpread.c (hpread_process_one_debug_symbol): Likewise.
	* pa64solib.c (pa64_solib_have_load_event)
	(pa64_solib_have_unload_event, pa64_solib_loaded_library_pathname)
	(pa64_solib_unloaded_library_pathname): Likewise.
	* somsolib.c (som_solib_have_load_event, som_solib_have_unload_event)
	(som_solib_library_pathname): Likewise.
@
text
@d2121 2
a2122 1
observer.o: observer.c $(defs_h) $(observer_h) $(observer_inc)
@


1.560
log
@* m68knbsd-nat.c: Remove file.
* m68knbsd-tdep.c: Remove file.
* Makefile.in: (m68knbsd-nat.o, m68knbsd-tdep.o): Remove
dependencies.
* configure.host: Add m68k-*-netbsdelf*.
* configure.tgt (m68k-*-netbsd*): Set gdb_target to nbsd.
* config/m68k/nbsdaout.mh (NATDEPFILES): Add m68kbsd-nat.o,
solib.o and solib-sunos.o.  Remove m68knbsd-nat.o, corelow.o.
(XM_FILE): Remove.
* config/m68k/nbsdelf.mh: New file.
* config/m68k/nbsd.mt: New file.
* config/m68k/nbsdaout.mt: Remove file.
* config/m68k/tm-nbsd.h: Don't include <sys/param.h>,
<machine/vmparam.h> and "m68k/tm-m68k.h".  Include "solib.h".
(BPT_VECTOR, STACK_END_ADDR): Remove defines.
(DEPRECATED_SIGTRAMP_START, DEPRECATED_SIGTRAMP_END): Likewise.
(use_struct_convention): Remove prototype.
(USE_STRUCT_CONVENTION): Remove define.
* config/m68k/xm-nbsd.h: Remove file.
@
text
@d1829 2
a1830 1
	$(gdb_wait_h) $(regcache_h) $(gdb_string_h) $(infttrace_h)
@


1.559
log
@* sun3-nat.c: Remove file.
* Makefile.in (tm-sun3.h tm-altos.h tm-sun2.h tm-3b1.h): Remove
dependencies.
(ALLDEPFILES): Remove sun3-nat.c.
(sun3-nat.o): Remove dependencies.
@
text
@a2020 3
m68knbsd-nat.o: m68knbsd-nat.c $(defs_h) $(inferior_h) $(gdbcore_h) \
	$(regcache_h)
m68knbsd-tdep.o: m68knbsd-tdep.c $(defs_h) $(gdbtypes_h) $(regcache_h)
@


1.558
log
@* i386-interix-nat.c, i386-interix-tdep.c,
config/i386/nm-interix.h, config/i386/interix.mh,
config/i386/interix.mt: Remove files.
* Makefile.in (i386-interix-nat.o, i386-interix-tdep.o): Remove
dependencies.
@
text
@a1159 2
tm-sun3.h tm-altos.h: tm-m68k.h
tm-sun2.h tm-3b1.h: tm-m68k.h
a1373 1
	sun3-nat.c \
a2423 1
sun3-nat.o: sun3-nat.c $(defs_h) $(inferior_h) $(gdbcore_h) $(regcache_h)
@


1.557
log
@* m68k-tdep.h (struct gdbarch_tdep): Add member
struct_value_regnum.
(m68k_svr4_init_abi): New prototype.
* m68k-tdep.c: Include "floatformat.h".  Add comment about all the
different calling conventions.
(m68k_extract_return_value): Remove code dealing with single-field
structs.
(m68k_store_return_value): Remove code dealing with single-field
structs.  Correctly store return values of 5, 6, 7 or 8 bytes.
(m68k_extract_struct_value_address): Remove function.
(m68k_svr4_extract_return_value,m68k_svr4_store_return_value)
(m68k_reg_struct_return_p, m68k_return_value)
(m68k_svr4_return_value): New functions.
(m68k_use_struct_convention): Remove function.
(m68k_push_dummy_call): Use new struct_value_regnum member of
`struct gdbarch_tdep' instead of hardcoded register number to
store STRUCT_ADDR.
(m68k_svr4_init_abi): New function.
(m68k_gdbarch_init): Don't set extract_return_value,
store_return_values, deprecated_extract_struct_value_address and
use_struct_convention.  Set return_value instead.  Initialize new
struct_value_regnum member of `struct gdbarch_tdep'.
* m68klinux-tdep.c: Update copyright year.
(m68k_linux_extract_return_value, m68k_linux_store_return_value)
(m68k_linux_extract_struct_value_address): Remove function.
(m68k_linux_init_abi): Don't set extract_return_value,
store_return_values, deprecated_extract_struct_value_address and
use_struct_convention.  Call m68k_svr4_init_abi but override the
new struct_value_regnum member of `struct gdbarch_tdep'.
* Makefile.in (m68k-tdep.o): Update dependencies.
@
text
@a1861 6
i386-interix-nat.o: i386-interix-nat.c $(defs_h) $(gdb_string_h) \
	$(gdbcore_h) $(gregset_h) $(regcache_h)
i386-interix-tdep.o: i386-interix-tdep.c $(defs_h) $(arch_utils_h) \
	$(frame_h) $(gdb_string_h) $(gdb_stabs_h) $(gdbcore_h) $(gdbtypes_h) \
	$(i386_tdep_h) $(inferior_h) $(libbfd_h) $(objfiles_h) $(osabi_h) \
	$(regcache_h)
@


1.556
log
@Move the symbol-file-from-memory functions into their own file.
* symfile-mem.c, symfile-mem.h: New files.
* symfile.c (symbol_file_add_from_bfd): New function.
(symbol_file_add): Call symbol_file_add_from_bfd.
(symbol_file_add_from_memory, add_symbol_file_from_memory_command):
Moved to symfile-mem.c.
(_initialize_symfile): Move definition of
add-symbol-file-from-memory command to symfile-mem.c.
* symfile.h (symbol_file_add_from_bfd): New declaration.
* config/i386/linux.mt (TDEPFILES): Add symfile-mem.o.
* config/powerpc/linux.mt (TDEPFILES): Same.
* Makefile.in (SFILES): Add symfile-mem.c.
(symfile_mem_h): New variable.
(HFILES_NO_SRCDIR): Add symfile-mem.h.
(symfile-mem.o): New rule.
@
text
@d2035 4
a2038 4
	$(frame_base_h) $(frame_unwind_h) $(symtab_h) $(gdbcore_h) \
	$(value_h) $(gdb_string_h) $(gdb_assert_h) $(inferior_h) \
	$(regcache_h) $(arch_utils_h) $(osabi_h) $(dis_asm_h) $(m68k_tdep_h) \
	$(gregset_h)
@


1.555
log
@2004-05-01  Andrew Cagney  <cagney@@redhat.com>

	* Makefile.in (m68klinux-tdep.o, m68klinux-nat.o): Fix
	m68klinux-tdep.o's dependencies, were previously added to
	m68klinux-nat.o.
@
text
@d541 2
a542 1
	stabsread.c stack.c std-regs.c symfile.c symmisc.c symtab.c \
d758 1
d832 2
a833 1
	symfile.h stabsread.h target.h terminal.h typeprint.h xcoffsolib.h \
d2441 3
@


1.554
log
@2004-05-01  Andrew Cagney  <cagney@@redhat.com>

	* Makefile.in (m68klinux-nat.o): Update dependencies.
	* m68klinux-tdep.c: Include "trad-frame.h" and "frame-unwind.h".
	(m68k_linux_sigtramp_frame_cache)
	(m68k_linux_sigtramp_frame_this_id)
	(m68k_linux_sigtramp_frame_prev_register)
	(m68k_linux_sigtramp_frame_unwind)
	(m68k_linux_sigtramp_frame_sniffer)
	(struct m68k_linux_sigtramp_info, m68k_linux_init_abi): Code from
	m68k-tdep.h and m68k-tdep.c, add "linux" to function and variable
	names, use trad-frame.h.
	* m68k-tdep.h (struct gdbarch_tdep): Delete get_sigtramp_info.
	(struct m68k_sigtramp_info): Delete.
	* m68k-tdep.c (m68k_sigtramp_frame_cache)
	(m68k_sigtramp_frame_this_id, m68k_sigtramp_frame_prev_register)
	(m68k_sigtramp_frame_unwind, m68k_sigtramp_frame_sniffer)
	(m68k_gdbarch_init): Delete all the sigtramp code, moved to
	"m68klinux-tdep.c".
@
text
@d2017 1
a2017 1
	$(gregset_h) $(trad_frame_h) $(frame_unwind_h)
d2021 1
a2021 1
	$(m68k_tdep_h)
@


1.553
log
@2004-05-01  Andrew Cagney  <cagney@@redhat.com>

	* frv-linux-tdep.c: Include "trad-frame.h" and "frame-unwind.h".
	(frv_linux_sigtramp_frame_cache)
	(frv_linux_sigtramp_frame_this_id)
	(frv_linux_sigtramp_frame_prev_register)
	(frv_linux_sigtramp_frame_unwind)
	(frv_linux_sigtramp_frame_sniffer): Copied from frv-tdep.c,
	include "linux" in function and variable names, directly call
	frv_linux_pc_in_sigtramp and frv_linux_sigcontext_reg_addr, use
	the latest trad-frame code.
	(frv_linux_init_abi): Append frv_linux_sigtramp_frame_sniffer, do
	not set frv_sigcontext_reg_addr or deprecated_pc_in_sigtramp
	* Makefile.in (frv-linux-tdep.o): Update dependencies.
	* frv-tdep.h (frv_set_sigcontext_reg_addr): Delete declaration.
	* frv-tdep.c (frv_sigtramp_frame_cache)
	(frv_sigtramp_frame_this_id, frv_sigtramp_frame_prev_register)
	(frv_sigtramp_frame_unwind, frv_sigtramp_frame_sniffer): Moved to
	frv-linux-tdep.c.
	(frv_gdbarch_init): Do not append a sigtramp sniffer.
	(struct gdbarch_tdep): Delete sigcontext_reg_addr.
	(frv_set_sigcontext_reg_addr): Delete function.
@
text
@d2017 1
a2017 1
	$(gregset_h)
@


1.552
log
@Add OpenBSD/m68k support.
* NEWS (New native configurations): Mention OpenBSD/m68k.
* m68kbsd-tdep.c: New file.
* m68kbsd-nat.c: New file.
* Makefile.in (ALLDEPFILES): Add m68kbsd-nat.c and m68kbsd-tdep.c.
(m68kbsd-nat.o, m68kbsd-tdep.o): New dependencies.
* configure.host: Add m68k-*-openbsd.
* configure.tgt: Add m68k-*-openbsd.
* config/m68k/tm-obsd.h: New file.
* config/m68k/obsd.mt: New file.
* config/m68k/obsd.mh: New file.
* config/djgpp/fnchange.lst: Add entries for m68kbsd-nat.c and
m68kbsd-tdep.c.
@
text
@d1783 2
a1784 1
	$(osabi_h) $(elf_bfd_h) $(elf_frv_h) $(frv_tdep_h)
@


1.551
log
@2004-04-26  Orjan Friberg <orjanf@@axis.com>

	* frame.c: Include "observer.h".
	(frame_observer_target_changed): New function.
	(_initialize_frame): Attach target_changed observer.
	* regcache.c: Include "observer.h".
	(regcache_observer_target_changed): New function.
	(_initialize_regcache): Attach target_changed observer.
	* valops.c: Include "observer.h".
	(value_assign): Notify target_changed event when modifying register.
	* Makefile.in (frame.o, regcache.o, valops.o): Add $(observer_h).
@
text
@d1343 1
d2021 5
@


1.550
log
@* ppcobsd-nat.c: Include "ppc-tdep.h".
* Makefile.in (ppcobsd-nat.o): Update dependencies.
@
text
@d1778 1
a1778 1
	$(command_h) $(gdbcmd_h)
d2193 1
a2193 1
	$(gdb_string_h) $(gdbcmd_h)
d2496 1
a2496 1
	$(cp_support_h)
@


1.549
log
@2004-04-24  Michael Chastain  <mec.gnu@@mindspring.com>

	* xmodem.h, xmodem.c: Remove files.
	* Makefile.in: Remove references to xmodem.h, xmodem.c.
@
text
@d2161 1
a2161 1
	$(ppcobsd_tdep_h)
@


1.548
log
@Add OpenBSD/powerpc support.
* NEWS (New native configurations): Mention OpenBSD/powerpc.
* ppc-tdep.h (struct ppc_reg_offsets): New structure.
(ppc_supply_gregset, ppc_supply_fpregset, ppc_collect_gregset)
(ppc_collect_fpregset): New prototypes.
* ppcobsd-nat.c: New file.
* ppcobsd-tdep.c: New file.
* ppcobsd-tdep.h: New file.
* rs6000-tdep.c: Include "regset.h".
(ppc_supply_reg, ppc_collect_reg, ppc_supply_gregset)
(ppc_supply_fpregset, ppc_collect_gregset, ppc_collect_fpregset):
New functions.
* Makefile.in (ALLDEPFILES): Add pccobsd-nat.c and ppcobsd-tdep.c.
(ppcobsd-nat.o, ppcobsd-tdep.o): New dependencies.
(rs6000-tdep.o): Update dependencies.
* configure.host: Add powerpc-*-openbsd.
* configure.tgt: Add powerpc-*-openbsd.
* config/powerpc/obsd.mh: New file.
* config/powerpc/nm-obsd.h: New file.
* config/powerpc/obsd.mt: New file.
@
text
@a776 1
xmodem_h = xmodem.h
a2529 1
xmodem.o: xmodem.c $(defs_h) $(serial_h) $(target_h) $(xmodem_h)
@


1.547
log
@2004-04-21  Andrew Cagney  <cagney@@redhat.com>

	* Makefile.in (vaxnbsd-tdep.o): Update dependencies.
	* vaxnbsd-tdep.c: Include "gdb_string.h".
@
text
@d1355 1
d2161 5
d2263 5
a2267 5
	$(regcache_h) $(doublest_h) $(value_h) $(parser_defs_h) $(osabi_h) \
	$(libbfd_h) $(coff_internal_h) $(libcoff_h) $(coff_xcoff_h) \
	$(libxcoff_h) $(elf_bfd_h) $(solib_svr4_h) $(ppc_tdep_h) \
	$(gdb_assert_h) $(dis_asm_h) $(trad_frame_h) $(frame_unwind_h) \
	$(frame_base_h)
@


1.546
log
@* Makefile.in (ALLDEPFILES): List ppc-sysv-tdep.c, ppcnbsd-nat.c
and ppcnbsd-tdep.c instead of ppc-sysv-tdep.o, ppcnbsd-nat.o and
ppcnbsd-tdep.o.
@
text
@d2507 1
a2507 1
	$(vax_tdep_h) $(solib_svr4_h)
@


1.545
log
@2004-04-17  Randolph Chung  <tausq@@debian.org>

	* Makefile.in (hppa-hpux-tdep.o): Add $(hppa_tdep_h).
	* hppa-hpux-tdep.c (hppa-tdep.h): Include.
 	(hppa_hpux_som_init_abi): Set is_elf to 0.
 	(hppa_hpux_elf_init_abi): Set is_elf to 1.
	* hppa-tdep.c (low_text_segment_address): Remove global.
	(record_text_segment_lowaddr): Pass in low address as parameter. Use
	section offset to calculate segment address.
	(internalize_unwinds): Define low_text_segment_address as local and
	pass to record_text_segment_lowaddr for ELF targets.
	(hppa_gdbarch_init): Zero fill tdep structure.
	(hppa_dump_tdep): Print tdep structure.
	* hppa-tdep.h (gdbarch_tdep): Add is_elf member to tdep structure.
@
text
@d1353 2
a1354 2
	ppc-sysv-tdep.o ppc-linux-nat.c ppc-linux-tdep.c \
	ppcnbsd-nat.o ppcnbsd-tdep.o \
@


1.544
log
@2004-04-17  Randolph Chung  <tausq@@debian.org>

	* Makefile.in (hpread.o, pa64solib.o, somsolib.o): Add $(hppa_tdep_h)
	* hppa-tdep.c (hppa_objfile_priv_data): New.
	(SR4EXPORT_LDIL_OFFSET, SR4EXPORT_LDO_OFFSET): Use
	HPPA_INSTRUCTION_SIZE.
	(read_unwind_info): Use objfile_data to reference unwind info.
	(find_unwind_entry): Likewise.
	(hpread_adjust_stack_address): Move to hpread.c.
	(_initialize_hppa_tdep): Register hppa objfile data.
	* hppa-tdep.h (HPPA_INSTRUCTION_SIZE): Define.
	(unwind_table_entry, unwind_stub_types): Move from tm-hppa.h.
	(obj_unwind_info, obj_private_struct): Move from tm-hppa.h, and rename
	with hppa_ prefix.
	* hpread.c (hppa-tdep.h): Include.
	(hpread_adjust_stack_address): Move from hppa-tdep.c.
	(hpread_read_function_type, hpread_read_doc_function_type)
	(hpread_process_one_debug_symbol): Call hpread_adjust_stack_address
	directly. Use objfile_data to access solib data.
	* pa64solib.c (hppa-tdep.h): Include.
	(pa64_solib_add_solib_objfile): Use objfile_data to access solib data.
	* somsolib.c (hppa-tdep.h): Include.
	(som_solib_add_solib_objfile): Use objfile_data to access solib data.
	* config/pa/tm-hppa.h (frame_info, frame_saved_regs, value, type)
	(inferior_status): Remove unused forward declarations.
	(INSTRUCTION_SIZE): Move to hppa-tdep.c.
	(unwind_table_entry, unwind_stub_types, obj_unwind_info)
	(obj_private_struct): Move to hppa-tdep.h.
	(HPREAD_ADJUST_STACK_ADDRESS): Remove.
@
text
@d1829 1
a1829 1
	$(osabi_h) $(gdb_string_h) $(frame_h)
@


1.543
log
@	* dwarf2read.c: Include "hashtab.h".
	(struct dwarf2_cu): Add partial_dies, comp_unit_obstack,
	has_namespace_info.
	(struct partial_die_info): Add comments.  Use bitfields to reduce
	memory footprint.  Add scope, scope_set, has_specification,
	spec_offset, die_parent, die_child, and die_sibling.
	(peek_die_abbrev): Add prototype.
	(partial_read_comp_unit_head): New function, broken out from
	dwarf2_build_psymtabs_hard.
	(dwarf2_build_psymtabs_hard): Remove unused variable abbrev_ptr.
	Use partial_read_comp_unit_head.  Initialize the CU and
	comp_unit_obstack.  Update calls to read_partial_die and
	scan_partial_symbols.  Use free_stack_comp_unit and
	load_partial_dies.
	(scan_partial_symbols): Change PDI to a pointer.  Use the child and
	sibling pointers to walk partial DIEs.  Call fixup_partial_die.
	Update calls to helper functions.  Remove NAMESPACE argument.
	Update comments.
	(partial_die_parent_scope, partial_die_full_name): New functions.
	(add_partial_symbol): Remove namespace argument.  Update call to
	pdi_needs_namespace.  Use partial_die_full_name.  Handle
	DW_TAG_namespace.  Check has_namespace_info flag.
	(pdi_needs_namespace): Remove NAMESPACE argument.  Just check the
	tag.  Handle namespaces.
	(add_partial_namespace, add_partial_enumeration): Simplify.
	(guess_structure_name): New function, derived from
	add_partial_structure.
	(add_partial_structure): Remove.
	(determine_class_name): Update comment.
	(dwarf2_read_abbrevs): Set has_namespace_info flag.
	(is_type_tag_for_partial, load_partial_dies): New functions.
	(read_partial_die): Pass abbrev and abbrev_len as arguments.
	Record specifications instead of following them immediately.
	(find_partial_die_in_comp_unit, find_partial_die)
	(fixup_partial_die, free_stack_comp_unit)
	(hashtab_obstack_allocate, dummy_obstack_deallocate)
	(partial_die_hash, partial_die_eq): New functions.
	* Makefile.in (hashtab_h): Define.
	(dwarf2read.o): Update dependencies.
	(observer_inc, observer_h): Move to the correct section.
@
text
@d1840 1
a1840 1
	$(somsolib_h) $(gdb_assert_h) $(gdb_string_h)
d2131 1
a2131 1
	$(regcache_h) $(exec_h)
d2341 1
a2341 1
	$(regcache_h) $(gdb_assert_h) $(exec_h)
@


1.542
log
@* vax-tdep.c: Include "regset.h".
(vax_supply_gregset): New function.
(vax_gregset): New variable.
(vax_regset_from_core_section): New function.
(vax_gdbarch_init): Set regset_from_core_section.
* Makefile.in (vax-tdep.o): Update dependencies.
@
text
@d590 1
a590 1
observer_inc = observer.inc
d602 2
a721 1
observer_h = observer.h
d1733 1
a1733 1
	$(cp_support_h) $(gdb_string_h) $(gdb_assert_h)
@


1.541
log
@2004-04-15  Andrew Cagney  <cagney@@redhat.com>

	* observer.c (normal_stop_subject, observer_notify_normal_stop)
	(observer_normal_stop_notification_stub)
	(observer_attach_normal_stop, observer_detach_normal_stop):
	Delete, replaced by #include "observer.inc".
	* infrun.c (normal_stop): Pass "stop_bpstat" to
	observer_notify_normal_stop.
	* Makefile.in (observer_inc): Define.
	(observer.o): Update dependencies.
	(observer.h, observer.inc): New rules.
	* observer.h: Delete file.
	* observer.sh: New file.

Index: doc/ChangeLog
2004-04-08  Andrew Cagney  <cagney@@redhat.com>

	* observer.texi (GDB Observers): Rework, provide generic observer
	definitions and then a list of observable events.
@
text
@d2502 2
a2503 2
	$(frame_unwind_h) $(value_h) $(arch_utils_h) $(gdb_string_h) \
	$(osabi_h) $(dis_asm_h) $(vax_tdep_h)
@


1.540
log
@* vaxnbsd-tdep.c: New file.
* Makefile.in (vaxnbsd-tdep.o): New dependency.
* configure.tgt: Add vax-*-netbsd* and vax-*-openbsd*.
* config/vax/nbsd.mt: New file.
* config/vax/tm-nbsd.h: New file.
@
text
@d590 1
d1285 5
d2121 1
a2121 1
observer.o: observer.c $(defs_h) $(observer_h)
@


1.539
log
@* Makefile.in (vaxbsd-nat.o): New dependency.
@
text
@d2499 2
@


1.538
log
@* vax-tdep.c: Include "frame-base.h", "frame-unwind.h" and
"trad-frame.h".
(vax_frame_init_saved_regs): Remove function.
(vax_sigtramp_saved_pc): Remove function.
(vax_frame_saved_pc): Remove function.
(vax_frame_args_address): Remove function.
(vax_frame_num_args): Rewrite.
(vax_frame_chain): Remove function.
(vax_push_dummy_frame): Replace DEPRECATED_FP_REGNUM with
VAX_FP_REGNUM.
(vax_pop_frame): Likewise.
(vax_saved_pc_after_call): Remove function.
(struct vax_frame_cache): New structure.
(vax_frame_cache): New function.
(vax_frame_this_id): New function.
(vax_frame_prev_register): New function.
(vax_frame_unwind): New variable.
(vax_frame_sniffer): New function.
(vax_frame_base_address): New function.
(vax_frame_args_address): New function.
(vax_frame_base): New variable.
(vax_unwind_pc): New function.
(vax_gdbarch_init): Don't set deprecated_init_frame_pc,
deprecated_fp_regnum, deprecated_saved_pc_after_call,
deprecated_frame_chain, deprecated_frame_saved_pc,
deprecated_frame_args_address and
deprecated_frame_init_saved_regs.
* Makefile.in (vax-tdep.o): Update dependencies.
@
text
@d2498 1
@


1.537
log
@* i386-sol2-tdep.c: Include "gdb_string.h".
(i386_sol2_sigtramp_p): Recognize signal trampoline based on its
name.
* Makefile.in (i386-sol2-tdep.o): Update dependencies.
@
text
@d2495 3
a2497 2
	$(inferior_h) $(regcache_h) $(frame_h) $(value_h) $(arch_utils_h) \
	$(gdb_string_h) $(osabi_h) $(dis_asm_h) $(vax_tdep_h)
@


1.536
log
@* i386-sol2-tdep.c: Include "solib-svr4.h".
(i386_sol2_init_abi): Set solib_svr4_fetch_link_map_offsets.
* Makefile.in (i386-sol2-tdep.o): Update dependencies.
* config/i386/tm-i386sol2.h: Include :solib.h".
* config/i386/i386sol2.mh (NATDEPFILES): Remove solib.o,
solib-svr4.o and solib-legacy.o.
* config/i386/i386sol2.mt (TDEPFILES): Add solib.o and
solib-svr4.o.
@
text
@d1880 1
a1880 1
	$(i386_tdep_h) $(solib_svr4_h)
@


1.535
log
@* amd64-tdep.c (amd64_sigtramp_frame_sniffer): Rewrite to use new
sigtramp_p member of `struct gdbarch_tdep'.  Also check whether
the program counter is in the range specified by `struct
gdbarch_tdep'.
* amd64-linux-tdep.c: Include "symtab.h".
(amd64_linux_pc_in_sigtramp): Remove function.
(amd64_linux_sigtramp_p): New function.
(amd64_linux_init_abi): Initialize TDEP->sigtramp_p.  Don't set
deprecated_pc_in_sigtramp.
* amd64nbsd-tdep.c: Include "symtab.h".
(amd64nbsd_sigtramp_p): New function.
(amd64nbsd_init_abi): Initialize TDEP->sigtramp_p.  Don't set
deprecated_pc_in_sigtramp.
* amd64obsd-tdep.c: Include "symtab.h" and "objfiles.h".  Add a
few comments.
(amd64obsd_pc_in_sigtramp): Remove function.
(amd64obsd_sigtramp_p): New function.
(amd64obsd_init_abi): Initialize TDEP->sigtramp_p.  Don't set
deprecated_pc_in_sigtramp.
* i386-tdep.h (struct gdbarch_tdep): Add sigtramp_p member.
(i386bsd_pc_ins_sigtramp): Remove prototype.
(i386bsd_sigtramp_start, i386bsd_sigtramp_end): Remove prototypes.
* i386-tdep.c (i386_sigtramp_frame_sniffer): Rewrite to use new
sigtramp_p member of `struct gdbarch_tdep'.  Also check whether
the program counter is in the range specified by `struct
gdbarch_tdep'.
(i386_pc_in_sigtramp, i386_svr4_pc_in_sigtramp): Remove functions.
(i386_sigtramp_p, i386_svr4_sigtramp_p): New functions.
(i386_go32_pc_in_sigtramp): Remove function.
(i386_svr4_init_abi): Don't set deprecated_pc_in_sigtramp.
Initialize TDEP->sigtramp_p.
(i386_go32_init_abi): Initialize TDEP->sigtramp_p to NULL.
(i386_gdbarch_init): Initialize TDEP->sigtramp_p.  Don't set
deprecated_pc_in_sigtramp.
* i386-linux-tdep.c: Adjust comments.
(i386_linux_pc_in_sigtramp): Remove function.
(i386_linux_sigtramp_p): New function.
(i386_linux_init_abi): Initialize TDEP->sigtramp_p.  Don't set
deprecated_pc_in_sigtramp.
* i386-nto-tdep.c: Update copyright year.
(i386nto_pc_in_sigtramp): Remove function.
(i386nto_sigtramp_p): New function.
(i386nto_sigcontext_addr): Use I386_ESP_REGNUM instead of
SP_REGNUM.
(i386nto_init_abi): Initialize TDEP->sigtramp_p.  Don't set
deprecated_pc_in_sigtramp.
* i386-sol2-tdep.c: Update copyright year.
(i386_sol2_pc_in_sigtramp): Remove function.
(i386_sol2_sigtramp_p): New function.
(i386_sol2_init_abi): Initialize TDEP->sigtramp_p.  Don't set
deprecated_pc_in_sigtramp.
* i386bsd-tdep.c (i386bsd_pc_in_sigtramp): Remove function.
(i386bsd_sigtramp_start, i386bsd_sigtramp_end): Remove functions.
(i386bsd_init_abi): Don't set deprecated_pc_in_sigtramp,
deprecated_sigtramp_start and deprecated_sigtramp_end.
* i386nbsd-tdep.c: Include "frame.h" and "symtab.h".
(i386nbsd_pc_in_sigtramp): Remove function.
(i386nbsd_sigtramp_p): New function.
(i386nbsd_init_abi): Don't set deprecated_pc_in_sigtramp,
deprecated_sigtramp_start, deprecated_sigtramp_end.  Initialize
TDEP->sigtramp_start, TDEP->sigtramp_end and TDEP->sigtramp_p.
* i386obsd-tdep.c: Include "frame.h", "symtab.h" and "objfiles.h".
(i386obsd_pc_in_sigtramp): Remove function.
(i386obsd_sigtramp_p): New function.
(i386obsd_sigtramp_start, i386obsd_sigtramp_end): Remove
functions.
(i386bsd_init_abi): Don't set deprecated_pc_in_sigtramp,
deprecated_sigtramp_start, deprecated_sigtramp_end.  Initialize
TDEP->sigtramp_p.
* Makefile.in (amd64-linux-tdep.o, amd64nbsd-tdep.o,
amd64obsd-tdep.o, i386nbsd-tdep.o, i386obsd-tdep.o): Update
dependencies.
@
text
@d1880 1
a1880 1
	$(i386_tdep_h)
@


1.534
log
@* sparc-sol2-tdep.c: Update copyright year.  Include
"solib-svr4.h".
(sparc32_sol2_init_abi): Set solib_svr4_fetch_link_map_offsets.
* sparc64-sol2-tdep.c: Include "solib-svr4.h".
(sparc64_sol2_init_abi): Set solib_svr4_fetch_link_map_offsets.
* Makefile.in (sparc-sol2-tdep.o, sparc64-sol2-tdep.o): ): Update
dependencies.
@
text
@d1536 2
a1537 2
	$(regcache_h) $(osabi_h) $(gdb_string_h) $(amd64_tdep_h) \
	$(solib_svr4_h)
d1543 1
a1543 1
	$(gdbcore_h) $(osabi_h) $(gdb_assert_h) $(amd64_tdep_h) \
d1548 3
a1550 2
	$(osabi_h) $(regset_h) $(target_h) $(gdb_assert_h) $(gdb_string_h) \
	$(amd64_tdep_h) $(i387_tdep_h) $(solib_svr4_h)
d1867 4
a1870 3
i386nbsd-tdep.o: i386nbsd-tdep.c $(defs_h) $(arch_utils_h) $(gdbcore_h) \
	$(regcache_h) $(regset_h) $(osabi_h) $(gdb_assert_h) $(gdb_string_h) \
	$(i386_tdep_h) $(i387_tdep_h) $(nbsd_tdep_h) $(solib_svr4_h)
d1875 4
a1878 3
i386obsd-tdep.o: i386obsd-tdep.c $(defs_h) $(arch_utils_h) $(gdbcore_h) \
	$(regcache_h) $(regset_h) $(osabi_h) $(target_h) $(gdb_assert_h) \
	$(gdb_string_h) $(i386_tdep_h) $(i387_tdep_h) $(solib_svr4_h)
@


1.533
log
@2004-04-06  Andrew Cagney  <cagney@@redhat.com>

	* infttrace.c: Include "infttrace.h".
	* infttrace.h: Include "target.h".
	* Makefile.in (infttrace_h): Update.
	(infttrace.o): Update.
@
text
@d2360 1
a2360 1
	$(trad_frame_h) $(gdb_assert_h) $(sparc64_tdep_h)
d2386 1
a2386 1
	$(sparc_tdep_h)
@


1.532
log
@2004-04-06  Andrew Cagney  <cagney@@redhat.com>

	* hppah-nat.c (hpux_has_forked, hpux_has_vforked)
	(hpux_has_execd, hpux_has_syscall_event): Include "infttrace.h",
	move extern declarations from here ...
	* infttrace.h: ... to here.
	* Makefile.in (hppah-nat.o): Update dependencies.
@
text
@d695 1
a695 1
infttrace_h = infttrace.h
d1934 1
a1934 1
	$(gdbcore_h)
@


1.531
log
@	* Makefile.in (linux_nat_h): Update dependencies.
	* configure.in: Check for <gnu/libc-version.h>.
	* configure: Regenerate.
	* config.in: Regenerate.
	* linux-nat.h: Include "target.h".  Add waitstatus field to
	struct lwp_info.
	* lin-lwp.c (add_lwp): Initialize waitstatus.kind.
	(lin_lwp_attach_lwp): Don't attach to LWPs we have already attached
	to.
	(lin_lwp_handle_extended): New function.  Handle clone events.
	(wait_lwp): Use lin_lwp_handle_extended.  Update comment about
	thread exit events.
	(child_wait): Handle clone events.
	(lin_lwp_wait: Use lin_lwp_handle_extended and handle clone events.
	* linux-nat.c (linux_enable_event_reporting): Turn on
	PTRACE_O_TRACECLONE.
	(linux_handle_extended_wait): Handle clone events.
	* thread-db.c: Include <gnu/libc-version.h>.
	(struct private_thread_info): Add dying flag.
	(enable_thread_event_reporting): Enable TD_DEATH for glibc 2.2 and
	higher.
	(attach_thread): Update comments.  Handle dying threads.
	(detach_thread): Set the dying flag.
	(check_event): Always call attach_thread.
@
text
@d1819 1
a1819 1
	$(gdb_wait_h) $(regcache_h) $(gdb_string_h)
@


1.530
log
@	* Makefile.in (mips-linux-tdep.o): Update dependencies.
	* mips-tdep.c (mips_gdbarch_init): Move frame predicates
	to after osabi initialization.
	* mips-linux-tdep.c: Include "trad-frame.h" and "tramp-frame.h".
	(mips_linux_o32_sigframe_init, mips_linux_n32n64_sigframe_init): New
	functions.
	(mips_linux_o32_sigframe, mips_linux_o32_rt_sigframe)
	(mips_linux_n32_rt_sigframe, mips_linux_n64_rt_sigframe): New
	variables.
	(mips_linux_init_abi): Append signal trampoline unwinders.
@
text
@d702 1
a702 1
linux_nat_h = linux-nat.h
@


1.529
log
@2004-03-23  Andrew Cagney  <cagney@@redhat.com>

	* tramp-frame.h, tramp-frame.h: New files.
	* Makefile.in (SFILES, tramp_frame_h, COMMON_OBS, tramp-frame.o):
	Update rules to include "tramp-frame.h" and "tramp-frame.c".
@
text
@d2055 1
a2055 1
	$(gdb_assert_h) $(frame_h)
@


1.529.2.1
log
@2004-03-23  Elena Zannoni  <ezannoni@@redhat.com>

       * solib-svr4.c (svr4_solib_create_inferior_hook): Disable
       breakpoints at startup.
       (elf_locate_base): Find out where the entry point for the program
       is, using the auxv vector, if possible. Compute the address of
       .dynamic using it.
       (svr4_current_sos): Don't ignore the first entry if we have PIE,
       it's our main program. Delete code that was skipping over the
       solib entry for main executable.
       * solist.h (struct so_list): Add fields main and main_relocated.
        (add_to_target_sections): Export.
       * solib.c (symbol_add_stub): Handle main executable in shared
       library list. Ignore it if it has been relocated already. Add it
       as the main symbol file, otherwise.
       * infrun.c (handle_inferior_event): Re-enable startup breakpoints.

       * solib-svr4.c (elf_locate_base, first_link_map_member)
       svr4_current_sos, enable_break): Add debugging output.
       * solist.h (debug_solib): Export.
       * solib.c (debug_solib): New variable to enable debugging output.
       (symbol_add_stub, update_solib_list, update_solib_list)
       (add_to_target_sections): Add debugging output.
       (_initialize_solib): Add new comand to enable printing of
       debugging output.
       (add_to_target_sections): New function. Factored out from
       update_solib_list.
       (update_solib_list): Call add_to_target_sections.

       * varobj.h (varobj_refresh): New prototype.
       * varobj.c (varobj_refresh): New function.
       * symfile.c (reread_symbols): Make sure that we recompute the
       entry point for the program.
       (symbol_file_clear): Clear the solibs as well, if we change symbol
       files.
       (clear_symtab_users): Refresh the varobjs that depend on the symtabs
       we are clearing.
       * objfiles.c (entry_point_address): Rewrite, to fetch entry point
       from auxv vector, if possible.
       Add include of elf/common.h.
       * breakpoint.h (enum bptype): Add bp type bp_startup_disabled.
       (re_enable_breakpoints_at_startup)
       (disable_breakpoints_at_startup): Add prototypes
       * breakpoint.c (re_enable_breakpoints_at_startup)
       (disable_breakpoints_at_startup): New functions.
       (describe_other_breakpoints, delete_breakpoint)
       (breakpoint_re_set_one): Handle new bp type.
       * auxv.h (target_auxv_parse, target_auxv_search): Update.
       * auxv.c (target_auxv_parse, target_auxv_search)
       (fprint_target_auxv): Use ULONGEST instead of CORE_ADDR for
       variable. Change variable name to at_type.
@
text
@d2415 1
a2415 1
	$(gdb_string_h) $(gdb_stat_h) $(varobj_h)
@


1.528
log
@2004-03-23  Andrew Cagney  <cagney@@redhat.com>

	* Makefile.in: Update all dependencies.
@
text
@d544 1
d761 1
d910 2
a911 1
	trad-frame.o
d2450 3
@


1.527
log
@2004-03-23  Andrew Cagney  <cagney@@redhat.com>

	* Makefile.in (trad_frame_h): Add $(frame_h).
	* trad-frame.h: Update copyright.  Include "frame.h".
	(struct trad_frame_cache, trad_frame_cache_zalloc): Declare.
	(trad_frame_set_id, trad_frame_get_id): Declare.
	(trad_frame_set_reg_addr, trad_frame_get_register): Declare.
	* trad-frame.c: Update copyright.
	(struct trad_frame_cache): Define.
	(trad_frame_cache_zalloc): New function.
	(trad_frame_set_id, trad_frame_get_id): New functions.
	(trad_frame_set_reg_addr, trad_frame_get_register): New functions.
@
text
@d1536 1
a1536 1
	$(gdb_assert_h) $(i386_tdep_h) $(amd64_tdep_h)
d1770 2
a1771 2
frv-linux-tdep.o: frv-linux-tdep.c $(defs_h) $(target_h) $(osabi_h) \
	$(elf_bfd_h) $(elf_frv_h) $(frv_tdep_h)
d1858 2
a1859 2
	$(solib_svr4_h) $(gdb_string_h) $(i386_tdep_h) $(i386_linux_tdep_h) \
	$(glibc_tdep_h)
d2140 2
a2141 2
	$(objfiles_h) $(regcache_h) $(value_h) $(osabi_h) $(solib_svr4_h) \
	$(ppc_tdep_h)
d2247 2
a2248 1
	$(gdb_assert_h) $(dis_asm_h)
d2304 3
a2306 3
solib-frv.o: solib-frv.c $(defs_h) $(gdb_string_h) $(inferior_h) $(gdbcore_h) \
	$(solist_h) $(frv_tdep_h) $(objfiles_h) $(symtab_h) $(language_h) \
	$(command_h) $(gdbcmd_h) $(elf_frv_h)
d2416 1
a2416 1
	$(dictionary_h) $(gdb_string_h)
d2840 1
a2840 1
	$(gdb_curses_h)
@


1.526
log
@2004-03-21  Nathan J. Williams  <nathanw@@wasabisystems.com>

        * mipsnbsd-tdep.c: Update copyright. Include "mips-tdep.h".
        * Makefile.in (mipsnbsd-tdep.o): Update dependencies.
@
text
@d759 1
a759 1
trad_frame_h = trad-frame.h
@


1.525
log
@2004-03-18  Andrew Cagney  <cagney@@redhat.com>

	* frame-base.c: Update copyright.  Include "gdb_obstack.h".
	(struct frame_base_table_entry): Define.
	(struct frame_base_table): Re-implement as a linked list.
	(frame_base_init): Re-implement.
	(frame_base_table): Delete function.
	(append_predicate): Delete function.
	(frame_base_append_sniffer): Update.
	(frame_base_set_default): Update.
	(frame_base_find_by_frame): Update.
	(_initialize_frame_base): Use gdbarch_data_register_pre_init.
	* Makefile.in (frame-base.o): Update dependencies.
@
text
@d2058 1
a2058 1
	$(solib_svr4_h)
@


1.524
log
@2004-03-15  Andrew Cagney  <cagney@@redhat.com>

	* Makefile.in (frame-unwind.o): Update dependencies.
	* frame-unwind.c: Include "gdb_obstack.h".
	(frame_unwind_init): Replace "gdbarch" parameter with an "obstack"
	parameter.
	(append_predicate): Delete function.
	(struct frame_unwind_table_entry): New structure.
	(struct frame_unwind_table): Replace "sniffer" with "head" and
	"tail".
	(frame_unwind_append_sniffer): Update.
	(frame_unwind_find_by_frame): Update.
	(_initialize_frame_unwind): Registe frame_unwind_init using
	gdbarch_data_register_pre_init.
@
text
@d1761 2
a1762 1
frame-base.o: frame-base.c $(defs_h) $(frame_base_h) $(frame_h)
@


1.523
log
@	* Makefile.in (frv-linux-tdep.o): Add dependencies.
	* frv-linux-tdep.c: New file.
	* frv-tdep.c (struct gdbarch_tdep): Add new field
	``sigcontext_reg_addr''.
	(frv_set_sigcontext_reg_addr, frv_sigtramp,frame_cache)
	(frv_sigtramp_frame_this_id, frv_sigtramp_frame_prev_register)
	(frv_sigramp_frame_sniffer): New functions.
	(frv_sigtramp_frame_unwind): New static global.
	(frv_gdbarch_init): Hook in ABI-specific overrides.  Hook up frame
	sniffers.
	* frv-tdep.h (frv_set_sigcontext_reg_addr): New function.
	* config/frv/frv.mt (TDEPFILES): Add frv-linux-tdep.o.
@
text
@d1768 1
a1768 1
	$(gdb_assert_h) $(dummy_frame_h)
@


1.522
log
@* amd64-linux-tdep.h: Remove file.
* amd64-linux-tdep.c: Don't include "inferior.h" and
"amd64-linux-tdep.h".  Include "frame.h" and "solib-svr4.h".
(USER_R15, USER_R14, USER_R13, USER_R12, USER_RBP, USER_RBX)
(USER_R11, USER_R10, USER_R9, USER_R8, USER_RAX, USER_RCX)
(USER_RDX, USER_RSI, USER_RDI, USER_RIP, USER_CS, USER_EFLAGS)
(USER_RSP, USER_SS, USER_DS, USER_ES, USER_FS, USER_GS): Remove
macros.
(user_to_gdb_regmap): Remove variable.
(amd64_linux_gregset_reg_offset): New variable.
(amd64_core_fns): Remove variable.
(fetch_core_registers): Remove function.
(amd64_linux_supply_gregset, amd64_linux_fill_gregset): Remove
functions.
(_initialize_amd64_linux_tdep): Don't set add_core_fns.
* amd64-linux-nat.c: Don't include "amd64-linux-tdep.h".
* Makefile.in (amd64_linux_tdep_h): Remove.
(amd64-linux-nat.o): Update dependencies.
(amd64-linux-tdep.o): Update dependencies.
@
text
@d1769 2
@


1.521
log
@Add shared library support for FR-V FDPIC ABI.
@
text
@a616 1
amd64_linux_tdep_h = amd64-linux-tdep.h
d1531 2
a1532 2
	$(amd64_linux_tdep_h) $(i386_linux_tdep_h) $(amd64_nat_h)
amd64-linux-tdep.o: amd64-linux-tdep.c $(defs_h) $(inferior_h) $(gdbcore_h) \
d1534 1
a1534 1
	$(amd64_linux_tdep_h)
@


1.520
log
@Fix typo in Makefile.in; commit ChangeLog entries for previous change.
@
text
@d2301 3
@


1.519
log
@Add support for FDPIC executables.
@
text
@d1773 1
a1773 1
	$(sim_regno_h) $(gdb_sim_frv_h) $(opcodes_frv_desc_h) $(symtab_h)
@


1.518
log
@2004-02-28  Andrew Cagney  <cagney@@redhat.com>

	* utils.c: Use "", instead of <>, to include readline.
	tui/tui-win.c, tui/tui.c, tui/tui-hooks.c: Ditto.
	* tracepoint.c, top.c, symmisc.c, symfile.c: Ditto.
	* source.c, solib.c, exec.c, event-top.c: Ditto.
	* corelow.c, completer.c, cli/cli-setshow.c: Ditto.
	* cli/cli-dump.c, cli/cli-cmds.c: Ditto.
	* Makefile.in: Update all dependencies.
	(readline_tilde_h, readline_history_h): Define.
	(readline_headers): Delete.
@
text
@d572 1
d662 1
d1774 1
@


1.518.4.1
log
@Jumbo patch.  Experiments with tramp-frame.
@
text
@a543 1
	tramp-frame.c \
d907 1
a907 2
	trad-frame.o \
	tramp-frame.o
@


1.518.4.2
log
@Merge with mainline cagney_tramp-20040321-mergepoint.
@
text
@a572 1
elf_frv_h =	$(INCLUDE_DIR)/elf/frv.h $(elf_reloc_macros_h)
d617 1
a661 1
frv_tdep_h = frv-tdep.h
d1532 2
a1533 2
	$(i386_linux_tdep_h) $(amd64_nat_h)
amd64-linux-tdep.o: amd64-linux-tdep.c $(defs_h) $(frame_h) $(gdbcore_h) \
d1535 1
a1535 1
	$(solib_svr4_h)
d1762 1
a1762 2
frame-base.o: frame-base.c $(defs_h) $(frame_base_h) $(frame_h) \
	$(gdb_obstack_h)
d1769 1
a1769 3
	$(gdb_assert_h) $(dummy_frame_h) $(gdb_obstack_h)
frv-linux-tdep.o: frv-linux-tdep.c $(defs_h) $(target_h) $(osabi_h) \
	$(elf_bfd_h) $(elf_frv_h) $(frv_tdep_h)
d1773 1
a1773 2
	$(sim_regno_h) $(gdb_sim_frv_h) $(opcodes_frv_desc_h) $(symtab_h) \
	$(elf_bfd_h) $(elf_frv_h) $(osabi_h) $(frv_tdep_h)
d2055 1
a2055 1
	$(mips_tdep_h) $(solib_svr4_h)
a2299 3
solib-frv.o: solib-frv.c $(defs_h) $(gdb_string_h) $(inferior_h) $(gdbcore_h) \
	$(solist_h) $(frv_tdep_h) $(objfiles_h) $(symtab_h) $(language_h) \
	$(command_h) $(gdbcmd_h) $(elf_frv_h)
@


1.518.4.3
log
@Final tramp-frame code.
@
text
@d760 1
a760 2
trad_frame_h = trad-frame.h $(frame_h)
tramp_frame_h = tramp-frame.h
d1538 1
a1538 1
	$(gdb_assert_h) $(gdb_string_h) $(i386_tdep_h) $(amd64_tdep_h)
d1772 2
a1773 2
frv-linux-tdep.o: frv-linux-tdep.c $(defs_h) $(target_h) $(frame_h) \
	$(osabi_h) $(elf_bfd_h) $(elf_frv_h) $(frv_tdep_h)
d1860 2
a1861 2
	$(gdb_string_h) $(i386_tdep_h) $(i386_linux_tdep_h) $(glibc_tdep_h) \
	$(solib_svr4_h)
d2142 2
a2143 3
	$(objfiles_h) $(regcache_h) $(value_h) $(osabi_h) $(trad_frame_h) \
	$(tramp_frame_h) $(regset_h) $(solib_svr4_h) $(ppc_tdep_h) \
	$(trad_frame_h) $(frame_unwind_h)
d2148 1
a2148 2
	$(ppcnbsd_tdep_h) $(nbsd_tdep_h) $(tramp_frame_h) $(trad_frame_h) \
	$(solib_svr4_h)
d2249 1
a2249 2
	$(gdb_assert_h) $(dis_asm_h) $(trad_frame_h) $(frame_unwind_h) \
	$(frame_base_h)
d2305 3
a2307 3
solib-frv.o: solib-frv.c $(defs_h) $(gdb_string_h) $(inferior_h) \
	$(gdbcore_h) $(solist_h) $(frv_tdep_h) $(objfiles_h) $(symtab_h) \
	$(language_h) $(command_h) $(gdbcmd_h) $(elf_frv_h)
d2417 1
a2417 1
	$(dictionary_h) $(gdb_string_h) $(readline_h)
a2447 3
tramp-frame.o: tramp-frame.c $(defs_h) $(tramp_frame_h) $(frame_unwind_h) \
	$(gdbcore_h) $(symtab_h) $(objfiles_h) $(target_h) $(trad_frame_h) \
	$(frame_base_h)
d2841 1
a2841 1
	$(reggroups_h) $(gdb_curses_h)
@


1.517
log
@Index: ChangeLog
2004-02-26  Andrew Cagney  <cagney@@redhat.com>

	* Makefile.in: Update dependencies.
	Changes from Ulrich Weigand,
	* s390-tdep.c: Include "dwarf2-frame.h".
	(s390_dwarf2_frame_init_reg): New function.
	(s390_gdbarch_init): Install dwarf2_frame_sniffer and
	dwarf2_frame_base_sniffer.  Call dwarf2_frame_set_init_reg.
@
text
@d579 2
a588 6
readline_headers = \
	$(READLINE_SRC)/chardefs.h \
	$(READLINE_SRC)/history.h \
	$(READLINE_SRC)/keymaps.h \
	$(READLINE_SRC)/readline.h

d1631 1
a1631 1
	$(completer_h)
d1641 1
a1641 1
	$(exec_h) $(gdb_assert_h)
d1659 6
a1664 5
cris-tdep.o: cris-tdep.c $(defs_h) $(frame_h) $(symtab_h) $(inferior_h) \
	$(gdbtypes_h) $(gdbcore_h) $(gdbcmd_h) $(target_h) $(value_h) \
	$(opcode_cris_h) $(arch_utils_h) $(regcache_h) $(gdb_assert_h) \
	$(objfiles_h) $(solib_h) $(solib_svr4_h) $(gdb_string_h) \
	$(dis_asm_h)
d1737 1
a1737 1
	$(gdbcmd_h)
d1740 2
a1741 1
	$(exec_h) $(gdb_string_h) $(gdbcore_h) $(gdb_stat_h) $(xcoffsolib_h)
d2297 1
a2297 1
	$(completer_h) $(filenames_h) $(exec_h) $(solist_h)
d2324 1
a2324 1
	$(filenames_h) $(completer_h) $(ui_out_h)
d2402 2
a2403 2
	$(hashtab_h) $(gdb_assert_h) $(block_h) $(gdb_string_h) \
	$(gdb_stat_h)
d2428 2
a2429 2
	$(gdb_assert_h) $(event_top_h) $(gdb_string_h) $(gdb_stat_h) \
	$(ui_out_h) $(cli_out_h)
d2434 2
a2435 1
	$(block_h) $(dictionary_h) $(ax_h) $(ax_gdb_h)
d2450 1
a2450 1
	$(filenames_h) $(inferior_h)
d2507 7
a2513 6
cli-cmds.o: $(srcdir)/cli/cli-cmds.c $(defs_h) $(completer_h) $(target_h) \
	$(gdb_wait_h) $(gdb_regex_h) $(gdb_string_h) $(gdb_vfork_h) \
	$(linespec_h) $(expression_h) $(frame_h) $(value_h) $(language_h) \
	$(filenames_h) $(objfiles_h) $(source_h) $(disasm_h) $(ui_out_h) \
	$(top_h) $(cli_decode_h) $(cli_script_h) $(cli_setshow_h) \
	$(cli_cmds_h) $(tui_h)
d2521 1
a2521 1
	$(cli_dump_h) $(gdb_assert_h) $(target_h)
d2533 2
a2534 2
cli-setshow.o: $(srcdir)/cli/cli-setshow.c $(defs_h) $(value_h) \
	$(gdb_string_h) $(ui_out_h) $(cli_decode_h) $(cli_cmds_h) \
d2781 2
a2782 2
	$(readline_h) $(target_h) $(frame_h) $(breakpoint_h) $(inferior_h) \
	$(symtab_h) $(source_h) $(gdb_curses_h)
d2801 2
a2802 2
	$(breakpoint_h) $(gdb_events_h) $(ui_out_h) $(top_h) $(tui_h) \
	$(tui_hooks_h) $(tui_data_h) $(tui_layout_h) $(tui_io_h) \
d2848 1
a2848 1
	$(tui_windata_h) $(gdb_curses_h) $(gdb_string_h)
@


1.516
log
@* amd64-tdep.h: Renamed from x86-64-tdep.h.
* amd64-tdep.c: Renamed from x86-64-tdep.c.  Include
"amd64-tdep.h" instead of "x86-64-tdep.h".
* amd64-nat.c: Include "amd64-tdep.h" instead of "x86-64-tdep.h".
* amd64-linux-tdep.h: Renamed from x86-64-linux.h.
* amd64-linux-tdep.c: Renamed from x86-64-linux-tdep.c.  Include
"amd64-tdep.h" and "amd64-linux-tdep.h" instead of "x86-64-tdep.h"
and "x86-64-tdep.c".
* amd64-linux-nat.c: Renamed from x86-64-linux-nat.c.  Include
"amd64-tdep.h" and "amd64-linux-tdep.h" instead of "x86-64-tdep.h"
and "x86-64-tdep.c".
* amd64bsd-nat.c: Update copyright year.
Include "amd64-tdep.h" instead of "x86-64-tdep.h".
* amd64fbsd-tdep.c: Include "amd64-tdep.h" instead of
"x86-64-tdep.h".
* amd64fbsd-nat.c: Include "amd64-tdep.h" instead of
"x86-64-tdep.h".
* amd64nbsd-tdep.c: Include "amd64-tdep.h" instead of
"x86-64-tdep.h".
* amd64nbsd-nat.c: Include "amd64-tdep.h" instead of
"x86-64-tdep.h".
* amd64obsd-tdep.c: Include "amd64-tdep.h" instead of
"x86-64-tdep.h".
* amd64obsd-nat.c: Include "amd64-tdep.h" instead of
"x86-64-tdep.h".
* configure.host: (x86_64-*-linux*): Set gdb_target to linux64.
* configure.tgt (x86_64-*-linux*): Set gdb_target to linux64.
* Makefile.in (amd64_linux_tdep_h): Renamed from
x86_64_linux_tdep_h.
(amd64_tdep_h): Renamed from x86_64_tdep_h.
(amd64bsd-nat.o, amd64fbsd-nat.o, amd64fbsd-tdep.o, amd64-nat.o)
(amd64nbsd-nat.o, amd64nbsd-tdep.o, amd64obsd-nat.o)
(amd64obsd-tdep.o): Update dependencies.
(amd64-tdep.o, amd64-linux-nat.o, amd64-linux-tdep.o): New
dependencies.
(x86-64-linux-nat.o, x86-64-linux-tdep.o, x86-64-tdep.o): Remove
dependencies.
(ALLDEPFILES): Add amd64-tdep.c, amd64obsd-nat.c, amd64obsd-nat.c,
amd64-linux-nat.c amd64-linux-tdep.c.
* config/i386/tm-linux64.h: Renamed from tm-x86-64linux.h
* config/i386/nm-linux64.h: Renamed from nm-x86-64linux.h.
* config/i386/linux64.mt: Renamed from x86-64linux.mt.
(TDEPFILES): Replace x86-64-tdep.o and x86-64-linux-tdep.o with
amd64-tdep.o and amd64-linux-tdep.o.
(TM_FILE): Set to tm-linux64.h.
* config/i386/linux64.mh: Renamed from x86-64linux.mh.
(NAT_FILE): Set to nm-linux64.h.
(NATDEPFILES): Replace x86-64-linux-nat.o with amd64-linux-nat.o.
* config/i386/fbsd64.mt (TDEPFILES): Replace x86-64-tdep.o with
amd64-tdep.o.
* config/i386/nbsd64.mt (TDEPFILES): Replace x86-64-tdep.o with
amd64-tdep.o.
* config/i386/obsd64.mt (TDEPFILES): Replace x86-64-tdep.o with
amd64-tdep.o.
@
text
@d620 1
d622 1
a774 2
amd64_linux_tdep_h = amd64-linux-tdep.h
amd64_tdep_h = amd64-tdep.h $(i386_tdep_h)
d1535 3
a1537 3
amd64-linux-tdep.o: amd64-linux-tdep.c $(defs_h) $(inferior_h) \
	$(gdbcore_h) $(regcache_h) $(osabi_h) $(gdb_string_h) \
	$(amd64_tdep_h) $(amd64_linux_tdep_h)
d1895 1
a1895 1
	$(arch_utils_h) $(gdbcore_h)
d2250 3
a2252 3
	$(trad_frame_h) $(frame_base_h) $(frame_unwind_h) $(reggroups_h) \
	$(regset_h) $(value_h) $(gdb_assert_h) $(dis_asm_h) $(solib_svr4_h) \
	$(s390_tdep_h)
@


1.515
log
@Index: ChangeLog
2004-02-22  Andrew Cagney  <cagney@@redhat.com>

	* hppa-tdep.c: Include "trad-frame.h", "frame-unwind.h", and
	"frame-base.h".
	(struct hppa_frame_cache): Define.
	(hppa_frame_cache, hppa_frame_this_id): New functions.
	(hppa_frame_prev_register): New function.
	(hppa_frame_unwind, hppa_frame_base): New variables.
	(hppa_frame_unwind_sniffer): New function.
	(hppa_frame_base_address, hppa_unwind_pc): New function.
	(hppa_gdbarch_init): Set unwind_dummy_id, unwind_pc, frame unwind
	sniffer, and frame base sniffer; keep disabled.
	(hppa_frame_base_sniffer, hppa_unwind_dummy_id): New functions.
	* Makefile.in: Update dependencies, fix s/nbsd/obsd/ typo.
@
text
@d773 2
a774 2
x86_64_linux_tdep_h = x86-64-linux-tdep.h
x86_64_tdep_h = x86-64-tdep.h $(i386_tdep_h)
d1310 2
a1311 1
	amd64-nat.c amd64bsd-nat.c amdfbsd-nat.c amd64-fbsd-tdep.c \
d1313 2
d1525 1
a1525 1
	$(gdb_assert_h) $(x86_64_tdep_h) $(amd64_nat_h)
d1527 1
a1527 1
	$(gdb_assert_h) $(gregset_h) $(x86_64_tdep_h) $(amd64_nat_h)
d1530 8
a1537 1
	$(x86_64_tdep_h) $(solib_svr4_h)
d1539 2
a1540 2
	$(gdb_assert_h) $(i386_tdep_h) $(x86_64_tdep_h)
amd64nbsd-nat.o: amd64nbsd-nat.c $(defs_h) $(gdb_assert_h) $(x86_64_tdep_h) \
d1543 1
a1543 1
	$(gdbcore_h) $(osabi_h) $(gdb_assert_h) $(x86_64_tdep_h) \
d1545 1
a1545 1
amd64obsd-nat.o: amd64obsd-nat.c $(defs_h) $(gdb_assert_h) $(x86_64_tdep_h) \
d1549 6
a1554 1
	$(x86_64_tdep_h) $(i387_tdep_h) $(solib_svr4_h)
a2489 12
x86-64-linux-nat.o: x86-64-linux-nat.c $(defs_h) $(inferior_h) $(gdbcore_h) \
	$(regcache_h) $(linux_nat_h) $(gdb_assert_h) $(gdb_string_h) \
	$(gdb_proc_service_h) $(gregset_h) $(x86_64_tdep_h) \
	$(x86_64_linux_tdep_h) $(i386_linux_tdep_h) $(amd64_nat_h)
x86-64-linux-tdep.o: x86-64-linux-tdep.c $(defs_h) $(inferior_h) \
	$(gdbcore_h) $(regcache_h) $(osabi_h) $(gdb_string_h) \
	$(x86_64_tdep_h) $(x86_64_linux_tdep_h)
x86-64-tdep.o: x86-64-tdep.c $(defs_h) $(arch_utils_h) $(block_h) \
	$(dummy_frame_h) $(frame_h) $(frame_base_h) $(frame_unwind_h) \
	$(inferior_h) $(gdbcmd_h) $(gdbcore_h) $(objfiles_h) $(regcache_h) \
	$(regset_h) $(symfile_h) $(gdb_assert_h) $(x86_64_tdep_h) \
	$(i387_tdep_h)
@


1.514
log
@Remove old 386BSD support.
* configure.host: Remove i[34567]86-*-bsd*.
* configure.tgt: Remove i[34567]86-*-bsd*.
* i386b-nat.c: Removed.
* Makefile.in (ALLDEPFILES): Remove i386b-nat.c.
* config/i386/i386bsd.mh: Removed.
* config/i386/i386bsd.mt: Removed.
* config/i386/nm-i386bsd.h: Removed.
* config/i386/tm-i386bsd.h: Removed.
* config/i386/xm-i386bsd.h: Removed.
@
text
@d1527 1
a1527 1
	$(x86_64_tdep_h)  $(solib_svr4_h)
d1535 1
a1535 1
amd64obsd-nat.o: amd64nbsd-nat.c $(defs_h) $(gdb_assert_h) $(x86_64_tdep_h) \
d1537 3
a1539 3
amd64obsd-tdep.o: amd64nbsd-tdep.c $(defs_h) $(arch_utils_h) $(frame_h) \
	$(gdbcore_h) $(osabi_h) $(regset_h) $(target_h) $(gdb_assert_h) \
	$(gdb_string_h) $(x86_64_tdep_h) $(i387_tdep_h) $(solib_svr4_h)
d1803 5
a1807 3
	$(gdb_assert_h) $(infttrace_h) $(symtab_h) $(infcall_h) $(dis_asm_h) \
	$(a_out_encap_h) $(gdb_stat_h) $(gdb_wait_h) $(gdbcore_h) \
	$(gdbcmd_h) $(target_h) $(symfile_h) $(objfiles_h) $(hppa_tdep_h)
@


1.513
log
@Fix OpenBSD/i386 sigtramp recognition.
* i386-tdep.h: Update copyright year.
(i386bsd_pc_in_sigtramp, i386bsd_sigtramp_start)
(i386bsd_sigtramp_end): New prototypes.
(i386fbsd_sigtramp_start_addr): Renamed from
i386fbsd_sigtramp_start.
(i386fbsd_sigtramp_end_addr): Renamed from i386fbsd_sigtramp_end.
(i386obsd_sigtramp_start_addr): Renamed from
i386obsd_sigtramp_start.
(i386obsd_sigtramp_end_addr): Renamed from i386obsd_sigtramp_end.
* i386bsd-tdep.c: Update copyright year.
(i386bsd_pc_in_sigtramp): Make public.
* i386fbsd-nat.c: Update copyright year.
(_initialize_i386fbsd_nat): Adjust for renamed variables.
* i386fbsd-tdep.c: Update copyright year.
(i386fbsd_sigtramp_start_addr): Renamed from
i386fbsd_sigtramp_start.
(i386fbsd_sigtramp_end_addr): Renamed from i386fbsd_sigtramp_end.
(i386fbsdaout_init_abi): Adjust for renamed variables.
* i386obsd-nat.c: Update copyright year.
(_initialize_i386obsd_nat): Adjust for renamed variables.
* i386obsd-tdep.c: Include "target.h".
(i386obsd_page_size): New variable.
(i386obsd_pc_in_sigtramp, i386obsd_sigtramp_start)
(i386obsd_sigtramp_end): New functions.
(i386obsd_sigtramp_start_addr): Renamed from
i386obsd_sigtramp_start.
(i386obsd_sigtramp_end_addr): Renamed from i386obsd_sigtramp_end.
(i386obsd_init_abi): Adjust for renamed variables.  Set
pc_in_sigtramp, sigtramp_start and sigtramp_end.
* Makefile.in (i386obsd-tdep.o): Update dependencies.
@
text
@d1322 1
a1322 1
	i386-tdep.c i386b-nat.c i386v-nat.c i386-linux-nat.c \
d1527 1
a1527 1
	$(x86_64_tdep_h)
d1533 2
a1534 2
	$(gdbcore_h) $(osabi_h) $(gdb_assert_h) $(nbsd_tdep_h) \
	$(x86_64_tdep_h)
d1539 1
a1539 1
	$(gdb_string_h) $(x86_64_tdep_h) $(i387_tdep_h)
a1811 1
i386b-nat.o: i386b-nat.c $(defs_h)
d1821 1
a1821 1
	$(i386_tdep_h) $(i387_tdep_h)
@


1.512
log
@Fix PR build/1549.
* i386obsd-tdep.c: Update copyright years.  Include
"solib-svr4.h".
(i386obsd_init_abi): Don't set regset_from_core_section here.
(i386obsd_aout_init_abi): New function.  Set
regset_from_core_section here.
(i386obsd_elf_init_abi): New function.
(_initialize_i386obsd_tdep): Register OS/ABI for OpenBSD ELF.
* Makefile.in (i386obsd-tdep.o): Update dependecies.
* config/i386/obsd.mt (TDEPFILES): Add solib.o and solib-svr4.o.
(TM_FILE): Set to tm-nbsd.h.

* config/i386/obsd.mh (NATDEPFILES): Remove solib.o and
solib-sunos.o.
@
text
@d1852 2
a1853 2
	$(regcache_h) $(regset_h) $(osabi_h) $(gdb_assert_h) $(gdb_string_h) \
	$(i386_tdep_h) $(i387_tdep_h) $(solib_svr4_h)
@


1.512.2.1
log
@	* dwarf2read.c: Include "splay-tree.h".
	(struct dwarf2_cu): Add splay tree for partial DIEs.
	(struct partial_die_info): Move after struct attribute.
	Add has_specification, spec_attr, die_parent, die_child,
	and die_sibling fields.
	(load_partial_dies): New function.
	(load_partial_die): New function, broken out from read_partial_die.
	Correct setting of part_die->offset.  Save any specification
	attributes for later.
	(read_partial_die): Look up DIEs in the splay tree.
	(dwarf2_build_psymtabs_hard): Initialize partial_dies.  Call
	load_partial_die to read in the compilation unit DIE.  Call
	load_partial_dies.  Free the splay tree after use.
	(scan_partial_symbols): Follow the die_sibling chain.
	(add_partial_structure): Use die_child and die_sibling instead of
	read_partial_die and locate_pdi_sibling.
	(add_partial_enumeration): Likewise.
	(locate_pdi_sibling): Use load_partial_die instead of
	read_partial_die.
	(is_type_tag): New function.

	* Makefile.in (dwarf2read.o): Update dependencies.
@
text
@d1709 1
a1709 2
	$(cp_support_h) $(gdb_string_h) $(gdb_assert_h) \
	$(splay_tree_h)
@


1.512.2.2
log
@	* Makefile.in (hashtab_h): Add.
	(dwarf2read.o): Update dependencies.
@
text
@a585 1
hashtab_h =    $(INCLUDE_DIR)/hashtab.h
d1710 1
a1710 1
	$(splay_tree_h) $(hashtab_h)
@


1.512.2.3
log
@Merge mainline to intercu branch.
@
text
@a543 1
	tramp-frame.c \
a571 1
elf_frv_h =	$(INCLUDE_DIR)/elf/frv.h $(elf_reloc_macros_h)
a578 2
readline_tilde_h =	$(READLINE_SRC)/tilde.h
readline_history_h =	$(READLINE_SRC)/history.h
d588 6
a621 1
amd64_tdep_h = amd64-tdep.h $(i386_tdep_h)
a663 1
frv_tdep_h = frv-tdep.h
d761 1
a761 2
trad_frame_h = trad-frame.h $(frame_h)
tramp_frame_h = tramp-frame.h
d774 2
d912 1
a912 2
	trad-frame.o \
	tramp-frame.o
d1311 1
a1311 2
	amd64-nat.c amd64-tdep.c \
	amd64bsd-nat.c amdfbsd-nat.c amd64fbsd-tdep.c \
a1312 2
	amd64obsd-nat.c amd64obsd-tdep.c \
	amd64-linux-nat.c amd64-linux-tdep.c \
d1323 1
a1323 1
	i386-tdep.c i386v-nat.c i386-linux-nat.c \
d1523 1
a1523 1
	$(gdb_assert_h) $(amd64_tdep_h) $(amd64_nat_h)
d1525 1
a1525 1
	$(gdb_assert_h) $(gregset_h) $(amd64_tdep_h) $(amd64_nat_h)
d1528 1
a1528 8
	$(amd64_tdep_h) $(solib_svr4_h)
amd64-linux-nat.o: amd64-linux-nat.c $(defs_h) $(inferior_h) $(gdbcore_h) \
	$(regcache_h) $(linux_nat_h) $(gdb_assert_h) $(gdb_string_h) \
	$(gdb_proc_service_h) $(gregset_h) $(amd64_tdep_h) \
	$(i386_linux_tdep_h) $(amd64_nat_h)
amd64-linux-tdep.o: amd64-linux-tdep.c $(defs_h) $(frame_h) $(gdbcore_h) \
	$(regcache_h) $(osabi_h) $(gdb_string_h) $(amd64_tdep_h) \
	$(solib_svr4_h)
d1530 2
a1531 2
	$(gdb_assert_h) $(gdb_string_h) $(i386_tdep_h) $(amd64_tdep_h)
amd64nbsd-nat.o: amd64nbsd-nat.c $(defs_h) $(gdb_assert_h) $(amd64_tdep_h) \
d1534 3
a1536 3
	$(gdbcore_h) $(osabi_h) $(gdb_assert_h) $(amd64_tdep_h) \
	$(nbsd_tdep_h) $(solib_svr4_h)
amd64obsd-nat.o: amd64obsd-nat.c $(defs_h) $(gdb_assert_h) $(amd64_tdep_h) \
d1538 3
a1540 8
amd64obsd-tdep.o: amd64obsd-tdep.c $(defs_h) $(frame_h) $(gdbcore_h) \
	$(osabi_h) $(regset_h) $(target_h) $(gdb_assert_h) $(gdb_string_h) \
	$(amd64_tdep_h) $(i387_tdep_h) $(solib_svr4_h)
amd64-tdep.o: amd64-tdep.c $(defs_h) $(arch_utils_h) $(block_h) \
	$(dummy_frame_h) $(frame_h) $(frame_base_h) $(frame_unwind_h) \
	$(inferior_h) $(gdbcmd_h) $(gdbcore_h) $(objfiles_h) $(regcache_h) \
	$(regset_h) $(symfile_h) $(gdb_assert_h) $(amd64_tdep_h) \
	$(i387_tdep_h)
d1621 1
a1621 1
	$(readline_h) $(completer_h)
d1631 1
a1631 1
	$(exec_h) $(readline_h) $(gdb_assert_h)
d1649 5
a1653 6
cris-tdep.o: cris-tdep.c $(defs_h) $(frame_h) $(frame_unwind_h) \
	$(frame_base_h) $(trad_frame_h) $(dwarf2_frame_h) $(symtab_h) \
	$(inferior_h) $(gdbtypes_h) $(gdbcore_h) $(gdbcmd_h) $(target_h) \
	$(value_h) $(opcode_cris_h) $(arch_utils_h) $(regcache_h) \
	$(gdb_assert_h) $(objfiles_h) $(solib_h) $(solib_svr4_h) \
	$(gdb_string_h) $(dis_asm_h)
d1727 1
a1727 1
	$(gdbcmd_h) $(readline_h) $(readline_history_h)
d1730 1
a1730 2
	$(exec_h) $(readline_h) $(gdb_string_h) $(gdbcore_h) $(gdb_stat_h) \
	$(xcoffsolib_h)
d1749 1
a1749 2
frame-base.o: frame-base.c $(defs_h) $(frame_base_h) $(frame_h) \
	$(gdb_obstack_h)
d1756 1
a1756 3
	$(gdb_assert_h) $(dummy_frame_h) $(gdb_obstack_h)
frv-linux-tdep.o: frv-linux-tdep.c $(defs_h) $(target_h) $(frame_h) \
	$(osabi_h) $(elf_bfd_h) $(elf_frv_h) $(frv_tdep_h)
d1760 1
a1760 2
	$(sim_regno_h) $(gdb_sim_frv_h) $(opcodes_frv_desc_h) $(symtab_h) \
	$(elf_bfd_h) $(elf_frv_h) $(osabi_h) $(frv_tdep_h)
d1805 3
a1807 5
	$(gdb_assert_h) $(infttrace_h) $(arch_utils_h) $(symtab_h) \
	$(infcall_h) $(dis_asm_h) $(trad_frame_h) $(frame_unwind_h) \
	$(frame_base_h) $(a_out_encap_h) $(gdb_stat_h) $(gdb_wait_h) \
	$(gdbcore_h) $(gdbcmd_h) $(target_h) $(symfile_h) $(objfiles_h) \
	$(hppa_tdep_h)
d1814 1
d1824 1
a1824 1
	$(i386_tdep_h) $(i387_tdep_h) $(solib_svr4_h)
d1841 2
a1842 2
	$(gdb_string_h) $(i386_tdep_h) $(i386_linux_tdep_h) $(glibc_tdep_h) \
	$(solib_svr4_h)
d1854 2
a1855 2
	$(regcache_h) $(regset_h) $(osabi_h) $(target_h) $(gdb_assert_h) \
	$(gdb_string_h) $(i386_tdep_h) $(i387_tdep_h) $(solib_svr4_h)
d1881 1
a1881 1
	$(arch_utils_h) $(gdbcore_h) $(regcache_h)
d2035 1
a2035 1
	$(gdb_assert_h) $(frame_h) $(trad_frame_h) $(tramp_frame_h)
d2041 1
a2041 1
	$(mips_tdep_h) $(solib_svr4_h)
d2123 2
a2124 2
	$(objfiles_h) $(regcache_h) $(value_h) $(osabi_h) $(regset_h) \
	$(solib_svr4_h) $(ppc_tdep_h) $(trad_frame_h) $(frame_unwind_h)
d2230 1
a2230 2
	$(gdb_assert_h) $(dis_asm_h) $(trad_frame_h) $(frame_unwind_h) \
	$(frame_base_h)
d2236 3
a2238 3
	$(trad_frame_h) $(frame_base_h) $(frame_unwind_h) $(dwarf2_frame_h) \
	$(reggroups_h) $(regset_h) $(value_h) $(gdb_assert_h) $(dis_asm_h) \
	$(solib_svr4_h) $(s390_tdep_h)
d2285 1
a2285 4
	$(completer_h) $(filenames_h) $(exec_h) $(solist_h) $(readline_h)
solib-frv.o: solib-frv.c $(defs_h) $(gdb_string_h) $(inferior_h) \
	$(gdbcore_h) $(solist_h) $(frv_tdep_h) $(objfiles_h) $(symtab_h) \
	$(language_h) $(command_h) $(gdbcmd_h) $(elf_frv_h)
d2312 1
a2312 1
	$(filenames_h) $(completer_h) $(ui_out_h) $(readline_h)
d2390 2
a2391 2
	$(hashtab_h) $(readline_h) $(gdb_assert_h) $(block_h) \
	$(gdb_string_h) $(gdb_stat_h)
d2395 1
a2395 1
	$(dictionary_h) $(gdb_string_h) $(readline_h)
d2416 2
a2417 2
	$(gdb_assert_h) $(readline_h) $(readline_history_h) $(event_top_h) \
	$(gdb_string_h) $(gdb_stat_h) $(ui_out_h) $(cli_out_h)
d2422 1
a2422 2
	$(block_h) $(dictionary_h) $(ax_h) $(ax_gdb_h) $(readline_h) \
	$(readline_history_h)
a2424 3
tramp-frame.o: tramp-frame.c $(defs_h) $(tramp_frame_h) $(frame_unwind_h) \
	$(gdbcore_h) $(symtab_h) $(objfiles_h) $(target_h) $(trad_frame_h) \
	$(frame_base_h)
d2437 1
a2437 1
	$(filenames_h) $(inferior_h) $(readline_h)
d2476 12
d2506 6
a2511 7
cli-cmds.o: $(srcdir)/cli/cli-cmds.c $(defs_h) $(readline_h) \
	$(readline_tilde_h) $(completer_h) $(target_h) $(gdb_wait_h) \
	$(gdb_regex_h) $(gdb_string_h) $(gdb_vfork_h) $(linespec_h) \
	$(expression_h) $(frame_h) $(value_h) $(language_h) $(filenames_h) \
	$(objfiles_h) $(source_h) $(disasm_h) $(ui_out_h) $(top_h) \
	$(cli_decode_h) $(cli_script_h) $(cli_setshow_h) $(cli_cmds_h) \
	$(tui_h)
d2519 1
a2519 1
	$(cli_dump_h) $(gdb_assert_h) $(target_h) $(readline_h)
d2531 2
a2532 2
cli-setshow.o: $(srcdir)/cli/cli-setshow.c $(defs_h) $(readline_tilde_h) \
	$(value_h) $(gdb_string_h) $(ui_out_h) $(cli_decode_h) $(cli_cmds_h) \
d2779 2
a2780 2
	$(target_h) $(frame_h) $(breakpoint_h) $(inferior_h) $(symtab_h) \
	$(source_h) $(gdb_curses_h) $(readline_h)
d2799 2
a2800 2
	$(breakpoint_h) $(gdb_events_h) $(ui_out_h) $(top_h) $(readline_h) \
	$(tui_h) $(tui_hooks_h) $(tui_data_h) $(tui_layout_h) $(tui_io_h) \
d2829 1
a2829 1
	$(reggroups_h) $(gdb_curses_h)
d2846 1
a2846 1
	$(tui_windata_h) $(gdb_curses_h) $(gdb_string_h) $(readline_h)
@


1.512.2.4
log
@Merge GDB mainline of 20040402 to intercu branch.
@
text
@d703 1
a703 1
linux_nat_h = linux-nat.h $(target_h)
@


1.512.2.5
log
@./
	* Makefile.in (dwarf2read.o): Update dependencies.
	* dwarf2read.c: Include "command.h" and "gdbcmd.h".
	(MAX_CACHE_AGE): Remove.
	(dwarf2_max_cache_age): New variable.
	(free_comp_units_worker): Update.
	(set_dwarf2_cmdlist, show_dwarf2_cmdlist, set_dwarf2_cmd)
	(show_dwarf2_cmd): New.
	(_initialize_dwarf2_read): Provide "maint set dwarf2 max-cache-age"
	and "maint show dwarf2 max-cache-age".
	* gdbcmd.h (maintenance_set_cmdlist, maintenance_show_cmdlist): New
	externs.
	* maint.c (maintenance_set_cmdlist, maintenance_show_cmdlist): Make
	global.
doc/
	* gdb.texinfo (Maintenance Commands): Document "maint set dwarf2
	max-cache-age" and "maint show dwarf2 max-cache-age".
@
text
@d1727 1
a1727 1
	$(splay_tree_h) $(hashtab_h) $(command_h) $(gdbcmd_h)
@


1.512.2.6
log
@Merge mainline to intercu branch - 2004-09-15
@
text
@a31 1
localedir = @@localedir@@
a67 7
XGETTEXT = @@XGETTEXT@@
GMSGFMT = @@GMSGFMT@@
MSGMERGE = msgmerge

PACKAGE = @@PACKAGE@@
CATALOGS = @@CATALOGS@@

d309 1
d321 1
a321 1
GDB_CFLAGS = -I. -I$(srcdir) -I$(srcdir)/config -DLOCALEDIR="\"$(localedir)\"" $(DEFS)
d541 1
a541 2
	stabsread.c stack.c std-regs.c symfile.c symfile-mem.c symmisc.c \
	symtab.c \
d563 1
a584 1
gdb_callback_h = $(INCLUDE_DIR)/gdb/callback.h
a587 1
gdb_sim_ppc_h =	$(INCLUDE_DIR)/gdb/sim-ppc.h
d590 1
a590 1
hashtab_h =	$(INCLUDE_DIR)/hashtab.h
a601 2
observer_h = observer.h
observer_inc = observer.inc
d616 1
a616 1
ada_lang_h = ada-lang.h $(value_h) $(gdbtypes_h) $(breakpoint_h)
a630 1
bsd_kvm_h = bsd-kvm.h
a674 1
gdb_ptrace_h = gdb_ptrace.h
a692 1
inf_child_h = inf-child.h
a695 1
inf_ptrace_h = inf-ptrace.h
a705 1
m88k_tdep_h = m88k-tdep.h
d711 1
d720 1
a726 1
ppcobsd_tdep_h = ppcobsd-tdep.h
d762 1
a762 1
tramp_frame_h = tramp-frame.h $(frame_h)
d776 1
d830 1
a830 2
	symfile.h symfile-mem.h stabsread.h target.h terminal.h typeprint.h \
	xcoffsolib.h \
d910 1
a910 1
	reggroups.o regset.o \
a954 28
# The idea is to parallelize testing of multilibs, for example:
#   make -j3 check//sh-hms-sim/{-m1,-m2,-m3,-m3e,-m4}/{,-nofpu}
# will run 3 concurrent sessions of check, eventually testing all 10
# combinations.  GNU make is required for the % pattern to work, as is
# a shell that expands alternations within braces.  If GNU make is not
# used, this rule will harmlessly fail to match.
check//%: force
	@@if [ -f testsuite/config.status ]; then \
	  rootme=`pwd`; export rootme; \
	  rootsrc=`cd $(srcdir); pwd`; export rootsrc; \
	  target=`echo "$@@" | sed 's,//.*,,'`; \
	  variant=`echo "$@@" | sed 's,^[^/]*//,,'`; \
	  vardots=`echo "$$variant" | sed 's,/,.,g'`; \
	  testdir=testsuite.$$vardots; \
	  if [ ! -f $$testdir/Makefile ]; then \
	    (cd testsuite && find . -name config.status) | \
	    sed s,/config.status$$,, | sort | while read subdir; do \
	      $(SHELL) $(srcdir)/../mkinstalldirs $$testdir/$$subdir && \
	      (cd $$testdir/$$subdir && \
	       $(SHELL) $$rootme/testsuite/$$subdir/config.status \
		 --recheck && \
	       $(SHELL) ./config.status); done; \
	  else :; fi && cd $$testdir && \
	  $(MAKE) $(TARGET_FLAGS_TO_PASS) \
	    RUNTESTFLAGS="--target_board=$$variant $(RUNTESTFLAGS)" \
	    "$$target"; \
	else true; fi

d1153 9
d1171 1
a1171 1
	@@etags $(srcdir)/$(DEPRECATED_TM_FILE) \
d1228 1
a1228 1
diststuff: $(DISTSTUFF) $(PACKAGE).pot $(CATALOGS)
a1284 5
observer.h: observer.sh doc/observer.texi
	${srcdir}/observer.sh h ${srcdir}/doc/observer.texi observer.h

observer.inc: observer.sh doc/observer.texi
	${srcdir}/observer.sh inc ${srcdir}/doc/observer.texi observer.inc
a1318 1
	bsd-kvm.c \
d1321 1
a1321 1
	dcache.c exec.c fork-child.c \
a1325 2
	hppa-linux-tdep.c hppa-linux-nat.c \
	hppabsd-nat.c hppabsd-tdep.c \
a1328 1
	i386nbsd-nat.c i386nbsd-tdep.c i386obsd-nat.c i386obsd-tdep.c \
a1337 2
	m68kbsd-nat.c m68kbsd-tdep.c \
	m88k-tdep.c m88kbsd-nat.c \
d1340 1
d1347 2
a1348 3
	ppc-sysv-tdep.c ppc-linux-nat.c ppc-linux-tdep.c \
	ppcnbsd-nat.c ppcnbsd-tdep.c \
	ppcobsd-nat.c ppcobsd-tdep.c \
d1366 1
d1368 1
a1368 1
	vax-nat.c vax-tdep.c vaxbsd-nat.c vaxnbsd-tdep.c \
d1424 5
a1428 73

# Message files.  Based on code in gcc/Makefile.in.

# Rules for generating translated message descriptions.  Disabled by
# autoconf if the tools are not available.

.SUFFIXES: .po .gmo .pox .pot
.PHONY: all-po install-po uninstall-po clean-po update-po $(PACKAGE).pot

all-po: $(CATALOGS)

# This notation should be acceptable to all Make implementations used
# by people who are interested in updating .po files.
update-po: $(CATALOGS:.gmo=.pox)

# N.B. We do not attempt to copy these into $(srcdir).  The snapshot
# script does that.
.po.gmo:
	-test -d po || mkdir po
	$(GMSGFMT) --statistics -o $@@ $<

# The new .po has to be gone over by hand, so we deposit it into
# build/po with a different extension.  If build/po/$(PACKAGE).pot
# exists, use it (it was just created), else use the one in srcdir.
.po.pox:
	-test -d po || mkdir po
	$(MSGMERGE) $< `if test -f po/$(PACKAGE).pot; \
			then echo po/$(PACKAGE).pot; \
			else echo $(srcdir)/po/$(PACKAGE).pot; fi` -o $@@

# This rule has to look for .gmo modules in both srcdir and the cwd,
# and has to check that we actually have a catalog for each language,
# in case they weren't built or included with the distribution.
install-po:
	$(SHELL) $(srcdir)/../mkinstalldirs $(DESTDIR)$(datadir)
	cats="$(CATALOGS)"; for cat in $$cats; do \
	  lang=`basename $$cat | sed 's/\.gmo$$//'`; \
	  if [ -f $$cat ]; then :; \
	  elif [ -f $(srcdir)/$$cat ]; then cat=$(srcdir)/$$cat; \
	  else continue; \
	  fi; \
	  dir=$(localedir)/$$lang/LC_MESSAGES; \
	  echo $(SHELL) $(srcdir)/../mkinstalldirs $(DESTDIR)$$dir; \
	  $(SHELL) $(srcdir)/../mkinstalldirs $(DESTDIR)$$dir || exit 1; \
	  echo $(INSTALL_DATA) $$cat $(DESTDIR)$$dir/$(PACKAGE).mo; \
	  $(INSTALL_DATA) $$cat $(DESTDIR)$$dir/$(PACKAGE).mo; \
	done
uninstall-po:
	cats="$(CATALOGS)"; for cat in $$cats; do \
	  lang=`basename $$cat | sed 's/\.gmo$$//'`; \
	  if [ -f $$cat ]; then :; \
	  elif [ -f $(srcdir)/$$cat ]; then cat=$(srcdir)/$$cat; \
	  else continue; \
	  fi; \
	  dir=$(localedir)/$$lang/LC_MESSAGES; \
	  rm -f $(DESTDIR)$$dir/$(PACKAGE).mo; \
	done
# Delete po/*.gmo only if we are not building in the source directory.
clean-po:
	-if [ ! -f Makefile.in ]; then rm -f po/*.gmo; fi

# Rule for regenerating the message template (gdb.pot).  Instead of
# forcing everyone to edit POTFILES.in, which proved impractical, this
# rule has no dependencies and always regenerates gdb.pot.  This is
# relatively harmless since the .po files do not directly depend on
# it.  The .pot file is left in the build directory.  Since GDB's
# Makefile lacks a cannonical list of sources (missing xm, tm and nm
# files) force this rule.
$(PACKAGE).pot: po/$(PACKAGE).pot
po/$(PACKAGE).pot: force
	-test -d po || mkdir po
	sh -e $(srcdir)/po/gdbtext $(XGETTEXT) $(PACKAGE) . $(srcdir)

d1479 12
a1490 11
ada-exp.o: ada-exp.c $(defs_h) $(gdb_string_h) $(expression_h) $(value_h) \
	$(parser_defs_h) $(language_h) $(ada_lang_h) $(bfd_h) $(symfile_h) \
	$(objfiles_h) $(frame_h) $(block_h) $(ada_lex_c)
ada-lang.o: ada-lang.c $(defs_h) $(gdb_string_h) $(demangle_h) \
	$(gdb_regex_h) $(frame_h) $(symtab_h) $(gdbtypes_h) $(gdbcmd_h) \
	$(expression_h) $(parser_defs_h) $(language_h) $(c_lang_h) \
	$(inferior_h) $(symfile_h) $(objfiles_h) $(breakpoint_h) \
	$(gdbcore_h) $(hashtab_h) $(gdb_obstack_h) $(ada_lang_h) \
	$(completer_h) $(gdb_stat_h) $(ui_out_h) $(block_h) $(infcall_h) \
	$(dictionary_h)
ada-lex.o: ada-lex.c $(gdb_string_h)
d1495 3
a1497 3
ada-valprint.o: ada-valprint.c $(defs_h) $(gdb_string_h) $(symtab_h) \
	$(gdbtypes_h) $(expression_h) $(value_h) $(demangle_h) $(valprint_h) \
	$(language_h) $(annotate_h) $(ada_lang_h) $(c_lang_h) $(infcall_h)
d1499 2
a1500 2
	$(target_h) $(inferior_h) $(regcache_h) $(gdbcmd_h) $(ppc_tdep_h) \
	$(gdb_string_h)
d1515 2
a1516 2
	$(regcache_h) $(value_h) $(osabi_h) $(gdb_string_h) $(alpha_tdep_h) \
	$(alphabsd_tdep_h) $(nbsd_tdep_h) $(solib_svr4_h)
d1524 1
a1524 1
	$(infcall_h) $(elf_bfd_h) $(alpha_tdep_h)
d1528 1
a1528 1
	$(gdb_assert_h) $(amd64_tdep_h) $(amd64_nat_h) $(bsd_kvm_h)
d1537 1
a1537 1
	$(regcache_h) $(osabi_h) $(symtab_h) $(gdb_string_h) $(amd64_tdep_h) \
d1544 1
a1544 1
	$(gdbcore_h) $(osabi_h) $(symtab_h) $(gdb_assert_h) $(amd64_tdep_h) \
d1546 2
a1547 2
amd64obsd-nat.o: amd64obsd-nat.c $(defs_h) $(gdbcore_h) $(regcache_h) \
	$(gdb_assert_h) $(amd64_tdep_h) $(amd64_nat_h) $(bsd_kvm_h)
d1549 2
a1550 3
	$(symtab_h) $(objfiles_h) $(osabi_h) $(regset_h) $(target_h) \
	$(gdb_assert_h) $(gdb_string_h) $(amd64_tdep_h) $(i387_tdep_h) \
	$(solib_svr4_h)
d1560 1
a1560 1
	$(gdb_assert_h) $(sim_regno_h) $(gdbcore_h) $(osabi_h) $(version_h) \
d1570 2
a1571 2
armnbsd-tdep.o: armnbsd-tdep.c $(defs_h) $(osabi_h) $(gdb_string_h) \
	$(arm_tdep_h) $(nbsd_tdep_h) $(solib_svr4_h)
d1605 2
a1606 5
	$(ui_out_h) $(cli_script_h) $(gdb_assert_h) $(block_h) $(solist_h) \
	$(observer_h) $(gdb_events_h)
bsd-kvm.o: bsd-kvm.c $(defs_h) $(cli_cmds_h) $(command_h) $(frame_h) \
	$(regcache_h) $(target_h) $(value_h) $(gdbcore_h) $(gdb_assert_h) \
	$(readline_h) $(bsd_kvm_h)
d1609 2
a1610 2
	$(complaints_h) $(gdb_string_h) $(expression_h) $(bcache_h) \
	$(filenames_h) $(macrotab_h) $(demangle_h) $(block_h) \
d1646 1
a1646 1
	$(exec_h) $(readline_h) $(observer_h) $(gdb_assert_h)
d1688 2
a1689 2
	$(gdb_stabs_h) $(demangle_h) $(complaints_h) $(cp_abi_h) \
	$(gdb_assert_h) $(aout_aout64_h) $(aout_stab_gnu_h)
d1692 1
d1703 1
d1708 1
a1708 1
	$(command_h) $(gdbcmd_h) $(gdb_string_h)
d1726 2
a1727 2
	$(cp_support_h) $(hashtab_h) $(gdb_string_h) $(gdb_assert_h) \
	$(splay_tree_h) $(command_h) $(gdbcmd_h)
d1751 2
a1752 2
fbsd-proc.o: fbsd-proc.c $(defs_h) $(gdbcore_h) $(inferior_h) $(regcache_h) \
	$(regset_h) $(gdb_assert_h) $(gdb_string_h) $(elf_bfd_h)
d1772 1
a1772 1
	$(command_h) $(gdbcmd_h) $(observer_h) $(objfiles_h)
d1776 1
a1776 2
	$(osabi_h) $(elf_bfd_h) $(elf_frv_h) $(frv_tdep_h) $(trad_frame_h) \
	$(frame_unwind_h)
d1781 1
a1781 1
	$(elf_bfd_h) $(elf_frv_h) $(osabi_h) $(infcall_h) $(frv_tdep_h)
a1819 5
hppabsd-nat.o: hppabsd-nat.c $(defs_h) $(inferior_h) $(regcache_h) \
	$(hppa_tdep_h)
hppabsd-tdep.o: hppabsd-tdep.c $(defs_h) $(arch_utils_h) $(osabi_h) \
	$(regcache_h) $(regset_h) $(gdb_assert_h) $(gdb_string_h) \
	$(hppa_tdep_h) $(solib_svr4_h)
d1821 1
a1821 2
	$(gdb_wait_h) $(regcache_h) $(gdb_string_h) $(infttrace_h) \
	$(hppa_tdep_h)
d1823 7
a1829 13
	$(osabi_h) $(gdb_string_h) $(frame_h) $(frame_unwind_h) \
	$(trad_frame_h) $(symtab_h) $(objfiles_h) $(inferior_h) $(infcall_h) \
	$(observer_h) $(hppa_tdep_h)
hppa-linux-nat.o: hppa-linux-nat.c $(defs_h) $(gdbcore_h) $(regcache_h) \
	$(gdb_string_h) $(inferior_h) $(hppa_tdep_h) $(gregset_h)
hppa-linux-tdep.o: hppa-linux-tdep.c $(defs_h) $(gdbcore_h) $(osabi_h) \
	$(target_h) $(objfiles_h) $(solib_svr4_h) $(glibc_tdep_h) \
	$(frame_unwind_h) $(trad_frame_h) $(dwarf2_frame_h) $(value_h) \
	$(hppa_tdep_h) $(elf_common_h)
hppa-tdep.o: hppa-tdep.c $(defs_h) $(bfd_h) $(inferior_h) $(regcache_h) \
	$(completer_h) $(osabi_h) $(gdb_assert_h) $(arch_utils_h) \
	$(symtab_h) $(dis_asm_h) $(trad_frame_h) $(frame_unwind_h) \
	$(frame_base_h) $(gdbcore_h) $(gdbcmd_h) $(objfiles_h) \
d1834 1
a1834 1
	$(somsolib_h) $(gdb_assert_h) $(hppa_tdep_h) $(gdb_string_h)
d1838 1
a1838 1
	$(gdb_assert_h) $(i386_tdep_h) $(i387_tdep_h)
d1844 1
a1844 1
	$(i386_tdep_h) $(bsd_kvm_h)
d1851 6
d1868 3
a1870 6
i386nbsd-nat.o: i386nbsd-nat.c $(defs_h) $(gdbcore_h) $(regcache_h) \
	$(i386_tdep_h) $(bsd_kvm_h)
i386nbsd-tdep.o: i386nbsd-tdep.c $(defs_h) $(arch_utils_h) $(frame_h) \
	$(gdbcore_h) $(regcache_h) $(regset_h) $(osabi_h) $(symtab_h) \
	$(gdb_assert_h) $(gdb_string_h) $(i386_tdep_h) $(i387_tdep_h) \
	$(nbsd_tdep_h) $(solib_svr4_h)
d1875 3
a1877 4
i386obsd-tdep.o: i386obsd-tdep.c $(defs_h) $(arch_utils_h) $(frame_h) \
	$(gdbcore_h) $(regcache_h) $(regset_h) $(symtab_h) $(objfiles_h) \
	$(osabi_h) $(target_h) $(gdb_assert_h) $(gdb_string_h) \
	$(i386_tdep_h) $(i387_tdep_h) $(solib_svr4_h)
d1879 1
a1879 1
	$(gdb_string_h) $(i386_tdep_h) $(solib_svr4_h)
d1908 1
a1908 1
	$(elf_bfd_h) $(dis_asm_h) $(infcall_h) $(ia64_tdep_h) $(elf_ia64_h) \
d1912 1
a1912 4
	$(objfiles_h) $(gdbcmd_h) $(command_h) $(gdb_string_h) $(infcall_h) \
	$(dummy_frame_h)
inf-child.o: inf-child.c $(defs_h) $(regcache_h) $(memattr_h) $(symtab_h) \
	$(target_h) $(inferior_h)
d1924 3
a1926 6
inf-ptrace.o: inf-ptrace.c $(defs_h) $(observer_h) $(gdb_ptrace_h) \
	$(inflow_h) $(inferior_h) $(regcache_h) $(command_h) $(gdbcore_h) \
	$(inf_child_h) $(gdbcmd_h)
infptrace.o: infptrace.c $(defs_h) $(command_h) $(frame_h) $(gdbcore_h) \
	$(inferior_h) $(regcache_h) $(target_h) $(gdb_assert_h) \
	$(gdb_wait_h) $(gdb_string_h) $(gdb_dirent_h) $(gdb_ptrace_h)
d1933 1
a1933 2
	$(gdbcore_h) $(command_h) $(gdb_stat_h) $(observer_h) $(gdb_wait_h) \
	$(inflow_h)
d1936 1
a1936 1
	$(infttrace_h) $(gdbcore_h)
a2003 5
m68kbsd-nat.o: m68kbsd-nat.c $(defs_h) $(gdbcore_h) $(inferior_h) \
	$(regcache_h) $(gdb_assert_h) $(m68k_tdep_h) $(bsd_kvm_h)
m68kbsd-tdep.o: m68kbsd-tdep.c $(defs_h) $(arch_utils_h) $(osabi_h) \
	$(regcache_h) $(regset_h) $(gdb_assert_h) $(gdb_string_h) \
	$(m68k_tdep_h) $(solib_svr4_h)
d2011 4
a2014 1
	$(m68k_tdep_h) $(trad_frame_h) $(frame_unwind_h)
d2017 4
a2020 10
	$(frame_base_h) $(frame_unwind_h) $(floatformat_h) $(symtab_h) \
	$(gdbcore_h) $(value_h) $(gdb_string_h) $(gdb_assert_h) \
	$(inferior_h) $(regcache_h) $(arch_utils_h) $(osabi_h) $(dis_asm_h) \
	$(m68k_tdep_h) $(gregset_h)
m88kbsd-nat.o: m88kbsd-nat.c $(defs_h) $(inferior_h) $(regcache_h) \
	$(m88k_tdep_h)
m88k-tdep.o: m88k-tdep.c $(defs_h) $(arch_utils_h) $(dis_asm_h) $(frame_h) \
	$(frame_base_h) $(frame_unwind_h) $(gdbcore_h) $(gdbtypes_h) \
	$(regcache_h) $(regset_h) $(symtab_h) $(trad_frame_h) $(value_h) \
	$(gdb_assert_h) $(gdb_string_h) $(m88k_tdep_h)
d2046 1
a2046 1
	$(aout_aout64_h) $(aout_stab_gnu_h) $(expression_h)
d2058 1
d2074 1
a2074 2
	$(frame_unwind_h) $(frame_base_h) $(trad_frame_h) $(infcall_h) \
	$(floatformat_h)
d2114 1
a2114 2
observer.o: observer.c $(defs_h) $(observer_h) $(command_h) $(gdbcmd_h) \
	$(observer_inc)
d2123 1
a2123 1
	$(regcache_h) $(exec_h) $(hppa_tdep_h)
d2137 1
a2137 1
	$(regcache_h) $(gdb_assert_h)
d2141 2
a2142 2
	$(inferior_h) $(gdbcore_h) $(regcache_h) $(gdb_assert_h) \
	$(gdb_wait_h) $(gregset_h) $(ppc_tdep_h)
d2147 2
a2148 3
ppcnbsd-nat.o: ppcnbsd-nat.c $(defs_h) $(inferior_h) $(gdb_assert_h) \
	$(gdbcore_h) $(regcache_h) $(bsd_kvm_h) $(ppc_tdep_h) \
	$(ppcnbsd_tdep_h) $(inf_ptrace_h)
d2151 1
a2151 7
	$(ppcnbsd_tdep_h) $(nbsd_tdep_h) $(tramp_frame_h) $(trad_frame_h) \
	$(gdb_assert_h) $(solib_svr4_h)
ppcobsd-nat.o: ppcobsd-nat.c $(defs_h) $(inferior_h) $(regcache_h) \
	$(ppc_tdep_h) $(ppcobsd_tdep_h)
ppcobsd-tdep.o: ppcobsd-tdep.c $(defs_h) $(arch_utils_h) $(osabi_h) \
	$(regcache_h) $(regset_h) $(gdb_assert_h) $(gdb_string_h) \
	$(ppc_tdep_h) $(ppcobsd_tdep_h) $(solib_svr4_h)
d2154 1
a2154 1
	$(ppc_tdep_h) $(target_h) $(objfiles_h) $(infcall_h)
d2180 1
a2180 1
	$(gdb_string_h) $(gdbcmd_h) $(observer_h)
a2182 1
regset.o: regset.c $(defs_h) $(regset_h) $(gdb_assert_h)
d2245 2
a2246 2
	$(gdb_stabs_h) $(regcache_h) $(arch_utils_h) $(ppc_tdep_h) $(exec_h) \
	$(gdb_stat_h)
d2249 5
a2253 6
	$(regcache_h) $(regset_h) $(doublest_h) $(value_h) $(parser_defs_h) \
	$(osabi_h) $(infcall_h) $(sim_regno_h) $(gdb_sim_ppc_h) \
	$(reggroups_h) $(libbfd_h) $(coff_internal_h) $(libcoff_h) \
	$(coff_xcoff_h) $(libxcoff_h) $(elf_bfd_h) $(solib_svr4_h) \
	$(ppc_tdep_h) $(gdb_assert_h) $(dis_asm_h) $(trad_frame_h) \
	$(frame_unwind_h) $(frame_base_h)
d2308 1
a2308 2
	$(completer_h) $(filenames_h) $(exec_h) $(solist_h) $(observer_h) \
	$(readline_h)
d2333 1
a2333 1
	$(regcache_h) $(gdb_assert_h) $(exec_h) $(hppa_tdep_h)
d2351 2
a2352 2
sparc64nbsd-nat.o: sparc64nbsd-nat.c $(defs_h) $(regcache_h) \
	$(sparc64_tdep_h) $(sparc_nat_h) $(bsd_kvm_h)
d2362 1
a2362 1
	$(trad_frame_h) $(gdb_assert_h) $(sparc64_tdep_h) $(solib_svr4_h)
d2375 1
a2375 2
sparcnbsd-nat.o: sparcnbsd-nat.c $(defs_h) $(gdbcore_h) $(regcache_h) \
	$(sparc_tdep_h) $(sparc_nat_h) $(bsd_kvm_h)
d2382 1
a2382 1
	$(trad_frame_h) $(gdb_assert_h) $(sparc_tdep_h)
d2388 1
a2388 1
	$(sparc_tdep_h) $(solib_svr4_h)
d2405 2
d2410 1
a2417 2
symfile-mem.o: symfile-mem.c $(defs_h) $(symtab_h) $(gdbcore_h) \
	$(objfiles_h) $(gdbcmd_h) $(target_h) $(value_h) $(symfile_h)
d2454 1
a2454 1
	$(frame_base_h) $(gdb_assert_h)
d2467 1
a2467 1
	$(filenames_h) $(symfile_h) $(inferior_h) $(readline_h)
d2483 1
a2483 1
	$(cp_support_h) $(observer_h)
d2493 3
a2495 9
vaxbsd-nat.o: vaxbsd-nat.c $(defs_h) $(inferior_h) $(regcache_h) \
	$(vax_tdep_h) $(bsd_kvm_h)
vax-nat.o: vax-nat.c $(defs_h) $(inferior_h) $(gdb_assert_h) $(vax_tdep_h)
vaxnbsd-tdep.o: vaxnbsd-tdep.c $(defs_h) $(arch_utils_h) $(osabi_h) \
	$(vax_tdep_h) $(solib_svr4_h) $(gdb_string_h)
vax-tdep.o: vax-tdep.c $(defs_h) $(arch_utils_h) $(dis_asm_h) $(frame_h) \
	$(frame_base_h) $(frame_unwind_h) $(gdbcore_h) $(gdbtypes_h) \
	$(osabi_h) $(regcache_h) $(regset_h) $(trad_frame_h) $(value_h) \
	$(gdb_string_h) $(vax_tdep_h)
d2513 1
d2726 1
a2726 1
	$(mi_getopt_h) $(ui_out_h) $(symtab_h) $(source_h) $(objfiles_h)
d2818 2
a2819 2
	$(breakpoint_h) $(gdb_events_h) $(ui_out_h) $(top_h) $(tui_h) \
	$(tui_hooks_h) $(tui_data_h) $(tui_layout_h) $(tui_io_h) \
d2821 1
a2821 1
	$(tui_winsource_h) $(gdb_curses_h) $(readline_h)
d2828 2
a2829 2
	$(event_loop_h) $(event_top_h) $(command_h) $(top_h) $(tui_h) \
	$(tui_data_h) $(tui_io_h) $(tui_command_h) $(tui_win_h) \
d2831 1
a2831 1
	$(gdb_curses_h) $(readline_h)
@


1.512.2.7
log
@Merge from mainline.
@
text
@a670 1
fbsd_nat_h = fbsd-nat.h
a700 1
i386bsd_nat_h = i386bsd-nat.h
d1361 1
a1361 3
	dcache.c exec.c \
	fbsd-nat.c \
	fork-child.c \
a1434 8
# FIXME: cagney/2004-09-16: "gnu-v3-abi.c", with a GCC 3.4 compiler,
# gets a "assignment from incompatible pointer type" warning.  The
# return types - "enum gnu_v3_dtor_kinds" vs "enum ctor_kinds" -
# conflict.
gnu-v3-abi.o: $(srcdir)/gnu-v3-abi.c
	$(CC) -c $(INTERNAL_WARN_CFLAGS) $(NO_WERROR_CFLAGS) \
		$(srcdir)/gnu-v3-abi.c

a1863 3
fbsd-nat.o: fbsd-nat.c $(defs_h) $(gdbcore_h) $(inferior_h) $(regcache_h) \
	$(regset_h) $(gdb_assert_h) $(gdb_string_h) $(elf_bfd_h) \
	$(fbsd_nat_h)
d1964 1
a1964 2
	$(gdb_assert_h) $(i386_tdep_h) $(i387_tdep_h) $(i386bsd_nat_h) \
	$(inf_ptrace_h)
d1970 1
a1970 2
	$(target_h) $(fbsd_nat_h) $(i386_tdep_h) $(i386bsd_nat_h) \
	$(bsd_kvm_h)
d1989 1
a1989 1
	$(target_h) $(i386_tdep_h) $(i386bsd_nat_h) $(bsd_kvm_h)
d2039 1
a2039 1
	$(target_h) $(inferior_h) $(gdb_string_h)
d2053 1
a2053 1
	$(inf_child_h) $(gdbcmd_h) $(gdb_string_h)
d2505 2
a2506 2
	$(symtab_h) $(objfiles_h) $(solib_svr4_h) $(trad_frame_h) \
	$(gdb_assert_h) $(gdb_string_h) $(sparc64_tdep_h) $(nbsd_tdep_h)
d2508 2
a2509 2
	$(frame_unwind_h) $(osabi_h) $(regset_h) $(symtab_h) $(objfiles_h) \
	$(solib_svr4_h) $(trad_frame_h) $(gdb_assert_h) $(sparc64_tdep_h)
@


1.511
log
@* amd64obsd-tdep.c: Include "regset.h" and "i387-tdep.h".  Fix
comments.
(amd64obsd_supply_regset, amd64obsd_regset_from_core_section): New
functions.
(amd64obsd_init_abi): Reorder initializations.  Use
amd64obsd_r_reg_offset to initialize the general-purpose register
set details.  Set regset_from_core_section.
(_initialize_amd64obsd_tdep): Rename from
_initialize_amd64obsd_ndep.  Add OS ABI handler for core dumps.
* Makefile.in (amd64obsd-tdep.o): Update dependencies.
* config/i386/obsd64.mt (TDEPFILES): Add i386-tdep.o.
@
text
@d1853 1
a1853 1
	$(i386_tdep_h) $(i387_tdep_h)
@


1.510
log
@2004-02-18  Andrew Cagney  <cagney@@redhat.com>

	* configure.in: Add a TUI target to CONFIG_ALL, CONFIG_CLEAN,
	CONFIG_INSTALL and CONFIG_UNINSTALL.
	* configure: Re-generate.
	* interps.h (INTERP_TUI): Define.
	* Makefile.in: Update dependencies.
	(TUI): New macro.
	(tui-main.o): Specify dependencies.
	(install-tui, uninstall-tui, clean-tui, all-tui): New rules.
	* tui/tui-main.c: New file.
@
text
@d1538 2
a1539 1
	$(gdbcore_h) $(osabi_h) $(gdb_assert_h) $(x86_64_tdep_h)
@


1.509
log
@* amd64obsd-tdep.c, amd64obsd-nat.c: New files.
* Makefile.in (amd64obsd-nat.o, amd64obsd-tdep.o): New
dependencies.
* configure.host: Add x86_64-*-openbsd*.
* configure.tgt: Add x86_64-*-openbsd*.
* config/i386/obsd64.mt, config/i386/obsd64.mh: New files.
@
text
@d182 4
d645 2
a646 2
	$(libiberty_h) $(bfd_h) $(ui_file_h) $(xm_h) $(nm_h) \
	$(tm_h) $(fopen_same_h) $(gdbarch_h)
d939 2
d984 17
d1013 11
d1118 6
d1188 3
d2231 5
a2235 5
	$(symtab_h) $(target_h) $(gdbcore_h) $(gdbcmd_h) $(symfile_h) \
	$(objfiles_h) $(tm_h) $(__bfd_bfd_h) $(floatformat_h) $(regcache_h) \
	$(trad_frame_h) $(frame_base_h) $(frame_unwind_h) \
	$(reggroups_h) $(regset_h) $(value_h) $(gdb_assert_h) $(dis_asm_h) \
	$(solib_svr4_h) $(s390_tdep_h)
d2816 3
@


1.508
log
@* Makefile.in (ALLDEPFILES): Add amd64-nat.c, amd64bsd-nat.c,
amdfbsd-nat.c, amd64-fbsd-tdep.c, amd64nbsd-nat.c and
amd64nbsd-tdep.c.
@
text
@d1492 4
@


1.507
log
@2004-02-17  Ulrich Weigand <Ulrich.Weigand@@de.ibm.com>

	Committed by Jim Blandy  <jimb@@redhat.com>.

	* s390-nat.c (SUBOFF): New macro.
	(supply_gregset, fill_gregset): Use it to handle debugging
	of 32-bit exectuables running under a 64-bit kernel.
	* s390-tdep.c: Include "solib-svr4.h".
	(s390_svr4_fetch_link_map_offset): New function.
	(s390x_svr_fetch_link_map_offset): Likewise.
	(s390_gdbarch_init): Call set_solib_svr4_fetch_link_map_offsets.
	* Makefile.in (s390-tdep.o): Update dependencies.
@
text
@d1267 2
@


1.506
log
@2004-02-17  Ulrich Weigand <Ulrich.Weigand@@de.ibm.com>

	Committed by Jim Blandy  <jimb@@redhat.com>.

	* s390-tdep.c: Include "trad-frame.h", "frame-base.h", and
	"frame-unwind.h".
	(s390_readinstruction): Reformat.  Use read_memory_nobpt.
	(GDB_TARGET_IS_ESAME, S390_GPR_SIZE, S390_FPR_SIZE): Remove.
	(S390_SYSCALL_OPCODE, S390_SYSCALL_SIZE): Remove.
	(S390_SIGCONTEXT_SREGS_OFFSET, S390X_SIGCONTEXT_SREGS_OFFSET,
	S390_SIGREGS_FP0_OFFSET, S390X_SIGREGS_FP0_OFFSET,
	S390_UC_MCONTEXT_OFFSET, S390X_UC_MCONTEXT_OFFSET,
	S390_SIGNAL_FRAMESIZE,
	s390_NR_sigreturn, s390_NR_rt_sigreturn): Remove.
	(struct frame_extra_info): Remove.
	(s390_memset_extra_info): Remove.
	(op_*, op1_*, op2_* enums): Add several new opcodes.
	(is_rse): Renamed to ...
	(is_rsy): ... this.  Support long displacements.
	(is_rxe): Renamed to ...
	(is_rxy): ... this.  Support long displacements.
	(compute_x_addr): Support long displacements.
	(struct s390_prologue_data): New data type.
	(s390_on_stack): Change API to use struct s390_prologue_data.
	(s390_store): Reimplement.
	(s390_load): New function.
	(s390_get_signal_frame_info): Remove.
	(s390_get_frame_info): Remove, replace by ...
	(s390_analyze_prolog): ... this new function.
	(s390_check_function_end): Remove.
	(s390_function_start): Remove.
	(s390_frameless_function_invokation): Remove.
	(s390_is_sigreturn): Remove.
	(s390_init_frame_pc_first): Remove.
	(s390_init_frame_extra_info): Remove.
	(s390_frame_init_saved_regs): Remove.
	(s390_frame_saved_pc_nofix): Remove.
	(s390_frame_saved_pc): Remove.
	(s390_frame_chain): Remove.
	(s390_fp_regnum, s390_read_fp): Remove.
	(s390_pop_frame_regular, s390_pop_frame): Remove.
	(s390_saved_pc_after_call): Remove.
	(s390_skip_prologue): Reimplement.
	(s390_in_function_epilogue_p): Support long displacements.
	(struct s390_unwind_cache): New data structure.
	(s390_frame_unwind_cache): New function.
	(s390_prologue_frame_unwind_cache): Likewise.
	(s390_backchain_frame_unwind_cache): Likewise.
	(s390_frame_this_id, s390_frame_prev_register): Likewise.
	(s390_frame_unwind): Define.
	(s390_frame_sniffer): New function.
	(struct s390_pltstub_unwind_cache): New data structure.
	(s390_pltstub_frame_unwind_cache): New function.
	(s390_pltstub_frame_this_id): Likewise.
	(s390_pltstub_frame_prev_register): Likewise.
	(s390_pltstub_frame_unwind): Define.
	(s390_pltstub_frame_sniffer): New function.
	(struct s390_sigtramp_unwind_cache): New data structure.
	(s390_sigtramp_frame_unwind_cache): New function.
	(s390_sigtramp_frame_this_id): Likewise.
	(s390_sigtramp_frame_prev_register): Likewise.
	(s390_sigtramp_frame_unwind): Define.
	(s390_sigtramp_frame_sniffer): New function.
	(s390_frame_base_address, s390_local_base_address): New functions.
	(s390_frame_base): Define.
	(s390_unwind_pc, s390_unwind_sp): New function.
	(s390_push_dummy_call): Use new frame base location.
	(s390_unwind_dummy_id): Likewise.
	(s390_gdbarch_init): Remove calls to:
	set_gdbarch_frameless_function_invocation,
	set_gdbarch_deprecated_init_frame_pc,
	set_gdbarch_deprecated_frame_chain,
	set_gdbarch_deprecated_frame_init_saved_regs,
	set_gdbarch_deprecated_pop_frame,
	set_gdbarch_deprecated_init_extra_frame_info,
	set_gdbarch_deprecated_init_frame_pc_first,
	set_gdbarch_deprecated_target_read_fp,
	set_gdbarch_deprecated_frame_saved_pc,
	set_gdbarch_deprecated_saved_pc_after_call,
	set_gdbarch_deprecated_fp_regnum.
	Add calls to:
	set_gdbarch_in_solib_call_trampoline,
	frame_unwind_append_sniffer,
	frame_base_set_default,
	set_gdbarch_unwind_pc,
	set_gdbarch_unwind_sp.
	* Makefile.in (s390-tdep.o): Update dependencies.
@
text
@d2186 1
a2186 1
	$(s390_tdep_h)
@


1.505
log
@2004-02-17  Ulrich Weigand <Ulrich.Weigand@@de.ibm.com>

	Committed by Jim Blandy  <jimb@@redhat.com>.
	* config/s390/nm-linux.h: Update comments.  Do not include "solib.h".
	(KERNEL_U_ADDR, REGISTER_U_ADDR, U_REGS_OFFSET): Remove.
	(FETCH_INFERIOR_REGISTERS): Define.
	* config/s390/s390.mh (NATDEPFILES): Remove core-aout.o and
	core-regset.o.
	* config/s390/s390x.mt: Remove.
	* config/s390/tm-s390.h: Remove.
	* config/s390/tm-linux.h: Do not include "s390/tm-s390.h".
	(TARGET_ELF64): Remove.
	(SKIP_TRAMPOLINE_CODE): Do not undefine.
	* configure.tgt [s390-*-*, s390x-*-*]: Merge into single
	s390*-*-* case; always set gdb_target to s390.
	* regformats/reg-s390.dat: Remove control registers.
	* regformats/reg-s390x.dat: Likewise.
	* s390-tdep.h: New file.
	* s390-nat.c: Do not include <asm/processor.h> or <value.h>.
	Include "inferior.h" and "s390-tdep.h".
	Remove private definition of offsetof.
	(s390_register_u_addr): Remove.
	(regmap_gregset, regmap_fpregset): Define.
	(supply_gregset, fill_gregset): Reimplement.
	(supply_fpregset, fill_fpregset): Likewise.
	(s390_inferior_tid): New function.
	(fetch_regs, store_regs, fetch_fpregs, store_fpregs): Likewise.
	(fetch_inferior_registers, store_inferior_registers): Likewise.
	* s390-tdep.c: Do not define S390_TDEP.  Include "defs.h" instead
	of <defs.h>.  Include "reggroups.h", "regset.h", and "s390-tdep.h".
	Global replace of S390_GP0_REGNUM by S390_R0_REGNUM.
	Global replace of S390_FP0_REGNUM by S390_F0_REGNUM.
	(struct gdbarch_tdep): Define.
	(struct s390_register_info): Define.
	(s390_register_info): New variable.
	(s390_register_name): Reimplement.
	(s390_register_type): New function.
	(s390_register_raw_size, s390x_register_raw_size): Remove.
	(s390_cannot_fetch_register): Remove.
	(s390_register_byte): Remove.
	(s390_register_virtual_type, s390x_register_virtual_type): Remove.
	(s390_dwarf_regmap): New variable.
	(s390_dwarf_reg_to_regnum): New function.
	(s390_stab_reg_to_regnum): Remove.
	(s390_pseudo_register_read, s390_pseudo_register_write): New functions.
	(s390x_pseudo_register_read, s390x_pseudo_register_write): Likewise.
	(s390_convert_register_p): Likewise.
	(s390_register_to_value, s390_value_to_register): Likewise.
	(s390_register_reggroup_p): Likewise.
	(s390_regmap_gregset, s390x_regmap_gregset, s390_regmap_fpregset,
	s390_gregset, s390x_gregset, s390_fpregset): New variables.
	(s390_supply_regset, s390_regset_from_core_section): New functions.
	(GDB_TARGET_IS_ESAME): Move here from tm-s390.h.
	(S390_FPR_SIZE): Likewise.
	(S390_GPR_SIZE): Likewise.  Redefine in terms of GDB_TARGET_IS_ESAME.
	Global replace of DEPRECATED_REGISTER_SIZE by S390_GPR_SIZE.
	(S390_NUM_GPRS): Move here from tm-s390.h.
	(S390_NUM_FPRS): Likewise.
	(s390_in_function_epilogue_p): New function.
	(s390_is_sigreturn): Replace S390_PSW_ADDR_SIZE by S390_GPR_SIZE.
	Replace S390_PC_REGNUM by S390_PSWA_REGNUM.
	(s390_gdbarch_init): Allocate and set up gdbarch_tdep structure.
	Replace s390_stab_reg_to_regnum by s390_dwarf_reg_to_regnum.
	Replace S390_FP_REGNUM by S390_SP_REGNUM.
	Remove calls to:
	set_gdbarch_deprecated_max_register_raw_size,
	set_gdbarch_deprecated_max_register_virtual_size,
	set_gdbarch_deprecated_register_byte,
	set_gdbarch_cannot_fetch_register,
	set_gdbarch_cannot_store_register,
	set_gdbarch_deprecated_register_size,
	set_gdbarch_deprecated_register_raw_size,
	set_gdbarch_deprecated_register_virtual_size,
	set_gdbarch_deprecated_register_virtual_type,
	set_gdbarch_deprecated_register_bytes.
	Add calls to:
	set_gdbarch_num_pseudo_regs,
	set_gdbarch_register_type,
	set_gdbarch_convert_register_p,
	set_gdbarch_register_to_value,
	set_gdbarch_value_to_register,
	set_gdbarch_register_reggroup_p,
	set_gdbarch_regset_from_core_section,
	set_gdbarch_pseudo_register_read,
	set_gdbarch_pseudo_register_write,
	set_gdbarch_in_function_epilogue_p.
	* Makefile.in (s390-nat.o, s390-tdep.o): Update dependencies.
	(s390_tdep_h): New variable.
@
text
@d2184 1
@


1.504
log
@2004-02-17  Elena Zannoni  <ezannoni@@redhat.com>

	* Makefile.in (defs_h): Remove dependency on progress_h.
	* defs.h (QUIT): Remove use of PROGRESS macro. Remove include of
	progress.h.
	* main.c (captured_main): Delete use of START_PROGRESS and
	END_PROGRESS.

2004-02-17  Elena Zannoni  <ezannoni@@redhat.com>

	* gdb.base/selftest.exp (do_steps_and_nexts): Add comment.
@
text
@d730 1
d2179 7
a2185 5
s390-nat.o: s390-nat.c $(defs_h) $(tm_h) $(regcache_h)
s390-tdep.o: s390-tdep.c $(arch_utils_h) $(frame_h) $(inferior_h) \
	$(symtab_h) $(target_h) $(gdbcore_h) $(gdbcmd_h) $(objfiles_h) \
	$(tm_h) $(__bfd_bfd_h) $(floatformat_h) $(regcache_h) $(value_h) \
	$(gdb_assert_h) $(dis_asm_h)
@


1.503
log
@2004-02-17  David Mosberger  <davidm@@hpl.hp.com>

	Committed by Andrew Cagney.
	* Makefile.in (ia64_tdep_h): New macro.
	(ia64-linux-tdep.o): Mention $(ia64_tdep_h).
	(ia64-tdep.o): Likewise.
	* ia64-tdep.h: New file.
	* ia64-tdep.c: Update copyright notice.  Include "ia64-tdep.h".
	(ia64_linux_sigcontext_register_address): Move decl to ia64-tdep.h.
	(ia64_aix_sigcontext_register_address): Likewise.
	(ia64_linux_getunwind_table): Delete declaration.
	* ia64-linux-tdep.c: Likewise.
@
text
@d641 1
a641 1
	$(libiberty_h) $(progress_h) $(bfd_h) $(ui_file_h) $(xm_h) $(nm_h) \
@


1.502
log
@2004-02-17  Andrew Cagney  <cagney@@redhat.com>

	* symtab.c (skip_prologue_using_sal): New function.
	* symtab.h (skip_prologue_using_sal): Declare.
	* frv-tdep.c: Include "symtab.h".
	(skip_prologue_using_sal): Delete function.
	* mips-tdep.c (skip_prologue_using_sal): Delete function.
	* rs6000-tdep.c (refine_prologue_limit): Mention
	skip_prologue_using_sal.
	* ia64-tdep.c (refine_prologue_limit): Ditto.
	* Makefile.in: Update dependencies.
@
text
@d686 1
d1827 2
a1828 1
ia64-linux-tdep.o: ia64-linux-tdep.c $(defs_h) $(arch_utils_h) $(gdbcore_h)
d1833 2
a1834 2
	$(elf_bfd_h) $(elf_h) $(dis_asm_h) $(libunwind_frame_h) \
	$(libunwind_ia64_h)
@


1.501
log
@2004-02-16  Andrew Cagney  <cagney@@redhat.com>

	* tui/tui-windata.c: Include "gdb_string.h".
	* tui/tui-source.c, tui/tui-winsource.c: Ditto.
	* tui/tui-layout.c, tui/tui-command.c: Ditto.
	* Makefile.in: Update dependencies.
@
text
@d1706 1
a1706 1
	$(sim_regno_h) $(gdb_sim_frv_h) $(opcodes_frv_desc_h)
@


1.500
log
@	* Makefile.in (infrun.o): Add $(gdb_assert_h).
	* infrun.c: Include "gdb_assert.h".
	(singlestep_ptid, saved_singlestep_ptid)
	(stepping_past_singlestep_breakpoint): New variables.
	(resume): Set singlestep_ptid.  Check for singlestep thread
	hop.
	(init_wait_for_inferior): Clear stepping_past_singlestep_breakpoint.
	(handle_inferior_event): Handle singlestep thread hop.
@
text
@d2725 1
a2725 1
	$(tui_win_h) $(tui_io_h) $(gdb_curses_h)
d2759 1
a2759 1
	$(tui_winsource_h) $(tui_disasm_h) $(gdb_curses_h)
d2772 2
a2773 1
	$(tui_stack_h) $(tui_winsource_h) $(tui_source_h) $(gdb_curses_h)
d2788 1
a2788 1
	$(tui_wingeneral_h) $(tui_regs_h) $(gdb_curses_h)
d2796 2
a2797 1
	$(tui_winsource_h) $(tui_source_h) $(tui_disasm_h) $(gdb_curses_h)
@


1.499
log
@2004-02-15  Andrew Cagney  <cagney@@redhat.com>

	* Makefile.in: Update all dependencies.
@
text
@d1854 1
a1854 1
	$(observer_h) $(language_h)
@


1.498
log
@2004-02-15  Andrew Cagney  <cagney@@redhat.com>

	* Makefile.in: (.SUFFIXES): Add ".l" and ".y".
	(.y.c, .l.c): Specify implicit rule.  Instead of .tab.c, generate
	.c.  Update references.  Delete unnecessary .tab.c and -lex.c rules.
	(ada-exp.o, c-exp.o, f-exp.o): Replace ada-exp.tab.o et.al. rule.
	(jv-exp.o, m2-exp.o, objc-exp.o, p-exp.o): Similar.
@
text
@d1428 3
a1430 3
ada-exp.o: ada-exp.c $(defs_h) $(expression_h) $(value_h) \
	$(parser_defs_h) $(language_h) $(ada_lang_h) $(bfd_h) $(symfile_h) \
	$(objfiles_h) $(frame_h) $(block_h) $(ada_lex_c)
d1528 4
a1531 4
blockframe.o: blockframe.c $(defs_h) $(symtab_h) $(bfd_h) \
	$(objfiles_h) $(frame_h) $(gdbcore_h) $(value_h) $(target_h) \
	$(inferior_h) $(annotate_h) $(regcache_h) $(gdb_assert_h) \
	$(dummy_frame_h) $(command_h) $(gdbcmd_h) $(block_h)
d1544 3
a1548 3
c-exp.o: c-exp.c $(defs_h) $(gdb_string_h) $(expression_h) \
	$(value_h) $(parser_defs_h) $(language_h) $(c_lang_h) $(bfd_h) \
	$(symfile_h) $(objfiles_h) $(charset_h) $(block_h) $(cp_support_h)
d1559 3
a1561 4
	$(coff_internal_h) $(libcoff_h) $(objfiles_h) \
	$(buildsym_h) $(gdb_stabs_h) $(stabsread_h) $(complaints_h) \
	$(target_h) $(gdb_assert_h) $(block_h) $(dictionary_h) \
	$(coff_pe_read_h)
d1599 2
a1600 1
	$(objfiles_h) $(solib_h) $(solib_svr4_h) $(gdb_string_h) $(dis_asm_h)
d1654 7
a1660 7
	$(objfiles_h) $(elf_dwarf2_h) $(buildsym_h) \
	$(demangle_h) $(expression_h) $(filenames_h) $(macrotab_h) \
	$(language_h) $(complaints_h) $(bcache_h) $(dwarf2expr_h) \
	$(dwarf2loc_h) $(cp_support_h) $(gdb_string_h) $(gdb_assert_h)
dwarfread.o: dwarfread.c $(defs_h) $(symtab_h) $(gdbtypes_h) \
	$(objfiles_h) $(elf_dwarf_h) $(buildsym_h) $(demangle_h) \
	$(expression_h) $(language_h) $(complaints_h) $(gdb_string_h)
d1682 3
a1688 3
f-exp.o: f-exp.c $(defs_h) $(gdb_string_h) $(expression_h) \
	$(value_h) $(parser_defs_h) $(language_h) $(f_lang_h) $(bfd_h) \
	$(symfile_h) $(objfiles_h) $(block_h)
d1703 4
a1706 5
frv-tdep.o: frv-tdep.c $(defs_h) $(gdb_string_h) $(inferior_h) \
	$(gdbcore_h) $(arch_utils_h) $(regcache_h) $(frame_h) \
	$(frame_unwind_h) $(frame_base_h) $(trad_frame_h) $(dis_asm_h) \
	$(gdb_assert_h) $(sim_regno_h) $(gdb_sim_frv_h) \
	$(opcodes_frv_desc_h)
d1718 1
a1718 2
	$(gdb_events_h) $(reggroups_h) $(osabi_h) \
	$(gdb_obstack_h)
d1865 3
a1867 3
jv-exp.o: jv-exp.c $(defs_h) $(gdb_string_h) $(expression_h) \
	$(value_h) $(parser_defs_h) $(language_h) $(jv_lang_h) $(bfd_h) \
	$(symfile_h) $(objfiles_h) $(block_h)
d1902 3
a1904 3
m2-exp.o: m2-exp.c $(defs_h) $(gdb_string_h) $(expression_h) \
	$(language_h) $(value_h) $(parser_defs_h) $(m2_lang_h) $(bfd_h) \
	$(symfile_h) $(objfiles_h) $(block_h)
d1965 4
a1968 4
	$(objfiles_h) $(gdb_obstack_h) $(buildsym_h) \
	$(stabsread_h) $(complaints_h) $(demangle_h) $(gdb_assert_h) \
	$(block_h) $(dictionary_h) $(coff_sym_h) $(coff_symconst_h) \
	$(gdb_stat_h) $(gdb_string_h) $(bfd_h) $(coff_ecoff_h) $(libaout_h) \
d1988 3
a1990 3
	$(objfiles_h) $(buildsym_h) $(stabsread_h) \
	$(coff_sym_h) $(coff_internal_h) $(coff_ecoff_h) $(libcoff_h) \
	$(libecoff_h) $(elf_common_h) $(elf_mips_h)
d2051 3
a2053 3
p-exp.o: p-exp.c $(defs_h) $(gdb_string_h) $(expression_h) \
	$(value_h) $(parser_defs_h) $(language_h) $(p_lang_h) $(bfd_h) \
	$(symfile_h) $(objfiles_h) $(block_h)
d2171 5
a2175 5
	$(target_h) $(gdbcore_h) $(gdbcmd_h) $(objfiles_h) \
	$(arch_utils_h) $(regcache_h) $(doublest_h) $(value_h) \
	$(parser_defs_h) $(osabi_h) $(libbfd_h) $(coff_internal_h) \
	$(libcoff_h) $(coff_xcoff_h) $(libxcoff_h) $(elf_bfd_h) \
	$(solib_svr4_h) $(ppc_tdep_h) $(gdb_assert_h) $(dis_asm_h)
d2178 3
a2180 3
	$(symtab_h) $(target_h) $(gdbcore_h) $(gdbcmd_h) \
	$(objfiles_h) $(tm_h) $(__bfd_bfd_h) $(floatformat_h) $(regcache_h) \
	$(value_h) $(gdb_assert_h) $(dis_asm_h)
d2215 2
a2216 2
	$(dwarf2_frame_h) $(symtab_h) $(gdbtypes_h) $(gdbcmd_h) \
	$(gdbcore_h) $(value_h) $(dis_asm_h) $(inferior_h) $(gdb_string_h) \
d2432 1
a2432 1
	$(coff_rs6000_h) $(symtab_h) $(gdbtypes_h) $(symfile.h) \
d2439 2
a2440 2
	$(arch_utils_h) $(regcache_h) $(gdbcore_h) \
	$(objfiles_h) $(dis_asm_h)
@


1.497
log
@2004-02-14  Elena Zannoni  <ezannoni@@redhat.com>

	* symfile.c (init_entry_point_info, entry_point_address): Move
	from here...
	* objfiles.c (init_entry_point_info, entry_point_address):..to
	here.
	* symfile.h (init_entry_point_info, entry_point_address): Remove
	prototypes.
	* objfiles.h (init_entry_point_info, entry_point_address):Add
	prototypes.
	* cris-tdep.c: Remove include of symfile.h. Add include of
	objfiles.h.
	* infcall.c: Ditto.
	* mcore-tdep.c: Ditto.
	* mn10300-tdep.c: Ditto.
	* sh64-tdep.c: Ditto.
 	* v850-tdep.c: Ditto.
	* arm-tdep.c: Remove include of symfile.h.
	* blockframe.c: Ditto.
	* coffread.c: Ditto.
	* dbxread.c: Ditto.
	* dwarf2read.c: Ditto.
	* dwarfread.c: Ditto.
	* frv-tdep.c: Ditto.
	* ia64-tdep.c: Ditto.
	* mdebugread.c: Ditto.
	* mipsread.c: Ditto.
	* rs6000-tdep.c: Ditto.
	* s390-tdep.c: Ditto.
	* sh-tdep.c: Ditto.
	* xstormy16-tdep.c: Ditto.
	* gdbarch.sh: Remove include of symfile.h.
	* gdbarch.c: Regenerate.
	* solib-irix.c (enable_break): Use entry_point_address().
	Add comment about include file.
	* xcoffread.c: Add comment about include file.
	* Makefile.in (arm-tdep.o, blockframe.o, coffread.o, cris-tdep.o)
	(dbxread.o, dwarf2read.o, dwarfread.o, frv-tdep.o, gdbarch.o)
	(ia64-tdep.o, infcall.o, mcore-tdep.o, mdebugread.o, mipsread.o)
	(mn10300-tdep.o, rs6000-nat.o, s390-tdep.o, sh64-tdep.o)
	(sh-tdep.o, v850-tdep.o, xstormy16-tdep.o): Update dependencies.
@
text
@d855 1
a855 1
# Don't include YYFILES (*.tab.c) because we already include *.y in SFILES,
d912 9
a920 9
YYFILES = c-exp.tab.c \
	objc-exp.tab.c \
	ada-exp.tab.c \
	jv-exp.tab.c \
	f-exp.tab.c m2-exp.tab.c p-exp.tab.c
YYOBJ = c-exp.tab.o \
	objc-exp.tab.o \
	jv-exp.tab.o \
	f-exp.tab.o m2-exp.tab.o p-exp.tab.o
d1147 1
a1147 1
# This used to depend on c-exp.tab.c m2-exp.tab.c TAGS
d1169 3
a1171 3
	rm -f c-exp.tab.c \
		ada-lex.c ada-exp.tab.c \
	        objc-exp.tab.c \
d1173 1
a1173 1
		f-exp.tab.c m2-exp.tab.c p-exp.tab.c
d1382 4
a1385 4
# LANG-exp.tab.c is generated in objdir from LANG-exp.y if it doesn't
# exist in srcdir, then compiled in objdir to LANG-exp.tab.o.  If we
# said LANG-exp.tab.c rather than ./c-exp.tab.c some makes would
# sometimes re-write it into $(srcdir)/c-exp.tab.c.  Remove bogus
d1387 1
a1387 1
# Strictly speaking c-exp.tab.c should therefore depend on
d1390 3
a1392 7
.PRECIOUS: ada-exp.tab.c
ada-exp.tab.o: ada-exp.tab.c $(defs_h) $(expression_h) $(value_h) \
	$(parser_defs_h) $(language_h) $(ada_lang_h) $(bfd_h) $(symfile_h) \
	$(objfiles_h) $(frame_h) $(block_h) $(ada_lex_c)
ada-exp.tab.c: ada-exp.y
	$(SHELL) $(YLWRAP) "$(YACC)" \
	    $(srcdir)/ada-exp.y  y.tab.c ada-exp.tmp -- $(YFLAGS)
d1400 4
a1403 6
	  < ada-exp.tmp > ada-exp.new
	-rm ada-exp.tmp
	mv ada-exp.new ./ada-exp.tab.c
.PRECIOUS: ada-lex.c
ada-lex.o: ada-lex.c
ada-lex.c: ada-lex.l
d1405 3
a1407 3
	    echo $(FLEX) -Isit $(srcdir)/ada-lex.l ">" ada-lex.c; \
	    $(FLEX) -Isit $(srcdir)/ada-lex.l > ada-lex.c; \
	elif [ ! -f ada-lex.c -a ! -f $(srcdir)/ada-lex.c ]; then \
d1410 2
a1411 2
	elif [ ! -f ada-lex.c ]; then \
	    echo "Warning: ada-lex.c older than ada-lex.l and flex not available."; \
d1413 8
a1420 103
.PRECIOUS: c-exp.tab.c
c-exp.tab.o: c-exp.tab.c $(defs_h) $(gdb_string_h) $(expression_h) \
	$(value_h) $(parser_defs_h) $(language_h) $(c_lang_h) $(bfd_h) \
	$(symfile_h) $(objfiles_h) $(charset_h) $(block_h) $(cp_support_h)
c-exp.tab.c: c-exp.y
	$(SHELL) $(YLWRAP) "$(YACC)" \
	    $(srcdir)/c-exp.y  y.tab.c c-exp.tmp -- $(YFLAGS)
	-sed -e '/extern.*malloc/d' \
	     -e '/extern.*realloc/d' \
	     -e '/extern.*free/d' \
	     -e '/include.*malloc.h/d' \
	     -e 's/malloc/xmalloc/g' \
	     -e 's/realloc/xrealloc/g' \
	     -e '/^#line.*y.tab.c/d' \
	  < c-exp.tmp > c-exp.new
	-rm c-exp.tmp
	mv c-exp.new ./c-exp.tab.c
.PRECIOUS: f-exp.tab.c
f-exp.tab.o: f-exp.tab.c $(defs_h) $(gdb_string_h) $(expression_h) \
	$(value_h) $(parser_defs_h) $(language_h) $(f_lang_h) $(bfd_h) \
	$(symfile_h) $(objfiles_h) $(block_h)
f-exp.tab.c: f-exp.y
	$(SHELL) $(YLWRAP) "$(YACC)" \
	    $(srcdir)/f-exp.y  y.tab.c f-exp.tmp -- $(YFLAGS)
	-sed -e '/extern.*malloc/d' \
	     -e '/extern.*realloc/d' \
	     -e '/extern.*free/d' \
	     -e '/include.*malloc.h/d' \
	     -e 's/malloc/xmalloc/g' \
	     -e 's/realloc/xrealloc/g' \
	     -e '/^#line.*y.tab.c/d' \
	  < f-exp.tmp > f-exp.new
	-rm f-exp.tmp
	mv f-exp.new ./f-exp.tab.c
.PRECIOUS: jv-exp.tab.c
jv-exp.tab.o: jv-exp.tab.c $(defs_h) $(gdb_string_h) $(expression_h) \
	$(value_h) $(parser_defs_h) $(language_h) $(jv_lang_h) $(bfd_h) \
	$(symfile_h) $(objfiles_h) $(block_h)
jv-exp.tab.c: jv-exp.y
	$(SHELL) $(YLWRAP) "$(YACC)" \
	    $(srcdir)/jv-exp.y  y.tab.c jv-exp.tmp -- $(YFLAGS)
	-sed -e '/extern.*malloc/d' \
	     -e '/extern.*realloc/d' \
	     -e '/extern.*free/d' \
	     -e '/include.*malloc.h/d' \
	     -e 's/malloc/xmalloc/g' \
	     -e 's/realloc/xrealloc/g' \
	     -e '/^#line.*y.tab.c/d' \
	  < jv-exp.tmp > jv-exp.new
	-rm jv-exp.tmp
	mv jv-exp.new ./jv-exp.tab.c
.PRECIOUS: m2-exp.tab.c
m2-exp.tab.o: m2-exp.tab.c $(defs_h) $(gdb_string_h) $(expression_h) \
	$(language_h) $(value_h) $(parser_defs_h) $(m2_lang_h) $(bfd_h) \
	$(symfile_h) $(objfiles_h) $(block_h)
m2-exp.tab.c: m2-exp.y
	$(SHELL) $(YLWRAP) "$(YACC)" \
	    $(srcdir)/m2-exp.y  y.tab.c m2-exp.tmp -- $(YFLAGS)
	-sed -e '/extern.*malloc/d' \
	     -e '/extern.*realloc/d' \
	     -e '/extern.*free/d' \
	     -e '/include.*malloc.h/d' \
	     -e 's/malloc/xmalloc/g' \
	     -e 's/realloc/xrealloc/g' \
	     -e '/^#line.*y.tab.c/d' \
	  < m2-exp.tmp > m2-exp.new
	-rm m2-exp.tmp
	mv m2-exp.new ./m2-exp.tab.c
.PRECIOUS: objc-exp.tab.c
objc-exp.tab.o: objc-exp.tab.c $(defs_h) $(gdb_string_h) $(expression_h) \
	$(objc_lang_h) $(value_h) $(parser_defs_h) $(language_h) $(c_lang_h) \
	$(bfd_h) $(symfile_h) $(objfiles_h) $(top_h) $(completer_h) \
	$(block_h)
objc-exp.tab.c: objc-exp.y
	$(SHELL) $(YLWRAP) "$(YACC)" \
	    $(srcdir)/objc-exp.y  y.tab.c objc-exp.tmp -- $(YFLAGS)
	-sed -e '/extern.*malloc/d' \
	     -e '/extern.*realloc/d' \
	     -e '/extern.*free/d' \
	     -e '/include.*malloc.h/d' \
	     -e 's/malloc/xmalloc/g' \
	     -e 's/realloc/xrealloc/g' \
	     -e '/^#line.*y.tab.c/d' \
	  < objc-exp.tmp > objc-exp.new
	-rm objc-exp.tmp
	mv objc-exp.new ./objc-exp.tab.c
.PRECIOUS: p-exp.tab.c
p-exp.tab.o: p-exp.tab.c $(defs_h) $(gdb_string_h) $(expression_h) \
	$(value_h) $(parser_defs_h) $(language_h) $(p_lang_h) $(bfd_h) \
	$(symfile_h) $(objfiles_h) $(block_h)
p-exp.tab.c: p-exp.y
	$(SHELL) $(YLWRAP) "$(YACC)" \
	    $(srcdir)/p-exp.y  y.tab.c p-exp.tmp -- $(YFLAGS)
	-sed -e '/extern.*malloc/d' \
	     -e '/extern.*realloc/d' \
	     -e '/extern.*free/d' \
	     -e '/include.*malloc.h/d' \
	     -e 's/malloc/xmalloc/g' \
	     -e 's/realloc/xrealloc/g' \
	     -e '/^#line.*y.tab.c/d' \
	  < p-exp.tmp > p-exp.new
	-rm p-exp.tmp
	mv p-exp.new ./p-exp.tab.c
d1428 3
d1436 1
d1546 3
d1686 3
d1867 3
d1904 3
d2025 4
d2053 3
@


1.496
log
@	* mips-linux-tdep.c: Include "frame.h".
	(mips_linux_in_dynsym_stub, mips_linux_in_dynsym_resolve_code)
	(mips_linux_skip_resolver): New functions.
	(mips_linux_init_abi): Call set_gdbarch_skip_solib_resolver
	and set_gdbarch_in_solib_call_trampoline.
	* mips-tdep.c (mips_gdbarch_init): Move gdbarch_init_osabi call
	to after set_gdbarch_in_solib_return_trampoline.  Only set the
	solib hooks to mips16 functions if the OS ABI is unknown.
	* config/mips/tm-linux.h (IN_SOLIB_CALL_TRAMPOLINE): Undefine after
	including "config/tm-linux.h".
	(IN_SOLIB_DYNSYM_RESOLVE_CODE): Define.
	* Makefile.in (mips-linux-tdep.o): Update.
@
text
@d1602 1
a1602 1
	$(gdbcore_h) $(symfile_h) $(gdb_string_h) $(dis_asm_h) $(regcache_h) \
d1625 1
a1625 1
blockframe.o: blockframe.c $(defs_h) $(symtab_h) $(bfd_h) $(symfile_h) \
d1653 1
a1653 1
	$(coff_internal_h) $(libcoff_h) $(symfile_h) $(objfiles_h) \
d1694 1
a1694 1
	$(symfile_h) $(solib_h) $(solib_svr4_h) $(gdb_string_h) $(dis_asm_h)
d1712 1
a1712 1
	$(libaout_h) $(symfile_h) $(objfiles_h) $(buildsym_h) $(stabsread_h) \
d1748 1
a1748 1
	$(symfile_h) $(objfiles_h) $(elf_dwarf2_h) $(buildsym_h) \
d1752 1
a1752 1
dwarfread.o: dwarfread.c $(defs_h) $(symtab_h) $(gdbtypes_h) $(symfile_h) \
d1794 1
a1794 1
frv-tdep.o: frv-tdep.c $(defs_h) $(gdb_string_h) $(inferior_h) $(symfile_h) \
d1810 1
a1810 1
	$(gdb_events_h) $(reggroups_h) $(osabi_h) $(symfile_h) \
d1920 1
a1920 1
ia64-tdep.o: ia64-tdep.c $(defs_h) $(inferior_h) $(symfile_h) $(gdbcore_h) \
d1928 1
a1928 1
	$(symfile_h) $(gdbcmd_h) $(command_h) $(gdb_string_h) $(infcall_h)
d2049 1
a2049 1
	$(gdbcmd_h) $(regcache_h) $(symfile_h) $(gdbcore_h) $(inferior_h) \
d2052 1
a2052 1
	$(symfile_h) $(objfiles_h) $(gdb_obstack_h) $(buildsym_h) \
d2075 1
a2075 1
	$(symfile_h) $(objfiles_h) $(buildsym_h) $(stabsread_h) \
d2089 1
a2089 1
	$(symfile_h) $(regcache_h) $(arch_utils_h) $(gdb_assert_h) \
d2251 1
a2251 1
	$(target_h) $(gdbcore_h) $(gdbcmd_h) $(symfile_h) $(objfiles_h) \
d2258 1
a2258 1
	$(symtab_h) $(target_h) $(gdbcore_h) $(gdbcmd_h) $(symfile_h) \
d2283 1
a2283 1
sh64-tdep.o: sh64-tdep.c $(defs_h) $(frame_h) $(symtab_h) $(symfile_h) \
d2295 1
a2295 1
	$(dwarf2_frame_h) $(symtab_h) $(symfile_h) $(gdbtypes_h) $(gdbcmd_h) \
d2466 1
a2466 1
	$(value_h) $(bfd_h) $(gdb_string_h) $(gdbcore_h) $(symfile_h) \
d2512 1
a2512 1
	$(coff_rs6000_h) $(symtab_h) $(gdbtypes_h) $(symfile_h) \
d2519 1
a2519 1
	$(symfile_h) $(arch_utils_h) $(regcache_h) $(gdbcore_h) \
@


1.495
log
@2004-02-10  Andrew Cagney  <cagney@@redhat.com>

	* Makefile.in (SFILES): Remove explictly listed tui files.
	(SUBDIR_GDBTK_SRCS): Fix path to gdbtk-interp.c.
@
text
@d2067 1
a2067 1
	$(gdb_assert_h)
@


1.494
log
@2004-02-10  Andrew Cagney  <cagney@@redhat.com>

	* defs.h: Do not include "tui.h".
	* gdb_curses.h: New file.
	* tui/tui-hooks.h: New file.
	* tui/tui.h (tui_update_all_exec_infos): Delete declaration.
	(tui_install_hooks, tui_remove_hooks): Delete declarations.
	(tui_initialize_io): Delete declaration.
	(tui_initialize_readline: Delete redundant declaration.
	(struct tui_point): Delete definition.
	* tui/tui-data.h (struct tui_point): Define.
	* cli/cli-decode.c [TUI]: Include "tui/tui.h".
	* utils.c: Include "tui/tui.h".
	* tui/tui-data.h: Include "tui/tui.h" and "gdb_curses.h".
	* printcmd.c [TUI]: Include "tui/tui.h".
	* cli/cli-cmds.c [TUI]: Include "tui/tui.h".
	* tui/tui-command.c: Include "gdb_curses.h".
	* tui/tui.c, tui/tui-winsource.c, tui/tui-wingeneral.c: Ditto.
	* tui/tui-windata.c, tui/tui-win.c, tui/tui-stack.c: Ditto.
	* tui/tui-source.c, tui/tui-regs.c, tui/tui-layout.c: Ditto.
	* tui/tui-io.c, tui/tui-disasm.c, tui/tui-data.c: : Ditto.
	* tui/tui-hooks.c: Include "tui-hooks.h" and "gdb_curses.h".
	* Makefile.in: Update all dependencies.
	(tui_hooks_h, gdb_curses_h): Define.
	(SUBDIR_TUI_CFLAGS): Remove -I${srcdir}/tui.
@
text
@d288 2
a289 1
	gdbtk/generic/gdbtk-cmds.c gdbtk/generic/gdbtk-hooks.c gdbtk-interp.c \
a540 8
	tui/tui.c tui/tui.h tui/tuiCommand.c tui/tuiCommand.h \
	tui/tuiData.c tui/tuiData.h tui/tuiDataWin.c tui/tuiDataWin.h \
	tui/tuiDisassem.c tui/tuiDisassem.h tui/tuiGeneralWin.c \
	tui/tuiGeneralWin.h tui/tuiIO.c tui/tuiIO.h tui/tuiLayout.c \
	tui/tuiLayout.h tui/tuiRegs.c tui/tuiRegs.h tui/tuiSource.c \
	tui/tuiSource.h tui/tuiSourceWin.c tui/tuiSourceWin.h \
	tui/tuiStack.c tui/tuiStack.h tui/tuiWin.c tui/tuiWin.h \
	tui/tui-file.h tui/tui-file.c tui/tui-out.c tui/tui-hooks.c \
@


1.493
log
@2004-02-10  Andrew Cagney  <cagney@@redhat.com>

	* Makefile.in (init.c): Fix script removing duplicates. Problem
	reported by Peter Schauer.
@
text
@d220 1
a220 1
	-DTUI=1 -I${srcdir}/tui
d648 2
a649 2
	$(libiberty_h) $(progress_h) $(bfd_h) $(tui_h) $(ui_file_h) $(xm_h) \
	$(nm_h) $(tm_h) $(fopen_same_h) $(gdbarch_h)
d670 1
d806 1
a806 1
tui_data_h = $(srcdir)/tui/tui-data.h
d810 1
d2087 5
a2091 6
	$(language_h) $(gdbcore_h) $(symfile_h) $(objfiles_h) \
	$(gdbtypes_h) $(target_h) $(arch_utils_h) $(regcache_h) \
	$(osabi_h) $(mips_tdep_h) $(block_h) $(reggroups_h) \
	$(opcode_mips_h) $(elf_mips_h) $(elf_bfd_h) $(symcat_h) \
	$(sim_regno_h) $(dis_asm_h) $(frame_unwind_h) $(frame_base_h) \
	$(trad_frame_h)
d2169 1
a2169 1
	$(gdb_assert_h) $(block_h) $(disasm_h)
d2464 1
a2464 1
	$(gdbcmd_h) $(serial_h) $(bfd_h) $(target_h) $(demangle_h) \
d2540 1
a2540 1
	$(cli_cmds_h)
d2544 1
a2544 1
	$(cli_decode_h) $(gdb_assert_h)
d2805 5
a2809 5
tui.o: $(srcdir)/tui/tui.c $(defs_h) $(gdbcmd_h) $(tui_h) $(tui_data_h) \
	$(tui_layout_h) $(tui_io_h) $(tui_regs_h) $(tui_stack_h) \
	$(tui_win_h) $(tui_winsource_h) $(tui_windata_h) $(readline_h) \
	$(target_h) $(frame_h) $(breakpoint_h) $(inferior_h) $(symtab_h) \
	$(source_h)
d2812 1
a2812 1
	$(tui_win_h) $(tui_io_h)
d2815 1
a2815 1
	$(tui_data_h) $(tui_wingeneral_h) $(gdb_string_h)
d2820 1
a2820 1
	$(tui_winsource_h) $(tui_stack_h) $(tui_file_h)
d2829 3
a2831 2
	$(tui_data_h) $(tui_layout_h) $(tui_io_h) $(tui_regs_h) $(tui_win_h) \
	$(tui_stack_h) $(tui_windata_h) $(tui_winsource_h)
d2840 2
a2841 1
	$(tui_wingeneral_h) $(tui_file_h) $(ui_out_h) $(cli_out_h)
d2846 1
a2846 1
	$(tui_winsource_h) $(tui_disasm_h)
d2854 2
a2855 1
	$(tui_win_h) $(tui_windata_h) $(tui_wingeneral_h) $(tui_file_h)
d2859 1
a2859 1
	$(tui_stack_h) $(tui_winsource_h) $(tui_source_h)
d2864 2
a2865 1
	$(tui_wingeneral_h) $(tui_source_h) $(tui_winsource_h) $(tui_file_h)
d2871 1
a2871 1
	$(tui_windata_h) $(gdb_string_h)
d2874 1
a2874 1
	$(tui_wingeneral_h) $(tui_regs_h)
d2877 1
a2877 1
	$(tui_data_h) $(tui_wingeneral_h) $(tui_win_h)
d2882 1
a2882 1
	$(tui_winsource_h) $(tui_source_h) $(tui_disasm_h)
@


1.492
log
@2004-02-09  Andrew Cagney  <cagney@@redhat.com>

	* Makefile.in (mips-tdep.o): Update dependencies.
	* mips-tdep.c: Include "frame-unwind.h", "frame-base.h" and
	"trad-frame.h".
	(mips_unwind_pc): Return the pseudo PC register.
	(mips_unwind_dummy_id): New function.
	(mips16_fetch_instruction): New function.
	(mips32_fetch_instruction): New function.
	(struct mips_frame_cache): Define.
	(mips_mdebug_frame_cache): New function.
	(mips_mdebug_frame_this_id): New function.
	(mips_mdebug_frame_prev_register): New function.
	(mips_mdebug_frame_unwind): Define.
	(mips_mdebug_frame_sniffer): New function.
	(mips_mdebug_frame_base_address): New function.
	(mips_mdebug_frame_base): Define.
	(mips_mdebug_frame_base_sniffer): New function.
	(mips_gdbarch_init): Append unwind and base sniffers.  Set
	unwind_dummy_id.
@
text
@d1058 3
a1060 3
	    case "$$fs" in \
	        "* $$f *") ;; \
	        *) echo $$f ; fs="$$fs $$f ";; \
@


1.491
log
@2004-02-08  Andrew Cagney  <cagney@@redhat.com>

	* Makefile.in (OBS): Delete.
	(INIT_FILES): Replace OBS with COMMON_OBS.
	(COMMON_OBS): Move DEPFILES and YYOBJ to start of definition.
	(init.c): Eliminate duplicates.  Merge two greps and a sed into a
	single sed.  Make .c and .o patterns more robust.
@
text
@d2085 6
a2090 4
	$(language_h) $(gdbcore_h) $(symfile_h) $(objfiles_h) $(gdbtypes_h) \
	$(target_h) $(arch_utils_h) $(regcache_h) $(osabi_h) $(mips_tdep_h) \
	$(block_h) $(reggroups_h) $(opcode_mips_h) $(elf_mips_h) \
	$(elf_bfd_h) $(symcat_h) $(sim_regno_h) $(dis_asm_h)
@


1.490
log
@2004-02-08  Andrew Cagney  <cagney@@redhat.com>

	* configure.in (CONFIG_ALL): Set to Makefile target, and not
	makefile macro.
	* configure: Re-generate.
	(CONFIG_CLEAN, CONFIG_INSTALL, CONFIG_UNINSTALL): Ditto.
	* Makefile.in (SUBDIR_CLI_CLEAN): Delete.
	(SUBDIR_CLI_INSTALL, SUBDIR_CLI_UNINSTALL): Delete.
	(SUBDIR_CLI_ALL, SUBDIR_GDBTK_ALL): Delete.
	(SUBDIR_GDBTK_CLEAN, SUBDIR_GDBTK_INSTALL): Delete.
	(SUBDIR_GDBTK_UNINSTALL, SUBDIR_MI_ALL): Delete.
	(SUBDIR_MI_CLEAN, SUBDIR_MI_INSTALL): Delete.
	(SUBDIR_MI_UNINSTALL, SUBDIR_TUI_ALL): Delete.
	(SUBDIR_TUI_CLEAN, SUBDIR_TUI_INSTALL): Delete.
	(SUBDIR_TUI_UNINSTALL, SUBDIR_CLI_CLEAN): Delete.
@
text
@d866 2
a867 1
COMMON_OBS = version.o \
d882 2
a883 2
	gdbarch.o arch-utils.o gdbtypes.o osabi.o copying.o $(DEPFILES) \
	memattr.o mem-break.o target.o parse.o language.o $(YYOBJ) buildsym.o \
a911 2
OBS = $(COMMON_OBS)

d1004 3
a1006 5
#
# FIXME: There are 2 problems with this approach. First, if the INIT_FILES
# list includes a file twice (because of some mistake somewhere else)
# the _initialize_* function will be included twice in init.c. Second,
# init.c may force unnecessary files to be linked in.
d1009 10
a1018 8
# the first call is to _initialize_gdbtypes.  This is a hack to ensure
# that all the architecture dependant global builtin_type_* variables
# are initialized before anything else (per-architecture code is
# called in the same order that it is registered).  The ``correct
# fix'' is to have all the builtin types made part of the architecture
# and initialize them on-demand (using gdbarch_data) just like
# everything else.  The catch is that other modules still take the
# address of these builtin types forcing them to be variables, sigh!
d1027 5
a1031 1
INIT_FILES = $(OBS) $(TSOBS) $(CONFIG_SRCS)
d1035 2
d1040 12
a1051 11
	    -e '/^init.o/d' \
	    -e '/xdr_ld.o/d' \
	    -e '/xdr_ptrace.o/d' \
	    -e '/xdr_rdb.o/d' \
	    -e '/udr.o/d' \
	    -e '/udip2soc.o/d' \
	    -e '/udi2go32.o/d' \
	    -e '/version.o/d' \
	    -e '/^[a-z0-9A-Z_]*_[SU].o/d' \
	    -e '/[a-z0-9A-Z_]*-exp.tab.o/d' \
	    -e 's/\.o/.c/' \
d1054 9
a1062 3
	while read f; do grep '^_initialize_[a-z_0-9A-Z]* *(' $$f 2>/dev/null; done | \
	sed -e 's/^.*://' -e 's/^\([a-z_0-9A-Z]*\).*/\1/' | \
	( echo _initialize_gdbtypes ; grep -v '^_initialize_gdbtypes$$' ) > init.l-tmp
d1065 3
a1067 3
	@@echo '#include "defs.h"' >>init.c-tmp
	@@echo '#include "call-cmds.h"' >>init.c-tmp
	@@sed -e 's/\(.*\)/extern initialize_file_ftype \1;/' <init.l-tmp >>init.c-tmp
d1071 1
a1071 1
	@@sed -e 's/\(.*\)/  \1 ();/' <init.l-tmp >>init.c-tmp
d1094 1
a1094 1
LIBGDB_OBS= $(OBS) $(TSOBS) $(ADD_FILES) init.o
@


1.489
log
@2004-02-07  Andrew Cagney  <cagney@@redhat.com>

	* Makefile.in: Update all dependencies.
@
text
@a156 4
SUBDIR_CLI_ALL=
SUBDIR_CLI_CLEAN=
SUBDIR_CLI_INSTALL=
SUBDIR_CLI_UNINSTALL=
a177 4
SUBDIR_MI_ALL=
SUBDIR_MI_CLEAN=
SUBDIR_MI_INSTALL=
SUBDIR_MI_UNINSTALL=
a220 5
SUBDIR_TUI_ALL=
SUBDIR_TUI_CLEAN=
SUBDIR_TUI_INSTALL=
SUBDIR_TUI_UNINSTALL=

a295 4
SUBDIR_GDBTK_ALL= all-gdbtk
SUBDIR_GDBTK_CLEAN= clean-gdbtk
SUBDIR_GDBTK_INSTALL= install-gdbtk
SUBDIR_GDBTK_UNINSTALL= uninstall-gdbtk
@


1.488
log
@2004-02-07  Andrew Cagney  <cagney@@redhat.com>

	* configure.in (CONFIG_INITS, CONFIG_LIB_OBS): Delete.
	* configure: Re-generate (with correct autoconf).
	* Makefile.in (INIT_FILES): Replace CONFIG_INITS with CONFIG_SRCS.
	(CONFIG_LIB_OBS, CONFIG_INITS): Delete.
	(COMMON_OBS): Add "main.o" and "annotate.o".
	(ANNOTATE_OBS): Delete.
	(OBS): Remove ANNOTATE_OBS.
	(DEPFILES): Replace CONFIG_LIB_OBS with CONFIG_LIB_OBS, remove
	CONFIG_INITS.
	(gdb$(EXEEXT), insight$(EXEEXT)): Do not depend on, or link
	against CONFIG_OBS and "main.o".
	(SUBDIR_CLI_INITS, SUBDIR_MI_INITS): Delete.
	(SUBDIR_TUI_INITS, SUBDIR_GDBTK_INITS): Delete.
@
text
@d823 1
a823 1
tui_disasm_h = $(srcdir)/tui/tui-disasm.h
d825 1
a825 1
tui_h = $(srcdir)/tui/tui.h $(ansidecl_h)
d827 3
a829 3
tui_layout_h = $(srcdir)/tui/tui-layout.h
tui_regs_h = $(srcdir)/tui/tui-regs.h
tui_source_h = $(srcdir)/tui/tui-source.h $(defs_h)
d831 1
a831 1
tui_windata_h = $(srcdir)/tui/tui-windata.h
d833 2
a834 2
tui_win_h = $(srcdir)/tui/tui-win.h
tui_winsource_h = $(srcdir)/tui/tui-winsource.h
d1617 3
a1619 2
auxv.o: $(defs_h) $(target_h) $(gdbtypes_h) $(command_h) $(gdb_assert_h) \
	$(auxv_h) $(elf_common_h) $(valprint_h) $(inferior_h)
d2178 2
a2179 2
	$(gdb_assert_h) $(inflow_h) $(gdb_dirent_h) $(X_OK) $(gdb_stat_h) \
	$(proc_utils_h) $(gregset_h) $(gdb_string_h) $(auxv_h)
d2363 2
a2364 3
	$(frame_unwind_h) $(osabi_h) $(regset_h) $(symtab_h) \
	$(solib_svr4_h) $(trad_frame_h) $(gdb_assert_h) \
	$(sparc64_tdep_h) $(nbsd_tdep_h)
d2542 1
a2542 1
	$(cli_cmds_h) $(readline_h)
d2745 1
a2745 1
	$(stack_h) $(dictionary_h)
a2806 5
tuiSourceWin.o: $(srcdir)/tui/tuiSourceWin.c $(defs_h) $(symtab_h) \
	$(frame_h) $(breakpoint_h) $(value_h) $(source_h) $(tui_h) \
	$(tuiData_h) $(tuiStack_h) $(tuiWin_h) $(tuiGeneralWin_h) \
	$(tuiSourceWin_h) $(tuiSource_h) $(tuiDisassem_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tuiSourceWin.c
d2817 1
a2817 1
	$(tui_data_h) $(tui_wingeneral_h)
d2821 1
a2821 1
	$(tui_h) $(tui_data_h) $(tui_win_h) $(tui_layout_h) \
d2825 1
a2825 1
	$(tui_io_h) $(tui_h)
d2853 2
a2854 2
	$(inferior_h) $(target_h) $(tui_layout_h) $(tui_win_h) \
	$(tui_windata_h) $(tui_wingeneral_h) $(tui_file_h)
d2861 3
a2863 3
	$(frame_h) $(command_h) $(inferior_h) $(target_h) $(top_h) $(tui_h) \
	$(tui_data_h) $(tui_stack_h) $(tui_wingeneral_h) $(tui_source_h) \
	$(tui_winsource_h) $(tui_file_h)
d2869 1
a2869 1
	$(tui_windata_h)
@


1.487
log
@* target.h (target_object): Add TARGET_OBJECT_WCOOKIE.
* inftarg.c: Update copyright year.
(child_xfer_partial): Add support for TARGET_OBJECT_WCOOKIE.
* sparc-nat.c: Include "target.h" and "gdb_assert.h".
(sparc_xfer_wcookie): New function.
* sparc-tdep.c (sparc_fetch_wcookie): New function.
* Makefile.in (sparc-nat.o): Update dependencies.
* config/sparc/nm-nbsd.h: Include "target.h".
(NATIVE_XFER_WCOOKIE): New define.
(sparc_xfer_wcookie): New prototype.
@
text
@a154 2
SUBDIR_CLI_INITS = \
	$(SUBDIR_CLI_SRCS)
a178 2
SUBDIR_MI_INITS = \
	$(SUBDIR_MI_SRCS)
a225 2
SUBDIR_TUI_INITS = \
	$(SUBDIR_TUI_SRCS)
a306 1
SUBDIR_GDBTK_INITS = gdbtk/generic/gdbtk.c gdbtk/generic/gdbtk-interp.c
a314 1
CONFIG_LIB_OBS= @@CONFIG_LIB_OBS@@
a316 1
CONFIG_INITS= @@CONFIG_INITS@@
a417 2
ANNOTATE_OBS = annotate.o

d874 1
a874 1
	   $(REMOTE_OBS) $(SIM_OBS) $(CONFIG_LIB_OBS)
d884 1
d895 1
d928 1
a928 1
OBS = $(COMMON_OBS) $(ANNOTATE_OBS)
d1045 1
a1045 1
INIT_FILES = $(OBS) $(TSOBS) $(CONFIG_OBS) $(CONFIG_INITS)
d1086 1
a1086 1
gdb$(EXEEXT): gdb.o main.o libgdb.a $(CONFIG_OBS) $(ADD_DEPS) $(CDEPS) $(TDEPLIBS)
d1089 1
a1089 1
		-o gdb$(EXEEXT) gdb.o main.o $(CONFIG_OBS) libgdb.a \
d2622 1
a2622 1
insight$(EXEEXT): gdbtk-main.o main.o libgdb.a $(CONFIG_OBS) $(ADD_DEPS) \
d2626 1
a2626 1
		-o insight$(EXEEXT) gdbtk-main.o main.o $(CONFIG_OBS) libgdb.a \
@


1.486
log
@	* Makefile.in (mips-linux-nat.o): Update dependencies.
	* mips-linux-nat.c: Include mips-tdep.h.
@
text
@d2386 3
a2388 2
sparc-nat.o: sparc-nat.c $(defs_h) $(inferior_h) $(regcache_h) \
	$(gdb_string_h) $(gdb_wait_h) $(sparc_tdep_h) $(sparc_nat_h)
@


1.485
log
@2004-01-28  Roland McGrath  <roland@@redhat.com>

	* procfs.c (procfs_xfer_partial): New function.
	(init_procfs_ops): Use that for procfs_ops.to_xfer_partial.
	* Makefile.in (procfs.o): Add $(auxv_h) dep.
	* auxv.h: New file.
	* auxv.c: New file.
	* Makefile.in (auxv_h): New variable.
	(COMMON_OBS): Add auxv.o here.
	(auxv.o): New target.
@
text
@d2082 1
a2082 1
mips-linux-nat.o: mips-linux-nat.c $(defs_h)
@


1.484
log
@	* Makefile.in (cli-cmds.o): Add $(readline_h).
@
text
@d11 1
a11 1
# 
d16 1
a16 1
# 
d81 1
a81 1
# This is used to rebuild ada-lex.c from ada-lex.l.  If the program is 
d434 2
a435 2
# Possibly ignore the simulator.  If the simulator is being ignored, 
# these expand into SIM= and SIM_OBJ=, overriding the entries from 
d585 1
a585 1
# (Why would we not want to depend on them?  If one of these changes in a 
d655 1
d895 1
d982 1
a982 1
	nroff -man $(srcdir)/gdb.1 | col -b > gdb.t 
d987 1
a987 1
# not to; for example, if the user has made some trivial change to a 
d1007 1
a1007 1
	@@$(MAKE) DO=install "DODIRS=$(SUBDIRS)" $(FLAGS_TO_PASS) subdir_do 
d1019 1
a1019 1
	@@$(MAKE) DO=uninstall "DODIRS=$(SUBDIRS)" $(FLAGS_TO_PASS) subdir_do 
d1033 2
a1034 2
# list includes a file twice (because of some mistake somewhere else) 
# the _initialize_* function will be included twice in init.c. Second, 
d1160 1
a1160 1
	@@$(MAKE) $(FLAGS_TO_PASS) DO=clean "DODIRS=$(SUBDIRS)" subdir_do 
d1173 1
a1173 1
	@@$(MAKE) $(FLAGS_TO_PASS) DO=distclean "DODIRS=$(SUBDIRS)" subdir_do 
d1415 1
a1415 1
	    $(srcdir)/ada-exp.y  y.tab.c ada-exp.tmp -- $(YFLAGS) 
d1444 1
a1444 1
	    $(srcdir)/c-exp.y  y.tab.c c-exp.tmp -- $(YFLAGS) 
d1461 1
a1461 1
	    $(srcdir)/f-exp.y  y.tab.c f-exp.tmp -- $(YFLAGS) 
d1478 1
a1478 1
	    $(srcdir)/jv-exp.y  y.tab.c jv-exp.tmp -- $(YFLAGS) 
d1495 1
a1495 1
	    $(srcdir)/m2-exp.y  y.tab.c m2-exp.tmp -- $(YFLAGS) 
d1513 1
a1513 1
	    $(srcdir)/objc-exp.y  y.tab.c objc-exp.tmp -- $(YFLAGS) 
d1530 1
a1530 1
	    $(srcdir)/p-exp.y  y.tab.c p-exp.tmp -- $(YFLAGS) 
d1626 2
d2187 1
a2187 1
	$(proc_utils_h) $(gregset_h) $(gdb_string_h)
d2644 1
a2644 1
	$(tracepoint_h) $(top_h) 
@


1.483
log
@2004-01-29  Roland McGrath  <roland@@redhat.com>

	* procfs.c: Include gdb_string.h for str* decls, otherwise warnings.
	* Makefile.in (procfs.o): Add dep.
@
text
@d2546 1
a2546 1
	$(cli_cmds_h)
@


1.482
log
@* sparc-tdep.h (sparc32nbsd_sigcontext_saved_regs): New prototype.
* sparcnbsd-tdep.c (sparc32nbsd_sigcontext_saved_regs): New
function with code split out from
sparc32nbsd_sigcontext_frame_cache.
(sparc32nbsd_sigcontext_frame_cache): Use
sparc32nbsd_sigcontext_saved_regs.
(_initialize_sparc32nbsd_tdep): Don't register OS ABI handler for
OpenBSD.
* sparcobsd-tdep.c: New file.
* Makefile.in (ALLDEPFILES): Add sparcobsd-tdep.c.
(sparcobsd-tdep.o): New dependency.
* configure.tgt (sparc-*-openbsd*): Set gdb_target to obsd.
* config/sparc/obsd.mt: New file.
@
text
@d2183 1
a2183 1
	$(proc_utils_h) $(gregset_h)
@


1.481
log
@* sparc64-tdep.h (stryct_frame_info, struct trad_frame_saved_reg):
Add opaque declarations.
(sparc64nbsd_sigcontext_saved_regs): New prototype.
* sparc64nbsd-tdep.c (sparc64nbsd_sigcontext_saved_regs): New
function with code split out from
sparc64nbsd_sigcontext_frame_cache.
(sparc64nbsd_sigcontext_frame_cache): Use
sparc64nbsd_sigcontext_saved_regs.
(_initialize_sparc64nbsd_tdep): Don't register OS ABI handler for
OpenBSD.
* sparc64obsd-tdep.c: New file.
* Makefile.in (ALLDEPFILES): Add sparc64obsd-tdep.c.
(sparc64obsd-tdep.o): New dependency.
* configure.tgt (sparc64-*-openbsd*): Set gdb_target to obsd64 and
gdb_osabi to GDB_OSABI_OPENBSD_ELF.
* config/sparc/obsd64.mt: New file.
@
text
@d1331 1
a1331 1
	sparcnbsd-nat.c sparcnbsd-tdep.c \
d2389 3
@


1.480
log
@2004-01-23  David Carlton  <carlton@@kealia.com>

	Partial workaround for PR c++/1511:
	* cp-namespace.c: Include frame.h.
	(cp_lookup_transparent_type): New
	(cp_lookup_transparent_type_loop): New.
	* cp-support.h: Declare cp_lookup_transparent_type.
	* symtab.c (basic_lookup_transparent_type): Renamed from
	lookup_transparent_type.
	(lookup_transparent_type): Replace old body by a call to
	current_language->la_lookup_transparent_type.
	* symtab.h: Update copyright.  Declare
	basic_lookup_transparent_type.
	* language.h: Update copyright.
	(struct language_defn): Add la_lookup_transparent_type.
	* language.c: Update copyright.
	(unknown_language_defn): Add basic_lookup_transparent_type.
	(auto_language_defn): Add basic_lookup_transparent_type.
	(local_language_defn): Add basic_lookup_transparent_type.
	* ada-lang.c: Update copyright.
	(ada_language_defn): Add basic_lookup_transparent_type.
	* c-lang.c: Update copyright.
	(c_language_defn): Add basic_lookup_transparent_type.
	(cplus_language_defn): Add basic_lookup_transparent_type.
	(asm_language_defn): Add basic_lookup_transparent_type.
	(minimal_language_defn): Add basic_lookup_transparent_type.
	* f-lang.c: Update copyright.
	(f_language_defn): Add basic_lookup_transparent_type.
	* jv-lang.c: Update copyright.
	(java_language_defn): Add basic_lookup_transparent_type.
	* m2-lang.c: Update copyright.
	(m2_language_defn): Add basic_lookup_transparent_type.
	* objc-lang.c: Update copyright.
	(objc_language_defn): Add basic_lookup_transparent_type.
	* p-lang.c: Update copyright.
	(p_language_defn): Add basic_lookup_transparent_type.
	* scm-lang.c: Update copyright.
	(scm_language_defn): Add basic_lookup_transparent_type.
	* Makefile.in (cp-namespace.o): Depend on frame.h.

2004-01-23  David Carlton  <carlton@@kealia.com>

	* gdb.cp/rtti.exp: Don't include full path in ${srcfile}.  Add
	test for cp_lookup_transparent_type.
	* gdb.cp/rtti1.cc: Update copyright.  Add n2::func and refer_to;
	call them.
@
text
@d1330 2
a1331 2
	sparc64nbsd-nat.c sparc64nbsd-tdep.c sparcnbsd-nat.c \
	sparcnbsd-tdep.c \
d2366 4
@


1.479
log
@2004-01-19  Michael Chastain  <mec.gnu@@mindspring.com>

	* MAINTAINERS: Delete mmalloc.
	* Makefile.in: Delete MMALLOC, MMALLOC_CFLAGS, -lmmalloc, mmalloc_h.
	* NEWS: Mention removal of --with-malloc.
	* acconfig.h: Delete USE_MMALLOC, MMCHECK_FORCE.
	* config.in: Regenerate.
	* configure: Regenerate.
	* configure.in: Delete MMALLOC_CFLAGS, MMALLOC, --with-mmalloc, USE_MMALLOC, MMCHECK_FORCE.
	* gdbinit.in: Remove mmalloc.
	* utils.c: Delete USE_MMALLOC, NO_MMCHECK, MMCHECK_FORCE, malloc_botch.
	* config/alpha/alpha-linux.mh: Delete MMALLOC, MMALLOC_CFLAGS.
	* config/i386/go32.mh: Likewise.
	* config/i386/interix.mh: Likewise.
	* config/powerpc/xm-linux.h: Delete MMAP_BASE_ADDRESS, MMAP_INCREMENT.

2004-01-19  Michael Chastain  <mec.gnu@@mindspring.com>

	* gdbint.texinfo: Delete USE_MMALLOC, NO_MMCHECK, MMCHECK_FORCE,
	MMAP_BASE_ADDRESS, MMAP_INCREMENT.
@
text
@d1694 1
a1694 1
	$(gdbtypes_h) $(dictionary_h) $(command_h)
@


1.478
log
@2004-01-18  Andrew Cagney  <cagney@@redhat.com>

	* tui/tui-command.c: Rename tui/tuiCommand.c.
	* tui/tui-command.h: Rename tui/tuiCommand.h.
	* tui/tui-data.c: Rename tui/tuiData.c.
	* tui/tui-data.h: Rename tui/tuiData.h.
	* tui/tui-disasm.c: Rename tui/tuiDisassem.c.
	* tui/tui-disasm.h: Rename tui/tuiDisassem.h.
	* tui/tui-io.c: Rename tui/tuiIO.c.
	* tui/tui-io.h: Rename tui/tuiIO.h.
	* tui/tui-layout.c: Rename tui/tuiLayout.c.
	* tui/tui-layout.h: Rename tui/tuiLayout.h.
	* tui/tui-regs.c: Rename tui/tuiRegs.c.
	* tui/tui-regs.h: Rename tui/tuiRegs.h.
	* tui/tui-source.c: Rename tui/tuiSource.c.
	* tui/tui-source.h: Rename tui/tuiSource.h.
	* tui/tui-stack.c: Rename tui/tuiStack.c.
	* tui/tui-stack.h: Rename tui/tuiStack.h.
	* tui/tui-win.c: Rename tui/tuiWin.c.
	* tui/tui-win.h: Rename tui/tuiWin.h.
	* tui/tui-windata.c: Rename tui/tuiDataWin.c.
	* tui/tui-windata.h: Rename tui/tuiDataWin.h.
	* tui/tui-wingeneral.c: Rename tui/tuiGeneralWin.c.
	* tui/tui-wingeneral.h: Rename tui/tuiGeneralWin.h.
	* tui/tui-winsource.c: Rename tui/tuiSourceWin.c.
	* tui/tui-winsource.h: Rename tui/tuiSourceWin.h.
	* tui/tui-file.c: Update includes.
	* tui/tui-hooks.c: Update includes.
	* tui/tui-interp.c: Update includes.
	* tui/tui.c: Update includes.
	* Makefile.in: Update all tui/ dependencies.
	(SUBDIR_TUI_OBS, SUBDIR_TUI_SRCS): Update file names.
@
text
@a108 4
# Configured by the --with-mmalloc option to configure.
MMALLOC = @@MMALLOC@@
MMALLOC_CFLAGS = @@MMALLOC_CFLAGS@@

d363 1
a363 1
	$(BFD_CFLAGS) $(MMALLOC_CFLAGS) $(INCLUDE_CFLAGS) \
a382 1
# MMALLOC comes after anything else that might want an allocation function.
d388 1
a388 1
	-lmmalloc -lintl -liberty
d392 1
a392 1
	$(MMALLOC) $(LIBIBERTY) $(WIN32LIBS)
d394 1
a394 1
	$(OPCODES) $(MMALLOC) $(INTL_DEPS) $(LIBIBERTY) $(CONFIG_DEPS)
d403 1
a403 1
	$(BFD_CFLAGS) $(MMALLOC_CFLAGS) $(INCLUDE_CFLAGS) \
d2132 1
a2132 1
	$(breakpoint_h) $(block_h) $(dictionary_h) $(mmalloc_h)
d2465 1
a2465 1
	$(filenames_h) $(inferior_h) $(mmalloc_h)
@


1.477
log
@2004-01-18  Andrew Cagney  <cagney@@redhat.com>

	* Makefile.in: Update copyright.  Update dependencies.
@
text
@d199 5
a203 1
	tui-file.o tui.o tuiData.o tuiSource.o tuiStack.o tuiIO.o \
d205 10
a214 3
	tuiGeneralWin.o tuiLayout.o tuiWin.o tuiCommand.o \
	tuiDisassem.o tuiSourceWin.o tuiRegs.o tuiDataWin.o \
	tui-out.o tui-hooks.o
d216 5
a220 1
	tui/tui-file.c tui/tui.c tui/tuiData.c tui/tuiSource.c \
d222 11
a232 5
	tui/tuiStack.c tui/tuiIO.c \
	tui/tuiGeneralWin.c tui/tuiLayout.c \
	tui/tuiWin.c tui/tuiCommand.c \
	tui/tuiDisassem.c tui/tuiSourceWin.c \
	tui/tuiRegs.c tui/tuiDataWin.c tui/tui-out.c tui/tui-hooks.c
d836 3
a838 12
tuiCommand_h = $(srcdir)/tui/tuiCommand.h
tuiDataWin_h = $(srcdir)/tui/tuiDataWin.h
tuiData_h = $(srcdir)/tui/tuiData.h
tuiDisassem_h = $(srcdir)/tui/tuiDisassem.h
tuiGeneralWin_h = $(srcdir)/tui/tuiGeneralWin.h
tuiIO_h = $(srcdir)/tui/tuiIO.h
tuiLayout_h = $(srcdir)/tui/tuiLayout.h
tuiRegs_h = $(srcdir)/tui/tuiRegs.h
tuiSourceWin_h = $(srcdir)/tui/tuiSourceWin.h
tuiSource_h = $(srcdir)/tui/tuiSource.h $(defs_h)
tuiStack_h = $(srcdir)/tui/tuiStack.h
tuiWin_h = $(srcdir)/tui/tuiWin.h
d841 9
a2808 32
tuiCommand.o: $(srcdir)/tui/tuiCommand.c $(defs_h) $(tui_h) $(tuiData_h) \
	$(tuiWin_h) $(tuiIO_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tuiCommand.c
tuiDataWin.o: $(srcdir)/tui/tuiDataWin.c $(defs_h) $(tui_h) $(tuiData_h) \
	$(tuiGeneralWin_h) $(tuiRegs_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tuiDataWin.c
tuiData.o: $(srcdir)/tui/tuiData.c $(defs_h) $(symtab_h) $(tui_h) \
	$(tuiData_h) $(tuiGeneralWin_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tuiData.c
tuiDisassem.o: $(srcdir)/tui/tuiDisassem.c $(defs_h) $(symtab_h) \
	$(breakpoint_h) $(frame_h) $(value_h) $(source_h) $(disasm_h) \
	$(tui_h) $(tuiData_h) $(tuiWin_h) $(tuiLayout_h) $(tuiSourceWin_h) \
	$(tuiStack_h) $(tui_file_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tuiDisassem.c
tuiGeneralWin.o: $(srcdir)/tui/tuiGeneralWin.c $(defs_h) $(tui_h) \
	$(tuiData_h) $(tuiGeneralWin_h) $(tuiWin_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tuiGeneralWin.c
tuiIO.o: $(srcdir)/tui/tuiIO.c $(defs_h) $(terminal_h) $(target_h) \
	$(event_loop_h) $(event_top_h) $(command_h) $(top_h) $(readline_h) \
	$(tui_h) $(tuiData_h) $(tuiIO_h) $(tuiCommand_h) $(tuiWin_h) \
	$(tuiGeneralWin_h) $(tui_file_h) $(ui_out_h) $(cli_out_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tuiIO.c
tuiLayout.o: $(srcdir)/tui/tuiLayout.c $(defs_h) $(command_h) $(symtab_h) \
	$(frame_h) $(source_h) $(tui_h) $(tuiData_h) $(tuiDataWin_h) \
	$(tuiGeneralWin_h) $(tuiStack_h) $(tuiRegs_h) $(tuiWin_h) \
	$(tuiSourceWin_h) $(tuiDisassem_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tuiLayout.c
tuiRegs.o: $(srcdir)/tui/tuiRegs.c $(defs_h) $(tui_h) $(tuiData_h) \
	$(symtab_h) $(gdbtypes_h) $(gdbcmd_h) $(frame_h) $(regcache_h) \
	$(inferior_h) $(target_h) $(tuiLayout_h) $(tuiWin_h) $(tuiDataWin_h) \
	$(tuiGeneralWin_h) $(tui_file_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tuiRegs.c
d2814 5
a2818 18
tuiSource.o: $(srcdir)/tui/tuiSource.c $(defs_h) $(symtab_h) $(frame_h) \
	$(breakpoint_h) $(source_h) $(symtab_h) $(tui_h) $(tuiData_h) \
	$(tuiStack_h) $(tuiSourceWin_h) $(tuiSource_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tuiSource.c
tuiStack.o: $(srcdir)/tui/tuiStack.c $(defs_h) $(symtab_h) $(breakpoint_h) \
	$(frame_h) $(command_h) $(inferior_h) $(target_h) $(top_h) $(tui_h) \
	$(tuiData_h) $(tuiStack_h) $(tuiGeneralWin_h) $(tuiSource_h) \
	$(tuiSourceWin_h) $(tui_file_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tuiStack.c
tuiWin.o: $(srcdir)/tui/tuiWin.c $(defs_h) $(command_h) $(symtab_h) \
	$(breakpoint_h) $(frame_h) $(cli_cmds_h) $(top_h) $(source_h) \
	$(tui_h) $(tuiData_h) $(tuiGeneralWin_h) $(tuiStack_h) $(tuiRegs_h) \
	$(tuiDisassem_h) $(tuiSource_h) $(tuiSourceWin_h) $(tuiDataWin_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tuiWin.c
tui.o: $(srcdir)/tui/tui.c $(defs_h) $(gdbcmd_h) $(tui_h) $(tuiData_h) \
	$(tuiLayout_h) $(tuiIO_h) $(tuiRegs_h) $(tuiStack_h) $(tuiWin_h) \
	$(tuiSourceWin_h) $(tuiDataWin_h) $(readline_h) $(target_h) \
	$(frame_h) $(breakpoint_h) $(inferior_h) $(symtab_h) $(source_h)
d2820 11
d2832 1
a2832 1
	$(tui_tuiIO_h) $(tui_h)
d2838 2
a2839 2
	$(tuiData_h) $(tuiLayout_h) $(tuiIO_h) $(tuiRegs_h) $(tuiWin_h) \
	$(tuiStack_h) $(tuiDataWin_h) $(tuiSourceWin_h)
d2843 1
a2843 2
	$(tui_tuiData_h) $(readline_h) $(tui_tuiWin_h) $(tui_h) \
	$(tui_tuiIO_h)
d2845 10
d2858 31
@


1.476
log
@* Makefile.in (ALLDEPFILES): Remove core-sol2.c.
(core-sol2.o): Remove dependency.
* core-sol2.c: Remove file.
@
text
@d1 3
a3 2
# Copyright 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998,
# 1999, 2000, 2001, 2002, 2003 Free Software Foundation, Inc.
d712 1
a712 1
libunwind_frame_h = libunwind-frame.h
d759 1
a761 1
sparc64_tdep_h = sparc64-tdep.h
a1575 2
amd64nbsd-nat.o: amd64nbsd-nat.c $(defs_h) $(gdb_assert_h) \
	$(x86_64_tdep_h) $(amd64_nat_h)
d1579 4
a1585 2
amd64-nat.o: amd64-nat.c $(defs_h) $(gdbarch_h) $(regcache_h) \
	$(gdb_assert_h) $(i386_tdep_h) $(x86_64_tdep_h)
d1590 2
a1591 1
	$(gdb_assert_h) $(sim_regno_h) $(version_h) $(floatformat_h)
d1593 1
a1593 1
	$(gdb_string_h) $(regcache_h) $(arm_tdep_h) $(glibc_tdep_h) $(gregset_h)
d1596 2
a1597 2
	$(doublest_h) $(solib_svr4_h) $(osabi_h) $(arm_tdep_h) $(symtab_h) \
	$(symfile_h) $(objfiles_h)
d1617 2
a1618 2
bcache.o: bcache.c $(defs_h) $(gdb_obstack_h) $(bcache_h) \
	$(gdb_string_h) $(gdb_assert_h)
d1660 2
a1661 2
	$(filenames_h) $(cli_decode_h) $(gdbcmd_h) $(completer_h) \
	$(language_h)
d1668 4
a1671 3
corelow.o: corelow.c $(defs_h) $(gdb_string_h) $(frame_h) $(inferior_h) \
	$(symtab_h) $(command_h) $(bfd_h) $(target_h) $(gdbcore_h) \
	$(gdbthread_h) $(regcache_h) $(symfile_h) $(exec_h)
d1681 2
a1682 1
	$(objfiles_h) $(frame_h) $(symtab_h) $(block_h) $(complaints_h)
d1698 2
a1699 2
	$(gdbtypes_h) $(expression_h) $(value_h) $(valprint_h) \
	$(language_h) $(c_lang_h) $(cp_abi_h) $(target_h)
d1768 1
a1768 2
	$(gdb_string_h) $(gdbcore_h) $(gdb_stat_h) $(xcoffsolib_h) \
	$(exec_h)
d1795 2
a1796 1
	$(gdb_assert_h) $(sim_regno_h) $(gdb_sim_frv_h) $(frv_desc_h)
d1816 2
d1824 3
a1826 3
	$(gdbtypes_h) $(value_h) $(demangle_h) $(cp_abi_h)
gnu-v3-abi.o: gnu-v3-abi.c $(defs_h) $(value_h) $(cp_abi_h) $(demangle_h) \
	$(gdb_assert_h) $(gdb_string_h)
d1877 3
a1879 3
	$(value_h) $(regcache_h) $(inferior_h) $(reggroups_h) $(symtab_h) \
	$(symfile_h) $(objfiles_h) $(solib_svr4_h) $(osabi_h) $(i386_tdep_h) \
	$(i386_linux_tdep_h) $(glibc_tdep_h)
d1883 3
a1885 3
i386nbsd-tdep.o: i386nbsd-tdep.c $(defs_h) $(gdbtypes_h) $(gdbcore_h) \
	$(regcache_h) $(arch_utils_h) $(osabi_h) $(i386_tdep_h) \
	$(i387_tdep_h) $(nbsd_tdep_h) $(solib_svr4_h)
d1891 2
a1892 1
	$(regcache_h) $(osabi_h) $(i386_tdep_h) $(i387_tdep_h)
d1917 1
a1917 1
ia64-linux-tdep.o: ia64-linux-tdep.c $(defs_h) $(arch_utils_h)
d1922 2
a1923 1
	$(elf_bfd_h) $(dis_asm_h) $(libunwind_frame_h)
d1931 2
a1932 1
	$(parser_defs_h) $(regcache_h) $(reggroups_h) $(block_h)
d1955 1
a1955 1
	$(regcache_h) $(gdb_string_h) $(gregset_h)
d1972 4
a1975 4
libunwind-frame.o: libunwind-frame.c $(defs_h) \
	$(frame_h) $(frame_base_h) $(frame_unwind_h) $(gdbcore_h) \
	$(gdbtypes_h) $(symtab_h) $(objfiles_h) $(regcache_h) \
	$(gdb_assert_h) $(gdb_string_h) $(complaints_h) $(libunwind_frame_h)
d2005 1
a2005 1
	$(gdb_assert_h) $(dis_asm_h)
a2120 2
op50-rom.o: op50-rom.c $(defs_h) $(gdbcore_h) $(target_h) $(monitor_h) \
	$(serial_h)
d2154 1
a2154 1
	$(ppc_tdep_h) $(target_h)
d2218 1
a2218 1
	$(regcache_h) $(gdb_assert_h) $(sim_regno_h)
d2239 2
a2240 5
remote-vxsparc.o: remote-vxsparc.c $(defs_h) $(vx_share_regPacket_h) \
	$(frame_h) $(inferior_h) $(target_h) $(gdbcore_h) $(command_h) \
	$(symtab_h) $(symfile_h) $(regcache_h) $(gdb_string_h) \
	$(vx_share_ptrace_h) $(vx_share_xdr_ptrace_h) $(vx_share_xdr_ld_h) \
	$(vx_share_xdr_rdb_h) $(vx_share_dbgRpcLib_h)
d2246 1
a2246 1
	$(ppc_tdep_h) $(gdb_stat_h)
d2304 1
a2304 1
	$(completer_h) $(filenames_h) $(solist_h) $(exec_h)
d2332 26
d2364 5
d2375 1
d2377 1
a2377 1
	$(float_format_h) $(frame_h) $(frame_base_h) $(frame_unwind_h) \
a2380 32
sparc64-linux-nat.o: sparc64-linux-nat.c $(defs_h) \
	$(sparc64_tdep_h) $(sparc_nat_h)
sparc64-linux-tdep.o: sparc64-linux-tdep.c $(defs_h) $(gdbarch_h) \
	$(osabi_h) $(solib_svr4_h) $(sparc64_tdep_h)
sparc64-nat.o: sparc-nat.c $(defs_h) $(gdbarch_h) \
	$(sparc64_tdep_h) $(sparc_nat_h)
sparc64-sol2-tdep.o: sparc64-sol2-tdep.c $(defs_h) $(frame_h) \
	$(frame_unwind_h) $(gdbarch_h) $(symtab_h) $(objfiles_h) $(osabi_h) \
	$(trad_frame_h) $(gdb_assert_h) $(sparc64_tdep_h)
sparc64-tdep.o: sparc64-tdep.c $(defs_h) $(arch_utils_h) $(floatformat_h) \
	$(frame_h) $(frame_base_h) $(frame_unwind_h) $(gdbcore_h) \
	$(gdbtypes_h) $(inferior_h) $(symtab_h) $(objfiles_h) $(osabi_h) \
	$(regcache_h) $(target_h) $(value_h) $(gdb_assert_h) $(gdb_string_h) \
	$(sparc64_tdep_h)
sparc64fbsd-nat.o: sparc64fbsd-nat.c $(defs_h) $(sparc64_tdep_h) \
	$(sparc_nat_h)
sparc64fbsd-tdep.o: sparc64fbsd-tdep.c $(defs_h) $(frame_h) \
	$(frame_unwind_h) $(gdbcore_h) $(osabi_h) $(regcache_h) $(target_h) \
	$(trad_frame_h) $(gdb_assert_h) $(gdb_string_h) $(sparc64_tdep_h)
sparc64nbsd-nat.o: sparc64nbsd-nat.c $(defs_h) $(sparc64_tdep_h) \
	$(sparc_nat_h)
sparc64nbsd-tdep.o: sparc64nbsd-tdep.c $(defs_h) $(frame_h) \
	$(frame_unwind_h) $(gdbcore_h) $(osabi_h) $(regcache_h) \
	$(solib_svr4_h) $(trad_frame_h) $(gdb_assert_h) $(gdb_string_h) \
	$(sparc64_tdep_h) $(nbsd_tdep_h)
sparcnbsd-nat.o: sparcnbsd-nat.c $(defs_h) $(sparc_tdep_h) $(sparc_nat_h)
sparcnbsd-tdep.o: sparcnbsd-tdep.c $(defs_h) $(floatformat_h) $(frame_h) \
	$(frame_unwind_h) $(gdbcore_h) $(osabi_h) $(regcache_h) \
	$(solib_svr4_h) $(symtab_h) $(trad_frame_h) $(gdb_assert_h) \
	$(gdb_string_h) $(sparc_tdep_h) $(nbsd_tdep_h)
sparc-stub.o: sparc-stub.c

d2416 1
a2416 2
	$(gdb_wait_h) $(dcache_h) $(regcache_h) $(gdb_assert_h) \
	$(gdbcore_h)
a2451 2
glibc-tdep.o: glibc-tdep.c $(defs_h) $(frame_h) $(symtab_h) \
	$(symfile_h) $(objfiles_h) $(glibc_tdep_h)
a2477 2
w89k-rom.o: w89k-rom.c $(defs_h) $(gdbcore_h) $(target_h) $(monitor_h) \
	$(serial_h) $(xmodem_h) $(regcache_h)
d2480 2
a2481 2
	$(i386_tdep_h) $(buildsym_h) $(symfile_h) $(objfiles_h) \
	$(gdb_string_h) $(gdbthread_h) $(gdbcmd_h) $(exec_h)
@


1.475
log
@* Makefile.in (ALLDEPFILES): Remove sparc-linux-nat.c and
sparcl-tdep.c.  Add sparc-linux-tdep.c, sparc-sol2-nat.c,
sparc-sol2-tdep.c, sparc-sol2-nat.c, sparc-sol2-tdep.c,
sparc64-linux-nat.c, sparc64-linux-tdep.c, sparc64-nat.c,
sparc64-sol2-tdep.c, sparc64-tdep.c, sparc64fbsd-nat.c,
sparc64fbsd-tdep.c, sparcnbsd-nat.c, sparcnbsd-tdep.c.
(sparc_nat_h): New variable.
(sparcbsd_nat_h, sparcnbsd_tdep_h): Remove variables.
(tm-sun4os4.h): Remove dependency.
(sparcbsd-nat.o, sparc-linux-nat.o): Remove dependencies.
(sparc64fbsd-nat.o, sparc64fbsd-tdep.o, sparc64nbsd-nat.o,
sparc64-tdep.o, sparc-nat.o, sparcnbsd-nat.o, sparcnbsd-tdep.o,
sparc-tdep.o): Update dependencies.
(sparc-linux-tdep.o, sparc-sol2-nat.o, sparc-sol2-tdep.o,
sparc64-linux-nat.o, sparc64-linux-tdep.o, sparc64-nat.o,
sparc64-sol2-tdep.o, sparc64-tdep.o, sparc64nbsd-tdep.o): New
dependencies.
* configure.host: Remove existing sparc-*-lynxos*,
sparc-*-solaris*, sparc-*-sunos4*, sparc-*-sunos5*, sparc-*-*,
ultrasparc-*-freebsd, sparcv9-*-freebsd, sparc64-*-linux*,
sparcv9-*-* and sparc64-*-* triplets.  Add new sparc64-*-linux*,
sparc-*-solaris2*, sparcv9-*-solaris2* and sparc64-*-solaris2*
triplets.
* configure.tgt: Remove exitsing sparc-*-aout*, sparc-*-coff*,
sparc-*-elf*, sparc*-lynxos*, sparc-*-solars2*, sparc-*-sunos4*,
sparc-*-sunos5*, sparc-*-vxworks*, sparc64-*linux*, sparc64-*-*,
sparcv9-*-* and commented out sparc64-*-solars2* triplets.  Add
new sparc-*-solaris2.[0-6], sparc-*-solaris2.[0-6].*,
sparc64-*-linux, sparc-*-solaris2*, sparcv9-*-solaris*,
sparc64-*-solaris2* and sparc64-*-* triplets.
* sparc64-tdep.c: Update copyright year.  Include "inferior.h",
"symtab.h" and "objfiles.h".
(BIAS): Remove define.
(X_OP, X_RD, X_A, X_COND, X_OP2, X_IMM22, X_OP3, X_I, X_DISP22)
(X_DISP19): Remove macros.
(sparc_fetch_instruction): Remove function.
(struct gdbarch_tdep): Remove definition.
(SPARC64_NUM_REGS, SPARC64_NUM_PSEUDO_REGS): Use ARRAY_SIZE.
(sparc_breakpoint_from_pc): Remove function.
(struct sparc64_frame_cache): Remove definition.
(sparc64_alloc_frame_cache, sparc64_analyze_prologue,
sparc64_unwind_pc): Remove functions.
(sparc64_skip_prologue): Use `struct sparc_frame_cache' instead of
`struct sparc64_frame_cache.  Call sparc_analyze_prologue instead
of sparc64_analyze_prologue.  Mark constant as ULL instead of UL.
(sparc64_frame_cache): Change return type to `struct
sparc_frame_cache *'.  Simply call sparc_frame_cache.
(sparc64_frame_this_id, sparc64_frame_prev_register,
sparc64_frame_base_address): Use `struct sparc_frame_cache'
instead of `struct sparc64_frame_cache.
(sparc_unwind_dummy_id, sparc_extract_struct_value_address,
sparc_analyze_control_transfer, sparc_software_single_step,
sparc64_gdbarch_init, sparc_supply_rwindow, sparc_fill_rwindow,
_initialize_sparc64_tdep): Remove functions.
(TSTATE_CWP, TSTATE_ICC, TSTATE_XCC): New macros.
(PSR_S, PSR_ICC, PSR_VERS, PSR_IMPL, PSR_V8PLUS, PSR_XCC): New
macros.
(sparc64_supply_gregset, sparc64_collect_gregset,
sparc64_supply_fpregset, sparc64_collect_fpregset): New functions.
(sparc64_init_abi): New function.
* sparc64-tdep.h: Update copyright year.  Fix typo in multiple
inclusion guard.  Include "sparc-tdep.h".
(BIAS): Define.
(r_tstate_offset, r_fprs_offset): New defines.
(enum sparc_regnum): Remove defenition.
(enum sparc64_regnum): Reformat.
(sparc_supply_rwindow, sparc_fill_rwindow): Remove prototypes.
(sparc64_init_abi, sparc64_supply_gregset,
sparc64_collect_gregset, sparc64_supply_fpregset,
sparc64_collect_fpregset): New prototypes.
(sparc64_sol2_gregset, sparc64nbsd_gregset, sparc64fbsd_gregset):
Add extern declarations.
(sparc64_sol2_init_abi): New prototype.
(sparc64fbsd_supply_reg, sparc64fbsd_fill_reg)
(sparc64fbsd_supply_fpreg, sparc64fbsd_fill_fpreg): Remove
prototypes.
* sparc64fbsd-nat.c: Include "sparc-nat.h", don't include
"sparnbsd-nat.h".
(sparc64fbsd_reg_supplies_p, sparc64fbsd_fpreg_supplies_p): Remove
functions.
(_initialize_sparc64fbsd_nat): Remove initialization of
sparcbsd_supply_reg, sparcbsd_fill_reg, sparcbsd_supply_fpreg,
sparcbsd_fill_fpreg, sparcbsd_reg_supplies_p,
sparcbsd_fpreg_supplies_p.  Initialize sparc_gregset.
* sparc64fbsd-tdep.c: Update copyright year.  Include "frame.h",
"frame-unwind.h", "trad-frame.h" and "gdb_assert.h".
(sparc64fbsd_r_global_offset, sparc64fbsd_r_out_offset)
(sparc64fbsd_r_fprs_offset, sparc64fbsd_r_tnpc_offset)
(sparc64fbsd_r_tpc_offset, sparc64fbsd_r_tstate_offset)
(sparc64fbsd_r_y_offset): Remove variables.
(sparc64fbsd_sizeof_struct_reg, sparc64fbsd_sizeof_struct_fpreg):
Make static and const.
(sparc64fbsd_supply_reg, sparc64fbsd_fill_reg)
(sparc64fbsd_supply_fpreg, sparc64fbsd_fill_fpreg): Remove
functions.
(sparc64fbsd_gregset): New variable.
(fetch_core_registers): Replace calls to sparc64fbsd_supply_reg
and sparc64fbsd_supply_fpreg with calls to sparc64_supply_gregset
and sparc64_supply_fpregset.
(sparc64fbsd_pc_in_sigtramp, sparc64fbsd_sigtramp_frame_cache)
(sparc64fbsd_sigtramp_frame_this_id)
(sparc64fbsd_sigtramp_frame_prev_register): New functions.
(sparc64fbsd_sigtramp_frame_unwind): New variable.
(sparc64fbsd_sigtramp_frame_sniffer): New function.
(sparc64fbsd_init_abi): Set pc_in_sigtramp, append
sparc64fbsd_sigtramp_frame_sniffer.  Call sparc64_init_abi.
* sparcnbsd-tdep.c: Update copyright year.  Include
"floatformat.h", "frame.h", "frame-unwind.h", "symtab.h",
"trad-frame.h" and "gdb_assert.h", don't include "target.h",
"value.h" and "sparcnbsd-tdep.h".
(REG32_OFFSET_PSR, REG32_OFFSET_PC, REG32_OFFSET_NPC)
(REG32_OFFSET_Y, REG32_OFFSET_GLOBAL, REG32_OFFSET_OUT)
(REG64_OFFSET_TSTATE, REG64_OFFSET_PC, REG64_OFFSET_NPC)
(REG64_OFFSET_Y, REG64_OFFSET_GLOBAL, REG64_OFFSET_OUT): Remove
defines.
(sparcnbsd_gregset): New variable.
(sparcnbsd_supply_reg32, sparcnbsd_supply_reg64)
(sparcnbsd_fill_reg32, sparcnbsd_fill_reg64)
(sparcnbsd_supply_fpreg32, sparcnbsd_supply_fpreg64)
(sparcnbsd_fill_reg32, sparcnbsd_fill_reg64): Remove functions.
(sparc32nbsd_sigtramp_start, sparc32nbsd_sigtramp_end): New
variables.
(sparc32nbsd_pc_in_sigtramp, sparc32nbsd_sigcontext_frame_cache)
(sparc32nbsd_sigcontext_frame_this_id)
(sparc32nbsd_sigcontext_frame_prev_register): New functions.
(sparc32nbsd_sigcontext_frame_unwind): New variable.
(sparc32nbsd_sigtramp_frame_sniffer): New function.
(sparcnbsd_get_longjmp_target_32,
sparcnbsd_get_longjmp_target_64): Remove functions.
(sparcnbsd_aout_in_solib_call_trampoline): Rewrite.
(sparcnbsd_init_abi_common, sparcnbsd_init_aout,
sparcnbsd_init_elf): Remove.
(sparcnbsd_init_abi, sparcnbsd_aout_init_abi)
(sparcnbsd_elf_init_abi): New functions.
(_initialize_sparcnbsd_tdep): New prototype.
(_initialize_sparnbsd_tdep): Update.
* config/sparc/fbsd.mh (NATDEPFILES): Remove sparcbsd-nat.o and
corelow.o.  Add sparc64-nat.o and sparc-nat.o.
* config/sparc/fbsd.mt (TDEPFILES): Add sparc-tdep.o and corelow.o.
* config/sparc/linux.mh: Update comment.
(XM_FILE, HOST_IPC): Remove variables.
(NATDEPFILES): Add sparc-sol2-nat.o and core-regset.o.  Remove
sparc-linux-nat.o.
* config/sparc/linux.mt: Update comment.
(TDEPFILES): Add sparc-sol2-tdep.o and sparc-linux-tdep.o.
* config/sparc/nbsd.mt: Reformat.
* config/sparc/nbsd64.mh: Update comment.
(NATDEPFILES): Add sparc-nat.o.
* config/sparc/nbsd64.mt: Update comment.
(TDEPFILES): Add sparc64-tdep.o and sparc64nbsd-tdep.o.
(TM_FILE): Set to tm-nbsd.h.
* config/sparc/nbsdelf.mh: Update comment.
(NATDEPFILES): Add sparc-nat.o.
(XM_FILE): Delete.
* config/sparc/nbsdaout.mh: Update comment.
(NATDEPFILES): Add sparc-nat.o
(XM_FILE): Delete.
* config/sparc/nm-linux.h: Update copyright year.  Don't include
"config/nm-svr4.h" and "solib.h".  Add protection against multiple
inclusion.
(KERNEL_U_SIZE): Remove define.
(kernel_u_size): Remove prototype.
(PTRACE_ARG3_TYPE, PTRACE_XFER_TYPE): Define.
* config/sparc/nm-nbsd.h: Update copyright.  Don't include
"regcache.h".
(CHILD_PREPARE_TO_STORE): Remove define.
* config/sparc/nm-nbsdaout.h: Tweak some comments.
* sparc-nat.c, sparc-tdep.c, sparc-tdep.h, sparc64nbsd-nat.c,
sparcnbsd-nat.c: Rewrite files.
* config/sparc/tm-linux.h, config/sparc/tm-nbsd.h: Rewrite files.
* sparc-linux-nat.c, sparcbsd-nat.c, sparcbsd-nat.h,
sparcnbsd-tdep.h: Remove files.
* config/sparc/nm-sparclynx.h, config/sparc/nm-sun4os4.h,
config/sparc/nm-sun4sol2.h, config/sparc/sp64.mt,
config/sparc/sp64linux.mt, config/sparc/sp64sol2.mt,
config/sparc/sparc-em.mt, config/sparc/sparclynx.mh,
config/sparc/sparclynx.mt, config/sparc/sun4os4.mh,
config/sparc/sun4os4.mt, config/sparc/sun4sol2.mh,
config/sparc/sun4sol2.mt, config/sparc/tm-sp64.h,
config/sparc/tm-sp64linux.h, config/sparc/tm-sparc.h,
config/sparc/tm-sparclynx.h, config/sparc/tm-spc-em.h,
config/sparc/tm-sun4os4.h, config/sparc/tm-sun4sol2.h,
config/sparc/tm-vxsparc.h, config/sparc/vxsparc.mt,
config/sparc/xm-linux.h, config/sparc/xm-sun4sol2.h: Remove files.
* sparc-linux-tdep.c, sparc-nat.h, sparc-sol2-nat.c,
sparc-sol2-tdep.c, sparc64-linux-nat.c, sparc64-linux-t dep.c,
sparc64-nat.c, sparc64-sol2-tdep.c, sparc64nbsd-tdep.c: New files.
* config/sparc/linux64.mh, config/sparc/linux64.mt,
config/sparc/nm-sol2.h, config/sparc/sol2-64.mt,
config/sparc/sol2.mh, config/sparc/sol2.mt, config/sparc/sparc.mt,
config/sparc/sparc64.mt, config/sparc/tm-sol2.h: New files.
@
text
@d1269 1
a1269 1
	core-sol2.c core-regset.c core-aout.c corelow.c \
a1670 2
core-sol2.o: core-sol2.c $(defs_h) $(gdb_string_h) $(regcache_h) \
	$(inferior_h) $(target_h) $(command_h) $(gdbcore_h) $(gregset_h)
@


1.474
log
@2003-12-18  Michael Chastain  <mec.gnu@@mindspring.com>

	* hppam3-nat.c: Delete obsolete file.
	* hppab-nat.c: Delete obsolete file.
	* Makefile.in: Remove references.
@
text
@d758 2
a760 3
sparcbsd_nat_h = sparcbsd-nat.h
sparcnbsd_tdep_h = sparcnbsd-tdep.h
sparc_tdep_h = sparc-tdep.h
a1115 1
tm-sun4os4.h: tm-sparc.h
d1308 8
a1315 4
	solib.c solib-irix.c solib-svr4.c solib-sunos.c sparc-linux-nat.c \
	sparc-nat.c \
	sparc64nbsd-nat.c sparcnbsd-nat.c sparcnbsd-tdep.c \
	sparc-tdep.c sparcl-tdep.c sun3-nat.c \
d2330 26
a2355 6
sparc64fbsd-nat.o: sparc64fbsd-nat.c $(defs_h) $(sparc64_tdep_h) \
	$(sparcbsd_nat_h)
sparc64fbsd-tdep.o: sparc64fbsd-tdep.c $(defs_h) $(gdbcore_h) $(osabi_h) \
	$(regcache_h) $(target_h) $(gdb_string_h) $(sparc64_tdep_h)
sparc64nbsd-nat.o: sparc64nbsd-nat.c $(defs_h) $(inferior_h) $(regcache_h) \
	$(sparc_tdep_h) $(sparcnbsd_tdep_h)
d2358 19
a2376 13
	$(gdbtypes_h) $(osabi_h) $(regcache_h) $(target_h) $(value_h) \
	$(gdb_assert_h) $(gdb_string_h) $(sparc64_tdep_h)
sparcbsd-nat.o: sparcbsd-nat.c $(defs_h) $(inferior_h) $(regcache_h) \
	$(sparc64_tdep_h) $(sparcbsd_nat_h)
sparc-linux-nat.o: sparc-linux-nat.c $(defs_h) $(regcache_h) $(sparc_tdep_h) \
	$(gregset_h)
sparc-nat.o: sparc-nat.c $(defs_h) $(inferior_h) $(target_h) $(gdbcore_h) \
	$(regcache_h) $(sparc_tdep_h) $(gdb_wait_h)
sparcnbsd-nat.o: sparcnbsd-nat.c $(defs_h) $(inferior_h) $(regcache_h) \
	$(sparc_tdep_h) $(sparcnbsd_tdep_h)
sparcnbsd-tdep.o: sparcnbsd-tdep.c $(defs_h) $(gdbcore_h) $(regcache_h) \
	$(target_h) $(value_h) $(osabi_h) $(gdb_string_h) $(sparc_tdep_h) \
	$(sparcnbsd_tdep_h) $(nbsd_tdep_h) $(solib_svr4_h)
d2378 1
a2378 4
sparc-tdep.o: sparc-tdep.c $(defs_h) $(arch_utils_h) $(frame_h) \
	$(inferior_h) $(target_h) $(value_h) $(bfd_h) $(gdb_string_h) \
	$(regcache_h) $(osabi_h) $(dis_asm_h) $(sparc_tdep_h) $(gregset_h) \
	$(gdbcore_h) $(gdb_assert_h) $(symfile_h)
@


1.473
log
@2003-11-25  Andrew Cagney  <cagney@@redhat.com>

	* infrun.c: Don't include "exec.h".
	(handle_inferior_event): Pass current_target, instead of exec_ops,
	to SOLIB_ADD.  Add comments.
	* Makefile.in (infrun.o): Update dependencies.
@
text
@d1276 1
a1276 1
	hppab-nat.c hppah-nat.c hpread.c \
a1829 1
hppab-nat.o: hppab-nat.c $(defs_h) $(inferior_h) $(target_h) $(regcache_h)
a1833 2
hppam3-nat.o: hppam3-nat.c $(defs_h) $(inferior_h) $(floatformat_h) \
	$(regcache_h)
@


1.472
log
@2003-11-23  Andrew Cagney  <cagney@@redhat.com>

	* Makefile.in (infrun.o): Update dependencies.
	* infrun.c: Include "exec.h".
	(handle_inferior_event): Pass exec_ops to SOLIB_ADD.
@
text
@d1939 1
a1939 1
	$(observer_h) $(language_h) $(exec_h)
@


1.471
log
@2003-11-16  Andrew Cagney  <cagney@@redhat.com>

	* mips-tdep.c (struct gdbarch_tdep): Add field "regnum".
	(mips_fpa0_regnum, mips_regnum): New function.
	(mips_gdbarch_init): Fill in the "regnum" fields.
	* mips-tdep.h (struct mips_regnum): Define.
	(mips_regnum): Declare.
	* config/mips/tm-mips.h (BADVADDR_REGNUM): Delete macro.
	(LO_REGNUM, HI_REGNUM, BADVADDR_REGNUM): Ditto.
	(CAUSE_REGNUM, PC_REGNUM, FP0_REGNUM): Ditto.
	(FCRCS_REGNUM, FCRIR_REGNUM, FPA0_REGNUM): Ditto.
	* config/mips/tm-irix6.h (FP0_REGNUM): Delete macro.
	(PC_REGNUM, CAUSE_REGNUM, BADVADDR_REGNUM): Ditto.
	(HI_REGNUM, LO_REGNUM, FCRCS_REGNUM, FCRIR_REGNUM): Ditto.
	* config/mips/tm-irix5.h (FP0_REGNUM): Delete macro.
	(PC_REGNUM, CAUSE_REGNUM, BADVADDR_REGNUM): Ditto.
	(HI_REGNUM, LO_REGNUM, FCRCS_REGNUM, FCRIR_REGNUM): Ditto.
	* remote-mips.c: Include "mips-tdep.h".  Update.
	* mipsnbsd-tdep.c: Update.
	* mipsv4-nat.c: Update.
	* mips-tdep.c: Update.
	* mips-nat.c: Update.
	* mips-linux-tdep.c: Update.
	* mips-linux-nat.c: Update.
	* irix5-nat.c: Update.
	* dve3900-rom.c: Include "mips-tdep.h".  Update.
	(ignore_packet): Supress GCC warning.
	* config/mips/nm-riscos.h: Update.
	* Makefile.in (dve3900-rom.o, remote-mips.o): Update dependencies.
@
text
@d1939 1
a1939 1
	$(observer_h) $(language_h)
@


1.470
log
@
2003-11-14  Jeff Johnston  <jjohnstn@@redhat.com>

        * libunwind-frame.c: New file.
        * libunwind-frame.h: New file.
        * acconfig.h (HAVE_LIBUNWIND): #undef reference added.
        * configure.in: Add --with-libunwind option support.  Define
        HAVE_LIBUNWIND if libunwind support selected / defaulted.
        Also check for libunwind.h and libunwind-ia64.h headers.
        * configure: Regenerated.
        * Makefile.in: Add support for libunwind-frame.o.
        * config.in: Regenerated.
@
text
@d1729 2
a1730 1
	$(serial_h) $(inferior_h) $(command_h) $(gdb_string_h) $(regcache_h)
d2198 1
a2198 1
	$(gdb_string_h) $(gdb_stat_h) $(regcache_h)
@


1.469
log
@* glibc-tdep.c, glibc-tdep.h: New files.
* config/arm/linux.mt (TDEPFILES): Add glibc-tdep.o
* config/i386/linux.mt (TDEPFILES): Likewise.
* i386-linux-tdep.c (glibc-tdep.h): Include.
(find_minsym_and_objfile, skip_hurd_resolver): Delete.
(i386_linux_skip_solib_resolver): Call glibc_skip_solib_resolver.
* arm-linux-tdep.c (glibc-tdep.h): Include.
(find_minsym_and_objfile, skip_hurd_resolver): Delete.
(arm_linux_skip_solib_resolver): Call glibc_skip_solib_resolver.
* Makefile.in (ALLDEPFILES): Add glibc-tdep.c
(glibc_tdep_h): Define.
(glibc-tdep.o): Add dependencies.
(arm-linux-tdep.o): Update dependencies.
(i386-linux-tdep.o): Likewise.
@
text
@d711 1
d1285 1
d1917 1
a1917 1
	$(elf_bfd_h) $(dis_asm_h)
d1965 4
@


1.468
log
@
	* bcache.c: Include "gdb_assert.h".
	(struct bcache): Add fields "expand_count" and
	"expand_hash_count".
	(expand_hash_table): Update the expand counts.
	(print_bcache_statistics): Use XCALLOC, not alloca.  Print stats
	on object sizes and hashes.
	* Makefile.in (bcache.o): Update dependencies.
@
text
@d695 1
d1272 1
d1587 1
a1587 1
	$(gdb_string_h) $(regcache_h) $(arm_tdep_h) $(gregset_h)
d1873 1
a1873 1
	$(i386_linux_tdep_h)
d2422 2
@


1.467
log
@	* frv-tdep.c (gdb_assert.h, sim-regno.h, gdb/sim-frv.h)
	(opcodes/frv-desc.h): Include.
	(iacc0h_regnum, iacc0l_regnum): Define.
	(last_spr_regnum, frv_num_regs): Update.
	(new_variant): Don't supply default names for holes in the SPRs.
	Supply names for iacc0h_regnum and iacc0l_regnum.
	(frv_register_type): Use symbolic constants first_fpr_regnum and
	last_fpr_regnum instead of hardcoded constants 64 and 127.  Use
	builtin_type_int instead of builtin_type_int32.
	(frv_register_sim_regno): New function.
	(frv_gdbarch_init): Call set_gdbarch_register_sim_regno().
	* Makefile.in (gdb_sim_frv_h): Define.
	(frv-tdep.o): Update dependencies.
@
text
@d1609 2
a1610 1
bcache.o: bcache.c $(defs_h) $(gdb_obstack_h) $(bcache_h) $(gdb_string_h)
@


1.466
log
@2003-10-31  Andrew Cagney  <cagney@@redhat.com>

	* solib-svr4.c: Update copyright.  Include "bfd-target.h" and
	"exec.h".
	(exec_entry_point): New function.
	(enable_break): Create a "tmp_bfd_target", use that and
	entry_point_address when computing the relocation offset.
	(svr4_relocate_main_executable): Ditto with exec_bfd and exec_ops.
	* Makefile.in (solib-svr4.o): Update dependencies.
@
text
@d593 1
d597 1
d1785 2
a1786 1
	$(frame_unwind_h) $(frame_base_h) $(trad_frame_h) $(dis_asm_h)
@


1.465
log
@2003-10-31  Andrew Cagney  <cagney@@redhat.com>

	* defs.h (XZALLOC): Define.
	* target.h (struct target_ops): Add "to_data";
	* bfd-target.h, bfd-target.c: New files.
	* Makefile.in (SFILES): Add "bfd-target.c".
	(COMMON_OBS): Add "bfd-target.o".
	(bfd-target.o): Specify dependencies.
	(bfd_target_h): Define.
	* defs.h (XZALLOC): Define.
@
text
@d2301 2
a2302 1
	$(gdbcore_h) $(target_h) $(inferior_h) $(solist_h) $(solib_svr4_h)
@


1.464
log
@2003-10-31  Andrew Cagney  <cagney@@redhat.com>

	* rs6000-tdep.c (rs6000_gdbarch_init): For 64-bit ABI, set
	adjust_breakpoint_address.
	* Makefile.in (ppc-sysv-tdep.o): Add $(target_h).
	* ppc-tdep.h (ppc64_sysv_abi_adjust_breakpoint_address): Declare.
	* ppc-sysv-tdep.c: Include "target.h".  Update copyright.
	(ppc64_sysv_abi_adjust_breakpoint_address): New function.
@
text
@d514 3
a516 1
	bcache.c block.c blockframe.c breakpoint.c buildsym.c \
d639 1
d873 3
a875 1
COMMON_OBS = version.o blockframe.o breakpoint.o findvar.o regcache.o \
d1608 2
@


1.463
log
@2003-10-24  Andrew Cagney  <cagney@@redhat.com>

	* target.c: Include "gdbcore.h".
	(get_target_memory, get_target_memory_unsigned): New functions.
	* target.h (get_target_memory, get_target_memory_unsigned): Declare.
	* ppc-linux-tdep.c (ppc64_linux_convert_from_func_ptr_addr):
	Use get_target_memory_unsigned.
	* Makefile.in (target.o): Update dependencies.
@
text
@d2129 2
a2130 1
	$(regcache_h) $(value_h) $(gdb_string_h) $(gdb_assert_h) $(ppc_tdep_h)
@


1.462
log
@2003-10-23  Andrew Cagney  <cagney@@redhat.com>

	* Makefile.in (stack.o): Add $(regcache_h).
	* stack.c: Include "regcache.h"
	(return_command): Rewrite.  Use get_frame_id and
	get_selected_frame.  Eliminate "deprecated_selected_frame".  Warn
	about unhandled return-values.
	* value.h (set_return_value): Delete declaration.
	* values.c (set_return_value): Delete function.
@
text
@d2370 2
a2371 1
	$(gdb_wait_h) $(dcache_h) $(regcache_h) $(gdb_assert_h)
@


1.461
log
@2003-10-22  Andrew Cagney  <cagney@@redhat.com>

	* exec.h: New file.
	* win32-nat.c: Include "exec.h".
	* solib.c: Include "exec.h".
	* target.h (build_section_table): Delete declaration.
	* somsolib.c: Include "exec.h".
	(exec_ops): Delete extern declaration.
	* rs6000-nat.c: Update copyright.  Include "exec.h".
	(exec_ops): Delete extern declaration.
	* pa64solib.c: Update copyright.  Include "exec.h".
	(exec_ops): Delete extern declaration.
	* exec.c: Update copyright.  Include "exec.h".
	* corelow.c: Update dependencies.  Include "exec.h".
	* Makefile.in (exec_h): Define.
	(exec.o, somsolib.o): Update dependencies.
	(pa64solib.o, corelow.o): Update dependencies.
@
text
@d2344 1
a2344 1
	$(gdb_assert_h) $(dictionary_h) $(reggroups_h)
@


1.460
log
@2003-10-22  Andrew Cagney  <cagney@@redhat.com>

	* target.c: Include "gdb_assert.h" (target_read): Call
	"target_read_partial", not "target_write_partial".
	(default_read_partial, default_write_partial): New function.
	(target_read_partial, target_write_partial): Simplify, assume that
	there is always a read/write method.
	(update_current_target, add_target): Always set "to_read_partial"
	and "to_write_partial".
	(target_write, target_read): Fail on a zero byte transfer.
	* Makefile.in (target.o): Update dependencies.
	* target.h: Update copyright date.
	(target_object): Fix typo.
@
text
@d665 1
d1652 1
a1652 1
	$(gdbthread_h) $(regcache_h) $(symfile_h)
d1749 2
a1750 1
	$(gdb_string_h) $(gdbcore_h) $(gdb_stat_h) $(xcoffsolib_h)
d2102 1
a2102 1
	$(regcache_h)
d2282 1
a2282 1
	$(completer_h) $(filenames_h) $(solist_h)
d2303 1
a2303 1
	$(regcache_h) $(gdb_assert_h)
d2437 1
a2437 1
	$(gdb_string_h) $(gdbthread_h) $(gdbcmd_h)
@


1.459
log
@2003-10-22  Andrew Cagney  <cagney@@redhat.com>

	* gdbarch.sh (convert_from_func_ptr_addr): Convert to a pure
	multi-arch method, add "targ" parameter.
	(struct target_ops): Declare.
	* gdbarch.h, gdbarch.c: Re-generate.
	* Makefile.in (c-valprint.o): Update dependencies.
	* arch-utils.h: Update copyright.
	(convert_from_func_ptr_addr_identity): Declare.
	* arch-utils.c (convert_from_func_ptr_addr_identity): New function.
	* ia64-tdep.c (ia64_convert_from_func_ptr_addr): Update.
	* rs6000-tdep.c (rs6000_convert_from_func_ptr_addr): Upate.
	* ppc-linux-tdep.c (ppc64_linux_convert_from_func_ptr_addr): Update.
	* infcall.c (find_function_addr, call_function_by_hand): Update.
	* c-valprint.c: Include "target.h".
	(print_function_pointer_address): Update.
@
text
@d2368 1
a2368 1
	$(gdb_wait_h) $(dcache_h) $(regcache_h)
@


1.458
log
@Add NetBSD/amd64 native configuration:
* x86-64-tdep.h (amd64nbsd_r_reg_offset): Add extern declarations.
* amd64nbsd-tdep.c: New file.
* amd64nbsd-nat.c: New file.
* amd64bsd-nat.c: New file.
* config/i386/nbsd64.mh: New file.
* config/i386/nbsd64.mt: New file.
* configure.host: Add x86_64-*-netbsd*.
* configure.tgt: Add x86_64-*-netbsd*.
* Makefile.in (amd64bsd-nat.o, amd64nbsd-nat.o, amd64nbsd-tdep.o):
New targets.
* NEWS (New native configurations): Mention NetBSD/amd64.
@
text
@d1679 2
a1680 2
	$(gdbtypes_h) $(expression_h) $(value_h) $(valprint_h) $(language_h) \
	$(c_lang_h) $(cp_abi_h)
@


1.457
log
@2003-10-16  Kei Sakamoto  <sakamoto.kei@@renesas.com>

	* remote-m32r-sdi.c : New file, interface to m32r on-chip
	debug interface, SDI (Scalable Debug Interface).
	* NEWS: Mention m32r SDI protocol was supported.
	* Makefile.in (remote-m32r-sdi.o): Add build rule.
	* config/m32r/m32r.mt (TDEPFILES) : Add remote-m32r-sdi.o.
@
text
@d1557 2
d1561 2
d1565 3
@


1.456
log
@* i386fbsd-tdep.c: New file.
(i386fbsd_sigtramp_start, i386fbsd_sigtramp_end,
i386fbsd_sc_reg_offset, i386fbsdaout_init_abi, i386fbsd_init_abi,
i386fbsd4_sc_reg_offset, i386fbsd4_init_abi): Move here from
i386bsd-tdep.c.
(_initialize_i386fbsd_tdep): New function.
(i386fbsd_r_reg_offset, i386fbsd4_r_reg_offset): New varibles.
(i386fbsdaout_init_abi): Initialize TDEP->gregset_reg_offset,
TDEP->gregset_num_regs, TDEP->sizeof_gregset and
TDEP->sizeof_fpregset.  Use ARRAY_SIZE to initialize
TDEP->sc_num_regs.
(i386fbsd4_init_abi): Initialize TDEP->gregset_reg_offset,
TDEP->gregset_num_regs and TDEP->sizeof_gregset.  Use ARRAY_SIZE
to initialize TDEP->sc_num_regs.
* i386bsd-tdep.c (i386fbsd_sigtramp_start, i386fbsd_sigtramp_end,
i386fbsd_sc_reg_offset, i386fbsdaout_init_abi, i386fbsd_init_abi,
i386fbsd4_sc_reg_offset, i386fbsd4_init_abi): Remove.
(_initialize_i386bsd_tdep): Don't register FreeBSD a.out and
FreeBSD ELF OS/ABI's here.
* Makefile.in (ALLDEPFILES): Add i386fbsd-tdep.c.
(i386fbsd-tdep.o): New target.
* config/i386/fbsd.mt (TDEPFILES): Add i386fbsd-tdep.o.
* config/i386/fbsd64.mt (TDEPFILES):  Add i386fbsd-tdep.o.
@
text
@d1290 1
a1290 1
	remote-hms.c remote-mips.c \
d2164 2
@


1.455
log
@2003-10-10  Andrew Cagney  <cagney@@redhat.com>

	* Makefile.in (ppc-sysv-tdep.o): Add $(gdb_assert_h).
	* rs6000-tdep.c (rs6000_gdbarch_init): When 64 bit SysV ABI, set
	push_dummy_call to ppc64_sysv_abi_push_dummy_call.
	* ppc-sysv-tdep.c: Include "gdb_assert.h".
	(ppc64_sysv_abi_push_dummy_call): New function.
	(ppc64_sysv_abi_broken_push_dummy_call): New function.
	* ppc-tdep.h (ppc64_sysv_abi_push_dummy_call): Declare.
	(ppc64_sysv_abi_broken_push_dummy_call): Declare.
@
text
@d1268 1
a1268 1
	i386bsd-nat.c i386bsd-tdep.c i386fbsd-nat.c \
d1832 2
@


1.454
log
@2003-10-08  Kei Sakamoto  <sakamoto.kei@@renesas.com>

	* m32r-tdep.c : Include "dis-asm.h".
	* Makefile.in (m32r-tdep.o): Update dependencies.
@
text
@d2118 1
a2118 1
	$(regcache_h) $(value_h) $(gdb_string_h) $(ppc_tdep_h)
@


1.453
log
@        * completer.h (get_gdb_completer_word_break_characters): Delete.
        * completer.c: include language.h.
        (gdb_completer_word_break_characters): Delete.
        (get_gdb_completer_word_break_characters): Delete.
        (location_completer): Use the word break characters of the current
        language.
        (complete_line): Likewise.
        (line_completion_function): Likewise.
        (skip_quoted_chars): Likewise.
        * Makefile.in (completer.o): Add dependency on language.h.
        * top.c (init_main): Set the readline word break characters
        to GDB's default word break characters.
@
text
@d1968 1
a1968 1
	$(gdb_assert_h)
@


1.452
log
@2003-10-06  Andrew Cagney  <cagney@@redhat.com>

	* Makefile.in (ALLDEPFILES): Remove "z8k-tdep.c" and
	"h8500-tdep.c".
	(z8k-tdep.o): Delete custom build rule.
@
text
@d1634 2
a1635 1
	$(filenames_h) $(cli_decode_h) $(gdbcmd_h) $(completer_h)
@


1.451
log
@2003-10-06  Andrew Cagney  <cagney@@redhat.com>

	* Makefile.in: Update all dependencies.
@
text
@d1263 1
a1263 1
	go32-nat.c h8300-tdep.c h8500-tdep.c \
d1307 1
a1307 2
	xstormy16-tdep.c \
	z8k-tdep.c
a1363 7

# FIXME: z8k-tdep.c calls _initialize_gdbtypes().  Since that isn't
# declared -Wimplicit fails. It should be using the GDBARCH framework.
# cagney 1999-09-02.
z8k-tdep.o: $(srcdir)/z8k-tdep.c
	$(CC) -c $(INTERNAL_WARN_CFLAGS) $(NO_WERROR_CFLAGS) \
		$(srcdir)/z8k-tdep.c
@


1.450
log
@* regset.h: New file.
* Makefile.in (regset_h): Add.
@
text
@d1574 3
a1576 3
arch-utils.o: arch-utils.c $(defs_h) $(arch_utils_h) $(gdbcmd_h) \
	$(inferior_h) $(gdb_string_h) $(regcache_h) $(gdb_assert_h) \
	$(sim_regno_h) $(version_h) $(floatformat_h)
d1693 1
a1693 1
	$(cp_abi_h) $(aout_aout64_h) $(aout_stab_gnu_h) $(gdb_assert_h)
d1781 3
a1783 2
gcore.o: gcore.c $(defs_h) $(cli_decode_h) $(inferior_h) $(gdbcore_h) \
	$(elf_bfd_h) $(symfile_h) $(objfiles_h) $(infcall_h)
a1809 1
# OBSOLETE h8500-tdep.o: h8500-tdep.c
d1821 1
a1821 1
	$(gdb_assert_h) $(infttrace_h) $(symtab_h) $(infcall_h) \
d1823 1
a1823 2
	$(gdbcmd_h) $(target_h) $(symfile_h) $(objfiles_h) $(hppa_tdep_h) \
	$(dis_asm_h)
d1876 3
a1878 3
	$(reggroups_h) $(symfile_h) $(symtab_h) $(target_h) $(value_h) \
	$(dis_asm_h) $(gdb_assert_h) $(gdb_string_h) $(i386_tdep_h) \
	$(i387_tdep_h)
a1927 2
irix4-nat.o: irix4-nat.c $(defs_h) $(inferior_h) $(gdbcore_h) $(regcache_h) \
	$(gregset_h)
a1975 1
# OBSOLETE m3-nat.o: m3-nat.c
d1995 4
a1998 3
	$(frame_base_h) $(frame_unwind_h) $(symtab_h) $(gdbcore_h) $(value_h) \
	$(gdb_string_h) $(gdb_assert_h) $(inferior_h) $(regcache_h) \
	$(arch_utils_h) $(osabi_h) $(dis_asm_h) $(m68k_tdep_h) $(gregset_h)
a2035 1
# OBSOLETE mipsm3-nat.o: mipsm3-nat.c
a2053 1
# OBSOLETE mn10200-tdep.o: mn10200-tdep.c
d2252 5
d2263 6
a2268 10
sh-tdep.o: sh-tdep.c $(defs_h) $(frame_h) $(symtab_h) $(symfile_h) \
	$(gdbtypes_h) $(gdbcmd_h) $(gdbcore_h) $(value_h) $(dis_asm_h) \
	$(inferior_h) $(gdb_string_h) $(arch_utils_h) $(floatformat_h) \
	$(regcache_h) $(doublest_h) $(osabi_h) $(sh_tdep_h) $(elf_bfd_h) \
	$(solib_svr4_h) $(elf_sh_h) $(gdb_sim_sh_h)
sh64-tdep.o: sh64-tdep.c $(defs_h) $(frame_h) $(symtab_h) $(symfile_h) \
	$(gdbtypes_h) $(gdbcmd_h) $(gdbcore_h) $(value_h) $(dis_asm_h) \
	$(inferior_h) $(gdb_string_h) $(arch_utils_h) $(floatformat_h) \
	$(regcache_h) $(doublest_h) $(osabi_h) $(elf_bfd_h) \
	$(solib_svr4_h) $(elf_sh_h) $(gdb_sim_sh_h)
d2290 1
a2290 1
	$(symfile_h) $(gregset_h)
a2314 2
# OBSOLETE sparclet-rom.o: sparclet-rom.c
# OBSOLETE sparclet-stub.o: sparclet-stub.c
a2316 2
# OBSOLETE sparcl-stub.o: sparcl-stub.c
# OBSOLETE sparcl-tdep.o: sparcl-tdep.c
a2355 2
# OBSOLETE symm-nat.o: symm-nat.c
# OBSOLETE symm-tdep.o: symm-tdep.c
d2428 3
a2430 3
win32-nat.o: win32-nat.c $(defs_h) $(tm_h) $(frame_h) $(inferior_h) \
	$(target_h) $(gdbcore_h) $(command_h) $(completer_h) $(regcache_h) \
	$(top_h) $(i386_tdep_h) $(buildsym_h) $(symfile_h) $(objfiles_h) \
d2448 2
a2449 1
	$(symfile_h) $(gdb_assert_h) $(x86_64_tdep_h) $(i387_tdep_h)
a2460 1
# OBSOLETE z8k-tdep.o: z8k-tdep.c
@


1.449
log
@2003-09-25  David Carlton  <carlton@@kealia.com>

	* c-exp.y: Include cp-support.h.  Add qualified_type.
	(yylex): Delete nested type hack; add comments.
	* cp-namespace.c (cp_lookup_nested_type): New function.
	* cp-support.h: Declare cp_lookup_nested_type.
	* eval.c (evaluate_subexp_standard): Call value_aggregate_elt
	instead of value_struct_elt_for_reference.
	* valops.c: Include cp-support.h.
	(value_aggregate_elt): New function.
	(value_namespace_elt): Ditto.
	(value_struct_elt_for_reference): Make static.
	* value.h: Delete declaration of value_struct_elt_for_reference;
	add declaration for value_aggregate_elt.
	* Makefile.in (c-exp.tab.o): Depend on $(cp_support_h).
	(valops.o): Ditto.

2003-09-25  David Carlton  <carlton@@kealia.com>

	* gdb.cp/namespace.exp: Tweak comments.  Add non-quoted versions
	of some print tests, where appropriate.  Add tests for C::D::cd,
	E::ce, F::cXfX, G::XgX.
	* gdb.cp/namespace.cc: Add XgX, cXfX, ce.
@
text
@d733 1
@


1.448
log
@	* stack.c: Include "reggroups.h".
	(frame_info): Only display registers in all_reggroup.
	* Makefile.in (stack.o): Update dependencies.
@
text
@d1415 1
a1415 1
	$(symfile_h) $(objfiles_h) $(charset_h) $(block_h)
d2421 2
a2422 1
	$(dictionary_h) $(cp_support_h) $(gdb_string_h) $(gdb_assert_h)
@


1.447
log
@	* m68k-tdep.c: Include "dwarf2-frame.h".
	(m68k_gdbarch_init): Add the DWARF CFI frame unwinder.
	* Makefile.in (m68k-tdep.o): Update dependencies.
@
text
@d2345 1
a2345 1
	$(gdb_assert_h) $(dictionary_h)
@


1.446
log
@* parser-defs.h (struct exp_descriptor): New definition, containing
language-specific info for printing, prefixifying, dumping, and
evaluating expressions.
(exp_descriptor_standard): Declare new variable.
(print_subexp): Make global and declare here (from expprint.c).
(dump_subexp): Ditto.
(dump_subexp_body_standard): Declare.
(operator_length_standard): Declare.
(op_name_standard): Declare.
(print_subexp): Declare.
(print_subexp_standard): Declare.

* language.h (struct language_defn): Add la_exp_desc field to hold
pointer to table for language-specific operators.
Remove evaluate_exp field, which is now in struct exp_descriptor.

* parse.c (operator_length): Move most code to new
operator_length_standard function.  Use language-specific information.
(operator_length_standard): New function taking most code from
operator_length.
(exp_descriptor_standard): New constant.

* expression.h (enum exp_opcode): Add definitions of OP_EXTENDED0
and OP_EXTENDED_LAST.

* expprint.c (print_subexp): Use language-specific print_subexp.
Make global; remove static declaration.
Move most code to print_subexp_standard.
(print_subexp_standard): New function, containing code formerly in
print_subexp.
(op_name): Add expression to argument signature.
Use langauge-specific op_name.
Move most code to op_name_standard.
(op_name_standard): New function, containing code formerly in op_name.
(dump_subexp): 	Use new version of op_name function.
Use language-specific dump_subexp_body, and move most existing code to
dump_subexp_body_standard.
(dump_raw_expression): Use new op_name interface.
(dump_subexp_body): Move most code to dump_subexp_body_standard.
(dump_subexp_body_standard): New function, containing code formerly
in dump_subexp_body.

* language.c (unknown_language): Add default la_exp_desc field and
remove evaluate_exp field.
(auto_language): Ditto.
(local_language): Ditto.
* f-lang.c (f_language_defn): Ditto.
* c-lang.c (c_language_defn): Ditto.
(cplus_language_defn): Ditto.
(asm_language_defn): Ditto.
(minimal_language_defn): Ditto.
* p-lang.c (pascal_language_defn): Ditto.
* m2-lang.c (m2_language_defn): Ditto.
* objc-lang.c (objc_language_defn): Ditto.

* jv-lang.c (exp_descriptor_java): New variable, containing
Java-specific expression evaluator.
(java_language_defn): Add la_exp_desc field and remove evaluate_exp
field.
* scm-lang.c (exp_descriptor_scm): New variable, containing
Scheme-specific expression evaluator.
(scm_language_defn): Add la_exp_desc field and remove evaluate_exp
field.
* objc-lang.c (print_object_command): Take evaluate_exp from the
la_exp_desc field.

* Makefile.in (eval.o): Add dependency on parser-defs.h.

* eval.c: Include parser-defs.h for the full declaration of
la_exp_desc's type.
(evaluate_subexp): Get evaluate_exp out of la_exp_desc field.
@
text
@d1997 2
a1998 2
m68k-tdep.o: m68k-tdep.c $(defs_h) $(frame_h) $(frame_base_h) \
	$(frame_unwind_h) $(symtab_h) $(gdbcore_h) $(value_h) \
@


1.445
log
@* Makefile.in (dis_asm_h): Note that this #includes "bfd.h".
@
text
@d1738 2
a1739 1
	$(f_lang_h) $(cp_abi_h) $(infcall_h) $(objc_lang_h) $(block_h)
@


1.445.2.1
log
@New SPARC target.
* configure.tgt: Remove support for old SPARC targets.
* configure.tgt: Remove support for old SPARC hosts.
* Makefile.in: Remove support for old SPARC hosts and targets.
(sparc-tdep.o): Update dependencies.
(sparc-sol2-tdep.o, sparc-sol2-nat.o): New dependencies.
* sparc-tdep.c, sparc-tdep.h: New implementation.
* sparc-sol2-tdep.c, sparc-sol2-nat.c: New files.
* config/sparc/sparc.mt: New files.
* config/sparc/sol2.mt, config/sparc/sol2.mh: New files.
* config/sparc/tm-sol2.h: New file.
@
text
@d749 3
a752 1
sparc64_tdep_h = sparc64-tdep.h
d1297 4
a1300 6
	solib.c solib-irix.c solib-svr4.c solib-sunos.c \
	sparc-tdep.c sparc-sol2-tdep.c \
	sparc-sol2-nat.c sparcbsd-nat.c \
	sparc64-tdep.c sparc64fbsd-tdep.c \
	sparc64fbsd-nat.c \
	sun3-nat.c \
d2305 6
a2310 13
sparc-tdep.o: sparc-tdep.c $(defs_h) $(arch_utils_h) $(dis_asm_h) $(frame_h) \
	$(frame_base_h) $(frame_unwind_h) $(gdbcore_h) $(gdbtypes_h) \
	$(inferior_h) $(symtab_h) $(objfiles_h) $(osabi_h) $(regcache_h) \
	$(target_h) $(value_h) $(gdb_assert_h) $(gdb_string_h) \
	$(sparc_tdep_h)
sparc-sol2-tdep.o: sparc-sol2-tdep.c $(defs_h) $(frame_h) $(frame_base_h) \
	$(frame_unwind_h) $(gdbcore_h) $(symtab_h) $(objfiles_h) $(osabi_h) \
	$(regcache_h) $(target_h) $(trad_frame_h) $(gdb_assert_h) \
	$(gdb_string_h) $(sparc_tdep_h)
sparc-sol2-nat.o: sparc-sol2-nat.o $(defs_h) $(gregset_h) $(regcache_h) \
	$(sparc_tdep_h)
sparcbsd-nat.o: sparcbsd-nat.c $(defs_h) $(inferior_h) $(regcache_h) \
	$(sparc64_tdep_h) $(sparcbsd_nat_h)
d2315 15
a2329 4
sparc64fbsd-tdep.o: sparc64fbsd-tdep.c $(defs_h) $(gdbcore_h) $(osabi_h) \
	$(regcache_h) $(target_h) $(gdb_string_h) $(sparc64_tdep_h)
sparc64fbsd-nat.o: sparc64fbsd-nat.c $(defs_h) $(sparc64_tdep_h) \
	$(sparcbsd_nat_h)
d2331 4
@


1.445.2.2
log
@* Makefile.in (sparc-sol2-nat.o): Fix typo.
@
text
@d2314 1
a2314 1
sparc-sol2-nat.o: sparc-sol2-nat.c $(defs_h) $(gregset_h) $(regcache_h) \
@


1.445.2.3
log
@Integrate SPARC and UltraSPARC targets.
* sparc-tdep.h (struct sparc32_frame_cache): Add pc_regnum and
npc_regnum members.
* sparc-tdep.c (sparc_unwind_pc): Rename from sparc32_unwind_pc.
Get register numbers for %pc from `struct gdbarch_tdep' instead of
using 32-bit specific constants.
(sparc_software_single_step): Get register numbers from %pc and
%npc from `struct gdbarch_tdep'.
(sparc_write_pc): Rename from sparc32_write_pc.  Get register
numbers from %pc and %npc from `struct gdbarch_tdep'.
(sparc32_gdbarch_init): Initialize TDEP->pc_regnum,
TDEP->npc_regnum and TDEP->plt_entry_size.  Set write_pc to
sparc_write_pc, set unwind_pc to sparc_unwind_pc.
* sparc64-tdep.h: Fix typo in multiple inclusion guard.  Include
"sparc-tdep.h".
(enum sparc_regnum): Remove.
(sparc_supply_rwindow, sparc_fill_rwindow): Remove prototypes.
(sparc64_init_abi): New prototype.
* sparc64-tdep.c: Include "inferior.h" and "sparc-tdep.h".
(struct gdbarch_tdep): Remove definition.
(SPARC64_NUM_REGS, SPARC64_NUM_PSEUDO_REGS): Use ARRAY_SIZE.
(sparc_breakpoint_from_pc, sparc64_unwind_pc,
sparc_unwind_dummy_id, sparc_extract_struct_value_address,
sparc_analyze_control_transfer, sparc_software_single_step,
sparc64_gdbarch_init, sparc_supply_rwindow, sparc_fill_rwindow,
_initialize_sparc64_tdep): Remove functions.
(sparc64_init_abi): New function.
* sparc64fbsd-tdep.c (sparc64fbsd_supply_reg): Call
sparc_supply_rwindow with correct number of arguments.
(sparc64fbsd_init_abi): Call sparc64_init_abi.
* sparcbsd-nat.c (store_inferior_registers): Call
sparc_collect_rwindow instead sparc_fill_rwindow.
* config/sparc/fbsd.mt (TDEPFILES): Add sparc-tdep.o and corelow.o.
* config/sparc/fbsd.mh (NATDEPFILES): Remove corelow.o.
* Makefile.in (sparc64_tdep_h): Add dependency on sparc-tdep.h.
(sparc64-tdep.o): Update dependencies.
@
text
@d750 1
a750 1
sparc64_tdep_h = sparc64-tdep.h $(sparc_tdep_h)
d2320 2
a2321 3
	$(gdbtypes_h) $(inferior_h) $(osabi_h) $(regcache_h) $(target_h) \
	$(value_h) $(gdb_assert_h) $(gdb_string_h) $(sparc_tdep_h) \
	$(sparc64_tdep_h)
@


1.445.2.4
log
@* sparc-tdep.h (struct sparc_gregset): New.
(sparc_sol2_supply_gregset, sparc_sol2_collect_gregset,
sparc_sol2_supply_fpregset, sparc_sol2_collect_fpregset): Remove
prototypes.
(sparc_supply_gregset, sparc_collect_gregset,
sparc_supply_fpregset, sparc_collect_fpregset): New prototypes.
(sparc32_sunos4_gregset, sparc32_sol2_gregset): New extern
declarations.
(sparc32_sol2_init_abi): Rename from sparc_sol2_init_abi.
* sparc-tdep.c (sparc_supply_gregset, sparc_collect_gregset,
sparc_supply_fpregset, sparc_collect_fpregset): New function.
(sparc32_sunos4_gregset): New variable.
* sparc-sol2-tdep.c (sparc_sol2_R_PSR, sparc_sol2_R_PC,
sparc_sol2_R_nPC, sparc_sol2_R_Y, sparc_sol2_R_WIM,
sparc_sol2_R_TBR): Remove variables.
(sparc_sol2_supply_gregset, sparc_sol2_collect_gregset,
sparc_sol2_supply_fpregset, sparc_sol2_collect_fpregset): Remove
functions.
(sparc32_sol2_gregset): New variable.
(sparc32_sol2_sigtramp_frame_cache): Rename from
sparc_sol2_sigtramp_frame_cache.
(sparc32_sol2_sigtramp_frame_this_id): Rename from
sparc_sol2_sigtramp_frame_this_id.
(sparc32_sol2_sigtramp_frame_prev_register): Rename from
sparc_sol2_sigtramp_frame_prev_register.
(sparc32_sol2_sigtramp_frame_unwind): Rename from
sparc_sol2_sigtramp_frame_unwind.
(sparc32_sol2_sigtramp_frame_sniffer): Rename from
sparc_sol2_sigtramp_frame_sniffer.
(sparc32_sol2_init_abi): Rename from sparc_sol2_init_abi.
(_initialize_sparc_sol2_tdep): Update.
* sparc-linux-tdep.c: New file.
* sparc-nat.o: Replace with new file.
* sparc-linux-nat.c: Remove file.
* config/sparc/linux.mh (XM_FILE, HOST_IPC): Remove.
(NATDEPFILES): Add sparc-sol2-nat.o and core-regset.o.  Remove
sparc-linux-nat.o.
* config/sparc/linux.mt (TDEPFILES): Add sparc-sol2-tdep.o and
sparc-linux-tdep.o.
* config/sparc/nm-linux.h: Don't include "config/nm-svr4.h" and
"solib.h".  Add protection against multiple inclusion.
(KERNEL_U_SIZE): Don't define.
(kernel_u_size): Remove prototype.
* config/sparc/tm-linux.h: Replace with new file.
* configure.tgt: Add sparc-*-linux*.
* configure.host: Add sparc-*-linux*.
* Makefile.in (ALLDEPFILES): Add sparc-linux-tdep.c and
sparc-nat.c.
(sparc-nat.o, sparc-linux-tdep.o): New dependencies.
@
text
@d1296 2
a1297 2
	sparc-tdep.c sparc-linux-tdep.c sparc-sol2-tdep.c \
	sparc-nat.c sparc-sol2-nat.c sparcbsd-nat.c \
a2304 2
sparc-nat.o: sparc-nat.c $(defs_h) $(inferior_h) $(regcache_h) $(gdb_wait_h) \
	$(sparc_tdep_h)
a2309 4
sparc-linux-tdep.o: sparc-linux-tdep.c $(defs_h) $(gdbarch_h) $(osabi_h) \
	$(sparc_tdep_h)
sparc-sol2-nat.o: sparc-sol2-nat.c $(defs_h) $(gregset_h) $(regcache_h) \
	$(sparc_tdep_h)
d2314 2
@


1.445.2.5
log
@* sparc64-tdep.h (r_tstate_offset): New define.
(sparc64_supply_gregset, sparc64_collect_gregset,
sparc64_supply_fpregset, sparc64_collect_fpregset): New
prototypes.
(sparc64_sol2_gregset): New extern declaration.
(sparc64_sol2_init_abi): New prototype.
* sparc64-tdep.c: Include "symtab.h" and "objfiles.h".  Don't
include "sparc-tdep.h".
(X_RD, X_I): New macros.
(sparc64_analyze_prologue): Sync with implementation in
sparc-tdep.c.
(TSTATE_CWP, TSTATE_ICC, TSTATE_XCC): New macros.
(PSR_S, PSR_ICC, PSR_VERS, PSR_IMPL, PSR_V8PLUS, PSR_XCC): New
macros.
(sparc64_supply_gregset, sparc64_collect_gregset,
sparc64_supply_fpregset, sparc64_collect_fpregset): New functions.
* sparc64-nat.c: New file.
* sparc64-sol2-nat.c: New file.
* sparc64-sol2-tdep.c: New file.
* sparc64-linux-nat.c: New file.
* sparc64-linux-tdep.c: New file.
* Makefile.in (sparc_tdep_h): New variable.
(ALLDEPFILES): Add sparc64-sol2-tdep.c, sparc64-linux-tdep.c,
sparc64-nat.c sparc64-sol2-nat.c and sparc64-linux-nat.c
(sparc-nat.o, sparc-linux-tdep.o, sparc64-tdep.o): Update
dependencies.
(sparc64-nat.o, sparc64-linux-nat.o, sparc64-linux-tdep.o,
sparc64-sol2-nat.o, sparc64-sol2-tdep.o): New dependencies.
* configure.tgt: Add sparc64-*-linux*.
* configure.host: Add sparc64-*-linux*.
* config/sparc/linux64.mt: New file.
* config/sparc/linux64.mh: New file.
@
text
@a750 1
sparc_nat_h = sparc-nat.h
d1298 1
a1298 3
	sparc64-tdep.c sparc64-sol2-tdep.c sparc64-linux-tdep.c \
	sparc64fbsd-tdep.c \
	sparc64-nat.c sparc64-sol2-nat.c sparc64-linux-nat.c \
d2305 2
a2306 2
sparc-nat.o: sparc-nat.c $(defs_h) $(inferior_h) $(regcache_h) \
	$(gdb_string_h) $(gdb_wait_h) $(sparc_tdep_h) $(sparc_nat_h)
d2313 1
a2313 1
	$(solib_svr4_h) $(sparc_tdep_h)
a2321 2
sparc64-nat.o: sparc-nat.c $(defs_h) $(gdbarch_h) \
	$(sparc64_tdep_h) $(sparc_nat_h)
d2324 2
a2325 8
	$(gdbtypes_h) $(inferior_h) $(symtab_h) $(objfiles_h) $(osabi_h) \
	$(regcache_h) $(target_h) $(value_h) $(gdb_assert_h) $(gdb_string_h) \
	$(sparc64_tdep_h)
sparc64-linux-nat.o: sparc64-linux-nat.c $(defs_h) \
	$(sparc64_tdep_h) $(sparc_nat_h)
sparc64-linux-tdep.o: sparc64-linux-tdep.c $(defs_h) $(gdbarch_h) \
	$(osabi_h) $(solib_svr4_h) $(sparc64_tdep_h)
sparc64-sol2-nat.o: sparc64-sol2-nat.o $(defs_h) $(gregset_h) $(regcache_h) \
a2326 2
sparc64-sol2-tdep.c: sparc64-sol2-tdep.o $(defs_h) $(gdbarch_h) $(symtab_h) \
	$(objfiles_h) $(osabi_h) $(sparc64_tdep_h)
@


1.445.2.6
log
@* configure.host: Add sparc64-*-solaris2* and sparcv9-*-solaris2*.
* configure.tgt: Add sparc64-*-solaris2* and sparcv9-*-solaris2*.
* config/sparc/sol64.mh: New file.
* config/sparc/sol64.mt: New file.
* Makefile.in (sparc64-sol2-nat.o): Fix typo.
@
text
@d2336 1
a2336 1
sparc64-sol2-nat.o: sparc64-sol2-nat.c $(defs_h) $(gregset_h) $(regcache_h) \
d2338 1
a2338 1
sparc64-sol2-tdep.o: sparc64-sol2-tdep.c $(defs_h) $(gdbarch_h) $(symtab_h) \
@


1.445.2.7
log
@* sparcnbsd-tdep.c: Don't include "target.h", "value.h" and
"sparcnbsd-tdep.h".
(REG32_OFFSET_PSR, REG32_OFFSET_PC, REG32_OFFSET_NPC,
REG32_OFFSET_Y, REG32_OFFSET_GLOBAL, REG32_OFFSET_OUT,
REG64_OFFSET_TSTATE, REG64_OFFSET_PC, REG64_OFFSET_NPC,
REG64_OFFSET_Y, REG64_OFFSET_GLOBAL, REG64_OFFSET_OUT): Remove.
(sparcnbsd_supply_reg32, sparcnbsd_supply_reg64,
sparcnbsd_fill_reg32, sparcnbsd_fill_reg64,
sparcnbsd_supply_fpreg32, sparcnbsd_supply_fpreg64,
sparcnbsd_fill_reg32, sparcnbsd_fill_reg64): Remove.
(sparcnbsd_gregset): New variable.
(fetch_core_registers): Rewrite to call sparc32_supply_gregset and
sparc32_supply_fpregset.
(sparcnbsd_get_longjmp_target_32,
sparcnbsd_get_longjmp_target_64): Remove.
(sparcnbsd_init_abi_common, sparcnbsd_init_aout,
sparcnbsd_init_elf): Remove.
(sparcnbsd_init_abi, sparcnbsd_aout_init_abi,
sparcnbsd_elf_init_abi): New functions.
(_initialize_sparcnbsd_tdep): New prototype.
(_initialize_sparnbsd_tdep): Update.
* Makefile.in (ALLDEPFILES): Add sparcnbsd-tdep.c.
(sparcnbsd-tdep.o): New dependency.
* configure.tgt: Add sparc-*-netbsd*.
* config/sparc/tm-nbsd.h: Rewrite.
* config/sparc/nbsd.mt: Reformat.
@
text
@a1297 1
	sparcnbsd-tdep.c \
a2324 3
sparcnbsd-tdep.o: sparcnbsd-tdep.c $(defs_h) $(gdbcore_h) $(osabi_h) \
	$(regcache_h) $(solib_svr4_h) $(gdb_string_h) \
	$(sparc_tdep_h) $(nbsd_tdep_h)
@


1.445.2.8
log
@* sparc-tdep.h (sparc32nbsd_gregset): Add extern declaration.
* sparcnbsd-nat.c: Rewrite.
* sparcnbsd-tdep.c (sparc32nbsd_gregset): Rename from
sparcnbsd_gregset.
(fetch_core_registers): Adjust.
(sparc32nbsd_init_abi): Rename from sparcnbsd_init_abi.
(sparc32nbsd_aout_init_abi): Rename from sparcbsd_aout_init_abi.
(sparc32nbsd_elf_init_abi): Rename from sparcbsd_elf_init_abi.
(_initialize_sparnbsd_tdep): Adjust.
* Makefile.in (ALLDEPFILES): Add sparcnbsd-nat.c.
(sparcnbsd-nat.o): New dependency.
* configure.host: Add sparc-*-netbsdelf*, sparc-*-netbsdaout* and
sparc-*-netbsd*.
* config/sparc/nm-nbsd.h: Don't include "regcache.h".
(CHILD_PREPARE_TO_STORE): Remove.
* config/sparc/nm-nbsdaout.h: Tweak some comments.
* config/sparc/nbsdelf.mh (NATDEPFILES): Add sparc-nat.o.
(XM_FILE): Delete.
* config/sparc/nbsdaout.mh (NATDEPFILES): Add sparc-nat.o
(XM_FILE): Delete.
@
text
@d1299 1
a1299 1
	sparc-nat.c sparc-sol2-nat.c sparcbsd-nat.c sparcnbsd-nat.c \
a2325 1
sparcnbsd-nat.o: sparcnbsd-nat.c $(defs_h) $(sparc_tdep_h) $(sparc_nat_h)
@


1.445.2.9
log
@Oops!  Missed this file in the previous commit.
@
text
@d1302 1
a1302 1
	sparc64-nat.c sparc64-linux-nat.c \
d2319 1
a2319 1
	$(sparc_tdep_h) $(sparc64_tdep_h)
d2341 2
@


1.445.2.10
log
@* sparc64-nat.c (sparc64_gregset_supplies_p): Return non-zero if
REGNUM is SPARC64_FPRS_REGNUM.
* sparc64-tdep.c (sparc64_supply_gregset): Deal with
SPARC64_FPRS_REGNUM.
(sparc64_collect_gregset): Likewise.
* sparc64-tdep.h (r_fprs_offset): New define.
(sparc64fbsd_gregset): Add define.
(sparc64fbsd_supply_reg, sparc64fbsd_fill_reg)
(sparc64fbsd_supply_fpreg, sparc64fbsd_fill_fpreg): Remove
declarations.
* sparc64fbsd-nat.c (sparc64fbsd_reg_supplies_p)
(sparc64fbsd_fpreg_supplies_p): Remove functions.
(_initialize_sparc64fbsd_nat): Remove initialization of
sparcbsd_supply_reg, sparcbsd_fill_reg, sparcbsd_supply_fpreg,
sparcbsd_fill_fpreg, sparcbsd_reg_supplies_p,
sparcbsd_fpreg_supplies_p.  Initialize sparc_gregset.
* sparc64fbsd-tdep.c (sparc64fbsd_gregset): New variable.
(sparc64fbsd_r_global_offset, sparc64fbsd_r_out_offset)
(sparc64fbsd_r_fprs_offset, sparc64fbsd_r_tnpc_offset)
(sparc64fbsd_r_tpc_offset, sparc64fbsd_r_tstate_offset)
(sparc64fbsd_r_y_offset): Remove variables.
(sparc64fbsd_sizeof_struct_reg, sparc64fbsd_sizeof_struct_fpreg):
Make static and const.
(sparc64fbsd_supply_reg, sparc64fbsd_fill_reg)
(sparc64fbsd_supply_fpreg, sparc64fbsd_fill_fpreg): Remove
functions.
(fetch_core_registers): Replace calls to sparc64fbsd_supply_reg
and sparc64fbsd_supply_fpreg with calls to sparc64_supply_gregset
and sparc64_supply_fpregset.
* Makefile.in (sparc64fbsd-nat.o): Update dependencies.
* config/sparc/fbsd.mh (NATDEPFILES): Remove sparcbsd-nat.o.  Add
sparc64-nat.o and sparc-nat.o.
@
text
@d2346 1
a2346 1
	$(sparc_nat_h)
@


1.445.2.11
log
@Ommitted from previous commit.
@
text
@d1299 1
a1299 1
	sparc-nat.c sparc-sol2-nat.c sparcnbsd-nat.c \
d2324 2
@


1.445.2.12
log
@* sparc64-tdep.h (sparc64nbsd_gregset): Add extern declaration.
* sparc64nbsd-nat.c: Rewrite.
* sparc64nbsd-tdep.c: New file.
* configure.tgt: Add sparc64-*-netbsd*.
* configure.host: Add sparc64-*-netbsd*.
* Makefile.in (ALLDEPFILES): Add sparc64nbsd-tdep.c and
sparc64nbsd-nat.c.
(sparc64nbsd-tdep.o, sparc64nbsd-nat.o): New dependencies.
* config/sparc/nbsd64.mh (NATDEPFILES): Add sparc-nat.o.
* config/sparc/nbsd64.mt (TDEPFILES): Add sparc64-tdep.o and
sparc64nbsd-tdep.o.
(TM_FILE): Set to tm-nbsd.h.
* config/sparc/tm-nbsd64.h: Remove file.
@
text
@a2344 5
sparc64nbsd-tdep.o: sparc64nbsd-tdep.c $(defs_h) $(gdbcore_h) $(osabi_h) \
	$(regcache_h) $(solib_svr4_h) $(gdb_string_h) $(sparc64_tdep_h) \
	$(nbsd_tdep_h)
sparc64nbsd-nat.o: sparc64nbsd-nat.c $(defs_h) $(sparc64_tdep_h) \
	$(sparc_nat_h)
@


1.445.2.13
log
@* Makefile.in (sparc64fbsd-tdep.o): Update dependencies.
@
text
@d1301 1
a1301 1
	sparc64fbsd-tdep.c sparc64nbsd-tdep.c \
d1303 1
a1303 1
	sparc64fbsd-nat.c sparc64nbsd-nat.c \
d2341 2
a2342 3
sparc64fbsd-tdep.o: sparc64fbsd-tdep.c $(defs_h) $(frame_h) \
	$(frame_unwind_h) $(gdbcore_h) $(osabi_h) $(regcache_h) $(target_h) \
	$(trad_frame_h) $(gdb_assert_h) $(gdb_string_h) $(sparc64_tdep_h)
@


1.444
log
@* Makefile.in (xm-i386-sv32.h, tm-i386gas.h): Remove.
@
text
@d579 1
a579 1
dis_asm_h =	$(INCLUDE_DIR)/dis-asm.h 
@


1.444.2.1
log
@2003-09-29  Elena Zannoni  <ezannoni@@redhat.com>

	* solib-svr4.c: Include gdbcmd.h.
	(debug_solib): New variable.
	(elf_locate_base): Add some debugging statements.
	(svr4_current_sos): Likewise.
	(enable_break): Likewise.
	(svr4_relocate_main_executable): Likewise.
	(_initialize_svr4_solib): Add new 'set' command to control
	debugging output.
	* Makefile.in (solib-svr4.o): Update dependencies.
@
text
@d2289 1
a2289 2
	$(gdbcore_h) $(target_h) $(inferior_h) $(solist_h) $(solib_svr4_h) \
	$(gdbcmd_h)
@


1.443
log
@2003-09-11  David Carlton  <carlton@@kealia.com>

	* gdbtypes.h: Add TYPE_CODE_NAMESPACE.
	* gdbtypes.c (init_type): Handle TYPE_CODE_NAMESPACE.
	(recursive_dump_type): Ditto.
	* printcmd.c (print_formatted): Ditto.
	* typeprint.c (print_type_scalar): Ditto.
	* c-typeprint.c (c_type_print_varspec_prefix): Ditto.
	(c_type_print_varspec_suffix, c_type_print_base): Ditto.
	* cp-support.h: Declare cp_check_possible_namespace_symbols,
	maint_cplus_cmd_list.
	* cp-support.c: Make maint_cplus_cmd_list extern.
	* cp-namespace.c: Include objfiles.h, gdbtypes.h, dictionary.h,
	command.h.
	(lookup_symbol_file): Look in possible namespace blocks when
	appropriate.
	(initialize_namespace_symtab): New.
	(get_possible_namespace_block, free_namespace_block)
	(check_possible_namespace_symbols)
	(check_possible_namespace_symbols_loop)
	(check_one_possible_namespace_symbol)
	(lookup_possible_namespace_symbol, maintenance_cplus_namespace)
	(_initialize_cp_namespace): Ditto.
	* block.h: Declare allocate_block.
	* block.c (allocate_block): New.
	* jv-lang.c (get_java_class_symtab): Allocate blocks via
	allocate_block.
	* symfile.h: Update declaration of add_psymbol_to_list.
	* symfile.c (add_psymbol_to_list): Return the partial symbol in
	question.
	* dwarf2read.c (dwarf2_build_psymtabs_hard): Add argument to
	scan_partial_symbols_call.
	(scan_partial_symbols): Add NAMESPACE argument; update calls to
	helper functions.
	(add_partial_symbol): If necessary, scan mangled names for names
	of namespaces.
	(add_partial_namespace): Add NAMESPACE argument; generate partial
	symbols associated  to namespaces.
	(add_partial_enumeration): Add NAMESPACE argument.
	(new_symbol): Allow namespace syms.
	(read_namespace): Generate namespace syms.
	* objfiles.h: Add opaque declaration of struct symtab.
	(struct objfile): Add cp_namespace_symtab member.
	* objfiles.c (allocate_objfile): Set
	objfile->cp_namespace_symtab.
	* Makefile.in (cp-namespace.o): Depend on objfiles_h, gdbtypes_h,
	dictionary_h, command_h.

2003-09-11  David Carlton  <carlton@@kealia.com>

	* gdb.c++/namespace.exp: Add tests for namespace types.
	* gdb.c++/maint.exp (test_help): Test 'help maint cp namespace'.
	(test_namespace): New.
@
text
@a1105 2
xm-i386-sv32.h: xm-i386.h
tm-i386gas.h: tm-i386.h
@


1.442
log
@        * hppa-tdep.c: Include "dis-asm.h". Fixes a build failure.
        * Makefile.in (hppa-tdep.o): Update dependencies.
@
text
@d1660 2
a1661 1
	$(symtab_h) $(symfile_h) $(gdb_assert_h) $(block_h)
@


1.441
log
@	* frv-tdep.c (dis-asm.h): Include.
	* Makefile.in (frv-tdep.o): Update dependencies.
@
text
@d1822 2
a1823 1
	$(gdbcmd_h) $(target_h) $(symfile_h) $(objfiles_h) $(hppa_tdep_h)
@


1.440
log
@2003-09-04  Andrew Cagney  <cagney@@redhat.com>

	* avr-tdep.c: Include "dis-asm.h".
	* cris-tdep.c: Include "dis-asm.h".
	(cris_delayed_get_disassembler): Use "struct disassemble_info"
	instead of corresponding typedef.
	* h8300-tdep.c: Include "dis-asm.h".
	* ia64-tdep.c: Include "dis-asm.h".
	* i386-tdep.c: Include "dis-asm.h".
	(i386_print_insn): Use "struct disassemble_info" instead of
	corresponding typedef.
	* m68k-tdep.c: Include "dis-asm.h".
	* mcore-tdep.c: Include "dis-asm.h".
	* mips-tdep.c: Include "dis-asm.h".
	(gdb_print_insn_mips): Make static, use "struct disassemble_info"
	instead of corresponding typedef.
	* ns32k-tdep.c: Include "dis-asm.h".
	* s390-tdep.c: Include "dis-asm.h".
	* sparc-tdep.c: Include "dis-asm.h".
	* vax-tdep.c: Include "dis-asm.h".
	* v850-tdep.c: Include "dis-asm.h".
	* mn10300-tdep.c: Include "dis-asm.h".
	* rs6000-tdep.c: Include "dis-asm.h".
	* xstormy16-tdep.c: Include "dis-asm.h".
	(_initialize_xstormy16_tdep): Delete "extern" declaration of
	print_insn_xstormy16.
	* Makefile.in (v850-tdep.o): Update dependencies.
	(vax-tdep.o, sparc-tdep.o, s390-tdep.o): Ditto.
	(ns32k-tdep.o, mips-tdep.o, mcore-tdep.o): Ditto.
	(m68k-tdep.o, ia64-tdep.o, i386-tdep.o): Ditto.
	(h8300-tdep.o, cris-tdep.o, avr-tdep.o): Ditto.
	(mn10300-tdep.o, xstormy16-tdep.o, disasm.o): Ditto.
	(gdbarch_h): Remove $(dis_asm_h).
	* disasm.c: Include "dis-asm.h".
	(dis_asm_read_memory): Use "struct disassemble_info" instead of
	corresponding typedef.
	(dis_asm_memory_error, dump_insns, do_assembly_only): Ditto.
	(gdb_disassemble_info, gdb_disassembly, gdb_print_insn): Ditto.
	* gdbarch.sh: Do not include "dis-asm.h".
	(struct disassemble_info): Declare opaque.
	(TARGET_PRINT_INSN): Update declaration.
	* gdbarch.h, gdbarch.c: Re-generate.
@
text
@d1773 1
a1773 1
	$(frame_unwind_h) $(frame_base_h) $(trad_frame_h)
@


1.439
log
@Make frv-tdep.c use new frame mechanisms.
@
text
@d670 1
a670 1
gdbarch_h = gdbarch.h $(dis_asm_h)
d1597 1
a1597 1
	$(gdb_string_h)
d1673 1
a1673 1
	$(symfile_h) $(solib_h) $(solib_svr4_h) $(gdb_string_h)
d1704 1
a1704 1
	$(gdb_string_h) $(disasm_h) $(gdbcore_h)
d1807 1
a1807 1
	$(gdb_assert_h)
d1876 2
a1877 1
	$(gdb_assert_h) $(gdb_string_h) $(i386_tdep_h) $(i387_tdep_h)
d1897 1
a1897 1
	$(elf_bfd_h)
d1999 1
a1999 1
	$(arch_utils_h) $(osabi_h) $(m68k_tdep_h) $(gregset_h)
d2019 1
a2019 1
	$(arch_utils_h) $(gdb_string_h) $(disasm_h)
d2053 1
a2053 1
	$(elf_bfd_h) $(symcat_h) $(sim_regno_h)
d2059 2
a2060 1
	$(symfile_h) $(regcache_h) $(arch_utils_h) $(gdb_assert_h)
d2073 1
a2073 1
	$(ns32k_tdep_h) $(gdb_string_h)
d2227 1
a2227 1
	$(solib_svr4_h) $(ppc_tdep_h) $(gdb_assert_h)
d2232 1
a2232 1
	$(value_h) $(gdb_assert_h)
d2333 2
a2334 2
	$(regcache_h) $(osabi_h) $(sparc_tdep_h) $(gregset_h) $(gdbcore_h) \
	$(gdb_assert_h) $(symfile_h)
d2413 1
a2413 1
	$(arch_utils_h) $(regcache_h) $(symtab_h)
d2432 1
a2432 1
	$(gdb_string_h) $(osabi_h) $(vax_tdep_h)
d2466 1
a2466 1
	$(objfiles_h)
@


1.438
log
@* Makefile.in (dbxread.o): Note new dependency on $(gdb_assert_h).
* dbxread.c: #include "gdb_assert.h".
(read_dbx_symtab): If the objfile has no .data section, use the
section index for the .bss section instead.
@
text
@d1773 1
a1773 1
	$(trad_frame_h)
@


1.437
log
@	* Makefile.in (ALLDEPFILES): Add sh64-tdep.c.
	(sh64-tdep.o): Add dependencies.
	* configure.tgt: Add FIXME to sh-*-linux*.
	* sh-tdep.c: Move sh64 support to sh64-tdep.c.
	(sh_gdbarch_init): Always set correct sh_show_regs function
	pointer.  Call sh64_gdbarch_init() if machine type is sh5.
	* sh-tdep.h: Move sh64 support to sh64-tdep.c.
	* sh64-tdep.c: New file, containing all sh64 related code from
	sh-tdep.c.
	* config/sh/embed.mt (TDEPFILES): Add sh64-tdep.o.
	* config/sh/linux.mt (TDEPFILES): Ditto.
	* config/sh/nbsd.mt (TDEPFILES): Ditto.
	* config/sh/tm-sh.h: Drop REGISTER_TYPE definition.
	* config/sh/wince.mt (TDEPFILES): Ditto.
@
text
@d1693 1
a1693 1
	$(cp_abi_h) $(aout_aout64_h) $(aout_stab_gnu_h)
@


1.436
log
@2003-09-04  Andrew Cagney  <cagney@@redhat.com>

	* Makefile.in: Re-generate all dependencies.
@
text
@d1298 1
a1298 1
	sh-tdep.c shnbsd-tdep.c shnbsd-nat.c \
d2263 5
@


1.435
log
@	* arm-tdep.c: Include frame-unwind.h, frame-base.h, and
	trad-frame.h.
	(arm_get_cache): Delete macro.
	(struct arm_prologue_cache): Update comments.  Make saved_regs into
	a trad_frame_saved_reg pointer.  Remove unwound_pc; rename unwound_sp
	to prev_sp.
	(thumb_scan_prologue): Update for cache changes.  Don't call
	DEPRECATED_PC_IN_CALL_DUMMY.
	(arm_scan_prologue): Update for cache changes.  Take NEXT_FRAME
	argument and use it in desperation search for our prologue.  Do not
	search past the specified PC.
	(arm_make_prologue_cache): Simplify.

	(arm_prologue_this_id, arm_prologue_prev_register)
	(arm_prologue_unwind, arm_prologue_unwind_sniffer)
	(arm_normal_frame_base, arm_normal_base, arm_make_sigtramp_cache)
	(arm_sigtramp_this_id, arm_sigtramp_prev_register)
	(arm_sigtramp_unwind, arm_sigtramp_unwind_sniffer)
	(arm_unwind_dummy_id, arm_unwind_pc, arm_unwind_sp): New.

	(arm_frame_chain_valid, arm_find_callers_reg)
	(arm_frame_saved_pc, arm_read_fp, arm_frame_init_saved_regs)
	(arm_pop_frame): Delete obsolete methods.
	(arm_minimal_frame_chain, arm_minimal_frame_info): Delete.

	(arm_gdbarch_init): Update for new frame methods.  Register prologue
	and sigtramp unwinders.  Set the default frame base method.

	* Makefile.in (arm-tdep.o): Update dependencies.
	* varobj.c (find_frame_addr_in_frame_chain): Call
	get_frame_base_address.
	* std-regs.c (value_of_builtin_frame_fp_reg): Likewise.
@
text
@d630 1
d654 1
a654 1
	$(nm_h) $(tm_h) $(fopen_same_h) $(gdbarch_h) $(arch_utils_h)
d670 1
a670 1
gdbarch_h = gdbarch.h $(dis_asm_h) $(inferior_h) $(symfile_h)
d749 2
d1567 1
a1567 1
	$(gdb_assert_h) $(gregset_h) $(x86_64_tdep_h)
d1571 2
d1576 2
a1577 4
	$(inferior_h) $(symtab_h) $(frame_h) $(inferior_h) $(breakpoint_h) \
	$(gdb_wait_h) $(gdbcore_h) $(gdbcmd_h) $(target_h) $(annotate_h) \
	$(gdb_string_h) $(regcache_h) $(gdb_assert_h) $(sim_regno_h) \
	$(version_h) $(floatformat_h)
d1590 2
a1591 1
	$(doublest_h) $(value_h) $(arch_utils_h) $(osabi_h) $(arm_tdep_h) \
d1593 1
a1593 2
	$(gdb_assert_h) $(bfd_in2_h) $(libcoff_h) $(frame_unwind_h) \
	$(trad_frame_h) $(frame_base_h)
d1672 2
a1673 2
	$(opcode_cris_h) $(arch_utils_h) $(regcache_h) $(symfile_h) \
	$(solib_h) $(solib_svr4_h) $(gdb_string_h) $(gdb_assert_h)
d1772 2
a1773 1
	$(gdbcore_h) $(arch_utils_h) $(regcache_h)
d1783 3
a1785 5
	$(gdb_string_h) $(symtab_h) $(frame_h) $(inferior_h) $(breakpoint_h) \
	$(gdb_wait_h) $(gdbcore_h) $(gdbcmd_h) $(target_h) $(gdbthread_h) \
	$(annotate_h) $(symfile_h) $(value_h) $(symcat_h) $(floatformat_h) \
	$(gdb_assert_h) $(gdb_string_h) $(gdb_events_h) $(reggroups_h) \
	$(osabi_h) $(symfile_h) $(gdb_obstack_h)
d1836 2
a1837 1
i386fbsd-nat.o: i386fbsd-nat.c $(defs_h) $(inferior_h) $(regcache_h)
d1849 3
a1851 3
	$(regcache_h) $(gdb_assert_h) $(gdb_string_h) $(gregset_h) \
	$(i387_tdep_h) $(i386_tdep_h) $(i386_linux_tdep_h) \
	$(gdb_proc_service_h) $(linux_nat_h)
d1865 1
a1865 1
i386obsd-nat.o: i386obsd-nat.c $(defs_h)
d1893 2
a1894 1
	$(arch_utils_h) $(floatformat_h) $(regcache_h) $(doublest_h) \
d2085 3
a2087 3
	$(objfiles_h) $(gdb_stabs_h) $(target_h) $(bcache_h) $(gdb_stat_h) \
	$(gdb_obstack_h) $(gdb_string_h) $(hashtab_h) $(breakpoint_h) \
	$(block_h) $(dictionary_h) $(mmalloc_h)
d2298 4
d2304 6
d2439 3
a2441 2
	$(regcache_h) $(gdb_assert_h) $(gdb_string_h) $(gdb_proc_service_h) \
	$(gregset_h) $(x86_64_tdep_h) $(x86_64_linux_tdep_h)
d2805 3
a2807 2
	$(event_top_h) $(event_loop_h) $(ui_out_h) $(tui_tuiData_h) \
	$(readline_h) $(tui_tuiWin_h) $(tui_h) $(tui_tuiIO_h) $(cli_out_h)
@


1.434
log
@2003-08-30  Michael Chastain  <mec@@shout.net>

	* Makefile.in: Remove tm-hp300bsd.h, tm-hp300hpux.h.
	* config/m68k/nm-hp300hpux.h: Delete.
	* config/m68k/tm-hp300hpux.h: Delete.
	* config/m68k/xm-hp300hpux.h: Delete.
	* config/m68k/xm-hp300bsd.h: Delete.
	* config/djgpp/fnchange.lst: Remove nm-hp300hpux.h,
	tm-hp300hpux.h, xm-hp300hpux.h.
	* somsolib.c: Remove comment about hp300 shared libraries.
@
text
@d1589 2
a1590 1
	$(gdb_assert_h) $(bfd_in2_h) $(libcoff_h)
@


1.433
log
@2003-08-27  Andrew Cagney  <cagney@@redhat.com>

	* Makefile.in (cris-tdep.o): Update dependencies.
	* cris-tdep.c: Include "gdb_assert.h".
	(cris_gdbarch_init): Set print_insn.
	(_initialize_cris_tdep): Do not set deprecated_tm_print_insn.
	(cris_delayed_get_disassembler): Simplify, directly call the
	disassembler returned by cris_get_disassembler.
	* hppa-tdep.c (hppa_gdbarch_init): Set print_insn.
	(_initialize_hppa_tdep): Do not set deprecated_tm_print_insn.
	* ns32k-tdep.c (ns32k_gdbarch_init): Set print_insn.
	(_initialize_ns32k_tdep): Do not set deprecated_tm_print_insn.
	* mn10300-tdep.c (mn10300_gdbarch_init): Set print_insn.
	(_initialize_mn10300_tdep): Do not set deprecated_tm_print_insn.
	* mcore-tdep.c (mcore_gdbarch_init): Set print_insn.
	(_initialize_mcore_tdep): Do not set deprecated_tm_print_insn.
	* frv-tdep.c (frv_gdbarch_init): Set print_insn.
	(_initialize_frv_tdep): Do not set deprecated_tm_print_insn.
	* sparc-tdep.c (sparc_gdbarch_init): Set print_insn.
	(gdb_print_insn_sparc): Delete function.
	(_initialize_sparc_tdep): Do not set deprecated_tm_print_insn or
	deprecated_tm_print_insn_info.
	* v850-tdep.c (v850_gdbarch_init): Set print_insn.
	(_initialize_v850_tdep): Do not set deprecated_tm_print_insn.
	(v850_gdbarch_init): Do not set deprecated_tm_print_insn_info.
	* xstormy16-tdep.c (xstormy16_gdbarch_init): Set print_insn.
	(_initialize_xstormy16_tdep): Do not set deprecated_tm_print_insn.
	* s390-tdep.c (gdb_print_insn_s390): Delete function.
	(_initialize_s390_tdep): Do not set deprecated_tm_print_insn.
	(s390_gdbarch_init): Set print_insn.
@
text
@d1101 2
a1102 2
tm-sun3.h tm-hp300bsd.h tm-altos.h: tm-m68k.h
tm-hp300hpux.h tm-sun2.h tm-3b1.h: tm-m68k.h
@


1.432
log
@2003-08-27  Andrew Cagney  <cagney@@redhat.com>

	* dsrec.c: Include "gdb_string.h".
	* Makefile.in (dsrec.o): Update dependencies.
@
text
@d1669 1
a1669 1
	$(solib_h) $(solib_svr4_h) $(gdb_string_h)
@


1.431
log
@	* frv-tdep.c (gdb_string.h, frame.h, trad-frame.h): Include.
	(frv_frame_init_saved_regs): Add declaration.
	(frame_extra_info): Add new field ``saved_regs''.
	(frv_frame_chain, frv_frame_saved_pc, frv_analyze_prologue)
	(frv_skip_prologue, frv_init_extra_frame_info, frv_pop_frame_regular):
	Update frame related code.
	(frv_extract_struct_value_address): Adjust formatting.
	* Makefile.in (frv-tdep.o): Update dependencies.
	* config/frv/tm-frv.h (target_insert_watchpoint)
	(target_remove_watchpoint, target_insert_hw_breakpoint)
	(target_remove_hw_breakpoint): Delete these macros.
	(remote_insert_watchpoint, remote_remove_watchpoint)
	(remote_insert_hw_watchpoint, remote_remove_hw_watchpoint): Remove
	these declarations.
@
text
@d1704 2
a1705 1
dsrec.o: dsrec.c $(defs_h) $(serial_h) $(srec_h) $(gdb_assert_h)
@


1.430
log
@	* Makefile.in (i386-linux-nat.o): Update dependencies.
	* config/i386/nm-linux.h (LINUX_CHILD_POST_STARTUP_INFERIOR): Define.
	* config/nm-linux.h (CHILD_POST_STARTUP_INFERIOR, CHILD_POST_ATTACH)
	(CHILD_FOLLOW_FORK, KILL_INFERIOR): Define.
	* i386-linux-nat.c: Include "linux-nat.h".
	(child_post_startup_inferior): New function.
	* i386-nat.c (child_post_startup_inferior): Wrap in #ifdef.
	* infptrace.c (kill_inferior): Wrap in #ifdef.
	* lin-lwp.c (lin_lwp_attach_lwp): Call child_post_attach after
	attaching to each LWP.
	(child_wait, lin_lwp_wait): Call linux_handle_extended_wait.
	(init_lin_lwp_ops): Fill in some more operations.
	* linux-nat.h (linux_enable_event_reporting)
	(linux_handle_extended_wait, linux_child_post_startup_inferior): New
	prototypes.
	* linux-nat.c (linux_enable_event_reporting): New function.
	(child_post_attach, linux_child_post_startup_inferior)
	(child_post_startup_inferior, child_follow_fork)
	(linux_handle_extended_wait, kill_inferior): New functions.
@
text
@d1766 2
a1767 2
frv-tdep.o: frv-tdep.c $(defs_h) $(inferior_h) $(symfile_h) $(gdbcore_h) \
	$(arch_utils_h) $(regcache_h)
@


1.429
log
@Oops, merge lost Makefile.in:printcmd.o part of change:

2003-08-16  Andrew Cagney  <cagney@@redhat.com>

	* Makefile.in (printcmd.o, valprint.o): Do not try to build with
	-Werror.  -Wformat-nonliteral problems.
@
text
@d1846 1
a1846 1
	$(gdb_proc_service_h)
@


1.428
log
@2003-08-16  Andrew Cagney  <cagney@@redhat.com>

	* Makefile.in (printcmd.o, valprint.o): Do not try to build with
	-Werror.  -Wformat-nonliteral problems.
@
text
@d1334 7
@


1.427
log
@        Further multiarching work mostly for hppa64-*-hpux11:
        * hppa-tdep.h: New file.
        * hppa-tdep.c: #include hppa-tdep.c.
        (hppa32_num_regs): Renamed from hppa_num_regs.
        (hppa64_num_regs): New constant.
        (hppa64_call_dummy_breakpoint_offset): New constant.
        (hppa32_call_dummy_length): New constant.
        (hppa64_call_dummy_length): New constant.
        (hppa32_stack_align): Make name 32bit explicit.
        (hppa32_register_virtual_type): Likewise.
        (hppa32_extract_return_value): Likewise.
        (hppa32_use_struct_convention): Likewise.
        (hppa32_store_return_value): Likewise.
        (hppa64_register_virtual_type): New function.
        (hppa64_extract_return_value): New function.
        (hppa64_use_struct_convention): New function.
        (hppa64_store_return_value): New function.
        (hppa_frame_locals_address): Remove declaration, function does
        not exist anymore.
        (hppa_register_byte): Add support for PA64 ABI.
        (hppa_gdbarch_init): Add support for PA64 ABI.
        * hppa-hpux-tdep.c (hppa32_hpux_frame_saved_pc_in_sigtramp):
        Make name 32bit explicit.
        (hppa32_hpux_frame_base_before_sigtramp): Likewise.
        (hppa32_hpux_frame_find_saved_regs_in_sigtramp): Likewise.
        (hppa64_hpux_frame_saved_pc_in_sigtramp): New function.
        (hppa64_hpux_frame_base_before_sigtramp): New function.
        (hppa64_hpux_frame_find_saved_regs_in_sigtramp): New function.
        * config/pa/tm-hppa64.h: Remove macros that are no longer
        necessary now that the gdbarch vector is properly setup.
        Transform some macros into function calls. Some minor cleanup.
        * config/pa/tm-hppah.h: Update function calls in macros
        following the function renaming in hppa-hpux-tdep.c.
        * Makefile.in (hppa_tdep_h): New variable.
        (hppa-tdep.o): Add dependency over hppa_tdep_h.
@
text
@d1351 6
@


1.426
log
@2003-08-12  Andrew Cagney  <cagney@@redhat.com>

	* Makefile.in (dsrec.o): Update dependencies.
	* dsrec.c: Include "gdb_assert.h".
	(make_srec): Use snprintf instead of sprintf, use a literal format
	string.
@
text
@d690 1
d1805 1
a1805 1
	$(gdbcmd_h) $(target_h) $(symfile_h) $(objfiles_h)
@


1.425
log
@2003-08-10  Andrew Cagney  <cagney@@redhat.com>

	* Makefile.in (monitor.o): Do not build monitor.c with -Werror.
@
text
@d1690 1
a1690 1
dsrec.o: dsrec.c $(defs_h) $(serial_h) $(srec_h)
@


1.424
log
@gdb/

2003-08-08  H.J. Lu  <hongjiu.lu@@intel.com>

	* Makefile.in (FLAGS_TO_PASS): Add DESTDIR.
	(install-only): Support DESTDIR.
	(uninstall): Likewise.
	(install-gdbtk): Likewise.

gdb/doc/

2003-08-08  H.J. Lu  <hongjiu.lu@@intel.com>

	* Makefile.in (install-info): Support DESTDIR.
	(install-html): Likewise.

gdb/gdbserver/

2003-08-08  H.J. Lu  <hongjiu.lu@@intel.com>

	* Makefile.in (install-only): Create dest dir. Support DESTDIR.
	(uninstall): Support DESTDIR.

mmalloc/

2003-08-08  H.J. Lu  <hongjiu.lu@@intel.com>

	* Makefile.in (install-info): Create dest dir. Support DESTDIR.
	(install): Likewise.
@
text
@d1324 9
@


1.423
log
@	* Makefile.in (tui-interp.o): Update dependencies.
@
text
@d433 1
d967 1
a967 1
		$(SHELL) $(srcdir)/../mkinstalldirs $(bindir) ; \
d984 2
a985 1
		rm -f $(bindir)/$$transformed_name$(EXEEXT) $(man1dir)/$$transformed_name.1
d2476 1
a2476 1
	$(SHELL) $(srcdir)/../mkinstalldirs $(bindir); \
@


1.422
log
@2003-08-02  Andrew Cagney  <cagney@@redhat.com>

	* Makefile.in: Update all dependencies and definitions.
@
text
@d2764 1
a2764 1
	$(readline_h) $(tui_tuiWin_h) $(tui_h) $(tui_tuiIO_h)
@


1.421
log
@2003-07-22  Elena Zannoni  <ezannoni@@redhat.com>

	* findvar.c (read_var_value): Remove case for thread local storage
	variables.  It is now entirely handled by the dwarf2 location
	expression code.
	* printcmd.c (address_info): Ditto.
	* symtab.h (address_class): Remove LOC_THREAD_LOCAL_STATIC
	enumeration value.
	(struct symbol): Remove objfile field, which was used by
	LOC_THREAD_LOCAL_STATIC only.
	* dwarf2read.c (decode_locdesc): Remove is_thread_local variable.
	* dwarf2loc.h (struct dwarf2_loclist_baton): Add comment about
	usage of objfile pointer.
	* dwarf2loc.c (locexpr_describe_location): Add case to handle
	thread local variables.
	Add include of objfiles.h.
	* dwarf2expr.c (execute_stack_op): Add comments about thread local
	storage variables.
	* Makefile.in (dwarf2loc.o): Update dependencies.
@
text
@d627 1
a628 1
alphabsd_tdep_h = alphabsd-tdep.h
d638 2
a640 2
call_cmds_h = call-cmds.h
ch_lang_h = ch-lang.h
d642 1
a643 1
coff_pe_read_h = coff-pe-read.h
d650 1
a650 1
defs_h = defs.h $(config_h) $(gdb_locale_h) $(gdb_signals_h) $(ansidecl_h) \
a655 1
dst_h = dst.h
a656 1
dwarf2cfi_h = dwarf2cfi.h
d658 1
a659 1
dwarf2_frame_h = dwarf2-frame.h
d665 1
d668 5
a672 1
frame_base_h = frame-base.h
a673 1
gdb_stabs_h = gdb-stabs.h
a674 2
gdb_assert_h = gdb_assert.h
gdb_dirent_h = gdb_dirent.h
d679 1
d683 2
a686 5
gdbarch_h = gdbarch.h $(dis_asm_h) $(inferior_h)
gdbcmd_h = gdbcmd.h $(command_h) $(ui_out_h)
gdbcore_h = gdbcore.h $(bfd_h)
gdbthread_h = gdbthread.h $(breakpoint_h) $(frame_h)
gdbtypes_h = gdbtypes.h
a691 1
inf_loop_h = inf-loop.h
d694 1
d696 1
d711 1
a712 1
mipsnbsd_tdep_h = mipsnbsd-tdep.h
d716 1
a721 1
p_lang_h = p-lang.h
d724 2
a726 1
ppcnbsd_tdep_h = ppcnbsd-tdep.h
d730 2
a732 2
remote_h = remote.h
remote_fileio_h = remote-fileio.h
d736 1
d738 1
a738 1
serial_h = serial.h
a739 1
shnbsd_tdep_h = shnbsd-tdep.h
d741 1
a742 1
solib_h = solib.h
d746 1
a747 1
sparcnbsd_tdep_h = sparcnbsd-tdep.h
d756 1
a757 2
infttrace_h = infttrace.h
tracepoint_h = tracepoint.h
d763 2
a764 1
value_h = value.h $(doublest_h) $(frame_h) $(symtab_h) $(gdbtypes_h) $(expression_h)
d770 1
a800 2
tui_file_h = $(srcdir)/tui/tui-file.h
tui_h = $(srcdir)/tui/tui.h $(ansidecl_h)
d802 1
a803 1
tuiDataWin_h = $(srcdir)/tui/tuiDataWin.h
d809 1
a810 1
tuiSourceWin_h = $(srcdir)/tui/tuiSourceWin.h
d813 2
a814 2

charset_h =	charset.h
d1358 6
a1363 6
ada-exp.tab.o: ada-exp.tab.c ada-lex.c ada-lang.h \
	$(defs_h) $(expression_h) \
	$(gdbtypes_h) language.h parser-defs.h $(symtab_h) $(value_h) \
	$(bfd_h) objfiles.h symfile.h $(block_h)
ada-exp.tab.c: ada-exp.y 
	$(YACC) $(YFLAGS) $(srcdir)/ada-exp.y
d1370 3
a1372 2
	     < y.tab.c > ada-exp.new
	-rm y.tab.c
d1389 1
a1389 2
	$(charset_h) \
	$(symfile_h) $(objfiles_h) $(block_h)
d1391 2
a1392 1
	$(SHELL) $(YLWRAP) "$(YACC)" $(srcdir)/c-exp.y  y.tab.c c-exp.tmp -- $(YFLAGS) 
d1404 3
a1406 3
f-exp.tab.o: f-exp.tab.c f-lang.h $(defs_h) $(expression_h) \
	$(language_h) $(parser_defs_h) $(value_h) $(bfd_h) $(objfiles_h) \
	$(symfile_h) $(block_h)
d1408 2
a1409 1
	$(SHELL) $(YLWRAP) "$(YACC)" $(srcdir)/f-exp.y  y.tab.c f-exp.tmp -- $(YFLAGS) 
d1421 3
a1423 3
jv-exp.tab.o: jv-exp.tab.c jv-lang.h $(defs_h) $(expression_h) \
	$(gdbtypes_h) $(language_h) $(parser_defs_h) $(symtab_h) $(value_h) \
	$(bfd_h) $(objfiles_h) $(symfile_h) $(block_h)
d1425 2
a1426 1
	$(SHELL) $(YLWRAP) "$(YACC)" $(srcdir)/jv-exp.y  y.tab.c jv-exp.tmp -- $(YFLAGS) 
d1438 3
a1440 3
m2-exp.tab.o: m2-exp.tab.c $(defs_h) $(expression_h) $(gdbtypes_h) \
	$(language_h) m2-lang.h $(parser_defs_h) $(symtab_h) $(value_h) \
	$(bfd_h) $(objfiles_h) $(symfile_h) $(block_h)
d1442 2
a1443 1
	$(SHELL) $(YLWRAP) "$(YACC)" $(srcdir)/m2-exp.y  y.tab.c m2-exp.tmp -- $(YFLAGS) 
d1455 4
a1458 3
objc-exp.tab.o: objc-exp.tab.c $(objc_lang_h) $(defs_h) $(expression_h) \
	$(gdbtypes_h) $(language_h) $(parser_defs_h) $(symtab_h) $(value_h) \
	$(bfd_h) $(objfiles_h) $(symfile_h) $(block_h)
d1460 2
a1461 1
	$(SHELL) $(YLWRAP) "$(YACC)" $(srcdir)/objc-exp.y y.tab.c objc-exp.tmp -- $(YFLAGS) 
d1473 3
a1475 3
p-exp.tab.o: p-exp.tab.c $(defs_h) $(expression_h) $(gdbtypes_h) \
	$(language_h) p-lang.h $(parser_defs_h) $(symtab_h) $(value_h) \
	$(bfd_h) $(objfiles_h) $(symfile_h) $(block_h)
d1477 2
a1478 1
	$(SHELL) $(YLWRAP) "$(YACC)" $(srcdir)/p-exp.y  y.tab.c p-exp.tmp -- $(YFLAGS)
d1502 2
a1503 2
	$(inferior_h) $(symtab_h) $(target_h) $(gdbcore_h) $(gregset_h) \
	$(ada_lang_h)
d1514 6
d1521 1
a1521 11
	$(osabi_h) $(alpha_tdep_h) 
alpha-nat.o: alpha-nat.c $(defs_h) $(gdb_string_h) $(inferior_h) $(gdbcore_h) \
	$(target_h) $(regcache_h) $(alpha_tdep_h) $(gregset_h) 
alpha-osf1-tdep.o: alpha-osf1-tdep.c $(defs_h) $(frame_h) $(gdbcore_h) \
	$(value_h) $(osabi_h) $(gdb_string_h) $(alpha_tdep_h) $(objfiles_h)
alpha-tdep.o: alpha-tdep.c $(defs_h) $(doublest_h) $(frame_h) \
	$(frame_unwind_h) $(frame_base_h) $(inferior_h) $(symtab_h) \
	$(value_h) $(gdbcmd_h) $(gdbcore_h) $(dis_asm_h) $(symfile_h) \
	$(objfiles_h) $(gdb_string_h) $(linespec_h) $(regcache_h) \
	$(reggroups_h) $(arch_utils_h) $(osabi_h) $(block_h) $(gdb_assert_h) \
	$(elf_bfd_h) $(alpha_tdep_h) $(dwarf2_frame_h)
d1525 2
a1526 6
alphabsd-nat.o: alphabsd-nat.c $(defs_h) $(inferior_h) $(regcache_h) \
	$(alpha_tdep_h) $(alphabsd_tdep_h) $(gregset_h)
alphabsd-tdep.o: alphabsd-tdep.c $(defs_h) $(regcache_h) $(alpha_tdep_h) \
	$(alphabsd_tdep_h)
alphafbsd-tdep.o: alphafbsd-tdep.c $(defs_h) $(value_h) $(alpha_tdep_h) \
	$(osabi_h)
d1528 11
a1538 3
	$(regcache_h) $(value_h) $(solib_svr4_h) $(alpha_tdep_h) \
	$(alphabsd_tdep_h) $(nbsd_tdep_h) $(osabi_h)
amd64fbsd-nat.o: amd64fbsd-nat.o $(defs_h) $(inferior_h) $(regcache_h) \
d1540 1
a1540 1
amd64fbsd-tdep.o: amd64fbsd-tdep.o $(defs_h) $(arch_utils_h) $(frame_h) \
d1554 6
a1559 2
	$(doublest_h) $(arm_tdep_h) $(symtab_h) $(symfile_h) $(objfiles_h) \
	$(solib_svr4_h) $(osabi_h)
d1562 7
a1568 9
	$(doublest_h) $(value_h) $(arch_utils_h) $(osabi_h) \
	$(arm_tdep_h) $(sim_arm_h) $(elf_bfd_h) $(coff_internal_h) \
	$(elf_arm_h) $(gdb_assert_h)
armnbsd-nat.o: armnbsd-nat.c $(defs_h) $(arm_tdep_h) $(inferior_h) \
	$(regcache_h) $(gdbcore_h)
armnbsd-tdep.o: armnbsd-tdep.c $(defs_h) $(arm_tdep_h) $(nbsd_tdep_h) \
	$(solib_svr4_h) $(osabi_h)
avr-tdep.o: avr-tdep.c $(defs_h) $(gdbcmd_h) $(gdbcore_h) $(inferior_h) \
	$(symfile_h) $(arch_utils_h) $(regcache_h) $(gdb_string_h)
d1585 3
a1587 3
	$(objfiles_h) $(linespec_h) $(completer_h) $(gdb_h) $(ui_out_h) \
	$(cli_script_h) $(gdb_events_h) $(source_h) $(gdb_assert_h) \
	$(block_h)
d1590 5
a1594 3
	$(complaints_h)	$(gdb_string_h) $(expression_h) $(language_h) \
	$(bcache_h) $(filenames_h) $(macrotab_h) $(demangle_h) $(buildsym_h) \
	$(stabsread_h) $(block_h) $(cp_support_h) $(dictionary_h)
d1598 1
a1598 10
	$(demangle_h)
c-typeprint.o: c-typeprint.c $(defs_h) $(gdb_obstack_h) $(bfd_h) $(symtab_h) \
	$(gdbtypes_h) $(expression_h) $(value_h) $(gdbcore_h) $(target_h) \
	$(language_h) $(demangle_h) $(c_lang_h) $(typeprint_h) $(cp_abi_h) \
	$(gdb_string_h)
c-valprint.o: c-valprint.c $(defs_h) $(gdb_string_h) $(symtab_h) \
	$(gdbtypes_h) $(expression_h) $(value_h) $(valprint_h) $(language_h) \
	$(c_lang_h) $(cp_abi_h)
charset.o: charset.c $(defs_h) $(charset_h) $(gdbcmd_h) $(gdb_assert_h) \
	$(gdb_string_h)
d1601 2
a1602 2
coff-solib.o: coff-solib.c $(defs_h) $(frame_h) $(bfd_h) $(gdbcore_h) \
	$(symtab_h) $(symfile_h) $(objfiles_h)
d1609 2
a1610 2
coff-pe-read.o: coff-pe-read.c $(bfd_h) $(defs_h) $(symtab_h) \
	$(gdbtypes_h) $(symfile_h) $(objfiles_h) $(coff_pe_read_h)
d1614 1
a1614 1
	$(filenames_h) $(cli_decode_h) $(gdbcmd_h) $(completer_h) $(readline_h)
a1617 4
core-regset.o: core-regset.c $(defs_h) $(gdb_string_h) $(inferior_h) \
	$(target_h) $(command_h) $(gdbcore_h) $(gregset_h)
core-sol2.o: core-sol2.c $(defs_h) $(gdb_string_h) $(regcache_h) \
	$(inferior_h) $(target_h) $(command_h) $(gdbcore_h) $(gregset_h)
d1623 7
a1629 3
	$(gdbthread_h) $(regcache_h) $(symfile_h) $(readline_h)
cp-abi.o: cp-abi.c $(defs_h) $(value_h) $(cp_abi_h) $(command_h) \
	$(gdbcmd_h) $(ui_out_h) $(gdb_string_h)
d1634 3
a1636 1
	$(objfiles_h) $(frame_h) $(block_h) $(complaints_h)
a1640 2
cpu32bug-rom.o: cpu32bug-rom.c $(defs_h) $(gdbcore_h) $(target_h) \
	$(monitor_h) $(serial_h) $(regcache_h) $(m68k_tdep_h)
d1645 7
d1655 3
a1657 3
	$(objfiles_h) $(language_h) $(arch_utils_h) $(regcache_h) $(remote_h) \
	$(floatformat_h) $(gdb_sim_d10v_h) $(sim_regno_h) $(disasm_h) \
	$(trad_frame_h) $(gdb_assert_h)
d1674 2
a1675 2
disasm.o: disasm.c $(defs_h) $(gdb_string_h) $(target_h) $(value_h) \
	$(disasm_h) $(ui_out_h) $(gdbcore_h)
a1684 3
dwarf2cfi.o: dwarf2cfi.c $(defs_h) $(gdbcore_h) $(symtab_h) $(symfile_h) \
	$(objfiles_h) $(target_h) $(elf_dwarf2_h) $(inferior_h) \
	$(regcache_h) $(dwarf2cfi_h) $(gdb_assert_h)
d1686 5
a1690 1
	 $(gdbcore_h) $(dwarf2expr_h)
d1692 3
a1694 7
	$(gdbcore_h) $(target_h) $(inferior_h) $(dwarf2expr_h) \
	$(dwarf2loc_h) $(ax_h) $(ax_gdb_h) $(regcache_h) $(objfiles_h) \
	$(gdb_string_h)
dwarf2-frame.o: $(defs_h) $(dwarf2expr_h) $(elf_dwarf2_h) $(frame_h) \
	$(frame_base_h) $(frame_unwind_h) $(gdbcore_h) $(gdbtypes_h) \
	$(symtab_h) $(objfiles_h) $(regcache_h) $(gdb_assert_h) \
	$(gdb_string_h) $(dwarf2_frame_h) $(complaints_h)
d1709 1
a1709 1
	$(f_lang_h) $(cp_abi_h) $(infcall_h) $(objc-lang.h) $(block_h)
d1717 1
a1717 2
	$(gdb_string_h) $(gdbcore_h) $(gdb_stat_h) $(xcoffsolib_h) \
	$(readline_h)
a1720 9
f-lang.o: f-lang.c $(defs_h) $(gdb_string_h) $(symtab_h) $(gdbtypes_h) \
	$(expression_h) $(parser_defs_h) $(language_h) $(f_lang_h) \
	$(valprint_h) $(value_h)
f-typeprint.o: f-typeprint.c $(defs_h) $(gdb_obstack_h) $(bfd_h) $(symtab_h) \
	$(gdbtypes_h) $(expression_h) $(value_h) $(gdbcore_h) $(target_h) \
	$(f_lang_h) $(gdb_string_h)
f-valprint.o: f-valprint.c $(defs_h) $(gdb_string_h) $(symtab_h) \
	$(gdbtypes_h) $(expression_h) $(value_h) $(valprint_h) $(language_h) \
	$(f_lang_h) $(frame_h) $(gdbcore_h) $(command_h) $(block_h)
d1727 3
d1733 1
a1738 1
frame-base.o: frame-base.c $(defs_h) $(frame_base_h) $(frame_h)
d1740 1
a1740 1
	$(gdb_assert_h) $(dummy_frame_h) $(legacy_frame_h)
d1743 6
a1750 2
gdb.o: gdb.c $(defs_h) $(main_h) $(gdb_string_h) $(interps_h)
gdb-events.o: gdb-events.c $(defs_h) $(gdb_events_h) $(gdbcmd_h)
d1756 3
a1758 1
	$(osabi_h)
d1765 3
a1767 3
	$(gdbcore_h) $(gdbthread_h) $(gdb_assert_h) $(gnu_nat_h) \
	$(exc_request_S_h) $(notify_S_h) $(process_reply_S_h) \
	$(msg_reply_S_h) $(exc_request_U_h) $(msg_U_h) $(gdb_obstack_h)
d1776 4
a1779 5
h8300-tdep.o: h8300-tdep.c $(defs_h) $(frame_h) $(symtab_h) $(dis_asm_h) \
	$(gdbcmd_h) $(gdbtypes_h) $(gdbcore_h) $(gdb_string_h) $(value_h) \
	$(regcache_h)
h8500-tdep.o: h8500-tdep.c $(defs_h) $(frame_h) $(symtab_h) $(gdbtypes_h) \
	$(gdbcmd_h) $(value_h) $(dis_asm_h) $(gdbcore_h) $(regcache_h)
d1782 7
a1793 7
hppa-hpux-tdep.o: hppa-hpux-tdep.c $(defs_h) $(arch_utils_h) $(gdbcore_h) \
	$(osabi_h) $(gdb_string_h)
hppab-nat.o: hppab-nat.c $(defs_h) $(inferior_h) $(target_h) $(regcache_h)
hppah-nat.o: hppah-nat.c $(defs_h) $(inferior_h) $(target_h) $(gdbcore_h) \
	$(gdb_wait_h) $(regcache_h)
hppam3-nat.o: hppam3-nat.c $(defs_h) $(inferior_h) $(floatformat_h) \
	$(regcache_h)
d1800 18
d1820 2
a1821 1
	$(i387_tdep_h) $(i386_tdep_h) $(i386_linux_tdep_h)
d1823 5
a1827 3
	$(value_h) $(regcache_h) $(inferior_h) $(symtab_h) $(symfile_h) \
	$(objfiles_h) $(solib_svr4_h) $(i386_tdep_h) $(i386_linux_tdep_h) \
	$(osabi_h)
d1829 11
a1839 2
i386-sol2-tdep.o: i386-sol2-tdep.c $(defs_h) $(value_h) $(i386_tdep_h) \
	$(osabi_h)
a1846 23
i386b-nat.o: i386b-nat.c $(defs_h)
i386bsd-nat.o: i386bsd-nat.c $(defs_h) $(inferior_h) $(regcache_h) \
	$(gdb_assert_h) $(gregset_h) $(i386_tdep_h) $(i387_tdep_h) \
	$(osabi_h)
i386bsd-tdep.o: i386bsd-tdep.c $(defs_h) $(arch_utils_h) $(frame_h) \
	$(gdbcore_h) $(regcache_h) $(gdb_string_h) $(i386_tdep_h)
i386fbsd-nat.o: i386fbsd-nat.c $(defs_h) $(inferior_h) $(regcache_h)
i386gnu-nat.o: i386gnu-nat.c $(defs_h) $(inferior_h) $(floatformat_h) \
	$(regcache_h) $(gdb_assert_h) $(i386_tdep_h) $(gnu_nat_h) \
	$(i387_tdep_h)
i386gnu-tdep.o: i386gnu-tdep.c $(defs_h) $(i386_tdep_h) $(osabi_h)
i386ly-tdep.o: i386ly-tdep.c $(defs_h) $(gdbcore_h) $(inferior_h) \
	$(regcache_h) $(target_h) $(i386_tdep_h) $(osabi_h)
i386-cygwin-tdep.o: i386-cygwin-tdep.c $(defs_h) $(gdb_string_h) \
	$(i386_tdep_h) $(osabi_h)
i386nbsd-tdep.o: i386nbsd-tdep.c $(defs_h) $(gdbtypes_h) $(gdbcore_h) \
	$(regcache_h) $(arch_utils_h) $(i386_tdep_h) $(i387_tdep_h) \
	$(nbsd_tdep_h) $(solib_svr4_h) $(osabi_h)
i386obsd-nat.o: i386obsd-nat.c $(defs_h)
i386obsd-tdep.o: i386obsd-tdep.c $(defs_h) $(arch_utils_h) $(gdbcore_h) \
	$(regcache_h) $(i386_tdep_h) $(i387_tdep_h) $(osabi_h)
i386v-nat.o: i386v-nat.c $(defs_h) $(frame_h) $(inferior_h) $(language_h) \
	$(gdbcore_h) $(gdb_stat_h) $(floatformat_h) $(target_h) $(i386_tdep_h)
d1849 6
a1854 4
i387-tdep.o: i387-tdep.c $(defs_h) $(frame_h) $(inferior_h) $(language_h) \
	$(value_h) $(gdbcore_h) $(floatformat_h) $(regcache_h) \
	$(gdb_assert_h) $(gdb_string_h) $(doublest_h) $(i386_tdep_h) \
	$(i387_tdep_h)
d1864 2
a1865 3
	$(value_h) $(gdb_assert_h) $(objfiles_h) $(elf_common_h) $(elf_bfd_h)
inf-loop.o: inf-loop.c $(defs_h) $(inferior_h) $(target_h) $(event_loop_h) \
	$(event_top_h) $(inf_loop_h) $(remote_h)
d1868 1
a1868 1
	$(symfile_h) $(gdbcmd_h) $(command_h) $(gdb_string_h)
d1873 3
a1875 1
	$(parser_defs_h) $(regcache_h) $(block_h)
d1890 2
a1891 1
	$(gdb_string_h) $(gdb_wait_h) $(command_h) $(gdbthread_h) $(gdbcore_h)
a1908 1
kod-cisco.o: kod-cisco.c $(defs_h) $(gdb_string_h) $(kod_h)
d1911 1
d1915 4
a1921 3
linespec.o: linespec.c $(defs_h) $(symtab_h) $(frame_h) $(command_h) \
	$(symfile_h) $(objfiles_h) $(source_h) $(demangle_h) $(value_h) \
	$(completer_h) $(cp_abi_h) $(parser_defs_h) $(block_h) $(objc_lang_h)
d1924 2
a1925 2
linux-proc.o: linux-proc.c $(defs_h) $(inferior_h) $(regcache_h) \
	$(gregset_h) $(gdbcore_h) $(gdbthread_h) $(elf_bfd_h) \
a1935 3
m3-nat.o: m3-nat.c $(defs_h) $(inferior_h) $(symtab_h) $(value_h) \
	$(language_h) $(target_h) $(gdb_wait_h) $(gdbcmd_h) $(gdbcore_h) \
	$(regcache_h)
d1940 8
a1947 4
m32r-tdep.o: m32r-tdep.c $(defs_h) $(frame_h) $(inferior_h) $(target_h) \
	$(value_h) $(bfd_h) $(gdb_string_h) $(gdbcore_h) $(symfile_h) \
	$(regcache_h)
m68hc11-tdep.o: m68hc11-tdep.c $(defs_h) $(frame_h) $(symtab_h) \
d1950 2
a1951 7
	$(arch_utils_h) $(regcache_h) $(target_h) $(opcode_m68hc11_h) \
	$(elf_m68hc11_h) $(elf_bfd_h)
m68k-stub.o: m68k-stub.c
m68k-tdep.o: m68k-tdep.c $(defs_h) $(frame_h) $(frame_base_h) \
	$(frame_unwind_h) $(symtab_h) $(gdbcore_h) $(value_h) $(gdb_string_h) \
	$(gdb_assert_h) $(inferior_h) $(regcache_h) $(arch_utils_h) \
	$(gregset_h) $(osabi_h) $(m68k_tdep_h)
d1954 6
a1959 4
	$(m68k_tdep_h) $(gdb_stat_h) $(floatformat_h) $(target_h)
m68klinux-tdep.o: m68klinux-tdep.c $(defs_h) $(gdbcore_h) $(doublest) \
	$(floatformat_h) $(frame_h) $(target_h) $(gdb_string_h) $(gdbtypes_h) \
	$(osabi_h) $(regcache_h) $(objfiles_h) $(symtab_h) $(m68k_tdep_t)
d1963 5
d1972 2
a1973 2
macroscope.o: macroscope.c $(defs_h) $(macroscope_h) $(symtab_h) $(target_h) \
	$(frame_h) $(inferior_h) $(source_h) $(complaints_h)
d1991 5
a1995 4
	$(block_h) $(dictionary_h) \
	$(coff_sym_h) $(coff_symconst_h) $(gdb_stat_h) $(gdb_string_h) \
	$(bfd_h) $(coff_ecoff_h) $(libaout_h) $(aout_aout64_h) \
	$(aout_stab_gnu_h) $(expression_h) $(language_h)
a1997 2
memattr.o: memattr.c $(defs_h) $(command_h) $(gdbcmd_h) $(memattr_h) \
	$(target_h) $(value_h) $(language_h) $(gdb_string_h)
d2003 1
a2003 1
	$(solib_svr4_h) $(osabi_h) $(gdb_string_h) $(mips_tdep_h) \
d2005 1
a2006 7
mips-tdep.o: mips-tdep.c $(defs_h) $(gdb_string_h) $(gdb_assert_h) \
	$(frame_h) $(inferior_h) $(symtab_h) $(value_h) $(gdbcmd_h) \
	$(language_h) $(gdbcore_h) $(symfile_h) $(objfiles_h) $(gdbtypes_h) \
	$(target_h) $(arch_utils_h) $(regcache_h) $(osabi_h) $(mips_tdep_h) \
	$(block_h) $(reggroups_h) $(opcode_mips_h) $(elf_mips_h) \
	$(elf_bfd_h) $(symcat_h)
mipsm3-nat.o: mipsm3-nat.c $(defs_h) $(inferior_h) $(regcache_h)
d2010 2
a2011 2
	$(target_h) $(value_h) $(osabi_h) $(mipsnbsd_tdep_h) $(solib_svr4_h) \
	$(nbsd_tdep_h)
d2016 6
d2024 2
a2025 1
mn10200-tdep.o: mn10200-tdep.c $(defs_h) $(frame_h) $(inferior_h) \
d2027 1
a2027 4
	$(symfile_h) $(regcache_h)
mn10300-tdep.o: mn10300-tdep.c $(defs_h) $(frame_h) $(inferior_h) $(target_h) \
	$(value_h) $(bfd_h) $(gdb_string_h) $(gdbcore_h) $(symfile_h) \
	$(regcache_h) $(arch_utils_h) $(gdb_assert_h)
a2033 3
ns32k-tdep.o: ns32k-tdep.c $(defs_h) $(frame_h) $(gdbtypes_h) $(gdbcore_h) \
	$(inferior_h) $(regcache_h) $(target_h) $(arch_utils_h) \
	$(ns32k_tdep_h) $(gdb_string_h) $(osabi_h)
d2036 11
a2046 2
ns32knbsd-tdep.o: ns32knbsd-tdep.c $(defs_h) $(ns32k_tdep_h) $(gdb_string_h) \
	$(osabi_h)
d2049 4
a2052 3
	$(complaints_h) $(value_h) $(symfile_h) $(objfiles_h) $(gdb_string_h) \
	$(target_h) $(gdbcore_h) $(gdbcmd_h) $(frame_h) $(gdb_regex_h) \
	$(regcache_h) $(block_h) $(infcall_h) $(valprint_h) $(gdb_assert_h)
d2055 3
a2057 3
	$(gdb_obstack_h) $(gdb_string_h) $(breakpoint_h) $(mmalloc_h) \
	$(block_h) $(dictionary_h)
observer.o: observer.c $(observer_h) $(defs_h)
d2063 2
a2064 12
osabi.o: osabi.c $(defs_h) $(gdb_string_h) $(osabi_h) $(elf_bfd_h) \
	$(gdbcmd_h) $(command_h) $(arch_utils_h)
p-lang.o: p-lang.c $(defs_h) $(gdb_string_h) $(symtab_h) $(gdbtypes_h) \
	$(expression_h) $(parser_defs_h) $(language_h) $(p_lang_h) \
	$(valprint_h) $(value_h)
p-typeprint.o: p-typeprint.c $(defs_h) $(gdb_obstack_h) $(bfd_h) $(symtab_h) \
	$(gdbtypes_h) $(expression_h) $(value_h) $(gdbcore_h) $(target_h) \
	$(language_h) $(p_lang_h) $(typeprint_h) $(gdb_string_h)
p-valprint.o: p-valprint.c $(defs_h) $(gdb_obstack_h) $(symtab_h) \
	$(gdbtypes_h) $(expression_h) $(value_h) $(command_h) $(gdbcmd_h) \
	$(gdbcore_h) $(demangle_h) $(valprint_h) $(typeprint_h) \
	$(language_h) $(target_h) $(annotate_h) $(p_lang_h) $(cp_abi_h)
d2072 4
a2075 1
	$(doublest_h) $(builtin_regs_h) $(gdb_assert_h) $(block_h)
d2080 2
d2087 2
a2088 6
	$(objfiles_h) $(regcache_h) $(value_h) $(solib_svr4_h) $(ppc_tdep_h) \
	$(osabi_h)
ppc-sysv-tdep.o: ppc-sysv-tdep.c $(defs_h) $(gdbcore_h) $(inferior_h) \
	$(regcache_h) $(value_h) $(gdb_string_h) $(ppc_tdep_h)
ppcbug-rom.o: ppcbug-rom.c $(defs_h) $(gdbcore_h) $(target_h) $(monitor_h) \
	$(serial_h) $(regcache_h)
d2092 4
a2095 2
	$(target_h) $(breakpoint_h) $(value_h) $(ppc_tdep_h) \
	$(ppcnbsd_tdep_h) $(nbsd_tdep_h) $(solib_svr4_h) $(osabi_h)
d2105 4
d2112 7
a2118 4
procfs.o: procfs.c $(defs_h) $(inferior_h) $(target_h) $(gdbcore_h) \
	$(elf_bfd_h) $(gdbcmd_h) $(gdbthread_h) $(gdb_wait_h) $(gdb_assert_h) \
	$(inflow_h) $(gdb_dirent_h) $(X_OK) $(gdb_stat_h) $(proc_utils_h) \
	$(gregset_h)
d2124 5
d2134 3
d2163 5
a2172 5
remote-vx68.o: remote-vx68.c $(defs_h) $(vx_share_regPacket_h) $(frame_h) \
	$(inferior_h) $(target_h) $(gdbcore_h) $(command_h) $(symtab_h) \
	$(symfile_h) $(regcache_h) $(gdb_string_h) $(vx_share_ptrace_h) \
	$(vx_share_xdr_ptrace_h) $(vx_share_xdr_ld_h) $(vx_share_xdr_rdb_h) \
	$(vx_share_dbgRpcLib_h)
a2182 8
remote.o: remote.c $(defs_h) $(gdb_string_h) $(inferior_h) $(bfd_h) \
	$(symfile_h) $(target_h) $(gdbcmd_h) $(objfiles_h) $(gdb_stabs_h) \
	$(gdbthread_h) $(remote_h) $(regcache_h) $(value_h) $(gdb_assert_h) \
	$(event_loop_h) $(event_top_h) $(inf_loop_h) $(serial_h) \
	$(gdbcore_h) $(solib_h) $(remote-fileio_h)
remote-fileio.o: remote-fileio.c $(defs_h) $(gdb_string_h) $(gdbcmd_h) \
	$(remote_h) $(gdb_fileio_h) $(gdb_wait_h) $(gdb_stat_h) \
	$(remote_fileio_h)
d2192 3
a2194 3
	$(parser_defs_h) $(libbfd_h) $(coff_internal_h) $(libcoff_h) \
	$(coff_xcoff_h) $(libxcoff_h) $(elf_bfd_h) $(solib_svr4_h) \
	$(ppc_tdep_h) $(osabi_h)
d2213 1
d2219 8
a2226 1
serial.o: serial.c $(defs_h) $(serial_h) $(gdb_string_h) $(gdbcmd_h)
d2231 2
a2232 11
	$(regcache_h) $(doublest_h) $(sh_tdep_h) $(elf_bfd_h) \
	$(solib_svr4_h) $(elf_sh_h) $(gdb_sim_sh_h) $(osabi_h)
sh3-rom.o: sh3-rom.c $(defs_h) $(gdbcore_h) $(target_h) $(monitor_h) \
	$(serial_h) $(srec_h) $(arch_utils_h) $(regcache_h) $(gdb_string_h) \
	$(sh_tdep_h)
shnbsd-nat.o: shnbsd-nat.c $(defs_h) $(inferior_h) $(shnbsd_tdep_h)
shnbsd-tdep.o: shnbsd-tdep.c $(defs_h) $(gdbcore_h) $(regcache_h) $(value_h) \
	$(solib_svr4_h) $(nbsd_tdep_h) $(sh_tdep_h) $(shnbsd_tdep_h) $(osabi_h)
sol-thread.o: sol-thread.c $(defs_h) $(gdbthread_h) $(target_h) $(inferior_h) \
	$(gdb_stat_h) $(gdbcmd_h) $(gdbcore_h) $(regcache_h) $(symfile_h) \
	$(gregset_h)
d2237 4
d2252 3
a2254 4
solib.o: solib.c $(defs_h) $(gdb_string_h) $(symtab_h) $(bfd_h) $(symfile_h) \
	$(objfiles_h) $(gdbcore_h) $(command_h) $(target_h) $(frame_h) \
	$(gdb_regex_h) $(inferior_h) $(environ_h) $(language_h) $(gdbcmd_h) \
	$(completer_h) $(filenames_h) $(solist_h) $(readline_h)
d2266 5
a2270 1
	$(filenames_h) $(completer_h) $(ui_out_h) $(readline_h)
d2273 2
a2276 14
sparc-stub.o: sparc-stub.c
sparc-tdep.o: sparc-tdep.c $(defs_h) $(arch_utils_h) $(frame_h) $(inferior_h) \
	$(target_h) $(value_h) $(bfd_h) $(gdb_string_h) $(regcache_h) \
	$(osabi_h) $(gregset_h) $(gdbcore_h) $(gdb_assert_h) $(symfile_h) \
	$(sparc_tdep_h)
sparc64nbsd-nat.o: sparc64nbsd-nat.c $(defs_h) $(inferior_h) $(regcache_h) \
	$(sparcnbsd_tdep_h) $(sparc_tdep_h)
sparcl-stub.o: sparcl-stub.c
sparcl-tdep.o: sparcl-tdep.c $(defs_h) $(gdbcore_h) $(breakpoint_h) \
	$(target_h) $(serial_h) $(regcache_h)
sparclet-rom.o: sparclet-rom.c $(defs_h) $(gdbcore_h) $(target_h) \
	$(monitor_h) $(serial_h) $(srec_h) $(symtab_h) $(symfile_h) \
	$(regcache_h)
sparclet-stub.o: sparclet-stub.c
d2278 1
a2278 1
	$(sparcnbsd_tdep_h) $(sparc_tdep_h)
d2280 7
a2286 2
	$(target_h) $(value_h) $(osabi_h) $(sparcnbsd_tdep_h) $(nbsd_tdep_h) \
	$(solib_svr4_h) $(sparc_tdep_h)
d2291 1
a2291 1
	$(doublest_h) $(stabsread_h) $(cp_abi_h) $(cp_support_h)
d2303 7
a2309 11
symfile.o: symfile.c $(defs_h) $(symtab_h) $(gdbtypes_h) $(gdbcore_h) \
	$(frame_h) $(target_h) $(value_h) $(symfile_h) $(objfiles_h) \
	$(gdbcmd_h) $(breakpoint_h) $(language_h) $(complaints_h) \
	$(demangle_h) $(inferior_h) $(gdb_stabs_h) $(gdb_obstack_h) \
	$(completer_h) $(bcache_h) $(gdb_string_h) $(gdb_stat_h) $(source_h) \
	$(gdb_assert_h) $(readline_h) $(filenames_h) $(block_h)
symm-nat.o: symm-nat.c $(defs_h) $(frame_h) $(inferior_h) $(symtab_h) \
	$(target_h) $(regcache_h) $(gdb_wait_h) $(gdb_stat_h) $(gdbcore_h) \
	$(gdbcore_h)
symm-tdep.o: symm-tdep.c $(defs_h) $(frame_h) $(inferior_h) $(symtab_h) \
	$(gdb_stat_h) $(gdbcore_h)
d2312 4
a2315 2
	$(gdb_obstack_h) $(language_h) $(bcache_h) $(gdb_string_h) \
	$(readline_h) $(block_h) $(gdb_regex_h) $(dictionary_h)
d2319 3
a2321 3
	$(language_h) $(demangle_h) $(inferior_h) $(linespec_h) \
	$(filenames_h) $(gdb_obstack_h) $(gdb_string_h) $(gdb_stat_h) \
	$(cp_abi_h) $(source_h) $(block_h) $(objc_lang_h) $(dictionary_h)
a2324 3
thread-db.o: thread-db.c $(defs_h) $(gdb_assert_h) $(gdb_proc_service_h) \
	$(gdb_thread_db_h) $(bfd_h) $(gdbthread_h) $(inferior_h) \
	$(symfile_h) $(objfiles_h) $(target_h) $(regcache_h)
d2328 3
d2337 1
a2337 1
	$(ui_out_h) $(cli_out_h) $(readline_h)
d2342 3
a2344 2
	$(block_h) $(ax_h) $(ax_gdb_h) $(readline_h) $(dictionary_h)
trad-frame.o: trad-frame.c $(defs_h) $(frame_h) $(trad_frame_h) $(regcache_h)
d2354 4
a2357 4
utils.o: utils.c $(config_h) $(defs_h) $(gdb_assert_h) $(gdb_string_h) \
	$(event_top_h) $(gdbcmd_h) $(serial_h) $(bfd_h) $(target_h) \
	$(demangle_h) $(expression_h) $(language_h) $(annotate_h) \
	$(filenames_h) $(inferior_h) $(mmalloc_h) $(charset_h) $(readline_h)
d2360 3
a2365 3
v850ice.o: v850ice.c $(defs_h) $(gdb_string_h) $(frame_h) $(symtab_h) \
	$(inferior_h) $(breakpoint_h) $(symfile_h) $(target_h) $(objfiles_h) \
	$(gdbcore_h) $(value_h) $(command_h) $(regcache_h)
d2371 2
a2372 2
	$(gdbcmd_h) $(regcache_h) $(cp_abi_h) $(gdb_string_h) \
	$(gdb_assert_h) $(block_h) $(dictionary_h) $(cp_support_h)
d2384 1
a2384 1
	$(gdb_string_h) $(vax_tdep_h) $(osabi_h)
d2391 4
a2395 3
wince.o: wince.c $(defs_h) $(frame_h) $(inferior_h) $(target_h) $(gdbcore_h) \
	$(command_h) $(buildsym_h) $(symfile_h) $(objfiles_h) $(gdb_string_h) \
	$(gdbthread_h) $(gdbcmd_h) $(wince_stub_h) $(regcache_h) $(mips_tdep_h)
d2398 6
a2403 6
	$(regcache_h) $(gdb_assert_h) $(gdb_string_h) $(gregset_h) \
	$(x86_64_tdep_h) $(gdb_proc_service_h)
x86-64-linux-tdep.o: x86-64-linux-tdep.c $(defs_h) $(inferior_h) $(gdbcore_h) \
	$(regcache_h) $(osabi_h) $(gdb_string_h) $(x86_64_tdep_h) 
x86-64-tdep.o: x86-64-tdep.c $(defs_h) \
	$(inferior_h) $(gdbcore_h) $(arch_utils_h) $(block_h) \
d2405 1
a2405 1
	$(inferior_h) $(gdbcmd_h) $(gdbcode_h) $(objfiles_h) $(regcache_h) \
d2418 1
a2418 2
z8k-tdep.o: z8k-tdep.c $(defs_h) $(frame_h) $(symtab_h) $(gdbcmd_h) \
	$(gdbtypes_h) $(dis_asm_h) $(gdbcore_h) $(regcache_h) $(value_h)
d2427 5
a2431 4
	$(gdb_wait_h) $(gdb_regex_h) $(gdb_string_h) $(filenames_h) \
	$(ui_out_h) $(top_h) $(cli_decode_h) $(cli_script_h) \
	$(cli_setshow_h) $(cli_cmds_h) $(source_h) $(linespec_h) \
	$(expression_h) $(language_h) $(objfiles_h) $(gdb_vfork_h)
d2439 1
a2439 1
	$(cli_dump_h) $(gdb_assert_h) $(target_h) $(readline_h)
d2444 2
a2445 1
cli-logging.o: $(srcdir)/cli/cli-logging.c $(defs_h) $(ui_out_h) $(gdbcmd_h)
a2617 4
mi-cmd-file.o: $(srcdir)/mi/mi-cmd-file.c $(defs_h) $(mi_cmds_h) \
	$(ui_out_h) $(mi_out_h) $(breakpoint_h) $(gdb_string_h) \
	$(mi_getopt_h) $(gdb_events_h) $(gdb_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/mi/mi-cmd-file.c
d2619 1
a2619 1
	$(mi_cmds_h) $(mi_getopt_h) $(ui_out_h) $(gdb_string_h) $(disasm_h)
d2623 2
a2624 1
	$(environ_h) $(command_h) $(ui_out_h) $(top_h) $(gdb_string_h)
d2626 6
d2633 2
a2634 2
	$(value_h) $(mi_cmds_h) $(ui_out_h) $(symtab_h) $(block_h) $(stack_h) \
	$(dictionary_h)
a2638 3
mi-cmds.o: $(srcdir)/mi/mi-cmds.c $(defs_h) $(top_h) $(mi_cmds_h) \
	$(gdb_string_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/mi/mi-cmds.c
d2653 1
a2653 1
	$(gdb_h) $(frame_h)
d2660 2
a2661 2
mi-symbol-cmds.o: $(srcdir)/mi/mi-symbol-cmds.c $(defs_h) \
	$(mi_cmds_h) $(ui_out_h) $(symtab_h)
d2686 2
a2687 1
signals.o: $(srcdir)/signals/signals.c $(defs_h) $(target_h) $(gdb_string_h)
d2696 2
a2697 24
tui-file.o: $(srcdir)/tui/tui-file.c $(defs_h) $(ui_file_h) $(tui_file_h) \
	$(tui_tuiIO_h) $(tui_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tui-file.c
tui-hooks.o: $(srcdir)/tui/tui-hooks.c $(config_h) $(defs_h) $(symtab_h) \
	$(inferior_h) $(command_h) $(bfd_h) $(symfile_h) $(objfiles_h) \
	$(target_h) $(gdbcore_h) $(event_loop_h) $(frame_h) $(breakpoint_h) \
	$(gdb_events_h) $(tui_h) $(tuiData_h) $(tuiLayout_h) $(tuiIO_h) \
	$(tuiRegs_h) $(tuiWin_h) $(tuiStack_h) $(tuiDataWin_h) \
	$(tuiSourceWin_h) $(readline_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tui-hooks.c
tui-interp.o: $(srcdir)/tui/tui-interp.c $(defs_h) $(interps_h) $(top_h) \
	$(event_top_h) $(event_loop_h) $(ui_out_h) $(tui_tuiData_h) \
	$(readline_h) $(tui_tuiWin_h) $(tui_h) $(tui_tuiIO_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tui-interp.c
tui-out.o: $(srcdir)/tui/tui-out.c $(defs_h) $(ui_out_h) $(tui_h) \
	$(gdb_string_h) $(gdb_assert_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tui-out.c
tui.o: $(srcdir)/tui/tui.c $(config_h) $(defs_h) $(gdbcmd_h) $(tui_h) \
	$(tuiData_h) $(tuiLayout_h) $(tuiIO_h) $(tuiRegs_h) $(tuiStack_h) \
	$(tuiWin_h) $(tuiSourceWin_h) $(readline_h) $(target_h) $(frame_h) \
	$(breakpoint_h) $(inferior_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tui.c
tuiCommand.o: $(srcdir)/tui/tuiCommand.c $(config_h) $(defs_h) $(tui_h) \
	$(tuiData_h) $(tuiWin_h) $(tuiIO_h)
d2699 4
a2702 1
tuiData.o: $(srcdir)/tui/tuiData.c $(config_h) $(defs_h) $(tui_h) \
d2705 4
a2708 7
tuiDataWin.o: $(srcdir)/tui/tuiDataWin.c $(config_h) $(defs_h) $(tui_h) \
	$(tuiData_h) $(tuiGeneralWin_h) $(tuiRegs_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tuiDataWin.c
tuiDisassem.o: $(srcdir)/tui/tuiDisassem.c $(config_h) $(defs_h) $(symtab_h) \
	$(breakpoint_h) $(frame_h) $(value_h) $(tui_h) $(tuiData_h) \
	$(tuiWin_h) $(tuiLayout_h) $(tuiSourceWin_h) $(tuiStack_h) \
	$(tui_file_h) $(disasm_h)
d2710 2
a2711 2
tuiGeneralWin.o: $(srcdir)/tui/tuiGeneralWin.c $(config_h) $(defs_h) \
	$(tui_h) $(tuiData_h) $(tuiGeneralWin_h) $(tuiWin_h)
d2713 2
a2714 2
tuiIO.o: $(srcdir)/tui/tuiIO.c $(config_h) $(defs_h) $(terminal_h) \
	$(target_h) $(event_loop_h) $(command_h) $(top_h) $(readline_h) \
d2718 2
a2719 2
tuiLayout.o: $(srcdir)/tui/tuiLayout.c $(config_h) $(defs_h) $(command_h) \
	$(symtab_h) $(frame_h) $(tui_h) $(tuiData_h) $(tuiDataWin_h) \
d2723 2
a2724 2
tuiRegs.o: $(srcdir)/tui/tuiRegs.c $(config_h) $(defs_h) $(tui_h) \
	$(tuiData_h) $(symtab_h) $(gdbtypes_h) $(gdbcmd_h) $(frame_h) \
d2728 2
a2729 6
tuiSource.o: $(srcdir)/tui/tuiSource.c $(config_h) $(defs_h) $(symtab_h) \
	$(frame_h) $(breakpoint_h) $(source_h) $(symtab_h) $(tui_h) \
	$(tuiData_h) $(tuiStack_h) $(tuiSourceWin_h) $(tuiSource_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tuiSource.c
tuiSourceWin.o: $(srcdir)/tui/tuiSourceWin.c $(config_h) $(defs_h) \
	$(symtab_h) $(frame_h) $(breakpoint_h) $(value_h) $(tui_h) \
d2733 8
a2740 3
tuiStack.o: $(srcdir)/tui/tuiStack.c $(config_h) $(defs_h) $(symtab_h) \
	$(breakpoint_h) $(frame_h) $(command_h) $(tui_h) $(tuiData_h) \
	$(tuiStack_h) $(tuiGeneralWin_h) $(tuiSource_h) $(tuiSourceWin_h)
d2742 4
a2745 5
tuiWin.o: $(srcdir)/tui/tuiWin.c $(config_h) $(defs_h) $(command_h) \
	$(symtab_h) $(breakpoint_h) $(frame_h) $(cli_cmds_h) $(tui_h) \
	$(tuiData_h) $(tuiGeneralWin_h) $(tuiStack_h) $(tuiRegs_h) \
	$(tuiDisassem_h) $(tuiSource_h) $(tuiSourceWin_h) $(tuiDataWin_h) \
	$(readline_h)
d2747 22
@


1.420
log
@2003-07-17  Elena Zannoni  <ezannoni@@redhat.com>

	* Makefile.in (x86-64-linux-nat.o): Update dependencies.
	* x86-64-linux-nat.c (ps_get_thread_area): New function.  Add
	include of asm/prctl.h, asm/ptrace.h, and gdb_proc_service.h.
@
text
@d1684 2
a1685 1
	$(dwarf2loc_h) $(ax_h) $(ax_gdb_h) $(regcache_h) $(gdb_string_h)
@


1.419
log
@* configure.host: Add x86_64-*-freebsd*.
* configure.tgt: Add x86_64-*-freebsd*.
* Makefile.in (amd64fbsd-nat.o, amd64fbsd-tdep.o): New targets.
* amd64fbsd-nat.c: New file.
* amd64fbsd-tdep.c: New file.
* config/i386/nm-fbsd64.h: New file.
* config/i386/fbsd64.mh: New file.
* config/i386/fbsd64.mt: New file.
@
text
@d2377 1
a2377 1
	$(x86_64_tdep_h)
@


1.418
log
@* Makefile.in: Quote sed expression when generating transformed_name.
@
text
@d1532 5
@


1.417
log
@        * Makefile.in (dwarf2-frame.o): Add complaints_h.
        * dwarf2-frame.c: Include complaints.h.
        (decode_frame_entry_1): Rename from decode_frame_entry; tidy
        variable initialization; return NULL on error.
        (decode_frame_entry): New.
@
text
@d961 1
a961 1
			  echo gdb | sed -e $$t` ; \
@


1.416
log
@2003-07-08  Andrew Cagney  <cagney@@redhat.com>

	* Makefile.in: Make dependency section headers consistent.
	(config_h): Move to $BUILD headers section.
	(exc_request_U_h, exc_request_S_h, msg_reply_S_h): Ditto.
	(msg_U_h, notify_S_h, process_reply_S_h): Ditto.
	(ada-exp.tab.c): Move to YACC/LEX section.
	(ada-lex.c, c-exp.tab.c, f-exp.tab.c): Ditto.
	(jv-exp.tab.c, m2-exp.tab.c, objc-exp.tab.c, p-exp.tab.c): Ditto.
@
text
@d1683 1
a1683 1
	$(gdb_string_h) $(dwarf2_frame_h)
@


1.415
log
@	* Makefile.in (sparc_tdep_h): New.
	(sparc-linux-nat.o, sparc-nat.o, sparc-tdep.o, sparc64nbsd-nat.o)
	(sparcnbsd-nat.o, sparcnbsd-tdep.o): Depend on $(sparc_tdep_h).
	* sparc-linux-nat.c: Include "sparc-tdep.h".
	* sparc-nat.c: Likewise.
	* sparc-tdep.c: Likewise.
	* sparc64nbsd-nat.c: Likewise.
	* sparcnbsd-nat.c: Likewise.
	* sparcnbsd-tdep.c: Likewise.
	* sparc-tdep.h: New file.
	* config/sparc/tm-sparc.h: Remove prototypes for sparc_y_regnum
	and sparc_npc_regnum.
@
text
@d602 16
d623 1
a623 1
# gdb/ header files
a646 1
config_h = config.h
a664 2
exc_request_U_h = exc_request_U.h
exc_request_S_h = exc_request_S.h
a714 2
msg_reply_S_h = msg_reply_S.h
msg_U_h = msg_U.h
a715 1
notify_S_h = notify_S.h
a727 1
process_reply_S_h = process_reply_S.h
a1227 135
# LANG-exp.tab.c is generated in objdir from LANG-exp.y if it doesn't
# exist in srcdir, then compiled in objdir to LANG-exp.tab.o.

# If we said LANG-exp.tab.c rather than ./c-exp.tab.c some makes would
# sometimes re-write it into $(srcdir)/c-exp.tab.c.

# Remove bogus decls for malloc/realloc/free which conflict with
# everything else.  Strictly speaking c-exp.tab.c should therefore
# depend on Makefile.in, but that was a pretty big annoyance.

# See comments above ...
.PRECIOUS: c-exp.tab.c
c-exp.tab.o: c-exp.tab.c
c-exp.tab.c: c-exp.y
	$(SHELL) $(YLWRAP) "$(YACC)" $(srcdir)/c-exp.y  y.tab.c c-exp.tmp -- $(YFLAGS) 
	-sed -e '/extern.*malloc/d' \
	     -e '/extern.*realloc/d' \
	     -e '/extern.*free/d' \
	     -e '/include.*malloc.h/d' \
	     -e 's/malloc/xmalloc/g' \
	     -e 's/realloc/xrealloc/g' \
	     -e '/^#line.*y.tab.c/d' \
	  < c-exp.tmp > c-exp.new
	-rm c-exp.tmp
	mv c-exp.new ./c-exp.tab.c

# See comments above ...
.PRECIOUS: objc-exp.tab.c
objc-exp.tab.o: objc-exp.tab.c
objc-exp.tab.c: objc-exp.y
	$(SHELL) $(YLWRAP) "$(YACC)" $(srcdir)/objc-exp.y y.tab.c objc-exp.tmp -- $(YFLAGS) 
	-sed -e '/extern.*malloc/d' \
	     -e '/extern.*realloc/d' \
	     -e '/extern.*free/d' \
	     -e '/include.*malloc.h/d' \
	     -e 's/malloc/xmalloc/g' \
	     -e 's/realloc/xrealloc/g' \
	     -e '/^#line.*y.tab.c/d' \
	  < objc-exp.tmp > objc-exp.new
	-rm objc-exp.tmp
	mv objc-exp.new ./objc-exp.tab.c

# See comments above ...
.PRECIOUS: jv-exp.tab.c
jv-exp.tab.o: jv-exp.tab.c
jv-exp.tab.c: jv-exp.y
	$(SHELL) $(YLWRAP) "$(YACC)" $(srcdir)/jv-exp.y  y.tab.c jv-exp.tmp -- $(YFLAGS) 
	-sed -e '/extern.*malloc/d' \
	     -e '/extern.*realloc/d' \
	     -e '/extern.*free/d' \
	     -e '/include.*malloc.h/d' \
	     -e 's/malloc/xmalloc/g' \
	     -e 's/realloc/xrealloc/g' \
	     -e '/^#line.*y.tab.c/d' \
	  < jv-exp.tmp > jv-exp.new
	-rm jv-exp.tmp
	mv jv-exp.new ./jv-exp.tab.c

# See comments above ...
.PRECIOUS: f-exp.tab.c
f-exp.tab.o: f-exp.tab.c
f-exp.tab.c: f-exp.y
	$(SHELL) $(YLWRAP) "$(YACC)" $(srcdir)/f-exp.y  y.tab.c f-exp.tmp -- $(YFLAGS) 
	-sed -e '/extern.*malloc/d' \
	     -e '/extern.*realloc/d' \
	     -e '/extern.*free/d' \
	     -e '/include.*malloc.h/d' \
	     -e 's/malloc/xmalloc/g' \
	     -e 's/realloc/xrealloc/g' \
	     -e '/^#line.*y.tab.c/d' \
	  < f-exp.tmp > f-exp.new
	-rm f-exp.tmp
	mv f-exp.new ./f-exp.tab.c

# See comments above ...
.PRECIOUS: m2-exp.tab.c
m2-exp.tab.o: m2-exp.tab.c
m2-exp.tab.c: m2-exp.y
	$(SHELL) $(YLWRAP) "$(YACC)" $(srcdir)/m2-exp.y  y.tab.c m2-exp.tmp -- $(YFLAGS) 
	-sed -e '/extern.*malloc/d' \
	     -e '/extern.*realloc/d' \
	     -e '/extern.*free/d' \
	     -e '/include.*malloc.h/d' \
	     -e 's/malloc/xmalloc/g' \
	     -e 's/realloc/xrealloc/g' \
	     -e '/^#line.*y.tab.c/d' \
	  < m2-exp.tmp > m2-exp.new
	-rm m2-exp.tmp
	mv m2-exp.new ./m2-exp.tab.c

# See comments above ...
.PRECIOUS: ada-exp.tab.c
ada-exp.tab.o: ada-exp.tab.c
ada-exp.tab.c: ada-exp.y 
	$(YACC) $(YFLAGS) $(srcdir)/ada-exp.y
	-sed -e '/extern.*malloc/d' \
	-e '/extern.*realloc/d' \
	-e '/extern.*free/d' \
	-e '/include.*malloc.h/d' \
	-e 's/malloc/xmalloc/g' \
	-e 's/realloc/xrealloc/g' \
	< y.tab.c > ada-exp.new
	-rm y.tab.c
	mv ada-exp.new ./ada-exp.tab.c

# See comments above ...
.PRECIOUS: ada-lex.c
ada-lex.o: ada-lex.c
ada-lex.c: ada-lex.l
	@@if [ "$(FLEX)" ] && $(FLEX) --version >/dev/null 2>&1; then \
	    echo $(FLEX) -Isit $(srcdir)/ada-lex.l ">" ada-lex.c; \
	    $(FLEX) -Isit $(srcdir)/ada-lex.l > ada-lex.c; \
	elif [ ! -f ada-lex.c -a ! -f $(srcdir)/ada-lex.c ]; then \
	    echo "ada-lex.c missing and flex not available."; \
	    false; \
	elif [ ! -f ada-lex.c ]; then \
	    echo "Warning: ada-lex.c older than ada-lex.l and flex not available."; \
	fi

# See comments above ...
.PRECIOUS: p-exp.tab.c
p-exp.tab.o: p-exp.tab.c
p-exp.tab.c: p-exp.y
	$(SHELL) $(YLWRAP) "$(YACC)" $(srcdir)/p-exp.y  y.tab.c p-exp.tmp -- $(YFLAGS)
	-sed -e '/extern.*malloc/d' \
	     -e '/extern.*realloc/d' \
	     -e '/extern.*free/d' \
	     -e '/include.*malloc.h/d' \
	     -e 's/malloc/xmalloc/g' \
	     -e 's/realloc/xrealloc/g' \
	     -e '/^#line.*y.tab.c/d' \
	  < p-exp.tmp > p-exp.new
	-rm p-exp.tmp
	mv p-exp.new ./p-exp.tab.c

d1348 1
a1348 1
# Generated YACC/LEX dependencies
d1350 7
d1358 29
d1391 29
a1419 5

objc-exp.tab.o: objc-exp.tab.c $(objc_lang_h) $(defs_h) $(expression_h) \
	$(gdbtypes_h) $(language_h) $(parser_defs_h) $(symtab_h) $(value_h) \
	$(bfd_h) $(objfiles_h) $(symfile_h) $(block_h)

d1423 13
a1435 5

f-exp.tab.o: f-exp.tab.c f-lang.h $(defs_h) $(expression_h) \
	$(language_h) $(parser_defs_h) $(value_h) $(bfd_h) $(objfiles_h) \
	$(symfile_h) $(block_h)

d1439 29
a1467 1

d1471 12
a1482 5

ada-exp.tab.o: ada-exp.tab.c ada-lex.c ada-lang.h \
	$(defs_h) $(expression_h) \
	$(gdbtypes_h) language.h parser-defs.h $(symtab_h) $(value_h) \
	$(bfd_h) objfiles.h symfile.h $(block_h)
d1485 1
a1485 1
# The dependencies.  In aphabetic order.
d2398 1
a2398 1
# or try to compile the object file into the cli directory.
d2584 1
a2584 1
# or try to compile the object file into the mi directory.
d2653 1
a2653 1
# Signals sub-directory
d2656 1
a2656 1
# or try to compile the object file into the mi directory.
d2662 1
a2662 1
# TUI dependencies
d2665 1
a2665 1
# or try to compile the object file into the mi directory.
@


1.414
log
@	* Makefile.in (m68k-tdep.o, m68klinux-tdep.o): Update
	dependencies.
	* m68k-tdep.c (NUM_FREGS): Delete.
	(SIG_PC_FP_OFFSET): Delete.
	(TARGET_M68K): Delete.
	(P_MOVEAL_SP_FP, P_ADDAW_SP, P_ADDAL_SP, P_SUBQW_SP,
	P_SUBQL_SP, P_LEA_SP_SP, P_LEA_PC_A5, P_FMOVEMX_SP,
	P_MOVEL_SP, P_MOVEML_SP): Define.
	(P_MOVL_SP_FP, P_MOVL, P_JSR, P_BSR, P_LEAL, P_MOVML, P_FMOVM,
	P_TRAP): Delete.
        (m68k_register_raw_size): Delete.
	(m68k_register_virtual_size): Delete.
	(m68k_register_type): Renamed from m68k_register_virtual_type and
	add gdbarch argument.
	(m68k_store_struct_return): Delete.
	(m68k_deprecated_extract_return_value): Delete.
	(m68k_deprecated_extract_struct_value_address): Delete.
	(m68k_frame_chain): Delete.
	(m68k_frame_saved_pc): Delete.
	(m68k_fix_call_dummy): Delete.
	(m68k_push_dummy_frame): Delete.
	(m68k_pop_frame): Delete.
	(m68k_extract_return_value): New function.
	(m68k_store_return_value): Rewrite using regcache.
	(m68k_extract_struct_value_address): Rewrite using regcache.
	(m68k_push_dummy_call): New function.
	(struct m68k_frame_cache): Define.
	(m68k_alloc_frame_cache): New function.
	(m68k_analyze_frame_setup): New function.
	(m68k_analyze_register_saves): New function.
	(m68k_analyze_prologue): New function.
	(m68k_skip_prologue): Rewrite using above functions.
	(m68k_unwind_pc): New function.
	(m68k_frame_cache): New function.
	(m68k_frame_this_id): New function.
	(m68k_frame_prev_register): New function.
	(m68k_frame_unwind): New variable.
	(m68k_frame_p): New function.
	(m68k_sigtramp_frame_cache): New function.
	(m68k_sigtramp_frame_this_id): New function.
	(m68k_sigtramp_frame_prev_register): New function.
	(m68k_sigtramp_frame_unwind): New variable.
	(m68k_sigtramp_frame_p): New function.
	(m68k_frame_base_address): New function.
	(m68k_frame_base): New function.
	(m68k_unwind_dummy_id): New function.
	(fill_gregset): Use regcache_collect.
	(fill_fpregset): Likewise.
	(m68k_saved_pc_after_call): Only define if SYSCALL_TRAP is
	defined.
	(m68k_gdbarch_init): Don't define call_dummy_words.  Don't set
	deprecated_init_frame_pc, deprecated_store_struct_return,
	deprecated_extract_return_value, deprecated_store_return_value,
	deprecated_frame_chain, deprecated_frame_saved_pc,
	deprecated_frame_init_saved_regs, deprecated_register_raw_size,
	deprecated_register_virtual_size,
	deprecated_max_register_raw_size,
	deprecated_max_register_virtual_size,
	deprecated_register_virtual_type, deprecated_register_size,
	deprecated_register_byte, deprecated_register_bytes,
	deprecated_fp_regnum, deprecated_use_generic_dummy_frames,
	call_dummy_location, deprecated_call_dummy_breakpoint_offset,
	deprecated_pc_in_call_dummy, deprecated_call_dummy_length,
	deprecated_call_dummy_start_offset, deprecated_call_dummy_words,
	deprecated_sizeof_call_dummy_words, deprecated_fix_call_dummy,
	deprecated_push_dummy_frame, deprecated_pop_frame,
	deprecated_dummy_write_sp.  Set deprecated_saved_pc_after_call
	only if SYSCALL_TRAP is defined.  Set extract_return_value,
	store_return_value, extract_struct_value_address, register_type,
	push_dummy_call, unwind_dummy_id, unwind_pc.  Add two frame unwind
	predicates.
	* m68k-tdep.h (M68K_D1_REGNUM, M68K_NUM_REGS,
	M68K_MAX_REGISTER_SIZE): Define.
	(struct m68k_sigtramp_info): Define.
	(struct gdbarch_tdep): Add get_sigtramp_info.
	* m68klinux-nat.c (fetch_register): Use register_size instead of
	REGISTER_RAW_SIZE.  Don't put assignment in if.
	(store_register): Likewise.
	(fetch_inferior_registers): Likewise.
	(store_inferior_registers): Likewise.
	* m68klinux-tdep.c (m68k_linux_sigtramp_saved_pc): Delete.
	(m68k_linux_frame_saved_pc): Delete.
	(m68k_linux_sigcontext_reg_offset,
	m68k_linux_ucontext_reg_offset): Define.
	(m68k_linux_get_sigtramp_info): New function.
	(m68k_linux_extract_return_value): Rewrite using regcache.
	(m68k_linux_store_return_value): Likewise.
	(m68k_linux_extract_struct_value_address): Likewise.
	(m68k_linux_init_abi): Set get_sigtramp_info in tdep structure.
	Don't set deprecated_frame_saved_pc,
	deprecated_extract_return_value, deprecated_store_return_value,
	deprecated_extract_struct_value_address.  Set
	extract_return_value, store_return_value,
	extract_struct_value_address.
@
text
@d737 1
d2260 2
a2261 1
sparc-linux-nat.o: sparc-linux-nat.c $(defs_h) $(regcache_h) $(gregset_h)
d2263 1
a2263 1
	$(regcache_h) $(gdb_wait_h)
d2267 2
a2268 1
	$(osabi_h) $(gregset_h) $(gdbcore_h) $(gdb_assert_h) $(symfile_h)
d2270 1
a2270 1
	$(sparcnbsd_tdep_h)
d2279 1
a2279 1
	$(sparcnbsd_tdep_h)
d2282 1
a2282 1
	$(solib_svr4_h)
@


1.413
log
@2003-07-07  Andrew Cagney  <cagney@@redhat.com>

	* expprint.c: Include "user-regs.h" instead of "frame.h".
	(print_subexp): Use user_reg_map_regnum_to_name, instead of
	frame_map_regnum_to_name.
	* frame.c: Include "user-regs.h" instead of "builtin-regs.h".
	(frame_map_name_to_regnum): Simplify, call
	user_reg_map_name_to_regnum.
	(frame_map_regnum_to_name): Simplify, call
	user_reg_map_regnum_to_name.
	(frame_register_unwind): Update.
	* std-regs.c: Include "user-regs.h" instead of "builtin-regs.h".
	(_initialize_frame_reg): Call user_reg_add_builtin.
	* findvar.c: Include "user-regs.h" instead of "builtin-regs.h".
	(value_of_register): Use value_of_user_reg.
	* eval.c (evaluate_subexp_standard): Update.
	* parse.c (write_dollar_variable): Update.
	* d10v-tdep.c (d10v_print_registers_info): Update.
	* infcmd.c (registers_info): Update.
	* Makefile.in (SFILES): Delete "builtin-regs.c", add "user-regs.c".
	(builtin_regs_h): Delete macro.
	(user_regs_h): Define.
	(COMMON_OBS): Delete "builtin-regs.o", add "user-regs.o".
	(builtin-regs.o): Delete target.
	(user-regs.o): Specify dependencies.
	(expprint.o): Update dependencies.
	(findvar.o): Update dependencies.
	(frame.o): Update dependencies.
	(std-regs.o): Update dependencies.
@
text
@d1953 4
a1956 3
m68k-tdep.o: m68k-tdep.c $(defs_h) $(frame_h) $(symtab_h) $(gdbcore_h) \
	$(value_h) $(gdb_string_h) $(inferior_h) $(regcache_h) \
	$(arch_utils_h) $(gregset_h) $(osabi_h) $(m68k_tdep_h)
d1960 3
a1962 3
m68klinux-tdep.o: m68klinux-tdep.c $(defs_h) $(gdbcore_h) $(frame_h) \
	$(target_h) $(gdb_string_h) $(gdbtypes_h) $(osabi_h) $(regcache_h) \
	$(objfiles_h) $(symtab_h) $(m68k_tdep_t)
@


1.412
log
@2003-06-30  David Carlton  <carlton@@kealia.com>

	Band-aid for PR c++/1245.
	* Makefile.in (cp-support.o): Depend on complaints_h.
	* cp-support.c: Include complaints.h.  Add declaration for
	find_last_component.
	(cp_find_first_component): Separate code into
	cp_find_first_component_aux.
	(cp_find_first_component_aux): Call demangled_name_complaint.
	(demangled_name_complaint): New.

2003-06-30  David Carlton  <carlton@@kealia.com>

	* gdb.c++/maint.exp (test_invalid_name): New.
	(test_first_component): Add tests for invalid names.
@
text
@d513 1
a513 1
	bcache.c block.c blockframe.c breakpoint.c buildsym.c builtin-regs.c \
d557 1
a621 1
builtin_regs_h = builtin-regs.h
d752 1
d866 1
a866 1
	builtin-regs.o std-regs.o \
d886 1
a1601 2
builtin-regs.o: builtin-regs.c $(defs_h) $(builtin_regs_h) $(gdbtypes_h) \
	$(gdb_string_h) $(gdb_assert_h)
d1731 2
a1732 2
	$(value_h) $(language_h) $(parser_defs_h) $(target_h) $(gdb_string_h) \
	$(block_h)
d1747 1
a1747 1
	$(builtin_regs_h) $(block_h)
d1752 1
a1752 1
	$(regcache_h) $(gdb_assert_h) $(gdb_string_h) $(builtin_regs_h) \
d2291 1
a2291 1
std-regs.o: std-regs.c $(defs_h) $(builtin_regs_h) $(frame_h) $(gdbtypes_h) \
d2345 2
@


1.411
log
@./
	* cli/cli-logging.c: New file.
	* cli-out.c (struct ui_out_data): Add original_stream.
	(cli_redirect): New function.
	(cli_ui_out_impl): Add cli_redirect.
	(cli_out_new): Initialize original_stream.
	* ui-out.c (default_ui_out_impl): Add NULL for redirect member.
	(uo_redirect, ui_out_redirect): New.
	* ui-out.h (struct ui_out_impl): Add redirect member.
	(redirect_ftype): New.
	(ui_out_redirect): Add prototype.
	* Makefile.in: Add rules for cli-logging.c.
	* NEWS: Mention "set logging".
mi/
	* mi-out.c (mi_ui_out_impl): Add NULL for redirect member.
tui/
	* tui-out.c (tui_ui_out_impl): Add NULL for redirect member.
doc/
	* gdb.texinfo (Logging output): New chapter.
@
text
@d1650 1
a1650 1
	$(objfiles_h) $(frame_h) $(block_h)
@


1.410
log
@2003-06-21  Andrew Cagney  <cagney@@redhat.com>

	* mips-tdep.c: Include "reggroups.h" and "sim-regno.h".
	(mips_register_name): Return names for NUM_REGS..2*NUM_REGS
	instead of 0..NUM_REGS.
	(mips_register_reggroup_p): New function.
	(mips_pseudo_register_write): New function.
	(mips_pseudo_register_read): New function.
	(mips_register_raw_size): For NUM_REGS..2*NUM_REGS return the size
	based on the register's type.
	(read_next_frame_reg): Simplify.  Assert that REGNO is a pseudo /
	cooked.
	(mips_get_saved_register): Simplify.  Assert that REGNO is a
	pseudo / cooked.
	(mips_register_byte): New function.  Use MIPS_REGISTER_BYTE.
	(mips_register_type): Replace mips_register_virtual_type.  Map
	NUM_REGS..2*NUM_REGS onto 0..NUM_REGS.  Use MIPS_REGISTER_TYPE
	when available.
	(read_next_frame_reg): Simplify, but handle SP_REGNUM.  Assert
	that the register is cooked / virtual.
	(mips_frame_saved_pc): Fetch the cooked PC, and not the raw PC.
	Only get the extra info when needed.
	(set_reg_offset): Save the offset in NUM_REGS..2*NUM_REGS as well.
	(mips32_heuristic_proc_desc): Fetch the cooked register.
	(heuristic_proc_desc, mips_pop_frame, get_frame_pointer): Ditto.
	(mips_init_extra_frame_info, get_frame_pointer): Ditto.
	(mips_print_register): Use gdbarch_register_type, instead of
	REGISTER_VIRTUAL_TYPE.
	(print_gp_register_row): Use gdbarch_register_type, instead of
	REGISTER_VIRTUAL_TYPE.  Allow for a pseudo / cooked REGNUM.
	(mips_print_registers_info): Assert REGNO is pseodo / cooked.
	Print the pseudo / cooked registers.
	(mips_print_registers_info): Assert REGNO is pseodo / cooked.
	Print the pseudo / cooked registers.
	(mips_xfer_register): Use regcache_cooked_read_part.  Assert that
	REG_NUM is pseudo / cooked.
	(mips_o32_xfer_return_value): Xfer the pseudo / cooked register.
	(mips_n32n64_xfer_return_value): Ditto.
	(mips_stab_reg_to_regnum): Map onto NUM_REGS..2*NUM_REGS.
	(mips_dwarf_dwarf2_ecoff_reg_to_regnum): Ditto.
	(mips_register_sim_regno): New function.
	(mips_gdbarch_init): Set deprecated_register_byte,
	register_group_p, pseudo_register_write, pseudo_register_read,
	register_sim_regno, and num_pseudo_regs.  Set register_type,
	instead of register_virtual_type.
	* Makefile.in (mips-tdep.o): Update dependencies.
	* config/mips/tm-mips64.h (MIPS_REGISTER_TYPE): Rename
	REGISTER_VIRTUAL_TYPE.
	* config/mips/tm-mips.h	(MIPS_REGISTER_TYPE): Ditto.
	* config/mips/tm-irix5.h (MIPS_REGISTER_TYPE): Ditto.
	* config/mips/tm-mips.h (MIPS_REGISTER_BYTE): Rename REGISTER_BYTE.
	* config/mips/tm-irix6.h (MIPS_REGISTER_BYTE): Ditto.
	* config/mips/tm-irix5.h (MIPS_REGISTER_BYTE): Ditto.
@
text
@d149 1
d154 1
d2415 1
a2415 1
# or try to compile the object file into the mi directory.
d2434 2
@


1.410.2.1
log
@2003-06-30  David Carlton  <carlton@@kealia.com>

	Band-aid for PR c++/1245.
	* Makefile.in (cp-support.o): Depend on complaints_h.
	* cp-support.c: Include complaints.h.  Add declaration for
	find_last_component.
	(cp_find_first_component): Separate code into
	cp_find_first_component_aux.
	(cp_find_first_component_aux): Call demangled_name_complaint.
	(demangled_name_complaint): New.

2003-06-30  David Carlton  <carlton@@kealia.com>

	* gdb.c++/maint.exp (test_invalid_name): New.
	(test_first_component): Add tests for invalid names.
@
text
@d1648 1
a1648 1
	$(objfiles_h) $(frame_h) $(block_h) $(complaints_h)
@


1.410.2.2
log
@./
	* cli/cli-logging.c: New file.
	* cli-out.c (struct ui_out_data): Add original_stream.
	(cli_redirect): New function.
	(cli_ui_out_impl): Add cli_redirect.
	(cli_out_new): Initialize original_stream.
	* ui-out.c (default_ui_out_impl): Add NULL for redirect member.
	(uo_redirect, ui_out_redirect): New.
	* ui-out.h (struct ui_out_impl): Add redirect member.
	(redirect_ftype): New.
	(ui_out_redirect): Add prototype.
	* Makefile.in: Add rules for cli-logging.c.
	* NEWS: Mention "set logging".
mi/
	* mi-out.c (mi_ui_out_impl): Add NULL for redirect member.
tui/
	* tui-out.c (tui_ui_out_impl): Add NULL for redirect member.
doc/
	* gdb.texinfo (Logging output): New chapter.
@
text
@a148 1
	cli-logging.o \
a152 1
	cli/cli-logging.c \
d2413 1
a2413 1
# or try to compile the object file into the cli directory.
a2431 2
cli-logging.o: $(srcdir)/cli/cli-logging.c $(defs_h) $(ui_out_h) $(gdbcmd_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/cli/cli-logging.c
@


1.410.2.3
log
@	* Makefile.in (m68k-tdep.o, m68klinux-tdep.o): Update
	dependencies.
	* m68k-tdep.c (NUM_FREGS): Delete.
	(SIG_PC_FP_OFFSET): Delete.
	(TARGET_M68K): Delete.
	(P_MOVEAL_SP_FP, P_ADDAW_SP, P_ADDAL_SP, P_SUBQW_SP,
	P_SUBQL_SP, P_LEA_SP_SP, P_LEA_PC_A5, P_FMOVEMX_SP,
	P_MOVEL_SP, P_MOVEML_SP): Define.
	(P_MOVL_SP_FP, P_MOVL, P_JSR, P_BSR, P_LEAL, P_MOVML, P_FMOVM,
	P_TRAP): Delete.
        (m68k_register_raw_size): Delete.
	(m68k_register_virtual_size): Delete.
	(m68k_register_type): Renamed from m68k_register_virtual_type and
	add gdbarch argument.
	(m68k_store_struct_return): Delete.
	(m68k_deprecated_extract_return_value): Delete.
	(m68k_deprecated_extract_struct_value_address): Delete.
	(m68k_frame_chain): Delete.
	(m68k_frame_saved_pc): Delete.
	(m68k_fix_call_dummy): Delete.
	(m68k_push_dummy_frame): Delete.
	(m68k_pop_frame): Delete.
	(m68k_extract_return_value): New function.
	(m68k_store_return_value): Rewrite using regcache.
	(m68k_extract_struct_value_address): Rewrite using regcache.
	(m68k_push_dummy_call): New function.
	(struct m68k_frame_cache): Define.
	(m68k_alloc_frame_cache): New function.
	(m68k_analyze_frame_setup): New function.
	(m68k_analyze_register_saves): New function.
	(m68k_analyze_prologue): New function.
	(m68k_skip_prologue): Rewrite using above functions.
	(m68k_unwind_pc): New function.
	(m68k_frame_cache): New function.
	(m68k_frame_this_id): New function.
	(m68k_frame_prev_register): New function.
	(m68k_frame_unwind): New variable.
	(m68k_frame_p): New function.
	(m68k_sigtramp_frame_cache): New function.
	(m68k_sigtramp_frame_this_id): New function.
	(m68k_sigtramp_frame_prev_register): New function.
	(m68k_sigtramp_frame_unwind): New variable.
	(m68k_sigtramp_frame_p): New function.
	(m68k_frame_base_address): New function.
	(m68k_frame_base): New function.
	(m68k_unwind_dummy_id): New function.
	(fill_gregset): Use regcache_collect.
	(fill_fpregset): Likewise.
	(m68k_saved_pc_after_call): Only define if SYSCALL_TRAP is
	defined.
	(m68k_gdbarch_init): Don't define call_dummy_words.  Don't set
	deprecated_init_frame_pc, deprecated_store_struct_return,
	deprecated_extract_return_value, deprecated_store_return_value,
	deprecated_frame_chain, deprecated_frame_saved_pc,
	deprecated_frame_init_saved_regs, deprecated_register_raw_size,
	deprecated_register_virtual_size,
	deprecated_max_register_raw_size,
	deprecated_max_register_virtual_size,
	deprecated_register_virtual_type, deprecated_register_size,
	deprecated_register_byte, deprecated_register_bytes,
	deprecated_fp_regnum, deprecated_use_generic_dummy_frames,
	call_dummy_location, deprecated_call_dummy_breakpoint_offset,
	deprecated_pc_in_call_dummy, deprecated_call_dummy_length,
	deprecated_call_dummy_start_offset, deprecated_call_dummy_words,
	deprecated_sizeof_call_dummy_words, deprecated_fix_call_dummy,
	deprecated_push_dummy_frame, deprecated_pop_frame,
	deprecated_dummy_write_sp.  Set deprecated_saved_pc_after_call
	only if SYSCALL_TRAP is defined.  Set extract_return_value,
	store_return_value, extract_struct_value_address, register_type,
	push_dummy_call, unwind_dummy_id, unwind_pc.  Add two frame unwind
	predicates.
	* m68k-tdep.h (M68K_D1_REGNUM, M68K_NUM_REGS,
	M68K_MAX_REGISTER_SIZE): Define.
	(struct m68k_sigtramp_info): Define.
	(struct gdbarch_tdep): Add get_sigtramp_info.
	* m68klinux-nat.c (fetch_register): Use register_size instead of
	REGISTER_RAW_SIZE.  Don't put assignment in if.
	(store_register): Likewise.
	(fetch_inferior_registers): Likewise.
	(store_inferior_registers): Likewise.
	* m68klinux-tdep.c (m68k_linux_sigtramp_saved_pc): Delete.
	(m68k_linux_frame_saved_pc): Delete.
	(m68k_linux_sigcontext_reg_offset,
	m68k_linux_ucontext_reg_offset): Define.
	(m68k_linux_get_sigtramp_info): New function.
	(m68k_linux_extract_return_value): Rewrite using regcache.
	(m68k_linux_store_return_value): Likewise.
	(m68k_linux_extract_struct_value_address): Likewise.
	(m68k_linux_init_abi): Set get_sigtramp_info in tdep structure.
	Don't set deprecated_frame_saved_pc,
	deprecated_extract_return_value, deprecated_store_return_value,
	deprecated_extract_struct_value_address.  Set
	extract_return_value, store_return_value,
	extract_struct_value_address.
@
text
@d1953 3
a1955 4
m68k-tdep.o: m68k-tdep.c $(defs_h) $(frame_h) $(frame_base_h) \
	$(frame_unwind_h) $(symtab_h) $(gdbcore_h) $(value_h) $(gdb_string_h) \
	$(gdb_assert_h) $(inferior_h) $(regcache_h) $(arch_utils_h) \
	$(gregset_h) $(osabi_h) $(m68k_tdep_h)
d1959 3
a1961 3
m68klinux-tdep.o: m68klinux-tdep.c $(defs_h) $(gdbcore_h) $(doublest) \
	$(floatformat_h) $(frame_h) $(target_h) $(gdb_string_h) $(gdbtypes_h) \
	$(osabi_h) $(regcache_h) $(objfiles_h) $(symtab_h) $(m68k_tdep_t)
@


1.410.2.4
log
@2003-07-07  Daniel Jacobowitz  <drow@@mvista.com>

	* Makefile.in (sparc_tdep_h): New.
	(sparc-linux-nat.o, sparc-nat.o, sparc-tdep.o, sparc64nbsd-nat.o)
	(sparcnbsd-nat.o, sparcnbsd-tdep.o): Depend on $(sparc_tdep_h).
	* sparc-linux-nat.c: Include "sparc-tdep.h".
	* sparc-nat.c: Likewise.
	* sparc-tdep.c: Likewise.
	* sparc64nbsd-nat.c: Likewise.
	* sparcnbsd-nat.c: Likewise.
	* sparcnbsd-tdep.c: Likewise.
	* sparc-tdep.h: New file.
	* config/sparc/tm-sparc.h: Remove prototypes for sparc_y_regnum
	and sparc_npc_regnum.
@
text
@a736 1
sparc_tdep_h = sparc-tdep.h
d2259 1
a2259 2
sparc-linux-nat.o: sparc-linux-nat.c $(defs_h) $(regcache_h) $(sparc_tdep_h) \
	$(gregset_h)
d2261 1
a2261 1
	$(regcache_h) $(sparc_tdep_h) $(gdb_wait_h)
d2265 1
a2265 2
	$(osabi_h) $(gregset_h) $(gdbcore_h) $(gdb_assert_h) $(symfile_h) \
	$(sparc_tdep_h)
d2267 1
a2267 1
	$(sparcnbsd_tdep_h) $(sparc_tdep_h)
d2276 1
a2276 1
	$(sparcnbsd_tdep_h) $(sparc_tdep_h)
d2279 1
a2279 1
	$(solib_svr4_h) $(sparc_tdep_h)
@


1.410.2.5
log
@2003-07-08  Andrew Cagney  <cagney@@redhat.com>

	* Makefile.in: Make dependency section headers consistent.
	(config_h): Move to $BUILD headers section.
	(exc_request_U_h, exc_request_S_h, msg_reply_S_h): Ditto.
	(msg_U_h, notify_S_h, process_reply_S_h): Ditto.
	(ada-exp.tab.c): Move to YACC/LEX section.
	(ada-lex.c, c-exp.tab.c, f-exp.tab.c): Ditto.
	(jv-exp.tab.c, m2-exp.tab.c, objc-exp.tab.c, p-exp.tab.c): Ditto.
@
text
@a600 16
#
# $BUILD/ headers
#

config_h = config.h
exc_request_U_h = exc_request_U.h
exc_request_S_h = exc_request_S.h
msg_reply_S_h = msg_reply_S.h
msg_U_h = msg_U.h
notify_S_h = notify_S.h
process_reply_S_h = process_reply_S.h

#
# config/ headers
#

d606 1
a606 1
# gdb/ headers
d631 1
d650 2
d702 2
d705 1
d718 1
d1217 135
d1472 1
a1472 1
# YACC/LEX dependencies
a1473 7
# LANG-exp.tab.c is generated in objdir from LANG-exp.y if it doesn't
# exist in srcdir, then compiled in objdir to LANG-exp.tab.o.  If we
# said LANG-exp.tab.c rather than ./c-exp.tab.c some makes would
# sometimes re-write it into $(srcdir)/c-exp.tab.c.  Remove bogus
# decls for malloc/realloc/free which conflict with everything else.
# Strictly speaking c-exp.tab.c should therefore depend on
# Makefile.in, but that was a pretty big annoyance.
a1474 29
.PRECIOUS: ada-exp.tab.c
ada-exp.tab.o: ada-exp.tab.c ada-lex.c ada-lang.h \
	$(defs_h) $(expression_h) \
	$(gdbtypes_h) language.h parser-defs.h $(symtab_h) $(value_h) \
	$(bfd_h) objfiles.h symfile.h $(block_h)
ada-exp.tab.c: ada-exp.y 
	$(YACC) $(YFLAGS) $(srcdir)/ada-exp.y
	-sed -e '/extern.*malloc/d' \
	     -e '/extern.*realloc/d' \
	     -e '/extern.*free/d' \
	     -e '/include.*malloc.h/d' \
	     -e 's/malloc/xmalloc/g' \
	     -e 's/realloc/xrealloc/g' \
	     < y.tab.c > ada-exp.new
	-rm y.tab.c
	mv ada-exp.new ./ada-exp.tab.c
.PRECIOUS: ada-lex.c
ada-lex.o: ada-lex.c
ada-lex.c: ada-lex.l
	@@if [ "$(FLEX)" ] && $(FLEX) --version >/dev/null 2>&1; then \
	    echo $(FLEX) -Isit $(srcdir)/ada-lex.l ">" ada-lex.c; \
	    $(FLEX) -Isit $(srcdir)/ada-lex.l > ada-lex.c; \
	elif [ ! -f ada-lex.c -a ! -f $(srcdir)/ada-lex.c ]; then \
	    echo "ada-lex.c missing and flex not available."; \
	    false; \
	elif [ ! -f ada-lex.c ]; then \
	    echo "Warning: ada-lex.c older than ada-lex.l and flex not available."; \
	fi
.PRECIOUS: c-exp.tab.c
d1479 9
a1487 13
c-exp.tab.c: c-exp.y
	$(SHELL) $(YLWRAP) "$(YACC)" $(srcdir)/c-exp.y  y.tab.c c-exp.tmp -- $(YFLAGS) 
	-sed -e '/extern.*malloc/d' \
	     -e '/extern.*realloc/d' \
	     -e '/extern.*free/d' \
	     -e '/include.*malloc.h/d' \
	     -e 's/malloc/xmalloc/g' \
	     -e 's/realloc/xrealloc/g' \
	     -e '/^#line.*y.tab.c/d' \
	  < c-exp.tmp > c-exp.new
	-rm c-exp.tmp
	mv c-exp.new ./c-exp.tab.c
.PRECIOUS: f-exp.tab.c
d1491 1
a1491 29
f-exp.tab.c: f-exp.y
	$(SHELL) $(YLWRAP) "$(YACC)" $(srcdir)/f-exp.y  y.tab.c f-exp.tmp -- $(YFLAGS) 
	-sed -e '/extern.*malloc/d' \
	     -e '/extern.*realloc/d' \
	     -e '/extern.*free/d' \
	     -e '/include.*malloc.h/d' \
	     -e 's/malloc/xmalloc/g' \
	     -e 's/realloc/xrealloc/g' \
	     -e '/^#line.*y.tab.c/d' \
	  < f-exp.tmp > f-exp.new
	-rm f-exp.tmp
	mv f-exp.new ./f-exp.tab.c
.PRECIOUS: jv-exp.tab.c
jv-exp.tab.o: jv-exp.tab.c jv-lang.h $(defs_h) $(expression_h) \
	$(gdbtypes_h) $(language_h) $(parser_defs_h) $(symtab_h) $(value_h) \
	$(bfd_h) $(objfiles_h) $(symfile_h) $(block_h)
jv-exp.tab.c: jv-exp.y
	$(SHELL) $(YLWRAP) "$(YACC)" $(srcdir)/jv-exp.y  y.tab.c jv-exp.tmp -- $(YFLAGS) 
	-sed -e '/extern.*malloc/d' \
	     -e '/extern.*realloc/d' \
	     -e '/extern.*free/d' \
	     -e '/include.*malloc.h/d' \
	     -e 's/malloc/xmalloc/g' \
	     -e 's/realloc/xrealloc/g' \
	     -e '/^#line.*y.tab.c/d' \
	  < jv-exp.tmp > jv-exp.new
	-rm jv-exp.tmp
	mv jv-exp.new ./jv-exp.tab.c
.PRECIOUS: m2-exp.tab.c
d1495 1
a1495 29
m2-exp.tab.c: m2-exp.y
	$(SHELL) $(YLWRAP) "$(YACC)" $(srcdir)/m2-exp.y  y.tab.c m2-exp.tmp -- $(YFLAGS) 
	-sed -e '/extern.*malloc/d' \
	     -e '/extern.*realloc/d' \
	     -e '/extern.*free/d' \
	     -e '/include.*malloc.h/d' \
	     -e 's/malloc/xmalloc/g' \
	     -e 's/realloc/xrealloc/g' \
	     -e '/^#line.*y.tab.c/d' \
	  < m2-exp.tmp > m2-exp.new
	-rm m2-exp.tmp
	mv m2-exp.new ./m2-exp.tab.c
.PRECIOUS: objc-exp.tab.c
objc-exp.tab.o: objc-exp.tab.c $(objc_lang_h) $(defs_h) $(expression_h) \
	$(gdbtypes_h) $(language_h) $(parser_defs_h) $(symtab_h) $(value_h) \
	$(bfd_h) $(objfiles_h) $(symfile_h) $(block_h)
objc-exp.tab.c: objc-exp.y
	$(SHELL) $(YLWRAP) "$(YACC)" $(srcdir)/objc-exp.y y.tab.c objc-exp.tmp -- $(YFLAGS) 
	-sed -e '/extern.*malloc/d' \
	     -e '/extern.*realloc/d' \
	     -e '/extern.*free/d' \
	     -e '/include.*malloc.h/d' \
	     -e 's/malloc/xmalloc/g' \
	     -e 's/realloc/xrealloc/g' \
	     -e '/^#line.*y.tab.c/d' \
	  < objc-exp.tmp > objc-exp.new
	-rm objc-exp.tmp
	mv objc-exp.new ./objc-exp.tab.c
.PRECIOUS: p-exp.tab.c
d1499 5
a1503 12
p-exp.tab.c: p-exp.y
	$(SHELL) $(YLWRAP) "$(YACC)" $(srcdir)/p-exp.y  y.tab.c p-exp.tmp -- $(YFLAGS)
	-sed -e '/extern.*malloc/d' \
	     -e '/extern.*realloc/d' \
	     -e '/extern.*free/d' \
	     -e '/include.*malloc.h/d' \
	     -e 's/malloc/xmalloc/g' \
	     -e 's/realloc/xrealloc/g' \
	     -e '/^#line.*y.tab.c/d' \
	  < p-exp.tmp > p-exp.new
	-rm p-exp.tmp
	mv p-exp.new ./p-exp.tab.c
d1506 1
a1506 1
# gdb/ dependencies
d2419 1
a2419 1
# or try to compile the object file into the sub-directory.
d2605 1
a2605 1
# or try to compile the object file into the sub-directory.
d2674 1
a2674 1
# gdb/signals/ dependencies
d2677 1
a2677 1
# or try to compile the object file into the sub-directory.
d2683 1
a2683 1
# gdb/tui/ dependencies
d2686 1
a2686 1
# or try to compile the object file into the sub-directory.
@


1.410.2.6
log
@        * Makefile.in (dwarf2-frame.o): Add complaints_h.
        * dwarf2-frame.c: Include complaints.h.
        (decode_frame_entry_1): Rename from decode_frame_entry; tidy
        variable initialization; return NULL on error.
        (decode_frame_entry): New.
@
text
@d1683 1
a1683 1
	$(gdb_string_h) $(dwarf2_frame_h) $(complaints_h)
@


1.410.2.7
log
@* Makefile.in: Quote sed expression when generating transformed_name.
@
text
@d959 1
a959 1
			  echo gdb | sed -e "$$t"` ; \
@


1.410.2.8
log
@2003-07-17  Elena Zannoni  <ezannoni@@redhat.com>

	* Makefile.in (x86-64-linux-nat.o): Update dependencies.
	* x86-64-linux-nat.c (ps_get_thread_area): New function.  Add
	include of asm/prctl.h, asm/ptrace.h, and gdb_proc_service.h.
@
text
@d2370 1
a2370 1
	$(x86_64_tdep_h) $(gdb_proc_service_h)
@


1.410.2.9
log
@2003-07-22  Elena Zannoni  <ezannoni@@redhat.com>

	* findvar.c (read_var_value): Remove case for thread local storage
	variables.  It is now entirely handled by the dwarf2 location
	expression code.
	* printcmd.c (address_info): Ditto.
	* symtab.h (address_class): Remove LOC_THREAD_LOCAL_STATIC
	enumeration value.
	(struct symbol): Remove objfile field, which was used by
	LOC_THREAD_LOCAL_STATIC only.
	* dwarf2read.c (decode_locdesc): Remove is_thread_local variable.
	* dwarf2loc.h (struct dwarf2_loclist_baton): Add comment about
	usage of objfile pointer.
	* dwarf2loc.c (locexpr_describe_location): Add case to handle
	thread local variables.
	Add include of objfiles.h.
	* dwarf2expr.c (execute_stack_op): Add comments about thread local
	storage variables.
	* Makefile.in (dwarf2loc.o): Update dependencies.
@
text
@d1679 1
a1679 2
	$(dwarf2loc_h) $(ax_h) $(ax_gdb_h) $(regcache_h) $(objfiles_h) \
	$(gdb_string_h)
@


1.410.2.10
log
@2003-08-02  Andrew Cagney  <cagney@@redhat.com>

	* Makefile.in: Update all dependencies and definitions.
@
text
@d626 1
a627 1
alpha_tdep_h = alpha-tdep.h
d638 1
d640 1
a640 2
charset_h = charset.h
c_lang_h = c-lang.h $(value_h) $(macroexp_h)
d642 1
a643 1
coff_solib_h = coff-solib.h
d650 1
a650 1
defs_h = defs.h $(config_h) $(ansidecl_h) $(gdb_locale_h) $(gdb_signals_h) \
d656 1
d658 1
d660 1
a661 1
dwarf2loc_h = dwarf2loc.h
a666 1
frame_base_h = frame-base.h
d669 4
a672 1
gdbarch_h = gdbarch.h $(dis_asm_h) $(inferior_h) $(symfile_h)
a673 2
gdbcmd_h = gdbcmd.h $(command_h) $(ui_out_h)
gdbcore_h = gdbcore.h $(bfd_h)
a674 2
gdb_events_h = gdb-events.h
gdb_h = gdb.h
a678 1
gdb_stabs_h = gdb-stabs.h
d682 5
a688 2
gdb_vfork_h = gdb_vfork.h
gdb_wait_h = gdb_wait.h
d694 1
a696 1
inf_loop_h = inf-loop.h
a697 1
infttrace_h = infttrace.h
d712 1
a713 1
mips_tdep_h = mips-tdep.h
a716 1
nto_tdep_h = nto-tdep.h $(defs_h) $(solist_h)
d722 1
d725 1
a725 1
p_lang_h = p-lang.h
a726 1
ppc_tdep_h = ppc-tdep.h
d730 2
a732 2
remote_h = remote.h
remote_utils_h = remote-utils.h $(target_h)
d736 1
d738 1
a738 1
ser_unix_h = ser-unix.h
a739 1
sh_tdep_h = sh-tdep.h
d741 1
a742 1
solib_svr4_h = solib-svr4.h
d746 1
a747 1
sparc_tdep_h = sparc-tdep.h
d756 2
a758 1
trad_frame_h = trad-frame.h
d763 1
a763 2
value_h = value.h $(doublest_h) $(frame_h) $(symtab_h) $(gdbtypes_h) \
	$(expression_h)
a768 1
x86_64_linux_tdep_h = x86-64-linux-tdep.h
d799 2
d802 1
a803 1
tuiData_h = $(srcdir)/tui/tuiData.h
d809 1
a810 1
tuiSource_h = $(srcdir)/tui/tuiSource.h $(defs_h)
d813 2
a814 2
tui_file_h = $(srcdir)/tui/tui-file.h
tui_h = $(srcdir)/tui/tui.h $(ansidecl_h)
d1357 6
a1362 6
ada-exp.tab.o: ada-exp.tab.c $(defs_h) $(expression_h) $(value_h) \
	$(parser_defs_h) $(language_h) $(ada_lang_h) $(bfd_h) $(symfile_h) \
	$(objfiles_h) $(frame_h) $(block_h) $(ada_lex_c)
ada-exp.tab.c: ada-exp.y
	$(SHELL) $(YLWRAP) "$(YACC)" \
	    $(srcdir)/ada-exp.y  y.tab.c ada-exp.tmp -- $(YFLAGS) 
d1369 2
a1370 3
	     -e '/^#line.*y.tab.c/d' \
	  < ada-exp.tmp > ada-exp.new
	-rm ada-exp.tmp
d1387 2
a1388 1
	$(symfile_h) $(objfiles_h) $(charset_h) $(block_h)
d1390 1
a1390 2
	$(SHELL) $(YLWRAP) "$(YACC)" \
	    $(srcdir)/c-exp.y  y.tab.c c-exp.tmp -- $(YFLAGS) 
d1402 3
a1404 3
f-exp.tab.o: f-exp.tab.c $(defs_h) $(gdb_string_h) $(expression_h) \
	$(value_h) $(parser_defs_h) $(language_h) $(f_lang_h) $(bfd_h) \
	$(symfile_h) $(objfiles_h) $(block_h)
d1406 1
a1406 2
	$(SHELL) $(YLWRAP) "$(YACC)" \
	    $(srcdir)/f-exp.y  y.tab.c f-exp.tmp -- $(YFLAGS) 
d1418 3
a1420 3
jv-exp.tab.o: jv-exp.tab.c $(defs_h) $(gdb_string_h) $(expression_h) \
	$(value_h) $(parser_defs_h) $(language_h) $(jv_lang_h) $(bfd_h) \
	$(symfile_h) $(objfiles_h) $(block_h)
d1422 1
a1422 2
	$(SHELL) $(YLWRAP) "$(YACC)" \
	    $(srcdir)/jv-exp.y  y.tab.c jv-exp.tmp -- $(YFLAGS) 
d1434 3
a1436 3
m2-exp.tab.o: m2-exp.tab.c $(defs_h) $(gdb_string_h) $(expression_h) \
	$(language_h) $(value_h) $(parser_defs_h) $(m2_lang_h) $(bfd_h) \
	$(symfile_h) $(objfiles_h) $(block_h)
d1438 1
a1438 2
	$(SHELL) $(YLWRAP) "$(YACC)" \
	    $(srcdir)/m2-exp.y  y.tab.c m2-exp.tmp -- $(YFLAGS) 
d1450 3
a1452 4
objc-exp.tab.o: objc-exp.tab.c $(defs_h) $(gdb_string_h) $(expression_h) \
	$(objc_lang_h) $(value_h) $(parser_defs_h) $(language_h) $(c_lang_h) \
	$(bfd_h) $(symfile_h) $(objfiles_h) $(top_h) $(completer_h) \
	$(block_h)
d1454 1
a1454 2
	$(SHELL) $(YLWRAP) "$(YACC)" \
	    $(srcdir)/objc-exp.y  y.tab.c objc-exp.tmp -- $(YFLAGS) 
d1466 3
a1468 3
p-exp.tab.o: p-exp.tab.c $(defs_h) $(gdb_string_h) $(expression_h) \
	$(value_h) $(parser_defs_h) $(language_h) $(p_lang_h) $(bfd_h) \
	$(symfile_h) $(objfiles_h) $(block_h)
d1470 1
a1470 2
	$(SHELL) $(YLWRAP) "$(YACC)" \
	    $(srcdir)/p-exp.y  y.tab.c p-exp.tmp -- $(YFLAGS) 
d1494 2
a1495 2
	$(inferior_h) $(symtab_h) $(target_h) $(regcache_h) $(gdbcore_h) \
	$(gregset_h) $(ada_lang_h)
a1505 6
alphabsd-nat.o: alphabsd-nat.c $(defs_h) $(inferior_h) $(regcache_h) \
	$(alpha_tdep_h) $(alphabsd_tdep_h) $(gregset_h)
alphabsd-tdep.o: alphabsd-tdep.c $(defs_h) $(alpha_tdep_h) \
	$(alphabsd_tdep_h)
alphafbsd-tdep.o: alphafbsd-tdep.c $(defs_h) $(value_h) $(osabi_h) \
	$(alpha_tdep_h)
d1507 11
a1517 1
	$(osabi_h) $(alpha_tdep_h)
d1521 6
a1526 2
alpha-nat.o: alpha-nat.c $(defs_h) $(gdb_string_h) $(inferior_h) \
	$(gdbcore_h) $(target_h) $(regcache_h) $(alpha_tdep_h) $(gregset_h)
d1528 2
a1529 10
	$(regcache_h) $(value_h) $(osabi_h) $(solib_svr4_h) $(alpha_tdep_h) \
	$(alphabsd_tdep_h) $(nbsd_tdep_h)
alpha-osf1-tdep.o: alpha-osf1-tdep.c $(defs_h) $(frame_h) $(gdbcore_h) \
	$(value_h) $(osabi_h) $(gdb_string_h) $(objfiles_h) $(alpha_tdep_h)
alpha-tdep.o: alpha-tdep.c $(defs_h) $(doublest_h) $(frame_h) \
	$(frame_unwind_h) $(frame_base_h) $(dwarf2_frame_h) $(inferior_h) \
	$(symtab_h) $(value_h) $(gdbcmd_h) $(gdbcore_h) $(dis_asm_h) \
	$(symfile_h) $(objfiles_h) $(gdb_string_h) $(linespec_h) \
	$(regcache_h) $(reggroups_h) $(arch_utils_h) $(osabi_h) $(block_h) \
	$(elf_bfd_h) $(alpha_tdep_h)
d1541 7
a1547 2
	$(doublest_h) $(solib_svr4_h) $(osabi_h) $(arm_tdep_h) $(symtab_h) \
	$(symfile_h) $(objfiles_h)
d1550 4
a1553 11
armnbsd-tdep.o: armnbsd-tdep.c $(defs_h) $(osabi_h) $(arm_tdep_h) \
	$(nbsd_tdep_h) $(solib_svr4_h)
arm-tdep.o: arm-tdep.c $(defs_h) $(frame_h) $(inferior_h) $(gdbcmd_h) \
	$(gdbcore_h) $(symfile_h) $(gdb_string_h) $(dis_asm_h) $(regcache_h) \
	$(doublest_h) $(value_h) $(arch_utils_h) $(osabi_h) $(arm_tdep_h) \
	$(gdb_sim_arm_h) $(elf_bfd_h) $(coff_internal_h) $(elf_arm_h) \
	$(gdb_assert_h) $(bfd_in2_h) $(libcoff_h)
avr-tdep.o: avr-tdep.c $(defs_h) $(frame_h) $(frame_unwind_h) \
	$(frame_base_h) $(trad_frame_h) $(gdbcmd_h) $(gdbcore_h) \
	$(inferior_h) $(symfile_h) $(arch_utils_h) $(regcache_h) \
	$(gdb_string_h)
d1570 3
a1572 3
	$(objfiles_h) $(source_h) $(linespec_h) $(completer_h) $(gdb_h) \
	$(ui_out_h) $(cli_script_h) $(gdb_assert_h) $(block_h) \
	$(gdb_events_h)
d1575 3
a1577 3
	$(complaints_h) $(gdb_string_h) $(expression_h) $(language_h) \
	$(bcache_h) $(filenames_h) $(macrotab_h) $(demangle_h) $(block_h) \
	$(cp_support_h) $(dictionary_h) $(buildsym_h) $(stabsread_h)
a1579 2
charset.o: charset.c $(defs_h) $(charset_h) $(gdbcmd_h) $(gdb_assert_h) \
	$(gdb_string_h)
d1583 10
a1592 1
	$(demangle_h) $(cp_support_h)
d1595 2
a1596 2
coff-pe-read.o: coff-pe-read.c $(coff_pe_read_h) $(bfd_h) $(defs_h) \
	$(gdbtypes_h) $(symtab_h) $(symfile_h) $(objfiles_h)
d1603 2
a1604 2
coff-solib.o: coff-solib.c $(defs_h) $(frame_h) $(bfd_h) $(gdbcore_h) \
	$(symtab_h) $(symfile_h) $(objfiles_h)
d1608 1
a1608 1
	$(filenames_h) $(cli_decode_h) $(gdbcmd_h) $(completer_h)
d1612 4
d1621 3
a1623 7
	$(gdbthread_h) $(regcache_h) $(symfile_h)
core-regset.o: core-regset.c $(defs_h) $(command_h) $(gdbcore_h) \
	$(inferior_h) $(target_h) $(gdb_string_h) $(gregset_h)
core-sol2.o: core-sol2.c $(defs_h) $(gdb_string_h) $(regcache_h) \
	$(inferior_h) $(target_h) $(command_h) $(gdbcore_h) $(gregset_h)
cp-abi.o: cp-abi.c $(defs_h) $(value_h) $(cp_abi_h) $(command_h) $(gdbcmd_h) \
	$(ui_out_h) $(gdb_string_h)
d1628 1
a1628 3
	$(objfiles_h) $(frame_h) $(symtab_h) $(block_h) $(complaints_h)
cpu32bug-rom.o: cpu32bug-rom.c $(defs_h) $(gdbcore_h) $(target_h) \
	$(monitor_h) $(serial_h) $(regcache_h) $(m68k_tdep_h)
d1633 2
a1638 7
c-typeprint.o: c-typeprint.c $(defs_h) $(gdb_obstack_h) $(bfd_h) $(symtab_h) \
	$(gdbtypes_h) $(expression_h) $(value_h) $(gdbcore_h) $(target_h) \
	$(language_h) $(demangle_h) $(c_lang_h) $(typeprint_h) $(cp_abi_h) \
	$(gdb_string_h)
c-valprint.o: c-valprint.c $(defs_h) $(gdb_string_h) $(symtab_h) \
	$(gdbtypes_h) $(expression_h) $(value_h) $(valprint_h) $(language_h) \
	$(c_lang_h) $(cp_abi_h)
d1642 3
a1644 3
	$(objfiles_h) $(language_h) $(arch_utils_h) $(regcache_h) \
	$(remote_h) $(floatformat_h) $(gdb_sim_d10v_h) $(sim_regno_h) \
	$(disasm_h) $(trad_frame_h) $(gdb_assert_h)
d1661 2
a1662 2
disasm.o: disasm.c $(defs_h) $(target_h) $(value_h) $(ui_out_h) \
	$(gdb_string_h) $(disasm_h) $(gdbcore_h)
d1672 3
d1676 1
a1676 5
	$(gdbcore_h) $(elf_dwarf2_h) $(dwarf2expr_h)
dwarf2-frame.o: dwarf2-frame.c $(defs_h) $(dwarf2expr_h) $(elf_dwarf2_h) \
	$(frame_h) $(frame_base_h) $(frame_unwind_h) $(gdbcore_h) \
	$(gdbtypes_h) $(symtab_h) $(objfiles_h) $(regcache_h) \
	$(gdb_assert_h) $(gdb_string_h) $(complaints_h) $(dwarf2_frame_h)
d1678 7
a1684 3
	$(gdbcore_h) $(target_h) $(inferior_h) $(ax_h) $(ax_gdb_h) \
	$(regcache_h) $(objfiles_h) $(elf_dwarf2_h) $(dwarf2expr_h) \
	$(dwarf2loc_h) $(gdb_string_h)
d1699 1
a1699 1
	$(f_lang_h) $(cp_abi_h) $(infcall_h) $(objc_lang_h) $(block_h)
d1707 2
a1708 1
	$(gdb_string_h) $(gdbcore_h) $(gdb_stat_h) $(xcoffsolib_h)
d1710 11
a1720 2
	$(value_h) $(language_h) $(parser_defs_h) $(frame_h) $(target_h) \
	$(gdb_string_h) $(block_h)
a1726 3
f-lang.o: f-lang.c $(defs_h) $(gdb_string_h) $(symtab_h) $(gdbtypes_h) \
	$(expression_h) $(parser_defs_h) $(language_h) $(f_lang_h) \
	$(valprint_h) $(value_h)
a1729 1
frame-base.o: frame-base.c $(defs_h) $(frame_base_h) $(frame_h)
d1735 1
d1737 1
a1737 1
	$(gdb_assert_h) $(dummy_frame_h)
a1739 6
f-typeprint.o: f-typeprint.c $(defs_h) $(gdb_obstack_h) $(bfd_h) $(symtab_h) \
	$(gdbtypes_h) $(expression_h) $(value_h) $(gdbcore_h) $(target_h) \
	$(f_lang_h) $(gdb_string_h)
f-valprint.o: f-valprint.c $(defs_h) $(gdb_string_h) $(symtab_h) \
	$(gdbtypes_h) $(expression_h) $(value_h) $(valprint_h) $(language_h) \
	$(f_lang_h) $(frame_h) $(gdbcore_h) $(command_h) $(block_h)
d1742 2
d1749 1
a1749 3
	$(osabi_h) $(symfile_h)
gdb.o: gdb.c $(defs_h) $(main_h) $(gdb_string_h) $(interps_h)
gdb-events.o: gdb-events.c $(defs_h) $(gdb_events_h) $(gdbcmd_h)
d1756 3
a1758 3
	$(gdbcore_h) $(gdbthread_h) $(gdb_assert_h) $(gdb_obstack_h) \
	$(gnu_nat_h) $(exc_request_S_h) $(notify_S_h) $(process_reply_S_h) \
	$(msg_reply_S_h) $(exc_request_U_h) $(msg_U_h)
d1767 5
a1771 4
h8300-tdep.o: h8300-tdep.c $(defs_h) $(value_h) $(inferior_h) $(symfile_h) \
	$(arch_utils_h) $(regcache_h) $(gdbcore_h) $(objfiles_h) $(gdbcmd_h) \
	$(gdb_assert_h)
# OBSOLETE h8500-tdep.o: h8500-tdep.c
a1773 7
hppab-nat.o: hppab-nat.c $(defs_h) $(inferior_h) $(target_h) $(regcache_h)
hppah-nat.o: hppah-nat.c $(defs_h) $(inferior_h) $(target_h) $(gdbcore_h) \
	$(gdb_wait_h) $(regcache_h) $(gdb_string_h)
hppa-hpux-tdep.o: hppa-hpux-tdep.c $(defs_h) $(arch_utils_h) $(gdbcore_h) \
	$(osabi_h) $(gdb_string_h) $(frame_h)
hppam3-nat.o: hppam3-nat.c $(defs_h) $(inferior_h) $(floatformat_h) \
	$(regcache_h)
d1779 7
a1791 18
i386b-nat.o: i386b-nat.c $(defs_h)
i386bsd-nat.o: i386bsd-nat.c $(defs_h) $(inferior_h) $(regcache_h) \
	$(gdb_assert_h) $(gregset_h) $(i386_tdep_h) $(i387_tdep_h)
i386bsd-tdep.o: i386bsd-tdep.c $(defs_h) $(arch_utils_h) $(frame_h) \
	$(gdbcore_h) $(regcache_h) $(osabi_h) $(gdb_string_h) $(i386_tdep_h)
i386-cygwin-tdep.o: i386-cygwin-tdep.c $(defs_h) $(osabi_h) $(gdb_string_h) \
	$(i386_tdep_h)
i386fbsd-nat.o: i386fbsd-nat.c $(defs_h) $(inferior_h) $(regcache_h)
i386gnu-nat.o: i386gnu-nat.c $(defs_h) $(inferior_h) $(floatformat_h) \
	$(regcache_h) $(gdb_assert_h) $(i386_tdep_h) $(gnu_nat_h) \
	$(i387_tdep_h) $(gregset_h)
i386gnu-tdep.o: i386gnu-tdep.c $(defs_h) $(osabi_h) $(i386_tdep_h)
i386-interix-nat.o: i386-interix-nat.c $(defs_h) $(gdb_string_h) \
	$(gdbcore_h) $(gregset_h) $(regcache_h)
i386-interix-tdep.o: i386-interix-tdep.c $(defs_h) $(arch_utils_h) \
	$(frame_h) $(gdb_string_h) $(gdb_stabs_h) $(gdbcore_h) $(gdbtypes_h) \
	$(i386_tdep_h) $(inferior_h) $(libbfd_h) $(objfiles_h) $(osabi_h) \
	$(regcache_h)
d1794 1
a1794 2
	$(i387_tdep_h) $(i386_tdep_h) $(i386_linux_tdep_h) \
	$(gdb_proc_service_h)
d1796 3
a1798 5
	$(value_h) $(regcache_h) $(inferior_h) $(reggroups_h) $(symtab_h) \
	$(symfile_h) $(objfiles_h) $(solib_svr4_h) $(osabi_h) $(i386_tdep_h) \
	$(i386_linux_tdep_h)
i386ly-tdep.o: i386ly-tdep.c $(defs_h) $(gdbcore_h) $(inferior_h) \
	$(regcache_h) $(target_h) $(osabi_h) $(i386_tdep_h)
d1800 2
a1801 11
i386nbsd-tdep.o: i386nbsd-tdep.c $(defs_h) $(gdbtypes_h) $(gdbcore_h) \
	$(regcache_h) $(arch_utils_h) $(osabi_h) $(i386_tdep_h) \
	$(i387_tdep_h) $(nbsd_tdep_h) $(solib_svr4_h)
i386-nto-tdep.o: i386-nto-tdep.c $(gdb_string_h) $(gdb_assert_h) $(defs_h) \
	$(frame_h) $(target_h) $(regcache_h) $(solib_svr4_h) $(i386_tdep_h) \
	$(nto_tdep_h) $(osabi_h) $(i387_tdep_h)
i386obsd-nat.o: i386obsd-nat.c $(defs_h)
i386obsd-tdep.o: i386obsd-tdep.c $(defs_h) $(arch_utils_h) $(gdbcore_h) \
	$(regcache_h) $(osabi_h) $(i386_tdep_h) $(i387_tdep_h)
i386-sol2-tdep.o: i386-sol2-tdep.c $(defs_h) $(value_h) $(osabi_h) \
	$(i386_tdep_h)
d1809 23
d1834 4
a1837 6
i386v-nat.o: i386v-nat.c $(defs_h) $(frame_h) $(inferior_h) $(language_h) \
	$(gdbcore_h) $(gdb_stat_h) $(floatformat_h) $(target_h) \
	$(i386_tdep_h)
i387-tdep.o: i387-tdep.c $(defs_h) $(doublest_h) $(floatformat_h) $(frame_h) \
	$(gdbcore_h) $(inferior_h) $(language_h) $(regcache_h) $(value_h) \
	$(gdb_assert_h) $(gdb_string_h) $(i386_tdep_h) $(i387_tdep_h)
d1847 3
a1849 2
	$(value_h) $(gdb_assert_h) $(objfiles_h) $(elf_common_h) \
	$(elf_bfd_h)
d1852 1
a1852 1
	$(symfile_h) $(gdbcmd_h) $(command_h) $(gdb_string_h) $(infcall_h)
d1857 1
a1857 3
	$(parser_defs_h) $(regcache_h) $(reggroups_h) $(block_h)
inf-loop.o: inf-loop.c $(defs_h) $(inferior_h) $(target_h) $(event_loop_h) \
	$(event_top_h) $(inf_loop_h) $(remote_h)
d1872 1
a1872 2
	$(gdb_string_h) $(gdb_wait_h) $(command_h) $(gdbthread_h) \
	$(gdbcore_h)
d1890 1
a1892 1
kod-cisco.o: kod-cisco.c $(defs_h) $(gdb_string_h) $(kod_h)
a1895 4
linespec.o: linespec.c $(defs_h) $(symtab_h) $(frame_h) $(command_h) \
	$(symfile_h) $(objfiles_h) $(source_h) $(demangle_h) $(value_h) \
	$(completer_h) $(cp_abi_h) $(parser_defs_h) $(block_h) \
	$(objc_lang_h) $(linespec_h)
d1899 3
d1904 2
a1905 2
linux-proc.o: linux-proc.c $(defs_h) $(inferior_h) $(gdb_stat_h) \
	$(regcache_h) $(gregset_h) $(gdbcore_h) $(gdbthread_h) $(elf_bfd_h) \
d1916 3
d1923 4
a1926 8
m32r-tdep.o: m32r-tdep.c $(defs_h) $(frame_h) $(frame_unwind_h) \
	$(frame_base_h) $(symtab_h) $(gdbtypes_h) $(gdbcmd_h) $(gdbcore_h) \
	$(gdb_string_h) $(value_h) $(inferior_h) $(symfile_h) $(objfiles_h) \
	$(language_h) $(arch_utils_h) $(regcache_h) $(trad_frame_h) \
	$(gdb_assert_h)
# OBSOLETE m3-nat.o: m3-nat.c
m68hc11-tdep.o: m68hc11-tdep.c $(defs_h) $(frame_h) $(frame_unwind_h) \
	$(frame_base_h) $(dwarf2_frame_h) $(trad_frame_h) $(symtab_h) \
d1929 7
a1935 2
	$(arch_utils_h) $(regcache_h) $(reggroups_h) $(target_h) \
	$(opcode_m68hc11_h) $(elf_m68hc11_h) $(elf_bfd_h)
d1938 4
a1941 6
	$(m68k_tdep_h) $(gdb_stat_h) $(floatformat_h) $(target_h) \
	$(gregset_h)
m68klinux-tdep.o: m68klinux-tdep.c $(defs_h) $(gdbcore_h) $(doublest_h) \
	$(floatformat_h) $(frame_h) $(target_h) $(gdb_string_h) \
	$(gdbtypes_h) $(osabi_h) $(regcache_h) $(objfiles_h) $(symtab_h) \
	$(m68k_tdep_h)
a1944 5
m68k-stub.o: m68k-stub.c
m68k-tdep.o: m68k-tdep.c $(defs_h) $(frame_h) $(frame_base_h) \
	$(frame_unwind_h) $(symtab_h) $(gdbcore_h) $(value_h) \
	$(gdb_string_h) $(gdb_assert_h) $(inferior_h) $(regcache_h) \
	$(arch_utils_h) $(osabi_h) $(m68k_tdep_h) $(gregset_h)
d1949 2
a1950 2
macroscope.o: macroscope.c $(defs_h) $(macroscope_h) $(symtab_h) $(source_h) \
	$(target_h) $(frame_h) $(inferior_h) $(complaints_h)
d1968 6
a1973 3
	$(block_h) $(dictionary_h) $(coff_sym_h) $(coff_symconst_h) \
	$(gdb_stat_h) $(gdb_string_h) $(bfd_h) $(coff_ecoff_h) $(libaout_h) \
	$(aout_aout64_h) $(aout_stab_gnu_h) $(expression_h) $(language_h)
a1975 2
mem-break.o: mem-break.c $(defs_h) $(symtab_h) $(breakpoint_h) $(inferior_h) \
	$(target_h)
d1981 1
a1981 1
	$(solib_svr4_h) $(osabi_h) $(mips_tdep_h) $(gdb_string_h) \
a1982 1
# OBSOLETE mipsm3-nat.o: mipsm3-nat.c
d1984 7
d1994 2
a1995 2
	$(target_h) $(value_h) $(osabi_h) $(nbsd_tdep_h) $(mipsnbsd_tdep_h) \
	$(solib_svr4_h)
a1999 6
mips-tdep.o: mips-tdep.c $(defs_h) $(gdb_string_h) $(gdb_assert_h) \
	$(frame_h) $(inferior_h) $(symtab_h) $(value_h) $(gdbcmd_h) \
	$(language_h) $(gdbcore_h) $(symfile_h) $(objfiles_h) $(gdbtypes_h) \
	$(target_h) $(arch_utils_h) $(regcache_h) $(osabi_h) $(mips_tdep_h) \
	$(block_h) $(reggroups_h) $(opcode_mips_h) $(elf_mips_h) \
	$(elf_bfd_h) $(symcat_h) $(sim_regno_h)
d2002 1
a2002 2
# OBSOLETE mn10200-tdep.o: mn10200-tdep.c
mn10300-tdep.o: mn10300-tdep.c $(defs_h) $(frame_h) $(inferior_h) \
d2004 4
a2007 1
	$(symfile_h) $(regcache_h) $(arch_utils_h) $(gdb_assert_h)
d2014 3
d2019 2
a2020 8
ns32knbsd-tdep.o: ns32knbsd-tdep.c $(defs_h) $(osabi_h) $(ns32k_tdep_h) \
	$(gdb_string_h)
ns32k-tdep.o: ns32k-tdep.c $(defs_h) $(frame_h) $(gdbtypes_h) $(gdbcore_h) \
	$(inferior_h) $(regcache_h) $(target_h) $(arch_utils_h) $(osabi_h) \
	$(ns32k_tdep_h) $(gdb_string_h)
nto-tdep.o: nto-tdep.c $(gdb_stat_h) $(gdb_string_h) $(nto_tdep_h) $(top_h) \
	$(cli_decode_h) $(cli_cmds_h) $(inferior_h) $(gdbarch_h) $(bfd_h) \
	$(elf_bfd_h) $(solib_svr4_h) $(gdbcore_h)
d2023 3
a2025 4
	$(complaints_h) $(value_h) $(symfile_h) $(objfiles_h) \
	$(gdb_string_h) $(target_h) $(gdbcore_h) $(gdbcmd_h) $(frame_h) \
	$(gdb_regex_h) $(regcache_h) $(block_h) $(infcall_h) $(valprint_h) \
	$(gdb_assert_h)
d2028 3
a2030 3
	$(gdb_obstack_h) $(gdb_string_h) $(hashtab_h) $(breakpoint_h) \
	$(block_h) $(dictionary_h) $(mmalloc_h)
observer.o: observer.c $(defs_h) $(observer_h)
d2036 12
a2047 2
osabi.o: osabi.c $(defs_h) $(gdb_assert_h) $(gdb_string_h) $(osabi_h) \
	$(arch_utils_h) $(gdbcmd_h) $(command_h) $(elf_bfd_h)
d2055 1
a2055 4
	$(doublest_h) $(gdb_assert_h) $(block_h)
p-lang.o: p-lang.c $(defs_h) $(gdb_string_h) $(symtab_h) $(gdbtypes_h) \
	$(expression_h) $(parser_defs_h) $(language_h) $(p_lang_h) \
	$(valprint_h) $(value_h)
a2059 2
ppcbug-rom.o: ppcbug-rom.c $(defs_h) $(gdbcore_h) $(target_h) $(monitor_h) \
	$(serial_h) $(regcache_h)
d2065 6
a2070 2
	$(objfiles_h) $(regcache_h) $(value_h) $(osabi_h) $(solib_svr4_h) \
	$(ppc_tdep_h)
d2074 2
a2075 4
	$(target_h) $(breakpoint_h) $(value_h) $(osabi_h) $(ppc_tdep_h) \
	$(ppcnbsd_tdep_h) $(nbsd_tdep_h) $(solib_svr4_h)
ppc-sysv-tdep.o: ppc-sysv-tdep.c $(defs_h) $(gdbcore_h) $(inferior_h) \
	$(regcache_h) $(value_h) $(gdb_string_h) $(ppc_tdep_h)
a2084 4
procfs.o: procfs.c $(defs_h) $(inferior_h) $(target_h) $(gdbcore_h) \
	$(elf_bfd_h) $(gdbcmd_h) $(gdbthread_h) $(gdb_wait_h) \
	$(gdb_assert_h) $(inflow_h) $(gdb_dirent_h) $(X_OK) $(gdb_stat_h) \
	$(proc_utils_h) $(gregset_h)
d2088 4
a2091 7
p-typeprint.o: p-typeprint.c $(defs_h) $(gdb_obstack_h) $(bfd_h) $(symtab_h) \
	$(gdbtypes_h) $(expression_h) $(value_h) $(gdbcore_h) $(target_h) \
	$(language_h) $(p_lang_h) $(typeprint_h) $(gdb_string_h)
p-valprint.o: p-valprint.c $(defs_h) $(gdb_obstack_h) $(symtab_h) \
	$(gdbtypes_h) $(expression_h) $(value_h) $(command_h) $(gdbcmd_h) \
	$(gdbcore_h) $(demangle_h) $(valprint_h) $(typeprint_h) \
	$(language_h) $(target_h) $(annotate_h) $(p_lang_h) $(cp_abi_h)
a2096 5
remote.o: remote.c $(defs_h) $(gdb_string_h) $(inferior_h) $(bfd_h) \
	$(symfile_h) $(target_h) $(gdbcmd_h) $(objfiles_h) $(gdb_stabs_h) \
	$(gdbthread_h) $(remote_h) $(regcache_h) $(value_h) $(gdb_assert_h) \
	$(event_loop_h) $(event_top_h) $(inf_loop_h) $(serial_h) \
	$(gdbcore_h) $(remote_fileio_h)
a2101 3
remote-fileio.o: remote-fileio.c $(defs_h) $(gdb_string_h) $(gdbcmd_h) \
	$(remote_h) $(gdb_fileio_h) $(gdb_wait_h) $(gdb_stat_h) \
	$(remote_fileio_h)
d2128 5
a2137 5
remote-vx.o: remote-vx.c $(defs_h) $(frame_h) $(inferior_h) $(target_h) \
	$(gdbcore_h) $(command_h) $(symtab_h) $(complaints_h) $(gdbcmd_h) \
	$(bfd_h) $(symfile_h) $(objfiles_h) $(gdb_stabs_h) $(regcache_h) \
	$(gdb_string_h) $(vx_share_ptrace_h) $(vx_share_xdr_ptrace_h) \
	$(vx_share_xdr_ld_h) $(vx_share_xdr_rdb_h) $(vx_share_dbgRpcLib_h)
d2148 8
d2165 3
a2167 3
	$(parser_defs_h) $(osabi_h) $(libbfd_h) $(coff_internal_h) \
	$(libcoff_h) $(coff_xcoff_h) $(libxcoff_h) $(elf_bfd_h) \
	$(solib_svr4_h) $(ppc_tdep_h) $(gdb_assert_h)
a2185 1
serial.o: serial.c $(defs_h) $(serial_h) $(gdb_string_h) $(gdbcmd_h)
d2191 7
d2201 1
a2201 2
shnbsd-nat.o: shnbsd-nat.c $(defs_h) $(inferior_h) $(sh_tdep_h) \
	$(shnbsd_tdep_h)
d2203 4
a2206 8
	$(osabi_h) $(solib_svr4_h) $(nbsd_tdep_h) $(sh_tdep_h) \
	$(shnbsd_tdep_h)
sh-stub.o: sh-stub.c
sh-tdep.o: sh-tdep.c $(defs_h) $(frame_h) $(symtab_h) $(symfile_h) \
	$(gdbtypes_h) $(gdbcmd_h) $(gdbcore_h) $(value_h) $(dis_asm_h) \
	$(inferior_h) $(gdb_string_h) $(arch_utils_h) $(floatformat_h) \
	$(regcache_h) $(doublest_h) $(osabi_h) $(sh_tdep_h) $(elf_bfd_h) \
	$(solib_svr4_h) $(elf_sh_h) $(gdb_sim_sh_h)
a2210 4
solib.o: solib.c $(defs_h) $(gdb_string_h) $(symtab_h) $(bfd_h) $(symfile_h) \
	$(objfiles_h) $(gdbcore_h) $(command_h) $(target_h) $(frame_h) \
	$(gdb_regex_h) $(inferior_h) $(environ_h) $(language_h) $(gdbcmd_h) \
	$(completer_h) $(filenames_h) $(solist_h)
d2222 4
a2225 3
sol-thread.o: sol-thread.c $(defs_h) $(gdbthread_h) $(target_h) \
	$(inferior_h) $(gdb_stat_h) $(gdbcmd_h) $(gdbcore_h) $(regcache_h) \
	$(symfile_h) $(gregset_h)
d2237 1
a2237 5
	$(filenames_h) $(completer_h) $(ui_out_h)
sparc64nbsd-nat.o: sparc64nbsd-nat.c $(defs_h) $(inferior_h) $(regcache_h) \
	$(sparc_tdep_h) $(sparcnbsd_tdep_h)
# OBSOLETE sparclet-rom.o: sparclet-rom.c
# OBSOLETE sparclet-stub.o: sparclet-stub.c
a2239 2
# OBSOLETE sparcl-stub.o: sparcl-stub.c
# OBSOLETE sparcl-tdep.o: sparcl-tdep.c
d2242 14
d2257 1
a2257 1
	$(sparc_tdep_h) $(sparcnbsd_tdep_h)
d2259 2
a2260 7
	$(target_h) $(value_h) $(osabi_h) $(gdb_string_h) $(sparc_tdep_h) \
	$(sparcnbsd_tdep_h) $(nbsd_tdep_h) $(solib_svr4_h)
sparc-stub.o: sparc-stub.c
sparc-tdep.o: sparc-tdep.c $(defs_h) $(arch_utils_h) $(frame_h) \
	$(inferior_h) $(target_h) $(value_h) $(bfd_h) $(gdb_string_h) \
	$(regcache_h) $(osabi_h) $(sparc_tdep_h) $(gregset_h) $(gdbcore_h) \
	$(gdb_assert_h) $(symfile_h)
d2265 1
a2265 1
	$(doublest_h) $(cp_abi_h) $(cp_support_h) $(stabsread_h)
d2277 11
a2287 7
symfile.o: symfile.c $(defs_h) $(bfdlink_h) $(symtab_h) $(gdbtypes_h) \
	$(gdbcore_h) $(frame_h) $(target_h) $(value_h) $(symfile_h) \
	$(objfiles_h) $(source_h) $(gdbcmd_h) $(breakpoint_h) $(language_h) \
	$(complaints_h) $(demangle_h) $(inferior_h) $(filenames_h) \
	$(gdb_stabs_h) $(gdb_obstack_h) $(completer_h) $(bcache_h) \
	$(hashtab_h) $(gdb_assert_h) $(block_h) $(gdb_string_h) \
	$(gdb_stat_h)
d2290 2
a2291 4
	$(gdb_obstack_h) $(language_h) $(bcache_h) $(block_h) $(gdb_regex_h) \
	$(dictionary_h) $(gdb_string_h)
# OBSOLETE symm-nat.o: symm-nat.c
# OBSOLETE symm-tdep.o: symm-tdep.c
d2295 3
a2297 3
	$(language_h) $(demangle_h) $(inferior_h) $(linespec_h) $(source_h) \
	$(filenames_h) $(objc_lang_h) $(hashtab_h) $(gdb_obstack_h) \
	$(block_h) $(dictionary_h) $(gdb_string_h) $(gdb_stat_h) $(cp_abi_h)
d2301 3
a2306 3
thread-db.o: thread-db.c $(defs_h) $(gdb_assert_h) $(gdb_proc_service_h) \
	$(gdb_thread_db_h) $(bfd_h) $(gdbthread_h) $(inferior_h) \
	$(symfile_h) $(objfiles_h) $(target_h) $(regcache_h) $(solib_svr4_h)
d2313 1
a2313 1
	$(ui_out_h) $(cli_out_h)
d2318 2
a2319 3
	$(block_h) $(dictionary_h) $(ax_h) $(ax_gdb_h)
trad-frame.o: trad-frame.c $(defs_h) $(frame_h) $(trad_frame_h) \
	$(regcache_h)
d2327 4
a2330 4
utils.o: utils.c $(defs_h) $(gdb_assert_h) $(gdb_string_h) $(event_top_h) \
	$(gdbcmd_h) $(serial_h) $(bfd_h) $(target_h) $(demangle_h) \
	$(expression_h) $(language_h) $(charset_h) $(annotate_h) \
	$(filenames_h) $(inferior_h) $(mmalloc_h)
d2333 3
a2338 3
v850-tdep.o: v850-tdep.c $(defs_h) $(frame_h) $(inferior_h) $(target_h) \
	$(value_h) $(bfd_h) $(gdb_string_h) $(gdbcore_h) $(symfile_h) \
	$(arch_utils_h) $(regcache_h) $(symtab_h)
d2344 2
a2345 2
	$(gdbcmd_h) $(regcache_h) $(cp_abi_h) $(block_h) $(infcall_h) \
	$(dictionary_h) $(cp_support_h) $(gdb_string_h) $(gdb_assert_h)
d2357 1
a2357 1
	$(gdb_string_h) $(osabi_h) $(vax_tdep_h)
d2364 1
d2366 2
a2367 4
	$(command_h) $(buildsym_h) $(symfile_h) $(objfiles_h) \
	$(gdb_string_h) $(gdbthread_h) $(gdbcmd_h) $(wince_stub_h) \
	$(regcache_h) $(mips_tdep_h)
wince-stub.o: wince-stub.c $(wince_stub_h)
d2370 6
a2375 6
	$(regcache_h) $(gdb_assert_h) $(gdb_string_h) $(gdb_proc_service_h) \
	$(gregset_h) $(x86_64_tdep_h) $(x86_64_linux_tdep_h)
x86-64-linux-tdep.o: x86-64-linux-tdep.c $(defs_h) $(inferior_h) \
	$(gdbcore_h) $(regcache_h) $(osabi_h) $(gdb_string_h) \
	$(x86_64_tdep_h) $(x86_64_linux_tdep_h)
x86-64-tdep.o: x86-64-tdep.c $(defs_h) $(arch_utils_h) $(block_h) \
d2377 1
a2377 1
	$(inferior_h) $(gdbcmd_h) $(gdbcore_h) $(objfiles_h) $(regcache_h) \
d2390 2
a2391 1
# OBSOLETE z8k-tdep.o: z8k-tdep.c
d2400 4
a2403 5
	$(gdb_wait_h) $(gdb_regex_h) $(gdb_string_h) $(gdb_vfork_h) \
	$(linespec_h) $(expression_h) $(frame_h) $(value_h) $(language_h) \
	$(filenames_h) $(objfiles_h) $(source_h) $(disasm_h) $(ui_out_h) \
	$(top_h) $(cli_decode_h) $(cli_script_h) $(cli_setshow_h) \
	$(cli_cmds_h)
d2411 1
a2411 1
	$(cli_dump_h) $(gdb_assert_h) $(target_h)
d2416 1
a2416 2
cli-logging.o: $(srcdir)/cli/cli-logging.c $(defs_h) $(gdbcmd_h) $(ui_out_h) \
	$(gdb_string_h)
d2589 4
d2594 1
a2594 1
	$(mi_cmds_h) $(mi_getopt_h) $(gdb_string_h) $(ui_out_h) $(disasm_h)
d2598 1
a2598 2
	$(environ_h) $(command_h) $(ui_out_h) $(top_h) $(gdb_string_h) \
	$(gdb_stat_h)
a2599 6
mi-cmd-file.o: $(srcdir)/mi/mi-cmd-file.c $(defs_h) $(mi_cmds_h) \
	$(mi_getopt_h) $(ui_out_h) $(symtab_h) $(source_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/mi/mi-cmd-file.c
mi-cmds.o: $(srcdir)/mi/mi-cmds.c $(defs_h) $(top_h) $(mi_cmds_h) \
	$(gdb_string_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/mi/mi-cmds.c
d2601 2
a2602 2
	$(value_h) $(mi_cmds_h) $(ui_out_h) $(symtab_h) $(block_h) \
	$(stack_h) $(dictionary_h)
d2607 3
d2624 1
a2624 1
	$(gdb_h) $(frame_h) $(mi_main_h)
d2631 2
a2632 2
mi-symbol-cmds.o: $(srcdir)/mi/mi-symbol-cmds.c $(defs_h) $(mi_cmds_h) \
	$(symtab_h) $(ui_out_h)
d2657 1
a2657 2
signals.o: $(srcdir)/signals/signals.c $(server_h) $(defs_h) $(target_h) \
	$(gdb_string_h)
d2666 24
a2689 2
tuiCommand.o: $(srcdir)/tui/tuiCommand.c $(defs_h) $(tui_h) $(tuiData_h) \
	$(tuiWin_h) $(tuiIO_h)
d2691 1
a2691 4
tuiDataWin.o: $(srcdir)/tui/tuiDataWin.c $(defs_h) $(tui_h) $(tuiData_h) \
	$(tuiGeneralWin_h) $(tuiRegs_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tuiDataWin.c
tuiData.o: $(srcdir)/tui/tuiData.c $(defs_h) $(symtab_h) $(tui_h) \
d2694 7
a2700 4
tuiDisassem.o: $(srcdir)/tui/tuiDisassem.c $(defs_h) $(symtab_h) \
	$(breakpoint_h) $(frame_h) $(value_h) $(source_h) $(disasm_h) \
	$(tui_h) $(tuiData_h) $(tuiWin_h) $(tuiLayout_h) $(tuiSourceWin_h) \
	$(tuiStack_h) $(tui_file_h)
d2702 2
a2703 2
tuiGeneralWin.o: $(srcdir)/tui/tuiGeneralWin.c $(defs_h) $(tui_h) \
	$(tuiData_h) $(tuiGeneralWin_h) $(tuiWin_h)
d2705 2
a2706 2
tuiIO.o: $(srcdir)/tui/tuiIO.c $(defs_h) $(terminal_h) $(target_h) \
	$(event_loop_h) $(event_top_h) $(command_h) $(top_h) $(readline_h) \
d2710 2
a2711 2
tuiLayout.o: $(srcdir)/tui/tuiLayout.c $(defs_h) $(command_h) $(symtab_h) \
	$(frame_h) $(source_h) $(tui_h) $(tuiData_h) $(tuiDataWin_h) \
d2715 2
a2716 2
tuiRegs.o: $(srcdir)/tui/tuiRegs.c $(defs_h) $(tui_h) $(tuiData_h) \
	$(symtab_h) $(gdbtypes_h) $(gdbcmd_h) $(frame_h) $(regcache_h) \
d2720 6
a2725 2
tuiSourceWin.o: $(srcdir)/tui/tuiSourceWin.c $(defs_h) $(symtab_h) \
	$(frame_h) $(breakpoint_h) $(value_h) $(source_h) $(tui_h) \
d2729 3
a2731 8
tuiSource.o: $(srcdir)/tui/tuiSource.c $(defs_h) $(symtab_h) $(frame_h) \
	$(breakpoint_h) $(source_h) $(symtab_h) $(tui_h) $(tuiData_h) \
	$(tuiStack_h) $(tuiSourceWin_h) $(tuiSource_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tuiSource.c
tuiStack.o: $(srcdir)/tui/tuiStack.c $(defs_h) $(symtab_h) $(breakpoint_h) \
	$(frame_h) $(command_h) $(inferior_h) $(target_h) $(top_h) $(tui_h) \
	$(tuiData_h) $(tuiStack_h) $(tuiGeneralWin_h) $(tuiSource_h) \
	$(tuiSourceWin_h) $(tui_file_h)
d2733 5
a2737 4
tuiWin.o: $(srcdir)/tui/tuiWin.c $(defs_h) $(command_h) $(symtab_h) \
	$(breakpoint_h) $(frame_h) $(cli_cmds_h) $(top_h) $(source_h) \
	$(tui_h) $(tuiData_h) $(tuiGeneralWin_h) $(tuiStack_h) $(tuiRegs_h) \
	$(tuiDisassem_h) $(tuiSource_h) $(tuiSourceWin_h) $(tuiDataWin_h)
a2738 22
tui.o: $(srcdir)/tui/tui.c $(defs_h) $(gdbcmd_h) $(tui_h) $(tuiData_h) \
	$(tuiLayout_h) $(tuiIO_h) $(tuiRegs_h) $(tuiStack_h) $(tuiWin_h) \
	$(tuiSourceWin_h) $(tuiDataWin_h) $(readline_h) $(target_h) \
	$(frame_h) $(breakpoint_h) $(inferior_h) $(symtab_h) $(source_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tui.c
tui-file.o: $(srcdir)/tui/tui-file.c $(defs_h) $(ui_file_h) $(tui_file_h) \
	$(tui_tuiIO_h) $(tui_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tui-file.c
tui-hooks.o: $(srcdir)/tui/tui-hooks.c $(defs_h) $(symtab_h) $(inferior_h) \
	$(command_h) $(bfd_h) $(symfile_h) $(objfiles_h) $(target_h) \
	$(gdbcore_h) $(event_loop_h) $(event_top_h) $(frame_h) \
	$(breakpoint_h) $(gdb_events_h) $(ui_out_h) $(top_h) $(tui_h) \
	$(tuiData_h) $(tuiLayout_h) $(tuiIO_h) $(tuiRegs_h) $(tuiWin_h) \
	$(tuiStack_h) $(tuiDataWin_h) $(tuiSourceWin_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tui-hooks.c
tui-interp.o: $(srcdir)/tui/tui-interp.c $(defs_h) $(interps_h) $(top_h) \
	$(event_top_h) $(event_loop_h) $(ui_out_h) $(tui_tuiData_h) \
	$(readline_h) $(tui_tuiWin_h) $(tui_h) $(tui_tuiIO_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tui-interp.c
tui-out.o: $(srcdir)/tui/tui-out.c $(defs_h) $(ui_out_h) $(tui_h) \
	$(gdb_string_h) $(gdb_assert_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tui-out.c
@


1.410.2.11
log
@./
	* Makefile.in (tui-interp.o): Update dependencies.
tui/
	* tui-interp.c: Include "cli-out.h".
	(tui_resume): Update tui_old_uiout's stream to gdb_stdout.
@
text
@d2754 1
a2754 1
	$(readline_h) $(tui_tuiWin_h) $(tui_h) $(tui_tuiIO_h) $(cli_out_h)
@


1.410.2.12
log
@gdb/

2003-08-08  H.J. Lu  <hongjiu.lu@@intel.com>

	* Makefile.in (FLAGS_TO_PASS): Add DESTDIR.
	(install-only): Support DESTDIR.
	(uninstall): Likewise.
	(install-gdbtk): Likewise.

gdb/doc/

2003-08-08  H.J. Lu  <hongjiu.lu@@intel.com>

	* Makefile.in (install-info): Support DESTDIR.
	(install-html): Likewise.

gdb/gdbserver/

2003-08-08  H.J. Lu  <hongjiu.lu@@intel.com>

	* Makefile.in (install-only): Create dest dir. Support DESTDIR.
	(uninstall): Support DESTDIR.

mmalloc/

2003-08-08  H.J. Lu  <hongjiu.lu@@intel.com>

	* Makefile.in (install-info): Create dest dir. Support DESTDIR.
	(install): Likewise.
@
text
@a432 1
	"DESTDIR=$(DESTDIR)" \
d964 1
a964 1
		$(SHELL) $(srcdir)/../mkinstalldirs $(DESTDIR)$(bindir) ; \
d981 1
a981 2
		rm -f $(DESTDIR)$(bindir)/$$transformed_name$(EXEEXT) \
		      $(DESTDIR)$(man1dir)/$$transformed_name.1
d2464 1
a2464 1
	$(SHELL) $(srcdir)/../mkinstalldirs $(DESTDIR)$(bindir); \
@


1.410.2.13
log
@	* Makefile.in (i386-linux-nat.o): Update dependencies.
	* config/i386/nm-linux.h (LINUX_CHILD_POST_STARTUP_INFERIOR): Define.
	* config/nm-linux.h (CHILD_POST_STARTUP_INFERIOR, CHILD_POST_ATTACH)
	(CHILD_FOLLOW_FORK, KILL_INFERIOR): Define.
	* i386-linux-nat.c: Include "linux-nat.h".
	(child_post_startup_inferior): New function.
	* i386-nat.c (child_post_startup_inferior): Wrap in #ifdef.
	* infptrace.c (kill_inferior): Wrap in #ifdef.
	* lin-lwp.c (lin_lwp_attach_lwp): Call child_post_attach after
	attaching to each LWP.
	(child_wait, lin_lwp_wait): Call linux_handle_extended_wait.
	(init_lin_lwp_ops): Fill in some more operations.
	* linux-nat.h (linux_enable_event_reporting)
	(linux_handle_extended_wait, linux_child_post_startup_inferior): New
	prototypes.
	* linux-nat.c (linux_enable_event_reporting): New function.
	(child_post_attach, linux_child_post_startup_inferior)
	(child_post_startup_inferior, child_follow_fork)
	(linux_handle_extended_wait, kill_inferior): New functions.
@
text
@d1818 1
a1818 1
	$(gdb_proc_service_h) $(linux_nat_h)
@


1.410.2.14
log
@* configure.host: Add x86_64-*-freebsd*.
* configure.tgt: Add x86_64-*-freebsd*.
* Makefile.in (amd64fbsd-nat.o, amd64fbsd-tdep.o): New targets.
* x86-64-tdep.h (amd64fbsd_sigtramp_start, amd64fbsd_sigtramp_end,
amd64fbsd_sc_reg_offset): Add extern declarations.
(X86_64_RAX_REGNUM, X86_64_RDX_REGNUM, X86_64_RDI_REGNUM,
X86_64_RBP_REGNUM, X86_64_RSP_REGNUM, X86_64_RIP_REGNUM,
X86_64_EFLAGS_REGNUM, X86_64_ST0_REGNUM, X86_64_XMM0_REGNUM,
X86_64_XMM1_REGNUM): Moved here ...
* x86-64-tdep.c: ... from here.
* amd64fbsd-nat.c: New file.
* amd64fbsd-tdep.c: New file.
* config/i386/nm-fbsd64.h: New file.
* config/i386/fbsd64.mh: New file.
* config/i386/fbsd64.mt: New file.
@
text
@a1537 5
amd64fbsd-nat.o: amd64fbsd-nat.o $(defs_h) $(inferior_h) $(regcache_h) \
	$(gdb_assert_h) $(gregset_h) $(x86_64_tdep_h)
amd64fbsd-tdep.o: amd64fbsd-tdep.o $(defs_h) $(arch_utils_h) $(frame_h) \
	$(gdbcore_h) $(regcache_h) $(osabi_h) $(gdb_string_h) \
	$(x86_64_tdep_h)
@


1.410.2.15
log
@[Part of 2003-09-19 change, mistakenly not committed.]

Merge from mainline:

2003-09-12  Jim Blandy  <jimb@@redhat.com>

* dbxread.c (read_dbx_symtab): Don't report an internal error if
the file has no .data, .bss, or .rodata sections.  Instead wait
until we see a variable alleged to live in one of those sections.

2003-09-12  Jim Blandy  <jimb@@redhat.com>

* dbxread.c (read_dbx_symtab): If we have no .data section and no
.bss section, presume that any variables we find live in the
.rodata section.

2003-09-12  Jim Blandy  <jimb@@redhat.com>

* dbxread.c (read_dbx_symtab): Add FIXME about finding section
offsets for global and static variables.

2003-09-09  Jim Blandy  <jimb@@redhat.com>

* dbxread.c (read_dbx_symtab): The N_DATA and N_DATA | N_EXT
symbol types are, by definition, in the .data section, so it is
correct to use SECT_OFF_DATA (objfile) here, not data_sect_index.
If there is no .data section, there should be no N_DATA or N_DATA
| N_EXT symbols.

2003-07-10  Jim Blandy  <jimb@@redhat.com>

* Makefile.in (dbxread.o): Note new dependency on $(gdb_assert_h).
* dbxread.c: #include "gdb_assert.h".
(read_dbx_symtab): If the objfile has no .data section, use the
section index for the .bss section instead.
@
text
@d1666 1
a1666 1
	$(cp_abi_h) $(aout_aout64_h) $(aout_stab_gnu_h) $(gdb_assert_h)
@


1.409
log
@	* Makefile.in (cli-cmds.o): Depend on $(gdb_vfork_h)
	* cli/cli-cmds.c: Include "gdb_vfork.h".
	(shell_escape): Use vfork.
@
text
@d2004 4
a2007 4
	$(language_h) $(gdbcore_h) $(symfile_h) $(objfiles_h) \
	$(gdbtypes_h) $(target_h) $(arch_utils_h) $(regcache_h) \
	$(osabi_h) $(mips_tdep_h) $(block_h) $(opcode_mips_h) \
	$(elf_mips_h) $(elf_bfd_h) $(symcat_h)
@


1.408
log
@2003-06-19  Michael Snyder  <msnyder@@redhat.com>

	* linux-nat.h: New file.
	* linux-nat.c: Include linux-nat.h.
	* lin-lwp.c: Include linux-nat.h.
	Move struct lwp_info def to linux-nat.h.
	* linux-proc.c: Include linux-nat.h.
	(linux_make_note_section): Iterate over lwps instead of threads.
	(linux_do_thread_registers): Use lwp instead of merged pid.
	* config/nm-linux.h: Move miscelaneous def'ns to linux-nat.h.
	* Makefile.in (lin-lwp.o, linux-proc.o, linux-nat.o):
	Add dependency on linux_nat_h.
@
text
@d2419 1
a2419 1
	$(expression_h) $(language_h) $(objfiles_h)
@


1.407
log
@	* Makefile.in (linux-nat.o): Add rule.
	* linux-nat.c: New file.
	* config/nm-linux.h (CHILD_INSERT_FORK_CATCHPOINT): Define.
	(CHILD_INSERT_VFORK_CATCHPOINT): Define.
	(CHILD_INSERT_EXEC_CATCHPOINT): Define.
	* config/alpha/alpha-linux.mh (NATDEPFILES): Add linux-nat.o.
	* config/arm/linux.mh (NATDEPFILES): Likewise.
	* config/i386/linux.mh (NATDEPFILES): Likewise.
	* config/i386/x86-64linux.mh (NATDEPFILES): Likewise.
	* config/ia64/linux.mh (NATDEPFILES): Likewise.
	* config/m68k/linux.mh (NATDEPFILES): Likewise.
	* config/mips/linux.mh (NATDEPFILES): Likewise.
	* config/powerpc/linux.mh (NATDEPFILES): Likewise.
	* config/s390/s390.mh (NATDEPFILES): Likewise.
	* config/sparc/linux.mh (NATDEPFILES): Likewise.
@
text
@d688 1
d1916 2
a1917 1
	$(gdbthread_h) $(inferior_h) $(target_h) $(regcache_h) $(gdbcmd_h)
d1921 2
a1922 1
linux-nat.o: linux-nat.c $(defs_h) $(inferior_h) $(target_h) $(gdb_wait_h)
d1925 1
a1925 1
	$(cli_decode_h) $(gdb_string_h)
@


1.406
log
@2003-06-14  Andrew Cagney  <cagney@@redhat.com>

	* mips-tdep.c (mips_register_to_value): Make static.
	(mips_value_to_register): Make static.
	* i386-tdep.c (i386_fetch_pointer_argument): Make static.
	* ia64-tdep.c (ia64_register_raw_size): Make static.
	(ia64_register_virtual_size): Make static.
	(ia64_register_byte): Make static.
	* i387-tdep.c: Include "i387-tdep.h".
	(print_387_control_word): Delete function.
	(print_387_status_word): Delete function.
	(print_387_status_bits): Delete function.
	(print_387_control_bits): Delete function.
	* Makefile.in (i387-tdep.o): Update dependencies.
	* rdi-share/host.h (Fail): Declare.
	* remote-rdi.c (Fail): Update to match declaration.
@
text
@d1919 1
@


1.405
log
@2003-06-14  Andrew Cagney  <cagney@@redhat.com>

	* config/mips/embedl64.mt (TDEPFILES): Delete "remote-array.o".
	* config/mips/embedl.mt (TDEPFILES): Delete "remote-array.o".
	* config/mips/embed64.mt (TDEPFILES): Delete "remote-array.o".
	* config/djgpp/fnchange.lst: Delete "remote-array.c".
	* README: Delete reference to remote-array.
	* Makefile.in (ALLDEPFILES): Remove "remote-array.c".
	(remote-array.o): Delete target.
	* config/mips/embed.mt (TDEPFILES): Delete "remote-array.o".
	* remote-array.c: Delete file.
@
text
@d1854 2
a1855 1
	$(gdb_assert_h) $(gdb_string_h) $(doublest_h) $(i386_tdep_h)
@


1.404
log
@	* Makefile.in (exc_request_U_h): Define
	(exc_request_S_h): Likewise.
	(msg_reply_S_h): Likewise.
	(msg_U_h): Likewise.
	(notify_S_h): Likewise.
	(process_reply_S_h): Likewise.
	(gnu-nat.o): Depend on gdb_obstack_h
	* gnu-nat.c: Include "gdb_obstack.h".
@
text
@d1405 1
a1405 1
	remote-array.c remote-e7000.c \
a2109 3
remote-array.o: remote-array.c $(defs_h) $(gdbcore_h) $(target_h) \
	$(gdb_string_h) $(command_h) $(serial_h) $(monitor_h) \
	$(remote_utils_h) $(inferior_h) $(version_h) $(regcache_h)
@


1.403
log
@* arm-tdep.c (solib-svr4.h): Dont' include it.
(arm_linux_svr4_fetch_link_map_offsets): Move to ...
* arm-linux-tdep.c: ... here.  Make static.
(arm_linux_init_abi): Register it.
(solib-svr4.h): Include it.
* Makefile.in: Update dependencies.
* config/arm/tm-linux.h (SVR4_FETCH_LINK_MAP_OFFSETS): Delete.
(arm_linux_svr4_fetch_link_map_offsets): Delete declaration.
@
text
@d648 2
d699 2
d702 1
d715 1
d1776 1
a1776 1
	$(msg_reply_S_h) $(exc_request_U_h) $(msg_U_h)
@


1.402
log
@2003-06-12  Andrew Cagney  <cagney@@redhat.com>

	* wince.c: Include "mips-tdep.h".
	* mips-tdep.h (mips_next_pc): Declare.
	* mcore-tdep.c: Make more local functions static.
	* Makefile.in (wince.o): Update dependencies.
@
text
@d1555 1
a1555 1
	$(osabi_h)
d1558 1
a1558 1
	$(doublest_h) $(value_h) $(arch_utils_h) $(solib_svr4_h) $(osabi_h) \
@


1.401
log
@	* Makefile.in (tuiDisassem.o): Update dependencies.

tui:
	* tuiSource.c (tuiVerticalSourceScroll): Use get_frame_pc.
	* tuiSourceWin.c (tuiHorizontalSourceScroll): Likewise.
	* tuiStack.c (tui_get_function_from_frame): Likewise.
	(tuiShowFrameInfo): Likewise.
	* tuiWin.c (_makeVisibleWithNewHeight): Likewise.
	* tui-hooks.c (tui_selected_frame_level_changed_hook): Likewise.
	* tuiDisassem.c (tuiVerticalDisassemScroll): Likewise.
	Include "disasm.h".
@
text
@d2374 2
a2375 3
	$(command_h) $(buildsym_h) $(symfile_h) $(objfiles_h) \
	$(gdb_string_h) $(gdbthread_h) $(gdbcmd_h) $(wince_stub_h) \
	$(regcache_h)
@


1.400
log
@2003-06-12  David Carlton  <carlton@@bactrian.org>

	* symtab.h: Delete declaration of make_symbol_overload_list.
	Add declaration of lookup_partial_symbol.
	* symtab.c (remove_params): Move to cp-support.c.
	(overload_list_add_symbol, make_symbol_overload_list)
	(sym_return_val_size, sym_return_val_index): Ditto.
	(lookup_partial_symbol): Make extern.
	* cp-support.h: Add declaration of make_symbol_overload_list.
	* cp-support.c: Include dictionary.h, objfiles.h, frame.h,
	symtab.h, and block.h.
	(remove_params): Move here from symtab.c.
	(overload_list_add_symbol, make_symbol_overload_list)
	(sym_return_val_size, sym_return_val_index): Ditto.
	* valops.c: Include cp-support.h.
	* Makefile.in (cp-support.o): Depend on dictionary_h, objfiles_h,
	frame_h, and block_h.
	(valops.o): Depend on cp_support_h.
@
text
@d2707 1
a2707 1
	$(tui_file_h)
@


1.399
log
@2003-06-11  David Carlton  <carlton@@bactrian.org>

	* dictionary.h: New.
	* dictionary.c: New.
	* block.h: Add opaque declaration for struct dictionary.
	(struct block): Add 'dict' member; delete 'hashtable', 'nsyms',
	'sym' members.
	(BLOCK_DICT): New macro.
	Delete macros BLOCK_HASHTABLE, BLOCK_NSYMS, BLOCK_SYM,
	BLOCK_BUCKETS, BLOCK_BUCKET, BLOCK_HASHTABLE_SIZE,
	BLOCK_SHOULD_SORT.
	(ALL_BLOCK_SYMBOLS): Update definition.
	* Makefile.in (SFILES): Add dictionary.c.
	(dictionary_h): New.
	(COMMON_OBS): Add dictionary.o.
	(dictionary.o): New.
	(ada-lang.o): Depend on dictionary_h.
	(buildsym.o, coffread.o, jv-lang.o, mdebugread.o, objfiles.o)
	(stack.o, symmisc.o, symtab.o, tracepoint.o, valops.o)
	(mi-cmd-stack.o): Ditto.
	(gdbtk-cmds.o): Update dependencies.
	(gdbtk-stack.o): Ditto.
	* ada-lang.c: Include dictionary.h.
	(symtab_for_sym): Update uses of ALL_BLOCK_SYMBOLS.
	(fill_in_ada_prototype, debug_print_block): Ditto.
	(ada_add_block_symbols): Update uses of ALL_BLOCK_SYMBOLS; replace
	explicit iteration by use of ALL_BLOCK_SYMBOLS.  Delete variable
	'is_sorted'.
	* mdebugread.c: Include dictionary.h.
	(struct parse_stack): Delete 'maxsyms' member.
	(parse_symbol): Update calls to new_block.  Delete calls to
	shrink_block.  Use dictionary methods.
	(psymtab_to_symtab_1): Delete calls to sort_symtab_syms.
	Update calls to new_symtab.  Don't maintain maxsyms data.
	(mylookup_symbol): Update use of ALL_BLOCK_SYMBOLS.
	(add_symbol): Just call dict_add_symbol.
	(new_symtab): Delete 'maxsyms' argument.
	(new_symtab): Update calls to new_block.
	(new_block): Delete 'maxsyms' argument; add 'function' argument.
	(shrink_block): Delete function.
	(fixup_sigtramp): Update call to new_block.  Add symbol via
	dict_add_symbol.
	* jv-lang.c: Include dictionary.h.
	(get_java_class_symtab): Set the BLOCK_DICT of the blocks
	appropriately.  Set class_symtab->free_func.  Make sure the
	blockvector is big enough to hold two blocks.
	(add_class_symtab_symbol): Use dictionary methods.
	(free_class_block): New function.
	(type_from_class): Replace explicit iteration by
	ALL_BLOCK_SYMBOLS.
	* symtab.h (struct symtab): Replace 'free_ptr' method by
	'free_func'.
	* dwarf2read.c (psymtab_to_symtab_1): Delete call to
	sort_symtab_syms.
	* dwarfread.c (psymtab_to_symtab_1): Delete call to
	sort_symtab_syms.
	* coffread.c (coff_symfile_read): Delete call to sort_symtab_syms.
	Include dictionary.h.
	(patch_opaque_types): Update use of ALL_BLOCK_SYMBOLS.
	* dbxread.c (dbx_psymtab_to_symtab_1): Delete call to
	sort_symtab_syms.
	* objfiles.c: Include dictionary.h.
	(objfile_relocate): Update use of ALL_BLOCK_SYMBOLS.
	* buildsym.c: Include dictionary.h.
	(finish_block): Use dictionary methods.
	(end_symtab): Set free_func to NULL, not free_ptr.
	* tracepoint.c: Include dictionary.h.
	(add_local_symbols): Update use of ALL_BLOCK_SYMBOLS.
	(scope_info): Ditto.
	* stack.c: Include dictionary.h.
	(print_block_frame_locals): Update use of ALL_BLOCK_SYMBOLS.
	(print_block_frame_labels, print_frame_arg_vars)
	(print_frame_args): Ditto.
	* symmisc.c (free_symtab_block): Use dictionary methods.
	(dump_symtab): Ditto.
	(free_symtab): Replace use of 'free_ptr' by 'free_func'.
	Include	dictionary.h.
	* symfile.h: Delete declarations of sort_block_syms,
	sort_symtab_syms.
	* symfile.c (sort_block_syms): Delete.
	(sort_symtab_syms): Delete.
	* symtab.c: Include dictionary.h.
	(lookup_block_symbol): Use dictionary iterators.
	(find_pc_sect_symtab): Update use of ALL_BLOCK_SYMBOLS.
	(search_symbols, make_symbol_completion_list): Ditto.
	(make_symbol_overload_list): Ditto.
	* valops.c (value_of_local): Use dict_empty.
	Include dictionary.h.

2003-06-11  David Carlton  <carlton@@bactrian.org>

	* generic/gdbtk-stack.c: Include dictionary.h.
	(gdb_block_vars): Update use of ALL_BLOCK_SYMBOLS.
	(gdb_get_blocks, gdb_get_vars_command): Ditto.
	* generic/gdbtk-cmds.c: Include dictionary.h.
	(gdb_listfuncs): Update use of ALL_BLOCK_SYMBOLS.

2003-06-11  David Carlton  <carlton@@bactrian.org>

	* mi-cmd-stack.c: Include dictionary.h.
	(list_args_or_locals): Update use of ALL_BLOCK_SYMBOLS.
@
text
@d1640 2
a1641 1
	$(demangle_h) $(gdb_assert_h) $(gdbcmd_h)
d2353 1
a2353 1
	$(gdb_assert_h) $(block_h) $(dictionary_h)
@


1.398
log
@2003-06-11  Andrew Cagney  <cagney@@redhat.com>

	* remote-fileio.c: Include "remote-fileio.h".
	* Makefile.in (remote-fileio.o): Update dependencies.
	(remote_fileio_h): Fix typo.
@
text
@d516 1
a516 1
	dbxread.c demangle.c disasm.c doublest.c dummy-frame.c \
d636 1
d847 1
a847 1
	block.o symtab.o symfile.o symmisc.o linespec.o \
d1505 1
a1505 1
	$(infcall_h)
d1590 1
a1590 1
	$(stabsread_h) $(block_h) $(cp_support_h)
d1614 2
a1615 1
	$(target_h) $(gdb_assert_h) $(block_h) $(coff_pe_read_h)
d1669 2
d1893 1
a1893 1
	$(jv_lang_h) $(gdbcore_h) $(block_h) $(demangle_h)
d1974 1
a1974 1
	$(block_h) \
d2035 1
a2035 1
	$(block_h)
d2277 1
a2277 1
	$(gdb_assert_h)
d2298 1
a2298 1
	$(readline_h) $(block_h) $(gdb_regex_h)
d2304 1
a2304 1
	$(cp_abi_h) $(source_h) $(block_h) $(objc_lang_h)
d2325 1
a2325 1
	$(block_h) $(ax_h) $(ax_gdb_h) $(readline_h)
d2352 1
a2352 1
	$(gdb_assert_h) $(block_h)
d2521 4
a2524 3
	$(defs_h) $(symtab_h) $(inferior_h)	\
	$(command_h) $(bfd_h) $(top_h) $(symfile_h) $(objfiles_h) $(target_h) \
	$(gdb_string_h) $(tracepoint_h) $(source_h) $(regcache_h)
d2565 2
a2566 2
	$(defs_h) $(frame_h) $(value_h) $(target_h) $(breakpoint_h) \
	$(linespec_h)
d2607 2
a2608 1
	$(value_h) $(mi_cmds_h) $(ui_out_h) $(symtab_h) $(block_h) $(stack_h)
@


1.397
log
@2003-06-10  Andrew Cagney  <cagney@@redhat.com>

	* remote-fileio.h (REMOTE_FILEIO_H): Replace FILEIO_H.
	* Makefile.in (remote-fileio.o): Update dependencies.
	* remote-fileio.c: Include "gdb_wait.h" and "gdb_stat.h".  Do not
	include <setjmp.h>, or <sys/types.h> conditional on USG.
	(remote_fio_jmp_buf): Delete global variable.
@
text
@d713 1
a713 1
remote_fileio_h = remote_fileio.h
d2159 2
a2160 1
	$(remote_h) $(gdb_fileio_h) $(gdb_wait_h) $(gdb_stat_h)
@


1.396
log
@	* Makefile.in: Add dependencies for remote-fileio.o.
	* remote-fileio.c: New file implementing the remote File-I/O protocol.
	* remote-fileio.h: New header file defining remote File-I/O interface.
	* remote.c (remote_write_bytes, remote_read_bytes): Remove
	static storage class.
	(remote_wait, remote_async_wait): Call remote_fileio_request() on
	'F' packet.
	(_initialize_remote): Call initialize_remote_fileio().
	* remote.h: Declare remote_write_bytes() and remote_read_bytes().

	* Makefile.in (REMOTE_OBS): Add remote-fileio.o
	(SFILES): Add remote-fileio.c.
	Add dependencies for building remote-fileio.o.  Add remote-fileio.h to
	dependencies for building remote.o.
	* defs.h: Declare gdb_stdin, gdb_stdtargerr and gdb_stdtargin.
	* main.c: New ui_file gdb_stdin, gdb_stdtargerr and gdb_stdtargin.
	(captured_main): Initialize new ui_files.
	* ui-file.c: Add read and fgets input functions.
	(ui_file_new): set ui_file_fputs and ui_file_read to null functions.
	(null_file_read): New function.
	(ui_file_read): New function.
	(set_ui_file_read): New function.
	(stdio_file_read): New function.
	* ui-file.h: New type ui_file_read_ftype.
	(set_ui_file_read): Declare.
	(ui_file_read): Declare.
@
text
@d2158 2
a2159 1
remote-fileio.o: remote-fileio.c $(defs_h) $(gdb_string_h) $(gdbcmd_h) $(remote_h)
@


1.395
log
@2003-06-09  Andrew Cagney  <cagney@@redhat.com>

	* printcmd.c (print_frame_nameless_args): Moved to "stack.c".
	(print_frame_args): Moved to "stack.c".
	* stack.c: Include "gdb_assert.h".
	(print_frame_nameless_args): Moved from "printcmd.c", made static.
	(print_frame_args): Moved from "printcmd.c".
	* frame.h (print_frame_args): Delete declaration.
	* Makefile.in (stack.o): Update dependencies.
@
text
@d403 1
a403 1
REMOTE_OBS = remote.o dcache.o remote-utils.o tracepoint.o ax-general.o ax-gdb.o
d538 1
a538 1
	regcache.c reggroups.c remote.c \
d713 1
d2157 2
a2158 1
	$(gdbcore_h) $(solib_h)
@


1.394
log
@2003-06-08  Andrew Cagney  <cagney@@redhat.com>

	* acinclude.m4 (gcc_AC_CHECK_DECL, (gcc_AC_CHECK_DECL): Stolen
	from GCC's acinclude.m4.
	* configure.in: Check for getopt's delcaration.
	* aclocal.m4, config.in, configure: Re-generate.
	* main.c (error_init): Delete declaration.
	* defs.h (error_init): Declare.
	* rs6000-tdep.c (rs6000_fetch_pointer_argument): Make static.
	(rs6000_convert_from_func_ptr_addr): Make static.
	(_initialize_rs6000_tdep): Add declaration.
	* cli/cli-cmds.c (dont_repeat): Delete declaration.
	(show_commands, set_verbose, show_history): Delete declaration.
	* top.h (set_verbose): Add declaration.
	(show_history, set_history, show_commands): Add declaration.
	(do_restore_instream_cleanup): Add declaration.
	* objc-lang.c (specialcmp): Make static.
	(print_object_command): Make static.
	(find_objc_msgsend): Make static.
	(find_objc_msgcall_submethod_helper): Make static.
	(find_objc_msgcall_submethod): Make static.
	(_initialize_objc_language): Add declaration.
	(find_implementation_from_class): Make static.
	(find_implementation): Make static.
	* objc-exp.y (yylex): Delete lookup_struct_typedef declaration.
	* objc-lang.h (lookup_struct_typedef): Add declaration.
	* cli/cli-interp.c (_initialize_cli_interp): Add declaration.
	* cli/cli-script.c (clear_hook_in_cleanup): Make static.
	(do_restore_user_call_depth): Make static.
	(do_restore_instream_cleanup): Delete declaration.
	(dont_repeat): Delete declaration.
	* cli/cli-decode.c (add_abbrev_cmd): Delete function.
	* cli/cli-dump.c (_initialize_cli_dump): Add declaration.
	* reggroups.c (_initialize_reggroup): Add declaration.
	* cp-support.c (_initialize_cp_support): Add declaration.
	* cp-abi.c (_initialize_cp_abi): Add declaration.
	* hpacc-abi.c (_initialize_hpacc_abi): Add declaration.
	* gnu-v3-abi.c (gnuv3_baseclass_offset): Make static.
	(_initialize_gnu_v3_abi): Add declaration.
	* gnu-v2-abi.c (gnuv2_value_rtti_type): Make static.
	(_initialize_gnu_v2_abi): Add declaration.
	* frame-base.c (_initialize_frame_base): Add declaration.
	* doublest.c (floatformat_from_length): Make static.
	* frame-unwind.c (_initialize_frame_unwind): Add declaration.
	* frame.c (create_sentinel_frame): Make static.
	(_initialize_frame): Add declaration.
	* top.c (do_catch_errors): Make static.
	(gdb_rl_operate_and_get_next_completion): Make static.
	* typeprint.c: Include "typeprint.h".
	* sentinel-frame.c (sentinel_frame_prev_register): Make static.
	(sentinel_frame_this_id): Make static.
	* p-valprint.c (_initialize_pascal_valprint): Add declaration.
	* ui-out.c (make_cleanup_ui_out_begin_end): Delete function.
	* dwarf2-frame.c (dwarf2_frame_cache): Make static.
	* p-exp.y (push_current_type, pop_current_type): ISO C declaration.
	* dwarf2expr.h (dwarf_expr_context): ISO C declaration.
	* maint.c (maintenance_print_architecture): Make static.
	* signals/signals.c (_initialize_signals): Add declaration.
	* std-regs.c (_initialize_frame_reg): Add declaration.
	* jv-exp.y (push_variable): ISO C definition.
	(push_qualified_expression_name): Ditto.
	* memattr.c (_initialize_mem): Add declaration.
	* remote.c (remote_check_watch_resources): Make static.
	(remote_stopped_by_watchpoint): Make static.
	(remote_stopped_data_address): Make static.
	* d10v-tdep.c (nr_dmap_regs): Make static.
	(a0_regnum): Make static.
	(d10v_frame_unwind_cache): Make static.
	(d10v_frame_p): Make static.
	* osabi.c (show_osabi): Make static.
	(_initialize_gdb_osabi): Add extern declaration.
	* gdbtypes.c (make_qualified_type): Make static.
	(safe_parse_type): Make static.
	* macrocmd.c (_initialize_macrocmd): Add extern declaration.
	* macrotab.c (macro_bcache_free): Make static.
	* interps.c (interp_set_quiet): Make static.
	(interpreter_exec_cmd): Make static.
	* stack.h (select_frame_command): New file.
	* stack.c: Include "stack.h".
	(select_frame_command_wrapper): Delete function.
	(select_frame_command): Make global.
	* infcall.c: Include "infcall.h".
	* linespec.c: Include "linespec.h".
	* symfile.c (sections_overlap): Make static.
	* cp-support.h (cp_initialize_namespace): ISO C declaration.
	* charset.c (_initialize_charset): Add missing prototype.
	* regcache.c (init_legacy_regcache_descr): Make static.
	(do_regcache_xfree): Make static.
	(regcache_xfer_part): Make static.
	(_initialize_regcache): Add missing prototype.
	* breakpoint.c (parse_breakpoint_sals): Make static.
	(breakpoint_sals_to_pc): Make static.
	* interps.h (clear_interpreter_hooks): ISO C declaration.
	* Makefile.in (stack_h): Define.
	(stack.o, typeprint.o, mi-main.o): Update dependencies.
	(mi-cmd-stack.o, infcall.o, linespec.o): Update dependencies.

Index: mi/ChangeLog
2003-06-08  Andrew Cagney  <cagney@@redhat.com>

	* mi-parse.c (_initialize_mi_parse): Delete function.
	* mi-main.c: Include "mi-main.h".
	* mi-interp.c (_initialize_mi_interp): Add declaration.
	* mi-cmd-stack.c: Include "stack.h".
	(select_frame_command_wrapper): Delete extern declaration.
	(mi_cmd_stack_select_frame): Replace select_frame_command_wrapper
	with select_frame_command.
@
text
@d2268 2
a2269 1
	$(inferior_h) $(annotate_h) $(ui_out_h) $(block_h) $(stack_h)
@


1.393
log
@2003-06-08  Andrew Cagney  <cagney@@redhat.com>

	* Makefile.in (d10v-tdep.o): Update dependencies.
	(SFILES): Add trad-frame.c.
	(trad_frame_h): Define.
	(COMMON_OBS): Add trad-frame.o.
	(trad-frame.o): Specify dependencies.
	* d10v-tdep.c: Include "trad-frame.h".
	(saved_regs_unwinder): Delete function.
	(d10v_frame_prev_register): Use trad_frame_prev_register.
	(struct d10v_unwind_cache): Change type of "saved_regs" to "struct
	trad_frame", delete "regs" and "prev_sp".
	(prologue_find_regs): Use trad-frame.
	* trad-frame.h, trad-frame.c: New files.
@
text
@d729 1
d1904 2
a1905 2
	$(symfile_h) $(objfiles_h) $(demangle_h) $(value_h) $(completer_h) \
	$(cp_abi_h) $(source_h) $(parser_defs_h) $(block_h) $(objc_lang_h)
d2267 2
a2268 2
	$(gdbcore_h) $(target_h) $(breakpoint_h) $(demangle_h) $(inferior_h) \
	$(annotate_h) $(ui_out_h) $(source_h) $(block_h)
d2320 2
a2321 1
	$(gdbcmd_h) $(target_h) $(language_h) $(cp_abi_h) $(gdb_string_h)
d2597 1
a2597 1
	$(value_h) $(mi_cmds_h) $(ui_out_h) $(symtab_h) $(block_h)
@


1.392
log
@2003-06-07  Andrew Cagney  <cagney@@redhat.com>

	* gdbarch.sh (TARGET_READ_SP): Add predicate, delete default.
	* gdbarch.h, gdbarch.c: Regenerate.
	* mn10300-tdep.c: Include "gdb_assert.h".
	(mn10300_read_fp): New function.
	(mn10300_gdbarch_init): Set deprecated_target_read_fp to
	mn10300_read_fp.  Do not set read_sp to generic_target_read_sp.
	* ia64-tdep.c: Include "gdb_assert.h".
	(ia64_read_fp): New function.
	(ia64_gdbarch_init): Set deprecated_target_read_fp to
	ia64_read_sp.  Do not set read_sp to generic_target_read_sp.
	* regcache.c (generic_target_read_sp): Delete function.
	(read_sp): Try TARGET_READ_SP and SP_REGNUM for the SP register.
	* inferior.h (generic_target_read_sp): Delete declaration.
	* frv-tdep.c (frv_gdbarch_init): Do not set read_sp to
	generic_target_read_sp.
	* m68hc11-tdep.c (m68hc11_gdbarch_init): Ditto.
	* sparc-tdep.c (sparc_gdbarch_init): Ditto
	* sh-tdep.c (sh_gdbarch_init): Ditto.
	* rs6000-tdep.c (rs6000_gdbarch_init): Ditto.
	* Makefile.in (mn10300-tdep.o, ia64-tdep.o): Update dependencies.
@
text
@d543 3
a545 1
	target.c thread.c top.c tracepoint.c typeprint.c \
d734 1
d877 2
a878 1
	reggroups.o
d1650 3
a1652 3
	$(objfiles_h) $(language_h) $(arch_utils_h) $(regcache_h) \
	$(remote_h) $(floatformat_h) $(gdb_sim_d10v_h) $(sim_regno_h) \
	$(gdb_assert_h) $(disasm_h)
d2316 1
@


1.391
log
@2003-06-05  Andrew Cagney  <cagney@@redhat.com>

	* Makefile.in (value_h): Add $(frame_h).
	* value.h: Include "frame.h".
	(struct value): Replace "frame_addr" with "frame_id".
	(VALUE_FRAME_ID): Replace VALUE_FRAME.
	* values.c (allocate_value): Use VALUE_FRAME_ID.
	(value_copy): Use VALUE_FRAME_ID.
	* findvar.c (value_from_register): Use VALUE_FRAME_ID.
	* valops.c (value_assign): Update.  Use frame_find_by_id.
@
text
@d1847 1
a1847 1
	$(value_h) $(objfiles_h) $(elf_common_h) $(elf_bfd_h)
d2001 3
a2003 3
mn10300-tdep.o: mn10300-tdep.c $(defs_h) $(frame_h) $(inferior_h) \
	$(target_h) $(value_h) $(bfd_h) $(gdb_string_h) $(gdbcore_h) \
	$(symfile_h) $(regcache_h) $(arch_utils_h)
@


1.391.2.1
log
@2003-06-06  Andrew Cagney  <cagney@@redhat.com>

	* frame.h (put_frame_register): Declare.
	* frame.c (put_frame_register): New function.

	* arch-utils.c: Include "gdbcore.h".
	(legacy_convert_register_p): Add "type" parameter.
	(legacy_register_to_value): Rewrite, use "frame" to get the
	register value.
	(legacy_value_to_register): Rewrite, use "frame" to find the
	register's location before storing.
	* arch-utils.h (legacy_convert_register_p): Update.
	(legacy_register_to_value, legacy_value_to_register): Update.

	* Makefile.in (arch-utils.o): Update dependencies.

	* findvar.c (value_from_register): Rewrite, eliminate use of
	REGISTER_CONVERT_TO_TYPE, pass "type" to CONVERT_REGISTER_P, pass
	"frame" to REGISTER_TO_VALUE.

	* gdbarch.sh (CONVERT_REGISTER_P): Add "type" parameter.
	(REGISTER_TO_VALUE, VALUE_TO_REGISTER): Replace "type", "from" and
	"to" parameters with "frame" and "value".
	* gdbarch.h, gdbarch.c: Re-generate.

	* mips-tdep.c (mips_convert_register_p): New function.
	(mips_value_to_register): Replace mips_register_convert_from_type.
	(mips_register_to_value): Replace mips_register_convert_to_type.
	(mips_gdbarch_init): Set conver_register_p, value_to_register and
	register_to_value.

	* valops.c (value_assign): Move the CONVERT_REGISTER code to the
	lval_reg_frame_relative + lval_register branch of the switch.  Do
	not use REGISTER_CONVERT_FROM_TYPE.  Use put_frame_register.
@
text
@d1542 1
a1542 1
	$(version_h) $(floatformat_h) $(gdbcore_h)
@


1.390
log
@        * alpha-tdep.c (alpha_dwarf2_init_abi): New.
        * alpha-tdep.h (alpha_dwarf2_init_abi): Declare it.
        * alpha-linux-tdep.c (alpha_linux_init_abi): Use it.
        * alphafbsd-tdep.c (alphafbsd_init_abi): Register dwarf2 and mdebug
        unwind routines.
        * alphanbsd-tdep.c (alphanbsd_init_abi): Likewise.
        * config/alpha/fbsd.mt (TDEPFILES): Add alpha-mdebug-tdep.o.
        * config/alpha/nbsd.mt (TDEPFILES): Likewise.

        * alpha-linux-tdep.c: Remove unnecessary includes.
        * Makefile.in (alpha-linux-tdep.o): Update.
@
text
@d738 1
a738 1
value_h = value.h $(doublest_h) $(symtab_h) $(gdbtypes_h) $(expression_h)
@


1.389
log
@        * alpha-osf1-tdep.c (objfiles.h): #include, needed for symfile_objfile.
        * Makefile.in (alpha-osf1-tdep.o): Update dependencies.
@
text
@d1512 2
a1513 3
alpha-linux-tdep.o: alpha-linux-tdep.c $(defs_h) $(frame_h) $(frame_base_h) \
	$(frame_unwind_h) $(dwarf2_frame_h) $(gdbcore_h) $(gdb_assert_h) \
	$(osabi_h) $(symtab_h) $(symfile_h) $(value_h) $(alpha_tdep_h) 
d1523 1
a1523 1
	$(elf_bfd_h) $(alpha_tdep_h)
@


1.388
log
@        * Makefile.in (ALLDEPFILES): Add alpha-mdebug-tdep.c.
        (alpha-linux-tdep.o): Update dependencies.
        (alpha-nat.o, alpha-tdep.o, alpha-mdebug-tdep.o): Likewise.
        * alpha-mdebug-tdep.c: Remove unneeded includes.
@
text
@d1518 1
a1518 1
	$(value_h) $(osabi_h) $(gdb_string_h) $(alpha_tdep_h)
@


1.387
log
@* i386-tdep.c: Include "dwarf2-frame.h".
(i386_gdbarch_init): Hook in the DWARF CFI frame unwinder.
* Makefile.in (i386-tdep.o): Update dependencies.
@
text
@d1359 1
a1359 1
	alpha-osf1-tdep.c alphafbsd-tdep.c \
d1512 5
a1516 4
alpha-linux-tdep.o: alpha-linux-tdep.c $(defs_h) $(frame_h) $(gdbcore_h) \
	$(value_h) $(alpha_tdep_h) $(osabi_h)
alpha-nat.o: alpha-nat.c $(defs_h) $(inferior_h) $(gdbcore_h) $(target_h) \
	$(regcache_h) $(alpha_tdep_h) $(gregset_h) $(gdb_string_h)
d1519 2
a1520 1
alpha-tdep.o: alpha-tdep.c $(defs_h) $(frame_h) $(inferior_h) $(symtab_h) \
d1523 5
a1527 2
	$(doublest_h) $(arch_utils_h) $(elf_bfd_h) $(alpha_tdep_h) \
	$(osabi_h) $(block_h)
@


1.386
log
@* dwarf2-frame.c, dwarf2-frame.h: New files.
* Makefile.in (SFILES): Add dwarf2-frame.c.
(dwarf2_frame_h): Define.
(COMMON_OBS): Add dwarf2-frame.o.
(dwarf2-frame.o): Add dependencies.
@
text
@d1801 5
a1805 5
	$(dummy_frame_h) $(doublest_h) $(floatformat_h) $(frame_h) \
	$(frame_base_h) $(frame_unwind_h) $(inferior_h) $(gdbcmd_h) \
	$(gdbcore_h) $(objfiles_h) $(osabi_h) $(regcache_h) $(reggroups_h) \
	$(symfile_h) $(symtab_h) $(target_h) $(value_h) $(gdb_assert_h) \
	$(gdb_string_h) $(i386_tdep_h) $(i387_tdep_h)
@


1.385
log
@* x86-64-tdep.h (x86_64_num_regs, x86_64_num_gregs): Remove
variable declarations.
(x86_64_register_number, x86_64_register_name): Remove prototypes.
(x86_64_linux_frame_saved_pc, x86_64_linux+saved_pc_after_call,
x86_64_linux_in_sigtramp, x86_64_linux_frame_chain,
x86_64_init_frame_pc, x86_64_init_frame_pc,
x86_64_function_has_prologue): Remove prototypes.
(X86_64_NUM_GREGS): New define.
(x86_64_supply_fxsave, x86_64_fill_fxsave): New prototypes.
* x86-64-tdep.c: Don't include "dwarf2cfi.h".  Include
"dummy_frame.h", "frame.h", "frame-base.h", "frame-unwind.h".
(RAX_REGNUM, RDX_REGNUM, RDI_REGNUM, EFLAGS_REGNUM, ST0_REGNUM,
XMM1_REGNUM): Remove defines.
(X86_64_RAX_REGNUM, X86_64_RDX_REGNUM, X86_64_RDI_REGNUM,
X86_64_RBP_REGNUM, X86_64_RSP_REGNUM, X86_64_RIP_REGNUM,
X86_64_EFLAGS_REGNUM, X86_64_ST0_REGNUM, X86_64_XMM0_REGNUM,
X86_64_XMM1_REGNUM): New defines.
(struct x86_64_register_info): Renamed from `struct
register_info'.  Remove `size' member.
(x86_64_register_info_table): Remove variable.
(x86_64_register_info): New variable.
(X86_64_NUM_REGS): New define.
(X86_64_NUM_GREGS): Remove define.
(x86_64_num_regs, x86_64_num_gregs): Remove variables.
(x86_64_dwarf2gdb_regno_map, x86_64_dwarf2gdb_regno_map_length):
Remove variables.
(x86_54_dwarf2_reg_to_regnum): Remove function.
(x86_64_dwarf_regmap, x86_64_dwarf_regmap_len): New variables.
(x86_64_dwarf_reg_to_regnum): New function.
(x86_64_register_name): Rewrite.
(x86_64_register_raw_size): Remove function.
(x86_64_register_byte_table): Remove variable.
(x86_64_register_byte): Remove function.
(x86_64_register_virtual_type): Remove function.
(x86_64_register_type): New function.
(x86_64_register_convertible, x86_64_register_convert_to_virtual,
x86_64_register_convert_to_raw): Remove functions.
(x86_64_push_return_address, x86_64_pop_frame): Remove functon.
(x86_64_use_struct_convention): Make static.  Adjust for renamed
defines.
(x86_64_frame_init_saved_regs): Remove function.
(x86_64_push_arguments): Make static.  Change to accept a regcache
as argument.
(x86_64_store_return_value, x86_64_extract_return_value): Make
static.  Rewrite based on i386 counterparts.
(x86_64_push_dummy_call): New function.
(X86_64_NUM_SAVED_REGS): New define.
(x86_64_register_number): Remove function.
(x86_64_store_struct_return): Remove function.
(x86_64_frameless_function_invocation,
x86_64_function_has_prologue): Remove functions.
(PROLOG_BUFSIZE): Remove define.
(struct x86_64_frame_cache): New structure.
(x86_64_alloc_frame_cache, x86_64_analyze_prologue,
x86_64_frame_cache, x86_64_frame_this_id,
x86_64_frame_prev_register, x86_64_frame_p,
x86_64_sigtramp_frame_cache, x86_64_sigtramp_frame_this_id,
x86_64_sigtramp_frame_prev_register, x86_sigtramp_frame_p): New
functions.
(x86_64_frame_unwind, x86_64_sigtramp_frame_unwind): New
variables.
(x86_64_skip_prologue): Rewrite in terms of
x86_64_analyze_prologue.
(x86_64_frame_base_address): New function.
(x86_64_frame_base): New variable.
(x86_64_save_dummy_frame_tos, x86_64_unwind_dummy_id): Rewrite.
(x86_64_init_abi): Set register_type and push_dummy_call.  Don't
set deprecated_fp_regnum, deprecated_register_size,
deprecated_register_bytes, register_raw_size, register_byte,
register_virtual_type, register_convertiable,
register_convert_to_virtual, convert_to_raw,
deprecated_get_saved_register, deprecated_target_read_fp,
deprecated_push_arguments, deprecated_push_return_address,
deprecated_pop_frame, deprecated_store_struct_return,
deprecated_frame_init_saved_regs, deprecated_frame_chain,
frameless_function_invocation, deprecated_frame_saved_pc,
deprecated_saved_pc_after_call, frame_num_args, pc_in_sigtramp,
dwarf2_build_frame_info, deprecated_init_extra_frame_info,
deprecated_init_frame_pc and virtual_frame_pointer.  Call
frame_unwind_append_predicate to register x86_64_sigtramp_frame_p
and x86_64_frame_p.  Call frame_base_set_default to register
x86_64_frame_base.
(I387_FISEG_REGNUM, I387_FOSEG_REGNUM): New defines.
(x86_64_supply_fxsave, x86_64_fill_fxsave): New functions.
(_initialize_x86_64_tdep): Remove function.
* x86-64-linux-tdep.c: Don't include "dwarf2cfi.h".
(LINUX_SIGINFO_SIZE, LINUX_UCONTEXT_SIGCONTEXT_OFFSET,
LINUX_SIGCONTEXT_PC_OFFSET, LINUX_SIGCONTEXT_FP_OFFSET): Don't
define.
(X86_64_LINUX_UCONTEXT_SIGCONTEXT_OFFSET): Define.
(x86_64_linux_sigcontext_addr): Rewrite.
(x86_64_linux_sigtramp_saved_pc, x86_64_linux_saved_pc_after_call,
x86_64_linux_frame_saved_pc): Remove functions.
(x86_64_linux_pc_in_sigtramp): Renamed from
x86_64_linux_in_sigtramp.  Try harder to recognize a signal
trampoline.
(x86_64_linux_frame_chain, x86_64_init_frame_pc):
Remove_functions.
(x86_64_linux_init_abi): Set pc_in_sigtramp.  Initialize
TDEP->sigcontext_addr, TDEP->sc_pc_offset and TDEP->sc_sp_offset.
* x86-64-linux-nat.c: Sync with i386-linux-tdep.c.
(x86_64_regmap): Rename to regmap.
(GETREGS_SUPPLIES): Use X86_64_NUM_GREGS instead of
x86_64_num_gregs.
(supply_gregset, fill_gregset): Likewise.  Use regmap instead of
x86_64_regmap.
(x86_64_fxsave_offset): Remove function.
(supply_fpregset): Simply call x86_64_supply_fxsave.
(fill_fpregset): Simply call x86_64_fill_fxsave.
(fetch_inferior_registers, store_inferior_registers): Avoid
asignment in if-statement.
(LINUX_SYSCALL_LEN, LINUX_SYSCALL_REGNUM, SYS_Sigreturn,
SYS_rt_sigreturn, LINUX_SIGCONTEXT_EFLAGS_OFFSET,
LINUX_UCONTEXT_SIGCONTEXT_OFFSET): Remove defines.
(fetch_core_registers): Remove function.
(linux_elf_core_fns): Remove.
(offsetoff): Don't define.
(_initialize_x86_64_linux_nat, kernel_u_size): Remove functions.
* config/i386/x86-64linux.mt (TDEPFILES): Add i386-linux-tdep.o.
* config/i386/x86-64linux.mh (NATDEPFILES): Remove core-aout.o,
add core-regset.o.
* config/i386/nm-x86-64linux.h: Use NM_X86_64_LINUX_H for
protection against multiple includes instead of NM_X86_64_h.  Add
various comments.  Include "config/nm-linux.h".  Don't include
<signal.h>.
(REGISTER_U_ADDR, KERNEL_U_SIZE, U_REGS_OFFSET, KERN_U_ADDR,
GET_THREAD_SIGNALS): Remove defines.
(x86_64_register_u_addr, kernel_u_size,
lin_thread_get_thread_signals): Remove prototypes.
(PTRACE_ARG3_TYPE, PTRACE_XFER_TYPE): Define to `long'.
[HAVE_LINK_H]: Don't include "solib.h".
[HAVE_LINK_H] (SVR4_SHARED_LIBS): Remove define.
* config/i386/tm-x86-64linux.h: Fix comments.
* Makefile.in (x86-64-linux-nat.o, x86_64-linux-tdep.o,
x86-64-tdep.o): Update dependencies.
@
text
@d516 2
a517 2
	dbxread.c demangle.c disasm.c doublest.c \
	dummy-frame.c dwarfread.c dwarf2expr.c dwarf2loc.c dwarf2read.c \
d641 1
d857 1
a857 1
	dwarf2expr.o dwarf2loc.o \
d1678 4
@


1.384
log
@* i386-tdep.h (i386bsd_sigcontext_addr): Remove prototype.
(I386_SIZEOF_GREGS, I386_SIZEOF_FREGS, I386_SIZEOF_XREGS): Remove
defenitions.
(IS_FP_REGNUM, IS_SSE_REGNUM): Remove definitions.
* i386-tdep.c: Mark functions that are 64-bit safe as such.
(I386_EAX_REGNUM, I386_EDX_REGNUM, I386_ESP_REGNUM,
I386_EBP_REGNUM, I386_EIP_REGNUM, I386_EFLAGS_REGNUM,
I386_ST0_REGNUM): New defines.
(CODESTREAM_BUFSIZ, codestream_tell, codestream_peek,
codestream_get): Remove define.
(codestream_next_addr, condestream_addr, condestream_buf,
codestream_off, codestream_cnt): Remove variables.
(codestream_fill, codestream_seek, codestream_read): Remove
functions.
(i386_follow_jump): Rewrite to avoid usage of removed codestream
functionality.
(i386_get_frame_setup, i386_frameless_signal_p, i386_frame_chain,
i386_sigtramp_saved_pc, i386_sigtramp_saved_sp,
i386_frame_saved_pc, i386_saved_pc_after_call,
i386_frame_num_args, i386_frame_init_saved_regs,
i386_push_return_address, i386_do_pop_frame, i386_pop_frame,
i386_push_arguments): Remove functions.
(i386_skip_prologue): Rewrite to avoid usage of removed codestream
functionality.  Use i386_analyze_prologue instead of
i386_get_frame_setup.
(I386_NUM_SAVED_REGS): New define.
(struct i386_frame_cache): New structure.
(i386_alloc_frame_cache, i386_analyze_struct_return,
i386_skip_probe, i386_analyze_frame_setup,
i386_analyze_register_saves, i386_analyze_prologue,
i386_unwind_pc, i386_frame_cache, i386_frame_this_id,
i386_frame_prev_register, i386_sigtramp_frame_cache,
i386_sigtramp_frame_this_id, i386_sigtramp_frame_prev_register,
i386_frame_p, i386_sigtramp_frame_p, i386_frame_base_address,
i386_unwind_dummy_id, i386_save_dummy_tos, i386_push_dummy_call):
New functions.
(i386_frame_unwind, i386_sigtramp_frame_unwind, i386_frame_base):
New variables.
(LOW_RETURN_REGNUM, HIGH_RETURN_REGNUM): Define in terms of
I386_EAX_REGNUM and I386_EDX_REGNUM.
(i386_extract_return_value, i386_store_return_value): Use
I386_ST0_REGNUM where appropriate.
(i386_extract_struct_value_address): Rewrite to use extract_address.
(i386_svr4_pc_in_sigtramp): Add comment.
(i386_svr4_sigcontext_addr): Rewrite.
(i386_svr4_init_abi): Adjust TDEP->sc_pc_offset and
TDEP->sc_sp_offset.
(i386_gdbarch_init): Don't set deprecated_init_frame_pc.  Set
sp_regnum, fp_regnum, pc_regnum, ps_regnum and fp0_regnum in terms
of new defines.  Set push_dummy_call, don't set
deprecated_push_arguments, deprecated_push_return_address,
deprecated_pop_frame.  Don't set parm_boundary.  Don't set
deprecated_frame_chain, deprecated_frame_saved_pc,
deprecated_saved_pc_after_call.  Set unwind_dummy_id,
save_dummy_frame_tos, unwind_pc.  Call
frame_unwind_append_predicate and frame_base_set_default.  Don't
set deprecated_dummy_write_pc.  Don't set deprecated_fp_regnum.
Don't set frameless_function_invocation.  Don't set
deprecated_register_bytes, deprecated_register_size,
deprecated_call_dummy_words and deprecated_sizeof_call_dummy.
* i386-linux-tdep.c: Fix formatting in some comments.
(LINUX_SIGTRAMP_INSN0, LINUX_SIGTRAMP_OFFSET0,
LINUX_SIGTRAMP_INSN1, LINUX_SIGTRAMP_OFFSET1,
LINUX_SIGTRAMP_INSN2, LINUX_SIGTRAMP_OFFSET2,
LINUX_RT_SIGTRAMP_INSN0, LINUX_RT_SIGTRAMP_OFFSET0,
LINUX_RT_SIGTRAMP_INSN1, LINUX_RT_SIGTRAMP_OFFSET1): Drop
redundant parentheses.
(I386_LINUX_UCONTEXT_SIGCONTEXT_OFFSET): New define.
(i386_linux_sigcontext_addr): Use it.  Rewrite.
(find_minsym_and_objfile): Change name of second argument.
(skip_gnu_resolver): Renamed from skip_hurd_resolver.  All callers
changed.  Use frame_pc_unwind instead of
DEPRECATED_SAVED_PC_AFTER_CALL.
(i386_linux_init_abi): Don't set deprecated_register_bytes.
* i386bsd-tdep.c (i386bsd_sigcontext_addr): Rewrite.
* i386-nto-tdep.c (i386nto_sigcontext_addr): Adapt for new frame
unwinder.
* i386-cygwin-tdep.c: Don't include "gdbcore.h", "frame.h" and
"dummy-frame.h".
(i386_cygwin_frame_chain_valid, i386_cygwin_frame_chain): Removed.
(_initialize_i386_cygwin_tdep): New prototype.
(i386_cygwin_init_abi): Don't set deprecated_frame_chain and
deprecated_frame_chain_valid.
* i386-sol2-tdep.c (i386_sol2_init_abi): Don't set
TDEP->sigcontext_addr, TDEP->sc_pc_offset and TDEP->sc_sp_offset.
Rely on the SVR4 defaults.
* config/i386/i386sol2.mt (TDEPFILES): Remove i386bsd-tdep.o.
* Makefile.in (i386-tdep.o, i386-cygwin-tdep.o): Update dependencies.
@
text
@d2353 2
a2354 1
	$(regcache_h) $(gdb_assert_h) $(x86_64_tdep_h)
d2356 6
a2361 5
	$(gdb_string_h) $(regcache_h) $(x86_64_tdep_h) $(dwarf2cfi_h) \
	$(osabi_h)
x86-64-tdep.o: x86-64-tdep.c $(defs_h) $(inferior_h) $(gdbcore_h) \
	$(gdbcmd_h) $(arch_utils_h) $(regcache_h) $(symfile_h) $(objfiles_h) \
	$(x86_64_tdep_h) $(dwarf2cfi_h) $(gdb_assert_h) $(block_h)
@


1.383
log
@	* m68k-tdep.c (m68k_register_raw_size): Remove cast.
	(m68k_register_virtual_size): Likewise.
	(altos_skip_prologue): Remove obsolete function.
	(isi_frame_num_args): Likewise.
	(news_frame_num_args): Likewise.
	(m68k_fix_call_dummy): Make static.
	(m68k_push_dummy_frame): Likewise.
	(m68k_pop_frame): Likewise.
	(m68k_skip_prologue): Likewise.
	(m68k_frame_init_saved_regs): Likewise.
	(m68k_saved_pc_after_call): Likewise.
	(m68k_get_longjmp_target): Make multi-arch.
	(m68k_gdbarch_init): Allocate and initialize gdbarch_tdep
	structure.  Register m68k_get_longjmp_target if enabled.
	* m68k-tdep.h (struct gdbarch_tdep): Define.
	* config/m68k/tm-m68k.h: Don't include "regcache.h".

	* Makefile.in (config.status): Also depend on configure.tgt
	and configure.host.
	(m68klinux-tdep.o): Update dependencies.
	* configure.tgt (m68*-*-linux*): Set gdb_multi_arch to 1.
	* m68klinux-tdep.c (M68K_LINUX_JB_ELEMENT_SIZE): Define.
	(M68K_LINUX_JB_PC): Define.
	(m68k_linux_pc_in_sigtramp): Renamed from m68k_linux_in_sigtramp
	and take additional parameter.
	(m68k_linux_sigtramp_saved_pc): Update.
	(m68k_linux_init_abi): Set jb_pc and jb_elt_size.  Register
	m68k_linux_pc_in_sigtramp, in_plt_section,
	find_solib_trampoline_target.
	* config/m68k/tm-linux.h: Don't include any tm headers.
	(START_INFERIOR_TRAPS_EXPECTED): Remove definition.
	(JB_ELEMENT_SIZE): Likewise.
	(JB_PC): Likewise.
	(GET_LONGJMP_TARGET): Likewise.
	(IN_SIGTRAMP): Likewise.
	(SVR4_SHARED_LIBS): Define this and include "solib.h".
@
text
@d1795 6
a1800 5
i386-tdep.o: i386-tdep.c $(defs_h) $(gdb_string_h) $(frame_h) $(inferior_h) \
	$(gdbcore_h) $(objfiles_h) $(target_h) $(floatformat_h) $(symfile_h) \
	$(symtab_h) $(gdbcmd_h) $(command_h) $(arch_utils_h) $(regcache_h) \
	$(doublest_h) $(value_h) $(gdb_assert_h) $(i386_tdep_h) \
	$(i387_tdep_h) $(osabi_h)
d1815 1
a1815 1
	$(i386_tdep_h) $(osabi_h) $(gdbcore_h) $(frame_h) $(dummy_frame_h)
@


1.382
log
@2003-05-23  Andrew Cagney  <cagney@@redhat.com>

	* objc-lang.c: Include "gdb_assert.h".
	(objc_op_print_tab): Use OP_NULL and PREC_NULL instead of 0.
	(CHECK, CHECK_FATAL, __CHECK_FUNCTION): Delete macros.
	(gdb_check, gdb_check_fatal): Delete functions.
	(read_objc_methlist_method): Replace CHECK and CHECK_FATAL with
	gdb_assert.
	(parse_selector, parse_method, find_methods, find_imps): Ditto.
	* Makefile.in (objc-lang.o): Update dependencies.
@
text
@d1160 1
a1160 1
config.status: configure
d1926 2
a1927 1
	$(target_h) $(gdb_string_h) $(gdbtypes_h) $(osabi_h) $(m68k_tdep_t)
@


1.381
log
@	* Makefile.in (m68k-tdep.o, m68klinux-tdep.o): Update
	dependencies.
	* m68k-tdep.c (m68k_gdbarch_init): Call gdbarch_init_osabi at the
	end.
	* m68klinux-tdep.c (m68k_linux_init_abi): New function.
	(_initialize_m68k_linux_tdep): New function.
	(m68k_linux_frame_saved_pc): Make static.
	(m68k_linux_extract_return_value): Likewise.
	(m68k_linux_store_return_value): Likewise.
	(m68k_linux_extract_struct_value_address): Likewise.
	* config/m68k/tm-linux.h (DEPRECATED_EXTRACT_RETURN_VALUE):
	Remove.
	(DEPRECATED_STORE_RETURN_VALUE): Remove.
	(DEPRECATED_EXTRACT_STRUCT_VALUE_ADDRESS): Remove.
	(DEPRECATED_FRAME_SAVED_PC): Remove.
@
text
@d2010 1
a2010 1
	$(regcache_h) $(block_h) $(infcall_h) $(valprint_h)
@


1.381.2.1
log
@2003-05-21  Andrew Cagney  <cagney@@redhat.com>

	* fileio.c: Include "gdb_wait.h".

	2003-03-10  Corinna Vinschen  <vinschen@@redhat.com>
        * fileio.c: New file implementing the remote File-I/O protocol.
	* fileio.h: New header file defining remote File-I/O interface.
        * remote.c (remote_write_bytes, remote_read_bytes): Remove
	static storage class.
	(remote_wait, remote_async_wait): Call remote_fileio_request() on
        'F' packet.
        (_initialize_remote): Call initialize_remote_fileio().
	* remote.h: Declare remote_write_bytes() and remote_read_bytes().

	2002-11-21  Martin M. Hunt  <hunt@@redhat.com>
	* Makefile.in (REMOTE_OBS): Add fileio.o
	(SFILES): Add fileio.c.
	Add dependencies for building fileio.o.  Add fileio.h to
	dependencies for building remote.o.
        * defs.h: Declare gdb_stdin, gdb_stdtargerr and gdb_stdtargin.
        * main.c: New ui_file gdb_stdin, gdb_stdtargerr and gdb_stdtargin.
        (captured_main): Initialize new ui_files.
        * ui-file.c: Add read and fgets input functions.
        (ui_file_new): set ui_file_fputs and ui_file_read to null functions.
        (null_file_read): New function.
        (ui_file_read): New function.
        (set_ui_file_read): New function.
        (stdio_file_read): New function.
        * ui-file.h: New type ui_file_read_ftype.
        (set_ui_file_read): Declare.
        (ui_file_read): Declare.
@
text
@d403 1
a403 1
REMOTE_OBS = remote.o dcache.o remote-utils.o tracepoint.o ax-general.o ax-gdb.o fileio.o
d519 1
a519 3
	f-exp.y f-lang.c f-typeprint.c f-valprint.c \
	fileio.c \
	findvar.c frame.c \
a645 1
fileio_h = fileio.h
a1714 1
fileio.o: fileio.c $(defs_h) $(gdb_string_h) $(gdbcmd_h) $(remote_h)
d2140 1
a2140 1
	$(gdbcore_h) $(solib_h) $(fileio_h) 
@


1.380
log
@2003-05-19  David Carlton  <carlton@@bactrian.org>

	Partial fix for PR c++/827.
	* cp-support.h: Include symtab.h.
	Declare cp_lookup_symbol_nonlocal, cp_lookup_symbol_namespace.
	* cp-namespace.c: Update contributors.
	(cp_lookup_symbol_nonlocal): New.
	(lookup_namespace_scope, cp_lookup_symbol_namespace)
	(lookup_symbol_file): Ditto.
	* c-lang.c (cplus_language_defn): Use cp_lookup_symbol_nonlocal.
	* block.h: Declare block_scope, block_using, block_global_block.
	* block.c (block_scope): New.
	(block_using, block_global_block): Ditto.
	* Makefile.in (cp_support_h): Depend on symtab_h.
	* config/djgpp/fnchange.lst: Add testsuite/gdb.c++/namespace1.cc.

2003-05-19  David Carlton  <carlton@@bactrian.org>

	* gdb.c++/namespace.exp: Add namespace scope and anonymous
	namespace tests.
	Bump copyright date.
	* gdb.c++/namespace.cc: Add anonymous namespace and namespace C.
	(main): Call C::D::marker2.
	* gdb.c++/namespace1.cc: New file.
@
text
@d1921 1
a1921 1
	$(arch_utils_h) $(gregset_h) $(m68k_tdep_h)
d1926 1
a1926 1
	$(target_h) $(gdb_string_h) $(gdbtypes_h) $(m68k_tdep_t)
@


1.379
log
@2003-05-19  David Carlton  <carlton@@bactrian.org>

	* language.h (struct language_defn): Add 'la_value_of_this'
	and 'la_lookup_symbol_nonlocal' members.
	* symtab.h: Declare basic_lookup_symbol_nonlocal,
	lookup_symbol_static, lookup_symbol_global,
	lookup_symbol_aux_block.
	* symtab.c (lookup_symbol_aux): Call language hooks to determine
	if we should search fields of this and how to do static/global
	lookup.
	(lookup_symbol_aux_block): Make extern.
	(basic_lookup_symbol_nonlocal): New.
	(lookup_symbol_static, lookup_symbol_global): Ditto.
	* ada-lang.c (ada_language_defn): Set 'la_value_of_this' and
	'la_lookup_symbol_nonlocal' members.
	* c-lang.c (c_language_defn, cplus_language_defn)
	(asm_language_defn, minimal_language_defn): Ditto.
	* jv-lang.c (java_language_defn): Ditto.
	* language.c (unknown_language_defn, auto_language_defn)
	(local_language_defn): Ditto.
	* m2-lang.c (m2_language_defn): Ditto.
	* objc-lang.c (objc_language_defn): Ditto.
	* scm-lang.c (scm_language_defn): Ditto.
	* f-lang.c (f_language_defn): Ditto, and include value.h as well.
	* p-lang.c (pascal_language_defn): Ditto for both.
	* Makefile.in (f-lang.o): Depend on value_h.
	(p-lang.o): Ditto.
@
text
@d629 1
a629 1
cp_support_h = cp-support.h
@


1.378
log
@	* Makefile (m68klinux-nat.o, m68klinux-tdep.o): Update
	dependencies.
	* config/m68k/tm-linux.h (DEPRECATED_EXTRACT_RETURN_VALUE): Define
	as m68k_linux_extract_return_value.
	(DEPRECATED_STORE_RETURN_VALUE): Define as
	m68k_linux_store_return_value.
	(DEPRECATED_EXTRACT_STRUCT_VALUE_ADDRESS): Define as
	m68k_linux_extract_struct_value_address.
	* m68klinux-tdep.c (m68k_linux_sigtramp_saved_pc): Use
	get_next_frame, get_frame_base, get_frame_pc.
	(m68k_linux_frame_saved_pc): Use get_frame_base.
	(m68k_linux_extract_return_value): New function.
	(m68k_linux_store_return_value): New function.
	(m68k_linux_extract_struct_value_address): New function.
	* config/m68k/tm-m68k.h: Declare m68k_get_longjmp_target.
@
text
@d1706 1
a1706 1
	$(valprint_h)
d2025 1
a2025 1
	$(valprint_h)
@


1.377
log
@2003-05-15  Andrew Cagney  <cagney@@redhat.com>

	* c-lang.c (c_printstr): Delete "extern inspect_it" declaration.
	* p-valprint.c (pascal_object_print_value_fields): Ditto.
	* p-lang.c (pascal_printstr): Ditto.
	* objc-lang.c (objc_printstr): Ditto.
	* m2-lang.c (m2_printstr): Ditto.
	* jv-valprint.c (java_print_value_fields): Ditto.
	* f-lang.c (f_printstr): Ditto.
	* cp-valprint.c (cp_print_value_fields): Ditto.  Include "valprint.h".
	* ada-valprint.c (inspect_it, repeat_count_threshold): Ditto, and
	for repeat_count_threshold.
	* Makefile.in (cp-valprint.o): Update dependencies.
@
text
@d1923 2
a1924 2
	$(language_h) $(gdbcore_h) $(regcache_h) $(gdb_stat_h) \
	$(floatformat_h) $(target_h) $(gregset_h) $(m68k_tdep_h)
d1926 1
a1926 1
	$(target_h)
@


1.376
log
@	* Makefile.in (install-only): Use $(SHELL) when running
	mkinstalldirs.
@
text
@d1631 1
a1631 1
	$(cp_abi_h)
@


1.375
log
@Index: gdb/ChangeLog
2003-05-11  Andrew Cagney  <cagney@@redhat.com>

	* Makefile.in (mi-symbol-cmds.o): Rename mi-cmd-symbol.
	* config/djgpp/fnchange.lst: Rename include/xtensa-isa-internal.h,
	include/xtensa-isa.h, sim/testsuite/sim/arm/misaligned1.ms,
	sim/testsuite/sim/arm/misaligned2.ms, and
	sim/testsuite/sim/arm/misaligned3.ms.
	* disasm.h (struct ui_file): Add opaque struct declaration.
	* config/pa/tm-hppa64.h (struct type, struct frame_info): Ditto.
	* frame.h (struct ui_file): Ditto.

Index: gdb/mi/ChangeLog
2003-05-11  Andrew Cagney  <cagney@@redhat.com>

	* mi-symbol-cmds.c: Rename "mi-cmd-symbol.c", avoid 8.3 problem.
@
text
@d938 1
a938 1
		$(srcdir)/../mkinstalldirs $(bindir) ; \
d941 1
a941 1
		$(srcdir)/../mkinstalldirs \
@


1.374
log
@Index: testsuite/ChangeLog
2003-05-05  Andrew Cagney  <cagney@@redhat.com>

	* gdb.base/maint.exp: Add tests for "maint print dummy-frames".

Index: doc/ChangeLog
2003-05-05  Andrew Cagney  <cagney@@redhat.com>

	* gdb.texinfo (Maintenance Commands): Document "maint print
	dummy-frames".

2003-05-05  Andrew Cagney  <cagney@@redhat.com>

	* dummy-frame.c: Include "command.h" and "gdbcmd.h".
	(fprint_dummy_frames): New function.
	(maintenance_print_dummy_frames): New function.
	(_initialize_dummy_frame): Add command "maint print dummy-frames".
	* frame.c (fprint_frame_id): Make global.
	* frame.h (fprint_frame_id): Declare.
	* Makefile.in (dummy-frame.o): Update dependencies.
@
text
@d171 1
a171 1
	mi-cmd-file.o mi-cmd-disas.o mi-cmd-symbol.o \
d178 1
a178 1
	mi/mi-cmd-file.c mi/mi-cmd-disas.c mi/mi-cmd-symbol.c \
a2578 3
mi-cmd-symbol.o: $(srcdir)/mi/mi-cmd-symbol.c $(defs_h) \
	$(mi_cmds_h) $(ui_out_h) $(symtab_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/mi/mi-cmd-symbol.c
d2606 3
@


1.373
log
@       From Thierry Schneider <tpschneider1@@yahoo.com>
       * Makfile.in (SUBDIR_MI_OBS): Add dependency on mi-cmd-symbol.o.
       (SUBDIR_MI_SRCS): Add mi-cmd-symbol.c.
       (mi-cmd-symbol.o): Add rule.
@
text
@d1665 2
a1666 1
	$(frame_h) $(inferior_h) $(gdb_assert_h) $(frame_unwind_h)
@


1.372
log
@2003-05-03  Andrew Cagney  <cagney@@redhat.com>

	* disasm.h (print_insn): Declare.
	* disasm.c (init_gdb_disassemble_info): New function.
	(gdb_disassembly): Call init_gdb_disassemble_info.
	(gdb_print_insn): New function.
	* v850-tdep.c (v850_scan_prologue): Call gdb_print_insn, instead
	of TARGET_PRINT_INSN.  Send debug info to "gdb_stdlog".
	* mcore-tdep.c: Include "disasm.h"
	(mcore_dump_insn): Call gdb_print_insn, instead of TARGET_PRINT_INSN.
	* d10v-tdep.c: Include "disasm.h".
	(display_trace): Call gdb_print_insn, instead of print_insn.
	(print_insn): Delete function.
	* printcmd.c: Include "disasm.h".
	(print_insn): Delete function.
	(print_formatted): Call gdb_print_insn, instead of print_insn.
	* Makefile.in (printcmd.o): Update dependencies.
	(mcore-tdep.o, d10v-tdep.o): Ditto.

2003-05-03  Andrew Cagney  <cagney@@redhat.com>

	* tuiDisassem.c (tui_disassemble): Call gdb_print_insn, instead of
	TARGET_PRINT_INSN.  Do not initialize a disassemble_info object.
@
text
@d171 1
a171 1
	mi-cmd-file.o mi-cmd-disas.o \
d178 1
a178 1
	mi/mi-cmd-file.c mi/mi-cmd-disas.c \
d2578 3
@


1.371
log
@2003-04-30  Andrew Cagney  <cagney@@redhat.com>

	* gdbarch.sh (deprecated_tm_print_insn_info): Rename
	"tm_print_insn_info".
	(TARGET_PRINT_INSN_INFO): Delete macro.
	(dis_asm_read_memory): Delete function declaration.
	(dis_asm_memory_error, dis_asm_print_address): Ditto.
	(tm_print_insn_info): Delete variable definition.
	(_initialize_gdbarch): Do not initialize "tm_print_insn_info".
	* gdbarch.h, gdbarch.c: Re-generate.
	* d10v-tdep.c (display_trace): Replace "tm_print_insn_info" with
	"deprecated_tm_print_insn_info".
	* mcore-tdep.c (mcore_dump_insn): Ditto.
	* mips-tdep.c (mips_gdbarch_init): Ditto.
	* sparc-tdep.c (_initialize_sparc_tdep): Ditto.
	* v850-tdep.c (v850_scan_prologue, v850_gdbarch_init): Ditto.
	* ia64-tdep.c (_initialize_ia64_tdep): Ditto.
	* printcmd.c (print_insn): Use "deprecated_tm_print_insn_info"
	instead of TARGET_PRINT_INSN_INFO, add comment.
	* s390-tdep.c (s390_get_frame_info): Instead of
	"dis_asm_read_memory", use "deprecated_tm_print_insn_info".
	(s390_check_function_end, s390_is_sigreturn): Ditto.
	* corefile.c (dis_asm_read_memory): Move to "disasm.c".
	(dis_asm_memory_error, dis_asm_print_address): Ditto.
	* disasm.c: Include "gdbcore.h".
	(_initialize_disasm): New function, initialize
	"deprecated_tm_print_insn_info".
	(deprecated_tm_print_insn_info): New variable.
	(dis_asm_read_memory): Moved from "corefile.c", made static.
	(dis_asm_print_address, dis_asm_memory_error): Ditto.
	* Makefile.in (disasm.o): Update dependencies.

2003-04-28  Andrew Cagney  <cagney@@redhat.com>

	* gdbint.texinfo (Target Architecture Definition): Replace
	read_fp, TARGET_READ_FP and FP_REGNUM, with deprecated_read_fp,
	DEPRECATED_TARGET_READ_FP and DEPRECATED_REGNUM.
@
text
@d1643 1
a1643 1
	$(gdb_assert_h)
d1948 1
a1948 1
	$(arch_utils_h) $(gdb_string_h)
d2064 1
a2064 1
	$(gdb_assert_h) $(block_h)
@


1.370
log
@* eval.c (evaluate_subexp_standard): Handle ObjC ops.
* infcall.c (find_function_addr): Make non-static.
* infcall.h (find_function_addr): Declare.
* Makefile.in (eval.o): Update dependencies.
@
text
@d1659 1
a1659 1
	$(disasm_h) $(ui_out_h)
@


1.369
log
@* symtab.c (symbol_find_demangled_name): Check for and demangle
ObjC symbols.
(symbol_init_demangled_name): Init for language_objc as well.
@
text
@d1690 1
a1690 1
	$(f_lang_h) $(cp_abi_h) $(infcall_h)
@


1.368
log
@* linespec.c (decode_objc): New function to decode ObjC calls
(decode_line_1): Check for ObjC calls (using decode_objc)
* Makefile (linespec.o): Update dependencies.
@
text
@d2278 1
a2278 1
	$(cp_abi_h) $(source_h) $(block_h)
@


1.367
log
@* Makefile.in (COMMON_OBS): Add objc-lang.o
@
text
@d1889 1
a1889 1
	$(cp_abi_h) $(source_h) $(parser_defs_h) $(block_h)
@


1.366
log
@* objc-lang.c: Include "valprint.h"
* Makefile.in (objc-lang.o): Update dependencies.
@
text
@d857 1
a857 1
	c-lang.o f-lang.o \
@


1.365
log
@2003-04-21  Andrew Cagney  <cagney@@redhat.com>

	* infcall.c: New file.
	* infcall.h: New file.
	* valarith.c: Include "infcall.h".
	* scm-lang.c, objc-lang.cm, hppa-tdep.c, gcore.c: Ditto.
	* eval.c, ada-valprint.c, ada-lang.c: Ditto.
	* Makefile.in (valarith.o, scm-lang.o): Update dependencies.
	(objc-lang.o, hppa-tdep.o, gcore.o): Update dependencies.
	(eval.o, ada-valprint.o, ada-lang.o): Update dependencies.
	(SFILES): Add "infcall.c"
	(COMMON_OBS): Add "infcall.o".
	(infcall.o): Specify dependencies.
	* value.h (call_function_by_hand): Delete declaration.
	* inferior.h (run_stack_dummy): Delete declaration.
	* infcmd.c (breakpoint_auto_delete_contents): Move to "infcall.c".
	(run_stack_dummy): Move to "infcall.c", merged into
	call_function_by_hand.
	* valops.c (call_function_by_hand): Moved to "infcall.c".
	(find_function_addr, value_arg_coerce): Ditto.
	(unwindonsignal_p, coerce_float_to_double): Ditto.
	(_initialize_valops): Move "set/show coerce-float-to-double", and
	"set/show unwindonsignal" commands to "infcall.c".
	* v850-tdep.c, target.h: Update comments.
	* sparc-tdep.c (sparc_fix_call_dummy): Update comments.
	* sh-tdep.c (sh_init_extra_frame_info): Update comments.
	(sh64_init_extra_frame_info): Update comments.
	* mn10300-tdep.c: Update comments.
	* mcore-tdep.c (mcore_init_extra_frame_info): Update comments.
	* config/sparc/tm-sparc.h: Update comments.
	* breakpoint.h: Update comments.
	* avr-tdep.c (avr_init_extra_frame_info): Update comments.
	* arm-tdep.c: Update comment.
@
text
@d2009 1
a2009 1
	$(regcache_h) $(block_h) $(infcall_h)
@


1.364
log
@2003-04-15  David Carlton  <carlton@@math.stanford.edu>

	* Makefile.in (SFILES): Add cp-namespace.c.
	(COMMON_OBS): Add cp-namespace.o.
	(block.o): Depend on gdb_obstack_h and cp_support_h.
	(buildsym.o): Depend on cp_support_h.
	(cp-namespace.o): New.
	(cp-support.o): Depend on gdb_string_h, demangle_h, gdb_assert_h,
	gdb_obstack_h, symtab_h, symfile_h, and gdbcmd_h.
	(dwarf2read.o): Depend on cp_support_h.
	* jv-lang.c (get_java_class_symtab): Set BLOCK_NAMESPACE.
	* dwarf2read.c (process_die): Set processing_has_namespace_info,
	processing_current_namespace.
	(read_namespace): Update processing_current_namespace; check for
	anonymous namespaces.
	(dwarf2_name): New function.
	(dwarf2_extension): Ditto.
	* cp-support.h: Update copyright, contributors.
	Add inclusion guards.
	Add opaque declaration for structs obstack, block, symbol.
	(struct using_direct): New struct.
	Add declarations for cp_find_first_component,
	cp_entire_prefix_len, processing_has_namespace_info,
	processing_current_namespace, cp_is_anonymous,
	cp_add_using_directive, cp_initialize_namespace,
	cp_finalize_namespace, cp_set_block_scope,
	cp_scan_for_anonymous_namespaces.
	* cp-namespace.c: New file.
	* cp-support.c: Update copyright.
	Include ctype.h, gdb_assert.h, gdbcmd.h.
	New variable maint_cplus_cmd_list.
	(cp_find_first_component): New function.
	(cp_entire_prefix_len, maint_cplus_command)
	(first_component_command, _initialize_cp_support): Ditto.
	* buildsym.c: Include cp-support.h.
	New variable using_list.
	(add_symbol_to_list): Check for anonymous namespaces.
	(finish_block): Set block's scope.
	(start_symtab): Initialize C++ namespace support.
	(end_symtab): Finalize C++ namespace support.
	* block.h: Add opaque declarations for structs
	block_namespace_info, using_direct, and obstack.
	Add declarations for block_set_scope and block_set_using.
	(struct block): Add 'language_specific' member.
	(BLOCK_NAMESPACE): New macro.
	* block.c: Include gdb_obstack.h and cp-support.h.
	(struct block_namespace_info): New struct.
	(block_set_scope): New function.
	(block_set_using, block_initialize_namespace): Ditto.

2003-04-15  David Carlton  <carlton@@math.stanford.edu>

	* gdb.c++/maint.exp: New file.
@
text
@d524 3
a526 1
	inf-loop.c infcmd.c inflow.c infrun.c \
d674 1
d840 3
a842 1
	block.o symtab.o symfile.o symmisc.o linespec.o infcmd.o infrun.o \
d1496 2
a1497 1
	$(breakpoint_h) $(gdbcore_h) $(ada_lang_h) $(ui_out_h) $(block_h)
d1507 1
a1507 1
	$(annotate_h) $(ada_lang_h) $(c_lang_h)
d1690 1
a1690 1
	$(f_lang_h) $(cp_abi_h)
d1732 1
a1732 1
	$(elf_bfd_h) $(symfile_h) $(objfiles_h)
d1767 3
a1769 3
	$(gdb_assert_h) $(infttrace_h) $(symtab_h) $(a_out_encap_h) \
	$(gdb_stat_h) $(gdb_wait_h) $(gdbcore_h) $(gdbcmd_h) $(target_h) \
	$(symfile_h) $(objfiles_h)
d1839 3
d2007 3
a2009 3
	$(complaints_h) $(value_h) $(symfile_h) $(objfiles_h) \
	$(gdb_string_h) $(target_h) $(gdbcore_h) $(gdbcmd_h) $(frame_h) \
	$(gdb_regex_h) $(regcache_h) $(block_h)
d2162 1
a2162 1
	$(scm_tags_h) $(gdb_string_h) $(gdbcore_h) $(source_h)
d2320 1
a2320 1
	$(doublest_h)
@


1.364.2.1
log
@Merge from mainline.
@
text
@d171 1
a171 1
	mi-cmd-file.o mi-cmd-disas.o mi-cmd-symbol.o \
d178 1
a178 1
	mi/mi-cmd-file.c mi/mi-cmd-disas.c mi/mi-cmd-symbol.c \
d524 1
a524 3
	inf-loop.c \
	infcall.c \
	infcmd.c inflow.c infrun.c \
a671 1
infcall_h = infcall.h
d837 1
a837 3
	block.o symtab.o symfile.o symmisc.o linespec.o \
	infcall.o \
	infcmd.o infrun.o \
d852 1
a852 1
	c-lang.o f-lang.o objc-lang.o \
d1491 1
a1491 2
	$(breakpoint_h) $(gdbcore_h) $(ada_lang_h) $(ui_out_h) $(block_h) \
	$(infcall_h)
d1501 1
a1501 1
	$(annotate_h) $(ada_lang_h) $(c_lang_h) $(infcall_h)
d1637 1
a1637 1
	$(gdb_assert_h) $(disasm_h)
d1653 1
a1653 1
	$(disasm_h) $(ui_out_h) $(gdbcore_h)
d1684 1
a1684 1
	$(f_lang_h) $(cp_abi_h) $(infcall_h) $(objc-lang.h) $(block_h)
d1726 1
a1726 1
	$(elf_bfd_h) $(symfile_h) $(objfiles_h) $(infcall_h)
d1761 3
a1763 3
	$(gdb_assert_h) $(infttrace_h) $(symtab_h) $(infcall_h) \
	$(a_out_encap_h) $(gdb_stat_h) $(gdb_wait_h) $(gdbcore_h) \
	$(gdbcmd_h) $(target_h) $(symfile_h) $(objfiles_h)
a1832 3
infcall.o: infcall.c $(defs_h) $(breakpoint_h) $(target_h) $(regcache_h) \
	$(inferior_h) $(gdb_assert_h) $(block_h) $(gdbcore_h) $(language_h) \
	$(symfile_h) $(gdbcmd_h) $(command_h) $(gdb_string_h)
d1880 1
a1880 1
	$(cp_abi_h) $(source_h) $(parser_defs_h) $(block_h) $(objc_lang_h)
d1939 1
a1939 1
	$(arch_utils_h) $(gdb_string_h) $(disasm_h)
d1998 3
a2000 3
	$(complaints_h) $(value_h) $(symfile_h) $(objfiles_h) $(gdb_string_h) \
	$(target_h) $(gdbcore_h) $(gdbcmd_h) $(frame_h) $(gdb_regex_h) \
	$(regcache_h) $(block_h) $(infcall_h) $(valprint_h)
d2055 1
a2055 1
	$(gdb_assert_h) $(block_h) $(disasm_h)
d2153 1
a2153 1
	$(scm_tags_h) $(source_h) $(gdb_string_h) $(gdbcore_h) $(infcall_h)
d2269 1
a2269 1
	$(cp_abi_h) $(source_h) $(block_h) $(objc_lang_h)
d2311 1
a2311 1
	$(doublest_h) $(infcall_h)
a2568 3
mi-cmd-symbol.o: $(srcdir)/mi/mi-cmd-symbol.c $(defs_h) \
	$(mi_cmds_h) $(ui_out_h) $(symtab_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/mi/mi-cmd-symbol.c
@


1.364.2.2
log
@* dwarf-frame.c, dwarf-frame.h: New files.
* i386-tdep.c: Include "dwarf-frame.h".
(i386_gdbarch_init): Hook in the DWARF CFI frame unwinder.
* Makefile.in (SFILES): Add dwarf-frame.c
(dwarf_frame_h): Define.
(COMMON_OBS): Add dwarf-frame.o
(dwarf-frame.o): Add dependencies.
@
text
@d516 2
a517 2
	dbxread.c demangle.c disasm.c doublest.c dummy-frame.c \
	dwarf-frame.c dwarfread.c dwarf2expr.c dwarf2loc.c dwarf2read.c \
a637 1
dwarf_frame_h = dwarf-frame.h
a856 1
	dwarf-frame.o \
a1667 3
dwarf-frame.o: dwarf-frame.c $(defs_h) $(dwarf_frame_h) $(frame_h) \
	$(gdbcore_h) $(gdbtypes_h) $(symtab_h) $(objfiles_h) $(regcache_h) \
	$(gdb_assert_h) $(gdb_string_h) $(dwarf_frame_h)
@


1.364.2.3
log
@2003-05-18  Mark Kettenis  <kettenis@@gnu.org>

	Merge from mainline.
	* i386-tdep.h (I386_SIZEOF_GREGS, I386_SIZEOF_FREGS,
	I386_SIZEOF_XREGS): Remove defenitions.
	(IS_FP_REGNUM, IS_SSE_REGNUM): Remove definitions.
	* i386-tdep.c (i386_gdbarch_init): Don't set register_bytes,
	register_size, call_dummy_words and sizeof_call_dummy.
	* i386-linux-tdep.c (i386_linux_init_abi): Don't set register_bytes.
	* x86-64-tdep.c (x86_64_init_abi): Don't set register_bytes and
	register_size.
	(x86_64_register_bytes): Remove variable.
	(_initialize_x86_64_tdep): Remove function.

	* i386-linux-tdep.c (i386_linux_sigcontext_addr): Call read_memory
	with correct arguments.
	* config/i386/x86-64linux.mt (TDEPFILES): Add i386-linux-tdep.o.
@
text
@d171 1
a171 1
	mi-cmd-file.o mi-cmd-disas.o mi-symbol-cmds.o \
d178 1
a178 1
	mi/mi-cmd-file.c mi/mi-cmd-disas.c mi/mi-symbol-cmds.c \
d940 1
a940 1
		$(SHELL) $(srcdir)/../mkinstalldirs $(bindir) ; \
d943 1
a943 1
		$(SHELL) $(srcdir)/../mkinstalldirs \
d1633 1
a1633 1
	$(cp_abi_h) $(valprint_h)
d1667 1
a1667 2
	$(frame_h) $(inferior_h) $(gdb_assert_h) $(frame_unwind_h) \
	$(command_h) $(gdbcmd_h)
d2583 3
a2612 3
mi-symbol-cmds.o: $(srcdir)/mi/mi-symbol-cmds.c $(defs_h) \
	$(mi_cmds_h) $(ui_out_h) $(symtab_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/mi/mi-symbol-cmds.c
@


1.363
log
@gdb/ChangeLog:
2003-04-10  Jim Blandy  <jimb@@redhat.com>

	* symmisc.c: #include "gdb_regex.h".
	(maintenance_list_symtabs, maintenance_list_psymtabs): New
	functions.
	* maint.c (maintenance_list_command): New function.
	(_initialize_maint_cmds): Register the above as commands.
	* symtab.h (maintenance_list_symtabs,
	maintenance_list_psymtabs): New declarations.
	* cli/cli-cmds.c (maintenancelistlist): New variable.
	(init_cmd_lists): Initialize it.
	* cli/cli-cmds.h (maintenancelistlist): New declaration.
	* gdbcmd.h (maintenancelistlist): New declaration.
	* Makefile.in (symmisc.o): Update dependencies.

gdb/doc/ChangeLog:
2003-04-09  Jim Blandy  <jimb@@redhat.com>

	* gdb.texinfo (Symbols): Document 'maint list symtabs' and 'maint
	list psymtabs'.
@
text
@d515 1
a515 1
	cp-abi.c cp-support.c cp-valprint.c \
d867 1
d1555 2
a1556 1
block.o: block.c $(defs_h) $(block_h) $(symtab_h) $(symfile_h)
d1572 1
a1572 1
	$(stabsread_h) $(block_h)
d1618 4
a1621 1
cp-support.o: cp-support.c $(defs_h) $(cp_support_h)
d1674 1
a1674 1
	$(dwarf2loc_h) $(gdb_string_h) $(gdb_assert_h)
@


1.362
log
@* Makefile.in (libbfd_h): Added missing setting.
* mips-tdep.c (mips_gdbarch_init): Set disassembler_options
according to the selected ABI.
@
text
@d2258 1
a2258 1
	$(readline_h) $(block_h)
@


1.361
log
@	* i386-cygwin-tdep.c (i386_cygwin_frame_chain): New function.
	(i386_cygwin_init_abi): Set i386_cygwin_frame_chain as new
	frame_chain function.
	* Makefile.in: Add dependencies due to above change.
@
text
@d577 1
@


1.360
log
@2003-04-05  Andrew Cagney  <cagney@@redhat.com>

	Eliminate FRAME_FIND_SAVED_REGS.
	* config/pa/tm-hppah.h (hppa_hpux_frame_find_saved_regs_in_sigtramp):
	Change FSR parameter to a pointer.
	* config/pa/tm-hppa64.h (FRAME_FIND_SAVED_REGS_IN_SIGTRAMP):
	Assume FSR parameter is a pointer.
	* hppa-hpux-tdep.c (hppa_hpux_frame_find_saved_regs_in_sigtramp):
	Make fsr a pointer.
	* hppa-tdep.c (hppa_frame_find_saved_regs): New function.
	(hppa_frame_saved_pc): Call hppa_frame_init_saved_regs.  Make
	saved_regs a pointer.
	(hppa_frame_saved_pc): Ditto.
	(find_dummy_frame_regs): Make frame_saved_regs a pointer
	(hppa_pop_frame): Call hppa_frame_init_saved_regs.  Make fsr a
	pointer.
	(restore_pc_queue): Make fsr a pointer.
	(hppa_frame_find_saved_regs): Make frame_saved_regs a pointer.
	(hppa_frame_chain): Make saved_regs a pointer, call
	hppa_frame_init_saved_regs.
	* sparc-tdep.c: Include "gdb_assert.h".
	(sparc_frame_find_saved_regs): Replace internal_error with
	gdb_assert.
	* remote-vxsparc.c (vx_read_register): Delete reference to
	FRAME_FIND_SAVED_REGS.
	* gdbarch.sh: Delete check for FRAME_FIND_SAVED_REGS.
	* gdbarch.h: Regenerate.
	* frame.h (DEPRECATED_FRAME_INIT_SAVED_REGS): Delete macro.
	(deprecated_get_frame_saved_regs): Delete declaration.
	(struct frame_saved_regs): Delete definition.
	* frame.c (deprecated_get_frame_saved_regs): Delete function.
	* config/pa/tm-hppa.h (hppa_frame_init_saved_regs): Declare.
	(hppa_frame_find_saved_regs): Delete declaration.
	(FRAME_FIND_SAVED_REGS): Delete macro.
	(DEPRECATED_FRAME_INIT_SAVED_REGS): Define.
	* config/i386/tm-ptx.h (FRAME_FIND_SAVED_REGS): Delete
	FRAME_FIND_SAVED_REGS in comment.
@
text
@d1801 1
a1801 1
	$(i386_tdep_h) $(osabi_h)
@


1.359
log
@2003-04-04  Andrew Cagney  <cagney@@redhat.com>

	* frame.c (get_prev_frame): Do not call frame_type_from_pc.  Set
	the frame's type from the unwinder.
	(get_frame_type): Map UNKNOWN_FRAME onto NORMAL_FRAME.
	(create_new_frame, legacy_get_prev_frame): When the unwinder's
	type isn't UNKNOWN_FRAME, initalize "type" from the unwinder.
	(get_frame_base_address): Use get_frame_type.
	(get_frame_locals_address, get_frame_args_address): Ditto.
	(legacy_saved_regs_unwinder): Set the type to UNKNOWN_TYPE.
	* frame.h (enum frame_type): Add UNKNOWN_FRAME.
	(struct frame_info): Add comment explaining why the frame contains
	a "type" field.
	* dummy-frame.c (dummy_frame_unwind): Set the type to DUMMY_FRAME.
	* d10v-tdep.c (d10v_frame_unwind): Set the type to NORMAL_FRAME.
	* sentinel-frame.c (sentinel_frame_unwinder): Set the type to
	NORMAL_FRAME.
	* frame-unwind.h: Include "frame.h".
	(struct frame_unwind): Add "type" field.
	* Makefile.in (frame_unwind_h): Add $(frame_h).
@
text
@d2211 3
a2213 3
sparc-tdep.o: sparc-tdep.c $(defs_h) $(arch_utils_h) $(frame_h) \
	$(inferior_h) $(target_h) $(value_h) $(bfd_h) $(gdb_string_h) \
	$(regcache_h) $(osabi_h) $(gregset_h) $(gdbcore_h) $(symfile_h)
@


1.358
log
@Adding -file-list-exec-source-file command to MI
@
text
@d644 1
a644 1
frame_unwind_h = frame-unwind.h
@


1.358.2.1
log
@Merge with mainline.
@
text
@d644 1
a644 1
frame_unwind_h = frame-unwind.h $(frame_h)
d1801 1
a1801 1
	$(i386_tdep_h) $(osabi_h) $(gdbcore_h) $(frame_h) $(dummy_frame_h)
d2211 3
a2213 3
sparc-tdep.o: sparc-tdep.c $(defs_h) $(arch_utils_h) $(frame_h) $(inferior_h) \
	$(target_h) $(value_h) $(bfd_h) $(gdb_string_h) $(regcache_h) \
	$(osabi_h) $(gregset_h) $(gdbcore_h) $(gdb_assert_h) $(symfile_h)
@


1.357
log
@* Makefile.in (c_lang.o, jv_lang.o, language.o): Add $(demangle_h).
* language.h (struct language_defn): Add la_demangle.
(language_demangle): Declare.
* language.c (language_demangle): New function.
(unk_lang_demangle): Likewise.
(unknown_language_defn, auto_language_defn, local_language_defn):
Add ukn_lang_demangle.
* ada-lang.c (ada_language_defn): Add NULL for la_demangle element.
* f-lang.c, m2-lang.c, p-lang.c, scm-lang.c: Likewise.
* c-lang.c (c_language_defn, asm_language_defn): Likewise.
(cplus_language_defn): Add cplus_demangle for la_demangle element.
* jv-lang.c (java_demangle): New function
(java_language_defn): Use it for la_demangle element.
* objc-lang.c (objc_demangle): Add options argument
(objc_language_defn): Use objc_demangle for la_demangle element.
* maint.c (maintenance_demangle): Replace switch with
call to language_demangle.
* utils.c (fprintf_symbol_filtered): Likewise.
@
text
@d171 1
a171 1
	mi-cmd-disas.o \
d178 1
a178 1
	mi/mi-cmd-disas.c \
d2549 4
@


1.356
log
@2003-04-01  Andrew Cagney  <cagney@@redhat.com>

	* Makefile.in (d10v-tdep.o): Update dependencies.
	* d10v-tdep.c: Include "frame-base.h".
	(d10v_frame_unwind): Make constant.
	(d10v_frame_base_address): New function.
	(d10v_frame_base): New variable.
	(d10v_gdbarch_init): Set frame_base default.
	(struct d10v_unwind_cache): Add the field "prev_sp".  Update
	comment for base.
	(d10v_frame_unwind_cache): Set and use "prev_sp".
	(d10v_frame_this_id): Use the previous frame's inner most stack
	address and this frame's func address for the frame ID.  Use
	frame_id_build.  Don't analyze beyond the current instruction.
@
text
@d1574 2
a1575 1
	$(macroscope_h) $(gdb_assert_h) $(charset_h) $(gdb_string_h)
d1857 1
a1857 1
	$(jv_lang_h) $(gdbcore_h) $(block_h)
d1869 1
a1869 1
	$(parser_defs_h) $(jv_lang_h)
@


1.355
log
@2003-04-01  Andrew Cagney  <cagney@@redhat.com>

	Add frame debug info addresses:
	* frame-base.c: New file.
	* frame-base.h: New file.
	* frame.h (struct frame_base): Add opaque declaration.
	(get_frame_base): Update comment.
	(get_frame_base_address): Declare.
	(get_frame_locals_address): Declare.
	(get_frame_args_address): Declare.
	(struct frame_info): Add "base" and "base_cache".  Update
	comments on the unwinder.
	* frame.c: Include "frame-base.h".
	(get_frame_locals_address): New function.
	(get_frame_base_address): New function.
	(get_frame_args_address): New function.
	* findvar.c (read_var_value): Use get_frame_locals_address and
	get_frame_args_address.
	* stack.c (frame_info): Use get_frame_locals_address and
	get_frame_args_address.
	(FRAME_ARGS_ADDRESS_CORRECT): Delete conditionally defined macro,
	moved to "frame-base.c".
	* printcmd.c (print_frame_nameless_args): Ditto.
	* symtab.h (address_class): Update comments.
	* dwarf2loc.c (dwarf_expr_frame_base): Add note about
	get_frame_base_address.
	* dwarf2expr.c (execute_stack_op): Ditto.
	* Makefile.in (frame_base_h): Define.
	(frame.o): Update dependencies.
	(frame-base.o): Add dependencies.
	(SFILES): Add frame-base.c.
	(COMMON_OBS): Add frame-base.o.
@
text
@d1625 6
a1630 4
d10v-tdep.o: d10v-tdep.c $(defs_h) $(frame_h) $(frame_unwind_h) $(symtab_h) $(gdbtypes_h) \
	$(gdbcmd_h) $(gdbcore_h) $(gdb_string_h) $(value_h) $(inferior_h) $(dis_asm_h) \
	$(symfile_h) $(objfiles_h) $(language_h) $(arch_utils_h) $(regcache_h) \
	$(remote_h) $(floatformat_h) $(gdb_sim_d10v_h) $(sim_regno_h) $(gdb_assert_h)
@


1.354
log
@2003-03-30  Andrew Cagney  <cagney@@redhat.com>

	* infttrace.c: Include "gdbthread.h".
	(parent_attach_all): Fix function signature.
	(call_ptrace): Update call.
	* Makefile.in (infttrace.o): Update dependencies.
@
text
@d520 1
d645 1
d864 1
d1708 4
a1711 3
	$(gdb_obstack_h) $(dummy_frame_h) $(gdbcore_h) $(annotate_h) \
	$(language_h) $(frame_unwind_h) $(command_h) $(gdbcmd_h) \
	$(sentinel_frame_h)
@


1.353
log
@2003-03-29  Andrew Cagney  <cagney@@redhat.com>

	* infttrace.h: New file.
	* hpread.c: Include "gdb_assert.h" and "somsolib.h".
	(hpread_get_textlow): Detect an uninitialized dn_bufp.
	(hpread_read_doc_function_type): Detect an initialized type1.
	(hpread_quick_traverse): Initialize mod_name_string.
	* somsolib.h: Add #ifdef SOMSOLIB_H wrapper.
	(som_solib_get_solib_by_pc): Declare.
	(so_lib_thread_start_addr): Declare.
	(no_shared_libraries): Declare.
	* somread.c (init_import_symbols): Make static.  Add forward
	declaration.
	* config/pa/nm-hppah.h: Include "infttrace.h" for
	parent_attach_all.
	(hppa_insert_hw_watchpoint): Declare.
	(hppa_can_use_hw_watchpoint, hppa_remove_hw_watchpoint): Declare.
	* hppah-nat.c: Include "gdb_string.h".
	(parent_attach_all): Delete extern declaration, moved to
	"infttrace.h".
	(hppa_can_use_hw_watchpoint): Change type of "type" parameter to
	int.
	(hppa_remove_hw_watchpoint, hppa_insert_hw_watchpoint): Ditto.
	* Makefile.in (infttrace_h): Define.
	(hpread.o): Update dependencies.
	(hppah-nat.o, hppa-hpux-tdep.o, hppa-tdep.o): Ditto.
	* hppa-hpux-tdep.c: Include "gdb_string.h".
	* hppa-tdep.c (hppa_frame_saved_pc): Initialize "old_pc".
	* infrun.c (handle_inferior_event): Always initialize
	stepped_after_stopped_by_watchpoint.  Add default and remove
	fallthrough in switch statement.
	* infttrace.c (hppa_can_use_hw_watchpoint): Change type of "type"
	parameter to int.
	(hppa_remove_hw_watchpoint): Ditto.
@
text
@d1839 1
a1839 1
	$(gdb_string_h) $(gdb_wait_h) $(command_h) $(gdbcore_h)
@


1.352
log
@2003-03-28  Andrew Cagney  <cagney@@redhat.com>

	* Makefile.in (d10v-tdep.o): Update dependencies.
	* remote.h (target_resume_hook, target_wait_loop_hook): Declare.
	* d10v-tdep.c: Include "remote.h".
	(target_resume_hook): Delete extern declaration.
	(target_wait_loop_hook): Ditto.
	(tdisassemble_command): Eliminate assignment in "if" conditional.
	(d10v_ts2_register_sim_regno): Eliminate call to
	legacy_register_sim_regno.
	(d10v_ts3_register_sim_regno): Ditto.
@
text
@d725 1
d1747 2
a1748 1
	$(value_h) $(regcache_h) $(completer_h) $(symtab_h) $(a_out_encap_h) \
d1750 1
a1750 1
	$(symfile_h) $(objfiles_h) $(language_h) $(osabi_h) $(gdb_assert_h)
d1752 1
a1752 1
	$(osabi_h)
d1761 1
a1761 1
	$(gdb_string_h)
d2117 1
a2117 1
	$(gdbcore_h)
@


1.351
log
@* Makefile.in (infrun.o): Add $(language_h)
* infrun.c (handle_inferior_event): Use skip_language_trampoline
for language specific trampolines.
* language.h (struct language_defn): Add skip_trampoline.
(skip_language_trampoline): Declare.
* language.c (unk_lang_trampoline, skip_language_trampoline):
New functions.
(unknown_language_defn, auto_language_defn, local_language_defn):
Add ukn_lang_trampoline.
* ada-lang.c (ada_language_defn): Add NULL for language
specific skip_trampoline.
* c-lang.c, f-lang.c, jv-lang.c, m2-lang.c, p-lang.c,
scm-lang.c: Likewise.
* objc-lang.c (objc_skip_trampoline): New function.
(objc_language_defn): Add objc_skip_trampoline.
@
text
@d1621 4
a1624 5
d10v-tdep.o: d10v-tdep.c $(defs_h) $(frame_h) $(symtab_h) $(gdbtypes_h) \
	$(gdbcmd_h) $(gdbcore_h) $(gdb_string_h) $(value_h) $(inferior_h) \
	$(dis_asm_h) $(symfile_h) $(objfiles_h) $(language_h) $(arch_utils_h) \
	$(regcache_h) $(floatformat_h) $(gdb_sim_d10v_h) $(sim_regno_h) \
	$(gdb_assert_h)
@


1.351.2.1
log
@2003-03-26  Andrew Cagney  <cagney@@redhat.com>

	Add frame debug info addresses:
	* frame-base.c: New file.
	* frame-base.h: New file.
	* frame.h (struct frame_base): Add opaque declaration.
	(get_frame_base): Update comment.
	(get_frame_base_address): Declare.
	(get_frame_locals_address): Declare.
	(get_frame_args_address): Declare.
	(struct frame_info): Add "base" and "base_cache".  Update
	comments on the unwinder.
	* frame.c: Include "frame-base.h".
	(get_frame_locals_address): New function.
	(get_frame_base_address): New function.
	(get_frame_args_address): New function.
	* findvar.c (read_var_value): Use get_frame_locals_address.
	* stack.c (frame_info): Use get_frame_locals_address and
	get_frame_args_address.
	(FRAME_ARGS_ADDRESS_CORRECT): Delete conditionally defined macro,
	moved to "frame-base.c".
	* Makefile.in (frame_base_h): Define.
	(frame.o): Update dependencies.
	(d10v-tdep.o): Update dependencies.
	(frame-base.o): Add dependencies.
	(SFILES): Add frame-base.c.
	(COMMON_OBS): Add frame-base.o.
	* printcmd.c (print_frame_nameless_args): Ditto.
	* symtab.h (address_class): Update comments.
	* dwarf2loc.c (dwarf_expr_frame_base): Add note about
	get_frame_base_address.
	* dwarf2expr.c (execute_stack_op): Ditto.
	* d10v-tdep.c: Include "frame-base.h".
	(d10v_frame_unwind): Make constant.
	(d10v_frame_base_address): New function.
	(d10v_frame_base): New variable.
	(d10v_gdbarch_init): Set frame_base default.
@
text
@a519 1
	frame-base.c \
a643 1
frame_base_h = frame-base.h
a860 1
	frame-base.o \
d1621 5
a1625 5
d10v-tdep.o: d10v-tdep.c $(defs_h) $(frame_h) $(frame_unwind_h) \
	$(frame_base_h) $(symtab_h) $(gdbtypes_h) $(gdbcmd_h) $(gdbcore_h) \
	$(gdb_string_h) $(value_h) $(inferior_h) $(dis_asm_h) $(symfile_h) \
	$(objfiles_h) $(language_h) $(arch_utils_h) $(regcache_h) \
	$(floatformat_h) $(gdb_sim_d10v_h) $(sim_regno_h) $(gdb_assert_h)
d1705 3
a1707 4
	$(gdb_obstack_h) $(dummy_frame_h) $(sentinel_frame_h) $(gdbcore_h) \
	$(annotate_h) $(language_h) $(frame_unwind_h) $(frame_base_h) \
	$(command_h) $(gdbcmd_h)
frame-base.o: frame-base.c $(defs_h) $(frame_base_h)
@


1.351.2.2
log
@Merge with mainline.
@
text
@a726 1
infttrace_h = infttrace.h
d1627 1
a1627 1
	$(objfiles_h) $(language_h) $(arch_utils_h) $(regcache_h) $(remote_h) \
d1751 1
a1751 2
	$(value_h) $(regcache_h) $(completer_h) $(language_h) $(osabi_h) \
	$(gdb_assert_h) $(infttrace_h) $(symtab_h) $(a_out_encap_h) \
d1753 1
a1753 1
	$(symfile_h) $(objfiles_h)
d1755 1
a1755 1
	$(osabi_h) $(gdb_string_h)
d1764 1
a1764 1
	$(somsolib_h) $(gdb_assert_h) $(gdb_string_h)
d1842 1
a1842 1
	$(gdb_string_h) $(gdb_wait_h) $(command_h) $(gdbthread_h) $(gdbcore_h)
d2120 1
a2120 1
	$(gdbcore_h) $(solib_h)
@


1.350
log
@Makefile.in (YYOBJ): Add objc-exp.tab.o
objc-lang.h: Add multiple inclusion protection.
(start_msglist, add_msglist, end_msglist): Additional declarations.
@
text
@d1834 1
a1834 1
	$(observer_h)
@


1.349
log
@* Makefile.in (elf_reloc_macros_h, elf_arm_h): Define.
(arm-tdep.o): Depend on elf_arm_h.
@
text
@d877 1
@


1.348
log
@* Makefile.in (coff_internal_h): Define.
(arm-tdep.o): Update dependencies.
@
text
@d571 1
d573 1
d1535 1
a1535 1
	$(INCLUDE_DIR)/elf/arm.h $(gdb_assert_h)
@


1.347
log
@	* Makefile.in (ALLDEPFILES): Add i386-cygwin-tdep.c.
	(i386-cygwin-tdep.o): Add dependencies.
	* defs.h (enum gdb_osabi): Add GDB_OSABI_CYGWIN.
	* i386-cygwin-tdep.c: New file.
	* osabi.c (gdb_osabi_name): Add string for GDB_OSABI_CYGWIN.
	* config/i386/cygwin.mt (TDEPFILES): Add i386-cygwin-tdep.o.
@
text
@d569 1
d1531 3
a1533 3
	$(doublest_h) $(value_h) $(arch_utils_h) $(solib_svr4_h) \
	$(arm_tdep_h) $(gdb_sim_arm_h) $(elf_bfd_h) $(coff_internal_h) \
	$(elf_arm_h) $(gdb_assert_h) $(bfd_in2_h) $(libcoff_h) $(osabi_h)
@


1.346
log
@2003-03-20  Andrew Cagney  <cagney@@redhat.com>

	* Makefile.in (init.c): Don't add $(srcdir) prefix when a file
	already has a full path.
@
text
@d1354 1
a1354 1
	i386v4-nat.c i386ly-tdep.c \
d1788 2
@


1.345
log
@2003-03-20  Andrew Cagney  <cagney@@redhat.com>

	* Makefile.in (alpha-osf1-tdep.o): Update dependencies.
	* alpha-osf1-tdep.c: Include "gdb_string.h".
@
text
@d969 7
d995 1
a995 1
	    -e 's|\([^  ][^     ]*\)|$(srcdir)/\1|g' | \
@


1.344
log
@Print correct register names for MIPS targets using n32/n64 ABIs.
@
text
@d1493 1
a1493 1
	$(value_h) $(alpha_tdep_h) $(osabi_h)
@


1.343
log
@        * infrun.c (observer.h): Add #include.
        (normal_stop): Add call to observer_notify_normal_stop.
        * Makefile.in (infrun.o): Add dependency on observer.h.
@
text
@d1932 5
a1936 4
mips-tdep.o: mips-tdep.c $(defs_h) $(gdb_string_h) $(frame_h) $(inferior_h) \
	$(symtab_h) $(value_h) $(gdbcmd_h) $(language_h) $(gdbcore_h) \
	$(symfile_h) $(objfiles_h) $(gdbtypes_h) $(target_h) $(arch_utils_h) \
	$(regcache_h) $(osabi_h) $(mips_tdep_h) $(block_h) $(opcode_mips_h) \
@


1.342
log
@        * hppa-tdep.c (gdb_assert.h): Add missing #include.
        * somsolib.c (gdb_assert.h): Likewise.
        * Makefile.in (hppa-tdep.o): Add dependency on gdb_assert.h.
        (somsolib.o): Likewise.
@
text
@d1820 2
a1821 1
	$(symfile_h) $(top_h) $(inf_loop_h) $(regcache_h) $(value_h)
@


1.341
log
@	* Makefile.in (FLAGS_TO_PASS): Add LDFLAGS.
@
text
@d1738 1
a1738 1
	$(symfile_h) $(objfiles_h) $(language_h) $(osabi_h)
d2178 1
a2178 1
	$(regcache_h)
@


1.340
log
@	* cp-abi.c: Include "command.h", "gdbcmd.h", and "ui-out.h".
	(auto_cp_abi): New variable.
	(current_cp_abi, num_cp_abis): Make static.
	(CP_ABI_MAX): Define.
	(cp_abis): Turn into an array.
	(value_virtual_fn_field): Fix formatting.
	(switch_to_cp_abi, register_cp_abi): Update.  register_cp_abi now
	takes a pointer.
	(set_cp_abi_as_auto_default, set_cp_abi_cmd, show_cp_abi_cmd)
	(list_cp_abis, _initialize_cp_abi): New functions.
	* cp-abi.h: Add prototype for set_cp_abi_as_auto_default.  Remove
	declarations for cp_abis, num_cp_abis, current_cp_abi, and
	switch_to_cp_abi.  Update prototype for register_cp_abi.
	* Makefile.in (cp-abi.o): Update dependencies.
	* minsyms.c (install_minimal_symbols): Call set_cp_abi_as_auto_default
	instead of switch_to_cp_abi.
	* gnu-v2-abi.c (_initialize_gnu_v2_abi): Likewise.  Update call to
	register_cp_abi.
	* gnu-v3-abi.c (_initialize_gnu_v3_abi): Update call to
	register_cp_abi.
	* hpacc-abi.c (_initialize_hpacc_abi): Likewise.
@
text
@d438 1
@


1.339
log
@	* dwarf2expr.c (new_dwarf_expr_context): Add (void) to definition.
	* dwarf2loc.c: Include "regcache.h".
	(dwarf_expr_read_reg): Rename regnum argument to dwarf_regnum.  Use
	register_size.
	* Makefile.in (dwarf2loc.o): Update dependencies.
@
text
@d1596 2
a1597 1
cp-abi.o: cp-abi.c $(defs_h) $(value_h) $(cp_abi_h) $(gdb_string_h)
@


1.338
log
@2003-03-01  Andrew Cagney  <cagney@@redhat.com>

	* Makefile.in (ax-gdb.o): Update dependencies.
	* ax-gdb.c: Include "regcache.h".
	(gen_expr): Use register_type instead of REGISTER_VIRTUAL_TYPE.
	* findvar.c (value_of_register): Ditto.
	* infcmd.c (default_print_registers_info): Ditto.

Index: mi/ChangeLog
2003-03-01  Andrew Cagney  <cagney@@redhat.com>

	* mi-main.c (get_register): Use register_type instead of
	REGISTER_VIRTUAL_TYPE.
@
text
@d1644 1
a1644 1
	$(dwarf2loc_h) $(ax_h) $(ax_gdb_h) $(gdb_string_h)
@


1.337
log
@	* Makefile.in (dwarf2loc.o): Update dependencies.
	* ax-gdb.c (gen_var_ref): Handle LOC_COMPUTED and LOC_COMPUTED_ARG.
	* dwarf2expr.c (read_uleb128, read_sleb128): Make non-static.
	* dwarf2expr.h (read_uleb128, read_sleb128): Add prototypes.
	* dwarf2loc.c: Include "ax.h" and "ax-gdb.h".
	(locexpr_tracepoint_var_ref): New function.
	(dwarf2_locexpr_funcs): Add locexpr_tracepoint_var_ref.
@
text
@d1533 2
a1534 1
	$(target_h) $(ax_h) $(ax_gdb_h) $(gdb_string_h) $(block_h)
@


1.336
log
@        * Makefile.in: Add rules to build and link in observer.o.
@
text
@d1643 1
a1643 1
	$(dwarf2loc_h) $(gdb_string_h)
@


1.335
log
@	Based on a patch from Daniel Berlin (dberlin@@dberlin.org).
	* symtab.h: Add opaque declarations of struct axs_value and
	struct agent_expr.
	(enum address_class): Add LOC_COMPUTED and LOC_COMPUTED_ARG.
	(struct location_funcs): New type.
	(struct symbol): Add "loc" to aux_value.
	(SYMBOL_LOCATION_BATON, SYMBOL_LOCATION_FUNCS): New macros.
	* dwarf2read.c: Include "dwarf2expr.h".
	(dwarf2_symbol_mark_computed): New function.
	(read_func_scope): Use it.
	(var_decode_location): New function.
	(new_symbol): Use it.
	* dwarf2expr.c, dwarf2expr.h, dwarf2loc.c, dwarf2loc.h: New files.

	* Makefile.in (SFILES): Add dwarf2loc.c and dwarf2expr.c.
	(dwarf2expr_h, dwarf2loc_h): New variables.
	(COMMON_OBS): Add dwarf2expr.o and dwarf2loc.o.
	(dwarf2expr.o, dwarf2loc.o): New rules.
	(dwarf2read.o): Add $(dwarf2expr_h) and $(dwarf2loc_h).
	* buildsym.c (finish_block): Handle LOC_COMPUTED and
	LOC_COMPUTED_ARG.
	* findvar.c (symbol_read_needs_frame, read_var_value): Likewise.
	* m2-exp.y (yylex): Likewise.
	* printcmd.c (address_info, print_frame_args): Likewise.
	* stack.c (print_block_frame_locals, print_frame_arg_vars): Likewise.
	* symmisc.c (print_symbol, print_partial_symbols): Likewise.
	* ada-lang.c (ada_resolve_subexp, symtab_for_sym)
	(ada_add_block_symbols, fill_in_ada_prototype): Likewise.
	* symtab.c (lookup_block_symbol): Likewise.
@
text
@d532 1
a532 1
	objfiles.c osabi.c \
d687 1
d840 1
a840 1
	exec.o bcache.o objfiles.o minsyms.o maint.o demangle.o \
d1973 1
@


1.334
log
@* coff-pe-read.c: New file - support reading of minimal symbols from a portable
executable using the export table.
* coff-pe-read.h: New file.
* coffread.c: Include coff-pe-read.h.
(coff_symtab_read): Call read_pe_exported_syms iff no recognized debugging
symbols found.
* Makefile.in (SFILES): Add coff-pe-read.o.
(coff_pe_read_h): Define.
(COMMON_OBS): Add coff-pe-read.o.
(coffread.o): Add coff_pe_read_h dependency.
(coff-pe-read.o): New target.
@
text
@d516 1
a516 1
	dummy-frame.c dwarfread.c dwarf2read.c \
d631 2
d842 1
d1638 5
d1646 2
a1647 2
	$(language_h) $(complaints_h) $(bcache_h) $(gdb_string_h) \
	$(gdb_assert_h)
@


1.333
log
@2003-02-19  David Carlton  <carlton@@math.stanford.edu>

	* Makefile.in (SFILES): Add block.c.
	(block_h): New.
	(COMMON_OBS): Add block.o.
	(block.o): New.
	(x86-64-tdep.o): Add $(block_h).
	(values.o, valops.o, tracepoint.o, symtab.o, symmisc.o, symfile.o)
	(stack.o, printcmd.o, p-exp.tab.o, parse.o, objfiles.o)
	(objc-exp.tab.o, objc-lang.o, nlmread.o, mips-tdep.o, mdebugread.o)
	(m2-exp.tab.o, linespec.o, jv-lang.o, jv-exp.tab.o, infcmd.o)
	(f-valprint.o, findvar.o, f-exp.tab.o, expprint.o, coffread.o)
	(c-exp.tab.o, buildsym.o, breakpoint.o, blockframe.o, ax-gdb.o)
	(alpha-tdep.o, ada-lang.o, ada-exp.tab.o, mi-cmd-stack.o): Ditto.
	* value.h: Add opaque declaration for struct block.
	* parser-defs.h, objc-lang.h, buildsym.h, breakpoint.h: Ditto.
	* ada-lang.h: Ditto.
	* x86-64-tdep.c: #include "block.h"
	* values.c, valops.c, tracepoint.c, symtab.c, symmisc.c: Ditto.
	* symfile.c, stack.c, printcmd.c, p-exp.y, parse.c: Ditto.
	* objfiles.c, objc-exp.y, objc-lang.c, nlmread.c: Ditto.
	* mips-tdep.c, mdebugread.c, m2-exp.y, linespec.c: Ditto.
	* jv-lang.c, jv-exp.y, infcmd.c, f-valprint.c: Ditto.
	* findvar.c, f-exp.y, expprint.c, coffread.c, c-exp.y: Ditto.
	* buildsym.c, breakpoint.c, blockframe.c, ax-gdb.c: Ditto.
	* alpha-tdep.c, ada-lang.c, ada-exp.y: Ditto.
	* blockframe.c (blockvector_for_pc_sect): Move to "block.c".
	(blockvector_for_pc, block_for_pc_sect, block_for_pc): Ditto.
	* symtab.c (block_function): Ditto.
	(contained_in): Ditto.
	* frame.h: Move block_for_pc and block_for_pc_sect declarations to
	block.h.  Add opaque declaration for struct block.
	* symtab.h: Move block_function and contained_in declarations to
	block.h.  Add opaque declarations for struct block, struct
	blockvector.
	(struct block): Move to block.h.
	(struct blockvector): Ditto.
	(BLOCK_START, BLOCK_END, BLOCK_FUNCTION, BLOCK_SUPERBLOCK)
	(BLOCK_GCC_COMPILED, BLOCK_HASHTABLE, BLOCK_NSYMS, BLOCK_SYM)
	(BLOCK_BUCKETS, BLOCK_BUCKET, BLOCK_HASHTABLE_SIZE)
	(ALL_BLOCK_SYMBOLS, BLOCK_SHOULD_SORT, BLOCKVECTOR_NBLOCKS)
	(BLOCKVECTOR_BLOCK, GLOBAL_BLOCK, STATIC_BLOCK, FIRST_LOCAL_BLOCK):
	Ditto.
	* block.c: New file.
	* block.h: New file.

2003-02-19  David Carlton  <carlton@@math.stanford.edu>

	* mi-cmd-stack.c: #include "block.h"
@
text
@a246 1
TCL_DEPS = @@TCL_DEPS@@
a253 1
TK_DEPS = @@TK_DEPS@@
a257 1
ITCL_DEPS = @@ITCL_DEPS@@ 
a261 1
ITK_DEPS = @@ITK_DEPS@@ 
d512 2
a513 1
	charset.c cli-out.c coffread.c complaints.c completer.c corefile.c \
d615 1
d838 1
a838 1
	dbxread.o coffread.o elfread.o \
d1571 3
a1573 1
	$(target_h) $(gdb_assert_h) $(block_h)
@


1.332
log
@        * Makefile.in: Add gdbtk-interps.c.
@
text
@d514 1
a514 1
	bcache.c blockframe.c breakpoint.c buildsym.c builtin-regs.c \
d609 1
d828 1
a828 1
	symtab.o symfile.o symmisc.o linespec.o infcmd.o infrun.o \
d1435 1
a1435 1
	$(symfile_h) $(objfiles_h)
d1439 1
a1439 1
	$(bfd_h) $(objfiles_h) $(symfile_h)
d1443 1
a1443 1
	$(bfd_h) $(objfiles_h) $(symfile_h)
d1447 1
a1447 1
	$(symfile_h)
d1451 1
a1451 1
	$(bfd_h) $(objfiles_h) $(symfile_h)
d1455 1
a1455 1
	$(bfd_h) $(objfiles_h) $(symfile_h)
d1460 1
a1460 1
	$(bfd_h) objfiles.h symfile.h
d1471 1
a1471 1
	$(breakpoint_h) $(gdbcore_h) $(ada_lang_h) $(ui_out_h)
d1495 1
a1495 1
	$(osabi_h)
d1531 1
a1531 1
	$(target_h) $(ax_h) $(ax_gdb_h) $(gdb_string_h)
d1534 1
d1538 1
a1538 1
	$(dummy_frame_h) $(command_h) $(gdbcmd_h)
d1544 2
a1545 1
	$(cli_script_h) $(gdb_events_h) $(source_h) $(gdb_assert_h)
d1550 1
a1550 1
	$(stabsread_h)
d1573 1
a1573 1
	$(target_h) $(gdb_assert_h)
d1660 2
a1661 1
	$(value_h) $(language_h) $(parser_defs_h) $(target_h) $(gdb_string_h)
d1670 1
a1670 1
	$(f_lang_h) $(frame_h) $(gdbcore_h) $(command_h)
d1676 1
a1676 1
	$(builtin_regs_h)
d1798 1
a1798 1
	$(parser_defs_h) $(regcache_h)
d1823 1
a1823 1
	$(jv_lang_h) $(gdbcore_h)
d1840 1
a1840 1
	$(cp_abi_h) $(source_h) $(parser_defs_h)
d1903 1
d1922 1
a1922 1
	$(regcache_h) $(osabi_h) $(mips_tdep_h) $(opcode_mips_h) \
d1947 1
a1947 1
	$(objfiles_h) $(buildsym_h) $(stabsread_h)
d1959 1
a1959 1
	$(gdb_regex_h) $(regcache_h)
d1962 2
a1963 1
	$(gdb_obstack_h) $(gdb_string_h) $(breakpoint_h) $(mmalloc_h)
d1988 1
a1988 1
	$(doublest_h) $(builtin_regs_h) $(gdb_assert_h)
d2013 1
a2013 1
	$(gdb_assert_h)
d2200 1
a2200 1
	$(annotate_h) $(ui_out_h) $(source_h)
d2212 1
a2212 1
	$(gdb_assert_h) $(readline_h) $(filenames_h)
d2221 1
a2221 1
	$(readline_h)
d2227 1
a2227 1
	$(cp_abi_h) $(source_h)
d2247 2
a2248 2
	$(linespec_h) $(regcache_h) $(completer_h) $(gdb_events_h) $(ax_h) \
	$(ax_gdb_h) $(readline_h)
d2273 1
a2273 1
	$(gdb_assert_h)
d2280 1
a2280 1
	$(gdb_assert_h) $(regcache_h)
d2305 1
a2305 1
	$(x86_64_tdep_h) $(dwarf2cfi_h) $(gdb_assert_h)
d2521 1
a2521 1
	$(value_h) $(mi_cmds_h) $(ui_out_h) $(symtab_h)
@


1.331
log
@2003-02-14  Andrew Cagney  <ac131313@@redhat.com>

	* main.c (tui_version): Delete variable.
	(captured_main): When --tui, set interpreter_p to "tui" instead of
	enabling tui_version.
	* printcmd.c (display_command) [TUI]: Test tui_active instead of
	tui_version.
	* cli/cli-decode.c (lookup_cmd_composition): Ditto.
	* cli/cli-cmds.c (disassemble_command): Ditto.
	* defs.h (tui_version): Delete declaration.
	* Makefile.in (SUBDIR_TUI_SRCS): Add "tui/tui-interp.c".
	(tui-interp.o): Add rules.
	(SUBDIR_TUI_OBS): Add "tui-interp.o".

Index: tui/ChangeLog
2003-02-14  Andrew Cagney  <ac131313@@redhat.com>

	* tui.c (tui_enable, tui_disable): Don't modify tui_version.
	(tui_is_window_visible, tui_get_command_dimension): Test
	tui_active instead of tui_version.
	* tuiData.h (tui_version): Delete declaration.
	* tui-hooks.c (tui_init_hook, tui_event_loop): Delete function,
	moved to "tui-interp.c".
	(tui_exit, tui_command_loop): Ditto.
	(_initialize_tui): Don't initialize init_ui_hook.  Initialize
	target_new_objfile_hook.
	* tui-interp.c: New file.
@
text
@d287 1
a287 1
	gdbtk.o gdbtk-bp.o gdbtk-cmds.o gdbtk-hooks.o \
d291 1
a291 1
	gdbtk/generic/gdbtk-cmds.c gdbtk/generic/gdbtk-hooks.c \
d297 1
a297 1
SUBDIR_GDBTK_INITS = gdbtk/generic/gdbtk.c
d2450 8
@


1.330
log
@        * main.h (struct captured_main_args): Add interpreter_p.
        * main.c (captured_main): Initialize interpreter_p from context.
        * gdb.c (main): Set interpreter_p argument.
        * Makefile.in (gdb.o): Add dependency for interps.h.
@
text
@d197 1
d203 1
d2578 4
@


1.329
log
@2003-02-11  Andrew Cagney  <ac131313@@redhat.com>

	* acinclude.m4 (no_tcl): SUBST TCL_CC_SEARCH_FLAGS.
	* aclocal.m4: Regenerate.
	* configure: Regenerate.
	* Makefile.in (TCL): Use TCL_CC_SEARCH_FLAGS instead of
	TCL_LD_SEARCH_FLAGS.
@
text
@d1685 1
a1685 1
gdb.o: gdb.c $(defs_h) $(main_h) $(gdb_string_h)
@


1.328
log
@2003-02-07  Andrew Cagney  <ac131313@@redhat.com>

	* sol-thread.c, hpux-thread.c: Include "gdb_stat.h" instead of
	<sys/stat.h>.
	* Makefile.in (sol-thread.o, hpux-thread.o): Update dependencies.
@
text
@d243 1
a243 1
TCL = @@TCL_LD_SEARCH_FLAGS@@ @@TCL_BUILD_LIB_SPEC@@
@


1.327
log
@2003-02-06  Andrew Cagney  <ac131313@@redhat.com>

	* Makefile.in (symm-nat.o): Update dependencies.
	(sparc-nat.o, procfs.o, proc-api.o, ppc-linux-nat.o): Ditto.
	(lynx-nat.o, ia64-linux-nat.): Ditto.
	* symm-nat.c, sparc-nat.c, procfs.c, proc-api.c: Include
	"gdb_wait.h" instead of <wait.h> or <sys/wait.h>.
	* ppc-linux-nat.c, lynx-nat.c, ia64-linux-nat.c: Ditto.
@
text
@d1733 1
a1733 1
	$(inferior_h) $(regcache_h) $(gdbcore_h)
d2129 2
a2130 2
sol-thread.o: sol-thread.c $(defs_h) $(gdbthread_h) $(target_h) \
	$(inferior_h) $(gdbcmd_h) $(gdbcore_h) $(regcache_h) $(symfile_h) \
@


1.326
log
@2003-02-06  Andrew Cagney  <ac131313@@redhat.com>

	* Makefile.in (inflow_h): Define.
	(procfs.o, inflow.o, procfs.o): Update dependencies.
	* inftarg.c (child_stop): Delete extern declaration of
	inferior_process_group.  Include "inflow.h".
	* procfs.c (procfs_stop): Ditto.  Include "inflow.h".
	* inflow.c (PROCESS_GROUP_TYPE): Move definitions from here ...
	* inflow.h (PROCESS_GROUP_TYPE): ... to here.  New file.
	(our_process_group, inferior_process_group): Extern declarations.
@
text
@d1780 2
a1781 2
ia64-linux-nat.o: ia64-linux-nat.c $(defs_h) $(inferior_h) $(target_h) \
	$(gdbcore_h) $(regcache_h) $(gregset_h) $(gdb_string_h)
d1985 3
a1987 2
ppc-linux-nat.o: ppc-linux-nat.c $(defs_h) $(frame_h) $(inferior_h) \
	$(gdbcore_h) $(regcache_h) $(gregset_h) $(ppc_tdep_h) $(gdb_string_h)
d2006 2
a2007 1
proc-api.o: proc-api.c $(defs_h) $(gdbcmd_h) $(completer_h) $(proc_utils_h)
d2014 3
a2016 2
	$(elf_bfd_h) $(gdbcmd_h) $(gdbthread_h) $(gdb_assert_h) $(inflow_h) \
	$(gdb_dirent_h) $(X_OK) $(gdb_stat_h) $(proc_utils_h) $(gregset_h)
d2165 1
a2165 1
	$(regcache_h)
d2206 2
a2207 1
	$(target_h) $(regcache_h) $(gdb_stat_h) $(gdbcore_h) $(gdbcore_h)
@


1.325
log
@Add missing files from last commit :-(
@
text
@d663 1
d1794 2
a1795 1
	$(serial_h) $(terminal_h) $(target_h) $(gdbthread_h) $(gdb_string_h)
d1804 1
a1804 1
	$(gdbcore_h) $(command_h) $(gdb_stat_h) $(gdb_wait_h)
d2012 2
a2013 2
	$(elf_bfd_h) $(gdbcmd_h) $(gdbthread_h) $(gdb_dirent_h) $(X_OK) \
	$(gdb_stat_h) $(proc_utils_h) $(gregset_h)
@


1.324
log
@2003-02-05  Jim Ingham <jingham@@apple.com>
            Keith Seitz  <keiths@@redhat.com>
            Elena Zannoni  <ezannoni@@redhat.com>
            Andrew Cagney  <ac131313@@redhat.com>

	* Makefile.in (SUBDIR_CLI_OBS): Add "cli-interp.o".
	(SUBDIR_CLI_SRCS): Add "cli/cli-interp.c".
	(SUBDIR_MI_OBS): Add "mi-interp.o".
	(SUBDIR_MI_SRCS): Add "mi/mi-interp.c".
	(SFILES): Add "interps.c".
	(COMMON_OBS): Add "interps.o".
	(interps_h, mi_main_h): Define.
	(interps.o, cli-interp.o, mi-interp.o): Add dependencies.
	(mi-main.o, main.o, event-top.o): Update dependencies.
	* cli/cli-interp.c: New file.
	* interps.h, interps.c: New files.
	* top.c: (gdb_init): Don't install the default interpreter, handed
	by captured_main.
	* main.c: Include "interps.h".
	(interpreter_p): Note that it should malloc'ed.
	(captured_command_loop): Call current_interp_command_loop.
	(captured_main): Initialize interpreter_p to INTERP_CONSOLE.  Use
	xfree and xstrdup when updating interpreter_p.  Install the
	default interpreter.  Add hack to stop mi1's copyright notice
	being encoded.
	* event-top.h (gdb_setup_readline): Declare.
	(gdb_disable_readline): Declare.
	* event-top.c: Include "interps.h".
	(display_gdb_prompt): Call current_interp_display_prompt_p.
	(gdb_setup_readline): Initialize gdb_stdout, gdb_stderr,
	gdb_stdlog, and gdb_stdtarg.
	(_initialize_event_loop): Don't call gdb_setup_readline.
	* cli-out.c (cli_out_set_stream): New function.
	* cli-out.h (cli_out_set_stream): Declare.
@
text
@d148 1
a148 1
	cli-decode.o cli-script.o cli-cmds.o cli-setshow.o cli-utils.o
@


1.323
log
@2003-01-31  Andrew Cagney  <ac131313@@redhat.com>

	* config/djgpp/fnchange.lst: Delete nindy files.
	* nindy-share/ttyflush.c, nindy-share/stop.h: Delete files.
	* nindy-share/nindy.c, nindy-share/env.h: Delete files.
	* nindy-share/coff.h, nindy-share/block_io.h: Delete files.
	* nindy-share/b.out.h, nindy-share/VERSION: Delete files.
	* nindy-share/README, nindy-share/Onindy.c: Delete files.
	* nindy-tdep.c, nindy-share/Makefile: Delete files.
	* Makefile.in (init.c): Remove nindy references.
	(saber_gdb): Delete rule.
	(ALLDEPFILES): Delete hp300ux-nat.c, nindy-tdep.c,
	nindy-share/Onindy.c, nindy-share/nindy.c, nindy-share/ttyflush.c,
	and a68v-nat.c.
	(hp300ux-nat.o, a68v-nat.o, ptx4-nat.o): Delete rules.
	(Onindy.o, nindy.o, ttyflush.o, nindy-tdep.o): Delete rules.
	(HFILES_NO_SRCDIR): Delete nindy-share/b.out.h,
	nindy-share/block_io.h, nindy-share/coff.h, nindy-share/env.h, and
	nindy-share/stop.h.
	* hp300ux-nat.c, a68v-nat.c, ptx4-nat.c: Delete files.
	* saber.suppress: Delete file.
@
text
@d149 1
d153 1
d172 1
d179 1
d524 1
d663 1
d749 1
d826 1
d1647 2
a1648 1
	$(terminal_h) $(event_loop_h) $(event_top_h) $(gdbcmd_h) $(readline_h)
d1805 3
d1883 1
a1883 1
	$(event_loop_h) $(ui_out_h) $(main_h)
d2326 3
d2513 4
d2519 1
a2519 1
	$(mi_getopt_h) $(mi_console_h) $(ui_out_h) $(mi_out_h) \
@


1.323.2.1
log
@Merge kseitz_interps-20020528-branch.
@
text
@d147 2
a148 2
	cli-dump.o cli-decode.o \
	cli-interp.o cli-script.o cli-cmds.o cli-setshow.o cli-utils.o
d150 2
a151 2
	cli/cli-dump.c cli/cli-decode.c \
	cli/cli-interp.c cli/cli-script.c cli/cli-cmds.c cli/cli-setshow.c \
a169 2
	mi-events.o \
	mi-interp.o \
a175 2
	mi/mi-events.c \
	mi/mi-interp.c \
d519 1
a519 1
	inf-loop.c infcmd.c inflow.c infrun.c interps.c \
a657 1
interps_h = interps.h
d831 1
a831 1
	ui-out.o cli-out.o interps.o \
d1637 1
a1637 1
	$(gdb_string_h) $(interps_h)
d1639 1
a1639 2
	$(terminal_h) $(event_loop_h) $(event_top_h) $(gdbcmd_h) \
	$(readline_h) $(interps_h)
a1699 2
interps.o: interps.c $(defs_h) $(gdbcmd_h) $(ui_out_h) $(event_loop_h) \
	$(event_top_h) $(interps_h) $(gdb_h) $(wrapper_h) $(gdb_events_h)
a2313 3
cli-interp.o: $(srcdir)/cli/cli-interp.c $(defs_h) $(value_h) \
	$(wrapper_h) $(event_top_h) $(ui_out_h) $(cli_out_h) $(top_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/cli/cli-interp.c
d2474 1
a2474 1
	$(mi_getopt_h) $(gdb_events_h) $(gdb_h) $(interps_h)
a2494 3
mi-events.o: $(srcdir)/mi/mi-events.c $(defs_h) $(ui_out_h) $(interps_h) \
	$(gdb_h) $(breakpoint_h) $(mi_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/mi/mi-events.c
a2497 4
mi-interp.o: $(srcdir)/mi/mi-interp.c $(defs_h) $(interps_h) \
	$(event_top_h) $(event_loop_h) $(inferior_h) $(ui_out_h) \
	$(top_h) $(mi_h) $(mi_cmds_h) $(mi_out_h) $(mi_console_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/mi/mi-interp.c
d2502 1
a2502 1
	$(gdb_h) $(frame_h) $(interps_h)
@


1.323.2.2
log
@2003-02-03  Andrew Cagney  <ac131313@@redhat.com>

	* top.c (gdb_init): Move interpreter init code from here ...
	* main.c (captured_main): ... to here.  Include "interps.h".
	(captured_main): Set interpreter_p to a default before parsing the
	options.
	* Makefile.in (main.o): Update dependencies.
@
text
@d1879 1
a1879 1
	$(event_loop_h) $(ui_out_h) $(main_h) $(interps_h)
@


1.323.2.3
log
@Kill off anything not directly related to the CLI command.
@
text
@d147 2
a148 4
	cli-dump.o \
	cli-decode.o cli-script.o cli-cmds.o \
	cli-interp.o \
	cli-setshow.o cli-utils.o
d150 2
a151 4
	cli/cli-dump.c \
	cli/cli-decode.c cli/cli-script.c cli/cli-cmds.c \
	cli/cli-interp.c \
	cli/cli-setshow.c \
d170 1
d178 1
d523 1
a523 2
	inf-loop.c infcmd.c inflow.c infrun.c \
	interps.c \
a744 1
mi_h = $(srcdir)/mi/mi.h
a823 1
	interps.o \
d836 1
a836 1
	ui-out.o cli-out.o \
d1642 1
a1642 1
	$(gdb_string_h)
d1644 2
a1645 1
	$(terminal_h) $(event_loop_h) $(event_top_h) $(gdbcmd_h) $(readline_h)
d1706 2
a1803 3
interps.o: interps.c $(defs_h) $(gdbcmd_h) $(ui_out_h) $(event_loop_h) \
	$(event_top_h) $(interps_h) $(completer_h) $(gdb_string_h) \
	$(gdb_events_h)
d1879 1
a1879 1
	$(event_loop_h) $(ui_out_h) $(main_h)
d2322 2
a2323 2
cli-interp.o: $(srcdir)/cli/cli-interp.c $(defs_h) $(interps_h) $(wrapper_h) \
	$(event_top_h) $(ui_out_h) $(cli_out_h) $(top_h)
d2485 1
a2485 1
	$(mi_getopt_h) $(gdb_events_h) $(gdb_h)
d2506 3
d2512 3
a2514 3
mi-interp.o: $(srcdir)/mi/mi-interp.c $(defs_h) $(gdb_string_h) $(interps_h) \
	$(event_top_h) $(event_loop_h) $(inferior_h) $(ui_out_h) $(top_h) \
	$(mi_h) $(mi_cmds_h) $(mi_out_h) $(mi_console_h)
d2520 1
a2520 1
	$(gdb_h) $(frame_h)
@


1.323.2.4
log
@Overhaul changelog entries.
@
text
@d748 1
a751 1
mi_main_h = $(srcdir)/mi/mi-main.h
d2516 1
a2516 1
	$(mi_main_h) $(mi_cmds_h) $(mi_out_h) $(mi_console_h)
d2522 1
a2522 1
	$(gdb_h) $(frame_h) $(mi_main_h)
@


1.323.2.5
log
@Stray droppings.
@
text
@d148 3
a150 2
	cli-decode.o cli-script.o cli-cmds.o cli-setshow.o cli-utils.o \
	cli-interp.o
d153 1
a153 1
	cli/cli-decode.c cli/cli-script.c cli/cli-cmds.c cli/cli-setshow.c \
d155 1
d1649 1
a1649 2
	$(terminal_h) $(event_loop_h) $(event_top_h) $(interps_h) \
	$(gdbcmd_h)
d1808 1
a1808 1
	$(gdb_events_h) $(gdb_assert_h) $(top_h)
d1884 1
a1884 1
	$(event_loop_h) $(ui_out_h) $(interps_h) $(main_h)
d2328 1
a2328 1
	$(event_top_h) $(ui_out_h) $(cli_out_h) $(top_h) $(gdb_string_h)
d2520 1
a2520 1
	$(mi_getopt_h) $(mi_console_h) $(ui_out_h) $(mi_out_h) $(interps_h) \
d2522 1
a2522 1
	$(gdb_h) $(frame_h)
@


1.322
log
@2003-01-31  Andrew Cagney  <ac131313@@redhat.com>

	* README: Remove reference to Ericsson 1800 monitor.
	* Makefile.in (remote-es.o): Delete rule.
	(ALLDEPFILES): Delete remote-es.c.
	* remote-es.c: Delete file.
	* config/m68k/es1800.mt: Delete file.
	* config/djgpp/fnchange.lst: Update.
	* configure.tgt: Delete m68*-ericsson-* target.
@
text
@a782 3
	nindy-share/b.out.h \
	nindy-share/block_io.h nindy-share/coff.h \
	nindy-share/env.h nindy-share/stop.h \
d960 1
a960 1
	sed -e '/^Onindy.o/d' \
a961 2
	    -e '/^nindy.o/d' \
	    -e '/ttyflush.o/d' \
a1013 25
saber_gdb: $(SFILES) $(DEPFILES) copying.c version.c
	#setopt load_flags $(CFLAGS) $(BFD_CFLAGS) -DHOST_SYS=SUN4_SYS
	#load ./init.c $(SFILES)
	#unload $(srcdir)/c-exp.y
	#unload $(srcdir)/jv-exp.y
	#unload $(srcdir)/m2-exp.y
	#unload $(srcdir)/p-exp.y
	#unload vx-share/*.h
	#unload nindy-share/[A-Z]*
	#load c-exp.tab.c
	#load jv-exp.tab.c
	#load m2-exp.tab.c
	#load p-exp.tab.c
	#load copying.c version.c
	#load ../opcodes/libopcodes.a
	#load ../libiberty/libiberty.a
	#load ../bfd/libbfd.a
	#load ../readline/libreadline.a
	#load ../mmalloc/libmmalloc.a
	#load ../intl/libintl.a
	#load -ltermcap 
	#load `echo " "$(DEPFILES) | sed -e 's/\.o/.c/g' -e 's, , ../,g'`
	echo "Load .c corresponding to:" $(DEPFILES)


d1317 1
a1317 1
ALLDEPFILES = a68v-nat.c \
d1329 1
a1329 1
	hp300ux-nat.c hppa-tdep.c hppa-hpux-tdep.c \
a1348 2
	nindy-share/Onindy.c nindy-share/nindy.c \
	nindy-share/ttyflush.c nindy-tdep.c \
a1453 1
a68v-nat.o: a68v-nat.c $(defs_h) $(inferior_h) $(regcache_h)
a1704 2
hp300ux-nat.o: hp300ux-nat.c $(defs_h) $(frame_h) $(inferior_h) \
	$(regcache_h)
a1924 1
nindy-tdep.o: nindy-tdep.c $(defs_h) $(symtab_h) $(frame_h) $(gdbcore_h)
a1999 2
ptx4-nat.o: ptx4-nat.c $(defs_h) $(inferior_h) $(gdbcore_h) $(regcache_h) \
	$(gregset_h)
a2508 17

#
# nindy-share sub-directory
#
# Need to explicitly specify the compile rule as make will do nothing
# or try to compile the object file into the mi directory.

Onindy.o: nindy-share/Onindy.c $(gdb_wait_h) nindy-share/block_io.h \
	nindy-share/env.h
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/nindy-share/Onindy.c

nindy.o: nindy-share/nindy.c $(gdb_wait_h) nindy-share/block_io.h \
	nindy-share/env.h
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/nindy-share/nindy.c

ttyflush.o: nindy-share/ttyflush.c $(srcdir)/nindy-share/ttyflush.c
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/nindy-share/ttyflush.c
@


1.321
log
@2003-01-30  Andrew Cagney  <ac131313@@redhat.com>

	* Makefile.in (mon960-rom.o): Delete rule.
	* mon960-rom.c: Delete file.
@
text
@d1387 1
a1387 1
	remote-es.c remote-hms.c remote-mips.c \
a2048 3
remote-es.o: remote-es.c $(defs_h) $(gdb_string_h) $(frame_h) $(inferior_h) \
	$(target_h) $(command_h) $(symfile_h) $(remote_utils_h) $(gdbcore_h) \
	$(serial_h) $(regcache_h) $(value_h)
@


1.320
log
@2003-01-30  Andrew Cagney  <ac131313@@redhat.com>

	* d10v-tdep.c: Include "frame-unwind.h".
	(d10v_gdbarch_init): Append d10v_frame_p to the unwind predicate
	list.
	(next_addr, uses_frame): Delete.
	(struct d10v_unwind_cache): Define.
	(prologue_find_regs): Add struct d10v_unwind_cache info parameter.
	Use info instead of next_addr and uses_frame globals.
	(d10v_frame_init_saved_regs): Delete function.
	(d10v_init_extra_frame_info): Delete function.
	(d10v_gdbarch_init): Do not initialize init_extra_frame_info,
	frame_init_saved_regs or pop_frame, frame_chain, frame_chain_valid,
	init_frame_pc or frame_saved_pc.
	(d10v_pop_frame): Delete function.
	(do_d10v_pop_frame): Delete function.
	(d10v_frame_chain): Delete function.
	(d10v_frame_chain_valid): Delete function.
	(d10v_frame_pc_unwind): New function.
	(d10v_frame_id_unwind): New function.
	(saved_regs_unwinder): New function.
	(d10v_frame_register_unwind): New function.
	(d10v_frame_pop): New function.
	(d10v_frame_unwind): New variable.
	(d10v_frame_p): New function.
	(d10v_frame_saved_pc): Delete function.
	* Makefile.in (d10v-tdep.o): Update dependencies.
@
text
@a1955 3
mon960-rom.o: mon960-rom.c $(defs_h) $(gdbcore_h) $(target_h) $(monitor_h) \
	$(serial_h) $(srec_h) $(xmodem_h) $(symtab_h) $(symfile_h) \
	$(inferior_h) $(gdb_string_h)
@


1.319
log
@2003-01-27  Andrew Cagney  <ac131313@@redhat.com>

	* sentinel-frame.h, sentinel-frame.c: New files.
	* Makefile.in (frame.o): Update dependencies.
	(SFILES): Add sentinel-frame.c.
	(sentinel_frame_h): Define.
	(COMMON_OBS): Add sentinel-frame.o.
	(sentinel-frame.o): Specify dependencies.
	* frame.c: Include "sentinel-frame.h".
	(frame_register_unwind): Rewrite assuming that there is always a a
	->next frame.
	(frame_register, generic_unwind_get_saved_register): Ditto.
	(frame_read_unsigned_register, frame_read_signed_register): Ditto.
	(create_sentinel_frame, unwind_to_current_frame): New functions.
	(get_current_frame): Rewrite using create_sentinel_frame and
	unwind_to_current_frame.  When possible, always create a frame.
	(create_new_frame): Set next to the sentinel frame.
	(get_next_frame): Rewrite.  Don't go below the level 0 frame.
	(deprecated_update_frame_pc_hack): Update the next frame's PC and
	ID cache when necessary.
	(frame_saved_regs_id_unwind): Use frame_relative_level.
	(deprecated_generic_get_saved_register): Use frame_relative_level,
	get_frame_saved_regs, get_frame_pc, get_frame_base and
	get_next_frame.
	(frame_saved_regs_register_unwind): Use get_frame_saved_regs and
	frame_register.
@
text
@d1624 3
a1626 3
	$(dis_asm_h) $(symfile_h) $(objfiles_h) $(language_h) \
	$(arch_utils_h) $(regcache_h) $(floatformat_h) $(gdb_sim_d10v_h) \
	$(sim_regno_h)
@


1.318
log
@gdb/ChangeLog:
2003-01-23  Alexander Larsson <alexl@@redhat.com>
	    Jim Blandy  <jimb@@redhat.com>

	Add support for executables whose debug info has been separated
	out into a separate file, leaving only a link behind.
	* objfiles.h (struct objfile): New fields: separate_debug_objfile
	and separate_debug_objfile_backlink.
	(put_objfile_before): New declaration.
	* symfile.c: #include "filenames.h".
	(symbol_file_add_with_addrs_or_offsets): If this objfile has its
	debug info in a separate file, read that, too. Save the addrs
	argument, so we can use it again to read the separated debug info;
	syms_from_objfile modifies the table we pass it.
	(reread_symbols): After re-reading an objfile, call
	reread_separate_symbols to refresh its separate debug info
	objfile, if it has one.
	(reread_separate_symbols, find_separate_debug_file,
	get_debug_link_info, separate_debug_file_exists): New functions.
	(debug_file_directory): New global var.
	(_initialize_symfile): Initialize debug_file_directory, and
	provide the new `set debug-file-directory' command to let the user
	change it.
	* objfiles.c (free_objfile): If this objfile has its debug info in
	a separate objfile, free that one too.  If this is itself a
	separate debug info objfile, clear our parent's backlink.
	(put_objfile_before): New function.
	* utils.c (gnu_debuglink_crc32): New function.
	* defs.h (gnu_debuglink_crc32): New declaration.
	* Makefile.in (symfile.o): Note dependency on "filenames.h".
	* configure.in: Handle --with-separate-debug-dir config option.
	* acinclude.m4 (AC_DEFINE_DIR): New macro.
	* acconfig.h (DEBUGDIR): New macro.
	* configure, aclocal.m4, config.in: Regenerated.

gdb/doc/ChangeLog:
2003-01-23  Jim Blandy  <jimb@@redhat.com>

	* gdb.texinfo (Separate Debug Files): New section.
@
text
@d531 3
a533 1
	scm-exp.c scm-lang.c scm-valprint.c serial.c ser-unix.c source.c \
d691 1
d838 3
a840 1
	scm-exp.o scm-lang.o scm-valprint.o complaints.o typeprint.o \
d1700 2
a1701 1
	$(language_h) $(frame_unwind_h) $(command_h) $(gdbcmd_h)
d2134 2
@


1.317
log
@* symfile.c: #include "gdb_assert.h".
(syms_from_objfile): Add the ability to pass in a section offset
table directly, as an alternative to the section_addr_info table.
Document arguments better.
(symbol_file_add): Pass extra arguments to syms_from_objfile.
* symfile.h (syms_from_objfile): Update declaration.
* rs6000-nat.c (objfile_symbol_add): Pass new arguments to
syms_from_objfile.
* Makefile.in (symfile.o): List dependency on $(gdb_assert_h).
@
text
@d2223 1
a2223 1
	$(gdb_assert_h) $(readline_h)
@


1.316
log
@	Original patch by Tom Tromey <tromey@@cygnus.com> and
	Jason Molenda <jmolenda@@apple.com>.
	* Makefile.in (PROFILE_CFLAGS): Substitute from configure.
	(INTERNAL_LDFLAGS): Don't include PROFILE_CFLAGS.
	* NEWS: Mention profiling.
	* configure.in (--enable-gdbtk): Fix typo.
	(--enable-profiling): New.  Set PROFILE_CFLAGS.
	* maint.c (maintenance_set_profile_cmd): Remove NOTYET.
	Fill in function.
	(profiling_state): New variable.
	(mcleanup_wrapper): New function.
	(_initialize_maint): Remove NOTYET, fix call to
	add_setshow_boolean_cmd for "maint set profile".
	* configure: Regenerated.
@
text
@d2223 1
a2223 1
	$(readline_h)
@


1.315
log
@2003-01-21  Martin M. Hunt  <hunt@@redhat.com>

	* Makefile.in (install-gdbtk): Install PNG images too.
@
text
@d325 2
a326 1
#PROFILE_CFLAGS = -pg
d353 2
a354 1
INTERNAL_LDFLAGS = $(CFLAGS) $(GLOBAL_CFLAGS) $(PROFILE_CFLAGS) $(MH_LDFLAGS) $(LDFLAGS) $(CONFIG_LDFLAGS)
@


1.314
log
@2003-01-21  Andrew Cagney  <ac131313@@redhat.com>

	* frame.h (FRAME_OBSTACK_ZALLOC): Define.
	* blockframe.c (backtrace_below_main): Move to "frame.c".
	(frame_chain_valid): Delete check for backtrace_below_main.
	(_initialize_blockframe): Delete initialization, move ``set
	backtrace-below-main'' command to "frame.c".
	(do_flush_frames_sfunc): Delete function.
	* frame.c: Include "command.h" and "gdbcmd.h".
	(frame_type_from_pc): New function.
	(create_new_frame): Use frame_type_from_pc.
	(legacy_get_prev_frame): New function.
	(get_prev_frame): Rewrite.  When an old style frame, call
	legacy_get_prev_frame.  Otherwize, unwind the PC first.
	(_initialize_frame): Add ``set backtrace-below-main'' command.
	* Makefile.in (frame.o): Update dependencies.
@
text
@d2392 1
a2392 1
	for i in *.tcl *.itcl *.ith *.itb images/*.gif images2/*.gif images/icons.txt images2/icons.txt tclIndex help/*.html  help/trace/*.html help/trace/index.toc help/images/*.gif; \
@


1.313
log
@2003-01-18  Andrew Cagney  <ac131313@@redhat.com>

	* dummy-frame.h (dummy_frame_id_unwind): Delete declaration.
	(dummy_frame_pc_unwind, dummy_frame_register_unwind): Ditto.
	(struct frame_unwind): Declare opaque.
	(dummy_frame_p): Declare function.
	* dummy-frame.c (dummy_frame_id_unwind): Make static.
	(dummy_frame_pc_unwind, dummy_frame_register_unwind): Ditto.
	* dummy-frame.c: Include "frame-unwind.h".
	(dummy_frame_p): New function.
	(dummy_frame_unwind): New variable.
	* frame.c: Include "frame-unwind.h".
	(frame_pc_unwind, frame_id_unwind, frame_register_unwind): Update
	to use the new unwind field.
	(set_unwind_by_pc): Delete function.
	(create_new_frame, get_prev_frame): Set unwind field using
	frame_unwind_find_by_pc.
	(trad_frame_unwind, trad_frame_unwinder): New variables.
	* frame.h (trad_frame_unwind): Declare variable.
	(frame_id_unwind_ftype): Delete declaration.
	(frame_pc_unwind_ftype, frame_register_unwind_ftype): Ditto.
	(struct frame_unwind): Declare opaque.
	(struct frame_info): Replace the fields id_unwind, pc_unwind and
	register_unwind with a single unwind pointer.
	* frame-unwind.h, frame-unwind.c: New files.
	* Makefile.in (SFILES): Add frame-unwind.c.
	(frame_unwind_h): Define.
	(COMMON_OBS): Add frame-unwind.o.
	(frame-unwind.o): Specify dependencies.
	(frame.o, dummy-frame.o): Update dependencies.
@
text
@d1693 1
a1693 1
	$(language_h) $(frame_unwind_h)
@


1.312
log
@	* Makefile.in (TARGET_SYSTEM_ROOT, TARGET_SYSTEM_ROOT_DEFINE): New
	variables.
	(main.o): Custom rule which uses $(TARGET_SYSTEM_ROOT_DEFINE).
	* configure.in: Add --with-sysroot.
	* configure: Regenerated.
	* main.c (gdb_sysroot): New variable.
	(captured_main): Initialize gdb_sysroot.
	* defs.h (gdb_sysroot): New extern declaration.
	* solib.c (_initialize_solib): Initialize solib_absolute_prefix.
@
text
@d514 1
d627 1
d838 1
a838 1
	frame.o doublest.o \
d1641 1
a1641 1
	$(frame_h) $(inferior_h) $(gdb_assert_h)
d1693 3
a1695 1
	$(language_h)
@


1.311
log
@2003-01-09  Andrew Cagney  <ac131313@@redhat.com>

	* infrun.c (follow_fork): Use ISO C definition.
	* expprint.c (print_subexp): Use xfree instead of free.
	* charset.c: Include "gdb_string.h" instead of <string.h>.
	(register_iconv_charsets): Use ISO C definition.
	(host_charset, target_charset): Ditto.
	* Makefile.in (charset.o): Update dependencies.
	(mi-cmd-env.o): Update dependencies.

Index: mi/ChangeLog
2003-01-09  Andrew Cagney  <ac131313@@redhat.com>

	* mi-cmd-env.c: Include "gdb_string.h" instead of <string.h>.
	Move all includes to after "defs.h".
@
text
@d139 4
d1409 5
@


1.311.2.1
log
@2003-01-10  Andrew Cagney  <ac131313@@redhat.com>

	* sentinel-frame.c (sentinel_frame_register_unwind): Correctly set
	LVALP and ADDRP.

	* frame.c: Include "ui-out.h".

	* frame.c (frame_type_from_pc): New function.
	(create_new_frame): Use.
	(set_unwind_by_pc): Drop unused frame parameter.
	(deprecated_get_prev_frame): Rename old get_prev_frame.
	(get_prev_frame): Rewrite.  Unwind the PC first.  Use
	frame_id_unwind.

	* dummy-frame.h (dummy_frame_id_unwind): Update.
	(dummy_frame_pc_unwind): Update.
	(dummy_frame_register_unwind): Update.
	* dummy-frame.c: Update.

	* frame.c (create_new_frame): Set next to a sentinal frame.
	(create_sentinel_frame): New function.
	(frame_id_unwind): Update id_unwind call.
	(frame_saved_regs_register_unwind): Update cache parameter.
	(frame_saved_regs_pc_unwind): Update cache parameter.
	(frame_saved_regs_id_unwind): Update cache and id parameters.

	* frame.h (frame_id_unwind_ftype): Return the frame ID using a
	reference parameter.
	(struct frame_unwind_cache): Declare.
	(frame_id_unwind_ftype, frame_pc_unwind_ftype,
	frame_register_unwind_ftype): Change the unwind cache_type to
	`struct frame_unwind_cache'.
	(struct frame_info): Change type of unwind_cache to `struct
	frame_unwind_cache'.

	* frame.c (get_next_frame): Don't go beyond the inner-most frame.
	(frame_register_unwind): Assume that there is always a next frame.
	(frame_register): Ditto.
	(generic_unwind_get_saved_register): Ditto.

	* frame.h (frame_type): Add SENTINEL_FRAME.

	* Makefile.in (frame.o): Update dependencies.

	* frame.h (FRAME_OBSTACK_ZALLOC): Define.

	* Makefile.in (sentinel-frame.o): Specify dependencies.
	(sentinel_frame_h): Define.
	(SFILES): Add sentinel-frame.c.
	(COMMON_OBS): Add sentinel-frame.o.
	* sentinel-frame.c: New file.
	* sentinel-frame.h: New file.
@
text
@d524 1
a524 2
	scm-exp.c scm-lang.c scm-valprint.c sentinel-frame.c \
	serial.c ser-unix.c source.c \
a680 1
sentinel_frame_h = sentinel-frame.h
a833 1
	sentinel-frame.o \
d1682 1
a1682 1
	$(language_h) $(sentinel_frame_h) $(ui_out_h)
a2112 2
sentinel-frame.o: sentinel-frame.c $(defs_h) $(regcache_h) \
	$(sentinel_frame_h) $(inferior_h)
@


1.311.2.2
log
@Move legacy frame code to legacy-frame.[hc].
@
text
@d515 1
a515 1
	language.c legacy-frame.c linespec.c \
a651 1
legacy_frame_h = legacy-frame.h
d837 1
a837 1
	reggroups.o legacy-frame.o
d1684 2
a1685 3
	$(gdb_obstack_h) $(dummy_frame_h) $(sentinel_frame_h) \
	$(legacy_frame_h) $(gdbcore_h) $(annotate_h) $(language_h) \
	$(ui_out_h)
a1834 2
legacy-frame.o: legacy-frame.c $(defs_h) $(legacy_frame_h) $(gdb_assert_h) \
	$(frame_h) $(gdbcore_h) $(regcache_h) $(target_h) $(dummy_frame_h)
@


1.311.2.3
log
@2003-01-13  Andrew Cagney  <ac131313@@redhat.com>

	* d10v-tdep.c: Include "d10v-tdep.h".  Update to use D10V_
	prefixed enums.
	(do_d10v_pop_frame): Delete.  Use version in d10v-frame.c.

	* frame.c (frame_read_unsigned_register): Do not use
	get_next_frame.
	(frame_read_signed_register): Do not use get_next_frame.
	(get_frame_base): Use frame_id_unwind.

	* d10v-tdep.h: New file.
	* d10v-frame.h: New file.
	* d10v-frame.c: New file.

	* frame.c (frame_id_unwind): Update.
	(create_sentinel_frame): Update.
	(legacy_get_prev_frame): Use frame_unwind_find_by_pc.
	(get_prev_frame): Ditto.

	* frame.h (struct frame_info): Replace pc_unwind, id_unwind and
	register_unwind with unwind structure.

	* frame.c (set_unwind_by_pc): Delete function.
	(create_new_frame): Use frame_unwind_find_by_pc;

	* Makefile.in (frame_h): Add $(frame_unwind_h).
	* frame.h: Include "frame-unwind.h".
	(frame_register_unwind_ftype): Delete.
	(frame_id_unwind_ftype): Delete.
	(frame_pc_unwind_ftype): Delete.

	* Makefile.in (dummy-frame.o): Update dependencies.
	(legacy-frame.o): Update dependencies.

	* dummy-frame.c: Include "frame-unwind.h".
	(dummy_frame_unwind): New static variable.
	(dummy_frame_p): New function.
	* legacy-frame.c: Include "frame-unwind.h".
	(legacy_frame_unwind): New static variable.
	(legacy_frame_p): New function.
	* legacy-frame.h (legacy_frame_p): Declare.
	* dummy-frame.h (dummy_frame_p): Declare.

	* Makefile.in (frame_unwind_h): Define.
	* frame-unwind.h: New file.
	* frame-unwind.c: New file.
@
text
@a502 1
	d10v-frame.c \
a509 1
	frame-unwind.c \
d622 1
a622 2
frame_h = frame.h $(frame_unwind_h)
frame_unwind_h = frame-unwind.h
d810 1
a810 1
	charset.o disasm.o dummy-frame.o d10v-frame.o \
d835 1
a835 1
	frame.o doublest.o frame-unwind.o \
a1607 1
d10v-frame.o: d10v-frame.c $(defs_h) $(frame_unwind_h)
d1634 1
a1634 1
	$(frame_h) $(inferior_h) $(gdb_assert_h) $(frame_unwind_h)
a1687 2
frame-unwind.o: frame-unwind.c $(defs_h) $(frame_h) $(frame_unwind_h) \
	$(gdb_assert_h) $(dummy_frame_h) $(legacy_frame_h)
d1838 1
a1838 2
	$(frame_h) $(gdbcore_h) $(regcache_h) $(target_h) $(dummy_frame_h) \
	$(frame_unwind_h)
@


1.311.2.4
log
@Merge branch with mainline:
POP_FRAME_P;
frame-unwind.h.
@
text
@d1691 1
a1691 1
	$(command_h) $(gdbcmd_h)
@


1.310
log
@2003-01-06  Andrew Cagney  <cagney@@redhat.com>

	* x86-64-linux-tdep.c: Include "osabi.h".
	* Makefile.in (x86-64-linux-tdep.o): Update dependencies.
@
text
@d1564 2
a1565 1
charset.o: charset.c $(defs_h) $(charset_h) $(gdbcmd_h) gdb_assert.h
d2500 3
a2502 3
mi-cmd-env.o: $(srcdir)/mi/mi-cmd-env.c $(defs_h) $(mi_cmds_h) $(ui_out_h) \
	$(mi_out_h) $(varobj_h) $(value_h) $(gdb_string_h) $(inferior.h) \
	$(mi_getopt_h) $(environ_h) $(gdbcmd_h) $(top_h)
@


1.309
log
@	* arm-tdep.c (arm_frame_chain_valid):  Remove unnecessary test.
	* d10v-tdep.c (d10v_frame_chain_valid): Remove unnecessary tests.
	* hppa-tdep.c (hppa_frame_chain_valid): Remove unnecessary test.

	* blockframe.c: Include "gdbcmd.h" and "command.h".
	(backtrace_below_main): New variable.
	(file_frame_chain_valid, func_frame_chain_valid)
	(nonnull_frame_chain_valid, generic_file_frame_chain_valid)
	(generic_func_frame_chain_valid): Remove functions.
	(frame_chain_valid, do_flush_frames_sfunc): New functions.
	(_initialize_blockframe): New function.
	* Makefile.in (blockframe.o): Update dependencies.
	* frame.c (frame_saved_regs_id_unwind, get_prev_frame): Remove FIXME
	comment.  Call frame_chain_valid ().
	* frame.h: Remove old prototypes.  Add prototype for
	frame_chain_valid and update comments to match.
	* gdbarch.sh: Change FRAME_CHAIN_VALID into a predicated function.
	Remove old comment.
	* gdbarch.h: Regenerated.
	* gdbarch.c: Regenerated.

Plus updates to all other targets not to provide a FRAME_CHAIN_VALID.
@
text
@d2294 3
a2296 2
x86-64-linux-tdep.o: x86-64-linux-tdep.c $(defs_h) $(inferior_h) \
	$(gdbcore_h) $(regcache_h) $(x86_64_tdep_h) $(dwarf2cfi_h)
@


1.308
log
@	* Makefile.in (acconfig_h): Remove incorrect macro.
	(config_h): Define.
	(osabi.o): Update dependencies.
	* configure.tgt: Set gdb_osabi based on target triplet.
	* configure.in: Define GDB_OSABI_DEFAULT based on gdb_osabi.
	* configure: Regenerated.
	* config.in: Regenerated.
	* osabi.c: Include "arch-utils.h", "gdbcmd.h", and "command.h".
	(GDB_OSABI_DEFAULT): Define if not already defined.
	(user_osabi_state, user_selected_osabi, gdb_osabi_available_names)
	(set_osabi_string): New variables.
	(gdbarch_register_osabi): Add new OS ABI to
	gdb_osabi_available_names.
	(gdbarch_lookup_osabi): Honor specified and default OS ABIs.
	(set_osabi, show_osabi): New functions.
	(_initialize_gdb_osabi): Add "set osabi" and "show osabi" commands.
@
text
@d1540 1
a1540 1
	$(dummy_frame_h)
@


1.307
log
@	* arch-utils.c (gdbarch_info_init): Set osabi to
	GDB_OSABI_UNINITIALIZED.
	* gdbarch.sh: Add osabi to struct gdbarch and to struct
	gdbarch_info.  Include "osabi.h" in gdbarch.c.  Check osabi
	in gdbarch_list_lookup_by_info and in gdbarch_update_p.
	* gdbarch.c: Regenerated.
	* gdbarch.h: Regenerated.
	* osabi.c (gdbarch_lookup_osabi): Return GDB_OSABI_UNINITIALIZED if
	there's no BFD.
	(gdbarch_init_osabi): Remove osabi argument; use info.osabi.
	* osabi.h (enum gdb_osabi): Move to defs.h.
	(gdbarch_init_osabi): Update prototype.
	* defs.h (enum gdb_osabi): Moved here.
	* Makefile.in: Update dependencies.

Plus updates to alpha, arm, hppa, i386, mips, ns32k, ppc, sh, sparc, and vax
ports to match.
@
text
@a583 1
acconfig_h = acconfig.h
d604 1
d1964 2
a1965 1
osabi.o: osabi.c $(defs_h) $(gdb_string_h) $(osabi_h) $(elf_bfd_h)
@


1.306
log
@gdb/
	* buildsym.h (processing_hp_compilation): Remove obsolete variable.
	* gdbarch.sh Remove include of "value.h" in gdbarch.h.
	(COERCE_FLOAT_TO_DOUBLE): Remove.
	* gdbarch.c: Regenerate.
	* gdbarch.h: Regenerate.
	* Makefile.in: Remove value_h from gdbarch_h.
	* valops.c (coerce_float_to_double): New variable.
	(default_coerce_float_to_double): Remove.
	(standard_coerce_float_to_double): Remove.
	(value_arg_coerce): Use coerce_float_to_double.
	(_initialize_valops): Add "set coerce-float-to-double".
	* value.h (default_coerce_float_to_double): Remove prototype.
	(standard_coerce_float_to_double): Remove prototype.

	* hpread.c (hpread_process_one_debug_symbol): Mark C++ functions as
	prototyped.
	* mdebugread.c (parse_symbol): Likewise.
	* stabsread.c (define_symbol): Mark all functions as prototyped.

	* hppa-tdep.c (hppa_coerce_float_to_double): Remove.
	* alpha-tdep.c (alpha_gdbarch_init): Remove call to
	set_gdbarch_coerce_float_to_double.
	* arm-tdep.c (arm_gdbarch_init): Likewise.
	* frv-tdep.c (frv_gdbarch_init): Likewise.
	* h8300-tdep.c (h8300_gdbarch_init): Likewise (commented out).
	* i386-sol2-tdep.c (i386_sol2_init_abi): Likewise.
	* mips-tdep.c (mips_gdbarch_init): Likewise.
	(mips_coerce_float_to_double): Remove.
	* rs6000-tdep.c (rs6000_gdbarch_init): Likewise.
	(rs6000_coerce_float_to_double): Remove.
	* s390-tdep.c (s390_gdbarch_init): Likewise.
	* sh-tdep.c (sh_gdbarch_init): Likewise.
	(sh_coerce_float_to_double): Remove.
	* sparc-tdep.c (sparc_gdbarch_init): Likewise.
	(sparc_coerce_float_to_double): Remove.
	* v850-tdep.c (v850_gdbarch_init): Likewise.
	* xstormy16-tdep.c (xstormy16_gdbarch_init): Likewise.
	* config/m32r/tm-m32r.h (COERCE_FLOAT_TO_DOUBLE): Remove.
	* config/pa/tm-hppa.h: (COERCE_FLOAT_TO_DOUBLE): Remove.
	(hppa_coerce_float_to_double): Remove prototype.
	* config/sparc/tm-sparc.h (COERCE_FLOAT_TO_DOUBLE): Remove.
doc/
	* gdb.texinfo (Controlling GDB): Add ABI section.  Document
	"set coerce-float-to-double".
	* gdbint.texinfo (COERCE_FLOAT_TO_DOUBLE): Remove documentation.
testsuite/
	* gdb.base/callfuncs.exp: Don't XFAIL unprototyped functions for
	stabs.
	* gdb.base/completion.exp: Allow marker1(void) as well as marker1().
	* gdb.base/whatis.exp: Always allow (void) after function names.
@
text
@d586 1
a586 1
alpha_tdep_h = alpha-tdep.h $(osabi_h)
d590 1
a590 1
arm_tdep_h = arm-tdep.h $(osabi_h)
d644 1
a644 1
i386_tdep_h = i386-tdep.h $(osabi_h)
d664 1
a664 1
ns32k_tdep_h = ns32k-tdep.h $(osabi_h)
d672 1
a672 1
ppc_tdep_h = ppc-tdep.h $(osabi_h)
d683 1
a683 1
sh_tdep_h = sh-tdep.h $(osabi_h)
d706 1
a706 1
vax_tdep_h = vax-tdep.h $(osabi_h)
d1489 1
a1489 1
	$(value_h) $(alpha_tdep_h)
d1493 1
a1493 1
	$(value_h) $(alpha_tdep_h)
d1497 2
a1498 1
	$(doublest_h) $(arch_utils_h) $(elf_bfd_h) $(alpha_tdep_h)
d1503 2
a1504 1
alphafbsd-tdep.o: alphafbsd-tdep.c $(defs_h) $(value_h) $(alpha_tdep_h)
d1507 1
a1507 1
	$(alphabsd_tdep_h) $(nbsd_tdep_h)
d1519 2
a1520 1
	$(doublest_h) $(arm_tdep_h) $(symtab_h) $(symfile_h) $(objfiles_h)
d1525 1
a1525 1
	$(elf_arm_h) $(gdb_assert_h) $(bfd_in2_h) $(libcoff_h)
d1529 1
a1529 1
	$(solib_svr4_h)
d1692 2
a1693 1
	$(gdb_assert_h) $(gdb_string_h) $(gdb_events_h) $(reggroups_h)
d1742 2
a1743 1
	$(objfiles_h) $(solib_svr4_h) $(i386_tdep_h) $(i386_linux_tdep_h)
d1745 2
a1746 1
i386-sol2-tdep.o: i386-sol2-tdep.c $(defs_h) $(value_h) $(i386_tdep_h)
d1752 1
a1752 1
	$(i387_tdep_h)
d1755 2
a1756 1
	$(gdb_assert_h) $(gregset_h) $(i386_tdep_h) $(i387_tdep_h)
d1763 1
a1763 1
i386gnu-tdep.o: i386gnu-tdep.c $(defs_h) $(i386_tdep_h)
d1765 1
a1765 1
	$(regcache_h) $(target_h) $(i386_tdep_h)
d1768 1
a1768 1
	$(nbsd_tdep_h) $(solib_svr4_h)
d1771 1
a1771 1
	$(regcache_h) $(i386_tdep_h) $(i387_tdep_h)
d1946 1
a1946 1
	$(ns32k_tdep_h) $(gdb_string_h)
d1949 2
a1950 1
ns32knbsd-tdep.o: ns32knbsd-tdep.c $(defs_h) $(ns32k_tdep_h) $(gdb_string_h)
d1991 2
a1992 1
	$(objfiles_h) $(regcache_h) $(value_h) $(solib_svr4_h) $(ppc_tdep_h)
d2001 1
a2001 1
	$(ppcnbsd_tdep_h) $(nbsd_tdep_h) $(solib_svr4_h)
d2096 1
a2096 1
	$(ppc_tdep_h)
d2124 1
a2124 1
	$(solib_svr4_h) $(elf_sh_h) $(gdb_sim_sh_h)
d2130 1
a2130 1
	$(solib_svr4_h) $(nbsd_tdep_h) $(sh_tdep_h) $(shnbsd_tdep_h)
d2278 1
a2278 1
	$(gdb_string_h) $(vax_tdep_h)
@


1.305
log
@* configure.in: Remove code dealing with shared libraries.
* Makefile.in: Remove HLDFLAGS and HLDENV.
* configure: Regenerated.
@
text
@d636 1
a636 1
gdbarch_h = gdbarch.h $(dis_asm_h) $(value_h) $(inferior_h)
@


1.304
log
@* configure.in: Remove all use of the SUBDIRS variable; add
directories using the AC_CONFIG_SUBDIRS macro instead.  Polish
code providing the --enable-multi-ice option, and move it right in
front of the code that checks whether gdbserver is supported.
Polish that too.
* configure: Regenerated.
* Makefile.in (SUBDIRS): Substitute @@subdirs@@ instead of
@@SUBDIRS@@.
@
text
@d2 1
a2 1
# 1999, 2000, 2001, 2002 Free Software Foundation, Inc.
d348 1
a348 2
INTERNAL_LDFLAGS = $(CFLAGS) $(GLOBAL_CFLAGS) $(PROFILE_CFLAGS) $(MH_LDFLAGS) $(LDFLAGS) $(CONFIG_LDFLAGS) @@HLDFLAGS@@
HLDENV = @@HLDENV@@
d989 1
a989 1
	$(HLDENV) $(CC_LD) $(INTERNAL_LDFLAGS) $(WIN32LDAPP) \
d2390 1
a2390 1
	$(HLDENV) $(CC_LD) $(INTERNAL_LDFLAGS) $(WIN32LDAPP) \
@


1.303
log
@* cli/cli-decode.h: Don't include "gdb_regex.h"; provide a forward
declaration for `struct re_pattern_buffer' instead.
* Makefile.in (cli_decode_h): Remove $(gdb_regex_h).
@
text
@d841 1
a841 1
SUBDIRS = @@SUBDIRS@@
@


1.302
log
@* configure.in: Remove UI_OUT configuration code.
* ada-lang.c: Update assuming UI_OUT is always true.
* Makefile.in (UIOUT_CFLAGS): Remove.
* configure: Regenerated.
* TODO: Remove blurb about elimination of -DUI_OUT.
@
text
@d720 1
a720 1
cli_decode_h = $(srcdir)/cli/cli-decode.h $(gdb_regex_h) $(command_h)
@


1.301
log
@* configure.in: Move code that provides the --enable-tui option
before the "Checks for libraries" section.  Polish the code
somewhat and set need_curses to yes if we build the TUI.  Rewrite
code that looks for a library providing termcap functionality to
match more closely what's done in the Readline library, and move
it into to the "Checks for libraries" section.
* configure: Regenerated.
* Makefile.in (TERMCAP): Remove variable.
* config/i386/go32.mh (TERMCAP): Remove variable.
@
text
@a111 3
# Configured by the --with-uiout option to configure.
UIOUT_CFLAGS = @@UIOUT_CFLAGS@@

d337 1
a337 1
	$(INTL_CFLAGS) $(ENABLE_CFLAGS) $(UIOUT_CFLAGS) \
@


1.300
log
@2003-01-02  Andrew Cagney  <ac131313@@redhat.com>

	* valarith.c (value_binop): Delete obsolete code and comments.
	* configure.host: Ditto.
	* buildsym.h (make_blockvector): Ditto.
	* buildsym.c (make_blockvector): Ditto.
	* defs.h (enum language): Ditto.
	(chill_demangle): Ditto.
	* elfread.c (elf_symtab_read): Ditto.
	* dwarfread.c (CHILL_PRODUCER): Ditto.
	(set_cu_language): Ditto.
	(handle_producer): Ditto.
	* expprint.c (print_subexp): Ditto.
	* gdbtypes.c (chill_varying_type): Ditto.
	* gdbtypes.h (builtin_type_chill_bool): Ditto.
	(builtin_type_chill_char, builtin_type_chill_long): Ditto.
	(builtin_type_chill_ulong, builtin_type_chill_real): Ditto.
	(chill_varying_type): Ditto.
	* language.h (_LANG_chill): Ditto.
	* language.c (binop_result_type, integral_type): Ditto.
	(character_type, string_type, structured_type): Ditto.
	(lang_bool_type, binop_type_check): Ditto.
	* stabsread.h (os9k_stabs): Ditto.
	* stabsread.c (os9k_type_vector, dbx_lookup_type): Ditto.
	(define_symbol, read_type, read_struct_fields): Ditto.
	(read_array_type, read_enum_type, read_huge_number): Ditto.
	(read_range_type, start_stabs): Ditto.
	* symfile.c (init_filename_language_table): Ditto.
	(add_psymbol_with_dem_name_to_list): Ditto.
	* symtab.c (symbol_init_language_specific): Ditto.
	(symbol_init_demangled_name, symbol_demangled_name): Ditto.
	* symtab.h (struct general_symbol_info): Ditto.
	(SYMBOL_CHILL_DEMANGLED_NAME): Ditto.
	* typeprint.c (typedef_print): Ditto.
	* utils.c (fprintf_symbol_filtered): Ditto.
	* valops.c (value_cast, search_struct_field, value_slice): Delete
	obsolete code.
	(varying_to_slice): Delete function.
	* value.h (COERCE_VARYING_ARRAY): Delete obsolete macro contents.
	(varying_to_slice): Delete declaration.
	* MAINTAINERS: Update.
@
text
@a66 4
# Flags that describe where you can find the termcap library.
# This can be overridden in the host Makefile fragment file.
TERMCAP = @@TERM_LIB@@

a358 1
# TERMCAP comes after readline, since readline depends on it.
d364 1
a364 1
	$(TERMCAP) $(XM_CLIBS) $(TM_CLIBS) $(NAT_CLIBS) $(GDBTKLIBS) @@LIBS@@ \
d367 1
a367 1
	$(TERMCAP) $(XM_CLIBS) $(TM_CLIBS) $(NAT_CLIBS) $(GDBTKLIBS) @@LIBS@@ \
@


1.299
log
@       Continuing work to convert the hppa targets to multiarch partial.

       * hppa-tdep.c: (hppa_register_raw_size): New function replacing
       the body of macro REGISTER_RAW_SIZE.
       * hppa-hpux-tdep.c: Add new functions replacing macro bodies from
       config/pa/tm-hppah.h. These functions will be used to initialize
       the gdbarch structure.
       (hppa_hpux_pc_in_sigtramp): New function.
       (hppa_hpux_frame_saved_pc_in_sigtramp): New function.
       (hppa_hpux_frame_base_before_sigtramp): New function.
       (hppa_hpux_frame_find_saved_regs_in_sigtramp): New function.
       Add gdbcore.h #include.
       * config/pa/tm-hppa.h (REGISTER_RAW_SIZE): Change the definition
       of this gdbarch-eligible macro to a call to the new associated
       function.
       * config/pa/tm-hppah.h (PC_IN_SIGTRAMP): Likewise.
       (FRAME_SAVED_PC_IN_SIGTRAMP): Change the definition of this macro
       into a call to the new associated function.
       (FRAME_BASE_BEFORE_SIGTRAMP): Likewise.
       (FRAME_FIND_SAVED_REGS_IN_SIGTRAMP): Likewise.
       * Makefile.in (hppa-hpux-tdep.o): Add dependency on gdbcore.h.
@
text
@a484 20
# OBSOLETE CHILLFLAGS = $(CFLAGS)
# OBSOLETE CHILL = gcc
# OBSOLETE CHILL_FOR_TARGET = ` \
# OBSOLETE   if [ -f $${rootme}/../gcc/Makefile ] ; then \
# OBSOLETE     echo $${rootme}/../gcc/xgcc -B$${rootme}/../gcc/ -L$${rootme}/../gcc/ch/runtime/; \
# OBSOLETE   else \
# OBSOLETE     if [ "$(host_canonical)" = "$(target_canonical)" ] ; then \
# OBSOLETE       echo $(CC); \
# OBSOLETE     else \
# OBSOLETE       t='$(program_transform_name)'; echo gcc | sed -e '' $$t; \
# OBSOLETE     fi; \
# OBSOLETE   fi`
# OBSOLETE CHILL_LIB = ` \
# OBSOLETE   if [ -f $${rootme}/../gcc/ch/runtime/libchill.a ] ; then \
# OBSOLETE     echo $${rootme}/../gcc/ch/runtime/chillrt0.o \
# OBSOLETE       $${rootme}/../gcc/ch/runtime/libchill.a; \
# OBSOLETE   else \
# OBSOLETE       echo -lchill; \
# OBSOLETE   fi`

a1342 5
## This is ugly, but I don't want GNU make to put these variables in
## the environment.  Older makes will see this as a set of targets
## with no dependencies and no actions.
# OBSOLETE unexport CHILLFLAGS CHILL_LIB CHILL_FOR_TARGET :

a1516 1
# OBSOLETE arc-tdep.o: arc-tdep.c
a1569 4
# OBSOLETE ch-exp.o: ch-exp.c
# OBSOLETE ch-lang.o: ch-lang.c
# OBSOLETE ch-typeprint.o: ch-typeprint.c
# OBSOLETE ch-valprint.o: ch-valprint.c
a1608 1
# OBSOLETE cxux-nat.o: cxux-nat.c
a1613 1
# OBSOLETE d30v-tdep.o: d30v-tdep.c
a1633 1
# OBSOLETE dstread.o: dstread.c
a1683 1
# OBSOLETE fr30-tdep.o: fr30-tdep.c
a1755 1
# OBSOLETE i386aix-nat.o: i386aix-nat.c
a1767 2
# OBSOLETE i386m3-nat.o: i386m3-nat.c
# OBSOLETE i386mach-nat.o: i386mach-nat.c
a1780 1
# OBSOLETE i960-tdep.o: i960-tdep.c
a1874 2
# OBSOLETE m88k-nat.o: m88k-nat.c
# OBSOLETE m88k-tdep.o: m88k-tdep.c
a1964 1
# OBSOLETE os9kread.o: os9kread.c
a2025 1
# OBSOLETE remote-bug.o: remote-bug.c
a2038 3
# OBSOLETE remote-nindy.o: remote-nindy.c
# OBSOLETE remote-nrom.o: remote-nrom.c
# OBSOLETE remote-os9k.o: remote-os9k.c
a2069 1
# OBSOLETE remote-vx960.o: remote-vx960.c
@


1.298
log
@Add GNU/Linux specific support for the n32 and n64 MIPS ABIs.
@
text
@d1763 2
a1764 1
hppa-hpux-tdep.o: hppa-hpux-tdep.c $(defs_h) $(arch_utils_h) $(osabi_h)
@


1.297
log
@Multiarch SVR4_FETCH_LINK_MAP_OFFSETS and GET_LONGJMP_TARGET for GNU/Linux/MIPS.
@
text
@d1949 2
a1950 1
	$(solib_svr4_h) $(osabi_h) $(gdb_string_h)
@


1.297.2.1
log
@* symfile.c: #include "gdb_assert.h".
(syms_from_objfile): Add the ability to pass in a section offset
table directly, as an alternative to the section_addr_info table.
Document arguments better.
(symbol_file_add): Pass extra arguments to syms_from_objfile.
* symfile.h (syms_from_objfile): Update declaration.
* rs6000-nat.c (objfile_symbol_add): Pass new arguments to
syms_from_objfile.
* Makefile.in (symfile.o): List dependency on $(gdb_assert_h).
@
text
@d2250 1
a2250 1
	$(gdb_assert_h) $(readline_h)
@


1.296
log
@        * hppa-hpux-tdep.c: New file.
        * hppa-tdep.c (hppa_gdbarch_init): call the registered osabi-
        specific initialization routines.
        * Makefile.in (ALLDEPFILES): Add hppa-hpux-tdep.c.
        (hppa-hpux-tdep.o): Add rule.
        * config/pa/hppahpux.mt (TDEPFILES): Add hppa-hpux-tdep.o.
        * config/pa/hppa64.mt (TDEPFILES): Likewise.
@
text
@d1949 1
a1949 1
	$(solib_svr4_h)
@


1.295
log
@
2002-12-13  Jeff Johnston  <jjohnstn@@redhat.com>

        * defs.h (init_last_source_visited): New prototype.
        (add_path): Ditto.
        * source.c (add_path): New function that adds to a specified path.
        (mod_path): Change to call add_path.
        (init_last_source_visited): New function to allow interfaces to
        initialize static variable: last_source_visited.  Part of fix
        for PR gdb/741.
        * Makefile.in: Add support for mi/mi-cmd-env.c.
@
text
@d1380 2
a1381 1
	hp300ux-nat.c hppa-tdep.c hppab-nat.c hppah-nat.c hpread.c \
d1763 1
@


1.294
log
@2002-12-08  Elena Zannoni  <ezannoni@@redhat.com>

	* Makefile.in (readline_h): Define.
	(completer.o): Depend on readline_h.
	(corelow.o): Ditto.
	(event-top.o): Ditto.
	(exec.o): Ditto.
	(solib.o): Ditto.
	(source.o): Ditto.
	(symfile.o): Ditto.
	(symmisc.o): Ditto.
	(top.o): Ditto.
	(tracepoint.o): Ditto.
	(utils.o): Ditto.
	(cli-dump.o): Ditto.
	(tui-hooks.o): Ditto.
	(tuiWin.o): Ditto.
@
text
@d171 1
a171 1
	mi-cmds.o mi-cmd-var.o mi-cmd-break.o mi-cmd-stack.o \
d176 1
a176 1
	mi/mi-cmds.c \
d2539 4
@


1.293
log
@2002-12-06  Elena Zannoni  <ezannoni@@redhat.com>

        * Makefile.in (thread-db.o): Add explicit rule to ignore the use of
        -Werror on this file.
@
text
@d592 1
d1612 1
a1612 1
	$(filenames_h) $(cli_decode_h) $(gdbcmd_h) $(completer_h)
d1625 1
a1625 1
	$(gdbthread_h) $(regcache_h) $(symfile_h)
d1691 1
a1691 1
	$(terminal_h) $(event_loop_h) $(event_top_h) $(gdbcmd_h)
d1694 2
a1695 1
	$(gdb_string_h) $(gdbcore_h) $(gdb_stat_h) $(xcoffsolib_h)
d2194 1
a2194 1
	$(completer_h) $(filenames_h) $(solist_h)
d2206 1
a2206 1
	$(filenames_h) $(completer_h) $(ui_out_h)
d2247 2
a2248 1
	$(completer_h) $(bcache_h) $(gdb_string_h) $(gdb_stat_h) $(source_h)
d2255 2
a2256 1
	$(gdb_obstack_h) $(language_h) $(bcache_h) $(gdb_string_h)
d2278 1
a2278 1
	$(ui_out_h) $(cli_out_h)
d2283 1
a2283 1
	$(ax_gdb_h)
d2293 1
a2293 1
	$(filenames_h) $(inferior_h) $(mmalloc_h) $(charset_h)
d2372 1
a2372 1
	$(cli_dump_h) $(gdb_assert_h) $(target_h)
d2622 1
a2622 1
	$(tuiSourceWin_h)
d2680 2
a2681 1
	$(tuiDisassem_h) $(tuiSource_h) $(tuiSourceWin_h) $(tuiDataWin_h)
@


1.292
log
@2002-12-06  Elena Zannoni  <ezannoni@@redhat.com>

	* ia64-linux-nat.c: Include gdb_string.h.
	* alpha-nat.c: Ditto.
	* ppc-linux-nat.c: Ditto.
	* Makefile.in (ia64-linux-nat.o, alpha-nat.o, ppc-linux-nat.o):
	Update dependencies.
@
text
@d1443 6
@


1.291
log
@2002-12-05  Andrew Cagney  <ac131313@@redhat.com>

	* gdbthread.h: Include "frame.h".
	(struct thread_info): Replace step_frame_address with
	step_frame_id.
	* inferior.h: Include "frame.h".
	(step_frame_id): Replace external variable step_frame_address.
	* gdbthread.h (save_infrun_state): Replace step_frame_address
	parameter with step_frame_id parameter.
	(load_infrun_state): Ditto.
	* Makefile.in (gdbthread_h, inferior_h): Add $(frame_h).
	* infcmd.c (step_frame_id, step_1, step_once): Update.
	* thread.c (load_infrun_state, save_infrun_state): Update.
	* infrun.c (clear_proceed_status, save_inferior_status): Update.
	(handle_inferior_event, step_over_function): Update.
	(normal_stop, context_switch, restore_inferior_status): Update.
	(struct inferior_status): Replace step_frame_address with
	step_frame_id.
@
text
@d1517 1
a1517 1
	$(regcache_h) $(alpha_tdep_h) $(gregset_h)
d1813 1
a1813 1
	$(gdbcore_h) $(regcache_h) $(gregset_h)
d2018 1
a2018 1
	$(gdbcore_h) $(regcache_h) $(gregset_h) $(ppc_tdep_h)
@


1.290
log
@Create new file mips-tdep.h.
@
text
@d667 1
a667 1
gdbthread_h = gdbthread.h $(breakpoint_h)
d675 1
a675 1
inferior_h = inferior.h $(breakpoint_h) $(target_h)
@


1.289
log
@2002-12-04  David Carlton  <carlton@@math.stanford.edu>

	* Makefile.in (f-exp.tab.c): Don't depend on c-exp.tab.c.
@
text
@d688 1
d1944 2
a1945 2
	$(regcache_h) $(osabi_h) $(opcode_mips_h) $(elf_mips_h) $(elf_bfd_h) \
	$(symcat_h)
@


1.288
log
@       * hppa-tdep.c: Add #include "osabi.h" (for hppa_gdbarch_init).
       (hppa_gdbarch_init): Detect osabi from objfile. Will be needed
       later to set the proper gdbarch methods depending on the osabi.
       * Makefile.in (hppa-tdep.o): Add dependency on osabi.h.
@
text
@d1267 1
a1267 1
f-exp.tab.c: f-exp.y c-exp.tab.c
@


1.287
log
@2002-11-29  Andrew Cagney  <ac131313@@redhat.com>

	* stack.c (selected_frame, select_frame): Move from here ...
	* frame.c (selected_frame, select_frame): ... to here.  Include
	"language.h".
	* Makefile.in (frame.o): Update dependencies.
	* frame.c (get_selected_frame): New function.
	* frame.h (get_selected_frame): Declare.
	(deprecated_selected_frame): Rename selected_frame.
	* ada-lang.c, ada-tasks.c, breakpoint.c, corelow.c: Update.
	* eval.c, f-valprint.c, findvar.c, frame.c, frame.h: Update.
	* h8300-tdep.c, h8500-tdep.c, hppa-tdep.c, infcmd.c: Update.
	* inflow.c, infrun.c, macroscope.c, mips-tdep.c: Update.
	* mn10300-tdep.c, ocd.c, regcache.h, remote-e7000.c: Update.
	* remote-mips.c, remote-rdp.c, sh-tdep.c, sparc-tdep.c: Update.
	* stack.c, thread.c, tracepoint.c, valops.c, varobj.c: Update.
	* z8k-tdep.c, cli/cli-cmds.c: Update.

Index: mi/ChangeLog
2002-11-29  Andrew Cagney  <ac131313@@redhat.com>

	* mi/mi-cmd-stack.c, mi/mi-main.c: Update to use
	deprecated_selected_frame.

Index: tui/ChangeLog
2002-11-29  Andrew Cagney  <ac131313@@redhat.com>

	* tui/tui-hooks.c: Update to use deprecated_selected_frame.
	* tui/tui.c, tui/tuiDisassem.c, tui/tuiRegs.c: Ditto.
	* tui/tuiSource.c, tui/tuiSourceWin.c, tui/tuiWin.c: Ditto.
@
text
@d1752 1
a1752 1
	$(symfile_h) $(objfiles_h) $(language_h)
@


1.286
log
@2002-11-26  Martin M. Hunt  <hunt@@redhat.com>

	* Makefile.in: Remove Tix dependencies.
	* acinclude.m4: Ditto.
	* aclocal.m4: Ditto.
	* configure.in: Ditto.
	* configure: Regenerated.
@
text
@d1709 3
a1711 2
	$(regcache_h) $(gdb_assert_h) $(gdb_obstack_h) $(dummy_frame_h) \
	$(gdbcore_h) $(annotate_h)
@


1.285
log
@2002-11-23  Andrew Cagney  <ac131313@@redhat.com>

	* breakpoint.c: Include "gdb_assert.h".
	(deprecated_frame_in_dummy): Assert that generic dummy frames are
	not being used.
	* Makefile.in (breakpoint.o): Update dependencies.
	* ada-lang.c (find_printable_frame): Use get_frame_type instead of
	deprecated_frame_in_dummy.
	* stack.c (print_frame_info_base): Ditto.
	(frame_info): Ditto.
	(print_frame_info_base): Ditto.  Delete dead code.

Index: tui/ChangeLog
2002-11-23  Andrew Cagney  <ac131313@@redhat.com>

	* tuiStack.c (tuiShowFrameInfo): Use get_frame_type instead of
	deprecated_frame_in_dummy.  Fix coding style.
@
text
@a263 5
# Where is Tix?  Typically in ../tix.
TIX_CFLAGS = @@TIXHDIR@@
TIX = @@TIXLIB@@
TIX_DEPS = @@TIX_DEPS@@

d293 1
a293 1
	$(LIBGUI) $(ITCL_DEPS) $(ITK_DEPS) $(TIX_DEPS) $(TK_DEPS) $(TCL_DEPS)
d1444 1
a1444 1
		$(TIX_CFLAGS) $(TCL_CFLAGS) $(TK_CFLAGS) $(X11_CFLAGS) \
d2442 1
a2442 1
        $(ITK_CFLAGS) $(TIX_CFLAGS) \
d2453 1
a2453 1
	$(TIX_CFLAGS) $(TCL_CFLAGS) $(TK_CFLAGS) $(X11_CFLAGS)   \
d2463 1
a2463 1
	$(TIX_CFLAGS) $(TCL_CFLAGS) $(TK_CFLAGS) $(X11_CFLAGS)		\
d2472 1
a2472 1
	$(CC) -c $(INTERNAL_CFLAGS) $(IDE_CFLAGS) $(ITCL_CFLAGS) $(TIX_CFLAGS) \
d2478 1
a2478 1
	$(CC) -c $(INTERNAL_CFLAGS) $(IDE_CFLAGS) $(ITCL_CFLAGS) $(TIX_CFLAGS) \
d2487 1
a2487 1
	$(TIX_CFLAGS) $(TCL_CFLAGS) $(TK_CFLAGS) $(X11_CFLAGS)   \
d2497 1
a2497 1
	$(TIX_CFLAGS) $(TCL_CFLAGS) $(TK_CFLAGS) $(X11_CFLAGS)   \
d2504 1
a2504 1
	$(CC) -c $(INTERNAL_CFLAGS) $(IDE_CFLAGS) $(ITCL_CFLAGS) $(TIX_CFLAGS) \
@


1.284
log
@	* Makefile.in (m68k_tdep_h): Define.
	(abug-rom.o, cpu32bug-rom.o, dbug-rom.o, m68k-tdep.o, m68klinux-nat.o)
	(remote-est.o, rom68k-rom.o): Add $(m68k_tdep_h).
	* m68k-tdep.c: Move register number enum ...
	* m68k-tdep.h: ... to this new file and rename the constants from
	E_* to M68K_*.  All uses changed.
	* config/m68k/tm-m68k.h (D0_REGNUM, A0_REGNUM): Remove definitions.
	* abug-rom.c: Include "m68k-tdep.h".  Use
	M68K_D0_REGNUM/M68K_A0_REGNUM instead of D0_REGNUM/A0_REGNUM.
	* cpu32bug-rom.c: Likewise.
	* dbug-rom.c: Likewise.
	* m68k-tdep.c: Likewise.
	* m68klinux-nat.c: Likewise.
	* remote-est.c: Likewise.
	* rom68k-rom.c: Likewise.
	* config/m68k/tm-linux.h: Likewise.
@
text
@d1574 1
a1574 1
	$(cli_script_h) $(gdb_events_h) $(source_h)
@


1.283
log
@	* m68klinux-nat.c (IS_SIGTRAMP, IS_RT_SIGTRAMP)
	(m68k_linux_in_sigtramp, SIGCONTEXT_PC_OFFSET)
	(UCONTEXT_PC_OFFSET, m68k_linux_sigtramp_saved_pc)
	(m68k_linux_frame_saved_pc): Move to ...
	* m68klinux-tdep.c: ... here.  New file.
	* Makefile.in (m68klinux-tdep.o): Add dependencies.
	* config/m68k/linux.mt (TDEPFILES): Add m68klinux-tdep.o.
@
text
@d686 1
d1500 1
a1500 1
	$(serial_h) $(regcache_h)
d1630 1
a1630 1
	$(monitor_h) $(serial_h) $(regcache_h)
d1643 1
a1643 1
	$(serial_h) $(regcache_h)
d1896 1
a1896 1
	$(arch_utils_h) $(gregset_h)
d1899 1
a1899 1
	$(floatformat_h) $(target_h) $(gregset_h)
d2066 1
a2066 1
	$(serial_h) $(regcache_h)
d2123 1
a2123 1
	$(serial_h) $(regcache_h) $(value_h)
@


1.282
log
@* Makefile.in (SFILES): Add objc-exp.y objc-lang.c.
(objc_lang_h): Define.
(YYFILES): Add objc-exp.tab.c.
(local-maintainer-clean): Remove objc-exp.tab.c.
(objc-exp.tab.c, objc-exp.tab.o, objc-lang.o): New target.
@
text
@d1899 2
@


1.281
log
@* expprint.c (print_subexp): Handle OP_OBJC_NSSTRING,
OP_OBJC_MSGCALL, and OP_OBJC_SELF.
(op_name): Handle OP_OBJC_SELF.
* Makefile.in (expprint.o): Add additional depends.
@
text
@d554 1
d696 1
d875 1
d1141 1
d1237 16
d1468 4
d1980 5
@


1.280
log
@2002-11-18   Klee Dienes  <kdienes@@apple.com>

        * Makefile.in (buildsym.o): Add dependency for gdb_assert.h.
@
text
@d1668 1
a1668 1
	$(value_h) $(language_h) $(parser_defs_h)
@


1.279
log
@2002-11-08  Andrew Cagney  <ac131313@@redhat.com>

	* Makefile.in (DESTDIR): Define.
	(install-only, install-gdbtk, uninstall-gdbtk): Add $(DESTDIR)
	prefix.
@
text
@d1551 3
a1553 3
	$(symfile_h) $(objfiles_h) $(gdbtypes_h) $(complaints_h) \
	$(gdb_string_h) $(expression_h) $(language_h) $(bcache_h) \
	$(filenames_h) $(macrotab_h) $(demangle_h) $(buildsym_h) \
@


1.279.2.1
log
@* symfile.c: #include "gdb_assert.h".
(syms_from_objfile): Add the ability to pass in a section offset
table directly, as an alternative to the section_addr_info table.
Document arguments better.
(symbol_file_add): Pass extra arguments to syms_from_objfile.
* symfile.h (syms_from_objfile): Update declaration.
* rs6000-nat.c (objfile_symbol_add): Pass new arguments to
syms_from_objfile.
* Makefile.in (symfile.o): List dependency on $(gdb_assert_h).
@
text
@d2210 1
a2210 2
	$(completer_h) $(bcache_h) $(gdb_string_h) $(gdb_stat_h) $(source_h) \
	$(gdb_assert_h)
@


1.279.2.2
log
@Merge changes from trunk.
@
text
@d171 1
a171 1
	mi-cmds.o mi-cmd-env.o mi-cmd-var.o mi-cmd-break.o mi-cmd-stack.o \
d176 1
a176 1
	mi/mi-cmds.c mi/mi-cmd-env.c \
d264 5
d298 1
a298 1
	$(LIBGUI) $(ITCL_DEPS) $(ITK_DEPS) $(TK_DEPS) $(TCL_DEPS)
a553 1
	objc-exp.y objc-lang.c \
a595 1
readline_h = 	$(READLINE_SRC)/readline.h
d671 1
a671 1
gdbthread_h = gdbthread.h $(breakpoint_h) $(frame_h)
d679 1
a679 1
inferior_h = inferior.h $(breakpoint_h) $(target_h) $(frame_h)
a684 1
m68k_tdep_h = m68k-tdep.h
a690 1
mips_tdep_h = mips-tdep.h
a694 1
objc_lang_h = objc-lang.h
a872 1
	objc-exp.tab.c \
a1137 1
	        objc-exp.tab.c \
a1232 16
.PRECIOUS: objc-exp.tab.c
objc-exp.tab.o: objc-exp.tab.c
objc-exp.tab.c: objc-exp.y
	$(SHELL) $(YLWRAP) "$(YACC)" $(srcdir)/objc-exp.y y.tab.c objc-exp.tmp -- $(YFLAGS) 
	-sed -e '/extern.*malloc/d' \
	     -e '/extern.*realloc/d' \
	     -e '/extern.*free/d' \
	     -e '/include.*malloc.h/d' \
	     -e 's/malloc/xmalloc/g' \
	     -e 's/realloc/xrealloc/g' \
	     -e '/^#line.*y.tab.c/d' \
	  < objc-exp.tmp > objc-exp.new
	-rm objc-exp.tmp
	mv objc-exp.new ./objc-exp.tab.c

# See comments above ...
d1251 1
a1251 1
f-exp.tab.c: f-exp.y
d1362 1
a1362 2
	hp300ux-nat.c hppa-tdep.c hppa-hpux-tdep.c \
	hppab-nat.c hppah-nat.c hpread.c \
a1425 6
# FIXME: Thread-db.o gets warnings because the definitions of the register
# sets are different from kernel to kernel.
thread-db.o: $(srcdir)/thread-db.c
	$(CC) -c $(INTERNAL_WARN_CFLAGS) $(NO_WERROR_CFLAGS) \
		$(srcdir)/thread-db.c

d1428 1
a1428 1
		$(TCL_CFLAGS) $(TK_CFLAGS) $(X11_CFLAGS) \
a1447 4
objc-exp.tab.o: objc-exp.tab.c $(objc_lang_h) $(defs_h) $(expression_h) \
	$(gdbtypes_h) $(language_h) $(parser_defs_h) $(symtab_h) $(value_h) \
	$(bfd_h) $(objfiles_h) $(symfile_h)

d1475 1
a1475 1
	$(serial_h) $(regcache_h) $(m68k_tdep_h)
d1496 1
a1496 1
	$(regcache_h) $(alpha_tdep_h) $(gregset_h) $(gdb_string_h)
d1549 1
a1549 1
	$(cli_script_h) $(gdb_events_h) $(source_h) $(gdb_assert_h)
d1551 3
a1553 3
	$(symfile_h) $(objfiles_h) $(gdbtypes_h) $(gdb_assert_h) \
	$(complaints_h)	$(gdb_string_h) $(expression_h) $(language_h) \
	$(bcache_h) $(filenames_h) $(macrotab_h) $(demangle_h) $(buildsym_h) \
d1584 1
a1584 1
	$(filenames_h) $(cli_decode_h) $(gdbcmd_h) $(completer_h) $(readline_h)
d1597 1
a1597 1
	$(gdbthread_h) $(regcache_h) $(symfile_h) $(readline_h)
d1605 1
a1605 1
	$(monitor_h) $(serial_h) $(regcache_h) $(m68k_tdep_h)
d1618 1
a1618 1
	$(serial_h) $(regcache_h) $(m68k_tdep_h)
d1663 1
a1663 1
	$(terminal_h) $(event_loop_h) $(event_top_h) $(gdbcmd_h) $(readline_h)
d1666 1
a1666 2
	$(gdb_string_h) $(gdbcore_h) $(gdb_stat_h) $(xcoffsolib_h) \
	$(readline_h)
d1668 1
a1668 1
	$(value_h) $(language_h) $(parser_defs_h) $(target_h) $(gdb_string_h)
d1689 2
a1690 3
	$(regcache_h) $(gdb_assert_h) $(gdb_string_h) $(builtin_regs_h) \
	$(gdb_obstack_h) $(dummy_frame_h) $(gdbcore_h) $(annotate_h) \
	$(language_h)
d1731 1
a1731 2
	$(symfile_h) $(objfiles_h) $(language_h) $(osabi_h)
hppa-hpux-tdep.o: hppa-hpux-tdep.c $(defs_h) $(arch_utils_h) $(osabi_h)
d1791 1
a1791 1
	$(gdbcore_h) $(regcache_h) $(gregset_h) $(gdb_string_h)
d1871 1
a1871 1
	$(arch_utils_h) $(gregset_h) $(m68k_tdep_h)
d1874 1
a1874 3
	$(floatformat_h) $(target_h) $(gregset_h) $(m68k_tdep_h)
m68klinux-tdep.o: m68klinux-tdep.c $(defs_h) $(gdbcore_h) $(frame_h) \
	$(target_h)
d1915 1
a1915 1
	$(solib_svr4_h) $(osabi_h) $(gdb_string_h)
d1920 2
a1921 2
	$(regcache_h) $(osabi_h) $(mips_tdep_h) $(opcode_mips_h) \
	$(elf_mips_h) $(elf_bfd_h) $(symcat_h)
a1955 5
objc-lang.o: objc-lang.c $(defs_h) $(symtab_h) $(gdbtypes_h) $(expression_h) \
	$(parser_defs_h) $(language_h) $(c_lang_h) $(objc_lang_h) \
	$(complaints_h) $(value_h) $(symfile_h) $(objfiles_h) \
	$(gdb_string_h) $(target_h) $(gdbcore_h) $(gdbcmd_h) $(frame_h) \
	$(gdb_regex_h) $(regcache_h)
d1989 1
a1989 1
	$(gdbcore_h) $(regcache_h) $(gregset_h) $(ppc_tdep_h) $(gdb_string_h)
d2034 1
a2034 1
	$(serial_h) $(regcache_h) $(m68k_tdep_h)
d2091 1
a2091 1
	$(serial_h) $(regcache_h) $(value_h) $(m68k_tdep_h)
d2157 1
a2157 1
	$(completer_h) $(filenames_h) $(solist_h) $(readline_h)
d2169 1
a2169 1
	$(filenames_h) $(completer_h) $(ui_out_h) $(readline_h)
d2211 1
a2211 1
	$(gdb_assert_h) $(readline_h)
d2218 1
a2218 2
	$(gdb_obstack_h) $(language_h) $(bcache_h) $(gdb_string_h) \
	$(readline_h)
d2240 1
a2240 1
	$(ui_out_h) $(cli_out_h) $(readline_h)
d2245 1
a2245 1
	$(ax_gdb_h) $(readline_h)
d2255 1
a2255 1
	$(filenames_h) $(inferior_h) $(mmalloc_h) $(charset_h) $(readline_h)
d2334 1
a2334 1
	$(cli_dump_h) $(gdb_assert_h) $(target_h) $(readline_h)
d2416 1
a2416 1
        $(ITK_CFLAGS)  \
d2427 1
a2427 1
	 $(TCL_CFLAGS) $(TK_CFLAGS) $(X11_CFLAGS)   \
d2437 1
a2437 1
	 $(TCL_CFLAGS) $(TK_CFLAGS) $(X11_CFLAGS)		\
d2446 1
a2446 1
	$(CC) -c $(INTERNAL_CFLAGS) $(IDE_CFLAGS) $(ITCL_CFLAGS)  \
d2452 1
a2452 1
	$(CC) -c $(INTERNAL_CFLAGS) $(IDE_CFLAGS) $(ITCL_CFLAGS)  \
d2461 1
a2461 1
	 $(TCL_CFLAGS) $(TK_CFLAGS) $(X11_CFLAGS)   \
d2471 1
a2471 1
	 $(TCL_CFLAGS) $(TK_CFLAGS) $(X11_CFLAGS)   \
d2478 1
a2478 1
	$(CC) -c $(INTERNAL_CFLAGS) $(IDE_CFLAGS) $(ITCL_CFLAGS)  \
a2500 4
mi-cmd-env.o: $(srcdir)/mi/mi-cmd-env.c $(defs_h) $(mi_cmds_h) $(ui_out_h) \
	$(mi_out_h) $(varobj_h) $(value_h) $(gdb_string_h) $(inferior.h) \
	$(mi_getopt_h) $(environ_h) $(gdbcmd_h) $(top_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/mi/mi-cmd-env.c
d2584 1
a2584 1
	$(tuiSourceWin_h) $(readline_h)
d2642 1
a2642 2
	$(tuiDisassem_h) $(tuiSource_h) $(tuiSourceWin_h) $(tuiDataWin_h) \
	$(readline_h)
@


1.278
log
@2002-11-08  Andrew Cagney  <ac131313@@redhat.com>

	* Makefile.in (frame.o): Update dependencies.
	* blockframe.c (current_frame, frame_obstack_alloc)
	(frame_saved_regs_zalloc, get_current_frame)
	(set_current_frame, create_new_frame)
	(set_unwind_by_pc, get_next_frame)
	(flush_cached_frames, reinit_frame_cache)
	(frame_saved_regs_register_unwind)
	(deprecated_generic_get_saved_register)
	(get_prev_frame, get_frame_pc, get_frame_saved_regs)
	(_initialize_blockframe): Move frame code from
	here...
	* frame.c: ...to here.  Include "gdb_obstack.h", "gdbcore.h",
	"annotate.h" and "dummy-frame.h".
	(_initialize_frame): New function.
@
text
@d58 2
d927 6
a932 3
		$(INSTALL_PROGRAM) gdb$(EXEEXT) $(bindir)/$$transformed_name$(EXEEXT) ; \
		$(srcdir)/../mkinstalldirs $(man1dir) ; \
		$(INSTALL_DATA) $(srcdir)/gdb.1 $(man1dir)/$$transformed_name.1
d2363 11
a2373 4
	$(INSTALL_PROGRAM) insight$(EXEEXT) $(bindir)/$$transformed_name$(EXEEXT) ; \
	$(SHELL) $(srcdir)/../mkinstalldirs $(GDBTK_LIBRARY) ; \
	$(SHELL) $(srcdir)/../mkinstalldirs $(libdir)/insight$(GDBTK_VERSION) ; \
	$(INSTALL_DATA) $(srcdir)/gdbtk/plugins/plugins.tcl $(libdir)/insight$(GDBTK_VERSION)/plugins.tcl ; \
d2375 3
a2377 5
		$(GDBTK_LIBRARY)/images \
		$(GDBTK_LIBRARY)/images2 ; \
	$(SHELL) $(srcdir)/../mkinstalldirs $(GDBTK_LIBRARY)/help \
		$(GDBTK_LIBRARY)/help/images \
		$(GDBTK_LIBRARY)/help/trace ; \
d2381 1
a2381 1
		$(INSTALL_DATA) $$i $(GDBTK_LIBRARY)/$$i ; \
d2392 2
a2393 2
	rm -f $(bindir)/$$transformed_name$(EXEEXT) ; \
	rm -rf $(GDBTK_LIBRARY)
@


1.277
log
@2002-11-08  Andrew Cagney  <ac131313@@redhat.com>

	* blockframe.c: Include "dummy-frame.h".
	(struct dummy_frame, dummy_frame_stack)
	(generic_find_dummy_frame, deprecated_generic_find_dummy_frame)
	(generic_pc_in_call_dummy, deprecated_read_register_dummy)
	(generic_push_dummy_frame, generic_save_dummy_frame_tos)
	(generic_save_call_dummy_addr, generic_pop_current_frame)
	(generic_pop_dummy_frame, generic_fix_call_dummy)
	(generic_fix_call_dummy, generic_call_dummy_register_unwind): Move
	dummy frame code from here...
	* dummy-frame.c: ...to here.  New file.
	* dummy-frame.h: New file.
	(generic_call_dummy_register_unwind): Declare.
	(generic_find_dummy_frame): Declare.
	* Makefile.in (SFILES): Add dummy-frame.c.
	(dummy-frame.o): Specify dependencies.
	(dummy_frame_h): Define.
	(COMMON_OBS): Add dummy-frame.o.
	(blockframe.o): Update dependencies.
@
text
@d1684 2
a1685 1
	$(regcache_h) $(gdb_assert_h)
@


1.276
log
@        Preparation work to convert the hppa targets to multiarch partial.

        * hppa-tdep.c: Add new functions replacing macro bodies from
        config/pa/tm-hppa.h. These function will be used to initialize
        the gdbarch structure. Import some comments from tm-hppa.h,
        and place them where appropriate, to avoid loosing them when
        we cleanup this file.
        (hppa_reg_struct_has_addr): New function.
        (hppa_inner_than): New function.
        (hppa_stack_align): New function.
        (hppa_pc_requires_run_before_use): New function.
        (hppa_instruction_nullified): New function.
        (hppa_register_byte): New function.
        (hppa_register_virtual_type): New function.
        (hppa_store_struct_return): New function.
        (hppa_cannot_store_register): New function.
        (hppa_frame_args_address): New function.
        (hppa_frame_locals_address): New function.
        (hppa_smash_text_address): New function.
        (hppa_coerce_float_to_double): New function. Requires the inclusion
        of "language.h".

        * Makefile.in (hppa-tdep.o): Add dependency on language.h.

        * tm-hppa.h (REG_STRUCT_HAS_ADDR): Change the definition of this
        gdbarch-eligible macro to a call to the new associated function
        created in hppa-tdep.c.
        (INNER_THAN): Likewise.
        (STACK_ALIGN): Likewise.
        (PC_REQUIRES_RUN_BEFORE_USE): Likewise.
        (INSTRUCTION_NULLIFIED): Likewise.
        (REGISTER_BYTE): Likewise.
        (REGISTER_VIRTUAL_TYPE): Likewise.
        (STORE_STRUCT_RETURN): Likewise.
        (CANNOT_STORE_REGISTER): Likewise.
        (FRAME_ARGS_ADDRESS): Likewise.
        (FRAME_LOCALS_ADDRESS): Likewise.
        (SMASH_TEXT_ADDRESS): Likewise.
        (COERCE_FLOAT_TO_DOUBLE): Likewise.
        (ABOUT_TO_RETURN): Delete, as no longer used.
@
text
@d538 2
a539 1
	dbxread.c demangle.c disasm.c doublest.c dwarfread.c dwarf2read.c \
d644 1
d834 1
a834 1
	charset.o disasm.o \
d1537 2
a1538 1
	$(inferior_h) $(annotate_h) $(regcache_h) $(gdb_assert_h)
d1633 2
@


1.275
log
@* macroscope.c: #include "complaints.h".
(sal_macro_scope): Cope with filenames that appear in the symtabs,
but not in the macro table.
* Makefile.in (macroscope.o): Record dependency.
@
text
@d1720 1
a1720 1
	$(symfile_h) $(objfiles_h)
@


1.274
log
@2002-11-02  Andrew Cagney  <cagney@@redhat.com>

	* reggroups.h, reggroups.c: New files.
	* regcache.c: Include "reggroups.h".
	(enum regcache_dump_what): Add `regcache_dump_groups'.
	(regcache_dump): Contract size of the "Type" column.  When
	specified, dump the register's groups.
	(maintenance_print_register_groups): New function.
	(_initialize_regcache): Add command `maint print register-groups'.
	* Makefile.in (COMMON_OBS): Add reggroups.o
	(SFILES): Add reggroups.c.
	(reggroups_h): Define.
	(regcache.o, gdbarch.o): Update dependencies.
	(reggroups.o): Specify dependencies.
	* gdbarch.sh (register_reggroup_p): Add pure multi-arch method.
	Add opaque declaration for `struct reggroup' in generated .h file.
	Include "reggroups.h" in generated .c file.
	gdbarch.h, gdbarch.c: Re-generate.
@
text
@d1874 1
a1874 1
	$(frame_h) $(inferior_h) $(source_h)
@


1.273
log
@* Makefile.in (i386v-nat.o): Add $(i386_tdep_h).
@
text
@d553 1
a553 1
	regcache.c remote.c \
d701 1
d858 2
a859 1
	gnu-v2-abi.o gnu-v3-abi.o hpacc-abi.o cp-abi.o cp-support.o
d1690 1
a1690 1
	$(gdb_assert_h) $(gdb_string_h) $(gdb_events_h)
d2008 4
a2011 2
	$(gdbcmd_h) $(regcache_h) $(gdb_assert_h) $(gdb_string_h) \
	$(gdbcmd_h)
@


1.272
log
@2002-10-23  David Carlton  <carlton@@math.stanford.edu>

	* linespec.c: #include "parser-defs.h".
	Delete prototype for find_template_name_end.
	* Makefile.in (linespec.o): Depend on $(parser_defs_h).
@
text
@d1766 1
a1766 1
	$(gdbcore_h) $(gdb_stat_h) $(floatformat_h) $(target_h)
@


1.271
log
@* Makefile.in (i386obsd-tdep.o): New target.
@
text
@d1827 1
a1827 1
	$(cp_abi_h) $(source_h)
@


1.270
log
@* solib-sunos.c: Include "bcache.h" and "regcache.h".
* Makefile.in (solib-sunos.o): Add $(bcache_h) and $(regcache_h).
@
text
@d1763 2
@


1.269
log
@* Makefile.in (install-gdbtk): Add missing continuation backslash to insure
that shell variables, such as "transformed_name" are propagated to later shell
statements in rule.
@
text
@d2132 2
a2133 1
	$(symfile_h) $(objfiles_h) $(gdbcore_h) $(inferior_h) $(solist_h)
@


1.268
log
@2002-10-02  Elena Zannoni  <ezannoni@@redhat.com>

        * inferior.h (registers_info, stepi_command, nexti_command,
        continue_command, interrupt_target_command): Export from infcmd.c.
        * frame.h (args_info, selected_frame_level_changed_hook,
        return_command): Export from stack.c.
        * v850ice.c (stepi_command, nexti_command, continue_command): use
        prototypes from inferior.h.
        * tracepoint.c (registers_info, args_info, locals_info): Use
        prototypes from frame.h and inferior.h.
        * Makefile.in (mi-main.o): Add dependency on frame.h.

2002-10-02  Elena Zannoni  <ezannoni@@redhat.com>

        * mi-main.c (mi_cmd_exec_return): Don't use
        return_command_wrapper, use return_command instead.
        (mi_cmd_exec_interrupt): Don't use
        interrupt_target_command_wrapper, use interrupt_target_command
        instead.
        (return_command_wrapper, interrupt_target_command_wrapper):
        Delete.
        Include frame.h.

2002-10-02  Elena Zannoni  <ezannoni@@redhat.com>

        * tui-hooks.c (selected_frame_level_changed_hook): Use the one
        exported from frame.h.
@
text
@d2344 1
a2344 1
	$(SHELL) $(srcdir)/../mkinstalldirs $(bindir)
@


1.268.2.1
log
@2002-10-22  David Carlton  <carlton@@math.stanford.edu>

	* Makefile.in (buildsym.o): Depend on $(gdb_assert_h) and
	$(cp_support_h).
	(cp-support.o): Fix dependencies and add $(gdb_obstack_h) and
	$(gdb_assert_h).
	(symtab.o): Depend on $(cp_support_h).
	* symtab.h: Add opaque declaration for struct using_direct_node.
	(struct block): Add member 'language_specific'.
	(BLOCK_USING): New macro.
	* symtab.c: #include "cp-support.h"
	(lookup_symbol_aux): Call lookup_symbol_aux_nonlocal and
	lookup_symbol_aux_using when appropriate.
	(lookup_symbol_aux_nonlocal): New function.
	(lookup_symbol_aux_using): New function.
	(lookup_symbol_aux_using_loop): New function.
	* symfile.h: Add opaque declaration for struct obstack.
	Declare obsavestring to take a const char *.
	* symfile.c (obsavestring): Make first argument a const char *.
	* jv-lang.c (get_java_class_symtab): Initialize BLOCK_USING.
	* dwarf2read.c: New variable current_namespace.
	(scan_partial_symbols): Handle DW_TAG_namespace.
	(psymtab_to_symtab_1): Initialize current_namespace.
	(process_die): Handle DW_TAG_namespace,
	DW_TAG_imported_declaration, DW_TAG_imported_module.
	(read_namespace): New function.
	(dwarf2_name): New function.
	(dwarf2_extension): New function.
	(dwarf_tag_name): Add DWARF 3 names.
	(dwarf_attr_name): Ditto.
	(dwarf_type_encoding_name): Ditto.
	* cp-support.h: Opaque declaration for struct obstack.
	(struct using_direct): New struct.
	(struct using_direct_node): New struct.
	Add declarations for cp_add_using_obstack, cp_add_using_xmalloc,
	cp_copy_usings, cp_free_usings,	cp_find_first_component.
	* cp-support.c: #include "gdb_obstack.h", "gdb_assert.h".
	Comment on demangled name pitfalls.
	(cp_add_using_obstack): New function.
	(cp_add_using_xmalloc): New function.
	(cp_copy_usings): New function.
	(cp_free_usings): New function.
	(cp_find_first_component): New function.
	* buildsym.h: Declare processing_has_namespace_info.
	Declare add_using_directive.
	* buildsym.c: #include "gdb_assert.h", "cp-support.h".
	Change comment after #include "symfile.h".
	New variable using_list.
	(add_symbol_to_list): Scan for anonymous namespaces when
	appropriate.
	(scan_for_anonymous_namespaces): New function.
	(add_using_directive): New function.
	(start_symtab): Initialize processing_has_namespace_info,
	using_list.
	(end_symtab): Copy using_list into block.
	(copy_usings_to_obstack): New function.
	(finish_block): Set BLOCK_USING in general case and in C++
	function case.

2002-10-22  David Carlton  <carlton@@math.stanford.edu>

	* gdb.c++/namespace.exp: Add tests involving namespaces
	  starting from C.
	* gdb.c++/namespace.cc: Add namespaces with names starting
	  from C and their contents.
@
text
@d1544 1
a1544 1
	$(stabsread_h) $(gdb_assert_h) $(cp_support_h)
d1589 1
a1589 2
cp-support.o: cp-support.c $(defs_h) $(cp_support_h) $(gdb_string_h) \
	$(demangle_h) $(gdb_obstack_h) $(gdb_assert_h)
d2205 1
a2205 1
	$(cp_abi_h) $(source_h) $(cp_support_h)
@


1.268.2.2
log
@Merge drow-cplus-merge-20021025 to drow-cplus-branch.
@
text
@a1763 2
i386obsd-tdep.o: i386obsd-tdep.c $(defs_h) $(arch_utils_h) $(gdbcore_h) \
	$(regcache_h) $(i386_tdep_h) $(i387_tdep_h)
d1826 1
a1826 1
	$(cp_abi_h) $(source_h) $(parser_defs_h)
d2133 1
a2133 2
	$(symfile_h) $(objfiles_h) $(gdbcore_h) $(inferior_h) $(solist_h) \
	$(bcache_h) $(regcache_h)
d2345 1
a2345 1
	$(SHELL) $(srcdir)/../mkinstalldirs $(bindir); \
@


1.268.2.3
log
@2002-11-22  David Carlton  <carlton@@math.stanford.edu>

	* symtab.h: Add opaque declarations for struct namespace_info and
	struct obstack.
	(struct block): The language_specific stuff is now a struct
	namespace_info rather than a struct using_direct_node.
	(BLOCK_NAMESPACE): New macro.
	Delete macro BLOCK_USING.
	Add declarations for block_using, block_all_usings,
	block_set_using, block_scope, block_set_scope.
	* symtab.c: #include "gdb_assert.h"
	(lookup_symbol_aux): Move minsym stuff inside
	lookup_symbol_aux_nonlocal, and always do global search via
	lookup_symbol_aux_using.
	(lookup_symbol_aux_nonlocal): Do minsym search.
	(lookup_symbol_aux_using): Calculate usings via block_all_usings;
	handle namespace scope.
	(lookup_symbol_aux_using_loop): New function, not to be confused
	with the previous function of the same name.  (Sorry about that.)
	(lookup_symbol_namespace): Renamed from
	lookup_symbol_aux_using_loop.
	(lookup_symbol_aux_minsyms): Add block_index argument, delete
	is_a_field_of_this argument, and only check either global or
	static symbols rather than both of them.
	(block_using): New function.
	(block_all_usings): New function.
	(block_set_using): New function.
	(block_scope): New function.
	(block_set_scope): New function.
	(block_initialize_namespace): New function.
	* jv-lang.c (get_java_class_symtab): BLOCK_NAMESPACE instead of
	BLOCK_USING.
	* dwarf2read.c: Delete variable current_namespace, and replace its
	uses by processing_current_namespace (from buildsym.h).
	(scan_partial_symbols): Allow empty pdi.name if we're
	reading a namespace.
	* cp-support.h (struct namespace_info): New struct.
	* cp-support.c: Add comment.
	* buildsym.h: New variable processing_current_namespace.
	* buildsym.c (add_symbol_to_list): Do fast search for
	"(anonymous namespace)".
	(scan_for_anonymous_namespaces): Delete FIXME.  Convert for loop
	into a clearer while loop.
	(finish_block): Replace BLOCK_USING by BLOCK_NAMESPACE.
	(finish_block): Set block_scope of function blocks rather than
	generating using directives that would have a similar effect.
	(end_symtab): Set using via block_set_using rather than
	BLOCK_USING.
	* Makefile.in (symtab.o): Depend on gdb_assert_h.
@
text
@d2209 1
a2209 1
	$(cp_abi_h) $(source_h) $(cp_support_h) $(gdb_assert_h)
@


1.268.2.4
log
@Merge drow-cplus-branch to:
  cvs rtag -D 2003-12-14 00:00:00 UTC drow-cplus-merge-20031214 gdb+dejagnu
@
text
@d2 1
a2 1
# 1999, 2000, 2001, 2002, 2003 Free Software Foundation, Inc.
a57 2
DESTDIR =

d65 4
d114 3
a143 4
# Did the user give us a --with-sysroot option?
TARGET_SYSTEM_ROOT = @@TARGET_SYSTEM_ROOT@@
TARGET_SYSTEM_ROOT_DEFINE = @@TARGET_SYSTEM_ROOT_DEFINE@@

d149 1
a149 3
	cli-decode.o cli-script.o cli-cmds.o cli-setshow.o cli-utils.o \
	cli-logging.o \
	cli-interp.o
a152 2
	cli/cli-logging.c \
	cli/cli-interp.c \
d169 2
a170 3
	mi-cmds.o mi-cmd-env.o mi-cmd-var.o mi-cmd-break.o mi-cmd-stack.o \
	mi-cmd-file.o mi-cmd-disas.o mi-symbol-cmds.o \
	mi-interp.o \
d174 1
a174 1
	mi/mi-cmds.c mi/mi-cmd-env.c \
d176 1
a176 2
	mi/mi-cmd-file.c mi/mi-cmd-disas.c mi/mi-symbol-cmds.c \
	mi/mi-interp.c \
a193 1
	tui-interp.o \
a198 1
	tui/tui-interp.c \
d240 1
a240 1
TCL = @@TCL_CC_SEARCH_FLAGS@@ @@TCL_BUILD_LIB_SPEC@@
d242 1
d250 1
d255 1
d260 6
d287 1
a287 1
	gdbtk.o gdbtk-bp.o gdbtk-cmds.o gdbtk-hooks.o gdbtk-interp.o \
d291 1
a291 1
	gdbtk/generic/gdbtk-cmds.c gdbtk/generic/gdbtk-hooks.c gdbtk-interp.c \
d296 2
a297 2
	$(LIBGUI) $(ITCL_DEPS) $(ITK_DEPS) $(TK_DEPS) $(TCL_DEPS)
SUBDIR_GDBTK_INITS = gdbtk/generic/gdbtk.c gdbtk/generic/gdbtk-interp.c
d331 1
a331 2

PROFILE_CFLAGS = @@PROFILE_CFLAGS@@
d347 1
a347 1
	$(INTL_CFLAGS) $(ENABLE_CFLAGS) \
d358 2
a359 2
# PROFILE_CFLAGS is _not_ included, however, because we use monstartup.
INTERNAL_LDFLAGS = $(CFLAGS) $(GLOBAL_CFLAGS) $(MH_LDFLAGS) $(LDFLAGS) $(CONFIG_LDFLAGS)
d366 1
d372 1
a372 1
	$(XM_CLIBS) $(TM_CLIBS) $(NAT_CLIBS) $(GDBTKLIBS) @@LIBS@@ \
d375 1
a375 1
	$(XM_CLIBS) $(TM_CLIBS) $(NAT_CLIBS) $(GDBTKLIBS) @@LIBS@@ \
d407 1
a407 1
REMOTE_OBS = remote.o dcache.o remote-utils.o tracepoint.o ax-general.o ax-gdb.o remote-fileio.o
a434 1
	"DESTDIR=$(DESTDIR)" \
a441 1
	"LDFLAGS=$(LDFLAGS)" \
d488 20
d534 1
a534 3
	bcache.c \
	bfd-target.c \
	block.c blockframe.c breakpoint.c buildsym.c \
d536 3
a538 5
	charset.c cli-out.c coffread.c coff-pe-read.c \
	complaints.c completer.c corefile.c \
	cp-abi.c cp-support.c cp-namespace.c cp-valprint.c \
	dbxread.c demangle.c dictionary.c disasm.c doublest.c dummy-frame.c \
	dwarfread.c dwarf2expr.c dwarf2loc.c dwarf2read.c dwarf2-frame.c \
a540 2
	frame-base.c \
	frame-unwind.c \
d543 1
a543 4
	inf-loop.c \
	infcall.c \
	infcmd.c inflow.c infrun.c \
	interps.c \
d551 1
a551 2
	objc-exp.y objc-lang.c \
	objfiles.c osabi.c observer.c \
d553 2
a554 4
	regcache.c reggroups.c remote.c remote-fileio.c \
	scm-exp.c scm-lang.c scm-valprint.c \
	sentinel-frame.c \
	serial.c ser-unix.c source.c \
d556 1
a556 3
	target.c thread.c top.c tracepoint.c \
	trad-frame.c \
	typeprint.c \
a565 1
	user-regs.c \
d585 1
a585 3
coff_internal_h =	$(INCLUDE_DIR)/coff/internal.h
dis_asm_h =	$(INCLUDE_DIR)/dis-asm.h $(bfd_h)
elf_reloc_macros_h =	$(INCLUDE_DIR)/elf/reloc-macros.h
a586 1
elf_arm_h =	$(INCLUDE_DIR)/elf/arm.h $(elf_reloc_macros_h)
a588 1
libbfd_h =	$(BFD_SRC)/libbfd.h
a592 2
readline_h = 	$(READLINE_SRC)/readline.h
frv_desc_h =	$(OPCODES_SRC)/frv-desc.h
a595 1
gdb_sim_frv_h = $(INCLUDE_DIR)/gdb/sim-frv.h
a604 16
#
# $BUILD/ headers
#

config_h = config.h
exc_request_U_h = exc_request_U.h
exc_request_S_h = exc_request_S.h
msg_reply_S_h = msg_reply_S.h
msg_U_h = msg_U.h
notify_S_h = notify_S.h
process_reply_S_h = process_reply_S.h

#
# config/ headers
#

d610 1
a610 1
# gdb/ headers
d613 1
d615 1
a616 2
alpha_tdep_h = alpha-tdep.h
amd64_nat_h = amd64-nat.h
d619 1
a619 1
arm_tdep_h = arm-tdep.h
a622 2
bfd_target_h = bfd-target.h
block_h = block.h
d625 2
d628 1
a628 2
charset_h = charset.h
c_lang_h = c-lang.h $(value_h) $(macroexp_h)
a629 1
coff_pe_read_h = coff-pe-read.h
d635 1
a635 1
cp_support_h = cp-support.h $(symtab_h)
d637 1
a637 1
defs_h = defs.h $(config_h) $(ansidecl_h) $(gdb_locale_h) $(gdb_signals_h) \
d639 1
a639 2
	$(nm_h) $(tm_h) $(fopen_same_h) $(gdbarch_h)
dictionary_h = dictionary.h
d642 2
a643 4
dummy_frame_h = dummy-frame.h
dwarf2expr_h = dwarf2expr.h
dwarf2_frame_h = dwarf2-frame.h
dwarf2loc_h = dwarf2loc.h
a646 1
exec_h = exec.h $(target_h)
a648 1
frame_base_h = frame-base.h
d650 3
a652 2
frame_unwind_h = frame-unwind.h $(frame_h)
gdbarch_h = gdbarch.h
a653 2
gdbcmd_h = gdbcmd.h $(command_h) $(ui_out_h)
gdbcore_h = gdbcore.h $(bfd_h)
a654 2
gdb_events_h = gdb-events.h
gdb_h = gdb.h
a658 1
gdb_stabs_h = gdb-stabs.h
a661 2
gdbthread_h = gdbthread.h $(breakpoint_h) $(frame_h)
gdbtypes_h = gdbtypes.h
d664 5
a668 1
glibc_tdep_h = glibc-tdep.h
a670 1
hppa_tdep_h = hppa-tdep.h
d672 1
a672 1
i386_tdep_h = i386-tdep.h
a673 2
infcall_h = infcall.h
inferior_h = inferior.h $(breakpoint_h) $(target_h) $(frame_h)
d675 1
a675 3
inflow_h = inflow.h $(terminal_h)
infttrace_h = infttrace.h
interps_h = interps.h
a678 1
libunwind_frame_h = libunwind-frame.h
a679 1
linux_nat_h = linux-nat.h
a680 1
m68k_tdep_h = m68k-tdep.h
a687 1
mips_tdep_h = mips-tdep.h
d690 1
a690 3
ns32k_tdep_h = ns32k-tdep.h
nto_tdep_h = nto-tdep.h $(defs_h) $(solist_h)
objc_lang_h = objc-lang.h
a691 1
observer_h = observer.h
d694 1
d697 1
a697 1
p_lang_h = p-lang.h
a698 1
ppc_tdep_h = ppc-tdep.h
d701 1
a701 3
reggroups_h = reggroups.h
regset_h = regset.h
remote_fileio_h = remote-fileio.h
a702 1
remote_utils_h = remote-utils.h $(target_h)
d705 1
a705 1
sentinel_frame_h = sentinel-frame.h
d707 1
a707 1
ser_unix_h = ser-unix.h
a708 1
sh_tdep_h = sh-tdep.h
d710 1
a711 1
solib_svr4_h = solib-svr4.h
a714 2
sparc64_tdep_h = sparc64-tdep.h
sparcbsd_nat_h = sparcbsd-nat.h
a715 1
sparc_tdep_h = sparc-tdep.h
a717 1
stack_h = stack.h
a723 1
trad_frame_h = trad-frame.h
a726 1
user_regs_h = user-regs.h
d728 1
a728 2
value_h = value.h $(doublest_h) $(frame_h) $(symtab_h) $(gdbtypes_h) \
	$(expression_h)
d730 1
a730 1
vax_tdep_h = vax-tdep.h
a733 1
x86_64_linux_tdep_h = x86-64-linux-tdep.h
d743 1
a743 1
cli_decode_h = $(srcdir)/cli/cli-decode.h $(command_h)
a755 1
mi_main_h = $(srcdir)/mi/mi-main.h
d763 2
d766 1
a767 1
tuiData_h = $(srcdir)/tui/tuiData.h
d773 1
a774 1
tuiSource_h = $(srcdir)/tui/tuiSource.h $(defs_h)
d777 2
a778 2
tui_file_h = $(srcdir)/tui/tui-file.h
tui_h = $(srcdir)/tui/tui.h $(ansidecl_h)
d796 3
d830 2
a831 4
COMMON_OBS = version.o \
	bfd-target.o \
	blockframe.o breakpoint.o findvar.o regcache.o \
	charset.o disasm.o dummy-frame.o \
d833 1
a833 3
	block.o symtab.o symfile.o symmisc.o linespec.o dictionary.o \
	infcall.o \
	infcmd.o infrun.o \
a834 1
	interps.o \
d839 1
a839 1
	std-regs.o \
d843 2
a844 2
	exec.o bcache.o objfiles.o observer.o minsyms.o maint.o demangle.o \
	dbxread.o coffread.o coff-pe-read.o elfread.o \
d846 1
a846 2
	dwarf2expr.o dwarf2loc.o dwarf2-frame.o \
	c-lang.o f-lang.o objc-lang.o \
d851 1
a851 3
	scm-exp.o scm-lang.o scm-valprint.o \
	sentinel-frame.o \
	complaints.o typeprint.o \
d856 2
a857 7
	user-regs.o \
	frame.o frame-unwind.o doublest.o \
	frame-base.o \
	gnu-v2-abi.o gnu-v3-abi.o hpacc-abi.o cp-abi.o cp-support.o \
	cp-namespace.o \
	reggroups.o \
	trad-frame.o
d863 1
a863 1
SUBDIRS = @@subdirs@@
a866 1
	objc-exp.tab.c \
a870 1
	objc-exp.tab.o \
d914 1
a914 1
			  echo gdb | sed -e "$$t"` ; \
d920 4
a923 7
		$(SHELL) $(srcdir)/../mkinstalldirs $(DESTDIR)$(bindir) ; \
		$(INSTALL_PROGRAM) gdb$(EXEEXT) \
			$(DESTDIR)$(bindir)/$$transformed_name$(EXEEXT) ; \
		$(SHELL) $(srcdir)/../mkinstalldirs \
			$(DESTDIR)$(man1dir) ; \
		$(INSTALL_DATA) $(srcdir)/gdb.1 \
			$(DESTDIR)$(man1dir)/$$transformed_name.1
d934 1
a934 2
		rm -f $(DESTDIR)$(bindir)/$$transformed_name$(EXEEXT) \
		      $(DESTDIR)$(man1dir)/$$transformed_name.1
a962 7
# NOTE: cagney/2003-03-18: The sed pattern ``s|^\([^ /]...'' is
# anchored on the first column and excludes the ``/'' character so
# that it doesn't add the $(srcdir) prefix to any file that already
# has an absolute path.  It turns out that $(DEC)'s True64 make
# automatically adds the $(srcdir) prefixes when it encounters files
# in sub-directories such as cli/ and mi/.

d969 1
a969 1
	sed \
d971 2
d984 1
a984 1
	    -e 's|^\([^  /][^     ]*\)|$(srcdir)/\1|g' | \
d1008 1
a1008 1
	$(CC_LD) $(INTERNAL_LDFLAGS) $(WIN32LDAPP) \
d1025 25
d1069 4
a1072 2
tm-sun3.h tm-altos.h: tm-m68k.h
tm-sun2.h tm-3b1.h: tm-m68k.h
a1128 1
	        objc-exp.tab.c \
d1158 1
a1158 1
config.status: configure configure.tgt configure.host
d1197 119
d1336 6
a1341 1
ALLDEPFILES = \
d1345 1
a1345 1
	alpha-osf1-tdep.c alphafbsd-tdep.c alpha-mdebug-tdep.c \
d1352 2
a1353 4
	glibc-tdep.c \
	go32-nat.c h8300-tdep.c \
	hppa-tdep.c hppa-hpux-tdep.c \
	hppab-nat.c hppah-nat.c hpread.c \
d1355 2
a1356 2
	i386v4-nat.c i386ly-tdep.c i386-cygwin-tdep.c \
	i386bsd-nat.c i386bsd-tdep.c i386fbsd-nat.c i386fbsd-tdep.c \
a1361 1
	libunwind-frame.c \
d1372 2
d1379 2
a1380 2
	remote-e7000.c \
	remote-hms.c remote-m32r-sdi.c remote-mips.c \
d1387 1
a1387 1
	sh-tdep.c sh64-tdep.c shnbsd-tdep.c shnbsd-nat.c \
d1397 2
a1398 1
	xstormy16-tdep.c
a1411 21
# main.o needs an explicit build rule to get TARGET_SYSTEM_ROOT and BINDIR.
main.o: main.c
	$(CC) -c $(INTERNAL_CFLAGS) $(TARGET_SYSTEM_ROOT_DEFINE) \
		-DBINDIR=\"$(bindir)\" $(srcdir)/main.c

# FIXME: cagney/2003-08-10: "monitor.c" gets -Wformat-nonliteral
# errors.  It turns out that that is the least of monitor.c's
# problems.  The function print_vsprintf appears to be using
# va_arg(long) to extract CORE_ADDR parameters - something that
# definitly will not work.  "monitor.c" needs to be rewritten so that
# it doesn't use format strings and instead uses callbacks.
monitor.o: $(srcdir)/monitor.c
	$(CC) -c $(INTERNAL_WARN_CFLAGS) $(NO_WERROR_CFLAGS) $(srcdir)/monitor.c

# FIXME: cagney/2003-08-10: Do not try to build "printcmd.c" with
# -Wformat-nonliteral.  It needs to be overhauled so that it doesn't
# pass user input strings as the format parameter to host printf
# function calls.
printcmd.o: $(srcdir)/printcmd.c
	$(CC) -c $(INTERNAL_WARN_CFLAGS) $(NO_WERROR_CFLAGS) $(srcdir)/printcmd.c

a1416 6
# FIXME: Thread-db.o gets warnings because the definitions of the register
# sets are different from kernel to kernel.
thread-db.o: $(srcdir)/thread-db.c
	$(CC) -c $(INTERNAL_WARN_CFLAGS) $(NO_WERROR_CFLAGS) \
		$(srcdir)/thread-db.c

d1419 1
a1419 1
		$(TCL_CFLAGS) $(TK_CFLAGS) $(X11_CFLAGS) \
d1423 6
a1428 5
# FIXME: cagney/2003-08-10: Do not try to build "valprint.c" with
# -Wformat-nonliteral.  It relies on local_hex_format et.al. and
# that's a mess.  It needs a serious overhaul.
valprint.o: $(srcdir)/valprint.c
	$(CC) -c $(INTERNAL_WARN_CFLAGS) $(NO_WERROR_CFLAGS) $(srcdir)/valprint.c
d1431 1
a1431 1
# YACC/LEX dependencies
a1432 7
# LANG-exp.tab.c is generated in objdir from LANG-exp.y if it doesn't
# exist in srcdir, then compiled in objdir to LANG-exp.tab.o.  If we
# said LANG-exp.tab.c rather than ./c-exp.tab.c some makes would
# sometimes re-write it into $(srcdir)/c-exp.tab.c.  Remove bogus
# decls for malloc/realloc/free which conflict with everything else.
# Strictly speaking c-exp.tab.c should therefore depend on
# Makefile.in, but that was a pretty big annoyance.
a1433 30
.PRECIOUS: ada-exp.tab.c
ada-exp.tab.o: ada-exp.tab.c $(defs_h) $(expression_h) $(value_h) \
	$(parser_defs_h) $(language_h) $(ada_lang_h) $(bfd_h) $(symfile_h) \
	$(objfiles_h) $(frame_h) $(block_h) $(ada_lex_c)
ada-exp.tab.c: ada-exp.y
	$(SHELL) $(YLWRAP) "$(YACC)" \
	    $(srcdir)/ada-exp.y  y.tab.c ada-exp.tmp -- $(YFLAGS) 
	-sed -e '/extern.*malloc/d' \
	     -e '/extern.*realloc/d' \
	     -e '/extern.*free/d' \
	     -e '/include.*malloc.h/d' \
	     -e 's/malloc/xmalloc/g' \
	     -e 's/realloc/xrealloc/g' \
	     -e '/^#line.*y.tab.c/d' \
	  < ada-exp.tmp > ada-exp.new
	-rm ada-exp.tmp
	mv ada-exp.new ./ada-exp.tab.c
.PRECIOUS: ada-lex.c
ada-lex.o: ada-lex.c
ada-lex.c: ada-lex.l
	@@if [ "$(FLEX)" ] && $(FLEX) --version >/dev/null 2>&1; then \
	    echo $(FLEX) -Isit $(srcdir)/ada-lex.l ">" ada-lex.c; \
	    $(FLEX) -Isit $(srcdir)/ada-lex.l > ada-lex.c; \
	elif [ ! -f ada-lex.c -a ! -f $(srcdir)/ada-lex.c ]; then \
	    echo "ada-lex.c missing and flex not available."; \
	    false; \
	elif [ ! -f ada-lex.c ]; then \
	    echo "Warning: ada-lex.c older than ada-lex.l and flex not available."; \
	fi
.PRECIOUS: c-exp.tab.c
d1436 23
a1458 100
	$(symfile_h) $(objfiles_h) $(charset_h) $(block_h) $(cp_support_h)
c-exp.tab.c: c-exp.y
	$(SHELL) $(YLWRAP) "$(YACC)" \
	    $(srcdir)/c-exp.y  y.tab.c c-exp.tmp -- $(YFLAGS) 
	-sed -e '/extern.*malloc/d' \
	     -e '/extern.*realloc/d' \
	     -e '/extern.*free/d' \
	     -e '/include.*malloc.h/d' \
	     -e 's/malloc/xmalloc/g' \
	     -e 's/realloc/xrealloc/g' \
	     -e '/^#line.*y.tab.c/d' \
	  < c-exp.tmp > c-exp.new
	-rm c-exp.tmp
	mv c-exp.new ./c-exp.tab.c
.PRECIOUS: f-exp.tab.c
f-exp.tab.o: f-exp.tab.c $(defs_h) $(gdb_string_h) $(expression_h) \
	$(value_h) $(parser_defs_h) $(language_h) $(f_lang_h) $(bfd_h) \
	$(symfile_h) $(objfiles_h) $(block_h)
f-exp.tab.c: f-exp.y
	$(SHELL) $(YLWRAP) "$(YACC)" \
	    $(srcdir)/f-exp.y  y.tab.c f-exp.tmp -- $(YFLAGS) 
	-sed -e '/extern.*malloc/d' \
	     -e '/extern.*realloc/d' \
	     -e '/extern.*free/d' \
	     -e '/include.*malloc.h/d' \
	     -e 's/malloc/xmalloc/g' \
	     -e 's/realloc/xrealloc/g' \
	     -e '/^#line.*y.tab.c/d' \
	  < f-exp.tmp > f-exp.new
	-rm f-exp.tmp
	mv f-exp.new ./f-exp.tab.c
.PRECIOUS: jv-exp.tab.c
jv-exp.tab.o: jv-exp.tab.c $(defs_h) $(gdb_string_h) $(expression_h) \
	$(value_h) $(parser_defs_h) $(language_h) $(jv_lang_h) $(bfd_h) \
	$(symfile_h) $(objfiles_h) $(block_h)
jv-exp.tab.c: jv-exp.y
	$(SHELL) $(YLWRAP) "$(YACC)" \
	    $(srcdir)/jv-exp.y  y.tab.c jv-exp.tmp -- $(YFLAGS) 
	-sed -e '/extern.*malloc/d' \
	     -e '/extern.*realloc/d' \
	     -e '/extern.*free/d' \
	     -e '/include.*malloc.h/d' \
	     -e 's/malloc/xmalloc/g' \
	     -e 's/realloc/xrealloc/g' \
	     -e '/^#line.*y.tab.c/d' \
	  < jv-exp.tmp > jv-exp.new
	-rm jv-exp.tmp
	mv jv-exp.new ./jv-exp.tab.c
.PRECIOUS: m2-exp.tab.c
m2-exp.tab.o: m2-exp.tab.c $(defs_h) $(gdb_string_h) $(expression_h) \
	$(language_h) $(value_h) $(parser_defs_h) $(m2_lang_h) $(bfd_h) \
	$(symfile_h) $(objfiles_h) $(block_h)
m2-exp.tab.c: m2-exp.y
	$(SHELL) $(YLWRAP) "$(YACC)" \
	    $(srcdir)/m2-exp.y  y.tab.c m2-exp.tmp -- $(YFLAGS) 
	-sed -e '/extern.*malloc/d' \
	     -e '/extern.*realloc/d' \
	     -e '/extern.*free/d' \
	     -e '/include.*malloc.h/d' \
	     -e 's/malloc/xmalloc/g' \
	     -e 's/realloc/xrealloc/g' \
	     -e '/^#line.*y.tab.c/d' \
	  < m2-exp.tmp > m2-exp.new
	-rm m2-exp.tmp
	mv m2-exp.new ./m2-exp.tab.c
.PRECIOUS: objc-exp.tab.c
objc-exp.tab.o: objc-exp.tab.c $(defs_h) $(gdb_string_h) $(expression_h) \
	$(objc_lang_h) $(value_h) $(parser_defs_h) $(language_h) $(c_lang_h) \
	$(bfd_h) $(symfile_h) $(objfiles_h) $(top_h) $(completer_h) \
	$(block_h)
objc-exp.tab.c: objc-exp.y
	$(SHELL) $(YLWRAP) "$(YACC)" \
	    $(srcdir)/objc-exp.y  y.tab.c objc-exp.tmp -- $(YFLAGS) 
	-sed -e '/extern.*malloc/d' \
	     -e '/extern.*realloc/d' \
	     -e '/extern.*free/d' \
	     -e '/include.*malloc.h/d' \
	     -e 's/malloc/xmalloc/g' \
	     -e 's/realloc/xrealloc/g' \
	     -e '/^#line.*y.tab.c/d' \
	  < objc-exp.tmp > objc-exp.new
	-rm objc-exp.tmp
	mv objc-exp.new ./objc-exp.tab.c
.PRECIOUS: p-exp.tab.c
p-exp.tab.o: p-exp.tab.c $(defs_h) $(gdb_string_h) $(expression_h) \
	$(value_h) $(parser_defs_h) $(language_h) $(p_lang_h) $(bfd_h) \
	$(symfile_h) $(objfiles_h) $(block_h)
p-exp.tab.c: p-exp.y
	$(SHELL) $(YLWRAP) "$(YACC)" \
	    $(srcdir)/p-exp.y  y.tab.c p-exp.tmp -- $(YFLAGS) 
	-sed -e '/extern.*malloc/d' \
	     -e '/extern.*realloc/d' \
	     -e '/extern.*free/d' \
	     -e '/include.*malloc.h/d' \
	     -e 's/malloc/xmalloc/g' \
	     -e 's/realloc/xrealloc/g' \
	     -e '/^#line.*y.tab.c/d' \
	  < p-exp.tmp > p-exp.new
	-rm p-exp.tmp
	mv p-exp.new ./p-exp.tab.c
d1461 1
a1461 1
# gdb/ dependencies
d1464 1
d1466 1
a1466 1
	$(serial_h) $(regcache_h) $(m68k_tdep_h)
d1470 1
a1470 2
	$(breakpoint_h) $(gdbcore_h) $(ada_lang_h) $(ui_out_h) $(block_h) \
	$(infcall_h) $(dictionary_h)
d1472 2
a1473 2
	$(inferior_h) $(symtab_h) $(target_h) $(regcache_h) $(gdbcore_h) \
	$(gregset_h) $(ada_lang_h)
d1480 1
a1480 1
	$(annotate_h) $(ada_lang_h) $(c_lang_h) $(infcall_h)
d1484 10
d1496 1
a1496 1
alphabsd-tdep.o: alphabsd-tdep.c $(defs_h) $(alpha_tdep_h) \
d1498 1
a1498 9
alphafbsd-tdep.o: alphafbsd-tdep.c $(defs_h) $(value_h) $(osabi_h) \
	$(alpha_tdep_h)
alpha-linux-tdep.o: alpha-linux-tdep.c $(defs_h) $(frame_h) $(gdb_assert_h) \
	$(osabi_h) $(alpha_tdep_h)
alpha-mdebug-tdep.o: alpha-mdebug-tdep.c $(defs_h) $(frame_h) \
	$(frame_unwind_h) $(frame_base_h) $(symtab_h) $(gdbcore_h) \
	$(block_h) $(gdb_assert_h) $(alpha_tdep_h)
alpha-nat.o: alpha-nat.c $(defs_h) $(gdb_string_h) $(inferior_h) \
	$(gdbcore_h) $(target_h) $(regcache_h) $(alpha_tdep_h) $(gregset_h)
d1500 1
a1500 1
	$(regcache_h) $(value_h) $(osabi_h) $(solib_svr4_h) $(alpha_tdep_h) \
a1501 22
alpha-osf1-tdep.o: alpha-osf1-tdep.c $(defs_h) $(frame_h) $(gdbcore_h) \
	$(value_h) $(osabi_h) $(gdb_string_h) $(objfiles_h) $(alpha_tdep_h)
alpha-tdep.o: alpha-tdep.c $(defs_h) $(doublest_h) $(frame_h) \
	$(frame_unwind_h) $(frame_base_h) $(dwarf2_frame_h) $(inferior_h) \
	$(symtab_h) $(value_h) $(gdbcmd_h) $(gdbcore_h) $(dis_asm_h) \
	$(symfile_h) $(objfiles_h) $(gdb_string_h) $(linespec_h) \
	$(regcache_h) $(reggroups_h) $(arch_utils_h) $(osabi_h) $(block_h) \
	$(elf_bfd_h) $(alpha_tdep_h)
amd64bsd-nat.o: amd64bsd-nat.c $(defs_h) $(inferior_h) $(regcache_h) \
	$(gdb_assert_h) $(x86_64_tdep_h) $(amd64_nat_h)
amd64fbsd-nat.o: amd64fbsd-nat.c $(defs_h) $(inferior_h) $(regcache_h) \
	$(gdb_assert_h) $(gregset_h) $(x86_64_tdep_h) $(amd64_nat_h)
amd64nbsd-nat.o: amd64nbsd-nat.c $(defs_h) $(gdb_assert_h) \
	$(x86_64_tdep_h) $(amd64_nat_h)
amd64fbsd-tdep.o: amd64fbsd-tdep.c $(defs_h) $(arch_utils_h) $(frame_h) \
	$(gdbcore_h) $(regcache_h) $(osabi_h) $(gdb_string_h) \
	$(x86_64_tdep_h)
amd64nbsd-tdep.o: amd64nbsd-tdep.c $(defs_h) $(arch_utils_h) $(frame_h) \
	$(gdbcore_h) $(osabi_h) $(gdb_assert_h) $(nbsd_tdep_h) \
	$(x86_64_tdep_h)
amd64-nat.o: amd64-nat.c $(defs_h) $(gdbarch_h) $(regcache_h) \
	$(gdb_assert_h) $(i386_tdep_h) $(x86_64_tdep_h)
d1504 6
a1509 3
arch-utils.o: arch-utils.c $(defs_h) $(arch_utils_h) $(buildsym_h) \
	$(gdbcmd_h) $(inferior_h) $(gdb_string_h) $(regcache_h) \
	$(gdb_assert_h) $(sim_regno_h) $(version_h) $(floatformat_h)
d1511 1
a1511 1
	$(gdb_string_h) $(regcache_h) $(arm_tdep_h) $(glibc_tdep_h) $(gregset_h)
d1514 6
a1519 2
	$(doublest_h) $(solib_svr4_h) $(osabi_h) $(arm_tdep_h) $(symtab_h) \
	$(symfile_h) $(objfiles_h)
d1522 4
a1525 12
armnbsd-tdep.o: armnbsd-tdep.c $(defs_h) $(osabi_h) $(arm_tdep_h) \
	$(nbsd_tdep_h) $(solib_svr4_h)
arm-tdep.o: arm-tdep.c $(defs_h) $(frame_h) $(inferior_h) $(gdbcmd_h) \
	$(gdbcore_h) $(symfile_h) $(gdb_string_h) $(dis_asm_h) $(regcache_h) \
	$(doublest_h) $(value_h) $(arch_utils_h) $(osabi_h) \
	$(frame_unwind_h) $(frame_base_h) $(trad_frame_h) $(arm_tdep_h) \
	$(gdb_sim_arm_h) $(elf_bfd_h) $(coff_internal_h) $(elf_arm_h) \
	$(gdb_assert_h) $(bfd_in2_h) $(libcoff_h)
avr-tdep.o: avr-tdep.c $(defs_h) $(frame_h) $(frame_unwind_h) \
	$(frame_base_h) $(trad_frame_h) $(gdbcmd_h) $(gdbcore_h) \
	$(inferior_h) $(symfile_h) $(arch_utils_h) $(regcache_h) \
	$(gdb_string_h) $(dis_asm_h)
d1528 1
a1528 2
	$(target_h) $(ax_h) $(ax_gdb_h) $(gdb_string_h) $(block_h) \
	$(regcache_h)
d1530 1
a1530 6
bcache.o: bcache.c $(defs_h) $(gdb_obstack_h) $(bcache_h) \
	$(gdb_string_h) $(gdb_assert_h)
bfd-target.o: bfd-target.c $(defs_h) $(target_h) $(bfd_target_h) \
	$(gdb_assert_h) $(gdb_string_h)
block.o: block.c $(defs_h) $(block_h) $(symtab_h) $(symfile_h) \
	$(gdb_obstack_h) $(cp_support_h)
d1533 1
a1533 2
	$(inferior_h) $(annotate_h) $(regcache_h) $(gdb_assert_h) \
	$(dummy_frame_h) $(command_h) $(gdbcmd_h) $(block_h)
d1538 2
a1539 3
	$(objfiles_h) $(source_h) $(linespec_h) $(completer_h) $(gdb_h) \
	$(ui_out_h) $(cli_script_h) $(gdb_assert_h) $(block_h) \
	$(gdb_events_h)
d1541 6
a1546 6
	$(symfile_h) $(objfiles_h) $(gdbtypes_h) $(gdb_assert_h) \
	$(complaints_h) $(gdb_string_h) $(expression_h) $(language_h) \
	$(bcache_h) $(filenames_h) $(macrotab_h) $(demangle_h) $(block_h) \
	$(cp_support_h) $(dictionary_h) $(buildsym_h) $(stabsread_h)
charset.o: charset.c $(defs_h) $(charset_h) $(gdbcmd_h) $(gdb_assert_h) \
	$(gdb_string_h)
d1549 13
a1561 2
	$(macroscope_h) $(gdb_assert_h) $(charset_h) $(gdb_string_h) \
	$(demangle_h) $(cp_support_h)
d1564 2
a1565 2
coff-pe-read.o: coff-pe-read.c $(coff_pe_read_h) $(bfd_h) $(defs_h) \
	$(gdbtypes_h) $(symtab_h) $(symfile_h) $(objfiles_h)
d1570 1
a1570 4
	$(target_h) $(gdb_assert_h) $(block_h) $(dictionary_h) \
	$(coff_pe_read_h)
coff-solib.o: coff-solib.c $(defs_h) $(frame_h) $(bfd_h) $(gdbcore_h) \
	$(symtab_h) $(symfile_h) $(objfiles_h)
d1574 1
a1574 2
	$(filenames_h) $(cli_decode_h) $(gdbcmd_h) $(completer_h) \
	$(language_h)
d1578 4
d1587 2
a1588 10
	$(gdbthread_h) $(regcache_h) $(symfile_h) $(exec_h)
core-regset.o: core-regset.c $(defs_h) $(command_h) $(gdbcore_h) \
	$(inferior_h) $(target_h) $(gdb_string_h) $(gregset_h)
core-sol2.o: core-sol2.c $(defs_h) $(gdb_string_h) $(regcache_h) \
	$(inferior_h) $(target_h) $(command_h) $(gdbcore_h) $(gregset_h)
cp-abi.o: cp-abi.c $(defs_h) $(value_h) $(cp_abi_h) $(command_h) $(gdbcmd_h) \
	$(ui_out_h) $(gdb_string_h)
cp-namespace.o: cp-namespace.c $(defs_h) $(cp_support_h) $(gdb_obstack_h) \
	$(symtab_h) $(symfile_h) $(gdb_assert_h) $(block_h) $(objfiles_h) \
	$(gdbtypes_h) $(dictionary_h) $(command_h)
d1590 1
a1590 4
	$(demangle_h) $(gdb_assert_h) $(gdbcmd_h) $(dictionary_h) \
	$(objfiles_h) $(frame_h) $(symtab_h) $(block_h) $(complaints_h)
cpu32bug-rom.o: cpu32bug-rom.c $(defs_h) $(gdbcore_h) $(target_h) \
	$(monitor_h) $(serial_h) $(regcache_h) $(m68k_tdep_h)
d1594 3
a1596 1
	$(cp_abi_h) $(valprint_h)
d1599 9
a1607 15
	$(opcode_cris_h) $(arch_utils_h) $(regcache_h) $(gdb_assert_h) \
	$(symfile_h) $(solib_h) $(solib_svr4_h) $(gdb_string_h) $(dis_asm_h)
c-typeprint.o: c-typeprint.c $(defs_h) $(gdb_obstack_h) $(bfd_h) $(symtab_h) \
	$(gdbtypes_h) $(expression_h) $(value_h) $(gdbcore_h) $(target_h) \
	$(language_h) $(demangle_h) $(c_lang_h) $(typeprint_h) $(cp_abi_h) \
	$(gdb_string_h)
c-valprint.o: c-valprint.c $(defs_h) $(gdb_string_h) $(symtab_h) \
	$(gdbtypes_h) $(expression_h) $(value_h) $(valprint_h) \
	$(language_h) $(c_lang_h) $(cp_abi_h) $(target_h)
d10v-tdep.o: d10v-tdep.c $(defs_h) $(frame_h) $(frame_unwind_h) \
	$(frame_base_h) $(symtab_h) $(gdbtypes_h) $(gdbcmd_h) $(gdbcore_h) \
	$(gdb_string_h) $(value_h) $(inferior_h) $(dis_asm_h) $(symfile_h) \
	$(objfiles_h) $(language_h) $(arch_utils_h) $(regcache_h) \
	$(remote_h) $(floatformat_h) $(gdb_sim_d10v_h) $(sim_regno_h) \
	$(disasm_h) $(trad_frame_h) $(gdb_assert_h)
d1609 1
a1609 1
	$(serial_h) $(regcache_h) $(m68k_tdep_h)
d1614 1
a1614 1
	$(cp_abi_h) $(gdb_assert_h) $(aout_aout64_h) $(aout_stab_gnu_h)
a1619 2
dictionary.o: dictionary.c $(defs_h) $(gdb_obstack_h) $(symtab_h) \
	$(buildsym_h) $(gdb_assert_h) $(dictionary_h)
d1622 2
a1623 2
disasm.o: disasm.c $(defs_h) $(target_h) $(value_h) $(ui_out_h) \
	$(gdb_string_h) $(disasm_h) $(gdbcore_h) $(dis_asm_h)
d1627 2
a1628 5
dsrec.o: dsrec.c $(defs_h) $(serial_h) $(srec_h) $(gdb_assert_h) \
	$(gdb_string_h)
dummy-frame.o: dummy-frame.c $(defs_h) $(dummy_frame_h) $(regcache_h) \
	$(frame_h) $(inferior_h) $(gdb_assert_h) $(frame_unwind_h) \
	$(command_h) $(gdbcmd_h)
d1630 4
a1633 12
	$(serial_h) $(inferior_h) $(command_h) $(gdb_string_h) $(regcache_h) \
	$(mips_tdep_h)
dwarf2expr.o: dwarf2expr.c $(defs_h) $(symtab_h) $(gdbtypes_h) $(value_h) \
	$(gdbcore_h) $(elf_dwarf2_h) $(dwarf2expr_h)
dwarf2-frame.o: dwarf2-frame.c $(defs_h) $(dwarf2expr_h) $(elf_dwarf2_h) \
	$(frame_h) $(frame_base_h) $(frame_unwind_h) $(gdbcore_h) \
	$(gdbtypes_h) $(symtab_h) $(objfiles_h) $(regcache_h) \
	$(gdb_assert_h) $(gdb_string_h) $(complaints_h) $(dwarf2_frame_h)
dwarf2loc.o: dwarf2loc.c $(defs_h) $(ui_out_h) $(value_h) $(frame_h) \
	$(gdbcore_h) $(target_h) $(inferior_h) $(ax_h) $(ax_gdb_h) \
	$(regcache_h) $(objfiles_h) $(elf_dwarf2_h) $(dwarf2expr_h) \
	$(dwarf2loc_h) $(gdb_string_h)
d1637 2
a1638 2
	$(language_h) $(complaints_h) $(bcache_h) $(dwarf2expr_h) \
	$(dwarf2loc_h) $(cp_support_h) $(gdb_string_h) $(gdb_assert_h)
d1648 1
a1648 2
	$(f_lang_h) $(cp_abi_h) $(infcall_h) $(objc_lang_h) $(block_h) \
	$(parser_defs_h)
d1652 1
a1652 2
	$(terminal_h) $(event_loop_h) $(event_top_h) $(interps_h) \
	$(gdbcmd_h)
d1655 1
a1655 2
	$(gdb_string_h) $(gdbcore_h) $(gdb_stat_h) $(xcoffsolib_h) \
	$(exec_h)
d1657 10
a1666 2
	$(value_h) $(language_h) $(parser_defs_h) $(user_regs_h) $(target_h) \
	$(gdb_string_h) $(block_h)
d1672 1
a1672 4
	$(user_regs_h) $(block_h)
f-lang.o: f-lang.c $(defs_h) $(gdb_string_h) $(symtab_h) $(gdbtypes_h) \
	$(expression_h) $(parser_defs_h) $(language_h) $(f_lang_h) \
	$(valprint_h) $(value_h)
d1676 1
a1676 1
frame-base.o: frame-base.c $(defs_h) $(frame_base_h) $(frame_h)
d1678 7
a1684 19
	$(regcache_h) $(gdb_assert_h) $(gdb_string_h) $(user_regs_h) \
	$(gdb_obstack_h) $(dummy_frame_h) $(sentinel_frame_h) $(gdbcore_h) \
	$(annotate_h) $(language_h) $(frame_unwind_h) $(frame_base_h) \
	$(command_h) $(gdbcmd_h)
frame-unwind.o: frame-unwind.c $(defs_h) $(frame_h) $(frame_unwind_h) \
	$(gdb_assert_h) $(dummy_frame_h)
frv-tdep.o: frv-tdep.c $(defs_h) $(gdb_string_h) $(inferior_h) $(symfile_h) \
	$(gdbcore_h) $(arch_utils_h) $(regcache_h) $(frame_h) \
	$(frame_unwind_h) $(frame_base_h) $(trad_frame_h) $(dis_asm_h) \
	$(gdb_assert_h) $(sim_regno_h) $(gdb_sim_frv_h) $(frv_desc_h)
f-typeprint.o: f-typeprint.c $(defs_h) $(gdb_obstack_h) $(bfd_h) $(symtab_h) \
	$(gdbtypes_h) $(expression_h) $(value_h) $(gdbcore_h) $(target_h) \
	$(f_lang_h) $(gdb_string_h)
f-valprint.o: f-valprint.c $(defs_h) $(gdb_string_h) $(symtab_h) \
	$(gdbtypes_h) $(expression_h) $(value_h) $(valprint_h) $(language_h) \
	$(f_lang_h) $(frame_h) $(gdbcore_h) $(command_h) $(block_h)
gcore.o: gcore.c $(defs_h) $(elf_bfd_h) $(infcall_h) $(inferior_h) \
	$(gdbcore_h) $(objfiles_h) $(symfile_h) $(cli_decode_h) \
	$(gdb_assert_h)
d1686 4
a1689 5
	$(symcat_h) $(floatformat_h) $(gdb_assert_h) $(gdb_string_h) \
	$(gdb_events_h) $(reggroups_h) $(osabi_h) $(symfile_h) \
	$(gdb_obstack_h)
gdb.o: gdb.c $(defs_h) $(main_h) $(gdb_string_h) $(interps_h)
gdb-events.o: gdb-events.c $(defs_h) $(gdb_events_h) $(gdbcmd_h)
d1696 2
a1697 2
	$(gdbcore_h) $(gdbthread_h) $(gdb_assert_h) $(gdb_obstack_h) \
	$(gnu_nat_h) $(exc_request_S_h) $(notify_S_h) $(process_reply_S_h) \
d1707 7
a1713 3
h8300-tdep.o: h8300-tdep.c $(defs_h) $(value_h) $(inferior_h) $(symfile_h) \
	$(arch_utils_h) $(regcache_h) $(gdbcore_h) $(objfiles_h) $(gdbcmd_h) \
	$(gdb_assert_h) $(dis_asm_h)
d1716 4
d1722 1
a1722 3
	$(gdb_wait_h) $(regcache_h) $(gdb_string_h)
hppa-hpux-tdep.o: hppa-hpux-tdep.c $(defs_h) $(arch_utils_h) $(gdbcore_h) \
	$(osabi_h) $(gdb_string_h) $(frame_h)
a1724 5
hppa-tdep.o: hppa-tdep.c $(defs_h) $(frame_h) $(bfd_h) $(inferior_h) \
	$(value_h) $(regcache_h) $(completer_h) $(language_h) $(osabi_h) \
	$(gdb_assert_h) $(infttrace_h) $(symtab_h) $(infcall_h) $(dis_asm_h) \
	$(a_out_encap_h) $(gdb_stat_h) $(gdb_wait_h) $(gdbcore_h) \
	$(gdbcmd_h) $(target_h) $(symfile_h) $(objfiles_h) $(hppa_tdep_h)
d1728 1
a1728 1
	$(somsolib_h) $(gdb_assert_h) $(gdb_string_h)
d1730 16
a1745 1
	$(inferior_h) $(regcache_h) $(gdb_stat_h) $(gdbcore_h)
d1750 2
a1751 7
	$(gdbcore_h) $(regcache_h) $(osabi_h) $(gdb_string_h) $(i386_tdep_h)
i386-cygwin-tdep.o: i386-cygwin-tdep.c $(defs_h) $(osabi_h) $(gdb_string_h) \
	$(i386_tdep_h)
i386fbsd-nat.o: i386fbsd-nat.c $(defs_h) $(inferior_h) $(regcache_h) \
	$(i386_tdep_h)
i386fbsd-tdep.o: i386fbsd-tdep.c $(defs_h) $(arch_utils_h) $(osabi_h) \
	$(i386_tdep_h) $(i387_tdep_h)
d1754 2
a1755 16
	$(i387_tdep_h) $(gregset_h)
i386gnu-tdep.o: i386gnu-tdep.c $(defs_h) $(osabi_h) $(i386_tdep_h)
i386-interix-nat.o: i386-interix-nat.c $(defs_h) $(gdb_string_h) \
	$(gdbcore_h) $(gregset_h) $(regcache_h)
i386-interix-tdep.o: i386-interix-tdep.c $(defs_h) $(arch_utils_h) \
	$(frame_h) $(gdb_string_h) $(gdb_stabs_h) $(gdbcore_h) $(gdbtypes_h) \
	$(i386_tdep_h) $(inferior_h) $(libbfd_h) $(objfiles_h) $(osabi_h) \
	$(regcache_h)
i386-linux-nat.o: i386-linux-nat.c $(defs_h) $(inferior_h) $(gdbcore_h) \
	$(regcache_h) $(linux_nat_h) $(gdb_assert_h) $(gdb_string_h) \
	$(gregset_h) $(i387_tdep_h) $(i386_tdep_h) $(i386_linux_tdep_h) \
	$(gdb_proc_service_h)
i386-linux-tdep.o: i386-linux-tdep.c $(defs_h) $(gdbcore_h) $(frame_h) \
	$(value_h) $(regcache_h) $(inferior_h) $(reggroups_h) $(symtab_h) \
	$(symfile_h) $(objfiles_h) $(solib_svr4_h) $(osabi_h) $(i386_tdep_h) \
	$(i386_linux_tdep_h) $(glibc_tdep_h)
d1757 3
a1759 2
	$(regcache_h) $(target_h) $(osabi_h) $(i386_tdep_h)
i386-nat.o: i386-nat.c $(defs_h) $(breakpoint_h) $(command_h) $(gdbcmd_h)
d1761 3
a1763 6
	$(regcache_h) $(arch_utils_h) $(osabi_h) $(i386_tdep_h) \
	$(i387_tdep_h) $(nbsd_tdep_h) $(solib_svr4_h)
i386-nto-tdep.o: i386-nto-tdep.c $(gdb_string_h) $(gdb_assert_h) $(defs_h) \
	$(frame_h) $(target_h) $(regcache_h) $(solib_svr4_h) $(i386_tdep_h) \
	$(nto_tdep_h) $(osabi_h) $(i387_tdep_h)
i386obsd-nat.o: i386obsd-nat.c $(defs_h) $(i386_tdep_h)
d1765 3
a1767 11
	$(regcache_h) $(osabi_h) $(i386_tdep_h) $(i387_tdep_h)
i386-sol2-tdep.o: i386-sol2-tdep.c $(defs_h) $(value_h) $(osabi_h) \
	$(i386_tdep_h)
i386-stub.o: i386-stub.c
i386-tdep.o: i386-tdep.c $(defs_h) $(arch_utils_h) $(command_h) \
	$(dummy_frame_h) $(dwarf2_frame_h) $(doublest_h) $(floatformat_h) \
	$(frame_h) $(frame_base_h) $(frame_unwind_h) $(inferior_h) \
	$(gdbcmd_h) $(gdbcore_h) $(objfiles_h) $(osabi_h) $(regcache_h) \
	$(reggroups_h) $(regset_h) $(symfile_h) $(symtab_h) $(target_h) \
	$(value_h) $(dis_asm_h) $(gdb_assert_h) $(gdb_string_h) \
	$(i386_tdep_h) $(i387_tdep_h)
d1770 4
a1773 6
i386v-nat.o: i386v-nat.c $(defs_h) $(frame_h) $(inferior_h) $(language_h) \
	$(gdbcore_h) $(gdb_stat_h) $(floatformat_h) $(target_h) \
	$(i386_tdep_h)
i387-tdep.o: i387-tdep.c $(defs_h) $(doublest_h) $(floatformat_h) $(frame_h) \
	$(gdbcore_h) $(inferior_h) $(language_h) $(regcache_h) $(value_h) \
	$(gdb_assert_h) $(gdb_string_h) $(i386_tdep_h) $(i387_tdep_h)
d1778 2
a1779 2
ia64-linux-nat.o: ia64-linux-nat.c $(defs_h) $(gdb_string_h) $(inferior_h) \
	$(target_h) $(gdbcore_h) $(regcache_h) $(gdb_wait_h) $(gregset_h)
d1782 4
a1785 7
	$(arch_utils_h) $(floatformat_h) $(regcache_h) $(reggroups_h) \
	$(frame_h) $(frame_base_h) $(frame_unwind_h) $(doublest_h) \
	$(value_h) $(gdb_assert_h) $(objfiles_h) $(elf_common_h) \
	$(elf_bfd_h) $(dis_asm_h) $(libunwind_frame_h)
infcall.o: infcall.c $(defs_h) $(breakpoint_h) $(target_h) $(regcache_h) \
	$(inferior_h) $(gdb_assert_h) $(block_h) $(gdbcore_h) $(language_h) \
	$(symfile_h) $(gdbcmd_h) $(command_h) $(gdb_string_h) $(infcall_h)
d1790 1
a1790 3
	$(parser_defs_h) $(regcache_h) $(reggroups_h) $(block_h)
inf-loop.o: inf-loop.c $(defs_h) $(inferior_h) $(target_h) $(event_loop_h) \
	$(event_top_h) $(inf_loop_h) $(remote_h)
d1792 1
a1792 2
	$(serial_h) $(terminal_h) $(target_h) $(gdbthread_h) $(gdb_string_h) \
	$(inflow_h)
d1799 1
a1799 2
	$(symfile_h) $(top_h) $(inf_loop_h) $(regcache_h) $(value_h) \
	$(observer_h) $(language_h)
d1801 1
a1801 1
	$(gdbcore_h) $(command_h) $(gdb_stat_h) $(gdb_wait_h) $(inflow_h)
d1803 3
a1805 5
	$(gdb_string_h) $(gdb_wait_h) $(command_h) $(gdbthread_h) \
	$(gdbcore_h)
interps.o: interps.c $(defs_h) $(gdbcmd_h) $(ui_out_h) $(event_loop_h) \
	$(event_top_h) $(interps_h) $(completer_h) $(gdb_string_h) \
	$(gdb_events_h) $(gdb_assert_h) $(top_h)
d1811 1
a1811 1
	$(jv_lang_h) $(gdbcore_h) $(block_h) $(demangle_h) $(dictionary_h)
d1818 1
a1820 1
kod-cisco.o: kod-cisco.c $(defs_h) $(gdb_string_h) $(kod_h)
d1823 3
a1825 5
	$(parser_defs_h) $(jv_lang_h) $(demangle_h)
libunwind-frame.o: libunwind-frame.c $(defs_h) \
	$(frame_h) $(frame_base_h) $(frame_unwind_h) $(gdbcore_h) \
	$(gdbtypes_h) $(symtab_h) $(objfiles_h) $(regcache_h) \
	$(gdb_assert_h) $(gdb_string_h) $(complaints_h) $(libunwind_frame_h)
d1827 5
a1831 11
	$(symfile_h) $(objfiles_h) $(source_h) $(demangle_h) $(value_h) \
	$(completer_h) $(cp_abi_h) $(parser_defs_h) $(block_h) \
	$(objc_lang_h) $(linespec_h)
lin-lwp.o: lin-lwp.c $(defs_h) $(gdb_assert_h) $(gdb_string_h) $(gdb_wait_h) \
	$(gdbthread_h) $(inferior_h) $(target_h) $(regcache_h) $(gdbcmd_h) \
	$(linux_nat_h)
linux-nat.o: linux-nat.c $(defs_h) $(inferior_h) $(target_h) $(gdb_wait_h) \
	$(linux_nat_h)
linux-proc.o: linux-proc.c $(defs_h) $(inferior_h) $(gdb_stat_h) \
	$(regcache_h) $(gregset_h) $(gdbcore_h) $(gdbthread_h) $(elf_bfd_h) \
	$(cli_decode_h) $(gdb_string_h) $(linux_nat_h)
d1841 3
d1848 4
a1851 7
m32r-tdep.o: m32r-tdep.c $(defs_h) $(frame_h) $(frame_unwind_h) \
	$(frame_base_h) $(symtab_h) $(gdbtypes_h) $(gdbcmd_h) $(gdbcore_h) \
	$(gdb_string_h) $(value_h) $(inferior_h) $(symfile_h) $(objfiles_h) \
	$(language_h) $(arch_utils_h) $(regcache_h) $(trad_frame_h) \
	$(gdb_assert_h) $(dis_asm_h)
m68hc11-tdep.o: m68hc11-tdep.c $(defs_h) $(frame_h) $(frame_unwind_h) \
	$(frame_base_h) $(dwarf2_frame_h) $(trad_frame_h) $(symtab_h) \
d1854 6
a1859 2
	$(arch_utils_h) $(regcache_h) $(reggroups_h) $(target_h) \
	$(opcode_m68hc11_h) $(elf_m68hc11_h) $(elf_bfd_h)
d1861 2
a1862 7
	$(language_h) $(gdbcore_h) $(gdb_string_h) $(regcache_h) \
	$(m68k_tdep_h) $(gdb_stat_h) $(floatformat_h) $(target_h) \
	$(gregset_h)
m68klinux-tdep.o: m68klinux-tdep.c $(defs_h) $(gdbcore_h) $(doublest_h) \
	$(floatformat_h) $(frame_h) $(target_h) $(gdb_string_h) \
	$(gdbtypes_h) $(osabi_h) $(regcache_h) $(objfiles_h) $(symtab_h) \
	$(m68k_tdep_h)
d1866 2
a1867 6
m68k-stub.o: m68k-stub.c
m68k-tdep.o: m68k-tdep.c $(defs_h) $(dwarf2_frame_h) $(frame_h) \
	$(frame_base_h) $(frame_unwind_h) $(symtab_h) $(gdbcore_h) \
	$(value_h) $(gdb_string_h) $(gdb_assert_h) $(inferior_h) \
	$(regcache_h) $(arch_utils_h) $(osabi_h) $(dis_asm_h) $(m68k_tdep_h) \
	$(gregset_h)
d1872 2
a1873 2
macroscope.o: macroscope.c $(defs_h) $(macroscope_h) $(symtab_h) $(source_h) \
	$(target_h) $(frame_h) $(inferior_h) $(complaints_h)
d1879 1
a1879 1
	$(event_loop_h) $(ui_out_h) $(interps_h) $(main_h)
d1887 1
a1887 1
	$(arch_utils_h) $(gdb_string_h) $(disasm_h) $(dis_asm_h)
d1891 5
a1895 3
	$(block_h) $(dictionary_h) $(coff_sym_h) $(coff_symconst_h) \
	$(gdb_stat_h) $(gdb_string_h) $(bfd_h) $(coff_ecoff_h) $(libaout_h) \
	$(aout_aout64_h) $(aout_stab_gnu_h) $(expression_h) $(language_h)
a1897 2
mem-break.o: mem-break.c $(defs_h) $(symtab_h) $(breakpoint_h) $(inferior_h) \
	$(target_h)
d1903 1
a1903 2
	$(solib_svr4_h) $(osabi_h) $(mips_tdep_h) $(gdb_string_h) \
	$(gdb_assert_h)
d1905 6
d1914 2
a1915 2
	$(target_h) $(value_h) $(osabi_h) $(nbsd_tdep_h) $(mipsnbsd_tdep_h) \
	$(solib_svr4_h)
a1919 6
mips-tdep.o: mips-tdep.c $(defs_h) $(gdb_string_h) $(gdb_assert_h) \
	$(frame_h) $(inferior_h) $(symtab_h) $(value_h) $(gdbcmd_h) \
	$(language_h) $(gdbcore_h) $(symfile_h) $(objfiles_h) $(gdbtypes_h) \
	$(target_h) $(arch_utils_h) $(regcache_h) $(osabi_h) $(mips_tdep_h) \
	$(block_h) $(reggroups_h) $(opcode_mips_h) $(elf_mips_h) \
	$(elf_bfd_h) $(symcat_h) $(sim_regno_h) $(dis_asm_h)
d1922 3
d1927 4
a1930 2
	$(symfile_h) $(regcache_h) $(arch_utils_h) $(gdb_assert_h) \
	$(dis_asm_h)
d1935 1
d1937 4
a1940 1
	$(objfiles_h) $(buildsym_h) $(stabsread_h) $(block_h)
d1943 1
a1943 17
ns32knbsd-tdep.o: ns32knbsd-tdep.c $(defs_h) $(osabi_h) $(ns32k_tdep_h) \
	$(gdb_string_h)
ns32k-tdep.o: ns32k-tdep.c $(defs_h) $(frame_h) $(gdbtypes_h) $(gdbcore_h) \
	$(inferior_h) $(regcache_h) $(target_h) $(arch_utils_h) $(osabi_h) \
	$(dis_asm_h) $(ns32k_tdep_h) $(gdb_string_h)
nto-procfs.o: nto-procfs.c $(defs_h) $(gdb_dirent_h) $(gdb_string_h) \
	$(gdbcore_h) $(inferior_h) $(target_h) $(objfiles_h) $(gdbthread_h) \
	$(nto_tdep_h) $(command_h) $(regcache_h)
nto-tdep.o: nto-tdep.c $(gdb_stat_h) $(gdb_string_h) $(nto_tdep_h) $(top_h) \
	$(cli_decode_h) $(cli_cmds_h) $(inferior_h) $(gdbarch_h) $(bfd_h) \
	$(elf_bfd_h) $(solib_svr4_h) $(gdbcore_h)
objc-lang.o: objc-lang.c $(defs_h) $(symtab_h) $(gdbtypes_h) $(expression_h) \
	$(parser_defs_h) $(language_h) $(c_lang_h) $(objc_lang_h) \
	$(complaints_h) $(value_h) $(symfile_h) $(objfiles_h) \
	$(gdb_string_h) $(target_h) $(gdbcore_h) $(gdbcmd_h) $(frame_h) \
	$(gdb_regex_h) $(regcache_h) $(block_h) $(infcall_h) $(valprint_h) \
	$(gdb_assert_h)
d1945 2
a1946 4
	$(objfiles_h) $(gdb_stabs_h) $(target_h) $(bcache_h) $(gdb_assert_h) \
	$(gdb_stat_h) $(gdb_obstack_h) $(gdb_string_h) $(hashtab_h) \
	$(breakpoint_h) $(block_h) $(dictionary_h) $(mmalloc_h)
observer.o: observer.c $(defs_h) $(observer_h)
d1952 12
a1963 2
osabi.o: osabi.c $(defs_h) $(gdb_assert_h) $(gdb_string_h) $(osabi_h) \
	$(arch_utils_h) $(gdbcmd_h) $(command_h) $(elf_bfd_h)
d1967 1
a1967 1
	$(regcache_h) $(exec_h)
d1971 1
a1971 4
	$(doublest_h) $(gdb_assert_h) $(block_h)
p-lang.o: p-lang.c $(defs_h) $(gdb_string_h) $(symtab_h) $(gdbtypes_h) \
	$(expression_h) $(parser_defs_h) $(language_h) $(p_lang_h) \
	$(valprint_h) $(value_h)
d1976 7
a1984 7
ppc-linux-nat.o: ppc-linux-nat.c $(defs_h) $(gdb_string_h) $(frame_h) \
	$(inferior_h) $(gdbcore_h) $(regcache_h) $(gdb_wait_h) $(gregset_h) \
	$(ppc_tdep_h)
ppc-linux-tdep.o: ppc-linux-tdep.c $(defs_h) $(frame_h) $(inferior_h) \
	$(symtab_h) $(target_h) $(gdbcore_h) $(gdbcmd_h) $(symfile_h) \
	$(objfiles_h) $(regcache_h) $(value_h) $(osabi_h) $(solib_svr4_h) \
	$(ppc_tdep_h)
d1988 1
a1988 1
	$(target_h) $(breakpoint_h) $(value_h) $(osabi_h) $(ppc_tdep_h) \
a1989 3
ppc-sysv-tdep.o: ppc-sysv-tdep.c $(defs_h) $(gdbcore_h) $(inferior_h) \
	$(regcache_h) $(value_h) $(gdb_string_h) $(gdb_assert_h) \
	$(ppc_tdep_h) $(target_h)
d1994 2
a1995 3
	$(gdb_assert_h) $(block_h) $(disasm_h)
proc-api.o: proc-api.c $(defs_h) $(gdbcmd_h) $(completer_h) $(gdb_wait_h) \
	$(proc_utils_h)
a1997 4
procfs.o: procfs.c $(defs_h) $(inferior_h) $(target_h) $(gdbcore_h) \
	$(elf_bfd_h) $(gdbcmd_h) $(gdbthread_h) $(gdb_wait_h) \
	$(gdb_assert_h) $(inflow_h) $(gdb_dirent_h) $(X_OK) $(gdb_stat_h) \
	$(proc_utils_h) $(gregset_h)
d2001 5
a2005 7
p-typeprint.o: p-typeprint.c $(defs_h) $(gdb_obstack_h) $(bfd_h) $(symtab_h) \
	$(gdbtypes_h) $(expression_h) $(value_h) $(gdbcore_h) $(target_h) \
	$(language_h) $(p_lang_h) $(typeprint_h) $(gdb_string_h)
p-valprint.o: p-valprint.c $(defs_h) $(gdb_obstack_h) $(symtab_h) \
	$(gdbtypes_h) $(expression_h) $(value_h) $(command_h) $(gdbcmd_h) \
	$(gdbcore_h) $(demangle_h) $(valprint_h) $(typeprint_h) \
	$(language_h) $(target_h) $(annotate_h) $(p_lang_h) $(cp_abi_h)
d2007 6
a2012 9
	$(gdbcmd_h) $(regcache_h) $(reggroups_h) $(gdb_assert_h) \
	$(gdb_string_h) $(gdbcmd_h)
reggroups.o: reggroups.c $(defs_h) $(reggroups_h) $(gdbtypes_h) \
	$(gdb_assert_h) $(regcache_h) $(command_h) $(gdbcmd_h)
remote.o: remote.c $(defs_h) $(gdb_string_h) $(inferior_h) $(bfd_h) \
	$(symfile_h) $(target_h) $(gdbcmd_h) $(objfiles_h) $(gdb_stabs_h) \
	$(gdbthread_h) $(remote_h) $(regcache_h) $(value_h) $(gdb_assert_h) \
	$(event_loop_h) $(event_top_h) $(inf_loop_h) $(serial_h) \
	$(gdbcore_h) $(remote_fileio_h)
d2016 3
d2020 1
a2020 4
	$(serial_h) $(regcache_h) $(m68k_tdep_h)
remote-fileio.o: remote-fileio.c $(defs_h) $(gdb_string_h) $(gdbcmd_h) \
	$(remote_h) $(gdb_fileio_h) $(gdb_wait_h) $(gdb_stat_h) \
	$(remote_fileio_h)
a2022 2
remote-m32r-sdi.o: remote-m32r-sdi.c $(defs_h) $(gdbcmd_h) $(gdbcore_h) \
	$(inferior_h) $(target_h) $(regcache_h) $(gdb_string_h) $(serial_h)
d2025 4
a2028 1
	$(gdb_string_h) $(gdb_stat_h) $(regcache_h) $(mips_tdep_h)
d2050 5
d2060 1
a2060 5
remote-vx.o: remote-vx.c $(defs_h) $(frame_h) $(inferior_h) $(target_h) \
	$(gdbcore_h) $(command_h) $(symtab_h) $(complaints_h) $(gdbcmd_h) \
	$(bfd_h) $(symfile_h) $(objfiles_h) $(gdb_stabs_h) $(regcache_h) \
	$(gdb_string_h) $(vx_share_ptrace_h) $(vx_share_xdr_ptrace_h) \
	$(vx_share_xdr_ld_h) $(vx_share_xdr_rdb_h) $(vx_share_dbgRpcLib_h)
d2071 5
d2077 1
a2077 1
	$(serial_h) $(regcache_h) $(value_h) $(m68k_tdep_h)
d2085 3
a2087 3
	$(parser_defs_h) $(osabi_h) $(libbfd_h) $(coff_internal_h) \
	$(libcoff_h) $(coff_xcoff_h) $(libxcoff_h) $(elf_bfd_h) \
	$(solib_svr4_h) $(ppc_tdep_h) $(gdb_assert_h) $(dis_asm_h)
d2092 1
a2092 1
	$(value_h) $(gdb_assert_h) $(dis_asm_h)
d2098 1
a2098 1
	$(scm_tags_h) $(source_h) $(gdb_string_h) $(gdbcore_h) $(infcall_h)
a2101 2
sentinel-frame.o: sentinel-frame.c $(defs_h) $(regcache_h) \
	$(sentinel_frame_h) $(inferior_h) $(frame_unwind_h)
a2103 1
serial.o: serial.c $(defs_h) $(serial_h) $(gdb_string_h) $(gdbcmd_h)
d2109 7
d2119 1
a2119 7
sh64-tdep.o: sh64-tdep.c $(defs_h) $(frame_h) $(symtab_h) $(symfile_h) \
	$(gdbtypes_h) $(gdbcmd_h) $(gdbcore_h) $(value_h) $(dis_asm_h) \
	$(inferior_h) $(gdb_string_h) $(arch_utils_h) $(floatformat_h) \
	$(regcache_h) $(doublest_h) $(osabi_h) $(elf_bfd_h) $(solib_svr4_h) \
	$(elf_sh_h) $(gdb_sim_sh_h)
shnbsd-nat.o: shnbsd-nat.c $(defs_h) $(inferior_h) $(sh_tdep_h) \
	$(shnbsd_tdep_h)
d2121 4
a2124 9
	$(osabi_h) $(solib_svr4_h) $(nbsd_tdep_h) $(sh_tdep_h) \
	$(shnbsd_tdep_h)
sh-stub.o: sh-stub.c
sh-tdep.o: sh-tdep.c $(defs_h) $(frame_h) $(frame_base_h) $(frame_unwind_h) \
	$(dwarf2_frame_h) $(symtab_h) $(symfile_h) $(gdbtypes_h) $(gdbcmd_h) \
	$(gdbcore_h) $(value_h) $(dis_asm_h) $(inferior_h) $(gdb_string_h) \
	$(gdb_assert_h) $(arch_utils_h) $(floatformat_h) $(regcache_h) \
	$(doublest_h) $(osabi_h) $(sh_tdep_h) $(elf_bfd_h) $(solib_svr4_h) \
	$(elf_sh_h) $(gdb_sim_sh_h)
a2128 4
solib.o: solib.c $(defs_h) $(gdb_string_h) $(symtab_h) $(bfd_h) $(symfile_h) \
	$(objfiles_h) $(gdbcore_h) $(command_h) $(target_h) $(frame_h) \
	$(gdb_regex_h) $(inferior_h) $(environ_h) $(language_h) $(gdbcmd_h) \
	$(completer_h) $(filenames_h) $(solist_h) $(exec_h)
d2139 5
a2143 5
	$(gdbcore_h) $(target_h) $(inferior_h) $(solist_h) $(solib_svr4_h) \
	$(bfd_target_h) $(exec_h)
sol-thread.o: sol-thread.c $(defs_h) $(gdbthread_h) $(target_h) \
	$(inferior_h) $(gdb_stat_h) $(gdbcmd_h) $(gdbcore_h) $(regcache_h) \
	$(symfile_h) $(gdb_string_h) $(gregset_h)
d2150 1
a2150 1
	$(regcache_h) $(gdb_assert_h) $(exec_h)
d2156 1
a2156 14
sparc64fbsd-nat.o: sparc64fbsd-nat.c $(defs_h) $(sparc64_tdep_h) \
	$(sparcbsd_nat_h)
sparc64fbsd-tdep.o: sparc64fbsd-tdep.c $(defs_h) $(gdbcore_h) $(osabi_h) \
	$(regcache_h) $(target_h) $(gdb_string_h) $(sparc64_tdep_h)
sparc64nbsd-nat.o: sparc64nbsd-nat.c $(defs_h) $(inferior_h) $(regcache_h) \
	$(sparc_tdep_h) $(sparcnbsd_tdep_h)
sparc64-tdep.o: sparc64-tdep.c $(defs_h) $(arch_utils_h) $(floatformat_h) \
	$(frame_h) $(frame_base_h) $(frame_unwind_h) $(gdbcore_h) \
	$(gdbtypes_h) $(osabi_h) $(regcache_h) $(target_h) $(value_h) \
	$(gdb_assert_h) $(gdb_string_h) $(sparc64_tdep_h)
sparcbsd-nat.o: sparcbsd-nat.c $(defs_h) $(inferior_h) $(regcache_h) \
	$(sparc64_tdep_h) $(sparcbsd_nat_h)
sparc-linux-nat.o: sparc-linux-nat.c $(defs_h) $(regcache_h) $(sparc_tdep_h) \
	$(gregset_h)
d2158 1
a2158 6
	$(regcache_h) $(sparc_tdep_h) $(gdb_wait_h)
sparcnbsd-nat.o: sparcnbsd-nat.c $(defs_h) $(inferior_h) $(regcache_h) \
	$(sparc_tdep_h) $(sparcnbsd_tdep_h)
sparcnbsd-tdep.o: sparcnbsd-tdep.c $(defs_h) $(gdbcore_h) $(regcache_h) \
	$(target_h) $(value_h) $(osabi_h) $(gdb_string_h) $(sparc_tdep_h) \
	$(sparcnbsd_tdep_h) $(nbsd_tdep_h) $(solib_svr4_h)
d2162 15
a2176 2
	$(regcache_h) $(osabi_h) $(dis_asm_h) $(sparc_tdep_h) $(gregset_h) \
	$(gdbcore_h) $(gdb_assert_h) $(symfile_h)
d2181 1
a2181 1
	$(doublest_h) $(cp_abi_h) $(cp_support_h) $(stabsread_h)
d2184 2
a2185 3
	$(gdbcore_h) $(target_h) $(source_h) $(breakpoint_h) $(demangle_h) \
	$(inferior_h) $(annotate_h) $(ui_out_h) $(block_h) $(stack_h) \
	$(gdb_assert_h) $(dictionary_h) $(reggroups_h) $(regcache_h)
d2188 1
a2188 1
std-regs.o: std-regs.c $(defs_h) $(user_regs_h) $(frame_h) $(gdbtypes_h) \
d2192 9
a2200 7
symfile.o: symfile.c $(defs_h) $(bfdlink_h) $(symtab_h) $(gdbtypes_h) \
	$(gdbcore_h) $(frame_h) $(target_h) $(value_h) $(symfile_h) \
	$(objfiles_h) $(source_h) $(gdbcmd_h) $(breakpoint_h) $(language_h) \
	$(complaints_h) $(demangle_h) $(inferior_h) $(filenames_h) \
	$(gdb_stabs_h) $(gdb_obstack_h) $(completer_h) $(bcache_h) \
	$(hashtab_h) $(gdb_assert_h) $(block_h) $(gdb_string_h) \
	$(gdb_stat_h)
d2203 1
a2203 2
	$(gdb_obstack_h) $(language_h) $(bcache_h) $(block_h) $(gdb_regex_h) \
	$(dictionary_h) $(gdb_string_h)
d2207 3
a2209 3
	$(language_h) $(demangle_h) $(inferior_h) $(linespec_h) $(source_h) \
	$(filenames_h) $(objc_lang_h) $(hashtab_h) $(gdb_obstack_h) \
	$(block_h) $(dictionary_h) $(gdb_string_h) $(gdb_stat_h) $(cp_abi_h)
d2212 4
a2215 2
	$(gdb_wait_h) $(dcache_h) $(regcache_h) $(gdb_assert_h) \
	$(gdbcore_h)
a2218 3
thread-db.o: thread-db.c $(defs_h) $(gdb_assert_h) $(gdb_proc_service_h) \
	$(gdb_thread_db_h) $(bfd_h) $(gdbthread_h) $(inferior_h) \
	$(symfile_h) $(objfiles_h) $(target_h) $(regcache_h) $(solib_svr4_h)
d2229 2
a2230 4
	$(linespec_h) $(regcache_h) $(completer_h) $(gdb_events_h) \
	$(block_h) $(dictionary_h) $(ax_h) $(ax_gdb_h)
trad-frame.o: trad-frame.c $(defs_h) $(frame_h) $(trad_frame_h) \
	$(regcache_h)
d2233 1
a2233 2
	$(gdbcmd_h) $(target_h) $(language_h) $(cp_abi_h) $(typeprint_h) \
	$(gdb_string_h)
d2237 4
a2240 6
user-regs.o: user-regs.c $(defs_h) $(user_regs_h) $(gdbtypes_h) \
	$(gdb_string_h) $(gdb_assert_h) $(frame_h)
utils.o: utils.c $(defs_h) $(gdb_assert_h) $(gdb_string_h) $(event_top_h) \
	$(gdbcmd_h) $(serial_h) $(bfd_h) $(target_h) $(demangle_h) \
	$(expression_h) $(language_h) $(charset_h) $(annotate_h) \
	$(filenames_h) $(inferior_h) $(mmalloc_h)
d2243 3
a2245 2
glibc-tdep.o: glibc-tdep.c $(defs_h) $(frame_h) $(symtab_h) \
	$(symfile_h) $(objfiles_h) $(glibc_tdep_h)
a2248 3
v850-tdep.o: v850-tdep.c $(defs_h) $(frame_h) $(inferior_h) $(target_h) \
	$(value_h) $(bfd_h) $(gdb_string_h) $(gdbcore_h) $(symfile_h) \
	$(arch_utils_h) $(regcache_h) $(symtab_h) $(dis_asm_h)
d2251 1
a2251 1
	$(doublest_h) $(infcall_h)
d2254 2
a2255 3
	$(gdbcmd_h) $(regcache_h) $(cp_abi_h) $(block_h) $(infcall_h) \
	$(dictionary_h) $(cp_support_h) $(gdb_string_h) $(gdb_assert_h) \
	$(cp_support_h)
d2262 1
a2262 1
	$(gdb_assert_h) $(regcache_h) $(block_h)
d2267 1
a2267 1
	$(gdb_string_h) $(osabi_h) $(dis_asm_h) $(vax_tdep_h)
d2270 5
a2274 4
win32-nat.o: win32-nat.c $(defs_h) $(frame_h) $(inferior_h) $(target_h) \
	$(gdbcore_h) $(command_h) $(completer_h) $(regcache_h) $(top_h) \
	$(i386_tdep_h) $(buildsym_h) $(symfile_h) $(objfiles_h) \
	$(gdb_string_h) $(gdbthread_h) $(gdbcmd_h) $(exec_h)
d2278 1
a2278 2
	$(regcache_h) $(mips_tdep_h)
wince-stub.o: wince-stub.c $(wince_stub_h)
d2281 1
a2281 3
	$(regcache_h) $(linux_nat_h) $(gdb_assert_h) $(gdb_string_h) \
	$(gdb_proc_service_h) $(gregset_h) $(x86_64_tdep_h) \
	$(x86_64_linux_tdep_h) $(i386_linux_tdep_h) $(amd64_nat_h)
d2283 4
a2286 7
	$(gdbcore_h) $(regcache_h) $(osabi_h) $(gdb_string_h) \
	$(x86_64_tdep_h) $(x86_64_linux_tdep_h)
x86-64-tdep.o: x86-64-tdep.c $(defs_h) $(arch_utils_h) $(block_h) \
	$(dummy_frame_h) $(frame_h) $(frame_base_h) $(frame_unwind_h) \
	$(inferior_h) $(gdbcmd_h) $(gdbcore_h) $(objfiles_h) $(regcache_h) \
	$(regset_h) $(symfile_h) $(gdb_assert_h) $(x86_64_tdep_h) \
	$(i387_tdep_h)
d2297 3
a2299 1
	$(objfiles_h) $(dis_asm_h)
d2305 1
a2305 1
# or try to compile the object file into the sub-directory.
d2308 4
a2311 5
	$(gdb_wait_h) $(gdb_regex_h) $(gdb_string_h) $(gdb_vfork_h) \
	$(linespec_h) $(expression_h) $(frame_h) $(value_h) $(language_h) \
	$(filenames_h) $(objfiles_h) $(source_h) $(disasm_h) $(ui_out_h) \
	$(top_h) $(cli_decode_h) $(cli_script_h) $(cli_setshow_h) \
	$(cli_cmds_h)
a2320 6
cli-interp.o: $(srcdir)/cli/cli-interp.c $(defs_h) $(interps_h) $(wrapper_h) \
	$(event_top_h) $(ui_out_h) $(cli_out_h) $(top_h) $(gdb_string_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/cli/cli-interp.c
cli-logging.o: $(srcdir)/cli/cli-logging.c $(defs_h) $(gdbcmd_h) $(ui_out_h) \
	$(gdb_string_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/cli/cli-logging.c
d2348 5
a2352 5
	$(SHELL) $(srcdir)/../mkinstalldirs $(DESTDIR)$(bindir); \
	$(INSTALL_PROGRAM) insight$(EXEEXT) \
		$(DESTDIR)$(bindir)/$$transformed_name$(EXEEXT) ; \
	$(SHELL) $(srcdir)/../mkinstalldirs \
		$(DESTDIR)$(GDBTK_LIBRARY) ; \
d2354 5
a2358 10
		$(DESTDIR)$(libdir)/insight$(GDBTK_VERSION) ; \
	$(INSTALL_DATA) $(srcdir)/gdbtk/plugins/plugins.tcl \
		$(DESTDIR)$(libdir)/insight$(GDBTK_VERSION)/plugins.tcl ; \
	$(SHELL) $(srcdir)/../mkinstalldirs \
		$(DESTDIR)$(GDBTK_LIBRARY)/images \
		$(DESTDIR)$(GDBTK_LIBRARY)/images2 ; \
	$(SHELL) $(srcdir)/../mkinstalldirs \
		$(DESTDIR)$(GDBTK_LIBRARY)/help \
		$(DESTDIR)$(GDBTK_LIBRARY)/help/images \
		$(DESTDIR)$(GDBTK_LIBRARY)/help/trace ; \
d2360 1
a2360 1
	for i in *.tcl *.itcl *.ith *.itb images/*.gif images2/*.gif images/icons.txt images2/icons.txt tclIndex help/*.html  help/trace/*.html help/trace/index.toc help/images/*.gif help/images/*.png; \
d2362 1
a2362 1
		$(INSTALL_DATA) $$i $(DESTDIR)$(GDBTK_LIBRARY)/$$i ; \
d2373 2
a2374 2
	rm -f $(DESTDIR)$(bindir)/$$transformed_name$(EXEEXT) ; \
	rm -rf $(DESTDIR)$(GDBTK_LIBRARY)
d2383 1
a2383 1
	$(CC_LD) $(INTERNAL_LDFLAGS) $(WIN32LDAPP) \
d2396 1
a2396 1
        $(ITK_CFLAGS)  \
d2407 1
a2407 1
	 $(TCL_CFLAGS) $(TK_CFLAGS) $(X11_CFLAGS)   \
d2413 3
a2415 4
	$(defs_h) $(inferior_h)	$(source_h) $(symfile_h) $(objfiles_h) \
	$(gdbcore_h) $(demangle_h) $(linespec_h) $(tui_file_h) $(top_h) \
	$(annotate_h) $(block_h) $(dictionary_h) $(gdb_string_h) \
	$(dis_asm_h) $(gdbcmd_h)
d2417 1
a2417 1
	 $(TCL_CFLAGS) $(TK_CFLAGS) $(X11_CFLAGS)		\
d2426 1
a2426 1
	$(CC) -c $(INTERNAL_CFLAGS) $(IDE_CFLAGS) $(ITCL_CFLAGS)  \
a2429 8
gdbtk-interp.o: $(srcdir)/gdbtk/generic/gdbtk-interp.c \
	$(defs_h) $(interps_h) $(ui_out_h) $(ui_file_h) \
	$(cli_out_h) $(gdb_string_h) $(cli_cmds_h) $(cli_decode_h) \
	$(srcdir)/gdbtk/generic/gdbtk.h
	$(CC) -c $(INTERNAL_CFLAGS) $(IDE_CFLAGS) $(ITCL_CFLAGS) \
	$(TCL_CFLAGS) $(TK_CFLAGS) $(X11_CFLAGS) $(GDBTK_CFLAGS) \
		$(srcdir)/gdbtk/generic/gdbtk-interp.c

d2432 1
a2432 1
	$(CC) -c $(INTERNAL_CFLAGS) $(IDE_CFLAGS) $(ITCL_CFLAGS)  \
d2441 1
a2441 1
	 $(TCL_CFLAGS) $(TK_CFLAGS) $(X11_CFLAGS)   \
d2448 2
a2449 2
	$(defs_h) $(target_h) $(breakpoint_h) $(linespec_h) \
	$(block_h) $(dictionary_h)
d2451 1
a2451 1
	 $(TCL_CFLAGS) $(TK_CFLAGS) $(X11_CFLAGS)   \
d2458 1
a2458 1
	$(CC) -c $(INTERNAL_CFLAGS) $(IDE_CFLAGS) $(ITCL_CFLAGS)  \
d2472 1
a2472 1
# or try to compile the object file into the sub-directory.
d2479 1
a2479 1
	$(mi_cmds_h) $(mi_getopt_h) $(gdb_string_h) $(ui_out_h) $(disasm_h)
a2480 11
mi-cmd-env.o: $(srcdir)/mi/mi-cmd-env.c $(defs_h) $(inferior_h) $(value_h) \
	$(mi_out_h) $(mi_cmds_h) $(mi_getopt_h) $(symtab_h) $(target_h) \
	$(environ_h) $(command_h) $(ui_out_h) $(top_h) $(gdb_string_h) \
	$(gdb_stat_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/mi/mi-cmd-env.c
mi-cmd-file.o: $(srcdir)/mi/mi-cmd-file.c $(defs_h) $(mi_cmds_h) \
	$(mi_getopt_h) $(ui_out_h) $(symtab_h) $(source_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/mi/mi-cmd-file.c
mi-cmds.o: $(srcdir)/mi/mi-cmds.c $(defs_h) $(top_h) $(mi_cmds_h) \
	$(gdb_string_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/mi/mi-cmds.c
d2482 1
a2482 2
	$(value_h) $(mi_cmds_h) $(ui_out_h) $(symtab_h) $(block_h) \
	$(stack_h) $(dictionary_h)
d2487 3
a2495 4
mi-interp.o: $(srcdir)/mi/mi-interp.c $(defs_h) $(gdb_string_h) $(interps_h) \
	$(event_top_h) $(event_loop_h) $(inferior_h) $(ui_out_h) $(top_h) \
	$(mi_main_h) $(mi_cmds_h) $(mi_out_h) $(mi_console_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/mi/mi-interp.c
d2498 1
a2498 1
	$(mi_getopt_h) $(mi_console_h) $(ui_out_h) $(mi_out_h) $(interps_h) \
d2500 1
a2500 1
	$(gdb_h) $(frame_h) $(mi_main_h)
d2507 17
a2523 3
mi-symbol-cmds.o: $(srcdir)/mi/mi-symbol-cmds.c $(defs_h) $(mi_cmds_h) \
	$(symtab_h) $(ui_out_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/mi/mi-symbol-cmds.c
d2542 1
a2542 1
# gdb/signals/ dependencies
d2545 1
a2545 1
# or try to compile the object file into the sub-directory.
d2547 1
a2547 2
signals.o: $(srcdir)/signals/signals.c $(server_h) $(defs_h) $(target_h) \
	$(gdb_string_h)
d2551 1
a2551 1
# gdb/tui/ dependencies
d2554 1
a2554 1
# or try to compile the object file into the sub-directory.
d2556 20
a2575 2
tuiCommand.o: $(srcdir)/tui/tuiCommand.c $(defs_h) $(tui_h) $(tuiData_h) \
	$(tuiWin_h) $(tuiIO_h)
d2577 1
a2577 4
tuiDataWin.o: $(srcdir)/tui/tuiDataWin.c $(defs_h) $(tui_h) $(tuiData_h) \
	$(tuiGeneralWin_h) $(tuiRegs_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tuiDataWin.c
tuiData.o: $(srcdir)/tui/tuiData.c $(defs_h) $(symtab_h) $(tui_h) \
d2580 7
a2586 4
tuiDisassem.o: $(srcdir)/tui/tuiDisassem.c $(defs_h) $(symtab_h) \
	$(breakpoint_h) $(frame_h) $(value_h) $(source_h) $(disasm_h) \
	$(tui_h) $(tuiData_h) $(tuiWin_h) $(tuiLayout_h) $(tuiSourceWin_h) \
	$(tuiStack_h) $(tui_file_h)
d2588 2
a2589 2
tuiGeneralWin.o: $(srcdir)/tui/tuiGeneralWin.c $(defs_h) $(tui_h) \
	$(tuiData_h) $(tuiGeneralWin_h) $(tuiWin_h)
d2591 2
a2592 2
tuiIO.o: $(srcdir)/tui/tuiIO.c $(defs_h) $(terminal_h) $(target_h) \
	$(event_loop_h) $(event_top_h) $(command_h) $(top_h) $(readline_h) \
d2596 2
a2597 2
tuiLayout.o: $(srcdir)/tui/tuiLayout.c $(defs_h) $(command_h) $(symtab_h) \
	$(frame_h) $(source_h) $(tui_h) $(tuiData_h) $(tuiDataWin_h) \
d2601 2
a2602 2
tuiRegs.o: $(srcdir)/tui/tuiRegs.c $(defs_h) $(tui_h) $(tuiData_h) \
	$(symtab_h) $(gdbtypes_h) $(gdbcmd_h) $(frame_h) $(regcache_h) \
d2606 6
a2611 2
tuiSourceWin.o: $(srcdir)/tui/tuiSourceWin.c $(defs_h) $(symtab_h) \
	$(frame_h) $(breakpoint_h) $(value_h) $(source_h) $(tui_h) \
d2615 3
a2617 8
tuiSource.o: $(srcdir)/tui/tuiSource.c $(defs_h) $(symtab_h) $(frame_h) \
	$(breakpoint_h) $(source_h) $(symtab_h) $(tui_h) $(tuiData_h) \
	$(tuiStack_h) $(tuiSourceWin_h) $(tuiSource_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tuiSource.c
tuiStack.o: $(srcdir)/tui/tuiStack.c $(defs_h) $(symtab_h) $(breakpoint_h) \
	$(frame_h) $(command_h) $(inferior_h) $(target_h) $(top_h) $(tui_h) \
	$(tuiData_h) $(tuiStack_h) $(tuiGeneralWin_h) $(tuiSource_h) \
	$(tuiSourceWin_h) $(tui_file_h)
d2619 3
a2621 3
tuiWin.o: $(srcdir)/tui/tuiWin.c $(defs_h) $(command_h) $(symtab_h) \
	$(breakpoint_h) $(frame_h) $(cli_cmds_h) $(top_h) $(source_h) \
	$(tui_h) $(tuiData_h) $(tuiGeneralWin_h) $(tuiStack_h) $(tuiRegs_h) \
a2623 23
tui.o: $(srcdir)/tui/tui.c $(defs_h) $(gdbcmd_h) $(tui_h) $(tuiData_h) \
	$(tuiLayout_h) $(tuiIO_h) $(tuiRegs_h) $(tuiStack_h) $(tuiWin_h) \
	$(tuiSourceWin_h) $(tuiDataWin_h) $(readline_h) $(target_h) \
	$(frame_h) $(breakpoint_h) $(inferior_h) $(symtab_h) $(source_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tui.c
tui-file.o: $(srcdir)/tui/tui-file.c $(defs_h) $(ui_file_h) $(tui_file_h) \
	$(tui_tuiIO_h) $(tui_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tui-file.c
tui-hooks.o: $(srcdir)/tui/tui-hooks.c $(defs_h) $(symtab_h) $(inferior_h) \
	$(command_h) $(bfd_h) $(symfile_h) $(objfiles_h) $(target_h) \
	$(gdbcore_h) $(event_loop_h) $(event_top_h) $(frame_h) \
	$(breakpoint_h) $(gdb_events_h) $(ui_out_h) $(top_h) $(tui_h) \
	$(tuiData_h) $(tuiLayout_h) $(tuiIO_h) $(tuiRegs_h) $(tuiWin_h) \
	$(tuiStack_h) $(tuiDataWin_h) $(tuiSourceWin_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tui-hooks.c
tui-interp.o: $(srcdir)/tui/tui-interp.c $(defs_h) $(interps_h) $(top_h) \
	$(event_top_h) $(event_loop_h) $(ui_out_h) $(cli_out_h) \
	$(tui_tuiData_h) $(readline_h) $(tui_tuiWin_h) $(tui_h) \
	$(tui_tuiIO_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tui-interp.c
tui-out.o: $(srcdir)/tui/tui-out.c $(defs_h) $(ui_out_h) $(tui_h) \
	$(gdb_string_h) $(gdb_assert_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tui-out.c
@


1.268.2.5
log
@	* Makefile.in: Add cp-names.y.
	* cp-names.y: New file.
@
text
@a520 1
	cp-names.y \
a926 1
	cp-names.tab.c \
a931 1
	cp-names.tab.o \
a1171 1
		cp-names.tab.c \
a1433 17
.PRECIOUS: cp-names.tab.c
cp-names.tab.o: cp-names.tab.c $(defs_h) $(gdb_string_h) $(expression_h) \
	$(value_h) $(parser_defs_h) $(language_h) $(c_lang_h) $(bfd_h) \
	$(symfile_h) $(objfiles_h) $(charset_h) $(block_h) $(cp_support_h)
cp-names.tab.c: cp-names.y
	$(SHELL) $(YLWRAP) "$(YACC)" \
	    $(srcdir)/cp-names.y  y.tab.c cp-names.tmp -- $(YFLAGS) 
	-sed -e '/extern.*malloc/d' \
	     -e '/extern.*realloc/d' \
	     -e '/extern.*free/d' \
	     -e '/include.*malloc.h/d' \
	     -e 's/malloc/xmalloc/g' \
	     -e 's/realloc/xrealloc/g' \
	     -e '/^#line.*y.tab.c/d' \
	  < cp-names.tmp > cp-names.new
	-rm cp-names.tmp
	mv cp-names.new ./cp-names.tab.c
@


1.268.2.6
log
@Merge from mainline.
@
text
@d1280 1
a1280 1
	hppah-nat.c hpread.c \
d1851 1
d1856 2
@


1.268.2.7
log
@	* cp-names.y (LONGEST, ULONGEST, DOUBLEST): Remove.
	(d_qualify): Take an int argument.  Update for new INT_LLONG
	handling.
	(INT_CHAR, INT_SHORT, INT_LONG, INT_LLONG, INT_SIGNED)
	(INT_UNSIGNED): Change into bitflags.
	(%union): Change lval and typed_val_int.val to ints.
	(scope_id, typespec): Inline non-terminals at their use sites.
	(sign, size, int_type): Remove.
	(int_part, int_seq): New non-terminals.
	(result): Add missing semicolon.
	(name, nested_name): Inline scope_id here.
	(template_arg, function_args): Inline type here.
	(builtin_type): Use int_seq.  Add missing semicolon.
	(typespec_2): Inline typespec and colon_name here.
	(start, qualifiers_opt, qualifiers): Remove redundant action.
	(abstract_declarator, direct_abstract_declarator): Likewise.
	(abstract_declarator_fn): Likewise.
	(d_builtin_type): New helper function.
	(parse_number): Use d_builtin_type.
	(HANDLE_SPECIAL): Only take one argument.
	(yylex): Remove unused variable unquoted_expr.  Use d_builtin_type.
	Update calls to HANDLE_SPECIAL.  Jump around case '-' instead of
	falling through it.  Use ISALNUM and ISALPHA.  Add a return
	statement after a call to error.  Match trailing speaces on special
	tokens.
	(cp_print): Take a len argument, and pass it to d_print.  Print the
	string instead of returning it.
	(main): Pass len to cp_print.  Allocate and free myinfo.comps.
	Use putchar and puts instead of printf.

	* Makefile.in (safe_ctype_h): Add.
	(test-cpnames, cp-names-main.tab.o): New rules.
	(clean): Remove test-cpnames.
	(cp-names.tab.o): Update dependencies.
@
text
@a600 1
safe_ctype_h = $(INCLUDE_DIR)/safe-ctype.h
a1150 1
	rm -f test-cpnames
d1439 3
a1441 10
cp-names.tab.o: cp-names.tab.c $(safe_ctype_h) \
	$(srcdir)/../libiberty/cp-demangle.c

cp-names-main.tab.o: cp-names.tab.c $(safe_ctype_h) \
	$(srcdir)/../libiberty/cp-demangle.c
	$(CC) -c $(INTERNAL_CFLAGS) -DTEST_CPNAMES \
		-o cp-names-main.tab.o cp-names.tab.c
test-cpnames: cp-names-main.tab.o
	$(CC) -o test-cpnames cp-names-main.tab.o -liberty

@


1.268.2.8
log
@	* Makefile.in (cp_names_h): New variable.
	(cp-names.tab.o, cp-names-main.tab.o): Depend on cp-names.h.
	* cp-names.h: New file.
	* cp-names.y: Include "cp-names.h".
	(lexptr, prev_lexptr): Make const.
	(symbol_end): Make argument and return type const.  Move outside
	of TEST_CPNAMES.
	(parse_number): Make argument const.  Use an ISO C declaration.
	(parse_escape): Make argument const.
	(yylex): Make some pointers const.
	(cp_comp_to_string, cp_canonicalize_string): New functions.
	(trim_chars): Cast symbol_end's return value to non-const in
	this case.
@
text
@a656 1
cp_names_h = cp-names.h
d1440 2
a1441 2

cp-names.tab.o: cp-names.tab.c $(safe_ctype_h) $(cp_names_h) \
d1444 1
a1444 1
cp-names-main.tab.o: cp-names.tab.c $(safe_ctype_h) $(cp_names_h) \
a1450 1
.PRECIOUS: cp-names.tab.c
a1463 1

@


1.268.2.9
log
@	* Makefile.in (cp-names.tab.o, cp-names-main.tab.o, test-cpnames):
	Update dependencies.  Link the correct libiberty.
	* cp-names.y: Include cp-demangle.h instead of cp-demangle.c.
	Update names of exported functions from cp-demangle.c.  Use
	cp_v3_d_init_info_alloc and cp_v3_d_free_info.
@
text
@d1443 1
a1443 1
	$(srcdir)/../include/cp-demangle.h
d1446 1
a1446 1
	$(srcdir)/../include/cp-demangle.h
d1449 2
a1450 2
test-cpnames: cp-names-main.tab.o $(LIBIBERTY)
	$(CC) -o test-cpnames cp-names-main.tab.o $(LIBIBERTY)
@


1.268.2.10
log
@	* Makefile.in (cp_names_h): Remove.
	(cp_demangle_h): New.
	(cp-names.tab.o, cp-names-main.tab.o): Use $(cp_demangle_h) and
	remove $(cp_names_h).
	(cp-support.o): Use $(cp_demangle_h).
	* cp-names.y: Don't include cp-names.h.
	(cp_comp_to_string): Export.
	(cp_canonicalize_string): Move to cp-support.c.
	(demangled_name_to_comp, mangled_name_to_comp): New functions.
	* cp-support.c: Include "cp-demangle.h".
	(cp_canonicalize_string): New function, moved from cp-names.y and
	updated.
	(class_name_from_physname, method_name_from_physname): Rewritten.
	(find_last_component): Removed.
	* cp-support.h: Add new opaque types and prototypes.
	* dwarf2read.c: Don't include cp-names.h.
	* cp-names.h: Remove file.
@
text
@a581 1
cp_demangle_h =	$(INCLUDE_DIR)/cp-demangle.h
d657 1
d1442 2
a1443 1
cp-names.tab.o: cp-names.tab.c $(safe_ctype_h) $(cp_demangle_h)
d1445 2
a1446 1
cp-names-main.tab.o: cp-names.tab.c $(safe_ctype_h) $(cp_demangle_h)
d1711 1
a1711 2
	$(objfiles_h) $(frame_h) $(symtab_h) $(block_h) $(complaints_h) \
	$(cp_demangle_h)
@


1.268.2.11
log
@Merge mainline to branch.  GDB is broken until I update cp-names.y.
@
text
@d761 3
a763 1
sparc_nat_h = sparc-nat.h
a764 1
sparc64_tdep_h = sparc64-tdep.h
d1122 1
d1317 4
a1320 8
	solib.c solib-irix.c solib-svr4.c solib-sunos.c \
	sparc-linux-tdep.c sparc-nat.c sparc-sol2-nat.c sparc-sol2-tdep.c \
	sparc-tdep.c sparc-sol2-nat.c sparc-sol2-tdep.c sparc64-linux-nat.c \
	sparc64-linux-tdep.c sparc64-nat.c sparc64-sol2-tdep.c \
	sparc64-tdep.c sparc64fbsd-nat.c sparc64fbsd-tdep.c \
	sparc64nbsd-nat.c sparc64nbsd-tdep.c sparcnbsd-nat.c \
	sparcnbsd-tdep.c \
	sun3-nat.c \
d2360 6
a2365 26
sparc-linux-tdep.o: sparc-linux-tdep.c $(defs_h) $(floatformat_h) $(frame_h) \
	$(frame_unwind_h) $(gdbarch_h) $(gdbcore_h) $(osabi_h) $(regcache_h) \
	$(solib_svr4_h) $(symtab_h) $(trad_frame_h) $(gdb_assert_h) \
	$(gdb_string_h) $(sparc_tdep_h)
sparc-nat.o: sparc-nat.c $(defs_h) $(inferior_h) $(regcache_h) \
	$(gdb_string_h) $(gdb_wait_h) $(sparc_tdep_h) $(sparc_nat_h)
sparc-sol2-nat.o: sparc-sol2-nat.c $(defs_h) $(regcache_h) $(gregset_h) \
	$(sparc_tdep_h) $(sparc64_tdep_h)
sparc-sol2-tdep.o: sparc-sol2-tdep.c $(defs_h) $(frame_h) $(frame_unwind_h) \
	$(gdbcore_h) $(symtab_h) $(objfiles_h) $(osabi_h) $(regcache_h) \
	$(target_h) $(trad_frame_h) $(gdb_assert_h) $(gdb_string_h) \
	$(sparc_tdep_h)
sparc-tdep.o: sparc-tdep.c $(defs_h) $(arch_utils_h) $(dis_asm_h) \
	$(float_format_h) $(frame_h) $(frame_base_h) $(frame_unwind_h) \
	$(gdbcore_h) $(gdbtypes_h) $(inferior_h) $(symtab_h) $(objfiles_h) \
	$(osabi_h) $(regcache_h) $(target_h) $(value_h) $(gdb_assert_h) \
	$(gdb_string_h) $(sparc_tdep_h)
sparc64-linux-nat.o: sparc64-linux-nat.c $(defs_h) \
	$(sparc64_tdep_h) $(sparc_nat_h)
sparc64-linux-tdep.o: sparc64-linux-tdep.c $(defs_h) $(gdbarch_h) \
	$(osabi_h) $(solib_svr4_h) $(sparc64_tdep_h)
sparc64-nat.o: sparc-nat.c $(defs_h) $(gdbarch_h) \
	$(sparc64_tdep_h) $(sparc_nat_h)
sparc64-sol2-tdep.o: sparc64-sol2-tdep.c $(defs_h) $(frame_h) \
	$(frame_unwind_h) $(gdbarch_h) $(symtab_h) $(objfiles_h) $(osabi_h) \
	$(trad_frame_h) $(gdb_assert_h) $(sparc64_tdep_h)
d2368 13
a2380 19
	$(gdbtypes_h) $(inferior_h) $(symtab_h) $(objfiles_h) $(osabi_h) \
	$(regcache_h) $(target_h) $(value_h) $(gdb_assert_h) $(gdb_string_h) \
	$(sparc64_tdep_h)
sparc64fbsd-nat.o: sparc64fbsd-nat.c $(defs_h) $(sparc64_tdep_h) \
	$(sparc_nat_h)
sparc64fbsd-tdep.o: sparc64fbsd-tdep.c $(defs_h) $(frame_h) \
	$(frame_unwind_h) $(gdbcore_h) $(osabi_h) $(regcache_h) $(target_h) \
	$(trad_frame_h) $(gdb_assert_h) $(gdb_string_h) $(sparc64_tdep_h)
sparc64nbsd-nat.o: sparc64nbsd-nat.c $(defs_h) $(sparc64_tdep_h) \
	$(sparc_nat_h)
sparc64nbsd-tdep.o: sparc64nbsd-tdep.c $(defs_h) $(frame_h) \
	$(frame_unwind_h) $(gdbcore_h) $(osabi_h) $(regcache_h) \
	$(solib_svr4_h) $(trad_frame_h) $(gdb_assert_h) $(gdb_string_h) \
	$(sparc64_tdep_h) $(nbsd_tdep_h)
sparcnbsd-nat.o: sparcnbsd-nat.c $(defs_h) $(sparc_tdep_h) $(sparc_nat_h)
sparcnbsd-tdep.o: sparcnbsd-tdep.c $(defs_h) $(floatformat_h) $(frame_h) \
	$(frame_unwind_h) $(gdbcore_h) $(osabi_h) $(regcache_h) \
	$(solib_svr4_h) $(symtab_h) $(trad_frame_h) $(gdb_assert_h) \
	$(gdb_string_h) $(sparc_tdep_h) $(nbsd_tdep_h)
d2382 4
a2385 1

@


1.268.2.12
log
@	* Makefile.in (cp_demangle_h): Remove.
	(libiberty_h): Add.
	(cp-names.tab.o, cp-names-main.tab.o, cp-support.o): Update
	dependencies.
	* cp-support.c: Don't include "cp-demangle.h".
	(d_left, d_right): New macros.
	(cp_canonicalize_string, class_name_from_physname,
	method_name_from_physname): Fix types and component names.
	* cp-support.h (demangled_name_to_comp, mangled_name_to_comp)
	(cp_comp_to_string): Update prototypes.
@
text
@d582 1
a588 1
libiberty_h =	$(INCLUDE_DIR)/libiberty.h
d1444 1
a1444 1
cp-names.tab.o: cp-names.tab.c $(safe_ctype_h) $(libiberty_h) $(demangle_h)
d1446 1
a1446 1
cp-names-main.tab.o: cp-names.tab.c $(safe_ctype_h) $(libiberty_h) $(demangle_h)
d1712 1
a1712 1
	$(demangle_h)
@


1.268.2.13
log
@Merge drow-cplus-merge-20040208 to drow-cplus-branch.
@
text
@d1 2
a2 3
# Copyright 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997,
# 1998, 1999, 2000, 2001, 2002, 2003, 2004 Free Software Foundation,
# Inc.
d10 1
a10 1
#
d15 1
a15 1
#
d80 1
a80 1
# This is used to rebuild ada-lex.c from ada-lex.l.  If the program is
d108 4
d198 1
a198 5
	tui-command.o \
	tui-data.o \
	tui-disasm.o \
	tui-file.o tui.o \
	tui-hooks.o \
d200 3
a202 10
	tui-io.o \
	tui-layout.o \
	tui-out.o \
	tui-regs.o \
	tui-source.o \
	tui-stack.o \
	tui-win.o \
	tui-windata.o \
	tui-wingeneral.o \
	tui-winsource.o
d204 1
a204 5
	tui/tui-command.c \
	tui/tui-data.c \
	tui/tui-disasm.c \
	tui/tui-file.c \
	tui/tui-hooks.c \
d206 5
a210 11
	tui/tui-io.c \
	tui/tui-layout.c \
	tui/tui-out.c \
	tui/tui-regs.c \
	tui/tui-source.c \
	tui/tui-stack.c \
	tui/tui-win.c \
	tui/tui-windata.c \
	tui/tui-wingeneral.c \
	tui/tui-winsource.c \
	tui/tui.c
d345 1
a345 1
	$(BFD_CFLAGS) $(INCLUDE_CFLAGS) \
d365 1
d371 1
a371 1
	-lintl -liberty
d375 1
a375 1
	$(LIBIBERTY) $(WIN32LIBS)
d377 1
a377 1
	$(OPCODES) $(INTL_DEPS) $(LIBIBERTY) $(CONFIG_DEPS)
d386 1
a386 1
	$(BFD_CFLAGS) $(INCLUDE_CFLAGS) \
d417 2
a418 2
# Possibly ignore the simulator.  If the simulator is being ignored,
# these expand into SIM= and SIM_OBJ=, overriding the entries from
d569 1
a569 1
# (Why would we not want to depend on them?  If one of these changes in a
a640 1
auxv_h = auxv.h
d714 1
a714 1
libunwind_frame_h = libunwind-frame.h $(libunwind_h)
a760 1
sparc64_tdep_h = sparc64-tdep.h $(sparc_tdep_h)
d763 1
d817 12
a828 3
tui_command_h = $(srcdir)/tui/tui-command.h
tui_data_h = $(srcdir)/tui/tui-data.h
tui_disasm_h = $(srcdir)/tui/tui-disasm.h
a830 9
tui_io_h = $(srcdir)/tui/tui-io.h
tui_layout_h = $(srcdir)/tui/tui-layout.h
tui_regs_h = $(srcdir)/tui/tui-regs.h
tui_source_h = $(srcdir)/tui/tui-source.h $(defs_h)
tui_stack_h = $(srcdir)/tui/tui-stack.h
tui_windata_h = $(srcdir)/tui/tui-windata.h
tui_wingeneral_h = $(srcdir)/tui/tui-wingeneral.h
tui_win_h = $(srcdir)/tui/tui-win.h
tui_winsource_h = $(srcdir)/tui/tui-winsource.h
a879 1
	auxv.o \
d968 1
a968 1
	nroff -man $(srcdir)/gdb.1 | col -b > gdb.t
d973 1
a973 1
# not to; for example, if the user has made some trivial change to a
d993 1
a993 1
	@@$(MAKE) DO=install "DODIRS=$(SUBDIRS)" $(FLAGS_TO_PASS) subdir_do
d1005 1
a1005 1
	@@$(MAKE) DO=uninstall "DODIRS=$(SUBDIRS)" $(FLAGS_TO_PASS) subdir_do
d1019 2
a1020 2
# list includes a file twice (because of some mistake somewhere else)
# the _initialize_* function will be included twice in init.c. Second,
d1146 1
a1146 1
	@@$(MAKE) $(FLAGS_TO_PASS) DO=clean "DODIRS=$(SUBDIRS)" subdir_do
d1160 1
a1160 1
	@@$(MAKE) $(FLAGS_TO_PASS) DO=distclean "DODIRS=$(SUBDIRS)" subdir_do
d1276 1
a1276 1
	core-regset.c core-aout.c corelow.c \
d1320 2
a1321 2
	sparc64nbsd-nat.c sparc64nbsd-tdep.c sparc64obsd-tdep.c \
	sparcnbsd-nat.c sparcnbsd-tdep.c sparcobsd-tdep.c \
d1403 1
a1403 1
	    $(srcdir)/ada-exp.y  y.tab.c ada-exp.tmp -- $(YFLAGS)
d1432 1
a1432 1
	    $(srcdir)/c-exp.y  y.tab.c c-exp.tmp -- $(YFLAGS)
d1473 1
a1473 1
	    $(srcdir)/f-exp.y  y.tab.c f-exp.tmp -- $(YFLAGS)
d1490 1
a1490 1
	    $(srcdir)/jv-exp.y  y.tab.c jv-exp.tmp -- $(YFLAGS)
d1507 1
a1507 1
	    $(srcdir)/m2-exp.y  y.tab.c m2-exp.tmp -- $(YFLAGS)
d1525 1
a1525 1
	    $(srcdir)/objc-exp.y  y.tab.c objc-exp.tmp -- $(YFLAGS)
d1542 1
a1542 1
	    $(srcdir)/p-exp.y  y.tab.c p-exp.tmp -- $(YFLAGS)
d1606 2
a1610 4
amd64-nat.o: amd64-nat.c $(defs_h) $(gdbarch_h) $(regcache_h) \
	$(gdb_assert_h) $(i386_tdep_h) $(x86_64_tdep_h)
amd64nbsd-nat.o: amd64nbsd-nat.c $(defs_h) $(gdb_assert_h) $(x86_64_tdep_h) \
	$(amd64_nat_h)
d1614 2
d1620 1
a1620 2
	$(gdb_assert_h) $(sim_regno_h) $(osabi_h) $(version_h) \
	$(floatformat_h)
d1622 1
a1622 1
	$(gdb_string_h) $(regcache_h) $(arm_tdep_h) $(gregset_h)
d1625 2
a1626 2
	$(doublest_h) $(solib_svr4_h) $(osabi_h) $(arm_tdep_h) \
	$(glibc_tdep_h)
a1636 2
auxv.o: $(defs_h) $(target_h) $(gdbtypes_h) $(command_h) $(gdb_assert_h) \
	$(auxv_h) $(elf_common_h) $(valprint_h) $(inferior_h)
d1646 2
a1647 2
bcache.o: bcache.c $(defs_h) $(gdb_obstack_h) $(bcache_h) $(gdb_string_h) \
	$(gdb_assert_h)
d1689 2
a1690 2
	$(filenames_h) $(language_h) $(cli_decode_h) $(gdbcmd_h) \
	$(completer_h)
d1697 3
a1699 4
corelow.o: corelow.c $(defs_h) $(arch_utils_h) $(gdb_string_h) $(frame_h) \
	$(inferior_h) $(symtab_h) $(command_h) $(bfd_h) $(target_h) \
	$(gdbcore_h) $(gdbthread_h) $(regcache_h) $(regset_h) $(symfile_h) \
	$(exec_h) $(gdb_assert_h)
d1702 2
d1708 1
a1708 1
	$(gdbtypes_h) $(dictionary_h) $(command_h) $(frame_h)
d1712 1
a1712 1
	$(gdbtypes_h) $(demangle_h)
d1728 2
a1729 2
	$(gdbtypes_h) $(expression_h) $(value_h) $(valprint_h) $(language_h) \
	$(c_lang_h) $(cp_abi_h) $(target_h)
d1798 2
a1799 1
	$(exec_h) $(gdb_string_h) $(gdbcore_h) $(gdb_stat_h) $(xcoffsolib_h)
d1826 1
a1826 2
	$(gdb_assert_h) $(sim_regno_h) $(gdb_sim_frv_h) \
	$(opcodes_frv_desc_h)
a1845 2
glibc-tdep.o: glibc-tdep.c $(defs_h) $(frame_h) $(symtab_h) $(symfile_h) \
	$(objfiles_h) $(glibc_tdep_h)
d1852 3
a1854 3
	$(gdbtypes_h) $(value_h) $(demangle_h) $(cp_abi_h) $(cp_support_h)
gnu-v3-abi.o: gnu-v3-abi.c $(defs_h) $(value_h) $(cp_abi_h) $(cp_support_h) \
	$(demangle_h) $(gdb_assert_h) $(gdb_string_h)
d1905 3
a1907 3
	$(value_h) $(regcache_h) $(inferior_h) $(osabi_h) $(reggroups_h) \
	$(solib_svr4_h) $(gdb_string_h) $(i386_tdep_h) $(i386_linux_tdep_h) \
	$(glibc_tdep_h)
d1911 3
a1913 3
i386nbsd-tdep.o: i386nbsd-tdep.c $(defs_h) $(arch_utils_h) $(gdbcore_h) \
	$(regcache_h) $(regset_h) $(osabi_h) $(gdb_assert_h) $(gdb_string_h) \
	$(i386_tdep_h) $(i387_tdep_h) $(nbsd_tdep_h) $(solib_svr4_h)
d1919 1
a1919 2
	$(regcache_h) $(regset_h) $(osabi_h) $(gdb_assert_h) $(gdb_string_h) \
	$(i386_tdep_h) $(i387_tdep_h)
d1944 1
a1944 1
ia64-linux-tdep.o: ia64-linux-tdep.c $(defs_h) $(arch_utils_h) $(gdbcore_h)
d1949 1
a1949 2
	$(elf_bfd_h) $(elf_h) $(dis_asm_h) $(libunwind_frame_h) \
	$(libunwind_ia64_h)
d1957 1
a1957 2
	$(parser_defs_h) $(regcache_h) $(reggroups_h) $(block_h) \
	$(gdb_assert_h)
d1980 1
a1980 1
	$(regcache_h) $(gdb_string_h) $(gregset_h) $(mips_tdep_h)
d1997 4
a2000 4
libunwind-frame.o: libunwind-frame.c $(defs_h) $(inferior_h) $(frame_h) \
	$(frame_base_h) $(frame_unwind_h) $(gdbcore_h) $(gdbtypes_h) \
	$(symtab_h) $(objfiles_h) $(regcache_h) $(gdb_assert_h) \
	$(gdb_string_h) $(libunwind_frame_h) $(complaints_h)
d2030 1
a2030 1
	$(dis_asm_h) $(gdb_assert_h)
d2087 1
a2087 1
mips-linux-nat.o: mips-linux-nat.c $(defs_h) $(mips_tdep_h)
d2141 1
a2141 1
	$(breakpoint_h) $(block_h) $(dictionary_h)
d2146 2
d2181 1
a2181 1
	$(ppc_tdep_h) $(target_h) $(objfiles_h)
d2194 1
a2194 1
	$(proc_utils_h) $(gregset_h) $(gdb_string_h) $(auxv_h)
d2245 1
a2245 1
	$(regcache_h) $(gdb_assert_h) $(sim_regno_h) $(arch_utils_h)
d2266 5
a2270 2
remote-vxsparc.o: remote-vxsparc.c $(defs_h) $(regcache_h) $(gdb_string_h) \
	$(sparc_tdep_h) $(vx_share_ptrace_h) $(vx_share_regPacket_h)
d2276 1
a2276 1
	$(ppc_tdep_h) $(exec_h) $(gdb_stat_h)
d2334 1
a2334 1
	$(completer_h) $(filenames_h) $(exec_h) $(solist_h)
d2362 10
a2371 4
sparc64fbsd-nat.o: sparc64fbsd-nat.c $(defs_h) $(sparc64_tdep_h) \
	$(sparc_nat_h)
sparc64fbsd-tdep.o: sparc64fbsd-tdep.c $(defs_h) $(frame_h) \
	$(frame_unwind_h) $(gdbcore_h) $(osabi_h) $(regcache_h) $(regset_h) \
d2373 12
a2384 17
	$(sparc64_tdep_h)
sparc64-linux-nat.o: sparc64-linux-nat.c $(defs_h) $(sparc64_tdep_h) \
	$(sparc_nat_h)
sparc64-linux-tdep.o: sparc64-linux-tdep.c $(defs_h) $(gdbarch_h) $(osabi_h) \
	$(solib_svr4_h) $(sparc64_tdep_h)
sparc64-nat.o: sparc64-nat.c $(defs_h) $(gdbarch_h) $(sparc64_tdep_h) \
	$(sparc_nat_h)
sparc64nbsd-nat.o: sparc64nbsd-nat.c $(defs_h) $(sparc64_tdep_h) \
	$(sparc_nat_h)
sparc64nbsd-tdep.o: sparc64nbsd-tdep.c $(defs_h) $(frame_h) \
	$(frame_unwind_h) $(gdbcore_h) $(osabi_h) $(regcache_h) $(regset_h) \
	$(symtab_h) $(solib_svr4_h) $(trad_frame_h) $(gdb_assert_h) \
	$(gdb_string_h) $(sparc64_tdep_h) $(nbsd_tdep_h)
sparc64obsd-tdep.o: sparc64obsd-tdep.c $(defs_h) $(frame_h) \
	$(frame_unwind_h) $(osabi_h) $(regset_h) $(symtab_h) \
	$(solib_svr4_h) $(trad_frame_h) $(gdb_assert_h) \
	$(sparc64_tdep_h) $(nbsd_tdep_h)
d2393 6
a2398 6
sparc-linux-tdep.o: sparc-linux-tdep.c $(defs_h) $(floatformat_h) $(frame_h) \
	$(frame_unwind_h) $(gdbarch_h) $(gdbcore_h) $(osabi_h) $(regcache_h) \
	$(solib_svr4_h) $(symtab_h) $(trad_frame_h) $(gdb_assert_h) \
	$(gdb_string_h) $(sparc_tdep_h)
sparc-nat.o: sparc-nat.c $(defs_h) $(inferior_h) $(regcache_h) $(target_h) \
	$(gdb_assert_h) $(gdb_string_h) $(gdb_wait_h) $(sparc_tdep_h) \
d2400 4
d2406 1
a2406 1
	$(frame_unwind_h) $(gdbcore_h) $(osabi_h) $(regcache_h) $(regset_h) \
a2408 9
sparcobsd-tdep.o: sparcobsd-tdep.c $(defs_h) $(floatformat_h) $(frame_h) \
	$(frame_unwind_h) $(osabi_h) $(solib_svr4_h) $(symtab_h) \
	$(trad_frame_h) $(gdb_assert_h) $(sparc_tdep_h) $(nbsd_tdep_h)
sparc-sol2-nat.o: sparc-sol2-nat.c $(defs_h) $(regcache_h) $(gregset_h) \
	$(sparc_tdep_h) $(sparc64_tdep_h)
sparc-sol2-tdep.o: sparc-sol2-tdep.c $(defs_h) $(frame_h) $(frame_unwind_h) \
	$(gdbcore_h) $(symtab_h) $(objfiles_h) $(osabi_h) $(regcache_h) \
	$(target_h) $(trad_frame_h) $(gdb_assert_h) $(gdb_string_h) \
	$(sparc_tdep_h)
d2410 1
a2410 5
sparc-tdep.o: sparc-tdep.c $(defs_h) $(arch_utils_h) $(dis_asm_h) \
	$(floatformat_h) $(frame_h) $(frame_base_h) $(frame_unwind_h) \
	$(gdbcore_h) $(gdbtypes_h) $(inferior_h) $(symtab_h) $(objfiles_h) \
	$(osabi_h) $(regcache_h) $(target_h) $(value_h) $(gdb_assert_h) \
	$(gdb_string_h) $(sparc_tdep_h)
d2446 2
a2447 1
	$(gdb_wait_h) $(dcache_h) $(regcache_h) $(gdb_assert_h) $(gdbcore_h)
d2480 1
a2480 1
	$(filenames_h) $(inferior_h)
d2483 2
d2511 2
d2515 2
a2516 2
	$(buildsym_h) $(symfile_h) $(objfiles_h) $(gdb_string_h) \
	$(gdbthread_h) $(gdbcmd_h) $(exec_h) $(i386_tdep_h) $(i387_tdep_h)
d2558 1
a2558 1
	$(cli_cmds_h) $(readline_h)
d2652 1
a2652 1
	$(tracepoint_h) $(top_h)
d2823 32
d2860 18
a2877 5
tui.o: $(srcdir)/tui/tui.c $(defs_h) $(gdbcmd_h) $(tui_h) $(tui_data_h) \
	$(tui_layout_h) $(tui_io_h) $(tui_regs_h) $(tui_stack_h) \
	$(tui_win_h) $(tui_winsource_h) $(tui_windata_h) $(readline_h) \
	$(target_h) $(frame_h) $(breakpoint_h) $(inferior_h) $(symtab_h) \
	$(source_h)
a2878 11
tui-command.o: $(srcdir)/tui/tui-command.c $(defs_h) $(tui_h) $(tui_data_h) \
	$(tui_win_h) $(tui_io_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tui-command.c
tui-data.o: $(srcdir)/tui/tui-data.c $(defs_h) $(symtab_h) $(tui_h) \
	$(tui_data_h) $(tui_wingeneral_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tui-data.c
tui-disasm.o: $(srcdir)/tui/tui-disasm.c $(defs_h) $(symtab_h) \
	$(breakpoint_h) $(frame_h) $(value_h) $(source_h) $(disasm_h) \
	$(tui_h) $(tui_data_h) $(tui_win_h) $(tui_layout_h) \
	$(tui_winsource_h) $(tui_stack_h) $(tui_file_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tui-disasm.c
d2880 1
a2880 1
	$(tui_io_h) $(tui_h)
d2886 2
a2887 2
	$(tui_data_h) $(tui_layout_h) $(tui_io_h) $(tui_regs_h) $(tui_win_h) \
	$(tui_stack_h) $(tui_windata_h) $(tui_winsource_h)
d2891 2
a2892 1
	$(tui_data_h) $(readline_h) $(tui_win_h) $(tui_h) $(tui_io_h)
a2893 10
tui-io.o: $(srcdir)/tui/tui-io.c $(defs_h) $(terminal_h) $(target_h) \
	$(event_loop_h) $(event_top_h) $(command_h) $(top_h) $(readline_h) \
	$(tui_h) $(tui_data_h) $(tui_io_h) $(tui_command_h) $(tui_win_h) \
	$(tui_wingeneral_h) $(tui_file_h) $(ui_out_h) $(cli_out_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tui-io.c
tui-layout.o: $(srcdir)/tui/tui-layout.c $(defs_h) $(command_h) $(symtab_h) \
	$(frame_h) $(source_h) $(tui_h) $(tui_data_h) $(tui_windata_h) \
	$(tui_wingeneral_h) $(tui_stack_h) $(tui_regs_h) $(tui_win_h) \
	$(tui_winsource_h) $(tui_disasm_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tui-layout.c
a2896 31
tui-regs.o: $(srcdir)/tui/tui-regs.c $(defs_h) $(tui_h) $(tui_data_h) \
	$(symtab_h) $(gdbtypes_h) $(gdbcmd_h) $(frame_h) $(regcache_h) \
	$(inferior_h) $(target_h) $(tui_layout_h) $(tui_win_h) \
	$(tui_windata_h) $(tui_wingeneral_h) $(tui_file_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tui-regs.c
tui-source.o: $(srcdir)/tui/tui-source.c $(defs_h) $(symtab_h) $(frame_h) \
	$(breakpoint_h) $(source_h) $(symtab_h) $(tui_h) $(tui_data_h) \
	$(tui_stack_h) $(tui_winsource_h) $(tui_source_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tui-source.c
tui-stack.o: $(srcdir)/tui/tui-stack.c $(defs_h) $(symtab_h) $(breakpoint_h) \
	$(frame_h) $(command_h) $(inferior_h) $(target_h) $(top_h) $(tui_h) \
	$(tui_data_h) $(tui_stack_h) $(tui_wingeneral_h) $(tui_source_h) \
	$(tui_winsource_h) $(tui_file_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tui-stack.c
tui-win.o: $(srcdir)/tui/tui-win.c $(defs_h) $(command_h) $(symtab_h) \
	$(breakpoint_h) $(frame_h) $(cli_cmds_h) $(top_h) $(source_h) \
	$(tui_h) $(tui_data_h) $(tui_wingeneral_h) $(tui_stack_h) \
	$(tui_regs_h) $(tui_disasm_h) $(tui_source_h) $(tui_winsource_h) \
	$(tui_windata_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tui-win.c
tui-windata.o: $(srcdir)/tui/tui-windata.c $(defs_h) $(tui_h) $(tui_data_h) \
	$(tui_wingeneral_h) $(tui_regs_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tui-windata.c
tui-wingeneral.o: $(srcdir)/tui/tui-wingeneral.c $(defs_h) $(tui_h) \
	$(tui_data_h) $(tui_wingeneral_h) $(tui_win_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tui-wingeneral.c
tui-winsource.o: $(srcdir)/tui/tui-winsource.c $(defs_h) $(symtab_h) \
	$(frame_h) $(breakpoint_h) $(value_h) $(source_h) $(tui_h) \
	$(tui_data_h) $(tui_stack_h) $(tui_win_h) $(tui_wingeneral_h) \
	$(tui_winsource_h) $(tui_source_h) $(tui_disasm_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tui-winsource.c
@


1.268.2.14
log
@	* Makefile.in (cp-names-main.tab.o): Rename to test-cp-names.tab.o.
	* config/djgpp/config.sed: Handle new *cp-names.tab.* references.
@
text
@d1465 1
a1465 1
test-cp-names.tab.o: cp-names.tab.c $(safe_ctype_h) $(libiberty_h) $(demangle_h)
d1467 3
a1469 3
		-o test-cp-names.tab.o cp-names.tab.c
test-cpnames: test-cp-names.tab.o $(LIBIBERTY)
	$(CC) -o test-cpnames test-cp-names.tab.o $(LIBIBERTY)
@


1.267
log
@2002-09-30  David Carlton  <carlton@@math.stanford.edu>

	* Makefile.in (ppc-sysv-tdep.o): Depend on gdb_string_h.
	* ppc-sysv-tdep.c: #include "gdb_string.h".
	* remote-sds.c (getmessage): Add semicolon after 'retry' label to
	pacify GCC.
@
text
@d2496 1
a2496 1
	$(gdb_h)
@


1.266
log
@	* disasm.c: New file.
	* disasm.h: New file.
	* mi/mi-cmd-disas.c (gdb_dis_asm_read_memory): Moved to disasm.c.
	(compare_lines): Ditto.
	(dump_insns): Ditto.
	(do_mixed_source_and_assembly): Moved to disasm.c. Added uiout argument.	(do_assembly_only): Ditto.
	(do_disassembly): Renamed to gdb_disassembly and moved to disasm.c.
	Sdded uiout argument.
	* Makefile.in: Add new files.  Reorder SFILES list. Update dependencies.	Include libgdb.a later in the insight executable.
@
text
@d1979 1
a1979 1
	$(regcache_h) $(value_h) $(ppc_tdep_h)
@


1.265
log
@2002-09-27  David Carlton  <carlton@@math.stanford.edu>

	* Makefile.in (cris-tdep.o): Depend on gdb_string_h.
	(mcore-tdep.o): Ditto.
	(ns32k-tdep.o): Ditto.
	(ns32knbsd-tdep.o): Ditto.
	(sh3-rom.o): Ditto.
	(vax-tdep.o): Ditto.
	* cris-tdep.c: #include "gdb_string.h"
	* mcore-tdep.c: Ditto.
	* ns32k-tdep.c: Ditto.
	* ns32knbsd-tdep.c: Ditto.
	* sh3-rom.c: Ditto.
	* vax-tdep.c: Ditto.
@
text
@d533 12
a544 10
	ax-general.c ax-gdb.c bcache.c blockframe.c breakpoint.c \
	charset.c \
	buildsym.c c-exp.y c-lang.c c-typeprint.c c-valprint.c \
	coffread.c \
	complaints.c completer.c corefile.c cp-valprint.c dbxread.c \
	demangle.c dwarfread.c dwarf2read.c elfread.c environ.c eval.c \
	event-loop.c event-top.c \
	expprint.c f-exp.y f-lang.c f-typeprint.c f-valprint.c \
	findvar.c regcache.c gdbarch.c arch-utils.c gdbtypes.c osabi.c \
	inf-loop.c infcmd.c inflow.c infrun.c language.c \
d546 11
a556 12
	ui-out.c cli-out.c \
	varobj.c wrapper.c \
	jv-exp.y jv-lang.c jv-valprint.c jv-typeprint.c \
	m2-exp.y m2-lang.c m2-typeprint.c m2-valprint.c main.c maint.c \
	memattr.c mem-break.c minsyms.c mipsread.c nlmread.c objfiles.c \
	p-exp.y p-lang.c p-typeprint.c p-valprint.c parse.c \
	macrotab.c macroexp.c macrocmd.c macroscope.c \
	printcmd.c remote.c scm-exp.c scm-lang.c \
	scm-valprint.c source.c stabsread.c stack.c symfile.c \
	symmisc.c symtab.c linespec.c target.c thread.c top.c tracepoint.c \
	typeprint.c utils.c valarith.c valops.c valprint.c values.c \
	serial.c ser-unix.c mdebugread.c \
d565 3
a567 4
	ui-file.h ui-file.c \
	frame.c doublest.c \
	builtin-regs.c std-regs.c \
	gnu-v2-abi.c gnu-v3-abi.c hpacc-abi.c cp-abi.c cp-support.c
d640 1
d831 1
a831 1
	charset.o \
d1621 2
d2380 1
a2380 1
		-o insight$(EXEEXT) gdbtk-main.o main.o libgdb.a $(CONFIG_OBS)\
d2475 1
a2475 1
	$(mi_cmds_h) $(mi_getopt_h) $(ui_out_h) $(gdb_string_h)
@


1.264
log
@2002-09-26  Andrew Cagney  <ac131313@@redhat.com>

	From Grace Sainsbury <graces@@redhat.com>:
	* Makefile.in (gdbtk-main.o): New target.
	(gdb.o): New target.
	(main_h): Define.
	(main.o): Update dependencies.
	(gdb$(EXEEXT)): Add gdb.o.
	(SUBDIR_GDBTK_SRCS): Add gdbtk-main.c.
	(SUBDIR_GDBTK_ALL, SUBDIR_GDBTK_UNINSTALL): Set.
	(SUBDIR_GDBTK_CLEAN): Set.
	(install-gdbtk): Install the insight binary.
	(uninstall-gdbtk): New target.
	(all-gdbtk, clean-gdbtk): New rule.
	* top.c (use_windows): Default to zero.
	* main.c: Include "main.h".
	(main): Delete.
	(struct captured_main_args): Delete.
	(gdb_main): New function.
	* main.h: New file.
	* gdb.c: New File.

2002-09-26  Andrew Cagney  <ac131313@@redhat.com>

	From Grace Sainsbury <graces@@redhat.com>:
	* generic/gdbtk-main.c: New file.
@
text
@d1598 1
a1598 1
	$(solib_h) $(solib_svr4_h)
d1881 1
a1881 1
	$(arch_utils_h)
d1934 1
a1934 1
	$(ns32k_tdep_h)
d1937 1
a1937 1
ns32knbsd-tdep.o: ns32knbsd-tdep.c $(defs_h) $(ns32k_tdep_h)
d2111 2
a2112 1
	$(serial_h) $(srec_h) $(arch_utils_h) $(regcache_h) $(sh_tdep_h)
d2260 1
a2260 1
	$(vax_tdep_h)
@


1.263
log
@2002-09-20  David Carlton  <carlton@@math.stanford.edu>

	* Makefile.in (c-lang.o): Correct dependencies.
	(utils.o): Gather dependencies.
	(charset.o): Move.
@
text
@d293 2
a294 1
	gdbtk/generic/gdbtk-varobj.c gdbtk/generic/gdbtk-wrapper.c
d300 2
a301 2
SUBDIR_GDBTK_ALL=
SUBDIR_GDBTK_CLEAN=
d303 1
a303 1
SUBDIR_GDBTK_UNINSTALL= 
d683 1
a933 1
	rm -rf $(GDBTK_LIBRARY)
a935 16
install-gdbtk:
	$(SHELL) $(srcdir)/../mkinstalldirs $(GDBTK_LIBRARY) ; \
	$(SHELL) $(srcdir)/../mkinstalldirs $(libdir)/insight$(GDBTK_VERSION) ; \
	$(INSTALL_DATA) $(srcdir)/gdbtk/plugins/plugins.tcl $(libdir)/insight$(GDBTK_VERSION)/plugins.tcl ; \
	$(SHELL) $(srcdir)/../mkinstalldirs \
		$(GDBTK_LIBRARY)/images \
		$(GDBTK_LIBRARY)/images2 ; \
	$(SHELL) $(srcdir)/../mkinstalldirs $(GDBTK_LIBRARY)/help \
		$(GDBTK_LIBRARY)/help/images \
		$(GDBTK_LIBRARY)/help/trace ; \
	cd $(srcdir)/gdbtk/library ; \
	for i in *.tcl *.itcl *.ith *.itb images/*.gif images2/*.gif images/icons.txt images2/icons.txt tclIndex help/*.html  help/trace/*.html help/trace/index.toc help/images/*.gif; \
	  do \
		$(INSTALL_DATA) $$i $(GDBTK_LIBRARY)/$$i ; \
	  done ;

d1005 1
a1005 1
gdb$(EXEEXT): main.o libgdb.a $(CONFIG_OBS) $(ADD_DEPS) $(CDEPS) $(TDEPLIBS)
d1007 3
a1009 3
	$(HLDENV) $(CC_LD) $(INTERNAL_LDFLAGS) $(WIN32LDAPP) -o gdb$(EXEEXT) \
	main.o libgdb.a $(CONFIG_OBS) $(TDEPLIBS) $(TUI_LIBRARY) $(CLIBS)\
	$(LOADLIBES)
d1679 1
d1873 1
a1873 1
	$(event_loop_h) $(ui_out_h)
d2330 49
d2421 6
@


1.262
log
@        * source.c: Make global variables current_source_symtab and
        current_source_line static.
        (list_command): Moved to cli/cli-cmds.c.
        (ambiguous_line_spec): Moved to cli/cli-cmds.c.
        (get_first_line_listed): New accessor function.
        (get_lines_to_list): New accessor function.
        (get_current_source_symtab_and_line): New function. Retrieves the
        position in the source code that we consider current.
        (get_current_or_default_source_symtab_and_line): New function.
        Like the above but attempts to determine a default position if one
        is not currently defined.
        (set_current_source_symtab_and_line): New function. Sets the source
        code position considered current and returns the previously set one.
        (clear_current_source_symtab_and_line): Reset stored information about
        a current source line.
        (_initialize_source): Remove registration for the "list" command and
        its alias.
        * source.h: Add declarations for the new functions above.
        * symtab.h: Remove declarations for the global variables mentioned
        above.
        * breakpoint.c (parse_breakpoint_sals): Use accessor functions to
        obtain current source line.
        * linespec.c (decode_line_1): Ditto.
        * macroscope.c (default_macro_scope): Ditto.
        * scm-lang.c (scm_unpac): Ditto.
        * stack.c (print_frame_info_base): Ditto.
        * symfile.c (clear_symtab_users): Ditto.
        * symtab.c (decode_line_spec): Ditto.
        * cli/cli-cmds.c (list_command): Moved here from source.c.
        (ambiguous_line_spec): Moved here from source.c.
        (_init_cli_cmds): Add definition for "list" and its alias.
        * Makefile.in: Update dependencies.
@
text
@d1563 1
a1563 1
	$(macroscope_h) $(gdb_assert_h)
d1575 1
d2246 1
a2246 1
	$(filenames_h) $(inferior_h) $(mmalloc_h)
a2591 4
charset.o: charset.c $(defs_h) $(charset_h) $(gdbcmd_h) gdb_assert.h

c-lang.o: $(charset_h)
utils.o: $(charset_h)
@


1.262.2.1
log
@2002-09-18  David Carlton  <carlton@@math.stanford.edu>

	* symtab.h: Delete BLOCK_SHOULD_SORT.
	* symtab.c (lookup_block_symbol): Assume non-hashed blocks aren't
	sorted.
	* ada-lang.c (ada_add_block_symbols): Ditto.
	* symfile.h: Delete prototypes for sort_block_syms and
	sort_symtab_syms.
	* symfile.c: Delete functions sort_block_syms and
	sort_symtab_syms.
	* coffread.c (coff_symfile_read): Remove call to
	sort_symtab_syms.
	* xcoffread.c (xcoff_psymtab_to_symtab_1): Ditto.
	* mdebugread.c (psymtab_to_symtab_1): Ditto.
	* hpread.c (hpread_psymtab_to_symtab_1): Ditto.
	* dwarfread.c (psymtab_to_symtab_1): Ditto.
	* dwarf2read.c (psymtab_to_symtab_1): Ditto.
	* dbxread.c (dbx_psymtab_to_symtab_1): Ditto.

2002-09-20  David Carlton  <carlton@@math.stanford.edu>

	* Makefile.in (c-lang.o): Correct dependencies.
	(utils.o): Gather dependencies.
	(charset.o): Move.
@
text
@d1563 1
a1563 1
	$(macroscope_h) $(gdb_assert_h) $(charset_h) $(gdb_string_h)
a1574 1
charset.o: charset.c $(defs_h) $(charset_h) $(gdbcmd_h) gdb_assert.h
d2245 1
a2245 1
	$(filenames_h) $(inferior_h) $(mmalloc_h) $(charset_h)
d2591 4
@


1.262.2.2
log
@2002-09-20  David Carlton  <carlton@@math.stanford.edu>

	* jv-lang.c (get_java_class_symtab): Use xmalloc to allocate
	GLOBAL_BLOCK rather than xmmalloc.
	(free_class_block): Use xfree rather than xmfree.
	* mdebugread.c: #include "dictionary.h"
	(new_block): Remove argument.  Initialize BLOCK_DICT.
	(parse_symbol): Update call to new_block.
	(new_symtab): Ditto.
	(fixup_sigtramp): Ditto.
	Delete MAXSYMS member of struct parse_stack.
	(psymtab_to_symtab_1): Don't set maxsyms.
	(new_symtab): Remove maxsyms argument.
	(psymtab_to_symtab_1): Update call to new_symtab.
	(shrink_block): Delete function.
	(add_symbol): Add symbols via dict_add_symbol_block.
	* jv-lang.c (add_class_symtab_symbol): Add symbols via
	dict_add_symbol_block.
	Delete variable class_symtab_space.
	* Makefile.in (jv-lang.o): Add dictionary_h.
	* jv-lang.c: #include "dictionary.h"
	* symmisc.c (free_symtab): Call free_func rather than freeing free_ptr.
	* jv-lang.c (get_java_class_symtab): Initialize free_func rather
	than free_ptr.
	(free_class_block): New function.
	(add_class_symtab_symbol): Delete reference to free_ptr.
	* buildsym.c (end_symtab): Initialize free_func rather than free_ptr.
	* symtab.h (struct symtab): Replace free_ptr by free_func.
	* jv-lang.c (get_java_class_symtab): Add DICT_BLOCK assignments.
	* Makefile.in (buildsym.o): Add dictionary_h.
	* buildsym.c (finish_block): Initialize BLOCK_DICT (block).
	#include "dictionary.h"
	* symtab.h (struct block): Add 'dict' member.
	(BLOCK_DICT): New macro.
	* dictionary.c: New file.
	* dictionary.h: New file.
	* Makefile.in (SFILES): Add dictionary.c
	(dictionary_h): New variable.
	(COMMON_OBS): Add dictionary.o.
	(dictionary.o): New rule.
	(carlton): New rule.
@
text
@d537 1
a537 2
	demangle.c dictionary.c dwarfread.c \
	dwarf2read.c elfread.c environ.c eval.c \
a638 1
dictionary_h = dictionary.h
d828 1
a828 1
	charset.o dictionary.o \
d1558 1
a1558 1
	$(stabsread_h) $(dictionary_h)
a1632 2
dictionary.o: dictionary.c $(defs_h) $(dictionary_h) $(gdb_obstack_h) \
	$(symtab_h) $(buildsym_h) $(gdb_assert_h)
d1819 1
a1819 1
	$(jv_lang_h) $(gdbcore_h) $(dictionary_h)
d1901 1
a1901 1
	$(aout_stab_gnu_h) $(expression_h) $(language_h) $(dictionary_h)
a2590 5


# Compiles and then runs a subset of the tests.
carlton: all
	cd testsuite; ./carlton_runtest
@


1.262.2.3
log
@2002-09-23  David Carlton  <carlton@@math.stanford.edu>

	* dictionary.c (struct dict_vtbl): 'add_symbol' field.
	(add_symbol_generic): New function.
	(free_obstack): New function.
	(dict_create_hashed): New function.
	(lookup_hashed): New function.
	(iterator_first_hashed): New function.
	(iterator_hashed_advance): New function.
	(iterator_next_hashed): New function.
	* dictionary.h: A few more declarations.
	* mdebugread.c (parse_symbol): Use dict_iterator when finding
	parameters.
	* Makefile.in (valops.o): Depend on dictionary_h.
	* valops.c (value_of_this): Check empty block via dict_empty.
	#include "dictionary.h"
	* symfile.c (free_named_symtabs): Check empty block via dict_empty.
	* dictionary.h: Declare dict_empty.
	* symmisc.c (dump_symtab): Don't print out number of
	symbols/buckets.
	* printcmd.c (print_frame_args): Delete assertion that block isn't
	a hashtable.
	* symmisc.c (free_symtab_block): Update to use dictionary
	methods.
	* symtab.h (struct symtab): Comment on free_contents.
	* jv-lang.c (get_java_class_symtab): Set class_symtab->free_code.
	* mdebugread.c (add_symbol): Delete 'nsyms' variable.
	(fixup_sigtramp): Add symbol via dict_add_symbol_block.
	* Makefile.in (mi-cmd-stack.o): Depend on dictionary_h.
	* ada-lang.c (symtab_for_sym): Update uses of ALL_BLOCK_SYMBOLS.
	(ada_add_block_symbols): Ditto.
	(debug_print_block): Ditto.
	(fill_in_ada_prototype): Ditto.
	* breakpoint.c (get_catch_sals): Ditto.
	* coffread.c (patch_opaque_types): Ditto.
	* tracepoint.c (add_local_symbols): Ditto.
	(scope_info): Ditto.
	* symtab.c (find_pc_sect_symtab): Ditto.
	(search_symbols): Ditto.
	(make_symbol_completion_list): Ditto.
	(find_addr_symbol): Ditto.
	(make_file_symbol_completion_list): Ditto.
	(make_symbol_overload_list): Ditto.
	* symmisc.c (dump_symtab): Ditto.
	* stack.c (print_block_frame_locals): Ditto.
	(print_block_frame_labels): Ditto.
	(print_frame_arg_vars): Ditto.
	* printcmd.c (print_frame_args): Ditto.
	* objfiles.c (objfile_relocate): Ditto.
	* mdebugread.c (mylookup_symbol): Ditto.
	* Makefile.in (ada-lang.o): Depend on dictionary_h.
	* Makefile.in (tracepoint.o): Ditto.
	* Makefile.in (symmisc.o): Ditto.
	* Makefile.in (stack.o): Ditto.
	* Makefile.in (printcmd.o): Ditto.
	* Makefile.in (objfiles.o): Ditto.
	* Makefile.in (coffread.o): Ditto.
	* Makefile.in (breakpoint.o): Ditto.
	* ada-lang.c: #include "dictionary.h"
	* tracepoint.c: Ditto.
	* symmisc.c: Ditto.
	* stack.c: Ditto.
	* printcmd.c: Ditto.
	* objfiles.c: Ditto.
	* coffread.c: Ditto.
	* breakpoint.c: Ditto.
	* symtab.h: Comment out ALL_BLOCK_SYMBOLS.  (Moved to
	dictionary.h.)
	* dictionary.c: Dict_iterator accessor macros.
	(struct dict_vtbl): Add iterator_first, iterator_next.
	(dict_iterator_first): New function.
	(dict_iterator_next): New function.
	(iterator_first_block): New function.
	(iterator_next_block): New function.
	(iterator_block_hashed_advance): New function.
	* dictionary.h: Add dict_iterator stuff.
	* Makefile.in (symtab.o): Depend on dictionary_h.
	* symtab.c: #include "dictionary.h"
	* dictionary.c: Move down #include "dictionary.h", for now...
	(free_block): Rename from dict_free_block.
	(struct dict_vtbl): Add LOOKUP member.
	(dict_lookup): New function.
	(lookup_block): New function.
	* dictionary.h: Declare dict_lookup.
	* symtab.c (lookup_block_symbol): Use dict_lookup.

2002-09-23  David Carlton  <carlton@@math.stanford.edu>

	* mi-cmd-stack.c (list_args_or_locals): Update use of
	ALL_BLOCK_SYMBOLS.
	#include "dictionary.h"
@
text
@d1486 1
a1486 1
	$(breakpoint_h) $(gdbcore_h) $(ada_lang_h) $(dictionary_h) $(ui_out_h)
d1555 1
a1555 1
	$(cli_script_h) $(gdb_events_h) $(source_h) $(dictionary_h)
d1586 1
a1586 1
	$(target_h) $(gdb_assert_h) $(dictionary_h)
d1958 1
a1958 2
	$(gdb_obstack_h) $(gdb_string_h) $(breakpoint_h) $(mmalloc_h) \
	$(dictionary_h)
d2006 1
a2006 1
	$(gdb_assert_h) $(dictionary_h)
d2195 1
a2195 1
	$(annotate_h) $(ui_out_h) $(source_h) $(dictionary_h)
d2213 1
a2213 2
	$(gdb_obstack_h) $(language_h) $(bcache_h) $(dictionary_h) \
	$(gdb_string_h)
d2215 1
a2215 1
	$(frame_h) $(target_h) $(value_h) $(symfile_h) $(objfiles_h)	  \
d2217 3
a2219 3
	$(language_h) $(demangle_h) $(inferior_h) $(linespec_h)	  \
	$(filenames_h) $(dictionary_h) $(gdb_obstack_h)		  \
	$(gdb_string_h) $(gdb_stat_h) $(cp_abi_h) $(source_h)
d2240 1
a2240 1
	$(ax_gdb_h) $(dictionary_h)
d2265 1
a2265 1
	$(gdb_assert_h) $(dictionary_h)
d2437 1
a2437 1
	$(value_h) $(mi_cmds_h) $(ui_out_h) $(symtab_h) $(dictionary_h)
@


1.262.2.4
log
@2002-09-24  David Carlton  <carlton@@math.stanford.edu>

	* dictionary.c: Comment out block-specific stuff.
	* jv-lang.c (get_java_class_symtab): Allocate GLOBAL_BLOCK on
	obstack.
	(free_class_block): Don't free GLOBAL_BLOCK.
	* dictionary.h: Comment out block-specific stuff.
	* symtab.h: Comment out the members of struct block that
	BLOCK_DICT obsoletes, and their accessors.
	* Makefile.in (buildsym.o): Depend on gdb_assert_h.
	* buildsym.c (finish_block): Don't count number of symbols.
	(finish_block): Replace BLOCK_SYM reference with use of iterator.
	#include "gdb_assert.h"
	* symfile.c (free_named_symtabs): Fix calls to dict_empty
	(which would seem to be #if'd out; oops...).
	* buildsym.c (finish_block): Don't set BLOCK_HASHTABLE.
	* jv-lang.c (get_java_class_symtab): Don't set BLOCK_HASHTABLE and
	BLOCK_NSYMS.
	* mdebugread.c (new_block): Allocate BLOCK_DICT via
	dict_create_linear_expandable.
	(add_symbol): Add symbol via dict_add_symbol; no need to chase
	pointers.
	(fixup_sigtramp): Add symbol via dict_add_symbol.
	(new_symtab): Add FIXME comment on freeing blocks.
	* jv-lang.c (get_java_class_symtab): Allocate GLOBAL_BLOCK's dict
	using dict_create_linear_expandable.
	(add_class_symtab_symbol): Add symbol using dict_add_symbol.
	* dictionary.c (struct dictionary_linear_expandable): New struct.
	(struct dictionary): Added member 'linear_expandable'.
	(DICT_LINEAR_EXPANDABLE_MAXSYMS): New macro.
	New variable dict_block_vtbl.  Made all the _vtbl variables static.
	Renamed all 'maxsyms' to 'capacity'.
	(dict_create_linear_expandable): New function.
	(add_symbol_linear_expandable): New function.
	(free_linear_expandable): New function.
	* jv-lang.c (get_java_class_symtab): Create static block's
	dictionary with dict_create_linear.
	* buildsym.c (finish_block): Create function blocks' dictionaries
	with dict_create_linear.
	* dictionary.c (lookup_linear): New function.
	(iterator_first_linear): New function.
	(iterator_next_linear): New function.
	* dictionary.h: Moved comment.
	* dictionary.c (struct dictionary_linear): New struct.
	(struct dictionary): Added 'linear' member.
	(DICT_LINEAR_NSYMS): New macro.
	(DICT_LINEAR_SYMS): New macro.
	(DICT_LINEAR_SYM): New macro.
	New variable dict_linear_vtbl.
	(dict_create_linear): New function.
@
text
@d1560 1
a1560 1
	$(stabsread_h) $(dictionary_h) $(gdb_assert_h)
@


1.262.2.5
log
@2002-09-25  David Carlton  <carlton@@math.stanford.edu>

	* dictionary.c: Commented what needs to be done to add stuff to
	this file.
	* dictionary.h: Expand on namespace_enum comment.
	* Makefile.in (cris-tdep.o): Depend on gdb_string_h.
	(mcore-tdep.o): Ditto.
	(ns32k-tdep.o): Ditto.
	(sh3-rom.o): Ditto.
	(vax-tdep.o): Ditto.
	* cris-tdep.c: #include "gdb_string.h"
	* mcore-tdep.c: Ditto.
	* ns32k-tdep.c: Ditto.
	* sh3-rom.c: Ditto.
	* vax-tdep.c: Ditto.
@
text
@d1615 1
a1615 1
	$(solib_h) $(solib_svr4_h) $(gdb_string_h)
d1899 1
a1899 1
	$(arch_utils_h) $(gdb_string_h)
d1952 1
a1952 1
	$(ns32k_tdep_h) $(gdb_string_h)
d2130 1
a2130 2
	$(serial_h) $(srec_h) $(arch_utils_h) $(regcache_h) $(gdb_string_h) \
	$(sh_tdep_h)
d2279 1
a2279 1
	$(gdb_string_h) $(vax_tdep_h)
@


1.262.2.6
log
@2002-09-26  David Carlton  <carlton@@math.stanford.edu>

	* dictionary.c (dict_iter_name_first): New function.
	(dict_iter_name_next): New function.
	Initialize new members of dict_hashed_vtbl, dict_linear_vtbl, and
	dict_linear_expandable_vtbl.
	(iter_name_first_hashed): New function.
	(iter_name_next_hashed): New function.
	(iter_name_first_linear): New function.
	(iter_name_next_linear): New function.
	(lookup_hashed): Rewrite following new declaration/semantics.
	(lookup_linear): Ditto.
	(dict_lookup): Ditto.
	* symtab.c (lookup_block_symbol): Rewrite to use
	dict_iter_name_first and dict_iter_name_next instead of
	dict_lookup.
	* dictionary.c (struct dict_vtbl): Change member 'lookup'; new
	members 'iter_name_first' and 'iter_name_next'.
	* dictionary.h: Delete all traces of block stuff.
	Change declaration for dict_lookup; new declarations
	dict_iter_name_first and dict_iter_name_next.
	* dictionary.c: Delete all traces of block stuff.
	* symtab.h (SYMBOL_BEST_NAME): New macro.
	(SYMBOL_SOURCE_NAME): Rewrite in terms of SYMBOL_BEST_NAME.
	(SYMBOL_LINKAGE_NAME): Ditto.
	Comment questioning SYMBOL_MATCHES_NAME and
	SYMBOL_MATCHES_REGEXP.
	* Makefile.in (ns32knbsd-tdep.o): Depend on gdb_string_h.
	* ns32knbsd-tdep.c: #include "gdb_string.h"
@
text
@d1955 1
a1955 1
ns32knbsd-tdep.o: ns32knbsd-tdep.c $(defs_h) $(ns32k_tdep_h) $(gdb_string_h)
@


1.262.2.7
log
@Merge with mainline; tag is carlton_dictionary-20020927-merge
@
text
@d293 1
a293 2
	gdbtk/generic/gdbtk-varobj.c gdbtk/generic/gdbtk-wrapper.c \
	gdbtk/generic/gdbtk-main.c
d299 2
a300 2
SUBDIR_GDBTK_ALL= all-gdbtk
SUBDIR_GDBTK_CLEAN= clean-gdbtk
d302 1
a302 1
SUBDIR_GDBTK_UNINSTALL= uninstall-gdbtk
a683 1
main_h = main.h
d934 1
d937 16
d1022 1
a1022 1
gdb$(EXEEXT): gdb.o main.o libgdb.a $(CONFIG_OBS) $(ADD_DEPS) $(CDEPS) $(TDEPLIBS)
d1024 3
a1026 3
	$(HLDENV) $(CC_LD) $(INTERNAL_LDFLAGS) $(WIN32LDAPP) \
		-o gdb$(EXEEXT) gdb.o main.o $(CONFIG_OBS) libgdb.a \
		$(TDEPLIBS) $(TUI_LIBRARY) $(CLIBS) $(LOADLIBES)
a1697 1
gdb.o: gdb.c $(defs_h) $(main_h) $(gdb_string_h)
d1891 1
a1891 1
	$(event_loop_h) $(ui_out_h) $(main_h)
a2350 49
all-gdbtk: insight$(EXEEXT)

install-gdbtk:
	transformed_name=`t='$(program_transform_name)'; \
		  echo insight | sed -e $$t` ; \
	if test "x$$transformed_name" = x; then \
	  transformed_name=insight ; \
	else \
	  true ; \
	fi ; \
	$(SHELL) $(srcdir)/../mkinstalldirs $(bindir)
	$(INSTALL_PROGRAM) insight$(EXEEXT) $(bindir)/$$transformed_name$(EXEEXT) ; \
	$(SHELL) $(srcdir)/../mkinstalldirs $(GDBTK_LIBRARY) ; \
	$(SHELL) $(srcdir)/../mkinstalldirs $(libdir)/insight$(GDBTK_VERSION) ; \
	$(INSTALL_DATA) $(srcdir)/gdbtk/plugins/plugins.tcl $(libdir)/insight$(GDBTK_VERSION)/plugins.tcl ; \
	$(SHELL) $(srcdir)/../mkinstalldirs \
		$(GDBTK_LIBRARY)/images \
		$(GDBTK_LIBRARY)/images2 ; \
	$(SHELL) $(srcdir)/../mkinstalldirs $(GDBTK_LIBRARY)/help \
		$(GDBTK_LIBRARY)/help/images \
		$(GDBTK_LIBRARY)/help/trace ; \
	cd $(srcdir)/gdbtk/library ; \
	for i in *.tcl *.itcl *.ith *.itb images/*.gif images2/*.gif images/icons.txt images2/icons.txt tclIndex help/*.html  help/trace/*.html help/trace/index.toc help/images/*.gif; \
	  do \
		$(INSTALL_DATA) $$i $(GDBTK_LIBRARY)/$$i ; \
	  done ;

uninstall-gdbtk:
	transformed_name=`t='$(program_transform_name)'; \
		  echo insight | sed -e $$t` ; \
	if test "x$$transformed_name" = x; then \
		transformed_name=insight ; \
	else \
		true ; \
	fi ; \
	rm -f $(bindir)/$$transformed_name$(EXEEXT) ; \
	rm -rf $(GDBTK_LIBRARY)

clean-gdbtk:
	rm -f insight$(EXEEXT)

# Removing the old gdb first works better if it is running, at least on SunOS.
insight$(EXEEXT): gdbtk-main.o main.o libgdb.a $(CONFIG_OBS) $(ADD_DEPS) \
		$(CDEPS) $(TDEPLIBS)
	rm -f insight$(EXEEXT)
	$(HLDENV) $(CC_LD) $(INTERNAL_LDFLAGS) $(WIN32LDAPP) \
		-o insight$(EXEEXT) gdbtk-main.o main.o libgdb.a $(CONFIG_OBS)\
		$(TDEPLIBS) $(TUI_LIBRARY) $(CLIBS) $(LOADLIBES)

a2393 6
gdbtk-main.o: $(srcdir)/gdbtk/generic/gdbtk-main.c $(defs_h) $(main_h) \
	$(gdb_string_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(IDE_CFLAGS) $(ITCL_CFLAGS) $(TIX_CFLAGS) \
	$(TCL_CFLAGS) $(TK_CFLAGS) $(X11_CFLAGS) $(GDBTK_CFLAGS)\
		$(srcdir)/gdbtk/generic/gdbtk-main.c -DGDBTK_LIBRARY=\"$(GDBTK_LIBRARY)\"

d2598 1
@


1.262.2.8
log
@2002-09-30  David Carlton  <carlton@@math.stanford.edu>

	* dictionary.h: Augment comment above dict_lookup.
	* dictionary.c (struct dict_vtbl): Delete 'lookup' member, and
	move add_symbol to precede the iterators.
	Make corresponding changes to dict_hashed_vtbl, dict_linear_vtbl,
	dict_linear_expandable_vtbl.
	(dict_lookup): Implement by means of dict_iterator_name_first.
	(iter_name_first_hashed): Don't use lookup_hashed to implement.
	(lookup_hashed): Delete.
	(lookup_linear): Delete.
	* symtab.c (lookup_symbol_aux_global_symtabs): Delete 'block'
	argument, rename local variable 'b' to 'block', and make it point
	to a const struct block.
	(lookup_symbol_aux_minsym_non_hpuxhppa): Ditto.
	(lookup_symbol_aux_global_psymtabs): Ditto.
	(lookup_symbol_aux_static_symtabs): Ditto.
	(lookup_symbol_aux_static_psymtabs): Ditto.
	(lookup_symbol_aux_minsym_hpuxhppa): Ditto.
	(lookup_symbol_aux): Correct calls to above functions.
	(lookup_symbol_aux_minsym_non_hpuxhppa): When recursively calling
	lookup_symbol_aux, pass 'NULL' as block argument.
	(lookup_symbol_aux_minsym_hpuxhppa): Ditto.
	(lookup_symbol_aux_global_symtabs): Don't initialize objfile and
	s.
	(lookup_symbol_aux_minsym_non_hpuxhppa): Don't initialize s.
	(lookup_symbol_aux_global_psymtabs): Ditto.
	(lookup_symbol_aux_static_symtabs): Ditto.
	(lookup_symbol_aux_static_psymtabs): Ditto.
	(lookup_symbol_aux_minsym_hpuxhppa): Ditto.
	(lookup_symbol_aux_global_psymtabs): Don't initialize objfile.
	(lookup_symbol_aux_static_symtabs): Ditto.
	(lookup_symbol_aux_static_psymtabs): Ditto.
	(lookup_symbol_aux_minsym_hpuxhppa): Delete local variable
	objfile.
	(lookup_symbol_aux_static_symtabs): Delete, to be replaced by
	lookup_symbol_aux_symtabs.
	(lookup_symbol_aux_global_symtabs): Ditto.
	(lookup_symbol_aux_symtabs): New function.
	(lookup_symbol_aux_psymtabs): New function.
	(lookup_symbol_aux_global_psymtabs): Delete, to be replaced by
	lookup_symbol_aux_psymtabs.
	(lookup_symbol_aux_static_psymtabs): Ditto.
	(lookup_symbol_aux_minsym_hpuxhppa): Delete, to be replaced by
	lookup_symbol_aux_minsyms.
	(lookup_symbol_aux_minsym_non_hpuxhppa): Ditto.
	(lookup_symbol_aux_minsyms): New function.
	(lookup_symbol_aux): Replace function calls by calls to functions
	with new names.
	(lookup_symbol_aux): Search global psymtabs before minimal
	symbols.
	* Makefile.in (ppc-sysv-tdep.o): Depend on gdb_string_h.
	* ppc-sysv-tdep.c: #include "gdb_string.h".

2002-09-27  David Carlton  <carlton@@math.stanford.edu>

	* symtab.c: Run through gdb_indent.sh.
	(lookup_symbol_aux): Delete code that isn't called.
	(lookup_symbol_aux): Don't declare variables 'register'.
	(lookup_symbol_aux): Move each chunk of code into its own
	function.
	(lookup_symbol_aux_local): New function.
	(lookup_symbol_aux_global_symtabs): New function.
	(lookup_symbol_aux_minsym_non_hpuxhppa): New function.
	(lookup_symbol_aux_global_psymtabs): New function.
	(lookup_symbol_aux_static_symtabs): New function.
	(lookup_symbol_aux_static_psymtabs): New function.
	(lookup_symbol_aux_minsym_hpuxhppa): New function.
	(lookup_symbol_aux_global_psymtabs): Remove embedded newlines from
	strings because CC mode can't deal with them.
	(lookup_symbol_aux_static_psymtabs): Ditto.
	(lookup_symbol_aux): Delete local variables that are now
	obsolete.
	* remote-sds.c (getmessage): Add semicolon after 'retry' label to
	pacify GCC.

2002-09-27  David Carlton  <carlton@@math.stanford.edu>

	* Makefile.in (cris-tdep.o): Depend on gdb_string_h.
	(mcore-tdep.o): Ditto.
	(ns32k-tdep.o): Ditto.
	(ns32knbsd-tdep.o): Ditto.
	(sh3-rom.o): Ditto.
	(vax-tdep.o): Ditto.
	* cris-tdep.c: #include "gdb_string.h"
	* mcore-tdep.c: Ditto.
	* ns32k-tdep.c: Ditto.
	* ns32knbsd-tdep.c: Ditto.
	* sh3-rom.c: Ditto.
	* vax-tdep.c: Ditto.
@
text
@d1981 1
a1981 1
	$(regcache_h) $(value_h) $(gdb_string_h) $(ppc_tdep_h)
@


1.262.2.9
log
@2002-10-09  David Carlton  <carlton@@math.stanford.edu>

	* cp-support.c: Comment out cp_find_last_component and
	cp_locate_arguments.
	Add comments warning about pitfals involving demangled names.
	* buildsym.c (finish_block): Grab the namespace names from the
	front instead of from the back.
	* Makefile.in (cp-support.o): Depend on gdb_assert_h.
	* cp-support.c: #include "gdb_assert.h"
	* cp-support.h: Declare cp_find_first_component.
	* cp-support.c (cp_find_first_component): New function.
	* buildsym.c (finish_block): Don't add namespace using stuff
	unless there's a demangled name to work with.
	(finish_block): Delete unused variable 'j'.
	(finish_block): Move declaration of iter earlier to pacify GCC.

2002-10-08  David Carlton  <carlton@@math.stanford.edu>

	* symfile.c (obsavestring): Make first argument a const char *.
	* symfile.h: Add opaque declaration for 'struct obstack'.
	Make obsavestring take a const char * as its first argument.
	* Makefile.in (cp-support.o): Correct dependencies.
	* cp-support.h: Declare cp_add_using.
	* cp-support.c: #include "gdb_obstack.h"
	(cp_add_using): New function.
	* Makefile.in (buildsym.o): Depend on $(cp_support_h).
	* buildsym.c (finish_block): Add 'using' directives for
	functions.
	#include "cp-support.h"
	* cp-support.h: Add function declarations.
	* cp-support.c (cp_locate_arguments): New function.
	(cp_find_last_component): New function.
	* symtab.h (struct block): Add comment.
@
text
@d1545 1
a1545 1
	$(stabsread_h) $(dictionary_h) $(gdb_assert_h) $(cp_support_h)
d1590 1
a1590 2
cp-support.o: cp-support.c $(defs_h) $(cp_support_h) $(gdb_string_h) \
	$(demangle_h) $(gdb_obstack_h) $(gdb_assert_h)
@


1.262.2.10
log
@2002-10-11  David Carlton  <carlton@@math.stanford.edu>

	* jv-lang.c (get_java_class_symtab): Initialize BLOCK_USING (bl)
	to NULL.
	* cp-support.c: Change all uses of 'struct using_data' and 'struct
	using_data_node' to 'struct using_direct' and 'struct
	using_direct_node'.
	(cp_free_usings): Fix loop.
	* symtab.c: Ditto.
	* symtab.h: Ditto
	* cp-support.h: Delete declarations for commented-out functions.
	Rename 'struct using_data' and 'struct using_data_node' to 'struct
	using_direct' and 'struct using_direct_node'.
	* cp-support.c: Delete commented-out functions.

2002-10-10  David Carlton  <carlton@@math.stanford.edu>

	* symtab.c (lookup_symbol_aux_using_loop): New function.
	(lookup_symbol_aux_nonlocal): New function.
	(lookup_symbol_aux): Call lookup_symbol_aux_nonlocal instead of
	lookup_symbol_aux_symtabs and lookup_symbol_aux_psymtabs.

	* Makefile.in (symtab.o): Depend on $(cp_support_h).

	* symtab.c: #include "cp-support.h"

	* cp-support.h: Declare cp_copy_usings, cp_free_usings.

	* cp-support.c (cp_free_usings): New function.
	(cp_copy_usings): New function.

	* symtab.c (lookup_symbol_aux): Call lookup_symbol_aux_using to
	apply using directives.
	(lookup_symbol_aux_using): New function.

2002-10-11  David Carlton  <carlton@@math.stanford.edu>

	* gdb.c++/namespace.exp: Add tests from within C::D::marker2.
	* gdb.c++/namespace.cc: Add namespace C and its contents.
@
text
@d2209 1
a2209 1
	$(gdb_string_h) $(gdb_stat_h) $(cp_abi_h) $(source_h) $(cp_support_h)
@


1.262.2.11
log
@Merge with mainline; merge tag carlton_dictionary-20021011-merge.
@
text
@d533 14
a546 12
	ax-general.c ax-gdb.c \
	bcache.c blockframe.c breakpoint.c buildsym.c builtin-regs.c \
	c-exp.y c-lang.c c-typeprint.c c-valprint.c \
	charset.c cli-out.c coffread.c complaints.c completer.c corefile.c \
	cp-abi.c cp-support.c cp-valprint.c \
	dbxread.c demangle.c dictionary.c \
	disasm.c doublest.c dwarfread.c dwarf2read.c \
	elfread.c environ.c eval.c event-loop.c event-top.c expprint.c \
	f-exp.y f-lang.c f-typeprint.c f-valprint.c findvar.c frame.c \
	gdbarch.c arch-utils.c gdbtypes.c gnu-v2-abi.c gnu-v3-abi.c \
	hpacc-abi.c \
	inf-loop.c infcmd.c inflow.c infrun.c \
d548 9
a556 12
	kod.c kod-cisco.c \
	language.c linespec.c \
	m2-exp.y m2-lang.c m2-typeprint.c m2-valprint.c \
	macrotab.c macroexp.c macrocmd.c macroscope.c main.c maint.c \
	mdebugread.c memattr.c mem-break.c minsyms.c mipsread.c \
	nlmread.c \
	objfiles.c osabi.c \
	p-exp.y p-lang.c p-typeprint.c p-valprint.c parse.c printcmd.c \
	regcache.c remote.c \
	scm-exp.c scm-lang.c scm-valprint.c serial.c ser-unix.c source.c \
	stabsread.c stack.c std-regs.c symfile.c symmisc.c symtab.c \
	target.c thread.c top.c tracepoint.c typeprint.c \
d565 4
a568 3
	ui-out.c utils.c ui-file.h ui-file.c \
	valarith.c valops.c valprint.c values.c varobj.c \
	wrapper.c
a641 1
disasm_h = disasm.h
d832 1
a832 2
	charset.o dictionary.o disasm.o \
	charset.o disasm.o \
a1624 2
disasm.o: disasm.c $(defs_h) $(gdb_string_h) $(target_h) $(value_h) \
	$(disasm_h) $(ui_out_h)
d2348 1
a2348 1
	$(SHELL) $(srcdir)/../mkinstalldirs $(bindir); \
d2384 1
a2384 1
		-o insight$(EXEEXT) gdbtk-main.o main.o $(CONFIG_OBS) libgdb.a \
d2479 1
a2479 1
	$(mi_cmds_h) $(mi_getopt_h) $(ui_out_h) $(gdb_string_h) $(disasm_h)
d2500 1
a2500 1
	$(gdb_h) $(frame_h)
@


1.262.2.12
log
@2002-10-18  David Carlton  <carlton@@math.stanford.edu>

	* Makefile.in (block_h): New variable.
	Updated dependencies to reflect it.
	* parse.c (parse_exp_1): Use BLOCK_START.
	#include "block.h"
	* p-exp.tab.c: Regenerated.
	* m2-exp.tab.c: Ditto.
	* jv-exp.tab.c: Ditto.
	* f-exp.tab.c: Ditto.
	* c-exp.tab.c: Ditto.
	* ada-exp.tab.c: Ditto.
	* ada-lang.c: #include "block.h"
	* p-exp.y: Ditto.
	* objc-exp.y: Ditto.
	* m2-exp.y: Ditto.
	* jv-exp.y: Ditto.
	* f-exp.y: Ditto.
	* c-exp.y: Ditto.
	* ada-exp.y: Ditto.
	* values.c: Ditto.
	* valops.c: Ditto.
	* tracepoint.c: Ditto.
	* symtab.c: Ditto.
	* symmisc.c: Ditto.
	* symfile.c: Ditto.
	* stack.c: Ditto.
	* printcmd.c: Ditto.
	* objfiles.c: Ditto.
	* objc-lang.c: Ditto.
	* nlmread.c: Ditto.
	* mips-tdep.c: Ditto.
	* mdebugread.c: Ditto.
	* linespec.c: Ditto.
	* jv-lang.c: Ditto.
	* infcmd.c: Ditto.
	* f-valprint.c: Ditto.
	* findvar.c: Ditto.
	* expprint.c: Ditto.
	* coffread.c: Ditto.
	* buildsym.c: Ditto.
	* breakpoint.c: Ditto.
	* blockframe.c: Ditto.
	* ax-gdb.c: Ditto.
	* alpha-tdep.c: Ditto.
	* block.h: New file.
	* symtab.h: Moved struct block, struct blockvector, and related
	macros and function declarations to block.h.
	* dwarf2read.c (process_die): Set processing_has_namespace_info if
	we run into DW_TAG_namespace, DW_TAG_imported_declaration, or
	DW_TAG_imported_module.
	New variable current_namespace.
	(psymtab_to_symtab_1): Set current_namespace to "".
	(dwarf2_name): New function.
	(dwarf2_add_member_fn): Get name via dwarf2_name.
	(read_typedef): Ditto.
	(read_file_scope): Ditto.
	(dwarf2_add_field): Ditto.
	(read_structure_scope): Ditto.
	(read_enumeration): Ditto.
	(dwarf2_extension): New function.
	(read_namespace): Set current_namespace correctly; also, if we're
	entering an anonymous namespace, add an appropriate using
	directive.
	* buildsym.c (start_symtab): Reset processing_has_namespace_info
	to 0.
	(add_symbol_to_list): Only scan for anonymous namespaces if
	!processing_has_namespace_info.
	* buildsym.h: Add new flag processing_has_namespace_info.

2002-10-18  David Carlton  <carlton@@math.stanford.edu>

	* mi-cmd-stack.c: #include "block.h"
@
text
@a623 1
block_h = block.h
d1440 1
a1440 1
	$(symfile_h) $(objfiles_h) $(block_h)
d1444 1
a1444 1
	$(bfd_h) $(objfiles_h) $(symfile_h) $(block_h)
d1448 1
a1448 1
	$(symfile_h) $(block_h)
d1452 1
a1452 1
	$(bfd_h) $(objfiles_h) $(symfile_h) $(block_h)
d1456 1
a1456 1
	$(bfd_h) $(objfiles_h) $(symfile_h) $(block_h)
d1461 1
a1461 1
	$(bfd_h) objfiles.h symfile.h $(block_h)
d1473 1
a1473 2
	$(breakpoint_h) $(gdbcore_h) $(ada_lang_h) $(dictionary_h) \
	$(ui_out_h) $(block_h)
d1496 1
a1496 1
	$(doublest_h) $(arch_utils_h) $(elf_bfd_h) $(alpha_tdep_h) $(block_h)
d1531 1
a1531 1
	$(target_h) $(ax_h) $(ax_gdb_h) $(gdb_string_h) $(block_h)
d1536 1
a1536 2
	$(inferior_h) $(annotate_h) $(regcache_h) $(gdb_assert_h) \
	$(block_h)
d1542 1
a1542 2
	$(cli_script_h) $(gdb_events_h) $(source_h) $(dictionary_h) \
	$(block_h)
d1547 1
a1547 2
	$(stabsread_h) $(dictionary_h) $(gdb_assert_h) $(cp_support_h) \
	$(block_h)
d1573 1
a1573 1
	$(target_h) $(gdb_assert_h) $(dictionary_h) $(block_h)
d1662 1
a1662 1
	$(value_h) $(language_h) $(parser_defs_h) $(block_h)
d1671 1
a1671 1
	$(f_lang_h) $(frame_h) $(gdbcore_h) $(command_h) $(block_h)
d1677 1
a1677 1
	$(builtin_regs_h) $(block_h)
d1793 1
a1793 1
	$(parser_defs_h) $(regcache_h) $(block_h)
d1814 1
a1814 1
	$(jv_lang_h) $(gdbcore_h) $(dictionary_h) $(block_h)
d1831 1
a1831 1
	$(cp_abi_h) $(source_h) $(block_h)
d1896 1
a1896 2
	$(aout_stab_gnu_h) $(expression_h) $(language_h) $(dictionary_h) \
	$(block_h)
d1912 1
a1912 1
	$(symcat_h) $(block_h)
d1940 1
a1940 1
	$(objfiles_h) $(buildsym_h) $(stabsread_h) $(block_h)
d1950 1
a1950 1
	$(dictionary_h) $(block_h)
d1975 1
a1975 1
	$(doublest_h) $(builtin_regs_h) $(gdb_assert_h) $(block_h)
d1998 1
a1998 1
	$(gdb_assert_h) $(dictionary_h) $(block_h)
d2188 1
a2188 1
	$(annotate_h) $(ui_out_h) $(source_h) $(dictionary_h) $(block_h)
d2199 1
a2199 2
	$(completer_h) $(bcache_h) $(gdb_string_h) $(gdb_stat_h) $(source_h) \
	$(block_h)
d2207 1
a2207 1
	$(gdb_string_h) $(block_h)
d2213 1
a2213 2
	$(gdb_string_h) $(gdb_stat_h) $(cp_abi_h) $(source_h) $(cp_support_h) \
	$(block_h)
d2234 1
a2234 1
	$(ax_gdb_h) $(dictionary_h) $(block_h)
d2259 1
a2259 1
	$(gdb_assert_h) $(dictionary_h) $(block_h)
d2266 1
a2266 1
	$(gdb_assert_h) $(regcache_h) $(block_h)
d2486 1
a2486 2
	$(value_h) $(mi_cmds_h) $(ui_out_h) $(symtab_h) $(dictionary_h) \
	$(block_h)
@


1.262.2.13
log
@2002-10-21  David Carlton  <carlton@@math.stanford.edu>

	* buildsym.c (add_symbol_to_list): Expand comment.
	* objc-lang.c (find_methods): Use BLOCK_START, BLOCK_END.
	* Makefile.in (x86-64-tdep.o): Depend on block_h.
	* x86-64-tdep.c (x86_64_skip_prologue): Use BLOCK_END and
	SYMBOL_BLOCK_VALUE.
@
text
@d2298 1
a2298 1
	$(x86_64_tdep_h) $(dwarf2cfi_h) $(gdb_assert_h) $(block_h)
@


1.262.2.14
log
@2002-10-25  David Carlton  <carlton@@math.stanford.edu>

	* symtab.c (lookup_symbol_aux_block): New function.
	(lookup_symbol_aux_local): Call lookup_symbol_aux_block.
	(lookup_symbol_aux): Ditto.

	* Merge from mainline; tag is carlton_dictionary-20021025-merge.

2002-10-25  David Carlton  <carlton@@math.stanford.edu>

	* cp-support.c: Add comment to demangled name pitfalls.
	* symtab.c (lookup_transparent_type): Add FIXME comment at
	beginning.

2002-10-23  David Carlton  <carlton@@math.stanford.edu>

	* symtab.c: Delete cplusplus_hint.
	Delete prototype for find_template_name_end.
	* dwarf2read.c (scan_partial_symbols): Add in a gdb_assert from a
	later version of my namespace_minimal patch.

2002-10-25  David Carlton  <carlton@@math.stanford.edu>

	* gdb.c++/namespace.exp: Change all of the setup_xfail tests that
	I added into setup_kfails.
@
text
@a1773 2
i386obsd-tdep.o: i386obsd-tdep.c $(defs_h) $(arch_utils_h) $(gdbcore_h) \
	$(regcache_h) $(i386_tdep_h) $(i387_tdep_h)
d1836 1
a1836 1
	$(cp_abi_h) $(source_h) $(block_h) $(parser_defs_h)
d2145 1
a2145 2
	$(symfile_h) $(objfiles_h) $(gdbcore_h) $(inferior_h) $(solist_h) \
	$(bcache_h) $(regcache_h)
@


1.262.2.15
log
@2002-11-13  David Carlton  <carlton@@math.stanford.edu>

	* buildsym.c (finish_block): Initialize block_scope (block) in
	C++ function blocks.
	* dwarf2read.c: Delete variable current_namespace.
	(psymtab_to_symtab_1): Rename current_namespace to
	processing_current_namespace.
	(read_namespace): Ditto.
	* buildsym.h: New variable processing_current_namespace.
	* block.h: Declarations for block_scope and block_set_scope.
	* block.c (block_scope): New function.
	(block_set_scope): New function.
	* cp-support.h (struct namespace_info): Add 'scope' member.
	* buildsym.c (finish_block): Replace BLOCK_USING by
	block_set_using.
	(end_symtab): Ditto.
	* block.h: Declaration for block_set_using.
	* block.c (block_set_using): New function.
	(block_initialize_namespace): New function.
	* symtab.c (lookup_symbol_aux_using): Replace BLOCK_USING by
	block_using.
	* buildsym.c (finish_block): Set BLOCK_NAMESPACE to NULL, not
	BLOCK_USING.
	* jv-lang.c (get_java_class_symtab): Ditto.
	* block.h: Declaration for block_using.
	* block.c (block_using): New function.
	* Makefile.in (block.o): New rule; also add block.c to SFILES and
	block.o to COMMON_OBS.
	* block.c: New file.
	* symtab.c (contained_in): Move to block.c.
	(block_function): Ditto.
	* block.h (struct block): Have the language-specific stuff contain
	a struct namespace_info.
	(BLOCK_NAMESPACE): New macro.
	(BLOCK_USING): Delete.
	* linespec.c (decode_variable): Add comment before
	decode_variable.
	* cp-support.h (struct namespace_info): New struct.
@
text
@d534 1
a534 1
	bcache.c block.c blockframe.c breakpoint.c buildsym.c builtin-regs.c \
d833 1
a833 1
COMMON_OBS = version.o block.o blockframe.o breakpoint.o findvar.o regcache.o \
a1535 1
block.o: block.c $(defs_h) $(block_h) $(gdb_obstack_h) $(cp_support_h)
@


1.262.2.16
log
@2002-11-14  David Carlton  <carlton@@math.stanford.edu>

	* Makefile.in (symtab.o): Depend on gdb_assert_h.
	* symtab.c: #include "gdb_assert.h"
	* Makefile.in (namespace): Add 'namespace' target.
	* buildsym.c (finish_block): Comment out the using declarations
	generation.
	* block.h: Make argument to block_scope const.
	* block.c (block_scope): Make argument const.
	* symtab.c (lookup_symbol_aux_using): Gather usings via
	block_all_usings.
	(lookup_symbol_namespace): Rename from
	lookup_symbol_aux_using_loop.
	(lookup_symbol_aux_using_loop): New function.
	* block.h: Declare block_all_usings.
	* block.c (block_all_usings): New function.
	* symtab.c (lookup_symbol_aux_nonlocal): Delete FIXME comment.
	* buildsym.c (finish_block): Add FIXME comment.

2002-11-14  David Carlton  <carlton@@math.stanford.edu>

	* carlton_runnamespace: New file.
@
text
@d2225 1
a2225 1
	$(block_h) $(gdb_assert_h)
a2660 3

namespace: all
	cd testsuite; ./carlton_runnamespace
@


1.262.2.17
log
@2002-11-15  David Carlton  <carlton@@math.stanford.edu>

	* Merge from mainline; tag is carlton_dictionary-20021115-merge.
@
text
@a57 2
DESTDIR =

d539 1
a539 1
	disasm.c doublest.c dummy-frame.c dwarfread.c dwarf2read.c \
d554 1
a554 1
	regcache.c reggroups.c remote.c \
a645 1
dummy_frame_h = dummy-frame.h
a703 1
reggroups_h = reggroups.h
d834 2
a835 1
	charset.o dictionary.o disasm.o dummy-frame.o \
d861 1
a861 2
	gnu-v2-abi.o gnu-v3-abi.o hpacc-abi.o cp-abi.o cp-support.o \
	reggroups.o
d925 3
a927 6
		$(INSTALL_PROGRAM) gdb$(EXEEXT) \
			$(DESTDIR)$(bindir)/$$transformed_name$(EXEEXT) ; \
		$(srcdir)/../mkinstalldirs \
			$(DESTDIR)$(man1dir) ; \
		$(INSTALL_DATA) $(srcdir)/gdb.1 \
			$(DESTDIR)$(man1dir)/$$transformed_name.1
d1540 1
a1540 1
	$(dummy_frame_h) $(block_h)
a1639 2
dummy-frame.o: dummy-frame.c $(defs_h) $(dummy_frame_h) $(regcache_h) \
	$(frame_h) $(inferior_h) $(gdb_assert_h)
d1689 1
a1689 2
	$(regcache_h) $(gdb_assert_h) $(gdb_obstack_h) $(dummy_frame_h) \
	$(gdbcore_h) $(annotate_h)
d1700 1
a1700 1
	$(gdb_assert_h) $(gdb_string_h) $(gdb_events_h) $(reggroups_h)
d1730 1
a1730 1
	$(symfile_h) $(objfiles_h) $(language_h)
d1778 1
a1778 1
	$(gdbcore_h) $(gdb_stat_h) $(floatformat_h) $(target_h) $(i386_tdep_h)
d1884 1
a1884 1
	$(frame_h) $(inferior_h) $(source_h) $(complaints_h)
d2020 2
a2021 4
	$(gdbcmd_h) $(regcache_h) $(reggroups_h) $(gdb_assert_h) \
	$(gdb_string_h) $(gdbcmd_h)
reggroups.o: reggroups.c $(defs_h) $(reggroups_h) $(gdbtypes_h) \
	$(gdb_assert_h) $(regcache_h) $(command_h) $(gdbcmd_h)
d2365 4
a2368 11
	$(INSTALL_PROGRAM) insight$(EXEEXT) \
		$(DESTDIR)$(bindir)/$$transformed_name$(EXEEXT) ; \
	$(SHELL) $(srcdir)/../mkinstalldirs \
		$(DESTDIR)$(GDBTK_LIBRARY) ; \
	$(SHELL) $(srcdir)/../mkinstalldirs \
		$(DESTDIR)$(libdir)/insight$(GDBTK_VERSION) ; \
	$(INSTALL_DATA) $(srcdir)/gdbtk/plugins/plugins.tcl \
		$(DESTDIR)$(libdir)/insight$(GDBTK_VERSION)/plugins.tcl ; \
	$(SHELL) $(srcdir)/../mkinstalldirs \
		$(DESTDIR)$(GDBTK_LIBRARY)/images \
		$(DESTDIR)$(GDBTK_LIBRARY)/images2 ; \
d2370 5
a2374 3
		$(DESTDIR)$(GDBTK_LIBRARY)/help \
		$(DESTDIR)$(GDBTK_LIBRARY)/help/images \
		$(DESTDIR)$(GDBTK_LIBRARY)/help/trace ; \
d2378 1
a2378 1
		$(INSTALL_DATA) $$i $(DESTDIR)$(GDBTK_LIBRARY)/$$i ; \
d2389 2
a2390 2
	rm -f $(DESTDIR)$(bindir)/$$transformed_name$(EXEEXT) ; \
	rm -rf $(DESTDIR)$(GDBTK_LIBRARY)
@


1.262.2.18
log
@2002-11-20  David Carlton  <carlton@@math.stanford.edu>

	* dwarf2read.c (scan_partial_symbols): Move lowpc, highpc initial
	and final setting to dwarf2_build_psymtabs_hard.
	(dwarf2_build_psymtabs_hard): Set lowpc, highpc outside of
	scan_partial_symbols.
	(scan_partial_symbols): Handle namespaces by calling ourself
	recursively.
	* Makefile.in (cp-support.o): Depend on gdbcmd_h.
	* cp-support.c (_initialize_cp_support): New function.
	(maintenance_print_namespace): New function.
	#include "gdbcmd.h"
	* cp-support.h: Add opaque declaration for 'struct symbol'.
	* symfile.h: Add comment saying that you must first include
	symtab.h.
	* Makefile.in (cp-support.o): Depend on dictionary_h.
	* cp-support.c: #include "dictionary.h"
	* gdbtypes.h: Add TYPE_CODE_NAMESPACE to enum type_code.
	* cp-support.h: Add declaration for cp_check_namespace_symbol.
	* Makefile.in (cp-support.o): Depend on gdbtypes_h.
	* cp-support.c: New variable namespace_objfile.
	(get_namespace_objfile): New function.
	(cp_check_namespace_symbol): New function.
	#include "gdbtypes.h"
	* Makefile.in (cp-support.o): Depend on symfile_h, symtab_h,
	block_h, objfiles_h.
	* cp-support.c: Add declaration for find_last_component.
	#include "symfile.h", "symtab.h", "block.h", "objfiles.h".
	New variable namespace_block.
	(get_namespace_block): New function.
	(free_namespace_block): New function.
@
text
@d1606 1
a1606 3
	$(demangle_h) $(gdb_obstack_h) $(gdb_assert_h) $(symtab_h) \
	$(symfile_h) $(block_h) $(objfiles_h) $(gdbtypes_h) $(dictionary_h) \
	$(gdbcmd_h)
@


1.262.2.19
log
@2002-11-21  David Carlton  <carlton@@math.stanford.edu>

	* cp-support.c (get_namespace_objfile): Set
	namespace_objfile->name.
	* dwarf2read.c (scan_partial_symbols): Allow empty pdi.name if
	we're reading a namespace.
	* Makefile.in (dwarf2read.o): Depend on cp_support_h.
	* dwarf2read.c (scan_partial_symbols): Add 'namespace' arg.
	(dwarf2_build_psymtabs_hard): Update call to
	scan_partial_symbols.
	(add_partial_namespace): New function.
	(scan_partial_symbols): Call add_partial_namespace.
	#include "cp-support.h"
	* cp-support.c: Add me to contributors.
	* cp-support.h: Ditto.
	* buildsym.c (scan_for_anonymous_namespaces): Convert for loop
	into a clearer while loop.
	(finish_block): Ditto.
@
text
@d1660 1
a1660 1
	$(gdb_assert_h) $(cp_support_h)
@


1.262.2.20
log
@2002-11-22  David Carlton  <carlton@@math.stanford.edu>

	* linespec.c (examine_compound_token): Rewrite as switch
	statement, and add FIXME comment.
	* frame.h: Make arg of block_innermost_frame const.
	* blockframe.c (block_innermost_frame): Make arg const.
	* block.h: Make args to block_function, contained_in const.
	* block.c (block_function): Make arg const.
	(contained_in): Ditto.
	* value.h: Make arg of symbol_read_needs_frame const.
	* findvar.c (symbol_read_needs_frame): Make arg const.
	* symtab.h: Make first arg of symbol_demangled_name const.
	* symtab.c (symbol_demangled_name): Make arg const.
	* value.h: Make first arg of read_var_value const.
	* findvar.c (read_var_value): Make first arg const.
	* Makefile.in (valops.o): Depend on cp_support_h.
	* valops.c: #include "cp-support.h"
	* symtab.h: Add FIXME about name of namespace_enum.
	Add opaque declaration of struct using_direct_node.
	* symtab.c (lookup_symbol_namespace): Make extern; rename args.
	* symtab.h: Declare lookup_symbol_namespace.
	* valops.c (value_struct_elt_for_reference): Make 'name' a const
	char *.
	(value_namespace_elt): New function.
	* expprint.c (print_subexp): Ditto.
	(dump_subexp): Ditto.
	* parse.c (length_of_subexp): Ditto.
	(prefixify_subexp): Ditto.
	* expression.h: Update comment to reflect the block in OP_SCOPE.
	* c-exp.y: Set block in OP_SCOPE expression.
	* jv-exp.y (push_qualified_expression_name): Put a NULL block in
	OP_SCOPE expression.
	* objc-exp.y: Ditto.
	* p-exp.y: Ditto.
	* eval.c (evaluate_subexp_standard): Handle OP_SCOPE via
	value_aggregate_elt.
	* value.h: Add declaration for value_aggregate_elt; delete
	declaration for value_struct_elt_for_reference.
	* valops.c (value_aggregate_elt): New function.
	(value_struct_elt_for_reference): Make static.  Don't check type
	of curtype.
	* c-exp.y: Accept TYPE_CODE_NAMESPACE in qualified_name.
	* cp-support.c (cp_check_namespace_symbol): Set TYPE_NAME (type).

2002-11-22  David Carlton  <carlton@@math.stanford.edu>

	* gdb.c++/namespace.exp: Change a couple of tests to not use
	single quotes.
@
text
@d2285 1
a2285 1
	$(gdb_assert_h) $(dictionary_h) $(block_h) $(cp_support_h)
@


1.262.2.21
log
@2002-11-24  David Carlton  <carlton@@bactrian.org>

	* Makefile.in (c-typeprint.o): Depend on gdb_assert_h.
	* c-typeprint.c: #include "gdb_assert.h"
	* gdbtypes.c (recursive_dump_type): Handle TYPE_CODE_NAMESPACE.
	* c-typeprint.c (c_type_print_varspec_prefix): Ditto.
	(c_type_print_varspec_suffix): Ditto.
	(c_type_print_base): Ditto.
	* typeprint.c (print_type_scalar): Ditto.
	* printcmd.c (print_formatted): Ditto.
	* language.c (structured_type): Ditto.
	* cp-support.c (cp_check_namespace_symbol): Allocate type via
	init_type.
	* gdbtypes.c (init_type): Handle TYPE_CODE_NAMESPACE.
	* valops.c (value_namespace_elt): Handle sym == NULL.

2002-11-24  David Carlton  <carlton@@bactrian.org>

	* gdb.c++/namespace.exp: Eliminate some of the single quotes, and
	duplicate some of the single quote tests without the quotes.
	Change "print E::ce" test.
	Add some ptype <namespace> tests.
	* carlton_runnamespace: Use different files for compiler with and
	without debug info.
@
text
@d1569 1
a1569 1
	$(gdb_string_h) $(gdb_assert_h)
@


1.262.2.22
log
@2002-12-17  David Carlton  <carlton@@math.stanford.edu>

	* c-exp.y (yylex): Modify the #if 1 block to handle nested types
	in a more honest manner.
	* symtab.c (lookup_nested_type): New function.
	* symtab.h: Declare lookup_nested_type.

2002-12-16  David Carlton  <carlton@@math.stanford.edu>

	* symtab.c (lookup_partial_symbol): Don't search past the end of
	the partial symbols.
	* Makefile.in (f-exp.tab.c): Don't depend on c-exp.tab.c.
	* dwarf2read.c (new_symbol): Only make global symbols associated
	to structures, etc. if the current language is C++.
	(add_partial_symbol): Ditto (for partial symbols).

2002-12-17  David Carlton  <carlton@@math.stanford.edu>

	* gdb.c++/m-data.cc: Whitespace cleanup, to match mainline patch.
	* gdb.c++/m-static.cc: Ditto.
	* gdb.c++/namespace.exp: Fix comment.  Delete third argument to
	all the gdb_tests.

2002-12-16  David Carlton  <carlton@@math.stanford.edu>

	* gdb.c++/namespace.exp: Change KFAIL messages to point to c++/XXX
	instead of gdb/XXX.
@
text
@d1253 1
a1253 1
f-exp.tab.c: f-exp.y
@


1.262.2.23
log
@2002-12-18  David Carlton  <carlton@@math.stanford.edu>

	* symtab.c (lookup_symbol_aux_file): Call
	cp_lookup_possible_namespace_symbol.
	* dwarf2read.c (add_partial_symbol): Sometimes check for possible
	namespace symbols.
	* cp-support.c (maintenance_print_namespace): Handle
	possible_namespace_block, too.
	(cp_lookup_possible_namespace_symbol): New function.
	* cp-support.h: Declare cp_check_possible_namespace_symbols,
	cp_lookup_possible_namespace_symbol.
	* cp-support.c (check_one_possible_namespace_symbol): New
	function.
	(cp_check_possible_namespace_symbols): New function.
	(check_possible_namespace_symbols_loop): New function.
	* symfile.h: Update declaration for add_psymbol_to_list.
	* symfile.c (psymbol_init_demangled_name): New function.
	(add_psymbol_to_list): Change SYMBOL_INIT_LANGUAGE_SPECIFIC to
	psymbol_init_demangled_name.
	(add_psymbol_to_list): Return a const struct psymbol *.
	* Makefile.in (dwarf2read.o): Don't depend on bcache_h.
	* dwarf2read.c: Don't #include "bcache.h"
	* cp-support.c (get_namespace_block): Allocate blocks via
	allocate_block.
	(initialize_namespace_blocks): New function.
	New variable possible_namespace_block.
	(get_namespace_block): Call initialize_namespace_blocks.
	(free_namespace_blocks): Rename from free_namespace_block; handle
	possible_namespace_block, too.
	(get_possible_namespace_block): New function.
	* jv-lang.c (get_java_class_symtab): Ditto.
	* block.c (allocate_block): New function.
	* block.h: Declare allocate_block.
@
text
@d1659 1
a1659 1
	$(language_h) $(complaints_h) $(gdb_string_h) \
@


1.262.2.24
log
@2002-12-23  David Carlton  <carlton@@math.stanford.edu>

	* Merge from mainline; tag is carlton_dictionary-20021223-merge.
@
text
@d171 1
a171 1
	mi-cmds.o mi-cmd-env.o mi-cmd-var.o mi-cmd-break.o mi-cmd-stack.o \
d176 1
a176 1
	mi/mi-cmds.c mi/mi-cmd-env.c \
d264 5
d298 1
a298 1
	$(LIBGUI) $(ITCL_DEPS) $(ITK_DEPS) $(TK_DEPS) $(TCL_DEPS)
a553 1
	objc-exp.y objc-lang.c \
a595 1
readline_h = 	$(READLINE_SRC)/readline.h
d673 1
a673 1
gdbthread_h = gdbthread.h $(breakpoint_h) $(frame_h)
d681 1
a681 1
inferior_h = inferior.h $(breakpoint_h) $(target_h) $(frame_h)
a686 1
m68k_tdep_h = m68k-tdep.h
a692 1
mips_tdep_h = mips-tdep.h
a696 1
objc_lang_h = objc-lang.h
a874 1
	objc-exp.tab.c \
a1139 1
	        objc-exp.tab.c \
a1234 16
.PRECIOUS: objc-exp.tab.c
objc-exp.tab.o: objc-exp.tab.c
objc-exp.tab.c: objc-exp.y
	$(SHELL) $(YLWRAP) "$(YACC)" $(srcdir)/objc-exp.y y.tab.c objc-exp.tmp -- $(YFLAGS) 
	-sed -e '/extern.*malloc/d' \
	     -e '/extern.*realloc/d' \
	     -e '/extern.*free/d' \
	     -e '/include.*malloc.h/d' \
	     -e 's/malloc/xmalloc/g' \
	     -e 's/realloc/xrealloc/g' \
	     -e '/^#line.*y.tab.c/d' \
	  < objc-exp.tmp > objc-exp.new
	-rm objc-exp.tmp
	mv objc-exp.new ./objc-exp.tab.c

# See comments above ...
d1364 1
a1364 2
	hp300ux-nat.c hppa-tdep.c hppa-hpux-tdep.c \
	hppab-nat.c hppah-nat.c hpread.c \
a1427 6
# FIXME: Thread-db.o gets warnings because the definitions of the register
# sets are different from kernel to kernel.
thread-db.o: $(srcdir)/thread-db.c
	$(CC) -c $(INTERNAL_WARN_CFLAGS) $(NO_WERROR_CFLAGS) \
		$(srcdir)/thread-db.c

d1430 1
a1430 1
		$(TCL_CFLAGS) $(TK_CFLAGS) $(X11_CFLAGS) \
a1449 4
objc-exp.tab.o: objc-exp.tab.c $(objc_lang_h) $(defs_h) $(expression_h) \
	$(gdbtypes_h) $(language_h) $(parser_defs_h) $(symtab_h) $(value_h) \
	$(bfd_h) $(objfiles_h) $(symfile_h)

d1477 1
a1477 1
	$(serial_h) $(regcache_h) $(m68k_tdep_h)
d1499 1
a1499 1
	$(regcache_h) $(alpha_tdep_h) $(gregset_h) $(gdb_string_h)
d1553 2
a1554 2
	$(cli_script_h) $(gdb_events_h) $(source_h) $(gdb_assert_h) \
	$(block_h) $(dictionary_h)
d1556 5
a1560 4
	$(symfile_h) $(objfiles_h) $(gdbtypes_h) $(gdb_assert_h) \
	$(complaints_h) $(gdb_string_h) $(expression_h) $(language_h) \
	$(bcache_h) $(filenames_h) $(macrotab_h) $(demangle_h) $(buildsym_h) \
	$(stabsread_h) $(dictionary_h) $(cp_support_h) $(block_h)
d1590 1
a1590 1
	$(filenames_h) $(cli_decode_h) $(gdbcmd_h) $(completer_h) $(readline_h)
d1603 1
a1603 1
	$(gdbthread_h) $(regcache_h) $(symfile_h) $(readline_h)
d1614 1
a1614 1
	$(monitor_h) $(serial_h) $(regcache_h) $(m68k_tdep_h)
d1627 1
a1627 1
	$(serial_h) $(regcache_h) $(m68k_tdep_h)
d1674 1
a1674 1
	$(terminal_h) $(event_loop_h) $(event_top_h) $(gdbcmd_h) $(readline_h)
d1677 1
a1677 2
	$(gdb_string_h) $(gdbcore_h) $(gdb_stat_h) $(xcoffsolib_h) \
	$(readline_h)
d1679 1
a1679 2
	$(value_h) $(language_h) $(parser_defs_h) $(target_h) $(gdb_string_h) \
	$(block_h)
d1700 2
a1701 3
	$(regcache_h) $(gdb_assert_h) $(gdb_string_h) $(builtin_regs_h) \
	$(gdb_obstack_h) $(dummy_frame_h) $(gdbcore_h) $(annotate_h) \
	$(language_h)
d1742 1
a1742 2
	$(symfile_h) $(objfiles_h) $(language_h) $(osabi_h)
hppa-hpux-tdep.o: hppa-hpux-tdep.c $(defs_h) $(arch_utils_h) $(osabi_h)
d1802 1
a1802 1
	$(gdbcore_h) $(regcache_h) $(gregset_h) $(gdb_string_h)
d1882 1
a1882 1
	$(arch_utils_h) $(gregset_h) $(m68k_tdep_h)
d1885 1
a1885 3
	$(floatformat_h) $(target_h) $(gregset_h) $(m68k_tdep_h)
m68klinux-tdep.o: m68klinux-tdep.c $(defs_h) $(gdbcore_h) $(frame_h) \
	$(target_h)
d1927 1
a1927 1
	$(solib_svr4_h) $(osabi_h) $(gdb_string_h)
d1932 2
a1933 2
	$(regcache_h) $(osabi_h) $(mips_tdep_h) $(opcode_mips_h) \
	$(elf_mips_h) $(elf_bfd_h) $(symcat_h) $(block_h)
a1967 5
objc-lang.o: objc-lang.c $(defs_h) $(symtab_h) $(gdbtypes_h) $(expression_h) \
	$(parser_defs_h) $(language_h) $(c_lang_h) $(objc_lang_h) \
	$(complaints_h) $(value_h) $(symfile_h) $(objfiles_h) \
	$(gdb_string_h) $(target_h) $(gdbcore_h) $(gdbcmd_h) $(frame_h) \
	$(gdb_regex_h) $(regcache_h)
d2002 1
a2002 1
	$(gdbcore_h) $(regcache_h) $(gregset_h) $(ppc_tdep_h) $(gdb_string_h)
d2047 1
a2047 1
	$(serial_h) $(regcache_h) $(m68k_tdep_h)
d2104 1
a2104 1
	$(serial_h) $(regcache_h) $(value_h) $(m68k_tdep_h)
d2170 1
a2170 1
	$(completer_h) $(filenames_h) $(solist_h) $(readline_h)
d2182 1
a2182 1
	$(filenames_h) $(completer_h) $(ui_out_h) $(readline_h)
d2224 1
a2224 1
	$(readline_h) $(block_h)
d2232 1
a2232 1
	$(gdb_string_h) $(readline_h) $(block_h)
d2255 1
a2255 1
	$(ui_out_h) $(cli_out_h) $(readline_h)
d2260 1
a2260 1
	$(ax_gdb_h) $(dictionary_h) $(block_h) $(readline_h)
d2270 1
a2270 1
	$(filenames_h) $(inferior_h) $(mmalloc_h) $(charset_h) $(readline_h)
d2349 1
a2349 1
	$(cli_dump_h) $(gdb_assert_h) $(target_h) $(readline_h)
d2431 1
a2431 1
        $(ITK_CFLAGS)  \
d2442 1
a2442 1
	 $(TCL_CFLAGS) $(TK_CFLAGS) $(X11_CFLAGS)   \
d2452 1
a2452 1
	 $(TCL_CFLAGS) $(TK_CFLAGS) $(X11_CFLAGS)		\
d2461 1
a2461 1
	$(CC) -c $(INTERNAL_CFLAGS) $(IDE_CFLAGS) $(ITCL_CFLAGS)  \
d2467 1
a2467 1
	$(CC) -c $(INTERNAL_CFLAGS) $(IDE_CFLAGS) $(ITCL_CFLAGS)  \
d2476 1
a2476 1
	 $(TCL_CFLAGS) $(TK_CFLAGS) $(X11_CFLAGS)   \
d2486 1
a2486 1
	 $(TCL_CFLAGS) $(TK_CFLAGS) $(X11_CFLAGS)   \
d2493 1
a2493 1
	$(CC) -c $(INTERNAL_CFLAGS) $(IDE_CFLAGS) $(ITCL_CFLAGS)  \
a2515 4
mi-cmd-env.o: $(srcdir)/mi/mi-cmd-env.c $(defs_h) $(mi_cmds_h) $(ui_out_h) \
	$(mi_out_h) $(varobj_h) $(value_h) $(gdb_string_h) $(inferior.h) \
	$(mi_getopt_h) $(environ_h) $(gdbcmd_h) $(top_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/mi/mi-cmd-env.c
d2600 1
a2600 1
	$(tuiSourceWin_h) $(readline_h)
d2658 1
a2658 2
	$(tuiDisassem_h) $(tuiSource_h) $(tuiSourceWin_h) $(tuiDataWin_h) \
	$(readline_h)
@


1.262.2.25
log
@2003-02-07  David Carlton  <carlton@@math.stanford.edu>

	* Merge with mainline; tag is carlton_dictionary-20030207-merge.
@
text
@d2 1
a2 1
# 1999, 2000, 2001, 2002, 2003 Free Software Foundation, Inc.
d67 4
d116 3
a145 4
# Did the user give us a --with-sysroot option?
TARGET_SYSTEM_ROOT = @@TARGET_SYSTEM_ROOT@@
TARGET_SYSTEM_ROOT_DEFINE = @@TARGET_SYSTEM_ROOT_DEFINE@@

d151 1
a151 2
	cli-decode.o cli-script.o cli-cmds.o cli-setshow.o cli-utils.o \
	cli-interp.o
a154 1
	cli/cli-interp.c \
a172 1
	mi-interp.o \
a178 1
	mi/mi-interp.c \
d328 1
a328 2

PROFILE_CFLAGS = @@PROFILE_CFLAGS@@
d344 1
a344 1
	$(INTL_CFLAGS) $(ENABLE_CFLAGS) \
d355 2
a356 2
# PROFILE_CFLAGS is _not_ included, however, because we use monstartup.
INTERNAL_LDFLAGS = $(CFLAGS) $(GLOBAL_CFLAGS) $(MH_LDFLAGS) $(LDFLAGS) $(CONFIG_LDFLAGS)
d363 1
d369 1
a369 1
	$(XM_CLIBS) $(TM_CLIBS) $(NAT_CLIBS) $(GDBTKLIBS) @@LIBS@@ \
d372 1
a372 1
	$(XM_CLIBS) $(TM_CLIBS) $(NAT_CLIBS) $(GDBTKLIBS) @@LIBS@@ \
d485 20
a538 1
	frame-unwind.c \
a541 1
	interps.c \
d553 1
a553 3
	scm-exp.c scm-lang.c scm-valprint.c \
	sentinel-frame.c \
	serial.c ser-unix.c source.c \
d613 1
d615 1
a615 1
alpha_tdep_h = alpha-tdep.h
d619 1
a619 1
arm_tdep_h = arm-tdep.h
a634 1
config_h = config.h
a652 1
frame_unwind_h = frame-unwind.h
d667 1
a667 1
gdbarch_h = gdbarch.h $(dis_asm_h) $(inferior_h)
d675 1
a675 1
i386_tdep_h = i386-tdep.h
a678 2
inflow_h = inflow.h $(terminal_h)
interps_h = interps.h
d695 1
a695 1
ns32k_tdep_h = ns32k-tdep.h
d703 1
a703 1
ppc_tdep_h = ppc-tdep.h
a711 1
sentinel_frame_h = sentinel-frame.h
d714 1
a714 1
sh_tdep_h = sh-tdep.h
d737 1
a737 1
vax_tdep_h = vax-tdep.h
d750 1
a750 1
cli_decode_h = $(srcdir)/cli/cli-decode.h $(command_h)
a762 1
mi_main_h = $(srcdir)/mi/mi-main.h
d803 3
a841 1
	interps.o \
d858 1
a858 3
	scm-exp.o scm-lang.o scm-valprint.o \
	sentinel-frame.o \
	complaints.o typeprint.o \
d863 1
a863 1
	frame.o frame-unwind.o doublest.o \
d871 1
a871 1
SUBDIRS = @@subdirs@@
d981 1
a981 1
	sed \
d983 2
d1020 1
a1020 1
	$(CC_LD) $(INTERNAL_LDFLAGS) $(WIN32LDAPP) \
d1037 25
d1365 6
a1370 1
ALLDEPFILES = \
d1382 1
a1382 1
	hppa-tdep.c hppa-hpux-tdep.c \
d1402 2
d1410 1
a1410 1
	remote-hms.c remote-mips.c \
a1441 5
# main.o needs an explicit build rule to get TARGET_SYSTEM_ROOT and BINDIR.
main.o: main.c
	$(CC) -c $(INTERNAL_CFLAGS) $(TARGET_SYSTEM_ROOT_DEFINE) \
		-DBINDIR=\"$(bindir)\" $(srcdir)/main.c

d1504 1
d1526 1
a1526 1
	$(value_h) $(alpha_tdep_h) $(osabi_h)
d1530 1
a1530 1
	$(value_h) $(alpha_tdep_h) $(osabi_h)
d1534 1
a1534 2
	$(doublest_h) $(arch_utils_h) $(elf_bfd_h) $(alpha_tdep_h) $(block_h) \
	$(osabi_h)
d1539 1
a1539 2
alphafbsd-tdep.o: alphafbsd-tdep.c $(defs_h) $(value_h) $(alpha_tdep_h) \
	$(osabi_h)
d1542 1
a1542 1
	$(alphabsd_tdep_h) $(nbsd_tdep_h) $(osabi_h)
d1545 1
d1555 1
a1555 2
	$(doublest_h) $(arm_tdep_h) $(symtab_h) $(symfile_h) $(objfiles_h) \
	$(osabi_h)
d1560 1
a1560 1
	$(elf_arm_h) $(gdb_assert_h) $(bfd_in2_h) $(libcoff_h) $(osabi_h)
d1564 1
a1564 1
	$(solib_svr4_h) $(osabi_h)
d1576 1
a1576 1
	$(dummy_frame_h) $(block_h) $(command_h) $(gdbcmd_h)
d1601 5
a1605 2
charset.o: charset.c $(defs_h) $(charset_h) $(gdbcmd_h) $(gdb_assert_h) \
	$(gdb_string_h)
d1647 1
d1650 4
a1653 3
	$(dis_asm_h) $(symfile_h) $(objfiles_h) $(language_h) $(arch_utils_h) \
	$(regcache_h) $(floatformat_h) $(gdb_sim_d10v_h) $(sim_regno_h) \
	$(gdb_assert_h)
d1676 1
d1678 1
a1678 1
	$(frame_h) $(inferior_h) $(gdb_assert_h) $(frame_unwind_h)
d1702 1
a1702 2
	$(terminal_h) $(event_loop_h) $(event_top_h) $(interps_h) \
	$(gdbcmd_h)
d1728 1
d1732 1
a1732 4
	$(language_h) $(frame_unwind_h) $(command_h) $(gdbcmd_h) \
	$(sentinel_frame_h)
frame-unwind.o: frame-unwind.c $(defs_h) $(frame_h) $(frame_unwind_h) \
	$(gdb_assert_h) $(dummy_frame_h) $(legacy_frame_h)
d1743 1
a1743 2
	$(gdb_assert_h) $(gdb_string_h) $(gdb_events_h) $(reggroups_h) \
	$(osabi_h)
d1766 2
d1774 1
a1774 2
hppa-hpux-tdep.o: hppa-hpux-tdep.c $(defs_h) $(arch_utils_h) $(gdbcore_h) \
	$(osabi_h)
d1785 1
a1785 1
	$(inferior_h) $(regcache_h) $(gdb_stat_h) $(gdbcore_h)
d1791 1
a1791 2
	$(objfiles_h) $(solib_svr4_h) $(i386_tdep_h) $(i386_linux_tdep_h) \
	$(osabi_h)
d1793 1
a1793 2
i386-sol2-tdep.o: i386-sol2-tdep.c $(defs_h) $(value_h) $(i386_tdep_h) \
	$(osabi_h)
d1799 2
a1800 1
	$(i387_tdep_h) $(osabi_h)
d1803 1
a1803 2
	$(gdb_assert_h) $(gregset_h) $(i386_tdep_h) $(i387_tdep_h) \
	$(osabi_h)
d1810 1
a1810 1
i386gnu-tdep.o: i386gnu-tdep.c $(defs_h) $(i386_tdep_h) $(osabi_h)
d1812 3
a1814 1
	$(regcache_h) $(target_h) $(i386_tdep_h) $(osabi_h)
d1817 1
a1817 1
	$(nbsd_tdep_h) $(solib_svr4_h) $(osabi_h)
d1820 1
a1820 1
	$(regcache_h) $(i386_tdep_h) $(i387_tdep_h) $(osabi_h)
d1828 1
d1833 2
a1834 2
ia64-linux-nat.o: ia64-linux-nat.c $(defs_h) $(gdb_string_h) $(inferior_h) \
	$(target_h) $(gdbcore_h) $(regcache_h) $(gdb_wait_h) $(gregset_h)
d1847 1
a1847 2
	$(serial_h) $(terminal_h) $(target_h) $(gdbthread_h) $(gdb_string_h) \
	$(inflow_h)
d1856 1
a1856 1
	$(gdbcore_h) $(command_h) $(gdb_stat_h) $(gdb_wait_h) $(inflow_h)
a1858 3
interps.o: interps.c $(defs_h) $(gdbcmd_h) $(ui_out_h) $(event_loop_h) \
	$(event_top_h) $(interps_h) $(completer_h) $(gdb_string_h) \
	$(gdb_events_h) $(gdb_assert_h) $(top_h)
d1923 2
d1936 1
a1936 1
	$(event_loop_h) $(ui_out_h) $(interps_h) $(main_h)
d1961 1
a1961 2
	$(solib_svr4_h) $(osabi_h) $(gdb_string_h) $(mips_tdep_h) \
	$(gdb_assert_h)
d1986 3
d1993 1
d1998 1
a1998 1
	$(ns32k_tdep_h) $(gdb_string_h) $(osabi_h)
d2001 1
a2001 2
ns32knbsd-tdep.o: ns32knbsd-tdep.c $(defs_h) $(ns32k_tdep_h) $(gdb_string_h) \
	$(osabi_h)
d2016 2
a2017 2
osabi.o: osabi.c $(defs_h) $(gdb_string_h) $(osabi_h) $(elf_bfd_h) \
	$(gdbcmd_h) $(command_h) $(arch_utils_h)
d2040 2
a2041 3
ppc-linux-nat.o: ppc-linux-nat.c $(defs_h) $(gdb_string_h) $(frame_h) \
	$(inferior_h) $(gdbcore_h) $(regcache_h) $(gdb_wait_h) $(gregset_h) \
	$(ppc_tdep_h)
d2044 1
a2044 2
	$(objfiles_h) $(regcache_h) $(value_h) $(solib_svr4_h) $(ppc_tdep_h) \
	$(osabi_h)
d2053 1
a2053 1
	$(ppcnbsd_tdep_h) $(nbsd_tdep_h) $(solib_svr4_h) $(osabi_h)
d2059 1
a2059 2
proc-api.o: proc-api.c $(defs_h) $(gdbcmd_h) $(completer_h) $(gdb_wait_h) \
	$(proc_utils_h)
d2066 3
a2068 2
	$(elf_bfd_h) $(gdbcmd_h) $(gdbthread_h) $(gdb_wait_h) $(gdb_assert_h) \
	$(inflow_h) $(gdb_dirent_h) $(X_OK) $(gdb_stat_h) $(proc_utils_h) \
d2078 1
d2082 3
d2092 3
d2126 1
d2153 1
a2153 1
	$(ppc_tdep_h) $(osabi_h)
a2167 2
sentinel-frame.o: sentinel-frame.c $(defs_h) $(regcache_h) \
	$(sentinel_frame_h) $(inferior_h) $(frame_unwind_h)
d2181 1
a2181 1
	$(solib_svr4_h) $(elf_sh_h) $(gdb_sim_sh_h) $(osabi_h)
d2187 3
a2189 3
	$(solib_svr4_h) $(nbsd_tdep_h) $(sh_tdep_h) $(shnbsd_tdep_h) $(osabi_h)
sol-thread.o: sol-thread.c $(defs_h) $(gdbthread_h) $(target_h) $(inferior_h) \
	$(gdb_stat_h) $(gdbcmd_h) $(gdbcore_h) $(regcache_h) $(symfile_h) \
d2224 1
a2224 1
	$(regcache_h) $(gdb_wait_h)
d2263 1
a2263 1
	$(gdb_assert_h) $(readline_h) $(block_h) $(filenames_h)
d2265 1
a2265 2
	$(target_h) $(regcache_h) $(gdb_wait_h) $(gdb_stat_h) $(gdbcore_h) \
	$(gdbcore_h)
d2336 1
a2336 1
	$(gdb_string_h) $(vax_tdep_h) $(osabi_h)
d2351 2
a2352 3
x86-64-linux-tdep.o: x86-64-linux-tdep.c $(defs_h) $(inferior_h) $(gdbcore_h) \
	$(gdb_string_h) $(regcache_h) $(x86_64_tdep_h) $(dwarf2cfi_h) \
	$(osabi_h)
a2389 3
cli-interp.o: $(srcdir)/cli/cli-interp.c $(defs_h) $(interps_h) $(wrapper_h) \
	$(event_top_h) $(ui_out_h) $(cli_out_h) $(top_h) $(gdb_string_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/cli/cli-interp.c
d2434 1
a2434 1
	for i in *.tcl *.itcl *.ith *.itb images/*.gif images2/*.gif images/icons.txt images2/icons.txt tclIndex help/*.html  help/trace/*.html help/trace/index.toc help/images/*.gif help/images/*.png; \
d2457 1
a2457 1
	$(CC_LD) $(INTERNAL_LDFLAGS) $(WIN32LDAPP) \
d2555 3
a2557 3
mi-cmd-env.o: $(srcdir)/mi/mi-cmd-env.c $(defs_h) $(inferior_h) $(value_h) \
	$(mi_out_h) $(mi_cmds_h) $(mi_getopt_h) $(symtab_h) $(target_h) \
	$(environ_h) $(command_h) $(ui_out_h) $(top_h) $(gdb_string_h)
a2574 4
mi-interp.o: $(srcdir)/mi/mi-interp.c $(defs_h) $(gdb_string_h) $(interps_h) \
	$(event_top_h) $(event_loop_h) $(inferior_h) $(ui_out_h) $(top_h) \
	$(mi_main_h) $(mi_cmds_h) $(mi_out_h) $(mi_console_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/mi/mi-interp.c
d2577 1
a2577 1
	$(mi_getopt_h) $(mi_console_h) $(ui_out_h) $(mi_out_h) $(interps_h) \
d2586 17
@


1.262.2.26
log
@2003-02-12  David Carlton  <carlton@@math.stanford.edu>

	* linespec.c (examine_compound_token): Call decode_namespace.
	(decode_namespace): New function.
	* cp-support.c (cp_find_first_component): Return the offset, not a
	pointer.
	(check_possible_namespace_symbols_loop): Update call to
	cp_find_first_component.
	(cp_check_possible_namespace_symbols): Ditto.
	(cp_func_name): Ditto.
	* buildsym.c (scan_for_anonymous_namespaces): Ditto.
	(finish_block): Ditto.
	* linespec.c (examine_compound_token): Ditto.
	* symtab.c (lookup_symbol_aux_using_loop): Ditto.
	* valops.c (find_oload_champ_namespace_loop): Ditto.
	* cp-support.h: Declare cp_find_first_component to return an int.
	* Makefile.in (linespec.o): cp_support_h.
	* linespec.c (symtab_from_filename): Rename from handle_filename.
	(decode_line_1): Call symtab_from_filename instead of
	handle_filename.
	(locate_compound_sym): Rename from locate_class_sym.  Search in
	such a way that we find namespace symbols, too.
	(examine_compound_token): Call locate_class_sym instead of
	locate_compound_sym.
	(locate_compound_sym): Add NAMESPACE arg.
	(examine_compound_token): New arg to locate_compound_sym.
	Handle TYPE_CODE_NAMESPACE.
	#include "cp-support.hp"
@
text
@d1845 1
a1845 1
	$(cp_abi_h) $(source_h) $(block_h) $(parser_defs_h) $(cp_support_h)
@


1.262.2.27
log
@2003-03-05  David Carlton  <carlton@@math.stanford.edu>

	* Merge with mainline.  Tag is carlton_dictionary-20030305-merge.
@
text
@a196 1
	tui-interp.o \
a201 1
	tui/tui-interp.c \
d243 1
a243 1
TCL = @@TCL_CC_SEARCH_FLAGS@@ @@TCL_BUILD_LIB_SPEC@@
d245 1
d253 1
d258 1
d263 1
d285 1
a285 1
	gdbtk.o gdbtk-bp.o gdbtk-cmds.o gdbtk-hooks.o gdbtk-interp.o \
d289 1
a289 1
	gdbtk/generic/gdbtk-cmds.c gdbtk/generic/gdbtk-hooks.c gdbtk-interp.c \
d295 1
a295 1
SUBDIR_GDBTK_INITS = gdbtk/generic/gdbtk.c gdbtk/generic/gdbtk-interp.c
a439 1
	"LDFLAGS=$(LDFLAGS)" \
d514 1
a514 2
	charset.c cli-out.c coffread.c coff-pe-read.c \
	complaints.c completer.c corefile.c \
d516 2
a517 2
	dbxread.c demangle.c dictionary.c disasm.c doublest.c \
	dummy-frame.c dwarfread.c dwarf2expr.c dwarf2loc.c dwarf2read.c \
d533 1
a533 1
	objfiles.c osabi.c observer.c \
a615 1
coff_pe_read_h = coff-pe-read.h
a631 2
dwarf2expr_h = dwarf2expr.h
dwarf2loc_h = dwarf2loc.h
a685 1
observer_h = observer.h
d827 1
a827 1
	block.o symtab.o symfile.o symmisc.o linespec.o infcmd.o infrun.o \
d838 2
a839 2
	exec.o bcache.o objfiles.o observer.o minsyms.o maint.o demangle.o \
	dbxread.o coffread.o coff-pe-read.o elfread.o \
a840 1
	dwarf2expr.o dwarf2loc.o \
d1438 1
a1438 1
	$(bfd_h) $(objfiles_h) $(symfile_h) $(block_h)
d1494 2
a1495 2
	$(doublest_h) $(arch_utils_h) $(elf_bfd_h) $(alpha_tdep_h) \
	$(osabi_h) $(block_h)
d1531 1
a1531 2
	$(target_h) $(ax_h) $(ax_gdb_h) $(gdb_string_h) $(block_h) \
	$(regcache_h)
d1534 1
a1534 2
block.o: block.c $(defs_h) $(block_h) $(symtab_h) $(symfile_h) \
	$(gdb_obstack_h) $(cp_support_h)
d1538 1
a1538 1
	$(dummy_frame_h) $(command_h) $(gdbcmd_h) $(block_h)
d1550 1
a1550 2
	$(stabsread_h) $(block_h) $(dictionary_h) $(cp_support_h) \
	$(stabsread_h) $(block_h)
d1573 1
a1573 4
	$(target_h) $(gdb_assert_h) $(block_h) $(coff_pe_read_h) \
	$(dictionary_h)
coff-pe-read.o: coff-pe-read.c $(bfd_h) $(defs_h) $(symtab_h) \
	$(gdbtypes_h) $(symfile_h) $(objfiles_h) $(coff_pe_read_h)
d1591 1
a1591 2
cp-abi.o: cp-abi.c $(defs_h) $(value_h) $(cp_abi_h) $(command_h) \
	$(gdbcmd_h) $(ui_out_h) $(gdb_string_h)
a1639 5
dwarf2expr.o: dwarf2expr.c $(defs_h) $(symtab_h) $(gdbtypes_h) $(value_h) \
	 $(gdbcore_h) $(dwarf2expr_h)
dwarf2loc.o: dwarf2loc.c $(defs_h) $(ui_out_h) $(value_h) $(frame_h) \
	$(gdbcore_h) $(target_h) $(inferior_h) $(dwarf2expr_h) \
	$(dwarf2loc_h) $(ax_h) $(ax_gdb_h) $(regcache_h) $(gdb_string_h)
d1643 2
a1644 2
	$(language_h) $(complaints_h) $(bcache_h) $(dwarf2expr_h) \
	$(dwarf2loc_h) $(gdb_string_h) $(gdb_assert_h) $(cp_support_h)
d1696 1
a1696 1
gdb.o: gdb.c $(defs_h) $(main_h) $(gdb_string_h) $(interps_h)
d1845 1
a1845 1
	$(cp_abi_h) $(source_h) $(parser_defs_h) $(block_h) $(cp_support_h)
a1907 1
	$(block_h) \
d1927 2
a1928 2
	$(regcache_h) $(osabi_h) $(mips_tdep_h) $(block_h) $(opcode_mips_h) \
	$(elf_mips_h) $(elf_bfd_h) $(symcat_h)
d1964 1
a1964 1
	$(gdb_regex_h) $(regcache_h) $(block_h)
a1968 1
observer.o: observer.c $(observer_h) $(defs_h)
d2018 1
a2018 2
	$(gdb_assert_h) $(dictionary_h) $(block_h) \
	$(gdb_assert_h) $(block_h)
d2217 1
a2217 1
	$(gdb_assert_h) $(readline_h) $(filenames_h) $(block_h)
d2225 2
a2226 2
	$(gdb_obstack_h) $(language_h) $(bcache_h) $(gdb_string_h) \
	$(readline_h) $(block_h) $(dictionary_h)
d2230 4
a2233 4
	$(language_h) $(demangle_h) $(inferior_h) $(linespec_h) \
	$(filenames_h) $(gdb_obstack_h) $(gdb_string_h) $(gdb_stat_h) \
	$(cp_abi_h) $(source_h) $(block_h) $(dictionary_h) $(cp_support_h) \
	$(gdb_assert_h)
d2253 2
a2254 2
	$(linespec_h) $(regcache_h) $(completer_h) $(gdb_events_h) \
	$(block_h) $(ax_h) $(ax_gdb_h) $(readline_h)
d2279 1
a2279 1
	$(gdb_assert_h) $(block_h) $(dictionary_h) $(cp_support_h)
a2462 8
gdbtk-interp.o: $(srcdir)/gdbtk/generic/gdbtk-interp.c \
	$(defs_h) $(interps_h) $(ui_out_h) $(ui_file_h) \
	$(cli_out_h) $(gdb_string_h) $(cli_cmds_h) $(cli_decode_h) \
	$(srcdir)/gdbtk/generic/gdbtk.h
	$(CC) -c $(INTERNAL_CFLAGS) $(IDE_CFLAGS) $(ITCL_CFLAGS) \
	$(TCL_CFLAGS) $(TK_CFLAGS) $(X11_CFLAGS) $(GDBTK_CFLAGS) \
		$(srcdir)/gdbtk/generic/gdbtk-interp.c

a2590 4
tui-interp.o: $(srcdir)/tui/tui-interp.c $(defs_h) $(interps_h) $(top_h) \
	$(event_top_h) $(event_loop_h) $(ui_out_h) $(tui_tuiData_h) \
	$(readline_h) $(tui_tuiWin_h) $(tui_h) $(tui_tuiIO_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tui-interp.c
@


1.262.2.28
log
@2003-04-16  David Carlton  <carlton@@bactrian.org>

	* Merge with mainline; tag is carlton_dictionary-20030416-merge.
@
text
@d171 1
a171 1
	mi-cmd-file.o mi-cmd-disas.o \
d178 1
a178 1
	mi/mi-cmd-file.c mi/mi-cmd-disas.c \
d515 1
a515 1
	cp-abi.c cp-support.c cp-namespace.c cp-valprint.c \
a519 1
	frame-base.c \
a568 1
coff_internal_h =	$(INCLUDE_DIR)/coff/internal.h
a569 1
elf_reloc_macros_h =	$(INCLUDE_DIR)/elf/reloc-macros.h
a570 1
elf_arm_h =	$(INCLUDE_DIR)/elf/arm.h $(elf_reloc_macros_h)
a572 1
libbfd_h =	$(BFD_SRC)/libbfd.h
d641 1
a641 2
frame_unwind_h = frame-unwind.h $(frame_h)
frame_base_h = frame-base.h
a722 1
infttrace_h = infttrace.h
a858 1
	frame-base.o \
a859 1
	cp-namespace.o \
a874 1
	objc-exp.tab.o \
a969 7
# NOTE: cagney/2003-03-18: The sed pattern ``s|^\([^ /]...'' is
# anchored on the first column and excludes the ``/'' character so
# that it doesn't add the $(srcdir) prefix to any file that already
# has an absolute path.  It turns out that $(DEC)'s True64 make
# automatically adds the $(srcdir) prefixes when it encounters files
# in sub-directories such as cli/ and mi/.

d989 1
a989 1
	    -e 's|^\([^  /][^     ]*\)|$(srcdir)/\1|g' | \
d1348 1
a1348 1
	i386v4-nat.c i386ly-tdep.c i386-cygwin-tdep.c \
d1495 1
a1495 1
	$(value_h) $(osabi_h) $(gdb_string_h) $(alpha_tdep_h)
d1525 3
a1527 3
	$(doublest_h) $(value_h) $(arch_utils_h) $(solib_svr4_h) $(osabi_h) \
	$(arm_tdep_h) $(sim_arm_h) $(elf_bfd_h) $(coff_internal_h) \
	$(elf_arm_h) $(gdb_assert_h)
d1557 2
a1558 1
	$(stabsread_h) $(block_h) $(dictionary_h) $(cp_support_h)
d1563 1
a1563 2
	$(macroscope_h) $(gdb_assert_h) $(charset_h) $(gdb_string_h) \
	$(demangle_h)
a1603 2
cp-namespace.o: cp-namespace.c $(defs_h) $(cp_support_h) $(gdb_obstack_h) \
	$(symtab_h) $(symfile_h) $(gdb_assert_h) $(block_h)
d1605 1
a1605 1
	$(demangle_h) $(gdb_assert_h) $(gdb_obstack_h) $(symtab_h) \
d1618 4
a1621 5
d10v-tdep.o: d10v-tdep.c $(defs_h) $(frame_h) $(frame_unwind_h) \
	$(frame_base_h) $(symtab_h) $(gdbtypes_h) $(gdbcmd_h) $(gdbcore_h) \
	$(gdb_string_h) $(value_h) $(inferior_h) $(dis_asm_h) $(symfile_h) \
	$(objfiles_h) $(language_h) $(arch_utils_h) $(regcache_h) \
	$(remote_h) $(floatformat_h) $(gdb_sim_d10v_h) $(sim_regno_h) \
d1661 1
a1661 1
	$(dwarf2loc_h) $(cp_support_h) $(gdb_string_h) $(gdb_assert_h)
d1704 3
a1706 4
	$(gdb_obstack_h) $(dummy_frame_h) $(sentinel_frame_h) $(gdbcore_h) \
	$(annotate_h) $(language_h) $(frame_unwind_h) $(frame_base_h) \
	$(command_h) $(gdbcmd_h)
frame-base.o: frame-base.c $(defs_h) $(frame_base_h) $(frame_h)
d1746 1
a1746 2
	$(value_h) $(regcache_h) $(completer_h) $(language_h) $(osabi_h) \
	$(gdb_assert_h) $(infttrace_h) $(symtab_h) $(a_out_encap_h) \
d1748 1
a1748 1
	$(symfile_h) $(objfiles_h)
d1750 1
a1750 1
	$(osabi_h) $(gdb_string_h)
d1759 1
a1759 1
	$(somsolib_h) $(gdb_assert_h) $(gdb_string_h)
a1790 2
i386-cygwin-tdep.o: i386-cygwin-tdep.c $(defs_h) $(gdb_string_h) \
	$(i386_tdep_h) $(osabi_h) $(gdbcore_h) $(frame_h) $(dummy_frame_h)
d1830 1
a1830 2
	$(symfile_h) $(top_h) $(inf_loop_h) $(regcache_h) $(value_h) \
	$(observer_h) $(language_h)
d1834 1
a1834 1
	$(gdb_string_h) $(gdb_wait_h) $(command_h) $(gdbthread_h) $(gdbcore_h)
d1845 1
a1845 1
	$(jv_lang_h) $(gdbcore_h) $(dictionary_h) $(block_h) $(demangle_h)
d1857 1
a1857 1
	$(parser_defs_h) $(jv_lang_h) $(demangle_h)
d1942 4
a1945 5
mips-tdep.o: mips-tdep.c $(defs_h) $(gdb_string_h) $(gdb_assert_h) \
	$(frame_h) $(inferior_h) $(symtab_h) $(value_h) $(gdbcmd_h) \
	$(language_h) $(gdbcore_h) $(symfile_h) $(objfiles_h) \
	$(gdbtypes_h) $(target_h) $(arch_utils_h) $(regcache_h) \
	$(osabi_h) $(mips_tdep_h) $(block_h) $(opcode_mips_h) \
d2113 1
a2113 1
	$(gdbcore_h) $(solib_h)
d2190 1
a2190 1
	$(regcache_h) $(gdb_assert_h)
d2200 3
a2202 3
sparc-tdep.o: sparc-tdep.c $(defs_h) $(arch_utils_h) $(frame_h) $(inferior_h) \
	$(target_h) $(value_h) $(bfd_h) $(gdb_string_h) $(regcache_h) \
	$(osabi_h) $(gregset_h) $(gdbcore_h) $(gdb_assert_h) $(symfile_h)
d2246 1
a2246 1
	$(readline_h) $(block_h) $(gdb_regex_h) $(dictionary_h)
a2538 4
mi-cmd-file.o: $(srcdir)/mi/mi-cmd-file.c $(defs_h) $(mi_cmds_h) \
	$(ui_out_h) $(mi_out_h) $(breakpoint_h) $(gdb_string_h) \
	$(mi_getopt_h) $(gdb_events_h) $(gdb_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/mi/mi-cmd-file.c
@


1.262.2.29
log
@2003-04-30  David Carlton  <carlton@@bactrian.org>

	* Makefile.in (cp-namespace.o): Update dependencies.
	(cp-support.o): Ditto.
	* cp-support.h: Declare maint_cplus_cmd_list.
	* cp-namespace.c: Move variables namespace_block,
	possible_namespace_block, namespace_objfile here from
	cp-support.c.
	Move functions initialize_namespace_blocks, get_namespace_block,
	get_possible_namespace_block, free_namespace_blocks,
	check_one_possible_namespace_symbol,
	check_possible_namespace_symbols_loop, maintenance_print_namespace
	here from cp-support.c.
	Include objfiles.h, gdbtypes.h, dictionary.h, gdbcmd.h.
	* cp-namespace.c (_initialize_cp_namespace): New.
	(maintenance_cplus_namespace): Rename from
	maintenance_print_namespace.
	* cp-support.c (cp_find_first_component): Fix typo in comment.
	(_initialize_cp_support): Don't add 'maint print
	namespace'.
	Make maint_cplus_cmd_list extern.
	Prune includes.

2003-04-30  David Carlton  <carlton@@bactrian.org>

	* gdb.c++/maint.exp (test_help): Refactor, and add test for maint
	cp namespace.
	(test_namespace): New.
@
text
@d1622 1
a1622 2
	$(symtab_h) $(symfile_h) $(gdb_assert_h) $(block_h) $(objfiles_h) \
	$(gdbtypes_h) $(dictionary_h) $(gdbcmd_h)
d1624 3
a1626 1
	$(demangle_h) $(gdb_assert_h) $(symtab_h) $(gdbcmd_h)
@


1.262.2.30
log
@2003-04-30  David Carlton  <carlton@@bactrian.org>

	* cp-namespace.c (get_namespace_objfile): Copy the namespace
	objfile's name.

	* block.h (ALL_BLOCK_SYMBOLS): Move here from dictionary.h.
	* dictionary.c: Sync up with mainline version I just posted.
	Specifically, update some commments, and:
	(dict_create_hashed): Fiddle with nsyms updating.
	(dict_create_linear): Ditto.
	(dict_lookup): Delete.
	(iterator_next_hashed): Delete FIXME comment.
	(iter_name_first_hashed): Replace 'sym' by 'sym != NULL'.
	(iter_name_next_hashed): Replate 'next' by 'next != NULL'.
	* dictionary.h: Sync up with mainline version I just posted: add
	inclusion guards, delete declaration of dict_lookup, delete
	ALL_BLOCK_SYMBOLs.

	* Merge with mainline; tag is carlton_dictionary-20030430-merge.
@
text
@d524 1
a524 3
	inf-loop.c \
	infcall.c \
	infcmd.c inflow.c infrun.c \
a672 1
infcall_h = infcall.h
d838 1
a838 3
	block.o symtab.o symfile.o symmisc.o linespec.o \
	infcall.o \
	infcmd.o infrun.o \
d853 1
a853 1
	c-lang.o f-lang.o objc-lang.o \
d1492 2
a1493 2
	$(breakpoint_h) $(gdbcore_h) $(ada_lang_h) $(ui_out_h) $(block_h) \
	$(infcall_h) $(dictionary_h)
d1503 1
a1503 1
	$(annotate_h) $(ada_lang_h) $(c_lang_h) $(infcall_h)
d1659 1
a1659 1
	$(disasm_h) $(ui_out_h) $(gdbcore_h)
d1690 1
a1690 1
	$(f_lang_h) $(cp_abi_h) $(infcall_h) $(objc-lang.h) $(block_h)
d1732 1
a1732 1
	$(elf_bfd_h) $(symfile_h) $(objfiles_h) $(infcall_h)
d1767 3
a1769 3
	$(gdb_assert_h) $(infttrace_h) $(symtab_h) $(infcall_h) \
	$(a_out_encap_h) $(gdb_stat_h) $(gdb_wait_h) $(gdbcore_h) \
	$(gdbcmd_h) $(target_h) $(symfile_h) $(objfiles_h)
a1838 3
infcall.o: infcall.c $(defs_h) $(breakpoint_h) $(target_h) $(regcache_h) \
	$(inferior_h) $(gdb_assert_h) $(block_h) $(gdbcore_h) $(language_h) \
	$(symfile_h) $(gdbcmd_h) $(command_h) $(gdb_string_h)
d1886 1
a1886 2
	$(cp_abi_h) $(source_h) $(parser_defs_h) $(block_h) $(objc_lang_h) \
	$(cp_support_h)
d2005 3
a2007 3
	$(complaints_h) $(value_h) $(symfile_h) $(objfiles_h) $(gdb_string_h) \
	$(target_h) $(gdbcore_h) $(gdbcmd_h) $(frame_h) $(gdb_regex_h) \
	$(regcache_h) $(block_h) $(infcall_h) $(valprint_h)
d2161 1
a2161 1
	$(scm_tags_h) $(source_h) $(gdb_string_h) $(gdbcore_h) $(infcall_h)
d2277 2
a2278 2
	$(cp_abi_h) $(source_h) $(block_h) $(objc_lang_h) $(dictionary_h) \
	$(cp_support_h) $(gdb_assert_h)
d2320 1
a2320 1
	$(doublest_h) $(infcall_h)
@


1.262.2.31
log
@2003-05-23  David Carlton  <carlton@@bactrian.org>

	* Merge with mainline; tag is carlton_dictionary-20030523-merge.
@
text
@d171 1
a171 1
	mi-cmd-file.o mi-cmd-disas.o mi-symbol-cmds.o \
d178 1
a178 1
	mi/mi-cmd-file.c mi/mi-cmd-disas.c mi/mi-symbol-cmds.c \
d629 1
a629 1
cp_support_h = cp-support.h $(symtab_h)
d939 1
a939 1
		$(SHELL) $(srcdir)/../mkinstalldirs $(bindir) ; \
d942 1
a942 1
		$(SHELL) $(srcdir)/../mkinstalldirs \
d1634 1
a1634 1
	$(cp_abi_h) $(valprint_h)
d1646 1
a1646 1
	$(gdb_assert_h) $(disasm_h)
d1670 1
a1670 2
	$(frame_h) $(inferior_h) $(gdb_assert_h) $(frame_unwind_h) \
	$(command_h) $(gdbcmd_h)
d1710 1
a1710 1
	$(valprint_h) $(value_h)
d1926 1
a1926 1
	$(arch_utils_h) $(gregset_h) $(osabi_h) $(m68k_tdep_h)
d1928 2
a1929 2
	$(language_h) $(gdbcore_h) $(gdb_string_h) $(regcache_h) \
	$(m68k_tdep_h) $(gdb_stat_h) $(floatformat_h) $(target_h)
d1931 1
a1931 1
	$(target_h) $(gdb_string_h) $(gdbtypes_h) $(osabi_h) $(m68k_tdep_t)
d1954 1
a1954 1
	$(arch_utils_h) $(gdb_string_h) $(disasm_h)
d2031 1
a2031 1
	$(valprint_h) $(value_h)
d2071 2
a2072 1
	$(gdb_assert_h) $(dictionary_h) $(block_h) $(disasm_h)
d2287 1
a2287 1
	$(cp_support_h)
a2614 3
mi-symbol-cmds.o: $(srcdir)/mi/mi-symbol-cmds.c $(defs_h) \
	$(mi_cmds_h) $(ui_out_h) $(symtab_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/mi/mi-symbol-cmds.c
@


1.262.2.32
log
@2003-05-23  David Carlton  <carlton@@bactrian.org>

	* Makefile.in (cp-namespace.o): Depend on frame_h.
	* cp-support.h: Declare lookup_transparent_type_namespace,
	lookup_transparent_type_namespace_loop.
	* cp-namespace.c: Include frame.h.
	(lookup_transparent_type_namespace): New.
	(lookup_transparent_type_namespace_loop): New.
	* symtab.h: Declare lookup_transparent_type_aux.
	* symtab.c (lookup_transparent_type): Add FIXME, fork off code
	into lookup_transparent_type_aux, do backup strategy of trying to
	look in namespaces.
	(lookup_transparent_type_aux): New.
@
text
@d1628 1
a1628 1
	$(gdbtypes_h) $(dictionary_h) $(gdbcmd_h) $(frame_h)
@


1.262.2.33
log
@2003-06-16  David Carlton  <carlton@@kealia.com>

	* symfile.h: Change formatting.
	* block.c (allocate_block): Rephrase comment.
	* block.h (BLOCK_GCC_COMPILED): Move definition.
	* cp-namespace.c: Include command.h instead of gdbcmd.h.  Update
	comments, reorder functions.
	(lookup_symbol_file): Set symtab when looking for namespace
	symbols.  Update call to lookup_possible_namespace_symbol.
	(initialize_namespace_blocks): Change comment.
	(get_namespace_objfile): Change objfile name.
	(cp_check_namespace_symbol): Extract body into
	check_namespace_symbol_block.
	(check_namespace_symbol_block): New.
	(lookup_namespace_symbol): Make static, rename from
	cp_lookup_symbol.
	(check_possible_namespace_symbols_loop): Update comment.
	(check_one_possible_namespace_symbol): Call
	check_namespace_symbol_block.
	(lookup_possible_namespace_symbol): Make static; rename from
	cp_lookup_possible_namespace_symbol.
	* cp-support.h: Update declarations.
	* Makefile.in (c-typeprint.o): Don't depend on gdb_assert_h.
	(cp-namespace.o): Depend on command_h, not gdbcmd_h.
	* c-typeprint.c: Don't include gdb_assert.h.
	(c_type_print_base): Delete assertion.  Use TYPE_TAG_NAME.
	* dwarf2read.c: Delete double include of cp-support.h.
	(add_partial_symbol): Look at psym for static variables.
	(add_partial_namespace): Update call to
	cp_check_namespace_symbol.
	(locate_pdi_sibling): Update comment.

2003-06-16  David Carlton  <carlton@@kealia.com>

	* gdb.c++/namespace.exp: Add 'maint cp namespace' test.
	* gdb.c++/maint.exp (test_namespace): Change comment.
@
text
@d1589 1
a1589 1
	$(gdb_string_h)
d1628 1
a1628 1
	$(gdbtypes_h) $(dictionary_h) $(command_h) $(frame_h)
@


1.262.2.34
log
@2003-06-27  David Carlton  <carlton@@kealia.com>

	* Merge with mainline; tag is carlton_dictionary-20030627-merge.
@
text
@d403 1
a403 1
REMOTE_OBS = remote.o dcache.o remote-utils.o tracepoint.o ax-general.o ax-gdb.o remote-fileio.o
d516 2
a517 2
	dbxread.c demangle.c dictionary.c disasm.c doublest.c dummy-frame.c \
	dwarfread.c dwarf2expr.c dwarf2loc.c dwarf2read.c dwarf2-frame.c \
d538 1
a538 1
	regcache.c reggroups.c remote.c remote-fileio.c \
d543 1
a543 3
	target.c thread.c top.c tracepoint.c \
	trad-frame.c \
	typeprint.c \
a641 1
dwarf2_frame_h = dwarf2-frame.h
a644 2
exc_request_U_h = exc_request_U.h
exc_request_S_h = exc_request_S.h
a682 1
linux_nat_h = linux-nat.h
a693 2
msg_reply_S_h = msg_reply_S.h
msg_U_h = msg_U.h
a694 1
notify_S_h = notify_S.h
a706 1
process_reply_S_h = process_reply_S.h
a710 1
remote_fileio_h = remote-fileio.h
a726 1
stack_h = stack.h
a731 1
trad_frame_h = trad-frame.h
d738 1
a738 1
value_h = value.h $(doublest_h) $(frame_h) $(symtab_h) $(gdbtypes_h) $(expression_h)
d841 1
a841 1
	block.o symtab.o symfile.o symmisc.o linespec.o dictionary.o \
d857 1
a857 1
	dwarf2expr.o dwarf2loc.o dwarf2-frame.o \
d874 1
a874 2
	reggroups.o \
	trad-frame.o
d1161 1
a1161 1
config.status: configure configure.tgt configure.host
d1359 1
a1359 1
	alpha-osf1-tdep.c alphafbsd-tdep.c alpha-mdebug-tdep.c \
d1392 1
a1392 1
	remote-e7000.c \
d1512 4
a1515 4
alpha-linux-tdep.o: alpha-linux-tdep.c $(defs_h) $(frame_h) $(gdb_assert_h) \
	$(osabi_h) $(alpha_tdep_h) 
alpha-nat.o: alpha-nat.c $(defs_h) $(gdb_string_h) $(inferior_h) $(gdbcore_h) \
	$(target_h) $(regcache_h) $(alpha_tdep_h) $(gregset_h) 
d1517 2
a1518 3
	$(value_h) $(osabi_h) $(gdb_string_h) $(alpha_tdep_h) $(objfiles_h)
alpha-tdep.o: alpha-tdep.c $(defs_h) $(doublest_h) $(frame_h) \
	$(frame_unwind_h) $(frame_base_h) $(inferior_h) $(symtab_h) \
d1521 2
a1522 5
	$(reggroups_h) $(arch_utils_h) $(osabi_h) $(block_h) $(gdb_assert_h) \
	$(elf_bfd_h) $(alpha_tdep_h) $(dwarf2_frame_h)
alpha-mdebug-tdep.o: alpha-mdebug-tdep.c $(defs_h) $(frame_h) \
	$(frame_unwind_h) $(frame_base_h) $(symtab_h) $(gdbcore_h) \
	$(block_h) $(gdb_assert_h) $(alpha_tdep_h)
d1544 1
a1544 1
	$(solib_svr4_h) $(osabi_h)
d1547 1
a1547 1
	$(doublest_h) $(value_h) $(arch_utils_h) $(osabi_h) \
d1579 1
a1579 1
	$(stabsread_h) $(block_h) $(cp_support_h) $(dictionary_h)
d1603 2
a1604 2
	$(target_h) $(gdb_assert_h) $(block_h) $(dictionary_h) \
	$(coff_pe_read_h)
d1630 1
a1630 2
	$(demangle_h) $(gdb_assert_h) $(gdbcmd_h) $(dictionary_h) \
	$(objfiles_h) $(frame_h) $(block_h)
d1644 3
a1646 3
	$(objfiles_h) $(language_h) $(arch_utils_h) $(regcache_h) $(remote_h) \
	$(floatformat_h) $(gdb_sim_d10v_h) $(sim_regno_h) $(disasm_h) \
	$(trad_frame_h) $(gdb_assert_h)
d1659 2
a1660 2
dictionary.o: dictionary.c $(defs_h) $(gdb_obstack_h) $(symtab_h) \
	$(buildsym_h) $(gdb_assert_h) $(dictionary_h)
a1681 4
dwarf2-frame.o: $(defs_h) $(dwarf2expr_h) $(elf_dwarf2_h) $(frame_h) \
	$(frame_base_h) $(frame_unwind_h) $(gdbcore_h) $(gdbtypes_h) \
	$(symtab_h) $(objfiles_h) $(regcache_h) $(gdb_assert_h) \
	$(gdb_string_h) $(dwarf2_frame_h)
d1755 1
a1755 1
	$(msg_reply_S_h) $(exc_request_U_h) $(msg_U_h) $(gdb_obstack_h)
d1800 5
a1804 6
i386-tdep.o: i386-tdep.c $(defs_h) $(arch_utils_h) $(command_h) \
	$(dummy_frame_h) $(dwarf2_frame_h) $(doublest_h) $(floatformat_h) \
	$(frame_h) $(frame_base_h) $(frame_unwind_h) $(inferior_h) \
	$(gdbcmd_h) $(gdbcore_h) $(objfiles_h) $(osabi_h) $(regcache_h) \
	$(reggroups_h) $(symfile_h) $(symtab_h) $(target_h) $(value_h) \
	$(gdb_assert_h) $(gdb_string_h) $(i386_tdep_h) $(i387_tdep_h)
d1819 1
a1819 1
	$(i386_tdep_h) $(osabi_h)
d1832 1
a1832 2
	$(gdb_assert_h) $(gdb_string_h) $(doublest_h) $(i386_tdep_h) \
	$(i387_tdep_h)
d1842 1
a1842 1
	$(value_h) $(gdb_assert_h) $(objfiles_h) $(elf_common_h) $(elf_bfd_h)
d1878 1
a1878 1
	$(jv_lang_h) $(gdbcore_h) $(block_h) $(demangle_h) $(dictionary_h)
d1892 1
a1892 2
	$(gdbthread_h) $(inferior_h) $(target_h) $(regcache_h) $(gdbcmd_h) \
	$(linux_nat_h)
d1894 2
a1895 2
	$(symfile_h) $(objfiles_h) $(source_h) $(demangle_h) $(value_h) \
	$(completer_h) $(cp_abi_h) $(parser_defs_h) $(block_h) $(objc_lang_h) \
a1896 2
linux-nat.o: linux-nat.c $(defs_h) $(inferior_h) $(target_h) $(gdb_wait_h) \
	$(linux_nat_h)
d1899 1
a1899 1
	$(cli_decode_h) $(gdb_string_h) $(linux_nat_h)
d1932 1
a1932 2
	$(target_h) $(gdb_string_h) $(gdbtypes_h) $(osabi_h) $(regcache_h) \
	$(objfiles_h) $(symtab_h) $(m68k_tdep_t)
d1959 1
a1959 1
	$(block_h) $(dictionary_h) \
d1978 4
a1981 4
	$(language_h) $(gdbcore_h) $(symfile_h) $(objfiles_h) $(gdbtypes_h) \
	$(target_h) $(arch_utils_h) $(regcache_h) $(osabi_h) $(mips_tdep_h) \
	$(block_h) $(reggroups_h) $(opcode_mips_h) $(elf_mips_h) \
	$(elf_bfd_h) $(symcat_h)
d1997 3
a1999 3
mn10300-tdep.o: mn10300-tdep.c $(defs_h) $(frame_h) $(inferior_h) $(target_h) \
	$(value_h) $(bfd_h) $(gdb_string_h) $(gdbcore_h) $(symfile_h) \
	$(regcache_h) $(arch_utils_h) $(gdb_assert_h)
d2017 1
a2017 1
	$(regcache_h) $(block_h) $(infcall_h) $(valprint_h) $(gdb_assert_h)
d2021 1
a2021 1
	$(block_h) $(dictionary_h)
d2089 3
d2147 1
a2147 4
	$(gdbcore_h) $(solib_h) $(remote-fileio_h)
remote-fileio.o: remote-fileio.c $(defs_h) $(gdb_string_h) $(gdbcmd_h) \
	$(remote_h) $(gdb_fileio_h) $(gdb_wait_h) $(gdb_stat_h) \
	$(remote_fileio_h)
d2258 2
a2259 3
	$(gdbcore_h) $(target_h) $(source_h) $(breakpoint_h) $(demangle_h) \
	$(inferior_h) $(annotate_h) $(ui_out_h) $(block_h) $(stack_h) \
	$(gdb_assert_h) $(dictionary_h)
d2308 1
a2308 2
	$(block_h) $(ax_h) $(ax_gdb_h) $(readline_h) $(dictionary_h)
trad-frame.o: trad-frame.c $(defs_h) $(frame_h) $(trad_frame_h) $(regcache_h)
d2311 1
a2311 2
	$(gdbcmd_h) $(target_h) $(language_h) $(cp_abi_h) $(typeprint_h) \
	$(gdb_string_h)
d2354 3
a2356 2
	$(command_h) $(buildsym_h) $(symfile_h) $(objfiles_h) $(gdb_string_h) \
	$(gdbthread_h) $(gdbcmd_h) $(wince_stub_h) $(regcache_h) $(mips_tdep_h)
d2359 1
a2359 2
	$(regcache_h) $(gdb_assert_h) $(gdb_string_h) $(gregset_h) \
	$(x86_64_tdep_h)
d2361 5
a2365 6
	$(regcache_h) $(osabi_h) $(gdb_string_h) $(x86_64_tdep_h) 
x86-64-tdep.o: x86-64-tdep.c $(defs_h) \
	$(inferior_h) $(gdbcore_h) $(arch_utils_h) $(block_h) \
	$(dummy_frame_h) $(frame_h) $(frame_base_h) $(frame_unwind_h) \
	$(inferior_h) $(gdbcmd_h) $(gdbcode_h) $(objfiles_h) $(regcache_h) \
	$(symfile_h) $(gdb_assert_h) $(x86_64_tdep_h) $(i387_tdep_h)
d2390 1
a2390 1
	$(expression_h) $(language_h) $(objfiles_h) $(gdb_vfork_h)
d2500 3
a2502 4
	$(defs_h) $(inferior_h)	$(source_h) $(symfile_h) $(objfiles_h) \
	$(gdbcore_h) $(demangle_h) $(linespec_h) $(tui_file_h) $(top_h) \
	$(annotate_h) $(block_h) $(dictionary_h) $(gdb_string_h) \
	$(dis_asm_h) $(gdbcmd_h)
d2543 2
a2544 2
	$(defs_h) $(target_h) $(breakpoint_h) $(linespec_h) \
	$(block_h) $(dictionary_h)
d2585 2
a2586 2
	$(value_h) $(mi_cmds_h) $(ui_out_h) $(symtab_h) $(block_h) $(stack_h) \
	$(dictionary_h)
d2684 1
a2684 1
	$(tui_file_h) $(disasm_h)
@


1.262.2.35
log
@2003-08-05  David Carlton  <carlton@@kealia.com>

	* configure.in (build_warnings): Delete -Wformat-nonliteral.
	* configure (build_warnings): Ditto.

	* Merge with mainline; tag is carlton_dictionary-20030805-merge.
@
text
@a148 1
	cli-logging.o \
a152 1
	cli/cli-logging.c \
d511 1
a511 1
	bcache.c block.c blockframe.c breakpoint.c buildsym.c \
a554 1
	user-regs.c \
a598 16
#
# $BUILD/ headers
#

config_h = config.h
exc_request_U_h = exc_request_U.h
exc_request_S_h = exc_request_S.h
msg_reply_S_h = msg_reply_S.h
msg_U_h = msg_U.h
notify_S_h = notify_S.h
process_reply_S_h = process_reply_S.h

#
# config/ headers
#

d604 1
a604 1
# gdb/ headers
d608 1
a609 1
alpha_tdep_h = alpha-tdep.h
d619 2
d622 1
a622 2
charset_h = charset.h
c_lang_h = c-lang.h $(value_h) $(macroexp_h)
d624 1
a625 1
coff_solib_h = coff-solib.h
d629 1
d633 1
a633 1
defs_h = defs.h $(config_h) $(ansidecl_h) $(gdb_locale_h) $(gdb_signals_h) \
d639 1
d641 1
d643 1
a644 1
dwarf2loc_h = dwarf2loc.h
d648 2
a651 1
frame_base_h = frame-base.h
d654 4
a657 1
gdbarch_h = gdbarch.h $(dis_asm_h) $(inferior_h) $(symfile_h)
a658 2
gdbcmd_h = gdbcmd.h $(command_h) $(ui_out_h)
gdbcore_h = gdbcore.h $(bfd_h)
a659 2
gdb_events_h = gdb-events.h
gdb_h = gdb.h
a663 1
gdb_stabs_h = gdb-stabs.h
d667 5
a673 2
gdb_vfork_h = gdb_vfork.h
gdb_wait_h = gdb_wait.h
d679 1
a681 1
inf_loop_h = inf-loop.h
a682 1
infttrace_h = infttrace.h
d697 1
a698 1
mips_tdep_h = mips-tdep.h
d700 2
d703 1
a704 1
nto_tdep_h = nto-tdep.h $(defs_h) $(solist_h)
d710 1
d713 1
a713 1
p_lang_h = p-lang.h
a714 1
ppc_tdep_h = ppc-tdep.h
d716 1
d719 2
a721 2
remote_h = remote.h
remote_utils_h = remote-utils.h $(target_h)
d725 1
d727 1
a727 1
ser_unix_h = ser-unix.h
a728 1
sh_tdep_h = sh-tdep.h
d730 1
a731 1
solib_svr4_h = solib-svr4.h
a735 1
sparc_tdep_h = sparc-tdep.h
d744 2
a746 1
trad_frame_h = trad-frame.h
a749 1
user_regs_h = user-regs.h
d751 1
a751 2
value_h = value.h $(doublest_h) $(frame_h) $(symtab_h) $(gdbtypes_h) \
	$(expression_h)
a756 1
x86_64_linux_tdep_h = x86-64-linux-tdep.h
d787 2
d790 1
a791 1
tuiData_h = $(srcdir)/tui/tuiData.h
d797 1
a798 1
tuiSource_h = $(srcdir)/tui/tuiSource.h $(defs_h)
d801 2
a802 2
tui_file_h = $(srcdir)/tui/tui-file.h
tui_h = $(srcdir)/tui/tui.h $(ansidecl_h)
d863 1
a863 1
	std-regs.o \
a882 1
	user-regs.o \
d947 1
a947 1
			  echo gdb | sed -e "$$t"` ; \
d1214 135
d1469 1
a1469 1
# YACC/LEX dependencies
a1470 7
# LANG-exp.tab.c is generated in objdir from LANG-exp.y if it doesn't
# exist in srcdir, then compiled in objdir to LANG-exp.tab.o.  If we
# said LANG-exp.tab.c rather than ./c-exp.tab.c some makes would
# sometimes re-write it into $(srcdir)/c-exp.tab.c.  Remove bogus
# decls for malloc/realloc/free which conflict with everything else.
# Strictly speaking c-exp.tab.c should therefore depend on
# Makefile.in, but that was a pretty big annoyance.
a1471 30
.PRECIOUS: ada-exp.tab.c
ada-exp.tab.o: ada-exp.tab.c $(defs_h) $(expression_h) $(value_h) \
	$(parser_defs_h) $(language_h) $(ada_lang_h) $(bfd_h) $(symfile_h) \
	$(objfiles_h) $(frame_h) $(block_h) $(ada_lex_c)
ada-exp.tab.c: ada-exp.y
	$(SHELL) $(YLWRAP) "$(YACC)" \
	    $(srcdir)/ada-exp.y  y.tab.c ada-exp.tmp -- $(YFLAGS) 
	-sed -e '/extern.*malloc/d' \
	     -e '/extern.*realloc/d' \
	     -e '/extern.*free/d' \
	     -e '/include.*malloc.h/d' \
	     -e 's/malloc/xmalloc/g' \
	     -e 's/realloc/xrealloc/g' \
	     -e '/^#line.*y.tab.c/d' \
	  < ada-exp.tmp > ada-exp.new
	-rm ada-exp.tmp
	mv ada-exp.new ./ada-exp.tab.c
.PRECIOUS: ada-lex.c
ada-lex.o: ada-lex.c
ada-lex.c: ada-lex.l
	@@if [ "$(FLEX)" ] && $(FLEX) --version >/dev/null 2>&1; then \
	    echo $(FLEX) -Isit $(srcdir)/ada-lex.l ">" ada-lex.c; \
	    $(FLEX) -Isit $(srcdir)/ada-lex.l > ada-lex.c; \
	elif [ ! -f ada-lex.c -a ! -f $(srcdir)/ada-lex.c ]; then \
	    echo "ada-lex.c missing and flex not available."; \
	    false; \
	elif [ ! -f ada-lex.c ]; then \
	    echo "Warning: ada-lex.c older than ada-lex.l and flex not available."; \
	fi
.PRECIOUS: c-exp.tab.c
d1474 1
a1474 17
	$(symfile_h) $(objfiles_h) $(charset_h) $(block_h)
c-exp.tab.c: c-exp.y
	$(SHELL) $(YLWRAP) "$(YACC)" \
	    $(srcdir)/c-exp.y  y.tab.c c-exp.tmp -- $(YFLAGS) 
	-sed -e '/extern.*malloc/d' \
	     -e '/extern.*realloc/d' \
	     -e '/extern.*free/d' \
	     -e '/include.*malloc.h/d' \
	     -e 's/malloc/xmalloc/g' \
	     -e 's/realloc/xrealloc/g' \
	     -e '/^#line.*y.tab.c/d' \
	  < c-exp.tmp > c-exp.new
	-rm c-exp.tmp
	mv c-exp.new ./c-exp.tab.c
.PRECIOUS: f-exp.tab.c
f-exp.tab.o: f-exp.tab.c $(defs_h) $(gdb_string_h) $(expression_h) \
	$(value_h) $(parser_defs_h) $(language_h) $(f_lang_h) $(bfd_h) \
d1476 25
a1500 82
f-exp.tab.c: f-exp.y
	$(SHELL) $(YLWRAP) "$(YACC)" \
	    $(srcdir)/f-exp.y  y.tab.c f-exp.tmp -- $(YFLAGS) 
	-sed -e '/extern.*malloc/d' \
	     -e '/extern.*realloc/d' \
	     -e '/extern.*free/d' \
	     -e '/include.*malloc.h/d' \
	     -e 's/malloc/xmalloc/g' \
	     -e 's/realloc/xrealloc/g' \
	     -e '/^#line.*y.tab.c/d' \
	  < f-exp.tmp > f-exp.new
	-rm f-exp.tmp
	mv f-exp.new ./f-exp.tab.c
.PRECIOUS: jv-exp.tab.c
jv-exp.tab.o: jv-exp.tab.c $(defs_h) $(gdb_string_h) $(expression_h) \
	$(value_h) $(parser_defs_h) $(language_h) $(jv_lang_h) $(bfd_h) \
	$(symfile_h) $(objfiles_h) $(block_h)
jv-exp.tab.c: jv-exp.y
	$(SHELL) $(YLWRAP) "$(YACC)" \
	    $(srcdir)/jv-exp.y  y.tab.c jv-exp.tmp -- $(YFLAGS) 
	-sed -e '/extern.*malloc/d' \
	     -e '/extern.*realloc/d' \
	     -e '/extern.*free/d' \
	     -e '/include.*malloc.h/d' \
	     -e 's/malloc/xmalloc/g' \
	     -e 's/realloc/xrealloc/g' \
	     -e '/^#line.*y.tab.c/d' \
	  < jv-exp.tmp > jv-exp.new
	-rm jv-exp.tmp
	mv jv-exp.new ./jv-exp.tab.c
.PRECIOUS: m2-exp.tab.c
m2-exp.tab.o: m2-exp.tab.c $(defs_h) $(gdb_string_h) $(expression_h) \
	$(language_h) $(value_h) $(parser_defs_h) $(m2_lang_h) $(bfd_h) \
	$(symfile_h) $(objfiles_h) $(block_h)
m2-exp.tab.c: m2-exp.y
	$(SHELL) $(YLWRAP) "$(YACC)" \
	    $(srcdir)/m2-exp.y  y.tab.c m2-exp.tmp -- $(YFLAGS) 
	-sed -e '/extern.*malloc/d' \
	     -e '/extern.*realloc/d' \
	     -e '/extern.*free/d' \
	     -e '/include.*malloc.h/d' \
	     -e 's/malloc/xmalloc/g' \
	     -e 's/realloc/xrealloc/g' \
	     -e '/^#line.*y.tab.c/d' \
	  < m2-exp.tmp > m2-exp.new
	-rm m2-exp.tmp
	mv m2-exp.new ./m2-exp.tab.c
.PRECIOUS: objc-exp.tab.c
objc-exp.tab.o: objc-exp.tab.c $(defs_h) $(gdb_string_h) $(expression_h) \
	$(objc_lang_h) $(value_h) $(parser_defs_h) $(language_h) $(c_lang_h) \
	$(bfd_h) $(symfile_h) $(objfiles_h) $(top_h) $(completer_h) \
	$(block_h)
objc-exp.tab.c: objc-exp.y
	$(SHELL) $(YLWRAP) "$(YACC)" \
	    $(srcdir)/objc-exp.y  y.tab.c objc-exp.tmp -- $(YFLAGS) 
	-sed -e '/extern.*malloc/d' \
	     -e '/extern.*realloc/d' \
	     -e '/extern.*free/d' \
	     -e '/include.*malloc.h/d' \
	     -e 's/malloc/xmalloc/g' \
	     -e 's/realloc/xrealloc/g' \
	     -e '/^#line.*y.tab.c/d' \
	  < objc-exp.tmp > objc-exp.new
	-rm objc-exp.tmp
	mv objc-exp.new ./objc-exp.tab.c
.PRECIOUS: p-exp.tab.c
p-exp.tab.o: p-exp.tab.c $(defs_h) $(gdb_string_h) $(expression_h) \
	$(value_h) $(parser_defs_h) $(language_h) $(p_lang_h) $(bfd_h) \
	$(symfile_h) $(objfiles_h) $(block_h)
p-exp.tab.c: p-exp.y
	$(SHELL) $(YLWRAP) "$(YACC)" \
	    $(srcdir)/p-exp.y  y.tab.c p-exp.tmp -- $(YFLAGS) 
	-sed -e '/extern.*malloc/d' \
	     -e '/extern.*realloc/d' \
	     -e '/extern.*free/d' \
	     -e '/include.*malloc.h/d' \
	     -e 's/malloc/xmalloc/g' \
	     -e 's/realloc/xrealloc/g' \
	     -e '/^#line.*y.tab.c/d' \
	  < p-exp.tmp > p-exp.new
	-rm p-exp.tmp
	mv p-exp.new ./p-exp.tab.c
d1503 1
a1503 1
# gdb/ dependencies
d1514 2
a1515 2
	$(inferior_h) $(symtab_h) $(target_h) $(regcache_h) $(gdbcore_h) \
	$(gregset_h) $(ada_lang_h)
a1525 6
alphabsd-nat.o: alphabsd-nat.c $(defs_h) $(inferior_h) $(regcache_h) \
	$(alpha_tdep_h) $(alphabsd_tdep_h) $(gregset_h)
alphabsd-tdep.o: alphabsd-tdep.c $(defs_h) $(alpha_tdep_h) \
	$(alphabsd_tdep_h)
alphafbsd-tdep.o: alphafbsd-tdep.c $(defs_h) $(value_h) $(osabi_h) \
	$(alpha_tdep_h)
d1527 11
a1537 1
	$(osabi_h) $(alpha_tdep_h)
d1541 6
a1546 2
alpha-nat.o: alpha-nat.c $(defs_h) $(gdb_string_h) $(inferior_h) \
	$(gdbcore_h) $(target_h) $(regcache_h) $(alpha_tdep_h) $(gregset_h)
d1548 2
a1549 15
	$(regcache_h) $(value_h) $(osabi_h) $(solib_svr4_h) $(alpha_tdep_h) \
	$(alphabsd_tdep_h) $(nbsd_tdep_h)
alpha-osf1-tdep.o: alpha-osf1-tdep.c $(defs_h) $(frame_h) $(gdbcore_h) \
	$(value_h) $(osabi_h) $(gdb_string_h) $(objfiles_h) $(alpha_tdep_h)
alpha-tdep.o: alpha-tdep.c $(defs_h) $(doublest_h) $(frame_h) \
	$(frame_unwind_h) $(frame_base_h) $(dwarf2_frame_h) $(inferior_h) \
	$(symtab_h) $(value_h) $(gdbcmd_h) $(gdbcore_h) $(dis_asm_h) \
	$(symfile_h) $(objfiles_h) $(gdb_string_h) $(linespec_h) \
	$(regcache_h) $(reggroups_h) $(arch_utils_h) $(osabi_h) $(block_h) \
	$(elf_bfd_h) $(alpha_tdep_h)
amd64fbsd-nat.o: amd64fbsd-nat.c $(defs_h) $(inferior_h) $(regcache_h) \
	$(gdb_assert_h) $(gregset_h) $(x86_64_tdep_h)
amd64fbsd-tdep.o: amd64fbsd-tdep.c $(defs_h) $(arch_utils_h) $(frame_h) \
	$(gdbcore_h) $(regcache_h) $(osabi_h) $(gdb_string_h) \
	$(x86_64_tdep_h)
d1561 7
a1567 2
	$(doublest_h) $(solib_svr4_h) $(osabi_h) $(arm_tdep_h) $(symtab_h) \
	$(symfile_h) $(objfiles_h)
d1570 4
a1573 11
armnbsd-tdep.o: armnbsd-tdep.c $(defs_h) $(osabi_h) $(arm_tdep_h) \
	$(nbsd_tdep_h) $(solib_svr4_h)
arm-tdep.o: arm-tdep.c $(defs_h) $(frame_h) $(inferior_h) $(gdbcmd_h) \
	$(gdbcore_h) $(symfile_h) $(gdb_string_h) $(dis_asm_h) $(regcache_h) \
	$(doublest_h) $(value_h) $(arch_utils_h) $(osabi_h) $(arm_tdep_h) \
	$(gdb_sim_arm_h) $(elf_bfd_h) $(coff_internal_h) $(elf_arm_h) \
	$(gdb_assert_h) $(bfd_in2_h) $(libcoff_h)
avr-tdep.o: avr-tdep.c $(defs_h) $(frame_h) $(frame_unwind_h) \
	$(frame_base_h) $(trad_frame_h) $(gdbcmd_h) $(gdbcore_h) \
	$(inferior_h) $(symfile_h) $(arch_utils_h) $(regcache_h) \
	$(gdb_string_h)
d1590 3
a1592 3
	$(objfiles_h) $(source_h) $(linespec_h) $(completer_h) $(gdb_h) \
	$(ui_out_h) $(cli_script_h) $(gdb_assert_h) $(block_h) \
	$(gdb_events_h)
d1596 4
a1599 4
	$(bcache_h) $(filenames_h) $(macrotab_h) $(demangle_h) $(block_h) \
	$(cp_support_h) $(dictionary_h) $(buildsym_h) $(stabsread_h)
charset.o: charset.c $(defs_h) $(charset_h) $(gdbcmd_h) $(gdb_assert_h) \
	$(gdb_string_h)
d1603 10
a1612 1
	$(demangle_h) $(cp_support_h)
d1615 2
a1616 2
coff-pe-read.o: coff-pe-read.c $(coff_pe_read_h) $(bfd_h) $(defs_h) \
	$(gdbtypes_h) $(symtab_h) $(symfile_h) $(objfiles_h)
d1623 2
a1624 2
coff-solib.o: coff-solib.c $(defs_h) $(frame_h) $(bfd_h) $(gdbcore_h) \
	$(symtab_h) $(symfile_h) $(objfiles_h)
d1628 1
a1628 1
	$(filenames_h) $(cli_decode_h) $(gdbcmd_h) $(completer_h)
d1632 4
d1641 3
a1643 7
	$(gdbthread_h) $(regcache_h) $(symfile_h)
core-regset.o: core-regset.c $(defs_h) $(command_h) $(gdbcore_h) \
	$(inferior_h) $(target_h) $(gdb_string_h) $(gregset_h)
core-sol2.o: core-sol2.c $(defs_h) $(gdb_string_h) $(regcache_h) \
	$(inferior_h) $(target_h) $(command_h) $(gdbcore_h) $(gregset_h)
cp-abi.o: cp-abi.c $(defs_h) $(value_h) $(cp_abi_h) $(command_h) $(gdbcmd_h) \
	$(ui_out_h) $(gdb_string_h)
d1649 1
a1649 3
	$(objfiles_h) $(frame_h) $(symtab_h) $(block_h) $(complaints_h)
cpu32bug-rom.o: cpu32bug-rom.c $(defs_h) $(gdbcore_h) $(target_h) \
	$(monitor_h) $(serial_h) $(regcache_h) $(m68k_tdep_h)
d1654 2
a1659 7
c-typeprint.o: c-typeprint.c $(defs_h) $(gdb_obstack_h) $(bfd_h) $(symtab_h) \
	$(gdbtypes_h) $(expression_h) $(value_h) $(gdbcore_h) $(target_h) \
	$(language_h) $(demangle_h) $(c_lang_h) $(typeprint_h) $(cp_abi_h) \
	$(gdb_string_h)
c-valprint.o: c-valprint.c $(defs_h) $(gdb_string_h) $(symtab_h) \
	$(gdbtypes_h) $(expression_h) $(value_h) $(valprint_h) $(language_h) \
	$(c_lang_h) $(cp_abi_h)
d1663 3
a1665 3
	$(objfiles_h) $(language_h) $(arch_utils_h) $(regcache_h) \
	$(remote_h) $(floatformat_h) $(gdb_sim_d10v_h) $(sim_regno_h) \
	$(disasm_h) $(trad_frame_h) $(gdb_assert_h)
d1682 2
a1683 2
disasm.o: disasm.c $(defs_h) $(target_h) $(value_h) $(ui_out_h) \
	$(gdb_string_h) $(disasm_h) $(gdbcore_h)
d1693 3
d1697 1
a1697 5
	$(gdbcore_h) $(elf_dwarf2_h) $(dwarf2expr_h)
dwarf2-frame.o: dwarf2-frame.c $(defs_h) $(dwarf2expr_h) $(elf_dwarf2_h) \
	$(frame_h) $(frame_base_h) $(frame_unwind_h) $(gdbcore_h) \
	$(gdbtypes_h) $(symtab_h) $(objfiles_h) $(regcache_h) \
	$(gdb_assert_h) $(gdb_string_h) $(complaints_h) $(dwarf2_frame_h)
d1699 6
a1704 3
	$(gdbcore_h) $(target_h) $(inferior_h) $(ax_h) $(ax_gdb_h) \
	$(regcache_h) $(objfiles_h) $(elf_dwarf2_h) $(dwarf2expr_h) \
	$(dwarf2loc_h) $(gdb_string_h)
d1719 1
a1719 1
	$(f_lang_h) $(cp_abi_h) $(infcall_h) $(objc_lang_h) $(block_h)
d1727 2
a1728 1
	$(gdb_string_h) $(gdbcore_h) $(gdb_stat_h) $(xcoffsolib_h)
d1730 11
a1740 2
	$(value_h) $(language_h) $(parser_defs_h) $(user_regs_h) $(target_h) \
	$(gdb_string_h) $(block_h)
d1746 1
a1746 4
	$(user_regs_h) $(block_h)
f-lang.o: f-lang.c $(defs_h) $(gdb_string_h) $(symtab_h) $(gdbtypes_h) \
	$(expression_h) $(parser_defs_h) $(language_h) $(f_lang_h) \
	$(valprint_h) $(value_h)
a1749 1
frame-base.o: frame-base.c $(defs_h) $(frame_base_h) $(frame_h)
d1751 1
a1751 1
	$(regcache_h) $(gdb_assert_h) $(gdb_string_h) $(user_regs_h) \
d1755 1
d1757 1
a1757 1
	$(gdb_assert_h) $(dummy_frame_h)
a1759 6
f-typeprint.o: f-typeprint.c $(defs_h) $(gdb_obstack_h) $(bfd_h) $(symtab_h) \
	$(gdbtypes_h) $(expression_h) $(value_h) $(gdbcore_h) $(target_h) \
	$(f_lang_h) $(gdb_string_h)
f-valprint.o: f-valprint.c $(defs_h) $(gdb_string_h) $(symtab_h) \
	$(gdbtypes_h) $(expression_h) $(value_h) $(valprint_h) $(language_h) \
	$(f_lang_h) $(frame_h) $(gdbcore_h) $(command_h) $(block_h)
d1762 2
d1769 1
a1769 3
	$(osabi_h) $(symfile_h) $(gdb_obstack_h)
gdb.o: gdb.c $(defs_h) $(main_h) $(gdb_string_h) $(interps_h)
gdb-events.o: gdb-events.c $(defs_h) $(gdb_events_h) $(gdbcmd_h)
d1776 3
a1778 3
	$(gdbcore_h) $(gdbthread_h) $(gdb_assert_h) $(gdb_obstack_h) \
	$(gnu_nat_h) $(exc_request_S_h) $(notify_S_h) $(process_reply_S_h) \
	$(msg_reply_S_h) $(exc_request_U_h) $(msg_U_h)
d1787 5
a1791 4
h8300-tdep.o: h8300-tdep.c $(defs_h) $(value_h) $(inferior_h) $(symfile_h) \
	$(arch_utils_h) $(regcache_h) $(gdbcore_h) $(objfiles_h) $(gdbcmd_h) \
	$(gdb_assert_h)
# OBSOLETE h8500-tdep.o: h8500-tdep.c
a1793 7
hppab-nat.o: hppab-nat.c $(defs_h) $(inferior_h) $(target_h) $(regcache_h)
hppah-nat.o: hppah-nat.c $(defs_h) $(inferior_h) $(target_h) $(gdbcore_h) \
	$(gdb_wait_h) $(regcache_h) $(gdb_string_h)
hppa-hpux-tdep.o: hppa-hpux-tdep.c $(defs_h) $(arch_utils_h) $(gdbcore_h) \
	$(osabi_h) $(gdb_string_h) $(frame_h)
hppam3-nat.o: hppam3-nat.c $(defs_h) $(inferior_h) $(floatformat_h) \
	$(regcache_h)
d1799 7
a1811 18
i386b-nat.o: i386b-nat.c $(defs_h)
i386bsd-nat.o: i386bsd-nat.c $(defs_h) $(inferior_h) $(regcache_h) \
	$(gdb_assert_h) $(gregset_h) $(i386_tdep_h) $(i387_tdep_h)
i386bsd-tdep.o: i386bsd-tdep.c $(defs_h) $(arch_utils_h) $(frame_h) \
	$(gdbcore_h) $(regcache_h) $(osabi_h) $(gdb_string_h) $(i386_tdep_h)
i386-cygwin-tdep.o: i386-cygwin-tdep.c $(defs_h) $(osabi_h) $(gdb_string_h) \
	$(i386_tdep_h)
i386fbsd-nat.o: i386fbsd-nat.c $(defs_h) $(inferior_h) $(regcache_h)
i386gnu-nat.o: i386gnu-nat.c $(defs_h) $(inferior_h) $(floatformat_h) \
	$(regcache_h) $(gdb_assert_h) $(i386_tdep_h) $(gnu_nat_h) \
	$(i387_tdep_h) $(gregset_h)
i386gnu-tdep.o: i386gnu-tdep.c $(defs_h) $(osabi_h) $(i386_tdep_h)
i386-interix-nat.o: i386-interix-nat.c $(defs_h) $(gdb_string_h) \
	$(gdbcore_h) $(gregset_h) $(regcache_h)
i386-interix-tdep.o: i386-interix-tdep.c $(defs_h) $(arch_utils_h) \
	$(frame_h) $(gdb_string_h) $(gdb_stabs_h) $(gdbcore_h) $(gdbtypes_h) \
	$(i386_tdep_h) $(inferior_h) $(libbfd_h) $(objfiles_h) $(osabi_h) \
	$(regcache_h)
d1814 1
a1814 2
	$(i387_tdep_h) $(i386_tdep_h) $(i386_linux_tdep_h) \
	$(gdb_proc_service_h)
d1816 3
a1818 5
	$(value_h) $(regcache_h) $(inferior_h) $(reggroups_h) $(symtab_h) \
	$(symfile_h) $(objfiles_h) $(solib_svr4_h) $(osabi_h) $(i386_tdep_h) \
	$(i386_linux_tdep_h)
i386ly-tdep.o: i386ly-tdep.c $(defs_h) $(gdbcore_h) $(inferior_h) \
	$(regcache_h) $(target_h) $(osabi_h) $(i386_tdep_h)
d1820 2
a1821 11
i386nbsd-tdep.o: i386nbsd-tdep.c $(defs_h) $(gdbtypes_h) $(gdbcore_h) \
	$(regcache_h) $(arch_utils_h) $(osabi_h) $(i386_tdep_h) \
	$(i387_tdep_h) $(nbsd_tdep_h) $(solib_svr4_h)
i386-nto-tdep.o: i386-nto-tdep.c $(gdb_string_h) $(gdb_assert_h) $(defs_h) \
	$(frame_h) $(target_h) $(regcache_h) $(solib_svr4_h) $(i386_tdep_h) \
	$(nto_tdep_h) $(osabi_h) $(i387_tdep_h)
i386obsd-nat.o: i386obsd-nat.c $(defs_h)
i386obsd-tdep.o: i386obsd-tdep.c $(defs_h) $(arch_utils_h) $(gdbcore_h) \
	$(regcache_h) $(osabi_h) $(i386_tdep_h) $(i387_tdep_h)
i386-sol2-tdep.o: i386-sol2-tdep.c $(defs_h) $(value_h) $(osabi_h) \
	$(i386_tdep_h)
d1829 23
d1854 4
a1857 6
i386v-nat.o: i386v-nat.c $(defs_h) $(frame_h) $(inferior_h) $(language_h) \
	$(gdbcore_h) $(gdb_stat_h) $(floatformat_h) $(target_h) \
	$(i386_tdep_h)
i387-tdep.o: i387-tdep.c $(defs_h) $(doublest_h) $(floatformat_h) $(frame_h) \
	$(gdbcore_h) $(inferior_h) $(language_h) $(regcache_h) $(value_h) \
	$(gdb_assert_h) $(gdb_string_h) $(i386_tdep_h) $(i387_tdep_h)
d1867 3
a1869 2
	$(value_h) $(gdb_assert_h) $(objfiles_h) $(elf_common_h) \
	$(elf_bfd_h)
d1872 1
a1872 1
	$(symfile_h) $(gdbcmd_h) $(command_h) $(gdb_string_h) $(infcall_h)
d1877 1
a1877 3
	$(parser_defs_h) $(regcache_h) $(reggroups_h) $(block_h)
inf-loop.o: inf-loop.c $(defs_h) $(inferior_h) $(target_h) $(event_loop_h) \
	$(event_top_h) $(inf_loop_h) $(remote_h)
d1892 1
a1892 2
	$(gdb_string_h) $(gdb_wait_h) $(command_h) $(gdbthread_h) \
	$(gdbcore_h)
d1910 1
a1912 1
kod-cisco.o: kod-cisco.c $(defs_h) $(gdb_string_h) $(kod_h)
a1915 4
linespec.o: linespec.c $(defs_h) $(symtab_h) $(frame_h) $(command_h) \
	$(symfile_h) $(objfiles_h) $(source_h) $(demangle_h) $(value_h) \
	$(completer_h) $(cp_abi_h) $(parser_defs_h) $(block_h) \
	$(objc_lang_h) $(linespec_h) $(cp_support_h)
d1919 4
d1925 2
a1926 2
linux-proc.o: linux-proc.c $(defs_h) $(inferior_h) $(gdb_stat_h) \
	$(regcache_h) $(gregset_h) $(gdbcore_h) $(gdbthread_h) $(elf_bfd_h) \
d1937 3
d1944 4
a1947 8
m32r-tdep.o: m32r-tdep.c $(defs_h) $(frame_h) $(frame_unwind_h) \
	$(frame_base_h) $(symtab_h) $(gdbtypes_h) $(gdbcmd_h) $(gdbcore_h) \
	$(gdb_string_h) $(value_h) $(inferior_h) $(symfile_h) $(objfiles_h) \
	$(language_h) $(arch_utils_h) $(regcache_h) $(trad_frame_h) \
	$(gdb_assert_h)
# OBSOLETE m3-nat.o: m3-nat.c
m68hc11-tdep.o: m68hc11-tdep.c $(defs_h) $(frame_h) $(frame_unwind_h) \
	$(frame_base_h) $(dwarf2_frame_h) $(trad_frame_h) $(symtab_h) \
d1950 6
a1955 2
	$(arch_utils_h) $(regcache_h) $(reggroups_h) $(target_h) \
	$(opcode_m68hc11_h) $(elf_m68hc11_h) $(elf_bfd_h)
d1958 4
a1961 6
	$(m68k_tdep_h) $(gdb_stat_h) $(floatformat_h) $(target_h) \
	$(gregset_h)
m68klinux-tdep.o: m68klinux-tdep.c $(defs_h) $(gdbcore_h) $(doublest_h) \
	$(floatformat_h) $(frame_h) $(target_h) $(gdb_string_h) \
	$(gdbtypes_h) $(osabi_h) $(regcache_h) $(objfiles_h) $(symtab_h) \
	$(m68k_tdep_h)
a1964 5
m68k-stub.o: m68k-stub.c
m68k-tdep.o: m68k-tdep.c $(defs_h) $(frame_h) $(frame_base_h) \
	$(frame_unwind_h) $(symtab_h) $(gdbcore_h) $(value_h) \
	$(gdb_string_h) $(gdb_assert_h) $(inferior_h) $(regcache_h) \
	$(arch_utils_h) $(osabi_h) $(m68k_tdep_h) $(gregset_h)
d1969 2
a1970 2
macroscope.o: macroscope.c $(defs_h) $(macroscope_h) $(symtab_h) $(source_h) \
	$(target_h) $(frame_h) $(inferior_h) $(complaints_h)
d1988 7
a1994 3
	$(block_h) $(dictionary_h) $(coff_sym_h) $(coff_symconst_h) \
	$(gdb_stat_h) $(gdb_string_h) $(bfd_h) $(coff_ecoff_h) $(libaout_h) \
	$(aout_aout64_h) $(aout_stab_gnu_h) $(expression_h) $(language_h)
a1996 2
mem-break.o: mem-break.c $(defs_h) $(symtab_h) $(breakpoint_h) $(inferior_h) \
	$(target_h)
d2002 1
a2002 1
	$(solib_svr4_h) $(osabi_h) $(mips_tdep_h) $(gdb_string_h) \
a2003 1
# OBSOLETE mipsm3-nat.o: mipsm3-nat.c
d2005 7
d2015 2
a2016 2
	$(target_h) $(value_h) $(osabi_h) $(nbsd_tdep_h) $(mipsnbsd_tdep_h) \
	$(solib_svr4_h)
a2020 6
mips-tdep.o: mips-tdep.c $(defs_h) $(gdb_string_h) $(gdb_assert_h) \
	$(frame_h) $(inferior_h) $(symtab_h) $(value_h) $(gdbcmd_h) \
	$(language_h) $(gdbcore_h) $(symfile_h) $(objfiles_h) $(gdbtypes_h) \
	$(target_h) $(arch_utils_h) $(regcache_h) $(osabi_h) $(mips_tdep_h) \
	$(block_h) $(reggroups_h) $(opcode_mips_h) $(elf_mips_h) \
	$(elf_bfd_h) $(symcat_h) $(sim_regno_h)
d2023 1
a2023 2
# OBSOLETE mn10200-tdep.o: mn10200-tdep.c
mn10300-tdep.o: mn10300-tdep.c $(defs_h) $(frame_h) $(inferior_h) \
d2025 4
a2028 1
	$(symfile_h) $(regcache_h) $(arch_utils_h) $(gdb_assert_h)
d2035 3
d2040 2
a2041 11
ns32knbsd-tdep.o: ns32knbsd-tdep.c $(defs_h) $(osabi_h) $(ns32k_tdep_h) \
	$(gdb_string_h)
ns32k-tdep.o: ns32k-tdep.c $(defs_h) $(frame_h) $(gdbtypes_h) $(gdbcore_h) \
	$(inferior_h) $(regcache_h) $(target_h) $(arch_utils_h) $(osabi_h) \
	$(ns32k_tdep_h) $(gdb_string_h)
nto-procfs.o: nto-procfs.c $(defs_h) $(gdb_dirent_h) $(gdb_string_h) \
	$(gdbcore_h) $(inferior_h) $(target_h) $(objfiles_h) $(gdbthread_h) \
	$(nto_tdep_h) $(command_h) $(regcache_h)
nto-tdep.o: nto-tdep.c $(gdb_stat_h) $(gdb_string_h) $(nto_tdep_h) $(top_h) \
	$(cli_decode_h) $(cli_cmds_h) $(inferior_h) $(gdbarch_h) $(bfd_h) \
	$(elf_bfd_h) $(solib_svr4_h) $(gdbcore_h)
d2044 3
a2046 4
	$(complaints_h) $(value_h) $(symfile_h) $(objfiles_h) \
	$(gdb_string_h) $(target_h) $(gdbcore_h) $(gdbcmd_h) $(frame_h) \
	$(gdb_regex_h) $(regcache_h) $(block_h) $(infcall_h) $(valprint_h) \
	$(gdb_assert_h)
d2049 3
a2051 3
	$(gdb_obstack_h) $(gdb_string_h) $(hashtab_h) $(breakpoint_h) \
	$(block_h) $(dictionary_h) $(mmalloc_h)
observer.o: observer.c $(defs_h) $(observer_h)
d2057 12
a2068 2
osabi.o: osabi.c $(defs_h) $(gdb_assert_h) $(gdb_string_h) $(osabi_h) \
	$(arch_utils_h) $(gdbcmd_h) $(command_h) $(elf_bfd_h)
d2076 1
a2076 4
	$(doublest_h) $(gdb_assert_h) $(block_h)
p-lang.o: p-lang.c $(defs_h) $(gdb_string_h) $(symtab_h) $(gdbtypes_h) \
	$(expression_h) $(parser_defs_h) $(language_h) $(p_lang_h) \
	$(valprint_h) $(value_h)
a2080 2
ppcbug-rom.o: ppcbug-rom.c $(defs_h) $(gdbcore_h) $(target_h) $(monitor_h) \
	$(serial_h) $(regcache_h)
d2086 6
a2091 2
	$(objfiles_h) $(regcache_h) $(value_h) $(osabi_h) $(solib_svr4_h) \
	$(ppc_tdep_h)
d2095 2
a2096 4
	$(target_h) $(breakpoint_h) $(value_h) $(osabi_h) $(ppc_tdep_h) \
	$(ppcnbsd_tdep_h) $(nbsd_tdep_h) $(solib_svr4_h)
ppc-sysv-tdep.o: ppc-sysv-tdep.c $(defs_h) $(gdbcore_h) $(inferior_h) \
	$(regcache_h) $(value_h) $(gdb_string_h) $(ppc_tdep_h)
a2105 4
procfs.o: procfs.c $(defs_h) $(inferior_h) $(target_h) $(gdbcore_h) \
	$(elf_bfd_h) $(gdbcmd_h) $(gdbthread_h) $(gdb_wait_h) \
	$(gdb_assert_h) $(inflow_h) $(gdb_dirent_h) $(X_OK) $(gdb_stat_h) \
	$(proc_utils_h) $(gregset_h)
d2109 4
a2112 7
p-typeprint.o: p-typeprint.c $(defs_h) $(gdb_obstack_h) $(bfd_h) $(symtab_h) \
	$(gdbtypes_h) $(expression_h) $(value_h) $(gdbcore_h) $(target_h) \
	$(language_h) $(p_lang_h) $(typeprint_h) $(gdb_string_h)
p-valprint.o: p-valprint.c $(defs_h) $(gdb_obstack_h) $(symtab_h) \
	$(gdbtypes_h) $(expression_h) $(value_h) $(command_h) $(gdbcmd_h) \
	$(gdbcore_h) $(demangle_h) $(valprint_h) $(typeprint_h) \
	$(language_h) $(target_h) $(annotate_h) $(p_lang_h) $(cp_abi_h)
a2117 5
remote.o: remote.c $(defs_h) $(gdb_string_h) $(inferior_h) $(bfd_h) \
	$(symfile_h) $(target_h) $(gdbcmd_h) $(objfiles_h) $(gdb_stabs_h) \
	$(gdbthread_h) $(remote_h) $(regcache_h) $(value_h) $(gdb_assert_h) \
	$(event_loop_h) $(event_top_h) $(inf_loop_h) $(serial_h) \
	$(gdbcore_h) $(remote_fileio_h)
a2122 3
remote-fileio.o: remote-fileio.c $(defs_h) $(gdb_string_h) $(gdbcmd_h) \
	$(remote_h) $(gdb_fileio_h) $(gdb_wait_h) $(gdb_stat_h) \
	$(remote_fileio_h)
d2149 5
a2158 5
remote-vx.o: remote-vx.c $(defs_h) $(frame_h) $(inferior_h) $(target_h) \
	$(gdbcore_h) $(command_h) $(symtab_h) $(complaints_h) $(gdbcmd_h) \
	$(bfd_h) $(symfile_h) $(objfiles_h) $(gdb_stabs_h) $(regcache_h) \
	$(gdb_string_h) $(vx_share_ptrace_h) $(vx_share_xdr_ptrace_h) \
	$(vx_share_xdr_ld_h) $(vx_share_xdr_rdb_h) $(vx_share_dbgRpcLib_h)
d2169 8
d2186 3
a2188 3
	$(parser_defs_h) $(osabi_h) $(libbfd_h) $(coff_internal_h) \
	$(libcoff_h) $(coff_xcoff_h) $(libxcoff_h) $(elf_bfd_h) \
	$(solib_svr4_h) $(ppc_tdep_h) $(gdb_assert_h)
a2206 1
serial.o: serial.c $(defs_h) $(serial_h) $(gdb_string_h) $(gdbcmd_h)
d2212 7
d2222 1
a2222 2
shnbsd-nat.o: shnbsd-nat.c $(defs_h) $(inferior_h) $(sh_tdep_h) \
	$(shnbsd_tdep_h)
d2224 4
a2227 8
	$(osabi_h) $(solib_svr4_h) $(nbsd_tdep_h) $(sh_tdep_h) \
	$(shnbsd_tdep_h)
sh-stub.o: sh-stub.c
sh-tdep.o: sh-tdep.c $(defs_h) $(frame_h) $(symtab_h) $(symfile_h) \
	$(gdbtypes_h) $(gdbcmd_h) $(gdbcore_h) $(value_h) $(dis_asm_h) \
	$(inferior_h) $(gdb_string_h) $(arch_utils_h) $(floatformat_h) \
	$(regcache_h) $(doublest_h) $(osabi_h) $(sh_tdep_h) $(elf_bfd_h) \
	$(solib_svr4_h) $(elf_sh_h) $(gdb_sim_sh_h)
a2231 4
solib.o: solib.c $(defs_h) $(gdb_string_h) $(symtab_h) $(bfd_h) $(symfile_h) \
	$(objfiles_h) $(gdbcore_h) $(command_h) $(target_h) $(frame_h) \
	$(gdb_regex_h) $(inferior_h) $(environ_h) $(language_h) $(gdbcmd_h) \
	$(completer_h) $(filenames_h) $(solist_h)
d2243 4
a2246 3
sol-thread.o: sol-thread.c $(defs_h) $(gdbthread_h) $(target_h) \
	$(inferior_h) $(gdb_stat_h) $(gdbcmd_h) $(gdbcore_h) $(regcache_h) \
	$(symfile_h) $(gregset_h)
d2258 8
a2265 1
	$(filenames_h) $(completer_h) $(ui_out_h)
d2267 8
a2274 9
	$(sparc_tdep_h) $(sparcnbsd_tdep_h)
# OBSOLETE sparclet-rom.o: sparclet-rom.c
# OBSOLETE sparclet-stub.o: sparclet-stub.c
sparc-linux-nat.o: sparc-linux-nat.c $(defs_h) $(regcache_h) $(sparc_tdep_h) \
	$(gregset_h)
# OBSOLETE sparcl-stub.o: sparcl-stub.c
# OBSOLETE sparcl-tdep.o: sparcl-tdep.c
sparc-nat.o: sparc-nat.c $(defs_h) $(inferior_h) $(target_h) $(gdbcore_h) \
	$(regcache_h) $(sparc_tdep_h) $(gdb_wait_h)
d2276 1
a2276 1
	$(sparc_tdep_h) $(sparcnbsd_tdep_h)
d2278 2
a2279 7
	$(target_h) $(value_h) $(osabi_h) $(gdb_string_h) $(sparc_tdep_h) \
	$(sparcnbsd_tdep_h) $(nbsd_tdep_h) $(solib_svr4_h)
sparc-stub.o: sparc-stub.c
sparc-tdep.o: sparc-tdep.c $(defs_h) $(arch_utils_h) $(frame_h) \
	$(inferior_h) $(target_h) $(value_h) $(bfd_h) $(gdb_string_h) \
	$(regcache_h) $(osabi_h) $(sparc_tdep_h) $(gregset_h) $(gdbcore_h) \
	$(gdb_assert_h) $(symfile_h)
d2284 1
a2284 1
	$(doublest_h) $(cp_abi_h) $(cp_support_h) $(stabsread_h)
d2292 1
a2292 1
std-regs.o: std-regs.c $(defs_h) $(user_regs_h) $(frame_h) $(gdbtypes_h) \
d2296 11
a2306 7
symfile.o: symfile.c $(defs_h) $(bfdlink_h) $(symtab_h) $(gdbtypes_h) \
	$(gdbcore_h) $(frame_h) $(target_h) $(value_h) $(symfile_h) \
	$(objfiles_h) $(source_h) $(gdbcmd_h) $(breakpoint_h) $(language_h) \
	$(complaints_h) $(demangle_h) $(inferior_h) $(filenames_h) \
	$(gdb_stabs_h) $(gdb_obstack_h) $(completer_h) $(bcache_h) \
	$(hashtab_h) $(gdb_assert_h) $(block_h) $(gdb_string_h) \
	$(gdb_stat_h)
d2309 2
a2310 4
	$(gdb_obstack_h) $(language_h) $(bcache_h) $(block_h) $(gdb_regex_h) \
	$(dictionary_h) $(gdb_string_h)
# OBSOLETE symm-nat.o: symm-nat.c
# OBSOLETE symm-tdep.o: symm-tdep.c
d2314 3
a2316 3
	$(language_h) $(demangle_h) $(inferior_h) $(linespec_h) $(source_h) \
	$(filenames_h) $(objc_lang_h) $(hashtab_h) $(gdb_obstack_h) \
	$(block_h) $(dictionary_h) $(gdb_string_h) $(gdb_stat_h) $(cp_abi_h) \
d2321 3
a2326 3
thread-db.o: thread-db.c $(defs_h) $(gdb_assert_h) $(gdb_proc_service_h) \
	$(gdb_thread_db_h) $(bfd_h) $(gdbthread_h) $(inferior_h) \
	$(symfile_h) $(objfiles_h) $(target_h) $(regcache_h) $(solib_svr4_h)
d2333 1
a2333 1
	$(ui_out_h) $(cli_out_h)
d2338 2
a2339 3
	$(block_h) $(dictionary_h) $(ax_h) $(ax_gdb_h)
trad-frame.o: trad-frame.c $(defs_h) $(frame_h) $(trad_frame_h) \
	$(regcache_h)
d2347 4
a2350 6
user-regs.o: user-regs.c $(defs_h) $(user_regs_h) $(gdbtypes_h) \
	$(gdb_string_h) $(gdb_assert_h) $(frame_h)
utils.o: utils.c $(defs_h) $(gdb_assert_h) $(gdb_string_h) $(event_top_h) \
	$(gdbcmd_h) $(serial_h) $(bfd_h) $(target_h) $(demangle_h) \
	$(expression_h) $(language_h) $(charset_h) $(annotate_h) \
	$(filenames_h) $(inferior_h) $(mmalloc_h)
d2353 3
a2358 3
v850-tdep.o: v850-tdep.c $(defs_h) $(frame_h) $(inferior_h) $(target_h) \
	$(value_h) $(bfd_h) $(gdb_string_h) $(gdbcore_h) $(symfile_h) \
	$(arch_utils_h) $(regcache_h) $(symtab_h)
d2364 2
a2365 2
	$(gdbcmd_h) $(regcache_h) $(cp_abi_h) $(block_h) $(infcall_h) \
	$(dictionary_h) $(cp_support_h) $(gdb_string_h) $(gdb_assert_h)
d2377 1
a2377 1
	$(gdb_string_h) $(osabi_h) $(vax_tdep_h)
d2384 1
d2386 2
a2387 4
	$(command_h) $(buildsym_h) $(symfile_h) $(objfiles_h) \
	$(gdb_string_h) $(gdbthread_h) $(gdbcmd_h) $(wince_stub_h) \
	$(regcache_h) $(mips_tdep_h)
wince-stub.o: wince-stub.c $(wince_stub_h)
d2390 6
a2395 6
	$(regcache_h) $(gdb_assert_h) $(gdb_string_h) $(gdb_proc_service_h) \
	$(gregset_h) $(x86_64_tdep_h) $(x86_64_linux_tdep_h)
x86-64-linux-tdep.o: x86-64-linux-tdep.c $(defs_h) $(inferior_h) \
	$(gdbcore_h) $(regcache_h) $(osabi_h) $(gdb_string_h) \
	$(x86_64_tdep_h) $(x86_64_linux_tdep_h)
x86-64-tdep.o: x86-64-tdep.c $(defs_h) $(arch_utils_h) $(block_h) \
d2397 1
a2397 1
	$(inferior_h) $(gdbcmd_h) $(gdbcore_h) $(objfiles_h) $(regcache_h) \
d2410 2
a2411 1
# OBSOLETE z8k-tdep.o: z8k-tdep.c
d2417 1
a2417 1
# or try to compile the object file into the sub-directory.
d2420 4
a2423 5
	$(gdb_wait_h) $(gdb_regex_h) $(gdb_string_h) $(gdb_vfork_h) \
	$(linespec_h) $(expression_h) $(frame_h) $(value_h) $(language_h) \
	$(filenames_h) $(objfiles_h) $(source_h) $(disasm_h) $(ui_out_h) \
	$(top_h) $(cli_decode_h) $(cli_script_h) $(cli_setshow_h) \
	$(cli_cmds_h)
d2431 1
a2431 1
	$(cli_dump_h) $(gdb_assert_h) $(target_h)
a2435 3
cli-logging.o: $(srcdir)/cli/cli-logging.c $(defs_h) $(gdbcmd_h) $(ui_out_h) \
	$(gdb_string_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/cli/cli-logging.c
d2601 1
a2601 1
# or try to compile the object file into the sub-directory.
d2607 4
d2612 1
a2612 1
	$(mi_cmds_h) $(mi_getopt_h) $(gdb_string_h) $(ui_out_h) $(disasm_h)
d2616 1
a2616 2
	$(environ_h) $(command_h) $(ui_out_h) $(top_h) $(gdb_string_h) \
	$(gdb_stat_h)
a2617 6
mi-cmd-file.o: $(srcdir)/mi/mi-cmd-file.c $(defs_h) $(mi_cmds_h) \
	$(mi_getopt_h) $(ui_out_h) $(symtab_h) $(source_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/mi/mi-cmd-file.c
mi-cmds.o: $(srcdir)/mi/mi-cmds.c $(defs_h) $(top_h) $(mi_cmds_h) \
	$(gdb_string_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/mi/mi-cmds.c
d2619 2
a2620 2
	$(value_h) $(mi_cmds_h) $(ui_out_h) $(symtab_h) $(block_h) \
	$(stack_h) $(dictionary_h)
d2625 3
d2642 1
a2642 1
	$(gdb_h) $(frame_h) $(mi_main_h)
d2649 2
a2650 2
mi-symbol-cmds.o: $(srcdir)/mi/mi-symbol-cmds.c $(defs_h) $(mi_cmds_h) \
	$(symtab_h) $(ui_out_h)
d2670 1
a2670 1
# gdb/signals/ dependencies
d2673 1
a2673 1
# or try to compile the object file into the sub-directory.
d2675 1
a2675 2
signals.o: $(srcdir)/signals/signals.c $(server_h) $(defs_h) $(target_h) \
	$(gdb_string_h)
d2679 1
a2679 1
# gdb/tui/ dependencies
d2682 1
a2682 1
# or try to compile the object file into the sub-directory.
d2684 24
a2707 2
tuiCommand.o: $(srcdir)/tui/tuiCommand.c $(defs_h) $(tui_h) $(tuiData_h) \
	$(tuiWin_h) $(tuiIO_h)
d2709 1
a2709 4
tuiDataWin.o: $(srcdir)/tui/tuiDataWin.c $(defs_h) $(tui_h) $(tuiData_h) \
	$(tuiGeneralWin_h) $(tuiRegs_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tuiDataWin.c
tuiData.o: $(srcdir)/tui/tuiData.c $(defs_h) $(symtab_h) $(tui_h) \
d2712 7
a2718 4
tuiDisassem.o: $(srcdir)/tui/tuiDisassem.c $(defs_h) $(symtab_h) \
	$(breakpoint_h) $(frame_h) $(value_h) $(source_h) $(disasm_h) \
	$(tui_h) $(tuiData_h) $(tuiWin_h) $(tuiLayout_h) $(tuiSourceWin_h) \
	$(tuiStack_h) $(tui_file_h)
d2720 2
a2721 2
tuiGeneralWin.o: $(srcdir)/tui/tuiGeneralWin.c $(defs_h) $(tui_h) \
	$(tuiData_h) $(tuiGeneralWin_h) $(tuiWin_h)
d2723 2
a2724 2
tuiIO.o: $(srcdir)/tui/tuiIO.c $(defs_h) $(terminal_h) $(target_h) \
	$(event_loop_h) $(event_top_h) $(command_h) $(top_h) $(readline_h) \
d2728 2
a2729 2
tuiLayout.o: $(srcdir)/tui/tuiLayout.c $(defs_h) $(command_h) $(symtab_h) \
	$(frame_h) $(source_h) $(tui_h) $(tuiData_h) $(tuiDataWin_h) \
d2733 2
a2734 2
tuiRegs.o: $(srcdir)/tui/tuiRegs.c $(defs_h) $(tui_h) $(tuiData_h) \
	$(symtab_h) $(gdbtypes_h) $(gdbcmd_h) $(frame_h) $(regcache_h) \
d2738 6
a2743 2
tuiSourceWin.o: $(srcdir)/tui/tuiSourceWin.c $(defs_h) $(symtab_h) \
	$(frame_h) $(breakpoint_h) $(value_h) $(source_h) $(tui_h) \
d2747 3
a2749 8
tuiSource.o: $(srcdir)/tui/tuiSource.c $(defs_h) $(symtab_h) $(frame_h) \
	$(breakpoint_h) $(source_h) $(symtab_h) $(tui_h) $(tuiData_h) \
	$(tuiStack_h) $(tuiSourceWin_h) $(tuiSource_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tuiSource.c
tuiStack.o: $(srcdir)/tui/tuiStack.c $(defs_h) $(symtab_h) $(breakpoint_h) \
	$(frame_h) $(command_h) $(inferior_h) $(target_h) $(top_h) $(tui_h) \
	$(tuiData_h) $(tuiStack_h) $(tuiGeneralWin_h) $(tuiSource_h) \
	$(tuiSourceWin_h) $(tui_file_h)
d2751 5
a2755 4
tuiWin.o: $(srcdir)/tui/tuiWin.c $(defs_h) $(command_h) $(symtab_h) \
	$(breakpoint_h) $(frame_h) $(cli_cmds_h) $(top_h) $(source_h) \
	$(tui_h) $(tuiData_h) $(tuiGeneralWin_h) $(tuiStack_h) $(tuiRegs_h) \
	$(tuiDisassem_h) $(tuiSource_h) $(tuiSourceWin_h) $(tuiDataWin_h)
a2756 22
tui.o: $(srcdir)/tui/tui.c $(defs_h) $(gdbcmd_h) $(tui_h) $(tuiData_h) \
	$(tuiLayout_h) $(tuiIO_h) $(tuiRegs_h) $(tuiStack_h) $(tuiWin_h) \
	$(tuiSourceWin_h) $(tuiDataWin_h) $(readline_h) $(target_h) \
	$(frame_h) $(breakpoint_h) $(inferior_h) $(symtab_h) $(source_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tui.c
tui-file.o: $(srcdir)/tui/tui-file.c $(defs_h) $(ui_file_h) $(tui_file_h) \
	$(tui_tuiIO_h) $(tui_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tui-file.c
tui-hooks.o: $(srcdir)/tui/tui-hooks.c $(defs_h) $(symtab_h) $(inferior_h) \
	$(command_h) $(bfd_h) $(symfile_h) $(objfiles_h) $(target_h) \
	$(gdbcore_h) $(event_loop_h) $(event_top_h) $(frame_h) \
	$(breakpoint_h) $(gdb_events_h) $(ui_out_h) $(top_h) $(tui_h) \
	$(tuiData_h) $(tuiLayout_h) $(tuiIO_h) $(tuiRegs_h) $(tuiWin_h) \
	$(tuiStack_h) $(tuiDataWin_h) $(tuiSourceWin_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tui-hooks.c
tui-interp.o: $(srcdir)/tui/tui-interp.c $(defs_h) $(interps_h) $(top_h) \
	$(event_top_h) $(event_loop_h) $(ui_out_h) $(tui_tuiData_h) \
	$(readline_h) $(tui_tuiWin_h) $(tui_h) $(tui_tuiIO_h) $(cli_out_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tui-interp.c
tui-out.o: $(srcdir)/tui/tui-out.c $(defs_h) $(ui_out_h) $(tui_h) \
	$(gdb_string_h) $(gdb_assert_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tui-out.c
@


1.262.2.36
log
@2003-09-17  David Carlton  <carlton@@kealia.com>

	* Merge with mainline; tag is carlton_dictionary-20030917-merge.
@
text
@a432 1
	"DESTDIR=$(DESTDIR)" \
a628 1
amd64_nat_h = amd64-nat.h
d652 1
a652 1
	$(nm_h) $(tm_h) $(fopen_same_h) $(gdbarch_h)
d668 1
a668 1
gdbarch_h = gdbarch.h
a688 1
hppa_tdep_h = hppa-tdep.h
a745 2
sparc64_tdep_h = sparc64-tdep.h
sparcbsd_nat_h = sparcbsd-nat.h
d966 1
a966 1
		$(SHELL) $(srcdir)/../mkinstalldirs $(DESTDIR)$(bindir) ; \
d983 1
a983 2
		rm -f $(DESTDIR)$(bindir)/$$transformed_name$(EXEEXT) \
		      $(DESTDIR)$(man1dir)/$$transformed_name.1
d1098 4
a1101 2
tm-sun3.h tm-altos.h: tm-m68k.h
tm-sun2.h tm-3b1.h: tm-m68k.h
d1292 1
a1292 1
	sh-tdep.c sh64-tdep.c shnbsd-tdep.c shnbsd-nat.c \
a1321 16
# FIXME: cagney/2003-08-10: "monitor.c" gets -Wformat-nonliteral
# errors.  It turns out that that is the least of monitor.c's
# problems.  The function print_vsprintf appears to be using
# va_arg(long) to extract CORE_ADDR parameters - something that
# definitly will not work.  "monitor.c" needs to be rewritten so that
# it doesn't use format strings and instead uses callbacks.
monitor.o: $(srcdir)/monitor.c
	$(CC) -c $(INTERNAL_WARN_CFLAGS) $(NO_WERROR_CFLAGS) $(srcdir)/monitor.c

# FIXME: cagney/2003-08-10: Do not try to build "printcmd.c" with
# -Wformat-nonliteral.  It needs to be overhauled so that it doesn't
# pass user input strings as the format parameter to host printf
# function calls.
printcmd.o: $(srcdir)/printcmd.c
	$(CC) -c $(INTERNAL_WARN_CFLAGS) $(NO_WERROR_CFLAGS) $(srcdir)/printcmd.c

a1338 6
# FIXME: cagney/2003-08-10: Do not try to build "valprint.c" with
# -Wformat-nonliteral.  It relies on local_hex_format et.al. and
# that's a mess.  It needs a serious overhaul.
valprint.o: $(srcdir)/valprint.c
	$(CC) -c $(INTERNAL_WARN_CFLAGS) $(NO_WERROR_CFLAGS) $(srcdir)/valprint.c

d1539 1
a1539 1
	$(gdb_assert_h) $(gregset_h) $(x86_64_tdep_h) $(amd64_nat_h)
a1542 2
amd64-nat.o: amd64-nat.c $(defs_h) $(gdbarch_h) $(regcache_h) \
	$(gdb_assert_h) $(i386_tdep_h) $(x86_64_tdep_h)
d1546 4
a1549 2
	$(inferior_h) $(gdb_string_h) $(regcache_h) $(gdb_assert_h) \
	$(sim_regno_h) $(version_h) $(floatformat_h)
d1562 1
a1562 2
	$(doublest_h) $(value_h) $(arch_utils_h) $(osabi_h) \
	$(frame_unwind_h) $(frame_base_h) $(trad_frame_h) $(arm_tdep_h) \
d1568 1
a1568 1
	$(gdb_string_h) $(dis_asm_h)
d1644 2
a1645 2
	$(opcode_cris_h) $(arch_utils_h) $(regcache_h) $(gdb_assert_h) \
	$(symfile_h) $(solib_h) $(solib_svr4_h) $(gdb_string_h) $(dis_asm_h)
d1665 1
a1665 1
	$(cp_abi_h) $(aout_aout64_h) $(aout_stab_gnu_h) $(gdb_assert_h)
d1676 1
a1676 1
	$(gdb_string_h) $(disasm_h) $(gdbcore_h) $(dis_asm_h)
d1680 1
a1680 2
dsrec.o: dsrec.c $(defs_h) $(serial_h) $(srec_h) $(gdb_assert_h) \
	$(gdb_string_h)
d1742 2
a1743 3
frv-tdep.o: frv-tdep.c $(defs_h) $(gdb_string_h) $(inferior_h) $(symfile_h) \
	$(gdbcore_h) $(arch_utils_h) $(regcache_h) $(frame_h) \
	$(frame_unwind_h) $(frame_base_h) $(trad_frame_h) $(dis_asm_h)
d1753 5
a1757 3
	$(symcat_h) $(floatformat_h) $(gdb_assert_h) $(gdb_string_h) \
	$(gdb_events_h) $(reggroups_h) $(osabi_h) $(symfile_h) \
	$(gdb_obstack_h)
d1779 1
a1779 1
	$(gdb_assert_h) $(dis_asm_h)
d1794 1
a1794 2
	$(gdbcmd_h) $(target_h) $(symfile_h) $(objfiles_h) $(hppa_tdep_h) \
	$(dis_asm_h)
d1808 1
a1808 2
i386fbsd-nat.o: i386fbsd-nat.c $(defs_h) $(inferior_h) $(regcache_h) \
	$(i386_tdep_h)
d1820 2
a1821 2
	$(regcache_h) $(linux_nat_h) $(gdb_assert_h) $(gdb_string_h) \
	$(gregset_h) $(i387_tdep_h) $(i386_tdep_h) $(i386_linux_tdep_h) \
d1836 1
a1836 1
i386obsd-nat.o: i386obsd-nat.c $(defs_h) $(i386_tdep_h)
d1847 1
a1847 2
	$(dis_asm_h) $(gdb_assert_h) $(gdb_string_h) $(i386_tdep_h) \
	$(i387_tdep_h)
d1864 1
a1864 2
	$(arch_utils_h) $(floatformat_h) $(regcache_h) $(reggroups_h) \
	$(frame_h) $(frame_base_h) $(frame_unwind_h) $(doublest_h) \
d1866 1
a1866 1
	$(elf_bfd_h) $(dis_asm_h)
d1968 1
a1968 1
	$(arch_utils_h) $(osabi_h) $(dis_asm_h) $(m68k_tdep_h) $(gregset_h)
d1988 1
a1988 1
	$(arch_utils_h) $(gdb_string_h) $(disasm_h) $(dis_asm_h)
d2022 1
a2022 1
	$(elf_bfd_h) $(symcat_h) $(sim_regno_h) $(dis_asm_h)
d2028 1
a2028 2
	$(symfile_h) $(regcache_h) $(arch_utils_h) $(gdb_assert_h) \
	$(dis_asm_h)
d2041 1
a2041 1
	$(dis_asm_h) $(ns32k_tdep_h) $(gdb_string_h)
d2055 3
a2057 3
	$(objfiles_h) $(gdb_stabs_h) $(target_h) $(bcache_h) $(gdb_assert_h) \
	$(gdb_stat_h) $(gdb_obstack_h) $(gdb_string_h) $(hashtab_h) \
	$(breakpoint_h) $(block_h) $(dictionary_h) $(mmalloc_h)
d2195 1
a2195 1
	$(solib_svr4_h) $(ppc_tdep_h) $(gdb_assert_h) $(dis_asm_h)
d2200 1
a2200 1
	$(value_h) $(gdb_assert_h) $(dis_asm_h)
a2233 5
sh64-tdep.o: sh64-tdep.c $(defs_h) $(frame_h) $(symtab_h) $(symfile_h) \
	$(gdbtypes_h) $(gdbcmd_h) $(gdbcore_h) $(value_h) $(dis_asm_h) \
	$(inferior_h) $(gdb_string_h) $(arch_utils_h) $(floatformat_h) \
	$(regcache_h) $(doublest_h) $(osabi_h) $(elf_bfd_h) \
	$(solib_svr4_h) $(elf_sh_h) $(gdb_sim_sh_h)
a2267 4
sparc64fbsd-nat.o: sparc64fbsd-nat.c $(defs_h) $(sparc64_tdep_h) \
	$(sparcbsd_nat_h)
sparc64fbsd-tdep.o: sparc64fbsd-tdep.c $(defs_h) $(gdbcore_h) $(osabi_h) \
	$(regcache_h) $(target_h) $(gdb_string_h) $(sparc64_tdep_h)
a2269 6
sparc64-tdep.o: sparc64-tdep.c $(defs_h) $(arch_utils_h) $(floatformat_h) \
	$(frame_h) $(frame_base_h) $(frame_unwind_h) $(gdbcore_h) \
	$(gdbtypes_h) $(osabi_h) $(regcache_h) $(target_h) $(value_h) \
	$(gdb_assert_h) $(gdb_string_h) $(sparc64_tdep_h)
sparcbsd-nat.o: sparcbsd-nat.c $(defs_h) $(inferior_h) $(regcache_h) \
	$(sparc64_tdep_h) $(sparcbsd_nat_h)
d2286 2
a2287 2
	$(regcache_h) $(osabi_h) $(dis_asm_h) $(sparc_tdep_h) $(gregset_h) \
	$(gdbcore_h) $(gdb_assert_h) $(symfile_h)
d2367 1
a2367 1
	$(arch_utils_h) $(regcache_h) $(symtab_h) $(dis_asm_h)
d2386 1
a2386 1
	$(gdb_string_h) $(osabi_h) $(dis_asm_h) $(vax_tdep_h)
d2400 2
a2401 3
	$(regcache_h) $(linux_nat_h) $(gdb_assert_h) $(gdb_string_h) \
	$(gdb_proc_service_h) $(gregset_h) $(x86_64_tdep_h) \
	$(x86_64_linux_tdep_h) $(i386_linux_tdep_h) $(amd64_nat_h)
d2419 1
a2419 1
	$(objfiles_h) $(dis_asm_h)
d2476 1
a2476 1
	$(SHELL) $(srcdir)/../mkinstalldirs $(DESTDIR)$(bindir); \
d2765 2
a2766 3
	$(event_top_h) $(event_loop_h) $(ui_out_h) $(cli_out_h) \
	$(tui_tuiData_h) $(readline_h) $(tui_tuiWin_h) $(tui_h) \
	$(tui_tuiIO_h)
@


1.262.2.37
log
@2003-09-30  David Carlton  <carlton@@kealia.com>

	* Makefile.in (c-exp.tab.o): Depend on cp_support_h.
	* c-exp.y: Include c-exp.y.  Update comments, replace
	lookup_nested_type by cp_lookup_nested_type.
	(yylex): Update comments, remove #if 0 block.
	* cp-namespace.c (cp_lookup_nested_type): Move here from symtab.c;
	rename from lookup_nested_type.
	* cp-support.h: Add cp_lookup_nested_type declaration.
	* dwarf2read.c (read_die_and_children): Update comment.
	(read_die_and_siblings): Update comment, move declaration of
	'die'.
	(read_full_die): Update comment, tweak formatting.
	* symtab.c (lookup_nested_type): Move to cp-namespace.c, rename to
	cp_lookup_nested_type.
	* symtab.h: Delete declaration of lookup_nested_type.
@
text
@d1415 1
a1415 1
	$(symfile_h) $(objfiles_h) $(charset_h) $(block_h) $(cp_support_h)
@


1.262.2.38
log
@2003-11-11  David Carlton  <carlton@@kealia.com>

	* Merge with mainline; tag is carlton-dictionary-20031111-merge.
@
text
@d514 1
a514 3
	bcache.c \
	bfd-target.c \
	block.c blockframe.c breakpoint.c buildsym.c \
d579 1
a579 1
dis_asm_h =	$(INCLUDE_DIR)/dis-asm.h $(bfd_h)
a590 1
frv_desc_h =	$(OPCODES_SRC)/frv-desc.h
a593 1
gdb_sim_frv_h = $(INCLUDE_DIR)/gdb/sim-frv.h
a636 1
bfd_target_h = bfd-target.h
a664 1
exec_h = exec.h $(target_h)
a688 1
glibc_tdep_h = glibc-tdep.h
a732 1
regset_h = regset.h
d868 2
a869 4
COMMON_OBS = version.o \
	bfd-target.o \
	blockframe.o breakpoint.o findvar.o regcache.o \
	charset.o disasm.o dummy-frame.o \
d1262 1
a1262 2
	glibc-tdep.c \
	go32-nat.c h8300-tdep.c \
d1267 1
a1267 1
	i386bsd-nat.c i386bsd-tdep.c i386fbsd-nat.c i386fbsd-tdep.c \
d1289 1
a1289 1
	remote-hms.c remote-m32r-sdi.c remote-mips.c \
d1306 2
a1307 1
	xstormy16-tdep.c
d1365 7
a1563 2
amd64bsd-nat.o: amd64bsd-nat.c $(defs_h) $(inferior_h) $(regcache_h) \
	$(gdb_assert_h) $(x86_64_tdep_h) $(amd64_nat_h)
a1565 2
amd64nbsd-nat.o: amd64nbsd-nat.c $(defs_h) $(gdb_assert_h) \
	$(x86_64_tdep_h) $(amd64_nat_h)
a1568 3
amd64nbsd-tdep.o: amd64nbsd-tdep.c $(defs_h) $(arch_utils_h) $(frame_h) \
	$(gdbcore_h) $(osabi_h) $(gdb_assert_h) $(nbsd_tdep_h) \
	$(x86_64_tdep_h)
d1573 3
a1575 3
arch-utils.o: arch-utils.c $(defs_h) $(arch_utils_h) $(buildsym_h) \
	$(gdbcmd_h) $(inferior_h) $(gdb_string_h) $(regcache_h) \
	$(gdb_assert_h) $(sim_regno_h) $(version_h) $(floatformat_h)
d1577 1
a1577 1
	$(gdb_string_h) $(regcache_h) $(arm_tdep_h) $(glibc_tdep_h) $(gregset_h)
d1601 1
a1601 4
bcache.o: bcache.c $(defs_h) $(gdb_obstack_h) $(bcache_h) \
	$(gdb_string_h) $(gdb_assert_h)
bfd-target.o: bfd-target.c $(defs_h) $(target_h) $(bfd_target_h) \
	$(gdb_assert_h) $(gdb_string_h)
d1641 1
a1641 2
	$(filenames_h) $(cli_decode_h) $(gdbcmd_h) $(completer_h) \
	$(language_h)
d1650 1
a1650 1
	$(gdbthread_h) $(regcache_h) $(symfile_h) $(exec_h)
d1678 2
a1679 2
	$(gdbtypes_h) $(expression_h) $(value_h) $(valprint_h) \
	$(language_h) $(c_lang_h) $(cp_abi_h) $(target_h)
d1692 1
a1692 1
	$(cp_abi_h) $(gdb_assert_h) $(aout_aout64_h) $(aout_stab_gnu_h)
d1738 1
a1738 2
	$(f_lang_h) $(cp_abi_h) $(infcall_h) $(objc_lang_h) $(block_h) \
	$(parser_defs_h)
d1746 1
a1746 2
	$(gdb_string_h) $(gdbcore_h) $(gdb_stat_h) $(xcoffsolib_h) \
	$(exec_h)
d1772 1
a1772 2
	$(frame_unwind_h) $(frame_base_h) $(trad_frame_h) $(dis_asm_h) \
	$(gdb_assert_h) $(sim_regno_h) $(gdb_sim_frv_h) $(frv_desc_h)
d1779 2
a1780 3
gcore.o: gcore.c $(defs_h) $(elf_bfd_h) $(infcall_h) $(inferior_h) \
	$(gdbcore_h) $(objfiles_h) $(symfile_h) $(cli_decode_h) \
	$(gdb_assert_h)
d1807 1
d1819 1
a1819 1
	$(gdb_assert_h) $(infttrace_h) $(symtab_h) $(infcall_h) $(dis_asm_h) \
d1821 2
a1822 1
	$(gdbcmd_h) $(target_h) $(symfile_h) $(objfiles_h) $(hppa_tdep_h)
a1837 2
i386fbsd-tdep.o: i386fbsd-tdep.c $(defs_h) $(arch_utils_h) $(osabi_h) \
	$(i386_tdep_h) $(i387_tdep_h)
d1855 1
a1855 1
	$(i386_linux_tdep_h) $(glibc_tdep_h)
d1875 3
a1877 3
	$(reggroups_h) $(regset_h) $(symfile_h) $(symtab_h) $(target_h) \
	$(value_h) $(dis_asm_h) $(gdb_assert_h) $(gdb_string_h) \
	$(i386_tdep_h) $(i387_tdep_h)
d1927 2
d1976 2
a1977 1
	$(gdb_assert_h) $(dis_asm_h)
d1996 4
a1999 5
m68k-tdep.o: m68k-tdep.c $(defs_h) $(dwarf2_frame_h) $(frame_h) \
	$(frame_base_h) $(frame_unwind_h) $(symtab_h) $(gdbcore_h) \
	$(value_h) $(gdb_string_h) $(gdb_assert_h) $(inferior_h) \
	$(regcache_h) $(arch_utils_h) $(osabi_h) $(dis_asm_h) $(m68k_tdep_h) \
	$(gregset_h)
d2037 1
d2056 1
d2101 1
a2101 1
	$(regcache_h) $(exec_h)
d2128 1
a2128 2
	$(regcache_h) $(value_h) $(gdb_string_h) $(gdb_assert_h) \
	$(ppc_tdep_h) $(target_h)
a2171 2
remote-m32r-sdi.o: remote-m32r-sdi.c $(defs_h) $(gdbcmd_h) $(gdbcore_h) \
	$(inferior_h) $(target_h) $(regcache_h) $(gdb_string_h) $(serial_h)
a2254 5
sh64-tdep.o: sh64-tdep.c $(defs_h) $(frame_h) $(symtab_h) $(symfile_h) \
	$(gdbtypes_h) $(gdbcmd_h) $(gdbcore_h) $(value_h) $(dis_asm_h) \
	$(inferior_h) $(gdb_string_h) $(arch_utils_h) $(floatformat_h) \
	$(regcache_h) $(doublest_h) $(osabi_h) $(elf_bfd_h) $(solib_svr4_h) \
	$(elf_sh_h) $(gdb_sim_sh_h)
d2261 10
a2270 6
sh-tdep.o: sh-tdep.c $(defs_h) $(frame_h) $(frame_base_h) $(frame_unwind_h) \
	$(dwarf2_frame_h) $(symtab_h) $(symfile_h) $(gdbtypes_h) $(gdbcmd_h) \
	$(gdbcore_h) $(value_h) $(dis_asm_h) $(inferior_h) $(gdb_string_h) \
	$(gdb_assert_h) $(arch_utils_h) $(floatformat_h) $(regcache_h) \
	$(doublest_h) $(osabi_h) $(sh_tdep_h) $(elf_bfd_h) $(solib_svr4_h) \
	$(elf_sh_h) $(gdb_sim_sh_h)
d2278 1
a2278 1
	$(completer_h) $(filenames_h) $(solist_h) $(exec_h)
d2289 1
a2289 2
	$(gdbcore_h) $(target_h) $(inferior_h) $(solist_h) $(solib_svr4_h) \
	$(bfd_target_h) $(exec_h)
d2292 1
a2292 1
	$(symfile_h) $(gdb_string_h) $(gregset_h)
d2299 1
a2299 1
	$(regcache_h) $(gdb_assert_h) $(exec_h)
d2317 2
d2321 2
d2344 1
a2344 1
	$(gdb_assert_h) $(dictionary_h) $(reggroups_h) $(regcache_h)
d2362 2
d2373 1
a2373 2
	$(gdb_wait_h) $(dcache_h) $(regcache_h) $(gdb_assert_h) \
	$(gdbcore_h)
a2408 2
glibc-tdep.o: glibc-tdep.c $(defs_h) $(frame_h) $(symtab_h) \
	$(symfile_h) $(objfiles_h) $(glibc_tdep_h)
d2421 1
a2421 2
	$(dictionary_h) $(cp_support_h) $(gdb_string_h) $(gdb_assert_h) \
	$(cp_support_h)
d2436 4
a2439 4
win32-nat.o: win32-nat.c $(defs_h) $(frame_h) $(inferior_h) $(target_h) \
	$(gdbcore_h) $(command_h) $(completer_h) $(regcache_h) $(top_h) \
	$(i386_tdep_h) $(buildsym_h) $(symfile_h) $(objfiles_h) \
	$(gdb_string_h) $(gdbthread_h) $(gdbcmd_h) $(exec_h)
d2456 1
a2456 2
	$(regset_h) $(symfile_h) $(gdb_assert_h) $(x86_64_tdep_h) \
	$(i387_tdep_h)
d2468 1
@


1.262.2.39
log
@2003-12-15  David Carlton  <carlton@@kealia.com>

	* Merge with mainline; tag is carlton_dictionary-20031215-merge.
	* cp-support.c (class_name_from_physname): Add DMGL_PARAMS to call
	to cplus_demangle.
	(method_name_from_physname): Ditto.
@
text
@a710 1
libunwind_frame_h = libunwind-frame.h
a1283 1
	libunwind-frame.c \
d1727 1
a1727 2
	$(serial_h) $(inferior_h) $(command_h) $(gdb_string_h) $(regcache_h) \
	$(mips_tdep_h)
d1915 1
a1915 1
	$(elf_bfd_h) $(dis_asm_h) $(libunwind_frame_h)
a1962 4
libunwind-frame.o: libunwind-frame.c $(defs_h) \
	$(frame_h) $(frame_base_h) $(frame_unwind_h) $(gdbcore_h) \
	$(gdbtypes_h) $(symtab_h) $(objfiles_h) $(regcache_h) \
	$(gdb_assert_h) $(gdb_string_h) $(complaints_h) $(libunwind_frame_h)
d2191 1
a2191 1
	$(gdb_string_h) $(gdb_stat_h) $(regcache_h) $(mips_tdep_h)
@


1.262.2.40
log
@2004-01-26  David Carlton  <carlton@@kealia.com>

	* Merge with mainline; tag is carlton_dictionary-20040126-merge.
@
text
@d1 2
a2 3
# Copyright 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997,
# 1998, 1999, 2000, 2001, 2002, 2003, 2004 Free Software Foundation,
# Inc.
d108 4
d198 1
a198 5
	tui-command.o \
	tui-data.o \
	tui-disasm.o \
	tui-file.o tui.o \
	tui-hooks.o \
d200 3
a202 10
	tui-io.o \
	tui-layout.o \
	tui-out.o \
	tui-regs.o \
	tui-source.o \
	tui-stack.o \
	tui-win.o \
	tui-windata.o \
	tui-wingeneral.o \
	tui-winsource.o
d204 1
a204 5
	tui/tui-command.c \
	tui/tui-data.c \
	tui/tui-disasm.c \
	tui/tui-file.c \
	tui/tui-hooks.c \
d206 5
a210 11
	tui/tui-io.c \
	tui/tui-layout.c \
	tui/tui-out.c \
	tui/tui-regs.c \
	tui/tui-source.c \
	tui/tui-stack.c \
	tui/tui-win.c \
	tui/tui-windata.c \
	tui/tui-wingeneral.c \
	tui/tui-winsource.c \
	tui/tui.c
d345 1
a345 1
	$(BFD_CFLAGS) $(INCLUDE_CFLAGS) \
d365 1
d371 1
a371 1
	-lintl -liberty
d375 1
a375 1
	$(LIBIBERTY) $(WIN32LIBS)
d377 1
a377 1
	$(OPCODES) $(INTL_DEPS) $(LIBIBERTY) $(CONFIG_DEPS)
d386 1
a386 1
	$(BFD_CFLAGS) $(INCLUDE_CFLAGS) \
d711 1
a711 1
libunwind_frame_h = libunwind-frame.h $(libunwind_h)
d758 3
a760 2
sparc64_tdep_h = sparc64-tdep.h $(sparc_tdep_h)
sparc_nat_h = sparc-nat.h
d815 12
a826 3
tui_command_h = $(srcdir)/tui/tui-command.h
tui_data_h = $(srcdir)/tui/tui-data.h
tui_disasm_h = $(srcdir)/tui/tui-disasm.h
a828 9
tui_io_h = $(srcdir)/tui/tui-io.h
tui_layout_h = $(srcdir)/tui/tui-layout.h
tui_regs_h = $(srcdir)/tui/tui-regs.h
tui_source_h = $(srcdir)/tui/tui-source.h $(defs_h)
tui_stack_h = $(srcdir)/tui/tui-stack.h
tui_windata_h = $(srcdir)/tui/tui-windata.h
tui_wingeneral_h = $(srcdir)/tui/tui-wingeneral.h
tui_win_h = $(srcdir)/tui/tui-win.h
tui_winsource_h = $(srcdir)/tui/tui-winsource.h
d1117 1
d1271 1
a1271 1
	core-regset.c core-aout.c corelow.c \
d1276 1
a1276 1
	hppah-nat.c hpread.c \
d1310 4
a1313 8
	solib.c solib-irix.c solib-svr4.c solib-sunos.c \
	sparc-linux-tdep.c sparc-nat.c sparc-sol2-nat.c sparc-sol2-tdep.c \
	sparc-tdep.c sparc-sol2-nat.c sparc-sol2-tdep.c sparc64-linux-nat.c \
	sparc64-linux-tdep.c sparc64-nat.c sparc64-sol2-tdep.c \
	sparc64-tdep.c sparc64fbsd-nat.c sparc64fbsd-tdep.c \
	sparc64nbsd-nat.c sparc64nbsd-tdep.c sparc64obsd-tdep.c \
	sparcnbsd-nat.c sparcnbsd-tdep.c sparcobsd-tdep.c \
	sun3-nat.c \
d1573 2
a1577 4
amd64-nat.o: amd64-nat.c $(defs_h) $(gdbarch_h) $(regcache_h) \
	$(gdb_assert_h) $(i386_tdep_h) $(x86_64_tdep_h)
amd64nbsd-nat.o: amd64nbsd-nat.c $(defs_h) $(gdb_assert_h) $(x86_64_tdep_h) \
	$(amd64_nat_h)
d1581 2
d1587 1
a1587 2
	$(gdb_assert_h) $(sim_regno_h) $(osabi_h) $(version_h) \
	$(floatformat_h)
d1589 1
a1589 1
	$(gdb_string_h) $(regcache_h) $(arm_tdep_h) $(gregset_h)
d1592 2
a1593 2
	$(doublest_h) $(solib_svr4_h) $(osabi_h) $(arm_tdep_h) \
	$(glibc_tdep_h)
d1613 2
a1614 2
bcache.o: bcache.c $(defs_h) $(gdb_obstack_h) $(bcache_h) $(gdb_string_h) \
	$(gdb_assert_h)
d1656 2
a1657 2
	$(filenames_h) $(language_h) $(cli_decode_h) $(gdbcmd_h) \
	$(completer_h)
d1664 3
a1666 4
corelow.o: corelow.c $(defs_h) $(arch_utils_h) $(gdb_string_h) $(frame_h) \
	$(inferior_h) $(symtab_h) $(command_h) $(bfd_h) $(target_h) \
	$(gdbcore_h) $(gdbthread_h) $(regcache_h) $(regset_h) $(symfile_h) \
	$(exec_h) $(gdb_assert_h)
d1669 2
d1678 1
a1678 2
	$(objfiles_h) $(frame_h) $(symtab_h) $(block_h) $(complaints_h) \
	$(gdbtypes_h)
d1694 2
a1695 2
	$(gdbtypes_h) $(expression_h) $(value_h) $(valprint_h) $(language_h) \
	$(c_lang_h) $(cp_abi_h) $(target_h)
d1764 2
a1765 1
	$(exec_h) $(gdb_string_h) $(gdbcore_h) $(gdb_stat_h) $(xcoffsolib_h)
d1792 1
a1792 2
	$(gdb_assert_h) $(sim_regno_h) $(gdb_sim_frv_h) \
	$(opcodes_frv_desc_h)
a1811 2
glibc-tdep.o: glibc-tdep.c $(defs_h) $(frame_h) $(symtab_h) $(symfile_h) \
	$(objfiles_h) $(glibc_tdep_h)
d1818 3
a1820 3
	$(gdbtypes_h) $(value_h) $(demangle_h) $(cp_abi_h) $(cp_support_h)
gnu-v3-abi.o: gnu-v3-abi.c $(defs_h) $(value_h) $(cp_abi_h) $(cp_support_h) \
	$(demangle_h) $(gdb_assert_h) $(gdb_string_h)
d1830 1
d1835 2
d1874 3
a1876 3
	$(value_h) $(regcache_h) $(inferior_h) $(osabi_h) $(reggroups_h) \
	$(solib_svr4_h) $(gdb_string_h) $(i386_tdep_h) $(i386_linux_tdep_h) \
	$(glibc_tdep_h)
d1880 3
a1882 3
i386nbsd-tdep.o: i386nbsd-tdep.c $(defs_h) $(arch_utils_h) $(gdbcore_h) \
	$(regcache_h) $(regset_h) $(osabi_h) $(gdb_assert_h) $(gdb_string_h) \
	$(i386_tdep_h) $(i387_tdep_h) $(nbsd_tdep_h) $(solib_svr4_h)
d1888 1
a1888 2
	$(regcache_h) $(regset_h) $(osabi_h) $(gdb_assert_h) $(gdb_string_h) \
	$(i386_tdep_h) $(i387_tdep_h)
d1913 1
a1913 1
ia64-linux-tdep.o: ia64-linux-tdep.c $(defs_h) $(arch_utils_h) $(gdbcore_h)
d1918 1
a1918 2
	$(elf_bfd_h) $(elf_h) $(dis_asm_h) $(libunwind_frame_h) \
	$(libunwind_ia64_h)
d1926 1
a1926 2
	$(parser_defs_h) $(regcache_h) $(reggroups_h) $(block_h) \
	$(gdb_assert_h)
d1949 1
a1949 1
	$(regcache_h) $(gdb_string_h) $(gregset_h) $(mips_tdep_h)
d1966 4
a1969 4
libunwind-frame.o: libunwind-frame.c $(defs_h) $(inferior_h) $(frame_h) \
	$(frame_base_h) $(frame_unwind_h) $(gdbcore_h) $(gdbtypes_h) \
	$(symtab_h) $(objfiles_h) $(regcache_h) $(gdb_assert_h) \
	$(gdb_string_h) $(libunwind_frame_h) $(complaints_h)
d1999 1
a1999 1
	$(dis_asm_h) $(gdb_assert_h)
d2110 1
a2110 1
	$(breakpoint_h) $(block_h) $(dictionary_h)
d2115 2
d2150 1
a2150 1
	$(ppc_tdep_h) $(target_h) $(objfiles_h)
d2214 1
a2214 1
	$(regcache_h) $(gdb_assert_h) $(sim_regno_h) $(arch_utils_h)
d2235 5
a2239 2
remote-vxsparc.o: remote-vxsparc.c $(defs_h) $(regcache_h) $(gdb_string_h) \
	$(sparc_tdep_h) $(vx_share_ptrace_h) $(vx_share_regPacket_h)
d2245 1
a2245 1
	$(ppc_tdep_h) $(exec_h) $(gdb_stat_h)
d2303 1
a2303 1
	$(completer_h) $(filenames_h) $(exec_h) $(solist_h)
d2332 5
a2336 24
	$(sparc_nat_h)
sparc64fbsd-tdep.o: sparc64fbsd-tdep.c $(defs_h) $(frame_h) \
	$(frame_unwind_h) $(gdbcore_h) $(osabi_h) $(regcache_h) $(regset_h) \
	$(target_h) $(trad_frame_h) $(gdb_assert_h) $(gdb_string_h) \
	$(sparc64_tdep_h)
sparc64-linux-nat.o: sparc64-linux-nat.c $(defs_h) $(sparc64_tdep_h) \
	$(sparc_nat_h)
sparc64-linux-tdep.o: sparc64-linux-tdep.c $(defs_h) $(gdbarch_h) $(osabi_h) \
	$(solib_svr4_h) $(sparc64_tdep_h)
sparc64-nat.o: sparc64-nat.c $(defs_h) $(gdbarch_h) $(sparc64_tdep_h) \
	$(sparc_nat_h)
sparc64nbsd-nat.o: sparc64nbsd-nat.c $(defs_h) $(sparc64_tdep_h) \
	$(sparc_nat_h)
sparc64nbsd-tdep.o: sparc64nbsd-tdep.c $(defs_h) $(frame_h) \
	$(frame_unwind_h) $(gdbcore_h) $(osabi_h) $(regcache_h) $(regset_h) \
	$(symtab_h) $(solib_svr4_h) $(trad_frame_h) $(gdb_assert_h) \
	$(gdb_string_h) $(sparc64_tdep_h) $(nbsd_tdep_h)
sparc64obsd-tdep.o: sparc64obsd-tdep.c $(defs_h) $(frame_h) \
	$(frame_unwind_h) $(osabi_h) $(regset_h) $(symtab_h) \
	$(solib_svr4_h) $(trad_frame_h) $(gdb_assert_h) \
	$(sparc64_tdep_h) $(nbsd_tdep_h)
sparc64-sol2-tdep.o: sparc64-sol2-tdep.c $(defs_h) $(frame_h) \
	$(frame_unwind_h) $(gdbarch_h) $(symtab_h) $(objfiles_h) $(osabi_h) \
	$(trad_frame_h) $(gdb_assert_h) $(sparc64_tdep_h)
d2339 13
a2351 23
	$(gdbtypes_h) $(inferior_h) $(symtab_h) $(objfiles_h) $(osabi_h) \
	$(regcache_h) $(target_h) $(value_h) $(gdb_assert_h) $(gdb_string_h) \
	$(sparc64_tdep_h)
sparc-linux-tdep.o: sparc-linux-tdep.c $(defs_h) $(floatformat_h) $(frame_h) \
	$(frame_unwind_h) $(gdbarch_h) $(gdbcore_h) $(osabi_h) $(regcache_h) \
	$(solib_svr4_h) $(symtab_h) $(trad_frame_h) $(gdb_assert_h) \
	$(gdb_string_h) $(sparc_tdep_h)
sparc-nat.o: sparc-nat.c $(defs_h) $(inferior_h) $(regcache_h) \
	$(gdb_string_h) $(gdb_wait_h) $(sparc_tdep_h) $(sparc_nat_h)
sparcnbsd-nat.o: sparcnbsd-nat.c $(defs_h) $(sparc_tdep_h) $(sparc_nat_h)
sparcnbsd-tdep.o: sparcnbsd-tdep.c $(defs_h) $(floatformat_h) $(frame_h) \
	$(frame_unwind_h) $(gdbcore_h) $(osabi_h) $(regcache_h) $(regset_h) \
	$(solib_svr4_h) $(symtab_h) $(trad_frame_h) $(gdb_assert_h) \
	$(gdb_string_h) $(sparc_tdep_h) $(nbsd_tdep_h)
sparcobsd-tdep.o: sparcobsd-tdep.c $(defs_h) $(floatformat_h) $(frame_h) \
	$(frame_unwind_h) $(osabi_h) $(solib_svr4_h) $(symtab_h) \
	$(trad_frame_h) $(gdb_assert_h) $(sparc_tdep_h) $(nbsd_tdep_h)
sparc-sol2-nat.o: sparc-sol2-nat.c $(defs_h) $(regcache_h) $(gregset_h) \
	$(sparc_tdep_h) $(sparc64_tdep_h)
sparc-sol2-tdep.o: sparc-sol2-tdep.c $(defs_h) $(frame_h) $(frame_unwind_h) \
	$(gdbcore_h) $(symtab_h) $(objfiles_h) $(osabi_h) $(regcache_h) \
	$(target_h) $(trad_frame_h) $(gdb_assert_h) $(gdb_string_h) \
	$(sparc_tdep_h)
d2353 4
a2356 5
sparc-tdep.o: sparc-tdep.c $(defs_h) $(arch_utils_h) $(dis_asm_h) \
	$(floatformat_h) $(frame_h) $(frame_base_h) $(frame_unwind_h) \
	$(gdbcore_h) $(gdbtypes_h) $(inferior_h) $(symtab_h) $(objfiles_h) \
	$(osabi_h) $(regcache_h) $(target_h) $(value_h) $(gdb_assert_h) \
	$(gdb_string_h) $(sparc_tdep_h)
d2393 2
a2394 1
	$(gdb_wait_h) $(dcache_h) $(regcache_h) $(gdb_assert_h) $(gdbcore_h)
d2427 1
a2427 1
	$(filenames_h) $(inferior_h)
d2430 2
d2458 2
d2462 2
a2463 2
	$(buildsym_h) $(symfile_h) $(objfiles_h) $(gdb_string_h) \
	$(gdbthread_h) $(gdbcmd_h) $(exec_h) $(i386_tdep_h) $(i387_tdep_h)
d2770 32
d2807 18
a2824 5
tui.o: $(srcdir)/tui/tui.c $(defs_h) $(gdbcmd_h) $(tui_h) $(tui_data_h) \
	$(tui_layout_h) $(tui_io_h) $(tui_regs_h) $(tui_stack_h) \
	$(tui_win_h) $(tui_winsource_h) $(tui_windata_h) $(readline_h) \
	$(target_h) $(frame_h) $(breakpoint_h) $(inferior_h) $(symtab_h) \
	$(source_h)
a2825 11
tui-command.o: $(srcdir)/tui/tui-command.c $(defs_h) $(tui_h) $(tui_data_h) \
	$(tui_win_h) $(tui_io_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tui-command.c
tui-data.o: $(srcdir)/tui/tui-data.c $(defs_h) $(symtab_h) $(tui_h) \
	$(tui_data_h) $(tui_wingeneral_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tui-data.c
tui-disasm.o: $(srcdir)/tui/tui-disasm.c $(defs_h) $(symtab_h) \
	$(breakpoint_h) $(frame_h) $(value_h) $(source_h) $(disasm_h) \
	$(tui_h) $(tui_data_h) $(tui_win_h) $(tui_layout_h) \
	$(tui_winsource_h) $(tui_stack_h) $(tui_file_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tui-disasm.c
d2827 1
a2827 1
	$(tui_io_h) $(tui_h)
d2833 2
a2834 2
	$(tui_data_h) $(tui_layout_h) $(tui_io_h) $(tui_regs_h) $(tui_win_h) \
	$(tui_stack_h) $(tui_windata_h) $(tui_winsource_h)
d2838 2
a2839 1
	$(tui_data_h) $(readline_h) $(tui_win_h) $(tui_h) $(tui_io_h)
a2840 10
tui-io.o: $(srcdir)/tui/tui-io.c $(defs_h) $(terminal_h) $(target_h) \
	$(event_loop_h) $(event_top_h) $(command_h) $(top_h) $(readline_h) \
	$(tui_h) $(tui_data_h) $(tui_io_h) $(tui_command_h) $(tui_win_h) \
	$(tui_wingeneral_h) $(tui_file_h) $(ui_out_h) $(cli_out_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tui-io.c
tui-layout.o: $(srcdir)/tui/tui-layout.c $(defs_h) $(command_h) $(symtab_h) \
	$(frame_h) $(source_h) $(tui_h) $(tui_data_h) $(tui_windata_h) \
	$(tui_wingeneral_h) $(tui_stack_h) $(tui_regs_h) $(tui_win_h) \
	$(tui_winsource_h) $(tui_disasm_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tui-layout.c
a2843 31
tui-regs.o: $(srcdir)/tui/tui-regs.c $(defs_h) $(tui_h) $(tui_data_h) \
	$(symtab_h) $(gdbtypes_h) $(gdbcmd_h) $(frame_h) $(regcache_h) \
	$(inferior_h) $(target_h) $(tui_layout_h) $(tui_win_h) \
	$(tui_windata_h) $(tui_wingeneral_h) $(tui_file_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tui-regs.c
tui-source.o: $(srcdir)/tui/tui-source.c $(defs_h) $(symtab_h) $(frame_h) \
	$(breakpoint_h) $(source_h) $(symtab_h) $(tui_h) $(tui_data_h) \
	$(tui_stack_h) $(tui_winsource_h) $(tui_source_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tui-source.c
tui-stack.o: $(srcdir)/tui/tui-stack.c $(defs_h) $(symtab_h) $(breakpoint_h) \
	$(frame_h) $(command_h) $(inferior_h) $(target_h) $(top_h) $(tui_h) \
	$(tui_data_h) $(tui_stack_h) $(tui_wingeneral_h) $(tui_source_h) \
	$(tui_winsource_h) $(tui_file_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tui-stack.c
tui-win.o: $(srcdir)/tui/tui-win.c $(defs_h) $(command_h) $(symtab_h) \
	$(breakpoint_h) $(frame_h) $(cli_cmds_h) $(top_h) $(source_h) \
	$(tui_h) $(tui_data_h) $(tui_wingeneral_h) $(tui_stack_h) \
	$(tui_regs_h) $(tui_disasm_h) $(tui_source_h) $(tui_winsource_h) \
	$(tui_windata_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tui-win.c
tui-windata.o: $(srcdir)/tui/tui-windata.c $(defs_h) $(tui_h) $(tui_data_h) \
	$(tui_wingeneral_h) $(tui_regs_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tui-windata.c
tui-wingeneral.o: $(srcdir)/tui/tui-wingeneral.c $(defs_h) $(tui_h) \
	$(tui_data_h) $(tui_wingeneral_h) $(tui_win_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tui-wingeneral.c
tui-winsource.o: $(srcdir)/tui/tui-winsource.c $(defs_h) $(symtab_h) \
	$(frame_h) $(breakpoint_h) $(value_h) $(source_h) $(tui_h) \
	$(tui_data_h) $(tui_stack_h) $(tui_win_h) $(tui_wingeneral_h) \
	$(tui_winsource_h) $(tui_source_h) $(tui_disasm_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tui-winsource.c
@


1.261
log
@Add support for distinct host and target character sets.
@
text
@d1553 1
a1553 1
	$(cli_script_h) $(gdb_events_h)
d1835 1
a1835 1
	$(cp_abi_h)
d1880 1
a1880 1
	$(frame_h) $(inferior_h)
d2105 1
a2105 1
	$(scm_tags_h) $(gdb_string_h) $(gdbcore_h)
d2190 1
a2190 1
	$(annotate_h) $(ui_out_h)
d2201 1
a2201 1
	$(completer_h) $(bcache_h) $(gdb_string_h) $(gdb_stat_h)
d2214 1
a2214 1
	$(cp_abi_h)
d2315 2
a2316 1
	$(cli_setshow_h) $(cli_cmds_h)
@


1.260
log
@2002-09-18  Andrew Cagney  <ac131313@@redhat.com>

	* complaints.h: Update copyright.
	(struct complaints): Declare.
	(struct complaint): Make `message' constant.
	(internal_complaint): Declare.
	(complaint): Declare.
	(complaint_root): Delete declaration.
	(symfile_complaints): Delete declaration.
	(struct complaints): Add opaque declaration.
	(clear_complaints): Add a complaints parameter.
	* complaints.c: Update copyright.
	(enum complaint_series): Define.
	(complaint_root): Delete.
	(struct complaints): Define.
	(complaint_sentinel, symfile_complaint_book): New variables.
	(symfile_explanations, symfile_complaints): New variables.
	New variables.
	(get_complaints): New function.
	(vcomplaint): New function.
	(complaint): New function.
	(internal_complaint): New function.
	(complain): Call vcomplain with symfile_complaint.
	(clear_complaints): Rewrite.
	(_initialize_complaints): Use add_setshow_command.
	* Makefile.in (complaints.o): Update dependencies.
	* symfile.c (syms_from_objfile): Add symfile_complaints parameter
	to call to clear_complaints.
	(new_symfile_objfile, reread_symbols): Ditto.
	(oldsyms_complaint): Delete.
	(empty_symtab_complaint, unknown_option_complaint): Delete.
	(free_named_symtabs): Use complaint instead of complain.
@
text
@d141 3
d375 1
d533 1
d775 2
d828 1
d1450 1
d2590 4
@


1.259
log
@        * osfsolib.c: Remove file, replaced by solib-osf.c.
        * Makefile.in: Remove compilation rules for osfsolib.c.
@
text
@d1575 2
a1576 1
complaints.o: complaints.c $(defs_h) $(complaints_h) $(gdbcmd_h)
@


1.258
log
@        * gdbtypes.c (check_stub_method): Make static.
        (check_stub_method_group): New function.
        * gdbtypes.h: Update prototypes.
        * cp-support.c: New file.
        * cp-support.h: New file.

        * stabsread.c: Include "cp-abi.h" and "cp-support.h".
        (update_method_name_from_physname): New function.
        (read_member_functions): Correct method names for operators
        and v3 constructors/destructors.  Separate v2 constructors and
        destructors.
        * Makefile.in (stabsread.o): Update dependencies.
        (SFILES): Add cp-support.c.
        (COMMON_OBS): Add cp-support.o.
        (cp_support_h, cp-support.o): Add.

        * cp-valprint.c (cp_print_class_method): Call
        check_stub_method_group instead of check_stub_method.  Remove
        extraneous QUITs.
        * p-valprint.c (pascal_object_print_class_method): Likewise.
        * valops.c (search_struct_method): Likewise.
        (find_method_list, value_struct_elt_for_reference): Likewise.
@
text
@a1950 3
osfsolib.o: osfsolib.c $(defs_h) $(gdb_string_h) $(symtab_h) $(bfd_h) \
	$(symfile_h) $(objfiles_h) $(gdbcore_h) $(command_h) $(target_h) \
	$(frame_h) $(gdb_regex_h) $(inferior_h) $(language_h) $(gdbcmd_h)
@


1.257
log
@* Makefile.in (i386nbsd-tdep.o): Add $(solib_svr4_h) to
dependency list.
* i386nbsd-tdep.c (i386nbsdelf_init_abi): Set
solib_svr4_fetch_link_map_offsets to
nbsd_ilp32_solib_svr4_fetch_link_map_offsets.
* config/i386/nbsd.mt (TDEPFILES): Add solib.o and solib-svr4.o.
* config/i386/nbsdaout.mh (NATDEPFILES): Remove solib.o.
* config/i386/nbsdelf.mh (NATDEPFILES): Remove solib.o,
solib-svr4.o, and solib-legacy.o.
* config/i386/tm-nbsd.h: Include solib.h.
@
text
@d561 1
a561 1
	gnu-v2-abi.c gnu-v3-abi.c hpacc-abi.c cp-abi.c
d629 1
d846 1
a846 1
	gnu-v2-abi.o gnu-v3-abi.o hpacc-abi.o cp-abi.o
d1592 1
d2179 1
a2179 1
	$(doublest_h) $(stabsread_h)
@


1.257.2.1
log
@2002-09-28  Andrew Cagney  <ac131313@@redhat.com>

	Import from mainline:

	From Grace Sainsbury <graces@@redhat.com>:
	* Makefile.in (gdbtk-main.o): New target.
	(gdb.o): New target.
	(main_h): Define.
	(main.o): Update dependencies.
	(gdb$(EXEEXT)): Add gdb.o.
	(SUBDIR_GDBTK_SRCS): Add gdbtk-main.c.
	(SUBDIR_GDBTK_ALL, SUBDIR_GDBTK_UNINSTALL): Set.
	(SUBDIR_GDBTK_CLEAN): Set.
	(install-gdbtk): Install the insight binary.
	(uninstall-gdbtk): New target.
	(all-gdbtk, clean-gdbtk): New rule.
	* top.c (use_windows): Default to zero.
	* main.c: Include "main.h".
	(main): Delete.
	(struct captured_main_args): Delete.
	(gdb_main): New function.
	* main.h: New file.
	* gdb.c: New File.

Index: gdbtk/ChangeLog
2002-09-26  Andrew Cagney  <ac131313@@redhat.com>

	Import from mainline:

	From Grace Sainsbury <graces@@redhat.com>:
	* generic/gdbtk-main.c: New file.

Index: testsuite/gdb.gdbtk/ChangeLog
2002-09-28  Andrew Cagney  <ac131313@@redhat.com>

	Import from mainline:
	2002-09-26  Keith Seitz  <keiths@@redhat.com>
        * lib/insight-support.exp (gdbtk_start): Figure out where
        the insight executable is based on where gdb is. Use this
        executable to start insight instead of gdb.
@
text
@d290 1
a290 2
	gdbtk/generic/gdbtk-varobj.c gdbtk/generic/gdbtk-wrapper.c \
	gdbtk/generic/gdbtk-main.c
d296 2
a297 2
SUBDIR_GDBTK_ALL= all-gdbtk
SUBDIR_GDBTK_CLEAN= clean-gdbtk
d299 1
a299 1
SUBDIR_GDBTK_UNINSTALL= uninstall-gdbtk
a675 1
main_h = main.h
d923 1
d926 16
d1011 1
a1011 1
gdb$(EXEEXT): gdb.o main.o libgdb.a $(CONFIG_OBS) $(ADD_DEPS) $(CDEPS) $(TDEPLIBS)
d1013 3
a1015 3
	$(HLDENV) $(CC_LD) $(INTERNAL_LDFLAGS) $(WIN32LDAPP) \
		-o gdb$(EXEEXT) gdb.o main.o $(CONFIG_OBS) libgdb.a \
		$(TDEPLIBS) $(TUI_LIBRARY) $(CLIBS) $(LOADLIBES)
a1680 1
gdb.o: gdb.c $(defs_h) $(main_h) $(gdb_string_h)
d1874 1
a1874 1
	$(event_loop_h) $(ui_out_h) $(main_h)
a2332 49
all-gdbtk: insight$(EXEEXT)

install-gdbtk:
	transformed_name=`t='$(program_transform_name)'; \
		  echo insight | sed -e $$t` ; \
	if test "x$$transformed_name" = x; then \
	  transformed_name=insight ; \
	else \
	  true ; \
	fi ; \
	$(SHELL) $(srcdir)/../mkinstalldirs $(bindir)
	$(INSTALL_PROGRAM) insight$(EXEEXT) $(bindir)/$$transformed_name$(EXEEXT) ; \
	$(SHELL) $(srcdir)/../mkinstalldirs $(GDBTK_LIBRARY) ; \
	$(SHELL) $(srcdir)/../mkinstalldirs $(libdir)/insight$(GDBTK_VERSION) ; \
	$(INSTALL_DATA) $(srcdir)/gdbtk/plugins/plugins.tcl $(libdir)/insight$(GDBTK_VERSION)/plugins.tcl ; \
	$(SHELL) $(srcdir)/../mkinstalldirs \
		$(GDBTK_LIBRARY)/images \
		$(GDBTK_LIBRARY)/images2 ; \
	$(SHELL) $(srcdir)/../mkinstalldirs $(GDBTK_LIBRARY)/help \
		$(GDBTK_LIBRARY)/help/images \
		$(GDBTK_LIBRARY)/help/trace ; \
	cd $(srcdir)/gdbtk/library ; \
	for i in *.tcl *.itcl *.ith *.itb images/*.gif images2/*.gif images/icons.txt images2/icons.txt tclIndex help/*.html  help/trace/*.html help/trace/index.toc help/images/*.gif; \
	  do \
		$(INSTALL_DATA) $$i $(GDBTK_LIBRARY)/$$i ; \
	  done ;

uninstall-gdbtk:
	transformed_name=`t='$(program_transform_name)'; \
		  echo insight | sed -e $$t` ; \
	if test "x$$transformed_name" = x; then \
		transformed_name=insight ; \
	else \
		true ; \
	fi ; \
	rm -f $(bindir)/$$transformed_name$(EXEEXT) ; \
	rm -rf $(GDBTK_LIBRARY)

clean-gdbtk:
	rm -f insight$(EXEEXT)

# Removing the old gdb first works better if it is running, at least on SunOS.
insight$(EXEEXT): gdbtk-main.o main.o libgdb.a $(CONFIG_OBS) $(ADD_DEPS) \
		$(CDEPS) $(TDEPLIBS)
	rm -f insight$(EXEEXT)
	$(HLDENV) $(CC_LD) $(INTERNAL_LDFLAGS) $(WIN32LDAPP) \
		-o insight$(EXEEXT) gdbtk-main.o main.o libgdb.a $(CONFIG_OBS)\
		$(TDEPLIBS) $(TUI_LIBRARY) $(CLIBS) $(LOADLIBES)

a2374 6

gdbtk-main.o: $(srcdir)/gdbtk/generic/gdbtk-main.c $(defs_h) $(main_h) \
	$(gdb_string_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(IDE_CFLAGS) $(ITCL_CFLAGS) $(TIX_CFLAGS) \
	$(TCL_CFLAGS) $(TK_CFLAGS) $(X11_CFLAGS) $(GDBTK_CFLAGS)\
		$(srcdir)/gdbtk/generic/gdbtk-main.c -DGDBTK_LIBRARY=\"$(GDBTK_LIBRARY)\"
@


1.257.2.2
log
@* Makefile.in (install-gdbtk): Add missing continuation backslash to insure
that shell variables, such as "transformed_name" are propagated to later shell
statements in rule.
@
text
@d2329 1
a2329 1
	$(SHELL) $(srcdir)/../mkinstalldirs $(bindir); \
@


1.257.2.3
log
@* Makefile.in (i386v-nat.o): Add $(i386_tdep_h).
@
text
@d1748 1
a1748 1
	$(gdbcore_h) $(gdb_stat_h) $(floatformat_h) $(target_h) $(i386_tdep_h)
@


1.257.2.4
log
@2002-11-08  Andrew Cagney  <ac131313@@redhat.com>

	* Makefile.in (DESTDIR): Define.
	(install-only, install-gdbtk, uninstall-gdbtk): Add $(DESTDIR)
	prefix.
@
text
@a57 2
DESTDIR =

d911 3
a913 6
		$(INSTALL_PROGRAM) gdb$(EXEEXT) \
			$(DESTDIR)$(bindir)/$$transformed_name$(EXEEXT) ; \
		$(srcdir)/../mkinstalldirs \
			$(DESTDIR)$(man1dir) ; \
		$(INSTALL_DATA) $(srcdir)/gdb.1 \
			$(DESTDIR)$(man1dir)/$$transformed_name.1
d2330 4
a2333 11
	$(INSTALL_PROGRAM) insight$(EXEEXT) \
		$(DESTDIR)$(bindir)/$$transformed_name$(EXEEXT) ; \
	$(SHELL) $(srcdir)/../mkinstalldirs \
		$(DESTDIR)$(GDBTK_LIBRARY) ; \
	$(SHELL) $(srcdir)/../mkinstalldirs \
		$(DESTDIR)$(libdir)/insight$(GDBTK_VERSION) ; \
	$(INSTALL_DATA) $(srcdir)/gdbtk/plugins/plugins.tcl \
		$(DESTDIR)$(libdir)/insight$(GDBTK_VERSION)/plugins.tcl ; \
	$(SHELL) $(srcdir)/../mkinstalldirs \
		$(DESTDIR)$(GDBTK_LIBRARY)/images \
		$(DESTDIR)$(GDBTK_LIBRARY)/images2 ; \
d2335 5
a2339 3
		$(DESTDIR)$(GDBTK_LIBRARY)/help \
		$(DESTDIR)$(GDBTK_LIBRARY)/help/images \
		$(DESTDIR)$(GDBTK_LIBRARY)/help/trace ; \
d2343 1
a2343 1
		$(INSTALL_DATA) $$i $(DESTDIR)$(GDBTK_LIBRARY)/$$i ; \
d2354 2
a2355 2
	rm -f $(DESTDIR)$(bindir)/$$transformed_name$(EXEEXT) ; \
	rm -rf $(DESTDIR)$(GDBTK_LIBRARY)
@


1.257.2.5
log
@2002-11-25  Andrew Cagney  <cagney@@redhat.com>

	* ns32k-tdep.c: Include "gdb_string.h".
	* mcore-tdep.c, cris-tdep.c, vax-tdep.c: Ditto.
	* sh3-rom.c, ppc-sysv-tdep.c, ns32knbsd-tdep.c: Ditto.
	* Makefile.in (sh3-rom.o): Update dependencies.
	(ppc-sysv-tdep.o, ns32k-tdep.o, mcore-tdep.o): Ditto.
	(cris-tdep.o): Ditto.
@
text
@d1590 1
a1590 1
	$(solib_h) $(solib_svr4_h) $(gdb_string_h)
d1873 1
a1873 1
	$(arch_utils_h) $(gdb_string_h)
d1926 1
a1926 1
	$(ns32k_tdep_h) $(gdb_string_h)
d1929 1
a1929 1
ns32knbsd-tdep.o: ns32knbsd-tdep.c $(defs_h) $(ns32k_tdep_h) $(gdb_string_h)
d1971 1
a1971 1
	$(regcache_h) $(value_h) $(ppc_tdep_h) $(gdb_string_h)
d2106 1
a2106 2
	$(serial_h) $(srec_h) $(arch_utils_h) $(regcache_h) $(sh_tdep_h) \
	$(gdb_string_h)
d2254 1
a2254 1
	$(vax_tdep_h) $(gdb_string_h)
@


1.256
log
@* Makefile.in (i386nbsd-tdep.o): Add $(arch_utils_h),
$(i386_tdep_h), and nbsd-tdep.h to dependency list.
* i386-tdep.h (i386bsd_init_abi): New prototype.
* i386bsd-tdep.c (i386bsd_init_abi): Remove "static" from
function declaration.
(_initialize_i386bsd_tdep): Don't register OS ABI handlers
for NetBSD-a.out or NetBSD-ELF.
(i386nbsd_sigtramp_start, i386nbsd_sigtramp_end)
(i386nbsd_sc_pc_offset, i386nbsd_sc_sp_offset)
(i386nbsd_init_abi, i386nbsdelf_init_abi): Move to...
* i386nbsd-tdep.c: ...here.  Include arch-utils.h, i386-tdep.h,
and nbsd-tdep.h.
(i386nbsd_pc_in_sigtramp): New function.
(i386nbsd_init_abi): Set gdbarch_pc_in_sigtramp to
i386nbsd_pc_in_sigtramp.
(_initialize_i386nbsd_tdep): Register i386nbsd_init_abi
and i386nbsdelf_init_abi OS ABI handlers.
* config/i386/nbsdaout.mt (TDEPFILES): Add nbsd-tdep.o.
* config/i386/nbsdelf.mt (TDEPFILES): Likewise.
@
text
@d1759 1
a1759 1
	$(nbsd_tdep_h)
@


1.255
log
@* Makefile.in (mipsnbsd-tdep.o): Use $(nbsd_tdep_h) rather
than nbsd-tdep.h.
@
text
@d1758 2
a1759 1
	$(regcache_h) $(i387_tdep_h)
@


1.254
log
@* Makefile.in (alphanbsd-tdep.o): Add $(frame_h) to dependency
list.
* alphanbsd-tdep.c (alphanbsd_sigcontext_addr)
(alphanbsd_skip_sigtramp_frame): New functions.
(alphanbsd_init_abi): Set tdep->skip_sigtramp_frame to
alphanbsd_skip_sigtramp_frame.  Set tdep->sigcontext_addr
to alphanbsd_sigcontext_addr.
@
text
@d1909 1
a1909 1
	nbsd-tdep.h
@


1.253
log
@* Makefile.in (mipsnbsd-tdep.o): Add nbsd-tdep.h to dependency
list.
(nbsd-tdep.o): Add $(gdb_string_h) to dependency list.
* alphanbsd-tdep.c (alphanbsd_pc_in_sigtramp): Use
nbsd_pc_in_sigtramp.
* mipsnbsd-tdep.c: Include nbsd-tdep.h.
(mipsnbsd_pc_in_sigtramp): Use nbsd_pc_in_sigtramp.
* nbsd-tdep.c: Include gdb_string.h.
(nbsd_pc_in_sigtramp): New function.
* nbsd-tdep.h (nbsd_pc_in_sigtramp): New prototype.
* ppcnbsd-tdep.c (ppcnbsd_pc_in_sigtramp): New function.
(ppcnbsd_init_abi): Set gdbarch_pc_in_sigtramp to
ppcnbsd_pc_in_sigtramp.
* shnbsd-tdep.c (shnbsd_pc_in_sigtramp): New function.
(shnbsd_init_abi): Set gdbarch_pc_in_sigtramp to
shnbsd_pc_in_sigtramp.
* sparcnbsd-tdep.c (sparcnbsd_init_abi_elf): Set
gdbarch_pc_in_sigtramp to nbsd_pc_in_sigtramp.
* config/mips/nbsd.mt (TDEPFILES): Add nbsd-tdep.o.
@
text
@d1503 3
a1505 3
alphanbsd-tdep.o: alphanbsd-tdep.c $(defs_h) $(gdbcore_h) $(regcache_h) \
	$(value_h) $(solib_svr4_h) $(alpha_tdep_h) $(alphabsd_tdep_h) \
	$(nbsd_tdep_h)
@


1.252
log
@Update all .c dependencies.
@
text
@d1908 2
a1909 1
	$(target_h) $(value_h) $(osabi_h) $(mipsnbsd_tdep_h) $(solib_svr4_h)
d1928 1
a1928 1
nbsd-tdep.o: nbsd-tdep.c $(defs_h) $(solib_svr4_h)
@


1.251
log
@	* Makefile.in (osabi.o, i387-tdep.o, i386-linux-nat.o, lin-lwp.o,
	ax-gdb.o, signals.o, jv-valprint.o, c-valprint.o, cp-abi.o):
	Update dependencies.
	* i387-tdep.c: Include gdb_string.h.
	* osabi.c: Likewise.
	* i386-linux-nat.c: Likewise.
	* lin-lwp.c: Likewise.
	* ax-gdb.c: Likewise.
	* signals/signals.c: Likewise.
	* jv-valprint.c: Likewise.
	* p-lang.c: Likewise.
	* c-valprint.c: Likewise.
	* cp-abi.c: Likewise.
@
text
@d1464 1
d1466 1
d1468 30
a1497 25
a68v-nat.o: a68v-nat.c $(defs_h) $(gdbcore_h) $(inferior_h) \
	$(regcache_h)

aix-thread.o: aix-thread.c $(defs_h) $(gdbcore_h) $(gdbthread_h) \
	$(inferior_h) $(target_h) $(regcache_h) $(gdbcmd_h) $(gdb_assert_h) \
	$(ppc_tdep_h) $(language_h)

ada-lang.o: ada-lang.c ada-lang.h c-lang.h $(defs_h) $(expression_h) \
	$(gdbtypes_h) $(inferior_h) language.h parser-defs.h $(symtab_h) \
	$(gdbcmd_h) $(ui_out_h) symfile.h objfiles.h $(gdbcore_h)

ada-tasks.o: ada-tasks.c ada-lang.h $(defs_h) language.h $(value_h) \
	$(command_h) $(value_h) $(gdbcore_h)

ada-typeprint.o: ada-typeprint.c ada-lang.h $(defs_h) $(expression_h) \
	$(gdbcmd_h) $(gdbcore_h) $(gdbtypes_h) language.h $(symtab_h) \
	target.h typeprint.h $(value_h) ada-lang.h

ada-valprint.o: ada-valprint.c $(defs_h) $(expression_h) $(gdbtypes_h) \
	language.h $(symtab_h) valprint.h $(value_h) c-lang.h ada-lang.h \
	annotate.h

alpha-nat.o: alpha-nat.c $(defs_h) $(gdbcore_h) $(inferior_h) $(target_h) \
	$(regcache_h) $(alpha_tdep_h)

d1499 3
a1501 12
	$(alpha_tdep_h) alphabsd-tdep.h

alpha-tdep.o: alpha-tdep.c $(defs_h) $(gdbcmd_h) $(gdbcore_h) \
	$(inferior_h) $(symtab_h) $(dis_asm_h) $(gdb_string_h) $(linespec_h) \
	$(regcache_h) $(doublest_h) $(BFD_SRC)/elf-bfd.h $(alpha_tdep_h)

alpha-linux-tdep.o: alpha-linux-tdep.c $(defs_h) $(value_h) $(alpha_tdep_h)

alpha-osf1-tdep.o: alpha-osf1-tdep.c $(defs_h) $(value_h) $(alpha_tdep_h)

alphabsd-tdep.o: alphabsd-tdep.c $(defs_h) $(regcache_h) alphabsd-tdep.h

a1502 1

d1504 10
a1513 4
	$(value_h) $(alpha_tdep_h) solib-svr4.h alphabsd-tdep.h nbsd-tdep.h

annotate.o: annotate.c $(defs_h) $(annotate_h) $(value_h) $(target_h) $(gdbtypes_h)

d1515 1
a1515 2
	$(gdb_string_h) $(regcache_h) $(arm_tdep_h)

d1517 2
a1518 2
	$(gdbtypes_h) $(floatformat_h) $(regcache_h) $(doublest_h) $(arm_tdep_h)

d1520 4
a1523 5
	$(gdbcore_h) $(gdb_string_h) $(dis_asm_h) $(regcache_h) $(doublest_h) \
	$(value_h) $(arch_utils_h) $(solib_svr4_h) $(arm_tdep_h) \
	$(BFD_SRC)/elf-bfd.h $(INCLUDE_DIR)/coff/internal.h \
	$(INCLUDE_DIR)/elf/arm.h $(sim_arm_h) $(gdb_assert_h)

d1526 2
a1527 4

armnbsd-tdep.o: armnbsd-tdep.c $(defs_h) $(arm_tdep_h) solib-svr4.h \
	nbsd-tdep.h

d1530 4
a1533 1

d1535 9
a1543 9

blockframe.o: blockframe.c $(defs_h) $(gdbcore_h) $(inferior_h) \
	$(objfiles_h) $(symfile_h) $(target_h) $(regcache_h)

breakpoint.o: breakpoint.c $(defs_h) $(gdbcmd_h) $(gdbcore_h) \
	$(inferior_h) $(language_h) $(target_h) $(gdbthread_h) \
	$(gdb_string_h) $(gdb_events_h) $(linespec_h) $(ui_out_h) \
	$(completer_h) $(gdb_h) $(cli_script_h)

d1547 7
a1553 9
	$(filenames_h) $(macrotab_h) $(demangle_h) $(buildsym_h) $(stabsread_h)

builtin-regs.o: builtin-regs.c $(defs.h) $(builtin_regs_h) $(gdbtypes_h) \
	$(gdb_string_h) $(value_h) $(frame_h)

c-lang.o: c-lang.c $(c_lang_h) $(defs_h) $(expression_h) $(gdbtypes_h) \
	$(language_h) $(parser_defs_h) $(symtab_h) $(macroscope_h) \
	gdb_assert.h

d1558 11
a1568 34

c-valprint.o: c-valprint.c $(defs_h) $(expression_h) $(gdbtypes_h) \
	$(language_h) $(symtab_h) $(valprint_h) $(value_h) $(cp_abi_h) \
	$(gdb_string_h)

doublest.o: doublest.c $(defs_h) $(doublest_h) $(floatformat_h) $(gdbtypes_h) \
	$(gdb_assert_h) $(gdb_string_h)

f-lang.o: f-lang.c f-lang.h $(defs_h) $(expression_h) $(gdbtypes_h) \
	$(language_h) $(parser_defs_h) $(symtab_h) $(gdb_string_h)

f-typeprint.o: f-typeprint.c $(defs_h) $(gdb_obstack_h) $(bfd_h) $(symtab_h) \
	$(gdbtypes_h) $(expression_h) $(value_h) $(gdbcore_h) $(target_h) \
	$(f_lang_h) $(gdb_string_h)

f-valprint.o: f-valprint.c $(defs_h) $(expression_h) $(gdbtypes_h) \
	$(language_h) $(symtab_h) $(valprint_h) $(value_h) $(gdb_string_h)

# OBSOLETE ch-exp.o: ch-exp.c ch-lang.h $(defs_h) $(language_h) $(parser_defs_h) \
# OBSOLETE 	$(bfd_h) $(symfile_h) $(objfiles_h) $(value_h)

# OBSOLETE ch-lang.o: ch-lang.c ch-lang.h $(defs_h) $(expression_h) $(gdbtypes_h) \
# OBSOLETE 	$(language_h) $(parser_defs_h) $(symtab_h)

# OBSOLETE ch-typeprint.o: ch-typeprint.c $(defs_h) $(gdb_obstack_h) $(bfd_h) \
# OBSOLETE 	$(symtab_h) $(gdbtypes_h) $(expression_h) $(value_h) $(gdbcore_h) \
# OBSOLETE 	$(target_h) $(language_h) $(ch_lang_h) $(typeprint_h) $(gdb_string_h)

# OBSOLETE ch-valprint.o: ch-valprint.c $(defs_h) $(gdb_obstack_h) $(symtab_h) \
# OBSOLETE 	$(gdbtypes_h) $(valprint_h) $(expression_h) $(value_h) $(language_h) \
# OBSOLETE 	$(demangle_h) $(c_lang_h) $(typeprint_h) $(ch_lang_h) $(annotate_h)

coff-solib.o: coff-solib.c $(defs_h)

d1574 16
a1589 29

complaints.o: complaints.c $(complaints_h) $(defs_h) $(gdbcmd_h)

# Provide explicit rule/dependency - works for more makes.
copying.o: $(srcdir)/copying.c $(defs_h) $(gdbcmd_h)

core-aout.o: core-aout.c $(defs_h) $(gdbcore_h) $(value_h) $(inferior_h) \
	$(regcache_h)

core-sol2.o: core-sol2.c $(command_h) $(defs_h) $(gdbcore_h) \
	$(inferior_h) $(target_h) $(gdb_string_h) $(regcache_h)

core-regset.o: core-regset.c $(command_h) $(defs_h) $(gdbcore_h) \
	$(inferior_h) $(target_h) $(gdb_string_h)

corefile.o: corefile.c $(dis_asm_h) $(defs_h) $(gdbcmd_h) $(gdbcore_h) \
	$(inferior_h) $(target_h) $(language_h) $(gdb_string_h) \
	$(completer_h) $(symfile_h)

corelow.o: corelow.c $(command_h) $(defs_h) $(gdbcore_h) $(inferior_h) \
	$(target_h) $(gdbthread_h) $(gdb_string_h) $(regcache_h)

gcore.o: gcore.c $(defs_h) $(cli_decode_h) $(inferior_h) $(gdbcore_h) \
	$(elf_bfd_h) $(symfile_h) $(objfiles_h)

linux-proc.o: linux-proc.c $(defs_h) $(inferior_h) $(regcache_h) $(gregset_h) \
	$(gdbcore_h) $(gdbthread_h) $(elf_bfd_h) $(cli_decode_h) \
	$(gdb_string_h)

a1590 1

d1595 7
a1601 4

dcache.o: dcache.c $(dcache_h) $(defs_h) $(gdbcmd_h) $(gdb_string_h) \
	$(gdbcore_h) $(target_h)

d1604 9
a1612 6
	$(dis_asm_h) $(symfile_h) $(objfiles_h) $(language_h) $(arch_utils_h) \
	$(regcache_h) $(floatformat_h) $(sim_d10v_h) $(sim_regno_h)

dbxread.o: dbxread.c $(defs_h) $(gdb_string_h) $(gdb_obstack_h) $(gdb_stat_h) \
	$(symtab_h) $(breakpoint_h) $(target_h) $(gdbcore_h) $(libaout_h) \
	$(symfile_h) $(objfiles_h) $(buildsym_h) $(stabsread_h) \
d1615 2
a1616 1

d1618 6
a1623 7

demangle.o: demangle.c $(defs_h) $(gdbcmd_h) $(gdb_string_h)

dink32-rom.o: dink32-rom.c $(monitor_h) $(bfd_h) $(gdb_wait_h) $(defs_h) \
	$(gdbcmd_h) $(inferior_h) $(target_h) $(serial_h) $(terminal_h) \
	$(symfile_h) $(regcache_h)

d1625 50
a1674 47

# OBSOLETE dstread.o: dstread.c $(defs_h) $(symtab_h) $(gdbtypes_h) $(breakpoint_h) \
# OBSOLETE 	$(bfd_h) $(symfile_h) $(objfiles_h) $(buildsym_h) $(gdb_obstack_h) \
# OBSOLETE 	$(gdb_string_h) $(dst_h)

dwarf2cfi.o: dwarf2cfi.c $(defs_h) $(symtab_h) $(symfile_h) $(objfiles_h) \
	$(target_h) $(inferior_h) $(regcache_h) $(dwarf2cfi_h)

dwarfread.o: dwarfread.c $(bfd_h) $(buildsym_h) $(complaints_h) $(defs_h) \
	$(expression_h) $(gdbtypes_h) $(language_h) $(objfiles_h) \
	$(symfile_h) $(symtab_h) $(gdb_string_h)

dwarf2read.o: dwarf2read.c $(bfd_h) $(buildsym_h) $(defs_h) \
	$(expression_h) $(gdbtypes_h) $(language_h) $(objfiles_h) \
	$(symfile_h) $(symtab_h) $(gdb_string_h) $(macrotab_h)

elfread.o: elfread.c $(bfd_h) $(buildsym_h) $(complaints_h) $(defs_h) \
	$(gdb_stabs_h) $(objfiles_h) $(symfile_h) $(symtab_h) $(gdb_string_h) \
	$(BFD_SRC)/elf-bfd.h $(INCLUDE_DIR)/elf/mips.h

environ.o: environ.c $(defs_h) environ.h $(gdbcore_h) $(gdb_string_h)

eval.o: eval.c $(bfd_h) $(defs_h) $(expression_h) $(frame_h) \
	$(gdbtypes_h) $(language_h) $(symtab_h) $(target_h) $(value_h) \
	$(gdb_string_h) $(cp_abi_h)

event-loop.o: event-loop.c $(defs_h) $(top_h) $(event_loop_h) $(event_top_h)

event-top.o: event-top.c $(top_h) $(readline_headers) \
      $(defs_h) $(inferior_h) $(event_loop_h) $(event_top_h) $(terminal_h) \
	$(gdbcmd_h) $(target_h) $(cli_decode_h)

inf-loop.o: inf-loop.c $(defs_h) $(inferior_h) $(inf_loop_h) $(event_loop_h) \
	 $(event_top_h)

exec.o: exec.c $(defs_h) $(gdbcmd_h) $(gdbcore_h) $(inferior_h) \
	$(target_h) $(language_h) $(gdb_string_h) $(completer_h) $(value_h)

expprint.o: expprint.c $(defs_h) $(expression_h) $(gdbtypes_h) \
	$(language_h) $(parser_defs_h) $(symtab_h) $(value_h)

fbsd-proc.o: fbsd-proc.c $(defs_h) $(gdbcore_h) $(inferior_h) $(gdb_string_h) \
	$(elf_bfd_h) $(gregset_h)

findvar.o: findvar.c $(defs_h) $(gdbcore_h) $(inferior_h) $(target_h) \
	$(gdb_string_h) $(regcache_h) $(builtin_regs_h)

d1676 1
a1676 2
	$(regcache_h)

d1679 3
a1681 20

regcache.o: regcache.c $(defs_h) $(inferior_h) $(target_h) $(gdbarch_h) \
	$(gdbcmd_h) $(regcache_h) $(gdb_assert_h) $(gdb_string_h) $(gdbcmd_h)

fork-child.o: fork-child.c $(gdb_wait_h) $(defs_h) $(gdbcore_h) \
	$(inferior_h) $(target_h) $(terminal_h) $(gdbthread_h) $(gdb_string_h)

v850ice.o: v850ice.c $(defs_h) $(symtab_h) $(inferior_h) $(command_h) \
	$(frame_h) $(breakpoint_h) $(gdbcore_h) $(value_h) $(symfile_h) \
	$(gdb_string_h) $(target_h) $(objfiles_h) $(regcache_h)

v850-tdep.o: v850-tdep.c $(defs_h) $(frame_h) $(inferior_h) $(target_h) \
	$(value_h) $(bfd_h) $(gdb_string_h) $(gdbcore_h) $(symfile_h) \
	$(arch_utils_h) $(regcache_h) $(symtab_h)

tracepoint.o: tracepoint.c $(defs_h) $(symtab_h) $(frame_h) $(tracepoint_h) \
	$(gdbtypes_h) $(expression_h) $(gdbcmd_h) $(value_h) $(target_h) \
	$(language_h) $(gdb_string_h) $(readline_headers) $(remote_h) \
	$(linespec_h) $(regcache_h) $(completer_h)

d1687 9
a1695 19

arch-utils.o: arch-utils.c $(defs_h) $(bfd_h) $(gdbcmd_h) \
	$(arch_utils_h) $(gdb_assert_h) $(inferior_h) \
	$(gdb_string_h) $(symtab.h) $(frame_h) $(breakpoint_h) $(gdb_wait_h) \
	$(gdbcore_h) $(target_h) $(annotate_h) $(regcache_h) $(gdb_assert_h) \
	$(version_h) $(floatformat_h) $(sim_regno_h)

gdbtypes.o: gdbtypes.c $(bfd_h) $(complaints_h) $(defs_h) $(expression_h) \
	$(gdbtypes_h) $(language_h) $(objfiles_h) $(symfile_h) $(symtab_h) \
	$(target_h) $(value_h) $(gdb_string_h) $(wrapper_h) $(cp_abi_h)

osabi.o: osabi.c $(gdb_string_h) $(defs_h) $(BFD_SRC)/elf-bfd.h

go32-nat.o: go32-nat.c $(defs_h) $(inferior_h) $(gdb_wait_h) $(gdbcore_h) \
	$(command_h) $(floatformat_h) $(target_h) i387-tdep.h $(regcache_h)

gnu-nat.o: process_reply_S.h exc_request_S.h notify_S.h msg_reply_S.h \
	exc_request_U.h msg_U.h gnu-nat.h

d1697 1
a1697 2
	$(gdbtypes_h) $(value_h) $(demangle_h) $(cp_abi_h) 

d1700 4
a1703 1

a1706 1

d1709 1
a1709 11

hp300ux-nat.o: hp300ux-nat.c $(defs_h) $(gdbcore_h) $(inferior_h) $(regcache_h)

hpacc-abi.o: hpacc-abi.c $(defs_h) $(cp_abi_h) $(gdb_string_h) $(gdbtypes_h) \
	$(value_h) $(gdbcore_h)

hppa-tdep.o: hppa-tdep.c $(gdb_wait_h) $(defs_h) $(gdbcmd_h) $(gdbcore_h) \
	$(inferior_h) $(objfiles_h) $(symfile_h) $(target_h) $(regcache_h) \
	$(completer_h)

hppab-nat.o: hppab-nat.c $(bfd_h) $(defs_h) $(inferior_h) $(target_h) \
d1711 28
a1738 10

hppah-nat.o: hppah-nat.c $(bfd_h) $(defs_h) $(inferior_h) $(target_h) \
	$(regcache_h)

i386gnu-tdep.o: $(defs_h) $(i386_tdep_h)

i386gnu-nat.o: gnu-nat.h

i386-tdep.o: i386-tdep.c $(defs_h) $(gdb_string_h) $(frame_h)	\
	$(inferior_h) $(gdbcore_h) $(target_h) $(floatformat_h)	\
d1740 8
a1747 14
	$(doublest_h) $(value_h)

i386-nat.o: i386-nat.c $(defs_h) $(breakpoint_h) $(command_h) $(gdbcmd_h)

# OBSOLETE i386aix-nat.o: i386aix-nat.c $(defs_h) $(frame_h) $(inferior_h) \
# OBSOLETE 	$(language_h) $(gdbcore_h) $(floatformat_h) $(target_h) $(regcache_h)

i386b-nat.o: i386b-nat.c $(defs_h) $(regcache_h)

i386bsd-tdep.o: i386bsd-tdep.c $(defs_h) $(frame_h) $(gdb_core_h) \
	$(regcache_h)

i386bsd-nat.o: i386bsd-nat.c $(defs_h) $(inferior_h) $(regcache_h)

d1749 25
a1773 35

i386ly-nat.o: i386ly-nat.c $(defs_h) $(frame_h) $(inferior_h) $(target_h)

i386ly-tdep.o: i386ly-tdep.c $(defs_h) $(inferior_h) $(target_h) $(gdbcore_h) \
	$(regcache_h)

# OBSOLETE i386m3-nat.o: i386m3-nat.c $(defs_h) $(inferior_h) $(floatformat_h) $(target_h) \
# OBSOLETE 	$(regcache_h)

# OBSOLETE i386mach-nat.o: i386mach-nat.c $(defs_h) $(gdbcore_h) $(inferior_h) \
# OBSOLETE 	$(regcache_h)

i386v-nat.o: i386v-nat.c $(floatformat_h) $(defs_h) $(gdbcore_h) \
	$(inferior_h) $(language_h) $(target_h)

i386-linux-nat.o: i386-linux-nat.c $(defs_h) $(inferior_h) $(gdbcore_h) \
	$(symtab_h) $(symfile_h) $(objfiles_h) $(regcache_h) \
	$(i386_linux_tdep_h) $(i386_tdep_h) $(i387_tdep_h) \
	$(gdb_string_h)

i386-linux-tdep.o: i386-linux-tdep.c $(defs_h) $(gdbcore_h) $(frame_h) \
	$(value_h) $(regcache_h)

i386v4-nat.o: i386v4-nat.c $(defs_h) $(regcache_h)

i387-tdep.o: i387-tdep.c $(floatformat_h) $(defs_h) $(gdbcore_h) \
	$(inferior_h) $(language_h) $(regcache_h) $(doublest_h) i386-tdep.h \
	$(gdb_string_h)

# OBSOLETE i960-tdep.o: i960-tdep.c $(defs_h) $(symtab_h) $(value_h) $(frame_h) \
# OBSOLETE 	$(floatformat_h) $(target_h) $(gdbcore_h) $(inferior_h) $(regcache_h)

ia64-linux-nat.o: ia64-linux-nat.c  $(defs_h) $(inferior_h) $(target_h) \
	$(gdbcore_h) $(regcache_h)

a1774 1

d1776 24
a1799 22
	$(arch_utils_h) $(floatformat_h) $(objfiles_h) $(value_h) \
	$(INCLUDE_DIR)/elf/common.h $(regcache_h) $(doublest_h)

infcmd.o: infcmd.c $(defs_h) environ.h $(gdbcmd_h) $(gdbcore_h) \
	$(inferior_h) $(target_h) $(language_h) $(symfile_h) $(gdb_string_h) \
	$(ui_out_h) $(completer_h) $(regcache_h)

inflow.o: inflow.c $(bfd_h) $(command_h) $(defs_h) $(inferior_h) \
	$(target_h) $(terminal_h) $(gdbthread_h) $(gdb_string_h)

infptrace.o: infptrace.c $(defs_h) $(gdbcore_h) $(inferior_h) $(target_h) \
	$(gdb_string_h) $(gdb_wait_h) $(command_h) $(regcache_h)

infrun.o: infrun.c $(gdb_wait_h) $(defs_h) $(gdbcmd_h) $(cli_script_h) \
	$(gdbcore_h) $(value_h) \
	$(inferior_h) $(target_h) $(gdbthread_h) $(gdb_string_h) $(event_loop_h) \
	$(event_top_h) $(regcache_h)

inftarg.o: inftarg.c $(gdb_wait_h) $(defs_h) $(gdbcore_h) $(inferior_h) \
	$(target_h) $(terminal_h) $(command_h)

irix4-nat.o: irix4-nat.c $(defs_h) $(inferior_h) $(gdbcore_h) $(regcache_h)
d1801 12
a1812 17
	$(symtab_h) $(symfile_h) $(objfiles_h) $(command_h) $(frame_h) \
	$(gdb_regex_h) $(language_h) $(gdb_string_h) $(regcache_h)

jv-lang.o: jv-lang.c $(bfd_h) $(defs_h) $(symtab_h) $(gdbtypes_h) \
	$(expression_h) $(parser_defs_h) $(language_h) $(symfile_h) \
	$(objfiles_h) $(gdb_string_h) $(value_h) $(c_lang_h) jv-lang.h \
	$(gdbcore_h)

jv-typeprint.o: jv-typeprint.c $(bfd_h) $(defs_h) $(symtab_h) $(gdbtypes_h) \
	$(value_h) $(demangle_h) jv-lang.h $(gdb_string_h) \
	$(typeprint_h) $(c_lang_h) $(cp_abi_h)

jv-valprint.o: jv-valprint.c $(bfd_h) $(defs_h) $(symtab_h) $(gdbtypes_h) \
	$(expression_h) $(value_h) $(demangle_h) $(valprint_h) \
	$(language_h) jv-lang.h $(c_lang_h) gdbcore.h $(annotate_h) \
	$(gdb_string_h)

d1814 28
a1841 24
	kod.h

kod-cisco.o: kod-cisco.c $(defs_h) $(gdb_string_h) kod.h

language.o: language.c $(bfd_h) $(defs_h) $(expression_h) $(frame_h) \
	$(gdbcmd_h) $(gdbtypes_h) $(language_h) $(parser_defs_h) $(symtab_h) \
	$(target_h) $(value_h) $(gdb_string_h)

lynx-nat.o: lynx-nat.c $(defs_h) $(frame_h) $(inferior_h) $(gdbcore_h) \
	$(target_h) $(regcache_h)

m2-lang.o: m2-lang.c $(defs_h) $(expression_h) $(gdbtypes_h) \
	$(language_h) m2-lang.h $(parser_defs_h) $(symtab_h)

m2-typeprint.o: m2-typeprint.c $(defs_h) $(expression_h) $(gdbcmd_h) \
	$(gdbcore_h) $(gdbtypes_h) $(language_h) m2-lang.h $(symtab_h) \
	$(target_h) $(value_h) $(gdb_string_h)

m2-valprint.o: m2-valprint.c $(defs_h) $(gdbtypes_h) $(symtab_h) \
	$(valprint_h) m2-lang.h

m3-nat.o: m3-nat.c $(defs_h) $(inferior_h) $(value_h) $(language_h) \
	$(target_h) $(gdb_wait_h) $(gdbcmd_h) $(gdbcore_h) $(regcache_h)

d1845 9
a1853 23

p-lang.o: p-lang.c p-lang.h $(defs_h) $(expression_h) $(gdbtypes_h) \
	$(language_h) $(parser_defs_h) $(symtab_h) $(gdb_string_h)

p-typeprint.o: p-typeprint.c $(defs_h) $(gdb_obstack_h) $(bfd_h) $(symtab_h) \
	$(gdbtypes_h) $(expression_h) $(value_h) $(gdbcore_h) $(target_h) \
	$(language_h) $(p_lang_h) $(typeprint_h) $(gdb_string_h)

p-valprint.o: p-valprint.c $(defs_h) $(gdb_obstack_h) $(symtab_h) \
	$(gdbtypes_h) $(expression_h) $(value_h) $(command_h) $(gdbcmd_h) \
	$(gdbcore_h) $(demangle_h) $(valprint_h) $(typeprint_h) $(language_h) \
	$(target_h) $(annotate_h) $(p_lang_h) $(cp_abi_h)

m68hc11-tdep.o: m68hc11-tdep.c $(defs_h) $(frame_h) $(symtab_h) $(gdbtypes_h) \
	$(gdbcmd_h) $(gdbcore_h) $(gdb_string_h) $(value_h) $(inferior_h) \
	$(dis_asm_h) $(symfile_h) $(objfiles_h) $(arch_utils_h) $(regcache_h) \
	$(target_h) $(opcode_m68hc11_h)

m68k-tdep.o: m68k-tdep.c $(defs_h) $(frame_h) $(symtab_h) $(value_h) \
	$(gdbcore_h) $(gdb_string_h) $(regcache_h)

m68kly-nat.o: m68kly-nat.c $(defs_h) $(frame_h) $(inferior_h) $(target_h)

d1855 22
a1876 14
	$(language_h) $(gdbcore_h) $(floatformat_h) $(target_h) $(regcache_h)

mac-nat.o: mac-nat.c $(defs_h) $(gdb_string_h) $(regcache_h)

main.o: main.c $(top_h) $(defs_h) $(gdb_string_h) $(event_loop_h) \
	$(symfile_h)  $(gdbcore_h) $(ui_out_h) $(inferior_h)

maint.o: maint.c $(defs_h) $(gdbcmd_h) $(gdbtypes_h) $(symtab_h) \
	$(language_h) $(expression_h) $(objfiles_h) $(symfile_h) \
	$(cli_decode_h)

mcore-tdep.o: mcore-tdep.c $(defs_h) $(frame_h) $(gdbcmd_h) $(value_h) \
	$(symtab_h) $(symfile_h) $(gdbcore_h) $(inferior_h)

d1879 3
a1881 1

a1887 12

mipsm3-nat.o: mipsm3-nat.c $(defs_h) $(inferior_h) $(regcache_h)

# OBSOLETE # os9kread assumes that sizeof(char*) <= sizeof(int).  This looses on
# OBSOLETE # 64 bit targets where often, sizeof(int)=4 but sizeof(char*)=9.
# OBSOLETE os9kread.o: os9kread.c $(buildsym_h) $(complaints_h) $(bfd_h) $(defs_h) \
# OBSOLETE 	        $(expression_h) $(gdb_stabs_h) $(gdbcore_h) $(gdbtypes_h) \
# OBSOLETE 		$(language_h) $(objfiles_h) $(stabsread_h) $(symfile_h) \
# OBSOLETE 		$(symtab_h) $(target_h) $(gdb_string_h)
# OBSOLETE 	$(CC) -c $(INTERNAL_WARN_CFLAGS) $(NO_WERROR_CFLAGS) \
# OBSOLETE 		$(srcdir)/os9kread.c

a1889 1

d1892 3
a1894 4

minsyms.o: minsyms.c $(bfd_h) $(defs_h) $(objfiles_h) $(symfile_h) \
	$(symtab_h) $(gdb_string_h) $(value_h) $(cp_abi_h)

a1895 1

d1897 8
a1904 19
	solib-svr4.h

mips-nat.o: mips-nat.c $(defs_h) $(gdbcore_h) $(inferior_h) $(regcache_h)

mips-irix-tdep.o: mips-irix-tdep.c $(defs_h) osabi.h $(BFD_SRC)/elf-bfd.h

mips-tdep.o: mips-tdep.c $(defs_h) $(gdbcmd_h) $(gdbcore_h) \
	$(arch_utils_h) $(regcache_h) \
	$(inferior_h) $(language_h) $(objfiles_h) $(symfile_h) \
	$(gdb_string_h) osabi.h

mipsread.o: mipsread.c $(buildsym_h) $(complaints_h) $(bfd_h) $(defs_h) \
	$(expression_h) $(gdb_stabs_h) $(gdbcore_h) $(gdbtypes_h) \
	$(language_h) $(objfiles_h) $(stabsread_h) $(symfile_h) $(symtab_h) \
	$(gdb_string_h)

mipsv4-nat.o: mipsv4-nat.c $(defs_h) $(gdbcore_h) $(inferior_h) $(target_h) \
	$(regcache_h)

d1906 1
a1906 2
	mipsnbsd-tdep.h

d1908 29
a1936 24
	$(target_h) $(value_h) osabi.h solib-svr4.h mipsnbsd-tdep.h

mn10200-tdep.o: mn10200-tdep.c $(defs_h) $(frame_h) $(inferior_h) $(target_h) \
	$(value_h) $(bfd_h) $(gdb_string_h) $(gdbcore_h) $(symfile_h) \
	$(regcache_h)

mn10300-tdep.o: mn10300-tdep.c $(defs_h) $(frame_h) $(inferior_h) $(target_h) \
	$(value_h) $(bfd_h) $(gdb_string_h) $(gdbcore_h) $(symfile_h) \
	$(regcache_h) $(arch_utils_h)

monitor.o: monitor.c $(monitor_h) $(bfd_h) $(defs_h) $(gdbcmd_h) \
	$(inferior_h) $(target_h) $(serial_h) $(terminal_h) $(gdb_string_h) \
	$(regcache_h)

nbsd-tdep.o: nbsd-tdep.c $(defs_h) solib-svr4.h

nlmread.o: nlmread.c $(bfd_h) $(buildsym_h) $(complaints_h) $(defs_h) \
	$(gdb_stabs_h) $(objfiles_h) $(symfile_h) $(symtab_h) $(stabsread_h) \
	$(gdb_string_h)

nindy-tdep.o: nindy-tdep.c $(defs_h) $(frame_h) $(symtab_h)  $(gdbcore_h)

ns32k-tdep.o: ns32k-tdep.c $(bfd_h) $(dis_asm_h) $(defs_h)

d1940 28
a1967 26

solib-osf.o: solib-osf.c $(defs_h) $(inferior_h) $(symtab_h) $(objfiles_h) \
	$(symfile_h) $(target_h) $(gdb_string_h) $(solist_h)

somread.o: somread.c $(bfd_h) $(buildsym_h) $(complaints_h) $(defs_h) \
	$(gdb_stabs_h) $(objfiles_h) $(symfile_h) $(symtab_h) $(gdb_string_h)

somsolib.o: somsolib.c $(defs_h) $(regcache_h)

std-regs.o: std-regs.c $(defs_h) $(builtin_regs_h) $(frame_h) $(gdbtypes_h) \
	$(value_h) $(gdb_string_h)

pa64solib.o: pa64solib.c $(defs_h) $(regcache_h)

hpux-thread.o: hpux-thread.c $(defs_h) $(gdbthread_h) $(target_h) inferior.h \
	$(regcache_h)

hpread.o: hpread.c $(bfd_h) $(buildsym_h) $(complaints_h) $(defs_h) \
	$(demangle_h) $(gdb_stabs_h) $(gdbtypes_h) $(objfiles_h) \
	$(symfile_h) $(syms_h) $(symtab_h) $(gdb_string_h) \
	$(INCLUDE_DIR)/hp-symtab.h

parse.o: parse.c $(command_h) $(defs_h) $(expression_h) $(frame_h) \
	$(gdbtypes_h) $(language_h) $(parser_defs_h) $(symtab_h) $(value_h) \
	$(gdb_string_h) $(linespec_h) $(doublest_h)

d1970 7
a1976 8
	$(objfiles_h) $(gdb_stabs_h) $(serial_h) ocd.h $(regcache_h)

ppc-linux-nat.o: ppc-linux-nat.c $(defs_h) $(gdbcore_h) $(frame_h) \
	$(inferior_h) $(target_h) $(regcache_h) $(ppc_tdep_h)

ppc-linux-tdep.o: ppc-linux-tdep.c $(defs_h) $(gdbcore_h) $(inferior_h) \
	$(target_h) $(ppc_tdep_h) $(regcache_h) $(value_h)

d1978 3
a1980 2
	$(value_h) $(regcache_h) $(ppc_tdep_h)

d1982 1
a1982 2
	ppcnbsd-tdep.h

d1984 8
a1991 19
	$(target_h) $(breakpoint_h) $(value_h) $(ppc_tdep_t) ppcnbsd-tdep.h \
	nbsd-tdep.h

ppcbug-rom.o: ppcbug-rom.c $(monitor_h) $(bfd_h) $(gdb_wait_h) $(defs_h) \
	$(gdbcmd_h) $(inferior_h) $(target_h) $(serial_h) $(terminal_h) \
	$(regcache_h)

printcmd.o: printcmd.c $(breakpoint_h) $(defs_h) $(expression_h) \
	$(gdbcmd_h) $(gdbcore_h) $(gdbtypes_h) $(language_h) $(objfiles_h) \
	$(symfile_h) $(symtab_h) $(target_h) $(gdb_string_h) $(ui_out_h) \
	$(completer_h)

# FIXME: Procfs.o gets -Wformat errors because things like pid_t don't
# match output format strings.
procfs.o: procfs.c $(command_h) $(defs_h) $(gdbcore_h) $(inferior_h) \
	$(target_h) $(gdb_string_h) $(gdbthread_h) proc-utils.h

proc-api.o: proc-api.c $(defs_h) $(gdbcmd_h) proc-utils.h $(completer_h)

a1992 1

d1994 11
a2004 18

proc-why.o: proc-why.c $(defs_h) proc-utils.h

sol-thread.o: sol-thread.c $(defs_h) $(gdbthread_h) $(target_h) $(inferior_h) \
	$(gdbcmd_h) $(regcache_h)

linux-proc.o: linux-proc.c $(defs_h)

thread-db.o: thread-db.c $(defs_h) $(gdb_assert_h) gdb_proc_service.h \
	gdb_thread_db.h $(bfd_h) $(gdbthread_h) $(inferior_h) $(symfile_h) \
	$(objfiles_h) $(target_h) $(regcache_h)

lin-lwp.o: lin-lwp.c $(defs_h) $(gdb_assert_h) $(gdb_wait_h) $(gdbthread_h) \
	$(inferior_h) $(target_h) $(gdbcmd_h) $(regcache_h) $(gdb_string_h)

proc-service.o: proc-service.c $(defs_h) $(inferior_h) gdb_proc_service.h \
	$(symtab_h) $(target_h) gregset.h

d2006 70
a2075 79
      $(gdb_string_h) $(command_h) $(serial_h) $(monitor_h) $(remote_utils_h) \
	$(version_h) $(regcache_h)

remote-rdi.o: remote-rdi.c $(defs_h) $(gdbcore_h) \
	$(inferior_h) $(gdb_string_h) $(completer_h) $(arm_tdep_h)

remote-rdp.o: remote-rdp.c $(defs_h) $(gdbcore_h) \
	$(inferior_h) $(gdb_string_h) $(arm_tdep_h) $(callback_h)

remote-e7000.o: remote-e7000.c $(defs_h) $(gdbcore_h) $(target_h) \
	$(serial_h) $(gdb_string_h) $(regcache_h)

remote-es.o: remote-es.c $(bfd_h) $(command_h) $(defs_h) \
	$(inferior_h) $(remote_utils_h) $(terminal_h) $(gdb_string_h) \
	$(symfile_h) $(regcache_h) $(value_h)

remote-est.o: remote-est.c $(defs_h) $(gdbcore_h) \
	$(inferior_h) $(serial_h) $(target_h) $(terminal_h) $(regcache_h)

remote-hms.o: remote-hms.c $(defs_h) $(gdbcore_h) \
	$(inferior_h) $(serial_h) $(target_h) $(terminal_h) $(regcache_h)

remote-mips.o: remote-mips.c $(defs_h) $(gdbcmd_h) \
	$(gdbcore_h) $(inferior_h) $(serial_h) $(symfile_h) $(target_h) \
	$(regcache_h)

# OBSOLETE remote-nindy.o: remote-nindy.c $(floatformat_h) $(command_h) \
# OBSOLETE 	$(defs_h) $(gdbcore_h) $(inferior_h) \
# OBSOLETE 	nindy-share/env.h nindy-share/stop.h $(remote_utils_h) \
# OBSOLETE 	$(symfile_h) $(regcache_h)

# OBSOLETE remote-os9k.o: remote-os9k.c $(defs_h) $(gdbcore_h) \
# OBSOLETE 	$(command_h) $(monitor_h) $(remote_utils_h) $(symtab_h) $(symfile_h) \
# OBSOLETE 	$(objfiles_h) $(gdb_stabs_h) $(gdb_string_h) $(regcache_h)

remote-sds.o: remote-sds.c $(bfd_h) $(defs_h) $(gdbcmd_h) \
	$(inferior_h) $(remote_utils_h) $(symfile_h) $(terminal_h) \
	$(gdb_string_h) $(regcache_h)

remote-sim.o: remote-sim.c $(defs_h) $(inferior_h) $(value_h) $(gdb_string_h) \
	$(terminal_h) $(target_h) $(gdbcore_h) $(callback_h) \
	$(remote_sim_h) $(remote_utils_h) $(command_h) $(regcache_h) \
	$(sim_regno_h)

remote-st.o: remote-st.c $(defs_h) $(gdbcore_h) $(serial_h) \
	$(target_h) $(gdb_string_h) $(regcache_h)

remote-vx.o: remote-vx.c $(complaints_h) $(defs_h) $(gdbcmd_h) \
	$(gdbcore_h) $(inferior_h) $(target_h) vx-share/dbgRpcLib.h \
	vx-share/ptrace.h vx-share/xdr_ld.h vx-share/xdr_ptrace.h \
	vx-share/xdr_rdb.h $(gdb_stabs_h) $(objfiles_h) $(symfile_h) $(bfd_h) \
	$(gdb_string_h) $(regcache_h)

remote-vx29k.o: remote-vx29k.c $(complaints_h) $(defs_h) $(gdbcmd_h) \
        $(gdbcore_h) $(inferior_h) $(target_h) vx-share/dbgRpcLib.h \
        vx-share/ptrace.h vx-share/xdr_ld.h vx-share/xdr_ptrace.h \
        vx-share/xdr_rdb.h $(gdb_string_h) $(regcache_h)

ocd.o: ocd.c ocd.h $(gdbcore_h) $(gdb_string_h) $(frame_h) $(inferior_h) \
	$(bfd_h) $(symfile_h) $(target_h) $(gdbcmd_h) $(objfiles_h) \
	$(gdb_stabs_h) $(dcache_h) $(serial_h) $(regcache_h)

remote-utils.o: remote-utils.c $(defs_h) $(gdbcmd_h) $(gdbcore_h) \
	$(inferior_h) $(remote_utils_h) $(gdb_string_h) $(regcache_h)

remote.o: remote.c $(bfd_h) $(gdb_wait_h) $(defs_h) $(gdbcmd_h) \
	$(inferior_h) $(remote_utils_h) $(symfile_h) $(terminal_h) \
	$(gdb_string_h) $(event_loop_h) $(event_top_h) $(remote_h) \
	$(inf_loop_h) $(value_h)

# OBSOLETE remote-nrom.o: remote-nrom.c $(bfd_h) $(gdb_wait_h) $(defs_h) $(gdbcmd_h) \
# OBSOLETE 	$(inferior_h) $(remote_utils_h) $(symfile_h) $(terminal_h)

rom68k-rom.o: rom68k-rom.c $(monitor_h) $(bfd_h) $(gdb_wait_h) $(defs_h) \
	$(gdbcmd_h) $(inferior_h) $(target_h) $(serial_h) $(terminal_h) \
	$(regcache_h) $(value_h)

rs6000-nat.o: rs6000-nat.c $(bfd_h) $(defs_h) $(inferior_h) $(target_h) \
	$(gdbcore_h) $(xcoffsolib_h) $(symfile_h) $(objfiles_h) \
d2077 6
d2084 2
a2085 5

rs6000-tdep.o: rs6000-tdep.c $(defs_h) $(gdbcore_h) $(inferior_h) \
	$(target_h) $(ppc_tdep_h) $(regcache_h) $(value_h) $(parser_defs_h)

s390-tdep.o: s390-tdep.c $(defs_h) $(arch_utils_h) $(frame_h) $(inferior_h) \
d2087 20
a2106 23
	$(objfiles_h) $(bfd_h) $(floatformat_h) $(regcache_h) $(value_h)

s390-nat.o: s390-nat.c $(defs_h) $(regcache_h)

scm-exp.o: $(defs_h) $(value_h) $(parser_defs_h) $(language_h) $(c_lang_h) \
	scm-lang.h scm-tags.h

scm-lang.o: $(defs_h) $(value_h) $(parser_defs_h) $(language_h) $(c_lang_h) \
	scm-lang.h scm-tags.h $(gdb_string_h) $(gdbcore_h)

scm-valprint.o: $(defs_h) $(value_h) $(parser_defs_h) $(language_h)  \
	scm-lang.h $(valprint_h) $(gdbcore_h)

ser-go32.o: ser-go32.c $(defs_h) $(serial_h) 

ser-pipe.o: ser-pipe.c $(defs_h) $(serial_h) $(gdb_string_h) $(ser_unix_h)

ser-tcp.o: ser-tcp.c $(defs_h) $(serial_h) $(gdb_string_h) $(ser_unix_h)

ser-unix.o: ser-unix.c $(defs_h) $(serial_h) $(ser_unix_h) 

serial.o: serial.c $(defs_h) $(serial_h) $(gdb_string_h)

d2110 47
a2156 47
	$(regcache_h) $(doublest_h) $(sh_tdep_h) $(elf_bfd_h) $(solib_svr4_h) \
	$(elf_sh_h) $(gdb_sim_sh_h)

shnbsd-tdep.o: shnbsd-tdep.c $(defs_h) $(gdbcore_h) $(regcache_h) \
	$(value_h) $(sh_tdep_h) solib-svr4.h shnbsd-tdep.h nbsd-tdep.h

shnbsd-nat.o: shnbsd-nat.c $(defs_h) $(inferior_h) shnbsd-tdep.h

sh3-rom.o: sh3-rom.c $(monitor_h) $(bfd_h) $(gdb_wait_h) $(defs_h) $(gdbcmd_h) \
	$(inferior_h) $(target_h) $(serial_h) $(terminal_h) $(arch_utils_h) \
	$(regcache_h) $(sh_tdep_h)

mon960-rom.o: mon960-rom.c $(defs_h) $(gdbcore_h) $(target_h) $(monitor_h) \
	$(serial_h) $(srec_h) $(xmodem_h) $(symtab_h) $(symfile_h) \
	$(inferior_h)

solib.o: solib.c $(command_h) $(defs_h) $(gdbcore_h) $(inferior_h) \
	$(objfiles_h) $(gdb_regex_h) $(symfile_h) $(target_h) $(gdb_string_h) \
	$(solist_h) $(completer_h)

solib-irix.o: solib-irix.c $(defs_h) $(gdbcore_h) $(inferior_h) $(objfiles_h) \
	$(symfile_h) $(target_h) $(solist_h) solib-svr4.h

solib-sunos.o: solib-sunos.c $(defs_h) $(symfile_h) $(objfiles_h) \
	$(gdbcore_h) $(inferior_h) $(solist_h)

solib-svr4.o: solib-svr4.c $(defs_h) $(gdbcore_h) $(inferior_h) $(objfiles_h) \
	$(symfile_h) $(target_h) $(solist_h) solib-svr4.h

solib-legacy.o: solib-legacy.c $(defs_h) $(gdbcore_h) solib-svr4.h

source.o: source.c $(defs_h) $(expression_h) $(frame_h) $(gdbcmd_h) \
	$(gdbcore_h) $(language_h) $(objfiles_h) $(gdb_regex_h) $(symfile_h) \
	$(symtab_h) $(gdb_string_h) $(source_h) $(completer_h) $(linespec_h) \
	$(ui_out_h) $(value_h)

sparc-linux-nat.o: sparc-linux-nat.c $(defs_h) $(regcache_h)

sparc-nat.o: sparc-nat.c $(bfd_h) $(defs_h) $(inferior_h) $(gdbcore_h) \
	$(target_h) $(regcache_h)

sparc-tdep.o: sparc-tdep.c $(defs_h) $(arch_utils_h) $(frame_h) $(inferior_h) \
	$(target_h) $(value_h) $(bfd_h) $(gdb_string_h) $(regcache_h) \
	$(osabi_h) $(gregset_h) $(gdbcore_h) $(symfile_h)

sparcl-tdep.o: sparcl-tdep.c $(defs_h) $(gdbcore_h) $(target_h) $(regcache_h)

d2158 8
a2165 2
	sparcnbsd-tdep.h

d2167 1
a2167 2
	sparcnbsd-tdep.h 

d2169 2
a2170 8
	$(target_h) $(value_h) osabi.h sparcnbsd-tdep.h nbsd-tdep.h \
	solib-svr4.h

xstormy16-tdep.o: xstormy16-tdep.c $(defs_h) $(value_h) $(inferior_h) \
	$(symfile_h) $(arch_utils_h) $(regcache_h) $(gdbcore_h)

dsrec.o: dsrec.c $(defs_h) srec.h

d2176 10
a2185 16

stack.o: stack.c $(defs_h) $(gdbcmd_h) $(gdbcore_h) $(inferior_h) \
	$(language_h) $(target_h) $(gdb_string_h) $(ui_out_h)

ui-file.o: ui-file.c $(defs_h) ui-file.h
tui-file.o: $(srcdir)/tui/tui-file.c $(defs_h) $(srcdir)/tui/tui-file.h \
	$(srcdir)/tui/tuiIO.h

ax-general.o: ax-general.c $(defs_h) $(ax_h) $(value_h)

ax-gdb.o: ax-gdb.c $(defs_h) $(symtab_h) $(symfile_h) $(gdbtypes_h) \
	$(value_h) $(expression_h) $(command_h) $(ax_h) $(gdbcmd_h) ax-gdb.h \
	$(gdb_string_h)

sun3-nat.o: sun3-nat.c $(defs_h) $(gdbcore_h) $(inferior_h) $(regcache_h)

d2191 4
a2194 5

symm-tdep.o: symm-tdep.c $(defs_h) $(gdbcore_h) $(inferior_h)

symm-nat.o: symm-nat.c $(defs_h) $(gdbcore_h) $(inferior_h) $(regcache_h)

a2197 1

d2204 6
a2209 20

linespec.o: linespec.c $(linespec_h) $(defs_h) $(frame_h) $(value_h) \
	$(objfiles_h) $(symfile_h) $(completer_h) $(symtab_h) \
	$(demangle_h) $(command_h) $(cp_abi_h)

macroexp.o: macroexp.c $(defs_h) $(gdb_obstack_h) $(bcache_h) $(macrotab_h) \
	$(macroexp_h) $(gdb_assert_h)

macrotab.o: macrotab.c $(defs_h) $(gdb_obstack_h) $(splay_tree_h) $(symtab_h) \
	$(symfile_h) $(objfiles_h) $(macrotab_h) $(gdb_assert_h) $(bcache_h) \
	$(complaints_h)

macroscope.o: macroscope.c $(defs_h) $(macroscope_h)

macrocmd.o: macrocmd.c $(defs_h) $(macrotab_h) $(macroexp_h) \
	$(macroscope_h) $(command_h) $(gdbcmd_h)

target.o: target.c $(bfd_h) $(defs_h) $(gdbcmd_h) $(inferior_h) \
	$(objfiles_h) $(symfile_h) $(target_h) $(gdb_string_h) $(regcache_h)

d2212 13
a2224 13
	$(gdbcmd_h) $(regcache_h) $(gdb_h) $(ui_out_h)

completer.o: completer.c $(completer_h) $(gdbtypes_h) $(symtab_h) \
	$(defs_h) $(gdbcmd_h) $(expression_h) $(readline_headers) \
	$(cli_decode_h)

top.o: top.c $(top_h) $(bfd_h) $(getopt_h) $(readline_headers) $(call_cmds_h) \
	$(cli_cmds_h) $(cli_script_h) $(cli_setshow_h) \
	$(defs_h) $(gdbcmd_h) $(inferior_h) $(language_h) \
	$(remote_utils_h) $(gdb_string_h) $(event_loop_h) $(event_top_h) \
	$(completer_h) $(version_h) $(ui_out_h) $(doublest_h) \
	$(serial_h)

d2228 22
a2249 12

utils.o: utils.c $(bfd_h) $(defs_h) $(expression_h) $(gdbcmd_h) \
	$(language_h) $(target_h) $(terminal_h) $(readline_headers) \
	$(gdb_string_h) $(event_loop_h) $(event_top_h) $(inferior_h)

valarith.o: valarith.c $(bfd_h) $(defs_h) $(expression_h) \
	$(gdbtypes_h) $(language_h) $(symtab_h) $(target_h) $(value_h) \
	$(gdb_string_h) $(doublest_h)

valops.o: valops.c $(defs_h) $(gdbcore_h) $(inferior_h) $(target_h) \
	$(gdb_string_h) $(regcache_h) $(cp_abi_h) $(gdb_assert_h)

d2251 36
a2286 32
	$(value_h) $(gdbcore_h) $(gdbcmd_h) $(target_h) $(obstack_h) \
	$(language_h) $(annotate_h) $(valprint_h) $(floatformat_h) \
	$(doublest_h)

values.o: values.c $(defs_h) $(expression_h) $(frame_h) $(gdbcmd_h) \
	$(gdbcore_h) $(gdbtypes_h) $(symtab_h) $(target_h) $(value_h) \
	$(gdb_string_h) scm-lang.h $(doublest_h) $(regcache_h)

vax-tdep.o: vax-tdep.c $(OP_INCLUDE)/vax.h $(defs_h) $(symtab_h) \
	$(arch_utils_h) $(inferior_h) $(vax_tdep_h)

x86-64-linux-tdep.o : x86-64-linux-tdep.c $(defs_h) $(inferior_h) \
	$(gdbcore_h) $(regcache_h) x86-64-tdep.h i386-tdep.h $(dwarf2cfi_h)

x86-64-tdep.o : x86-64-tdep.c $(defs_h) $(inferior_h) $(gdbcore_h) \
	$(gdbcmd_h) $(arch_utils_h) $(regcache_h) $(symfile_h) x86-64-tdep.h \
	i386-tdep.h $(dwarf2cfi_h) $(gdb_assert_h) $(objfiles_h)

x86-64-linux-nat.o : x86-64-linux-nat.c $(defs_h) $(inferior_h) \
	$(gdbcore_h) $(regcache_h) $(gdb_assert_h) x86-64-tdep.h \
	i386-tdep.h

win32-nat.o: win32-nat.c $(gdbcmd_h) $(gdbcore_h) $(inferior_h) $(defs_h) \
	$(gdb_string_h) $(regcache_h) $(completer_h)

xcoffread.o: xcoffread.c $(bfd_h) $(INCLUDE_DIR)/aout/stab.def \
	$(INCLUDE_DIR)/aout/stab_gnu.h $(INCLUDE_DIR)/coff/internal.h \
	$(INCLUDE_DIR)/coff/rs6000.h $(BFD_SRC)/libcoff.h $(buildsym_h) \
	$(complaints_h) $(defs_h) $(gdbtypes_h) $(objfiles_h) $(stabsread_h) \
	$(symfile_h) $(symtab_h) $(gdb_string_h)

xcoffsolib.o: xcoffsolib.c $(bfd_h) $(defs_h) $(xcoffsolib_h) $(inferior_h) \
d2288 4
a2291 4

# FIXME: z8k-tdep.c calls _initialize_gdbtypes().  Since that isn't
# declared -Wimplicit fails. It should be using the GDBARCH framework.
# cagney 1999-09-02.
d2293 1
a2293 11
	$(gdbtypes_h) $(dis_asm_h) $(gdbcore_h) $(regcache_h)

gdb-events.o: gdb-events.c $(gdb_events_h) $(defs_h) $(gdbcmd_h)

ui-out.o: ui-out.c $(defs_h) $(ui_out_h) $(expression_h) $(language_h)
cli-out.o: cli-out.c $(defs_h) $(ui_out_h) $(cli_out_h)

varobj.o: varobj.c $(defs_h) $(value_h) $(expression_h) $(frame_h) \
	$(language_h) $(wrapper_h) $(gdbcmd_h) $(gdb_string_h) $(varobj_h)

wrapper.o: wrapper.c $(defs_h) $(frame_h) $(value_h) $(wrapper_h)
@


1.250
log
@2002-08-27  Elena Zannoni  <ezannoni@@redhat.com>

	* cli/cli-script.h (copy_command_lines): Export.
	* breakpoint.c: Include cli/cli-script.h.
	* Makefile.in (breakpoint.o): Update dependencies.
@
text
@d1560 2
a1561 1
	$(language_h) $(symtab_h) $(valprint_h) $(value_h) $(cp_abi_h)
d1626 1
a1626 1
cp-abi.o: cp-abi.c $(defs_h) $(value_h) $(cp_abi_h)
d1744 1
a1744 1
osabi.o: osabi.c $(defs_h) $(BFD_SRC)/elf-bfd.h
d1757 1
a1757 1
 
d1819 2
a1820 1
	$(i386_linux_tdep_h) $(i386_tdep_h) $(i387_tdep_h)
d1828 2
a1829 1
	$(inferior_h) $(language_h) $(regcache_h) $(doublest_h) i386-tdep.h
d1877 2
a1878 1
	$(language_h) jv-lang.h $(c_lang_h) gdbcore.h $(annotate_h)
d2107 1
a2107 1
	$(inferior_h) $(target_h) $(gdbcmd_h) $(regcache_h)
d2304 2
a2305 1
	$(value_h) $(expression_h) $(command_h) $(ax_h) $(gdbcmd_h) ax-gdb.h
d2620 1
a2620 1
signals.o: $(srcdir)/signals/signals.c $(defs_h) $(target_h)
@


1.249
log
@2002-08-21  Andrew Cagney  <ac131313@@redhat.com>

	* Makefile.in (c-exp.tab.o, jv-exp.tab.o, f-exp.tab.o)
	(m2-exp.tab.o, p-exp.tab.o, ada-exp.tab.o): Move to before the
	source file dependencies.  Cleanup corresponding generator rules.
@
text
@d1540 1
a1540 1
	$(completer_h) $(gdb_h)
@


1.248
log
@Obsolete i960.
@
text
@a1200 2
# c-exp.tab.c is generated in objdir from c-exp.y if it doesn't exist
# in srcdir, then compiled in objdir to c-exp.tab.o.
d1202 2
a1203 2
# If we said c-exp.tab.c rather than ./c-exp.tab.c some makes
# would sometimes re-write it into $(srcdir)/c-exp.tab.c.
d1205 10
a1214 3
# Remove bogus decls for malloc/realloc/free which conflict with everything
# else.  Strictly speaking c-exp.tab.c should therefore depend on
# Makefile.in, but that was a pretty big annoyance.
d1228 2
d1244 2
d1260 2
a1261 4
# m2-exp.tab.c is generated in objdir from m2-exp.y if it doesn't exist
# in srcdir, then compiled in objdir to m2-exp.tab.o.
# Remove bogus decls for malloc/realloc/free which conflict with everything
# else.
d1276 3
a1278 4
# ada-exp.tab.c is generated in objdir from ada-exp.y if it doesn't exist
# in srcdir, then compiled in objdir to ada-exp.tab.o.
# Remove bogus decls for malloc/realloc/free which conflict with everything
# else.
d1291 3
d1305 2
a1306 4
# p-exp.tab.c is generated in objdir from p-exp.y if it doesn't exist
# in srcdir, then compiled in objdir to p-exp.tab.o.
# Remove bogus decls for malloc/realloc/free which conflict with everything
# else.
a1320 4
# These files are updated atomically, so make never has to remove them
.PRECIOUS: m2-exp.tab.c f-exp.tab.c c-exp.tab.c
.PRECIOUS: jv-exp.tab.c p-exp.tab.c ada-exp.tab.c

d1435 29
a2413 25

c-exp.tab.o: c-exp.tab.c $(defs_h) $(gdb_string_h) $(expression_h) \
	$(value_h) $(parser_defs_h) $(language_h) $(c_lang_h) $(bfd_h) \
	$(symfile_h) $(objfiles_h)

jv-exp.tab.o: jv-exp.tab.c jv-lang.h $(defs_h) $(expression_h) \
	$(gdbtypes_h) $(language_h) $(parser_defs_h) $(symtab_h) $(value_h) \
	$(bfd_h) $(objfiles_h) $(symfile_h)

f-exp.tab.o: f-exp.tab.c f-lang.h $(defs_h) $(expression_h) \
	$(language_h) $(parser_defs_h) $(value_h) $(bfd_h) $(objfiles_h) \
	$(symfile_h)

m2-exp.tab.o: m2-exp.tab.c $(defs_h) $(expression_h) $(gdbtypes_h) \
	$(language_h) m2-lang.h $(parser_defs_h) $(symtab_h) $(value_h) \
	$(bfd_h) $(objfiles_h) $(symfile_h)

p-exp.tab.o: p-exp.tab.c $(defs_h) $(expression_h) $(gdbtypes_h) \
	$(language_h) p-lang.h $(parser_defs_h) $(symtab_h) $(value_h) \
	$(bfd_h) $(objfiles_h) $(symfile_h)

ada-exp.tab.o: ada-exp.tab.c ada-lex.c ada-lang.h \
	$(defs_h) $(expression_h) \
	$(gdbtypes_h) language.h parser-defs.h $(symtab_h) $(value_h) \
	$(bfd_h) objfiles.h symfile.h
@


1.248.4.1
log
@2002-08-26  Andrew Cagney  <ac131313@@redhat.com>

	* i386-tdep.c: Include "reggroups.h".
	(i386_register_reggroup_p): New function.
	(i386_add_reggroups, i386_init_reggroups): New function.
	(i386_gdbarch_init): Call i386_add_reggroups.  Set
	register_reggroup_p.
	(_initialize_i386_tdep): Call i386_init_reggroups.

	* infcmd.c: Include <ctype.h>.
	(registers_info): Rewrite.  Handle reggroups.
	(default_print_registers_info): Use gdbarch_register_reggroup_p.
	(print_float_info): Use gdbarch_register_reggroup_p.

	* regcache.c: Include "reggroups.h".
	(regcache_dump): Include the register groups in the ``maint print
	registers'' command.

	* infcmd.c: Include "regroup.h".
	(default_print_registers_info): Use gdbarch_register_reggroup_p.
	(print_float_info): Ditto.

	* gdbarch.sh: Include "reggroups.h".
	(register_reggroup_p): New method.
	(struct reggroup): Add opaque declaration.
	* gdbarch.h, gdbarch.c: Regenerate.

	* Makefile.in (SFILES): Add reggroups.c.
	(reggroups_h): Define.
	(COMMON_OBS): Add reggroups.o.
	(reggroups.o): Specify dependencies.
	(gdbarch.o, infcmd.o, i386-tdep.o): Update dependencies.

	* reggroups.c: New file.
	* reggroups.h: New file.
@
text
@a535 1
	reggroups.c \
a691 1
reggroups_h = reggroups.h
d845 1
a845 2
	gnu-v2-abi.o gnu-v3-abi.o hpacc-abi.o cp-abi.o \
	reggroups.o
d1677 1
a1677 5
	$(gdbcmd_h) $(regcache_h) $(gdb_assert_h) $(gdb_string_h) $(gdbcmd_h) \
	$(reggroups_h)

reggroups.o: reggroups.c $(defs_h) $(reggroups_h) $(gdbtypes_h) \
	$(gdb_assert_h) $(regcache_h)
d1699 1
a1699 1
	$(gdb_assert_h) $(gdb_string_h) $(gdb_events_h) $(reggroups_h)
d1754 1
a1754 1
	$(doublest_h) $(value_h) $(reggroups_h)
d1810 1
a1810 1
	$(ui_out_h) $(completer_h) $(regcache_h) $(reggroups_h)
@


1.247
log
@2002-08-21  Andrew Cagney  <ac131313@@redhat.com>
* Makefile.in: Update dependencies for mi/ cli/ and tui/
directores.
@
text
@d545 1
a545 1
	printcmd.c remote.c remote-nrom.c scm-exp.c scm-lang.c \
a1361 1
	i960-tdep.c \
d1383 1
a1383 1
	remote-nindy.c remote-rdp.c remote-sim.c \
d1796 2
a1797 2
i960-tdep.o: i960-tdep.c $(defs_h) $(symtab_h) $(value_h) $(frame_h) \
	$(floatformat_h) $(target_h) $(gdbcore_h) $(inferior_h) $(regcache_h)
d2103 4
a2106 4
remote-nindy.o: remote-nindy.c $(floatformat_h) $(command_h) \
	$(defs_h) $(gdbcore_h) $(inferior_h) \
	nindy-share/env.h nindy-share/stop.h $(remote_utils_h) \
	$(symfile_h) $(regcache_h)
d2147 2
a2148 2
remote-nrom.o: remote-nrom.c $(bfd_h) $(gdb_wait_h) $(defs_h) $(gdbcmd_h) \
	$(inferior_h) $(remote_utils_h) $(symfile_h) $(terminal_h)
@


1.246
log
@2002-08-21  Andrew Cagney  <ac131313@@redhat.com>
* Makefile.in: Update all _h macro definitions.
@
text
@d2420 1
a2420 1
# CLI dependencies
d2423 1
a2423 1
# or try to compile the object file into the cli directory.
d2426 3
a2428 3
		$(gdb_wait_h) $(gdb_regex_h) $(gdb_string_h) $(filenames_h) \
		$(ui_out_h) $(top_h) $(cli_cli_decode_h) $(cli_cli_script_h) \
		$(cli_cli_setshow_h) $(cli_cli_cmds_h)
d2430 3
a2432 4

cli-decode.o: $(srcdir)/cli/cli-decode.c $(defs_h) $(symtab_h) $(gdb_regex_h) \
		$(gdb_string_h) $(ui_out_h) $(cli_cli_cmds_h) \
		$(cli_cli_decode_h) $(gdb_assert_h)
d2434 3
a2436 3

cli-dump.o: $(srcdir)/cli/cli-dump.c $(defs_h) $(gdb_string_h) $(command_h) \
	$(value_h) $(gdbcmd_h) $(completer_h) $(cli_dump_h)
d2438 4
a2441 1

d2443 2
a2444 2
		$(gdb_string_h) $(ui_out_h) $(cli_cli_decode_h) \
		$(cli_cli_cmds_h) $(cli_cli_setshow_h)
d2446 1
a2446 7

cli-script.o: $(srcdir)/cli//cli-script.c $(defs_h) $(value_h) $(language_h) \
		$(ui_out_h) $(top_h) $(cli_cli_cmds_h) $(cli_cli_decode_h) \
		$(cli_cli_script_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/cli/cli-script.c

cli-utils.o: $(srcdir)/cli/cli-utils.c $(cli_utils_h) $(defs_h)
d2452 2
d2531 1
a2531 1
# MI dependencies
a2535 8
mi-cmds.o: $(srcdir)/mi/mi-cmds.c $(defs_h) $(top_h) $(mi_cmds_h) $(ui_out_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/mi/mi-cmds.c
mi-cmd-var.o: $(srcdir)/mi/mi-cmd-var.c $(defs_h) $(mi_cmds_h) $(ui_out_h) \
		$(mi_out_h) $(varobj_h) $(value_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/mi/mi-cmd-var.c
mi-cmd-stack.o: $(srcdir)/mi/mi-cmd-stack.c $(defs_h) $(top_h) $(mi_cmds_h) \
		$(ui_out_h) $(frame_h) $(value_h) $(target_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/mi/mi-cmd-stack.c
d2537 2
a2538 2
		$(ui_out_h) $(mi_out_h) $(breakpoint_h) $(gdb_string_h) \
		$(gdb_events_h) $(mi_getopt_h) $(gdb_h)
d2541 1
a2541 1
		$(mi_cmds_h) $(mi_getopt_h) $(ui_out_h) $(gdb_string_h)
d2543 20
a2562 5
mi-main.o: $(srcdir)/mi/mi-main.c $(defs_h) $(top_h) $(mi_cmds_h) $(ui_out_h) \
		$(mi_console_h) $(mi_getopt_h) $(event_loop_h) $(event_top_h) \
		$(mi_getopt_h) $(regcache_h) $(gdb_h) $(target_h) \
		$(inferior_h) $(gdb_string_h) $(gdbthread_h) $(mi_out_h) \
		$(gdbcore_h) $(value_h)
d2564 1
a2564 1
mi-out.o: $(srcdir)/mi/mi-out.c $(defs_h) $(mi_out_h) $(ui_out_h)
d2566 2
a2567 3
mi-console.o: $(srcdir)/mi/mi-console.c $(mi_out_h) $(defs_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/mi/mi-console.c
mi-parse.o: $(srcdir)/mi/mi-parse.c $(defs_h) $(mi_parse_h) $(mi_cmds_h)
a2568 2
mi-getopt.o: $(srcdir)/mi/mi-getopt.c $(mi_getopt_h) $(defs_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/mi/mi-getopt.c
d2573 2
d2590 2
d2606 2
d2618 2
a2619 6
tui.o: $(srcdir)/tui/tui.c \
		$(srcdir)/tui/tui.h $(srcdir)/tui/tuiData.h \
		$(srcdir)/tui/tuiLayout.h $(srcdir)/tui/tuiIO.h \
		$(srcdir)/tui/tuiRegs.h $(srcdir)/tui/tuiWin.h
	$(CC) -c $(INTERNAL_WARN_CFLAGS) $(srcdir)/tui/tui.c
tui-file.o: $(srcdir)/tui/tui-file.c
d2621 65
a2685 59
tui-hooks.o: $(srcdir)/tui/tui-hooks.c \
		$(srcdir)/tui/tui.h
	$(CC) -c $(INTERNAL_WARN_CFLAGS) $(srcdir)/tui/tui-hooks.c
tui-out.o: $(srcdir)/tui/tui-out.c \
		$(srcdir)/tui/tui.h $(srcdir)/tui/tuiData.h
	$(CC) -c $(INTERNAL_WARN_CFLAGS) $(srcdir)/tui/tui-out.c
tuiCommand.o: $(srcdir)/tui/tuiCommand.c \
		$(srcdir)/tui/tui.h $(srcdir)/tui/tuiData.h \
		$(srcdir)/tui/tuiWin.h $(srcdir)/tui/tuiIO.h
	$(CC) -c $(INTERNAL_WARN_CFLAGS) $(srcdir)/tui/tuiCommand.c
tuiData.o: $(srcdir)/tui/tuiData.c \
		$(srcdir)/tui/tui.h $(srcdir)/tui/tuiData.h
	$(CC) -c $(INTERNAL_WARN_CFLAGS) $(srcdir)/tui/tuiData.c
tuiDataWin.o: $(srcdir)/tui/tuiDataWin.c \
		$(srcdir)/tui/tui.h $(srcdir)/tui/tuiData.h \
		$(srcdir)/tui/tuiRegs.h
	$(CC) -c $(INTERNAL_WARN_CFLAGS) $(srcdir)/tui/tuiDataWin.c
tuiDisassem.o: $(srcdir)/tui/tuiDisassem.c \
		$(srcdir)/tui/tui.h $(srcdir)/tui/tuiData.h \
		$(srcdir)/tui/tuiLayout.h $(srcdir)/tui/tuiSourceWin.h \
		$(srcdir)/tui/tuiStack.h
	$(CC) -c $(INTERNAL_WARN_CFLAGS) $(srcdir)/tui/tuiDisassem.c
tuiGeneralWin.o: $(srcdir)/tui/tuiGeneralWin.c \
		$(srcdir)/tui/tui.h $(srcdir)/tui/tuiData.h \
		$(srcdir)/tui/tuiGeneralWin.h
	$(CC) -c $(INTERNAL_WARN_CFLAGS) $(srcdir)/tui/tuiGeneralWin.c
tuiIO.o: $(srcdir)/tui/tuiIO.c \
		$(srcdir)/tui/tui.h $(srcdir)/tui/tuiData.h \
		$(srcdir)/tui/tuiIO.h $(srcdir)/tui/tuiCommand.h \
		$(srcdir)/tui/tuiWin.h
	$(CC) -c $(INTERNAL_WARN_CFLAGS) $(srcdir)/tui/tuiIO.c
tuiLayout.o: $(srcdir)/tui/tuiLayout.c \
		$(srcdir)/tui/tui.h $(srcdir)/tui/tuiData.h \
		$(srcdir)/tui/tuiGeneralWin.h $(srcdir)/tui/tuiStack.h \
		$(srcdir)/tui/tuiRegs.h $(srcdir)/tui/tuiDisassem.h
	$(CC) -c $(INTERNAL_WARN_CFLAGS) $(srcdir)/tui/tuiLayout.c
tuiRegs.o: $(srcdir)/tui/tuiRegs.c \
		$(srcdir)/tui/tui.h $(srcdir)/tui/tuiData.h \
		$(srcdir)/tui/tuiLayout.h $(srcdir)/tui/tuiWin.h
	$(CC) -c $(INTERNAL_WARN_CFLAGS) $(srcdir)/tui/tuiRegs.c
tuiSource.o: $(srcdir)/tui/tuiSource.c \
		$(srcdir)/tui/tui.h $(srcdir)/tui/tuiData.h \
		$(srcdir)/tui/tuiStack.h $(srcdir)/tui/tuiSourceWin.h \
		$(srcdir)/tui/tuiSource.h
	$(CC) -c $(INTERNAL_WARN_CFLAGS) $(srcdir)/tui/tuiSource.c
tuiSourceWin.o: $(srcdir)/tui/tuiSourceWin.c \
		$(srcdir)/tui/tui.h $(srcdir)/tui/tuiData.h \
		$(srcdir)/tui/tuiStack.h $(srcdir)/tui/tuiSourceWin.h \
		$(srcdir)/tui/tuiSource.h $(srcdir)/tui/tuiDisassem.h
	$(CC) -c $(INTERNAL_WARN_CFLAGS) $(srcdir)/tui/tuiSourceWin.c
tuiStack.o: $(srcdir)/tui/tuiStack.c \
		$(srcdir)/tui/tui.h $(srcdir)/tui/tuiData.h \
		$(srcdir)/tui/tuiStack.h $(srcdir)/tui/tuiSourceWin.h
	$(CC) -c $(INTERNAL_WARN_CFLAGS) $(srcdir)/tui/tuiStack.c
tuiWin.o: $(srcdir)/tui/tuiWin.c \
		$(srcdir)/tui/tui.h $(srcdir)/tui/tuiData.h \
		$(srcdir)/tui/tuiGeneralWin.h $(srcdir)/tui/tuiStack.h \
		$(srcdir)/tui/tuiSourceWin.h $(srcdir)/tui/tuiDataWin.h
	$(CC) -c $(INTERNAL_WARN_CFLAGS) $(srcdir)/tui/tuiWin.c
d2687 1
d2689 1
@


1.245
log
@2002-08-21  Andrew Cagney  <ac131313@@redhat.com>

* Makefile.in (install-gdbtk): Move to install section.
(rdi-share/libangsd.a): Move to end of file.
@
text
@d603 16
a618 6
alpha_tdep_h =	alpha-tdep.h osabi.h
annotate_h =	annotate.h $(symtab_h) $(gdbtypes_h)
arch_utils_h =	arch-utils.h
arm_tdep_h =	arm-tdep.h osabi.h
ax_h = 		ax.h $(doublest_h)
bcache_h =	bcache.h
d620 43
a662 38
breakpoint_h =	breakpoint.h $(frame_h) $(value_h)
buildsym_h =	buildsym.h
c_lang_h =	c-lang.h $(value_h) $(macroexp_h)
call_cmds_h =	call-cmds.h
cli_cmds_h =	$(srcdir)/cli/cli-cmds.h
cli_decode_h =	$(srcdir)/cli/cli-decode.h $(command_h)
cli_dump_h =	$(srcdir)/cli/cli-dump.h
cli_out_h =	cli-out.h
cli_script_h =	$(srcdir)/cli/cli-script.h
cli_setshow_h =	$(srcdir)/cli/cli-setshow.h
cli_utils_h =	$(srcdir)/cli/cli-utils.h
command_h =	command.h
complaints_h =	complaints.h
completer_h =	completer.h
cp_abi_h =	cp-abi.h
dcache_h =	dcache.h
defs_h =	defs.h $(xm_h) $(tm_h) $(nm_h) config.status config.h \
		gdbarch.h ui-file.h $(INCLUDE_DIR)/gdb/signals.h gdb_locale.h
doublest_h =	doublest.h $(floatformat_h)
dwarf2cfi_h =	dwarf2cfi.h
event_loop_h =  event-loop.h
event_top_h = 	event-top.h
expression_h =	expression.h $(doublest_h) $(symtab_h)
f_lang_h =	f-lang.h
frame_h =	frame.h
gdb_h =		gdb.h
gdb_assert_h =	gdb_assert.h
gdb_events_h =	gdb-events.h
gdb_obstack_h =	$(obstack_h)
gdb_stabs_h =	gdb-stabs.h
gdb_string_h =  gdb_string.h
gdb_wait_h =	gdb_wait.h
gdb_regex_h =	gdb_regex.h
gdbcmd_h =	gdbcmd.h $(command_h) $(ui_out_h)
gdbcore_h =	gdbcore.h $(bfd_h)
gdbthread_h =	gdbthread.h $(breakpoint_h)
gdbtypes_h =	gdbtypes.h
i386_tdep_h =	i386-tdep.h
d664 104
a767 38
i387_tdep_h =	i387-tdep.h
inf_loop_h =  	inf-loop.h
inferior_h =	inferior.h $(breakpoint_h)
language_h =	language.h
linespec_h =	linespec.h
macroexp_h =	macroexp.h
macrotab_h =    macrotab.h
macroscope_h =  macroscope.h $(macrotab_h) $(symtab_h)
memattr_h =     memattr.h
monitor_h =	monitor.h
objfiles_h =	objfiles.h $(gdb_obstack_h) $(symfile_h)
parser_defs_h =	parser-defs.h $(doublest_h)
ppc_tdep_h =	ppc-tdep.h osabi.h
regcache_h =	regcache.h
remote_h =	remote.h
remote_utils_h =  remote-utils.h $(target_h)
ser_unix_h =	ser-unix.h
serial_h =	serial.h
sh_tdep_h =	sh-tdep.h osabi.h
sim_regno_h =	sim-regno.h
solist_h =	solist.h
source_h =	source.h
stabsread_h =	stabsread.h
symfile_h =	symfile.h
symtab_h =	symtab.h
target_h =      target.h $(bfd_h) $(symtab_h) $(dcache_h) $(memattr_h)
terminal_h =	terminal.h
top_h =		top.h
tracepoint_h =	tracepoint.h
typeprint_h =	typeprint.h
ui_out_h =      ui-out.h
valprint_h =	valprint.h
value_h =	value.h $(symtab_h) $(gdbtypes_h) $(expression_h) $(doublest_h)
varobj_h =      varobj.h $(symtab_h) $(gdbtypes_h)
vax_tdep_h =	vax-tdep.h osabi.h
version_h = 	version.h
wrapper_h =	wrapper.h
xcoffsolib_h =	xcoffsolib.h
a2536 6

mi_cmds_h =	$(srcdir)/mi/mi-cmds.h
mi_out_h =	$(srcdir)/mi/mi-out.h
mi_parse_h =	$(srcdir)/mi/mi-parse.h
mi_getopt_h =	$(srcdir)/mi/mi-getopt.h
mi_console_h =	$(srcdir)/mi/mi-console.h
@


1.244
log
@2002-08-20  Andrew Cagney  <cagney@@redhat.com>
* NEWS: Mention that the Apollo line was made obsolete.
* configure.tgt: Make m68*-apollo*-bsd*, m68*-hp-bsd*, and
m68*-hp-hpux* obsolete.
* configure.host: Make m68*-apollo*-sysv*, m68*-apollo*-bsd*,
m68*-hp-bsd* and m68*-hp-hpux* obsolete.
* buildsym.c (make_blockvector): Make static.
* buildsym.h (make_blockvector): Make extern declaration obsolete.
* Makefile.in (HFILES_NO_SRCDIR): Remove dst.h
(ALLDEPFILES): Remove dstread.c.
(dstread.o): Obsolete make rule.
* dstread.c: Makefile obsolete.
* dst.h: Ditto.
* config/m68k/hp300hpux.mt: Ditto.
* config/m68k/hp300hpux.mh: Ditto.
* config/m68k/hp300bsd.mt: Ditto.
* config/m68k/hp300bsd.mh: Ditto.
* config/m68k/apollo68b.mt: Ditto.
* config/m68k/apollo68v.mh: Ditto.
* config/m68k/apollo68b.mh: Ditto.
@
text
@d845 16
a1601 16
install-gdbtk:
	$(SHELL) $(srcdir)/../mkinstalldirs $(GDBTK_LIBRARY) ; \
	$(SHELL) $(srcdir)/../mkinstalldirs $(libdir)/insight$(GDBTK_VERSION) ; \
	$(INSTALL_DATA) $(srcdir)/gdbtk/plugins/plugins.tcl $(libdir)/insight$(GDBTK_VERSION)/plugins.tcl ; \
	$(SHELL) $(srcdir)/../mkinstalldirs \
		$(GDBTK_LIBRARY)/images \
		$(GDBTK_LIBRARY)/images2 ; \
	$(SHELL) $(srcdir)/../mkinstalldirs $(GDBTK_LIBRARY)/help \
		$(GDBTK_LIBRARY)/help/images \
		$(GDBTK_LIBRARY)/help/trace ; \
	cd $(srcdir)/gdbtk/library ; \
	for i in *.tcl *.itcl *.ith *.itb images/*.gif images2/*.gif images/icons.txt images2/icons.txt tclIndex help/*.html  help/trace/*.html help/trace/index.toc help/images/*.gif; \
	  do \
		$(INSTALL_DATA) $$i $(GDBTK_LIBRARY)/$$i ; \
	  done ;

a2002 10
rdi-share/libangsd.a:	force
	@@dir=rdi-share; \
	if [ -f ./$${dir}/Makefile ] ; then \
	  r=`pwd`; export r; \
	  srcroot=`cd $(srcdir); pwd`; export srcroot; \
	  (cd $${dir}; $(MAKE) $(FLAGS_TO_PASS) all); \
	else \
	  true; \
	fi

d2507 14
@


1.243
log
@* Makefile.in (LDFLAGS): Allow the configure script to establish a
default for this.
* gdbserver/Makefile.in (LDFLAGS): Same.
@
text
@d695 1
a695 1
	dst.h environ.h $(gdbcmd_h) gdb.h gdbcore.h \
d1256 1
a1256 1
	dcache.c delta68-nat.c dpx2-nat.c dstread.c exec.c fork-child.c \
d1528 3
a1530 3
dstread.o: dstread.c $(defs_h) $(symtab_h) $(gdbtypes_h) $(breakpoint_h) \
	$(bfd_h) $(symfile_h) $(objfiles_h) $(buildsym_h) $(gdb_obstack_h) \
	$(gdb_string_h) $(dst_h)
@


1.242
log
@*** empty log message ***
@
text
@d349 1
@


1.241
log
@	* Makefile.in (SFILES): Add ada-exp.y ada-lang.c ada-typeprint.c
	ada-valprint.c ada-tasks.c.
	(YYFILES): Add ada-exp.y.
	(ada-exp.tab.c ada-lex.c ada-lang.o): New target.
	(ada-tasks.o ada-typeprint.o ada-valprint.o): New target.
	(ada-exp.tab.o): New target.
@
text
@d1258 2
a1259 2
	i386-tdep.c i386b-nat.c i386mach-nat.c i386v-nat.c i386-linux-nat.c \
	i386m3-nat.c i386v4-nat.c i386ly-tdep.c \
d1694 2
a1695 2
i386m3-nat.o: i386m3-nat.c $(defs_h) $(inferior_h) $(floatformat_h) $(target_h) \
	$(regcache_h)
d1697 2
a1698 2
i386mach-nat.o: i386mach-nat.c $(defs_h) $(gdbcore_h) $(inferior_h) \
	$(regcache_h)
@


1.240
log
@Move gdbtk gunk to end of file.
@
text
@d82 5
d526 2
a527 1
SFILES = ax-general.c ax-gdb.c bcache.c blockframe.c breakpoint.c \
d773 1
d1035 1
d1171 27
d1218 1
a1218 1
.PRECIOUS: jv-exp.tab.c p-exp.tab.c
d1344 15
d2331 5
@


1.239
log
@2002-08-16  Andrew Cagney  <ac131313@@redhat.com>
* Makefile.in (copying.o): Separate out compile rule.
(hpux-thread.o, procfs.o, signals.o): Ditto.
(v850ice.o, z8k-tdep.o): Ditto.
(tui-file.o): Move to TUI section.
(xdr_ptrace.o, xdr_rdb.o, xdr_ld.o): Move to separate section.
(nindy.o, Onindy.o, ttyflush.o): Move to separate section.
@
text
@a1550 75
gdbres.o: $(srcdir)/gdbtk/gdb.rc $(srcdir)/gdbtk/gdbtool.ico
	$(WINDRES) --include $(srcdir)/gdbtk $(srcdir)/gdbtk/gdb.rc gdbres.o

gdbtk.o: $(srcdir)/gdbtk/generic/gdbtk.c \
	$(srcdir)/gdbtk/generic/gdbtk.h $(defs_h) \
	$(symtab_h) $(inferior_h) $(command_h) \
	$(bfd_h) $(symfile_h) $(objfiles_h) $(target_h) $(gdb_string_h) \
	$(tracepoint_h) $(top_h) 
	$(CC) -c $(INTERNAL_CFLAGS) $(IDE_CFLAGS) $(ITCL_CFLAGS) \
        $(ITK_CFLAGS) $(TIX_CFLAGS) \
	$(TCL_CFLAGS) $(TK_CFLAGS) $(X11_CFLAGS) $(GDBTK_CFLAGS)\
		$(srcdir)/gdbtk/generic/gdbtk.c \
		-DGDBTK_LIBRARY=\"$(GDBTK_LIBRARY)\" -DSRC_DIR=\"$(GDBTK_SRC_DIR)\"

gdbtk-bp.o: $(srcdir)/gdbtk/generic/gdbtk-bp.c \
		$(srcdir)/gdbtk/generic/gdbtk.h \
		$(srcdir)/gdbtk/generic/gdbtk-cmds.h \
		$(defs_h) $(breakpoint_h) $(tracepoint_h) \
		$(symfile_h) $(symtab_h) $(gdb_string_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(IDE_CFLAGS) $(ITCL_CFLAGS) \
	$(TIX_CFLAGS) $(TCL_CFLAGS) $(TK_CFLAGS) $(X11_CFLAGS)   \
	$(GDBTK_CFLAGS) $(srcdir)/gdbtk/generic/gdbtk-bp.c \
	-DGDBTK_LIBRARY=\"$(GDBTK_LIBRARY)\"

gdbtk-cmds.o: $(srcdir)/gdbtk/generic/gdbtk-cmds.c \
	$(srcdir)/gdbtk/generic/gdbtk.h $(srcdir)/gdbtk/generic/gdbtk-cmds.h \
	$(defs_h) $(symtab_h) $(inferior_h)	\
	$(command_h) $(bfd_h) $(top_h) $(symfile_h) $(objfiles_h) $(target_h) \
	$(gdb_string_h) $(tracepoint_h) $(source_h) $(regcache_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(IDE_CFLAGS) $(ITCL_CFLAGS)	\
	$(TIX_CFLAGS) $(TCL_CFLAGS) $(TK_CFLAGS) $(X11_CFLAGS)		\
	$(GDBTK_CFLAGS) $(srcdir)/gdbtk/generic/gdbtk-cmds.c		\
	-DGDBTK_LIBRARY=\"$(GDBTK_LIBRARY)\"

gdbtk-hooks.o: $(srcdir)/gdbtk/generic/gdbtk-hooks.c \
	$(srcdir)/gdbtk/generic/gdbtk.h $(defs_h) \
	$(symtab_h) $(inferior_h) $(command_h) \
	$(bfd_h) $(symfile_h) $(objfiles_h) $(target_h) $(gdb_string_h) \
	$(tracepoint_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(IDE_CFLAGS) $(ITCL_CFLAGS) $(TIX_CFLAGS) \
	$(TCL_CFLAGS) $(TK_CFLAGS) $(X11_CFLAGS) $(GDBTK_CFLAGS)\
		$(srcdir)/gdbtk/generic/gdbtk-hooks.c -DGDBTK_LIBRARY=\"$(GDBTK_LIBRARY)\"

gdbtk-register.o: $(srcdir)/gdbtk/generic/gdbtk-register.c \
		$(srcdir)/gdbtk/generic/gdbtk.h \
		$(srcdir)/gdbtk/generic/gdbtk-cmds.h \
		$(defs_h) $(frame_h) $(value_h) $(gdb_string_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(IDE_CFLAGS) $(ITCL_CFLAGS) \
	$(TIX_CFLAGS) $(TCL_CFLAGS) $(TK_CFLAGS) $(X11_CFLAGS)   \
	$(GDBTK_CFLAGS) $(srcdir)/gdbtk/generic/gdbtk-register.c \
	-DGDBTK_LIBRARY=\"$(GDBTK_LIBRARY)\"

gdbtk-stack.o: $(srcdir)/gdbtk/generic/gdbtk-stack.c \
	$(srcdir)/gdbtk/generic/gdbtk.h $(srcdir)/gdbtk/generic/gdbtk-cmds.h \
	$(srcdir)/gdbtk/generic/gdbtk-wrapper.h \
	$(defs_h) $(frame_h) $(value_h) $(target_h) $(breakpoint_h) \
	$(linespec_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(IDE_CFLAGS) $(ITCL_CFLAGS) \
	$(TIX_CFLAGS) $(TCL_CFLAGS) $(TK_CFLAGS) $(X11_CFLAGS)   \
	$(GDBTK_CFLAGS) $(srcdir)/gdbtk/generic/gdbtk-stack.c \
	-DGDBTK_LIBRARY=\"$(GDBTK_LIBRARY)\"

gdbtk-varobj.o: $(srcdir)/gdbtk/generic/gdbtk-varobj.c \
		$(srcdir)/gdbtk/generic/gdbtk.h \
		$(defs_h) $(value_h) $(varobj_h) $(gdb_string_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(IDE_CFLAGS) $(ITCL_CFLAGS) $(TIX_CFLAGS) \
	$(TCL_CFLAGS) $(TK_CFLAGS) $(X11_CFLAGS) $(GDBTK_CFLAGS)\
		$(srcdir)/gdbtk/generic/gdbtk-varobj.c

gdbtk-wrapper.o: $(srcdir)/gdbtk/generic/gdbtk-wrapper.c \
	$(srcdir)/gdbtk/generic/gdbtk-wrapper.h \
	$(defs_h) $(frame_h) $(value_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(IDE_CFLAGS) $(GDBTK_CFLAGS)\
		$(srcdir)/gdbtk/generic/gdbtk-wrapper.c

d2325 79
@


1.238
log
@* NEWS: Mention that the i[3456]-*-aix target has been made obsolete.
* configure.host: Make i[3456]86-*-aix host obsolete.
* configure.tgt: Make i[3456]86-*-aix target obsolete.
* config/i386/i386aix.mh, config/i386/i386aix.mt,
config/i386/nm-i386aix.h, condig/i386/tm-i386aix.h,
config/i386/xm-i386aix.h: Make files obsolete.
* i386aix-nat.c: Make file obsolete.
* Makefile.in (ALLDEPFILES): Remove i386aix-nat.c.
(i386aix-nat.o): Make target obsolete.
@
text
@d1270 32
a1421 1
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/copying.c
a1628 3
	$(CC) -c $(INTERNAL_CFLAGS) $(IDE_CFLAGS) $(ITCL_CFLAGS) $(TIX_CFLAGS) \
	$(TCL_CFLAGS) $(TK_CFLAGS) $(X11_CFLAGS) $(GDBTK_CFLAGS)\
		$(srcdir)/v850ice.c
a1925 8
Onindy.o: nindy-share/Onindy.c $(gdb_wait_h) nindy-share/block_io.h \
	nindy-share/env.h
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/nindy-share/Onindy.c

nindy.o: nindy-share/nindy.c $(gdb_wait_h) nindy-share/block_io.h \
	nindy-share/env.h
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/nindy-share/nindy.c

a1929 3
ttyflush.o: nindy-share/ttyflush.c
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/nindy-share/ttyflush.c

a1952 2
	$(CC) -c $(INTERNAL_CFLAGS) -I$(srcdir)/osf-share \
	  -I$(srcdir)/osf-share/HP800 -I/usr/include/dce $(srcdir)/hpux-thread.c
a1995 1
	$(CC) -c $(INTERNAL_WARN_CFLAGS) $(NO_WERROR_CFLAGS) $(srcdir)/procfs.c
a2155 3
signals.o: signals/signals.c $(defs_h) $(target_h)
	$(CC) -c $(INTERNAL_CFLAGS) $<

a2217 1
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tui-file.c
a2321 12
xdr_ld.o: vx-share/xdr_ld.c $(defs_h) vx-share/vxTypes.h \
	vx-share/vxWorks.h vx-share/xdr_ld.h
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/vx-share/xdr_ld.c

xdr_ptrace.o: vx-share/xdr_ptrace.c $(defs_h) vx-share/vxTypes.h \
	vx-share/vxWorks.h vx-share/xdr_ptrace.h
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/vx-share/xdr_ptrace.c

xdr_rdb.o: vx-share/xdr_rdb.c $(defs_h) vx-share/vxTypes.h \
	vx-share/vxWorks.h vx-share/xdr_rdb.h
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/vx-share/xdr_rdb.c

a2335 2
	$(CC) -c $(INTERNAL_WARN_CFLAGS) $(NO_WERROR_CFLAGS) \
		$(srcdir)/z8k-tdep.c
d2444 22
d2476 5
a2483 3
tui-hooks.o: $(srcdir)/tui/tui-hooks.c \
		$(srcdir)/tui/tui.h
	$(CC) -c $(INTERNAL_WARN_CFLAGS) $(srcdir)/tui/tui-hooks.c
d2537 14
@


1.237
log
@* config/i386/nm-gnu.h: Removed.
* config/i386/nm-i386gnu.h: New file.
(THREAD_STATE_FLAVOR, THREAD_STATE_SIZE,
THREAD_STATE_SET_TRACED, THREAD_STATE_CLEAR_STATE, ATTACH_DETACH):
Moved here from ...
* config/i386/tm-i386gnu.h: ... here.  Removed.
* config/i386/xm-i386gnu.h: Removed.
* config/i386/i386gnu.mh (XM_FILE): Set to xm-i386.h.
(NAT_FILE): Set to nm-i386gnu.h.
* config/i386/i386gnu.mt (TDEPFILES): Add i386gnu-tdep.o.
* i386-tdep.c: New file.
* Makefile.in (ALLDEPFILES): Add i386gnu-nat.c and i386gnu-tdep.c.
(i386gnu-tdep.o): Specify dependencies.
@
text
@d1224 1
a1224 1
	i386aix-nat.c i386m3-nat.c i386v4-nat.c i386ly-tdep.c \
d1674 2
a1675 2
i386aix-nat.o: i386aix-nat.c $(defs_h) $(frame_h) $(inferior_h) \
	$(language_h) $(gdbcore_h) $(floatformat_h) $(target_h) $(regcache_h)
@


1.236
log
@        * Makefile.in (install-gdbtk): Create insight plugin directory.
        Install plugins.tcl file.
@
text
@d1228 1
d1662 2
@


1.235
log
@2002-08-09  Andrew Cagney  <cagney@@redhat.com>

* regcache.c: Include "gdbcmd.h"
(_initialize_regcache): Add commands "maintenance print
registers", "maintenance print raw-registers" and "maintenance
print cooked-registers".
(enum regcache_dump_what): Define.
(dump_endian_bytes): New function.
(regcache_dump): New function.
(regcache_print): New function.
(maintenance_print_registers): New function.
(maintenance_print_raw_registers): New function.
(maintenance_print_cooked_registers): New function.
* Makefile.in (regcache.o): Update dependencies.
@
text
@d1505 2
@


1.234
log
@2002-08-06  Andrew Cagney  <ac131313@@redhat.com>
* gcore.c: Do not include <sys/procfs.h>.
* Makefile.in (gcore.o): Update dependencies.
@
text
@d1498 1
a1498 1
	$(gdbcmd_h) $(regcache_h) $(gdb_assert_h) $(gdb_string_h)
@


1.233
log
@        * objfiles.h: Add missing #include "symfile.h"
        * Makefile.in (objfiles_h): Add dependency on symfile.h and dependents.
@
text
@d1407 2
a1408 2
gcore.o: gcore.c $(defs_h) $(command_h) $(inferior_h) $(gdbcore_h) \
	$(BFD_SRC)/elf-bfd.h $(symfile_h) $(objfiles_h) 
@


1.232
log
@Index: ChangeLog
2002-08-03  Andrew Cagney  <ac131313@@redhat.com>

* Makefile.in (gdbtk-bp.o): Update dependencies.
(gdbtk-register.o): Ditto.
(gdbtk-varobj.o): Ditto.

Index: gdbtk/ChangeLog
2002-08-03  Andrew Cagney  <ac131313@@redhat.com>

* generic/gdbtk-bp.c: Include "gdb_string.h".
* generic/gdbtk-register.c: Ditto.
* generic/gdbtk-varobj.c: Ditto.
@
text
@d652 1
a652 1
objfiles_h =	objfiles.h $(gdb_obstack_h)
@


1.231
log
@Fri Aug  2 15:53:50 2002  Andrew Cagney  <cagney@@redhat.com>

* gdbarch.sh: Include "gdb_string.h".
* gdbarch.c: Regenerate.

* regcache.c: Include "gdb_string.h".
* ax-general.c: Ditto.
* varobj.c: Ditto.
* std-regs.c: Ditto.
* fbsd-proc.c: Ditto.
* thread.c: Ditto.

* Makefile.in (regcache.o): Update dependencies.
(thread.o, gdbarch.o): Ditto.
(ax-general.o, gdbarch.o): Ditto.
(varobj.o, std-regs.o): Ditto.
(fbsd-proc.o): Specify dependencies.
@
text
@d1532 4
a1535 2
	$(srcdir)/gdbtk/generic/gdbtk.h $(srcdir)/gdbtk/generic/gdbtk-cmds.h \
	$(defs_h) $(breakpoint_h) $(tracepoint_h) $(symfile_h) $(symtab_h)
d1561 3
a1563 2
	$(srcdir)/gdbtk/generic/gdbtk.h $(srcdir)/gdbtk/generic/gdbtk-cmds.h \
	$(defs_h) $(frame_h) $(value_h)
d1580 2
a1581 2
	$(srcdir)/gdbtk/generic/gdbtk.h \
	$(defs_h) $(value_h) $(varobj_h)
@


1.230
log
@* linux-proc.c: Include "gdb_string.h".
* Makefile.in (linux-proc.o): Update dependency list.
@
text
@d1485 3
d1497 2
a1498 1
regcache.o: regcache.c $(defs_h) $(inferior_h) $(target_h) $(regcache_h)
d1605 5
a1609 5
gdbarch.o: gdbarch.c $(defs_h) $(bfd_h) $(gdbcmd_h) $(gdb_string_h) \
	$(symtab_h) $(frame_h) $(inferior_h) $(breakpoint_h) $(gdb_wait_h) \
	$(gdbcore_h) $(target_h) $(gdbthread_h) $(annotate_h) $(symfile_h) \
	$(value_h) $(symcat_h) $(floatformat_h) $(gdb_assert_h) \
	$(gdb_events_h)
d1921 2
a1922 2
std-regs.o: std-regs.c $(defs_h) $(builtin_regs_h) $(frame_h) \
	$(gdbtypes_h) $(value_h)
d2201 2
a2202 1
ax-general.o: ax-general.c $(ax_h) $(defs_h) $(value_h)
d2248 3
a2250 2
thread.o: thread.c $(defs_h) $(gdbthread_h) $(gdbcmd_h) $(target_h) \
	$(regcache_h) $(ui_out_h) $(gdb_h)
d2358 2
a2359 2
varobj.o: varobj.c $(defs_h) $(frame_h) $(value_h) \
	$(language_h) $(valprint_h) $(varobj_h) $(wrapper_h)
@


1.229
log
@2002-08-01  Andrew Cagney  <cagney@@redhat.com>

* NEWS: Menion that CHILL has been made obsolete.

* gdbtypes.c (chill_varying_type): Make chill references obsolete.
* gdbserver/Makefile.in: Ditto.
* stabsread.c (read_range_type): Ditto.
* gdbtypes.h: Ditto.
* language.c (binop_type_check): Ditto.
(binop_result_type): Ditto.
(integral_type): Ditto.
(character_type): Ditto.
(string_type): Ditto.
(boolean_type): Ditto.
(structured_type): Ditto.
(lang_bool_type): Ditto.
(binop_type_check): Ditto.
* language.h (_LANG_chill): Ditto.
* dwarfread.c (set_cu_language): Ditto.
* dwarfread.c (CHILL_PRODUCER): Ditto.
* dwarfread.c (handle_producer): Ditto.
* expression.h (enum exp_opcode): Ditto.
* eval.c: Ditto for comments.
* typeprint.c (typedef_print) [_LANG_chill]: Ditto.
* expprint.c (print_subexp): Ditto.
(print_subexp): Ditto.
* valops.c (value_cast): Ditto.
(search_struct_field): Ditto.
* value.h (COERCE_VARYING_ARRAY): Ditto.
* symfile.c (init_filename_language_table): Ditto.
(add_psymbol_with_dem_name_to_list): Ditto.
* valarith.c (value_binop): Ditto.
(value_neg): Ditto.
* valops.c (value_slice): Ditto.
* symtab.h (union language_specific): Ditto.
(SYMBOL_INIT_LANGUAGE_SPECIFIC): Ditto.
(SYMBOL_DEMANGLED_NAME): Ditto.
(SYMBOL_CHILL_DEMANGLED_NAME): Ditto.
* defs.h (enum language): Ditto.
* symtab.c (got_symtab): Ditto.
* utils.c (fprintf_symbol_filtered): Ditto.

* ch-typeprint.c: Make file obsolete.
* ch-valprint.c: Make file obsolete.
* ch-lang.h: Make file obsolete.
* ch-exp.c: Make file obsolete.
* ch-lang.c: Make file obsolete.

* Makefile.in (FLAGS_TO_PASS): Do not pass CHILL or CHILLFLAGS or
CHILL_LIB.
(TARGET_FLAGS_TO_PASS): Ditto.
(CHILLFLAGS): Obsolete.
(CHILL): Obsolete.
(CHILL_FOR_TARGET): Obsolete.
(CHILL_LIB): Obsolete.
(SFILES): Remove ch-exp.c, ch-lang.c, ch-typeprint.c and
ch-valprint.c.
(HFILES_NO_SRCDIR): Remove ch-lang.h.
(COMMON_OBS): Remove ch-valprint.o, ch-typeprint.o, ch-exp.o and
ch-lang.o.
(ch-exp.o, ch-lang.o, ch-typeprint.o, ch-valprint.o): Delete
targets.

2002-08-01  Andrew Cagney  <cagney@@redhat.com>

* stabs.texinfo, gdb.texinfo, gdbint.texinfo: Obsolete references
to CHILL.

2002-08-01  Andrew Cagney  <cagney@@redhat.com>

* Makefile.in (TARGET_FLAGS_TO_PASS): Remove CHILLFLAGS, CHILL,
CHILL_FOR_TARGET and CHILL_LIB.
* configure.in (configdirs): Remove gdb.chill.
* configure: Regenerate.
* lib/gdb.exp: Obsolete references to chill.
* gdb.fortran/types.exp: Ditto.
* gdb.fortran/exprs.exp: Ditto.
@
text
@d1410 3
a1412 2
linux-proc.o: linux-proc.c $(defs_h) $(inferior_h) $(gregset_h) \
	$(gdbcore_h) $(gdbthread_h) $(regcache_h) $(BFD_SRC)/elf-bfd.h 
@


1.228
log
@Configury changes to enable recently added AIX thread support.
@
text
@a427 3
	"CHILLFLAGS=$(CHILLFLAGS)" \
	"CHILL=$(CHILL)" \
	"CHILL_LIB=$(CHILL_LIB)" \
d477 19
a495 19
CHILLFLAGS = $(CFLAGS)
CHILL = gcc
CHILL_FOR_TARGET = ` \
  if [ -f $${rootme}/../gcc/Makefile ] ; then \
    echo $${rootme}/../gcc/xgcc -B$${rootme}/../gcc/ -L$${rootme}/../gcc/ch/runtime/; \
  else \
    if [ "$(host_canonical)" = "$(target_canonical)" ] ; then \
      echo $(CC); \
    else \
      t='$(program_transform_name)'; echo gcc | sed -e '' $$t; \
    fi; \
  fi`
CHILL_LIB = ` \
  if [ -f $${rootme}/../gcc/ch/runtime/libchill.a ] ; then \
    echo $${rootme}/../gcc/ch/runtime/chillrt0.o \
      $${rootme}/../gcc/ch/runtime/libchill.a; \
  else \
      echo -lchill; \
  fi`
a505 4
	"CHILLFLAGS=$(CHILLFLAGS)" \
	'CHILL=$$(CHILL_FOR_TARGET)' \
	"CHILL_FOR_TARGET=$(CHILL_FOR_TARGET)" \
	"CHILL_LIB=$(CHILL_LIB)" \
d523 1
a523 1
	ch-exp.c ch-lang.c ch-typeprint.c ch-valprint.c coffread.c \
d693 1
a693 1
	c-lang.h ch-lang.h f-lang.h \
d746 1
a746 1
	c-lang.o ch-exp.o ch-lang.o f-lang.o \
d752 2
a753 2
	c-typeprint.o ch-typeprint.o f-typeprint.o m2-typeprint.o \
	c-valprint.o cp-valprint.o ch-valprint.o f-valprint.o m2-valprint.o \
d1208 1
a1208 1
unexport CHILLFLAGS CHILL_LIB CHILL_FOR_TARGET :
d1363 2
a1364 2
ch-exp.o: ch-exp.c ch-lang.h $(defs_h) $(language_h) $(parser_defs_h) \
	$(bfd_h) $(symfile_h) $(objfiles_h) $(value_h)
d1366 2
a1367 2
ch-lang.o: ch-lang.c ch-lang.h $(defs_h) $(expression_h) $(gdbtypes_h) \
	$(language_h) $(parser_defs_h) $(symtab_h)
d1369 7
a1375 7
ch-typeprint.o: ch-typeprint.c $(defs_h) $(gdb_obstack_h) $(bfd_h) \
	$(symtab_h) $(gdbtypes_h) $(expression_h) $(value_h) $(gdbcore_h) \
	$(target_h) $(language_h) $(ch_lang_h) $(typeprint_h) $(gdb_string_h)

ch-valprint.o: ch-valprint.c $(defs_h) $(gdb_obstack_h) $(symtab_h) \
	$(gdbtypes_h) $(valprint_h) $(expression_h) $(value_h) $(language_h) \
	$(demangle_h) $(c_lang_h) $(typeprint_h) $(ch_lang_h) $(annotate_h)
@


1.227
log
@2002-07-30  Andrew Cagney  <ac131313@@redhat.com>

* symtab.h: Replace #include "gdb_obstack.h" with opaque
declaration.
* cli/cli-cmds.c, cli/cli-script.c: Include "gdb_string.h".
* gnu-v3-abi.c, arc-tdep.c, cli/cli-decode.c: Ditto.
* avr-tdep.c, mon960-rom.c, i960-tdep.c: Ditto.
* arch-utils.c, cli/cli-setshow.c: Unconditionally include
"gdb_string.h".
* Makefile.in (cli-script.o, cli-cmds.o): Update dependencies.
(gnu-v3-abi.o, cli-setshow.o, i960-tdep.o): Ditto.
(cli-decode.o, mi-cmd-var.o, mi-cmd-disas.o): Ditto.
(avr-tdep.o, mon960-rom.o): Ditto.
(aout_stabs_gnu_h): Define.
(symtab_h): Remove $(gdb_obstack_h).
@
text
@d1218 1
d1279 4
d2090 2
a2091 1
	$(gdb_stabs_h) $(regcache_h) $(arch_utils_h)
@


1.226
log
@2002-07-29  Andrew Cagney  <ac131313@@redhat.com>

* gdb_obstack.h: New file.
* symtab.h: Include "gdb_obstack.h" instead of "obstack.h".
(obstack_chunk_alloc, obstack_chunk_free): Delete macros.
* objfiles.h: Include "gdb_obstack.h".
* Makefile.in (gdb_obstack_h): Define.
(symtab_h): Add $(gdb_obstack_h).
(objfiles_h): Add $(gdb_obstack_h).

* objfiles.c: Include "gdb_obstack.h" instead of "obstack.h".
* macrotab.c, cp-valprint.c, dbxread.c: Ditto.
* ch-typeprint.c, ch-valprint.c, dstread.c: Ditto.
* macroexp.c, p-typeprint.c, stabsread.c: Ditto.
* symtab.c, f-typeprint.c, mdebugread.c: Ditto.
* p-valprint.c, symmisc.c, typeprint.c: Ditto.
* symfile.c, coffread.c, c-typeprint.c: Ditto.
* buildsym.c, bcache.c, ada-typeprint.c: Ditto.

* Makefile.in (bcache.o): Update dependencies.
(buildsym.o, c-typeprint.o, ch-typeprint.o): Ditto.
(ch-valprint.o, coffread.o, cp-valprint.o): Ditto.
(dbxread.o, dstread.o, f-typeprint.o): Ditto.
(objfiles.o, p-typeprint.o, p-valprint.o): Ditto.
(stabsread.o, symfile.o, symmisc.o): Ditto.
(symtab.o, typeprint.o, macroexp.o): Ditto.
(macrotab.o, mdebugread.o): Ditto.
(f_lang_h, coff_sym_h, coff_symconst_h): Define.
(coff_ecoff_h, aout_aout64_h): Define.
(aout_stabs_gnu_h, libaout_h): Define.
@
text
@d571 1
d673 1
a673 1
symtab_h =	symtab.h $(gdb_obstack_h)
d1320 1
a1320 1
	$(symfile_h) $(regcache_h) $(arch_utils_h)
d1629 2
a1630 1
gnu-v3-abi.o: gnu-v2-abi.c $(defs_h) $(value_h) $(cp_abi_h) $(demangle_h)
d1701 2
a1702 3
i960-tdep.o: i960-tdep.c $(floatformat_h) $(defs_h) $(expression_h) \
	$(frame_h) $(gdbtypes_h) $(symtab_h) $(value_h) $(gdbcore_h) \
	$(regcache_h)
d2133 3
a2135 2
mon960-rom.o: mon960-rom.c $(monitor_h) $(bfd_h) $(gdb_wait_h) $(defs_h) \
	$(gdbcmd_h) $(inferior_h) $(target_h) $(serial_h) $(terminal_h)
d2363 4
a2366 3
cli-cmds.o: $(srcdir)/cli/cli-cmds.c  $(cli_cmds_h) $(cli_decode_h) \
		$(cli_script_h) $(cli_setshow_h) $(top_h) $(completer_h) \
		 $(defs_h) $(target_h) $(gdb_wait_h) $(gdb_regex_h) $(ui_out_h)
d2369 3
a2371 3
cli-decode.o: $(srcdir)/cli/cli-decode.c $(cli_decode_h) \
		$(cli_cmds_h) $(defs_h) $(ui_out_h) \
		$(symtab_h) $(gdb_regex_h)
d2378 3
a2380 3
cli-setshow.o: $(srcdir)/cli/cli-setshow.c $(cli_setshow_h) \
		$(cli_decode_h) $(cli_cmds_h) $(defs_h) \
		$(value_h) $(ui_out_h)
d2383 3
a2385 3
cli-script.o: $(srcdir)/cli/cli-script.c $(cli_script_h) \
		$(cli_cmds_h) $(cli_decode_h) $(top_h) \
		$(defs_h) $(value_h) $(language_h) $(ui_out_h)
d2405 2
a2406 2
mi-cmd-var.o: $(srcdir)/mi/mi-cmd-var.c $(defs_h) $(top_h) $(mi_cmds_h) \
		$(ui_out_h) $(varobj_h)
d2415 2
a2416 2
mi-cmd-disas.o: $(srcdir)/mi/mi-cmd-disas.c $(defs_h) $(mi_cmds_h) \
		$(ui_out_h) $(value_h) $(target_h)
@


1.225
log
@2002-07-26  Andrew Cagney  <ac131313@@redhat.com>

* z8k-tdep.c: Do not include "obstack.h".
* h8300-tdep.c, h8500-tdep.c: Ditto.
* m68hc11-tdep.c, sh-tdep.c: Ditto.
* valprint.c, v850-tdep.c: Ditto.
* d10v-tdep.c, mn10300-tdep.c: Ditto.
* mn10200-tdep.c: Ditto.

* Makefile.in (z8k-tdep.o): Update dependencies.
(m68hc11-tdep.o, valprint.o): Ditto.
(v850-tdep.o, d10v-tdep.o): Ditto.
(mn10300-tdep.o, sparc-tdep.o): Ditto.
(sh-tdep.o, h8500-tdep.o, h8300-tdep.o): Ditto.
(m32r-tdep.o, mn10200-tdep.o): Specify dependencies.
(sh_opc_h, gdb_sim_sh_h): Define.
(elf_sh_h, elf_bfd_h): Define.
(opcode_m68hc11_h): Define.
(OPCODES_SRC, OPCODES_DIR): define.
(OPCODES): Use $(OPCODES_DIR).
(gdb_sim_d10v_h): Rename sim_d10v_h.
(gdb_sim_arm_h): Rename sim_arm_h.
@
text
@d570 1
d575 3
d581 1
d632 1
d637 1
d658 1
a658 1
objfiles_h =	objfiles.h
d672 1
a672 1
symtab_h =	symtab.h
d1321 1
a1321 1
bcache.o: bcache.c $(bcache_h) $(defs_h)
d1331 4
a1334 5
buildsym.o: buildsym.c $(bfd_h) $(buildsym_h) $(complaints_h) $(defs_h) \
	$(objfiles_h) $(symfile_h) $(symtab_h) $(gdb_string_h) \
	$(obstack_h) $(symtab_h) $(gdbtypes_h) $(expression_h) \
	$(language_h) $(bcache_h) $(filenames_h) $(stabsread_h) \
	$(macrotab_h)
d1343 4
a1346 3
c-typeprint.o: c-typeprint.c $(c_lang_h) $(defs_h) $(expression_h) \
	$(gdbcmd_h) $(gdbcore_h) $(gdbtypes_h) $(language_h) $(symtab_h) \
	$(target_h) $(typeprint_h) $(value_h) $(gdb_string_h) $(cp_abi_h)
d1357 3
a1359 3
f-typeprint.o: f-typeprint.c f-lang.h $(defs_h) $(expression_h) \
	$(gdbcmd_h) $(gdbcore_h) $(gdbtypes_h) $(language_h) $(symtab_h) \
	$(target_h) $(typeprint_h) $(value_h) $(gdb_string_h)
d1370 7
a1376 6
ch-typeprint.o: ch-typeprint.c ch-lang.h $(defs_h) $(expression_h) \
	$(gdbcmd_h) $(gdbcore_h) $(gdbtypes_h) $(language_h) $(symtab_h) \
	$(target_h) $(value_h) $(typeprint_h) $(gdb_string_h)

ch-valprint.o: ch-valprint.c $(defs_h) $(expression_h) $(gdbtypes_h) \
	$(language_h) $(symtab_h) $(valprint_h) $(value_h) $(c_lang_h)
d1380 5
a1384 4
coffread.o: coffread.c $(bfd_h) $(breakpoint_h) $(buildsym_h) \
	$(complaints_h) $(defs_h) $(expression_h) $(gdbtypes_h) $(objfiles_h) \
	$(symfile_h) $(symtab_h) $(gdb_stabs_h) $(stabsread_h) $(target_h) \
	$(gdb_string_h)
d1416 4
a1419 2
cp-valprint.o: cp-valprint.c $(defs_h) $(expression_h) $(gdbcmd_h) \
	$(gdbtypes_h) $(symtab_h) $(value_h) $(gdb_string_h) $(cp_abi_h)
d1429 5
a1433 5
dbxread.o: dbxread.c $(breakpoint_h) $(buildsym_h) $(command_h) \
	$(complaints_h) $(defs_h) $(expression_h) $(gdb_stabs_h) $(gdbcore_h) \
	$(gdbtypes_h) $(language_h) $(objfiles_h) \
	$(stabsread_h) $(symfile_h) $(symtab_h) $(target_h) $(gdb_string_h) \
	$(cp_abi_h)
d1445 3
a1447 1
dstread.o: dstread.c $(gdb_string_h)
d1780 8
a1787 6
p-typeprint.o: p-typeprint.c p-lang.h $(defs_h) $(expression_h) \
	$(gdbcmd_h) $(gdbcore_h) $(gdbtypes_h) $(language_h) $(symtab_h) \
	$(target_h) $(typeprint_h) $(value_h) $(gdb_string_h)

p-valprint.o: p-valprint.c p-lang.h $(defs_h) $(expression_h) $(gdbtypes_h) \
	$(language_h) $(symtab_h) $(valprint_h) $(value_h) $(gdb_string_h)
d1817 6
a1822 4
mdebugread.o: mdebugread.c $(buildsym_h) $(complaints_h) $(bfd_h) $(defs_h) \
	$(expression_h) $(gdb_stabs_h) $(gdbcore_h) $(gdbtypes_h) \
	$(language_h) $(objfiles_h) $(stabsread_h) \
	$(symfile_h) $(symtab_h) $(gdb_string_h)
d1905 3
a1907 2
objfiles.o: objfiles.c $(bfd_h) $(defs_h) $(objfiles_h) $(symfile_h) \
	$(symtab_h) $(gdb_string_h) $(breakpoint_h) $(bcache_h)
d2181 5
a2185 4
stabsread.o: stabsread.c $(bfd_h) $(INCLUDE_DIR)/aout/stab.def \
	$(INCLUDE_DIR)/aout/stab_gnu.h $(buildsym_h) $(complaints_h) \
	$(defs_h) $(gdbtypes_h) $(objfiles_h) $(stabsread_h) $(symfile_h) \
	$(symtab_h) $(gdb_string_h) $(doublest_h)
d2201 5
a2205 4
symfile.o: symfile.c $(breakpoint_h) $(complaints_h) $(defs_h) \
	$(expression_h) $(gdb_stabs_h) $(gdbcmd_h) $(gdbcore_h) \
	$(gdbtypes_h) $(language_h) $(objfiles_h) $(symfile_h) $(symtab_h) \
	$(target_h) $(gdb_string_h) $(completer_h) $(bcache_h)
d2211 10
a2220 8
symmisc.o: symmisc.c $(bfd_h) $(breakpoint_h) $(command_h) $(defs_h) \
	$(expression_h) $(gdbtypes_h) $(language_h) $(objfiles_h) \
	$(symfile_h) $(symtab_h) $(gdb_string_h)

symtab.o: symtab.c $(call_cmds_h) $(defs_h) $(expression_h) $(frame_h) \
	$(gdbcmd_h) $(gdbcore_h) $(gdbtypes_h) $(language_h) $(objfiles_h) \
	$(gdb_regex_h) $(symfile_h) $(symtab_h) $(target_h) $(value_h) \
	$(gdb_string_h) $(linespec_h) $(cp_abi_h)
d2226 2
a2227 1
macroexp.o: macroexp.c $(defs_h) $(macrotab_h)
d2229 3
a2231 2
macrotab.o: macrotab.c $(defs_h) $(obstack_h) $(objfiles_h) $(symtab_h) \
	$(macrotab_h) $(splay_tree_h) gdb_assert.h $(bcache_h)
d2255 3
a2257 3
typeprint.o: typeprint.c $(defs_h) $(expression_h) $(gdbcmd_h) \
	$(gdbcore_h) $(gdbtypes_h) $(language_h) $(symtab_h) $(target_h) \
	$(value_h) $(gdb_string_h) $(cp_abi_h)
@


1.224
log
@Configury changes for IRIX shared library support and IRIX OSABI support.
@
text
@d214 3
a216 1
OPCODES = ../opcodes/libopcodes.a
d575 2
d580 5
a584 2
sim_arm_h =	$(INCLUDE_DIR)/gdb/sim-arm.h
sim_d10v_h =	$(INCLUDE_DIR)/gdb/sim-d10v.h
d1413 4
a1416 5
d10v-tdep.o: d10v-tdep.c $(defs_h) $(frame_h) $(obstack_h) $(symtab_h) \
	$(gdbtypes_h) $(gdbcmd_h) $(gdbcore_h) $(gdb_string_h) $(value_h) \
	$(inferior_h) $(dis-asm_h) $(symfile_h) $(objfiles_h) $(language_h) \
	$(arch_utils_h) $(regcache_h) $(floatformat_h) $(sim_d10v_h) \
	$(sim_regno_h)
d1579 3
a1581 3
v850-tdep.o: v850-tdep.c $(defs_h) $(frame_h) $(inferior_h) $(obstack_h) \
	$(target_h) $(value_h) $(bfd_h) $(gdb_string_h) $(gdbcore_h) \
	$(symfile_h) $(arch_utils_h) $(regcache_h)
d1617 3
a1619 1
h8300-tdep.o: h8300-tdep.c $(defs_h) $(frame_h) $(symtab_h) $(regcache_h)
d1621 2
a1622 3
h8500-tdep.o: h8500-tdep.c $(bfd_h) $(dis_asm_h) $(defs_h) \
	$(expression_h) $(frame_h) $(gdbcmd_h) $(gdbtypes_h) $(symtab_h) \
	$(value_h) $(regcache_h)
d1760 4
d1774 4
a1777 2
m68hc11-tdep.o: m68hc11-tdep.c $(defs_h) $(frame_h) $(symtab_h) $(value_h) \
	$(gdbcore_h) $(gdb_string_h)
d1855 7
a1861 3
mn10300-tdep.o: mn10300-tdep.c $(defs_h) $(frame_h) $(inferior_h) \
	$(obstack_h) $(target_h) $(value_h) $(bfd_h) $(gdb_string_h) \
	$(gdbcore_h) $(symfile_h) $(regcache_h) $(arch-utils.h)
d2096 5
a2100 4
sh-tdep.o: sh-tdep.c $(bfd_h) $(dis_asm_h) \
	$(srcdir)/../opcodes/sh-opc.h $(defs_h) $(expression_h) $(frame_h) \
	$(gdbcmd_h) $(gdbtypes_h) $(symtab_h) $(value_h) $(arch_utils_h) \
	$(regcache_h) $(doublest_h) $(sh_tdep_h)
d2142 3
a2144 3
sparc-tdep.o: sparc-tdep.c $(floatformat_h) $(defs_h) $(gdbcore_h) \
	$(inferior_h) $(objfiles_h) $(symfile_h) $(target_h) $(gdb_string_h) \
	$(arch_utils_h) $(regcache_h) osabi.h
d2246 4
a2249 3
valprint.o: valprint.c $(defs_h) $(expression_h) $(gdbcmd_h) \
	$(gdbcore_h) $(gdbtypes_h) $(language_h) $(symtab_h) $(target_h) \
	$(value_h) $(gdb_string_h) $(valprint_h) $(doublest_h)
d2296 2
a2297 3
z8k-tdep.o: z8k-tdep.c $(bfd_h) $(dis_asm_h) $(defs_h) $(frame_h) \
	$(gdbcmd_h) $(gdbtypes_h) $(symtab_h) $(gdbcore_h) $(value_h) \
	$(regcache_h)
@


1.223
log
@Obsolete m88k.
@
text
@d1228 1
d1248 1
a1248 1
	solib.c solib-svr4.c solib-sunos.c sparc-linux-nat.c \
d1821 2
d2102 3
@


1.222
log
@* Makefile.in (x86-64-tdep.o): Add $(objfiles_h).
* x86-64-tdep.c: Include "objfiles.h".
(x86_64_gdbarch_init): Set in_solib_call_trampoline to
in_plt_section.  From 2002-07-18 Michal Ludvig <mludvig@@suse.cz>.
@
text
@a1224 1
	m88k-nat.c m88k-tdep.c \
d1238 1
a1238 1
	remote-array.c remote-bug.c remote-e7000.c \
a1772 4
m88k-nat.o: m88k-nat.c $(defs_h) $(gdbcore_h) $(inferior_h) $(regcache_h)

m88k-tdep.o: m88k-tdep.c $(defs_h) $(gdbcore_h) $(inferior_h) $(regcache_h)

a1974 4

remote-bug.o: remote-bug.c $(defs_h) $(gdbcore_h) $(serial_h) \
	$(inferior_h) $(target_h) $(terminal_h) $(remote_utils_h) \
	$(gdb_string_h) $(regcache_h)
@


1.221
log
@* Makefile.in (x86-64-linux-nat.o): Remove dependency on i387-tdep.h
@
text
@d2245 3
a2247 3
x86-64-tdep.o : x86-64-tdep.c $(defs_h) $(inferior_h) $(gdbcore_h) $(gdbcmd_h) \
	$(arch_utils_h) $(regcache_h) $(symfile_h) x86-64-tdep.h i386-tdep.h \
	$(dwarf2cfi_h) $(gdb_assert_h)
@


1.220
log
@Obsolete i[3456]86-*-os9k.
@
text
@d2250 1
a2250 1
	$(gdbcore_h) $(regcache_h) i387-tdep.h $(gdb_assert_h) x86-64-tdep.h \
@


1.219
log
@* bcache.h: Update copyright.
(struct bstring, struct bcache): Move definition to "bcache.c".
Replaced by opaque declaration.
(bcache_xfree): Replace free_bcache.
(bcache_xmalloc, bcache_memory_used): Declare.

* bcache.c: Update copyright.
(struct bstring, struct bcache): Moved to here from "bcache.h".
Update comments.
(bcache_xmalloc, bcache_memory_used): New functions.
(bcache_xfree): Replace function free_bcache.

* Makefile.in (objfiles.o): Add $(bcache_h).
(objfiles_h): Remove $(bcache_h).
(symfile.o): Add $(bcache_h).

* symmisc.c: Update copyright.
(print_symbol_bcache_statistics): Pass psymbol_cache by value.
(print_objfile_statistics): Use bcache_memory_used.

* symfile.c: Include "bcache.h".
(reread_symbols): Use bcache_xfree.
(reread_symbols): Use bcache_xmalloc and bcache_xfree.
(add_psymbol_to_list): Pass psymbol_cache by value.
(add_psymbol_with_dem_name_to_list): Ditto.

* objfiles.h: Update copyright.
(struct bcache): Declare opaque.  Do not include "bcache.h".
(struct objfile): Change psymbol_cache and macro_cache to ``struct
bcache'' pointers.
* dwarf2read.c (macro_start_file): Pass macro_cache by value.

* objfiles.c: Include "bcache.h".  Update copyright.
(allocate_objfile): Use bcache_xmalloc to create psymbol_cache and
macro_cache.
(free_objfile): Use bcache_xfree.
@
text
@d547 1
a547 1
	serial.c ser-unix.c mdebugread.c os9kread.c \
d746 1
a746 1
	nlmread.o serial.o mdebugread.o os9kread.o top.o utils.o \
d1241 1
a1241 1
	remote-nindy.c remote-os9k.c remote-rdp.c remote-sim.c \
d1800 8
a1807 8
# os9kread assumes that sizeof(char*) <= sizeof(int).  This looses on
# 64 bit targets where often, sizeof(int)=4 but sizeof(char*)=9.
os9kread.o: os9kread.c $(buildsym_h) $(complaints_h) $(bfd_h) $(defs_h) \
	        $(expression_h) $(gdb_stabs_h) $(gdbcore_h) $(gdbtypes_h) \
		$(language_h) $(objfiles_h) $(stabsread_h) $(symfile_h) \
		$(symtab_h) $(target_h) $(gdb_string_h)
	$(CC) -c $(INTERNAL_WARN_CFLAGS) $(NO_WERROR_CFLAGS) \
		$(srcdir)/os9kread.c
d2007 3
a2009 3
remote-os9k.o: remote-os9k.c $(defs_h) $(gdbcore_h) \
	$(command_h) $(monitor_h) $(remote_utils_h) $(symtab_h) $(symfile_h) \
	$(objfiles_h) $(gdb_stabs_h) $(gdb_string_h) $(regcache_h)
@


1.218
log
@* infcmd.c (print_return_value): Remove compatibility code calling
deprecated_grub_regcache_for_registers.

* values.c: Include "regcache.h".
(value_being_returned): Update.  Use
deprecated_grub_regcache_for_registers to extract the register
buffer address.
* value.h (value_being_returned): Change ``retbuf'' parameter to a
``struct regcache''.
* Makefile.in (values.o): Add dependency on $(regcache_h).

* inferior.h (run_stack_dummy): Change type of second parameter to
a ``struct regcache''.
* valops.c (hand_function_call): Change type of retbuf to ``struct
regcache''.  Allocate using regcache_xmalloc, clean using
make_cleanup_regcache_xfree.
* infcmd.c (run_stack_dummy): Update.  Use
regcache_cpu_no_passthrough instead of memcpy to copy the buffer.

* regcache.c (do_regcache_xfree): New function.
(make_cleanup_regcache_xfree): New function.
* regcache.h (make_cleanup_regcache_xfree): Declare.
@
text
@d644 1
a644 1
objfiles_h =	objfiles.h $(bcache_h)
d1874 1
a1874 1
	$(symtab_h) $(gdb_string_h) $(breakpoint_h)
d2170 1
a2170 1
	$(target_h) $(gdb_string_h) $(completer_h)
@


1.217
log
@* macrotab.h: Do not include "obstack.h" or "bcache.h".
(struct obstack, struct bcache): Add opaque declarations.
* Makefile.in (macrotab_h): Update
@
text
@d2237 1
a2237 1
	$(gdb_string_h) scm-lang.h $(doublest_h)
@


1.216
log
@* Makefile.in (objfiles_h): Add $(bcache_h).
* objfiles.h: Include "bcache.h".

* Makefile.in (symtab_h): Remove $(bcache_h).
* symtab.h: Do not include "bcache.h".
@
text
@d640 1
a640 1
macrotab_h =    macrotab.h $(obstack_h) $(bcache_h)
@


1.215
log
@* Makefile.in (init.c): Drop -e option to grep.  Not necessary and
Solaris /bin/grep does not not like it.  From Peter Schauer.
@
text
@d644 1
a644 1
objfiles_h =	objfiles.h
d658 1
a658 1
symtab_h =	symtab.h $(bcache_h)
@


1.214
log
@* Makefile.in (vax_tdep_h): Define.
(vax-tdep.o): Use $(vax_tdep_h).
* vax-tdep.c (vax_gdbarch_init): Use generic OS ABI framework.
(vax_dump_tdep): New function.
(_initialize_vax_tdep): Register vax_dump_tdep.
* vax-tdep.h: Include osabi.h.
(struct gdbarch_tdep): New.
@
text
@d879 1
a879 1
	( echo _initialize_gdbtypes ; grep -v -e '^_initialize_gdbtypes$$' ) > init.l-tmp
@


1.213
log
@* infrun.c (stop_registers): Change variable's type to ``struct
regcache'''.
(xmalloc_inferior_status): Delete function.
(free_inferior_status): Delete function.
(normal_stop): Use regcache_cpy.
(struct inferior_status): Change type of fields ``stop_registers''
and ``registers'' to ``struct regcache''.
(write_inferior_status_register): Use regcache_write.
(save_inferior_status): Instead of calling
xmalloc_inferior_status, allocate the inf_status buffer directly.
Use regcache_dup_no_passthrough and regcache_dup to save the
buffers.
(restore_inferior_status): Use regcache_xfree and regcache_cpy.
Replace the stop_registers regcache instead of overriding it.  Use
regcache_xfree.  Instead of calling free_inferior_status, xfree
the buffer directly.
(discard_inferior_status): Use regcache_xfree.  Instead of calling
free_inferior_status, xfree the buffer directly.
(build_infrun): Use regcache_xmalloc.
(_initialize_infrun): Delete redundant call to build_infrun.
* Makefile.in (infcmd.o): Add $(regcache_h).
* infcmd.c: Include "regcache.h".
(run_stack_dummy): Use deprecated_grub_regcache_for_registers to
obtain the address of `stop_registers' register buffer.
(print_return_value): Ditto.
* inferior.h (struct regcache): Add opaque declaration.
(stop_registers): Change variable's declared type to ``struct
regcache''.
@
text
@d668 1
d2240 1
a2240 1
	$(arch_utils_h) $(inferior_h) vax-tdep.h
@


1.212
log
@	* Makefile.in (HFILES_NO_SRCDIR): Remove old files.
	(ALLDEPFILES): Likewise.
	(udiheaders): Removed.
	(udip2soc.o): Likewise.
	(udi2go32.o): Likewise.
	(udr.o): Likewise.
	(HFILES_WITH_SRCDIR): Don't mention udiheaders.
@
text
@d1693 1
a1693 1
	$(ui_out_h) $(completer_h)
@


1.211
log
@	* gdb_locale.h: New file.
	* Makefile.in (GDB_CFLAGS): Define LOCALEDIR.
	(defs_h): Added gdb_locale.h.
	* configure, config.in: Rebuilt.
	* configure.in (PACKAGE): Define.
	* defs.h: Include gdb_locale.h.
	* main.c (captured_main): Call setlocale, bindtextdomain,
@
text
@a585 8
udiheaders = \
	$(srcdir)/29k-share/udi/udiproc.h \
	$(srcdir)/29k-share/udi/udiphcfg.h \
	$(srcdir)/29k-share/udi/udiphunix.h \
	$(srcdir)/29k-share/udi/udiptcfg.h \
	$(srcdir)/29k-share/udi/udipt29k.h \
	$(srcdir)/29k-share/udi/udisoc.h

d688 1
a688 1
	29k-share/udi/udiids.h 29k-share/udi_soc nindy-share/b.out.h \
d698 1
a698 1
HFILES_WITH_SRCDIR = $(udiheaders) ../bfd/bfd.h
d1201 1
a1201 3
ALLDEPFILES = 29k-share/udi/udip2soc.c 29k-share/udi/udr.c \
	29k-share/udi/udi2go32.c \
	a29k-tdep.c a68v-nat.c \
d1224 1
a1224 1
	m88k-nat.c m88k-tdep.c mac-nat.c \
d1238 1
a1238 1
	remote-adapt.c remote-array.c remote-bug.c remote-e7000.c remote-eb.c \
d1240 1
a1240 1
	remote-mm.c remote-nindy.c remote-os9k.c remote-rdp.c remote-sim.c \
d1242 1
a1242 1
	remote-udi.c remote-vx.c remote-vx29k.c \
a1257 9

udip2soc.o: $(srcdir)/29k-share/udi/udip2soc.c $(udiheaders)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/29k-share/udi/udip2soc.c

udi2go32.o: $(srcdir)/29k-share/udi/udi2go32.c $(udiheaders)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/29k-share/udi/udi2go32.c

udr.o: $(srcdir)/29k-share/udi/udr.c $(udiheaders) 
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/29k-share/udi/udr.c
@


1.210
log
@2002-06-21  Dave Brolley  <brolley@@redhat.com>

	From Stan Shebs, Jim Blandy, Mark Salter, Kevin Buettner:
	* config/frv/frv.mt: New file.
	* config/frv/tm-frv.h: New file.
	* configure.tgt: Support frv-*-*.
	* Makefile.in (frv-tdep.o): New target.
	* frv-tdep.c: New file.
	* NEWS: Mention frv.
@
text
@d315 1
a315 1
GDB_CFLAGS = -I. -I$(srcdir) -I$(srcdir)/config $(DEFS)
d622 1
a622 1
		gdbarch.h ui-file.h $(INCLUDE_DIR)/gdb/signals.h
@


1.209
log
@* Makefile.in (i386_linux_tdep_h): Define.
(i386_tdep_h, i387_tdep_h): Define.
(i386-linux-nat.o): Add $(i386_linux_tdep_h),
$(i386_tdep_h) and $(i387_tdep_h).
* i386-linux-nat.c: Include "i386-linux-tdep.h".
@
text
@d1490 3
@


1.208
log
@Add the file include/gdb/sim-arm.h defining an enum that specifies the
register numbering used by the GDB<->SIM interface.
@
text
@d640 3
d1683 2
a1684 1
	$(symtab_h) $(symfile_h) $(objfiles_h) $(regcache_h)
@


1.207
log
@Force gdbarch.c to be initialized first.
@
text
@d576 1
d1311 1
a1311 1
	$(INCLUDE_DIR)/elf/arm.h 
@


1.206
log
@Move include/callback.h and include/remote-sim.h to include/gdb/.
Update accordingly.
@
text
@d847 10
a856 1
#
d881 2
a882 1
	sed -e 's/^.*://' -e 's/^\([a-z_0-9A-Z]*\).*/\1/' > init.l-tmp
@


1.205
log
@* Makefile.in (ALLDEPFILES): Add sparc64nbsd-nat.c,
sparcnbsd-nat.c, and sparcnbsd-tdep.c.
(sparc64nbsd-nat.o)
(sparcnbsd-nat.o)
(sparcnbsd-tdep.o): New dependency lists.
* NEWS: Note new UltraSPARC NetBSD native configuration.
* configure.host (sparc64-*-netbsd*): New host.
* configure.tgt (sparc-*-netbsdelf*)
(sparc-*-netbsd*): Set gdb_target to nbsd.
(sparc64-*-netbsd*): New target.
* sparc64nbsd-nat.c: New file.
* sparcnbsd-nat.c: New file.
* sparcnbsd-tdep.c: New file.
* sparcnbsd-tdep.h: New file.
* config/sparc/nbsd.mt: New file.
* config/sparc/nbsd64.mh: New file.
* config/sparc/nbsd64.mt: New file.
* config/sparc/nbsdaout.mh (NATDEPFILES): Remove corelow.o,
sparc-nat.o, and solib.o.  Add sparcnbsd-nat.o.
(HOST_IPC): Remove.
* config/sparc/nbsdaout.mt: Remove.
* config/sparc/nbsdelf.mh (NATDEPFILES): Remove corelow.o,
sparc-nat.o, and solib.o.  Add sparcnbsd-nat.o.
(HOST_IPC): Remove.
* config/sparc/nbsdelf.mt: Remove.
* config/sparc/nm-nbsd.h: Update copyright years.  Remove all
sparc-nat.c compatiblity defines.
* config/sparc/tm-nbsd.h: Update copyright years.  Include solib.h.
(GDB_MULTI_ARCH): Set to GDB_MULTI_ARCH_PARTIAL.
* config/sparc/tm-nbsd64.h: New file.
* config/sparc/tm-nbsdaout.h: Remove.
* config/sparc/xm-nbsd.h: Remove.
@
text
@d571 1
d573 1
a573 1
remote_sim_h =	$(INCLUDE_DIR)/remote-sim.h
d1979 1
a1979 1
	$(inferior_h) $(gdb_string_h) $(arm_tdep_h)
d2016 1
a2016 1
	$(terminal_h) $(target_h) $(gdbcore_h) $(INCLUDE_DIR)/callback.h \
@


1.204
log
@* Makefile.in (sparc-tdep.o): Add osabi.h to dependency list.
* sparc-tdep.c: Include osabi.h.
(gdbarch_tdep): Add osabi member.
(_initialize_sparc_tdep): Use gdbarch_register.
(sparc_gdbarch_init): Use generic OS ABI framework.
(sparc_dump_tdep): New function.
@
text
@d1244 1
d2131 10
@


1.203
log
@* Makefile.in (ppc_tdep_h): Define.
(ppc-linux-nat.o)
(ppc-linux-tdep.o)
(rs6000-tdep.o): Use $(ppc_tdep_h).
(ppc-sysv-tdep.o)
(ppcnbsd-nat.o)
(ppcnbsd-tdep.o): New dependency lists.
* ppc-tdep.h: Use generic OS ABI framework.
* ppc-linux-tdep.c (_initialize_ppc_linux_tdep,
ppc_linux_init_abi): New functions.
(ppc_sysv_abi_broken_use_struct_convention)
(ppc_sysv_abi_use_struct_convention)
(ppc_sysv_abi_push_arguments): Move to...
* ppc-sysv-tdep.c: ...here.
* ppcnbsd-nat.c: Don't include gdbcore.h and regcache.h.
* rs6000-tdep.c (process_note_abi_tag_sections)
(get_elfosabi): Remove.
(rs6000_gdbarch_init): Use generic OS ABI framework.
(rs6000_dump_tdep): New function.
(_initialize_rs6000_tdep): Use gdbarch_register.
* config/powerpc/linux.mt (TDEPFILES): Add ppc-sysv-tdep.o.
* config/powerpc/nbsd.mh (NATDEPFILES): Remove solib-legacy.o.
* config/powerpc/aix.mt (TDEPFILES): Use ppc-sysv-tdep.o instead
of ppc-linux-tdep.o.
* config/powerpc/nbsd.mt (TDEPFILES): Likewise.
* config/powerpc/ppc-eabi.mt (TDEPFILES): Likewise.
* config/powerpc/ppc-sim.mt (TDEPFILES): Likewise.
* config/powerpc/ppcle-eabi.mt (TDEPFILES): Likewise.
* config/powerpc/ppcle-sim.mt (TDEPFILES): Likewise.
* config/powerpc/vxworks.mt (TDEPFILES): Likewise.
@
text
@d2127 1
a2127 1
	$(arch_utils_h) $(regcache_h)
@


1.202
log
@* Makefile.in (arch-utils.o): Add $(sim_regno_h).
* arch-utils.c: Include "sim-regno.h".
* gdbarch.sh: Don't include "sim-regno.h".
* gdbarch.h, gdbarch.c: Regenerate.
* sim-regno.h (legacy_register_sim_regno): Move declaration from
here.
* arch-utils.h (legacy_register_sim_regno): To here.
* remote-sim.c (legacy_register_sim_regno): Move function from
here.
* arch-utils.c (legacy_register_sim_regno): To here.
@
text
@d649 1
d1230 2
a1231 1
	ppc-linux-nat.c ppc-linux-tdep.c \
d1906 1
a1906 1
	$(inferior_h) $(target_h) $(regcache_h) ppc-tdep.h
d1909 11
a1919 1
	$(target_h) ppc-tdep.h $(regcache_h) $(value_h)
d2056 1
a2056 1
	$(target_h) ppc-tdep.h $(regcache_h) $(value_h) $(parser_defs_h)
@


1.201
log
@* sim-regno.h: New file.
* Makefile.in (sim_regno_h): Define.
(d10v-tdep.o, remote-sim.o): Add dependency on $(sim_regno_h).
* remote-sim.c: Include "sim-regno.h" and "gdb_assert.h".
(legacy_register_sim_regno): New function.
(one2one_register_sim_regno): New function.
(gdbsim_fetch_register): Rewrite.
(gdbsim_store_register): Only store a register when
REGISTER_SIM_REGNO is valid.
* d10v-tdep.c: Include "sim-regno.h".
(d10v_ts2_register_sim_regno): Add legacy_regiter_sim_regno check.
(d10v_ts3_register_sim_regno): Ditto.
* gdbarch.sh: Include "sim-regno.h".
(REGISTER_SIM_REGNO): Set default to legacy_register_sim_regno.
* gdbarch.h, gdbarch.c: Regenerate.
* arch-utils.h (default_register_sim_regno): Delete declaration.
* arch-utils.c (default_register_sim_regno): Delete function.
@
text
@d1589 1
a1589 1
	$(version_h) $(floatformat_h)
@


1.200
log
@* sim-d10v.h: Delete file.  Moved to include/gdb/.

* sim-d10v.h: New file.  Moved from include/sim-d10v.h.

* Makefile.in (INCLUDE): Add "gdb/sim-d10v.h".
* interp.c: Include "gdb/sim-d10v.h" instead of "sim-d10v.h".

* d10v-tdep.c: Include "gdb/sim-d10v.h" instead of "sim-d10v.h".
* Makefile.in (sim_d10v_h): Update definition.
@
text
@d655 1
d1409 2
a1410 1
	$(arch_utils_h) $(regcache_h) $(floatformat_h) $(sim_d10v_h)
d2003 2
a2004 1
	$(remote_sim_h) $(remote_utils_h) $(command_h) $(regcache_h) 
@


1.200.2.1
log
@Initial check-in of interpreter support from Apple. (Slightly massaged and
modified by me.)
@
text
@d140 2
a141 2
	cli-dump.o cli-decode.o \
	cli-interp.o cli-script.o cli-cmds.o cli-setshow.o cli-utils.o
d143 2
a144 2
	cli/cli-dump.c cli/cli-decode.c \
	cli/cli-interp.c cli/cli-script.c cli/cli-cmds.c cli/cli-setshow.c \
d162 1
a162 1
	mi-cmd-disas.o mi-events.o mi-interp.o \
d168 1
a168 1
	mi/mi-cmd-disas.c mi/mi-events.c mi/mi-interp.c \
d536 1
a536 1
	ui-out.c cli-out.c interps.c \
a639 1
interps_h =	interps.h
d739 1
a739 1
	ui-out.o cli-out.o interps.o \
d1453 1
a1453 1
	$(gdbcmd_h) $(target_h) $(cli_decode_h) $(interps_h)
d2187 1
a2187 1
	$(serial_h) $(interps_h)
d2282 2
a2283 3
cli-out.o: cli-out.c $(defs_h) $(ui_out_h) $(cli_out_h) $(interps_h)
inters.o: interps.c $(defs_h) $(gdbcmd_h) $(ui_out_h) $(event_loop_h) \
		$(event_top_h) $(interps_h) $(gdb_h) $(wrapper_h)
a2308 4
cli-interp.o: $(srcdir)/cli/cli-interp.c $(defs_h) $(interps_h) \
		$(wrapper_h) $(event_top_h) $(ui_out_h) $(cli_out_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/cli/cli-interp.c

a2327 1
mi_h =		$(srcdir)/mi/mi.h
a2348 7
mi-events.o: $(srcdir)/mi/mi-events.c $(defs_h) $(ui_out_h) $(interps_h) \
		$(gdb_h) $(breakpoint_h) $(mi_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/mi/mi-events.c
mi-interp.o: $(srcdir)/mi/mi-interp.c $(defs_h) $(interps_h) \
		$(event_top_h) $(event_loop_h) $(inferior_h) $(ui_out_h) \
		$(top_h) $(mi_h) $(mi_cmds_h) $(mi_out_h) $(mi_console_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/mi/mi-interp.c
@


1.200.2.2
log
@Merge with mainline, kseitz_interps-20020619-merge.
@
text
@a570 1
callback_h =	$(INCLUDE_DIR)/gdb/callback.h
d572 1
a572 1
remote_sim_h =	$(INCLUDE_DIR)/gdb/remote-sim.h
a574 1
sim_arm_h =	$(INCLUDE_DIR)/gdb/sim-arm.h
a637 3
i386_tdep_h =	i386-tdep.h
i386_linux_tdep_h = i386-linux-tdep.h
i387_tdep_h =	i387-tdep.h
a649 1
ppc_tdep_h =	ppc-tdep.h osabi.h
a655 1
sim_regno_h =	sim-regno.h
d845 1
a845 10

# FIXME: cagney/2002-06-09: gdb/564: gdb/563: Force the order so that
# the first call is to _initialize_gdbtypes.  This is a hack to ensure
# that all the architecture dependant global builtin_type_* variables
# are initialized before anything else (per-architecture code is
# called in the same order that it is registered).  The ``correct
# fix'' is to have all the builtin types made part of the architecture
# and initialize them on-demand (using gdbarch_data) just like
# everything else.  The catch is that other modules still take the
# address of these builtin types forcing them to be variables, sigh!
d870 1
a870 2
	sed -e 's/^.*://' -e 's/^\([a-z_0-9A-Z]*\).*/\1/' | \
	( echo _initialize_gdbtypes ; grep -v -e '^_initialize_gdbtypes$$' ) > init.l-tmp
d1229 1
a1229 2
	ppc-sysv-tdep.o ppc-linux-nat.c ppc-linux-tdep.c \
	ppcnbsd-nat.o ppcnbsd-tdep.o \
a1241 1
	sparc64nbsd-nat.c sparcnbsd-nat.c sparcnbsd-tdep.c \
d1296 1
a1296 1
	$(INCLUDE_DIR)/elf/arm.h $(sim_arm_h) $(gdb_assert_h)
d1409 1
a1409 2
	$(arch_utils_h) $(regcache_h) $(floatformat_h) $(sim_d10v_h) \
	$(sim_regno_h)
d1588 1
a1588 1
	$(version_h) $(floatformat_h) $(sim_regno_h)
d1664 1
a1664 2
	$(symtab_h) $(symfile_h) $(objfiles_h) $(regcache_h) \
	$(i386_linux_tdep_h) $(i386_tdep_h) $(i387_tdep_h)
d1903 1
a1903 1
	$(inferior_h) $(target_h) $(regcache_h) $(ppc_tdep_h)
d1906 1
a1906 11
	$(target_h) $(ppc_tdep_h) $(regcache_h) $(value_h)

ppc-sysv-tdep.o: ppc-sysv-tdep.c $(defs_h) $(gdbcore_h) $(inferior_h) \
	$(value_h) $(regcache_h) $(ppc_tdep_h)

ppcnbsd-nat.o: ppcnbsd-nat.c $(defs_h) $(inferior_h) $(ppc_tdep_h) \
	ppcnbsd-tdep.h

ppcnbsd-tdep.o: ppcnbsd-tdep.c $(defs_h) $(gdbcore_h) $(regcache_h) \
	$(target_h) $(breakpoint_h) $(value_h) $(ppc_tdep_t) ppcnbsd-tdep.h \
	nbsd-tdep.h
d1964 1
a1964 1
	$(inferior_h) $(gdb_string_h) $(arm_tdep_h) $(callback_h)
d2001 2
a2002 3
	$(terminal_h) $(target_h) $(gdbcore_h) $(callback_h) \
	$(remote_sim_h) $(remote_utils_h) $(command_h) $(regcache_h) \
	$(sim_regno_h)
d2042 1
a2042 1
	$(target_h) $(ppc_tdep_h) $(regcache_h) $(value_h) $(parser_defs_h)
d2113 1
a2113 1
	$(arch_utils_h) $(regcache_h) osabi.h
a2115 10

sparc64nbsd-nat.o: sparc64nbsd-nat.c $(defs_h) $(inferior_h) $(regcache_h) \
	sparcnbsd-tdep.h

sparcnbsd-nat.o: sparcnbsd-nat.c $(defs_h) $(inferior_h) $(regcache_h) \
	sparcnbsd-tdep.h 

sparcnbsd-tdep.o: sparcnbsd-tdep.c $(defs_h) $(gdbcore_h) $(regcache_h) \
	$(target_h) $(value_h) osabi.h sparcnbsd-tdep.h nbsd-tdep.h \
	solib-svr4.h
@


1.200.2.3
log
@        * Makefile.in (interps.o): Add gdb-events.h as a dependency.

        * gdb-events.sh (clear_gdb_event_hooks): New function.
        * gdb-events.c: Regenerate.
        * gdb-events.h: Regenerate.

        * cli-out.h (cli_out_set_stream): New function.
        * cli-out.c (cli_out_set_stream): New function.

        * interps.c: Include gdb-events.h.
        (clear_interpreter_hooks): Also clear out event handlers.
        (gdb_set_interpreter): Clear out any hooks/event handlers that
        may have been installed by old interpreter.

        * cli/cli-interp.c (cli_interpreter_exec): Set the stream for the
        cli's uiout to gdb_stdout, which has probably changed from it's
        initialization. Restore the original stream when we're done executing
        in the interpreter.
@
text
@d2326 2
a2327 2
interps.o: interps.c $(defs_h) $(gdbcmd_h) $(ui_out_h) $(event_loop_h) \
		$(event_top_h) $(interps_h) $(gdb_h) $(wrapper_h) $(gdb_events_h)
@


1.200.2.4
log
@Merge w/trunk (kseitz_interps-20020722-merge).
@
text
@d315 1
a315 1
GDB_CFLAGS = -I. -I$(srcdir) -I$(srcdir)/config -DLOCALEDIR="\"$(prefix)/share/locale\"" $(DEFS)
d547 1
a547 1
	serial.c ser-unix.c mdebugread.c \
d586 8
d622 1
a622 1
		gdbarch.h ui-file.h $(INCLUDE_DIR)/gdb/signals.h gdb_locale.h
d649 1
a649 1
macrotab_h =    macrotab.h
d667 1
a667 1
symtab_h =	symtab.h
a676 1
vax_tdep_h =	vax-tdep.h osabi.h
d697 1
a697 1
	nindy-share/b.out.h \
d707 1
a707 1
HFILES_WITH_SRCDIR = ../bfd/bfd.h
d754 1
a754 1
	nlmread.o serial.o mdebugread.o top.o utils.o \
d887 1
a887 1
	( echo _initialize_gdbtypes ; grep -v '^_initialize_gdbtypes$$' ) > init.l-tmp
d1210 3
a1212 1
ALLDEPFILES = a68v-nat.c \
d1235 1
a1235 1
	m88k-nat.c m88k-tdep.c \
d1249 1
a1249 1
	remote-array.c remote-bug.c remote-e7000.c \
d1251 1
a1251 1
	remote-nindy.c remote-rdp.c remote-sim.c \
d1253 1
a1253 1
	remote-vx.c \
d1270 9
a1490 3
frv-tdep.o: frv-tdep.c $(defs_h) $(inferior_h) $(symfile_h) $(gdbcore_h) \
	$(arch_utils_h) $(regcache_h)

d1710 1
a1710 1
	$(ui_out_h) $(completer_h) $(regcache_h)
d1816 8
a1823 8
# OBSOLETE # os9kread assumes that sizeof(char*) <= sizeof(int).  This looses on
# OBSOLETE # 64 bit targets where often, sizeof(int)=4 but sizeof(char*)=9.
# OBSOLETE os9kread.o: os9kread.c $(buildsym_h) $(complaints_h) $(bfd_h) $(defs_h) \
# OBSOLETE 	        $(expression_h) $(gdb_stabs_h) $(gdbcore_h) $(gdbtypes_h) \
# OBSOLETE 		$(language_h) $(objfiles_h) $(stabsread_h) $(symfile_h) \
# OBSOLETE 		$(symtab_h) $(target_h) $(gdb_string_h)
# OBSOLETE 	$(CC) -c $(INTERNAL_WARN_CFLAGS) $(NO_WERROR_CFLAGS) \
# OBSOLETE 		$(srcdir)/os9kread.c
d1890 1
a1890 1
	$(symtab_h) $(gdb_string_h) $(breakpoint_h) $(bcache_h)
d2023 3
a2025 3
# OBSOLETE remote-os9k.o: remote-os9k.c $(defs_h) $(gdbcore_h) \
# OBSOLETE 	$(command_h) $(monitor_h) $(remote_utils_h) $(symtab_h) $(symfile_h) \
# OBSOLETE 	$(objfiles_h) $(gdb_stabs_h) $(gdb_string_h) $(regcache_h)
d2186 1
a2186 1
	$(target_h) $(gdb_string_h) $(completer_h) $(bcache_h)
d2253 1
a2253 1
	$(gdb_string_h) scm-lang.h $(doublest_h) $(regcache_h)
d2256 1
a2256 1
	$(arch_utils_h) $(inferior_h) $(vax_tdep_h)
d2261 3
a2263 3
x86-64-tdep.o : x86-64-tdep.c $(defs_h) $(inferior_h) $(gdbcore_h) \
	$(gdbcmd_h) $(arch_utils_h) $(regcache_h) $(symfile_h) x86-64-tdep.h \
	i386-tdep.h $(dwarf2cfi_h) $(gdb_assert_h) $(objfiles_h)
d2266 1
a2266 1
	$(gdbcore_h) $(regcache_h) $(gdb_assert_h) x86-64-tdep.h \
@


1.200.2.5
log
@Merge with kseitz_interps-20020809-merge of CVS head.
@
text
@d214 1
a214 3
OPCODES_DIR = ../opcodes
OPCODES_SRC = $(srcdir)/$(OPCODES_DIR)
OPCODES = $(OPCODES_DIR)/libopcodes.a
d426 3
d478 19
a496 19
# OBSOLETE CHILLFLAGS = $(CFLAGS)
# OBSOLETE CHILL = gcc
# OBSOLETE CHILL_FOR_TARGET = ` \
# OBSOLETE   if [ -f $${rootme}/../gcc/Makefile ] ; then \
# OBSOLETE     echo $${rootme}/../gcc/xgcc -B$${rootme}/../gcc/ -L$${rootme}/../gcc/ch/runtime/; \
# OBSOLETE   else \
# OBSOLETE     if [ "$(host_canonical)" = "$(target_canonical)" ] ; then \
# OBSOLETE       echo $(CC); \
# OBSOLETE     else \
# OBSOLETE       t='$(program_transform_name)'; echo gcc | sed -e '' $$t; \
# OBSOLETE     fi; \
# OBSOLETE   fi`
# OBSOLETE CHILL_LIB = ` \
# OBSOLETE   if [ -f $${rootme}/../gcc/ch/runtime/libchill.a ] ; then \
# OBSOLETE     echo $${rootme}/../gcc/ch/runtime/chillrt0.o \
# OBSOLETE       $${rootme}/../gcc/ch/runtime/libchill.a; \
# OBSOLETE   else \
# OBSOLETE       echo -lchill; \
# OBSOLETE   fi`
d507 4
d528 1
a528 1
	coffread.c \
a567 2
aout_aout64_h =	$(INCLUDE_DIR)/aout/aout64.h
aout_stabs_gnu_h =	$(INCLUDE_DIR)/aout/stabs_gnu.h
a571 3
coff_sym_h =	$(INCLUDE_DIR)/coff/sym.h
coff_symconst_h =	$(INCLUDE_DIR)/coff/symconst.h
coff_ecoff_h =	$(INCLUDE_DIR)/coff/ecoff.h
a572 3
elf_sh_h =	$(INCLUDE_DIR)/elf/sh.h
elf_bfd_h =	$(BFD_SRC)/elf-bfd.h
libaout_h =	$(BFD_SRC)/libaout.h
d576 2
a577 5
opcode_m68hc11_h = $(INCLUDE_DIR)/opcode/m68hc11.h
sh_opc_h = 	$(OPCODES_SRC)/sh-opc.h
gdb_sim_arm_h =	$(INCLUDE_DIR)/gdb/sim-arm.h
gdb_sim_d10v_h = $(INCLUDE_DIR)/gdb/sim-d10v.h
gdb_sim_sh_h =	$(INCLUDE_DIR)/gdb/sim-sh.h
a619 1
f_lang_h =	f-lang.h
a623 1
gdb_obstack_h =	$(obstack_h)
d645 1
a645 1
objfiles_h =	objfiles.h $(gdb_obstack_h) $(symfile_h)
d686 1
a686 1
	c-lang.h f-lang.h \
d739 1
a739 1
	c-lang.o f-lang.o \
d745 2
a746 2
	c-typeprint.o f-typeprint.o m2-typeprint.o \
	c-valprint.o cp-valprint.o f-valprint.o m2-valprint.o \
d1201 1
a1201 1
# OBSOLETE unexport CHILLFLAGS CHILL_LIB CHILL_FOR_TARGET :
a1203 1
	aix-thread.c \
d1226 1
a1229 1
	mips-irix-tdep.c \
d1240 1
a1240 1
	remote-array.c remote-e7000.c \
d1249 1
a1249 1
	solib.c solib-irix.c solib-svr4.c solib-sunos.c sparc-linux-nat.c \
a1263 4
aix-thread.o: aix-thread.c $(defs_h) $(gdbcore_h) $(gdbthread_h) \
	$(inferior_h) $(target_h) $(regcache_h) $(gdbcmd_h) $(gdb_assert_h) \
	$(ppc_tdep_h) $(language_h)

d1306 1
a1306 1
	$(symfile_h) $(arch_utils_h) $(regcache_h) $(gdb_string_h)
d1308 1
a1308 1
bcache.o: bcache.c $(defs_h) $(gdb_obstack_h) $(bcache_h) $(gdb_string_h)
d1318 5
a1322 4
buildsym.o: buildsym.c $(defs_h) $(bfd_h) $(gdb_obstack_h) $(symtab_h) \
	$(symfile_h) $(objfiles_h) $(gdbtypes_h) $(complaints_h) \
	$(gdb_string_h) $(expression_h) $(language_h) $(bcache_h) \
	$(filenames_h) $(macrotab_h) $(demangle_h) $(buildsym_h) $(stabsread_h)
d1331 3
a1333 4
c-typeprint.o: c-typeprint.c $(defs_h) $(gdb_obstack_h) $(bfd_h) $(symtab_h) \
	$(gdbtypes_h) $(expression_h) $(value_h) $(gdbcore_h) $(target_h) \
	$(language_h) $(demangle_h) $(c_lang_h) $(typeprint_h) $(cp_abi_h) \
	$(gdb_string_h)
d1344 3
a1346 3
f-typeprint.o: f-typeprint.c $(defs_h) $(gdb_obstack_h) $(bfd_h) $(symtab_h) \
	$(gdbtypes_h) $(expression_h) $(value_h) $(gdbcore_h) $(target_h) \
	$(f_lang_h) $(gdb_string_h)
d1351 5
a1355 2
# OBSOLETE ch-exp.o: ch-exp.c ch-lang.h $(defs_h) $(language_h) $(parser_defs_h) \
# OBSOLETE 	$(bfd_h) $(symfile_h) $(objfiles_h) $(value_h)
d1357 3
a1359 2
# OBSOLETE ch-lang.o: ch-lang.c ch-lang.h $(defs_h) $(expression_h) $(gdbtypes_h) \
# OBSOLETE 	$(language_h) $(parser_defs_h) $(symtab_h)
d1361 2
a1362 7
# OBSOLETE ch-typeprint.o: ch-typeprint.c $(defs_h) $(gdb_obstack_h) $(bfd_h) \
# OBSOLETE 	$(symtab_h) $(gdbtypes_h) $(expression_h) $(value_h) $(gdbcore_h) \
# OBSOLETE 	$(target_h) $(language_h) $(ch_lang_h) $(typeprint_h) $(gdb_string_h)

# OBSOLETE ch-valprint.o: ch-valprint.c $(defs_h) $(gdb_obstack_h) $(symtab_h) \
# OBSOLETE 	$(gdbtypes_h) $(valprint_h) $(expression_h) $(value_h) $(language_h) \
# OBSOLETE 	$(demangle_h) $(c_lang_h) $(typeprint_h) $(ch_lang_h) $(annotate_h)
d1366 4
a1369 5
coffread.o: coffread.c $(defs_h) $(symtab_h) $(gdbtypes_h) $(demangle_h) \
	$(breakpoint_h) $(bfd_h) $(gdb_obstack_h) $(gdb_string_h) \
	$(coff_internal_h) $(libcoff_h) $(symfile_h) $(objfiles_h) \
	$(buildsym_h) $(gdb_stabs_h) $(stabsread_h) $(complaints_h) \
	$(target_h) $(gdb_assert_h)
d1393 2
a1394 2
gcore.o: gcore.c $(defs_h) $(cli_decode_h) $(inferior_h) $(gdbcore_h) \
	$(elf_bfd_h) $(symfile_h) $(objfiles_h)
d1396 2
a1397 3
linux-proc.o: linux-proc.c $(defs_h) $(inferior_h) $(regcache_h) $(gregset_h) \
	$(gdbcore_h) $(gdbthread_h) $(elf_bfd_h) $(cli_decode_h) \
	$(gdb_string_h)
d1401 2
a1402 4
cp-valprint.o: cp-valprint.c $(defs_h) $(gdb_obstack_h) $(symtab_h) \
	$(gdbtypes_h) $(expression_h) $(value_h) $(command_h) $(gdbcmd_h) \
	$(demangle_h) $(annotate_h) $(gdb_string_h) $(c_lang_h) $(target_h) \
	$(cp_abi_h)
d1407 11
a1417 10
d10v-tdep.o: d10v-tdep.c $(defs_h) $(frame_h) $(symtab_h) $(gdbtypes_h) \
	$(gdbcmd_h) $(gdbcore_h) $(gdb_string_h) $(value_h) $(inferior_h) \
	$(dis_asm_h) $(symfile_h) $(objfiles_h) $(language_h) $(arch_utils_h) \
	$(regcache_h) $(floatformat_h) $(sim_d10v_h) $(sim_regno_h)

dbxread.o: dbxread.c $(defs_h) $(gdb_string_h) $(gdb_obstack_h) $(gdb_stat_h) \
	$(symtab_h) $(breakpoint_h) $(target_h) $(gdbcore_h) $(libaout_h) \
	$(symfile_h) $(objfiles_h) $(buildsym_h) $(stabsread_h) \
	$(gdb_stabs_h) $(demangle_h) $(language_h) $(complaints_h) \
	$(cp_abi_h) $(aout_aout64_h) $(aout_stab_gnu_h)
d1429 1
a1429 3
dstread.o: dstread.c $(defs_h) $(symtab_h) $(gdbtypes_h) $(breakpoint_h) \
	$(bfd_h) $(symfile_h) $(objfiles_h) $(buildsym_h) $(gdb_obstack_h) \
	$(gdb_string_h) $(dst_h)
a1466 3
fbsd-proc.o: fbsd-proc.c $(defs_h) $(gdbcore_h) $(inferior_h) $(gdb_string_h) \
	$(elf_bfd_h) $(gregset_h)

d1476 1
a1476 2
regcache.o: regcache.c $(defs_h) $(inferior_h) $(target_h) $(gdbarch_h) \
	$(gdbcmd_h) $(regcache_h) $(gdb_assert_h) $(gdb_string_h)
d1510 2
a1511 4
		$(srcdir)/gdbtk/generic/gdbtk.h \
		$(srcdir)/gdbtk/generic/gdbtk-cmds.h \
		$(defs_h) $(breakpoint_h) $(tracepoint_h) \
		$(symfile_h) $(symtab_h) $(gdb_string_h)
d1537 2
a1538 3
		$(srcdir)/gdbtk/generic/gdbtk.h \
		$(srcdir)/gdbtk/generic/gdbtk-cmds.h \
		$(defs_h) $(frame_h) $(value_h) $(gdb_string_h)
d1555 2
a1556 2
		$(srcdir)/gdbtk/generic/gdbtk.h \
		$(defs_h) $(value_h) $(varobj_h) $(gdb_string_h)
d1574 3
a1576 3
v850-tdep.o: v850-tdep.c $(defs_h) $(frame_h) $(inferior_h) $(target_h) \
	$(value_h) $(bfd_h) $(gdb_string_h) $(gdbcore_h) $(symfile_h) \
	$(arch_utils_h) $(regcache_h) $(symtab_h)
d1583 5
a1587 5
gdbarch.o: gdbarch.c $(defs_h) $(arch_utils_h) $(gdbcmd_h) $(inferior_h) \
	$(gdb_string_h) $(symtab_h) $(frame_h) $(inferior_h) $(breakpoint_h) \
	$(gdb_wait_h) $(gdbcore_h) $(gdbcmd_h) $(target_h) $(gdbthread_h) \
	$(annotate_h) $(symfile_h) $(value_h) $(symcat_h) $(floatformat_h) \
	$(gdb_assert_h) $(gdb_string_h) $(gdb_events_h)
d1610 1
a1610 2
gnu-v3-abi.o: gnu-v3-abi.c $(defs_h) $(value_h) $(cp_abi_h) $(demangle_h) \
	$(gdb_assert_h) $(gdb_string_h)
d1612 1
a1612 3
h8300-tdep.o: h8300-tdep.c $(defs_h) $(frame_h) $(symtab_h) $(dis_asm_h) \
	$(gdbcmd_h) $(gdbtypes_h) $(gdbcore_h) $(gdb_string_h) $(value_h) \
	$(regcache_h)
d1614 3
a1616 2
h8500-tdep.o: h8500-tdep.c $(defs_h) $(frame_h) $(symtab_h) $(gdbtypes_h) \
	$(gdbcmd_h) $(value_h) $(dis_asm_h) $(gdbcore_h) $(regcache_h)
d1680 3
a1682 2
i960-tdep.o: i960-tdep.c $(defs_h) $(symtab_h) $(value_h) $(frame_h) \
	$(floatformat_h) $(target_h) $(gdbcore_h) $(inferior_h) $(regcache_h)
a1753 4
m32r-tdep.o: m32r-tdep.c $(defs_h) $(frame_h) $(inferior_h) $(target_h) \
	$(value_h) $(bfd_h) $(gdb_string_h) $(gdbcore_h) $(symfile_h) \
	$(regcache_h)

d1757 9
a1765 13
p-typeprint.o: p-typeprint.c $(defs_h) $(gdb_obstack_h) $(bfd_h) $(symtab_h) \
	$(gdbtypes_h) $(expression_h) $(value_h) $(gdbcore_h) $(target_h) \
	$(language_h) $(p_lang_h) $(typeprint_h) $(gdb_string_h)

p-valprint.o: p-valprint.c $(defs_h) $(gdb_obstack_h) $(symtab_h) \
	$(gdbtypes_h) $(expression_h) $(value_h) $(command_h) $(gdbcmd_h) \
	$(gdbcore_h) $(demangle_h) $(valprint_h) $(typeprint_h) $(language_h) \
	$(target_h) $(annotate_h) $(p_lang_h) $(cp_abi_h)

m68hc11-tdep.o: m68hc11-tdep.c $(defs_h) $(frame_h) $(symtab_h) $(gdbtypes_h) \
	$(gdbcmd_h) $(gdbcore_h) $(gdb_string_h) $(value_h) $(inferior_h) \
	$(dis_asm_h) $(symfile_h) $(objfiles_h) $(arch_utils_h) $(regcache_h) \
	$(target_h) $(opcode_m68hc11_h)
d1775 4
d1794 4
a1797 6
mdebugread.o: mdebugread.c $(defs_h) $(symtab_h) $(gdbtypes_h) $(gdbcore_h) \
	$(symfile_h) $(objfiles_h) $(gdb_obstack_h) $(buildsym_h) \
	$(stabsread_h) $(complaints_h) $(demangle_h) $(gdb_assert_h) \
	$(coff_sym_h) $(coff_symconst_h) $(gdb_stat_h) $(gdb_string_h) \
	$(bfd_h) $(coff_ecoff_h) $(libaout_h) $(aout_aout64_h) \
	$(aout_stab_gnu_h) $(expression_h) $(language_h)
a1825 2
mips-irix-tdep.o: mips-irix-tdep.c $(defs_h) osabi.h $(BFD_SRC)/elf-bfd.h

d1845 3
a1847 7
mn10200-tdep.o: mn10200-tdep.c $(defs_h) $(frame_h) $(inferior_h) $(target_h) \
	$(value_h) $(bfd_h) $(gdb_string_h) $(gdbcore_h) $(symfile_h) \
	$(regcache_h)

mn10300-tdep.o: mn10300-tdep.c $(defs_h) $(frame_h) $(inferior_h) $(target_h) \
	$(value_h) $(bfd_h) $(gdb_string_h) $(gdbcore_h) $(symfile_h) \
	$(regcache_h) $(arch_utils_h)
d1874 2
a1875 3
objfiles.o: objfiles.c $(defs_h) $(bfd_h) $(symtab_h) $(symfile_h) \
	$(objfiles_h) $(gdb_stabs_h) $(target_h) $(bcache_h) $(gdb_stat_h) \
	$(gdb_obstack_h) $(gdb_string_h) $(breakpoint_h) $(mmalloc_h)
d1885 2
a1886 2
std-regs.o: std-regs.c $(defs_h) $(builtin_regs_h) $(frame_h) $(gdbtypes_h) \
	$(value_h) $(gdb_string_h)
d1982 4
d2056 1
a2056 2
	$(gdb_stabs_h) $(regcache_h) $(arch_utils_h) $(language_h) \
	$(ppc_tdep_h)
d2086 4
a2089 5
sh-tdep.o: sh-tdep.c $(defs_h) $(frame_h) $(symtab_h) $(symfile_h) \
	$(gdbtypes_h) $(gdbcmd_h) $(gdbcore_h) $(value_h) $(dis_asm_h) \
	$(inferior_h) $(gdb_string_h) $(arch_utils_h) $(floatformat_h) \
	$(regcache_h) $(doublest_h) $(sh_tdep_h) $(elf_bfd_h) $(solib_svr4_h) \
	$(elf_sh_h) $(gdb_sim_sh_h)
d2103 2
a2104 3
mon960-rom.o: mon960-rom.c $(defs_h) $(gdbcore_h) $(target_h) $(monitor_h) \
	$(serial_h) $(srec_h) $(xmodem_h) $(symtab_h) $(symfile_h) \
	$(inferior_h)
a2109 3
solib-irix.o: solib-irix.c $(defs_h) $(gdbcore_h) $(inferior_h) $(objfiles_h) \
	$(symfile_h) $(target_h) $(solist_h) solib-svr4.h

d2128 3
a2130 3
sparc-tdep.o: sparc-tdep.c $(defs_h) $(arch_utils_h) $(frame_h) $(inferior_h) \
	$(target_h) $(value_h) $(bfd_h) $(gdb_string_h) $(regcache_h) \
	$(osabi_h) $(gregset_h) $(gdbcore_h) $(symfile_h)
d2149 4
a2152 5
stabsread.o: stabsread.c $(defs_h) $(gdb_string_h) $(bfd_h) $(gdb_obstack_h) \
	$(symtab_h) $(gdbtypes_h) $(expression_h) $(symfile_h) $(objfiles_h) \
	$(aout_stab_gnu_h) $(libaout_h) $(aout_aout64_h) $(gdb_stabs_h) \
	$(buildsym_h) $(complaints_h) $(demangle_h) $(language_h) \
	$(doublest_h) $(stabsread_h)
d2162 1
a2162 2
ax-general.o: ax-general.c $(defs_h) $(ax_h) $(value_h)

d2168 4
a2171 5
symfile.o: symfile.c $(defs_h) $(symtab_h) $(gdbtypes_h) $(gdbcore_h) \
	$(frame_h) $(target_h) $(value_h) $(symfile_h) $(objfiles_h) \
	$(gdbcmd_h) $(breakpoint_h) $(language_h) $(complaints_h) \
	$(demangle_h) $(inferior_h) $(gdb_stabs_h) $(gdb_obstack_h) \
	$(completer_h) $(bcache_h) $(gdb_string_h) $(gdb_stat_h)
d2177 8
a2184 10
symmisc.o: symmisc.c $(defs_h) $(symtab_h) $(gdbtypes_h) $(bfd_h) \
	$(symfile_h) $(objfiles_h) $(breakpoint_h) $(command_h) \
	$(gdb_obstack_h) $(language_h) $(bcache_h) $(gdb_string_h)

symtab.o: symtab.c $(defs_h) $(symtab_h) $(gdbtypes_h) $(gdbcore_h) \
	$(frame_h) $(target_h) $(value_h) $(symfile_h) $(objfiles_h) \
	$(gdbcmd_h) $(call_cmds_h) $(gdb_regex_h) $(expression_h) \
	$(language_h) $(demangle_h) $(inferior_h) $(linespec_h) \
	$(filenames_h) $(gdb_obstack_h) $(gdb_string_h) $(gdb_stat_h) \
	$(cp_abi_h)
d2190 1
a2190 2
macroexp.o: macroexp.c $(defs_h) $(gdb_obstack_h) $(bcache_h) $(macrotab_h) \
	$(macroexp_h) $(gdb_assert_h)
d2192 2
a2193 3
macrotab.o: macrotab.c $(defs_h) $(gdb_obstack_h) $(splay_tree_h) $(symtab_h) \
	$(symfile_h) $(objfiles_h) $(macrotab_h) $(gdb_assert_h) $(bcache_h) \
	$(complaints_h)
d2203 2
a2204 3
thread.o: thread.c $(defs_h) $(symtab_h) $(frame_h) $(inferior_h) \
	$(environ_h) $(value_h) $(target_h) $(gdbthread_h) $(command_h) \
	$(gdbcmd_h) $(regcache_h) $(gdb_h) $(ui_out_h)
d2217 3
a2219 3
typeprint.o: typeprint.c $(defs_h) $(gdb_obstack_h) $(bfd_h) $(symtab_h) \
	$(gdbtypes_h) $(expression_h) $(value_h) $(gdbcore_h) $(command_h) \
	$(gdbcmd_h) $(target_h) $(language_h) $(cp_abi_h) $(gdb_string_h)
d2232 3
a2234 4
valprint.o: valprint.c $(defs_h) $(gdb_string_h) $(symtab_h) $(gdbtypes_h) \
	$(value_h) $(gdbcore_h) $(gdbcmd_h) $(target_h) $(obstack_h) \
	$(language_h) $(annotate_h) $(valprint_h) $(floatformat_h) \
	$(doublest_h)
d2281 3
a2283 2
z8k-tdep.o: z8k-tdep.c $(defs_h) $(frame_h) $(symtab_h) $(gdbcmd_h) \
	$(gdbtypes_h) $(dis_asm_h) $(gdbcore_h) $(regcache_h)
d2313 2
a2314 2
varobj.o: varobj.c $(defs_h) $(value_h) $(expression_h) $(frame_h) \
	$(language_h) $(wrapper_h) $(gdbcmd_h) $(gdb_string_h) $(varobj_h)
d2324 3
a2326 4
cli-cmds.o: $(srcdir)/cli/cli-cmds.c $(defs_h) $(completer_h) $(target_h) \
		$(gdb_wait_h) $(gdb_regex_h) $(gdb_string_h) $(filenames_h) \
		$(ui_out_h) $(top_h) $(cli_cli_decode_h) $(cli_cli_script_h) \
		$(cli_cli_setshow_h) $(cli_cli_cmds_h)
d2329 3
a2331 3
cli-decode.o: $(srcdir)/cli/cli-decode.c $(defs_h) $(symtab_h) $(gdb_regex_h) \
		$(gdb_string_h) $(ui_out_h) $(cli_cli_cmds_h) \
		$(cli_cli_decode_h) $(gdb_assert_h)
d2338 1
a2338 1
cli-interp.o: $(srcdir)/cli/cli-interp.c $(defs_h) $(value_h) \
d2342 3
a2344 3
cli-setshow.o: $(srcdir)/cli/cli-setshow.c $(defs_h) $(value_h) \
		$(gdb_string_h) $(ui_out_h) $(cli_cli_decode_h) \
		$(cli_cli_cmds_h) $(cli_cli_setshow_h)
d2347 3
a2349 3
cli-script.o: $(srcdir)/cli//cli-script.c $(defs_h) $(value_h) $(language_h) \
		$(ui_out_h) $(top_h) $(cli_cli_cmds_h) $(cli_cli_decode_h) \
		$(cli_cli_script_h)
d2370 2
a2371 2
mi-cmd-var.o: $(srcdir)/mi/mi-cmd-var.c $(defs_h) $(mi_cmds_h) $(ui_out_h) \
		$(mi_out_h) $(varobj_h) $(value_h)
d2380 2
a2381 2
mi-cmd-disas.o: $(srcdir)/mi/mi-cmd-disas.c $(defs_h) $(target_h) $(value_h) \
		$(mi_cmds_h) $(mi_getopt_h) $(ui_out_h) $(gdb_string_h)
@


1.200.2.6
log
@Merge with kseitz_interps-20020829-merge tag from trunk.
@
text
@a81 5
# This is used to rebuild ada-lex.c from ada-lex.l.  If the program is 
# not defined, but ada-lex.c is present, compilation will continue,
# possibly with a warning.
FLEX = flex

a343 1
LDFLAGS = @@LDFLAGS@@
d521 1
a521 2
SFILES = ada-exp.y ada-lang.c ada-typeprint.c ada-valprint.c ada-tasks.c \
	ax-general.c ax-gdb.c bcache.c blockframe.c breakpoint.c \
d538 1
a538 1
	printcmd.c remote.c scm-exp.c scm-lang.c \
d596 6
a601 16
#
# gdb/ header files
#

acconfig_h = acconfig.h
ada_lang_h = ada-lang.h $(value_h) $(gdbtypes_h)
alpha_tdep_h = alpha-tdep.h $(osabi_h)
alphabsd_tdep_h = alphabsd-tdep.h
annotate_h = annotate.h $(symtab_h) $(gdbtypes_h)
arch_utils_h = arch-utils.h
arm_tdep_h = arm-tdep.h $(osabi_h)
ax_gdb_h = ax-gdb.h
ax_h = ax.h $(doublest_h)
bcache_h = bcache.h
breakpoint_h = breakpoint.h $(frame_h) $(value_h) $(gdb_events_h)
buildsym_h = buildsym.h
d603 38
a640 43
c_lang_h = c-lang.h $(value_h) $(macroexp_h)
call_cmds_h = call-cmds.h
ch_lang_h = ch-lang.h
cli_out_h = cli-out.h
coff_solib_h = coff-solib.h
command_h = command.h
complaints_h = complaints.h
completer_h = completer.h
cp_abi_h = cp-abi.h
dcache_h = dcache.h
defs_h = defs.h $(config_h) $(gdb_locale_h) $(gdb_signals_h) $(ansidecl_h) \
	$(libiberty_h) $(progress_h) $(bfd_h) $(tui_h) $(ui_file_h) $(xm_h) \
	$(nm_h) $(tm_h) $(fopen_same_h) $(gdbarch_h) $(arch_utils_h)
doublest_h = doublest.h $(floatformat_h)
dst_h = dst.h
dwarf2cfi_h = dwarf2cfi.h
environ_h = environ.h
event_loop_h = event-loop.h
event_top_h = event-top.h
expression_h = expression.h $(symtab_h) $(doublest_h)
f_lang_h = f-lang.h
frame_h = frame.h
gdb_events_h = gdb-events.h
gdb_stabs_h = gdb-stabs.h
gdb_h = gdb.h
gdb_assert_h = gdb_assert.h
gdb_dirent_h = gdb_dirent.h
gdb_locale_h = gdb_locale.h
gdb_obstack_h = gdb_obstack.h $(obstack_h)
gdb_proc_service_h = gdb_proc_service.h $(gregset_h)
gdb_regex_h = gdb_regex.h $(xregex_h)
gdb_stat_h = gdb_stat.h
gdb_string_h = gdb_string.h
gdb_thread_db_h = gdb_thread_db.h
gdb_vfork_h = gdb_vfork.h
gdb_wait_h = gdb_wait.h
gdbarch_h = gdbarch.h $(dis_asm_h) $(value_h) $(inferior_h)
gdbcmd_h = gdbcmd.h $(command_h) $(ui_out_h)
gdbcore_h = gdbcore.h $(bfd_h)
gdbthread_h = gdbthread.h $(breakpoint_h)
gdbtypes_h = gdbtypes.h
gnu_nat_h = gnu-nat.h
gregset_h = gregset.h
d642 39
a680 105
i386_tdep_h = i386-tdep.h $(osabi_h)
i387_tdep_h = i387-tdep.h
inf_loop_h = inf-loop.h
inferior_h = inferior.h $(breakpoint_h) $(target_h)
interps_h = interps.h
jv_lang_h = jv-lang.h
kod_h = kod.h
language_h = language.h
linespec_h = linespec.h
m2_lang_h = m2-lang.h
macroexp_h = macroexp.h
macroscope_h = macroscope.h $(macrotab_h) $(symtab_h)
macrotab_h = macrotab.h
memattr_h = memattr.h
minimon_h = minimon.h
mipsnbsd_tdep_h = mipsnbsd-tdep.h
monitor_h = monitor.h
nbsd_tdep_h = nbsd-tdep.h
ns32k_tdep_h = ns32k-tdep.h $(osabi_h)
objfiles_h = objfiles.h $(gdb_obstack_h) $(symfile_h)
ocd_h = ocd.h
osabi_h = osabi.h
p_lang_h = p-lang.h
pa64solib_h = pa64solib.h
parser_defs_h = parser-defs.h $(doublest_h)
ppc_tdep_h = ppc-tdep.h $(osabi_h)
ppcnbsd_tdep_h = ppcnbsd-tdep.h
proc_utils_h = proc-utils.h
regcache_h = regcache.h
remote_utils_h = remote-utils.h $(target_h)
remote_h = remote.h
scm_lang_h = scm-lang.h $(scm_tags_h)
scm_tags_h = scm-tags.h
ser_unix_h = ser-unix.h
serial_h = serial.h
sh_tdep_h = sh-tdep.h $(osabi_h)
shnbsd_tdep_h = shnbsd-tdep.h
sim_regno_h = sim-regno.h
solib_svr4_h = solib-svr4.h
solib_h = solib.h
solist_h = solist.h
somsolib_h = somsolib.h
source_h = source.h
sparcnbsd_tdep_h = sparcnbsd-tdep.h
srec_h = srec.h
stabsread_h = stabsread.h
symfile_h = symfile.h
symtab_h = symtab.h
target_h = target.h $(bfd_h) $(symtab_h) $(dcache_h) $(memattr_h)
terminal_h = terminal.h
top_h = top.h
tracepoint_h = tracepoint.h
typeprint_h = typeprint.h
ui_file_h = ui-file.h
ui_out_h = ui-out.h
valprint_h = valprint.h
value_h = value.h $(doublest_h) $(symtab_h) $(gdbtypes_h) $(expression_h)
varobj_h = varobj.h $(symtab_h) $(gdbtypes_h)
vax_tdep_h = vax-tdep.h $(osabi_h)
version_h = version.h
wince_stub_h = wince-stub.h
wrapper_h = wrapper.h $(gdb_h)
x86_64_tdep_h = x86-64-tdep.h $(i386_tdep_h)
xcoffsolib_h = xcoffsolib.h
xmodem_h = xmodem.h

#
# gdb/cli/ headers
#

cli_cmds_h = $(srcdir)/cli/cli-cmds.h
cli_decode_h = $(srcdir)/cli/cli-decode.h $(gdb_regex_h) $(command_h)
cli_dump_h = $(srcdir)/cli/cli-dump.h
cli_script_h = $(srcdir)/cli/cli-script.h
cli_setshow_h = $(srcdir)/cli/cli-setshow.h
cli_utils_h = $(srcdir)/cli/cli-utils.h

#
# gdb/mi/ headers
#

mi_cmds_h = $(srcdir)/mi/mi-cmds.h
mi_console_h = $(srcdir)/mi/mi-console.h
mi_getopt_h = $(srcdir)/mi/mi-getopt.h
mi_out_h = $(srcdir)/mi/mi-out.h
mi_parse_h = $(srcdir)/mi/mi-parse.h

#
# gdb/tui/ headers
#

tui_file_h = $(srcdir)/tui/tui-file.h
tui_h = $(srcdir)/tui/tui.h $(ansidecl_h)
tuiCommand_h = $(srcdir)/tui/tuiCommand.h
tuiData_h = $(srcdir)/tui/tuiData.h
tuiDataWin_h = $(srcdir)/tui/tuiDataWin.h
tuiDisassem_h = $(srcdir)/tui/tuiDisassem.h
tuiGeneralWin_h = $(srcdir)/tui/tuiGeneralWin.h
tuiIO_h = $(srcdir)/tui/tuiIO.h
tuiLayout_h = $(srcdir)/tui/tuiLayout.h
tuiRegs_h = $(srcdir)/tui/tuiRegs.h
tuiSource_h = $(srcdir)/tui/tuiSource.h $(defs_h)
tuiSourceWin_h = $(srcdir)/tui/tuiSourceWin.h
tuiStack_h = $(srcdir)/tui/tuiStack.h
tuiWin_h = $(srcdir)/tui/tuiWin.h
d689 1
a689 1
	environ.h $(gdbcmd_h) gdb.h gdbcore.h \
a767 1
	ada-exp.tab.c \
a837 16
install-gdbtk:
	$(SHELL) $(srcdir)/../mkinstalldirs $(GDBTK_LIBRARY) ; \
	$(SHELL) $(srcdir)/../mkinstalldirs $(libdir)/insight$(GDBTK_VERSION) ; \
	$(INSTALL_DATA) $(srcdir)/gdbtk/plugins/plugins.tcl $(libdir)/insight$(GDBTK_VERSION)/plugins.tcl ; \
	$(SHELL) $(srcdir)/../mkinstalldirs \
		$(GDBTK_LIBRARY)/images \
		$(GDBTK_LIBRARY)/images2 ; \
	$(SHELL) $(srcdir)/../mkinstalldirs $(GDBTK_LIBRARY)/help \
		$(GDBTK_LIBRARY)/help/images \
		$(GDBTK_LIBRARY)/help/trace ; \
	cd $(srcdir)/gdbtk/library ; \
	for i in *.tcl *.itcl *.ith *.itb images/*.gif images2/*.gif images/icons.txt images2/icons.txt tclIndex help/*.html  help/trace/*.html help/trace/index.toc help/images/*.gif; \
	  do \
		$(INSTALL_DATA) $$i $(GDBTK_LIBRARY)/$$i ; \
	  done ;

a1028 1
		ada-lex.c ada-exp.tab.c \
d1096 2
d1099 2
a1100 2
# LANG-exp.tab.c is generated in objdir from LANG-exp.y if it doesn't
# exist in srcdir, then compiled in objdir to LANG-exp.tab.o.
d1102 3
a1104 10
# If we said LANG-exp.tab.c rather than ./c-exp.tab.c some makes would
# sometimes re-write it into $(srcdir)/c-exp.tab.c.

# Remove bogus decls for malloc/realloc/free which conflict with
# everything else.  Strictly speaking c-exp.tab.c should therefore
# depend on Makefile.in, but that was a pretty big annoyance.

# See comments above ...
.PRECIOUS: c-exp.tab.c
c-exp.tab.o: c-exp.tab.c
a1117 2
# See comments above ...
.PRECIOUS: jv-exp.tab.c
a1131 2
# See comments above ...
.PRECIOUS: f-exp.tab.c
d1146 4
a1149 2
# See comments above ...
.PRECIOUS: m2-exp.tab.c
d1164 4
a1167 31
# See comments above ...
.PRECIOUS: ada-exp.tab.c
ada-exp.tab.o: ada-exp.tab.c
ada-exp.tab.c: ada-exp.y 
	$(YACC) $(YFLAGS) $(srcdir)/ada-exp.y
	-sed -e '/extern.*malloc/d' \
	-e '/extern.*realloc/d' \
	-e '/extern.*free/d' \
	-e '/include.*malloc.h/d' \
	-e 's/malloc/xmalloc/g' \
	-e 's/realloc/xrealloc/g' \
	< y.tab.c > ada-exp.new
	-rm y.tab.c
	mv ada-exp.new ./ada-exp.tab.c

# See comments above ...
.PRECIOUS: ada-lex.c
ada-lex.o: ada-lex.c
ada-lex.c: ada-lex.l
	@@if [ "$(FLEX)" ] && $(FLEX) --version >/dev/null 2>&1; then \
	    echo $(FLEX) -Isit $(srcdir)/ada-lex.l ">" ada-lex.c; \
	    $(FLEX) -Isit $(srcdir)/ada-lex.l > ada-lex.c; \
	elif [ ! -f ada-lex.c -a ! -f $(srcdir)/ada-lex.c ]; then \
	    echo "ada-lex.c missing and flex not available."; \
	    false; \
	elif [ ! -f ada-lex.c ]; then \
	    echo "Warning: ada-lex.c older than ada-lex.l and flex not available."; \
	fi

# See comments above ...
.PRECIOUS: p-exp.tab.c
d1182 4
d1221 1
a1221 1
	dcache.c delta68-nat.c dpx2-nat.c exec.c fork-child.c \
d1224 2
a1225 2
	i386-tdep.c i386b-nat.c i386v-nat.c i386-linux-nat.c \
	i386v4-nat.c i386ly-tdep.c \
d1229 1
a1229 1
	i386gnu-nat.c i386gnu-tdep.c \
d1251 1
a1251 1
	remote-rdp.c remote-sim.c \
d1270 2
a1271 2
# Some files need explict build rules (due to -Werror problems) or due
# to sub-directory fun 'n' games.
d1273 3
a1275 3
# Provide explicit rule/dependency - works for more makes.
copying.o: $(srcdir)/copying.c
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/copying.c
d1277 2
a1278 4
hpux-thread.o: $(srcdir)/hpux-thread.c
	$(CC) -c $(INTERNAL_CFLAGS) -I$(srcdir)/osf-share \
		-I$(srcdir)/osf-share/HP800 -I/usr/include/dce \
		$(srcdir)/hpux-thread.c
d1280 2
a1281 10
# FIXME: Procfs.o gets -Wformat errors because things like pid_t don't
# match output format strings.
procfs.o: $(srcdir)/procfs.c
	$(CC) -c $(INTERNAL_WARN_CFLAGS) $(NO_WERROR_CFLAGS) $(srcdir)/procfs.c

v850ice.o: $(srcdir)/v850ice.c
	$(CC) -c $(INTERNAL_CFLAGS) $(IDE_CFLAGS) $(ITCL_CFLAGS) \
		$(TIX_CFLAGS) $(TCL_CFLAGS) $(TK_CFLAGS) $(X11_CFLAGS) \
		$(GDBTK_CFLAGS) \
		$(srcdir)/v850ice.c
d1283 3
a1285 6
# FIXME: z8k-tdep.c calls _initialize_gdbtypes().  Since that isn't
# declared -Wimplicit fails. It should be using the GDBARCH framework.
# cagney 1999-09-02.
z8k-tdep.o: $(srcdir)/z8k-tdep.c
	$(CC) -c $(INTERNAL_WARN_CFLAGS) $(NO_WERROR_CFLAGS) \
		$(srcdir)/z8k-tdep.c
d1287 1
a1287 3
#
# Generated YACC/LEX dependencies
#
d1289 1
a1289 3
c-exp.tab.o: c-exp.tab.c $(defs_h) $(gdb_string_h) $(expression_h) \
	$(value_h) $(parser_defs_h) $(language_h) $(c_lang_h) $(bfd_h) \
	$(symfile_h) $(objfiles_h)
d1291 1
a1291 3
jv-exp.tab.o: jv-exp.tab.c jv-lang.h $(defs_h) $(expression_h) \
	$(gdbtypes_h) $(language_h) $(parser_defs_h) $(symtab_h) $(value_h) \
	$(bfd_h) $(objfiles_h) $(symfile_h)
d1293 1
a1293 3
f-exp.tab.o: f-exp.tab.c f-lang.h $(defs_h) $(expression_h) \
	$(language_h) $(parser_defs_h) $(value_h) $(bfd_h) $(objfiles_h) \
	$(symfile_h)
d1295 2
a1296 3
m2-exp.tab.o: m2-exp.tab.c $(defs_h) $(expression_h) $(gdbtypes_h) \
	$(language_h) m2-lang.h $(parser_defs_h) $(symtab_h) $(value_h) \
	$(bfd_h) $(objfiles_h) $(symfile_h)
d1298 1
a1298 3
p-exp.tab.o: p-exp.tab.c $(defs_h) $(expression_h) $(gdbtypes_h) \
	$(language_h) p-lang.h $(parser_defs_h) $(symtab_h) $(value_h) \
	$(bfd_h) $(objfiles_h) $(symfile_h)
d1300 2
a1301 4
ada-exp.tab.o: ada-exp.tab.c ada-lex.c ada-lang.h \
	$(defs_h) $(expression_h) \
	$(gdbtypes_h) language.h parser-defs.h $(symtab_h) $(value_h) \
	$(bfd_h) objfiles.h symfile.h
d1303 2
a1304 3
#
# The dependencies.  In aphabetic order.
#
a1305 51
a68v-nat.o: a68v-nat.c $(defs_h) $(inferior_h) $(regcache_h)
abug-rom.o: abug-rom.c $(defs_h) $(gdbcore_h) $(target_h) $(monitor_h) \
	$(serial_h) $(regcache_h)
ada-lang.o: ada-lang.c $(gdb_string_h) $(demangle_h) $(defs_h) $(symtab_h) \
	$(gdbtypes_h) $(gdbcmd_h) $(expression_h) $(parser_defs_h) \
	$(language_h) $(c_lang_h) $(inferior_h) $(symfile_h) $(objfiles_h) \
	$(breakpoint_h) $(gdbcore_h) $(ada_lang_h) $(ui_out_h)
ada-tasks.o: ada-tasks.c $(defs_h) $(command_h) $(value_h) $(language_h) \
	$(inferior_h) $(symtab_h) $(target_h) $(gdbcore_h) $(gregset_h) \
	$(ada_lang_h)
ada-typeprint.o: ada-typeprint.c $(defs_h) $(gdb_obstack_h) $(bfd_h) \
	$(symtab_h) $(gdbtypes_h) $(expression_h) $(value_h) $(gdbcore_h) \
	$(target_h) $(command_h) $(gdbcmd_h) $(language_h) $(demangle_h) \
	$(c_lang_h) $(typeprint_h) $(ada_lang_h) $(gdb_string_h)
ada-valprint.o: ada-valprint.c $(defs_h) $(symtab_h) $(gdbtypes_h) \
	$(expression_h) $(value_h) $(demangle_h) $(valprint_h) $(language_h) \
	$(annotate_h) $(ada_lang_h) $(c_lang_h)
aix-thread.o: aix-thread.c $(defs_h) $(gdb_assert_h) $(gdbthread_h) \
	$(target_h) $(inferior_h) $(regcache_h) $(gdbcmd_h) $(language_h) \
	$(ppc_tdep_h)
alpha-linux-tdep.o: alpha-linux-tdep.c $(defs_h) $(frame_h) $(gdbcore_h) \
	$(value_h) $(alpha_tdep_h)
alpha-nat.o: alpha-nat.c $(defs_h) $(inferior_h) $(gdbcore_h) $(target_h) \
	$(regcache_h) $(alpha_tdep_h) $(gregset_h)
alpha-osf1-tdep.o: alpha-osf1-tdep.c $(defs_h) $(frame_h) $(gdbcore_h) \
	$(value_h) $(alpha_tdep_h)
alpha-tdep.o: alpha-tdep.c $(defs_h) $(frame_h) $(inferior_h) $(symtab_h) \
	$(value_h) $(gdbcmd_h) $(gdbcore_h) $(dis_asm_h) $(symfile_h) \
	$(objfiles_h) $(gdb_string_h) $(linespec_h) $(regcache_h) \
	$(doublest_h) $(arch_utils_h) $(elf_bfd_h) $(alpha_tdep_h)
alphabsd-nat.o: alphabsd-nat.c $(defs_h) $(inferior_h) $(regcache_h) \
	$(alpha_tdep_h) $(alphabsd_tdep_h) $(gregset_h)
alphabsd-tdep.o: alphabsd-tdep.c $(defs_h) $(regcache_h) $(alpha_tdep_h) \
	$(alphabsd_tdep_h)
alphafbsd-tdep.o: alphafbsd-tdep.c $(defs_h) $(value_h) $(alpha_tdep_h)
alphanbsd-tdep.o: alphanbsd-tdep.c $(defs_h) $(gdbcore_h) $(regcache_h) \
	$(value_h) $(solib_svr4_h) $(alpha_tdep_h) $(alphabsd_tdep_h) \
	$(nbsd_tdep_h)
annotate.o: annotate.c $(defs_h) $(annotate_h) $(value_h) $(target_h) \
	$(gdbtypes_h) $(breakpoint_h)
# OBSOLETE arc-tdep.o: arc-tdep.c
arch-utils.o: arch-utils.c $(defs_h) $(arch_utils_h) $(gdbcmd_h) \
	$(inferior_h) $(symtab_h) $(frame_h) $(inferior_h) $(breakpoint_h) \
	$(gdb_wait_h) $(gdbcore_h) $(gdbcmd_h) $(target_h) $(annotate_h) \
	$(gdb_string_h) $(regcache_h) $(gdb_assert_h) $(sim_regno_h) \
	$(version_h) $(floatformat_h)
arm-linux-nat.o: arm-linux-nat.c $(defs_h) $(inferior_h) $(gdbcore_h) \
	$(gdb_string_h) $(regcache_h) $(arm_tdep_h) $(gregset_h)
arm-linux-tdep.o: arm-linux-tdep.c $(defs_h) $(target_h) $(value_h) \
	$(gdbtypes_h) $(floatformat_h) $(gdbcore_h) $(frame_h) $(regcache_h) \
	$(doublest_h) $(arm_tdep_h) $(symtab_h) $(symfile_h) $(objfiles_h)
d1307 5
a1311 4
	$(gdbcore_h) $(symfile_h) $(gdb_string_h) $(dis_asm_h) $(regcache_h) \
	$(doublest_h) $(value_h) $(arch_utils_h) $(solib_svr4_h) \
	$(arm_tdep_h) $(gdb_sim_arm_h) $(elf_bfd_h) $(coff_internal_h) \
	$(elf_arm_h) $(gdb_assert_h) $(bfd_in2_h) $(libcoff_h)
d1314 4
a1317 2
armnbsd-tdep.o: armnbsd-tdep.c $(defs_h) $(arm_tdep_h) $(nbsd_tdep_h) \
	$(solib_svr4_h)
d1320 1
a1320 4
ax-gdb.o: ax-gdb.c $(defs_h) $(symtab_h) $(symfile_h) $(gdbtypes_h) \
	$(value_h) $(expression_h) $(command_h) $(gdbcmd_h) $(frame_h) \
	$(target_h) $(ax_h) $(ax_gdb_h) $(gdb_string_h)
ax-general.o: ax-general.c $(defs_h) $(ax_h) $(value_h) $(gdb_string_h)
d1322 9
a1330 9
blockframe.o: blockframe.c $(defs_h) $(symtab_h) $(bfd_h) $(symfile_h) \
	$(objfiles_h) $(frame_h) $(gdbcore_h) $(value_h) $(target_h) \
	$(inferior_h) $(annotate_h) $(regcache_h) $(gdb_assert_h)
breakpoint.o: breakpoint.c $(defs_h) $(symtab_h) $(frame_h) $(breakpoint_h) \
	$(gdbtypes_h) $(expression_h) $(gdbcore_h) $(gdbcmd_h) $(value_h) \
	$(command_h) $(inferior_h) $(gdbthread_h) $(target_h) $(language_h) \
	$(gdb_string_h) $(demangle_h) $(annotate_h) $(symfile_h) \
	$(objfiles_h) $(linespec_h) $(completer_h) $(gdb_h) $(ui_out_h) \
	$(cli_script_h) $(gdb_events_h)
d1334 9
a1342 7
	$(filenames_h) $(macrotab_h) $(demangle_h) $(buildsym_h) \
	$(stabsread_h)
builtin-regs.o: builtin-regs.c $(defs_h) $(builtin_regs_h) $(gdbtypes_h) \
	$(gdb_string_h) $(gdb_assert_h)
c-lang.o: c-lang.c $(defs_h) $(symtab_h) $(gdbtypes_h) $(expression_h) \
	$(parser_defs_h) $(language_h) $(c_lang_h) $(valprint_h) \
	$(macroscope_h) $(gdb_assert_h)
d1347 33
a1379 11
c-valprint.o: c-valprint.c $(defs_h) $(gdb_string_h) $(symtab_h) \
	$(gdbtypes_h) $(expression_h) $(value_h) $(valprint_h) $(language_h) \
	$(c_lang_h) $(cp_abi_h)
# OBSOLETE ch-exp.o: ch-exp.c
# OBSOLETE ch-lang.o: ch-lang.c
# OBSOLETE ch-typeprint.o: ch-typeprint.c
# OBSOLETE ch-valprint.o: ch-valprint.c
cli-out.o: cli-out.c $(defs_h) $(ui_out_h) $(cli_out_h) $(gdb_string_h) \
	$(gdb_assert_h)
coff-solib.o: coff-solib.c $(defs_h) $(frame_h) $(bfd_h) $(gdbcore_h) \
	$(symtab_h) $(symfile_h) $(objfiles_h)
d1385 32
a1416 17
complaints.o: complaints.c $(defs_h) $(complaints_h) $(gdbcmd_h)
completer.o: completer.c $(defs_h) $(symtab_h) $(gdbtypes_h) $(expression_h) \
	$(filenames_h) $(cli_decode_h) $(gdbcmd_h) $(completer_h)
copying.o: copying.c $(defs_h) $(command_h) $(gdbcmd_h)
core-aout.o: core-aout.c $(defs_h) $(gdbcore_h) $(value_h) $(regcache_h) \
	$(gdb_dirent_h) $(gdb_stat_h)
core-regset.o: core-regset.c $(defs_h) $(gdb_string_h) $(inferior_h) \
	$(target_h) $(command_h) $(gdbcore_h) $(gregset_h)
core-sol2.o: core-sol2.c $(defs_h) $(gdb_string_h) $(regcache_h) \
	$(inferior_h) $(target_h) $(command_h) $(gdbcore_h) $(gregset_h)
corefile.o: corefile.c $(defs_h) $(gdb_string_h) $(inferior_h) $(symtab_h) \
	$(command_h) $(gdbcmd_h) $(bfd_h) $(target_h) $(gdbcore_h) \
	$(dis_asm_h) $(gdb_stat_h) $(completer_h)
corelow.o: corelow.c $(defs_h) $(gdb_string_h) $(frame_h) $(inferior_h) \
	$(symtab_h) $(command_h) $(bfd_h) $(target_h) $(gdbcore_h) \
	$(gdbthread_h) $(regcache_h) $(symfile_h)
cp-abi.o: cp-abi.c $(defs_h) $(value_h) $(cp_abi_h) $(gdb_string_h)
d1421 4
a1424 7
cpu32bug-rom.o: cpu32bug-rom.c $(defs_h) $(gdbcore_h) $(target_h) \
	$(monitor_h) $(serial_h) $(regcache_h)
cris-tdep.o: cris-tdep.c $(defs_h) $(frame_h) $(symtab_h) $(inferior_h) \
	$(gdbtypes_h) $(gdbcore_h) $(gdbcmd_h) $(target_h) $(value_h) \
	$(opcode_cris_h) $(arch_utils_h) $(regcache_h) $(symfile_h) \
	$(solib_h) $(solib_svr4_h)
# OBSOLETE cxux-nat.o: cxux-nat.c
d1427 6
a1432 9
	$(dis_asm_h) $(symfile_h) $(objfiles_h) $(language_h) \
	$(arch_utils_h) $(regcache_h) $(floatformat_h) $(gdb_sim_d10v_h) \
	$(sim_regno_h)
# OBSOLETE d30v-tdep.o: d30v-tdep.c
dbug-rom.o: dbug-rom.c $(defs_h) $(gdbcore_h) $(target_h) $(monitor_h) \
	$(serial_h) $(regcache_h)
dbxread.o: dbxread.c $(defs_h) $(gdb_string_h) $(gdb_obstack_h) \
	$(gdb_stat_h) $(symtab_h) $(breakpoint_h) $(target_h) $(gdbcore_h) \
	$(libaout_h) $(symfile_h) $(objfiles_h) $(buildsym_h) $(stabsread_h) \
d1435 1
a1435 2
dcache.o: dcache.c $(defs_h) $(dcache_h) $(gdbcmd_h) $(gdb_string_h) \
	$(gdbcore_h) $(target_h)
d1437 7
a1443 6
demangle.o: demangle.c $(defs_h) $(command_h) $(gdbcmd_h) $(demangle_h) \
	$(gdb_string_h)
dink32-rom.o: dink32-rom.c $(defs_h) $(gdbcore_h) $(target_h) $(monitor_h) \
	$(serial_h) $(symfile_h) $(inferior_h) $(regcache_h)
doublest.o: doublest.c $(defs_h) $(doublest_h) $(floatformat_h) \
	$(gdb_assert_h) $(gdb_string_h) $(gdbtypes_h)
d1445 47
a1491 50
dsrec.o: dsrec.c $(defs_h) $(serial_h) $(srec_h)
# OBSOLETE dstread.o: dstread.c
dve3900-rom.o: dve3900-rom.c $(defs_h) $(gdbcore_h) $(target_h) $(monitor_h) \
	$(serial_h) $(inferior_h) $(command_h) $(gdb_string_h) $(regcache_h)
dwarf2cfi.o: dwarf2cfi.c $(defs_h) $(gdbcore_h) $(symtab_h) $(symfile_h) \
	$(objfiles_h) $(target_h) $(elf_dwarf2_h) $(inferior_h) \
	$(regcache_h) $(dwarf2cfi_h) $(gdb_assert_h)
dwarf2read.o: dwarf2read.c $(defs_h) $(bfd_h) $(symtab_h) $(gdbtypes_h) \
	$(symfile_h) $(objfiles_h) $(elf_dwarf2_h) $(buildsym_h) \
	$(demangle_h) $(expression_h) $(filenames_h) $(macrotab_h) \
	$(language_h) $(complaints_h) $(bcache_h) $(gdb_string_h) \
	$(gdb_assert_h)
dwarfread.o: dwarfread.c $(defs_h) $(symtab_h) $(gdbtypes_h) $(symfile_h) \
	$(objfiles_h) $(elf_dwarf_h) $(buildsym_h) $(demangle_h) \
	$(expression_h) $(language_h) $(complaints_h) $(gdb_string_h)
elfread.o: elfread.c $(defs_h) $(bfd_h) $(gdb_string_h) $(elf_bfd_h) \
	$(elf_mips_h) $(symtab_h) $(symfile_h) $(objfiles_h) $(buildsym_h) \
	$(stabsread_h) $(gdb_stabs_h) $(complaints_h) $(demangle_h)
environ.o: environ.c $(defs_h) $(environ_h) $(gdb_string_h)
eval.o: eval.c $(defs_h) $(gdb_string_h) $(symtab_h) $(gdbtypes_h) \
	$(value_h) $(expression_h) $(target_h) $(frame_h) $(language_h) \
	$(f_lang_h) $(cp_abi_h)
event-loop.o: event-loop.c $(defs_h) $(event_loop_h) $(event_top_h) \
	$(gdb_string_h)
event-top.o: event-top.c $(defs_h) $(top_h) $(inferior_h) $(target_h) \
	$(terminal_h) $(event_loop_h) $(event_top_h) $(gdbcmd_h) $(interps_h)
exec.o: exec.c $(defs_h) $(frame_h) $(inferior_h) $(target_h) $(gdbcmd_h) \
	$(language_h) $(symfile_h) $(objfiles_h) $(completer_h) $(value_h) \
	$(gdb_string_h) $(gdbcore_h) $(gdb_stat_h) $(xcoffsolib_h)
expprint.o: expprint.c $(defs_h) $(symtab_h) $(gdbtypes_h) $(expression_h) \
	$(value_h) $(language_h) $(parser_defs_h)
f-lang.o: f-lang.c $(defs_h) $(gdb_string_h) $(symtab_h) $(gdbtypes_h) \
	$(expression_h) $(parser_defs_h) $(language_h) $(f_lang_h) \
	$(valprint_h)
f-typeprint.o: f-typeprint.c $(defs_h) $(gdb_obstack_h) $(bfd_h) $(symtab_h) \
	$(gdbtypes_h) $(expression_h) $(value_h) $(gdbcore_h) $(target_h) \
	$(f_lang_h) $(gdb_string_h)
f-valprint.o: f-valprint.c $(defs_h) $(gdb_string_h) $(symtab_h) \
	$(gdbtypes_h) $(expression_h) $(value_h) $(valprint_h) $(language_h) \
	$(f_lang_h) $(frame_h) $(gdbcore_h) $(command_h)
fbsd-proc.o: fbsd-proc.c $(defs_h) $(gdbcore_h) $(inferior_h) \
	$(gdb_string_h) $(elf_bfd_h) $(gregset_h)
findvar.o: findvar.c $(defs_h) $(symtab_h) $(gdbtypes_h) $(frame_h) \
	$(value_h) $(gdbcore_h) $(inferior_h) $(target_h) $(gdb_string_h) \
	$(gdb_assert_h) $(floatformat_h) $(symfile_h) $(regcache_h) \
	$(builtin_regs_h)
fork-child.o: fork-child.c $(defs_h) $(gdb_string_h) $(frame_h) \
	$(inferior_h) $(target_h) $(gdb_wait_h) $(gdb_vfork_h) $(gdbcore_h) \
	$(terminal_h) $(gdbthread_h) $(command_h)
# OBSOLETE fr30-tdep.o: fr30-tdep.c
d1493 2
a1494 1
	$(regcache_h) $(gdb_assert_h)
d1497 1
a1497 325
gcore.o: gcore.c $(defs_h) $(cli_decode_h) $(inferior_h) $(gdbcore_h) \
	$(elf_bfd_h) $(symfile_h) $(objfiles_h)
gdb-events.o: gdb-events.c $(defs_h) $(gdb_events_h) $(gdbcmd_h)
gdbarch.o: gdbarch.c $(defs_h) $(arch_utils_h) $(gdbcmd_h) $(inferior_h) \
	$(gdb_string_h) $(symtab_h) $(frame_h) $(inferior_h) $(breakpoint_h) \
	$(gdb_wait_h) $(gdbcore_h) $(gdbcmd_h) $(target_h) $(gdbthread_h) \
	$(annotate_h) $(symfile_h) $(value_h) $(symcat_h) $(floatformat_h) \
	$(gdb_assert_h) $(gdb_string_h) $(gdb_events_h)
gdbtypes.o: gdbtypes.c $(defs_h) $(gdb_string_h) $(bfd_h) $(symtab_h) \
	$(symfile_h) $(objfiles_h) $(gdbtypes_h) $(expression_h) \
	$(language_h) $(target_h) $(value_h) $(demangle_h) $(complaints_h) \
	$(gdbcmd_h) $(wrapper_h) $(cp_abi_h) $(gdb_assert_h)
gnu-nat.o: gnu-nat.c $(gdb_string_h) $(defs_h) $(inferior_h) $(symtab_h) \
	$(value_h) $(language_h) $(target_h) $(gdb_wait_h) $(gdbcmd_h) \
	$(gdbcore_h) $(gdbthread_h) $(gdb_assert_h) $(gnu_nat_h) \
	$(exc_request_S_h) $(notify_S_h) $(process_reply_S_h) \
	$(msg_reply_S_h) $(exc_request_U_h) $(msg_U_h)
gnu-v2-abi.o: gnu-v2-abi.c $(defs_h) $(gdb_string_h) $(symtab_h) \
	$(gdbtypes_h) $(value_h) $(demangle_h) $(cp_abi_h)
gnu-v3-abi.o: gnu-v3-abi.c $(defs_h) $(value_h) $(cp_abi_h) $(demangle_h) \
	$(gdb_assert_h) $(gdb_string_h)
go32-nat.o: go32-nat.c $(defs_h) $(inferior_h) $(gdb_wait_h) $(gdbcore_h) \
	$(command_h) $(gdbcmd_h) $(floatformat_h) $(buildsym_h) \
	$(i387_tdep_h) $(i386_tdep_h) $(value_h) $(regcache_h) \
	$(gdb_string_h)
interps.o: interps.c $(defs_h) $(gdbcmd_h) $(ui_out_h) $(event_loop_h) \
	$(event_top_h) $(interps_h) $(gdb_h) $(wrapper_h) $(gdb_events_h)
h8300-tdep.o: h8300-tdep.c $(defs_h) $(frame_h) $(symtab_h) $(dis_asm_h) \
	$(gdbcmd_h) $(gdbtypes_h) $(gdbcore_h) $(gdb_string_h) $(value_h) \
	$(regcache_h)
h8500-tdep.o: h8500-tdep.c $(defs_h) $(frame_h) $(symtab_h) $(gdbtypes_h) \
	$(gdbcmd_h) $(value_h) $(dis_asm_h) $(gdbcore_h) $(regcache_h)
hp300ux-nat.o: hp300ux-nat.c $(defs_h) $(frame_h) $(inferior_h) \
	$(regcache_h)
hpacc-abi.o: hpacc-abi.c $(defs_h) $(value_h) $(gdb_regex_h) $(gdb_string_h) \
	$(gdbtypes_h) $(gdbcore_h) $(cp_abi_h)
hppa-tdep.o: hppa-tdep.c $(defs_h) $(frame_h) $(bfd_h) $(inferior_h) \
	$(value_h) $(regcache_h) $(completer_h) $(symtab_h) $(a_out_encap_h) \
	$(gdb_stat_h) $(gdb_wait_h) $(gdbcore_h) $(gdbcmd_h) $(target_h) \
	$(symfile_h) $(objfiles_h)
hppab-nat.o: hppab-nat.c $(defs_h) $(inferior_h) $(target_h) $(regcache_h)
hppah-nat.o: hppah-nat.c $(defs_h) $(inferior_h) $(target_h) $(gdbcore_h) \
	$(gdb_wait_h) $(regcache_h)
hppam3-nat.o: hppam3-nat.c $(defs_h) $(inferior_h) $(floatformat_h) \
	$(regcache_h)
hpread.o: hpread.c $(defs_h) $(bfd_h) $(gdb_string_h) $(hp_symtab_h) \
	$(syms_h) $(symtab_h) $(symfile_h) $(objfiles_h) $(buildsym_h) \
	$(complaints_h) $(gdb_stabs_h) $(gdbtypes_h) $(demangle_h) \
	$(gdb_string_h)
hpux-thread.o: hpux-thread.c $(defs_h) $(gdbthread_h) $(target_h) \
	$(inferior_h) $(regcache_h) $(gdbcore_h)
i386-linux-nat.o: i386-linux-nat.c $(defs_h) $(inferior_h) $(gdbcore_h) \
	$(regcache_h) $(gdb_assert_h) $(gdb_string_h) $(gregset_h) \
	$(i387_tdep_h) $(i386_tdep_h) $(i386_linux_tdep_h)
i386-linux-tdep.o: i386-linux-tdep.c $(defs_h) $(gdbcore_h) $(frame_h) \
	$(value_h) $(regcache_h) $(inferior_h) $(symtab_h) $(symfile_h) \
	$(objfiles_h) $(solib_svr4_h) $(i386_tdep_h) $(i386_linux_tdep_h)
i386-nat.o: i386-nat.c $(defs_h) $(breakpoint_h) $(command_h) $(gdbcmd_h)
i386-sol2-tdep.o: i386-sol2-tdep.c $(defs_h) $(value_h) $(i386_tdep_h)
i386-stub.o: i386-stub.c
i386-tdep.o: i386-tdep.c $(defs_h) $(gdb_string_h) $(frame_h) $(inferior_h) \
	$(gdbcore_h) $(objfiles_h) $(target_h) $(floatformat_h) $(symfile_h) \
	$(symtab_h) $(gdbcmd_h) $(command_h) $(arch_utils_h) $(regcache_h) \
	$(doublest_h) $(value_h) $(gdb_assert_h) $(i386_tdep_h) \
	$(i387_tdep_h)
# OBSOLETE i386aix-nat.o: i386aix-nat.c
i386b-nat.o: i386b-nat.c $(defs_h)
i386bsd-nat.o: i386bsd-nat.c $(defs_h) $(inferior_h) $(regcache_h) \
	$(gdb_assert_h) $(gregset_h) $(i386_tdep_h) $(i387_tdep_h)
i386bsd-tdep.o: i386bsd-tdep.c $(defs_h) $(arch_utils_h) $(frame_h) \
	$(gdbcore_h) $(regcache_h) $(gdb_string_h) $(i386_tdep_h)
i386fbsd-nat.o: i386fbsd-nat.c $(defs_h) $(inferior_h) $(regcache_h)
i386gnu-nat.o: i386gnu-nat.c $(defs_h) $(inferior_h) $(floatformat_h) \
	$(regcache_h) $(gdb_assert_h) $(i386_tdep_h) $(gnu_nat_h) \
	$(i387_tdep_h)
i386gnu-tdep.o: i386gnu-tdep.c $(defs_h) $(i386_tdep_h)
i386ly-tdep.o: i386ly-tdep.c $(defs_h) $(gdbcore_h) $(inferior_h) \
	$(regcache_h) $(target_h) $(i386_tdep_h)
# OBSOLETE i386m3-nat.o: i386m3-nat.c
# OBSOLETE i386mach-nat.o: i386mach-nat.c
i386nbsd-tdep.o: i386nbsd-tdep.c $(defs_h) $(gdbtypes_h) $(gdbcore_h) \
	$(regcache_h) $(i387_tdep_h)
i386obsd-nat.o: i386obsd-nat.c $(defs_h)
i386v-nat.o: i386v-nat.c $(defs_h) $(frame_h) $(inferior_h) $(language_h) \
	$(gdbcore_h) $(gdb_stat_h) $(floatformat_h) $(target_h)
i386v4-nat.o: i386v4-nat.c $(defs_h) $(value_h) $(inferior_h) $(regcache_h) \
	$(i386_tdep_h) $(i387_tdep_h) $(gregset_h)
i387-tdep.o: i387-tdep.c $(defs_h) $(frame_h) $(inferior_h) $(language_h) \
	$(value_h) $(gdbcore_h) $(floatformat_h) $(regcache_h) \
	$(gdb_assert_h) $(gdb_string_h) $(doublest_h) $(i386_tdep_h)
# OBSOLETE i960-tdep.o: i960-tdep.c
ia64-aix-nat.o: ia64-aix-nat.c $(defs_h) $(inferior_h) $(target_h) \
	$(gdbcore_h) $(regcache_h) $(symtab_h) $(bfd_h) $(symfile_h) \
	$(objfiles_h) $(gdb_stat_h)
ia64-aix-tdep.o: ia64-aix-tdep.c $(defs_h)
ia64-linux-nat.o: ia64-linux-nat.c $(defs_h) $(inferior_h) $(target_h) \
	$(gdbcore_h) $(regcache_h) $(gregset_h)
ia64-linux-tdep.o: ia64-linux-tdep.c $(defs_h) $(arch_utils_h)
ia64-tdep.o: ia64-tdep.c $(defs_h) $(inferior_h) $(symfile_h) $(gdbcore_h) \
	$(arch_utils_h) $(floatformat_h) $(regcache_h) $(doublest_h) \
	$(value_h) $(objfiles_h) $(elf_common_h) $(elf_bfd_h)
inf-loop.o: inf-loop.c $(defs_h) $(inferior_h) $(target_h) $(event_loop_h) \
	$(event_top_h) $(inf_loop_h) $(remote_h)
infcmd.o: infcmd.c $(defs_h) $(gdb_string_h) $(symtab_h) $(gdbtypes_h) \
	$(frame_h) $(inferior_h) $(environ_h) $(value_h) $(gdbcmd_h) \
	$(symfile_h) $(gdbcore_h) $(target_h) $(language_h) $(symfile_h) \
	$(objfiles_h) $(completer_h) $(ui_out_h) $(event_top_h) \
	$(parser_defs_h) $(regcache_h)
inflow.o: inflow.c $(defs_h) $(frame_h) $(inferior_h) $(command_h) \
	$(serial_h) $(terminal_h) $(target_h) $(gdbthread_h) $(gdb_string_h)
infptrace.o: infptrace.c $(defs_h) $(frame_h) $(inferior_h) $(target_h) \
	$(gdb_string_h) $(regcache_h) $(gdb_wait_h) $(command_h) \
	$(gdb_dirent_h) $(gdbcore_h) $(gdb_stat_h)
infrun.o: infrun.c $(defs_h) $(gdb_string_h) $(symtab_h) $(frame_h) \
	$(inferior_h) $(breakpoint_h) $(gdb_wait_h) $(gdbcore_h) $(gdbcmd_h) \
	$(cli_script_h) $(target_h) $(gdbthread_h) $(annotate_h) \
	$(symfile_h) $(top_h) $(inf_loop_h) $(regcache_h) $(value_h)
inftarg.o: inftarg.c $(defs_h) $(frame_h) $(inferior_h) $(target_h) \
	$(gdbcore_h) $(command_h) $(gdb_stat_h) $(gdb_wait_h)
infttrace.o: infttrace.c $(defs_h) $(frame_h) $(inferior_h) $(target_h) \
	$(gdb_string_h) $(gdb_wait_h) $(command_h) $(gdbcore_h)
irix4-nat.o: irix4-nat.c $(defs_h) $(inferior_h) $(gdbcore_h) $(regcache_h) \
	$(gregset_h)
irix5-nat.o: irix5-nat.c $(defs_h) $(inferior_h) $(gdbcore_h) $(target_h) \
	$(regcache_h) $(gdb_string_h) $(gregset_h)
jv-lang.o: jv-lang.c $(defs_h) $(symtab_h) $(gdbtypes_h) $(expression_h) \
	$(parser_defs_h) $(language_h) $(gdbtypes_h) $(symtab_h) \
	$(symfile_h) $(objfiles_h) $(gdb_string_h) $(value_h) $(c_lang_h) \
	$(jv_lang_h) $(gdbcore_h)
jv-typeprint.o: jv-typeprint.c $(defs_h) $(symtab_h) $(gdbtypes_h) \
	$(value_h) $(demangle_h) $(jv_lang_h) $(gdb_string_h) $(typeprint_h) \
	$(c_lang_h) $(cp_abi_h)
jv-valprint.o: jv-valprint.c $(defs_h) $(symtab_h) $(gdbtypes_h) \
	$(gdbcore_h) $(expression_h) $(value_h) $(demangle_h) $(valprint_h) \
	$(language_h) $(jv_lang_h) $(c_lang_h) $(annotate_h) $(gdb_string_h)
kod-cisco.o: kod-cisco.c $(defs_h) $(gdb_string_h) $(kod_h)
kod.o: kod.c $(defs_h) $(command_h) $(gdbcmd_h) $(target_h) $(gdb_string_h) \
	$(kod_h)
language.o: language.c $(defs_h) $(gdb_string_h) $(symtab_h) $(gdbtypes_h) \
	$(value_h) $(gdbcmd_h) $(expression_h) $(language_h) $(target_h) \
	$(parser_defs_h) $(jv_lang_h)
lin-lwp.o: lin-lwp.c $(defs_h) $(gdb_assert_h) $(gdb_string_h) $(gdb_wait_h) \
	$(gdbthread_h) $(inferior_h) $(target_h) $(regcache_h) $(gdbcmd_h)
linespec.o: linespec.c $(defs_h) $(symtab_h) $(frame_h) $(command_h) \
	$(symfile_h) $(objfiles_h) $(demangle_h) $(value_h) $(completer_h) \
	$(cp_abi_h)
linux-proc.o: linux-proc.c $(defs_h) $(inferior_h) $(regcache_h) \
	$(gregset_h) $(gdbcore_h) $(gdbthread_h) $(elf_bfd_h) \
	$(cli_decode_h) $(gdb_string_h)
lynx-nat.o: lynx-nat.c $(defs_h) $(frame_h) $(inferior_h) $(target_h) \
	$(gdbcore_h) $(regcache_h)
m2-lang.o: m2-lang.c $(defs_h) $(symtab_h) $(gdbtypes_h) $(expression_h) \
	$(parser_defs_h) $(language_h) $(m2_lang_h) $(c_lang_h) \
	$(valprint_h)
m2-typeprint.o: m2-typeprint.c $(defs_h) $(bfd_h) $(symtab_h) $(gdbtypes_h) \
	$(expression_h) $(value_h) $(gdbcore_h) $(target_h) $(m2_lang_h)
m2-valprint.o: m2-valprint.c $(defs_h) $(symtab_h) $(gdbtypes_h) \
	$(m2_lang_h)
m3-nat.o: m3-nat.c $(defs_h) $(inferior_h) $(symtab_h) $(value_h) \
	$(language_h) $(target_h) $(gdb_wait_h) $(gdbcmd_h) $(gdbcore_h) \
	$(regcache_h)
m32r-rom.o: m32r-rom.c $(defs_h) $(gdbcore_h) $(target_h) $(monitor_h) \
	$(serial_h) $(symtab_h) $(command_h) $(gdbcmd_h) $(symfile_h) \
	$(gdb_string_h) $(objfiles_h) $(inferior_h) $(regcache_h)
m32r-stub.o: m32r-stub.c $(syscall_h)
m32r-tdep.o: m32r-tdep.c $(defs_h) $(frame_h) $(inferior_h) $(target_h) \
	$(value_h) $(bfd_h) $(gdb_string_h) $(gdbcore_h) $(symfile_h) \
	$(regcache_h)
m68hc11-tdep.o: m68hc11-tdep.c $(defs_h) $(frame_h) $(symtab_h) \
	$(gdbtypes_h) $(gdbcmd_h) $(gdbcore_h) $(gdb_string_h) $(value_h) \
	$(inferior_h) $(dis_asm_h) $(symfile_h) $(objfiles_h) \
	$(arch_utils_h) $(regcache_h) $(target_h) $(opcode_m68hc11_h) \
	$(elf_m68hc11_h) $(elf_bfd_h)
m68k-stub.o: m68k-stub.c
m68k-tdep.o: m68k-tdep.c $(defs_h) $(frame_h) $(symtab_h) $(gdbcore_h) \
	$(value_h) $(gdb_string_h) $(inferior_h) $(regcache_h) \
	$(arch_utils_h) $(gregset_h)
m68klinux-nat.o: m68klinux-nat.c $(defs_h) $(frame_h) $(inferior_h) \
	$(language_h) $(gdbcore_h) $(regcache_h) $(gdb_stat_h) \
	$(floatformat_h) $(target_h) $(gregset_h)
m68knbsd-nat.o: m68knbsd-nat.c $(defs_h) $(inferior_h) $(gdbcore_h) \
	$(regcache_h)
m68knbsd-tdep.o: m68knbsd-tdep.c $(defs_h) $(gdbtypes_h) $(regcache_h)
# OBSOLETE m88k-nat.o: m88k-nat.c
# OBSOLETE m88k-tdep.o: m88k-tdep.c
macrocmd.o: macrocmd.c $(defs_h) $(macrotab_h) $(macroexp_h) $(macroscope_h) \
	$(command_h) $(gdbcmd_h)
macroexp.o: macroexp.c $(defs_h) $(gdb_obstack_h) $(bcache_h) $(macrotab_h) \
	$(macroexp_h) $(gdb_assert_h)
macroscope.o: macroscope.c $(defs_h) $(macroscope_h) $(symtab_h) $(target_h) \
	$(frame_h) $(inferior_h)
macrotab.o: macrotab.c $(defs_h) $(gdb_obstack_h) $(splay_tree_h) \
	$(symtab_h) $(symfile_h) $(objfiles_h) $(macrotab_h) $(gdb_assert_h) \
	$(bcache_h) $(complaints_h)
main.o: main.c $(defs_h) $(top_h) $(target_h) $(inferior_h) $(symfile_h) \
	$(gdbcore_h) $(getopt_h) $(gdb_stat_h) $(gdb_string_h) \
	$(event_loop_h) $(ui_out_h)
maint.o: maint.c $(defs_h) $(command_h) $(gdbcmd_h) $(symtab_h) \
	$(gdbtypes_h) $(demangle_h) $(gdbcore_h) $(expression_h) \
	$(language_h) $(symfile_h) $(objfiles_h) $(value_h) $(cli_decode_h)
mcore-rom.o: mcore-rom.c $(defs_h) $(gdbcore_h) $(target_h) $(monitor_h) \
	$(gdb_string_h) $(regcache_h) $(serial_h)
mcore-tdep.o: mcore-tdep.c $(defs_h) $(frame_h) $(symtab_h) $(value_h) \
	$(gdbcmd_h) $(regcache_h) $(symfile_h) $(gdbcore_h) $(inferior_h) \
	$(arch_utils_h)
mdebugread.o: mdebugread.c $(defs_h) $(symtab_h) $(gdbtypes_h) $(gdbcore_h) \
	$(symfile_h) $(objfiles_h) $(gdb_obstack_h) $(buildsym_h) \
	$(stabsread_h) $(complaints_h) $(demangle_h) $(gdb_assert_h) \
	$(coff_sym_h) $(coff_symconst_h) $(gdb_stat_h) $(gdb_string_h) \
	$(bfd_h) $(coff_ecoff_h) $(libaout_h) $(aout_aout64_h) \
	$(aout_stab_gnu_h) $(expression_h) $(language_h)
mem-break.o: mem-break.c $(defs_h) $(symtab_h) $(breakpoint_h) $(inferior_h) \
	$(target_h)
memattr.o: memattr.c $(defs_h) $(command_h) $(gdbcmd_h) $(memattr_h) \
	$(target_h) $(value_h) $(language_h) $(gdb_string_h)
minsyms.o: minsyms.c $(defs_h) $(gdb_string_h) $(symtab_h) $(bfd_h) \
	$(symfile_h) $(objfiles_h) $(demangle_h) $(value_h) $(cp_abi_h)
mips-irix-tdep.o: mips-irix-tdep.c $(defs_h) $(osabi_h) $(elf_bfd_h)
mips-linux-nat.o: mips-linux-nat.c $(defs_h)
mips-linux-tdep.o: mips-linux-tdep.c $(defs_h) $(gdbcore_h) $(target_h) \
	$(solib_svr4_h)
mips-nat.o: mips-nat.c $(defs_h) $(inferior_h) $(gdbcore_h) $(regcache_h)
mips-tdep.o: mips-tdep.c $(defs_h) $(gdb_string_h) $(frame_h) $(inferior_h) \
	$(symtab_h) $(value_h) $(gdbcmd_h) $(language_h) $(gdbcore_h) \
	$(symfile_h) $(objfiles_h) $(gdbtypes_h) $(target_h) $(arch_utils_h) \
	$(regcache_h) $(osabi_h) $(opcode_mips_h) $(elf_mips_h) $(elf_bfd_h) \
	$(symcat_h)
mipsm3-nat.o: mipsm3-nat.c $(defs_h) $(inferior_h) $(regcache_h)
mipsnbsd-nat.o: mipsnbsd-nat.c $(defs_h) $(inferior_h) $(regcache_h) \
	$(mipsnbsd_tdep_h)
mipsnbsd-tdep.o: mipsnbsd-tdep.c $(defs_h) $(gdbcore_h) $(regcache_h) \
	$(target_h) $(value_h) $(osabi_h) $(mipsnbsd_tdep_h) $(solib_svr4_h)
mipsread.o: mipsread.c $(defs_h) $(gdb_string_h) $(bfd_h) $(symtab_h) \
	$(symfile_h) $(objfiles_h) $(buildsym_h) $(stabsread_h) \
	$(coff_sym_h) $(coff_internal_h) $(coff_ecoff_h) $(libcoff_h) \
	$(libecoff_h) $(elf_common_h) $(elf_mips_h)
mipsv4-nat.o: mipsv4-nat.c $(defs_h) $(inferior_h) $(gdbcore_h) $(target_h) \
	$(regcache_h) $(gregset_h)
mn10200-tdep.o: mn10200-tdep.c $(defs_h) $(frame_h) $(inferior_h) \
	$(target_h) $(value_h) $(bfd_h) $(gdb_string_h) $(gdbcore_h) \
	$(symfile_h) $(regcache_h)
mn10300-tdep.o: mn10300-tdep.c $(defs_h) $(frame_h) $(inferior_h) \
	$(target_h) $(value_h) $(bfd_h) $(gdb_string_h) $(gdbcore_h) \
	$(symfile_h) $(regcache_h) $(arch_utils_h)
mon960-rom.o: mon960-rom.c $(defs_h) $(gdbcore_h) $(target_h) $(monitor_h) \
	$(serial_h) $(srec_h) $(xmodem_h) $(symtab_h) $(symfile_h) \
	$(inferior_h) $(gdb_string_h)
monitor.o: monitor.c $(defs_h) $(gdbcore_h) $(target_h) $(gdb_string_h) \
	$(command_h) $(serial_h) $(monitor_h) $(gdbcmd_h) $(inferior_h) \
	$(gdb_regex_h) $(srec_h) $(regcache_h)
nbsd-tdep.o: nbsd-tdep.c $(defs_h) $(solib_svr4_h)
nindy-tdep.o: nindy-tdep.c $(defs_h) $(symtab_h) $(frame_h) $(gdbcore_h)
nlmread.o: nlmread.c $(defs_h) $(bfd_h) $(symtab_h) $(symfile_h) \
	$(objfiles_h) $(buildsym_h) $(stabsread_h)
ns32k-tdep.o: ns32k-tdep.c $(defs_h) $(frame_h) $(gdbtypes_h) $(gdbcore_h) \
	$(inferior_h) $(regcache_h) $(target_h) $(arch_utils_h) \
	$(ns32k_tdep_h)
ns32knbsd-nat.o: ns32knbsd-nat.c $(defs_h) $(inferior_h) $(target_h) \
	$(gdbcore_h) $(regcache_h)
ns32knbsd-tdep.o: ns32knbsd-tdep.c $(defs_h) $(ns32k_tdep_h)
objfiles.o: objfiles.c $(defs_h) $(bfd_h) $(symtab_h) $(symfile_h) \
	$(objfiles_h) $(gdb_stabs_h) $(target_h) $(bcache_h) $(gdb_stat_h) \
	$(gdb_obstack_h) $(gdb_string_h) $(breakpoint_h) $(mmalloc_h)
ocd.o: ocd.c $(defs_h) $(gdbcore_h) $(gdb_string_h) $(frame_h) $(inferior_h) \
	$(bfd_h) $(symfile_h) $(target_h) $(gdbcmd_h) $(objfiles_h) \
	$(gdb_stabs_h) $(serial_h) $(ocd_h) $(regcache_h)
op50-rom.o: op50-rom.c $(defs_h) $(gdbcore_h) $(target_h) $(monitor_h) \
	$(serial_h)
# OBSOLETE os9kread.o: os9kread.c
osabi.o: osabi.c $(defs_h) $(gdb_string_h) $(osabi_h) $(elf_bfd_h)
osfsolib.o: osfsolib.c $(defs_h) $(gdb_string_h) $(symtab_h) $(bfd_h) \
	$(symfile_h) $(objfiles_h) $(gdbcore_h) $(command_h) $(target_h) \
	$(frame_h) $(gdb_regex_h) $(inferior_h) $(language_h) $(gdbcmd_h)
p-lang.o: p-lang.c $(defs_h) $(gdb_string_h) $(symtab_h) $(gdbtypes_h) \
	$(expression_h) $(parser_defs_h) $(language_h) $(p_lang_h) \
	$(valprint_h)
p-typeprint.o: p-typeprint.c $(defs_h) $(gdb_obstack_h) $(bfd_h) $(symtab_h) \
	$(gdbtypes_h) $(expression_h) $(value_h) $(gdbcore_h) $(target_h) \
	$(language_h) $(p_lang_h) $(typeprint_h) $(gdb_string_h)
p-valprint.o: p-valprint.c $(defs_h) $(gdb_obstack_h) $(symtab_h) \
	$(gdbtypes_h) $(expression_h) $(value_h) $(command_h) $(gdbcmd_h) \
	$(gdbcore_h) $(demangle_h) $(valprint_h) $(typeprint_h) \
	$(language_h) $(target_h) $(annotate_h) $(p_lang_h) $(cp_abi_h)
pa64solib.o: pa64solib.c $(defs_h) $(frame_h) $(bfd_h) $(libhppa_h) \
	$(gdbcore_h) $(symtab_h) $(breakpoint_h) $(symfile_h) $(objfiles_h) \
	$(inferior_h) $(gdb_stabs_h) $(gdb_stat_h) $(gdbcmd_h) $(language_h) \
	$(regcache_h)
parse.o: parse.c $(defs_h) $(gdb_string_h) $(symtab_h) $(gdbtypes_h) \
	$(frame_h) $(expression_h) $(value_h) $(command_h) $(language_h) \
	$(parser_defs_h) $(gdbcmd_h) $(symfile_h) $(inferior_h) \
	$(doublest_h) $(builtin_regs_h) $(gdb_assert_h)
ppc-bdm.o: ppc-bdm.c $(defs_h) $(gdbcore_h) $(gdb_string_h) $(frame_h) \
	$(inferior_h) $(bfd_h) $(symfile_h) $(target_h) $(gdbcmd_h) \
	$(objfiles_h) $(gdb_stabs_h) $(serial_h) $(ocd_h) $(ppc_tdep_h) \
	$(regcache_h)
ppc-linux-nat.o: ppc-linux-nat.c $(defs_h) $(frame_h) $(inferior_h) \
	$(gdbcore_h) $(regcache_h) $(gregset_h) $(ppc_tdep_h)
ppc-linux-tdep.o: ppc-linux-tdep.c $(defs_h) $(frame_h) $(inferior_h) \
	$(symtab_h) $(target_h) $(gdbcore_h) $(gdbcmd_h) $(symfile_h) \
	$(objfiles_h) $(regcache_h) $(value_h) $(solib_svr4_h) $(ppc_tdep_h)
ppc-sysv-tdep.o: ppc-sysv-tdep.c $(defs_h) $(gdbcore_h) $(inferior_h) \
	$(regcache_h) $(value_h) $(ppc_tdep_h)
ppcbug-rom.o: ppcbug-rom.c $(defs_h) $(gdbcore_h) $(target_h) $(monitor_h) \
	$(serial_h) $(regcache_h)
ppcnbsd-nat.o: ppcnbsd-nat.c $(defs_h) $(inferior_h) $(ppc_tdep_h) \
	$(ppcnbsd_tdep_h)
ppcnbsd-tdep.o: ppcnbsd-tdep.c $(defs_h) $(gdbcore_h) $(regcache_h) \
	$(target_h) $(breakpoint_h) $(value_h) $(ppc_tdep_h) \
	$(ppcnbsd_tdep_h) $(nbsd_tdep_h) $(solib_svr4_h)
printcmd.o: printcmd.c $(defs_h) $(gdb_string_h) $(frame_h) $(symtab_h) \
	$(gdbtypes_h) $(value_h) $(language_h) $(expression_h) $(gdbcore_h) \
	$(gdbcmd_h) $(target_h) $(breakpoint_h) $(demangle_h) $(valprint_h) \
	$(annotate_h) $(symfile_h) $(objfiles_h) $(completer_h) $(ui_out_h) \
	$(gdb_assert_h)
proc-api.o: proc-api.c $(defs_h) $(gdbcmd_h) $(completer_h) $(proc_utils_h)
proc-events.o: proc-events.c $(defs_h)
proc-flags.o: proc-flags.c $(defs_h)
proc-service.o: proc-service.c $(defs_h) $(gdb_proc_service_h) $(inferior_h) \
	$(symtab_h) $(target_h) $(gregset_h)
proc-why.o: proc-why.c $(defs_h) $(proc_utils_h)
procfs.o: procfs.c $(defs_h) $(inferior_h) $(target_h) $(gdbcore_h) \
	$(elf_bfd_h) $(gdbcmd_h) $(gdbthread_h) $(gdb_dirent_h) $(X_OK) \
	$(gdb_stat_h) $(proc_utils_h) $(gregset_h)
ptx4-nat.o: ptx4-nat.c $(defs_h) $(inferior_h) $(gdbcore_h) $(regcache_h) \
	$(gregset_h)
d1499 19
a1517 331
	$(gdbcmd_h) $(regcache_h) $(gdb_assert_h) $(gdb_string_h) \
	$(gdbcmd_h)
remote-array.o: remote-array.c $(defs_h) $(gdbcore_h) $(target_h) \
	$(gdb_string_h) $(command_h) $(serial_h) $(monitor_h) \
	$(remote_utils_h) $(inferior_h) $(version_h) $(regcache_h)
# OBSOLETE remote-bug.o: remote-bug.c
remote-e7000.o: remote-e7000.c $(defs_h) $(gdbcore_h) $(gdbarch_h) \
	$(inferior_h) $(target_h) $(value_h) $(command_h) $(gdb_string_h) \
	$(gdbcmd_h) $(serial_h) $(remote_utils_h) $(symfile_h) $(regcache_h)
remote-es.o: remote-es.c $(defs_h) $(gdb_string_h) $(frame_h) $(inferior_h) \
	$(target_h) $(command_h) $(symfile_h) $(remote_utils_h) $(gdbcore_h) \
	$(serial_h) $(regcache_h) $(value_h)
remote-est.o: remote-est.c $(defs_h) $(gdbcore_h) $(target_h) $(monitor_h) \
	$(serial_h) $(regcache_h)
remote-hms.o: remote-hms.c $(defs_h) $(gdbcore_h) $(target_h) $(monitor_h) \
	$(serial_h) $(regcache_h)
remote-mips.o: remote-mips.c $(defs_h) $(inferior_h) $(bfd_h) $(symfile_h) \
	$(gdbcmd_h) $(gdbcore_h) $(serial_h) $(target_h) $(remote_utils_h) \
	$(gdb_string_h) $(gdb_stat_h) $(regcache_h)
# OBSOLETE remote-nindy.o: remote-nindy.c
# OBSOLETE remote-nrom.o: remote-nrom.c
# OBSOLETE remote-os9k.o: remote-os9k.c
remote-rdi.o: remote-rdi.c $(defs_h) $(gdb_string_h) $(frame_h) \
	$(inferior_h) $(bfd_h) $(symfile_h) $(target_h) $(gdbcmd_h) \
	$(objfiles_h) $(gdb_stabs_h) $(gdbthread_h) $(gdbcore_h) \
	$(breakpoint_h) $(completer_h) $(regcache_h) $(arm_tdep_h) \
	$(rdi_share_ardi_h) $(rdi_share_adp_h) $(rdi_share_hsys_h)
remote-rdp.o: remote-rdp.c $(defs_h) $(inferior_h) $(value_h) \
	$(gdb_callback_h) $(command_h) $(symfile_h) $(remote_utils_h) \
	$(gdb_string_h) $(gdbcore_h) $(regcache_h) $(serial_h) $(arm_tdep_h)
remote-sds.o: remote-sds.c $(defs_h) $(gdb_string_h) $(frame_h) \
	$(inferior_h) $(bfd_h) $(symfile_h) $(target_h) $(gdbcmd_h) \
	$(objfiles_h) $(gdb_stabs_h) $(gdbthread_h) $(gdbcore_h) \
	$(regcache_h) $(serial_h)
remote-sim.o: remote-sim.c $(defs_h) $(inferior_h) $(value_h) \
	$(gdb_string_h) $(terminal_h) $(target_h) $(gdbcore_h) \
	$(gdb_callback_h) $(gdb_remote_sim_h) $(remote_utils_h) $(command_h) \
	$(regcache_h) $(gdb_assert_h) $(sim_regno_h)
remote-st.o: remote-st.c $(defs_h) $(gdbcore_h) $(target_h) $(gdb_string_h) \
	$(serial_h) $(regcache_h)
remote-utils.o: remote-utils.c $(defs_h) $(gdb_string_h) $(gdbcmd_h) \
	$(target_h) $(serial_h) $(gdbcore_h) $(inferior_h) $(remote_utils_h) \
	$(regcache_h)
remote-vx.o: remote-vx.c $(defs_h) $(frame_h) $(inferior_h) $(target_h) \
	$(gdbcore_h) $(command_h) $(symtab_h) $(complaints_h) $(gdbcmd_h) \
	$(bfd_h) $(symfile_h) $(objfiles_h) $(gdb_stabs_h) $(regcache_h) \
	$(gdb_string_h) $(vx_share_ptrace_h) $(vx_share_xdr_ptrace_h) \
	$(vx_share_xdr_ld_h) $(vx_share_xdr_rdb_h) $(vx_share_dbgRpcLib_h)
remote-vx68.o: remote-vx68.c $(defs_h) $(vx_share_regPacket_h) $(frame_h) \
	$(inferior_h) $(target_h) $(gdbcore_h) $(command_h) $(symtab_h) \
	$(symfile_h) $(regcache_h) $(gdb_string_h) $(vx_share_ptrace_h) \
	$(vx_share_xdr_ptrace_h) $(vx_share_xdr_ld_h) $(vx_share_xdr_rdb_h) \
	$(vx_share_dbgRpcLib_h)
# OBSOLETE remote-vx960.o: remote-vx960.c
remote-vxmips.o: remote-vxmips.c $(defs_h) $(vx_share_regPacket_h) \
	$(frame_h) $(inferior_h) $(target_h) $(gdbcore_h) $(command_h) \
	$(symtab_h) $(symfile_h) $(regcache_h) $(gdb_string_h) \
	$(vx_share_ptrace_h) $(vx_share_xdr_ptrace_h) $(vx_share_xdr_ld_h) \
	$(vx_share_xdr_rdb_h) $(vx_share_dbgRpcLib_h)
remote-vxsparc.o: remote-vxsparc.c $(defs_h) $(vx_share_regPacket_h) \
	$(frame_h) $(inferior_h) $(target_h) $(gdbcore_h) $(command_h) \
	$(symtab_h) $(symfile_h) $(regcache_h) $(gdb_string_h) \
	$(vx_share_ptrace_h) $(vx_share_xdr_ptrace_h) $(vx_share_xdr_ld_h) \
	$(vx_share_xdr_rdb_h) $(vx_share_dbgRpcLib_h)
remote.o: remote.c $(defs_h) $(gdb_string_h) $(inferior_h) $(bfd_h) \
	$(symfile_h) $(target_h) $(gdbcmd_h) $(objfiles_h) $(gdb_stabs_h) \
	$(gdbthread_h) $(remote_h) $(regcache_h) $(value_h) $(gdb_assert_h) \
	$(event_loop_h) $(event_top_h) $(inf_loop_h) $(serial_h) \
	$(gdbcore_h)
rom68k-rom.o: rom68k-rom.c $(defs_h) $(gdbcore_h) $(target_h) $(monitor_h) \
	$(serial_h) $(regcache_h) $(value_h)
rs6000-nat.o: rs6000-nat.c $(defs_h) $(inferior_h) $(target_h) $(gdbcore_h) \
	$(xcoffsolib_h) $(symfile_h) $(objfiles_h) $(libbfd_h) $(bfd_h) \
	$(gdb_stabs_h) $(regcache_h) $(arch_utils_h) $(language_h) \
	$(ppc_tdep_h) $(gdb_stat_h)
rs6000-tdep.o: rs6000-tdep.c $(defs_h) $(frame_h) $(inferior_h) $(symtab_h) \
	$(target_h) $(gdbcore_h) $(gdbcmd_h) $(symfile_h) $(objfiles_h) \
	$(arch_utils_h) $(regcache_h) $(doublest_h) $(value_h) \
	$(parser_defs_h) $(libbfd_h) $(coff_internal_h) $(libcoff_h) \
	$(coff_xcoff_h) $(libxcoff_h) $(elf_bfd_h) $(solib_svr4_h) \
	$(ppc_tdep_h)
s390-nat.o: s390-nat.c $(defs_h) $(tm_h) $(regcache_h)
s390-tdep.o: s390-tdep.c $(arch_utils_h) $(frame_h) $(inferior_h) \
	$(symtab_h) $(target_h) $(gdbcore_h) $(gdbcmd_h) $(symfile_h) \
	$(objfiles_h) $(tm_h) $(__bfd_bfd_h) $(floatformat_h) $(regcache_h) \
	$(value_h) $(gdb_assert_h)
scm-exp.o: scm-exp.c $(defs_h) $(symtab_h) $(gdbtypes_h) $(expression_h) \
	$(parser_defs_h) $(language_h) $(value_h) $(c_lang_h) $(scm_lang_h) \
	$(scm_tags_h)
scm-lang.o: scm-lang.c $(defs_h) $(symtab_h) $(gdbtypes_h) $(expression_h) \
	$(parser_defs_h) $(language_h) $(value_h) $(c_lang_h) $(scm_lang_h) \
	$(scm_tags_h) $(gdb_string_h) $(gdbcore_h)
scm-valprint.o: scm-valprint.c $(defs_h) $(symtab_h) $(gdbtypes_h) \
	$(expression_h) $(parser_defs_h) $(language_h) $(value_h) \
	$(scm_lang_h) $(valprint_h) $(gdbcore_h)
ser-e7kpc.o: ser-e7kpc.c $(defs_h) $(serial_h) $(gdb_string_h)
ser-go32.o: ser-go32.c $(defs_h) $(gdbcmd_h) $(serial_h) $(gdb_string_h)
ser-pipe.o: ser-pipe.c $(defs_h) $(serial_h) $(ser_unix_h) $(gdb_vfork_h) \
	$(gdb_string_h)
ser-tcp.o: ser-tcp.c $(defs_h) $(serial_h) $(ser_unix_h) $(gdb_string_h)
ser-unix.o: ser-unix.c $(defs_h) $(serial_h) $(ser_unix_h) $(terminal_h) \
	$(gdb_string_h) $(event_loop_h)
serial.o: serial.c $(defs_h) $(serial_h) $(gdb_string_h) $(gdbcmd_h)
sh-stub.o: sh-stub.c
sh-tdep.o: sh-tdep.c $(defs_h) $(frame_h) $(symtab_h) $(symfile_h) \
	$(gdbtypes_h) $(gdbcmd_h) $(gdbcore_h) $(value_h) $(dis_asm_h) \
	$(inferior_h) $(gdb_string_h) $(arch_utils_h) $(floatformat_h) \
	$(regcache_h) $(doublest_h) $(sh_tdep_h) $(elf_bfd_h) \
	$(solib_svr4_h) $(elf_sh_h) $(gdb_sim_sh_h)
sh3-rom.o: sh3-rom.c $(defs_h) $(gdbcore_h) $(target_h) $(monitor_h) \
	$(serial_h) $(srec_h) $(arch_utils_h) $(regcache_h) $(sh_tdep_h)
shnbsd-nat.o: shnbsd-nat.c $(defs_h) $(inferior_h) $(shnbsd_tdep_h)
shnbsd-tdep.o: shnbsd-tdep.c $(defs_h) $(gdbcore_h) $(regcache_h) $(value_h) \
	$(solib_svr4_h) $(nbsd_tdep_h) $(sh_tdep_h) $(shnbsd_tdep_h)
sol-thread.o: sol-thread.c $(defs_h) $(gdbthread_h) $(target_h) \
	$(inferior_h) $(gdbcmd_h) $(gdbcore_h) $(regcache_h) $(symfile_h) \
	$(gregset_h)
solib-aix5.o: solib-aix5.c $(defs_h) $(gdb_string_h) $(elf_external_h) \
	$(symtab_h) $(bfd_h) $(symfile_h) $(objfiles_h) $(gdbcore_h) \
	$(command_h) $(target_h) $(frame_h) $(gdb_regex_h) $(inferior_h) \
	$(environ_h) $(language_h) $(gdbcmd_h) $(solist_h)
solib-irix.o: solib-irix.c $(defs_h) $(symtab_h) $(bfd_h) $(symfile_h) \
	$(objfiles_h) $(gdbcore_h) $(target_h) $(inferior_h) $(solist_h)
solib-legacy.o: solib-legacy.c $(defs_h) $(gdbcore_h) $(solib_svr4_h)
solib-osf.o: solib-osf.c $(defs_h) $(gdb_string_h) $(bfd_h) $(symtab_h) \
	$(symfile_h) $(objfiles_h) $(target_h) $(inferior_h) $(solist_h)
solib-sunos.o: solib-sunos.c $(defs_h) $(gdb_string_h) $(symtab_h) $(bfd_h) \
	$(symfile_h) $(objfiles_h) $(gdbcore_h) $(inferior_h) $(solist_h)
solib-svr4.o: solib-svr4.c $(defs_h) $(elf_external_h) $(elf_common_h) \
	$(elf_mips_h) $(symtab_h) $(bfd_h) $(symfile_h) $(objfiles_h) \
	$(gdbcore_h) $(target_h) $(inferior_h) $(solist_h) $(solib_svr4_h)
solib.o: solib.c $(defs_h) $(gdb_string_h) $(symtab_h) $(bfd_h) $(symfile_h) \
	$(objfiles_h) $(gdbcore_h) $(command_h) $(target_h) $(frame_h) \
	$(gdb_regex_h) $(inferior_h) $(environ_h) $(language_h) $(gdbcmd_h) \
	$(completer_h) $(filenames_h) $(solist_h)
somread.o: somread.c $(defs_h) $(bfd_h) $(symtab_h) $(symfile_h) \
	$(objfiles_h) $(buildsym_h) $(stabsread_h) $(gdb_stabs_h) \
	$(complaints_h) $(gdb_string_h) $(demangle_h) $(som_h) $(libhppa_h)
somsolib.o: somsolib.c $(defs_h) $(frame_h) $(bfd_h) $(som_h) $(libhppa_h) \
	$(gdbcore_h) $(symtab_h) $(breakpoint_h) $(symfile_h) $(objfiles_h) \
	$(inferior_h) $(gdb_stabs_h) $(gdb_stat_h) $(gdbcmd_h) $(language_h) \
	$(regcache_h)
source.o: source.c $(defs_h) $(symtab_h) $(expression_h) $(language_h) \
	$(command_h) $(source_h) $(gdbcmd_h) $(frame_h) $(value_h) \
	$(gdb_string_h) $(gdb_stat_h) $(gdbcore_h) $(gdb_regex_h) \
	$(symfile_h) $(objfiles_h) $(annotate_h) $(gdbtypes_h) $(linespec_h) \
	$(filenames_h) $(completer_h) $(ui_out_h)
sparc-linux-nat.o: sparc-linux-nat.c $(defs_h) $(regcache_h) $(gregset_h)
sparc-nat.o: sparc-nat.c $(defs_h) $(inferior_h) $(target_h) $(gdbcore_h) \
	$(regcache_h)
sparc-stub.o: sparc-stub.c
sparc-tdep.o: sparc-tdep.c $(defs_h) $(arch_utils_h) $(frame_h) \
	$(inferior_h) $(target_h) $(value_h) $(bfd_h) $(gdb_string_h) \
	$(regcache_h) $(osabi_h) $(gregset_h) $(gdbcore_h) $(symfile_h)
sparc64nbsd-nat.o: sparc64nbsd-nat.c $(defs_h) $(inferior_h) $(regcache_h) \
	$(sparcnbsd_tdep_h)
sparcl-stub.o: sparcl-stub.c
sparcl-tdep.o: sparcl-tdep.c $(defs_h) $(gdbcore_h) $(breakpoint_h) \
	$(target_h) $(serial_h) $(regcache_h)
sparclet-rom.o: sparclet-rom.c $(defs_h) $(gdbcore_h) $(target_h) \
	$(monitor_h) $(serial_h) $(srec_h) $(symtab_h) $(symfile_h) \
	$(regcache_h)
sparclet-stub.o: sparclet-stub.c
sparcnbsd-nat.o: sparcnbsd-nat.c $(defs_h) $(inferior_h) $(regcache_h) \
	$(sparcnbsd_tdep_h)
sparcnbsd-tdep.o: sparcnbsd-tdep.c $(defs_h) $(gdbcore_h) $(regcache_h) \
	$(target_h) $(value_h) $(osabi_h) $(sparcnbsd_tdep_h) $(nbsd_tdep_h) \
	$(solib_svr4_h)
stabsread.o: stabsread.c $(defs_h) $(gdb_string_h) $(bfd_h) $(gdb_obstack_h) \
	$(symtab_h) $(gdbtypes_h) $(expression_h) $(symfile_h) $(objfiles_h) \
	$(aout_stab_gnu_h) $(libaout_h) $(aout_aout64_h) $(gdb_stabs_h) \
	$(buildsym_h) $(complaints_h) $(demangle_h) $(language_h) \
	$(doublest_h) $(stabsread_h)
stack.o: stack.c $(defs_h) $(gdb_string_h) $(value_h) $(symtab_h) \
	$(gdbtypes_h) $(expression_h) $(language_h) $(frame_h) $(gdbcmd_h) \
	$(gdbcore_h) $(target_h) $(breakpoint_h) $(demangle_h) $(inferior_h) \
	$(annotate_h) $(ui_out_h)
standalone.o: standalone.c $(gdb_stat_h) $(defs_h) $(symtab_h) $(frame_h) \
	$(inferior_h) $(gdb_wait_h)
std-regs.o: std-regs.c $(defs_h) $(builtin_regs_h) $(frame_h) $(gdbtypes_h) \
	$(value_h) $(gdb_string_h)
stop-gdb.o: stop-gdb.c $(defs_h)
sun3-nat.o: sun3-nat.c $(defs_h) $(inferior_h) $(gdbcore_h) $(regcache_h)
symfile.o: symfile.c $(defs_h) $(symtab_h) $(gdbtypes_h) $(gdbcore_h) \
	$(frame_h) $(target_h) $(value_h) $(symfile_h) $(objfiles_h) \
	$(gdbcmd_h) $(breakpoint_h) $(language_h) $(complaints_h) \
	$(demangle_h) $(inferior_h) $(gdb_stabs_h) $(gdb_obstack_h) \
	$(completer_h) $(bcache_h) $(gdb_string_h) $(gdb_stat_h)
symm-nat.o: symm-nat.c $(defs_h) $(frame_h) $(inferior_h) $(symtab_h) \
	$(target_h) $(regcache_h) $(gdb_stat_h) $(gdbcore_h) $(gdbcore_h)
symm-tdep.o: symm-tdep.c $(defs_h) $(frame_h) $(inferior_h) $(symtab_h) \
	$(gdb_stat_h) $(gdbcore_h)
symmisc.o: symmisc.c $(defs_h) $(symtab_h) $(gdbtypes_h) $(bfd_h) \
	$(symfile_h) $(objfiles_h) $(breakpoint_h) $(command_h) \
	$(gdb_obstack_h) $(language_h) $(bcache_h) $(gdb_string_h)
symtab.o: symtab.c $(defs_h) $(symtab_h) $(gdbtypes_h) $(gdbcore_h) \
	$(frame_h) $(target_h) $(value_h) $(symfile_h) $(objfiles_h) \
	$(gdbcmd_h) $(call_cmds_h) $(gdb_regex_h) $(expression_h) \
	$(language_h) $(demangle_h) $(inferior_h) $(linespec_h) \
	$(filenames_h) $(gdb_obstack_h) $(gdb_string_h) $(gdb_stat_h) \
	$(cp_abi_h)
target.o: target.c $(defs_h) $(gdb_string_h) $(target_h) $(gdbcmd_h) \
	$(symtab_h) $(inferior_h) $(bfd_h) $(symfile_h) $(objfiles_h) \
	$(gdb_wait_h) $(dcache_h) $(regcache_h)
thread-db.o: thread-db.c $(defs_h) $(gdb_assert_h) $(gdb_proc_service_h) \
	$(gdb_thread_db_h) $(bfd_h) $(gdbthread_h) $(inferior_h) \
	$(symfile_h) $(objfiles_h) $(target_h) $(regcache_h)
thread.o: thread.c $(defs_h) $(symtab_h) $(frame_h) $(inferior_h) \
	$(environ_h) $(value_h) $(target_h) $(gdbthread_h) $(command_h) \
	$(gdbcmd_h) $(regcache_h) $(gdb_h) $(gdb_string_h) $(ui_out_h)
top.o: top.c $(defs_h) $(gdbcmd_h) $(call_cmds_h) $(cli_cmds_h) \
	$(cli_script_h) $(cli_setshow_h) $(cli_decode_h) $(symtab_h) \
	$(inferior_h) $(target_h) $(breakpoint_h) $(gdbtypes_h) \
	$(expression_h) $(value_h) $(language_h) $(terminal_h) $(annotate_h) \
	$(completer_h) $(top_h) $(version_h) $(serial_h) $(doublest_h) \
	$(gdb_assert_h) $(event_top_h) $(gdb_string_h) $(gdb_stat_h) \
	$(ui_out_h) $(cli_out_h)
tracepoint.o: tracepoint.c $(defs_h) $(symtab_h) $(frame_h) $(gdbtypes_h) \
	$(expression_h) $(gdbcmd_h) $(value_h) $(target_h) $(language_h) \
	$(gdb_string_h) $(inferior_h) $(tracepoint_h) $(remote_h) \
	$(linespec_h) $(regcache_h) $(completer_h) $(gdb_events_h) $(ax_h) \
	$(ax_gdb_h)
typeprint.o: typeprint.c $(defs_h) $(gdb_obstack_h) $(bfd_h) $(symtab_h) \
	$(gdbtypes_h) $(expression_h) $(value_h) $(gdbcore_h) $(command_h) \
	$(gdbcmd_h) $(target_h) $(language_h) $(cp_abi_h) $(gdb_string_h)
ui-file.o: ui-file.c $(defs_h) $(ui_file_h) $(gdb_string_h)
ui-out.o: ui-out.c $(defs_h) $(gdb_string_h) $(expression_h) $(language_h) \
	$(ui_out_h) $(gdb_assert_h)
utils.o: utils.c $(config_h) $(defs_h) $(gdb_assert_h) $(gdb_string_h) \
	$(event_top_h) $(gdbcmd_h) $(serial_h) $(bfd_h) $(target_h) \
	$(demangle_h) $(expression_h) $(language_h) $(annotate_h) \
	$(filenames_h) $(inferior_h) $(mmalloc_h)
uw-thread.o: uw-thread.c $(defs_h) $(gdbthread_h) $(target_h) $(inferior_h) \
	$(regcache_h) $(gregset_h)
v850-tdep.o: v850-tdep.c $(defs_h) $(frame_h) $(inferior_h) $(target_h) \
	$(value_h) $(bfd_h) $(gdb_string_h) $(gdbcore_h) $(symfile_h) \
	$(arch_utils_h) $(regcache_h) $(symtab_h)
v850ice.o: v850ice.c $(defs_h) $(gdb_string_h) $(frame_h) $(symtab_h) \
	$(inferior_h) $(breakpoint_h) $(symfile_h) $(target_h) $(objfiles_h) \
	$(gdbcore_h) $(value_h) $(command_h) $(regcache_h)
valarith.o: valarith.c $(defs_h) $(value_h) $(symtab_h) $(gdbtypes_h) \
	$(expression_h) $(target_h) $(language_h) $(gdb_string_h) \
	$(doublest_h)
valops.o: valops.c $(defs_h) $(symtab_h) $(gdbtypes_h) $(value_h) $(frame_h) \
	$(inferior_h) $(gdbcore_h) $(target_h) $(demangle_h) $(language_h) \
	$(gdbcmd_h) $(regcache_h) $(cp_abi_h) $(gdb_string_h) \
	$(gdb_assert_h)
valprint.o: valprint.c $(defs_h) $(gdb_string_h) $(symtab_h) $(gdbtypes_h) \
	$(value_h) $(gdbcore_h) $(gdbcmd_h) $(target_h) $(language_h) \
	$(annotate_h) $(valprint_h) $(floatformat_h) $(doublest_h)
values.o: values.c $(defs_h) $(gdb_string_h) $(symtab_h) $(gdbtypes_h) \
	$(value_h) $(gdbcore_h) $(command_h) $(gdbcmd_h) $(target_h) \
	$(language_h) $(scm_lang_h) $(demangle_h) $(doublest_h) \
	$(gdb_assert_h) $(regcache_h)
varobj.o: varobj.c $(defs_h) $(value_h) $(expression_h) $(frame_h) \
	$(language_h) $(wrapper_h) $(gdbcmd_h) $(gdb_string_h) $(varobj_h)
vax-tdep.o: vax-tdep.c $(defs_h) $(symtab_h) $(opcode_vax_h) $(gdbcore_h) \
	$(inferior_h) $(regcache_h) $(frame_h) $(value_h) $(arch_utils_h) \
	$(vax_tdep_h)
w89k-rom.o: w89k-rom.c $(defs_h) $(gdbcore_h) $(target_h) $(monitor_h) \
	$(serial_h) $(xmodem_h) $(regcache_h)
win32-nat.o: win32-nat.c $(defs_h) $(tm_h) $(frame_h) $(inferior_h) \
	$(target_h) $(gdbcore_h) $(command_h) $(completer_h) $(regcache_h) \
	$(top_h) $(i386_tdep_h) $(buildsym_h) $(symfile_h) $(objfiles_h) \
	$(gdb_string_h) $(gdbthread_h) $(gdbcmd_h)
wince-stub.o: wince-stub.c $(wince_stub_h)
wince.o: wince.c $(defs_h) $(frame_h) $(inferior_h) $(target_h) $(gdbcore_h) \
	$(command_h) $(buildsym_h) $(symfile_h) $(objfiles_h) \
	$(gdb_string_h) $(gdbthread_h) $(gdbcmd_h) $(wince_stub_h) \
	$(regcache_h)
wrapper.o: wrapper.c $(defs_h) $(value_h) $(wrapper_h)
x86-64-linux-nat.o: x86-64-linux-nat.c $(defs_h) $(inferior_h) $(gdbcore_h) \
	$(regcache_h) $(gdb_assert_h) $(x86_64_tdep_h)
x86-64-linux-tdep.o: x86-64-linux-tdep.c $(defs_h) $(inferior_h) \
	$(gdbcore_h) $(regcache_h) $(x86_64_tdep_h) $(dwarf2cfi_h)
x86-64-tdep.o: x86-64-tdep.c $(defs_h) $(inferior_h) $(gdbcore_h) \
	$(gdbcmd_h) $(arch_utils_h) $(regcache_h) $(symfile_h) $(objfiles_h) \
	$(x86_64_tdep_h) $(dwarf2cfi_h) $(gdb_assert_h)
xcoffread.o: xcoffread.c $(defs_h) $(bfd_h) $(gdb_string_h) $(gdb_stat_h) \
	$(coff_internal_h) $(libcoff_h) $(coff_xcoff_h) $(libxcoff_h) \
	$(coff_rs6000_h) $(symtab_h) $(gdbtypes_h) $(symfile_h) \
	$(objfiles_h) $(buildsym_h) $(stabsread_h) $(expression_h) \
	$(complaints_h) $(gdb_stabs_h) $(aout_stab_gnu_h)
xcoffsolib.o: xcoffsolib.c $(defs_h) $(bfd_h) $(xcoffsolib_h) $(inferior_h) \
	$(gdbcmd_h) $(symfile_h) $(frame_h) $(gdb_regex_h)
xmodem.o: xmodem.c $(defs_h) $(serial_h) $(target_h) $(xmodem_h)
xstormy16-tdep.o: xstormy16-tdep.c $(defs_h) $(value_h) $(inferior_h) \
	$(symfile_h) $(arch_utils_h) $(regcache_h) $(gdbcore_h) \
	$(objfiles_h)
z8k-tdep.o: z8k-tdep.c $(defs_h) $(frame_h) $(symtab_h) $(gdbcmd_h) \
	$(gdbtypes_h) $(dis_asm_h) $(gdbcore_h) $(regcache_h) $(value_h)

#
# gdb/cli/ dependencies
#
# Need to explicitly specify the compile rule as make will do nothing
# or try to compile the object file into the mi directory.

cli-cmds.o: $(srcdir)/cli/cli-cmds.c $(defs_h) $(completer_h) $(target_h) \
	$(gdb_wait_h) $(gdb_regex_h) $(gdb_string_h) $(filenames_h) \
	$(ui_out_h) $(top_h) $(cli_decode_h) $(cli_script_h) \
	$(cli_setshow_h) $(cli_cmds_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/cli/cli-cmds.c
cli-decode.o: $(srcdir)/cli/cli-decode.c $(defs_h) $(symtab_h) \
	$(gdb_regex_h) $(gdb_string_h) $(ui_out_h) $(cli_cmds_h) \
	$(cli_decode_h) $(gdb_assert_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/cli/cli-decode.c
cli-dump.o: $(srcdir)/cli/cli-dump.c $(defs_h) $(gdb_string_h) \
	$(cli_decode_h) $(cli_cmds_h) $(value_h) $(completer_h) \
	$(cli_dump_h) $(gdb_assert_h) $(target_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/cli/cli-dump.c
cli-interp.o: $(srcdir)/cli/cli-interp.c $(defs_h) $(value_h) \
	$(wrapper_h) $(event_top_h) $(ui_out_h) $(cli_out_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/cli/cli-interp.c
cli-script.o: $(srcdir)/cli/cli-script.c $(defs_h) $(value_h) $(language_h) \
	$(ui_out_h) $(gdb_string_h) $(top_h) $(cli_cmds_h) $(cli_decode_h) \
	$(cli_script_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/cli/cli-script.c
cli-setshow.o: $(srcdir)/cli/cli-setshow.c $(defs_h) $(value_h) \
	$(gdb_string_h) $(ui_out_h) $(cli_decode_h) $(cli_cmds_h) \
	$(cli_setshow_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/cli/cli-setshow.c
cli-utils.o: $(srcdir)/cli/cli-utils.c $(defs_h) $(cli_utils_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/cli/cli-utils.c

#
# GDBTK sub-directory
#
# Need to explicitly specify the compile rule as make will do nothing
# or try to compile the object file into the mi directory.

d1593 194
a1786 5
#
# gdb/mi/ dependencies
#
# Need to explicitly specify the compile rule as make will do nothing
# or try to compile the object file into the mi directory.
d1788 3
a1790 40
mi-cmd-break.o: $(srcdir)/mi/mi-cmd-break.c $(defs_h) $(mi_cmds_h) \
	$(ui_out_h) $(mi_out_h) $(breakpoint_h) $(gdb_string_h) \
	$(mi_getopt_h) $(gdb_events_h) $(gdb_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/mi/mi-cmd-break.c
mi-cmd-disas.o: $(srcdir)/mi/mi-cmd-disas.c $(defs_h) $(target_h) $(value_h) \
	$(mi_cmds_h) $(mi_getopt_h) $(ui_out_h) $(gdb_string_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/mi/mi-cmd-disas.c
mi-cmd-stack.o: $(srcdir)/mi/mi-cmd-stack.c $(defs_h) $(target_h) $(frame_h) \
	$(value_h) $(mi_cmds_h) $(ui_out_h) $(symtab_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/mi/mi-cmd-stack.c
mi-cmd-var.o: $(srcdir)/mi/mi-cmd-var.c $(defs_h) $(mi_cmds_h) $(ui_out_h) \
	$(mi_out_h) $(varobj_h) $(value_h) $(gdb_string_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/mi/mi-cmd-var.c
mi-cmds.o: $(srcdir)/mi/mi-cmds.c $(defs_h) $(top_h) $(mi_cmds_h) \
	$(gdb_string_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/mi/mi-cmds.c
mi-console.o: $(srcdir)/mi/mi-console.c $(defs_h) $(mi_console_h) \
	$(gdb_string_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/mi/mi-console.c
mi-events.o: $(srcdir)/mi/mi-events.c $(defs_h) $(ui_out_h) $(interps_h) \
	$(gdb_h) $(breakpoint_h) $(mi_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/mi/mi-events.c
mi-getopt.o: $(srcdir)/mi/mi-getopt.c $(defs_h) $(mi_getopt_h) \
	$(gdb_string_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/mi/mi-getopt.c
mi-interp.o: $(srcdir)/mi/mi-interp.c $(defs_h) $(interps_h) \
	$(event_top_h) $(event_loop_h) $(inferior_h) $(ui_out_h) \
	$(top_h) $(mi_h) $(mi_cmds_h) $(mi_out_h) $(mi_console_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/mi/mi-interp.c
mi-main.o: $(srcdir)/mi/mi-main.c $(defs_h) $(target_h) $(inferior_h) \
	$(gdb_string_h) $(top_h) $(gdbthread_h) $(mi_cmds_h) $(mi_parse_h) \
	$(mi_getopt_h) $(mi_console_h) $(ui_out_h) $(mi_out_h) \
	$(event_loop_h) $(event_top_h) $(gdbcore_h) $(value_h) $(regcache_h) \
	$(gdb_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/mi/mi-main.c
mi-out.o: $(srcdir)/mi/mi-out.c $(defs_h) $(ui_out_h) $(mi_out_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/mi/mi-out.c
mi-parse.o: $(srcdir)/mi/mi-parse.c $(defs_h) $(mi_cmds_h) $(mi_parse_h) \
	$(gdb_string_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/mi/mi-parse.c
d1792 4
a1795 5
#
# nindy-share sub-directory
#
# Need to explicitly specify the compile rule as make will do nothing
# or try to compile the object file into the mi directory.
d1797 4
a1800 3
Onindy.o: nindy-share/Onindy.c $(gdb_wait_h) nindy-share/block_io.h \
	nindy-share/env.h
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/nindy-share/Onindy.c
d1802 2
a1803 3
nindy.o: nindy-share/nindy.c $(gdb_wait_h) nindy-share/block_io.h \
	nindy-share/env.h
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/nindy-share/nindy.c
d1805 1
a1805 2
ttyflush.o: nindy-share/ttyflush.c $(srcdir)/nindy-share/ttyflush.c
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/nindy-share/ttyflush.c
d1807 2
a1808 5
#
# rdi-share sub-directory
#
# Need to explicitly specify the compile rule as make will do nothing
# or try to compile the object file into the mi directory.
d1810 1
a1810 9
rdi-share/libangsd.a:	force
	@@dir=rdi-share; \
	if [ -f ./$${dir}/Makefile ] ; then \
	  r=`pwd`; export r; \
	  srcroot=`cd $(srcdir); pwd`; export srcroot; \
	  (cd $${dir}; $(MAKE) $(FLAGS_TO_PASS) all); \
	else \
	  true; \
	fi
d1812 2
a1813 5
#
# Signals sub-directory
#
# Need to explicitly specify the compile rule as make will do nothing
# or try to compile the object file into the mi directory.
d1815 3
a1817 2
signals.o: $(srcdir)/signals/signals.c $(defs_h) $(target_h) $(gdb_string_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/signals/signals.c
d1819 2
a1820 5
#
# TUI dependencies
#
# Need to explicitly specify the compile rule as make will do nothing
# or try to compile the object file into the mi directory.
d1822 2
a1823 68
tui-file.o: $(srcdir)/tui/tui-file.c $(defs_h) $(ui_file_h) $(tui_file_h) \
	$(tui_tuiIO_h) $(tui_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tui-file.c
tui-hooks.o: $(srcdir)/tui/tui-hooks.c $(config_h) $(defs_h) $(symtab_h) \
	$(inferior_h) $(command_h) $(bfd_h) $(symfile_h) $(objfiles_h) \
	$(target_h) $(gdbcore_h) $(event_loop_h) $(frame_h) $(breakpoint_h) \
	$(gdb_events_h) $(tui_h) $(tuiData_h) $(tuiLayout_h) $(tuiIO_h) \
	$(tuiRegs_h) $(tuiWin_h) $(tuiStack_h) $(tuiDataWin_h) \
	$(tuiSourceWin_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tui-hooks.c
tui-out.o: $(srcdir)/tui/tui-out.c $(defs_h) $(ui_out_h) $(tui_h) \
	$(gdb_string_h) $(gdb_assert_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tui-out.c
tui.o: $(srcdir)/tui/tui.c $(config_h) $(defs_h) $(gdbcmd_h) $(tui_h) \
	$(tuiData_h) $(tuiLayout_h) $(tuiIO_h) $(tuiRegs_h) $(tuiStack_h) \
	$(tuiWin_h) $(tuiSourceWin_h) $(readline_h) $(target_h) $(frame_h) \
	$(breakpoint_h) $(inferior_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tui.c
tuiCommand.o: $(srcdir)/tui/tuiCommand.c $(config_h) $(defs_h) $(tui_h) \
	$(tuiData_h) $(tuiWin_h) $(tuiIO_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tuiCommand.c
tuiData.o: $(srcdir)/tui/tuiData.c $(config_h) $(defs_h) $(tui_h) \
	$(tuiData_h) $(tuiGeneralWin_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tuiData.c
tuiDataWin.o: $(srcdir)/tui/tuiDataWin.c $(config_h) $(defs_h) $(tui_h) \
	$(tuiData_h) $(tuiGeneralWin_h) $(tuiRegs_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tuiDataWin.c
tuiDisassem.o: $(srcdir)/tui/tuiDisassem.c $(config_h) $(defs_h) $(symtab_h) \
	$(breakpoint_h) $(frame_h) $(value_h) $(tui_h) $(tuiData_h) \
	$(tuiWin_h) $(tuiLayout_h) $(tuiSourceWin_h) $(tuiStack_h) \
	$(tui_file_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tuiDisassem.c
tuiGeneralWin.o: $(srcdir)/tui/tuiGeneralWin.c $(config_h) $(defs_h) \
	$(tui_h) $(tuiData_h) $(tuiGeneralWin_h) $(tuiWin_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tuiGeneralWin.c
tuiIO.o: $(srcdir)/tui/tuiIO.c $(config_h) $(defs_h) $(terminal_h) \
	$(target_h) $(event_loop_h) $(command_h) $(top_h) $(readline_h) \
	$(tui_h) $(tuiData_h) $(tuiIO_h) $(tuiCommand_h) $(tuiWin_h) \
	$(tuiGeneralWin_h) $(tui_file_h) $(ui_out_h) $(cli_out_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tuiIO.c
tuiLayout.o: $(srcdir)/tui/tuiLayout.c $(config_h) $(defs_h) $(command_h) \
	$(symtab_h) $(frame_h) $(tui_h) $(tuiData_h) $(tuiDataWin_h) \
	$(tuiGeneralWin_h) $(tuiStack_h) $(tuiRegs_h) $(tuiWin_h) \
	$(tuiSourceWin_h) $(tuiDisassem_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tuiLayout.c
tuiRegs.o: $(srcdir)/tui/tuiRegs.c $(config_h) $(defs_h) $(tui_h) \
	$(tuiData_h) $(symtab_h) $(gdbtypes_h) $(gdbcmd_h) $(frame_h) \
	$(inferior_h) $(target_h) $(tuiLayout_h) $(tuiWin_h) $(tuiDataWin_h) \
	$(tuiGeneralWin_h) $(tui_file_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tuiRegs.c
tuiSource.o: $(srcdir)/tui/tuiSource.c $(config_h) $(defs_h) $(symtab_h) \
	$(frame_h) $(breakpoint_h) $(source_h) $(symtab_h) $(tui_h) \
	$(tuiData_h) $(tuiStack_h) $(tuiSourceWin_h) $(tuiSource_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tuiSource.c
tuiSourceWin.o: $(srcdir)/tui/tuiSourceWin.c $(config_h) $(defs_h) \
	$(symtab_h) $(frame_h) $(breakpoint_h) $(value_h) $(tui_h) \
	$(tuiData_h) $(tuiStack_h) $(tuiWin_h) $(tuiGeneralWin_h) \
	$(tuiSourceWin_h) $(tuiSource_h) $(tuiDisassem_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tuiSourceWin.c
tuiStack.o: $(srcdir)/tui/tuiStack.c $(config_h) $(defs_h) $(symtab_h) \
	$(breakpoint_h) $(frame_h) $(command_h) $(tui_h) $(tuiData_h) \
	$(tuiStack_h) $(tuiGeneralWin_h) $(tuiSource_h) $(tuiSourceWin_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tuiStack.c
tuiWin.o: $(srcdir)/tui/tuiWin.c $(config_h) $(defs_h) $(command_h) \
	$(symtab_h) $(breakpoint_h) $(frame_h) $(cli_cmds_h) $(tui_h) \
	$(tuiData_h) $(tuiGeneralWin_h) $(tuiStack_h) $(tuiRegs_h) \
	$(tuiDisassem_h) $(tuiSource_h) $(tuiSourceWin_h) $(tuiDataWin_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tuiWin.c
d1825 6
a1830 3
#
# vx-share sub-directory
#
d1832 1
a1832 3
xdr_ld.o: vx-share/xdr_ld.c $(defs_h) vx-share/vxTypes.h \
	vx-share/vxWorks.h vx-share/xdr_ld.h
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/vx-share/xdr_ld.c
d1834 481
a2314 3
xdr_ptrace.o: vx-share/xdr_ptrace.c $(defs_h) vx-share/vxTypes.h \
	vx-share/vxWorks.h vx-share/xdr_ptrace.h
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/vx-share/xdr_ptrace.c
d2319 207
@


1.200.2.7
log
@Merge with kseitz_interps-20020930-merge.
@
text
@a140 3
# Where is the ICONV library?  This can be empty if libc has iconv.
LIBICONV = @@LIBICONV@@

d290 1
a290 2
	gdbtk/generic/gdbtk-varobj.c gdbtk/generic/gdbtk-wrapper.c \
	gdbtk/generic/gdbtk-main.c
d296 2
a297 2
SUBDIR_GDBTK_ALL= all-gdbtk
SUBDIR_GDBTK_CLEAN= clean-gdbtk
d299 1
a299 1
SUBDIR_GDBTK_UNINSTALL= uninstall-gdbtk
a371 1
	$(LIBICONV) \
d528 12
a539 11
	ax-general.c ax-gdb.c \
	bcache.c blockframe.c breakpoint.c buildsym.c builtin-regs.c \
	c-exp.y c-lang.c c-typeprint.c c-valprint.c \
	charset.c cli-out.c coffread.c complaints.c completer.c corefile.c \
	cp-abi.c cp-support.c cp-valprint.c \
	dbxread.c demangle.c disasm.c doublest.c dwarfread.c dwarf2read.c \
	elfread.c environ.c eval.c event-loop.c event-top.c expprint.c \
	f-exp.y f-lang.c f-typeprint.c f-valprint.c findvar.c frame.c \
	gdbarch.c arch-utils.c gdbtypes.c gnu-v2-abi.c gnu-v3-abi.c \
	hpacc-abi.c \
	inf-loop.c infcmd.c inflow.c infrun.c interps.c \
d541 9
a549 12
	kod.c kod-cisco.c \
	language.c linespec.c \
	m2-exp.y m2-lang.c m2-typeprint.c m2-valprint.c \
	macrotab.c macroexp.c macrocmd.c macroscope.c main.c maint.c \
	mdebugread.c memattr.c mem-break.c minsyms.c mipsread.c \
	nlmread.c \
	objfiles.c osabi.c \
	p-exp.y p-lang.c p-typeprint.c p-valprint.c parse.c printcmd.c \
	regcache.c remote.c \
	scm-exp.c scm-lang.c scm-valprint.c serial.c ser-unix.c source.c \
	stabsread.c stack.c std-regs.c symfile.c symmisc.c symtab.c \
	target.c thread.c top.c tracepoint.c typeprint.c \
d558 4
a561 3
	ui-out.c utils.c ui-file.h ui-file.c \
	valarith.c valops.c valprint.c values.c varobj.c \
	wrapper.c
a628 1
cp_support_h = cp-support.h
a632 1
disasm_h = disasm.h
a676 1
main_h = main.h
a769 2
charset_h =	charset.h

a820 1
	charset.o disasm.o \
d846 1
a846 1
	gnu-v2-abi.o gnu-v3-abi.o hpacc-abi.o cp-abi.o cp-support.o
d924 1
d927 16
d1012 1
a1012 1
gdb$(EXEEXT): gdb.o main.o libgdb.a $(CONFIG_OBS) $(ADD_DEPS) $(CDEPS) $(TDEPLIBS)
d1014 3
a1016 3
	$(HLDENV) $(CC_LD) $(INTERNAL_LDFLAGS) $(WIN32LDAPP) \
		-o gdb$(EXEEXT) gdb.o main.o $(CONFIG_OBS) libgdb.a \
		$(TDEPLIBS) $(TUI_LIBRARY) $(CLIBS) $(LOADLIBES)
a1441 1
	$(charset_h) \
d1504 3
a1506 3
alphanbsd-tdep.o: alphanbsd-tdep.c $(defs_h) $(gdbcore_h) $(frame_h) \
	$(regcache_h) $(value_h) $(solib_svr4_h) $(alpha_tdep_h) \
	$(alphabsd_tdep_h) $(nbsd_tdep_h)
d1544 1
a1544 1
	$(cli_script_h) $(gdb_events_h) $(source_h)
d1554 1
a1554 1
	$(macroscope_h) $(gdb_assert_h) $(charset_h) $(gdb_string_h)
a1565 1
charset.o: charset.c $(defs_h) $(charset_h) $(gdbcmd_h) gdb_assert.h
d1575 1
a1575 2
complaints.o: complaints.c $(defs_h) $(complaints_h) $(gdb_assert_h) \
	$(command_h) $(gdbcmd_h)
a1591 1
cp-support.o: cp-support.c $(defs_h) $(cp_support_h)
d1601 1
a1601 1
	$(solib_h) $(solib_svr4_h) $(gdb_string_h)
a1622 2
disasm.o: disasm.c $(defs_h) $(gdb_string_h) $(target_h) $(value_h) \
	$(disasm_h) $(ui_out_h)
a1681 1
gdb.o: gdb.c $(defs_h) $(main_h) $(gdb_string_h)
d1761 1
a1761 2
	$(regcache_h) $(arch_utils_h) $(i386_tdep_h) $(i387_tdep_h) \
	$(nbsd_tdep_h) $(solib_svr4_h)
d1825 1
a1825 1
	$(cp_abi_h) $(source_h)
d1870 1
a1870 1
	$(frame_h) $(inferior_h) $(source_h)
d1876 1
a1876 1
	$(event_loop_h) $(ui_out_h) $(main_h)
d1884 1
a1884 1
	$(arch_utils_h) $(gdb_string_h)
d1911 1
a1911 2
	$(target_h) $(value_h) $(osabi_h) $(mipsnbsd_tdep_h) $(solib_svr4_h) \
	$(nbsd_tdep_h)
d1930 1
a1930 1
nbsd-tdep.o: nbsd-tdep.c $(defs_h) $(gdb_string_h) $(solib_svr4_h)
d1936 1
a1936 1
	$(ns32k_tdep_h) $(gdb_string_h)
d1939 1
a1939 1
ns32knbsd-tdep.o: ns32knbsd-tdep.c $(defs_h) $(ns32k_tdep_h) $(gdb_string_h)
d1950 3
d2097 1
a2097 1
	$(scm_tags_h) $(gdb_string_h) $(gdbcore_h) $(source_h)
d2116 1
a2116 2
	$(serial_h) $(srec_h) $(arch_utils_h) $(regcache_h) $(gdb_string_h) \
	$(sh_tdep_h)
d2178 1
a2178 1
	$(doublest_h) $(stabsread_h) $(cp_abi_h) $(cp_support_h)
d2182 1
a2182 1
	$(annotate_h) $(ui_out_h) $(source_h)
d2193 1
a2193 1
	$(completer_h) $(bcache_h) $(gdb_string_h) $(gdb_stat_h) $(source_h)
d2206 1
a2206 1
	$(cp_abi_h) $(source_h)
d2237 1
a2237 1
	$(filenames_h) $(inferior_h) $(mmalloc_h) $(charset_h)
d2264 1
a2264 1
	$(gdb_string_h) $(vax_tdep_h)
d2307 1
a2307 2
	$(cli_setshow_h) $(cli_cmds_h) $(source_h) $(linespec_h) \
	$(expression_h) $(language_h) $(objfiles_h)
a2336 49
all-gdbtk: insight$(EXEEXT)

install-gdbtk:
	transformed_name=`t='$(program_transform_name)'; \
		  echo insight | sed -e $$t` ; \
	if test "x$$transformed_name" = x; then \
	  transformed_name=insight ; \
	else \
	  true ; \
	fi ; \
	$(SHELL) $(srcdir)/../mkinstalldirs $(bindir)
	$(INSTALL_PROGRAM) insight$(EXEEXT) $(bindir)/$$transformed_name$(EXEEXT) ; \
	$(SHELL) $(srcdir)/../mkinstalldirs $(GDBTK_LIBRARY) ; \
	$(SHELL) $(srcdir)/../mkinstalldirs $(libdir)/insight$(GDBTK_VERSION) ; \
	$(INSTALL_DATA) $(srcdir)/gdbtk/plugins/plugins.tcl $(libdir)/insight$(GDBTK_VERSION)/plugins.tcl ; \
	$(SHELL) $(srcdir)/../mkinstalldirs \
		$(GDBTK_LIBRARY)/images \
		$(GDBTK_LIBRARY)/images2 ; \
	$(SHELL) $(srcdir)/../mkinstalldirs $(GDBTK_LIBRARY)/help \
		$(GDBTK_LIBRARY)/help/images \
		$(GDBTK_LIBRARY)/help/trace ; \
	cd $(srcdir)/gdbtk/library ; \
	for i in *.tcl *.itcl *.ith *.itb images/*.gif images2/*.gif images/icons.txt images2/icons.txt tclIndex help/*.html  help/trace/*.html help/trace/index.toc help/images/*.gif; \
	  do \
		$(INSTALL_DATA) $$i $(GDBTK_LIBRARY)/$$i ; \
	  done ;

uninstall-gdbtk:
	transformed_name=`t='$(program_transform_name)'; \
		  echo insight | sed -e $$t` ; \
	if test "x$$transformed_name" = x; then \
		transformed_name=insight ; \
	else \
		true ; \
	fi ; \
	rm -f $(bindir)/$$transformed_name$(EXEEXT) ; \
	rm -rf $(GDBTK_LIBRARY)

clean-gdbtk:
	rm -f insight$(EXEEXT)

# Removing the old gdb first works better if it is running, at least on SunOS.
insight$(EXEEXT): gdbtk-main.o main.o libgdb.a $(CONFIG_OBS) $(ADD_DEPS) \
		$(CDEPS) $(TDEPLIBS)
	rm -f insight$(EXEEXT)
	$(HLDENV) $(CC_LD) $(INTERNAL_LDFLAGS) $(WIN32LDAPP) \
		-o insight$(EXEEXT) gdbtk-main.o main.o $(CONFIG_OBS) libgdb.a \
		$(TDEPLIBS) $(TUI_LIBRARY) $(CLIBS) $(LOADLIBES)

a2379 6
gdbtk-main.o: $(srcdir)/gdbtk/generic/gdbtk-main.c $(defs_h) $(main_h) \
	$(gdb_string_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(IDE_CFLAGS) $(ITCL_CFLAGS) $(TIX_CFLAGS) \
	$(TCL_CFLAGS) $(TK_CFLAGS) $(X11_CFLAGS) $(GDBTK_CFLAGS)\
		$(srcdir)/gdbtk/generic/gdbtk-main.c -DGDBTK_LIBRARY=\"$(GDBTK_LIBRARY)\"

d2423 1
a2423 1
	$(mi_cmds_h) $(mi_getopt_h) $(ui_out_h) $(gdb_string_h) $(disasm_h)
@


1.200.2.8
log
@        * interps.c (interpreter_exec_cmd): Remove mention of "mi" in
        error message.

        * cli/cli-interp.c (do_captured_execute_command): New function.
        (safe_execute_command): New function.
        * Makefile.in (cli-interp.c): Depend on top_h.
        * wrapper.c (do_captured_execute_command): Moved to cli/cli-interp.c.
        (gdb_execute_command): Removed.
        * wrapper.h (gdb_execute_command): Removed.
@
text
@d2321 1
a2321 1
	$(wrapper_h) $(event_top_h) $(ui_out_h) $(cli_out_h) $(top_h)
@


1.200.2.9
log
@merge from mainline
@
text
@d553 1
a553 1
	regcache.c reggroups.c remote.c \
a701 1
reggroups_h = reggroups.h
d858 1
a858 2
	gnu-v2-abi.o gnu-v3-abi.o hpacc-abi.o cp-abi.o cp-support.o \
	reggroups.o
d1689 1
a1689 1
	$(gdb_assert_h) $(gdb_string_h) $(gdb_events_h) $(reggroups_h)
a1765 2
i386obsd-tdep.o: i386obsd-tdep.c $(defs_h) $(arch_utils_h) $(gdbcore_h) \
	$(regcache_h) $(i386_tdep_h) $(i387_tdep_h)
d1767 1
a1767 1
	$(gdbcore_h) $(gdb_stat_h) $(floatformat_h) $(target_h) $(i386_tdep_h)
d1828 1
a1828 1
	$(cp_abi_h) $(source_h) $(parser_defs_h)
d1982 1
a1982 1
	$(regcache_h) $(value_h) $(gdb_string_h) $(ppc_tdep_h)
d2007 2
a2008 4
	$(gdbcmd_h) $(regcache_h) $(reggroups_h) $(gdb_assert_h) \
	$(gdb_string_h) $(gdbcmd_h)
reggroups.o: reggroups.c $(defs_h) $(reggroups_h) $(gdbtypes_h) \
	$(gdb_assert_h) $(regcache_h) $(command_h) $(gdbcmd_h)
d2135 1
a2135 2
	$(symfile_h) $(objfiles_h) $(gdbcore_h) $(inferior_h) $(solist_h) \
	$(bcache_h) $(regcache_h)
d2350 1
a2350 1
	$(SHELL) $(srcdir)/../mkinstalldirs $(bindir); \
d2509 1
a2509 1
	$(gdb_h) $(frame_h)
@


1.200.2.10
log
@2002-11-04  Elena Zannoni  <ezannoni@@redhat.com>

        * Makefile.in (mi-main.o, mi-cmd-break.o, event-loop.o): Update
        dependencies on interps.h.
@
text
@d1652 1
a1652 1
	$(gdb_string_h) $(interps_h)
d2485 1
a2485 1
	$(mi_getopt_h) $(gdb_events_h) $(gdb_h) $(interps_h)
d2516 1
a2516 1
	$(gdb_h) $(frame_h) $(interps_h)
@


1.199
log
@* Makefile.in (alphanbsd-tdep.o, shnbsd-tdep.o): Add solib-svr4.h
to dependency list.
* alphanbsd-tdep.c: Include solib-svr4.h.
* shnbsd-tdep.c: Ditto.
@
text
@d575 1
a575 1
sim_d10v_h =	$(INCLUDE_DIR)/sim-d10v.h
@


1.198
log
@* Makefile.in (armnbsd-tdep.o): Add solib-svr4.h and
nbsd-tdep.h to dependency list.
* configure.host (arm*-*-netbsdelf*, arm*-*-netbsd*,
i[3456]86-*-netbsdaout*, i[3456]86-*-netbsd*, m68*-*-netbsd*,
ns32k-*-netbsd*, sparc-*-netbsdaout*, sparc-*-netbsd*): Use
nbsdaout.mh and nbsdelf.mh consistently.
* configure.tgt (i[3456]86-*-netbsd*, m68*-*-netbsd*,
ns32k-*-netbsd*, sparc-*-netbsdelf*, sparc-*-netbsd*) Use
nbsdaout.mt and nbsdelf.mh consistently.
* armnbsd-tdep.c: Include nbsd-tdep.h and solib-svr4.h.
(arm_netbsd_elf_init_abi): Use set_solib_svr4_fetch_link_map_offsets
to set nbsd_ilp32_solib_svr4_fetch_link_map_offsets.
* config/nm-nbsd.h: Garbage-collect SVR4_SHARED_LIBS.  Move
a.out shared library stuff from here...
* config/nm-nbsdaout.h: ...to here.
* config/tm-nbsd.h: Remove.
* config/alpha/nm-nbsd.h (SVR4_SHARED_LIBS): Remove.
* config/arm/nbsd.mh: Remove.
* config/arm/nbsd.mt (TDEPFILES): Remove solib-sunos.o, add
nbsd-tdep.o.
* config/arm/nbsdaout.mh: New file.
* config/arm/nbsdelf.mh: New file.
* config/arm/nm-nbsdaout.h: New file.
* config/i386/nbsd.mh: Remove.
* config/i386/nbsd.mt: Remove.
* config/i386/nbsdaout.mh: New file.
* config/i386/nbsdaout.mt: New file.
* config/i386/nbsdelf.mh (NAT_FILE): Use nm-nbsd.h.
* config/i386/nbsdelf.mt (TM_FILE): Use tm-nbsd.h.
* config/i386/nm-nbsd.h (REGISTER_U_ADDR,
i386_register_u_addr): Remove.
* config/i386/nm-nbsdaout.h: New file.
* config/i386/nm-nbsdelf.h: Remove.
* config/i386/tm-nbsd.h: Don't include config/tm-nbsd.h.
(USE_STRUCT_CONVENTION): Remove.
* config/i386/tm-nbsdaout.h: New file.
* config/i386/tm-nbsdelf.h: Remove.
* config/m68k/nbsd.mh: Remove.
* config/m68k/nbsd.mt: Remove.
* config/m68k/nbsdaout.mh: New file.
* config/m68k/nbsdaout.mt: New file.
* config/m68k/nm-nbsd.h: Use config/nm-nbsd.h.
* config/m68k/nm-nbsdaout.h: New file.
* config/m68k/tm-nbsd.h: Don't include config/tm-nbsd.h.
(IN_SOLIB_CALL_TRAMPOLINE): Define.
* config/ns32k/nbsd.mh: Remove.
* config/ns32k/nbsd.mt: Remove.
* config/ns32k/nbsdaout.mh: New file.
* config/ns32k/nbsdaout.mt: New file.
* config/ns32k/nm-nbsd.h: Include config/nm-nbsd.h.
* config/ns32k/nm-nbsdaout.h: New file.
* config/ns32k/tm-nbsd.h: Don't include config/tm-nbsd.h.
(IN_SOLIB_CALL_TRAMPOLINE): Define.
* config/powerpc/nm-nbsd.h: Include config/nm-nbsd.h.
(SVR4_SHARED_LIBS): Remove.
* config/powerpc/tm-nbsd.h: Dont' include config/tm-nbsd.h.
* config/sparc/nbsd.mh: Remove.
* config/sparc/nbsd.mt: Remove.
* config/sparc/nbsdaout.mh: New file.
* config/sparc/nbsdaout.mt: New file.
* config/sparc/nbsdelf.mh (NAT_FILE): Use nm-nbsd.h.
* config/sparc/nbsdelf.mt: New file.
* config/sparc/nm-nbsdaout.h: New file.
* config/sparc/nm-nbsdelf.h: Remove.
* config/sparc/tm-nbsd.h: Don't include config/tm-nbsd.h.
* config/sparc/tm-nbsdaout.h: New file.
@
text
@d1281 1
a1281 1
	$(value_h) $(alpha_tdep_h) alphabsd-tdep.h nbsd-tdep.h
d2074 1
a2074 1
	$(value_h) $(sh_tdep_h) shnbsd-tdep.h nbsd-tdep.h
@


1.197
log
@* Makefile.in (ALLDEPFILES): Add mipsnbsd-nat.c and
mipsnbsd-tdep.c
(mipsnbsd-nat.o, mipsnbsd-tdep.o): New dependency lists.
@
text
@d1300 2
a1301 1
armnbsd-tdep.o: armnbsd-tdep.c $(defs_h) $(arm_tdep_h)
@


1.196
log
@* Makefile.in (ALLDEPFILES): Add shnbsd-tdep.c and
shnbsd-nat.c.
(shnbsd-tdep.o, shnbsd-nat.o): New dependency lists.
@
text
@d1222 1
d1830 6
@


1.195
log
@* Makefile.in (SFILES): Add osabi.c.
(COMMON_OBS): Add osabi.o.
(osabi.o): New dependency list.
* osabi.c: New file.
* osabi.h: New file.
* doc/gdbint.texinfo: Document new generic OS ABI framework.

* Makefile.in (alpha_tdep_h): Define and use instead of
alpha-tdep.h.
* alpha-tdep.c (alpha_abi_names, process_note_abi_tag_sections,
get_elfosabi, alpha_abi_handler_list, alpha_gdbarch_register_os_abi):
Remove.
(alpha_gdbarch_init, alpha_dump_tdep): Use generic OS ABI framework.
* alpha-tdep.h: Include osabi.h.
(alpha_abi): Remove.
(gdbarch_tdep): Use generic OS ABI framework.
* alpha-linux-tdep.c (_initialize_alpha_linux_tdep): Use
gdbarch_register_osabi.
* alpha-osf1-tdep.c (_initialize_alpha_osf1_tdep): Likewise.
* alphafbsd-tdep.c (_initialize_alphafbsd_tdep): Likewise.
* alphanbsd-tdep.c (_initialize_alphanbsd_tdep): Likewise.

* Makefile.in (sh_tdep_h): Add osabi.h.
* sh-tdep.h (sh_osabi): Remove.
(gdbarch_tdep): Use generic OS ABI framework.
* sh-tdep.c (sh_osabi_names, process_note_abi_tag_sections,
sh_osabi_handler_list, sh_gdbarch_register_os_abi): Remove.
(sh_gdbarch_init, sh_dump_tdep): Use generic OS ABI framework.
* shnbsd-tdep.c (_initialize_shnbsd_tdep): Use gdbarch_register_osabi.

* Makefile.in (arm_tdep_h): Define and use instead of arm-tdep.h.
* arm-linux-tdep.c (_initialize_arm_linux_tdep): Use
gdbarch_register_osabi.
* arm-tdep.c (arm_abi_names, process_note_abi_tag_sections,
arm_abi_handler_list, arm_gdbarch_register_os_abi): Remove.
(get_elfosabi): Rename to...
(arm_elf_osabi_sniffer): ...this.  Adjust to use generic OS
ABI framework support routines.
(arm_gdbarch_init): Use generic OS ABI framework.
(arm_dump_tdep): Likewise.
(_initialize_arm_tdep): Likewise.
* arm-tdep.h: Include osabi.h.
(arm_abi): Remove.
(gdbarch_tdep): Remove arm_abi and abi_name members.  Add
osabi member.
(arm_gdbarch_register_os_abi): Remove prototype.
* armnbsd-tdep.c (arm_netbsd_aout_osabi_sniffer): New function.
(_initialize_arm_netbsd_tdep): Use gdbarch_register_osabi.

* Makefile.in (mips-tdep.o): Add osabi.h to dependency list.
* mips-tdep.c: Include osabi.h.
(gdbarch_tdep, mips_gdbarch_init, mips_dump_tdep): Use generic
OS ABI framework.
@
text
@d1237 2
a1238 1
	sh-tdep.c solib.c solib-svr4.c solib-sunos.c sparc-linux-nat.c \
d2064 5
@


1.194
log
@Expand preprocessor macros in C expressions.
* c-lang.h: #include "macroexp.h", for macro_lookup_ftype.
(scan_macro_expansion, scanning_macro_expansion,
finished_macro_expansion): New function declarations.
(expression_macro_lookup_func, expression_macro_lookup_baton): New
variable declarations.
* parser-defs.h (expression_context_pc): New declaration.
* parse.c (expression_context_pc): New variable.
(parse_exp_1): Set expression_context_pc, as well as
expression_context_block.
* c-exp.y (yylex): If we're not already reading the result of a
macro expansion, try to macro-expand the next token.  When we're
done scanning a macro expansion, switch back to the mainline text.
Commas and `if's in a macro's expansion don't terminate the input.
* c-lang.c: #include "macroscope.h" and "gdb_assert.h".
(macro_original_text, macro_expanded_text,
expression_macro_lookup_func, expression_macro_lookup_baton): New
variables.
(scan_macro_expansion, scanning_macro_expansion,
finished_macro_expansion, scan_macro_cleanup, null_macro_lookup,
c_preprocess_and_parse): New functions.
(c_language_defn, cplus_language_defn, asm_language_defn): Call
c_preprocess_and_parse, instead of c_parse.
* Makefile.in (c_lang_h): Note that this #includes macroexp.h.
(c-lang.o): Note dependency on macroscope.h and gdb_assert.h.
@
text
@d533 1
a533 1
	findvar.c regcache.c gdbarch.c arch-utils.c gdbtypes.c \
d596 1
d599 1
d654 1
a654 1
sh_tdep_h =	sh-tdep.h
d729 1
a729 1
	gdbarch.o arch-utils.o gdbtypes.o copying.o $(DEPFILES) \
d1261 1
a1261 1
	$(regcache_h) alpha-tdep.h
d1264 1
a1264 1
	alpha-tdep.h alphabsd-tdep.h
d1268 1
a1268 1
	$(regcache_h) $(doublest_h) $(BFD_SRC)/elf-bfd.h alpha-tdep.h
d1270 1
a1270 1
alpha-linux-tdep.o: alpha-linux-tdep.c $(defs_h) $(value_h) alpha-tdep.h
d1272 1
a1272 1
alpha-osf1-tdep.o: alpha-osf1-tdep.c $(defs_h) $(value_h) alpha-tdep.h
d1276 1
a1276 1
alphafbsd-tdep.o: alphafbsd-tdep.c $(defs_h) $(value_h) alpha-tdep.h
d1279 1
a1279 1
	$(value_h) alpha-tdep.h alphabsd-tdep.h nbsd-tdep.h
d1284 1
a1284 1
	$(gdb_string_h) $(regcache_h) arm-tdep.h
d1287 1
a1287 1
	$(gdbtypes_h) $(floatformat_h) $(regcache_h) $(doublest_h) arm-tdep.h
d1291 1
a1291 1
	$(value_h) $(arch_utils_h) $(solib_svr4_h) arm-tdep.h \
d1295 2
a1296 2
armnbsd-nat.o: armnbsd-nat.c $(defs_h) arm-tdep.h $(inferior_h) $(regcache_h) \
	$(gdbcore_h)
d1298 1
a1298 1
armnbsd-tdep.o: armnbsd-tdep.c $(defs_h) arm-tdep.h
d1590 2
d1818 2
a1819 1
	$(inferior_h) $(language_h) $(objfiles_h) $(symfile_h) $(gdb_string_h)
d1941 1
a1941 1
	$(inferior_h) $(gdb_string_h) $(completer_h) arm-tdep.h
d1954 1
a1954 1
	$(inferior_h) $(gdb_string_h) arm-tdep.h
@


1.193
log
@* Makefile.in (sh_tdep_h): Define and use.
* config/sh/tm-sh.h (sh_osabi, sh_abi, gdbarch_tdep,
register enum): Move to...
* * sh-tdep.h: ...here.
* sh-tdep.c: Include sh-tdep.h.
* sh3-rom.c: Likewise.
* shnbsd-tdep.c: Likewise.
@
text
@d603 1
a603 1
c_lang_h =	c-lang.h $(value_h)
d1321 2
a1322 1
	$(language_h) $(parser_defs_h) $(symtab_h)
@


1.192
log
@Add commands for manually expanding macros and showing their
definitions.
* macrocmd.c, macroscope.c, macroscope.h: New files.
* Makefile.in (SFILES): Add macrocmd.c, macroscope.c.
(macroscope_h): New variable.
(HFILES_NO_SRCDIR): Add macroscope.h.
(COMMON_OBS): Add macrocmd.o, macroscope.o.
(macroscope.o, macrocmd.o): New rules.
@
text
@d652 1
d2056 1
a2056 1
	$(regcache_h) $(doublest_h)
d2060 1
a2060 1
	$(regcache_h)
@


1.191
log
@Teach the Dwarf 2 reader to read macro information.
* dwarf2read.c: #include "macrotab.h".
(dwarf_macinfo_buffer): New variable.
(struct dwarf2_pinfo): New members: dwarf_macinfo_buffer, and
dwarf_macinfo_size.
(DWARF_MACINFO_BUFFER, DWARF_MACINFO_SIZE): New macros.
(dwarf2_missing_macinfo_section, dwarf2_macros_too_long,
dwarf2_macros_not_terminated, dwarf2_macro_outside_file,
dwarf2_macro_unmatched_end_file, dwarf2_macro_malformed_definition,
dwarf2_macro_spaces_in_definition): New complaints.
(dwarf2_has_info): Initialize dwarf_macinfo_offset.
(dwarf2_build_psymtabs): Read the .dwarf_macinfo section.
(dwarf2_build_psymtabs_hard): Record the buffer and its size in
the partial symbol table.
(psymtab_to_symtab_1): Set the macinfo buffer and size globals
from what's recorded in the partial symbol table.
(read_file_scope): If the compilation unit has a
`DW_AT_macro_info' attribute, read its macro information.
* Makefile.in (dwarf2read.o): Depend on macrotab.h.
@
text
@d542 1
a542 1
	macrotab.c macroexp.c \
d642 1
d681 1
a681 1
	macrotab.h macroexp.h \
d724 1
a724 1
	macrotab.o macroexp.o \
d2145 5
@


1.190
log
@Add macro structures to GDB's symbol tables.  Nobody puts anything
in them yet.
* symtab.h (struct symtab): New member: `macro_table'.
* buildsym.h (pending_macros): New global variable.
* buildsym.c: #include "macrotab.h".
(buildsym_init): Initialize `pending_macros'.
(end_symtab): If we found macro information while reading a CU's
debugging info, do build a symtab structure for it.  Make the
symtab point to the macro information, and clear the
`pending_macros' pointer which held it while we were reading the
debug info.
(really_free_pendings): Free any pending macro table.
* objfiles.h (struct objfile): New member: `macro_cache'.
* objfiles.c (allocate_objfile): Set allocate and free functions
for the macro cache's objstack.
(free_objfile): Empty the macro cache's obstack.
* symfile.c (reread_symbols): Empty the macro cache's obstack, and
set new allocate and free functions for it.
* solib-sunos.c (allocate_rt_common_objfile): Set allocate and
free functions for the macro cache's objstack.  (Why is this
function building its own objfile?)
* symmisc.c (print_objfile_statistics): Print statistics on the
macro bcache.
* Makefile.in: Note that buildsym.o depends on macrotab.h.
@
text
@d1429 1
a1429 1
	$(symfile_h) $(symtab_h) $(gdb_string_h)
@


1.190.2.1
log
@regbuf
@
text
@d533 1
a533 1
	findvar.c regcache.c regbuf.c gdbarch.c arch-utils.c gdbtypes.c \
a645 1
regbuf_h =	regbuf.h
d728 1
a728 1
	signals.o regbuf.o \
d1302 1
a1302 1
	$(objfiles_h) $(symfile_h) $(target_h) $(regcache_h) $(regbuf_h)
d1462 1
a1462 4
regbuf.o: regbuf.c $(defs_h) $(regbuf_h) gdb_assert.h

regcache.o: regcache.c $(defs_h) $(inferior_h) $(target_h) $(regcache_h) \
	$(regbuf_h)
d1678 1
a1678 1
	$(ui_out_h) $(completer_h) $(regbuf_h)
d2024 1
a2024 2
	$(target_h) ppc-tdep.h $(regcache_h) $(value_h) $(parser_defs_h) \
	$(regbuf_h)
@


1.190.2.2
log
@regbuf->regcache
@
text
@d533 1
a533 1
	findvar.c regcache.c gdbarch.c arch-utils.c gdbtypes.c \
d646 1
d729 1
a729 1
	signals.o \
d1303 1
a1303 1
	$(objfiles_h) $(symfile_h) $(target_h) $(regcache_h)
d1463 4
a1466 1
regcache.o: regcache.c $(defs_h) $(inferior_h) $(target_h) $(regcache_h)
d1682 1
a1682 1
	$(ui_out_h) $(completer_h)
d2028 2
a2029 1
	$(target_h) ppc-tdep.h $(regcache_h) $(value_h) $(parser_defs_h)
@


1.190.2.3
log
@merge from trunk
@
text
@d533 1
a533 1
	findvar.c regcache.c gdbarch.c arch-utils.c gdbtypes.c osabi.c \
d542 1
a542 1
	macrotab.c macroexp.c macrocmd.c macroscope.c \
a570 1
callback_h =	$(INCLUDE_DIR)/gdb/callback.h
d572 1
a572 1
remote_sim_h =	$(INCLUDE_DIR)/gdb/remote-sim.h
d575 1
a575 2
sim_arm_h =	$(INCLUDE_DIR)/gdb/sim-arm.h
sim_d10v_h =	$(INCLUDE_DIR)/gdb/sim-d10v.h
a595 1
alpha_tdep_h =	alpha-tdep.h osabi.h
a597 1
arm_tdep_h =	arm-tdep.h osabi.h
d603 1
a603 1
c_lang_h =	c-lang.h $(value_h) $(macroexp_h)
a635 3
i386_tdep_h =	i386-tdep.h
i386_linux_tdep_h = i386-linux-tdep.h
i387_tdep_h =	i387-tdep.h
a641 1
macroscope_h =  macroscope.h $(macrotab_h) $(symtab_h)
a645 1
ppc_tdep_h =	ppc-tdep.h osabi.h
a650 2
sh_tdep_h =	sh-tdep.h osabi.h
sim_regno_h =	sim-regno.h
d680 1
a680 1
	macrotab.h macroexp.h macroscope.h \
d723 1
a723 1
	macrotab.o macrocmd.o macroexp.o macroscope.o \
d725 1
a725 1
	gdbarch.o arch-utils.o gdbtypes.o osabi.o copying.o $(DEPFILES) \
d840 1
a840 10

# FIXME: cagney/2002-06-09: gdb/564: gdb/563: Force the order so that
# the first call is to _initialize_gdbtypes.  This is a hack to ensure
# that all the architecture dependant global builtin_type_* variables
# are initialized before anything else (per-architecture code is
# called in the same order that it is registered).  The ``correct
# fix'' is to have all the builtin types made part of the architecture
# and initialize them on-demand (using gdbarch_data) just like
# everything else.  The catch is that other modules still take the
# address of these builtin types forcing them to be variables, sigh!
d865 1
a865 2
	sed -e 's/^.*://' -e 's/^\([a-z_0-9A-Z]*\).*/\1/' | \
	( echo _initialize_gdbtypes ; grep -v -e '^_initialize_gdbtypes$$' ) > init.l-tmp
a1217 1
	mipsnbsd-nat.c mipsnbsd-tdep.c \
d1223 1
a1223 2
	ppc-sysv-tdep.o ppc-linux-nat.c ppc-linux-tdep.c \
	ppcnbsd-nat.o ppcnbsd-tdep.o \
d1233 1
a1233 2
	sh-tdep.c shnbsd-tdep.c shnbsd-nat.c \
	solib.c solib-svr4.c solib-sunos.c sparc-linux-nat.c \
a1234 1
	sparc64nbsd-nat.c sparcnbsd-nat.c sparcnbsd-tdep.c \
d1257 1
a1257 1
	$(regcache_h) $(alpha_tdep_h)
d1260 1
a1260 1
	$(alpha_tdep_h) alphabsd-tdep.h
d1264 1
a1264 1
	$(regcache_h) $(doublest_h) $(BFD_SRC)/elf-bfd.h $(alpha_tdep_h)
d1266 1
a1266 1
alpha-linux-tdep.o: alpha-linux-tdep.c $(defs_h) $(value_h) $(alpha_tdep_h)
d1268 1
a1268 1
alpha-osf1-tdep.o: alpha-osf1-tdep.c $(defs_h) $(value_h) $(alpha_tdep_h)
d1272 1
a1272 1
alphafbsd-tdep.o: alphafbsd-tdep.c $(defs_h) $(value_h) $(alpha_tdep_h)
d1275 1
a1275 1
	$(value_h) $(alpha_tdep_h) solib-svr4.h alphabsd-tdep.h nbsd-tdep.h
d1280 1
a1280 1
	$(gdb_string_h) $(regcache_h) $(arm_tdep_h)
d1283 1
a1283 1
	$(gdbtypes_h) $(floatformat_h) $(regcache_h) $(doublest_h) $(arm_tdep_h)
d1287 1
a1287 1
	$(value_h) $(arch_utils_h) $(solib_svr4_h) $(arm_tdep_h) \
d1289 1
a1289 1
	$(INCLUDE_DIR)/elf/arm.h $(sim_arm_h) $(gdb_assert_h)
d1291 2
a1292 2
armnbsd-nat.o: armnbsd-nat.c $(defs_h) $(arm_tdep_h) $(inferior_h) \
	$(regcache_h) $(gdbcore_h)
d1294 1
a1294 2
armnbsd-tdep.o: armnbsd-tdep.c $(defs_h) $(arm_tdep_h) solib-svr4.h \
	nbsd-tdep.h
d1319 1
a1319 2
	$(language_h) $(parser_defs_h) $(symtab_h) $(macroscope_h) \
	gdb_assert.h
d1400 1
a1400 2
	$(arch_utils_h) $(regcache_h) $(floatformat_h) $(sim_d10v_h) \
	$(sim_regno_h)
d1429 1
a1429 1
	$(symfile_h) $(symtab_h) $(gdb_string_h) $(macrotab_h)
d1579 1
a1579 1
	$(version_h) $(floatformat_h) $(sim_regno_h)
a1584 2
osabi.o: osabi.c $(defs_h) $(BFD_SRC)/elf-bfd.h

d1653 1
a1653 2
	$(symtab_h) $(symfile_h) $(objfiles_h) $(regcache_h) \
	$(i386_linux_tdep_h) $(i386_tdep_h) $(i387_tdep_h)
d1811 1
a1811 2
	$(inferior_h) $(language_h) $(objfiles_h) $(symfile_h) \
	$(gdb_string_h) osabi.h
a1820 6
mipsnbsd-nat.o: mipsnbsd-nat.c $(defs_h) $(inferior_h) $(regcache_h) \
	mipsnbsd-tdep.h

mipsnbsd-tdep.o: mipsnbsd-tdep.c $(defs_h) $(gdbcore_h) $(regcache_h) \
	$(target_h) $(value_h) osabi.h solib-svr4.h mipsnbsd-tdep.h

d1885 1
a1885 1
	$(inferior_h) $(target_h) $(regcache_h) $(ppc_tdep_h)
d1888 1
a1888 11
	$(target_h) $(ppc_tdep_h) $(regcache_h) $(value_h)

ppc-sysv-tdep.o: ppc-sysv-tdep.c $(defs_h) $(gdbcore_h) $(inferior_h) \
	$(value_h) $(regcache_h) $(ppc_tdep_h)

ppcnbsd-nat.o: ppcnbsd-nat.c $(defs_h) $(inferior_h) $(ppc_tdep_h) \
	ppcnbsd-tdep.h

ppcnbsd-tdep.o: ppcnbsd-tdep.c $(defs_h) $(gdbcore_h) $(regcache_h) \
	$(target_h) $(breakpoint_h) $(value_h) $(ppc_tdep_t) ppcnbsd-tdep.h \
	nbsd-tdep.h
d1933 1
a1933 1
	$(inferior_h) $(gdb_string_h) $(completer_h) $(arm_tdep_h)
d1946 1
a1946 1
	$(inferior_h) $(gdb_string_h) $(arm_tdep_h) $(callback_h)
d1983 2
a1984 3
	$(terminal_h) $(target_h) $(gdbcore_h) $(callback_h) \
	$(remote_sim_h) $(remote_utils_h) $(command_h) $(regcache_h) \
	$(sim_regno_h)
d2024 1
a2024 1
	$(target_h) $(ppc_tdep_h) $(regcache_h) $(value_h) $(parser_defs_h)
d2054 1
a2054 6
	$(regcache_h) $(doublest_h) $(sh_tdep_h)

shnbsd-tdep.o: shnbsd-tdep.c $(defs_h) $(gdbcore_h) $(regcache_h) \
	$(value_h) $(sh_tdep_h) solib-svr4.h shnbsd-tdep.h nbsd-tdep.h

shnbsd-nat.o: shnbsd-nat.c $(defs_h) $(inferior_h) shnbsd-tdep.h
d2058 1
a2058 1
	$(regcache_h) $(sh_tdep_h)
d2090 1
a2090 1
	$(arch_utils_h) $(regcache_h) osabi.h
a2093 10
sparc64nbsd-nat.o: sparc64nbsd-nat.c $(defs_h) $(inferior_h) $(regcache_h) \
	sparcnbsd-tdep.h

sparcnbsd-nat.o: sparcnbsd-nat.c $(defs_h) $(inferior_h) $(regcache_h) \
	sparcnbsd-tdep.h 

sparcnbsd-tdep.o: sparcnbsd-tdep.c $(defs_h) $(gdbcore_h) $(regcache_h) \
	$(target_h) $(value_h) osabi.h sparcnbsd-tdep.h nbsd-tdep.h \
	solib-svr4.h

a2143 5

macroscope.o: macroscope.c $(defs_h) $(macroscope_h)

macrocmd.o: macrocmd.c $(defs_h) $(macrotab_h) $(macroexp_h) \
	$(macroscope_h) $(command_h) $(gdbcmd_h)
@


1.190.2.4
log
@merge with trunk
@
text
@d315 1
a315 1
GDB_CFLAGS = -I. -I$(srcdir) -I$(srcdir)/config -DLOCALEDIR="\"$(prefix)/share/locale\"" $(DEFS)
d586 8
d622 1
a622 1
		gdbarch.h ui-file.h $(INCLUDE_DIR)/gdb/signals.h gdb_locale.h
d696 1
a696 1
	nindy-share/b.out.h \
d706 1
a706 1
HFILES_WITH_SRCDIR = ../bfd/bfd.h
d1209 3
a1211 1
ALLDEPFILES = a68v-nat.c \
d1234 1
a1234 1
	m88k-nat.c m88k-tdep.c \
d1248 1
a1248 1
	remote-array.c remote-bug.c remote-e7000.c \
d1250 1
a1250 1
	remote-nindy.c remote-os9k.c remote-rdp.c remote-sim.c \
d1252 1
a1252 1
	remote-vx.c \
d1269 9
a1489 3
frv-tdep.o: frv-tdep.c $(defs_h) $(inferior_h) $(symfile_h) $(gdbcore_h) \
	$(arch_utils_h) $(regcache_h)

d1709 1
a1709 1
	$(ui_out_h) $(completer_h) $(regcache_h)
@


1.190.2.5
log
@merge with trunk
@
text
@d644 1
a644 1
objfiles_h =	objfiles.h $(bcache_h)
d658 1
a658 1
symtab_h =	symtab.h
a667 1
vax_tdep_h =	vax-tdep.h osabi.h
d878 1
a878 1
	( echo _initialize_gdbtypes ; grep -v '^_initialize_gdbtypes$$' ) > init.l-tmp
d2239 1
a2239 1
	$(arch_utils_h) $(inferior_h) $(vax_tdep_h)
@


1.190.2.6
log
@merge with trunk.
@
text
@d640 1
a640 1
macrotab_h =    macrotab.h
@


1.189
log
@* Makefile.in (remote_sim_h): Replace remote-sim_h.
(remote-sim.o): Update dependencies.
(d10v-tdep.o): Specify dependencies.
(sim_d10v_h): Define.
@
text
@d1312 2
a1313 1
	$(language_h) $(bcache_h) $(filenames_h) $(stabsread_h)
@


1.188
log
@Add first preprocessor macro-expansion files.
* macroexp.c, macroexp.h, macrotab.c, macrotab.h: New files.
* Makefile.in (SFILES): Add macrotab.c, macroexp.c.
(splay_tree_h, macroexp_h, macrotab_h): New variable.
(HFILES_NO_SRCDIR): Add macrotab.h, macroexp.h.
(COMMON_OBS): Add macrotab.o, macroexp.o.
(macroexp.o, macrotab.o): New rules.
@
text
@d572 1
a572 1
remote-sim_h =	$(INCLUDE_DIR)/remote-sim.h
d575 1
d1396 5
d1981 3
a1983 3
remote-sim.o: remote-sim.c $(defs_h) $(gdbcore_h) \
	$(inferior_h) $(target_h) $(terminal_h) $(gdb_string_h) \
	$(INCLUDE_DIR)/callback.h $(regcache_h)
@


1.187
log
@2002-05-12  Daniel Jacobowitz  <drow@@mvista.com>

        * Makefile.in: Update dependencies.
@
text
@d542 1
d575 1
d639 2
d679 1
d722 1
d2132 5
@


1.186
log
@2005-05-11  Daniel Jacobowitz  <drow@@mvista.com>
            Peter Schauer  <pes@@regent.e-technik.tu-muenchen.de>

        * Makefile.in: Update dependencies for valops.c.
        * valops.c: Include "gdb_assert.h".
        (typecmp): Skip THIS parameter to methods.
        (find_method_list): Remove static_memfuncp argument,
        update callers.  Check for stub methods.
        (find_value_oload_method_list): Don't set *static_memfuncp.
        (find_overload_match): Don't check for stub methods.  Assert
        that methods are not stubbed.  Handle static methods.
        (value_find_oload_method_list): Remove static_memfuncp argument.
        * gdbtypes.c (check_stub_method): Do not add THIS pointer
        to the argument list for static stub methods.
        * value.h (value_find_oload_method_list): Update prototype.
@
text
@d1303 3
a1305 1
	$(objfiles_h) $(symfile_h) $(symtab_h) $(gdb_string_h)
d1556 5
a1560 1
gdbarch.o: gdbarch.c $(defs_h) $(bfd_h) $(gdbcmd_h)
d1563 4
a1566 1
	$(arch_utils_h) $(gdb_assert_h)
d1752 1
a1752 1
	$(symfile_h)  $(gdbcore_h) $(ui_out_h)
d1780 2
a1781 1
mem-break.o: mem-break.c $(defs_h) 
d2068 1
a2068 1
	$(ui_out_h)
d2150 1
a2150 1
	$(gdb_string_h) $(event_loop_h) $(event_top_h)
d2298 2
a2299 1
		$(ui_out_h) $(mi_getopt_h) $(gdb_h)
d2306 3
a2308 1
		$(mi_getopt_h) $(regcache_h) $(gdb_h)
@


1.185
log
@* Makefile.in: Replace gdb_assert.h with $(gdb_assert_h),
gdb_string.h with $(gdb_string_h) and gdb_regex.h with
$(gdb_regex_h).
(gdb_assert_h): Define.
(gdb_wait_h): Define.
(gdb_regex_h): Define.
@
text
@d2147 1
a2147 1
	$(gdb_string_h) $(regcache_h) $(cp_abi_h)
@


1.184
log
@* Makefile.in (ALLDEPFILES): Add nbsd-tdep.c.
(alphanbsd-tdep.o): Add nbsd-tdep.h to dependency list.
(nbsd-tdep.o): New dependency list.
* alphanbsd-tdep.c: Don't include solib-svr4.h.  Include
nbsd-tdep.h.
(alphanbsd_solib_svr4_fetch_link_map_offsets): Remove.
(alphanbsd_init_abi): Use nbsd_lp64_solib_svr4_fetch_link_map_offsets.
* nbsd-tdep.c: New file.
* nbsd-tdep.h: New file.
* shnbsd-tdep.c: Don't include solib-svr4.h.  Include
nbsd-tdep.h.
(shnbsd_solib_svr4_fetch_link_map_offsets): Remove.
(shnbsd_init_abi): Use nbsd_ilp32_solib_svr4_fetch_link_map_offsets.
* config/alpha/nbsd.mt (TDEPFILES): Add nbsd-tdep.o.
* config/sh/nbsd.mt (TDEPFILES): Ditto.
@
text
@d623 1
d627 2
d1319 1
a1319 1
	gdb_assert.h gdb_string.h
d1397 1
a1397 1
dink32-rom.o: dink32-rom.c $(monitor_h) $(bfd_h) gdb_wait.h $(defs_h) \
d1449 1
a1449 1
fork-child.o: fork-child.c gdb_wait.h $(defs_h) $(gdbcore_h) \
d1557 1
a1557 1
	$(arch_utils_h) gdb_assert.h
d1563 1
a1563 1
go32-nat.o: go32-nat.c $(defs_h) $(inferior_h) gdb_wait.h $(gdbcore_h) \
d1585 1
a1585 1
hppa-tdep.o: hppa-tdep.c gdb_wait.h $(defs_h) $(gdbcmd_h) $(gdbcore_h) \
d1662 1
a1662 1
	$(gdb_string_h) gdb_wait.h $(command_h) $(regcache_h)
d1664 1
a1664 1
infrun.o: infrun.c gdb_wait.h $(defs_h) $(gdbcmd_h) $(cli_script_h) \
d1669 1
a1669 1
inftarg.o: inftarg.c gdb_wait.h $(defs_h) $(gdbcore_h) $(inferior_h) \
d1675 1
a1675 1
	gdb_regex.h $(language_h) $(gdb_string_h) $(regcache_h)
d1713 1
a1713 1
	$(target_h) gdb_wait.h $(gdbcmd_h) $(gdbcore_h) $(regcache_h)
d1726 1
a1726 1
	$(gdbcore_h) gdb_string.h
d1799 1
a1799 1
	$(obstack_h) $(target_h) $(value_h) $(bfd_h) gdb_string.h \
d1808 1
a1808 1
Onindy.o: nindy-share/Onindy.c gdb_wait.h nindy-share/block_io.h \
d1812 1
a1812 1
nindy.o: nindy-share/nindy.c gdb_wait.h nindy-share/block_io.h \
d1867 1
a1867 1
ppcbug-rom.o: ppcbug-rom.c $(monitor_h) $(bfd_h) gdb_wait.h $(defs_h) \
d1895 1
a1895 1
thread-db.o: thread-db.c $(defs_h) gdb_assert.h gdb_proc_service.h \
d1899 1
a1899 1
lin-lwp.o: lin-lwp.c $(defs_h) gdb_assert.h gdb_wait.h $(gdbthread_h) \
d1984 1
a1984 1
remote.o: remote.c $(bfd_h) gdb_wait.h $(defs_h) $(gdbcmd_h) \
d1989 1
a1989 1
remote-nrom.o: remote-nrom.c $(bfd_h) gdb_wait.h $(defs_h) $(gdbcmd_h) \
d1992 1
a1992 1
rom68k-rom.o: rom68k-rom.c $(monitor_h) $(bfd_h) gdb_wait.h $(defs_h) \
d2033 1
a2033 1
sh3-rom.o: sh3-rom.c $(monitor_h) $(bfd_h) gdb_wait.h $(defs_h) $(gdbcmd_h) \
d2040 1
a2040 1
mon960-rom.o: mon960-rom.c $(monitor_h) $(bfd_h) gdb_wait.h $(defs_h) \
d2044 1
a2044 1
	$(objfiles_h) gdb_regex.h $(symfile_h) $(target_h) $(gdb_string_h) \
d2056 1
a2056 1
	$(gdbcore_h) $(language_h) $(objfiles_h) gdb_regex.h $(symfile_h) \
d2110 1
a2110 1
	gdb_regex.h $(symfile_h) $(symtab_h) $(target_h) $(value_h) \
d2165 1
a2165 1
	$(dwarf2cfi_h) gdb_assert.h
d2168 1
a2168 1
	$(gdbcore_h) $(regcache_h) i387-tdep.h gdb_assert.h x86-64-tdep.h \
d2193 1
a2193 1
	$(gdbcmd_h) $(symfile_h) $(frame_h) gdb_regex.h
d2242 1
a2242 1
		 $(defs_h) $(target_h) gdb_wait.h gdb_regex.h $(ui_out_h)
d2247 1
a2247 1
		$(symtab_h) gdb_regex.h
@


1.183
log
@* Makefile.in (ALLDEPFILES): Remove i387-nat.c.
(i387-nat.o): Delete dependency list.
(go32-nat.o): Change i387-nat.h to i387-tdep.h.
(x86-64-linux-nat.o): Likewise.
* i387-nat.c: Delete file, moving contents to...
* i387-tdep.c: ...here.
* i387-nat.h: Rename...
* i387-tdep.h: ...to this.
* go32-nat.c: Include i387-tdep.h instead of i387-nat.h.
* i386-linux-nat.c: Likewise.
* i386bsd-nat.c: Likewise.
* i386gnu-nat.c: Likewise.
* i386nbsd-nat.c: Likewise.
* i386v4-nat.c: Likewise.
* x86-64-linux-nat.c: Likewise.
* config/i386/fbsd.mh (NATDEPFILES): Remove i387-nat.o.
* config/i386/go32.mh (NATDEPFILES): Likewise.
* config/i386/i386gnu.mh (NATDEPFILES): Likewise.
* config/i386/i386sol2.mh (NATDEPFILES): Likewise.
* config/i386/i386v42mp.mh (NATDEPFILES): Likewise.
* config/i386/linux.mh (NATDEPFILES): Likewise.
* config/i386/nbsd.mh (NATDEPFILES): Likewise.
* config/i386/nbsdelf.mh (NATDEPFILES): Likewise.
* config/i386/obsd.mh (NATDEPFILES): Likewise.
* config/i386/x86-64linux.mh (NATDEPFILES): Likewise.
@
text
@d1208 1
d1265 1
a1265 1
	$(value_h) alpha-tdep.h alphabsd-tdep.h
d1802 2
@


1.182
log
@* Makefile.in (ALLDEPFILES): Remove alphanbsd-nat.c.
(alphanbsd-nat.o): Remove dependency list.
(alphanbsd-tdep.o): Add $(regcache_h) to dependency list.
* alphanbsd-nat.c: Delete.  Contents moved to...
* alphanbsd-tdep.c: ...here.
(_initialize_alphanbsd_tdep): Register core functions.
* config/alpha/nbsd.mh (NATDEPFILES): Remove alphanbsd-nat.o.
@
text
@d1195 1
a1195 1
	i387-tdep.c i387-nat.c \
d1560 1
a1560 1
	$(command_h) $(floatformat_h) $(target_h) i387-nat.h $(regcache_h)
a1636 3
i387-nat.o: i387-nat.c $(defs_h) $(inferior_h) $(value_h) $(regcache_h) \
	i387-nat.h

d2162 1
a2162 1
	$(gdbcore_h) $(regcache_h) i387-nat.h gdb_assert.h x86-64-tdep.h \
@


1.181
log
@* Makefile.in (ALLDEPFILES): Add alphabsd-tdep.c.
(alphabsd-nat.o): Depend on alphabsd-tdep.h.
(alphanbsd-nat.o): Likewise.
(alphabsd-tdep.o): New dependency list.
* alphabsd-nat.c (supply_gregset): Use alphabsd_supply_reg.
(fill_gregset): Use alphabsd_fill_reg.
(supply_fpregset): Use alphabsd_supply_fpreg.
(fill_fpregset): Use alphabsd_fill_fpreg.
(fetch_inferior_registers): Use struct reg and struct fpreg
rather than gregset_t and fpregset_t.  Use alphabsd_supply_reg
and alphabsd_supply_fpreg.
(store_inferior_registers): Use struct reg and struct fpreg
rather than gregset_t and fpregset_t.  Use alphabsd_fill_reg
and alphabsd_fill_fpreg.
* alphabsd-tdep.c: New file.
* alphabsd-tdep.h: New file.
* alphanbsd-nat.c (fetch_core_registers): Use alphabsd_supply_fpreg.
(fetch_elfcore_registers): Use alphabsd_supply_reg and
alphabsd_supply_fpreg.
* config/alpha/fbsd.mt (TDEPFILES): Add alphabsd-tdep.o.
* config/alpha/nbsd.mt (TDEPFILES): Likewise.
@
text
@d1181 1
a1181 1
	alpha-nat.c alphabsd-nat.c alphanbsd-nat.c \
a1250 3
alphanbsd-nat.o: alphanbsd-nat.c $(defs_h) $(inferior_h) $(regcache_h) \
	$(gdbcore_h) alpha-tdep.h alphabsd-tdep.h

d1263 2
a1264 2
alphanbsd-tdep.o: alphanbsd-tdep.c $(defs_h) $(gdbcore_h) $(value_h) \
	alpha-tdep.h
@


1.180
log
@* MAINTAINERS: Mark a29k as deleted.
* NEWS: Mention that a29k was removed.  Add OBSOLETE section.
Move new configurations to the top.
* configure.tgt: Remove a29k.
* config/a29k/tm-vx29k.h: Delete.
* config/a29k/vx29k.mt: Delete.
* config/a29k/tm-a29k.h: Delete.
* config/a29k/a29k-udi.mt: Delete.
* config/a29k/a29k.mt: Delete.
* a29k-tdep.c: Delete.
* remote-udi.c: Delete.
* remote-mm.c: Delete.
* remote-eb.c: Delete.
* remote-adapt.c: Delete.
* Makefile.in: Remove obsolete code.
* gdbserver/Makefile.in: Ditto.
* config/s390/s390x.mt: Ditto.
* config/s390/s390.mt: Ditto.
* config/sparc/sparclynx.mh: Ditto.
* config/sparc/linux.mh: Ditto.
* config/pa/hppaosf.mh: Ditto.
* config/pa/hppabsd.mh: Ditto.
* config/ns32k/nbsd.mt: Ditto.
* config/mips/vr5000.mt: Ditto.
* config/m68k/sun3os4.mh: Ditto.
* config/m68k/nbsd.mt: Ditto.
* config/m68k/m68klynx.mh: Ditto.
* config/m32r/m32r.mt: Ditto.
* config/i386/x86-64linux.mt: Ditto.
* config/i386/nbsdelf.mt: Ditto.
* config/i386/nbsd.mt: Ditto.
* config/i386/i386lynx.mh: Ditto.
@
text
@d1182 2
a1183 2
	alpha-tdep.c alpha-linux-tdep.c alphanbsd-tdep.c alpha-osf1-tdep.c \
	alphafbsd-tdep.c \
d1249 1
a1249 1
	alpha-tdep.h
d1252 1
a1252 1
	$(gdbcore_h) alpha-tdep.h
d1261 2
@


1.180.2.1
log
@Add first preprocessor macro-expansion files.
* macroexp.c, macroexp.h, macrotab.c, macrotab.h: New files.
* Makefile.in (SFILES): Add macrotab.c, macroexp.c.
(splay_tree_h, macroexp_h, macrotab_h): New variable.
(HFILES_NO_SRCDIR): Add macrotab.h, macroexp.h.
(COMMON_OBS): Add macrotab.o, macroexp.o.
(macroexp.o, macrotab.o): New rules.
@
text
@a541 1
	macrotab.c macroexp.c \
a573 1
splay_tree_h =  $(INCLUDE_DIR)/splay-tree.h
a633 2
macroexp_h =	macroexp.h
macrotab_h =    macrotab.h $(obstack_h) $(bcache_h)
a671 1
	macrotab.h macroexp.h \
a713 1
	macrotab.o macroexp.o \
a2113 5

macroexp.o: macroexp.c $(defs_h) $(macrotab_h)

macrotab.o: macrotab.c $(defs_h) $(obstack_h) $(objfiles_h) $(symtab_h) \
	$(macrotab_h) $(splay_tree_h) gdb_assert.h $(bcache_h)
@


1.180.2.2
log
@Revert 8 May change; it's going to be revised.
@
text
@d542 1
d575 1
d636 2
d676 1
d719 1
d2120 5
@


1.180.2.3
log
@Add first preprocessor macro-expansion files.
* macroexp.c, macroexp.h, macrotab.c, macrotab.h: New files.
* Makefile.in (SFILES): Add macrotab.c, macroexp.c.
(splay_tree_h, macroexp_h, macrotab_h): New variable.
(HFILES_NO_SRCDIR): Add macrotab.h, macroexp.h.
(COMMON_OBS): Add macrotab.o, macroexp.o.
(macroexp.o, macrotab.o): New rules.
@
text
@a541 1
	macrotab.c macroexp.c \
a573 1
splay_tree_h =  $(INCLUDE_DIR)/splay-tree.h
a633 2
macroexp_h =	macroexp.h
macrotab_h =    macrotab.h $(obstack_h) $(bcache_h)
a671 1
	macrotab.h macroexp.h \
a713 1
	macrotab.o macroexp.o \
a2113 5

macroexp.o: macroexp.c $(defs_h) $(macrotab_h)

macrotab.o: macrotab.c $(defs_h) $(obstack_h) $(objfiles_h) $(symtab_h) \
	$(macrotab_h) $(splay_tree_h) gdb_assert.h $(bcache_h)
@


1.180.2.4
log
@Add macro structures to GDB's symbol tables.  Nobody puts anything
in them yet.
* symtab.h (struct symtab): New member: `macro_table'.
* buildsym.h (pending_macros): New global variable.
* buildsym.c: #include "macrotab.h".
(buildsym_init): Initialize `pending_macros'.
(end_symtab): If we found macro information while reading a CU's
debugging info, do build a symtab structure for it.  Make the
symtab point to the macro information, and clear the
`pending_macros' pointer which held it while we were reading the
debug info.
(really_free_pendings): Free any pending macro table.
* objfiles.h (struct objfile): New member: `macro_cache'.
* objfiles.c (allocate_objfile): Set allocate and free functions
for the macro cache's objstack.
(free_objfile): Empty the macro cache's obstack.
* symfile.c (reread_symbols): Empty the macro cache's obstack, and
set new allocate and free functions for it.
* solib-sunos.c (allocate_rt_common_objfile): Set allocate and
free functions for the macro cache's objstack.  (Why is this
function building its own objfile?)
* symmisc.c (print_objfile_statistics): Print statistics on the
macro bcache.
* Makefile.in: Note that buildsym.o depends on macrotab.h.
@
text
@d1306 1
a1306 2
	$(objfiles_h) $(symfile_h) $(symtab_h) $(gdb_string_h) \
	$(macrotab.h)
@


1.180.2.5
log
@* Makefile.in (buildsym.o): Fix variable reference.
@
text
@d1307 1
a1307 1
	$(macrotab_h)
@


1.180.2.6
log
@Teach the Dwarf 2 reader to read macro information.
* dwarf2read.c: #include "macrotab.h".
(dwarf_macinfo_buffer): New variable.
(struct dwarf2_pinfo): New members: dwarf_macinfo_buffer, and
dwarf_macinfo_size.
(DWARF_MACINFO_BUFFER, DWARF_MACINFO_SIZE): New macros.
(dwarf2_missing_macinfo_section, dwarf2_macros_too_long,
dwarf2_macros_not_terminated, dwarf2_macro_outside_file,
dwarf2_macro_unmatched_end_file, dwarf2_macro_malformed_definition,
dwarf2_macro_spaces_in_definition): New complaints.
(dwarf2_has_info): Initialize dwarf_macinfo_offset.
(dwarf2_build_psymtabs): Read the .dwarf_macinfo section.
(dwarf2_build_psymtabs_hard): Record the buffer and its size in
the partial symbol table.
(psymtab_to_symtab_1): Set the macinfo buffer and size globals
from what's recorded in the partial symbol table.
(read_file_scope): If the compilation unit has a
`DW_AT_macro_info' attribute, read its macro information.
* Makefile.in (dwarf2read.o): Depend on macrotab.h.
@
text
@d1418 1
a1418 1
	$(symfile_h) $(symtab_h) $(gdb_string_h) $(macrotab_h)
@


1.180.2.7
log
@Add commands for manually expanding macros and showing their
definitions.
* macrocmd.c, macroscope.c, macroscope.h: New files.
* Makefile.in (SFILES): Add macrocmd.c, macroscope.c.
(macroscope_h): New variable.
(HFILES_NO_SRCDIR): Add macroscope.h.
(COMMON_OBS): Add macrocmd.o, macroscope.o.
(macroscope.o, macrocmd.o): New rules.
@
text
@d542 1
a542 1
	macrotab.c macroexp.c macrocmd.c macroscope.c \
a637 1
macroscope_h =  macroscope.h $(macrotab_h) $(symtab_h)
d676 1
a676 1
	macrotab.h macroexp.h macroscope.h \
d719 1
a719 1
	macrotab.o macrocmd.o macroexp.o macroscope.o \
a2125 5

macroscope.o: macroscope.c $(defs_h) $(macroscope_h)

macrocmd.o: macrocmd.c $(defs_h) $(macrotab_h) $(macroexp_h) \
	$(macroscope_h) $(command_h) $(gdbcmd_h)
@


1.180.2.8
log
@Expand preprocessor macros in C expressions.
* c-lang.h: #include "macroexp.h", for macro_lookup_ftype.
(scan_macro_expansion, scanning_macro_expansion,
finished_macro_expansion): New function declarations.
(expression_macro_lookup_func, expression_macro_lookup_baton): New
variable declarations.
* parser-defs.h (expression_context_pc): New declaration.
* parse.c (expression_context_pc): New variable.
(parse_exp_1): Set expression_context_pc, as well as
expression_context_block.
* c-exp.y (yylex): If we're not already reading the result of a
macro expansion, try to macro-expand the next token.  When we're
done scanning a macro expansion, switch back to the mainline text.
Commas and `if's in a macro's expansion don't terminate the input.
* c-lang.c: #include "macroscope.h" and "gdb_assert.h".
(macro_original_text, macro_expanded_text,
expression_macro_lookup_func, expression_macro_lookup_baton): New
variables.
(scan_macro_expansion, scanning_macro_expansion,
finished_macro_expansion, scan_macro_cleanup, null_macro_lookup,
c_preprocess_and_parse): New functions.
(c_language_defn, cplus_language_defn, asm_language_defn): Call
c_preprocess_and_parse, instead of c_parse.
* Makefile.in (c_lang_h): Note that this #includes macroexp.h.
(c-lang.o): Note dependency on macroscope.h and gdb_assert.h.
@
text
@d602 1
a602 1
c_lang_h =	c-lang.h $(value_h) $(macroexp_h)
d1314 1
a1314 2
	$(language_h) $(parser_defs_h) $(symtab_h) $(macroscope_h) \
	gdb_assert.h
@


1.179
log
@* Makefile.in: Add support for AVR target.
* configure.tgt: Add support for AVR target.
* avr-tdep.c: New file
* config/avr/avr.mt: New file.
@
text
@a1241 3
# OBSOLETE a29k-tdep.o: a29k-tdep.c $(gdbcmd_h) $(gdbcore_h) $(inferior_h) $(defs_h) \
# OBSOLETE 	$(regcache_h)

a1902 3
# OBSOLETE remote-adapt.o: remote-adapt.c $(defs_h) $(gdbcore_h) \
# OBSOLETE	$(inferior_h) $(target_h) $(terminal_h) $(gdb_string_h) $(regcache_h)

a1929 4
# OBSOLETE remote-eb.o: remote-eb.c $(srcdir)/config/a29k/tm-a29k.h \
# OBSOLETE 	$(defs_h) $(gdbcore_h) $(inferior_h) $(symfile_h) $(target_h) \
# OBSOLETE 	$(terminal_h) $(gdb_string_h) $(regcache_h)

a1943 3
# OBSOLETE remote-mm.o: remote-mm.c $(bfd_h) $(defs_h) $(inferior_h) \
# OBSOLETE	minimon.h $(target_h) $(terminal_h) $(gdb_string_h) $(regcache_h)

a1962 4

# OBSOLETE remote-udi.o: remote-udi.c $(bfd_h) $(defs_h) $(gdbcmd_h) \
# OBSOLETE 	$(inferior_h) $(target_h) $(terminal_h) $(udiheaders) $(gdb_string_h) \
# OBSOLETE 	$(regcache_h)
@


1.178
log
@* Makefile.in (ALLDEPFILES): Add alphanbsd-nat.c and
alphanbsd-tdep.c.
(alphanbsd-nat.o): New dependency list.
(alphanbsd-tdep.o): Ditto.
* NEWS: Note new native NetBSD/alpha configuration.
* alphanbsd-nat.c: New file.
* alphanbsd-tdep.c: Ditto.
* configure.host (alpha*-*-netbsd*): New host.
* configure.tgt (alpha*-*-netbsd*): New target.
* config/alpha/nbsd.mh: New file.
* config/alpha/nbsd.mt: Ditto.
* config/alpha/nm-nbsd.h: Ditto.
* config/alpha/tm-nbsd.h: Ditto.
@
text
@d1186 1
d1288 3
@


1.177
log
@* Makefile.in (ALLDEPFILES): Add alpha-osf1-tdep.c.
(alpha-osf1-tdep.o): New dependency list.
* alpha-tdep.h (gdbarch_tdep): Add dynamic_sigtramp_offset
and skip_sigtramp_frame members.
* alpha-linux-tdep.c: Include gdbcore.h.
(alpha_linux_sigtramp_offset): Change return type to LONGEST.
(alpha_linux_init_abi): Initialize tdep->dynamic_sigtramp_offset.
* alpha-osf1-tdep.c: New file.
* alpha-tdep.c (alpha_osf_skip_sigtramp_frame): Moved to
alpha-osf1-dep.c.
(alpha_frame_past_sigtramp_frame): New function.
(alpha_dynamic_sigtramp_offset): Ditto.
(alpha_proc_desc_is_dyn_sigtramp): Ditto.
(alpha_set_proc_desc_is_dyn_sigtramp): Ditto.
(ALPHA_PROC_SIGTRAMP_MAGIC): Define.
(push_sigtramp_desc): Use alpha_set_proc_desc_is_dyn_sigtramp.
(after_prologue): Use alpha_proc_desc_is_dyn_sigtramp.
(find_proc_desc): Use alpha_dynamic_sigtramp_offset.
(alpha_frame_chain): Use alpha_frame_past_sigtramp_frame.
(alpha_init_extra_frame_info): Use alpha_proc_desc_is_dyn_sigtramp.
(alpha_pop_frame): Use alpha_proc_desc_is_dyn_sigtramp.
(alpha_gdbarch_init): Initialize tdep->dynamic_sigtramp_offset
and tdep->skip_sigtramp_frame.  Set gdbarch_skip_trampoline_code
to find_solib_trampoline_target.
* config/alpha/alpha-osf1.mt (TDEPFILES): Add alpha-osf1-tdep.o.
* config/alpha/tm-alpha.h: Remove inclusion of regcache.h.
(SKIP_TRAMPOLINE_CODE): Remove.
(PROC_DESC_IS_DYN_SIGTRAMP): Ditto.
(SET_PROC_DESC_IS_DYN_SIGTRAMP): Ditto.
(DYNAMIC_SIGTRAMP_OFFSET): Ditto.
(FRAME_PAST_SIGTRAMP_FRAME): Ditto.
* config/alpha/tm-alphalinux.h (PROC_DESC_IS_DYN_SIGTRAMP): Remove.
(PROC_SIGTRAMP_MAGIC): Ditto.
(PROC_DESC_IS_DYN_SIGTRAMP): Ditto.
(SET_PROC_DESC_IS_DYN_SIGTRAMP): Ditto.
(SET_PROC_DESC_IS_DYN_SIGTRAMP): Ditto.
(DYNAMIC_SIGTRAMP_OFFSET): Ditto.
(FRAME_PAST_SIGTRAMP_FRAME): Ditto.
@
text
@d1181 3
a1183 2
	alpha-nat.c alphabsd-nat.c alpha-tdep.c \
	alpha-linux-tdep.c alpha-osf1-tdep.c alphafbsd-tdep.c \
d1253 3
d1265 3
@


1.176
log
@* Makefile.in (vax-tdep.o): Add $(arch_utils_h), $(inferior_h),
and vax-tdep.h.
* vax-tdep.h: New file.
* vax-tdep.c: Include inferior.h, arch-utils.h, and vax-tdep.h.
Make several routines static.
(vax_get_saved_register): New function.
(vax_gdbarch_init): New function.
(_initialize_vax_tdep): Register vax_gdbarch_init.
* config/vax/tm-vax.h: Set GDB_MULTI_ARCH to GDB_MULTI_ARCH_PARTIAL.
Remove macros now under the control of gdbarch.
@
text
@d1181 2
a1182 2
	alpha-nat.c alphabsd-nat.c alpha-tdep.c alpha-linux-tdep.c \
	alphafbsd-tdep.c \
d1257 2
@


1.175
log
@2002-04-22  H.J. Lu  (hjl@@gnu.org)

	* Makefile.in (FLAGS_TO_PASS): Add libdir, mandir, datadir and
	includedir.
@
text
@d2159 2
a2160 1
vax-tdep.o: vax-tdep.c $(OP_INCLUDE)/vax.h $(defs_h) $(symtab_h)
@


1.174
log
@Revert Sparc OS abi changes.
@
text
@d417 4
@


1.173
log
@2002-04-20  David S. Miller  <davem@@redhat.com>

	* sparc-tdep.h: New file.
	* sparc-tdep.c (elf-bfd.h): Include.
	(SPARC_HAS_FPU, FP_REGISTER_BYTES, FP_MAX_REGNUM,
	SPARC_INTREG_SIZE, DUMMY_REG_SAVE_OFFSET, gdbarch_tdep,
	CALL_DUMMY_CALL_OFFSET): Move out to sparc-tdep.h
	(sparc_dump_tdep): New function.
	(_initialize_sparc_tdep): Use gdbarch_register instead of
	register_gdbarch_init which is deprecated.
	(process_note_abi_tag_sections, sparc_abi_handler,
	sparc_abi_handler_list, sparc_gdbarch_register_os_abi): New.
	(sparc_gdbarch_init): Determine elf os ident key based upon
	either the elf header or by using process_note_abi_tag_sections.
	Fix 'gdbarch already exists' test by comparing os_ident as well.
	As the last action, invoke OS abi_handler if installed.
@
text
@d2065 1
a2065 1
	$(arch_utils_h) $(regcache_h) $(BFD_SRC)/elf-bfd.h sparc-tdep.h
@


1.172
log
@* Makefile.in (ALLDEPFILES): Add alphabsd-nat.c.
(alphabsd-nat.o): New dependency list.
@
text
@d2065 1
a2065 1
	$(arch_utils_h) $(regcache_h)
@


1.171
log
@* Makefile.in (ALLDEPFILES): Add alpha-linux-tdep.c and
alphafbsd-tdep.c.
(alpha-linux-tdep.o): New dependency list.
(alphafbsd-tdep.o): Likewise.
@
text
@d1176 4
a1179 2
	a29k-tdep.c a68v-nat.c alpha-nat.c alpha-tdep.c alpha-linux-tdep.c \
	alphafbsd-tdep.c arm-linux-nat.c arm-linux-tdep.c arm-tdep.c \
d1244 3
@


1.170
log
@* alpha-tdep.h: New file.  Includes several Alpha target constants
taken from...
* config/alpha/tm-alpha.h: ...here.  Remove macros that we now
let gdbarch deal with.
(GDB_MULTI_ARCH): Define as GDB_MULTI_ARCH_PARTIAL.
* Makefile.in (alpha-nat.o): Add alpha-tdep.h and $(BFD_SRC)/elf-bfd
to dependency list.
* alpha-nat.c: Include alpha-tdep.h.  Update for adjusted
Alpha target register names.
* alphabsd-nat.c: Likewise.
* alpha-tdep.c: Include alpha-tdep.h.  Update for adjusted
Alpha target register names.  Make serveral routines static.
(alpha_get_saved_register): New function.
(alpha_abi_names): New.
(process_note_abi_tag_sections): New function.
(get_elfosabi): New function.
(alpha_gdbarch_init): New function.
(alpha_dump_tdep): New function.
(_initialize_alpha_tdep): Register alpha_gdbarch_init.
@
text
@d1176 3
a1178 3
	a29k-tdep.c a68v-nat.c alpha-nat.c alpha-tdep.c \
	arm-linux-nat.c arm-linux-tdep.c arm-tdep.c armnbsd-nat.c \
	armnbsd-tdep.c \
d1246 4
@


1.169
log
@* findvar.c: Include "builtin-regs.h".
(value_of_register): Call value_of_builtin_reg when applicable.
* parse.c: Include "builtin-regs.h" and "gdb_assert.h".
(target_map_name_to_register): Call
builtin_reg_map_name_to_regnum.
* Makefile.in (SFILES): Add builtin-regs.c and std-regs.c.
(COMMON_OBS): Add builtin-regs.o and std-regs.o.
(builtin_regs_h): Define.
(builtin-regs.o): New target.
(findvar.o): Add $(builtin_regs_h).
* builtin-regs.c, builtin-regs.h: New files.
* std-regs.c: New file.
Partial fix for PR gdb/251.
@
text
@d1241 1
a1241 1
	$(regcache_h)
d1245 1
a1245 1
	$(regcache_h) $(doublest_h)
@


1.168
log
@* Makefile.in (gdbtk-wrapper.o): Add missing dependencies.
@
text
@d553 1
d593 1
d713 1
d1279 3
d1416 1
a1416 1
	$(gdb_string_h) $(regcache_h)
d1812 3
@


1.167
log
@2002-03-26  Michael Snyder  <msnyder@@redhat.com>
	    Andrew Cagney <cagney@@redhat.com>

	* cli/cli-dump.c: New file.  Dump memory to file,
	restore file to memory.
	* cli/cli-dump.h: New file.
	* Makefile.in: Add rules, dependencies for cli-dump.o.
@
text
@d1501 2
a1502 1
	$(srcdir)/gdbtk/generic/gdbtk-wrapper.h
@


1.166
log
@2002-03-27  Daniel Jacobowitz  <drow@@mvista.com>

        * signals.c: Moved to...
        * signals/signals.c: Here.
        * Makefile (signals.o): Update.
@
text
@d140 1
d143 1
d598 1
d2218 5
d2228 3
a2230 4
cli-cmds.o: $(srcdir)/cli/cli-cmds.c  $(cli_cmds_h) $(cli_decode_h) \
		$(cli_script_h) $(cli_setshow_h) $(top_h) $(completer_h) \
		 $(defs_h) $(target_h) gdb_wait.h gdb_regex.h $(ui_out_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/cli/cli-cmds.c
@


1.165
log
@* command.h: Update copyright.
(struct cmd_list_element): Replace definition with opaque
declaration.
(enum cmd_types): Document that it will eventually be moved to
cli/cli-decode.h
(CMD_DEPRECATED, DEPRECATED_WARN_USER): Delete macros.
(MALLOCED_REPLACEMENT): Delete macro.
* Makefile.in (cli_decode_h): Add $(command_h).
(top.o, completer.o, maint.o): Add dependency on $(cli_decode_h).
* top.c: Include "cli/cli-decode.h".
* completer.c: Include "cli/cli-decode.h".
* maint.c: Include "cli/cli-decode.h".
* cli/cli-decode.h: Include "command.h".
(enum command_class): Delete.
(enum cmd_types): Comment out.
(enum cmd_auto_boolean): Delete.
(enum var_types): Delete.
@
text
@d537 1
a537 1
	scm-valprint.c signals.c source.c stabsread.c stack.c symfile.c \
d842 1
d2013 2
a2014 1
signals.o: signals.c $(defs_h) $(target_h)
@


1.164
log
@gdb/:
2002-03-10  Daniel Jacobowitz  <drow@@mvista.com>

        * Makefile.in (defs_h): Add $(INCLUDE_DIR)/gdb/signals.h.
        * defs.h: Include "gdb/signals.h".
        (enum target_signal): Move to $(INCLUDE_DIR)/gdb/signals.h.

include/gdb:
2002-03-10  Daniel Jacobowitz  <drow@@mvista.com>

        * signals.h: New file, split from gdb/defs.h.
@
text
@d595 1
a595 1
cli_decode_h =	$(srcdir)/cli/cli-decode.h
d1394 1
a1394 1
	$(gdbcmd_h) $(target_h)
d1712 2
a1713 1
	$(language_h) $(expression_h) $(objfiles_h) $(symfile_h)
d2098 2
a2099 1
	$(defs_h) $(gdbcmd_h) $(expression_h) $(readline_headers)
@


1.163
log
@	* rs6000-nat.c (set_host_arch): Do not switch to a new architecture
	if it already matches the current architecture from the exec file.
	Include arch-utils.h for gdbarch_info_init prototype.
	* Makefile.in (rs6000-nat.o): Update dependencies.
@
text
@d606 1
a606 1
		gdbarch.h ui-file.h
@


1.163.2.1
log
@Add support for AVR target.
@
text
@a1171 1
	avr-tdep.c \
a1257 3

avr-tdep.o: avr-tdep.c $(defs_h) $(gdbcmd_h) $(gdbcore_h) $(inferior_h) \
	$(symfile_h) $(regcache_h) $(arch_utils_h)
@


1.163.2.2
log
@* Makefile.in (objfiles_h): Add $(bcache_h).
* objfiles.h: Include "bcache.h".

* Makefile.in (symtab_h): Remove $(bcache_h).
* symtab.h: Do not include "bcache.h".
@
text
@d627 1
a627 1
objfiles_h =	objfiles.h $(bcache_h)
d638 1
a638 1
symtab_h =	symtab.h
@


1.163.2.3
log
@* Makefile.in (x86-64-tdep.o): Add $(objfiles_h).
* x86-64-tdep.c: Include "objfiles.h".
(x86_64_gdbarch_init): Set in_solib_call_trampoline to
in_plt_section.  From 2002-07-18 Michal Ludvig <mludvig@@suse.cz>.
@
text
@d2138 3
a2140 3
x86-64-tdep.o : x86-64-tdep.c $(defs_h) $(inferior_h) $(gdbcore_h) \
	$(gdbcmd_h) $(arch_utils_h) $(regcache_h) $(symfile_h) x86-64-tdep.h \
	i386-tdep.h $(dwarf2cfi_h) gdb_assert.h $(objfiles_h)
@


1.162
log
@* Makefile.in (linux-thread.o): Delete target.
* linux-thread.c: Delete file.
@
text
@d1972 1
a1972 1
	$(gdb_stabs_h) $(regcache_h)
@


1.161
log
@From 2002-02-19 Paul Eggert <eggert@@twinsun.com>:
* Makefile.in (VER): Change "head -1" to "sed q", since POSIX
1003.1-2001 no longer allows "head -1".
* gdb/Makefile.in (version.c): Likewise.
* gdb/doc/Makefile.in (GDBvn.texi): Likewise.
* gdb/CONTRIBUTE: Change "diff -c3" to "diff -c", which is
equivalent.  POSIX 1003.1-2001 no longer allows "diff -c3".
@
text
@a1854 3
linux-thread.o: linux-thread.c $(breakpoint_h) $(gdbcmd_h) gdb_wait.h \
	$(gdbthread_h) $(gdbcore_h) $(inferior_h) $(target_h) $(defs_h)

@


1.160
log
@* Makefile.in (armnbsd-nat.o): Update dependencies.
* armnbsd-nat.c (supply_gregset): New function.  Common code to
supply the integer register set.
(supply_fparegset): New function.  Similar for FPA registers.
(fetch_regs, fetch_fp_regs): Use them.
(fetch_core_registers): Likewise.
(fetch_elfcore_registers): New function.
(arm_netbsd_elfcore_fns): New core-file type specification.
(_initialize_arm_netbsd_nat): Register it.
@
text
@d1046 1
a1046 1
	echo 'const char version[] = "'"`head -1 ${srcdir}/version.in`"'";' >> version.c-tmp
@


1.159
log
@* arm-tdep.h (enum arm_abi): New enum.
(struct gdbarch_tdep): New structure.
(LOWEST_PC): Provide a default.
(arm_gdbarch_register_os_abi): Declare new function.
* arm-tdep.c (arm_abi_names): New array.
(process_note_abi_tag_sections): New function.
(get_elfosabi): New function.
(arm_gdbarch_register_os_abi): New function.
(arm_gdbarch_init): Try to determine the ABI of the inferior.  If
support for that ABI has been built in, then call the appropriate
configuration routine.  Use gdbarch_num_regs() to get the number
of registers.
(arm_dump_tdep): New function.
(arm_init_abi_eabi_v1, arm_init_abi_eabi_v2, arm_init_abi_apcs): New
place-holder functions.
(_initialize_arm_tdep): Register them.
* config/arm/tm-arm.h (LOWEST_PC): Delete.

* armnbsd-tdep.c: New file.
* Makefile.in (armnbsd-tdep.o): Add dependencies.
* config/arm/nbsd.mt (TDEPFILES): Add it.
* config/arm/tm-nbsd.h (LOWEST_PC): Delete.

* armnbsd-nat.c: Include regcache.h.
* Makefile.in (armnbsd-nat.o): Update dependency list.

* arm-tdep.c (arm_get_next_pc): Use printf_filtered for error message.
@
text
@d1254 2
a1255 1
armnbsd-nat.o: armnbsd-nat.c $(defs_h) arm-tdep.h $(inferior_h) $(regcache_h)
@


1.158
log
@2002-02-13  Elena Zannoni  <ezannoni@@redhat.com>

	* linux-proc.c: Add include of regcache.h.
	* Makefile.in (linux-proc.o): Add dependency on regcache.h.
@
text
@d1171 1
d1251 2
a1252 1
	$(BFD_SRC)/elf-bfd.h $(INCLUDE_DIR)/coff/internal.h 
d1254 3
a1256 1
armnbsd-nat.o: armnbsd-nat.c $(defs_h) arm-tdep.h
@


1.157
log
@Hmm, this should have been commited along with:

* arm-tdep.h: New file.
* arm-tdep.c: Include arm-tdep.h.
(arm_addr_bits_remove, arm_smash_text_address, arm_saved_pc_after_call)
(arm_skip_prologue, arm_call_dummy_words, arm_fix_call_dummy)
(arm_print_float_info, arm_register_type, convert_to_extended)
(arm_elf_make_msymbols_special, arm_coff_make_msymbol_special)
(arm_extract_return_value, arm_register_name): Make static.
(arm_software_single_step): Similarly.  Fix types in declaration.
(arm_register_byte, arm_register_raw_size, arm_register_virtual_size)
(arm_store_return_value, arm_store_struct_return): New functions.
(arm_gdbarch_init): Register the above functions.  Also register
call_dummy_start_offset, sizeof_call_dummy_words,
function_start_offset, inner_than, decr_pc_after_break, fp_regnum,
sp_regnum, pc_regnum, register_bytes, num_regs, max_register_raw_size,
max_register_virtual_size, register_size.  Set up
prologue_cache.saved_regs here, rather than ...
(_initialize_arm_tdep): ... here.
* config/arm/tm-arm.h (struct type, struct value): Delete forward
declarations.
(arm_addr_bits_remove, arm_smash_text_address, arm_saved_pc_after_call)
(arm_skip_prologue, arm_call_dummy_words, arm_fix_call_dummy)
(arm_print_float_info, arm_register_type, convert_to_extended)
(arm_elf_make_msymbols_special, arm_coff_make_msymbol_special)
(arm_extract_return_value, arm_register_name): Delete declarations.
(SMASH_TEXT_ADDRESS, ADDR_BITS_REMOVE, FUNCTION_START_OFFSET)
(SKIP_PROLOGUE, SAVED_PC_AFTER_CALL, INNER_THAN, BREAKPOINT_FROM_PC)
(DECR_PC_AFTER_BREAK, PRINT_FLOAT_INFO, REGISTER_SIZE, NUM_REGS)
(REGISTER_NAME, REGISTER_BYTES, REGISTER_BYTE, REGISTER_RAW_SIZE)
(REGISTER_VIRTUAL_SIZE, MAX_REGISTER_RAW_SIZE)
(MAX_REGISTER_VIRTUAL_SIZE, REGISTER_VIRTUAL_TYPE, STORE_STRUCT_RETURN)
(EXTRACT_RETURN_VALUE, STORE_RETURN_VALUE, CALL_DUMMY_WORDS)
(SIZEOF_CALL_DUMMY_WORDS, CALL_DUMMY_START_OFFSET, FIX_CALL_DUMMY)
(SOFTWARE_SINGLE_STEP_P, SOFTWARE_SINGLE_STEP)
(ELF_MAKE_MSYMBOL_SPECIAL, COFF_MAKE_MSYMBOL_SPECIAL) Delete.
(arm_pc_is_thumb, arm_pc_is_thumb_dummy, thumb_get_next_pc)
(arm_get_next_pc): No-longer static -- these are needed by the RDI
interface.
* arm-linux-nat.c arm-linux-tdep.c armnbsd-nat.c: Include arm-tdep.h.
* remote-rdi.c remote-rdp.c: Likewise.
* Makefile.in (arm-linux-nat.o, arm-linux-tdep.o arm-tdep.o)
(armnbsd-nat.o, remote-rdi.o, remote_rdp.o): Update dependencies.
* config/arm/tm-nbsd.h (SOFTWARE_SINGLE_STEP_P): Delete bogus
definition.

* arm-tdep.h (ARM_A1_REGNUM, ARM_A4_REGNUM, ARM_AP_REGNUM)
(ARM_SP_REGNUM, ARM_LR_REGNUM, ARM_PC_REGNUM, ARM_F0_REGNUM)
(ARM_F3_REGNUM, ARM_F7_REGNUM, ARM_FPS_REGNUM, ARM_PS_REGNUM): Renamed
from non-ARM_ prefixed definitions.
* arm-tdep.c armnbsd-nat.c arm-linux-nat.c arm-linux-tdep.c: Update
all uses of above.
* remote-rdi.c remote-rdp.c: Likewise.
* arm-linux-nat.c (ARM_CPSR_REGNUM): Renamed from CPSR_REGNUM.
@
text
@d1336 1
a1336 1
	$(gdbcore_h) $(gdbthread_h) $(BFD_SRC)/elf-bfd.h 
@


1.156
log
@* Makefile.in (SUBDIR_CLI_INITS): Set to SUBDIR_CLI_SRCS.
(SUBDIR_MI_INITS): Set to SUBDIR_MI_SRCS.
@
text
@d1242 1
a1242 1
	$(gdb_string_h) $(regcache_h)
d1245 1
a1245 1
	$(gdbtypes_h) $(floatformat_h) $(regcache_h) $(doublest_h)
d1247 4
a1250 2
arm-tdep.o: arm-tdep.c $(gdbcmd_h) $(gdbcore_h) $(inferior_h) $(defs_h) \
	$(gdbcore_h) $(regcache_h) $(doublest_h) $(value_h)
d1252 1
a1252 1
armnbsd-nat.o: armnbsd-nat.c $(defs_h)
d1871 1
a1871 1
	$(inferior_h) $(gdb_string_h) $(completer_h)
d1884 1
a1884 1
	$(inferior_h) $(gdb_string_h)
@


1.155
log
@* Makefile.in (memattr.o): Add missing dependencies rule.
@
text
@d145 2
a146 1
SUBDIR_CLI_INITS =
d170 1
a170 1
	mi/mi-cmds.c mi/mi-parse.c mi/mi-main.c mi/mi-out.c
@


1.154
log
@	* breakpoint.c (break_at_finish_command): Really export.
	(break_at_finish_at_depth_command): Ditto.
	(tbreak_at_finish_command): Ditto.
	* hppa-tdep.c: Include completer.h.
	* Makefile.in (hppa-tdep.o): Add dependency on $(completer_h).
	(COMMON_OBS): Remove duplicate ui-file.o, frame.o, doublest.o.
@
text
@d1730 3
@


1.153
log
@2002-01-23  Elena Zannoni  <ezannoni@@redhat.com>

        * Makefile.in (hpread_h): Delete.
        (HFILES_NO_SRCDIR): Remove hpread.h.
        (ALLDEPFILES): Remove hp-psymtab-read.c and hp-symtab-read.c.
        (hpread.o): Update dependencies.
        (hp-psymtab-read.o, hp-symtab-read.o): Remove.

        * hp-psymtab-read.c: Remove file.
        * hp-symtab-read.c: Remove file.
        * hpread.h: Remove file.

        * hpread.c: Merge all contents of hp-psymtab-read.c,
        hp-symtab-read.c and hpread.h into this file, as it was prior to
        January 1999.

        * config/pa/hpux11w.mh, config/pa/hpux11.mh,
        config/pa/hpux1020.mh, config/pa/hppaosf.mh,
        config/pa/hppahpux.mh, config/pa/hppabsd.mh (NATDEPFILES):
        Remove hp-psymtab-read.o and hp-symtab-read.o, add hpread.o.
@
text
@a723 2
	ui-file.o \
	frame.o doublest.o \
d1541 2
a1542 1
	$(inferior_h) $(objfiles_h) $(symfile_h) $(target_h) $(regcache_h)
@


1.152
log
@2002-01-20  Jiri Smid  <smid@@suse.cz>

	* config/i386/x86-64linux.mh (NATDEPFILES): x86-64-nat.o removed.
	* x86-64-linux-nat.c (x86_64_register_u_addr): New function.
	* config/i386/nm-x86-64.h (ATTACH_LWP): Removed.
	* Makefile.in (x86-64-tdep.o, x86-64-linux-tdep.o,
	x86-64-linux-nat.o): Fix dependencies.
@
text
@a619 4
hpread_h =	hpread.h $(defs_h) $(bfd_h) $(gdb_string_h) $(hp_symtab_h) \
		$(syms_h) $(symtab_h) $(symfile_h) $(objfiles_h) \
		$(buildsym_h) $(complaints_h) $(gdb_stabs_h) $(gdbtypes_h) \
		$(demangle_h)
d659 1
a659 1
	gdb-stabs.h hpread.h $(inferior_h) language.h minimon.h monitor.h \
d1176 1
a1176 2
	hp300ux-nat.c hppa-tdep.c hppab-nat.c hppah-nat.c \
        hp-psymtab-read.c hp-symtab-read.c \
a1797 1
# FIXME!!!
d1799 3
a1801 10
	$(gdb_stabs_h) $(objfiles_h) $(symfile_h) $(symtab_h) $(gdb_string_h)

hp-psymtab-read.o: hp-psymtab-read.c $(hpread_h) $(bfd_h) $(buildsym_h) \
	$(complaints_h) $(defs_h) $(gdb_stabs_h) $(objfiles_h) $(symfile_h) \
	$(symtab_h) $(gdb_string_h)
 
hp-symtab-read.o: hp-symtab-read.c $(hpread_h) $(bfd_h) $(buildsym_h) \
	$(complaints_h) $(defs_h) $(gdb_stabs_h) $(objfiles_h) $(symfile_h) \
	$(symtab_h) $(gdb_string_h)
# END FIXME!!!  
@


1.151
log
@Zap empty or unused xm-*.h files.
@
text
@d2138 1
a2138 1
	$(gdbcore_h) $(regcache_h) x86-64-tdep.h i386-tdep.h
d2140 3
a2142 3
x86-64-tdep.o : x86-64-tdep.c $(defs_h) $(inferior_h) $(gdbcore_h) \
	$(gdbcmd_h) $(arch_utils_h) $(regcache_h) $(symfile_h) x86-64-tdep.h \
	i386-tdep.h $(value_h)
d2144 3
a2146 2
x86-64-linux-tdep.o : x86-64-linux-tdep.c $(defs_h) $(inferior_h) \
	$(gdbcore_h) $(regcache_h) i387-nat.h x86-64-tdep.h i386-tdep.h
@


1.150
log
@Remove XDEPFILES from GDB.
@
text
@a934 1
xm-sun4os4.h: xm-sparc.h
@


1.149
log
@2002-01-10  Michael Snyder  <msnyder@@redhat.com>

	* Makefile.in: Add rules for gcore.o and linux-proc.o.
	* gcore.c: Include cli/cli-decode.h instead of command.h.
@
text
@d694 1
a694 1
DEPFILES = $(TDEPFILES) $(XDEPFILES) $(SER_HARDWIRE) $(NATDEPFILES) \
@


1.148
log
@2002-01-07  Michael Snyder  <msnyder@@redhat.com>

	* linux-proc.c: New file.  Implement child_pid_to_exec_file,
	so that attaching to a pid will automatically read the process's
	symbol file and shlibs.
	* Makefile.in: Add rule for linux-proc.o.
	* config/nm-linux.h: Define CHILD_PID_TO_EXEC_FILE.
	* config/alpha/alpha-linux.mh: Add linux-proc.o to NATDEPFILES.
	* config/arm/linux.mh: Ditto.
	* config/i386/linux.mh: Ditto.
	* config/i386/x86-64linux.mh: Ditto.
	* config/ia64/linux.mh: Ditto.
	* config/m68k/linux.mh: Ditto.
	* config/mips/linux.mh: Ditto.
	* config/powerpc/linux.mh: Ditto.
	* config/sparc/linux.mh: Ditto.
@
text
@d2 1
a2 1
# 1999, 2000, 2001 Free Software Foundation, Inc.
d1336 6
@


1.147
log
@* MAINTAINERS: Mark a29k target as obsolete.
* Makefile.in (a29k-tdep.o, remote-adapt.o, remote-eb.o)
(remote-mm.o, remote-udi.o): Obsolete.  Remove references in
comments.
* NEWS: Note that a29k targets are obsolete.
* a29k-tdep.c: Mark as obsolete.
* configure.tgt: Mark a29k-*-aout*, a29k-*-coff*, a29k-*-elf*,
a29k-*-ebmon*, a29k-*-kern*, a29k-*-none*, a29k-*-udi* and
a29k-*-vxworks* targets as obsolete.
* remote-adapt.c: Obsolete.
* remote-eb.c: Obsolete.
* remote-mm.c: Obsolete.
* remote-udi.c: Obsolete.
* config/a29k/a29k-udi.mt: Obsolete.
* config/a29k/a29k.mt: Obsolete.
* config/a29k/tm-a29k.h: Obsolete.
* config/a29k/tm-vx29k.h: Obsolete.
* config/a29k/vx29k.mt: Obsolete.
@
text
@d1851 2
@


1.146
log
@Remove obsolete MacOS support.
@
text
@d812 1
a812 1
# of a given name (remote-udi.o -> _initialize_remote_udi, etc.).
d1233 2
a1234 2
a29k-tdep.o: a29k-tdep.c $(gdbcmd_h) $(gdbcore_h) $(inferior_h) $(defs_h) \
	$(regcache_h)
d1864 2
a1865 2
remote-adapt.o: remote-adapt.c $(defs_h) $(gdbcore_h) \
	$(inferior_h) $(target_h) $(terminal_h) $(gdb_string_h) $(regcache_h)
d1894 3
a1896 3
remote-eb.o: remote-eb.c $(srcdir)/config/a29k/tm-a29k.h \
	$(defs_h) $(gdbcore_h) $(inferior_h) $(symfile_h) $(target_h) \
	$(terminal_h) $(gdb_string_h) $(regcache_h)
d1912 2
a1913 2
remote-mm.o: remote-mm.c $(bfd_h) $(defs_h) $(inferior_h) \
	minimon.h $(target_h) $(terminal_h) $(gdb_string_h) $(regcache_h)
d1935 3
a1937 3
remote-udi.o: remote-udi.c $(bfd_h) $(defs_h) $(gdbcmd_h) \
	$(inferior_h) $(target_h) $(terminal_h) $(udiheaders) $(gdb_string_h) \
	$(regcache_h)
@


1.145
log
@2001-12-29  Elena Zannoni  <ezannoni@@redhat.com>

	* Makefile.in (rs6000-tdep.o): Add dependency on parser-defs.h.

	* rs6000-tdep.c: Include parser-defs.h.
	(rs6000_register_virtual_type): Rewrite, including handling of
	AltiVec regs type.
	(altivec_register_p): New function.
	(rs6000_do_altivec_registers): New function.
	(rs6000_altivec_registers_info): New function.
	(rs6000_do_registers_info): New function.
	(R16): Define.
	(PPC_ALTIVEC_REGS): Define.
	(registers_powerpc): Add AltiVec registers.
	(registers_7400): Define.
	(variants): Add 7400 machine.
	(rs6000_gdbarch_init): Set the numbers of AltiVec registers.
	Initialize gdbarch_do)_registers_info.
	(rs6000_info_power_command): New function.
	(info_power_cmdlist): New static variable.
	(_initialize_rs6000_tdep): Add new 'info powerpc altivec' command.

	* ppc-tdep.h (struct gdbarch_tdep): Add altivec regnum fields.
	(altivec_register_p): Export.
@
text
@a1992 2
# OBSOLETE ser-mac.o: ser-mac.c $(defs_h) $(serial_h) 

@


1.144
log
@* Makefile.in (c-exp.tab.o): Delete duplicate build rule.  Fix
dependency list on remaining build rule.
@
text
@d1974 1
a1974 1
	$(target_h) ppc-tdep.h $(regcache_h) $(value_h)
@


1.143
log
@2001-12-17  Ben Harris  <bjh21@@netbsd.org>

	* armbsd-nat.c: Remove file, renamed to armnbsd-nat.c.
	* armnbsd-nat.c: New file, renamed from armbsd-nat.c.
	* Makefile.in: Rename armbsd-nat.c to armnbsd-nat.c.
	* config/arm/nbsd.mh: Likewise.
@
text
@a1057 4
c-exp.tab.o: c-exp.tab.c $(defs_h) $(gdb_string_h) $(expression_h) \
	$(value_h) $(parser_defs_h) $(language_h) c-lang.h $(bfd_h) \
	$(symfile_h) $(objfiles_h)

d2175 3
a2177 3
c-exp.tab.o: c-exp.tab.c $(c_lang_h) $(defs_h) $(expression_h) \
	$(gdbtypes_h) $(language_h) $(parser_defs_h) $(symtab_h) $(value_h) \
	$(bfd_h) $(objfiles_h) $(symfile_h)
@


1.142
log
@2001-12-17  Fernando Nasser  <fnasser@@redhat.com>

	From Richard Earnshaw <rearnsha@@arm.com>:
        * config/arm/nbsd.mh, config/arm/nbsd.mt, config/arm/tm-nbsd.h,
        config/arm/nm-nbsd.h, config/arm/xm-nbsd.h: New files.
        * armbsd-nat.c: New file.
        * Makefile.in: Build it.
        * configure.host, configure.tgt: Support NetBSD/arm.
@
text
@d1180 1
a1180 1
	arm-linux-nat.c arm-linux-tdep.c arm-tdep.c armbsd-nat.c \
d1261 1
a1261 1
armbsd-nat.o: armbsd-nat.c $(defs_h)
@


1.141
log
@	* Makefile.in: Add support for xstormy16.
	* configure.tgt: Ditto.
	* xstormy16-tdep.c: New file.
	* config/xstormy16/xstormy16.mt: New file.
@
text
@d1180 1
a1180 1
	arm-linux-nat.c arm-linux-tdep.c arm-tdep.c \
d1260 2
@


1.140
log
@* Makefile.in (c-exp.tab.o): Add missing dependencies.
@
text
@d1224 3
a1226 1
	xcoffread.c xcoffsolib.c z8k-tdep.c
d2046 3
@


1.139
log
@* Makefile.in (c_lang_h): New variable.  Use it in dependency
lists, instead of `c-lang.h' itself.
@
text
@d1058 4
a1070 1
c-exp.tab.o: c-exp.tab.c
@


1.138
log
@        * Makefile.in (cp-valprint.o): Add dependency on $(cp_abi_h).
@
text
@d591 1
d1269 1
a1269 1
c-lang.o: c-lang.c c-lang.h $(defs_h) $(expression_h) $(gdbtypes_h) \
d1272 1
a1272 1
c-typeprint.o: c-typeprint.c c-lang.h $(defs_h) $(expression_h) \
d1303 1
a1303 1
	$(language_h) $(symtab_h) $(valprint_h) $(value_h) c-lang.h
d1635 1
a1635 1
	$(objfiles_h) $(gdb_string_h) $(value_h) c-lang.h jv-lang.h \
d1640 1
a1640 1
	$(typeprint_h) c-lang.h $(cp_abi_h)
d1644 1
a1644 1
	$(language_h) jv-lang.h c-lang.h gdbcore.h $(annotate_h)
d1979 1
a1979 1
scm-exp.o: $(defs_h) $(value_h) $(parser_defs_h) $(language_h) c-lang.h \
d1982 1
a1982 1
scm-lang.o: $(defs_h) $(value_h) $(parser_defs_h) $(language_h) c-lang.h \
d2169 1
a2169 1
c-exp.tab.o: c-exp.tab.c c-lang.h $(defs_h) $(expression_h) \
@


1.137
log
@* dwarf2cfi.c: New file.
* dwarf2cfi.h: New file.
* dwarf2read.c (dwarf_frame_offset, dwarf_frame_size): New variables.
(dwarf_eh_frame_offset, dwarf_eh_frame_size): New variables.
(dwarf2_read_section): Change to non static.
(dwarf2_locate_sections): Add .debug_frame and .eh_frame section
recognition.
(FRAME_SECTION, EH_FRAME_SECTION): New define.
* elfread.c (elf_symfile_read): Add call of frame informations build.
* frame.h (frame_info): Add pointer to unwind_context.
* symfile.h (dwarf2_build_frame_info): Add declaration.
* gdbarch.sh (DWARF2_BUILD_FRAME_INFO): Add.
* gdbarch.h, gdbarch.c: Regenerate.
* Makefile.in: Add dwarf2cfi_h, dwarf2cfi.o
* x86-64-tdep.c (i386_gdbarch_init): Initialize target vector to
use debug frame info.
@
text
@d1336 1
a1336 1
	$(gdbtypes_h) $(symtab_h) $(value_h) $(gdb_string_h)
@


1.136
log
@Zap sony news (m68k) and ISI (m68k) targets.
@
text
@d606 1
d1358 3
@


1.135
log
@Zap Sun's i386i.
@
text
@a929 2
# OBSOLETE tm-news.h: tm-m68k.h
# OBSOLETE tm-isi.h: tm-m68k.h
a930 1
# OBSOLETE xm-news1000.h: xm-news.h
d1197 1
a1197 1
	mips-tdep.c mipsm3-nat.c mipsv4-nat.c news-xdep.c \
a1627 2
# OBSOLETE isi-xdep.o: isi-xdep.c

a1751 2

news-xdep.o: news-xdep.c
@


1.134
log
@Zap all but ns32k-netbsd NS32k targets and hosts.
@
text
@a2064 2
# OBSOLETE sun386-nat.o: sun386-nat.c $(defs_h) $(inferior_h) $(gdbcore_h) $(regcache_h)

@


1.133
log
@Zap a29k.
@
text
@a1771 2
# OBSOLETE ns32km3-nat.o: ns32km3-nat.c $(defs_h) $(inferior_h) $(regcache_h)

a2107 6

# OBSOLETE ultra3-nat.o: ultra3-nat.c $(defs_h) $(gdbcore_h) $(inferior_h) $(regcache_h)

# OBSOLETE ultra3-xdep.o: ultra3-xdep.c $(defs_h) $(gdbcore_h) $(inferior_h)

# OBSOLETE umax-xdep.o: umax-xdep.c $(defs_h) $(gdbcore_h) $(inferior_h) $(regcache_h)
@


1.132
log
@Delete tic80 target.
@
text
@a2137 2
w65-tdep.o : w65-tdep.c $(gdbcore_h) $(regcache_h)

@


1.131
log
@2001-11-29  Elena Zannoni  <ezannoni@@redhat.com>

	* Makefile.in (ppc-linux-nat.o): Add dependency on ppc-tdep.h.

	* ppc-tdep.h (PPC_GPLAST_REGNUM): Define.

	* ppc-linux-nat.c: Include ppc-tdep.h.
	(ppc_register_u_addr): Don't use the static array regmap[],
	dynamically define the mapping instead.
	(supply_gregset): Ditto.
	(fill_gregset): Ditto.
	(COPY_REG): Delete macro defintion.
	(regmap): Delete array.
@
text
@a2090 2
tic80-tdep.o: tic80-tdep.c $(defs_h) $(regcache_h)

@


1.130
log
@Zap files in gdb/gdbserver/
@
text
@d1821 1
a1821 1
	$(inferior_h) $(target_h) $(regcache_h)
@


1.129
log
@        * Makefile.in: Add mips-linux-nat.c, mips-linux-tdep.c,
        and sparc-linux-nat.c to ALLDEPFILES.  Add dependencies.
        * config/sparc/linux.mh: Add sparc-linux-nat.o to NATDEPFILES.
        * sparc-linux-nat.c: New file, from Mark Kettenis.
@
text
@d973 2
d977 3
@


1.128
log
@2001-11-16  Ben Harris  <bjh21@@netbsd.org>

	* Makefile.in (os9kread.o): Replace $< with autoconf-approved
	$(srcdir)/....
	(procfs.o): Ditto.
	(z8k-tdep.o): Ditto.
@
text
@d1193 1
d1210 2
a1211 1
	sh-tdep.c solib.c solib-svr4.c solib-sunos.c sparc-nat.c \
d1726 5
d2029 2
@


1.127
log
@2001-11-14  Michael Snyder  <msnyder@@redhat.com>

	* Makefile.in (doublest.o): Add dependency on gdbtypes.h.
@
text
@d1716 2
a1717 1
	$(CC) -c $(INTERNAL_WARN_CFLAGS) $(NO_WERROR_CFLAGS) $<
d1827 1
a1827 1
	$(CC) -c $(INTERNAL_WARN_CFLAGS) $(NO_WERROR_CFLAGS) $<
d2168 2
a2169 1
	$(CC) -c $(INTERNAL_WARN_CFLAGS) $(NO_WERROR_CFLAGS) $<
@


1.126
log
@2001-11-07  Elena Zannoni  <ezannoni@@redhat.com>

	* dbxread.c (set_namestring): New function, replacing the
	SET_NAMESTRING macro.
	(SET_NAMESTRING, CUR_SYMBOL_TYPE, CUR_SYMBOL_VALUE,
	CUR_SYMBOL_STRX, DBXREAD_ONLY, START_PSYMTAB, END_PSYMTAB): Delete
	definitions.
	(read_dbx_symtab): Don't include partial-stab.h any more. Don't
	reuse code in partial-stab.h, include the code directly, instead.

        * Makefile.in (dbxread.o): Remove dependency on partial-stab.h.
	(HFILES_NO_SRCDIR): Remove partial-stab.h.
@
text
@d1273 1
a1273 1
doublest.o: doublest.c $(defs_h) $(doublest_h) $(floatformat_h) \
@


1.125
log
@Whoops, forgot to commit this yesterday:

2001-11-06  Elena Zannoni  <ezannoni@@redhat.com>

        * mdebugread.c (CUR_SYMBOL_TYPE, CUR_SYMBOL_VALUE, START_PSYMTAB,
        END_PSYMTAB, SET_NAMESTRING, HANDLE_RBRAC): Delete definitions.
        (parse_partial_symbols): Don't include partial-stab.h any
        more. Don't reuse code in partial-stab.h, include the code
        directly, instead. Simplify code from partial-stab.h eliminating
        ifdef DBXREAD_ONLY code.

        * Makefile.in (mdebugread.o): Remove dependency on partial-stab.h.
@
text
@d662 1
a662 1
	objfiles.h parser-defs.h partial-stab.h serial.h solib.h \
d1338 1
a1338 1
	$(gdbtypes_h) $(language_h) $(objfiles_h) partial-stab.h \
@


1.124
log
@2001-11-06  Elena Zannoni <ezannoni@@redhat.com>

        * mdebugread.c (CUR_SYMBOL_TYPE, CUR_SYMBOL_VALUE, START_PSYMTAB,
        END_PSYMTAB, SET_NAMESTRING, HANDLE_RBRAC): Delete definitions.
        (parse_partial_symbols): Don't include partial-stab.h any
        more. Don't reuse code in partial-stab.h, include the code
        directly, instead. Simplify code from partial-stab.h eliminating
        ifdef DBXREAD_ONLY code.

        * Makefile.in (mdebugread.o): Remove dependency on partial-stab.h.
@
text
@d1705 1
a1705 1
	$(language_h) partial-stab.h $(objfiles_h) $(stabsread_h) \
@


1.123
log
@* Makefile.in (ALLDEPFILES): Add s390-tdep.c and s390-nat.c.
(s390-tdep.o, s390-nat.o): New rules.
@
text
@d1705 1
a1705 1
	$(language_h) $(objfiles_h) partial-stab.h $(stabsread_h) \
@


1.122
log
@* Makefile.in (ALLDEPFILES): Add i387-nat.c.
(i387-nat.o): Add dependencies.
@
text
@d1207 1
d1963 6
@


1.121
log
@Update makefile.in dependencies.  Add header wrappers.
@
text
@d1183 1
a1183 1
	i387-tdep.c \
d1583 3
@


1.120
log
@Add explicit #include of "value.h".
@
text
@d588 1
d590 1
d599 1
d603 2
a604 1
defs_h =	defs.h $(xm_h) $(tm_h) $(nm_h) config.status config.h gdbarch.h ui-file.h
d611 2
d618 4
d624 2
d627 2
d633 5
d639 1
a639 1
symtab_h =	symtab.h bcache.h
d641 1
d644 1
d646 1
d648 1
a648 1
varobj_h =      varobj.h
d650 2
d1235 1
a1235 1
	$(inferior_h) $(symtab_h) $(dis-asm.h) $(gdb_string_h) linespec.h \
d1249 1
a1249 1
bcache.o: bcache.c bcache.h $(defs_h)
d1252 1
a1252 1
	objfiles.h $(symfile_h) $(target_h) $(regcache_h)
d1255 3
a1257 2
	$(inferior_h) language.h $(target_h) $(gdbthread_h) $(gdb_string_h) \
	gdb-events.h linespec.h $(ui_out_h) $(completer_h) $(gdb_h)
d1259 2
a1260 2
buildsym.o: buildsym.c $(bfd_h) buildsym.h complaints.h $(defs_h) \
	objfiles.h $(symfile_h) $(symtab_h) $(gdb_string_h)
d1263 1
a1263 1
	language.h $(parser_defs_h) $(symtab_h)
d1266 2
a1267 2
	$(gdbcmd_h) $(gdbcore_h) $(gdbtypes_h) language.h $(symtab_h) \
	$(target_h) typeprint.h $(value_h) $(gdb_string_h) $(cp_abi_h)
d1270 1
a1270 1
	language.h $(symtab_h) valprint.h $(value_h) $(cp_abi_h)
d1276 1
a1276 1
	language.h $(parser_defs_h) $(symtab_h) $(gdb_string_h)
d1279 2
a1280 2
	$(gdbcmd_h) $(gdbcore_h) $(gdbtypes_h) language.h $(symtab_h) \
	$(target_h) typeprint.h $(value_h) $(gdb_string_h)
d1283 1
a1283 1
	language.h $(symtab_h) valprint.h $(value_h) $(gdb_string_h)
d1285 2
a1286 2
ch-exp.o: ch-exp.c ch-lang.h $(defs_h) language.h $(parser_defs_h) $(bfd_h) \
	$(symfile_h) objfiles.h $(value_h)
d1289 1
a1289 1
	language.h $(parser_defs_h) $(symtab_h)
d1292 2
a1293 2
	$(gdbcmd_h) $(gdbcore_h) $(gdbtypes_h) language.h $(symtab_h) \
	$(target_h) $(value_h) typeprint.h $(gdb_string_h)
d1296 1
a1296 1
	language.h $(symtab_h) valprint.h $(value_h) c-lang.h
d1300 3
a1302 3
coffread.o: coffread.c $(bfd_h) $(breakpoint_h) buildsym.h \
	complaints.h $(defs_h) $(expression_h) $(gdbtypes_h) objfiles.h \
	$(symfile_h) $(symtab_h) gdb-stabs.h stabsread.h $(target_h) \
d1305 1
a1305 1
complaints.o: complaints.c complaints.h $(defs_h) $(gdbcmd_h)
d1321 2
a1322 2
	$(inferior_h) $(target_h) language.h $(gdb_string_h) $(completer_h) \
	$(symfile_h)
d1335 5
a1339 4
dbxread.o: dbxread.c $(breakpoint_h) buildsym.h $(command_h) \
	complaints.h $(defs_h) $(expression_h) gdb-stabs.h $(gdbcore_h) \
	$(gdbtypes_h) language.h objfiles.h partial-stab.h stabsread.h \
	$(symfile_h) $(symtab_h) $(target_h) $(gdb_string_h) $(cp_abi_h)
d1345 3
a1347 3
dink32-rom.o: dink32-rom.c monitor.h $(bfd_h) gdb_wait.h $(defs_h) \
	$(gdbcmd_h) $(inferior_h) $(target_h) serial.h terminal.h $(symfile_h) \
	$(regcache_h)
d1353 7
a1359 7
dwarfread.o: dwarfread.c $(bfd_h) buildsym.h complaints.h $(defs_h) \
	$(expression_h) $(gdbtypes_h) language.h objfiles.h $(symfile_h) \
	$(symtab_h) $(gdb_string_h)

dwarf2read.o: dwarf2read.c $(bfd_h) buildsym.h $(defs_h) \
	$(expression_h) $(gdbtypes_h) language.h objfiles.h $(symfile_h) \
	$(symtab_h) $(gdb_string_h)
d1361 2
a1362 2
elfread.o: elfread.c $(bfd_h) buildsym.h complaints.h $(defs_h) \
	gdb-stabs.h objfiles.h $(symfile_h) $(symtab_h) $(gdb_string_h) \
d1368 1
a1368 1
	$(gdbtypes_h) language.h $(symtab_h) $(target_h) $(value_h) \
d1373 2
a1374 2
event-top.o: event-top.c top.h $(readline_headers) \
      $(defs_h) $(inferior_h) $(event_loop_h) $(event_top_h) terminal.h \
d1381 1
a1381 1
	$(target_h) language.h $(gdb_string_h) $(completer_h) $(value_h)
d1384 1
a1384 1
	language.h $(parser_defs_h) $(symtab_h) $(value_h)
d1395 1
a1395 1
	$(inferior_h) $(target_h) terminal.h $(gdbthread_h) $(gdb_string_h)
d1417 1
a1417 1
	$(bfd_h) $(symfile_h) objfiles.h $(target_h) $(gdb_string_h) \
d1436 2
a1437 2
	$(command_h) $(bfd_h) $(top_h) $(symfile_h) objfiles.h $(target_h) \
	$(gdb_string_h) $(tracepoint_h) source.h $(regcache_h)
d1446 2
a1447 1
	$(bfd_h) $(symfile_h) objfiles.h $(target_h) $(gdb_string_h) $(tracepoint_h)
d1464 1
a1464 1
	linespec.h
d1484 1
a1484 1
	$(gdb_string_h) $(target_h) objfiles.h $(regcache_h)
d1495 2
a1496 2
	language.h $(gdb_string_h) $(readline_headers) $(remote_h) linespec.h \
	$(regcache_h) $(completer_h)
d1503 3
a1505 3
gdbtypes.o: gdbtypes.c $(bfd_h) complaints.h $(defs_h) $(expression_h) \
	$(gdbtypes_h) language.h objfiles.h $(symfile_h) $(symtab_h) $(target_h) \
	$(value_h) $(gdb_string_h) wrapper.h $(cp_abi_h)
d1530 1
a1530 1
	$(inferior_h) objfiles.h $(symfile_h) $(target_h) $(regcache_h)
d1548 1
a1548 1
	language.h $(gdbcore_h) $(floatformat_h) $(target_h) $(regcache_h)
d1571 1
a1571 1
	$(inferior_h) language.h $(target_h)
d1574 1
a1574 1
	$(symtab_h) $(symfile_h) objfiles.h $(regcache_h)
d1582 1
a1582 1
	$(inferior_h) language.h $(regcache_h) $(doublest_h) i386-tdep.h
d1594 1
a1594 1
	$(arch_utils_h) $(floatformat_h) objfiles.h $(value_h) \
d1598 1
a1598 1
	$(inferior_h) $(target_h) language.h $(symfile_h) $(gdb_string_h) \
d1602 1
a1602 1
	$(target_h) terminal.h $(gdbthread_h) $(gdb_string_h)
d1613 1
a1613 1
	$(target_h) terminal.h $(command_h)
d1617 2
a1618 2
	$(symtab_h) $(symfile_h) objfiles.h $(command_h) $(frame_h) \
	gdb_regex.h language.h $(gdb_string_h) $(regcache_h)
d1623 3
a1625 2
	$(expression_h) $(parser_defs_h) language.h $(symfile_h) objfiles.h \
	$(gdb_string_h) $(value_h) c-lang.h jv-lang.h $(gdbcore_h)
d1629 1
a1629 1
	typeprint.h c-lang.h $(cp_abi_h)
d1632 2
a1633 2
	$(expression_h) $(value_h) $(demangle_h) valprint.h \
	language.h jv-lang.h c-lang.h gdbcore.h $(annotate_h)
d1635 2
a1636 1
kod.o: kod.c $(defs_h) $(command_h) $(gdbcmd_h) $(target_h) $(gdb_string_h) kod.h
d1641 1
a1641 1
	$(gdbcmd_h) $(gdbtypes_h) language.h $(parser_defs_h) $(symtab_h) \
d1648 1
a1648 1
	language.h m2-lang.h $(parser_defs_h) $(symtab_h)
d1651 2
a1652 2
	$(gdbcore_h) $(gdbtypes_h) language.h m2-lang.h $(symtab_h) $(target_h) \
	$(value_h) $(gdb_string_h)
d1655 1
a1655 1
	valprint.h m2-lang.h
d1657 2
a1658 2
m3-nat.o: m3-nat.c $(defs_h) $(inferior_h) $(value_h) language.h $(target_h) \
	gdb_wait.h $(gdbcmd_h) $(gdbcore_h) $(regcache_h)
d1661 1
a1661 1
	language.h $(parser_defs_h) $(symtab_h) $(gdb_string_h)
d1664 2
a1665 2
	$(gdbcmd_h) $(gdbcore_h) $(gdbtypes_h) language.h $(symtab_h) \
	$(target_h) typeprint.h $(value_h) $(gdb_string_h)
d1668 1
a1668 1
	language.h $(symtab_h) valprint.h $(value_h) $(gdb_string_h)
d1687 1
a1687 1
main.o: main.c top.h $(defs_h) $(gdb_string_h) $(event_loop_h) \
d1690 2
a1691 2
maint.o: maint.c $(defs_h) $(gdbcmd_h) $(gdbtypes_h) $(symtab_h) language.h \
	$(expression_h) objfiles.h $(symfile_h)
d1696 2
a1697 2
mcore-rom.o: mcore-rom.c $(defs_h) $(gdbcore_h) $(target_h) monitor.h \
	$(gdb_string_h) $(regcache_h) serial.h
d1699 4
a1702 4
mdebugread.o: mdebugread.c buildsym.h complaints.h $(bfd_h) $(defs_h) \
	$(expression_h) gdb-stabs.h $(gdbcore_h) $(gdbtypes_h) language.h \
	objfiles.h partial-stab.h stabsread.h $(symfile_h) $(symtab_h) \
	$(gdb_string_h)
d1708 4
a1711 4
os9kread.o: os9kread.c buildsym.h complaints.h $(bfd_h) $(defs_h) \
	        $(expression_h) gdb-stabs.h $(gdbcore_h) $(gdbtypes_h) \
		language.h objfiles.h stabsread.h $(symfile_h) $(symtab_h) \
		$(target_h) $(gdb_string_h)
d1716 1
a1716 1
minsyms.o: minsyms.c $(bfd_h) $(defs_h) objfiles.h $(symfile_h) \
d1723 1
a1723 1
	$(inferior_h) language.h objfiles.h $(symfile_h) $(gdb_string_h)
d1725 3
a1727 3
mipsread.o: mipsread.c buildsym.h complaints.h $(bfd_h) $(defs_h) \
	$(expression_h) gdb-stabs.h $(gdbcore_h) $(gdbtypes_h) language.h \
	objfiles.h stabsread.h $(symfile_h) $(symtab_h) \
d1737 3
a1739 2
monitor.o: monitor.c monitor.h $(bfd_h) $(defs_h) $(gdbcmd_h) \
	$(inferior_h) $(target_h) serial.h terminal.h $(gdb_string_h) $(regcache_h)
d1751 2
a1752 2
nlmread.o: nlmread.c $(bfd_h) buildsym.h complaints.h $(defs_h) \
	gdb-stabs.h objfiles.h $(symfile_h) $(symtab_h) stabsread.h \
d1764 1
a1764 1
objfiles.o: objfiles.c $(bfd_h) $(defs_h) objfiles.h $(symfile_h) \
d1767 2
a1768 2
solib-osf.o: solib-osf.c $(defs_h) $(inferior_h) $(symtab_h) objfiles.h \
	$(symfile_h) $(target_h) $(gdb_string_h) solist.h
d1770 2
a1771 2
somread.o: somread.c $(bfd_h) buildsym.h complaints.h $(defs_h) \
	gdb-stabs.h objfiles.h $(symfile_h) $(symtab_h) $(gdb_string_h)
d1783 2
a1784 2
hpread.o: hpread.c $(bfd_h) buildsym.h complaints.h $(defs_h) \
	gdb-stabs.h objfiles.h $(symfile_h) $(symtab_h) $(gdb_string_h)
d1786 3
a1788 2
hp-psymtab-read.o: hp-psymtab-read.c hpread.h $(bfd_h) buildsym.h complaints.h \
	$(defs_h) gdb-stabs.h objfiles.h $(symfile_h) $(symtab_h) $(gdb_string_h)
d1790 3
a1792 2
hp-symtab-read.o: hp-symtab-read.c hpread.h $(bfd_h) buildsym.h complaints.h \
	$(defs_h) gdb-stabs.h objfiles.h $(symfile_h) $(symtab_h) $(gdb_string_h)
d1796 2
a1797 2
	$(gdbtypes_h) language.h $(parser_defs_h) $(symtab_h) $(value_h) \
	$(gdb_string_h) linespec.h $(doublest_h)
d1801 1
a1801 1
	objfiles.h gdb-stabs.h serial.h ocd.h $(regcache_h)
d1809 3
a1811 2
ppcbug-rom.o: ppcbug-rom.c monitor.h $(bfd_h) gdb_wait.h $(defs_h) \
	$(gdbcmd_h) $(inferior_h) $(target_h) serial.h terminal.h $(regcache_h)
d1814 1
a1814 1
	$(gdbcmd_h) $(gdbcore_h) $(gdbtypes_h) language.h objfiles.h \
d1840 1
a1840 1
	objfiles.h $(target_h) $(regcache_h)
d1849 1
a1849 1
	$(inferior_h) $(target_h) terminal.h $(gdb_string_h) $(regcache_h)
d1852 1
a1852 1
      $(gdb_string_h) $(command_h) serial.h monitor.h $(remote_utils_h) \
d1871 3
a1873 3
remote-bug.o: remote-bug.c $(defs_h) $(gdbcore_h) serial.h \
	$(inferior_h) $(target_h) terminal.h $(remote_utils_h) $(gdb_string_h) \
	$(regcache_h)
d1876 1
a1876 1
	serial.h $(gdb_string_h) $(regcache_h)
d1879 2
a1880 2
	$(defs_h) $(gdbcore_h) $(inferior_h) $(symfile_h) $(target_h) terminal.h \
	$(gdb_string_h) $(regcache_h)
d1883 1
a1883 1
	$(inferior_h) $(remote_utils_h) terminal.h $(gdb_string_h) \
d1887 1
a1887 1
	$(inferior_h) serial.h $(target_h) terminal.h $(regcache_h)
d1890 1
a1890 1
	$(inferior_h) serial.h $(target_h) terminal.h $(regcache_h)
d1893 2
a1894 1
	$(gdbcore_h) $(inferior_h) serial.h $(symfile_h) $(target_h) $(regcache_h)
d1897 1
a1897 1
	minimon.h $(target_h) terminal.h $(gdb_string_h) $(regcache_h)
d1905 2
a1906 2
	$(command_h) monitor.h $(remote_utils_h) $(symtab_h) $(symfile_h) \
	objfiles.h gdb-stabs.h $(gdb_string_h) $(regcache_h)
d1909 2
a1910 2
	$(inferior_h) $(remote_utils_h) $(symfile_h) terminal.h $(gdb_string_h) \
	$(regcache_h)
d1913 1
a1913 1
	$(inferior_h) $(target_h) terminal.h $(gdb_string_h) \
d1916 1
a1916 1
remote-st.o: remote-st.c $(defs_h) $(gdbcore_h) serial.h \
d1920 1
a1920 1
	$(inferior_h) $(target_h) terminal.h $(udiheaders) $(gdb_string_h) \
d1923 1
a1923 1
remote-vx.o: remote-vx.c complaints.h $(defs_h) $(gdbcmd_h) \
d1926 1
a1926 1
	vx-share/xdr_rdb.h gdb-stabs.h objfiles.h $(symfile_h) $(bfd_h) \
d1929 1
a1929 1
remote-vx29k.o: remote-vx29k.c complaints.h $(defs_h) $(gdbcmd_h) \
d1935 2
a1936 2
	$(bfd_h) $(symfile_h) $(target_h) $(gdbcmd_h) objfiles.h \
	gdb-stabs.h $(dcache_h) serial.h $(regcache_h)
d1942 3
a1944 2
	$(inferior_h) $(remote_utils_h) $(symfile_h) terminal.h $(gdb_string_h) \
	$(event_loop_h) $(event_top_h) $(remote_h) $(inf_loop_h) $(value_h)
d1947 1
a1947 1
	$(inferior_h) $(remote_utils_h) $(symfile_h) terminal.h
d1949 2
a1950 2
rom68k-rom.o: rom68k-rom.c monitor.h $(bfd_h) gdb_wait.h $(defs_h) \
	$(gdbcmd_h) $(inferior_h) $(target_h) serial.h terminal.h \
d1954 2
a1955 2
	$(gdbcore_h) xcoffsolib.h $(symfile_h) objfiles.h gdb-stabs.h \
	$(regcache_h)
d1960 1
a1960 1
scm-exp.o: $(defs_h) $(value_h) $(parser_defs_h) language.h c-lang.h \
d1963 1
a1963 1
scm-lang.o: $(defs_h) $(value_h) $(parser_defs_h) language.h c-lang.h \
d1966 2
a1967 2
scm-valprint.o: $(defs_h) $(value_h) $(parser_defs_h) language.h  \
	scm-lang.h valprint.h $(gdbcore_h)
d1969 1
a1969 1
ser-go32.o: ser-go32.c $(defs_h) serial.h 
d1971 1
a1971 1
# OBSOLETE ser-mac.o: ser-mac.c $(defs_h) serial.h 
d1973 1
a1973 1
ser-pipe.o: ser-pipe.c $(defs_h) serial.h $(gdb_string_h) ser-unix.h
d1975 1
a1975 1
ser-tcp.o: ser-tcp.c $(defs_h) serial.h $(gdb_string_h) ser-unix.h
d1977 1
a1977 1
ser-unix.o: ser-unix.c $(defs_h) serial.h ser-unix.h 
d1979 1
a1979 1
serial.o: serial.c $(defs_h) serial.h $(gdb_string_h)
d1986 2
a1987 2
sh3-rom.o: sh3-rom.c monitor.h $(bfd_h) gdb_wait.h $(defs_h) $(gdbcmd_h) \
	$(inferior_h) $(target_h) serial.h terminal.h $(arch_utils_h) \
d1992 2
a1993 2
mon960-rom.o: mon960-rom.c monitor.h $(bfd_h) gdb_wait.h $(defs_h) $(gdbcmd_h) \
	$(inferior_h) $(target_h) serial.h terminal.h
d1996 2
a1997 2
	objfiles.h gdb_regex.h $(symfile_h) $(target_h) $(gdb_string_h) \
	solist.h $(completer_h)
d1999 2
a2000 2
solib-sunos.o: solib-sunos.c $(defs_h) $(symfile_h) objfiles.h $(gdbcore_h) \
	$(inferior_h) solist.h
d2002 2
a2003 2
solib-svr4.o: solib-svr4.c $(defs_h) $(gdbcore_h) $(inferior_h) objfiles.h \
	$(symfile_h) $(target_h) solist.h solib-svr4.h
d2008 2
a2009 2
	$(gdbcore_h) language.h objfiles.h gdb_regex.h $(symfile_h) \
	$(symtab_h) $(gdb_string_h) source.h $(completer_h) linespec.h \
d2016 1
a2016 1
	$(inferior_h) objfiles.h $(symfile_h) $(target_h) $(gdb_string_h) \
d2024 3
a2026 3
	$(INCLUDE_DIR)/aout/stab_gnu.h buildsym.h complaints.h $(defs_h) \
	$(gdbtypes_h) objfiles.h stabsread.h $(symfile_h) $(symtab_h) \
	$(gdb_string_h) $(doublest_h)
d2029 1
a2029 1
	language.h $(target_h) $(gdb_string_h) $(ui_out_h)
d2044 3
a2046 3
symfile.o: symfile.c $(breakpoint_h) complaints.h $(defs_h) \
	$(expression_h) gdb-stabs.h $(gdbcmd_h) $(gdbcore_h) \
	$(gdbtypes_h) language.h objfiles.h $(symfile_h) $(symtab_h) \
d2054 2
a2055 2
	$(expression_h) $(gdbtypes_h) language.h objfiles.h $(symfile_h) \
	$(symtab_h) $(gdb_string_h)
d2057 2
a2058 2
symtab.o: symtab.c call-cmds.h $(defs_h) $(expression_h) $(frame_h) \
	$(gdbcmd_h) $(gdbcore_h) $(gdbtypes_h) language.h objfiles.h \
d2060 1
a2060 1
	$(gdb_string_h) linespec.h $(cp_abi_h)
d2062 3
a2064 3
linespec.o: linespec.c linespec.h $(defs_h) $(frame_h) $(value_h) \
	objfiles.h $(symfile_h) $(completer_h) $(symtab_h) \
	$(demangle_h) command.h $(cp_abi_h)
d2069 1
a2069 1
	objfiles.h $(symfile_h) $(target_h) $(gdb_string_h) $(regcache_h)
d2077 1
a2077 1
top.o: top.c top.h $(bfd_h) $(getopt_h) $(readline_headers) call-cmds.h \
d2079 1
a2079 1
	$(defs_h) $(gdbcmd_h) $(inferior_h) language.h \
d2082 1
a2082 1
	serial.h
d2085 2
a2086 2
	$(gdbcore_h) $(gdbtypes_h) language.h $(symtab_h) $(target_h) \
	$(value_h) $(gdb_string_h) $(cp_abi.h)
d2095 1
a2095 1
	language.h $(target_h) terminal.h $(readline_headers) \
d2099 1
a2099 1
	$(gdbtypes_h) language.h $(symtab_h) $(target_h) $(value_h) \
d2106 2
a2107 2
	$(gdbcore_h) $(gdbtypes_h) language.h $(symtab_h) $(target_h) \
	$(value_h) $(gdb_string_h) valprint.h $(doublest_h)
d2117 2
a2118 2
x86-64-linux-tdep.o : x86-64-linux-tdep.c $(defs_h) $(inferior_h) $(gdbcore_h) \
	$(regcache_h) x86-64-tdep.h i386-tdep.h
d2120 3
a2122 3
x86-64-tdep.o : x86-64-tdep.c $(defs_h) $(inferior_h) $(gdbcore_h) $(gdbcmd_h) \
	$(arch_utils_h) $(regcache_h) $(symfile_h) x86-64-tdep.h i386-tdep.h \
	$(value_h)
d2124 2
a2125 2
x86-64-linux-tdep.o : x86-64-linux-tdep.c $(defs_h) $(inferior_h) $(gdbcore_h) \
	$(regcache_h) i387-nat.h x86-64-tdep.h i386-tdep.h
d2144 3
a2146 3
	$(INCLUDE_DIR)/coff/rs6000.h $(BFD_SRC)/libcoff.h buildsym.h \
	complaints.h $(defs_h) $(gdbtypes_h) objfiles.h stabsread.h $(symfile_h) \
	$(symtab_h) $(gdb_string_h)
d2148 1
a2148 1
xcoffsolib.o: xcoffsolib.c $(bfd_h) $(defs_h) xcoffsolib.h $(inferior_h) \
d2160 2
a2161 2
	$(gdbtypes_h) language.h $(parser_defs_h) $(symtab_h) $(value_h) \
	$(bfd_h) objfiles.h $(symfile_h)
d2164 2
a2165 2
	$(gdbtypes_h) language.h $(parser_defs_h) $(symtab_h) $(value_h) \
	$(bfd_h) objfiles.h $(symfile_h)
d2168 2
a2169 1
	language.h $(parser_defs_h) $(value_h) $(bfd_h) objfiles.h $(symfile_h)
d2172 2
a2173 2
	language.h m2-lang.h $(parser_defs_h) $(symtab_h) $(value_h) \
	$(bfd_h) objfiles.h $(symfile_h)
d2176 2
a2177 2
	language.h p-lang.h $(parser_defs_h) $(symtab_h) $(value_h) \
	$(bfd_h) objfiles.h $(symfile_h)
d2179 1
a2179 1
gdb-events.o: gdb-events.c gdb-events.h $(defs_h) $(gdbcmd_h)
d2181 1
a2181 1
ui-out.o: ui-out.c $(defs_h) $(ui_out_h) expression.h language.h
d2185 1
a2185 1
	$(language_h) valprint.h varobj.h wrapper.h
d2187 1
a2187 1
wrapper.o: wrapper.c $(defs_h) $(frame_h) $(value_h) wrapper.h
d2201 1
a2201 1
		$(cli_script_h) $(cli_setshow_h) top.h $(completer_h) \
d2211 2
a2212 2
		$(cli_cmds_h) $(cli_decode_h) top.h \
		$(defs_h) $(value_h) language.h $(ui_out_h)
@


1.119
log
@Split SVR4/SunOS solib support.
@
text
@d1223 1
a1223 1
	$(gdbcore_h) $(regcache_h) $(doublest_h)
d1355 1
a1355 1
	$(target_h) language.h $(gdb_string_h) $(completer_h)
d1516 1
a1516 1
	$(doublest_h)
d1567 1
a1567 1
	$(arch_utils_h) $(floatformat_h) objfiles.h \
d1581 1
a1581 1
	$(gdbcore_h) \
d1775 1
a1775 1
	$(target_h) ppc-tdep.h $(regcache_h)
d1851 1
a1851 1
	$(symfile_h) $(regcache_h)
d1909 1
a1909 1
	$(event_loop_h) $(event_top_h) $(remote_h) $(inf_loop_h)
d1923 1
a1923 1
	$(target_h) ppc-tdep.h $(regcache_h)
d2086 2
a2087 1
	$(arch_utils_h) $(regcache_h) $(symfile_h) x86-64-tdep.h i386-tdep.h
@


1.118
log
@ 2001-10-01  Elena Zannoni <ezannoni@@redhat.com>

        * Makefile.in (mipsread.o): Remove old dependency on partial-stab.h.
@
text
@d1184 1
a1184 1
	sh-tdep.c solib.c sparc-nat.c \
d1964 5
a1968 3
solib-svr4.o: solib-svr4.c $(command_h) $(defs_h) $(gdbcore_h) $(inferior_h) \
	objfiles.h gdb_regex.h $(symfile_h) $(target_h) $(gdb_string_h) \
	solist.h solib-svr4.h $(regcache_h)
@


1.117
log
@
2001-10-01  Elena Zannoni <ezannoni@@redhat.com>

        * xcoffread.c (N_UNDF, N_ABS, N_TEXT, N_DATA, N_BSS, N_COMM, N_FN,
        N_EXT, N_INDR, N_SETA, N_SETT, N_SETD, N_SETB, N_SETV,
        CUR_SYMBOL_TYPE, CUR_SYMBOL_VALUE, START_PSYMTAB, END_PSYMTAB,
        SET_NAMESTRING): Delete definitions.
        Don't include language.h any more.
        Don't include partial-stab.h any more.
        (scan_xcoff_symtab): Don't jump through hoops to reuse code in
        partial-stab.h, include the code directly, instead.

        * Makefile.in (xcoffread.o): Remove dependency on partial-stab.h.
@
text
@d1698 1
a1698 1
	objfiles.h partial-stab.h stabsread.h $(symfile_h) $(symtab_h) \
@


1.116
log
@* config/i386/x86-64linux.mh: New file.
* config/i386/x86-64linux.mt: New file.
* config/i386/nm-x86_64.h: New file.
* x86-64-linux-tdep.c: New file.
* x86-64-linux-nat.c: New file.
* x86-64-tdep.c: New file.
* x86-64-tdep.h: New file.
* config/djgpp/fnchange.lst: Add entries for x86_64-linux-tdep.c
and x86_64-linux-nat.c
* Makefile.in: Add x86_64-linux-tdep.o, x86_64-tdep.o,
x86_64-linux-tdep.o, x86_64-nat.o, update dependencies.
@
text
@d2108 1
a2108 1
	$(symtab_h) partial-stab.h $(gdb_string_h)
@


1.115
log
@Correctly parse register values provided by the monitor.
* rom68k-rom.c: #include "value.h".
(is_hex_digit, hex_digit_value, is_whitespace,
rom68k_supply_one_register): New static functions.
(rom68k_supply_register): Call rom68k_supply_one_register, instead
of monitor_supply_register; the latter was incorrectly parsing
the values.
* Makefile.in (rom68k-rom.o): Note that this now #includes value.h.
@
text
@d1555 1
a1555 1
	$(inferior_h) language.h $(regcache_h) $(doublest_h)
d2079 9
@


1.114
log
@Make GDB use libiberty regex implementation.
* gdb_regex.h: Normalize protection against multiple inclusion.
Include "xregex.h" instead of "gnu-regex.h".
* cli/cli-cmds.c: Include "gdb_regex.h" instead of "gnu-regex.h".
* cli/cli-decode.c: Likewise.
* Makefile.in (REGEX): Remove.
(GDB_CFLAGS): Remove reference to gnu-regex.h in comment.
(ADD_FILES, ADD_DEPS): Remove $(REGEX).
(POSSLIBS): Remove.
(TAGFILES_NO_SRCDIR): Remove $(POSSLIBS).
(irix5-nat.o, solib.o, solib-svr4.o, source.o, symtab.o,
xcoffsolib.o, cli-decode.o, cli-cmd.o): Replace gnu-regex.h with
gdb_regex.h in list of dependencies.
(gnu-regex.o): Remove rule.
* gnu-regex.c, gnu-regex.h: Remove files.
@
text
@d1915 2
a1916 1
	$(gdbcmd_h) $(inferior_h) $(target_h) serial.h terminal.h $(regcache_h)
@


1.113
log
@	* Makefile.in (varobj_h): Define.
	(mi-cmd-var.o): Depends on varobj_h.
	(gdbtk-varobj.o): Change varobj.h to $(varobj_h).
@
text
@a111 4
# We are using our own version of REGEX now to be consistent across
# machines.
REGEX = @@REGEX@@

d305 1
a305 1
# -I$(srcdir) for gdb internal headers and possibly for gnu-regex.h also.
d365 2
a366 2
ADD_FILES = $(REGEX) $(XM_ADD_FILES) $(TM_ADD_FILES) $(NAT_ADD_FILES)
ADD_DEPS = $(REGEX) $(XM_ADD_FILES) $(TM_ADD_FILES) $(NAT_ADD_FILES)
a661 2
POSSLIBS = gnu-regex.c gnu-regex.h

d675 1
a675 1
	$(POSSLIBS) $(SUBDIR_CLI_SRCS)
d1590 2
a1591 2
	$(symtab_h) $(symfile_h) objfiles.h $(command_h) $(frame_h) gnu-regex.h \
	language.h $(gdb_string_h) $(regcache_h)
a1814 2
gnu-regex.o: gnu-regex.c gnu-regex.h $(defs_h) $(gdb_string_h)

d1960 2
a1961 2
	objfiles.h gnu-regex.h $(symfile_h) $(target_h) $(gdb_string_h) solist.h \
	$(completer_h)
d1964 2
a1965 2
	objfiles.h gnu-regex.h $(symfile_h) $(target_h) $(gdb_string_h) solist.h \
	solib-svr4.h $(regcache_h)
d1970 3
a1972 2
	$(gdbcore_h) language.h objfiles.h gnu-regex.h $(symfile_h) $(symtab_h) \
	$(gdb_string_h) source.h $(completer_h) linespec.h $(ui_out_h)
d2021 1
a2021 1
	gnu-regex.h $(symfile_h) $(symtab_h) $(target_h) $(value_h) \
d2101 1
a2101 1
	$(gdbcmd_h) $(symfile_h) $(frame_h) gnu-regex.h
d2148 1
a2148 1
		$(symtab_h) gnu-regex.h
d2152 2
a2153 2
		$(cli_script_h) $(cli_setshow_h) top.h $(completer_h) $(defs_h) \
		$(target_h) gdb_wait.h gnu-regex.h $(ui_out_h)
@


1.112
log
@	* configure.in (GDBTK_SRC_DIR): We must have autoconf
	give us the absolute path to the source directory.
	* configure: Regenerated.
	* Makefile.in (GDBTK_SRC_DIR): Add variable so that
	autoconf can substitue it in for us.
	(gdbtk.o): Pass in GDBTK_SRC_DIR instead of srcdir. We
	really do need an absolute pathname.
@
text
@d630 1
d1451 1
a1451 1
	$(defs_h) $(value_h) varobj.h
d2191 1
a2191 1
		$(ui_out_h)
@


1.111
log
@	* Makefile.in (GDBTK_VERSION): Set a version number.
	(GDBTK_LIBRARY): New variable to point to location where
	gdbtk will install its tcl library. Changed all refereneces
	to $(datadir)/insight1.0 to $(GDBTK_LIBRARY).
	(SUBDIR_GDBTK_ALL): Remove "all-gdbtk". No longer needed.
	(SUBDIR_GDBTK_CLEAN): Remove "clean-gdbtk". No longer needed.
	(all-gdbtk): Remove.
	(install-gdbtk): Remove.
	(gdbtk.o): Pass srcdir to file when compiling.

Also from Ian Roxborough:

	* Makefile.in: Changed all references to the install directory
	"gdbtcl" to read "insight1.0".
@
text
@d273 4
d1402 1
a1402 1
		-DGDBTK_LIBRARY=\"$(GDBTK_LIBRARY)\" -DSRC_DIR=\"$(srcdir)\"
@


1.110
log
@* target.h (TARGET_VIRTUAL_FRAME_POINTER): Delete, multi-arched.
* gdbarch.sh (TARGET_VIRTUAL_FRAME_POINTER): Add.
* gdbarch.h, gdbarch.c: Regenerate.

* arch-utils.h (legacy_virtual_frame_pointer): Declare.
* arch-utils.c: Include "gdb_assert.h".
(legacy_virtual_frame_pointer): Define.
* Makefile.in (arch-utils.o): Depends on gdb_assert.h.

* tracepoint.c (encode_actions): Make frame_reg an int.  Make
frame_offset a LONGEST.
* ax-gdb.c (gen_frame_args_address): Ditto.
(gen_frame_locals_address): Ditto.
* mn10300-tdep.c (mn10300_gdbarch_init): Initialize
virtual_frame_pointer.
(mn10300_virtual_frame_pointer): Make static.  Update parameter
list to match function signature.
* config/mn10300/tm-mn10300.h (TARGET_VIRTUAL_FRAME_POINTER): Delete.
@
text
@d268 5
d286 2
a287 2
SUBDIR_GDBTK_ALL= all-gdbtk
SUBDIR_GDBTK_CLEAN= clean-gdbtk
d782 1
a782 1
	rm -rf $(datadir)/gdbtcl
a1371 21
# FIXME: cagney/2000-03-27: Post 5.0 this link code can be removed.
# It should now be possible to run GDBtk from the build directory
# without the link in place.
all-gdbtk:
	@@if test ! -d gdbtcl/images ; then \
	  if test "$(LN_S)" = "ln -s" ; then \
	    echo linking ${srcdir}/gdbtk/library to gdbtcl ; \
	    rm -f gdbtcl ; \
	    test ! -r gdbtcl || exit 1 ; \
	    $(LN_S) ${srcdir}/gdbtk/library gdbtcl ; \
	  else \
	    echo "Warning:" ; \
	    echo "Unable to link ${srcdir}/gdbtk/library to gdbtcl." ; \
	    echo "You will need to do a \`make install' before you are" ; \
	    echo "able to run the GUI." ; \
	  fi ; \
	else true ; fi

clean-gdbtk:
	rm -f gdbtcl

d1373 1
a1373 1
	$(SHELL) $(srcdir)/../mkinstalldirs $(datadir)/gdbtcl ; \
d1375 5
a1379 5
		$(datadir)/gdbtcl/images \
		$(datadir)/gdbtcl/images2 ; \
	$(SHELL) $(srcdir)/../mkinstalldirs $(datadir)/gdbtcl/help \
		$(datadir)/gdbtcl/help/images \
		$(datadir)/gdbtcl/help/trace ; \
d1383 1
a1383 1
		$(INSTALL_DATA) $$i $(datadir)/gdbtcl/$$i ; \
d1397 2
a1398 1
		$(srcdir)/gdbtk/generic/gdbtk.c -DGDBTK_LIBRARY=\"$(datadir)/gdbtcl\"
d1406 1
a1406 1
	-DGDBTK_LIBRARY=\"$(datadir)/gdbtcl\"
d1416 1
a1416 1
	-DGDBTK_LIBRARY=\"$(datadir)/gdbtcl\"
d1424 1
a1424 1
		$(srcdir)/gdbtk/generic/gdbtk-hooks.c -DGDBTK_LIBRARY=\"$(datadir)/gdbtcl\"
d1432 1
a1432 1
	-DGDBTK_LIBRARY=\"$(datadir)/gdbtcl\"
d1442 1
a1442 1
	-DGDBTK_LIBRARY=\"$(datadir)/gdbtcl\"
@


1.109
log
@* defs.h (HOST_FLOAT_FORMAT, HOST_DOUBLE_FORMAT)
(HOST_FLOAT_FORMAT, HOST_DOUBLE_FORMAT)
(HOST_LONG_DOUBLE_FORMAT, DOUBLEST)
(floatformat_to_doublest, floatformat_from_doublest)
(floatformat_is_negative, floatformat_is_nan)
(floatformat_mantissa, store_floating)
(extract_floating): Move declaration from here.
* doublest.h: To here.  New file.
* utils.c (get_field, floatformat_to_doublest, put_field)
(ldfrexp, floatformat_from_doublest, floatformat_is_negative)
(floatformat_is_nan, floatformat_mantissa)
(FLOATFORMAT_CHAR_BIT): Move from here.
* doublest.c: To here.  New file.
* findvar.c (store_floating, extract_floating): Move from here.
* doublest.c: To here.
* Makefile.in (SFILES): Add doublest.c.
(COMMON_OBS): Add doublest.o.
(doublest.o): Specify dependencies.
(doublest_h): Define.

* config/m88k/tm-m88k.h: Include "doublest.h".
* config/i960/tm-i960.h: Ditto.
* config/i386/tm-symmetry.h: Ditto.
* rs6000-tdep.c, valarith.c: Ditto.
* valprint.c, stabsread.c, sh-tdep.c: Ditto.
* ia64-tdep.c, i387-tdep.c, i386-tdep.c: Ditto.
* values.c, arm-tdep.c, arm-linux-tdep.c: Ditto.
* alpha-tdep.c, ax.h, expression.h: Ditto.
* sh-tdep.c, parse.c, top.c, value.h: Ditto.

* Makefile.in (arm-tdep.o): Add $(doublest_h).
(i386-tdep.o, i387-tdep.o, ia64-tdep.o): Ditto.
(rs6000-tdep.o, stabsread.o, valarith.o): Ditto.
(values.o, valprint.o, arm-linux-tdep.o): Ditto.
(alpha-tdep.o, ax_h, parse.o, top.o, value_h): Ditto.
(parser_defs_h): Ditto.
(expression_h): Add $(doublest_h) and $(symtab_h).
@
text
@d1490 1
a1490 1
	$(arch_utils_h)
@


1.108
log
@* Makefile.in: Sort header definitions.
(parser_defs_h, dis_asm_h, annotate_h, gdbthread_h): Define.
Replace parser-defs.h with $(parser_defs_h).  Replace $(dis-asm_h)
and $(dis-asm.h) with $(dis_asm_h).  Replace annotate.h with
$(annotate_h).  Replace target.h with $(target_h).  Replace
gdbthread.h with $(gdb_thread_h).  Replace symfile.h with $(symfile_h).
@
text
@d544 1
a544 1
	frame.c \
d582 1
a582 1
ax_h = 		ax.h
d596 1
d599 1
a599 1
expression_h =	expression.h
d610 1
a610 1
parser_defs_h =	parser-defs.h
d620 1
a620 1
value_h =	value.h $(symtab_h) $(gdbtypes_h) $(expression_h)
d697 3
a699 1
	frame.o \
d1207 2
a1208 2
	$(inferior_h) $(symtab_h) $(dis_asm_h) $(gdb_string_h) linespec.h \
	$(regcache_h)
d1216 1
a1216 1
	$(gdbtypes_h) $(floatformat_h) $(regcache_h)
d1219 1
a1219 1
	$(gdbcore_h) $(regcache_h)
d1243 3
d1531 2
a1532 1
	$(symtab_h) $(gdbcmd_h) $(command_h) $(arch_utils_h) $(regcache_h)
d1571 1
a1571 1
	$(inferior_h) language.h $(regcache_h)
d1584 1
a1584 1
	$(INCLUDE_DIR)/elf/common.h $(regcache_h)
d1781 1
a1781 1
	$(gdb_string_h) linespec.h
d1966 1
a1966 1
	$(regcache_h)
d2005 1
a2005 1
	$(gdb_string_h)
d2060 1
a2060 1
	$(completer_h) $(version_h) $(ui_out_h) \
d2079 1
a2079 1
	$(gdb_string_h)
d2086 1
a2086 1
	$(value_h) $(gdb_string_h) valprint.h
d2090 1
a2090 1
	$(gdb_string_h) scm-lang.h
@


1.107
log
@Move libgdb library functions to gdb.h (new file).
Update everything related to this.
@
text
@d557 1
a557 1
dis-asm_h =	$(INCLUDE_DIR)/dis-asm.h 
a561 4
dcache_h = dcache.h
remote_utils_h =  remote-utils.h $(target_h)


a575 16
gdbcore_h =	gdbcore.h $(bfd_h)

frame_h =	frame.h
symtab_h =	symtab.h bcache.h
symfile_h =	symfile.h
gdbtypes_h =	gdbtypes.h
expression_h =	expression.h
value_h =	value.h $(symtab_h) $(gdbtypes_h) $(expression_h)

breakpoint_h =	breakpoint.h $(frame_h) $(value_h)

command_h =	command.h
gdbcmd_h =	gdbcmd.h $(command_h) $(ui_out_h)
call_cmds_h =	call-cmds.h
regcache_h =	regcache.h

a578 2
defs_h =	defs.h $(xm_h) $(tm_h) $(nm_h) config.status config.h gdbarch.h ui-file.h
gdb_h =		gdb.h
d580 2
a581 5
top_h =		top.h
inferior_h =	inferior.h $(breakpoint_h)
target_h =      target.h $(bfd_h) $(symtab_h) $(dcache_h) $(memattr_h)
memattr_h =     memattr.h
tracepoint_h =	tracepoint.h
d583 13
d598 8
d607 4
d612 8
a620 13
ui_out_h =      ui-out.h
cli_out_h =	cli-out.h
arch_utils_h =	arch-utils.h
gdb_string_h =  gdb_string.h
completer_h =	completer.h

cli_decode_h =	$(srcdir)/cli/cli-decode.h
cli_cmds_h =	$(srcdir)/cli/cli-cmds.h
cli_script_h =	$(srcdir)/cli/cli-script.h
cli_setshow_h =	$(srcdir)/cli/cli-setshow.h
cli_utils_h =	$(srcdir)/cli/cli-utils.h

cp_abi_h = cp-abi.h
d1200 1
a1200 1
alpha-nat.o: alpha-nat.c $(defs_h) $(gdbcore_h) $(inferior_h) target.h \
d1204 1
a1204 1
	$(inferior_h) $(symtab_h) $(dis-asm.h) $(gdb_string_h) linespec.h \
d1207 1
a1207 1
annotate.o: annotate.c $(defs_h) annotate.h $(value_h) target.h $(gdbtypes_h)
d1212 1
a1212 1
arm-linux-tdep.o: arm-linux-tdep.c $(defs_h) target.h $(value_h) \
d1221 1
a1221 1
	objfiles.h symfile.h target.h $(regcache_h)
d1224 1
a1224 1
	$(inferior_h) language.h target.h gdbthread.h $(gdb_string_h) \
d1228 1
a1228 1
	objfiles.h symfile.h $(symtab_h) $(gdb_string_h)
d1231 1
a1231 1
	language.h parser-defs.h $(symtab_h)
d1235 1
a1235 1
	target.h typeprint.h $(value_h) $(gdb_string_h) $(cp_abi_h)
d1241 1
a1241 1
	language.h parser-defs.h $(symtab_h) $(gdb_string_h)
d1245 1
a1245 1
	target.h typeprint.h $(value_h) $(gdb_string_h)
d1250 2
a1251 1
ch-exp.o: ch-exp.c ch-lang.h $(defs_h) language.h parser-defs.h $(bfd_h) symfile.h objfiles.h $(value_h)
d1254 1
a1254 1
	language.h parser-defs.h $(symtab_h)
d1258 1
a1258 1
	target.h $(value_h) typeprint.h $(gdb_string_h)
d1267 1
a1267 1
	symfile.h $(symtab_h) gdb-stabs.h stabsread.h target.h \
d1280 1
a1280 1
	$(inferior_h) target.h $(gdb_string_h) $(regcache_h)
d1283 1
a1283 1
	$(inferior_h) target.h $(gdb_string_h)
d1285 3
a1287 3
corefile.o: corefile.c $(dis-asm_h) $(defs_h) $(gdbcmd_h) $(gdbcore_h) \
	$(inferior_h) target.h language.h $(gdb_string_h) $(completer_h) \
	symfile.h
d1290 1
a1290 1
	target.h gdbthread.h $(gdb_string_h) $(regcache_h)
d1298 1
a1298 1
	$(gdbcore_h) target.h
d1303 1
a1303 1
	symfile.h $(symtab_h) target.h $(gdb_string_h) $(cp_abi_h)
d1310 1
a1310 1
	$(gdbcmd_h) $(inferior_h) target.h serial.h terminal.h symfile.h \
d1318 1
a1318 1
	$(expression_h) $(gdbtypes_h) language.h objfiles.h symfile.h \
d1322 1
a1322 1
	$(expression_h) $(gdbtypes_h) language.h objfiles.h symfile.h \
d1326 1
a1326 1
	gdb-stabs.h objfiles.h symfile.h $(symtab_h) $(gdb_string_h) \
d1332 1
a1332 1
	$(gdbtypes_h) language.h $(symtab_h) target.h $(value_h) \
d1339 1
a1339 1
	$(gdbcmd_h) target.h
d1345 1
a1345 1
	target.h language.h $(gdb_string_h) $(completer_h)
d1348 1
a1348 1
	language.h parser-defs.h $(symtab_h) $(value_h)
d1350 1
a1350 1
findvar.o: findvar.c $(defs_h) $(gdbcore_h) $(inferior_h) target.h \
d1356 1
a1356 1
regcache.o: regcache.c $(defs_h) $(inferior_h) target.h $(regcache_h)
d1359 1
a1359 1
	$(inferior_h) target.h terminal.h gdbthread.h $(gdb_string_h)
d1466 2
a1467 2
	$(frame_h) $(breakpoint_h) $(gdbcore_h) $(value_h) symfile.h \
	$(gdb_string_h) target.h objfiles.h $(regcache_h)
d1477 1
a1477 1
	$(gdbtypes_h) $(expression_h) $(gdbcmd_h) $(value_h) target.h \
d1487 1
a1487 1
	$(gdbtypes_h) language.h objfiles.h symfile.h $(symtab_h) target.h \
d1491 1
a1491 1
	$(command_h) $(floatformat_h) target.h i387-nat.h $(regcache_h)
d1503 1
a1503 1
h8500-tdep.o: h8500-tdep.c $(bfd_h) $(dis-asm_h) $(defs_h) \
d1513 1
a1513 1
	$(inferior_h) objfiles.h symfile.h target.h $(regcache_h)
d1515 1
a1515 1
hppab-nat.o: hppab-nat.c $(bfd_h) $(defs_h) $(inferior_h) target.h \
d1518 1
a1518 1
hppah-nat.o: hppah-nat.c $(bfd_h) $(defs_h) $(inferior_h) target.h \
d1524 1
a1524 1
	$(inferior_h) $(gdbcore_h) target.h $(floatformat_h)	\
d1530 1
a1530 1
	language.h $(gdbcore_h) $(floatformat_h) target.h $(regcache_h)
d1541 1
a1541 1
i386ly-nat.o: i386ly-nat.c $(defs_h) $(frame_h) $(inferior_h) target.h
d1543 1
a1543 1
i386ly-tdep.o: i386ly-tdep.c $(defs_h) $(inferior_h) target.h $(gdbcore_h) \
d1546 1
a1546 1
i386m3-nat.o: i386m3-nat.c $(defs_h) $(inferior_h) $(floatformat_h) target.h \
d1553 1
a1553 1
	$(inferior_h) language.h target.h
d1556 1
a1556 1
	$(symtab_h) symfile.h objfiles.h $(regcache_h)
d1575 1
a1575 1
ia64-tdep.o: ia64-tdep.c $(defs_h) $(inferior_h) symfile.h $(gdbcore_h) \
d1580 1
a1580 1
	$(inferior_h) target.h language.h symfile.h $(gdb_string_h) \
d1584 1
a1584 1
	target.h terminal.h gdbthread.h $(gdb_string_h)
d1586 1
a1586 1
infptrace.o: infptrace.c $(defs_h) $(gdbcore_h) $(inferior_h) target.h \
d1591 1
a1591 1
	$(inferior_h) target.h gdbthread.h $(gdb_string_h) $(event_loop_h) \
d1595 1
a1595 1
	target.h terminal.h $(command_h)
d1598 2
a1599 2
irix5-nat.o: irix5-nat.c $(defs_h) $(inferior_h) $(gdbcore_h) target.h \
	$(symtab_h) symfile.h objfiles.h $(command_h) $(frame_h) gnu-regex.h \
d1605 1
a1605 1
	$(expression_h) parser-defs.h language.h symfile.h objfiles.h \
d1614 1
a1614 1
	language.h jv-lang.h c-lang.h gdbcore.h annotate.h
d1616 1
a1616 1
kod.o: kod.c $(defs_h) $(command_h) $(gdbcmd_h) target.h $(gdb_string_h) kod.h
d1621 2
a1622 2
	$(gdbcmd_h) $(gdbtypes_h) language.h parser-defs.h $(symtab_h) \
	target.h $(value_h) $(gdb_string_h)
d1625 1
a1625 1
	target.h $(regcache_h)
d1628 1
a1628 1
	language.h m2-lang.h parser-defs.h $(symtab_h)
d1631 1
a1631 1
	$(gdbcore_h) $(gdbtypes_h) language.h m2-lang.h $(symtab_h) target.h \
d1637 1
a1637 1
m3-nat.o: m3-nat.c $(defs_h) $(inferior_h) $(value_h) language.h target.h \
d1641 1
a1641 1
	language.h parser-defs.h $(symtab_h) $(gdb_string_h)
d1645 1
a1645 1
	target.h typeprint.h $(value_h) $(gdb_string_h)
d1656 1
a1656 1
m68kly-nat.o: m68kly-nat.c $(defs_h) $(frame_h) $(inferior_h) target.h
d1659 1
a1659 1
	$(language_h) $(gdbcore_h) $(floatformat_h) target.h $(regcache_h)
d1668 1
a1668 1
	symfile.h  $(gdbcore_h) $(ui_out_h)
d1671 1
a1671 1
	$(expression_h) objfiles.h symfile.h
d1676 1
a1676 1
mcore-rom.o: mcore-rom.c $(defs_h) $(gdbcore_h) target.h monitor.h \
d1681 1
a1681 1
	objfiles.h partial-stab.h stabsread.h symfile.h $(symtab_h) \
d1690 2
a1691 2
		language.h objfiles.h stabsread.h symfile.h $(symtab_h) \
		target.h $(gdb_string_h)
d1696 1
a1696 1
minsyms.o: minsyms.c $(bfd_h) $(defs_h) objfiles.h symfile.h \
d1703 1
a1703 1
	$(inferior_h) language.h objfiles.h symfile.h $(gdb_string_h)
d1707 1
a1707 1
	objfiles.h partial-stab.h stabsread.h symfile.h $(symtab_h) \
d1710 1
a1710 1
mipsv4-nat.o: mipsv4-nat.c $(defs_h) $(gdbcore_h) $(inferior_h) target.h \
d1718 1
a1718 1
	$(inferior_h) target.h serial.h terminal.h $(gdb_string_h) $(regcache_h)
d1731 1
a1731 1
	gdb-stabs.h objfiles.h symfile.h $(symtab_h) stabsread.h \
d1741 1
a1741 1
ns32k-tdep.o: ns32k-tdep.c $(bfd_h) $(dis-asm_h) $(defs_h)
d1743 1
a1743 1
objfiles.o: objfiles.c $(bfd_h) $(defs_h) objfiles.h symfile.h \
d1750 1
a1750 1
	gdb-stabs.h objfiles.h symfile.h $(symtab_h) $(gdb_string_h)
d1756 1
a1756 1
hpux-thread.o: hpux-thread.c $(defs_h) gdbthread.h target.h inferior.h \
d1763 1
a1763 1
	gdb-stabs.h objfiles.h symfile.h $(symtab_h) $(gdb_string_h)
d1766 1
a1766 1
	$(defs_h) gdb-stabs.h objfiles.h symfile.h $(symtab_h) $(gdb_string_h)
d1769 1
a1769 1
	$(defs_h) gdb-stabs.h objfiles.h symfile.h $(symtab_h) $(gdb_string_h)
d1773 1
a1773 1
	$(gdbtypes_h) language.h parser-defs.h $(symtab_h) $(value_h) \
d1777 1
a1777 1
	$(inferior_h) $(bfd_h) symfile.h target.h $(gdbcmd_h) \
d1781 1
a1781 1
	$(inferior_h) target.h $(regcache_h)
d1784 1
a1784 1
	target.h ppc-tdep.h $(regcache_h)
d1787 1
a1787 1
	$(gdbcmd_h) $(inferior_h) target.h serial.h terminal.h $(regcache_h)
d1791 1
a1791 1
	symfile.h $(symtab_h) target.h $(gdb_string_h) $(ui_out_h) \
d1797 1
a1797 1
	target.h $(gdb_string_h) gdbthread.h proc-utils.h
d1808 1
a1808 1
sol-thread.o: sol-thread.c $(defs_h) gdbthread.h target.h $(inferior_h) \
d1812 1
a1812 1
	gdbthread.h $(gdbcore_h) $(inferior_h) target.h $(defs_h)
d1815 1
a1815 1
	gdb_thread_db.h $(bfd_h) gdbthread.h $(inferior_h) $(symfile_h) \
d1818 1
a1818 1
lin-lwp.o: lin-lwp.c $(defs_h) gdb_assert.h gdb_wait.h gdbthread.h \
d1827 1
a1827 1
	$(inferior_h) target.h terminal.h $(gdb_string_h) $(regcache_h)
d1829 1
a1829 1
remote-array.o: remote-array.c $(defs_h) $(gdbcore_h) target.h \
d1850 1
a1850 1
	$(inferior_h) target.h terminal.h $(remote_utils_h) $(gdb_string_h) \
d1853 1
a1853 1
remote-e7000.o: remote-e7000.c $(defs_h) $(gdbcore_h) target.h \
d1857 1
a1857 1
	$(defs_h) $(gdbcore_h) $(inferior_h) symfile.h target.h terminal.h \
d1862 1
a1862 1
	symfile.h $(regcache_h)
d1865 1
a1865 1
	$(inferior_h) serial.h target.h terminal.h $(regcache_h)
d1868 1
a1868 1
	$(inferior_h) serial.h target.h terminal.h $(regcache_h)
d1871 1
a1871 1
	$(gdbcore_h) $(inferior_h) serial.h symfile.h target.h $(regcache_h)
d1874 1
a1874 1
	minimon.h target.h terminal.h $(gdb_string_h) $(regcache_h)
d1879 1
a1879 1
	symfile.h $(regcache_h)
d1882 1
a1882 1
	$(command_h) monitor.h $(remote_utils_h) $(symtab_h) symfile.h \
d1886 1
a1886 1
	$(inferior_h) $(remote_utils_h) symfile.h terminal.h $(gdb_string_h) \
d1890 1
a1890 1
	$(inferior_h) target.h terminal.h $(gdb_string_h) \
d1894 1
a1894 1
	target.h $(gdb_string_h) $(regcache_h)
d1897 1
a1897 1
	$(inferior_h) target.h terminal.h $(udiheaders) $(gdb_string_h) \
d1901 1
a1901 1
	$(gdbcore_h) $(inferior_h) target.h vx-share/dbgRpcLib.h \
d1903 1
a1903 1
	vx-share/xdr_rdb.h gdb-stabs.h objfiles.h symfile.h $(bfd_h) \
d1907 1
a1907 1
        $(gdbcore_h) $(inferior_h) target.h vx-share/dbgRpcLib.h \
d1912 1
a1912 1
	$(bfd_h) symfile.h target.h $(gdbcmd_h) objfiles.h \
d1919 1
a1919 1
	$(inferior_h) $(remote_utils_h) symfile.h terminal.h $(gdb_string_h) \
d1923 1
a1923 1
	$(inferior_h) $(remote_utils_h) symfile.h terminal.h
d1926 1
a1926 1
	$(gdbcmd_h) $(inferior_h) target.h serial.h terminal.h $(regcache_h)
d1928 2
a1929 2
rs6000-nat.o: rs6000-nat.c $(bfd_h) $(defs_h) $(inferior_h) target.h \
	$(gdbcore_h) xcoffsolib.h symfile.h objfiles.h gdb-stabs.h \
d1933 1
a1933 1
	target.h ppc-tdep.h $(regcache_h)
d1935 1
a1935 1
scm-exp.o: $(defs_h) $(value_h) parser-defs.h language.h c-lang.h \
d1938 1
a1938 1
scm-lang.o: $(defs_h) $(value_h) parser-defs.h language.h c-lang.h \
d1941 1
a1941 1
scm-valprint.o: $(defs_h) $(value_h) parser-defs.h language.h  \
d1956 1
a1956 1
sh-tdep.o: sh-tdep.c $(bfd_h) $(dis-asm_h) \
d1962 1
a1962 1
	$(inferior_h) target.h serial.h terminal.h $(arch_utils_h) \
d1965 1
a1965 1
signals.o: signals.c $(defs_h) target.h
d1968 1
a1968 1
	$(inferior_h) target.h serial.h terminal.h
d1971 1
a1971 1
	objfiles.h gnu-regex.h symfile.h target.h $(gdb_string_h) solist.h \
d1975 1
a1975 1
	objfiles.h gnu-regex.h symfile.h target.h $(gdb_string_h) solist.h \
d1981 1
a1981 1
	$(gdbcore_h) language.h objfiles.h gnu-regex.h symfile.h $(symtab_h) \
d1985 1
a1985 1
	target.h $(regcache_h)
d1988 1
a1988 1
	$(inferior_h) objfiles.h symfile.h target.h $(gdb_string_h) \
d1991 1
a1991 1
sparcl-tdep.o: sparcl-tdep.c $(defs_h) $(gdbcore_h) target.h $(regcache_h)
d1997 1
a1997 1
	$(gdbtypes_h) objfiles.h stabsread.h symfile.h $(symtab_h) \
d2001 1
a2001 1
	language.h target.h $(gdb_string_h) $(ui_out_h)
d2009 1
a2009 1
ax-gdb.o: ax-gdb.c $(defs_h) $(symtab_h) symfile.h $(gdbtypes_h) \
d2018 2
a2019 2
	$(gdbtypes_h) language.h objfiles.h symfile.h $(symtab_h) \
	target.h $(gdb_string_h) $(completer_h)
d2026 1
a2026 1
	$(expression_h) $(gdbtypes_h) language.h objfiles.h symfile.h \
d2031 1
a2031 1
	gnu-regex.h symfile.h $(symtab_h) target.h $(value_h) \
d2035 1
a2035 1
	objfiles.h symfile.h $(completer_h) $(symtab_h) \
d2041 1
a2041 1
	objfiles.h symfile.h target.h $(gdb_string_h) $(regcache_h)
d2043 1
a2043 1
thread.o: thread.c $(defs_h) gdbthread.h $(gdbcmd_h) target.h \
d2057 1
a2057 1
	$(gdbcore_h) $(gdbtypes_h) language.h $(symtab_h) target.h \
d2067 1
a2067 1
	language.h target.h terminal.h $(readline_headers) \
d2071 1
a2071 1
	$(gdbtypes_h) language.h $(symtab_h) target.h $(value_h) \
d2074 1
a2074 1
valops.o: valops.c $(defs_h) $(gdbcore_h) $(inferior_h) target.h \
d2078 1
a2078 1
	$(gdbcore_h) $(gdbtypes_h) language.h $(symtab_h) target.h \
d2082 1
a2082 1
	$(gdbcore_h) $(gdbtypes_h) $(symtab_h) target.h $(value_h) \
d2107 1
a2107 1
	complaints.h $(defs_h) $(gdbtypes_h) objfiles.h stabsread.h symfile.h \
d2111 1
a2111 1
	$(gdbcmd_h) symfile.h $(frame_h) gnu-regex.h
d2116 1
a2116 1
z8k-tdep.o: z8k-tdep.c $(bfd_h) $(dis-asm_h) $(defs_h) $(frame_h) \
d2122 2
a2123 2
	$(gdbtypes_h) language.h parser-defs.h $(symtab_h) $(value_h) \
	$(bfd_h) objfiles.h symfile.h
d2126 2
a2127 2
	$(gdbtypes_h) language.h parser-defs.h $(symtab_h) $(value_h) \
	$(bfd_h) objfiles.h symfile.h
d2130 1
a2130 1
	language.h parser-defs.h $(value_h) $(bfd_h) objfiles.h symfile.h
d2133 2
a2134 2
	language.h m2-lang.h parser-defs.h $(symtab_h) $(value_h) \
	$(bfd_h) objfiles.h symfile.h
d2137 2
a2138 2
	language.h p-lang.h parser-defs.h $(symtab_h) $(value_h) \
	$(bfd_h) objfiles.h symfile.h
@


1.107.2.1
log
@empty gdb/gdbserver/*
@
text
@a946 2
# NB: While GDBSERVER might be configured on native systems, it isn't
# always included in SUBDIRS.  Remove the gdbserver files explictly.
a948 3
	rm -f gdbserver/config.status gdbserver/config.log
	rm -f gdbserver/tm.h gdbserver/xm.h gdbserver/nm.h
	rm -f gdbserver/Makefile gdbserver/config.cache
@


1.106
log
@	* Makefile.in (SUBDIR_TUI_OBS): Add tui-out.o, tui-hooks.o.
	(SUBDIR_TUI_SRCS): Add tui-out.c tui-hooks.c
	(SFILES): Likewise.
	(tui-out.o): Define dependencies.
	(tui-hooks.o): Likewise.
@
text
@d600 1
d634 1
a634 1
	dst.h environ.h $(gdbcmd_h) gdbcore.h \
d1230 1
a1230 1
	gdb-events.h linespec.h $(ui_out_h) $(completer_h)
d2048 1
a2048 1
	$(regcache_h) $(ui_out_h)
d2204 1
a2204 1
		$(ui_out_h) $(mi_getopt_h)
d2211 1
a2211 1
		$(mi_getopt_h) $(regcache_h)
@


1.105
log
@Added dependency on tcl/tk libraries.
@
text
@d188 2
a189 1
	tuiDisassem.o tuiSourceWin.o tuiRegs.o tuiDataWin.o
d196 1
a196 1
	tui/tuiRegs.c tui/tuiDataWin.c
d542 1
a542 1
	tui/tui-file.h tui/tui-file.c \
d2232 6
@


1.104
log
@	* Makefile.in (ALLDEPFILES): Add m68hc11-tdep.c.
	(m68hc11-tdep.o): Define dependencies.
@
text
@d232 1
a232 1
TCL_DEPS =
d240 1
a240 1
TK_DEPS =
@


1.103
log
@* i386bsd-nat.c: Do not include <sys/sysctl.h>.
(_initialize_i386bsd_nat) [KERN_PS_STRINGS]: Move FreeBSD-specific
code to ...
* i386fbsd-nat.c: ... here.  New file.
* config/i386/fbsd.mh (NATDEPFILES): Add i386-fbsd.o.
* config/i386/nm-fbsd.h (CHILD_RESUME): Define.
* Makefile.in (ALLDEPFILES): Add i386fbsd-nat.c.
(i386fbsd-nat.o): Add dependencies.
@
text
@d1161 1
d1651 3
@


1.102
log
@        * signals.c: New file.
        * Makefile.in: Add signals.o.
        * target.c (struct signals, target_signal_to_name)
        (target_signal_from_name, target_signal_from_host)
        (do_target_signal_to_host, target_signal_to_host_p)
        (target_signal_to_host, target_signal_from_command): Move to
        signals.c.
        (initialize_targets): Move check of struct signals to...
        * signals.c (_initialize_signals): Here.
@
text
@d1154 1
a1154 1
	i386bsd-nat.c i386bsd-tdep.c \
d1539 2
@


1.101
log
@	* Makefile.in (COMMON_OBS): Remove tui-file.o.
	(SUBDIR_TUI_OBS): Add it here.
	(SUBDIR_TUI_SRCS): Move tui-file.c and tui-file.h here.
	(main.o): Remove dependency with tui-file.h.
@
text
@d530 1
a530 1
	scm-valprint.c source.c stabsread.c stack.c symfile.c \
d683 1
d1960 2
@


1.100
log
@2001-07-17  Elena Zannoni  <ezannoni@@redhat.com>

	* Makefile.in (tui-file.o): Update dependencies.
	* tui/tui-file.c: Add include of tuiIO.h, for tuiPuts_unfiltered.
@
text
@d186 1
a186 1
	tui.o tuiData.o tuiSource.o tuiStack.o tuiIO.o \
d190 1
a190 1
	tui/tui.c tui/tuiData.c tui/tuiSource.c \
d697 1
a697 1
	ui-file.o tui-file.o \
d793 1
a793 2
# init.c may force unnecessary files to be linked in. Like for instance 
# tui-file.c.
d1663 1
a1663 1
	symfile.h  $(gdbcore_h) $(srcdir)/tui/tui-file.h $(ui_out_h)
@


1.99
log
@2001-07-16  Elena Zannoni  <ezannoni@@redhat.com>

        * top.c (is_complete_command, init_cmd_lists, init_cli_cmds,
        execute_user_command, do_setshow_command, get_prompt, init_proc,
        serial_log_command): Remove extern declarations.  Include
        cli/cli-cmds.h, cli/cli-script.h, cli/cli-setshow.h, serial.h.
        * gdbcmd.h (execute_user_command): Remove declaration, it's already
        in cli/cli-script.h.
        * command.h (do_setshow_command): Remove declaration, it's already
        in cli/cli-setshow.h.
        * infrun.c: Include "cli/cli-script.h" for execute_user_command.
        * Makefile.in (infrun.o): Update dependencies.
        (top.o): Ditto.
        * cli/cli-setshow.h: Add comment for do_setshow_command.
@
text
@d1998 2
a1999 1
tui-file.o: $(srcdir)/tui/tui-file.c $(defs_h) $(srcdir)/tui/tui-file.h
@


1.98
log
@2001-07-15  Elena Zannoni  <ezannoni@@redhat.com>

	* top.c (readline_line_completion_function, noop_completer): Move
 	from here...
	* completer.c (readline_line_completion_function, noop_completer):
 	...to here.
	* gdbcmd.h (readline_line_completion_function, noop_completer):
 	Move declarations from here...
	* completer.h (readline_line_completion_function, noop_completer):
 	...to here.
	* corefile.c: Include completer.h.
	* source.c: Ditto.
	* symfile.c: Ditto.
	* Makefile.in: Update dependencies.
@
text
@d1588 2
a1589 1
infrun.o: infrun.c gdb_wait.h $(defs_h) $(gdbcmd_h) $(gdbcore_h) \
d2043 1
d2046 2
a2047 1
	$(completer_h) $(version_h) $(ui_out_h)
@


1.97
log
@* Makefile.in (ALLDEPFILES): Add i386bsd-nat.c and i386bsd-tdep.c
(i386bsd-tdep.o, i386bsd-nat.o): New targets.
@
text
@d613 1
a613 1
arch_utils_h = arch-utils.h
d615 1
d1227 1
a1227 1
	gdb-events.h linespec.h $(ui_out_h)
d1287 1
a1287 1
	$(inferior_h) target.h language.h $(gdb_string_h) completer.h \
d1346 1
a1346 1
	target.h language.h $(gdb_string_h) completer.h
d1480 1
a1480 1
	$(regcache_h)
d1580 1
a1580 1
	$(ui_out_h)
d1786 2
a1787 1
	symfile.h $(symtab_h) target.h $(gdb_string_h) $(ui_out_h)
d1795 1
a1795 1
proc-api.o: proc-api.c $(defs_h) $(gdbcmd_h) proc-utils.h
d1829 1
a1829 1
	$(inferior_h) $(gdb_string_h)
d1964 2
a1965 1
	objfiles.h gnu-regex.h symfile.h target.h $(gdb_string_h) solist.h
d1975 1
a1975 1
	$(gdb_string_h) source.h completer.h linespec.h $(ui_out_h)
d2011 1
a2011 1
	target.h $(gdb_string_h) completer.h
d2027 1
a2027 1
	objfiles.h symfile.h completer.h $(symtab_h) \
d2038 1
a2038 1
completer.o: completer.c completer.h $(gdbtypes_h) $(symtab_h) \
d2044 1
a2044 1
	completer.h $(version_h) $(ui_out_h)
d2080 1
a2080 1
	$(gdb_string_h) $(regcache_h)
d2152 1
a2152 1
		$(cli_script_h) $(cli_setshow_h) top.h completer.h $(defs_h) \
@


1.96
log
@2001-07-13  Elena Zannoni  <ezannoni@@redhat.com>

	* remote-e7000.c (fetch_regs_from_dump): If register set is null,
	generate an internal error.
	(e7000_fetch_registers): Initialize variable 'wanted'.
	(e7000_wait): Initialize variable 'wanted_nopc'.
	(e7000_store_register): Fix sprintf compiler warnings.
	(sub2_from_pc): Ditto.
	(e7000_open): Close the descriptor, not the name.
	(e7000_load): Fix compiler warnings.
	(sub2_from_pc): Ditto.
	* Makefile.in (remote-e7000.o): Can now compile with -Werror.
@
text
@d1153 1
d1533 5
@


1.95
log
@* mcore-rom.c: Include "serial.h".
* Makefile.in (mcore-rom.o): Depends on "serial.h".
@
text
@a1839 4
# FIXME: For the SH target, remote-e7000 contains numerous -Wformat
# warnings.  Since the fixes involve modifications to the code that
# handles the SH remote protocol the changes need to be tested against
# an SH board before they can be committed. cagney 1999-09-01.
a1841 1
	$(CC) -c $(INTERNAL_WARN_CFLAGS) $(NO_WERROR_CFLAGS) $<
@


1.94
log
@m88k builds.  Tweek remote-bug.c to include "serial.h".
@
text
@d1665 1
a1665 1
	$(gdb_string_h) $(regcache_h)
@


1.93
log
@* remote-utils.h (struct serial): Declare as opaque.  Remove
include of "serial.h".
* Makefile.in (remote_utils_h): Update.
* monitor.h (struct serial): Declare as opaque.  Remove include of
"serial.h".
(struct monitor_ops): Replace serial_t with `struct serial *'.
* monitor.c (monitor_desc): Ditto.
@
text
@d1836 1
a1836 1
remote-bug.o: remote-bug.c $(defs_h) $(gdbcore_h) \
@


1.92
log
@* ser-mac.c: Make obsolete.
* Makefile.in (ser-mac.o): Ditto.
@
text
@d562 1
a562 1
remote_utils_h = $(dcache_h) serial.h target.h remote-utils.h $(remote-sim_h)
@


1.91
log
@Exterminate ser-ocd.c.
@
text
@d1938 1
a1938 1
ser-mac.o: ser-mac.c $(defs_h) serial.h 
@


1.91.2.1
log
@Typesystem work initial import.
Note that this currently isn't building, i'm in the middle of converting make_function_type/lookup_function_type
@
text
@d315 1
a315 1
CFLAGS = @@CFLAGS@@ -Werror -O
d514 1
a514 1
	bitmap.c buildsym.c c-exp.y c-lang.c c-typeprint.c c-valprint.c \
d599 1
d630 1
a630 1
HFILES_NO_SRCDIR = bcache.h bitmap.h buildsym.h call-cmds.h coff-solib.h defs.h \
d681 1
a681 1
	memattr.o mem-break.o target.o parse.o language.o $(YYOBJ) bitmap.o buildsym.o \
d1030 1
a1030 1
YFLAGS +=  --debug
d1228 1
a1228 1
	objfiles.h symfile.h $(symtab_h) $(gdb_string_h) $(gdbtypes_h)
d1294 1
a1294 1
	$(gdbtypes_h) $(symtab_h) $(value_h) $(gdb_string_h) $(cp_abi_h)
d1350 1
a1350 1
	$(gdb_string_h) $(regcache_h) 
d1495 2
a1496 5
gnu-v3-abi.o: gnu-v3-abi.c $(cp_abi_h) $(defs_h) $(gdb_string_h) $(symtab_h) \
	$(gdbtypes_h) $(value_h) $(demangle_h)

gnu-v2-abi.o: gnu-v2-abi.c $(defs_h) $(cp_abi_h) $(gdb_string_h $(symtab_h) \
	$(gdbtypes_h) $(value_h) $(demangle_h) $(cp_abi_h)
d1498 2
a1501 2
h8300-tdep.o: h8300-tdep.c $(defs_h) $(frame_h) $(symtab_h)

d1503 2
a1504 1
	$(expression_h) $(frame_h) $(gdbcmd_h) $(gdbtypes_h) $(symtab_h) 
d1506 1
a1506 1
hp300ux-nat.o: hp300ux-nat.c $(defs_h) $(gdbcore_h) $(inferior_h) $(value_h) $(regcache_h)
d1639 1
a1639 1
	language.h $(symtab_h) valprint.h $(value_h) $(gdb_string_h) $(cp_abi_h)
d2026 1
a2026 4
# OBSOLETE tahoe-tdep.o: tahoe-tdep.c $(OP_INCLUDE)/tahoe.h $(defs_h) \
# OBSOLETE	$(symtab_h)

tic80-tdep.o: tic80-tdep.c $(defs_h)
d2069 1
a2069 1
	$(gdb_string_h) scm-lang.h $(cp_abi_h)
a2134 1

@


1.90
log
@Add missing $(ui_out_h) dependencies.
@
text
@d1176 1
a1176 1
	ser-go32.c ser-pipe.c ser-ocd.c ser-tcp.c \
a1938 2

ser-ocd.o: ser-ocd.c $(defs_h) serial.h $(gdb_string_h)
@


1.89
log
@	* Makefile.in (osfsolib.c, osfsolib.o): Rename to solib-osf.c and
	solib-osf.o.
	* config/alpha/alpha-osf1.mh (NATDEPFILES): Replace osfsolib.o
	with solib-osf.o and solib.o.
	* config/alpha/alpha-osf2.mh: Likewise.
	* config/alpha/alpha-osf3.mh: Likewise.
	* solib-osf.c: New file, renamed and largely rewritten from
	osfsolib.c.
@
text
@d591 1
a591 1
gdbcmd_h =	gdbcmd.h $(command_h)
d1225 1
a1225 1
	gdb-events.h linespec.h
d1572 2
a1573 1
	$(inferior_h) target.h language.h symfile.h $(gdb_string_h)
d1656 1
a1656 1
	symfile.h  $(gdbcore_h) $(srcdir)/tui/tui-file.h
d1779 1
a1779 1
	symfile.h $(symtab_h) target.h $(gdb_string_h)
d1973 1
a1973 1
	$(gdb_string_h) source.h completer.h linespec.h
d1992 1
a1992 1
	language.h target.h $(gdb_string_h)
d2033 2
a2034 1
thread.o: thread.c $(defs_h) gdbthread.h $(gdbcmd_h) target.h $(regcache_h)
d2042 1
a2042 1
	completer.h $(version_h)
@


1.88
log
@Add support for the GNU V3 C++ ABI.
(Includes changes by Dan Berlin.)

* gnu-v3-abi.c: New file.
* minsyms.c: #include "value.h" and "cp-abi.h".
(install_minimal_symbols): Check the minimal symbol table for
symbols that look mangled in the V3 style, and select the V3 ABI
if we find any.
* Makefile.in (SFILES): Add gnu-v3-abi.c.
(COMMON_OBS): Add gnu-v3-abi.o.
(gnu-v3-abi.o): Add new rule.
(minsyms.o): Depend on $(cp_abi_h) and $(value_h).
@
text
@d1166 1
a1166 1
	ns32k-tdep.c osfsolib.c \
d1733 2
a1734 2
osfsolib.o: osfsolib.c $(command_h) $(defs_h) $(gdbcore_h) $(inferior_h) \
	objfiles.h gnu-regex.h symfile.h target.h language.h $(gdb_string_h)
@


1.87
log
@* Makefile.in (gnu-v2-abi.o): Add $(demangle_h) to list of
dependencies.  Reorder dependencies to match #includes in file,
for easier verification.
@
text
@d544 1
a544 1
	gnu-v2-abi.c hpacc-abi.c cp-abi.c
d698 1
a698 1
	gnu-v2-abi.o hpacc-abi.o cp-abi.o
d1498 2
d1684 1
a1684 1
	$(symtab_h) $(gdb_string_h)
@


1.86
log
@Replace Makefile.in:VERSION with the file version.in.
@
text
@d1495 2
a1496 2
gnu-v2-abi.o: gnu-v2-abi.c $(defs_h) $(cp_abi_h) $(gdb_string_h) $(symtab_h) \
	$(gdbtypes_h) $(value_h)
@


1.85
log
@Fix -Werror problem with mi-main.c.
@
text
@a361 1
VERSION = 5.0
d935 1
a935 1
	rm -f *.o *.a $(ADD_FILES) *~ init.c-tmp init.l-tmp
d1016 7
a1022 6
version.c: Makefile
	rm -f version.c
	echo '#include "version.h"' >> version.c
	echo 'const char version[] = "$(VERSION)";' >> version.c
	echo 'const char host_name[] = "$(host_alias)";' >> version.c
	echo 'const char target_name[] = "$(target_alias)";' >> version.c
@


1.84
log
@	* Makefile.in (SUBDIR_GDBTK_OBS): Add gdbtk-bp.o, gdbtk-register.o
	and gdbtk-stack.o.
	(SUBDIR_GDBTK_SRCS): Ditto for the sources.
	(gdbtk-bp.o): New rule.
	(gdbtk-register.o): New rule.
	(gdbtk-stack.o): New rule.
	(gdbtk-cmds.o): Update dependencies.
	(gdbtk.o): Ditto.
	(gdbtk-hooks.o): Ditto.
	(gdbtk-varobj.o): Ditto.
@
text
@d2192 1
a2192 1
	$(CC) -c $(INTERNAL_WARN_CFLAGS) $(srcdir)/mi/mi-main.c
@


1.83
log
@* Makefile.in (mn10300-tdep.o): New rule.

* Makefile.in (gdb_string_h): Define.  Use it throughout.
Some rules were already using this, even though it isn't defined.
@
text
@d268 2
a269 1
	gdbtk.o gdbtk-cmds.o gdbtk-hooks.o gdbtk-varobj.o gdbtk-wrapper.o
d271 4
a274 3
	gdbtk/generic/gdbtk.c gdbtk/generic/gdbtk-cmds.c \
	gdbtk/generic/gdbtk-hooks.c gdbtk/generic/gdbtk-varobj.c \
	gdbtk/generic/gdbtk-wrapper.c
d1401 1
a1401 1
	$(bfd_h) symfile.h objfiles.h target.h $(gdb_string_h) \
d1408 8
d1417 1
a1417 1
	$(srcdir)/gdbtk/generic/gdbtk.h \
d1419 2
a1420 2
	$(command_h) $(bfd_h) $(top_h) symfile.h objfiles.h target.h	\
	$(gdb_string_h) $(tracepoint_h) $(frame_h) source.h $(regcache_h)
d1423 1
a1423 1
	$(GDBTK_CFLAGS) $(srcdir)/gdbtk/generic/gdbtk-cmds.c				\
d1429 1
a1429 1
	$(bfd_h) symfile.h objfiles.h target.h $(gdb_string_h) $(tracepoint_h)
d1433 18
@


1.82
log
@* Makefile.in (obstack_h, target_h): Define; these are already
used elsewhere, but have been expanding to the empty string.
(memattr_h): Define; needed by target_h.
@
text
@d613 1
d1202 1
a1202 1
	$(inferior_h) $(symtab_h) $(dis-asm.h) gdb_string.h linespec.h \
d1208 1
a1208 1
	gdb_string.h $(regcache_h)
d1222 1
a1222 1
	$(inferior_h) language.h target.h gdbthread.h gdb_string.h \
d1226 1
a1226 1
	objfiles.h symfile.h $(symtab_h) gdb_string.h
d1233 1
a1233 1
	target.h typeprint.h $(value_h) gdb_string.h $(cp_abi_h)
d1239 1
a1239 1
	language.h parser-defs.h $(symtab_h) gdb_string.h
d1243 1
a1243 1
	target.h typeprint.h $(value_h) gdb_string.h
d1246 1
a1246 1
	language.h $(symtab_h) valprint.h $(value_h) gdb_string.h
d1255 1
a1255 1
	target.h $(value_h) typeprint.h gdb_string.h
d1265 1
a1265 1
	gdb_string.h
d1277 1
a1277 1
	$(inferior_h) target.h gdb_string.h $(regcache_h)
d1280 1
a1280 1
	$(inferior_h) target.h gdb_string.h
d1283 1
a1283 1
	$(inferior_h) target.h language.h gdb_string.h completer.h \
d1287 1
a1287 1
	target.h gdbthread.h gdb_string.h $(regcache_h)
d1292 1
a1292 1
	$(gdbtypes_h) $(symtab_h) $(value_h) gdb_string.h
d1294 1
a1294 1
dcache.o: dcache.c $(dcache_h) $(defs_h) $(gdbcmd_h) gdb_string.h \
d1300 1
a1300 1
	symfile.h $(symtab_h) target.h gdb_string.h $(cp_abi_h)
d1304 1
a1304 1
demangle.o: demangle.c $(defs_h) $(gdbcmd_h) gdb_string.h
d1310 1
a1310 1
dpx2-nat.o: dpx2-nat.c $(defs_h) $(gdbcore_h) gdb_string.h
d1312 1
a1312 1
dstread.o: dstread.c gdb_string.h
d1316 1
a1316 1
	$(symtab_h) gdb_string.h
d1320 1
a1320 1
	$(symtab_h) gdb_string.h
d1323 1
a1323 1
	gdb-stabs.h objfiles.h symfile.h $(symtab_h) gdb_string.h \
d1326 1
a1326 1
environ.o: environ.c $(defs_h) environ.h $(gdbcore_h) gdb_string.h
d1330 1
a1330 1
	gdb_string.h $(cp_abi_h)
d1342 1
a1342 1
	target.h language.h gdb_string.h completer.h
d1348 1
a1348 1
	gdb_string.h $(regcache_h)
d1356 1
a1356 1
	$(inferior_h) target.h terminal.h gdbthread.h gdb_string.h
d1399 2
a1400 2
	$(bfd_h) symfile.h objfiles.h target.h gdb_string.h $(tracepoint_h) \
	$(top_h) 
d1410 1
a1410 1
	gdb_string.h $(tracepoint_h) $(frame_h) source.h $(regcache_h)
d1419 1
a1419 1
	$(bfd_h) symfile.h objfiles.h target.h gdb_string.h $(tracepoint_h)
d1438 1
a1438 1
	gdb_string.h target.h objfiles.h $(regcache_h)
d1449 1
a1449 1
	language.h gdb_string.h $(readline_headers) $(remote_h) linespec.h \
d1459 1
a1459 1
	$(value_h) gdb_string.h wrapper.h $(cp_abi_h)
d1467 1
a1467 1
gnu-v2-abi.o: gnu-v2-abi.c $(defs_h) $(cp_abi_h) gdb_string.h $(symtab_h) \
d1478 1
a1478 1
hpacc-abi.o: hpacc-abi.c $(defs_h) $(cp_abi_h) gdb_string.h $(gdbtypes_h) \
d1492 1
a1492 1
i386-tdep.o: i386-tdep.c $(defs_h) gdb_string.h $(frame_h)	\
d1542 1
a1542 1
	$(inferior_h) target.h language.h symfile.h gdb_string.h
d1545 1
a1545 1
	target.h terminal.h gdbthread.h gdb_string.h
d1548 1
a1548 1
	gdb_string.h gdb_wait.h $(command_h) $(regcache_h)
d1551 1
a1551 1
	$(inferior_h) target.h gdbthread.h gdb_string.h $(event_loop_h) \
d1560 1
a1560 1
	language.h gdb_string.h $(regcache_h)
d1566 1
a1566 1
	gdb_string.h $(value_h) c-lang.h jv-lang.h $(gdbcore_h)
d1569 1
a1569 1
	$(value_h) $(demangle_h) jv-lang.h gdb_string.h \
d1576 1
a1576 1
kod.o: kod.c $(defs_h) $(command_h) $(gdbcmd_h) target.h gdb_string.h kod.h
d1578 1
a1578 1
kod-cisco.o: kod-cisco.c $(defs_h) gdb_string.h kod.h
d1582 1
a1582 1
	target.h $(value_h) gdb_string.h
d1592 1
a1592 1
	$(value_h) gdb_string.h
d1601 1
a1601 1
	language.h parser-defs.h $(symtab_h) gdb_string.h
d1605 1
a1605 1
	target.h typeprint.h $(value_h) gdb_string.h
d1608 1
a1608 1
	language.h $(symtab_h) valprint.h $(value_h) gdb_string.h
d1611 1
a1611 1
	$(gdbcore_h) gdb_string.h $(regcache_h)
d1622 1
a1622 1
mac-nat.o: mac-nat.c $(defs_h) gdb_string.h $(regcache_h)
d1624 1
a1624 1
main.o: main.c top.h $(defs_h) gdb_string.h $(event_loop_h) \
d1634 1
a1634 1
	gdb_string.h $(regcache_h)
d1639 1
a1639 1
	gdb_string.h
d1648 1
a1648 1
		target.h gdb_string.h
d1654 1
a1654 1
	$(symtab_h) gdb_string.h
d1660 1
a1660 1
	$(inferior_h) language.h objfiles.h symfile.h gdb_string.h
d1665 1
a1665 1
	gdb_string.h
d1670 4
d1675 1
a1675 1
	$(inferior_h) target.h serial.h terminal.h gdb_string.h $(regcache_h)
d1689 1
a1689 1
	gdb_string.h
d1701 1
a1701 1
	$(symtab_h) gdb_string.h $(breakpoint_h)
d1704 1
a1704 1
	objfiles.h gnu-regex.h symfile.h target.h language.h gdb_string.h
d1707 1
a1707 1
	gdb-stabs.h objfiles.h symfile.h $(symtab_h) gdb_string.h
d1720 1
a1720 1
	gdb-stabs.h objfiles.h symfile.h $(symtab_h) gdb_string.h
d1723 1
a1723 1
	$(defs_h) gdb-stabs.h objfiles.h symfile.h $(symtab_h) gdb_string.h
d1726 1
a1726 1
	$(defs_h) gdb-stabs.h objfiles.h symfile.h $(symtab_h) gdb_string.h
d1731 1
a1731 1
	gdb_string.h linespec.h
d1733 1
a1733 1
ppc-bdm.o: ppc-bdm.c $(defs_h) $(gdbcore_h) gdb_string.h $(frame_h) \
d1748 1
a1748 1
	symfile.h $(symtab_h) target.h gdb_string.h
d1753 1
a1753 1
	target.h gdb_string.h gdbthread.h proc-utils.h
d1780 1
a1780 1
gnu-regex.o: gnu-regex.c gnu-regex.h $(defs_h) gdb_string.h
d1783 1
a1783 1
	$(inferior_h) target.h terminal.h gdb_string.h $(regcache_h)
d1786 1
a1786 1
      gdb_string.h $(command_h) serial.h monitor.h $(remote_utils_h) \
d1790 1
a1790 1
	$(inferior_h) gdb_string.h
d1803 1
a1803 1
	$(inferior_h) gdb_string.h
d1806 1
a1806 1
	$(inferior_h) target.h terminal.h $(remote_utils_h) gdb_string.h \
d1814 1
a1814 1
	serial.h gdb_string.h $(regcache_h)
d1819 1
a1819 1
	gdb_string.h $(regcache_h)
d1822 1
a1822 1
	$(inferior_h) $(remote_utils_h) terminal.h gdb_string.h \
d1835 1
a1835 1
	minimon.h target.h terminal.h gdb_string.h $(regcache_h)
d1844 1
a1844 1
	objfiles.h gdb-stabs.h gdb_string.h $(regcache_h)
d1847 1
a1847 1
	$(inferior_h) $(remote_utils_h) symfile.h terminal.h gdb_string.h \
d1851 1
a1851 1
	$(inferior_h) target.h terminal.h gdb_string.h \
d1855 1
a1855 1
	target.h gdb_string.h $(regcache_h)
d1858 1
a1858 1
	$(inferior_h) target.h terminal.h $(udiheaders) gdb_string.h \
d1865 1
a1865 1
	gdb_string.h $(regcache_h)
d1870 1
a1870 1
        vx-share/xdr_rdb.h gdb_string.h $(regcache_h)
d1872 1
a1872 1
ocd.o: ocd.c ocd.h $(gdbcore_h) gdb_string.h $(frame_h) $(inferior_h) \
d1877 1
a1877 1
	$(inferior_h) $(remote_utils_h) gdb_string.h $(regcache_h)
d1880 1
a1880 1
	$(inferior_h) $(remote_utils_h) symfile.h terminal.h gdb_string.h \
d1900 1
a1900 1
	scm-lang.h scm-tags.h gdb_string.h $(gdbcore_h)
d1909 1
a1909 1
ser-ocd.o: ser-ocd.c $(defs_h) serial.h gdb_string.h
d1911 1
a1911 1
ser-pipe.o: ser-pipe.c $(defs_h) serial.h gdb_string.h ser-unix.h
d1913 1
a1913 1
ser-tcp.o: ser-tcp.c $(defs_h) serial.h gdb_string.h ser-unix.h
d1917 1
a1917 1
serial.o: serial.c $(defs_h) serial.h gdb_string.h
d1932 1
a1932 1
	objfiles.h gnu-regex.h symfile.h target.h gdb_string.h solist.h
d1935 1
a1935 1
	objfiles.h gnu-regex.h symfile.h target.h gdb_string.h solist.h \
d1942 1
a1942 1
	gdb_string.h source.h completer.h linespec.h
d1948 1
a1948 1
	$(inferior_h) objfiles.h symfile.h target.h gdb_string.h \
d1958 1
a1958 1
	gdb_string.h
d1961 1
a1961 1
	language.h target.h gdb_string.h
d1978 1
a1978 1
	target.h gdb_string.h completer.h
d1986 1
a1986 1
	$(symtab_h) gdb_string.h
d1991 1
a1991 1
	gdb_string.h linespec.h $(cp_abi_h)
d2000 1
a2000 1
	objfiles.h symfile.h target.h gdb_string.h $(regcache_h)
d2009 1
a2009 1
	$(remote_utils_h) gdb_string.h $(event_loop_h) $(event_top_h) \
d2014 1
a2014 1
	$(value_h) gdb_string.h $(cp_abi.h)
d2024 1
a2024 1
	gdb_string.h $(event_loop_h) $(event_top_h)
d2028 1
a2028 1
	gdb_string.h
d2031 1
a2031 1
	gdb_string.h $(regcache_h) $(cp_abi_h)
d2035 1
a2035 1
	$(value_h) gdb_string.h valprint.h
d2039 1
a2039 1
	gdb_string.h scm-lang.h
d2046 1
a2046 1
	gdb_string.h $(regcache_h)
d2064 1
a2064 1
	$(symtab_h) partial-stab.h gdb_string.h
@


1.81
log
@2001-05-01  Michael Snyder  <msnyder@@redhat.com>

	* Makefile.in: Add rules for thread-db.o, lin-lwp.o, proc-service.o.
@
text
@d558 1
d601 2
@


1.80
log
@(Changes from Daniel Berlin, with revisions by Jim Blandy.)

Abstract out operations specific to particular C++ ABI's, and
invoke them through a function table.  This removes the C++ ABI
dependencies scattered throughout the code, and allows us to
cleanly add support for new C++ ABI's.
* cp-abi.h, cp-abi.h, gnu-v2-abi.c, hpacc-abi.c: New files.
* c-typeprint.c, c-valprint.c, dbxread.c, eval.c, gdbtypes.c,
jv-typeprint.c, linespec.c, symtab.c, typeprint.c, valops.c:
#include "cp-abi.h".  These files all use functions now declared
there.
* symtab.h (OPNAME_PREFIX_P, VTBL_PREFIX_P, DESTRUCTOR_PREFIX_P):
Deleted.  These services are now provided by functions declared in
cp-abi.h.
* value.h (value_rtti_type, value_virtual_fn_field): Same.
* values.c (value_virtual_fn_field): Same, for this definition.
* valops.c (value_rtti_type): Same.
* c-typeprint.c (c_type_print_base): Use the functions from
"cp-abi.h", instead of the old macros, or hard-coded ABI-specific
tests.
* dbxread.c (record_minimal_symbol): Same.
* gdbtypes.c (get_destructor_fn_field, virtual_base_index,
virtual_base_index_skip_primaries): Same.
* jv-typeprint.c (java_type_print_base): Same.
* linespec.c (find_methods, decode_line_1): Same.
* symtab.c (gdb_mangle_name): Same.
* Makefile.in (SFILES): Add the new .c files mentioned above.
(cp_abi_h): New variable.
(COMMON_OBS): Add gnu-v2-abi.o, hpacc-abi.o, and cp-abi.o.
(cp-abi.o, gnu-v2-abi.o, hpacc-abi.o): New targets.
(c-typeprint.o, c-valprint.o, dbxread.o, eval.o, gdbtypes.o,
jv-typeprint.o, symtab.o, linespec.o, typeprint.o, valops.o): Add
dependency on $(cp_abi_h).
@
text
@d1762 10
@


1.79
log
@Obsolete NEWS and ISI systems (along with a few redundant m68k targets).
@
text
@d542 2
a543 1
	frame.c
d617 2
d692 2
a693 1
	frame.o
d1229 1
a1229 1
	target.h typeprint.h $(value_h) gdb_string.h
d1232 1
a1232 1
	language.h $(symtab_h) valprint.h $(value_h)
d1285 2
d1296 1
a1296 1
	symfile.h $(symtab_h) target.h gdb_string.h
d1326 1
a1326 1
	gdb_string.h
d1455 1
a1455 1
	$(value_h) gdb_string.h wrapper.h
d1463 3
d1474 3
d1566 1
a1566 1
	typeprint.h c-lang.h
d1973 1
a1973 1
	gdb_string.h linespec.h
d1977 1
a1977 1
	$(demangle_h) command.h
d1996 1
a1996 1
	$(value_h) gdb_string.h
d2013 1
a2013 1
	gdb_string.h $(regcache_h)
@


1.78
log
@Obsolete sun386i.
@
text
@d891 3
a893 1
tm-isi.h tm-sun3.h tm-news.h tm-hp300bsd.h tm-altos.h: tm-m68k.h
d895 1
a895 1
xm-news1000.h: xm-news.h
d1147 1
a1147 1
	infptrace.c inftarg.c irix4-nat.c irix5-nat.c isi-xdep.c \
d1546 1
a1546 1
isi-xdep.o: isi-xdep.c
@


1.77
log
@Obsolete a29k-*-* host and a29k-*-sym1* and a29k-*-kern* targets.
@
text
@d1166 1
a1166 1
	sparc-tdep.c sparcl-tdep.c sun3-nat.c sun386-nat.c \
d1941 1
a1941 1
sun386-nat.o: sun386-nat.c $(defs_h) $(inferior_h) $(gdbcore_h) $(regcache_h)
@


1.76
log
@Obsolete ns32k-*-mach3*, ns32k-umax-*, ns32k-utek-sysv* and
ns32k-utek-*.
@
text
@a1167 1
	ultra3-nat.c ultra3-xdep.c \
d1984 1
a1984 1
ultra3-nat.o: ultra3-nat.c $(defs_h) $(gdbcore_h) $(inferior_h) $(regcache_h)
d1986 1
a1986 1
ultra3-xdep.o: ultra3-xdep.c $(defs_h) $(gdbcore_h) $(inferior_h)
@


1.75
log
@Obsolete stuff.c and kdb-start.c.
@
text
@d1154 1
a1154 1
	ns32k-tdep.c ns32km3-nat.c osfsolib.c \
d1168 1
a1168 1
	ultra3-nat.c ultra3-xdep.c umax-xdep.c \
d1670 1
a1670 1
ns32km3-nat.o: ns32km3-nat.c $(defs_h) $(inferior_h) $(regcache_h)
d1989 1
a1989 1
umax-xdep.o: umax-xdep.c $(defs_h) $(gdbcore_h) $(inferior_h) $(regcache_h)
@


1.74
log
@	Unified support for hardware breakpoints and watchpoints on
	x86 targets:

	* config/i386/nm-i386.h: New file.

	* config/i386/nm-i386.h: (i386_cleanup_dregs)
	(i386_insert_watchpoint, i386_remove_watchpoint)
	(i386_region_ok_for_watchpoint, i386_stopped_by_hwbp)
	(i386_stopped_data_address, i386_insert_hw_breakpoint)
	(i386_remove_hw_breakpoint): Declare prototypes.
	[I386_USE_GENERIC_WATCHPOINTS] (TARGET_CAN_USE_HARDWARE_WATCHPOINT):
	Define if not already defined.
	(TARGET_REGION_OK_FOR_HW_WATCHPOINT, HAVE_CONTINUABLE_WATCHPOINT)
	(STOPPED_BY_WATCHPOINT, target_stopped_data_address)
	(target_insert_watchpoint, target_remove_watchpoint)
	(target_insert_hw_breakpoint, target_remove_hw_breakpoint): Define
	to call the appropriate i386_* functions.

	* i386-nat.c: New file.

	* i386-nat.c (I386_DR_CONTROL_MASK, I386_DR_LOCAL_ENABLE)
	(I386_DR_GLOBAL_ENABLE, I386_DR_DISABLE, I386_DR_SET_RW_LEN)
	(I386_DR_GET_RW_LEN, I386_DR_WATCH_HIT): New macros.
	(dr_mirror, dr_status_mirror, dr_control_mirror, dr_ref_count)
	(maint_show_dr): New variables.
	(i386_cleanup_dregs, i386_show_dr, i386_length_and_rw_bits)
	(i386_insert_aligned_watchpoint, i386_remove_aligned_watchpoint)
	(i386_handle_nonaligned_watchpoint, i386_insert_watchpoint)
	(i386_remove_watchpoint, i386_region_ok_for_watchpoint)
	(i386_stopped_data_address, i386_stopped_by_hwbp)
	(i386_insert_hw_breakpoint, i386_remove_hw_breakpoint): New
	functions.
	(_initialize_i386_nat): New function.
	[I386_USE_GENERIC_WATCHPOINTS]: Add new	maint command
	`show-debug-regs', sets maint_show_dr to non-zero value and
	activates debugging print-outs in functions which insert, remove,
	and test watchpoints and hardware breakpoints.

	* Makefile.in (i386-nat.o): New target.
	(ALLDEPFILES): Add i386-nat.o.
@
text
@a694 4
NTSOBS = standalone.o

NTSSTART = kdb-start.o

a899 4

kdb:	$(NTSSTART) $(OBS) $(CONFIG_OBS) $(NTSOBS) $(ADD_DEPS) $(CDEPS)
	ld -o kdb $(NTSSTART) $(OBS) $(CONFIG_OBS) $(NTSOBS) init.o \
	 $(ADD_FILES) -lc $(CLIBS)
@


1.73
log
@* Makefile.in: Clean up dependencies on ../include/demangle.h.
(demangle_h): New variable.
(jv-typeprint.o, jv-valprint.o, linespec.o): Use it.
@
text
@d1150 1
a1150 1
	i386-linux-tdep.c \
d1486 2
@


1.72
log
@Cleanup solib-svr4.c by moving legacy code out to its own file.
@
text
@d556 1
d1558 1
a1558 1
	$(value_h) $(INCLUDE_DIR)/demangle.h jv-lang.h gdb_string.h \
d1562 1
a1562 1
	$(expression_h) $(value_h) $(INCLUDE_DIR)/demangle.h valprint.h \
d1970 1
a1970 1
	$(INCLUDE_DIR)/demangle.h command.h
@


1.71
log
@Delete make rules for obsolete files.
@
text
@d1908 1
a1908 1
solib-svr4.o: solib.c $(command_h) $(defs_h) $(gdbcore_h) $(inferior_h) \
d1911 2
@


1.70
log
@Remove local change that wasn't supposed to be committed.
@
text
@a1202 2
# OBSOLETE altos-xdep.o: altos-xdep.c $(defs_h) $(gdbcore_h) $(inferior_h)

a1264 3
# OBSOLETE command.o: command.c $(defs_h) $(expression_h) $(gdbcmd_h) \
# OBSOLETE 	$(gdbtypes_h) $(symtab_h) $(value_h) gdb_string.h gdb_wait.h

a1266 6
# OBSOLETE convex-tdep.o: convex-tdep.c gdb_wait.h $(defs_h) $(gdbcmd_h) \
# OBSOLETE	$(gdbcore_h) $(inferior_h)

# OBSOLETE convex-xdep.o: convex-xdep.c $(defs_h) $(gdbcmd_h) $(gdbcore_h) \
# OBSOLETE	$(inferior_h)

a1753 4
# OBSOLETE pyr-tdep.o: pyr-tdep.c $(defs_h) 

# OBSOLETE pyr-xdep.o: pyr-xdep.c $(defs_h) $(gdbcore_h) $(inferior_h) 

a1967 3

# OBSOLETE tahoe-tdep.o: tahoe-tdep.c $(OP_INCLUDE)/tahoe.h $(defs_h) \
# OBSOLETE	$(symtab_h)
@


1.69
log
@2001-03-06  J.T. Conklin  <jtc@@redback.com>

        * symtab.h (decode_line_1): Removed declaration.

        * symfile.c (#include <assert.h>): Removed.

        * arch-utils.c (#include <ctype.h>): Removed.
        * c-typeprint.c: Likewise.
        * dbxread.c: Likewise.
        * gdbtypes.c: Likewise.
        * target.c: Likewise.
        * os9kread.c: Likewise.

        * c-valprint.c (#include "demangle.h"): Removed.
        * ch-typeprint.c: Likewise.
        * eval.c: Likewise.
        * f-typeprint.c: Likewise.
        * f-valprint.c: Likewise.
        * m2-typeprint.c: Likewise.
        * typeprint.c: Likewise.
        * p-typeprint.c: Likewise.
        * valarith.c: Likewise.
        * valprint.c: Likewise.

        * m2-typeprint.c (#include "gdb_string.h"): Removed.
        * nlmread.c: Likewise.

        * mdebugread.c (#include "gdb-stabs.h"): Removed.
        * minsyms.c: Likewise.
        * mipsread.c: Likewise.
        * nlmread.c: Likewise.

        * m2-typeprint.c (#include "obstack.h"): Removed.
        * m2-valprint.c: Likewise.

        * event-loop.c (#include <setjmp.h>): Removed.
@
text
@a1114 3
flint:  $(filter-out %.y,$(LINTFILES)) $(DEPFILES:.c=.o)
	flint co.lnt $(LINTFLAGS) $^

@


1.68
log
@Update/correct copyright notices.
@
text
@d364 3
a366 1
LINTFLAGS= $(BFD_CFLAGS)
d1114 3
@


1.67
log
@* ocd.h (ocd_xfer_memory): Add ``attrib'' parameter.
* ocd.c (ocd_xfer_memory): Ditto.
* ser-ocd.c (ocd_setstopbits): New function. Add to ocd_ops.
* MAINTAINERS: Document powerpc-eabi and powerpcle-eabi as
buildable with ,-Werror.

* Makefile.in (symfile_h): Define.
(mcore-tdep.o): Add $(symfile_h), $(gdbcore_h) and $(inferior_h).
* mcore-tdep.c: Include "symfile.h", "gdbcore.h" and "inferior.h".
* MAINTAINERS: Document mcore-elf and mcore-pe as buildable with
,-Werror.

* dsrec.c (make_srec): Fix internal_error fmt arg.
* MAINTAINERS: Document i960-coff as buildable with ,-Werror.
@
text
@d1 2
a2 2
# Copyright 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997,
# 1998, 1999, 2000, 2001 Free Software Foundation, Inc.
@


1.66
log
@* Makefile.in (os9kread.o): Do not compile with WERROR_CFLAGS.
* os9kread.c (os9k_process_one_symbol): Add assert to detect
``loses if sizeof (char *) > sizeof (int)''.
@
text
@d577 1
d1627 2
a1628 1
mcore-tdep.o: mcore-tdep.c $(defs_h) $(frame_h) $(gdbcmd_h) $(value_h) $(symtab_h)
@


1.65
log
@* Makefile.in (gdbtk-cmds.o): Add $(regcache_h) to dependency
lists.
(mi-main.o): Ditto.
@
text
@d1638 2
d1641 4
a1644 3
        $(expression_h) gdb-stabs.h $(gdbcore_h) $(gdbtypes_h) language.h \
        objfiles.h stabsread.h symfile.h $(symtab_h) \
	target.h gdb_string.h
@


1.64
log
@* Makefile.in (regcache_h): Define. Add $(regcache_h) to
dependency lists.
@
text
@d1414 1
a1414 1
	gdb_string.h $(tracepoint_h) $(frame_h) source.h
d2146 1
a2146 1
		$(mi_getopt_h)
@


1.63
log
@Move frame specific register code to the new file frame.c.
@
text
@d586 1
d1187 2
a1188 1
a29k-tdep.o: a29k-tdep.c $(gdbcmd_h) $(gdbcore_h) $(inferior_h) $(defs_h)
d1190 2
a1191 1
a68v-nat.o: a68v-nat.c $(defs_h) $(gdbcore_h) $(inferior_h)
d1193 2
a1194 1
alpha-nat.o: alpha-nat.c $(defs_h) $(gdbcore_h) $(inferior_h) target.h
d1197 2
a1198 1
	$(inferior_h) $(symtab_h) $(dis-asm.h) gdb_string.h linespec.h
d1205 1
a1205 1
	gdb_string.h
d1208 1
a1208 1
		  $(gdbtypes_h) $(floatformat_h)
d1211 1
a1211 1
	$(gdbcore_h)
d1216 1
a1216 1
	objfiles.h symfile.h target.h
d1279 2
a1280 1
core-aout.o: core-aout.c $(defs_h) $(gdbcore_h) $(value_h) $(inferior_h)
d1283 1
a1283 1
	$(inferior_h) target.h gdb_string.h
d1293 1
a1293 1
	target.h gdbthread.h gdb_string.h
d1310 3
a1312 2
dink32-rom.o: dink32-rom.c monitor.h $(bfd_h) gdb_wait.h $(defs_h) $(gdbcmd_h) \
	$(inferior_h) target.h serial.h terminal.h symfile.h
d1352 1
a1352 1
	gdb_string.h
d1354 2
a1355 1
frame.o: frame.c $(defs_h) $(frame_h) $(target_h) $(value_h) $(inferior_h)
d1357 1
a1357 1
regcache.o: regcache.c $(defs_h) $(inferior_h) target.h 
d1442 1
a1442 1
	gdb_string.h target.h objfiles.h
d1449 1
a1449 1
	$(symfile_h) $(arch_utils_h)
d1453 2
a1454 1
	language.h gdb_string.h $(readline_headers) $(remote_h) linespec.h
d1466 1
a1466 1
	$(command_h) $(floatformat_h) target.h i387-nat.h
d1471 1
a1471 1
h8300-tdep.o: h8300-tdep.c $(defs_h) $(frame_h) $(symtab_h)
d1475 1
a1475 1
	$(value_h)
d1477 1
a1477 1
hp300ux-nat.o: hp300ux-nat.c $(defs_h) $(gdbcore_h) $(inferior_h)
d1480 1
a1480 1
	$(inferior_h) objfiles.h symfile.h target.h
d1482 2
a1483 1
hppab-nat.o: hppab-nat.c $(bfd_h) $(defs_h) $(inferior_h) target.h
d1485 2
a1486 1
hppah-nat.o: hppah-nat.c $(bfd_h) $(defs_h) $(inferior_h) target.h
d1492 1
a1492 1
	$(symtab_h) $(gdbcmd_h) $(command_h) $(arch_utils_h)
d1495 1
a1495 1
	language.h $(gdbcore_h) $(floatformat_h) target.h
d1497 1
a1497 1
i386b-nat.o: i386b-nat.c $(defs_h) 
d1501 2
a1502 1
i386ly-tdep.o: i386ly-tdep.c $(defs_h) $(inferior_h) target.h $(gdbcore_h)
d1504 2
a1505 1
i386m3-nat.o: i386m3-nat.c $(defs_h) $(inferior_h) $(floatformat_h) target.h
d1507 2
a1508 1
i386mach-nat.o: i386mach-nat.c $(defs_h) $(gdbcore_h) $(inferior_h) 
d1514 1
a1514 1
	$(symtab_h) symfile.h objfiles.h
d1517 1
a1517 1
	$(value_h)
d1519 1
a1519 1
i386v4-nat.o: i386v4-nat.c $(defs_h)
d1522 1
a1522 1
	$(inferior_h) language.h
d1525 2
a1526 1
	$(frame_h) $(gdbtypes_h) $(symtab_h) $(value_h) $(gdbcore_h)
d1529 1
a1529 1
	$(gdbcore_h)
d1534 2
a1535 1
	$(arch_utils_h) $(floatformat_h) objfiles.h $(INCLUDE_DIR)/elf/common.h
d1544 1
a1544 1
	gdb_string.h gdb_wait.h $(command_h)
d1548 1
a1548 1
	$(event_top_h) target.h
d1553 1
a1553 1
irix4-nat.o: irix4-nat.c $(defs_h) $(inferior_h) $(gdbcore_h)
d1556 1
a1556 1
	language.h gdb_string.h
d1581 1
a1581 1
	target.h
d1594 1
a1594 1
	gdb_wait.h $(gdbcmd_h) $(gdbcore_h)
d1607 1
a1607 1
	$(gdbcore_h) gdb_string.h
d1612 1
a1612 1
	$(language_h) $(gdbcore_h) $(floatformat_h) target.h
d1614 1
a1614 1
m88k-nat.o: m88k-nat.c $(defs_h) $(gdbcore_h) $(inferior_h)
d1616 1
a1616 1
m88k-tdep.o: m88k-tdep.c $(defs_h) $(gdbcore_h) $(inferior_h)
d1618 1
a1618 1
mac-nat.o: mac-nat.c $(defs_h) gdb_string.h
d1629 1
a1629 1
	gdb_string.h
d1636 1
a1636 1
mipsm3-nat.o: mipsm3-nat.c $(defs_h) $(inferior_h)
d1648 1
a1648 1
mips-nat.o: mips-nat.c $(defs_h) $(gdbcore_h) $(inferior_h) 
d1651 1
a1651 1
	$(arch_utils_h) \
d1659 2
a1660 1
mipsv4-nat.o: mipsv4-nat.c $(defs_h) $(gdbcore_h) $(inferior_h) target.h
d1663 1
a1663 1
	$(inferior_h) target.h serial.h terminal.h gdb_string.h
d1679 1
a1679 1
ns32km3-nat.o: ns32km3-nat.c $(defs_h) $(inferior_h)
d1697 1
a1697 1
somsolib.o: somsolib.c $(defs_h)
d1699 1
a1699 1
pa64solib.o: pa64solib.c $(defs_h)
d1701 2
a1702 2
hpux-thread.o: hpux-thread.c $(defs_h) gdbthread.h target.h inferior.h
hpux-thread.o: hpux-thread.c $(defs_h) gdbthread.h target.h inferior.h
d1723 1
a1723 1
	objfiles.h gdb-stabs.h serial.h ocd.h
d1726 1
a1726 1
	$(inferior_h) target.h
d1729 1
a1729 1
	target.h ppc-tdep.h
d1731 2
a1732 2
ppcbug-rom.o: ppcbug-rom.c monitor.h $(bfd_h) gdb_wait.h $(defs_h) $(gdbcmd_h) \
	$(inferior_h) target.h serial.h terminal.h
d1753 1
a1753 1
	$(gdbcmd_h)
d1765 1
a1765 1
	$(inferior_h) target.h terminal.h gdb_string.h
d1769 1
a1769 1
	$(version_h)
d1788 2
a1789 1
	$(inferior_h) target.h terminal.h $(remote_utils_h) gdb_string.h
d1796 1
a1796 1
	serial.h gdb_string.h
d1801 1
a1801 1
	gdb_string.h
d1805 1
a1805 1
	symfile.h
d1808 1
a1808 1
	$(inferior_h) serial.h target.h terminal.h 
d1811 1
a1811 1
	$(inferior_h) serial.h target.h terminal.h
d1814 1
a1814 1
	$(gdbcore_h) $(inferior_h) serial.h symfile.h target.h
d1817 1
a1817 1
	minimon.h target.h terminal.h gdb_string.h
d1822 1
a1822 1
	symfile.h
d1826 1
a1826 1
	objfiles.h gdb-stabs.h gdb_string.h
d1829 2
a1830 1
	$(inferior_h) $(remote_utils_h) symfile.h terminal.h gdb_string.h
d1834 1
a1834 1
	$(INCLUDE_DIR)/callback.h
d1837 1
a1837 1
	target.h gdb_string.h
d1840 2
a1841 1
	$(inferior_h) target.h terminal.h $(udiheaders) gdb_string.h
d1847 1
a1847 1
	gdb_string.h
d1852 1
a1852 1
        vx-share/xdr_rdb.h gdb_string.h
d1856 1
a1856 1
	gdb-stabs.h $(dcache_h) serial.h
d1859 1
a1859 1
	$(inferior_h) $(remote_utils_h) gdb_string.h
d1868 2
a1869 2
rom68k-rom.o: rom68k-rom.c monitor.h $(bfd_h) gdb_wait.h $(defs_h) $(gdbcmd_h) \
	$(inferior_h) target.h serial.h terminal.h
d1872 2
a1873 1
	$(gdbcore_h) xcoffsolib.h symfile.h objfiles.h gdb-stabs.h
d1876 1
a1876 1
	target.h ppc-tdep.h
d1903 2
a1904 1
	$(gdbcmd_h) $(gdbtypes_h) $(symtab_h) $(value_h) $(arch_utils_h)
d1907 2
a1908 1
	$(inferior_h) target.h serial.h terminal.h $(arch_utils_h)
d1918 1
a1918 1
	solib-svr4.h
d1925 1
a1925 1
	target.h
d1929 1
a1929 1
	$(arch_utils_h)
d1931 1
a1931 1
sparcl-tdep.o: sparcl-tdep.c $(defs_h) $(gdbcore_h) target.h
d1951 1
a1951 1
sun3-nat.o: sun3-nat.c $(defs_h) $(gdbcore_h) $(inferior_h)
d1953 1
a1953 1
sun386-nat.o: sun386-nat.c $(defs_h) $(inferior_h) $(gdbcore_h)
d1962 1
a1962 1
symm-nat.o: symm-nat.c $(defs_h) $(gdbcore_h) $(inferior_h)
d1980 1
a1980 1
tic80-tdep.o: tic80-tdep.c $(defs_h)
d1983 1
a1983 1
	objfiles.h symfile.h target.h gdb_string.h
d1985 1
a1985 1
thread.o: thread.c $(defs_h) gdbthread.h $(gdbcmd_h) target.h
d1999 1
a1999 1
ultra3-nat.o: ultra3-nat.c $(defs_h) $(gdbcore_h) $(inferior_h)
d2003 1
a2003 1
umax-xdep.o: umax-xdep.c $(defs_h) $(gdbcore_h) $(inferior_h)
d2014 1
a2014 1
	gdb_string.h
d2026 1
a2026 1
w65-tdep.o : w65-tdep.c $(gdbcore_h)
d2029 1
a2029 1
	gdb_string.h
d2056 2
a2057 1
	$(gdbcmd_h) $(gdbtypes_h) $(symtab_h) $(gdbcore_h) $(value_h)
@


1.62
log
@	* go32-nat.c: Include i387-nat.h.
	(fetch_register): New function, uses some of the guts of
	go32_fetch_registers and i387_supply_register.
	(go32_fetch_registers): Most of the code moved into
	fetch_register.  Use i387_supply_fsave.
	(store_register): Use i387_fill_fsave instead of custom code.
	(go32_store_registers): Use i387_fill_fsave.

	* Makefile.in (go32-nat.o): Depend on i387-nat.h.

	* config/i386/go32.mh (NATDEPFILES): Add i387-nat.o.
@
text
@d539 2
a540 1
	ui-file.h ui-file.c
d683 2
a684 1
	ui-file.o tui-file.o
d1346 2
@


1.61
log
@	Updates to "make TAGS":
	* Makefile.in (ALLDEPFILES): Remove altos-xdep.c arm-convert.s
	arm-xdep.c convex-tdep.c convex-xdep.c pyr-tdep.c pyr-xdep.c
	tahoe-tdep.c.
	(TAGFILES_NO_SRCDIR): Add $(SUBDIR_CLI_SRCS).
@
text
@d1453 1
a1453 1
	$(command_h) $(floatformat_h) target.h
@


1.60
log
@* signals.h: Removed.
* event-top.c (#include <signal.h>): Changed from signals.h.
* inflow.c: Likewise.
* mac-xdep.c: Likewise.
* ser-pipe.c: Likewise.
* ser-tcp.c: Likewise.
* standalone.c: Likewise.
* top.c: Likewise.
* utils.c: Likewise.
* Makefile.in: Removed signals.h from dependencies.
@
text
@d658 1
a658 1
	$(POSSLIBS)
d1133 2
a1134 3
	altos-xdep.c arm-convert.s \
	arm-linux-nat.c arm-linux-tdep.c arm-tdep.c arm-xdep.c \
	coff-solib.c convex-tdep.c convex-xdep.c \
d1158 1
a1158 1
	procfs.c pyr-tdep.c pyr-xdep.c \
d1169 1
a1169 1
	tahoe-tdep.c ultra3-nat.c ultra3-xdep.c umax-xdep.c \
@


1.59
log
@* monitor.c (#include "gdb_wait.h"): Removed.
* ocd.c: Likewise.
* ppc-bdm.c: Likewise.
* remote-adapt.c: Likewise.
* remote-array.c: Likewise.
* remote-bug.c: Likewise.
* remote-e7000.c: Likewise.
* remote-eb.c: Likewise.
* remote-es.c: Likewise.
* remote-mips.c: Likewise.
* remote-mm.c: Likewise.
* remote-nindy.c: Likewise.
* remote-os9k.c: Likewise.
* remote-rdi.c: Likewise.
* remote-rdp.c: Likewise.
* remote-sds.c: Likewise.
* remote-sim.c: Likewise.
* remote-st.c: Likewise.
* remote-udi.c: Likewise.
* remote-vx.c: Likewise.
* remote-vx29k.c: Likewise.
* remote-vx68.c: Likewise.
* remote-vx960.c: Likewise.
* remote-vxmips.c: Likewise.
* remote-vxsparc.c: Likewise.
* remote.c: Likewise.
* ser-pipe.c: Likewise.
* ser-unix.c: Likewise.
* Makefile.in: Updated dependencies.
-------------------------------------------------------------------
@
text
@d619 1
a619 1
	objfiles.h parser-defs.h partial-stab.h serial.h signals.h solib.h \
d1522 1
a1522 1
	signals.h target.h terminal.h gdbthread.h gdb_string.h
d1865 1
a1865 1
ser-mac.o: ser-mac.c $(defs_h) serial.h signals.h
d1867 1
a1867 1
ser-ocd.o: ser-ocd.c $(defs_h) serial.h signals.h gdb_string.h
d1869 1
a1869 1
ser-pipe.o: ser-pipe.c $(defs_h) serial.h signals.h gdb_string.h ser-unix.h
d1871 1
a1871 1
ser-tcp.o: ser-tcp.c $(defs_h) serial.h signals.h gdb_string.h ser-unix.h
d1965 1
a1965 1
	$(defs_h) $(gdbcmd_h) $(inferior_h) language.h signals.h \
d1980 1
a1980 1
	language.h signals.h target.h terminal.h $(readline_headers) \
@


1.58
log
@* exec.c (xfer_memory): Add attrib argument.
* infptrace.c (child_xfer_memory): Likewise.
* monitor.c (monitor_xfer_memory): Likewise.
* remote-adapt.c (adapt_xfer_inferior_memory): Likewise.
* remote-array.c (array_xfer_memory): Likewise.
* remote-bug.c (bug_xfer_memory): Likewise.
* remote-e7000.c (e7000_xfer_inferior_memory): Likewise.
* remote-eb.c (eb_xfer_inferior_memory): Likewise.
* remote-es.c (es1800_xfer_inferior_memory): Likewise.
* remote-mips.c (mips_xfer_memory): Likewise.
* remote-mm.c (mm_xfer_inferior_memory): Likewise.
* remote-nindy.c (nindy_xfer_inferior_memory): Likewise.
* remote-os9k.c (rombug_xfer_inferior_memory): Likewise.
* remote-rdi.c (arm_rdi_xfer_memory): Likewise.
* remote-rdp.c (remote_rdp_xfer_inferior_memory): Likewise.
* remote-sds.c (sds_xfer_memory): Likewise.
* remote-sim.c (gdbsim_xfer_inferior_memory): Likewise.
* remote-st.c (st2000_xfer_inferior_memory): Likewise.
* remote-udi.c (udi_xfer_inferior_memory): Likewise.
* remote-vx.c (vx_xfer_memory): Likewise.
* remote.c (remote_xfer_memory): Likewise.
* target.c (debug_to_xfer_memory, do_xfer_memory): Likewise.
* target.h (child_xfer_memory, do_xfer_memory, xfer_memory): Likewise.

* target.h (#include "memattr.h"): Added.
(target_ops.to_xfer_memory): Add attrib argument.

* wince.c (_initialize_inftarg): Removed call to set_dcache_state.
* dcache.h (set_dcache_state): Removed declaration.
* dcache.c (set_dcache_state): Removed definition

* dcache.c: Update module comment, as dcache is now enabled and
disabled with memory region attributes instead of by the global
variable "remotecache".  Add comment describing the interaction
between dcache and memory region attributes.
(dcache_xfer_memory): Add comment describing benefits of moving
cache writeback to a higher level.
(dcache_struct): Removed cache_has_stuff field.  This was used to
record whether the cache had been accessed in order to invalidate
it when it was disabled.  However, this is not needed because the
cache is write through and the code that enables, disables, and
deletes memory regions invalidate the cache.  Add comment which
suggests that we could be more selective and only invalidate those
cache lines containing data from those memory regions.
(dcache_invalidate): Updated.
(dcache_xfer_memory): Updated.

(dcache_alloc): Don't abort() if dcache_enabled_p is clear.
(dcache_xfer_memory): Removed code that called do_xfer_memory() to
perform a uncached transfer if dcache_enabled_p was clear.  This
function is now only called if caching is enabled for the memory
region.
(dcache_info): Always print cache info.

* target.c (do_xfer_memory): Add attrib argument.
(target_xfer_memory, target_xfer_memory_partial): Break transfer
into chunks defined by memory regions, pass region attributes to
do_xfer_memory().
* dcache.c (dcache_read_line, dcache_write_line): Likewise.

* Makefile.in (SFILES): Add memattr.c.
(COMMON_OBS): Add memattr.o.
(dcache.o): Add target.h to dependencies.
* memattr.c: New file.
* memattr.h: Likewise.
@
text
@d1642 1
a1642 1
monitor.o: monitor.c monitor.h $(bfd_h) gdb_wait.h $(defs_h) $(gdbcmd_h) \
d1702 1
a1702 1
	$(inferior_h) $(bfd_h) symfile.h target.h gdb_wait.h $(gdbcmd_h) \
d1744 1
a1744 1
remote-adapt.o: remote-adapt.c gdb_wait.h $(defs_h) $(gdbcore_h) \
d1747 1
a1747 1
remote-array.o: remote-array.c gdb_wait.h $(defs_h) $(gdbcore_h) target.h \
d1751 1
a1751 1
remote-rdi.o: remote-rdi.c gdb_wait.h $(defs_h) $(gdbcore_h) \
d1764 1
a1764 4
remote-d10v.o: remote-d10v.c $(bfd_h) gdb_wait.h $(defs_h) $(gdbcmd_h) \
	$(inferior_h) $(remote_utils_h) symfile.h terminal.h gdb_string.h

remote-rdp.o: remote-rdp.c gdb_wait.h $(defs_h) $(gdbcore_h) \
d1767 1
a1767 1
remote-bug.o: remote-bug.c gdb_wait.h $(defs_h) $(gdbcore_h) \
d1775 1
a1775 1
	gdb_wait.h serial.h gdb_string.h
d1778 1
a1778 1
remote-eb.o: remote-eb.c gdb_wait.h $(srcdir)/config/a29k/tm-a29k.h \
d1782 1
a1782 1
remote-es.o: remote-es.c $(bfd_h) gdb_wait.h $(command_h) $(defs_h) \
d1786 5
a1790 2
remote-hms.o: remote-hms.c gdb_wait.h $(defs_h) $(gdbcore_h) \
	$(inferior_h) serial.h target.h terminal.h gdb_string.h
d1792 1
a1792 1
remote-mips.o: remote-mips.c gdb_wait.h $(defs_h) $(gdbcmd_h) \
d1795 1
a1795 1
remote-mm.o: remote-mm.c $(bfd_h) gdb_wait.h $(defs_h) $(inferior_h) \
d1798 1
a1798 1
remote-nindy.o: remote-nindy.c $(floatformat_h) gdb_wait.h $(command_h) \
d1803 1
a1803 1
remote-os9k.o: remote-os9k.c $(defs_h) $(gdbcore_h) gdb_wait.h \
d1807 1
a1807 1
remote-sds.o: remote-sds.c $(bfd_h) gdb_wait.h $(defs_h) $(gdbcmd_h) \
d1810 1
a1810 1
remote-sim.o: remote-sim.c gdb_wait.h $(defs_h) $(gdbcore_h) \
d1814 1
a1814 1
remote-st.o: remote-st.c gdb_wait.h $(defs_h) $(gdbcore_h) serial.h \
d1817 1
a1817 1
remote-udi.o: remote-udi.c $(bfd_h) gdb_wait.h $(defs_h) $(gdbcmd_h) \
d1820 1
a1820 1
remote-vx.o: remote-vx.c gdb_wait.h complaints.h $(defs_h) $(gdbcmd_h) \
d1826 1
a1826 1
remote-vx29k.o: remote-vx29k.c gdb_wait.h complaints.h $(defs_h) $(gdbcmd_h) \
d1832 1
a1832 1
	$(bfd_h) symfile.h target.h gdb_wait.h $(gdbcmd_h) objfiles.h \
@


1.57
log
@2001-01-08  Fernando Nasser  <fnasser@@redhat.com>

	* Makefile.in (install-gdbtk): Add .itcl files to the list of files
	to be installed.
@
text
@d2 1
a2 1
# 1998, 1999, 2000 Free Software Foundation, Inc.
d524 1
a524 1
	mem-break.c minsyms.c mipsread.c nlmread.c objfiles.c \
d667 1
a667 1
	mem-break.o target.o parse.o language.o $(YYOBJ) buildsym.o \
d1291 2
a1292 1
dcache.o: dcache.c $(dcache_h) $(defs_h) $(gdbcmd_h) gdb_string.h $(gdbcore_h)
@


1.56
log
@	* Makefile.in (SUBDIR_CLI_OBS): Add cli/cli-utils.o.
	(SUBDIR_CLI_SRCS): Add cli/cli-utils.c.
	(cli_utils_h): New variable.
	(cli/cli-utils.o): New rule.
	* cli/cli-utils.c: New file.
	* cli/cli-utils.h: New file.
@
text
@d1282 2
a1283 1
	$(inferior_h) target.h language.h gdb_string.h completer.h
d1380 1
a1380 1
	for i in *.tcl *.ith *.itb images/*.gif images2/*.gif images/icons.txt images2/icons.txt tclIndex help/*.html  help/trace/*.html help/trace/index.toc help/images/*.gif; \
d1518 1
a1518 1
	$(inferior_h) target.h language.h gdb_string.h
d1600 2
a1601 1
main.o: main.c top.h $(defs_h) gdb_string.h $(event_loop_h) $(srcdir)/tui/tui-file.h
d1785 2
a1786 1
	$(inferior_h) $(remote_utils_h) terminal.h gdb_string.h
@


1.55
log
@2000-12-20  Fernando Nasser  <fnasser@@redhat.com>

        * configure.in: Rename CONFIG_LOBS to CONFIG_LIB_OBS.
        * Makefile.in: Ditto.
        * configure: Regenerate.
@
text
@d144 1
a144 1
	cli-decode.o cli-script.o cli-cmds.o cli-setshow.o
d146 2
a147 1
	cli/cli-decode.c cli/cli-script.c cli/cli-cmds.c cli/cli-setshow.c
d608 1
d2083 3
@


1.54
log
@2000-12-20  Fernando Nasser  <fnasser@@redhat.com>

        * Makefile.in (UIOUT_CFLAGS): New macro. CFLAGS needed for uiout code
        to be compiled.  Defines UI_OUT.
        (SUBDIR_MI_CFLAGS): Defines MI_OUT, not UI_OUT.
        (INTERNAL_WARN_CFLAGS): Also include UIOUT_CFLAGS.
        * configure.in (UIOUT_CFLAGS): New configuration variable.
        (--with-uiout): New configuration option.  Causes uiout code to
        be compiled, instead of the old *printf one.
        * configure: Regenerate.
        * top.c (print_gdb_version): Test for and print MI_OUT, not UI_OUT.
        * testsuite/lib/mi-support.exp (mi_gdb_start): Test for MI_OUT,
        not UI_OUT.
@
text
@d283 1
a283 1
CONFIG_LOBS= @@CONFIG_LOBS@@
d650 1
a650 1
	   $(REMOTE_OBS) $(SIM_OBS) $(CONFIG_LOBS)
@


1.53
log
@2000-12-11  Fernando Nasser  <fnasser@@redhat.com>

        * Makefile.in (CONFIG_LOBS): New macro.  Configured to the files
        that must be added to the gdblib itself.
        (DEPFILES): Use CONFIG_LOBS, not CONFIG_OBS.
        (INIT_FILES): Include CONFIG_OBS.
        (gdb$(EXEEXT)): Depend on CONFIG_OBS and link with it.
        (kdb): Ditto.
        * configure.in (CONFIG_LOBS): New variable. Object files that must
        be added to gdblib for the specific configuration.
        * configure: Regenerate.
@
text
@d109 3
d175 1
a175 1
	-DUI_OUT=1
d324 1
a324 1
	$(INTL_CFLAGS) $(ENABLE_CFLAGS) \
@


1.52
log
@2000-12-11  Fernando Nasser  <fnasser@@redhat.com>

        * Makefile.in (SUBDIR_GDBTK_OBS, SUBDIR_GDBTK_SRCS,
        SUBDIR_GDBTK_DEPS, SUBDIR_GDBTK_INITS, SUBDIR_GDBTK_LDFLAGS,
        SUBDIR_GDBTK_CFLAGS): New macros.  For gdbtk subdir.
        * configure.in: Fix typo.  It is CONFIG_OBS not CONFIG_OJS.
        Use the SUBDIR_GDBTK_* macros instead of hard coded file names.
        * configure: Regenerate.
@
text
@d280 1
d647 1
a647 1
	   $(REMOTE_OBS) $(SIM_OBS) $(CONFIG_OBS)
d779 1
a779 1
INIT_FILES = $(OBS) $(TSOBS) $(CONFIG_INITS)
d820 1
a820 1
gdb$(EXEEXT): main.o libgdb.a $(ADD_DEPS) $(CDEPS) $(TDEPLIBS)
d822 3
a824 1
	$(HLDENV) $(CC_LD) $(INTERNAL_LDFLAGS) $(WIN32LDAPP) -o gdb$(EXEEXT) main.o libgdb.a $(TDEPLIBS) $(TUI_LIBRARY) $(CLIBS) $(LOADLIBES)
d893 3
a895 3
kdb:	$(NTSSTART) $(OBS) $(NTSOBS) $(ADD_DEPS) $(CDEPS)
	ld -o kdb $(NTSSTART) $(OBS) $(NTSOBS) init.o $(ADD_FILES) \
	  -lc $(CLIBS)
@


1.51
log
@* Makefile.in (symfile.o): Add gdb-stabs.h to dependencies list.
@
text
@d143 1
a143 1
	cli/cli-decode.c cli/cli-script.c cli/cli-cmds.c  cli/cli-setshow.c
d169 1
a169 1
	mi/mi-cmds.c mi/mi-parse.c mi/mi-main.c
d262 12
@


1.50
log
@Really check-in:
* Makefile.in (varobj.o): Delete special .c.o rule supressing
-Werror flag.
@
text
@d1906 3
a1908 3
	$(expression_h) $(gdbcmd_h) $(gdbcore_h) $(gdbtypes_h) \
	language.h objfiles.h symfile.h $(symtab_h) target.h \
	gdb_string.h completer.h
@


1.49
log
@2000-12-01  Fernando Nasser  <fnasser@@redhat.com>

        * cli/cli-decode.c: New file. Handle lists of commands, their decoding
        and documentation.
        (add_cmd, deprecate_cmd, add_abbrev_cmd, add_alias_cmd, add_prefix_cmd,
        add_abbrev_prefix_cmd, not_just_help_class_command, empty_sfunc,
        add_set_cmd, add_set_enum_cmd, add_set_auto_boolean_cmd,
        add_show_from_set, delete_cmd, apropos_cmd, help_cmd, help_list,
        help_all, print_doc_line, help_cmd_list, find_cmd, lookup_cmd_1,
        undef_cmd_error, lookup_cmd, deprecated_cmd_warning,
        lookup_cmd_composition, complete_on_cmdlist, complete_on_enum):
        Moved here from command.c.
        (add_info, add_info_alias, add_com, add_com_alias): Moved here from
        top.c.
        * cli/cli-decode.h: Definitions/declarations for the above.
        * cli/cli-cmds.c: New file.  GDB CLI commands.
        (error_no_arg, info_command, show_command, help_command, show_version,
        quit_command, pwd_command, cd_command, echo_command, shell_escape,
        make_command, show_user, set_debug, show_debug, init_cmd_lists):
        Moved here from top.c.
        (apropos_command): Moved here from command.c.
        (complete_command, source_command): Moved here (part) from top.c.
        (is_complete_command): New function. Checks if a command is the
        "complete" command.
        (init_cli_cmds): New function. Add commands to the CLI (from code
        previously in top.c.
        * cli/cli-cmds.h: Definitions/declarations for the above.
        * cli/cli-script.c: New file. GDB CLI command scripting.
        (build_command_line, get_command_line, print_command_lines,
        print_command_line, execute_user_command, execute_control_command,
        while_command, if_command, arg_cleanup, setup_user_args, locate_arg,
        insert_args, realloc_body_list, read_next_line,
        recurse_read_control_structure, read_command_lines, free_command_lines,
        do_free_command_lines_cleanup, make_cleanup_free_command_lines,
        validate_comname, user_defined_command, define_command,
        document_command, source_cleanup_lines, do_fclose_cleanup,
        show_user_1): Moved here from top.c.
        (script_from_file): New function. Implements execution of a script
        contained in a file (part of code for the source_command() that used
        to exist in top.c).
        * cli/cli-script.h: Definitions/declarations for the above.
        * cli/cli-setshow.c: New file. Handle set and show GDB CLI commands.
        (parse_auto_binary_operation, parse_binary_operation,
        do_setshow_command, cmd_show_list): Moved here from command.c.
        * cli/cli-setshow.h: Definitions/declarations for the above.
        * top.c: Remove all CLI code, except the command loop.
        (gdb_init): Call init_cli_cmds().
        * command.c: Remove obsolete file.
        * command.h: Mark as DEPRECATED.
        * gdbcmd.h: Ditto.
        * call-cmds.h: Ditto.
        * Makefile.in (SFILES): Remove command.c.
        (COMMON_OBS): Remove command.o.
        (command.o): Remove obsolete target.
        (cli_decode_h, cli_cmds_h, cli_script_h, cli_setshow_h): New macros.
        Refer to CLI header files.
        (cli-decode.o, cli-cmds.o, cli-setshow.o, cli-script.o): New targets.
        (SUBDIR_CLI_OBS, SUBDIR_CLI_SRCS, SUBDIR_CLI_DEPS, SUBDIR_CLI_INITS,
        SUBDIR_CLI_LDFLAGS, SUBDIR_CLI_CFLAGS, SUBDIR_CLI_ALL, SUBDIR_CLI_CLEAN,
        SUBDIR_CLI_INSTALL, SUBDIR_CLI_UNINSTALL): New macros for new cli
        subdirectory.
        * configure.in (enable_gdbcli): New option. Include the CLI in the
        executable (cannot be disabled yet).
        (CONFIG_OBS, CONFIG_DEPS, CONFIG_SRCS, CONFIG_INITS, ENABLE_CFLAGS,
        CONFIG_ALL, CONFIG_CLEAN, CONFIG_INSTALL, CONFIG_UNINSTALL): Add
        the corresponding SUBDIR_CLI_* macros if CLI requested.
        * configure: Regenerate.
@
text
@d2032 1
d2035 1
a2035 1
	$(CC) -c $(INTERNAL_WARN_CFLAGS) $(NO_WERROR_CFLAGS) $<
@


1.48
log
@2000-11-30  Fernando Nasser  <fnasser@@redhat.com>

        * linespec.h: New file. Declarations for linespec.c.
        * linespec.c, alpha-tdep.c, breakpoint.c, parse.c, source.c,
        symtab.c, tracepoint.c: Include the above.
        * completer.c: New file. Line completion stuff for GDB.
        (get_gdb_completer_word_break_characters,
        get_gdb_completer_quote_characters): New functions. Accessors for
        useful completer internal data.
        (filename_completer, line_completion_function, skip_quoted): Moved
        here from top.c.
        * completer.h: New file. Declarations for the above.
        * linespec.c (decode_line_1): Use
        get_gdb_completer_word_break_characters and
        get_gdb_completer_quote_characters.
        * top.c: Include completer.h.
        (filename_completer, line_completion_function, skip_quoted):
        Moved to completer.c.
        * corefile.c, exec.c, source.c, symfile.c, linespec.c: Include
        completer.h.
        * Makefile.in (SFILES): Add completer.c.
        (COMMON_OBS): Add completer.o.
        (completer.o): New target.
        (linespec.o, alpha-tdep.o, breakpoint.o, parse.o, source.o,
        symtab.o, tracepoint.o): Add linespec.h to dependencies list.
        (corefile.o, exec.o, source.o, symfile.o, linespec.o): Add completer.h
        to dependencies list.
@
text
@d138 16
d496 1
a496 1
	command.c complaints.c completer.c corefile.c cp-valprint.c dbxread.c \
d567 1
a568 1
call_cmds_h =	call-cmds.h
d587 5
d645 1
a645 1
	symtab.o symfile.o symmisc.o linespec.o infcmd.o infrun.o command.o \
d1238 2
a1239 2
command.o: command.c $(defs_h) $(expression_h) $(gdbcmd_h) \
	$(gdbtypes_h) $(symtab_h) $(value_h) gdb_string.h gdb_wait.h
d2036 26
@


1.47
log
@2000-11-10  Fernando Nasser  <fnasser@@totem.toronto.redhat.com>

	* symtab.c (decode_line_1, total_number_of_methods, find_methods,
	build_command_line_spec, find_toplevel_char, decode_line_2):
	Move to linespec.c.
	* linespec.c: New file. Routines that handle linespecs, formerly
	in symtab.c.
	* symtab.h: Export find_line_symtab and find_function_start_sal,
	* Makefile.in: Add linespec.c.
@
text
@d480 1
a480 1
	command.c complaints.c corefile.c cp-valprint.c dbxread.c \
d626 1
a626 1
	event-loop.o event-top.o inf-loop.o \
d1151 1
a1151 1
	$(inferior_h) $(symtab_h) $(dis-asm.h) gdb_string.h
d1173 1
a1173 1
	gdb-events.h
d1241 1
a1241 1
	$(inferior_h) target.h language.h gdb_string.h
d1295 1
a1295 1
	target.h language.h gdb_string.h
d1399 1
a1399 1
	language.h gdb_string.h $(readline_headers) $(remote_h)
d1655 1
a1655 1
	gdb_string.h
d1851 1
a1851 1
	gdb_string.h source.h
d1887 1
a1887 1
	gdb_string.h
d1900 1
a1900 1
	gdb_string.h
d1902 3
a1904 2
linespec.o: linespec.c $(defs_h) $(gdbcmd_h) $(gdbtypes_h) objfiles.h \
	symfile.h $(symtab_h) $(INCLUDE_DIR)/demangle.h inferior.h
d1916 3
d1921 2
a1922 1
	$(remote_utils_h) gdb_string.h $(event_loop_h) $(event_top_h) $(version_h)
@


1.46
log
@	Add auto-solib-add support for AIX, remove obsolete and unused
	SOLIB_SYMBOLS_MANUAL code, cleanup of AIX shared library handling code.
	* rs6000-nat.c (vmap_symtab):  Do not try to modify offsets
	if symbols are not yet loaded.
	(vmap_add_symbols):  New function to add symbols for a vmap entry.
	(add_vmap):  Turn errors into warnings, return NULL vmap upon
	failure. Add symbols via vmap_add_symbols only if requested.
	(xcoff_relocate_core):  Allow debugging of core files without an
	executable file. Handle NULL returns from add_vmap gracefully.
	* xcoffsolib.c (solib_add):  Remove, no longer needed.
	(solib_info):  Do not check for new shared libraries if there is no
	inferior process.
	(sharedlibrary_command):  Made static.
	Do not check for new shared libraries if there is no inferior process.
	Add symbols for requested shared libraries via vmap_add_symbols.
	(_initialize_solib):  Add `set auto-solib-add' command.
	* xcoffsolib.h (vmap_add_symbols):  Add prototype declaration.

	* config/rs6000/tm-rs6000.h (PC_LOAD_SEGMENT):  Move from here ...
	* config/rs6000/nm-rs6000.h:  ... to here, this is an AIX native
	feature.
	* config/powerpc/tm-macos.h, config/powerpc/tm-ppc-eabi.h,
	config/powerpc/tm-ppc-nw.h, config/rs6000/tm-rs6000ly.h:
	Remove #undef PC_LOAD_SEGMENT.
	* config/powerpc/aix.mt, config/rs6000/aix4.mt, config/rs6000/rs6000.mt
	(TDEPFILES):  Move xcoffsolib.o from here ...
	* config/powerpc/aix.mh, config/rs6000/aix4.mh, config/rs6000/rs6000.mh
	(NATDEPFILES):  ... to here, xcoffsolib.o contains AIX native code
	only.
	* rs6000-tdep.c:  Remove #include xcoffsolib.h, no longer needed.
	* xcoffsolib.h (xcoff_relocate_symtab_hook):  Remove declaration.
	* rs6000-nat.c (_initialize_core_rs6000):  Remove setting of
	xcoff_relocate_symtab_hook, no longer needed.
	* xcoffsolib.c (solib_info, sharedlibrary_command):  Remove
	xcoff_relocate_symtab_hook indirection, call xcoff_relocate_symtab
	directly, as xcoffsolib.c is now compiled in native AIX configurations
	only.
	* Makefile.in:  Update dependencies for rs6000-tdep.o, rs6000-nat.o
	and xcoffsolib.o.
@
text
@d495 1
a495 1
	symmisc.c symtab.c target.c thread.c top.c tracepoint.c \
d624 1
a624 1
	symtab.o symfile.o symmisc.o infcmd.o infrun.o command.o \
d1901 3
@


1.45
log
@Reorganize solib.c.
@
text
@d1804 1
a1804 1
	xcoffsolib.h
d1807 1
a1807 1
	target.h xcoffsolib.h ppc-tdep.h
d1970 2
a1971 1
xcoffsolib.o: xcoffsolib.c $(bfd_h) $(defs_h) xcoffsolib.h
@


1.44
log
@Whitespace tweak: replace leading spaces with a hard tab.
@
text
@d1843 5
a1847 1
	objfiles.h gnu-regex.h symfile.h target.h gdb_string.h
@


1.43
log
@2000-08-24  Pierre Muller  <muller@@ics.u-strasbg.fr>
       * Makefile.in: add rules to compile and link pascal specific files.
       * config/djgpp/fnchange.lst: add substitution for p-exp.tab.c.
@
text
@d638 1
a638 1
 	m2-lang.o p-lang.o p-typeprint.o p-valprint.o \
@


1.42
log
@Revert SER_HARDWIRE regression.
@
text
@d491 2
a492 1
	mem-break.c minsyms.c mipsread.c nlmread.c objfiles.c parse.c \
d584 1
a584 1
	m2-lang.h \
d638 1
a638 1
	m2-lang.o \
d658 1
a658 1
	f-exp.tab.c m2-exp.tab.c
d661 1
a661 1
	f-exp.tab.o m2-exp.tab.o
d809 1
d815 1
d908 1
a908 1
		f-exp.tab.c m2-exp.tab.c
d1042 18
d1062 1
a1062 1
.PRECIOUS: jv-exp.tab.c
d1534 10
d1988 4
@


1.41
log
@Thu Jul 27 17:38:35 2000  Andrew Cagney  <cagney@@b1.cygnus.com>

        * configure.in (targetfile): Ignore TM_FILE, don't just issue
        warning.
        (tm_h, xm_h, nm_h, GDB_TM_FILE, GDB_XM_FILE, GDB_NM_FILE): Define.
        * acconfig.h (GDB_XM_FILE, GDB_TM_FILE, GDB_NM_FILE): Add.
        * config/nm-empty.h: Delete.
        * defs.h (xm.h, nm.h, tm.h): Only include when GDB_XM_FILE,
        GDB_NM_FILE or GDB_TM_FILE defined.
        * Makefile.in (defs_h): Replace tm.h, xm.h and nm.h with tm_h,
        xm_h and nm_h macro that are defined by configure.
        (tm_h, xm_h, tm_h): New.
        * configure, config.in: Regenerate
        * TODO: Update.
@
text
@d1 2
a2 2
# Copyright 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000
# Free Software Foundation, Inc.
d345 1
a345 1
SER_HARDWIRE = ser-unix.o ser-pipe.o
d371 1
@


1.40
log
@Make GNU/Linux/PPC work again.
@
text
@d551 4
a554 1
defs_h =	defs.h xm.h tm.h nm.h config.status config.h gdbarch.h ui-file.h
@


1.39
log
@2000-07-07  Michael Snyder  <msnyder@@cleaver.cygnus.com>

        * findvar.c (_initialize_findvar, build_findvar, write_fp, read_fp,
        generic_target_write_fp, generic_target_read_fp, write_sp, read_sp,
        generic_target_write_sp, generic_target_read_sp, write_pc, read_pc,
        generic_target_write_pc, generic_target_read_pc, write_pc_pid,
        read_pc_pid, supply_register, write_register_pid, write_register,
        read_register_pid, read_register, write_register_bytes,
        read_register_bytes, write_register_gen, read_register_gen,
        registers_fetched, registers_changed, find_saved_register,
        read_relative_register_raw_bytes, default_get_saved_register,
        read_relative_register_raw_bytes_for_frame, get_saved_register):
        Move from this file into new file regcache.c.
        (register_valid, registers_pid, registers): Ditto.
        * regcache.c: New file to hold the register cache.
        (register_cached): New function to read register_valid array.
        * value.h (register_cached): Declare.
        * defs.h (default_get_saved_register): Delete decl of static function.
        * Makefile.in: Add regcache module.
@
text
@d1630 1
a1630 1
	target.h
d1772 1
a1772 1
	target.h xcoffsolib.h
@


1.38
log
@Pass infodir down to sub-makes.
@
text
@d1 2
a2 2
# Copyright 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997,
# 1998, 1999, 2000 Free Software Foundation, Inc.
d345 1
a345 1
SER_HARDWIRE = @@SER_HARDWIRE@@
a370 1
	"infodir=$(infodir)" \
d483 1
a483 1
	findvar.c gdbarch.c arch-utils.c gdbtypes.c \
d617 1
a617 1
COMMON_OBS = version.o blockframe.o breakpoint.o findvar.o stack.o thread.o \
d620 1
a620 1
	expprint.o environ.o \
d1277 2
@


1.37
log
@Restore setting of SER_HARDWIRE.  Lost during rs6000 merge.
@
text
@d371 1
@


1.36
log
@	* rs6000-tdep.c: Changes throughout for multi-arch 64-bit
	support.  Incorporate most of tm-rs6000.h.
	(find_toc_address_hook): Rename to rs6000_find_toc_address_hook.
	(rs6000_set_host_arch_hook): Declare.
	(read_memory_addr): Define.
	(pop_frame): Rename to rs6000_pop_frame.
	(rs6000_pop_frame, rs6000_fix_call_dummy, rs6000_push_arguments,
	rs6000_frame_saved_pc, rs6000_frame_chain): Remove non-generic
	dummy frame handling.
	(branch_dest, rs6000_pop_frame, rs6000_skip_trampoline_code,
	rs6000_frame_saved_pc, frame_get_saved_regs,
	frame_initial_stack_address, rs6000_frame_chain,
	rs6000_convert_from_func_ptr_addr): Call read_memory_addr instead
	of read_memory_integer.
	(branch_dest, rs6000_pop_frame, rs6000_push_arguments,
	rs6000_skip_trampoline_code, rs6000_frame_saved_pc,
	frame_get_saved_regs, frame_initial_stack_address,
	rs6000_frame_chain): Replace 4 with TDEP->wordsize.
	(skip_prologue): Recognize some 64-bit stack adjustments.
	(push_dummy_frame, pop_dummy_frame, set_processor,
	show_processor): Delete.
	(frame_get_saved_regs): Manipulate saved register addresses using
	CORE_ADDR instead of int.
	(rs6000_create_inferior): New function.
	(register_names_*[]): Change to struct reg registers_*[].
	(variants[]): Assimilate into multi-arch approach.
	(register_names_*[], variants[]): Refer to pre-PowerPC
	architectures as POWER instead of RS6000.
	* rs6000-nat.c: Ubiquitous changes for 64-bit support.
	(vmap_secs, xcoff_relocate_symtab): Cast addresses
	to unsigned long to avoid sign-extension errors.
	(set_host_arch): New function.
	(xcoff_relocate_symtab): Try disabling usleep(36000) workaround.
	(rs6000_core_fns): Use new bfd_target_xcoff_flavour.
	(_initialize_core_rs6000): Initialize rs6000_set_host_arch_hook.
	* symfile.c (find_sym_fns): Remove special xcoff kludge.
	* xcoffread.c (secnum_to_bfd_section): Initialize args.objfile.
	(process_linenos): Query line struct size from coff
	backend instead of using compile-time constant.
	(enter_line_range): Likewise.
	(read_xcoff_symtab): Pass "XCOFF64" instead of "XCOFF" to
	record_debugformat() if appropriate.
	(process_xcoff_symbol): Access symbol addresses using
	SYMBOL_VALUE_ADDRESS instead of SYMBOL_VALUE.
	(read_symbol_lineno): Retrieve XCOFF64 symbol names from strtbl.
	(scan_xcoff_symtab): Likewise.  Query syment struct size from
	coff backend instead of using compile-time constant.
	(xcoff_sym_fns): Set flavour to bfd_target_xcoff_flavour.
	* Makefile.in (INTERNAL_LDFLAGS): Add $(MH_LDFLAGS) to list of flags
	that this Makefile variable get set to.  (From Kevin Buettner.)
	* config/powerpc/aix.mh (MH_LDFLAGS): Add linker flags so that
	the TOC doesn't overflow.  (From Kevin Buettner.)
	* config/powerpc/tm-ppc-aix.h: Move config decisions to
	multi-arched rs6000-tdep.c.
	* config/rs6000/tm-rs6000.h: Likewise.
	(GDB_MULTI_ARCH): Define.
	(skip_trampoline_code): Rename to rs6000_skip_trampoline_code.
	(is_magic_function_pointer): Replace with
	rs6000_convert_from_func_ptr_addr.
	(TARGET_CREATE_INFERIOR_HOOK): Define.
	(find_toc_address_hook): Rename to rs6000_find_toc_address_hook.
	(rs6000_set_host_arch_hook): Declare.
	* config/rs6000/nm-rs6000.h (CHILD_XFER_MEMORY): Define.
@
text
@d1 2
a2 2
# Copyright 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000
# Free Software Foundation, Inc.
d345 1
a345 1
SER_HARDWIRE = ser-unix.o ser-pipe.o
@


1.35
log
@Set SER_HARDWIRE using autoconf instead of via XDEPFILES.  Include
ser-tcp.o by default.
@
text
@d302 1
a302 1
INTERNAL_LDFLAGS = $(CFLAGS) $(GLOBAL_CFLAGS) $(PROFILE_CFLAGS) $(LDFLAGS) $(CONFIG_LDFLAGS) @@HLDFLAGS@@
d345 1
a345 1
SER_HARDWIRE = @@SER_HARDWIRE@@
@


1.34
log
@The attatched moves the remaining guff from gdbarch.{h,c,sh} to
arch-utils.{h,c}.  The ``set architecutre'' and ``set endian''
commands (part of the move) were implemented to use add_set_enum_cmd()
so that ``set architecture <tab>'' works.
@
text
@d345 1
a345 1
SER_HARDWIRE = ser-unix.o ser-pipe.o
@


1.33
log
@Have TUI use the same configury mechanism as MI.
@
text
@d1366 4
d1408 1
a1408 1
	$(symtab_h) $(gdbcmd_h) $(command_h)
d1797 1
a1797 1
	$(gdbcmd_h) $(gdbtypes_h) $(symtab_h) $(value_h)
d1800 1
a1800 1
	$(inferior_h) target.h serial.h terminal.h
@


1.32
log
@From branch.  Bump VERSION number.
@
text
@a64 8
# If the user configured GDB to include the TUI, the name of the tui
# library goes here.
TUI_LIBRARY = @@TUI_LIBRARY@@

# If the user configured GDB to include the TUI, the all-tui 
# target goes here.
BUILD_TUI = @@BUILD_TUI@@

a136 5
# Where is the TUI library?  Typically in tui/.
TUI_DIR=tui
TUI_SRC = $(srcdir)/$(TUI_DIR)
TUI_CFLAGS= -I$(TUI_SRC)

d162 27
d292 1
a292 1
	$(INTL_CFLAGS) $(TUI_CFLAGS) $(ENABLE_CFLAGS) \
a853 7
# Have the TUI library depend on a phony target, so we'll always
# recurse and make sure it's up to date.  If it is, then the file will
# be unchanged, and we won't rebuild it.
# .PHONY: check-tui
all-tui: 
	@@(cd tui; ${MAKE} ${FLAGS_TO_PASS} all)

d1996 65
@


1.31
log
@	* Makefile.in (gdbtypes.o, varobj.o): Depend on wrapper.h.

	* wrapper.h (gdb_value_subscript, wrap_value_subscript): Add
	prototypes.
@
text
@d313 1
a313 1
VERSION = 20000204
@


1.30
log
@2000-05-10  Michael Snyder  <msnyder@@seadog.cygnus.com>
	Make Sparc a Multi-Arch target.  Discard PARAMS macro (require ANSI).
	* sparc-tdep.c: include arch-utils.h.
	(SPARC_HAS_FPU, FP_REGISTER_BYTES, FP_MAX_REG NUM, SPARC_INTREG_SIZE,
	DUMMY_REG_SAVE_OFFSET): provide multi-arch-compatible definitions.
	(GDB_TARGET_IS_SPARC64): make into a runtime test.
	(struct frame_extra_info): Define, use instead of the macro.
	(Many places): Use alloca instead of statically allocated buffers
	that depend on a multi-arch variable such as MAX_REGISTER_RAW_SIZE.
	(sparc_extract_struct_value_address): Accept a pointer arg instead
	of an array sized by REGISTER_BYTES.
	(examine_prologue): Accept a pointer to an array of CORE_ADDR,
	instead of the defunct struct frame_saved_regs.  Recognize new
	Sparc64 store instructions as part of the prologue.  Ignore the
	destination of a frame store when parsing the prologue (so long
	as it's on the stack).
	(sparc_push_dummy_frame): Fix incorrect buffer offset for PSTATE.
	(sparc_frame_find_saved_regs): Accept a ptr to an array of CORE_ADDR
	instead of the defunct struct frame_saved_regs.
	(supply_gregset): Discard unnecessary 'zerobuf': just send NULL to
	supply_register.  Provide 4-byte offset to compensate for diff
	between size of the prgreg_t elements on a 64-bit host and size
	of the registers for a 32-bit target.  Fill all inaccessible regs
	with zero so they won't keep being requested again and again.
	(fill_gregset): Handle 32/64 size difference between registers
	and prgreg_t.  Handle as many new 64-bit regs as possible.
	(supply_fpregset, fill_fpregset): Attempt to handle 64-bit world.
	(sparc_push_arguments): Rename to sparc32_push_arguments.
	Copy arguments into registers as well as onto stack, so that the
	CALL_DUMMY (code pushed onto the target stack) is not required.
	(sparc_extract_return_value): Rename to sparc32_extract_return_value.
	(sparc_store_return_value): Use memset instead of bzero.
	Use write_register_gen instead of write_register_bytes.
	(sparclet_store_return_value): New function.
	(_initialize_sparc_tdep): Call register_gdbarch_init to activate
	the gdbarch multi-architecture system.
	(sp64_push_arguments): Rename to sparc64_push_arguments.
	Extend to store arguments in general registers as well as on stack.
	(sparc64_extract_return_value): Rename to sp64_extract_return_value.
	Use as a private function, to be called by the new external function
	sparc64_extract_return_value.
	(sparclet_extract_return_value): New function.
	(sparc32_stack_align, sparc64_stack_align, sparc32_register_name,
	sparc64_register_name, sparc_print_extra_frame_info,
	sparclite_register_name, sparclet_register_name,
	sparc_push_return_address, sparc64_use_struct_convention,
	sparc32_store_struct_return, sparc64_store_struct_return,
	sparc32_register_virtual_type, sparc64_register_virtual_type,
	sparc32_register_size, sparc64_register_size,
	sparc32_register_byte, sparc64_register_byte,
	sparc_gdbarch_skip_prologue, sparc_convert_to_virtual,
	sparc_convert_to_raw, sparc_frame_init_saved_regs,
	sparc_frame_address, sparc_gdbarch_fix_call_dummy,
	sparc_coerce_float_to_double, sparc_call_dummy_address,
	sparc_y_regnum, sparc_reg_struct_has_addr, sparc_intreg_size,
	sparc_return_value_on_stack): New functions supporting multi-arch.
	(sparc_gdbarch_init): New function; initialize multi-arch.
	(struct gdbarch_tdep): Define, use for private multi-arch data.
	* config/sparc/tm-sparc.h: Move definitions around, enclose with
	#ifdef GDB_MULTI_ARCH tests, provide some multi-arch alternate
	definitions.  Add enums for register names, to help debugging gdb.
	This header file must work for non-multi-arch and for multi-arch.
	* config/sparc/tm-sp64.h: Add GDB_MULTI_ARCH configuration.  Also add
	AT_ENTRY_POINT definitions for CALL_DUMMY, for non-multi-arch case.
	Define GDB_MULTI_ARCH.
	* config/sparc/tm-sparclet.h: Add GDB_MULTI_ARCH configuration.
	Do not define GDB_MULTI_ARCH (bfd does not correctly identify target).
	* config/sparc/tm-sparclite.h: Ditto.
	* config/sparc/tm-sun4sol2.h: Define GDB_MULTI_ARCH.
	* sparclet-rom.c (sparclet_regnames): Initialize explicitly, to
	avoid using deprecated REGISTER_NAMES macro.
	* Makefile.in: Let sparc-tdep.c depend on arch-utils.h.
@
text
@d1370 1
a1370 1
	$(value_h) gdb_string.h
d1947 1
a1947 1
	$(language_h) valprint.h varobj.h
@


1.29
log
@	Remove obsolete Gould configuration:
	* configure.host, configure.tgt: Remove Gould configs.
	* Makefile.in: Remove Gould-related actions.
	* gould-xdep.c, gould-tdep.c, config/gould/*: Remove files.
	* NEWS: Mention removal.
@
text
@d1805 2
a1806 1
	$(inferior_h) objfiles.h symfile.h target.h gdb_string.h
@


1.28
log
@Add arch-utils.h to IA-64 *-tdep.c files.
@
text
@d1065 1
a1065 1
	go32-nat.c gould-tdep.c gould-xdep.c h8300-tdep.c h8500-tdep.c \
a1376 5

# OBSOLETE gould-tdep.o: gould-tdep.c $(OP_INCLUDE)/np1.h $(defs_h) $(frame_h) \
# OBSOLETE	$(gdbcore_h) $(symtab_h)

# OBSOLETE gould-xdep.o: gould-xdep.c $(defs_h) $(gdbcore_h) $(inferior_h)
@


1.27
log
@Only re-generate copying.c when maintainer mode.
@
text
@d1073 1
a1073 1
	ia64-linux-nat.c ia64-tdep.c \
d1437 2
d1440 1
a1440 1
	$(floatformat_h) objfiles.h $(INCLUDE_DIR)/elf/common.h
@


1.26
log
@Cleanup USE_INCLUDED_REGEX.  Move -D to acconfig.h.
@
text
@a943 10
# When DJGPP Make runs on MS-DOS, it downcases all file names, so
# it doesn't find COPYING, and wants to make it...
copying.txt:
	test -f copying.txt || \
	  (test "$$LN_S" = "ln -s" && \
	    ln -s $(srcdir)/COPYING copying.txt;) || \
	  cp -p $(srcdir)/COPYING copying.txt 2>/dev/null || \
	  ln $(srcdir)/COPYING copying.txt 2>/dev/null || \
	  cp $(srcdir)/COPYING copying.txt

d945 5
a949 2
copying.c: copying.txt copying.awk
	awk -f $(srcdir)/copying.awk < copying.txt > copying.c
d1196 3
a1198 1
copying.o: copying.c $(defs_h) $(gdbcmd_h)
@


1.25
log
@Rename gdbarch-utils.[hc] to arch-utils.[hc]
@
text
@a119 1
REGEX_CFLAGS = @@REGEX_CFLAGS@@
d279 1
a279 1
	$(REGEX_CFLAGS) $(GDB_WARN_CFLAGS)
d956 1
a956 1
	awk -f $(srcdir)/copying.awk < $(srcdir)/copying.txt > copying.c
@


1.25.2.1
log
@Only try to re-generate copying.c when maintainer-mode is enabled.
@
text
@d945 10
d956 2
a957 5
$(srcdir)/copying.c: @@MAINTAINER_MODE_TRUE@@ \
		$(srcdir)/COPYING $(srcdir)/copying.awk
	awk -f $(srcdir)/copying.awk \
		< $(srcdir)/COPYING > $(srcdir)/copying.tmp
	mv $(srcdir)/copying.tmp $(srcdir)/copying.c
d1204 1
a1204 3
# Provide explicit rule/dependency - works for more makes.
copying.o: $(srcdir)/copying.c $(defs_h) $(gdbcmd_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/copying.c
@


1.25.2.2
log
@Add rm tui/Makefile to distclean rule.
Document real fix.
@
text
@a884 1
	rm -f tui/Makefile
@


1.25.2.3
log
@Bump GDB version to 4.95.0
@
text
@d314 1
a314 1
VERSION = 4.95.0
@


1.25.2.4
log
@	Remove obsolete Gould configuration:
	* configure.host, configure.tgt: Remove Gould configs.
	* Makefile.in: Remove Gould-related actions.
	* gould-xdep.c, gould-tdep.c, config/gould/*: Remove files.
	* NEWS: Mention removal.
@
text
@d1067 1
a1067 1
	go32-nat.c h8300-tdep.c h8500-tdep.c \
d1379 5
@


1.25.2.5
log
@Bump version to 4.95.1
@
text
@d314 1
a314 1
VERSION = 4.95.1
@


1.25.2.6
log
@	* Makefile.in (gdbtypes.o, varobj.o): Depend on wrapper.h.

	* wrapper.h (gdb_value_subscript, wrap_value_subscript): Add
	prototypes.
@
text
@d1372 1
a1372 1
	$(value_h) gdb_string.h wrapper.h
d1946 1
a1946 1
	$(language_h) valprint.h varobj.h wrapper.h
@


1.25.2.7
log
@Bump version number
@
text
@d314 1
a314 1
VERSION = 5.0
@


1.25.2.8
log
@From trunk, pass $(infodir) down to doc.
@
text
@a357 1
	"infodir=$(infodir)" \
@


1.24
log
@* dwarf2read.c: Revert Andrew Cagney's change of Dec 15, 1997.
Don't include "bfd-elf.h".
(address_significant_size): Delete variable.
(dwarf2_build_psymtabs_hard): Don't set it, or check for
consistency between it and the Dwarf 2 compilation unit header
address size.
(read_address): Don't mask off bits above
address_significant_size.
* Makefile.in (dwarf2read.o): Don't depend on $(elf_bfd_h).
(elf_bfd_h): Remove variable; it's no longer used.
@
text
@d470 1
a470 1
	findvar.c gdbarch.c gdbarch-utils.c gdbtypes.c \
d551 1
a551 1
gdbarch_utils_h = gdbarch-utils.h
d609 1
a609 1
	gdbarch.o gdbarch-utils.o gdbtypes.o copying.o $(DEPFILES) \
d1371 2
a1372 2
gdbarch-utils.o: gdbarch-utils.c $(defs_h) $(bfd_h) $(gdbcmd_h) \
	$(gdbarch_utils_h)
d1549 1
a1549 1
	$(gdbarch_utils_h) \
@


1.23
log
@2000-04-05  Scott Bambrough <scottb@@netwinder.org>

	* Makefile.in: Add dependency information for arm-linux-tdep.c.
	* config/djgpp/fnchange.lst: Add arm-linux-tdep.c, arm-linux-nat.c.
@
text
@a502 1
elf_bfd_h =     $(BFD_SRC)/elf-bfd.h
d1245 1
a1245 1
dwarf2read.o: dwarf2read.c $(bfd_h) $(elf_bfd_h) buildsym.h $(defs_h) \
@


1.22
log
@When GCC always enable certain warnings.
Allow configure to set CFLAGS (-g -O2) when GCC.
@
text
@d1070 2
a1071 2
	arm-linux-nat.c arm-tdep.c arm-xdep.c coff-solib.c \
	convex-tdep.c convex-xdep.c \
d1136 3
@


1.21
log
@2000-04-03  H.J. Lu  <hjl@@gnu.org>

	* gdb_regex.h: New. Include "regex.h" if USE_INCLUDED_REGEX
	is defined and <regex.h> otherwise.

        * irix5-nat.c: Include "gdb_regex.h" instead of "gnu-regex.h".
	* monitor.c: Likewise.
	* osfsolib.c: Likewise.
	* solib.c: Likewise.
	* source.c: Likewise.
	* symtab.c: Likewise.

	* Makefile.in (REGEX): Changed to @@REGEX@@.
	(REGEX_CFLAGS): New.
	(REGEX1): Removed.
	(ADD_DEPS): Use $(REGEX) instead of $(REGEX1).
	(INTERNAL_WARN_CFLAGS): Add $(REGEX_CFLAGS).

	* configure.in (--with-included-regex): New switch.
	(REGEX): New. Subsstitue @@REGEX@@ in Makefile.in.
	(REGEX_CFLAGS): New. Subsstitue @@REGEX_CFLAGS@@ in Makefile.in.
	* configure: Regenerated.
@
text
@d267 1
a267 1
CFLAGS = -g
@


1.20
log
@IA-64 changes
@
text
@d117 5
d279 2
a280 1
	$(INTL_CFLAGS) $(TUI_CFLAGS) $(ENABLE_CFLAGS) $(GDB_WARN_CFLAGS)
a291 5
# We are using our own version of REGEX now to be consistent across
# machines.
REGEX = gnu-regex.o
REGEX1 = gnu-regex.o

d312 1
a312 1
ADD_DEPS = $(REGEX1) $(XM_ADD_FILES) $(TM_ADD_FILES) $(NAT_ADD_FILES)
@


1.19
log
@	* Makefile.in (copying.c): Depend on copying.txt, not COPYING.
	(copying.txt): New target, a link to COPYING.
@
text
@d1081 1
d1436 6
@


1.18
log
@* gdbarch-utils.h, gdbarch-utils.c: New files.
* Makefile.in (SFILES, COMMON_OBS): Update.
(gdbarch_utils_h) Define.
(gdbarch-utils.o): Add dependencies.

* gdbarch.c, gdbarch.sh: Include "gdbarch-utils.h". Fix code
handling default method values.
(startup_gdbarch): Rename default_gdbarch, name misleading.
(breakpoint_from_pc): Default to legacy_breakpoint_from_pc.
(register_name): Default to legacy_register_name.
(call_dummy_words): Default to legacy_call_dummy_words.
(sizeof_call_dummy_words): Default to
legacy_sizeof_call_dummy_words.
(register_convertible): Default to
generic_register_convertible_not.
(breakpoint_from_pc): Default to legacy_breakpoint_from_pc.
(remote_translate_xfer_address): Default to
generic_remote_translate_xfer_address.
(frameless_function_invocation): Default to
generic_frameless_function_invocation_not.
@
text
@d945 10
d956 2
a957 2
copying.c: COPYING copying.awk
	awk -f $(srcdir)/copying.awk < $(srcdir)/COPYING > copying.c
@


1.17
log
@2000-03-28  Michael Snyder  <msnyder@@cleaver.cygnus.com>

        * Makefile.in: anchor tui-file.h dependency to $srcdir.
@
text
@d469 1
a469 1
	findvar.c gdbarch.c gdbtypes.c \
d551 1
d609 1
a609 1
	gdbarch.o gdbtypes.o copying.o $(DEPFILES) \
d1357 3
d1529 1
@


1.16
log
@Create destdirs before installing GDB (don't assume parent directory
did it for us).
@
text
@d1495 1
a1495 1
main.o: main.c top.h $(defs_h) gdb_string.h $(event_loop_h) tui/tui-file.h
@


1.15
log
@Re-fix ln -s gdbtk code.  Mark ready for deletion post 5.0.
@
text
@d690 1
d692 1
@


1.14
log
@* i386-linux-nat.c: No need to #include "frame.h" any more.
(LINUX_SIGTRAMP_INSN0, LINUX_SIGTRAMP_OFFSET0,
LINUX_SIGTRAMP_INSN1, LINUX_SIGTRAMP_OFFSET1,
LINUX_SIGTRAMP_INSN2, LINUX_SIGTRAMP_OFFSET2, linux_sigtramp_code,
LINUX_SIGTRAMP_LEN, i386_linux_sigtramp_start,
LINUX_RT_SIGTRAMP_INSN0, LINUX_RT_SIGTRAMP_OFFSET0,
LINUX_RT_SIGTRAMP_INSN1, LINUX_RT_SIGTRAMP_OFFSET1,
linux_rt_sigtramp_code, LINUX_RT_SIGTRAMP_LEN,
i386_linux_rt_sigtramp_start, i386_linux_in_sigtramp,
i386_linux_sigcontext_addr, LINUX_SIGCONTEXT_PC_OFFSET,
i386_linux_sigtramp_saved_pc, LINUX_SIGCONTEXT_SP_OFFSET,
i386_linux_sigtramp_saved_sp):	Deleted.  Folks rightly pointed
out that these are target-dependent, and useful in non-native
configurations.  Moved to...
* i386-linux-tdep.c: ... Here, a new file.
* Makefile.in (ALLDEPFILES): Add i386-linux-tdep.c.
(i386-linux-tdep.o): New rule.
(i386-linux-nat.o): We no longer depend on frame.h.
* config/i386/linux.mt (TDEPFILES): Add i386-linux-tdep.o.
@
text
@d1263 3
d1267 13
a1279 8
	if test "$(LN_S)" = "ln -s" -a ! -d gdbtcl/images ; then \
	  echo linking ${srcdir}/gdbtk/library to gdbtcl ; \
	  $(LN_S) ${srcdir}/gdbtk/library gdbtcl ; \
	else \
	  echo Warning: Unable to link ${srcdir}/gdbtk/library to gdbtcl. ; \
	  echo "         " You will need to do a ; \
	  echo "         " make install before you are able to run the GUI. ; \
	fi
@


1.13
log
@(go32-nat.o): Add prerequisites.
(ALLDEPFILES): Add go32-nat.c.
@
text
@d1066 1
d1399 4
a1402 1
	$(symtab_h) $(frame_h) symfile.h objfiles.h
@


1.12
log
@* Makefile.in (all-gdbtk): Fix $srcdir to ${srcdir}.
@
text
@d1060 1
a1060 1
	gould-tdep.c gould-xdep.c h8300-tdep.c h8500-tdep.c \
d1348 3
@


1.11
log
@Move GDBtk's ``ln -s ... gdbtcl'' code out of configure.
Add CONFIG_CLEAN, CONFIG_ALL to configured targets.
Add all-gdbtk, clean-gdbtk.
@
text
@d1264 2
a1265 2
	  echo linking $srcdir/gdbtk/library to gdbtcl ; \
	  $(LN_S) $srcdir/gdbtk/library gdbtcl ; \
d1267 1
a1267 1
	  echo Warning: Unable to link $srcdir/gdbtk/library to gdbtcl. ; \
@


1.10
log
@Only configure GDBtk when it is present.
@
text
@d52 1
d166 2
d228 2
d239 3
d653 1
a653 1
all: gdb$(EXEEXT)
d866 1
a866 1
clean mostlyclean:
d1261 13
@


1.9
log
@2000-02-26  Mark Kettenis  <kettenis@@gnu.org>

	Make cross-compilation for the Hurd more friendly.
	From Jeff Bailey <jbailey@@gnu.org>:
	* configure.in: Use AC_CHECK_TOOL to find MiG.
	* Makefile.in (MIG): New variable.
	* config/i386/i386gnu.mh (MIG): Remove.
	* configure: Regenerated.
@
text
@a221 1
ENABLE_GDBTK= @@ENABLE_GDBTK@@
@


1.8
log
@Only install GDBtk files when GDBtk is being built.
@
text
@d62 1
@


1.7
log
@Add mi/ and testsuite/gdb.mi/ subdirectories.
Add --enable-gdbmi option to configury.
Add mi rules to Makefile.in
Add mi conditional output to event-top.c infrun.c main.c top.c.
Add -i=mi option.
@
text
@d164 2
d225 2
d234 2
d674 1
a674 1
install-only:
a683 12
	$(SHELL) $(srcdir)/../mkinstalldirs $(datadir)/gdbtcl ; \
	$(SHELL) $(srcdir)/../mkinstalldirs \
		$(datadir)/gdbtcl/images \
		$(datadir)/gdbtcl/images2 ; \
	$(SHELL) $(srcdir)/../mkinstalldirs $(datadir)/gdbtcl/help \
		$(datadir)/gdbtcl/help/images \
		$(datadir)/gdbtcl/help/trace ; \
	cd $(srcdir)/gdbtk/library ; \
	for i in *.tcl *.ith *.itb images/*.gif images2/*.gif images/icons.txt images2/icons.txt tclIndex help/*.html  help/trace/*.html help/trace/index.toc help/images/*.gif; \
	  do \
		$(INSTALL_DATA) $$i $(datadir)/gdbtcl/$$i ; \
	  done ;
d686 1
a686 1
uninstall: force
d1253 14
@


1.6
log
@Changes for GNU/Linux PPC native port.
@
text
@d144 21
d224 5
d269 1
a269 1
INTERNAL_LDFLAGS = $(CFLAGS) $(GLOBAL_CFLAGS) $(PROFILE_CFLAGS) $(LDFLAGS) @@CONFIG_LDFLAGS@@ @@HLDFLAGS@@
d294 1
a294 1
	$(OPCODES) $(MMALLOC) $(INTL_DEPS) $(LIBIBERTY) @@CONFIG_DEPS@@
d478 1
a478 1
LINTFILES = $(SFILES) $(YYFILES) @@CONFIG_SRCS@@ init.c
d580 1
a580 1
	   $(REMOTE_OBS) $(SIM_OBS) @@CONFIG_OBS@@
d582 1
a582 1
SOURCES = $(SFILES) $(ALLDEPFILES) $(YYFILES) @@CONFIG_SRCS@@
d722 1
a722 1
INIT_FILES = $(OBS) $(TSOBS) $(SUBDIR_INIT_FILES) @@CONFIG_INITS@@
d1887 39
@


1.5
log
@2000-02-16  Fernando Nasser  <fnasser@@totem.to.cygnus.com>

	* configure.in: Replaces obsolete gdbtk-variable.c with
	gdbtk-varobj.c.
	* configure: Regenerate.
	* Makefile.in: Remove obsolete/extraneous references to
	gdbtk-var* files.
@
text
@d1050 1
d1524 6
@


1.4
log
@2000-02-15  Jason Molenda  (jsm@@bugshack.cygnus.com)

        * Makefile.in (diststuff): Run 'diststuff' in doc/ subdir, not
        'do-doc'.
@
text
@a433 1
	gdbtk-varobj.c \
a1262 6

gdbtk-variable.o: $(srcdir)/gdbtk/generic/gdbtk-variable.c \
	$(srcdir)/gdbtk/generic/gdbtk.h $(srcdir)/gdbtk/generic/gdbtk-wrapper.h
	$(CC) -c $(INTERNAL_CFLAGS) $(IDE_CFLAGS) $(ITCL_CFLAGS) $(TIX_CFLAGS) \
	$(TCL_CFLAGS) $(TK_CFLAGS) $(X11_CFLAGS) $(GDBTK_CFLAGS)\
		$(srcdir)/gdbtk/generic/gdbtk-variable.c
@


1.3
log
@Replace ../include/wait.h with gdb_wait.h.
@
text
@d875 1
a875 1
	cd doc; $(MAKE) $(MFLAGS) all-doc
@


1.2
log
@2000-02-08  Elena Zannoni  <ezannoni@@kwikemart.cygnus.com>

	* configure.in: Remove the addition of sol-thread.c to the
	CONFIG_INITS list. This caused problems with init.c, because
	sol-thread.c would be grepped twice for _initialize_* functions.
	* configure: Ditto.
	* Makefile.in: Add FIXME for init.c.
@
text
@a463 1
wait_h =	$(INCLUDE_DIR)/wait.h
d1148 1
a1148 1
	$(gdbtypes_h) $(symtab_h) $(value_h) gdb_string.h $(wait_h)
d1152 1
a1152 1
# OBSOLETE convex-tdep.o: convex-tdep.c $(wait_h) $(defs_h) $(gdbcmd_h) \
d1188 1
a1188 1
dink32-rom.o: dink32-rom.c monitor.h $(bfd_h) $(wait_h) $(defs_h) $(gdbcmd_h) \
d1231 1
a1231 1
fork-child.o: fork-child.c $(wait_h) $(defs_h) $(gdbcore_h) \
d1316 1
a1316 1
hppa-tdep.o: hppa-tdep.c $(wait_h) $(defs_h) $(gdbcmd_h) $(gdbcore_h) \
d1363 1
a1363 1
	gdb_string.h $(wait_h) $(command_h)
d1365 1
a1365 1
infrun.o: infrun.c $(wait_h) $(defs_h) $(gdbcmd_h) $(gdbcore_h) \
d1369 1
a1369 1
inftarg.o: inftarg.c $(wait_h) $(defs_h) $(gdbcore_h) $(inferior_h) \
d1413 1
a1413 1
	$(wait_h) $(gdbcmd_h) $(gdbcore_h)
d1468 1
a1468 1
monitor.o: monitor.c monitor.h $(bfd_h) $(wait_h) $(defs_h) $(gdbcmd_h) \
d1473 1
a1473 1
Onindy.o: nindy-share/Onindy.c $(wait_h) nindy-share/block_io.h \
d1477 1
a1477 1
nindy.o: nindy-share/nindy.c $(wait_h) nindy-share/block_io.h \
d1528 1
a1528 1
	$(inferior_h) $(bfd_h) symfile.h target.h $(wait_h) $(gdbcmd_h) \
d1531 1
a1531 1
ppcbug-rom.o: ppcbug-rom.c monitor.h $(bfd_h) $(wait_h) $(defs_h) $(gdbcmd_h) \
d1555 1
a1555 1
linux-thread.o: linux-thread.c $(breakpoint_h) $(gdbcmd_h) $(wait_h) \
d1564 1
a1564 1
remote-adapt.o: remote-adapt.c $(wait_h) $(defs_h) $(gdbcore_h) \
d1567 1
a1567 1
remote-array.o: remote-array.c $(wait_h) $(defs_h) $(gdbcore_h) target.h \
d1571 1
a1571 1
remote-rdi.o: remote-rdi.c $(wait_h) $(defs_h) $(gdbcore_h) \
d1584 1
a1584 1
remote-d10v.o: remote-d10v.c $(bfd_h) $(wait_h) $(defs_h) $(gdbcmd_h) \
d1587 1
a1587 1
remote-rdp.o: remote-rdp.c $(wait_h) $(defs_h) $(gdbcore_h) \
d1590 1
a1590 1
remote-bug.o: remote-bug.c $(wait_h) $(defs_h) $(gdbcore_h) \
d1598 1
a1598 1
	$(wait_h) serial.h gdb_string.h
d1601 1
a1601 1
remote-eb.o: remote-eb.c $(wait_h) $(srcdir)/config/a29k/tm-a29k.h \
d1605 1
a1605 1
remote-es.o: remote-es.c $(bfd_h) $(wait_h) $(command_h) $(defs_h) \
d1608 1
a1608 1
remote-hms.o: remote-hms.c $(wait_h) $(defs_h) $(gdbcore_h) \
d1611 1
a1611 1
remote-mips.o: remote-mips.c $(wait_h) $(defs_h) $(gdbcmd_h) \
d1614 1
a1614 1
remote-mm.o: remote-mm.c $(bfd_h) $(wait_h) $(defs_h) $(inferior_h) \
d1617 1
a1617 1
remote-nindy.o: remote-nindy.c $(floatformat_h) $(wait_h) $(command_h) \
d1622 1
a1622 1
remote-os9k.o: remote-os9k.c $(defs_h) $(gdbcore_h) $(wait_h) \
d1626 1
a1626 1
remote-sds.o: remote-sds.c $(bfd_h) $(wait_h) $(defs_h) $(gdbcmd_h) \
d1629 1
a1629 1
remote-sim.o: remote-sim.c $(wait_h) $(defs_h) $(gdbcore_h) \
d1633 1
a1633 1
remote-st.o: remote-st.c $(wait_h) $(defs_h) $(gdbcore_h) serial.h \
d1636 1
a1636 1
remote-udi.o: remote-udi.c $(bfd_h) $(wait_h) $(defs_h) $(gdbcmd_h) \
d1639 1
a1639 1
remote-vx.o: remote-vx.c $(wait_h) complaints.h $(defs_h) $(gdbcmd_h) \
d1645 1
a1645 1
remote-vx29k.o: remote-vx29k.c $(wait_h) complaints.h $(defs_h) $(gdbcmd_h) \
d1651 1
a1651 1
	$(bfd_h) symfile.h target.h $(wait_h) $(gdbcmd_h) objfiles.h \
d1657 1
a1657 1
remote.o: remote.c $(bfd_h) $(wait_h) $(defs_h) $(gdbcmd_h) \
d1661 1
a1661 1
remote-nrom.o: remote-nrom.c $(bfd_h) $(wait_h) $(defs_h) $(gdbcmd_h) \
d1664 1
a1664 1
rom68k-rom.o: rom68k-rom.c monitor.h $(bfd_h) $(wait_h) $(defs_h) $(gdbcmd_h) \
d1700 1
a1700 1
sh3-rom.o: sh3-rom.c monitor.h $(bfd_h) $(wait_h) $(defs_h) $(gdbcmd_h) \
d1703 1
a1703 1
mon960-rom.o: mon960-rom.c monitor.h $(bfd_h) $(wait_h) $(defs_h) $(gdbcmd_h) \
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# Copyright 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998
d42 1
d51 2
d93 4
d128 3
d159 43
d230 2
a231 1
INTERNAL_CFLAGS = $(CFLAGS) $(GLOBAL_CFLAGS) $(PROFILE_CFLAGS) \
d234 2
a235 1
	$(INTL_CFLAGS) $(TUI_CFLAGS) $(ENABLE_CFLAGS) $(WARN_CFLAGS)
d273 1
a273 1
VERSION=4.18
d291 1
a291 1
SER_HARDWIRE = ser-unix.o
d307 7
d330 2
d414 1
d427 1
d429 6
a434 1
	findvar.c gdbarch.c gdbtypes.c infcmd.c inflow.c infrun.c language.c \
d449 3
a451 1
	tui/tuiStack.c tui/tuiStack.h tui/tuiWin.c tui/tuiWin.h
d463 1
d499 2
a500 1
defs_h =	defs.h xm.h tm.h nm.h config.status config.h gdbarch.h
d502 1
d506 7
d568 3
a570 1
	expprint.o environ.o gdbarch.o gdbtypes.o copying.o $(DEPFILES) \
d572 2
d578 2
d585 2
a586 3
	nlmread.o serial.o mdebugread.o os9kread.o top.o utils.o

OBS = $(COMMON_OBS) $(ANNOTATE_OBS) main.o
d588 1
a588 1
LIBGDB_OBS = 
d596 1
a596 3
SUBDIRS = doc \
	testsuite \
	nlm
d630 1
a630 1
info dvi install-info clean-info: force
d654 12
d677 1
d690 7
d698 2
a699 1
init.c: $(OBS) $(TSOBS)
d701 2
a702 7
	@@rm -f init.c-tmp
	@@echo '/* Do not modify this file.  */' >init.c-tmp
	@@echo '/* It is created automatically by the Makefile.  */'>>init.c-tmp
	@@echo '#include "ansidecl.h"' >>init.c-tmp
	@@echo 'extern void initialize_all_files PARAMS ((void));' >>init.c-tmp
	@@echo 'void initialize_all_files PARAMS ((void)) {' >>init.c-tmp
	@@-echo $(OBS) $(TSOBS) | \
d705 1
d720 10
a729 1
	sed -e 's/^.*://' -e 's/^\([a-z_0-9A-Z]*\).*/  {extern void \1 PARAMS ((void)); \1 ();}/' >>init.c-tmp
d731 1
d736 2
d739 1
a739 1
gdb$(EXEEXT): $(OBS) $(BUILD_TUI) $(TSOBS) $(ADD_DEPS) $(CDEPS) init.o
d741 1
a741 2
	$(HLDENV) $(CC_LD) $(INTERNAL_LDFLAGS) $(WIN32LDAPP) -o gdb$(EXEEXT) \
	  init.o $(OBS) $(TSOBS) $(TUI_LIBRARY) $(ADD_FILES) $(CLIBS) $(LOADLIBES)
d746 9
a754 14
libgdb:	libgdb-files $(LIBGDB_OBS)

# libproc is not listed here because all-libproc is a dependency of all-gui,
# not all-gdb, and thus might be built after us.
LIBGDBDEPS=$(COMMON_OBS) $(LIBGDB_OBS) $(TSOBS) $(ADD_DEPS) $(CDEPS) init.o
# libproc needs to be before libiberty for alloca.
LIBGDBFILES=$(COMMON_OBS) $(LIBGDB_OBS) $(TSOBS) ../libproc/libproc.a \
  $(ADD_DEPS) $(CDEPS) init.o

libgdb-files: $(LIBGDBDEPS) Makefile.in
	-rm -f libgdb-files
	for i in $(LIBGDBFILES); do\
		echo $$i >> libgdb-files;\
	done
d842 1
a842 1
	rm -f *.o *.a $(ADD_FILES) *~ init.c-tmp
d844 1
a844 1
	rm -f gdb$(EXEEXT) core make.log libgdb-files
d921 6
a926 3
	echo 'char *version = "$(VERSION)";' >version.c
	echo 'char *host_name = "$(host_alias)";' >> version.c
	echo 'char *target_name = "$(target_alias)";' >> version.c
d1030 1
a1030 1
	arm-tdep.c arm-xdep.c coff-solib.c \
d1034 1
a1034 1
	go32-xdep.c gould-tdep.c gould-xdep.c h8300-tdep.c h8500-tdep.c \
d1037 1
a1037 1
	i386-tdep.c i386b-nat.c i386mach-nat.c i386v-nat.c \
d1044 3
a1046 1
	m88k-nat.c m88k-tdep.c mac-nat.c mips-nat.c \
d1059 2
a1060 1
	ser-go32.c ser-ocd.c ser-tcp.c sh-tdep.c solib.c sparc-nat.c \
d1087 1
a1087 1
altos-xdep.o: altos-xdep.c $(defs_h) $(gdbcore_h) $(inferior_h)
d1091 3
d1103 2
a1104 1
	$(inferior_h) language.h target.h gdbthread.h gdb_string.h
d1153 2
a1154 2
convex-tdep.o: convex-tdep.c $(wait_h) $(defs_h) $(gdbcmd_h) \
	$(gdbcore_h) $(inferior_h)
d1156 2
a1157 2
convex-xdep.o: convex-xdep.c $(defs_h) $(gdbcmd_h) $(gdbcore_h) \
	$(inferior_h)
d1190 1
a1190 1
	$(inferior_h) target.h serial.h terminal.h
d1200 1
a1200 1
dwarf2read.o: dwarf2read.c $(bfd_h) buildsym.h $(defs_h) \
d1214 9
d1235 56
d1293 1
a1293 1
	language.h gdb_string.h $(readline_headers)
a1303 2
go32-xdep.o: go32-xdep.c

d1326 3
a1328 2
i386-tdep.o: i386-tdep.c $(defs_h) $(gdbcore_h) $(inferior_h) target.h \
	gdb_string.h
d1346 3
d1367 2
a1368 1
	$(inferior_h) target.h gdbthread.h gdb_string.h
d1386 1
a1386 1
	typeprint.h
d1390 5
a1394 1
	language.h jv-lang.h c-lang.h
d1430 1
a1430 1
main.o: main.c top.h $(defs_h) gdb_string.h
d1435 5
d1496 1
a1496 1
	$(symtab_h) gdb_string.h
d1506 3
d1539 2
d1542 16
a1557 1
	target.h gdb_string.h
d1559 1
a1559 1
pyr-tdep.o: pyr-tdep.c $(defs_h) 
d1561 1
a1561 1
pyr-xdep.o: pyr-xdep.c $(defs_h) $(gdbcore_h) $(inferior_h) 
d1569 2
a1570 1
      gdb_string.h $(command_h) serial.h monitor.h $(remote_utils_h)
d1594 4
d1600 1
d1659 2
a1660 1
	$(inferior_h) $(remote_utils_h) symfile.h terminal.h gdb_string.h
d1689 3
a1691 1
ser-tcp.o: ser-tcp.c $(defs_h) serial.h signals.h gdb_string.h
d1693 1
a1693 1
ser-unix.o: ser-unix.c $(defs_h) serial.h 
d1712 1
a1712 1
	gdb_string.h
d1732 5
a1736 1
ax-general.o: ax-general.c $(ax_h) $(defs_h)
d1762 4
a1765 2
tahoe-tdep.o: tahoe-tdep.c $(OP_INCLUDE)/tahoe.h $(defs_h) \
	$(symtab_h)
d1770 1
a1770 1
thread.o: thread.c $(defs_h) gdbthread.h $(gdbcmd_h)
d1774 1
a1774 1
	$(remote_utils_h) gdb_string.h
d1788 1
a1788 1
	gdb_string.h
d1832 3
d1836 2
a1837 1
	$(gdbcmd_h) $(gdbtypes_h) $(symtab_h) $(gdbcore_h)
d1853 9
@


1.1.1.1
log
@Initial creation of sourceware repository
@
text
@@


1.1.1.2
log
@import gdb-19990422 snapshot
@
text
@d1 1
a1 1
# Copyright 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999
a49 2
AWK = @@AWK@@

d218 1
a218 1
VERSION = 19990422
a251 7
# Possibly ignore the simulator.  If the simulator is being ignored, 
# these expand into SIM= and SIM_OBJ=, overriding the entries from 
# target_makefile_frag
#
@@IGNORE_SIM@@
@@IGNORE_SIM_OBS@@

d922 1
a922 1
	gould-tdep.c gould-xdep.c h8300-tdep.c h8500-tdep.c \
d1120 2
d1199 1
a1199 1
	typeprint.h c-lang.h
d1203 1
a1203 1
	language.h jv-lang.h c-lang.h gdbcore.h annotate.h
d1300 1
a1300 1
	$(symtab_h) gdb_string.h $(breakpoint_h)
d1507 1
a1507 1
ax-general.o: ax-general.c $(ax_h) $(defs_h) $(value_h)
a1534 2

tic80-tdep.o: tic80-tdep.c $(defs_h)
@


1.1.1.3
log
@import gdb-19990504 snapshot
@
text
@d220 1
a220 1
VERSION = 19990504
@


1.1.1.4
log
@import gdb-1999-05-10
@
text
@a150 2
WIN32LIBS = @@WIN32LIBS@@

d220 1
a220 1
VERSION = 19990510
a370 1
	event-loop.c event-top.c \
a438 1
event_loop_h = event-loop.h
d494 1
a494 3
	expprint.o environ.o \
	event-loop.o event-top.o \
	gdbarch.o gdbtypes.o copying.o $(DEPFILES) \
a1103 5
event-loop.o: event-loop.c $(event_loop_h)

event-top.o: event-top.c top.h $(readline_headers) \
      $(defs_h) $(inferior_h) $(event_loop_h)

d1548 1
a1548 1
thread.o: thread.c $(defs_h) gdbthread.h $(gdbcmd_h) target.h
d1552 1
a1552 1
	$(remote_utils_h) gdb_string.h $(event_loop_h)
@


1.1.1.5
log
@import gdb-1999-0519
@
text
@d222 1
a222 1
VERSION = 19990519
d947 1
a947 2
	m88k-nat.c m88k-tdep.c mac-nat.c \
	mips-nat.c \
@


1.1.1.6
log
@import gdb-1999-05-25 snapshot
@
text
@d222 1
a222 1
VERSION = 19990525
d1258 1
a1258 1
main.o: main.c top.h $(defs_h) gdb_string.h $(event_loop_h)
@


1.1.1.7
log
@import gdb-1999-06-01 snapshot
@
text
@d222 1
a222 1
VERSION = 19990601
a1638 1

@


1.1.1.8
log
@import gdb-1999-06-07 snapshot
@
text
@d222 1
a222 1
VERSION = 19990607
@


1.1.1.9
log
@import gdb-1999-06-14 snapshot
@
text
@d222 1
a222 1
VERSION = 19990614
@


1.1.1.10
log
@import gdb-1999-06-21 snapshot
@
text
@d222 1
a222 1
VERSION = 19990621
a438 1
top_h =		top.h
d1111 1
a1111 1
event-loop.o: event-loop.c $(defs_h) $(top_h) $(event_loop_h)
d1114 1
a1114 1
      $(defs_h) $(inferior_h) $(event_loop_h) terminal.h
@


1.1.1.11
log
@import gdb-1999-06-28 snapshot
@
text
@a41 1
htmldir = $(prefix)/html
a91 4
MAKEHTML = texi2html

MAKEHTMLFLAGS = -glossary -menu -split_chapter

d222 1
a222 1
VERSION = 19990628
a278 2
	"MAKEHTML=$(MAKEHTML)" \
	"MAKEHTMLFLAGS=$(MAKEHTMLFLAGS)" \
a360 1
	"MAKEHTML=$(MAKEHTML)" \
d560 1
a560 1
info dvi install-info clean-info html install-html: force
d989 1
a989 1
# OBSOLETE altos-xdep.o: altos-xdep.c $(defs_h) $(gdbcore_h) $(inferior_h)
d1051 2
a1052 2
# OBSOLETE convex-tdep.o: convex-tdep.c $(wait_h) $(defs_h) $(gdbcmd_h) \
# OBSOLETE	$(gdbcore_h) $(inferior_h)
d1054 2
a1055 2
# OBSOLETE convex-xdep.o: convex-xdep.c $(defs_h) $(gdbcmd_h) $(gdbcore_h) \
# OBSOLETE	$(inferior_h)
@


1.1.1.12
log
@import gdb-1999-07-05 snapshot
@
text
@d227 1
a227 1
VERSION = 19990705
d1209 1
a1209 1
	$(inferior_h) target.h gdbthread.h gdb_string.h $(event_loop_h)
d1465 1
a1465 2
	$(inferior_h) $(remote_utils_h) symfile.h terminal.h gdb_string.h \
	$(event_loop_h)
@


1.1.1.13
log
@import gdb-1999-07-07 pre reformat
@
text
@d227 1
a227 1
VERSION = 19990707
d1371 1
a1371 1
# OBSOLETE pyr-tdep.o: pyr-tdep.c $(defs_h) 
d1373 1
a1373 1
# OBSOLETE pyr-xdep.o: pyr-xdep.c $(defs_h) $(gdbcore_h) $(inferior_h) 
@


1.1.1.14
log
@import gdb-1999-07-12 snapshot
@
text
@d227 1
a227 1
VERSION = 19990712
d245 1
a245 1
SER_HARDWIRE = ser-unix.o ser-pipe.o
d970 1
a970 2
	ser-go32.c ser-pipe.c ser-ocd.c ser-tcp.c \
	sh-tdep.c solib.c sparc-nat.c \
a1493 2

ser-pipe.o: ser-pipe.c $(defs_h) serial.h signals.h gdb_string.h
@


1.1.1.15
log
@import gdb-1999-07-19 snapshot
@
text
@d227 1
a227 1
VERSION = 19990719
@


1.1.1.16
log
@import gdb-1999-07-26 snapshot
@
text
@d227 1
a227 1
VERSION = 19990726
@


1.1.1.17
log
@import gdb-1999-08-02 snapshot
@
text
@d227 1
a227 1
VERSION = 19990802
@


1.1.1.18
log
@import gdb-1999-08-09 snapshot
@
text
@d227 1
a227 1
VERSION = 19990809
a383 1
	kod.c kod-cisco.c \
a510 1
	kod.o kod-cisco.o \
a956 1
	mcore-tdep.c \
a1233 4
kod.o: kod.c $(defs_h) $(command_h) $(gdbcmd_h) target.h gdb_string.h

kod-cisco.o: kod-cisco.c $(defs_h) gdb_string.h

a1271 5

mcore-tdep.o: mcore-tdep.c $(defs_h) $(frame_h) $(gdbcmd_h) $(value_h) $(symtab_h)

mcore-rom.o: mcore-rom.c $(defs_h) $(gdbcore_h) target.h monitor.h \
	gdb_string.h
@


1.1.1.19
log
@import gdb-1999-08-16 snapshot
@
text
@d227 1
a227 1
VERSION = 19990816
d534 3
a536 1
SUBDIRS = @@SUBDIRS@@
@


1.1.1.20
log
@import gdb-1999-08-23 snapshot
@
text
@d227 1
a227 1
VERSION = 19990823
a1348 3
pa64solib.o: pa64solib.c $(defs_h)

hpux-thread.o: hpux-thread.c $(defs_h) gdbthread.h target.h inferior.h
@


1.1.1.21
log
@import gdb-1999-08-30 snapshot
@
text
@a127 1
WERROR_CFLAGS = @@WERROR_CFLAGS@@
d186 1
a186 2
INTERNAL_WARN_CFLAGS = \
	$(CFLAGS) $(GLOBAL_CFLAGS) $(PROFILE_CFLAGS) \
a189 1
INTERNAL_CFLAGS = $(INTERNAL_WARN_CFLAGS) $(WERROR_CFLAGS)
d227 1
a227 1
VERSION = 19990830
a512 1
	gdb-events.o \
d524 3
a526 1
OBS = $(COMMON_OBS) $(ANNOTATE_OBS)
d648 1
a648 1
gdb$(EXEEXT): main.o libgdb.a $(ADD_DEPS) $(CDEPS) $(TDEPLIBS)
d650 2
a651 1
	$(HLDENV) $(CC_LD) $(INTERNAL_LDFLAGS) $(WIN32LDAPP) -o gdb$(EXEEXT) main.o libgdb.a $(TDEPLIBS) $(TUI_LIBRARY) $(CLIBS) $(LOADLIBES)
d656 14
a669 9
# Create a library of the gdb object files and build GDB by linking
# against that.
#
# init.o is very important.  It pulls in the rest of GDB.
LIBGDB_OBS= $(OBS) $(TSOBS) $(ADD_FILES) init.o
libgdb.a: $(LIBGDB_OBS)
	-rm -f libgdb.a
	$(AR) q libgdb.a $(LIBGDB_OBS)
	$(RANLIB) libgdb.a
d759 1
a759 1
	rm -f gdb$(EXEEXT) core make.log
d1012 1
a1012 2
	$(inferior_h) language.h target.h gdbthread.h gdb_string.h \
	gdb-events.h
d1125 1
a1125 1
      $(defs_h) $(inferior_h) $(event_loop_h) terminal.h $(gdbcmd_h)
a1138 2
# Due to several ``enum enabled'' declaration clashes it is difficult
# to fix breakpoint.c's compiler warnings.
a1141 1
	$(CC) -c $(INTERNAL_WARN_CFLAGS) $(NO_WERROR_CFLAGS) $<
d1578 2
a1579 2
# OBSOLETE tahoe-tdep.o: tahoe-tdep.c $(OP_INCLUDE)/tahoe.h $(defs_h) \
# OBSOLETE	$(symtab_h)
d1604 1
a1604 1
	gdb_string.h $(event_loop_h)
a1664 2

gdb-events.o: gdb-events.c gdb-events.h $(defs_h) $(gdbcmd_h)
@


1.1.1.22
log
@import gdb-1999-09-08 snapshot
@
text
@a128 2
GDB_WARN_CFLAGS = $(WARN_CFLAGS)
GDB_WERROR_CFLAGS = $(WERROR_CFLAGS)
d191 2
a192 2
	$(INTL_CFLAGS) $(TUI_CFLAGS) $(ENABLE_CFLAGS) $(GDB_WARN_CFLAGS)
INTERNAL_CFLAGS = $(INTERNAL_WARN_CFLAGS) $(GDB_WERROR_CFLAGS)
d230 1
a230 1
VERSION = 19990908
a455 1
version_h = version.h
d832 3
a834 6
	rm -f version.c
	echo '#include "version.h"' >> version.c
	echo 'const char version[] = "$(VERSION)";' >> version.c
	echo 'const char host_name[] = "$(host_alias)";' >> version.c
	echo 'const char target_name[] = "$(target_alias)";' >> version.c
version.o: version.c $(version_h)
d945 1
a945 1
	i386-tdep.c i386b-nat.c i386mach-nat.c i386v-nat.c i386-linux-nat.c \
d1095 1
a1095 1
	$(inferior_h) target.h serial.h terminal.h symfile.h
a1192 3
i386-linux-nat.o: i386-linux-nat.c $(defs_h) $(inferior_h) $(gdbcore_h) \
	$(symtab_h) $(frame_h) $(symfile_h) $(objfiles_h) 

a1311 5
# FIXME: Monitor.c has -Wformat problems.  The code using the macros
# RDEBUG and EXTRA_RDEBUG needs be replaced with something that:
# doesn't cause -Wformat errors; sends all output to gdb_stdlog
# instead of stdout; and controls the output throug a ``set
# monitordebug'' command/variable. cagney, 1999-09-01.
a1313 1
	$(CC) -c $(INTERNAL_WARN_CFLAGS) $(NO_WERROR_CFLAGS) $<
a1384 6
sol-thread.o: sol-thread.c $(defs_h) gdbthread.h target.h $(inferior_h) \
	$(gdbcmd_h)

linux-thread.o: linux-thread.c $(breakpoint_h) $(gdbcmd_h) $(wait_h) \
	gdbthread.h $(gdbcore_h) $(inferior_h) target.h $(defs_h)

d1395 1
a1395 2
      gdb_string.h $(command_h) serial.h monitor.h $(remote_utils_h) \
	$(version_h)
a1418 4
# FIXME: For the SH target, remote-e7000 contains numerous -Wformat
# warnings.  Since the fixes involve modifications to the code that
# handles the SH remote protocol the changes need to be tested against
# an SH board before they can be committed. cagney 1999-09-01.
a1420 1
	$(CC) -c $(INTERNAL_WARN_CFLAGS) $(NO_WERROR_CFLAGS) $<
d1590 1
a1590 1
	$(remote_utils_h) gdb_string.h $(event_loop_h) $(version_h)
a1647 3
# FIXME: z8k-tdep.c calls _initialize_gdbtypes().  Since that isn't
# declared -Wimplicit fails. It should be using the GDBARCH framework.
# cagney 1999-09-02.
d1649 1
a1649 2
	$(gdbcmd_h) $(gdbtypes_h) $(symtab_h) $(gdbcore_h) $(value_h)
	$(CC) -c $(INTERNAL_WARN_CFLAGS) $(NO_WERROR_CFLAGS) $<
@


1.1.1.23
log
@import gdb-1999-09-13 snapshot
@
text
@d232 1
a232 1
VERSION = 19990913
d1200 1
a1200 1
	$(symtab_h) $(frame_h) symfile.h objfiles.h
@


1.1.1.24
log
@import gdb-1999-09-21
@
text
@d232 1
a232 1
VERSION = 19990921
d457 2
a458 4
event_loop_h =  event-loop.h
event_top_h = 	event-top.h
remote_h =	remote.h
version_h = 	version.h
d1125 1
a1125 1
event-loop.o: event-loop.c $(defs_h) $(top_h) $(event_loop_h) $(event_top_h)
d1128 1
a1128 1
      $(defs_h) $(inferior_h) $(event_loop_h) $(event_top_h) terminal.h $(gdbcmd_h)
d1146 1
a1146 1
	language.h gdb_string.h $(readline_headers) $(remote_h)
d1220 1
a1220 2
	$(inferior_h) target.h gdbthread.h gdb_string.h $(event_loop_h) \
	$(event_top_h) target.h
d1244 1
a1244 1
kod.o: kod.c $(defs_h) $(command_h) $(gdbcmd_h) target.h gdb_string.h kod.h
d1246 1
a1246 1
kod-cisco.o: kod-cisco.c $(defs_h) gdb_string.h kod.h
d1507 1
a1507 1
	$(event_loop_h) $(event_top_h) $(remote_h)
d1536 1
a1536 1
ser-pipe.o: ser-pipe.c $(defs_h) serial.h signals.h gdb_string.h ser-unix.h
d1538 1
a1538 1
ser-tcp.o: ser-tcp.c $(defs_h) serial.h signals.h gdb_string.h ser-unix.h
d1540 1
a1540 1
ser-unix.o: ser-unix.c $(defs_h) serial.h ser-unix.h 
d1559 1
a1559 1
	gdb_string.h source.h
d1617 1
a1617 1
	$(remote_utils_h) gdb_string.h $(event_loop_h) $(event_top_h) $(version_h)
d1631 1
a1631 1
	gdb_string.h $(event_loop_h) $(event_top_h)
@


1.1.1.25
log
@import gdb-1999-09-28 snapshot
@
text
@d232 1
a232 1
VERSION = 19990928
a450 1
call_cmds_h =	call-cmds.h
d625 6
a630 1
	@@rm -f init.c-tmp init.l-tmp
a633 1
	    -e '/^init.o/d' \
d648 1
a648 10
	sed -e 's/^.*://' -e 's/^\([a-z_0-9A-Z]*\).*/\1/' > init.l-tmp
	@@echo '/* Do not modify this file.  */' >>init.c-tmp
	@@echo '/* It is created automatically by the Makefile.  */'>>init.c-tmp
	@@echo '#include "defs.h"' >>init.c-tmp
	@@echo '#include "call-cmds.h"' >>init.c-tmp
	@@sed -e 's/\(.*\)/extern initialize_file_ftype \1;/' <init.l-tmp >>init.c-tmp
	@@echo 'void' >>init.c-tmp
	@@echo 'initialize_all_files (void)' >>init.c-tmp
	@@echo '{' >>init.c-tmp
	@@sed -e 's/\(.*\)/  \1 ();/' <init.l-tmp >>init.c-tmp
a649 1
	@@rm init.l-tmp
a653 2
init.o: init.c $(defs_h) $(call_cmds_h)

d758 1
a758 1
	rm -f *.o *.a $(ADD_FILES) *~ init.c-tmp init.l-tmp
d1130 1
a1130 2
      $(defs_h) $(inferior_h) $(event_loop_h) $(event_top_h) terminal.h \
	$(gdbcmd_h)
d1701 1
@


1.1.1.26
log
@import gdb-1999-10-04 snapshot
@
text
@d232 1
a232 1
VERSION = 19991004
d388 1
a388 2
	findvar.c gdbarch.c gdbtypes.c \
	inf-loop.c infcmd.c inflow.c infrun.c language.c \
a459 1
inf_loop_h =  	inf-loop.h
d518 1
a518 1
	event-loop.o event-top.o inf-loop.o \
a1141 3
inf-loop.o: inf-loop.c $(defs_h) $(inferior_h) $(inf_loop_h) $(event_loop_h) \
	 $(event_top_h)

d1520 1
a1520 1
	$(event_loop_h) $(event_top_h) $(remote_h) $(inf_loop_h)
@


1.1.1.27
log
@import gdb-1999-10-11 snapshot
@
text
@d232 1
a232 1
VERSION = 19991011
d1339 5
d1346 1
@


1.1.1.28
log
@import gdb-1999-10-18 snapshot
@
text
@d232 1
a232 1
VERSION = 19991018
@


1.1.1.29
log
@import gdb-1999-10-25 snapshot
@
text
@d232 1
a232 1
VERSION = 19991025
a416 1
elf_bfd_h =     $(BFD_DIR)/elf-bfd.h
d1124 1
a1124 1
dwarf2read.o: dwarf2read.c $(bfd_h) $(elf_bfd_h) buildsym.h $(defs_h) \
d1142 1
a1142 1
	$(gdbcmd_h) target.h
@


1.1.1.30
log
@import gdb-1999-11-01 snapshot
@
text
@d232 1
a232 1
VERSION = 19991101
@


1.1.1.31
log
@import gdb-1999-11-08 snapshot
@
text
@d232 1
a232 1
VERSION = 19991108
@


1.1.1.32
log
@import gdb-1999-11-16 snapshot
@
text
@d232 1
a232 1
VERSION = 19991116
a1409 2
# FIXME: Procfs.o gets -Wformat errors because things like pid_t don't
# match output format strings.
a1411 1
	$(CC) -c $(INTERNAL_WARN_CFLAGS) $(NO_WERROR_CFLAGS) $<
@


1.1.1.33
log
@import gdb-1999-12-06 snapshot
@
text
@d232 1
a232 1
VERSION = 19991206
d627 1
a627 2
INIT_FILES = $(OBS) $(TSOBS) $(SUBDIR_INIT_FILES)
init.c: $(INIT_FILES)
d630 1
a630 1
	@@-echo $(INIT_FILES) | \
d1198 2
a1199 3
i386-tdep.o: i386-tdep.c $(defs_h) gdb_string.h $(frame_h)	\
	$(inferior_h) $(gdbcore_h) target.h $(floatformat_h)	\
	$(symtab_h) $(gdbcmd_h) $(command_h)
@


1.1.1.34
log
@import gdb-1999-12-07 snapshot
@
text
@d232 1
a232 1
VERSION = 19991207
@


1.1.1.35
log
@import gdb-1999-12-13 snapshot
@
text
@d232 1
a232 1
VERSION = 19991213
d1161 2
d1166 1
@


1.1.1.36
log
@import gdb-1999-12-21 snapshot
@
text
@d232 1
a232 1
VERSION = 19991221
d417 1
a417 1
elf_bfd_h =     $(BFD_SRC)/elf-bfd.h
d959 1
a959 1
	arm-linux-nat.c arm-tdep.c arm-xdep.c coff-solib.c \
a1018 3

arm-linux-nat.o: arm-linux-nat.c $(defs_h) $(inferior_h) $(gdbcore_h) \
	gdb_string.h
@


1.1.1.37
log
@import gdb-2000-01-05 snapshot
@
text
@d232 1
a232 1
VERSION = 20000105
a1416 8

proc_api.o: proc_api.c $(defs_h) $(gdbcmd_h)

proc_events.o: proc_events.c $(defs_h)

proc_flags.o: proc_flags.c $(defs_h)

proc_why.o: proc_why.c $(defs_h)
@


1.1.1.38
log
@import gdb-2000-01-10 snapshot
@
text
@d232 1
a232 1
VERSION = 20000110
@


1.1.1.39
log
@import gdb-2000-01-17 snapshot
@
text
@d232 1
a232 1
VERSION = 20000117
@


1.1.1.40
log
@import gdb-2000-01-24 snapshot
@
text
@d232 1
a232 1
VERSION = 20000124
d1415 1
a1415 1
	target.h gdb_string.h gdbthread.h proc-utils.h
d1418 1
a1418 1
proc-api.o: proc-api.c $(defs_h) $(gdbcmd_h) proc-utils.h
d1420 1
a1420 1
proc-events.o: proc-events.c $(defs_h)
d1422 1
a1422 1
proc-flags.o: proc-flags.c $(defs_h)
d1424 1
a1424 1
proc-why.o: proc-why.c $(defs_h) proc-utils.h
@


1.1.1.41
log
@import gdb-2000-01-26 snapshot
@
text
@d232 1
a232 1
VERSION = 20000126
@


1.1.1.42
log
@import gdb-2000-01-31 snapshot
@
text
@d232 1
a232 1
VERSION = 20000131
d405 1
a405 3
	tui/tuiStack.c tui/tuiStack.h tui/tuiWin.c tui/tuiWin.h \
	tui/tui-file.h tui/tui-file.c \
	gdb-file.h gdb-file.c
d454 1
a454 1
defs_h =	defs.h xm.h tm.h nm.h config.status config.h gdbarch.h gdb-file.h
d535 1
a535 2
	nlmread.o serial.o mdebugread.o os9kread.o top.o utils.o \
	gdb-file.o tui-file.o
d1303 1
a1303 1
main.o: main.c top.h $(defs_h) gdb_string.h $(event_loop_h) tui/tui-file.h
a1603 4

gdb-file.o: gdb-file.c $(defs_h) gdb-file.h
tui-file.o: $(srcdir)/tui/tui-file.c $(defs_h) $(srcdir)/tui/tui-file.h
	$(CC) -c $(INTERNAL_CFLAGS) $(srcdir)/tui/tui-file.c
@


1.1.1.43
log
@import gdb-2000-02-01 snapshot
@
text
@d1 1
a1 1
# Copyright 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000
d232 1
a232 1
VERSION = 20000201
d407 1
a407 1
	ui-file.h ui-file.c
d456 1
a456 1
defs_h =	defs.h xm.h tm.h nm.h config.status config.h gdbarch.h ui-file.h
d538 1
a538 1
	ui-file.o tui-file.o
d1608 1
a1608 1
ui-file.o: ui-file.c $(defs_h) ui-file.h
@


1.1.1.44
log
@import gdb-2000-02-02 snapshot
@
text
@d232 1
a232 1
VERSION = 20000202
a390 2
	ui-out.c cli-out.c \
	varobj.c wrapper.c \
a466 2
ui_out_h =      ui-out.h
cli_out_h =	cli-out.h
a531 2
	ui-out.o cli-out.o \
	varobj.o wrapper.o \
a1730 7

ui-out.o: ui-out.c $(defs_h) $(ui_out_h) expression.h language.h
cli-out.o: cli-out.c $(defs_h) $(ui_out_h) $(cli_out_h)
varobj.o: varobj.c $(defs_h) $(frame_h) $(value_h) \
	$(language_h) valprint.h varobj.h
	$(CC) -c $(INTERNAL_WARN_CFLAGS) $(NO_WERROR_CFLAGS) $<
wrapper.o: wrapper.c $(defs_h) $(frame_h) $(value_h) wrapper.h
@


1.1.1.45
log
@import gdb-2000-02-04 snapshot
@
text
@d232 1
a232 1
VERSION = 20000204
d636 1
a636 1
INIT_FILES = $(OBS) $(TSOBS) $(SUBDIR_INIT_FILES) @@CONFIG_INITS@@
@


1.1.1.46
log
@import insight-2000-02-04 snapshot (2nd try)
@
text
@a160 41
# Where is the TCL library?  Typically in ../tcl.
LIB_INSTALL_DIR = $(libdir)
# This variable is needed when doing dynamic linking.
LIB_RUNTIME_DIR = $(libdir)
TCL = @@TCL_LD_SEARCH_FLAGS@@ @@TCL_BUILD_LIB_SPEC@@
TCL_CFLAGS = @@TCLHDIR@@
TCL_DEPS =
GDBTKLIBS = @@GDBTKLIBS@@
# Extra flags that the GDBTK files need:
GDBTK_CFLAGS = @@GDBTK_CFLAGS@@

# Where is the TK library?  Typically in ../tk.
TK = @@TK_BUILD_LIB_SPEC@@
TK_CFLAGS = @@TKHDIR@@ @@TK_BUILD_INCLUDES@@
TK_DEPS =

# Where is Itcl?  Typically in ../itcl/itcl.
ITCL_CFLAGS = @@ITCLHDIR@@
ITCL = @@ITCLLIB@@
ITCL_DEPS = @@ITCL_DEPS@@ 

# Where is Itk?  Typically in ../itcl/itk.
ITK_CFLAGS = @@ITKHDIR@@
ITK = @@ITKLIB@@
ITK_DEPS = @@ITK_DEPS@@ 

# Where is Tix?  Typically in ../tix.
TIX_CFLAGS = @@TIXHDIR@@
TIX = @@TIXLIB@@
TIX_DEPS = @@TIX_DEPS@@

X11_CFLAGS = @@TK_XINCLUDES@@
X11_LDFLAGS =
X11_LIBS =

WIN32LDAPP = @@WIN32LDAPP@@

ENABLE_GDBTK= @@ENABLE_GDBTK@@
LIBGUI = @@LIBGUI@@
GUI_CFLAGS_X = @@GUI_CFLAGS_X@@
IDE_CFLAGS=$(GUI_CFLAGS_X) $(IDE_CFLAGS_X)
a392 1
	gdbtk-varobj.c \
a611 12
	$(SHELL) $(srcdir)/../mkinstalldirs $(datadir)/gdbtcl ; \
	$(SHELL) $(srcdir)/../mkinstalldirs \
		$(datadir)/gdbtcl/images \
		$(datadir)/gdbtcl/images2 ; \
	$(SHELL) $(srcdir)/../mkinstalldirs $(datadir)/gdbtcl/help \
		$(datadir)/gdbtcl/help/images \
		$(datadir)/gdbtcl/help/trace ; \
	cd $(srcdir)/gdbtk/library ; \
	for i in *.tcl *.ith *.itb images/*.gif images2/*.gif images/icons.txt images2/icons.txt tclIndex help/*.html  help/trace/*.html help/trace/index.toc help/images/*.gif; \
	  do \
		$(INSTALL_DATA) $$i $(datadir)/gdbtcl/$$i ; \
	  done ;
a622 1
	rm -rf $(datadir)/gdbtcl
a1171 56

gdbres.o: $(srcdir)/gdbtk/gdb.rc $(srcdir)/gdbtk/gdbtool.ico
	$(WINDRES) --include $(srcdir)/gdbtk $(srcdir)/gdbtk/gdb.rc gdbres.o

gdbtk.o: $(srcdir)/gdbtk/generic/gdbtk.c \
	$(srcdir)/gdbtk/generic/gdbtk.h $(defs_h) \
	$(symtab_h) $(inferior_h) $(command_h) \
	$(bfd_h) symfile.h objfiles.h target.h gdb_string.h $(tracepoint_h) \
	$(top_h) 
	$(CC) -c $(INTERNAL_CFLAGS) $(IDE_CFLAGS) $(ITCL_CFLAGS) \
        $(ITK_CFLAGS) $(TIX_CFLAGS) \
	$(TCL_CFLAGS) $(TK_CFLAGS) $(X11_CFLAGS) $(GDBTK_CFLAGS)\
		$(srcdir)/gdbtk/generic/gdbtk.c -DGDBTK_LIBRARY=\"$(datadir)/gdbtcl\"

gdbtk-cmds.o: $(srcdir)/gdbtk/generic/gdbtk-cmds.c \
	$(srcdir)/gdbtk/generic/gdbtk.h \
	$(defs_h) $(symtab_h) $(inferior_h)	\
	$(command_h) $(bfd_h) $(top_h) symfile.h objfiles.h target.h	\
	gdb_string.h $(tracepoint_h) $(frame_h) source.h
	$(CC) -c $(INTERNAL_CFLAGS) $(IDE_CFLAGS) $(ITCL_CFLAGS)	\
	$(TIX_CFLAGS) $(TCL_CFLAGS) $(TK_CFLAGS) $(X11_CFLAGS)		\
	$(GDBTK_CFLAGS) $(srcdir)/gdbtk/generic/gdbtk-cmds.c				\
	-DGDBTK_LIBRARY=\"$(datadir)/gdbtcl\"

gdbtk-hooks.o: $(srcdir)/gdbtk/generic/gdbtk-hooks.c \
	$(srcdir)/gdbtk/generic/gdbtk.h $(defs_h) \
	$(symtab_h) $(inferior_h) $(command_h) \
	$(bfd_h) symfile.h objfiles.h target.h gdb_string.h $(tracepoint_h)
	$(CC) -c $(INTERNAL_CFLAGS) $(IDE_CFLAGS) $(ITCL_CFLAGS) $(TIX_CFLAGS) \
	$(TCL_CFLAGS) $(TK_CFLAGS) $(X11_CFLAGS) $(GDBTK_CFLAGS)\
		$(srcdir)/gdbtk/generic/gdbtk-hooks.c -DGDBTK_LIBRARY=\"$(datadir)/gdbtcl\"

gdbtk-variable.o: $(srcdir)/gdbtk/generic/gdbtk-variable.c \
	$(srcdir)/gdbtk/generic/gdbtk.h $(srcdir)/gdbtk/generic/gdbtk-wrapper.h
	$(CC) -c $(INTERNAL_CFLAGS) $(IDE_CFLAGS) $(ITCL_CFLAGS) $(TIX_CFLAGS) \
	$(TCL_CFLAGS) $(TK_CFLAGS) $(X11_CFLAGS) $(GDBTK_CFLAGS)\
		$(srcdir)/gdbtk/generic/gdbtk-variable.c

gdbtk-varobj.o: $(srcdir)/gdbtk/generic/gdbtk-varobj.c \
	$(srcdir)/gdbtk/generic/gdbtk.h \
	$(defs_h) $(value_h) varobj.h
	$(CC) -c $(INTERNAL_CFLAGS) $(IDE_CFLAGS) $(ITCL_CFLAGS) $(TIX_CFLAGS) \
	$(TCL_CFLAGS) $(TK_CFLAGS) $(X11_CFLAGS) $(GDBTK_CFLAGS)\
		$(srcdir)/gdbtk/generic/gdbtk-varobj.c

gdbtk-wrapper.o: $(srcdir)/gdbtk/generic/gdbtk-wrapper.c \
	$(srcdir)/gdbtk/generic/gdbtk-wrapper.h
	$(CC) -c $(INTERNAL_CFLAGS) $(IDE_CFLAGS) $(GDBTK_CFLAGS)\
		$(srcdir)/gdbtk/generic/gdbtk-wrapper.c

v850ice.o: v850ice.c $(defs_h) $(symtab_h) $(inferior_h) $(command_h) \
	$(frame_h) $(breakpoint_h) $(gdbcore_h) $(value_h) symfile.h \
	gdb_string.h target.h objfiles.h
	$(CC) -c $(INTERNAL_CFLAGS) $(IDE_CFLAGS) $(ITCL_CFLAGS) $(TIX_CFLAGS) \
	$(TCL_CFLAGS) $(TK_CFLAGS) $(X11_CFLAGS) $(GDBTK_CFLAGS)\
		$(srcdir)/v850ice.c
@
