head	1.50;
access;
symbols
	gdb_7_6_1-2013-08-30-release:1.49
	gdb_7_6-2013-04-26-release:1.49
	gdb_7_6-branch:1.49.0.2
	gdb_7_6-2013-03-12-branchpoint:1.49
	gdb_7_5_1-2012-11-29-release:1.48
	gdb_7_5-2012-08-17-release:1.48
	gdb_7_5-branch:1.48.0.2
	gdb_7_5-2012-07-18-branchpoint:1.48
	gdb_7_4_1-2012-04-26-release:1.45.2.1
	gdb_7_4-2012-01-24-release:1.45.2.1
	gdb_7_4-branch:1.45.0.2
	gdb_7_4-2011-12-13-branchpoint:1.45
	gdb_7_3_1-2011-09-04-release:1.44
	gdb_7_3-2011-07-26-release:1.44
	gdb_7_3-branch:1.44.0.2
	gdb_7_3-2011-04-01-branchpoint:1.44
	gdb_7_2-2010-09-02-release:1.43
	gdb_7_2-branch:1.43.0.4
	gdb_7_2-2010-07-07-branchpoint:1.43
	gdb_7_1-2010-03-18-release:1.43
	gdb_7_1-branch:1.43.0.2
	gdb_7_1-2010-02-18-branchpoint:1.43
	gdb_7_0_1-2009-12-22-release:1.42
	gdb_7_0-2009-10-06-release:1.42
	gdb_7_0-branch:1.42.0.4
	gdb_7_0-2009-09-16-branchpoint:1.42
	arc-sim-20090309:1.40
	msnyder-checkpoint-072509-branch:1.42.0.2
	msnyder-checkpoint-072509-branchpoint:1.42
	arc-insight_6_8-branch:1.40.0.16
	arc-insight_6_8-branchpoint:1.40
	insight_6_8-branch:1.40.0.14
	insight_6_8-branchpoint:1.40
	reverse-20081226-branch:1.40.0.12
	reverse-20081226-branchpoint:1.40
	multiprocess-20081120-branch:1.40.0.10
	multiprocess-20081120-branchpoint:1.40
	reverse-20080930-branch:1.40.0.8
	reverse-20080930-branchpoint:1.40
	reverse-20080717-branch:1.40.0.6
	reverse-20080717-branchpoint:1.40
	msnyder-reverse-20080609-branch:1.40.0.4
	msnyder-reverse-20080609-branchpoint:1.40
	drow-reverse-20070409-branch:1.37.0.2
	drow-reverse-20070409-branchpoint:1.37
	gdb_6_8-2008-03-27-release:1.40
	gdb_6_8-branch:1.40.0.2
	gdb_6_8-2008-02-26-branchpoint:1.40
	gdb_6_7_1-2007-10-29-release:1.39
	gdb_6_7-2007-10-10-release:1.39
	gdb_6_7-branch:1.39.0.2
	gdb_6_7-2007-09-07-branchpoint:1.39
	insight_6_6-20070208-release:1.36
	gdb_6_6-2006-12-18-release:1.36
	gdb_6_6-branch:1.36.0.18
	gdb_6_6-2006-11-15-branchpoint:1.36
	insight_6_5-20061003-release:1.36
	gdb-csl-symbian-6_4_50_20060226-12:1.36
	gdb-csl-sourcerygxx-3_4_4-25:1.35
	nickrob-async-20060828-mergepoint:1.36
	gdb-csl-symbian-6_4_50_20060226-11:1.36
	gdb-csl-sourcerygxx-4_1-17:1.36
	gdb-csl-20060226-branch-local-2:1.36
	gdb-csl-sourcerygxx-4_1-14:1.36
	gdb-csl-sourcerygxx-4_1-13:1.36
	gdb-csl-sourcerygxx-4_1-12:1.36
	gdb-csl-sourcerygxx-3_4_4-21:1.36
	gdb_6_5-20060621-release:1.36
	gdb-csl-sourcerygxx-4_1-9:1.36
	gdb-csl-sourcerygxx-4_1-8:1.36
	gdb-csl-sourcerygxx-4_1-7:1.36
	gdb-csl-arm-2006q1-6:1.36
	gdb-csl-sourcerygxx-4_1-6:1.36
	gdb-csl-symbian-6_4_50_20060226-10:1.36
	gdb-csl-symbian-6_4_50_20060226-9:1.36
	gdb-csl-symbian-6_4_50_20060226-8:1.36
	gdb-csl-coldfire-4_1-11:1.36
	gdb-csl-sourcerygxx-3_4_4-19:1.36
	gdb-csl-coldfire-4_1-10:1.36
	gdb_6_5-branch:1.36.0.16
	gdb_6_5-2006-05-14-branchpoint:1.36
	gdb-csl-sourcerygxx-4_1-5:1.36
	nickrob-async-20060513-branch:1.36.0.14
	nickrob-async-20060513-branchpoint:1.36
	gdb-csl-sourcerygxx-4_1-4:1.36
	msnyder-reverse-20060502-branch:1.36.0.12
	msnyder-reverse-20060502-branchpoint:1.36
	gdb-csl-morpho-4_1-4:1.36
	gdb-csl-sourcerygxx-3_4_4-17:1.36
	readline_5_1-import-branch:1.36.0.10
	readline_5_1-import-branchpoint:1.36
	gdb-csl-20060226-branch-merge-to-csl-symbian-1:1.36
	gdb-csl-symbian-20060226-branch:1.36.0.8
	gdb-csl-symbian-20060226-branchpoint:1.36
	gdb-csl-20060226-branch-merge-to-csl-local-1:1.36
	msnyder-reverse-20060331-branch:1.36.0.6
	msnyder-reverse-20060331-branchpoint:1.36
	gdb-csl-available-20060303-branch:1.36.0.4
	gdb-csl-available-20060303-branchpoint:1.36
	gdb-csl-20060226-branch:1.36.0.2
	gdb-csl-20060226-branchpoint:1.36
	gdb_6_4-20051202-release:1.35
	msnyder-fork-checkpoint-branch:1.35.0.12
	msnyder-fork-checkpoint-branchpoint:1.35
	gdb-csl-gxxpro-6_3-branch:1.35.0.10
	gdb-csl-gxxpro-6_3-branchpoint:1.35
	gdb_6_4-branch:1.35.0.8
	gdb_6_4-2005-11-01-branchpoint:1.35
	gdb-csl-arm-20051020-branch:1.35.0.6
	gdb-csl-arm-20051020-branchpoint:1.35
	msnyder-tracepoint-checkpoint-branch:1.35.0.4
	msnyder-tracepoint-checkpoint-branchpoint:1.35
	gdb-csl-arm-20050325-2005-q1b:1.35
	gdb-csl-arm-20050325-2005-q1a:1.35
	csl-arm-20050325-branch:1.35.0.2
	csl-arm-20050325-branchpoint:1.35
	gdb-post-i18n-errorwarning-20050211:1.34
	gdb-pre-i18n-errorwarning-20050211:1.33
	gdb_6_3-20041109-release:1.32
	gdb_6_3-branch:1.32.0.2
	gdb_6_3-20041019-branchpoint:1.32
	drow_intercu-merge-20040921:1.32
	drow_intercu-merge-20040915:1.31
	jimb-gdb_6_2-e500-branch:1.29.0.6
	jimb-gdb_6_2-e500-branchpoint:1.29
	gdb_6_2-20040730-release:1.29
	gdb_6_2-branch:1.29.0.2
	gdb_6_2-2004-07-10-gmt-branchpoint:1.29
	gdb_6_1_1-20040616-release:1.23
	gdb_6_1-2004-04-05-release:1.23
	drow_intercu-merge-20040402:1.26
	drow_intercu-merge-20040327:1.26
	ezannoni_pie-20040323-branch:1.26.0.2
	ezannoni_pie-20040323-branchpoint:1.26
	cagney_tramp-20040321-mergepoint:1.26
	cagney_tramp-20040309-branch:1.23.0.10
	cagney_tramp-20040309-branchpoint:1.23
	gdb_6_1-branch:1.23.0.8
	gdb_6_1-2004-03-01-gmt-branchpoint:1.23
	drow_intercu-20040221-branch:1.23.0.6
	drow_intercu-20040221-branchpoint:1.23
	cagney_bfdfile-20040213-branch:1.23.0.4
	cagney_bfdfile-20040213-branchpoint:1.23
	drow-cplus-merge-20040208:1.23
	carlton_dictionary-20040126-merge:1.23
	cagney_bigcore-20040122-branch:1.23.0.2
	cagney_bigcore-20040122-branchpoint:1.23
	drow-cplus-merge-20040113:1.23
	drow-cplus-merge-20031224:1.23
	drow-cplus-merge-20031220:1.23
	carlton_dictionary-20031215-merge:1.23
	drow-cplus-merge-20031214:1.23
	carlton-dictionary-20031111-merge:1.23
	gdb_6_0-2003-10-04-release:1.19
	kettenis_sparc-20030918-branch:1.22.0.4
	kettenis_sparc-20030918-branchpoint:1.22
	carlton_dictionary-20030917-merge:1.22
	ezannoni_pie-20030916-branchpoint:1.22
	ezannoni_pie-20030916-branch:1.22.0.2
	cagney_x86i386-20030821-branch:1.21.0.2
	cagney_x86i386-20030821-branchpoint:1.21
	carlton_dictionary-20030805-merge:1.19
	carlton_dictionary-20030627-merge:1.19
	gdb_6_0-branch:1.19.0.6
	gdb_6_0-2003-06-23-branchpoint:1.19
	jimb-ppc64-linux-20030613-branch:1.19.0.4
	jimb-ppc64-linux-20030613-branchpoint:1.19
	cagney_convert-20030606-branch:1.19.0.2
	cagney_convert-20030606-branchpoint:1.19
	cagney_writestrings-20030508-branch:1.18.0.28
	cagney_writestrings-20030508-branchpoint:1.18
	jimb-ppc64-linux-20030528-branch:1.18.0.26
	jimb-ppc64-linux-20030528-branchpoint:1.18
	carlton_dictionary-20030523-merge:1.18
	cagney_fileio-20030521-branch:1.18.0.24
	cagney_fileio-20030521-branchpoint:1.18
	kettenis_i386newframe-20030517-mergepoint:1.18
	jimb-ppc64-linux-20030509-branch:1.18.0.22
	jimb-ppc64-linux-20030509-branchpoint:1.18
	kettenis_i386newframe-20030504-mergepoint:1.18
	carlton_dictionary-20030430-merge:1.18
	kettenis_i386newframe-20030419-branch:1.18.0.20
	kettenis_i386newframe-20030419-branchpoint:1.18
	carlton_dictionary-20030416-merge:1.18
	cagney_frameaddr-20030409-mergepoint:1.18
	kettenis_i386newframe-20030406-branch:1.18.0.18
	kettenis_i386newframe-20030406-branchpoint:1.18
	cagney_frameaddr-20030403-branchpoint:1.18
	cagney_frameaddr-20030403-branch:1.18.0.16
	cagney_framebase-20030330-mergepoint:1.18
	cagney_framebase-20030326-branch:1.18.0.14
	cagney_framebase-20030326-branchpoint:1.18
	cagney_lazyid-20030317-branch:1.18.0.12
	cagney_lazyid-20030317-branchpoint:1.18
	kettenis-i386newframe-20030316-mergepoint:1.18
	offbyone-20030313-branch:1.18.0.10
	offbyone-20030313-branchpoint:1.18
	kettenis-i386newframe-20030308-branch:1.18.0.8
	kettenis-i386newframe-20030308-branchpoint:1.18
	carlton_dictionary-20030305-merge:1.18
	cagney_offbyone-20030303-branch:1.18.0.6
	cagney_offbyone-20030303-branchpoint:1.18
	carlton_dictionary-20030207-merge:1.18
	interps-20030203-mergepoint:1.18
	interps-20030202-branch:1.18.0.4
	interps-20030202-branchpoint:1.18
	cagney-unwind-20030108-branch:1.18.0.2
	cagney-unwind-20030108-branchpoint:1.18
	carlton_dictionary-20021223-merge:1.18
	gdb_5_3-2002-12-12-release:1.16.6.1
	carlton_dictionary-20021115-merge:1.18
	kseitz_interps-20021105-merge:1.18
	kseitz_interps-20021103-merge:1.18
	drow-cplus-merge-20021020:1.16
	drow-cplus-merge-20021025:1.18
	carlton_dictionary-20021025-merge:1.18
	carlton_dictionary-20021011-merge:1.16
	drow-cplus-branch:1.16.0.10
	drow-cplus-branchpoint:1.16
	kseitz_interps-20020930-merge:1.16
	carlton_dictionary-20020927-merge:1.16
	carlton_dictionary-branch:1.16.0.8
	carlton_dictionary-20020920-branchpoint:1.16
	gdb_5_3-branch:1.16.0.6
	gdb_5_3-2002-09-04-branchpoint:1.16
	kseitz_interps-20020829-merge:1.16
	cagney_sysregs-20020825-branch:1.16.0.4
	cagney_sysregs-20020825-branchpoint:1.16
	readline_4_3-import-branch:1.16.0.2
	readline_4_3-import-branchpoint:1.16
	gdb_5_2_1-2002-07-23-release:1.11
	kseitz_interps-20020528-branch:1.12.0.4
	kseitz_interps-20020528-branchpoint:1.12
	cagney_regbuf-20020515-branch:1.12.0.2
	cagney_regbuf-20020515-branchpoint:1.12
	jimb-macro-020506-branch:1.11.0.4
	jimb-macro-020506-branchpoint:1.11
	gdb_5_2-2002-04-29-release:1.11
	gdb_5_2-branch:1.11.0.2
	gdb_5_2-2002-03-03-branchpoint:1.11
	gdb_5_1_1-2002-01-24-release:1.9
	gdb_5_1_0_1-2002-01-03-release:1.9
	cygnus_cvs_20020108_pre:1.11
	gdb_5_1_0_1-2002-01-03-branchpoint:1.9
	gdb_5_1_0_1-2002-01-03-branch:1.9.0.6
	gdb_5_1-2001-11-21-release:1.9
	gdb_s390-2001-09-26-branch:1.9.0.4
	gdb_s390-2001-09-26-branchpoint:1.9
	gdb_5_1-2001-07-29-branch:1.9.0.2
	gdb_5_1-2001-07-29-branchpoint:1.9
	dberlin-typesystem-branch:1.7.0.2
	dberlin-typesystem-branchpoint:1.7
	gdb-post-ptid_t-2001-05-03:1.7
	gdb-pre-ptid_t-2001-05-03:1.6
	insight-precleanup-2001-01-01:1.3
	gdb-post-protoization-2000-07-29:1.3
	gdb-pre-protoization-2000-07-29:1.3
	gdb-premipsmulti-2000-06-06-branch:1.3.0.2
	gdb-premipsmulti-2000-06-06-branchpoint:1.3
	gdb-post-params-removal-2000-06-04:1.2
	gdb-pre-params-removal-2000-06-04:1.2
	gdb-post-params-removal-2000-05-28:1.1
	gdb-pre-params-removal-2000-05-28:1.1;
locks; strict;
comment	@ * @;


1.50
date	2013.09.30.11.50.11;	author luisgpm;	state Exp;
branches;
next	1.49;

1.49
date	2013.01.01.06.32.45;	author brobecke;	state Exp;
branches;
next	1.48;

1.48
date	2012.04.12.10.32.23;	author kettenis;	state Exp;
branches;
next	1.47;

1.47
date	2012.01.04.08.17.04;	author brobecke;	state Exp;
branches;
next	1.46;

1.46
date	2011.12.14.17.20.30;	author palves;	state Exp;
branches;
next	1.45;

1.45
date	2011.12.05.14.16.50;	author palves;	state Exp;
branches
	1.45.2.1;
next	1.44;

1.44
date	2011.01.01.15.33.08;	author brobecke;	state Exp;
branches;
next	1.43;

1.43
date	2010.01.01.07.31.36;	author brobecke;	state Exp;
branches;
next	1.42;

1.42
date	2009.02.23.00.03.49;	author palves;	state Exp;
branches;
next	1.41;

1.41
date	2009.01.03.05.57.52;	author brobecke;	state Exp;
branches;
next	1.40;

1.40
date	2008.01.01.22.53.11;	author drow;	state Exp;
branches;
next	1.39;

1.39
date	2007.08.23.18.08.34;	author brobecke;	state Exp;
branches;
next	1.38;

1.38
date	2007.05.06.14.34.37;	author uweigand;	state Exp;
branches;
next	1.37;

1.37
date	2007.01.09.17.58.51;	author drow;	state Exp;
branches;
next	1.36;

1.36
date	2005.12.17.22.34.01;	author eliz;	state Exp;
branches;
next	1.35;

1.35
date	2005.02.11.18.13.50;	author cagney;	state Exp;
branches;
next	1.34;

1.34
date	2005.02.11.04.05.51;	author cagney;	state Exp;
branches;
next	1.33;

1.33
date	2005.01.12.20.36.59;	author kettenis;	state Exp;
branches;
next	1.32;

1.32
date	2004.09.19.20.49.26;	author kettenis;	state Exp;
branches;
next	1.31;

1.31
date	2004.08.14.23.37.04;	author kettenis;	state Exp;
branches;
next	1.30;

1.30
date	2004.08.09.20.40.14;	author kettenis;	state Exp;
branches;
next	1.29;

1.29
date	2004.05.31.11.20.41;	author kettenis;	state Exp;
branches;
next	1.28;

1.28
date	2004.05.31.10.01.18;	author kettenis;	state Exp;
branches;
next	1.27;

1.27
date	2004.05.15.17.04.10;	author kettenis;	state Exp;
branches;
next	1.26;

1.26
date	2004.03.16.13.54.10;	author kettenis;	state Exp;
branches;
next	1.25;

1.25
date	2004.03.16.13.48.23;	author kettenis;	state Exp;
branches;
next	1.24;

1.24
date	2004.03.15.23.03.07;	author kettenis;	state Exp;
branches;
next	1.23;

1.23
date	2003.09.28.13.35.44;	author kettenis;	state Exp;
branches
	1.23.6.1
	1.23.10.1;
next	1.22;

1.22
date	2003.08.23.08.56.45;	author kettenis;	state Exp;
branches;
next	1.21;

1.21
date	2003.08.10.18.32.09;	author kettenis;	state Exp;
branches;
next	1.20;

1.20
date	2003.08.10.16.22.15;	author kettenis;	state Exp;
branches;
next	1.19;

1.19
date	2003.05.31.16.08.06;	author kettenis;	state Exp;
branches;
next	1.18;

1.18
date	2002.10.20.21.18.59;	author kettenis;	state Exp;
branches;
next	1.17;

1.17
date	2002.10.20.11.54.40;	author kettenis;	state Exp;
branches;
next	1.16;

1.16
date	2002.07.02.09.12.37;	author kettenis;	state Exp;
branches
	1.16.6.1
	1.16.8.1
	1.16.10.1;
next	1.15;

1.15
date	2002.06.30.17.01.42;	author kettenis;	state Exp;
branches;
next	1.14;

1.14
date	2002.06.15.13.54.22;	author kettenis;	state Exp;
branches;
next	1.13;

1.13
date	2002.06.14.19.42.19;	author kettenis;	state Exp;
branches;
next	1.12;

1.12
date	2002.05.11.17.22.26;	author thorpej;	state Exp;
branches
	1.12.2.1
	1.12.4.1;
next	1.11;

1.11
date	2002.01.05.18.36.32;	author thorpej;	state Exp;
branches;
next	1.10;

1.10
date	2001.12.29.20.15.47;	author kettenis;	state Exp;
branches;
next	1.9;

1.9
date	2001.07.21.20.16.44;	author kettenis;	state Exp;
branches;
next	1.8;

1.8
date	2001.07.13.18.27.21;	author kettenis;	state Exp;
branches;
next	1.7;

1.7
date	2001.05.04.04.15.25;	author kevinb;	state Exp;
branches;
next	1.6;

1.6
date	2001.03.31.18.09.03;	author kettenis;	state Exp;
branches;
next	1.5;

1.5
date	2001.03.01.01.39.20;	author cagney;	state Exp;
branches;
next	1.4;

1.4
date	2001.01.03.21.12.18;	author jtc;	state Exp;
branches;
next	1.3;

1.3
date	2000.06.05.18.59.40;	author kettenis;	state Exp;
branches;
next	1.2;

1.2
date	2000.05.31.23.14.19;	author kettenis;	state Exp;
branches;
next	1.1;

1.1
date	2000.05.24.22.32.58;	author kettenis;	state Exp;
branches;
next	;

1.45.2.1
date	2012.01.06.04.43.16;	author brobecke;	state Exp;
branches;
next	;

1.23.6.1
date	2004.03.27.17.37.49;	author drow;	state Exp;
branches;
next	1.23.6.2;

1.23.6.2
date	2004.09.16.17.01.08;	author drow;	state Exp;
branches;
next	1.23.6.3;

1.23.6.3
date	2004.09.21.20.44.16;	author drow;	state Exp;
branches;
next	;

1.23.10.1
date	2004.03.21.23.57.34;	author cagney;	state Exp;
branches;
next	;

1.16.6.1
date	2002.10.20.12.14.39;	author kettenis;	state Exp;
branches;
next	;

1.16.8.1
date	2002.10.25.23.49.54;	author carlton;	state Exp;
branches;
next	1.16.8.2;

1.16.8.2
date	2003.06.27.21.49.58;	author carlton;	state Exp;
branches;
next	1.16.8.3;

1.16.8.3
date	2003.09.17.21.28.22;	author carlton;	state Exp;
branches;
next	1.16.8.4;

1.16.8.4
date	2003.11.11.23.50.46;	author carlton;	state Exp;
branches;
next	;

1.16.10.1
date	2002.10.26.17.12.07;	author drow;	state Exp;
branches;
next	1.16.10.2;

1.16.10.2
date	2003.12.14.20.27.17;	author drow;	state Exp;
branches;
next	;

1.12.2.1
date	2002.06.15.16.42.52;	author cagney;	state Exp;
branches;
next	1.12.2.2;

1.12.2.2
date	2002.06.21.16.19.26;	author cagney;	state Exp;
branches;
next	1.12.2.3;

1.12.2.3
date	2002.07.03.18.43.57;	author cagney;	state Exp;
branches;
next	;

1.12.4.1
date	2002.06.20.01.32.35;	author kseitz;	state Exp;
branches;
next	1.12.4.2;

1.12.4.2
date	2002.07.22.21.46.59;	author kseitz;	state Exp;
branches;
next	1.12.4.3;

1.12.4.3
date	2002.11.04.00.17.31;	author ezannoni;	state Exp;
branches;
next	;


desc
@@


1.50
log
@	* aarch64-linux-nat.c: Replace PIDGET with ptid_get_pid.
	Replace TIDGET with ptid_get_lwp.
	Replace GET_LWP with ptid_get_lwp.
	* aix-thread.c (BUILD_THREAD, BUILD_LWP): Remove.
	Replace BUILD_THREAD with ptid_build.
	Replace BUILD_LWP with ptid_build.
	Replace PIDGET with ptid_get_pid.
	Replace TIDGET with ptid_get_lwp.
	* alphabsd-nat.c: Replace PIDGET with ptid_get_pid.
	* amd64-linux-nat.c: Replace PIDGET with ptid_get_pid.
	Replace TIDGET with ptid_get_lwp.
	* amd64bsd-nat.c: Replace PIDGET with ptid_get_pid.
	* arm-linux-nat.c: Replace PIDGET with ptid_get_pid.
	Replace TIDGET with ptid_get_lwp.
	Replace GET_LWP with ptid_get_lwp.
	* armnbsd-nat.c: Replace PIDGET with ptid_get_pid.
	* auxv.c: Likewise.
	* breakpoint.c: Likewise.
	* common/ptid.c (ptid_is_pid): Condense check for
	null_ptid and minus_one_ptid.
	(ptid_lwp_p): New function.
	(ptid_tid_p): New function.
	* common/ptid.h: Update comments for accessors.
	(ptid_lwp_p): New prototype.
	(ptid_tid_p): New prototype.
	* defs.h (PIDGET, TIDGET, MERGEPID): Do not define.
	* gcore.c: Replace PIDGET with ptid_get_pid.
	* gdbthread.h: Likewise.
	* gnu-nat.c: Likewise.
	* hppa-linux-nat.c: Replace PIDGET with ptid_get_pid.
	Replace TIDGET with ptid_get_lwp.
	* hppabsd-nat.c: Replace PIDGET with ptid_get_pid.
	* hppanbsd-nat.c: Likewise.
	* i386-linux-nat.c: Replace PIDGET with ptid_get_pid.
	Replace TIDGET with ptid_get_lwp.
	* i386bsd-nat.c: Replace PIDGET with ptid_get_pid.
	* ia64-linux-nat.c: Replace PIDGET with ptid_get_pid.
	* infcmd.c: Likewise.
	* inferior.h: Likewise.
	* inflow.c: Likewise.
	* infrun.c: Likewise.
	* linux-fork.c: Likewise.
	* linux-nat.c: Replace PIDGET with ptid_get_pid.
	Replace GET_PID with ptid_get_pid.
	Replace is_lwp with ptid_lwp_p.
	Replace GET_LWP with ptid_get_lwp.
	Replace BUILD_LWP with ptid_build.
@
text
@/* Native-dependent code for modern i386 BSD's.

   Copyright (C) 2000-2013 Free Software Foundation, Inc.

   This file is part of GDB.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */

#include "defs.h"
#include "inferior.h"
#include "regcache.h"

#include "gdb_assert.h"
#include <signal.h>
#include <stddef.h>
#include <sys/types.h>
#include <sys/ptrace.h>
#include <machine/reg.h>
#include <machine/frame.h>

#include "i386-tdep.h"
#include "i387-tdep.h"
#include "i386bsd-nat.h"
#include "inf-ptrace.h"


/* In older BSD versions we cannot get at some of the segment
   registers.  FreeBSD for example didn't support the %fs and %gs
   registers until the 3.0 release.  We have autoconf checks for their
   presence, and deal gracefully with their absence.  */

/* Offset in `struct reg' where MEMBER is stored.  */
#define REG_OFFSET(member) offsetof (struct reg, member)

/* At i386bsd_reg_offset[REGNUM] you'll find the offset in `struct
   reg' where the GDB register REGNUM is stored.  Unsupported
   registers are marked with `-1'.  */
static int i386bsd_r_reg_offset[] =
{
  REG_OFFSET (r_eax),
  REG_OFFSET (r_ecx),
  REG_OFFSET (r_edx),
  REG_OFFSET (r_ebx),
  REG_OFFSET (r_esp),
  REG_OFFSET (r_ebp),
  REG_OFFSET (r_esi),
  REG_OFFSET (r_edi),
  REG_OFFSET (r_eip),
  REG_OFFSET (r_eflags),
  REG_OFFSET (r_cs),
  REG_OFFSET (r_ss),
  REG_OFFSET (r_ds),
  REG_OFFSET (r_es),
#ifdef HAVE_STRUCT_REG_R_FS
  REG_OFFSET (r_fs),
#else
  -1,
#endif
#ifdef HAVE_STRUCT_REG_R_GS
  REG_OFFSET (r_gs)
#else
  -1
#endif
};

/* Macro to determine if a register is fetched with PT_GETREGS.  */
#define GETREGS_SUPPLIES(regnum) \
  ((0 <= (regnum) && (regnum) <= 15))

#ifdef HAVE_PT_GETXMMREGS
/* Set to 1 if the kernel supports PT_GETXMMREGS.  Initialized to -1
   so that we try PT_GETXMMREGS the first time around.  */
static int have_ptrace_xmmregs = -1;
#endif


/* Supply the general-purpose registers in GREGS, to REGCACHE.  */

static void
i386bsd_supply_gregset (struct regcache *regcache, const void *gregs)
{
  const char *regs = gregs;
  int regnum;

  for (regnum = 0; regnum < ARRAY_SIZE (i386bsd_r_reg_offset); regnum++)
    {
      int offset = i386bsd_r_reg_offset[regnum];

      if (offset != -1)
	regcache_raw_supply (regcache, regnum, regs + offset);
    }
}

/* Collect register REGNUM from REGCACHE and store its contents in
   GREGS.  If REGNUM is -1, collect and store all appropriate
   registers.  */

static void
i386bsd_collect_gregset (const struct regcache *regcache,
			 void *gregs, int regnum)
{
  char *regs = gregs;
  int i;

  for (i = 0; i < ARRAY_SIZE (i386bsd_r_reg_offset); i++)
    {
      if (regnum == -1 || regnum == i)
	{
	  int offset = i386bsd_r_reg_offset[i];

	  if (offset != -1)
	    regcache_raw_collect (regcache, i, regs + offset);
	}
    }
}

/* Fetch register REGNUM from the inferior.  If REGNUM is -1, do this
   for all registers (including the floating point registers).  */

static void
i386bsd_fetch_inferior_registers (struct target_ops *ops,
				  struct regcache *regcache, int regnum)
{
  if (regnum == -1 || GETREGS_SUPPLIES (regnum))
    {
      struct reg regs;

      if (ptrace (PT_GETREGS, ptid_get_pid (inferior_ptid),
		  (PTRACE_TYPE_ARG3) &regs, 0) == -1)
	perror_with_name (_("Couldn't get registers"));

      i386bsd_supply_gregset (regcache, &regs);
      if (regnum != -1)
	return;
    }

  if (regnum == -1 || regnum >= I386_ST0_REGNUM)
    {
      struct fpreg fpregs;
#ifdef HAVE_PT_GETXMMREGS
      char xmmregs[512];

      if (have_ptrace_xmmregs != 0
	  && ptrace(PT_GETXMMREGS, ptid_get_pid (inferior_ptid),
		    (PTRACE_TYPE_ARG3) xmmregs, 0) == 0)
	{
	  have_ptrace_xmmregs = 1;
	  i387_supply_fxsave (regcache, -1, xmmregs);
	}
      else
	{
          if (ptrace (PT_GETFPREGS, ptid_get_pid (inferior_ptid),
		      (PTRACE_TYPE_ARG3) &fpregs, 0) == -1)
	    perror_with_name (_("Couldn't get floating point status"));

	  i387_supply_fsave (regcache, -1, &fpregs);
	}
#else
      if (ptrace (PT_GETFPREGS, ptid_get_pid (inferior_ptid),
		  (PTRACE_TYPE_ARG3) &fpregs, 0) == -1)
	perror_with_name (_("Couldn't get floating point status"));

      i387_supply_fsave (regcache, -1, &fpregs);
#endif
    }
}

/* Store register REGNUM back into the inferior.  If REGNUM is -1, do
   this for all registers (including the floating point registers).  */

static void
i386bsd_store_inferior_registers (struct target_ops *ops,
				  struct regcache *regcache, int regnum)
{
  if (regnum == -1 || GETREGS_SUPPLIES (regnum))
    {
      struct reg regs;

      if (ptrace (PT_GETREGS, ptid_get_pid (inferior_ptid),
                  (PTRACE_TYPE_ARG3) &regs, 0) == -1)
        perror_with_name (_("Couldn't get registers"));

      i386bsd_collect_gregset (regcache, &regs, regnum);

      if (ptrace (PT_SETREGS, ptid_get_pid (inferior_ptid),
	          (PTRACE_TYPE_ARG3) &regs, 0) == -1)
        perror_with_name (_("Couldn't write registers"));

      if (regnum != -1)
	return;
    }

  if (regnum == -1 || regnum >= I386_ST0_REGNUM)
    {
      struct fpreg fpregs;
#ifdef HAVE_PT_GETXMMREGS
      char xmmregs[512];

      if (have_ptrace_xmmregs != 0
	  && ptrace(PT_GETXMMREGS, ptid_get_pid (inferior_ptid),
		    (PTRACE_TYPE_ARG3) xmmregs, 0) == 0)
	{
	  have_ptrace_xmmregs = 1;

	  i387_collect_fxsave (regcache, regnum, xmmregs);

	  if (ptrace (PT_SETXMMREGS, ptid_get_pid (inferior_ptid),
		      (PTRACE_TYPE_ARG3) xmmregs, 0) == -1)
            perror_with_name (_("Couldn't write XMM registers"));
	}
      else
	{
	  have_ptrace_xmmregs = 0;
#endif
          if (ptrace (PT_GETFPREGS, ptid_get_pid (inferior_ptid),
		      (PTRACE_TYPE_ARG3) &fpregs, 0) == -1)
	    perror_with_name (_("Couldn't get floating point status"));

          i387_collect_fsave (regcache, regnum, &fpregs);

          if (ptrace (PT_SETFPREGS, ptid_get_pid (inferior_ptid),
		      (PTRACE_TYPE_ARG3) &fpregs, 0) == -1)
	    perror_with_name (_("Couldn't write floating point status"));
#ifdef HAVE_PT_GETXMMREGS
        }
#endif
    }
}

/* Create a prototype *BSD/i386 target.  The client can override it
   with local methods.  */

struct target_ops *
i386bsd_target (void)
{
  struct target_ops *t;

  t = inf_ptrace_target ();
  t->to_fetch_registers = i386bsd_fetch_inferior_registers;
  t->to_store_registers = i386bsd_store_inferior_registers;
  return t;
}


/* Support for debug registers.  */

#ifdef HAVE_PT_GETDBREGS

/* Not all versions of FreeBSD/i386 that support the debug registers
   have this macro.  */
#ifndef DBREG_DRX
#define DBREG_DRX(d, x) ((&d->dr0)[x])
#endif

static unsigned long
i386bsd_dr_get (ptid_t ptid, int regnum)
{
  struct dbreg dbregs;

  if (ptrace (PT_GETDBREGS, ptid_get_pid (inferior_ptid),
	      (PTRACE_TYPE_ARG3) &dbregs, 0) == -1)
    perror_with_name (_("Couldn't read debug registers"));

  return DBREG_DRX ((&dbregs), regnum);
}

static void
i386bsd_dr_set (int regnum, unsigned int value)
{
  struct dbreg dbregs;

  if (ptrace (PT_GETDBREGS, ptid_get_pid (inferior_ptid),
              (PTRACE_TYPE_ARG3) &dbregs, 0) == -1)
    perror_with_name (_("Couldn't get debug registers"));

  /* For some mysterious reason, some of the reserved bits in the
     debug control register get set.  Mask these off, otherwise the
     ptrace call below will fail.  */
  DBREG_DRX ((&dbregs), 7) &= ~(0x0000fc00);

  DBREG_DRX ((&dbregs), regnum) = value;

  if (ptrace (PT_SETDBREGS, ptid_get_pid (inferior_ptid),
              (PTRACE_TYPE_ARG3) &dbregs, 0) == -1)
    perror_with_name (_("Couldn't write debug registers"));
}

void
i386bsd_dr_set_control (unsigned long control)
{
  i386bsd_dr_set (7, control);
}

void
i386bsd_dr_set_addr (int regnum, CORE_ADDR addr)
{
  gdb_assert (regnum >= 0 && regnum <= 4);

  i386bsd_dr_set (regnum, addr);
}

CORE_ADDR
i386bsd_dr_get_addr (int regnum)
{
  return i386bsd_dr_get (inferior_ptid, regnum);
}

unsigned long
i386bsd_dr_get_status (void)
{
  return i386bsd_dr_get (inferior_ptid, 6);
}

unsigned long
i386bsd_dr_get_control (void)
{
  return i386bsd_dr_get (inferior_ptid, 7);
}

#endif /* PT_GETDBREGS */


/* Provide a prototype to silence -Wmissing-prototypes.  */
void _initialize_i386bsd_nat (void);

void
_initialize_i386bsd_nat (void)
{
  int offset;

  /* To support the recognition of signal handlers, i386bsd-tdep.c
     hardcodes some constants.  Inclusion of this file means that we
     are compiling a native debugger, which means that we can use the
     system header files and sysctl(3) to get at the relevant
     information.  */

#if defined (__FreeBSD_version) && __FreeBSD_version >= 400011
#define SC_REG_OFFSET i386fbsd4_sc_reg_offset
#elif defined (__FreeBSD_version) && __FreeBSD_version >= 300005
#define SC_REG_OFFSET i386fbsd_sc_reg_offset
#elif defined (NetBSD) || defined (__NetBSD_Version__)
#define SC_REG_OFFSET i386nbsd_sc_reg_offset
#elif defined (OpenBSD)
#define SC_REG_OFFSET i386obsd_sc_reg_offset
#endif

#ifdef SC_REG_OFFSET

  /* We only check the program counter, stack pointer and frame
     pointer since these members of `struct sigcontext' are essential
     for providing backtraces.  More checks could be added, but would
     involve adding configure checks for the appropriate structure
     members, since older BSD's don't provide all of them.  */

#define SC_PC_OFFSET SC_REG_OFFSET[I386_EIP_REGNUM]
#define SC_SP_OFFSET SC_REG_OFFSET[I386_ESP_REGNUM]
#define SC_FP_OFFSET SC_REG_OFFSET[I386_EBP_REGNUM]

  /* Override the default value for the offset of the program counter
     in the sigcontext structure.  */
  offset = offsetof (struct sigcontext, sc_pc);

  if (SC_PC_OFFSET != offset)
    {
      warning (_("\
offsetof (struct sigcontext, sc_pc) yields %d instead of %d.\n\
Please report this to <bug-gdb@@gnu.org>."), 
	       offset, SC_PC_OFFSET);
    }

  SC_PC_OFFSET = offset;

  /* Likewise for the stack pointer.  */
  offset = offsetof (struct sigcontext, sc_sp);

  if (SC_SP_OFFSET != offset)
    {
      warning (_("\
offsetof (struct sigcontext, sc_sp) yields %d instead of %d.\n\
Please report this to <bug-gdb@@gnu.org>."),
	       offset, SC_SP_OFFSET);
    }

  SC_SP_OFFSET = offset;

  /* And the frame pointer.  */
  offset = offsetof (struct sigcontext, sc_fp);

  if (SC_FP_OFFSET != offset)
    {
      warning (_("\
offsetof (struct sigcontext, sc_fp) yields %d instead of %d.\n\
Please report this to <bug-gdb@@gnu.org>."),
	       offset, SC_FP_OFFSET);
    }

  SC_FP_OFFSET = offset;

#endif /* SC_REG_OFFSET */
}
@


1.49
log
@Update years in copyright notice for the GDB files.

Two modifications:
  1. The addition of 2013 to the copyright year range for every file;
  2. The use of a single year range, instead of potentially multiple
     year ranges, as approved by the FSF.
@
text
@d139 1
a139 1
      if (ptrace (PT_GETREGS, PIDGET (inferior_ptid),
d155 1
a155 1
	  && ptrace(PT_GETXMMREGS, PIDGET (inferior_ptid),
d163 1
a163 1
          if (ptrace (PT_GETFPREGS, PIDGET (inferior_ptid),
d170 1
a170 1
      if (ptrace (PT_GETFPREGS, PIDGET (inferior_ptid),
d190 1
a190 1
      if (ptrace (PT_GETREGS, PIDGET (inferior_ptid),
d196 1
a196 1
      if (ptrace (PT_SETREGS, PIDGET (inferior_ptid),
d211 1
a211 1
	  && ptrace(PT_GETXMMREGS, PIDGET (inferior_ptid),
d218 1
a218 1
	  if (ptrace (PT_SETXMMREGS, PIDGET (inferior_ptid),
d226 1
a226 1
          if (ptrace (PT_GETFPREGS, PIDGET (inferior_ptid),
d232 1
a232 1
          if (ptrace (PT_SETFPREGS, PIDGET (inferior_ptid),
d271 1
a271 1
  if (ptrace (PT_GETDBREGS, PIDGET (inferior_ptid),
d283 1
a283 1
  if (ptrace (PT_GETDBREGS, PIDGET (inferior_ptid),
d294 1
a294 1
  if (ptrace (PT_SETDBREGS, PIDGET (inferior_ptid),
@


1.48
log
@* i386bsd-nat.c (_initialize_i386bsd_nat): Add missing prototype.
@
text
@d3 1
a3 1
   Copyright (C) 2000-2005, 2007-2012 Free Software Foundation, Inc.
@


1.47
log
@Copyright year update in most files of the GDB Project.

gdb/ChangeLog:

        Copyright year update in most files of the GDB Project.
@
text
@d334 3
@


1.46
log
@gdb/
2011-12-14  Pedro Alves  <pedro@@codesourcery.com>

	PR threads/10729

	* linux-nat.c (linux_nat_new_thread): Change parameter to an lwp
	pointer.
	(linux_nat_prepare_to_resume): New global.
	(lwp_free): New.
	(purge_lwp_list): Use it.
	(add_lwp): Call linux_nat_new_thread even on the first LWP.
	Adjust to interface change.
	(delete_lwp): Call lwp_free instead of xfree.
	(detach_callback, linux_nat_detach, resume_lwp, linux_nat_resume)
	(linux_handle_syscall_trap, linux_handle_extended_wait)
	(linux_nat_filter_event, resume_stopped_resumed_lwps): Call
	linux_nat_prepare_to_resume before resuming.
	(linux_stop_lwp): New.
	(linux_nat_set_new_thread): Adjust.
	(linux_nat_set_prepare_to_resume): New.
	* linux-nat.h (struct arch_lwp_info): Forward declare.
	(struct lwp_info) <arch_private>: New field.
	(linux_stop_lwp): Declare.
	(linux_nat_set_new_thread): Adjust.
	(linux_nat_set_prepare_to_resume): New.

	* i386-nat.c (DR_NADDR, DR_STATUS, DR_CONTROL)
	(struct i386_debug_reg_state): Move to i386-nat.h.
	(dr_mirror): Comment.
	(i386_debug_reg_state): New.
	(i386_update_inferior_debug_regs): Simplify.
	(i386_stopped_data_address): Use the debug register state from the
	inferior, not from the local cache.
	* i386-nat.h (struct i386_dr_low_type): Delete reset_addr and
	unset_status fields.  New get_addr and get_control fields.
	(DR_FIRSTADDR, DR_LASTADDR, DR_CONTROL): Moved from i386-nat.c.
	(DR_NADDR, DR_STATUS): New.
	(struct i386_debug_reg_state): Moved from i386-nat.c.

	* amd64-linux-nat.c (struct arch_lwp_info): New.
	(amd64_linux_dr): Delete global.
	(amd64_linux_dr_get_addr): New.
	(amd64_linux_dr_get_control): New.
	(amd64_linux_dr_unset_status): Delete.
	(amd64_linux_dr_set_addr): Reimplement.
	(amd64_linux_dr_reset_addr): Delete.
	(update_debug_registers_callback): New.
	(amd64_linux_dr_set_control): Reimplement.
	(amd64_linux_dr_set_addr): Reimplement.
	(amd64_linux_prepare_to_resume): New.
	(amd64_linux_new_thread): Change parameter to an lwp pointer.
	Reimplement.
	(_initialize_amd64_linux_nat): No longer install
	i386_dr_low.reset_addr and i386_dr_low.unset_status.  Install
	amd64_linux_dr_get_control as i386_dr_low.get_control.  Install
	amd64_linux_dr_get_addr as i386_dr_low.get_addr.  Install
	amd64_linux_prepare_to_resume.
	* i386-linux-nat.c (DR_FIRSTADDR, DR_LASTADDR, DR_STATUS)
	(DR_CONTROL): Delete.
	(struct arch_lwp_info): New.
	(i386_linux_dr): Delete global.
	(i386_linux_dr_set_control): Reimplement.
	(i386_linux_dr_get_addr): New.
	(i386_linux_dr_set_addr): Reimplement.
	(i386_linux_dr_get_control): New.
	(update_debug_registers_callback): New.
	(i386_linux_dr_unset_status): Delete.
	(i386_linux_dr_set_addr): Reimplement.
	(i386_linux_prepare_to_resume): New.
	(i386_linux_new_thread): Change parameter to an lwp pointer.
	Reimplement.
	(_initialize_i386_linux_nat): No longer install
	i386_dr_low.reset_addr and i386_dr_low.unset_status.  Install
	i386_linux_dr_get_control as i386_dr_low.get_control.  Install
	i386_linux_dr_get_addr as i386_dr_low.get_addr.  Install
	i386_linux_prepare_to_resume.

	* arm-linux-nat.c (arm_linux_new_thread): Change parameter to an
	lwp pointer.  Adjust.
	* ia64-linux-nat.c (ia64_linux_new_thread): Likewise.
	* mips-linux-nat.c (mips_linux_new_thread): Likewise.
	* ppc-linux-nat.c (ppc_linux_new_thread): Likewise.
	* s390-nat.c (s390_fix_watch_points): Likewise.

	* i386-darwin-nat.c (DR_FIRSTADDR, DR_LASTADDR, DR_STATUS)
	(DR_CONTROL): Delete.
	(i386_darwin_dr_reset_addr): Delete.
	(i386_darwin_dr_get_addr): New.
	(i386_darwin_dr_get_control): New.
	* go32-nat.c
	(go32_get_dr7, go32_get_dr): New.
	(init_go32_ops): No longer install i386_dr_low.reset_addr.
	Install go32_get_dr7 as i386_dr_low.get_control.  Install
	go32_get_dr as i386_dr_low.get_addr.
	* i386bsd-nat.c (i386bsd_dr_get): New.
	(i386bsd_dr_reset_addr): Delete.
	(i386bsd_dr_get_addr): New.
	(i386bsd_dr_get_status): Use i386bsd_dr_get.
	(i386bsd_dr_get_control): New.
	* i386bsd-nat.h (i386bsd_dr_reset_addr): Delete.
	(i386bsd_dr_get_addr): New.
	(i386bsd_dr_get_control): New.
	* i386fbsd-nat.c (_initialize_i386fbsd_nat): No longer install
	i386_dr_low.reset_addr and i386_dr_low.unset_status.  Install
	i386bsd_dr_get_control as i386_dr_low.get_control.  Install
	i386bsd_dr_get_addr as i386_dr_low.get_addr.
	* windows-nat.c (init_windows_ops): No longer install
	i386_dr_low.reset_addr and i386_dr_low.unset_status.  Install
	cygwin_get_dr7 as i386_dr_low.get_control.  Install cygwin_get_dr
	as i386_dr_low.get_addr.
	(cygwin_get_dr): New.
	(cygwin_get_dr7): New.

gdb/testsuite/
2011-12-14  Pedro Alves  <pedro@@codesourcery.com>

	PR threads/10729

	* gdb.mi/watch-nonstop.c: New file.
 	* gdb.mi/mi-watch-nonstop.exp: New file.
@
text
@d3 1
a3 2
   Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005, 2007, 2008, 2009, 2010,
   2011 Free Software Foundation, Inc.
@


1.45
log
@2012-12-05  Pedro Alves  <pedro@@codesourcery.com>

	* amd64-linux-nat.c (amd64_linux_dr_get): Remove FIXME comment.
	Reinstate perror_with_name call on ptrace error.  Remove #if 0.
	* i386-linux-nat.c (i386_linux_dr_get): Likewise.
	* i386bsd-nat.c (i386bsd_dr_get_status): Likewise.
@
text
@d267 12
d314 2
a315 2
void
i386bsd_dr_reset_addr (int regnum)
d317 1
a317 3
  gdb_assert (regnum >= 0 && regnum <= 4);

  i386bsd_dr_set (regnum, 0);
d323 2
a324 1
  struct dbreg dbregs;
d326 4
a329 5
  if (ptrace (PT_GETDBREGS, PIDGET (inferior_ptid),
	      (PTRACE_TYPE_ARG3) &dbregs, 0) == -1)
    perror_with_name (_("Couldn't read debug registers"));

  return DBREG_DRX ((&dbregs), 6);
@


1.45.2.1
log
@Copyright year update in most files of the GDB Project.

gdb/ChangeLog:

        Copyright year update in most files of the GDB Project.
@
text
@d3 2
a4 1
   Copyright (C) 2000-2005, 2007-2012 Free Software Foundation, Inc.
@


1.44
log
@run copyright.sh for 2011.
@
text
@a314 5
  /* FIXME: kettenis/2001-03-31: Calling perror_with_name if the
     ptrace call fails breaks debugging remote targets.  The correct
     way to fix this is to add the hardware breakpoint and watchpoint
     stuff to the target vector.  For now, just return zero if the
     ptrace call fails.  */
a316 1
#if 0
a317 3
#else
    return 0;
#endif
@


1.43
log
@Update copyright year in most headers.

Automatic update by copyright.sh.
@
text
@d3 2
a4 2
   Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005, 2007, 2008, 2009, 2010
   Free Software Foundation, Inc.
@


1.42
log
@	* corelow.c (get_core_registers): Adjust.
	(core_file_thread_alive): Rename to...
	(core_thread_alive): ... this.
	(core_pid_to_str): Try gdbarch_core_pid_to_str first.
	(init_core_ops): Adjust.
	(coreops_suppress_target): Delete.
	(_initialize_corelow): Unconditionally add core_ops.
	* procfs.c: Include "inf-child.h".
	(procfs_ops): Delete.
	(init_procfs_ops): Delete.  Reimplement as...
	(procfs_target): ... this, inheriting from inf-child.
	(procfs_attach, procfs_detach, procfs_fetch_registers): Adjust.
	(procfs_prepare_to_store): Delete.
	(procfs_store_registers, procfs_resume): Adjust.
	(procfs_open): Delete.
	(procfs_suppress_run): Delete.
	(procfs_can_run): Delete.
	(procfs_mourn_inferior): Adjust.
	(procfs_init_inferior): Add target_ops parameter.  Adjust.
	(procfs_create_inferior): Don't pass procfs_init_inferior to
	fork_inferior.  Instead call it after fork_inferior returns.
	(procfs_find_new_threads): Adjust.
	(_initialize_procfs): Adjust to use procfs_target instead of
	init_procfs_ops.
	* sol-thread.c (orig_core_ops, sol_core_ops): Delete.
	(lwp_to_thread): Use target_thread_alive.
	(sol_thread_open): Delete.
	(sol_thread_attach): Delete.
	(sol_thread_detach, sol_thread_resume, sol_thread_wait)
	(sol_thread_fetch_registers, sol_thread_store_registers): Adjust
	to use find_target_beneath.
	(sol_thread_prepare_to_store, sol_thread_xfer_memory): Delete.
	(sol_thread_xfer_partial): Adjust to use find_target_beneath.
	(sol_thread_files_info, sol_thread_kill_inferior): Delete.
	(check_for_thread_db): New.
	(sol_thread_notice_signals, sol_thread_create_inferior): Delete.
	(sol_thread_new_objfile): Call check_for_thread_db.
	(sol_thread_mourn_inferior): Adjust to use find_target_beneath.
	(sol_thread_can_run): Delete.
	(sol_thread_alive): Adjust to use find_target_beneath.
	(sol_thread_stop): Delete.
	(rw_common): Use target_write_memory or target_read_memory.
	(ps_lgetregs, ps_lgetfpregs): Use target_fetch_registers.
	(ps_lsetregs, ps_lsetfpregs): Use target_store_registers.
	(solaris_pid_to_str): Remove check for libthread_db initialization
	failing.
	(sol_find_new_threads): Remove check for libthread_db
	initialization failing, or for an invalid inferior_ptid.  Adjust
	to use find_target_beneath.
	(sol_core_open, sol_core_close, sol_core_detach,
	sol_core_files_info, sol_find_memory_regions,
	sol_make_note_section, ignore): Delete.
	(init_sol_thread_ops): Make it a thread_stratum target.  Remove
	unneeded callback settings.
	(init_sol_core_ops): Delete.
	(_initialize_sol_thread): No longer call init_sol_core_ops, set
	procfs_suppress_run, or hack with core_ops.

	* target.h (struct target_ops): Add a target_ops * parameter to
	to_resume, to_fetch_registers, to_store_registers, to_thread_alive
	and to_find_new_threads.
	(target_fetch_registers, target_store_registers)
	(target_thread_alive, target_find_new_threads): Redeclare as
	function.

	* target.c (update_current_target): Do not inherit or de_fault
	to_resume, to_fetch_registers, to_store_registers,
	to_thread_alive, to_find_new_threads.
	(target_resume): Adjust.
	(target_thread_alive, target_find_new_threads): New.
	(debug_to_resume, debug_to_fetch_registers): Delete.
	(target_fetch_registers): New.
	(debug_to_store_registers): Delete.
	(target_store_registers): New.
	(debug_to_thread_alive, debug_to_find_new_threads): Delete.
	(setup_target_debug): Adjust.

	* gdbcore.h (core_ops): Delete declaration.

	* inf-ptrace.c, linux-nat.c, remote.c, amd64-linux-nat.c,
	inf-child.c, linux-thread-db.c, bsd-uthread.c, inf-ttrace.c,
	i386-sol2-tdep.c, darwin-nat.c, gnu-nat.c, go32-nat.c,
	hpux-thread.c, i386-linux-nat.c, i386fbsd-nat.c, monitor.c,
	nto-procfs.c, remote-m32r-sdi.c, remote-mips.c, windows-nat.c,
	alphabsd-nat.c, amd64bsd-nat.c, arm-linux-nat.c, armnbsd-nat.c,
	bsd-kvm.c, hppa-hpux-nat.c, hppa-linux-nat.c, hppabsd-nat.c,
	hppanbsd-nat.c, i386-darwin-nat.c, i386bsd-nat.c,
	ia64-linux-nat.c, m32r-linux-nat.c, m68kbsd-nat.c,
	m68klinux-nat.c, m88kbsd-nat.c, mips-linux-nat.c,
	mips64obsd-nat.c, mipsnbsd-nat.c, ppc-linux-nat.c, ppcnbsd-nat.c,
	ppcobsd-nat.c, remote-sim.c, rs6000-nat.c, s390-nat.c,
	shnbsd-nat.c, sparc-nat.c, sparc-nat.h, spu-linux-nat.c,
	vaxbsd-nat.c, xtensa-linux-nat.c: Adjust to target_ops changes.

	* gdbarch.sh (core_pid_to_str): New gdbarch callback.
	* gdbarch.h, gdbarch.c: Regenerate.

	* sol2-tdep.c: Include "inferior.h".
	(sol2_core_pid_to_str): New.
	* sol2-tdep.h (sol2_core_pid_to_str): Declare.

	* amd64-sol2-tdep.c (amd64_sol2_init_abi): Set it.
	* sparc-sol2-tdep.c (sparc32_sol2_init_abi): Set it.
	* sparc64-sol2-tdep.c (sparc64_sol2_init_abi): Set it.
	* i386-sol2-tdep.c (i386_sol2_init_abi): Set it.
@
text
@d3 1
a3 1
   Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005, 2007, 2008, 2009
@


1.41
log
@        Updated copyright notices for most files.
@
text
@d133 2
a134 1
i386bsd_fetch_inferior_registers (struct regcache *regcache, int regnum)
d184 2
a185 1
i386bsd_store_inferior_registers (struct regcache *regcache, int regnum)
@


1.40
log
@	Updated copyright notices for most files.
@
text
@d3 1
a3 1
   Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005, 2007, 2008
@


1.39
log
@        Switch the license of all .c files to GPLv3.
        Switch the license of all .h files to GPLv3.
        Switch the license of all .cc files to GPLv3.
@
text
@d3 1
a3 1
   Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005, 2007
@


1.38
log
@	* target.h (struct regcache): Add forward declaration.
	(struct target_ops): Add REGCACHE parameter to to_fetch_registers
	and to_store_registers target operations.
	(target_fetch_registers, target_store_registers): Update.

	* regcache.c (regcache_raw_read): Replace register_cached by
	regcache_valid_p.  Pass regcache to target_fetch_registers.
	(regcache_raw_write): Pass regcache to target_store_registers.

	* arm-linux-nat.c (store_fpregister, store_fpregs, store_register,
	store_regs, store_wmmx_regs): Replace register_cached by
	regcache_valid_p.

	* bsd-kvm.c (bsd_kvm_open, bsd_kvm_proc_cmd): Pass current_regcache
	to target_fetch_registers calls.
	* corelow.c (core_open): Likewise.
	* linux-nat.c (linux_nat_corefile_thread_callback): Likewise.
	* proc-service.c (ps_lgetregs, ps_lsetregs, ps_lgetfpregs,
	ps_lsetfpregs): Likewise.
	* sol-thread.c (ps_lgetregs, ps_lsetregs, ps_lgetfpregs,
	ps_lsetfpregs): Likewise.
	* win32-nat.c (win32_resume): Likewise.
	* ia64-tdep.c (ia64_store_return_value): Pass current_regcache
	to target_store_registers call.
	* rs6000-tdep.c (rs6000_push_dummy_call): Likewise.

	* inferior.h (store_inferior_registers): Update prototype.
	(fetch_inferior_registers): Likewise.
	* gnu-nat.c (gnu_store_registers, gnu_fetch_registers): Likewise.
	* mips-linux-nat.c (super_fetch_registers, super_store_registers):
	Update function pointer signatures.

	* aix-thread.c (aix_thread_fetch_registers): Add REGCACHE parameter,
	use it instead of current_regcache, update calls.
	(aix_thread_store_registers): Likewise.
	* alphabsd-nat.c (alphabsd_fetch_inferior_registers): Likewise.
	(alphabsd_store_inferior_registers): Likewise.
	* amd64bsd-nat.c (amd64bsd_fetch_inferior_registers): Likewise.
	(amd64bsd_store_inferior_registers): Likewise.
	* amd64-linux-nat.c (amd64_linux_fetch_inferior_registers): Likewise.
	(amd64_linux_store_inferior_registers): Likewise.
	* arm-linux-nat.c (fetch_fpregister, fetch_fpregs, store_fpregister,
	store_fpregs, fetch_register, fetch_regs, store_register, store_regs,
	fetch_wmmx_regs, store_wmmx_regs): Likewise.
	(arm_linux_fetch_inferior_registers): Likewise.
	(arm_linux_store_inferior_registers): Likewise.
	* armnbsd-nat.c (fetch_register, fetch_regs, fetch_fp_register,
	fetch_fp_regs, armnbsd_fetch_registers): Likewise.
	(store_register, store_regs, store_fp_register, store_fp_regs,
	armnbsd_store_registers): Likewise.
	* bsd-kvm.c (bsd_kvm_fetch_pcb, bsd_kvm_fetch_registers): Likewise.
	* bsd-uthread.c (bsd_uthread_fetch_registers): Likewise.
	(bsd_uthread_store_registers): Likewise.
	* corelow.c (get_core_registers): Likewise.
	* go32-nat.c (fetch_register, go32_fetch_registers, store_register,
	go32_store_registers): Likewise.
	* hppabsd-nat.c (hppabsd_fetch_registers): Likewise.
	(hppabsd_store_registers): Likewise.
	* hppa-hpux-nat.c (hppa_hpux_fetch_register): Likewise.
	(hppa_hpux_fetch_inferior_registers): Likewise.
	(hppa_hpux_store_register): Likewise.
	(hppa_hpux_store_inferior_registers): Likewise.
	* hppa-linux-nat.c (fetch_register, store_register): Likewise.
	(hppa_linux_fetch_inferior_registers): Likewise.
	(hppa_linux_store_inferior_registers): Likewise.
	* hpux-thread.c (hpux_thread_fetch_registers): Likewise.
	(hpux_thread_store_registers): Likewise.
	* i386bsd-nat.c (i386bsd_fetch_inferior_registers): Likewise.
	(i386bsd_store_inferior_registers): Likewise.
	* i386gnu-nat.c (fetch_fpregs, gnu_fetch_registers, store_fpregs,
	gnu_store_registers): Likewise.
	* i386-linux-nat.c (fetch_register, store_register, fetch_regs,
	store_regs, fetch_fpregs, store_fpregs, fetch_fpxregs, store_fpxregs):
	Likewise.
	(i386_linux_fetch_inferior_registers): Likewise.
	(i386_linux_store_inferior_registers): Likewise.
	* ia64-linux-nat.c (ia64_linux_fetch_register): Likewise.
	(ia64_linux_fetch_registers): Likewise.
	(ia64_linux_store_register): Likewise.
	(ia64_linux_store_registers): Likewise.
	* inf-child.c (inf_child_fetch_inferior_registers): Likewise.
	(inf_child_store_inferior_registers): Likewise.
	* inf-ptrace.c (inf_ptrace_fetch_register): Likewise.
	(inf_ptrace_fetch_registers): Likewise.
	(inf_ptrace_store_register): Likewise.
	(inf_ptrace_store_registers): Likewise.
	* infptrace.c (fetch_register, store_register): Likewise.
	(fetch_inferior_registers, store_inferior_registers): Likewise.
	* m32r-linux-nat.c (fetch_regs, store_regs): Likewise.
	(m32r_linux_fetch_inferior_registers): Likewise.
	(m32r_linux_store_inferior_registers): Likewise.
	* m68kbsd-nat.c (m68kbsd_fetch_inferior_registers): Likewise.
	(m68kbsd_store_inferior_registers): Likewise.
	* m68klinux-nat.c (fetch_register, old_fetch_inferior_registers,
	store_register, old_store_inferior_registers, fetch_regs, store_regs,
	fetch_fpregs, store_fpregs): Likewise.
	(m68k_linux_fetch_inferior_registers): Likewise.
	(m68k_linux_store_inferior_registers): Likewise.
	* m88kbsd-nat.c (m88kbsd_fetch_inferior_registers): Likewise.
	(m88kbsd_store_inferior_registers): Likewise.
	* mips64obsd-nat.c (mips64obsd_fetch_inferior_registers): Likewise.
	(mips64obsd_store_inferior_registers): Likewise.
	* mips-linux-nat.c (mips64_linux_regsets_fetch_registers): Likewise.
	(mips64_linux_regsets_store_registers): Likewise.
	(mips64_linux_fetch_registers): Likewise.
	(mips64_linux_store_registers): Likewise.
	* mipsnbsd-nat.c (mipsnbsd_fetch_inferior_registers): Likewise.
	(mipsnbsd_store_inferior_registers): Likewise.
	* monitor.c (monitor_fetch_register, monitor_store_register): Likewise.
	(monitor_fetch_registers, monitor_store_registers): Likewise.
	* nto-procfs.c (procfs_fetch_registers): Likewise.
	(procfs_store_registers): Likewise.
	* ppc-linux-nat.c (fetch_altivec_register, fetch_spe_register,
	fetch_register, supply_vrregset, fetch_altivec_registers,
	fetch_ppc_registers, ppc_linux_fetch_inferior_registers): Likewise.
	(store_altivec_register, store_spe_register, store_register,
	fill_vrregset, store_altivec_registers, store_ppc_registers,
	ppc_linux_store_inferior_registers): Likewise.
	* ppcnbsd-nat.c (ppcnbsd_fetch_inferior_registers): Likewise.
	(ppcnbsd_store_inferior_registers): Likewise.
	* ppcobsd-nat.c (ppcobsd_fetch_registers): Likewise.
	(ppcobsd_store_registers): Likewise.
	* procfs.c (procfs_fetch_registers, procfs_store_registers): Likewise.
	* remote.c (fetch_register_using_p, process_g_packet,
	fetch_registers_using_g, remote_fetch_registers): Likewise.
	(store_register_using_P, store_registers_using_G,
	remote_store_registers): Likewise.
	* remote-m32r-sdi.c (m32r_fetch_registers, m32r_fetch_register,
	m32r_store_register, m32r_store_register): Likewise.
	* remote-mips.c (mips_fetch_registers, mips_store_registers): Likewise.
	* remote-sim.c (gdbsim_fetch_register): Likewise.
	(gdbsim_store_register): Likewise.
	* rs6000-nat.c (fetch_register, store_register): Likewise.
	(rs6000_fetch_inferior_registers): Likewise.
	(rs6000_store_inferior_registers): Likewise.
	* s390-nat.c (fetch_regs, store_regs): Likewise.
	(fetch_fpregs, store_fpregs): Likewise.
	(s390_linux_fetch_inferior_registers): Likewise.
	(s390_linux_store_inferior_registers): Likewise.
	* shnbsd-nat.c (shnbsd_fetch_inferior_registers): Likewise.
	(shnbsd_store_inferior_registers): Likewise.
	* sol-thread.c (sol_thread_fetch_registers): Likewise.
	(sol_thread_store_registers): Likewise.
	* sparc-nat.c (fetch_inferior_registers): Likewise.
	(store_inferior_registers): Likewise.
	* spu-linux-nat.c (spu_fetch_inferior_registers): Likewise.
	(spu_store_inferior_registers): Likewise.
	* target.c (debug_print_register): Likewise.
	(debug_to_fetch_registers, debug_to_store_registers): Likewise.
	* vaxbsd-nat.c (vaxbsd_fetch_inferior_registers): Likewise.
	(vaxbsd_store_inferior_registers): Likewise.
	* win32-nat.c (do_win32_fetch_inferior_registers): Likewise.
	(win32_fetch_inferior_registers): Likewise.
	(win32_store_inferior_registers): Likewise.
@
text
@d10 1
a10 1
   the Free Software Foundation; either version 2 of the License, or
d19 1
a19 3
   along with this program; if not, write to the Free Software
   Foundation, Inc., 51 Franklin Street, Fifth Floor,
   Boston, MA 02110-1301, USA.  */
@


1.37
log
@Copyright updates for 2007.
@
text
@d135 1
a135 1
i386bsd_fetch_inferior_registers (int regnum)
d145 1
a145 1
      i386bsd_supply_gregset (current_regcache, &regs);
d161 1
a161 1
	  i387_supply_fxsave (current_regcache, -1, xmmregs);
d169 1
a169 1
	  i387_supply_fsave (current_regcache, -1, &fpregs);
d176 1
a176 1
      i387_supply_fsave (current_regcache, -1, &fpregs);
d185 1
a185 1
i386bsd_store_inferior_registers (int regnum)
d195 1
a195 1
      i386bsd_collect_gregset (current_regcache, &regs, regnum);
d217 1
a217 1
	  i387_collect_fxsave (current_regcache, regnum, xmmregs);
d231 1
a231 1
          i387_collect_fsave (current_regcache, regnum, &fpregs);
@


1.36
log
@
	* breakpoint.c:
	* arm-tdep.c:
	* ia64-tdep.c:
	* i386-tdep.c:
	* hpread.c:
	* hppa-tdep.c:
	* hppa-hpux-tdep.c:
	* gnu-nat.c:
	* gdbtypes.c:
	* gdbarch.h:
	* gdbarch.c:
	* eval.c:
	* dwarf2read.c:
	* dbxread.c:
	* copying:
	* symfile.c:
	* stabsread.c:
	* sh64-tdep.c:
	* sh-tdep.c:
	* s390-tdep.c:
	* rs6000-tdep.c:
	* remote.c:
	* remote-mips.c:
	* mips-tdep.c:
	* mdebugread.c:
	* linux-nat.c:
	* infrun.c:
	* xcoffread.c:
	* win32-nat.c:
	* valops.c:
	* utils.c:
	* tracepoint.c:
	* target.c:
	* symtab.c:
	* c-exp.y:
	* ada-valprint.c:
	* ada-typeprint.c:
	* ada-lex.l:
	* ada-lang.h:
	* ada-lang.c:
	* ada-exp.y:
	* alphafbsd-tdep.c:
	* alphabsd-tdep.h:
	* alphabsd-tdep.c:
	* alphabsd-nat.c:
	* alpha-tdep.h:
	* alpha-tdep.c:
	* alpha-osf1-tdep.c:
	* alpha-nat.c:
	* alpha-mdebug-tdep.c:
	* alpha-linux-tdep.c:
	* alpha-linux-nat.c:
	* aix-thread.c:
	* abug-rom.c:
	* arch-utils.c:
	* annotate.h:
	* annotate.c:
	* amd64obsd-tdep.c:
	* amd64obsd-nat.c:
	* amd64nbsd-tdep.c:
	* amd64nbsd-nat.c:
	* amd64fbsd-tdep.c:
	* amd64fbsd-nat.c:
	* amd64bsd-nat.c:
	* amd64-tdep.h:
	* amd64-tdep.c:
	* amd64-sol2-tdep.c:
	* amd64-nat.h:
	* amd64-nat.c:
	* amd64-linux-tdep.c:
	* amd64-linux-nat.c:
	* alphanbsd-tdep.c:
	* block.h:
	* block.c:
	* bfd-target.h:
	* bfd-target.c:
	* bcache.h:
	* bcache.c:
	* ax.h:
	* ax-general.c:
	* ax-gdb.h:
	* ax-gdb.c:
	* avr-tdep.c:
	* auxv.h:
	* auxv.c:
	* armnbsd-tdep.c:
	* armnbsd-nat.c:
	* arm-tdep.h:
	* arm-linux-nat.c:
	* arch-utils.h:
	* charset.c:
	* call-cmds.h:
	* c-valprint.c:
	* c-typeprint.c:
	* c-lang.h:
	* c-lang.c:
	* buildsym.h:
	* buildsym.c:
	* bsd-uthread.h:
	* bsd-uthread.c:
	* bsd-kvm.h:
	* bsd-kvm.c:
	* breakpoint.h:
	* core-regset.c:
	* core-aout.c:
	* completer.h:
	* completer.c:
	* complaints.h:
	* complaints.c:
	* command.h:
	* coffread.c:
	* coff-solib.h:
	* coff-solib.c:
	* coff-pe-read.h:
	* coff-pe-read.c:
	* cli-out.h:
	* cli-out.c:
	* charset.h:
	* dink32-rom.c:
	* dictionary.h:
	* dictionary.c:
	* demangle.c:
	* defs.h:
	* dcache.h:
	* dcache.c:
	* d10v-tdep.c:
	* cpu32bug-rom.c:
	* cp-valprint.c:
	* cp-support.h:
	* cp-support.c:
	* cp-namespace.c:
	* cp-abi.h:
	* cp-abi.c:
	* corelow.c:
	* corefile.c:
	* environ.c:
	* elfread.c:
	* dwarfread.c:
	* dwarf2loc.c:
	* dwarf2expr.h:
	* dwarf2expr.c:
	* dwarf2-frame.h:
	* dwarf2-frame.c:
	* dve3900-rom.c:
	* dummy-frame.h:
	* dummy-frame.c:
	* dsrec.c:
	* doublest.h:
	* doublest.c:
	* disasm.h:
	* disasm.c:
	* fork-child.c:
	* findvar.c:
	* fbsd-nat.h:
	* fbsd-nat.c:
	* f-valprint.c:
	* f-typeprint.c:
	* f-lang.h:
	* f-lang.c:
	* expression.h:
	* expprint.c:
	* exec.h:
	* exec.c:
	* exceptions.h:
	* exceptions.c:
	* event-top.h:
	* event-top.c:
	* event-loop.h:
	* event-loop.c:
	* gdb.c:
	* gdb-stabs.h:
	* gdb-events.h:
	* gdb-events.c:
	* gcore.c:
	* frv-tdep.h:
	* frv-tdep.c:
	* frv-linux-tdep.c:
	* frame.h:
	* frame.c:
	* frame-unwind.h:
	* frame-unwind.c:
	* frame-base.h:
	* frame-base.c:
	* gdb_vfork.h:
	* gdb_thread_db.h:
	* gdb_string.h:
	* gdb_stat.h:
	* gdb_regex.h:
	* gdb_ptrace.h:
	* gdb_proc_service.h:
	* gdb_obstack.h:
	* gdb_locale.h:
	* gdb_dirent.h:
	* gdb_curses.h:
	* gdb_assert.h:
	* gdbarch.sh:
	* gdb.h:
	* hpux-thread.c:
	* hppabsd-nat.c:
	* hppa-tdep.h:
	* hpacc-abi.c:
	* h8300-tdep.c:
	* gregset.h:
	* go32-nat.c:
	* gnu-v3-abi.c:
	* gnu-v2-abi.h:
	* gnu-v2-abi.c:
	* gnu-nat.h:
	* glibc-tdep.c:
	* gdbtypes.h:
	* gdbcore.h:
	* gdbcmd.h:
	* i386nbsd-tdep.c:
	* i386nbsd-nat.c:
	* i386gnu-tdep.c:
	* i386gnu-nat.c:
	* i386fbsd-tdep.c:
	* i386fbsd-nat.c:
	* i386bsd-tdep.c:
	* i386bsd-nat.h:
	* i386bsd-nat.c:
	* i386-tdep.h:
	* i386-sol2-nat.c:
	* i386-nto-tdep.c:
	* i386-nat.c:
	* i386-linux-tdep.h:
	* i386-linux-tdep.c:
	* i386-linux-nat.c:
	* i386-cygwin-tdep.c:
	* inf-ttrace.c:
	* inf-ptrace.h:
	* inf-ptrace.c:
	* inf-loop.h:
	* inf-loop.c:
	* inf-child.h:
	* inf-child.c:
	* ia64-tdep.h:
	* ia64-linux-nat.c:
	* i387-tdep.h:
	* i387-tdep.c:
	* i386v4-nat.c:
	* i386v-nat.c:
	* i386obsd-tdep.c:
	* i386obsd-nat.c:
	* kod.c:
	* jv-valprint.c:
	* jv-typeprint.c:
	* jv-lang.h:
	* jv-lang.c:
	* irix5-nat.c:
	* iq2000-tdep.c:
	* interps.h:
	* interps.c:
	* inftarg.c:
	* inflow.h:
	* inflow.c:
	* inferior.h:
	* infcmd.c:
	* infcall.h:
	* infcall.c:
	* inf-ttrace.h:
	* m32r-tdep.h:
	* m32r-tdep.c:
	* m32r-rom.c:
	* m32r-linux-tdep.c:
	* m32r-linux-nat.c:
	* m2-valprint.c:
	* m2-typeprint.c:
	* m2-lang.h:
	* m2-lang.c:
	* lynx-nat.c:
	* linux-thread-db.c:
	* linux-nat.h:
	* linespec.c:
	* libunwind-frame.h:
	* libunwind-frame.c:
	* language.h:
	* language.c:
	* macroexp.c:
	* macrocmd.c:
	* m88kbsd-nat.c:
	* m88k-tdep.h:
	* m88k-tdep.c:
	* m68klinux-tdep.c:
	* m68klinux-nat.c:
	* m68kbsd-tdep.c:
	* m68kbsd-nat.c:
	* m68k-tdep.h:
	* m68k-tdep.c:
	* mips-linux-nat.c:
	* mips-irix-tdep.c:
	* minsyms.c:
	* memattr.h:
	* memattr.c:
	* mem-break.c:
	* mdebugread.h:
	* main.h:
	* main.c:
	* macrotab.h:
	* macrotab.c:
	* macroscope.h:
	* macroscope.c:
	* macroexp.h:
	* nbsd-tdep.c:
	* mt-tdep.c:
	* monitor.h:
	* monitor.c:
	* mn10300-tdep.h:
	* mn10300-tdep.c:
	* mn10300-linux-tdep.c:
	* mipsv4-nat.c:
	* mipsread.c:
	* mipsnbsd-tdep.h:
	* mipsnbsd-tdep.c:
	* mipsnbsd-nat.c:
	* mips64obsd-tdep.c:
	* mips64obsd-nat.c:
	* mips-tdep.h:
	* mips-mdebug-tdep.c:
	* mips-linux-tdep.c:
	* osabi.h:
	* osabi.c:
	* ocd.h:
	* ocd.c:
	* observer.c:
	* objfiles.h:
	* objfiles.c:
	* objc-lang.h:
	* objc-lang.c:
	* objc-exp.y:
	* nto-tdep.h:
	* nto-tdep.c:
	* nto-procfs.c:
	* nlmread.c:
	* nbsd-tdep.h:
	* ppcobsd-tdep.c:
	* ppcobsd-nat.c:
	* ppcnbsd-tdep.h:
	* ppcnbsd-tdep.c:
	* ppcnbsd-nat.c:
	* ppcbug-rom.c:
	* ppc-tdep.h:
	* ppc-sysv-tdep.c:
	* ppc-linux-tdep.c:
	* ppc-linux-nat.c:
	* ppc-bdm.c:
	* parser-defs.h:
	* parse.c:
	* p-valprint.c:
	* p-typeprint.c:
	* p-lang.h:
	* p-lang.c:
	* remote-fileio.h:
	* remote-fileio.c:
	* remote-est.c:
	* remote-e7000.c:
	* regset.h:
	* regset.c:
	* reggroups.h:
	* reggroups.c:
	* regcache.h:
	* regcache.c:
	* proc-why.c:
	* proc-service.c:
	* proc-events.c:
	* printcmd.c:
	* ppcobsd-tdep.h:
	* sentinel-frame.h:
	* sentinel-frame.c:
	* scm-valprint.c:
	* scm-tags.h:
	* scm-lang.h:
	* scm-lang.c:
	* scm-exp.c:
	* s390-tdep.h:
	* rom68k-rom.c:
	* remote.h:
	* remote-utils.c:
	* remote-st.c:
	* remote-sim.c:
	* remote-sds.c:
	* remote-rdp.c:
	* remote-rdi.c:
	* remote-hms.c:
	* sim-regno.h:
	* shnbsd-tdep.h:
	* shnbsd-tdep.c:
	* shnbsd-nat.c:
	* sh-tdep.h:
	* serial.h:
	* serial.c:
	* ser-unix.h:
	* ser-unix.c:
	* ser-tcp.c:
	* ser-pipe.c:
	* ser-go32.c:
	* ser-e7kpc.c:
	* ser-base.h:
	* ser-base.c:
	* solib.c:
	* solib-svr4.h:
	* solib-svr4.c:
	* solib-sunos.c:
	* solib-som.h:
	* solib-som.c:
	* solib-pa64.h:
	* solib-pa64.c:
	* solib-osf.c:
	* solib-null.c:
	* solib-legacy.c:
	* solib-irix.c:
	* solib-frv.c:
	* solib-aix5.c:
	* sol-thread.c:
	* sparc64-linux-tdep.c:
	* sparc64-linux-nat.c:
	* sparc-tdep.h:
	* sparc-tdep.c:
	* sparc-sol2-tdep.c:
	* sparc-sol2-nat.c:
	* sparc-nat.h:
	* sparc-nat.c:
	* sparc-linux-tdep.c:
	* sparc-linux-nat.c:
	* source.h:
	* source.c:
	* somread.c:
	* solist.h:
	* solib.h:
	* std-regs.c:
	* stack.h:
	* stack.c:
	* stabsread.h:
	* sparcobsd-tdep.c:
	* sparcnbsd-tdep.c:
	* sparcnbsd-nat.c:
	* sparc64obsd-tdep.c:
	* sparc64nbsd-tdep.c:
	* sparc64nbsd-nat.c:
	* sparc64fbsd-tdep.c:
	* sparc64fbsd-nat.c:
	* sparc64-tdep.h:
	* sparc64-tdep.c:
	* sparc64-sol2-tdep.c:
	* sparc64-nat.c:
	* ui-file.c:
	* typeprint.h:
	* typeprint.c:
	* tramp-frame.h:
	* tramp-frame.c:
	* trad-frame.h:
	* trad-frame.c:
	* tracepoint.h:
	* top.c:
	* tobs.inc:
	* thread.c:
	* terminal.h:
	* target.h:
	* symfile.h:
	* stop-gdb.c:
	* vaxbsd-nat.c:
	* vax-tdep.h:
	* vax-tdep.c:
	* vax-nat.c:
	* varobj.h:
	* varobj.c:
	* value.h:
	* value.c:
	* valprint.h:
	* valprint.c:
	* v850-tdep.c:
	* uw-thread.c:
	* user-regs.c:
	* ui-out.h:
	* ui-out.c:
	* ui-file.h:
	* xcoffsolib.h:
	* xcoffsolib.c:
	* wrapper.c:
	* wince.c:
	* wince-stub.h:
	* wince-stub.c:
	* vaxobsd-tdep.c:
	* vaxnbsd-tdep.c:
	* gdb_gcore.sh:
	* copying.c:
	* configure.ac:
	* aclocal.m4:
	* acinclude.m4:
	* reply_mig_hack.awk:
	* observer.sh:
	* gdb_mbuild.sh:
	* arm-linux-tdep.c:
	* blockframe.c:
	* dbug-rom.c:
	* environ.h:
	* dwarf2loc.h:
	* gdb-events.sh:
	* glibc-tdep.h:
	* gdb_wait.h:
	* gdbthread.h:
	* i386-sol2-tdep.c:
	* hppabsd-tdep.c:
	* hppa-linux-nat.c:
	* hppa-hpux-nat.c:
	* ia64-linux-tdep.c:
	* infptrace.c:
	* linespec.h:
	* maint.c:
	* mips-mdebug-tdep.h:
	* remote-m32r-sdi.c:
	* s390-nat.c:
	* rs6000-nat.c:
	* remote-utils.h:
	* sh3-rom.c:
	* sh-linux-tdep.c:
	* top.h:
	* symtab.h:
	* symmisc.c:
	* symfile-mem.c:
	* srec.h:
	* user-regs.h:
	* version.h:
	* valarith.c:
	* xstormy16-tdep.c:
	* wrapper.h:
	* Makefile.in:
	* f-exp.y:
	* cris-tdep.c:
	* cp-name-parser.y:
	* procfs.c:
	* proc-utils.h:
	* proc-flags.c:
	* proc-api.c:
	* p-exp.y:
	* m68hc11-tdep.c:
	* m2-exp.y:
	* kod.h:
	* kod-cisco.c:
	* jv-exp.y:
	* hppa-linux-tdep.c: Add (c) after Copyright.  Update the FSF
	address.
@
text
@d3 1
a3 1
   Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005
@


1.35
log
@2005-02-11  Andrew Cagney  <cagney@@gnu.org>

	Mark up error_no_arg, query, perror_with_name, complaint, and
	internal_error.
	* breakpoint.c, cp-abi.c, cp-namespace.c, cp-support.c: Update.
	* cris-tdep.c, dbxread.c, dictionary.c, dsrec.c: Update.
	* dummy-frame.c, dve3900-rom.c, dwarf2-frame.c, dwarf2expr.c: Update.
	* dwarf2read.c, dwarfread.c, elfread.c, event-loop.c: Update.
	* exceptions.c, exec.c, f-lang.c, findvar.c, fork-child.c: Update.
	* frame-unwind.c, frame.c, frv-linux-tdep.c, frv-tdep.c: Update.
	* gdb_assert.h, gdbarch.c, gdbtypes.c, gnu-nat.c: Update.
	* go32-nat.c, hppa-tdep.c, hppabsd-nat.c, hpread.c: Update.
	* i386-linux-nat.c, i386-nat.c, i386-tdep.c, i386bsd-nat.c: Update.
	* i386fbsd-nat.c, inf-ptrace.c, inf-ttrace.c, infcall.c: Update.
	* infcmd.c, inflow.c, infptrace.c, infrun.c, inftarg.c: Update.
	* interps.c, language.c, linespec.c, linux-nat.c: Update.
	* m32r-linux-nat.c, m68k-tdep.c, m68kbsd-nat.c: Update.
	* m68klinux-nat.c, m88kbsd-nat.c, macroexp.c, macroscope.c: Update.
	* macrotab.c, maint.c, mdebugread.c, memattr.c: Update.
	* mips-linux-tdep.c, mips-tdep.c, mips64obsd-nat.c: Update.
	* mipsnbsd-nat.c, mn10300-tdep.c, monitor.c, nto-procfs.c: Update.
	* objc-lang.c, objfiles.c, objfiles.h, ocd.c, osabi.c: Update.
	* parse.c, ppc-bdm.c, ppc-linux-nat.c, ppc-sysv-tdep.c: Update.
	* ppcnbsd-nat.c, ppcobsd-nat.c, printcmd.c, procfs.c: Update.
	* regcache.c, reggroups.c, remote-e7000.c, remote-mips.c: Update.
	* remote-rdp.c, remote-sds.c, remote-sim.c, remote-st.c: Update.
	* remote-utils.c, remote.c, rs6000-nat.c, rs6000-tdep.c: Update.
	* s390-nat.c, s390-tdep.c, sentinel-frame.c, serial.c: Update.
	* sh-tdep.c, sh3-rom.c, sh64-tdep.c, shnbsd-nat.c: Update.
	* solib-aix5.c, solib-svr4.c, solib.c, source.c: Update.
	* sparc-nat.c, stabsread.c, stack.c, symfile.c, symtab.c: Update.
	* symtab.h, target.c, tracepoint.c, ui-file.c, ui-out.c: Update.
	* utils.c, valops.c, valprint.c, vax-nat.c, vaxbsd-nat.c: Update.
	* win32-nat.c, xcoffread.c, xstormy16-tdep.c: Update.
	* cli/cli-cmds.c, cli/cli-logging.c, cli/cli-script.c: Update.
	* cli/cli-setshow.c, mi/mi-cmd-break.c, mi/mi-cmds.c: Update.
	* mi/mi-console.c, mi/mi-getopt.c, mi/mi-out.c: Update.
	* tui/tui-file.c, tui/tui-interp.c: Update.
@
text
@d3 1
a3 1
   Copyright 2000, 2001, 2002, 2003, 2004, 2005
d20 2
a21 2
   Foundation, Inc., 59 Temple Place - Suite 330,
   Boston, MA 02111-1307, USA.  */
@


1.34
log
@2005-02-10  Andrew Cagney  <cagney@@gnu.org>

	Mark up all error and warning messages.
	* ada-lang.c, amd64-tdep.c, arch-utils.c, breakpoint.c: Update.
	* bsd-kvm.c, bsd-uthread.c, coff-solib.h, coffread.c: Update.
	* core-aout.c, core-regset.c, corefile.c, corelow.c: Update.
	* cp-abi.c, cp-support.c, cp-valprint.c, cris-tdep.c: Update.
	* dbxread.c, demangle.c, doublest.c, dsrec.c: Update.
	* dve3900-rom.c, dwarf2expr.c, dwarf2loc.c: Update.
	* dwarf2read.c, dwarfread.c, elfread.c, eval.c: Update.
	* event-top.c, exec.c, expprint.c, f-lang.c: Update.
	* f-typeprint.c, f-valprint.c, fbsd-nat.c, findvar.c: Update.
	* frame.c, frv-linux-tdep.c, gcore.c, gdbtypes.c: Update.
	* gnu-nat.c, gnu-v2-abi.c, gnu-v3-abi.c, go32-nat.c: Update.
	* hpacc-abi.c, hppa-hpux-nat.c, hppa-hpux-tdep.c: Update.
	* hppa-linux-nat.c, hppa-linux-tdep.c, hppa-tdep.c: Update.
	* hpread.c, hpux-thread.c, i386-linux-nat.c: Update.
	* i386-linux-tdep.c, i386-tdep.c, i386bsd-nat.c: Update.
	* i386gnu-nat.c, i387-tdep.c, ia64-linux-nat.c: Update.
	* ia64-tdep.c, inf-child.c, inf-ptrace.c, inf-ttrace.c: Update.
	* infcall.c, infcmd.c, inflow.c, infptrace.c, infrun.c: Update.
	* inftarg.c, interps.c, irix5-nat.c, jv-lang.c: Update.
	* kod-cisco.c, kod.c, language.c, libunwind-frame.c: Update.
	* linespec.c, linux-nat.c, linux-thread-db.c, m2-lang.c: Update.
	* m32r-rom.c, m68hc11-tdep.c, m68k-tdep.c: Update.
	* m68klinux-nat.c, macrocmd.c, macroexp.c, main.c: Update.
	* maint.c, mdebugread.c, mem-break.c, memattr.c: Update.
	* mips-linux-tdep.c, mips-tdep.c, mipsread.c, monitor.c: Update.
	* nlmread.c, nto-procfs.c, objc-lang.c, objfiles.c: Update.
	* observer.c, ocd.c, p-lang.c, p-typeprint.c: Update.
	* p-valprint.c, pa64solib.c, parse.c, ppc-linux-tdep.c: Update.
	* ppcnbsd-tdep.c, printcmd.c, procfs.c, remote-e7000.c: Update.
	* remote-fileio.c, remote-m32r-sdi.c, remote-rdi.c: Update.
	* remote-rdp.c, remote-sim.c, remote-st.c: Update.
	* remote-utils.c, remote-utils.h, remote.c: Update.
	* rom68k-rom.c, rs6000-nat.c, s390-tdep.c, scm-lang.c: Update.
	* ser-e7kpc.c, ser-tcp.c, ser-unix.c, sh-tdep.c: Update.
	* sh3-rom.c, shnbsd-tdep.c, sol-thread.c, solib-aix5.c: Update.
	* solib-frv.c, solib-irix.c, solib-osf.c, solib-pa64.c: Update.
	* solib-som.c, solib-sunos.c, solib-svr4.c, solib.c: Update.
	* somread.c, somsolib.c, source.c, stabsread.c: Update.
	* stack.c, std-regs.c, symfile-mem.c, symfile.c: Update.
	* symmisc.c, symtab.c, target.c, thread.c, top.c: Update.
	* tracepoint.c, trad-frame.c, typeprint.c, utils.c: Update.
	* uw-thread.c, valarith.c, valops.c, valprint.c: Update.
	* value.c, varobj.c, version.in, win32-nat.c, wince.c: Update.
	* xcoffread.c, xcoffsolib.c, cli/cli-cmds.c: Update.
	* cli/cli-decode.c, cli/cli-dump.c, cli/cli-logging.c: Update.
	* cli/cli-script.c, cli/cli-setshow.c, mi/mi-cmd-break.c: Update.
	* mi/mi-cmd-disas.c, mi/mi-cmd-env.c, mi/mi-cmd-file.c: Update.
	* mi/mi-cmd-stack.c, mi/mi-cmd-var.c, mi/mi-getopt.c: Update.
	* mi/mi-symbol-cmds.c, tui/tui-layout.c, tui/tui-stack.c: Update.
	* tui/tui-win.c: Update.
@
text
@d143 1
a143 1
	perror_with_name ("Couldn't get registers");
d167 1
a167 1
	    perror_with_name ("Couldn't get floating point status");
d174 1
a174 1
	perror_with_name ("Couldn't get floating point status");
d193 1
a193 1
        perror_with_name ("Couldn't get registers");
d199 1
a199 1
        perror_with_name ("Couldn't write registers");
d221 1
a221 1
            perror_with_name ("Couldn't write XMM registers");
d229 1
a229 1
	    perror_with_name ("Couldn't get floating point status");
d235 1
a235 1
	    perror_with_name ("Couldn't write floating point status");
d274 1
a274 1
    perror_with_name ("Couldn't get debug registers");
d285 1
a285 1
    perror_with_name ("Couldn't write debug registers");
d323 1
a323 1
    perror_with_name ("Couldn't read debug registers");
@


1.33
log
@* i386bsd-nat.c: Update copyright year.  Don't include
<sys/param.h> and <sys/user.h>.
(register_u_addr, kernel_u_size): Remove functions.
* config/i386/obsd.mh (NAT_FILE): Remove.
* config/i386/obsdaout.mh (NAT_FILE): Set to solib.h.
* config/i386/nm-obsd.h: Remove file.
@
text
@d373 1
a373 1
      warning ("\
d375 1
a375 1
Please report this to <bug-gdb@@gnu.org>.", 
d386 1
a386 1
      warning ("\
d388 1
a388 1
Please report this to <bug-gdb@@gnu.org>.",
d399 1
a399 1
      warning ("\
d401 1
a401 1
Please report this to <bug-gdb@@gnu.org>.",
@


1.32
log
@* i386bsd-nat.c: Include "i386bsd-nat.h" and "inf-ptrace.h".
(i386bsd_fetch_inferior_registers): Rename from
fetch_inferior_registers.  Make static.
(i386bsd_store_inferior_registers): Rename from
store_inferior_registers.  Make static.
(i386bsd_target): New function.
* i386bsd-nat.h: New file.
* i386fbsd-nat.c: Include "target.h", "fbsd-nat.h" and
"i386bsd-nat.h".
(i386fbsd_resume): Rename from child_resume.  Make static.
(_initialize_i386fbsd_nat): Construct and add target vector.
* i386nbsd-nat.c: Include "target.h" and "i386bsd-nat.h".
(_initialize_i386nbsd_nat): Construct and add target vector.
* config/i386/nm-fbsd.h: (CHILD_RESUME, CHILD_PID_TO_EXEC_FILE):
Remove defines.
* config/i386/fbsd.mh (NATDEPFILES): Add inf-child.o, inf-ptrace.o
and fbsd-nat.o.  Remove inftarg.o and fbsd-proc.o.
* config/i386/nbsdaout.mh (NATDEPFILES): Add inf-child.o,
inf-ptrace.o, i386bsd-nat.o and bsd-kvm.o.  Remove inftarg.o.
(LOADLIBES): New variable.
* config/i386/nbsdelf.mh (NATDEPFILES): Add inf-child.o and
inf-ptrace.o.  Remove inftarg.o.
* config/i386/obsd.mh (NATDEPFILES): Add inf-child.o and
inf-ptrace.o. Remove inftarg.o.
* config/i386/obsdaout.mh (NATDEPFILES): Add inf-child.o,
inf-ptrace.o, i386nbsd-nat.o and bsd-kvm.o.  Remove inftarg.o.
(LOADLIBES): New variable.
* Makefile.in (i386bsd_nat_h): New variable.
(i386bsd-nat.o, i386fbsd-nat.o, i386nbsd-nat.o): Update
dependencies.
@
text
@d3 2
a4 1
   Copyright 2000, 2001, 2002, 2003, 2004 Free Software Foundation, Inc.
a333 24
/* Support for the user struct.  */

/* Return the address register REGNUM.  BLOCKEND is the value of
   u.u_ar0, which should point to the registers.  */

CORE_ADDR
register_u_addr (CORE_ADDR blockend, int regnum)
{
  gdb_assert (regnum >= 0 && regnum < ARRAY_SIZE (i386bsd_r_reg_offset));

  return blockend + i386bsd_r_reg_offset[regnum];
}

#include <sys/param.h>
#include <sys/user.h>

/* Return the size of the user struct.  */

int
kernel_u_size (void)
{
  return (sizeof (struct user));
}

@


1.31
log
@* alphabsd-nat.c (fetch_inferior_registers):
(store_inferior_registers): Replace PTRACE_ARG3_TYPE with
PTRACE_TYPE_ARG3.
* amd64bsd-nat.c (fetch_inferior_registers)
(store_inferior_registers): Replace PTRACE_ARG3_TYPE with
PTRACE_TYPE_ARG3.
* armnbsd-nat.c: Update copyright year.
(fetch_register, fetch_regs, fetch_fp_register, fetch_fp_regs)
(store_register, store_regs, store_fp_register, store_fp_regs):
Replace PTRACE_ARG3_TYPE with PTRACE_TYPE_ARG3.
* hppabsd-nat.c (fetch_inferior_registers)
(store_inferior_registers): Replace PTRACE_ARG3_TYPE with
PTRACE_TYPE_ARG3.
* i386bsd-nat.c (fetch_inferior_registers)
(store_inferior_registers, i386bsd_dr_set, i386bsd_dr_get_status):
Replace PTRACE_ARG3_TYPE with PTRACE_TYPE_ARG3.
* m68kbsd-nat.c (fetch_inferior_registers)
(store_inferior_registers): Replace PTRACE_ARG3_TYPE with
PTRACE_TYPE_ARG3.
* m88kbsd-nat.c (fetch_inferior_registers)
(store_inferior_registers): Replace PTRACE_ARG3_TYPE with
PTRACE_TYPE_ARG3.
* mipsnbsd-nat.c: Update copyright year.
(fetch_inferior_registers, store_inferior_registers):
Replace PTRACE_ARG3_TYPE with PTRACE_TYPE_ARG3.
* ns32knbsd-nat.c: Update copyright year.
(fetch_inferior_registers, store_inferior_registers):
Replace PTRACE_ARG3_TYPE with PTRACE_TYPE_ARG3.
* ppcnbsd-nat.c (fetch_inferior_registers):
(store_inferior_registers): Replace PTRACE_ARG3_TYPE with
PTRACE_TYPE_ARG3.
* ppcobsd-nat.c (fetch_inferior_registers):
(store_inferior_registers): Replace PTRACE_ARG3_TYPE with
PTRACE_TYPE_ARG3.
* shnbsd-nat.c: Update copyright year.
(fetch_inferior_registers, store_inferior_registers):
Replace PTRACE_ARG3_TYPE with PTRACE_TYPE_ARG3.
* vaxbsd-nat.c (fetch_inferior_registers)
(store_inferior_registers): Replace PTRACE_ARG3_TYPE with
PTRACE_TYPE_ARG3.
@
text
@d36 2
d133 2
a134 2
void
fetch_inferior_registers (int regnum)
d183 2
a184 2
void
store_inferior_registers (int regnum)
d240 14
@


1.30
log
@* i386bsd-nat.c (_initialize_i386bsd_nat): Remove `struct
sigcontext' offset consistency checks for ancient BSD.
@
text
@d139 1
a139 1
		  (PTRACE_ARG3_TYPE) &regs, 0) == -1)
d155 1
a155 1
		    (PTRACE_ARG3_TYPE) xmmregs, 0) == 0)
d163 1
a163 1
		      (PTRACE_ARG3_TYPE) &fpregs, 0) == -1)
d170 1
a170 1
		  (PTRACE_ARG3_TYPE) &fpregs, 0) == -1)
d189 1
a189 1
                  (PTRACE_ARG3_TYPE) &regs, 0) == -1)
d195 1
a195 1
	          (PTRACE_ARG3_TYPE) &regs, 0) == -1)
d210 1
a210 1
		    (PTRACE_ARG3_TYPE) xmmregs, 0) == 0)
d217 1
a217 1
		      (PTRACE_ARG3_TYPE) xmmregs, 0) == -1)
d225 1
a225 1
		      (PTRACE_ARG3_TYPE) &fpregs, 0) == -1)
d231 1
a231 1
		      (PTRACE_ARG3_TYPE) &fpregs, 0) == -1)
d256 1
a256 1
              (PTRACE_ARG3_TYPE) &dbregs, 0) == -1)
d267 1
a267 1
              (PTRACE_ARG3_TYPE) &dbregs, 0) == -1)
d304 1
a304 1
	      (PTRACE_ARG3_TYPE) & dbregs, 0) == -1)
@


1.29
log
@* i386bsd-nat.c: Don't include <sys/procfs.h>.
(gregset_t, fpregset_t): Remove typedefs.
(CANNOT_FETCH_REGISTER, CANNOT_STORE_REGISTER): Remove macros.
(REG_OFFSET): Rename argument.
(i386bsd_r_reg_offset): Rename from reg_offset.
(REG_ADDR): Remove macro.
(cannot_fetch_register, supply_gregset, fill_gregset): Remove
functions.
(i386bsd_supply_gregset, i386bsd_collect_gregset): New functions.
(fetch_inferior_registers): Use `struct reg' and `struct fpreg'
instead of gregset_t and fpregset_t.  Use i386bsd_supply_gregset
instead of supply_gregset.
(store_inferior_registers): Use `struct reg' and `struct fpreg'
instead of gregset_t and fpregset_t.  Use i386bsd_collect_gregset
instead of fill_gregset.
(register_u_addr): Use i386_r_reg_offset instead of REG_ADDR.
@
text
@a359 2
#else
#define SC_REG_OFFSET i386bsd_sc_reg_offset
d362 2
d413 2
@


1.28
log
@* i386bsd-nat.c: Don't include "gregset.h".
(supply_gregset, fill_gregset): Make static.
(supply_fpregset, fill_fpregset): Remove.
* Makefile.in (i386bsd-nat.o): Update dependencies.
@
text
@a33 12
#ifdef HAVE_SYS_PROCFS_H
#include <sys/procfs.h>
#endif

#ifndef HAVE_GREGSET_T
typedef struct reg gregset_t;
#endif

#ifndef HAVE_FPREGSET_T
typedef struct fpreg fpregset_t;
#endif

d43 2
a44 7
/* Registers we shouldn't try to fetch.  */
#undef CANNOT_FETCH_REGISTER
#define CANNOT_FETCH_REGISTER(regnum) cannot_fetch_register (regnum)

/* Registers we shouldn't try to store.  */
#undef CANNOT_STORE_REGISTER
#define CANNOT_STORE_REGISTER(regnum) cannot_fetch_register (regnum)
d46 2
a47 5
/* Offset to the gregset_t location where REG is stored.  */
#define REG_OFFSET(reg) offsetof (gregset_t, reg)

/* At reg_offset[REGNUM] you'll find the offset to the gregset_t
   location where the GDB register REGNUM is stored.  Unsupported
d49 1
a49 1
static int reg_offset[] =
a76 2
#define REG_ADDR(regset, regnum) ((char *) (regset) + reg_offset[regnum])

a85 8

/* Return nonzero if we shouldn't try to fetch register REGNUM.  */

static int
cannot_fetch_register (int regnum)
{
  return (reg_offset[regnum] == -1);
}
d88 1
a88 4
/* Transfering the registers between GDB, inferiors and core files.  */

/* Fill GDB's register array with the general-purpose register values
   in *GREGSETP.  */
d91 1
a91 1
supply_gregset (gregset_t *gregsetp)
d93 1
a93 1
  struct regcache *regcache = current_regcache;
d96 1
a96 1
  for (regnum = 0; regnum < I386_NUM_GREGS; regnum++)
d98 4
a101 4
      if (CANNOT_FETCH_REGISTER (regnum))
	regcache_raw_supply (regcache, regnum, NULL);
      else
	regcache_raw_supply (regcache, regnum, REG_ADDR (gregsetp, regnum));
d105 3
a107 3
/* Fill register REGNUM (if it is a general-purpose register) in
   *GREGSETPS with the value in GDB's register array.  If REGNUM is -1,
   do this for all registers.  */
d110 2
a111 1
fill_gregset (gregset_t *gregsetp, int regnum)
d113 1
a113 1
  struct regcache *regcache = current_regcache;
d116 10
a125 3
  for (i = 0; i < I386_NUM_GREGS; i++)
    if ((regnum == -1 || regnum == i) && ! CANNOT_STORE_REGISTER (i))
      regcache_raw_collect (regcache, i, REG_ADDR (gregsetp, i));
a127 2


d136 1
a136 1
      gregset_t gregs;
d139 1
a139 1
		  (PTRACE_ARG3_TYPE) &gregs, 0) == -1)
d142 1
a142 1
      supply_gregset (&gregs);
d149 1
a149 1
      fpregset_t fpregs;
d186 1
a186 1
      gregset_t gregs;
d189 1
a189 1
                  (PTRACE_ARG3_TYPE) &gregs, 0) == -1)
d192 1
a192 1
      fill_gregset (&gregs, regnum);
d195 1
a195 1
	          (PTRACE_ARG3_TYPE) &gregs, 0) == -1)
d204 1
a204 1
      fpregset_t fpregs;
d325 3
a327 1
  return (CORE_ADDR) REG_ADDR (blockend, regnum);
@


1.27
log
@* i386bsd-nat.c (supply_gregset): Use regcache_raw_supply.
(fill_gregset): Use regcache_raw_collect.
@
text
@a45 1
#include "gregset.h"
d47 1
d123 1
a123 1
void
d142 1
a142 1
void
a152 4
#include "i387-tdep.h"

/* Fill GDB's register array with the floating-point register values
   in *FPREGSETP.  */
a153 15
void
supply_fpregset (fpregset_t *fpregsetp)
{
  i387_supply_fsave (current_regcache, -1, fpregsetp);
}

/* Fill register REGNUM (if it is a floating-point register) in
   *FPREGSETP with the value in GDB's register array.  If REGNUM is
   -1, do this for all registers.  */

void
fill_fpregset (fpregset_t *fpregsetp, int regnum)
{
  i387_collect_fsave (current_regcache, regnum, fpregsetp);
}
@


1.26
log
@* i386bsd-nat.c: s/regno/regnum/g.
(fetch_inferior_registers): Use I386_ST0_REGNUM instead of
FP0_REGNUM.
(store_inferior_registers): Likewise.
@
text
@d126 2
a127 1
  int i;
d129 1
a129 1
  for (i = 0; i < I386_NUM_GREGS; i++)
d131 2
a132 2
      if (CANNOT_FETCH_REGISTER (i))
	supply_register (i, NULL);
d134 1
a134 1
	supply_register (i, REG_ADDR (gregsetp, i));
d145 1
d150 1
a150 1
      regcache_collect (i, REG_ADDR (gregsetp, i));
@


1.25
log
@* i386bsd-nat.c (fill_fpregset): Call i387_collect_fsave instead
of i387_fill_fsave.
(store_inferior_registers): Call i387_collect_fsave and
i387_collect_fxsave instead of i387_fill_fsave and
i387_fill_fxsave.
@
text
@d57 1
a57 1
#define CANNOT_FETCH_REGISTER(regno) cannot_fetch_register (regno)
d61 1
a61 1
#define CANNOT_STORE_REGISTER(regno) cannot_fetch_register (regno)
d66 2
a67 2
/* At reg_offset[REGNO] you'll find the offset to the gregset_t
   location where the GDB register REGNO is stored.  Unsupported
d97 1
a97 1
#define REG_ADDR(regset, regno) ((char *) (regset) + reg_offset[regno])
d100 2
a101 2
#define GETREGS_SUPPLIES(regno) \
  ((0 <= (regno) && (regno) <= 15))
d109 1
a109 1
/* Return nonzero if we shouldn't try to fetch register REGNO.  */
d112 1
a112 1
cannot_fetch_register (int regno)
d114 1
a114 1
  return (reg_offset[regno] == -1);
d137 2
a138 2
/* Fill register REGNO (if it is a general-purpose register) in
   *GREGSETPS with the value in GDB's register array.  If REGNO is -1,
d142 1
a142 1
fill_gregset (gregset_t *gregsetp, int regno)
d147 1
a147 1
    if ((regno == -1 || regno == i) && ! CANNOT_STORE_REGISTER (i))
d162 3
a164 3
/* Fill register REGNO (if it is a floating-point register) in
   *FPREGSETP with the value in GDB's register array.  If REGNO is -1,
   do this for all registers.  */
d167 1
a167 1
fill_fpregset (fpregset_t *fpregsetp, int regno)
d169 1
a169 1
  i387_collect_fsave (current_regcache, regno, fpregsetp);
d172 1
a172 1
/* Fetch register REGNO from the inferior.  If REGNO is -1, do this
d176 1
a176 1
fetch_inferior_registers (int regno)
d178 1
a178 1
  if (regno == -1 || GETREGS_SUPPLIES (regno))
d187 1
a187 1
      if (regno != -1)
d191 1
a191 1
  if (regno == -1 || regno >= FP0_REGNUM)
d222 1
a222 1
/* Store register REGNO back into the inferior.  If REGNO is -1, do
d226 1
a226 1
store_inferior_registers (int regno)
d228 1
a228 1
  if (regno == -1 || GETREGS_SUPPLIES (regno))
d236 1
a236 1
      fill_gregset (&gregs, regno);
d242 1
a242 1
      if (regno != -1)
d246 1
a246 1
  if (regno == -1 || regno >= FP0_REGNUM)
d258 1
a258 1
	  i387_collect_fxsave (current_regcache, regno, xmmregs);
d272 1
a272 1
          i387_collect_fsave (current_regcache, regno, &fpregs);
d363 1
a363 1
/* Return the address register REGNO.  BLOCKEND is the value of
d367 1
a367 1
register_u_addr (CORE_ADDR blockend, int regno)
d369 1
a369 1
  return (CORE_ADDR) REG_ADDR (blockend, regno);
@


1.24
log
@* i386bsd-nat.c: Update copyright year.
(CANNOT_FETCH_REGISTER, CANNOT_STORE_REGISTER): Undefine and then
define unconditionally.
@
text
@d169 1
a169 1
  i387_fill_fsave ((char *) fpregsetp, regno);
d258 1
a258 1
	  i387_fill_fxsave (xmmregs, regno);
d272 2
a273 2
          i387_fill_fsave ((char *) &fpregs, regno);
  
@


1.23
log
@* i387-tdep.c (i387_supply_fsave, i387_supply_fxsave): Add
regcache argument and reverse the order of the other two
arguments.  Remove local regcache variable.  Determine
architecture from REGCACHE.  Update comments.
* x86-64-tdep.c (x86_64_supply_fxsave): Add regcache argument and
reverse the order of the other two arguments.  Remove local
regcache variable.  Determine architecture from REGCACHE.  Update
comments.
* i387-tdep.h (i387_supply_fsave, i387_supply_fxsave): Adjust
prototypes.  Update comments.
* x86-64-tdep.c (x86_64_supply_fxsave): Adjust prototype.  Adjust
comment.
* amd64fbsd-nat.c (supply_fpregset, fetch_inferior_registers):
Update.
* go32-nat.c (fetch_register, go32_fetch_registers): Update.
* i386-interix-nat.c (supply_fpregset): Update.
* i386-linux-nat.c (supply_fpregset, supply_fpxregset): Update.
* i386-nto-tdep.c (i386nto_supply_fpregset): Update.
* i386gnu-nat.c (fetch_fpregs, supply_fpregset): Update.
* i386bsd-nat.c (supply_fpregset, fetch_inferior_registers): Update.
* i386nbsd-tdep.c (fetch_core_registers, fetch_elfcore_registers):
Update.
* i386obsd-tdep.c (fetch_core_registers): Update.
* i386v4-nat.c (supply_fpregset): Update.
* x86-64-linux-nat.c (supply_fpregset): Update.
* x86-64-linux-tdep.c (fetch_core_registers): Update.
@
text
@d2 2
a3 1
   Copyright 2000, 2001, 2002, 2003 Free Software Foundation, Inc.
d56 1
a56 1
#if !defined (CANNOT_FETCH_REGISTER)
a57 1
#endif
d60 1
a60 1
#if !defined (CANNOT_STORE_REGISTER)
a61 1
#endif
@


1.23.6.1
log
@Merge mainline to intercu branch.
@
text
@d2 1
a2 2

   Copyright 2000, 2001, 2002, 2003, 2004 Free Software Foundation, Inc.
d55 3
a57 2
#undef CANNOT_FETCH_REGISTER
#define CANNOT_FETCH_REGISTER(regnum) cannot_fetch_register (regnum)
d60 3
a62 2
#undef CANNOT_STORE_REGISTER
#define CANNOT_STORE_REGISTER(regnum) cannot_fetch_register (regnum)
d67 2
a68 2
/* At reg_offset[REGNUM] you'll find the offset to the gregset_t
   location where the GDB register REGNUM is stored.  Unsupported
d98 1
a98 1
#define REG_ADDR(regset, regnum) ((char *) (regset) + reg_offset[regnum])
d101 2
a102 2
#define GETREGS_SUPPLIES(regnum) \
  ((0 <= (regnum) && (regnum) <= 15))
d110 1
a110 1
/* Return nonzero if we shouldn't try to fetch register REGNUM.  */
d113 1
a113 1
cannot_fetch_register (int regnum)
d115 1
a115 1
  return (reg_offset[regnum] == -1);
d138 2
a139 2
/* Fill register REGNUM (if it is a general-purpose register) in
   *GREGSETPS with the value in GDB's register array.  If REGNUM is -1,
d143 1
a143 1
fill_gregset (gregset_t *gregsetp, int regnum)
d148 1
a148 1
    if ((regnum == -1 || regnum == i) && ! CANNOT_STORE_REGISTER (i))
d163 3
a165 3
/* Fill register REGNUM (if it is a floating-point register) in
   *FPREGSETP with the value in GDB's register array.  If REGNUM is
   -1, do this for all registers.  */
d168 1
a168 1
fill_fpregset (fpregset_t *fpregsetp, int regnum)
d170 1
a170 1
  i387_collect_fsave (current_regcache, regnum, fpregsetp);
d173 1
a173 1
/* Fetch register REGNUM from the inferior.  If REGNUM is -1, do this
d177 1
a177 1
fetch_inferior_registers (int regnum)
d179 1
a179 1
  if (regnum == -1 || GETREGS_SUPPLIES (regnum))
d188 1
a188 1
      if (regnum != -1)
d192 1
a192 1
  if (regnum == -1 || regnum >= I386_ST0_REGNUM)
d223 1
a223 1
/* Store register REGNUM back into the inferior.  If REGNUM is -1, do
d227 1
a227 1
store_inferior_registers (int regnum)
d229 1
a229 1
  if (regnum == -1 || GETREGS_SUPPLIES (regnum))
d237 1
a237 1
      fill_gregset (&gregs, regnum);
d243 1
a243 1
      if (regnum != -1)
d247 1
a247 1
  if (regnum == -1 || regnum >= I386_ST0_REGNUM)
d259 1
a259 1
	  i387_collect_fxsave (current_regcache, regnum, xmmregs);
d273 2
a274 2
          i387_collect_fsave (current_regcache, regnum, &fpregs);

d364 1
a364 1
/* Return the address register REGNUM.  BLOCKEND is the value of
d368 1
a368 1
register_u_addr (CORE_ADDR blockend, int regnum)
d370 1
a370 1
  return (CORE_ADDR) REG_ADDR (blockend, regnum);
@


1.23.6.2
log
@Merge mainline to intercu branch - 2004-09-15
@
text
@d34 13
a47 1
#include "i387-tdep.h"
d55 10
a64 2
/* Offset in `struct reg' where MEMBER is stored.  */
#define REG_OFFSET(member) offsetof (struct reg, member)
d66 2
a67 2
/* At i386bsd_reg_offset[REGNUM] you'll find the offset in `struct
   reg' where the GDB register REGNUM is stored.  Unsupported
d69 1
a69 1
static int i386bsd_r_reg_offset[] =
d97 2
d108 8
d118 1
a118 1
/* Supply the general-purpose registers in GREGS, to REGCACHE.  */
d120 5
a124 2
static void
i386bsd_supply_gregset (struct regcache *regcache, const void *gregs)
d126 1
a126 2
  const char *regs = gregs;
  int regnum;
d128 1
a128 1
  for (regnum = 0; regnum < ARRAY_SIZE (i386bsd_r_reg_offset); regnum++)
d130 4
a133 4
      int offset = i386bsd_r_reg_offset[regnum];

      if (offset != -1)
	regcache_raw_supply (regcache, regnum, regs + offset);
d137 3
a139 3
/* Collect register REGNUM from REGCACHE and store its contents in
   GREGS.  If REGNUM is -1, collect and store all appropriate
   registers.  */
d141 2
a142 3
static void
i386bsd_collect_gregset (const struct regcache *regcache,
			 void *gregs, int regnum)
a143 1
  char *regs = gregs;
d146 19
a164 5
  for (i = 0; i < ARRAY_SIZE (i386bsd_r_reg_offset); i++)
    {
      if (regnum == -1 || regnum == i)
	{
	  int offset = i386bsd_r_reg_offset[i];
d166 4
a169 4
	  if (offset != -1)
	    regcache_raw_collect (regcache, i, regs + offset);
	}
    }
d180 1
a180 1
      struct reg regs;
d183 1
a183 1
		  (PTRACE_TYPE_ARG3) &regs, 0) == -1)
d186 1
a186 1
      i386bsd_supply_gregset (current_regcache, &regs);
d193 1
a193 1
      struct fpreg fpregs;
d199 1
a199 1
		    (PTRACE_TYPE_ARG3) xmmregs, 0) == 0)
d207 1
a207 1
		      (PTRACE_TYPE_ARG3) &fpregs, 0) == -1)
d214 1
a214 1
		  (PTRACE_TYPE_ARG3) &fpregs, 0) == -1)
d230 1
a230 1
      struct reg regs;
d233 1
a233 1
                  (PTRACE_TYPE_ARG3) &regs, 0) == -1)
d236 1
a236 1
      i386bsd_collect_gregset (current_regcache, &regs, regnum);
d239 1
a239 1
	          (PTRACE_TYPE_ARG3) &regs, 0) == -1)
d248 1
a248 1
      struct fpreg fpregs;
d254 1
a254 1
		    (PTRACE_TYPE_ARG3) xmmregs, 0) == 0)
d261 1
a261 1
		      (PTRACE_TYPE_ARG3) xmmregs, 0) == -1)
d269 1
a269 1
		      (PTRACE_TYPE_ARG3) &fpregs, 0) == -1)
d275 1
a275 1
		      (PTRACE_TYPE_ARG3) &fpregs, 0) == -1)
d300 1
a300 1
              (PTRACE_TYPE_ARG3) &dbregs, 0) == -1)
d311 1
a311 1
              (PTRACE_TYPE_ARG3) &dbregs, 0) == -1)
d348 1
a348 1
	      (PTRACE_TYPE_ARG3) &dbregs, 0) == -1)
d369 1
a369 3
  gdb_assert (regnum >= 0 && regnum < ARRAY_SIZE (i386bsd_r_reg_offset));

  return blockend + i386bsd_r_reg_offset[regnum];
d402 2
a405 2
#ifdef SC_REG_OFFSET

a454 2

#endif /* SC_REG_OFFSET */
@


1.23.6.3
log
@Merge from mainline.
@
text
@a35 2
#include "i386bsd-nat.h"
#include "inf-ptrace.h"
d131 2
a132 2
static void
i386bsd_fetch_inferior_registers (int regnum)
d181 2
a182 2
static void
i386bsd_store_inferior_registers (int regnum)
a237 14

/* Create a prototype *BSD/i386 target.  The client can override it
   with local methods.  */

struct target_ops *
i386bsd_target (void)
{
  struct target_ops *t;

  t = inf_ptrace_target ();
  t->to_fetch_registers = i386bsd_fetch_inferior_registers;
  t->to_store_registers = i386bsd_store_inferior_registers;
  return t;
}
@


1.23.10.1
log
@Merge with mainline cagney_tramp-20040321-mergepoint.
@
text
@d2 1
a2 2

   Copyright 2000, 2001, 2002, 2003, 2004 Free Software Foundation, Inc.
d55 3
a57 2
#undef CANNOT_FETCH_REGISTER
#define CANNOT_FETCH_REGISTER(regnum) cannot_fetch_register (regnum)
d60 3
a62 2
#undef CANNOT_STORE_REGISTER
#define CANNOT_STORE_REGISTER(regnum) cannot_fetch_register (regnum)
d67 2
a68 2
/* At reg_offset[REGNUM] you'll find the offset to the gregset_t
   location where the GDB register REGNUM is stored.  Unsupported
d98 1
a98 1
#define REG_ADDR(regset, regnum) ((char *) (regset) + reg_offset[regnum])
d101 2
a102 2
#define GETREGS_SUPPLIES(regnum) \
  ((0 <= (regnum) && (regnum) <= 15))
d110 1
a110 1
/* Return nonzero if we shouldn't try to fetch register REGNUM.  */
d113 1
a113 1
cannot_fetch_register (int regnum)
d115 1
a115 1
  return (reg_offset[regnum] == -1);
d138 2
a139 2
/* Fill register REGNUM (if it is a general-purpose register) in
   *GREGSETPS with the value in GDB's register array.  If REGNUM is -1,
d143 1
a143 1
fill_gregset (gregset_t *gregsetp, int regnum)
d148 1
a148 1
    if ((regnum == -1 || regnum == i) && ! CANNOT_STORE_REGISTER (i))
d163 3
a165 3
/* Fill register REGNUM (if it is a floating-point register) in
   *FPREGSETP with the value in GDB's register array.  If REGNUM is
   -1, do this for all registers.  */
d168 1
a168 1
fill_fpregset (fpregset_t *fpregsetp, int regnum)
d170 1
a170 1
  i387_collect_fsave (current_regcache, regnum, fpregsetp);
d173 1
a173 1
/* Fetch register REGNUM from the inferior.  If REGNUM is -1, do this
d177 1
a177 1
fetch_inferior_registers (int regnum)
d179 1
a179 1
  if (regnum == -1 || GETREGS_SUPPLIES (regnum))
d188 1
a188 1
      if (regnum != -1)
d192 1
a192 1
  if (regnum == -1 || regnum >= I386_ST0_REGNUM)
d223 1
a223 1
/* Store register REGNUM back into the inferior.  If REGNUM is -1, do
d227 1
a227 1
store_inferior_registers (int regnum)
d229 1
a229 1
  if (regnum == -1 || GETREGS_SUPPLIES (regnum))
d237 1
a237 1
      fill_gregset (&gregs, regnum);
d243 1
a243 1
      if (regnum != -1)
d247 1
a247 1
  if (regnum == -1 || regnum >= I386_ST0_REGNUM)
d259 1
a259 1
	  i387_collect_fxsave (current_regcache, regnum, xmmregs);
d273 2
a274 2
          i387_collect_fsave (current_regcache, regnum, &fpregs);

d364 1
a364 1
/* Return the address register REGNUM.  BLOCKEND is the value of
d368 1
a368 1
register_u_addr (CORE_ADDR blockend, int regnum)
d370 1
a370 1
  return (CORE_ADDR) REG_ADDR (blockend, regnum);
@


1.22
log
@* go32-nat.c (fetch_register): Call i387_supply_fsave instead of
i387_supply_register.
(go32_fetch_registers): Adjust call to i387_supply_fsave.
* i386nbsd-tdep.c (fetch_core_registers): Adjust call to
i387_supply_fsave.
(fetch_elfcore_registers): Adjust call to i387_supply_fsave and
i387_supply_fxsave.
* i386obsd-tdep.c (fetch_core_registers): Adjust call to
i387_supply_fsave.
* i386bsd-nat.c (supply_fpregset): Adjust call to
i387_supply_fsave.
(fetch_inferior_registers): Remove extraneous whitespace.  Adjust
call to i387_supply_fxsave.  Call i387_supply_fsave instead of
supply_fpregset.
(store_inferior_registers): Remove extraneous whitespace.  Call
i387_fill_fsave instead of fill_fpregset.
* i386gnu-nat.c (fetch_fpregs): Adjust call to i387_supply_fsave.
(supply_fpregset): Likewise.
* i386v4-nat.c (supply_fpregset): Adjust call to
i387_supply_fsave.
* i386-interix-nat.c (supply_fpregset): Adjust call to
i387_supply_fsave.
* i386-linux-nat.c (supply_fpregset): Adjust call to
i387_supply_fsave.
(supply_fpxregset): Adjust call to i387_adjust_fxsave.
* i386-nto-tdep.c (i386nto_supply_fpregset): Adjust calls to
i387supply_fsave and i387_supply_fxsave.
* i387-tdep.c (i387_supply_fsave): Add `regnum' argument.
Incorporate code from `i387_supply_register.
(i387_supply_register): Remove.
(i387_supply_fxsave): Add `regnum' argument.
Update comments.
* i387-tdep.h (i387_supply_fsave, i387_supply_fsxave): Adjust
prototype.
(i387_supply_register): remove prototype.
Update comments.
@
text
@d160 1
a160 1
  i387_supply_fsave ((const char *) fpregsetp, -1);
d203 1
a203 1
	  i387_supply_fxsave (xmmregs, -1);
d211 1
a211 1
	  i387_supply_fsave ((const char *) &fpregs, -1);
d218 1
a218 1
      i387_supply_fsave ((const char *) &fpregs, -1);
@


1.21
log
@* i386-tdep.h (i386fbsd_sigtramp_start, i386fbsd_sigtramp_end,
i386obsd_sigtramp_start, i386obsd_sigtramp_end,
i386fbsd4_sc_reg_offset, i386fbsd_sc_reg_offset,
i386nbsd_sc_reg_offset, i386obsd_sc_reg_offset,
i386bsd_sc_reg_offset): Add extern declarations.
* i386obsd-nat.c: Include "i386-tdep.h"
(_initialize_i386obsd_nat): Remove extern declarations.
* i386fbsd-nat.c (_initialize_i386fbsd_nat): Remove extern
declarations.
* i386bsd-nat.c (_initialize_i386bsd_nat): Remove extern
declarations.
@
text
@d160 1
a160 1
  i387_supply_fsave ((char *) fpregsetp);
a178 1

d203 1
a203 1
	  i387_supply_fxsave (xmmregs);
d211 1
a211 1
	  supply_fpregset (&fpregs);
d218 1
a218 1
      supply_fpregset (&fpregs);
a228 1

d273 1
a273 1
          fill_fpregset (&fpregs, regno);
@


1.20
log
@* i386bsd-nat.c (fetch_inferior_registers,
store_inferior_registers): Don't use && at the end of a line.
(_initialize_i386bsd_nat): Fix typo.
@
text
@d2 1
a2 1
   Copyright 2000, 2001, 2002 Free Software Foundation, Inc.
a397 1
  extern int i386fbsd4_sc_reg_offset[];
a399 1
  extern int i386fbsd_sc_reg_offset[];
a401 1
  extern int i386nbsd_sc_reg_offset[];
a403 1
  extern int i386obsd_sc_reg_offset[];
a405 1
  extern int i386bsd_sc_reg_offset[];
@


1.19
log
@From Michal Ludvig  <mludvig@@suse.cz>:
* i386-tdep.h (struct gdbarch_tdep): Add members `sc_reg_offset'
and `sc_num_regs'.
(I386_EAX_REGNUM, I386_EDX_REGNUM, I386_ESP_REGNUM,
I386_EBP_REGNUM, I386_EIP_REGNUM, I386_EFLAGS_REGNUM,
I386_ST0_REGNUM): Move here from...
* i386-tdep.c: ... here.
(I386_NUM_SAVED_REGS): Define to I386_NUM_REGS.
(i386_sigtramp_frame_cache): Use `sc_reg_offset' to find saved
registers if possible.
(i386_gdbarch_init): Initialize TDEP->sc_reg_offset.
* i386bsd-tdep.c (i386bsd_sc_pc_offset, i386bsd_sc_sp_offset):
Remove variables.
(i386bsd_sc_reg_offset): New variable.
(i386bsd_init_abi): Initialize TDEP->sc_reg_offset and
TDEP->sc_num_regs instead of TDEP->sc_pc_offset and
TDEP->sc_sp_offset.
(i386fbsd_sc_reg_offset): New variable.
(i386fbsdaout_init_abi): Initialize TDEP->sc_reg_offset and
TDEP->sc_num_regs.
(i386fbsd4_sc_pc_offset, i386fbsd4_sc_sp_offset): Remove
variables.
(i386fbsd4_sc_reg_offset): New variable.
(i3864bsd4_init_abi): Initialize TDEP->sc_reg_offset and
TDEP->sc_num_regs instead of TDEP->sc_pc_offset and
TDEP->sc_sp_offset.
* i386-linux-tdep.c (i386_linux_sc_reg_offset): New variable.
(i386_linux_init_abi): Set TDEP->sc_reg_offset and TDEP->sc_num_regs.
* i386nbsd-tdep.c (i386nbsd_sc_pc_offset, i386nbsd_sc_sp_offset):
Remove variables.
(i386nbsd_sc_reg_offset): New variable.
(i386nbsd_init_abi): Initialize TDEP->sc_reg_offset and
TDEP->sc_num_regs instead of TDEP->sc_pc_offset and
TDEP->sc_sp_offset.
* i386obsd-tdep.c (i386obsd_sc_pc_offset, i386obsd_sc_sp_offset):
Remove variables.
(i386obsd_sc_reg_offset): New variable.
(i386obsd_init_abi): Initialize TDEP->sc_reg_offset and
TDEP->sc_num_regs instead of TDEP->sc_pc_offset and
TDEP->sc_sp_offset.
* i386bsd-nat.c (_initialize_i386bsd_nat): Adjust for changes in
i386bsd-tdep.c, i386nbsd-tdep.c and i386obsd-tdep.c.  Add check
for frame pointer offset in `struct sigcontext'.
@
text
@d199 3
a201 3
      if (have_ptrace_xmmregs != 0 &&
	  ptrace(PT_GETXMMREGS, PIDGET (inferior_ptid),
		 (PTRACE_ARG3_TYPE) xmmregs, 0) == 0)
d255 3
a257 3
      if (have_ptrace_xmmregs != 0 &&
	  ptrace(PT_GETXMMREGS, PIDGET (inferior_ptid),
		 (PTRACE_ARG3_TYPE) xmmregs, 0) == 0)
d411 1
a411 1
#define SC_PC_OFFSET i386bsd_sc_reg_offset
@


1.18
log
@* i386bsd-nat.c (i386bsd_dr_set, i386bsd_dr_get_status): Use
DBREG_DRX macro to acces debug registers.
@
text
@d389 1
a389 2
  int sc_pc_offset;
  int sc_sp_offset;
d398 5
a402 4
  extern int i386fbsd4_sc_pc_offset;
  extern int i386fbsd4_sc_sp_offset;
#define SC_PC_OFFSET i386fbsd4_sc_pc_offset
#define SC_SP_OFFSET i386fbsd4_sc_sp_offset
d404 2
a405 4
  extern int i386nbsd_sc_pc_offset;
  extern int i386nbsd_sc_sp_offset;
#define SC_PC_OFFSET i386nbsd_sc_pc_offset
#define SC_SP_OFFSET i386nbsd_sc_sp_offset
d407 2
a408 4
  extern int i386obsd_sc_pc_offset;
  extern int i386obsd_sc_sp_offset;
#define SC_PC_OFFSET i386obsd_sc_pc_offset
#define SC_SP_OFFSET i386obsd_sc_sp_offset
d410 2
a411 4
  extern int i386bsd_sc_pc_offset;
  extern int i386bsd_sc_sp_offset;
#define SC_PC_OFFSET i386bsd_sc_pc_offset
#define SC_SP_OFFSET i386bsd_sc_sp_offset
d414 10
d426 1
a426 1
  sc_pc_offset = offsetof (struct sigcontext, sc_pc);
d428 1
a428 1
  if (SC_PC_OFFSET != sc_pc_offset)
d432 2
a433 2
Please report this to <bug-gdb@@gnu.org>.",
	       sc_pc_offset, SC_PC_OFFSET);
d436 1
a436 1
  SC_PC_OFFSET = sc_pc_offset;
d439 1
a439 1
  sc_sp_offset = offsetof (struct sigcontext, sc_sp);
d441 1
a441 1
  if (SC_SP_OFFSET != sc_sp_offset)
d446 14
a459 1
	       sc_sp_offset, SC_SP_OFFSET);
d462 1
a462 1
  SC_SP_OFFSET = sc_sp_offset;
@


1.17
log
@* configure.tgt (i[3456]86-*-openbsd*): Set gdb_target to obds.
* config/i386/obsd.mt: New file.
* i386bsd-nat.c (_initialize_i386bsd_nat): Introduce
i386obsd_sc_pc_offset and i386obsd_sc_sp_offset;
* i386obsd-nat.c (_initialize_i386obsd_nat): Set
i386obsd_sigtramp_start and i386obsd_sigtramp_end instead of
i386nbsd_sigtramp_start and i386nbsd_sigtramp_end.
* i386obsd-tdep.c: New file.
@
text
@d309 1
a309 1
  dbregs.dr7 &= ~(0x0000fc00);
d358 1
a358 1
  return dbregs.dr6;
@


1.16
log
@* i386-tdep.c (i386_frameless_signal_p): New function.
(i386_frame_chain): Deal with frameless signals.
(i386_sigtramp_saved_sp): New function.
(i386_frame_saved_pc): Deal with frameless signals.
(i386_saved_pc_after_call): Make sure the correct value is
returned just after entry into a sigtramp.
* i386bsd-tdep.c (i386bsd_sc_sp_offset, i386nbsd_sc_sp_offset,
i386fbsd4_sc_sp_offset): New variables.
(i386bsd_init_abi, i386nbsd_init_abi, i386fbsd4_init_abi): Use
these variables to initialize tdep->sc_sp_offset.  * i386bsd-nat.c
(_initialize_i386bsd_nat): Add sanity check for sc_sp_offset
similiar to what we already did for sc_pc_offset.
* i386-sol2-tdep.c (i386_sol2_init_abi): Initialize
tdep->sc_sp_offset.
@
text
@d403 1
a403 1
#elif defined (NetBSD) || defined (__NetBSD_Version__) || defined (OpenBSD)
d408 5
@


1.16.10.1
log
@Merge drow-cplus-merge-20021025 to drow-cplus-branch.
@
text
@d309 1
a309 1
  DBREG_DRX ((&dbregs), 7) &= ~(0x0000fc00);
d358 1
a358 1
  return DBREG_DRX ((&dbregs), 6);
d403 1
a403 1
#elif defined (NetBSD) || defined (__NetBSD_Version__)
a407 5
#elif defined (OpenBSD)
  extern int i386obsd_sc_pc_offset;
  extern int i386obsd_sc_sp_offset;
#define SC_PC_OFFSET i386obsd_sc_pc_offset
#define SC_SP_OFFSET i386obsd_sc_sp_offset
@


1.16.10.2
log
@Merge drow-cplus-branch to:
  cvs rtag -D 2003-12-14 00:00:00 UTC drow-cplus-merge-20031214 gdb+dejagnu
@
text
@d2 1
a2 1
   Copyright 2000, 2001, 2002, 2003 Free Software Foundation, Inc.
d160 1
a160 1
  i387_supply_fsave (current_regcache, -1, fpregsetp);
d179 1
d199 3
a201 3
      if (have_ptrace_xmmregs != 0
	  && ptrace(PT_GETXMMREGS, PIDGET (inferior_ptid),
		    (PTRACE_ARG3_TYPE) xmmregs, 0) == 0)
d204 1
a204 1
	  i387_supply_fxsave (current_regcache, -1, xmmregs);
d212 1
a212 1
	  i387_supply_fsave (current_regcache, -1, &fpregs);
d219 1
a219 1
      i387_supply_fsave (current_regcache, -1, &fpregs);
d230 1
d255 3
a257 3
      if (have_ptrace_xmmregs != 0
	  && ptrace(PT_GETXMMREGS, PIDGET (inferior_ptid),
		    (PTRACE_ARG3_TYPE) xmmregs, 0) == 0)
d275 1
a275 1
          i387_fill_fsave ((char *) &fpregs, regno);
d389 2
a390 1
  int offset;
d399 4
a402 3
#define SC_REG_OFFSET i386fbsd4_sc_reg_offset
#elif defined (__FreeBSD_version) && __FreeBSD_version >= 300005
#define SC_REG_OFFSET i386fbsd_sc_reg_offset
d404 4
a407 1
#define SC_REG_OFFSET i386nbsd_sc_reg_offset
d409 4
a412 1
#define SC_REG_OFFSET i386obsd_sc_reg_offset
d414 4
a417 1
#define SC_REG_OFFSET i386bsd_sc_reg_offset
a419 10
  /* We only check the program counter, stack pointer and frame
     pointer since these members of `struct sigcontext' are essential
     for providing backtraces.  More checks could be added, but would
     involve adding configure checks for the appropriate structure
     members, since older BSD's don't provide all of them.  */

#define SC_PC_OFFSET SC_REG_OFFSET[I386_EIP_REGNUM]
#define SC_SP_OFFSET SC_REG_OFFSET[I386_ESP_REGNUM]
#define SC_FP_OFFSET SC_REG_OFFSET[I386_EBP_REGNUM]

d422 1
a422 1
  offset = offsetof (struct sigcontext, sc_pc);
d424 1
a424 1
  if (SC_PC_OFFSET != offset)
d428 2
a429 2
Please report this to <bug-gdb@@gnu.org>.", 
	       offset, SC_PC_OFFSET);
d432 1
a432 1
  SC_PC_OFFSET = offset;
d435 1
a435 1
  offset = offsetof (struct sigcontext, sc_sp);
d437 1
a437 1
  if (SC_SP_OFFSET != offset)
d442 1
a442 14
	       offset, SC_SP_OFFSET);
    }

  SC_SP_OFFSET = offset;

  /* And the frame pointer.  */
  offset = offsetof (struct sigcontext, sc_fp);

  if (SC_FP_OFFSET != offset)
    {
      warning ("\
offsetof (struct sigcontext, sc_fp) yields %d instead of %d.\n\
Please report this to <bug-gdb@@gnu.org>.",
	       offset, SC_FP_OFFSET);
d445 1
a445 1
  SC_FP_OFFSET = offset;
@


1.16.8.1
log
@2002-10-25  David Carlton  <carlton@@math.stanford.edu>

	* symtab.c (lookup_symbol_aux_block): New function.
	(lookup_symbol_aux_local): Call lookup_symbol_aux_block.
	(lookup_symbol_aux): Ditto.

	* Merge from mainline; tag is carlton_dictionary-20021025-merge.

2002-10-25  David Carlton  <carlton@@math.stanford.edu>

	* cp-support.c: Add comment to demangled name pitfalls.
	* symtab.c (lookup_transparent_type): Add FIXME comment at
	beginning.

2002-10-23  David Carlton  <carlton@@math.stanford.edu>

	* symtab.c: Delete cplusplus_hint.
	Delete prototype for find_template_name_end.
	* dwarf2read.c (scan_partial_symbols): Add in a gdb_assert from a
	later version of my namespace_minimal patch.

2002-10-25  David Carlton  <carlton@@math.stanford.edu>

	* gdb.c++/namespace.exp: Change all of the setup_xfail tests that
	I added into setup_kfails.
@
text
@d309 1
a309 1
  DBREG_DRX ((&dbregs), 7) &= ~(0x0000fc00);
d358 1
a358 1
  return DBREG_DRX ((&dbregs), 6);
d403 1
a403 1
#elif defined (NetBSD) || defined (__NetBSD_Version__)
a407 5
#elif defined (OpenBSD)
  extern int i386obsd_sc_pc_offset;
  extern int i386obsd_sc_sp_offset;
#define SC_PC_OFFSET i386obsd_sc_pc_offset
#define SC_SP_OFFSET i386obsd_sc_sp_offset
@


1.16.8.2
log
@2003-06-27  David Carlton  <carlton@@kealia.com>

	* Merge with mainline; tag is carlton_dictionary-20030627-merge.
@
text
@d389 2
a390 1
  int offset;
d399 4
a402 5
  extern int i386fbsd4_sc_reg_offset[];
#define SC_REG_OFFSET i386fbsd4_sc_reg_offset
#elif defined (__FreeBSD_version) && __FreeBSD_version >= 300005
  extern int i386fbsd_sc_reg_offset[];
#define SC_REG_OFFSET i386fbsd_sc_reg_offset
d404 4
a407 2
  extern int i386nbsd_sc_reg_offset[];
#define SC_REG_OFFSET i386nbsd_sc_reg_offset
d409 4
a412 2
  extern int i386obsd_sc_reg_offset[];
#define SC_REG_OFFSET i386obsd_sc_reg_offset
d414 4
a417 2
  extern int i386bsd_sc_reg_offset[];
#define SC_PC_OFFSET i386bsd_sc_reg_offset
a419 10
  /* We only check the program counter, stack pointer and frame
     pointer since these members of `struct sigcontext' are essential
     for providing backtraces.  More checks could be added, but would
     involve adding configure checks for the appropriate structure
     members, since older BSD's don't provide all of them.  */

#define SC_PC_OFFSET SC_REG_OFFSET[I386_EIP_REGNUM]
#define SC_SP_OFFSET SC_REG_OFFSET[I386_ESP_REGNUM]
#define SC_FP_OFFSET SC_REG_OFFSET[I386_EBP_REGNUM]

d422 1
a422 1
  offset = offsetof (struct sigcontext, sc_pc);
d424 1
a424 1
  if (SC_PC_OFFSET != offset)
d428 2
a429 2
Please report this to <bug-gdb@@gnu.org>.", 
	       offset, SC_PC_OFFSET);
d432 1
a432 1
  SC_PC_OFFSET = offset;
d435 1
a435 1
  offset = offsetof (struct sigcontext, sc_sp);
d437 1
a437 1
  if (SC_SP_OFFSET != offset)
d442 1
a442 14
	       offset, SC_SP_OFFSET);
    }

  SC_SP_OFFSET = offset;

  /* And the frame pointer.  */
  offset = offsetof (struct sigcontext, sc_fp);

  if (SC_FP_OFFSET != offset)
    {
      warning ("\
offsetof (struct sigcontext, sc_fp) yields %d instead of %d.\n\
Please report this to <bug-gdb@@gnu.org>.",
	       offset, SC_FP_OFFSET);
d445 1
a445 1
  SC_FP_OFFSET = offset;
@


1.16.8.3
log
@2003-09-17  David Carlton  <carlton@@kealia.com>

	* Merge with mainline; tag is carlton_dictionary-20030917-merge.
@
text
@d2 1
a2 1
   Copyright 2000, 2001, 2002, 2003 Free Software Foundation, Inc.
d160 1
a160 1
  i387_supply_fsave ((const char *) fpregsetp, -1);
d179 1
d199 3
a201 3
      if (have_ptrace_xmmregs != 0
	  && ptrace(PT_GETXMMREGS, PIDGET (inferior_ptid),
		    (PTRACE_ARG3_TYPE) xmmregs, 0) == 0)
d204 1
a204 1
	  i387_supply_fxsave (xmmregs, -1);
d212 1
a212 1
	  i387_supply_fsave ((const char *) &fpregs, -1);
d219 1
a219 1
      i387_supply_fsave ((const char *) &fpregs, -1);
d230 1
d255 3
a257 3
      if (have_ptrace_xmmregs != 0
	  && ptrace(PT_GETXMMREGS, PIDGET (inferior_ptid),
		    (PTRACE_ARG3_TYPE) xmmregs, 0) == 0)
d275 1
a275 1
          i387_fill_fsave ((char *) &fpregs, regno);
d398 1
d401 1
d404 1
d407 1
d410 2
a411 1
#define SC_REG_OFFSET i386bsd_sc_reg_offset
@


1.16.8.4
log
@2003-11-11  David Carlton  <carlton@@kealia.com>

	* Merge with mainline; tag is carlton-dictionary-20031111-merge.
@
text
@d160 1
a160 1
  i387_supply_fsave (current_regcache, -1, fpregsetp);
d203 1
a203 1
	  i387_supply_fxsave (current_regcache, -1, xmmregs);
d211 1
a211 1
	  i387_supply_fsave (current_regcache, -1, &fpregs);
d218 1
a218 1
      i387_supply_fsave (current_regcache, -1, &fpregs);
@


1.16.6.1
log
@* configure.tgt (i[3456]86-*-openbsd*): Set gdb_target to obds.
* config/i386/obsd.mt: New file.
* i386bsd-nat.c (_initialize_i386bsd_nat): Introduce
i386obsd_sc_pc_offset and i386obsd_sc_sp_offset;
* i386obsd-nat.c (_initialize_i386obsd_nat): Set
i386obsd_sigtramp_start and i386obsd_sigtramp_end instead of
i386nbsd_sigtramp_start and i386nbsd_sigtramp_end.
* i386obsd-tdep.c: New file.
@
text
@d403 1
a403 1
#elif defined (NetBSD) || defined (__NetBSD_Version__)
a407 5
#elif defined (OpenBSD)
  extern int i386obsd_sc_pc_offset;
  extern int i386obsd_sc_sp_offset;
#define SC_PC_OFFSET i386obsd_sc_pc_offset
#define SC_SP_OFFSET i386obsd_sc_sp_offset
@


1.15
log
@* i386bsd-nat.c (_initialize_i386bsd_nat): Define SC_PC_OFFSET to
i386nbsd_sc_pc_offset on OpenBSD too.
@
text
@d390 1
d400 1
d402 1
d405 1
d407 1
d410 1
d412 1
d428 13
@


1.14
log
@* i386bsd-nat.c: Include "i386-tdep.h".
(supply_gregset, fill_gregset): Replace usage of NUM_GREGS with
I386_NUM_GREGS.
@
text
@d400 1
a400 1
#elif defined (NetBSD) || defined (__NetBSD_Version__)
@


1.13
log
@* config/i386/i386sol2.mt (TDEPFILES): Add i386-sol2-tdep.o and
i386bsd-tdep.o.  Remove solib.o, solib-svr4.o and solib-legacy.o.
Move these to ...
* config/i386/i386sol2.mh: ... here.
* config/i386/tm-i386sol2.h (STAB_REG_TO_REGNUM): Remove define.
(sigtramp_saved_pc, I386V4_SIGTRAMP_SAVED_PC): Don't #undef.
(SIGCONTEXT_PC_OFFSET): Remove define.
(IN_SIGTRAMP): Remove define.
* i386-sol2-tdep.c: New file.

* config/i386/i386nw.mt (TM_FILE): Change to tm-i386.h.
* config/i386/tm-i386nw.h: Removed.

* config/i386/tm-fbsd.h (STAB_REG_TO_REGNUM,
USE_STRUCT_CONVENTION): Remove defines.
(JB_ELEMENT_SIZE, JB_PC, GET_LONGJMP_TARGET): Remove defines.
(get_longjmp_target): Remove prototype.
(IN_SIGTRAMP): Remove define.
(i386bsd_in_sigtramp): Remove prototype.
(i386bsd_sigtramp_start, i386bsd_sigtramp_end): Turn into a
function.  Update comment accordingly
(SIGTRAMP_START, SIGTRAMP): Adjust definition accordingly.
(FRAME_SAVED_PC): Remove define.
(i386bsd_frame_saved_pc): Remove prototype.
* config/i386/tm-nbsd.h (JB_ELEMENT_SIZE, JB_PC,
GET_LONGJMP_TARGET): Remove defines.
(get_longjmp_target): Remove prototype.
(IN_SIGTRAMP): Remove define.
(i386bsd_in_sigtramp): Remove prototype.
(i386bsd_sigtramp_start, i386bsd_sigtramp_end): Turn into a
function.  Update comment accordingly
(SIGTRAMP_START, SIGTRAMP): Adjust definition accordingly.
(FRAME_SAVED_PC): Remove define.
(i386bsd_frame_saved_pc): Remove prototype.
* config/i386/tm-nbsdaout.h (i386nbsd_aout_use_struct_convention):
Remove prototype.
(USE_STRUCT_CONVENTION): Remove prototype.
* i386bsd-nat.c (i386bsd_sigcontext_pc_offset): Remove
declaration.
(_initialize_i386bsd_nat): Revise logic to determine some
constants at compile time when compiling a native GDB.  Warn if
things don't match up with what we expect.
* i386bsd-tdep.c (i386bsd_sigtramp_start, i386bsd_sigtramp_end):
Remove variables.
(i386bsd_in_sigtramp): Rename tp i386bsd_pc_in_sigtramp.  Rewrite
to use date stored in `struct gdbarch_tdep'.
(i386bsd_sigcontext_offset): Remove varaible.
(i386bsd_sigtramp_saved_pc): Make public.  Rewrite to use data
stored in `struct gdbarch_tdep'.
(i386bsd_frame_saved_pc): Make static.
(i386bsd_sigtramp_start, i386bsd_sigtramp_end): New functions.
(i386bsd_sc_pc_offset, i386nbsd_sc_pc_offset,
i386fbsd_sigtramp_start, i386fbsd_sigtramp_end,
i386fbsd4_sc_pc_offset): New variables.
(i386bsd_init_abi, i386nbsd_init_abi, i386nbsdelf_init_abi,
i386fbsdaout_init_abi, i386fbsd_init_abi, i386fbsd4_init_abi): New
functions.
(i386bsd_aout_osabi_sniffer, _initialize_i386bsd_tdep): New
functions.
* i386fbsd-nat.c (_initialize_i386fbsd_nat): Fix type in comment.
Modify the value of i386fbsd_sigtramp_start and
i386fbsd_sigtramp_end instead of i386bsd_sigtramp_start and
i386fbsd_sigtramp_end.
* i386nbsd-tdep.c: (i386nbsd_aout_use_struct_convention): Remove
function.

* config/i386/tm-linux.h (I386_LINUX_ORIG_EAX_REGNUM): Move
define to i386-linux-tdep.h.
(NUM_REGS, MAX_NUM_REGS, REGISTER_BYTES, REGISTER_NAME,
REGISTER_BYTE, REGISTER_RAW_SIZE, STAB_REG_TO_REGNUM): Remove
defines.
(i386_linux_register_name, i386_linux_register_byte,
i386_linux_register_raw_size): Remove prototypes.
(i386_linux_svr4_fetch_link_map_offsets): Remove prototype.
(SVR4_FETCH_LINK_MAP_OFFSETS): Remove define.
(IN_SIGTRAMP, FRAME_CHAIN, FRAME_SAVED_PC, SAVED_PC_AFTER_CALL,
TARGET_WRITE_PC): Remove defines.
(i386_linux_in_sigtramp, i386_linux_frame_chain,
i386_linux_frame_saved_pc, i386_linux_saved_pc_after_call,
i386_linux_write_pc): Remove prototypes.
(JB_ELEMENT_SIZE, JB_PC, GET_LONGJMP_TARGET): Remove defines.
(get_longjmp_target): Remove prototype.
* i386-linux-tdep.h: New file.
* i386-linux-nat.c: Include "i386-linux-tdep.h".
* i386-linux-tdep.c: Include "i386-tdep.h" and
"i386-linux-tdep.h".
(i386_linux_register_name, i386_linux_register_byte,
i386_linux_register_raw_size, i386_linux_in_sigtramp,
i386_linux_write_pc, i386_linux_svr4_fetch_link_map_offsets):
Make static.
(i386_linux_init_abi): New function.
(_initialize_i386_linux_tdep): New function.

* config/i386/tm-i386.h (SAVED_PC_AFTER_CALL): Remove define.
(i386_saved_pc_after_call): Remove prototype.
(MAX_NUM_REGS): Increase to deal with Linux's orig_eax "register".
(REGISTER_NAME, STAB_REG_TO_REGNUM, SDB_REG_TO_REGNUM,
DWARF_REG_TO_REGNUM, DWARF2_REG_TO_REGNUM): Remove defines.
(i386_register_name, i386_stab_reg_to_regnum,
i386_dwarf_reg_to_regnum): Remove prototypes.
(SIZEOF_GREGS, SIZEOF_FPU_REGS, SIZEOF_FPU_CTL_REGS,
SIZEOF_SSE_REGS): Remove defines.
(REGISTER_BYTES): Remove define.
(REGISTER_BYTE, REGISTER_RAW_SIZE): Remove defines.
(i386_register_byte, i386_register_raw_size): Remove prototypes.
(FRAME_CHAIN, FRAME_SAVED_PC): Remove defines.
(i386_frame_chain, i386_frame_saved_pc): Remove prototypes.
* config/i386/tm-i386v4.h (FRAME_CHAIN_VALID): Remove define.
(JB_ELEMENT_SIZE, JB_PC, JB_EBX, JB_ESI, JB_EDI, JB_EBP, JB_ESP,
JB_EDX, GET_LONGJMP_TARGET): Remove defines.
(get_longjmp_target): Remove prototype.
(I386V4_SIGTRAMP_SAVED_PC, IN_SIGTRAMP): Remove defines.
(sigtramp_saved_pc): Remove define.
(i386v4_sigtramp_saved_pc): Remove prototype.
* config/i386/tm-go32.h (FRAME_CHAIN,
FRAMELESS_FUNCTION_INVOCATION, FRAME_SAVED_PC): Remove defines.
(i386go32_frame_saved_pc): Remove prototype.
(JB_ELEMENT_SIZE, JB_PC, GET_LONGJMP_TARGET): Remove defines.
(get_longjmp_target): Remove prototype.
* i386-tdep.h: Include "osabi.h".
(enum i386_abi): Removed.
(enum struct_return): New enum.
(struct gdbarch_tdep): Remove abi member, add osabi, jb_pc_offset,
struct_return, sigtramp_saved_pc, sigtramp_start, sigtramp_end and
sc_pc_offset members.
(i386_gdbarch_register_os_abi): Remove prototype.
(I386_NUM_GREGS, I386_NUM_FREGS, I386_NUM_XREGS,
I386_SSE_NUM_REGS): New defines.
(I386_SIZEOF_GREGS, I386_SIZEOF_FREGS, I386_SIZEOF_XREGS,
I386_SSE_SIZEOF_REGS): New defines.
(i386_register_name, i386_register_byte, i386_register_raw_size):
New prototypes.
(i386_elf_init_abi, i386_svr4_init_abi): New prototypes.
(i386bsd_sigtramp_saved_pc): New prototype.
* i386-tdep.c: Don't include "elf-bfd.h".
(i386_stab_reg_to_regnum, i386_dwarf_reg_to_regnum,
i386_frame_chain, i386_saved_pc_after_call): Make static.
(i386_frame_saved_pc): Rewrite to call architecture dependent
function to deal with signal handlers.  Make static.
(i386go32_frame_saved_pc): Removed.
[GET_LONGJMP_TARGET] (JB_PC, JB_ELEMENT_SIZE, get_longjmp_target):
Removed.
(i386_get_longjmp_target): New function.
(default_struct_convention, pcc_struct_convention,
reg_struct_convention, valid_conventions, struct_convention): New
variables.
(i386_use_struct_convention): New function.
(i386v4_sigtramp_saved_pc): Renamed to
i386_svr4_sigtramp_saved_pc.  Made static.  Moved.
(i386_pc_in_sigtramp): New function.
(i386_abi_names): Removed.
(ABI_TAG_OS_GNU_LINUX, ABI_TAG_OS_GNU_HURD,
ABI_TAG_OS_GNU_SOLARIS, ABI_TAG_OS_FREEBSD, ABI_TAG_OS_NETBSD):
Removed.
(process_note_sections, i386_elf_abi_from_note, i386_elf_abi,
i386_gdbarch_register_os_abi): Removed.
(struct i386_abi_handler): Removed.
(i386_abi_handler_list): Removed.
(i386_svr4_pc_in_sigtramp, i386_go32_pc_in_sigtramp): New
functions.
(i386_elf_init_abi, i386_svr4_init_abi, i386_go32_init_abi,
i386_nw_init_abi): New functions.
(i386_gdbarch_init): Rewritten to use generic OS ABI framework.
Use set_gdbarch_xxx() calls instead of relying on macros for a
number of calls.
(i386_coff_osabi_sniffer, i386_nlm_osabi_sniffer): New functions.
(_initialize_i386_tdep): Add new 'struct-convcention' command.
Register the various architecture variants defined in this file.
@
text
@d46 1
d129 1
a129 1
  for (i = 0; i < NUM_GREGS; i++)
d147 1
a147 1
  for (i = 0; i < NUM_GREGS; i++)
@


1.12
log
@* Makefile.in (ALLDEPFILES): Remove i387-nat.c.
(i387-nat.o): Delete dependency list.
(go32-nat.o): Change i387-nat.h to i387-tdep.h.
(x86-64-linux-nat.o): Likewise.
* i387-nat.c: Delete file, moving contents to...
* i387-tdep.c: ...here.
* i387-nat.h: Rename...
* i387-tdep.h: ...to this.
* go32-nat.c: Include i387-tdep.h instead of i387-nat.h.
* i386-linux-nat.c: Likewise.
* i386bsd-nat.c: Likewise.
* i386gnu-nat.c: Likewise.
* i386nbsd-nat.c: Likewise.
* i386v4-nat.c: Likewise.
* x86-64-linux-nat.c: Likewise.
* config/i386/fbsd.mh (NATDEPFILES): Remove i387-nat.o.
* config/i386/go32.mh (NATDEPFILES): Likewise.
* config/i386/i386gnu.mh (NATDEPFILES): Likewise.
* config/i386/i386sol2.mh (NATDEPFILES): Likewise.
* config/i386/i386v42mp.mh (NATDEPFILES): Likewise.
* config/i386/linux.mh (NATDEPFILES): Likewise.
* config/i386/nbsd.mh (NATDEPFILES): Likewise.
* config/i386/nbsdelf.mh (NATDEPFILES): Likewise.
* config/i386/obsd.mh (NATDEPFILES): Likewise.
* config/i386/x86-64linux.mh (NATDEPFILES): Likewise.
@
text
@a384 3
/* See i386bsd-tdep.c.  */
extern int i386bsd_sigcontext_pc_offset;

d388 2
d396 11
d409 11
a419 1
  i386bsd_sigcontext_pc_offset = offsetof (struct sigcontext, sc_pc);
@


1.12.4.1
log
@Merge with mainline, kseitz_interps-20020619-merge.
@
text
@a45 1
#include "i386-tdep.h"
d128 1
a128 1
  for (i = 0; i < I386_NUM_GREGS; i++)
d146 1
a146 1
  for (i = 0; i < I386_NUM_GREGS; i++)
d385 3
a390 2
  int sc_pc_offset;

a396 11
#if defined (__FreeBSD_version) && __FreeBSD_version >= 400011
  extern int i386fbsd4_sc_pc_offset;
#define SC_PC_OFFSET i386fbsd4_sc_pc_offset
#elif defined (NetBSD) || defined (__NetBSD_Version__)
  extern int i386nbsd_sc_pc_offset;
#define SC_PC_OFFSET i386nbsd_sc_pc_offset
#else
  extern int i386bsd_sc_pc_offset;
#define SC_PC_OFFSET i386bsd_sc_pc_offset
#endif

d399 1
a399 11
  sc_pc_offset = offsetof (struct sigcontext, sc_pc);

  if (SC_PC_OFFSET != sc_pc_offset)
    {
      warning ("\
offsetof (struct sigcontext, sc_pc) yields %d instead of %d.\n\
Please report this to <bug-gdb@@gnu.org>.",
	       sc_pc_offset, SC_PC_OFFSET);
    }

  SC_PC_OFFSET = sc_pc_offset;
@


1.12.4.2
log
@Merge w/trunk (kseitz_interps-20020722-merge).
@
text
@a389 1
  int sc_sp_offset;
a398 1
  extern int i386fbsd4_sc_sp_offset;
d400 1
a400 2
#define SC_SP_OFFSET i386fbsd4_sc_sp_offset
#elif defined (NetBSD) || defined (__NetBSD_Version__) || defined (OpenBSD)
a401 1
  extern int i386nbsd_sc_sp_offset;
a402 1
#define SC_SP_OFFSET i386nbsd_sc_sp_offset
a404 1
  extern int i386bsd_sc_sp_offset;
a405 1
#define SC_SP_OFFSET i386bsd_sc_sp_offset
a420 13

  /* Likewise for the stack pointer.  */
  sc_sp_offset = offsetof (struct sigcontext, sc_sp);

  if (SC_SP_OFFSET != sc_sp_offset)
    {
      warning ("\
offsetof (struct sigcontext, sc_sp) yields %d instead of %d.\n\
Please report this to <bug-gdb@@gnu.org>.",
	       sc_sp_offset, SC_SP_OFFSET);
    }

  SC_SP_OFFSET = sc_sp_offset;
@


1.12.4.3
log
@merge from mainline
@
text
@d309 1
a309 1
  DBREG_DRX ((&dbregs), 7) &= ~(0x0000fc00);
d358 1
a358 1
  return DBREG_DRX ((&dbregs), 6);
d403 1
a403 1
#elif defined (NetBSD) || defined (__NetBSD_Version__)
a407 5
#elif defined (OpenBSD)
  extern int i386obsd_sc_pc_offset;
  extern int i386obsd_sc_sp_offset;
#define SC_PC_OFFSET i386obsd_sc_pc_offset
#define SC_SP_OFFSET i386obsd_sc_sp_offset
@


1.12.2.1
log
@merge from trunk
@
text
@d385 3
a390 2
  int sc_pc_offset;

a396 11
#if defined (__FreeBSD_version) && __FreeBSD_version >= 400011
  extern int i386fbsd4_sc_pc_offset;
#define SC_PC_OFFSET i386fbsd4_sc_pc_offset
#elif defined (NetBSD) || defined (__NetBSD_Version__)
  extern int i386nbsd_sc_pc_offset;
#define SC_PC_OFFSET i386nbsd_sc_pc_offset
#else
  extern int i386bsd_sc_pc_offset;
#define SC_PC_OFFSET i386bsd_sc_pc_offset
#endif

d399 1
a399 11
  sc_pc_offset = offsetof (struct sigcontext, sc_pc);

  if (SC_PC_OFFSET != sc_pc_offset)
    {
      warning ("\
offsetof (struct sigcontext, sc_pc) yields %d instead of %d.\n\
Please report this to <bug-gdb@@gnu.org>.",
	       sc_pc_offset, SC_PC_OFFSET);
    }

  SC_PC_OFFSET = sc_pc_offset;
@


1.12.2.2
log
@Merge with trunk.
@
text
@a45 1
#include "i386-tdep.h"
d128 1
a128 1
  for (i = 0; i < I386_NUM_GREGS; i++)
d146 1
a146 1
  for (i = 0; i < I386_NUM_GREGS; i++)
@


1.12.2.3
log
@merge with trunk.
@
text
@a389 1
  int sc_sp_offset;
a398 1
  extern int i386fbsd4_sc_sp_offset;
d400 1
a400 2
#define SC_SP_OFFSET i386fbsd4_sc_sp_offset
#elif defined (NetBSD) || defined (__NetBSD_Version__) || defined (OpenBSD)
a401 1
  extern int i386nbsd_sc_sp_offset;
a402 1
#define SC_SP_OFFSET i386nbsd_sc_sp_offset
a404 1
  extern int i386bsd_sc_sp_offset;
a405 1
#define SC_SP_OFFSET i386bsd_sc_sp_offset
a420 13

  /* Likewise for the stack pointer.  */
  sc_sp_offset = offsetof (struct sigcontext, sc_sp);

  if (SC_SP_OFFSET != sc_sp_offset)
    {
      warning ("\
offsetof (struct sigcontext, sc_sp) yields %d instead of %d.\n\
Please report this to <bug-gdb@@gnu.org>.",
	       sc_sp_offset, SC_SP_OFFSET);
    }

  SC_SP_OFFSET = sc_sp_offset;
@


1.11
log
@* acconfig.h (HAVE_PT_GETXMMREGS): New.
* config.in: Regenerate.
* configure.in: Update copyright years.
Add test for PT_GETXMMREGS supplied by <sys/ptrace.h>.
* configure: Regenerate.
* i386bsd-nat.c: Update copyright years.
(fill_gregset): Use regcache_collect.
(fetch_inferior_registers): Only fetch integer registers
if requested to do so.  Add support for XMM registers
using PT_GETXMMREGS.
(store_inferior_registers): Only store integer registers
if requested to do so.  Add support for XMM registers
using PT_SETXMMREGS.
* i386nbsd-nat.c (fetch_inferior_registers): Remove.
(store_inferior_registers): Remove.
(fetch_core_registers): Use supply_gregset and i387_supply_fsave.
(fetch_elfcore_registers): New function.
(i386nbsd_elfcore_fns): New.
(_initialize_i386nbsd_nat): Register i386nbsd_elfcore_fns.
* config/i386/nbsd.mh (NATDEPFILES): Add i387-nat.o and
i386bsd-nat.o.
* config/i386/nbsdelf.mh (NATDEPFILES): Likewise.
* config/i386/nbsd.mt (TDEPFILES): Add i386bsd-nat.o.
* config/i386/nbsdelf.mt (TDEPFILES): Likewise.
* config/i386/tm-nbsd.h: Update copyright years.
(HAVE_SSE_REGS): Define.
(IN_SIGTRAMP): Define as i386bsd_in_sigtramp.
(SIGTRAMP_START): Redefine as i386bsd_sigtramp_start.
(SIGTRAMP_END): Redefine as i386bsd_sigtramp_end.
(SIGCONTEXT_PC_OFFSET): Remove.
(FRAME_SAVED_PC): Define as i386bsd_frame_saved_pc.
@
text
@d151 1
a151 1
#include "i387-nat.h"
@


1.10
log
@* i386bsd-nat.c (reg_offset): Fix typo.
@
text
@d2 1
a2 1
   Copyright 2000, 2001 Free Software Foundation, Inc.
d99 10
d148 1
a148 2
      memcpy (REG_ADDR (gregsetp, i), &registers[REGISTER_BYTE (i)],
	      REGISTER_RAW_SIZE (i));
a177 1
  gregset_t gregs;
d179 3
a181 3
  if (ptrace (PT_GETREGS, PIDGET (inferior_ptid),
              (PTRACE_ARG3_TYPE) &gregs, 0) == -1)
    perror_with_name ("Couldn't get registers");
d183 8
a190 1
  supply_gregset (&gregs);
d195 15
d211 3
d219 1
a228 1
  gregset_t gregs;
d230 7
a236 3
  if (ptrace (PT_GETREGS, PIDGET (inferior_ptid),
              (PTRACE_ARG3_TYPE) &gregs, 0) == -1)
    perror_with_name ("Couldn't get registers");
d238 1
a238 1
  fill_gregset (&gregs, regno);
d240 7
a246 3
  if (ptrace (PT_SETREGS, PIDGET (inferior_ptid),
	      (PTRACE_ARG3_TYPE) &gregs, 0) == -1)
    perror_with_name ("Couldn't write registers");
d251 2
d254 19
a272 3
      if (ptrace (PT_GETFPREGS, PIDGET (inferior_ptid),
		  (PTRACE_ARG3_TYPE) &fpregs, 0) == -1)
	perror_with_name ("Couldn't get floating point status");
d274 1
a274 1
      fill_fpregset (&fpregs, regno);
d276 6
a281 3
      if (ptrace (PT_SETFPREGS, PIDGET (inferior_ptid),
		  (PTRACE_ARG3_TYPE) &fpregs, 0) == -1)
	perror_with_name ("Couldn't write floating point status");
@


1.9
log
@* i386bsd-nat.c: Do not include <sys/sysctl.h>.
(_initialize_i386bsd_nat) [KERN_PS_STRINGS]: Move FreeBSD-specific
code to ...
* i386fbsd-nat.c: ... here.  New file.
* config/i386/fbsd.mh (NATDEPFILES): Add i386-fbsd.o.
* config/i386/nm-fbsd.h (CHILD_RESUME): Define.
* Makefile.in (ALLDEPFILES): Add i386fbsd-nat.c.
(i386fbsd-nat.o): Add dependencies.
@
text
@d74 1
a74 1
  REG_OFFSET (r_edx),
@


1.8
log
@* i386bsd-nat.c: Include <signal.h>, <stddef.h> and
<sys/sysctl.h>.
(store_inferior_registers): Wrap long line.
(i386bsd_dr_get_status): Fix typo in comment.
(_initialize_i386bsd_nat): New function.  * i386bsd-tdep.c: New
file.  * config/i386/tm-fbsd.h (IN_SIGTRAMP): New define.
(i386bsd_in_sigtramp): New prototype.
(SIGTRAMP_START, SIGTRAMP_END): Redefine in terms...
(i386bsd_sigtramp_start, i386bsd_sigtramp_end): ...these new
(external) variables.
(SIGCONTEXT_PC_OFFSET): Removed.
(FRAME_SAVED_PC): New define.
(i386bsd_frame_saved_pc): New function.  * config/i386/fbsd.mt
(TDEPFILES): Add i386bsd-tdep.o.
@
text
@a325 2
#include <sys/sysctl.h>

a337 23

  /* FreeBSD provides a kern.ps_strings sysctl that we can use to
     locate the sigtramp.  That way we can still recognize a sigtramp
     if it's location is changed in a new kernel.  Of course this is
     still based on the assumption that the sigtramp is placed
     directly under the location where the program arguments and
     environment can be found.  */
#ifdef KERN_PS_STRINGS
  {
    int mib[2];
    int ps_strings;
    size_t len;

    mib[0] = CTL_KERN;
    mib[1] = KERN_PS_STRINGS;
    len = sizeof (ps_strings);
    if (sysctl (mib, 2, &ps_strings, &len, NULL, 0) == 0)
      {
	i386bsd_sigtramp_start = ps_strings - 128;
	i386bsd_sigtramp_end = ps_strings;
      }
  }
#endif
@


1.7
log
@Phase 1 of the ptid_t changes.
@
text
@d26 2
d203 2
a204 1
  if (ptrace (PT_SETREGS, PIDGET (inferior_ptid), (PTRACE_ARG3_TYPE) &gregs, 0) == -1)
d285 1
a285 1
     stuff to the target vectore.  For now, just return zero if the
d321 42
@


1.6
log
@* i386bsd-nat.c: Include "gdb_assert.h".
[HAVE_PT_GETDBREGS] (DBREG_DRX): Define if not
already defined.
[HAVE_PT_GETDBREGS] (i386bsd_dr_set, i386bsd_dr_set_control,
i386bsd_dr_set_addr, i386bsd_dr_reset_addr,
i386bsd_dr_get_status): New functions.
* config/i386/nm-fbsd.h [HAVE_PT_GETDBREGS]
(I386_USE_GENERIC_WATCHPOINTS): Define.
Include "i386/nm-i386.h".
(I386_DR_LOW_SET_CONTROL, I386_DR_LOW_SET_ADDR,
I386_DR_LOW_RESET_ADDR, I386_DR_LOW_GET_STATUS): New macros.
(i386bsd_dr_set_control, i386bsd_dr_set_addr,
i386bsd_dr_reset_addr, i386bsd_dr_get_status): New prototypes.
* acconfig.h (HAVE_PT_GETDBREGS): New configure macro.
* configure.in: Cleanup a few comments.  Check for PT_GETDBREGS
ptrace request.
* config.in, configure: Regenerate.
@
text
@d169 2
a170 1
  if (ptrace (PT_GETREGS, inferior_pid, (PTRACE_ARG3_TYPE) &gregs, 0) == -1)
d179 1
a179 1
      if (ptrace (PT_GETFPREGS, inferior_pid,
d195 2
a196 1
  if (ptrace (PT_GETREGS, inferior_pid, (PTRACE_ARG3_TYPE) &gregs, 0) == -1)
d201 1
a201 1
  if (ptrace (PT_SETREGS, inferior_pid, (PTRACE_ARG3_TYPE) &gregs, 0) == -1)
d208 1
a208 1
      if (ptrace (PT_GETFPREGS, inferior_pid,
d214 1
a214 1
      if (ptrace (PT_SETFPREGS, inferior_pid,
d236 2
a237 1
  if (ptrace (PT_GETDBREGS, inferior_pid, (PTRACE_ARG3_TYPE) &dbregs, 0) == -1)
d247 2
a248 1
  if (ptrace (PT_SETDBREGS, inferior_pid, (PTRACE_ARG3_TYPE) &dbregs, 0) == -1)
d284 2
a285 1
  if (ptrace (PT_GETDBREGS, inferior_pid, (PTRACE_ARG3_TYPE) &dbregs, 0) == -1)
@


1.5
log
@Create new file regcache.h.  Update all uses.
@
text
@d25 1
d217 74
@


1.4
log
@* alphabsd-nat.c, i386-linux-nat.c, i386bsd-nat.c: Fix typo in comment.
@
text
@d2 1
a2 1
   Copyright (C) 2000 Free Software Foundation, Inc.
d23 1
@


1.3
log
@* acconfig.h, configure.in, i386bsd.c (HAVE_STRUCT_REG_R_FS):
Renamed from HAVE_R_FS.
(HAVE_STRUCT_REG_GS): Renamed from HAVE_R_GS.
* configure, config.in: Regenerated.
@
text
@d106 1
a106 1
/* Fill GDB's register array with the genereal-purpose register values
@


1.2
log
@* i386bsd-nat.c: Include "gregset.h".
(CANNOT_STORE_REGISTER): Define to cannot_fetch_register instead
of CANNOT_FETCH_REGISTER, if not already defined.
(supply_gregset): Call supply_register with NULL as its second
argument instead of supplying our own zeroed out buffer.
(fill_gregset): Copy contents of correct registers instead of the
contents of register REGNO.
@
text
@d81 1
a81 1
#ifdef HAVE_R_FS
d86 1
a86 1
#ifdef HAVE_R_GS
@


1.1
log
@Add support for FreeBSD/i386 ELF.
* i386bsd-nat.c: New file.
* config/i386/tm-fbsd.h (HAVE_I387_REGS): Define.
Include "i386/tm-i386.h" instead of "i386/tm-i386b.h".
(NUM_REGS): Remove redefinition.
(USE_STRUCT_CONVENTION): Define.
(i386_float_info): Remove prototype.
(FLOAT_INFO): Remove define.
(JB_ELEMENT_SIZE): Define to 4.
(JB_PC): Define to 0.
(GET_LONGJMP_TARGET): Define.
(SIGTRAMP_START, SIGTRAMP_END): Define.
(SIGCONTEXT_PC_OFFSET): Define.
(IN_SOLIB_CALL_TRAMPOLINE): Only define if !SVR4_SHARED_LIBS
* config/i386/nm-fbsd.h (PTRACE_ARG3_TYPE): Define to caddr_t.
(FETCH_INFERIOR_REGISTERS): Define.
(ATTACH_DETACH): Define.
(kernel_u_size): Remove PARAMS.
(register_u_addr): Use CORE_ADDR in prototype where appropriate.
Remove PARAMS.
(SVR4_SHARED_LIBS) [FREEBSD_ELF || __ELF__ && !FREEBSD_AOUT]:
Define.
[SVR4_SHARED_LIBS]: Include "elf/common.h".
Only define aliases for struct members from <link.h> if
!SVR4_SHARED_LIBS.
* config/i386/xm-fbsd.h: New file.
* config/i386/fbsd.mt (TDEPFILES): Remove solib.o.
* config/i386/fbsd.mh (NATDEPFILES): Remove i386b-nat.o.  Add
core-regset.o i387-nat.o i386bsd-nat.o.
@
text
@d41 3
d56 1
a56 1
#define CANNOT_STORE_REGISTER(regno) CANNOT_FETCH_REGISTER (regno)
a111 1
  char buf[MAX_REGISTER_RAW_SIZE];
d117 1
a117 4
	{
	  memset (buf, 0, REGISTER_RAW_SIZE (i));
	  supply_register (i, buf);
	}
d134 1
a134 1
      memcpy (REG_ADDR (gregsetp, i), &registers[REGISTER_BYTE (regno)],
d182 1
a182 1
}  
@

