head	1.5;
access;
symbols
	gdb_5_1_1-2002-01-24-release:1.4
	gdb_5_1_0_1-2002-01-03-release:1.4
	gdb_5_1_0_1-2002-01-03-branchpoint:1.4
	gdb_5_1_0_1-2002-01-03-branch:1.4.0.8
	gdb_5_1-2001-11-21-release:1.4
	gdb_s390-2001-09-26-branch:1.4.0.6
	gdb_s390-2001-09-26-branchpoint:1.4
	gdb_5_1-2001-07-29-branch:1.4.0.4
	gdb_5_1-2001-07-29-branchpoint:1.4
	dberlin-typesystem-branch:1.4.0.2
	dberlin-typesystem-branchpoint:1.4
	gdb-post-ptid_t-2001-05-03:1.4
	gdb-pre-ptid_t-2001-05-03:1.4
	insight-precleanup-2001-01-01:1.2
	gdb-post-protoization-2000-07-29:1.2
	gdb-pre-protoization-2000-07-29:1.1.1.2
	gdb-premipsmulti-2000-06-06-branch:1.1.1.2.0.4
	gdb-premipsmulti-2000-06-06-branchpoint:1.1.1.2
	gdb-post-params-removal-2000-06-04:1.1.1.2
	gdb-pre-params-removal-2000-06-04:1.1.1.2
	gdb-post-params-removal-2000-05-28:1.1.1.2
	gdb-pre-params-removal-2000-05-28:1.1.1.2
	gdb_5_0-2000-05-19-release:1.1.1.2
	gdb_4_18_2-2000-05-18-release:1.1.1.2
	gdb_4_95_1-2000-05-11-snapshot:1.1.1.2
	gdb_4_95_0-2000-04-27-snapshot:1.1.1.2
	gdb_5_0-2000-04-10-branch:1.1.1.2.0.2
	gdb_5_0-2000-04-10-branchpoint:1.1.1.2
	repo-unification-2000-02-06:1.1.1.2
	insight-2000-02-04:1.1.1.2
	gdb-2000-02-04:1.1.1.2
	gdb-2000-02-02:1.1.1.2
	gdb-2000-02-01:1.1.1.2
	gdb-2000-01-31:1.1.1.2
	gdb-2000-01-26:1.1.1.2
	gdb-2000-01-24:1.1.1.2
	gdb-2000-01-17:1.1.1.2
	gdb-2000-01-10:1.1.1.2
	gdb-2000-01-05:1.1.1.2
	gdb-1999-12-21:1.1.1.2
	gdb-1999-12-13:1.1.1.2
	gdb-1999-12-07:1.1.1.2
	gdb-1999-12-06:1.1.1.2
	gdb-1999-11-16:1.1.1.2
	gdb-1999-11-08:1.1.1.2
	gdb-1999-11-01:1.1.1.2
	gdb-1999-10-25:1.1.1.2
	gdb-1999-10-18:1.1.1.2
	gdb-1999-10-11:1.1.1.2
	gdb-1999-10-04:1.1.1.2
	gdb-1999-09-28:1.1.1.2
	gdb-1999-09-21:1.1.1.2
	gdb-1999-09-13:1.1.1.2
	gdb-1999-09-08:1.1.1.2
	gdb-1999-08-30:1.1.1.2
	gdb-1999-08-23:1.1.1.2
	gdb-1999-08-16:1.1.1.2
	gdb-1999-08-09:1.1.1.2
	gdb-1999-08-02:1.1.1.2
	gdb-1999-07-26:1.1.1.2
	gdb-1999-07-19:1.1.1.2
	gdb-1999-07-12:1.1.1.2
	gdb-post-reformat-19990707:1.1.1.2
	gdb-1999-07-07-post-reformat-snapshot:1.1.1.2
	gdb-pre-reformat-19990707:1.1.1.1
	gdb-1999-07-07:1.1.1.1
	gdb-1999-07-05:1.1.1.1
	gdb-1999-06-28:1.1.1.1
	gdb-1999-06-21:1.1.1.1
	gdb-1999-06-14:1.1.1.1
	gdb-1999-06-07:1.1.1.1
	gdb-1999-06-01:1.1.1.1
	gdb-4_18-branch:1.1.1.1.0.2
	gdb-4_18-release:1.1.1.1
	gdb-1999-05-25:1.1.1.1
	gdb-1999-05-19:1.1.1.1
	gdb-1999-05-10:1.1.1.1
	gdb-19990504:1.1.1.1
	gdb-19990422:1.1.1.1
	SNAPSHOT:1.1.1
	gdb-4_18:1.1.1.1
	GDB_4_18:1.1.1;
locks; strict;
comment	@ * @;
expand	@o@;


1.5
date	2001.12.01.22.02.02;	author cagney;	state dead;
branches;
next	1.4;

1.4
date	2001.04.05.14.49.29;	author cagney;	state Exp;
branches;
next	1.3;

1.3
date	2001.03.06.08.21.18;	author kevinb;	state Exp;
branches;
next	1.2;

1.2
date	2000.07.30.01.48.27;	author kevinb;	state Exp;
branches;
next	1.1;

1.1
date	99.04.16.01.34.07;	author shebs;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.04.16.01.34.07;	author shebs;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	99.07.07.20.10.54;	author jsm;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Zap all but ns32k-netbsd NS32k targets and hosts.
@
text
@/* OBSOLETE /* Host-dependent code for GDB, for NYU Ultra3 running Sym1 OS. */
/* OBSOLETE    Copyright 1988, 1989, 1991, 1992, 1993, 1995, 2000 */
/* OBSOLETE    Free Software Foundation, Inc. */
/* OBSOLETE    Contributed by David Wood (wood@@nyu.edu) at New York University. */
/* OBSOLETE  */
/* OBSOLETE    This file is part of GDB. */
/* OBSOLETE  */
/* OBSOLETE    This program is free software; you can redistribute it and/or modify */
/* OBSOLETE    it under the terms of the GNU General Public License as published by */
/* OBSOLETE    the Free Software Foundation; either version 2 of the License, or */
/* OBSOLETE    (at your option) any later version. */
/* OBSOLETE  */
/* OBSOLETE    This program is distributed in the hope that it will be useful, */
/* OBSOLETE    but WITHOUT ANY WARRANTY; without even the implied warranty of */
/* OBSOLETE    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the */
/* OBSOLETE    GNU General Public License for more details. */
/* OBSOLETE  */
/* OBSOLETE    You should have received a copy of the GNU General Public License */
/* OBSOLETE    along with this program; if not, write to the Free Software */
/* OBSOLETE    Foundation, Inc., 59 Temple Place - Suite 330, */
/* OBSOLETE    Boston, MA 02111-1307, USA.  */ */
/* OBSOLETE  */
/* OBSOLETE #define DEBUG */
/* OBSOLETE #include "defs.h" */
/* OBSOLETE #include "frame.h" */
/* OBSOLETE #include "inferior.h" */
/* OBSOLETE #include "symtab.h" */
/* OBSOLETE #include "value.h" */
/* OBSOLETE  */
/* OBSOLETE #include <sys/types.h> */
/* OBSOLETE #include <sys/param.h> */
/* OBSOLETE #include <signal.h> */
/* OBSOLETE #include <sys/ioctl.h> */
/* OBSOLETE #include <fcntl.h> */
/* OBSOLETE  */
/* OBSOLETE #include "gdbcore.h" */
/* OBSOLETE  */
/* OBSOLETE #include <sys/file.h> */
/* OBSOLETE #include "gdb_stat.h" */
/* OBSOLETE  */
/* OBSOLETE /* Assorted operating system circumventions */ */
/* OBSOLETE  */
/* OBSOLETE #ifdef SYM1 */
/* OBSOLETE  */
/* OBSOLETE /* FIXME: Kludge this for now. It really should be system call. */ */
/* OBSOLETE int */
/* OBSOLETE getpagesize (void) */
/* OBSOLETE { */
/* OBSOLETE   return (8192); */
/* OBSOLETE } */
/* OBSOLETE  */
/* OBSOLETE /* FIXME: Fake out the fcntl() call, which we don't have.  */ */
/* OBSOLETE fcntl (int fd, int cmd, int arg) */
/* OBSOLETE { */
/* OBSOLETE  */
/* OBSOLETE   switch (cmd) */
/* OBSOLETE     { */
/* OBSOLETE     case F_GETFL: */
/* OBSOLETE       return (O_RDONLY); */
/* OBSOLETE       break; */
/* OBSOLETE     default: */
/* OBSOLETE       printf_unfiltered ("Ultra3's fcntl() failing, cmd = %d.\n", cmd); */
/* OBSOLETE       return (-1); */
/* OBSOLETE     } */
/* OBSOLETE } */
/* OBSOLETE  */
/* OBSOLETE  */
/* OBSOLETE /*  */
/* OBSOLETE  * 4.2 Signal support, requires linking with libjobs. */
/* OBSOLETE  */ */
/* OBSOLETE static int _SigMask; */
/* OBSOLETE #define sigbit(s)       (1L << ((s)-1)) */
/* OBSOLETE  */
/* OBSOLETE init_SigMask (void) */
/* OBSOLETE { */
/* OBSOLETE   /* Taken from the sym1 kernel in machdep.c:startup() */ */
/* OBSOLETE   _SigMask = sigbit (SIGTSTP) | sigbit (SIGTTOU) | sigbit (SIGTTIN) | */
/* OBSOLETE     sigbit (SIGCHLD) | sigbit (SIGTINT); */
/* OBSOLETE } */
/* OBSOLETE  */
/* OBSOLETE sigmask (int signo) */
/* OBSOLETE { */
/* OBSOLETE   return (1 << (signo - 1)); */
/* OBSOLETE } */
/* OBSOLETE  */
/* OBSOLETE sigsetmask (unsigned int sigmask) */
/* OBSOLETE { */
/* OBSOLETE   int i, mask = 1; */
/* OBSOLETE   int lastmask = _SigMask; */
/* OBSOLETE  */
/* OBSOLETE   for (i = 0; i < NSIG; i++) */
/* OBSOLETE     { */
/* OBSOLETE       if (sigmask & mask) */
/* OBSOLETE 	{ */
/* OBSOLETE 	  if (!(_SigMask & mask)) */
/* OBSOLETE 	    { */
/* OBSOLETE 	      sighold (i + 1); */
/* OBSOLETE 	      _SigMask |= mask; */
/* OBSOLETE 	    } */
/* OBSOLETE 	} */
/* OBSOLETE       else if (_SigMask & mask) */
/* OBSOLETE 	{ */
/* OBSOLETE 	  sigrelse (i + 1); */
/* OBSOLETE 	  _SigMask &= ~mask; */
/* OBSOLETE 	} */
/* OBSOLETE       mask <<= 1; */
/* OBSOLETE     } */
/* OBSOLETE   return (lastmask); */
/* OBSOLETE } */
/* OBSOLETE  */
/* OBSOLETE sigblock (unsigned int sigmask) */
/* OBSOLETE { */
/* OBSOLETE   int i, mask = 1; */
/* OBSOLETE   int lastmask = _SigMask; */
/* OBSOLETE  */
/* OBSOLETE   for (i = 0; i < NSIG; i++) */
/* OBSOLETE     { */
/* OBSOLETE       if ((sigmask & mask) && !(_SigMask & mask)) */
/* OBSOLETE 	{ */
/* OBSOLETE 	  sighold (i + 1); */
/* OBSOLETE 	  _SigMask |= mask; */
/* OBSOLETE 	} */
/* OBSOLETE       mask <<= 1; */
/* OBSOLETE     } */
/* OBSOLETE   return (lastmask); */
/* OBSOLETE } */
/* OBSOLETE #endif /* SYM1 */ */
/* OBSOLETE  */
/* OBSOLETE  */
/* OBSOLETE /* Initialization code for this module.  */ */
/* OBSOLETE  */
/* OBSOLETE void */
/* OBSOLETE _initialize_ultra3 (void) */
/* OBSOLETE { */
/* OBSOLETE #ifdef SYM1 */
/* OBSOLETE   init_SigMask (); */
/* OBSOLETE #endif */
/* OBSOLETE } */
@


1.4
log
@Obsolete a29k-*-* host and a29k-*-sym1* and a29k-*-kern* targets.
@
text
@@


1.3
log
@Update/correct copyright notices.
@
text
@d1 138
a138 138
/* Host-dependent code for GDB, for NYU Ultra3 running Sym1 OS.
   Copyright 1988, 1989, 1991, 1992, 1993, 1995, 2000
   Free Software Foundation, Inc.
   Contributed by David Wood (wood@@nyu.edu) at New York University.

   This file is part of GDB.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place - Suite 330,
   Boston, MA 02111-1307, USA.  */

#define DEBUG
#include "defs.h"
#include "frame.h"
#include "inferior.h"
#include "symtab.h"
#include "value.h"

#include <sys/types.h>
#include <sys/param.h>
#include <signal.h>
#include <sys/ioctl.h>
#include <fcntl.h>

#include "gdbcore.h"

#include <sys/file.h>
#include "gdb_stat.h"

/* Assorted operating system circumventions */

#ifdef SYM1

/* FIXME: Kludge this for now. It really should be system call. */
int
getpagesize (void)
{
  return (8192);
}

/* FIXME: Fake out the fcntl() call, which we don't have.  */
fcntl (int fd, int cmd, int arg)
{

  switch (cmd)
    {
    case F_GETFL:
      return (O_RDONLY);
      break;
    default:
      printf_unfiltered ("Ultra3's fcntl() failing, cmd = %d.\n", cmd);
      return (-1);
    }
}


/* 
 * 4.2 Signal support, requires linking with libjobs.
 */
static int _SigMask;
#define sigbit(s)       (1L << ((s)-1))

init_SigMask (void)
{
  /* Taken from the sym1 kernel in machdep.c:startup() */
  _SigMask = sigbit (SIGTSTP) | sigbit (SIGTTOU) | sigbit (SIGTTIN) |
    sigbit (SIGCHLD) | sigbit (SIGTINT);
}

sigmask (int signo)
{
  return (1 << (signo - 1));
}

sigsetmask (unsigned int sigmask)
{
  int i, mask = 1;
  int lastmask = _SigMask;

  for (i = 0; i < NSIG; i++)
    {
      if (sigmask & mask)
	{
	  if (!(_SigMask & mask))
	    {
	      sighold (i + 1);
	      _SigMask |= mask;
	    }
	}
      else if (_SigMask & mask)
	{
	  sigrelse (i + 1);
	  _SigMask &= ~mask;
	}
      mask <<= 1;
    }
  return (lastmask);
}

sigblock (unsigned int sigmask)
{
  int i, mask = 1;
  int lastmask = _SigMask;

  for (i = 0; i < NSIG; i++)
    {
      if ((sigmask & mask) && !(_SigMask & mask))
	{
	  sighold (i + 1);
	  _SigMask |= mask;
	}
      mask <<= 1;
    }
  return (lastmask);
}
#endif /* SYM1 */


/* Initialization code for this module.  */

void
_initialize_ultra3 (void)
{
#ifdef SYM1
  init_SigMask ();
#endif
}
@


1.2
log
@Protoization.
@
text
@d2 2
a3 1
   Copyright (C) 1988, 1989, 1991, 1992 Free Software Foundation, Inc.
@


1.1
log
@Initial revision
@
text
@d5 1
a5 1
This file is part of GDB.
d7 14
a20 13
This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
d33 1
a33 1
#include <fcntl.h>  
d46 4
a49 2
getpagesize()
{ return(8192); }
d52 1
a52 2
fcntl(fd, cmd, arg)
int fd, cmd, arg;
d55 9
a63 6
  switch (cmd) {
	case F_GETFL: return(O_RDONLY);	break;
	default:	
		printf_unfiltered("Ultra3's fcntl() failing, cmd = %d.\n",cmd);
		return(-1);
  }
d70 1
a70 1
static int	_SigMask;
d73 1
a73 1
init_SigMask()
d75 3
a77 3
	/* Taken from the sym1 kernel in machdep.c:startup() */
	_SigMask = sigbit (SIGTSTP) | sigbit (SIGTTOU) | sigbit (SIGTTIN) |
                        sigbit (SIGCHLD) | sigbit (SIGTINT);
d80 1
a80 2
sigmask(signo)
	int signo;
d82 1
a82 1
	return (1 << (signo-1));
d85 1
a85 2
sigsetmask(sigmask)
unsigned int sigmask;
d87 2
a88 2
	int i, mask = 1;
	int lastmask = _SigMask;
d90 14
a103 11
	for (i=0 ; i<NSIG ; i++) {
		if (sigmask & mask) { 
			if (!(_SigMask & mask)) {
				sighold(i+1);
				_SigMask |= mask;
			}
		} else if (_SigMask & mask) {
			sigrelse(i+1);
			_SigMask &= ~mask;
		}
		mask <<= 1;
d105 3
a107 1
	return (lastmask);
d110 1
a110 2
sigblock(sigmask)
unsigned int sigmask;
d112 2
a113 2
	int i, mask = 1;
	int lastmask = _SigMask;
d115 6
a120 6
	for (i=0 ; i<NSIG ; i++) {
		if ((sigmask & mask) && !(_SigMask & mask)) {
			sighold(i+1);
			_SigMask |= mask;
		}
		mask <<= 1;
d122 3
a124 1
	return (lastmask);
d132 1
a132 1
_initialize_ultra3 ()
d135 1
a135 1
	init_SigMask();
@


1.1.1.1
log
@Initial creation of sourceware repository
@
text
@@


1.1.1.2
log
@import gdb-1999-07-07 post reformat
@
text
@d5 1
a5 1
   This file is part of GDB.
d7 13
a19 14
   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place - Suite 330,
   Boston, MA 02111-1307, USA.  */
d32 1
a32 1
#include <fcntl.h>
d45 2
a46 4
getpagesize ()
{
  return (8192);
}
d49 2
a50 2
fcntl (fd, cmd, arg)
     int fd, cmd, arg;
d53 6
a58 9
  switch (cmd)
    {
    case F_GETFL:
      return (O_RDONLY);
      break;
    default:
      printf_unfiltered ("Ultra3's fcntl() failing, cmd = %d.\n", cmd);
      return (-1);
    }
d65 1
a65 1
static int _SigMask;
d68 1
a68 1
init_SigMask ()
d70 3
a72 3
  /* Taken from the sym1 kernel in machdep.c:startup() */
  _SigMask = sigbit (SIGTSTP) | sigbit (SIGTTOU) | sigbit (SIGTTIN) |
    sigbit (SIGCHLD) | sigbit (SIGTINT);
d75 2
a76 2
sigmask (signo)
     int signo;
d78 1
a78 1
  return (1 << (signo - 1));
d81 2
a82 2
sigsetmask (sigmask)
     unsigned int sigmask;
d84 2
a85 2
  int i, mask = 1;
  int lastmask = _SigMask;
d87 11
a97 14
  for (i = 0; i < NSIG; i++)
    {
      if (sigmask & mask)
	{
	  if (!(_SigMask & mask))
	    {
	      sighold (i + 1);
	      _SigMask |= mask;
	    }
	}
      else if (_SigMask & mask)
	{
	  sigrelse (i + 1);
	  _SigMask &= ~mask;
d99 1
a99 3
      mask <<= 1;
    }
  return (lastmask);
d102 2
a103 2
sigblock (sigmask)
     unsigned int sigmask;
d105 2
a106 2
  int i, mask = 1;
  int lastmask = _SigMask;
d108 6
a113 6
  for (i = 0; i < NSIG; i++)
    {
      if ((sigmask & mask) && !(_SigMask & mask))
	{
	  sighold (i + 1);
	  _SigMask |= mask;
d115 1
a115 3
      mask <<= 1;
    }
  return (lastmask);
d126 1
a126 1
  init_SigMask ();
@

