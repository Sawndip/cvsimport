head	1.30;
access;
symbols
	arc-sim-20090309:1.29
	arc-insight_6_8-branch:1.29.0.10
	arc-insight_6_8-branchpoint:1.29
	insight_6_8-branch:1.29.0.8
	insight_6_8-branchpoint:1.29
	reverse-20080717-branch:1.29.0.6
	reverse-20080717-branchpoint:1.29
	msnyder-reverse-20080609-branch:1.29.0.4
	msnyder-reverse-20080609-branchpoint:1.29
	drow-reverse-20070409-branch:1.27.0.2
	drow-reverse-20070409-branchpoint:1.27
	gdb_6_8-2008-03-27-release:1.29
	gdb_6_8-branch:1.29.0.2
	gdb_6_8-2008-02-26-branchpoint:1.29
	gdb_6_7_1-2007-10-29-release:1.28
	gdb_6_7-2007-10-10-release:1.28
	gdb_6_7-branch:1.28.0.2
	gdb_6_7-2007-09-07-branchpoint:1.28
	insight_6_6-20070208-release:1.26
	gdb_6_6-2006-12-18-release:1.26
	gdb_6_6-branch:1.26.0.18
	gdb_6_6-2006-11-15-branchpoint:1.26
	insight_6_5-20061003-release:1.26
	gdb-csl-symbian-6_4_50_20060226-12:1.26
	gdb-csl-sourcerygxx-3_4_4-25:1.25
	nickrob-async-20060828-mergepoint:1.26
	gdb-csl-symbian-6_4_50_20060226-11:1.26
	gdb-csl-sourcerygxx-4_1-17:1.26
	gdb-csl-20060226-branch-local-2:1.26
	gdb-csl-sourcerygxx-4_1-14:1.26
	gdb-csl-sourcerygxx-4_1-13:1.26
	gdb-csl-sourcerygxx-4_1-12:1.26
	gdb-csl-sourcerygxx-3_4_4-21:1.26
	gdb_6_5-20060621-release:1.26
	gdb-csl-sourcerygxx-4_1-9:1.26
	gdb-csl-sourcerygxx-4_1-8:1.26
	gdb-csl-sourcerygxx-4_1-7:1.26
	gdb-csl-arm-2006q1-6:1.26
	gdb-csl-sourcerygxx-4_1-6:1.26
	gdb-csl-symbian-6_4_50_20060226-10:1.26
	gdb-csl-symbian-6_4_50_20060226-9:1.26
	gdb-csl-symbian-6_4_50_20060226-8:1.26
	gdb-csl-coldfire-4_1-11:1.26
	gdb-csl-sourcerygxx-3_4_4-19:1.26
	gdb-csl-coldfire-4_1-10:1.26
	gdb_6_5-branch:1.26.0.16
	gdb_6_5-2006-05-14-branchpoint:1.26
	gdb-csl-sourcerygxx-4_1-5:1.26
	nickrob-async-20060513-branch:1.26.0.14
	nickrob-async-20060513-branchpoint:1.26
	gdb-csl-sourcerygxx-4_1-4:1.26
	msnyder-reverse-20060502-branch:1.26.0.12
	msnyder-reverse-20060502-branchpoint:1.26
	gdb-csl-morpho-4_1-4:1.26
	gdb-csl-sourcerygxx-3_4_4-17:1.26
	readline_5_1-import-branch:1.26.0.10
	readline_5_1-import-branchpoint:1.26
	gdb-csl-20060226-branch-merge-to-csl-symbian-1:1.26
	gdb-csl-symbian-20060226-branch:1.26.0.8
	gdb-csl-symbian-20060226-branchpoint:1.26
	gdb-csl-20060226-branch-merge-to-csl-local-1:1.26
	msnyder-reverse-20060331-branch:1.26.0.6
	msnyder-reverse-20060331-branchpoint:1.26
	gdb-csl-available-20060303-branch:1.26.0.4
	gdb-csl-available-20060303-branchpoint:1.26
	gdb-csl-20060226-branch:1.26.0.2
	gdb-csl-20060226-branchpoint:1.26
	gdb_6_4-20051202-release:1.25
	msnyder-fork-checkpoint-branch:1.25.0.12
	msnyder-fork-checkpoint-branchpoint:1.25
	gdb-csl-gxxpro-6_3-branch:1.25.0.10
	gdb-csl-gxxpro-6_3-branchpoint:1.25
	gdb_6_4-branch:1.25.0.8
	gdb_6_4-2005-11-01-branchpoint:1.25
	gdb-csl-arm-20051020-branch:1.25.0.6
	gdb-csl-arm-20051020-branchpoint:1.25
	msnyder-tracepoint-checkpoint-branch:1.25.0.4
	msnyder-tracepoint-checkpoint-branchpoint:1.25
	gdb-csl-arm-20050325-2005-q1b:1.25
	gdb-csl-arm-20050325-2005-q1a:1.25
	csl-arm-20050325-branch:1.25.0.2
	csl-arm-20050325-branchpoint:1.25
	gdb-post-i18n-errorwarning-20050211:1.23
	gdb-pre-i18n-errorwarning-20050211:1.23
	gdb_6_3-20041109-release:1.21
	gdb_6_3-branch:1.21.0.2
	gdb_6_3-20041019-branchpoint:1.21
	drow_intercu-merge-20040921:1.21
	drow_intercu-merge-20040915:1.21
	jimb-gdb_6_2-e500-branch:1.20.0.6
	jimb-gdb_6_2-e500-branchpoint:1.20
	gdb_6_2-20040730-release:1.20
	gdb_6_2-branch:1.20.0.2
	gdb_6_2-2004-07-10-gmt-branchpoint:1.20
	gdb_6_1_1-20040616-release:1.17
	gdb_6_1-2004-04-05-release:1.17
	drow_intercu-merge-20040402:1.17
	drow_intercu-merge-20040327:1.17
	ezannoni_pie-20040323-branch:1.17.0.10
	ezannoni_pie-20040323-branchpoint:1.17
	cagney_tramp-20040321-mergepoint:1.17
	cagney_tramp-20040309-branch:1.17.0.8
	cagney_tramp-20040309-branchpoint:1.17
	gdb_6_1-branch:1.17.0.6
	gdb_6_1-2004-03-01-gmt-branchpoint:1.17
	drow_intercu-20040221-branch:1.17.0.4
	drow_intercu-20040221-branchpoint:1.17
	cagney_bfdfile-20040213-branch:1.17.0.2
	cagney_bfdfile-20040213-branchpoint:1.17
	drow-cplus-merge-20040208:1.16
	carlton_dictionary-20040126-merge:1.16
	cagney_bigcore-20040122-branch:1.16.0.44
	cagney_bigcore-20040122-branchpoint:1.16
	drow-cplus-merge-20040113:1.16
	drow-cplus-merge-20031224:1.16
	drow-cplus-merge-20031220:1.16
	carlton_dictionary-20031215-merge:1.16
	drow-cplus-merge-20031214:1.16
	carlton-dictionary-20031111-merge:1.16
	gdb_6_0-2003-10-04-release:1.16
	kettenis_sparc-20030918-branch:1.16.0.42
	kettenis_sparc-20030918-branchpoint:1.16
	carlton_dictionary-20030917-merge:1.16
	ezannoni_pie-20030916-branchpoint:1.16
	ezannoni_pie-20030916-branch:1.16.0.40
	cagney_x86i386-20030821-branch:1.16.0.38
	cagney_x86i386-20030821-branchpoint:1.16
	carlton_dictionary-20030805-merge:1.16
	carlton_dictionary-20030627-merge:1.16
	gdb_6_0-branch:1.16.0.36
	gdb_6_0-2003-06-23-branchpoint:1.16
	jimb-ppc64-linux-20030613-branch:1.16.0.34
	jimb-ppc64-linux-20030613-branchpoint:1.16
	cagney_convert-20030606-branch:1.16.0.32
	cagney_convert-20030606-branchpoint:1.16
	cagney_writestrings-20030508-branch:1.16.0.30
	cagney_writestrings-20030508-branchpoint:1.16
	jimb-ppc64-linux-20030528-branch:1.16.0.28
	jimb-ppc64-linux-20030528-branchpoint:1.16
	carlton_dictionary-20030523-merge:1.16
	cagney_fileio-20030521-branch:1.16.0.26
	cagney_fileio-20030521-branchpoint:1.16
	kettenis_i386newframe-20030517-mergepoint:1.16
	jimb-ppc64-linux-20030509-branch:1.16.0.24
	jimb-ppc64-linux-20030509-branchpoint:1.16
	kettenis_i386newframe-20030504-mergepoint:1.16
	carlton_dictionary-20030430-merge:1.16
	kettenis_i386newframe-20030419-branch:1.16.0.22
	kettenis_i386newframe-20030419-branchpoint:1.16
	carlton_dictionary-20030416-merge:1.16
	cagney_frameaddr-20030409-mergepoint:1.16
	kettenis_i386newframe-20030406-branch:1.16.0.20
	kettenis_i386newframe-20030406-branchpoint:1.16
	cagney_frameaddr-20030403-branchpoint:1.16
	cagney_frameaddr-20030403-branch:1.16.0.18
	cagney_framebase-20030330-mergepoint:1.16
	cagney_framebase-20030326-branch:1.16.0.16
	cagney_framebase-20030326-branchpoint:1.16
	cagney_lazyid-20030317-branch:1.16.0.14
	cagney_lazyid-20030317-branchpoint:1.16
	kettenis-i386newframe-20030316-mergepoint:1.16
	offbyone-20030313-branch:1.16.0.12
	offbyone-20030313-branchpoint:1.16
	kettenis-i386newframe-20030308-branch:1.16.0.10
	kettenis-i386newframe-20030308-branchpoint:1.16
	carlton_dictionary-20030305-merge:1.16
	cagney_offbyone-20030303-branch:1.16.0.8
	cagney_offbyone-20030303-branchpoint:1.16
	carlton_dictionary-20030207-merge:1.16
	interps-20030203-mergepoint:1.16
	interps-20030202-branch:1.16.0.6
	interps-20030202-branchpoint:1.16
	cagney-unwind-20030108-branch:1.16.0.4
	cagney-unwind-20030108-branchpoint:1.16
	carlton_dictionary-20021223-merge:1.16
	gdb_5_3-2002-12-12-release:1.15
	carlton_dictionary-20021115-merge:1.16
	kseitz_interps-20021105-merge:1.16
	kseitz_interps-20021103-merge:1.16
	drow-cplus-merge-20021020:1.16
	drow-cplus-merge-20021025:1.16
	carlton_dictionary-20021025-merge:1.16
	carlton_dictionary-20021011-merge:1.16
	drow-cplus-branch:1.16.0.2
	drow-cplus-branchpoint:1.16
	kseitz_interps-20020930-merge:1.16
	carlton_dictionary-20020927-merge:1.15
	carlton_dictionary-branch:1.15.0.4
	carlton_dictionary-20020920-branchpoint:1.15
	gdb_5_3-branch:1.15.0.2
	gdb_5_3-2002-09-04-branchpoint:1.15
	kseitz_interps-20020829-merge:1.15
	cagney_sysregs-20020825-branch:1.14.0.4
	cagney_sysregs-20020825-branchpoint:1.14
	readline_4_3-import-branch:1.14.0.2
	readline_4_3-import-branchpoint:1.14
	gdb_5_2_1-2002-07-23-release:1.11
	kseitz_interps-20020528-branch:1.12.0.6
	kseitz_interps-20020528-branchpoint:1.12
	cagney_regbuf-20020515-branch:1.12.0.4
	cagney_regbuf-20020515-branchpoint:1.12
	jimb-macro-020506-branch:1.12.0.2
	jimb-macro-020506-branchpoint:1.12
	gdb_5_2-2002-04-29-release:1.11
	gdb_5_2-branch:1.11.0.2
	gdb_5_2-2002-03-03-branchpoint:1.11
	gdb_5_1_1-2002-01-24-release:1.9
	gdb_5_1_0_1-2002-01-03-release:1.9
	cygnus_cvs_20020108_pre:1.11
	gdb_5_1_0_1-2002-01-03-branchpoint:1.9
	gdb_5_1_0_1-2002-01-03-branch:1.9.0.8
	gdb_5_1-2001-11-21-release:1.9
	gdb_s390-2001-09-26-branch:1.9.0.6
	gdb_s390-2001-09-26-branchpoint:1.9
	gdb_5_1-2001-07-29-branch:1.9.0.4
	gdb_5_1-2001-07-29-branchpoint:1.9
	dberlin-typesystem-branch:1.9.0.2
	dberlin-typesystem-branchpoint:1.9
	gdb-post-ptid_t-2001-05-03:1.5
	gdb-pre-ptid_t-2001-05-03:1.5
	insight-precleanup-2001-01-01:1.4
	gdb-post-protoization-2000-07-29:1.3
	gdb-pre-protoization-2000-07-29:1.3
	gdb-premipsmulti-2000-06-06-branch:1.3.0.4
	gdb-premipsmulti-2000-06-06-branchpoint:1.3
	gdb-post-params-removal-2000-06-04:1.3
	gdb-pre-params-removal-2000-06-04:1.3
	gdb-post-params-removal-2000-05-28:1.3
	gdb-pre-params-removal-2000-05-28:1.3
	gdb_5_0-2000-05-19-release:1.3
	gdb_4_18_2-2000-05-18-release:1.3
	gdb_4_95_1-2000-05-11-snapshot:1.3
	gdb_4_95_0-2000-04-27-snapshot:1.3
	gdb_5_0-2000-04-10-branch:1.3.0.2
	gdb_5_0-2000-04-10-branchpoint:1.3
	repo-unification-2000-02-06:1.1.1.5
	insight-2000-02-04:1.1.1.5
	gdb-2000-02-04:1.1.1.5
	gdb-2000-02-02:1.1.1.5
	gdb-2000-02-01:1.1.1.5
	gdb-2000-01-31:1.1.1.4
	gdb-2000-01-26:1.1.1.4
	gdb-2000-01-24:1.1.1.4
	gdb-2000-01-17:1.1.1.4
	gdb-2000-01-10:1.1.1.4
	gdb-2000-01-05:1.1.1.4
	gdb-1999-12-21:1.1.1.4
	gdb-1999-12-13:1.1.1.3
	gdb-1999-12-07:1.1.1.2
	gdb-1999-12-06:1.1.1.2
	gdb-1999-11-16:1.1.1.2
	gdb-1999-11-08:1.1.1.2
	gdb-1999-11-01:1.1.1.2
	gdb-1999-10-25:1.1.1.2
	gdb-1999-10-18:1.1.1.2
	gdb-1999-10-11:1.1.1.1
	gdb-1999-10-04:1.1.1.1
	gdb-1999-09-28:1.1.1.1
	gdb-1999-09-21:1.1.1.1
	gdb-1999-09-13:1.1.1.1
	gdb-1999-09-08:1.1.1.1
	gdb-1999-08-30:1.1.1.1
	SNAPSHOT:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.30
date	2008.07.25.16.12.03;	author tromey;	state dead;
branches;
next	1.29;

1.29
date	2008.01.01.22.53.09;	author drow;	state Exp;
branches;
next	1.28;

1.28
date	2007.08.23.18.19.50;	author brobecke;	state Exp;
branches;
next	1.27;

1.27
date	2007.01.09.17.58.50;	author drow;	state Exp;
branches;
next	1.26;

1.26
date	2005.12.17.22.33.59;	author eliz;	state Exp;
branches;
next	1.25;

1.25
date	2005.02.24.13.51.31;	author cagney;	state Exp;
branches;
next	1.24;

1.24
date	2005.02.18.18.58.55;	author cagney;	state Exp;
branches;
next	1.23;

1.23
date	2005.02.09.21.56.11;	author cagney;	state Exp;
branches;
next	1.22;

1.22
date	2005.01.14.00.16.53;	author msnyder;	state Exp;
branches;
next	1.21;

1.21
date	2004.07.26.14.53.00;	author cagney;	state Exp;
branches;
next	1.20;

1.20
date	2004.06.26.20.37.12;	author cagney;	state Exp;
branches;
next	1.19;

1.19
date	2004.04.30.14.12.46;	author cagney;	state Exp;
branches;
next	1.18;

1.18
date	2004.04.29.18.00.08;	author cagney;	state Exp;
branches;
next	1.17;

1.17
date	2004.02.12.00.17.53;	author fnf;	state Exp;
branches
	1.17.4.1;
next	1.16;

1.16
date	2002.09.30.20.06.53;	author kseitz;	state Exp;
branches
	1.16.6.1;
next	1.15;

1.15
date	2002.08.26.19.41.56;	author kseitz;	state Exp;
branches
	1.15.4.1;
next	1.14;

1.14
date	2002.08.21.15.34.36;	author kseitz;	state Exp;
branches;
next	1.13;

1.13
date	2002.08.16.16.09.07;	author kseitz;	state Exp;
branches;
next	1.12;

1.12
date	2002.03.19.02.51.05;	author cagney;	state Exp;
branches
	1.12.6.1;
next	1.11;

1.11
date	2001.08.11.00.41.02;	author kseitz;	state Exp;
branches;
next	1.10;

1.10
date	2001.08.10.16.05.30;	author kseitz;	state Exp;
branches;
next	1.9;

1.9
date	2001.06.07.20.18.45;	author kseitz;	state Exp;
branches;
next	1.8;

1.8
date	2001.06.07.19.40.55;	author kseitz;	state Exp;
branches;
next	1.7;

1.7
date	2001.06.06.14.44.42;	author kseitz;	state Exp;
branches;
next	1.6;

1.6
date	2001.06.06.14.36.05;	author kseitz;	state Exp;
branches;
next	1.5;

1.5
date	2001.03.06.08.21.07;	author kevinb;	state Exp;
branches;
next	1.4;

1.4
date	2000.09.01.23.53.57;	author davea;	state Exp;
branches;
next	1.3;

1.3
date	2000.04.03.04.43.26;	author cagney;	state Exp;
branches;
next	1.2;

1.2
date	2000.03.30.03.10.58;	author dberlin;	state Exp;
branches;
next	1.1;

1.1
date	99.08.31.01.04.56;	author jsm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.08.31.01.04.56;	author jsm;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	99.10.19.02.46.36;	author jsm;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	99.12.14.01.05.30;	author jsm;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	99.12.22.21.45.05;	author jsm;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2000.02.02.00.21.06;	author jsm;	state Exp;
branches;
next	;

1.12.6.1
date	2002.06.24.23.59.57;	author kseitz;	state Exp;
branches;
next	1.12.6.2;

1.12.6.2
date	2002.07.22.22.00.41;	author kseitz;	state Exp;
branches;
next	1.12.6.3;

1.12.6.3
date	2002.07.25.17.15.54;	author kseitz;	state Exp;
branches;
next	1.12.6.4;

1.12.6.4
date	2002.08.09.19.46.14;	author kseitz;	state Exp;
branches;
next	1.12.6.5;

1.12.6.5
date	2002.08.21.16.33.23;	author kseitz;	state Exp;
branches;
next	1.12.6.6;

1.12.6.6
date	2002.08.29.22.54.21;	author kseitz;	state Exp;
branches;
next	;

1.15.4.1
date	2002.10.11.22.22.54;	author carlton;	state Exp;
branches;
next	;

1.16.6.1
date	2003.02.03.06.02.45;	author cagney;	state Exp;
branches;
next	1.16.6.2;

1.16.6.2
date	2003.02.04.01.26.54;	author cagney;	state Exp;
branches;
next	;

1.17.4.1
date	2004.09.16.17.01.04;	author drow;	state Exp;
branches;
next	;


desc
@@


1.30
log
@gdb:
	* tui/tui-hooks.c: Include observer.h.
	(tui_event_default, tui_old_event_hooks, tui_event_hooks):
	Remove.
	(tui_bp_created_observer, tui_bp_deleted_observer,
	tui_bp_modified_observer): New globals.
	(tui_install_hooks): Use observers, not events.
	(tui_remove_hooks): Likewise.
	* mi/mi-cmd-break.c: Include observer.h, not gdb-events.h.
	(mi_breakpoint_observers_installed, mi_can_breakpoint_notify): New
	globals.
	(breakpoint_notify): Check mi_can_breakpoint_notify.
	(breakpoint_hooks): Remove.
	(mi_cmd_break_insert): Attach observers.  Don't use events.
	* tracepoint.c: Include observer.h, not gdb-events.h.
	(tracepoint_operation, trace_pass_command): Notify observer.
	* interps.c: Don't include gdb-events.h.
	(clear_interpreter_hooks): Don't call clear_gdb_event_hooks.
	* gdbarch.c: Rebuild.
	* gdbarch.sh: Emit include for observer.h, not gdb-events.h.
	(deprecated_current_gdbarch_select_hack): Notify observer.
	* breakpoint.h: Don't include gdb-events.h.
	* breakpoint.c: Don't include gdb-events.h.
	(condition_command): Notify observer.
	(commands_command): Likewise.
	(commands_from_control_command): Likewise.
	(mention, delete_breakpoint, set_ignore_count): Likewise.
	(disable_breakpoint, do_enable_breakpoint): Likewise.
	* Makefile.in (gdb_events_h): Remove.
	(breakpoint_h): Update.
	(COMMON_OBS): Remove gdb-events.o.
	(gdb-events.o): Remove.
	(breakpoint.o, gdbarch.o, interps.o, tracepoint.o, gdbtk-bp.o,
	gdbtk-hooks.o, mi-cmd-break.o, tui-hooks.o): Update.
	* gdb-events.c: Remove.
	* gdb-events.h: Remove.
	* gdb-events.sh: Remove.
gdb/doc:
	* observer.texi (GDB Observers): Document new observers:
	breakpoint_created, breakpoint_deleted, breakpoint_modified,
	tracepoint_created, tracepoint_deleted, tracepoint_modified,
	architecture_changed.
gdb/gdbtk:
	* generic/gdbtk-hooks.c: Include observer.h, not gdb-events.h.
	(gdbtk_add_hooks): Use observers, not events.
	(gdbtk_architecture_changed): Add argument, for observer.
	* generic/gdbtk-bp.c: Include observer.h.
	(gdb_set_bp): Notify observer.
	(gdb_set_bp_addr): Likewise.
@
text
@#!/bin/sh

# User Interface Events.
#
# Copyright (C) 1999, 2000, 2001, 2002, 2004, 2005, 2007, 2008
# Free Software Foundation, Inc.
#
# Contributed by Cygnus Solutions.
#
# This file is part of GDB.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

IFS=:

read="class returntype function formal actual attrib"

function_list ()
{
  # category:
  #        # -> disable
  #        * -> compatibility - pointer variable that is initialized
  #             by set_gdb_events().
  #        ? -> Predicate and function proper.
  #        f -> always call (must have a void returntype)
  # return-type
  # name
  # formal argument list
  # actual argument list
  # attributes
  # description
  cat <<EOF |
f:void:breakpoint_create:int b:b
f:void:breakpoint_delete:int b:b
f:void:breakpoint_modify:int b:b
f:void:tracepoint_create:int number:number
f:void:tracepoint_delete:int number:number
f:void:tracepoint_modify:int number:number
f:void:architecture_changed:void
EOF
  grep -v '^#'
}

copyright ()
{
  cat <<EOF
/* User Interface Events.

   Copyright (C) 1999, 2001, 2002, 2004, 2005, 2007
   Free Software Foundation, Inc.

   Contributed by Cygnus Solutions.

   This file is part of GDB.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 3 of the License, or
   (at your option) any later version.
   
   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.
   
   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */

/* Work in progress */

/* This file was created with the aid of \`\`gdb-events.sh''.

   The bourn shell script \`\`gdb-events.sh'' creates the files
   \`\`new-gdb-events.c'' and \`\`new-gdb-events.h and then compares
   them against the existing \`\`gdb-events.[hc]''.  Any differences
   found being reported.

   If editing this file, please also run gdb-events.sh and merge any
   changes into that script. Conversely, when making sweeping changes
   to this file, modifying gdb-events.sh and using its output may
   prove easier.  */

EOF
}

#
# The .h file
#

exec > new-gdb-events.h
copyright
cat <<EOF

#ifndef GDB_EVENTS_H
#define GDB_EVENTS_H
EOF

# pointer declarations
echo ""
echo ""
cat <<EOF
/* COMPAT: pointer variables for old, unconverted events.
   A call to set_gdb_events() will automatically update these. */
EOF
echo ""
function_list | while eval read $read
do
  case "${class}" in
    "*" )
	echo "extern ${returntype} (*${function}_event) (${formal})${attrib};"
	;;
  esac
done

# function typedef's
echo ""
echo ""
cat <<EOF
/* Type definition of all hook functions.  Recommended pratice is to
   first declare each hook function using the below ftype and then
   define it.  */
EOF
echo ""
function_list | while eval read $read
do
  echo "typedef ${returntype} (gdb_events_${function}_ftype) (${formal});"
done

# gdb_events object
echo ""
echo ""
cat <<EOF
/* gdb-events: object. */
EOF
echo ""
echo "struct gdb_events"
echo "  {"
function_list | while eval read $read
do
  echo "    gdb_events_${function}_ftype *${function}${attrib};"
done
echo "  };"

# function declarations
echo ""
echo ""
cat <<EOF
/* Interface into events functions.
   Where a *_p() predicate is present, it must be called before
   calling the hook proper.  */
EOF
function_list | while eval read $read
do
  case "${class}" in
    "*" ) continue ;;
    "?" )
	echo "extern int ${function}_p (void);"
        echo "extern ${returntype} ${function}_event (${formal})${attrib};"
	;;
    "f" )
	echo "extern ${returntype} ${function}_event (${formal})${attrib};"
	;;
  esac
done

# our set function
cat <<EOF

/* Install custom gdb-events hooks.  */
extern struct gdb_events *deprecated_set_gdb_event_hooks (struct gdb_events *vector);

/* Deliver any pending events.  */
extern void gdb_events_deliver (struct gdb_events *vector);

/* Clear event handlers.  */
extern void clear_gdb_event_hooks (void);
EOF

# close it off
echo ""
echo "#endif"
exec 1>&2
#../move-if-change new-gdb-events.h gdb-events.h
if test -r gdb-events.h
then
  diff -c gdb-events.h new-gdb-events.h
  if [ $? = 1 ]
  then
    echo "gdb-events.h changed? cp new-gdb-events.h gdb-events.h" 1>&2
  fi
else
  echo "File missing? mv new-gdb-events.h gdb-events.h" 1>&2
fi



#
# C file
#

exec > new-gdb-events.c
copyright
cat <<EOF

#include "defs.h"
#include "gdb-events.h"
#include "gdbcmd.h"

static struct gdb_events null_event_hooks;
static struct gdb_events queue_event_hooks;
static struct gdb_events *current_event_hooks = &null_event_hooks;

int gdb_events_debug;
static void
show_gdb_events_debug (struct ui_file *file, int from_tty,
                       struct cmd_list_element *c, const char *value)
{
  fprintf_filtered (file, _("Event debugging is %s.\\n"), value);
}

EOF

# function bodies
function_list | while eval read $read
do
  case "${class}" in
    "*" ) continue ;;
    "?" )
cat <<EOF

int
${function}_event_p (${formal})
{
  return current_event_hooks->${function};
}

${returntype}
${function}_event (${formal})
{
  return current_events->${function} (${actual});
}
EOF
	;;
     "f" )
cat <<EOF

void
${function}_event (${formal})
{
  if (gdb_events_debug)
    fprintf_unfiltered (gdb_stdlog, "${function}_event\n");
  if (!current_event_hooks->${function})
    return;
  current_event_hooks->${function} (${actual});
}
EOF
	;;
  esac
done

# Set hooks function
echo ""
cat <<EOF
struct gdb_events *
deprecated_set_gdb_event_hooks (struct gdb_events *vector)
{
  struct gdb_events *old_events = current_event_hooks;
  if (vector == NULL)
    current_event_hooks = &queue_event_hooks;
  else
    current_event_hooks = vector;
  return old_events;
EOF
function_list | while eval read $read
do
  case "${class}" in
    "*" )
      echo "  ${function}_event = hooks->${function};"
      ;;
  esac
done
cat <<EOF
}
EOF

# Clear hooks function
echo ""
cat <<EOF
void
clear_gdb_event_hooks (void)
{
  deprecated_set_gdb_event_hooks (&null_event_hooks);
}
EOF

# event type
echo ""
cat <<EOF
enum gdb_event
{
EOF
function_list | while eval read $read
do
  case "${class}" in
    "f" )
      echo "  ${function},"
      ;;
  esac
done
cat <<EOF
  nr_gdb_events
};
EOF

# event data
echo ""
function_list | while eval read $read
do
  case "${class}" in
    "f" )
      if test ${actual}
      then
        echo "struct ${function}"
        echo "  {"
        echo "    `echo ${formal} | tr '[,]' '[;]'`;"
        echo "  };"
        echo ""
      fi
      ;;
  esac
done

# event queue
cat <<EOF
struct event
  {
    enum gdb_event type;
    struct event *next;
    union
      {
EOF
function_list | while eval read $read
do
  case "${class}" in
    "f" )
      if test ${actual}
      then
        echo "        struct ${function} ${function};"
      fi
      ;;
  esac
done
cat <<EOF
      }
    data;
  };
struct event *pending_events;
struct event *delivering_events;
EOF

# append
echo ""
cat <<EOF
static void
append (struct event *new_event)
{
  struct event **event = &pending_events;
  while ((*event) != NULL)
    event = &((*event)->next);
  (*event) = new_event;
  (*event)->next = NULL;
}
EOF

# schedule a given event
function_list | while eval read $read
do
  case "${class}" in
    "f" )
      echo ""
      echo "static void"
      echo "queue_${function} (${formal})"
      echo "{"
      echo "  struct event *event = XMALLOC (struct event);"
      echo "  event->type = ${function};"
      for arg in `echo ${actual} | tr '[,]' '[:]' | tr -d '[ ]'`; do
        echo "  event->data.${function}.${arg} = ${arg};"
      done
      echo "  append (event);"
      echo "}"
      ;;
  esac
done

# deliver
echo ""
cat <<EOF
void
gdb_events_deliver (struct gdb_events *vector)
{
  /* Just zap any events left around from last time. */
  while (delivering_events != NULL)
    {
      struct event *event = delivering_events;
      delivering_events = event->next;
      xfree (event);
    }
  /* Process any pending events.  Because one of the deliveries could
     bail out we move everything off of the pending queue onto an
     in-progress queue where it can, later, be cleaned up if
     necessary. */
  delivering_events = pending_events;
  pending_events = NULL;
  while (delivering_events != NULL)
    {
      struct event *event = delivering_events;
      switch (event->type)
        {
EOF
function_list | while eval read $read
do
  case "${class}" in
    "f" )
      echo "        case ${function}:"
      if test ${actual}
      then
        echo "          vector->${function}"
        sep="            ("
        ass=""
        for arg in `echo ${actual} | tr '[,]' '[:]' | tr -d '[ ]'`; do
          ass="${ass}${sep}event->data.${function}.${arg}"
	  sep=",
               "
        done
        echo "${ass});"
      else
        echo "          vector->${function} ();"
      fi
      echo "          break;"
      ;;
  esac
done
cat <<EOF
        }
      delivering_events = event->next;
      xfree (event);
    }
}
EOF

# Finally the initialization
echo ""
cat <<EOF
void _initialize_gdb_events (void);
void
_initialize_gdb_events (void)
{
  struct cmd_list_element *c;
EOF
function_list | while eval read $read
do
  case "${class}" in
    "f" )
      echo "  queue_event_hooks.${function} = queue_${function};"
      ;;
  esac
done
cat <<EOF

  add_setshow_zinteger_cmd ("event", class_maintenance,
                            &gdb_events_debug, _("\\
Set event debugging."), _("\\
Show event debugging."), _("\\
When non-zero, event/notify debugging is enabled."),
                            NULL,
                            show_gdb_events_debug,
                            &setdebuglist, &showdebuglist);
}
EOF

# close things off
exec 1>&2
#../move-if-change new-gdb-events.c gdb-events.c
# Replace any leading spaces with tabs
sed < new-gdb-events.c > tmp-gdb-events.c \
    -e 's/\(	\)*        /\1	/g'
mv tmp-gdb-events.c new-gdb-events.c
# Move if changed?
if test -r gdb-events.c
then
  diff -c gdb-events.c new-gdb-events.c
  if [ $? = 1 ]
  then
    echo "gdb-events.c changed? cp new-gdb-events.c gdb-events.c" 1>&2
  fi
else
  echo "File missing? mv new-gdb-events.c gdb-events.c" 1>&2
fi
@


1.29
log
@	Updated copyright notices for most files.
@
text
@@


1.28
log
@        * config/djgpp/djconfig.sh: Switch license to GPLv3.
        * copyright.sh: Likewise.
        * gdb-events.sh: Likewise.
        * gdb_gcore.sh: Likewise.
        * gdb_mbuild.sh: Likewise.
        * gdbarch.sh: Likewise.
        * observer.sh: Likewise.
        * features/feature_to_c.sh: Likewise.
        * regformats/regdat.sh: Likewise.
@
text
@d5 1
a5 1
# Copyright (C) 1999, 2000, 2001, 2002, 2004, 2005, 2007
@


1.27
log
@Copyright updates for 2007.
@
text
@d14 1
a14 1
# the Free Software Foundation; either version 2 of the License, or
d23 1
a23 3
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor,
# Boston, MA 02110-1301, USA.
d60 2
a61 2
   Copyright (C) 1999, 2001, 2002, 2004, 2005 Free Software Foundation,
   Inc.
d69 1
a69 1
   the Free Software Foundation; either version 2 of the License, or
d71 1
a71 1

d76 1
a76 1

d78 1
a78 3
   along with this program; if not, write to the Free Software
   Foundation, Inc., 51 Franklin Street, Fifth Floor,
   Boston, MA 02110-1301, USA.  */
@


1.26
log
@
	* breakpoint.c:
	* arm-tdep.c:
	* ia64-tdep.c:
	* i386-tdep.c:
	* hpread.c:
	* hppa-tdep.c:
	* hppa-hpux-tdep.c:
	* gnu-nat.c:
	* gdbtypes.c:
	* gdbarch.h:
	* gdbarch.c:
	* eval.c:
	* dwarf2read.c:
	* dbxread.c:
	* copying:
	* symfile.c:
	* stabsread.c:
	* sh64-tdep.c:
	* sh-tdep.c:
	* s390-tdep.c:
	* rs6000-tdep.c:
	* remote.c:
	* remote-mips.c:
	* mips-tdep.c:
	* mdebugread.c:
	* linux-nat.c:
	* infrun.c:
	* xcoffread.c:
	* win32-nat.c:
	* valops.c:
	* utils.c:
	* tracepoint.c:
	* target.c:
	* symtab.c:
	* c-exp.y:
	* ada-valprint.c:
	* ada-typeprint.c:
	* ada-lex.l:
	* ada-lang.h:
	* ada-lang.c:
	* ada-exp.y:
	* alphafbsd-tdep.c:
	* alphabsd-tdep.h:
	* alphabsd-tdep.c:
	* alphabsd-nat.c:
	* alpha-tdep.h:
	* alpha-tdep.c:
	* alpha-osf1-tdep.c:
	* alpha-nat.c:
	* alpha-mdebug-tdep.c:
	* alpha-linux-tdep.c:
	* alpha-linux-nat.c:
	* aix-thread.c:
	* abug-rom.c:
	* arch-utils.c:
	* annotate.h:
	* annotate.c:
	* amd64obsd-tdep.c:
	* amd64obsd-nat.c:
	* amd64nbsd-tdep.c:
	* amd64nbsd-nat.c:
	* amd64fbsd-tdep.c:
	* amd64fbsd-nat.c:
	* amd64bsd-nat.c:
	* amd64-tdep.h:
	* amd64-tdep.c:
	* amd64-sol2-tdep.c:
	* amd64-nat.h:
	* amd64-nat.c:
	* amd64-linux-tdep.c:
	* amd64-linux-nat.c:
	* alphanbsd-tdep.c:
	* block.h:
	* block.c:
	* bfd-target.h:
	* bfd-target.c:
	* bcache.h:
	* bcache.c:
	* ax.h:
	* ax-general.c:
	* ax-gdb.h:
	* ax-gdb.c:
	* avr-tdep.c:
	* auxv.h:
	* auxv.c:
	* armnbsd-tdep.c:
	* armnbsd-nat.c:
	* arm-tdep.h:
	* arm-linux-nat.c:
	* arch-utils.h:
	* charset.c:
	* call-cmds.h:
	* c-valprint.c:
	* c-typeprint.c:
	* c-lang.h:
	* c-lang.c:
	* buildsym.h:
	* buildsym.c:
	* bsd-uthread.h:
	* bsd-uthread.c:
	* bsd-kvm.h:
	* bsd-kvm.c:
	* breakpoint.h:
	* core-regset.c:
	* core-aout.c:
	* completer.h:
	* completer.c:
	* complaints.h:
	* complaints.c:
	* command.h:
	* coffread.c:
	* coff-solib.h:
	* coff-solib.c:
	* coff-pe-read.h:
	* coff-pe-read.c:
	* cli-out.h:
	* cli-out.c:
	* charset.h:
	* dink32-rom.c:
	* dictionary.h:
	* dictionary.c:
	* demangle.c:
	* defs.h:
	* dcache.h:
	* dcache.c:
	* d10v-tdep.c:
	* cpu32bug-rom.c:
	* cp-valprint.c:
	* cp-support.h:
	* cp-support.c:
	* cp-namespace.c:
	* cp-abi.h:
	* cp-abi.c:
	* corelow.c:
	* corefile.c:
	* environ.c:
	* elfread.c:
	* dwarfread.c:
	* dwarf2loc.c:
	* dwarf2expr.h:
	* dwarf2expr.c:
	* dwarf2-frame.h:
	* dwarf2-frame.c:
	* dve3900-rom.c:
	* dummy-frame.h:
	* dummy-frame.c:
	* dsrec.c:
	* doublest.h:
	* doublest.c:
	* disasm.h:
	* disasm.c:
	* fork-child.c:
	* findvar.c:
	* fbsd-nat.h:
	* fbsd-nat.c:
	* f-valprint.c:
	* f-typeprint.c:
	* f-lang.h:
	* f-lang.c:
	* expression.h:
	* expprint.c:
	* exec.h:
	* exec.c:
	* exceptions.h:
	* exceptions.c:
	* event-top.h:
	* event-top.c:
	* event-loop.h:
	* event-loop.c:
	* gdb.c:
	* gdb-stabs.h:
	* gdb-events.h:
	* gdb-events.c:
	* gcore.c:
	* frv-tdep.h:
	* frv-tdep.c:
	* frv-linux-tdep.c:
	* frame.h:
	* frame.c:
	* frame-unwind.h:
	* frame-unwind.c:
	* frame-base.h:
	* frame-base.c:
	* gdb_vfork.h:
	* gdb_thread_db.h:
	* gdb_string.h:
	* gdb_stat.h:
	* gdb_regex.h:
	* gdb_ptrace.h:
	* gdb_proc_service.h:
	* gdb_obstack.h:
	* gdb_locale.h:
	* gdb_dirent.h:
	* gdb_curses.h:
	* gdb_assert.h:
	* gdbarch.sh:
	* gdb.h:
	* hpux-thread.c:
	* hppabsd-nat.c:
	* hppa-tdep.h:
	* hpacc-abi.c:
	* h8300-tdep.c:
	* gregset.h:
	* go32-nat.c:
	* gnu-v3-abi.c:
	* gnu-v2-abi.h:
	* gnu-v2-abi.c:
	* gnu-nat.h:
	* glibc-tdep.c:
	* gdbtypes.h:
	* gdbcore.h:
	* gdbcmd.h:
	* i386nbsd-tdep.c:
	* i386nbsd-nat.c:
	* i386gnu-tdep.c:
	* i386gnu-nat.c:
	* i386fbsd-tdep.c:
	* i386fbsd-nat.c:
	* i386bsd-tdep.c:
	* i386bsd-nat.h:
	* i386bsd-nat.c:
	* i386-tdep.h:
	* i386-sol2-nat.c:
	* i386-nto-tdep.c:
	* i386-nat.c:
	* i386-linux-tdep.h:
	* i386-linux-tdep.c:
	* i386-linux-nat.c:
	* i386-cygwin-tdep.c:
	* inf-ttrace.c:
	* inf-ptrace.h:
	* inf-ptrace.c:
	* inf-loop.h:
	* inf-loop.c:
	* inf-child.h:
	* inf-child.c:
	* ia64-tdep.h:
	* ia64-linux-nat.c:
	* i387-tdep.h:
	* i387-tdep.c:
	* i386v4-nat.c:
	* i386v-nat.c:
	* i386obsd-tdep.c:
	* i386obsd-nat.c:
	* kod.c:
	* jv-valprint.c:
	* jv-typeprint.c:
	* jv-lang.h:
	* jv-lang.c:
	* irix5-nat.c:
	* iq2000-tdep.c:
	* interps.h:
	* interps.c:
	* inftarg.c:
	* inflow.h:
	* inflow.c:
	* inferior.h:
	* infcmd.c:
	* infcall.h:
	* infcall.c:
	* inf-ttrace.h:
	* m32r-tdep.h:
	* m32r-tdep.c:
	* m32r-rom.c:
	* m32r-linux-tdep.c:
	* m32r-linux-nat.c:
	* m2-valprint.c:
	* m2-typeprint.c:
	* m2-lang.h:
	* m2-lang.c:
	* lynx-nat.c:
	* linux-thread-db.c:
	* linux-nat.h:
	* linespec.c:
	* libunwind-frame.h:
	* libunwind-frame.c:
	* language.h:
	* language.c:
	* macroexp.c:
	* macrocmd.c:
	* m88kbsd-nat.c:
	* m88k-tdep.h:
	* m88k-tdep.c:
	* m68klinux-tdep.c:
	* m68klinux-nat.c:
	* m68kbsd-tdep.c:
	* m68kbsd-nat.c:
	* m68k-tdep.h:
	* m68k-tdep.c:
	* mips-linux-nat.c:
	* mips-irix-tdep.c:
	* minsyms.c:
	* memattr.h:
	* memattr.c:
	* mem-break.c:
	* mdebugread.h:
	* main.h:
	* main.c:
	* macrotab.h:
	* macrotab.c:
	* macroscope.h:
	* macroscope.c:
	* macroexp.h:
	* nbsd-tdep.c:
	* mt-tdep.c:
	* monitor.h:
	* monitor.c:
	* mn10300-tdep.h:
	* mn10300-tdep.c:
	* mn10300-linux-tdep.c:
	* mipsv4-nat.c:
	* mipsread.c:
	* mipsnbsd-tdep.h:
	* mipsnbsd-tdep.c:
	* mipsnbsd-nat.c:
	* mips64obsd-tdep.c:
	* mips64obsd-nat.c:
	* mips-tdep.h:
	* mips-mdebug-tdep.c:
	* mips-linux-tdep.c:
	* osabi.h:
	* osabi.c:
	* ocd.h:
	* ocd.c:
	* observer.c:
	* objfiles.h:
	* objfiles.c:
	* objc-lang.h:
	* objc-lang.c:
	* objc-exp.y:
	* nto-tdep.h:
	* nto-tdep.c:
	* nto-procfs.c:
	* nlmread.c:
	* nbsd-tdep.h:
	* ppcobsd-tdep.c:
	* ppcobsd-nat.c:
	* ppcnbsd-tdep.h:
	* ppcnbsd-tdep.c:
	* ppcnbsd-nat.c:
	* ppcbug-rom.c:
	* ppc-tdep.h:
	* ppc-sysv-tdep.c:
	* ppc-linux-tdep.c:
	* ppc-linux-nat.c:
	* ppc-bdm.c:
	* parser-defs.h:
	* parse.c:
	* p-valprint.c:
	* p-typeprint.c:
	* p-lang.h:
	* p-lang.c:
	* remote-fileio.h:
	* remote-fileio.c:
	* remote-est.c:
	* remote-e7000.c:
	* regset.h:
	* regset.c:
	* reggroups.h:
	* reggroups.c:
	* regcache.h:
	* regcache.c:
	* proc-why.c:
	* proc-service.c:
	* proc-events.c:
	* printcmd.c:
	* ppcobsd-tdep.h:
	* sentinel-frame.h:
	* sentinel-frame.c:
	* scm-valprint.c:
	* scm-tags.h:
	* scm-lang.h:
	* scm-lang.c:
	* scm-exp.c:
	* s390-tdep.h:
	* rom68k-rom.c:
	* remote.h:
	* remote-utils.c:
	* remote-st.c:
	* remote-sim.c:
	* remote-sds.c:
	* remote-rdp.c:
	* remote-rdi.c:
	* remote-hms.c:
	* sim-regno.h:
	* shnbsd-tdep.h:
	* shnbsd-tdep.c:
	* shnbsd-nat.c:
	* sh-tdep.h:
	* serial.h:
	* serial.c:
	* ser-unix.h:
	* ser-unix.c:
	* ser-tcp.c:
	* ser-pipe.c:
	* ser-go32.c:
	* ser-e7kpc.c:
	* ser-base.h:
	* ser-base.c:
	* solib.c:
	* solib-svr4.h:
	* solib-svr4.c:
	* solib-sunos.c:
	* solib-som.h:
	* solib-som.c:
	* solib-pa64.h:
	* solib-pa64.c:
	* solib-osf.c:
	* solib-null.c:
	* solib-legacy.c:
	* solib-irix.c:
	* solib-frv.c:
	* solib-aix5.c:
	* sol-thread.c:
	* sparc64-linux-tdep.c:
	* sparc64-linux-nat.c:
	* sparc-tdep.h:
	* sparc-tdep.c:
	* sparc-sol2-tdep.c:
	* sparc-sol2-nat.c:
	* sparc-nat.h:
	* sparc-nat.c:
	* sparc-linux-tdep.c:
	* sparc-linux-nat.c:
	* source.h:
	* source.c:
	* somread.c:
	* solist.h:
	* solib.h:
	* std-regs.c:
	* stack.h:
	* stack.c:
	* stabsread.h:
	* sparcobsd-tdep.c:
	* sparcnbsd-tdep.c:
	* sparcnbsd-nat.c:
	* sparc64obsd-tdep.c:
	* sparc64nbsd-tdep.c:
	* sparc64nbsd-nat.c:
	* sparc64fbsd-tdep.c:
	* sparc64fbsd-nat.c:
	* sparc64-tdep.h:
	* sparc64-tdep.c:
	* sparc64-sol2-tdep.c:
	* sparc64-nat.c:
	* ui-file.c:
	* typeprint.h:
	* typeprint.c:
	* tramp-frame.h:
	* tramp-frame.c:
	* trad-frame.h:
	* trad-frame.c:
	* tracepoint.h:
	* top.c:
	* tobs.inc:
	* thread.c:
	* terminal.h:
	* target.h:
	* symfile.h:
	* stop-gdb.c:
	* vaxbsd-nat.c:
	* vax-tdep.h:
	* vax-tdep.c:
	* vax-nat.c:
	* varobj.h:
	* varobj.c:
	* value.h:
	* value.c:
	* valprint.h:
	* valprint.c:
	* v850-tdep.c:
	* uw-thread.c:
	* user-regs.c:
	* ui-out.h:
	* ui-out.c:
	* ui-file.h:
	* xcoffsolib.h:
	* xcoffsolib.c:
	* wrapper.c:
	* wince.c:
	* wince-stub.h:
	* wince-stub.c:
	* vaxobsd-tdep.c:
	* vaxnbsd-tdep.c:
	* gdb_gcore.sh:
	* copying.c:
	* configure.ac:
	* aclocal.m4:
	* acinclude.m4:
	* reply_mig_hack.awk:
	* observer.sh:
	* gdb_mbuild.sh:
	* arm-linux-tdep.c:
	* blockframe.c:
	* dbug-rom.c:
	* environ.h:
	* dwarf2loc.h:
	* gdb-events.sh:
	* glibc-tdep.h:
	* gdb_wait.h:
	* gdbthread.h:
	* i386-sol2-tdep.c:
	* hppabsd-tdep.c:
	* hppa-linux-nat.c:
	* hppa-hpux-nat.c:
	* ia64-linux-tdep.c:
	* infptrace.c:
	* linespec.h:
	* maint.c:
	* mips-mdebug-tdep.h:
	* remote-m32r-sdi.c:
	* s390-nat.c:
	* rs6000-nat.c:
	* remote-utils.h:
	* sh3-rom.c:
	* sh-linux-tdep.c:
	* top.h:
	* symtab.h:
	* symmisc.c:
	* symfile-mem.c:
	* srec.h:
	* user-regs.h:
	* version.h:
	* valarith.c:
	* xstormy16-tdep.c:
	* wrapper.h:
	* Makefile.in:
	* f-exp.y:
	* cris-tdep.c:
	* cp-name-parser.y:
	* procfs.c:
	* proc-utils.h:
	* proc-flags.c:
	* proc-api.c:
	* p-exp.y:
	* m68hc11-tdep.c:
	* m2-exp.y:
	* kod.h:
	* kod-cisco.c:
	* jv-exp.y:
	* hppa-linux-tdep.c: Add (c) after Copyright.  Update the FSF
	address.
@
text
@d5 2
a6 2
# Copyright (C) 1999, 2000, 2001, 2002, 2004, 2005 Free Software
# Foundation, Inc.
@


1.25
log
@2005-02-24  Andrew Cagney  <cagney@@gnu.org>

	Add show_VARIABLE functions, update add_setshow call.
	* varobj.c (_initialize_varobj, show_varobjdebug): Add and update.
	* valprint.c (_initialize_valprint, show_print_max)
	(show_stop_print_at_null, show_repeat_count_threshold)
	(show_prettyprint_structs, show_unionprint)
	(show_prettyprint_arrays, show_addressprint, show_input_radix)
	(show_output_radix): Ditto.
	* valops.c (_initialize_valops, show_overload_resolution): Ditto.
	* utils.c (initialize_utils, show_chars_per_line)
	(show_lines_per_page, show_demangle, show_pagination_enabled)
	(show_sevenbit_strings, show_asm_demangle): Ditto
	* tui/tui-win.c (_initialize_tui_win, show_tui_border_kind)
	(show_tui_border_mode, show_tui_active_border_mode): Ditto.
	* top.c (init_main, show_new_async_prompt)
	(show_async_command_editing_p, show_write_history_p)
	(show_history_size, show_history_filename, show_caution)
	(show_annotation_level, init_main): Ditto.
	* target.c (initialize_targets, show_targetdebug)
	(show_trust_readonly): Ditto.
	* symfile.c (_initialize_symfile, show_symbol_reloading)
	(show_ext_args, show_download_write_size)
	(show_debug_file_directory): Ditto.
	* source.c (_initialize_source, show_lines_to_list): Ditto.
	* solib.c (_initialize_solib, show_auto_solib_add)
	(show_solib_search_path): Ditto.
	* p-valprint.c (_initialize_pascal_valprint)
	(show_pascal_static_field_print): Ditto.
	* printcmd.c (_initialize_printcmd, show_max_symbolic_offset)
	(show_print_symbol_filename): Add and update.
	* parse.c (_initialize_parse, show_expressiondebug): Dito.
	* observer.c (_initialize_observer, show_observer_debug): Dito.
	* maint.c (_initialize_maint_cmds, show_watchdog)
	(show_maintenance_profile_p): Dito.
	* linux-nat.c (_initialize_linux_nat, show_debug_linux_nat): Dito.
	* infrun.c (_initialize_infrun, show_debug_infrun)
	(show_stop_on_solib_events, show_follow_fork_mode_string)
	(show_scheduler_mode, show_step_stop_if_no_debug): Ditto.
	* infcall.c (_initialize_infcall, show_coerce_float_to_double_p)
	(show_unwind_on_signal_p): Ditto.
	* gdbtypes.c (build_gdbtypes, show_opaque_type_resolution)
	(_initialize_gdbtypes, show_overload_debug): Ditto.
	* gdb-events.c, gdb-events.sh (_initialize_gdb_events)
	(show_gdb_events_debug): Ditto.
	* gdbarch.c, gdbarch.sh (show_gdbarch_debug)
	(_initialize_gdbarch): Ditto.
	* frame.c (_initialize_frame, show_backtrace_past_main)
	(show_backtrace_past_entry, show_backtrace_limit)
	(show_frame_debug): Ditto.
	* exec.c (_initialize_exec, show_write_files): Ditto.
	* dwarf2read.c (_initialize_dwarf2_read)
	(show_dwarf2_max_cache_age): Ditto.
	* demangle.c (_initialize_demangler)
	(show_demangling_style_names): Ditto.
	* dcache.c (_initialize_dcache, show_dcache_enabled_p): Ditto.
	* cp-valprint.c (show_static_field_print)
	(_initialize_cp_valprint, show_vtblprint, show_objectprint): Ditto.
	* corefile.c (_initialize_core, show_gnutarget_string): Ditto.
	* cli/cli-logging.c (_initialize_cli_logging)
	(show_logging_overwrite, show_logging_redirect)
	(show_logging_filename): Ditto.
	* cli/cli-cmds.c (show_info_verbose, show_history_expansion_p)
	(init_cli_cmds, show_baud_rate, show_remote_debug)
	(show_remote_timeout, show_max_user_call_depth): Ditto.
	* charset.c (show_host_charset_name, show_target_charset_name)
	(initialize_charset): Ditto.
	* breakpoint.c (show_can_use_hw_watchpoints)
	(show_pending_break_support, _initialize_breakpoint): Ditto.
@
text
@d5 1
a5 1
# Copyright 1999, 2000, 2001, 2002, 2004, 2005 Free Software
d24 2
a25 2
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, 
# USA.
d62 1
a62 1
   Copyright 1999, 2001, 2002, 2004, 2005 Free Software Foundation,
d81 2
a82 1
   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
@


1.24
log
@2005-02-18  Andrew Cagney  <cagney@@gnu.org>

	Use add_setshow_zinteger_cmd through out.  Re-sync gdbarch.sh
	and gdbarch.c.
	* breakpoint.c, frame.c, gdb-events.sh, gdbarch.sh: Update.
	* gdbtypes.c, infrun.c, linux-nat.c, maint.c, monitor.c: Update.
	* pa64solib.c, parse.c, remote-mips.c, ser-go32.c: Update.
	* serial.c, solib-frv.c, somsolib.c, target.c, top.c: Update.
	* varobj.c, cli/cli-cmds.c: Update.
	* gdbarch.c, gdb-events.c: Regenerate.
@
text
@d228 7
d490 1
a490 1
                            NULL, /* FIXME: i18n: */
@


1.23
log
@2005-02-09  Andrew Cagney  <cagney@@gnu.org>

	* NEWS: Mention removed commands.
	* m68hc11-tdep.c (show_regs): Delete, unused.
	(_initialize_m68hc11_tdep): Delete deprecated "regs" command.
	* gdb-events.sh: Delete deprecated "set eventdebug" and "show
	eventdebug" commands.
	* gdb-events.c: Regenerate.
	* gdbarch.sh: Delete deprecated "set archdebug" and "show
	archdebug" commands.
	* gdbarch.c: Regenerate.
	* cli/cli-cmds.c (init_cli_cmds): Delete deprecated "set
	remotedebug" and "show remotedebug".
	* arm-tdep.c (_initialize_arm_tdep): Delete deprecated "set arm
	disassembly-flavor", "show arm disassembly-flavor", and
	"othernames" commands.
	(arm_othernames): Delete unused function.
@
text
@d477 8
a484 7
  deprecated_add_show_from_set (add_set_cmd ("event",
					     class_maintenance,
					     var_zinteger,
					     (char *) (&gdb_events_debug),
					     "Set event debugging.\n\\
When non-zero, event/notify debugging is enabled.", &setdebuglist),
				&showdebuglist);
@


1.22
log
@2005-01-13  Michael Snyder  <msnyder@@redhat.com>

	* gdb-events[.c, .h, .sh]: Whitespace tweaks.
@
text
@d4 3
a6 1
# Copyright 1999, 2000, 2001, 2002, 2004 Free Software Foundation, Inc.
d62 2
a63 1
   Copyright 1999, 2001, 2002, 2004 Free Software Foundation, Inc.
a476 7
  c = add_set_cmd ("eventdebug", class_maintenance, var_zinteger,
		   (char *) (&gdb_events_debug), "Set event debugging.\n\\
When non-zero, event/notify debugging is enabled.", &setlist);
  deprecate_cmd (c, "set debug event");
  deprecate_cmd (deprecated_add_show_from_set (c, &showlist),
                 "show debug event");

@


1.21
log
@2004-07-26  Andrew Cagney  <cagney@@gnu.org>

	* cli/cli-decode.c (deprecated_add_show_from_set): Deprecate.
	* xcoffsolib.c (_initialize_xcoffsolib): Update.
	* wince.c (_initialize_wince): Update.
	* win32-nat.c (_initialize_win32_nat): Update.
	* varobj.c (_initialize_varobj): Update.
	* valops.c (_initialize_valops): Update.
	* utils.c (initialize_utils, initialize_utils): Update.
	* tui/tui-win.c (_initialize_tui_win): Update.
	* top.c (init_main): Update.
	* symfile.c (_initialize_symfile): Update.
	* source.c (_initialize_source): Update.
	* somsolib.c (_initialize_som_solib): Update.
	* solib.c (_initialize_solib): Update.
	* solib-frv.c (_initialize_frv_solib): Update.
	* serial.c (_initialize_serial): Update.
	* ser-go32.c (_initialize_ser_dos, _initialize_ser_dos): Update.
	* remote.c (_initialize_remote, _initialize_remote): Update.
	* remote-vx.c (_initialize_vx): Update.
	* remote-utils.c (_initialize_sr_support): Update.
	* remote-sds.c (_initialize_remote_sds): Update.
	* remote-mips.c (_initialize_remote_mips): Update.
	* remote-e7000.c (_initialize_remote_e7000): Update.
	* proc-api.c (_initialize_proc_api): Update.
	* printcmd.c: Update.
	* parse.c (_initialize_parse): Update.
	* pa64solib.c (_initialize_pa64_solib): Update.
	* p-valprint.c (_initialize_pascal_valprint): Update.
	* monitor.c (_initialize_remote_monitors): Update.
	* mips-tdep.c (_initialize_mips_tdep): Update.
	* mcore-tdep.c (_initialize_mcore_tdep): Update.
	* maint.c (_initialize_maint_cmds): Update.
	* lin-lwp.c (_initialize_lin_lwp): Update.
	* language.c (_initialize_language): Update.
	* kod.c (_initialize_kod): Update.
	* infrun.c (set_schedlock_func, _initialize_infrun): Update.
	* i386-tdep.c (_initialize_i386_tdep): Update.
	* gdbtypes.c (build_gdbtypes, _initialize_gdbtypes): Update.
	* gdbarch.sh: Update.
	* gdbarch.c: Re-generate.
	* gdb-events.sh: Update.
	* gdb-events.c: Re-generate.
	* frame.c (_initialize_frame): Update.
	* exec.c: Update.
	* demangle.c (_initialize_demangler): Update.
	* dcache.c (_initialize_dcache): Update.
	* cris-tdep.c (_initialize_cris_tdep, cris_version_update): Update.
	* cp-valprint.c (_initialize_cp_valprint): Update.
	* corefile.c (_initialize_core): Update.
	* command.h: Update.
	* cli/cli-decode.h: Update.
	* cli/cli-cmds.c (init_cli_cmds): Update.
	* charset.c (_initialize_charset): Update.
	* breakpoint.c (_initialize_breakpoint): Update.
	* arm-tdep.c (_initialize_arm_tdep_initialize_arm_tdep): Update.
	* alpha-tdep.c (_initialize_alpha_tdep): Update.
	* aix-thread.c (_initialize_aix_thread): Update.
@
text
@d22 2
a23 1
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
d92 1
a92 1
   prove easier. */
d130 3
a132 3
/* Type definition of all hook functions.
   Recommended pratice is to first declare each hook function using
   the below ftype and then define it. */
d161 1
a161 1
   calling the hook proper. */
d180 1
a180 1
/* Install custom gdb-events hooks. */
d183 1
a183 1
/* Deliver any pending events. */
d186 1
a186 1
/* Clear event handlers */
d481 5
a485 6
  deprecated_add_show_from_set
    (add_set_cmd ("event",
	          class_maintenance,
		  var_zinteger,
		  (char *) (&gdb_events_debug),
		  "Set event debugging.\n\\
d487 1
a487 1
     &showdebuglist);
@


1.20
log
@2004-06-26  Andrew Cagney  <cagney@@gnu.org>

	* gdb-events.sh (deprecated_set_gdb_event_hooks): Deprecated.
	* gdb-events.h, gdb-events.c: Re-generate.
	* tui/tui-hooks.c (tui_install_hooks): Update.
	(tui_remove_hooks): Update.
	* mi/mi-cmd-break.c (mi_cmd_break_insert): Update.
@
text
@d477 2
a478 1
  deprecate_cmd (add_show_from_set (c, &showlist), "show debug event");
d480 6
a485 5
  add_show_from_set (add_set_cmd ("event",
                                  class_maintenance,
                                  var_zinteger,
                                  (char *) (&gdb_events_debug),
                                  "Set event debugging.\n\\
d487 1
a487 1
		     &showdebuglist);
@


1.19
log
@2004-04-30  Andrew Cagney  <cagney@@redhat.com>

	* gdb-events.sh (selected_thread_changed)
	(selected_frame_level_changed, target_changed): Delete.
	* gdb-events.h, gdb-events.c: Re-generate.
	* valops.c (value_assign): Update.
	* stack.c (select_frame_command, up_silently_base)
	(down_silently_base): Update.
@
text
@d180 1
a180 1
extern struct gdb_events *set_gdb_event_hooks (struct gdb_events *vector);
d268 1
a268 1
set_gdb_event_hooks (struct gdb_events *vector)
d295 1
a295 1
  set_gdb_event_hooks (&null_event_hooks);
@


1.18
log
@2004-04-29  Andrew Cagney  <cagney@@redhat.com>

	* gdb-events.sh (WITH_GDB_EVENTS): Delete macro and references.
	Delete all disabled code.
	* gdb-events.h, gdb-events.c: Re-generate.
@
text
@a49 3
f:void:target_changed:void
f:void:selected_frame_level_changed:int level:level
f:void:selected_thread_changed:int thread_num:thread_num
@


1.17
log
@Fix obvious typo (completly -> completely) and update copyrights as needed
@
text
@a23 18
#
# What happens next:
#

# The gdb-events.h/gdb-events.c files this script generates are commited
# and published.

# Any UI module that is installing events is changed so that the
# events are installed using the ``set_gdb_events()'' and
# ``gdb_event_hooks()'' interfaces.  There could prove to be an issue
# here with respect to annotate.  We might need to accomodate a hook
# stack that allows several ui blocks to install their own events.

# Each of the variable events (as currently generated) is converted
# to either a straight function call or a function call with a
# predicate.


a52 37
#*:void:annotate_starting_hook:void
#*:void:annotate_stopped_hook:void
#*:void:annotate_signalled_hook:void
#*:void:annotate_signal_hook:void
#*:void:annotate_exited_hook:void
##*:void:print_register_hook:int
##*:CORE_ADDR:find_toc_address_hook:CORE_ADDR
##*:void:sparc_print_register_hook:int regno:regno
#*:void:target_resume_hook:void
#*:void:target_wait_loop_hook:void
#*:void:init_gdb_hook:char *argv0:argv0
#*:void:command_loop_hook:void
#*:void:fputs_unfiltered_hook:const char *linebuff,struct ui_file *stream:linebuff, stream
#*:void:print_frame_info_listing_hook:struct symtab *s, int line, int stopline, int noerror:s, line, stopline, noerror
#*:int:query_hook:const char *query, va_list args:query, args
#*:void:warning_hook:const char *string, va_list args:string, args
#*:void:target_output_hook:char *b:b
#*:void:interactive_hook:void
#*:void:registers_changed_hook:void
#*:void:readline_begin_hook:char *format, ...:format
#*:char *:readline_hook:char *prompt:prompt
#*:void:readline_end_hook:void
#*:int:target_wait_hook:int pid, struct target_waitstatus *status:pid, status
#*:void:call_command_hook:struct cmd_list_element *c, char *cmd, int from_tty:c, cmd, from_tty
#*:NORETURN void:error_hook:void:: ATTR_NORETURN
#*:void:error_begin_hook:void
##*:int:target_architecture_hook:const struct bfd_arch_info *
#*:void:exec_file_display_hook:char *filename:filename
#*:void:file_changed_hook:char *filename:filename
##*:void:specify_exec_file_hook:
#*:int:gdb_load_progress_hook:char *section, unsigned long num:section, num
#*:void:pre_add_symbol_hook:char *name:name
#*:void:post_add_symbol_hook:void
#*:void:selected_frame_level_changed_hook:int level:level
#*:int:gdb_loop_hook:int signo:signo
##*:void:solib_create_inferior_hook:void
##*:void:xcoff_relocate_symtab_hook:unsigned int
d62 1
a62 1
   Copyright 1999, 2001, 2002 Free Software Foundation, Inc.
a108 4

#ifndef WITH_GDB_EVENTS
#define WITH_GDB_EVENTS 1
#endif
a178 23
# function macros
echo ""
echo ""
cat <<EOF
/* When GDB_EVENTS are not being used, completely disable them. */
EOF
echo ""
echo "#if !WITH_GDB_EVENTS"
function_list | while eval read $read
do
  case "${class}" in
    "*" ) continue ;;
    "?" )
	echo "#define ${function}_event_p() 0"
	echo "#define ${function}_event(${actual}) 0"
	;;
    "f" )
	echo "#define ${function}_event(${actual}) 0"
	;;
  esac
done
echo "#endif"

a189 6

#if !WITH_GDB_EVENTS
#define set_gdb_events(x) 0
#define set_gdb_event_hooks(x) 0
#define gdb_events_deliver(x) 0
#endif
a221 1
#if WITH_GDB_EVENTS
a224 1
#endif
a228 11
# global pointer variables - always have this
#echo ""
#function_list | while eval read $read
#do
#  case "${class}" in
#    "*" )
#	echo "${returntype} (*${function}_event) (${formal})${attrib} = 0;"
#	;;
#  esac
#done

a229 2
echo ""
echo "#if WITH_GDB_EVENTS"
a265 2
echo ""
echo "#endif"
a269 1
#if WITH_GDB_EVENTS
a289 1
#endif
a294 1
#if WITH_GDB_EVENTS
a299 1
#endif
a464 1
#if WITH_GDB_EVENTS
a474 1
#endif
@


1.17.4.1
log
@Merge mainline to intercu branch - 2004-09-15
@
text
@d24 18
d68 40
d117 1
a117 1
   Copyright 1999, 2001, 2002, 2004 Free Software Foundation, Inc.
d164 4
d238 23
d265 1
a265 1
extern struct gdb_events *deprecated_set_gdb_event_hooks (struct gdb_events *vector);
d272 6
d310 1
d314 1
d319 11
d331 2
d369 2
d375 1
d377 1
a377 1
deprecated_set_gdb_event_hooks (struct gdb_events *vector)
d396 1
d402 1
d406 1
a406 1
  deprecated_set_gdb_event_hooks (&null_event_hooks);
d408 1
d574 1
d585 1
d591 1
a591 2
  deprecate_cmd (deprecated_add_show_from_set (c, &showlist),
                 "show debug event");
d593 5
a597 6
  deprecated_add_show_from_set
    (add_set_cmd ("event",
	          class_maintenance,
		  var_zinteger,
		  (char *) (&gdb_events_debug),
		  "Set event debugging.\n\\
d599 1
a599 1
     &showdebuglist);
@


1.16
log
@        * gdb-events.sh (selected_thread_changed): New event.
        * gdb-events.c: Regenerated.
        * gdb-events.h: Regenerated.
@
text
@d4 1
a4 1
# Copyright 1999, 2000, 2001, 2002 Free Software Foundation, Inc.
d242 1
a242 1
/* When GDB_EVENTS are not being used, completly disable them. */
@


1.16.6.1
log
@Merge kseitz_interps-20020528-branch.
@
text
@d89 1
d104 1
@


1.16.6.2
log
@Kill off anything not directly related to the CLI command.
@
text
@a88 1
#*:void:registers_changed_hook:void
a102 1
#*:void:selected_frame_level_changed_hook:int level:level
@


1.15
log
@        * gdb-events.sh: Add selected-frame-level-changed event.
        * gdb-events.c: Regenerated.
        * gdb-events.h: Regenerated.
@
text
@d70 1
@


1.15.4.1
log
@Merge with mainline; merge tag carlton_dictionary-20021011-merge.
@
text
@a69 1
f:void:selected_thread_changed:int thread_num:thread_num
@


1.14
log
@        * gdb-events.sh: Add target-changed event.
        * gdb-events.c: Regenerated.
        * gdb-events.c: Regenerated.
        * valops.c (value_assign): Add target-changed event notification
        to inlval_register, lval_memory, and lval_reg_frame_relative.
@
text
@d69 1
a91 1
#*:void:context_hook:int num:num
@


1.13
log
@        * gdb-events.sh (clear_gdb_event_hooks): New function.
        * gdb-events.c: Regenerate.
        * gdb-events.h: Regenerate.
@
text
@d68 1
a90 2
#*:void:register_changed_hook:int regno:regno
#*:void:memory_changed_hook:CORE_ADDR addr, int len:addr, len
@


1.12
log
@* defs.h (XMALLOC): Define.
* gdb-events.sh (XMALLOC): Delete macro.
* gdb-events.c, gdb-events.h: Regenerate.
* gdbarch.sh (XMALLOC): Delete macro.
* gdbarch.c: Regenerate.
* serial.c (XMALLOC): Delete macro.
* ui-file.c (XMALLOC): Ditto.
* ser-unix.h (XMALLOC): Ditto.
* sh-tdep.c (XMALLOC): Ditto.
* ui-out.c (XMALLOC): Ditto.
* utils.c (XMALLOC): Ditto.
* i386-tdep.c (XMALLOC): Ditto.
* gdb-events.c (XMALLOC): Ditto.
* d10v-tdep.c (XMALLOC): Ditto.
* cli-out.c (XMALLOC): Ditto.

* cli-out.c, d10v-tdep.c, gdb-events.c: Update copyright.
* gdb-events.sh, i386-tdep.c, ser-unix.h, serial.c: Ditto.
* ui-file.c, ui-out.c: Ditto.
@
text
@d270 3
d395 12
@


1.12.6.1
log
@        * Makefile.in (interps.o): Add gdb-events.h as a dependency.

        * gdb-events.sh (clear_gdb_event_hooks): New function.
        * gdb-events.c: Regenerate.
        * gdb-events.h: Regenerate.

        * cli-out.h (cli_out_set_stream): New function.
        * cli-out.c (cli_out_set_stream): New function.

        * interps.c: Include gdb-events.h.
        (clear_interpreter_hooks): Also clear out event handlers.
        (gdb_set_interpreter): Clear out any hooks/event handlers that
        may have been installed by old interpreter.

        * cli/cli-interp.c (cli_interpreter_exec): Set the stream for the
        cli's uiout to gdb_stdout, which has probably changed from it's
        initialization. Restore the original stream when we're done executing
        in the interpreter.
@
text
@a269 3
/* Clear event handlers */
extern void clear_gdb_event_hooks (void);

a391 12
}
#endif
EOF

# Clear hooks function
echo ""
cat <<EOF
#if WITH_GDB_EVENTS
void
clear_gdb_event_hooks (void)
{
  set_gdb_event_hooks (&null_event_hooks);
@


1.12.6.2
log
@        * gdb-events.sh (register_changed_hook): Remove comment.
        (register_update): New event.
        * gdb-events.c: Regenerated.
        * gdb-events.h: Regenerated.
@
text
@a67 1
f:void:register_update:int regno:regno
d90 1
@


1.12.6.3
log
@        * stack.c (frame_command): If the frame level changed, issue
        a selected_frame_level_changed event.
        (up_command): Add selected_frame_level_changed event;
        (down_command): Likewise.

        * gdb-events.sh: Add selected_frame_level_changed event.
        * gdb-events.c: Regenerate.
        * gdb-events.h: Regenerate.

        * stack.c (print_frame_info_base): Always set current_source_symtab
        and current_source_line.

        * cli/cli-interp.c (cli_interpreter_exec): Pass from_tty=1 to
        gdb_execute_command.
@
text
@a68 1
f:void:selected_frame_level_changed:int level:level
d104 1
@


1.12.6.4
log
@        * infrun.c (handle_inferior_event): Add context_changed_event.
        * gdb-events.sh (context_hook): Removed comment.
        (context_changed): Add new event.
        * gdb-events.c: Regenerate.
        * gdb-events.h: Regenerate.
@
text
@a69 1
f:void:context_changed:int num:num
d93 1
@


1.12.6.5
log
@Make same as CVS HEAD.
        * gdb-events.sh: Replace register_update with target-changed event.
        * gdb-events.c: Regenerated.
        * gdb-events.c: Regenerated.
        * valops.c (value_assign): Use target_changed_event instead
        of register_update_event and memory_changed.
@
text
@d68 1
a68 1
f:void:target_changed:void
d89 1
d93 1
@


1.12.6.6
log
@        * gdb-events.sh (context_changed): Rename to selected_thread_changed
        to parallel selected_frame_level_changed.
        * thread.c (do_captured_thread_select): Ditto.
        * gdb-events.c: Regenerate.
        * gdb-events.h: Regenerate.
@
text
@d70 1
a70 1
f:void:selected_thread_changed:int thread_num:thread_num
@


1.11
log
@	* gdb-events.sh: Add architecture_changed event.
	* gdbarch.sh: Include gdb-event.h.
	(gdbarch_update_p): Notify UIs when architecture changes.
	* gdb-events.h: Regenerated.
	* gdb-events.c: Regenerated.
	* gdbarch.c: Regenerated.
@
text
@d4 1
a4 1
# Copyright 1999, 2000, 2001 Free Software Foundation, Inc.
d116 2
a117 1
   Copyright 1999, 2001 Free Software Foundation, Inc.
a305 3

#undef XMALLOC
#define XMALLOC(TYPE) ((TYPE*) xmalloc (sizeof (TYPE)))
@


1.10
log
@	* gdb-events.sh: Deal with event notifications with no
	arguments.
@
text
@d67 1
@


1.9
log
@	* gdb-events.sh: Fix quote escaping which was obsoleted
	by last patch.
@
text
@d422 8
a429 5
      echo "struct ${function}"
      echo "  {"
      echo "    `echo ${formal} | tr '[,]' '[;]'`;"
      echo "  };"
      echo ""
d447 4
a450 1
      echo "        struct ${function} ${function};"
d526 14
a539 9
      echo "          vector->${function}"
      sep="            ("
      ass=""
      for arg in `echo ${actual} | tr '[,]' '[:]' | tr -d '[ ]'`; do
        ass="${ass}${sep}event->data.${function}.${arg}"
	sep=",
             "
      done
      echo "${ass});"
@


1.8
log
@	* gdb-events.sh: Make if statements and tests
	a little more portable.
	Don't use shell's echo command to put strings containing
	escaped characeters into a file -- different flavors of /bin/sh
	require differnt levels of escaping. Use cat <<EOF instead.
	Our internal field separator is a colon. Change all
	commands which assume it is a space.
@
text
@d358 1
a358 1
    fprintf_unfiltered (gdb_stdlog, \"${function}_event\n\");
@


1.7
log
@	* gdb-events.sh (function_list): Add tracepoint_create,
	tracepoint_delete, and tracepoint_modify events.
	* gdb-events.c: Regenerated.
	* gdb-events.h: Regenerated.
@
text
@d280 1
a280 1
if ! test -r gdb-events.h
d282 6
a288 3
elif ! diff -c gdb-events.h new-gdb-events.h
then
  echo "gdb-events.h changed? cp new-gdb-events.h gdb-events.h" 1>&2
d336 14
a349 12
	echo ""
	echo "int"
	echo "${function}_event_p (${formal})"
	echo "{"
	echo "  return current_event_hooks->${function};"
	echo "}"
	echo ""
	echo "${returntype}"
	echo "${function}_event (${formal})"
	echo "{"
	echo "  return current_events->${function} (${actual});"
	echo "}"
d352 12
a363 10
	echo ""
	echo "void"
	echo "${function}_event (${formal})"
	echo "{"
	echo "  if (gdb_events_debug)"
	echo "    fprintf_unfiltered (gdb_stdlog, \"${function}_event\\n\");"
	echo "  if (!current_event_hooks->${function})"
	echo "    return;"
	echo "  current_event_hooks->${function} (${actual});"
	echo "}"
d481 1
a481 1
      for arg in `echo ${actual} | tr '[,]' '[ ]'`; do
d523 1
a523 1
      for arg in `echo ${actual} | tr '[,]' '[ ]'`; do
d586 1
a586 1
if ! test -r gdb-events.c
d588 6
a594 3
elif ! diff -c gdb-events.c new-gdb-events.c
then
  echo "gdb-events.c changed? cp new-gdb-events.c gdb-events.c" 1>&2
@


1.6
log
@	* gdb-events.sh: Update copyrights.
	Change free to xfree.
	* gdb-events.c: Regenerated.
	* gdb-events.h: Regenerated.
@
text
@d64 3
@


1.5
log
@Update/correct copyright notices.
@
text
@d4 1
a4 1
# Copyright 1999, 2000 Free Software Foundation, Inc.
d112 1
a112 1
   Copyright 1999 Free Software Foundation, Inc.
d491 1
a491 1
      free (event);
d526 1
a526 1
      free (event);
@


1.4
log
@
Corrected spelling error in comment:
converteded->converted
@
text
@d4 1
a4 1
# Copyright 1999-2000 Free Software Foundation, Inc.
@


1.3
log
@Re-indent gdb-events.h, gdb-events.c using gdb-events.sh.
@
text
@d37 1
a37 1
# Each of the variable events (as currently generated) is converteded
@


1.2
log
@Didn't realize this auto-generated gdb-events.c. Since it does, i applied the gdb-events.c fix for deprecation back to here.
@
text
@d116 1
a116 1
This file is part of GDB.
d118 13
a130 13
This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
d391 1
a391 1
  {
d397 1
a397 1
      echo "    ${function},"
d402 2
a403 2
    nr_gdb_events
  };
d538 1
a538 1
struct cmd_list_element *c;
d551 8
a558 1
  c=add_set_cmd ("eventdebug",
d561 1
a561 1
                                  (char *)&gdb_events_debug,
d563 2
a564 10
When non-zero, event/notify debugging is enabled.", &setlist);
  deprecate_cmd(c,"set debug event");
  deprecate_cmd(add_show_from_set(c,&showlist),"show debug event");
  add_show_from_set (add_set_cmd("event",
  				 class_maintenance,
				 var_zinteger,
				 (char *)&gdb_events_debug,
				 "Set event debugging.\n\\
When non-zero, event/notify debugging is enabled.", &setdebuglist),&showdebuglist);

d571 5
@


1.1
log
@Initial revision
@
text
@d4 1
a4 1
# Copyright 1999 Free Software Foundation, Inc.
d76 1
a76 1
#*:void:fputs_unfiltered_hook:const char *linebuff,GDB_FILE *stream:linebuff, stream
a79 1
#*:void:flush_hook:GDB_FILE *stream:stream
d216 2
a217 2
   Where a *_p() predicate is present, it must called before calling
   the hook proper. */
d260 1
a260 1
extern void set_gdb_event_hooks (struct gdb_events *vector);
d364 1
a364 1
void
d367 1
d372 1
d538 1
d551 1
a551 1
  add_show_from_set (add_set_cmd ("eventdebug",
d556 10
a565 2
When non-zero, event/notify debugging is enabled.", &setlist),
                     &showlist);
@


1.1.1.1
log
@import gdb-1999-08-30 snapshot
@
text
@@


1.1.1.2
log
@import gdb-1999-10-18 snapshot
@
text
@d80 1
@


1.1.1.3
log
@import gdb-1999-12-13 snapshot
@
text
@d216 2
a217 2
   Where a *_p() predicate is present, it must be called before
   calling the hook proper. */
@


1.1.1.4
log
@import gdb-1999-12-21 snapshot
@
text
@d260 1
a260 1
extern struct gdb_events *set_gdb_event_hooks (struct gdb_events *vector);
d364 1
a364 1
struct gdb_events *
a366 1
  struct gdb_events *old_events = current_event_hooks;
a370 1
  return old_events;
@


1.1.1.5
log
@import gdb-2000-02-01 snapshot
@
text
@d4 1
a4 1
# Copyright 1999-2000 Free Software Foundation, Inc.
d76 1
a76 1
#*:void:fputs_unfiltered_hook:const char *linebuff,struct ui_file *stream:linebuff, stream
@


