head	1.1;
access;
symbols
	cagney-unwind-20030108-branch:1.1.0.2;
locks; strict;
comment	@ * @;


1.1
date	2003.01.10.21.56.44;	author cagney;	state dead;
branches
	1.1.2.1;
next	;

1.1.2.1
date	2003.01.10.21.56.44;	author cagney;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2003.01.13.17.03.53;	author cagney;	state Exp;
branches;
next	1.1.2.3;

1.1.2.3
date	2003.01.20.00.38.14;	author cagney;	state Exp;
branches;
next	;


desc
@@


1.1
log
@file legacy-frame.h was initially added on branch cagney-unwind-20030108-branch.
@
text
@@


1.1.2.1
log
@Move legacy frame code to legacy-frame.[hc].
@
text
@a0 61
/* Code dealing with legacy frames, for GDB, the GNU debugger.

   Copyright 2003 Free Software Foundation, Inc.

   This file is part of GDB.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place - Suite 330,
   Boston, MA 02111-1307, USA.  */

#if !defined (LEGACY_FRAME_H)
#define LEGACY_FRAME_H 1

struct frame_info;
struct regcache;
struct frame_id;
struct frame_unwind_cache;

/* LEGACY FRAMES
  
   The original extra frame info implementation of the`struct
   frame_info' object.  These frames always initialize the entire
   frame object using extra frame info.  */

/* Assuming that FRAME is a legacy, return a register value for the
   previous frame.  */

extern void legacy_frame_register_unwind (struct frame_info *frame,
					  struct frame_unwind_cache **unwind_cache,
					  int regnum,
					  int *optimized,
					  enum lval_type *lvalp,
					  CORE_ADDR *addrp,
					  int *realnump,
					  void *valuep);

/* Assuming that FRAME is a legacy, return the resume address for the
   previous frame.  */

extern CORE_ADDR legacy_frame_pc_unwind (struct frame_info *frame,
					 struct frame_unwind_cache **unwind_cache);

/* Assuming that FRAME is a legacy, return the ID of the calling frame
   (the frame that the legacy has the saved state of).  */

extern void legacy_frame_id_unwind (struct frame_info *frame,
				    struct frame_unwind_cache **unwind_cache,
				    struct frame_id *id);

#endif
@


1.1.2.2
log
@2003-01-13  Andrew Cagney  <ac131313@@redhat.com>

	* d10v-tdep.c: Include "d10v-tdep.h".  Update to use D10V_
	prefixed enums.
	(do_d10v_pop_frame): Delete.  Use version in d10v-frame.c.

	* frame.c (frame_read_unsigned_register): Do not use
	get_next_frame.
	(frame_read_signed_register): Do not use get_next_frame.
	(get_frame_base): Use frame_id_unwind.

	* d10v-tdep.h: New file.
	* d10v-frame.h: New file.
	* d10v-frame.c: New file.

	* frame.c (frame_id_unwind): Update.
	(create_sentinel_frame): Update.
	(legacy_get_prev_frame): Use frame_unwind_find_by_pc.
	(get_prev_frame): Ditto.

	* frame.h (struct frame_info): Replace pc_unwind, id_unwind and
	register_unwind with unwind structure.

	* frame.c (set_unwind_by_pc): Delete function.
	(create_new_frame): Use frame_unwind_find_by_pc;

	* Makefile.in (frame_h): Add $(frame_unwind_h).
	* frame.h: Include "frame-unwind.h".
	(frame_register_unwind_ftype): Delete.
	(frame_id_unwind_ftype): Delete.
	(frame_pc_unwind_ftype): Delete.

	* Makefile.in (dummy-frame.o): Update dependencies.
	(legacy-frame.o): Update dependencies.

	* dummy-frame.c: Include "frame-unwind.h".
	(dummy_frame_unwind): New static variable.
	(dummy_frame_p): New function.
	* legacy-frame.c: Include "frame-unwind.h".
	(legacy_frame_unwind): New static variable.
	(legacy_frame_p): New function.
	* legacy-frame.h (legacy_frame_p): Declare.
	* dummy-frame.h (dummy_frame_p): Declare.

	* Makefile.in (frame_unwind_h): Define.
	* frame-unwind.h: New file.
	* frame-unwind.c: New file.
@
text
@a24 5
/* Frame unwinder for legacy code.  */

const struct frame_unwind *legacy_frame_unwind_p (CORE_ADDR pc);


@


1.1.2.3
log
@Merge branch with mainline:
POP_FRAME_P;
frame-unwind.h.
@
text
@a24 2
struct frame_unwind;

d28 37
@


