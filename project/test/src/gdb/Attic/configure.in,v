head	1.180;
access;
symbols
	gdb_6_3-20041109-release:1.176
	gdb_6_3-branch:1.176.0.2
	gdb_6_3-20041019-branchpoint:1.176
	drow_intercu-merge-20040921:1.172
	drow_intercu-merge-20040915:1.171
	jimb-gdb_6_2-e500-branch:1.157.2.1.0.4
	jimb-gdb_6_2-e500-branchpoint:1.157.2.1
	gdb_6_2-20040730-release:1.157.2.1
	gdb_6_2-branch:1.157.0.2
	gdb_6_2-2004-07-10-gmt-branchpoint:1.157
	gdb_6_1_1-20040616-release:1.149.2.1
	gdb_6_1-2004-04-05-release:1.149
	drow_intercu-merge-20040402:1.150
	drow_intercu-merge-20040327:1.149
	ezannoni_pie-20040323-branch:1.149.0.6
	ezannoni_pie-20040323-branchpoint:1.149
	cagney_tramp-20040321-mergepoint:1.149
	cagney_tramp-20040309-branch:1.149.0.4
	cagney_tramp-20040309-branchpoint:1.149
	gdb_6_1-branch:1.149.0.2
	gdb_6_1-2004-03-01-gmt-branchpoint:1.149
	drow_intercu-20040221-branch:1.147.0.2
	drow_intercu-20040221-branchpoint:1.147
	cagney_bfdfile-20040213-branch:1.144.0.2
	cagney_bfdfile-20040213-branchpoint:1.144
	drow-cplus-merge-20040208:1.141
	carlton_dictionary-20040126-merge:1.140
	cagney_bigcore-20040122-branch:1.140.0.2
	cagney_bigcore-20040122-branchpoint:1.140
	drow-cplus-merge-20040113:1.138
	drow-cplus-merge-20031224:1.133
	drow-cplus-merge-20031220:1.133
	carlton_dictionary-20031215-merge:1.133
	drow-cplus-merge-20031214:1.133
	carlton-dictionary-20031111-merge:1.132
	gdb_6_0-2003-10-04-release:1.128
	kettenis_sparc-20030918-branch:1.132.0.4
	kettenis_sparc-20030918-branchpoint:1.132
	carlton_dictionary-20030917-merge:1.132
	ezannoni_pie-20030916-branchpoint:1.132
	ezannoni_pie-20030916-branch:1.132.0.2
	cagney_x86i386-20030821-branch:1.129.0.2
	cagney_x86i386-20030821-branchpoint:1.129
	carlton_dictionary-20030805-merge:1.129
	carlton_dictionary-20030627-merge:1.128
	gdb_6_0-branch:1.128.0.4
	gdb_6_0-2003-06-23-branchpoint:1.128
	jimb-ppc64-linux-20030613-branch:1.128.0.2
	jimb-ppc64-linux-20030613-branchpoint:1.128
	cagney_convert-20030606-branch:1.127.0.2
	cagney_convert-20030606-branchpoint:1.127
	cagney_writestrings-20030508-branch:1.126.0.24
	cagney_writestrings-20030508-branchpoint:1.126
	jimb-ppc64-linux-20030528-branch:1.126.0.22
	jimb-ppc64-linux-20030528-branchpoint:1.126
	carlton_dictionary-20030523-merge:1.126
	cagney_fileio-20030521-branch:1.126.0.20
	cagney_fileio-20030521-branchpoint:1.126
	kettenis_i386newframe-20030517-mergepoint:1.126
	jimb-ppc64-linux-20030509-branch:1.126.0.18
	jimb-ppc64-linux-20030509-branchpoint:1.126
	kettenis_i386newframe-20030504-mergepoint:1.126
	carlton_dictionary-20030430-merge:1.126
	kettenis_i386newframe-20030419-branch:1.126.0.16
	kettenis_i386newframe-20030419-branchpoint:1.126
	carlton_dictionary-20030416-merge:1.126
	cagney_frameaddr-20030409-mergepoint:1.126
	kettenis_i386newframe-20030406-branch:1.126.0.14
	kettenis_i386newframe-20030406-branchpoint:1.126
	cagney_frameaddr-20030403-branchpoint:1.126
	cagney_frameaddr-20030403-branch:1.126.0.12
	cagney_framebase-20030330-mergepoint:1.126
	cagney_framebase-20030326-branch:1.126.0.10
	cagney_framebase-20030326-branchpoint:1.126
	cagney_lazyid-20030317-branch:1.126.0.8
	cagney_lazyid-20030317-branchpoint:1.126
	kettenis-i386newframe-20030316-mergepoint:1.126
	offbyone-20030313-branch:1.126.0.6
	offbyone-20030313-branchpoint:1.126
	kettenis-i386newframe-20030308-branch:1.126.0.4
	kettenis-i386newframe-20030308-branchpoint:1.126
	carlton_dictionary-20030305-merge:1.126
	cagney_offbyone-20030303-branch:1.126.0.2
	cagney_offbyone-20030303-branchpoint:1.126
	carlton_dictionary-20030207-merge:1.121
	interps-20030203-mergepoint:1.121
	interps-20030202-branch:1.121.0.2
	interps-20030202-branchpoint:1.121
	cagney-unwind-20030108-branch:1.116.0.2
	cagney-unwind-20030108-branchpoint:1.116
	carlton_dictionary-20021223-merge:1.96
	gdb_5_3-2002-12-12-release:1.90.6.2
	jimb-separate-debug-021125-branch:1.93.0.2
	carlton_dictionary-20021115-merge:1.93
	kseitz_interps-20021105-merge:1.92
	kseitz_interps-20021103-merge:1.92
	drow-cplus-merge-20021020:1.91
	drow-cplus-merge-20021025:1.92
	carlton_dictionary-20021025-merge:1.92
	carlton_dictionary-20021011-merge:1.91
	drow-cplus-branch:1.91.0.4
	drow-cplus-branchpoint:1.91
	kseitz_interps-20020930-merge:1.91
	carlton_dictionary-20020927-merge:1.91
	carlton_dictionary-branch:1.91.0.2
	carlton_dictionary-20020920-branchpoint:1.91
	gdb_5_3-branch:1.90.0.6
	gdb_5_3-2002-09-04-branchpoint:1.90
	kseitz_interps-20020829-merge:1.90
	cagney_sysregs-20020825-branch:1.90.0.4
	cagney_sysregs-20020825-branchpoint:1.90
	readline_4_3-import-branch:1.90.0.2
	readline_4_3-import-branchpoint:1.90
	gdb_5_2_1-2002-07-23-release:1.82.2.2
	kseitz_interps-20020528-branch:1.87.0.4
	kseitz_interps-20020528-branchpoint:1.87
	cagney_regbuf-20020515-branch:1.87.0.2
	cagney_regbuf-20020515-branchpoint:1.87
	jimb-macro-020506-branch:1.86.0.2
	jimb-macro-020506-branchpoint:1.86
	gdb_5_2-2002-04-29-release:1.82.2.2
	gdb_5_2-branch:1.82.0.2
	gdb_5_2-2002-03-03-branchpoint:1.82
	gdb_5_1_1-2002-01-24-release:1.68.2.1
	gdb_5_1_0_1-2002-01-03-release:1.68.2.1
	cygnus_cvs_20020108_pre:1.78
	gdb_5_1_0_1-2002-01-03-branchpoint:1.68.2.1
	gdb_5_1_0_1-2002-01-03-branch:1.68.2.1.0.4
	gdb_5_1-2001-11-21-release:1.68.2.1
	gdb_s390-2001-09-26-branch:1.68.2.1.0.2
	gdb_s390-2001-09-26-branchpoint:1.68.2.1
	gdb_5_1-2001-07-29-branch:1.68.0.2
	gdb_5_1-2001-07-29-branchpoint:1.68
	dberlin-typesystem-branch:1.65.0.2
	dberlin-typesystem-branchpoint:1.65
	gdb-post-ptid_t-2001-05-03:1.63
	gdb-pre-ptid_t-2001-05-03:1.63
	insight-precleanup-2001-01-01:1.53
	gdb-post-protoization-2000-07-29:1.40
	gdb-pre-protoization-2000-07-29:1.40
	gdb-premipsmulti-2000-06-06-branch:1.32.0.2
	gdb-premipsmulti-2000-06-06-branchpoint:1.32
	gdb-post-params-removal-2000-06-04:1.31
	gdb-pre-params-removal-2000-06-04:1.31
	gdb-post-params-removal-2000-05-28:1.29
	gdb-pre-params-removal-2000-05-28:1.29
	gdb_5_0-2000-05-19-release:1.18.2.4
	gdb_4_18_2-2000-05-18-release:1.18.2.4
	gdb_4_95_1-2000-05-11-snapshot:1.18.2.4
	gdb_4_95_0-2000-04-27-snapshot:1.18.2.3
	gdb_5_0-2000-04-10-branch:1.18.0.2
	gdb_5_0-2000-04-10-branchpoint:1.18
	repo-unification-2000-02-06:1.1.1.18
	insight-2000-02-04:1.1.1.18
	gdb-2000-02-04:1.1.1.17
	gdb-2000-02-02:1.1.1.16
	gdb-2000-02-01:1.1.1.15
	gdb-2000-01-31:1.1.1.15
	gdb-2000-01-26:1.1.1.15
	gdb-2000-01-24:1.1.1.15
	gdb-2000-01-17:1.1.1.15
	gdb-2000-01-10:1.1.1.14
	gdb-2000-01-05:1.1.1.13
	gdb-1999-12-21:1.1.1.12
	gdb-1999-12-13:1.1.1.11
	gdb-1999-12-07:1.1.1.11
	gdb-1999-12-06:1.1.1.11
	gdb-1999-11-16:1.1.1.10
	gdb-1999-11-08:1.1.1.10
	gdb-1999-11-01:1.1.1.10
	gdb-1999-10-25:1.1.1.9
	gdb-1999-10-18:1.1.1.9
	gdb-1999-10-11:1.1.1.9
	gdb-1999-10-04:1.1.1.9
	gdb-1999-09-28:1.1.1.8
	gdb-1999-09-21:1.1.1.8
	gdb-1999-09-13:1.1.1.8
	gdb-1999-09-08:1.1.1.8
	gdb-1999-08-30:1.1.1.7
	gdb-1999-08-23:1.1.1.6
	gdb-1999-08-16:1.1.1.6
	gdb-1999-08-09:1.1.1.5
	gdb-1999-08-02:1.1.1.4
	gdb-1999-07-26:1.1.1.4
	gdb-1999-07-19:1.1.1.4
	gdb-1999-07-12:1.1.1.4
	gdb-post-reformat-19990707:1.1.1.4
	gdb-1999-07-07-post-reformat-snapshot:1.1.1.4
	gdb-pre-reformat-19990707:1.1.1.4
	gdb-1999-07-07:1.1.1.4
	gdb-1999-07-05:1.1.1.4
	gdb-1999-06-28:1.1.1.4
	gdb-1999-06-21:1.1.1.4
	gdb-1999-06-14:1.1.1.4
	gdb-1999-06-07:1.1.1.4
	gdb-1999-06-01:1.1.1.4
	gdb-4_18-branch:1.1.1.1.0.2
	gdb-4_18-release:1.1.1.1
	gdb-1999-05-25:1.1.1.4
	gdb-1999-05-19:1.1.1.4
	gdb-1999-05-10:1.1.1.4
	gdb-19990504:1.1.1.3
	gdb-19990422:1.1.1.2
	SNAPSHOT:1.1.1
	gdb-4_18:1.1.1.1
	GDB_4_18:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.180
date	2005.01.07.21.53.21;	author cagney;	state dead;
branches;
next	1.179;

1.179
date	2005.01.07.15.16.57;	author cagney;	state Exp;
branches;
next	1.178;

1.178
date	2004.11.09.00.59.03;	author danglin;	state Exp;
branches;
next	1.177;

1.177
date	2004.11.01.21.05.48;	author jsm28;	state Exp;
branches;
next	1.176;

1.176
date	2004.10.10.15.55.49;	author kettenis;	state Exp;
branches;
next	1.175;

1.175
date	2004.09.28.20.17.32;	author kettenis;	state Exp;
branches;
next	1.174;

1.174
date	2004.09.27.18.41.24;	author kettenis;	state Exp;
branches;
next	1.173;

1.173
date	2004.09.25.09.17.45;	author kettenis;	state Exp;
branches;
next	1.172;

1.172
date	2004.09.18.18.45.55;	author kettenis;	state Exp;
branches;
next	1.171;

1.171
date	2004.09.13.20.55.38;	author cagney;	state Exp;
branches;
next	1.170;

1.170
date	2004.09.03.16.59.30;	author cagney;	state Exp;
branches;
next	1.169;

1.169
date	2004.09.02.22.14.31;	author cagney;	state Exp;
branches;
next	1.168;

1.168
date	2004.09.02.17.22.05;	author cagney;	state Exp;
branches;
next	1.167;

1.167
date	2004.08.22.14.18.02;	author kettenis;	state Exp;
branches;
next	1.166;

1.166
date	2004.08.21.12.05.50;	author kettenis;	state Exp;
branches;
next	1.165;

1.165
date	2004.08.15.10.05.58;	author kettenis;	state Exp;
branches;
next	1.164;

1.164
date	2004.08.13.20.16.46;	author kettenis;	state Exp;
branches;
next	1.163;

1.163
date	2004.08.09.19.20.13;	author kettenis;	state Exp;
branches;
next	1.162;

1.162
date	2004.08.07.22.12.08;	author kettenis;	state Exp;
branches;
next	1.161;

1.161
date	2004.08.07.21.52.15;	author nathanw;	state Exp;
branches;
next	1.160;

1.160
date	2004.07.30.14.30.08;	author cagney;	state Exp;
branches;
next	1.159;

1.159
date	2004.07.29.19.33.22;	author cagney;	state Exp;
branches;
next	1.158;

1.158
date	2004.07.17.11.24.24;	author kettenis;	state Exp;
branches;
next	1.157;

1.157
date	2004.06.27.16.41.21;	author kettenis;	state Exp;
branches
	1.157.2.1;
next	1.156;

1.156
date	2004.06.08.16.29.30;	author corinna;	state Exp;
branches;
next	1.155;

1.155
date	2004.05.23.09.23.17;	author kettenis;	state Exp;
branches;
next	1.154;

1.154
date	2004.05.12.23.14.49;	author jimb;	state Exp;
branches;
next	1.153;

1.153
date	2004.05.03.02.03.17;	author chastain;	state Exp;
branches;
next	1.152;

1.152
date	2004.04.29.14.29.14;	author cagney;	state Exp;
branches;
next	1.151;

1.151
date	2004.04.25.20.42.45;	author chastain;	state Exp;
branches;
next	1.150;

1.150
date	2004.03.29.18.07.14;	author drow;	state Exp;
branches;
next	1.149;

1.149
date	2004.02.26.00.41.46;	author brobecke;	state Exp;
branches
	1.149.2.1;
next	1.148;

1.148
date	2004.02.25.20.09.46;	author brobecke;	state Exp;
branches;
next	1.147;

1.147
date	2004.02.18.19.01.36;	author cagney;	state Exp;
branches
	1.147.2.1;
next	1.146;

1.146
date	2004.02.16.19.33.42;	author cagney;	state Exp;
branches;
next	1.145;

1.145
date	2004.02.15.23.45.24;	author cagney;	state Exp;
branches;
next	1.144;

1.144
date	2004.02.08.17.53.08;	author cagney;	state Exp;
branches;
next	1.143;

1.143
date	2004.02.08.13.47.02;	author cagney;	state Exp;
branches;
next	1.142;

1.142
date	2004.02.08.04.25.07;	author cagney;	state Exp;
branches;
next	1.141;

1.141
date	2004.01.29.21.54.34;	author roland;	state Exp;
branches;
next	1.140;

1.140
date	2004.01.20.09.29.16;	author chastain;	state Exp;
branches;
next	1.139;

1.139
date	2004.01.13.17.06.36;	author cagney;	state Exp;
branches;
next	1.138;

1.138
date	2004.01.02.12.40.08;	author kettenis;	state Exp;
branches;
next	1.137;

1.137
date	2003.12.30.10.33.37;	author eliz;	state Exp;
branches;
next	1.136;

1.136
date	2003.12.30.07.05.21;	author eliz;	state Exp;
branches;
next	1.135;

1.135
date	2003.12.30.06.52.09;	author eliz;	state Exp;
branches;
next	1.134;

1.134
date	2003.12.29.07.35.35;	author eliz;	state Exp;
branches;
next	1.133;

1.133
date	2003.11.14.21.17.51;	author jjohnstn;	state Exp;
branches;
next	1.132;

1.132
date	2003.09.03.15.02.48;	author cagney;	state Exp;
branches
	1.132.4.1;
next	1.131;

1.131
date	2003.08.30.00.06.22;	author kettenis;	state Exp;
branches;
next	1.130;

1.130
date	2003.08.29.19.18.07;	author kettenis;	state Exp;
branches;
next	1.129;

1.129
date	2003.07.22.18.18.09;	author cagney;	state Exp;
branches;
next	1.128;

1.128
date	2003.06.08.18.27.13;	author cagney;	state Exp;
branches;
next	1.127;

1.127
date	2003.06.04.20.51.27;	author jjohnstn;	state Exp;
branches;
next	1.126;

1.126
date	2003.02.26.15.10.47;	author chastain;	state Exp;
branches;
next	1.125;

1.125
date	2003.02.20.23.38.58;	author aoliva;	state Exp;
branches;
next	1.124;

1.124
date	2003.02.17.21.56.29;	author cagney;	state Exp;
branches;
next	1.123;

1.123
date	2003.02.17.16.58.02;	author cagney;	state Exp;
branches;
next	1.122;

1.122
date	2003.02.14.20.06.59;	author kettenis;	state Exp;
branches;
next	1.121;

1.121
date	2003.02.01.11.32.19;	author kettenis;	state Exp;
branches;
next	1.120;

1.120
date	2003.01.27.14.36.56;	author drow;	state Exp;
branches;
next	1.119;

1.119
date	2003.01.23.23.03.31;	author jimb;	state Exp;
branches;
next	1.118;

1.118
date	2003.01.22.23.50.35;	author drow;	state Exp;
branches;
next	1.117;

1.117
date	2003.01.13.18.00.16;	author drow;	state Exp;
branches;
next	1.116;

1.116
date	2003.01.04.23.47.12;	author drow;	state Exp;
branches;
next	1.115;

1.115
date	2003.01.04.19.35.15;	author kettenis;	state Exp;
branches;
next	1.114;

1.114
date	2003.01.04.19.27.19;	author kettenis;	state Exp;
branches;
next	1.113;

1.113
date	2003.01.04.01.03.41;	author kettenis;	state Exp;
branches;
next	1.112;

1.112
date	2003.01.04.00.34.42;	author kettenis;	state Exp;
branches;
next	1.111;

1.111
date	2003.01.03.23.19.27;	author kettenis;	state Exp;
branches;
next	1.110;

1.110
date	2003.01.03.14.45.47;	author kettenis;	state Exp;
branches;
next	1.109;

1.109
date	2003.01.02.22.59.00;	author kettenis;	state Exp;
branches;
next	1.108;

1.108
date	2003.01.02.22.49.30;	author kettenis;	state Exp;
branches;
next	1.107;

1.107
date	2003.01.02.20.29.15;	author kettenis;	state Exp;
branches;
next	1.106;

1.106
date	2003.01.02.20.12.29;	author kettenis;	state Exp;
branches;
next	1.105;

1.105
date	2003.01.02.19.35.29;	author kettenis;	state Exp;
branches;
next	1.104;

1.104
date	2003.01.02.16.54.54;	author kettenis;	state Exp;
branches;
next	1.103;

1.103
date	2003.01.02.14.47.01;	author kettenis;	state Exp;
branches;
next	1.102;

1.102
date	2003.01.02.11.45.34;	author kettenis;	state Exp;
branches;
next	1.101;

1.101
date	2003.01.02.11.14.33;	author kettenis;	state Exp;
branches;
next	1.100;

1.100
date	2003.01.02.00.51.28;	author kettenis;	state Exp;
branches;
next	1.99;

1.99
date	2003.01.01.23.50.45;	author kettenis;	state Exp;
branches;
next	1.98;

1.98
date	2002.12.31.13.05.02;	author kettenis;	state Exp;
branches;
next	1.97;

1.97
date	2002.12.31.12.41.00;	author kettenis;	state Exp;
branches;
next	1.96;

1.96
date	2002.11.29.00.29.27;	author brobecke;	state Exp;
branches;
next	1.95;

1.95
date	2002.11.27.19.13.10;	author hunt;	state Exp;
branches;
next	1.94;

1.94
date	2002.11.26.01.23.46;	author drow;	state Exp;
branches;
next	1.93;

1.93
date	2002.11.12.02.39.41;	author ezannoni;	state Exp;
branches
	1.93.2.1;
next	1.92;

1.92
date	2002.10.22.20.21.56;	author brobecke;	state Exp;
branches;
next	1.91;

1.91
date	2002.09.20.00.24.01;	author kevinb;	state Exp;
branches
	1.91.2.1
	1.91.4.1;
next	1.90;

1.90
date	2002.08.14.17.43.16;	author kseitz;	state Exp;
branches
	1.90.6.1;
next	1.89;

1.89
date	2002.07.09.22.59.36;	author brobecke;	state Exp;
branches;
next	1.88;

1.88
date	2002.06.21.23.48.39;	author tromey;	state Exp;
branches;
next	1.87;

1.87
date	2002.05.11.00.40.25;	author thorpej;	state Exp;
branches
	1.87.2.1
	1.87.4.1;
next	1.86;

1.86
date	2002.04.11.18.32.50;	author msnyder;	state Exp;
branches;
next	1.85;

1.85
date	2002.04.04.00.12.41;	author jimb;	state Exp;
branches;
next	1.84;

1.84
date	2002.03.15.00.44.49;	author rth;	state Exp;
branches;
next	1.83;

1.83
date	2002.03.06.21.16.00;	author aoliva;	state Exp;
branches;
next	1.82;

1.82
date	2002.02.24.04.31.13;	author cagney;	state Exp;
branches
	1.82.2.1;
next	1.81;

1.81
date	2002.02.23.21.54.25;	author cagney;	state Exp;
branches;
next	1.80;

1.80
date	2002.02.14.05.31.45;	author drow;	state Exp;
branches;
next	1.79;

1.79
date	2002.01.20.18.19.30;	author cagney;	state Exp;
branches;
next	1.78;

1.78
date	2002.01.05.22.06.38;	author cagney;	state Exp;
branches;
next	1.77;

1.77
date	2002.01.05.18.36.32;	author thorpej;	state Exp;
branches;
next	1.76;

1.76
date	2001.12.21.22.32.37;	author tromey;	state Exp;
branches;
next	1.75;

1.75
date	2001.12.07.17.57.05;	author hunt;	state Exp;
branches;
next	1.74;

1.74
date	2001.11.05.23.54.49;	author jimb;	state Exp;
branches;
next	1.73;

1.73
date	2001.10.31.01.57.04;	author cagney;	state Exp;
branches;
next	1.72;

1.72
date	2001.09.06.20.59.18;	author kseitz;	state Exp;
branches;
next	1.71;

1.71
date	2001.08.27.22.39.55;	author kettenis;	state Exp;
branches;
next	1.70;

1.70
date	2001.08.16.22.47.00;	author kseitz;	state Exp;
branches;
next	1.69;

1.69
date	2001.07.30.22.08.41;	author drow;	state Exp;
branches;
next	1.68;

1.68
date	2001.07.27.16.35.27;	author juanito;	state Exp;
branches
	1.68.2.1;
next	1.67;

1.67
date	2001.07.23.19.21.51;	author kettenis;	state Exp;
branches;
next	1.66;

1.66
date	2001.07.12.13.48.45;	author kettenis;	state Exp;
branches;
next	1.65;

1.65
date	2001.06.28.19.04.10;	author cagney;	state Exp;
branches;
next	1.64;

1.64
date	2001.06.22.16.01.31;	author jtc;	state Exp;
branches;
next	1.63;

1.63
date	2001.03.31.18.09.02;	author kettenis;	state Exp;
branches;
next	1.62;

1.62
date	2001.03.28.21.42.31;	author cagney;	state Exp;
branches;
next	1.61;

1.61
date	2001.03.23.16.05.29;	author dsmith;	state Exp;
branches;
next	1.60;

1.60
date	2001.03.20.02.57.42;	author kevinb;	state Exp;
branches;
next	1.59;

1.59
date	2001.03.19.05.46.26;	author kevinb;	state Exp;
branches;
next	1.58;

1.58
date	2001.03.06.08.21.06;	author kevinb;	state Exp;
branches;
next	1.57;

1.57
date	2001.03.06.00.52.30;	author kevinb;	state Exp;
branches;
next	1.56;

1.56
date	2001.02.14.18.48.40;	author msokolov;	state Exp;
branches;
next	1.55;

1.55
date	2001.01.31.02.08.23;	author cagney;	state Exp;
branches;
next	1.54;

1.54
date	2001.01.19.10.25.13;	author cagney;	state Exp;
branches;
next	1.53;

1.53
date	2000.12.21.16.16.17;	author fnasser;	state Exp;
branches;
next	1.52;

1.52
date	2000.12.20.21.24.26;	author fnasser;	state Exp;
branches;
next	1.51;

1.51
date	2000.12.11.22.36.26;	author fnasser;	state Exp;
branches;
next	1.50;

1.50
date	2000.12.11.21.11.16;	author fnasser;	state Exp;
branches;
next	1.49;

1.49
date	2000.12.11.20.21.57;	author fnasser;	state Exp;
branches;
next	1.48;

1.48
date	2000.12.11.18.59.47;	author fnasser;	state Exp;
branches;
next	1.47;

1.47
date	2000.12.02.15.40.56;	author cagney;	state Exp;
branches;
next	1.46;

1.46
date	2000.12.01.18.01.37;	author fnasser;	state Exp;
branches;
next	1.45;

1.45
date	2000.11.24.11.02.58;	author cagney;	state Exp;
branches;
next	1.44;

1.44
date	2000.09.11.17.57.07;	author kevinb;	state Exp;
branches;
next	1.43;

1.43
date	2000.08.30.00.58.58;	author msnyder;	state Exp;
branches;
next	1.42;

1.42
date	2000.08.10.17.04.33;	author kettenis;	state Exp;
branches;
next	1.41;

1.41
date	2000.08.02.11.11.47;	author cagney;	state Exp;
branches;
next	1.40;

1.40
date	2000.07.27.04.01.24;	author cagney;	state Exp;
branches;
next	1.39;

1.39
date	2000.07.05.10.55.17;	author cagney;	state Exp;
branches;
next	1.38;

1.38
date	2000.07.05.10.25.43;	author cagney;	state Exp;
branches;
next	1.37;

1.37
date	2000.06.12.06.09.04;	author cagney;	state Exp;
branches;
next	1.36;

1.36
date	2000.06.11.01.39.08;	author cagney;	state Exp;
branches;
next	1.35;

1.35
date	2000.06.09.03.35.09;	author fnasser;	state Exp;
branches;
next	1.34;

1.34
date	2000.06.08.04.00.56;	author cagney;	state Exp;
branches;
next	1.33;

1.33
date	2000.06.07.01.14.07;	author msnyder;	state Exp;
branches;
next	1.32;

1.32
date	2000.06.05.18.59.40;	author kettenis;	state Exp;
branches;
next	1.31;

1.31
date	2000.06.03.05.04.14;	author cgf;	state Exp;
branches;
next	1.30;

1.30
date	2000.06.03.03.27.30;	author cgf;	state Exp;
branches;
next	1.29;

1.29
date	2000.05.26.04.11.34;	author cagney;	state Exp;
branches;
next	1.28;

1.28
date	2000.05.25.17.18.01;	author kettenis;	state Exp;
branches;
next	1.27;

1.27
date	2000.05.25.06.49.01;	author cagney;	state Exp;
branches;
next	1.26;

1.26
date	2000.05.25.01.50.50;	author cagney;	state Exp;
branches;
next	1.25;

1.25
date	2000.05.23.11.28.14;	author cagney;	state Exp;
branches;
next	1.24;

1.24
date	2000.05.23.07.49.05;	author cagney;	state Exp;
branches;
next	1.23;

1.23
date	2000.05.17.08.46.20;	author cagney;	state Exp;
branches;
next	1.22;

1.22
date	2000.05.12.04.37.00;	author cagney;	state Exp;
branches;
next	1.21;

1.21
date	2000.04.14.10.13.50;	author kettenis;	state Exp;
branches;
next	1.20;

1.20
date	2000.04.13.05.33.41;	author cagney;	state Exp;
branches;
next	1.19;

1.19
date	2000.04.11.01.21.15;	author cagney;	state Exp;
branches;
next	1.18;

1.18
date	2000.04.08.11.13.17;	author schauer;	state Exp;
branches
	1.18.2.1;
next	1.17;

1.17
date	2000.04.07.08.57.39;	author cagney;	state Exp;
branches;
next	1.16;

1.16
date	2000.04.07.01.16.17;	author nsd;	state Exp;
branches;
next	1.15;

1.15
date	2000.04.04.02.08.52;	author hjl;	state Exp;
branches;
next	1.14;

1.14
date	2000.03.30.02.19.56;	author jason;	state Exp;
branches;
next	1.13;

1.13
date	2000.03.22.04.19.35;	author cagney;	state Exp;
branches;
next	1.12;

1.12
date	2000.03.20.06.41.24;	author cagney;	state Exp;
branches;
next	1.11;

1.11
date	2000.03.05.22.57.05;	author kettenis;	state Exp;
branches;
next	1.10;

1.10
date	2000.03.03.05.44.39;	author cagney;	state Exp;
branches;
next	1.9;

1.9
date	2000.03.03.02.50.24;	author cagney;	state Exp;
branches;
next	1.8;

1.8
date	2000.02.26.13.46.55;	author kettenis;	state Exp;
branches;
next	1.7;

1.7
date	2000.02.24.08.16.26;	author cagney;	state Exp;
branches;
next	1.6;

1.6
date	2000.02.24.07.27.51;	author cagney;	state Exp;
branches;
next	1.5;

1.5
date	2000.02.23.00.25.42;	author cagney;	state Exp;
branches;
next	1.4;

1.4
date	2000.02.16.23.35.19;	author fnasser;	state Exp;
branches;
next	1.3;

1.3
date	2000.02.16.13.42.25;	author kettenis;	state Exp;
branches;
next	1.2;

1.2
date	2000.02.08.16.25.08;	author ezannoni;	state Exp;
branches;
next	1.1;

1.1
date	99.04.16.01.33.59;	author shebs;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.04.16.01.33.59;	author shebs;	state Exp;
branches
	1.1.1.1.2.1;
next	1.1.1.2;

1.1.1.2
date	99.04.26.18.23.51;	author shebs;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	99.05.05.14.42.19;	author shebs;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	99.05.11.13.29.03;	author shebs;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	99.08.09.21.33.21;	author jsm;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	99.08.16.19.52.13;	author jsm;	state Exp;
branches;
next	1.1.1.7;

1.1.1.7
date	99.08.31.01.04.42;	author jsm;	state Exp;
branches;
next	1.1.1.8;

1.1.1.8
date	99.09.08.23.59.05;	author shebs;	state Exp;
branches;
next	1.1.1.9;

1.1.1.9
date	99.10.05.23.08.05;	author jsm;	state Exp;
branches;
next	1.1.1.10;

1.1.1.10
date	99.11.02.04.44.14;	author jsm;	state Exp;
branches;
next	1.1.1.11;

1.1.1.11
date	99.12.07.03.55.59;	author jsm;	state Exp;
branches;
next	1.1.1.12;

1.1.1.12
date	99.12.22.21.45.03;	author jsm;	state Exp;
branches;
next	1.1.1.13;

1.1.1.13
date	2000.01.06.03.06.35;	author jsm;	state Exp;
branches;
next	1.1.1.14;

1.1.1.14
date	2000.01.11.03.07.18;	author jsm;	state Exp;
branches;
next	1.1.1.15;

1.1.1.15
date	2000.01.18.00.54.09;	author jsm;	state Exp;
branches;
next	1.1.1.16;

1.1.1.16
date	2000.02.03.04.14.26;	author jsm;	state Exp;
branches;
next	1.1.1.17;

1.1.1.17
date	2000.02.05.07.29.40;	author jsm;	state Exp;
branches;
next	1.1.1.18;

1.1.1.18
date	2000.02.07.00.19.32;	author jsm;	state Exp;
branches;
next	;

1.1.1.1.2.1
date	99.05.27.00.11.13;	author jsm;	state Exp;
branches;
next	;

1.18.2.1
date	2000.04.13.05.29.42;	author cagney;	state Exp;
branches;
next	1.18.2.2;

1.18.2.2
date	2000.04.14.10.40.00;	author kettenis;	state Exp;
branches;
next	1.18.2.3;

1.18.2.3
date	2000.04.19.09.04.52;	author cagney;	state Exp;
branches;
next	1.18.2.4;

1.18.2.4
date	2000.05.11.00.32.18;	author cagney;	state Exp;
branches;
next	;

1.68.2.1
date	2001.08.02.21.30.22;	author drow;	state Exp;
branches;
next	;

1.82.2.1
date	2002.03.06.21.17.04;	author aoliva;	state Exp;
branches;
next	1.82.2.2;

1.82.2.2
date	2002.03.28.04.28.00;	author cagney;	state Exp;
branches;
next	;

1.87.2.1
date	2002.06.25.20.02.40;	author cagney;	state Exp;
branches;
next	;

1.87.4.1
date	2002.07.22.21.46.57;	author kseitz;	state Exp;
branches;
next	1.87.4.2;

1.87.4.2
date	2002.08.30.22.52.43;	author kseitz;	state Exp;
branches;
next	1.87.4.3;

1.87.4.3
date	2002.10.01.00.46.06;	author kseitz;	state Exp;
branches;
next	1.87.4.4;

1.87.4.4
date	2002.11.04.00.17.30;	author ezannoni;	state Exp;
branches;
next	;

1.90.6.1
date	2002.11.26.01.32.21;	author drow;	state Exp;
branches;
next	1.90.6.2;

1.90.6.2
date	2002.11.29.00.31.42;	author brobecke;	state Exp;
branches;
next	;

1.91.2.1
date	2002.10.25.23.49.53;	author carlton;	state Exp;
branches;
next	1.91.2.2;

1.91.2.2
date	2002.11.15.19.18.40;	author carlton;	state Exp;
branches;
next	1.91.2.3;

1.91.2.3
date	2002.12.23.19.38.17;	author carlton;	state Exp;
branches;
next	1.91.2.4;

1.91.2.4
date	2003.02.07.19.17.47;	author carlton;	state Exp;
branches;
next	1.91.2.5;

1.91.2.5
date	2003.03.06.00.56.26;	author carlton;	state Exp;
branches;
next	1.91.2.6;

1.91.2.6
date	2003.06.27.21.49.51;	author carlton;	state Exp;
branches;
next	1.91.2.7;

1.91.2.7
date	2003.09.17.21.28.12;	author carlton;	state Exp;
branches;
next	1.91.2.8;

1.91.2.8
date	2003.12.16.00.00.25;	author carlton;	state Exp;
branches;
next	1.91.2.9;

1.91.2.9
date	2004.01.26.19.11.21;	author carlton;	state Exp;
branches;
next	;

1.91.4.1
date	2002.10.26.17.12.05;	author drow;	state Exp;
branches;
next	1.91.4.2;

1.91.4.2
date	2003.12.14.20.27.09;	author drow;	state Exp;
branches;
next	1.91.4.3;

1.91.4.3
date	2004.01.13.16.11.53;	author drow;	state Exp;
branches;
next	1.91.4.4;

1.91.4.4
date	2004.02.09.19.43.35;	author drow;	state Exp;
branches;
next	;

1.93.2.1
date	2002.11.26.04.50.34;	author jimb;	state Exp;
branches;
next	1.93.2.2;

1.93.2.2
date	2002.12.17.04.18.13;	author jimb;	state Exp;
branches;
next	;

1.132.4.1
date	2003.11.14.22.01.11;	author kettenis;	state Exp;
branches;
next	;

1.147.2.1
date	2004.03.27.17.37.45;	author drow;	state Exp;
branches;
next	1.147.2.2;

1.147.2.2
date	2004.04.02.16.47.45;	author drow;	state Exp;
branches;
next	1.147.2.3;

1.147.2.3
date	2004.09.16.17.00.59;	author drow;	state Exp;
branches;
next	1.147.2.4;

1.147.2.4
date	2004.09.21.20.44.16;	author drow;	state Exp;
branches;
next	;

1.149.2.1
date	2004.04.29.14.30.49;	author cagney;	state Exp;
branches;
next	;

1.157.2.1
date	2004.07.17.11.29.08;	author kettenis;	state Exp;
branches;
next	;


desc
@@


1.180
log
@Index: ChangeLog
2005-01-07  Andrew Cagney  <cagney@@gnu.org>

	* configure.ac: Rename configure.in, require autoconf 2.59.
	* configure: Re-generate.

Index: doc/ChangeLog
2005-01-07  Andrew Cagney  <cagney@@gnu.org>

	* configure.ac: Rename configure.in, require autoconf 2.59.
	* configure: Re-generate.

Index: gdbserver/ChangeLog
2005-01-07  Andrew Cagney  <cagney@@gnu.org>

	* configure.ac: Rename configure.in, require autoconf 2.59.
	* configure: Re-generate.

Index: testsuite/ChangeLog
2005-01-07  Andrew Cagney  <cagney@@gnu.org>

	* configure.ac: Rename configure.in, require autoconf 2.59.
	* configure: Re-generate.
	* gdb.stabs/configure.ac: Rename configure.in, require autoconf 2.59.
	* gdb.stabs/configure: Re-generate.
	* gdb.hp/configure.ac: Rename configure.in, require autoconf 2.59.
	* gdb.hp/configure: Re-generate.
	* gdb.hp/gdb.objdbg/configure.ac: Rename configure.in, require
	autoconf 2.59.
	* gdb.hp/gdb.objdbg/configure: Re-generate.
	* gdb.hp/gdb.defects/configure.ac: Rename configure.in, require
	autoconf 2.59.
	* gdb.hp/gdb.defects/configure: Re-generate.
	* gdb.hp/gdb.compat/configure.ac: Rename configure.in, require
	autoconf 2.59.
	* gdb.hp/gdb.compat/configure: Re-generate.
	* gdb.hp/gdb.base-hp/configure.ac: Rename configure.in, require
	autoconf 2.59.
	* gdb.hp/gdb.base-hp/configure: Re-generate.
	* gdb.hp/gdb.aCC/configure.ac: Rename configure.in, require
	autoconf 2.59.
	* gdb.hp/gdb.aCC/configure: Re-generate.
@
text
@dnl Autoconf configure script for GDB, the GNU debugger.
dnl Copyright 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004
dnl Free Software Foundation, Inc.
dnl
dnl This file is part of GDB.
dnl 
dnl This program is free software; you can redistribute it and/or modify
dnl it under the terms of the GNU General Public License as published by
dnl the Free Software Foundation; either version 2 of the License, or
dnl (at your option) any later version.
dnl 
dnl This program is distributed in the hope that it will be useful,
dnl but WITHOUT ANY WARRANTY; without even the implied warranty of
dnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
dnl GNU General Public License for more details.
dnl 
dnl You should have received a copy of the GNU General Public License
dnl along with this program; if not, write to the Free Software
dnl Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

dnl Process this file with autoconf to produce a configure script.

AC_PREREQ(2.13)dnl
AC_INIT(main.c)
AC_CONFIG_HEADER(config.h:config.in)
AM_MAINTAINER_MODE

AC_PROG_CC
AC_GNU_SOURCE
AC_AIX
AC_ISC_POSIX
AM_PROG_CC_STDC

AC_CONFIG_AUX_DIR(`cd $srcdir;pwd`/..)
AC_CANONICAL_SYSTEM

# FIXME: kettenis/20030102: The AC_PROG_RANLIB from Autoconf 2.13
# doesn't support cross-compilation, but the one from Autoconf 2.5x
# does.  Override RANLIB here (i.e. before running AC_PROG_RANLIB) to
# deal with the lossage.  Note that CY_GNU_GETTEXT currently calls
# AC_PROG_RANLIB.  This can be removed when we switch to Autoconf
# 2.5x.
AC_CHECK_TOOL(RANLIB, ranlib, :)

dnl List of object files and targets accumulated by configure.

CONFIG_OBS=
CONFIG_DEPS=
CONFIG_SRCS=
ENABLE_CFLAGS=

CONFIG_ALL=
CONFIG_CLEAN=
CONFIG_INSTALL=
CONFIG_UNINSTALL=

dnl Set up for gettext.  PACKAGE is used when we call bindtextdomain.

CY_GNU_GETTEXT

localedir='${datadir}/locale'
AC_SUBST(localedir)

if test "x$POSUB" != x; then

  dnl Lifted from GCC's config/gettext.m4.
  AC_MSG_CHECKING(for catalogs to be installed)
  # Look for .po and .gmo files in the source directory.
  CATALOGS=  AC_SUBST(CATALOGS)
  XLINGUAS=
  for cat in $srcdir/po/*.gmo $srcdir/po/*.po; do
    # If there aren't any .gmo files the shell will give us the
    # literal string "../path/to/srcdir/po/*.gmo" which has to be
    # weeded out.
    case "$cat" in *\**)
      continue;;
    esac
    # The quadruple backslash is collapsed to a double backslash
    # by the backticks, then collapsed again by the double quotes,
    # leaving us with one backslash in the sed expression (right
    # before the dot that mustn't act as a wildcard).
    cat=`echo $cat | sed -e "s!$srcdir/!!" -e "s!\\\\.po!.gmo!"`
    lang=`echo $cat | sed -e 's!po/!!' -e "s!\\\\.gmo!!"`
    # The user is allowed to set LINGUAS to a list of languages to
    # install catalogs for.  If it's empty that means "all of them."
    if test "x$LINGUAS" = x; then
      CATALOGS="$CATALOGS $cat"
      XLINGUAS="$XLINGUAS $lang"
    else
      case "$LINGUAS" in *$lang*)
        CATALOGS="$CATALOGS $cat"
        XLINGUAS="$XLINGUAS $lang"
        ;;
      esac
    fi
  done
  LINGUAS="$XLINGUAS"
  AC_MSG_RESULT($LINGUAS)

   CONFIG_ALL="$CONFIG_ALL all-po"
   CONFIG_CLEAN="$CONFIG_CLEAN clean-po"		   
   CONFIG_INSTALL="$CONFIG_INSTALL install-po"
   CONFIG_UNINSTALL="$CONFIG_UNINSTALL uninstall-po"
fi

PACKAGE=gdb
AC_DEFINE_UNQUOTED(PACKAGE, "$PACKAGE", [Name of this package. ])
AC_SUBST(PACKAGE)

debugdir=${libdir}/debug
	 
AC_ARG_WITH(separate-debug-dir,
[  --with-separate-debug-dir=path   Look for global separate debug info in this path [LIBDIR/debug]],
[debugdir="${withval}"])
	
AC_DEFINE_DIR(DEBUGDIR, debugdir,
              [Global directory for separate debug files. ])
#AC_DEFINE_UNQUOTED(DEBUGDIR, "$debugdir"),

AC_CONFIG_SUBDIRS(doc testsuite)

. $srcdir/configure.host

. $srcdir/configure.tgt

# Fetch the default architecture and default target vector from BFD.
targ=$target; . $srcdir/../bfd/config.bfd

# We only want the first architecture, so strip off the others if
# there is more than one.
targ_archs=`echo $targ_archs | sed 's/ .*//'`

if test "x$targ_archs" != x; then
  AC_DEFINE_UNQUOTED(DEFAULT_BFD_ARCH, $targ_archs,
    [Define to BFD's default architecture. ])
fi
if test "x$targ_defvec" != x; then
  AC_DEFINE_UNQUOTED(DEFAULT_BFD_VEC, $targ_defvec,
    [Define to BFD's default target vector. ])
fi

AC_ARG_PROGRAM

# The CLI cannot be disabled yet, but may be in the future.

# Enable CLI.
AC_ARG_ENABLE(gdbcli,
[  --disable-gdbcli        disable command-line interface (CLI)],
  [case $enableval in
    yes)
      ;;
    no)
      AC_MSG_ERROR([the command-line interface cannot be disabled yet]) ;;
    *)
      AC_MSG_ERROR([bad value $enableval for --enable-gdbcli]) ;;
  esac],
  [enable_gdbcli=yes])
if test x"$enable_gdbcli" = xyes; then
  if test -d $srcdir/cli; then
    CONFIG_OBS="$CONFIG_OBS \$(SUBDIR_CLI_OBS)"
    CONFIG_DEPS="$CONFIG_DEPS \$(SUBDIR_CLI_DEPS)"
    CONFIG_SRCS="$CONFIG_SRCS \$(SUBDIR_CLI_SRCS)"
    ENABLE_CFLAGS="$ENABLE_CFLAGS \$(SUBDIR_CLI_CFLAGS)"
  fi
fi

# Enable MI.
AC_ARG_ENABLE(gdbmi,
[  --disable-gdbmi         disable machine-interface (MI)],
  [case $enableval in
    yes | no)
      ;;
    *)
      AC_MSG_ERROR([bad value $enableval for --enable-gdbmi]) ;;
  esac],
  [enable_gdbmi=yes])
if test x"$enable_gdbmi" = xyes; then
  if test -d $srcdir/mi; then
    CONFIG_OBS="$CONFIG_OBS \$(SUBDIR_MI_OBS)"
    CONFIG_DEPS="$CONFIG_DEPS \$(SUBDIR_MI_DEPS)"
    CONFIG_SRCS="$CONFIG_SRCS \$(SUBDIR_MI_SRCS)"
    ENABLE_CFLAGS="$ENABLE_CFLAGS \$(SUBDIR_MI_CFLAGS)"
  fi
fi

# Enable TUI.
AC_ARG_ENABLE(tui,
[  --enable-tui            enable full-screen terminal user interface (TUI)],
  [case $enableval in
    yes | no)
      ;;
    *)
      AC_MSG_ERROR([bad value $enableval for --enable-tui]) ;;
  esac],enable_tui=yes)

# Enable gdbtk.
AC_ARG_ENABLE(gdbtk,
[  --enable-gdbtk          enable gdbtk graphical user interface (GUI)],
  [case $enableval in
    yes | no)
      ;;
    *)
      AC_MSG_ERROR([bad value $enableval for --enable-gdbtk]) ;;
  esac],
  [if test -d $srcdir/gdbtk; then
    enable_gdbtk=yes
  else
    enable_gdbtk=no
  fi])
# We unconditionally disable gdbtk tests on selected platforms.
case $host_os in
  go32* | windows*)
    AC_MSG_WARN([gdbtk isn't supported on $host; disabling])
    enable_gdbtk=no ;;
esac

# Libunwind support.
AC_ARG_WITH(libunwind,
[  --with-libunwind            Use libunwind frame unwinding support],
[case "${withval}" in
  yes)  enable_libunwind=yes ;;
  no)   enable_libunwind=no ;;
  *)    AC_MSG_ERROR(bad value ${withval} for GDB with-libunwind option) ;;
esac],[
  AC_CHECK_HEADERS(libunwind.h)
  AC_CHECK_HEADERS(libunwind-ia64.h)
  if test x"$ac_cv_header_libunwind_h" = xyes -a x"$ac_cv_header_libunwind_ia64_h" = xyes; then
    enable_libunwind=yes;
  fi
])
   
if test x"$enable_libunwind" = xyes; then
  AC_CHECK_HEADERS(libunwind.h)
  AC_CHECK_HEADERS(libunwind-ia64.h)
  AC_DEFINE(HAVE_LIBUNWIND, 1)
  CONFIG_OBS="$CONFIG_OBS libunwind-frame.o"
  CONFIG_DEPS="$CONFIG_DEPS libunwind-frame.o"
  CONFIG_SRCS="$CONFIG_SRCS libunwind-frame.c"
fi

# Profiling support.
AC_ARG_ENABLE(profiling,
[  --enable-profiling      enable profiling of GDB],
  [case $enableval in
    yes | no)
      ;;
    *)
      AC_MSG_ERROR([bad value $enableval for --enable-profile]) ;;
  esac],
 [enable_profiling=no])

AC_CHECK_FUNCS(monstartup _mcleanup)
AC_CACHE_CHECK([for _etext], ac_cv_var__etext,
[AC_TRY_LINK(
[#include <stdlib.h>
extern char _etext;
],
[free (&_etext);], ac_cv_var__etext=yes, ac_cv_var__etext=no)])
if test $ac_cv_var__etext = yes; then
  AC_DEFINE(HAVE__ETEXT, 1,
            [Define to 1 if your system has the _etext variable. ])
fi
if test "$enable_profiling" = yes ; then
  if test $ac_cv_func_monstartup = no || test $ac_cv_func__mcleanup = no; then
    AC_MSG_ERROR(--enable-profiling requires monstartup and _mcleanup)
  fi
  PROFILE_CFLAGS=-pg
  OLD_CFLAGS="$CFLAGS"
  CFLAGS="$CFLAGS $PROFILE_CFLAGS"

  AC_CACHE_CHECK([whether $CC supports -pg], ac_cv_cc_supports_pg,
    [AC_TRY_COMPILE([], [int x;], ac_cv_cc_supports_pg=yes,
     ac_cv_cc_supports_pg=no)])

  if test $ac_cv_cc_supports_pg = no; then
    AC_MSG_ERROR(--enable-profiling requires a compiler which supports -pg)
  fi

  CFLAGS="$OLD_CFLAGS"
fi

# --------------------- #
# Checks for programs.  #
# --------------------- #

AC_PROG_AWK
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_RANLIB
AC_PROG_YACC

AC_CHECK_TOOL(AR, ar)
AC_CHECK_TOOL(DLLTOOL, dlltool)
AC_CHECK_TOOL(WINDRES, windres)

# Needed for GNU/Hurd.
AC_CHECK_TOOL(MIG, mig)

# ---------------------- #
# Checks for libraries.  #
# ---------------------- #

# We might need to link with -lm; most simulators need it.
AC_CHECK_LIB(m, main)

# We need to link with -lw to get `wctype' on Solaris before Solaris
# 2.6.  Solaris 2.6 and beyond have this function in libc, and have a
# libw that some versions of the GNU linker cannot hanle (GNU ld 2.9.1
# is known to have this problem).  Therefore we avoid libw if we can.
AC_CHECK_FUNC(wctype, [],
  [AC_CHECK_LIB(w, wctype)])

# Some systems (e.g. Solaris) have `gethostbyname' in libnsl.
AC_SEARCH_LIBS(gethostbyname, nsl)

# Some systems (e.g. Solaris) have `socketpair' in libsocket.
AC_SEARCH_LIBS(socketpair, socket)

# For the TUI, we need enhanced curses functionality.
#
# FIXME: kettenis/20040905: We prefer ncurses over the vendor-supplied
# curses library because the latter might not provide all the
# functionality we need.  However, this leads to problems on systems
# where the linker searches /usr/local/lib, but the compiler doesn't
# search /usr/local/include, if ncurses is installed in /usr/local.  A
# default installation of ncurses on alpha*-dec-osf* will lead to such
# a situation.
AC_SEARCH_LIBS(waddstr, [ncurses cursesX curses])

# Since GDB uses Readline, we need termcap functionality.  In many
# cases this will be provided by the curses library, but some systems
# have a seperate termcap library, or no curses library at all.

case $host_os in
  cygwin*)
    if test -d $srcdir/libtermcap; then
      LIBS="../libtermcap/libtermcap.a $LIBS"
      ac_cv_search_tgetent="../libtermcap/libtermcap.a"
    fi ;;
  go32* | *djgpp*)
    ac_cv_search_tgetent="none required"
    ;;
esac

# These are the libraries checked by Readline.
AC_SEARCH_LIBS(tgetent, [termcap tinfo curses ncurses])

if test "$ac_cv_search_tgetent" = no; then
  AC_MSG_ERROR([no termcap library found])
fi

# ------------------------- #
# Checks for header files.  #
# ------------------------- #

AC_HEADER_DIRENT
AC_HEADER_STAT
AC_HEADER_STDC
AC_CHECK_HEADERS(link.h)
AC_CHECK_HEADERS(machine/reg.h)
AC_CHECK_HEADERS(nlist.h)
AC_CHECK_HEADERS(poll.h sys/poll.h)
AC_CHECK_HEADERS(proc_service.h thread_db.h gnu/libc-version.h)
AC_CHECK_HEADERS(stddef.h)
AC_CHECK_HEADERS(stdlib.h)
AC_CHECK_HEADERS(stdint.h)
AC_CHECK_HEADERS(string.h memory.h strings.h)
AC_CHECK_HEADERS(sys/fault.h)
AC_CHECK_HEADERS(sys/file.h)
AC_CHECK_HEADERS(sys/filio.h)
AC_CHECK_HEADERS(sys/ioctl.h)
AC_CHECK_HEADERS(sys/param.h)
AC_CHECK_HEADERS(sys/proc.h)
AC_CHECK_HEADERS(sys/procfs.h)
AC_CHECK_HEADERS(sys/ptrace.h ptrace.h)
AC_CHECK_HEADERS(sys/reg.h sys/debugreg.h)
AC_CHECK_HEADERS(sys/select.h)
AC_CHECK_HEADERS(sys/syscall.h)
AC_CHECK_HEADERS(sys/types.h)
AC_CHECK_HEADERS(sys/user.h)
AC_CHECK_HEADERS(sys/wait.h wait.h)
AC_CHECK_HEADERS(termios.h termio.h sgtty.h)
AC_CHECK_HEADERS(unistd.h)

# On Solaris 2.[789], we need to define _MSE_INT_H to avoid a clash
# between <widec.h> and <wchar.h> that would cause AC_CHECK_HEADERS to
# think that we don't have <curses.h> if we're using GCC.
case $host_os in
  solaris2.[[789]])
    if test "$GCC" = yes; then
      AC_DEFINE(_MSE_INT_H, 1,
        [[Define to 1 to avoid a clash between <widec.h> and <wchar.h> on
   Solaris 2.[789] when using GCC. ]])
    fi ;;
esac
AC_CHECK_HEADERS(curses.h cursesX.h ncurses.h ncurses/ncurses.h)
AC_CHECK_HEADERS(ncurses/term.h term.h)

# FIXME: kettenis/20030102: In most cases we include these
# unconditionally, so what's the point in checking these?
AC_CHECK_HEADERS(ctype.h time.h)

dnl Check for struct stat with an st_blocks member
AC_MSG_CHECKING(for member st_blocks in struct stat)
AC_CACHE_VAL(gdb_cv_have_struct_stat_with_st_blocks_member,
  [AC_TRY_COMPILE([#include <sys/types.h>
#include <sys/stat.h>],
                  [struct stat st; (void) st.st_blocks;],
                  gdb_cv_have_struct_stat_with_st_blocks_member=yes,
                  gdb_cv_have_struct_stat_with_st_blocks_member=no)])
AC_MSG_RESULT($gdb_cv_have_struct_stat_with_st_blocks_member)
if test $gdb_cv_have_struct_stat_with_st_blocks_member = yes; then
  AC_DEFINE(HAVE_STRUCT_STAT_ST_BLOCKS)
fi

# ------------------------- #
# Checks for declarations.  #
# ------------------------- #

gcc_AC_CHECK_DECLS(getopt)

# ------------------ #
# Checks for types.  #
# ------------------ #

AC_TYPE_SIGNAL

# ------------------------------------- #
# Checks for compiler characteristics.  #
# ------------------------------------- #

AC_C_CONST
AC_C_INLINE

# ------------------------------ #
# Checks for library functions.  #
# ------------------------------ #

AC_FUNC_ALLOCA
AC_FUNC_MMAP
AC_FUNC_VFORK
AC_CHECK_FUNCS(canonicalize_file_name realpath)
AC_CHECK_FUNCS(poll)
AC_CHECK_FUNCS(pread64)
AC_CHECK_FUNCS(sbrk)
AC_CHECK_FUNCS(setpgid setpgrp)
AC_CHECK_FUNCS(sigaction sigprocmask sigsetmask)
AC_CHECK_FUNCS(socketpair)
AC_CHECK_FUNCS(syscall)
AC_CHECK_FUNCS(ttrace)
AC_CHECK_FUNCS(wborder)

# Check the return and argument types of ptrace.  No canned test for
# this, so roll our own.
gdb_ptrace_headers='
#if HAVE_SYS_TYPES_H
# include <sys/types.h>
#endif
#if HAVE_SYS_PTRACE_H
# include <sys/ptrace.h>
#endif
#if HAVE_UNISTD_H
# include <unistd.h>
#endif
'
# There is no point in checking if we don't have a prototype.
gcc_AC_CHECK_DECLS(ptrace, , [
  : ${gdb_cv_func_ptrace_ret='int'}
  : ${gdb_cv_func_ptrace_args='int,int,long,long'}
], $gdb_ptrace_headers)
# Check return type.
AC_CACHE_CHECK([return type of ptrace], gdb_cv_func_ptrace_ret,
  AC_TRY_COMPILE($gdb_ptrace_headers,
    [extern int ptrace ();],
    gdb_cv_func_ptrace_ret='int',
    gdb_cv_func_ptrace_ret='long'))
AC_DEFINE_UNQUOTED(PTRACE_TYPE_RET, $gdb_cv_func_ptrace_ret,
  [Define as the return type of ptrace.])
# Check argument types.
AC_CACHE_CHECK([types of arguments for ptrace], gdb_cv_func_ptrace_args, [
for gdb_arg1 in 'int' 'long'; do
 for gdb_arg2 in 'pid_t' 'int' 'long'; do
  for gdb_arg3 in 'int *' 'caddr_t' 'int' 'long'; do
   for gdb_arg4 in 'int' 'long'; do
     AC_TRY_COMPILE($gdb_ptrace_headers, [
extern $gdb_cv_func_ptrace_ret
  ptrace ($gdb_arg1, $gdb_arg2, $gdb_arg3, $gdb_arg4);
], [gdb_cv_func_ptrace_args="$gdb_arg1,$gdb_arg2,$gdb_arg3,$gdb_arg4";
    break 4;])
    for gdb_arg5 in 'int *' 'int' 'long'; do
     AC_TRY_COMPILE($gdb_ptrace_headers, [
extern $gdb_cv_func_ptrace_ret
  ptrace ($gdb_arg1, $gdb_arg2, $gdb_arg3, $gdb_arg4, $gdb_arg5);
], [
gdb_cv_func_ptrace_args="$gdb_arg1,$gdb_arg2,$gdb_arg3,$gdb_arg4,$gdb_arg5";
    break 5;])
    done
   done
  done
 done
done
# Provide a safe default value.
: ${gdb_cv_func_ptrace_args='int,int,long,long'}
])
ac_save_IFS=$IFS; IFS=','
set dummy `echo "$gdb_cv_func_ptrace_args" | sed 's/\*/\*/g'`
IFS=$ac_save_IFS
shift
AC_DEFINE_UNQUOTED(PTRACE_TYPE_ARG3, $[3],
  [Define to the type of arg 3 for ptrace.])
if test -n "$[5]"; then
  AC_DEFINE_UNQUOTED(PTRACE_TYPE_ARG5, $[5],
    [Define to the type of arg 5 for ptrace.])
fi

dnl AC_FUNC_SETPGRP does not work when cross compiling
dnl Instead, assume we will have a prototype for setpgrp if cross compiling.
if test "$cross_compiling" = no; then
  AC_FUNC_SETPGRP
else
  AC_CACHE_CHECK([whether setpgrp takes no argument], ac_cv_func_setpgrp_void,
    [AC_TRY_COMPILE([
#include <unistd.h>
], [
  if (setpgrp(1,1) == -1)
    exit (0);
  else
    exit (1);
], ac_cv_func_setpgrp_void=no, ac_cv_func_setpgrp_void=yes)])
if test $ac_cv_func_setpgrp_void = yes; then
  AC_DEFINE(SETPGRP_VOID, 1)
fi
fi

# Check if sigsetjmp is available.  Using AC_CHECK_FUNCS won't do
# since sigsetjmp might only be defined as a macro.
AC_CACHE_CHECK([for sigsetjmp], gdb_cv_func_sigsetjmp,
[AC_TRY_COMPILE([
#include <setjmp.h>
], [sigjmp_buf env; while (! sigsetjmp (env, 1)) siglongjmp (env, 1);],
gdb_cv_func_sigsetjmp=yes, gdb_cv_func_sigsetjmp=no)])
if test $gdb_cv_func_sigsetjmp = yes; then
  AC_DEFINE(HAVE_SIGSETJMP, 1, [Define if sigsetjmp is available. ])
fi

# Assume we'll default to using the included libiberty regex.
gdb_use_included_regex=yes

# However, if the system regex is GNU regex, then default to *not*
# using the included regex.
AC_CACHE_CHECK(
  [for GNU regex],
  [gdb_cv_have_gnu_regex],
  [AC_TRY_COMPILE(
    [#include <gnu-versions.h>],
    [#define REGEX_INTERFACE_VERSION 1
#if _GNU_REGEX_INTERFACE_VERSION != REGEX_INTERFACE_VERSION
# error "Version mismatch"
#endif],
    gdb_cv_have_gnu_regex=yes,
    gdb_cv_have_gnu_regex=no)])
if test $gdb_cv_have_gnu_regex = yes; then
  gdb_use_included_regex=no
fi

AC_ARG_WITH(included-regex,
  [  --without-included-regex don't use included regex; this is the default
                          on systems with version 2 of the GNU C library
                          (use with caution on other system)],
  gdb_with_regex=$withval,
  gdb_with_regex=$gdb_use_included_regex)
if test "$gdb_with_regex" = yes; then
  AC_DEFINE(USE_INCLUDED_REGEX, 1,
    [Define to 1 if the regex included in libiberty should be used.])
fi

# See if <sys/proc.h> defines `struct thread' with a td_pcb member.
AC_CACHE_CHECK([for td_pcb in struct thread], gdb_cv_struct_thread_td_pcb,
[AC_TRY_COMPILE([#include <sys/param.h>
#include <sys/proc.h>], [struct thread td; td.td_pcb;],
gdb_cv_struct_thread_td_pcb=yes, gdb_cv_struct_thread_td_pcb=no)])
if test $gdb_cv_struct_thread_td_pcb = yes; then
  AC_DEFINE(HAVE_STRUCT_THREAD_TD_PCB, 1,
            [Define to 1 if your system has td_pcb in struct thread.])
fi

# See if <sys/lwp.h> defines `struct lwp`.
AC_CACHE_CHECK([for struct lwp], gdb_cv_struct_lwp,
[AC_TRY_COMPILE([#include <sys/param.h>
#include <sys/lwp.h>], [struct lwp l;],
gdb_cv_struct_lwp=yes, gdb_cv_struct_lwp=no)])
if test $gdb_cv_struct_lwp = yes; then
  AC_DEFINE(HAVE_STRUCT_LWP, 1,
            [Define to 1 if your system has struct lwp.])
fi

# See if <machine/reg.h> degines `struct reg'.
AC_CACHE_CHECK([for struct reg in machine/reg.h], gdb_cv_struct_reg,
[AC_TRY_COMPILE([#include <sys/types.h>
#include <machine/reg.h>], [struct reg r;],
gdb_cv_struct_reg=yes, gdb_cv_struct_reg=no)])
if test $gdb_cv_struct_reg = yes; then
  AC_DEFINE(HAVE_STRUCT_REG, 1,
            [Define to 1 if your system has struct reg in <machine/reg.h>.])
fi

# See if <machine/reg.h> supports the %fs and %gs i386 segment registers.
# Older i386 BSD's don't have the r_fs and r_gs members of `struct reg'.
AC_CACHE_CHECK([for r_fs in struct reg], gdb_cv_struct_reg_r_fs,
[AC_TRY_COMPILE([#include <machine/reg.h>], [struct reg r; r.r_fs;],
gdb_cv_struct_reg_r_fs=yes, gdb_cv_struct_reg_r_fs=no)])
if test $gdb_cv_struct_reg_r_fs = yes; then
  AC_DEFINE(HAVE_STRUCT_REG_R_FS)
fi
AC_CACHE_CHECK([for r_gs in struct reg], gdb_cv_struct_reg_r_gs,
[AC_TRY_COMPILE([#include <machine/reg.h>], [struct reg r; r.r_gs;],
gdb_cv_struct_reg_r_gs=yes, gdb_cv_struct_reg_r_gs=no)])
if test $gdb_cv_struct_reg_r_gs = yes; then
  AC_DEFINE(HAVE_STRUCT_REG_R_GS)
fi

# See if <sys/ptrace.h> provides the PTRACE_GETREGS request.
AC_MSG_CHECKING(for PTRACE_GETREGS)
AC_CACHE_VAL(gdb_cv_have_ptrace_getregs,
[AC_TRY_COMPILE([#include <sys/ptrace.h>],
		[PTRACE_GETREGS;],
		[gdb_cv_have_ptrace_getregs=yes],
		[gdb_cv_have_ptrace_getregs=no])])
AC_MSG_RESULT($gdb_cv_have_ptrace_getregs)
if test $gdb_cv_have_ptrace_getregs = yes; then
  AC_DEFINE(HAVE_PTRACE_GETREGS)
fi

# See if <sys/ptrace.h> provides the PTRACE_GETFPXREGS request.
AC_MSG_CHECKING(for PTRACE_GETFPXREGS)
AC_CACHE_VAL(gdb_cv_have_ptrace_getfpxregs,
[AC_TRY_COMPILE([#include <sys/ptrace.h>],
		[PTRACE_GETFPXREGS;],
		[gdb_cv_have_ptrace_getfpxregs=yes],
		[gdb_cv_have_ptrace_getfpxregs=no])])
AC_MSG_RESULT($gdb_cv_have_ptrace_getfpxregs)
if test $gdb_cv_have_ptrace_getfpxregs = yes; then
  AC_DEFINE(HAVE_PTRACE_GETFPXREGS)
fi

# See if <sys/ptrace.h> provides the PT_GETDBREGS request.
AC_MSG_CHECKING(for PT_GETDBREGS)
AC_CACHE_VAL(gdb_cv_have_pt_getdbregs,
[AC_TRY_COMPILE([#include <sys/types.h>
#include <sys/ptrace.h>],
		[PT_GETDBREGS;],
		[gdb_cv_have_pt_getdbregs=yes],
		[gdb_cv_have_pt_getdbregs=no])])
AC_MSG_RESULT($gdb_cv_have_pt_getdbregs)
if test $gdb_cv_have_pt_getdbregs = yes; then
  AC_DEFINE(HAVE_PT_GETDBREGS)
fi

# See if <sys/ptrace.h> provides the PT_GETXMMREGS request.
AC_MSG_CHECKING(for PT_GETXMMREGS)
AC_CACHE_VAL(gdb_cv_have_pt_getxmmregs,
[AC_TRY_COMPILE([#include <sys/types.h>
#include <sys/ptrace.h>],
		[PT_GETXMMREGS;],
		[gdb_cv_have_pt_getxmmregs=yes],
		[gdb_cv_have_pt_getxmmregs=no])])
AC_MSG_RESULT($gdb_cv_have_pt_getxmmregs)
if test $gdb_cv_have_pt_getxmmregs = yes; then
  AC_DEFINE(HAVE_PT_GETXMMREGS)
fi

# See if stdint.h provides the uintptr_t type.
# Autoconf 2.5X has an improved AC_CHECK_TYPE which will simplify this.
AC_CACHE_CHECK([for uintptr_t in stdint.h], gdb_cv_have_uintptr_t,
  [AC_TRY_COMPILE(
    [#include <stdint.h>],
    [uintptr_t foo = 0;],
    gdb_cv_have_uintptr_t=yes,
    gdb_cv_have_uintptr_t=no)])
if test $gdb_cv_have_uintptr_t = yes; then
  AC_DEFINE(HAVE_UINTPTR_T, 1, [Define if <stdint.h> provides the uintptr_t type.])
fi

BFD_NEED_DECLARATION(malloc)
BFD_NEED_DECLARATION(realloc)
BFD_NEED_DECLARATION(free)
BFD_NEED_DECLARATION(strerror)
BFD_NEED_DECLARATION(strdup)
BFD_NEED_DECLARATION(strstr)
BFD_NEED_DECLARATION(canonicalize_file_name)

# The following save_state_t checkery is only necessary for HPUX 
# versions earlier than 10.20.  When those fade from memory, this 
# could be expunged. --jsm 1999-03-22

AC_MSG_CHECKING(for HPUX save_state structure)
AC_EGREP_HEADER(save_state_t, machine/save_state.h, 
                gdb_cv_hpux_savestate=yes, gdb_cv_hpux_savestate=no)
AC_EGREP_HEADER(ss_wide, machine/save_state.h, gdb_cv_hpux_sswide=yes,
                gdb_cv_hpux_sswide=no)
if test $gdb_cv_hpux_savestate = yes
then
  AC_DEFINE(HAVE_STRUCT_SAVE_STATE_T, 1)
fi
if test $gdb_cv_hpux_sswide = yes
then
  AC_DEFINE(HAVE_STRUCT_MEMBER_SS_WIDE, 1)
fi
AC_MSG_RESULT($gdb_cv_hpux_sswide)


# If we are configured native on GNU/Linux, work around problems with
# sys/procfs.h
# Also detect which type of /proc is in use, such as for Unixware or Solaris.

if test "${target}" = "${host}"; then
  case "${host}" in
  i[[3456]]86-*-linux*)
	AC_DEFINE(START_INFERIOR_TRAPS_EXPECTED,2)
	AC_DEFINE(sys_quotactl)
	;;
  ia64-*-aix*)
      AC_DEFINE(NEW_PROC_API)
      ;;
  *-*-unixware* | *-*-sysv4.2* | *-*-sysv5* | *-*-interix* )
      AC_DEFINE(NEW_PROC_API)
      ;;
  *-*-solaris2.[[6789]] | *-*-solaris2.1[[0-9]])
      AC_DEFINE(NEW_PROC_API)
      ;;
  mips-sgi-irix5*)
      # Work around <sys/proc.h> needing _KMEMUSER problem on IRIX 5.
      AC_DEFINE([_KMEMUSER], 1)
      ;;
  esac
fi

if test "$ac_cv_header_sys_procfs_h" = yes; then
  BFD_HAVE_SYS_PROCFS_TYPE(pstatus_t)
  BFD_HAVE_SYS_PROCFS_TYPE(prrun_t)
  BFD_HAVE_SYS_PROCFS_TYPE(gregset_t)
  BFD_HAVE_SYS_PROCFS_TYPE(fpregset_t)
  BFD_HAVE_SYS_PROCFS_TYPE(prgregset_t)
  BFD_HAVE_SYS_PROCFS_TYPE(prfpregset_t)
  BFD_HAVE_SYS_PROCFS_TYPE(prgregset32_t)
  BFD_HAVE_SYS_PROCFS_TYPE(prfpregset32_t)
  BFD_HAVE_SYS_PROCFS_TYPE(lwpid_t)
  BFD_HAVE_SYS_PROCFS_TYPE(psaddr_t)
  BFD_HAVE_SYS_PROCFS_TYPE(prsysent_t)
  BFD_HAVE_SYS_PROCFS_TYPE(pr_sigset_t)
  BFD_HAVE_SYS_PROCFS_TYPE(pr_sigaction64_t)
  BFD_HAVE_SYS_PROCFS_TYPE(pr_siginfo64_t)


  dnl Check for broken prfpregset_t type

  dnl For Linux/i386, glibc 2.1.3 was released with a bogus
  dnl prfpregset_t type (it's a typedef for the pointer to a struct
  dnl instead of the struct itself).  We detect this here, and work
  dnl around it in gdb_proc_service.h.

  if test $bfd_cv_have_sys_procfs_type_prfpregset_t = yes; then
    AC_MSG_CHECKING(whether prfpregset_t type is broken)
    AC_CACHE_VAL(gdb_cv_prfpregset_t_broken,
      [AC_TRY_RUN([#include <sys/procfs.h>
       int main ()
       {
         if (sizeof (prfpregset_t) == sizeof (void *))
           return 1;
         return 0;
       }],
       gdb_cv_prfpregset_t_broken=no,
       gdb_cv_prfpregset_t_broken=yes,
       gdb_cv_prfpregset_t_broken=yes)])
    AC_MSG_RESULT($gdb_cv_prfpregset_t_broken)
    if test $gdb_cv_prfpregset_t_broken = yes; then
      AC_DEFINE(PRFPREGSET_T_BROKEN)
    fi
  fi

  dnl Check for PIOCSET ioctl entry 

  AC_MSG_CHECKING(for PIOCSET ioctl entry in sys/procfs.h)
  AC_CACHE_VAL(gdb_cv_have_procfs_piocset,
  [AC_TRY_COMPILE([#include <unistd.h>
#include <sys/types.h>
#include <sys/procfs.h>
], [
    int dummy;;
    dummy = ioctl(0, PIOCSET, &dummy);
  ],
  gdb_cv_have_procfs_piocset=yes, gdb_cv_have_procfs_piocset=no)])
  AC_MSG_RESULT($gdb_cv_have_procfs_piocset)
  if test $gdb_cv_have_procfs_piocset = yes; then
    AC_DEFINE(HAVE_PROCFS_PIOCSET)
  fi
fi

dnl For native ports (host == target), check to see what kind of
dnl legacy link.h support is needed.  (See solib-legacy.c.)
if test ${host} = ${target} ; then
  dnl Check for struct link_map with l_ members which are indicative
  dnl of SVR4-like shared libraries

  AC_MSG_CHECKING(for member l_addr in struct link_map)
  AC_CACHE_VAL(gdb_cv_have_struct_link_map_with_l_members,
    [AC_TRY_COMPILE([#include <link.h>],
                    [struct link_map lm; (void) lm.l_addr;],
                    gdb_cv_have_struct_link_map_with_l_members=yes,
                    gdb_cv_have_struct_link_map_with_l_members=no)])
  AC_MSG_RESULT($gdb_cv_have_struct_link_map_with_l_members)
  if test $gdb_cv_have_struct_link_map_with_l_members = yes; then
    AC_DEFINE(HAVE_STRUCT_LINK_MAP_WITH_L_MEMBERS)
  fi

  dnl Check for struct link_map with lm_ members which are indicative
  dnl of SunOS-like shared libraries

  AC_MSG_CHECKING(for member lm_addr in struct link_map)
  AC_CACHE_VAL(gdb_cv_have_struct_link_map_with_lm_members,
    [AC_TRY_COMPILE([#include <sys/types.h>
#include <link.h>],
                    [struct link_map lm; (void) lm.lm_addr;],
                    gdb_cv_have_struct_link_map_with_lm_members=yes,
                    gdb_cv_have_struct_link_map_with_lm_members=no)])
  AC_MSG_RESULT($gdb_cv_have_struct_link_map_with_lm_members)
  if test $gdb_cv_have_struct_link_map_with_lm_members = yes; then
    AC_DEFINE(HAVE_STRUCT_LINK_MAP_WITH_LM_MEMBERS)
  fi

  dnl Check for struct so_map with som_ members which are found on 
  dnl some *BSD systems.

  AC_MSG_CHECKING(for member som_addr in struct so_map)
  AC_CACHE_VAL(gdb_cv_have_struct_so_map_with_som_members,
    [AC_TRY_COMPILE([#include <sys/types.h>
#ifdef HAVE_NLIST_H
#include <nlist.h>
#endif
#include <link.h>],
                    [struct so_map lm; (void) lm.som_addr;],
                    gdb_cv_have_struct_so_map_with_som_members=yes,
                    gdb_cv_have_struct_so_map_with_som_members=no)])
  AC_MSG_RESULT($gdb_cv_have_struct_so_map_with_som_members)
  if test $gdb_cv_have_struct_so_map_with_som_members = yes; then
    AC_DEFINE(HAVE_STRUCT_SO_MAP_WITH_SOM_MEMBERS)
  fi

  dnl Check for struct link_map32 type, which allows a 64-bit Solaris
  dnl debugger to debug a 32-bit Solaris app with 32-bit shared libraries.

  AC_MSG_CHECKING(for struct link_map32 in sys/link.h)
  AC_CACHE_VAL(gdb_cv_have_struct_link_map32, 
    [AC_TRY_COMPILE([#define _SYSCALL32
#include <sys/link.h>], [struct link_map32 l;],
     gdb_cv_have_struct_link_map32=yes,
     gdb_cv_have_struct_link_map32=no)])
  AC_MSG_RESULT($gdb_cv_have_struct_link_map32)
  if test $gdb_cv_have_struct_link_map32 = yes; then
    AC_DEFINE(HAVE_STRUCT_LINK_MAP32)
    AC_DEFINE(_SYSCALL32)
  fi
fi

dnl See if compiler supports "long long" type.

AC_MSG_CHECKING(for long long support in compiler)
AC_CACHE_VAL(gdb_cv_c_long_long,
[AC_TRY_COMPILE(, [
  extern long long foo;
  switch (foo & 2) { case 0: return 1; }
],
gdb_cv_c_long_long=yes, gdb_cv_c_long_long=no)])
AC_MSG_RESULT($gdb_cv_c_long_long)
if test $gdb_cv_c_long_long = yes; then
  AC_DEFINE(CC_HAS_LONG_LONG)
fi

dnl See if the compiler and runtime support printing long long

AC_MSG_CHECKING(for long long support in printf)
AC_CACHE_VAL(gdb_cv_printf_has_long_long,
[AC_TRY_RUN([
int main () {
  char buf[32];
  long long l = 0;
  l = (l << 16) + 0x0123;
  l = (l << 16) + 0x4567;
  l = (l << 16) + 0x89ab;
  l = (l << 16) + 0xcdef;
  sprintf (buf, "0x%016llx", l);
  return (strcmp ("0x0123456789abcdef", buf));
}],
gdb_cv_printf_has_long_long=yes,
gdb_cv_printf_has_long_long=no,
gdb_cv_printf_has_long_long=no)])
if test $gdb_cv_printf_has_long_long = yes; then
  AC_DEFINE(PRINTF_HAS_LONG_LONG)
fi
AC_MSG_RESULT($gdb_cv_printf_has_long_long)

dnl See if compiler supports "long double" type.  Can't use AC_C_LONG_DOUBLE
dnl because autoconf complains about cross-compilation issues.  However, this
dnl code uses the same variables as the macro for compatibility.

AC_MSG_CHECKING(for long double support in compiler)
AC_CACHE_VAL(ac_cv_c_long_double,
[AC_TRY_COMPILE(, [long double foo;],
ac_cv_c_long_double=yes, ac_cv_c_long_double=no)])
AC_MSG_RESULT($ac_cv_c_long_double)
if test $ac_cv_c_long_double = yes; then
  AC_DEFINE(HAVE_LONG_DOUBLE)
fi

dnl See if the compiler and runtime support printing long doubles

AC_MSG_CHECKING(for long double support in printf)
AC_CACHE_VAL(gdb_cv_printf_has_long_double,
[AC_TRY_RUN([
int main () {
  char buf[16];
  long double f = 3.141592653;
  sprintf (buf, "%Lg", f);
  return (strncmp ("3.14159", buf, 7));
}],
gdb_cv_printf_has_long_double=yes,
gdb_cv_printf_has_long_double=no,
gdb_cv_printf_has_long_double=no)])
if test $gdb_cv_printf_has_long_double = yes; then
  AC_DEFINE(PRINTF_HAS_LONG_DOUBLE)
fi
AC_MSG_RESULT($gdb_cv_printf_has_long_double)

dnl See if the compiler and runtime support scanning long doubles

AC_MSG_CHECKING(for long double support in scanf)
AC_CACHE_VAL(gdb_cv_scanf_has_long_double,
[AC_TRY_RUN([
int main () {
  char *buf = "3.141592653";
  long double f = 0;
  sscanf (buf, "%Lg", &f);
  return !(f > 3.14159 && f < 3.14160);
}],
gdb_cv_scanf_has_long_double=yes,
gdb_cv_scanf_has_long_double=no,
gdb_cv_scanf_has_long_double=no)])
if test $gdb_cv_scanf_has_long_double = yes; then
  AC_DEFINE(SCANF_HAS_LONG_DOUBLE)
fi
AC_MSG_RESULT($gdb_cv_scanf_has_long_double)

case ${host_os} in
aix*)
  AC_CACHE_CHECK([for -bbigtoc option], [gdb_cv_bigtoc], [
    SAVE_LDFLAGS=$LDFLAGS

    case $GCC in
    yes) gdb_cv_bigtoc=-Wl,-bbigtoc ;;
    *) gdb_cv_bigtoc=-bbigtoc ;;
    esac

    LDFLAGS=$LDFLAGS\ $gdb_cv_bigtoc
    AC_TRY_LINK([], [int i;], [], [gdb_cv_bigtoc=])
    LDFLAGS="${SAVE_LDFLAGS}"
  ])
  CONFIG_LDFLAGS="${CONFIG_LDFLAGS} ${gdb_cv_bigtoc}"
  ;;
esac


dnl For certain native configurations, we need to check whether thread
dnl support can be built in or not.
dnl
dnl Note that we only want this if we are both native (host == target),
dnl and not doing a canadian cross build (build == host).

if test ${build} = ${host} -a ${host} = ${target} ; then
   case ${host_os} in
   hpux*)
      AC_MSG_CHECKING(for HPUX/OSF thread support)
      if test -f /usr/include/dce/cma_config.h ; then
         if test "$GCC" = "yes" ; then
            AC_MSG_RESULT(yes)
            AC_DEFINE(HAVE_HPUX_THREAD_SUPPORT)
            CONFIG_OBS="${CONFIG_OBS} hpux-thread.o"
            CONFIG_SRCS="${CONFIG_SRCS} hpux-thread.c"
         else
            AC_MSG_RESULT(no (suppressed because you are not using GCC))
         fi
      else
         AC_MSG_RESULT(no)
      fi
      ;;
   solaris*)
      # See if thread_db library is around for Solaris thread debugging.
      # Note that we must explicitly test for version 1 of the library
      # because version 0 (present on Solaris 2.4 or earlier) doesn't have
      # the same API.
      AC_MSG_CHECKING(for Solaris thread debugging library)
      if test -f /usr/lib/libthread_db.so.1 ; then
         AC_MSG_RESULT(yes)
         AC_DEFINE(HAVE_THREAD_DB_LIB)
         CONFIG_OBS="${CONFIG_OBS} sol-thread.o"
         CONFIG_SRCS="${CONFIG_SRCS} sol-thread.c"
         AC_CHECK_LIB(dl, dlopen)
         if test "$GCC" = "yes" ; then
            # The GNU linker requires the -export-dynamic option to make
            # all symbols visible in the dynamic symbol table.
            hold_ldflags=$LDFLAGS
            AC_MSG_CHECKING(for the ld -export-dynamic flag)
            LDFLAGS="${LDFLAGS} -Wl,-export-dynamic"
            AC_TRY_LINK(, [int i;], found=yes, found=no)
            LDFLAGS=$hold_ldflags
            AC_MSG_RESULT($found)
            if test $found = yes; then
               CONFIG_LDFLAGS="${CONFIG_LDFLAGS} -Wl,-export-dynamic"
            fi
         fi
	 # Sun randomly tweaked the prototypes in <proc_service.h>
	 # at one point.
	 AC_MSG_CHECKING(if <proc_service.h> is old)
	 AC_CACHE_VAL(gdb_cv_proc_service_is_old,[
	    AC_TRY_COMPILE([
		#include <proc_service.h>
		ps_err_e ps_pdwrite
		    (struct ps_prochandle*, psaddr_t, const void*, size_t);
	    ],, gdb_cv_proc_service_is_old=no,
	        gdb_cv_proc_service_is_old=yes)
	 ])
	 AC_MSG_RESULT($gdb_cv_proc_service_is_old)
	 if test $gdb_cv_proc_service_is_old = yes; then
	    AC_DEFINE(PROC_SERVICE_IS_OLD)
	 fi
      else
         AC_MSG_RESULT(no)
      fi
      ;;
   aix*)
      AC_MSG_CHECKING(for AiX thread debugging library)
      AC_CACHE_VAL(gdb_cv_have_aix_thread_debug,
                   [AC_TRY_COMPILE([#include <sys/pthdebug.h>],
                                   [#ifndef PTHDB_VERSION_3
                                    #error
                                    #endif],
                                   gdb_cv_have_aix_thread_debug=yes,
                                   gdb_cv_have_aix_thread_debug=no)])
      AC_MSG_RESULT($gdb_cv_have_aix_thread_debug)
      if test $gdb_cv_have_aix_thread_debug = yes; then
         CONFIG_SRCS="${CONFIG_SRCS} aix-thread.c"
         CONFIG_OBS="${CONFIG_OBS} aix-thread.o"
         CONFIG_LDFLAGS="${CONFIG_LDFLAGS} -lpthdebug"
      fi
      ;;
   esac
   AC_SUBST(CONFIG_LDFLAGS)
fi

dnl See if we have a thread_db header file that has TD_NOTALLOC.
if test "x$ac_cv_header_thread_db_h" = "xyes"; then
   AC_CACHE_CHECK([whether <thread_db.h> has TD_NOTALLOC],
                  gdb_cv_thread_db_h_has_td_notalloc,
     AC_TRY_COMPILE(
       [#include <thread_db.h>],
       [int i = TD_NOTALLOC;],
       gdb_cv_thread_db_h_has_td_notalloc=yes,
       gdb_cv_thread_db_h_has_td_notalloc=no
     )
   )
fi
if test "x$gdb_cv_thread_db_h_has_td_notalloc" = "xyes"; then
  AC_DEFINE(THREAD_DB_HAS_TD_NOTALLOC, 1,
            [Define if <thread_db.h> has the TD_NOTALLOC error code.])
fi

dnl See if we have a sys/syscall header file that has __NR_tkill.
if test "x$ac_cv_header_sys_syscall_h" = "xyes"; then
   AC_CACHE_CHECK([whether <sys/syscall.h> has __NR_tkill],
                  gdb_cv_sys_syscall_h_has_tkill,
     AC_TRY_COMPILE(
       [#include <sys/syscall.h>],
       [int i = __NR_tkill;],
       gdb_cv_sys_syscall_h_has_tkill=yes,
       gdb_cv_sys_syscall_h_has_tkill=no
     )
   )
fi
dnl See if we can issue tkill syscall.
if test "x$gdb_cv_sys_syscall_h_has_tkill" = "xyes" && test "x$ac_cv_func_syscall" = "xyes"; then
  AC_DEFINE(HAVE_TKILL_SYSCALL, 1,
            [Define if we can use the tkill syscall.])
fi

dnl Handle optional features that can be enabled.

AC_ARG_WITH(sysroot,
[  --with-sysroot[=DIR] Search for usr/lib et al within DIR.],
[
 case ${with_sysroot} in
 yes) TARGET_SYSTEM_ROOT='${exec_prefix}/${target_alias}/sys-root' ;;
 *) TARGET_SYSTEM_ROOT=$with_sysroot ;;
 esac

 TARGET_SYSTEM_ROOT_DEFINE='-DTARGET_SYSTEM_ROOT=\"$(TARGET_SYSTEM_ROOT)\"'

 if test "x$exec_prefix" = xNONE; then
  if test "x$prefix" = xNONE; then
   test_prefix=/usr/local
  else
   test_prefix=$prefix
  fi
 else
  test_prefix=$exec_prefix
 fi
 case ${TARGET_SYSTEM_ROOT} in
 "${test_prefix}"|"${test_prefix}/"*|\
 '${exec_prefix}'|'${exec_prefix}/'*)
   t="$TARGET_SYSTEM_ROOT_DEFINE -DTARGET_SYSTEM_ROOT_RELOCATABLE"
   TARGET_SYSTEM_ROOT_DEFINE="$t"
   ;;
 esac
], [
 TARGET_SYSTEM_ROOT=
 TARGET_SYSTEM_ROOT_DEFINE='-DTARGET_SYSTEM_ROOT=\"\"'
])
AC_SUBST(TARGET_SYSTEM_ROOT)
AC_SUBST(TARGET_SYSTEM_ROOT_DEFINE)

# NOTE: Don't add -Wall or -Wunused, they both include
# -Wunused-parameter which reports bogus warnings.
# NOTE: If you add to this list, remember to update
# gdb/doc/gdbint.texinfo.
build_warnings="-Wimplicit -Wreturn-type -Wcomment -Wtrigraphs \
-Wformat -Wparentheses -Wpointer-arith -Wuninitialized -Wformat-nonliteral \
-Wunused-label -Wunused-function"
# Up for debate: -Wswitch -Wcomment -trigraphs -Wtrigraphs
# -Wunused-function -Wunused-variable -Wunused-value
# -Wchar-subscripts -Wtraditional -Wshadow -Wcast-qual
# -Wcast-align -Wwrite-strings -Wconversion -Wstrict-prototypes
# -Wmissing-prototypes -Wmissing-declarations -Wredundant-decls
# -Woverloaded-virtual -Winline -Werror"
AC_ARG_ENABLE(build-warnings,
[  --enable-build-warnings Enable build-time compiler warnings if gcc is used],
[case "${enableval}" in
  yes)	;;
  no)	build_warnings="-w";;
  ,*)   t=`echo "${enableval}" | sed -e "s/,/ /g"`
        build_warnings="${build_warnings} ${t}";;
  *,)   t=`echo "${enableval}" | sed -e "s/,/ /g"`
        build_warnings="${t} ${build_warnings}";;
  *)    build_warnings=`echo "${enableval}" | sed -e "s/,/ /g"`;;
esac
if test x"$silent" != x"yes" && test x"$build_warnings" != x""; then
  echo "Setting compiler warning flags = $build_warnings" 6>&1
fi])dnl
AC_ARG_ENABLE(gdb-build-warnings,
[  --enable-gdb-build-warnings Enable GDB specific build-time compiler warnings if gcc is used],
[case "${enableval}" in
  yes)	;;
  no)	build_warnings="-w";;
  ,*)   t=`echo "${enableval}" | sed -e "s/,/ /g"`
        build_warnings="${build_warnings} ${t}";;
  *,)   t=`echo "${enableval}" | sed -e "s/,/ /g"`
        build_warnings="${t} ${build_warnings}";;
  *)    build_warnings=`echo "${enableval}" | sed -e "s/,/ /g"`;;
esac
if test x"$silent" != x"yes" && test x"$build_warnings" != x""; then
  echo "Setting GDB specific compiler warning flags = $build_warnings" 6>&1
fi])dnl
WARN_CFLAGS=""
WERROR_CFLAGS=""
if test "x${build_warnings}" != x -a "x$GCC" = xyes
then
    AC_MSG_CHECKING(compiler warning flags)
    # Separate out the -Werror flag as some files just cannot be
    # compiled with it enabled.
    for w in ${build_warnings}; do
	case $w in
	-Werr*) WERROR_CFLAGS=-Werror ;;
	*) # Check that GCC accepts it
	    saved_CFLAGS="$CFLAGS"
	    CFLAGS="$CFLAGS $w"
	    AC_TRY_COMPILE([],[],WARN_CFLAGS="${WARN_CFLAGS} $w",)
	    CFLAGS="$saved_CFLAGS"
	esac
    done
    AC_MSG_RESULT(${WARN_CFLAGS}${WERROR_CFLAGS})
fi
AC_SUBST(WARN_CFLAGS)
AC_SUBST(WERROR_CFLAGS)

# In the Cygwin environment, we need some additional flags.
AC_CACHE_CHECK([for cygwin], gdb_cv_os_cygwin,
[AC_EGREP_CPP(lose, [
#if defined (__CYGWIN__) || defined (__CYGWIN32__)
lose
#endif],[gdb_cv_os_cygwin=yes],[gdb_cv_os_cygwin=no])])


dnl Figure out which of the many generic ser-*.c files the _host_ supports.
SER_HARDWIRE="ser-unix.o ser-pipe.o ser-tcp.o"
case ${host} in
  *go32* ) SER_HARDWIRE=ser-go32.o ;;
  *djgpp* ) SER_HARDWIRE=ser-go32.o ;;
esac
AC_SUBST(SER_HARDWIRE)

# libreadline needs libuser32.a in a cygwin environment
WIN32LIBS=
if test x$gdb_cv_os_cygwin = xyes; then
    WIN32LIBS="-luser32"
    case "${target}" in
	*cygwin*) WIN32LIBS="$WIN32LIBS -limagehlp"
	;;
    esac
fi
AC_SUBST(WIN32LIBS)

LIBGUI="../libgui/src/libgui.a"
GUI_CFLAGS_X="-I${srcdir}/../libgui/src"
AC_SUBST(LIBGUI)
AC_SUBST(GUI_CFLAGS_X)

WIN32LDAPP=
AC_SUBST(WIN32LIBS)
AC_SUBST(WIN32LDAPP)

case "${host}" in
*-*-cygwin*)
    configdir="win"
    ;;
*)
    configdir="unix"
    ;;
esac

GDBTKLIBS=
if test "${enable_gdbtk}" = "yes"; then

    # Gdbtk must have an absolute path to srcdir in order to run
    # properly when not installed.
    here=`pwd`
    cd ${srcdir}
    GDBTK_SRC_DIR=`pwd`
    cd $here

    CY_AC_PATH_TCLCONFIG
    if test -z "${no_tcl}"; then
	CY_AC_LOAD_TCLCONFIG
	CY_AC_PATH_TKCONFIG

	# now look for Tcl library stuff

	tcldir="../tcl/${configdir}/"

	TCL_DEPS="${tcldir}${TCL_LIB_FILE}"

	# If $no_tk is nonempty, then we can't do Tk, and there is no
	# point to doing Tcl.
	if test -z "${no_tk}"; then
	   CY_AC_LOAD_TKCONFIG
	   CY_AC_PATH_TCLH
	   CY_AC_PATH_TKH
	   CY_AC_PATH_ITCLH
	   CY_AC_PATH_ITKH


	   # now look for Tk library stuff

	   tkdir="../tk/${configdir}/"

	   TK_DEPS="${tkdir}${TK_LIB_FILE}"

	   # now look for Itcl library stuff

	   CY_AC_PATH_ITCLCONFIG
           if test -z "${no_itcl}"; then
             CY_AC_LOAD_ITCLCONFIG 

	     ITCLLIB="${ITCL_BUILD_LIB_SPEC}"
	     ITCL_DEPS="${ITCL_LIB_FULL_PATH}"
           fi

	   
	   # now look for Itk library stuff
	   CY_AC_PATH_ITKCONFIG
           if test -z "${no_itcl}"; then
             CY_AC_LOAD_ITKCONFIG

	     ITKLIB="${ITK_BUILD_LIB_SPEC}"
	     ITK_DEPS="${ITK_LIB_FULL_PATH}"
           fi

           ENABLE_CFLAGS="${ENABLE_CFLAGS} \$(SUBDIR_GDBTK_CFLAGS)"
	   # Tcl/Tk 8.1 require -fwritable strings.  I don't
           # know whether 8.2 will or not, but I bet it will.
           # I don't have to worry about 7.x since we don't support it.
           GDBTK_CFLAGS=""
	   if test "$GCC" = "yes"; then
               if test "$TCL_VERSION" != "8.0" ; then
                   GDBTK_CFLAGS="-fwritable-strings"
	       fi
           fi

	   # Include some libraries that Tcl and Tk want.
	   TCL_LIBS='$(LIBGUI) $(ITCL) $(ITK) $(TK) $(TCL) $(X11_LDFLAGS) $(X11_LIBS)'
	   # Yes, the ordering seems wrong here.  But it isn't.
	   # TK_LIBS is the list of libraries that need to be linked
	   # after Tcl/Tk.  Note that this isn't put into LIBS.  If it
	   # were in LIBS then any link tests after this point would
	   # try to include things like `$(LIBGUI)', which wouldn't work.
	   GDBTKLIBS="${TCL_LIBS} ${TK_LIBS}"

           CONFIG_OBS="${CONFIG_OBS} \$(SUBDIR_GDBTK_OBS)"
           CONFIG_DEPS="${CONFIG_DEPS} \$(SUBDIR_GDBTK_DEPS)"
           CONFIG_SRCS="${CONFIG_SRCS} \$(SUBDIR_GDBTK_SRCS)"
	   CONFIG_ALL="${CONFIG_ALL} all-gdbtk"
	   CONFIG_CLEAN="${CONFIG_CLEAN} clean-gdbtk"
	   CONFIG_INSTALL="${CONFIG_INSTALL} install-gdbtk"
	   CONFIG_UNINSTALL="${CONFIG_UNINSTALL} uninstall-gdbtk"

	   if test x$gdb_cv_os_cygwin = xyes; then
	      WIN32LIBS="${WIN32LIBS} -lshell32 -lgdi32 -lcomdlg32 -ladvapi32"
	      WIN32LDAPP="-Wl,--subsystem,console"
	      CONFIG_OBS="${CONFIG_OBS} gdbres.o"
	   fi
	fi
    fi

    AC_CONFIG_SUBDIRS(gdbtk)
fi

AC_SUBST(X_CFLAGS)
AC_SUBST(X_LDFLAGS)
AC_SUBST(X_LIBS)
AC_SUBST(TCL_DEPS)
AC_SUBST(TK_DEPS)
AC_SUBST(ITCLLIB)
AC_SUBST(ITCL_DEPS)
AC_SUBST(ITKLIB)
AC_SUBST(ITK_DEPS)
AC_SUBST(GDBTKLIBS)
AC_SUBST(GDBTK_CFLAGS)
AC_SUBST(GDBTK_SRC_DIR)

AC_PATH_X

# Check whether we should enable the TUI, but only do so if we really
# can.
if test x"$enable_tui" = xyes; then
  if test -d $srcdir/tui; then
    if test "$ac_cv_search_waddstr" != no; then
      CONFIG_OBS="$CONFIG_OBS \$(SUBDIR_TUI_OBS)"
      CONFIG_DEPS="$CONFIG_DEPS \$(SUBDIR_TUI_DEPS)"
      CONFIG_SRCS="$CONFIG_SRCS \$(SUBDIR_TUI_SRCS)"
      CONFIG_INITS="$CONFIG_INITS \$(SUBDIR_TUI_INITS)"
      ENABLE_CFLAGS="$ENABLE_CFLAGS \$(SUBDIR_TUI_CFLAGS)"
      CONFIG_ALL="${CONFIG_ALL} all-tui"
      CONFIG_CLEAN="${CONFIG_CLEAN} clean-tui"
      CONFIG_INSTALL="${CONFIG_INSTALL} install-tui"
      CONFIG_UNINSTALL="${CONFIG_UNINSTALL} uninstall-tui"
    else
      AC_MSG_WARN([no enhanced curses library found; disabling TUI])
    fi
  fi
fi

# Unlike the sim directory, whether a simulator is linked is controlled by 
# presence of a SIM= and a SIM_OBS= definition in the target '.mt' file.  
# This code just checks for a few cases where we'd like to ignore those
# definitions, even when they're present in the '.mt' file.  These cases
# are when --disable-sim is specified, or if the simulator directory is
# not part of the source tree.
#
AC_ARG_ENABLE(sim,
[  --enable-sim            Link gdb with simulator],
[echo "enable_sim = $enable_sim";
 echo "enableval = ${enableval}";
 case "${enableval}" in
  yes) ignore_sim=false ;;
  no)  ignore_sim=true ;;
  *)   ignore_sim=false ;;
 esac],
[ignore_sim=false])

if test ! -d "${srcdir}/../sim"; then
  ignore_sim=true
fi

if test "${ignore_sim}" = "true"; then
    IGNORE_SIM="SIM="
    IGNORE_SIM_OBS="SIM_OBS="
else
    IGNORE_SIM=""
    IGNORE_SIM_OBS=""
    AC_DEFINE(WITH_SIM)
fi
AC_SUBST(IGNORE_SIM)
AC_SUBST(IGNORE_SIM_OBS)

AC_SUBST(ENABLE_CFLAGS)
AC_SUBST(PROFILE_CFLAGS)

AC_SUBST(CONFIG_OBS)
AC_SUBST(CONFIG_DEPS)
AC_SUBST(CONFIG_SRCS)
AC_SUBST(CONFIG_ALL)
AC_SUBST(CONFIG_CLEAN)
AC_SUBST(CONFIG_INSTALL)
AC_SUBST(CONFIG_UNINSTALL)

# List of host floatformats.
AC_DEFINE_UNQUOTED(GDB_HOST_FLOAT_FORMAT,$gdb_host_float_format,[Host float floatformat])
AC_DEFINE_UNQUOTED(GDB_HOST_DOUBLE_FORMAT,$gdb_host_double_format,[Host double floatformat])
AC_DEFINE_UNQUOTED(GDB_HOST_LONG_DOUBLE_FORMAT,$gdb_host_long_double_format,[Host long double floatformat])

# target_subdir is used by the testsuite to find the target libraries.
target_subdir=
if test "${host}" != "${target}"; then
    target_subdir="${target_alias}/"
fi
AC_SUBST(target_subdir)

frags=
if test "${target}" = "${host}"; then
  host_makefile_frag=${srcdir}/config/${gdb_host_cpu}/${gdb_host}.mh
  if test ! -f ${host_makefile_frag}; then
    AC_MSG_ERROR("*** Gdb does not support native target ${host}")
  fi
  frags="$frags $host_makefile_frag"
else
  host_makefile_frag=/dev/null
fi

target_makefile_frag=${srcdir}/config/${gdb_target_cpu}/${gdb_target}.mt
if test ! -f ${target_makefile_frag}; then
  AC_MSG_ERROR("*** Gdb does not support target ${target}")
fi
frags="$frags $target_makefile_frag"

AC_SUBST_FILE(host_makefile_frag)
AC_SUBST_FILE(target_makefile_frag)
AC_SUBST(frags)

changequote(,)dnl
hostfile=`sed -n '
s/XM_FILE[ 	]*=[ 	]*\([^ 	]*\)/\1/p
' ${host_makefile_frag}`

targetfile=`sed -n '
s/DEPRECATED_TM_FILE[ 	]*=[ 	]*\([^ 	]*\)/\1/p
' ${target_makefile_frag}`

if test "${target}" = "${host}"; then
# We pick this up from the host configuration file (.mh) because we
# do not have a native configuration Makefile fragment.
nativefile=`sed -n '
s/NAT_FILE[ 	]*=[ 	]*\([^ 	]*\)/\1/p
' ${host_makefile_frag}`
fi
changequote([,])

if test x"${gdb_osabi}" != x ; then
    AC_DEFINE_UNQUOTED(GDB_OSABI_DEFAULT, $gdb_osabi,
		       [Define to the default OS ABI for this configuration.])
fi

# Enable multi-ice-gdb-server.
AC_ARG_ENABLE(multi-ice,
[  --enable-multi-ice      build the multi-ice-gdb-server],
  [case $enableval in
    yes | no)
      ;;
    *) AC_MSG_ERROR([bad value $enableval for --enable-multi-ice]) ;;
  esac])
if test "x$enable_multi_ice" = xyes; then
   AC_CONFIG_SUBDIRS(multi-ice)
fi

# We only build gdbserver automatically if host and target are the same.
if test "x$target" = "x$host"; then
  AC_MSG_CHECKING(whether gdbserver is supported on this host)
  if test "x$build_gdbserver" = xyes; then
    AC_MSG_RESULT(yes)
    AC_CONFIG_SUBDIRS(gdbserver)
  else
    AC_MSG_RESULT(no)
  fi
fi

# If hostfile (XM_FILE) and/or targetfile (DEPRECATED_TM_FILE) and/or
# nativefile (NAT_FILE) is not set in config/*/*.m[ht] files, we link
# to an empty version.

files=
links=

rm -f xm.h
xm_h=""
if test "${hostfile}" != ""; then
    xm_h=xm.h
    case "${hostfile}" in
      xm-*.h ) GDB_XM_FILE="config/${gdb_host_cpu}/${hostfile}" ;;
      * ) GDB_XM_FILE="${hostfile}"
    esac
    files="${files} ${GDB_XM_FILE}"
    links="${links} xm.h"
    AC_DEFINE_UNQUOTED(GDB_XM_FILE, "${GDB_XM_FILE}")
fi
AC_SUBST(xm_h)

rm -f tm.h
tm_h=""
if test "${targetfile}" != ""; then
    tm_h=tm.h
    case "${targetfile}" in
      tm-*.h ) GDB_TM_FILE="config/${gdb_target_cpu}/${targetfile}" ;;
      * ) GDB_TM_FILE="${targetfile}"
    esac
    files="${files} ${GDB_TM_FILE}"
    links="${links} tm.h"
    AC_DEFINE_UNQUOTED(GDB_TM_FILE, "${GDB_TM_FILE}")
fi
AC_SUBST(tm_h)

rm -f nm.h
nm_h=""
if test "${nativefile}" != ""; then
    nm_h=nm.h
    case "${nativefile}" in
      nm-*.h ) GDB_NM_FILE="config/${gdb_host_cpu}/${nativefile}" ;;
      * ) GDB_NM_FILE="${nativefile}"
    esac
    files="${files} ${GDB_NM_FILE}"
    links="${links} nm.h"
    AC_DEFINE_UNQUOTED(GDB_NM_FILE, "${GDB_NM_FILE}")
fi
AC_SUBST(nm_h)

AC_LINK_FILES($files, $links)

dnl Check for exe extension set on certain hosts (e.g. Win32)
AC_EXEEXT

dnl  Detect the character set used by this host.

dnl  At the moment, we just assume it's ISO-8859-1 (which is a
dnl  superset of ASCII containing the characters needed for French,
dnl  German, Spanish, Italian, and possibly others), but if were
dnl  *were* to support any host character sets other than ISO-8859-1,
dnl  here's where we'd detect it.
AC_DEFINE(GDB_DEFAULT_HOST_CHARSET, "ISO-8859-1",
          [Define to be a string naming the default host character set.])

AM_ICONV

AC_OUTPUT(Makefile .gdbinit:gdbinit.in,
[
dnl Autoconf doesn't provide a mechanism for modifying definitions 
dnl provided by makefile fragments.
dnl

changequote(,)dnl
sed -e '/^DEPRECATED_TM_FILE[ 	]*=/s,^DEPRECATED_TM_FILE[ 	]*=[ 	]*,&config/'"${gdb_target_cpu}"'/,
/^XM_FILE[ 	]*=/s,^XM_FILE[ 	]*=[ 	]*,&config/'"${gdb_host_cpu}"'/,
/^NAT_FILE[ 	]*=/s,^NAT_FILE[ 	]*=[ 	]*,&config/'"${gdb_host_cpu}"'/,' <Makefile >Makefile.tmp
mv -f Makefile.tmp Makefile
changequote([,])dnl


case x$CONFIG_HEADERS in
xconfig.h:config.in)
echo > stamp-h ;;
esac
],
[
gdb_host_cpu=$gdb_host_cpu
gdb_target_cpu=$gdb_target_cpu
nativefile=$nativefile
])

exit 0
@


1.179
log
@Index: ChangeLog
2005-01-07  Andrew Cagney  <cagney@@gnu.org>

	* configure.in: Replace configdirs with multiple references to
	AC_CONFIG_SUBDIRS.
	* configure: Re-generate.

Index: doc/ChangeLog
2005-01-07  Andrew Cagney  <cagney@@gnu.org>

	* configure.in: Replace configdirs with multiple references to
	AC_CONFIG_SUBDIRS.
	* configure: Re-generate.
@
text
@@


1.178
log
@	* configure.in: Check for ncurses/term.h.
	* gdb_curses.h: Include term.h here, prefering ncurses/term.h.
	* utils.c: Include gdb_curses.h instead of curses.h and term.h.
	* tui/tui.c: Don't include term.h.
	* configure, config.in: Rebuilt.
@
text
@a120 1
configdirs=
d1330 1
a1330 1
    configdirs="${configdirs} gdbtk"
d1477 1
a1477 1
  configdirs="$configdirs multi-ice"
a1483 1
    configdirs="$configdirs gdbserver"
d1485 1
a1490 2
AC_CONFIG_SUBDIRS($configdirs)

@


1.177
log
@	* Makefile.in (ALLDEPFILES): Add amd64-sol2-tdep.c.
	(amd64-sol2-tdep.o): Add dependencies.
	* amd64-sol2-tdep.c, config/i386/sol2-64.mh,
	config/i386/sol2-64.mt: New files.
	* i386-sol2-nat.c (amd64_sol2_gregset64_reg_offset,
	amd64_sol2_gregset32_reg_offset, _initialize_amd64_sol2_nat): New.
	(supply_gregset): Correct order of arguments to
	amd64_supply_native_gregset.
	(fill_gregset): Correct order of arguments to
	amd64_collect_native_gregset.
	* configure.host (i[34567]86-*-solaris2.1[0-9]*): Add new case.
	* configure.tgt (i[34567]86-*-solaris2.1[0-9]*): Likewise.
	* configure.in (*-*-solaris2.[[6789]]): Add *-*-solaris2.1[[0-9]]
	for definition of NEW_PROC_API.
	* configure: Regenerate.
@
text
@d397 2
a398 1
AC_CHECK_HEADERS(curses.h cursesX.h ncurses.h ncurses/ncurses.h term.h)
@


1.176
log
@* configure.in: Really disable the TUI if an enhanced curses
library isn't found.
* configure: Regenerate.
@
text
@d728 1
a728 1
  *-*-solaris2.[[6789]])
@


1.175
log
@* configure.in: Only set host_makefile_frag when building a native
debugger.
* configure: Regenerate.
@
text
@a195 15
if test x"$enable_tui" = xyes; then
  if test -d $srcdir/tui; then
    if test "$ac_cv_search_waddstr" != no; then
      CONFIG_OBS="$CONFIG_OBS \$(SUBDIR_TUI_OBS)"
      CONFIG_DEPS="$CONFIG_DEPS \$(SUBDIR_TUI_DEPS)"
      CONFIG_SRCS="$CONFIG_SRCS \$(SUBDIR_TUI_SRCS)"
      CONFIG_INITS="$CONFIG_INITS \$(SUBDIR_TUI_INITS)"
      ENABLE_CFLAGS="$ENABLE_CFLAGS \$(SUBDIR_TUI_CFLAGS)"
      CONFIG_ALL="${CONFIG_ALL} all-tui"
      CONFIG_CLEAN="${CONFIG_CLEAN} clean-tui"
      CONFIG_INSTALL="${CONFIG_INSTALL} install-tui"
      CONFIG_UNINSTALL="${CONFIG_UNINSTALL} uninstall-tui"
    fi
  fi
fi
a330 4
if test "$ac_cv_search_waddstr" = no; then
  AC_MSG_WARN([no curses library found])
fi

d1348 20
a1367 1
 
@


1.174
log
@* configure.in: Don't comment out NATDEPFILES in the generated
Makefile if NAT_FILE is unset.
* configure: Regenerate.
@
text
@d1425 8
a1432 10
host_makefile_frag=${srcdir}/config/${gdb_host_cpu}/${gdb_host}.mh
if test ! -f ${host_makefile_frag}; then
    # When building a native debuger the .mh file containing things
    # like NATDEPFILES is needed.  Cross debuggers don't need .mh
    # since it no longer contains anything useful.
    if test "${target}" = "${host}"; then
	AC_MSG_ERROR("*** Gdb does not support native target ${host}")
    else
	host_makefile_frag=/dev/null
    fi
a1433 1
frags="$frags $host_makefile_frag"
d1437 1
a1437 1
AC_MSG_ERROR("*** Gdb does not support target ${target}")
@


1.173
log
@* configure.in: Check for waddstr instead of mvwaddstr when
searching for curses library.  Check for wborder.
* configure, config.in: Regenerate.
* tui/tui-wingeneral.c (box_win): Use box if wborder isn't
available.
@
text
@a1566 8
if test "${nativefile}" = ""; then
        < Makefile \
        sed -e '/^NATDEPFILES[[ 	]]*=.*\\$/,/[[^\\]]$/s/^/# /' \
            -e '/^NATDEPFILES[[ 	]]*=/s/^/# /' \
        | sed -e '/^\(NATDEPFILES[[ 	]]*[[+]]=[[ 	]]*\)/s//# \1/' \
	> Makefile.tem
mv -f Makefile.tem Makefile
fi
@


1.172
log
@* config/pa/hpux1020.mh (MH_CFLAGS): Remove -D__HP_CURSES.
* config/pa/hpux11.mh (MH_CFLAGS): Likewise.
* config/pa/hpux11w.mh (MH_CFLAGS): Likewise.
* configure.in: Improve checks for curses library by checking for
mvwaddstr instead of initscr.  Drop HP curses in favour of
standard curses on HP-UX.
* configure: Regenerated.
@
text
@d198 1
a198 1
    if test "$ac_cv_search_mvwaddstr" != no; then
d344 1
a344 1
AC_SEARCH_LIBS(mvwaddstr, [ncurses cursesX curses])
d346 1
a346 1
if test "$ac_cv_search_mvwaddstr" = no; then
d470 1
@


1.171
log
@Index: ChangeLog
2004-09-13  Andrew Cagney  <cagney@@gnu.org>

	* configure.in (frags): Replace TM_FILE with DEPRECATED_TM_FILE.
	* configure: Re-generate.
	* nlm/Makefile.in (TAGS): Update.
	* Makefile.in (TAGS): Update.
	* config/vax/nbsd.mt (TM_FILE): Update.
	* config/sparc/vxworks.mt (TM_FILE): Update.
	* config/sparc/sol2.mt (TM_FILE): Update.
	* config/sparc/sol2-64.mt (TM_FILE): Update.
	* config/sparc/obsd64.mt (TM_FILE): Update.
	* config/sparc/obsd.mt (TM_FILE): Update.
	* config/sparc/nbsd64.mt (TM_FILE): Update.
	* config/sparc/nbsd.mt (TM_FILE): Update.
	* config/sparc/linux64.mt (TM_FILE): Update.
	* config/sparc/linux.mt (TM_FILE): Update.
	* config/sparc/fbsd.mt (TM_FILE): Update.
	* config/sh/wince.mt (TM_FILE): Update.
	* config/sh/nbsd.mt (TM_FILE): Update.
	* config/sh/linux.mt (TM_FILE): Update.
	* config/sh/embed.mt (TM_FILE): Update.
	* config/s390/s390.mt (TM_FILE): Update.
	* config/rs6000/rs6000lynx.mt (TM_FILE): Update.
	* config/rs6000/rs6000.mt (TM_FILE): Update.
	* config/rs6000/aix4.mt (TM_FILE): Update.
	* config/powerpc/vxworks.mt (TM_FILE): Update.
	* config/powerpc/ppc-sim.mt (TM_FILE): Update.
	* config/powerpc/ppc-eabi.mt (TM_FILE): Update.
	* config/powerpc/obsd.mt (TM_FILE): Update.
	* config/powerpc/nbsd.mt (TM_FILE): Update.
	* config/powerpc/linux.mt (TM_FILE): Update.
	* config/powerpc/aix.mt (TM_FILE): Update.
	* config/pa/obsd.mt (TM_FILE): Update.
	* config/pa/linux.mt (TM_FILE): Update.
	* config/pa/hppahpux.mt (TM_FILE): Update.
	* config/pa/hppa64.mt (TM_FILE): Update.
	* config/pa/hppa.mt (TM_FILE): Update.
	* config/ns32k/nbsdaout.mt (TM_FILE): Update.
	* config/mips/wince.mt (TM_FILE): Update.
	* config/mips/vxmips.mt (TM_FILE): Update.
	* config/mips/nbsd.mt (TM_FILE): Update.
	* config/mips/linux.mt (TM_FILE): Update.
	* config/mips/irix6.mt (TM_FILE): Update.
	* config/mips/irix5.mt (TM_FILE): Update.
	* config/mips/embed.mt (TM_FILE): Update.
	* config/m68k/vxworks68.mt (TM_FILE): Update.
	* config/m68k/st2000.mt (TM_FILE): Update.
	* config/m68k/os68k.mt (TM_FILE): Update.
	* config/m68k/obsd.mt (TM_FILE): Update.
	* config/m68k/nbsd.mt (TM_FILE): Update.
	* config/m68k/monitor.mt (TM_FILE): Update.
	* config/m68k/linux.mt (TM_FILE): Update.
	* config/m68k/cisco.mt (TM_FILE): Update.
	* config/ia64/linux.mt (TM_FILE): Update.
	* config/ia64/aix.mt (TM_FILE): Update.
	* config/ia64/ia64.mt (TM_FILE): Update.
	* config/i386/vxworks.mt (TM_FILE): Update.
	* config/i386/obsd64.mt (TM_FILE): Update.
	* config/i386/obsd.mt (TM_FILE): Update.
	* config/i386/nto.mt (TM_FILE): Update.
	* config/i386/nbsd64.mt (TM_FILE): Update.
	* config/i386/nbsd.mt (TM_FILE): Update.
	* config/i386/linux64.mt (TM_FILE): Update.
	* config/i386/linux.mt (TM_FILE): Update.
	* config/i386/i386sol2.mt (TM_FILE): Update.
	* config/i386/i386lynx.mt (TM_FILE): Update.
	* config/i386/fbsd64.mt (TM_FILE): Update.
	* config/i386/fbsd.mt (TM_FILE): Update.
	* config/i386/cygwin.mt (TM_FILE): Update.
	* config/h8300/h8300.mt (TM_FILE): Update.
	* config/frv/frv.mt (TM_FILE): Update.
	* config/cris/cris.mt (TM_FILE): Update.
	* config/arm/wince.mt (TM_FILE): Update.
	* config/arm/nbsd.mt (TM_FILE): Update.
	* config/arm/linux.mt (TM_FILE): Update.
	* config/arm/embed.mt (TM_FILE): Update.
	* config/alpha/nbsd.mt (TM_FILE): Update.
	* config/alpha/fbsd.mt (TM_FILE): Update.
	* config/alpha/alpha.mt (TM_FILE): Update.
	* config/alpha/alpha-osf1.mt (TM_FILE): Update.
	* config/alpha/alpha-linux.mt (TM_FILE): Update.

Index: gdbserver/ChangeLog
2004-09-02  Andrew Cagney  <cagney@@gnu.org>

	* Makefile.in (TAGS): Replace TM_FILE with DEPRECATED_TM_FILE.
@
text
@d198 1
a198 1
    if test "$ac_cv_search_initscr" != no -a "$ac_cv_search_wborder" != no; then
d335 18
a352 3
# Since GDB uses Readline, we need termcap functionality, so we need
# to find a library that provides that.  When GDB is configured with
# the TUI, we need full curses functionality.
a362 5
  aix*)
    # Readline prefers curses over termcap on AIX.
    # ??? Why?
    AC_SEARCH_LIBS(tgetent, [tinfo ncurses curses termcap])
    ;;
d365 2
a366 3
# Note: We used to check for libtermlib and libterminfo too, but
# Readline doesn't, so I think we're safe with leaving them out.
AC_SEARCH_LIBS(tgetent, [termcap tinfo ncurses Hcurses curses])
a371 26
# FIXME: kettenis/20030102: We seem to prefer HP curses (Hcurses) over
# Xcurses on HP-UX; see the `-D__HP_CURSES' in the relevant host
# Makefile fragments.  That's why we need to have `Hcurses' before
# `curses'.  I don't see why we should use HP curses if a more
# standard curses is available, except that according to HP's
# documentation one needs to compile `-D_XOPEN_SOURCE_EXTENDED' on
# HP-UX 10.10 and 10.20.

# FIXME: ncurses does not work on native alphaev68-dec-osf5.1,
# and probably other platforms.  AC_SEARCH_LIBS finds the library
# in a place such as /usr/local/lib/libncurses.a, but does not
# do anything to look for the matching include files.
# -- chastain 2004-05-01

AC_SEARCH_LIBS(initscr, [ncurses Hcurses cursesX curses pdcurses], [],
  [AC_MSG_WARN([no curses library found])])

# Check whether the wborder function is provided by the curses
# library detected above.  In certain implementations such as
# the HP/UX Hcurses for instance, this function is provided by an
# additional library.  So if we did not find this function inside
# the curses library, try some alternate libraries we know might
# provide it.
AC_SEARCH_LIBS(wborder, [cur_colr], [],
    [AC_MSG_WARN([wborder function not found, tui will be disabled])])

@


1.170
log
@2004-09-03  Andrew Cagney  <cagney@@gnu.org>

	* configure.in (GDB_TM_FILE): Fix typo, use gdb_target_cpu and not
	gdb_host_cpu.
@
text
@d1470 1
a1470 1
s/TM_FILE[ 	]*=[ 	]*\([^ 	]*\)/\1/p
d1512 3
a1514 3
# If hostfile (XM_FILE) and/or targetfile (TM_FILE) and/or nativefile
# (NAT_FILE) is not set in config/*/*.m[ht] files, we link to an empty
# version.
d1593 1
a1593 1
sed -e '/^TM_FILE[ 	]*=/s,^TM_FILE[ 	]*=[ 	]*,&config/'"${gdb_target_cpu}"'/,
@


1.169
log
@2004-09-02  Andrew Cagney  <cagney@@gnu.org>

	* configure.in: Let TM_FILE, XM_FILE and NAT_FILE specify a path.
	* configure: Re-generate.
	* config/arm/nbsd.mt (TM_FILE): Set to "solib.h".
	* config/arm/tm-nbsd.h: Delete file.
@
text
@d1538 1
a1538 1
      tm-*.h ) GDB_TM_FILE="config/${gdb_host_cpu}/${targetfile}" ;;
@


1.168
log
@2004-09-02  Andrew Cagney  <cagney@@gnu.org>

	* gdbarch.sh: Instead of GDB_MULTI_ARCH print GDB_NM_FILE,
	GDB_TM_FILE and GDB_XM_FILE.
	* gdbarch.c: Re-generate.
	* configure.in (GDB_XM_FILE, GDB_NM_FILE, GDB_TM_FILE): Include
	quotes in macro definition.
	* configure.in: Re-generate.
@
text
@d1523 4
a1526 1
    GDB_XM_FILE="config/${gdb_host_cpu}/${hostfile}"
d1537 4
a1540 1
    GDB_TM_FILE="config/${gdb_target_cpu}/${targetfile}"
d1551 4
a1554 1
    GDB_NM_FILE="config/${gdb_host_cpu}/${nativefile}"
@


1.167
log
@* configure.in: Change test for return type of ptrace to default
to `long' instead of `int'.
* configure: Regenerate.
@
text
@d1526 1
a1526 1
    AC_DEFINE_UNQUOTED(GDB_XM_FILE, ${GDB_XM_FILE})
d1537 1
a1537 1
    AC_DEFINE_UNQUOTED(GDB_TM_FILE, ${GDB_TM_FILE})
d1548 1
a1548 1
    AC_DEFINE_UNQUOTED(GDB_NM_FILE, ${GDB_NM_FILE})
@


1.166
log
@* configure.in: Check for ttrace function.
* configure, config.in: Regenerate.
@
text
@d509 3
a511 3
    [extern long ptrace ();],
    gdb_cv_func_ptrace_ret='long',
    gdb_cv_func_ptrace_ret='int'))
@


1.165
log
@* configure.in: Add <ncurses/ncurses.h> to the list of possible
curses headers.
* configure, config.in: Regenerate.
* gdb_curses.h [HAVE_NCURSES_NCURSES_H]: Include
<ncurses/ncurses.h>.
@
text
@d486 1
@


1.164
log
@* configure.in (PTRACE_TYPE_ARG3, PTRACE_TYPE_ARG5): Don't use
parenthesis in definition.
* configure: Regenerated.
@
text
@d433 1
a433 1
AC_CHECK_HEADERS(curses.h cursesX.h ncurses.h term.h)
@


1.163
log
@* configure.in: Check for <sys/types.h>.  Check return and
argument types of ptrace.
* configure, config.in: Regenerate.
@
text
@d543 1
a543 1
AC_DEFINE_UNQUOTED(PTRACE_TYPE_ARG3, ($[3]),
d546 1
a546 1
  AC_DEFINE_UNQUOTED(PTRACE_TYPE_ARG5, ($[5]),
@


1.162
log
@* configure.in: Add cursesX to the list of possible curses libs.
Add cursesX.h to the list of possible curses headers.
* configure, config.in: Regenerate.
@
text
@d416 1
d451 1
d487 63
@


1.161
log
@        * configure.in: Test for struct lwp in <sys/lwp.h>
        * bsd-kvm.c (bsd_kvm_proc_cmd): If HAVE_STRUCT_LWP is defined, use
        the offset of l_addr in struct lwp.
@
text
@d377 1
a377 1
AC_SEARCH_LIBS(initscr, [ncurses Hcurses curses pdcurses], [],
d432 1
a432 1
AC_CHECK_HEADERS(curses.h ncurses.h term.h)
@


1.160
log
@2004-07-29  Andrew Cagney  <cagney@@gnu.org>

	Fix PR i18n/761.
	* Makefile.in (.SUFFIXES): Add po .gmo, and .pox.
	(.PHONY): Add all-po install-po, uninstall-po, clean-po,
	$(PACKAGE).pot and update-po.
	(all-po, .po.gmo, .po.pox, install-po, $(PACKAGE).pot)
	(po/$(PACKAGE).pot, clean-po, uninstall-po, install-po)
	(update-po): New rules.
	(localedir): Define using autoconf.
	(diststuff): Add $(PACKAGE).pot and $(CATALOGS)
	(GDB_CFLAGS): Define LOCALEDIR using $(localedir).
	(XGETTEXT, GMSGFMT, MSGMERGE, PACKAGE, CATALOGS): Define.
	* configure.in: Generate CATALOGS and LINGUAS from contents of
	src/gdb/po/ directory.  Set @@localedir@@ in Makefile.in.
	* configure: Re-generate.
	* po/gdbtext: New file
@
text
@d556 10
@


1.159
log
@2004-07-29  Andrew Cagney  <cagney@@gnu.org>

	* config/pa/xm-linux.h: Do not include "floatformat.h".
	(HOST_FLOAT_FORMAT, HOST_DOUBLE_FORMAT)
	(HOST_LONG_DOUBLE_FORMAT): Delete macros.
	* config/i386/xm-i386.h: Do not include "floatformat.h".
	(HOST_FLOAT_FORMAT, HOST_DOUBLE_FORMAT)
	(HOST_LONG_DOUBLE_FORMAT): Delete macros.
	* doublest.c (HOST_FLOAT_FORMAT, HOST_DOUBLE_FORMAT)
	(HOST_LONG_DOUBLE_FORMAT): Delete macros.  Use
	GDB_HOST_FLOAT_FORMAT, GDB_HOST_DOUBLE_FORMAT and
	GDB_HOST_LONG_DOUBLE_FORMAT instead.
	* configure.in (GDB_HOST_FLOAT_FORMAT, GDB_HOST_DOUBLE_FORMAT)
	(GDB_HOST_LONG_DOUBLE_FORMAT): Define.
	* configure, config.in: Regenerate.
	* configure.host (gdb_host_float_format, gdb_host_double_format)
	(gdb_host_long_double_format): Set according to the host.
@
text
@d45 12
d58 1
a58 1
ALL_LINGUAS=
d60 49
a108 1
AC_DEFINE(PACKAGE, "gdb", [Name of this package. ])
a119 11
dnl List of object files added by configure.

CONFIG_OBS=
CONFIG_DEPS=
CONFIG_SRCS=
ENABLE_CFLAGS=
CONFIG_ALL=
CONFIG_CLEAN=
CONFIG_INSTALL=
CONFIG_UNINSTALL=

@


1.158
log
@* configure.in: Define _MSE_INT_H on Solaris 9 too.
* configure, config.in: Regenerated.
@
text
@d1303 5
@


1.157
log
@* configure.in: Include <sys/param.h> for td_pcb test.
* configure: Regenerated.
@
text
@d372 1
a372 1
# On Solaris 2.[78], we need to define _MSE_INT_H to avoid a clash
d376 1
a376 1
  solaris2.[[78]])
d380 1
a380 1
   Solaris 2.[78] when using GCC. ]])
@


1.157.2.1
log
@* configure.in: Define _MSE_INT_H on Solaris 9 too.
* configure, config.in: Regenerated.
@
text
@d372 1
a372 1
# On Solaris 2.[789], we need to define _MSE_INT_H to avoid a clash
d376 1
a376 1
  solaris2.[[789]])
d380 1
a380 1
   Solaris 2.[789] when using GCC. ]])
@


1.156
log
@	* configure.in: Set $configdir to the right OS specific value.
	Use value when setting $tcldir and $tkdir.
	* configure: Regenerate.
@
text
@d499 2
a500 1
[AC_TRY_COMPILE([#include <sys/proc.h>], [struct thread td; td.td_pcb;],
@


1.155
log
@* configure.in: Check for td_pcb in `struct thread'.
* configure, config.in: Regenerated.
@
text
@d1137 8
a1144 1
configdir="unix"
d1163 1
a1163 8
	case "${host}" in
	*-*-cygwin*)
	    tcldir=../tcl/win/
	    ;;
	*)
	    tcldir=../tcl/unix/
	    ;;
	esac
d1179 1
a1179 8
	   case "${host}" in
	   *-*-cygwin*)
	       tkdir=../tk/win/
	       ;;
	   *)
	       tkdir=../tk/unix/
	       ;;
	   esac
@


1.154
log
@* configure.in: When checking whether we should use the -bbigtoc
option, don't forget to restore the original value of LDFLAGS.
* configure: Regenerated.
@
text
@d497 9
@


1.153
log
@2004-05-02  Michael Chastain  <mec.gnu@@mindspring.com>

	Unfix PR gdb/1626.
	* configure.in: Revert special case for osf5.*.
	* configure: Regenerate.
@
text
@d865 1
@


1.152
log
@2004-04-28  Rainer Orth  <ro@@TechFak.Uni-Bielefeld.DE>
	    Andrew Cagney  <cagney@@redhat.com>

	* configure.in (mips-sgi-irix5*): Define _KMEMUSER for
	<sys/proc.h>.
	* acconfig.h: Provide default _KMEMUSER value.
	* config.in, configure: Re-generate.
	* NEWS: Mention fix.
@
text
@d322 8
a329 12
case $host_os in
  osf5.*)
    # ncurses does not work on native alphaev68-dec-osf5.1
    # -- chastain 2004-04-24
    AC_SEARCH_LIBS(initscr, [curses], [],
      [AC_MSG_WARN([no curses library found])])
    ;;
  *)
    AC_SEARCH_LIBS(initscr, [ncurses Hcurses curses pdcurses], [],
      [AC_MSG_WARN([no curses library found])])
    ;;
esac
@


1.151
log
@2004-04-25  Michael Chastain  <mec.gnu@@mindspring.com>

	Fix PR gdb/1626.
	* configure.in: Check for curses after termcap.
	On osf5.*, do not check for ncurses.
	* configure: Regenerate.
@
text
@d635 4
@


1.150
log
@	* Makefile.in (linux_nat_h): Update dependencies.
	* configure.in: Check for <gnu/libc-version.h>.
	* configure: Regenerate.
	* config.in: Regenerate.
	* linux-nat.h: Include "target.h".  Add waitstatus field to
	struct lwp_info.
	* lin-lwp.c (add_lwp): Initialize waitstatus.kind.
	(lin_lwp_attach_lwp): Don't attach to LWPs we have already attached
	to.
	(lin_lwp_handle_extended): New function.  Handle clone events.
	(wait_lwp): Use lin_lwp_handle_extended.  Update comment about
	thread exit events.
	(child_wait): Handle clone events.
	(lin_lwp_wait: Use lin_lwp_handle_extended and handle clone events.
	* linux-nat.c (linux_enable_event_reporting): Turn on
	PTRACE_O_TRACECLONE.
	(linux_handle_extended_wait): Handle clone events.
	* thread-db.c: Include <gnu/libc-version.h>.
	(struct private_thread_info): Add dying flag.
	(enable_thread_event_reporting): Enable TD_DEATH for glibc 2.2 and
	higher.
	(attach_thread): Update comments.  Handle dying threads.
	(detach_thread): Set the dying flag.
	(check_event): Always call attach_thread.
@
text
@a137 20
# FIXME: kettenis/20030102: We seem to prefer HP curses (Hcurses) over
# Xcurses on HP-UX; see the `-D__HP_CURSES' in the relevant host
# Makefile fragments.  That's why we need to have `Hcurses' before
# `curses'.  I don't see why we should use HP curses if a more
# standard curses is available, except that according to HP's
# documentation one needs to compile `-D_XOPEN_SOURCE_EXTENDED' on
# HP-UX 10.10 and 10.20.

AC_SEARCH_LIBS(initscr, [ncurses Hcurses curses pdcurses], [],
    [AC_MSG_WARN([no curses library found])])

# Check whether the wborder function is provided by the curses
# library detected above.  In certain implementations such as
# the HP/UX Hcurses for instance, this function is provided by an
# additional library.  So if we did not find this function inside
# the curses library, try some alternate libraries we know might
# provide it.
AC_SEARCH_LIBS(wborder, [cur_colr], [],
    [AC_MSG_WARN([wborder function not found, tui will be disabled])])

d313 30
@


1.149
log
@        * configure.in: Refine the previous change.
        * configure: Regenerate.
@
text
@d345 1
a345 1
AC_CHECK_HEADERS(proc_service.h thread_db.h)
@


1.149.2.1
log
@2004-04-28  Rainer Orth  <ro@@TechFak.Uni-Bielefeld.DE>
	    Andrew Cagney  <cagney@@redhat.com>

	* configure.in (mips-sgi-irix5*): Define _KMEMUSER for
	<sys/proc.h>.
	* acconfig.h: Provide default _KMEMUSER value.
	* config.in, configure: Re-generate.
	* NEWS: Mention fix.
@
text
@a624 4
  mips-sgi-irix5*)
      # Work around <sys/proc.h> needing _KMEMUSER problem on IRIX 5.
      AC_DEFINE([_KMEMUSER], 1)
      ;;
@


1.148
log
@        * configure.in: Make sure that the wborder function is available.
        Otherwise, search for it in the cur_colr library.
        * configure: Regenerate.
@
text
@d155 2
a156 3
AC_CHECK_FUNC(wborder, [wborder_available=yes],
    [AC_SEARCH_LIBS(wborder, [cur_colr], [wborder_available=yes],
        [AC_MSG_WARN([no wborder function found])])])
d169 1
a169 1
    if test "$ac_cv_search_initscr" != no -a "$wborder_available" = "yes"; then
@


1.147
log
@2004-02-18  Andrew Cagney  <cagney@@redhat.com>

	* configure.in: Add a TUI target to CONFIG_ALL, CONFIG_CLEAN,
	CONFIG_INSTALL and CONFIG_UNINSTALL.
	* configure: Re-generate.
	* interps.h (INTERP_TUI): Define.
	* Makefile.in: Update dependencies.
	(TUI): New macro.
	(tui-main.o): Specify dependencies.
	(install-tui, uninstall-tui, clean-tui, all-tui): New rules.
	* tui/tui-main.c: New file.
@
text
@d149 10
d170 1
a170 1
    if test "$ac_cv_search_initscr" != no; then
@


1.147.2.1
log
@Merge mainline to intercu branch.
@
text
@a148 9
# Check whether the wborder function is provided by the curses
# library detected above.  In certain implementations such as
# the HP/UX Hcurses for instance, this function is provided by an
# additional library.  So if we did not find this function inside
# the curses library, try some alternate libraries we know might
# provide it.
AC_SEARCH_LIBS(wborder, [cur_colr], [],
    [AC_MSG_WARN([wborder function not found, tui will be disabled])])

d160 1
a160 1
    if test "$ac_cv_search_initscr" != no -a "$ac_cv_search_wborder" != no; then
@


1.147.2.2
log
@Merge GDB mainline of 20040402 to intercu branch.
@
text
@d345 1
a345 1
AC_CHECK_HEADERS(proc_service.h thread_db.h gnu/libc-version.h)
@


1.147.2.3
log
@Merge mainline to intercu branch - 2004-09-15
@
text
@a44 12
dnl List of object files and targets accumulated by configure.

CONFIG_OBS=
CONFIG_DEPS=
CONFIG_SRCS=
ENABLE_CFLAGS=

CONFIG_ALL=
CONFIG_CLEAN=
CONFIG_INSTALL=
CONFIG_UNINSTALL=

d46 1
a46 1

d48 1
a48 49

localedir='${datadir}/locale'
AC_SUBST(localedir)

if test "x$POSUB" != x; then

  dnl Lifted from GCC's config/gettext.m4.
  AC_MSG_CHECKING(for catalogs to be installed)
  # Look for .po and .gmo files in the source directory.
  CATALOGS=  AC_SUBST(CATALOGS)
  XLINGUAS=
  for cat in $srcdir/po/*.gmo $srcdir/po/*.po; do
    # If there aren't any .gmo files the shell will give us the
    # literal string "../path/to/srcdir/po/*.gmo" which has to be
    # weeded out.
    case "$cat" in *\**)
      continue;;
    esac
    # The quadruple backslash is collapsed to a double backslash
    # by the backticks, then collapsed again by the double quotes,
    # leaving us with one backslash in the sed expression (right
    # before the dot that mustn't act as a wildcard).
    cat=`echo $cat | sed -e "s!$srcdir/!!" -e "s!\\\\.po!.gmo!"`
    lang=`echo $cat | sed -e 's!po/!!' -e "s!\\\\.gmo!!"`
    # The user is allowed to set LINGUAS to a list of languages to
    # install catalogs for.  If it's empty that means "all of them."
    if test "x$LINGUAS" = x; then
      CATALOGS="$CATALOGS $cat"
      XLINGUAS="$XLINGUAS $lang"
    else
      case "$LINGUAS" in *$lang*)
        CATALOGS="$CATALOGS $cat"
        XLINGUAS="$XLINGUAS $lang"
        ;;
      esac
    fi
  done
  LINGUAS="$XLINGUAS"
  AC_MSG_RESULT($LINGUAS)

   CONFIG_ALL="$CONFIG_ALL all-po"
   CONFIG_CLEAN="$CONFIG_CLEAN clean-po"		   
   CONFIG_INSTALL="$CONFIG_INSTALL install-po"
   CONFIG_UNINSTALL="$CONFIG_UNINSTALL uninstall-po"
fi

PACKAGE=gdb
AC_DEFINE_UNQUOTED(PACKAGE, "$PACKAGE", [Name of this package. ])
AC_SUBST(PACKAGE)
d60 11
d138 20
a333 26
# FIXME: kettenis/20030102: We seem to prefer HP curses (Hcurses) over
# Xcurses on HP-UX; see the `-D__HP_CURSES' in the relevant host
# Makefile fragments.  That's why we need to have `Hcurses' before
# `curses'.  I don't see why we should use HP curses if a more
# standard curses is available, except that according to HP's
# documentation one needs to compile `-D_XOPEN_SOURCE_EXTENDED' on
# HP-UX 10.10 and 10.20.

# FIXME: ncurses does not work on native alphaev68-dec-osf5.1,
# and probably other platforms.  AC_SEARCH_LIBS finds the library
# in a place such as /usr/local/lib/libncurses.a, but does not
# do anything to look for the matching include files.
# -- chastain 2004-05-01

AC_SEARCH_LIBS(initscr, [ncurses Hcurses cursesX curses pdcurses], [],
  [AC_MSG_WARN([no curses library found])])

# Check whether the wborder function is provided by the curses
# library detected above.  In certain implementations such as
# the HP/UX Hcurses for instance, this function is provided by an
# additional library.  So if we did not find this function inside
# the curses library, try some alternate libraries we know might
# provide it.
AC_SEARCH_LIBS(wborder, [cur_colr], [],
    [AC_MSG_WARN([wborder function not found, tui will be disabled])])

a360 1
AC_CHECK_HEADERS(sys/types.h)
d366 1
a366 1
# On Solaris 2.[789], we need to define _MSE_INT_H to avoid a clash
d370 1
a370 1
  solaris2.[[789]])
d374 1
a374 1
   Solaris 2.[789] when using GCC. ]])
d377 1
a377 1
AC_CHECK_HEADERS(curses.h cursesX.h ncurses.h ncurses/ncurses.h term.h)
a394 1

a428 64
AC_CHECK_FUNCS(ttrace)

# Check the return and argument types of ptrace.  No canned test for
# this, so roll our own.
gdb_ptrace_headers='
#if HAVE_SYS_TYPES_H
# include <sys/types.h>
#endif
#if HAVE_SYS_PTRACE_H
# include <sys/ptrace.h>
#endif
#if HAVE_UNISTD_H
# include <unistd.h>
#endif
'
# There is no point in checking if we don't have a prototype.
gcc_AC_CHECK_DECLS(ptrace, , [
  : ${gdb_cv_func_ptrace_ret='int'}
  : ${gdb_cv_func_ptrace_args='int,int,long,long'}
], $gdb_ptrace_headers)
# Check return type.
AC_CACHE_CHECK([return type of ptrace], gdb_cv_func_ptrace_ret,
  AC_TRY_COMPILE($gdb_ptrace_headers,
    [extern int ptrace ();],
    gdb_cv_func_ptrace_ret='int',
    gdb_cv_func_ptrace_ret='long'))
AC_DEFINE_UNQUOTED(PTRACE_TYPE_RET, $gdb_cv_func_ptrace_ret,
  [Define as the return type of ptrace.])
# Check argument types.
AC_CACHE_CHECK([types of arguments for ptrace], gdb_cv_func_ptrace_args, [
for gdb_arg1 in 'int' 'long'; do
 for gdb_arg2 in 'pid_t' 'int' 'long'; do
  for gdb_arg3 in 'int *' 'caddr_t' 'int' 'long'; do
   for gdb_arg4 in 'int' 'long'; do
     AC_TRY_COMPILE($gdb_ptrace_headers, [
extern $gdb_cv_func_ptrace_ret
  ptrace ($gdb_arg1, $gdb_arg2, $gdb_arg3, $gdb_arg4);
], [gdb_cv_func_ptrace_args="$gdb_arg1,$gdb_arg2,$gdb_arg3,$gdb_arg4";
    break 4;])
    for gdb_arg5 in 'int *' 'int' 'long'; do
     AC_TRY_COMPILE($gdb_ptrace_headers, [
extern $gdb_cv_func_ptrace_ret
  ptrace ($gdb_arg1, $gdb_arg2, $gdb_arg3, $gdb_arg4, $gdb_arg5);
], [
gdb_cv_func_ptrace_args="$gdb_arg1,$gdb_arg2,$gdb_arg3,$gdb_arg4,$gdb_arg5";
    break 5;])
    done
   done
  done
 done
done
# Provide a safe default value.
: ${gdb_cv_func_ptrace_args='int,int,long,long'}
])
ac_save_IFS=$IFS; IFS=','
set dummy `echo "$gdb_cv_func_ptrace_args" | sed 's/\*/\*/g'`
IFS=$ac_save_IFS
shift
AC_DEFINE_UNQUOTED(PTRACE_TYPE_ARG3, $[3],
  [Define to the type of arg 3 for ptrace.])
if test -n "$[5]"; then
  AC_DEFINE_UNQUOTED(PTRACE_TYPE_ARG5, $[5],
    [Define to the type of arg 5 for ptrace.])
fi
a490 20
# See if <sys/proc.h> defines `struct thread' with a td_pcb member.
AC_CACHE_CHECK([for td_pcb in struct thread], gdb_cv_struct_thread_td_pcb,
[AC_TRY_COMPILE([#include <sys/param.h>
#include <sys/proc.h>], [struct thread td; td.td_pcb;],
gdb_cv_struct_thread_td_pcb=yes, gdb_cv_struct_thread_td_pcb=no)])
if test $gdb_cv_struct_thread_td_pcb = yes; then
  AC_DEFINE(HAVE_STRUCT_THREAD_TD_PCB, 1,
            [Define to 1 if your system has td_pcb in struct thread.])
fi

# See if <sys/lwp.h> defines `struct lwp`.
AC_CACHE_CHECK([for struct lwp], gdb_cv_struct_lwp,
[AC_TRY_COMPILE([#include <sys/param.h>
#include <sys/lwp.h>], [struct lwp l;],
gdb_cv_struct_lwp=yes, gdb_cv_struct_lwp=no)])
if test $gdb_cv_struct_lwp = yes; then
  AC_DEFINE(HAVE_STRUCT_LWP, 1,
            [Define to 1 if your system has struct lwp.])
fi

a624 4
  mips-sgi-irix5*)
      # Work around <sys/proc.h> needing _KMEMUSER problem on IRIX 5.
      AC_DEFINE([_KMEMUSER], 1)
      ;;
a854 1
    LDFLAGS="${SAVE_LDFLAGS}"
d1117 1
a1117 8
case "${host}" in
*-*-cygwin*)
    configdir="win"
    ;;
*)
    configdir="unix"
    ;;
esac
d1136 8
a1143 1
	tcldir="../tcl/${configdir}/"
d1159 8
a1166 1
	   tkdir="../tk/${configdir}/"
a1288 5
# List of host floatformats.
AC_DEFINE_UNQUOTED(GDB_HOST_FLOAT_FORMAT,$gdb_host_float_format,[Host float floatformat])
AC_DEFINE_UNQUOTED(GDB_HOST_DOUBLE_FORMAT,$gdb_host_double_format,[Host double floatformat])
AC_DEFINE_UNQUOTED(GDB_HOST_LONG_DOUBLE_FORMAT,$gdb_host_long_double_format,[Host long double floatformat])

d1326 1
a1326 1
s/DEPRECATED_TM_FILE[ 	]*=[ 	]*\([^ 	]*\)/\1/p
d1368 3
a1370 3
# If hostfile (XM_FILE) and/or targetfile (DEPRECATED_TM_FILE) and/or
# nativefile (NAT_FILE) is not set in config/*/*.m[ht] files, we link
# to an empty version.
d1379 1
a1379 4
    case "${hostfile}" in
      xm-*.h ) GDB_XM_FILE="config/${gdb_host_cpu}/${hostfile}" ;;
      * ) GDB_XM_FILE="${hostfile}"
    esac
d1382 1
a1382 1
    AC_DEFINE_UNQUOTED(GDB_XM_FILE, "${GDB_XM_FILE}")
d1390 1
a1390 4
    case "${targetfile}" in
      tm-*.h ) GDB_TM_FILE="config/${gdb_target_cpu}/${targetfile}" ;;
      * ) GDB_TM_FILE="${targetfile}"
    esac
d1393 1
a1393 1
    AC_DEFINE_UNQUOTED(GDB_TM_FILE, "${GDB_TM_FILE}")
d1401 1
a1401 4
    case "${nativefile}" in
      nm-*.h ) GDB_NM_FILE="config/${gdb_host_cpu}/${nativefile}" ;;
      * ) GDB_NM_FILE="${nativefile}"
    esac
d1404 1
a1404 1
    AC_DEFINE_UNQUOTED(GDB_NM_FILE, "${GDB_NM_FILE}")
d1440 1
a1440 1
sed -e '/^DEPRECATED_TM_FILE[ 	]*=/s,^DEPRECATED_TM_FILE[ 	]*=[ 	]*,&config/'"${gdb_target_cpu}"'/,
@


1.147.2.4
log
@Merge from mainline.
@
text
@d198 1
a198 1
    if test "$ac_cv_search_mvwaddstr" != no; then
d335 3
a337 18
# For the TUI, we need enhanced curses functionality.
#
# FIXME: kettenis/20040905: We prefer ncurses over the vendor-supplied
# curses library because the latter might not provide all the
# functionality we need.  However, this leads to problems on systems
# where the linker searches /usr/local/lib, but the compiler doesn't
# search /usr/local/include, if ncurses is installed in /usr/local.  A
# default installation of ncurses on alpha*-dec-osf* will lead to such
# a situation.
AC_SEARCH_LIBS(mvwaddstr, [ncurses cursesX curses])

if test "$ac_cv_search_mvwaddstr" = no; then
  AC_MSG_WARN([no curses library found])
fi

# Since GDB uses Readline, we need termcap functionality.  In many
# cases this will be provided by the curses library, but some systems
# have a seperate termcap library, or no curses library at all.
d348 5
d355 3
a357 2
# These are the libraries checked by Readline.
AC_SEARCH_LIBS(tgetent, [termcap tinfo curses ncurses])
d363 26
@


1.146
log
@2004-02-16  Andrew Cagney  <cagney@@redhat.com>

	* configure.in: Always check for curses, including pdcurses.
	Warn, instead of error, when no curses are found.  Enable TUI when
	curses is available.
	* configure: Re-generate.
@
text
@d166 4
@


1.145
log
@2004-02-15  Andrew Cagney  <cagney@@redhat.com>

	* configure.in (build_warnings): Add -Wunused-function.
	* configure: Re-generate.
@
text
@d138 11
d157 1
a157 1
  esac])
d160 7
a166 5
    CONFIG_OBS="$CONFIG_OBS \$(SUBDIR_TUI_OBS)"
    CONFIG_DEPS="$CONFIG_DEPS \$(SUBDIR_TUI_DEPS)"
    CONFIG_SRCS="$CONFIG_SRCS \$(SUBDIR_TUI_SRCS)"
    ENABLE_CFLAGS="$ENABLE_CFLAGS \$(SUBDIR_TUI_CFLAGS)"
    need_curses=yes
d295 1
a295 14
# --enable-tui, we need full curses functionality.
#
# FIXME: kettenis/20030102: We seem to prefer HP curses (Hcurses) over
# Xcurses on HP-UX; see the `-D__HP_CURSES' in the relevant host
# Makefile fragments.  That's why we need to have `Hcurses' before
# `curses'.  I don't see why we should use HP curses if a more
# standard curses is available, except that according to HP's
# documentation one needs to compile `-D_XOPEN_SOURCE_EXTENDED' on
# HP-UX 10.10 and 10.20.

if test "$need_curses" = yes; then
  AC_SEARCH_LIBS(initscr, [ncurses Hcurses curses], [],
    [AC_MSG_ERROR([no curses library found])])
fi
@


1.144
log
@2004-02-08  Andrew Cagney  <cagney@@redhat.com>

	* configure.in (CONFIG_LIB_OBS): Replace with CONFIG_OBS.
	* configure: Re-generate.
@
text
@d1011 1
a1011 1
-Wunused-label"
@


1.143
log
@2004-02-08  Andrew Cagney  <cagney@@redhat.com>

	* configure.in (CONFIG_ALL): Set to Makefile target, and not
	makefile macro.
	* configure: Re-generate.
	(CONFIG_CLEAN, CONFIG_INSTALL, CONFIG_UNINSTALL): Ditto.
	* Makefile.in (SUBDIR_CLI_CLEAN): Delete.
	(SUBDIR_CLI_INSTALL, SUBDIR_CLI_UNINSTALL): Delete.
	(SUBDIR_CLI_ALL, SUBDIR_GDBTK_ALL): Delete.
	(SUBDIR_GDBTK_CLEAN, SUBDIR_GDBTK_INSTALL): Delete.
	(SUBDIR_GDBTK_UNINSTALL, SUBDIR_MI_ALL): Delete.
	(SUBDIR_MI_CLEAN, SUBDIR_MI_INSTALL): Delete.
	(SUBDIR_MI_UNINSTALL, SUBDIR_TUI_ALL): Delete.
	(SUBDIR_TUI_CLEAN, SUBDIR_TUI_INSTALL): Delete.
	(SUBDIR_TUI_UNINSTALL, SUBDIR_CLI_CLEAN): Delete.
@
text
@d862 1
a862 1
            CONFIG_LIB_OBS="${CONFIG_LIB_OBS} hpux-thread.o"
d880 1
a880 1
         CONFIG_LIB_OBS="${CONFIG_LIB_OBS} sol-thread.o"
d927 1
a927 1
         CONFIG_LIB_OBS="${CONFIG_LIB_OBS} aix-thread.o"
@


1.142
log
@2004-02-07  Andrew Cagney  <cagney@@redhat.com>

	* configure.in (CONFIG_INITS, CONFIG_LIB_OBS): Delete.
	* configure: Re-generate (with correct autoconf).
	* Makefile.in (INIT_FILES): Replace CONFIG_INITS with CONFIG_SRCS.
	(CONFIG_LIB_OBS, CONFIG_INITS): Delete.
	(COMMON_OBS): Add "main.o" and "annotate.o".
	(ANNOTATE_OBS): Delete.
	(OBS): Remove ANNOTATE_OBS.
	(DEPFILES): Replace CONFIG_LIB_OBS with CONFIG_LIB_OBS, remove
	CONFIG_INITS.
	(gdb$(EXEEXT), insight$(EXEEXT)): Do not depend on, or link
	against CONFIG_OBS and "main.o".
	(SUBDIR_CLI_INITS, SUBDIR_MI_INITS): Delete.
	(SUBDIR_TUI_INITS, SUBDIR_GDBTK_INITS): Delete.
@
text
@a115 4
    CONFIG_ALL="$CONFIG_ALL \$(SUBDIR_CLI_ALL)"
    CONFIG_CLEAN="$CONFIG_CLEAN \$(SUBDIR_CLI_CLEAN)"
    CONFIG_INSTALL="$CONFIG_INSTALL \$(SUBDIR_CLI_INSTALL)"
    CONFIG_UNINSTALL="$CONFIG_UNINSTALL \$(SUBDIR_CLI_UNINSTALL)"
a134 4
    CONFIG_ALL="$CONFIG_ALL \$(SUBDIR_MI_ALL)"
    CONFIG_CLEAN="$CONFIG_CLEAN \$(SUBDIR_MI_CLEAN)"
    CONFIG_INSTALL="$CONFIG_INSTALL \$(SUBDIR_MI_INSTALL)"
    CONFIG_UNINSTALL="$CONFIG_UNINSTALL \$(SUBDIR_MI_UNINSTALL)"
a152 4
    CONFIG_ALL="$CONFIG_ALL \$(SUBDIR_TUI_ALL)"
    CONFIG_CLEAN="$CONFIG_CLEAN \$(SUBDIR_TUI_CLEAN)"
    CONFIG_INSTALL="$CONFIG_INSTALL \$(SUBDIR_TUI_INSTALL)"
    CONFIG_UNINSTALL="$CONFIG_UNINSTALL \$(SUBDIR_TUI_UNINSTALL)"
d1200 4
a1203 4
	   CONFIG_ALL="${CONFIG_ALL} \$(SUBDIR_GDBTK_ALL)"
	   CONFIG_CLEAN="${CONFIG_CLEAN} \$(SUBDIR_GDBTK_CLEAN)"
	   CONFIG_INSTALL="${CONFIG_INSTALL} \$(SUBDIR_GDBTK_INSTALL)"
	   CONFIG_UNINSTALL="${CONFIG_UNINSTALL} \$(SUBDIR_GDBTK_UNINSTALL)"
@


1.141
log
@2004-01-29  Roland McGrath  <roland@@redhat.com>

	* configure.in (NEW_PROC_API): Also match solaris2.9 for this test.
	* configure: Regenerated.
@
text
@a62 1
CONFIG_LIB_OBS=
a64 1
CONFIG_INITS=
a114 1
    CONFIG_INITS="$CONFIG_INITS \$(SUBDIR_CLI_INITS)"
a137 1
    CONFIG_INITS="$CONFIG_INITS \$(SUBDIR_MI_INITS)"
a159 1
    CONFIG_INITS="$CONFIG_INITS \$(SUBDIR_TUI_INITS)"
a1211 1
           CONFIG_INITS="${CONFIG_INITS} \$(SUBDIR_GDBTK_INITS)"
a1280 1
AC_SUBST(CONFIG_LIB_OBS)
a1282 1
AC_SUBST(CONFIG_INITS)
@


1.140
log
@2004-01-19  Michael Chastain  <mec.gnu@@mindspring.com>

	* MAINTAINERS: Delete mmalloc.
	* Makefile.in: Delete MMALLOC, MMALLOC_CFLAGS, -lmmalloc, mmalloc_h.
	* NEWS: Mention removal of --with-malloc.
	* acconfig.h: Delete USE_MMALLOC, MMCHECK_FORCE.
	* config.in: Regenerate.
	* configure: Regenerate.
	* configure.in: Delete MMALLOC_CFLAGS, MMALLOC, --with-mmalloc, USE_MMALLOC, MMCHECK_FORCE.
	* gdbinit.in: Remove mmalloc.
	* utils.c: Delete USE_MMALLOC, NO_MMCHECK, MMCHECK_FORCE, malloc_botch.
	* config/alpha/alpha-linux.mh: Delete MMALLOC, MMALLOC_CFLAGS.
	* config/i386/go32.mh: Likewise.
	* config/i386/interix.mh: Likewise.
	* config/powerpc/xm-linux.h: Delete MMAP_BASE_ADDRESS, MMAP_INCREMENT.

2004-01-19  Michael Chastain  <mec.gnu@@mindspring.com>

	* gdbint.texinfo: Delete USE_MMALLOC, NO_MMCHECK, MMCHECK_FORCE,
	MMAP_BASE_ADDRESS, MMAP_INCREMENT.
@
text
@d626 1
a626 1
  *-*-solaris2.[[678]])
@


1.139
log
@2004-01-13  Andrew Cagney  <cagney@@redhat.com>

	* configure.in: Update copyright year.
	(build_warnings): Add -Wunused-label.
	* configure: Re-generate.

2004-01-13  Andrew Cagney  <cagney@@redhat.com>

	* gdbint.texinfo: Update copyright year.
	(Coding): Add -Wunused-label to list of -Werror warnings.
@
text
@a1084 20
MMALLOC_CFLAGS=
MMALLOC=
AC_SUBST(MMALLOC_CFLAGS)
AC_SUBST(MMALLOC)

AC_ARG_WITH(mmalloc,
[  --with-mmalloc          Use memory mapped malloc package],
[case "${withval}" in
  yes)  want_mmalloc=true ;;
  no)   want_mmalloc=false;;
  *)    AC_MSG_ERROR(bad value ${withval} for GDB with-mmalloc option) ;;
esac],[want_mmalloc=false])dnl

if test x$want_mmalloc = xtrue; then
   AC_DEFINE(USE_MMALLOC)
   AC_DEFINE(MMCHECK_FORCE)
   MMALLOC_CFLAGS="-I$srcdir/../mmalloc"
   MMALLOC='../mmalloc/libmmalloc.a'
fi

@


1.138
log
@* configure.in: Check for <machine/reg.h>.  Check for `struct reg'
in <machine/reg.h>.
* configure, config.in: Regenerate.
@
text
@d2 1
a2 1
dnl Copyright 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003
d1027 2
a1028 1
-Wformat -Wparentheses -Wpointer-arith -Wuninitialized -Wformat-nonliteral"
d1030 1
a1030 1
# -Wunused-function -Wunused-label -Wunused-variable -Wunused-value
@


1.137
log
@	* configure.in: Check for st_blocks member in struct stat and
	define HAVE_STRUCT_STAT_ST_BLOCKS accordingly.

	* acconfig.h (HAVE_STRUCT_STAT_ST_BLOCKS): New undef.

	* configure, config.in: Regenerated.
@
text
@d346 1
d493 10
@


1.136
log
@Temporary fix for last change.
@
text
@d386 12
@


1.135
log
@	* remote-fileio.c (remote_fileio_to_fio_stat)
	(remote_fileio_func_fstat) [HAVE_STRUCT_STAT_ST_BLOCKS]: Support
	systems that don't have `st_blocks' member in `struct stat'.

	* configure.in (HAVE_STRUCT_STAT_ST_BLOCKS): Ditto.
@
text
@a385 6
# remote-fileio.c needs st_blocks
AC_CHECK_MEMBER(struct stat.st_blocks,
		[AC_DEFINE(HAVE_STRUCT_STAT_ST_BLOCKS, 1,
			   [Define if struct stat has st_blocks member.])],
		[#include <sys/stat.h>])

@


1.134
log
@* configure.in: Set ac_cv_search_tgetent to "none required" for
"*djgpp*" targets as well (DJGPP doesn't have termcap and doesn't
need one).

* config/djgpp/config.sed: Tweak to adapt to the changes in
configury.

* config/djgpp/djconfig.sh: Fix the test of unpacked
distribution, since there's no gdb.cxx directory anymore.
@
text
@d386 6
@


1.133
log
@
2003-11-14  Jeff Johnston  <jjohnstn@@redhat.com>

        * libunwind-frame.c: New file.
        * libunwind-frame.h: New file.
        * acconfig.h (HAVE_LIBUNWIND): #undef reference added.
        * configure.in: Add --with-libunwind option support.  Define
        HAVE_LIBUNWIND if libunwind support selected / defaulted.
        Also check for libunwind.h and libunwind-ia64.h headers.
        * configure: Regenerated.
        * Makefile.in: Add support for libunwind-frame.o.
        * config.in: Regenerated.
@
text
@d320 1
a320 2
  go32*)
    # ??? Is this really true?
@


1.132
log
@2003-09-03  Andrew Cagney  <cagney@@redhat.com>

	* defs.h: Do not include "arch-utils.h".
	(GDB_MULTI_ARCH): If not defined, set to GDB_MULTI_ARCH_PARTIAL or
	GDB_MULTI_ARCH_PURE.
	* configure.in (GDB_MULTI_ARCH): Do not define.
	* configure, config.in: Regenerate.
	* configure.tgt: Do not set variable "gdb_multi_arch".
	* config/s390/s390x.mt (GDB_MULTI_ARCH): Delete.
	* config/s390/s390.mt (GDB_MULTI_ARCH): Delete.
	* config/i386/x86-64linux.mt (GDB_MULTI_ARCH): Delete.
	* config/v850/v850.mt (TM_FILE): Delete disabled definition.
	* config/m68hc11/m68hc11.mt (TM_FILE): Delete definition.
	* config/vax/tm-vax.h (GDB_MULTI_ARCH): Delete definition.
	* config/sparc/tm-sparc.h (GDB_MULTI_ARCH): Delete definition.
	* config/sparc/tm-sun4sol2.h (GDB_MULTI_ARCH): Delete definition.
	* config/sparc/tm-nbsd.h (GDB_MULTI_ARCH): Delete definition.
	* config/sparc/tm-linux.h (GDB_MULTI_ARCH): Delete definition.
	* config/sparc/tm-sp64.h (GDB_MULTI_ARCH): Delete definition.
	* config/pa/tm-hppa64.h (GDB_MULTI_ARCH): Delete definition.
	* config/ns32k/tm-ns32k.h (GDB_MULTI_ARCH): Delete definition.
	* config/m68k/tm-m68k.h (GDB_MULTI_ARCH): Delete definition.
	* config/i386/tm-i386.h (GDB_MULTI_ARCH): Delete definition.
	* config/h8300/tm-h8300.h (GDB_MULTI_ARCH): Delete definition.
	* config/frv/tm-frv.h (GDB_MULTI_ARCH): Delete definition.
	* config/alpha/tm-alpha.h (GDB_MULTI_ARCH): Delete definition.
@
text
@d195 24
@


1.132.4.1
log
@* configure.in: Check for <machine/reg.h>.  Check for `struct reg'
in <machine/reg.h>.
* configure, config.in: Regenerate.
@
text
@a322 1
AC_CHECK_HEADERS(machine/reg.h)
a456 10
fi

# See if <machine/reg.h> degines `struct reg'.
AC_CACHE_CHECK([for struct reg in machine/reg.h], gdb_cv_struct_reg,
[AC_TRY_COMPILE([#include <sys/types.h>
#include <machine/reg.h>], [struct reg r;],
gdb_cv_struct_reg=yes, gdb_cv_struct_reg=no)])
if test $gdb_cv_struct_reg = yes; then
  AC_DEFINE(HAVE_STRUCT_REG, 1,
            [Define to 1 if your system has struct reg in <machine/reg.h>.])
@


1.131
log
@* configure.in: Search for gethostbyname in libnsl.
* configure: Regenerated.
@
text
@a1308 4
GDB_MULTI_ARCH=`sed -n '
s/GDB_MULTI_ARCH[ 	]*=[ 	]*\([^ 	]*\)[ 	]*/\1/p
' ${target_makefile_frag}`

a1316 27

# New targets should just set gdb_multi_arch=yes in configure.tgt.
# Old targets being converted can either do that or set GDB_MULTI_ARCH
# in the target specific makefile frag.  Eventually gdb_multi_arch=yes
# will be the default.
if test x"${GDB_MULTI_ARCH}" = x ; then
    case "${gdb_multi_arch}" in
    yes ) GDB_MULTI_ARCH=GDB_MULTI_ARCH_PURE ;;
    no ) GDB_MULTI_ARCH=0 ;;
    0|1|2 ) GDB_MULTI_ARCH=${gdb_multi_arch} ;;
    esac
fi
if test x"${GDB_MULTI_ARCH}" != x ; then
    AC_DEFINE_UNQUOTED(GDB_MULTI_ARCH, ${GDB_MULTI_ARCH})
fi
# Warn the user when they use an old practice
case "${GDB_MULTI_ARCH}" in
    "" ) ;;
    0 | GDB_MULTI_ARCH_PARTIAL | 1 | GDB_MULTI_ARCH_TM | 2 )
	AC_MSG_WARN("GDB: Target is not pure multi-arch") ;;
    GDB_MULTI_ARCH_PURE )
	if test x"${targetfile}" != x ; then
	    AC_MSG_WARN("GDB: Ignoring TM_FILE in ${target_makefile_frag}")
	    targetfile=""
	fi ;;
    *)  AC_MSG_ERROR("GDB: Unknown GDB_MULTI_ARCH value ${GDB_MULTI_ARCH}");;
esac
@


1.130
log
@* configure.in: Remove redundant AC_MSG_RESULT in check for
uintptr_t in stdint.h.
* configure: Regenerated.
@
text
@d267 3
@


1.129
log
@2003-07-22  Andrew Cagney  <cagney@@redhat.com>

	* configure.in (build_warnings): Add -Wformat-nonliteral.
	* configure: Re-generate.

2003-07-22  Andrew Cagney  <cagney@@redhat.com>

	* gdbint.texinfo (Coding): Add -Wformat-nonliteral to -Werror
	list.
@
text
@a528 1
AC_MSG_RESULT($gdb_cv_have_uintptr_t)
@


1.128
log
@2003-06-08  Andrew Cagney  <cagney@@redhat.com>

	* acinclude.m4 (gcc_AC_CHECK_DECL, (gcc_AC_CHECK_DECL): Stolen
	from GCC's acinclude.m4.
	* configure.in: Check for getopt's delcaration.
	* aclocal.m4, config.in, configure: Re-generate.
	* main.c (error_init): Delete declaration.
	* defs.h (error_init): Declare.
	* rs6000-tdep.c (rs6000_fetch_pointer_argument): Make static.
	(rs6000_convert_from_func_ptr_addr): Make static.
	(_initialize_rs6000_tdep): Add declaration.
	* cli/cli-cmds.c (dont_repeat): Delete declaration.
	(show_commands, set_verbose, show_history): Delete declaration.
	* top.h (set_verbose): Add declaration.
	(show_history, set_history, show_commands): Add declaration.
	(do_restore_instream_cleanup): Add declaration.
	* objc-lang.c (specialcmp): Make static.
	(print_object_command): Make static.
	(find_objc_msgsend): Make static.
	(find_objc_msgcall_submethod_helper): Make static.
	(find_objc_msgcall_submethod): Make static.
	(_initialize_objc_language): Add declaration.
	(find_implementation_from_class): Make static.
	(find_implementation): Make static.
	* objc-exp.y (yylex): Delete lookup_struct_typedef declaration.
	* objc-lang.h (lookup_struct_typedef): Add declaration.
	* cli/cli-interp.c (_initialize_cli_interp): Add declaration.
	* cli/cli-script.c (clear_hook_in_cleanup): Make static.
	(do_restore_user_call_depth): Make static.
	(do_restore_instream_cleanup): Delete declaration.
	(dont_repeat): Delete declaration.
	* cli/cli-decode.c (add_abbrev_cmd): Delete function.
	* cli/cli-dump.c (_initialize_cli_dump): Add declaration.
	* reggroups.c (_initialize_reggroup): Add declaration.
	* cp-support.c (_initialize_cp_support): Add declaration.
	* cp-abi.c (_initialize_cp_abi): Add declaration.
	* hpacc-abi.c (_initialize_hpacc_abi): Add declaration.
	* gnu-v3-abi.c (gnuv3_baseclass_offset): Make static.
	(_initialize_gnu_v3_abi): Add declaration.
	* gnu-v2-abi.c (gnuv2_value_rtti_type): Make static.
	(_initialize_gnu_v2_abi): Add declaration.
	* frame-base.c (_initialize_frame_base): Add declaration.
	* doublest.c (floatformat_from_length): Make static.
	* frame-unwind.c (_initialize_frame_unwind): Add declaration.
	* frame.c (create_sentinel_frame): Make static.
	(_initialize_frame): Add declaration.
	* top.c (do_catch_errors): Make static.
	(gdb_rl_operate_and_get_next_completion): Make static.
	* typeprint.c: Include "typeprint.h".
	* sentinel-frame.c (sentinel_frame_prev_register): Make static.
	(sentinel_frame_this_id): Make static.
	* p-valprint.c (_initialize_pascal_valprint): Add declaration.
	* ui-out.c (make_cleanup_ui_out_begin_end): Delete function.
	* dwarf2-frame.c (dwarf2_frame_cache): Make static.
	* p-exp.y (push_current_type, pop_current_type): ISO C declaration.
	* dwarf2expr.h (dwarf_expr_context): ISO C declaration.
	* maint.c (maintenance_print_architecture): Make static.
	* signals/signals.c (_initialize_signals): Add declaration.
	* std-regs.c (_initialize_frame_reg): Add declaration.
	* jv-exp.y (push_variable): ISO C definition.
	(push_qualified_expression_name): Ditto.
	* memattr.c (_initialize_mem): Add declaration.
	* remote.c (remote_check_watch_resources): Make static.
	(remote_stopped_by_watchpoint): Make static.
	(remote_stopped_data_address): Make static.
	* d10v-tdep.c (nr_dmap_regs): Make static.
	(a0_regnum): Make static.
	(d10v_frame_unwind_cache): Make static.
	(d10v_frame_p): Make static.
	* osabi.c (show_osabi): Make static.
	(_initialize_gdb_osabi): Add extern declaration.
	* gdbtypes.c (make_qualified_type): Make static.
	(safe_parse_type): Make static.
	* macrocmd.c (_initialize_macrocmd): Add extern declaration.
	* macrotab.c (macro_bcache_free): Make static.
	* interps.c (interp_set_quiet): Make static.
	(interpreter_exec_cmd): Make static.
	* stack.h (select_frame_command): New file.
	* stack.c: Include "stack.h".
	(select_frame_command_wrapper): Delete function.
	(select_frame_command): Make global.
	* infcall.c: Include "infcall.h".
	* linespec.c: Include "linespec.h".
	* symfile.c (sections_overlap): Make static.
	* cp-support.h (cp_initialize_namespace): ISO C declaration.
	* charset.c (_initialize_charset): Add missing prototype.
	* regcache.c (init_legacy_regcache_descr): Make static.
	(do_regcache_xfree): Make static.
	(regcache_xfer_part): Make static.
	(_initialize_regcache): Add missing prototype.
	* breakpoint.c (parse_breakpoint_sals): Make static.
	(breakpoint_sals_to_pc): Make static.
	* interps.h (clear_interpreter_hooks): ISO C declaration.
	* Makefile.in (stack_h): Define.
	(stack.o, typeprint.o, mi-main.o): Update dependencies.
	(mi-cmd-stack.o, infcall.o, linespec.o): Update dependencies.

Index: mi/ChangeLog
2003-06-08  Andrew Cagney  <cagney@@redhat.com>

	* mi-parse.c (_initialize_mi_parse): Delete function.
	* mi-main.c: Include "mi-main.h".
	* mi-interp.c (_initialize_mi_interp): Add declaration.
	* mi-cmd-stack.c: Include "stack.h".
	(select_frame_command_wrapper): Delete extern declaration.
	(mi_cmd_stack_select_frame): Replace select_frame_command_wrapper
	with select_frame_command.
@
text
@d979 1
a979 1
-Wformat -Wparentheses -Wpointer-arith -Wuninitialized"
@


1.127
log
@
2003-06-04  Jeff Johnston  <jjohnstn@@redhat.com>

        * acconfig.h: Add HAVE_TKILL_SYSCALL definition check.
        * config.in: Regenerated.
        * configure.in: Add test for syscall function and check for
        __NR_tkill macro in <syscall.h> to set HAVE_TKILL_SYSCALL.
        * configure: Regenerated.
        * lin-lwp.c [HAVE_TKILL_SYSCALL]: Include <unistd.h> and
        <sys/syscall.h>.
        (kill_lwp): New function that uses tkill syscall or
        uses kill, depending on whether threading model is nptl or not.
        All callers of kill() changed to use kill_lwp().
        (lin_lwp_wait): Make special check when WIFEXITED occurs to
        see if all threads have already exited in the nptl model.
        (stop_and_resume_callback): New callback function used by the
        lin_lwp_wait thread exit handling code.
        (stop_wait_callback): Check for threads already having exited and
        delete such threads fromt the lwp list when discovered.
        (stop_callback): Don't assert retcode of kill call.

        Roland McGrath  <roland@@redhat.com>
        * i386-linux-nat.c (ps_get_thread_area): New function needed by
        nptl libthread_db.
@
text
@d360 6
@


1.126
log
@2003-02-26  Michael Chastain  <mec@@shout.net>

	* configure.in: New variable HAVE_UINTPTR_T.
	* configure, config.in: Regenerated.
@
text
@d387 1
d913 18
@


1.125
log
@* configure.in (TARGET_SYSTEM_ROOT): Set default to
${exec_prefix}/${target_alias}/sys-root.  Match explicit
'${exec_prefix}' (in addition to the expansion thereof) as
relocatable.
* configure: Rebuilt.
@
text
@d514 12
@


1.124
log
@Revert previous change.  Something doesn't work.
@
text
@d908 1
a908 1
 yes) AC_ERROR(with-sysroot must specify path) ;;
d924 2
a925 1
 ${test_prefix}*)
@


1.123
log
@2003-02-17  Andrew Cagney  <ac131313@@redhat.com>

	* configure.in (Makefile): Use the test ${target} != ${host},
	instead of the absence of the "nm.h" file, to determine of the
	configuration non-native.
	* configure: Regenerate.
@
text
@d1401 1
a1401 1
if test "${target}" != "${host}"; then
@


1.122
log
@* configure.in: Add check for _etext.
* maint.c (maintenance_set_profile_cmd): Use etext if _etext isn't
available.
* config.in, configure: regenerated.
@
text
@d1401 1
a1401 1
if test "${nativefile}" = ""; then
@


1.121
log
@* configure.in: Fix typo.
* configure: Regenerated.
@
text
@d207 10
@


1.120
log
@	* configure.in: Check that -pg works if using --enable-profiling.
	Check for monstartup and _mcleanup regardless of --enable-profiling.
	* maint.c: Check for monstartup and _mcleanup before using them.
	* config.in: Regenerated.
	* configure: Regenerated.
@
text
@d41 1
a41 1
# AC_PROG_RANLIB.  This can be removed when we switch to # Autoconf
@


1.119
log
@gdb/ChangeLog:
2003-01-23  Alexander Larsson <alexl@@redhat.com>
	    Jim Blandy  <jimb@@redhat.com>

	Add support for executables whose debug info has been separated
	out into a separate file, leaving only a link behind.
	* objfiles.h (struct objfile): New fields: separate_debug_objfile
	and separate_debug_objfile_backlink.
	(put_objfile_before): New declaration.
	* symfile.c: #include "filenames.h".
	(symbol_file_add_with_addrs_or_offsets): If this objfile has its
	debug info in a separate file, read that, too. Save the addrs
	argument, so we can use it again to read the separated debug info;
	syms_from_objfile modifies the table we pass it.
	(reread_symbols): After re-reading an objfile, call
	reread_separate_symbols to refresh its separate debug info
	objfile, if it has one.
	(reread_separate_symbols, find_separate_debug_file,
	get_debug_link_info, separate_debug_file_exists): New functions.
	(debug_file_directory): New global var.
	(_initialize_symfile): Initialize debug_file_directory, and
	provide the new `set debug-file-directory' command to let the user
	change it.
	* objfiles.c (free_objfile): If this objfile has its debug info in
	a separate objfile, free that one too.  If this is itself a
	separate debug info objfile, clear our parent's backlink.
	(put_objfile_before): New function.
	* utils.c (gnu_debuglink_crc32): New function.
	* defs.h (gnu_debuglink_crc32): New declaration.
	* Makefile.in (symfile.o): Note dependency on "filenames.h".
	* configure.in: Handle --with-separate-debug-dir config option.
	* acinclude.m4 (AC_DEFINE_DIR): New macro.
	* acconfig.h (DEBUGDIR): New macro.
	* configure, aclocal.m4, config.in: Regenerated.

gdb/doc/ChangeLog:
2003-01-23  Jim Blandy  <jimb@@redhat.com>

	* gdb.texinfo (Separate Debug Files): New section.
@
text
@d206 1
d208 3
d215 3
a217 2
  AC_CHECK_FUNC(monstartup, [],
    AC_MSG_ERROR(monstartup necessary to use --enable-profiling.))
d219 3
a221 2
  AC_CHECK_FUNC(_mcleanup, [],
    AC_MSG_ERROR(_mcleanup necessary to use --enable-profiling.))
@


1.118
log
@	Original patch by Tom Tromey <tromey@@cygnus.com> and
	Jason Molenda <jmolenda@@apple.com>.
	* Makefile.in (PROFILE_CFLAGS): Substitute from configure.
	(INTERNAL_LDFLAGS): Don't include PROFILE_CFLAGS.
	* NEWS: Mention profiling.
	* configure.in (--enable-gdbtk): Fix typo.
	(--enable-profiling): New.  Set PROFILE_CFLAGS.
	* maint.c (maintenance_set_profile_cmd): Remove NOTYET.
	Fill in function.
	(profiling_state): New variable.
	(mcleanup_wrapper): New function.
	(_initialize_maint): Remove NOTYET, fix call to
	add_setshow_boolean_cmd for "maint set profile".
	* configure: Regenerated.
@
text
@d50 9
@


1.117
log
@	* Makefile.in (TARGET_SYSTEM_ROOT, TARGET_SYSTEM_ROOT_DEFINE): New
	variables.
	(main.o): Custom rule which uses $(TARGET_SYSTEM_ROOT_DEFINE).
	* configure.in: Add --with-sysroot.
	* configure: Regenerated.
	* main.c (gdb_sysroot): New variable.
	(captured_main): Initialize gdb_sysroot.
	* defs.h (gdb_sysroot): New extern declaration.
	* solib.c (_initialize_solib): Initialize solib_absolute_prefix.
@
text
@d167 1
a167 1
[  --enable-gtk            enable gdbtk graphical user interface (GUI)],
d186 25
d1192 1
@


1.116
log
@	* Makefile.in (acconfig_h): Remove incorrect macro.
	(config_h): Define.
	(osabi.o): Update dependencies.
	* configure.tgt: Set gdb_osabi based on target triplet.
	* configure.in: Define GDB_OSABI_DEFAULT based on gdb_osabi.
	* configure: Regenerated.
	* config.in: Regenerated.
	* osabi.c: Include "arch-utils.h", "gdbcmd.h", and "command.h".
	(GDB_OSABI_DEFAULT): Define if not already defined.
	(user_osabi_state, user_selected_osabi, gdb_osabi_available_names)
	(set_osabi_string): New variables.
	(gdbarch_register_osabi): Add new OS ABI to
	gdb_osabi_available_names.
	(gdbarch_lookup_osabi): Honor specified and default OS ABIs.
	(set_osabi, show_osabi): New functions.
	(_initialize_gdb_osabi): Add "set osabi" and "show osabi" commands.
@
text
@d854 32
@


1.115
log
@* configure.in: Don't set and AC_SUBST SUBDIRS.
* configure: Regenerated.
@
text
@d1226 5
@


1.114
log
@* configure.in: Remove code dealing with shared libraries.
* Makefile.in: Remove HLDFLAGS and HLDENV.
* configure: Regenerated.
@
text
@a1249 2
SUBDIRS=$subdirs
AC_SUBST(SUBDIRS)
@


1.113
log
@* configure.in: Move code that provides the --enable-gdbtk option
right after the code that handles the --enable-tui option, and
polish it somewhat.
* configure: Regenerated.
@
text
@a1145 61
# Begin stuff to support --enable-shared
AC_ARG_ENABLE(shared,
[  --enable-shared         Use shared libraries],
[case "${enableval}" in
  yes) shared=true ;;
  no)  shared=false ;;
  *) shared=true ;;
esac])dnl

HLDFLAGS=
HLDENV=
# If we have shared libraries, try to set rpath reasonably.
if test "${shared}" = "true"; then
  case "${host}" in
  *-*-hpux*)
    HLDFLAGS='-Wl,+s,+b,$(libdir)'
    ;;
  *-*-irix5* | *-*-irix6*)
    HLDFLAGS='-Wl,-rpath,$(libdir)'
    ;;
  *-*-linux*aout*)
    ;;
  *-*-linux* | *-pc-linux-gnu*)
    HLDFLAGS='-Wl,-rpath,$(libdir)'
    ;;
  *-*-solaris*)
    HLDFLAGS='-R $(libdir)'
    ;;
  *-*-sysv4*)
    HLDENV='if test -z "$${LD_RUN_PATH}"; then LD_RUN_PATH=$(libdir); else LD_RUN_PATH=$${LD_RUN_PATH}:$(libdir); fi; export LD_RUN_PATH;'
    ;;
  esac
fi

# On SunOS, if the linker supports the -rpath option, use it to
# prevent ../bfd and ../opcodes from being included in the run time
# search path.
case "${host}" in
  *-*-sunos*)
    echo 'main () { }' > conftest.c
    ${CC} -o conftest -Wl,-rpath= conftest.c >/dev/null 2>conftest.t
    if grep 'unrecognized' conftest.t >/dev/null 2>&1; then
      :
    elif grep 'No such file' conftest.t >/dev/null 2>&1; then
      :
    elif grep 'do not mix' conftest.t >/dev/null 2>&1; then
      :
    elif grep 'some text already loaded' conftest.t >/dev/null 2>&1; then
      :
    elif test "${shared}" = "true"; then
      HLDFLAGS='-Wl,-rpath=$(libdir)'
    else
      HLDFLAGS='-Wl,-rpath='
    fi
    rm -f conftest.t conftest.c conftest
    ;;
esac
AC_SUBST(HLDFLAGS)
AC_SUBST(HLDENV)
# End stuff to support --enable-shared

@


1.112
log
@* configure.in: Call AC_GNU_SOURCE.  Check for pread64 using
AC_CHECK_FUNCS and remove the old check for pread64.
* acinclude.m4 (AC_GNU_SOURCE): New macro.
* acconfig.h (_GNU_SOURCE): Add.
(HAVE_PREAD64): Remove.
* configure, aclocal.m4, config.in: Regenerated.
@
text
@d165 21
a966 32

AC_ARG_ENABLE(gdbtk,
[  --enable-gdbtk          Enable GDBTK GUI front end],
[case "${enableval}" in
    yes)
	case "$host" in
	*go32*)
	    AC_MSG_WARN([GDB does not support GDBtk on host ${host}.  GDBtk will be disabled.])
	    enable_gdbtk=no ;;
	*windows*)
	    AC_MSG_WARN([GDB does not support GDBtk on host ${host}.  GDBtk will be disabled.])
	    enable_gdbtk=no ;;
	*)
	    enable_gdbtk=yes ;;
	esac ;;
    no)
	enable_gdbtk=no  ;;
    *)
	AC_MSG_ERROR(bad value ${enableval} given for gdbtk option) ;;
esac],
[
# Default is on for everything but go32 and Cygwin
case "$host" in
    *go32* | *windows*)
	;;
    *)
 	if test -d "${srcdir}/gdbtk" ; then
            enable_gdbtk=yes
	fi
	;;
esac
])
@


1.111
log
@* configure.in: Remove all use of the SUBDIRS variable; add
directories using the AC_CONFIG_SUBDIRS macro instead.  Polish
code providing the --enable-multi-ice option, and move it right in
front of the code that checks whether gdbserver is supported.
Polish that too.
* configure: Regenerated.
* Makefile.in (SUBDIRS): Substitute @@subdirs@@ instead of
@@SUBDIRS@@.
@
text
@d29 1
d311 1
a828 17
fi

dnl linux-proc.c wants to use pread64, which may require special CFLAGS
dnl -D_BSD_SOURCE is normally assumed but we have to specify it because of
dnl -D_XOPEN_SOURCE=500.
if test $host = $target; then
  case $target in
    *-linux*)
      save_CFLAGS=$CFLAGS
      CFLAGS="$CFLAGS -D_BSD_SOURCE -D_XOPEN_SOURCE=500 -D_LARGEFILE64_SOURCE"
      AC_TRY_LINK([#include <unistd.h>],
		  [pread64 (0, NULL, 0, 0);],
		  [ENABLE_CFLAGS="$ENABLE_CFLAGS -D_BSD_SOURCE -D_XOPEN_SOURCE=500 -D_LARGEFILE64_SOURCE"
		   AC_DEFINE(HAVE_PREAD64)], [])
      CFLAGS=$save_CFLAGS
      ;;
  esac
@


1.110
log
@* configure.in: Remove --enable-netrom option.
* configure: Regenerated.
@
text
@d63 2
a64 15
SUBDIRS="doc testsuite nlm"
configdirs="doc testsuite"

AC_ARG_ENABLE(multi-ice,
[  --enable-multi-ice            Build the multi-ice-gdb-server],
[case "${enableval}" in
    yes ) enable_multi_ice="yes" ;;
    no)  enable_multi_ice="no" ;;
    *) AC_MSG_ERROR(Bad value for --enable-multi-ice: ${enableval}) ;;
  esac
])

if test "${enable_multi_ice}" = "yes"; then
  configdirs="${configdirs} multi-ice"
fi
a1107 1
    SUBDIRS="${SUBDIRS} gdbtk"
d1313 10
a1322 2
if test "${enable_multi_ice}" = "yes"; then
  SUBDIRS="${SUBDIRS} multi-ice"
d1325 9
a1333 10
# ``gdbserver'' can only be built in a native configuration.
if test x"${target}" = x"${host}"; then
    AC_MSG_CHECKING(whether gdbserver is supported on this host)
    if test x"${build_gdbserver}" = xyes ; then
	configdirs="${configdirs} gdbserver"
	SUBDIRS="${SUBDIRS} gdbserver"
	AC_MSG_RESULT(yes)
    else
	AC_MSG_RESULT(no)
    fi
d1336 2
a1396 1
AC_CONFIG_SUBDIRS($configdirs)
@


1.109
log
@* configure.in: Remove --with-cpu option.
subscripts.  Remove evil changequotes here.
* acconfig.h (TARGET_CPU_DEFAULT): Remove.
* config.in, configure: Regenerated.
@
text
@a860 14
AC_ARG_ENABLE(netrom,
[  --enable-netrom         Enable NetROM support],
[case "${enableval}" in
yes)	enable_netrom=yes ;;
no)	enable_netrom=no ;;
*)	AC_MSG_ERROR(bad value ${enableval} given for netrom option) ;;
esac])

if test "${enable_netrom}" = "yes"; then
	CONFIG_LIB_OBS="${CONFIG_LIB_OBS} remote-nrom.o" 
        CONFIG_SRCS="${CONFIG_SRCS} remote-nrom.c"
fi


@


1.108
log
@* acconfig.h (DEFAULT_BFD_ARCH, DEFAULT_BFD_VEC): Remove.
* configure.in: Cleanup section that sources GDB and BFD configure
subscripts.  Remove evil changequotes here.
* config.in, configure: Regenerated.
@
text
@a988 35
AC_ARG_WITH(cpu,
[  --with-cpu=CPU          Set the default CPU variant to debug],
[case "${target}" in
  powerpc-* | powerpcle-* )
    ## It would be nice to keep this table in sync with the one in
    ## gcc/configure.
    case "${with_cpu}" in
      ppc-uisa | rs6000 | 403 | 403GC | 505 | 860 | 601 | 602 | 603 \
      | 604 | 750 )
        ## Those are all handled in variants in rs6000-tdep.c, so they're fine.
      ;;
      common | power | power2 | rios | rios1 | rios2 | rsc | rsc1 ) 
        ## These are all RS6000 variants, as far as GDB is concerned.
        with_cpu=rs6000
      ;;
      603e | ec603e )
        with_cpu=603
      ;;
      604e )
	with_cpu=604
      ;;
      * )
        AC_MSG_WARN(GDB: unknown --with-cpu value: \`${with_cpu}'; using \`ppc-uisa'.)
	with_cpu=ppc-uisa
      ;;
    esac
  ;;
  * )
    AC_MSG_WARN(GDB may ignore the --with-cpu flag for ${target} targets)
  ;;
esac
AC_DEFINE_UNQUOTED(TARGET_CPU_DEFAULT, "${with_cpu}")
],)


@


1.107
log
@* configure.in: Remove UI_OUT configuration code.
* ada-lang.c: Update assuming UI_OUT is always true.
* Makefile.in (UIOUT_CFLAGS): Remove.
* configure: Regenerated.
* TODO: Remove blurb about elimination of -DUI_OUT.
@
text
@d79 1
a79 2
dnl
changequote(,)dnl
d81 1
a81 1
. ${srcdir}/configure.host
d83 2
a84 1
. ${srcdir}/configure.tgt
d86 3
a88 1
targ=${target} ; . ${srcdir}/../bfd/config.bfd
d90 3
a92 13
dnl
changequote([,])dnl

dnl use BFD to determine the default architecture and byte order
dnl (bfd_vec->byteorder provides the latter).
targ=${target}
. ${srcdir}/../bfd/config.bfd

dnl We only want the first arch, if there is more than one.
targ_archs=`echo ${targ_archs} | sed -e 's/ .*//;'`

if test x"${targ_archs}" != x ; then
    AC_DEFINE_UNQUOTED(DEFAULT_BFD_ARCH, ${targ_archs})
d94 3
a96 2
if test x"${targ_defvec}" != x ; then
    AC_DEFINE_UNQUOTED(DEFAULT_BFD_VEC, ${targ_defvec})
@


1.106
log
@* configure.in: Move code that provides the --enable-gdbcli,
--enable-gdbmi options right before the code that handles the
--enable-tui option.  Polish a bit.
* configure: Regenerated.
@
text
@a867 23
# Configure UI_OUT by default (before 5.2 it can be disabled)
# It must be configured if gdbmi is configured

UIOUT_CFLAGS=
AC_SUBST(UIOUT_CFLAGS)

AC_ARG_WITH(uiout,
[  --with-uiout          Use new uiout functions instead of *printf's],
[case "${withval}" in
  yes)  want_uiout=true ;;
  no)   if test $enable_gdbmi = yes; then
          AC_MSG_ERROR(uiout is needed for MI and cannot be disabled)
        else
           want_uiout=false
        fi ;;
  *)    AC_MSG_ERROR(bad value ${withval} for GDB with-uiout option) ;;
esac],
[want_uiout=true])dnl

if test $want_uiout = true; then
   UIOUT_CFLAGS="-DUI_OUT=1"
fi

@


1.105
log
@* configure.in: Rewrite check for GNU regex and the
--without-included regex option, and move it into the "Checks for
library functions" section.  This makes us use the system regex
again by default on systems with version 2 of the GNU C library.
This was apparently broken.
* gdb_regex.h [!USE_INCLUDED_REGEX] (_REGEX_RE_COMP): Define.
* acconfig.h (USE_INCLUDED_REGEX): Remove.
* config.in, configure: Regenerated.
@
text
@d108 52
a865 34
dnl The CLI cannot be disabled yet, but may be in the future  

dnl Handle CLI sub-directory configury.
AC_ARG_ENABLE(gdbcli,
[  --enable-gdbcli            Enable GDB-CLI interface],
[
  case "${enableval}" in
    yes) enable_gdbcli=yes ;;
    "") enable_gdbcli=yes ;;
    no) 
      AC_MSG_ERROR(The CLI cannot be disabled yet)
    ;;
    *)
      AC_MSG_ERROR(Bad value for --enable-gdbcli: ${enableval})
    ;;
  esac
],
[enable_gdbcli=yes])
case ${enable_gdbcli} in
  "yes" )
    if test -d "${srcdir}/cli" ; then
      CONFIG_OBS="${CONFIG_OBS} \$(SUBDIR_CLI_OBS)"
      CONFIG_DEPS="${CONFIG_DEPS} \$(SUBDIR_CLI_DEPS)"
      CONFIG_SRCS="${CONFIG_SRCS} \$(SUBDIR_CLI_SRCS)"
      CONFIG_INITS="${CONFIG_INITS} \$(SUBDIR_CLI_INITS)"
      ENABLE_CFLAGS="${ENABLE_CFLAGS} \$(SUBDIR_CLI_CFLAGS)"
      CONFIG_ALL="${CONFIG_ALL} \$(SUBDIR_CLI_ALL)"
      CONFIG_CLEAN="${CONFIG_CLEAN} \$(SUBDIR_CLI_CLEAN)"
      CONFIG_INSTALL="${CONFIG_INSTALL} \$(SUBDIR_CLI_INSTALL)"
      CONFIG_UNINSTALL="${CONFIG_UNINSTALL} \$(SUBDIR_CLI_UNINSTALL)"
    fi
    ;;
esac

a866 29

dnl Handle MI sub-directory configury.
AC_ARG_ENABLE(gdbmi,
[  --enable-gdbmi            Enable GDB-MI interface],
[
  case "${enable_gdbmi}" in
    yes | no) ;;
    "")  enable_gdbmi=yes ;;
    *)
      AC_MSG_ERROR(Bad value for --enable-gdbmi: ${enableval})
    ;;
  esac
],
[enable_gdbmi=yes])
case ${enable_gdbmi} in
  "yes" )
    if test -d "${srcdir}/mi" ; then
      CONFIG_OBS="${CONFIG_OBS} \$(SUBDIR_MI_OBS)"
      CONFIG_DEPS="${CONFIG_DEPS} \$(SUBDIR_MI_DEPS)"
      CONFIG_SRCS="${CONFIG_SRCS} \$(SUBDIR_MI_SRCS)"
      CONFIG_INITS="${CONFIG_INITS} \$(SUBDIR_MI_INITS)"
      ENABLE_CFLAGS="${ENABLE_CFLAGS} \$(SUBDIR_MI_CFLAGS)"
      CONFIG_ALL="${CONFIG_ALL} \$(SUBDIR_MI_ALL)"
      CONFIG_CLEAN="${CONFIG_CLEAN} \$(SUBDIR_MI_CLEAN)"
      CONFIG_INSTALL="${CONFIG_INSTALL} \$(SUBDIR_MI_INSTALL)"
      CONFIG_UNINSTALL="${CONFIG_UNINSTALL} \$(SUBDIR_MI_UNINSTALL)"
    fi
    ;;
esac
@


1.104
log
@* configure.in: Move code that provides the --enable-tui option
before the "Checks for libraries" section.  Polish the code
somewhat and set need_curses to yes if we build the TUI.  Rewrite
code that looks for a library providing termcap functionality to
match more closely what's done in the Readline library, and move
it into to the "Checks for libraries" section.
* configure: Regenerated.
* Makefile.in (TERMCAP): Remove variable.
* config/i386/go32.mh (TERMCAP): Remove variable.
@
text
@d313 31
a996 32

AC_ARG_WITH(included-regex,
[  --with-included-regex          Use included regex],
[case "${withval}" in
  yes)  want_included_regex=true ;;
  no)   want_included_regex=false;;
  *)    AC_MSG_ERROR(bad value ${withval} for GDB with-included-regex option) ;;
esac],[want_included_regex=true])dnl

if test $want_included_regex = false; then
  AC_MSG_CHECKING(for GNU regex)
  AC_CACHE_VAL(gdb_cv_have_gnu_regex,
[AC_TRY_COMPILE([#include <gnu-versions.h>
#include <sys/types.h>
#include <regex.h>],
[#if !defined _GNU_REGEX_INTERFACE_VERSION || !defined __GLIBC__ || __GLIBC__ < 2
#error No valid GNU regex.
#endif
],
		[gdb_cv_have_gnu_regex=yes],
		[gdb_cv_have_gnu_regex=no])])
  AC_MSG_RESULT($gdb_cv_have_gnu_regex)
  if test $gdb_cv_have_gnu_regex = no; then
	want_included_regex=true
  fi
fi

if test x${want_included_regex} = xtrue; then
    REGEX="gnu-regex.o"
    AC_DEFINE(USE_INCLUDED_REGEX)
fi
AC_SUBST(REGEX)
@


1.103
log
@* configure.in: Fix typo in last change.
* config.in, configure: Regenerated.
@
text
@d108 24
d166 42
a870 27
AC_ARG_ENABLE(tui,
[  --enable-tui            Enable full-screen terminal user interface],
[
  case "${enable_tui}" in
    yes | no) ;;
    "")  enable_tui=yes ;;
    *)
      AC_MSG_ERROR(Bad value for --enable-tui: ${enableval})
    ;;
  esac
])
case ${enable_tui} in
  "yes" )
    if test -d "${srcdir}/tui" ; then
      CONFIG_OBS="${CONFIG_OBS} \$(SUBDIR_TUI_OBS)"
      CONFIG_DEPS="${CONFIG_DEPS} \$(SUBDIR_TUI_DEPS)"
      CONFIG_SRCS="${CONFIG_SRCS} \$(SUBDIR_TUI_SRCS)"
      CONFIG_INITS="${CONFIG_INITS} \$(SUBDIR_TUI_INITS)"
      ENABLE_CFLAGS="${ENABLE_CFLAGS} \$(SUBDIR_TUI_CFLAGS)"
      CONFIG_ALL="${CONFIG_ALL} \$(SUBDIR_TUI_ALL)"
      CONFIG_CLEAN="${CONFIG_CLEAN} \$(SUBDIR_TUI_CLEAN)"
      CONFIG_INSTALL="${CONFIG_INSTALL} \$(SUBDIR_TUI_INSTALL)"
      CONFIG_UNINSTALL="${CONFIG_UNINSTALL} \$(SUBDIR_TUI_UNINSTALL)"
    fi
    ;;
esac

a1013 24


dnl Figure out which term library to use.
if test x$gdb_host = xgo32; then
  TERM_LIB=
else
if test x$gdb_cv_os_cygwin = xyes; then
  TERM_LIB='`if test -r ../libtermcap/libtermcap.a; then echo ../libtermcap/libtermcap.a; else echo -ltermcap; fi`'
else
  TERM_LIB=
  AC_CHECK_LIB(ncurses, tgetent, TERM_LIB=-lncurses,
    AC_CHECK_LIB(Hcurses, tgetent, TERM_LIB=-lHcurses,
      AC_CHECK_LIB(termlib, tgetent, TERM_LIB=-ltermlib,
        AC_CHECK_LIB(termcap, tgetent, TERM_LIB=-ltermcap,
	  AC_CHECK_LIB(curses, tgetent, TERM_LIB=-lcurses,
	    AC_CHECK_LIB(terminfo, tgetent, TERM_LIB=-lterminfo))))))

  if test "x$TERM_LIB" = x
  then
    AC_MSG_ERROR(Could not find a term library, e.g. termcap or termlib!)
  fi
fi
fi
AC_SUBST(TERM_LIB)
@


1.102
log
@* configure.in: Reorganize "Checks for library functions section"
a bit.  Remove check for `btowc' and `isascii' functions.
* configure: Regenerated.
@
text
@d214 1
a214 1
AC_CHECK_FUNCS(sigaction sigprocmask, sigsetmask)
@


1.101
log
@* acconfig.h (_MSE_INT_H): Remove.
* configure.in: Create "Checks for header files" section, and move
appropriate tests there.  Don't check for objlist.h, wchar.h,
wctype.h and asm/debugreg.h.  Rewrite Solaris 2.[78] <curses.h>
misdetection fix.  Also add "Checks for types", "Checks for
compiler characteristics" and "Checks for library functions"
sections.
* config.in, configure: Regenerated.
@
text
@a206 2
AC_CHECK_FUNCS(btowc canonicalize_file_name isascii poll \
	realpath sbrk setpgid setpgrp sigaction sigprocmask sigsetmask )
d208 1
d210 7
a312 3
AC_CHECK_FUNCS(socketpair)


a576 2

AC_FUNC_MMAP
@


1.100
log
@* configure.in: Create "Checks for programs" section, and move
appropriate tests there.
@
text
@d142 3
a144 1
AC_TYPE_SIGNAL
d147 1
d149 44
d194 5
a198 18
dnl Solaris 7 needs _MSE_INT_H defined to avoid a clash between <widec.h>
dnl and <wchar.h> that causes AC_CHECK_HEADERS to think <curses.h> doesn't
dnl exist.

case $host_os in solaris2.7 | solaris2.8) case "$GCC" in yes)
    AC_DEFINE(_MSE_INT_H)
esac; esac

AC_CHECK_HEADERS(ctype.h nlist.h link.h thread_db.h proc_service.h \
	memory.h objlist.h ptrace.h sgtty.h stddef.h stdlib.h \
	string.h sys/procfs.h sys/proc.h sys/ptrace.h sys/reg.h stdint.h \
	term.h termio.h termios.h unistd.h wait.h sys/wait.h \
	wchar.h wctype.h asm/debugreg.h sys/debugreg.h sys/select.h \
	time.h sys/file.h sys/ioctl.h sys/user.h sys/fault.h sys/syscall.h \
	sys/filio.h \
	curses.h ncurses.h \
	poll.h sys/poll.h)
AC_HEADER_STAT
d202 4
@


1.99
log
@* configure.in: Create "Checks for libraries" section, and move
appropriate tests there.  Cleanup check for wctype in libw.  Use
AC_SEARCH_LIBS to see whether we need libsocket.
* configure: Regenerated.
@
text
@d36 8
d106 6
d114 4
a118 1
AC_CHECK_TOOL(RANLIB, ranlib, :)
a120 1
AC_PROG_YACC
d122 1
a122 1
dnl MiG is needed for the Hurd.
a124 2
AC_ARG_PROGRAM

a1420 2

AC_PROG_LN_S
@


1.98
log
@* configure.in: Remove bzero and bcopy from call to AC_CHECK_FUNCS.
* config.in, configure: Regenerated.
@
text
@d2 1
a2 1
dnl Copyright 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
d111 17
a254 1
AC_CHECK_LIB(socket, socketpair)
a433 10

dnl See if host has libm.  This is usually needed by simulators.
AC_CHECK_LIB(m, main)

dnl Solaris puts wctype in /usr/lib/libw.a before Solaris 2.6.
dnl
dnl A bug in GNU ld 2.9.1 causes a problem if we link in -lw 
dnl under Solaris 2.6 because it is some funky empty library.
dnl So only link in libw if we have to.
AC_CHECK_LIB(c, wctype,: ,AC_CHECK_LIB(w, wctype))
@


1.97
log
@* gdb_dirent.h: Cleanup and update code to match the example in
the Autoconf manual.
* configure.in: Call AC_HEADER_DIRENT.  Remove dirent.h,
sys/ndir.h, sys/dir.h and ndir.h from call to AC_CHECK_HEADERS.
* configure: Regenerated.
@
text
@d138 1
a138 1
AC_CHECK_FUNCS(bcopy btowc bzero canonicalize_file_name isascii poll \
@


1.96
log
@       * configure.in: Check that the pthdebug library is recent enough
       before enabling thread support on native AiX.
       * configure: Regenerate.

       * config/powerpc/aix432.mh (NATDEPFILES): Remove aix-thread.o
       from the list of object files as it is now appended by configure
       if thread support is enabled.
       (NAT_CLIBS): Removed as -lpthdebug is also appended by configure
       if thread support is enabled.
@
text
@d113 1
d130 1
a130 1
	dirent.h sys/ndir.h sys/dir.h ndir.h sys/filio.h \
@


1.95
log
@2002-11-26  Martin M. Hunt  <hunt@@redhat.com>

	* Makefile.in: Remove Tix dependencies.
	* acinclude.m4: Ditto.
	* aclocal.m4: Ditto.
	* configure.in: Ditto.
	* configure: Regenerated.
@
text
@a534 3
dnl See if thread_db library is around for Solaris thread debugging.  Note that
dnl we must explicitly test for version 1 of the library because version 0
dnl (present on Solaris 2.4 or earlier) doesn't have the same API.
d536 5
a540 2
dnl Note that we only want this if we are both native (host == target), and
dnl not doing a canadian cross build (build == host).
d560 4
d601 16
@


1.94
log
@	* acconfig.h (HAVE_PREAD64): Add.
	* configure.in: Check for pread64.
	* config.in: Regenerated.
	* configure: Regenerated.
	* lin-lwp.c (lin_lwp_xfer_memory): Call linux_proc_xfer_memory.
	* linux-proc.c (linux_proc_xfer_memory): New function.
	* config/nm-linux.h (linux_proc_xfer_memory): Add prototype.
@
text
@a1044 1
	   CY_AC_PATH_TIXH
a1079 8
	   # now look for Tix library stuff
	   CY_AC_PATH_TIXCONFIG
           if test -z "${no_tix}"; then
             CY_AC_LOAD_TIXCONFIG
	     TIXLIB="${TIX_BUILD_LIB_SPEC}"
	     TIX_DEPS="${TIX_BUILD_LOCATION}/${TIX_LIB_FILE}"
           fi

d1092 1
a1092 1
	   TCL_LIBS='$(LIBGUI) $(ITCL) $(ITK) $(TIX) $(TK) $(TCL) $(X11_LDFLAGS) $(X11_LIBS)'
a1129 2
AC_SUBST(TIXLIB)
AC_SUBST(TIX_DEPS)
@


1.93
log
@2002-11-11  Elena Zannoni  <ezannoni@@redhat.com>

        * findvar.c (read_var_value): Reenable TLS code.

2002-11-11  Elena Zannoni  <ezannoni@@redhat.com>
            Jim Blandy  <jimb@@redhat.com>

	* gdb_thread_db.h (enum): Add TD_NOTALLOC.
	* target.c (update_current_target): Add
	to_get_thread_local_address.
	* target.h (to_get_thread_local_address): Export.
	(target_get_thread_local_address): Define.
	(target_get_thread_local_address_p): Define.
	* thread-db.c: Include solib-svr4.h.
	(td_thr_tls_get_addr_p): Define.
	(thread_db_load): Get a pointer to td_thr_tls_get_addr.
	(thread_db_get_thread_local_address): New function.
	(init_thread_db_ops): Initialize to_get_thread_local_address.
	* configure.in: Add test for TD_NOTALLOC in thread_db.h.
	* configure: Regenerate.
	* config.in: Regenerate.
@
text
@d620 17
@


1.93.2.1
log
@Add support for executables whose debug info has been separated
out into a separate file, leaving only a link behind.
* objfiles.h (struct objfile): New fields: separate_debug_objfile
and separate_debug_objfile_backlink.
(put_objfile_before): New declaration.
* symfile.c (symbol_file_add_with_addrs_or_offsets): If this
objfile has its debug info in a separate file, read that,
too. Save the addrs argument, so we can use it again to read the
separated debug info; syms_from_objfile modifies the table we pass
it.
(reread_symbols): After re-reading an objfile, call
reread_separate_symbols to refresh its separate debug info
objfile, if it has one.
(reread_separate_symbols, find_separate_debug_file,
get_debug_link_info, separate_debug_file_exists): New functions.
(debug_file_directory): New global var.
(_initialize_symfile): Initialize debug_file_directory, and
provide the new `set debug-file-directory' command to let the user
change it.
* objfiles.c (free_objfile): If this objfile has its debug info in
a separate objfile, free that one too.  If this is itself a
separate debug info objfile, clear our parent's backlink.
(put_objfile_before): New function.
* utils.c (calc_crc32): New function.
* defs.h (calc_crc32): New declaration.
* configure.in: Handle --with-separate-debug-dir config option.
* acinclude.m4 (AC_DEFINE_DIR): New macro.
* acconfig.h (DEBUGDIR): New macro.
* configure, aclocal.m4, config.in: Regenerated.
@
text
@a239 8
debugdir=${libdir}/debug
	 
AC_ARG_WITH(separate-debug-dir,
[  --with-separate-debug-dir=path   Look for global separate debug info in this path [LIBDIR/debug]],
[debugdir="${withval}"])
	
AC_DEFINE_DIR(DEBUGDIR, debugdir)
#AC_DEFINE_UNQUOTED(DEBUGDIR, "$debugdir"),
@


1.93.2.2
log
@Back initial version of Alex Larsson's change off the branch, so we
can revise it.
@
text
@d240 8
@


1.92
log
@       * configure.in: Define NEW_PROC_API on Interix too.
       * configure: Regenerate.
@
text
@d603 17
@


1.91
log
@Add support for distinct host and target character sets.
@
text
@d282 1
a282 1
  *-*-unixware* | *-*-sysv4.2* | *-*-sysv5*)
@


1.91.4.1
log
@Merge drow-cplus-merge-20021025 to drow-cplus-branch.
@
text
@d282 1
a282 1
  *-*-unixware* | *-*-sysv4.2* | *-*-sysv5* | *-*-interix* )
@


1.91.4.2
log
@Merge drow-cplus-branch to:
  cvs rtag -D 2003-12-14 00:00:00 UTC drow-cplus-merge-20031214 gdb+dejagnu
@
text
@d2 1
a2 1
dnl Copyright 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003
a28 1
AC_GNU_SOURCE
a35 8
# FIXME: kettenis/20030102: The AC_PROG_RANLIB from Autoconf 2.13
# doesn't support cross-compilation, but the one from Autoconf 2.5x
# does.  Override RANLIB here (i.e. before running AC_PROG_RANLIB) to
# deal with the lossage.  Note that CY_GNU_GETTEXT currently calls
# AC_PROG_RANLIB.  This can be removed when we switch to Autoconf
# 2.5x.
AC_CHECK_TOOL(RANLIB, ranlib, :)

a40 9
debugdir=${libdir}/debug
	 
AC_ARG_WITH(separate-debug-dir,
[  --with-separate-debug-dir=path   Look for global separate debug info in this path [LIBDIR/debug]],
[debugdir="${withval}"])
	
AC_DEFINE_DIR(DEBUGDIR, debugdir,
              [Global directory for separate debug files. ])
#AC_DEFINE_UNQUOTED(DEBUGDIR, "$debugdir"),
d55 2
a56 2
AC_CONFIG_SUBDIRS(doc testsuite)
configdirs=
d58 8
a65 1
. $srcdir/configure.host
d67 3
a69 1
. $srcdir/configure.tgt
d71 2
a72 2
# Fetch the default architecture and default target vector from BFD.
targ=$target; . $srcdir/../bfd/config.bfd
d74 1
a74 3
# We only want the first architecture, so strip off the others if
# there is more than one.
targ_archs=`echo $targ_archs | sed 's/ .*//'`
d76 1
a76 8
if test "x$targ_archs" != x; then
  AC_DEFINE_UNQUOTED(DEFAULT_BFD_ARCH, $targ_archs,
    [Define to BFD's default architecture. ])
fi
if test "x$targ_defvec" != x; then
  AC_DEFINE_UNQUOTED(DEFAULT_BFD_VEC, $targ_defvec,
    [Define to BFD's default target vector. ])
fi
d78 1
a78 1
AC_ARG_PROGRAM
d80 2
a81 51
# The CLI cannot be disabled yet, but may be in the future.

# Enable CLI.
AC_ARG_ENABLE(gdbcli,
[  --disable-gdbcli        disable command-line interface (CLI)],
  [case $enableval in
    yes)
      ;;
    no)
      AC_MSG_ERROR([the command-line interface cannot be disabled yet]) ;;
    *)
      AC_MSG_ERROR([bad value $enableval for --enable-gdbcli]) ;;
  esac],
  [enable_gdbcli=yes])
if test x"$enable_gdbcli" = xyes; then
  if test -d $srcdir/cli; then
    CONFIG_OBS="$CONFIG_OBS \$(SUBDIR_CLI_OBS)"
    CONFIG_DEPS="$CONFIG_DEPS \$(SUBDIR_CLI_DEPS)"
    CONFIG_SRCS="$CONFIG_SRCS \$(SUBDIR_CLI_SRCS)"
    CONFIG_INITS="$CONFIG_INITS \$(SUBDIR_CLI_INITS)"
    ENABLE_CFLAGS="$ENABLE_CFLAGS \$(SUBDIR_CLI_CFLAGS)"
    CONFIG_ALL="$CONFIG_ALL \$(SUBDIR_CLI_ALL)"
    CONFIG_CLEAN="$CONFIG_CLEAN \$(SUBDIR_CLI_CLEAN)"
    CONFIG_INSTALL="$CONFIG_INSTALL \$(SUBDIR_CLI_INSTALL)"
    CONFIG_UNINSTALL="$CONFIG_UNINSTALL \$(SUBDIR_CLI_UNINSTALL)"
  fi
fi

# Enable MI.
AC_ARG_ENABLE(gdbmi,
[  --disable-gdbmi         disable machine-interface (MI)],
  [case $enableval in
    yes | no)
      ;;
    *)
      AC_MSG_ERROR([bad value $enableval for --enable-gdbmi]) ;;
  esac],
  [enable_gdbmi=yes])
if test x"$enable_gdbmi" = xyes; then
  if test -d $srcdir/mi; then
    CONFIG_OBS="$CONFIG_OBS \$(SUBDIR_MI_OBS)"
    CONFIG_DEPS="$CONFIG_DEPS \$(SUBDIR_MI_DEPS)"
    CONFIG_SRCS="$CONFIG_SRCS \$(SUBDIR_MI_SRCS)"
    CONFIG_INITS="$CONFIG_INITS \$(SUBDIR_MI_INITS)"
    ENABLE_CFLAGS="$ENABLE_CFLAGS \$(SUBDIR_MI_CFLAGS)"
    CONFIG_ALL="$CONFIG_ALL \$(SUBDIR_MI_ALL)"
    CONFIG_CLEAN="$CONFIG_CLEAN \$(SUBDIR_MI_CLEAN)"
    CONFIG_INSTALL="$CONFIG_INSTALL \$(SUBDIR_MI_INSTALL)"
    CONFIG_UNINSTALL="$CONFIG_UNINSTALL \$(SUBDIR_MI_UNINSTALL)"
  fi
fi
d83 4
a86 23
# Enable TUI.
AC_ARG_ENABLE(tui,
[  --enable-tui            enable full-screen terminal user interface (TUI)],
  [case $enableval in
    yes | no)
      ;;
    *)
      AC_MSG_ERROR([bad value $enableval for --enable-tui]) ;;
  esac])
if test x"$enable_tui" = xyes; then
  if test -d $srcdir/tui; then
    CONFIG_OBS="$CONFIG_OBS \$(SUBDIR_TUI_OBS)"
    CONFIG_DEPS="$CONFIG_DEPS \$(SUBDIR_TUI_DEPS)"
    CONFIG_SRCS="$CONFIG_SRCS \$(SUBDIR_TUI_SRCS)"
    CONFIG_INITS="$CONFIG_INITS \$(SUBDIR_TUI_INITS)"
    ENABLE_CFLAGS="$ENABLE_CFLAGS \$(SUBDIR_TUI_CFLAGS)"
    CONFIG_ALL="$CONFIG_ALL \$(SUBDIR_TUI_ALL)"
    CONFIG_CLEAN="$CONFIG_CLEAN \$(SUBDIR_TUI_CLEAN)"
    CONFIG_INSTALL="$CONFIG_INSTALL \$(SUBDIR_TUI_INSTALL)"
    CONFIG_UNINSTALL="$CONFIG_UNINSTALL \$(SUBDIR_TUI_UNINSTALL)"
    need_curses=yes
  fi
fi
d88 2
a89 20
# Enable gdbtk.
AC_ARG_ENABLE(gdbtk,
[  --enable-gdbtk          enable gdbtk graphical user interface (GUI)],
  [case $enableval in
    yes | no)
      ;;
    *)
      AC_MSG_ERROR([bad value $enableval for --enable-gdbtk]) ;;
  esac],
  [if test -d $srcdir/gdbtk; then
    enable_gdbtk=yes
  else
    enable_gdbtk=no
  fi])
# We unconditionally disable gdbtk tests on selected platforms.
case $host_os in
  go32* | windows*)
    AC_MSG_WARN([gdbtk isn't supported on $host; disabling])
    enable_gdbtk=no ;;
esac
d91 2
a92 22
# Libunwind support.
AC_ARG_WITH(libunwind,
[  --with-libunwind            Use libunwind frame unwinding support],
[case "${withval}" in
  yes)  enable_libunwind=yes ;;
  no)   enable_libunwind=no ;;
  *)    AC_MSG_ERROR(bad value ${withval} for GDB with-libunwind option) ;;
esac],[
  AC_CHECK_HEADERS(libunwind.h)
  AC_CHECK_HEADERS(libunwind-ia64.h)
  if test x"$ac_cv_header_libunwind_h" = xyes -a x"$ac_cv_header_libunwind_ia64_h" = xyes; then
    enable_libunwind=yes;
  fi
])
   
if test x"$enable_libunwind" = xyes; then
  AC_CHECK_HEADERS(libunwind.h)
  AC_CHECK_HEADERS(libunwind-ia64.h)
  AC_DEFINE(HAVE_LIBUNWIND, 1)
  CONFIG_OBS="$CONFIG_OBS libunwind-frame.o"
  CONFIG_DEPS="$CONFIG_DEPS libunwind-frame.o"
  CONFIG_SRCS="$CONFIG_SRCS libunwind-frame.c"
d94 2
a95 40

# Profiling support.
AC_ARG_ENABLE(profiling,
[  --enable-profiling      enable profiling of GDB],
  [case $enableval in
    yes | no)
      ;;
    *)
      AC_MSG_ERROR([bad value $enableval for --enable-profile]) ;;
  esac],
 [enable_profiling=no])

AC_CHECK_FUNCS(monstartup _mcleanup)
AC_CACHE_CHECK([for _etext], ac_cv_var__etext,
[AC_TRY_LINK(
[#include <stdlib.h>
extern char _etext;
],
[free (&_etext);], ac_cv_var__etext=yes, ac_cv_var__etext=no)])
if test $ac_cv_var__etext = yes; then
  AC_DEFINE(HAVE__ETEXT, 1,
            [Define to 1 if your system has the _etext variable. ])
fi
if test "$enable_profiling" = yes ; then
  if test $ac_cv_func_monstartup = no || test $ac_cv_func__mcleanup = no; then
    AC_MSG_ERROR(--enable-profiling requires monstartup and _mcleanup)
  fi
  PROFILE_CFLAGS=-pg
  OLD_CFLAGS="$CFLAGS"
  CFLAGS="$CFLAGS $PROFILE_CFLAGS"

  AC_CACHE_CHECK([whether $CC supports -pg], ac_cv_cc_supports_pg,
    [AC_TRY_COMPILE([], [int x;], ac_cv_cc_supports_pg=yes,
     ac_cv_cc_supports_pg=no)])

  if test $ac_cv_cc_supports_pg = no; then
    AC_MSG_ERROR(--enable-profiling requires a compiler which supports -pg)
  fi

  CFLAGS="$OLD_CFLAGS"
a97 4
# --------------------- #
# Checks for programs.  #
# --------------------- #

a99 4
AC_PROG_LN_S
AC_PROG_RANLIB
AC_PROG_YACC

d101 1
d104 1
d106 1
a106 1
# Needed for GNU/Hurd.
d109 1
a109 3
# ---------------------- #
# Checks for libraries.  #
# ---------------------- #
d111 1
a111 2
# We might need to link with -lm; most simulators need it.
AC_CHECK_LIB(m, main)
d113 1
a113 54
# We need to link with -lw to get `wctype' on Solaris before Solaris
# 2.6.  Solaris 2.6 and beyond have this function in libc, and have a
# libw that some versions of the GNU linker cannot hanle (GNU ld 2.9.1
# is known to have this problem).  Therefore we avoid libw if we can.
AC_CHECK_FUNC(wctype, [],
  [AC_CHECK_LIB(w, wctype)])

# Some systems (e.g. Solaris) have `gethostbyname' in libnsl.
AC_SEARCH_LIBS(gethostbyname, nsl)

# Some systems (e.g. Solaris) have `socketpair' in libsocket.
AC_SEARCH_LIBS(socketpair, socket)

# Since GDB uses Readline, we need termcap functionality, so we need
# to find a library that provides that.  When GDB is configured with
# --enable-tui, we need full curses functionality.
#
# FIXME: kettenis/20030102: We seem to prefer HP curses (Hcurses) over
# Xcurses on HP-UX; see the `-D__HP_CURSES' in the relevant host
# Makefile fragments.  That's why we need to have `Hcurses' before
# `curses'.  I don't see why we should use HP curses if a more
# standard curses is available, except that according to HP's
# documentation one needs to compile `-D_XOPEN_SOURCE_EXTENDED' on
# HP-UX 10.10 and 10.20.

if test "$need_curses" = yes; then
  AC_SEARCH_LIBS(initscr, [ncurses Hcurses curses], [],
    [AC_MSG_ERROR([no curses library found])])
fi

case $host_os in
  cygwin*)
    if test -d $srcdir/libtermcap; then
      LIBS="../libtermcap/libtermcap.a $LIBS"
      ac_cv_search_tgetent="../libtermcap/libtermcap.a"
    fi ;;
  go32*)
    # ??? Is this really true?
    ac_cv_search_tgetent="none required"
    ;;
  aix*)
    # Readline prefers curses over termcap on AIX.
    # ??? Why?
    AC_SEARCH_LIBS(tgetent, [tinfo ncurses curses termcap])
    ;;
esac

# Note: We used to check for libtermlib and libterminfo too, but
# Readline doesn't, so I think we're safe with leaving them out.
AC_SEARCH_LIBS(tgetent, [termcap tinfo ncurses Hcurses curses])

if test "$ac_cv_search_tgetent" = no; then
  AC_MSG_ERROR([no termcap library found])
fi
d115 17
a131 5
# ------------------------- #
# Checks for header files.  #
# ------------------------- #

AC_HEADER_DIRENT
a132 57
AC_HEADER_STDC
AC_CHECK_HEADERS(link.h)
AC_CHECK_HEADERS(nlist.h)
AC_CHECK_HEADERS(poll.h sys/poll.h)
AC_CHECK_HEADERS(proc_service.h thread_db.h)
AC_CHECK_HEADERS(stddef.h)
AC_CHECK_HEADERS(stdlib.h)
AC_CHECK_HEADERS(stdint.h)
AC_CHECK_HEADERS(string.h memory.h strings.h)
AC_CHECK_HEADERS(sys/fault.h)
AC_CHECK_HEADERS(sys/file.h)
AC_CHECK_HEADERS(sys/filio.h)
AC_CHECK_HEADERS(sys/ioctl.h)
AC_CHECK_HEADERS(sys/param.h)
AC_CHECK_HEADERS(sys/proc.h)
AC_CHECK_HEADERS(sys/procfs.h)
AC_CHECK_HEADERS(sys/ptrace.h ptrace.h)
AC_CHECK_HEADERS(sys/reg.h sys/debugreg.h)
AC_CHECK_HEADERS(sys/select.h)
AC_CHECK_HEADERS(sys/syscall.h)
AC_CHECK_HEADERS(sys/user.h)
AC_CHECK_HEADERS(sys/wait.h wait.h)
AC_CHECK_HEADERS(termios.h termio.h sgtty.h)
AC_CHECK_HEADERS(unistd.h)

# On Solaris 2.[78], we need to define _MSE_INT_H to avoid a clash
# between <widec.h> and <wchar.h> that would cause AC_CHECK_HEADERS to
# think that we don't have <curses.h> if we're using GCC.
case $host_os in
  solaris2.[[78]])
    if test "$GCC" = yes; then
      AC_DEFINE(_MSE_INT_H, 1,
        [[Define to 1 to avoid a clash between <widec.h> and <wchar.h> on
   Solaris 2.[78] when using GCC. ]])
    fi ;;
esac
AC_CHECK_HEADERS(curses.h ncurses.h term.h)

# FIXME: kettenis/20030102: In most cases we include these
# unconditionally, so what's the point in checking these?
AC_CHECK_HEADERS(ctype.h time.h)

# ------------------------- #
# Checks for declarations.  #
# ------------------------- #

gcc_AC_CHECK_DECLS(getopt)

# ------------------ #
# Checks for types.  #
# ------------------ #

AC_TYPE_SIGNAL

# ------------------------------------- #
# Checks for compiler characteristics.  #
# ------------------------------------- #
d137 2
a138 4
# ------------------------------ #
# Checks for library functions.  #
# ------------------------------ #

a139 1
AC_FUNC_MMAP
a140 9
AC_CHECK_FUNCS(canonicalize_file_name realpath)
AC_CHECK_FUNCS(poll)
AC_CHECK_FUNCS(pread64)
AC_CHECK_FUNCS(sbrk)
AC_CHECK_FUNCS(setpgid setpgrp)
AC_CHECK_FUNCS(sigaction sigprocmask sigsetmask)
AC_CHECK_FUNCS(socketpair)
AC_CHECK_FUNCS(syscall)

a170 31
# Assume we'll default to using the included libiberty regex.
gdb_use_included_regex=yes

# However, if the system regex is GNU regex, then default to *not*
# using the included regex.
AC_CACHE_CHECK(
  [for GNU regex],
  [gdb_cv_have_gnu_regex],
  [AC_TRY_COMPILE(
    [#include <gnu-versions.h>],
    [#define REGEX_INTERFACE_VERSION 1
#if _GNU_REGEX_INTERFACE_VERSION != REGEX_INTERFACE_VERSION
# error "Version mismatch"
#endif],
    gdb_cv_have_gnu_regex=yes,
    gdb_cv_have_gnu_regex=no)])
if test $gdb_cv_have_gnu_regex = yes; then
  gdb_use_included_regex=no
fi

AC_ARG_WITH(included-regex,
  [  --without-included-regex don't use included regex; this is the default
                          on systems with version 2 of the GNU C library
                          (use with caution on other system)],
  gdb_with_regex=$withval,
  gdb_with_regex=$gdb_use_included_regex)
if test "$gdb_with_regex" = yes; then
  AC_DEFINE(USE_INCLUDED_REGEX, 1,
    [Define to 1 if the regex included in libiberty should be used.])
fi

d236 4
a239 11
# See if stdint.h provides the uintptr_t type.
# Autoconf 2.5X has an improved AC_CHECK_TYPE which will simplify this.
AC_CACHE_CHECK([for uintptr_t in stdint.h], gdb_cv_have_uintptr_t,
  [AC_TRY_COMPILE(
    [#include <stdint.h>],
    [uintptr_t foo = 0;],
    gdb_cv_have_uintptr_t=yes,
    gdb_cv_have_uintptr_t=no)])
if test $gdb_cv_have_uintptr_t = yes; then
  AC_DEFINE(HAVE_UINTPTR_T, 1, [Define if <stdint.h> provides the uintptr_t type.])
fi
d418 10
d516 2
d535 3
d539 2
a540 5
dnl For certain native configurations, we need to check whether thread
dnl support can be built in or not.
dnl
dnl Note that we only want this if we are both native (host == target),
dnl and not doing a canadian cross build (build == host).
a559 4
      # See if thread_db library is around for Solaris thread debugging.
      # Note that we must explicitly test for version 1 of the library
      # because version 0 (present on Solaris 2.4 or earlier) doesn't have
      # the same API.
a598 16
   aix*)
      AC_MSG_CHECKING(for AiX thread debugging library)
      AC_CACHE_VAL(gdb_cv_have_aix_thread_debug,
                   [AC_TRY_COMPILE([#include <sys/pthdebug.h>],
                                   [#ifndef PTHDB_VERSION_3
                                    #error
                                    #endif],
                                   gdb_cv_have_aix_thread_debug=yes,
                                   gdb_cv_have_aix_thread_debug=no)])
      AC_MSG_RESULT($gdb_cv_have_aix_thread_debug)
      if test $gdb_cv_have_aix_thread_debug = yes; then
         CONFIG_SRCS="${CONFIG_SRCS} aix-thread.c"
         CONFIG_LIB_OBS="${CONFIG_LIB_OBS} aix-thread.o"
         CONFIG_LDFLAGS="${CONFIG_LDFLAGS} -lpthdebug"
      fi
      ;;
d603 33
a635 34
dnl See if we have a thread_db header file that has TD_NOTALLOC.
if test "x$ac_cv_header_thread_db_h" = "xyes"; then
   AC_CACHE_CHECK([whether <thread_db.h> has TD_NOTALLOC],
                  gdb_cv_thread_db_h_has_td_notalloc,
     AC_TRY_COMPILE(
       [#include <thread_db.h>],
       [int i = TD_NOTALLOC;],
       gdb_cv_thread_db_h_has_td_notalloc=yes,
       gdb_cv_thread_db_h_has_td_notalloc=no
     )
   )
fi
if test "x$gdb_cv_thread_db_h_has_td_notalloc" = "xyes"; then
  AC_DEFINE(THREAD_DB_HAS_TD_NOTALLOC, 1,
            [Define if <thread_db.h> has the TD_NOTALLOC error code.])
fi

dnl See if we have a sys/syscall header file that has __NR_tkill.
if test "x$ac_cv_header_sys_syscall_h" = "xyes"; then
   AC_CACHE_CHECK([whether <sys/syscall.h> has __NR_tkill],
                  gdb_cv_sys_syscall_h_has_tkill,
     AC_TRY_COMPILE(
       [#include <sys/syscall.h>],
       [int i = __NR_tkill;],
       gdb_cv_sys_syscall_h_has_tkill=yes,
       gdb_cv_sys_syscall_h_has_tkill=no
     )
   )
fi
dnl See if we can issue tkill syscall.
if test "x$gdb_cv_sys_syscall_h_has_tkill" = "xyes" && test "x$ac_cv_func_syscall" = "xyes"; then
  AC_DEFINE(HAVE_TKILL_SYSCALL, 1,
            [Define if we can use the tkill syscall.])
fi
d639 3
a641 2
AC_ARG_WITH(sysroot,
[  --with-sysroot[=DIR] Search for usr/lib et al within DIR.],
d643 58
a700 26
 case ${with_sysroot} in
 yes) TARGET_SYSTEM_ROOT='${exec_prefix}/${target_alias}/sys-root' ;;
 *) TARGET_SYSTEM_ROOT=$with_sysroot ;;
 esac

 TARGET_SYSTEM_ROOT_DEFINE='-DTARGET_SYSTEM_ROOT=\"$(TARGET_SYSTEM_ROOT)\"'

 if test "x$exec_prefix" = xNONE; then
  if test "x$prefix" = xNONE; then
   test_prefix=/usr/local
  else
   test_prefix=$prefix
  fi
 else
  test_prefix=$exec_prefix
 fi
 case ${TARGET_SYSTEM_ROOT} in
 "${test_prefix}"|"${test_prefix}/"*|\
 '${exec_prefix}'|'${exec_prefix}/'*)
   t="$TARGET_SYSTEM_ROOT_DEFINE -DTARGET_SYSTEM_ROOT_RELOCATABLE"
   TARGET_SYSTEM_ROOT_DEFINE="$t"
   ;;
 esac
], [
 TARGET_SYSTEM_ROOT=
 TARGET_SYSTEM_ROOT_DEFINE='-DTARGET_SYSTEM_ROOT=\"\"'
d702 29
a730 2
AC_SUBST(TARGET_SYSTEM_ROOT)
AC_SUBST(TARGET_SYSTEM_ROOT_DEFINE)
d737 1
a737 1
-Wformat -Wparentheses -Wpointer-arith -Wuninitialized -Wformat-nonliteral"
d814 32
d862 24
d902 67
d1011 1
d1047 8
d1067 1
a1067 1
	   TCL_LIBS='$(LIBGUI) $(ITCL) $(ITK) $(TK) $(TCL) $(X11_LDFLAGS) $(X11_LIBS)'
d1092 1
d1105 2
a1147 1
AC_SUBST(PROFILE_CFLAGS)
d1159 61
d1260 4
d1273 13
a1285 3
if test x"${gdb_osabi}" != x ; then
    AC_DEFINE_UNQUOTED(GDB_OSABI_DEFAULT, $gdb_osabi,
		       [Define to the default OS ABI for this configuration.])
d1287 12
d1300 2
a1301 10
# Enable multi-ice-gdb-server.
AC_ARG_ENABLE(multi-ice,
[  --enable-multi-ice      build the multi-ice-gdb-server],
  [case $enableval in
    yes | no)
      ;;
    *) AC_MSG_ERROR([bad value $enableval for --enable-multi-ice]) ;;
  esac])
if test "x$enable_multi_ice" = xyes; then
  configdirs="$configdirs multi-ice"
d1304 10
a1313 9
# We only build gdbserver automatically if host and target are the same.
if test "x$target" = "x$host"; then
  AC_MSG_CHECKING(whether gdbserver is supported on this host)
  if test "x$build_gdbserver" = xyes; then
    configdirs="$configdirs gdbserver"
    AC_MSG_RESULT(yes)
  else
    AC_MSG_RESULT(no)
  fi
d1316 1
a1316 1
AC_CONFIG_SUBDIRS($configdirs)
d1358 2
d1377 1
@


1.91.4.3
log
@Merge mainline to branch.  GDB is broken until I update cp-names.y.
@
text
@d320 2
a321 1
  go32* | *djgpp*)
a346 1
AC_CHECK_HEADERS(machine/reg.h)
a386 12
dnl Check for struct stat with an st_blocks member
AC_MSG_CHECKING(for member st_blocks in struct stat)
AC_CACHE_VAL(gdb_cv_have_struct_stat_with_st_blocks_member,
  [AC_TRY_COMPILE([#include <sys/types.h>
#include <sys/stat.h>],
                  [struct stat st; (void) st.st_blocks;],
                  gdb_cv_have_struct_stat_with_st_blocks_member=yes,
                  gdb_cv_have_struct_stat_with_st_blocks_member=no)])
AC_MSG_RESULT($gdb_cv_have_struct_stat_with_st_blocks_member)
if test $gdb_cv_have_struct_stat_with_st_blocks_member = yes; then
  AC_DEFINE(HAVE_STRUCT_STAT_ST_BLOCKS)
fi
a480 10
fi

# See if <machine/reg.h> degines `struct reg'.
AC_CACHE_CHECK([for struct reg in machine/reg.h], gdb_cv_struct_reg,
[AC_TRY_COMPILE([#include <sys/types.h>
#include <machine/reg.h>], [struct reg r;],
gdb_cv_struct_reg=yes, gdb_cv_struct_reg=no)])
if test $gdb_cv_struct_reg = yes; then
  AC_DEFINE(HAVE_STRUCT_REG, 1,
            [Define to 1 if your system has struct reg in <machine/reg.h>.])
@


1.91.4.4
log
@Merge drow-cplus-merge-20040208 to drow-cplus-branch.
@
text
@d2 1
a2 1
dnl Copyright 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004
d626 1
a626 1
  *-*-solaris2.[[6789]])
d1027 1
a1027 2
-Wformat -Wparentheses -Wpointer-arith -Wuninitialized -Wformat-nonliteral \
-Wunused-label"
d1029 1
a1029 1
# -Wunused-function -Wunused-variable -Wunused-value
d1083 20
@


1.91.2.1
log
@2002-10-25  David Carlton  <carlton@@math.stanford.edu>

	* symtab.c (lookup_symbol_aux_block): New function.
	(lookup_symbol_aux_local): Call lookup_symbol_aux_block.
	(lookup_symbol_aux): Ditto.

	* Merge from mainline; tag is carlton_dictionary-20021025-merge.

2002-10-25  David Carlton  <carlton@@math.stanford.edu>

	* cp-support.c: Add comment to demangled name pitfalls.
	* symtab.c (lookup_transparent_type): Add FIXME comment at
	beginning.

2002-10-23  David Carlton  <carlton@@math.stanford.edu>

	* symtab.c: Delete cplusplus_hint.
	Delete prototype for find_template_name_end.
	* dwarf2read.c (scan_partial_symbols): Add in a gdb_assert from a
	later version of my namespace_minimal patch.

2002-10-25  David Carlton  <carlton@@math.stanford.edu>

	* gdb.c++/namespace.exp: Change all of the setup_xfail tests that
	I added into setup_kfails.
@
text
@d282 1
a282 1
  *-*-unixware* | *-*-sysv4.2* | *-*-sysv5* | *-*-interix* )
@


1.91.2.2
log
@2002-11-15  David Carlton  <carlton@@math.stanford.edu>

	* Merge from mainline; tag is carlton_dictionary-20021115-merge.
@
text
@a602 17
dnl See if we have a thread_db header file that has TD_NOTALLOC.
if test "x$ac_cv_header_thread_db_h" = "xyes"; then
   AC_CACHE_CHECK([whether <thread_db.h> has TD_NOTALLOC],
                  gdb_cv_thread_db_h_has_td_notalloc,
     AC_TRY_COMPILE(
       [#include <thread_db.h>],
       [int i = TD_NOTALLOC;],
       gdb_cv_thread_db_h_has_td_notalloc=yes,
       gdb_cv_thread_db_h_has_td_notalloc=no
     )
   )
fi
if test "x$gdb_cv_thread_db_h_has_td_notalloc" = "xyes"; then
  AC_DEFINE(THREAD_DB_HAS_TD_NOTALLOC, 1,
            [Define if <thread_db.h> has the TD_NOTALLOC error code.])
fi

@


1.91.2.3
log
@2002-12-23  David Carlton  <carlton@@math.stanford.edu>

	* Merge from mainline; tag is carlton_dictionary-20021223-merge.
@
text
@d535 3
d539 2
a540 5
dnl For certain native configurations, we need to check whether thread
dnl support can be built in or not.
dnl
dnl Note that we only want this if we are both native (host == target),
dnl and not doing a canadian cross build (build == host).
a559 4
      # See if thread_db library is around for Solaris thread debugging.
      # Note that we must explicitly test for version 1 of the library
      # because version 0 (present on Solaris 2.4 or earlier) doesn't have
      # the same API.
a598 16
   aix*)
      AC_MSG_CHECKING(for AiX thread debugging library)
      AC_CACHE_VAL(gdb_cv_have_aix_thread_debug,
                   [AC_TRY_COMPILE([#include <sys/pthdebug.h>],
                                   [#ifndef PTHDB_VERSION_3
                                    #error
                                    #endif],
                                   gdb_cv_have_aix_thread_debug=yes,
                                   gdb_cv_have_aix_thread_debug=no)])
      AC_MSG_RESULT($gdb_cv_have_aix_thread_debug)
      if test $gdb_cv_have_aix_thread_debug = yes; then
         CONFIG_SRCS="${CONFIG_SRCS} aix-thread.c"
         CONFIG_LIB_OBS="${CONFIG_LIB_OBS} aix-thread.o"
         CONFIG_LDFLAGS="${CONFIG_LDFLAGS} -lpthdebug"
      fi
      ;;
a619 17
dnl linux-proc.c wants to use pread64, which may require special CFLAGS
dnl -D_BSD_SOURCE is normally assumed but we have to specify it because of
dnl -D_XOPEN_SOURCE=500.
if test $host = $target; then
  case $target in
    *-linux*)
      save_CFLAGS=$CFLAGS
      CFLAGS="$CFLAGS -D_BSD_SOURCE -D_XOPEN_SOURCE=500 -D_LARGEFILE64_SOURCE"
      AC_TRY_LINK([#include <unistd.h>],
		  [pread64 (0, NULL, 0, 0);],
		  [ENABLE_CFLAGS="$ENABLE_CFLAGS -D_BSD_SOURCE -D_XOPEN_SOURCE=500 -D_LARGEFILE64_SOURCE"
		   AC_DEFINE(HAVE_PREAD64)], [])
      CFLAGS=$save_CFLAGS
      ;;
  esac
fi

d1028 1
d1064 8
d1084 1
a1084 1
	   TCL_LIBS='$(LIBGUI) $(ITCL) $(ITK) $(TK) $(TCL) $(X11_LDFLAGS) $(X11_LIBS)'
d1122 2
@


1.91.2.4
log
@2003-02-07  David Carlton  <carlton@@math.stanford.edu>

	* Merge with mainline; tag is carlton_dictionary-20030207-merge.
@
text
@d2 1
a2 1
dnl Copyright 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003
a28 1
AC_GNU_SOURCE
a35 8
# FIXME: kettenis/20030102: The AC_PROG_RANLIB from Autoconf 2.13
# doesn't support cross-compilation, but the one from Autoconf 2.5x
# does.  Override RANLIB here (i.e. before running AC_PROG_RANLIB) to
# deal with the lossage.  Note that CY_GNU_GETTEXT currently calls
# AC_PROG_RANLIB.  This can be removed when we switch to Autoconf
# 2.5x.
AC_CHECK_TOOL(RANLIB, ranlib, :)

a40 9
debugdir=${libdir}/debug
	 
AC_ARG_WITH(separate-debug-dir,
[  --with-separate-debug-dir=path   Look for global separate debug info in this path [LIBDIR/debug]],
[debugdir="${withval}"])
	
AC_DEFINE_DIR(DEBUGDIR, debugdir,
              [Global directory for separate debug files. ])
#AC_DEFINE_UNQUOTED(DEBUGDIR, "$debugdir"),
d55 2
a56 2
AC_CONFIG_SUBDIRS(doc testsuite)
configdirs=
d58 8
a65 1
. $srcdir/configure.host
d67 3
a69 1
. $srcdir/configure.tgt
d71 2
a72 2
# Fetch the default architecture and default target vector from BFD.
targ=$target; . $srcdir/../bfd/config.bfd
d74 1
a74 3
# We only want the first architecture, so strip off the others if
# there is more than one.
targ_archs=`echo $targ_archs | sed 's/ .*//'`
d76 1
a76 8
if test "x$targ_archs" != x; then
  AC_DEFINE_UNQUOTED(DEFAULT_BFD_ARCH, $targ_archs,
    [Define to BFD's default architecture. ])
fi
if test "x$targ_defvec" != x; then
  AC_DEFINE_UNQUOTED(DEFAULT_BFD_VEC, $targ_defvec,
    [Define to BFD's default target vector. ])
fi
d78 1
a78 1
AC_ARG_PROGRAM
d80 2
a81 1
# The CLI cannot be disabled yet, but may be in the future.
d83 4
a86 25
# Enable CLI.
AC_ARG_ENABLE(gdbcli,
[  --disable-gdbcli        disable command-line interface (CLI)],
  [case $enableval in
    yes)
      ;;
    no)
      AC_MSG_ERROR([the command-line interface cannot be disabled yet]) ;;
    *)
      AC_MSG_ERROR([bad value $enableval for --enable-gdbcli]) ;;
  esac],
  [enable_gdbcli=yes])
if test x"$enable_gdbcli" = xyes; then
  if test -d $srcdir/cli; then
    CONFIG_OBS="$CONFIG_OBS \$(SUBDIR_CLI_OBS)"
    CONFIG_DEPS="$CONFIG_DEPS \$(SUBDIR_CLI_DEPS)"
    CONFIG_SRCS="$CONFIG_SRCS \$(SUBDIR_CLI_SRCS)"
    CONFIG_INITS="$CONFIG_INITS \$(SUBDIR_CLI_INITS)"
    ENABLE_CFLAGS="$ENABLE_CFLAGS \$(SUBDIR_CLI_CFLAGS)"
    CONFIG_ALL="$CONFIG_ALL \$(SUBDIR_CLI_ALL)"
    CONFIG_CLEAN="$CONFIG_CLEAN \$(SUBDIR_CLI_CLEAN)"
    CONFIG_INSTALL="$CONFIG_INSTALL \$(SUBDIR_CLI_INSTALL)"
    CONFIG_UNINSTALL="$CONFIG_UNINSTALL \$(SUBDIR_CLI_UNINSTALL)"
  fi
fi
d88 2
a89 23
# Enable MI.
AC_ARG_ENABLE(gdbmi,
[  --disable-gdbmi         disable machine-interface (MI)],
  [case $enableval in
    yes | no)
      ;;
    *)
      AC_MSG_ERROR([bad value $enableval for --enable-gdbmi]) ;;
  esac],
  [enable_gdbmi=yes])
if test x"$enable_gdbmi" = xyes; then
  if test -d $srcdir/mi; then
    CONFIG_OBS="$CONFIG_OBS \$(SUBDIR_MI_OBS)"
    CONFIG_DEPS="$CONFIG_DEPS \$(SUBDIR_MI_DEPS)"
    CONFIG_SRCS="$CONFIG_SRCS \$(SUBDIR_MI_SRCS)"
    CONFIG_INITS="$CONFIG_INITS \$(SUBDIR_MI_INITS)"
    ENABLE_CFLAGS="$ENABLE_CFLAGS \$(SUBDIR_MI_CFLAGS)"
    CONFIG_ALL="$CONFIG_ALL \$(SUBDIR_MI_ALL)"
    CONFIG_CLEAN="$CONFIG_CLEAN \$(SUBDIR_MI_CLEAN)"
    CONFIG_INSTALL="$CONFIG_INSTALL \$(SUBDIR_MI_INSTALL)"
    CONFIG_UNINSTALL="$CONFIG_UNINSTALL \$(SUBDIR_MI_UNINSTALL)"
  fi
fi
d91 2
a92 22
# Enable TUI.
AC_ARG_ENABLE(tui,
[  --enable-tui            enable full-screen terminal user interface (TUI)],
  [case $enableval in
    yes | no)
      ;;
    *)
      AC_MSG_ERROR([bad value $enableval for --enable-tui]) ;;
  esac])
if test x"$enable_tui" = xyes; then
  if test -d $srcdir/tui; then
    CONFIG_OBS="$CONFIG_OBS \$(SUBDIR_TUI_OBS)"
    CONFIG_DEPS="$CONFIG_DEPS \$(SUBDIR_TUI_DEPS)"
    CONFIG_SRCS="$CONFIG_SRCS \$(SUBDIR_TUI_SRCS)"
    CONFIG_INITS="$CONFIG_INITS \$(SUBDIR_TUI_INITS)"
    ENABLE_CFLAGS="$ENABLE_CFLAGS \$(SUBDIR_TUI_CFLAGS)"
    CONFIG_ALL="$CONFIG_ALL \$(SUBDIR_TUI_ALL)"
    CONFIG_CLEAN="$CONFIG_CLEAN \$(SUBDIR_TUI_CLEAN)"
    CONFIG_INSTALL="$CONFIG_INSTALL \$(SUBDIR_TUI_INSTALL)"
    CONFIG_UNINSTALL="$CONFIG_UNINSTALL \$(SUBDIR_TUI_UNINSTALL)"
    need_curses=yes
  fi
d94 2
a95 51

# Enable gdbtk.
AC_ARG_ENABLE(gdbtk,
[  --enable-gdbtk          enable gdbtk graphical user interface (GUI)],
  [case $enableval in
    yes | no)
      ;;
    *)
      AC_MSG_ERROR([bad value $enableval for --enable-gdbtk]) ;;
  esac],
  [if test -d $srcdir/gdbtk; then
    enable_gdbtk=yes
  else
    enable_gdbtk=no
  fi])
# We unconditionally disable gdbtk tests on selected platforms.
case $host_os in
  go32* | windows*)
    AC_MSG_WARN([gdbtk isn't supported on $host; disabling])
    enable_gdbtk=no ;;
esac

# Profiling support.
AC_ARG_ENABLE(profiling,
[  --enable-profiling      enable profiling of GDB],
  [case $enableval in
    yes | no)
      ;;
    *)
      AC_MSG_ERROR([bad value $enableval for --enable-profile]) ;;
  esac],
 [enable_profiling=no])

AC_CHECK_FUNCS(monstartup _mcleanup)
if test "$enable_profiling" = yes ; then
  if test $ac_cv_func_monstartup = no || test $ac_cv_func__mcleanup = no; then
    AC_MSG_ERROR(--enable-profiling requires monstartup and _mcleanup)
  fi
  PROFILE_CFLAGS=-pg
  OLD_CFLAGS="$CFLAGS"
  CFLAGS="$CFLAGS $PROFILE_CFLAGS"

  AC_CACHE_CHECK([whether $CC supports -pg], ac_cv_cc_supports_pg,
    [AC_TRY_COMPILE([], [int x;], ac_cv_cc_supports_pg=yes,
     ac_cv_cc_supports_pg=no)])

  if test $ac_cv_cc_supports_pg = no; then
    AC_MSG_ERROR(--enable-profiling requires a compiler which supports -pg)
  fi

  CFLAGS="$OLD_CFLAGS"
a97 4
# --------------------- #
# Checks for programs.  #
# --------------------- #

a99 4
AC_PROG_LN_S
AC_PROG_RANLIB
AC_PROG_YACC

d101 1
d104 1
d106 1
a106 1
# Needed for GNU/Hurd.
d109 1
a109 3
# ---------------------- #
# Checks for libraries.  #
# ---------------------- #
d111 1
a111 2
# We might need to link with -lm; most simulators need it.
AC_CHECK_LIB(m, main)
d113 1
a113 47
# We need to link with -lw to get `wctype' on Solaris before Solaris
# 2.6.  Solaris 2.6 and beyond have this function in libc, and have a
# libw that some versions of the GNU linker cannot hanle (GNU ld 2.9.1
# is known to have this problem).  Therefore we avoid libw if we can.
AC_CHECK_FUNC(wctype, [],
  [AC_CHECK_LIB(w, wctype)])

# Some systems (e.g. Solaris) have `socketpair' in libsocket.
AC_SEARCH_LIBS(socketpair, socket)

# Since GDB uses Readline, we need termcap functionality, so we need
# to find a library that provides that.  When GDB is configured with
# --enable-tui, we need full curses functionality.
#
# FIXME: kettenis/20030102: We seem to prefer HP curses (Hcurses) over
# Xcurses on HP-UX; see the `-D__HP_CURSES' in the relevant host
# Makefile fragments.  That's why we need to have `Hcurses' before
# `curses'.  I don't see why we should use HP curses if a more
# standard curses is available, except that according to HP's
# documentation one needs to compile `-D_XOPEN_SOURCE_EXTENDED' on
# HP-UX 10.10 and 10.20.

if test "$need_curses" = yes; then
  AC_SEARCH_LIBS(initscr, [ncurses Hcurses curses], [],
    [AC_MSG_ERROR([no curses library found])])
fi

case $host_os in
  cygwin*)
    if test -d $srcdir/libtermcap; then
      LIBS="../libtermcap/libtermcap.a $LIBS"
      ac_cv_search_tgetent="../libtermcap/libtermcap.a"
    fi ;;
  go32*)
    # ??? Is this really true?
    ac_cv_search_tgetent="none required"
    ;;
  aix*)
    # Readline prefers curses over termcap on AIX.
    # ??? Why?
    AC_SEARCH_LIBS(tgetent, [tinfo ncurses curses termcap])
    ;;
esac

# Note: We used to check for libtermlib and libterminfo too, but
# Readline doesn't, so I think we're safe with leaving them out.
AC_SEARCH_LIBS(tgetent, [termcap tinfo ncurses Hcurses curses])
d115 17
a131 9
if test "$ac_cv_search_tgetent" = no; then
  AC_MSG_ERROR([no termcap library found])
fi

# ------------------------- #
# Checks for header files.  #
# ------------------------- #

AC_HEADER_DIRENT
a132 51
AC_HEADER_STDC
AC_CHECK_HEADERS(link.h)
AC_CHECK_HEADERS(nlist.h)
AC_CHECK_HEADERS(poll.h sys/poll.h)
AC_CHECK_HEADERS(proc_service.h thread_db.h)
AC_CHECK_HEADERS(stddef.h)
AC_CHECK_HEADERS(stdlib.h)
AC_CHECK_HEADERS(stdint.h)
AC_CHECK_HEADERS(string.h memory.h strings.h)
AC_CHECK_HEADERS(sys/fault.h)
AC_CHECK_HEADERS(sys/file.h)
AC_CHECK_HEADERS(sys/filio.h)
AC_CHECK_HEADERS(sys/ioctl.h)
AC_CHECK_HEADERS(sys/param.h)
AC_CHECK_HEADERS(sys/proc.h)
AC_CHECK_HEADERS(sys/procfs.h)
AC_CHECK_HEADERS(sys/ptrace.h ptrace.h)
AC_CHECK_HEADERS(sys/reg.h sys/debugreg.h)
AC_CHECK_HEADERS(sys/select.h)
AC_CHECK_HEADERS(sys/syscall.h)
AC_CHECK_HEADERS(sys/user.h)
AC_CHECK_HEADERS(sys/wait.h wait.h)
AC_CHECK_HEADERS(termios.h termio.h sgtty.h)
AC_CHECK_HEADERS(unistd.h)

# On Solaris 2.[78], we need to define _MSE_INT_H to avoid a clash
# between <widec.h> and <wchar.h> that would cause AC_CHECK_HEADERS to
# think that we don't have <curses.h> if we're using GCC.
case $host_os in
  solaris2.[[78]])
    if test "$GCC" = yes; then
      AC_DEFINE(_MSE_INT_H, 1,
        [[Define to 1 to avoid a clash between <widec.h> and <wchar.h> on
   Solaris 2.[78] when using GCC. ]])
    fi ;;
esac
AC_CHECK_HEADERS(curses.h ncurses.h term.h)

# FIXME: kettenis/20030102: In most cases we include these
# unconditionally, so what's the point in checking these?
AC_CHECK_HEADERS(ctype.h time.h)

# ------------------ #
# Checks for types.  #
# ------------------ #

AC_TYPE_SIGNAL

# ------------------------------------- #
# Checks for compiler characteristics.  #
# ------------------------------------- #
d137 2
a138 4
# ------------------------------ #
# Checks for library functions.  #
# ------------------------------ #

a139 1
AC_FUNC_MMAP
a140 8
AC_CHECK_FUNCS(canonicalize_file_name realpath)
AC_CHECK_FUNCS(poll)
AC_CHECK_FUNCS(pread64)
AC_CHECK_FUNCS(sbrk)
AC_CHECK_FUNCS(setpgid setpgrp)
AC_CHECK_FUNCS(sigaction sigprocmask sigsetmask)
AC_CHECK_FUNCS(socketpair)

a170 31
# Assume we'll default to using the included libiberty regex.
gdb_use_included_regex=yes

# However, if the system regex is GNU regex, then default to *not*
# using the included regex.
AC_CACHE_CHECK(
  [for GNU regex],
  [gdb_cv_have_gnu_regex],
  [AC_TRY_COMPILE(
    [#include <gnu-versions.h>],
    [#define REGEX_INTERFACE_VERSION 1
#if _GNU_REGEX_INTERFACE_VERSION != REGEX_INTERFACE_VERSION
# error "Version mismatch"
#endif],
    gdb_cv_have_gnu_regex=yes,
    gdb_cv_have_gnu_regex=no)])
if test $gdb_cv_have_gnu_regex = yes; then
  gdb_use_included_regex=no
fi

AC_ARG_WITH(included-regex,
  [  --without-included-regex don't use included regex; this is the default
                          on systems with version 2 of the GNU C library
                          (use with caution on other system)],
  gdb_with_regex=$withval,
  gdb_with_regex=$gdb_use_included_regex)
if test "$gdb_with_regex" = yes; then
  AC_DEFINE(USE_INCLUDED_REGEX, 1,
    [Define to 1 if the regex included in libiberty should be used.])
fi

d237 4
d418 10
d516 2
d640 51
d693 54
a746 2
AC_ARG_WITH(sysroot,
[  --with-sysroot[=DIR] Search for usr/lib et al within DIR.],
d748 7
a754 25
 case ${with_sysroot} in
 yes) AC_ERROR(with-sysroot must specify path) ;;
 *) TARGET_SYSTEM_ROOT=$with_sysroot ;;
 esac

 TARGET_SYSTEM_ROOT_DEFINE='-DTARGET_SYSTEM_ROOT=\"$(TARGET_SYSTEM_ROOT)\"'

 if test "x$exec_prefix" = xNONE; then
  if test "x$prefix" = xNONE; then
   test_prefix=/usr/local
  else
   test_prefix=$prefix
  fi
 else
  test_prefix=$exec_prefix
 fi
 case ${TARGET_SYSTEM_ROOT} in
 ${test_prefix}*)
   t="$TARGET_SYSTEM_ROOT_DEFINE -DTARGET_SYSTEM_ROOT_RELOCATABLE"
   TARGET_SYSTEM_ROOT_DEFINE="$t"
   ;;
 esac
], [
 TARGET_SYSTEM_ROOT=
 TARGET_SYSTEM_ROOT_DEFINE='-DTARGET_SYSTEM_ROOT=\"\"'
d756 29
a784 2
AC_SUBST(TARGET_SYSTEM_ROOT)
AC_SUBST(TARGET_SYSTEM_ROOT_DEFINE)
d868 32
d916 24
d956 67
d1137 1
a1190 1
AC_SUBST(PROFILE_CFLAGS)
d1202 61
d1343 2
a1344 3
if test x"${gdb_osabi}" != x ; then
    AC_DEFINE_UNQUOTED(GDB_OSABI_DEFAULT, $gdb_osabi,
		       [Define to the default OS ABI for this configuration.])
d1347 10
a1356 21
# Enable multi-ice-gdb-server.
AC_ARG_ENABLE(multi-ice,
[  --enable-multi-ice      build the multi-ice-gdb-server],
  [case $enableval in
    yes | no)
      ;;
    *) AC_MSG_ERROR([bad value $enableval for --enable-multi-ice]) ;;
  esac])
if test "x$enable_multi_ice" = xyes; then
  configdirs="$configdirs multi-ice"
fi

# We only build gdbserver automatically if host and target are the same.
if test "x$target" = "x$host"; then
  AC_MSG_CHECKING(whether gdbserver is supported on this host)
  if test "x$build_gdbserver" = xyes; then
    configdirs="$configdirs gdbserver"
    AC_MSG_RESULT(yes)
  else
    AC_MSG_RESULT(no)
  fi
d1359 1
a1359 1
AC_CONFIG_SUBDIRS($configdirs)
d1401 2
d1420 1
@


1.91.2.5
log
@2003-03-05  David Carlton  <carlton@@math.stanford.edu>

	* Merge with mainline.  Tag is carlton_dictionary-20030305-merge.
@
text
@a206 10
AC_CACHE_CHECK([for _etext], ac_cv_var__etext,
[AC_TRY_LINK(
[#include <stdlib.h>
extern char _etext;
],
[free (&_etext);], ac_cv_var__etext=yes, ac_cv_var__etext=no)])
if test $ac_cv_var__etext = yes; then
  AC_DEFINE(HAVE__ETEXT, 1,
            [Define to 1 if your system has the _etext variable. ])
fi
a503 12
# See if stdint.h provides the uintptr_t type.
# Autoconf 2.5X has an improved AC_CHECK_TYPE which will simplify this.
AC_CACHE_CHECK([for uintptr_t in stdint.h], gdb_cv_have_uintptr_t,
  [AC_TRY_COMPILE(
    [#include <stdint.h>],
    [uintptr_t foo = 0;],
    gdb_cv_have_uintptr_t=yes,
    gdb_cv_have_uintptr_t=no)])
AC_MSG_RESULT($gdb_cv_have_uintptr_t)
if test $gdb_cv_have_uintptr_t = yes; then
  AC_DEFINE(HAVE_UINTPTR_T, 1, [Define if <stdint.h> provides the uintptr_t type.])
fi
d898 1
a898 1
 yes) TARGET_SYSTEM_ROOT='${exec_prefix}/${target_alias}/sys-root' ;;
d914 1
a914 2
 "${test_prefix}"|"${test_prefix}/"*|\
 '${exec_prefix}'|'${exec_prefix}/'*)
@


1.91.2.6
log
@2003-06-27  David Carlton  <carlton@@kealia.com>

	* Merge with mainline; tag is carlton_dictionary-20030627-merge.
@
text
@a359 6
# ------------------------- #
# Checks for declarations.  #
# ------------------------- #

gcc_AC_CHECK_DECLS(getopt)

a386 1
AC_CHECK_FUNCS(syscall)
a911 18
fi

dnl See if we have a sys/syscall header file that has __NR_tkill.
if test "x$ac_cv_header_sys_syscall_h" = "xyes"; then
   AC_CACHE_CHECK([whether <sys/syscall.h> has __NR_tkill],
                  gdb_cv_sys_syscall_h_has_tkill,
     AC_TRY_COMPILE(
       [#include <sys/syscall.h>],
       [int i = __NR_tkill;],
       gdb_cv_sys_syscall_h_has_tkill=yes,
       gdb_cv_sys_syscall_h_has_tkill=no
     )
   )
fi
dnl See if we can issue tkill syscall.
if test "x$gdb_cv_sys_syscall_h_has_tkill" = "xyes" && test "x$ac_cv_func_syscall" = "xyes"; then
  AC_DEFINE(HAVE_TKILL_SYSCALL, 1,
            [Define if we can use the tkill syscall.])
@


1.91.2.7
log
@2003-09-17  David Carlton  <carlton@@kealia.com>

	* Merge with mainline; tag is carlton_dictionary-20030917-merge.
@
text
@a266 3
# Some systems (e.g. Solaris) have `gethostbyname' in libnsl.
AC_SEARCH_LIBS(gethostbyname, nsl)

d529 1
d1307 4
d1319 27
@


1.91.2.8
log
@2003-12-15  David Carlton  <carlton@@kealia.com>

	* Merge with mainline; tag is carlton_dictionary-20031215-merge.
	* cp-support.c (class_name_from_physname): Add DMGL_PARAMS to call
	to cplus_demangle.
	(method_name_from_physname): Ditto.
@
text
@a194 24
# Libunwind support.
AC_ARG_WITH(libunwind,
[  --with-libunwind            Use libunwind frame unwinding support],
[case "${withval}" in
  yes)  enable_libunwind=yes ;;
  no)   enable_libunwind=no ;;
  *)    AC_MSG_ERROR(bad value ${withval} for GDB with-libunwind option) ;;
esac],[
  AC_CHECK_HEADERS(libunwind.h)
  AC_CHECK_HEADERS(libunwind-ia64.h)
  if test x"$ac_cv_header_libunwind_h" = xyes -a x"$ac_cv_header_libunwind_ia64_h" = xyes; then
    enable_libunwind=yes;
  fi
])
   
if test x"$enable_libunwind" = xyes; then
  AC_CHECK_HEADERS(libunwind.h)
  AC_CHECK_HEADERS(libunwind-ia64.h)
  AC_DEFINE(HAVE_LIBUNWIND, 1)
  CONFIG_OBS="$CONFIG_OBS libunwind-frame.o"
  CONFIG_DEPS="$CONFIG_DEPS libunwind-frame.o"
  CONFIG_SRCS="$CONFIG_SRCS libunwind-frame.c"
fi

@


1.91.2.9
log
@2004-01-26  David Carlton  <carlton@@kealia.com>

	* Merge with mainline; tag is carlton_dictionary-20040126-merge.
@
text
@d2 1
a2 1
dnl Copyright 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004
d320 2
a321 1
  go32* | *djgpp*)
a346 1
AC_CHECK_HEADERS(machine/reg.h)
a386 12
dnl Check for struct stat with an st_blocks member
AC_MSG_CHECKING(for member st_blocks in struct stat)
AC_CACHE_VAL(gdb_cv_have_struct_stat_with_st_blocks_member,
  [AC_TRY_COMPILE([#include <sys/types.h>
#include <sys/stat.h>],
                  [struct stat st; (void) st.st_blocks;],
                  gdb_cv_have_struct_stat_with_st_blocks_member=yes,
                  gdb_cv_have_struct_stat_with_st_blocks_member=no)])
AC_MSG_RESULT($gdb_cv_have_struct_stat_with_st_blocks_member)
if test $gdb_cv_have_struct_stat_with_st_blocks_member = yes; then
  AC_DEFINE(HAVE_STRUCT_STAT_ST_BLOCKS)
fi
a482 10
# See if <machine/reg.h> degines `struct reg'.
AC_CACHE_CHECK([for struct reg in machine/reg.h], gdb_cv_struct_reg,
[AC_TRY_COMPILE([#include <sys/types.h>
#include <machine/reg.h>], [struct reg r;],
gdb_cv_struct_reg=yes, gdb_cv_struct_reg=no)])
if test $gdb_cv_struct_reg = yes; then
  AC_DEFINE(HAVE_STRUCT_REG, 1,
            [Define to 1 if your system has struct reg in <machine/reg.h>.])
fi

d1005 1
a1005 2
-Wformat -Wparentheses -Wpointer-arith -Wuninitialized -Wformat-nonliteral \
-Wunused-label"
d1007 1
a1007 1
# -Wunused-function -Wunused-variable -Wunused-value
d1061 20
@


1.90
log
@        * configure.in: Move SUBDIRS to near top of the file so that
        --enable options may add things to it.
        If gdbtk is enabled, add gdbtk directory to SUBDIRS and configdirs.
        * configure: Regenerate.
@
text
@d1365 12
@


1.90.6.1
log
@	* acconfig.h (HAVE_PREAD64): Add.
	* configure.in: Check for pread64.
	* config.in: Regenerated.
	* configure: Regenerated.
	* lin-lwp.c (lin_lwp_xfer_memory): Call linux_proc_xfer_memory.
	* linux-proc.c (linux_proc_xfer_memory): New function.
	* config/nm-linux.h (linux_proc_xfer_memory): Add prototype.
@
text
@a602 17
dnl linux-proc.c wants to use pread64, which may require special CFLAGS
dnl -D_BSD_SOURCE is normally assumed but we have to specify it because of
dnl -D_XOPEN_SOURCE=500.
if test $host = $target; then
  case $target in
    *-linux*)
      save_CFLAGS=$CFLAGS
      CFLAGS="$CFLAGS -D_BSD_SOURCE -D_XOPEN_SOURCE=500 -D_LARGEFILE64_SOURCE"
      AC_TRY_LINK([#include <unistd.h>],
		  [pread64 (0, NULL, 0, 0);],
		  [ENABLE_CFLAGS="$ENABLE_CFLAGS -D_BSD_SOURCE -D_XOPEN_SOURCE=500 -D_LARGEFILE64_SOURCE"
		   AC_DEFINE(HAVE_PREAD64)], [])
      CFLAGS=$save_CFLAGS
      ;;
  esac
fi

@


1.90.6.2
log
@         * configure.in: Check that the pthdebug library is recent enough
         before enabling thread support on native AiX.
         * configure: Regenerate.

         * config/powerpc/aix432.mh (NATDEPFILES): Remove aix-thread.o
         from the list of object files as it is now appended by configure
         if thread support is enabled.
         (NAT_CLIBS): Removed as -lpthdebug is also appended by configure
         if thread support is enabled.
@
text
@d535 3
d539 2
a540 5
dnl For certain native configurations, we need to check whether thread
dnl support can be built in or not.
dnl
dnl Note that we only want this if we are both native (host == target),
dnl and not doing a canadian cross build (build == host).
a596 16
      fi
      ;;
   aix*)
      AC_MSG_CHECKING(for AiX thread debugging library)
      AC_CACHE_VAL(gdb_cv_have_aix_thread_debug,
                   [AC_TRY_COMPILE([#include <sys/pthdebug.h>],
                                   [#ifndef PTHDB_VERSION_3
                                    #error
                                    #endif],
                                   gdb_cv_have_aix_thread_debug=yes,
                                   gdb_cv_have_aix_thread_debug=no)])
      AC_MSG_RESULT($gdb_cv_have_aix_thread_debug)
      if test $gdb_cv_have_aix_thread_debug = yes; then
         CONFIG_SRCS="${CONFIG_SRCS} aix-thread.c"
         CONFIG_LIB_OBS="${CONFIG_LIB_OBS} aix-thread.o"
         CONFIG_LDFLAGS="${CONFIG_LDFLAGS} -lpthdebug"
@


1.89
log
@        Define HAVE_SYS_PROC_H if sys/proc.h exists
        * configure.in: Add check for sys/proc.h
        * config.in: Regenerate.
        * configure: Regenerate.
@
text
@d55 1
d1091 3
a1299 1
SUBDIRS="doc testsuite nlm"
@


1.88
log
@	* gdb_locale.h: New file.
	* Makefile.in (GDB_CFLAGS): Define LOCALEDIR.
	(defs_h): Added gdb_locale.h.
	* configure, config.in: Rebuilt.
	* configure.in (PACKAGE): Define.
	* defs.h: Include gdb_locale.h.
	* main.c (captured_main): Call setlocale, bindtextdomain,
@
text
@d124 1
a124 1
	string.h sys/procfs.h sys/ptrace.h sys/reg.h stdint.h \
@


1.87
log
@From Christian Limpach <chris@@Pin.LU>
* configure.in: Change sed expression which comments out
NATDEPFILES to also comment out continuation lines.
* configure: Regenerate.
@
text
@d36 1
a36 2
dnl gdb doesn't use gettext, but bfd does.  We call this to ensure we
dnl link with the correct libraries.
d39 2
@


1.87.4.1
log
@Merge w/trunk (kseitz_interps-20020722-merge).
@
text
@d36 2
a37 1
dnl Set up for gettext.  PACKAGE is used when we call bindtextdomain.
a39 2
AC_DEFINE(PACKAGE, "gdb", [Name of this package. ])

d123 1
a123 1
	string.h sys/procfs.h sys/proc.h sys/ptrace.h sys/reg.h stdint.h \
@


1.87.4.2
log
@Merge with kseitz_interps-20020829-merge tag from trunk.
@
text
@a54 1
SUBDIRS="doc testsuite nlm"
a1089 3

    SUBDIRS="${SUBDIRS} gdbtk"
    configdirs="${configdirs} gdbtk"
d1296 1
@


1.87.4.3
log
@Merge with kseitz_interps-20020930-merge.
@
text
@a1364 12
dnl  Detect the character set used by this host.

dnl  At the moment, we just assume it's ISO-8859-1 (which is a
dnl  superset of ASCII containing the characters needed for French,
dnl  German, Spanish, Italian, and possibly others), but if were
dnl  *were* to support any host character sets other than ISO-8859-1,
dnl  here's where we'd detect it.
AC_DEFINE(GDB_DEFAULT_HOST_CHARSET, "ISO-8859-1",
          [Define to be a string naming the default host character set.])

AM_ICONV

@


1.87.4.4
log
@merge from mainline
@
text
@d282 1
a282 1
  *-*-unixware* | *-*-sysv4.2* | *-*-sysv5* | *-*-interix* )
@


1.87.2.1
log
@merge with trunk
@
text
@d36 2
a37 1
dnl Set up for gettext.  PACKAGE is used when we call bindtextdomain.
a39 2
AC_DEFINE(PACKAGE, "gdb", [Name of this package. ])

@


1.86
log
@2002-04-11  Michael Snyder  <msnyder@@redhat.com>

	* configure.in: Autoconfiscate _SYSCALL32 define for solaris.
	* configure: Regenerate.
	* config.in: Regenerate.
	* acconfig.h: Add define for _SYSCALL32.
	* core-sol2.c: Remove #define _SYSCALL32.
	* solib-legacy.c: Remove #define _SYSCALL32.
@
text
@d1369 2
a1370 1
        sed -e '/^NATDEPFILES[[ 	]]*=[[ 	]]*/s//# NATDEPFILES=/' \
@


1.85
log
@* configure.in: Call AC_C_INLINE.
* configure: Regenerated.
@
text
@d412 1
@


1.84
log
@        * configure.in: Detect declaration for canonicalize_file_name.
        * utils.c (canonicalize_file_name): Declare, if needed.
        (gdb_realpath): Prefer realpath if available and usable.
        * config.in, configure: Rebuild.
@
text
@d133 1
@


1.83
log
@* configure.in (gdb_cv_bigtoc): Check for -bbigtoc on AIX.
* configure: Rebuilt.
@
text
@d244 1
a244 1

@


1.82
log
@Zap lin-thread.c
@
text
@d514 17
@


1.82.2.1
log
@* configure.in (gdb_cv_bigtoc): Check for -bbigtoc on AIX.
* configure: Rebuilt.
@
text
@a513 17
case ${host_os} in
aix*)
  AC_CACHE_CHECK([for -bbigtoc option], [gdb_cv_bigtoc], [
    SAVE_LDFLAGS=$LDFLAGS

    case $GCC in
    yes) gdb_cv_bigtoc=-Wl,-bbigtoc ;;
    *) gdb_cv_bigtoc=-bbigtoc ;;
    esac

    LDFLAGS=$LDFLAGS\ $gdb_cv_bigtoc
    AC_TRY_LINK([], [int i;], [], [gdb_cv_bigtoc=])
  ])
  CONFIG_LDFLAGS="${CONFIG_LDFLAGS} ${gdb_cv_bigtoc}"
  ;;
esac

@


1.82.2.2
log
@From veksler at il.ibm.com:
* utils.c (gdb_realpath): If canonicalize_file_name fails, return
the xstrduped original path.
Fix PR gdb/417.

From 2002-03-14 Richard Henderson <rth@@redhat.com>
* configure.in: Detect declaration for canonicalize_file_name.
* utils.c (canonicalize_file_name): Declare, if needed.
(gdb_realpath): Prefer realpath if available and usable.
* config.in, configure: Rebuild.
@
text
@a243 1
BFD_NEED_DECLARATION(canonicalize_file_name)
@


1.81
log
@* configure.in: (AC_CHECK_FUNCS) Added test for
canonicalize_file_name Regenerated.
* config.in, configure: Regenerated.
* utils.c: (gdb_realpath) If HAVE_CANONICALIZE_FILE_NAME is
defined use canonicalize_file_name.
@
text
@d310 1
a310 1
  dnl around it in lin-thread.c.
@


1.80
log
@2002-02-14  Daniel Jacobowitz  <drow@@mvista.com>

        * configure.tgt: Configure gdbserver only for known working
        targets.  Set ${build_gdbserver} instead of modifying ${configdirs}.
        * configure.in: Check ${build_gdbserver}.  Put gdbserver/ into
        SUBDIRS if it is configured.  Update comment for ${nativefile}.
        * configure: Regenerated.
@
text
@d134 2
a135 2
AC_CHECK_FUNCS(bcopy btowc bzero isascii poll realpath sbrk setpgid setpgrp \
	sigaction sigprocmask sigsetmask)
@


1.79
log
@Remove assumption that there is a host.
@
text
@a1239 3
# these really aren't orthogonal true/false values of the same condition,
# but shells are slow enough that I like to reuse the test conditions
# whenever possible
d1241 2
a1245 3
# else
# GDBserver is only useful in a "native" environment
# configdirs=`echo $configdirs | sed 's/gdbserver//'`
a1275 1

d1279 12
@


1.78
log
@Don't include <endian.h>
@
text
@d1206 8
a1213 1
AC_MSG_ERROR("*** Gdb does not support host ${host}")
@


1.77
log
@* acconfig.h (HAVE_PT_GETXMMREGS): New.
* config.in: Regenerate.
* configure.in: Update copyright years.
Add test for PT_GETXMMREGS supplied by <sys/ptrace.h>.
* configure: Regenerate.
* i386bsd-nat.c: Update copyright years.
(fill_gregset): Use regcache_collect.
(fetch_inferior_registers): Only fetch integer registers
if requested to do so.  Add support for XMM registers
using PT_GETXMMREGS.
(store_inferior_registers): Only store integer registers
if requested to do so.  Add support for XMM registers
using PT_SETXMMREGS.
* i386nbsd-nat.c (fetch_inferior_registers): Remove.
(store_inferior_registers): Remove.
(fetch_core_registers): Use supply_gregset and i387_supply_fsave.
(fetch_elfcore_registers): New function.
(i386nbsd_elfcore_fns): New.
(_initialize_i386nbsd_nat): Register i386nbsd_elfcore_fns.
* config/i386/nbsd.mh (NATDEPFILES): Add i387-nat.o and
i386bsd-nat.o.
* config/i386/nbsdelf.mh (NATDEPFILES): Likewise.
* config/i386/nbsd.mt (TDEPFILES): Add i386bsd-nat.o.
* config/i386/nbsdelf.mt (TDEPFILES): Likewise.
* config/i386/tm-nbsd.h: Update copyright years.
(HAVE_SSE_REGS): Define.
(IN_SIGTRAMP): Define as i386bsd_in_sigtramp.
(SIGTRAMP_START): Redefine as i386bsd_sigtramp_start.
(SIGTRAMP_END): Redefine as i386bsd_sigtramp_end.
(SIGCONTEXT_PC_OFFSET): Remove.
(FRAME_SAVED_PC): Define as i386bsd_frame_saved_pc.
@
text
@d121 1
a121 1
AC_CHECK_HEADERS(ctype.h endian.h nlist.h link.h thread_db.h proc_service.h \
@


1.76
log
@	* configure, config.in: Rebuilt.
	* configure.in: Check for realpath.
	* defs.h (gdb_realpath): Declare.
	* symtab.h (partial_symtab): Added fullname field.
	* source.c (openp): Use gdb_realpath.
	(forget_cached_source_info): Clear full name of each partial
	symtab.
	* utils.c (gdb_realpath): New function.
	* symtab.c (lookup_symtab): Removed.
	(lookup_symtab_1): Renamed to lookup_symtab.
	(lookup_symtab): Look for real path.
	(lookup_partial_symtab): Likewise.
@
text
@d2 1
a2 1
dnl Copyright 1995, 1996, 1997, 1998, 1999, 2000, 2001
d218 13
@


1.75
log
@2001-12-07  Martin M. Hunt  <hunt@@redhat.com>

	* configure.in: Check for sys/filio.h
	* configure: Rebuild.
	* config.in: Add HAVE_SYS_FILIO_H
	* ser-tcp.c: Conditionally include sys/filio.h.
@
text
@d134 1
a134 1
AC_CHECK_FUNCS(bcopy btowc bzero isascii poll sbrk setpgid setpgrp \
@


1.74
log
@* configure.in (AC_OUTPUT): Handle assignments to NATDEPFILES
using `+=' as well as `='.
* configure: Regenerated.
@
text
@d127 1
a127 1
	dirent.h sys/ndir.h sys/dir.h ndir.h \
@


1.73
log
@Fix -W... flags check.
@
text
@d1322 4
a1325 2
sed -e '/^NATDEPFILES[[ 	]]*=[[ 	]]*/s//# NATDEPFILES=/' \
	< Makefile > Makefile.tem
@


1.72
log
@	From Ian Roxborough  <irox@@redhat.com>
	* configure.in: Use ITCL_LIB_FULL_PATH and
	ITK_LIB_FULL_PATH to set Itcl and Itk dependancies
	for gdb.
	* configure: Regenerated.
@
text
@d749 4
a752 5
	    if $CC $w 2>&1 | grep 'unrecognized option' > /dev/null; then
		:
	    else
		WARN_CFLAGS="${WARN_CFLAGS} $w"
	    fi
@


1.71
log
@* event-top.c (async_stop_sig) [HAVE_SIGPROCMASK]: Some
gratuitious whitespace changes.
[!HAVE_SIGPROCMASK]: Call sigsetmask if HAVE_SIGSETMASK is defined.
* top.c: Remove redundant logic to define HAVE_SIGSETMASK.
(sigsetmask) Don't define macro.
(stop_sig) [HAVE_SIGPROCMASK]: Add bit of code snatched from
async_stop_sig from event-top.c.
[!HAVE_SIGPROCMASK]: Call sigsetmask if HAVE_SIGSETMASK is
defined.
* configure.in (AC_CHECK_FUNCS): Put functions in alphabetical
order.  Add sigsetmask.
(AC_FUNC_VFORK, AC_FUNC_ALLOCA): Reorder such that they're in
alphabetical order.
* config/xm-aix4.h, config/alpha/xm-alphalinux.h,
config/i386/xm-cygwin.h, config/rs6000/xm-rs6000.h
(HAVE_SIGSETMASK): Remove.
* aclocal.m4, config.in, configure
@
text
@d998 1
a998 10
             CY_AC_LOAD_ITCLCONFIG
	     case "${host}" in
	     *-*-cygwin*)
		itcldir=../itcl/itcl/win/
		;;
	     *)
		itcldir=../itcl/itcl/unix/
		;;
	     esac
 
d1001 1
a1001 1
	     ITCL_DEPS="${itcldir}${ITCL_LIB_FILE}"
a1009 9
	     case "${host}" in
	       *-*-cygwin*)
		 itkdir=../itcl/itk/win/
		 ;;
	       *)
		 itkdir=../itcl/itk/unix/
		 ;;
	       esac 

d1011 1
a1011 1
	     ITK_DEPS="${itkdir}${ITK_LIB_FILE}"
@


1.70
log
@	* configure.in (GDBTK_SRC_DIR): We must have autoconf
	give us the absolute path to the source directory.
	* configure: Regenerated.
	* Makefile.in (GDBTK_SRC_DIR): Add variable so that
	autoconf can substitue it in for us.
	(gdbtk.o): Pass in GDBTK_SRC_DIR instead of srcdir. We
	really do need an absolute pathname.
@
text
@d134 3
a136 1
AC_CHECK_FUNCS(setpgid setpgrp sbrk sigaction isascii bzero bcopy btowc poll sigprocmask)
a137 1
AC_FUNC_ALLOCA
@


1.69
log
@       * configure.in: Only invoke AC_FUNC_SETPGRP if not cross-compiling.
       Check for SETPGRP_VOID separately if cross-compiling and ISO C
       headers are available.
@
text
@d944 7
d1090 1
@


1.68
log
@Added dependency on tcl/tk libraries.
@
text
@d137 18
a154 1
AC_FUNC_SETPGRP
@


1.68.2.1
log
@        * configure.in: Only invoke AC_FUNC_SETPGRP if not cross-compiling.
        Check for SETPGRP_VOID separately if cross-compiling and ISO C
        headers are available.
@
text
@d137 1
a137 18
dnl AC_FUNC_SETPGRP does not work when cross compiling
dnl Instead, assume we will have a prototype for setpgrp if cross compiling.
if test "$cross_compiling" = no; then
  AC_FUNC_SETPGRP
else
  AC_CACHE_CHECK([whether setpgrp takes no argument], ac_cv_func_setpgrp_void,
    [AC_TRY_COMPILE([
#include <unistd.h>
], [
  if (setpgrp(1,1) == -1)
    exit (0);
  else
    exit (1);
], ac_cv_func_setpgrp_void=no, ac_cv_func_setpgrp_void=yes)])
if test $ac_cv_func_setpgrp_void = yes; then
  AC_DEFINE(SETPGRP_VOID, 1)
fi
fi
@


1.67
log
@* configure.in (AC_CHECK_FUNCS): Add setpggrp.
(AC_FUNC_SETPGRP): Add.
* aclocal.m4, configure, config.in: Regenerated.
* inflow.c (gdb_setpgid): Get rid of NEED_POSIX_SETPGID and
SETPGRP_ARGS.  Always use setpgid if it is available, fall back on
setpgrp if it isn't.  Use SETPGRP_VOID (defined by autoconf) to
distinguish between the two setpgrp flavours.
* config/xm-sysv4.h, config/arm/xm-linux.h,
config/i386/xm-i386aix.h, config/i386/xm-sco.h,
config/i386/xm-linux.h, config/i386/xm-ptx.h,
config/m68k/xm-linux.h, config/powerpc/xm-linux.h,
config/sparc/xm-linux.h, config/sparc/xm-sun4sol2.h,
config/ia64/xm-linux.h (NEED_POSIX_SETPGID): Remove.
* config/rs6000/xm-rs6000.h (SETPGRP_ARGS): Remove.
@
text
@d932 13
d955 14
d1056 2
@


1.66
log
@* configure.in: Add check for sigsetjmp.
* config/m68k/xm-linux.h (HAVE_SIGSETJMP): Removed.
* config/xm-sysv4.h (HAVE_SIGSETJMP): Removed.
* configure, config.in: Regenerated.
@
text
@d134 1
a134 1
AC_CHECK_FUNCS(setpgid sbrk sigaction isascii bzero bcopy btowc poll sigprocmask)
d137 1
@


1.65
log
@Build MI by default.
@
text
@d138 11
@


1.64
log
@* configure.in: include nlist.h when checking for member som_addr
in struct so_map.
* configure: regenerate.
@
text
@d586 2
a587 1
])
@


1.63
log
@* i386bsd-nat.c: Include "gdb_assert.h".
[HAVE_PT_GETDBREGS] (DBREG_DRX): Define if not
already defined.
[HAVE_PT_GETDBREGS] (i386bsd_dr_set, i386bsd_dr_set_control,
i386bsd_dr_set_addr, i386bsd_dr_reset_addr,
i386bsd_dr_get_status): New functions.
* config/i386/nm-fbsd.h [HAVE_PT_GETDBREGS]
(I386_USE_GENERIC_WATCHPOINTS): Define.
Include "i386/nm-i386.h".
(I386_DR_LOW_SET_CONTROL, I386_DR_LOW_SET_ADDR,
I386_DR_LOW_RESET_ADDR, I386_DR_LOW_GET_STATUS): New macros.
(i386bsd_dr_set_control, i386bsd_dr_set_addr,
i386bsd_dr_reset_addr, i386bsd_dr_get_status): New prototypes.
* acconfig.h (HAVE_PT_GETDBREGS): New configure macro.
* configure.in: Cleanup a few comments.  Check for PT_GETDBREGS
ptrace request.
* config.in, configure: Regenerate.
@
text
@d344 3
@


1.62
log
@Gag -Wuninitialized warnings.
Add -Wuninitialized to default warning list.
@
text
@d138 1
a138 1
# See if machine/reg.h supports the %fs and %gs i386 segment registers.
d153 1
a153 1
dnl See if ptrace.h provides the PTRACE_GETREGS request.
d165 1
a165 1
dnl See if ptrace.h provides the PTRACE_GETFPXREGS request.
d176 14
@


1.61
log
@2001-03-23  David Smith  <dsmith@@redhat.com>

	* configure.in: Corrected spelling errors.
	* configure: Regenerated.
@
text
@d655 1
a655 1
-Wformat -Wparentheses -Wpointer-arith"
d658 1
a658 1
# -Wchar-subscripts -Wuninitialized -Wtraditional -Wshadow -Wcast-qual
@


1.60
log
@Conditionally include nlist.h in solib-legacy.c for older *BSD systems.
@
text
@d593 1
a593 1
[  --with-uiout          Use new uiout functions intead of *printf's],
d1016 1
a1016 1
# not part of the soruce tree.
d1162 1
a1162 1
# GDBserver is only useful in a "native" enviroment
d1181 1
a1181 1
# Warn the user when they use an old pratice
d1188 1
a1188 1
	    AC_MSG_WARN("GDB: Ingoring TM_FILE in ${target_makefile_frag}")
@


1.59
log
@Fix solib support so that non-svr4-solib-host x svr4-solib-target will work.
@
text
@d121 1
a121 1
AC_CHECK_HEADERS(ctype.h endian.h link.h thread_db.h proc_service.h \
@


1.58
log
@Update/correct copyright notices.
@
text
@a246 13
  dnl Check for struct link_map32 type, which allows a 64-bit Solaris
  dnl debugger to debug a 32-bit Solaris app with 32-bit shared libraries.

  AC_MSG_CHECKING(for struct link_map32 in sys/link.h)
  AC_CACHE_VAL(gdb_cv_have_struct_link_map32, 
    [AC_TRY_COMPILE([#define _SYSCALL32
#include <sys/link.h>], [struct link_map32 l;],
     gdb_cv_have_struct_link_map32=yes,
     gdb_cv_have_struct_link_map32=no)])
  AC_MSG_RESULT($gdb_cv_have_struct_link_map32)
  if test $gdb_cv_have_struct_link_map32 = yes; then
    AC_DEFINE(HAVE_STRUCT_LINK_MAP32)
  fi
d289 62
@


1.57
log
@Configury changes for AIX5/IA-64.
@
text
@d2 2
a3 2
dnl Copyright 1995, 1996, 1997, 1998, 1999, 2000,
dnl 2001 Free Software Foundation, Inc.
@


1.56
log
@	* configure.in (AC_CHECK_HEADERS): Add sys/file.h.
	* configure, config.in: Regenerate.
	* corelow.c: Include <sys/file.h> if present.
@
text
@d126 1
a126 1
	time.h sys/file.h sys/ioctl.h sys/user.h \
d219 3
d242 4
@


1.55
log
@Cleanup autoconfigury of vfork().
@
text
@d2 2
a3 1
dnl Copyright 1995, 1996, 1997, 1998, 1999, 2000 Free Software Foundation, Inc.
d126 1
a126 1
	time.h sys/ioctl.h sys/user.h \
@


1.54
log
@Drop -Wuninitialized until GDB compiles with it.
Add list of buildable targets to the MAINTAINERS file.
@
text
@d133 2
a134 1
AC_CHECK_FUNCS(setpgid sbrk sigaction isascii bzero bcopy btowc poll sigprocmask vfork)
@


1.53
log
@2000-12-20  Fernando Nasser  <fnasser@@redhat.com>

        * configure.in: Rename CONFIG_LOBS to CONFIG_LIB_OBS.
        * Makefile.in: Ditto.
        * configure: Regenerate.
@
text
@d597 1
a597 1
-Wformat -Wparentheses -Wpointer-arith -Wuninitialized"
@


1.52
log
@2000-12-20  Fernando Nasser  <fnasser@@redhat.com>

        * Makefile.in (UIOUT_CFLAGS): New macro. CFLAGS needed for uiout code
        to be compiled.  Defines UI_OUT.
        (SUBDIR_MI_CFLAGS): Defines MI_OUT, not UI_OUT.
        (INTERNAL_WARN_CFLAGS): Also include UIOUT_CFLAGS.
        * configure.in (UIOUT_CFLAGS): New configuration variable.
        (--with-uiout): New configuration option.  Causes uiout code to
        be compiled, instead of the old *printf one.
        * configure: Regenerate.
        * top.c (print_gdb_version): Test for and print MI_OUT, not UI_OUT.
        * testsuite/lib/mi-support.exp (mi_gdb_start): Test for MI_OUT,
        not UI_OUT.
@
text
@d43 1
a43 1
CONFIG_LOBS=
d411 1
a411 1
            CONFIG_LOBS="${CONFIG_LOBS} hpux-thread.o"
d425 1
a425 1
         CONFIG_LOBS="${CONFIG_LOBS} sol-thread.o"
d587 1
a587 1
	CONFIG_LOBS="${CONFIG_LOBS} remote-nrom.o" 
d989 1
a989 1
AC_SUBST(CONFIG_LOBS)
@


1.51
log
@2000-12-11  Fernando Nasser  <fnasser@@redhat.com>

        * Makefile.in (CONFIG_LOBS): New macro.  Configured to the files
        that must be added to the gdblib itself.
        (DEPFILES): Use CONFIG_LOBS, not CONFIG_OBS.
        (INIT_FILES): Include CONFIG_OBS.
        (gdb$(EXEEXT)): Depend on CONFIG_OBS and link with it.
        (kdb): Ditto.
        * configure.in (CONFIG_LOBS): New variable. Object files that must
        be added to gdblib for the specific configuration.
        * configure: Regenerate.
@
text
@d528 23
@


1.50
log
@2000-12-11  Fernando Nasser  <fnasser@@redhat.com>

        * Makefile.in (SUBDIR_GDBTK_OBS, SUBDIR_GDBTK_SRCS,
        SUBDIR_GDBTK_DEPS, SUBDIR_GDBTK_INITS, SUBDIR_GDBTK_LDFLAGS,
        SUBDIR_GDBTK_CFLAGS): New macros.  For gdbtk subdir.
        * configure.in: Fix typo.  It is CONFIG_OBS not CONFIG_OJS.
        Use the SUBDIR_GDBTK_* macros instead of hard coded file names.
        * configure: Regenerate.
@
text
@d43 1
d411 1
a411 1
            CONFIG_OBS="${CONFIG_OBS} hpux-thread.o"
d425 1
a425 1
         CONFIG_OBS="${CONFIG_OBS} sol-thread.o"
d564 1
a564 1
	CONFIG_OBS="${CONFIG_OBS} remote-nrom.o" 
d966 1
@


1.49
log
@2000-12-11  Fernando Nasser  <fnasser@@redhat.com>

        * configure.in: Fix typos.  It is CONFIG_SRCS not CONFIG_SRS.
        * configure: Regenerate.
@
text
@d410 1
a410 1
            CONFIG_OBS="${CONFIG_OJS} hpux-thread.o"
d876 1
a876 1
           ENABLE_CFLAGS="$ENABLE_CFLAGS -DGDBTK"
a888 1
	   CONFIG_DEPS='$(LIBGUI) $(ITCL_DEPS) $(ITK_DEPS) $(TIX_DEPS) $(TK_DEPS) $(TCL_DEPS)'
d895 5
a899 3
	   CONFIG_SRCS="${CONFIG_SRCS} gdbtk/generic/gdbtk.c gdbtk/generic/gdbtk-cmds.c gdbtk/generic/gdbtk-hooks.c gdbtk/generic/gdbtk-varobj.c gdbtk/generic/gdbtk-wrapper.c"
	   CONFIG_OBS="${CONFIG_OBS} gdbtk.o gdbtk-cmds.o gdbtk-hooks.o gdbtk-varobj.o gdbtk-wrapper.o"
	   CONFIG_INITS="${CONFIG_INITS} gdbtk/generic/gdbtk.c gdbtk/generic/gdbtk-cmds.c gdbtk/generic/gdbtk-hooks.c gdbtk/generic/gdbtk-varobj.c gdbtk/generic/gdbtk-wrapper.c"
@


1.48
log
@2000-12-11  Fernando Nasser  <fnasser@@redhat.com>

        * configure.in: Fix a couple of typos in the handling of the
        enable_gdbcli option.  Make it check enableval for the result
        of AC_ARG_ENABLE.
        * configure: Regenerate.
@
text
@d486 1
a486 1
      CONFIG_SRCS="${CONFIG_SRS} \$(SUBDIR_CLI_SRCS)"
d516 1
a516 1
      CONFIG_SRCS="${CONFIG_SRS} \$(SUBDIR_MI_SRCS)"
d543 1
a543 1
      CONFIG_SRCS="${CONFIG_SRS} \$(SUBDIR_TUI_SRCS)"
@


1.47
log
@Add check for vfork() to configure.in.  Cleanup uses.
@
text
@d469 3
a471 3
  case "${enable_gdbcli}" in
    yes) ;;
    "")  enable_gdbcli=yes ;;
d476 1
a476 1
      AC_MSG_ERROR(Bad value for --enable-gdbmi: ${enableval})
d483 1
a483 1
    if test -d "${srcdir}/mi" ; then
@


1.46
log
@2000-12-01  Fernando Nasser  <fnasser@@redhat.com>

        * cli/cli-decode.c: New file. Handle lists of commands, their decoding
        and documentation.
        (add_cmd, deprecate_cmd, add_abbrev_cmd, add_alias_cmd, add_prefix_cmd,
        add_abbrev_prefix_cmd, not_just_help_class_command, empty_sfunc,
        add_set_cmd, add_set_enum_cmd, add_set_auto_boolean_cmd,
        add_show_from_set, delete_cmd, apropos_cmd, help_cmd, help_list,
        help_all, print_doc_line, help_cmd_list, find_cmd, lookup_cmd_1,
        undef_cmd_error, lookup_cmd, deprecated_cmd_warning,
        lookup_cmd_composition, complete_on_cmdlist, complete_on_enum):
        Moved here from command.c.
        (add_info, add_info_alias, add_com, add_com_alias): Moved here from
        top.c.
        * cli/cli-decode.h: Definitions/declarations for the above.
        * cli/cli-cmds.c: New file.  GDB CLI commands.
        (error_no_arg, info_command, show_command, help_command, show_version,
        quit_command, pwd_command, cd_command, echo_command, shell_escape,
        make_command, show_user, set_debug, show_debug, init_cmd_lists):
        Moved here from top.c.
        (apropos_command): Moved here from command.c.
        (complete_command, source_command): Moved here (part) from top.c.
        (is_complete_command): New function. Checks if a command is the
        "complete" command.
        (init_cli_cmds): New function. Add commands to the CLI (from code
        previously in top.c.
        * cli/cli-cmds.h: Definitions/declarations for the above.
        * cli/cli-script.c: New file. GDB CLI command scripting.
        (build_command_line, get_command_line, print_command_lines,
        print_command_line, execute_user_command, execute_control_command,
        while_command, if_command, arg_cleanup, setup_user_args, locate_arg,
        insert_args, realloc_body_list, read_next_line,
        recurse_read_control_structure, read_command_lines, free_command_lines,
        do_free_command_lines_cleanup, make_cleanup_free_command_lines,
        validate_comname, user_defined_command, define_command,
        document_command, source_cleanup_lines, do_fclose_cleanup,
        show_user_1): Moved here from top.c.
        (script_from_file): New function. Implements execution of a script
        contained in a file (part of code for the source_command() that used
        to exist in top.c).
        * cli/cli-script.h: Definitions/declarations for the above.
        * cli/cli-setshow.c: New file. Handle set and show GDB CLI commands.
        (parse_auto_binary_operation, parse_binary_operation,
        do_setshow_command, cmd_show_list): Moved here from command.c.
        * cli/cli-setshow.h: Definitions/declarations for the above.
        * top.c: Remove all CLI code, except the command loop.
        (gdb_init): Call init_cli_cmds().
        * command.c: Remove obsolete file.
        * command.h: Mark as DEPRECATED.
        * gdbcmd.h: Ditto.
        * call-cmds.h: Ditto.
        * Makefile.in (SFILES): Remove command.c.
        (COMMON_OBS): Remove command.o.
        (command.o): Remove obsolete target.
        (cli_decode_h, cli_cmds_h, cli_script_h, cli_setshow_h): New macros.
        Refer to CLI header files.
        (cli-decode.o, cli-cmds.o, cli-setshow.o, cli-script.o): New targets.
        (SUBDIR_CLI_OBS, SUBDIR_CLI_SRCS, SUBDIR_CLI_DEPS, SUBDIR_CLI_INITS,
        SUBDIR_CLI_LDFLAGS, SUBDIR_CLI_CFLAGS, SUBDIR_CLI_ALL, SUBDIR_CLI_CLEAN,
        SUBDIR_CLI_INSTALL, SUBDIR_CLI_UNINSTALL): New macros for new cli
        subdirectory.
        * configure.in (enable_gdbcli): New option. Include the CLI in the
        executable (cannot be disabled yet).
        (CONFIG_OBS, CONFIG_DEPS, CONFIG_SRCS, CONFIG_INITS, ENABLE_CFLAGS,
        CONFIG_ALL, CONFIG_CLEAN, CONFIG_INSTALL, CONFIG_UNINSTALL): Add
        the corresponding SUBDIR_CLI_* macros if CLI requested.
        * configure: Regenerate.
@
text
@d132 1
a132 1
AC_CHECK_FUNCS(setpgid sbrk sigaction isascii bzero bcopy btowc poll sigprocmask)
@


1.45
log
@Add --enable-gdb-build-warnings=... to configure{,.in}.
@
text
@d463 34
@


1.44
log
@Fix HAVE_STRUCT_LINK_MAP32 configure test.
@
text
@d534 4
a537 2
# Don't add -Wall or -Wunused, they include -Wunused-parameter which
# causes noise.
d559 14
@


1.43
log
@2000-08-29  Michael Snyder  <msnyder@@seadog.cygnus.com>

        * valops.c (value_cast): Indentation fix-up.
        * acconfig.h (HAVE_PRGREGSET32_T, HAVE_PRFPREGSET32_T,
        HAVE_STRUCT_LINK_MAP32): New configure macros.
        * config.in: Ditto.
        * configure.in: Test for the above new macros.
        * breakpoint.c: Update copyright date.
        * core-sol2.c: Include v9/sys/privregs.h directly to
        work around a bug in Sun's Solaris 8 header files.
        (fetch_core_registers): Use the above new configure macros to
        handle cross-debugging of 32-bit core files on a 64-bit host.
        * sol-thread.c (ps_pdmodel) New function.
        (rw_common): For debugging of 32-bit apps on a 64-bit host,
        truncate addresses to 32 bits.
        * solib.c (solib_extract_address): Functionize.  Make 32/64 aware.
        (LM_ADDR, LM_NEXT, LM_NAME): Ditto.
        (IGNORE_FIRST_LINK_MAP): Ditto.
        (first_link_map_member): Make 32/64 aware.
        (open_symbol_file_object): Ditto.
        (current_sos): Ditto.
@
text
@d242 2
a243 9
    [AC_TRY_RUN([#define _SYSCALL32
     #include <sys/link.h>
     int main()
     {
       if (sizeof (struct link_map32) > 0)
	 return 1;
       return 0;
     }],
     gdb_cv_have_struct_link_map32=no,
d245 1
a245 1
     gdb_cv_have_struct_link_map32=yes)])
@


1.42
log
@Adapt support for SSE registers in Linux/x86 for Linux 2.4.
* i386-linux-nat.c: Various doc fixes.  Include "i387-nat.h".
(GETFPXREGS_SUPPLIES): Renamed from GETXFPREGS_SUPPLIES.
(have_ptrace_getfpxregs): Renamed from have_ptrace_getxfpregs.
(convert_to_gregset): Removed.  Moved logic to ...
(fill_gregset): ... here.  Simplified function.
(fetch_regs): Use perror_with_name for error reporting.
(store_regs): Add `regno' parameter.  Use perror_with_name for
error reporting.  Call fill_gregset instead of convert_to_gregset.
(FPREG_ADDR): Remove.
(supply_fpregset): Implement by calling i387_supply_fsave.
(convert_to_fpregset): Remove.
(fill_fpregset): Implement by calling i387_fill_fsave.
(fetch_fpregs): Use perror_with_name fro error reporting.
(store_fpregs) Add `regno' parameter.  Use perror_with_name fro
error reporting.  Call fill_fpregset instead of
convert_to_fpregset.
(supply_xfpregset, convert_to_xfpregset): Removed.
(supply_fpxregset, fill_fpxregset): New functions.
(fetch_fpxregs): Renamed from fetch_xfpregs.  Use perror_with_name
for error reporting.  Call supply_fpxregset instead of
supply_xfpregset.
(store_xfpregs): Removed.
(store_fpxregs): New function.
(fetch_inferior_registers): Adjust for xfp -> fpx change.  Tweak
message in call to internal_error.
(store_inferior_registers): Adjust for xfp ->fpx change.  Pass
REGNO to store_regs, store_fpregs and store_fpxregs.
(fetch_core_registers): Adjust for xfp -> fpx change.
* acconfig.h (HAVE_PTRACE_GETFPXREGS): Renamed from
HAVE_PTRACE_GETXFPREGS.
* config.in: Regenerated.
* configure.in: Replace check for PTRACE_GETXFPREGS with check for
PTRACE_GETFPXREGS.  Remove comment about Cygnus SSE extensions.
* configure: Regenerated.
* config/i386/linux.mh (NATDEPFILES): Add i387-nat.o.
* config/i386/tm-linux.h: Base definition of HAVE_SSE_REGS on
HAVE_PTRACE_GETFPXREGS instead of HAVE_PTRACE_GETXFPREGS.
@
text
@d232 2
d236 21
@


1.41
log
@Thu Jul 27 17:38:35 2000  Andrew Cagney  <cagney@@b1.cygnus.com>

        * configure.in (targetfile): Ignore TM_FILE, don't just issue
        warning.
        (tm_h, xm_h, nm_h, GDB_TM_FILE, GDB_XM_FILE, GDB_NM_FILE): Define.
        * acconfig.h (GDB_XM_FILE, GDB_TM_FILE, GDB_NM_FILE): Add.
        * config/nm-empty.h: Delete.
        * defs.h (xm.h, nm.h, tm.h): Only include when GDB_XM_FILE,
        GDB_NM_FILE or GDB_TM_FILE defined.
        * Makefile.in (defs_h): Replace tm.h, xm.h and nm.h with tm_h,
        xm_h and nm_h macro that are defined by configure.
        (tm_h, xm_h, tm_h): New.
        * configure, config.in: Regenerate
        * TODO: Update.
@
text
@d2 1
a2 1
dnl Copyright 1995, 1996, 1997, 1998, 1999 Free Software Foundation, Inc.
d162 3
a164 9
dnl See if ptrace.h provides the PTRACE_GETXFPREGS request.
dnl PTRACE_GETXFPREGS is a Cygnus invention, since we wrote our own
dnl Linux kernel patch for SSE support.  That patch may or may not
dnl actually make it into the official distribution.  If you find that
dnl years have gone by since this configure test was added, and Linux
dnl isn't using PTRACE_GETXFPREGS, that means that our patch didn't
dnl make it, and you can delete this code.
AC_MSG_CHECKING(for PTRACE_GETXFPREGS)
AC_CACHE_VAL(gdb_cv_have_ptrace_getxfpregs,
d166 6
a171 6
		[PTRACE_GETXFPREGS;],
		[gdb_cv_have_ptrace_getxfpregs=yes],
		[gdb_cv_have_ptrace_getxfpregs=no])])
AC_MSG_RESULT($gdb_cv_have_ptrace_getxfpregs)
if test $gdb_cv_have_ptrace_getxfpregs = yes; then
  AC_DEFINE(HAVE_PTRACE_GETXFPREGS)
@


1.40
log
@Move GDB_MULTI_ARCH selection to configure*.  Makes tm.h optional.
@
text
@d1045 1
d1059 2
a1060 4
# (NAT_FILE) is not set in config/*/*.m[ht] files, we don't make the
# corresponding links.  But we have to remove the xm.h files and tm.h
# files anyway, e.g. when switching from "configure host" to
# "configure none".
d1064 1
d1066 1
d1068 5
a1072 2
files="${files} config/${gdb_host_cpu}/${hostfile}"
links="${links} xm.h"
d1074 2
d1077 1
d1079 5
a1083 2
files="${files} config/${gdb_target_cpu}/${targetfile}"
links="${links} tm.h"
d1085 2
d1088 1
d1090 5
a1094 6
files="${files} config/${gdb_host_cpu}/${nativefile}"
links="${links} nm.h"
else
# A cross-only configuration.
files="${files} config/nm-empty.h"
links="${links} nm.h"
d1096 2
@


1.39
log
@Set SER_HARDWIRET to ser-go32.c when *go32* or *djgpp*.
@
text
@d1006 4
d1022 27
@


1.38
log
@Check for <sys/poll.h>.
@
text
@d634 2
a635 1
  go32*-*-* ) SER_HARDWIRE=ser-go32.o ;;
@


1.37
log
@Set SER_HARDWIRE using autoconf instead of via XDEPFILES.  Include
ser-tcp.o by default.
@
text
@d126 2
a127 1
	curses.h ncurses.h)
@


1.36
log
@Trim targ_arches to just the first.
@
text
@d629 9
@


1.35
log
@2000-06-08  Fernando Nasser  <fnasser@@cygnus.com>

        * configure.in: Replace misplaced CONFIG_ADD by the correct
        CONFIG_CLEAN.
        * configure, config.in: Regenerate.
@
text
@d83 4
@


1.34
log
@Use config.bfd to determine the default architecture and byte order.
Flush all BYTE_ORDER_DEFAULT macros from mips. Can rely on BFD's value.
@
text
@d825 1
a825 1
	   CONFIG_CLEAN="${CONFIG_ALL} \$(SUBDIR_GDBTK_CLEAN)"
@


1.33
log
@2000-06-06  Michael Snyder  <msnyder@@seadog.cygnus.com>

	* configure.in: Enable autoconf to find curses.h on Solaris 2.8.
	* configure: Regenerate.
@
text
@d74 2
d78 11
@


1.32
log
@* acconfig.h, configure.in, i386bsd.c (HAVE_STRUCT_REG_R_FS):
Renamed from HAVE_R_FS.
(HAVE_STRUCT_REG_GS): Renamed from HAVE_R_GS.
* configure, config.in: Regenerated.
@
text
@d98 1
a98 1
case $host_os in solaris2.7) case "$GCC" in yes)
@


1.31
log
@* win32-nat.c: Fix up gcc warnings throughout.
(handle_load_dll): Change DLL name to lower case.
(handle_exception): Add a second argument indicating whether a breakpoint
should be ignored.  Return a 0 if the breakpoint was ignored.
(get_child_debug_event): Pass argument to handle_exception to control whether a
breakpoint should be ignored.
(child_create_inferior): Use modern cygwin API.  Explicitly clear last_sig.
Pass FIRST_EXCEPTION to get_child_debug_event for detection of first
breakpoint.

* configure.in: Eliminate unneeded WINDRES/DLLTOOL tests left over after last change.
* configure: Regenerate.
@
text
@d119 1
a119 1
AC_CACHE_CHECK([for r_fs in struct reg], gdb_cv_struct_r_fs,
d121 3
a123 3
gdb_cv_struct_r_fs=yes, gdb_cv_struct_r_fs=no)])
if test $gdb_cv_struct_r_fs = yes; then
  AC_DEFINE(HAVE_R_FS)
d125 1
a125 1
AC_CACHE_CHECK([for r_gs in struct reg], gdb_cv_struct_r_gs,
d127 3
a129 3
gdb_cv_struct_r_gs=yes, gdb_cv_struct_r_gs=no)])
if test $gdb_cv_struct_r_gs = yes; then
  AC_DEFINE(HAVE_R_GS)
@


1.30
log
@* configure.in: Detect correct versions of ranlib and windres when
cross-compiling.
* configure: Regenerate.
@
text
@a611 5
DLLTOOL=${DLLTOOL-dlltool}
WINDRES=${WINDRES-windres}
AC_SUBST(DLLTOOL)
AC_SUBST(WINDRES)

@


1.29
log
@Configure TUI to use <ncurses.h> when available.
@
text
@d81 2
@


1.28
log
@* acconfig.h (HAVE_R_FS, HAVE_R_GS): Add.
* configure.in: Add checks for r_fs and r_gs members of
`struct reg'.
* config.in, configure: Regenerated.
@
text
@d100 1
a100 1
AC_CHECK_HEADERS(ctype.h curses.h endian.h link.h thread_db.h proc_service.h \
d106 2
a107 1
	dirent.h sys/ndir.h sys/dir.h ndir.h)
@


1.27
log
@Replace <sys/dir.h> (and <dirent.h>) with "gdb_dirent.h".
@
text
@d114 15
@


1.26
log
@Have TUI use the same configury mechanism as MI.
@
text
@d105 2
a106 1
	time.h sys/ioctl.h sys/user.h)
@


1.25
log
@Add -Wuninitialized.
@
text
@d459 12
a470 8
    AC_DEFINE(TUI)
    BUILD_TUI=all-tui
    TUI_LIBRARY=tui/libtui.a
  ;;
  * )
    BUILD_TUI=
    TUI_LIBRARY=
  ;;
a471 2
AC_SUBST(BUILD_TUI)
AC_SUBST(TUI_LIBRARY)
d1019 1
a1019 1
AC_OUTPUT(Makefile tui/Makefile .gdbinit:gdbinit.in,
@


1.24
log
@IRIX GCC fixes from 5.0 branch.
@
text
@d488 1
a488 1
-Wformat -Wparentheses -Wpointer-arith"
@


1.23
log
@Minor maint et.al. tweeks.
@
text
@d105 1
a105 1
	time.h sys/ioctl.h)
@


1.22
log
@Check -W options before using them.
@
text
@d485 2
d489 6
a494 2
# Not yet: -Wall -Wpointer-arith -Wstrict-prototypes
# -Wmissing-prototypes -Wmissing-declarations
@


1.21
log
@2000-04-13  Mark Kettenis  <kettenis@@gnu.org>

	* acconfig.h (HAVE_PRGREGSET_T, HAVE_PRFPREGSET_T, HAVE_LWPID_T,
	HAVE_PSADDR_T): Add them here instead of in config.in.

	* acconfig.h (PRFPREGSET_T_BROKEN): New define.
	* configure.in: Add check for broken prfpregset_t type.
	* lin-thread.c (gdb_prfpregset): New typedef, depends on
	definition of PRFPREGSET_T_BROKEN.
	(ps_lgetfpregs, ps_lsetfpregs, p_td_thr_getfpregs,
	p_td_thr_setfpregs, thread_db_fetch_registers,
	thread_db_store_registers): Use gdb_prfpregset_t instead of
	prfpregset_t.
	* config.in: Regenerated.
	* configure: Regenerated.
@
text
@d501 1
a501 1
  echo "Setting warning flags = $build_warnings" 6>&1
d507 15
a521 8
  # Separate out the -Werror flag as some files just cannot be
  # compiled with it enabled.
  for w in ${build_warnings}; do
    case $w in
    -Werr*) WERROR_CFLAGS=-Werror ;;
    *) WARN_CFLAGS="${WARN_CFLAGS} $w"
    esac
  done
@


1.20
log
@Only re-generate copying.c when maintainer mode.
@
text
@d204 26
@


1.19
log
@Cleanup USE_INCLUDED_REGEX.  Move -D to acconfig.h.
@
text
@d25 1
@


1.18
log
@	* configure.in (NEW_PROC_API):  Escape square brackets when testing
	for solaris2.[678].
	* configure:  Regenerate.
@
text
@a519 2
REGEX="gnu-regex.o"
REGEX_CFLAGS="-DUSE_INCLUDED_REGEX"
d533 2
a534 3
  if test $gdb_cv_have_gnu_regex = yes; then
    REGEX=
    REGEX_CFLAGS=
d537 5
a542 1
AC_SUBST(REGEX_CFLAGS)
@


1.18.2.1
log
@Only try to re-generate copying.c when maintainer-mode is enabled.
@
text
@a24 1
AM_MAINTAINER_MODE
@


1.18.2.2
log
@2000-04-13  Mark Kettenis  <kettenis@@gnu.org>

	* acconfig.h (HAVE_PRGREGSET_T, HAVE_PRFPREGSET_T, HAVE_LWPID_T,
	HAVE_PSADDR_T): Add them here instead of in config.in.

	* acconfig.h (PRFPREGSET_T_BROKEN): New define.
	* configure.in: Add check for broken prfpregset_t type.
	* lin-thread.c (gdb_prfpregset): New typedef, depends on
	definition of PRFPREGSET_T_BROKEN.
	(ps_lgetfpregs, ps_lsetfpregs, p_td_thr_getfpregs,
	p_td_thr_setfpregs, thread_db_fetch_registers,
	thread_db_store_registers): Use gdb_prfpregset_t instead of
	prfpregset_t.
	* config.in: Regenerated.
	* configure: Regenerated.
@
text
@a203 26
  dnl Check for broken prfpregset_t type

  dnl For Linux/i386, glibc 2.1.3 was released with a bogus
  dnl prfpregset_t type (it's a typedef for the pointer to a struct
  dnl instead of the struct itself).  We detect this here, and work
  dnl around it in lin-thread.c.

  if test $bfd_cv_have_sys_procfs_type_prfpregset_t = yes; then
    AC_MSG_CHECKING(whether prfpregset_t type is broken)
    AC_CACHE_VAL(gdb_cv_prfpregset_t_broken,
      [AC_TRY_RUN([#include <sys/procfs.h>
       int main ()
       {
         if (sizeof (prfpregset_t) == sizeof (void *))
           return 1;
         return 0;
       }],
       gdb_cv_prfpregset_t_broken=no,
       gdb_cv_prfpregset_t_broken=yes,
       gdb_cv_prfpregset_t_broken=yes)])
    AC_MSG_RESULT($gdb_cv_prfpregset_t_broken)
    if test $gdb_cv_prfpregset_t_broken = yes; then
      AC_DEFINE(PRFPREGSET_T_BROKEN)
    fi
  fi

@


1.18.2.3
log
@By default, do not enable build warnings.
@
text
@d485 1
a485 1
default_build_warnings="-Wimplicit -Wreturn-type -Wcomment -Wtrigraphs \
a486 1
build_warnings=""
d495 1
a495 1
        build_warnings="${default_build_warnings} ${t}";;
d497 1
a497 1
        build_warnings="${t} ${default_build_warnings}";;
@


1.18.2.4
log
@Fix IRIX 6.5 compile problems (GCC only).
@
text
@d105 1
a105 1
	time.h sys/ioctl.h sys/user.h)
@


1.17
log
@When GCC always enable certain warnings.
Allow configure to set CFLAGS (-g -O2) when GCC.
@
text
@d187 1
a187 1
  *-*-solaris2.[678])
@


1.16
log
@	* configure.in (_MSE_INT_H): Define on Solaris 7.
	(NEW_PROC_API): Define on Solaris 7 and 8 as well as 6.
	* acconfig.h (_MSE_INT_H): Define on Solaris 7.
	* configure: Regenerate.
	* config.in: Regenerate.
@
text
@d457 5
d464 1
a464 4
[
# not yet: -Wall -Wpointer-arith -Wstrict-prototypes -Wmissing-prototypes -Wmissing-declarations
build_warnings="-Wimplicit -Wreturn-type -Wcomment -Wtrigraphs -Wformat -Wparentheses -Wpointer-arith"
case "${enableval}" in
d475 1
a475 1
fi
d488 1
a488 2
fi],[build_warnings=""])dnl

@


1.15
log
@2000-04-03  H.J. Lu  <hjl@@gnu.org>

	* gdb_regex.h: New. Include "regex.h" if USE_INCLUDED_REGEX
	is defined and <regex.h> otherwise.

        * irix5-nat.c: Include "gdb_regex.h" instead of "gnu-regex.h".
	* monitor.c: Likewise.
	* osfsolib.c: Likewise.
	* solib.c: Likewise.
	* source.c: Likewise.
	* symtab.c: Likewise.

	* Makefile.in (REGEX): Changed to @@REGEX@@.
	(REGEX_CFLAGS): New.
	(REGEX1): Removed.
	(ADD_DEPS): Use $(REGEX) instead of $(REGEX1).
	(INTERNAL_WARN_CFLAGS): Add $(REGEX_CFLAGS).

	* configure.in (--with-included-regex): New switch.
	(REGEX): New. Subsstitue @@REGEX@@ in Makefile.in.
	(REGEX_CFLAGS): New. Subsstitue @@REGEX_CFLAGS@@ in Makefile.in.
	* configure: Regenerated.
@
text
@d91 8
d187 1
a187 4
  # FIXME: we would like to define NEW_PROC_API for all versions of
  # Solaris from 2.6 on... but it isn't quite working yet.  Seems
  # to work on sparc 2.6, so let's try it out there.
  sparc-sun-solaris2.6)
@


1.14
log
@        * configure.in: -linux-gnu*, not -linux-gnu.

        * configure (gcc_version): When setting, narrow search to
        lines containing `version_string'.
@
text
@d506 30
@


1.13
log
@Don't include nrom in CONFIG_INITS.
@
text
@d813 1
a813 1
  *-*-linux* | *-pc-linux-gnu)
@


1.12
log
@From John David Anglin:
Don't initialize HPUX thread twice.
@
text
@a449 1
	CONFIG_INITS="${CONFIG_INITS} remote-nrom.c"
@


1.11
log
@2000-03-05  Mark Kettenis  <kettenis@@gnu.org>

	Allow GDB to run on Linux 2.0 again.
	* config.in: Add HAVE_PTRACE_GETREGS.
	* configure.in: Check if <sys/ptrace.h> defines PTRACE_GETREGS.
	* configure: Regenerated.
	* config/i386/nm-linux.h (CANNOT_FETCH_REGISTER,
	CANNOT_STORE_REGISTER): New defines.
	* i386-linux-nat.c (have_ptrace_getregs): New variable.
	(PTRACE_XFER_TYPE, CANNOT_FETCH_REGISTER, fetch_register,
	old_fetch_inferior_registers, CANNOT_STORE_REGISTER,
	store_register, old_store_inferior_registers): Copied over from
	`inptrace.c' as a temporary measure.
	(fetch_regs, store_regs, fetch_fpregs, store_fpregs):
	Conditionalize on HAVE_PTRACE_GETREGS.  Define stubs if
	HAVE_PTRACE_GETREGS isn't defined.
	(fetch_regs): Reset `have_ptrace_getregs' if ptrace call fails
	with EIO.
	(fetch_inferior_registers, store_inferior_registers): Fall back on
	the method use in `infptrace.c' (by calling
	old_fetch_inferior_registers and old_store_inferior_registers) if
	`have_ptrace_getregs' isn't set.
@
text
@a332 1
	    CONFIG_INITS="${CONFIG_INITS} hpux-thread.c"
@


1.10
log
@Move GDBtk's ``ln -s ... gdbtcl'' code out of configure.
Add CONFIG_CLEAN, CONFIG_ALL to configured targets.
Add all-gdbtk, clean-gdbtk.
@
text
@d104 12
@


1.9
log
@Only configure GDBtk when it is present.
@
text
@d46 2
d395 2
d708 2
d776 2
a922 10
# Make it possible to use the GUI without doing a full install
if test "${enable_gdbtk}" = "yes" ; then
  if test "$LN_S" = "ln -s" -a ! -f gdbtcl ; then
  echo linking $srcdir/gdbtk/library to gdbtcl
  $LN_S $srcdir/gdbtk/library gdbtcl
  else
  echo Warning: Unable to link $srcdir/gdbtk/library to gdbtcl.  You will need to do a
  echo "         " make install before you are able to run the GUI.
  fi
fi
@


1.8
log
@2000-02-26  Mark Kettenis  <kettenis@@gnu.org>

	Make cross-compilation for the Hurd more friendly.
	From Jeff Bailey <jbailey@@gnu.org>:
	* configure.in: Use AC_CHECK_TOOL to find MiG.
	* Makefile.in (MIG): New variable.
	* config/i386/i386gnu.mh (MIG): Remove.
	* configure: Regenerated.
@
text
@a578 2
ENABLE_GDBTK=

d604 5
a608 2
	enable_gdbtk=yes ;;
    esac
a680 1
	   ENABLE_GDBTK=1
a715 1
AC_SUBST(ENABLE_GDBTK)
@


1.7
log
@Only install GDBtk files when GDBtk is being built.
@
text
@d80 3
@


1.6
log
@* configure.in (SUBDIR_MI_CFLAGS): Fix typo, wrong brace.
@
text
@d46 2
d390 2
d701 2
d768 2
@


1.5
log
@Add mi/ and testsuite/gdb.mi/ subdirectories.
Add --enable-gdbmi option to configury.
Add mi rules to Makefile.in
Add mi conditional output to event-top.c infrun.c main.c top.c.
Add -i=mi option.
@
text
@d387 1
a387 1
      ENABLE_CFLAGS="${ENABLE_CFLAGS} \${SUBDIR_MI_CFLAGS)"
@


1.4
log
@2000-02-16  Fernando Nasser  <fnasser@@totem.to.cygnus.com>

	* configure.in: Replaces obsolete gdbtk-variable.c with
	gdbtk-varobj.c.
	* configure: Regenerate.
	* Makefile.in: Remove obsolete/extraneous references to
	gdbtk-var* files.
@
text
@d44 2
a45 1
CONFIG_INIT=
d367 24
a390 1
ENABLE_CFLAGS=
d433 3
a435 1
[build_warnings="-Wall -Wpointer-arith -Wstrict-prototypes -Wmissing-prototypes -Wmissing-declarations"
@


1.3
log
@2000-02-09  Mark Kettenis  <kettenis@@gnu.org>

	* configure.in: Check for lwpid_t, psaddr_t, prgregset_t and
	prfpregset_t in <sys/procfs.h>.
	* config.in: Add HAVE_LWPID_T, HAVE_PSADDR_T, HAVE_PRGREGSET_T,
	HAVE_PRFPREGSET_T.
	* gdb_proc_service.h: Only provide typedefs for lwpid_t, psaddr_t,
	prgregset_t and prfpregset_t if they are not already present.
@
text
@d668 3
a670 3
	   CONFIG_SRCS="${CONFIG_SRCS} gdbtk/generic/gdbtk.c gdbtk/generic/gdbtk-cmds.c gdbtk/generic/gdbtk-hooks.c gdbtk/generic/gdbtk-variable.c gdbtk/generic/gdbtk-wrapper.c"
	   CONFIG_OBS="${CONFIG_OBS} gdbtk.o gdbtk-cmds.o gdbtk-hooks.o gdbtk-variable.o gdbtk-wrapper.o"
	   CONFIG_INITS="${CONFIG_INITS} gdbtk/generic/gdbtk.c gdbtk/generic/gdbtk-cmds.c gdbtk/generic/gdbtk-hooks.c gdbtk/generic/gdbtk-variable.c gdbtk/generic/gdbtk-wrapper.c"
@


1.2
log
@2000-02-08  Elena Zannoni  <ezannoni@@kwikemart.cygnus.com>

	* configure.in: Remove the addition of sol-thread.c to the
	CONFIG_INITS list. This caused problems with init.c, because
	sol-thread.c would be grepped twice for _initialize_* functions.
	* configure: Ditto.
	* Makefile.in: Add FIXME for init.c.
@
text
@d173 4
@


1.1
log
@Initial revision
@
text
@d44 1
d48 13
d71 1
d83 1
a83 1
AC_CHECK_HEADERS(ctype.h curses.h endian.h link.h \
d85 1
a85 1
	string.h sys/procfs.h sys/ptrace.h sys/reg.h \
d87 2
a88 1
	wchar.h wctype.h asm/debugreg.h sys/debugreg.h)
d93 1
a93 1
AC_CHECK_FUNCS(setpgid sbrk sigaction isascii bzero bcopy btowc)
d96 22
d123 1
d148 1
a148 1
# Also detect which type of /proc is in use, such as for Unixware.
d156 9
a165 14
  AC_MSG_CHECKING(for directory proc entries)
# The [gdb_host != sun4sol2] hack is because Solaris does provide the
# multiple procfs files as of Solaris 2.6, but GDB can't use it right now.
  if test "$ac_cv_header_sys_procfs_h" = yes -a "$gdb_host" != sun4sol2 \
  -a -d /proc/$$ \
  -a -f /proc/$$/ctl \
  -a -f /proc/$$/as \
  -a -f /proc/$$/map \
  -a -f /proc/$$/status; then
    AC_MSG_RESULT(yes)
    AC_DEFINE(HAVE_MULTIPLE_PROC_FDS)
  else
    AC_MSG_RESULT(no)
  fi
d309 1
d400 1
d414 6
a419 2
esac],[build_warnings=""])dnl

d422 10
a431 4
   WARN_CFLAGS="${build_warnings}"
else
   WARN_CFLAGS=""
fi
d433 1
d455 13
d469 3
d488 1
d491 198
d692 34
d731 1
d840 7
d874 11
d909 1
@


1.1.1.1
log
@Initial creation of sourceware repository
@
text
@@


1.1.1.1.2.1
log
@1999-04-26  Jim Blandy  <jimb@@zwingli.cygnus.com>
        Fix from Dave Holcomb.
        * hpux-thread.c (init_hpux_thread_ops): Use the right function
        name when initializing hpux_thread_ops.to_thread_alive.
1999-04-13  Jason Molenda  (jsm@@bugshack.cygnus.com)
        * configure.in (HAVE_MULTIPLE_PROC_FDS): Don't define if we're
        on a Solaris host (of any architecture).
        * configure: Regenerated.
@
text
@a111 1
  gdb_cv_hostos_is_solaris=no
a116 2
  *-*-solaris*)
	gdb_cv_hostos_is_solaris=yes ;;
d121 1
a121 2
  if test "$ac_cv_header_sys_procfs_h" = yes -a \
          "$gdb_cv_hostos_is_solaris" = no \
@


1.1.1.2
log
@import gdb-19990422 snapshot
@
text
@a56 1
AC_PROG_AWK
d72 1
a72 1
	wchar.h wctype.h asm/debugreg.h sys/debugreg.h sys/select.h)
a111 1
  gdb_cv_hostos_is_solaris=no
a116 2
  *-*-solaris*)
	gdb_cv_hostos_is_solaris=yes ;;
d121 1
a121 2
  if test "$ac_cv_header_sys_procfs_h" = yes -a \
          "$gdb_cv_hostos_is_solaris" = no \
a407 13

# In the Cygwin environment, we need some additional flags.
AC_CACHE_CHECK([for cygwin], gdb_cv_os_cygwin,
[AC_EGREP_CPP(lose, [
#if defined (__CYGWIN__) || defined (__CYGWIN32__)
lose
#endif],[gdb_cv_os_cygwin=yes],[gdb_cv_os_cygwin=no])])

DLLTOOL=${DLLTOOL-dlltool}
WINDRES=${WINDRES-windres}
AC_SUBST(DLLTOOL)
AC_SUBST(WINDRES)

a427 2


a428 34

 
# Unlike the sim directory, whether a simulator is linked is controlled by 
# presence of a SIM= and a SIM_OBS= definition in the target '.mt' file.  
# This code just checks for a few cases where we'd like to ignore those
# definitions, even when they're present in the '.mt' file.  These cases
# are when --disable-sim is specified, or if the simulator directory is
# not part of the soruce tree.
#
AC_ARG_ENABLE(sim,
[  --enable-sim            Link gdb with simulator],
[echo "enable_sim = $enable_sim";
 echo "enableval = ${enableval}";
 case "${enableval}" in
  yes) ignore_sim=false ;;
  no)  ignore_sim=true ;;
  *)   ignore_sim=false ;;
 esac],
[ignore_sim=false])

if test ! -d "${srcdir}/../sim"; then
  ignore_sim=true
fi

if test "${ignore_sim}" = "true"; then
    IGNORE_SIM="SIM="
    IGNORE_SIM_OBS="SIM_OBS="
else
    IGNORE_SIM=""
    IGNORE_SIM_OBS=""
    AC_DEFINE(WITH_SIM)
fi
AC_SUBST(IGNORE_SIM)
AC_SUBST(IGNORE_SIM_OBS)
@


1.1.1.3
log
@import gdb-19990504 snapshot
@
text
@a85 1
BFD_NEED_DECLARATION(strstr)
a426 3
if test x$gdb_host = xgo32; then
  TERM_LIB=
else
a441 1
fi
@


1.1.1.4
log
@import gdb-1999-05-10
@
text
@d78 1
a78 1
AC_CHECK_FUNCS(setpgid sbrk sigaction isascii bzero bcopy btowc poll)
d450 1
a450 6
# libreadline needs libuser32.a in a cygwin environment
WIN32LIBS=
if test x$gdb_cv_os_cygwin = xyes; then
    WIN32LIBS="-luser32"
fi
AC_SUBST(WIN32LIBS)
@


1.1.1.5
log
@import gdb-1999-08-09 snapshot
@
text
@a46 13
AC_ARG_ENABLE(multi-ice,
[  --enable-multi-ice            Build the multi-ice-gdb-server],
[case "${enableval}" in
    yes ) enable_multi_ice="yes" ;;
    no)  enable_multi_ice="no" ;;
    *) AC_MSG_ERROR(Bad value for --enable-multi-ice: ${enableval}) ;;
  esac
])

if test "${enable_multi_ice}" = "yes"; then
  configdirs="${configdirs} multi-ice"
fi

d78 1
a78 2
AC_CHECK_FUNCS(setpgid sbrk sigaction isascii bzero bcopy btowc poll \
	socketpair)
a605 7

SUBDIRS="doc testsuite nlm"
if test "${enable_multi_ice}" = "yes"; then
  SUBDIRS="${SUBDIRS} multi-ice"
fi

AC_SUBST(SUBDIRS)
@


1.1.1.6
log
@import gdb-1999-08-16 snapshot
@
text
@d91 2
a92 1
AC_CHECK_FUNCS(setpgid sbrk sigaction isascii bzero bcopy btowc poll)
a93 4

AC_CHECK_LIB(socket, socketpair)
AC_CHECK_FUNCS(socketpair)

@


1.1.1.7
log
@import gdb-1999-08-30 snapshot
@
text
@d86 1
a86 2
	wchar.h wctype.h asm/debugreg.h sys/debugreg.h sys/select.h \
	time.h)
a402 2
WARN_CFLAGS=""
WERROR_CFLAGS=""
d405 3
a407 8
  # Separate out the -Werror flag as some files just cannot be
  # compiled with it enabled.
  for w in ${build_warnings}; do
    case $w in
    -Werr*) WERROR_CFLAGS=-Werror ;;
    *) WARN_CFLAGS="${WARN_CFLAGS} $w"
    esac
  done
a409 1
AC_SUBST(WERROR_CFLAGS)
@


1.1.1.8
log
@import gdb-1999-09-08 snapshot
@
text
@d402 2
a403 4
esac
if test x"$silent" != x"yes" && test x"$build_warnings" != x""; then
  echo "Setting warning flags = $build_warnings" 6>&1
fi
d416 1
a416 2
fi],[build_warnings=""])dnl

@


1.1.1.9
log
@import gdb-1999-10-04 snapshot
@
text
@d92 1
a92 1
AC_CHECK_FUNCS(setpgid sbrk sigaction isascii bzero bcopy btowc poll sigprocmask)
a693 1

@


1.1.1.10
log
@import gdb-1999-11-01 snapshot
@
text
@a94 18
dnl See if ptrace.h provides the PTRACE_GETXFPREGS request.
dnl PTRACE_GETXFPREGS is a Cygnus invention, since we wrote our own
dnl Linux kernel patch for SSE support.  That patch may or may not
dnl actually make it into the official distribution.  If you find that
dnl years have gone by since this configure test was added, and Linux
dnl isn't using PTRACE_GETXFPREGS, that means that our patch didn't
dnl make it, and you can delete this code.
AC_MSG_CHECKING(for PTRACE_GETXFPREGS)
AC_CACHE_VAL(gdb_cv_have_ptrace_getxfpregs,
[AC_TRY_COMPILE([#include <sys/ptrace.h>],
		[PTRACE_GETXFPREGS;],
		[gdb_cv_have_ptrace_getxfpregs=yes],
		[gdb_cv_have_ptrace_getxfpregs=no])])
AC_MSG_RESULT($gdb_cv_have_ptrace_getxfpregs)
if test $gdb_cv_have_ptrace_getxfpregs = yes; then
  AC_DEFINE(HAVE_PTRACE_GETXFPREGS)
fi

@


1.1.1.11
log
@import gdb-1999-12-06 snapshot
@
text
@d87 1
a87 1
	time.h sys/ioctl.h)
@


1.1.1.12
log
@import gdb-1999-12-21 snapshot
@
text
@d82 1
a82 1
AC_CHECK_HEADERS(ctype.h curses.h endian.h link.h thread_db.h proc_service.h \
d84 1
a84 1
	string.h sys/procfs.h sys/ptrace.h sys/reg.h stdint.h \
@


1.1.1.13
log
@import gdb-2000-01-05 snapshot
@
text
@d147 1
a147 1
# Also detect which type of /proc is in use, such as for Unixware or Solaris.
d150 1
d156 2
a157 9
  *-*-unixware* | *-*-sysv4.2uw2.* | *-*-sysv4.2uw7.*)
      AC_DEFINE(NEW_PROC_API)
      ;;
  # FIXME: we would like to define NEW_PROC_API for all versions of
  # Solaris from 2.6 on... but it isn't quite working yet.  Seems
  # to work on sparc 2.6, so let's try it out there.
  sparc-sun-solaris2.6)
      AC_DEFINE(NEW_PROC_API)
      ;;
d159 15
@


1.1.1.14
log
@import gdb-2000-01-10 snapshot
@
text
@d491 1
a491 1
    WIN32LIBS="-luser32 -limagehlp"
@


1.1.1.15
log
@import gdb-2000-01-17 snapshot
@
text
@d155 1
a155 1
  *-*-unixware* | *-*-sysv4.2* | *-*-sysv5*)
d491 1
a491 5
    WIN32LIBS="-luser32"
    case "${target}" in
	*cygwin*) WIN32LIBS="$WIN32LIBS -limagehlp"
	;;
    esac
@


1.1.1.16
log
@import gdb-2000-02-02 snapshot
@
text
@a499 36
AC_ARG_WITH(cpu,
[  --with-cpu=CPU          Set the default CPU variant to debug],
[case "${target}" in
  powerpc-* | powerpcle-* )
    ## It would be nice to keep this table in sync with the one in
    ## gcc/configure.
    case "${with_cpu}" in
      ppc-uisa | rs6000 | 403 | 403GC | 505 | 860 | 601 | 602 | 603 \
      | 604 | 750 )
        ## Those are all handled in variants in rs6000-tdep.c, so they're fine.
      ;;
      common | power | power2 | rios | rios1 | rios2 | rsc | rsc1 ) 
        ## These are all RS6000 variants, as far as GDB is concerned.
        with_cpu=rs6000
      ;;
      603e | ec603e )
        with_cpu=603
      ;;
      604e )
	with_cpu=604
      ;;
      * )
        AC_MSG_WARN(GDB: unknown --with-cpu value: \`${with_cpu}'; using \`ppc-uisa'.)
	with_cpu=ppc-uisa
      ;;
    esac
  ;;
  * )
    AC_MSG_WARN(GDB may ignore the --with-cpu flag for ${target} targets)
  ;;
esac
AC_DEFINE_UNQUOTED(TARGET_CPU_DEFAULT, "${with_cpu}")
],)



@


1.1.1.17
log
@import gdb-2000-02-04 snapshot
@
text
@a43 1
CONFIG_INIT=
a307 1
	    CONFIG_INITS="${CONFIG_INITS} hpux-thread.c"
a321 1
	 CONFIG_INITS="${CONFIG_INITS} sol-thread.c"
a397 1
	CONFIG_INITS="${CONFIG_INITS} remote-nrom.c"
a576 1
AC_SUBST(CONFIG_INITS)
@


1.1.1.18
log
@import insight-2000-02-04 snapshot (2nd try)
@
text
@a502 4
LIBGUI="../libgui/src/libgui.a"
GUI_CFLAGS_X="-I${srcdir}/../libgui/src"
AC_SUBST(LIBGUI)
AC_SUBST(GUI_CFLAGS_X)
a538 147
ENABLE_GDBTK=

AC_ARG_ENABLE(gdbtk,
[  --enable-gdbtk          Enable GDBTK GUI front end],
[case "${enableval}" in
    yes)
	case "$host" in
	*go32*)
	    AC_MSG_WARN([GDB does not support GDBtk on host ${host}.  GDBtk will be disabled.])
	    enable_gdbtk=no ;;
	*windows*)
	    AC_MSG_WARN([GDB does not support GDBtk on host ${host}.  GDBtk will be disabled.])
	    enable_gdbtk=no ;;
	*)
	    enable_gdbtk=yes ;;
	esac ;;
    no)
	enable_gdbtk=no  ;;
    *)
	AC_MSG_ERROR(bad value ${enableval} given for gdbtk option) ;;
esac],
[
# Default is on for everything but go32 and Cygwin
case "$host" in
    *go32* | *windows*)
	;;
    *)
	enable_gdbtk=yes ;;
    esac
])

WIN32LDAPP=
AC_SUBST(WIN32LIBS)
AC_SUBST(WIN32LDAPP)

configdir="unix"

GDBTKLIBS=
if test "${enable_gdbtk}" = "yes"; then

    CY_AC_PATH_TCLCONFIG
    if test -z "${no_tcl}"; then
	CY_AC_LOAD_TCLCONFIG
	CY_AC_PATH_TKCONFIG

	# If $no_tk is nonempty, then we can't do Tk, and there is no
	# point to doing Tcl.
	if test -z "${no_tk}"; then
	   CY_AC_LOAD_TKCONFIG
	   CY_AC_PATH_TCLH
	   CY_AC_PATH_TKH
	   CY_AC_PATH_ITCLH
	   CY_AC_PATH_ITKH
	   CY_AC_PATH_TIXH

	   # now look for Itcl library stuff

	   CY_AC_PATH_ITCLCONFIG
           if test -z "${no_itcl}"; then
             CY_AC_LOAD_ITCLCONFIG
	     case "${host}" in
	     *-*-cygwin*)
		itcldir=../itcl/itcl/win/
		;;
	     *)
		itcldir=../itcl/itcl/unix/
		;;
	     esac
 

	     ITCLLIB="${ITCL_BUILD_LIB_SPEC}"
	     ITCL_DEPS="${itcldir}${ITCL_LIB_FILE}"
           fi

	   
	   # now look for Itk library stuff
	   CY_AC_PATH_ITKCONFIG
           if test -z "${no_itcl}"; then
             CY_AC_LOAD_ITKCONFIG

	     case "${host}" in
	       *-*-cygwin*)
		 itkdir=../itcl/itk/win/
		 ;;
	       *)
		 itkdir=../itcl/itk/unix/
		 ;;
	       esac 

	     ITKLIB="${ITK_BUILD_LIB_SPEC}"
	     ITK_DEPS="${itkdir}${ITK_LIB_FILE}"
           fi

	   # now look for Tix library stuff
	   CY_AC_PATH_TIXCONFIG
           if test -z "${no_tix}"; then
             CY_AC_LOAD_TIXCONFIG
	     TIXLIB="${TIX_BUILD_LIB_SPEC}"
	     TIX_DEPS="${TIX_BUILD_LOCATION}/${TIX_LIB_FILE}"
           fi

	   ENABLE_GDBTK=1
           ENABLE_CFLAGS="$ENABLE_CFLAGS -DGDBTK"
	   # Tcl/Tk 8.1 require -fwritable strings.  I don't
           # know whether 8.2 will or not, but I bet it will.
           # I don't have to worry about 7.x since we don't support it.
           GDBTK_CFLAGS=""
	   if test "$GCC" = "yes"; then
               if test "$TCL_VERSION" != "8.0" ; then
                   GDBTK_CFLAGS="-fwritable-strings"
	       fi
           fi

	   # Include some libraries that Tcl and Tk want.
	   TCL_LIBS='$(LIBGUI) $(ITCL) $(ITK) $(TIX) $(TK) $(TCL) $(X11_LDFLAGS) $(X11_LIBS)'
	   CONFIG_DEPS='$(LIBGUI) $(ITCL_DEPS) $(ITK_DEPS) $(TIX_DEPS) $(TK_DEPS) $(TCL_DEPS)'
	   # Yes, the ordering seems wrong here.  But it isn't.
	   # TK_LIBS is the list of libraries that need to be linked
	   # after Tcl/Tk.  Note that this isn't put into LIBS.  If it
	   # were in LIBS then any link tests after this point would
	   # try to include things like `$(LIBGUI)', which wouldn't work.
	   GDBTKLIBS="${TCL_LIBS} ${TK_LIBS}"
	   CONFIG_SRCS="${CONFIG_SRCS} gdbtk/generic/gdbtk.c gdbtk/generic/gdbtk-cmds.c gdbtk/generic/gdbtk-hooks.c gdbtk/generic/gdbtk-variable.c gdbtk/generic/gdbtk-wrapper.c"
	   CONFIG_OBS="${CONFIG_OBS} gdbtk.o gdbtk-cmds.o gdbtk-hooks.o gdbtk-variable.o gdbtk-wrapper.o"
	   CONFIG_INITS="${CONFIG_INITS} gdbtk/generic/gdbtk.c gdbtk/generic/gdbtk-cmds.c gdbtk/generic/gdbtk-hooks.c gdbtk/generic/gdbtk-variable.c gdbtk/generic/gdbtk-wrapper.c"

	   if test x$gdb_cv_os_cygwin = xyes; then
	      WIN32LIBS="${WIN32LIBS} -lshell32 -lgdi32 -lcomdlg32 -ladvapi32"
	      WIN32LDAPP="-Wl,--subsystem,console"
	      CONFIG_OBS="${CONFIG_OBS} gdbres.o"
	   fi
	fi
    fi
fi

AC_SUBST(ENABLE_GDBTK)
AC_SUBST(X_CFLAGS)
AC_SUBST(X_LDFLAGS)
AC_SUBST(X_LIBS)
AC_SUBST(ITCLLIB)
AC_SUBST(ITCL_DEPS)
AC_SUBST(ITKLIB)
AC_SUBST(ITK_DEPS)
AC_SUBST(TIXLIB)
AC_SUBST(TIX_DEPS)
AC_SUBST(GDBTKLIBS)
AC_SUBST(GDBTK_CFLAGS)
a722 11
fi
AC_PROG_LN_S
# Make it possible to use the GUI without doing a full install
if test "${enable_gdbtk}" = "yes" ; then
  if test "$LN_S" = "ln -s" -a ! -f gdbtcl ; then
  echo linking $srcdir/gdbtk/library to gdbtcl
  $LN_S $srcdir/gdbtk/library gdbtcl
  else
  echo Warning: Unable to link $srcdir/gdbtk/library to gdbtcl.  You will need to do a
  echo "         " make install before you are able to run the GUI.
  fi
@


