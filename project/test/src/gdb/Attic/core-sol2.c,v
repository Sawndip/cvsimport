head	1.15;
access;
symbols
	drow-cplus-merge-20040113:1.13
	drow-cplus-merge-20031224:1.13
	drow-cplus-merge-20031220:1.13
	carlton_dictionary-20031215-merge:1.13
	drow-cplus-merge-20031214:1.13
	carlton-dictionary-20031111-merge:1.13
	gdb_6_0-2003-10-04-release:1.10
	kettenis_sparc-20030918-branch:1.12.0.2
	kettenis_sparc-20030918-branchpoint:1.12
	carlton_dictionary-20030917-merge:1.12
	ezannoni_pie-20030916-branchpoint:1.10
	ezannoni_pie-20030916-branch:1.10.0.38
	cagney_x86i386-20030821-branch:1.10.0.36
	cagney_x86i386-20030821-branchpoint:1.10
	carlton_dictionary-20030805-merge:1.10
	carlton_dictionary-20030627-merge:1.10
	gdb_6_0-branch:1.10.0.34
	gdb_6_0-2003-06-23-branchpoint:1.10
	jimb-ppc64-linux-20030613-branch:1.10.0.32
	jimb-ppc64-linux-20030613-branchpoint:1.10
	cagney_convert-20030606-branch:1.10.0.30
	cagney_convert-20030606-branchpoint:1.10
	cagney_writestrings-20030508-branch:1.10.0.28
	cagney_writestrings-20030508-branchpoint:1.10
	jimb-ppc64-linux-20030528-branch:1.10.0.26
	jimb-ppc64-linux-20030528-branchpoint:1.10
	carlton_dictionary-20030523-merge:1.10
	cagney_fileio-20030521-branch:1.10.0.24
	cagney_fileio-20030521-branchpoint:1.10
	kettenis_i386newframe-20030517-mergepoint:1.10
	jimb-ppc64-linux-20030509-branch:1.10.0.22
	jimb-ppc64-linux-20030509-branchpoint:1.10
	kettenis_i386newframe-20030504-mergepoint:1.10
	carlton_dictionary-20030430-merge:1.10
	kettenis_i386newframe-20030419-branch:1.10.0.20
	kettenis_i386newframe-20030419-branchpoint:1.10
	carlton_dictionary-20030416-merge:1.10
	cagney_frameaddr-20030409-mergepoint:1.10
	kettenis_i386newframe-20030406-branch:1.10.0.18
	kettenis_i386newframe-20030406-branchpoint:1.10
	cagney_frameaddr-20030403-branchpoint:1.10
	cagney_frameaddr-20030403-branch:1.10.0.16
	cagney_framebase-20030330-mergepoint:1.10
	cagney_framebase-20030326-branch:1.10.0.14
	cagney_framebase-20030326-branchpoint:1.10
	cagney_lazyid-20030317-branch:1.10.0.12
	cagney_lazyid-20030317-branchpoint:1.10
	kettenis-i386newframe-20030316-mergepoint:1.10
	offbyone-20030313-branch:1.10.0.10
	offbyone-20030313-branchpoint:1.10
	kettenis-i386newframe-20030308-branch:1.10.0.8
	kettenis-i386newframe-20030308-branchpoint:1.10
	carlton_dictionary-20030305-merge:1.10
	cagney_offbyone-20030303-branch:1.10.0.6
	cagney_offbyone-20030303-branchpoint:1.10
	carlton_dictionary-20030207-merge:1.10
	interps-20030203-mergepoint:1.10
	interps-20030202-branch:1.10.0.4
	interps-20030202-branchpoint:1.10
	cagney-unwind-20030108-branch:1.10.0.2
	cagney-unwind-20030108-branchpoint:1.10
	carlton_dictionary-20021223-merge:1.10
	gdb_5_3-2002-12-12-release:1.9
	carlton_dictionary-20021115-merge:1.10
	kseitz_interps-20021105-merge:1.9
	kseitz_interps-20021103-merge:1.9
	drow-cplus-merge-20021020:1.9
	drow-cplus-merge-20021025:1.9
	carlton_dictionary-20021025-merge:1.9
	carlton_dictionary-20021011-merge:1.9
	drow-cplus-branch:1.9.0.16
	drow-cplus-branchpoint:1.9
	kseitz_interps-20020930-merge:1.9
	carlton_dictionary-20020927-merge:1.9
	carlton_dictionary-branch:1.9.0.14
	carlton_dictionary-20020920-branchpoint:1.9
	gdb_5_3-branch:1.9.0.12
	gdb_5_3-2002-09-04-branchpoint:1.9
	kseitz_interps-20020829-merge:1.9
	cagney_sysregs-20020825-branch:1.9.0.10
	cagney_sysregs-20020825-branchpoint:1.9
	readline_4_3-import-branch:1.9.0.8
	readline_4_3-import-branchpoint:1.9
	gdb_5_2_1-2002-07-23-release:1.8
	kseitz_interps-20020528-branch:1.9.0.6
	kseitz_interps-20020528-branchpoint:1.9
	cagney_regbuf-20020515-branch:1.9.0.4
	cagney_regbuf-20020515-branchpoint:1.9
	jimb-macro-020506-branch:1.9.0.2
	jimb-macro-020506-branchpoint:1.9
	gdb_5_2-2002-04-29-release:1.8
	gdb_5_2-branch:1.8.0.10
	gdb_5_2-2002-03-03-branchpoint:1.8
	gdb_5_1_1-2002-01-24-release:1.8
	gdb_5_1_0_1-2002-01-03-release:1.8
	cygnus_cvs_20020108_pre:1.8
	gdb_5_1_0_1-2002-01-03-branchpoint:1.8
	gdb_5_1_0_1-2002-01-03-branch:1.8.0.8
	gdb_5_1-2001-11-21-release:1.8
	gdb_s390-2001-09-26-branch:1.8.0.6
	gdb_s390-2001-09-26-branchpoint:1.8
	gdb_5_1-2001-07-29-branch:1.8.0.4
	gdb_5_1-2001-07-29-branchpoint:1.8
	dberlin-typesystem-branch:1.8.0.2
	dberlin-typesystem-branchpoint:1.8
	gdb-post-ptid_t-2001-05-03:1.8
	gdb-pre-ptid_t-2001-05-03:1.8
	insight-precleanup-2001-01-01:1.6
	gdb-post-protoization-2000-07-29:1.4
	gdb-pre-protoization-2000-07-29:1.3
	gdb-premipsmulti-2000-06-06-branch:1.3.0.2
	gdb-premipsmulti-2000-06-06-branchpoint:1.3
	gdb-post-params-removal-2000-06-04:1.3
	gdb-pre-params-removal-2000-06-04:1.3
	gdb-post-params-removal-2000-05-28:1.3
	gdb-pre-params-removal-2000-05-28:1.2
	gdb_5_0-2000-05-19-release:1.1.1.3
	gdb_4_18_2-2000-05-18-release:1.1.1.3
	gdb_4_95_1-2000-05-11-snapshot:1.1.1.3
	gdb_4_95_0-2000-04-27-snapshot:1.1.1.3
	gdb_5_0-2000-04-10-branch:1.1.1.3.0.2
	gdb_5_0-2000-04-10-branchpoint:1.1.1.3
	repo-unification-2000-02-06:1.1.1.3
	insight-2000-02-04:1.1.1.3
	gdb-2000-02-04:1.1.1.3
	gdb-2000-02-02:1.1.1.3
	gdb-2000-02-01:1.1.1.3
	gdb-2000-01-31:1.1.1.3
	gdb-2000-01-26:1.1.1.3
	gdb-2000-01-24:1.1.1.3
	gdb-2000-01-17:1.1.1.3
	gdb-2000-01-10:1.1.1.3
	gdb-2000-01-05:1.1.1.3
	gdb-1999-12-21:1.1.1.3
	gdb-1999-12-13:1.1.1.3
	gdb-1999-12-07:1.1.1.3
	gdb-1999-12-06:1.1.1.3
	gdb-1999-11-16:1.1.1.3
	gdb-1999-11-08:1.1.1.3
	gdb-1999-11-01:1.1.1.3
	gdb-1999-10-25:1.1.1.3
	gdb-1999-10-18:1.1.1.3
	gdb-1999-10-11:1.1.1.3
	gdb-1999-10-04:1.1.1.3
	gdb-1999-09-28:1.1.1.2
	gdb-1999-09-21:1.1.1.2
	gdb-1999-09-13:1.1.1.2
	gdb-1999-09-08:1.1.1.2
	gdb-1999-08-30:1.1.1.2
	gdb-1999-08-23:1.1.1.2
	gdb-1999-08-16:1.1.1.2
	gdb-1999-08-09:1.1.1.2
	gdb-1999-08-02:1.1.1.2
	gdb-1999-07-26:1.1.1.2
	gdb-1999-07-19:1.1.1.2
	gdb-1999-07-12:1.1.1.2
	gdb-post-reformat-19990707:1.1.1.2
	gdb-1999-07-07-post-reformat-snapshot:1.1.1.2
	gdb-pre-reformat-19990707:1.1.1.1
	gdb-1999-07-07:1.1.1.1
	gdb-1999-07-05:1.1.1.1
	gdb-1999-06-28:1.1.1.1
	gdb-1999-06-21:1.1.1.1
	gdb-1999-06-14:1.1.1.1
	gdb-1999-06-07:1.1.1.1
	gdb-1999-06-01:1.1.1.1
	gdb-4_18-branch:1.1.1.1.0.2
	gdb-4_18-release:1.1.1.1
	gdb-1999-05-25:1.1.1.1
	gdb-1999-05-19:1.1.1.1
	gdb-1999-05-10:1.1.1.1
	gdb-19990504:1.1.1.1
	gdb-19990422:1.1.1.1
	SNAPSHOT:1.1.1
	gdb-4_18:1.1.1.1
	GDB_4_18:1.1.1;
locks; strict;
comment	@ * @;
expand	@o@;


1.15
date	2004.01.18.14.47.56;	author kettenis;	state dead;
branches;
next	1.14;

1.14
date	2004.01.17.17.08.36;	author cagney;	state Exp;
branches;
next	1.13;

1.13
date	2003.10.02.20.28.28;	author cagney;	state Exp;
branches;
next	1.12;

1.12
date	2003.09.17.15.42.17;	author cagney;	state Exp;
branches;
next	1.11;

1.11
date	2003.09.17.14.24.29;	author cagney;	state Exp;
branches;
next	1.10;

1.10
date	2002.11.14.20.37.28;	author cagney;	state Exp;
branches;
next	1.9;

1.9
date	2002.04.11.18.32.51;	author msnyder;	state Exp;
branches
	1.9.14.1
	1.9.16.1;
next	1.8;

1.8
date	2001.03.06.08.21.06;	author kevinb;	state Exp;
branches;
next	1.7;

1.7
date	2001.03.01.01.39.20;	author cagney;	state Exp;
branches;
next	1.6;

1.6
date	2000.08.30.00.58.58;	author msnyder;	state Exp;
branches;
next	1.5;

1.5
date	2000.08.10.00.58.09;	author kevinb;	state Exp;
branches;
next	1.4;

1.4
date	2000.07.30.01.48.25;	author kevinb;	state Exp;
branches;
next	1.3;

1.3
date	2000.05.28.01.12.26;	author kevinb;	state Exp;
branches;
next	1.2;

1.2
date	2000.05.26.23.22.40;	author msnyder;	state Exp;
branches;
next	1.1;

1.1
date	99.04.16.01.33.59;	author shebs;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.04.16.01.33.59;	author shebs;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	99.07.07.20.05.16;	author jsm;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	99.10.05.23.08.07;	author jsm;	state Exp;
branches;
next	;

1.9.14.1
date	2002.11.15.19.18.41;	author carlton;	state Exp;
branches;
next	1.9.14.2;

1.9.14.2
date	2003.09.17.21.28.13;	author carlton;	state Exp;
branches;
next	1.9.14.3;

1.9.14.3
date	2003.11.11.23.50.39;	author carlton;	state Exp;
branches;
next	1.9.14.4;

1.9.14.4
date	2004.01.26.19.11.22;	author carlton;	state dead;
branches;
next	;

1.9.16.1
date	2003.12.14.20.27.10;	author drow;	state Exp;
branches;
next	1.9.16.2;

1.9.16.2
date	2004.02.09.19.43.35;	author drow;	state dead;
branches;
next	;


desc
@@


1.15
log
@* Makefile.in (ALLDEPFILES): Remove core-sol2.c.
(core-sol2.o): Remove dependency.
* core-sol2.c: Remove file.
@
text
@/* Machine independent support for Solaris 2 core files for GDB.
   Copyright 1994, 1995, 1996, 1998, 1999, 2000, 2001
   Free Software Foundation, Inc.

   This file is part of GDB.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place - Suite 330,
   Boston, MA 02111-1307, USA.  */


/* Solaris comes with two flavours of core files, cores generated by
   an ELF executable and cores generated by programs that were
   run under BCP (the part of Solaris which allows it to run SunOS4
   a.out files).
   This file combines the core register fetching from core-regset.c
   and sparc-nat.c to be able to read both flavours.  */

#include "defs.h"

#if defined (__sparcv9)
/* Fails to get included by the Solaris system header files.  */
# include <v9/sys/privregs.h>
#endif

#include <time.h>
#include <sys/types.h>
#include <sys/regset.h>
#include <sys/procfs.h>
#include <fcntl.h>
#include <errno.h>
#include "gdb_string.h"
#include "regcache.h"

#include "inferior.h"
#include "target.h"
#include "command.h"
#include "gdbcore.h"

/* Prototypes for supply_gregset etc. */
#include "gregset.h"

static void fetch_core_registers (char *, unsigned, int, CORE_ADDR);

/* Fetch registers from core file data pointed to by CORE_REG_SECT.  When
   WHICH is 0, the the general register set is fetched; when WHICH is
   2, the floating point registers are fetched.  CORE_REG_SIZE is used
   to validate the size of the data pointed to by CORE_REG_SECT.  REG_ADDR
   is unused. */

static void
fetch_core_registers (char *core_reg_sect, unsigned core_reg_size, int which,
		      CORE_ADDR reg_addr)
{
  int i;

  if (which == 0)
    {
      prgregset_t prgregset;

      if (core_reg_size == sizeof (prgregset_t))
	{
	  memcpy ((char *) &prgregset, core_reg_sect, sizeof (prgregset));
	  supply_gregset (&prgregset);
	}
#if defined (HAVE_PRGREGSET32_T)
      /* 32-bit corefile, 64-bit debugger.  */
      else if (core_reg_size == sizeof (prgregset32_t))
	{
	  prgreg32_t *core_gregs;

	  /* Can't use memcpy here, because the core file contains
	     32-bit regs; supply_register expects 64-bit regs.  */
	  core_gregs = (prgreg32_t *) core_reg_sect;
	  for (i = 0; i < NPRGREG; i++)
	    prgregset[i] = core_gregs[i];

	  supply_gregset (&prgregset);
	}
#endif /* HAVE_PRGREGSET32_T */
      else if (core_reg_size == sizeof (struct regs))
	{
	  struct regs *gregs = (struct regs *) core_reg_sect;

	  /* G0 *always* holds 0.  */
	  *(int *) &deprecated_registers[DEPRECATED_REGISTER_BYTE (0)] = 0;

	  /* The globals and output registers.  */
	  memcpy (&deprecated_registers[DEPRECATED_REGISTER_BYTE (G1_REGNUM)],
		  &gregs->r_g1, 15 * DEPRECATED_REGISTER_RAW_SIZE (G1_REGNUM));
	  *(int *) &deprecated_registers[DEPRECATED_REGISTER_BYTE (PS_REGNUM)]
	    = gregs->r_ps;
	  *(int *) &deprecated_registers[DEPRECATED_REGISTER_BYTE (PC_REGNUM)]
	    = gregs->r_pc;
	  *(int *) &deprecated_registers[DEPRECATED_REGISTER_BYTE (gdbarch_tdep (current_gdbarch)->npc_regnum)]
	    = gregs->r_npc;
	  *(int *) &deprecated_registers[DEPRECATED_REGISTER_BYTE (Y_REGNUM)]
	    = gregs->r_y;

	  /* My best guess at where to get the locals and input
	     registers is exactly where they usually are, right above
	     the stack pointer.  If the core dump was caused by a bus error
	     from blowing away the stack pointer (as is possible) then this
	     won't work, but it's worth the try. */
	  {
	    int sp;

	    sp = *(int *) &deprecated_registers[DEPRECATED_REGISTER_BYTE (SP_REGNUM)];
	    if (0 != target_read_memory (sp,
					 &deprecated_registers[DEPRECATED_REGISTER_BYTE (L0_REGNUM)],
					 16 * DEPRECATED_REGISTER_RAW_SIZE (L0_REGNUM)))
	      {
		warning ("couldn't read input and local registers from core file\n");
	      }
	  }
	}
      else
	{
	  warning ("wrong size gregset struct in core file");
	}
    }
  else if (which == 2)
    {
      prfpregset_t prfpregset;

      if (core_reg_size == sizeof (prfpregset_t))
	{
	  memcpy ((char *) &prfpregset, core_reg_sect, sizeof (prfpregset));
	  supply_fpregset (&prfpregset);
	}
#if defined (HAVE_PRFPREGSET32_T)
      /* 32-bit corefile, 64-bit debugger.  */
      else if (core_reg_size == sizeof (prfpregset32_t))
	{
	  prfpregset32_t *core_fpregset;

	  /* Can't use memcpy here, because the core file contains
	     32-bit regs; supply_fpregset expects 64-bit regs.  */

	  core_fpregset = (prfpregset32_t *) core_reg_sect;
	  for (i = 0; i < 16; i++)
	    prfpregset.pr_fr.pr_dregs[i] = core_fpregset->pr_fr.pr_dregs[i];
	  while (i < 32)
	    prfpregset.pr_fr.pr_dregs[i++] = 0;

	  prfpregset.pr_fsr         = core_fpregset->pr_fsr;
	  prfpregset.pr_qcnt        = core_fpregset->pr_qcnt;
	  prfpregset.pr_q_entrysize = core_fpregset->pr_q_entrysize;
	  prfpregset.pr_en          = core_fpregset->pr_en;
	  /* We will not use the pr_q array.  */

	  supply_fpregset (&prfpregset);
	}
#endif /* HAVE_PRFPREGSET32_T */
      else if (core_reg_size >= sizeof (struct fpu))
	{
	  struct fpu *fpuregs = (struct fpu *) core_reg_sect;

	  memcpy (&deprecated_registers[DEPRECATED_REGISTER_BYTE (FP0_REGNUM)],
		  &fpuregs->fpu_fr, sizeof (fpuregs->fpu_fr));
	  memcpy (&deprecated_registers[DEPRECATED_REGISTER_BYTE (FPS_REGNUM)],
		  &fpuregs->fpu_fsr, sizeof (FPU_FSR_TYPE));
	}
      else
	{
	  warning ("wrong size fpregset struct in core file");
	}
    }
}


/* Register that we are able to handle solaris core file formats. */

static struct core_fns solaris_core_fns =
{
  bfd_target_elf_flavour,		/* core_flavour */
  default_check_format,			/* check_format */
  default_core_sniffer,			/* core_sniffer */
  fetch_core_registers,			/* core_read_registers */
  NULL					/* next */
};

void
_initialize_core_solaris (void)
{
  add_core_fns (&solaris_core_fns);
}
@


1.14
log
@2004-01-17  Andrew Cagney  <cagney@@redhat.com>

	* core-sol2.c (fetch_core_registers): Replace
	DEPRECATED_NPC_REGNUM with equivalent tdep value.
@
text
@@


1.13
log
@2003-10-02  Andrew Cagney  <cagney@@redhat.com>

	* gdbarch.sh (DEPRECATED_REGISTER_RAW_SIZE): Rename
	REGISTER_RAW_SIZE.
	* gdbarch.h, gdbarch.c: Re-generate.
	* aix-thread.c, alpha-tdep.h, arm-tdep.c, core-sol2.c: Update.
	* cris-tdep.c, dve3900-rom.c, findvar.c, frame.c: Update.
	* hppa-tdep.c, hppab-nat.c, hppah-nat.c, hppam3-nat.c: Update.
	* hpux-thread.c, i386gnu-nat.c, ia64-aix-nat.c: Update.
	* ia64-linux-nat.c, ia64-tdep.c, infcmd.c, infptrace.c: Update.
	* infrun.c, irix5-nat.c, lynx-nat.c, mips-linux-tdep.c: Update.
	* mips-nat.c, mips-tdep.c, mipsv4-nat.c, mn10300-tdep.c: Update.
	* monitor.c, ns32k-tdep.c, ppc-linux-nat.c, regcache.c: Update.
	* remote-e7000.c, remote-mips.c, remote-sim.c: Update.
	* remote-vxmips.c, remote-vxsparc.c, remote.c: Update.
	* rom68k-rom.c, rs6000-nat.c, rs6000-tdep.c, s390-tdep.c: Update.
	* sh64-tdep.c, sparc-nat.c, sparc-tdep.c, stack.c: Update.
	* target.c, tracepoint.c, v850-tdep.c, v850ice.c, valops.c: Update.
	* vax-tdep.c, vax-tdep.h, x86-64-tdep.c, xstormy16-tdep.c: Update.
	* config/m68k/tm-delta68.h, config/m68k/tm-vx68.h: Update.
	* config/sparc/tm-sparc.h, config/sparc/tm-sparclynx.h: Update.

2003-10-02  Andrew Cagney  <cagney@@redhat.com>

	* gdbint.texinfo (Target Architecture Definition): Rename
	REGISTER_RAW_SIZE to DEPRECATED_REGISTER_RAW_SIZE.
	* gdb.texinfo (Packets, Stop Reply Packets): Ditto.
	* gdbint.texinfo (Target Architecture Definition): Rename

2003-10-02  Andrew Cagney  <cagney@@redhat.com>

	* mi-main.c: Rename REGISTER_RAW_SIZE to
	DEPRECATED_REGISTER_RAW_SIZE.
@
text
@d106 1
a106 1
	  *(int *) &deprecated_registers[DEPRECATED_REGISTER_BYTE (DEPRECATED_NPC_REGNUM)]
@


1.12
log
@2003-09-17  Andrew Cagney  <cagney@@redhat.com>

	* gdbarch.sh (DEPRECATED_NPC_REGNUM): Deprecate NPC_REGNUM.
	* gdbarch.h, gdbarch.c: Regenerate.
	* core-sol2.c, hppa-tdep.c, lynx-nat.c, procfs.c: Update.
	* regcache.c, remote-vxsparc.c, sparc-linux-nat.c: Update.
	* sparc-nat.c, sparc-tdep.c, sparc64-tdep.c: Update.
	* sparcnbsd-tdep.c: Update.
@
text
@d101 1
a101 1
		  &gregs->r_g1, 15 * REGISTER_RAW_SIZE (G1_REGNUM));
d122 1
a122 1
					 16 * REGISTER_RAW_SIZE (L0_REGNUM)))
@


1.11
log
@2003-09-17  Andrew Cagney  <cagney@@redhat.com>

	* gdbarch.sh (DEPRECATED_REGISTER_BYTE): Rename REGISTER_BYTE.
	* gdbarch.h, gdbarch.c: Regenerate.
	* arm-linux-tdep.c, core-sol2.c, cris-tdep.c: Update.
	* d10v-tdep.c, frame.c: Update.
	* hppa-tdep.c, hppab-nat.c, hppah-nat.c, hppam3-nat.c: Update.
	* hpux-thread.c, i386gnu-nat.c, ia64-aix-nat.c: Update.
	* ia64-linux-nat.c, irix5-nat.c, lynx-nat.c, m68knbsd-nat.c: Update.
	* mcore-tdep.c, mips-linux-tdep.c, mips-tdep.c: Update.
	* mipsv4-nat.c, mn10300-tdep.c, ns32k-tdep.c: Update.
	* ns32knbsd-nat.c, ppc-bdm.c, regcache.c, remote-sds.c: Update.
	* remote-vx68.c, remote-vxmips.c, remote-vxsparc.c: Update.
	* remote.c, rs6000-tdep.c, s390-tdep.c, sh64-tdep.c: Update.
	* sparc-nat.c, sparc-tdep.c, sun3-nat.c, v850-tdep.c: Update.
	* v850ice.c, vax-tdep.c, xstormy16-tdep.c: Update.
	* config/m68k/tm-cisco.h, config/m68k/tm-delta68.h: Update.
	* config/pa/nm-hppah.h: Update.

2003-09-17  Andrew Cagney  <cagney@@redhat.com>

	* mi/mi-main.c: Rename REGISTER_BYTE to DEPRECATED_REGISTER_BYTE.
@
text
@d106 1
a106 1
	  *(int *) &deprecated_registers[DEPRECATED_REGISTER_BYTE (NPC_REGNUM)]
@


1.10
log
@2002-11-14  Andrew Cagney  <ac131313@@redhat.com>

	* regcache.h (deprecated_registers): Rename registers.
	* a68v-nat.c, alpha-nat.c, arch-utils.c, core-sol2.c: Update.
	* hp300ux-nat.c, hppab-nat.c, hppah-nat.c: Update.
	* hppam3-nat.c, hpux-thread.c, i386gnu-nat.c: Update.
	* ia64-aix-nat.c, ia64-linux-nat.c, ia64-tdep.c: Update.
	* irix4-nat.c, irix5-nat.c, lynx-nat.c, m68k-tdep.c: Update.
	* m68knbsd-nat.c, mips-linux-tdep.c, mipsm3-nat.c: Update.
	* mipsv4-nat.c, ns32knbsd-nat.c, ppc-bdm.c: Update.
	* ppc-sysv-tdep.c, ptx4-nat.c, regcache.c, remote-es.c: Update.
	* remote-sds.c, remote-vx68.c, remote-vxmips.c: Update.
	* remote-vxsparc.c, rs6000-tdep.c, sol-thread.c: Update.
	* sparc-nat.c, sparc-tdep.c, sun3-nat.c, symm-nat.c: Update.
	* v850ice.c: Update.
@
text
@d97 1
a97 1
	  *(int *) &deprecated_registers[REGISTER_BYTE (0)] = 0;
d100 1
a100 1
	  memcpy (&deprecated_registers[REGISTER_BYTE (G1_REGNUM)],
d102 1
a102 1
	  *(int *) &deprecated_registers[REGISTER_BYTE (PS_REGNUM)]
d104 1
a104 1
	  *(int *) &deprecated_registers[REGISTER_BYTE (PC_REGNUM)]
d106 1
a106 1
	  *(int *) &deprecated_registers[REGISTER_BYTE (NPC_REGNUM)]
d108 1
a108 1
	  *(int *) &deprecated_registers[REGISTER_BYTE (Y_REGNUM)]
d119 1
a119 1
	    sp = *(int *) &deprecated_registers[REGISTER_BYTE (SP_REGNUM)];
d121 1
a121 1
					 &deprecated_registers[REGISTER_BYTE (L0_REGNUM)],
d170 1
a170 1
	  memcpy (&deprecated_registers[REGISTER_BYTE (FP0_REGNUM)],
d172 1
a172 1
	  memcpy (&deprecated_registers[REGISTER_BYTE (FPS_REGNUM)],
@


1.9
log
@2002-04-11  Michael Snyder  <msnyder@@redhat.com>

	* configure.in: Autoconfiscate _SYSCALL32 define for solaris.
	* configure: Regenerate.
	* config.in: Regenerate.
	* acconfig.h: Add define for _SYSCALL32.
	* core-sol2.c: Remove #define _SYSCALL32.
	* solib-legacy.c: Remove #define _SYSCALL32.
@
text
@d97 1
a97 1
	  *(int *) &registers[REGISTER_BYTE (0)] = 0;
d100 10
a109 6
	  memcpy (&registers[REGISTER_BYTE (G1_REGNUM)], &gregs->r_g1,
		  15 * REGISTER_RAW_SIZE (G1_REGNUM));
	  *(int *) &registers[REGISTER_BYTE (PS_REGNUM)] = gregs->r_ps;
	  *(int *) &registers[REGISTER_BYTE (PC_REGNUM)] = gregs->r_pc;
	  *(int *) &registers[REGISTER_BYTE (NPC_REGNUM)] = gregs->r_npc;
	  *(int *) &registers[REGISTER_BYTE (Y_REGNUM)] = gregs->r_y;
d119 1
a119 1
	    sp = *(int *) &registers[REGISTER_BYTE (SP_REGNUM)];
d121 1
a121 1
				      &registers[REGISTER_BYTE (L0_REGNUM)],
d170 4
a173 4
	  memcpy (&registers[REGISTER_BYTE (FP0_REGNUM)], &fpuregs->fpu_fr,
		  sizeof (fpuregs->fpu_fr));
	  memcpy (&registers[REGISTER_BYTE (FPS_REGNUM)], &fpuregs->fpu_fsr,
		  sizeof (FPU_FSR_TYPE));
@


1.9.16.1
log
@Merge drow-cplus-branch to:
  cvs rtag -D 2003-12-14 00:00:00 UTC drow-cplus-merge-20031214 gdb+dejagnu
@
text
@d97 1
a97 1
	  *(int *) &deprecated_registers[DEPRECATED_REGISTER_BYTE (0)] = 0;
d100 6
a105 10
	  memcpy (&deprecated_registers[DEPRECATED_REGISTER_BYTE (G1_REGNUM)],
		  &gregs->r_g1, 15 * DEPRECATED_REGISTER_RAW_SIZE (G1_REGNUM));
	  *(int *) &deprecated_registers[DEPRECATED_REGISTER_BYTE (PS_REGNUM)]
	    = gregs->r_ps;
	  *(int *) &deprecated_registers[DEPRECATED_REGISTER_BYTE (PC_REGNUM)]
	    = gregs->r_pc;
	  *(int *) &deprecated_registers[DEPRECATED_REGISTER_BYTE (DEPRECATED_NPC_REGNUM)]
	    = gregs->r_npc;
	  *(int *) &deprecated_registers[DEPRECATED_REGISTER_BYTE (Y_REGNUM)]
	    = gregs->r_y;
d115 1
a115 1
	    sp = *(int *) &deprecated_registers[DEPRECATED_REGISTER_BYTE (SP_REGNUM)];
d117 2
a118 2
					 &deprecated_registers[DEPRECATED_REGISTER_BYTE (L0_REGNUM)],
					 16 * DEPRECATED_REGISTER_RAW_SIZE (L0_REGNUM)))
d166 4
a169 4
	  memcpy (&deprecated_registers[DEPRECATED_REGISTER_BYTE (FP0_REGNUM)],
		  &fpuregs->fpu_fr, sizeof (fpuregs->fpu_fr));
	  memcpy (&deprecated_registers[DEPRECATED_REGISTER_BYTE (FPS_REGNUM)],
		  &fpuregs->fpu_fsr, sizeof (FPU_FSR_TYPE));
@


1.9.16.2
log
@Merge drow-cplus-merge-20040208 to drow-cplus-branch.
@
text
@@


1.9.14.1
log
@2002-11-15  David Carlton  <carlton@@math.stanford.edu>

	* Merge from mainline; tag is carlton_dictionary-20021115-merge.
@
text
@d97 1
a97 1
	  *(int *) &deprecated_registers[REGISTER_BYTE (0)] = 0;
d100 6
a105 10
	  memcpy (&deprecated_registers[REGISTER_BYTE (G1_REGNUM)],
		  &gregs->r_g1, 15 * REGISTER_RAW_SIZE (G1_REGNUM));
	  *(int *) &deprecated_registers[REGISTER_BYTE (PS_REGNUM)]
	    = gregs->r_ps;
	  *(int *) &deprecated_registers[REGISTER_BYTE (PC_REGNUM)]
	    = gregs->r_pc;
	  *(int *) &deprecated_registers[REGISTER_BYTE (NPC_REGNUM)]
	    = gregs->r_npc;
	  *(int *) &deprecated_registers[REGISTER_BYTE (Y_REGNUM)]
	    = gregs->r_y;
d115 1
a115 1
	    sp = *(int *) &deprecated_registers[REGISTER_BYTE (SP_REGNUM)];
d117 1
a117 1
					 &deprecated_registers[REGISTER_BYTE (L0_REGNUM)],
d166 4
a169 4
	  memcpy (&deprecated_registers[REGISTER_BYTE (FP0_REGNUM)],
		  &fpuregs->fpu_fr, sizeof (fpuregs->fpu_fr));
	  memcpy (&deprecated_registers[REGISTER_BYTE (FPS_REGNUM)],
		  &fpuregs->fpu_fsr, sizeof (FPU_FSR_TYPE));
@


1.9.14.2
log
@2003-09-17  David Carlton  <carlton@@kealia.com>

	* Merge with mainline; tag is carlton_dictionary-20030917-merge.
@
text
@d97 1
a97 1
	  *(int *) &deprecated_registers[DEPRECATED_REGISTER_BYTE (0)] = 0;
d100 1
a100 1
	  memcpy (&deprecated_registers[DEPRECATED_REGISTER_BYTE (G1_REGNUM)],
d102 1
a102 1
	  *(int *) &deprecated_registers[DEPRECATED_REGISTER_BYTE (PS_REGNUM)]
d104 1
a104 1
	  *(int *) &deprecated_registers[DEPRECATED_REGISTER_BYTE (PC_REGNUM)]
d106 1
a106 1
	  *(int *) &deprecated_registers[DEPRECATED_REGISTER_BYTE (DEPRECATED_NPC_REGNUM)]
d108 1
a108 1
	  *(int *) &deprecated_registers[DEPRECATED_REGISTER_BYTE (Y_REGNUM)]
d119 1
a119 1
	    sp = *(int *) &deprecated_registers[DEPRECATED_REGISTER_BYTE (SP_REGNUM)];
d121 1
a121 1
					 &deprecated_registers[DEPRECATED_REGISTER_BYTE (L0_REGNUM)],
d170 1
a170 1
	  memcpy (&deprecated_registers[DEPRECATED_REGISTER_BYTE (FP0_REGNUM)],
d172 1
a172 1
	  memcpy (&deprecated_registers[DEPRECATED_REGISTER_BYTE (FPS_REGNUM)],
@


1.9.14.3
log
@2003-11-11  David Carlton  <carlton@@kealia.com>

	* Merge with mainline; tag is carlton-dictionary-20031111-merge.
@
text
@d101 1
a101 1
		  &gregs->r_g1, 15 * DEPRECATED_REGISTER_RAW_SIZE (G1_REGNUM));
d122 1
a122 1
					 16 * DEPRECATED_REGISTER_RAW_SIZE (L0_REGNUM)))
@


1.9.14.4
log
@2004-01-26  David Carlton  <carlton@@kealia.com>

	* Merge with mainline; tag is carlton_dictionary-20040126-merge.
@
text
@@


1.8
log
@Update/correct copyright notices.
@
text
@a29 2
/* for Sparc64 cross Sparc32 */
#define _SYSCALL32
@


1.7
log
@Create new file regcache.h.  Update all uses.
@
text
@d2 2
a3 1
   Copyright 1994, 2000, 2001 Free Software Foundation, Inc.
@


1.6
log
@2000-08-29  Michael Snyder  <msnyder@@seadog.cygnus.com>

        * valops.c (value_cast): Indentation fix-up.
        * acconfig.h (HAVE_PRGREGSET32_T, HAVE_PRFPREGSET32_T,
        HAVE_STRUCT_LINK_MAP32): New configure macros.
        * config.in: Ditto.
        * configure.in: Test for the above new macros.
        * breakpoint.c: Update copyright date.
        * core-sol2.c: Include v9/sys/privregs.h directly to
        work around a bug in Sun's Solaris 8 header files.
        (fetch_core_registers): Use the above new configure macros to
        handle cross-debugging of 32-bit core files on a 64-bit host.
        * sol-thread.c (ps_pdmodel) New function.
        (rw_common): For debugging of 32-bit apps on a 64-bit host,
        truncate addresses to 32 bits.
        * solib.c (solib_extract_address): Functionize.  Make 32/64 aware.
        (LM_ADDR, LM_NEXT, LM_NAME): Ditto.
        (IGNORE_FIRST_LINK_MAP): Ditto.
        (first_link_map_member): Make 32/64 aware.
        (open_symbol_file_object): Ditto.
        (current_sos): Ditto.
@
text
@d2 1
a2 1
   Copyright 1994, 2000 Free Software Foundation, Inc.
d45 1
@


1.5
log
@Protoization.
@
text
@d2 1
a2 1
   Copyright 1994 Free Software Foundation, Inc.
d29 2
d32 6
d66 1
a66 2
  prgregset_t prgregset;
  prfpregset_t prfpregset;
d70 3
a72 1
      if (core_reg_size == sizeof (prgregset))
d77 15
d94 2
a95 1
#define gregs ((struct regs *)core_reg_sect)
d131 3
a133 1
      if (core_reg_size == sizeof (prfpregset))
d138 24
d164 2
a165 1
#define fpuregs  ((struct fpu *) core_reg_sect)
@


1.4
log
@Protoization.
@
text
@d48 6
d55 2
a56 5
fetch_core_registers (core_reg_sect, core_reg_size, which, reg_addr)
     char *core_reg_sect;
     unsigned core_reg_size;
     int which;
     CORE_ADDR reg_addr;	/* Unused in this version */
@


1.3
log
@PARAMS removal.
@
text
@d136 1
a136 1
_initialize_core_solaris ()
@


1.2
log
@2000-05-26  Michael Snyder  <msnyder@@seadog.cygnus.com>

        * gregset.h: New file.  Typedefs for gdb_gregset_t and
        gdb_fpregset_t, prototypes for supply_gregset and friends.
        * procfs.c: Include gregset.h.  Delete local prototypes for
        supply_gregset etc., and local typedef gdb_gregset_t etc.
        * sol-thread.c: Include gregset.h, delete local prototypes,
        add appropriate casts to gdb_gregset_t.
        * uw-thread.c, lin-thread.c, core-sol2.c, core-regset.c,
        sparc-tdep.c, ptx4-nat.c, ppc-linux-nat.c, mipsv4-nat.c,
        m88k-nat.c, m68klinux-nat.c, m68k-tdep.c, irix5-nat.c,
        irix4-nat.c, ia64-linux-nat.c, i386v4-nat.c, cxux-nat.c,
        arm-linux-nat.c, alpha-nat.c: Include gregset.h.
        * config/nm-linux.h: Define GDB_GREGSET_T, GDB_FPREGET_T.
        * config/sparc/tm-sun4sol2.h: Ditto.
@
text
@d46 1
a46 1
static void fetch_core_registers PARAMS ((char *, unsigned, int, CORE_ADDR));
@


1.1
log
@Initial revision
@
text
@d4 1
a4 1
This file is part of GDB.
d6 14
a19 13
This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
d43 3
d69 1
a69 1
	  *(int *)&registers[REGISTER_BYTE (0)] = 0;
d72 1
a72 1
	  memcpy (&registers[REGISTER_BYTE (G1_REGNUM)], &gregs->r_g1, 
d74 4
a77 4
	  *(int *)&registers[REGISTER_BYTE (PS_REGNUM)] = gregs->r_ps;
	  *(int *)&registers[REGISTER_BYTE (PC_REGNUM)] = gregs->r_pc;
	  *(int *)&registers[REGISTER_BYTE (NPC_REGNUM)] = gregs->r_npc;
	  *(int *)&registers[REGISTER_BYTE (Y_REGNUM)] = gregs->r_y;
d87 1
a87 1
	    sp = *(int *)&registers[REGISTER_BYTE (SP_REGNUM)];
d89 1
a89 1
					 &registers[REGISTER_BYTE (L0_REGNUM)], 
d122 1
a123 1

d128 5
a132 3
  bfd_target_elf_flavour,
  fetch_core_registers,
  NULL
@


1.1.1.1
log
@Initial creation of sourceware repository
@
text
@@


1.1.1.2
log
@import gdb-1999-07-07 post reformat
@
text
@d4 1
a4 1
   This file is part of GDB.
d6 13
a18 14
   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place - Suite 330,
   Boston, MA 02111-1307, USA.  */
d65 1
a65 1
	  *(int *) &registers[REGISTER_BYTE (0)] = 0;
d68 1
a68 1
	  memcpy (&registers[REGISTER_BYTE (G1_REGNUM)], &gregs->r_g1,
d70 4
a73 4
	  *(int *) &registers[REGISTER_BYTE (PS_REGNUM)] = gregs->r_ps;
	  *(int *) &registers[REGISTER_BYTE (PC_REGNUM)] = gregs->r_pc;
	  *(int *) &registers[REGISTER_BYTE (NPC_REGNUM)] = gregs->r_npc;
	  *(int *) &registers[REGISTER_BYTE (Y_REGNUM)] = gregs->r_y;
d83 1
a83 1
	    sp = *(int *) &registers[REGISTER_BYTE (SP_REGNUM)];
d85 1
a85 1
				      &registers[REGISTER_BYTE (L0_REGNUM)],
d118 1
a119 1

@


1.1.1.3
log
@import gdb-1999-10-04 snapshot
@
text
@d125 3
a127 5
  bfd_target_elf_flavour,		/* core_flavour */
  default_check_format,			/* check_format */
  default_core_sniffer,			/* core_sniffer */
  fetch_core_registers,			/* core_read_registers */
  NULL					/* next */
@


