head	1.10;
access;
symbols
	gdb_7_6_1-2013-08-30-release:1.10
	gdb_7_6-2013-04-26-release:1.10
	gdb_7_6-branch:1.10.0.2
	gdb_7_6-2013-03-12-branchpoint:1.10
	gdb_7_5_1-2012-11-29-release:1.9
	gdb_7_5-2012-08-17-release:1.9
	gdb_7_5-branch:1.9.0.2
	gdb_7_5-2012-07-18-branchpoint:1.9
	gdb_7_4_1-2012-04-26-release:1.8.4.1
	gdb_7_4-2012-01-24-release:1.8.4.1
	gdb_7_4-branch:1.8.0.4
	gdb_7_4-2011-12-13-branchpoint:1.8
	gdb_7_3_1-2011-09-04-release:1.8
	gdb_7_3-2011-07-26-release:1.8
	gdb_7_3-branch:1.8.0.2
	gdb_7_3-2011-04-01-branchpoint:1.8
	gdb_7_2-2010-09-02-release:1.7
	gdb_7_2-branch:1.7.0.4
	gdb_7_2-2010-07-07-branchpoint:1.7
	gdb_7_1-2010-03-18-release:1.7
	gdb_7_1-branch:1.7.0.2
	gdb_7_1-2010-02-18-branchpoint:1.7
	gdb_7_0_1-2009-12-22-release:1.6
	gdb_7_0-2009-10-06-release:1.6
	gdb_7_0-branch:1.6.0.4
	gdb_7_0-2009-09-16-branchpoint:1.6
	arc-sim-20090309:1.5
	msnyder-checkpoint-072509-branch:1.6.0.2
	msnyder-checkpoint-072509-branchpoint:1.6
	arc-insight_6_8-branch:1.5.0.16
	arc-insight_6_8-branchpoint:1.5
	insight_6_8-branch:1.5.0.14
	insight_6_8-branchpoint:1.5
	reverse-20081226-branch:1.5.0.12
	reverse-20081226-branchpoint:1.5
	multiprocess-20081120-branch:1.5.0.10
	multiprocess-20081120-branchpoint:1.5
	reverse-20080930-branch:1.5.0.8
	reverse-20080930-branchpoint:1.5
	reverse-20080717-branch:1.5.0.6
	reverse-20080717-branchpoint:1.5
	msnyder-reverse-20080609-branch:1.5.0.4
	msnyder-reverse-20080609-branchpoint:1.5
	drow-reverse-20070409-branch:1.3.0.2
	drow-reverse-20070409-branchpoint:1.3
	gdb_6_8-2008-03-27-release:1.5
	gdb_6_8-branch:1.5.0.2
	gdb_6_8-2008-02-26-branchpoint:1.5
	gdb_6_7_1-2007-10-29-release:1.4
	gdb_6_7-2007-10-10-release:1.4
	gdb_6_7-branch:1.4.0.2
	gdb_6_7-2007-09-07-branchpoint:1.4
	gdb-csl-symbian-6_4_50_20060226-12:1.1.4.1
	gdb-csl-symbian-6_4_50_20060226-11:1.1.4.1
	gdb-csl-sourcerygxx-4_1-17:1.1.4.1
	gdb-csl-20060226-branch-local-2:1.1.4.1
	gdb-csl-sourcerygxx-4_1-14:1.1.4.1
	gdb-csl-sourcerygxx-4_1-13:1.1.4.1
	gdb-csl-sourcerygxx-4_1-12:1.1.4.1
	gdb-csl-sourcerygxx-3_4_4-21:1.1.4.1
	gdb-csl-sourcerygxx-4_1-9:1.1.4.1
	gdb-csl-sourcerygxx-4_1-8:1.1.4.1
	gdb-csl-sourcerygxx-4_1-7:1.1.4.1
	gdb-csl-arm-2006q1-6:1.1.4.1
	gdb-csl-sourcerygxx-4_1-6:1.1.4.1
	gdb-csl-symbian-6_4_50_20060226-10:1.1.4.1
	gdb-csl-symbian-6_4_50_20060226-9:1.1.4.1
	gdb-csl-symbian-6_4_50_20060226-8:1.1.4.1
	gdb-csl-coldfire-4_1-11:1.1.4.1
	gdb-csl-sourcerygxx-3_4_4-19:1.1.4.1
	gdb-csl-coldfire-4_1-10:1.1.4.1
	gdb-csl-sourcerygxx-4_1-5:1.1.4.1
	gdb-csl-sourcerygxx-4_1-4:1.1.4.1
	gdb-csl-sourcerygxx-3_4_4-17:1.1.4.1
	gdb-csl-20060226-branch-merge-to-csl-symbian-1:1.1.4.1
	gdb-csl-symbian-20060226-branch:1.1.4.1.0.2
	gdb-csl-symbian-20060226-branchpoint:1.1.4.1
	gdb-csl-20060226-branch-merge-to-csl-local-1:1.1.4.1
	gdb-csl-20060226-branch:1.1.0.4
	gdb-csl-available-20060303-branch:1.1.0.2;
locks; strict;
comment	@# @;


1.10
date	2013.01.01.06.32.58;	author brobecke;	state Exp;
branches;
next	1.9;

1.9
date	2012.01.04.08.17.21;	author brobecke;	state Exp;
branches;
next	1.8;

1.8
date	2011.01.01.15.33.23;	author brobecke;	state Exp;
branches
	1.8.4.1;
next	1.7;

1.7
date	2010.01.01.07.31.48;	author brobecke;	state Exp;
branches;
next	1.6;

1.6
date	2009.01.03.05.57.56;	author brobecke;	state Exp;
branches;
next	1.5;

1.5
date	2008.01.01.22.53.14;	author drow;	state Exp;
branches;
next	1.4;

1.4
date	2007.08.23.18.19.51;	author brobecke;	state Exp;
branches;
next	1.3;

1.3
date	2007.02.08.13.56.13;	author drow;	state Exp;
branches;
next	1.2;

1.2
date	2007.02.07.22.48.06;	author drow;	state Exp;
branches;
next	1.1;

1.1
date	2006.03.14.13.58.41;	author drow;	state dead;
branches
	1.1.2.1
	1.1.4.1;
next	;

1.8.4.1
date	2012.01.06.04.43.36;	author brobecke;	state Exp;
branches;
next	;

1.1.2.1
date	2006.03.14.13.58.41;	author drow;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2006.03.21.20.48.28;	author drow;	state Exp;
branches;
next	1.1.2.3;

1.1.2.3
date	2006.03.23.16.52.21;	author drow;	state Exp;
branches;
next	1.1.2.4;

1.1.2.4
date	2006.03.27.19.11.10;	author drow;	state Exp;
branches;
next	1.1.2.5;

1.1.2.5
date	2006.03.31.21.23.56;	author drow;	state Exp;
branches;
next	;

1.1.4.1
date	2006.04.03.00.47.41;	author drow;	state Exp;
branches;
next	;


desc
@@


1.10
log
@Update years in copyright notice for the GDB files.

Two modifications:
  1. The addition of 2013 to the copyright year range for every file;
  2. The use of a single year range, instead of potentially multiple
     year ranges, as approved by the FSF.
@
text
@#!/bin/sh

# Convert text files to compilable C arrays.
#
# Copyright (C) 2007-2013 Free Software Foundation, Inc.
#
# This file is part of GDB.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

output=$1
shift

if test -z "$output" || test -z "$1"; then
  echo "Usage: $0 OUTPUTFILE INPUTFILE..."
  exit 1
fi

if test -e "$output"; then
  echo "Output file \"$output\" already exists; refusing to overwrite."
  exit 1
fi

for input; do
  arrayname=xml_feature_`echo $input | sed 's,.*/,,; s/[-.]/_/g'`

  ${AWK:-awk} 'BEGIN { n = 0
      print "static const char '$arrayname'[] = {"
      for (i = 0; i < 255; i++)
        _ord_[sprintf("%c", i)] = i
    } {
      split($0, line, "");
      printf "  "
      for (i = 1; i <= length($0); i++) {
        c = line[i]
        if (c == "'\''") {
          printf "'\''\\'\'''\'', "
        } else if (c == "\\") {
          printf "'\''\\\\'\'', "
        } else if (_ord_[c] >= 32 && _ord_[c] < 127) {
	  printf "'\''%s'\'', ", c
        } else {
          printf "'\''\\%03o'\'', ", _ord_[c]
        }
        if (i % 10 == 0)
          printf "\n   "
      }
      printf "'\''\\n'\'', \n"
    } END {
      print "  0 };"
    }' < $input >> $output
done

echo >> $output
echo "const char *const xml_builtin[][2] = {" >> $output

for input; do
  basename=`echo $input | sed 's,.*/,,'`
  arrayname=xml_feature_`echo $input | sed 's,.*/,,; s/[-.]/_/g'`
  echo "  { \"$basename\", $arrayname }," >> $output
done

echo "  { 0, 0 }" >> $output
echo "};" >> $output
@


1.9
log
@Copyright year update in most files of the GDB Project.

gdb/ChangeLog:

        Copyright year update in most files of the GDB Project.
@
text
@d5 1
a5 1
# Copyright (C) 2007-2012 Free Software Foundation, Inc.
@


1.8
log
@run copyright.sh for 2011.
@
text
@d5 1
a5 1
# Copyright (C) 2007, 2008, 2009, 2010, 2011 Free Software Foundation, Inc.
@


1.8.4.1
log
@Copyright year update in most files of the GDB Project.

gdb/ChangeLog:

        Copyright year update in most files of the GDB Project.
@
text
@d5 1
a5 1
# Copyright (C) 2007-2012 Free Software Foundation, Inc.
@


1.7
log
@Update copyright year in most headers.

Automatic update by copyright.sh.
@
text
@d5 1
a5 1
# Copyright (C) 2007, 2008, 2009, 2010 Free Software Foundation, Inc.
@


1.6
log
@        Updated copyright notices for most files.
@
text
@d5 1
a5 1
# Copyright (C) 2007, 2008, 2009 Free Software Foundation, Inc.
@


1.5
log
@	Updated copyright notices for most files.
@
text
@d5 1
a5 1
# Copyright (C) 2007, 2008 Free Software Foundation, Inc.
@


1.4
log
@        * config/djgpp/djconfig.sh: Switch license to GPLv3.
        * copyright.sh: Likewise.
        * gdb-events.sh: Likewise.
        * gdb_gcore.sh: Likewise.
        * gdb_mbuild.sh: Likewise.
        * gdbarch.sh: Likewise.
        * observer.sh: Likewise.
        * features/feature_to_c.sh: Likewise.
        * regformats/regdat.sh: Likewise.
@
text
@d5 1
a5 1
# Copyright (C) 2007 Free Software Foundation, Inc.
@


1.3
log
@	* features/feature_to_c.sh: Use %s to avoid problems with nawk.
@
text
@d11 1
a11 1
# the Free Software Foundation; either version 2 of the License, or
d20 1
a20 3
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor,
# Boston, MA 02110-1301, USA.
@


1.2
log
@	* Makefile.in (XMLFILES): New.
	(COMMON_OBS): Add xml-builtin.o.
	(xml-builtin.c, stamp-xml): New rules.
	(xml-tdesc.o): Update.
	* features/feature_to_c.sh: New file.
	* xml-support.c (MAX_XINCLUDE_DEPTH): Define.
	(struct gdb_xml_parser): Add dtd_name and is_xinclude.
	(gdb_xml_start_element): Initialize scope after possibly reallocating
	scopes.  Move cleanup later.  Handle the XInclude description
	specially.
	(gdb_xml_end_element): Only parse the body if there is a current element.
	Call XML_DefaultCurrent if there is no element.
	(gdb_xml_fetch_external_entity, gdb_xml_use_dtd): New.
	(struct xinclude_parsing_data, xinclude_start_include)
	(xinclude_end_include, xml_xinclude_default)
	(xml_xinclude_start_doctype, xml_xinclude_end_doctype)
	(xml_xinclude_xml_decl, xml_xinclude_cleanup, xinclude_attributes)
	(xinclude_elements, xml_process_xincludes, fetch_xml_builtin): New.
	* xml-support.h (xml_fetch_another, xml_process_xincludes)
	(fetch_xml_builtin, xml_builtin, gdb_xml_use_dtd): New declarations.
	* xml-tdesc.c (tdesc_parse_xml): Add fetcher_baton argument.  Expand
	XInclude directives.  Use the compiled in DTD.
	(fetch_xml_from_file): Add baton argument.  Treat it as a containing
	directory name.  Do not warn here.
	(file_read_description_xml): Update call.  Warn here instead.  Pass
	a dirname as baton.
	(fetch_available_features_from_target): New.
	(target_read_description_xml): Use it.
	* features/gdb-target.dtd: Add copyright notice.  Use xinclude.dtd
	to handle XInclude.
	* features/xinclude.dtd: New file.

	* gdb.xml/bad-include.xml, gdb.xml/inc-2.xml, gdb.xml/inc-body.xml,
	gdb.xml/includes.xml, gdb.xml/tdesc-xinclude.exp: New files.

	* gdb.texinfo (Target Description Format): Add section on XInclude.
@
text
@d54 1
a54 1
          printf "'\''" c "'\'', "
@


1.1
log
@file feature_to_c.sh was initially added on branch gdb-csl-available-20060303-branch.
@
text
@d1 77
@


1.1.4.1
log
@Merge XML and VFP support to this branch.
@
text
@a0 60
#!/bin/sh

output=$1
shift

if test -z "$output" || test -z "$1"; then
  echo "Usage: $0 OUTPUTFILE INPUTFILE..."
  exit 1
fi

if test -e "$output"; then
  echo "Output file \"$output\" already exists; refusing to overwrite."
  exit 1
fi

for input in dummy "$@@"; do
  if test $input != dummy; then
    arrayname=xml_feature_`echo $input | sed 's,.*/,,; s/[-.]/_/g'`

    gawk 'BEGIN { n = 0
      print "static const char '$arrayname'[] = {"
      for (i = 0; i < 255; i++)
        _ord_[sprintf("%c", i)] = i
    } {
      split($0, line, "");
      printf "  "
      for (i = 1; i <= length($0); i++) {
        c = line[i]
        if (c == "'\''") {
          printf "'\''\\'\'''\'', "
        } else if (c == "\\") {
          printf "'\''\\\\'\'', "
        } else if (match (c, "[[:print:]]") != 0) {
          printf "'\''" c "'\'', "
        } else {
          printf "'\''\\%03o'\'', ", _ord_[c]
        }
        if (i % 10 == 0)
          printf "\n   "
      }
      printf "'\''\\n'\'', \n"
    } END {
      print "  0 };"
    }' < $input >> $output
  fi
done

echo >> $output
echo "const char *const xml_builtin[][2] = {" >> $output

for input in dummy "$@@"; do
  if test $input != dummy; then
    basename=`echo $input | sed 's,.*/,,'`
    arrayname=xml_feature_`echo $input | sed 's,.*/,,; s/[-.]/_/g'`
    echo "  { \"$basename\", $arrayname }," >> $output
  fi
done

echo "  { 0, 0 }" >> $output
echo "};" >> $output
@


1.1.2.1
log
@Add RAM caching, checksum, and non-sequential register support.
@
text
@a0 37
#!/bin/sh

input=$1
output=$2

if test -z "$input" || test -z "$output"; then
  echo "Usage: $0 INPUTFILE OUTPUTFILE"
  exit 1
fi

arrayname=xml_feature_`basename $input | sed 's/\..*//g; s/-/_/g'`

gawk 'BEGIN { n = 0
  print "const char '$arrayname'[] = {"
  for (i = 0; i < 255; i++)
    _ord_[sprintf("%c", i)] = i
} {
  split($0, line, "");
  printf "  "
  for (i = 1; i <= length(line); i++) {
    c = line[i]
    if (c == "'\''") {
      printf "'\''\\'\'''\'', "
    } else if (c == "\\") {
      printf "'\''\\\\'\'', "
    } else if (match (c, "[[:print:]]") != 0) {
      printf "'\''" c "'\'', "
    } else {
      printf "'\''\\%03o'\'', ", _ord_[c]
    }
    if (i % 10 == 0)
      printf "\n   "
  }
  printf "'\''\\n'\'', \n"
} END {
  print "  0 };"
}' < $input > $output
@


1.1.2.2
log
@Compile in the XML DTD.
Handle XInclude processing as a separate pass.
@
text
@d11 1
a11 1
arrayname=xml_feature_`echo $input | sed 's,.*/,,; s/[-.]/_/g'`
d14 1
a14 1
  print "static const char '$arrayname'[] = {"
@


1.1.2.3
log
@Require targets to provide all their registers if an XML description
is used; fix various bugs this uncovered.  Allow ARM descriptions without
FPA.
@
text
@d3 2
a4 2
output=$1
shift
d6 2
a7 2
if test -z "$output" || test -z "$1"; then
  echo "Usage: $0 OUTPUTFILE INPUTFILE..."
d11 1
a11 3
for input in dummy "$@@"; do
  if test $input != dummy; then
    arrayname=xml_feature_`echo $input | sed 's,.*/,,; s/[-.]/_/g'`
d13 25
a37 41
    gawk 'BEGIN { n = 0
      print "static const char '$arrayname'[] = {"
      for (i = 0; i < 255; i++)
        _ord_[sprintf("%c", i)] = i
    } {
      split($0, line, "");
      printf "  "
      for (i = 1; i <= length(line); i++) {
        c = line[i]
        if (c == "'\''") {
          printf "'\''\\'\'''\'', "
        } else if (c == "\\") {
          printf "'\''\\\\'\'', "
        } else if (match (c, "[[:print:]]") != 0) {
          printf "'\''" c "'\'', "
        } else {
          printf "'\''\\%03o'\'', ", _ord_[c]
        }
        if (i % 10 == 0)
          printf "\n   "
      }
      printf "'\''\\n'\'', \n"
    } END {
      print "  0 };"
    }' < $input >> $output
  fi
done

echo >> $output
echo "const char *const xml_builtin[][2] = {" >> $output

for input in dummy "$@@"; do
  if test $input != dummy; then
    basename=`echo $input | sed 's,.*/,,'`
    arrayname=xml_feature_`echo $input | sed 's,.*/,,; s/[-.]/_/g'`
    echo "  { \"$basename\", $arrayname }," >> $output
  fi
done

echo "  { 0, 0 }" >> $output
echo "};" >> $output
@


1.1.2.4
log
@Basic register group support.
@
text
@a10 5
if test -e "$output"; then
  echo "Output file \"$output\" already exists; refusing to overwrite."
  exit 1
fi

@


1.1.2.5
log
@Awk portability fix.
@
text
@d27 1
a27 1
      for (i = 1; i <= length($0); i++) {
@


