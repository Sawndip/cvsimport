head	1.12;
access;
symbols
	cygwin-64bit-postmerge:1.10
	cygwin-64bit-premerge-branch:1.10.0.4
	cygwin-64bit-premerge:1.10
	cygwin-1_7_18-release:1.10
	cygwin-1_7_17-release:1.10
	cygwin-64bit-branch:1.10.0.2
	cygwin-1_7_16-release:1.10
	cygwin-1_7_15-release:1.10
	cygwin-1_7_14_2-release:1.10
	cygwin-1_7_14-release:1.10
	cygwin-1_7_12-release:1.10
	cygwin-1_7_11-release:1.10
	cygwin-1_7_10-release:1.10
	cygwin-1_7_9-release:1.8
	cygwin-1_7_8-release:1.8
	cygwin-1_7_7-release:1.8
	cygwin-1_7_5-release:1.8
	cygwin-1_7_4-release:1.8
	cygwin-1_7_3-release:1.8
	cygwin-1_7_2-release:1.7
	cygwin-1_7_1-release:1.6
	cv-branch-2:1.6.0.2
	cr-0x5f1:1.4.0.6
	cv-branch:1.4.0.4
	cr-0x3b58:1.4.0.2
	cr-0x9e:1.2.0.4
	cr-0x9d:1.2.0.2
	corinna-01:1.1
	cr-0x9c:1.1.0.6
	cr-0x9b:1.1.0.4
	cr-0x99:1.1
	Z-emcb-cygwin_daemon:1.1.0.2;
locks; strict;
comment	@# @;


1.12
date	2013.05.01.23.30.21;	author tangent;	state dead;
branches;
next	1.11;

1.11
date	2013.04.23.15.59.21;	author corinna;	state Exp;
branches;
next	1.10;

1.10
date	2011.06.15.11.41.26;	author corinna;	state Exp;
branches;
next	1.9;

1.9
date	2011.05.02.11.56.36;	author corinna;	state Exp;
branches;
next	1.8;

1.8
date	2010.03.31.21.06.43;	author cgf;	state Exp;
branches;
next	1.7;

1.7
date	2010.03.12.10.33.08;	author corinna;	state Exp;
branches;
next	1.6;

1.6
date	2008.07.17.11.49.45;	author corinna;	state Exp;
branches;
next	1.5;

1.5
date	2008.06.27.00.34.02;	author cgf;	state Exp;
branches;
next	1.4;

1.4
date	2004.12.24.21.58.38;	author joshuadfranklin;	state Exp;
branches;
next	1.3;

1.3
date	2004.01.24.08.08.13;	author joshuadfranklin;	state Exp;
branches;
next	1.2;

1.2
date	2004.01.11.08.32.09;	author joshuadfranklin;	state Exp;
branches;
next	1.1;

1.1
date	2003.07.31.21.06.55;	author joshuadfranklin;	state Exp;
branches;
next	;


desc
@@


1.12
log
@Modernized user guide, API reference, and FAQ generation.  Overall
effect is to move away from DocBook SGML and DJ Delorie's doctool and
toward pure DocBook XSL.  (There remains just one use of doctool, and
we have plans for replacing it, too.)  See ChangeLog for details.
@
text
@<sect1 id="using-effectively">
<title>Using Cygwin effectively with Windows</title>

<para>
Cygwin is not a full operating system, and so must rely on Windows for
accomplishing some tasks. For example, Cygwin provides a POSIX view
of the Windows filesystem, but does not provide filesystem drivers of 
its own. Therefore part of using Cygwin effectively is learning to use
Windows effectively. 
Many Windows utilities provide a good way to interact with Cygwin's 
predominately command-line environment. For example, 
<command>ipconfig.exe</command> provides information about network 
configuration, and <command>net.exe</command> views and configures
network file and printer resources.  Most of these tools
support the <literal>/?</literal> switch to display usage information. 
</para>

<para>
Unfortunately, no standard set of tools included with all versions of 
Windows exists.  Generally, the younger the Windows version, the more
complete are the on-board tools.  Microsoft also provides free downloads
for Windows XP (the Windows Support Tools).  Additionally, many independent
sites such as 
<ulink url="http://download.com">download.com</ulink>, 
<ulink url="http://simtel.net">simtel.net</ulink>, 
and Microsoft's own
<ulink url="http://technet.microsoft.com/en-us/sysinternals/default.aspx">Sysinternals</ulink>
provide quite useful command-line utilities, as far as they are not
already provided by Cygwin.  A few Windows tools, such as 
<command>find.exe</command>, <command>link.exe</command> and
<command>sort.exe</command>, may conflict with the Cygwin versions
make sure that you use the full path (<command>/usr/bin/find</command>)
or that your Cygwin <literal>bin</literal> directory comes first in your
<envar>PATH</envar>.
</para>

<sect2 id="using-pathnames-effectively"> <title>Pathnames</title>

<para>
Windows programs do not understand POSIX pathnames, so any arguments 
that reference the filesystem must be in Windows (or DOS) format or 
translated.  Cygwin provides the <command>cygpath</command> utility for 
converting between Windows and POSIX paths. A complete description of its 
options and examples of its usage are in <xref linkend="cygpath"></xref>, 
including a shell script for starting Windows Explorer in any directory. 
The same format works for most Windows programs, for example 
<screen>
<literal>notepad.exe "$(cygpath -aw "Desktop/Phone Numbers.txt")"</literal>
</screen>
A few programs require a Windows-style, semicolon-delimited path list, 
which <command>cygpath</command> can translate from a POSIX path with the
<literal>-p</literal> option. For example, a Java compilation from 
<command>bash</command> might look like this: 
<screen>
<literal>javac -cp "$(cygpath -pw "$CLASSPATH")" hello.java</literal>
</screen>
Since using quoting and subshells is somewhat awkward, it is often 
preferable to use <command>cygpath</command> in shell scripts.
</para>

</sect2>

<sect2 id="using-net"> <title>Cygwin and Windows Networking</title>
<para>
Many popular Cygwin packages, such as <systemitem>ncftp</systemitem>, 
<systemitem>lynx</systemitem>, and <systemitem>wget</systemitem>, require a 
network connection.  Since Cygwin relies on Windows for connectivity, 
if one of these tools is not working as expected you may need to 
troubleshoot using Windows tools. The first test is to see if you
can reach the URL's host with <command>ping.exe</command>, one of the 
few utilities included with every Windows version since Windows 95.
If you chose to install the <systemitem>inetutils</systemitem> package, 
you may have both
Windows and Cygwin versions of utilities such as <command>ftp</command>
and <command>telnet</command>. If you are having problems using one
of these programs, see if the alternate one works as expected. 
</para>

<para>
There are a variety of other programs available for specific situations.
If your system does not have an always-on network connection, you 
may be interested in <command>rasdial.exe</command> for automating dialup
connections.  
Users who frequently change their network 
configuration can script these changes with <command>netsh.exe</command>.
For proxy users, the open source 
<ulink url="http://apserver.sourceforge.net">
NTLM Authorization Proxy Server</ulink> or the no-charge
<ulink url="http://www.hummingbird.com/products/nc/socks/index.html">
Hummingbird SOCKS Proxy</ulink> may allow you to use Cygwin network
programs in your environment.
</para>

</sect2>

<sect2 id="using-cygutils"><title>The cygutils package</title>

<para>
The optional <systemitem>cygutils</systemitem> package contains
miscellaneous tools that are small enough to not require their own package.
It is not included in a default Cygwin install; select it from the Utils
category in <command>setup.exe</command>. Several of the
<systemitem>cygutils</systemitem> tools are useful for interacting with
Windows.</para>

<para>
One of the hassles of Unix-Windows interoperability is the different line 
endings on text files.  As mentioned in <xref linkend="using-textbinary"></xref>, 
Unix tools such as <command>tr</command> can convert between CRLF and LF 
endings, but <systemitem>cygutils</systemitem> provides several dedicated programs: 
<command>conv</command>, <command>d2u</command>, <command>dos2unix</command>, 
<command>u2d</command>, and <command>unix2dos</command>. Use the
<literal>--help</literal> switch for usage information. 
</para>
</sect2>

<sect2 id="using-shortcuts"><title>Creating shortcuts with cygutils</title>
<para>
Another problem area is between Unix-style links, which link one file
to another, and Microsoft .lnk files, which provide a shortcut to a
file.  They seem similar at first glance but, in reality, are fairly 
different.  By default, Cygwin does not create symlinks as .lnk files,
but there's an option to do that, see <xref linkend="using-cygwinenv"></xref>.
These symlink .lnk files are compatible with Windows-created .lnk files,
but they are still different.  They do not include much of the information
that is available in a standard Microsoft shortcut, such as the working
directory, an icon, etc.  The <systemitem>cygutils</systemitem>
package includes a <command>mkshortcut</command> utility for creating
standard native Microsoft .lnk files.
</para>

<para>
But here's the problem.  If Cygwin handled these native shortcuts like any
other symlink, you could not archive Microsoft .lnk files into
<command>tar</command> archives and keep all the information in them. 
After unpacking, these shortcuts would have lost all the extra information
and would be no different than standard Cygwin symlinks. Therefore these two
types of links are treated differently.  Unfortunately, this means that the 
usual Unix way of creating and using symlinks does not work with native
Windows shortcuts. 
</para>
</sect2>
  
<sect2 id="using-printing"><title>Printing with cygutils</title>
<para>
There are several options for printing from Cygwin, including the 
<command>lpr</command> found in <systemitem>cygutils</systemitem> (not to be confused with the 
native Windows <command>lpr.exe</command>). The easiest way to use <systemitem>cygutils</systemitem>' 
<command>lpr</command> is to specify a default device name in the 
<envar>PRINTER</envar> environment variable.  You may also specify a device 
on the command line with the <literal>-d</literal> or <literal>-P</literal> 
options, which will override the environment variable setting. 
</para>

<para>
A device name 
may be a UNC path (<literal>\\server_name\printer_name</literal>), a reserved 
DOS device name (<literal>prn</literal>, <literal>lpt1</literal>), or a 
local port name that is mapped to a printer share. Note that forward slashes 
may be used in a UNC path (<literal>//server_name/printer_name</literal>),
which is helpful when using <command>lpr</command> from a shell that uses
the backslash as an escape character. 
</para>

<para>
<command>lpr</command> sends raw data to the printer; no formatting is done.
Many, but not all, printers accept plain text as input. If your printer 
supports PostScript, packages such as 
<systemitem>a2ps</systemitem> and <systemitem>enscript</systemitem> can prepare 
text files for printing. The <systemitem>ghostscript</systemitem> package also 
provides some translation
from PostScript to various native printer languages. Additionally, a native 
Windows application for printing PostScript, <command>gsprint</command>, is 
available from the <ulink url="http://www.cs.wisc.edu/~ghost/">Ghostscript
website</ulink>.
</para>

</sect2>

</sect1>
@


1.11
log
@	* Throughout, eliminate Windows 2000 from the documentation.
	* overview.sgml (brief-history): Mention native AMD64 support.
@
text
@@


1.10
log
@	* cygwinenv.sgml (using-cygwinenv): Move envcache, strip_title, title,
	tty, and upcaseenv options to list of obsolete options.
	* effectively.sgml (using-console): Remove section.
	* new-features.sgml (ov-new1.7.10): Document removed CYGWIN options.
	Document removed tty mode.
@
text
@d20 3
a22 6
Windows exists.  If you are unfamiliar with the tools available 
on your system, here is a general guide.  Windows 2000 has only a basic 
set of tools, which later versions of Windows expanded.  Microsoft also
provides free downloads for Windows 2000 (the Resource Kit Tools), and XP
(the Windows Support Tools).  Generally, the younger the Windows version,
the more complete are the on-board tools.  Additionally, many independent
d85 2
a86 2
configuration can script these changes with <command>netsh.exe</command> 
(Windows 2000 and later). For proxy users, the open source 
@


1.9
log
@	Throughout remove NT4 from documentation.

	* new-features.sgml (ov-new1.7.10): Document change in passwd command.
@
text
@a65 34
<sect2 id="using-console"> <title>Console Programs</title>
<para>
Another issue is receiving output from or giving input to console-based 
Windows programs.  Unfortunately, interacting with Windows console 
applications is not a simple matter of using a translation utility. Windows 
console applications are designed to run under 
<command>cmd.exe</command>, and some do not deal gracefully with other
situations.  Cygwin can receive console input only if it
is also running in a console window since Windows does not provide
any way to attach to the backend of the console device. Another
traditional Unix input/output method, ptys (pseudo-terminals), is
supported by Cygwin but not entirely by Windows.  The basic problem is 
that a Cygwin pty is a pipe and some Windows applications do not like 
having their input or output redirected to pipes.  
</para>

<para>
To help deal with these issues, Cygwin supports customizable levels of 
Windows versus Unix compatibility behavior.  To be most compatible with 
Windows programs, use a DOS prompt, running only the occasional Cygwin 
command or script. Next would be to run <command>bash</command> within 
a default DOS box. To make Cygwin more Unix compatible in this case, 
set <envar>CYGWIN=tty</envar> (see <xref linkend="using-cygwinenv"></xref>).
Alternatively, the optional <systemitem>mintty</systemitem> package
provides a terminal emulator similar to such X11 programs as
<command>xterm</command> (it is not necessary to set
<envar>CYGWIN=tty</envar> with <command>mintty</command> nor is it
necessary to be running <systemitem>/Cygwin/X</systemitem>).  Using
<command>mintty.exe</command> provides the most Unix-like environment,
but expect some compatibility problems with Windows programs.
</para>

</sect2>

@


1.8
log
@* cygwinenv.sgml: Remove/deprecate mention of rxvt.
* effectively.sgml: Ditto.
* faq-using.xml: Ditto.
* setup-net.sgml: Ditto.
@
text
@d21 6
a26 7
on your system, here is a general guide.  Windows NT 4.0 has only a basic 
set of tools, which later versions of Windows expanded. 
Microsoft also provides free downloads for Windows NT 4.0 (the Resource Kit 
Support Tools), Windows 2000 (the Resource Kit Tools), and XP (the 
Windows Support Tools).  Generally, the younger the Windows version, the
more complete are the on-board tools.  Additionally, many independent sites
such as 
@


1.7
log
@	* effectively.sgml (using-shortcuts): Match chapter with reality.
@
text
@d90 6
a95 4
Alternatively, the optional <systemitem>rxvt</systemitem> package provides 
a native-Windows version of the popular X11 terminal emulator (it is not 
necessary to set <envar>CYGWIN=tty</envar> with <command>rxvt</command>). 
Using <command>rxvt.exe</command> provides the most Unix-like environment, 
@


1.6
log
@	* Revamp documentation for Cygwin 1.7, part 1.
@
text
@d158 8
a165 7
different.  By default, Cygwin uses a mechanism that creates symbolic
links that are compatible with standard Microsoft .lnk files. However,
they do not include much of the information that is available in a 
standard Microsoft shortcut, such as the working directory, an icon, 
etc.  The <systemitem>cygutils</systemitem> package includes a 
<command>mkshortcut</command> 
utility for creating standard Microsoft .lnk files.
d169 7
a175 7
If Cygwin handled these native shortcuts like any other symlink, 
you could not archive Microsoft .lnk files into <command>tar</command>
archives and keep all the information in them.  After unpacking, 
these shortcuts would have lost all the extra information and would
be no different than standard Cygwin symlinks. Therefore these two types 
of links are treated differently.  Unfortunately, this means that the 
usual Unix way of creating and using symlinks does not work with 
@


1.5
log
@* effectively.sgml: Correct subject-verb agreement, missing verb
(typo), preposition and (definite vs indefinite) article use.
@
text
@d21 2
a22 3
on your system, here is a general guide.  Windows 95, 98, and ME have 
very limited command-line configuration tools.  Windows NT 4.0 has much 
better coverage, which Windows 2000 and XP expanded. 
d25 4
a28 2
Windows Support Tools). Additionally, many independent sites such as 
<ulink url="http://download.com.com">download.com</ulink>, 
d30 9
a38 6
and <ulink url="http://sysinternals.com">sysinternals.com</ulink>
provide command-line utilities.  A few Windows tools, such as 
<command>find.exe</command> and <command>sort.exe</command>,
may conflict with the Cygwin versions; make sure that you use the full 
path (<command>/usr/bin/find</command>) or that your Cygwin 
<literal>bin</literal> directory comes first in your <envar>PATH</envar>.
d41 1
a41 1
<sect2> <title>Pathnames</title>
d67 1
a67 1
<sect2> <title>Console Programs</title>
d72 2
a73 2
console applications are designed to run under <command>command.com</command> 
or <command>cmd.exe</command>, and some do not deal gracefully with other
d75 1
a75 1
is also running in a console (DOS box) since Windows does not provide
d85 1
a85 1
Windows verses Unix compatibility behavior.  To be most compatible with 
d99 1
a99 1
<sect2> <title>Cygwin and Windows Networking</title>
d118 2
a119 2
may be interested in <command>rasdial.exe</command> (or alternatives for
Windows 95, 98, and ME) for automating dialup connections.  
d122 1
a122 1
(Windows 2000 and XP). For proxy users, the open source 
d132 1
a132 1
<sect2><title>The cygutils package</title>
d135 6
a140 6
The optional <systemitem>cygutils</systemitem> package contains miscellaneous tools that are
small enough to not require their own package. It is not included in a
default Cygwin install; select it from the Utils category in 
<command>setup.exe</command>. Several of the <systemitem>cygutils</systemitem> tools are useful
for interacting with Windows. 
</para>
d153 1
a153 1
<sect2><title>Creating shortcuts with cygutils</title>
d179 1
a179 1
<sect2><title>Printing with cygutils</title>
@


1.4
log
@	* .sgml: Cleanup markup for XML validity.
@
text
@d65 1
a65 1
Another issue is receiving output from or giving input to the console-based 
d68 1
a68 1
console applications and designed to run under <command>command.com</command> 
d73 1
a73 1
traditional Unix input/output method, ptys (pseudo-terminals), are 
d83 2
a84 2
command or script. Next would be to run <command>bash</command> with 
the default DOS box. To make Cygwin more Unix compatible in this case, 
@


1.3
log
@
2004-01-24  Joshua Daniel Franklin  <joshuadfranklin@@yahoo.com>
	* cygwinenv.sgml: Cleanup minor markup problems.
	* dll.sgml: Cleanup minor markup problems.
	* effectively.sgml: Cleanup minor markup problems.
	* gcc.sgml: Cleanup minor markup problems.
	* ntsec.sgml: Cleanup minor markup problems.
	* pathnames.sgml: Cleanup minor markup problems.
	* setup-net.sgml: Cleanup minor markup problems.
	* textbinary.sgml: Cleanup minor markup problems.
	* windres.sgml: Cleanup minor markup problems.
@
text
@d27 3
a29 3
<ulink URL="http://download.com.com">download.com</ulink>, 
<ulink URL="http://simtel.net">simtel.net</ulink>, 
and <ulink URL="http://sysinternals.com">sysinternals.com</ulink>
d34 1
a34 1
<literal>bin</literal> directory comes first in your <EnVar>PATH</EnVar>.
d44 1
a44 1
options and examples of its usage are in <Xref Linkend="cygpath">, 
d85 1
a85 1
set <EnVar>CYGWIN=tty</EnVar> (see <Xref Linkend="using-cygwinenv">).
d88 1
a88 1
necessary to set <EnVar>CYGWIN=tty</EnVar> with <command>rxvt</command>). 
d119 1
a119 1
<ulink URL="http://apserver.sourceforge.net">
d121 1
a121 1
<ulink URL="http://www.hummingbird.com/products/nc/socks/index.html">
d140 1
a140 1
endings on text files.  As mentioned in <Xref Linkend="using-textbinary">, 
d181 1
a181 1
<EnVar>PRINTER</EnVar> environment variable.  You may also specify a device 
d205 1
a205 1
available from the <ulink URL="http://www.cs.wisc.edu/~ghost/">Ghostscript
@


1.2
log
@2004-01-11  Joshua Daniel Franklin <joshuadfranklin@@yahoo.com>

        * Makefile.in: Add new target for single-file User's Guide, use new
        cygwin.dsl for output.
        * cygwin.dsl: New file, DSSSL stylesheet for custom Cygwin output.
        * cygwin-api.in.sgml: Update to DocBook SGML 4.2 DTD.
        * cygwin-ug-net.in.sgml: Update to DocBook SGML 4.2 DTD.
        * cygwin-ug.in.sgml: Update to DocBook SGML 4.2 DTD.
        * cygwinenv.sgml: Correct some tags. Add description of default values
        to ntsec, export, and error_start items.
        * dll.sgml: Add explanation of cyg prefix for DLLs.
        * effectively.sgml: Use systemitem tag for names of Cygwin packages.
        * how-programming.texinfo: Add example to FAQ entry.
        * pathnames.sgml: Add discussion of /proc filesystem.
	* setup-net.sgml: Correct some typos and grammar.
@
text
@d147 1
@


1.1
log
@* effectively.sgml: New file, "Using Cygwin Effectively with Windows".
@
text
@d86 1
a86 1
Alternatively, the optional <command>rxvt</command> package provides 
d97 2
a98 2
Many popular Cygwin packages, such as <command>ncftp</command>, 
<command>lynx</command>, and <command>wget</command>, require a 
d104 2
a105 1
If you chose to install the inetutils package, you may have both
d131 1
a131 1
The optional cygutils package contains miscellaneous tools that are
d134 1
a134 1
<command>setup.exe</command>. Several of the cygutils tools are useful
d142 1
a142 1
endings, but cygutils provides several dedicated programs: 
d157 2
a158 1
etc.  The cygutils package includes a <command>mkshortcut</command> 
d177 2
a178 2
<command>lpr</command> found in cygutils (not to be confused with the 
native Windows <command>lpr.exe</command>). The easiest way to use cygutils' 
d199 3
a201 2
<command>a2ps</command> and <command>enscript</command> can prepare text
files for printing. The ghostscript package also provides some translation
@

