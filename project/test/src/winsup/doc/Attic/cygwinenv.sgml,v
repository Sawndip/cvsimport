head	1.46;
access;
symbols
	cygwin-64bit-postmerge:1.44
	cygwin-64bit-premerge-branch:1.44.0.4
	cygwin-64bit-premerge:1.44
	cygwin-1_7_18-release:1.44
	cygwin-1_7_17-release:1.44
	cygwin-64bit-branch:1.44.0.2
	cygwin-1_7_16-release:1.44
	cygwin-1_7_15-release:1.44
	cygwin-1_7_14_2-release:1.43
	cygwin-1_7_14-release:1.43
	cygwin-1_7_12-release:1.43
	cygwin-1_7_11-release:1.42
	cygwin-1_7_10-release:1.42
	cygwin-1_7_9-release:1.39
	cygwin-1_7_8-release:1.39
	cygwin-1_7_7-release:1.39
	cygwin-1_7_5-release:1.39
	cygwin-1_7_4-release:1.39
	cygwin-1_7_3-release:1.39
	cygwin-1_7_2-release:1.38
	cygwin-1_7_1-release:1.37
	cv-branch-2:1.37.0.2
	cr-0x5f1:1.25.0.4
	cv-branch:1.25.0.2
	cr-0x3b58:1.21.0.2
	cr-0x9e:1.9.0.4
	cr-0x9d:1.9.0.2
	corinna-01:1.8
	cr-0x9c:1.8.0.6
	cr-0x9b:1.8.0.4
	cr-0x99:1.8
	Z-emcb-cygwin_daemon:1.8.0.2
	w32api-2_2:1.8
	mingw-runtime-2_4:1.8
	cygnus_cvs_20020108_pre:1.6
	Z-cygwin_daemon_merge-new_HEAD:1.6
	Z-cygwin_daemon_merge_HEAD:1.6
	cygwin_daemon:1.6.0.8;
locks; strict;
comment	@# @;
expand	@o@;


1.46
date	2013.05.01.23.30.21;	author tangent;	state dead;
branches;
next	1.45;

1.45
date	2013.04.24.10.18.08;	author corinna;	state Exp;
branches;
next	1.44;

1.44
date	2012.05.06.18.59.46;	author cgf;	state Exp;
branches;
next	1.43;

1.43
date	2012.03.30.11.30.13;	author corinna;	state Exp;
branches;
next	1.42;

1.42
date	2011.07.15.20.59.07;	author cgf;	state Exp;
branches;
next	1.41;

1.41
date	2011.06.15.11.41.26;	author corinna;	state Exp;
branches;
next	1.40;

1.40
date	2011.05.10.10.23.57;	author corinna;	state Exp;
branches;
next	1.39;

1.39
date	2010.03.31.21.06.43;	author cgf;	state Exp;
branches;
next	1.38;

1.38
date	2010.01.12.16.40.53;	author corinna;	state Exp;
branches;
next	1.37;

1.37
date	2009.05.27.02.30.42;	author cgf;	state Exp;
branches;
next	1.36;

1.36
date	2009.04.03.11.51.31;	author corinna;	state Exp;
branches;
next	1.35;

1.35
date	2009.03.26.12.25.11;	author corinna;	state Exp;
branches;
next	1.34;

1.34
date	2009.03.24.12.37.02;	author corinna;	state Exp;
branches;
next	1.33;

1.33
date	2009.03.18.11.29.27;	author corinna;	state Exp;
branches;
next	1.32;

1.32
date	2009.01.21.17.14.37;	author corinna;	state Exp;
branches;
next	1.31;

1.31
date	2008.11.11.10.51.45;	author corinna;	state Exp;
branches;
next	1.30;

1.30
date	2008.07.18.08.17.28;	author corinna;	state Exp;
branches;
next	1.29;

1.29
date	2008.07.17.11.49.45;	author corinna;	state Exp;
branches;
next	1.28;

1.28
date	2008.04.13.16.47.41;	author corinna;	state Exp;
branches;
next	1.27;

1.27
date	2006.12.12.18.48.35;	author corinna;	state Exp;
branches;
next	1.26;

1.26
date	2006.08.01.18.06.49;	author cgf;	state Exp;
branches;
next	1.25;

1.25
date	2006.04.03.03.37.52;	author cgf;	state Exp;
branches;
next	1.24;

1.24
date	2006.03.13.21.02.37;	author cgf;	state Exp;
branches;
next	1.23;

1.23
date	2006.03.07.09.21.28;	author corinna;	state Exp;
branches;
next	1.22;

1.22
date	2006.02.05.18.19.16;	author corinna;	state Exp;
branches;
next	1.21;

1.21
date	2005.09.15.08.24.46;	author corinna;	state Exp;
branches;
next	1.20;

1.20
date	2005.07.10.19.39.31;	author joshuadfranklin;	state Exp;
branches;
next	1.19;

1.19
date	2005.04.19.14.45.54;	author corinna;	state Exp;
branches;
next	1.18;

1.18
date	2005.04.16.13.16.25;	author corinna;	state Exp;
branches;
next	1.17;

1.17
date	2005.01.31.20.03.20;	author corinna;	state Exp;
branches;
next	1.16;

1.16
date	2004.12.24.21.58.38;	author joshuadfranklin;	state Exp;
branches;
next	1.15;

1.15
date	2004.09.24.09.47.10;	author corinna;	state Exp;
branches;
next	1.14;

1.14
date	2004.05.30.06.47.09;	author joshuadfranklin;	state Exp;
branches;
next	1.13;

1.13
date	2004.03.27.06.48.11;	author joshuadfranklin;	state Exp;
branches;
next	1.12;

1.12
date	2004.02.20.07.26.16;	author joshuadfranklin;	state Exp;
branches;
next	1.11;

1.11
date	2004.02.16.12.22.14;	author corinna;	state Exp;
branches;
next	1.10;

1.10
date	2004.01.24.08.08.13;	author joshuadfranklin;	state Exp;
branches;
next	1.9;

1.9
date	2004.01.11.08.32.09;	author joshuadfranklin;	state Exp;
branches;
next	1.8;

1.8
date	2003.02.03.00.30.45;	author joshuadfranklin;	state Exp;
branches;
next	1.7;

1.7
date	2002.12.19.02.14.06;	author cgf;	state Exp;
branches;
next	1.6;

1.6
date	2001.04.12.21.52.38;	author corinna;	state Exp;
branches;
next	1.5;

1.5
date	2001.03.02.12.05.31;	author corinna;	state Exp;
branches;
next	1.4;

1.4
date	2000.12.22.17.02.02;	author corinna;	state Exp;
branches;
next	1.3;

1.3
date	2000.12.19.20.14.34;	author corinna;	state Exp;
branches;
next	1.2;

1.2
date	2000.11.19.04.53.46;	author cgf;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.17.19.38.31;	author cgf;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.17.19.38.31;	author cgf;	state Exp;
branches;
next	;


desc
@@


1.46
log
@Modernized user guide, API reference, and FAQ generation.  Overall
effect is to move away from DocBook SGML and DJ Delorie's doctool and
toward pure DocBook XSL.  (There remains just one use of doctool, and
we have plans for replacing it, too.)  See ChangeLog for details.
@
text
@<sect1 id="using-cygwinenv"><title>The <envar>CYGWIN</envar> environment
variable</title>

<sect2 id="cygwinenv-implemented-options">
<title>Implemented options</title>

<para>The <envar>CYGWIN</envar> environment variable is used to configure
many global settings for the Cygwin runtime system. It contains the options
listed below, separated by blank characters. Many options can be turned off
by prefixing with <literal>no</literal>.</para>

<itemizedlist mark="bullet">

<listitem>
<para><envar>(no)detect_bloda</envar> - If set, Cygwin will try to detect
foreign applications which try to inject threads into a Cygwin process,
or which redirect system sockets by providing an enforced so-called
<literal>Layered Service Provider</literal>.  This may or may not help to
detect <ulink url="http://cygwin.com/faq/faq.using.html#faq.using.bloda">
BLODAs</ulink>.  Don't use this option for day-to-day usage, it will slow
down every thread and socket creation!</para>
</listitem>

<listitem>
<para><envar>(no)dosfilewarning</envar> - If set, Cygwin will warn the
first time a user uses an "MS-DOS" style path name rather than a POSIX-style
path name.  Defaults to set.</para>
</listitem>

<listitem>
<para><envar>(no)export</envar> - If set, the final values of these
settings are re-exported to the environment as <envar>CYGWIN</envar> again.
Defaults to off.</para>
</listitem>

<listitem>
<para>
<envar>error_start:Win32filepath</envar> - if set, runs 
<filename>Win32filepath</filename> when cygwin encounters a fatal error,
which is useful for debugging.  <filename>Win32filepath</filename> is
usually set to the path to <command>gdb</command> or
<command>dumper</command>, for example
<filename>C:\cygwin\bin\gdb.exe</filename>. 
There is no default set.
</para>
</listitem>

<listitem>
<para><envar>(no)glob[:ignorecase]</envar> - if set, command line arguments
containing UNIX-style file wildcard characters (brackets, braces, question mark,
asterisk, escaped with \) are expanded into lists of files that match 
those wildcards.
This is applicable only to programs run from non-Cygwin programs such as a CMD prompt.
That means that this setting does not affect globbing operations for shells such as
bash, sh, tcsh, zsh, etc.
Default is set.</para>
<para>This option also accepts an optional <literal>[no]ignorecase</literal> modifer.
If supplied, wildcard matching is case insensitive.  The default is <literal>noignorecase</literal></para>
</listitem>

<listitem>
<para><envar>(no)pipe_byte</envar> - causes Cygwin to open pipes in byte mode rather than
message mode.</para>
</listitem>

<listitem>
<para><envar>proc_retry:n</envar> - causes <function>fork()</function> and
<function>exec*()</function> to retry n times when a child process fails
due to certain windows-specific errors.  These errors usually occur when
processes are being started while a user is logging off.
</para>
</listitem>

<listitem>
<para><envar>(no)reset_com</envar> - if set, serial ports are reset
to 9600-8-N-1 with no flow control when used. This is done at open
time and when handles are inherited.  Defaults to set.</para>
</listitem>

<listitem>
<para><envar>winsymlinks:{lnk,native}</envar> - if set to just
<literal>winsymlinks</literal> or <literal>winsymlinks:lnk</literal>,
Cygwin creates symlinks as Windows shortcuts with a special header and
the R/O attribute set.  If set to <literal>winsymlinks:native</literal>,
Cygwin creates symlinks as native Windows symlinks as supported by NTFS
since Windows Vista/2008.

If not set, Cygwin creates symlinks as plain files with a magic number,
a path and the DOS SYSTEM attribute set by default, unless this is not
supported by the underlying filesystem.  For instance, on MVFS symlinks
are always created as Windows shortcuts, because it doesn't support the
DOS SYSTEM attribute, on AFS always as native symlink because it doesn't
support DOS attributes.  On NFS, symlinks are always created as native
symlinks of the underlying filesystem.
</para>

<para>Please note that symlinks created under Cygwin 1.7 or later are
not readable by older Cygwin releases because the new symlinks use UTF-16
to encode the target filename, while the old symlinks used the current
ANSI or OEM charset.</para>
</listitem>

</itemizedlist>

</sect2>

<sect2 id="cygwinenv-removed-options">
<title>Obsolete options</title>

<para>
Certain CYGWIN options available in past releases have been removed in
Cygwin 1.7 for one reason or another.  These obsolete options are listed
below.</para>

<itemizedlist mark="bullet">

<listitem>
<para><envar>(no)binmode</envar> - This option has been removed because
all file opens default to binary mode, unless the open mode has been specified
explicitly in the open(2) call.
</para>
</listitem>

<listitem>
<para><envar>check_case</envar> - This option has been removed in favor of
real case sensitivity and the per-mount option "posix=[0|1]".  For more
information, read the documentation in <xref linkend="mount-table"></xref> and
<xref linkend="pathnames-casesensitive"></xref>.</para>
</listitem>

<listitem>
<para><envar>codepage:[ansi|oem]</envar> - This option controlled
which character set is used for file and console operations.  Since Cygwin
is now doing all character conversion by itself, depending on the
application call to the <function>setlocale()</function> function, and in
turn by the setting of the environment variables <envar>$LANG</envar>,
<envar>$LC_ALL</envar>, or <envar>$LC_CTYPE</envar>, this setting
became superfluous.</para>
</listitem>

<listitem>
<para><envar>(no)envcache</envar> - Originally, <envar>envcache</envar>
controlled caching of environment variable conversion between Win32 and
POSIX.  The default setting works fine, the option was just useless.</para>
</listitem>

<listitem>
<para><envar>forkchunk:[intval]</envar> - This option allowed to influence
the <function>fork()</function> function in the way the memory of the
parent process gets copied to the child process.  This functionality was
only useful for Windows 95/98/Me.
</para>
</listitem>

<listitem>
<para><envar>(no)ntea</envar> -  This option has been removed since it
only fakes security which is considered dangerous and useless.  It also
created an uncontrollably large file on FAT and was entirely useless
on FAT32.</para>
</listitem>

<listitem>
<para><envar>(no)ntsec</envar> - This option has been removed in favor of
the per-mount option "acl"/"noacl".  For more information, read the
documentation in <xref linkend="mount-table"></xref>.</para>
</listitem>

<listitem>
<para><envar>(no)server</envar> - Originally this option had to be
enabled on the client side to use features only available when running
<command>cygserver</command>.  This option has been removed because Cygwin now
always tries to contact cygserver if a function is called which requires
cygserver being available.  For more information, read the documentation
in <xref linkend="using-cygserver"></xref>.</para>
</listitem>

<listitem>
<para><envar>(no)smbntsec</envar> - This option has been removed in favor of
the per-mount option "acl"/"noacl".  For more information, read the
documentation in <xref linkend="mount-table"></xref>.</para>
</listitem>

<listitem>
<para><envar>(no)strip_title</envar> - Removed because setting the Window title
can be controlled by the application via Escape sequences.</para>
</listitem>

<listitem>
<para><envar>(no)title</envar> - Removed because setting the Window title
can be controlled by the application via Escape sequences.</para>
</listitem>

<listitem>
<para><envar>(no)transparent_exe</envar> - This option has been removed
because the behaviour it switched on is now the standard behaviour in
Cygwin.</para>
</listitem>

<listitem>
<para><envar>(no)traverse</envar> - This option has been removed because
traverse checking is not quite correctly implemented by Microsoft and
it's behaviour has been getting worse with each new OS version.  This
complicates its usage so the option has been removed for now.</para>
</listitem>

<listitem>
<para><envar>(no)tty</envar> - If set, Cygwin enabled extra support
(i.e., termios) for UNIX-like ttys in the Windows console. This option
has been removed because it can be easily replaced by using a terminal
like <command>mintty</command>, and it does not work well with some
Windows programs.</para>
</listitem>

<listitem>
<para><envar>(no)upcaseenv</envar> - This option could be used to convert
all environment variables to uppercase.  This was the default behavior in
releases prior to Cygwin 1.7.  Since keeping the case of environment
variables intact is POSIXly correct, Cygwin now does not change the case
of environment variables, except for a restricted set to maintain minimal
backward compatibility.  The current list of always uppercased variables is:
</para>
<screen>
  ALLUSERSPROFILE
  COMMONPROGRAMFILES
  COMPUTERNAME
  COMSPEC
  HOME
  HOMEDRIVE
  HOMEPATH
  NUMBER_OF_PROCESSORS
  OS
  PATH
  PATHEXT
  PROCESSOR_ARCHITECTURE
  PROCESSOR_IDENTIFIER
  PROCESSOR_LEVEL
  PROCESSOR_REVISION
  PROGRAMFILES
  SYSTEMDRIVE
  SYSTEMROOT
  TEMP
  TERM
  TMP
  TMPDIR
  WINDIR
</screen>
</listitem>

</itemizedlist>

</sect2>

</sect1>
@


1.45
log
@	* cygwinenv.sgml (cygwinenv-implemented-options): Change description
	for winsymlink option to explain new implementation.
	* new-features.sgml (ov-new1.7.19): Add support for native symlinks and
	AFS.
@
text
@@


1.44
log
@* cygwinenv.sgml: Add pipe_byte description.
* new-features.sgml (ov-new1.7.15): Add new pipe_byte description for 1.7.15.
@
text
@d81 15
a95 5
<para><envar>(no)winsymlinks</envar> - if set, Cygwin creates
symlinks as Windows shortcuts with a special header and the R/O attribute
set. If not set, Cygwin creates symlinks as plain files with a magic number,
a path and the system attribute set. Defaults to not set since plain
file symlinks are faster to write and faster to read.</para>
@


1.43
log
@	* cygwinenv.sgml (cygwinenv-implemented-options): Add detect_bloda.
	* new-features.sgml (ov-new1.7.12): Add list items for the change to
	flock and the detect_bloda CYGWIN option.
	* overview2.sgml (ov-hi-process-problems): Add a reference to the
	detect_bloda CYGWIN option.
@
text
@d62 5
@


1.42
log
@* cygwinenv.sgml (using-cygwinenv): Clarify "glob" works.
@
text
@d15 10
@


1.41
log
@	* cygwinenv.sgml (using-cygwinenv): Move envcache, strip_title, title,
	tty, and upcaseenv options to list of obsolete options.
	* effectively.sgml (using-console): Remove section.
	* new-features.sgml (ov-new1.7.10): Document removed CYGWIN options.
	Document removed tty mode.
@
text
@d40 1
a40 1
containing UNIX-style file wildcard characters (brackets, question mark,
d43 3
a45 1
This is applicable only to programs running from a DOS command line prompt.
@


1.40
log
@	* cygwinenv.sgml: Move "forkchunk:xxx" to the removed options section.
	Change text accordingly.
@
text
@a20 8
<para><envar>(no)envcache</envar> - If set, environment variable
conversions (between Win32 and POSIX) are cached.  Note that this may
cause problems if the mount table changes, as the cache is not invalidated
and may contain values that depend on the previous mount table
contents. Defaults to set.</para>
</listitem>

<listitem>
a38 8
<para><envar>proc_retry:n</envar> - causes <function>fork()</function> and
<function>exec*()</function> to retry n times when a child process fails
due to certain windows-specific errors.  These errors usually occur when
processes are being started while a user is logging off.
</para>
</listitem>

<listitem>
d50 4
a53 26
<para><envar>(no)reset_com</envar> - if set, serial ports are reset
to 9600-8-N-1 with no flow control when used. This is done at open
time and when handles are inherited.  Defaults to set.</para>
</listitem>

<listitem>
<para><envar>(no)strip_title</envar> - if set, strips the directory
part off the window title, if any.  Default is not set.</para>
</listitem>

<listitem>
<para><envar>(no)title</envar> - if set, the title bar
reflects the name of the program currently running.  Default is not
set.</para>
</listitem>

<listitem>
<para><envar>(no)tty</envar> - if set, Cygwin enables extra support
(i.e., termios) for UNIX-like ttys in the Windows console. 
It is not compatible with some Windows programs.
Defaults to not set, in which case the tty is opened in text mode.
Note that this has been changed such that ^D works as
expected instead of ^Z, and is settable via <command>stty</command>.
This option must be specified before starting a Cygwin shell 
and it cannot be changed in the shell.  It should not be set when using
other terminals (i.e., mintty or xterm). 
d58 3
a60 33
<para><envar>(no)upcaseenv</envar> - if set, Cygwin converts all
environment variables to all-uppercase, when a Cygwin process is started
from a non-Cygwin native Windows process.  This was the default behavior in
releases prior to Cygwin 1.7.  If not set, Cygwin does not change the case
of environment variables, except for a restricted set to maintain minimal
backward compatibility and for correct handling of certain essential
variables.  The current list of always uppercased variables is:</para>
<screen>
  ALLUSERSPROFILE
  COMMONPROGRAMFILES
  COMPUTERNAME
  COMSPEC
  HOME
  HOMEDRIVE
  HOMEPATH
  NUMBER_OF_PROCESSORS
  OS
  PATH
  PATHEXT
  PROCESSOR_ARCHITECTURE
  PROCESSOR_IDENTIFIER
  PROCESSOR_LEVEL
  PROCESSOR_REVISION
  PROGRAMFILES
  SYSTEMDRIVE
  SYSTEMROOT
  TEMP
  TERM
  TMP
  TMPDIR
  WINDIR
</screen>
<para>Defaults to not set.</para>
d115 6
d157 10
d179 43
@


1.39
log
@* cygwinenv.sgml: Remove/deprecate mention of rxvt.
* effectively.sgml: Ditto.
* faq-using.xml: Ditto.
* setup-net.sgml: Ditto.
@
text
@a46 9
<para><envar>forkchunk:32768</envar> - causes <function>fork()</function>
to copy memory some number of bytes at a time, in the above example 
32768 bytes (32Kb) at a time. The default is to copy as many bytes as 
possible, which is preferable in most cases but may slow some older systems
down.
</para>
</listitem>

<listitem>
d173 1
a173 1
<para><envar>codepage:[ansi|oem]</envar> - This option controled
d183 8
@


1.38
log
@	* cygwinenv.sgml (cygwinenv-implemented-options): Try to make
	compatibility new symlinks vs. old Cygwin clearer.
@
text
@d100 1
a100 1
other terminals (i.e., rxvt or xterm). 
@


1.37
log
@Change explicitely to explicitly throughout.
@
text
@d145 6
a150 4
file symlinks are faster to write and faster to read.  The new style of
plain file symlinks is incompatible with older Cygwin releases because
the new symlinks use UTF-16 to encode the target filename, while the
old symlinks used the current ANSI or OEM charset.</para>
@


1.36
log
@	* Various syntactical and semantical fixes throughout.
@
text
@d168 1
a168 1
explicitely in the open(2) call.
@


1.35
log
@	* cygwinenv.sgml: Add text to explain new UTF-16 symlinks.
	* faq-api.xml: Add FAQ entry "Why do some of my old symlinks don't
	work anymore?"
	* new-features.sgml: Fix symlink text.  Add new UTF-16 symlinks.
	* overview2.sgml: Add text about new UTF-16 symlinks and potential
	problems with old symlinks.
	* pathnames.sgml: Fix typo.
	* setup2.sgml: Extend text about problems with symlinks.
@
text
@d47 1
a47 1
<para><envar>forkchunk:32768</envar> - causes the <function>fork()</function>
d56 4
a59 3
<para><envar>proc_retry:n</envar> - causes the <function>fork()</function> and <function>exec*()</function>
to retry n times when a child process fails due to certain windows-specific errors.  These errors usually
occur when processes are being started while a user is logging off.
d107 5
a111 5
from a non-Cygwin native Windows process.  This is how it has been done
until Cygwin 1.5.  If not set, Cygwin does not change the case of environment
variables, except for a restricted set to maintain minimal backward
compatibility and for correct handling of certain essential variables.
The current list of always uppercased variables is:</para>
d156 1
a156 1
<title>Removed options</title>
d159 3
a161 2
Some CYGWIN options have been removed in Cygwin 1.7 for one reason or another.
These removed options are listed below.</para>
d186 1
a186 1
got useless.</para>
d226 2
a227 1
it's behaviour is getting worse with each new OS version.</para>
@


1.34
log
@	* cygwinenv.sgml: Move "codepage:xxx" to the removed options section.
	Change text accordingly.
	* new-features.sgml: Try to explain new way to define character sets.
@
text
@d144 4
a147 1
file symlinks are faster to write and faster to read.</para>
@


1.33
log
@	* cygwin-ug-net.in.sgml: Update date.
	* cygwinenv.sgml: Fix codepage:utf8 text in terms of setting
	environment variables.
	* new-features.sgml: New file describing new Cygwin 1.7 features.
	Layout is preliminiary only.
	* overview.sgml: Insert content of new-features.sgml.
@
text
@a14 23
<para><envar>codepage:[ansi|oem|utf8]</envar> - This option controls
which single- or multibyte character set is used for file and console
operations.  Windows is using UTF-16 characters internally and this
option specifies how 8-byte character sets are converted to UTF-16 and
vice versa.  The default setting is <envar>ansi</envar> which means,
conversion is based on the current ANSI codepage, typically 1252 in
many Western language versions of Windows.  The name originates from the
ANSI Latin1 (ISO 8859-1) standard, used in Windows 1.0, though the
character sets have since diverged from any standard.  The second
setting selects an older, DOS-based character set, containing various
line drawing and special characters.  It is called <envar>oem</envar>
since it was originally encoded in the firmware of IBM PCs by original
equipment manufacturers (OEMs).</para>
<para>If you find that some characters (especially non-US or 'graphical' ones)
do not display correctly in Cygwin, you can use this option to select an
appropriate codepage.  Finally, <envar>utf8</envar> treats all file names
and console characters as UTF-8 chars.  Please note that, for correct
operation, you have to set the environment variable LANG or LC_ALL to
somthing like "en_US.UTF-8", otherwise many applications will not be
able to recognize UTF-8 strings correctly.</para>
</listitem>

<listitem>
d175 10
@


1.32
log
@ChangeLog:

	* configure.in: Remove --enable-server option.  Allways add the
	cygserver directory to $SUBDIRS.
	* configure: Regenerate.

cygwin/ChangeLog:

	Remove USE_SERVER define.  Accommodate throughout.
	* configure.in: Remove --enable-server option.
	* configure: Regenerate.
	* environ.cc: Remove CYGWIN=server setting.

cygserver/ChangeLog:

	* client.cc (allow_server): Remove variable.
	(client_request_get_version::client_request_get_version): Drop checking
	allow_server.

utils/ChangeLog:

	* passwd.c: Remove CYGWIN=server requirement from usage text.

doc/ChangeLog:

	* cygserver.sgml: Remove the "How to use the Cygserver services"
	section.
	* cygwinenv.sgml: Move "(no)server" to the removed options section.
	* faq-programming.xml: Remove CYGWIN=server requirement for running
	the Cygwin testsuite.
	* ntsec.sgml: Ditto for using `passwd -R'.
@
text
@d32 3
a34 3
operation, you have to set the environment variable LC_CTYPE to "C-UTF-8"
for the time being.  The reason is that newlib's multibyte conversion
functions require this setting.</para>
@


1.31
log
@	* cygwinenv.sgml: Add description for upcaseenv option.
@
text
@a102 11
<para><envar>(no)server</envar> - if set, allows client applications
to use the Cygserver facilities.  This option must be enabled explicitely
on the client side, otherwise your applications won't be able to use the
XSI IPC function calls (<function>msgget</function>,
<function>semget</function>, <function>shmget</function>, and friends)
successfully.  These function calls will return with
<literal>ENOSYS</literal>, "Bad system call".
</para>
</listitem>

<listitem>
d211 9
@


1.30
log
@	* cygwinenv.sgml: Move binmode option to list of removed options.
@
text
@d138 36
@


1.29
log
@	* Revamp documentation for Cygwin 1.7, part 1.
@
text
@a12 15
<listitem>
<para><envar>(no)binmode</envar> - if set, non-disk 
(e.g. pipe and COM ports) file opens default to binary mode 
(no CRLF translation) instead of text mode.  Defaults to set (binary
mode).  By default, devices are opened in binary mode, so this option
has little effect on normal cygwin operations.  Sockets are always
in binary mode.

It does affect two things, however.  For non-NTFS filesystems, this
option will control the line endings for standard output/input/error
for redirection from the Windows command shell.  It will also affect
the default translation mode of a pipe, although most shells set the
pipe to binary by default.
</para>
</listitem>
d144 1
d157 8
d202 1
@


1.28
log
@	* cygwinenv.sgml: Drop description of "transparent_exe" option.
@
text
@d4 3
d10 1
a10 1
by prefixing with <literal>no </literal>.</para>
d18 2
a19 1
has little effect on normal cygwin operations.
a27 30
<listitem>
<para><envar>check_case:level</envar> - THIS OPTION IS DEPRECATED.
Don't use it unless you know what you're doing and don't see any way
around it.  And even then, this option is error prone, slows down Cygwin
and not well maintained.  This option controls the behavior of
Cygwin when a user tries to open or create a file using a case different from
the case of the path as saved on the disk.
<literal>level</literal> is one of <literal>relaxed</literal>,
<literal>adjust</literal> and <literal>strict</literal>.</para>
<itemizedlist mark="bullet">
<listitem>
<para><envar>relaxed</envar> which is the default behaviour simply
ignores case. That's the default for native Windows applications as well.</para>
</listitem>
<listitem>
<para><envar>adjust</envar> behaves mostly invisible. The POSIX input
path is internally adjusted in case, so that the resulting DOS path uses the
correct case throughout. You can see the result when changing the directory
using a wrong case and calling <command>/bin/pwd</command> afterwards.</para>
</listitem>
<listitem>
<para><envar>strict</envar> results in a error message if the case
isn't correct. Trying to open a file <filename>Foo</filename> while a file
<filename>fOo</filename> exists results in a "no such file or directory"
error. Trying to create a file <filename>BAR</filename> while a file
<filename>Bar</filename> exists results in a "Filename exists with different
case" error.</para>
</listitem>
</itemizedlist>
</listitem>
d30 20
a49 14
<para><envar>codepage:[ansi|oem]</envar> - Windows console 
applications can use different character sets (codepages) for drawing
characters.  The first setting, called "ansi", is the default.
This character set contains various forms of latin characters used
in European languages.  The name originates from the ANSI Latin1
(ISO 8859-1) standard, used in Windows 1.0, though the character
sets have since diverged from any standard.  The second setting
selects an older, DOS-based character set, containing various line
drawing and special characters.  It is called "oem" since it was
originally encoded in the firmware of IBM PCs by original
equipment manufacturers (OEMs).  If you find that some characters 
(especially non-US or 'graphical' ones) do not display correctly in 
Cygwin, you can use this option to select an appropriate codepage.
</para>
d60 1
a60 1
conversions (between Win32 and POSIX) are cached.  Note that this is may
d65 1
d71 1
d83 1
d92 1
d99 1
d110 1
a110 29
<listitem>
<para><envar>(no)ntea</envar> - if set, use NT Extended Attributes to
store UNIX-like inode information.
This option only operates under Windows NT. Defaults to not set.
Only FAT and NTFS support Extended Attributes, not FAT32, so it's
of no use there.  Furthermore, on NTFS partitions ntsec, which provides
real permissions, overrides ntea, which only provides faked permissions.
So setting ntea only makes sense if you either have FAT partitions,
or if you switch off ntsec explicitely. </para>
<warning><title>Warning!</title> <para>This may create additional
<emphasis>large</emphasis> files on FAT partitions.</para></warning>
</listitem>
<listitem>
<para><envar>(no)ntsec</envar> - if set, use the NT security
model to set UNIX-like permissions on files and processes. The
file permissions can only be set on NTFS partitions. FAT/FAT32 don't
support the NT file security. Defaults to set. For more information, read
the documentation in <xref linkend="ntsec"></xref>.</para>
</listitem>
<listitem>
<para><envar>(no)smbntsec</envar> - if set, use <envar>ntsec</envar> on remote
drives as well (default is "nosmbntesc"). When setting "smbntsec" there's
a chance that you get problems with Samba shares so you should use this
option with care.  One reason for a non working <envar>ntsec</envar> on
remote drives could be insufficient permissions of the users. The requires
user rights are somewhat dangerous (SeRestorePrivilege), so it's not always
an option to grant that rights to users.  However, this shouldn't be a
problem in NT domain environments.</para>
</listitem>
d116 1
d127 1
d132 1
d136 1
a136 4
set.  Note that under Win9x the title bar is always enabled and it is
stripped by default, but this is because of the way Win9x works.  In
order not to strip, specify <literal>title</literal> or <literal>title
nostrip_title</literal>.</para>
d138 1
d151 1
d156 2
a157 1
a path and the system attribute set. Defaults to set.</para>
d160 52
@


1.27
log
@	* cygwinenv.sgml: Drop description of "traverse" option.
@
text
@a181 13
<para><envar>(no)transparent_exe</envar> - EXPERIMENTAL.  Only use this
option if you're confident to be able to live with the consequences.  If
set, several additional functions in Cygwin will handle files with .exe
suffix transparently.  These functions are <function>link(2)</function>,
<function>open(2)</function>, <function>rename(2)</function>,
<function>symlink(2)</function>, <function>unlink(2)</function>,
<function>pathconf(3)</function>.  So far, these functions have been
treated as too dangerous to act on files with .exe suffix if the .exe
suffix wasn't given explicitely in the file name argument, and this is
still the case if the transparent_exe option is not set.  Default is not
set.</para>
</listitem>
<listitem>
@


1.26
log
@* cygwinenv.sgml: Document [no]dosfilewarning option.
@
text
@a194 12
<para><envar>(no)traverse</envar> - This option only affects NT systems.
If set, Cygwin handles file permissions so that the parent directories'
permissions are checked, as it's default on POSIX systems.  If not set,
only the file's own permissions are taken into account.  This is the
default on Windows and called "bypass traverse checking".  Default was
"traverse" in version 1.5.13 and 1.5.14.  Beginning with 1.5.15, traverse
checking is disabled again since it's not correctly implemented by Microsoft
and it's behaviour is getting worse with each new OS version.  Unprivileged
terminal server sessions are practically impossible with traverse checking
switched on.  So, use at your own risk.</para>
</listitem>
<listitem>
@


1.25
log
@* cygwinenv.sgml: Rename fork_retry to proc_retry since it has turned out to be
more general than just fork.
@
text
@d73 6
d86 1
a86 1
<para><envar>(no)export</envar> - if set, the final values of these
@


1.24
log
@* cygwinenv.sgml: Explain about new fork_retry CYGWIN environment variable
setting.
@
text
@d104 3
a106 2
<para><envar>fork_retry:n</envar> - causes the <function>fork()</function>
to retry n times when a child process fails due to certain specific errors.
@


1.23
log
@	* cygwinenv.sgml: Add missing </para> at transparent_exe.
@
text
@d96 1
a96 1
<para><envar>forkchunk:32768</envar> - causes <function>fork()</function>
d104 5
@


1.22
log
@	* cygwinenv.sgml: Explain transparent_exe option.
@
text
@d180 1
a180 1
set.
@


1.21
log
@	* cygwinenv.sgml (ntea): Add some wording to scare people away
	from using this option.
@
text
@d170 13
@


1.20
log
@
2005-07-10  Joshua Daniel Franklin  <joshuadfranklin@@yahoo.com>

	* cygwinenv.sgml: Update tty section to mention rxvt and xterm.
	* how-programming.texinfo: Update GPL section of VS FAQ.
	* how-using.texinfo: Expand FAQ about out of date pacakages.
	* setup-net.sgml: Add troubleshooting setup.exe section.
@
text
@d114 8
a121 3
<para><envar>(no)ntea</envar> - if set, use the full NT Extended
Attributes to store UNIX-like inode information.
This option only operates under Windows NT. Defaults to not set. </para>
d123 1
a123 1
<emphasis>large</emphasis> files on non-NTFS partitions.</para></warning>
d128 1
a128 1
file permissions can only be set on NTFS partitions. FAT doesn't
@


1.19
log
@	* cygwinenv.sgml: Mention that check_case is deprecated.
@
text
@d178 1
a178 1
(i.e., termios) for UNIX-like ttys. 
d184 3
a186 1
and it cannot be changed in the shell.</para>
@


1.18
log
@	* cygwinenv.sgml: Add new words for (no)traverse option.
@
text
@d25 4
a28 1
<para><envar>check_case:level</envar> - Controls the behavior of
@


1.17
log
@	* cygwinenv.sgml: Add words for (no)traverse option.
@
text
@d166 6
a171 4
default on Windows and called "bypass traverse checking".  Beginning with
version 1.5.13, traverse checking (as on POSIX) is enabled by default.
If you want to switch off traverse checking for Cygwin processes and child
processes started from Cygwin processes, you have to set "notraverse".</para>
@


1.16
log
@	* .sgml: Cleanup markup for XML validity.
@
text
@d162 10
@


1.15
log
@	* cygwinenv.sgml: smbntsec is not on by default.
@
text
@d1 1
a1 1
<sect1 id="using-cygwinenv"><title>The <EnVar>CYGWIN</EnVar> environment
d4 1
a4 1
<para>The <EnVar>CYGWIN</EnVar> environment variable is used to configure
d9 1
a9 1
<itemizedlist Mark="bullet">
d30 1
a30 1
<itemizedlist Mark="bullet">
d114 2
a115 2
<Warning><Title>Warning!</Title> <para>This may create additional
<emphasis>large</emphasis> files on non-NTFS partitions.</para></Warning>
d122 1
a122 1
the documentation in <Xref Linkend="ntsec">.</para>
@


1.14
log
@	* pathnames.sgml: Remove /dev/kmem from the supported POSIX
	device list.

	* cygwinenv.sgml: Fix typo in check_case description.
@
text
@d126 7
a132 8
drives as well (this is the default). If you encounter problems with NT shares
or Samba drives, setting this to <envar>nosmbntsec</envar> could help. In that
case the permission and owner/group information is faked as on FAT partitions.
A reason for a non working <envar>ntsec</envar> on remote drives could be
insufficient permissions of the users. Since the needed user rights are
somewhat dangerous (SeRestorePrivilege) it's not always an option to grant that
rights to users.  However, this shouldn't be a problem in NT domain
environments.</para>
@


1.13
log
@2004-03-26  Joshua Daniel Franklin  <joshuadfranklin@@yahoo.com>
        * cygwinenv.sgml: Add example for CYGWIN=error_start.
        * pathnames.sgml: Update list of /dev/ devices.
@
text
@d25 1
a25 1
<para><envar>check_case:level</envar> - Controls the behaviour of
d27 1
a27 1
the case of the path as asved on the disk.
@


1.12
log
@2004-02-19  Joshua Daniel Franklin  <joshuadfranklin@@yahoo.com>

	* cygwinenv.sgml: Remove incorrect ^Z information. Add
	some tags to server option description.
	* textbinary.sgml: Remove incorrect ^Z information.
@
text
@a22 2
<warning><title>Warning!</title><para>If set in 12/98 b20.1, all files 
always open in binary mode.</para></warning>
d82 9
a90 5
<para><envar>error_start:filepath</envar> - if set, runs 
<filename>filepath</filename> when cygwin encounters a fatal error.  This is
useful for debugging.  <filename>filepath</filename> is usually set to the path
to the <command>gdb</command> or <command>dumper</command> program.
There is no default set.</para>
@


1.11
log
@	* cygwinenv.sgml: Add server option description.
@
text
@d142 7
a148 2
XSI IPC function calls (msgget, semget, shmget and friends) successfully.
These function calls will return with ENOSYS, "Bad system call".</para>
d164 3
a166 3
Defaults to not set, in which case the tty is opened in text mode 
with ^Z as EOF. Note that this has been changed such that ^D works as
expected instead of ^Z, and is settable via stty.
@


1.10
log
@
2004-01-24  Joshua Daniel Franklin  <joshuadfranklin@@yahoo.com>
	* cygwinenv.sgml: Cleanup minor markup problems.
	* dll.sgml: Cleanup minor markup problems.
	* effectively.sgml: Cleanup minor markup problems.
	* gcc.sgml: Cleanup minor markup problems.
	* ntsec.sgml: Cleanup minor markup problems.
	* pathnames.sgml: Cleanup minor markup problems.
	* setup-net.sgml: Cleanup minor markup problems.
	* textbinary.sgml: Cleanup minor markup problems.
	* windres.sgml: Cleanup minor markup problems.
@
text
@d139 5
@


1.9
log
@2004-01-11  Joshua Daniel Franklin <joshuadfranklin@@yahoo.com>

        * Makefile.in: Add new target for single-file User's Guide, use new
        cygwin.dsl for output.
        * cygwin.dsl: New file, DSSSL stylesheet for custom Cygwin output.
        * cygwin-api.in.sgml: Update to DocBook SGML 4.2 DTD.
        * cygwin-ug-net.in.sgml: Update to DocBook SGML 4.2 DTD.
        * cygwin-ug.in.sgml: Update to DocBook SGML 4.2 DTD.
        * cygwinenv.sgml: Correct some tags. Add description of default values
        to ntsec, export, and error_start items.
        * dll.sgml: Add explanation of cyg prefix for DLLs.
        * effectively.sgml: Use systemitem tag for names of Cygwin packages.
        * how-programming.texinfo: Add example to FAQ entry.
        * pathnames.sgml: Add discussion of /proc filesystem.
	* setup-net.sgml: Correct some typos and grammar.
@
text
@d68 1
d96 1
@


1.8
log
@* cygwinenv.sgml: Add section for 'CYGWIN codepage:[ansi|oem]'
@
text
@d11 1
a11 1
<para><FirstTerm>(no)binmode</FirstTerm> - if set, non-disk 
d27 1
a27 1
<para><FirstTerm>check_case:level</FirstTerm> - Controls the behaviour of
d34 1
a34 1
<para><FirstTerm>relaxed</FirstTerm> which is the default behaviour simply
d38 1
a38 1
<para><FirstTerm>adjust</FirstTerm> behaves mostly invisible. The POSIX input
d44 1
a44 1
<para><FirstTerm>strict</FirstTerm> results in a error message if the case
d55 1
a55 1
<para><FirstTerm>codepage:[ansi|oem]</FirstTerm> - Windows console 
d71 1
a71 1
<para><FirstTerm>(no)envcache</FirstTerm> - If set, environment variable
d78 3
a80 2
<para><FirstTerm>(no)export</FirstTerm> - if set, the final values of these
settings are re-exported to the environment as $CYGWIN again.</para>
d83 15
a97 5
<para><FirstTerm>error_start:filepath</FirstTerm> - if set, runs <filename>filepath</filename>
when cygwin encounters a fatal error.  This is useful for debugging.
<filename>filepath</filename> is usually set to the path to the <filename>gdb</filename>
program.</para>
<para><FirstTerm>(no)glob[:ignorecase]</FirstTerm> - if set, command line arguments
d107 1
a107 1
<para><FirstTerm>(no)ntea</FirstTerm> - if set, use the full NT Extended
d114 1
a114 1
<para><FirstTerm>(no)ntsec</FirstTerm> - if set, use the NT security
d117 2
a118 2
support the NT file security. For more information, read the documentation
in <citation>ntsec.sgml</citation>.</para>
d121 1
a121 1
<para><FirstTerm>(no)smbntsec</FirstTerm> - if set, use `ntsec' on remote
d123 7
a129 6
or Samba drives, setting this to `nosmbntsec' could help. In that case the
permission and owner/group information is faked as on FAT partitions.
A reason for a non working ntsec on remote drives could be insufficient
permissions of the users. Since the needed user rights are somewhat dangerous
(SeRestorePrivilege) it's not always an option to grant that rights to users.
However, this shouldn't be a problem in NT domain environments.</para>
d132 1
a132 1
<para><FirstTerm>(no)reset_com</FirstTerm> - if set, serial ports are reset
d137 1
a137 1
<para><FirstTerm>(no)strip_title</FirstTerm> - if set, strips the directory
d141 1
a141 1
<para><FirstTerm>(no)title</FirstTerm> - if set, the title bar
d149 1
a149 1
<para><FirstTerm>(no)tty</FirstTerm> - if set, Cygwin enables extra support
d159 1
a159 1
<para><FirstTerm>(no)winsymlinks</FirstTerm> - if set, Cygwin creates
@


1.7
log
@* overview2.sgml: Remove CTRL-Z discussion.
* cygwinenv.sgml: Expand on CYGWIN=binmode.
@
text
@d53 17
@


1.6
log
@        * cygwinenv.sgml: Add text for `check_case' option.
@
text
@d13 9
a21 3
(no CR/LF/Ctrl-Z translations) instead of text mode.
Defaults to set (binary mode). This option must be set
before starting a Cygwin shell to have an effect on redirection.
@


1.5
log
@        * cygwinenv.sgml: Add text for `winsymlinks' option.
        * how-api.texinfo: Add text to explain new symlinks==shortcuts
        and the CYGWIN setting `(no)winsymlinks'.
        * how-using.texinfo: Add text that Cygwin now treats shortcuts
        as symlinks.
@
text
@d21 27
@


1.4
log
@        * cygwinenv.sgml: Fix typo in <filename>. Add missing </para>.
@
text
@d96 6
@


1.3
log
@	* cygwinenv.sgml: Add text for `smbntsec' option.
@
text
@d18 1
a18 1
always open in binary mode.</para> </warning>
d32 1
a32 1
<para><FirstTerm>error_start:filepath</FirstTerm> - if set, runs <filename>filepath</filepath>
d35 1
a35 1
program.
@


1.2
log
@* cygwinenv.sgml: Remove CYGWIN=strace option.  Update CYGWIN options.
* how-programming.texinfo: Remove stuff about CYGWIN=strace.
* setup2.sgml: Remove CYGWIN=strace example.
@
text
@d55 1
a55 1
file permissions can only be set on NTFS partitions. FAT and SAMBA doesn't
d58 10
@


1.1
log
@Initial revision
@
text
@d32 5
a36 1
<para><FirstTerm>(no)glob</FirstTerm> - if set, command line arguments
d42 2
a62 10
</listitem>
<listitem>
<para><FirstTerm>strace=n[:cache][,filename]</FirstTerm> - configures system
tracing.  Off by default, setting various bits in <literal>n</literal> (a
bit flag) enables various types of system messages.  Setting
<literal>n</literal> to 1 enables most messages.  Other values can be found
in <filename>sys/strace.h</filename>.  The <literal>:cache</literal> option
lets you specify how many lines to cache before flushing the output
(example: <literal>strace=1:20</literal>).  The <literal>filename</literal>
option lets you send the messages to a file instead of the screen. </para>
@


1.1.1.1
log
@import winsup-2000-02-17 snapshot
@
text
@@
