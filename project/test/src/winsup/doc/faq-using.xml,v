head	1.62;
access;
symbols
	cygwin-1_7_35-release:1.62
	cygwin-1_7_34-release:1.58
	cygwin-1_7_33-release:1.54
	cygwin-1_7_32-release:1.54
	cygwin-1_7_31-release:1.54
	cygwin-1_7_30-release:1.54
	cygwin-1_7_29-release:1.54
	cygwin-1_7_29-release-branchpoint:1.54.0.2
	cygwin-1_7_28-release:1.54
	cygwin-1_7_27-release:1.53
	cygwin-1_7_26-release:1.53
	cygwin-1_7_25-release:1.53
	cygwin-1_7_24-release:1.53
	cygwin-1_7_23-release:1.53
	cygwin-1_7_22-release:1.53
	cygwin-1_7_21-release:1.53
	cygwin-1_7_20-release:1.51
	cygwin-1_7_19-release:1.50
	cygwin-64bit-postmerge:1.47
	cygwin-64bit-premerge-branch:1.47.0.2
	cygwin-64bit-premerge:1.47
	cygwin-1_7_18-release:1.47
	cygwin-1_7_17-release:1.46
	cygwin-64bit-branch:1.46.0.2
	cygwin-1_7_16-release:1.45
	cygwin-1_7_15-release:1.45
	cygwin-1_7_14_2-release:1.45
	cygwin-1_7_14-release:1.45
	cygwin-1_7_12-release:1.44
	cygwin-1_7_11-release:1.42
	cygwin-1_7_10-release:1.40
	cygwin-1_7_9-release:1.33
	cygwin-1_7_8-release:1.33
	cygwin-1_7_7-release:1.33
	cygwin-1_7_5-release:1.33
	cygwin-1_7_4-release:1.33
	cygwin-1_7_3-release:1.33
	cygwin-1_7_2-release:1.32
	cygwin-1_7_1-release:1.27
	cv-branch-2:1.21.0.2
	cr-0x5f1:1.5.0.4
	cv-branch:1.5.0.2
	cr-0x3b58:1.4.0.2;
locks; strict;
comment	@# @;


1.62
date	2015.02.25.17.41.23;	author tangent;	state Exp;
branches;
next	1.61;

1.61
date	2015.02.25.01.09.38;	author tangent;	state Exp;
branches;
next	1.60;

1.60
date	2015.02.17.22.38.54;	author tangent;	state Exp;
branches;
next	1.59;

1.59
date	2015.02.11.08.52.04;	author corinna;	state Exp;
branches;
next	1.58;

1.58
date	2015.02.04.10.40.22;	author corinna;	state Exp;
branches;
next	1.57;

1.57
date	2015.02.03.13.48.43;	author corinna;	state Exp;
branches;
next	1.56;

1.56
date	2014.12.10.12.33.25;	author corinna;	state Exp;
branches;
next	1.55;

1.55
date	2014.07.30.11.07.34;	author corinna;	state Exp;
branches;
next	1.54;

1.54
date	2014.01.29.19.01.53;	author cgf;	state Exp;
branches;
next	1.53;

1.53
date	2013.06.19.17.34.07;	author corinna;	state Exp;
branches;
next	1.52;

1.52
date	2013.06.19.08.42.48;	author corinna;	state Exp;
branches;
next	1.51;

1.51
date	2013.06.05.09.36.58;	author corinna;	state Exp;
branches;
next	1.50;

1.50
date	2013.06.05.07.57.39;	author corinna;	state Exp;
branches;
next	1.49;

1.49
date	2013.05.01.23.30.22;	author tangent;	state Exp;
branches;
next	1.48;

1.48
date	2013.04.23.15.59.21;	author corinna;	state Exp;
branches;
next	1.47;

1.47
date	2013.03.06.11.28.29;	author corinna;	state Exp;
branches;
next	1.46;

1.46
date	2012.08.03.10.39.45;	author corinna;	state Exp;
branches;
next	1.45;

1.45
date	2012.04.23.22.10.37;	author yselkowitz;	state Exp;
branches;
next	1.44;

1.44
date	2012.03.01.07.35.02;	author yselkowitz;	state Exp;
branches;
next	1.43;

1.43
date	2012.02.27.19.45.26;	author yselkowitz;	state Exp;
branches;
next	1.42;

1.42
date	2012.02.21.16.26.36;	author corinna;	state Exp;
branches;
next	1.41;

1.41
date	2012.02.08.10.04.16;	author corinna;	state Exp;
branches;
next	1.40;

1.40
date	2012.02.04.11.40.44;	author corinna;	state Exp;
branches;
next	1.39;

1.39
date	2011.12.13.03.54.59;	author cgf;	state Exp;
branches;
next	1.38;

1.38
date	2011.11.21.09.16.23;	author corinna;	state Exp;
branches;
next	1.37;

1.37
date	2011.11.18.11.39.31;	author corinna;	state Exp;
branches;
next	1.36;

1.36
date	2011.11.05.18.42.55;	author jturney;	state Exp;
branches;
next	1.35;

1.35
date	2011.08.04.18.25.41;	author corinna;	state Exp;
branches;
next	1.34;

1.34
date	2011.05.02.11.56.36;	author corinna;	state Exp;
branches;
next	1.33;

1.33
date	2010.03.31.21.06.43;	author cgf;	state Exp;
branches;
next	1.32;

1.32
date	2010.03.17.10.12.32;	author corinna;	state Exp;
branches;
next	1.31;

1.31
date	2010.03.11.10.22.34;	author corinna;	state Exp;
branches;
next	1.30;

1.30
date	2010.01.25.17.04.29;	author corinna;	state Exp;
branches;
next	1.29;

1.29
date	2010.01.25.10.50.21;	author corinna;	state Exp;
branches;
next	1.28;

1.28
date	2010.01.15.21.41.47;	author corinna;	state Exp;
branches;
next	1.27;

1.27
date	2009.10.03.13.33.18;	author davek;	state Exp;
branches;
next	1.26;

1.26
date	2009.08.12.22.03.18;	author davek;	state Exp;
branches;
next	1.25;

1.25
date	2009.07.23.08.49.06;	author corinna;	state Exp;
branches;
next	1.24;

1.24
date	2009.07.20.10.10.48;	author corinna;	state Exp;
branches;
next	1.23;

1.23
date	2009.07.01.22.07.31;	author cgf;	state Exp;
branches;
next	1.22;

1.22
date	2009.06.12.15.16.27;	author corinna;	state Exp;
branches;
next	1.21;

1.21
date	2009.05.14.11.03.43;	author corinna;	state Exp;
branches;
next	1.20;

1.20
date	2009.04.07.13.04.43;	author corinna;	state Exp;
branches;
next	1.19;

1.19
date	2009.04.01.16.56.08;	author corinna;	state Exp;
branches;
next	1.18;

1.18
date	2009.03.31.10.54.28;	author corinna;	state Exp;
branches;
next	1.17;

1.17
date	2009.03.30.09.23.13;	author davek;	state Exp;
branches;
next	1.16;

1.16
date	2009.03.03.10.36.59;	author corinna;	state Exp;
branches;
next	1.15;

1.15
date	2009.02.23.16.33.17;	author corinna;	state Exp;
branches;
next	1.14;

1.14
date	2009.02.14.20.56.48;	author corinna;	state Exp;
branches;
next	1.13;

1.13
date	2009.02.14.20.52.50;	author corinna;	state Exp;
branches;
next	1.12;

1.12
date	2009.02.12.15.30.03;	author corinna;	state Exp;
branches;
next	1.11;

1.11
date	2009.02.12.14.45.50;	author corinna;	state Exp;
branches;
next	1.10;

1.10
date	2008.11.30.22.37.45;	author cgf;	state Exp;
branches;
next	1.9;

1.9
date	2008.06.20.01.46.34;	author cgf;	state Exp;
branches;
next	1.8;

1.8
date	2007.12.29.18.20.13;	author davek;	state Exp;
branches;
next	1.7;

1.7
date	2007.07.18.15.43.37;	author briand;	state Exp;
branches;
next	1.6;

1.6
date	2006.08.26.19.11.00;	author joshuadfranklin;	state Exp;
branches;
next	1.5;

1.5
date	2006.04.05.04.09.55;	author joshuadfranklin;	state Exp;
branches;
next	1.4;

1.4
date	2005.12.04.03.55.28;	author joshuadfranklin;	state Exp;
branches;
next	1.3;

1.3
date	2005.08.27.04.53.15;	author joshuadfranklin;	state Exp;
branches;
next	1.2;

1.2
date	2005.08.27.01.32.36;	author joshuadfranklin;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.06.05.14.41;	author joshuadfranklin;	state Exp;
branches;
next	;


desc
@@


1.62
log
@Applied the "chgrp `id -g`" improvements suggested by Corinna for the FAQ
item about SSH keys not working in 1.7.34+.
@
text
@<?xml version="1.0" encoding='UTF-8'?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook V4.5//EN"
		"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">

<qandadiv id="faq.using">
<title>Using Cygwin</title>

<!-- faq-problems.xml -->
<qandaentry id="faq.using.missing-dlls">
<question><para>Why can't my application locate cygncurses-8.dll?  or cygintl-3.dll?  or cygreadline6.dll?  or ...?</para></question>
<answer>

<para>Well, something has gone wrong somehow...
</para>
<para>To repair the damage, you must run Cygwin Setup again, and re-install the
package which provides the missing DLL package.
</para>
<para>If you already installed the package at one point, Cygwin Setup won't
show the option to install the package by default.  In the
``Select packages to install'' dialog, click on the <literal>Full/Part</literal>
button.  This lists all packages, even those that are already
installed.  Scroll down to locate the missing package, for instance
<literal>libncurses8</literal>.  Click on the ``cycle'' glyph until it says
``Reinstall''.  Continue with the installation.
</para>
<para>For a detailed explanation of the general problem, and how to extend
it to other missing DLLs and identify their containing packages, see
<ulink url="https://cygwin.com/ml/cygwin/2002-01/msg01619.html"/>.
</para>
</answer></qandaentry>

<qandaentry id="faq.using.startup-slow">
<question><para>Starting a new terminal window is slow. What's going on?</para></question>
<answer>

<para>There are many possible causes for this.</para>

<para>If your terminal windows suddenly began starting slowly after a
Cygwin upgrade, it may indicate issues in the authentication
setup.</para>

<para>For almost all its lifetime, Cygwin has used Unix-like
<filename>/etc/passwd</filename> and <filename>/etc/group</filename>
files to mirror the contents of the Windows SAM and AD databases.
Although these files can still be used, since Cygwin 1.7.34, new
installations now use the SAM/AD databases directly.</para>

<para>To switch to the new method, move these two files out of the way
and restart the Cygwin terminal. That runs Cygwin in its new default
mode.</para>

<para>If you are on a system that isn't using AD domain logins, this
makes Cygwin use the native Windows SAM database directly, which may be
faster than the old method involving <filename>/etc/passwd</filename>
and such. At worst, it will only be a bit slower. (The speed difference
you see depends on which benchmark you run.) For the AD case, it can be
slower than the old method, since it is trading a local file read for a
network request. Version 1.7.35 will reduce the number of AD server
requests the DLL makes relative to 1.7.34, with the consequence that you
will now have to alter <filename>/etc/nsswitch.conf</filename> in order
to change your Cygwin home directory, instead of being able to change it
from the AD configuration.</para>

<para>If you are still experiencing very slow shell startups, there are
a number of other things you can look into:</para>

<orderedlist>
  <listitem>
    <para>One common cause of slow Cygwin Terminal starts is a bad DNS
    setup. This particularly affects AD clients, but there may be other
    things in your Cygwin startup that depend on getting fast answers
    back from a network server.</para>
    
    <para>Keep in mind that this may affect Cygwin even when the domain
    controller is on the same machine as Cygwin, or is on a nearby
    server. A bad DNS server IP can cause long delays while the local
    TCP/IP stack times out on a connection to a server that simply isn't
    there, for example.</para>
  </listitem>

  <listitem>
    <para>Another cause for AD client system is slow DC replies,
    commonly observed in configurations with remote DC access. The
    Cygwin DLL queries information about every group you're in to
    populate the local cache on startup. You may speed up this process a
    little by caching your own information in local files. Run these
    commands in a Cygwin terminal with write access to
    <filename>/etc</filename>:</para>

    <screen>getent passwd $(id -u) > /etc/passwd
getent group $(id -G) > /etc/group</screen>

    <para>Also, set <filename>/etc/nsswitch.conf</filename> as
    follows:</para>

    <screen>passwd: files db
group:  files db</screen>

    <para>This will limit the need for Cygwin to contact the AD domain
    controller (DC) while still allowing for additional information to
    be retrieved from DC, such as when listing remote
    directories.</para>
  </listitem>

  <listitem>
    <para>Either in addition to the previous item or instead of it, you
    can run <ulink
    url="https://cygwin.com/cygwin-ug-net/using-cygserver.html"><command>cygserver</command></ulink>
    as a local caching service to speed up DC requests.</para>

    <para>Cygwin programs will check with <command>cygserver</command>
    before trying to query the DC directly.</para>
  </listitem>

  <listitem>
    <para>A less preferable option is to create a static read-only cache
    of the authentication data. This is the old-fashioned method of
    making Cygwin integrate with AD, the only method available in
    releases before 1.7.34. To do this, run <command>mkpasswd</command>
    and <command>mkgroup</command>, then put the following into
    <filename>/etc/nsswitch.conf</filename> to make Cygwin treat these
    files as the only sources of user and group information:</para>

    <screen>passwd: files
group:  files</screen>

    <para>By leaving out the <computeroutput>db</computeroutput> option,
    we are telling the Cygwin DLL not to even try to do AD lookups. If
    your AD servers are slow, this local cache will speed things up. The
    downside is that you open yourself up to the <ulink
    url="http://en.wikipedia.org/wiki/Cache_(computing)">stale cache
    problem</ulink>: any time the AD databases change, your local cache
    will go out of date until you update the files manually.</para>
  </listitem>
</orderedlist>

<para>If none of the above helps, the best troubleshooting method is to
run your startup scripts in debug mode. Right-click your Cygwin Terminal
icon, go to Properties, and edit the command. It should be something
like <command>C:\cygwin\bin\mintty.exe -i /Cygwin-Terminal.ico
-</command>.  Assuming you are using Bash for your login shell, change
it to <command>C:\cygwin\bin\mintty /bin/bash -lx</command> then try
running Cygwin Terminal again. The <option>-x</option> option tells Bash
to write every command it runs to the terminal before launching it. If
the terminal immediately starts filling with lines of text but then
pauses, the line where the output paused is your clue as to what's going
on. The Cygwin DLL proper probably isn't the cause of the slowdown in
this case, since those delays happen before the first line of text
appears in the terminal.</para>

</answer></qandaentry>

<qandaentry id="faq.using.slow">
<question><para>Why is Cygwin suddenly <emphasis>so</emphasis> slow?</para></question>
<answer>

<para>If suddenly <emphasis>every</emphasis> command takes a
<emphasis>very</emphasis> long time, then something is probably attempting to 
access a network share.  You may have the obsolete <literal>//c</literal>
notation in your PATH or startup files.  Using <literal>//c</literal> means
to contact the <emphasis>network server</emphasis> <literal>c</literal>, which
will slow things down tremendously if it does not exist.  
</para>
</answer></qandaentry>

<qandaentry id="faq.using.shares">
<question><para>Why can't my services access network shares?</para></question>
<answer>

<para>If your service is one of those which switch the user context
(sshd, inetd, etc), then it depends on the method used to switch to
another user.  This problem as well as its solution is described in
detail in the Cygwin User's Guide, see
<ulink url="https://cygwin.com/cygwin-ug-net/ntsec.html"/>.
</para>
<para>Workarounds include using public network share that does not require
authentication (for non-critical files), providing your password to a
<command>net use</command> command, or running the service as your own
user with <literal>cygrunsrv -u</literal> (see
<literal>/usr/share/doc/Cygwin/cygrunsrv.README</literal> for more
information).
</para>
</answer></qandaentry>

<qandaentry id="faq.using.path">
<question><para>How should I set my PATH?</para></question>
<answer>

<para>This is done for you in the file /etc/profile, which is sourced by bash
when you start it from the Desktop or Start Menu shortcut, created by
<literal>setup.exe</literal>.  The line is
</para>
<screen>
	PATH="/usr/local/bin:/usr/bin:/bin:$PATH"
</screen>

<para>Effectively, this <emphasis role='bold'>prepends</emphasis> /usr/local/bin and /usr/bin to your
Windows system path.  If you choose to reset your PATH, say in
$HOME/.bashrc, or by editing etc/profile directly, then you should
follow this rule.  You <emphasis role='bold'>must</emphasis> have <literal>/usr/bin</literal> in your PATH
<emphasis role='bold'>before</emphasis> any Windows system directories.  (And you must not omit
the Windows system directories!)  Otherwise you will likely encounter
all sorts of problems running Cygwin applications.
</para>
<para>If you're using another shell than bash (say, tcsh), the mechanism
is the same, just the names of the login scripts are different.
</para>
</answer></qandaentry>

<qandaentry id="faq.using.not-found">
<question><para>Bash (or another shell) says "command not found", but it's right there!</para></question>
<answer>

<para>If you compile a program, you might find that you can't run it:
</para>
<screen>
	bash$ gcc -o hello hello.c
        bash$ hello
        bash: hello: command not found
</screen>

<para>Unlike the Windows default behaviour, Unix shells like bash do not look for programs in <literal>.</literal> (the current
directory) by default.  You can add <literal>.</literal> to your PATH (see above),
but this is not recommended (at least on UNIX) for security reasons.
Just tell bash where to find it, when you type it on the command line:
</para>
<screen>
	bash$ gcc -o hello hello.c
        bash$ ./hello
        Hello World!
</screen>

</answer></qandaentry>

<qandaentry id="faq.using.converting-paths">
<question><para>How do I convert between Windows and UNIX paths?</para></question>
<answer>

<para>Use the 'cygpath' utility.  Type '<literal>cygpath --help</literal>' for
information.  For example (on my installation):
<screen>
	bash$ cygpath --windows ~/.bashrc
        D:\starksb\.bashrc
        bash$ cygpath --unix C:/cygwin/bin/ls.exe
        /usr/bin/ls.exe
        bash$ cygpath --unix C:\\cygwin\\bin\\ls.exe
        /usr/bin/ls.exe
</screen>
Note that bash interprets the backslash '\' as an escape character, so
you must type it twice in the bash shell if you want it to be recognized
as such.
</para>
</answer></qandaentry>

<qandaentry id="faq.using.bashrc">
<question><para>Why doesn't bash read my .bashrc file on startup?</para></question>
<answer>

<para>Your .bashrc is read from your home directory specified by the HOME
environment variable.  It uses /.bashrc if HOME is not set.  So you need
to set HOME (and the home dir in your passwd account information) correctly.
</para>
</answer></qandaentry>

<qandaentry id="faq.using.bash-insensitive">
<question><para>How can I get bash filename completion to be case insensitive?</para></question>
<answer>

<para>Add the following to your <literal>~/.bashrc</literal> file:
</para>
<screen>
	shopt -s nocaseglob
</screen>

<para>and add the following to your <literal>~/.inputrc</literal> file:
</para>
<screen>
	set completion-ignore-case on
</screen>

</answer></qandaentry>

<qandaentry id="faq.using.filename-spaces">
<question><para>Can I use paths/filenames containing spaces in them?</para></question>
<answer>

<para>Cygwin does support spaces in filenames and paths.  That said, some
utilities that use the library may not, since files don't typically
contain spaces in Unix.  If you stumble into problems with this, you
will need to either fix the utilities or stop using spaces in filenames
used by Cygwin tools.
</para>
<para>In particular, bash interprets space as a word separator.  You would have
to quote a filename containing spaces, or escape the space character.
For example:
<screen>
	bash-2.03$ cd '/cygdrive/c/Program Files'
</screen>
or
<screen>
	bash-2.03$ cd /cygdrive/c/Program\ Files
</screen>
</para>
</answer></qandaentry>

<qandaentry id="faq.using.shortcuts">
<question><para>Why can't I cd into a shortcut to a directory?</para></question>
<answer>

<para>Cygwin does not follow MS Windows Explorer Shortcuts
(*.lnk files).  It sees a shortcut as a regular file and this you
cannot "cd" into it.
</para>
<para>Cygwin is also capable to create POSIX symlinks as Windows shortcuts 
(see the CYGWIN environment variable option "winsymlinks"), but these
shortcuts are different from shortcuts created by native Windows
applications.  Windows applications can usually make use of Cygwin
shortcuts but not vice versa.  This is by choice.  The reason is that
Windows shortcuts may contain a bunch of extra information which would
get lost, if, for example, Cygwin tar archives and extracts them as
symlinks.
</para>
<para>Changing a Cygwin shortcut in Windows Explorer usually changes a Cygwin
shortcut into a Windows native shortcut.  Afterwards, Cygwin will not
recognize it as symlink anymore.
</para>
</answer></qandaentry>

<qandaentry id="faq.using.find">
<question><para>I'm having basic problems with find.  Why?</para></question>
<answer>

<para>Make sure you are using the find that came with Cygwin and that you
aren't picking up the Win32 find command instead.  You can verify that
you are getting the right one by doing a "type find" in bash.
</para>
<para>If the path argument to find, including current directory (default), is
itself a symbolic link, then find will not traverse it unless you
specify the <literal>-follow</literal> option.  This behavior is different than most
other UNIX implementations, but is not likely to change.
</para>
<para>If find does not seem to be producing enough results, or seems to be
missing out some directories, you may be experiencing a problem with one
of find's optimisations.  The absence of <literal>.</literal> and <literal>..</literal>
directories on some filesystems, such as DVD-R UDF, can confuse find.
See the documentation for the option <literal>-noleaf</literal> in the man page.
</para>
</answer></qandaentry>

<qandaentry id="faq.using.su">
<question><para>Why doesn't <literal>su</literal> work?</para></question>
<answer>

<para>The <literal>su</literal> command has been in and out of Cygwin distributions, but
it has not been ported to Cygwin and has never worked.  It is
currently installed as part of the sh-utils, but again, it does not work.
</para>
<para>You should rather install <literal>sshd</literal> and use
<literal>ssh username@@localhost</literal> as a <literal>su</literal>
replacement.
</para>
<para>For some technical background into why <literal>su</literal> doesn't
work, read
<ulink url="https://www.cygwin.com/ml/cygwin/2003-06/msg00897.html"/> and
related messages.
</para>
</answer></qandaentry>

<qandaentry id="faq.using.man">
<question><para>Why doesn't <literal>man -k</literal>,
<literal>apropos</literal> or <literal>whatis</literal> work?</para></question>
<answer>

<para>Before you can use <literal>man -k</literal>, <literal>apropos</literal>
or <literal>whatis</literal>, you
must create the whatis database.  Just run the command
</para>
<screen>
	/usr/sbin/makewhatis
</screen>

<para>(it may take a minute to complete).
</para>
</answer></qandaentry>

<qandaentry id="faq.using.chmod">
<question><para>Why doesn't <literal>chmod</literal> work?</para></question>
<answer>

<para>If you're using FAT32 instead of NTFS, <literal>chmod</literal> 
will fail since FAT32 does not provide any permission information.
You should really consider converting the drive to NTFS with
<literal>CONVERT.EXE</literal>.  FAT and FAT32 are barely good enough
for memory cards or USB sticks to exchange pictures...
</para>
<para>For other cases, understand that Cygwin attempts to show UNIX 
permissions based on the security features of Windows, so the Windows 
ACLs are likely the source of your problem.  See the Cygwin User's 
Guide at <ulink url="https://cygwin.com/cygwin-ug-net/ntsec.html"/>
for more information on how Cygwin maps Windows permissions.
</para>
</answer></qandaentry>

<qandaentry id="faq.using.shell-scripts">
<question><para>Why doesn't my shell script work?</para></question>
<answer>

<para>There are two basic problems you might run into.  One is the fact that
<command>/bin/sh</command> is really <command>bash</command>.
It could be missing some features you might expect in
<command>/bin/sh</command>, if you are used to <command>/bin/sh</command>
actually being <command>zsh</command> (MacOS X "Panther") or
<command>ksh</command> (Tru64).  
</para>

<para>Or, it could be a permission problem, and Cygwin doesn't understand
that your script is executable.  On NTFS or NFS just make the script
executable using <literal>chmod +x</literal>.  However,
<literal>chmod</literal> may not work due to restrictions of the
filesystem (see FAQ entry above).  In this case Cygwin must read the
contents of files to determine if they are executable.  If your script
does not start with
</para>
<screen>
	#! /bin/sh
</screen>

<para>(or any path to a script interpreter, it does not have to be /bin/sh)
then Cygwin will not know it is an executable script.  The Bourne shell
idiom
</para>
<screen>
	:
	# This is the 2nd line, assume processing by /bin/sh
</screen>

<para>also works.
</para>
<para>Note that you can use the filesystem flag <literal>cygexec</literal> in
<filename>/etc/fstab</filename> to force Cygwin to treat all files
under the mount point as executable.  This can be used for individual
files as well as directories.  Then Cygwin will not bother to read files
to determine whether they are executable.
</para>
</answer></qandaentry>

<qandaentry id="faq.using.printing">
<question><para>How do I print under Cygwin?</para></question>
<answer>

<para>lpr is available in the cygutils package.  Some <ulink url="https://cygwin.com/ml/cygwin/2008-05/msg00123.html">usage hints</ulink> are available courtesy of Rodrigo Medina.
</para>
<para>Jason Tishler has written a couple of messages that explain how to use
a2ps (for nicely formatted text in PostScript) and ghostscript (to print
PostScript files on non-PostScript Windows printers).  Start at
<ulink url="https://cygwin.com/ml/cygwin/2001-04/msg00657.html"/>.  Note that
these are old mails and <command>a2ps</command> as well as
<command>file</command> are long available as part of the Cygwin distribution.
</para>
<para>Alternatively, you can use the Windows <command>print</command>
command.  Type
</para>
<screen>
	bash$ print /\?
</screen>

<para>for usage instructions (note the <literal>?</literal> must be escaped
from the shell).
</para>
<para>Finally, you can simply <command>cat</command> the file to the printer's share name:
</para>
<screen>
	bash$ cat myfile &gt; //host/printer
</screen>

<para>You may need to press the formfeed button on your printer or append the
formfeed character to your file.
</para>
</answer></qandaentry>

<qandaentry id="faq.using.unicode">
<question><para>Why don't international (Unicode) characters work?</para></question>
<answer>

<para>Internationalization is a complex issue. The short answer is that
Cygwin relies on the setting of the setting of LANG/LC_xxx environment
variables. The long answer can be found in the User's Guide in the
section <ulink url="https://cygwin.com/cygwin-ug-net/setup-locale.html">Internationalization</ulink>
</para>

<para> Cygwin uses UTF-8 by default.  To use a different character set, you
need to set the LC_ALL, LC_CTYPE or LANG environment variables.</para>
</answer></qandaentry>

<qandaentry id="faq.using.weirdchars">
<question><para>My application prints international characters but I only
see gray boxes</para></question>
<answer>
<para>In the case of Cygwin programs, this likely means that the
character set as determined by the LC_ALL, LC_CTYPE or LANG environment
variables does not match the one set on the Text page of the Cygwin Terminal's
options.  Setting the locale in the terminal's options will set the LANG
variable accordingly.</para>
<para>Non-Cygwin programs in the Cygwin Terminal do not usually take
heed of the locale environment variables.  Instead, they often use the
so-called console codepage, which can be determined with the command
<command>cmd /c chcp</command> followed by the appropriate Windows
codepage number.  The codepage number for Cygwin's default UTF-8 character
set is 65001.</para>
</answer></qandaentry>

<qandaentry id="faq.using.multiple-copies">
<question><para>Is it OK to have multiple copies of the DLL?</para></question>
<answer>
<para>Yes, as long as they are used in strictly separated installations.</para>
<para>The Cygwin DLL has to handle various sharing situations between
multiple processes.  It has to keep a process table.  It has to maintain
a mount table which is based on the installation path of the Cygwin DLL.</para>
<para>For that reason, the Cygwin DLL maintains shared resources based on
a hash value created from its own installation path.  Each Cygwin DLL
on the machine constitutes a Cygwin installation, with the directory
the Cygwin DLL resides in treated as "/bin", the parent directory as "/".
</para>
<para>Therefore, you can install two or more separate Cygwin distros on
a single machine.  Each of these installations use their own Cygwin DLL,
and they don't share the default POSIX paths, nor process tables, nor
any other shared resource used to maintain the installation.</para>
<para>However, a clean separation requires that you don't try to run
executables of one Cygwin installation from processes running in another
Cygwin installation.  This may or may not work, but the chances that the
result is not what you expect are pretty high.</para>
<para>If you get the error "shared region is corrupted" or "shared region
version mismatch" it means you have multiple versions of cygwin1.dll
running at the same time which conflict with each other.  Apart from
mixing executables of different Cygwin installations, this could also happen
if you have one a single Cygwin installation, for example, if you update the
Cygwin package without exiting <emphasis>all</emphasis> Cygwin apps (including
services like sshd) beforehand.</para>
<para>The only DLL that is sanctioned by the Cygwin project is the one that
you get by running <ulink url="https://cygwin.com/install.html">setup-x86.exe or setup-x86_64.exe</ulink>,
installed in a directory controlled by this program.  If you have other
versions on your system and desire help from the cygwin project, you should
delete or rename all DLLs that are not installed by
<filename>setup.exe</filename>.
</para>
<para>If you're trying to find multiple versions of the DLL that are causing
this problem, reboot first, in case DLLs still loaded in memory are the
cause.  Then use the Windows System find utility to search your whole
machine, not just components in your PATH (as 'type' would do) or
cygwin-mounted filesystems (as Cygwin 'find' would do).
</para>
</answer></qandaentry>

<qandaentry id="faq.using.third-party.multiple-copies">
<question><para>
I read the above but I want to bundle Cygwin with a product, and ship it
to customer sites.  How can I do this without conflicting with any Cygwin
installed by the user?
</para></question>
<answer><para>
Usually, if you keep your installation separate, nothing bad should happen.
However, for the user's convenience, and to avoid potential problems which
still can occur, consider to integrate your product with an already existing
Cygwin installation on the user's machine, or, if there is none, consider
to install the official Cygwin distro on behalf of the user and integrate
your tools from there.  (If you write a tool to make this easy, consider
contributing it for others to use)
</para></answer></qandaentry>

<qandaentry id="faq.using.bundling-cygwin">
<question><para>
Can I bundle Cygwin with my product for free?
</para></question>
<answer><para>
Only if you comply with Cygwin's <ulink
url="https://cygwin.com/licensing.html">license</ulink> very carefully.  If you
choose to distribute cygwin1.dll, you must be willing to distribute the
exact source code used to build that copy of cygwin1.dll as per the
terms of the GPL.  If you ship applications that link with cygwin1.dll,
you must either provide those applications' source code under a
GPL-compatible license, *or* purchase a cygwin license from Red Hat.
</para></answer></qandaentry>

<qandaentry id="faq.using.older-cygwin-conflict">
<question><para>
But doesn't that mean that if some application installs an older Cygwin
DLL on top of a newer DLL, my application will break?
</para></question>
<answer><para>
It depends on what you mean by "break".  If the application installs a
version of the Cygwin DLL in another location than Cygwin's /bin
directory then the rules in
<xref linkend="faq.using.third-party.multiple-copies"></xref> apply. 
If the application installs an older version of the DLL in /bin then you
should complain loudly to the application provider.
</para><para>
Remember that the Cygwin DLL strives to be backwards compatible so a
newer version of the DLL should always work with older executables.  So,
in general, it is always best to keep one version of the DLL on your
system and it should always be the latest version which matches your
installed distribution.
</para></answer></qandaentry>

<qandaentry id="faq.using.missing-packages">
<question><para>Why isn't package XYZ available in Cygwin?</para></question>
<answer>

<para>Probably because there is nobody willing or able to maintain it.  It
takes time, and the priority for the Cygwin Team is the Cygwin package.
The rest is a volunteer effort.  Want to contribute?  See
<ulink url="https://cygwin.com/setup.html"/>.
</para>
</answer></qandaentry>

<qandaentry id="faq.using.old-packages">
<question><para>Why is the Cygwin package of XYZ so out of date?</para></question>
<answer>

<para>(Also: Why is the version of package XYZ older than the version that I
can download from the XYZ web site?  Why is the version of package XYZ
older than the version that I installed on my linux system?  Is there
something special about Cygwin which requires that only an older version
of package XYZ will work on it?)
</para>
<para>Every package in the Cygwin distribution has a maintainer who is
responsible for sending out updates of the package.  This person is a
volunteer who is rarely the same person as the official developer of the
package.  If you notice that a version of a package seems to be out of
date, the reason is usually pretty simple -- the person who is
maintaining the package hasn't gotten around to updating it yet. Rarely,
the newer package actually requires complex changes that the maintainer
is working out. 
</para>
<para>If you urgently need an update, sending a polite message to the cygwin
mailing list pinging the maintainer is perfectly acceptable.  There are
no guarantees that the maintainer will have time to update the package
or that you'll receive a response to your request, however.
</para>
<para>Remember that the operative term here is "volunteer".
</para>
</answer></qandaentry>

<qandaentry id="faq.using.accessing-drives">
<question><para>How can I access other drives?</para></question>
<answer>

<para>You have some flexibility here.
</para>
<para>Cygwin has a builtin "cygdrive prefix" for drives that are not mounted.
You can access any drive, say Z:, as '/cygdrive/z/'.
</para>
<para>In some applications (notably bash), you can use the familiar windows
&lt;drive&gt;:/path/, using posix forward-slashes ('/') instead of Windows
backward-slashes ('\').  (But see the warning below!)  This maps in the
obvious way to the Windows path, but will be converted internally to use
the Cygwin path, following mounts (default or explicit).  For example:
<screen>
	bash$ cd C:/Windows
	bash$ pwd
        /cygdrive/c/Windows
</screen>
and
<screen>
	bash$ cd C:/cygwin
	bash$ pwd
        /
</screen>
for a default setup.  You could also use backward-slashes in the
Windows path, but these would have to be escaped from the shell.
</para>
<para><emphasis role='bold'>Warning:</emphasis> There is some ambiguity in going from a Windows path
to the posix path, because different posix paths, through different
mount points, could map to the same Windows directory.  This matters
because different mount points may be binmode or textmode, so the
behavior of Cygwin apps will vary depending on the posix path used to
get there.
</para>
<para>You can avoid the ambiguity of Windows paths, and avoid typing
"/cygdrive", by explicitly mounting drives to posix paths.  For example:
<screen>
	bash$ mkdir /c
	bash$ mount c:/ /c
	bash$ ls /c
</screen>
Then <literal>/cygdrive/c/Windows</literal> becomes <literal>/c/Windows</literal> which is a
little less typing.
</para>
<para>Note that you have to enter the mount point into the
<filename>/etc/fstab</filename> file to keep it indefinitely. 
The mount command will only add the mount point for the lifetime
of your current Cygwin session.
</para>
<para>You can change the default <literal>cygdrive</literal> prefix and whether it is binmode or textmode using the <filename>/etc/fstab</filename> file
as well.  See the Cygwin User's Guide at
<ulink url="https://cygwin.com/cygwin-ug-net/using.html#mount-table"/>
for more details.
</para>
</answer></qandaentry>

<qandaentry id="faq.using.copy-and-paste">
<question><para>How can I copy and paste into Cygwin console windows?</para></question>
<answer>

<para>First, consider using mintty instead of the standard console
window.  In mintty, selecting with the left-mouse also copies,
and middle-mouse pastes.  It couldn't be easier!
</para>
<para>In Windows's console window, open the properties dialog.
The options contain a toggle button, named "Quick edit mode".  It must
be ON.  Save the properties.
</para>
<para>You can also bind the insert key to paste from the clipboard by adding 
the following line to your .inputrc file: 
<screen>
	"\e[2~": paste-from-clipboard 
</screen>
</para>
</answer></qandaentry>

<qandaentry id="faq.using.firewall">
<question><para>What firewall should I use with Cygwin? </para></question>
<answer>

<para>We have had good reports about Kerio Personal Firewall, ZoneLabs
Integrity Desktop, and the built-in firewall in Windows XP. Other
well-known products including ZoneAlarm and Norton Internet Security have
caused problems for some users but work fine for others. At last report,
Agnitum Outpost did not work with Cygwin.  If you are having strange
connection-related problems, disabling the firewall is a good
troubleshooting step (as is closing or disabling all other running
applications, especially resource-intensive processes such as indexed
search).
</para>
<para>On the whole, Cygwin doesn't care which firewall is used.  The few rare
exceptions have to do with socket code.
Cygwin uses sockets to implement many of its functions, such as IPC.
Some overzealous firewalls install themselves deeply into the winsock
stack (with the 'layered service provider' API) and install hooks
throughout.  Sadly the mailing list archives are littered with examples
of poorly written firewall-type software that causes things to break.
Note that with many of these products, simply disabling the firewall
does not remove these changes; it must be completely uninstalled.
</para>
<para>See also <ulink url="https://cygwin.com/faq/faq.html#faq.using.bloda"/>
for a list of applications that have been known, at one time or another, to 
interfere with the normal functioning of Cygwin.
</para>
</answer></qandaentry>

<qandaentry id="faq.using.sharing-files">
<question><para>How can I share files between Unix and Windows?</para></question>
<answer>

<para>During development, we have Linux boxes running Samba and NFS as well
as Windows machines.  We often build with cross-compilers under Linux and copy
binaries and source to the Windows system or just toy with them
directly off the Samba-mounted partition.  Or, we use the Microsoft NFS
client and just use NFS shares on Linux from Windows.  And then there are
tools like <literal>scp</literal>, <literal>ftp</literal>,
<literal>rsync</literal>, ...
</para>
</answer></qandaentry>

<qandaentry id="faq.using.case-sensitive">
<question><para>Is Cygwin case-sensitive??</para></question>
<answer>

<para>Several Unix programs expect to be able to use to filenames
spelled the same way, but with different case.  A prime example
of this is perl's configuration script, which wants
<literal>Makefile</literal> and <literal>makefile</literal>.  Windows can't
tell the difference between files with just different case, so the
configuration fails.
</para>
<para>To help with this problem, Cygwin supports case sensitivity
starting with Cygwin 1.7.0.  For a detailed description how to use that
feature see the Cygwin User's Guilde at
<ulink url="https://cygwin.com/cygwin-ug-net/using-specialnames.html"/>.
</para>

</answer></qandaentry>

<qandaentry id="faq.using.dos-filenames">
<question><para>What about DOS special filenames?</para></question>
<answer>

<para>In Windows, files cannot be named com1, lpt1, or aux (to name a few);
either as the root filename or as the extension part.  If you do, you'll have
trouble.  Unix programs don't avoid these names which can make things
interesting.  E.g., the perl distribution has a file called
<literal>aux.sh</literal>.  The perl configuration tries to make sure that
<literal>aux.sh</literal> is there, but an operation on a file with the magic
letters 'aux' in it will hang.
</para>
<para>At least that's what happens when using native Windows tools.  Cygwin
1.7.0 and later can deal with these filenames just fine.  Again, see the
User's Guide at
<ulink url="https://cygwin.com/cygwin-ug-net/using-specialnames.html"/>
for a detailed description of what's possible with filenames and what is not.
</para>
</answer></qandaentry>

<qandaentry id="faq.using.hangs">
<question><para>When it hangs, how do I get it back?</para></question>
<answer>

<para>If something goes wrong and the tools hang on you for some reason (easy
to do if you try and read a file called aux.sh), first try hitting ^C to
return to bash or the cmd prompt.
</para>
<para>If you start up another shell, and applications don't run, it's a good
bet that the hung process is still running somewhere.  Use the Task
Manager, pview, or a similar utility to kill the process.
</para>
<para>And, if all else fails, there's always the reset button/power switch.
In theory this should never be necessary, though.
</para>
</answer></qandaentry>

<qandaentry id="faq.using.directory-structure">
<question><para>Why the weird directory structure?</para></question>
<answer>

<para>Why do /lib and /usr/lib (and /bin, /usr/bin) point to the same thing?
</para>
<para>Why use mounts instead of symbolic links?
</para>
<para>Can I use a disk root (e.g., C:\) as Cygwin root?  Why is this discouraged?
</para>
<para>After a new installation in the default location, your mount points will
look something like this:
</para>
<screen>
	bash$ mount
	C:\cygwin\bin on /usr/bin type ntfs (binary,auto)
	C:\cygwin\lib on /usr/lib type ntfs (binary,auto)
	C:\cygwin on / type ntfs (binary,auto)
	C: on /cygdrive/c type ntfs (binary,posix=0,user,noumount,auto)
</screen>

<para>Note that /bin and /usr/bin point to the same location, as do /lib and
/usr/lib.  This is intentional, and you should not undo these mounts
unless you <emphasis>really</emphasis> know what you are doing.
</para>
<para>Various applications and packages may expect to be installed in /lib or
/usr/lib (similarly /bin or /usr/bin).  Rather than distinguish between
them and try to keep track of them (possibly requiring the occasional
duplication or symbolic link), it was decided to maintain only one
actual directory, with equivalent ways to access it.
</para>
<para>Symbolic links had been considered for this purpose, but were dismissed
because they do not always work on Samba drives.  Also, mounts are
faster to process because no disk access is required to resolve them.
</para>
<para>Note that non-cygwin applications will not observe Cygwin mounts (or
symlinks for that matter).  For example, if you use WinZip to unpack the
tar distribution of a Cygwin package, it may not get installed to the
correct Cygwin path.  <emphasis>So don't do this!</emphasis>
</para>
<para>It is strongly recommended not to make the Cygwin root directory the
same as your drive's root directory, unless you know what you are doing
and are prepared to deal with the consequences.  It is generally easier
to maintain the Cygwin hierarchy if it is isolated from, say, C:\.  For
one thing, you avoid possible collisions with other (non-cygwin)
applications that may create (for example) \bin and \lib directories.
(Maybe you have nothing like that installed now, but who knows about
things you might add in the future?)
</para>
</answer></qandaentry>

<qandaentry id="faq.using.anti-virus">
<question><para>How do anti-virus programs like Cygwin?</para></question>
<answer>

<para>Users have reported that NAI (formerly McAfee) VirusScan for NT (and
others?) is incompatible with Cygwin.  This is because it tries to scan
the newly loaded shared memory in cygwin1.dll, which can cause fork() to
fail, wreaking havoc on many of the tools.  (It is not confirmed that
this is still a problem, however.)
</para>
<para>There have been several reports of NAI VirusScan causing the system to
hang when unpacking tar.gz archives.  This is surely a bug in VirusScan,
and should be reported to NAI.  The only workaround is to disable
VirusScan when accessing these files.  This can be an issue during
setup, and is discussed in that FAQ entry.
</para>
<para>Some users report a significant performance hit using Cygwin when their
anti-virus software is enabled.  Rather than disable the anti-virus
software completely, it may be possible to specify directories whose
contents are exempt from scanning.  In a default installation, this
would be <literal>C:\cygwin\bin</literal>.  Obviously, this could be
exploited by a hostile non-Cygwin program, so do this at your own risk.
</para>
<para>See also <ulink url="https://cygwin.com/faq/faq.html#faq.using.bloda"/>
for a list of applications that have been known, at one time or another, to
interfere with the normal functioning of Cygwin.
</para>
</answer></qandaentry>

<qandaentry id="faq.using.emacs">
<question><para>Is there a Cygwin port of GNU Emacs?</para></question>
<answer>

<para>Yes.  Install the emacs package.  This provides everything you
need in order to run GNU emacs in a terminal window.  If you also want
to be able to use the X11
(<ulink url="https://x.cygwin.com/"/>)
GUI, install the emacs-X11 package.  In either case, you run emacs by
typing 'emacs' or '/usr/bin/emacs'.
</para>
</answer></qandaentry>

<qandaentry id="faq.using.xemacs">
<question><para>Is there a Cygwin port of XEmacs?</para></question>
<answer>

<para>Yes.  It can be used in three different modes:</para>
<para><itemizedlist>
<listitem><para>X11 (<ulink url="https://x.cygwin.com/"/>) GUI</para></listitem>
</itemizedlist></para>
<para>You have to <emphasis>set</emphasis> the DISPLAY environment variable
before starting xemacs.</para>
<screen>
	bash$ DISPLAY=127.0.0.1:0 xemacs &amp;
</screen>
<para><itemizedlist>
<listitem><para>Windows native GUI</para></listitem>
</itemizedlist></para>
<para>You have to <emphasis>unset</emphasis> the DISPLAY environment variable
before starting xemacs.</para>
<screen>
	bash$ DISPLAY= xemacs &amp;
</screen>
<para><itemizedlist>
<listitem><para>Console mode</para></listitem>
</itemizedlist></para>
<para>Start xemacs with -nw in a terminal (native or X11) window</para>
<screen>
	bash$ xemacs -nw
</screen>
<para>To use all the standard packages with XEmacs you should download the following
two packages:</para>
<para><itemizedlist>
<listitem><para>xemacs-sumo - XEmacs standard packages</para></listitem>
<listitem><para>xemacs-mule-sumo - XEmacs MULE (MUlti Lingual Emacs) packages</para></listitem>
</itemizedlist></para>
</answer></qandaentry>

<qandaentry id="faq.using.symlinkstoppedworking">
<question><para>Why don't some of my old symlinks work anymore?</para></question>
<answer>

<para>Beginning with Cygwin 1.7, Cygwin supports multiple character sets.
Symlinks created with Cygwin 1.7 are using the UTF-16 character set, which is
portable across all character sets.  Old symlinks were written using your
current Windows codepage, which is not portable across all character sets.
If the target of the symlink doesn't resolve anymore, it's very likely that
the symlink points to a target filename using native, non-ASCII characters,
and you're now using another character set than way back when you created
the symlink.</para>

<para>Solution: Delete the symlink and create it again under you new Cygwin.
The new symlink will be correctly point to the target no matter what character
set you're using in future.</para>
</answer></qandaentry>

<qandaentry id="faq.using.symlinks-samba">
<question><para>Why don't symlinks work on Samba-mounted filesystems?</para></question>
<answer>

<para>Symlinks are marked with "system" file attribute.  Samba does not
enable this attribute by default.  To enable it, consult your Samba
documentation and then add these lines to your samba configuration
file:
</para>
<screen>
	map system = yes
	create mask = 0775
</screen>

<para>Note that the 0775 can be anything as long as the 0010 bit is set.
</para>
<para>Alternatively, use Windows shortcuts as symlinks.  See the CYGWIN
environment variable option "winsymlinks" 
<ulink url="https://cygwin.com/cygwin-ug-net/using-cygwinenv.html"/>
</para>
</answer></qandaentry>

<qandaentry id="faq.using.sshd-in-domain">
<question><para>How do I setup sshd in a domain?</para></question>
<answer>

<para>
If you want to be able to logon with domain accounts to a domain member
machine, you should make sure that the "cyg_server" account under which
the sshd service is usually running, is a domain account.  Otherwise you
might end up with weird problems.  For instance, sshd might fail to load
the child process when trying to login with a domain account.  A potential,
confirmed error message is
</para>

<screen>
  *** fatal error - unable to load user32.dll, Win32 error 1114
</screen>.

<para>
Here's how you set up a sshd with a domain service account.
</para>

<para>
First of all, create a new domain account called "cyg_server".  This
account must be an administrative account, so make sure it's in the
"Administrators" group.  Now create a domain policy which is propagated
to all machines which are supposed to run an sshd service.  This domain
policy should give the following user rights to the "cyg_server" account:
</para>

<screen>
  Act as part of the operating system (SeTcbPrivilege)
  Create a token object               (SeCreateTokenPrivilege)
  Replace a process level token       (SeAssignPrimaryTokenPrivilege)
</screen>

<para>
Now to install sshd on the member machine, logon to that machine as
an admin.  Make sure the aforementioend global policy has been propagated
to this machine.  Examine the Local Security Policy settings and, if
necessary, call gpupdate.
</para>

<para>
If everything looks ok, run bash.  Starting with Windows Vista, make
sure you're running bash elevated.
</para>

<para>
Then run ssh-host-config.  Answer all questions so that "cyg_server" is
used to run the service.  When done, check ownership of
<literal>/var/empty</literal> and all <literal>/etc/ssh*</literal>
files.  All of them must be owned by "cyg_server".  If that's ok, you're
usually all set and you can start the sshd service via
</para>

<screen>
  $ cygrunsrv -S sshd
</screen>

<para>or</para>

<screen>
  $ net start sshd
</screen>

</answer></qandaentry>

<qandaentry id="faq.using.ssh-pubkey-stops-working">
<question><para>Why does public key authentication with ssh fail after updating to Cygwin 1.7.34?</para></question>
<answer>

<para>
This is the result of fixing a long-standing security problem in Cygwin's
POSIX ACL handling.  IEEE 1003.1e draft 17 defines that the permissions
of secondary user and group entries in an ACL are reflected in the group
permission mask by or'ing the permissions of the file's primary group with
all permissions of secondary users and groups in the ACL.  The background
is that this way the standard POSIX permission bits reflect the fact that
<emphasis role='bold'>somebody else</emphasis> has additional, otherwise
potentially invisible permissions on the file.  This relatively complex
interface has been defined in order to ensure that applications that are
compliant with IEEE 1003.1 (“POSIX.1”) will still function as expected on
systems with ACLs.</para>

<para>So, what does that mean for your situation?  Typically this means the
private key file, for instance <filename>~/.ssh/id_rsa</filename>, has too
open permissions.  OpenSSH expects the permissions of the private key file
to be 0600.  Let's use the default SSH2 RSA keyfile as example:</para>

<screen>
  $ ls -l .ssh/id_rsa
  -rw-------  1 user group 1766 Aug 26  2013 .ssh/id_rsa
</screen>

<para>However, if other accounts can read the file, the key is potentially
compromised.  Consider the file has additional rw- permissions for a group
<literal>bad_guys</literal>.  Up to Cygwin 1.7.33 that would have looked
like this:</para>

<screen>
  $ ls -l .ssh/id_rsa
  -rw-------+ 1 user group 1766 Aug 26  2013 .ssh/id_rsa
</screen>

<para>Notice the extra <emphasis role='bold'>+</emphasis> character following
the permission string.  This shows that additional ACL entries are in the ACL.
But an application only checking the POSIX permission bits (and ssh is one of
them!), will not notice the fact, because it gets the permissions 0600 for the
file.</para>

<para>Starting with Cygwin 1.7.34, the extra permissions are reflected in
the group permission bits per IEEE 1003.1e draft 17:</para>

<screen>
  $ ls -l .ssh/id_rsa
  -rw-rw----+ 1 user group 1766 Aug 26  2013 .ssh/id_rsa
</screen>

<para>So now ssh will notice that the file has extra permissions and it will
complain.  The same problem occurs if the file
<filename>~/.ssh/authorized_keys</filename> has too open permissions.  On
the client side you won't get any helping text, though, other than that you're
suddenly asked for a password.  That's a rather good hint to have a closer
look at the server's <filename>~/.ssh/authorized_keys</filename> file.</para>

<para>To fix the permissions of your private key file or your
<filename>~/.ssh/authorized_keys</filename> file, simply use the
<command>setfacl</command> command with the <literal>-b</literal> option. 
This removes all additional ACL entries and thus fixes the permissions to
be not too open:</para>

<screen>
  $ ls -l .ssh/id_rsa
  -rw-rw----+ 1 user group 1766 Aug 26  2013 .ssh/id_rsa
  $ setfacl -b .ssh/id_rsa
  $ ls -l .ssh/id_rsa
  -rw-------  1 user group 1766 Aug 26  2013 .ssh/id_rsa
</screen>

<para>If the second <command>ls</command> command still gives you
<computeroutput>-rw-rw----</computeroutput> permissions after running
the above commands, it is proably because the file's primary group
is your user's personal group:</para>

<screen>
  $ ls -l .ssh/id_rsa
  -rw-rw----  1 Fred Fred 1766 Aug 26  2013 .ssh/id_rsa
</screen>

<para>Since the Windows security system treats groups and users as
much the same thing, a change to the user or group permissions on
such a file reflects the change to both user and group. In effect,
mode 0600 becomes mode 0660. Because we are saying we want these
files to be readable only by our user, the fix for this is easy:</para>

<screen>
  $ chgrp `id -g` ~/.ssh/*
</screen>

<para>That resets the group on these files to your default group
which should be something like <computeroutput>Users</computeroutput>,
depending on your local configuration. If that doesn't work, you can
try something like this instead:</para>

<screen>
  $ chgrp None ~/.ssh/*
</screen>

<para>That group always exists, but its name is different on
non-English versions of Windows. You might also want to use a
domain group instead of a local group if your site uses Windows
domains. For example, you might want to use the <computeroutput>Domain
Users</computeroutput> group instead.</para>

<para>For more information on <command>setfacl</command>, see
<ulink url="https://cygwin.com/cygwin-ug-net/using-utils.html#setfacl"/></para>
</answer></qandaentry>

<qandaentry id="faq.using.same-with-rhosts">
<question><para>Why is my .rhosts file not recognized by rlogin anymore after updating to Cygwin 1.7.34?</para></question>
<answer>

<para>The problem is exactly the same as with the key files of SSH.  See
<xref linkend="faq.using.ssh-pubkey-stops-working"/>.</para>

<para>The solution is the same:</para>

<screen>
  $ ls -l .rhosts
  -rw-rw----+ 1 user group 42 Nov 12  2010 .rhosts
  $ setfacl -b .rhosts
  $ ls -l .rhosts
  -rw-------  1 user group 42 Nov 12  2010 .rhosts
</screen>

</answer></qandaentry>

<qandaentry id="faq.using.tcl-tk">
<question><para>Why do my Tk programs not work anymore?</para></question>
<answer>

<para>Previous versions of Tcl/Tk distributed with Cygwin (e.g. tclsh84.exe,
wish84.exe) were not actually "Cygwin versions" of those tools.
They were built as native libraries, which means they did not understand
Cygwin mounts or symbolic links. This lead to all sorts of problems interacting
with true Cygwin programs.</para>

<para>As of February 2012, this was replaced with a version of Tcl/Tk which
uses Cygwin's POSIX APIs and X11 for GUI functionality.  If you get a message
such as this when trying to start a Tk app:</para>

<screen>
  Application initialization failed: couldn't connect to display ""
</screen>

<para>Then you need to start an X server, or if one is already running, set the
<literal>DISPLAY</literal> variable to the proper value.  The Cygwin distribution
includes an X server; please see the <ulink url="https://x.cygwin.com/docs/ug/cygwin-x-ug.html">Cygwin/X User Guide</ulink>
for installation and startup instructions.
</para></answer></qandaentry>

<qandaentry id="faq.using.ipv6">
<question><para>Why do I get "Address family not supported" errors when playing with IPv6?</para></question>
<answer>

<para>IPv6 is only fully supported and available right from the start
beginning with Windows Vista and Windows Server 2008.</para>

<para>The previous generation of Windows,
Windows XP and Windows Server 2003, only support IPv6 on an "experimental"
basis.  On these Windows versions, the IPv6 TCP/IP stack is not installed
automatically, rather the system administrator has to install it manually.
Unless this has already been done on your machine, your machine is not
IPv6-capable and that's why you see the "Address family not supported"
error message.  Note, however, that the IPv6 stack on these systems
don't fully support all features of IPv6.</para>

<para>For more information about IPv6 on Windows and how to install the
IPv6 stack, see the <ulink url="http://www.microsoft.com/technet/network/ipv6/ipv6faq.mspx">Microsoft TechNet IPv6 FAQ article</ulink>
</para></answer></qandaentry>

<qandaentry id="faq.using.bloda" xreflabel="BLODA">
<question><para>What applications have been found to interfere with Cygwin?</para></question>
<answer>

<para>From time to time, people have reported strange failures and problems in
Cygwin and Cygwin packages that seem to have no rational explanation.  Among
the most common symptoms they report are fork failures, memory leaks, and file
access denied problems.  These problems, when they have been traced, often appear
to be caused by interference from other software installed on the same PC.  Security
software, in particular, such as anti-virus, anti-spyware, and firewall applications,
often implements its functions by installing hooks into various parts of the system,
including both the Explorer shell and the underlying kernel.  Sometimes these hooks
are not implemented in an entirely transparent fashion, and cause changes in the
behaviour which affect the operation of other programs, such as Cygwin.
</para>
<para>Among the software that has been found to cause difficulties are:</para>
<para><itemizedlist>
<listitem><para>Sonic Solutions burning software containing DLA component (when DLA disabled)</para></listitem>
<listitem><para>Norton/McAfee/Symantec antivirus or antispyware</para></listitem>
<listitem><para>Logitech webcam software with "Logitech process monitor" service</para></listitem>
<listitem><para>Kerio, Agnitum or ZoneAlarm Personal Firewall</para></listitem>
<listitem><para>Iolo System Mechanic/AntiVirus/Firewall</para></listitem>
<listitem><para>LanDesk</para></listitem>
<listitem><para>Windows Defender </para></listitem>
<listitem><para>Various programs by Wave Systems Corp using wxvault.dll, including Embassy Trust Suite and Embassy Security Center</para></listitem>
<listitem><para>NOD32 Antivirus</para></listitem>
<listitem><para>ByteMobile laptop optimization client</para></listitem>
<listitem><para>Earthlink Total-Access</para></listitem>
<listitem><para>Spybot S&amp;D TeaTimer</para></listitem>
<listitem><para>AR Soft RAM Disk</para></listitem>
<listitem><para>ATI Catalyst (some versions)</para></listitem>
<listitem><para>NVIDIA GeForce (some versions)</para></listitem>
<listitem><para>Windows LiveOneCare</para></listitem>
<listitem><para>Webroot Spy Sweeper with Antivirus</para></listitem>
<listitem><para>COMODO Firewall Pro</para></listitem>
<listitem><para>PC Tools Spyware Doctor</para></listitem>
<listitem><para>Avira AntiVir</para></listitem>
<listitem><para>Panda Internet Security</para></listitem>
<listitem><para>BitDefender</para></listitem>
<listitem><para>Google Desktop</para></listitem>
<listitem><para>Sophos Anti-Virus 7</para></listitem>
<listitem><para>Bufferzone from Trustware</para></listitem>
<listitem><para>Lenovo IPS Core Service (ipssvc)</para></listitem>
<listitem><para>Lenovo RapidBoot Shield</para></listitem>
<listitem><para>Credant Guardian Shield</para></listitem>
<listitem><para>AVAST (disable FILESYSTEM and BEHAVIOR realtime shields)</para></listitem>
<listitem><para>Citrix Metaframe Presentation Server/XenApp (see <ulink url="http://support.citrix.com/article/CTX107825">Citrix Support page</ulink>)</para></listitem>
</itemizedlist></para>
<para>Sometimes these problems can be worked around, by temporarily or partially
disabling the offending software.  For instance, it may be possible to disable
on-access scanning in your antivirus, or configure it to ignore files under the
Cygwin installation root.  Often, unfortunately, this is not possible; even disabling
the software may not work, since many applications that hook the operating system
leave their hooks installed when disabled, and simply set them into what is intended
to be a completely transparent pass-through mode.  Sometimes this pass-through is not
as transparent as all that, and the hooks still interfere with Cygwin; in these cases,
it may be necessary to uninstall the software altogether to restore normal operation.
</para>
<para>Some of the symptoms you may experience are:</para>
<para><itemizedlist>
<listitem>
<para>Random fork() failures.</para>
<para>Caused by hook DLLs that load themselves into every process in the
system.  POSIX fork() semantics require that the memory map of the child process
must be an exact duplicate of the parent process' layout.  If one of these DLLs
loads itself at a different base address in the child's memory space as compared
to the address it was loaded at in the parent, it can end up taking the space that
belonged to a different DLL in the parent.  When Cygwin can't load the original
DLL at that same address in the child, the fork() call has to fail.
</para>
</listitem>
<listitem>
<para>File access problems.</para>
<para>Some programs (e.g., virus scanners with on-access scanning) scan or
otherwise operate on every file accessed by all the other software running on
your computer.  In some cases they may retain an open handle on the file even
after the software that is really using the file has closed it.  This has been
known to cause operations such as deletes, renames and moves to fail with
access denied errors.  In extreme cases it has been known for scanners to leak
file handles, leading to kernel memory starvation.
</para>
</listitem>
<listitem>
<para>Networking issues</para>
<para>Firewall software sometimes gets a bit funny about Cygwin.  It's not
currently understood why; Cygwin only uses the standard Winsock2 API, but
perhaps in some less-commonly used fashion that doesn't get as well tested
by the publishers of firewalls.  Symptoms include mysterious failures to
connect, or corruption of network data being sent or received.</para>
</listitem>
<listitem>
<para>Memory and/or handle leaks</para>
<para>Some applications that hook into the Windows operating system exhibit
bugs when interacting with Cygwin that cause them to leak allocated memory
or other system resources.  Symptoms include complaints about out-of-memory
errors and even virtual memory exhaustion dialog boxes from the O/S; it is
often possible to see the excess memory allocation using a tool such as
Task Manager or Sysinternals' Process Explorer, although interpreting the
statistics they present is not always straightforward owing to complications
such as virtual memory paging and file caching.</para>
</listitem>
</itemizedlist></para>
</answer></qandaentry>

<qandaentry id='faq.using.fixing-fork-failures'>
  <question><para>How do I fix <literal>fork()</literal> failures?</para></question>
  <answer>
  <para>Unfortunately, Windows does not use the fork/exec model of process creation
  found in UNIX-like OSes, so it is difficult for Cygwin to implement a reliable and
  correct <literal>fork()</literal>, which can lead to error messages such as:</para>
  <para><itemizedlist>
    <listitem>unable to remap <emphasis>somedll</emphasis> to same address as parent</listitem>
    <listitem>couldn't allocate heap</listitem>
    <listitem>died waiting for dll loading</listitem>
    <listitem>child -1 - died waiting for longjmp before initialization</listitem>
    <listitem>STATUS_ACCESS_VIOLATION</listitem>
    <listitem>resource temporarily unavailable</listitem>
  </itemizedlist></para>
  <para>Potential solutions for the above errors:</para>
  <para><itemizedlist>
    <listitem>Restart whatever process is trying (and failing) to use
    <literal>fork()</literal>. Sometimes Windows sets up a process
    environment that is even more hostile to fork() than usual.</listitem>
    <listitem>Ensure that you have eliminated (not just disabled) all
    software on the <xref linkend="faq.using.bloda"/>.
    </listitem>
    <listitem>Read the 'rebase' package README in
    <literal>/usr/share/doc/rebase/</literal>, and follow the
    instructions there to run 'rebaseall'.</listitem>
    </itemizedlist></para>
  <para>Please note that installing new packages or updating existing
  ones undoes the effects of rebaseall and often causes fork() failures
  to reappear. If so, just run rebaseall again.
  </para>
  <para>See the <ulink url="https://cygwin.com/cygwin-ug-net/highlights.html#ov-hi-process">
  process creation</ulink> section of the User's Guide for the technical reasons it is so
  difficult to make <literal>fork()</literal> work reliably.</para>
</answer>
</qandaentry>
</qandadiv>
@


1.61
log
@Added chgrp None ~/.ssh/* hack to FAQ item 4.40
@
text
@d1145 9
d1157 6
@


1.60
log
@Applied Andrey's and my improvments to FAQ item 4.2, discussed on the main ML.
@
text
@d1128 20
@


1.59
log
@	* faq-using.xml (faq.using.startup-slow): New entry.
@
text
@d36 30
a65 2
<para>There are many possible causes for this. This answer is more a
list of things to look into than a set of solutions.</para>
d69 34
a102 34
    <para>If your terminal windows suddenly began starting slowly after a
    Cygwin upgrade, the most likely cause is that you have an outdated
    authentication setup.</para>

    <para>For almost all its lifetime, Cygwin has used Unix-like
    <filename>/etc/passwd</filename> and <filename>/etc/group</filename> files
    to mirror the contents of the Windows SAM and AD databases.  Although these
    files can still be used, since Cygwin 1.7.34, new installations now use the
    SAM/AD databases directly.</para>

    <para>To switch to the new method, move these two files out of the way and
    restart the Cygwin terminal. That runs Cygwin in its new default mode. If
    you are on a system that isn't using AD domain logins, this makes Cygwin
    use the native Windows SAM database directly, which may be faster than the
    old method involving <filename>/etc/passwd</filename> and such. At worst,
    it will only be a bit slower. (Which situation applies depends on the
    benchmark you run.)</para>

    <para>If you are on an AD system, a hybrid approach you might consider is
    to re-run <command>mkpasswd</command> and <command>mkgroup</command>, then
    put the following into <filename>/etc/nsswitch.conf</filename> to make
    Cygwin treat these files as read-only local caches of your AD database:
    </para>

    <screen>
    passwd: files
    group:  files
    </screen>

    <para>By leaving out the "db" option, we are telling the Cygwin DLL not to
    even <emphasis>try</emphasis> to do AD lookups. If your AD servers are
    slow, this local cache will speed things up. The downside is the old stale
    cache problem: any time the AD databases change, your local cache will go
    out of date until you update the files manually.</para> 
d106 28
a133 3
    <para>Another common cause of slow Cygwin Terminal starts is a bad DNS
    setup. Many things that occur during a Cygwin Terminal startup require
    fast DNS lookups.</para>
d137 14
a150 9
<para>If none of the above helps, the best troubleshooting method is to run
your startup scripts in debug mode. Right-click your Cygwin Terminal icon, go
to Properties, and edit the command. It should be something like
<command>C:\cygwin\bin\mintty.exe -i /Cygwin-Terminal.ico -</command>.
Assuming you are using Bash for your login shell, change it to
<command>C:\cygwin64\bin\mintty /bin/bash -lx</command>. That will cause it to
write out a line for every command it runs. A slow Cygwin Terminal launch
usually means one or more of the many commands Cygwin runs when starting up
will take a long time. That will be your clue as to what's going on.</para>
@


1.58
log
@	* faq-using.xml (faq.using.ssh-pubkey-stops-working): New entry.
	(faq.using.same-with-rhosts): Ditto.
@
text
@d32 63
@


1.57
log
@	* Throughout, replace http with https as far as cygwin.com and
	sourceware.org URLs are concerned.
	* Throughout, simplify ulink expressions if the visible text is the
	URL anyway.
	* faq-programming.xml (faq.programming.dll-relocatable): Remove.
	* faq-setup.xml (faq.setup.name-with-space): Change for 1.7.34.
	(faq.setup.home): Ditto.
	* faq-using.xml (faq.using.printing): Clarify old links and availability
	of a2ps and file.
	(faq.using.xemacs): Drop outdated version info and pointers to native
	XEmacs.
	(faq.using.ntemacs): Remove.
	* faq-what.xml (faq.what.what): Rephrase to reflect reality.
	(faq.what.supported): Ditto.
	(faq.what.who): Rephrase slightly.
	* legal.xml: Bump copyright.
	* setup-net.xml (internet-setup): Fix references to setup executables.
@
text
@d935 95
@


1.56
log
@	* faq-using.xml (faq.using.bloda): Add Lenovo RapidBoot Shield to
	BLODA list.
@
text
@d28 1
a28 1
<ulink url="http://cygwin.com/ml/cygwin/2002-01/msg01619.html">http://cygwin.com/ml/cygwin/2002-01/msg01619.html</ulink>.
d53 1
a53 1
<ulink url="http://cygwin.com/cygwin-ug-net/ntsec.html" />.
d241 3
a243 2
<para>For some technical background into why <literal>su</literal> doesn't work, read
<ulink url="http://www.cygwin.com/ml/cygwin/2003-06/msg00897.html">http://www.cygwin.com/ml/cygwin/2003-06/msg00897.html</ulink> and
d278 1
a278 1
Guide at <ulink url="http://cygwin.com/cygwin-ug-net/ntsec.html" />
d330 1
a330 1
<para>lpr is available in the cygutils package.  Some <ulink url="http://cygwin.com/ml/cygwin/2008-05/msg00123.html">usage hints</ulink> are available courtesy of Rodrigo Medina.
d335 3
a337 2
<ulink url="http://cygwin.com/ml/cygwin/2001-04/msg00657.html">http://cygwin.com/ml/cygwin/2001-04/msg00657.html</ulink>.  Note that the
<literal>file</literal> command is now available as part of Cygwin setup.
d339 2
a340 2
<para>Alternatively, you can use the Windows <literal>print</literal>
command.  (It does not seem to be available on Win9x.)  Type
d346 2
a347 2
<para>for usage instructions (note the <literal>?</literal> must be escaped from the
shell).
d349 1
a349 1
<para>Finally, you can simply <literal>cat</literal> the file to the printer's share name:
d367 1
a367 1
section <ulink url="http://cygwin.com/cygwin-ug-net/setup-locale.html">Internationalization</ulink>
d419 1
a419 1
you get by running <ulink url="http://cygwin.com/install.html">setup.exe</ulink>,
d455 1
a455 1
url="http://cygwin.com/licensing.html">license</ulink> very carefully.  If you
d490 1
a490 1
<ulink url="http://cygwin.com/setup.html">http://cygwin.com/setup.html</ulink>.
d574 1
a574 1
<ulink url="http://cygwin.com/cygwin-ug-net/using.html#mount-table">http://cygwin.com/cygwin-ug-net/using.html#mount-table</ulink>
d623 1
a623 1
<para>See also <ulink url="http://cygwin.com/faq/faq.html#faq.using.bloda" />
d657 1
a657 1
<ulink url="http://cygwin.com/cygwin-ug-net/using-specialnames.html">http://cygwin.com/cygwin-ug-net/using-specialnames.html</ulink>.
d677 1
a677 1
<ulink url="http://cygwin.com/cygwin-ug-net/using-specialnames.html">http://cygwin.com/cygwin-ug-net/using-specialnames.html</ulink>
d773 1
a773 1
<para>See also <ulink url="http://cygwin.com/faq/faq.html#faq.using.bloda" />
d786 1
a786 1
(<ulink url="http://x.cygwin.com/">http://x.cygwin.com/</ulink>)
d798 1
a798 1
<listitem><para>X11 (<ulink url="http://x.cygwin.com/">http://x.cygwin.com/</ulink>) GUI</para></listitem>
a819 3
<para>The current stable Cygwin version of XEmacs is 21.4.x. But there is also a
Cygwin test release version (21.5.x) available for download via setup.exe.
</para>
a825 112
<para>An alternative <emphasis>native</emphasis> distribution of XEmacs for
Windows based systems can be downloaded from
<ulink url="http://xemacs.org/Download/win32/index.html">http://xemacs.org/Download/win32/index.html</ulink>.
It uses an <emphasis>InnoSetup Kit</emphasis> based installer.</para>
</answer></qandaentry>

<qandaentry id="faq.using.ntemacs">
<question><para>What about NT Emacs?</para></question>
<answer>

<para>If you want GNU Emacs with a native Microsoft GUI interface,
then you can either use XEmacs (see above), or native
NT Emacs: see section
<ulink url="http://www.gnu.org/software/emacs/windows/Getting-Emacs.html#Getting-Emacs">Where can I get pre-compiled versions?</ulink> in NT Emacs FAQ.

</para>
<para>NT Emacs uses the Windows command shell by default.  Since it is not a
Cygwin application, it has no knowledge of Cygwin mounts.  With those
points in mind, you need to add the following code to your ~/.emacs
(or ~/_emacs) file in order to use Cygwin bash.  This is particularly useful
for the JDEE package (<ulink url="http://jdee.sunsite.dk/">http://jdee.sunsite.dk/</ulink>).  The following
settings are for Emacs 21.1:
</para>
<screen>

	;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	;; Initial setup
	;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	;; This assumes that Cygwin is installed in C:\cygwin (the
	;; default) and that C:\cygwin\bin is not already in your
	;; Windows Path (it generally should not be).

	(setq exec-path (cons "C:/cygwin/bin" exec-path))
	(setenv "PATH" (concat "C:\\cygwin\\bin;" (getenv "PATH")))

	;;   LOGNAME and USER are expected in many Emacs packages
	;;   Check these environment variables.

	(if (and (null (getenv "USER"))
		 ;; Windows includes variable USERNAME, which is copied to
		 ;; LOGNAME and USER respectively.
		 (getenv "USERNAME"))
	    (setenv "USER" (getenv "USERNAME")))

	(if (and (getenv "LOGNAME")
		 ;;  Bash shell defines only LOGNAME
		 (null (getenv "USER")))
	    (setenv "USER" (getenv "LOGNAME")))

	(if (and (getenv "USER")
		 (null (getenv "LOGNAME")))
	    (setenv "LOGNAME" (getenv "USER")))

	;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	;; (A) M-x shell: This change M-x shell permanently
	;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	;; Would call Windows command interpreter. Change it.

	(setq shell-file-name "bash")
	(setenv "SHELL" shell-file-name)
	(setq explicit-shell-file-name shell-file-name)

	;; Remove C-m (^M) characters that appear in output

	(add-hook 'comint-output-filter-functions
	          'comint-strip-ctrl-m)

	;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	;; (B) *OR* call following function with M-x my-bash
	;; The M-x shell would continue to run standard Windows shell
	;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	(defun my-bash (&amp;optional buffer)
	  "Run Cygwin Bash shell in optional BUFFER; default *shell-bash*."
	  (autoload 'comint-check-proc "comint")
	  (interactive
	   (let ((name "*shell-bash*"))
	     (if current-prefix-arg
		 (setq name (read-string
			     (format "Cygwin shell buffer (default %s): " name)
			     (not 'initial-input)
			     (not 'history)
			     name)))
	     (list name)))
	  (or buffer
	      (setq buffer "*shell-bash*"))
	  (if (comint-check-proc buffer)
	      (pop-to-buffer buffer)
	    (let* ((shell-file-name            "bash")
		   (explicit-shell-file-name   shell-file-name)
		   (explicit-sh-args           '("--login" "-i"))
		   (explicit-bash-args         explicit-sh-args)
		   (w32-quote-process-args     ?\"));; Use Cygwin quoting rules.
	      (shell buffer)
	      ;;  By default Emacs sends "\r\n", but bash wants plain "\n"
	      (set-buffer-process-coding-system 'undecided-dos 'undecided-unix)
	      ;; With TAB completion, add slash path separator, none to filenames
	      (make-local-variable 'comint-completion-addsuffix)
	      (setq comint-completion-addsuffix '("/" . ""))
	      ;;  This variable is local to buffer
	      (setq comint-prompt-regexp "^[ \n\t]*[$] ?"))))

</screen>

<para>If you want NT Emacs to understand Cygwin paths, get
cygwin-mount.el from <ulink url="http://www.emacswiki.org/elisp/index.html">http://www.emacswiki.org/elisp/index.html</ulink>.
</para>
<para>Note that all of this ``just works'' if you use the Cygwin port of
Emacs or XEmacs from Cygwin Setup.
</para>
d864 1
a864 1
<ulink url="http://cygwin.com/cygwin-ug-net/using-cygwinenv.html">http://cygwin.com/cygwin-ug-net/using-cygwinenv.html</ulink>
d955 1
a955 1
includes an X server; please see the <ulink url="http://x.cygwin.com/docs/ug/cygwin-x-ug.html">Cygwin/X User Guide</ulink>
d1113 1
a1113 1
  <para>See the <ulink url="http://cygwin.com/cygwin-ug-net/highlights.html#ov-hi-process">
@


1.55
log
@	* cygwin.xsl: Allow 3 section levels in TOC.
	* new-features.xml: (ov-new1.7.32): Add new section.
	* ntsec.xml: Rename top-level section to reflect extension of topics.
	Remove old /etc/passwd, /etc/group considerations.  Add new sections
	explaining Windows to POSIX account mapping.  Make setuid sections
	third level sections.
	* pathnames.xml: Note new method of account mapping for fstab.d/$USER.
	* faq-setup.xml: Rework references to /etc/passwd and /etc/group to
	reflect changes to account handling.
	* faq-using.xml: Ditto.
@
text
@d1135 1
@


1.54
log
@* faq-setup.xml: Minor snapshot instruction rewording.  Update discussion about
setup*.exe.
* faq-using.xml: Update information about setup*.exe.
* faq-what.xml: Ditto.
@
text
@d140 1
a140 1
to set HOME (and the home dir in your /etc/passwd entry) correctly.
a267 6
<para>The most common case is that your <literal>/etc/passwd</literal>
or <literal>/etc/group</literal> files are not properly set up. If 
<literal>ls -l</literal> shows a group of <literal>mkpasswd</literal> 
or <literal>mkgroup</literal>, you need to run one or both of those
commands.
</para>
a1028 13
If "cyg_server" is not already in <literal>/etc/passwd</literal>, add it
using <literal>mkpasswd</literal>.  Make sure all domain accounts which are
supposed to be able to logon via ssh are in <literal>/etc/passwd</literal>.
Also make sure that all important domain groups are in
<literal>/etc/group</literal>.  If in doubt, call
</para>

<screen>
  $ mkpasswd -l -d your_domain > /etc/passwd
  $ mkgroup -l -d your_domain > /etc/group
</screen>

<para>
@


1.53
log
@	* faq-using.xml (faq.using.private-cygwin): Drop.
@
text
@d335 1
a335 1
<para>lpr is available in the <ulink url="http://cygwin.com/setup.exe">setup.exe</ulink> cygutils package.  Some <ulink url="http://cygwin.com/ml/cygwin/2008-05/msg00123.html">usage hints</ulink> are available courtesy of Rodrigo Medina.
d423 1
a423 1
you get by running <ulink url="http://cygwin.com/setup.exe">setup.exe</ulink>,
@


1.52
log
@	* faq-using.xml (faq.using.multiple-copies): Modernize to reflect
	installation separation since Cygwin 1.7.
	(faq.using.third-party.multiple-copies): Ditto.
@
text
@a466 21
<qandaentry id="faq.using.private-cygwin">
<question><para>
So I can't install a private version of the Cygwin DLL without
conflicting with the system cygwin?
</para></question>
<answer><para>
Actually, if you are very careful, you can have two different versions
of the Cygwin DLL installed on your system at the same time but they
must be run serially.  The only exception from this rule is, if one of
the DLLs is a pre-1.7 DLL and the other is a 1.7.0 or later DLL.  These
DLLs can work concurrently without knowing about each other due to
massive changes using shared resources in Cygwin 1.7.  However,
processes using different DLLs will not interact with each other
correctly, so keep them separate except you really really know what
you're doing.
</para>
<para>This usage is not recommeded for novices.  Only limited support will be
provided in the <ulink url="http://cygwin.com/lists.html">mailing lists</ulink>
if you run into problems.
</para></answer></qandaentry>

@


1.51
log
@	* faq-copyright.xml: Fix link to license.
	* faq-using.xml: Ditto.
	* faq-what.xml: Ditto.
@
text
@d398 17
a414 3
<para>You should only have one copy of the Cygwin DLL on your system.  If you
have multiple versions, they will conflict and cause problems.
</para>
d417 5
a421 4
running at the same time which conflict with each other.  This could happen,
for example, if you update cygwin1.dll without exiting
<emphasis>all</emphasis> Cygwin apps (including inetd) beforehand.
</para>
d424 1
a424 1
installed in the directory controlled by this program.  If you have other
d440 2
a441 2
to customer sites.  How can I do this without conflicting with any
Cygwin installed by the user?
d444 7
a450 5
Third party developers who wish to use Cygwin should check if
there is a version of cygwin installed and use the installed
version if it is newer, or conditionally upgrade if it is not.
(If you write a tool to make this easy, consider contributing
it for others to use)
@


1.50
log
@	* faq-programming.xml: Convert url to refer to new flat faq.html file.
	* faq-setup.xml: Ditto.
	* faq-using.xml: Ditto.
	* highlights.xml: Ditto.
@
text
@d442 1
a442 1
url="http://cygwin.com/license.html">license</ulink> very carefully.  If you
@


1.49
log
@Modernized user guide, API reference, and FAQ generation.  Overall
effect is to move away from DocBook SGML and DJ Delorie's doctool and
toward pure DocBook XSL.  (There remains just one use of doctool, and
we have plans for replacing it, too.)  See ChangeLog for details.
@
text
@d631 1
a631 1
<para>See also <ulink url="http://cygwin.com/faq/faq.using.html#faq.using.bloda" />
d781 1
a781 1
<para>See also <ulink url="http://cygwin.com/faq/faq.using.html#faq.using.bloda" />
@


1.48
log
@	* Throughout, eliminate Windows 2000 from the documentation.
	* overview.sgml (brief-history): Mention native AMD64 support.
@
text
@d1 7
d1253 1
@


1.47
log
@	* faq-using.xml: Fix expression and uppercase Samba.
@
text
@a1103 4
<para>There's also a very experimental IPv6 stack for Windows 2000, and
Cygwin will try its best to support it, but it's not recommended to install
it.</para>

@


1.46
log
@	 * faq-using.xml (faq.using.man): Make relevance to whatis explicit.
@
text
@d945 1
a945 1
<question><para>Why do some of my old symlinks don't work anymore?</para></question>
d963 1
a963 1
<question><para>Why don't symlinks work on samba-mounted filesystems?</para></question>
@


1.45
log
@	* faq-using.xml (faq.using.emacs, faq.using.xemacs): Change links
	from http://cygwin.com/xfree to http://x.cygwin.com.
@
text
@d241 2
a242 1
<question><para>Why doesn't man -k (or apropos) work?</para></question>
d245 2
a246 1
<para>Before you can use <literal>man -k</literal> or <literal>apropos</literal>, you
@


1.44
log
@* faq-programming.xml (faq.programming.make-execvp): Remove obsolete
information about Tcl/Tk.
(faq.programming.dll-relocatable): Ditto.
* faq-using.xml (faq.using.tcl-tk): Rewrite to reflect switch to
X11 Tcl/Tk.
@
text
@d785 1
a785 1
(<ulink url="http://cygwin.com/xfree/">http://cygwin.com/xfree/</ulink>)
d797 1
a797 1
<listitem><para>X11 (<ulink url="http://cygwin.com/xfree/">http://cygwin.com/xfree/</ulink>) GUI</para></listitem>
@


1.43
log
@* faq-using.xml (faq.using.bloda): Fix missing closing parenthesis.
@
text
@d1063 1
a1063 1
<question><para>Why doesn't Cygwin tcl/tk understand Cygwin paths?</para></question>
d1066 18
a1083 7
<para>The versions of Tcl/Tk distributed with Cygwin (e.g. cygtclsh80.exe,
cygwish80.exe) are not actually "Cygwin versions" of those tools.
They are built as native libraries, which means they do not understand
Cygwin mounts or symbolic links.
</para>
<para>See the entry "How do I convert between Windows and UNIX paths?"
elsewhere in this FAQ.
@


1.42
log
@	* faq-using.xml (faq.using.bloda): Add AVAST and Citrix Metaframe
	Presentation Server.
@
text
@d1144 1
a1144 1
<listitem><para>Citrix Metaframe Presentation Server/XenApp (see <ulink url="http://support.citrix.com/article/CTX107825">Citrix Support page</ulink></para></listitem>
@


1.41
log
@	* faq-using.xml (faq.using.sshd-in-domain): Document autoload error
	1114 when loading user32.dll as potential problem when not using
	a domain service account.
@
text
@d1143 2
@


1.40
log
@	* faq-using.xml: Fix typos.
	* ntsec.sgml: Ditto.
	* pathnames.sgml: Ditto.
	* setup2.sgml: Ditto.
	* setup-net.sgml: Ditto.
	(setup-dir): Drop paragraph on Unix/DOS file mode.
@
text
@d989 12
a1000 2
the sshd service is usually running, is a domain account as well.  Here's
how you set this up.
@


1.39
log
@* faq-using.xml: Remove obsolete entry about the standard console window.
* new-features.sgml: Remove obsolete entry which references cygwin.bat.
* setup-net.sgml: Clarify new shortcut behavior for the "Cygwin Terminal".
@
text
@d653 1
a653 1
<para>To help with this problem, Cygwin supports casesensitivity
@


1.38
log
@	* faq-using.xml (faq.using.weirdchars): Rewrite.
@
text
@a941 10
<qandaentry id="faq.using.console-window">
<question><para>Is there a better alternative to the standard console window?</para></question>
<answer>

<para>Yes!  Use <command>mintty</command> instead.  <command>mintty</command> is an optional packages in
Cygwin Setup.  <command>mintty</command> is a Cygwin application providing a native GUI without
the need of X11.
</para>
</answer></qandaentry>

@


1.37
log
@	* faq-using.xml (faq.using.converting-paths): Remove reference to
	cygwin.bat.
	(faq.using.emacs): Drop "CYGWIN=tty" setting.
	* pathnames.sgml (pathnames-posixdevices): Align list of device names
	with changes in 1.7.10.
	* setup2.sgml (setup-env-ov): Drop text which assumes that Cygwin
	processes are started in console window.  Align wording to lessened
	relevance of $CYGWIN.  Don't use dropped CYGWIN setting in example.
	(setup-locale-how): Put using console and Cygwin.bat file into
	perspective.
	(setup-locale-problems): Ditto.
@
text
@d373 11
a383 12
<para>Very likely you didn't set your console character set to the preferred
character set before the first Cygwin application was started in the
console.  To make sure the console is using the desired character set,
make sure that one of the internationalization environment variables
LC_ALL, LC_CTYPE, or LANG is set before the first Cygwin process starts.
You can do that, for instance, by setting the variable in your
<literal>Cygwin.bat</literal> file from which you start your Cygwin shell.
</para>

<para>
For a more detailed explanation see the section
<ulink url="http://cygwin.com/cygwin-ug-net/setup-locale.html#setup-locale-console">The Windows Console character set</ulink> in the Cygwin User's Guide.</para>
@


1.36
log
@	* faq-using.xml (faq.using.fixing-fork-failures): Add new FAQ.
	* overview2.sgml (ov-hi-process-problems): Describe some difficulties
	in implementing fork()
@
text
@d116 4
a119 4
        bash$ cygpath --unix C:/cygwin/bin/cygwin.bat
        /usr/bin/cygwin.bat
        bash$ cygpath --unix C:\\cygwin\\bin\\cygwin.bat
        /usr/bin/cygwin.bat
d788 1
a788 3
typing 'emacs' or '/usr/bin/emacs'.  If you run emacs in the cygwin
console, be sure that your CYGWIN environment variable contains tty.
See /usr/share/doc/Cygwin/emacs.README for further information.
@


1.35
log
@	* faq-using.xml (faq.using.bloda): Add NVIDIA.  Change wording slightly.
@
text
@d1102 1
a1102 1
<qandaentry id="faq.using.bloda">
d1202 36
@


1.34
log
@	Throughout remove NT4 from documentation.

	* new-features.sgml (ov-new1.7.10): Document change in passwd command.
@
text
@d1132 2
a1133 1
<listitem><para>ATI Catalyst drivers</para></listitem>
@


1.33
log
@* cygwinenv.sgml: Remove/deprecate mention of rxvt.
* effectively.sgml: Ditto.
* faq-using.xml: Ditto.
* setup-net.sgml: Ditto.
@
text
@d1096 1
a1096 1
it.  Windows NT4 or older never saw IPv6 at all.</para>
@


1.32
log
@	* faq-using.xml (faq.using.unicode): Remove old examples.
@
text
@d583 2
a584 2
<para>First, consider using rxvt or mintty instead of the standard console
window.  In rxvt/mintty, selecting with the left-mouse also copies,
d949 3
a951 3
<para>Yes!  Use rxvt or mintty instead.  Both are optional packages in
Cygwin Setup.  You can use rxvt with or without X11, while mintty is a 
Cygwin application providing a native GUI.
@


1.31
log
@	* faq-using.xml (faq.using.bloda): Add "Credant Guardian Shield".
@
text
@a366 25

<para>To type international characters (&pound;&auml;&ouml;) in
<literal>bash</literal>, check if the following settings are available in
your <literal>bash</literal>, and if not, add them to your
<literal>~/.inputrc</literal> file and restart <literal>bash</literal>:
</para>
<screen>
	set meta-flag on 
        set convert-meta off 
        set output-meta on 
	set input-meta on
</screen>

<para>These are options to the <literal>readline</literal> library, which
you can read about in the <literal>bash(1)</literal> and
<literal>readline(3)</literal> man pages. Other tools that do not use
<literal>readline</literal> for display, such as <literal>less</literal>
and <literal>ls</literal>, might require additional settings for doublebyte
or multibyte charsets, which could be put
in your <literal>~/.bashrc</literal>, for instance:
<screen>
alias less='/bin/less -r'
alias ls='/bin/ls -F --color=tty --show-control-chars'
</screen>
</para>
@


1.30
log
@	* faq-setup.xml: Drop references to non-NT systems.
	* faq-using.xml: Ditto.
	(faq.using.sshd-in-domain): New FAQ entry.
@
text
@d1169 1
@


1.29
log
@	* faq-using.xml: Fix typos and remove incorrect locale-specific
	documentation.
	* new-features.sgml: Ditto.
	* pathnames.sgml: Ditto.
@
text
@d334 1
a334 1
<para>Alternatively, on NT, you can use the Windows <literal>print</literal>
d1020 70
@


1.28
log
@	* faq-using.xml (faq.using.bloda): Clarify wxvault.dll.
@
text
@d365 2
a366 7
<para>To get UTF-8 support you must set the LANG, LC_ALL, or LC_CTYPE
environment variables.  To get UTF-8 support you can set, for instance,
$LANG to "en_US.UTF-8".  This will give you support for the UTF-8 character
set.  Note that the language part has to contain a valid language specifier,
but is otherwise so far ignored.  There's no support for correct
language-specific collation, monetary or date/time-related
string handling.  This is planned for a later release, though.</para>
d398 1
a398 1
<para>Very likely you didn't set your Console character set to the preferred
d401 1
a401 1
maile sure that one of the internationalization environment variables
@


1.27
log
@	* faq-using.xml (faq.using.bloda): Add Lenovo IPS Core Service.
@
text
@d1086 1
a1086 1
<listitem><para>Embassy Trust Suite fingerprint reader software wxvault.dll</para></listitem>
@


1.26
log
@	* faq-using.xml (faq.using.bloda): Typofix MacAfee -> McAfee.
@
text
@d1103 1
@


1.25
log
@	* faq-using.xml (faq.using.ipv6): Try to clarify OS specific support.
	* faq-what.xml (faq.what.supported): Add Windows 7 and 2008 R2.
	* new-features.sgml: Add "and later" to rcmd news.
@
text
@d1080 1
a1080 1
<listitem><para>Norton/MacAfee/Symantec antivirus or antispyware</para></listitem>
@


1.24
log
@	* faq: Throughout, revert references to User's Guide to default URL.
@
text
@d1042 2
a1043 2
<para>IPv6 is fully supported and available right from the start with
Windows Vista and Windows Server 2008.</para>
d1051 2
a1052 1
error message.</para>
@


1.23
log
@Clean up some sources.redhat.com references.
@
text
@d46 1
a46 1
<ulink url="http://cygwin.com/1.7/cygwin-ug-net/ntsec.html" />.
d274 1
a274 1
Guide at <ulink url="http://cygwin.com/1.7/cygwin-ug-net/ntsec.html" />
d362 1
a362 1
section <ulink url="http://cygwin.com/1.7/cygwin-ug-net/setup-locale.html">Internationalization</ulink>
d414 1
a414 1
<ulink url="http://cygwin.com/1.7/cygwin-ug-net/setup-locale.html#setup-locale-console">The Windows Console character set</ulink> in the Cygwin User's Guide.</para>
d604 1
a604 1
<ulink url="http://cygwin.com/1.7/cygwin-ug-net/using.html#mount-table">http://cygwin.com/1.7/cygwin-ug-net/using.html#mount-table</ulink>
d687 1
a687 1
<ulink url="http://cygwin.com/1.7/cygwin-ug-net/using-specialnames.html">http://cygwin.com/1.7/cygwin-ug-net/using-specialnames.html</ulink>.
d707 1
a707 1
<ulink url="http://cygwin.com/1.7/cygwin-ug-net/using-specialnames.html">http://cygwin.com/1.7/cygwin-ug-net/using-specialnames.html</ulink>
d1021 1
a1021 1
<ulink url="http://cygwin.com/1.7/cygwin-ug-net/using-cygwinenv.html">http://cygwin.com/1.7/cygwin-ug-net/using-cygwinenv.html</ulink>
@


1.22
log
@	* faq-using.xml (faq.using.emacs): Update.
@
text
@a35 10
<para>Using //c (for C:) doesn't work.  (Similarly for any drive
letter, e.g. <literal>//z</literal> for <literal>Z:</literal>) This
``feature'' has long been deprecated.
For a detailed discussion of why this change was made, and how deal
with it, refer to
<ulink url="http://sources.redhat.com/ml/cygwin/2001-09/msg00014.html">http://sources.redhat.com/ml/cygwin/2001-09/msg00014.html</ulink>.
Just note that, in contrast to what that posting claims, using
<literal>/</literal> as the cygdrive prefix is not supported anymore for a
long time (though it still might work).
</para>
@


1.21
log
@	* faq-setup.xml (faq.setup.upgrade-mountpoints): New entry.
	* faq-using.xml (faq.using.directory-structure): Align example to
	latest mount output.
	* pathnames.sgml (mount-table): Add note about upgrade helper scripts
	to create /etc/fstab and /etc/fstab.f/${USER}.
@
text
@d823 8
a830 2
<para>Yes.  It uses the X11 (<ulink url="http://cygwin.com/xfree/">http://cygwin.com/xfree/</ulink>) GUI.  Right now the package is old and outdated.
Consider using XEmacs for now.
@


1.20
log
@	* setup2.sgml (setup-locale-console): New section to explain
	console character set setting.
	* faq: Throughout, change references to User's Guide to references
	to 1.7 User's Guide temporarily.
	* faq-setup.html (faq.using.unicode): Rephrase slightly.
	(faq.using.weirdchars): New FAQ entry for console charset problems.
@
text
@d754 4
a757 3
	C:\cygwin\bin on /usr/bin type system (binmode)
	C:\cygwin\lib on /usr/lib type system (binmode)
	C:\cygwin on / type system (binmode)
a759 2
<para>(Exactly what you see depends on what options you gave to <literal>setup.exe</literal>.)
</para>
@


1.19
log
@	* faq-using.xml (faq.using.symlinkstoppedworking): Rename.
	(faq.using.ipv6): New IPv6 FAQ.
	* gdb.sgml: Remove incorrect statement about Insight.
@
text
@d56 1
a56 1
<ulink url="http://cygwin.com/cygwin-ug-net/ntsec.html" />.
d284 1
a284 1
Guide at <ulink url="http://cygwin.com/cygwin-ug-net/ntsec.html" />
d371 3
a373 1
variables.</para>
d384 2
a385 1
<literal>bash</literal>, add the following lines to your
d409 18
a429 1

d614 1
a614 1
<ulink url="http://cygwin.com/cygwin-ug-net/using.html#mount-table">http://cygwin.com/cygwin-ug-net/using.html#mount-table</ulink>
d697 1
a697 1
<ulink url="http://cygwin.com/cygwin-ug-net/using-specialnames.html">http://cygwin.com/cygwin-ug-net/using-specialnames.html</ulink>.
d717 1
a717 1
<ulink url="http://cygwin.com/cygwin-ug-net/using-specialnames.html">http://cygwin.com/cygwin-ug-net/using-specialnames.html</ulink>
d1026 1
a1026 1
<ulink url="http://cygwin.com/cygwin-ug-net/using-cygwinenv.html">http://cygwin.com/cygwin-ug-net/using-cygwinenv.html</ulink>
@


1.18
log
@	* faq-using.xml (faq.using.unicode): Modernize.
	(faq.api.symlinkstoppedworking): Move here from faq-api.xml.
@
text
@d970 1
a970 1
<qandaentry id="faq.api.symlinkstoppedworking">
d1023 23
@


1.17
log
@
	* faq-using.xml (faq.using.bloda):  Update with new entries.
@
text
@d370 2
a371 2
Cygwin relies on the setting of the CYGWIN environment variable as well
as on the setting of LANG/LC_xxx environment variables.</para>
d373 6
a378 10
<para>To get UTF-8 support you must set the environment variable CYGWIN
so that it contains the substring "codepage:utf8".  This is required in
Cygwin so far to get correct translation from Windows wide character
filenames to their UTF-8 counterpart.  Applications on the other hand
require the setting of the LANG, LC_ALL, or LC_CTYPE environment variables.
To get UTF-8 support you can set, for instance, $LANG to "en_US.UTF-8".
This will give you support for the UTF-8 character set.  Note that the
language part has to contain a valid language specifier, but is otherwise
so far ignored by newlib, the underlying C library.  There's no support
for correct language-specific collation, monetary or date/time-related
a389 1
	set kanji-code sjis
d396 3
a398 2
and <literal>ls</literal>, require additional settings, which could be put
in your <literal>~/.bashrc</literal>:
a401 2
export LANG="ja_JP.SJIS"
export OUTPUT_CHARSET="sjis"
a402 2
These examples use the Japanese Shift-JIS character set, obviously
you will want to change them for your own locale. 
d970 18
@


1.16
log
@	* faq-using.xml: Rework UTF FAQ to accommodate latest setlocale
	change in newlib.
@
text
@d1030 2
a1031 2
<listitem><para>Sonic Solutions burning software containing DLA component</para></listitem>
<listitem><para>Norton/MacAffee/Symantec antivirus or antispyware</para></listitem>
d1040 14
@


1.15
log
@	* faq-using.xml: Rework XEmacs FAQ.
@
text
@d371 14
a384 5
as on the setting of LANG environment variable.  The underlying C library,
newlib, only supports a small subset of LANG settings.  The default is "C".
To get UTF-8 support you must set LANG to "C-UTF-8" and CYGWIN so that
it contains "codepage:utf8".
</para>
@


1.14
log
@	* faq-using.xml: Fix usage of ampersand in NT emacs script.
@
text
@d809 1
a809 1
<question><para>What about XEmacs?</para></question>
d812 26
a837 3
<para>For a concise description of the current situation with XEmacs, see
this message from the Cygwin mailing list:
<ulink url="http://cygwin.com/ml/cygwin/2002-11/msg00609.html">http://cygwin.com/ml/cygwin/2002-11/msg00609.html</ulink>.
d839 10
@


1.13
log
@	* faq-using.xml: Expand Emacs entries.
@
text
@d886 1
a886 1
	(defun my-bash (&optional buffer)
@


1.12
log
@	* faq-using.xml: First cut on Emacs.
@
text
@d808 10
d822 5
a826 4
<para>If you want GNU Emacs with a native Microsoft GUI interface, then
you can either use XEmacs (see below), or you can fetch a native NT Emacs
from <ulink url="http://ftp.gnu.org/pub/gnu/emacs/windows/">http://ftp.gnu.org/pub/gnu/emacs/windows/</ulink>.  See also the README file you get from the
same place.
d836 5
d844 1
a844 1
	;;
d847 25
a871 4
	;;
	;; NT-emacs assumes a Windows command shell, which you change
	;; here.
	;;
d873 5
a877 6
	(setenv "SHELL" shell-file-name) 
	(setq explicit-shell-file-name shell-file-name) 
	;;
	;; This removes unsightly ^M characters that would otherwise
	;; appear in the output of java applications.
	;;
d880 36
a925 10
<qandaentry id="faq.using.xemacs">
<question><para>What about XEmacs?</para></question>
<answer>

<para>For a concise description of the current situation with XEmacs, see
this message from the Cygwin mailing list:
<ulink url="http://cygwin.com/ml/cygwin/2002-11/msg00609.html">http://cygwin.com/ml/cygwin/2002-11/msg00609.html</ulink>.
</para>
</answer></qandaentry>

@


1.11
log
@	* faq-setup.xml: Revamp for Cygwin 1.7.
	* faq-using.xml: Ditto.
@
text
@d803 2
a804 4
<para>Yes!  It uses the X11 (<ulink url="http://cygwin.com/xfree/">http://cygwin.com/xfree/</ulink>) Windows
interface.  From a remote login shell, this ``emacs -nw'' works fine.
There is also a non-X11 version which just provides the text-only
terminal interface.  Use Cygwin Setup to install either one (or both).
d812 4
a815 4
<para>If you want GNU Emacs with a native Microsoft Windows interface, but
without X, then you must use the native Windows port, commonly known
as ``NT Emacs''.  You get NT Emacs from any GNU mirror.  It is not
available from Cygwin Setup.
d850 1
a850 1
Emacs from Cygwin Setup.
@


1.10
log
@* faq-using.xml: Remove assertion that lpr doesn't exit.
* faq-what.xml: Remove ancient who's who data.
@
text
@d3 1
a3 1
<question><para>Why can't my application locate cygncurses5.dll?  or cygintl.dll?  or cygreadline5.dll?  or ...?</para></question>
d6 1
a6 6
<para>If you upgraded recently, and suddenly vim (or some other Cygwin
application) cannot find <literal>cygncurses5.dll</literal>, it probably means that you did
not follow these instructions properly:
<ulink url="http://cygwin.com/ml/cygwin-announce/2001/msg00124.html">http://cygwin.com/ml/cygwin-announce/2001/msg00124.html</ulink>.  To
repair the damage, you must run Cygwin Setup again, and re-install the
<literal>libncurses5</literal> package.
d8 5
a12 1
<para>Note that Cygwin Setup won't show this option by default.  In the
d15 3
a17 7
installed.  Scroll down to locate the <literal>libncurses5</literal> package.
Click on the ``cycle'' glyph until it says ``Reinstall''.  Continue
with the installation.
</para>
<para>Similarly, if something cannot find <literal>cygintl.dll</literal>, then run
Cygwin Setup and re-install the <literal>libintl</literal> and <literal>libintl1</literal>
packages.
d20 1
a20 2
it to other missing DLLs (like cygreadline5.dll) and identify their
containing packages, see
d29 1
a29 1
<para>If you recently upgraded and suddenly <emphasis>every</emphasis> command takes a
d32 7
a38 8
notation in your PATH or startup files.  This now means the
<emphasis>network share</emphasis> <literal>c</literal>, which will slow things down
tremendously if it does not exist.  
</para>
<para>Using //c (for C:) doesn't work anymore.  (Similarly for any drive
letter, e.g. <literal>//z</literal> for <literal>Z:</literal>) This ``feature'' has long been
deprecated, and no longer works at all in the latest release.  As of
release 1.3.3, <literal>//c</literal> now means the <emphasis>network share</emphasis> <literal>c</literal>.
d40 1
a40 1
with it now, refer to
d42 3
a47 15
<qandaentry id="faq.using.services">
<question><para>Why don't my services work?</para></question>
<answer>

<para>Most Windows services run as a special user called <literal>SYSTEM</literal>.  If you
installed Cygwin for "Just Me", the <literal>SYSTEM</literal> user won't see your
Cygwin mount table.  You need to re-mount all of your mounts as
"system" for services to work. You can re-run <literal>setup.exe</literal> and
select "Install for All Users", or this script will do the trick:
</para>
<screen>
eval "`mount -m | sed -e 's/ -u / -s /g' -e 's/$/;/'`"
</screen>
</answer></qandaentry>

d52 4
a55 4
<para>When a service switches to a certain user, it is running as 
<literal>SYSTEM</literal> impersonating the user account. During
impersonation, the user's password is not available and so non-public
network shares are not available.  For more information, see
d87 3
d93 1
a93 1
<question><para>Bash says "command not found", but it's right there!</para></question>
d104 1
a104 1
<para>Unlike Windows, bash does not look for programs in <literal>.</literal> (the current
d143 1
a143 2
to set HOME correctly, or move your .bashrc to the top of the drive
mounted as / in Cygwin.
d192 1
a192 1
<para>Cygwin versions &lt; 1.3.0 do not follow MS Windows Explorer Shortcuts
d196 3
a198 3
<para>Since version 1.3.0, Cygwin uses shortcuts as symlinks by default.
</para>
<para>Cygwin shortcuts are different from shortcuts created by native Windows
d240 3
a242 2
<para>You may be able to use <literal>login</literal> instead, but you should read
<ulink url="http://www.cygwin.com/ml/cygwin/2001-03/msg00337.html">http://www.cygwin.com/ml/cygwin/2001-03/msg00337.html</ulink> first.
d251 1
a251 1
<question><para>Why doesn't man (or apropos) work?</para></question>
d276 4
a279 2
will fail since FAT32 does not provide any security. You might consider 
converting the drive to NTFS with <literal>CONVERT.EXE</literal>.
a288 16
<qandaentry id="faq.using.mkdir-network">
<question><para>Why doesn't <literal>mkdir -p</literal> work on a network share?</para></question>
<answer>

<para>Starting with <literal>coreutils-5.3.0-6</literal> and <literal>cygwin-1.5.17</literal>, you can
do something like this:
</para>
<screen>
bash$ mkdir -p //MACHINE/Share/path/to/new/dir
</screen>

<para>However, coreutils expects Unix path names, so something like
<literal>mkdir -p \\\\machine\\share\\path</literal> will fail. 
</para>
</answer></qandaentry>

d294 5
a298 5
<command>/bin/sh</command> is really <command>bash</command> (prior to
<command>bash-3.0-6</command>, <command>/bin/sh</command> was ash).  and is
missing some features you might expect in <command>/bin/sh</command>,
particularly if you are used to <command>/bin/sh</command> actually being
<command>zsh</command> (MacOS X "Panther") or <command>ksh</command> (Tru64).  
d301 7
a307 2
<para>Or, it could be a permission problem, and Cygwin doesn't understand that your script is executable.  Because <literal>chmod</literal> may not work (see FAQ entry above), Cygwin must read the contents of files to determine if
they are executable.  If your script does not start with
d324 2
a325 1
<para>Note that you can use <literal>mount -x</literal> to force Cygwin to treat all files
d344 2
a345 2
<para>Alternatively, on NT, you can use the Windows <literal>print</literal> command.  (It
does not seem to be available on Win9x.)  Type
d370 9
a378 4
Cygwin is not Unicode-aware, so things that might work in Linux will
not necessarily work on Cygwin. However, some things do work. To type
international characters (&pound;&auml;&ouml;) in <literal>bash</literal>, add the following
lines to your <literal>~/.inputrc</literal> file and restart <literal>bash</literal>:
d388 6
a393 5
<para>These are options to the <literal>readline</literal> library, which you can read
about in the <literal>bash(1)</literal> and <literal>readline(3)</literal> man pages. Other
tools that do not use <literal>readline</literal> for display, such as <literal>less</literal>
and <literal>ls</literal>, require additional settings, which could be put in your
<literal>~/.bashrc</literal>:
a402 34

</answer></qandaentry>

<qandaentry id="faq.using.cursor">
<question><para>Why don't cursor keys work under Win95/Win98?</para></question>
<answer>

<para><emphasis role='bold'>(Please note: This section has not yet been updated for the latest net release.)</emphasis>
</para>
<para>Careful examination shows that they not just non-functional, but
rather behave strangely, for example, with NumLock off, keys on numeric
keyboard work, until you press usual cursor keys, when even numeric
stop working, but they start working again after hitting alphanumeric
key, etc. This reported to happen on localized versions of Win98 and
Win95, and not specific to Cygwin; there are known cases of Alt+Enter
(fullscreen/windowed toggle) not working and shifts sticking with
other programs. The cause of this problem is Microsoft keyboard
localizer which by default installed in 'autoexec.bat'. Corresponding
line looks like:
</para>
<screen>
keyb ru,,C:\WINDOWS\COMMAND\keybrd3.sys
</screen>

<para>(That's for russian locale.) You should comment that line if you want
your keys working properly. Of course, this will deprive you of your
local alphabet keyboard support, so you should think about
another localizer. ex-USSR users are of course knowledgeable of Keyrus
localizer, and it might work for other locales too, since it has keyboard
layout editor. But it has russian messages and documentation ;-(
Reference URL is http://www.hnet.ru/software/contrib/Utils/KeyRus/
(note the you may need to turn off Windows logo for Keyrus to operate
properly).
</para>
d414 3
a416 3
running at the same time.  This could happen, for example, if you update
cygwin1.dll without exiting <emphasis>all</emphasis> Cygwin apps (including inetd)
beforehand.
d419 5
a423 4
you get by running <ulink url="http://cygwin.com/setup.exe">setup.exe</ulink>, installed in the
directory controlled by this program.  If you have other versions on
your system and desire help from the cygwin project, you should delete
or rename all DLLs that are not installed by <filename>setup.exe</filename>.
d464 1
a464 1
conflictng with the system cygwin?
d469 9
a477 6
must be run serially.  This means that you can't be running programs
using both versions of Cygwin at the same time.  Please be aware that
currently both versions will use the same mount table entries although
this wil change in Cygwin version 1.7.x.
</para><para>
This usage is not recommeded for novices.  Only limited support will be
d490 4
a493 3
directory then the rules in 9.3 apply.  If the application installs an
older version of the DLL in /bin then you should complain loudly to the
application provider.
d537 1
a537 1
<para>Remeber that the operative term here is "volunteer".
d586 9
a594 18
<para>Note that you only need to mount drives once.  The mapping is kept
in the registry so mounts stay valid pretty much indefinitely.
You can only get rid of them with umount, or the registry editor.
</para>
<para>The '-b' option to mount mounts the mountpoint in binary mode
("binmode") where text and binary files are treated equivalently.  This
should only be necessary for badly ported Unix programs where binary
flags are missing from open calls.  It is also the setting for /,
/usr/bin and /usr/lib in a default Cygwin installation.  The default for
new mounts is text mode ("textmode"), which is also the mode for all
"cygdrive" mounts.
</para>
<para>You can change the default <literal>cygdrive</literal> prefix and whether it is
binmode or textmode using the <literal>mount</literal> command.  For example,
<screen>
	bash$ mount -b --change-cygdrive-prefix cygdrive
</screen>
will change all <literal>/cygdrive/...</literal> mounts to binmode.
d602 3
a604 3
<para>First, consider using rxvt instead of the standard console window.  In
rxvt, selecting with the left-mouse also copies, and middle-mouse
pastes.  It couldn't be easier!
d606 1
a606 1
<para>Under Windows NT, open the properties dialog of the console window.
a609 3
<para>Under Windows 9x, open the properties dialog of the console window.
Select the Misc tab.  Uncheck Fast Pasting.  Check QuickEdit.
</para>
d652 2
a653 2
<para>During development, we have both Linux boxes running Samba and Windows
machines.  We often build with cross-compilers under Linux and copy
d655 4
a658 3
directly off the Samba-mounted partition.  On dual-boot NT/Windows 9x
machines, we usually use the FAT filesystem so we can also access the
files under Windows 9x.
d663 1
a663 1
<question><para>Is Cygwin case-sensitive? What are managed mounts?</para></question>
d668 10
a677 19
of this is perl's configuration script, which wants <literal>Makefile</literal> and
<literal>makefile</literal>.  WIN32 can't tell the difference between files with
just different case, so the configuration fails.
</para>
<para>To help with this problem, starting in <literal>cygwin-1.5.0</literal> it is
possible to have a case sensitive Cygwin managed mount. This is an
experimental feature and should be used with caution. You should only
use it for directories that are initially unpopulated and are due to
be completely managed by cygwin (hence the name).  So, the best use
would be to create an empty directory, mount it, and then add files to
it:  
</para>
<screen>
mkdir /managed-dir
mount -o managed c:/cygwin/managed-dir /managed-dir
cd /managed-dir/
touch makefile
touch Makefile
</screen>
d685 2
a686 2
<para>Files cannot be named com1, lpt1, or aux (to name a few); either as
the root filename or as the extension part.  If you do, you'll have
d693 6
d714 1
a714 1
This should never be necessary under Windows NT.
d870 3
a872 51
<para>Yes!  Use rxvt instead.  It's an optional package in Cygwin Setup.
You can use it with or without X11.  You can resize it easily by
dragging an edge or corner.  Copy and paste is easy with the left and
middle mouse buttons, respectively.  It will honor settings in your
~/.Xdefaults file, even without X.  For details see
<literal>/usr/share/doc/Cygwin/rxvt-&lt;ver&gt;.README</literal>.
</para>
</answer></qandaentry>

<qandaentry id="faq.using.info-error">
<question><para>info error "dir: No such file or directory"</para></question>
<answer>

<para>Cygwin packages install their info documentation in the
<literal>/usr/share/info</literal> directory.  But you need to create a <literal>dir</literal>
file there before the standalone info program (probably
<literal>/usr/bin/info</literal>) can be used to read those info files.  This is how
you do it:
<screen>
	bash$ cd /usr/share/info
	bash$ for f in *.info ; do install-info $f dir ; done
</screen>
This may generate warnings:
<screen>
	install-info: warning: no info dir entry in `gzip.info'
	install-info: warning: no info dir entry in `time.info'
</screen>
The <literal>install-info</literal> command cannot parse these files, so you will
have to add their entries to <literal>/usr/share/info/dir</literal> by hand.
</para>
<para>Even if the dir file already exists, you may have to update it when
you install new Cygwin packages.  Some packages update the dir file
for you, but many don't.
</para>
</answer></qandaentry>

<qandaentry id="faq.using.out-of-queue">
<question><para>Why do I get a message saying Out of Queue slots?</para></question>
<answer>

<para>"Out of queue slots!" generally occurs when you're trying to remove
many files that you do not have permission to remove (either because
you don't have permission, they are opened exclusively, etc).  What
happens is Cygwin queues up these files with the supposition that it
will be possible to delete these files in the future.  Assuming that
the permission of an affected file does change later on, the file will
be deleted as requested.  However, if too many requests come in to
delete inaccessible files, the queue overflows and you get the message
you're asking about.  Usually you can remedy this with a quick chmod,
close of a file, or other such thing.  (Thanks to Larry Hall for
this explanation).
d892 3
a894 9
</answer></qandaentry>

<qandaentry id="faq.using.df-incorrect">
<question><para>Why does df report sizes incorrectly.</para></question>
<answer>

<para>There is a bug in the Win32 API function GetFreeDiskSpace that
makes it return incorrect values for disks larger than 2 GB in size.
Perhaps that may be your problem?
d904 2
a905 2
They are built with the <literal>-mno-cygwin</literal> option to <literal>gcc</literal>, which
means they do not understand Cygwin mounts or symbolic links.
@


1.9
log
@* faq-using.xml: Add more words about multiple cygwins.
@
text
@d360 1
a360 1
<para>There is no working lp or lpr system as you would find on UNIX.
@


1.8
log
@	* faq-using.xml (faq.using.bloda):  New entry.
	(faq.using.firewall, faq.using.anti-virus):  Link to faq.using.bloda.
	* faq-setup.xml (faq.setup.hang):  Likewise link to faq.using.bloda.
@
text
@d471 1
a471 1
you get by running <ulink url="http://cygwin.com/setup.exe">http://cygwin.com/setup.exe</ulink>, installed in the
d484 65
@


1.7
log
@	* faq-using.xml (faq.using.console-window): Mention FHS location of
	docs and remove outdated reference to ash.
@
text
@d636 4
d789 4
d961 83
@


1.6
log
@
        * faq-setup.xml (faq.setup.uninstall): Mention Safe Mode
	requirement for accessing the Security tab in XP Home.
        * faq-using.xml (faq.using.chmod): Mention FAT32.
@
text
@d862 2
a863 5
~/.Xdefaults file, even without X.
</para>
<para>Don't invoke as simply ``rxvt'' because that will run /bin/sh (really
ash) which is not a good interactive shell.  For details see
<literal>/usr/doc/Cygwin/rxvt-&lt;ver&gt;.README</literal>.
@


1.5
log
@faq.using.chmod faq.programming.adjusting-heap
@
text
@d282 1
a282 1
<question><para>Why doesn't chmod work?</para></question>
d291 4
a404 1
	set meta-flag on
@


1.4
log
@* faq-setup.xml: Add note about clean_setup.pl.
* faq-using.xml: Remove unnecessary line of elisp.
@
text
@d285 11
a295 18
<para><literal>ntsec</literal> will allow UNIX permissions in Windows NT on NTFS file
systems.  This is on by default (a recent change).
</para>
<para><literal>ntea</literal> works on NTFS <emphasis>and</emphasis> FAT but it creates a huge,
<emphasis role='bold'>undeletable</emphasis> file on FAT filesystems.
</para>
<para>(The <literal>ntsec</literal> and <literal>ntea</literal> settings are values for the
<literal>CYGWIN</literal> environment variable.  See the Cygwin User's Guide at
<ulink url="http://cygwin.com/cygwin-ug-net/cygwin-ug-net.html">http://cygwin.com/cygwin-ug-net/cygwin-ug-net.html</ulink> for more
information on this variable and its settings.)
</para>
<para>There is no solution at all for Windows 9x.
</para>
<para>If you have an application that requires a certain permission mode on a
file, you may be able to work around this requirement by modifying the
application's source code.  For a hint, based on work done by Corinna
Vinschen for OpenSSH, see this message from the cygwin mailing list:
<ulink url="http://cygwin.com/ml/cygwin/2000-11/msg01176.html">http://cygwin.com/ml/cygwin/2000-11/msg01176.html</ulink>.
@


1.3
log
@2005-08-26  Brian Dessent  <brian@@dessent.net>

        * faq-using.xml: Add 'net use' hint to network shares FAQ.
@
text
@a828 1
	(setq process-coding-system-alist '(("bash" . undecided-unix)))
@


1.2
log
@
2005-08-26  Joshua Daniel Franklin  <joshuadfranklin@@yahoo.com>

	* Makefile.in: Remove extra anchor to make NN4 happy.
	* faq.xml: Link to cygwin.com/license.html
	* faq-resources.xml: Link instead of duplicating info.
	* faq-using.xml: Split out services and network shares FAQ.
	* faq-what.xml: Link to cygwin.com/license.html
@
text
@d78 5
a82 3
authentication (for non-critical files), or running the service as
your own user with <literal>cygrunsrv -u</literal> (see 
<literal>/usr/share/doc/Cygwin/cygrunsrv.README</literal> for more information).
@


1.1
log
@Update to switch FAQ from texinfo to DocBook.
@
text
@d53 1
a53 1
<question><para>Why don't my services work (or access network shares)?</para></question>
d65 5
d71 5
a75 3
<para>The <literal>SYSTEM</literal> user cannot access network shares that require
authentication.  For more information, see
<ulink url="http://cygwin.com/cygwin-ug-net/ntsec.html">http://cygwin.com/cygwin-ug-net/ntsec.html</ulink>.
@

