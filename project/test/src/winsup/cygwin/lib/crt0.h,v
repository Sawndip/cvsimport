head	1.7;
access;
symbols
	cygwin-1_7_35-release:1.7
	cygwin-1_7_34-release:1.7
	cygwin-1_7_33-release:1.7
	cygwin-1_7_32-release:1.7
	cygwin-1_7_31-release:1.7
	cygwin-1_7_30-release:1.7
	cygwin-1_7_29-release:1.7
	cygwin-1_7_29-release-branchpoint:1.7.0.2
	cygwin-pre-user-db:1.7
	cygwin-1_7_28-release:1.7
	cygwin-1_7_27-release:1.7
	cygwin-1_7_26-release:1.7
	cygwin-1_7_25-release:1.7
	cygwin-1_7_24-release:1.7
	cygwin-1_7_23-release:1.7
	cygwin-1_7_22-release:1.7
	cygwin-1_7_21-release:1.7
	cygwin-1_7_20-release:1.7
	cygwin-1_7_19-release:1.7
	cygwin-64bit-postmerge:1.7
	cygwin-64bit-premerge-branch:1.6.0.2
	cygwin-64bit-premerge:1.6
	cygwin-1_7_18-release:1.6
	post-ptmalloc3:1.5.2.2
	pre-ptmalloc3:1.5.2.2
	cygwin-1_7_17-release:1.5
	cygwin-64bit-branch:1.5.0.2
	cygwin-1_7_16-release:1.4
	cygwin-1_7_15-release:1.4
	cygwin-1_7_14_2-release:1.4
	cygwin-1_7_14-release:1.4
	cygwin-1_7_12-release:1.4
	cygwin-1_7_11-release:1.4
	cygwin-1_7_10-release:1.4
	signal-rewrite:1.4.0.8
	pre-notty:1.4
	cygwin-1_7_9-release:1.4
	cv-post-1_7_9:1.4.0.6
	cygwin-1_7_8-release:1.4
	cygwin-1_7_7-release:1.4
	cygwin-1_7_5-release:1.4
	cygwin-1_7_4-release:1.4
	cygwin-1_7_3-release:1.4
	cygwin-1_7_2-release:1.4
	fifo_doover3:1.4.0.4
	cygwin-1_7_1-release:1.4
	prefifo:1.4
	cv-branch-2:1.4.0.2
	pre-ripout-set_console_state_for_spawn:1.3
	EOL_registry_mounts:1.3
	preoverlapped:1.3
	drop_9x_support_start:1.3
	cr-0x5f1:1.3.0.26
	cv-branch:1.3.0.24
	pre-ptymaster-archetype:1.3
	cr-0x3b58:1.3.0.22
	cr-0x5ef:1.3.0.20
	after-mmap-privanon-noreserve:1.3
	after-mmap-revamp:1.3
	before-mmap-revamp:1.3
	cgf-more-exit-sync:1.3
	post_wait_sig_exit:1.3
	pre_wait_sig_exit:1.3
	reparent-point:1.3
	noreparent:1.3.0.18
	cr-0x5e6:1.3.0.16
	cr-0x9e:1.3.0.14
	cr-0x9d:1.3.0.12
	cgf-deleteme:1.3.0.10
	pre-sigrewrite:1.3
	corinna-01:1.3
	cr-0x9c:1.3.0.8
	cr-0x9b:1.3.0.6
	cr-0x99:1.3
	Z-emcb-cygwin_daemon:1.3.0.2
	w32api-2_2:1.3
	mingw-runtime-2_4:1.3
	pre-cgf-merge:1.3
	cgf-dev-branch:1.3.0.56
	predaemon:1.3
	cygwin_daemon_merge_HEAD:1.3
	pregp02r1:1.3.0.34
	cygnus_cvs_20020108_pre:1.3
	Z-cygwin_daemon_merge-new_HEAD:1.3
	Z-cygwin_daemon_merge_HEAD:1.3
	cygwin_daemon:1.3.0.4;
locks; strict;
comment	@ * @;


1.7
date	2013.04.23.09.44.35;	author corinna;	state Exp;
branches;
next	1.6;

1.6
date	2013.01.21.04.38.31;	author cgf;	state Exp;
branches;
next	1.5;

1.5
date	2012.07.30.04.43.22;	author cgf;	state Exp;
branches
	1.5.2.1;
next	1.4;

1.4
date	2008.07.27.16.59.07;	author cgf;	state Exp;
branches;
next	1.3;

1.3
date	2001.09.11.20.01.02;	author cgf;	state Exp;
branches;
next	1.2;

1.2
date	2000.07.08.04.36.27;	author cgf;	state Exp;
branches;
next	1.1;

1.1
date	2000.07.01.03.51.55;	author cgf;	state Exp;
branches;
next	;

1.5.2.1
date	2012.10.23.14.23.50;	author corinna;	state Exp;
branches;
next	1.5.2.2;

1.5.2.2
date	2013.01.21.13.52.14;	author corinna;	state Exp;
branches;
next	;


desc
@@


1.7
log
@	* Merge in cygwin-64bit-branch.
@
text
@/* crt0.h: header file for crt0.

   Copyright 2000, 2001, 2008, 2012 Red Hat, Inc.

This file is part of Cygwin.

This software is a copyrighted work licensed under the terms of the
Cygwin license.  Please consult the file "CYGWIN_LICENSE" for
details. */

#ifdef __cplusplus
extern "C" {
#endif

#include "winlean.h"
struct per_process;
typedef int (*MainFunc) (int argc, char *argv[], char **env);
int __stdcall _cygwin_crt0_common (MainFunc, struct per_process *);
PVOID dll_dllcrt0 (HMODULE, struct per_process *);

#ifdef __cplusplus
}
#endif
@


1.6
log
@Throughout, update copyrights to reflect dates which correspond to main-branch
checkins.  Regularize copyright format.
@
text
@d19 1
a19 1
int dll_dllcrt0 (HMODULE, struct per_process *);
@


1.5
log
@* Makefile.common (CFLAGS_COMMON): Add temporary define to work around w32api
problem.

* cygwin/winlean.h: Define constant which will be needed eventually.  Remove
hack in favor of another hack.
* cygwin/lib/crt0.h: Use "winlean.h".
@
text
@d3 1
a3 1
   Copyright 2000, 2001, 2008 Red Hat, Inc.
@


1.5.2.1
log
@	* dll_init.cc (reserve_at): Use PVOID rather than DWORD as type for
	pointer parameters and return type.
	(release_at): Ditto.
	(dll_list::load_after_fork_impl): Fix format strings.  Call reserve_at
	without casts to DWORD.
	(struct dllcrt0_info): Change type of res to PVOID.
	(dll_dllcrt0): Return PVOID rather than int.
	(dll_dllcrt0_1): Accommodate type change of dllcrt0_info::res.
	(dll_noncygwin_dllcrt0): Disable on 64 bit.  Add a cast for 32 bit.
	* dll_init.h (struct pefile): Drop 32 bit decoration from Windows
	types.
	* ntdll.h (struct _DEBUG_HEAP_INFORMATION): Define Base as UINT_PTR.
	(struct _DEBUG_MODULE_INFORMATION): Define Reserved and Base as
	UINT_PTR.
	* winsup.h (dll_dllcrt0): Declare as PVOID.
	(dll_noncygwin_dllcrt0): Don't declare on 64 bit.
	* include/cygwin/cygwin_dll.h (cygwin_attach_dll): Declare as PVOID.
	(cygwin_detach_dll): Declare with PVOID parameter.
	(dll_index): Declare as PVOID.
	(_cygwin_dll_entry): Accommodate type change of dll_index.
	* lib/crt0.h (dll_dllcrt0): Declare as PVOID.
	* lib/cygwin_attach_dll.c (cygwin_attach_dll): Define PVOID.
@
text
@d19 1
a19 1
PVOID dll_dllcrt0 (HMODULE, struct per_process *);
@


1.5.2.2
log
@Pull in changes from HEAD
@
text
@d3 1
a3 1
   Copyright 2000, 2001, 2008, 2012 Red Hat, Inc.
@


1.4
log
@* mount.cc (mount_info::init): Add location where we're looking for fstab to
temporary message.
* lib/cygwin_crt0.c (cygwin_crt0): Simplify by eliminating accommodations for
ancient cygwin DLLs.
* lib/crt0.h: Include <windows.h> directly since it is needed.
@
text
@d15 1
a15 1
#include <windows.h>
@


1.3
log
@Update copyrights.
@
text
@d3 1
a3 1
   Copyright 2000, 2001 Red Hat, Inc.
d15 1
@


1.2
log
@* external.cc (cygwin_internal): Export __cygwin_user_data.
* include/sys/cygwin.h: Allow definition of per_process even when not compiling
with C++.
(cygwin_getinfo_types): Add CW_USER_DATA.
* lib/_cygwin_crt0_common.cc (_cygwin_crt0_common): Get __cygwin_user_data
pointer from cygwin_internal.  If it doesn't exist, return failure.  Use either
this pointer or passed in pointer throughout.  Clear forkee.
* lib/crt0.h: Accomodate argument changes to _cygwin_crt0_common.
* lib/cygwin_attach_dll.c (cygwin_attach_dll): Reorganize to allow use of newer
binaries with older DLLs.  Detect older DLLs when _cygwin_crt0_common returns 0
and allocate space for a per_process structure on the stack.
* lib/cygwin_crt0.c (cygwin_crt0): Ditto.
@
text
@d3 1
a3 1
   Copyright 2000 Cygnus Solutions.
@


1.1
log
@* Makefile.in: Use variables rather than configure constructs where
appropriate.
(LIBCOS): Find additional stub library stuff in their own subdirectory.
* dcrt0.cc: Convert user_data pointer to static __cygwin_user_data area.
(do_global_ctors): Check magic_bisquit for initialization.
(dll_crt0_1): First group of premain functions prior to fd initialization.  Run
second group before calling main.
(dll_crt0 ()): New function, called from new initialization code.
(dll_crt0 (per_process *uptr)): Call new dll_crt0 () function on
initialization.
* debug.cc (thread_stub): Initialize bottom of stack with per-thread info.
* environ.cc (parse_thing): Use binmode global to control CYGWIN=binmode
behavior.
* fhandler.cc (fhandler_base::open): Allow explicit setting of __fmode to
O_BINARY or O_TEXT to override disk mount settings.
* libcmain.cc: Move to lib subdirectory.
* libccrt0.cc: Ditto.
* dll_main.cc: Ditto.
* dll_entry.cc: Ditto.
* getopt.c: Ditto.
* thread.cc (thread_init_wrapper): Call ExitThread explicitly rather than
returning, as a preliminary step towards placing per thread info at the bottom
of the stack.
* winsup.h: Move per_process class to include/sys/cygwin.h.  Declare new
dll_crt0().
* include/cygwin/version.h: Bump API minor version.
* binmode.c: New file.
* textmode.c: Ditto.
* lib/_cygwin_crt0_common.cc: Ditto.
* lib/crt0.h: Ditto.
* lib/cygwin_attach_dll.c: Ditto.
* lib/cygwin_crt0.c: Ditto.
* lib/dll_entry.cc: Ditto.
* lib/dll_main.cc: Ditto.
* lib/getopt.c: Ditto.
* lib/libcmain.c: Ditto.
* lib/premain0.c: Ditto.
* lib/premain1.c: Ditto.
* lib/premain2.c: Ditto.
* lib/premain3.c: Ditto.
@
text
@d17 1
a17 1
void _cygwin_crt0_common (MainFunc);
@

