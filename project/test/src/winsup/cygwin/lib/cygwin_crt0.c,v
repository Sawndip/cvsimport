head	1.14;
access;
symbols
	cygwin-1_7_35-release:1.14
	cygwin-1_7_34-release:1.14
	cygwin-1_7_33-release:1.14
	cygwin-1_7_32-release:1.14
	cygwin-1_7_31-release:1.14
	cygwin-1_7_30-release:1.14
	cygwin-1_7_29-release:1.14
	cygwin-1_7_29-release-branchpoint:1.14.0.4
	cygwin-pre-user-db:1.14
	cygwin-1_7_28-release:1.14
	cygwin-1_7_27-release:1.14
	cygwin-1_7_26-release:1.14
	cygwin-1_7_25-release:1.14
	cygwin-1_7_24-release:1.14
	cygwin-1_7_23-release:1.14
	cygwin-1_7_22-release:1.14
	cygwin-1_7_21-release:1.14
	cygwin-1_7_20-release:1.14
	cygwin-1_7_19-release:1.14
	cygwin-64bit-postmerge:1.14
	cygwin-64bit-premerge-branch:1.14.0.2
	cygwin-64bit-premerge:1.14
	cygwin-1_7_18-release:1.14
	post-ptmalloc3:1.13.6.1
	pre-ptmalloc3:1.13.6.1
	cygwin-1_7_17-release:1.13
	cygwin-64bit-branch:1.13.0.6
	cygwin-1_7_16-release:1.13
	cygwin-1_7_15-release:1.13
	cygwin-1_7_14_2-release:1.13
	cygwin-1_7_14-release:1.13
	cygwin-1_7_12-release:1.13
	cygwin-1_7_11-release:1.13
	cygwin-1_7_10-release:1.13
	signal-rewrite:1.13.0.4
	pre-notty:1.13
	cygwin-1_7_9-release:1.13
	cv-post-1_7_9:1.13.0.2
	cygwin-1_7_8-release:1.13
	cygwin-1_7_7-release:1.11
	cygwin-1_7_5-release:1.11
	cygwin-1_7_4-release:1.11
	cygwin-1_7_3-release:1.11
	cygwin-1_7_2-release:1.11
	fifo_doover3:1.11.0.4
	cygwin-1_7_1-release:1.11
	prefifo:1.11
	cv-branch-2:1.11.0.2
	pre-ripout-set_console_state_for_spawn:1.9
	EOL_registry_mounts:1.9
	preoverlapped:1.8
	drop_9x_support_start:1.8
	cr-0x5f1:1.8.0.26
	cv-branch:1.8.0.24
	pre-ptymaster-archetype:1.8
	cr-0x3b58:1.8.0.20
	cr-0x5ef:1.8.0.18
	after-mmap-privanon-noreserve:1.8
	after-mmap-revamp:1.8
	before-mmap-revamp:1.8
	cgf-more-exit-sync:1.8
	post_wait_sig_exit:1.8
	pre_wait_sig_exit:1.8
	reparent-point:1.8
	noreparent:1.8.0.16
	cr-0x5e6:1.8.0.14
	cr-0x9e:1.8.0.12
	cr-0x9d:1.8.0.10
	cgf-deleteme:1.8.0.8
	pre-sigrewrite:1.8
	corinna-01:1.8
	cr-0x9c:1.8.0.6
	cr-0x9b:1.8.0.4
	cr-0x99:1.8
	Z-emcb-cygwin_daemon:1.8.0.2
	w32api-2_2:1.8
	mingw-runtime-2_4:1.8
	pre-cgf-merge:1.8
	cgf-dev-branch:1.8.0.44
	predaemon:1.8
	cygwin_daemon_merge_HEAD:1.8
	pregp02r1:1.8.0.22
	cygnus_cvs_20020108_pre:1.8
	Z-cygwin_daemon_merge-new_HEAD:1.8
	Z-cygwin_daemon_merge_HEAD:1.8
	cygwin_daemon:1.7.0.4;
locks; strict;
comment	@ * @;


1.14
date	2013.01.21.04.38.31;	author cgf;	state Exp;
branches;
next	1.13;

1.13
date	2011.02.15.15.56.03;	author corinna;	state Exp;
branches
	1.13.6.1;
next	1.12;

1.12
date	2011.02.10.02.22.36;	author cgf;	state Exp;
branches;
next	1.11;

1.11
date	2009.01.03.05.12.22;	author cgf;	state Exp;
branches;
next	1.10;

1.10
date	2008.07.27.16.59.07;	author cgf;	state Exp;
branches;
next	1.9;

1.9
date	2007.08.02.14.30.17;	author cgf;	state Exp;
branches;
next	1.8;

1.8
date	2001.11.14.10.47.54;	author corinna;	state Exp;
branches;
next	1.7;

1.7
date	2001.09.11.20.01.02;	author cgf;	state Exp;
branches
	1.7.4.1;
next	1.6;

1.6
date	2000.10.28.05.41.44;	author cgf;	state Exp;
branches;
next	1.5;

1.5
date	2000.07.29.04.19.24;	author cgf;	state Exp;
branches;
next	1.4;

1.4
date	2000.07.17.19.18.21;	author cgf;	state Exp;
branches;
next	1.3;

1.3
date	2000.07.08.04.36.27;	author cgf;	state Exp;
branches;
next	1.2;

1.2
date	2000.07.01.04.26.45;	author cgf;	state Exp;
branches;
next	1.1;

1.1
date	2000.07.01.03.51.55;	author cgf;	state Exp;
branches;
next	;

1.13.6.1
date	2013.01.21.13.52.14;	author corinna;	state Exp;
branches;
next	;

1.7.4.1
date	2002.01.04.03.56.16;	author rbcollins;	state Exp;
branches;
next	;


desc
@@


1.14
log
@Throughout, update copyrights to reflect dates which correspond to main-branch
checkins.  Regularize copyright format.
@
text
@/* cygwin_crt0.c: crt0 for cygwin

   Copyright 2000, 2001, 2007, 2008, 2009, 2011 Red Hat, Inc.

This file is part of Cygwin.

This software is a copyrighted work licensed under the terms of the
Cygwin license.  Please consult the file "CYGWIN_LICENSE" for
details. */

#undef __INSIDE_CYGWIN__
#include "crt0.h"

extern void __stdcall _dll_crt0 ()
  __declspec (dllimport) __attribute__ ((noreturn));

/* for main module */
void
cygwin_crt0 (MainFunc f)
{
  _cygwin_crt0_common (f, NULL);
  _dll_crt0 ();	/* Jump into the dll, never to return */
}
@


1.13
log
@	* Throughout fix copyright dates.
@
text
@d3 1
a3 1
   Copyright 2000, 2001, 2007, 2008, 2011 Red Hat, Inc.
@


1.13.6.1
log
@Pull in changes from HEAD
@
text
@d3 1
a3 1
   Copyright 2000, 2001, 2007, 2008, 2009, 2011 Red Hat, Inc.
@


1.12
log
@* cygheap.cc: Add some __stdcall decoration where appropriate.
* lib/cygwin_crt0.c: __attribute -> __attribute__.
@
text
@d1 1
a1 1
/* cygwin_crt0.cc: crt0 for cygwin
d3 1
a3 1
   Copyright 2000, 2001, 2008, 2009 Red Hat, Inc.
@


1.11
log
@Remove unneeded header files from source files throughout.  Update copyrights
where appropriate.
* globals.cc: New file for generic global variables.
* mkglobals_h: New file to generate globals.h.
* mkstatic: New Script used to build a (currently non-working) static
libcygwin_s.a.
* Makefile.in: Add unused rule to build a non-working libcygwin_s.a.
(DLL_OFILES): Add globals.o.  Make all objects rely on globals.h.
(globals.h): New target.  Generate globals.h.
* cygtls.h: Honor new CYGTLS_HANDLE define to control when the HANDLE operator
is allowed in _cygtls.
* dcrt0.cc: Move most globals to globals.cc.
* init.cc: Ditto.
* environ.cc (strip_title_path): Remove now-unneeded extern.
* fhandler_serial.cc (fhandler_serial::open): Ditto.
* pinfo.cc: Ditto.
(commune_process): Ditto.
* shared.cc: Ditto.
* glob.cc: Ditto.
* strace.cc: Ditto.
* exceptions.cc: Define CYGTLS_HANDLE before including winsup.h.
* path.cc (stat_suffixes): Move here.
* security.h: Add forward class path_conv declaration.
* smallprint.cc (__small_vsprintf): Make a true c++ function.
(__small_sprintf): Ditto.
(small_printf): Ditto.
(console_printf): Ditto.
(__small_vswprintf): Ditto.
(__small_swprintf): Ditto.
* spawn.cc (spawn_guts): Remove _stdcall decoration in favor of regparm.
(hExeced): Move to globals.cc
* strfuncs.cc (current_codepage): Ditto.
(active_codepage): Ditto.
* sync.cc (lock_process::locker): Move here from dcrt0.cc.
* syscalls.cc (stat_suffixes): Move to path.cc.
* tty.cc (tty::create_master): Uncapitalize fatal warning for consistency.
* winsup.h: Include globals.h to declare most of the grab bag list of globals
which were previously defined here.
* mount.h: Move USER_* defines back to shared_info.h.
* speclib: Force temporary directory cleanup.
@
text
@d15 1
a15 1
  __declspec (dllimport) __attribute ((noreturn));
@


1.10
log
@* mount.cc (mount_info::init): Add location where we're looking for fstab to
temporary message.
* lib/cygwin_crt0.c (cygwin_crt0): Simplify by eliminating accommodations for
ancient cygwin DLLs.
* lib/crt0.h: Include <windows.h> directly since it is needed.
@
text
@d3 1
a3 1
   Copyright 2000, 2001 Red Hat, Inc.
a11 1
#include <sys/cygwin.h>
@


1.9
log
@* lib/cygwin_attach_dll.c: Fix compiler warning.
* lib/cygwin_crt0.c: Ditto.
@
text
@a11 3
#include <windows.h>
#include <time.h>	/* Needed since call to sys/time.h via sys/cygwin.h
			   complains otherwise */
a12 1
#include <stdlib.h>
d15 2
a16 1
extern void dll_crt0__FP11per_process (struct per_process *)  __declspec (dllimport) __attribute ((noreturn));
d22 2
a23 10
  struct per_process *u;
  if (_cygwin_crt0_common (f, NULL))
    u = NULL;		/* Newer DLL.  Use DLL internal per_process. */
  else			/* Older DLL.  Provide a per_process */
    {
      u = (struct per_process *) alloca (sizeof (*u));
      memset (u, 0, sizeof (u));
      (void) _cygwin_crt0_common (f, u);
    }
  dll_crt0__FP11per_process (u);	/* Jump into the dll, never to return */
@


1.8
log
@	* winsup.h: Remove alloca definition since it's now defined through
	inclusion of stdlib.h.
	* lib/cygwin_crt0.c: Ditto.
@
text
@d13 2
@


1.7
log
@Update copyrights.
@
text
@d14 1
a15 2

#define alloca __builtin_alloca
@


1.7.4.1
log
@Merged changes from HEAD
@
text
@a13 1
#include <stdlib.h>
d15 2
@


1.6
log
@Whitespace cleanup.

* configure.in: Eliminate subdir stuff.
* configure: Regenerate.
* include/getopt.h (option): Make name field 'const'.
@
text
@d3 1
a3 1
   Copyright 2000 Cygnus Solutions.
@


1.5
log
@* include/cygwin/cygwin_dll.h: Update for modern compilers.
* lib/cygwin_crt0.c: Inexplicably need to define alloca for newer compilers.
* fhandler.h (fhandler_console): Add new method.
* fhandler.cc (fhandler_console::set_cursor_maybe): New method.
(fhandler_console::read): Set cursor if it has moved to make it visible.
@
text
@d33 1
a33 1
  dll_crt0__FP11per_process (u); 	/* Jump into the dll, never to return */
@


1.4
log
@Throughout, eliminate third argument to path_conv and use new PC_* constants
for second argument.
* path.h: Generalize SYMLINK_* constants to PC_*.
(path_conv): Create a new method.  Fold third argument into second.
* dll_init.cc (dll_list::alloc): Try harder to find space to allocate dll
struct.
(dll_dllcrt0): Don't check sanity if we've already called dll_crt0.
* path.cc (path_conv::check): Don't check for a null or empty path unless
specifically told with a flag setting.
(check_null_empty_path): New function, adapted from macro.
* syscalls.cc (_rename): Use already-determined file attributes rather than
checking again.
* lib/cygwin/cygwin_attach.dll.c (cygwin_attach_dll): Use a static per_process
structure since this is apparently supposed to be zeroed.
* lib/cygwin_crt0.c (cygwin_crt0): Zero per_process structure sent to older
DLLs.
@
text
@d16 2
@


1.3
log
@* external.cc (cygwin_internal): Export __cygwin_user_data.
* include/sys/cygwin.h: Allow definition of per_process even when not compiling
with C++.
(cygwin_getinfo_types): Add CW_USER_DATA.
* lib/_cygwin_crt0_common.cc (_cygwin_crt0_common): Get __cygwin_user_data
pointer from cygwin_internal.  If it doesn't exist, return failure.  Use either
this pointer or passed in pointer throughout.  Clear forkee.
* lib/crt0.h: Accomodate argument changes to _cygwin_crt0_common.
* lib/cygwin_attach_dll.c (cygwin_attach_dll): Reorganize to allow use of newer
binaries with older DLLs.  Detect older DLLs when _cygwin_crt0_common returns 0
and allocate space for a per_process structure on the stack.
* lib/cygwin_crt0.c (cygwin_crt0): Ditto.
@
text
@d28 1
@


1.2
log
@* dcrt0.cc (_dll_crt0): Renamed from dll_crt0 ().
* winsup.h: Accomodate above change.
* cygwin.din: Ditto.
* lib/cygwin_crt0.c: Ditto.
@
text
@d1 1
a1 1
/* crt0.cc: crt0 for libc
d11 1
d13 1
d16 1
a16 1
extern void __stdcall _dll_crt0 (void)  __declspec (dllimport) __attribute ((noreturn));
d22 9
a30 4
  _cygwin_crt0_common (f);

 /* Jump into the dll. */
  _dll_crt0 ();
@


1.1
log
@* Makefile.in: Use variables rather than configure constructs where
appropriate.
(LIBCOS): Find additional stub library stuff in their own subdirectory.
* dcrt0.cc: Convert user_data pointer to static __cygwin_user_data area.
(do_global_ctors): Check magic_bisquit for initialization.
(dll_crt0_1): First group of premain functions prior to fd initialization.  Run
second group before calling main.
(dll_crt0 ()): New function, called from new initialization code.
(dll_crt0 (per_process *uptr)): Call new dll_crt0 () function on
initialization.
* debug.cc (thread_stub): Initialize bottom of stack with per-thread info.
* environ.cc (parse_thing): Use binmode global to control CYGWIN=binmode
behavior.
* fhandler.cc (fhandler_base::open): Allow explicit setting of __fmode to
O_BINARY or O_TEXT to override disk mount settings.
* libcmain.cc: Move to lib subdirectory.
* libccrt0.cc: Ditto.
* dll_main.cc: Ditto.
* dll_entry.cc: Ditto.
* getopt.c: Ditto.
* thread.cc (thread_init_wrapper): Call ExitThread explicitly rather than
returning, as a preliminary step towards placing per thread info at the bottom
of the stack.
* winsup.h: Move per_process class to include/sys/cygwin.h.  Declare new
dll_crt0().
* include/cygwin/version.h: Bump API minor version.
* binmode.c: New file.
* textmode.c: Ditto.
* lib/_cygwin_crt0_common.cc: Ditto.
* lib/crt0.h: Ditto.
* lib/cygwin_attach_dll.c: Ditto.
* lib/cygwin_crt0.c: Ditto.
* lib/dll_entry.cc: Ditto.
* lib/dll_main.cc: Ditto.
* lib/getopt.c: Ditto.
* lib/libcmain.c: Ditto.
* lib/premain0.c: Ditto.
* lib/premain1.c: Ditto.
* lib/premain2.c: Ditto.
* lib/premain3.c: Ditto.
@
text
@d14 1
a14 1
extern void __stdcall dll_crt0 (void)  __declspec (dllimport);
d23 1
a23 1
  dll_crt0 ();
@

