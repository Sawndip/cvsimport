head	1.9;
access;
symbols
	cygwin-1_7_35-release:1.9
	cygwin-1_7_34-release:1.9
	cygwin-1_7_33-release:1.2.2.2
	cygwin-1_7_32-release:1.2.2.2
	cygwin-1_7_31-release:1.2.2.2
	cygwin-1_7_30-release:1.2.2.1
	cygwin-1_7_29-release:1.2.2.1
	cygwin-1_7_29-release-branchpoint:1.2.0.2
	cygwin-pre-user-db:1.2
	cygwin-1_7_28-release:1.2
	cygwin-1_7_27-release:1.2
	cygwin-1_7_26-release:1.2
	cygwin-1_7_25-release:1.2
	cygwin-1_7_24-release:1.2
	cygwin-1_7_23-release:1.2
	cygwin-1_7_22-release:1.2
	cygwin-1_7_21-release:1.2
	cygwin-1_7_20-release:1.2
	cygwin-1_7_19-release:1.2
	cygwin-64bit-postmerge:1.2
	post-ptmalloc3:1.1.2.2
	pre-ptmalloc3:1.1.2.2
	cygwin-64bit-branch:1.1.0.2;
locks; strict;
comment	@ * @;


1.9
date	2014.08.25.14.53.49;	author corinna;	state Exp;
branches;
next	1.8;

1.8
date	2014.08.22.09.21.33;	author corinna;	state Exp;
branches;
next	1.7;

1.7
date	2014.04.18.14.29.49;	author corinna;	state Exp;
branches;
next	1.6;

1.6
date	2014.04.04.16.45.29;	author corinna;	state Exp;
branches;
next	1.5;

1.5
date	2014.03.12.17.36.56;	author corinna;	state Exp;
branches;
next	1.4;

1.4
date	2014.02.17.15.36.33;	author corinna;	state Exp;
branches;
next	1.3;

1.3
date	2014.02.09.19.44.56;	author corinna;	state Exp;
branches;
next	1.2;

1.2
date	2013.04.23.09.44.34;	author corinna;	state Exp;
branches
	1.2.2.1;
next	1.1;

1.1
date	2012.12.11.17.53.39;	author corinna;	state dead;
branches
	1.1.2.1;
next	;

1.2.2.1
date	2014.04.04.16.45.34;	author corinna;	state Exp;
branches;
next	1.2.2.2;

1.2.2.2
date	2014.07.16.08.01.00;	author corinna;	state Exp;
branches;
next	;

1.1.2.1
date	2012.12.11.17.53.39;	author corinna;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2013.02.04.15.43.12;	author corinna;	state Exp;
branches;
next	1.1.2.3;

1.1.2.3
date	2013.02.28.10.03.29;	author corinna;	state Exp;
branches;
next	1.1.2.4;

1.1.2.4
date	2013.03.15.15.28.54;	author corinna;	state Exp;
branches;
next	1.1.2.5;

1.1.2.5
date	2013.03.15.16.21.11;	author corinna;	state Exp;
branches;
next	;


desc
@@


1.9
log
@	* cygtls.cc (_cygtls::remove): Revert previous patch.
	*  cygtls.h (struct _local_storage): Move pathbufs back here.
	(class san/x86_64): Revert class.  Save and restore pathbufs counters
	only.
	(class san/i686): Revert saving and restoring pathbufs counters.
	(__try/x86_64): Add a san variable and call it's setup method.
	(__except/x86_64): Call san::leave to restore pathbufs counters.
	* gendef (_sigbe): Revert previous change.
	* thread.cc (verifyable_object_state): Remove gcc 4.7 workaround in
	forward declaration as well.
	* tls_pbuf.cc (tls_pbuf): Revert previous change.
	* tls_pbuf.h (class tmp_pathbuf): Accommodate reverting pathbufs to
	locals structure.
	* tlsoffsets.h: Regenerate.
	* tlsoffsets64.h: Regenerate.
@
text
@//;# autogenerated:  Do not edit.

//; $tls::start_offset = -12800;
//; $tls::locals = -12800;
//; $tls::plocals = 0;
//; $tls::local_clib = -10624;
//; $tls::plocal_clib = 2176;
//; $tls::__dontuse = -10624;
//; $tls::p__dontuse = 2176;
//; $tls::func = -8736;
//; $tls::pfunc = 4064;
//; $tls::saved_errno = -8728;
//; $tls::psaved_errno = 4072;
//; $tls::sa_flags = -8724;
//; $tls::psa_flags = 4076;
//; $tls::oldmask = -8720;
//; $tls::poldmask = 4080;
//; $tls::deltamask = -8712;
//; $tls::pdeltamask = 4088;
//; $tls::errno_addr = -8704;
//; $tls::perrno_addr = 4096;
//; $tls::sigmask = -8696;
//; $tls::psigmask = 4104;
//; $tls::sigwait_mask = -8688;
//; $tls::psigwait_mask = 4112;
//; $tls::sigwait_info = -8680;
//; $tls::psigwait_info = 4120;
//; $tls::signal_arrived = -8672;
//; $tls::psignal_arrived = 4128;
//; $tls::will_wait_for_signal = -8664;
//; $tls::pwill_wait_for_signal = 4136;
//; $tls::thread_context = -8656;
//; $tls::pthread_context = 4144;
//; $tls::thread_id = -7824;
//; $tls::pthread_id = 4976;
//; $tls::infodata = -7820;
//; $tls::pinfodata = 4980;
//; $tls::tid = -7672;
//; $tls::ptid = 5128;
//; $tls::_ctinfo = -7664;
//; $tls::p_ctinfo = 5136;
//; $tls::andreas = -7656;
//; $tls::pandreas = 5144;
//; $tls::wq = -7648;
//; $tls::pwq = 5152;
//; $tls::sig = -7600;
//; $tls::psig = 5200;
//; $tls::incyg = -7596;
//; $tls::pincyg = 5204;
//; $tls::spinning = -7592;
//; $tls::pspinning = 5208;
//; $tls::stacklock = -7588;
//; $tls::pstacklock = 5212;
//; $tls::stackptr = -7584;
//; $tls::pstackptr = 5216;
//; $tls::stack = -7576;
//; $tls::pstack = 5224;
//; $tls::initialized = -5528;
//; $tls::pinitialized = 7272;
//; __DATA__

#define tls_locals (-12800)
#define tls_plocals (0)
#define tls_local_clib (-10624)
#define tls_plocal_clib (2176)
#define tls___dontuse (-10624)
#define tls_p__dontuse (2176)
#define tls_func (-8736)
#define tls_pfunc (4064)
#define tls_saved_errno (-8728)
#define tls_psaved_errno (4072)
#define tls_sa_flags (-8724)
#define tls_psa_flags (4076)
#define tls_oldmask (-8720)
#define tls_poldmask (4080)
#define tls_deltamask (-8712)
#define tls_pdeltamask (4088)
#define tls_errno_addr (-8704)
#define tls_perrno_addr (4096)
#define tls_sigmask (-8696)
#define tls_psigmask (4104)
#define tls_sigwait_mask (-8688)
#define tls_psigwait_mask (4112)
#define tls_sigwait_info (-8680)
#define tls_psigwait_info (4120)
#define tls_signal_arrived (-8672)
#define tls_psignal_arrived (4128)
#define tls_will_wait_for_signal (-8664)
#define tls_pwill_wait_for_signal (4136)
#define tls_thread_context (-8656)
#define tls_pthread_context (4144)
#define tls_thread_id (-7824)
#define tls_pthread_id (4976)
#define tls_infodata (-7820)
#define tls_pinfodata (4980)
#define tls_tid (-7672)
#define tls_ptid (5128)
#define tls__ctinfo (-7664)
#define tls_p_ctinfo (5136)
#define tls_andreas (-7656)
#define tls_pandreas (5144)
#define tls_wq (-7648)
#define tls_pwq (5152)
#define tls_sig (-7600)
#define tls_psig (5200)
#define tls_incyg (-7596)
#define tls_pincyg (5204)
#define tls_spinning (-7592)
#define tls_pspinning (5208)
#define tls_stacklock (-7588)
#define tls_pstacklock (5212)
#define tls_stackptr (-7584)
#define tls_pstackptr (5216)
#define tls_stack (-7576)
#define tls_pstack (5224)
#define tls_initialized (-5528)
#define tls_pinitialized (7272)
@


1.8
log
@	* Throughout, use __try/__except/__endtry blocks, rather than myfault
	handler.
	* cygtls.cc (_cygtls::remove): Accommodate the fact that pathbufs
	has been moved from _local_storage to _cygtls.
	* cygtls.h (class tls_pathbuf): Add comment to hint to gendef usage
	of counters.  Change type of counters to uint32_t for clarity.
	Remove _cygtls as friend class.
	(struct _local_storage): Move pathbufs from here...
	(struct _cygtls): ...to here, allowing to access it from _sigbe.
	(class san): Only define on 32 bit.  Remove errno, _c_cnt and _w_cnt
	members.
	(san::setup): Drop parameter.  Don't initialize removed members.
	(san::leave): Don't set removed members.
	(class myfault): Only define on 32 bit.
	(myfault::faulted): Only keep implementation not taking any parameter.
	Drop argument in call to sebastian.setup.
	(__try/__leave/__except/__endtry): Implement to support real SEH.  For
	now stick to SJLJ on 32 bit.
	* dcrt0.cc (dll_crt0_0): Drop 64 bit call to
	exception::install_myfault_handler.
	* exception.h (exception_handler): Define with EXCEPTION_DISPOSITION
	as return type.
	(PDISPATCHER_CONTEXT): Define as void * on 32 bit.  Define as pointer
	to _DISPATCHER_CONTEXT on 64 bit.
	(class exception): Define separately for 32 and 64 bit.
	(exception::myfault): Add handler for myfault SEH handling on 64 bit.
	(exception::exception): Fix mangled method name to account for change
	in type of last parameter.
	(exception::install_myfault_handler): Remove.
	* exceptions.cc (exception::myfault_handle): Remove.
	(exception::myfault): New SEH handler for 64 bit.
	* gendef (_sigbe): Set tls_pathbuf counters to 0 explicitely when
	returning to the caller.
	* ntdll.h: Move a comment to a better place.
	(struct _SCOPE_TABLE): Define on 64 bit.
	* thread.cc (verifyable_object_isvalid): Remove gcc 4.7 workaround.
	* tls_pbuf.cc (tls_pbuf): Fix to accommodate new place of pathbufs.
	(tls_pathbuf::destroy): Change type of loop variables to uint32_t.
	* tls_pbuf.h (class tmp_pathbuf): Change type of buffer counters to
	uint32_t.  Accommodate new place of pathbufs.
	* tlsoffsets.h: Regenerate.
	* tlsoffsets64.h: Regenerate.
@
text
@d6 38
a43 40
//; $tls::local_clib = -11432;
//; $tls::plocal_clib = 1368;
//; $tls::__dontuse = -11432;
//; $tls::p__dontuse = 1368;
//; $tls::func = -9544;
//; $tls::pfunc = 3256;
//; $tls::saved_errno = -9536;
//; $tls::psaved_errno = 3264;
//; $tls::sa_flags = -9532;
//; $tls::psa_flags = 3268;
//; $tls::oldmask = -9528;
//; $tls::poldmask = 3272;
//; $tls::deltamask = -9520;
//; $tls::pdeltamask = 3280;
//; $tls::errno_addr = -9512;
//; $tls::perrno_addr = 3288;
//; $tls::sigmask = -9504;
//; $tls::psigmask = 3296;
//; $tls::sigwait_mask = -9496;
//; $tls::psigwait_mask = 3304;
//; $tls::sigwait_info = -9488;
//; $tls::psigwait_info = 3312;
//; $tls::signal_arrived = -9480;
//; $tls::psignal_arrived = 3320;
//; $tls::will_wait_for_signal = -9472;
//; $tls::pwill_wait_for_signal = 3328;
//; $tls::thread_context = -9464;
//; $tls::pthread_context = 3336;
//; $tls::thread_id = -8632;
//; $tls::pthread_id = 4168;
//; $tls::infodata = -8628;
//; $tls::pinfodata = 4172;
//; $tls::tid = -8480;
//; $tls::ptid = 4320;
//; $tls::_ctinfo = -8472;
//; $tls::p_ctinfo = 4328;
//; $tls::andreas = -8464;
//; $tls::pandreas = 4336;
//; $tls::pathbufs = -8456;
//; $tls::ppathbufs = 4344;
d64 38
a101 40
#define tls_local_clib (-11432)
#define tls_plocal_clib (1368)
#define tls___dontuse (-11432)
#define tls_p__dontuse (1368)
#define tls_func (-9544)
#define tls_pfunc (3256)
#define tls_saved_errno (-9536)
#define tls_psaved_errno (3264)
#define tls_sa_flags (-9532)
#define tls_psa_flags (3268)
#define tls_oldmask (-9528)
#define tls_poldmask (3272)
#define tls_deltamask (-9520)
#define tls_pdeltamask (3280)
#define tls_errno_addr (-9512)
#define tls_perrno_addr (3288)
#define tls_sigmask (-9504)
#define tls_psigmask (3296)
#define tls_sigwait_mask (-9496)
#define tls_psigwait_mask (3304)
#define tls_sigwait_info (-9488)
#define tls_psigwait_info (3312)
#define tls_signal_arrived (-9480)
#define tls_psignal_arrived (3320)
#define tls_will_wait_for_signal (-9472)
#define tls_pwill_wait_for_signal (3328)
#define tls_thread_context (-9464)
#define tls_pthread_context (3336)
#define tls_thread_id (-8632)
#define tls_pthread_id (4168)
#define tls_infodata (-8628)
#define tls_pinfodata (4172)
#define tls_tid (-8480)
#define tls_ptid (4320)
#define tls__ctinfo (-8472)
#define tls_p_ctinfo (4328)
#define tls_andreas (-8464)
#define tls_pandreas (4336)
#define tls_pathbufs (-8456)
#define tls_ppathbufs (4344)
@


1.7
log
@	* cygtls.h (TP_NUM_C_BUFS): Raise to 50 to allow SYMLOOP_MAX recursions
	path_conv <-> normalize_posix_path, plus a bit of buffer.
	(TP_NUM_W_BUFS): Ditto.
	(class san): Change type of _c_cnt and _w_cnt to unsigned.
	* path.cc (normalize_posix_path): Guard recursion into path_conv
	against tmp_pathbuf overflow.  Generate normalized path in call to
	path_conv.  If the path is valid, replace dst with the normalized_path
	from path_conv call.  Add comment to explain why we're doing this.
	* tls_pbuf.cc (tls_pathbuf::destroy): Only free buffers until the
	first buffer pointer is NULL.
	(tmp_pathbuf::c_get): Simplify error message.
	(tmp_pathbuf::w_get): Ditto.
	* tls_pbuf.h (class tmp_pathbuf): Change type of c_buf_old and w_buf_old
	to unsigned.
	(tmp_pathbuf::check_usage): New inline method to check if we have
	enough tmp_pathbuf buffers left to call a function using tmp_pathbuf
	buffers.
	* tlsoffsets.h: Regenerate.
	* tlsoffsets64.h: Regenerate.
@
text
@d6 40
a45 38
//; $tls::local_clib = -10624;
//; $tls::plocal_clib = 2176;
//; $tls::__dontuse = -10624;
//; $tls::p__dontuse = 2176;
//; $tls::func = -8736;
//; $tls::pfunc = 4064;
//; $tls::saved_errno = -8728;
//; $tls::psaved_errno = 4072;
//; $tls::sa_flags = -8724;
//; $tls::psa_flags = 4076;
//; $tls::oldmask = -8720;
//; $tls::poldmask = 4080;
//; $tls::deltamask = -8712;
//; $tls::pdeltamask = 4088;
//; $tls::errno_addr = -8704;
//; $tls::perrno_addr = 4096;
//; $tls::sigmask = -8696;
//; $tls::psigmask = 4104;
//; $tls::sigwait_mask = -8688;
//; $tls::psigwait_mask = 4112;
//; $tls::sigwait_info = -8680;
//; $tls::psigwait_info = 4120;
//; $tls::signal_arrived = -8672;
//; $tls::psignal_arrived = 4128;
//; $tls::will_wait_for_signal = -8664;
//; $tls::pwill_wait_for_signal = 4136;
//; $tls::thread_context = -8656;
//; $tls::pthread_context = 4144;
//; $tls::thread_id = -7824;
//; $tls::pthread_id = 4976;
//; $tls::infodata = -7820;
//; $tls::pinfodata = 4980;
//; $tls::tid = -7672;
//; $tls::ptid = 5128;
//; $tls::_ctinfo = -7664;
//; $tls::p_ctinfo = 5136;
//; $tls::andreas = -7656;
//; $tls::pandreas = 5144;
d66 40
a105 38
#define tls_local_clib (-10624)
#define tls_plocal_clib (2176)
#define tls___dontuse (-10624)
#define tls_p__dontuse (2176)
#define tls_func (-8736)
#define tls_pfunc (4064)
#define tls_saved_errno (-8728)
#define tls_psaved_errno (4072)
#define tls_sa_flags (-8724)
#define tls_psa_flags (4076)
#define tls_oldmask (-8720)
#define tls_poldmask (4080)
#define tls_deltamask (-8712)
#define tls_pdeltamask (4088)
#define tls_errno_addr (-8704)
#define tls_perrno_addr (4096)
#define tls_sigmask (-8696)
#define tls_psigmask (4104)
#define tls_sigwait_mask (-8688)
#define tls_psigwait_mask (4112)
#define tls_sigwait_info (-8680)
#define tls_psigwait_info (4120)
#define tls_signal_arrived (-8672)
#define tls_psignal_arrived (4128)
#define tls_will_wait_for_signal (-8664)
#define tls_pwill_wait_for_signal (4136)
#define tls_thread_context (-8656)
#define tls_pthread_context (4144)
#define tls_thread_id (-7824)
#define tls_pthread_id (4976)
#define tls_infodata (-7820)
#define tls_pinfodata (4980)
#define tls_tid (-7672)
#define tls_ptid (5128)
#define tls__ctinfo (-7664)
#define tls_p_ctinfo (5136)
#define tls_andreas (-7656)
#define tls_pandreas (5144)
@


1.6
log
@Forced checkin
@
text
@d6 54
a59 54
//; $tls::local_clib = -11264;
//; $tls::plocal_clib = 1536;
//; $tls::__dontuse = -11264;
//; $tls::p__dontuse = 1536;
//; $tls::func = -9376;
//; $tls::pfunc = 3424;
//; $tls::saved_errno = -9368;
//; $tls::psaved_errno = 3432;
//; $tls::sa_flags = -9364;
//; $tls::psa_flags = 3436;
//; $tls::oldmask = -9360;
//; $tls::poldmask = 3440;
//; $tls::deltamask = -9352;
//; $tls::pdeltamask = 3448;
//; $tls::errno_addr = -9344;
//; $tls::perrno_addr = 3456;
//; $tls::sigmask = -9336;
//; $tls::psigmask = 3464;
//; $tls::sigwait_mask = -9328;
//; $tls::psigwait_mask = 3472;
//; $tls::sigwait_info = -9320;
//; $tls::psigwait_info = 3480;
//; $tls::signal_arrived = -9312;
//; $tls::psignal_arrived = 3488;
//; $tls::will_wait_for_signal = -9304;
//; $tls::pwill_wait_for_signal = 3496;
//; $tls::thread_context = -9296;
//; $tls::pthread_context = 3504;
//; $tls::thread_id = -8464;
//; $tls::pthread_id = 4336;
//; $tls::infodata = -8460;
//; $tls::pinfodata = 4340;
//; $tls::tid = -8312;
//; $tls::ptid = 4488;
//; $tls::_ctinfo = -8304;
//; $tls::p_ctinfo = 4496;
//; $tls::andreas = -8296;
//; $tls::pandreas = 4504;
//; $tls::wq = -8288;
//; $tls::pwq = 4512;
//; $tls::sig = -8240;
//; $tls::psig = 4560;
//; $tls::incyg = -8236;
//; $tls::pincyg = 4564;
//; $tls::spinning = -8232;
//; $tls::pspinning = 4568;
//; $tls::stacklock = -8228;
//; $tls::pstacklock = 4572;
//; $tls::stackptr = -8224;
//; $tls::pstackptr = 4576;
//; $tls::stack = -8216;
//; $tls::pstack = 4584;
//; $tls::initialized = -6168;
//; $tls::pinitialized = 6632;
d64 54
a117 54
#define tls_local_clib (-11264)
#define tls_plocal_clib (1536)
#define tls___dontuse (-11264)
#define tls_p__dontuse (1536)
#define tls_func (-9376)
#define tls_pfunc (3424)
#define tls_saved_errno (-9368)
#define tls_psaved_errno (3432)
#define tls_sa_flags (-9364)
#define tls_psa_flags (3436)
#define tls_oldmask (-9360)
#define tls_poldmask (3440)
#define tls_deltamask (-9352)
#define tls_pdeltamask (3448)
#define tls_errno_addr (-9344)
#define tls_perrno_addr (3456)
#define tls_sigmask (-9336)
#define tls_psigmask (3464)
#define tls_sigwait_mask (-9328)
#define tls_psigwait_mask (3472)
#define tls_sigwait_info (-9320)
#define tls_psigwait_info (3480)
#define tls_signal_arrived (-9312)
#define tls_psignal_arrived (3488)
#define tls_will_wait_for_signal (-9304)
#define tls_pwill_wait_for_signal (3496)
#define tls_thread_context (-9296)
#define tls_pthread_context (3504)
#define tls_thread_id (-8464)
#define tls_pthread_id (4336)
#define tls_infodata (-8460)
#define tls_pinfodata (4340)
#define tls_tid (-8312)
#define tls_ptid (4488)
#define tls__ctinfo (-8304)
#define tls_p_ctinfo (4496)
#define tls_andreas (-8296)
#define tls_pandreas (4504)
#define tls_wq (-8288)
#define tls_pwq (4512)
#define tls_sig (-8240)
#define tls_psig (4560)
#define tls_incyg (-8236)
#define tls_pincyg (4564)
#define tls_spinning (-8232)
#define tls_pspinning (4568)
#define tls_stacklock (-8228)
#define tls_pstacklock (4572)
#define tls_stackptr (-8224)
#define tls_pstackptr (4576)
#define tls_stack (-8216)
#define tls_pstack (4584)
#define tls_initialized (-6168)
#define tls_pinitialized (6632)
@


1.5
log
@	* cygheap.h (enum cygheap_pwdgrp::cache_t): Remove.
	(cygheap_pwdgrp::caching): Convert to bool.
	(cygheap_pwdgrp::pwd_cache): Add cygserver member.
	(cygheap_pwdgrp::grp_cache): Ditto.
	(cygheap_pwdgrp::nss_db_caching): Drop.
	(cygheap_pwdgrp::nss_db_full_caching): Drop.
	(cygheap_pwdgrp::nss_cygserver_caching): New method.
	(cygheap_pwdgrp::nss_disable_cygserver_caching): New method.
	* cygserver.h (client_request::request_code_t): Add
	CYGSERVER_REQUEST_PWDGRP.
	* cygserver_pwdgrp.h: New file.
	* cygtls.h (struct _local_storage): Remove pwbuf and grbuf members.
	* grp.cc (pwdgrp::prep_tls_grbuf): Drop.
	(internal_getgrsid): Handle cygserver caching and rearrange to check
	the caches first.
	(internal_getgrnam): Ditto.
	(internal_getgrgid): Ditto.
	(gr_ent::enumerate_caches): Handle cygserver cache.
	* passwd.cc (pwdgrp::prep_tls_pwbuf): Drop.
	(internal_getpwsid): Handle cygserver caching and rearrange to check
	the caches first.
	(internal_getpwnam): Ditto.
	(internal_getpwuid): Ditto.
	(pw_ent::enumerate_caches): Handle cygserver cache.
	* pwdgrp.h (pwdgrp::add_account_from_cygserver): New method declaration.
	(pwdgrp::fetch_account_from_cygserver): New method declaration.
	(pwdgrp::prep_tls_pwbuf): Drop declaration.
	(pwdgrp::prep_tls_grbuf): Drop declaration.
	(pwdgrp::add_user_from_cygserver): New inline methods.
	(pwdgrp::add_group_from_cygserver): New inline methods.
	* tlsoffsets.h: Regenerate.
	* tlsoffsets64.h: Regenerate.
	* uinfo.cc (internal_getlogin): Call internal_getgroups if cygserver
	caching is not available.
	(cygheap_pwdgrp::init): Initialize pwd_cache.cygserver and
	grp_cache.cygserver.  Set caching to true.
	(cygheap_pwdgrp::nss_init_line): Drop db_cache handling entirely.
	(pwdgrp::add_account_from_windows): Drop no caching handling.
	(client_request_pwdgrp::client_request_pwdgrp): New method.
	(pwdgrp::fetch_account_from_cygserver): New method.
	(pwdgrp::add_account_from_cygserver): New method.

	* fhandler_disk_file.cc (fhandler_base::fstat_helper): Fix formatting.
	* include/sys/cygwin.h: Ditto.
@
text
@@


1.4
log
@	* autoload.cc (ldap_abandon): Import.
	(ldap_result): Import.
	(ldap_searchW): Import.
	(NetGroupEnum): Import.
	(NetLocalGroupEnum): Import.
	(NetUserEnum): Import.
	* cygheap.h (class cygheap_pwdgrp): Add members enums and enum_tdoms.
	(cygheap_pwdgrp::nss_db_enums): New inline method.
	(cygheap_pwdgrp::nss_db_enum_tdoms): Ditto.
	* cygtls.h (struct _local_storage): Drop unused members pw_pos and
	grp_pos.
	* grp.cc (grent): New static variable of class gr_ent.
	(gr_ent::enumerate_caches): New method.
	(gr_ent::enumerate_local): New method.
	(gr_ent::getgrent): New method.
	(setgrent): Call gr_ent method.
	(getgrent32): Ditto.
	(endgrent): Ditto.
	* ldap.cc (sid_attr): Rename from nfs_attr.
	(cyg_ldap::close): Abandon still running asynchronous search.
	(cyg_ldap::fetch_ad_account): Reduce filter buffer size.
	(cyg_ldap::enumerate_ad_accounts): New method.
	(cyg_ldap::next_account): New method.
	(cyg_ldap::fetch_posix_offset_for_domain): Reduce filter buffer size.
	(cyg_ldap::fetch_unix_sid_from_ad): Ditto.  Fix return value in case
	no value has been read.
	(cyg_ldap::fetch_unix_name_from_rfc2307): Reduce filter buffer size.
	* ldap.h (class cyg_ldap): Add msg_id member.
	(cyg_ldap::enumerate_ad_accounts): Declare.
	(cyg_ldap::next_account): Declare:
	* passwd.cc (pwent): New static variable of class pw_ent.
	(pg_ent::clear_cache): New method.
	(pg_ent::setent): New method.
	(pg_ent::getent): New method.
	(pg_ent::endent): New method.
	(pg_ent::enumerate_file): New method.
	(pg_ent::enumerate_builtin): New method.
	(pg_ent::enumerate_sam): New method.
	(pg_ent::enumerate_ad): New method.
	(pw_ent::enumerate_caches): New method.
	(pw_ent::enumerate_local): New method.
	(pw_ent::getpwent): New method.
	(setpwent): Call pw_ent method.
	(getpwent): Ditto.
	(endpwent): Ditto.
	* pwdgrp.h (class pwdgrp): Define pg_ent, pw_ent and gr_ent as friend
	classes.
	(pwdgrp::add_account_post_fetch): Declare with extra bool parameter.
	(pwdgrp::file_attr): New inline method.
	(enum nss_enum_t): Define.
	(class pg_ent): Define.
	(class pw_ent): Define.
	(class gr_ent): Define.
	* tlsoffsets.h: Regenerate.
	* tlsoffsets64.h: Ditto.
	* uinfo.cc (cygheap_pwdgrp::init): Initialize enums and enum_tdoms.
	(cygheap_pwdgrp::nss_init_line): Fix typo in preceeding comment.
	Handle new "db_enum" keyword.
	(pwdgrp::add_account_post_fetch): Take additional `bool lock' parameter
	and acquire pglock before adding element to array if lock is true.
	(pwdgrp::add_account_from_file): Call add_account_post_fetch with lock
	set to true.
	(pwdgrp::add_account_from_windows): Ditto in case of caching.
	(pwdgrp::fetch_account_from_windows): Handle builtin aliases only
	known to the domain controller.  Only call NetLocalGroupGetInfo for
	aliases.
@
text
@d6 54
a59 54
//; $tls::local_clib = -11248;
//; $tls::plocal_clib = 1552;
//; $tls::__dontuse = -11248;
//; $tls::p__dontuse = 1552;
//; $tls::func = -9360;
//; $tls::pfunc = 3440;
//; $tls::saved_errno = -9352;
//; $tls::psaved_errno = 3448;
//; $tls::sa_flags = -9348;
//; $tls::psa_flags = 3452;
//; $tls::oldmask = -9344;
//; $tls::poldmask = 3456;
//; $tls::deltamask = -9336;
//; $tls::pdeltamask = 3464;
//; $tls::errno_addr = -9328;
//; $tls::perrno_addr = 3472;
//; $tls::sigmask = -9320;
//; $tls::psigmask = 3480;
//; $tls::sigwait_mask = -9312;
//; $tls::psigwait_mask = 3488;
//; $tls::sigwait_info = -9304;
//; $tls::psigwait_info = 3496;
//; $tls::signal_arrived = -9296;
//; $tls::psignal_arrived = 3504;
//; $tls::will_wait_for_signal = -9288;
//; $tls::pwill_wait_for_signal = 3512;
//; $tls::thread_context = -9280;
//; $tls::pthread_context = 3520;
//; $tls::thread_id = -8448;
//; $tls::pthread_id = 4352;
//; $tls::infodata = -8444;
//; $tls::pinfodata = 4356;
//; $tls::tid = -8296;
//; $tls::ptid = 4504;
//; $tls::_ctinfo = -8288;
//; $tls::p_ctinfo = 4512;
//; $tls::andreas = -8280;
//; $tls::pandreas = 4520;
//; $tls::wq = -8272;
//; $tls::pwq = 4528;
//; $tls::sig = -8224;
//; $tls::psig = 4576;
//; $tls::incyg = -8220;
//; $tls::pincyg = 4580;
//; $tls::spinning = -8216;
//; $tls::pspinning = 4584;
//; $tls::stacklock = -8212;
//; $tls::pstacklock = 4588;
//; $tls::stackptr = -8208;
//; $tls::pstackptr = 4592;
//; $tls::stack = -8200;
//; $tls::pstack = 4600;
//; $tls::initialized = -6152;
//; $tls::pinitialized = 6648;
d64 54
a117 54
#define tls_local_clib (-11248)
#define tls_plocal_clib (1552)
#define tls___dontuse (-11248)
#define tls_p__dontuse (1552)
#define tls_func (-9360)
#define tls_pfunc (3440)
#define tls_saved_errno (-9352)
#define tls_psaved_errno (3448)
#define tls_sa_flags (-9348)
#define tls_psa_flags (3452)
#define tls_oldmask (-9344)
#define tls_poldmask (3456)
#define tls_deltamask (-9336)
#define tls_pdeltamask (3464)
#define tls_errno_addr (-9328)
#define tls_perrno_addr (3472)
#define tls_sigmask (-9320)
#define tls_psigmask (3480)
#define tls_sigwait_mask (-9312)
#define tls_psigwait_mask (3488)
#define tls_sigwait_info (-9304)
#define tls_psigwait_info (3496)
#define tls_signal_arrived (-9296)
#define tls_psignal_arrived (3504)
#define tls_will_wait_for_signal (-9288)
#define tls_pwill_wait_for_signal (3512)
#define tls_thread_context (-9280)
#define tls_pthread_context (3520)
#define tls_thread_id (-8448)
#define tls_pthread_id (4352)
#define tls_infodata (-8444)
#define tls_pinfodata (4356)
#define tls_tid (-8296)
#define tls_ptid (4504)
#define tls__ctinfo (-8288)
#define tls_p_ctinfo (4512)
#define tls_andreas (-8280)
#define tls_pandreas (4520)
#define tls_wq (-8272)
#define tls_pwq (4528)
#define tls_sig (-8224)
#define tls_psig (4576)
#define tls_incyg (-8220)
#define tls_pincyg (4580)
#define tls_spinning (-8216)
#define tls_pspinning (4584)
#define tls_stacklock (-8212)
#define tls_pstacklock (4588)
#define tls_stackptr (-8208)
#define tls_pstackptr (4592)
#define tls_stack (-8200)
#define tls_pstack (4600)
#define tls_initialized (-6152)
#define tls_pinitialized (6648)
@


1.3
log
@	Introduce reading passwd/group entries from SAM/AD.  Introduce
	/etc/nsswitch.conf file to configure it.
	* Makefile.in (DLL_OFILES): Add ldap.o.
	* autoload.cc: Import ldap functions from wldap32.dll.
	(DsEnumerateDomainTrustsW): Import.
	(NetGroupGetInfo): Import.
	* cygheap.h (class cygheap_domain_info): New class to keep global
	domain info.
	(class cygheap_pwdgrp): New class to keep passwd/group caches and
	configuration info from /etc/nssswitch.conf.
	(struct init_cygheap): Add cygheap_domain_info member "dom" and
	cygheap_pwdgrp member "pg".
	* cygtls.h (struct _local_storage): Remove unused member "res".
	Rearrange slightly, Add members pwbuf and grbuf to implement non-caching
	passwd/group fetching from SAM/AD.  Make pw_pos and pw_pos unsigned.
	* fhandler_disk_file.cc (fhandler_base::fstat_by_nfs_ea): Add RFC 2307
	uid/gid mapping.
	* fhandler_process.cc: Drop including pwdgrp.h.
	* fhandler_procsysvipc.cc: Ditto.
	* fhandler_registry.cc (fhandler_registry::fstat): Set key uid/gid
	to ILLEGAL_UID/ILLEGAL_GID rather than UNKNOWN_UID/UNKNOWN_GID.
	* grp.cc (group_buf): Drop.
	(gr): Drop.
	(pwdgrp::parse_group): Fill pg_grp.
	(pwdgrp::read_group): Remove.
	(pwdgrp::init_grp): New method.
	(pwdgrp::prep_tls_grbuf): New method.
	(pwdgrp::find_group): New methods.
	(internal_getgrsid): Convert to call new pwdgrp methods.
	(internal_getgrnam): Ditto.
	(internal_getgrgid): Ditto.
	(getgrgid_r): Drop 2nd parameter from internal_getgrgid call.
	(getgrgid32): Ditto.
	(getgrnam_r): Ditto for internal_getgrnam.
	(getgrnam32): Ditto.
	(getgrent32): Convert to call new pwdgrp methods.
	(internal_getgrent): Remove.
	(internal_getgroups): Simplify, especially drop calls to
	internal_getgrent.
	* ldap.cc: New file implementing cyg_ldap class for LDAP access to AD
	and RFC 2307 server.
	* ldap.h: New header, declaring cyg_ldap class.
	* passwd.cc (passwd_buf): Drop.
	(pr): Drop.
	(pwdgrp::parse_passwd): Fill pg_pwd.
	(pwdgrp::read_passwd): Remove.
	(pwdgrp::init_pwd): New method.
	(pwdgrp::prep_tls_pwbuf): New method.
	(find_user): New methods.
	(internal_getpwsid): Convert to call new pwdgrp methods.
	(internal_getpwnam): Ditto.
	(internal_getpwuid): Ditto.
	(getpwuid32): Drop 2nd parameter from internal_getpwuid call.
	(getpwuid_r): Ditto.
	(getpwnam): Ditto for internal_getpwnam.
	(getpwnam_r): Ditto.
	(getpwent): Convert to call new pwdgrp methods.
	* path.cc (class etc): Remove all methods.
	* path.h (class etc): Drop.
	* pinfo.cc (pinfo_basic::pinfo_basic): Set gid to ILLEGAL_GID rather
	than UNKNOWN_GID.
	(pinfo_init): Ditto.
	* pwdgrp.h (internal_getpwnam): Drop 2nd parameter from declaration.
	(internal_getpwuid): Ditto.
	(internal_getgrgid): Ditto.
	(internal_getgrnam): Ditto.
	(internal_getgrent): Drop declaration.
	(enum fetch_user_arg_type_t): New type.
	(struct fetch_user_arg_t): New type.
	(struct pg_pwd): New type.
	(struct pg_grp): New type.
	(class pwdgrp): Rework to provide functions for file and db requests
	and caching.
	(class ugid_cache_t): New class to provide RFC 2307 uid map caching.
	(ugid_cache): Declare.
	* sec_acl.cc: Drop including pwdgrp.h.
	* sec_auth.cc: Drop including dsgetdc.h and pwdgrp.h.
	(get_logon_server): Convert third parameter to ULONG flags argument
	to allow arbitrary flags values in DsGetDcNameW call and change calls
	to this function throughout.  Use cached account domain name rather
	than calling GetComputerNameW.
	(get_unix_group_sidlist): Remove.
	(get_server_groups): Drop call to get_unix_group_sidlist.
	(verify_token): Rework token group check without calling
	internal_getgrent.
	* sec_helper.cc (cygpsid::pstring): New methods, like string() but
	return pointer to end of string.
	(cygsid::getfromstr): Add wide character implementation.
	(get_sids_info): Add RFC 2307 uid/gid mapping for Samba shares.
	* security.cc: Drop including pwdgrp.h.
	* security.h (DEFAULT_UID): Remove.
	(UNKNOWN_UID): Remove.
	(UNKNOWN_GID): Remove.
	(uinfo_init): Move here from winsup.h.
	(ILLEGAL_UID): Ditto.
	(ILLEGAL_GID): Ditto.
	(UNIX_POSIX_OFFSET): Define.  Add lengthy comment.
	(UNIX_POSIX_MASK): Ditto.
	(MAP_UNIX_TO_CYGWIN_ID): Ditto.
	(ILLEGAL_UID16): Move here from winsup.h.
	(ILLEGAL_GID16): Ditto.
	(uid16touid32): Ditto.
	(gid16togid32): Ditto.
	(sid_id_auth): New convenience macro for SID component access.
	(sid_sub_auth_count): Ditto.
	(sid_sub_auth): Ditto.
	(sid_sub_auth_rid): Ditto.
	(cygpsid::pstring): Declare.
	(cygsid::getfromstr): Declare wide character variant.
	(cygsid::operator=): Ditto.
	(cygsid::operator*=): Ditto.
	(get_logon_server): Change declaration according to source code.
	* setlsapwd.cc (setlsapwd): Drop 2nd parameter from internal_getpwnam
	call.
	* shared.cc (memory_init): Call cygheap->pg.init in first process.
	* syscalls.cc: Drop including pwdgrp.h.
	* tlsoffsets.h: Regenerate.
	* tlsoffsets64.h: Ditto.
	* uinfo.cc (internal_getlogin): Drop gratuitious internal_getpwuid
	call.  Fix debug output.  Overwrite user gid in border case of a
	missing passwd file while a group file exists.
	(pwdgrp::add_line): Allocate memory on cygheap.
	(pwdgrp::load): Remove.
	(ugid_cache): Define.
	(cygheap_pwdgrp::init): New method.
	(cygheap_pwdgrp::nss_init_line): New method.
	(cygheap_pwdgrp::_nss_init): New method.
	(cygheap_domain_info::init): New method.
	(logon_sid): Define.
	(get_logon_sid): New function.
	(pwdgrp::add_account_post_fetch): New method.
	(pwdgrp::add_account_from_file): New methods.
	(pwdgrp::add_account_from_windows): New methods.
	(pwdgrp::check_file): New method.
	(pwdgrp::fetch_account_from_line): New method.
	(pwdgrp::fetch_account_from_file): New method.
	(pwdgrp::fetch_account_from_windows): New method.
	* winsup.h: Move aforementioned macros and declarations to security.h.
@
text
@d6 54
a59 54
//; $tls::local_clib = -11240;
//; $tls::plocal_clib = 1560;
//; $tls::__dontuse = -11240;
//; $tls::p__dontuse = 1560;
//; $tls::func = -9352;
//; $tls::pfunc = 3448;
//; $tls::saved_errno = -9344;
//; $tls::psaved_errno = 3456;
//; $tls::sa_flags = -9340;
//; $tls::psa_flags = 3460;
//; $tls::oldmask = -9336;
//; $tls::poldmask = 3464;
//; $tls::deltamask = -9328;
//; $tls::pdeltamask = 3472;
//; $tls::errno_addr = -9320;
//; $tls::perrno_addr = 3480;
//; $tls::sigmask = -9312;
//; $tls::psigmask = 3488;
//; $tls::sigwait_mask = -9304;
//; $tls::psigwait_mask = 3496;
//; $tls::sigwait_info = -9296;
//; $tls::psigwait_info = 3504;
//; $tls::signal_arrived = -9288;
//; $tls::psignal_arrived = 3512;
//; $tls::will_wait_for_signal = -9280;
//; $tls::pwill_wait_for_signal = 3520;
//; $tls::thread_context = -9272;
//; $tls::pthread_context = 3528;
//; $tls::thread_id = -8440;
//; $tls::pthread_id = 4360;
//; $tls::infodata = -8436;
//; $tls::pinfodata = 4364;
//; $tls::tid = -8288;
//; $tls::ptid = 4512;
//; $tls::_ctinfo = -8280;
//; $tls::p_ctinfo = 4520;
//; $tls::andreas = -8272;
//; $tls::pandreas = 4528;
//; $tls::wq = -8264;
//; $tls::pwq = 4536;
//; $tls::sig = -8216;
//; $tls::psig = 4584;
//; $tls::incyg = -8212;
//; $tls::pincyg = 4588;
//; $tls::spinning = -8208;
//; $tls::pspinning = 4592;
//; $tls::stacklock = -8204;
//; $tls::pstacklock = 4596;
//; $tls::stackptr = -8200;
//; $tls::pstackptr = 4600;
//; $tls::stack = -8192;
//; $tls::pstack = 4608;
//; $tls::initialized = -6144;
//; $tls::pinitialized = 6656;
d64 54
a117 54
#define tls_local_clib (-11240)
#define tls_plocal_clib (1560)
#define tls___dontuse (-11240)
#define tls_p__dontuse (1560)
#define tls_func (-9352)
#define tls_pfunc (3448)
#define tls_saved_errno (-9344)
#define tls_psaved_errno (3456)
#define tls_sa_flags (-9340)
#define tls_psa_flags (3460)
#define tls_oldmask (-9336)
#define tls_poldmask (3464)
#define tls_deltamask (-9328)
#define tls_pdeltamask (3472)
#define tls_errno_addr (-9320)
#define tls_perrno_addr (3480)
#define tls_sigmask (-9312)
#define tls_psigmask (3488)
#define tls_sigwait_mask (-9304)
#define tls_psigwait_mask (3496)
#define tls_sigwait_info (-9296)
#define tls_psigwait_info (3504)
#define tls_signal_arrived (-9288)
#define tls_psignal_arrived (3512)
#define tls_will_wait_for_signal (-9280)
#define tls_pwill_wait_for_signal (3520)
#define tls_thread_context (-9272)
#define tls_pthread_context (3528)
#define tls_thread_id (-8440)
#define tls_pthread_id (4360)
#define tls_infodata (-8436)
#define tls_pinfodata (4364)
#define tls_tid (-8288)
#define tls_ptid (4512)
#define tls__ctinfo (-8280)
#define tls_p_ctinfo (4520)
#define tls_andreas (-8272)
#define tls_pandreas (4528)
#define tls_wq (-8264)
#define tls_pwq (4536)
#define tls_sig (-8216)
#define tls_psig (4584)
#define tls_incyg (-8212)
#define tls_pincyg (4588)
#define tls_spinning (-8208)
#define tls_pspinning (4592)
#define tls_stacklock (-8204)
#define tls_pstacklock (4596)
#define tls_stackptr (-8200)
#define tls_pstackptr (4600)
#define tls_stack (-8192)
#define tls_pstack (4608)
#define tls_initialized (-6144)
#define tls_pinitialized (6656)
@


1.2
log
@	* Merge in cygwin-64bit-branch.
@
text
@d6 54
a59 54
//; $tls::local_clib = -11200;
//; $tls::plocal_clib = 1600;
//; $tls::__dontuse = -11200;
//; $tls::p__dontuse = 1600;
//; $tls::func = -9312;
//; $tls::pfunc = 3488;
//; $tls::saved_errno = -9304;
//; $tls::psaved_errno = 3496;
//; $tls::sa_flags = -9300;
//; $tls::psa_flags = 3500;
//; $tls::oldmask = -9296;
//; $tls::poldmask = 3504;
//; $tls::deltamask = -9288;
//; $tls::pdeltamask = 3512;
//; $tls::errno_addr = -9280;
//; $tls::perrno_addr = 3520;
//; $tls::sigmask = -9272;
//; $tls::psigmask = 3528;
//; $tls::sigwait_mask = -9264;
//; $tls::psigwait_mask = 3536;
//; $tls::sigwait_info = -9256;
//; $tls::psigwait_info = 3544;
//; $tls::signal_arrived = -9248;
//; $tls::psignal_arrived = 3552;
//; $tls::will_wait_for_signal = -9240;
//; $tls::pwill_wait_for_signal = 3560;
//; $tls::thread_context = -9232;
//; $tls::pthread_context = 3568;
//; $tls::thread_id = -8400;
//; $tls::pthread_id = 4400;
//; $tls::infodata = -8396;
//; $tls::pinfodata = 4404;
//; $tls::tid = -8248;
//; $tls::ptid = 4552;
//; $tls::_ctinfo = -8240;
//; $tls::p_ctinfo = 4560;
//; $tls::andreas = -8232;
//; $tls::pandreas = 4568;
//; $tls::wq = -8224;
//; $tls::pwq = 4576;
//; $tls::sig = -8176;
//; $tls::psig = 4624;
//; $tls::incyg = -8172;
//; $tls::pincyg = 4628;
//; $tls::spinning = -8168;
//; $tls::pspinning = 4632;
//; $tls::stacklock = -8164;
//; $tls::pstacklock = 4636;
//; $tls::stackptr = -8160;
//; $tls::pstackptr = 4640;
//; $tls::stack = -8152;
//; $tls::pstack = 4648;
//; $tls::initialized = -6104;
//; $tls::pinitialized = 6696;
d64 54
a117 54
#define tls_local_clib (-11200)
#define tls_plocal_clib (1600)
#define tls___dontuse (-11200)
#define tls_p__dontuse (1600)
#define tls_func (-9312)
#define tls_pfunc (3488)
#define tls_saved_errno (-9304)
#define tls_psaved_errno (3496)
#define tls_sa_flags (-9300)
#define tls_psa_flags (3500)
#define tls_oldmask (-9296)
#define tls_poldmask (3504)
#define tls_deltamask (-9288)
#define tls_pdeltamask (3512)
#define tls_errno_addr (-9280)
#define tls_perrno_addr (3520)
#define tls_sigmask (-9272)
#define tls_psigmask (3528)
#define tls_sigwait_mask (-9264)
#define tls_psigwait_mask (3536)
#define tls_sigwait_info (-9256)
#define tls_psigwait_info (3544)
#define tls_signal_arrived (-9248)
#define tls_psignal_arrived (3552)
#define tls_will_wait_for_signal (-9240)
#define tls_pwill_wait_for_signal (3560)
#define tls_thread_context (-9232)
#define tls_pthread_context (3568)
#define tls_thread_id (-8400)
#define tls_pthread_id (4400)
#define tls_infodata (-8396)
#define tls_pinfodata (4404)
#define tls_tid (-8248)
#define tls_ptid (4552)
#define tls__ctinfo (-8240)
#define tls_p_ctinfo (4560)
#define tls_andreas (-8232)
#define tls_pandreas (4568)
#define tls_wq (-8224)
#define tls_pwq (4576)
#define tls_sig (-8176)
#define tls_psig (4624)
#define tls_incyg (-8172)
#define tls_pincyg (4628)
#define tls_spinning (-8168)
#define tls_pspinning (4632)
#define tls_stacklock (-8164)
#define tls_pstacklock (4636)
#define tls_stackptr (-8160)
#define tls_pstackptr (4640)
#define tls_stack (-8152)
#define tls_pstack (4648)
#define tls_initialized (-6104)
#define tls_pinitialized (6696)
@


1.2.2.1
log
@Forced checkin
@
text
@@


1.2.2.2
log
@Pull in forgotten native symlink patch
@
text
@d6 54
a59 54
//; $tls::local_clib = -10560;
//; $tls::plocal_clib = 2240;
//; $tls::__dontuse = -10560;
//; $tls::p__dontuse = 2240;
//; $tls::func = -8672;
//; $tls::pfunc = 4128;
//; $tls::saved_errno = -8664;
//; $tls::psaved_errno = 4136;
//; $tls::sa_flags = -8660;
//; $tls::psa_flags = 4140;
//; $tls::oldmask = -8656;
//; $tls::poldmask = 4144;
//; $tls::deltamask = -8648;
//; $tls::pdeltamask = 4152;
//; $tls::errno_addr = -8640;
//; $tls::perrno_addr = 4160;
//; $tls::sigmask = -8632;
//; $tls::psigmask = 4168;
//; $tls::sigwait_mask = -8624;
//; $tls::psigwait_mask = 4176;
//; $tls::sigwait_info = -8616;
//; $tls::psigwait_info = 4184;
//; $tls::signal_arrived = -8608;
//; $tls::psignal_arrived = 4192;
//; $tls::will_wait_for_signal = -8600;
//; $tls::pwill_wait_for_signal = 4200;
//; $tls::thread_context = -8592;
//; $tls::pthread_context = 4208;
//; $tls::thread_id = -7760;
//; $tls::pthread_id = 5040;
//; $tls::infodata = -7756;
//; $tls::pinfodata = 5044;
//; $tls::tid = -7608;
//; $tls::ptid = 5192;
//; $tls::_ctinfo = -7600;
//; $tls::p_ctinfo = 5200;
//; $tls::andreas = -7592;
//; $tls::pandreas = 5208;
//; $tls::wq = -7584;
//; $tls::pwq = 5216;
//; $tls::sig = -7536;
//; $tls::psig = 5264;
//; $tls::incyg = -7532;
//; $tls::pincyg = 5268;
//; $tls::spinning = -7528;
//; $tls::pspinning = 5272;
//; $tls::stacklock = -7524;
//; $tls::pstacklock = 5276;
//; $tls::stackptr = -7520;
//; $tls::pstackptr = 5280;
//; $tls::stack = -7512;
//; $tls::pstack = 5288;
//; $tls::initialized = -5464;
//; $tls::pinitialized = 7336;
d64 54
a117 54
#define tls_local_clib (-10560)
#define tls_plocal_clib (2240)
#define tls___dontuse (-10560)
#define tls_p__dontuse (2240)
#define tls_func (-8672)
#define tls_pfunc (4128)
#define tls_saved_errno (-8664)
#define tls_psaved_errno (4136)
#define tls_sa_flags (-8660)
#define tls_psa_flags (4140)
#define tls_oldmask (-8656)
#define tls_poldmask (4144)
#define tls_deltamask (-8648)
#define tls_pdeltamask (4152)
#define tls_errno_addr (-8640)
#define tls_perrno_addr (4160)
#define tls_sigmask (-8632)
#define tls_psigmask (4168)
#define tls_sigwait_mask (-8624)
#define tls_psigwait_mask (4176)
#define tls_sigwait_info (-8616)
#define tls_psigwait_info (4184)
#define tls_signal_arrived (-8608)
#define tls_psignal_arrived (4192)
#define tls_will_wait_for_signal (-8600)
#define tls_pwill_wait_for_signal (4200)
#define tls_thread_context (-8592)
#define tls_pthread_context (4208)
#define tls_thread_id (-7760)
#define tls_pthread_id (5040)
#define tls_infodata (-7756)
#define tls_pinfodata (5044)
#define tls_tid (-7608)
#define tls_ptid (5192)
#define tls__ctinfo (-7600)
#define tls_p_ctinfo (5200)
#define tls_andreas (-7592)
#define tls_pandreas (5208)
#define tls_wq (-7584)
#define tls_pwq (5216)
#define tls_sig (-7536)
#define tls_psig (5264)
#define tls_incyg (-7532)
#define tls_pincyg (5268)
#define tls_spinning (-7528)
#define tls_pspinning (5272)
#define tls_stacklock (-7524)
#define tls_pstacklock (5276)
#define tls_stackptr (-7520)
#define tls_pstackptr (5280)
#define tls_stack (-7512)
#define tls_pstack (5288)
#define tls_initialized (-5464)
#define tls_pinitialized (7336)
@


1.1
log
@file tlsoffsets64.h was initially added on branch cygwin-64bit-branch.
@
text
@d1 117
@


1.1.2.1
log
@	* Makefile.in (TLSOFFSETS_H): Let configure fill in.  Change all
	occurence of tlsoffsets.h to $(TLSOFFSETS_H).
	$(srcdir)/$(TLSOFFSETS_H): Add @@CONFIG_DIR@@ as parameter to
	gentls_offsets so the script knows the target CPU.
	* configure.ac (TLSOFFSETS_H): Set according to target.
	* configure: Regenerate.
	* gentls_offsets: Handle x86_64 as target.  Add FIXME comment.  Unlink
	all temporary files.
	* tlsoffsets64.h: New file.
@
text
@a0 117
//;# autogenerated:  Do not edit.

//; $tls::start_offset = -12800;
//; $tls::locals = -12800;
//; $tls::plocals = 0;
//; $tls::local_clib = -11208;
//; $tls::plocal_clib = 1592;
//; $tls::__dontuse = -11208;
//; $tls::p__dontuse = 1592;
//; $tls::func = -9320;
//; $tls::pfunc = 3480;
//; $tls::saved_errno = -9312;
//; $tls::psaved_errno = 3488;
//; $tls::sa_flags = -9308;
//; $tls::psa_flags = 3492;
//; $tls::oldmask = -9304;
//; $tls::poldmask = 3496;
//; $tls::deltamask = -9296;
//; $tls::pdeltamask = 3504;
//; $tls::errno_addr = -9288;
//; $tls::perrno_addr = 3512;
//; $tls::sigmask = -9280;
//; $tls::psigmask = 3520;
//; $tls::sigwait_mask = -9272;
//; $tls::psigwait_mask = 3528;
//; $tls::sigwait_info = -9264;
//; $tls::psigwait_info = 3536;
//; $tls::signal_arrived = -9256;
//; $tls::psignal_arrived = 3544;
//; $tls::will_wait_for_signal = -9248;
//; $tls::pwill_wait_for_signal = 3552;
//; $tls::thread_context = -9244;
//; $tls::pthread_context = 3556;
//; $tls::thread_id = -8468;
//; $tls::pthread_id = 4332;
//; $tls::infodata = -8464;
//; $tls::pinfodata = 4336;
//; $tls::tid = -8316;
//; $tls::ptid = 4484;
//; $tls::_ctinfo = -8308;
//; $tls::p_ctinfo = 4492;
//; $tls::andreas = -8300;
//; $tls::pandreas = 4500;
//; $tls::wq = -8292;
//; $tls::pwq = 4508;
//; $tls::sig = -8248;
//; $tls::psig = 4552;
//; $tls::incyg = -8244;
//; $tls::pincyg = 4556;
//; $tls::spinning = -8240;
//; $tls::pspinning = 4560;
//; $tls::stacklock = -8236;
//; $tls::pstacklock = 4564;
//; $tls::stackptr = -8232;
//; $tls::pstackptr = 4568;
//; $tls::stack = -8224;
//; $tls::pstack = 4576;
//; $tls::initialized = -6176;
//; $tls::pinitialized = 6624;
//; __DATA__

#define tls_locals (-12800)
#define tls_plocals (0)
#define tls_local_clib (-11208)
#define tls_plocal_clib (1592)
#define tls___dontuse (-11208)
#define tls_p__dontuse (1592)
#define tls_func (-9320)
#define tls_pfunc (3480)
#define tls_saved_errno (-9312)
#define tls_psaved_errno (3488)
#define tls_sa_flags (-9308)
#define tls_psa_flags (3492)
#define tls_oldmask (-9304)
#define tls_poldmask (3496)
#define tls_deltamask (-9296)
#define tls_pdeltamask (3504)
#define tls_errno_addr (-9288)
#define tls_perrno_addr (3512)
#define tls_sigmask (-9280)
#define tls_psigmask (3520)
#define tls_sigwait_mask (-9272)
#define tls_psigwait_mask (3528)
#define tls_sigwait_info (-9264)
#define tls_psigwait_info (3536)
#define tls_signal_arrived (-9256)
#define tls_psignal_arrived (3544)
#define tls_will_wait_for_signal (-9248)
#define tls_pwill_wait_for_signal (3552)
#define tls_thread_context (-9244)
#define tls_pthread_context (3556)
#define tls_thread_id (-8468)
#define tls_pthread_id (4332)
#define tls_infodata (-8464)
#define tls_pinfodata (4336)
#define tls_tid (-8316)
#define tls_ptid (4484)
#define tls__ctinfo (-8308)
#define tls_p_ctinfo (4492)
#define tls_andreas (-8300)
#define tls_pandreas (4500)
#define tls_wq (-8292)
#define tls_pwq (4508)
#define tls_sig (-8248)
#define tls_psig (4552)
#define tls_incyg (-8244)
#define tls_pincyg (4556)
#define tls_spinning (-8240)
#define tls_pspinning (4560)
#define tls_stacklock (-8236)
#define tls_pstacklock (4564)
#define tls_stackptr (-8232)
#define tls_pstackptr (4568)
#define tls_stack (-8224)
#define tls_pstack (4576)
#define tls_initialized (-6176)
#define tls_pinitialized (6624)
@


1.1.2.2
log
@	* autoload.cc (LoadDLLfuncEx3): Adjust address computation required
	by latest change to the 64 bit code.
	* cygmalloc.h (MALLOC_ALIGNMENT): Set to 16 on x86_64.
	* cygtls.h: Set struct alignment to 8 on x86_64.  Move inclusion of
	other header files outside of alignment-enforced code area.  Drop
	inclusion of security.h entirely.
	(_cygtls::get_signal_arrived): Use NULL SECURITY_ATTRIBUTES rather than
	&sec_none_nih.
	* gendef (_cygtls::lock): Fix stack alignment.
	* heap.cc (page_const): Change type to ptrdiff_t, otherwise negation
	operator in pround creates broken bitmask.
	* shared.cc (page_const): Add cast to ptrdiff_t.
	* tlsoffsets64.h: Regenerate.
@
text
@d6 54
a59 54
//; $tls::local_clib = -11200;
//; $tls::plocal_clib = 1600;
//; $tls::__dontuse = -11200;
//; $tls::p__dontuse = 1600;
//; $tls::func = -9312;
//; $tls::pfunc = 3488;
//; $tls::saved_errno = -9304;
//; $tls::psaved_errno = 3496;
//; $tls::sa_flags = -9300;
//; $tls::psa_flags = 3500;
//; $tls::oldmask = -9296;
//; $tls::poldmask = 3504;
//; $tls::deltamask = -9288;
//; $tls::pdeltamask = 3512;
//; $tls::errno_addr = -9280;
//; $tls::perrno_addr = 3520;
//; $tls::sigmask = -9272;
//; $tls::psigmask = 3528;
//; $tls::sigwait_mask = -9264;
//; $tls::psigwait_mask = 3536;
//; $tls::sigwait_info = -9256;
//; $tls::psigwait_info = 3544;
//; $tls::signal_arrived = -9248;
//; $tls::psignal_arrived = 3552;
//; $tls::will_wait_for_signal = -9240;
//; $tls::pwill_wait_for_signal = 3560;
//; $tls::thread_context = -9232;
//; $tls::pthread_context = 3568;
//; $tls::thread_id = -8456;
//; $tls::pthread_id = 4344;
//; $tls::infodata = -8452;
//; $tls::pinfodata = 4348;
//; $tls::tid = -8304;
//; $tls::ptid = 4496;
//; $tls::_ctinfo = -8296;
//; $tls::p_ctinfo = 4504;
//; $tls::andreas = -8288;
//; $tls::pandreas = 4512;
//; $tls::wq = -8280;
//; $tls::pwq = 4520;
//; $tls::sig = -8232;
//; $tls::psig = 4568;
//; $tls::incyg = -8228;
//; $tls::pincyg = 4572;
//; $tls::spinning = -8224;
//; $tls::pspinning = 4576;
//; $tls::stacklock = -8220;
//; $tls::pstacklock = 4580;
//; $tls::stackptr = -8216;
//; $tls::pstackptr = 4584;
//; $tls::stack = -8208;
//; $tls::pstack = 4592;
//; $tls::initialized = -6160;
//; $tls::pinitialized = 6640;
d64 54
a117 54
#define tls_local_clib (-11200)
#define tls_plocal_clib (1600)
#define tls___dontuse (-11200)
#define tls_p__dontuse (1600)
#define tls_func (-9312)
#define tls_pfunc (3488)
#define tls_saved_errno (-9304)
#define tls_psaved_errno (3496)
#define tls_sa_flags (-9300)
#define tls_psa_flags (3500)
#define tls_oldmask (-9296)
#define tls_poldmask (3504)
#define tls_deltamask (-9288)
#define tls_pdeltamask (3512)
#define tls_errno_addr (-9280)
#define tls_perrno_addr (3520)
#define tls_sigmask (-9272)
#define tls_psigmask (3528)
#define tls_sigwait_mask (-9264)
#define tls_psigwait_mask (3536)
#define tls_sigwait_info (-9256)
#define tls_psigwait_info (3544)
#define tls_signal_arrived (-9248)
#define tls_psignal_arrived (3552)
#define tls_will_wait_for_signal (-9240)
#define tls_pwill_wait_for_signal (3560)
#define tls_thread_context (-9232)
#define tls_pthread_context (3568)
#define tls_thread_id (-8456)
#define tls_pthread_id (4344)
#define tls_infodata (-8452)
#define tls_pinfodata (4348)
#define tls_tid (-8304)
#define tls_ptid (4496)
#define tls__ctinfo (-8296)
#define tls_p_ctinfo (4504)
#define tls_andreas (-8288)
#define tls_pandreas (4512)
#define tls_wq (-8280)
#define tls_pwq (4520)
#define tls_sig (-8232)
#define tls_psig (4568)
#define tls_incyg (-8228)
#define tls_pincyg (4572)
#define tls_spinning (-8224)
#define tls_pspinning (4576)
#define tls_stacklock (-8220)
#define tls_pstacklock (4580)
#define tls_stackptr (-8216)
#define tls_pstackptr (4584)
#define tls_stack (-8208)
#define tls_pstack (4592)
#define tls_initialized (-6160)
#define tls_pinitialized (6640)
@


1.1.2.3
log
@	* exceptions.cc (_cygtls::signal_debugger): Raise size of sigmsg buffer
	on x86_64.
	* tlsoffsets64.h: Regenerate.
@
text
@d34 26
a59 26
//; $tls::thread_id = -8400;
//; $tls::pthread_id = 4400;
//; $tls::infodata = -8396;
//; $tls::pinfodata = 4404;
//; $tls::tid = -8248;
//; $tls::ptid = 4552;
//; $tls::_ctinfo = -8240;
//; $tls::p_ctinfo = 4560;
//; $tls::andreas = -8232;
//; $tls::pandreas = 4568;
//; $tls::wq = -8224;
//; $tls::pwq = 4576;
//; $tls::sig = -8176;
//; $tls::psig = 4624;
//; $tls::incyg = -8172;
//; $tls::pincyg = 4628;
//; $tls::spinning = -8168;
//; $tls::pspinning = 4632;
//; $tls::stacklock = -8164;
//; $tls::pstacklock = 4636;
//; $tls::stackptr = -8160;
//; $tls::pstackptr = 4640;
//; $tls::stack = -8152;
//; $tls::pstack = 4648;
//; $tls::initialized = -6104;
//; $tls::pinitialized = 6696;
d92 26
a117 26
#define tls_thread_id (-8400)
#define tls_pthread_id (4400)
#define tls_infodata (-8396)
#define tls_pinfodata (4404)
#define tls_tid (-8248)
#define tls_ptid (4552)
#define tls__ctinfo (-8240)
#define tls_p_ctinfo (4560)
#define tls_andreas (-8232)
#define tls_pandreas (4568)
#define tls_wq (-8224)
#define tls_pwq (4576)
#define tls_sig (-8176)
#define tls_psig (4624)
#define tls_incyg (-8172)
#define tls_pincyg (4628)
#define tls_spinning (-8168)
#define tls_pspinning (4632)
#define tls_stacklock (-8164)
#define tls_pstacklock (4636)
#define tls_stackptr (-8160)
#define tls_pstackptr (4640)
#define tls_stack (-8152)
#define tls_pstack (4648)
#define tls_initialized (-6104)
#define tls_pinitialized (6696)
@


1.1.2.4
log
@	* cygtls.h (CYGTLS_PADSIZE): Reduce to 8000 on x86_64.
	* tlsoffsets64.h: Regenerate.
@
text
@d3 2
a4 2
//; $tls::start_offset = -8000;
//; $tls::locals = -8000;
d6 1
a6 1
//; $tls::local_clib = -6400;
d8 1
a8 1
//; $tls::__dontuse = -6400;
d10 1
a10 1
//; $tls::func = -4512;
d12 1
a12 1
//; $tls::saved_errno = -4504;
d14 1
a14 1
//; $tls::sa_flags = -4500;
d16 1
a16 1
//; $tls::oldmask = -4496;
d18 1
a18 1
//; $tls::deltamask = -4488;
d20 1
a20 1
//; $tls::errno_addr = -4480;
d22 1
a22 1
//; $tls::sigmask = -4472;
d24 1
a24 1
//; $tls::sigwait_mask = -4464;
d26 1
a26 1
//; $tls::sigwait_info = -4456;
d28 1
a28 1
//; $tls::signal_arrived = -4448;
d30 1
a30 1
//; $tls::will_wait_for_signal = -4440;
d32 1
a32 1
//; $tls::thread_context = -4432;
d34 1
a34 1
//; $tls::thread_id = -3600;
d36 1
a36 1
//; $tls::infodata = -3596;
d38 1
a38 1
//; $tls::tid = -3448;
d40 1
a40 1
//; $tls::_ctinfo = -3440;
d42 1
a42 1
//; $tls::andreas = -3432;
d44 1
a44 1
//; $tls::wq = -3424;
d46 1
a46 1
//; $tls::sig = -3376;
d48 1
a48 1
//; $tls::incyg = -3372;
d50 1
a50 1
//; $tls::spinning = -3368;
d52 1
a52 1
//; $tls::stacklock = -3364;
d54 1
a54 1
//; $tls::stackptr = -3360;
d56 1
a56 1
//; $tls::stack = -3352;
d58 1
a58 1
//; $tls::initialized = -1304;
d62 1
a62 1
#define tls_locals (-8000)
d64 1
a64 1
#define tls_local_clib (-6400)
d66 1
a66 1
#define tls___dontuse (-6400)
d68 1
a68 1
#define tls_func (-4512)
d70 1
a70 1
#define tls_saved_errno (-4504)
d72 1
a72 1
#define tls_sa_flags (-4500)
d74 1
a74 1
#define tls_oldmask (-4496)
d76 1
a76 1
#define tls_deltamask (-4488)
d78 1
a78 1
#define tls_errno_addr (-4480)
d80 1
a80 1
#define tls_sigmask (-4472)
d82 1
a82 1
#define tls_sigwait_mask (-4464)
d84 1
a84 1
#define tls_sigwait_info (-4456)
d86 1
a86 1
#define tls_signal_arrived (-4448)
d88 1
a88 1
#define tls_will_wait_for_signal (-4440)
d90 1
a90 1
#define tls_thread_context (-4432)
d92 1
a92 1
#define tls_thread_id (-3600)
d94 1
a94 1
#define tls_infodata (-3596)
d96 1
a96 1
#define tls_tid (-3448)
d98 1
a98 1
#define tls__ctinfo (-3440)
d100 1
a100 1
#define tls_andreas (-3432)
d102 1
a102 1
#define tls_wq (-3424)
d104 1
a104 1
#define tls_sig (-3376)
d106 1
a106 1
#define tls_incyg (-3372)
d108 1
a108 1
#define tls_spinning (-3368)
d110 1
a110 1
#define tls_stacklock (-3364)
d112 1
a112 1
#define tls_stackptr (-3360)
d114 1
a114 1
#define tls_stack (-3352)
d116 1
a116 1
#define tls_initialized (-1304)
@


1.1.2.5
log
@	* Revert previous patch.  For some reason perl doesn't like it.
@
text
@d3 2
a4 2
//; $tls::start_offset = -12800;
//; $tls::locals = -12800;
d6 1
a6 1
//; $tls::local_clib = -11200;
d8 1
a8 1
//; $tls::__dontuse = -11200;
d10 1
a10 1
//; $tls::func = -9312;
d12 1
a12 1
//; $tls::saved_errno = -9304;
d14 1
a14 1
//; $tls::sa_flags = -9300;
d16 1
a16 1
//; $tls::oldmask = -9296;
d18 1
a18 1
//; $tls::deltamask = -9288;
d20 1
a20 1
//; $tls::errno_addr = -9280;
d22 1
a22 1
//; $tls::sigmask = -9272;
d24 1
a24 1
//; $tls::sigwait_mask = -9264;
d26 1
a26 1
//; $tls::sigwait_info = -9256;
d28 1
a28 1
//; $tls::signal_arrived = -9248;
d30 1
a30 1
//; $tls::will_wait_for_signal = -9240;
d32 1
a32 1
//; $tls::thread_context = -9232;
d34 1
a34 1
//; $tls::thread_id = -8400;
d36 1
a36 1
//; $tls::infodata = -8396;
d38 1
a38 1
//; $tls::tid = -8248;
d40 1
a40 1
//; $tls::_ctinfo = -8240;
d42 1
a42 1
//; $tls::andreas = -8232;
d44 1
a44 1
//; $tls::wq = -8224;
d46 1
a46 1
//; $tls::sig = -8176;
d48 1
a48 1
//; $tls::incyg = -8172;
d50 1
a50 1
//; $tls::spinning = -8168;
d52 1
a52 1
//; $tls::stacklock = -8164;
d54 1
a54 1
//; $tls::stackptr = -8160;
d56 1
a56 1
//; $tls::stack = -8152;
d58 1
a58 1
//; $tls::initialized = -6104;
d62 1
a62 1
#define tls_locals (-12800)
d64 1
a64 1
#define tls_local_clib (-11200)
d66 1
a66 1
#define tls___dontuse (-11200)
d68 1
a68 1
#define tls_func (-9312)
d70 1
a70 1
#define tls_saved_errno (-9304)
d72 1
a72 1
#define tls_sa_flags (-9300)
d74 1
a74 1
#define tls_oldmask (-9296)
d76 1
a76 1
#define tls_deltamask (-9288)
d78 1
a78 1
#define tls_errno_addr (-9280)
d80 1
a80 1
#define tls_sigmask (-9272)
d82 1
a82 1
#define tls_sigwait_mask (-9264)
d84 1
a84 1
#define tls_sigwait_info (-9256)
d86 1
a86 1
#define tls_signal_arrived (-9248)
d88 1
a88 1
#define tls_will_wait_for_signal (-9240)
d90 1
a90 1
#define tls_thread_context (-9232)
d92 1
a92 1
#define tls_thread_id (-8400)
d94 1
a94 1
#define tls_infodata (-8396)
d96 1
a96 1
#define tls_tid (-8248)
d98 1
a98 1
#define tls__ctinfo (-8240)
d100 1
a100 1
#define tls_andreas (-8232)
d102 1
a102 1
#define tls_wq (-8224)
d104 1
a104 1
#define tls_sig (-8176)
d106 1
a106 1
#define tls_incyg (-8172)
d108 1
a108 1
#define tls_spinning (-8168)
d110 1
a110 1
#define tls_stacklock (-8164)
d112 1
a112 1
#define tls_stackptr (-8160)
d114 1
a114 1
#define tls_stack (-8152)
d116 1
a116 1
#define tls_initialized (-6104)
@


