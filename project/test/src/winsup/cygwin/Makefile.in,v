head	1.279;
access;
symbols
	cygwin-1_7_35-release:1.279
	cygwin-1_7_34-release:1.278
	cygwin-1_7_33-release:1.271.2.1
	cygwin-1_7_32-release:1.271
	cygwin-1_7_31-release:1.271
	cygwin-1_7_30-release:1.271
	cygwin-1_7_29-release:1.271
	cygwin-1_7_29-release-branchpoint:1.271.0.2
	cygwin-pre-user-db:1.271
	cygwin-1_7_28-release:1.271
	cygwin-1_7_27-release:1.271
	cygwin-1_7_26-release:1.271
	cygwin-1_7_25-release:1.271
	cygwin-1_7_24-release:1.271
	cygwin-1_7_23-release:1.271
	cygwin-1_7_22-release:1.271
	cygwin-1_7_21-release:1.270
	cygwin-1_7_20-release:1.269
	cygwin-1_7_19-release:1.269
	cygwin-64bit-postmerge:1.263
	cygwin-64bit-premerge-branch:1.262.0.2
	cygwin-64bit-premerge:1.262
	cygwin-1_7_18-release:1.262
	post-ptmalloc3:1.257.2.16
	pre-ptmalloc3:1.257.2.16
	cygwin-1_7_17-release:1.257
	cygwin-64bit-branch:1.257.0.2
	cygwin-1_7_16-release:1.256
	cygwin-1_7_15-release:1.251
	cygwin-1_7_14_2-release:1.251
	cygwin-1_7_14-release:1.251
	cygwin-1_7_12-release:1.251
	cygwin-1_7_11-release:1.250
	cygwin-1_7_10-release:1.249
	signal-rewrite:1.248.0.2
	pre-notty:1.248
	cygwin-1_7_9-release:1.241
	cv-post-1_7_9:1.241.0.2
	cygwin-1_7_8-release:1.241
	cygwin-1_7_7-release:1.237
	cygwin-1_7_5-release:1.234
	cygwin-1_7_4-release:1.234
	cygwin-1_7_3-release:1.234
	cygwin-1_7_2-release:1.234
	fifo_doover3:1.230.0.2
	cygwin-1_7_1-release:1.230
	prefifo:1.229
	cv-branch-2:1.225.0.2
	pre-ripout-set_console_state_for_spawn:1.214
	EOL_registry_mounts:1.207
	preoverlapped:1.197
	drop_9x_support_start:1.194
	cr-0x5f1:1.190.0.2
	cv-branch:1.189.0.2
	pre-ptymaster-archetype:1.187
	cr-0x3b58:1.185.0.4
	cr-0x5ef:1.185.0.2
	after-mmap-privanon-noreserve:1.185
	after-mmap-revamp:1.185
	before-mmap-revamp:1.185
	cgf-more-exit-sync:1.183
	post_wait_sig_exit:1.180
	pre_wait_sig_exit:1.180
	reparent-point:1.165
	noreparent:1.165.0.2
	cr-0x5e6:1.163.0.2
	cr-0x9e:1.151.0.4
	cr-0x9d:1.151.0.2
	cgf-deleteme:1.150.0.2
	pre-sigrewrite:1.143
	corinna-01:1.143
	cr-0x9c:1.136.2.1.0.2
	cr-0x9b:1.136.0.2
	cr-0x99:1.133
	Z-emcb-cygwin_daemon:1.132.0.2
	w32api-2_2:1.114
	mingw-runtime-2_4:1.114
	pre-cgf-merge:1.137
	cgf-dev-branch:1.112.0.6
	predaemon:1.83
	cygwin_daemon_merge_HEAD:1.83
	pregp02r1:1.83.0.2
	cygnus_cvs_20020108_pre:1.77
	Z-cygwin_daemon_merge-new_HEAD:1.104
	Z-cygwin_daemon_merge_HEAD:1.104
	cygwin_daemon:1.63.0.2;
locks; strict;
comment	@# @;
expand	@o@;


1.279
date	2015.02.20.12.15.38;	author jturney;	state Exp;
branches;
next	1.278;

1.278
date	2015.01.28.11.43.06;	author corinna;	state Exp;
branches;
next	1.277;

1.277
date	2014.11.26.19.46.59;	author corinna;	state Exp;
branches;
next	1.276;

1.276
date	2014.11.05.09.48.00;	author corinna;	state Exp;
branches;
next	1.275;

1.275
date	2014.11.05.09.28.01;	author corinna;	state Exp;
branches;
next	1.274;

1.274
date	2014.10.17.08.19.26;	author corinna;	state Exp;
branches;
next	1.273;

1.273
date	2014.10.16.15.40.09;	author corinna;	state Exp;
branches;
next	1.272;

1.272
date	2014.02.09.19.44.54;	author corinna;	state Exp;
branches;
next	1.271;

1.271
date	2013.07.15.13.54.26;	author corinna;	state Exp;
branches
	1.271.2.1;
next	1.270;

1.270
date	2013.06.18.09.45.37;	author corinna;	state Exp;
branches;
next	1.269;

1.269
date	2013.05.24.21.12.16;	author corinna;	state Exp;
branches;
next	1.268;

1.268
date	2013.05.21.19.04.49;	author corinna;	state Exp;
branches;
next	1.267;

1.267
date	2013.05.21.10.07.55;	author corinna;	state Exp;
branches;
next	1.266;

1.266
date	2013.05.14.17.28.45;	author corinna;	state Exp;
branches;
next	1.265;

1.265
date	2013.05.14.13.34.05;	author corinna;	state Exp;
branches;
next	1.264;

1.264
date	2013.04.30.23.43.08;	author cgf;	state Exp;
branches;
next	1.263;

1.263
date	2013.04.23.09.44.31;	author corinna;	state Exp;
branches;
next	1.262;

1.262
date	2013.01.21.16.21.23;	author cgf;	state Exp;
branches;
next	1.261;

1.261
date	2013.01.21.04.38.26;	author cgf;	state Exp;
branches;
next	1.260;

1.260
date	2012.11.23.14.52.07;	author cgf;	state Exp;
branches;
next	1.259;

1.259
date	2012.11.23.13.22.45;	author cgf;	state Exp;
branches;
next	1.258;

1.258
date	2012.10.24.10.12.45;	author yselkowitz;	state Exp;
branches;
next	1.257;

1.257
date	2012.08.01.08.46.49;	author corinna;	state Exp;
branches
	1.257.2.1;
next	1.256;

1.256
date	2012.07.09.09.00.56;	author corinna;	state Exp;
branches;
next	1.255;

1.255
date	2012.07.08.00.51.45;	author cgf;	state Exp;
branches;
next	1.254;

1.254
date	2012.07.06.14.44.13;	author corinna;	state Exp;
branches;
next	1.253;

1.253
date	2012.07.02.02.24.24;	author cgf;	state Exp;
branches;
next	1.252;

1.252
date	2012.06.17.20.50.22;	author cgf;	state Exp;
branches;
next	1.251;

1.251
date	2012.03.29.18.02.54;	author corinna;	state Exp;
branches;
next	1.250;

1.250
date	2012.02.13.13.12.37;	author corinna;	state Exp;
branches;
next	1.249;

1.249
date	2011.12.16.11.58.03;	author corinna;	state Exp;
branches;
next	1.248;

1.248
date	2011.05.02.19.14.39;	author cgf;	state Exp;
branches;
next	1.247;

1.247
date	2011.04.19.10.02.06;	author corinna;	state Exp;
branches;
next	1.246;

1.246
date	2011.04.07.06.07.21;	author cgf;	state Exp;
branches;
next	1.245;

1.245
date	2011.04.04.15.01.43;	author cgf;	state Exp;
branches;
next	1.244;

1.244
date	2011.04.04.11.12.48;	author yselkowitz;	state Exp;
branches;
next	1.243;

1.243
date	2011.04.01.19.48.19;	author yselkowitz;	state Exp;
branches;
next	1.242;

1.242
date	2011.04.01.12.46.09;	author corinna;	state Exp;
branches;
next	1.241;

1.241
date	2010.09.28.14.49.31;	author corinna;	state Exp;
branches;
next	1.240;

1.240
date	2010.09.28.14.40.18;	author corinna;	state Exp;
branches;
next	1.239;

1.239
date	2010.09.11.06.53.26;	author davek;	state Exp;
branches;
next	1.238;

1.238
date	2010.09.06.09.47.00;	author corinna;	state Exp;
branches;
next	1.237;

1.237
date	2010.08.21.18.57.36;	author corinna;	state Exp;
branches;
next	1.236;

1.236
date	2010.07.05.16.59.41;	author corinna;	state Exp;
branches;
next	1.235;

1.235
date	2010.05.07.21.25.18;	author cgf;	state Exp;
branches;
next	1.234;

1.234
date	2010.03.03.15.05.18;	author corinna;	state Exp;
branches;
next	1.233;

1.233
date	2010.02.04.12.35.49;	author corinna;	state Exp;
branches;
next	1.232;

1.232
date	2010.01.28.11.54.00;	author corinna;	state Exp;
branches;
next	1.231;

1.231
date	2010.01.22.22.31.31;	author corinna;	state Exp;
branches;
next	1.230;

1.230
date	2009.10.04.17.48.05;	author davek;	state Exp;
branches;
next	1.229;

1.229
date	2009.07.12.21.15.46;	author cgf;	state Exp;
branches;
next	1.228;

1.228
date	2009.07.07.20.12.44;	author davek;	state Exp;
branches;
next	1.227;

1.227
date	2009.07.06.23.19.08;	author cgf;	state Exp;
branches;
next	1.226;

1.226
date	2009.06.12.10.19.36;	author corinna;	state Exp;
branches;
next	1.225;

1.225
date	2009.04.12.04.14.31;	author cgf;	state Exp;
branches;
next	1.224;

1.224
date	2009.04.12.03.19.52;	author cgf;	state Exp;
branches;
next	1.223;

1.223
date	2009.04.09.21.02.53;	author cgf;	state Exp;
branches;
next	1.222;

1.222
date	2009.04.05.16.49.14;	author cgf;	state Exp;
branches;
next	1.221;

1.221
date	2009.03.28.04.55.35;	author cgf;	state Exp;
branches;
next	1.220;

1.220
date	2009.02.24.02.11.14;	author cgf;	state Exp;
branches;
next	1.219;

1.219
date	2009.01.03.05.12.20;	author cgf;	state Exp;
branches;
next	1.218;

1.218
date	2008.12.31.21.33.34;	author cgf;	state Exp;
branches;
next	1.217;

1.217
date	2008.11.26.10.18.10;	author corinna;	state Exp;
branches;
next	1.216;

1.216
date	2008.09.12.22.32.07;	author cgf;	state Exp;
branches;
next	1.215;

1.215
date	2008.07.29.10.40.36;	author corinna;	state Exp;
branches;
next	1.214;

1.214
date	2008.05.20.15.11.20;	author corinna;	state Exp;
branches;
next	1.213;

1.213
date	2008.05.10.18.57.10;	author corinna;	state Exp;
branches;
next	1.212;

1.212
date	2008.05.08.14.41.47;	author corinna;	state Exp;
branches;
next	1.211;

1.211
date	2008.04.25.17.22.31;	author corinna;	state Exp;
branches;
next	1.210;

1.210
date	2008.04.21.12.46.57;	author corinna;	state Exp;
branches;
next	1.209;

1.209
date	2008.04.07.16.15.45;	author cgf;	state Exp;
branches;
next	1.208;

1.208
date	2008.04.05.09.30.06;	author corinna;	state Exp;
branches;
next	1.207;

1.207
date	2008.04.01.13.22.46;	author corinna;	state Exp;
branches;
next	1.206;

1.206
date	2008.03.07.11.24.51;	author corinna;	state Exp;
branches;
next	1.205;

1.205
date	2008.02.10.15.43.03;	author corinna;	state Exp;
branches;
next	1.204;

1.204
date	2008.01.15.17.42.10;	author corinna;	state Exp;
branches;
next	1.203;

1.203
date	2008.01.15.13.45.42;	author corinna;	state Exp;
branches;
next	1.202;

1.202
date	2007.12.01.13.04.43;	author corinna;	state Exp;
branches;
next	1.201;

1.201
date	2007.08.13.17.16.04;	author corinna;	state Exp;
branches;
next	1.200;

1.200
date	2007.08.02.14.33.32;	author cgf;	state Exp;
branches;
next	1.199;

1.199
date	2007.07.20.14.29.43;	author corinna;	state Exp;
branches;
next	1.198;

1.198
date	2007.07.08.15.04.33;	author cgf;	state Exp;
branches;
next	1.197;

1.197
date	2007.06.12.15.24.46;	author corinna;	state Exp;
branches;
next	1.196;

1.196
date	2007.03.01.15.13.47;	author cgf;	state Exp;
branches;
next	1.195;

1.195
date	2007.02.22.10.54.47;	author corinna;	state Exp;
branches;
next	1.194;

1.194
date	2007.02.14.10.06.45;	author corinna;	state Exp;
branches;
next	1.193;

1.193
date	2007.01.17.19.26.57;	author corinna;	state Exp;
branches;
next	1.192;

1.192
date	2006.12.11.19.59.05;	author corinna;	state Exp;
branches;
next	1.191;

1.191
date	2006.07.25.19.23.23;	author corinna;	state Exp;
branches;
next	1.190;

1.190
date	2006.07.07.09.14.14;	author corinna;	state Exp;
branches
	1.190.2.1;
next	1.189;

1.189
date	2006.07.04.20.24.26;	author corinna;	state Exp;
branches
	1.189.2.1;
next	1.188;

1.188
date	2006.06.03.15.48.30;	author cgf;	state Exp;
branches;
next	1.187;

1.187
date	2006.05.10.22.01.57;	author briand;	state Exp;
branches;
next	1.186;

1.186
date	2006.04.12.15.53.22;	author cgf;	state Exp;
branches;
next	1.185;

1.185
date	2005.11.18.17.48.23;	author corinna;	state Exp;
branches;
next	1.184;

1.184
date	2005.11.08.22.08.39;	author cgf;	state Exp;
branches;
next	1.183;

1.183
date	2005.10.17.03.20.20;	author cgf;	state Exp;
branches;
next	1.182;

1.182
date	2005.10.14.02.15.12;	author cgf;	state Exp;
branches;
next	1.181;

1.181
date	2005.10.11.18.27.05;	author cgf;	state Exp;
branches;
next	1.180;

1.180
date	2005.09.02.17.12.33;	author cgf;	state Exp;
branches;
next	1.179;

1.179
date	2005.08.08.09.45.39;	author corinna;	state Exp;
branches;
next	1.178;

1.178
date	2005.08.08.04.06.07;	author cgf;	state Exp;
branches;
next	1.177;

1.177
date	2005.08.08.02.27.43;	author cgf;	state Exp;
branches;
next	1.176;

1.176
date	2005.08.07.09.21.09;	author corinna;	state Exp;
branches;
next	1.175;

1.175
date	2005.08.07.02.38.13;	author cgf;	state Exp;
branches;
next	1.174;

1.174
date	2005.06.11.21.00.23;	author cgf;	state Exp;
branches;
next	1.173;

1.173
date	2005.06.05.04.15.16;	author cgf;	state Exp;
branches;
next	1.172;

1.172
date	2005.05.25.03.40.07;	author cgf;	state Exp;
branches;
next	1.171;

1.171
date	2005.05.10.20.56.06;	author corinna;	state Exp;
branches;
next	1.170;

1.170
date	2005.05.06.04.06.16;	author cgf;	state Exp;
branches;
next	1.169;

1.169
date	2005.03.27.01.57.37;	author cgf;	state Exp;
branches;
next	1.168;

1.168
date	2005.03.23.17.11.24;	author cgf;	state Exp;
branches;
next	1.167;

1.167
date	2005.03.22.19.00.27;	author cgf;	state Exp;
branches;
next	1.166;

1.166
date	2005.02.06.05.04.34;	author cgf;	state Exp;
branches;
next	1.165;

1.165
date	2004.09.10.08.30.50;	author corinna;	state Exp;
branches;
next	1.164;

1.164
date	2004.07.20.15.52.33;	author cgf;	state Exp;
branches;
next	1.163;

1.163
date	2004.05.04.15.09.58;	author cgf;	state Exp;
branches;
next	1.162;

1.162
date	2004.04.06.14.22.43;	author corinna;	state Exp;
branches;
next	1.161;

1.161
date	2004.02.17.20.03.01;	author cgf;	state Exp;
branches;
next	1.160;

1.160
date	2004.02.17.15.23.29;	author cgf;	state Exp;
branches;
next	1.159;

1.159
date	2004.02.16.21.25.10;	author cgf;	state Exp;
branches;
next	1.158;

1.158
date	2004.02.16.20.30.46;	author cgf;	state Exp;
branches;
next	1.157;

1.157
date	2004.02.15.02.44.16;	author cgf;	state Exp;
branches;
next	1.156;

1.156
date	2004.02.13.19.34.32;	author cgf;	state Exp;
branches;
next	1.155;

1.155
date	2004.02.08.19.59.26;	author cgf;	state Exp;
branches;
next	1.154;

1.154
date	2004.02.03.21.59.26;	author cgf;	state Exp;
branches;
next	1.153;

1.153
date	2004.01.19.23.03.42;	author cgf;	state Exp;
branches;
next	1.152;

1.152
date	2004.01.19.05.46.54;	author cgf;	state Exp;
branches;
next	1.151;

1.151
date	2004.01.14.15.45.36;	author cgf;	state Exp;
branches
	1.151.4.1;
next	1.150;

1.150
date	2003.12.23.16.26.29;	author cgf;	state Exp;
branches
	1.150.2.1;
next	1.149;

1.149
date	2003.12.03.00.21.21;	author cgf;	state Exp;
branches;
next	1.148;

1.148
date	2003.12.01.17.26.28;	author corinna;	state Exp;
branches;
next	1.147;

1.147
date	2003.11.30.02.19.45;	author cgf;	state Exp;
branches;
next	1.146;

1.146
date	2003.11.29.23.00.51;	author corinna;	state Exp;
branches;
next	1.145;

1.145
date	2003.11.28.22.13.57;	author cgf;	state Exp;
branches;
next	1.144;

1.144
date	2003.11.28.20.55.58;	author cgf;	state Exp;
branches;
next	1.143;

1.143
date	2003.10.27.13.06.56;	author corinna;	state Exp;
branches;
next	1.142;

1.142
date	2003.10.22.10.07.56;	author corinna;	state Exp;
branches;
next	1.141;

1.141
date	2003.10.01.12.36.38;	author cgf;	state Exp;
branches;
next	1.140;

1.140
date	2003.09.27.05.35.02;	author cgf;	state Exp;
branches;
next	1.139;

1.139
date	2003.09.25.04.03.53;	author phumblet;	state Exp;
branches;
next	1.138;

1.138
date	2003.09.25.00.37.16;	author cgf;	state Exp;
branches;
next	1.137;

1.137
date	2003.09.14.01.58.03;	author cgf;	state Exp;
branches;
next	1.136;

1.136
date	2003.09.10.19.13.04;	author corinna;	state Exp;
branches
	1.136.2.1;
next	1.135;

1.135
date	2003.09.10.16.22.49;	author cgf;	state Exp;
branches;
next	1.134;

1.134
date	2003.09.10.15.51.58;	author corinna;	state Exp;
branches;
next	1.133;

1.133
date	2003.08.31.18.26.58;	author cgf;	state Exp;
branches;
next	1.132;

1.132
date	2003.08.25.18.21.07;	author cgf;	state Exp;
branches;
next	1.131;

1.131
date	2003.08.06.01.40.12;	author cgf;	state Exp;
branches;
next	1.130;

1.130
date	2003.07.26.00.08.25;	author cgf;	state Exp;
branches;
next	1.129;

1.129
date	2003.07.25.17.42.08;	author cgf;	state Exp;
branches;
next	1.128;

1.128
date	2003.07.25.16.13.11;	author cgf;	state Exp;
branches;
next	1.127;

1.127
date	2003.07.07.05.30.33;	author cgf;	state Exp;
branches;
next	1.126;

1.126
date	2003.07.02.03.16.00;	author cgf;	state Exp;
branches;
next	1.125;

1.125
date	2003.06.25.19.12.01;	author cgf;	state Exp;
branches;
next	1.124;

1.124
date	2003.05.12.11.06.25;	author corinna;	state Exp;
branches;
next	1.123;

1.123
date	2003.05.09.22.11.24;	author corinna;	state Exp;
branches;
next	1.122;

1.122
date	2003.04.30.22.18.24;	author tpfaff;	state Exp;
branches;
next	1.121;

1.121
date	2003.04.19.01.03.16;	author cgf;	state Exp;
branches;
next	1.120;

1.120
date	2003.04.17.20.05.14;	author tpfaff;	state Exp;
branches;
next	1.119;

1.119
date	2003.04.03.01.23.37;	author cgf;	state Exp;
branches;
next	1.118;

1.118
date	2003.04.02.23.01.11;	author cgf;	state Exp;
branches;
next	1.117;

1.117
date	2003.03.29.04.20.45;	author cgf;	state Exp;
branches;
next	1.116;

1.116
date	2003.03.09.21.51.00;	author corinna;	state Exp;
branches;
next	1.115;

1.115
date	2003.03.09.17.01.41;	author cgf;	state Exp;
branches;
next	1.114;

1.114
date	2003.01.24.03.53.46;	author cgf;	state Exp;
branches;
next	1.113;

1.113
date	2003.01.22.15.23.23;	author corinna;	state Exp;
branches;
next	1.112;

1.112
date	2002.12.21.05.06.37;	author cgf;	state Exp;
branches
	1.112.4.1
	1.112.6.1;
next	1.111;

1.111
date	2002.12.12.10.34.12;	author corinna;	state Exp;
branches;
next	1.110;

1.110
date	2002.12.04.20.44.17;	author cgf;	state Exp;
branches;
next	1.109;

1.109
date	2002.12.04.20.36.23;	author corinna;	state Exp;
branches;
next	1.108;

1.108
date	2002.10.20.04.15.49;	author cgf;	state Exp;
branches;
next	1.107;

1.107
date	2002.10.10.05.23.23;	author cgf;	state Exp;
branches;
next	1.106;

1.106
date	2002.09.25.12.24.22;	author cgf;	state Exp;
branches;
next	1.105;

1.105
date	2002.09.22.16.33.36;	author cgf;	state Exp;
branches;
next	1.104;

1.104
date	2002.09.22.12.04.15;	author scottc;	state Exp;
branches;
next	1.103;

1.103
date	2002.09.22.00.46.24;	author cgf;	state Exp;
branches;
next	1.102;

1.102
date	2002.09.04.13.11.29;	author corinna;	state Exp;
branches;
next	1.101;

1.101
date	2002.08.26.04.30.11;	author cgf;	state Exp;
branches;
next	1.100;

1.100
date	2002.08.25.00.07.10;	author cgf;	state Exp;
branches;
next	1.99;

1.99
date	2002.08.16.19.41.39;	author cgf;	state Exp;
branches;
next	1.98;

1.98
date	2002.08.01.16.20.31;	author cgf;	state Exp;
branches;
next	1.97;

1.97
date	2002.07.25.09.09.34;	author duda;	state Exp;
branches;
next	1.96;

1.96
date	2002.07.14.04.14.32;	author cgf;	state Exp;
branches;
next	1.95;

1.95
date	2002.07.14.04.03.01;	author cgf;	state Exp;
branches;
next	1.94;

1.94
date	2002.06.22.02.56.56;	author cgf;	state Exp;
branches;
next	1.93;

1.93
date	2002.06.22.02.50.01;	author cgf;	state Exp;
branches;
next	1.92;

1.92
date	2002.06.11.02.08.00;	author cgf;	state Exp;
branches;
next	1.91;

1.91
date	2002.06.06.23.53.45;	author cgf;	state Exp;
branches;
next	1.90;

1.90
date	2002.06.06.01.49.56;	author cgf;	state Exp;
branches;
next	1.89;

1.89
date	2002.06.06.01.26.33;	author cgf;	state Exp;
branches;
next	1.88;

1.88
date	2002.05.27.02.06.16;	author cgf;	state Exp;
branches;
next	1.87;

1.87
date	2002.05.18.06.10.16;	author cgf;	state Exp;
branches;
next	1.86;

1.86
date	2002.05.02.04.13.43;	author cgf;	state Exp;
branches;
next	1.85;

1.85
date	2002.03.03.21.46.38;	author rbcollins;	state Exp;
branches;
next	1.84;

1.84
date	2002.02.28.14.25.53;	author rbcollins;	state Exp;
branches;
next	1.83;

1.83
date	2002.02.10.21.26.27;	author cgf;	state Exp;
branches;
next	1.82;

1.82
date	2002.01.22.01.40.11;	author cgf;	state Exp;
branches;
next	1.81;

1.81
date	2002.01.20.03.39.36;	author cgf;	state Exp;
branches;
next	1.80;

1.80
date	2002.01.19.18.15.23;	author cgf;	state Exp;
branches;
next	1.79;

1.79
date	2002.01.17.10.39.36;	author corinna;	state Exp;
branches;
next	1.78;

1.78
date	2002.01.08.04.51.01;	author cgf;	state Exp;
branches;
next	1.77;

1.77
date	2001.12.31.06.24.15;	author cgf;	state Exp;
branches;
next	1.76;

1.76
date	2001.12.31.03.19.29;	author cgf;	state Exp;
branches;
next	1.75;

1.75
date	2001.12.26.05.02.07;	author cgf;	state Exp;
branches;
next	1.74;

1.74
date	2001.12.26.04.53.34;	author cgf;	state Exp;
branches;
next	1.73;

1.73
date	2001.12.20.02.55.08;	author cgf;	state Exp;
branches;
next	1.72;

1.72
date	2001.12.10.03.35.54;	author cgf;	state Exp;
branches;
next	1.71;

1.71
date	2001.11.26.20.20.42;	author cgf;	state Exp;
branches;
next	1.70;

1.70
date	2001.11.24.03.11.39;	author cgf;	state Exp;
branches;
next	1.69;

1.69
date	2001.11.21.06.47.57;	author cgf;	state Exp;
branches;
next	1.68;

1.68
date	2001.11.02.04.44.06;	author cgf;	state Exp;
branches;
next	1.67;

1.67
date	2001.10.28.23.05.49;	author cgf;	state Exp;
branches;
next	1.66;

1.66
date	2001.10.24.04.16.45;	author cgf;	state Exp;
branches;
next	1.65;

1.65
date	2001.09.30.21.10.38;	author cgf;	state Exp;
branches;
next	1.64;

1.64
date	2001.09.27.21.35.16;	author rbcollins;	state Exp;
branches;
next	1.63;

1.63
date	2001.09.24.22.49.12;	author cgf;	state Exp;
branches
	1.63.2.1;
next	1.62;

1.62
date	2001.09.15.04.36.43;	author cgf;	state Exp;
branches;
next	1.61;

1.61
date	2001.09.12.17.46.35;	author corinna;	state Exp;
branches;
next	1.60;

1.60
date	2001.09.11.20.01.00;	author cgf;	state Exp;
branches;
next	1.59;

1.59
date	2001.08.31.05.06.13;	author cgf;	state Exp;
branches;
next	1.58;

1.58
date	2001.07.29.02.33.30;	author cgf;	state Exp;
branches;
next	1.57;

1.57
date	2001.06.24.22.26.49;	author cgf;	state Exp;
branches;
next	1.56;

1.56
date	2001.04.24.15.25.30;	author duda;	state Exp;
branches;
next	1.55;

1.55
date	2001.04.20.13.02.32;	author corinna;	state Exp;
branches;
next	1.54;

1.54
date	2001.04.16.03.27.16;	author cgf;	state Exp;
branches;
next	1.53;

1.53
date	2001.04.09.00.44.25;	author cgf;	state Exp;
branches;
next	1.52;

1.52
date	2001.03.21.02.17.57;	author cgf;	state Exp;
branches;
next	1.51;

1.51
date	2001.02.22.12.56.36;	author corinna;	state Exp;
branches;
next	1.50;

1.50
date	2001.02.21.22.59.11;	author corinna;	state Exp;
branches;
next	1.49;

1.49
date	2001.02.21.21.49.36;	author corinna;	state Exp;
branches;
next	1.48;

1.48
date	2000.12.15.22.25.51;	author cgf;	state Exp;
branches;
next	1.47;

1.47
date	2000.12.04.20.05.41;	author corinna;	state Exp;
branches;
next	1.46;

1.46
date	2000.12.03.05.20.56;	author cgf;	state Exp;
branches;
next	1.45;

1.45
date	2000.12.03.05.16.33;	author cgf;	state Exp;
branches;
next	1.44;

1.44
date	2000.11.22.16.19.53;	author cgf;	state Exp;
branches;
next	1.43;

1.43
date	2000.11.16.20.32.27;	author cgf;	state Exp;
branches;
next	1.42;

1.42
date	2000.11.03.04.27.01;	author cgf;	state Exp;
branches;
next	1.41;

1.41
date	2000.10.27.18.53.55;	author corinna;	state Exp;
branches;
next	1.40;

1.40
date	2000.10.27.09.50.33;	author corinna;	state Exp;
branches;
next	1.39;

1.39
date	2000.10.19.03.12.44;	author dj;	state Exp;
branches;
next	1.38;

1.38
date	2000.10.17.01.46.26;	author dj;	state Exp;
branches;
next	1.37;

1.37
date	2000.10.16.23.55.57;	author cgf;	state Exp;
branches;
next	1.36;

1.36
date	2000.10.01.01.02.40;	author corinna;	state Exp;
branches;
next	1.35;

1.35
date	2000.09.12.16.31.01;	author cgf;	state Exp;
branches;
next	1.34;

1.34
date	2000.09.06.18.13.38;	author cgf;	state Exp;
branches;
next	1.33;

1.33
date	2000.09.03.04.16.35;	author cgf;	state Exp;
branches;
next	1.32;

1.32
date	2000.09.03.04.01.56;	author cgf;	state Exp;
branches;
next	1.31;

1.31
date	2000.08.22.15.25.25;	author cgf;	state Exp;
branches;
next	1.30;

1.30
date	2000.08.22.05.10.20;	author cgf;	state Exp;
branches;
next	1.29;

1.29
date	2000.08.18.20.01.04;	author cgf;	state Exp;
branches;
next	1.28;

1.28
date	2000.08.18.19.51.02;	author cgf;	state Exp;
branches;
next	1.27;

1.27
date	2000.08.12.05.09.27;	author cgf;	state Exp;
branches;
next	1.26;

1.26
date	2000.08.02.16.28.17;	author dj;	state Exp;
branches;
next	1.25;

1.25
date	2000.07.10.15.30.04;	author cgf;	state Exp;
branches;
next	1.24;

1.24
date	2000.07.04.16.58.48;	author corinna;	state Exp;
branches;
next	1.23;

1.23
date	2000.07.01.03.51.55;	author cgf;	state Exp;
branches;
next	1.22;

1.22
date	2000.06.22.21.51.48;	author cgf;	state Exp;
branches;
next	1.21;

1.21
date	2000.06.22.19.11.32;	author cgf;	state Exp;
branches;
next	1.20;

1.20
date	2000.06.22.18.28.16;	author cgf;	state Exp;
branches;
next	1.19;

1.19
date	2000.06.21.18.33.19;	author cgf;	state Exp;
branches;
next	1.18;

1.18
date	2000.06.21.17.20.47;	author cgf;	state Exp;
branches;
next	1.17;

1.17
date	2000.06.21.00.47.06;	author cgf;	state Exp;
branches;
next	1.16;

1.16
date	2000.06.20.17.38.55;	author cgf;	state Exp;
branches;
next	1.15;

1.15
date	2000.06.17.17.54.05;	author cgf;	state Exp;
branches;
next	1.14;

1.14
date	2000.06.16.23.39.02;	author cgf;	state Exp;
branches;
next	1.13;

1.13
date	2000.06.01.05.57.54;	author cgf;	state Exp;
branches;
next	1.12;

1.12
date	2000.05.30.00.38.51;	author cgf;	state Exp;
branches;
next	1.11;

1.11
date	2000.05.18.21.30.30;	author cgf;	state Exp;
branches;
next	1.10;

1.10
date	2000.05.12.05.06.43;	author cgf;	state Exp;
branches;
next	1.9;

1.9
date	2000.05.09.23.00.37;	author cgf;	state Exp;
branches;
next	1.8;

1.8
date	2000.05.04.23.19.35;	author khan;	state Exp;
branches;
next	1.7;

1.7
date	2000.05.03.15.39.10;	author corinna;	state Exp;
branches;
next	1.6;

1.6
date	2000.04.26.18.19.22;	author dj;	state Exp;
branches;
next	1.5;

1.5
date	2000.04.13.22.43.48;	author cgf;	state Exp;
branches;
next	1.4;

1.4
date	2000.03.28.21.49.16;	author cgf;	state Exp;
branches;
next	1.3;

1.3
date	2000.02.26.01.11.54;	author cgf;	state Exp;
branches;
next	1.2;

1.2
date	2000.02.26.01.06.48;	author dj;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.17.19.38.31;	author cgf;	state Exp;
branches
	1.1.1.1;
next	;

1.271.2.1
date	2014.11.13.12.52.53;	author corinna;	state Exp;
branches;
next	;

1.257.2.1
date	2012.08.10.11.51.09;	author corinna;	state Exp;
branches;
next	1.257.2.2;

1.257.2.2
date	2012.08.13.12.29.35;	author corinna;	state Exp;
branches;
next	1.257.2.3;

1.257.2.3
date	2012.10.24.12.46.00;	author corinna;	state Exp;
branches;
next	1.257.2.4;

1.257.2.4
date	2012.11.23.15.14.38;	author corinna;	state Exp;
branches;
next	1.257.2.5;

1.257.2.5
date	2012.12.03.13.33.01;	author corinna;	state Exp;
branches;
next	1.257.2.6;

1.257.2.6
date	2012.12.11.13.14.54;	author corinna;	state Exp;
branches;
next	1.257.2.7;

1.257.2.7
date	2012.12.11.17.53.38;	author corinna;	state Exp;
branches;
next	1.257.2.8;

1.257.2.8
date	2013.01.21.13.52.03;	author corinna;	state Exp;
branches;
next	1.257.2.9;

1.257.2.9
date	2013.01.22.17.40.51;	author corinna;	state Exp;
branches;
next	1.257.2.10;

1.257.2.10
date	2013.01.29.12.32.16;	author corinna;	state Exp;
branches;
next	1.257.2.11;

1.257.2.11
date	2013.01.29.22.15.13;	author corinna;	state Exp;
branches;
next	1.257.2.12;

1.257.2.12
date	2013.01.30.19.42.17;	author corinna;	state Exp;
branches;
next	1.257.2.13;

1.257.2.13
date	2013.02.13.16.34.03;	author corinna;	state Exp;
branches;
next	1.257.2.14;

1.257.2.14
date	2013.02.15.13.36.35;	author corinna;	state Exp;
branches;
next	1.257.2.15;

1.257.2.15
date	2013.02.18.06.02.38;	author yselkowitz;	state Exp;
branches;
next	1.257.2.16;

1.257.2.16
date	2013.02.21.12.02.52;	author corinna;	state Exp;
branches;
next	1.257.2.17;

1.257.2.17
date	2013.03.05.14.29.30;	author corinna;	state Exp;
branches;
next	1.257.2.18;

1.257.2.18
date	2013.03.28.15.21.19;	author corinna;	state Exp;
branches;
next	1.257.2.19;

1.257.2.19
date	2013.04.10.12.29.48;	author corinna;	state Exp;
branches;
next	1.257.2.20;

1.257.2.20
date	2013.04.23.09.06.11;	author corinna;	state Exp;
branches;
next	;

1.190.2.1
date	2007.12.01.13.04.57;	author corinna;	state Exp;
branches;
next	1.190.2.2;

1.190.2.2
date	2008.01.15.17.42.26;	author corinna;	state Exp;
branches;
next	;

1.189.2.1
date	2006.07.07.09.16.33;	author corinna;	state Exp;
branches;
next	1.189.2.2;

1.189.2.2
date	2006.07.12.13.30.46;	author corinna;	state Exp;
branches;
next	;

1.151.4.1
date	2004.01.20.19.57.29;	author cgf;	state Exp;
branches;
next	;

1.150.2.1
date	2004.01.11.18.13.52;	author cgf;	state Exp;
branches;
next	1.150.2.2;

1.150.2.2
date	2004.01.12.05.15.18;	author cgf;	state Exp;
branches;
next	1.150.2.3;

1.150.2.3
date	2004.01.19.05.38.23;	author cgf;	state Exp;
branches;
next	;

1.136.2.1
date	2003.09.19.01.55.54;	author cgf;	state Exp;
branches;
next	;

1.112.4.1
date	2002.12.28.07.15.12;	author cgf;	state Exp;
branches;
next	1.112.4.2;

1.112.4.2
date	2002.12.29.06.14.13;	author cgf;	state Exp;
branches;
next	1.112.4.3;

1.112.4.3
date	2003.01.05.03.01.16;	author cgf;	state Exp;
branches;
next	;

1.112.6.1
date	2003.01.16.01.27.30;	author cgf;	state Exp;
branches;
next	1.112.6.2;

1.112.6.2
date	2003.01.24.04.04.19;	author cgf;	state Exp;
branches;
next	1.112.6.3;

1.112.6.3
date	2003.01.25.18.59.43;	author cgf;	state Exp;
branches;
next	1.112.6.4;

1.112.6.4
date	2003.02.14.03.03.27;	author cgf;	state Exp;
branches;
next	1.112.6.5;

1.112.6.5
date	2003.03.02.23.39.10;	author cgf;	state Exp;
branches;
next	1.112.6.6;

1.112.6.6
date	2003.03.09.16.45.20;	author cgf;	state Exp;
branches;
next	1.112.6.7;

1.112.6.7
date	2003.03.09.17.13.08;	author cgf;	state Exp;
branches;
next	1.112.6.8;

1.112.6.8
date	2003.03.10.00.07.01;	author cgf;	state Exp;
branches;
next	1.112.6.9;

1.112.6.9
date	2003.04.03.01.32.32;	author cgf;	state Exp;
branches;
next	1.112.6.10;

1.112.6.10
date	2003.05.10.17.20.52;	author cgf;	state Exp;
branches;
next	1.112.6.11;

1.112.6.11
date	2003.05.26.19.39.05;	author cgf;	state Exp;
branches;
next	1.112.6.12;

1.112.6.12
date	2003.07.06.05.10.42;	author cgf;	state Exp;
branches;
next	1.112.6.13;

1.112.6.13
date	2003.07.10.01.06.23;	author cgf;	state Exp;
branches;
next	1.112.6.14;

1.112.6.14
date	2003.08.06.03.58.57;	author cgf;	state Exp;
branches;
next	1.112.6.15;

1.112.6.15
date	2003.08.27.20.19.55;	author cgf;	state Exp;
branches;
next	1.112.6.16;

1.112.6.16
date	2003.09.02.02.31.07;	author cgf;	state Exp;
branches;
next	1.112.6.17;

1.112.6.17
date	2003.09.10.16.23.39;	author cgf;	state Exp;
branches;
next	1.112.6.18;

1.112.6.18
date	2003.09.11.04.47.22;	author cgf;	state Exp;
branches;
next	;

1.63.2.1
date	2001.09.25.06.31.03;	author rbcollins;	state Exp;
branches;
next	1.63.2.2;

1.63.2.2
date	2001.09.29.09.35.30;	author rbcollins;	state Exp;
branches;
next	1.63.2.3;

1.63.2.3
date	2001.09.29.10.47.57;	author rbcollins;	state Exp;
branches;
next	1.63.2.4;

1.63.2.4
date	2001.09.30.13.56.37;	author rbcollins;	state Exp;
branches;
next	1.63.2.5;

1.63.2.5
date	2001.10.02.00.02.20;	author rbcollins;	state Exp;
branches;
next	1.63.2.6;

1.63.2.6
date	2001.10.02.06.46.05;	author rbcollins;	state Exp;
branches;
next	1.63.2.7;

1.63.2.7
date	2001.10.02.12.09.52;	author rbcollins;	state Exp;
branches;
next	1.63.2.8;

1.63.2.8
date	2002.01.04.03.56.05;	author rbcollins;	state Exp;
branches;
next	1.63.2.9;

1.63.2.9
date	2002.01.15.12.52.49;	author rbcollins;	state Exp;
branches;
next	1.63.2.10;

1.63.2.10
date	2002.01.22.04.52.39;	author rbcollins;	state Exp;
branches;
next	1.63.2.11;

1.63.2.11
date	2002.01.29.09.48.25;	author rbcollins;	state Exp;
branches;
next	1.63.2.12;

1.63.2.12
date	2002.02.28.12.53.22;	author rbcollins;	state Exp;
branches;
next	1.63.2.13;

1.63.2.13
date	2002.06.13.14.33.59;	author rbcollins;	state Exp;
branches;
next	1.63.2.14;

1.63.2.14
date	2002.06.15.21.01.44;	author scottc;	state Exp;
branches;
next	1.63.2.15;

1.63.2.15
date	2002.06.22.09.51.23;	author scottc;	state Exp;
branches;
next	1.63.2.16;

1.63.2.16
date	2002.07.10.14.40.16;	author scottc;	state Exp;
branches;
next	1.63.2.17;

1.63.2.17
date	2002.07.14.19.26.23;	author scottc;	state Exp;
branches;
next	1.63.2.18;

1.63.2.18
date	2002.07.26.19.03.36;	author scottc;	state Exp;
branches;
next	1.63.2.19;

1.63.2.19
date	2002.08.01.20.34.06;	author scottc;	state Exp;
branches;
next	1.63.2.20;

1.63.2.20
date	2002.08.16.21.46.48;	author scottc;	state Exp;
branches;
next	1.63.2.21;

1.63.2.21
date	2002.08.16.22.48.47;	author scottc;	state Exp;
branches;
next	1.63.2.22;

1.63.2.22
date	2002.08.26.11.38.14;	author scottc;	state Exp;
branches;
next	1.63.2.23;

1.63.2.23
date	2002.09.06.09.48.10;	author scottc;	state Exp;
branches;
next	1.63.2.24;

1.63.2.24
date	2002.09.22.10.01.27;	author scottc;	state Exp;
branches;
next	;

1.1.1.1
date	2000.02.17.19.38.31;	author cgf;	state Exp;
branches;
next	;


desc
@@


1.279
log
@2015-02-19  Jon TURNEY  <jon.turney@@dronecode.org.uk>

	* Makefile.in (sigfe.o): Use CFLAGS.
@
text
@# Makefile.in for Cygwin.
# Copyright 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005,
# 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015 Red Hat, Inc.
#
# This file is part of Cygwin.
#
# This software is a copyrighted work licensed under the terms of the
# Cygwin license.  Please consult the file "CYGWIN_LICENSE" for
# details.
# configure_input: @@configure_input@@

# This makefile requires GNU make.

srcdir:=@@srcdir@@
target_builddir:=@@target_builddir@@
winsup_srcdir:=@@winsup_srcdir@@
configure_args=@@configure_args@@

export CC:=@@CC@@
export CXX:=@@CXX@@

CFLAGS?=@@CFLAGS@@
CXXFLAGS?=@@CXXFLAGS@@

include ${srcdir}/../Makefile.common

# environment variables used by ccwrap
export CCWRAP_HEADERS:=. ${srcdir}
export CCWRAP_SYSTEM_HEADERS:=@@cygwin_headers@@ @@newlib_headers@@
export CCWRAP_DIRAFTER_HEADERS:=@@windows_headers@@

VPATH+=$(srcdir)/regex $(srcdir)/lib $(srcdir)/libc

target_cpu:=@@target_cpu@@
target_alias:=@@target_alias@@
build_alias:=@@build_alias@@
host_alias:=@@host_alias@@
prefix:=@@prefix@@

program_transform_name:=@@program_transform_name@@
exec_prefix:=@@exec_prefix@@
bindir:=@@bindir@@
libdir:=@@libdir@@
mandir:=@@mandir@@
sysconfdir:=@@sysconfdir@@
datarootdir:=@@datarootdir@@
ifeq ($(target_alias),$(host_alias))
ifeq ($(build_alias),$(host_alias))
tooldir:=$(exec_prefix)
else
tooldir:=$(exec_prefix)/$(target_alias)
endif
else
tooldir:=$(exec_prefix)/$(target_alias)
endif
datadir:=@@datadir@@
infodir:=@@infodir@@
includedir:=@@includedir@@

override INSTALL:=@@INSTALL@@
override INSTALL_PROGRAM:=@@INSTALL_PROGRAM@@
override INSTALL_DATA:=@@INSTALL_DATA@@

WINDOWS_LIBDIR:=@@windows_libdir@@

cygserver_blddir:=${target_builddir}/winsup/cygserver
LIBSERVER:=${cygserver_blddir}/libcygserver.a

LIBC:=$(newlib_build)/libc/libc.a
LIBM:=$(newlib_build)/libm/libm.a
CRT0:=$(cygwin_build)/crt0.o

#
# --enable options from configure
#
MT_SAFE:=@@MT_SAFE@@
CCEXTRA=
COMMON_CFLAGS=-MMD ${$(*F)_CFLAGS} -Werror -fmerge-constants -ftracer $(CCEXTRA)
ifeq ($(target_cpu),x86_64)
COMMON_CFLAGS+=-mcmodel=small
endif
COMPILE.cc+=${COMMON_CFLAGS}
COMPILE.c+=${COMMON_CFLAGS}

AR:=@@AR@@
AR_FLAGS:=qv
RANLIB:=@@RANLIB@@
LD:=@@LD@@
DLLTOOL:=@@DLLTOOL@@
WINDRES:=@@WINDRES@@
AS:=@@AS@@
NM:=@@NM@@
OBJCOPY:=@@OBJCOPY@@
OBJDUMP:=@@OBJDUMP@@
STRIP:=@@STRIP@@
LDSCRIPT:=cygwin.sc
MKDIRP:=$(INSTALL) -m 755 -d

@@SET_MAKE@@

# Setup the testing framework, if you have one
EXPECT = `if [ -f $${rootme}/../../expect/expect$(EXEEXT) ] ; then \
	    echo $${rootme}/../../expect/expect$(EXEEXT) ; \
	  else echo expect ; fi`

RUNTEST = `if [ -f $${srcdir}/../dejagnu/runtest ] ; then \
	       echo $${srcdir}/../dejagnu/runtest ; \
	    else echo runtest; fi`
RUNTESTFLAGS =

# Parameters used in building the cygwin.dll.
# We build as cygwin0.dll and rename at install time to overcome
# native rebuilding issues (we don't want the build tools to see a partially
# built cygwin.dll and attempt to use it instead of the old one).

DLL_NAME:=@@DLL_NAME@@
TEST_DLL_NAME:=${patsubst %1.dll,%0.dll,@@DLL_NAME@@}
TEST_LIB_NAME:=libcygwin0.a
STATIC_LIB_NAME:=libcygwin_s.a
DIN_FILE=@@DIN_FILE@@ common.din
DEF_FILE:=cygwin.def
TLSOFFSETS_H:=@@TLSOFFSETS_H@@
DLL_ENTRY:=@@DLL_ENTRY@@

LIBGMON_A:=libgmon.a
CYGWIN_START:=crt0.o
GMON_START:=gcrt0.o

toolopts:=--cpu=${target_cpu} --ar=${AR} --as=${AS} --nm=${NM} --objcopy=${OBJCOPY}
speclib=\
    ${srcdir}/speclib ${toolopts} \
	--exclude='cygwin' \
	--exclude='(?i:dll)' \
	--exclude='reloc' \
	--exclude='^main$$' \
	--exclude='^_main$$' \
	$^

# Some things want these from libc, but they have their own static
# data which apps can get to, which is a pain in the dll, so we
# include them directly into the library.

LIBCOS:=${sort ${addsuffix .o,${basename ${notdir ${wildcard $(srcdir)/lib/*.c}}}} \
	       ${addsuffix .o,${basename ${notdir ${wildcard $(srcdir)/lib/*.cc}}}}}

# Build all source files in the config directory

EXTRA_OFILES:=

MALLOC_OFILES:=malloc.o

DLL_IMPORTS:=${shell $(CC) -print-file-name=w32api/libkernel32.a} ${shell $(CC) -print-file-name=w32api/libntdll.a}

MT_SAFE_OBJECTS:=
#
DLL_OFILES:= \
	advapi32.o \
	arc4random.o \
	assert.o \
	autoload.o \
	base64.o \
	bsdlib.o \
	ctype.o \
	cxx.o \
	cygheap.o \
	cygthread.o \
	cygtls.o \
	cygwait.o \
	cygxdr.o \
	dcrt0.o \
	debug.o \
	devices.o \
	dir.o \
	dlfcn.o \
	dll_init.o \
	dtable.o \
	environ.o \
	errno.o \
	exceptions.o \
	exec.o \
	external.o \
	fcntl.o \
	fenv.o \
	fhandler.o \
	fhandler_clipboard.o \
	fhandler_console.o \
	fhandler_dev.o \
	fhandler_disk_file.o \
	fhandler_dsp.o \
	fhandler_fifo.o \
	fhandler_floppy.o \
	fhandler_mailslot.o \
	fhandler_netdrive.o \
	fhandler_nodevice.o \
	fhandler_proc.o \
	fhandler_process.o \
	fhandler_procnet.o \
	fhandler_procsys.o \
	fhandler_procsysvipc.o \
	fhandler_random.o \
	fhandler_raw.o \
	fhandler_registry.o \
	fhandler_serial.o \
	fhandler_socket.o \
	fhandler_tape.o \
	fhandler_termios.o \
	fhandler_tty.o \
	fhandler_virtual.o \
	fhandler_windows.o \
	fhandler_zero.o \
	flock.o \
	fnmatch.o \
	fork.o \
	fts.o \
	ftw.o \
	getopt.o \
	glob.o \
	glob_pattern_p.o \
	globals.o \
	grp.o \
	heap.o \
	hookapi.o \
	inet_addr.o \
	inet_network.o \
	init.o \
	ioctl.o \
	ipc.o \
	kernel32.o \
	ldap.o \
	libstdcxx_wrapper.o \
	localtime.o \
	lsearch.o \
	malloc_wrapper.o \
	minires-os-if.o \
	minires.o \
	miscfuncs.o \
	mktemp.o \
	mmap.o \
	msg.o \
	mount.o \
	net.o \
	netdb.o \
	nfs.o \
	nftw.o \
	nlsfuncs.o \
	ntea.o \
	passwd.o \
	path.o \
	pinfo.o \
	pipe.o \
	poll.o \
	posix_ipc.o \
	pseudo-reloc.o \
	pthread.o \
	quotactl.o \
	random.o \
	regcomp.o \
	regerror.o \
	regexec.o \
	regfree.o \
	registry.o \
	resource.o \
	rexec.o \
	rcmd.o \
	scandir.o \
	sched.o \
	sec_acl.o \
	sec_auth.o \
	sec_helper.o \
	security.o \
	select.o \
	sem.o \
	setlsapwd.o \
	shared.o \
	shm.o \
	sigfe.o \
	signal.o \
	sigproc.o \
	smallprint.o \
	spawn.o \
	strace.o \
	strfmon.o \
	strfuncs.o \
	strptime.o \
	strsep.o \
	strsig.o \
	sync.o \
	syscalls.o \
	sysconf.o \
	syslog.o \
	termios.o \
	thread.o \
	timer.o \
	times.o \
	tls_pbuf.o \
	tty.o \
	uinfo.o \
	uname.o \
	wait.o \
	wincap.o \
	window.o \
	winf.o \
	wow64.o \
	xsique.o \
	$(EXTRA_OFILES) \
	$(MALLOC_OFILES) \
	$(MT_SAFE_OBJECTS)

EXCLUDE_STATIC_OFILES:=$(addprefix --exclude=,\
	cygtls.o \
	dcrt0.o \
	exceptions.o \
	fork.o \
	signal.o \
	spawn.o \
)

VERSION_OFILES:=version.o winver.o

ifdef PREPROCESS
override DLL_OFILES:=$(patsubst %.o,%_E,${DLL_OFILES})
override EXCLUDE_STATIC_OFILES:=$(patsubst %.o,%_E,${EXCLUDE_STATIC_OFILES})
override EXTRA_OFILES=$(patsubst %.o,%_E,${DLL_OFILES}))
override MALLOC_OFILES:=$(patsubst %.o,%.E,${MALLOC_OFILES})
endif #PREPROCESS

ifeq ($(target_cpu),x86_64)
# Needed by mcountFunc.S to choose the right code path and symbol names
ASFLAGS:=-D_WIN64
endif

GMON_OFILES:=gmon.o mcount.o profil.o mcountFunc.o

NEW_FUNCTIONS:=$(addprefix --replace=,\
	atexit= \
	timezone= \
	__xdrrec_getrec= \
	__xdrrec_setnonblock= \
	xdr_array= \
	xdr_bool= \
	xdr_bytes= \
	xdr_char= \
	xdr_double= \
	xdr_enum= \
	xdr_float= \
	xdr_free= \
	xdr_hyper= \
	xdr_int= \
	xdr_int16_t= \
	xdr_int32_t= \
	xdr_int64_t= \
	xdr_int8_t= \
	xdr_long= \
	xdr_longlong_t= \
	xdr_netobj= \
	xdr_opaque= \
	xdr_pointer= \
	xdr_reference= \
	xdr_short= \
	xdr_sizeof= \
	xdr_string= \
	xdr_u_char= \
	xdr_u_hyper= \
	xdr_u_int= \
	xdr_u_int16_t= \
	xdr_u_int32_t= \
	xdr_u_int64_t= \
	xdr_u_int8_t= \
	xdr_u_long= \
	xdr_u_longlong_t= \
	xdr_u_short= \
	xdr_uint16_t= \
	xdr_uint32_t= \
	xdr_uint64_t= \
	xdr_uint8_t= \
	xdr_union= \
	xdr_vector= \
	xdr_void= \
	xdr_wrapstring= \
	xdrmem_create= \
	xdrrec_create= \
	xdrrec_endofrecord= \
	xdrrec_eof= \
	xdrrec_skiprecord= \
	xdrstdio_create= \
)
ifeq ($(target_cpu),x86_64)
NEW_FUNCTIONS+=
else
NEW_FUNCTIONS+=$(addprefix --replace=,\
	acl=_acl32 \
	aclcheck=_aclcheck32 \
	aclfrommode=_aclfrommode32 \
	aclfrompbits=_aclfrompbits32 \
	aclfromtext=_aclfromtext32 \
	aclsort=_aclsort32 \
	acltomode=_acltomode32 \
	acltopbits=_acltopbits32 \
	acltotext=_acltotext32 \
	chown=_chown32 \
	facl=_facl32 \
	fchown=_fchown32 \
	fcntl=_fcntl64 \
	fdopen=_fdopen64 \
	fgetpos=_fgetpos64 \
	fopen=_fopen64 \
	freopen=_freopen64 \
	fseeko=_fseeko64 \
	fsetpos=_fsetpos64 \
	fstat=_fstat64 \
	ftello=_ftello64 \
	ftruncate=_ftruncate64 \
	getegid=_getegid32 \
	geteuid=_geteuid32 \
	getgid=_getgid32 \
	getgrent=_getgrent32 \
	getgrgid=_getgrgid32 \
	getgrnam=_getgrnam32 \
	getgroups=_getgroups32 \
	getpwuid=_getpwuid32 \
	getpwuid_r=_getpwuid_r32 \
	getuid=_getuid32 \
	initgroups=_initgroups32 \
	lchown=_lchown32 \
	lseek=_lseek64 \
	lstat=_lstat64 \
	mknod=_mknod32 \
	mmap=_mmap64 \
	open=_open64 \
	setegid=_setegid32 \
	seteuid=_seteuid32 \
	setgid=_setgid32 \
	setgroups=_setgroups32 \
	setregid=_setregid32 \
	setreuid=_setreuid32 \
	setuid=_setuid32 \
	stat=_stat64 \
	tmpfile=_tmpfile64 \
	truncate=_truncate64 \
)
endif

API_VER:=$(srcdir)/include/cygwin/version.h

LIB_NAME:=libcygwin.a
SUBLIBS:=libpthread.a libutil.a ${CURDIR}/libm.a ${CURDIR}/libc.a libdl.a libresolv.a librt.a
EXTRALIBS:=libautomode.a libbinmode.a libtextmode.a libtextreadmode.a
INSTOBJS:=automode.o binmode.o textmode.o textreadmode.o
TARGET_LIBS:=$(LIB_NAME) $(CYGWIN_START) $(GMON_START) $(LIBGMON_A) $(SUBLIBS) $(INSTOBJS) $(EXTRALIBS)

ifneq "${filter -O%,$(CFLAGS)}" ""
cygheap_CFLAGS:=-fomit-frame-pointer
cygthread_CFLAGS:=-fomit-frame-pointer
cygtls_CFLAGS:=-fomit-frame-pointer
cygwait_CFLAGS=-fomit-frame-pointer
delqueue_CFLAGS:=-fomit-frame-pointer
devices_CFLAGS:=-fomit-frame-pointer
dir_CFLAGS:=-fomit-frame-pointer
dlfcn_CFLAGS:=-fomit-frame-pointer
dll_init_CFLAGS:=-fomit-frame-pointer
dtable_CFLAGS:=-fomit-frame-pointer -fcheck-new
fcntl_CFLAGS:=-fomit-frame-pointer
fenv_CFLAGS:=-fomit-frame-pointer
fhandler_CFLAGS:=-fomit-frame-pointer
fhandler_clipboard_CFLAGS:=-fomit-frame-pointer
fhandler_console_CFLAGS:=-fomit-frame-pointer
fhandler_disk_file_CFLAGS:=-fomit-frame-pointer
fhandler_dsp_CFLAGS:=-fomit-frame-pointer
fhandler_floppy_CFLAGS:=-fomit-frame-pointer
fhandler_netdrive_CFLAGS:=-fomit-frame-pointer
fhandler_proc_CFLAGS:=-fomit-frame-pointer
fhandler_process_CFLAGS:=-fomit-frame-pointer
fhandler_random_CFLAGS:=-fomit-frame-pointer
fhandler_raw_CFLAGS:=-fomit-frame-pointer
fhandler_registry_CFLAGS:=-fomit-frame-pointer
fhandler_serial_CFLAGS:=-fomit-frame-pointer
fhandler_socket_CFLAGS:=-fomit-frame-pointer
fhandler_syslog_CFLAGS:=-fomit-frame-pointer
fhandler_tape_CFLAGS:=-fomit-frame-pointer
fhandler_termios_CFLAGS:=-fomit-frame-pointer
fhandler_tty_CFLAGS:=-fomit-frame-pointer
fhandler_virtual_CFLAGS:=-fomit-frame-pointer
fhandler_windows_CFLAGS:=-fomit-frame-pointer
fhandler_zero_CFLAGS:=-fomit-frame-pointer
flock_CFLAGS:=-fomit-frame-pointer
grp_CFLAGS:=-fomit-frame-pointer
libstdcxx_wrapper_CFLAGS:=-fomit-frame-pointer
localtime_CFLAGS:=-fwrapv
malloc_CFLAGS:=-fomit-frame-pointer -O3
malloc_wrapper_CFLAGS:=-fomit-frame-pointer
miscfuncs_CFLAGS:=-fomit-frame-pointer
net_CFLAGS:=-fomit-frame-pointer
passwd_CFLAGS:=-fomit-frame-pointer
path_CFLAGS=-fomit-frame-pointer
regcomp_CFLAGS=-fomit-frame-pointer
regerror_CFLAGS=-fomit-frame-pointer
regexec_CFLAGS=-fomit-frame-pointer
regfree_CFLAGS=-fomit-frame-pointer
shared_CFLAGS:=-fomit-frame-pointer
sync_CFLAGS:=-fomit-frame-pointer -O3
smallprint_CFLAGS:=-fomit-frame-pointer
syscalls_CFLAGS:=-fomit-frame-pointer
sysconf_CFLAGS:=-fomit-frame-pointer
uinfo_CFLAGS:=-fomit-frame-pointer
endif

fhandler_proc_CFLAGS+=-DUSERNAME="\"$(USER)\"" -DHOSTNAME="\"$(HOSTNAME)\""
fhandler_proc_CFLAGS+=-DGCC_VERSION="\"`$(CC) -v 2>&1 | tail -n 1`\""

_cygwin_crt0_common_STDINCFLAGS:=yes
libstdcxx_wrapper_STDINCFLAGS:=yes
cxx_STDINCFLAGS:=yes

.PHONY: all force dll_ofiles install all_target install_target all_host install_host \
	install install-libs install-headers

all_host=@@all_host@@
install_host=@@install_host@@

all: all_target $(all_host)

all_target: $(TARGET_LIBS)

all_host: $(TEST_LIB_NAME)

force:

install: install-libs install-headers install-man install-ldif install_target \
	$(install_host) $(install_target)

uninstall: uninstall-libs uninstall-headers uninstall-man

install-libs: $(TARGET_LIBS)
	@@$(MKDIRP) $(DESTDIR)$(bindir)
	$(INSTALL_PROGRAM) $(TEST_DLL_NAME) $(DESTDIR)$(bindir)/$(DLL_NAME); \
	for i in $^; do \
	    $(INSTALL_DATA) $$i $(DESTDIR)$(tooldir)/lib/`basename $$i` ; \
	done
	cd $(DESTDIR)$(tooldir)/lib && ln -sf libcygwin.a libg.a

install-headers:
	cd $(srcdir); \
	for sub in `find include -name '[a-z]*' -type d -print | sort`; do \
	    $(MKDIRP) $(DESTDIR)$(tooldir)/$$sub; \
	    for i in $$sub/*.h ; do \
	      $(INSTALL_DATA) $$i $(DESTDIR)$(tooldir)/$$sub/`basename $$i` ; \
	    done ; \
	done ; \

install-man:
	@@$(MKDIRP) $(DESTDIR)$(mandir)/man2 $(DESTDIR)$(mandir)/man3 $(DESTDIR)$(mandir)/man5 $(DESTDIR)$(mandir)/man7
	cd $(srcdir); \
	for i in `find . -type f -name '*.2'`; do \
	    $(INSTALL_DATA) $$i $(DESTDIR)$(mandir)/man2/`basename $$i` ; \
	done; \
	for i in `find . -type f -name '*.3'`; do \
	    $(INSTALL_DATA) $$i $(DESTDIR)$(mandir)/man3/`basename $$i` ; \
	done; \
	for i in `find . -type f -name '*.5'`; do \
	    $(INSTALL_DATA) $$i $(DESTDIR)$(mandir)/man5/`basename $$i` ; \
	done; \
	for i in `find . -type f -name '*.7'`; do \
	    $(INSTALL_DATA) $$i $(DESTDIR)$(mandir)/man7/`basename $$i` ; \
	done

install-ldif:
	@@$(MKDIRP) $(DESTDIR)$(datarootdir)/cygwin
	$(INSTALL_DATA) $(srcdir)/cygwin.ldif $(DESTDIR)$(datarootdir)/cygwin

install_target:

install_host:

uninstall-libs: $(TARGET_LIBS)
	rm -f $(bindir)/$(DLL_NAME); \
	for i in $^; do \
	    rm -f $(tooldir)/lib/$$i ; \
	done

uninstall-headers:
	cd $(srcdir); \
	for sub in `find include -name '[a-z]*' -type d -print | sort`; do \
	    for i in $$sub/*.h ; do \
	      rm -f $(tooldir)/$$sub/`basename $$i` ; \
	    done ; \
	done ; \

uninstall-man:
	cd $(srcdir); \
	for i in `find . -type f -name '*.2'`; do \
	    rm -f $(DESTDIR)$(mandir)/man2/`basename $$i` ; \
	done; \
	for i in `find . -type f -name '*.3'`; do \
	    rm -f $(DESTDIR)$(mandir)/man3/`basename $$i` ; \
	done; \
	for i in `find . -type f -name '*.5'`; do \
	    rm -f $(DESTDIR)$(mandir)/man5/`basename $$i` ; \
	done; \
	for i in `find . -type f -name '*.7'`; do \
	    rm -f $(DESTDIR)$(mandir)/man7/`basename $$i` ; \
	done

clean:
	-rm -f *.o *.dll *.dbg *.a *.exp junk *.base version.cc *.exe *.d *stamp* *_magic.h sigfe.s cygwin.def globals.h $(srcdir)/$(TLSOFFSETS_H) $(srcdir)/devices.cc
	-@@$(MAKE) -C ${cygserver_blddir} libclean

maintainer-clean realclean: clean
	@@echo "This command is intended for maintainers to use;"
	@@echo "it deletes files that may require special tools to rebuild."
	-rm -fr configure

# Rule to build LDSCRIPT
$(LDSCRIPT): $(LDSCRIPT).in
	$(CC) -E - -P < $^ -o $@@

# Rule to build cygwin.dll
$(TEST_DLL_NAME): $(LDSCRIPT) dllfixdbg $(DLL_OFILES) $(LIBSERVER) $(LIBC) $(LIBM) $(API_VER) Makefile $(VERSION_OFILES)
	$(CXX) $(CXXFLAGS) \
	-mno-use-libstdc-wrappers -L${WINDOWS_LIBDIR} \
	-Wl,--gc-sections $(nostdlib) -Wl,-T$(firstword $^) -static \
	-Wl,--heap=0 -Wl,--out-implib,cygdll.a -shared -o $@@ \
	-e $(DLL_ENTRY) $(DEF_FILE) $(DLL_OFILES) $(VERSION_OFILES) \
	$(MALLOC_OBJ) $(LIBSERVER) $(LIBM) $(LIBC) \
	-lgcc $(DLL_IMPORTS) -Wl,-Map,cygwin.map
	@@$(word 2,$^) $(OBJDUMP) $(OBJCOPY) $@@ ${patsubst %0.dll,%1.dbg,$@@}
	@@ln -f $@@ new-$(DLL_NAME)

# Rule to build libcygwin.a
$(LIB_NAME): $(DEF_FILE) $(LIBCOS) | $(TEST_DLL_NAME)
	${srcdir}/mkimport ${toolopts} ${NEW_FUNCTIONS} $@@ cygdll.a $(wordlist 2,99,$^)

${STATIC_LIB_NAME}: mkstatic ${TEST_DLL_NAME}
	perl -d $< -x ${EXCLUDE_STATIC_OFILES} --library=${LIBC} --library=${LIBM} --ar=${AR} $@@ cygwin.map

# Rule to make stub library used by testsuite
# dependency set to $(LIB_NAME) to accommodate make -j2.
$(TEST_LIB_NAME): $(LIB_NAME)
	perl -p -e 'BEGIN{binmode(STDIN); binmode(STDOUT);}; s/cygwin1/cygwin0/g' < $? > $@@

$(LIBSERVER): ${cygserver_blddir}/Makefile
	$(MAKE) -C ${cygserver_blddir} libcygserver.a

${cygserver_blddir}/Makefile:
	/bin/mkdir -p ${@@D}
	cd ${@@D} && exec /bin/sh $(dir ${srcdir})/cygserver/configure ${configure_args}

dll_ofiles: $(DLL_OFILES)

$(LIBGMON_A): $(GMON_OFILES) $(GMON_START)
	$(AR) rcv $(LIBGMON_A) $(GMON_OFILES)

globals.h: mkglobals_h globals.cc
	$^ > $@@

${DLL_OFILES} ${LIBCOS}: globals.h

shared_info_magic.h: cygmagic shared_info.h
	/bin/sh $(word 1,$^) $@@ "${COMPILE.cc} -E -x c++" $(word 2,$^) SHARED_MAGIC 'class shared_info' USER_MAGIC 'class user_info'

child_info_magic.h: cygmagic child_info.h
	/bin/sh $(word 1,$^) $@@ "${COMPILE.cc} -E -x c++" $(word 2,$^) CHILD_INFO_MAGIC 'class child_info'

dcrt0.o sigproc.o: child_info_magic.h

shared.o: shared_info_magic.h

$(srcdir)/devices.cc: gendevices devices.in devices.h
	${wordlist 1,2,$^} $@@

${CURDIR}/libc.a: ${LIB_NAME} ${CURDIR}/libm.a libpthread.a libutil.a
	${speclib} -v ${@@F}

${CURDIR}/libm.a: ${LIB_NAME} $(LIBM)
	${speclib} ${@@F}

libpthread.a: ${LIB_NAME} pthread.o thread.o
	${speclib} ${@@F}

libutil.a: ${LIB_NAME} bsdlib.o
	${speclib} ${@@F}

libdl.a: ${LIB_NAME} dlfcn.o
	${speclib} ${@@F}

libresolv.a: ${LIB_NAME} minires.o
	${speclib} ${@@F}

librt.a: ${LIB_NAME} posix_ipc.o
	${speclib} ${@@F}

${EXTRALIBS}: lib%.a: %.o
	$(AR) cru $@@ $?

version.cc winver.o: mkvers.sh include/cygwin/version.h winver.rc $(DLL_OFILES)
	@@echo "Making version.cc and winver.o";\
	/bin/sh ${word 1,$^} ${word 2,$^} ${word 3,$^} $(WINDRES) ${CFLAGS} $(addprefix -I,${CCWRAP_SYSTEM_HEADERS} ${CCWRAP_DIRAFTER_HEADERS})

Makefile: ${srcdir}/Makefile.in
	/bin/sh ./config.status

$(DEF_FILE): gendef $(srcdir)/$(TLSOFFSETS_H) $(DIN_FILE)
	$(word 1,$^) --cpu=${target_cpu} --output-def=$@@  --tlsoffsets=$(word 2,$^) $(wordlist 3,99,$^)

$(srcdir)/$(TLSOFFSETS_H): gentls_offsets cygtls.h
	$^ $@@ $(target_cpu) $(COMPILE.cc) -c

sigfe.s: $(DEF_FILE)
	@@[ -s $@@ ] || \
	{ rm -f $(DEF_FILE); $(MAKE) -s -j1 $(DEF_FILE); }; \
	[ -s $@@ ] && touch $@@

sigfe.o: sigfe.s
	$(CC) ${CFLAGS} -c -o $@@ $<

ctags: CTAGS
tags:  CTAGS
CTAGS:
	-cd $(srcdir) && ctags -R --regex-C++='/^([a-zA-Z0-9_]*::[a-zA-Z0-9_]*) /\1/f/' .

deps:=${wildcard *.d}
ifneq (,$(deps))
include $(deps)
endif

%: RCS/%,v
@


1.278
log
@	* Makefile.in (VERSION_OFILES): New variable containing object files
	with version information.  Use throughout.
	(clean): Drop winver_stamp.
	(version.cc winver.o): Drop empty rule.
	(winver_stamp): Convert to rule targeting version.cc and winver.o
	directly.  Drop touching winver_stamp.  Fix typo.
@
text
@d713 1
a713 1
	$(CC) -c -o $@@ $<
@


1.277
log
@	* Makefile.in (install): Add install-ldif target.
	(install-ldif): New target to install cygwin.ldif.
	* cygheap.h (class cygheap_pwdgrp): Rename pfx_t to nss_pfx_t.  Add
	PFX to enum value.  Add nss_scheme_method enum and nss_scheme_t
	structure.  Add home_scheme, shell_scheme and gecos_scheme members.
	(NSS_SCHEME_MAX): Define.
	(cygheap_pwdgrp::get_home): Declare.
	(cygheap_pwdgrp::get_shell): Declare.
	(cygheap_pwdgrp::get_gecos): Declare.
	* cygwin.ldif: New file.
	* ldap.cc (std_user_attr): New array, just defining the standard
	attributes.
	(group_attr): Add cygwinUnixGid.
	(user_attr): Convert to macro pointing to cygheap->pg.ldap_user_attr.
	(cygheap_pwdgrp::init_ldap_user_attr): New method.
	(cyg_ldap::fetch_ad_account): Call cygheap_pwdgrp::init_ldap_user_attr
	if user_attr initialization is required.  Fix comment.
	(cyg_ldap::get_string_attribute): Implement taking attribute name
	as argument.
	* ldap.h: Drop unused macros.
	(cyg_ldap::get_gecos): Remove.
	(cyg_ldap::get_home): Remove.
	(cyg_ldap::get_shell): Remove.
	(cyg_ldap::get_string_attribute): Declare name argument variant public.
	* uinfo.cc (cygheap_user::ontherange): Fix indentation.
	(cygheap_pwdgrp::init): Initialize new home_scheme, shell_scheme and
	gecos_scheme members.  Align comment.
	(NSS_NCMP): Define comparison macro.
	(NSS_CMP): Ditto.
	(cygheap_pwdgrp::nss_init_line): Use aforementioned macros throughout.
	Fix comment handling.  Add db_home, db_shell and db_gecos handling.
	(fetch_from_description): New function to fetch XML-style attributes
	from (description) string.
	(fetch_from_path): New function to evaluate path string with wildcards.
	(cygheap_pwdgrp::get_home): New methods to fetch pw_dir value.
	(cygheap_pwdgrp::get_shell): Ditto for pw_shell.
	(cygheap_pwdgrp::get_gecos): Ditto for pw_gecos.
	(colon_to_semicolon): Move up.
	(pwdgrp::fetch_account_from_windows): Convert home, shell, gecos
	variables to char*.  Drop statement breaking extended group info.
	Fetch home, shell and gecos values using new methods.  Use
	fetch_from_description calls to fetch UNIX id and primary groups from
	SAM comment field.  Accommodate uxid being a char* now.  Accommodate
	the fact that extended info is malloc'ed, rather then alloca'ed.
	Create linebuf content as multibyte string.  Create line buffer by
	just calling cstrdup.
@
text
@d3 1
a3 1
# 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014 Red Hat, Inc.
d318 2
d604 1
a604 1
	-rm -f *.o *.dll *.dbg *.a *.exp junk *.base version.cc winver_stamp *.exe *.d *stamp* *_magic.h sigfe.s cygwin.def globals.h $(srcdir)/$(TLSOFFSETS_H) $(srcdir)/devices.cc
d617 1
a617 1
$(TEST_DLL_NAME): $(LDSCRIPT) dllfixdbg $(DLL_OFILES) $(LIBSERVER) $(LIBC) $(LIBM) $(API_VER) Makefile winver_stamp
d622 1
a622 1
	-e $(DLL_ENTRY) $(DEF_FILE) $(DLL_OFILES) version.o winver.o \
a651 3
version.cc winver.o: winver_stamp
	@@ :

d694 3
a696 5
winver_stamp: mkvers.sh include/cygwin/version.h winver.rc $(DLL_OFILES)
	@@echo "Making version.o and winver.o";\
	/bin/sh ${word 1,$^} ${word 2,$^} ${word 3,$^} $(WINDRES) ${CFLAGS} $(addprefix -I,${CCWRAP_SYSTEM_HEADERS} ${CCWRAP_DIRAFTER_HEADERS}) S&& \
	$(COMPILE.cc) -c -o version.o version.cc && \
	touch $@@
@


1.276
log
@	* Makefile.in (NEW_FUNCTIONS): Add atexit to be not exported.
	* lib/atexit.c (atexit): New, statically linkable version of atexit.
	* dcrt0.cc (cygwin_atexit): Add comment to mark this function as old
	entry point.  Indiscriminately check for DSO of function pointer for
	all functions, if checking for DSO of return address fails on x86_64.
	Change comment accordingly.
@
text
@d526 1
a526 1
install: install-libs install-headers install-man install_target \
d564 4
@


1.275
log
@	* Makefile.in (NEW_FUNCTIONS): Define target-independent.  Add target
	dependent stuff afterwards.  Globally define timezone and all xdr
	symbols as non-exported from libcygwin.a.
@
text
@d333 1
@


1.274
log
@	* Makefile.in (DLL_OFILES): Add quotactl.o.
	* common.din (quotactl): Export.
	* ntdll.h: Define FILE_FS_CONTROL_INFORMATION::FileSystemControlFlags
	flag values.
	(struct _FILE_FS_CONTROL_INFORMATION): Define.
	(struct _FILE_GET_QUOTA_INFORMATION): Define.
	(typedef struct _FILE_QUOTA_INFORMATION): Define.
	(NtQueryObject): Use PVOID rather than VOID*.
	(NtQueryVolumeInformationFile): Ditto.
	(NtQueryQuotaInformationFile): Declare.
	(NtSetQuotaInformationFile): Declare.
	(NtSetVolumeInformationFile): Declare.
	* quotactl.cc: New file implementing quotactl().
	* include/sys/mount.h (BLOCK_SIZE): Define.
	(BLOCK_SIZE_BITS): Define.
	* include/sys/quota.h: New header.
	* include/cygwin/version.h (CYGWIN_VERSION_API_MINOR): Bump.
@
text
@d332 52
d385 1
a385 1
NEW_FUNCTIONS:=
d387 1
a387 1
NEW_FUNCTIONS:=$(addprefix --replace=,\
a434 1
	timezone= \
@


1.273
log
@	* Makefile.in (DLL_OFILES): Rearrange with one file per line.
@
text
@d255 1
@


1.272
log
@	Introduce reading passwd/group entries from SAM/AD.  Introduce
	/etc/nsswitch.conf file to configure it.
	* Makefile.in (DLL_OFILES): Add ldap.o.
	* autoload.cc: Import ldap functions from wldap32.dll.
	(DsEnumerateDomainTrustsW): Import.
	(NetGroupGetInfo): Import.
	* cygheap.h (class cygheap_domain_info): New class to keep global
	domain info.
	(class cygheap_pwdgrp): New class to keep passwd/group caches and
	configuration info from /etc/nssswitch.conf.
	(struct init_cygheap): Add cygheap_domain_info member "dom" and
	cygheap_pwdgrp member "pg".
	* cygtls.h (struct _local_storage): Remove unused member "res".
	Rearrange slightly, Add members pwbuf and grbuf to implement non-caching
	passwd/group fetching from SAM/AD.  Make pw_pos and pw_pos unsigned.
	* fhandler_disk_file.cc (fhandler_base::fstat_by_nfs_ea): Add RFC 2307
	uid/gid mapping.
	* fhandler_process.cc: Drop including pwdgrp.h.
	* fhandler_procsysvipc.cc: Ditto.
	* fhandler_registry.cc (fhandler_registry::fstat): Set key uid/gid
	to ILLEGAL_UID/ILLEGAL_GID rather than UNKNOWN_UID/UNKNOWN_GID.
	* grp.cc (group_buf): Drop.
	(gr): Drop.
	(pwdgrp::parse_group): Fill pg_grp.
	(pwdgrp::read_group): Remove.
	(pwdgrp::init_grp): New method.
	(pwdgrp::prep_tls_grbuf): New method.
	(pwdgrp::find_group): New methods.
	(internal_getgrsid): Convert to call new pwdgrp methods.
	(internal_getgrnam): Ditto.
	(internal_getgrgid): Ditto.
	(getgrgid_r): Drop 2nd parameter from internal_getgrgid call.
	(getgrgid32): Ditto.
	(getgrnam_r): Ditto for internal_getgrnam.
	(getgrnam32): Ditto.
	(getgrent32): Convert to call new pwdgrp methods.
	(internal_getgrent): Remove.
	(internal_getgroups): Simplify, especially drop calls to
	internal_getgrent.
	* ldap.cc: New file implementing cyg_ldap class for LDAP access to AD
	and RFC 2307 server.
	* ldap.h: New header, declaring cyg_ldap class.
	* passwd.cc (passwd_buf): Drop.
	(pr): Drop.
	(pwdgrp::parse_passwd): Fill pg_pwd.
	(pwdgrp::read_passwd): Remove.
	(pwdgrp::init_pwd): New method.
	(pwdgrp::prep_tls_pwbuf): New method.
	(find_user): New methods.
	(internal_getpwsid): Convert to call new pwdgrp methods.
	(internal_getpwnam): Ditto.
	(internal_getpwuid): Ditto.
	(getpwuid32): Drop 2nd parameter from internal_getpwuid call.
	(getpwuid_r): Ditto.
	(getpwnam): Ditto for internal_getpwnam.
	(getpwnam_r): Ditto.
	(getpwent): Convert to call new pwdgrp methods.
	* path.cc (class etc): Remove all methods.
	* path.h (class etc): Drop.
	* pinfo.cc (pinfo_basic::pinfo_basic): Set gid to ILLEGAL_GID rather
	than UNKNOWN_GID.
	(pinfo_init): Ditto.
	* pwdgrp.h (internal_getpwnam): Drop 2nd parameter from declaration.
	(internal_getpwuid): Ditto.
	(internal_getgrgid): Ditto.
	(internal_getgrnam): Ditto.
	(internal_getgrent): Drop declaration.
	(enum fetch_user_arg_type_t): New type.
	(struct fetch_user_arg_t): New type.
	(struct pg_pwd): New type.
	(struct pg_grp): New type.
	(class pwdgrp): Rework to provide functions for file and db requests
	and caching.
	(class ugid_cache_t): New class to provide RFC 2307 uid map caching.
	(ugid_cache): Declare.
	* sec_acl.cc: Drop including pwdgrp.h.
	* sec_auth.cc: Drop including dsgetdc.h and pwdgrp.h.
	(get_logon_server): Convert third parameter to ULONG flags argument
	to allow arbitrary flags values in DsGetDcNameW call and change calls
	to this function throughout.  Use cached account domain name rather
	than calling GetComputerNameW.
	(get_unix_group_sidlist): Remove.
	(get_server_groups): Drop call to get_unix_group_sidlist.
	(verify_token): Rework token group check without calling
	internal_getgrent.
	* sec_helper.cc (cygpsid::pstring): New methods, like string() but
	return pointer to end of string.
	(cygsid::getfromstr): Add wide character implementation.
	(get_sids_info): Add RFC 2307 uid/gid mapping for Samba shares.
	* security.cc: Drop including pwdgrp.h.
	* security.h (DEFAULT_UID): Remove.
	(UNKNOWN_UID): Remove.
	(UNKNOWN_GID): Remove.
	(uinfo_init): Move here from winsup.h.
	(ILLEGAL_UID): Ditto.
	(ILLEGAL_GID): Ditto.
	(UNIX_POSIX_OFFSET): Define.  Add lengthy comment.
	(UNIX_POSIX_MASK): Ditto.
	(MAP_UNIX_TO_CYGWIN_ID): Ditto.
	(ILLEGAL_UID16): Move here from winsup.h.
	(ILLEGAL_GID16): Ditto.
	(uid16touid32): Ditto.
	(gid16togid32): Ditto.
	(sid_id_auth): New convenience macro for SID component access.
	(sid_sub_auth_count): Ditto.
	(sid_sub_auth): Ditto.
	(sid_sub_auth_rid): Ditto.
	(cygpsid::pstring): Declare.
	(cygsid::getfromstr): Declare wide character variant.
	(cygsid::operator=): Ditto.
	(cygsid::operator*=): Ditto.
	(get_logon_server): Change declaration according to source code.
	* setlsapwd.cc (setlsapwd): Drop 2nd parameter from internal_getpwnam
	call.
	* shared.cc (memory_init): Call cygheap->pg.init in first process.
	* syscalls.cc: Drop including pwdgrp.h.
	* tlsoffsets.h: Regenerate.
	* tlsoffsets64.h: Ditto.
	* uinfo.cc (internal_getlogin): Drop gratuitious internal_getpwuid
	call.  Fix debug output.  Overwrite user gid in border case of a
	missing passwd file while a group file exists.
	(pwdgrp::add_line): Allocate memory on cygheap.
	(pwdgrp::load): Remove.
	(ugid_cache): Define.
	(cygheap_pwdgrp::init): New method.
	(cygheap_pwdgrp::nss_init_line): New method.
	(cygheap_pwdgrp::_nss_init): New method.
	(cygheap_domain_info::init): New method.
	(logon_sid): Define.
	(get_logon_sid): New function.
	(pwdgrp::add_account_post_fetch): New method.
	(pwdgrp::add_account_from_file): New methods.
	(pwdgrp::add_account_from_windows): New methods.
	(pwdgrp::check_file): New method.
	(pwdgrp::fetch_account_from_line): New method.
	(pwdgrp::fetch_account_from_file): New method.
	(pwdgrp::fetch_account_from_windows): New method.
	* winsup.h: Move aforementioned macros and declarations to security.h.
@
text
@d156 151
a306 25
DLL_OFILES:=advapi32.o arc4random.o assert.o autoload.o base64.o bsdlib.o ctype.o \
	cxx.o cygheap.o cygthread.o cygtls.o cygwait.o cygxdr.o dcrt0.o debug.o \
	devices.o dir.o dlfcn.o dll_init.o dtable.o environ.o errno.o exceptions.o \
	exec.o external.o fcntl.o fenv.o fhandler.o fhandler_clipboard.o \
	fhandler_console.o fhandler_dev.o fhandler_disk_file.o fhandler_dsp.o \
	fhandler_fifo.o fhandler_floppy.o fhandler_mailslot.o \
	fhandler_netdrive.o fhandler_nodevice.o fhandler_proc.o \
	fhandler_process.o fhandler_procnet.o fhandler_procsys.o \
	fhandler_procsysvipc.o fhandler_random.o fhandler_raw.o \
	fhandler_registry.o fhandler_serial.o fhandler_socket.o fhandler_tape.o \
	fhandler_termios.o fhandler_tty.o fhandler_virtual.o fhandler_windows.o \
	fhandler_zero.o flock.o fnmatch.o fork.o fts.o ftw.o getopt.o glob.o \
	glob_pattern_p.o globals.o grp.o heap.o hookapi.o inet_addr.o \
	inet_network.o init.o ioctl.o ipc.o kernel32.o ldap.o libstdcxx_wrapper.o \
	localtime.o lsearch.o malloc_wrapper.o minires-os-if.o minires.o \
	miscfuncs.o mktemp.o mmap.o msg.o mount.o net.o netdb.o nfs.o nftw.o \
	nlsfuncs.o ntea.o passwd.o path.o pinfo.o pipe.o poll.o posix_ipc.o \
	pseudo-reloc.o pthread.o random.o regcomp.o regerror.o regexec.o regfree.o \
	registry.o resource.o rexec.o rcmd.o scandir.o sched.o sec_acl.o \
	sec_auth.o sec_helper.o security.o select.o sem.o setlsapwd.o shared.o \
	shm.o sigfe.o signal.o sigproc.o smallprint.o spawn.o strace.o strfmon.o \
	strfuncs.o strptime.o strsep.o strsig.o sync.o syscalls.o sysconf.o \
	syslog.o termios.o thread.o timer.o times.o tls_pbuf.o tty.o uinfo.o \
	uname.o wait.o wincap.o window.o winf.o wow64.o xsique.o \
	$(EXTRA_OFILES) $(MALLOC_OFILES) $(MT_SAFE_OBJECTS)
@


1.271
log
@	Remove /dev/mem, /dev/kmem, /dev/port support.
	* Makefile.in (DLL_OFILES): Drop fhandler_mem.o.
	(fhandler_mem_CFLAGS): Remove rule.
	* devices.in (enum fh_devices): Remove FH_MEM, FH_KMEM and FH_PORT.
	* devices.cc: Regenerate.
	* dtable.cc (fh_alloc): Drop handling for FH_MEM, FH_KMEM and FH_PORT.
	* fhandler.h (class fhandler_dev_mem): Remove.
	* fhandler_mem.cc: Remove file.
	* globals.cc (ro_u_pmem): Remove.
	* mmap.cc (fhandler_dev_mem::mmap): Remove.
	(fhandler_dev_mem::munmap): Remove.
	(fhandler_dev_mem::fixup_mmap_after_fork): Remove.
@
text
@d3 1
a3 1
# 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013 Red Hat, Inc.
d169 1
a169 1
	inet_network.o init.o ioctl.o ipc.o kernel32.o libstdcxx_wrapper.o \
@


1.271.2.1
log
@2014-11-07  Corinna Vinschen  <corinna@@vinschen.de>

	* dcrt0.cc (cygwin__cxa_atexit): Fetch correct DSO handle value
	by searching dll list.  Explain why.

2014-11-06  Corinna Vinschen  <corinna@@vinschen.de>

	* dcrt0.cc (cygwin_atexit): Change preceeding comment to reflect
	API version numbers.
	* external.cc (cygwin_internal): disable setting cxx_malloc on 64 bit.
	Add CW_FIXED_ATEXIT case.
	* include/cygwin/version.h (CYGWIN_VERSION_API_MINOR): Bump.
	* include/sys/cygwin.h (cygwin_getinfo_types): Add CW_FIXED_ATEXIT.
	* lib/atexit.c (atexit): Test running Cygwin version by checking
	return value of cygwin_internal (CW_FIXED_ATEXIT).

2014-11-05  Corinna Vinschen  <corinna@@vinschen.de>

	* lib/atexit.c (atexit): Check for being linked into the executable.
	If so, call __cxa_atexit with NULL DSO handle.  Explain why.
	* lib/dso_handle.c: New file providing fallback __dso_handle.

2014-11-05  Corinna Vinschen  <corinna@@vinschen.de>

	* Makefile.in (NEW_FUNCTIONS): Add atexit to be not exported.
	* lib/atexit.c (atexit): New, statically linkable version of atexit.
	* dcrt0.cc (cygwin_atexit): Add comment to mark this function as old
	entry point.  Indiscriminately check for DSO of function pointer for
	all functions, if checking for DSO of return address fails on x86_64.
	Change comment accordingly.

2014-11-05  Corinna Vinschen  <corinna@@vinschen.de>

	* Makefile.in (NEW_FUNCTIONS): Define target-independent.  Add target
	dependent stuff afterwards.  Globally define timezone and all xdr
	symbols as non-exported from libcygwin.a.

2014-11-03  Corinna Vinschen  <corinna@@vinschen.de>

	* cygheap.cc: Fix formatting.

2014-10-29  Corinna Vinschen  <corinna@@vinschen.de>

	* cygheap.cc (init_cygheap::init_installation_root): Create content of
	installation_dir as non-prefixed path, if possible.

2014-10-29  Corinna Vinschen  <corinna@@vinschen.de>

	* common.din (__cxa_atexit): Define as cygwin__cxa_atexit.
	* dcrt0.cc (cygwin__cxa_atexit): New function.  Explain what we do.

2014-10-28  Corinna Vinschen  <corinna@@vinschen.de>

	* globals.cc (dos_file_warning): Set to false by default.
	* path.cc (warn_msdos): Make static.  Drop test for dos_file_warning.
	(path_conv::check): Check for dos_file_warning here to avoid a function
	call in the default case.

2014-10-27  Corinna Vinschen  <corinna@@vinschen.de>

	* dcrt0.cc (cygwin_atexit): Add workaround for broken atexit calls
	in __gcc_register_frame of DLLs built with gcc-4.8.3-3.

2014-10-27  Corinna Vinschen  <corinna@@vinschen.de>

	* cygheap.cc (init_cygheap::init_installation_root): Set
	installation_dir_len.
	* cygheap.h (struct init_cygheap): Add installation_dir_len member.
	* environ.cc (win_env::add_cache): Use stpcpy for speed.
	(posify_maybe): Use tmp_pathbuf buffer instead of stack.
	(raise_envblock): New function to resize Windows environment block.
	(build_env): Fix indentation.  Call raise_envblock function.  Check if
	$PATH exists and is non-empty.  If not, add PATH variable with Cygwin
	installation directory as content to Windows environment.  Explain why.

2014-10-24  Corinna Vinschen  <corinna@@vinschen.de>

	* fhandler_proc.cc (format_proc_cygdrive): Fix symlink path if cygdrive
	is "/".

2014-10-24  Corinna Vinschen  <corinna@@vinschen.de>

	* gendef (sigdelayed): 64 bit only: Fix seh_pushreg statements in
	prologue.

2014-10-22  Yaakov Selkowitz  <yselkowi@@redhat.com>

	* common.din (stime): Export.
	* times.cc (stime): New function.
	* include/cygwin/time.h (stime): Declare.
	* include/cygwin/version.h (CYGWIN_VERSION_API_MINOR): Bump.

2014-10-20  Corinna Vinschen  <corinna@@vinschen.de>

	* fhandler_serial.cc: Revert debug code accidentally checked in on
	2014-08-18.

2014-10-20  Corinna Vinschen  <corinna@@vinschen.de>

	* path.cc (symlink_info::check): Set error from status code if opening
	the parent directory failed, but keep special case for root dirs.

2014-10-17  Corinna Vinschen  <corinna@@vinschen.de>

	* cygheap.cc (init_cygheap::init_installation_root): Just memmove
	contents of installation_root instead of calling GetModuleFileNameW
	again.  Copy installation_root to installation_dir before stripping of
	"bin" dir.  Explain what we do.
	* cygheap.h (struct init_cygheap): Add installation_dir member.

2014-10-17  Corinna Vinschen  <corinna@@vinschen.de>

	* cygtls.h (__try): Define __l_endtry as block-local label in 32 bit
	case as well.

2014-10-17  Corinna Vinschen  <corinna@@vinschen.de>

	* Makefile.in (DLL_OFILES): Add quotactl.o.
	* common.din (quotactl): Export.
	* ntdll.h: Define FILE_FS_CONTROL_INFORMATION::FileSystemControlFlags
	flag values.
	(struct _FILE_FS_CONTROL_INFORMATION): Define.
	(struct _FILE_GET_QUOTA_INFORMATION): Define.
	(typedef struct _FILE_QUOTA_INFORMATION): Define.
	(NtQueryObject): Use PVOID rather than VOID*.
	(NtQueryVolumeInformationFile): Ditto.
	(NtQueryQuotaInformationFile): Declare.
	(NtSetQuotaInformationFile): Declare.
	(NtSetVolumeInformationFile): Declare.
	* quotactl.cc: New file implementing quotactl().
	* include/sys/mount.h (BLOCK_SIZE): Define.
	(BLOCK_SIZE_BITS): Define.
	* include/sys/quota.h: New header.
	* include/cygwin/version.h (CYGWIN_VERSION_API_MINOR): Bump.

2014-10-16  Corinna Vinschen  <corinna@@vinschen.de>

	* Makefile.in (DLL_OFILES): Rearrange with one file per line.

2014-10-16  Corinna Vinschen  <corinna@@vinschen.de>

	* fhandler_proc.cc (format_proc_partitions): Extend output to print
	the windows mount points the device is mounted on.

2014-10-13  Corinna Vinschen  <corinna@@vinschen.de>

	* net.cc (cygwin_setsockopt): Drop redundant test for AF_LOCAL and
	SOCK_STREAM in SO_PEERCRED case, as in the original patch.

2014-10-12  Corinna Vinschen  <corinna@@vinschen.de>

	* dlfcn.cc (gfpod_helper): Only check for POSIX dir separator, same as
	in get_full_path_of_dll.

2014-10-12  Corinna Vinschen  <corinna@@vinschen.de>

	* dlfcn.cc (set_dl_error): Drop useless __stdcall.
	(check_path_access): Ditto.  Drop FE_CWD from call to find_exec.
	(gfpod_helper): Call path_conv::check for all paths containing a dir
	separator to more closely follow the Linux search algorithm.
	(get_full_path_of_dll): Drop useless __stdcall.
	(dlopen): Simplify RTLD_NOLOAD case by calling GetModuleHandleEx
	instead of GetModuleHandle/LoadLibrary.

2014-10-11  Christian Franke  <franke@@computer.org>

	Add setsockopt(sd, SOL_SOCKET, SO_PEERCRED, NULL, 0) to disable
	initial handshake on AF_LOCAL sockets.
	* fhandler.h (class fhandler_socket): Add no_getpeereid status flag.
	(fhandler_socket::af_local_set_no_getpeereid): New prototype.
	* fhandler_socket.cc (fhandler_socket::af_local_connect): Skip handshake
	if no_getpeereid is set.  Add debug output.
	(fhandler_socket::af_local_accept): Likewise.
	(fhandler_socket::af_local_set_no_getpeereid): New function.
	(fhandler_socket::af_local_copy): Copy no_getpeereid.
	(fhandler_socket::getpeereid): Fail if no_getpeereid is set.
	* net.cc (cygwin_setsockopt): Add SO_PEERCRED for AF_LOCAL/SOCK_STREAM
	sockets.  Add comment to explain why we need it.
	* include/cygwin/version.h (CYGWIN_VERSION_API_MINOR): Bump.

2014-10-10  Corinna Vinschen  <corinna@@vinschen.de>

	* dlfcn.cc (dlopen): Disable old 32 bit code on 64 bit.
	* dcrt0.cc (check_sanity_and_sync): Ditto.
	* dll_init.cc (dll_dllcrt0_1): Fix typo in comment.

2014-10-08  Corinna Vinschen  <corinna@@vinschen.de>

	* common.din (ffsl): Export.
	(ffsll): Export.
	* syscalls.cc (ffs): Implement using GCC intrinsic.
	(ffsl): Ditto.
	(ffsll): Ditto.
	* include/cygwin/version.h (CYGWIN_VERSION_API_MINOR): Bump.

2014-10-08  Christian Franke  <franke@@computer.org>

	* syscalls.cc (ffs): Fix crash of ffs (0x80000000) on 64 bit.

2014-10-08  Corinna Vinschen  <corinna@@vinschen.de>

	* fhandler_process.cc (format_process_statm): Fix output of dirty
	pages.  Add linefeed.

2014-09-05  Corinna Vinschen  <corinna@@vinschen.de>

	* fhandler_proc.cc (proc_tab): Add entry for cygdrive symlink.
	(format_proc_cygdrive): New function to implement /proc/cygdrive.

2014-09-05  Corinna Vinschen  <corinna@@vinschen.de>

	* exception.h (class exception): Remove unnecessary #ifdef.

2014-09-05  Corinna Vinschen  <corinna@@vinschen.de>

	* winlean.h (DNLEN): Raise to 31.  Explain why.

2014-08-28  Corinna Vinschen  <corinna@@vinschen.de>

	* fhandler_disk_file.cc (fhandler_disk_file::fstatvfs): Try the
	FileFsSizeInformation information class on filesystems choking on
	FileFsFullSizeInformation (I see you Netapp!)

2014-08-27  Corinna Vinschen  <corinna@@vinschen.de>

	* fhandler.h (fhandler_pty_slave::fch_open_handles): Add bool parameter
	to declaration.
	* fhandler_tty.cc (fhandler_pty_slave::fch_open_handles): Add bool
	parameter "chown".  Only request WRITE_OWNER access when opening pty
	synchronization objects if "chown" is set.
	(fhandler_pty_slave::fchmod): Call fch_open_handles with new bool
	parameter set to false.
	(fhandler_pty_slave::fchown): Call fch_open_handles with new bool
	parameter set to true.
	* kernel32.cc (CreateFileMappingW): Fix default standard rights for
	file mappings from READ_CONTROL to STANDARD_RIGHTS_REQUIRED to allow
	changing the DACL (fixes "access denied" error in pinfo::set_acl).

	* fhandler_disk_file.cc (fhandler_base::fstat_helper): Change debug
	output to print mode bits in octal.
	* security.cc (alloc_sd): Ditto.
	(set_file_attribute): Ditto.

2014-08-27  Corinna Vinschen  <corinna@@vinschen.de>

	* ntea.cc (read_ea): Change left-over return to __leave.  Fix
	condition to close handle.  Call NtClose rather than CloseHandle.
	(write_ea): Fix condition to close handle.  Call NtClose rather than
	CloseHandle.
	* security.cc (get_file_sd): Call pc.init_reopen_attr if a valid
	incoming handle was given, pc.get_object_attr otherwise.
	(set_file_sd): Ditto.

2014-08-26  Corinna Vinschen  <corinna@@vinschen.de>

	* path.h (path_conv::init_reopen_attr): Change from void to returning
	POBJECT_ATTRIBUTES.  Take OBJECT_ATTRIBUTES reference as argument, not
	pointer.
	* fhandler_disk_file.cc: Throughout accommodate above change.
	* syscalls.cc: Ditto.
	* ntea.cc (read_ea): Don't set hdl to NULL if it's already NULL.  Set
	attr with pc.init_reopen_attr before trying to reopen file.
	(write_ea): Ditto.
	* security.cc (get_file_sd): Use pc.init_reopen_attr rather than
	pc.get_object_attr when trying to reopen file.
	(set_file_sd): Ditto.

2014-08-25  Corinna Vinschen  <corinna@@vinschen.de>

	* cygtls.cc (san::leave/x86_64): Implement.
	* cygtls.h (class tls_pathbuf): Move counter variables into a union.
	Add 64 bit element _counters covering both counter variables to
	optimize save and restore operations.
	(class san/x86_64): Only store single 64 bit value.
	(san::san/x86_64): Implement.
	(san::leave/x86_64): Only declare here, as returns_twice function.
	Explain why.
	(class san/i686): Change type of _c_cnt and _w_cnt to uint32_t.
	(__try/x86_64): Move definition of __sebastian after the first memory
	barrier.  Drop __sebastian.setup call.

2014-08-25  Corinna Vinschen  <corinna@@vinschen.de>

	* cygtls.cc (_cygtls::remove): Revert previous patch.
	*  cygtls.h (struct _local_storage): Move pathbufs back here.
	(class san/x86_64): Revert class.  Save and restore pathbufs counters
	only.
	(class san/i686): Revert saving and restoring pathbufs counters.
	(__try/x86_64): Add a san variable and call it's setup method.
	(__except/x86_64): Call san::leave to restore pathbufs counters.
	* gendef (_sigbe): Revert previous change.
	* thread.cc (verifyable_object_state): Remove gcc 4.7 workaround in
	forward declaration as well.
	* tls_pbuf.cc (tls_pbuf): Revert previous change.
	* tls_pbuf.h (class tmp_pathbuf): Accommodate reverting pathbufs to
	locals structure.
	* tlsoffsets.h: Regenerate.
	* tlsoffsets64.h: Regenerate.

2014-08-21  Corinna Vinschen  <corinna@@vinschen.de>

	* Throughout, use __try/__except/__endtry blocks, rather than myfault
	handler.
	* cygtls.cc (_cygtls::remove): Accommodate the fact that pathbufs
	has been moved from _local_storage to _cygtls.
	* cygtls.h (class tls_pathbuf): Add comment to hint to gendef usage
	of counters.  Change type of counters to uint32_t for clarity.
	Remove _cygtls as friend class.
	(struct _local_storage): Move pathbufs from here...
	(struct _cygtls): ...to here, allowing to access it from _sigbe.
	(class san): Only define on 32 bit.  Remove errno, _c_cnt and _w_cnt
	members.
	(san::setup): Drop parameter.  Don't initialize removed members.
	(san::leave): Don't set removed members.
	(class myfault): Only define on 32 bit.
	(myfault::faulted): Only keep implementation not taking any parameter.
	Drop argument in call to sebastian.setup.
	(__try/__leave/__except/__endtry): Implement to support real SEH.  For
	now stick to SJLJ on 32 bit.
	* dcrt0.cc (dll_crt0_0): Drop 64 bit call to
	exception::install_myfault_handler.
	* exception.h (exception_handler): Define with EXCEPTION_DISPOSITION
	as return type.
	(PDISPATCHER_CONTEXT): Define as void * on 32 bit.  Define as pointer
	to _DISPATCHER_CONTEXT on 64 bit.
	(class exception): Define separately for 32 and 64 bit.
	(exception::myfault): Add handler for myfault SEH handling on 64 bit.
	(exception::exception): Fix mangled method name to account for change
	in type of last parameter.
	(exception::install_myfault_handler): Remove.
	* exceptions.cc (exception::myfault_handle): Remove.
	(exception::myfault): New SEH handler for 64 bit.
	* gendef (_sigbe): Set tls_pathbuf counters to 0 explicitely when
	returning to the caller.
	* ntdll.h: Move a comment to a better place.
	(struct _SCOPE_TABLE): Define on 64 bit.
	* thread.cc (verifyable_object_isvalid): Remove gcc 4.7 workaround.
	* tls_pbuf.cc (tls_pbuf): Fix to accommodate new place of pathbufs.
	(tls_pathbuf::destroy): Change type of loop variables to uint32_t.
	* tls_pbuf.h (class tmp_pathbuf): Change type of buffer counters to
	uint32_t.  Accommodate new place of pathbufs.
	* tlsoffsets.h: Regenerate.
	* tlsoffsets64.h: Regenerate.

2014-08-21  Corinna Vinschen  <corinna@@vinschen.de>

	* miscfuncs.cc (__import_address): Cover the first dereference to imp
	under the fault handler.

2014-08-21  Corinna Vinschen  <corinna@@vinschen.de>

	* net.cc (if_freenameindex): Don't catch a SEGV from free to fail
	loudly on double free.

2014-08-21  Corinna Vinschen  <corinna@@vinschen.de>

	* dir.cc (rmdir): Don't skip deleting fh in the ENOTEMPTY case.

2014-08-20  Corinna Vinschen  <corinna@@vinschen.de>

	* tls_pbuf.h (tmp_pathbuf::tmp_pathbuf): Convert to inline method.
	(tmp_pathbuf::~tmp_pathbuf): Ditto.
	* tls_pbuf.cc (tmp_pathbuf::tmp_pathbuf): Remove here.
	(tmp_pathbuf::~tmp_pathbuf): Ditto.

2014-08-19  Corinna Vinschen  <corinna@@vinschen.de>

	* dir.cc (dirfd): Per POSIX, return EINVAL on invalid directory stream.
	(telldir): Per POSIX, return -1 and set errno to EBADF, rather than
	just returning 0, on invalid directory stream.
	* signal.cc (sigwaitinfo): Return -1, not EFAULT, when SEGV was catched.

2014-08-19  Corinna Vinschen  <corinna@@vinschen.de>

	* autoload.cc: Replace WNet[...]A with WNet[...]W imports.
	* dcrt0.cc (initial_env): Drop strlwr calls.  Call strcasestr instead.
	* fhandler_netdrive.cc: Throughout, convert to calling WNet UNICODE
	functions.  Use tmp_pathbuf rather than alloca.  Replace call to
	strlwr with call to RtlDowncaseUnicodeString.

2014-08-19  Corinna Vinschen  <corinna@@vinschen.de>

	* fhandler.h (fhandler_serial::is_tty): Reinstantiate.

2014-08-18  Corinna Vinschen  <corinna@@vinschen.de>

	* miscfuncs.cc (strlwr): Rename from cygwin_strlwr.  Drop __stdcall
	decoration.
	(strupr): Rename from cygwin_strupr.  Drop __stdcall decoration.
	* string.h (strlwr): Remove override macro.  Simply declare.
	(strupr): Ditto.

2014-08-18  Corinna Vinschen  <corinna@@vinschen.de>

	* dtable.cc (dtable::init_std_file_from_handle): Mention that console
	handles are kernel objects since Windows 8.
	* fhandler.h (enum conn_state): Add "listener" state.
	(class fhandler_socket): Drop listener status flag.
	(fhandler_socket::lseek): Return -1 and errno ESPIPE.
	(fhandler_serial::lseek): Ditto.
	(fhandler_serial::is_tty): Remove.
	* fhandler_socket.cc (fhandler_socket::listen): Set connect_state to
	listener.  Add comment.
	(fhandler_socket::accept4): Explicitely check if the socket is listening
	and fail with EINVAL, if not.  Explain why we have to do that.
	(fhandler_socket::getpeereid): Drop now redundant test.

2014-08-15  Corinna Vinschen  <corinna@@vinschen.de>

	* winsup.h (_GNU_SOURCE): Define.  Explain why.

2014-08-14  Corinna Vinschen  <corinna@@vinschen.de>

	* dlmalloc.c: Remove unused file.
	* dlmalloc.h: Ditto.
	* malloc.cc: Update to Doug Lea's malloc version 2.8.6.

2014-08-13  Corinna Vinschen  <corinna@@vinschen.de>

	* include/cygwin/version.h (CYGWIN_VERSION_DLL_MINOR): Bump to 33.
	(CYGWIN_VERSION_API_MINOR): Bump to reflect intermediate 1.7.32 release.

2014-07-21  Corinna Vinschen  <corinna@@vinschen.de>

	* include/cygwin/version.h (CYGWIN_VERSION_DLL_MINOR): Bump to 32.

2014-05-06  Corinna Vinschen  <corinna@@vinschen.de>

	* winlean.h (PIPE_REJECT_REMOTE_CLIENTS): Drop temporary definition
	since Mingw64 catched up.
	(DNLEN): Redefine as 16.  Explain why.

2014-03-06  Corinna Vinschen  <corinna@@vinschen.de>

	* setlsapwd.cc (setlsapwd): Use RtlSecureZeroMemory to delete password
	from memory.

2014-11-05  Corinna Vinschen  <corinna@@vinschen.de>

	* new-features.xml (ov-new1.7.33): Document atexit.

2014-10-28  Corinna Vinschen  <corinna@@vinschen.de>

	* cygwinenv.xml: Change default setting of dosfilewarning.
	* new-features.xml (ov-new1.7.33): Document aforementioned change.

2014-10-27  Corinna Vinschen  <corinna@@vinschen.de>

	* new-features.xml (ov-new1.7.33): Document empty $PATH handling.

2014-10-22  Corinna Vinschen  <corinna@@vinschen.de>

	* posix.xml (std-gnu): Add ffsl, ffsll, quotactl.
	(std-notes): Add restrictions of quotactl.

2014-10-22  Yaakov Selkowitz  <yselkowi@@redhat.com>

	* new-features.xml (ov-new1.7.33): Document stime.
	* posix.xml (std-deprec): Add stime.

2014-10-22  Corinna Vinschen  <corinna@@vinschen.de>

	* new-features.xml (ov-new1.7.33): s/Linux/glibc.

2014-10-22  Corinna Vinschen  <corinna@@vinschen.de>

	* new-features.xml (ov-new1.7.33): Update to current state.

2014-08-13  Corinna Vinschen  <corinna@@vinschen.de>

	* new-features.xml (ov-new1.7.33): Add new section.
	(ov-new1.7.32): Reflect intermediate 1.7.32 release.

2014-10-21  Corinna Vinschen  <corinna@@vinschen.de>

	* cygcheck.cc (CYGLSA64_DLL): Remove unused macro.
	(dump_sysinfo): If COMSPEC isn't set in the MSVCRT environment, set it.
	Explain why.
@
text
@d3 1
a3 1
# 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014 Red Hat, Inc.
d156 25
a180 151
DLL_OFILES:= \
	advapi32.o \
	arc4random.o \
	assert.o \
	autoload.o \
	base64.o \
	bsdlib.o \
	ctype.o \
	cxx.o \
	cygheap.o \
	cygthread.o \
	cygtls.o \
	cygwait.o \
	cygxdr.o \
	dcrt0.o \
	debug.o \
	devices.o \
	dir.o \
	dlfcn.o \
	dll_init.o \
	dtable.o \
	environ.o \
	errno.o \
	exceptions.o \
	exec.o \
	external.o \
	fcntl.o \
	fenv.o \
	fhandler.o \
	fhandler_clipboard.o \
	fhandler_console.o \
	fhandler_dev.o \
	fhandler_disk_file.o \
	fhandler_dsp.o \
	fhandler_fifo.o \
	fhandler_floppy.o \
	fhandler_mailslot.o \
	fhandler_netdrive.o \
	fhandler_nodevice.o \
	fhandler_proc.o \
	fhandler_process.o \
	fhandler_procnet.o \
	fhandler_procsys.o \
	fhandler_procsysvipc.o \
	fhandler_random.o \
	fhandler_raw.o \
	fhandler_registry.o \
	fhandler_serial.o \
	fhandler_socket.o \
	fhandler_tape.o \
	fhandler_termios.o \
	fhandler_tty.o \
	fhandler_virtual.o \
	fhandler_windows.o \
	fhandler_zero.o \
	flock.o \
	fnmatch.o \
	fork.o \
	fts.o \
	ftw.o \
	getopt.o \
	glob.o \
	glob_pattern_p.o \
	globals.o \
	grp.o \
	heap.o \
	hookapi.o \
	inet_addr.o \
	inet_network.o \
	init.o \
	ioctl.o \
	ipc.o \
	kernel32.o \
	libstdcxx_wrapper.o \
	localtime.o \
	lsearch.o \
	malloc_wrapper.o \
	minires-os-if.o \
	minires.o \
	miscfuncs.o \
	mktemp.o \
	mmap.o \
	msg.o \
	mount.o \
	net.o \
	netdb.o \
	nfs.o \
	nftw.o \
	nlsfuncs.o \
	ntea.o \
	passwd.o \
	path.o \
	pinfo.o \
	pipe.o \
	poll.o \
	posix_ipc.o \
	pseudo-reloc.o \
	pthread.o \
	quotactl.o \
	random.o \
	regcomp.o \
	regerror.o \
	regexec.o \
	regfree.o \
	registry.o \
	resource.o \
	rexec.o \
	rcmd.o \
	scandir.o \
	sched.o \
	sec_acl.o \
	sec_auth.o \
	sec_helper.o \
	security.o \
	select.o \
	sem.o \
	setlsapwd.o \
	shared.o \
	shm.o \
	sigfe.o \
	signal.o \
	sigproc.o \
	smallprint.o \
	spawn.o \
	strace.o \
	strfmon.o \
	strfuncs.o \
	strptime.o \
	strsep.o \
	strsig.o \
	sync.o \
	syscalls.o \
	sysconf.o \
	syslog.o \
	termios.o \
	thread.o \
	timer.o \
	times.o \
	tls_pbuf.o \
	tty.o \
	uinfo.o \
	uname.o \
	wait.o \
	wincap.o \
	window.o \
	winf.o \
	wow64.o \
	xsique.o \
	$(EXTRA_OFILES) \
	$(MALLOC_OFILES) \
	$(MT_SAFE_OBJECTS)
a204 53
NEW_FUNCTIONS:=$(addprefix --replace=,\
	atexit= \
	timezone= \
	__xdrrec_getrec= \
	__xdrrec_setnonblock= \
	xdr_array= \
	xdr_bool= \
	xdr_bytes= \
	xdr_char= \
	xdr_double= \
	xdr_enum= \
	xdr_float= \
	xdr_free= \
	xdr_hyper= \
	xdr_int= \
	xdr_int16_t= \
	xdr_int32_t= \
	xdr_int64_t= \
	xdr_int8_t= \
	xdr_long= \
	xdr_longlong_t= \
	xdr_netobj= \
	xdr_opaque= \
	xdr_pointer= \
	xdr_reference= \
	xdr_short= \
	xdr_sizeof= \
	xdr_string= \
	xdr_u_char= \
	xdr_u_hyper= \
	xdr_u_int= \
	xdr_u_int16_t= \
	xdr_u_int32_t= \
	xdr_u_int64_t= \
	xdr_u_int8_t= \
	xdr_u_long= \
	xdr_u_longlong_t= \
	xdr_u_short= \
	xdr_uint16_t= \
	xdr_uint32_t= \
	xdr_uint64_t= \
	xdr_uint8_t= \
	xdr_union= \
	xdr_vector= \
	xdr_void= \
	xdr_wrapstring= \
	xdrmem_create= \
	xdrrec_create= \
	xdrrec_endofrecord= \
	xdrrec_eof= \
	xdrrec_skiprecord= \
	xdrstdio_create= \
)
d206 1
a206 1
NEW_FUNCTIONS+=
d208 1
a208 1
NEW_FUNCTIONS+=$(addprefix --replace=,\
d256 1
@


1.270
log
@	* Makefile.in (VPATH): Drop CONFIG_DIR.
	(EXTRA_DLL_OFILES): Remove.
	(DLL_OFILES): Remove EXTRA_DLL_OFILES.
	(ASFLAGS): Define as -D_WIN64 on x86_64.
	(GMON_OFILES): Add mcountFunc.o.
	($(srcdir)/$(TLSOFFSETS_H)): Use target_cpu rather than CONFIG_DIR.
	* configure.ac (CONFIG_DIR): Remove definition.
	* configure: Regenerate.
	* gcrt0.c: Use latest version from Mingw-w64 project.
	* gmon.c: Ditto.
	* gmon.h: Ditto.
	* mcount.c: Ditto.
	* mcountFunc.S: Ditto, new file.
	* profil.c: Ditto.
	* profil.h: Ditto.
	* config: Remove entire directory.
@
text
@d161 1
a161 1
	fhandler_fifo.o fhandler_floppy.o fhandler_mailslot.o fhandler_mem.o \
a288 1
fhandler_mem_CFLAGS:=-fomit-frame-pointer
@


1.269
log
@	* Makefile.in (DEFS): Unused, remove.
	(COMPILE.cc): Move -mno-use-libstdc-wrappers flag from here...
	($(TEST_DLL_NAME)): ...to here since it's a link time flag.
@
text
@d32 1
a32 1
VPATH+=$(CONFIG_DIR) $(srcdir)/regex $(srcdir)/lib $(srcdir)/libc
a147 2
EXTRA_DLL_OFILES:=${addsuffix .o,${basename ${notdir ${wildcard $(CONFIG_DIR)/*.c}}}}

d180 1
a180 1
	$(EXTRA_DLL_OFILES) $(EXTRA_OFILES) $(MALLOC_OFILES) $(MT_SAFE_OBJECTS)
d198 6
a203 1
GMON_OFILES:=gmon.o mcount.o profil.o
d526 1
a526 1
	$^ $@@ @@CONFIG_DIR@@ $(COMPILE.cc) -c
@


1.268
log
@	* Makefile.in (DLL_OFILES): Add arc4random.o.
	* common.din: Export arc4random, arc4random_addrandom, arc4random_buf,
	arc4random_stir and arc4random_uniform.
	* mktemp.cc (arc4random): Remove static replacement function.
	* posix.sgml (std-bsd): Add arc4random functions.
	* include/cygwin/stdlib.h: Declare arc4random functions.
	* include/cygwin/version.h (CYGWIN_VERSION_API_MINOR): Bump.
	* libc/arc4random.cc: New file implementing arc4random functions taken
	from FreeBSD.
@
text
@a76 1
DEFS:=@@DEFS@@
d82 1
a82 1
COMPILE.cc+=${COMMON_CFLAGS} -mno-use-libstdc-wrappers
d431 3
a433 1
	$(CXX) $(CXXFLAGS) -L${WINDOWS_LIBDIR} -Wl,--gc-sections $(nostdlib) -Wl,-T$(firstword $^) -static \
@


1.267
log
@	* libc/base64.c: New file.
	* Makefile.in (DLL_OFILES): Add base64.o.
	* common.din: Export __b64_ntop and __b64_pton.
	* posix.sgml (std-bsd): Add __b64_ntop and __b64_pton.
	* include/cygwin/version.h (CYGWIN_VERSION_API_MINOR): Bump.
@
text
@d159 2
a160 2
DLL_OFILES:=advapi32.o assert.o autoload.o base64.o bsdlib.o ctype.o cxx.o \
	cygheap.o cygthread.o cygtls.o cygwait.o cygxdr.o dcrt0.o debug.o \
@


1.266
log
@	* Makefile.in (devices_CFLAGS): Drop -Os.
@
text
@d159 3
a161 3
DLL_OFILES:=advapi32.o assert.o autoload.o bsdlib.o ctype.o cxx.o cygheap.o \
	cygthread.o cygtls.o cygwait.o cygxdr.o dcrt0.o debug.o devices.o \
	dir.o dlfcn.o dll_init.o dtable.o environ.o errno.o exceptions.o \
@


1.265
log
@	* Makefile.in (localtime_CFLAGS): Define as -fwrapv since localtime
	code requires int overflows to be fully defined.
	* localtime.cc: Align a bit more to upstream code.
@
text
@d274 1
a274 1
devices_CFLAGS:=-fomit-frame-pointer -Os
@


1.264
log
@* i686.din: New file.
* x86_64.din: New file.
* common.din: New file.
* cygwin.din: Delete.
* cygwin64.din: Delete.
* gendef: Rework to take options rather than using positional parameters.
Accept multiple files as input.
@
text
@d306 1
@


1.263
log
@	* Merge in cygwin-64bit-branch.
@
text
@d121 1
a121 1
DIN_FILE=@@DIN_FILE@@
a462 3
$(API_VER): $(srcdir)/$(DIN_FILE)
	@@echo Error: Version info is older than DLL API!

d514 1
a514 1
Makefile: $(DIN_FILE) ${srcdir}/Makefile.in
d517 2
a518 2
$(DEF_FILE): gendef $(DIN_FILE) $(srcdir)/$(TLSOFFSETS_H)
	$^ $(target_cpu) $@@ sigfe.s
@


1.262
log
@Update copyrights
@
text
@d34 1
d80 3
d117 2
a118 2
DLL_NAME:=cygwin1.dll
TEST_DLL_NAME:=cygwin0.dll
d121 1
d123 1
d130 1
a130 1
toolopts:=--ar=${AR} --as=${AS} --nm=${NM} --objcopy=${OBJCOPY} 
d136 1
d153 1
a153 1
MALLOC_OFILES:=@@MALLOC_OFILES@@
d203 3
d258 1
d404 1
a404 1
	    rm -f $(tooldir)/man/man2/`basename $$i` ; \
d407 1
a407 1
	    rm -f $(tooldir)/man/man3/`basename $$i` ; \
d410 1
a410 1
	    rm -f $(tooldir)/man/man5/`basename $$i` ; \
d413 1
a413 1
	    rm -f $(tooldir)/man/man7/`basename $$i` ; \
d417 1
a417 1
	-rm -f *.o *.dll *.dbg *.a *.exp junk *.base version.cc winver_stamp *.exe *.d *stamp* *_magic.h sigfe.s cygwin.def globals.h $(srcdir)/tlsoffsets.h $(srcdir)/devices.cc
d425 3
d440 2
a441 2
$(LIB_NAME): $(LIBCOS) | $(TEST_DLL_NAME) 
	${srcdir}/mkimport ${toolopts} ${NEW_FUNCTIONS} $@@ cygdll.a $^
d463 1
a463 1
$(API_VER): $(srcdir)/cygwin.din
d517 1
a517 1
Makefile: cygwin.din ${srcdir}/Makefile.in
d520 2
a521 2
$(DEF_FILE): gendef cygwin.din $(srcdir)/tlsoffsets.h
	$^ $@@ sigfe.s
d523 2
a524 2
$(srcdir)/tlsoffsets.h: gentls_offsets cygtls.h
	$^ $@@ $(COMPILE.cc) -c
@


1.261
log
@Throughout, update copyrights to reflect dates which correspond to main-branch
checkins.  Regularize copyright format.
@
text
@d3 1
a3 1
# 2006, 2007, 2008, 2009, 2010, 2011, 2012 Red Hat, Inc.
@


1.260
log
@cygwin/ChangeLog:
2012-11-23  Christopher Faylor  <me.cygwin2012@@cgf.cx>

	* Makefile.in: Use explicit path to mkdir.

lsaauth/ChangeLog:
2012-11-23  Christopher Faylor  <me.cygwin2012@@cgf.cx>

	* Makefile.in: Use /bin/mkdir to make directories.

testsuite/ChangeLog:
2012-11-23  Christopher Faylor  <me.cygwin2012@@cgf.cx>

	* Makefile.in: Remove old Makefile.common'isms.  Don't rely on
	in-build tools.
@
text
@d2 2
a3 2
# Copyright 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004,
# 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012 Red Hat, Inc.
@


1.259
log
@ChangeLog:
2012-11-12  Christopher Faylor  <me.cygwin2012@@cgf.cx>

	* Makefile.common: Revamp for new configury.  Add default compilation
	targets, include .E processing.  Add magic for allowing "CFLAGS" to
	control optimization options in "CXXFLAGS".
	* configure.cygwin: New include for Cygwin configure.in's.
	* acinclude.m4: Delete old definitions.  Implement AC_WINDOWS_HEADERS,
	AC_WINDOWS_LIBS, AC_CYGWIN_INCLUDES, target_builddir, winsup_srcdir.
	* aclocal.m4: Regenerate.
	* autogen.sh: New file.
	* ccwrap: New script.
	* c++wrap: New script.
	* config.guess: New script.
	* config.sub: New script.
	* configure: Regenerate.
	* configure.in: Eliminate LIB_AC_PROG_* calls in favor of standard.
	Delete ancient target test.
	* install-sh: New script.

cygserver/ChangeLog:
2012-11-12  Christopher Faylor  <me.cygwin2012@@cgf.cx>

	* Makefile.in: Revamp for new configury.
	* configure.in: Revamp for new configury.
	* aclocal.m4: Regenerate.
	* configure: Ditto.
	* autogen.sh: New script.

cygwin/ChangeLog:
2012-11-22  Christopher Faylor  <me.cygwin2012@@cgf.cx>

	* select.cc (select): Don't return -1 when we've timed out after
	looping.

2012-11-22  Christopher Faylor  <me.cygwin2012@@cgf.cx>

	* Makefile.in: Revamp for new configury.
	(datarootdir): Add variable setting.
	(winver_stamp): Accommodate changes to mkvers.sh setting.
	(libc.a): Fix race when libm.a might not have been built yet.
	* configure.in: Revamp for new configury.
	* aclocal.m4: Regenerate.
	* configure: Ditto.
	* autogen.sh: New script.
	* mkvers.sh: Find include directives via CFLAGS and friends rather than
	assuming that w32api lives nearby.

utils/ChangeLog:
2012-11-12  Christopher Faylor  <me.cygwin2012@@cgf.cx>

	* aclocal.m4: Regenerate.
	* configure: Ditto.
	* autogen.sh: New script.
	* configure.in: Revamp for new configury.
	* Makefile.in: Revamp for new configury.  Rename ALL_* to just *.
	Always use "VERBOSE" setting.
	(MINGW_CXX): Don't include CFLAGS in definition.
	(all): Define target first, before everything else so that it is the
	default.
	(ps.exe): Don't add useless -lcygwin.
	(ldh.exe): For consistency, add to existing MINGW_LDFLAGS rather than
	redefining them.
	(cygcheck.exe): Always include -lz for MINGW_LDFLAGS.  Don't try to
	figure out where to find it.
	(dumper.exe): Simplify check.  Assume libraries are installed rather
	than trying to retrieve from source tree.
	(install): Just use /bin/mkdir to create directories.
	(Makefile): Regenerate when standard dependencies change.
	* dump_setup.cc: Always include zlib.h.  Remove accommodations for it
	possibly not existing.
	* parse_pe.cc: Add define which allows building with installed
	binutils package.
	* dumper.cc: Ditto.
@
text
@d441 1
a441 1
	mkdir -p ${@@D}
@


1.258
log
@	* Makefile.in (DLL_IMPORTS): Use system import libraries for
	kernel32 and ntdll instead of from in-tree w32api.
	(cygwin0.dll): Remove rule dependency on DLL_IMPORTS, as they
	are no longer built in-tree.
@
text
@d3 1
a3 1
# 2005, 2006, 2007, 2008, 2009, 2010, 2011 Red Hat, Inc.
d10 1
d13 1
a13 6
#
# Include common definitions for winsup directory
# The following assignments are "inputs" to Makefile.common
#
CC:=@@CC@@
CC_FOR_TARGET:=$(CC)
d15 10
a24 1
CONFIG_DIR:=$(srcdir)/config/@@CONFIG_DIR@@
d27 4
a30 2
SHELL:=@@SHELL@@
objdir:=.
d32 1
a32 1
VPATH:=$(srcdir):$(CONFIG_DIR):$(srcdir)/regex:$(srcdir)/lib:$(srcdir)/libc
d45 1
d63 9
d77 4
a80 6
CCEXTRA:=
CFLAGS?=@@CFLAGS@@
override CFLAGS+=-MMD ${$(*F)_CFLAGS} -Werror -fmerge-constants -ftracer \
  -mno-use-libstdc-wrappers $(CCEXTRA)
CXX=@@CXX@@
override CXXFLAGS=@@CXXFLAGS@@
d187 7
a251 1
LIBSERVER:=@@LIBSERVER@@
a322 3
.SUFFIXES:
.SUFFIXES: .c .cc .def .a .o .d .s

d407 1
a407 1
	-@@$(MAKE) -C $(bupdir)/cygserver libclean
d417 1
a417 1
	$(CXX) $(CXXFLAGS) -Wl,--gc-sections $(nostdlib) -Wl,-T$(firstword $^) -static \
d437 6
a442 2
$(LIBSERVER): $(bupdir)/cygserver/Makefile
	$(MAKE) -C $(bupdir)/cygserver libcygserver.a
d461 1
a461 1
	/bin/sh $(word 1,$^) $@@ "${COMPILE_CXX} -E -x c++" $(word 2,$^) SHARED_MAGIC 'class shared_info' USER_MAGIC 'class user_info'
d464 1
a464 1
	/bin/sh $(word 1,$^) $@@ "${COMPILE_CXX} -E -x c++" $(word 2,$^) CHILD_INFO_MAGIC 'class child_info'
d473 1
a473 1
${CURDIR}/libc.a: ${LIB_NAME} ./libm.a libpthread.a libutil.a
d499 2
a500 2
	$(SHELL) ${word 1,$^} ${word 2,$^} ${word 3,$^} $(WINDRES) && \
	$(COMPILE_CXX) -c -o version.o version.cc && \
d503 2
a504 1
Makefile: cygwin.din
d510 1
a510 1
	$^ $@@ $(COMPILE_CXX) -c
a519 2
winsup.h: config.h

@


1.257
log
@	* Makefile.in: Semi-revert patch from 2012-07-01, assuming the previous
	patch to etc::dir_changed fixes the underlying issue.
@
text
@d133 1
a133 1
DLL_IMPORTS:=$(w32api_lib)/libkernel32.a $(w32api_lib)/libntdll.a
d398 1
a398 1
$(TEST_DLL_NAME): $(LDSCRIPT) dllfixdbg $(DLL_OFILES) $(DLL_IMPORTS) $(LIBSERVER) $(LIBC) $(LIBM) $(API_VER) Makefile winver_stamp
@


1.257.2.1
log
@	* cygwin.sc: Add default w32api search dirs.
	* Makefile.in (DLL_IMPORTS); Just use -l syntax.
	(TEST_DLL_NAME): Drop DLL_IMPORTS dependency.
@
text
@d133 1
a133 1
DLL_IMPORTS:=-lkernel32 -lntdll
d398 1
a398 1
$(TEST_DLL_NAME): $(LDSCRIPT) dllfixdbg $(DLL_OFILES) $(LIBSERVER) $(LIBC) $(LIBM) $(API_VER) Makefile winver_stamp
@


1.257.2.2
log
@	* Makefile.in (TEST_DLL_NAME): Use -nostdlib flag unconditionally.
@
text
@d399 1
a399 1
	$(CXX) $(CXXFLAGS) -Wl,--gc-sections -nostdlib -Wl,-T$(firstword $^) -static \
@


1.257.2.3
log
@Pull in changes from HEAD
@
text
@d133 1
a133 1
DLL_IMPORTS:=${shell $(CC) -print-file-name=w32api/libkernel32.a} ${shell $(CC) -print-file-name=w32api/libntdll.a}
d399 1
a399 1
	$(CXX) $(CXXFLAGS) -Wl,--gc-sections $(nostdlib) -Wl,-T$(firstword $^) -static \
@


1.257.2.4
log
@Pull in changes from HEAD
@
text
@d3 1
a3 1
# 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012 Red Hat, Inc.
a9 1
# configure_input: @@configure_input@@
d12 6
a17 1

d19 1
a19 10
target_builddir:=@@target_builddir@@
winsup_srcdir:=@@winsup_srcdir@@
configure_args=@@configure_args@@

export CC:=@@CC@@
export CXX:=@@CXX@@

CFLAGS?=@@CFLAGS@@
CXXFLAGS?=@@CXXFLAGS@@

d22 2
a23 4
# environment variables used by ccwrap
export CCWRAP_HEADERS:=. ${srcdir}
export CCWRAP_SYSTEM_HEADERS:=@@cygwin_headers@@ @@newlib_headers@@
export CCWRAP_DIRAFTER_HEADERS:=@@windows_headers@@
d25 1
a25 1
VPATH+=$(CONFIG_DIR) $(srcdir)/regex $(srcdir)/lib $(srcdir)/libc
a37 1
datarootdir:=@@datarootdir@@
a54 9
WINDOWS_LIBDIR:=@@windows_libdir@@

cygserver_blddir:=${target_builddir}/winsup/cygserver
LIBSERVER:=${cygserver_blddir}/libcygserver.a

LIBC:=$(newlib_build)/libc/libc.a
LIBM:=$(newlib_build)/libm/libm.a
CRT0:=$(cygwin_build)/crt0.o

d60 6
a65 4
CCEXTRA=
COMMON_CFLAGS=-MMD ${$(*F)_CFLAGS} -Werror -fmerge-constants -ftracer $(CCEXTRA)
COMPILE.cc+=${COMMON_CFLAGS} -mno-use-libstdc-wrappers
COMPILE.c+=${COMMON_CFLAGS}
a171 7
ifdef PREPROCESS
override DLL_OFILES:=$(patsubst %.o,%_E,${DLL_OFILES})
override EXCLUDE_STATIC_OFILES:=$(patsubst %.o,%_E,${EXCLUDE_STATIC_OFILES})
override EXTRA_OFILES=$(patsubst %.o,%_E,${DLL_OFILES}))
override MALLOC_OFILES:=$(patsubst %.o,%.E,${MALLOC_OFILES})
endif #PREPROCESS

d230 1
d302 3
d389 1
a389 1
	-@@$(MAKE) -C ${cygserver_blddir} libclean
d399 1
a399 1
	$(CXX) $(CXXFLAGS) -L${WINDOWS_LIBDIR} -Wl,--gc-sections $(nostdlib) -Wl,-T$(firstword $^) -static \
d419 2
a420 6
$(LIBSERVER): ${cygserver_blddir}/Makefile
	$(MAKE) -C ${cygserver_blddir} libcygserver.a

${cygserver_blddir}/Makefile:
	/bin/mkdir -p ${@@D}
	cd ${@@D} && exec /bin/sh $(dir ${srcdir})/cygserver/configure ${configure_args}
d439 1
a439 1
	/bin/sh $(word 1,$^) $@@ "${COMPILE.cc} -E -x c++" $(word 2,$^) SHARED_MAGIC 'class shared_info' USER_MAGIC 'class user_info'
d442 1
a442 1
	/bin/sh $(word 1,$^) $@@ "${COMPILE.cc} -E -x c++" $(word 2,$^) CHILD_INFO_MAGIC 'class child_info'
d451 1
a451 1
${CURDIR}/libc.a: ${LIB_NAME} ${CURDIR}/libm.a libpthread.a libutil.a
d477 2
a478 2
	/bin/sh ${word 1,$^} ${word 2,$^} ${word 3,$^} $(WINDRES) ${CFLAGS} $(addprefix -I,${CCWRAP_SYSTEM_HEADERS} ${CCWRAP_DIRAFTER_HEADERS}) S&& \
	$(COMPILE.cc) -c -o version.o version.cc && \
d481 1
a481 2
Makefile: cygwin.din ${srcdir}/Makefile.in
	/bin/sh ./config.status
d487 1
a487 1
	$^ $@@ $(COMPILE.cc) -c
d497 2
@


1.257.2.5
log
@	* Makefile.in: Add rule to build cygwin.sc dynamically using the
	target compiler.
	* cygwin.sc.in: Rename from cygwin.sc.  Make OUTPUT_FORMAT and
	SEARCH_DIR dependent on target CPU.  Add extra alignment and .xdata
	section on x86_64.  Keep up with latest dwarf debug section changes.
@
text
@a413 3
# Rule to build LDSCRIPT
$(LDSCRIPT): $(LDSCRIPT).in
	$(CC) -E - -P < $^ -o $@@
@


1.257.2.6
log
@	* Makefile.in (DLL_NAME): Let configure fill in.
	(DIN_FILE): Ditto.  Change all occurence of cygwin.din to $(DIN_FILE).
	* configure.ac (DLL_NAME): Set according to target.
	(DIN_FILE): Ditto.
	* configure: Regenerate.
	* cygwin64.din: New file.
@
text
@d113 1
a113 1
DLL_NAME:=@@DLL_NAME@@
a116 1
DIN_FILE=@@DIN_FILE@@
d452 1
a452 1
$(API_VER): $(srcdir)/$(DIN_FILE)
d506 1
a506 1
Makefile: $(DIN_FILE) ${srcdir}/Makefile.in
d509 1
a509 1
$(DEF_FILE): gendef $(DIN_FILE) $(srcdir)/tlsoffsets.h
@


1.257.2.7
log
@	* Makefile.in (TLSOFFSETS_H): Let configure fill in.  Change all
	occurence of tlsoffsets.h to $(TLSOFFSETS_H).
	$(srcdir)/$(TLSOFFSETS_H): Add @@CONFIG_DIR@@ as parameter to
	gentls_offsets so the script knows the target CPU.
	* configure.ac (TLSOFFSETS_H): Set according to target.
	* configure: Regenerate.
	* gentls_offsets: Handle x86_64 as target.  Add FIXME comment.  Unlink
	all temporary files.
	* tlsoffsets64.h: New file.
@
text
@a118 1
TLSOFFSETS_H:=@@TLSOFFSETS_H@@
d407 1
a407 1
	-rm -f *.o *.dll *.dbg *.a *.exp junk *.base version.cc winver_stamp *.exe *.d *stamp* *_magic.h sigfe.s cygwin.def globals.h $(srcdir)/$(TLSOFFSETS_H) $(srcdir)/devices.cc
d510 1
a510 1
$(DEF_FILE): gendef $(DIN_FILE) $(srcdir)/$(TLSOFFSETS_H)
d513 2
a514 2
$(srcdir)/$(TLSOFFSETS_H): gentls_offsets cygtls.h
	$^ $@@ @@CONFIG_DIR@@ $(COMPILE.cc) -c
@


1.257.2.8
log
@Pull in changes from HEAD
@
text
@d2 2
a3 2
# Copyright 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005,
# 2006, 2007, 2008, 2009, 2010, 2011, 2012 Red Hat, Inc.
@


1.257.2.9
log
@	* Makefile.in (speclib): Exclude main symbol.
	(NEW_FUNCTIONS): Set to empty for x86_64.
	($(DEF_FILE)): Call gendef with target_alias as additional parameter.
	* configure.ac (DLL_ENTRY): Drop leading underscore for x86_64.
	* configure: Regenerate.
	* cygwin.sc.in: Drop _SYM usage for __data_start__, __data_end__,
	__bss_start__, and __bss_end__.
	* cygwin64.din: Remove all fast-call math function entry points.
	(_alloca): Define as __alloca.
	(_dll_crt0): Drop 32 bit stdcall specifier.
	(dll_entry): Ditto.
	(dll_noncygwin_dllcrt0): Remove.
	(getpwduid): Remove.
	(lacl): Remove.
	* dcrt0.cc (dll_data_start): Define for x86_64.
	(dll_data_end): Ditto.
	(dll_bss_start): Ditto.
	(dll_bss_end): Ditto.
	* gendef: Handle new target argument.  Handle 64 bit target.
	Add preliminiary empty function definitions for 64 bit to allow linking.
	* winsup.h: Define linker data and bss section symbols with
	additional underscore for x86_64.
	* lib/_cygwin_crt0_common.cc (__image_base__): Define for 64 bit and
	map to _image_base__ via macro.
	(_cygwin_crt0_common): Fix setting data and bss section borders on
	x86_64.
@
text
@a131 1
	--exclude='^main$$' \
a197 3
ifeq ($(target_alias),x86_64-pc-cygwin)
NEW_FUNCTIONS:=
else
a249 1
endif
d512 1
a512 1
	$^ $(target_alias) $@@ sigfe.s
@


1.257.2.10
log
@	* Makefile.in (TEST_DLL_NAME): Fix to use correct name per target.
	* gendef (fefunc): Resurrect accidentally dropped 32 bit code.
@
text
@d114 1
a114 1
TEST_DLL_NAME:=${patsubst %1.dll,%0.dll,@@DLL_NAME@@}
@


1.257.2.11
log
@	* cygtls.h: Cleanup x86_64 related comment.
	(_tlsbase): Change return type to PVOID.
	(_tlstop): Ditto.
	(_my_tls): Accommodate above change.
	* dcrt0.cc (child_info_fork::alloc_stack): Revert previous patch, but
	keep cast to PVOID.
	(dll_crt0_1): Ditto.
	* exception.h: Define _exception_list as _EXCEPTION_REGISTRATION_RECORD
	on x86_64.
	(_except_list): Define in terms of NtCurrentTeb() on x86_64.
	* miscfuncs.cc (__import_address): Handle 32 bit absolute addressing
	in IAT on x86_64.
	* include/cygwin/config.h (___getreent): New inline function on
	x86_64.  Define __getreent in terms of ___getreent on x86_64.  Fix
	comment accordingly.
@
text
@d3 1
a3 1
# 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013 Red Hat, Inc.
@


1.257.2.12
log
@	* Makefile.in ($(LIB_NAME)): Add --target option to mkimport call.
	* gendef: Drop -w option.  Make callto sigfe function pc-relative
	on x86_64.
	* miscfuncs.cc (__import_address): Drop comment and misguide attempt
	to handle absolute addressing in x86_64 mode.
	* mkimport: Add --target option.  Handle x86_64 target, especially
	create pc-relative jmp calls.
@
text
@d437 1
a437 1
	${srcdir}/mkimport --target=$(target_alias) ${toolopts} ${NEW_FUNCTIONS} $@@ cygdll.a $^
@


1.257.2.13
log
@	* Makefile.in (toollibdir): Define build and target dependent.
	(install-libs): Use $(toollibdir) rather than $(tooldir)/lib.
	(uninstall-libs): Ditto.
	(uninstall-man): Use $(DESTDIR)$(mandir) as in install-man, rather
	than $(tooldir)/man.
@
text
@a51 5
ifeq ($(target_alias),x86_64-pc-cygwin)
toollibdir:=$(tooldir)/lib64
else
toollibdir:=$(tooldir)/lib
endif
a53 1
toollibdir:=$(tooldir)/lib
d350 1
a350 1
	    $(INSTALL_DATA) $$i $(DESTDIR)$(toollibdir)/`basename $$i` ; \
d352 1
a352 1
	cd $(DESTDIR)$(toollibdir) && ln -sf libcygwin.a libg.a
d386 1
a386 1
	    rm -f $(toollibdir)/$$i ; \
d400 1
a400 1
	    rm -f $(DESTDIR)$(mandir)/man2/`basename $$i` ; \
d403 1
a403 1
	    rm -f $(DESTDIR)$(mandir)/man3/`basename $$i` ; \
d406 1
a406 1
	    rm -f $(DESTDIR)$(mandir)/man5/`basename $$i` ; \
d409 1
a409 1
	    rm -f $(DESTDIR)$(mandir)/man7/`basename $$i` ; \
@


1.257.2.14
log
@	* Makefile.in (toollibdir): Remove.  Revert to using tooldir instead.
	* configure.ac (DLL_NAME): Set to cygwin1.dll in x86_64 case, too.
	* configure: Regenerate.
	* cygwin.sc.in (SEARCH_DIR): Align to 32 bit search dir, use lib, rather
	than lib64.
	* cygwin64.din (LIBRARY): Set name to cygwin1.dll.
	* fhandler_process.cc (struct heap_info): Drop win_heap_info class
	and revert code to former heap_info implementation.
	(format_process_maps): Define heaps back to heap_info
	* hookapi.cc (hook_or_detect_cygwin): Add shortcut so the code does
	not search executable for being a Cygwin executable, if the architecture
	is not matching the current Cygwin.  Always use for "cygwin1.dll".
	* pinfo.cc (commune_process): Drop PICOM_HEAP_INFO code.
	(_pinfo::commune_request): Ditto.
	(_pinfo::win_heap_info): Remove.
	* pinfo.h (enum picom): Remove PICOM_HEAP_INFO.
@
text
@d52 5
d59 1
d356 1
a356 1
	    $(INSTALL_DATA) $$i $(DESTDIR)$(tooldir)/lib/`basename $$i` ; \
d358 1
a358 1
	cd $(DESTDIR)$(tooldir)/lib && ln -sf libcygwin.a libg.a
d392 1
a392 1
	    rm -f $(tooldir)/lib/$$i ; \
@


1.257.2.15
log
@* Makefile.in (libcygwin.a): Move --target flag from here...
(toolopts): to here, to be used by both mkimport and speclib.
* speclib: Omit leading underscore in symbol names on x86_64.
@
text
@d126 1
a126 1
toolopts:=--target=${target_alias} --ar=${AR} --as=${AS} --nm=${NM} --objcopy=${OBJCOPY}
d437 1
a437 1
	${srcdir}/mkimport ${toolopts} ${NEW_FUNCTIONS} $@@ cygdll.a $^
@


1.257.2.16
log
@	* Makefile.in (target_cpu): Define.  Check for target_cpu rather than
	target_alias for conditional compilation issues.
	(toolopts): Change --target into --cpu option and use $target_cpu as
	argument.
	($(DEF_FILE)): Call gendef with $(target_cpu) as argument, rather than
	with $(target_alias).
	* gendef: Accommodate change from --target to --cpu option.
	* mkimport: Ditto.
	* speclib: Ditto.
@
text
@a33 1
target_cpu:=@@target_cpu@@
d126 1
a126 1
toolopts:=--cpu=${target_cpu} --ar=${AR} --as=${AS} --nm=${NM} --objcopy=${OBJCOPY}
d199 1
a199 1
ifeq ($(target_cpu),x86_64)
d517 1
a517 1
	$^ $(target_cpu) $@@ sigfe.s
@


1.257.2.17
log
@	For x86_64 target:
	* Makefile.in (COMMON_CFLAGS): Add -mcmodel=small to create smaller
	footprint.
	* cygwin64.din (__cygwin_environ): Drop export.  Only export environ
	as alias to __cygwin_environ.
	* dcrt0.cc (dll_crt0_1): Call main with __cygwin_environ as parameter.
	(_dll_crt0): Don't set main_environ.
	(cygwin_dll_init): Don't create local variable envp and don't set
	user_data->envptr.
	* dll_init.cc (dll_list::alloc): Don't assert.
	* dll_init.h (per_module::operator =): Don't set envptr.
	* environ.cc (cur_environ): Disable.
	* environ.h (main_environ): Don't define.
	(cur_environ): Change to macro.
	* globals.cc (main_environ): Don't initialize.
	(struct per_process): Drop envptr.
	* perprocess.h (SIZEOF_PER_PROCESS): Set to 41*8 to accommodate size
	change of struct per_process.
	* include/sys/cygwin.h (struct per_process): Drop envptr.
	* lib/_cygwin_crt0_common.cc (environ): Drop declaration.
	(_cygwin_crt0_common): Don't set u->envptr.
@
text
@a79 3
ifeq ($(target_cpu),x86_64)
COMMON_CFLAGS+=-mcmodel=small
endif
@


1.257.2.18
log
@	* Makefile.in ($(LIB_NAME)): Make sure to rebuild when cygwin.def file
	has been changed.
	* cygwin64.din: Remove more underscored symbols.
	(getdelim): Add missing define in favor of unneeded __getline.
	(getline): Ditto.
@
text
@d440 2
a441 2
$(LIB_NAME): $(DEF_FILE) $(LIBCOS) | $(TEST_DLL_NAME)
	${srcdir}/mkimport ${toolopts} ${NEW_FUNCTIONS} $@@ cygdll.a $(wordlist 2,99,$^)
@


1.257.2.19
log
@	* Reinstantiate ptmalloc3.
	* configure.ac (MALLOC_OFILES): Drop here.
	* configure: Regenerate.
	* Makefile.in (MALLOC_OFILES): Set to fixed value here.
	* cygmalloc.h (HAVE_MORECORE): Define.
	* malloc.cc (init_user_mstate): Don't disable MORECORE if building
	with ONLY_MSPACES.
@
text
@d153 1
a153 1
MALLOC_OFILES:=malloc.o ptmalloc3.o
@


1.257.2.20
log
@	* Remove ptmalloc3 once and for all.
@
text
@d153 1
a153 1
MALLOC_OFILES:=malloc.o
@


1.256
log
@	* Makefile.in, configure.in, mkvers.sh: Revert accidental checkin from
	2012-07-06.
@
text
@d278 2
a279 9
#
# FIXME: Setting either of the below to -fomit-frame-pointer causes an
# optimized version of Cygwin to sometimes "jump to zero" in long-running
# shell processes when compiled with gcc 4.5.3.
#
# passwd_CFLAGS:=-fomit-frame-pointer
# path_CFLAGS=-fomit-frame-pointer
#
path_CFLAGS=-fgcse-lm -fgcse-sm -fgcse-las -fgcse-after-reload
@


1.255
log
@* Makefile.in: Change mingw_lib (temporarily?) back to w32api_lib.
@
text
@d20 1
a31 2
include ${srcdir}/../Makefile.common

@


1.254
log
@	* winlean.h (__STRALIGN_H_): Drop definition.
@
text
@d134 1
a134 1
DLL_IMPORTS:=$(mingw_lib)/libkernel32.a $(mingw_lib)/libntdll.a
@


1.253
log
@* Makefile.in: Add some more optimization flags for cygwait, malloc and path.  Explain
why -fomit-frame-pointer doesn't work right for passwd.o and path.o.  Add
-static to link command line for cygwin0.dll.
* fhandler_disk_file.cc (fhandler_disk_file::facl): Reorganize slightly to
silence compiler warning when compiling with -fstack-check.
* net.cc (inet_ntop6): Initialize structure members to silence compiler warning
when compiling with -fstack-check.
* pseudo-reloc.cc (_pei386_runtime_relocator): Make this a C function.  Detect
NULL u.
* winsup.h (_pei386_runtime_relocator): Declare this as extern "C".
* lib/_cygwin_crt0_common.cc (_pei386_runtime_relocator): Call with NULL
argument.
* signal.cc (sigaction_worker): Eliminate last argument.  Let callers report
their own strace info.  Regparmize.
(sigaction): Reflect sigaction_worker changes.
(siginterrupt): Ditto.
* exceptions.cc: Update copyright.
@
text
@a19 1
include ${srcdir}/../Makefile.common
d31 2
d134 1
a134 1
DLL_IMPORTS:=$(w32api_lib)/libkernel32.a $(w32api_lib)/libntdll.a
@


1.252
log
@Add '#include "cygwait.h"' throughout, where appropriate.
* DevNotes: Add entry cgf-000012.
* Makefile.in (DLL_OFILES): Add cygwait.o.
* sigproc.h: Remove cygwait definitions.
* cygwait.h: New file.  Define/declare Cygwin waitfor functions.
* cygwait.cc: Ditto.
* exceptions.cc: Include cygwait.h.
(handle_sigsuspend): Accommodate change in cancelable_wait arguments.
(sigpacket::process): Display thread tls in debugging output.
* fhandler.cc (fhandler_base_overlapped::wait_overlapped): Use symbolic names
for signal and cancel return.
* fhandler_console.cc (fhandler_console::read): Ditto.
(fhandler_dev_dsp::Audio_out::waitforspace): Ditto.
fhandler_dev_dsp::Audio_in::waitfordata): Ditto.
* fhandler_fifo.cc (fhandler_fifo::wait): Ditto.
* fhandler_serial.cc (fhandler_serial::raw_read): Ditto.
* fhandler_tty.cc (fhandler_pty_slave::read): Ditto.
* select.cc (cygwin_select): Ditto.
* wait.cc (wait4): Ditto.
* thread.cc (cancelable_wait): Move definition to cygwait.h.
(pthread_cond::wait): Accommodate change in cancelable_wait arguments.
(pthread_mutex::lock): Ditto.
(pthread_spinlock::lock): Ditto.
(pthread::join): Ditto.
(pthread::thread_init_wrapper): Display tls in debugging output.
(semaphore::_timedwait): Ditto.
* thread.h (cw_sig_wait): Move to cygwait.h.
(cw_cancel_action): Delete.
(cancelable_wait): Move declaration to cygwait.h.
@
text
@d240 1
d274 1
a274 1
malloc_CFLAGS:=-fomit-frame-pointer
d278 9
a286 1
passwd_CFLAGS:=-fomit-frame-pointer
d406 1
a406 1
	$(CXX) $(CXXFLAGS) -Wl,--gc-sections $(nostdlib) -Wl,-T$(firstword $^) \
@


1.251
log
@	* Makefile.in (DLL_OFILES): Add fhandler_dev.o.
	* devices.h (DEV_DEV_MAJOR): Define.
	(FH_DEV): Redefine in terms of DEV_DEV_MAJOR.
	(ext_dev_storage): Declare.
	(dev_storage_size): Declare.
	(dev_dev_storage): Declare.
	(dev_dev): Define.
	(isdev_dev): Define.
	* devices.in (dev_dev_storage): Activate.
	(ext_dev_storage): Define as externally available pointer to
	dev_storage.
	(dev_storage_size): Define to contain number of dev_storage elements.
	* dir.cc (rmdir): Handle /dev as always not empty.
	* dtable.cc (fh_alloc): Handle DEV_DEV_MAJOR.
	* fhandler.h (fhandler_dev): New class, derived from fhandler_disk_file.
	(fhandler_union): Add fhandler_dev member.
	* fhandler_disk_file.cc (class __DIR_mounts): Handle /dev directory
	to make sure it always exists.
	* fhandler_dev.cc: New file implementing /dev.
	* globals.cc (ro_u_dev): New R/O unicode string.
	* path.cc (path_conv::check): Handle FH_DEV device.
@
text
@a135 1
# Please maintain this list in sorted order, with maximum files per 86 col line
d138 8
a145 7
	cygthread.o cygtls.o cygxdr.o dcrt0.o debug.o devices.o dir.o dlfcn.o \
	dll_init.o dtable.o environ.o errno.o exceptions.o exec.o external.o \
	fcntl.o fenv.o fhandler.o fhandler_clipboard.o fhandler_console.o \
	fhandler_dev.o fhandler_disk_file.o fhandler_dsp.o fhandler_fifo.o \
	fhandler_floppy.o fhandler_mailslot.o fhandler_mem.o fhandler_netdrive.o \
	fhandler_nodevice.o fhandler_proc.o fhandler_process.o fhandler_procnet.o \
	fhandler_procsys.o fhandler_procsysvipc.o fhandler_random.o fhandler_raw.o \
@


1.250
log
@	* Makefile.in (clean): Remove non-existant regexp dir.

	* collate.h: New header.
	(__collate_range_cmp): Declare.
	(__collate_load_error): Define.
	* glob.cc: Pull in latest version from FreeBSD.  Simplify and reduce
	Cygwin-specific changes.
	* regex/regcomp.c: Include collate.h on Cygwin as well.
	(__collate_range_cmp): Move from here...
	* nlsfuncs.cc (__collate_range_cmp): ...to here.

	* miscfuncs.cc (thread_wrapper): Fix typo in comment.
	(CygwinCreateThread): Take dead zone of Windows stack into account.
	Change the way how the stack is commited and how to handle guardpages.
	Explain how and why.
	* thread.h (PTHREAD_DEFAULT_STACKSIZE): Change definition.  Explain why.
@
text
@d142 19
a160 19
	fhandler_disk_file.o fhandler_dsp.o fhandler_fifo.o fhandler_floppy.o \
	fhandler_mailslot.o fhandler_mem.o fhandler_netdrive.o fhandler_nodevice.o \
	fhandler_proc.o fhandler_process.o fhandler_procnet.o fhandler_procsys.o \
	fhandler_procsysvipc.o fhandler_random.o fhandler_raw.o fhandler_registry.o \
	fhandler_serial.o fhandler_socket.o fhandler_tape.o fhandler_termios.o \
	fhandler_tty.o fhandler_virtual.o fhandler_windows.o fhandler_zero.o \
	flock.o fnmatch.o fork.o fts.o ftw.o getopt.o glob.o glob_pattern_p.o \
	globals.o grp.o heap.o hookapi.o inet_addr.o inet_network.o init.o ioctl.o \
	ipc.o kernel32.o libstdcxx_wrapper.o localtime.o lsearch.o malloc_wrapper.o \
	minires-os-if.o minires.o miscfuncs.o mktemp.o mmap.o msg.o \
	mount.o net.o netdb.o nfs.o nftw.o nlsfuncs.o ntea.o passwd.o path.o \
	pinfo.o pipe.o poll.o posix_ipc.o pseudo-reloc.o pthread.o random.o \
	regcomp.o regerror.o regexec.o regfree.o registry.o resource.o rexec.o \
	rcmd.o scandir.o sched.o sec_acl.o sec_auth.o sec_helper.o security.o \
	select.o sem.o setlsapwd.o shared.o shm.o sigfe.o signal.o sigproc.o \
	smallprint.o spawn.o strace.o strfmon.o strfuncs.o strptime.o strsep.o \
	strsig.o sync.o syscalls.o sysconf.o syslog.o termios.o thread.o \
	timer.o times.o tls_pbuf.o tty.o uinfo.o uname.o wait.o wincap.o \
	window.o winf.o wow64.o xsique.o \
@


1.249
log
@	* Makefile.in (DLL_OFILES): Add wow64.o.
	* dcrt0.cc (CYGWIN_GUARD): Drop execute permission for stack, it's
	not used for stacks by the OS either.
	(child_info_fork::alloc_stack_hard_way): Ditto.
	(child_info_fork::alloc_stack): Don't alloc_stack_hard_way under WOW64
	if forked from a 64 bit parent.  Set child's StackBase to parent's
	StackBase.  Add comments to explain why.
	(wow64_respawn): Move to wow64.cc.
	(wow64_started_from_native64): Move to wow64.cc.
	(respawn_wow64_process): Move to wow64.cc.
	(dll_crt0_0): Drop wow64_test_stack_marker and move stack test into
	wow64_test_for_64bit_parent function.  Don't return early if WOW64
	process has been started from native 64 bit process.
	(_dll_crt0): Implement moving stack for WOW64 processes started from
	native 64 bit process.
	* wow64.cc: New file.
	(wow64_has_64bit_parent): Rename from wow64_respawn.
	(wow64_test_for_64bit_parent): Rename from wow64_started_from_native64.
	Change comment.
	(wow64_revert_to_original_stack): New function.
	(wow64_respawn_process): Rename from respawn_wow64_process for symmetry.
	* wow64.h: New file.
@
text
@d386 1
a386 1
	-rm -f *.o *.dll *.dbg *.a *.exp junk *.base version.cc regexp/*.o winver_stamp *.exe *.d *stamp* *_magic.h sigfe.s cygwin.def globals.h $(srcdir)/tlsoffsets.h $(srcdir)/devices.cc
@


1.248
log
@* Makefile.in: Allow CFLAGS to be overridden from the environment.
@
text
@d160 1
a160 1
	window.o winf.o xsique.o \
@


1.247
log
@	* Makefile.in (DLL_IMPORTS): Drop advapi32.dll.
	* autoload.cc: Enable autoloading advapi32 functions.
	* environ.cc (regopt): Use wide char arguments in reg_key functions.
	* fhandler_console.cc (beep): Ditto.  Use WCHAR throughout.
	* registry.cc (reg_key): Rewrite reg_key class to use native NT registry
	functions.  Use WCHAR string parameters throughout.  Use PCWSTR rather
	than const WCHAR.  Drop multibyte char functionality.  Drop unused
	methods.
	(get_registry_hive_path): Use RtlQueryRegistryValues to fetch path from
	registry.
	(load_registry_hive): Drop useless check for user hive being available.
	Load hive using NtLoadKey.
	* registry.h: Accommodate above changes.
	* sched.cc (sched_rr_get_interval): Use wide char arguments in reg_key
	functions.
	* shared.cc (init_installation_root): Ditto.
	(shared_info::init_obcaseinsensitive): Use RtlQueryRegistryValues to
	fetch obcaseinsensitive value.
	(shared_info::heap_slop_size): Use wide char arguments in reg_key
	functions.
	(shared_info::heap_chunk_size): Ditto.
	* syscalls.cc (gethostid): Ditto.
	* winsup.h (__WIDE): Define.
	(_WIDE): Define.
	* libc/minires-os-if.c (get_registry_dns_items): Don't fetch values
	from registry.  Just extract them from given UNICODE_STRING parameter.
	(get_registry_dns): Fetch all registry values at once using
	RtlQueryRegistryValues.
@
text
@d61 1
a61 1
CFLAGS=@@CFLAGS@@
@


1.246
log
@* Makefile.in: Move srcdir definition before others which uses it.
@
text
@d133 1
a133 1
DLL_IMPORTS:=$(w32api_lib)/libadvapi32.a $(w32api_lib)/libkernel32.a $(w32api_lib)/libntdll.a
@


1.245
log
@* Makefile.in: Move Makefile.common include earlier to fix problems with
relative ${srcdir} path which confuses make.
@
text
@d3 1
a3 1
# 2005, 2006, 2007, 2008, 2009, 2010 Red Hat, Inc.
d18 1
a19 1
srcdir:=@@srcdir@@
@


1.244
log
@* Makefile.in (fhandler_proc_CFLAGS): Define USERNAME, HOSTNAME,
and GCC_VERSION.
* fhandler_proc.cc (format_proc_version):  Add build machine and GCC
version information as on Linux.
@
text
@d12 9
a22 1
srcdir:=@@srcdir@@
a24 1
CONFIG_DIR:=$(srcdir)/config/@@CONFIG_DIR@@
a60 3
CC:=@@CC@@
# FIXME: Which is it, CC or CC_FOR_TARGET?
CC_FOR_TARGET:=$(CC)
a79 4
#
# Include common definitions for winsup directory
#
include $(srcdir)/../Makefile.common
@


1.243
log
@Implement /proc/sysvipc/*
* devices.in (dev_procsysvipc_storage): Add.
* devices.cc: Regenerate.
* devices.h (fh_devices): Add FH_PROCSYSVIPC.
* dtable.cc (build_fh_pc): Add case FH_PROCSYSVIPC.
* fhandler.h (class fhandler_procsysvipc): Declare.
(fhandler_union): Add __procsysvipc.
* fhandler_proc.cc (proc_tab): Add sysvipc virt_directory.
* fhandler_procsysvipc.cc: New file.
* Makefile.in (DLL_OFILES): Add fhandler_procsysvipc.o.
* path.h (isproc_dev): Add FH_PROCSYSVIPC to conditional.
@
text
@d290 3
@


1.242
log
@	* Makefile.in (DLL_OFILES): Add avapi32.o.
	* advapi32.cc: New file.
	* autoload.cc: Add block of remaining advapi32 functions used by
	Cygwin.  Keep commented out.  Explain why.
@
text
@d145 6
a150 6
	fhandler_random.o fhandler_raw.o fhandler_registry.o fhandler_serial.o \
	fhandler_socket.o fhandler_tape.o fhandler_termios.o fhandler_tty.o \
	fhandler_virtual.o fhandler_windows.o fhandler_zero.o flock.o fnmatch.o \
	fork.o fts.o ftw.o getopt.o glob.o glob_pattern_p.o globals.o grp.o heap.o \
	hookapi.o inet_addr.o inet_network.o init.o ioctl.o ipc.o kernel32.o \
	libstdcxx_wrapper.o localtime.o lsearch.o malloc_wrapper.o \
@


1.241
log
@	Revert accidental previous login.
@
text
@d138 12
a149 12
DLL_OFILES:=assert.o autoload.o bsdlib.o ctype.o cxx.o cygheap.o cygthread.o \
	cygtls.o cygxdr.o dcrt0.o debug.o devices.o dir.o dlfcn.o dll_init.o \
	dtable.o environ.o errno.o exceptions.o exec.o external.o fcntl.o fenv.o \
	fhandler.o fhandler_clipboard.o fhandler_console.o fhandler_disk_file.o \
	fhandler_dsp.o fhandler_fifo.o fhandler_floppy.o fhandler_mailslot.o \
	fhandler_mem.o fhandler_netdrive.o fhandler_nodevice.o fhandler_proc.o \
	fhandler_process.o fhandler_procnet.o fhandler_procsys.o fhandler_random.o \
	fhandler_raw.o fhandler_registry.o fhandler_serial.o fhandler_socket.o \
	fhandler_tape.o fhandler_termios.o fhandler_tty.o fhandler_virtual.o \
	fhandler_windows.o fhandler_zero.o flock.o fnmatch.o fork.o fts.o ftw.o \
	getopt.o glob.o glob_pattern_p.o globals.o grp.o heap.o hookapi.o \
	inet_addr.o inet_network.o init.o ioctl.o ipc.o kernel32.o \
@


1.240
log
@	* Makefile.in (DLL_IMPORTS): Remove libadvapi32.a.
	* autoload.cc: Add all advapi32 entry points.
	* mount.cc (mount_info::init): Read user fstab only if we have a
	username.
	* passwd.cc (pwdgrp::read_passwd): Only use username if we have one.
	* shared.cc (user_info::initialize): Set cb last so as not to override
	planned behaviour in pwdgrp::read_passwd.
	* uinfo.cc (cygheap_user::init): Fetch Windows username from environment
	variable $USERNAME.  Don't set name in cygheap if variable is empty.
	(internal_getlogin): If we still have no username, try GetUserNameW.
@
text
@d133 1
a133 1
DLL_IMPORTS:=$(w32api_lib)/libkernel32.a $(w32api_lib)/libntdll.a
@


1.239
log
@winsup/cygwin/ChangeLog:

	* Makefile.in (DLL_OFILES): Add new fenv.o module.
	(fenv_CFLAGS): New flags definition for fenv.o compile.
	* autoload.cc (std_dll_init): Use fenv.h functions instead of direct
	manipulation of x87 FPU registers.
	* crt0.c (mainCRTStartup): Likewise.
	* cygwin.din (feclearexcept, fegetexceptflag, feraiseexcept,
	fesetexceptflag, fetestexcept, fegetround, fesetround, fegetenv,
	feholdexcept, fesetenv, feupdateenv, fegetprec, fesetprec,
	feenableexcept, fedisableexcept, fegetexcept, _feinitialise,
	_fe_dfl_env, _fe_nomask_env): Export new functions and data items.
	* fenv.cc: New file.
	* posix.sgml: Update status of newly-implemented APIs.
	* include/fenv.h: Likewise related header.
	* include/cygwin/version.h (CYGWIN_VERSION_API_MINOR): Bump.
@
text
@d133 1
a133 1
DLL_IMPORTS:=$(w32api_lib)/libadvapi32.a $(w32api_lib)/libkernel32.a $(w32api_lib)/libntdll.a
@


1.238
log
@	* Makefile.in (DLL_OFILES): Add fhandler_procsys.o.
	* devices.h (enum fh_devices): Add FH_PROCSYS.
	* devices.in (dev_procsys_storage): New device.
	* devices.cc: Regenerate.
	* dtable.cc (build_fh_pc): Add code to allocate fhandler_procsys.
	* fhandler.h (proc_len): Convert to size_t.
	(procsys): Declare.
	(procsys_len): Declare.
	(enum virtual_ftype_t): Move here from fhandler_virtual.h.
	Add members supported by fhandler_procsys.
	(fhandler_virtual::exists): Return virtual_ftype_t.  Change
	in all derived classes.
	(class fhandler_procsys): New class.
	(fhandler_union): Add fhandler_procnet and fhandler_procsys members.
	* fhandler_disk_file.cc (__DIR_mounts::check_missing_mount): Use
	ro_u_proc.
	(fhandler_base::fstat_by_handle): Don't copy attributes if file is an
	NT device.
	(fhandler_base::fstat_by_name): Ditto.
	* fhandler_netdrive.cc (fhandler_netdrive::exists): Return
	virtual_ftype_t.
	* fhandler_proc.cc (proc_tab): Sort alphabetically.  Use _VN macro
	to store length.
	(proc_len): Change to size_t.
	(proc_tab_cmp): New static function.
	(virt_tab_search): New function to search entry in virt_tab_t
	arrays.  Use throughout in /proc and sibling classes instead of
	loop.
	(fhandler_proc::exists): Return virtual_ftype_t.
	* fhandler_process.cc (process_tab): Sort alphabetically.  Use _VN
	macro to store length.
	(fhandler_process::exists): Return virtual_ftype_t.
	(fhandler_process::open): Simplify code.
	* fhandler_procnet.cc (procnet_tab): Sort alphabetically.  Use _VN
	macro to store length.
	(fhandler_procnet::exists): Return virtual_ftype_t.
	(fhandler_procnet::open): Simplify.
	* fhandler_procsys.cc: New file.
	* fhandler_registry.cc (fhandler_registry::exists): Return
	virtual_ftype_t.
	* fhandler_virtual.cc (fhandler_virtual::exists): Ditto.
	* fhandler_virtual.h (enum virtual_ftype_t): Move to fhandler.h.
	(virt_tab_t): Add name_len member.
	(_VN): New macro.
	(virt_tab_search): Declare.
	* mount.cc (mount_info::conv_to_win32_path): Fix comment.  Backslashify
	isprocsys_dev paths.
	* ntdll.h (STATUS_OBJECT_TYPE_MISMATCH): Define
	(STATUS_INSTANCE_NOT_AVAILABLE): Define.
	(STATUS_PIPE_NOT_AVAILABLE): Define.
	(STATUS_INVALID_PIPE_STATE): Define.
	(STATUS_PIPE_BUSY): Define.
	(SYMBOLIC_LINK_QUERY): Define.
	(NtOpenSymbolicLinkObject): Declare.
	(NtQuerySymbolicLinkObject): Declare.
	* path.cc (path_conv::check): Accommodate fact that exists method
	returns virtual_ftype_t now.  Add cases for new virtual_ftype_t
	types.
	(cygwin_conv_path): Add GLOBALROOT prefix to native device paths.
	Make sure to strip \\?\ prefix only for actual filesystem-based
	paths, not for all paths.
	* path.h (isproc_dev): Add FH_PROCSYS.
	(isprocsys_dev): Define.
@
text
@d140 1
a140 1
	dtable.o environ.o errno.o exceptions.o exec.o external.o fcntl.o \
d247 1
@


1.237
log
@	* Makefile.in (DLL_IMPORTS): Link against advapi32.a before kernel32.a.
@
text
@d144 8
a151 7
	fhandler_process.o fhandler_procnet.o fhandler_random.o fhandler_raw.o \
	fhandler_registry.o fhandler_serial.o fhandler_socket.o fhandler_tape.o \
	fhandler_termios.o fhandler_tty.o fhandler_virtual.o fhandler_windows.o \
	fhandler_zero.o flock.o fnmatch.o fork.o fts.o ftw.o getopt.o glob.o \
	glob_pattern_p.o globals.o grp.o heap.o hookapi.o inet_addr.o inet_network.o \
	init.o ioctl.o ipc.o kernel32.o libstdcxx_wrapper.o localtime.o lsearch.o \
	malloc_wrapper.o minires-os-if.o minires.o miscfuncs.o mktemp.o mmap.o msg.o \
@


1.236
log
@	Align seekdir and telldir API to POSIX definition.
	* Makefile.in (NEW_FUNCTIONS): Remove seekdir and telldir mappings.
	* dir.cc (telldir): Move functionality from telldir64 here.  Use
	long, rather than _off_t.
	(telldir64): Just call telldir.  Only keep for backward compatibility.
	(seekdir): Move functionality from seekdir64 here.  Use long, rather
	than _off_t.
	(seekdir64): Just call seekdir.  Only keep for backward compatibility.
	* fhandler.h: Throughout, change prototypes of seekdir and telldir
	methods to use long, rather than _off64_t.
	* fhandler_disk_file.cc: Change aforementioned methods accordingly.
	* fhandler_netdrive.cc: Ditto.
	* fhandler_registry.cc: Ditto.
	* fhandler_virtual.cc: Ditto.
	* include/sys/dirent.h (struct __DIR): Change __d_position from
	_off_t to long to reflect API change.
	(telldir): Change prototype to use long, rather than off_t.
	(seekdir): Ditto.
@
text
@d133 1
a133 1
DLL_IMPORTS:=$(w32api_lib)/libkernel32.a $(w32api_lib)/libadvapi32.a $(w32api_lib)/libntdll.a
@


1.235
log
@* Makefile.in (DLL_OFILES): Add pseudo-reloc.o.
* dcrt0.cc (child_info_fork::handle_fork): Call _pei386_runtime_relocator here.
(dll_crt0_1): Ditto for non-fork case.
* dll_init.cc (dll::init): Complain more in comment.  Clean up slightly.
(dll_dllcrt0_1): Call _pei386_runtime_relocator when we know we have a
filled-in per_process structure.
* globals.cc (__cygwin_user_data): Accommodate new fields for
_pei386_runtime_relocator.
* pseudo-reloc.cc: New file adapted from old lib/pseudo-reloc.c.  Include
winsup.h directly.  Collapse #ifdef __CYGWIN__ into one block.  Perform minor
whitespace code reformatting.
(__report_error): Use small_printf to output error.
(_pei386_runtime_relocator): Conditionalize for cygwin to take per_process
pointer parameter.
* winsup.h (_pei386_runtime_relocator): Declare.
* include/cygwin/version.h
(CYGWIN_VERSION_PER_PROCESS_API_VERSION_COMBINED): New macro.
(CYGWIN_VERSION_USER_API_VERSION_COMBINED): Use above macro.
(CYGWIN_VERSION_USE_PSEUDO_RELOC_IN_DLL): New macro.
(CYGWIN_VERSION_API_MINOR): Bump to 227.
* include/sys/cygwin.h: Remove obsolete comment.
(per_process::unused2): Shorten.
(per_process::pseudo_reloc_start): New field.
(per_process::pseudo_reloc_end): Ditto.
(per_process::image_base): Ditto.
* lib/_cygwin_crt0_common.cc: Declare pseudo runtime externs needed for
per_process structure.
(_cygwin_crt0_common): Fill in pseudo_reloc runtime constants.
* lib/pseudo-reloc-dummy.c: New file.  Dummy function to satisify ld.
* lib/pseudo-reloc.c: Delete.
@
text
@a212 1
	seekdir=_seekdir64 \
a220 1
	telldir=_telldir64 \
@


1.234
log
@	Add XDR support.
	* cygwin.din: Export xdr functions.
	* include/cygwin/version.h: Bump version.
	* cygxdr.cc: New.
	* cygxdr.h: New.
	* dcrt0.cc (dll_crt0_1): Print the (rare) xdr-related
	error messages to stderr.
	* Makefile.in: Add cygxdr.
	* posix.sgml: Add new XDR functions to list of implemented Solaris
	functions.
@
text
@d152 8
a159 8
	pinfo.o pipe.o poll.o posix_ipc.o pthread.o random.o regcomp.o \
	regerror.o regexec.o regfree.o registry.o resource.o rexec.o rcmd.o \
	scandir.o sched.o sec_acl.o sec_auth.o sec_helper.o security.o select.o \
	sem.o setlsapwd.o shared.o shm.o sigfe.o signal.o sigproc.o smallprint.o \
	spawn.o strace.o strfmon.o strfuncs.o strptime.o strsep.o strsig.o sync.o \
	syscalls.o sysconf.o syslog.o termios.o thread.o timer.o times.o \
	tls_pbuf.o tty.o uinfo.o uname.o wait.o wincap.o window.o winf.o \
	xsique.o \
@


1.233
log
@	Replace regex files with multibyte-aware version from FreeBSD.
	* Makefile.in (install-headers): Remove extra command to install
	regex.h.
	(uninstall-headers): Remove extra command to uninstall regex.h.
	* nlsfuncs.cc (collate_lcid): Make externally available to allow
	access to collation internals from regex functions.
	(collate_charset): Ditto.
	* wchar.h: Add __cplusplus guards to make C-clean.
	* include/regex.h: New file, replacing regex/regex.h.  Remove UCB
	advertising clause.
	* regex/COPYRIGHT: Accommodate BSD license.  Remove UCB advertising
	clause.
	* regex/cclass.h: Remove.
	* regex/cname.h: New file from FreeBSD.
	* regex/engine.c: Ditto.
	(NONCHAR): Tweak for Cygwin.
	* regex/engine.ih: Remove.
	* regex/mkh: Remove.
	* regex/regcomp.c: New file from FreeBSD.  Tweak slightly for Cygwin.
	Import required collate internals from nlsfunc.cc.
	(p_ere_exp): Add GNU-specific \< and \> handling for word boundaries.
	(p_simp_re): Ditto.
	(__collate_range_cmp): Define.
	(p_b_term): Use Cygwin-specific collate internals.
	(findmust): Ditto.
	* regex/regcomp.ih: Remove.
	* regex/regerror.c: New file from FreeBSD.  Fix a few compiler warnings.
	* regex/regerror.ih: Remove.
	* regex/regex.7: New file from FreeBSD.  Remove UCB advertising clause.
	* regex/regex.h: Remove.  Replaced by include/regex.h.
	* regex/regexec.c: New file from FreeBSD.  Fix a few compiler warnings.
	* regex/regfree.c: New file from FreeBSD.
	* regex/tests: Remove.
	* regex/utils.h: New file from FreeBSD.
@
text
@d139 1
a139 1
	cygtls.o dcrt0.o debug.o devices.o dir.o dlfcn.o dll_init.o \
@


1.232
log
@	* Makefile.in (tags, ctags, CTAGS)): Add rules to create tags file.
@
text
@a331 1
	$(INSTALL_DATA) regex/regex.h $(DESTDIR)$(tooldir)/include/regex.h
a365 1
	rm -f $(tooldir)/include/regex.h
@


1.231
log
@	* Makefile.in (DLL_OFILES): Add nlsfunc.o and strfmon.o.
	* autoload.cc (LocaleNameToLCID): Define.
	* cygwin.din (strfmon): Export.
	* nlsfuncs.cc: New file.  Define a lot of internal functions called
	from setlocale.
	(wcscoll): Implement locale-aware here, using CompareStringW function.
	(strcoll): Ditto.
	(wcsxfrm): Implement locale-aware here, usingLCMapStringW function.
	(strxfrm): Ditto.
	(__set_charset_from_locale): Replace __set_charset_from_codepage.
	Return Linux-compatible charset.
	* strfuncs.cc (__set_charset_from_codepage): Remove.
	* wchar.h (__set_charset_from_codepage): Drop definition.
	* wincap.h (wincaps::has_localenames): New element.
	* wincap.cc: Implement above element throughout.
	* libc/strfmon.c: New file.
	* libc/strptime.cc: Remove locale constant strings in favor of
	access to locale-specifc data.
	(strptime): Point _CurrentTimeLocale to locale-specific data.
	Throughout use correct locale-specific format fields for all
	locale-specific formats.
	* include/monetary.h: New file.
	* include/cygwin/version.h (CYGWIN_VERSION_API_MINOR): Bump.
@
text
@d496 5
@


1.230
log
@	* Makefile.in (CFLAGS): Add -mno-use-libstdc-wrappers.
@
text
@d3 1
a3 1
# 2005, 2006, 2007, 2008, 2009 Red Hat, Inc.
d151 6
a156 6
	mount.o net.o netdb.o nfs.o nftw.o ntea.o passwd.o path.o pinfo.o pipe.o \
	poll.o posix_ipc.o pthread.o random.o regcomp.o regerror.o regexec.o \
	regfree.o registry.o resource.o rexec.o rcmd.o scandir.o sched.o \
	sec_acl.o sec_auth.o sec_helper.o security.o select.o sem.o \
	setlsapwd.o shared.o shm.o sigfe.o signal.o sigproc.o smallprint.o \
	spawn.o strace.o strfuncs.o strptime.o strsep.o strsig.o sync.o \
@


1.229
log
@* Makefile.in: Don't do anything special with any RCS directories.
* ntdll.h (PROCESSINFOCLASS): Remove unneeded trailing comma.
* pinfo.cc (_pinfo::dup_proc_pipe): Remove unneeded assignment.
* sigproc.cc (sig_send): Don't send signal to myself if this is an exec stub.
@
text
@d58 2
a59 1
override CFLAGS+=-MMD ${$(*F)_CFLAGS} -Werror -fmerge-constants -ftracer $(CCEXTRA)
@


1.228
log
@winsup/ChangeLog:

	* Makefile.common (COMPILE_CXX): Add support for per-file overrides
	to exclude $(nostdinc) and $(nostdincxx) from compiler flags.
	(COMPILE_CC): Likewise for $(nostdinc).

winsup/cygwin/ChangeLog:

	* Makefile.in (DLL_OFILES): Add libstdcxx_wrapper.o
	(libstdcxx_wrapper_CFLAGS): Add flags for new module.
	(_cygwin_crt0_common_STDINCFLAGS): Define per-file override.
	(libstdcxx_wrapper_STDINCFLAGS, cxx_STDINCFLAGS): Likewise.
	* cxx.cc: Include "cygwin-cxx.h".
	(operator new): Tweak prototype for full standards compliance.
	(operator new[]): Likewise.
	(operator new (nothrow)): New fallback function.
	(operator new[] (nothrow), operator delete (nothrow),
	operator delete[] (nothrow)): Likewise.
	(default_cygwin_cxx_malloc): New struct of pointers to the above,
	for final last-resort fallback default.
	* cygwin-cxx.h: New file.
	(struct per_process_cxx_malloc): Define.
	(default_cygwin_cxx_malloc): Declare extern.
	* cygwin.din (__wrap__ZdaPv): Export new wrapper.
	(__wrap__ZdaPvRKSt9nothrow_t, __wrap__ZdlPv,
	__wrap__ZdlPvRKSt9nothrow_t, __wrap__Znaj,
	__wrap__ZnajRKSt9nothrow_t, __wrap__Znwj,
	__wrap__ZnwjRKSt9nothrow_t): Likewise.
	* globals.cc (__cygwin_user_data): Init newly-repurposed 'forkee'
	field (now 'cxx_malloc') to point to default_cygwin_cxx_malloc.
	* libstdcxx_wrapper.cc: New file.
	(__wrap__ZdaPv, __wrap__ZdaPvRKSt9nothrow_t, __wrap__ZdlPv,
	__wrap__ZdlPvRKSt9nothrow_t, __wrap__Znaj,
	__wrap__ZnajRKSt9nothrow_t, __wrap__Znwj,
	__wrap__ZnwjRKSt9nothrow_t): Define wrapper functions for libstdc++
	malloc operators and their overrides.
	* winsup.h (default_cygwin_cxx_malloc): Declare extern.
	* include/cygwin/version.h (CYGWIN_VERSION_API_MINOR): Bump.
	* include/sys/cygwin.h (struct per_process_cxx_malloc): Forward
	declare here.
	(struct per_process::forkee): Rename and repurpose from this ...
	(struct per_process::cxx_malloc): ... to this.
	* lib/_cygwin_crt0_common.cc: Include cygwin-cxx.h.
	(WEAK): Define shorthand helper macro.
	(__cygwin_cxx_malloc): Define and populate with weak references
	to whatever libstdc++ malloc operators will be visible at final
	link time for Cygwin apps and dlls.
	(_cygwin_crt0_common): Always look up cygwin DLL's internal
	per_process data, and don't test for (impossible) failure.  Inherit
	any members of __cygwin_cxx_malloc that we don't have overrides
	for from the DLL's default and store the resulting overall set of
	overrides back into the DLL's global per_process data.
@
text
@d499 2
@


1.227
log
@* Makefile.in (clean): Clean generated files in srcdir.
* tlsoffsets.h: Regenerate.
@
text
@d148 3
a150 3
	init.o ioctl.o ipc.o kernel32.o localtime.o lsearch.o malloc_wrapper.o \
	minires-os-if.o minires.o miscfuncs.o mktemp.o mmap.o msg.o mount.o \
	net.o netdb.o nfs.o nftw.o ntea.o passwd.o path.o pinfo.o pipe.o \
d271 1
d289 4
@


1.226
log
@	* Makefile.in (SUBLIBS): Add librt.a.
	(librt.a): New rule to build librt.a.
@
text
@d379 1
a379 1
	-rm -f *.o *.dll *.dbg *.a *.exp junk *.base version.cc regexp/*.o winver_stamp *.exe *.d *stamp* *_magic.h sigfe.s cygwin.def globals.h
@


1.225
log
@* Makefile.in (clean): Clean globals.h.
(LIBCOS): Depend on globals.h.
@
text
@d231 1
a231 1
SUBLIBS:=libpthread.a libutil.a ${CURDIR}/libm.a ${CURDIR}/libc.a libdl.a libresolv.a
d460 3
@


1.224
log
@* mkimport: New script to perform all operations necessary to create
libcygwin.a.
* rmsym: Delete.
* newsym: Delete.
* Makefile.in (toolopts): New variable which holds options relating to
binutils/gcc tools.
(speclib): Use toolopts.  Add symbols to avoid copying to special libraries.
(OBSOLETE_FUNCTIONS): Delete.
(NEW_FUNCTIONS): Change to represent an argument to new mkimport script.
(libcygwin.a): Use only new mkimport script to create libcygwin.a.  Only rely
on ${LIBCOS}.
(*/lib*.a): Simplify speclib dependencies.
(speclib): Accept toolchain options.  Convert every argument to absolute path.
Simplify parsing of nm output.  Accommodate new exclude option.
@
text
@d379 1
a379 1
	-rm -f *.o *.dll *.dbg *.a *.exp junk *.base version.cc regexp/*.o winver_stamp *.exe *.d *stamp* *_magic.h sigfe.s cygwin.def
d427 1
a427 1
${DLL_OFILES}: globals.h
@


1.223
log
@* speclib: Semi-revert to previous version but don't try to generate
well-formed import library.  Instead, just extract appropriate symbols and let
later libcygwin.a on link line fill in the rest of the import stuff.
* gendef: Hopefully no-op modification to allow easier post-processing on
symbol values.
@
text
@d108 8
a115 1
speclib=${word 1, $^} "${NM}" "${AR}" $(wordlist 2, $(words $^), $^)
d172 54
a225 61
OBSOLETE_FUNCTIONS:=open acl aclcheck aclfrommode aclfrompbits \
		    aclfromtext aclsort acltomode acltopbits \
		    acltotext chown facl fchown fcntl fdopen fgetpos fopen \
		    freopen fseeko fsetpos fstat ftello ftruncate \
		    getegid geteuid getgid getgrent getgrgid getgrnam \
		    getgroups getpwuid getpwuid_r getuid initgroups \
		    lchown lseek lstat mknod mmap seekdir setegid seteuid \
		    setgid setgroups setregid setreuid setuid stat \
		    telldir tmpfile truncate timezone

NEW_FUNCTIONS:=open _open64 \
	       acl _acl32 \
	       aclcheck _aclcheck32 \
	       aclfrommode _aclfrommode32 \
	       aclfrompbits _aclfrompbits32 \
	       aclfromtext _aclfromtext32 \
	       aclsort _aclsort32 \
	       acltomode _acltomode32 \
	       acltopbits _acltopbits32 \
	       acltotext _acltotext32 \
	       chown _chown32 \
	       facl _facl32 \
	       fchown _fchown32 \
	       fcntl _fcntl64 \
	       fdopen _fdopen64 \
	       fgetpos _fgetpos64 \
	       fopen _fopen64 \
	       freopen _freopen64 \
	       fseeko _fseeko64 \
	       fsetpos _fsetpos64 \
	       fstat _fstat64 \
	       ftello _ftello64 \
	       ftruncate _ftruncate64 \
	       getegid _getegid32 \
	       geteuid _geteuid32 \
	       getgid _getgid32 \
	       getgrent _getgrent32 \
	       getgrgid _getgrgid32 \
	       getgrnam _getgrnam32 \
	       getgroups _getgroups32 \
	       getpwuid _getpwuid32 \
	       getpwuid_r _getpwuid_r32 \
	       getuid _getuid32 \
	       initgroups _initgroups32 \
	       lchown _lchown32 \
	       lseek _lseek64 \
	       lstat _lstat64 \
	       mknod _mknod32 \
	       mmap _mmap64 \
	       seekdir _seekdir64 \
	       setegid _setegid32 \
	       seteuid _seteuid32 \
	       setgid _setgid32 \
	       setgroups _setgroups32 \
	       setregid _setregid32 \
	       setreuid _setreuid32 \
	       setuid _setuid32 \
	       stat _stat64 \
	       telldir _telldir64 \
	       tmpfile _tmpfile64 \
	       truncate _truncate64
d399 2
a400 5
$(LIB_NAME): rmsym newsym $(TEST_DLL_NAME) $(LIBCOS)
	/bin/sh ${word 1,$^} ./cygdll.a "$(NM)" "$(AR)" $(OBSOLETE_FUNCTIONS) || exit 0
	/bin/sh ${word 2,$^} ./cygdll.a "$(AS)" "$(AR)" $(NEW_FUNCTIONS) || exit 0
	(echo create $(LIB_NAME); echo addmod $(LIBCOS); echo addlib cygdll.a; echo save) | $(AR) -M
	$(RANLIB) $@@
d442 1
a442 1
${CURDIR}/libc.a: speclib ${LIB_NAME} ./libm.a libpthread.a libutil.a
d445 1
a445 1
${CURDIR}/libm.a: speclib ${LIB_NAME} $(LIBM)
d448 1
a448 1
libpthread.a: speclib ${LIB_NAME} pthread.o thread.o
d451 1
a451 1
libutil.a: speclib ${LIB_NAME} bsdlib.o
d454 1
a454 1
libdl.a: speclib ${LIB_NAME} dlfcn.o
d457 1
a457 1
libresolv.a: speclib ${LIB_NAME} minires.o
@


1.222
log
@* Makefile.in: Use all compile options when calculating magic values.
* shared_info.h (CURR_SHARED_MAGIC): Revert erroneous value.
* child_info.h (CURR_CHILD_INFO_MAGIC): Update.
* fhandler.h (acquire_output_mutex): Remove unneeded ';'.
(release_output_mutex): Ditto.
@
text
@d108 1
a108 1
speclib=${word 1, $^} "${NM}" "$(DLLTOOL)" $(wordlist 2, $(words $^), $^)
d445 1
a445 1
${CURDIR}/libc.a: speclib ${DEF_FILE} ./libm.a libpthread.a libutil.a
d448 1
a448 1
${CURDIR}/libm.a: speclib ${DEF_FILE} $(LIBM)
d451 1
a451 1
libpthread.a: speclib ${DEF_FILE} pthread.o thread.o
d454 1
a454 1
libutil.a: speclib ${DEF_FILE} bsdlib.o
d457 1
a457 1
libdl.a: speclib ${DEF_FILE} dlfcn.o
d460 1
a460 1
libresolv.a: speclib ${DEF_FILE} minires.o
@


1.221
log
@* Makefile.in: Perform some minor cleanup.  Revamp speclib handling.
* speclib: Rewrite to create libraries with dlltool rather than attempting
surgery on libcygwin.a.
@
text
@d433 1
a433 1
	/bin/sh ${word 1,$^} $@@ "$(CC) -x c" ${word 2,$^} SHARED_MAGIC 'class shared_info' USER_MAGIC 'class user_info'
d436 1
a436 1
	/bin/sh ${word 1,$^} $@@ "$(CC) -x c" ${word 2,$^} CHILD_INFO_MAGIC 'class child_info'
@


1.220
log
@Add DESTDIR functionality to Makefile.in's.
@
text
@d18 1
a18 1
VPATH:=$(srcdir):$(CONFIG_DIR):$(srcdir)/regex:$(srcdir)/regexp:$(srcdir)/lib:$(srcdir)/libc
a74 1

d108 2
d229 1
a229 2
PWD:=${shell pwd}
LIB_NAME:=$(PWD)/libcygwin.a
d231 1
a231 1
SUBLIBS:=$(PWD)/libpthread.a $(PWD)/libutil.a $(PWD)/libm.a $(PWD)/libc.a $(PWD)/libdl.a $(PWD)/libresolv.a
a409 1
# Otherwise dlltool gets confused. cgf (11-16-2000)
a441 3
$(srcdir)/qevices.cc: cygwin-gperf devices.gperf devices.h
	$^ > $@@

d445 2
a446 2
$(PWD)/libpthread.a: speclib $(LIB_NAME) pthread.o thread.o
	${word 1, $^} $@@ "${NM}" "$(AR)" ${wordlist 2, 99, $^}
d448 2
a449 2
$(PWD)/libutil.a: speclib $(LIB_NAME) bsdlib.o
	${word 1, $^} $@@ "${NM}" "$(AR)" ${wordlist 2, 99, $^}
d451 2
a452 2
$(PWD)/libm.a: speclib $(LIB_NAME) $(LIBM)
	${word 1, $^} $@@ "${NM}" "$(AR)" ${wordlist 2, 99, $^}
d454 2
a455 2
$(PWD)/libc.a: speclib $(LIB_NAME) $(PWD)/libm.a libpthread.a libutil.a
	${word 1, $^} -v $@@ "${NM}" "$(AR)" ${wordlist 2, 99, $^}
d457 2
a458 2
$(PWD)/libdl.a: speclib $(LIB_NAME) dlfcn.o
	${word 1, $^} $@@ "${NM}" "$(AR)" ${wordlist 2, 99, $^}
d460 2
a461 2
$(PWD)/libresolv.a: speclib $(LIB_NAME) minires.o
	${word 1, $^} $@@ "${NM}" "$(AR)" ${wordlist 2, 99, $^}
d463 1
a463 1
lib%.a: %.o
@


1.219
log
@Remove unneeded header files from source files throughout.  Update copyrights
where appropriate.
* globals.cc: New file for generic global variables.
* mkglobals_h: New file to generate globals.h.
* mkstatic: New Script used to build a (currently non-working) static
libcygwin_s.a.
* Makefile.in: Add unused rule to build a non-working libcygwin_s.a.
(DLL_OFILES): Add globals.o.  Make all objects rely on globals.h.
(globals.h): New target.  Generate globals.h.
* cygtls.h: Honor new CYGTLS_HANDLE define to control when the HANDLE operator
is allowed in _cygtls.
* dcrt0.cc: Move most globals to globals.cc.
* init.cc: Ditto.
* environ.cc (strip_title_path): Remove now-unneeded extern.
* fhandler_serial.cc (fhandler_serial::open): Ditto.
* pinfo.cc: Ditto.
(commune_process): Ditto.
* shared.cc: Ditto.
* glob.cc: Ditto.
* strace.cc: Ditto.
* exceptions.cc: Define CYGTLS_HANDLE before including winsup.h.
* path.cc (stat_suffixes): Move here.
* security.h: Add forward class path_conv declaration.
* smallprint.cc (__small_vsprintf): Make a true c++ function.
(__small_sprintf): Ditto.
(small_printf): Ditto.
(console_printf): Ditto.
(__small_vswprintf): Ditto.
(__small_swprintf): Ditto.
* spawn.cc (spawn_guts): Remove _stdcall decoration in favor of regparm.
(hExeced): Move to globals.cc
* strfuncs.cc (current_codepage): Ditto.
(active_codepage): Ditto.
* sync.cc (lock_process::locker): Move here from dcrt0.cc.
* syscalls.cc (stat_suffixes): Move to path.cc.
* tty.cc (tty::create_master): Uncapitalize fatal warning for consistency.
* winsup.h: Include globals.h to declare most of the grab bag list of globals
which were previously defined here.
* mount.h: Move USER_* defines back to shared_info.h.
* speclib: Force temporary directory cleanup.
@
text
@d311 2
a312 2
	@@$(MKDIRP) $(bindir)
	$(INSTALL_PROGRAM) $(TEST_DLL_NAME) $(bindir)/$(DLL_NAME); \
d314 1
a314 1
	    $(INSTALL_DATA) $$i $(tooldir)/lib/`basename $$i` ; \
d316 1
a316 1
	cd $(tooldir)/lib && ln -sf libcygwin.a libg.a
d321 1
a321 1
	    $(MKDIRP) $(tooldir)/$$sub; \
d323 1
a323 1
	      $(INSTALL_DATA) $$i $(tooldir)/$$sub/`basename $$i` ; \
d326 1
a326 1
	$(INSTALL_DATA) regex/regex.h $(tooldir)/include/regex.h
d329 1
a329 1
	@@$(MKDIRP) $(mandir)/man2 $(mandir)/man3 $(mandir)/man5 $(mandir)/man7
d332 1
a332 1
	    $(INSTALL_DATA) $$i $(mandir)/man2/`basename $$i` ; \
d335 1
a335 1
	    $(INSTALL_DATA) $$i $(mandir)/man3/`basename $$i` ; \
d338 1
a338 1
	    $(INSTALL_DATA) $$i $(mandir)/man5/`basename $$i` ; \
d341 1
a341 1
	    $(INSTALL_DATA) $$i $(mandir)/man7/`basename $$i` ; \
@


1.218
log
@* glob_pattern_p.cc: New file.
* Makefile.in (DLL_OFILES): Add glob_pattern_p.o.
* glob.h: Add declaration for glob_pattern_p.
* pinfo.cc (pinfo::thisproc): Remove __stdcall attribute.
@
text
@d3 1
a3 1
# 2005, 2006, 2007, 2008 Red Hat, Inc.
d58 1
a58 1
override CFLAGS+=-MMD ${$(*F)_CFLAGS} -fmerge-constants -ftracer $(CCEXTRA)
d101 1
d139 1
a139 1
	glob_pattern_p.o grp.o heap.o hookapi.o inet_addr.o inet_network.o \
d153 9
d394 1
a394 1
	-lgcc $(DLL_IMPORTS)
d405 3
d428 5
d434 1
a434 1
	/bin/sh ${word 1,$^} $@@ "$(CC) -x c" ${word 2,$^} USER_MAGIC 'class user_info' SHARED_MAGIC 'class shared_info'
d450 1
a450 1
	/bin/sh ${word 1, $^} $@@ "${NM}" "$(AR)" ${wordlist 2, 99, $^}
d453 1
a453 1
	/bin/sh ${word 1, $^} $@@ "${NM}" "$(AR)" ${wordlist 2, 99, $^}
d456 1
a456 1
	/bin/sh ${word 1, $^} $@@ "${NM}" "$(AR)" ${wordlist 2, 99, $^}
d459 1
a459 1
	/bin/sh ${word 1, $^} -v $@@ "${NM}" "$(AR)" ${wordlist 2, 99, $^}
d462 1
a462 1
	/bin/sh ${word 1, $^} $@@ "${NM}" "$(AR)" ${wordlist 2, 99, $^}
d465 1
a465 1
	/bin/sh ${word 1, $^} $@@ "${NM}" "$(AR)" ${wordlist 2, 99, $^}
d490 1
a490 1
	$(CC) -c -o $@@ $?
@


1.217
log
@	* Makefile.in (DLL_OFILES): Add setlsapwd.o.
	* cygserver.h (CYGWIN_SERVER_VERSION_API): Bump.
	(request_code_t): Define CYGSERVER_REQUEST_SETPWD request type.
	* cygserver_msg.h (client_request_msg::retval): Use default value of -1
	for retval if msglen is 0.
	* cygserver_sem.h (client_request_sem::retval): Ditto.
	* cygserver_shm.h (client_request_shm::retval): Ditto.
	* cygserver_setpwd.h: New file.
	* external.cc (cygwin_internal): Implement new CW_SET_PRIV_KEY type.
	* sec_auth.cc (open_local_policy): Make externally available.
	Get ACCESS_MASK as argument.
	(create_token): Accommodate change to open_local_policy.
	(lsaauth): Ditto.
	(lsaprivkeyauth): New function fetching token by retrieving
	password stored in Cygwin or Interix LSA private data area and
	calling LogonUser with it.
	* security.h (lsaprivkeyauth): Declare.
	(open_local_policy): Declare.
	* setlsapwd.cc: New file implementing setting LSA private data password
	using LsaStorePrivateData or by calling cygserver if available.
	* syscalls.cc (seteuid32): Add workaround to get the original token
	when switching back to the original privileged user, even if
	setgroups group list is still active.  Add long comment to explain why.
	Call lsaprivkeyauth first, only if that fails call lsaauth or
	create_token.
	* include/cygwin/version.h: Bump API minor number.
	* include/sys/cygwin.h (cygwin_getinfo_types): Add CW_SET_PRIV_KEY.
@
text
@d138 12
a149 11
	grp.o heap.o hookapi.o inet_addr.o inet_network.o init.o ioctl.o ipc.o \
	kernel32.o localtime.o lsearch.o malloc_wrapper.o minires-os-if.o \
	minires.o miscfuncs.o mktemp.o mmap.o msg.o mount.o net.o netdb.o nfs.o \
	nftw.o ntea.o passwd.o path.o pinfo.o pipe.o poll.o posix_ipc.o \
	pthread.o random.o regcomp.o regerror.o regexec.o regfree.o registry.o \
	resource.o rexec.o rcmd.o scandir.o sched.o sec_acl.o sec_auth.o \
	sec_helper.o security.o select.o sem.o setlsapwd.o shared.o shm.o \
	sigfe.o signal.o sigproc.o smallprint.o spawn.o strace.o strfuncs.o \
	strptime.o strsep.o strsig.o sync.o syscalls.o sysconf.o syslog.o \
	termios.o thread.o timer.o times.o tls_pbuf.o tty.o uinfo.o uname.o \
	wait.o wincap.o window.o winf.o xsique.o \
@


1.216
log
@* Makefile.in: Add -c option which is now removed from COMPILE_C*.
* cygwin.din (cfmakeraw): Export.
* termios.cc (cfmakeraw): Implement.
* include/sys/termios.h (cfmakeraw): Declare.
* include/cygwin/version.h (CYGWIN_VERSION_API_MINOR): Bump.
@
text
@d144 5
a148 5
	sec_helper.o security.o select.o sem.o shared.o shm.o sigfe.o signal.o \
	sigproc.o smallprint.o spawn.o strace.o strfuncs.o strptime.o strsep.o \
	strsig.o sync.o syscalls.o sysconf.o syslog.o termios.o thread.o \
	timer.o times.o tls_pbuf.o tty.o uinfo.o uname.o wait.o wincap.o \
	window.o winf.o xsique.o \
@


1.215
log
@	* Makefile.in (DLL_OFILES): Remove v8 regexp files.
	(OBSOLETE_FUNCTIONS): Remove v8 regexp functions.
	(NEW_FUNCTIONS): Remove POSIX regex functions.
	* cygwin.din: Export POSIX regex functions with their correct symbol
	name.  Export with posix_ prefix for backward compatibility.
	* syscalls.cc (regfree): Remove ancient fake function.
	* regex/regex.h: Remove renaming regex functions within Cygwin.
	* regexp/*: Remove.
	* include /cygwin/version,.h: Bump API minor number.
@
text
@d454 1
a454 1
	$(COMPILE_CXX) -o version.o version.cc && \
d463 1
a463 1
	$^ $@@ $(COMPILE_CXX)
@


1.214
log
@	* Makefile.in (DLL_OFILES): Add nfs.o.
	* fhandler.cc (fhandler_base::open): Open files on NFS shares with
	correct access flags and EAs.
	* fhandler.h (fhandler_base::fstat_by_nfs_ea): Declare.
	* fhandler_disk_file.cc (fhandler_base::fstat_by_nfs_ea): New method.
	(fhandler_base::fstat_by_handle): Call fstat_by_nfs_ea for files on
	NFS shares.
	(fhandler_disk_file::fchmod): Use NFS specific method to set mode for
	files on NFS shares.  Don't overrule errno from call to
	set_file_attribute with errno from NtSetInformationFile call.
	(fhandler_disk_file::fchown): Add comment.
	* mount.cc (fillout_mntent): Accommodate change in second parameter
	to fs_info::update.
	* nfs.cc: New file.
	* nfs.h: New file.
	* path.cc (fs_info::update): Take handle instead of bool as second
	parameter.  Use that handle if it's not NULL.  Only close handle if
	it has been opened here.  Use static defined buffers instead of
	alloca'd buffers.
	(path_conv::check): Call symlink_info::check with reference to fs.
	Don't call fs.update here if file exists.
	(conv_path_list): Prefer tmp_pathbuf buffer over using alloca.
	(symlink_worker): Use NFS specific method to create symlinks on NFS
	shares.  Prefer tmp_pathbuf buffer over using alloca.
	(symlink_info::check_shortcut): Reopen file from incoming handle
	with necessary FILE_GENERIC_READ flag.  Prefer tmp_pathbuf buffer over
	using alloca.
	(symlink_info::check_sysfile): Ditto.
	(symlink_info::check_reparse_point): Use tmp_pathbuf buffer to
	allocate REPARSE_DATA_BUFFER.
	(symlink_info::check_nfs_symlink): New method.
	(enum symlink_t): Remove.
	(symlink_info::check): Don't use NtQueryAttributesFile.  Rather, open
	file with necessary access flags and call NtQueryInformationFile.  Fix
	error handling in case file can't be opened.  For existing files, call
	fs_info::update here.  Restructure symlink checking to accommodate the
	fact that the file is already open.  Add case for NFS symlinks.
	* path.h (fs_info::update): Take handle instead of bool as second
	parameter.
@
text
@d147 2
a148 2
	timer.o times.o tls_pbuf.o tty.o uinfo.o uname.o v8_regexp.o \
	v8_regerror.o v8_regsub.o wait.o wincap.o window.o winf.o xsique.o \
d153 1
a153 2
OBSOLETE_FUNCTIONS:=regcomp regerror regexec regfree regsub \
		    open acl aclcheck aclfrommode aclfrompbits \
d163 1
a163 5
NEW_FUNCTIONS:=regcomp posix_regcomp \
	       regerror posix_regerror \
	       regexec posix_regexec \
	       regfree posix_regfree \
	       open _open64 \
@


1.213
log
@	* Makefile.in (DLL_OFILES): Remove _def_time.o.
	* libc/_def_time.c: Remove.  Move definitions of _DefaultTimeLocale
	and _CurrentTimeLocale ...
	* libc/strptime.cc: ... here.
@
text
@d140 1
a140 1
	minires.o miscfuncs.o mktemp.o mmap.o msg.o mount.o net.o netdb.o \
@


1.212
log
@	* Makefile.in (DLL_OFILES): Add _def_time.o.  Remove timelocal.o.
	* include/sys/localedef.h: New file from NetBSD.
	* libc/_def_time.c: Ditto.
	* libc/getopt.c: Update to latest OpenBSD version 1.23.
	* libc/strptime.cc: Replace FreeBSD version 1.35 with latest NetBSD
	version 1.28.
	* libc/timelocal.cc: Remove.
	* libc/timelocal.h: Remove.
@
text
@d129 1
a129 1
	cygtls.o dcrt0.o debug.o _def_time.o devices.o dir.o dlfcn.o dll_init.o \
@


1.211
log
@	* Makefile.in (install): Drop install rules for postinstall script.
@
text
@d129 1
a129 1
	cygtls.o dcrt0.o debug.o devices.o dir.o dlfcn.o dll_init.o \
d147 2
a148 3
	timelocal.o timer.o times.o tls_pbuf.o tty.o uinfo.o uname.o \
	v8_regexp.o v8_regerror.o v8_regsub.o wait.o wincap.o window.o winf.o \
	xsique.o \
@


1.210
log
@	* Makefile.in (DLL_OFILES): Add kernel32.o.
	* autoload.cc (WSACloseEvent): Remove.
	(WSACreateEvent): Remove.
	* cygheap.cc (cygheap_init): Drop initializing shared_prefix.
	* cygheap.h (struct init_cygheap): Drop shared_prefix and
	shared_prefix_buf members.
	* fhandler_socket.cc (sock_shared_name): New static function.
	(search_wsa_event_slot): Convert name buffers to WCHAR.  Call
	NtCreateMutant/NtOpenMutant to create mutexes in session local
	namespace.
	(fhandler_socket::init_events): Ditto.  Fix debug output.
	(fhandler_socket::release_events): Close mutexes using NtClose.
	(fhandler_socket::dup): Ditto.
	* kernel32.cc: New file, implementing Win32 calls in a Cygwin-specific
	way.
	* mmap.cc (MapView): Make static.
	* ntdll.h: Fix status code sorting.
	(STATUS_OBJECT_NAME_EXISTS): Define.
	(SEMAPHORE_QUERY_STATE): Define.
	(CYG_SHARED_DIR_ACCESS): Define.
	(CYG_MUTANT_ACCESS): Define.
	(CYG_EVENT_ACCESS): Define.
	(CYG_SEMAPHORE_ACCESS): Define.
	(enum _PROCESSINFOCLASS): Define ProcessSessionInformation.
	(struct _PROCESS_SESSION_INFORMATION): Define.
	(NtCreateSemaphore): Declare.
	(NtOpenSemaphore): Declare.
	* flock.cc: Use CYG_xxx_ACCESS access masks where appropriate.
	* posix_ipc.cc (ipc_mutex_init): Use native functions to create mutex.
	Create in cygwin-shared subdir.
	(ipc_cond_init): Ditto for event.
	(ipc_mutex_close): Use NtClose.
	(ipc_cond_close): Ditto.
	(mq_open): Drop "cyg" prefix from mqh_uname.
	* shared.cc (CYG_SHARED_DIR_ACCESS): Drop definition here.
	(_cygwin_testing): Declare extern on file level.
	(get_shared_parent_dir): Change name of shared directory.  Add name
	to api_fatal output.
	(get_session_parent_dir): New function.
	(shared_name): Simplify.
	(shared_info::initialize): Call get_session_parent_dir.
	* shared_info.h (get_session_parent_dir): Declare.
	* smallprint.cc (__small_vswprintf): Fix bug in multibyte string
	conversion.
	* thread.cc (semaphore::semaphore): Align semaphore name to object
	names in posix IPC functions.
	* include/cygwin/version.h (CYGWIN_VERSION_SHARED_DATA): Bump.
@
text
@a301 2
	@@$(MKDIRP) $(sysconfdir)/postinstall
	$(INSTALL_PROGRAM) $(srcdir)/postinstall $(sysconfdir)/postinstall/000-cygwin-post-install.sh
@


1.209
log
@Add miscfuncs.h to files as needed throughout.
* mount.cc: New file.
* path.cc: Move mount-specific stuff into mount.cc.  Move common stuff into
miscfuncs.cc.  Remove unneeded includes.
* miscfuncs.cc: Move some common path functions here.
* miscfuncs.h: New file.
* winsup.h: Move miscelleneous functions to miscfuncs.h.
* dcrt0.cc: Remove unneeded includes.
* Makefile.in (DLL_OFILES): Add mount.o.
* include/cygwin/config.h: Fix a minor typo.
@
text
@d139 11
a149 10
	localtime.o lsearch.o malloc_wrapper.o minires-os-if.o minires.o \
	miscfuncs.o mktemp.o mmap.o msg.o mount.o net.o netdb.o nftw.o ntea.o \
	passwd.o path.o pinfo.o pipe.o poll.o posix_ipc.o pthread.o random.o \
	regcomp.o regerror.o regexec.o regfree.o registry.o resource.o rexec.o \
	rcmd.o scandir.o sched.o sec_acl.o sec_auth.o sec_helper.o security.o \
	select.o sem.o shared.o shm.o sigfe.o signal.o sigproc.o smallprint.o \
	spawn.o strace.o strfuncs.o strptime.o strsep.o strsig.o sync.o \
	syscalls.o sysconf.o syslog.o termios.o thread.o timelocal.o timer.o \
	times.o tls_pbuf.o tty.o uinfo.o uname.o v8_regexp.o v8_regerror.o \
	v8_regsub.o wait.o wincap.o window.o winf.o xsique.o \
@


1.208
log
@	* postinstall: New script.
	* Makefile.in (sysconfdir): Define.
	(install): Create $(sysconfdir)/postinstall dir.  Install postinstall
	script into it.

	* path.cc: Add temorary comments to note later function removal.
	(conv_fstab_spaces): New inline function to handle \040 to space
	conversion.
	(struct opt): Add "system" and "user" mount options.
	(mount_info::from_fstab_line): Only allow # to start a comment at
	the beginning of the line.  Call conv_fstab_spaces on native_path and
	posix_path fields.  Don't enforce system mounts in /etc/fstab.
	Drop last argument in call to add_item.
	(mount_info::from_fstab): Create a default cygdrive entry.  Load
	user mount points from fstab.<username> instead of fstab.<sid>.
	(mount_info::read_mounts): Drop last argument in call to add_item.
	(mount_info::add_reg_mount): Remove.
	(mount_info::del_reg_mount): Remove.
	(mount_info::write_cygdrive_info): Rename from
	mount_info::write_cygdrive_info_to_registry.  Don't write to registry.
	Disallow to overwrite a system cygdrive prefix.
	(mount_info::remove_cygdrive_info_from_registry): Remove.
	(mount_info::get_cygdrive_info): Just fetch current cygdrive prefix and
	flags.
	(mount_info::add_item): Drop last argument.  Don't write to registry.
	Disallow to overwrite a system mount point.
	(mount_info::del_item): Drop last argument.  Don't write to registry.
	Disallow to remove a system mount point.
	(mount): Enforce user mount.
	(cygwin_umount): Ditto.
	* shared_info.h (mount_info::add_item): Drop last argument.
	(mount_info::del_item): Ditto.
	(mount_info::add_reg_mount): Remove.
	(mount_info::del_reg_mount): Remove.
	(mount_info::write_cygdrive_info): Rename from
	mount_info::write_cygdrive_info_to_registry.
	(mount_info::remove_cygdrive_info_from_registry): Remove.
@
text
@d139 2
a140 2
	localtime.o lsearch.o malloc_wrapper.o minires-os-if.o \
	minires.o miscfuncs.o mktemp.o mmap.o msg.o net.o netdb.o nftw.o ntea.o \
@


1.207
log
@	* Fix copyright dates.
@
text
@d30 1
d301 2
@


1.206
log
@	* Makefile.in (DLL_OFILES): Add tls_pbuf.o.
	* autoload.cc (CreateDesktopW): Replace CreateDesktopA.
	(CreateWindowStationW): Replace CreateWindowStationA.
	(GetUserObjectInformationW): Replace GetUserObjectInformationA.
	* cygheap.h (cwdstuff::get): Assume default buffer size NT_MAX_PATH.
	* cygtls.cc (_cygtls::remove): Free temporary TLS path buffers.
	* cygtls.h (TP_NUM_C_BUFS): Define.
	(TP_NUM_W_BUFS): Define.
	(class tls_pathbuf): New class to store pointers to thread local
	temporary path buffers.
	(_local_storage::pathbufs): New member.
	* environ.cc (win_env::add_cache): Use temporary TLS path buffer instead
	of stack based buffer.
	(posify): Get temporary outenv buffer from calling function.
	(environ_init): Create temporary TLS path buffer for posify.
	(build_env): Create Windows environment block as WCHAR buffer.
	* environ.h (build_env): Change declaration accordingly.
	* external.cc (sync_winenv): Accommodate build_env change.
	* fhandler_console.cc (fhandler_console::need_invisible): Use
	GetUserObjectInformationW and CreateWindowStationW.
	* fhandler_process.cc (format_process_maps): Use temporary TLS path
	buffer instead of stack based buffer.
	* fork.cc (frok::parent): Convert to use CreateProcessW.
	* path.cc: Throughout use temporary TLS path buffers instead of stack
	based buffer.  Replace checks for CYG_MAX_PATH by checks for
	NT_MAX_PATH.
	(getfileattr): New function to replace GetFileAttributesA.
	(normalize_win32_path): Remove Win32 and NT long path prefixes.
	(getwd): Assume PATH_MAX + 1 buffer per SUSv3.
	* path.h (class path_conv): Set path buffer to size NT_MAX_PATH.
	(iswdrive): Define.
	* pinfo.cc (commune_process): Use temporary TLS path buffer instead of
	stack based buffer.
	* registry.cc (get_registry_hive_path): Ditto.
	(load_registry_hive): Ditto.
	* spawn.cc (spawn_guts): Convert to use CreateProcessW and
	CreateProcessAsUserW.
	(av::fixup): Open/close file using NtOpenFile/NtClose.
	* syscalls.cc (mknod_worker): Allow PATH_MAX file name.
	(mknod32): Ditto.
	(getusershell): Ditto.
	* tls_pbuf.cc: New file implementing tls_pathbuf and tmp_pathbuf
	methods.
	* tls_pbuf.h: New header for files using tmp_pathbuf.
	* tlsoffsets.h: Regenerate.
	* winsup.h (NT_MAX_PATH): Define as 32767 to avoid USHORT overflow.
@
text
@d3 1
a3 1
# 2005, 2006, 2007 Red Hat, Inc.
@


1.205
log
@	* Makefile.in (DLL_OFILES): Add ntea.o.
	* cygwin.din (getxattr, listxattr, removexattr, setxattr, lgetxattr,
	llistxattr, lremovexattr, lsetxattr, fgetxattr, flistxattr,
	fremovexattr, fsetxattr): Export Linux extended attribute functions.
	Sort.
	* errno.cc (errmap): Add mappings for ERROR_EAS_DIDNT_FIT,
	ERROR_EAS_NOT_SUPPORTED, ERROR_EA_LIST_INCONSISTENT,
	ERROR_EA_TABLE_FULL, ERROR_FILE_CORRUPT, ERROR_INVALID_EA_NAME.
	* fhandler.h (class fhandler_base): Declare new fgetxattr and
	fsetxattr methods.
	(class fhandler_disk_file): Ditto.
	* fhandler.cc (fhandler_base::fgetxattr): New method.
	(fhandler_base::fsetxattr): New method.
	* fhandler_disk_file.cc (fhandler_disk_file::fgetxattr): New method.
	(fhandler_disk_file::fsetxattr): New method.
	* ntdll.h (STATUS_EA_TOO_LARGE): Define.
	(STATUS_NONEXISTENT_EA_ENTRY): Define.
	(STATUS_NO_EAS_ON_FILE): Define.
	* ntea.cc (read_ea): Rewrite for long pathnames and for using with
	Linux extended attribute functions.
	(write_ea): Ditto.
	(getxattr_worker): New static function.
	(getxattr): New function.
	(lgetxattr): New function.
	(fgetxattr): New function.
	(listxattr): New function.
	(llistxattr): New function.
	(flistxattr): New function.
	(setxattr_worker): New static function.
	(setxattr): New function.
	(lsetxattr): New function.
	(fsetxattr): New function.
	(removexattr): New function.
	(lsetxattr): New function.
	(fsetxattr): New function.
	* security.h (read_ea): Change declaration according to above changes.
	(write_ea): Ditto.
	* include/cygwin/version.h: Bump API minor version.
@
text
@d146 2
a147 2
	times.o tty.o uinfo.o uname.o v8_regexp.o v8_regerror.o v8_regsub.o \
	wait.o wincap.o window.o winf.o xsique.o \
@


1.204
log
@	* Makefile.in (install-libs): Overwrite newlib's libg.a with symlink
	to libcygwin.a.
@
text
@d139 1
a139 1
	minires.o miscfuncs.o mktemp.o mmap.o msg.o net.o netdb.o nftw.o \
@


1.203
log
@	* Makefile.in (DLL_OFILES): Remove memmem.o.
	* memmem.cc: Remove in favor of newlib implementation.
@
text
@d309 1
@


1.202
log
@	* Makefile.in (OBSOLETE_FUNCTIONS): Add timezone.
	* include/cygwin/time.h: Drop conditional timezone definitions.
	(timezone): Declare as extern symbol referring _timezone variable.
@
text
@d138 1
a138 1
	localtime.o lsearch.o malloc_wrapper.o memmem.o minires-os-if.o \
@


1.201
log
@	* Makefile.in (DLL_OFILES): Remove delqueue.o.
	* delqueue.cc: Delete.
	* fhandler.h (fhandler_base::close_fs): Drop declaration.
	(fhandler_disk_file::close): Drop declaration.
	* fhandler_disk_file.cc (fhandler_base::fstat_fs): Call close instead of
	close_fs.
	(fhandler_base::fstat_helper): Use open FH_UNIX handle in call to
	get_file_attribute.
	(fhandler_base::open_fs): Call close instead of get_file_attribute.
	(fhandler_disk_file::close): Remove.
	(fhandler_base::close_fs): Remove.
	* fhandler_socket.cc (fhandler_socket::close): Just call
	fhandler_base::close for FH_UNIX sockets.
	* shared.cc (user_shared_initialize): Drop call to
	user_shared->delqueue.init.
	* shared_info.h (CURR_USER_MAGIC): Change according to below change.
	(MAX_DELQUEUES_PENDING): Remove.
	(class delqueue_list): Remove.
	(class user_info): Remove delqueue.
	* syscalls.cc (close_all_files): Drop call to
	user_shared->delqueue.process_queue.
	(unlink): Drop delqueue handling.
@
text
@d161 1
a161 1
		    telldir tmpfile truncate
@


1.200
log
@Add missing checkin.
@
text
@d128 1
a128 1
	cygtls.o dcrt0.o debug.o delqueue.o devices.o dir.o dlfcn.o dll_init.o \
@


1.199
log
@	* fhandler.cc (fhandler_base::fhaccess): Accommodate interface changes
	of access control functions throughout.
	* fhandler_disk_file.cc: Ditto.
	* fhandler_registry.cc: Ditto.
	* sec_acl.cc: Drop unnecessary includes.
	(setacl): Take path_conv instead of file name as parameter.
	Accommodate interface changes of access control functions.
	(getacl): Ditto.
	* sec_auth.cc: New file, taking over all authentication related
	functions from security.cc.
	* sec_helper.cc: Drop unnecessary includes.
	* security.cc: Ditto.  Move all authentication related functions to
	sec_auth.cc.
	(ALL_SECURITY_INFORMATION): New define.  Use throughout.
	(set_file_sd): New function, replacing read_sd and the file related
	part of get_nt_object_security.
	(get_reg_sd): Rename from get_reg_security.  Drop type parameter.
	(get_reg_attribute): New function, replacing the registry related part
	of get_nt_object_security.
	(get_file_attribute): Take path_conv instead of file name as parameter.
	Use new get_file_sd call.
	(set_file_attribute): Ditto plus new set_file_sd.  Drop unnecessary
	implementation without uid/gid parameters.
	(check_file_access): Take path_conv instead of file name as parameter.
	Use new get_file_sd call.
	(check_registry_access): Use new get_reg_sd call.
	* security.h: Accommodate above interface changes.
@
text
@d144 4
a147 4
	spawn.o strace.o strptime.o strsep.o strsig.o sync.o syscalls.o \
	sysconf.o syslog.o termios.o thread.o timelocal.o timer.o times.o \
	tty.o uinfo.o uname.o v8_regexp.o v8_regerror.o v8_regsub.o wait.o \
	wincap.o window.o winf.o xsique.o \
@


1.198
log
@* Makefile.in (DLL_OFILES): Add newly-imported random.o.  Eliminate reliance on
libiberty.
* random.cc: Import from FreeBSD.  Modify for Cygwin environment.
* include/cygwin/stdlib.h (random): Reflect change in return value to be more
linux/freebsd-like.
(srandom): Ditto.
@
text
@d142 6
a147 6
	rcmd.o scandir.o sched.o sec_acl.o sec_helper.o security.o select.o \
	sem.o shared.o shm.o sigfe.o signal.o sigproc.o smallprint.o spawn.o \
	strace.o strptime.o strsep.o strsig.o sync.o syscalls.o sysconf.o \
	syslog.o termios.o thread.o timelocal.o timer.o times.o tty.o uinfo.o \
	uname.o v8_regexp.o v8_regerror.o v8_regsub.o wait.o wincap.o window.o \
	winf.o xsique.o \
@


1.197
log
@	* Makefile.in (DLL_OFILES): Add xsique.o.
	* cygwin.din (confstr): Make NOSIGFE.
	(insque): Export.
	(remque): Export.
	* lsearch.cc: Remove superfluous _SEARCH_PRIVATE define.
	* posix.sgml: Move insque to defined SUSv3 interfaces.  Remove
	comment for remque.
	* include/search.h: Remove _SEARCH_PRIVATE guarded definitions.
	Add struct qelem definition.  Add insque and remque declarations.
	* include/cygwin/version.h: Bump API minor number.
	* include/sys/queue.h: Remove insque/remque definitions so as not
	to collide with SUSv3 compatible declaration in search.h.
	* libc/xsique.cc: New file implementing insque and remque.
@
text
@d118 1
a118 1
EXTRA_OFILES=$(bupdir1)/libiberty/random.o
d120 1
a120 1
MALLOC_OFILES=@@MALLOC_OFILES@@
d140 8
a147 8
	passwd.o path.o pinfo.o pipe.o poll.o posix_ipc.o pthread.o regcomp.o \
	regerror.o regexec.o regfree.o registry.o resource.o rexec.o rcmd.o \
	scandir.o sched.o sec_acl.o sec_helper.o security.o select.o sem.o \
	shared.o shm.o sigfe.o signal.o sigproc.o smallprint.o spawn.o strace.o \
	strptime.o strsep.o strsig.o sync.o syscalls.o sysconf.o syslog.o \
	termios.o thread.o timelocal.o timer.o times.o tty.o uinfo.o uname.o \
	v8_regexp.o v8_regerror.o v8_regsub.o wait.o wincap.o window.o winf.o \
	xsique.o \
@


1.196
log
@* Makefile (DLL_OFILES): Remove ntea.o
* environ.cc (set_ntea): Delete.
(parse_thing): Delete "ntea" setting.
* fhandler.cc (fhandler_base::open): Remove allow_ntea considerations.
(check_posix_perm): Ditto.
* fhandler_disk_file.cc (fhandler_disk_file::fchmod): Ditto.
(fhandler_base::open_fs): Ditto.
(fhandler_disk_file::mkdir): Ditto.
* path.cc (symlink_worker): Ditto.
* security.cc (get_file_attribute): Ditto.
(set_file_attribute): Ditto.
* security.h: Remove allow_ntea declaration.
@
text
@d147 1
@


1.195
log
@	* Makefile.in (DLL_IMPORTS): Add libntdll.a.
	* autoload.cc: Remove all symbols from advapi32.dll, kernel32.dll and
	ntdll.dll available on all platforms since NT4.

	Throughout remove all usage of wincap.is_winnt.
	* dcrt0.cc (dll_crt0_0): Remove call to mmap_init.
	* fhandler.h (class fhandler_base): Remove has_changed flag.
	(fhandler_disk_file::touch_ctime): Remove declaration.
	(fhandler_disk_file::readdir_9x): Ditto.
	(fhandler_disk_file::touch_ctime): Remove.
	(fhandler_disk_file::readdir_9x): Remove.
	(fhandler_disk_file::closedir): Call NtClose instead of CloseHandle.
	* mmap.cc: Throughout call CreateMapping and MapView directly.
	(VirtualProt9x): Remove.
	(VirtualProtNT): Remove.
	(VirtualProtEx9x): Remove.
	(VirtualProtExNT): Remove.
	(VirtualProtect): Remove define.
	(VirtualProtectEx): Remove define.
	(CreateMapping9x): Remove.
	(CreateMappingNT): Rename to CreateMapping.
	(MapView9x): Remove.
	(MapViewNT): Rename to MapView.
	(struct mmap_func_t): Remove definition.
	(mmap_funcs_9x): Remove.
	(mmap_funcs_nt): Remove.
	(mmap_func): Remove.
	(mmap_init): Remove.
	* net.cc (getdomainname): Drop comment. Use NT4 registry key only.
	(get_95_ifconf): Remove.
	* pinfo.cc (winpids::enumNT): Rename to winpids::enum_processes.
	(winpids::enum9x): Remove.
	(winpids::set): Just call enum_processes directly.
	(winpids::enum_init): Ditto.
	* pinfo.h (class winpids): Drop enum_processes pointer.  Rename
	enumNT to enum_processes.  Drop enum9x declaration.  Drop initialization
	of enum_processes throughout.
	* registry.cc (get_registry_hive_path): Just create NT key.
	(load_registry_hive): Only load NT specific file.
	* syscalls.cc (unlink_9x): Remove.
	(unlink): Just call unlink_nt.
	* wincap.cc: Remove is_winnt flag throughout.
	* wincap.h: Ditto.
	* winsup.h: Remove mmap_init declaration.
@
text
@d139 1
a139 1
	minires.o miscfuncs.o mktemp.o mmap.o msg.o net.o netdb.o nftw.o ntea.o \
@


1.194
log
@	* Makefile.in (DLL_OFILES): Add posix_ipc.o.
	* cygwin.din (mq_close): Export.
	(mq_getattr): Export.
	(mq_notify): Export.
	(mq_open): Export.
	(mq_receive): Export.
	(mq_send): Export.
	(mq_setattr): Export.
	(mq_timedreceive): Export.
	(mq_timedsend): Export.
	(mq_unlink): Export.
	* posix_ipc.cc: New file implementing the above functions.  Move
	shm_open and shm_unlink from syscalls.cc here.
	* sysconf.cc (sca): Set value of _SC_MQ_OPEN_MAX to MQ_OPEN_MAX,
	_SC_MQ_PRIO_MAX to MQ_PRIO_MAX, _SC_MESSAGE_PASSING to
	_POSIX_MESSAGE_PASSING.
	* include/limits.h (MQ_OPEN_MAX): Define.
	(MQ_PRIO_MAX): Define.
	* include/mqueue.h: New file.
	* include/cygwin/version.h: Bump API minor number.
@
text
@d122 1
a122 1
DLL_IMPORTS:=$(w32api_lib)/libkernel32.a $(w32api_lib)/libadvapi32.a
@


1.193
log
@	* Makefile.in (DLL_OFILES): Add fhandler_procnet.o.
	* autoload.cc (GetAdaptersAddresses): Define.
	* devices.h (FH_PROCNET): Define new device.
	* devices.in (dev_procnet_storage): Add "/proc/net" entry.
	* devices.cc: Regenerate.
	* dir.cc (readdir_worker): Use isproc_dev macro.
	* dtable.cc (build_fh_pc): Add FH_PROCNET.
	* fhandler.h (class fhandler_procnet): New class.
	* fhandler_proc.cc: Add "net" subdirectory handling.
	* fhandler_procnet.cc: New file handling "/proc/net" directory.
	* path.cc (isvirtual_dev): Move to path.h.
	* path.h (isproc_dev): New macro to identify /proc files by device.
	(isvirtual_dev): Moved here.  Define using isproc_dev.
	* syscalls.cc (unlink): Use isproc_dev macro.
	* wincap.h (wincapc::has_gaa_prefixes): New element.
	(wincapc::has_gaa_on_link_prefix): New element.
	* wincap.cc: Implement above elements throughout.
	(wincapc::init): Check XP for service pack and set has_gaa_prefixes
	appropriately.
	* include/cygwin/in6.h: Include asm/byteorder.h.
@
text
@d140 7
a146 7
	passwd.o path.o pinfo.o pipe.o poll.o pthread.o regcomp.o regerror.o \
	regexec.o regfree.o registry.o resource.o rexec.o rcmd.o scandir.o \
	sched.o sec_acl.o sec_helper.o security.o select.o sem.o shared.o shm.o \
	sigfe.o signal.o sigproc.o smallprint.o spawn.o strace.o strptime.o \
	strsep.o strsig.o sync.o syscalls.o sysconf.o syslog.o termios.o \
	thread.o timelocal.o timer.o times.o tty.o uinfo.o uname.o v8_regexp.o \
	v8_regerror.o v8_regsub.o wait.o wincap.o window.o winf.o \
@


1.192
log
@	* Makefile.in (DLL_OFILES): Add minires-os-if.o and minires.o.
	(SUBLIBS): Add libresolv.a.
	Add rule for libresolv.a.
	* autoload.cc: Fix return code handling for IP Helper API in case
	of being unable to load iphlpapi.dll.
	(DnsQuery_A): Define.
	(DnsRecordListFree): Define.
	* cygwin.din: Export resolver functions.
	* include/resolv.h: New header.
	* include/arpa/nameser.h: New header.
	* include/arpa/nameser_compat.h: New header.
	* include/cygwin/version.h: Bump API minor number.
	* libc/minires-os-if.c: New file.
	* libc/minires.c: New file.
	* libc/minires.h: New file.
@
text
@d2 2
a3 1
# Copyright 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005 Red Hat, Inc.
d133 13
a145 13
	fhandler_process.o fhandler_random.o fhandler_raw.o fhandler_registry.o \
	fhandler_serial.o fhandler_socket.o fhandler_tape.o fhandler_termios.o \
	fhandler_tty.o fhandler_virtual.o fhandler_windows.o fhandler_zero.o \
	flock.o fnmatch.o fork.o fts.o ftw.o getopt.o glob.o grp.o heap.o \
	hookapi.o inet_addr.o inet_network.o init.o ioctl.o ipc.o localtime.o \
	lsearch.o malloc_wrapper.o memmem.o minires-os-if.o minires.o \
	miscfuncs.o mktemp.o mmap.o msg.o net.o netdb.o nftw.o ntea.o passwd.o \
	path.o pinfo.o pipe.o poll.o pthread.o regcomp.o regerror.o regexec.o \
	regfree.o registry.o resource.o rexec.o rcmd.o scandir.o sched.o \
	sec_acl.o sec_helper.o security.o select.o sem.o shared.o shm.o sigfe.o \
	signal.o sigproc.o smallprint.o spawn.o strace.o strptime.o strsep.o \
	strsig.o sync.o syscalls.o sysconf.o syslog.o termios.o thread.o \
	timelocal.o timer.o times.o tty.o uinfo.o uname.o v8_regexp.o \
@


1.191
log
@2006-07-25  Corinna Vinschen  <corinna@@vinschen.de>

	* include/cygwin/version.h: Bump DLL version to 1.7.0.

2006-07-25  Corinna Vinschen  <corinna@@vinschen.de>

	* select.h: Remove.
	* fhandler_socket.cc: Don't include select.h.
	* select.cc: Ditto.

2006-07-25  Corinna Vinschen  <corinna@@vinschen.de>

	* cygtls.h: Drop socket related includes.
	(struct _local_storage): Remove exitsock and exitsock_sin. Add
	select_sockevt.
	* cygtls.cc: Accomodate above change throughout.
	* fhandler.h (class fhandler_socket): Make wsock_evt public.
	* fhandler_socket.cc (fhandler_socket::fhandler_socket): Accomodate
	reordering members.
	(fhandler_socket::evaluate_events): Drop FD_CONNECT event as soon as
	it gets read once.  Never remove FD_WRITE event here.
	(fhandler_socket::wait_for_events): Wait 50 ms instead of INFINITE for
	socket events.
	(fhandler_socket::accept): Fix conditional.  Set wsock_events members
	of accepted socket to useful start values.
	(fhandler_socket::recv_internal): Always drop FD_READ/FD_OOB events from
	wsock_events after the call to WSARecvFrom.
	(fhandler_socket::send_internal): Drop FD_WRITE event from wsock_events
	if the call to WSASendTo fails with WSAEWOULDBLOCK.  Fix return value
	condition.
	* select.cc (struct socketinf): Change to accomodate using socket event
	handling.
	(peek_socket): Use event handling for peeking socket.
	(thread_socket): Ditto.
	(start_thread_socket): Ditto.
	(socket_cleanup): Same here.
	* tlsoffsets.h: Regenerate.

2006-07-20  Corinna Vinschen  <corinna@@vinschen.de>

	* fhandler.h (class fhandler_socket): Rearrange slightly to keep
	event handling methods and members together.  Drop owner status flag.
	Split wait method.  Rename event handling methods for readability.
	* fhandler_socket.cc (struct wsa_event): Add owner field.
	(LOCK_EVENTS): New macro.
	(UNLOCK_EVENTS): Ditto.
	(fhandler_socket::init_events): rename from prepare.
	(fhandler_socket::evaluate_events): First half of former wait method.
	Do everything but wait.  Allow specifiying whether or not events from
	event_mask should be erased from wsock_events->events.  Simplify
	OOB handling.  Allow sending SIGURG to any process (group).
	(fhandler_socket::wait_for_events): Second half of former wait method.
	Call evaluate_events and wait in a loop if socket is blocking.
	(fhandler_socket::release_events): Rename from release.
	(fhandler_socket::connect): Accomodate above name changes.
	(fhandler_socket::accept): Ditto.
	(fhandler_socket::recv_internal): Ditto.
	(fhandler_socket::send_internal): Ditto.
	(fhandler_socket::close): Ditto.
	(fhandler_socket::fcntl): Always set owner to given input value on
	F_SETOWN.  Handle F_GETOWN.
	* net.cc (fdsock): Accomodate above name changes.

2006-07-20  Corinna Vinschen  <corinna@@vinschen.de>

	* fhandler_socket.cc (fhandler_socket::wait): Set Winsock errno to
	WSAEWOULDBLOCK instead of WSAEINPROGRESS.

2006-07-18  Brian Ford  <Brian.Ford@@FlightSafety.com>
	    Corinna Vinschen  <corinna@@vinschen.de>

	* winsup.h (mmap_region_status): New enum.
	(mmap_is_attached_or_noreserve_page): Adjust prototype and rename
	as below.
	* mmap.cc (mmap_is_attached_or_noreserve_page):  Rename
	mmap_is_attached_or_noreserve.  Add region length parameter.
	Return enum above.
	* exceptions.cc (_cygtls::handle_exceptions): Accomodate above.
	* fhandler.cc (fhandler_base::raw_read): Call above for NOACCESS
	errors and retry on success to allow reads into untouched
	MAP_NORESERVE buffers.

2006-07-18  Corinna Vinschen  <corinna@@vinschen.de>

	* cygwin.din (posix_openpt): Export.
	* tty.cc (posix_openpt): New function.
	* include/cygwin/stdlib.h (posix_openpt): Declare.
	* include/cygwin/version.h: Bump API minor number.

2006-07-14  Corinna Vinschen  <corinna@@vinschen.de>

	* security.cc (get_token_group_sidlist): Always add the interactive
	group to the token.  Add comment.  Create logon_id group SID by
	copying it from incoming group list.
	(create_token): Add subauth_token parameter.  Use information in
	subauth_token if present.  Tweak SourceIdentifier if subauth_token
	is present for debugging purposes.
	* security.h (create_token): Add subauth_token parameter in declaration.
	* syscalls.cc (seteuid32): Call subauth first.  Call create_token
	regardless.  Use subauth token in call to create_token if subauth
	succeeded.

2006-07-13  Corinna Vinschen  <corinna@@vinschen.de>

	* include/netinet/in.h: Update copyright.

2006-07-13  Corinna Vinschen  <corinna@@vinschen.de>

	* fhandler_socket.cc (fhandler_socket::wait): Rework function so that
	WaitForMultipleObjects is really only called when necessary.

2006-07-12  Corinna Vinschen  <corinna@@vinschen.de>

	* include/netdb.h: Declare rcmd, rcmd_af, rexec, rresvport,
	rresvport_af, iruserok, iruserok_sa, ruserok.

2006-07-12  Corinna Vinschen  <corinna@@vinschen.de>

	* Makefile.in (DLL_OFILES): Drop iruserok.o.  Add rcmd.o.
	* autoload.cc (rcmd): Drop definition.
	* cygwin.din: Export bindresvport, bindresvport_sa, iruserok_sa,
	rcmd_af, rresvport_af.
	* net.cc (cygwin_rcmd): Remove.
	(last_used_bindresvport): Rename from last_used_rrecvport.
	(cygwin_bindresvport_sa): New function implementing bindresvport_sa.
	(cygwin_bindresvport): New function implementing bindresvport.
	(cygwin_rresvport): Remove.
	* include/cygwin/version.h: Bump API minor number.
	* include/netinet/in.h: Declare bindresvport and bindresvport_sa.
	* libc/iruserok.c: Remove file.
	* libc/rcmd.cc: New file implementing rcmd, rcmd_af, rresvport,
	rresvport_af, iruserok_sa, iruserok and ruserok.

2006-07-12  Corinna Vinschen  <corinna@@vinschen.de>

	* fhandler_socket.cc (fhandler_socket::getsockname): Return valid
	result for unbound sockets.

2006-07-11  Corinna Vinschen  <corinna@@vinschen.de>

	* fhandler_socket.cc (fhandler_socket::fixup_after_fork): Handle
	wsock_mtx and wsock_evt on fork, thus handling close_on_exec correctly.
	(fhandler_socket::fixup_after_exec): Drop misguided attempt to handle
	close_on_exec here.
	(fhandler_socket::dup): Call fixup_after_fork with NULL parent.
	Add comment.
	(fhandler_socket::set_close_on_exec): Handle wsock_mtx and wsock_evt.

2006-07-10  Corinna Vinschen  <corinna@@vinschen.de>

	* fhandler.h (class fhandler_socket): Add wsock_mtx, wsock_evt
	and wsock_events members.  Remove closed status flag, add listener
	status flag.  Accomodate new implementation of socket event handling
	methods.  Declare recv* and send* functions ssize_t as the POSIX
	equivalents.
	(fhandler_socket::recv_internal): Declare.
	(fhandler_socket::send_internal): Ditto.
	* fhandler_socket.cc (EVENT_MASK): Define mask of selected events.
	(fhandler_socket::fhandler_socket): Initialize new members.
	(fhandler_socket::af_local_setblocking): Don't actually set the
	socket to blocking mode.  Keep sane event selection.
	(fhandler_socket::af_local_unsetblocking): Don't actually set the
	socket to previous blocking setting, just remember it.
	(struct wsa_event): New structure to keep event data per shared
	socket.
	(NUM_SOCKS): Define number of shared sockets concurrently handled by
	all active Cygwin processes.
	(wsa_events): New shared datastructure keeping all wsa_event records.
	(socket_serial_number): New shared variable to identify shared sockets.
	(wsa_slot_mtx): Global mutex to serialize wsa_events access.
	(search_wsa_event_slot): New static function to select a new wsa_event
	slot for a new socket.
	(fhandler_socket::prepare): Rewrite.  Prepare event selection
	per new socket.
	(fhandler_socket::wait): Rewrite.  Wait for socket events in thread
	safe and multiple process safe.
	(fhandler_socket::release): Rewrite.  Close per-socket descriptor
	mutex handle and event handle.
	(fhandler_socket::dup): Duplicate wsock_mtx and wsock_evt.  Fix
	copy-paste error in debug output.
	(fhandler_socket::connect): Accomodate new event handling.
	(fhandler_socket::listen): Set listener flag on successful listen.
	(fhandler_socket::accept): Accomodate new event handling.
	(fhandler_socket::recv_internal): New inline method centralizing
	common recv code.
	(fhandler_socket::recvfrom): Call recv_internal now.
	(fhandler_socket::recvmsg): Ditto.  Streamline copying from iovec
	to WSABUF.
	(fhandler_socket::send_internal): New inline method centralizing
	common send code.
	(fhandler_socket::sendto): Call send_internal now.
	(fhandler_socket::sendmsg): Ditto.  Streamline copying from iovec
	to WSABUF.
	(fhandler_socket::close): Call release now.
	(fhandler_socket::ioctl): Never actually switch to blocking mode.
	Just keep track of the setting.
	* net.cc (fdsock): Call prepare now.
	(cygwin_connect): Revert again to event driven technique.
	(cygwin_accept): Ditto.
	* poll.cc (poll): Don't call recvfrom on a listening socket.
	Remove special case for failing recvfrom.
	* include/sys/socket.h: Declare recv* and send* functions ssize_t as
	requested by POSIX.

2006-07-07  Corinna Vinschen  <corinna@@vinschen.de>

	* net.cc (cygwin_inet_ntop): Fix data type of forth parameter.

2006-07-06  Corinna Vinschen  <corinna@@vinschen.de>

	* include/cygwin/in6.h (struct in6_addr): Fix typo.

2006-07-06  Corinna Vinschen  <corinna@@vinschen.de>

	* cygwin.din: Export in6addr_any, in6addr_loopback, freeaddrinfo,
	gai_strerror, getaddrinfo, getnameinfo.
	* fhandler_socket.cc: Include cygwin/in6.h.
	(get_inet_addr): Accomodate AF_INET6 usage.
	(fhandler_socket::connect): Ditto.
	(fhandler_socket::listen): Ditto.
	(fhandler_socket::sendto): Ditto.
	* net.cc: Include cygwin/in6.h.
	(in6addr_any): Define.
	(in6addr_loopback): Define.
	(cygwin_socket): Accomodate AF_INET6 usage.
	(socketpair): Bind socketpairs only to loopback for security.
	(inet_pton4): New static function.
	(inet_pton6): Ditto.
	(cygwin_inet_pton): New AF_INET6 aware inet_pton implementation.
	(inet_ntop4): New static function.
	(inet_ntop6): Ditto.
	(cygwin_inet_ntop): New AF_INET6 aware inet_ntop implementation.
	(ga_aistruct): New static function.
	(ga_clone): Ditto.
	(ga_echeck): Ditto.
	(ga_nsearch): Ditto.
	(ga_port): Ditto.
	(ga_serv): Ditto.
	(ga_unix): Ditto.
	(gn_ipv46): Ditto.
	(ipv4_freeaddrinfo): Ditto.
	(ipv4_getaddrinfo): Ditto.
	(ipv4_getnameinfo): Ditto.
	(gai_errmap_t): New structure holding error code - error string mapping.
	(cygwin_gai_strerror): New function implementing gai_strerror.
	(w32_to_gai_err): New static function.
	(get_ipv6_funcs): Ditto.
	(load_ipv6_funcs): Ditto.
	(cygwin_freeaddrinfo): New function implementing freeaddrinfo.
	(cygwin_getaddrinfo): New function implementing getaddrinfo.
	(cygwin_getnameinfo): New function implementing getnameinfo.
	* include/netdb.h: Include stdint.h and cygwin/socket.h.  Define
	data types and macros used by getaddrinfo and friends.  Declare
	freeaddrinfo, gai_strerror, getaddrinfo and getnameinfo.
	* include/cygwin/in.h: Add IPv6 related IPPROTOs. Remove definition
	of struct sockaddr_in6.  Include cygwin/in6.h instead.
	* include/cygwin/in6.h: New header file defining IPv6 releated
	data types and macros.
	* include/cygwin/socket.h: Enable AF_INET6 and PF_INET6.  Add
	IPv6 related socket options.
	* include/cygwin/version.h: Bump API minor number.

2006-07-06  Corinna Vinschen  <corinna@@vinschen.de>

	* autoload.cc (DsGetDcNameA): Define.
	(NetGetAnyDCName): Define.
	* security.cc: Include dsgetdc.h.
	(DsGetDcNameA): Declare.
	(DS_FORCE_REDISCOVERY): Define.
	(get_logon_server): Add bool parameter to control rediscovery of DC.
	Use DsGetDcNameA function if supported, NetGetDCName/NetGetAnyDCName
	otherwise.
	(get_server_groups): Rediscover DC if get_user_groups fails and
	try again.
	(get_reg_security): Use correct error code macro when testing
	RegGetKeySecurity return value.
	* security.h (get_logon_server): Remove default vaue from wserver
	parameter.  Add rediscovery parameter.
	* uinfo.cc (cygheap_user::env_logsrv): Accomodate rediscovery parameter
	in call to get_logon_server.
@
text
@d137 9
a145 9
	lsearch.o malloc_wrapper.o memmem.o miscfuncs.o mktemp.o mmap.o msg.o \
	net.o netdb.o nftw.o ntea.o passwd.o path.o pinfo.o pipe.o poll.o \
	pthread.o regcomp.o regerror.o regexec.o regfree.o registry.o resource.o \
	rexec.o rcmd.o scandir.o sched.o sec_acl.o sec_helper.o security.o \
	select.o sem.o shared.o shm.o sigfe.o signal.o sigproc.o smallprint.o \
	spawn.o strace.o strptime.o strsep.o strsig.o sync.o syscalls.o \
	sysconf.o syslog.o termios.o thread.o timelocal.o timer.o times.o tty.o \
	uinfo.o uname.o v8_regexp.o v8_regerror.o v8_regsub.o wait.o wincap.o \
	window.o winf.o \
d222 1
a222 1
SUBLIBS:=$(PWD)/libpthread.a $(PWD)/libutil.a $(PWD)/libm.a $(PWD)/libc.a $(PWD)/libdl.a
d446 3
@


1.190
log
@	* Makefile.in (DLL_OFILES): Add inet_addr.o and inet_network.o.
	* autoload.cc (inet_addr): Drop definition.
	(inet_ntoa): Ditto.
	* net.cc: Forward declare cygwin_inet_aton and cygwin_inet_ntop.
	(cygwin_inet_ntoa): Call cygwin_inet_ntop instead of Winsock inet_ntoa.
	(cygwin_inet_addr): Remove here.
	(cygwin_inet_aton): Ditto.
	(cygwin_inet_network): Ditto.
	* libc/inet_addr.c: New file implementing cygwin_inet_aton and
	cygwin_inet_addr.
	* libc/inet_network.c: New file implementing cygwin_inet_network.
@
text
@d136 5
a140 5
	hookapi.o inet_addr.o inet_network.o init.o ioctl.o ipc.o iruserok.o \
	localtime.o lsearch.o malloc_wrapper.o memmem.o miscfuncs.o mktemp.o \
	mmap.o msg.o net.o netdb.o nftw.o ntea.o passwd.o path.o pinfo.o pipe.o \
	poll.o pthread.o regcomp.o regerror.o regexec.o regfree.o registry.o \
	resource.o rexec.o scandir.o sched.o sec_acl.o sec_helper.o security.o \
@


1.190.2.1
log
@	* Makefile.in (OBSOLETE_FUNCTIONS): Add timezone.
	* include/cygwin/time.h: Drop conditional timezone definitions.
	(timezone): Declare as extern symbol referring _timezone variable.
@
text
@d159 1
a159 1
		    telldir tmpfile truncate timezone
@


1.190.2.2
log
@	* Makefile.in (install-libs): Overwrite newlib's libg.a with symlink
	to libcygwin.a.
@
text
@a306 1
	cd $(tooldir)/lib && ln -sf libcygwin.a libg.a
@


1.189
log
@	* Makefile.in (DLL_OFILES): Add rexec.o.
	* autoload.cc (inet_network): Drop definition.
	(rexec): Ditto.
	* net.cc (rexec): Drop extern declaration.
	(inet_network): Ditto.
	(cygwin_inet_network): Implement using inet_addr.
	(cygwin_rexec): Remove.
	* libc/rexec.cc: New file.
@
text
@d136 10
a145 9
	hookapi.o init.o ioctl.o ipc.o iruserok.o localtime.o lsearch.o \
	malloc_wrapper.o memmem.o miscfuncs.o mktemp.o mmap.o msg.o net.o netdb.o \
	nftw.o ntea.o passwd.o path.o pinfo.o pipe.o poll.o pthread.o regcomp.o \
	regerror.o regexec.o regfree.o registry.o resource.o rexec.o scandir.o \
	sched.o sec_acl.o sec_helper.o security.o select.o sem.o shared.o shm.o \
	sigfe.o signal.o sigproc.o smallprint.o spawn.o strace.o strptime.o \
	strsep.o strsig.o sync.o syscalls.o sysconf.o syslog.o termios.o thread.o \
	timelocal.o timer.o times.o tty.o uinfo.o uname.o v8_regexp.o \
	v8_regerror.o v8_regsub.o wait.o wincap.o window.o winf.o \
@


1.189.2.1
log
@	* Merge HEAD into cv-branch.
@
text
@d136 9
a144 10
	hookapi.o inet_addr.o inet_network.o init.o ioctl.o ipc.o iruserok.o \
	localtime.o lsearch.o malloc_wrapper.o memmem.o miscfuncs.o mktemp.o \
	mmap.o msg.o net.o netdb.o nftw.o ntea.o passwd.o path.o pinfo.o pipe.o \
	poll.o pthread.o regcomp.o regerror.o regexec.o regfree.o registry.o \
	resource.o rexec.o scandir.o sched.o sec_acl.o sec_helper.o security.o \
	select.o sem.o shared.o shm.o sigfe.o signal.o sigproc.o smallprint.o \
	spawn.o strace.o strptime.o strsep.o strsig.o sync.o syscalls.o \
	sysconf.o syslog.o termios.o thread.o timelocal.o timer.o times.o tty.o \
	uinfo.o uname.o v8_regexp.o v8_regerror.o v8_regsub.o wait.o wincap.o \
	window.o winf.o \
@


1.189.2.2
log
@	* Makefile.in (DLL_OFILES): Drop iruserok.o.  Add rcmd.o.
	* autoload.cc (rcmd): Drop definition.
	* cygwin.din: Export bindresvport, bindresvport_sa, iruserok_sa,
	rcmd_af, rresvport_af.
	* net.cc (cygwin_rcmd): Remove.
	(last_used_bindresvport): Rename from last_used_rrecvport.
	(cygwin_bindresvport_sa): New function implementing bindresvport_sa.
	(cygwin_bindresvport): New function implementing bindresvport.
	(cygwin_rresvport): Remove.
	* include/cygwin/version.h: Bump API minor number.
	* include/netinet/in.h: Declare bindresvport and bindresvport_sa.
	* libc/iruserok.c: Remove file.
	* libc/rcmd.cc: New file implementing rcmd, rcmd_af, rresvport,
	rresvport_af, iruserok_sa, iruserok and ruserok.
@
text
@d136 5
a140 5
	hookapi.o inet_addr.o inet_network.o init.o ioctl.o ipc.o localtime.o \
	lsearch.o malloc_wrapper.o memmem.o miscfuncs.o mktemp.o mmap.o msg.o \
	net.o netdb.o nftw.o ntea.o passwd.o path.o pinfo.o pipe.o poll.o \
	pthread.o regcomp.o regerror.o regexec.o regfree.o registry.o resource.o \
	rexec.o rcmd.o scandir.o sched.o sec_acl.o sec_helper.o security.o \
@


1.188
log
@* Makefile.in (libdl.a): New library.
@
text
@d139 2
a140 2
	regerror.o regexec.o regfree.o registry.o resource.o scandir.o sched.o \
	sec_acl.o sec_helper.o security.o select.o sem.o shared.o shm.o \
@


1.187
log
@	* Makefile.in (clean): Also delete *.dbg.
@
text
@d221 1
a221 1
SUBLIBS:=$(PWD)/libpthread.a $(PWD)/libutil.a $(PWD)/libm.a $(PWD)/libc.a
d442 3
@


1.186
log
@* Makefile.in (DLL_OFILES): Add winf.o.
* spawn.cc: Move command line handling stuff into winf.cc.
* winf.h: New file.
* winf.cc: New file.
@
text
@d368 1
a368 1
	-rm -f *.o *.dll *.a *.exp junk *.base version.cc regexp/*.o winver_stamp *.exe *.d *stamp* *_magic.h sigfe.s cygwin.def
@


1.185
log
@	* libc: Add subdirectory.
	* Makefile.in (VPATH): Add libc subdir.
	(DLL_OFILES): Add strptime.o and timelocal.o.
	* cygwin.din: Export timelocal and timegm.
	* localtime.cc: Define STD_INSPIRED unconditionally.
	* include/cygwin/time.h (timelocal): Add declaration.
	(timegm): Ditto.
	* include/cygwin/version.h: Bump API minor version.
	* libc/strptime.cc: New file.
	* libc/timelocal.cc: New file.
	* libc/timelocal.h: New file.
@
text
@d144 1
a144 1
	v8_regerror.o v8_regsub.o wait.o wincap.o window.o \
@


1.184
log
@* memmem.cc: New file.
* include/cygwin/version.h: Bump API version number to 142.
* cygwin.din: Export memmem.
@
text
@d17 1
a17 1
VPATH:=$(srcdir):$(CONFIG_DIR):$(srcdir)/regex:$(srcdir)/regexp:$(srcdir)/lib
d141 4
a144 4
	sigfe.o signal.o sigproc.o smallprint.o spawn.o strace.o strsep.o \
	strsig.o sync.o syscalls.o sysconf.o syslog.o termios.o thread.o \
	timer.o times.o tty.o uinfo.o uname.o v8_regexp.o v8_regerror.o \
	v8_regsub.o wait.o wincap.o window.o \
@


1.183
log
@Check in previously ChangeLoged entry.
@
text
@d137 2
a138 2
	malloc_wrapper.o miscfuncs.o mktemp.o mmap.o msg.o net.o netdb.o nftw.o \
	ntea.o passwd.o path.o pinfo.o pipe.o poll.o pthread.o regcomp.o \
@


1.182
log
@* Makefile.in (MKDIRP): Just use raw $(INSTALL) rather than $(INSTALL_DATA).
Create directories with 755 permissions.
@
text
@d72 1
a72 1
MKDIRP:=$(INSTALL) -d
@


1.181
log
@* Makefile.in: Make sure that directories are created prior to copying to them.
@
text
@d72 1
a72 1
MKDIRP:=$(INSTALL_DATA) -d
@


1.180
log
@* Makefile.in (CXXFLAGS): Use 'override' to correctly set flags to generate
dependencies when invoked from top-level make.
@
text
@d72 1
d301 1
d310 1
d318 1
@


1.179
log
@	* Makefile.in (DLL_OFILES): Add fts.o, ftw.o, nftw.o.
	* cygwin.din: Export fts_children, fts_close, fts_get_clientptr,
	fts_get_stream, fts_open, fts_read, fts_set, fts_set_clientptr,
	ftw, nftw.
	* fts.c: New file, imported from FreeBSD.
	* ftw.c: Ditto.
	* nftw.c: Ditto.
	* include/fts.h: Ditto.
	* include/ftw.h: Ditto.
	* include/cygwin/version.h: Bump API minor number.
@
text
@d58 1
a58 1
CXXFLAGS=@@CXXFLAGS@@
@


1.178
log
@* Makefile.in (dtable_CFLAGS): Use -fomit-frame-pointer and -fcheck-new.
* cygheap.cc (cmalloc): Only emit system_printf warnings on failure if
DEBUGGING.
(crealloc): Ditto.
(ccalloc): Ditto.
* dtable.cc (build_fh_name): Treat NULL return from cnew as indicative of
EMFILE condition.
(build_fh_dev): Ditto.
(dtable::dup_worker): Handle NULL return from build_fh_pc.
(dtable::vfork_child_dup): Trust dup_worker to set errno.
* fhandler.h (fhandler_base::new): Mark as nothrow.
@
text
@d134 10
a143 9
	flock.o fnmatch.o fork.o getopt.o glob.o grp.o heap.o hookapi.o \
	init.o ioctl.o ipc.o iruserok.o localtime.o lsearch.o malloc_wrapper.o \
	miscfuncs.o mktemp.o mmap.o msg.o net.o netdb.o ntea.o passwd.o path.o \
	pinfo.o pipe.o poll.o pthread.o regcomp.o regerror.o regexec.o regfree.o \
	registry.o resource.o scandir.o sched.o sec_acl.o sec_helper.o security.o \
	select.o sem.o shared.o shm.o sigfe.o signal.o sigproc.o smallprint.o \
	spawn.o strace.o strsep.o strsig.o sync.o syscalls.o sysconf.o \
	syslog.o termios.o thread.o timer.o times.o tty.o uinfo.o uname.o \
	v8_regexp.o v8_regerror.o v8_regsub.o wait.o wincap.o window.o \
@


1.177
log
@* dllfixdbg: New perl script.
* configure.in: Detect objcopy, objdump, strip.
* configure: Regenerate.
* Makefile.in: Pass target objcopy/objdump to new dllfixdbg script.  Remove
previous perl check.
* cygwin.sc: Add .gnu_debuglink_overlay section for eventual replacement with
.gnu_debuglink section.  Revert move of cygheap to end of image.
@
text
@d233 1
@


1.176
log
@	* Makefile.in: Allow previous patch to work in a 64 bit environment.
@
text
@d2 1
a2 1
# Copyright 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003 Red Hat, Inc.
d68 3
d372 1
a372 1
$(TEST_DLL_NAME): $(LDSCRIPT) $(DLL_OFILES) $(DLL_IMPORTS) $(LIBSERVER) $(LIBC) $(LIBM) $(API_VER) Makefile winver_stamp
d378 1
a378 6
	@@$(NM) $@@ | perl -Minteger -n -e '/^((0{8})?61[0-9a-f]+) A __cygheap_end/ and do {$$cygheap_end = $$1; exit;};\
	    END { \
		die "ERROR: _cygheap_end not found in $@@\n" unless defined($$cygheap_end); \
		die "ERROR: _cygheap_end is not on a 64k boundary (0x$$cygheap_end)!\n" if (hex($$cygheap_end) & 0xffff);\
		exit 0; \
	    }'
@


1.175
log
@* Makefile.in: Warn when end of cygheap is not on 64k boundary.
* cygwin.sc: Try harder to ensure that cygheap is on a 64k boundary.  Move
cygheap to end of image to stop interference from unstripped debug regions.
@
text
@d375 1
a375 1
	@@$(NM) $@@ | perl -Minteger -n -e '/^(61[0-9a-f]+) A __cygheap_end/ and do {$$cygheap_end = $$1; exit;};\
@


1.174
log
@* Makefile.in: Avoid initial heap allocation since cygwin has its own heap.
@
text
@d375 6
@


1.173
log
@* Makefile.in: Build sync.o with -fomit-frame-pointer and -O3.
@
text
@d370 2
a371 1
	$(CXX) $(CXXFLAGS) -Wl,--gc-sections $(nostdlib) -Wl,-T$(firstword $^) -Wl,--out-implib,cygdll.a -shared -o $@@ \
@


1.172
log
@* cygwin.din: Export mkdtemp.
* mktemp.cc: New file.
* Makefile.in (DLL_OFILES): Add mktemp.o
@
text
@d265 1
@


1.171
log
@	* Makefile.in (DLL_OFILES): Add fhandler_mailslot.o.
	* devices.h (FH_KMSG): Define new device.
	* devices.in: Add "/dev/kmsg" entry.
	* devices.cc: Regenerate.
	* dtable.cc (build_fh_pc): Handle case FH_KMSG.
	* fhandler.h (class fhandler_mailslot): New class.
	(class select_stuff): Add device_specific_mailslot pointer.
	* fhandler_mailslot.cc: New file.
	* select.cc (peek_mailslot): New function.
	(verify_mailslot): Ditto.
	(struct mailslotinf): New stuct to handle select on mailslots.
	(thread_mailslot): New function.
	(start_thread_mailslot): Ditto.
	(mailslot_cleanup): Ditto.
	(fhandler_mailslot::select_read): New method.
	* syslog.cc (klog_guard): New muto.
	(dev_kmsg): Local mailslot for kernel message device.
	(vklog): New function.
	(klog): Ditto.
	* winsup.h (vklog): Declare.
	(klog): Ditto.
	* include/sys/syslog.h: Define _PATH_KLOG.
@
text
@d133 2
a134 2
	miscfuncs.o mmap.o msg.o net.o netdb.o ntea.o passwd.o path.o pinfo.o pipe.o \
	poll.o pthread.o regcomp.o regerror.o regexec.o regfree.o \
@


1.170
log
@* Makefile.in (DLL_O_FILES): Add fhandler_netdrive.o.
* fhandler_netdrive.cc: Placeholder file for future development.
* devices.h (FH_NETDRIVE): Define new virtual device type.
(netdrive_dev): Define.
* devices.in (dev_netdrive_storage): Define.
* devices.cc: Regenerate.
@
text
@d126 4
a129 4
	fhandler_dsp.o fhandler_fifo.o fhandler_floppy.o fhandler_mem.o \
	fhandler_netdrive.o fhandler_nodevice.o fhandler_proc.o fhandler_process.o \
	fhandler_random.o fhandler_raw.o fhandler_registry.o fhandler_serial.o \
	fhandler_socket.o fhandler_tape.o fhandler_termios.o \
@


1.169
log
@* wininfo.h (wininfo::timer_active): Delete.
(wininfo::itv): Ditto.
(wininfo::start_time): Ditto.
(wininfo::window_started): Ditto.
(wininfo::getitimer): Ditto.
(wininfo::setitimer): Ditto.
(wininfo::wininfo): Ditto.
(wininfo::lock): New method.
(wininfo::release): Ditto.
* window.cc: Use new lock/acquire wininfo methods throughout.
(wininfo::wininfo): Delete
(wininfo::getitimer): Ditto.
(wininfo::setitimer): Ditto.
(getitimer): Ditto.
(setitimer): Ditto.
(ualarm): Ditto.
(alarm): Ditto.
(wininfo::lock): Define new function.
(wininfo::release): Ditto.
(wininfo::process): Delete WM_TIMER handling.
* timer.cc (struct timetracker): Delete it, flags.  Add it_interval,
interval_us, sleepto_us, running, init_muto(), syncthread, and gettime().
(ttstart): Make NO_COPY.
(lock_timer_tracker): New class.
(timer_tracker::timer_tracker): Distinguish ttstart case.
(timer_tracker::~timer_tracker): New destructor.  Clean out events, and reset
magic.
(timer_tracker::init_muto): New method.
(to_us): Round up as per POSIX.
(timer_thread): Reorganize to match timer_tracker::settime and
timer_tracker::gettime.  Call sig_send without wait.  Call auto_release.
(timer_tracker::settime): Reorganize logic to avoid race.  Call gettime to
recover old value.
(timer_tracker::gettime): New method.
(timer_create): Properly set errno on invalid timerid.  Use new
lock_timer_tracker method.
(timer_delete): Ditto.  Simplify code slightly.
(timer_gettime): New function.
(fixup_timers_after_fork): Reinit ttstart.
(getitimer): New implementation.
(setitimer): Ditto.
(ualarm): Ditto.
(alarm): Ditto.
* cygwin.din: Export timer_gettime.
* winsup.h: Remove has has_visible_window_station declaration.
* Makefile.in (DLL_OFILES): Add lsearch.o.
* cygthread.h (cygthread::notify_detached): New element.
(cygthread::cygthread): Take optional fourth argument signifying event to
signal on thread completion.
* cygthread.cc (cygthread::stub): Signal notify_detached event, if it exists.
(cygthread::cygthread): Initialize notify_detached from fourth argument.
(cygthread::detach): Wait for notify_detached field is present.
* lsearch.cc: New file.
* search.h: Ditto.
* include/cygwin/version.h: Bump API minor number to 126.
* cygwin.din: Export lsearch, lfind.
@
text
@d127 1
a127 1
	fhandler_nodevice.o fhandler_proc.o fhandler_process.o \
d238 1
@


1.168
log
@* include/ctype.h: New file.
* ctype.cc: Ditto.
* Makefile.in: Add ctype.o to DLL_OFILES.
* cygwin.din: Remove _ctype_ptr (for now?).
@
text
@d120 1
a120 1
# Please maintain this list in sorted order, with maximum files per 85 col line
d132 2
a133 2
	init.o ioctl.o ipc.o iruserok.o localtime.o malloc_wrapper.o miscfuncs.o \
	mmap.o msg.o net.o netdb.o ntea.o passwd.o path.o pinfo.o pipe.o \
@


1.167
log
@* Makefile.in (DLL_OFILES): Add hookapi.o.  Eliminate some cruft.
* cygheap.h (cygheap_types): Add new enum: HEAP_1_HOOK.
(hook_chain): New struct.
(init_cygheap::hooks): Define new element.
* cygheap.cc (cygheap_fixup_in_child): Zero hook chain on exec.
* dcrt0.cc (dll_crt0_1): Call ld_preload just before calling main function.
* external.cc (cygwin_internal): Implement CW_HOOK.
* fork.cc (fork_child): Call fixup_hooks_after_fork.
* init.cc (cygwin_hmodule): Reinstate after a long absence.
* include/sys/cygwin.h: Define CW_HOOK.
* hookapi.cc: New file.
* select.cc (start_thread_socket): Add debugging output.
* fhandler_disk_file.cc (fhandler_disk_file::fchmod): gcc 4.x accommodation.
* fhandler_socket.cc (fhandler_socket::connect): Make sure that err is
initialized.
@
text
@d122 4
a125 4
DLL_OFILES:=assert.o autoload.o bsdlib.o cxx.o cygheap.o cygthread.o cygtls.o \
	dcrt0.o debug.o delqueue.o devices.o dir.o dlfcn.o dll_init.o dtable.o \
	environ.o errno.o exceptions.o exec.o external.o fcntl.o fhandler.o \
	fhandler_clipboard.o fhandler_console.o fhandler_disk_file.o \
@


1.166
log
@* cygthread.h (cygthread::terminate_thread): Reflect return value.
* cygthread.cc (cygthread::detach): Be more careful about ensuring that sigwait
is properly waited for to avoid later missynchronization.
(cygthread::terminate_thread): Return true if thread was actually terminated
and all handles were closed.
* fhandler_base.cc (fhandler_base::raw_read): Use signal_read_state rather than
raw calls to win32 api.
(fhandler_base::read): Ditto.
* fhandler.h (fhandler_pipe::fixup_after_exec): Use method to create read_state
signalling.
(fhandler_pipe::create): Ditto.
* Makefile.in: Make some more files -fomit-frame-pointer.
@
text
@d120 1
a120 1
# Please maintain this list in sorted order, with maximum files per 80 col line
d130 2
a131 2
	fhandler_tty.o fhandler_virtual.o fhandler_windows.o \
	fhandler_zero.o flock.o fnmatch.o fork.o getopt.o glob.o grp.o heap.o \
d134 2
a135 2
	poll.o pthread.o regcomp.o regerror.o regexec.o regfree.o registry.o \
	resource.o scandir.o sched.o sec_acl.o sec_helper.o security.o \
d257 1
d271 1
a271 1
	install install-libs install-headers -lgcc
a437 5
-lgcc:
	:

#

@


1.165
log
@	* Makefile.in: Create libutil.a from bsdlib.o exports.
	* bsdlib.cc (logwtmp): Move from syscalls.cc to here.
	(login): Ditto.
	(logout): Ditto.

	* winsup.h (EXPORT_ALIAS): New macro.
	* exec.cc: Define alias symbols using EXPORT_ALIAS macro.
	* syscalls.cc: Ditto.
	* times.cc: Ditto.
@
text
@d253 1
d257 1
@


1.164
log
@* Makefile.in (clean): Remove cygwin.def since it is autogenerated.
@
text
@d216 1
a216 1
SUBLIBS:=$(PWD)/libpthread.a $(PWD)/libm.a $(PWD)/libc.a
d417 3
d423 1
a423 1
$(PWD)/libc.a: speclib $(LIB_NAME) $(PWD)/libm.a libpthread.a
@


1.163
log
@* path.cc (is_unc_share): Remove redundant tests.
@
text
@d354 1
a354 1
	-rm -f *.o *.dll *.a *.exp junk *.base version.cc regexp/*.o winver_stamp *.exe *.d *stamp* *_magic.h sigfe.s
@


1.162
log
@	* Makefile.in (EXTRALIBS): Add libtextreadmode.a.
	(INSTOBJS): Add textreadmode.o.
	* textreadmode.c: New file.
@
text
@d51 1
a51 1

d56 1
a56 1
override CFLAGS+=-MMD ${$(*F)_CFLAGS} -fmerge-constants -ftracer
d365 1
a365 1
	$(CXX) $(CXXFLAGS) $(nostdlib) -Wl,-T$(firstword $^) -Wl,--out-implib,cygdll.a -shared -o $@@ \
@


1.161
log
@* Makefile.in (clean): Clean libserver, too.
* fhandler.cc (fhandler_base::~fhandler_base): Remove path_conv cleanup.
* syscalls.cc (chroot): Ditto.
* path.cc (path_conv::~path_conv): Define new destructor.
(conv_path_list_buf_size): Remove explicit path_conv cleanup.
* path.h (path_conv::~path_conv): Declare new destructor.
@
text
@d217 2
a218 2
EXTRALIBS:=libautomode.a libbinmode.a libtextmode.a
INSTOBJS:=automode.o binmode.o textmode.o
@


1.160
log
@* Makefile.in: Compile flock.o with -fomit-frame-pointer.
@
text
@d355 1
@


1.159
log
@* Makefile.in: Compile dlfcn.o with -fomit-frame-pointer.
@
text
@d252 1
@


1.158
log
@* Makefile.in: Compile delqueue.o with -fomit-frame-pointer.
@
text
@d228 1
@


1.157
log
@* Makefile.in: Compile syscalls.o with -fomit-frame-pointer.
* sigproc.cc: Eliminate unused variable.
@
text
@d225 1
@


1.156
log
@* Makefile.in (clean): Remove sigfe.s.
(sigfe.s): Ensure that sigfe.s will be regenerated if it does not exist.
* dll_init.cc (dll_dllcrt0): Simplify initializing tests.
* exceptions.cc (setup_handler): Detect when stub caller is either spinning or
has acquired the lock after being suspended to avoid windows problems with
suspending a win32 API call.
* cygtls.h (_cygtls::spinning): Declare new element.
* gendef: Remove unused _siglist_index and _siglist declaration.
(_sigfe): Set spinning element when potentially looping, waiting for lock.
(_sigbe): Ditto.
(_cygtls::lock): Ditto.
(_longjmp): Ditto.
* tlsoffsets.h: Regenerate.
* pinfo.cc (_pinfo::exit): Set final exit state here.  Call sigproc_terminate
if invoked with 'norecord'.  Clear any residual _cygtls stuff.
* winsup.h (exit_states): Define ES_FINAL.
* spawn.cc (spawn_guts): Don't call proc_terminate specifically when execing.
Let _pinfo::exit handle that case.
* sigproc.cc (wait_subproc): Always exit loop early when proc_loop_wait.
* init.cc (munge_threadfunc): Eliminate unused argument.
(dll_entry): Reflect above change in call to munge_threadfunc.
@
text
@d259 1
@


1.155
log
@* localtime.cc (localtime_r): Call tzset.
* Makefile.in: Make version.h/cygwin.din version check a warning since it is
not foolproof.
* cygheap.h (CYGHEAPSIZE): Bump size down.
* cygtls.h (_threadinfo::stacklock): New element.
(_threadinfo::pop): Make regparm.
(_threadinfo::lock): New function.
(_threadinfo::unlock): New function.
* cygtls.cc (_threadinfo::push): Wait for a lock on the stack before performing
the operation.
(_threadinfo::pop): Move to another file.
* cygwin.din: More SIGFE changes.
* exceptions.cc (try_to_debug): Always display messages on console.
(handle_exceptions): Unwind stack only when actually about to call sig_send.
(setup_handler): Lock stack prior to performing any operations.
* gendef (_sigfe): Ditto.
(_sigbe): Ditto.
(_threadinfo::pop): Ditto.  Move here.
* gen_tlsoffsets: Generate positive offsets.
* tlsoffsets.h: Regenerate.
@
text
@d227 1
d350 1
a350 1
	-rm -f *.o *.dll *.a *.exp junk *.base version.cc regexp/*.o winver_stamp *.exe *.d *stamp* *_magic.h
d441 3
a443 1
	@@touch $@@
@


1.154
log
@* Makefile.in (DLL_OFILES): Add strsig.o.
* cygtls.h (_local_storage::signamebuf) New element.
* sysconf.cc (sysconf): Implement _SC_RTSIG_MAX.
* tlsoffset.h: Regenerate.
* include/limits.h (_POSIX_RTSIG_MAX): New define.
(RTSIG_MAX): Ditto.
* include/cygwin/signal.h (SIGRTMIN): New define.
(SIGRTMAX): Ditto.
(NSIG): Bump.
* strsig.cc: New file.
@
text
@d387 1
a387 2
	@@echo Error: Version info is older than DLL API!;\
	false
@


1.153
log
@* sigproc.cc (sigproc_terminate): Don't close sendsig handle when execing since
we're not closing what we think we're closing.
(sig_send): Improve debugging when exiting due to no_signals_available.
* wincap.h (wincaps::cant_debug_dll_entry): New element.
* wincap.cc: Implement above element throughout.
* dcrt0.cc (initial_env): Accommodate changes necessary to allow initial
debugging for systems which do not allow debugging in dll_entry.
(dll_crt0_0): Add initial_env call back here.
* Makefile.in (install-man): Use mandir as target for installation.
* include/cygwin/version.h: Bump DLL minor number to 7 (should have been done
earlier).
@
text
@d113 1
a113 1
EXTRA_OFILES=$(bupdir1)/libiberty/random.o $(bupdir1)/libiberty/strsignal.o
d137 3
a139 3
	spawn.o strace.o strsep.o sync.o syscalls.o sysconf.o syslog.o \
	termios.o thread.o timer.o times.o tty.o uinfo.o uname.o v8_regexp.o \
	v8_regerror.o v8_regsub.o wait.o wincap.o window.o \
@


1.152
log
@* cygwin/include/signal.h: Add copyright notice.
* cygwin.din: Make clock SIGFE.  Add clock_gettime, sigwaitinfo, timer_create,
timer_delete, timer_settime.
* include/cygwin/version.h: Reflect above additions.
* fork.cc (fork_child): Call fixup_timers_after_fork.
* signal.cc (sigwait): Remove unused variable.
* timer.cc: New file.
(clock_gettime): Define new function.
(timer_tracker): Define new struct used by timer functions.
(timer_tracker::timer_tracker): New function.
(to_us): New function.
(timer_thread): New function.
(timer_tracker::settime): New function.
(timer_create): New function.
(timer_settime): New function.
(timer_delete): New function.
(fixup_timers_after_fork): New function.
* cygthread.cc: Bump thread count.
* signal.cc (sigwaitinfo): Define new function.
(sigwait): Redefine based on sigwaitinfo.
* include/cygwin/signal.h (sigwaitinfo): Declare.
(sigwait): Ditto.
* dtable.cc (dtable::vfork_parent_restore): Avoid double close of ctty when
ctty == ctty_on_hold.
* cygtls.h (_threadinfo::threadkill): New element.
(_threadinfo::set_threadkill): Declare new function.
(_threadinfo::reset_threadkill): Declare new function.
* dcrt0.cc (dcrt0_1): Call here so that it will be possible to attach to
running process with #(*& Windows Me/9x.
(initial_env): Try to initialize strace if uninitialized.
* gendef: Don't zero signal if threadkill is set since that will happen in the
called function.
* signal.cc (sigwait): Ensure cleanup in error conditions.
* sigproc.cc (sig_send): Clear packet mask storage.
(wait_subproc): Fill in child exit code in siginfo_t structure.
* thread.cc (pthread_kill): Set threadkill flag.
* tlsoffsets.h: Regenerate.  Throughout, use siginfo_t to fill out all signal
information for "kernel" signals.
* cygtls.h (_threadinfo::set_siginfo): Declare new function.
* cygtls.cc (_threadinfo::set_siginfo): Define new function.
* dcrt0.cc (do_exit): Accommodate siginfo_t considerations.
* exceptions.cc (handle_exceptions): Ditto.
(sig_handle_tty_stop): Ditto.
(ctrl_c_handler): Use killsys() to send signal.
(sigpacket::process): Rename from sig_handle.  Use siginfo_t field from
sigpacket for everything.
(tty_min::kill_pgrp): Accommodate siginfo_t considerations.
(fhandler_termios::bg_check): Ditto.
* fhandler_tty.cc (fhandler_tty_slave::ioctl): Use killsys() to send signal.
* signal.cc (kill_worker): Rewrite to use siginfo_t second argument.
(kill_pgrp): Ditto.
(kill0): Define new function pulled from kill().
(kill): Rewrite as frontend to kill0.
(killsys): Define new function.
* sigproc.cc (sigelem): Eliminate.
(sigpacket): Move to sigproc.h.  Subsume sigelem.
(pending_signals): Use sigpacket rather than sigelem for everything.
(sig_clear): Ditto.
(wait_sig): Ditto.
(sig_send): Rewrite to use siginfo_t argument.
(sig_send): New function wratpper to sig_send with siginfo_t argument.
(wait_subproc): Accommodate siginfo_t considerations.
* thread.cc (pthread_kill): Ditto.
* sigproc.h (sigpacket): Move here.
(sigpacket::process): Declare "new" function.
(sig_handle): Eliminate declaration.
(sig_send): Declare with new paramaters.
(killsys): Declare new function.
(kill_pgrp): Declare.
* winsup.h: Move some signal-specific stuff to sigproc.h.
* include/cygwin/signal.h: Tweak some siginfo_t stuff.
@
text
@d28 1
d302 1
a302 1
	    $(INSTALL_DATA) $$i $(tooldir)/man/man2/`basename $$i` ; \
d305 1
a305 1
	    $(INSTALL_DATA) $$i $(tooldir)/man/man3/`basename $$i` ; \
d308 1
a308 1
	    $(INSTALL_DATA) $$i $(tooldir)/man/man5/`basename $$i` ; \
d311 1
a311 1
	    $(INSTALL_DATA) $$i $(tooldir)/man/man7/`basename $$i` ; \
@


1.151
log
@* cygtls.h (_threadinfo::call): Remove regparm declaration to work around
compiler bug.
* autoload.cc (TryEnterCriticalSection): Remove.
* dcrt0.cc (dll_crt0_0): Delete inappropriate setting of _my_tls.stackptr to
NULL since it has really bad consequences.  Make 'si' an automatic variable.
* cygtls.cc (_threadinfo::init_thread): Correct thinko which caused thread list
to be allocated every time.
* cygtls.h (CYGTLS_PADSIZE): Define as const int.
* sync.h: Make multiple inclusion safe.
(muto::next): Eliminate.
(muto::exiting_thread): New variable.
(muto::set_exiting_thread): New function.
(new_muto): Change to use different section for mutos since c++ give
inexplicable warning in some cases otherwise.
(new_muto1): Ditto.
* dcrt0.cc (do_exit): Call muto::set_exiting_thread here.
* sync.cc (muto_start): Eliminate.
(muto::acquire): Always give exiting thread a lock.  Never give thread a lock
if exiting.
(muto::release): Ditto for releasing.
* dtable.cc (dtable::init_lock): Unline function and define here.
* dtable.h (lock_cs): Define as a muto since critical sections seem to work
oddly on Windows Me.
(lock): Accommodate switch to muto.
(unlock): Ditto.
* exceptions.cc (setup_handler): Don't worry about acquiring mutos since that
hasn't mattered for a long time.
(signal_exit): Ditto: muto stuff will be handled automatically on exit now.
* Makefile.in (DLL_IMPORTS): Link advapi32 to ensure proper DLL initialization.
* autoload.cc (RegCloseKey): Arbitrarily choose this function as a "seed" to
pull the advapi32 link library in.  So, comment out the autoloading.
* cygtls.cc (_threadinfo::init_thread): Just clear CYGTLS_PADSIZE.
(_threadinfo::remove): Add debugging.
(_threadinfo::find_tls): Ditto.
* cygtls.h (_threadinfo::padding): Make zero length (for now?).
* dcrt0.cc (dll_crt0_0): Move more initialization here from dll_crt0_1.
(dll_crt0_1): See above.
* dtable.h (dtable::lock): Remove commented out critical section locking.
* dtable.h (dtable::init_lock): Remove commented out critical section locking.
* dtable.h (dtable::unlock): Remove commented out critical section locking.
* exceptions.cc (interruptible): bool'ize.
* init.cc (threadfunc_fe): Revert to storing threadfunc at stack bottom.
(munge_threadfunc): Ditto.  Avoid adding overhead to calibration_thread.
(prime_threads): Don't initialize tls stuff.
(dll_entry): Make minor change to initialization order.
* tlsoffsets.h: Regenerate.
* sigproc.cc (wait_sig): Add sanity check for end of process thread exit.
* select.h: Make minor formatting change.
* Makefile.in: Add still more -fomit-frame-pointer functions.
* dtable.h (dtable::lock): New function.
(dtable::unlock): New function.
(dtable::init_lock): New function.
* cygheap.h (HEAP_TLS): Declare new enum value.
(init_cygheap::threadlist): Declare new array.
(init_cygheap::sthreads): Declare new variable.
(cygheap_fdmanip::~cygheap_fdmanip): Use new dtable lock/unlock functions.
(cygheap_fdnew::cygheap_fdnew): Ditto.
(cygheap_fdget::cygheap_fdget): Ditto.
* dtable.cc (dtable_init): Initialize fdtab critical section.
(dtable::fixup_after_fork): Ditto.
(dtable::fixup_after_exec): Ditto.
(dtable::dup2): Use lock/unlock calls to protect access to fdtab.
(dtable::find_fifo): Ditto.
(dtable::fixup_before_fork): Ditto.
(dtable::fixup_before_exec): Ditto.
(dtable::set_file_pointers_for_exec): Ditto.
(dtable::vfork_child_dup): Ditto.
(dtable::vfork_parent_restore): Ditto.
* syscalls.cc (close_all_files): Ditto.
* sync.h (muto::acquired): Declare new function.
(new_muto1): Declare new macro used to specify name of muto storage.
* sync.cc (muto::acquired): Define new function.
* cygthread.cc (cygthread::stub): Remove signal chain removal call since it is
handled during initialization now.
* cygthread.cc (cygthread::simplestub): Remove signal chain removal call since
it is handled during initialization now.
* cygtls.cc (sentry): New class used for locking.  Use throughout.
(_threadinfo::reset_exception): Don't pop stack.
(_threadinfo::find_tls): Move from exceptions.cc.
(_threadinfo::init_thread): Initialize array of threads rather than linked
list.  Take second argument indicating thread function for this thread.
(_threadinfo::remove): Search thread array rather than linked list.  Use sentry
to lock.  Only unlock if we got the lock.
(_threadinfo::find_tls): Ditto for first two.
(handle_threadlist_exception): Handle exceptions when manipulating the thread
list in case of premature thread termination.
(_threadinfo::init_threadlist_exceptions): Ditto.
* cygtls.h (TLS_STACK_SIZE): Decrease size.
(_threadinfo::padding): Add element to avoid overwriting lower part of stack.
(_threadinfo::remove): Add a "wait" argument to control how long we wait for a
lock before removing.
* exceptions.cc (init_exception_handler): Make global.  Take argument to
control exception handler being set.
(ctrl_c_handler): Wait forever when removing self from signal chain.
(_threadinfo::find_tls): Move to cygtls.cc.
(sig_handle): Reorganize detection for thread-specific signals.
* heap.cc (heap_init): Rework slightly.  Make fatal error more verbose.  Remove
malloc initialization since it can't happen during dll attach.
* init.cc (search_for): Move address to search for on stack here.
(threadfunc_ix): Ditto for stack offset.  Make shared so that stack walk
potentially only has to be done once when cygwin processes are running.
(threadfunc_fe): Use standard tls to store thread function (may change back
later).
(calibration_thread): New function.  Potentially called to find threadfunc_ix.
(munge_threadfunc): Search for "search_for" value on stack.  Output warning
when thread func not found on stack.  Use standard tls to store thread
function.
(prime_threads): New function.  Called to prime thread front end.
(dll_entry): Call dll_crt0_0 here when DLL_PROCESS_ATTACH.  Call prime_threads
here.  Try to remove thread from signal list here.
* sigproc.cc (wait_sig): Initialize threadlist exception stuff here.
* thread.cc (pthread::exit): Pass argument to signal list remove function.
* thread.h: Remove obsolete *ResourceLock defines.
* tlsoffsets.h: Regenerate.
* winsup.h (spf): Define temporary debug macro to be deleted later.
* dcrt0.cc (dll_crt0_0): New function, called during DLL initialization.
Mainly consists of code pulled from dll_crt0_1.
(dll_crt0_1): See above.
(_dll_crt0): Wait for initial calibration thread to complete, if appropriate.
Move some stuff to dll_crt0_0.
(initialize_main_tls): Accommodate argument change to
_thread_info::init_thread.
* fork.cc (fork_child): Ditto.
(sync_with_child): Fix debug message.
* external.cc (cygwin_internal): Remove special considerations for
uninitialized dll since initialization happens during dll attach now.
* dlfcn.cc (dlopen): Remove obsolete *ResourceLock calls.
(dlclose): Ditto.
* cygheap.h (init_cygheap::close_ctty): Declare new function.
* cygheap.cc (init_cygheap::close_ctty): Define new function.
* syscalls.cc (close_all_files): Use close_ctty.
(setsid): Ditto.
* cygthread.cc (cygthread::stub): Remove exception initialization.
* cygthread.cc (cygthread::stub): Remove exception initialization.
(cygthread::simplestub): Ditto.
* thread.cc (pthread::thread_init_wrapper): Ditto.
* cygtls.cc (_last_thread): Make static.
(_threadinfo::call2): Initialize exception handler here.
(_threadinfo::find_tls): Move here.
* exceptions.cc (_threadinfo::find_tls): Move.
* dcrt0.cc (__api_fatal): Add prefix info to message here rather than including
it in every call to function.
* winsup.h (api_fatal): Accommodate above change.
* debug.cc (add_handle): Don't do anything if cygheap not around.
(mark_closed): Ditto.
* dll_init.cc (dll_list::detach): Fix debug output.
* fork.cc (sync_with_child): Ditto.
(vfork): Improve debug output.
* heap.cc (heap_init): Ditto.
* exceptions.cc (try_to_debug): Clarify message when debugger attaches.
@
text
@d137 1
a137 1
	termios.o thread.o times.o tty.o uinfo.o uname.o v8_regexp.o \
@


1.151.4.1
log
@merge from trunk.
@
text
@a27 1
mandir:=@@mandir@@
d301 1
a301 1
	    $(INSTALL_DATA) $$i $(mandir)/man2/`basename $$i` ; \
d304 1
a304 1
	    $(INSTALL_DATA) $$i $(mandir)/man3/`basename $$i` ; \
d307 1
a307 1
	    $(INSTALL_DATA) $$i $(mandir)/man5/`basename $$i` ; \
d310 1
a310 1
	    $(INSTALL_DATA) $$i $(mandir)/man7/`basename $$i` ; \
@


1.150
log
@* exceptions.cc (set_signal_mask): Redefine to not pass by address.  Report
calculated mask in debugging output.
* sigproc.h (set_signal_mask): Reflect above change in declaration.
* path.cc (mount_item::build_win32): Take path apart before feeding it to
fnmunge.  Throughout, change use of _reent_winsup()-> to _my_tls.locals.
instead.  Throughout, remove obsolete MT_SAFE/_CYG_THREAD_FAILSAFE
considerations.  Througout, add cygtls.h include.
* Makefile.in (DLL_OFILES): Add cygtls.o.  Add some more objects to the
-fomit-frame-pointer list.
* acconfig.h: Remove obsolete settings.
* config.h.in: Ditto.
* bsdlib.cc: Add cygtls.h include.
* configure.in: Remove --enable-extra-threadsafe-checking.
* configure: Regenerate.
* cygtls.h (_local_storage): New struct renamed from _winsup_t (sic).
(_threadinfo:local_clib): Add new field.
(_threadinfo::locals): Ditto.
(_threadinfo::init_thread): Accept second _reent * argument.
(_threadinfo::call): Define as regparm.
(CYGTLS_PADSIZE): Remove unnecessary slop.
(_getreent): Define as a macro.
* thread.h: Remove _CYG_THREAD_FAILSAFE and MT_SAFE stuff.
(_winsup_t): Move to cygtls.h.
(ResourceLocks::ResourceLocks): Eliminate empty constructor.
(MTinterface::reents): Eliminate.
(MTinterface::thread_self_key): Eliminate.
(MTinterface::MTinterface): Eliminate.
* dcrt0.cc: Include stdio.h for _impure_ptr initialization.
(do_global_ctors): Remove run_ctors_p (sic) considerations.  Don't call atexit
here.
(__main): Initialize destructors for user here.
(dll_crt0_1): Accept a dummy argument.  Don't call init_thread here.  Don't set
_impure_ptr here.  Call do_global_ctors after more things have been
initialized.
(_dll_crt0): Define zeros buffer as max of needed size of CYGTLS_PADSIZE so
that it can be used for two purposes while minimizing stack usage.  Initialize
_impure_ptr specifically, for speed.  Call dll_crt0_1 with buffer argument.
(cygwin_dll_init): Call dll_crt0_1 with dummy argument.
* dtable.cc (dtable::find_unused_handle): Remove call to AssertResourceOwner.
* exceptions.cc: Move _threadinfo stuff to new file.
* cygtls.cc: New file.
* gentls_offsets: Accommodate increasing complexity of cygtls.h.
* hires.h (hires_base::~hires_base): Remove.
* init.cc (dll_entry): Remove setting of reents.
* thread.cc: Remove syslog.h include.
(__getreent): Simplify to use _my_tls.
(_reent_winsup): Delete.
(AssertResourceOwner): Delete.
(MTinterface::Init): Remove setting of _clib and _winsup, with all that
entails.
(MTinterface::fixup_after_fork): Ditto.
(pthread::thread_init_wrapper): Ditto.  Also remove call to
set_tls_self_pointer.
(pthread::set_tls_self_pointer): Eliminate.
(pthread::get_tls_self_pointer): Just return _my_tls.tid;
(__reent_t::init_clib): Eliminate.
* tlsoffsets.h: Regenerate.
@
text
@d116 1
a116 1
DLL_IMPORTS:=$(w32api_lib)/libkernel32.a
d257 2
@


1.150.2.1
log
@* Makefile.in: Add still more -fomit-frame-pointer functions.
* dtable.h (dtable::lock): New function.
(dtable::unlock): New function.
(dtable::init_lock): New function.
* cygheap.h (HEAP_TLS): Declare new enum value.
(init_cygheap::threadlist): Declare new array.
(init_cygheap::sthreads): Declare new variable.
(cygheap_fdmanip::~cygheap_fdmanip): Use new dtable lock/unlock functions.
(cygheap_fdnew::cygheap_fdnew): Ditto.
(cygheap_fdget::cygheap_fdget): Ditto.
* dtable.cc (dtable_init): Initialize fdtab critical section.
(dtable::fixup_after_fork): Ditto.
(dtable::fixup_after_exec): Ditto.
(dtable::dup2): Use lock/unlock calls to protect access to fdtab.
(dtable::find_fifo): Ditto.
(dtable::fixup_before_fork): Ditto.
(dtable::fixup_before_exec): Ditto.
(dtable::set_file_pointers_for_exec): Ditto.
(dtable::vfork_child_dup): Ditto.
(dtable::vfork_parent_restore): Ditto.
* syscalls.cc (close_all_files): Ditto.
* sync.h (muto::acquired): Declare new function.
(new_muto1): Declare new macro used to specify name of muto storage.
* sync.cc (muto::acquired): Define new function.
* cygthread.cc (cygthread::stub): Remove signal chain removal call since it is
handled during initialization now.
* cygthread.cc (cygthread::simplestub): Remove signal chain removal call since
it is handled during initialization now.
* cygtls.cc (sentry): New class used for locking.  Use throughout.
(_threadinfo::reset_exception): Don't pop stack.
(_threadinfo::find_tls): Move from exceptions.cc.
(_threadinfo::init_thread): Initialize array of threads rather than linked
list.  Take second argument indicating thread function for this thread.
(_threadinfo::remove): Search thread array rather than linked list.  Use sentry
to lock.  Only unlock if we got the lock.
(_threadinfo::find_tls): Ditto for first two.
(handle_threadlist_exception): Handle exceptions when manipulating the thread
list in case of premature thread termination.
(_threadinfo::init_threadlist_exceptions): Ditto.
* cygtls.h (TLS_STACK_SIZE): Decrease size.
(_threadinfo::padding): Add element to avoid overwriting lower part of stack.
(_threadinfo::remove): Add a "wait" argument to control how long we wait for a
lock before removing.
* exceptions.cc (init_exception_handler): Make global.  Take argument to
control exception handler being set.
(ctrl_c_handler): Wait forever when removing self from signal chain.
(_threadinfo::find_tls): Move to cygtls.cc.
(sig_handle): Reorganize detection for thread-specific signals.
* heap.cc (heap_init): Rework slightly.  Make fatal error more verbose.  Remove
malloc initialization since it can't happen during dll attach.
* init.cc (search_for): Move address to search for on stack here.
(threadfunc_ix): Ditto for stack offset.  Make shared so that stack walk
potentially only has to be done once when cygwin processes are running.
(threadfunc_fe): Use standard tls to store thread function (may change back
later).
(calibration_thread): New function.  Potentially called to find threadfunc_ix.
(munge_threadfunc): Search for "search_for" value on stack.  Output warning
when thread func not found on stack.  Use standard tls to store thread
function.
(prime_threads): New function.  Called to prime thread front end.
(dll_entry): Call dll_crt0_0 here when DLL_PROCESS_ATTACH.  Call prime_threads
here.  Try to remove thread from signal list here.
* sigproc.cc (wait_sig): Initialize threadlist exception stuff here.
* thread.cc (pthread::exit): Pass argument to signal list remove function.
* thread.h: Remove obsolete *ResourceLock defines.
* tlsoffsets.h: Regenerate.
* winsup.h (spf): Define temporary debug macro to be deleted later.
* dcrt0.cc (dll_crt0_0): New function, called during DLL initialization.
Mainly consists of code pulled from dll_crt0_1.
(dll_crt0_1): See above.
(_dll_crt0): Wait for initial calibration thread to complete, if appropriate.
Move some stuff to dll_crt0_0.
(initialize_main_tls): Accommodate argument change to
_thread_info::init_thread.
* fork.cc (fork_child): Ditto.
(sync_with_child): Fix debug message.
* external.cc (cygwin_internal): Remove special considerations for
uninitialized dll since initialization happens during dll attach now.
* dlfcn.cc (dlopen): Remove obsolete *ResourceLock calls.
(dlclose): Ditto.
* cygheap.h (init_cygheap::close_ctty): Declare new function.
* cygheap.cc (init_cygheap::close_ctty): Define new function.
* syscalls.cc (close_all_files): Use close_ctty.
(setsid): Ditto.
* cygthread.cc (cygthread::stub): Remove exception initialization.
* cygthread.cc (cygthread::stub): Remove exception initialization.
(cygthread::simplestub): Ditto.
* thread.cc (pthread::thread_init_wrapper): Ditto.
* cygtls.cc (_last_thread): Make static.
(_threadinfo::call2): Initialize exception handler here.
(_threadinfo::find_tls): Move here.
* exceptions.cc (_threadinfo::find_tls): Move.
* dcrt0.cc (__api_fatal): Add prefix info to message here rather than including
it in every call to function.
* winsup.h (api_fatal): Accommodate above change.
* debug.cc (add_handle): Don't do anything if cygheap not around.
(mark_closed): Ditto.
* dll_init.cc (dll_list::detach): Fix debug output.
* fork.cc (sync_with_child): Ditto.
(vfork): Improve debug output.
* heap.cc (heap_init): Ditto.
* exceptions.cc (try_to_debug): Clarify message when debugger attaches.
@
text
@a256 2
sysconf_CFLAGS:=-fomit-frame-pointer
uinfo_CFLAGS:=-fomit-frame-pointer
@


1.150.2.2
log
@* Makefile.in (DLL_IMPORTS): Link advapi32 to ensure proper DLL initialization.
* autoload.cc (RegCloseKey): Arbitrarily choose this function as a "seed" to
pull the advapi32 link library in.  So, comment out the autoloading.
* cygtls.cc (_threadinfo::init_thread): Just clear CYGTLS_PADSIZE.
(_threadinfo::remove): Add debugging.
(_threadinfo::find_tls): Ditto.
* cygtls.h (_threadinfo::padding): Make zero length (for now?).
* dcrt0.cc (dll_crt0_0): Move more initialization here from dll_crt0_1.
(dll_crt0_1): See above.
* dtable.h (dtable::lock): Remove commented out critical section locking.
* dtable.h (dtable::init_lock): Remove commented out critical section locking.
* dtable.h (dtable::unlock): Remove commented out critical section locking.
* exceptions.cc (interruptible): bool'ize.
* init.cc (threadfunc_fe): Revert to storing threadfunc at stack bottom.
(munge_threadfunc): Ditto.  Avoid adding overhead to calibration_thread.
(prime_threads): Don't initialize tls stuff.
(dll_entry): Make minor change to initialization order.
* tlsoffsets.h: Regenerate.
* sigproc.cc (wait_sig): Add sanity check for end of process thread exit.
* select.h: Make minor formatting change.
@
text
@d116 1
a116 1
DLL_IMPORTS:=$(w32api_lib)/libkernel32.a $(w32api_lib)/libadvapi32.a
@


1.150.2.3
log
@* cygwin/include/signal.h: Add copyright notice.
* cygwin.din: Make clock SIGFE.  Add clock_gettime, sigwaitinfo, timer_create,
timer_delete, timer_settime.
* include/cygwin/version.h: Reflect above additions.
* fork.cc (fork_child): Call fixup_timers_after_fork.
* signal.cc (sigwait): Remove unused variable.
* timer.cc: New file.
(clock_gettime): Define new function.
(timer_tracker): Define new struct used by timer functions.
(timer_tracker::timer_tracker): New function.
(to_us): New function.
(timer_thread): New function.
(timer_tracker::settime): New function.
(timer_create): New function.
(timer_settime): New function.
(timer_delete): New function.
(fixup_timers_after_fork): New function.
* cygthread.cc: Bump thread count.
@
text
@d137 1
a137 1
	termios.o thread.o timer.o times.o tty.o uinfo.o uname.o v8_regexp.o \
@


1.149
log
@* Makefile.in: Change the way that -f options are appended to CFLAGS, slightly.
@
text
@d121 3
a123 3
DLL_OFILES:=assert.o autoload.o bsdlib.o cxx.o cygheap.o cygthread.o dcrt0.o \
	debug.o delqueue.o devices.o dir.o dlfcn.o dll_init.o dtable.o environ.o \
	errno.o exceptions.o exec.o external.o fcntl.o fhandler.o \
d222 2
d225 2
a226 5
malloc_CFLAGS:=-fomit-frame-pointer
malloc_wrapper_CFLAGS:=-fomit-frame-pointer
shared_CFLAGS:=-fomit-frame-pointer
cygthread_CFLAGS:=-fomit-frame-pointer
miscfuncs_CFLAGS:=-fomit-frame-pointer
d241 1
d248 3
d255 2
@


1.148
log
@	* Makefile.in (OBSOLETE_FUNCTIONS): Add fcntl.
	(NEW_FUNCTIONS): Add fcntl64.
	* cygwin.din: Export fcntl64.  Make fcntl being SIGFE.
	* fcntl.cc (fcntl_worker): New function.
	(fcntl64): New function.
	(_fcntl): Call fcntl_worker.  Convert 32 bit flock structure into
	64 bit flock structure and vice versa.
	* fhandler.cc (fhandler_base::lock): Change 2nd parameter to
	struct __flock64 *.
	* fhandler_disk_file.cc (fhandler_disk_file::lock): Ditto.  Rework
	to be 64 bit aware.
	* fhandler.h: Accomodate above method argument changes.
	* include/cygwin/types.h: Add struct __flock32 and __flock64.
	Define struct flock according to setting of __CYGWIN_USE_BIG_TYPES__.
	* include/cygwin/version.h: Bump API minor number.
@
text
@d54 2
a55 2
CFLAGS=@@CFLAGS@@ -fmerge-constants -ftracer
override CFLAGS+=-MMD ${$(*F)_CFLAGS}
@


1.147
log
@* exceptions.cc (_threadinfo::pop): Zero *contents* of popped stack location
rather than the actual stack pointer.
@
text
@d146 1
a146 1
		    acltotext chown facl fchown fdopen fgetpos fopen \
d171 1
@


1.146
log
@	* Makefile.in: (DLL_OFILES): Add flock.o.
	* cygwin.din: Export flock.
	* flock.c: New file.
	* include/sys/file.h: Include sys/cdefs.h.
	Add function prototype for flock().
	Add some comments from BSD's header for further clarity.
	(L_SET, L_CURR, L_INCR, L_XTND): Redefine as the macros
	SEEK_SET, SEEK_CUR, SEEK_CUR, & SEEK_END respectively.
	(LOCK_SH,LOCK_EX,LOCK_NB,LOCK_UN): New macros for flock().
	* include/cygwin/version.h: Bump API minor number.
@
text
@d57 1
a57 1
CXXFLAGS=@@CXXFLAGS@@ -fmerge-constants
@


1.145
log
@* pinfo.h (_pinfo::getsig): Remove obsolete function, here and throughout.
* exceptions.cc: Ditto.
* fhandler_termios.cc: Ditto.
* signal.cc: Ditto.
* sigproc.cc: Ditto.
* Makefile.in: Revert previous change which made a cygwin.din newer than a
version.h a warning rather than an error.
@
text
@d130 2
a131 2
	fhandler_zero.o fnmatch.o fork.o getopt.o glob.o grp.o heap.o init.o \
	ioctl.o ipc.o iruserok.o localtime.o malloc_wrapper.o miscfuncs.o \
@


1.144
log
@Eliminate use of sigframe and sigthread throughout.
* Makefile.in (DLL_OFILES): Add sigfe.o.  Remove reliance on cygwin.def from
cygwin0.dll dependency since dependence on sigfe.o implies that.  Generate def
file on the fly using 'gendef'.
* configure.in: Don't auto-generate cygwin.def.
* configure: Regenerate.
* cygwin.din: Add SIGFE stuff where appropriate.
* dcrt0.cc (dll_crt0_1): Initialize cygwin tls early in process startup.  Set
_main_tls to address of the main thread's cygwin tls.
* debug.h: Remove now unneeded WFSO and WFMO declarations.
* exceptions.cc (_last_thread): Define.
(set_thread_state_for_signals): New function.
(reset_thread_exception_for_signals): Ditto.
(init_thread_for_signals): Ditto.
(delete_thread_for_signals): Ditto.
(capture_thread_for_signals): Ditto.
(handle_exceptions): Set return address explicitly for exceptions prior to
calling sig_send.
(interrupt_on_return): Eliminate.
(setup_handler): Add preliminary implementation for dealing with
thread-specific signals by querying _main_tls.
(signal_exit): Use cygthread::main_thread_id instead of mainthread.id.
(call_signal_handler_now): For now, just handle the main thread.
* fork.cc (vfork): Save and restore main _my_tls.
* gendef: New file.  Generates def file and sigfe.s file.
* gentls_offsets: New file.  Generates offsets for perl to use in sigfe.s.
* how-signals-work.txt: Mention that info is obsolete.
* init.cc (dll_entry): Initialize cygwin tls storage here.
* miscfuncs.cc (low_priority_sleep): Make a C function for easier calling from
asm.
* perthread.h (vfork_save::tls): New element.
* signal.cc (nanosleep): Replace previous use of
sigframe.call_signal_handler_now with straight call to call_signal_handler_now.
(abort): Ditto.
* syscalls.cc (readv): Ditto.
* termios.cc (tcsetattr): Ditto.
* wait.cc (wait4): Ditto.
* sigproc.cc (sig_dispatch_pending): Ditto.
(sig_send): Ditto.
* sigproc.h: Declare call_signal_handler_now.
* thread.cc (pthread::thread_init_wrapper): Initialize cygwin tls.  Remove
obsolete and unworking signal stuff.
* thread.h (verifyable_object::sigs): Eliminate.
(verifyable_object::sigmask): Eliminate.
(verifyable_object::sigtodo): Eliminate.
(verifyable_object::exit): Make attribute noreturn.
(verifyable_object::thread_init_wrapper): Ditto.
(pthread_null::exit): Ditto.
* winbase.h (__stackbase): Always define.
* winsup.h (low_priority_sleep): Declare as a "C" function.
* include/cygwin/version.h: Bump API version to reflect sigwait export.
* include/sys/queue.h: Protect SLIST_ENTRY from previous declaration.
* signal.cc (sigwait): Implement.
* select.cc (fhandler_base::ready_for_read): Add debugging output.
* devices.h: Define more device pointers via their storage.
* devices.in: Don't parse things like /dev/inet/tcp, as they really have no
meaning.
* devices.cc: Regenerate.
* gendevices: Set proper protection for output file.
* cygtls.h: New file.
* gendef: New file.
* gentls_offsets: New file.
* tlsoffsets.h: New file.  Autogenerated.
* config/i386/longjmp.c: Remove.  File subsumed by gendef output.
* config/i386/makefrag: Remove obsolete file.
* fhandler.cc: Remove spurious access_worker declaration.
* spawn.cc (spawnve): Make debugging output more accurate.
* cygwin-gperf: Remove.
* devices.cc: Remove.
@
text
@d378 2
a379 2
	@@echo Error: Version info is older than DLL API!
#	@@false
@


1.143
log
@	* Makefile.in (OBSOLETE_FUNCTION):  Add tmpfile.
	(NEW_FUNCTIONS): Add _tmpfile64 -> tmpfile translation.
	* cygwin.din: Export _tmpfile64
	* include/cygwin/version.h: Bump api minor number.
@
text
@d54 1
a54 1
CFLAGS=@@CFLAGS@@
d57 1
a57 1
CXXFLAGS=@@CXXFLAGS@@
d120 1
d135 4
a138 4
	select.o sem.o shared.o shm.o signal.o sigproc.o smallprint.o spawn.o \
	strace.o strsep.o sync.o syscalls.o sysconf.o syslog.o termios.o \
	thread.o times.o tty.o uinfo.o uname.o v8_regexp.o v8_regerror.o \
	v8_regsub.o wait.o wincap.o window.o \
a308 1

d349 1
a349 1
$(TEST_DLL_NAME): $(LDSCRIPT) $(DLL_OFILES) $(DEF_FILE) $(DLL_IMPORTS) $(LIBSERVER) $(LIBC) $(LIBM) $(API_VER) Makefile winver_stamp
d379 1
a379 1
	@@false
d425 11
a435 2
$(DEF_FILE): cygwin.din config.status
	$(SHELL) config.status
@


1.142
log
@	* Makefile.in: Add $(LIBSERVER) rule.
	* cygserver.h: Moved from include/cygwin to here.
	* cygserver_ipc.h: Moved from ../cygserver to here.
	* cygserver_shm.h: Ditto.
	* cygwin.din: Add shmat, shmctl, shmdt and shmget.
	* fhandler_tty.cc (fhandler_tty_slave::open): Don't warn about handle
	dup'ing if not build with USE_SERVER.
	* shm.cc: Include cygerrno.h unconditionally.
	(shmat): Set errno to ENOSYS and return -1 if not build with
	USE_SERVER.
	(shmctl): Ditto.
	(shmdt): Ditto.
	(shmget): Ditto.
	* woutsup.h: Remove.
	* include/cygwin/cygserver_process.h: Moved to ../cygserver directory.
	* include/cygwin/cygserver_transport.h: Ditto.
	* include/cygwin/cygserver_transport_pipes.h: Ditto.
	* include/cygwin/cygserver_transport_sockets.h: Ditto.
	* include/cygwin/version.h: Bump API minor number.
@
text
@d151 1
a151 1
		    telldir truncate
d205 1
@


1.141
log
@* Makefile.in: Add YA method for generating devices.cc.
* child_info.h: YA update of another magic number.
* gendevices: New file.
* devices.in: New file.
* devices.cc: Regenerate.
* devices.shilka: Remove.
* devices.h: Correctly define device pointers.
(device): Remove now obsolete fields.
(device::native): Renamed from device::fmt.
* dtable.cc (build_fh_dev): Simplify in light of new unit parsing scheme.
(build_fh_pc): Ditto.
* path.cc (win32_device_name): Ditto.
* fhandler.h (fhandler_base::get_native_name): Reflect renaming of fmt to
native.
* fhandler_tty.cc (fhandler_tty_mster::init): Initialize slave device prior to
reporting unit.
@
text
@d368 3
@


1.140
log
@* cygwin-shilka: Remove '#line directives' or suffer debugging oddities.  Use
-length option so that device prefixes are used.
* devices.cc: Regenerate.
* syscalls.cc (ttyname): Add debugging output.
@
text
@d219 1
d393 1
a393 1
$(srcdir)/devices.cc: cygwin-shilka devices.shilka devices.h
@


1.139
log
@2003-09-25  Pierre Humblet <pierre.humblet@@ieee.org>

	* shared_info.h: Update CURR_USER_MAGIC, CURR_SHARED_MAGIC and
	SHARED_INFO_CB.
	(mount_info::cb): Delete.
	(mount_info::version): Delete.
	(shared_info::delqueue): Delete.
	* Makefile.in: Do magic for USER_MAGIC, class user_info, instead
	of for mount_info.
@
text
@d389 1
a389 1
$(srcdir)/devices.cc: cygwin-gperf devices.gperf devices.h
d392 1
a392 1
$(srcdir)/qevices.cc: cygwin-shilka devices.shilka devices.h
@


1.138
log
@* devices.cc: New file.
* devices.gperf: New file.
* devices.shilka: New file.
* cygwin-gperf: New file.
* cygwin-shilka: New file.
* fhandler_fifo.cc: New file.
* fhandler_nodevice.cc : New file.  Reorganize headers so that path.h precedes
fhandler.h throughout.  Remove device argument and unit arguments from fhandler
constructors throughout.  Remove pc arguments to fhandler functions and use
internal pc element instead, throughout.  Use dev element in pc throughout.
Use major/minor elements rather than units and device numbers previously in
fhandler class.  Use correct methods for fhandler file names rather than
directly accessing file name variables, throughout.
* Makefile.in (DLL_OFILES): Add devices.o, fhandler_fifo.o
* dcrt0.cc (dll_crt0_1): Call device::init.
* devices.h: Renumber devices based on more Linux-like major/minor numbers.
Add more devices.  Declare standard device storage.
(device): Declare struct.
* dir.cc (opendir): Use new 'build_fh_name' to construct a fhandler_* type.
* dtable.cc (dtable::get_debugger_info): Ditto.
(cygwin_attach_handle_to_fd): Ditto.
(dtable::release): Remove special FH_SOCKET case in favor of generic
"need_fixup_before" test.
(dtable::init_std_file_from_handle): Use either build_fh_dev or build_fh_name
to build standard fhandler.
(dtable::build_fh_name): Renamed from dtable::build_fhandler_from_name.  Move
out of dtable class.  Don't accept a path_conv argument.  Just build it here
and pass it to:
(build_fh_pc): Renamed from dtable::build_fhandler.  Move out of dtable class.
Use intrinsic device type in path_conv to create new fhandler.
(build_fh_dev): Renamed from dtable::build_fhandler.  Move out of dtable class.
Simplify arguments to just take new 'device' type and a name.  Just return
pointer to fhandler rather than trying to insert into dtable.
(dtable::dup_worker): Accommodate above build_fh name changes.
(dtable::find_fifo): New (currently broken) function.
(handle_to_fn): Use strechr for efficiency.
* dtable.h: Reflect above build_fh name changes and argument differences.
(fhandler_base *&operator []): Return self rather than copy of self.
* fhandler.cc (fhandler_base::operator =): Use pc element to set normalized
path.
(fhandler_base::set_name): Ditto.
(fhandler_base::raw_read): Use method to access name.
(fhandler_base::write): Correctly use get_output_handle rather than get_handle.
(handler_base::device_access_denied): New function.
(fhandler_base::open): Eliminate pc argument and use pc element of
fhandler_base throughout.
(fhandler_base::fstat): Detect if device is based in filesystem and use
fstat_fs to calculate stat, if so.
(fhandler_base::fhandler_base): Eliminate handling of file names and, instead,
just free appropriate component from pc.
(fhandler_base::opendir): Remove path_conv parameter.
* fhandler.h: Remove all device flags.
(fhandler_base::pc): New element.
(fhandler_base::set_name): Change argument to path_conv.
(fhandler_base::error): New function.
(fhandler_base::exists): New function.
(fhandler_base::pc_binmode): New function.
(fhandler_base::dev): New function.
(fhandler_base::open_fs): New function.
(fhandler_base::fstat_fs): New function.
(fhandler_base::fstat_by_name): New function.
(fhandler_base::fstat_by_handle): New function.
(fhandler_base::isfifo): New function.
(fhandler_base::is_slow): New function.
(fhandler_base::is_auto_device): New function.
(fhandler_base::is_fs_special): New function.
(fhandler_base::device_access_denied): New function.
(fhandler_base::operator DWORD&): New operator.
(fhandler_base::get_name): Return normalized path from pc.
(fhandler_base::get_win32_name): Return windows path from pc.
(fhandler_base::isdevice): Renamed from is_device.
(fhandler_base::get_native_name): Return device format.
(fhandler_fifo): New class.
(fhandler_nodevice): New class.
(select_stuff::device_specific): Remove array.
(select_stuff::device_specific_pipe): New class element.
(select_stuff::device_specific_socket): New class element.
(select_stuff::device_specific_serial): New class element.
(select_stuff::select_stuff): Initialize new elements.
* fhandler_disk_file.cc (fhandler_base::fstat_by_handle): Move to base class
from fhandler_disk_file.
(fhandler_base::fstat_by_name): Ditto.
(fhandler_base::fstat_by_name): Ditto.
(fhandler_disk_file::open): Move most functionality into
fhandler_base::open_fs.
(fhandler_base::open_fs): New function.
(fhandler_disk_file::close): Move most functionality into
fhandler_base::close_fs.
(fhandler_base::close_fs): New function.
* fhandler_mem.cc (fhandler_dev_mem::open): Use device name in debugging
output.
* fhandler_socket.cc (fhandler_socket::set_connect_secret): Copy standard
urandom device into appropriate place.
(fhandler_socket::accept): Reflect change in fdsock return value.
* fhandler_tty.cc: See "throughouts" above.
* net.cc: Accommodate fdsock change throughout.
(fdsock): Return success or failure, accept fd argument and device argument.
* path.cc (symlink_info::major): New element.
(symlink_info::minor): New element.
(symlink_info::parse_device): Declare new function.
(fs_info::update): Accommodate changes in path_conv class.
(path_conv::fillin): Ditto.
(path_conv::return_and_clear_normalized_path): Eliminate.
(path_conv::set_normalized_path): New function.
(path_conv::path_conv): Set info in dev element.  Use path_conv methods Check
for FH_FS rather than FH_BAD to indicate when to fill in filesystem stuff.
where appropriate rather than direct access.  Use set_normalized_path to set
normalized path.
(windows_device_names): Eliminate.
(get_dev): Ditto.
(get_raw_device_number): Ditto.
(get_device_number): Ditto.
(win32_device_name): Call new device name parser to do most of the heavy
lifting.
(mount_info::conv_to_win32_path): Fill in dev field as appropriate.
(symlink_worker): Handle new device files.
(symlink_info::check): Ditto.
(symlink_info::parse_device): Define new function.
* path.h (executable_states): Move here from fhandler.h.
(fs_info): Rename variables to *_storage and create methods for accessing same.
(path_conv): Add dev element, remove devn and unit and adjust inline methods to
accommodate.
(set_normalized_path): Declare new function.
* pinfo.cc (_pinfo::commune_recv): Add broken support for handling fifos.
(_pinfo::commune_send): Ditto.
* pipe.cc (fhandler_pipe::close): check for existence of handle before closing
it.
(handler_pipe::create): Rename from make_pipe.  Change arguments to accept
fhandler_pipe array.  Accommodate fifos.
(pipe): Rework to deal with fhandler_pipe::create changes.
(_pipe): Ditto.
* select.cc: Use individual device_specific types throughout rather than
indexing with obsolete device number.
(set_bits): Use is_socket call rather than checking device number.
* shared_info.h (CURR_MOUNT_MAGIC): Update.
(conv_to_win32_path): Reflect addition of device argument.
* syscalls.cc (mknod_worker): New function.
(open): Use build_fh_name to build fhandler.
(chown_worker): Detect if this is an 'auto' device rather than an on-filesystem
device and handle appropriately.
(chmod_device): New function.
(chmod): Detect if this is an 'auto' device rather than an on-filesystem device
and handle appropriately.  Use chmod_device to set mode of in-filesystem
devices.
(stat_worker): Eliminate path_conv argument.  Call build_fh_name to construct
fhandler.  Use fh->error() rather than pc->error to detect errors in fhandler
construction.
(access_worker): New function pulled from access.  Accommodate in-filesystem
devices.
(access): Use access_worker.
(fpathconf): Detect if this is an 'auto' device rather than an on-filesystem
device and handle appropriately.
(mknod_worker): New function.
(mknod32): New function.
(chroot): Free normalized path -- assuming it was actually cmalloced.
* tty.cc (create_tty_master): Tweak for new device class.
(tty::common_init): Ditto.
* winsup.h (stat_worker): Remove.
(symlink_worker): Declare.
* exceptions.cc (set_process_mask): Just call sig_dispatch_pending and don't
worry about pending_signals since sig_dispatch_pending should always do the
right thing now.
(sig_handle): Reorganize SIGCONT handling to more closely conform to SUSv3.
* pinfo.h: Move __SIG enum to sigproc.h.
(PICOM_FIFO): New enum element.
(_pinfo): Remove 'thread2signal' stuff throughout class.
(_pinfo::commune_send): Make varargs.
(_pinfo::sigtodo): Eliminate.
(_pinfo::thread2signal): Ditto.
* signal.cc (kill_worker): Eliminate call to setthread2signal.
* sigproc.cc (local_sigtodo): Eliminate.
(getlocal_sigtodo): Ditto.
(sigelem): New class.
(pending_signals): New class.
(sigqueue): New variable, start of sigqueue linked list.
(sigcatch_nonmain): Eliminate.
(sigcatch_main): Eliminate.
(sigcatch_nosync): Eliminate.
(sigcomplete_nonmain): Eliminate.
(pending_signals): Eliminate.
(sig_clear): Call signal thread to clear pending signals, unless already in
signal thread.
(sigpending): Call signal thread to get pending signals.
(sig_dispatch_pending): Eliminate use of pending_signals and just check
sigqueue.
(sigproc_terminate): Eliminate all of the obsolete semaphore stuff.  Close
signal pipe handle.
(sig_send): Eliminate all of the obsolete semaphore stuff and use pipe to send
signals.
(getevent): Eliminate.
(pending_signals::add): New function.
(pending_signals::del): New function.
(pending_signals::next): New function.
(wait_sig): Eliminate all of the obsolete semaphore stuff.  Use pipe to
communicate and maintain a linked list of signals.
* sigproc.h: Move __SIG defines here.  Add __SIGPENDING.
(sig_dispatch_pending): Remove "C" specifier.
(sig_handle): Accept a mask argument.
* thread.cc: Remove signal handling considerations throughout.
@
text
@d380 1
a380 1
	/bin/sh ${word 1,$^} $@@ "$(CC) -x c" ${word 2,$^} MOUNT_MAGIC 'class mount_info' SHARED_MAGIC 'class shared_info'
@


1.137
log
@* Makefile.in: Make malloc_wrapper -fomit-frame-pointer.
* cygwin.din: Remove extraneous mallinfo definition.
* dcrt0.cc (quoted): Use strechr for efficiency.
* fhandler.cc (fhandler_base::write): Correctly use get_output_handle rather
than get_handle.
(fhandler_base::lseek): Use method for accessing name in debug output.
@
text
@a50 31
# cygheap_CFLAGS:=-fomit-frame-pointer
malloc_CFLAGS:=-fomit-frame-pointer
malloc_wrapper_CFLAGS:=-fomit-frame-pointer
shared_CFLAGS:=-fomit-frame-pointer
cygthread_CFLAGS:=-fomit-frame-pointer
miscfuncs_CFLAGS:=-fomit-frame-pointer
fhandler_CFLAGS:=-fomit-frame-pointer
fhandler_clipboard_CFLAGS:=-fomit-frame-pointer
fhandler_console_CFLAGS:=-fomit-frame-pointer
fhandler_disk_file_CFLAGS:=-fomit-frame-pointer
fhandler_dsp_CFLAGS:=-fomit-frame-pointer
fhandler_floppy_CFLAGS:=-fomit-frame-pointer
fhandler_mem_CFLAGS:=-fomit-frame-pointer
fhandler_proc_CFLAGS:=-fomit-frame-pointer
fhandler_process_CFLAGS:=-fomit-frame-pointer
fhandler_random_CFLAGS:=-fomit-frame-pointer
fhandler_raw_CFLAGS:=-fomit-frame-pointer
fhandler_registry_CFLAGS:=-fomit-frame-pointer
fhandler_serial_CFLAGS:=-fomit-frame-pointer
fhandler_socket_CFLAGS:=-fomit-frame-pointer
fhandler_tape_CFLAGS:=-fomit-frame-pointer
fhandler_termios_CFLAGS:=-fomit-frame-pointer
fhandler_tty_CFLAGS:=-fomit-frame-pointer
fhandler_virtual_CFLAGS:=-fomit-frame-pointer
fhandler_windows_CFLAGS:=-fomit-frame-pointer
fhandler_zero_CFLAGS:=-fomit-frame-pointer
regcomp_CFLAGS=-fomit-frame-pointer
regerror_CFLAGS=-fomit-frame-pointer
regexec_CFLAGS=-fomit-frame-pointer
regfree_CFLAGS=-fomit-frame-pointer

d118 1
d121 1
a121 1
	debug.o delqueue.o dir.o dlfcn.o dll_init.o dtable.o environ.o \
d124 3
a126 3
	fhandler_dsp.o fhandler_floppy.o fhandler_mem.o \
	fhandler_proc.o fhandler_process.o fhandler_random.o \
	fhandler_raw.o fhandler_registry.o fhandler_serial.o \
d216 34
d388 6
@


1.136
log
@	* Makefile.in (DLL_OFILES): Add getopt.o and iruserok.o.
	* cygwin.din: Export __check_rhosts_file, __rcmd_errstr, optarg,
	opterr, optind, optopt, optreset, getopt, getopt_long, iruserok
	and ruserok.
	* getopt.c: Moved from lib to here.  Define opt* variables as
	dllexport.
	* iruserok.c: Moved from lib to here.  Rearrange function order.
	Prefer using 64/32 bit functions.
	* syscalls.cc (shell_fp): Define as struct __sFILE64.
	(getusershell): Use fopen64 instead of fopen.
	* winsup.h: Add declarations for seteuid32, fopen64,
	cygwin_gethostbyname and cygwin_inet_addr.
	* include/getopt.h: Declare opt* variables dllimport.
	* include/cygwin/version.h: Bump API minor number.
@
text
@d53 1
@


1.136.2.1
log
@* fhandler_disk_file.cc (path_conv::ndisk_links): Fix potential off-by-one
problem when first file in a directory is a directory.
* Makefile.in: Make malloc_wrapper -fomit-frame-pointer.
* cygwin.din: Remove extraneous mallinfo definition.
* dcrt0.cc (quoted): Use strechr for efficiency.
* exceptions.cc (sig_handle_tty_stop): Fix boneheaded mistake by using correct
check for parent state rather than inverted check.
* getopt.c (opterr): Reinstate initialization.
(optind): Ditto.
(optopt): Ditto.
@
text
@d51 1
a51 1
cygheap_CFLAGS:=-fomit-frame-pointer
a52 1
malloc_wrapper_CFLAGS:=-fomit-frame-pointer
a56 1
fhandler_clipboard_CFLAGS:=-fomit-frame-pointer
@


1.135
log
@* Makefile.in: Add some more -fomit-frame-pointer files.
* path.cc (conv_path_list_buf_size): Free normalized_path or suffer memory
leak.
* syscalls.cc (chroot): Ditto.
@
text
@d149 1
a149 1
DLL_OFILES:=assert.o autoload.o cxx.o bsdlib.o cygheap.o cygthread.o dcrt0.o \
d158 9
a166 9
	fhandler_zero.o fnmatch.o fork.o glob.o grp.o heap.o init.o ioctl.o \
	ipc.o localtime.o malloc_wrapper.o miscfuncs.o mmap.o msg.o \
	net.o netdb.o ntea.o passwd.o path.o pinfo.o pipe.o poll.o pthread.o \
	regcomp.o regerror.o regexec.o regfree.o registry.o resource.o \
	scandir.o sched.o sec_acl.o sec_helper.o security.o select.o sem.o \
	shared.o shm.o signal.o sigproc.o smallprint.o spawn.o strace.o \
	strsep.o sync.o syscalls.o sysconf.o syslog.o termios.o thread.o \
	times.o tty.o uinfo.o uname.o v8_regexp.o v8_regerror.o v8_regsub.o \
	wait.o wincap.o window.o \
@


1.134
log
@	* Makefile.in (DLL_OFILES): Add bsdlib.o.
	* autoload.cc (RegisterServiceProcess): Add.
	* bsdlib.cc: New file.
	(daemon): New function.
	(login_tty): Ditto.
	(openpty): Ditto.
	(forkpty): Ditto.
	* cygwin.din: Export daemon, forkpty, login_tty, logwtmp, updwtmp,
	openpty and revoke.
	* syscalls.cc (updwtmp): New function, writing to wtmp exclusively.
	(logwtmp): Ditto.
	(login): Call updwtmp instead of writing to wtmp by itself.
	(logout): Ditto.
	* tty.cc (revoke): New funtion.
	* include/paths.h: Define _PATH_DEVNULL.
	* include/pty.h: New header.
	* include/cygwin/version.h: Bump API minor number.
	* include/sys/utmp.h: Declare logwtmp with const arguments.
	Declare updwtmp.
	* lib/iruserok.c: New file.
	(ruserok): New function.
	(iruserok): Ditto.
	(__ivaliduser): Ditto.
	(__icheckhost): Ditto.
@
text
@d76 4
@


1.133
log
@* Makefile.in (MALLOC_OFILES): Always fill in with correct malloc object.
* configure.in: Fill in MALLOC_OFILES with either debugging or regular malloc.
* configure: Regenerate.
* dlmalloc.c: Make various fruitless changes to attempt to get to work.
* dlmalloc.h: Ditto.
* malloc.cc (free): Check malloc pool when debugging.
* path.cc (win32_device_name): Eliminate compiler warning.
* sigproc.cc (sig_dispatch_pending): Remove use of was_pending.  Let
thisframe.call_signal_handler decide if handler should be called rather than
using bogus was_pending check.
* exceptions.cc (interrupt_setup): Remove accidentally checked in debugging
code.
* heap.cc (sbrk): Save rounded addess in user_heap_max.
@
text
@d145 3
a147 3
DLL_OFILES:=assert.o autoload.o cxx.o cygheap.o cygthread.o dcrt0.o debug.o \
	delqueue.o dir.o dlfcn.o dll_init.o dtable.o environ.o errno.o \
	exceptions.o exec.o external.o fcntl.o fhandler.o \
@


1.132
log
@Throughout, change USE_CYGSERVER to USE_SERVER.
* Makefile.in (LIBSERVER): Define and use.
* configure.in: Set LIBSERVER as appropriate.
* environ.cc: Rename allow_daemon to allow_server.  Only recognize when
USE_SERVER is defined.
@
text
@d155 1
a155 1
	ipc.o localtime.o malloc.o malloc_wrapper.o miscfuncs.o mmap.o msg.o \
@


1.131
log
@* Makefile.in: Rework to accommodate new speclib arguments.
* speclib: Rework to extract everything from libcygwin.a rather than building
things from existing object files.
@
text
@d236 1
d338 1
a338 1
$(TEST_DLL_NAME): $(LDSCRIPT) $(DLL_OFILES) $(DEF_FILE) $(DLL_IMPORTS) $(LIBC) $(LIBM) $(API_VER) Makefile winver_stamp
d341 1
a341 1
	$(MALLOC_OBJ) $(LIBM) $(LIBC) \
@


1.130
log
@preliminary checkin
@
text
@a118 1
LIB_NAME:=libcygwin.a
d235 2
a236 1
SUBLIBS:=libpthread.a $(PWD)/libm.a libc.a
d239 1
a239 1
TARGET_LIBS:=$(LIB_NAME) $(SUBLIBS) $(CYGWIN_START) $(GMON_START) $(LIBGMON_A) $(SUBLIBS) $(INSTOBJS) $(EXTRALIBS)
d379 2
a380 2
libpthread.a: speclib cygwin.def pthread.o thread.o
	/bin/sh ${word 1, $^} $@@ "${NM}" "${DLLTOOL}" "${AS}" ${wordlist 2, 99, $^}
d382 2
a383 2
$(PWD)/libm.a: speclib cygwin.def $(LIBM)
	/bin/sh ${word 1, $^} $@@ "${NM}" "${DLLTOOL}" "${AS}" ${wordlist 2, 99, $^}
d385 2
a386 2
$(PWD)/libc.a: speclib cygwin.def $(PWD)/libm.a libpthread.a
	/bin/sh ${word 1, $^} -v $@@ "${NM}" "${DLLTOOL}" "${AS}" ${wordlist 2, 99, $^}
@


1.129
log
@* Makefile.in (OBSOLETE_FUNCTION): Add fdopen.
@
text
@d41 3
a43 2
INSTALL:=@@INSTALL@@
INSTALL_PROGRAM:=@@INSTALL_PROGRAM@@
a98 2

INSTALL_DATA:=$(SHELL) $(updir1)/install-sh -c
@


1.128
log
@* cygwin.din: Export _fdopen64
* Makefile.in (NEW_FUNCTIONS): Add _fdopen64 -> fdopen translation.
* include/cygwin/version.h: Bump api minor number.
* ntdll.h: Remove (now) duplicate FILE_SYNCHRONOUS_IO_NONALERT definition.
@
text
@d172 1
a172 1
		    acltotext chown facl fchown fgetpos fopen \
@


1.127
log
@* newsym: Reenable removal of tmp directory.  Just use ar to generate archive
index.
* Makefile.in: Don't send ranlib to newsym.
@
text
@d197 1
@


1.126
log
@* Makefile.in: Remove cygserver stuff.
* acconfig.h: Add USE_CYGSERVER define.
* config.h.in: Regenerate.
* configure.in: Add --enable-server setting.
* configure: Regenerate.
* fhandler_tty.cc (fhandler_tty_slave::open): Conditionalize compilation of
cygserver stuff.
* fork.cc (fork_child): Ditto.
* shm.cc: Ditto.
* tty.cc (tty::common_init): Ditto.
* dcrt0.cc: Use bool rather than BOOL for CYGWIN environment variable
definitions.
* environ.cc: Ditto.
* ntea.cc: Ditto.
* security.cc: Ditto.
* security.h: Ditto.
* syscalls.cc (check_posix_perm): Remove externs that were already declared in
a header.
* winsup.h: Ditto.  Declare _MT_SAFE here.  Delete it someday since cygwin
should always be _MT_SAFE.
@
text
@d346 2
a347 2
	/bin/sh ${word 1,$^} ./cygdll.a "$(NM)" "$(AR)" "$(RANLIB)" $(OBSOLETE_FUNCTIONS) || exit 0
	/bin/sh ${word 2,$^} ./cygdll.a "$(AS)" "$(AR)" "$(RANLIB)" $(NEW_FUNCTIONS) || exit 0
@


1.125
log
@* Makefile.in: Use INSTALL_PROGRAM to install the cygwin DLL.
@
text
@d147 1
a147 3
DLL_OFILES:=assert.o autoload.o cxx.o cygheap.o cygserver_client.o \
	cygserver_transport.o cygserver_transport_pipes.o \
	cygserver_transport_sockets.o cygthread.o dcrt0.o debug.o \
d251 1
a251 1
all_target: $(TARGET_LIBS) cygserver.exe
d292 1
a292 2
install_target: cygserver.exe
	$(INSTALL_PROGRAM) cygserver.exe $(bindir)/cygserver.exe
a395 21

cygserver_transport_outside.o: cygserver_transport.cc
	$(COMPILE_CXX) -D__OUTSIDE_CYGWIN__ -o $@@ $<

cygserver_transport_pipes_outside.o: cygserver_transport_pipes.cc
	$(COMPILE_CXX) -D__OUTSIDE_CYGWIN__ -o $@@ $<

cygserver_transport_sockets_outside.o: cygserver_transport_sockets.cc
	$(COMPILE_CXX) -D__OUTSIDE_CYGWIN__ -o $@@ $<

cygserver_client_outside.o: cygserver_client.cc
	 $(COMPILE_CXX) -D__OUTSIDE_CYGWIN__ -o $@@ $<

cygserver.exe: cygserver.o cygserver_shm.o cygserver_transport_outside.o cygserver_transport_pipes_outside.o cygserver_transport_sockets_outside.o cygserver_client_outside.o cygserver_process.o threaded_queue.o wincap.o version.o smallprint.o
	$(CXX) -o $@@ $^ -lstdc++
#ifdef VERBOSE
#	$(CXX) $(MINGW_CXXFLAGS) -o $@@ ${wordlist 1,3,$^} -B$(mingw_build)/ $(MINGW_LDFLAGS)
#else
#	@@echo $(CXX) -o $@@ ${wordlist 1,3,$^} ${filter-out -B%, $(MINGW_CXXFLAGS) $(MINGW_LDFLAGS)};\
#	$(CXX) $(MINGW_CXXFLAGS) -o $@@ ${wordlist 1,3,$^} -B$(mingw_build)/ $(MINGW_LDFLAGS)
#endif
@


1.124
log
@	* Makefile.in (CYGWIN_START): Define as crt0.o.  Add to TARGET_LIBS.
	* fhandler.h (fhandler_virtual::fstat): Remove useless declaration.
	* fhandler_virtual.cc: Remove _COMPILING_NEWLIB define.
	* ipc.cc (ftok): Use stat64.
	* syscalls.cc (_fstat64): Remove alias.
	(_fstat): Ditto.
	(_stat): Ditto.
	(_fstat64_r): New function.
	(_fstat_r): Ditto.
	(_stat64_r): Ditto.
	(stat_r): Ditto.
	* crt0.o: New file, moved from newlib.
	* include/sys/param.h: Ditto.
	* include/sys/utime.h: Ditto.
	* include/sys/utmp.h: Ditto.
	* include/sys/dirent.h: Ditto.  Expose different struct dirent,
	dependening of the environment.
@
text
@d265 1
a265 1
	$(INSTALL_DATA) $(TEST_DLL_NAME) $(bindir)/$(DLL_NAME); \
@


1.123
log
@	* Makefile.in (NEW_FUNCTIONS): All 32/64 from 0.79 API get
	leading underscore.
	* cygwin.din: Ditto.
	* include/cygwin/version.h: Bump API minor number.
@
text
@d126 1
d241 1
a241 1
TARGET_LIBS:=$(LIB_NAME) $(SUBLIBS) $(GMON_START) $(LIBGMON_A) $(SUBLIBS) $(INSTOBJS) $(EXTRALIBS)
@


1.122
log
@
* Makefile.in: Revert patch from 2003-04-17.
@
text
@d186 47
a232 47
	       acl acl32 \
	       aclcheck aclcheck32 \
	       aclfrommode aclfrommode32 \
	       aclfrompbits aclfrompbits32 \
	       aclfromtext aclfromtext32 \
	       aclsort aclsort32 \
	       acltomode acltomode32 \
	       acltopbits acltopbits32 \
	       acltotext acltotext32 \
	       chown chown32 \
	       facl facl32 \
	       fchown fchown32 \
	       fgetpos fgetpos64 \
	       fopen fopen64 \
	       freopen freopen64 \
	       fseeko fseeko64 \
	       fsetpos fsetpos64 \
	       fstat fstat64 \
	       ftello ftello64 \
	       ftruncate ftruncate64 \
	       getegid getegid32 \
	       geteuid geteuid32 \
	       getgid getgid32 \
	       getgrent getgrent32 \
	       getgrgid getgrgid32 \
	       getgrnam getgrnam32 \
	       getgroups getgroups32 \
	       getpwuid getpwuid32 \
	       getpwuid_r getpwuid_r32 \
	       getuid getuid32 \
	       initgroups initgroups32 \
	       lchown lchown32 \
	       lseek lseek64 \
	       lstat lstat64 \
	       mknod mknod32 \
	       mmap mmap64 \
	       seekdir seekdir64 \
	       setegid setegid32 \
	       seteuid seteuid32 \
	       setgid setgid32 \
	       setgroups setgroups32 \
	       setregid setregid32 \
	       setreuid setreuid32 \
	       setuid setuid32 \
	       stat stat64 \
	       telldir telldir64 \
	       truncate truncate64
@


1.121
log
@* Makefile.in: Use ${nostdlib} variable.
* fhandler_proc.cc (format_proc_cpuinfo): Change /proc/cpuinfo "vendor id"
string to "vendor_id" to conform with Linux systems.
@
text
@a82 3
ifeq ($(CYGINLINE),1)
override CXXFLAGS+=-finline-functions
endif
@


1.120
log
@
* Makefile.in: Add finline-functions optimization to CXXFLAGS.
* autoload.cc (LoadDLLprime): Rename std_dll_init to
_std_dll_init.
(std_dll_init): Remove name mangling prototype. Add attributes
used and noinline.
(wsock_init): Ditto.
Change wsock_init to _wsock_init in wsock32 and ws2_32
LoadDLLprime.
* exceptions.cc (unused_sig_wrapper): Remove prototype. Add
attributes used and noinline.
* pwdgrp.h ((pwdgrp (passwd *&)): Remove inline code.
(pwdgrp (__group32 *&)): Ditto.
* grp.cc (pwdgrp (passwd *&)): Outline constructor.
(pwdgrp (__group32 *&)): Ditto.
@
text
@d343 1
a343 1
	$(CXX) $(CXXFLAGS) -nostdlib -Wl,-T$(firstword $^) -Wl,--out-implib,cygdll.a -shared -o $@@ \
@


1.119
log
@* Makefile.in (EXTRA_OFILES): Remove debugging object.
@
text
@d83 3
@


1.118
log
@* external.cc (check_ntsec): New function.
(cygwin_internal): Add CW_CHECK_NTSEC handling to call check_ntsec() from
applications.
* include/cygwin/version.h: Bump API minor number.
* include/sys/cygwin.h (cygwin_getinfo_types): Add CW_CHECK_NTSEC.
* cygthread.cc (cygthread::new): Add more defensive debugging.
@
text
@d139 1
a139 1
EXTRA_OFILES=$(bupdir1)/libiberty/random.o $(bupdir1)/libiberty/strsignal.o alloca.o
@


1.117
log
@* Makefile.in: Remove EXE_LDFLAGS.  Fix fhandler_CFLAGS typo.  Recognize .s
suffix.
* configure.in: Remove EXE_LDFLAGS.
* configure: Regenerate.
@
text
@d139 1
a139 1
EXTRA_OFILES=$(bupdir1)/libiberty/random.o $(bupdir1)/libiberty/strsignal.o
@


1.116
log
@	Switch to 32/64 datatypes:
	* Makefile.in (OBSOLETE_FUNCTIONS): Add open acl aclcheck aclfrommode
	aclfrompbits aclfromtext aclsort acltomode acltopbits acltotext chown
	facl fchown fgetpos fopen freopen fseeko fsetpos fstat ftello
	ftruncate getegid geteuid getgid getgrent getgrgid getgrnam getgroups
	getpwuid getpwuid_r getuid initgroups lchown lseek lstat mknod mmap
	seekdir setegid seteuid setgid setgroups setregid setreuid setuid stat
	telldir truncate.
	(NEW_FUNCTIONS): Add _open64 acl32 aclcheck32 aclfrommode32
	aclfrompbits32 aclfromtext32 aclsort32 acltomode32 acltopbits32
	acltotext32 chown32 facl32 fchown32 fgetpos64 fopen64 freopen64
	fseeko64 fsetpos64 fstat64 ftello64 ftruncate64 getegid32 geteuid32
	getgid32 getgrent32 getgrgid32 getgrnam32 getgroups32 getpwuid32
	getpwuid_r32 getuid32 initgroups32 lchown32 lseek64 lstat64 mknod32
	mmap64 seekdir64 setegid32 seteuid32 setgid32 setgroups32 setregid32
	setreuid32 setuid32 stat64 telldir64 truncate64 to substitute the
	above.
	* cygserver_shm.h (class client_request_shm): Change uid_t and gid_t
	members to __uid32_t and __gid32_t.
	* cygwin.din: Add symbols acl32 aclcheck32 aclfrommode32
	aclfrompbits32 aclfromtext32 aclsort32 acltomode32 acltopbits32
	acltotext32 facl32 fgetpos64 fopen64 freopen64 fseeko64 fsetpos64
	_fstat64 ftello64 _lseek64 mknod32 _open64.
	* glob.c: Include perprocess.h.
	(globtilde): Call getpwuid32 and getuid32 instead of getpwuid and
	getuid.
	(g_lstat): Check for applications API version to call the appropriate
	typed gl_lstat function.
	(g_stat): Ditto for gl_stat.
	* shm.cc (client_request_shm::client_request_shm): Call geteuid32
	and getegid32 instead of geteuid and getegid throughout.
	* syscalls.cc (_open64): New alias for open.
	(_lseek64): New alias for lseek64.
	(_fstat64): New alias for fseek64.
	(mknod32): New function.
	(mknod): Calls mknod32 now.
	* winsup.h: Make function declarations for getuid32, geteuid32,
	and getpwuid32 accessible for plain C sources.  Add declarations
	for getegid32 and getpwnam.
	* include/cygwin/version.h: Bum API minor number to 78.
	* include/sys/cygwin.h: Guard C++ specific members of struct
	per_process against inclusion in plain C sources.
	* include/sys/mman.h (mman): Add guard to avoid type clash when
	compiling Cygwin.
@
text
@d55 1
a55 1
fhandler_CFLAGS:=-fomit-frame_pointer
d81 1
a81 1
CXX:=@@CXX@@
a83 3
# For linking mount, etc. crt0.o isn't accessable in a fresh build.
EXE_LDFLAGS:=@@EXE_LDFLAGS@@

d245 1
a245 1
.SUFFIXES: .c .cc .def .a .o .d
@


1.115
log
@* Makefile.in: Change from using new-* to cygwin0 for temporary targets.
@
text
@d173 11
a183 1
OBSOLETE_FUNCTIONS:=regcomp regerror regexec regfree regsub
d187 49
a235 1
	       regfree posix_regfree
@


1.114
log
@* pwdrp.h (pwdgrp::refresh): Lock entire test prior to reading.
* grp.cc (pwdgrp::parse_group): Eliminate arg and use class member instead.
Use next_str and next_int to parse arguments.
* passwd.cc (pwdgrp::parse_passwd): Ditto.
(grab_string): Eliminate.
(grab_int): Ditto.
* pwdgrp.h (pwdgrp::parse): Eliminate input arg.
(pwdgrp::parse_passwd): Reflect above change.
(pwdgrp::parse_group): Reflect above change.
(pwdgrp::next_str): New function.
(pwdgrp::next_int): Ditto.
(pwdgrp::gets): Eliminate.
* uinfo.cc (pwdgrp::next_str): New function.
(pwdgrp::next_int): Ditto.
(pwdgrp::add_line): Subsume gets.
(pwdgrp::gets): Eliminate.
(pwdgrp::load): Just call add_line to parse input buffer.
@
text
@d117 1
a117 1
# We build as new-cygwin.dll and rename at install time to overcome
d122 1
d124 1
d199 1
a199 1
all_host: new-$(LIB_NAME)
d209 1
a209 1
	$(INSTALL_DATA) new-$(DLL_NAME) $(bindir)/$(DLL_NAME); \
d284 1
a284 1
new-$(DLL_NAME): $(LDSCRIPT) $(DLL_OFILES) $(DEF_FILE) $(DLL_IMPORTS) $(LIBC) $(LIBM) $(API_VER) Makefile winver_stamp
d289 1
d292 1
a292 1
$(LIB_NAME): rmsym newsym new-$(DLL_NAME) $(LIBCOS)
d296 1
d301 2
a302 5
new-$(LIB_NAME): $(LIB_NAME)
	$(DLLTOOL) --as=$(AS) --dllname new-$(DLL_NAME) --def $(DEF_FILE) --output-lib new-templib.a
	$(AR) rcv new-templib.a $(LIBCOS)
	mv new-templib.a new-$(LIB_NAME)
	$(RANLIB) $@@
@


1.113
log
@	* cygrun.c: Move from here to ../testsuite.
	* Makefile.in: Remove cygrun.exe dependencies.
@
text
@d2 1
a2 1
# Copyright 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002 Red Hat, Inc.
@


1.112
log
@* Makefile.in: Default fhandler objects to -fomit-frame-pointer.  Eliminate
redundant CFLAGS settings.
@
text
@d197 1
a197 1
all_host: new-$(LIB_NAME) cygrun.exe
a341 7

cygrun.o: cygrun.c
	$(CC) $(MINGW_CFLAGS) -o $@@ -c $<

cygrun.exe : cygrun.o -lgcc $(w32api_lib)/libuser32.a \
	     $(w32api_lib)/libshell32.a $(w32api_lib)/libkernel32.a
	$(CC) ${MINGW_LDFLAGS} -mno-cygwin -o $@@ $^
@


1.112.6.1
log
@merge from trunk
@
text
@a145 1
MT_SAFE_OBJECTS:=
d150 1
a150 1
	delqueue.o devices.o dir.o dlfcn.o dll_init.o dtable.o environ.o errno.o \
d153 1
a153 1
	fhandler_dsp.o fhandler_fifo.o fhandler_floppy.o fhandler_mem.o \
a360 5

#	gperf -c --key-positions='1-126' -r -t -C -E -L 'ANSI-C' -Hdevhash -N'device::lookup' -Z devstring -7 $? |\

$(srcdir)/devices.cc: devices.gperf devices.h
	$(srcdir)/cygwin-gperf $^ > $@@
@


1.112.6.2
log
@trunk merge
@
text
@d2 1
a2 1
# Copyright 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003 Red Hat, Inc.
d198 1
a198 1
all_host: new-$(LIB_NAME)
d343 7
@


1.112.6.3
log
@* Makefile.in (DLL_OFILES): Add fhandler_nodevice.o.
* devices.gperf (device::parse): Just set devn to input if device not found --
nonexistent device will be caught later.
* dtable.cc (dtable::build_fhandler): Build fhandler_nodevice type when unknown
device.
* fhandler.h (fhandler_nodevice): New class.
(fhandler_union): Add fhandler_nodevice.
* path.cc (path_conv::check): Always set device stuff if major/minor are
specified.
@
text
@d155 2
a156 2
	fhandler_nodevice.o fhandler_proc.o fhandler_process.o \
	fhandler_random.o fhandler_raw.o fhandler_registry.o fhandler_serial.o \
@


1.112.6.4
log
@merge from trunk.
Reorganize includes throughout so that path.h comes before fhandler.h.
Eliminate path_conv arguments from fhandler functions which take them,
throughout.  Use get_name() and get_win32_name() consistently throughout for
fhandler objects.  Use build_fh_* functions throughout, where appropriate.
* fhandler.h (fhandler_base): Store path_conv struct here.  Remove dev.
* dtable.h (dtable::build_fhandler_*): Remove.
(build_fh_dev): New.
(build_fh_pc): New.
(build_fh_name): New.
* dtable.cc (build_fh_dev): New.
(build_fh_pc): New.
(build_fh_name): New.
* fhandler.h (fhandler_base::set_name): Change argument.
* fhandler.cc (fhandler_base::set_name): Just accept a path_conv argument.
(executable_states): Move.
* path.h (executable_state): Accept.
* syscalls.cc (stat_worker): Make static.
* winsup.h (stat_worker): Remove definition.
@
text
@a51 1
malloc_wrapper_CFLAGS:=-fomit-frame-pointer
@


1.112.6.5
log
@Merge from trunk.
* Makefile.in (devicess.cc): Make generation dependent on cygwin-gperf.
* cygheap.h (cygheap_fdmanip): Add fhandler_socket cast.
* cygwin-gperf: Autogenerate references to network devices.
* devices.h: Create separate device types for all network types.  Export
references to global network device storage.
* dtable.cc (dtable::release): Use generic determination to control when
need_fixup_before needs to be decremented.
(dtable::init_std_file_from_handle): Replace use of 'socket_dev' with
'tcp_dev'.
(build_fh_pc): Adapt to new socket types.  Don't increment fixup_before here.
* fhandler.h (fhandler_base::need_fixup_before): Declare/define.
(fhandler_socket::need_fixup_before): Ditto.
* fhandler_socket.cc (fhandler_socket::accept): Accommodate new fdsock
definition.
* net.cc: Throughout, change use of fdsock to return true/false for
success/failure and take cygheap_fdmanip type and device
* select.cc (set_bits): Use 'is_socket ()' test rather than specificially
testing device type.
@
text
@d359 2
a360 2
$(srcdir)/devices.cc: cygwin-gperf devices.gperf devices.h
	$^ > $@@
@


1.112.6.6
log
@merge from trunk
@
text
@d52 1
d118 1
a118 1
# We build as cygwin0.dll and rename at install time to overcome
a122 1
TEST_DLL_NAME:=cygwin0.dll
a123 1
TEST_LIB_NAME:=libcygwin0.a
d147 1
d152 1
a152 1
	delqueue.o dir.o dlfcn.o dll_init.o dtable.o environ.o errno.o \
d155 3
a157 3
	fhandler_dsp.o fhandler_floppy.o fhandler_mem.o \
	fhandler_proc.o fhandler_process.o fhandler_random.o \
	fhandler_raw.o fhandler_registry.o fhandler_serial.o \
d199 1
a199 1
all_host: $(TEST_LIB_NAME)
d209 1
a209 1
	$(INSTALL_DATA) $(TEST_DLL_NAME) $(bindir)/$(DLL_NAME); \
d284 1
a284 1
$(TEST_DLL_NAME): $(LDSCRIPT) $(DLL_OFILES) $(DEF_FILE) $(DLL_IMPORTS) $(LIBC) $(LIBM) $(API_VER) Makefile winver_stamp
a288 1
	@@ln $@@ new-$(DLL_NAME)
d291 1
a291 1
$(LIB_NAME): rmsym newsym $(TEST_DLL_NAME) $(LIBCOS)
a294 1
	$(RANLIB) $@@
d299 5
a303 2
$(TEST_LIB_NAME): $(LIB_NAME)
	perl -p -e 'BEGIN{binmode(STDIN); binmode(STDOUT);}; s/cygwin1/cygwin0/g' < $? > $@@
d356 5
@


1.112.6.7
log
@Fix merge screwup
@
text
@a51 1
malloc_wrapper_CFLAGS:=-fomit-frame-pointer
a147 1
MT_SAFE_OBJECTS:=
d152 1
a152 1
	delqueue.o devices.o dir.o dlfcn.o dll_init.o dtable.o environ.o errno.o \
d155 3
a157 3
	fhandler_dsp.o fhandler_fifo.o fhandler_floppy.o fhandler_mem.o \
	fhandler_nodevice.o fhandler_proc.o fhandler_process.o \
	fhandler_random.o fhandler_raw.o fhandler_registry.o fhandler_serial.o \
d289 1
a289 1
	@@ln -f $@@ new-$(DLL_NAME)
a354 5

#	gperf -c --key-positions='1-126' -r -t -C -E -L 'ANSI-C' -Hdevhash -N'device::lookup' -Z devstring -7 $? |\

$(srcdir)/devices.cc: cygwin-gperf devices.gperf devices.h
	perl $^ > $@@
@


1.112.6.8
log
@merge from trunk
@
text
@d175 1
a175 11
OBSOLETE_FUNCTIONS:=regcomp regerror regexec regfree regsub \
		    open acl aclcheck aclfrommode aclfrompbits \
		    aclfromtext aclsort acltomode acltopbits \
		    acltotext chown facl fchown fgetpos fopen \
		    freopen fseeko fsetpos fstat ftello ftruncate \
		    getegid geteuid getgid getgrent getgrgid getgrnam \
		    getgroups getpwuid getpwuid_r getuid initgroups \
		    lchown lseek lstat mknod mmap seekdir setegid seteuid \
		    setgid setgroups setregid setreuid setuid stat \
		    telldir truncate

d179 1
a179 49
	       regfree posix_regfree \
	       open _open64 \
	       acl acl32 \
	       aclcheck aclcheck32 \
	       aclfrommode aclfrommode32 \
	       aclfrompbits aclfrompbits32 \
	       aclfromtext aclfromtext32 \
	       aclsort aclsort32 \
	       acltomode acltomode32 \
	       acltopbits acltopbits32 \
	       acltotext acltotext32 \
	       chown chown32 \
	       facl facl32 \
	       fchown fchown32 \
	       fgetpos fgetpos64 \
	       fopen fopen64 \
	       freopen freopen64 \
	       fseeko fseeko64 \
	       fsetpos fsetpos64 \
	       fstat fstat64 \
	       ftello ftello64 \
	       ftruncate ftruncate64 \
	       getegid getegid32 \
	       geteuid geteuid32 \
	       getgid getgid32 \
	       getgrent getgrent32 \
	       getgrgid getgrgid32 \
	       getgrnam getgrnam32 \
	       getgroups getgroups32 \
	       getpwuid getpwuid32 \
	       getpwuid_r getpwuid_r32 \
	       getuid getuid32 \
	       initgroups initgroups32 \
	       lchown lchown32 \
	       lseek lseek64 \
	       lstat lstat64 \
	       mknod mknod32 \
	       mmap mmap64 \
	       seekdir seekdir64 \
	       setegid setegid32 \
	       seteuid seteuid32 \
	       setgid setgid32 \
	       setgroups setgroups32 \
	       setregid setregid32 \
	       setreuid setreuid32 \
	       setuid setuid32 \
	       stat stat64 \
	       telldir telldir64 \
	       truncate truncate64
@


1.112.6.9
log
@merge from trunk
@
text
@d56 1
a56 1
fhandler_CFLAGS:=-fomit-frame-pointer
d82 1
a82 1
CXX=@@CXX@@
d85 3
d250 1
a250 1
.SUFFIXES: .c .cc .def .a .o .d .s
@


1.112.6.10
log
@merge from trunk
@
text
@d188 47
a234 47
	       acl _acl32 \
	       aclcheck _aclcheck32 \
	       aclfrommode _aclfrommode32 \
	       aclfrompbits _aclfrompbits32 \
	       aclfromtext _aclfromtext32 \
	       aclsort _aclsort32 \
	       acltomode _acltomode32 \
	       acltopbits _acltopbits32 \
	       acltotext _acltotext32 \
	       chown _chown32 \
	       facl _facl32 \
	       fchown _fchown32 \
	       fgetpos _fgetpos64 \
	       fopen _fopen64 \
	       freopen _freopen64 \
	       fseeko _fseeko64 \
	       fsetpos _fsetpos64 \
	       fstat _fstat64 \
	       ftello _ftello64 \
	       ftruncate _ftruncate64 \
	       getegid _getegid32 \
	       geteuid _geteuid32 \
	       getgid _getgid32 \
	       getgrent _getgrent32 \
	       getgrgid _getgrgid32 \
	       getgrnam _getgrnam32 \
	       getgroups _getgroups32 \
	       getpwuid _getpwuid32 \
	       getpwuid_r _getpwuid_r32 \
	       getuid _getuid32 \
	       initgroups _initgroups32 \
	       lchown _lchown32 \
	       lseek _lseek64 \
	       lstat _lstat64 \
	       mknod _mknod32 \
	       mmap _mmap64 \
	       seekdir _seekdir64 \
	       setegid _setegid32 \
	       seteuid _seteuid32 \
	       setgid _setgid32 \
	       setgroups _setgroups32 \
	       setregid _setregid32 \
	       setreuid _setreuid32 \
	       setuid _setuid32 \
	       stat _stat64 \
	       telldir _telldir64 \
	       truncate _truncate64
d342 1
a342 1
	$(CXX) $(CXXFLAGS) $(nostdlib) -Wl,-T$(firstword $^) -Wl,--out-implib,cygdll.a -shared -o $@@ \
@


1.112.6.11
log
@merge from trunk
@
text
@a126 1
CYGWIN_START:=crt0.o
d242 1
a242 1
TARGET_LIBS:=$(LIB_NAME) $(SUBLIBS) $(CYGWIN_START) $(GMON_START) $(LIBGMON_A) $(SUBLIBS) $(INSTOBJS) $(EXTRALIBS)
@


1.112.6.12
log
@merge from trunk
@
text
@d149 3
a151 1
DLL_OFILES:=assert.o autoload.o cxx.o cygheap.o cygthread.o dcrt0.o debug.o \
d255 1
a255 1
all_target: $(TARGET_LIBS)
d267 1
a267 1
	$(INSTALL_PROGRAM) $(TEST_DLL_NAME) $(bindir)/$(DLL_NAME); \
d296 2
a297 1
install_target:
d401 26
@


1.112.6.13
log
@merge from trunk
@
text
@d348 2
a349 2
	/bin/sh ${word 1,$^} ./cygdll.a "$(NM)" "$(AR)" $(OBSOLETE_FUNCTIONS) || exit 0
	/bin/sh ${word 2,$^} ./cygdll.a "$(AS)" "$(AR)" $(NEW_FUNCTIONS) || exit 0
@


1.112.6.14
log
@merge from trunk
@
text
@d41 2
a42 3
override INSTALL:=@@INSTALL@@
override INSTALL_PROGRAM:=@@INSTALL_PROGRAM@@
override INSTALL_DATA:=@@INSTALL_DATA@@
d100 2
d121 1
d174 1
a174 1
		    acltotext chown facl fchown fdopen fgetpos fopen \
a198 1
	       fdopen _fdopen64 \
d238 1
a238 2
LIB_NAME:=$(PWD)/libcygwin.a
SUBLIBS:=$(PWD)/libpthread.a $(PWD)/libm.a $(PWD)/libc.a
d241 1
a241 1
TARGET_LIBS:=$(LIB_NAME) $(CYGWIN_START) $(GMON_START) $(LIBGMON_A) $(SUBLIBS) $(INSTOBJS) $(EXTRALIBS)
d381 2
a382 2
$(PWD)/libpthread.a: speclib $(LIB_NAME) pthread.o thread.o
	/bin/sh ${word 1, $^} $@@ "${NM}" "$(AR)" ${wordlist 2, 99, $^}
d384 2
a385 2
$(PWD)/libm.a: speclib $(LIB_NAME) $(LIBM)
	/bin/sh ${word 1, $^} $@@ "${NM}" "$(AR)" ${wordlist 2, 99, $^}
d387 2
a388 2
$(PWD)/libc.a: speclib $(LIB_NAME) $(PWD)/libm.a libpthread.a
	/bin/sh ${word 1, $^} -v $@@ "${NM}" "$(AR)" ${wordlist 2, 99, $^}
@


1.112.6.15
log
@merge from trunk
@
text
@a237 1
LIBSERVER:=@@LIBSERVER@@
d339 1
a339 1
$(TEST_DLL_NAME): $(LDSCRIPT) $(DLL_OFILES) $(DEF_FILE) $(DLL_IMPORTS) $(LIBSERVER) $(LIBC) $(LIBM) $(API_VER) Makefile winver_stamp
d342 1
a342 1
	$(MALLOC_OBJ) $(LIBSERVER) $(LIBM) $(LIBC) \
@


1.112.6.16
log
@merge from trunk
@
text
@d157 1
a157 1
	ipc.o localtime.o malloc_wrapper.o miscfuncs.o mmap.o msg.o \
@


1.112.6.17
log
@merge from trunk
@
text
@a76 4
regcomp_CFLAGS=-fomit-frame-pointer
regerror_CFLAGS=-fomit-frame-pointer
regexec_CFLAGS=-fomit-frame-pointer
regfree_CFLAGS=-fomit-frame-pointer
d147 3
a149 3
DLL_OFILES:=assert.o autoload.o cxx.o bsdlib.o cygheap.o cygthread.o dcrt0.o \
	debug.o delqueue.o devices.o dir.o dlfcn.o dll_init.o dtable.o environ.o \
	errno.o exceptions.o exec.o external.o fcntl.o fhandler.o \
@


1.112.6.18
log
@merge from trunk
@
text
@d151 1
a151 1
DLL_OFILES:=assert.o autoload.o bsdlib.o cxx.o cygheap.o cygthread.o dcrt0.o \
d160 9
a168 9
	fhandler_zero.o fnmatch.o fork.o getopt.o glob.o grp.o heap.o init.o \
	ioctl.o ipc.o iruserok.o localtime.o malloc_wrapper.o miscfuncs.o \
	mmap.o msg.o net.o netdb.o ntea.o passwd.o path.o pinfo.o pipe.o \
	poll.o pthread.o regcomp.o regerror.o regexec.o regfree.o registry.o \
	resource.o scandir.o sched.o sec_acl.o sec_helper.o security.o \
	select.o sem.o shared.o shm.o signal.o sigproc.o smallprint.o spawn.o \
	strace.o strsep.o sync.o syscalls.o sysconf.o syslog.o termios.o \
	thread.o times.o tty.o uinfo.o uname.o v8_regexp.o v8_regerror.o \
	v8_regsub.o wait.o wincap.o window.o \
@


1.112.4.1
log
@* Makefile.in: Add devices.gperf.
* devices.h: New file.
* devices.gperf: Ditto.
@
text
@a145 1
MT_SAFE_OBJECTS:=
d150 1
a150 1
	delqueue.o devices.o dir.o dlfcn.o dll_init.o dtable.o environ.o errno.o \
a360 9

#	gperf -c --key-positions='1-126' -r -t -C -E -L 'ANSI-C' -Hdevhash -N'device::lookup' -Z devstring -7 $? |\

$(srcdir)/devices.cc: devices.gperf
	gperf -c --key-positions='1-2,5-7,9-10' -r -t -C -E -T -L 'ANSI-C' -Hdevhash -N'device::lookup' -Z devstring -7 $? |\
	sed -e 's/\[\(str\[[^\]]*\]\)\]/[(unsigned) cyg_tolower (\1)]/' \
	    -e 's/static \(.* wordlist\)/static NO_COPY \1/g' \
	    -e 's/\([ 	]*\)if (\*str.*$$/\1if (strncasematch (str, s, len))/' > $@@
#	sed -e 's/\[str\[/[(unsigned) str[/' -e 's/static \([^(]*\)$$/static NO_COPY \1/g'  >$@@
@


1.112.4.2
log
@* cygwin-gperf: New file.
* Makefile.in: Use cygwin-gperf script to build devices.cc.
* configure.in: Remove some comments.
* configure: Regenerate.
* devices.gperf: Remove max unit determination from FH_TTY.  Add /dev/kmem.
Add /dev/fifo.  Add /dev/rawdrive.  Remove specific "const device *"
declarations since they are now autogenerated.
(device::parse): Treat FH_TTY specially.  Move logic for determining real tty
device to separate function.
(device::init): Reduce to nothing.
(device::parse): New function taking different arguments.
(device::parse): Ditto.
(device::tty_to_real_device): New function.
* devices.h (struct device): Define above new functions.
(device::dev_on_fs): New element.
(device::setfs): New function.
(device::isfs): Ditto.
* dtable.cc (dtable::build_fhandler): Treat FH_TTY specially.
* fhandler.cc (fhandler_base::set_name): Make special determination for
non-disk-resident devices.
* fhandler.h (fhandler_base::isdevice): Renamed from 'is_device'.
(fhandler_disk_file::isdevice): Ditto.
(fhandler_base::is_auto_device): New function.
(fhandler_base::is_fs_device): New function.
(fhandler_tty_slave::get_unit): Declare.
(fhandler_disk_file::readdir): Take special .lnk consideration for devices as
well as symlinks.
* fhandler_tty.cc: Use get_unit () rather than dev.minor throughout.
(fhandler_tty_slave::get_unit): Define new function.
* path.cc (symlink_info::major): New element.
(symlink_info::major): Ditto.
(symlink_info::devtype): Ditto.
(path_conv::check): Handle devices detected by symlink_info::check.
(win32_device_name): Eliminate special FH_TTY handling.
(symlink): Move bulk of procesing to symlink_worker.
(symlink_worker): New function.  Handles devices.
(symlink_info::parse_device): Parse info from potential device file into
symlink_info elements.
(symlink_info::check): If contents of .lnk file begin with a ':' then treat the
file as a device file.
* path.h (isdevice): Renamed from is_device.
(is_auto_device): New function.
(is_fs_device): Ditto.
* syscalls.cc (chown_worker): Allow setting of ownership for on-disk devices.
(chmod): Ditto.
(mknod): Implement.
* winsup.h (symlink_worker): Declare.
@
text
@d365 6
a370 2
$(srcdir)/devices.cc: devices.gperf devices.h
	$(srcdir)/cygwin-gperf $^ > $@@
@


1.112.4.3
log
@Replace is_fs_device with is_fs_special throughout.
* Makefile.in (DLL_OFILES): Add fhandler_fifo.o.
* devices.h (fh_devices): Renumber some minor numbers to fit in 8 bits.
* dtable.cc (dtable::build_fhandler): Handle FH_FIFO.  Set errno to ENODEV if
device not found.
* dtable::find_fifo: Define new function.
* dtable.h (dtable::find_fifo): Declare new function.
* fhandler.cc (fhandler_base::device_access_denied): Fix O_RDONLY test.
(fhandler_base::write): Use output file handle for writing.
(fhandler_base::fstat): Use is_fs_special rather than is_fs_device.
* fhandler.h (fhandler_base::is_fs_special): Rename from is_fs_device.
(fhandler_pipe): Make private elements protected so that fhandler_fifo can use
them too.
(fhandler_pipe::create): New function derived from make_pipe.
(fhandler_fifo): Add more needed elements.
(fhandler_pty_master::slave): Add to track slave device.
(fhandler_pty_master::get_unit): Define.
* fhandler_tty.cc (fhandler_tty_master::init): Register slave device.
(fhandler_pty_master::open): Ditto.
(symlink_info::parse_device): Handle fifo specially.
* pinfo.cc (_pinfo::commune_recv): Initial fifo implementation.
(_pinfo::commune_send): Ditto.
* pinfo.h (picom): Add PICOM_FIFO.
* pipe.cc (fhandler_pipe::close): Close input handle here specifically.
(fhandler_pipe::create): Rename from make_pipe.  Create fhandlers rather than
fds.
(pipe): Use fhandler_pipe::create to create pipe.
(_pipe): Ditto.
* syscalls.cc (mknod): Accommodate fifos.
@
text
@d154 1
a154 1
	fhandler_dsp.o fhandler_fifo.o fhandler_floppy.o fhandler_mem.o \
@


1.111
log
@	* Makefile.common: Define MINGW_LDFLAGS.
	* configure.in: Reorder SUBDIRS to have mingw before cygwin.
	* configure: Regenerate from configure.in.
	* cygwin/Makefile.in: Add MINGW_LDFLAGS when linking cygrun.exe.
@
text
@d55 20
d80 1
a80 1
override CFLAGS+=-MMD -fbuiltin ${$(*F)_CFLAGS}
@


1.110
log
@* netdb.cc: New file.
* Makeile.in (DLL_OFILES): Add reference to the new netdb.cc file.
* cygwin.din : Add new aliased exports for service and protocol enumerations in
netdb.cc.
@
text
@d328 1
a328 1
	$(CC) -mno-cygwin -o $@@ $^
@


1.109
log
@	* cxx.cc: New file. Implement new, new[], delete and delete[]
	operators and  __cxa_pure_virtual if compiled by gcc >=3.
	* Makefile.in (DLL_OFILES): Add cxx.o.
	Remove libstdc++.a from cygwin1.dll link step.
@
text
@d138 9
a146 10
	fhandler_zero.o fnmatch.o fork.o glob.o grp.o heap.o init.o \
	ioctl.o ipc.o localtime.o malloc.o malloc_wrapper.o \
	miscfuncs.o mmap.o msg.o net.o ntea.o passwd.o path.o pinfo.o \
	pipe.o poll.o pthread.o regcomp.o regerror.o regexec.o \
	regfree.o registry.o resource.o scandir.o sched.o sec_acl.o \
	sec_helper.o security.o select.o sem.o shared.o shm.o signal.o \
	sigproc.o smallprint.o spawn.o strace.o strsep.o sync.o \
	syscalls.o sysconf.o syslog.o termios.o thread.o times.o tty.o \
	uinfo.o uname.o v8_regexp.o v8_regerror.o v8_regsub.o wait.o \
	wincap.o window.o \
@


1.108
log
@Rename _kill() to kill() throughout.  Rename _raise() to raise() throughout.
Rename _pid() to pid() throughout.
* Makefile.in: Compile some objects with -fomit-frame-pointer.
* cygwin.din: Reverse aliasing for _kill.
* syscalls.cc (_getpid_r): New function, implemented for newlib compatibility.
* shared.cc (open_shared): Remove reserving of memory since previous change
eliminate the need for this hack.
@
text
@d127 1
a127 1
DLL_OFILES:=assert.o autoload.o cygheap.o cygserver_client.o \
d266 1
a266 1
	$(MALLOC_OBJ) $(LIBM) -lstdc++ $(LIBC) \
@


1.107
log
@* Makefile.in (new-cygwin1.dll): Reorganize library order.
* dcrt0.cc (do_exit): Move thread stuff after vfork stuff or threads are
terminated during vfork.
* sigproc.cc (proc_terminate): Grab proc lock prior to signalling subproc
thread exit to avoid an extra "wait-for-thread-to-exit".
@
text
@d2 1
a2 1
# Copyright 1995, 1996, 1997, 1998, 1999, 2000, 2001 Red Hat, Inc.
d50 6
d59 2
a60 2
CFLAGS:=@@CFLAGS@@
override CFLAGS+=-MMD -fbuiltin
d62 1
a62 1
CXXFLAGS:=@@CXXFLAGS@@
a322 3

malloc.o: malloc.cc
	$(COMPILE_CXX) -fomit-frame-pointer -o $@@ $<
@


1.106
log
@* fhandler_proc.cc (format_process_stat): make ctty a real device number.
(format_process_status): use effective uid/gid as real and saved uid/gid.
@
text
@d260 2
a261 2
	$(MALLOC_OBJ) $(LIBM) $(LIBC) \
	-lstdc++ -lgcc $(DLL_IMPORTS)
@


1.105
log
@* Makefile.in (DLL_O_FILES): Restore formatting.
@
text
@d118 1
a118 1
DLL_IMPORTS:=$(w32api_lib)/libuuid.a $(w32api_lib)/libshell32.a $(w32api_lib)/libkernel32.a
@


1.104
log
@2002-09-22  Conrad Scott  <conrad.scott@@dsl.pipex.com>

	GNUify non-GNU formatted functions calls throughout.

2002-09-22  Conrad Scott  <conrad.scott@@dsl.pipex.com>

	* cygserver_shm.cc (with_strerr): Remove macro.
	(server_shmmgr::segment_t::~segment_t): Remove calls to with_strerr.
	(server_shmmgr::segment_t::attach): Ditto.
	(server_shmmgr::new_segment): Ditto.
	* shm.cc (with_strerr): Remove macro.
	(client_shmmgr::shmdt): Remove calls to with_strerr.
	(client_shmmgr::attach): Ditto.

2002-09-21  Conrad Scott  <conrad.scott@@dsl.pipex.com>

	* include/sys/ipc.h: Move to "include/cygwin/ipc.h".
	* include/sys/msg.h: Move to "include/cygwin/msg.h".
	* include/sys/sem.h: Move to "include/cygwin/sem.h".
	* include/sys/shm.h: Move to "include/cygwin/shm.h".
	* include/cygwin/ipc.h: New file.
	* include/cygwin/msg.h: Ditto.
	* include/cygwin/sem.h: Ditto.
	* include/cygwin/shm.h: Ditto.
	* cygserver_shm.h: Update includes.
	* msg.cc: Ditto.
	* sem.cc: Ditto.

2002-09-21  Conrad Scott  <conrad.scott@@dsl.pipex.com>

	* safe_memory.h (safe_delete): Make a templated function.
	* cygserver.cc (~server_request): Update use of safe_delete.
	(main): Ditto.
	* cygserver_client.cc (client_request::handle_request): Ditto.
	(client_request::make_request): Ditto.
	* cygserver_process.cc (~process_cleanup): Ditto.
	(process::remove): Ditto.
	(process::cleanup): Ditto.
	(process_cache::process): Ditto.
	* cygserver_shm.cc (server_shmmgr::segment_t::detach): Ditto.
	(server_shmmgr::delete_segment): Ditto.
	* shm.cc (client_shmmgr::shmdt): Ditto.
	* threaded_queue.cc (~threaded_queue): Ditto.
	(threaded_queue::worker_loop): Ditto.

2002-08-29  Conrad Scott  <conrad.scott@@dsl.pipex.com>

	* safe_memory.h: Replace #include <new> with an explicit
	definition of the placement new operator.
	(safe_delete): Remove unnecessary ## operator.

2002-07-28  Conrad Scott  <conrad.scott@@dsl.pipex.com>

	* cygserver_shm.cc (class server_shmmgr): Remove `cleanup_t'
	friend declaration.
	(cleanup_t::cleanup_t): Use the segment's shmid as the key rather
	than the segment pointer itself.
	(cleanup_t::segptr): Remove method.
	(cleanup_t::shmid): New method.
	(cleanup_t::cleanup): Update for new key value.
	(server_shmmgr::find (segment_t *)): Remove method.
	* include/cygwin/cygserver_process.h (cleanup_routine::key): Make
	method const.

2002-07-27  Conrad Scott  <conrad.scott@@dsl.pipex.com>

	* include/cygwin/cygserver_process.h
	(cleanup_routine::_key): New field.
	(cleanup_routine::cleanup_routine): Initialise new field with new
	argument.
	(cleanup_routine::operator==): New method.
	(cleanup_routine::key): New method.
	(cleanup_routine::cleanup): Make argument non-const.
	(process::is_active): New method.
	(process::remove): Ditto.
	(process::check_exit_code): Rename method.
	* cygserver_process.cc (process::add): Reorganize code.
	(process::remove): New method.
	(process::check_exit_code): Rename method.
	(process::cleanup): Use new `process::is_active' method.
	(process_cache::process): Ditto.
	(process_cache::sync_wait_array): Ditto.
	(process_cache::check_and_remove_process): Ditto.
	* cygserver_shm.cc (server_shmmgr): Make `cleanup_t' a friend.
	(segment_t::detach): Make argument non-const.  Remove cleanup
	object from client if appropriate.
	(cleanup_t::_segptr): Remove field.
	(cleanup_t::cleanup_t): Initialise parent explicitly.  Remove
	field.
	(cleanup_t::segptr): New method.
	(cleanup_t::cleanup): Add error checking and reporting.
	(server_shmmgr::shmdt): Make argument non-const.
	(server_shmmgr::find (segment_t *)): New method.

2002-07-27  Conrad Scott  <conrad.scott@@dsl.pipex.com>

	* cygserver.cc (client_request_shutdown::client_request_shutdown):
	Comment out verbose tracing statement.
	* cygserver_client.cc
	(client_request_get_version::client_request_get_version): Ditto.
	(client_request_attach_tty::client_request_attach_tty): Ditto.
	* cygserver_shm.cc (client_request_shm::client_request_shm):
	Ditto.

2002-07-27  Conrad Scott  <conrad.scott@@dsl.pipex.com>

	* cygserver_transport_pipes.cc (transport_layer_pipes::listen):
	Set `_is_listening_endpoint' appropriately.

2002-07-27  Conrad Scott  <conrad.scott@@dsl.pipex.com>

	* include/cygwin/cygserver_transport.h
	(transport_layer_base::listen): Change return type.
	(transport_layer_base::connect): Ditto.
	* include/cygwin/cygserver_transport_pipes.h
	(transport_layer_pipes::listen): Change return type.
	(transport_layer_pipes::connect): Ditto.
	(transport_layer_pipes::_sec_none_nih): Remove unused field.
	(transport_layer_pipes::_is_listening_endpoint): New field.
	* cygserver_transport_pipes.cc: Synchronize with sockets code.
	(transport_layer_pipes::transport_layer_pipes): Initialise new
	field.  Separate out asserts.
	(transport_layer_pipes::listen): Change return type.  Add asserts.
	(transport_layer_pipes::accept): Add asserts.
	(transport_layer_pipes::read): Change conditional to an assert.
	Add assert.
	(transport_layer_pipes::write): Ditto.
	(transport_layer_pipes::connect): Change return type.  Change
	conditional to an assert.  Add asserts.  Rationalize error code
	slightly.
	(transport_layer_pipes::impersonate_client): Add asserts.
	* include/cygwin/cygserver_transport_sockets.h
	(transport_layer_sockets::listen): Change return type.
	(transport_layer_sockets::connect): Ditto.
	(transport_layer_sockets::_addr): Change type of field.
	(transport_layer_sockets::_addr_len): Ditto.
	(transport_layer_sockets::_is_accepted_endpoint): New field.
	(transport_layer_sockets::_is_listening_endpoint): Ditto.
	* cygserver_transport_sockets.cc
	(MAX_CONNECT_RETRY): New constant.
	(transport_layer_sockets::transport_layer_sockets): Initialise new
	fields.  Only initialise the socket address where necessary.
	(transport_layer_sockets::listen): Change return type.  Rewrite.
	(transport_layer_sockets::accept): Add asserts.  Add tracing
	statements.  Use a local variable to hold the accepted address.
	(transport_layer_sockets::close): Add tracing statements.  Unlink
	the UNIX domain socket file as appropriate.  Close the socket
	cleanly.
	(transport_layer_sockets::read): Rewrite method.
	(transport_layer_sockets::write): Ditto.
	(transport_layer_sockets::connect): Change return type.  Rewrite.
	* cygserver.cc (server_submission_loop::request_loop): Run the
	listening thread at high priority with special handling for
	shutdown.
	(main): Print the request error code rather than errno in shutdown
	request code.  Install signal handlers with sigaction(2) to avoid
	setting SA_RESTART.  Check value of the listen method call, now it
	has one.
	* cygserver_client.cc (client_request::make_request): Check new
	return value on connect method call.

2002-07-27  Conrad Scott  <conrad.scott@@dsl.pipex.com>

	* include/cygwin/cygserver_transport_pipes.h
	(cygserver_transport_pipes::_sd): Rename field.
	(cygserver_transport_pipes::_sec_none_nih): Ditto.
	(cygserver_transport_pipes::_sec_all_nih): Ditto.
	(cygserver_transport_pipes::_pipe_name): Ditto.
	(cygserver_transport_pipes::_hPipe): Ditto.
	(cygserver_transport_pipes::_is_accepted_endpoint): Ditto.
	* cygserver_transport_pipes.cc
	(transport_layer_pipes::transport_layer_pipes): Rename fields.
	(transport_layer_pipes::init_security): Ditto.
	(transport_layer_pipes::listen): Ditto.
	(transport_layer_pipes::accept): Ditto.
	(transport_layer_pipes::close): Ditto.
	(transport_layer_pipes::read): Ditto.
	(transport_layer_pipes::write): Ditto.
	(transport_layer_pipes::connect): Ditto.
	(transport_layer_pipes::impersonate_client): Ditto.
	(transport_layer_pipes::revert_to_self): Ditto.
	* include/cygwin/cygserver_transport_sockets.h
	(cygserver_transport_sockets::_fd): Rename field.
	(cygserver_transport_sockets::_addr): Ditto.
	(cygserver_transport_sockets::_addr_len): Ditto.
	* cygserver_transport_sockets.cc
	(transport_layer_sockets::transport_layer_sockets): Rename fields.
	(transport_layer_sockets::listen): Ditto.
	(transport_layer_sockets::accept): Ditto.
	(transport_layer_sockets::close): Ditto.
	(transport_layer_sockets::read): Ditto.
	(transport_layer_sockets::write): Ditto.
	(transport_layer_sockets::connect): Ditto.

2002-07-27  Conrad Scott  <conrad.scott@@dsl.pipex.com>

	* cygserver_shm.cc (with_strerr): Fix use of %p format.
	* shm.cc (client_shmmgr::shmat): Ditto.
	(client_shmmgr::shmctl): Ditto.
	(client_shmmgr::shmdt): Ditto.
	(client_shmmgr::attach): Ditto.

2002-07-14  Christopher Faylor  <cgf@@redhat.com>

	* woutsup.h (system_printf): Remove extraneous semicolon from macro
	definition.

2002-07-14  Conrad Scott  <conrad.scott@@dsl.pipex.com>

	* cygserver_transport_pipes.cc
	(transport_layer_pipes::connect): Use ProtectHandle in DLL code.
	(transport_layer_pipes::close): Use ForceCloseHandle in DLL code.

2002-07-13  Nicholas Wourms  <nwourms@@netscape.com>

	* threaded_queue.h (class queue_submission_loop): Correct friend
	declaration for GCC 3.1.1.
	* include/cygwin/cygserver_process.h (class process): Ditto.
	(class process_cache): Ditto.

2002-07-12  Conrad Scott  <conrad.scott@@dsl.pipex.com>

	* cygserver_shm.cc (server_shmmgr::shmdt): Only call
	delete_segment if the segment exists [sic].

2002-07-12  Conrad Scott  <conrad.scott@@dsl.pipex.com>

	* safe_memory.h: Include <new> rather than <new.h> for gcc 3.

2002-07-11  Conrad Scott  <conrad.scott@@dsl.pipex.com>

	* safe_memory.h: New file extracted from "woutsup.h".
	* woutsup.h: Move the "safe" new/delete macros into the new
	"safe_memory.h" header file and include that here.
	* cygserver_client.cc: Explicitly include "safe_memory.h" for
	client-side code.
	(client_request::make_request): Use the "safe" new/delete macros
	unconditionally, i.e. use them on the client side as well as on
	the server side.
	* cygserver_transport.cc: Explicitly include "safe_memory.h" for
	client-side code.
	(create_server_transport): Use the "safe" new/delete macros
	unconditionally, i.e. use them on the client side as well as on
	the server side.
	* shm.cc: Include "safe_memory.h".
	(client_shmmgr::instance): Use the "safe" new/delete macros.
	(client_shmmgr::shmdt): Ditto.
	(client_shmmgr::new_segment): Ditto.

2002-07-11  Conrad Scott  <conrad.scott@@dsl.pipex.com>

	* cygserver_process (process::process): Add the client's cygpid
	and winpid to all tracing statements as appropriate.
	(process::exit_code): Ditto.
	(process_cache::check_and_remove_process): Ditto.
	* cygserver_shm.cc (server_shmmgr::shmat): Ditto.
	(server_shmmgr::shmdt): Ditto.
	(server_shmmgr::shmctl): Add a process object argument and remove
	the explicit cygpid argument.  Add the client's cygpid and winpid
	to all tracing statements as appropriate.
	(server_shmmgr::shmget): Ditto.
	(client_request_shm::serve): Update for the new signature of the
	shmctl and shmget methods.

2002-07-11  Conrad Scott  <conrad.scott@@dsl.pipex.com>

	* cygserver.cc (client_request_shutdown::serve): Don't set the
	shutdown flag directly, but send a SIGINT, as the signal handler
	sets the flag and the signal breaks the pause(2) in the main loop.
	(print_usage): Add new options.
	(main): Add new --cleanup-threads and --request-threads options to
	set the number of threads used by the daemon.  Use pause(2) rather
	the win32 Sleep in the main loop.
	* shm.cc (shmat): Add sigframe.
	(shmctl): Ditto.
	(shmdt): Ditto.
	(shmget): Ditto.

2002-07-11  Conrad Scott  <conrad.scott@@dsl.pipex.com>

	* cygserver_shm.cc: Automatically detach processes from any
	segments they are attached to at exit.
	(class server_shmmgr::attach_t): New class.
	(server_shmmgr::segment_t::IS_DELETED): Rename and make private.
	(server_shmmgr::segment_t::_sequence): Make private.
	(server_shmmgr::segment_t::_flg): Ditto.
	(server_shmmgr::segment_t::_hFileMap): Ditto.
	(server_shmmgr::segment_t::_attach_head): New private field.
	(server_shmmgr::segment_t::segment_t): Initialise new fields.
	Make non-inline.
	(server_shmmgr::segment_t::~segment_t): New method.
	(server_shmmgr::segment_t::is_deleted): Ditto.
	(server_shmmgr::segment_t::is_pending_delete): Ditto.
	(server_shmmgr::segment_t::mark_deleted): Ditto.
	(server_shmmgr::segment_t::attach): Ditto.
	(server_shmmgr::segment_t::detach): Ditto.
	(server_shmmgr::segment_t::find): Ditto.
	(class server_shmmgr::cleanup_t): New class.
	(server_shmmgr::_shm_atts): New private field.
	(server_shmmgr::shmat): Add a process object argument to replace
	the removed process_cache, cygpid and winpid arguments.  Remove
	the process_cache manipulations.  Move body of code to the
	segment_t::attach method.  Increment _shm_atts when required.
	Update tracing statements.
	(server_shmmgr::shmdt): Add a process object argument to replace
	the removed cygpid argument.  Move body of code to the
	segment_t::detach method.  Decrement _shm_atts when required.
	Update tracing statements.
	(server_shmmgr::shmget): Use the new segment_t::is_deleted method.
	(server_shmmgr::server_shmmgr): Initialise the new _shm_atts
	field.
	(server_shmmgr::delete_segment): Remove the CloseHandle code, as
	this is now done in the segment_t destructor.
	(client_request_shm::serve): Look up the client's process object
	and pass to the server_shmmgr::shmat and server_shmmgr::shmdt
	methods rather than passing the cache, winpid and cygpid.
	* cygserver_process.h: Add a cygpid to the process object to make
	it more useful and then pass process objects rather than winpids
	where possible.
	(cleanup_routine::cleanup): Change argument to be a pointer to a
	process object.
	(class process): Re-order fields for no discernible reason.
	(process::_cygpid): New field.
	(process::process): Add a cygpid argument.
	(process::winpid): New method.
	(process::cygpid): Ditto.
	(process::add): Make public, as it always should have been.
	(process_cache::process): Add a cygpid argument.
	* cygserver_process.cc (process::process): Add a cygpid argument
	and use it to initialise the `_cygpid' field.  Re-order
	initialisers to match new field order.
	(process::cleanup): Pass `this' rather than just the winpid to
	cleanup_routine::cleanup.
	(process_cache::process): Add a cygpid argument and pass it to the
	process object constructor.
	* include/sys/shm.h (shmatt_t): Make unsigned as per SUSv3.
	(shm_info::shm_atts): New field.

2002-07-11  Conrad Scott  <conrad.scott@@dsl.pipex.com>

	* cygserver_shm.cc (class server_shmmgr::segment_t): Add `_'
	prefix to the names of all fields.

2002-07-10  Conrad Scott  <conrad.scott@@dsl.pipex.com>

	* msg.cc: New file of stub functions, no functionality.
	* sem.cc: Ditto.
	* shm.cc (client_shmmgr::shmctl): Add support for an out shm_info
	buffer for the SHM_INFO command.
	(client_shmmgr::shmget): Use %X to print keys.
	* include/sys/ipc.h: Comment all fields and values.
	(IPC_PRIVATE): Change to be non-negative.
	* include/sys/msg.h: New file with SUSv3 and ipcs(8) interfaces.
	* include/sys/sem.h: Ditto.
	* include/sys/shm.h: Comment all fields and values.
	(struct shm_info): New struct.
	* cygserver_shm.h (client_request_shm::shminfo): Rename.
	(client_request_shm::shm_info): New method.
	(client_request_shm::_parameters.out.hFileMap): Move into union.
	(client_request_shm::_parameters.out.shminfo): Rename.
	(client_request_shm::_parameters.out.shm_info): New field.
	* cygserver_shm.cc (server_shmmgr::_shm_ids): Rename.
	(server_shmmgr::_shm_tot): New field.
	(server_shmmgr::shmctl): Rename `out_shminfo' argument.  Add
	`out_shm_info' argument.  Fill in the `out_shm_info' argument in
	the SHM_INFO command.
	(server_shmmgr::shmget): Check `shmflg' against the mode of
	existing segments as per Stevens 1990, p. 123.
	(server_shmmgr::server_shmmgr): Initialise the new `_shm_tot'
	field.
	(server_shmmgr::new_segment): Set ENOMEM if CreateFileMapping
	fails.  Pass `size' to new_segment.
	(server_shmmgr::new_segment): Add size argument and use it to
	check against and update the new `_shm_tot' field.
	(server_shmmgr::delete_segment): Update the new `_shm_tot' field.
	* Makefile.in (DLL_OFILES): Add new DLL object files.

2002-07-09  Conrad Scott  <conrad.scott@@dsl.pipex.com>

	* cygserver_transport_pipes.cc: The main change is to make the
	client try harder to connect to the server if it's previously
	connected, and so has good grounds for believing that the server
	is running.
	(MAX_WAIT_NAMED_PIPE_RETRY): Change to be an enumerator.
	(WAIT_NAMED_PIPE_TIMEOUT): Ditto.
	(transport_layer_pipes::accept): Use interlocked operators on
	`pipe_instance'.
	(transport_layer_pipes::close): Rearrange so that FlushFileBuffers
	and DisconnectNamedPipe are only called for accepted endpoints.
	Use interlocked operators on `pipe_instance'.
	(transport_layer_pipes::read): Use set_errno where required.
	(transport_layer_pipes::write): Ditto.
	(transport_layer_pipes::connect): Add local static variable
	`assume_cygserver'.  Set it if a connection is made to cygserver,
	clear it if a connection is not made even after retrying.  If set,
	ignore all errors from CreateFile and retry the connection.  Catch
	the situation where WaitNamedPipe fails to wait [sic] and add a
	`Sleep (0)' so that the server gets a chance to run.

2002-07-03  Conrad Scott  <conrad.scott@@dsl.pipex.com>

	* dcrt0.cc: Only check for cygserver if and when required.
	(dll_crt0_1): Remove call to `cygserver_init ()'.
	* fhandler_tty.cc (fhandler_tty_slave::open): Change the cygserver
	logic to allow for the fact that `cygserver_init ()' may not yet
	have been called.
	(fhandler_tty_slave::cygserver_attach_tty): Tweak the cygserver
	request logic to conform to the practice elsewhere in the code.
	* tty.cc (tty::common_init): Add an explicit call to
	`cygserver_init ()' if it hasn't already been called.
	* include/cygwin/cygserver.h (CYGSERVER_UNAVAIL): Rename from
	`CYGSERVER_DEAD'.
	(client_request_get_version::check_version): Make available in
	cygserver as well the DLL.
	(check_cygserver_available): Ditto.  Remove `check_version_too'
	argument.
	(cygserver_init): Ditto.  And likewise.
	* cygserver_client.cc (client_request_get_version::check_version):
	Make available in cygserver as well the DLL.
	(client_request::make_request): This may now be called without
	`cygserver_init ()' having been called first.  Detect this and
	call it as required.  Add tracing.
	(check_cygserver_available): Make available in cygserver as well
	the DLL.  Remove `check_version_too' argument and always check the
	version information.  And since this is called from within
	`cygserver_init ()', force `cygserver_running' before calling
	`client_request::make_request ()'.
	(cygserver_init): Make available in cygserver as well the DLL.
	Remove `check_version_too' argument.

2002-07-03  Conrad Scott  <conrad.scott@@dsl.pipex.com>

	* cygserver_shm.cc: Implement the ipcs(8) interfaces, IPC_INFO,
	SHM_STAT and SHM_INFO.
	(server_shmmgr::segment_t::sequence): New static field.
	(server_shmmgr::segment_t::key): Remove field, use the new
	ds.shm_perm.key field instead.
	(server_shmmgr::segment_t::shmid): Remove field.
	(server_shmmgr::segment_t::intid): New field.
	(server_shmmgr::segment_t::segment_t): Use the `key' argument to
	initialise `ds.shm_perm.key'.  Change from using `shmid' to
	`intid'.
	(server_shmmgr::_shmseg_cnt): Renamed from `_shmid_cnt'.
	(server_shmmgr::_intid_max): Renamed from `_shmid_max.
	(server_shmmgr::shmat): Move the out arguments to the start of the
	argument list.  Rename the `pid' argument as `cygpid'.  Add
	tracing.  Pass an intid to `find ()', not a shmid.
	(server_shmmgr::shmctl): Add separate out arguments.  Rename the
	`pid' argument as `cygpid'.  Add support for the ipcs(8)
	interfaces.  Add tracing.  Pass an intid to `find ()', not a
	shmid.
	(server_shmmgr::shmdt): Rename the `pid' argument as `cygpid'.
	Add tracing.  Pass an intid to `find ()', not a shmid.
	(server_shmmgr::shmget): Add a separate out arguments.  Rename the
	`pid' argument as `cygpid'.  Add tracing.
	(server_shmmgr::server_shmmgr): Update for new field names.
	(server_shmmgr::find_by_key): Update for the new `ds.shm_perm.key'
	field.
	(server_shmmgr::find): Update to use the new `segment_t::intid'
	field.
	(server_shmmgr::new_segment): Rename the `pid' argument as
	`cygpid'.  Check that the requested size is within bounds.  Handle
	new error result from `new_segment (key, HANDLE)'.
	(server_shmmgr::new_segment): Work with intids, not shmids.  Check
	that the new intid is within bounds.  Update for new field names.
	(server_shmmgr::delete_segment): Pass an intid to `find ()', not a
	shmid.  Update for new field names.
	(client_request_shm::serve): Check that the incoming message
	length is the size of the `_parameters.in' struct, not of the
	whole in/out parameter union.  Likewise, set the outgoing message
	length to the size of the `_parameters.out' struct.  Update for
	the new server_shmmgr interfaces.
	* include/sys/ipc.h (ipc_perm::key): New field.
	* include/sys/shm.h (SHM_INFO): New constant.
	* cygserver_ipc.h (IPCMNI): New constant.
	(ipc_int2ext): Add `sequence' argument and munge this into the
	external ipc id.
	(ipc_ext2int_subsys): Unmunge the sequence number from the
	external ipc id.
	(ipc_ext2int): Ditto.
	(ipc_inc_id): Remove.
	(ipc_dec_id): Remove.
	* cygserver_shm.h (SHMMAX): New constant.
	(SHMMIN): Ditto.
	(SHMMNI): Ditto.
	(SHMSEG): Ditto.
	(SHMALL): Ditto.
	(client_request_shm::_parameters): Re-arrange as a union of two
	separate structs, one for in arguments, the other for out.
	(client_request_shm::shmid): Update for the new parameter layout.
	(client_request_shm::ds): Ditto.
	(client_request_shm::info): New method.
	* shm.cc (client_shmmgr::_shmat_cnt): New static field.
	(client_shmmgr::shmat): Add locking.  Add tracing.
	(client_shmmgr::shmctl): Update for ipcs(8) commands.  Add
	tracing.  Add more argument checking.
	(client_shmmgr::shmdt): Add locking.  Add tracing.  Update the new
	`_shmat_cnt' field.
	(client_shmmgr::shmget): Add tracing.
	(client_shmmgr::fixup_shms_after_fork): Add tracing.  Add
	consistency checking.
	(client_shmmgr::attach): Add more tracing.
	(client_shmmgr::new_segment): Update the new `_shmat_cnt' field.
	(client_request_shm::client_request_shm): Update for the new
	parameter layout.  Set the outgoing message length to the size of
	the `_parameters.in' struct, not of the whole in/out parameter
	union.

2002-07-02  Conrad Scott  <conrad.scott@@dsl.pipex.com>

	* shm.cc: Remove the use of a static client_shmmgr object.
	(client_shmmgr::_instance): New static variable.
	(client_shmmgr::instance): Allocate a new shmmgr on the heap,
	rather than using a local static object.

2002-07-01  Conrad Scott  <conrad.scott@@dsl.pipex.com>

	* cygserver_transport.cc (create_server_transport): Fix
	cut-and-paste error.

2002-06-30  Conrad Scott  <conrad.scott@@dsl.pipex.com>

	* cygserver_client.cc (client_request::handle_request): Don't
	bother with the client request activity marker when compiled with
	debugging output.

2002-06-30  Conrad Scott  <conrad.scott@@dsl.pipex.com>

	* cygserver_transport_pipes.cc
	(MAX_WAIT_NAMED_PIPE_RETRY): New constant.
	(WAIT_NAMED_PIPE_TIMEOUT): Ditto.
	(transport_layer_pipes::close): The `pipe' field is now either
	NULL or a valid handle, and it should never have the value
	`INVALID_HANDLE_VALUE'.
	(transport_layer_pipes::read): Ditto.
	(transport_layer_pipes::write): Ditto.
	(transport_layer_pipes::connect): Ditto.
	(transport_layer_pipes::impersonate_client): Ditto.
	(transport_layer_pipes::connect): Ditto.  New, but still bogus,
	retry logic.

2002-06-30  Conrad Scott  <conrad.scott@@dsl.pipex.com>

	* cygserver_shm.cc (server_shmmgr::server_shmmgr): All fields have
	to be initialized now that the singleton is no longer static.

2002-06-30  Conrad Scott  <conrad.scott@@dsl.pipex.com>

	* cygserver_shm.cc (server_shmmgr::_instance): New static field.
	(server_shmmgr::_instance_once): Ditto.
	(server_shmmgr::initialise_instance): New static method.
	(server_shmmgr::instance): Use a pthread_once_t rather than
	relying on a local static variable.

2002-06-30  Conrad Scott  <conrad.scott@@dsl.pipex.com>

	* woutsup.h: Remove all uses of the C++ new and delete operators
	throughout cygserver until they are fully thread-safe.
	(safe_new0): New macro to replace the C++ new operator.
	(safe_new): Ditto.
	(safe_delete): New macro to replace the C++ delete operator.
	* cygserver_client.cc (client_request::handle_request): Replace
	all uses of the C++ new and delete operators with the new macros
	from "woutsup.h".
	(client_request::make_request): Ditto.
	* cygserver_process.cc (~process_cleanup): Ditto.
	(process::cleanup): Ditto.
	(process_cache::process): Ditto.
	(process_cache::check_and_remove_process): Ditto.
	* cygserver_shm.cc (server_shmmgr::new_segment): Ditto.
	(server_shmmgr::delete_segment): Ditto.
	* cygserver_transport.cc (create_server_transport): Ditto.
	* cygserver_transport_pipes.cc
	(transport_layer_pipes::accept): Ditto.
	* cygserver_transport_sockets.cc
	(transport_layer_sockets::accept): Ditto.
	* threaded_queue.cc (~threaded_queue): Ditto.
	(threaded_queue::worker_loop): Ditto.
	(threaded_queue::stop): Replace sleep(3) with win32 Sleep.
	* cygserver.cc (~server_request): Replace all uses of the C++ new
	and delete operators with the new macros from "woutsup.h".
	(server_submission_loop::request_loop): Ditto.
	(main): Ditto.  Replace sleep(3) with win32 Sleep.  Replace
	iostreams with FILEs.
	(print_usage): Replace iostreams with FILEs.
	(print_version): Ditto.

2002-06-30  Conrad Scott  <conrad.scott@@dsl.pipex.com>

	* cygserver_transport_sockets.cc
	(transport_layer_sockets::accept): Rename local variable
	`accept_fd' to avoid shadowing the `fd' field.

2002-06-29  Conrad Scott  <conrad.scott@@dsl.pipex.com>

	* cygwin_ipc.h: Moved (back) to "include/sys/ipc.h".
	* cygwin_shm.h: Moved (back) to "include/sys/shm.h".
	* include/sys/ipc.h: New file.
	* include/sys/shm.h: New file.
	* cygserver_shm.h: Update for new header file locations.
	* ipc.cc: Ditto.

2002-06-28  Conrad Scott  <conrad.scott@@dsl.pipex.com>

	* cygserver_client.cc (client_request::make_request): Comment out
	a verbose tracing statement.
	* cygserver_process.cc (process_cache::sync_wait_array): Fix
	broken assert.
	* include/cygwin/cygserver.h (class client_request): Remove excess
	use of `class' qualifier in declarations.
	(class client_request_get_version): Ditto.
	(class client_request_shutdown): Ditto.
	(class client_request_attach_tty): Ditto.

2002-06-28  Conrad Scott  <conrad.scott@@dsl.pipex.com>

	* cygserver_ipc.h: New file.
	* cygserver_shm.h: Re-written from scratch.
	* cygserver_shm.cc: Ditto.
	* shm.cc: Ditto.

2002-06-28  Conrad Scott  <conrad.scott@@dsl.pipex.com>

	* threaded_queue.h (class queue_request): Re-write.
	(threaded_queue_thread_function): Remove.
	(class queue_process_param): Remove.
	(class threaded_queue): Re-write.
	(class queue_submission_loop): New version of the old
	`queue_process_param' class.
	(TInterlockedExchangePointer): New templated function.
	(TInterlockedCompareExchangePointer): Ditto.
	* threaded_queue.cc (worker_function): Remove.
	(class threaded_queue): Re-write.
	(class queue_process_param): Remove.
	(class queue_submission_loop): New version of the old
	`queue_process_param' class.
	* include/cygwin/cygserver_process.h (process_cleanup): Re-write.
	(class process_process_param): Remove.
	(class cleanup_routine): Re-write.
	(class process): Re-write.
	(class process_cache): Re-write.
	* cygserver_process.cc (process_cleanup): Re-write.
	(class process_process_param): Remove.
	(class cleanup_routine): Re-write.
	(class process): Re-write.
	(class process_cache): Re-write.
	* cygserver.cc (request_count): Remove unused variable.
	(class server_request): Move methods inline.
	(class server_process_param): Remove.
	(class server_request_queue): Remove.
	(request_queue): Move into `main ()' and change type to
	`threaded_queue'.
	(request_loop): Remove.
	(class server_submission_loop): New version of the old
	`server_process_param' class.
	(shutdown_server): New variable.
	(client_request_shutdown::serve): Set `shutdown_server' to trigger
	shutdown.
	(handle_signal): Ditto.
	(main): Install signal handler for SIGINT rather than SIGQUIT.
	Use new interfaces for the `request_queue' and the `cache'.
	Create a `server_submission_loop' and add to the `request_queue'.
	Add check for the `shutdown_server' variable to the main loop.
	* cygserver_shm.cc (client_request_shm::serve): Release the
	process object after use.

2002-06-27  Conrad Scott  <conrad.scott@@dsl.pipex.com>

	* cygserver_client.cc (client_request::handle_request): Correct
	tracing statement.
	* cygserver_transport_pipes.cc: Remove local definition of
	FILE_FLAG_FIRST_PIPE_INSTANCE constant.
	* cygwin_ipc.h: Update copyright notice.
	* cygwin_shm.h: Ditto.
	* woutsup.h: Add definition of _WIN32_WINNT.

2002-06-24  Conrad Scott  <conrad.scott@@dsl.pipex.com>

	* cygserver_client (client_request::make_request): Replace my
	inappropriate use of set_errno () with error_code () throughout.

2002-06-24  Conrad Scott  <conrad.scott@@dsl.pipex.com>

	* include/cygwin/cygserver.h: Add forward declarations of class
	transport_layer_base and class process_cache to reduce
	dependencies between header files.
	* include/cygwin/cygserver_process.h: Add include of
	"threaded_queue.h".
	* cygserver.cc: Remove unnecessary cygserver header files.
	* cygserver_client.cc: Ditto.
	* cygserver_process.cc: Ditto.
	* cygserver_shm.cc: Ditto.
	* cygserver_shm.h: Ditto.
	* cygserver_transport_pipes.cc: Ditto.
	* dcrt0.cc: Ditto.
	* fhandler_tty.cc: Ditto.
	* tty.cc: Ditto.

2002-06-24  Conrad Scott  <conrad.scott@@dsl.pipex.com>

	* cygserver_shm.h: Replace <sys/shm.h> with "cygwin_shm.h" after
	merge from HEAD.
	* cygwin_ipc.h: Update with changes to include/sys/ipc.h lost in
	merge from HEAD.
	* cygwin_shm.h: Ditto.

2002-06-21  Conrad Scott  <conrad.scott@@dsl.pipex.com>

	* cygserver.cc: The tests for a duplicate server instance are now
	the responsibility of the transport layer.
	(request_loop): Use new `recoverable' flag in call to
	`cygserver_transport::accept ()' and shutdown on an unrecoverable
	error.
	(main): Never call `cygserver_init ()'.  Fake `cygserver_running'
	just for sending a shutdown request.
	* cygserver_client.cc (client_request::send): Comment out
	message-size tracing statements as verbose.
	(client_request::handle): Ditto.
	(client_request_get_version::check_version): #ifdef as DLL-only.
	(check_cygserver_available): Ditto.
	(cygserver_init): Ditto.
	* include/cygwin/cygserver.h
	(client_request_get_version::check_version): #ifdef as DLL-only.
	(check_cygserver_available): Ditto.
	(cygserver_init): Ditto.
	* include/cygwin/cygserver_transport.h
	(transport_layer_base::impersonate_client): #ifdef as
	cygserver-only.
	(transport_layer_base::revert_to_self): Ditto.
	(transport_layer_base::listen): Ditto.
	(transport_layer_base::accept): Ditto.  Add a `recoverable' out
	flag for error handling.
	* include/cygwin/cygserver_transport_sockets.h: Ditto.
	* include/cygwin/cygserver_transport_pipes.h: Ditto.
	(transport_layer_pipes): Change type of the `pipe_name' field.
	Remove the `inited' field, as unnecessary.  Add new
	`is_accepted_endpoint' field.
	* include/cygwin/cygserver_transport.cc
	(transport_layer_base::impersonate_client): #ifdef as
	cygserver-only.
	(transport_layer_base::revert_to_self): Ditto.
	* include/cygwin/cygserver_transport_sockets.cc
	(transport_layer_sockets::listen): #ifdef as cygserver-only.
	(transport_layer_sockets::accept): #ifdef as cygserver-only.
	Analyse any errno from `accept ()' and set `recoverable' as
	appropriate.
	* cygserver_transport_pipes.cc: Add local #define of
	`FILE_FLAG_FIRST_PIPE_INSTANCE'.
	(pipe_instance_lock_once): New variable.
	(pipe_instance_lock): Ditto.
	(pipe_instance): Ditto.
	(initialise_pipe_instance_lock): New function.
	(transport_layer_pipes::transport_layer_pipes): Change
	initialization of `pipe_name'.  Initialize `is_accepted_endpoint'
	as appropriate.  Remove use of `inited'.
	(transport_layer_pipes::impersonate_client): #ifdef as
	cygserver-only.
	(transport_layer_pipes::revert_to_self): Ditto.
	(transport_layer_pipes::listen): Ditto.
	(transport_layer_pipes::accept): Ditto.  Keep track of how often
	many named pipes have been created, in the `pipe_instance'
	variable, and pass the `FILE_FLAG_FIRST_PIPE_INSTANCE' flag on the
	open of the first instance.  Analyse the error code from
	`CreateNamedPipe ()' and set the `recoverable' flag as
	appropriate.
	(transport_layer_pipes::close): Update the `pipe_instance' count.

2002-06-18  Conrad Scott  <conrad.scott@@dsl.pipex.com>

	* woutsup.h (cygserver_running): Add declaration.
	(api_fatal): Eliminate.
	* include/cygwin/cygserver.h
	(client_request_get_version::check_version): Change return type to
	bool.
	(check_cygserver_available): New function.
	(cygserver_init): Add check_version_too argument.
	* cygserver_client.cc (allow_daemon): Make a bool.
	(client_request_get_version::make_request): See errno on error.
	Remove special case for CYGSERVER_REQUEST_GET_VERSION; this is now
	handled in cygserver_init().
	(client_request_get_version::check_version): Use syscall_printf()
	instead of api_fatal(). Return true if cygserver version is
	compatible.
	(check_cygserver_available): New function; code moved here from
	cygserver_init().
	(cygserver_init): Move some code into check_cygserver_available().
	* cygserver.cc (__set_errno): Copy from debug.cc so that
	set_errno() can be used when __OUTSIDE_CYGWIN__.
	(main): Call cygserver_init() to set up cygserver_running and add
	checks against this to (try and) prevent multiple copies of
	cygserver running simultaneously.  Remember to delete all
	transport connections so that (one day) the transport classes can
	tidy up on cygserver shutdown.

2002-06-17  Conrad Scott  <conrad.scott@@dsl.pipex.com>

	* cygserver.cc (main): Adjust tracing output for a cleaner display
	when compiled without --enable-debugging.
	* threaded_queue.cc (threaded_queue::cleanup): Ditto.
	(queue_process_param::stop): Ditto.
	* include/cygwin/cygserver.h
	(client_request::make_request): Make non-virtual.
	(client_request::send): Make virtual and protected, not private.
	(client_request_attach_tty::send): New virtual method.
	* cygserver_client.cc: Use the `msglen()' accessor rather than
	`_header.msglen' throughout.
	(client_request_attach_tty::send): New method.
	(client_request::make_request): Remove the explicit close of
	`transport' as it is closed on deletion.

2002-06-17  Conrad Scott  <conrad.scott@@dsl.pipex.com>

	* include/cygwin/cygserver.h: Change the client_request classes to
	give greater encapsulation and to allow variable length requests
	and replies.
	(enum cygserver_request_code): Now client_request::request_code_t.
	(class request_header): Now client_request::header_t.  Make a
	union of the request_code and the error_code.  The `cb' field,
	which was the buffer length, is now the `size_t msglen' field.
	(struct request_get_version): Now
	client_request_get_version::request_get_version.
	(struct request_shutdown): Remove unused type.
	(struct request_attach_tty): Now
	client_request_attach_tty::request_attach_tty.
	(client_request::_buf): Make field const.
	(client_request::_buflen): New const private field.
	(client_request::request_code): New accessor.
	(client_request::error_code): Ditto.
	(client_request::msglen): Ditto.
	(client_request::handle_request): New static method.
	(client_request::make_request): New virtual method.
	(client_request::handle): New method.
	(client_request::send): Make private.
	(client_request_get_version::check_version): New method.
	(client_request_get_version::serve): Make private.
	(client_request_get_version::version): Ditto.
	(client_request_shutdown::serve): Ditto.
	(client_request_attach_tty::req): Ditto.
	(client_request_attach_tty::serve): Ditto.
	(client_request_attach_tty::from_master): Make method const.
	(client_request_attach_tty::from_master): Ditto.
	* cygserver_client.cc
	(client_request_get_version::client_request_get_version): Track
	changes to the client_request classes.
	(client_request_attach_tty::client_request_attach_tty): Ditto.
	(client_request_get_version::check_version): New method to
	encapsulate code from cygserver_init().
	(client_request_shutdown::client_request_shutdown): Move into
	"cygserver.cc".
	(client_request::send): Track changes to the client_request
	classes.  Add more error checking.
	(client_request::handle_request): New static method containing the
	first half of the old server_request::process() code.
	(client_request::make_request): New method to replace the old
	cygserver_request() function.
	(client_request::handle): New method containing the second half of
	the old server_request::process() code.
	(cygserver_init): Track changes to the client_request classes.  In
	particular, some code moved into the
	client_request_get_version::check_version() method.
	* cygserver.cc (client_request_attach_tty::serve): Track changes
	to the client_request classes.  In particular, only return a reply
	body if some handles are successfully duplicated for the client.
	And remove goto's.
	(client_request_get_version::serve): Track changes to the
	client_request classes.
	(client_request_shutdown::serve): Ditto.
	(class client_request_invalid): Dead, and so young too.
	(server_request::request_buffer): Remove unnecessary field.
	(client_request_shutdown::client_request_shutdown): Moved here
	from "cygserver_client.cc".
	(server_request::process): Implementation moved into the new
	client_request::handle_request() and client_request::handle()
	methods.
	* cygserver_shm.h (class client_request_shm): Put client- and
	server-specific interfaces inside #ifdef/#ifndef __INSIDE_CYGWIN__
	guards.
	(client_request_shm::serve): Make private.
	* cygserver_shm.cc
	(client_request_shm::client_request_shm): Track changes to the
	client_request classes.
	(client_request_shm::serve): Ditto
	* shm.cc (client_request_shm::client_request_shm): Ditto.  Use
	alloc_sd() rather than set_security_attribute() to get access to
	the SECURITY_DESCRIPTOR length, so that we can use it to set the
	request body length.
	(shmat): Track changes to the client_request classes. In
	particular, allocate client_request objects on the stack rather
	than on the heap, and use the client_request::make_request()
	method rather than the old cygserver_request() function.
	(shmdt): Ditto.
	(shmctl): Ditto.
	(shmget): Ditto.
	* fhandler_tty.cc (fhandler_tty_slave::cygserver_attach_tty): Ditto.

2002-06-17  Conrad Scott  <conrad.scott@@dsl.pipex.com>

	* include/cygwin/cygserver_transport.h
	(cygserver_transport::read): Change buffer type to void *.
	(cygserver_transport::write): Ditto.
	* include/cygwin/cygserver_transport_sockets.h
	(cygserver_transport_sockets::read): Ditto.
	(cygserver_transport_sockets::write): Ditto.
	* include/cygwin/cygserver_transport_pipes.h
	(cygserver_transport_pipes::read): Ditto.
	(cygserver_transport_pipes::write): Ditto.
	* cygserver_transport_sockets.cc
	(cygserver_transport_sockets::read): Ditto.
	(cygserver_transport_sockets::write): Ditto.
	* cygserver_transport_pipes.cc
	(cygserver_transport_pipes::read): Ditto. Set errno on error, to
	match behaviour of cygserver_transport_sockets class.
	(cygserver_transport_pipes::write): Ditto.

2002-06-16  Conrad Scott  <conrad.scott@@dsl.pipex.com>

	* cygserver.cc (version): New static variable.
	(server_request_queue::add_connection): Remove my gratuitous use
	of studly caps.
	(setup_privileges): Declare static.
	(handle_signal): Ditto.
	(longopts): Make a local variable of main().
	(opts): Ditto.
	(print_usage): New function.
	(print_version): Ditto (tip of the hat to Joshua Daniel Franklin
	for inspiration here).
	(main): More argument checking.  Add --help and --version options.

2002-06-16  Conrad Scott  <conrad.scott@@dsl.pipex.com>

	* include/cygwin/cygserver.h (client_request::serve): Make pure
	virtual.
	* cygserver.cc (client_request::serve): Remove definition of pure
	virtual method.
	(class client_request_invalid): New class.
	(server_request::process): Use new client_request_invalid
	class. And remove goto's.

2002-06-16  Conrad Scott  <conrad.scott@@dsl.pipex.com>

	* cygserver.cc (class server_request): Add virtual destructor.
	(server_request_queue::addConnection): New method to replace bad
	virtual add() method.
	(request_loop): Replace call to queue->add() with call to
	queue->addConnection().
	(server_request::server_request): Use field initialization.
	(server_request::~server_request): New virtual destructor.
	(server_request::process): Remove close and delete of
	transport_layer_base object. It is deleted by the server_request's
	own destructor and closed by its own destructor.
	* include/cygwin/cygserver.h
	(client_request::operator request_header): Remove unused method.
	* cygserver_client.cc: Ditto.
	* include/cygwin/cygserver_process.h
	(class cleanup_routine): Add virtual destructor.
	(cleanup_routine::cleanup): Make pure virtual.
	(class process_cache): Make destructor non-virtual.
	(process_cache::add): Ditto.
	* cygserver_process.cc
	(cleanup_routine::~cleanup_routine): New virtual destructor.
	* include/cygwin/cygserver_transport.h
	(class transport_layer_base): Add virtual destructor.
	* cygserver_transport.cc
	(transport_layer_base::~transport_layer_base): New virtual
	destructor.
	* include/cygwin/cygserver_transport_pipes.h
	(class transport_layer_pipes): Add virtual destructor.
	* cygserver_transport_pipes.cc
	(transport_layer_pipes::~transport_layer_pipes): New virtual
	destructor.
	(transport_layer_pipes::close): Null out handle after closing.
	* include/cygwin/cygserver_transport_sockets.h
	(class transport_layer_sockets): Add virtual destructor.
	* cygserver_transport_sockets.cc
	(transport_layer_sockets::~transport_layer_sockets): New virtual
	destructor.
	(transport_layer_sockets::close): Null out fd after closing.
	* threaded_queue.h (class queue_request): Add virtual destructor.
	(queue_request::process): Make pure virtual.
	* threaded_queue.cc (~queue_request): New virtual destructor.
	(queue_request::process): Remove definition of pure virtual
	method.

2002-06-16  Conrad Scott  <conrad.scott@@dsl.pipex.com>

	* include/cygwin/cygserver.h (client_request::send): Make
	non-virtual.
	(class client_request_attach_tty): Put client- and server-specific
	interfaces inside #ifdef/#ifndef __INSIDE_CYGWIN__ guards.
	* cygserver_client.cc: Ditto.
	(cygserver_init): Fix error handling.

2002-06-16  Conrad Scott  <conrad.scott@@dsl.pipex.com>

	* cygserver.cc: Throughout the code, check and correct level of
	the XXX_printf() functions used. Comment out several of the
	debug_printf() calls with "// verbose:".  Reformat and correct
	typos of some of the XXX_printf() formats.
	* cygserver_process.cc: Ditto.
	* cygserver_shm.cc: Ditto.
	* cygserver_transport_pipes.cc: Ditto.
	* cygserver_transport_sockets.cc: Ditto.
	* shm.cc (hi_ulong): New function to allow printing of a 64-bit
	key with current small_printf implementation.
	(lo_ulong): Ditto.
	(client_request_shm::client_request_shm): Use hi_ulong() and
	lo_ulong() in call to debug_printf().

2002-06-16  Conrad Scott  <conrad.scott@@dsl.pipex.com>

	* cygserver_shm.cc: Remove #define __INSIDE_CYGWIN__ from around
	<sys/shm.h> as it no longer contains any internal code.

2002-06-16  Conrad Scott  <conrad.scott@@dsl.pipex.com>

	* include/sys/ipc.h (IPC_PRIVATE): Add cast to key_t.
	(IPC_INFO): New flag for ipcs(8).
	(IPC_RMID IPC_SET IPC_STAT): Renumber.
	* include/sys/shm.h (SHM_RDONLY SHM_RND): Renumber with distinct
	values [sic].
	(class _shmattach): Internal type moved to "cygserver_shm.h".
	(class shmnode): Ditto.
	(class shmid_ds): Ditto.
	(struct shmid_ds): Add spare fields.
	(struct shminfo): New type for IPC_INFO interface.
	* cygserver_shm.h: Remove obsolete #if 0 ... #endif block.
	(class shm_cleanup): Remove unused class.
	(struct _shmattach): Internal type moved from <sys/shm.h>.
	(struct shmnode): Ditto.
	(struct int_shmid_ds): Ditto. Renamed to avoid name clash with
	public interface struct shmid_ds. Use the shmid_bs structure as a
	field.
	* cygserver_shm.cc: Remove obsolete #if 0 ... #endif block.
	(client_request_shm::serve): Update for redefinition of
	int_shmid_ds structure.
	* shm.cc (build_inprocess_shmds): Ditto.
	(fixup_shms_after_fork): Ditto.
	(shmctl): Ditto.
	(shmget): Ditto. Remove obsolete #if 0 ... #endif code.

2002-06-16  Conrad Scott  <conrad.scott@@dsl.pipex.com>

	* include/cygwin/cygserver_transport.h
	(transport_layer_base::transport_layer_base): Remove since it is
	now redundant.
	(transport_layer_base::listen): Make a pure virtual method.
	(transport_layer_base::accept): Ditto.
	(transport_layer_base::close): Ditto.
	(transport_layer_base::read): Ditto.
	(transport_layer_base::write): Ditto.
	(transport_layer_base::connect): Ditto.
	* cygserver_transport.cc
	(transport_layer_base::transport_layer_base): Remove since it is
	now redundant.
	(transport_layer_base::listen): Remove since it is now a pure
	virtual method.
	(transport_layer_base::accept): Ditto.
	(transport_layer_base::close): Ditto.
	(transport_layer_base::read): Ditto.
	(transport_layer_base::write): Ditto.
	(transport_layer_base::connect): Ditto.

2002-06-16  Conrad Scott  <conrad.scott@@dsl.pipex.com>

	* cygserver.cc (check_and_dup_handle): Only use security code if
	running on NT, i.e. if wincap.has_security().
	(client_request_attach_tty::serve): Add check for has_security().
	* cygserver_process.cc (process_cache::process): Use DWORD winpid
	throughout to avoid win32 vs. cygwin pid confusion.
	(process::process): Ditto.
	* cygserver_shm.cc (client_request_shm::serve): Only use security
	code if running on NT, i.e. if wincap.has_security().
	* cygserver_shm.h (client_request_shm::parameters.in): Replace the
	ambiguous pid field with cygpid and winpid fields.
	(client_request_shm::client_request_shm): Reduce to only two
	client-side constructors: one for SHM_CREATE, another for all the
	other requests.
	* shm.cc (client_request_shm::client_request_shm):
	Ditto. Initialize cygpid and winpid fields here. On NT initialize
	sd_buf here using set_security_attribute() to make use of the euid
	and egid.
	(shmat): Use new client_request_shm constructor.
	(shmdt): Ditto.
	(shmctl): Ditto.
	(shmget): Ditto. Remove security code, now performed in the
	relevant client_request_shm constructor.
	* include/cygwin/cygserver_process.h: (class cleanup_routine):
	Change winpid type to DWORD.
	(class process): Ditto.

2002-06-15  Conrad Scott  <conrad.scott@@dsl.pipex.com>

	* woutsup.h: New file.
	* cygserver.cc: Use "woutsup.h" and new XXX_printf macros.
	(getfunc): New function, copied verbatim from "strace.cc".
	(__cygserver__printf): New function.
	* cygserver_client.cc: Use "woutsup.h" and new XXX_printf macros.
	* cygserver_process.cc: Ditto.
	* cygserver_shm.cc: Ditto.
	* cygserver_transport.cc: Ditto.
	* cygserver_transport_pipes.cc: Ditto.
	* cygserver_transport_sockets.cc: Ditto.
	* threaded_queue.cc: Ditto.
	* shm.cc: Remove trailing \n from XXX_printf format strings.
	* Makefile.in: Remove special __OUTSIDE_CYGWIN__ case for
	cygserver_shm.cc.
@
text
@d121 21
a141 22
DLL_OFILES:=								\
	assert.o autoload.o cygheap.o cygserver_client.o		\
	cygserver_transport.o cygserver_transport_pipes.o		\
	cygserver_transport_sockets.o cygthread.o dcrt0.o debug.o	\
	delqueue.o dir.o dlfcn.o dll_init.o dtable.o environ.o errno.o	\
	exceptions.o exec.o external.o fcntl.o fhandler.o		\
	fhandler_clipboard.o fhandler_console.o fhandler_disk_file.o	\
	fhandler_dsp.o fhandler_floppy.o fhandler_mem.o			\
	fhandler_proc.o fhandler_process.o fhandler_random.o		\
	fhandler_raw.o fhandler_registry.o fhandler_serial.o		\
	fhandler_socket.o fhandler_tape.o fhandler_termios.o		\
	fhandler_tty.o fhandler_virtual.o fhandler_windows.o		\
	fhandler_zero.o fnmatch.o fork.o glob.o grp.o heap.o init.o	\
	ioctl.o ipc.o localtime.o malloc.o malloc_wrapper.o		\
	miscfuncs.o mmap.o msg.o net.o ntea.o passwd.o path.o pinfo.o	\
	pipe.o poll.o pthread.o regcomp.o regerror.o regexec.o		\
	regfree.o registry.o resource.o scandir.o sched.o sec_acl.o	\
	sec_helper.o security.o select.o sem.o shared.o shm.o signal.o	\
	sigproc.o smallprint.o spawn.o strace.o strsep.o sync.o		\
	syscalls.o sysconf.o syslog.o termios.o thread.o times.o tty.o	\
	uinfo.o uname.o v8_regexp.o v8_regerror.o v8_regsub.o wait.o	\
	wincap.o window.o						\
@


1.103
log
@whitespace
@
text
@d121 22
a142 18
DLL_OFILES:=assert.o autoload.o cygheap.o cygserver_client.o \
	cygserver_transport.o cygserver_transport_pipes.o \
	cygserver_transport_sockets.o cygthread.o dcrt0.o debug.o delqueue.o \
	dir.o dlfcn.o dll_init.o dtable.o environ.o errno.o exceptions.o \
	exec.o external.o fcntl.o fhandler.o fhandler_clipboard.o \
	fhandler_console.o fhandler_disk_file.o fhandler_dsp.o \
	fhandler_floppy.o fhandler_mem.o fhandler_proc.o fhandler_process.o \
	fhandler_random.o fhandler_raw.o fhandler_registry.o fhandler_serial.o \
	fhandler_socket.o fhandler_tape.o fhandler_termios.o fhandler_tty.o \
	fhandler_virtual.o fhandler_windows.o fhandler_zero.o fnmatch.o fork.o \
	glob.o grp.o heap.o init.o ioctl.o ipc.o localtime.o malloc.o \
	malloc_wrapper.o miscfuncs.o mmap.o net.o ntea.o passwd.o path.o \
	pinfo.o pipe.o poll.o pthread.o regcomp.o regerror.o regexec.o \
	regfree.o registry.o resource.o scandir.o sched.o sec_acl.o \
	sec_helper.o security.o select.o shared.o shm.o signal.o \
	sigproc.o smallprint.o spawn.o strace.o strsep.o sync.o syscalls.o \
	sysconf.o syslog.o termios.o thread.o times.o tty.o uinfo.o uname.o \
	v8_regexp.o v8_regerror.o v8_regsub.o wait.o wincap.o window.o \
a339 3

cygserver_shm.o: cygserver_shm.cc
	$(COMPILE_CXX) -D__OUTSIDE_CYGWIN__ -o $@@ $<
@


1.102
log
@	* Makefile.in (DLL_OFILES): Drop shortcut.o.
	* path.cc: Move all shortcut functions from shortcut.c to here.
	(check_shortcut): Implement without using COM interface.
	* path.h: Move definition of SHORTCUT_HDR_SIZE to here.
	* shortcut.c: Remove.
	* shortcut.h: Ditto.
@
text
@d82 2
a83 2
            echo $${rootme}/../../expect/expect$(EXEEXT) ; \
          else echo expect ; fi`
d210 1
a210 1
	
d258 1
a258 1
	-lstdc++ -lgcc $(DLL_IMPORTS) 
@


1.101
log
@* Makefile.in (cygcheck.exe): Make a -mno-cygwin program.
* cygrun.c (main): Export CYGWIN=ntsec unless otherwise set.
* shared.cc (shared_name): Only add build date to shared name when
*testing*.
@
text
@d135 1
a135 1
	sec_helper.o security.o select.o shared.o shm.o shortcut.o signal.o \
@


1.100
log
@* Makefile.in (DLL_IMPORTS): Move libuuid.a and libshell32.a to list rather
than referring to them via -l.  Add DLL imports last in link line for
new-cygwin.dll and cygrun.exe.
@
text
@d273 1
d318 4
a321 1
cygrun.exe : cygrun.o -lgcc $(LIB_NAME) $(w32api_lib)/libuser32.a \
d323 1
a323 1
	$(CC) -nodefaultlibs -o $@@ $^
d350 1
@


1.99
log
@* Makefile.in: Add support for new malloc.o and renamed malloc_wrapper.o.  Use
-fomit-frame-pointer for malloc.o compilation.
* malloc_wrapper.cc: New file.  Rename from malloc.cc.  Add support for more
malloc functions.  Eliminate export_* calls.  Just use straight malloc names.
Remove unused argument from malloc lock functions.
* cygwin.din: Just export straight malloc names.  Add malloc_stats,
malloc_trim, malloc_usable_size, mallopt, memalign, valloc.
* dcrt0.cc (__cygwin_user): Eliminate export_* malloc entries.
* fork.cc (fork_parent): Remove unused argument from malloc_lock argument.
* malloc.cc: New file.  Doug Lea's malloc v2.7.1.
* cygmalloc.h: New file.
* include/cygwin/version.h: Bump API_MINOR.
* sync.h (muto::acquire): Use appropriate number for regparm attribute.
(muto::reset): Ditto.
(muto::release): Ditto.
@
text
@d118 1
a118 1
DLL_IMPORTS:=$(w32api_lib)/libkernel32.a
d157 1
a157 1
	install install-libs install-headers
d257 2
a258 2
	$(DLL_IMPORTS) $(MALLOC_OBJ) $(LIBM) $(LIBC) \
	-lstdc++ -lgcc -lshell32 -luuid
d317 1
a317 1
cygrun.exe : cygrun.o $(LIB_NAME) $(w32api_lib)/libuser32.a \
d319 1
a319 1
	$(CC) -nodefaultlibs -o $@@ $^ -lgcc -lcygwin
d344 2
@


1.98
log
@* Makefile.in (DLL_OFILES): Add cygthread.o.
* dcrt0.cc (dll_crt0_1): Eliminate various thread initialization functions in
favor of new cygthread class.
* debug.cc: Remove thread manipulation functions.
* debug.h: Ditto.
* external.cc (cygwin_internal): Use cygthread method for determining thread
name.  Remove capability for setting thread name.
* fhandler_console.cc (fhandler_console::read): Use cygthread method rather
than iscygthread function.
* fhandler_tty.cc (fhandler_tty_master::fhandler_tty_master): Use cygthread
methods to create threads.
(fhandler_tty_common::__acquire_output_mutex): Use cygthread method to retrieve
thread name.
* select.cc (pipeinf): Use cygthread pointer rather than handle.
(start_thread_pipe): Ditto.
(pipe_cleanup): Ditto.
(serialinf): Ditto.
(start_thread_serial): Ditto.
(serial_cleanup): Ditto.
(socketinf): Ditto.
(start_thread_socket): Ditto.
(socket_cleanup): Ditto.
* sigproc.cc (hwait_sig): Ditto.
(hwait_subproc): Ditto.
(proc_terminate): Ditto.
(sigproc_terminate): Ditto.
(sigproc_init): Initialize cygthread hwait_sig pointer.
(subproc_init): Initialize cygthread hwait_subproc pointer.
(wait_sig): Rely on cygthread HANDLE operator.
* strace.cc (strace::vsprntf): Use cygthread::name rather than threadname.
* window.cc (gethwnd): Use cygthread method to initialize thread.
@
text
@d132 7
a138 7
	miscfuncs.o mmap.o net.o ntea.o passwd.o path.o pinfo.o pipe.o poll.o \
	pthread.o regcomp.o regerror.o regexec.o regfree.o registry.o \
	resource.o scandir.o sched.o sec_acl.o sec_helper.o security.o \
	select.o shared.o shm.o shortcut.o signal.o sigproc.o smallprint.o \
	spawn.o strace.o strsep.o sync.o syscalls.o sysconf.o syslog.o \
	termios.o thread.o times.o tty.o uinfo.o uname.o v8_regexp.o \
	v8_regerror.o v8_regsub.o wait.o wincap.o window.o \
d313 3
@


1.97
log
@* Makefile.in: Check if API version is updated when exports are
changed and stop if not so.
@
text
@d121 18
a138 16
DLL_OFILES:=assert.o autoload.o cygheap.o cygserver_client.o cygserver_transport.o \
	cygserver_transport_pipes.o cygserver_transport_sockets.o dcrt0.o debug.o \
	delqueue.o dir.o dlfcn.o dll_init.o dtable.o environ.o errno.o exceptions.o \
	exec.o external.o fcntl.o fhandler.o fhandler_clipboard.o fhandler_console.o \
	fhandler_disk_file.o fhandler_dsp.o fhandler_floppy.o fhandler_mem.o \
	fhandler_proc.o fhandler_process.o fhandler_random.o fhandler_raw.o \
	fhandler_registry.o fhandler_serial.o fhandler_socket.o \
	fhandler_tape.o fhandler_termios.o fhandler_tty.o fhandler_virtual.o \
	fhandler_windows.o fhandler_zero.o fnmatch.o fork.o glob.o grp.o \
	heap.o init.o ioctl.o ipc.o localtime.o malloc.o miscfuncs.o mmap.o \
	net.o ntea.o passwd.o path.o pinfo.o pipe.o poll.o pthread.o regcomp.o \
	regerror.o regexec.o regfree.o registry.o resource.o scandir.o sched.o \
	sec_acl.o sec_helper.o security.o select.o shared.o shm.o shortcut.o \
	signal.o sigproc.o smallprint.o spawn.o strace.o strsep.o sync.o \
	syscalls.o sysconf.o syslog.o termios.o thread.o times.o tty.o uinfo.o \
	uname.o v8_regexp.o v8_regerror.o v8_regsub.o wait.o wincap.o window.o \
@


1.96
log
@* Makefile.in (cygrun.exe): Add a -lcygwin on the end.
@
text
@d147 2
d252 1
a252 1
new-$(DLL_NAME): $(LDSCRIPT) $(DLL_OFILES) $(DEF_FILE) $(DLL_IMPORTS) $(LIBC) $(LIBM) Makefile winver_stamp
d276 4
@


1.95
log
@* Makefile.in (cygserver.exe): Add -lstdc++.
(cygrun.exe): Move -lgcc last.
@
text
@d308 1
a308 1
	$(CC) -nodefaultlibs -o $@@ $^ -lgcc
@


1.94
log
@* Makefile.in (cygrun.exe): Move -lgcc where it will do some good.
@
text
@d308 1
a308 1
	$(CC) -nodefaultlibs -o $@@ -lgcc $^
d326 1
a326 1
	$(CXX) -o $@@ $^
@


1.93
log
@* Makefile.in (cygrun.exe): Use -lgcc when linking.
@
text
@d308 1
a308 1
	$(CC) -nodefaultlibs -o $@@ $^ -lgcc
@


1.92
log
@* Makefile.in: Ensure that -MD gets added to CFLAGS regardless of CFLAGS
command-line setting.
* cygwin.din: Export sexec* functions as function which returns ENOSYS
(i.e., sexec* is deprecated).
* dtable.cc (dtable::vfork_child_dup): Ensure that impersonation is restored
even on failure.
* exec.cc: Throughout, remove references to sexec* and _spawnve.
* pinfo.h: Remove _spawnve declaration.
* spawn.cc: Rename _spawnve to spawnve and use throughout.
(spawn_guts): Eliminate hToken argument and processing of same.  Just perform
special actions if impersonating.
(spawnve): Rename from _spawnve.
@
text
@d308 1
a308 1
	$(CC) -nodefaultlibs -o $@@ $^
@


1.91
log
@* autoload.cc (noload): Correctly save argument count register.
@
text
@d54 1
a54 1
CFLAGS+=-MMD -fbuiltin
@


1.90
log
@* child_info.h (CHILD_INFO_MAGIC): Oops.  Revert previous change.  gcc 3.1 bug?
@
text
@d279 1
a279 1
	/bin/sh ${word 1,$^} $@@ "$(CXX) -x c" ${word 2,$^} MOUNT_MAGIC 'class mount_info' SHARED_MAGIC 'class shared_info'
d282 1
a282 1
	/bin/sh ${word 1,$^} $@@ "$(CXX) -x c" ${word 2,$^} CHILD_INFO_MAGIC 'class child_info'
@


1.89
log
@* strace.cc (strace::hello): Set inited, when appropriate.
@
text
@d279 1
a279 1
	/bin/sh ${word 1,$^} $@@ "$(CXX) -x c++" ${word 2,$^} MOUNT_MAGIC 'class mount_info' SHARED_MAGIC 'class shared_info'
d282 1
a282 1
	/bin/sh ${word 1,$^} $@@ "$(CXX) -x c++" ${word 2,$^} CHILD_INFO_MAGIC 'class child_info'
@


1.88
log
@update comment
@
text
@d279 1
a279 1
	/bin/sh ${word 1,$^} $@@ "$(CC)" ${word 2,$^} MOUNT_MAGIC 'class mount_info' SHARED_MAGIC 'class shared_info'
d282 1
a282 1
	/bin/sh ${word 1,$^} $@@ "$(CC)" ${word 2,$^} CHILD_INFO_MAGIC 'class child_info'
@


1.87
log
@remove white space
@
text
@d120 1
a120 1
# Please maintain this list in sorted order, with maximum files per line
@


1.86
log
@* path.h (pathconv_arg): Add PC_POSIX.
(path_conv): Add normalized_path field.
* path.cc (path_conv::~path_conv): New destructor.
(path_conv::check): Set normalized_path, where appropriate.
* dtable.cc (build_fhandler_from_name): Use normalized path from path_conv.
* syscalls.cc (chroot): Ditto.
* cygheap.h: Remove path_prefix_p declaration.  Christopher Faylor
<cgf@@redhat.com> (minor fixups)
* Makefile.in: Add fhandler_proc.o, fhandler_registry.o, fhandler_process.o and
fhandler_virtual.o.
* dtable.cc (dtable::build_fhandler): Add entries for FH_PROC, FH_REGISTRY and
FH_PROCESS.  Set unix_name to the normalized posix path.
* fhandler.h: Add constants for FH_PROC, FH_REGISTRY and FH_PROCESS.  Add class
declarations for fhandler_virtual, fhandler_proc, fhandler_registry and
fhandler_virtual.  Update fhandler_union accordingly.
* fhandler_proc.cc: New file.  Add implementation for fhandler_proc.
* fhandler_virtual.cc: New file.  Add implementation for fhandler_virtual.
* fhandler_process.cc: New file.  Add implementation for fhandler_process.
* fhandler_registry.cc: New file.  Add implementation for fhandler_registry.
* path.cc: Add isproc and isvirtual_dev macros.
* path.cc (path_conv::check): Add check for virtual devices.
* path.cc (mount_info::conv_to_win32_path): Convert paths in /proc to empty
Win32 paths.
* path.cc (chdir): Replace check for FH_CYGDRIVE with more generic
isvirtual_dev macro.  Force setting of posix path for virtual fhandlers.
* path.h: Add externally visible path_prefix_p and normalized_posix_path
prototypes.
@
text
@d172 1
a172 1
uninstall: uninstall-libs uninstall-headers uninstall-man 
d325 1
a325 1
cygserver.exe: cygserver.o cygserver_shm.o cygserver_transport_outside.o cygserver_transport_pipes_outside.o cygserver_transport_sockets_outside.o cygserver_client_outside.o cygserver_process.o threaded_queue.o wincap.o version.o smallprint.o 
@


1.85
log
@2002-03-04  Robert Collins  <rbtcollins@@hotmail.com>

        * Makefile.in (install): Remove install-bin to allow make install to work.
@
text
@d126 11
a136 10
	fhandler_random.o fhandler_raw.o fhandler_serial.o fhandler_socket.o \
	fhandler_tape.o fhandler_termios.o fhandler_tty.o fhandler_windows.o \
	fhandler_zero.o fnmatch.o fork.o glob.o grp.o heap.o init.o ioctl.o ipc.o \
	localtime.o malloc.o miscfuncs.o mmap.o net.o ntea.o passwd.o path.o \
	pinfo.o pipe.o poll.o pthread.o regcomp.o regerror.o regexec.o \
	regfree.o registry.o resource.o scandir.o sched.o sec_acl.o \
	sec_helper.o security.o select.o shared.o shm.o shortcut.o signal.o \
	sigproc.o smallprint.o spawn.o strace.o strsep.o sync.o syscalls.o \
	sysconf.o syslog.o termios.o thread.o times.o tty.o uinfo.o uname.o \
	v8_regexp.o v8_regerror.o v8_regsub.o wait.o wincap.o window.o \
@


1.84
log
@2002-02-28  Robert Collins  <rbtcollins@@hotmail.com>

	* Merged cygwin_daemon into head minus the new shm and ipc exports.

2002-02-28  Robert Collins  <rbtcollins@@hotmail.com>

	* fhandler_tty.cc (fhandler_tty_slave::open): More debugging.
	(fhandler_tty_slave::read): Fix printf type for the handle.
	* tty.cc (tty::common_init): Add a FIXME for security.

2002-01-29  Robert Collins  <rbtcollins@@hotmail.com>

	* Makefile.in (OBJS): Remove duplicate localtime.o.

2002-01-17  Robert Collins  <rbtcollins@@hotmail.com>

	* cygserver.cc (check_and_dup_handle): Consolidate the two variants for
	simplicity.
	Add Some basic debug output.
	(client_request_attach_tty::serve): Use the new debug_printf for clarity.
	Mark the duplicated handles as inheritable - fixup_after_fork() doesn't reopen
	tty's.

2002-01-16  Robert Collins  <rbtcollins@@hotmail.com>

	* cygserver.cc (transport): Correct scope.
	(client_request_attach_tty::serve): Add more debug information.
	Fix erroneous use of transport instead of conn.
	* cygserver_transport_pipes.cc (transport_layer_pipes::close): More debug.
	(transport_layer_pipes::read): Ditto.
	(transport_layer_pipes::write): Ditto.
	(transport_layer_pipes::impersonate_client): Ditto.

Mon Oct  8  7:41:00 2001  Robert Collins <rbtcollins@@hotmail.com>

	* cygserver.cc (server_request::process): Rename client_request_shm_get to
	client_request_shm.
	* cygserver_process.cc (process_cache::add): Rename to add_task.
	Use process_cleanup instead of process_request.
	(process_cache::remove_process): New method.
	(process::process): Initialize new members.
	(process::~process): New member.
	(process::cleanup): New method.
	(process::add_cleanup_routine): New method.
	(process_request::process): Rename to process_cleanup.
	Call the process object's cleanup method and then delete it.
	(process_process_param::request_loop): Remove the signalling process.
	* cygserver_shm.cc: Globally rename client_request_shm_get to client_request_shm.
	(client_request_shm_get::serve): Handle attach request counting.
	* cygserver_shm.h: Globally rename client_request_shm_get to client_request_shm.
	(class shm_cleanup): New class.
	* shm.cc: Globally rename client_request_shm_get to client_request_shm.
	(client_request_shm::client_request_shm): New constructor for attach requests.
	(shmat): Use it.
	* include/cygwin/cygserver_process.h (class process_request): Rename to
	process_cleanup.
	(class cleanup_routine): New class.
	(class process): New members and methods to allow calling back when the process
	terminates.

Thu Oct  4 14:12:00 2001  Robert Collins <rbtcollins@@hotmail.com>
	* cygserver.cc (request_loop): Make static.
	(main): Use new cache constructor syntax.
	Start cache worker threads.
	Cleanup the cache at shutdown.
	* cygserver_process.cc: Run indent.
	(process_cache::process_cache): Add a trigger to use when adding a process.
	(process_cache::process): Move process_entry to process.
	Insert at the end of the list.
	Trigger the request loop when new process's inserted.
	(process_cache::process_requests): Do it.
	(process_cache::add): New method.
	(process_cache::handle_snapshot): New method.
	(process::process): Merge in the process_entry fields.
	(process::handle): Make a stub function.
	(process::exit_code): New method.
	(process_request::process): New method.
	(process_process_param::request_loop): New method.
	* cygserver_shm.cc: New header dependency - threaded_queue.h.
	* threaded_queue.cc (threaded_queue::cleanup): Clearer messages.
	(queue_process_param::stop): Short spinlock on interruptible threads.
	* threaded_queue.h (class threaded_queue): New constructor.
	* include/cygwin/cygserver_process.h (process_request): New class.
	(process_entry): Remove.
	(process): Merge in process_entry.
	(process_cache): Inherit from threaded_queue.

Tue Oct  2 23:24:00 2001  Robert Collins <rbtcollins@@hotmail.com>

	* cygserver.cc (class server_process_param): Use new constructor syntax.
	* cygserver_process.cc (process_cache::~process_cache): New function.
	* threaded_queue.cc: Define condition debug_printf.
	Run indent.
	(threaded_queue::cleanup): Move queue_process_param guts to a method.
	(threaded_queue::process_requests): Ditto.
	(queue_process_param::queue_process_param): New method.
	(queue_process_param::~queue_process_param): Ditto.
	(queue_process_param::start): Ditto.
	(queue_process_param::stop): Ditto.
	* threaded_queue.h (class queue_process_param): Add support for
	interruptible request loops.
	* cygwin/include/cygwin/cygserver_process.h (class process_cache): Add
	destructor.

Tue Oct  2 23:24:00 2001  Robert Collins <rbtcollins@@hotmail.com>

	* cygserver_client.cc: New flag allow_daemon to disable the daemon completely.
	(cygserver_request): Check it.
	(cygserver_init): Ditto.
	* environ.cc (parse_thing): Add (no)daemon option.

Tue Oct  2 23:00:00 2001  Robert Collins <rbtcollins@@hotmail.com>

	* shm.cc: Update to handle include changes from HEAD.

Tue Oct  2 16:06:00 2001  Robert Collins <rbtcollins@@hotmail.com>

	* Makefile.in: Remove cygserver_shm.o from cygwin1.dll.
	Rename cygserver_shm_outside.o to cygserver_shm.o.
	* cygserver.cc (server_request::process): Use the new client_request
	constructor.
	* cygserver_client.cc: Remove the #ifdef's stubs for the server method
	within cygwin.
	(client_request_attach_tty::client_request_attach_tty): Use the new
	client_request constructor.
	(client_request_shutdown::client_request_shutdown): Ditto.
	(client_request::client_request): Ditto.
	* cygserver_shm.cc (client_request_shm_get::serve): Remove the
	#ifdef'd stub for in-cygwin builds.
	(client_request_shm_get::client_request_shm_get): Use the new
	client_request constructor, and remove the in-cygwin variants.
	* cygserver_shm.h (class client_request_shm_get): #ifndef test the
	serve method - it's only used in cygserver.
	* shm.cc (client_request_shm_get::client_request_shm_get): New function.
	* include/cygwin/cygserver.h (request_header): New constructor.
	(class client_request): Use it.
	New constructor accepting the header size.
	#ifndef test the server method - it's only used within cygserver.
	(client_request_get_version): #ifdef test the server method.
	(client_request_shutdown): Ditto.
	(client_request_attach_tty): Ditto.

Tue Oct  2  9:57:00 2001  Robert Collins <rbtcollins@@hotmail.com>

	* Makefile.in: add threaded_queue.o to cygserver.exe.
	* cygserver.cc: Include threaded_queue.h
	(class server_request): Inherit from queue_request.
	(class server_process_param): Inherit from queue_process_param.
	(class server_request_queue): Inherit from threaded_queue.
	(request_loop): Adjust for new types.
	(server_request_queue::process_requests): Remove guts to
	threaded_queue::process_requests.
	(server_request::server_request): Adjust for new types.
	(worker_function): Delete.
	(server_request_queue::create_workers): Delete.
	(server_request_queue::cleanup): Delete.
	(server_request_queue::add): Move guts to threaded_queue::add.
	* threaded_queue.cc: New file.
	* threaded_queue.h: New file.

Mon Oct  1 12:38:00 2001  Robert Collins <rbtcollins@@hotmail.com>

	* cygserver.cc (client_request::serve): New function.
	* cygserver_process.cc: Inlude <pthread.h> for pthread_once.
	(process_cache::process_cache): Initialise a crtiical section for write access.
	(process_cache::process): Use the critical section. Also add missing entries to
	the cache.
	(do_process_init): New function to initalise class process static variables.
	(process::process): Ensure that the process access critical section is
	initialised.
	(process::handle): Close the handle of old process's when they have terminated
	and we are returning the handle for a process with the same pid.
	* cygserver_shm.cc: Run indent.
	Include cygserver_process.h to allow process cache functionality.
	(client_request_shm_get::serve): New parameter for process cache support.
	Use the process cache, not OpenProcess to get a handle to the originating process.
	Fix a handle leak with token_handle.
	* cygserver_shm.h (class client_request_shm_get): Update ::serve for process
	cache support.
	* cygserver_transport_pipes.cc: Redefine debug_printf to be conditional on DEBUG.
	* include/cygwin/cygserver.h: Do not implement client_request::serve in the
	header.
	* include/cygwin/cygserver_process.h (class process_cache): Add a write access
	critical section to prevent races when requests from a  multithreaded
	application arrive.

Sun Sep 30 23:41:00 2001  Robert Collins <rbtcollins@@hotmail.com>

	* Makefile.in: Add cygserver_process.o to cygserver.exe.
	* cygserver.cc: Include signal.h and cygwin_version.h.
	Define debug_printf as a macro.
	Define DEBUG to a value.
	(client_request_attach_tty::serve): Add beginning of process cache support.
	Change from #ifdef DEBUG to work with new DEBUG style.
	(client_request_get_version::serve): Add beginning of process cache support.
	(class server_request): New prototype for support of process cache.
	(class queue_process_param): New class to allow request loop threading.
	(class server_request_queue): Add beginning of process cache support.
	Allow request loop threading.
	(request_loop): Thread function for request loops.
	(server_request_queue::process_requests): Initiator for threaded request loops.
	(client_request_shutdown::serve): Add beginning of process cache support.
	(server_request::server_request): Ditto.
	(server_request::process): Use debug_printf. Add beginning of process cache
	support.
	(server_request_queue::cleanup): Kill off any request loop threads.
	(server_request_queue::add): Add beginning of process cache support.
	(handle_signal): Trigger a shutdown.
	(main): Print out some useful info at startup - version, date time.
	Add process cache support.
	Spawn a separate thread for the transport request loop, thus allowing concurrent
	support for multiple transports.
	* cygserver_client.cc (client_request_get_version::serve): Add process cache
	support.
	(client_request_attach_tty::serve): Add process cache support.
	(client_request_shutdown::serve): Add process cache support.
	* cygsserver_process.cc: New file with the process cache support.
	* cygserver_shm.cc: Redefine debug_printf to allow conditional output.
	* cygwin.din: Export shmdt().
	* shm.cc: Run indent.
	Update FIXME's.
	(shmdt): New function.
	* include/cygwin/cygserver.h (class client_request): Add process cache support.
	(class client_request_get_version): Ditto.
	(class client_request_shutdown): Ditto.
	(class client_request_attach_tty): Ditto.
	* include/cygwin/cygserver_process.h: New header for process cache support.

Sun Sep 30  8:52:00 2001  Robert Collins <rbtcollins@@hotmail.com>

	* include/cygwin/cygserver_transport.h: Add copyright header.
	* include/cygwin/cygserver_transport_pipes.h: Ditto.
	* include/cygwin/cygserver_transport_sockets.h: Ditto.

Sat Sep 29 20:40:00 2001  Robert Collins <rbtcollins@@hotmail.com>

	* Makefile.in: Add cygserver_transport_sockets.o to DLL_OFILES.
	Add cygserver_transport_sockets_outside.o to cygserver.exe.
	* cygserver.cc: Include new include files.
	* cygserver_client.cc: Ditto.
	* cygserver_shm.h: No need to include <sys/socket.h> now.
	* cygerver_transport.cc: Include new include files.
	(transport_layer_base::transport_layer_base): Strip back to a stub.
	(transport_layer_base::listen): Ditto.
	(transport_layer_base::accept): Ditto.
	(transport_layer_base::close): Ditto.
	(transport_layer_base::read): Ditto.
	(transport_layer_base::write): Ditto.
	(transport_layer_base::connect): Ditto.
	* cygserver_transport_pipes.cc: Include new header
	"cygwin/cygserver_transport_pipes.h".
	* cygserver_transport_sockets.cc: New file.
	* dcrt0.cc: No need to include <sys/socket.h> now.
	* fhandler_tty.cc: Ditto.
	* tty.cc: Ditto.
	* include/cygwin/cygserver_transport.h: Strip the base class to a stub.
	Remove the cygserver_transport_pipes class.
	* include/cygwin/cygserver_transport_pipes.h: New file.
	* include/cygwin/cygserver_transport_sockets.h: New file.

Tue Sep 25 16:22:00 2001  Robert Collins <rbtcollins@@hotmail.com>

	* autoload.cc: Add dynamic load statement for 'ImpersonateNamedPipeClient'.
	* Makefile.in: Add new object files, and build instructions for cygserver.exe.
	* cygwin.din: Export ftok, shmat, shmctl and shmget.
	* dcrt0.cc: Additional includes for cygserver support.
	(dll_crt0_1): Initialise the cygserver client.
	* fhandler.h (fhandler_tty): New method cygserver_attach_tty.
	* fhandler_tty.cc: Additional includes for cygserver support.
	(fhandler_tty_slave::open): Attempt to use the cygserver when obtaining
	handles from the parent process. On failure or 9x use the current method.
	(fhandler_tty_slave::cygserver_attach_tty): New function.
	* fork.cc (fork_child): Fixup shm memory mapped areas.
	* pinfo.h: Declare fixup_shms_after_fork().
	* security.h: Declare alloc_sd().
	* tty.cc: Additonal includes to support cygserver.
	(tty::common_init): Don't allow others to open us if the cygserver is running.
	* winsup.h: Declare cygserver_running.
	* cygserver.cc: New file.
	* cygserver_client.cc: New file.
	* cygserver_shm.cc: New file.
	* cygserver_shm.h: New file.
	* cygserver_transport.cc: New file.
	* cygserver_transport_pipes.cc: New file.
	* ipc.cc: New file.
	* shm.cc: New file.
	* include/cygwin/cygserver.h: New file.
	* include/cygwin/cygserver_transport.h: New file.
	* include/sys/ipc.h: New file.
	* include/sys/shm.h: New file.

2002-02-28  Robert Collins  <rbtcollins@@hotmail.com>

	* thread.cc (semaphore::TryWait): Set errno as required by posix 1003.1.
	(__sem_wait): Ditto.
	(__sem_trywait): Ditto.
@
text
@d168 1
a168 1
install: install-bin install-libs install-headers install-man install_target \
@


1.83
log
@* Makefile.in (DLL_OFILES): Consolidate object files.
@
text
@d121 4
a124 3
DLL_OFILES:=assert.o autoload.o cygheap.o dcrt0.o debug.o delqueue.o dir.o \
	dlfcn.o dll_init.o dtable.o environ.o  errno.o exceptions.o exec.o \
	external.o fcntl.o fhandler.o fhandler_clipboard.o fhandler_console.o \
d128 1
a128 1
	fhandler_zero.o fnmatch.o fork.o glob.o grp.o heap.o init.o ioctl.o \
d132 1
a132 1
	sec_helper.o security.o select.o shared.o shortcut.o signal.o \
d152 1
a152 1
	install install_target install-libs install-headers
d162 1
a162 1
all_target: $(TARGET_LIBS)
d168 2
a169 1
install: install-libs install-headers install-man $(install_host) $(install_target)
d203 3
d308 26
@


1.82
log
@* Makefile.in (libpthread.a): Pass the assembler also.
(libm.a): Ditto.
(libc.a): Ditto.
* speclib: Specify the assembler to dlltool.
@
text
@d120 1
d127 8
a134 9
	fhandler_zero.o fnmatch.o \
	fork.o glob.o grp.o heap.o init.o ioctl.o localtime.o \
	malloc.o miscfuncs.o mmap.o net.o ntea.o passwd.o path.o pinfo.o pipe.o \
	poll.o pthread.o regcomp.o regerror.o regexec.o regfree.o registry.o \
	resource.o scandir.o sched.o sec_acl.o sec_helper.o security.o \
	select.o shared.o shortcut.o signal.o sigproc.o smallprint.o spawn.o \
	strace.o strsep.o sync.o syscalls.o sysconf.o syslog.o termios.o \
	thread.o times.o tty.o uinfo.o uname.o v8_regexp.o v8_regerror.o \
	v8_regsub.o wait.o wincap.o window.o \
@


1.81
log
@* Makefile.in (new-cygwin1.dll): Revert previous change.  libsupc++.a is only
available in libstdc++-v3.
@
text
@d283 1
a283 1
	/bin/sh ${word 1, $^} $@@ "${NM}" "${DLLTOOL}" ${wordlist 2, 99, $^}
d286 1
a286 1
	/bin/sh ${word 1, $^} $@@ "${NM}" "${DLLTOOL}" ${wordlist 2, 99, $^}
d289 1
a289 1
	/bin/sh ${word 1, $^} -v $@@ "${NM}" "${DLLTOOL}" ${wordlist 2, 99, $^}
@


1.80
log
@* Makefile.in (new-cygwin1.dll): Just use -lsupc++ for link.
* sigproc.cc (proc_exists): Change existence criteria.
* sync.h (new_muto): Add volatile to definition to avoid gcc optimization
problems.
@
text
@d248 1
a248 1
	-lsupc++ -lgcc -lshell32 -luuid
@


1.79
log
@	* Makefile.in: Add fnmatch.o to DLL_OFILES.
	* cygwin.din: Add fnmatch export symbol.
	* fnmatch.c: New file.
	* include/fnmatch.h: Ditto.
	* include/cygwin/version.h: Bump API minor version to 50.
@
text
@d248 1
a248 1
	-lstdc++ -lgcc -lshell32 -luuid
@


1.78
log
@* Makefile.in: Add uninstall target.
@
text
@d126 2
a127 1
	fhandler_zero.o fork.o glob.o grp.o heap.o init.o ioctl.o localtime.o \
@


1.77
log
@Strip path when installing library.
@
text
@d168 2
d201 31
@


1.76
log
@* speclib: New file.
* Makefile.in: Create library versions of automode.o, textmode.o, and binmode.o
for easier use on command line.  Create libpthread.a, libm.a, and libc.a with
subsets of exports found in libcygwin.a.
@
text
@d171 1
a171 1
	    $(INSTALL_DATA) $$i $(tooldir)/lib/$$i ; \
@


1.75
log
@* Makefile.in: Quote arguments to shell scripts.
(clean): Remove new *_magic.h autogenerated files.
@
text
@d144 5
d160 1
a160 1
all_target: $(LIB_NAME) automode.o binmode.o textmode.o $(LIBGMON_A)
d168 1
a168 1
install-libs: $(LIB_NAME)
d170 1
a170 1
	for i in $(LIB_NAME) $(GMON_START) $(LIBGMON_A) automode.o binmode.o textmode.o ; do \
d247 12
@


1.74
log
@* Makefile.in: Autogenerate some header files which provide magic numbers.
Force dependencies for files which depend on autogenerated headers to ensure
that they are always built.
* child_info.h (child_info): Add new fields to accommodate new magic number
header stuff.
* dcrt0.cc: Rely on "child_info_magic.h" to ensure that correct child_info
magic numbers are used.
(dll_crt0_1): Temporarily remove _cygwin_testing_magic test.
(_dll_crt0): Do more testing on magic numbers from fork_info structure.  Call
"multiple_cygwin_problem" where appropriate.
(multiple_cygwin_problem): Rename from multiple_cygwin_die.  Issue a warning or
die, as appropriate based on cygwin version/magic number mismatch.
* pinfo.cc (pinfo::exit): Don't attempt to dereference `this' if it doesn't
exist.  This can happen when a fatal error occurs early in process
initialization.
* shared.cc: Rely on "shared_info_magic.h" to accommodate that new magic number
header stuff.
(shared_info::initialize): Use new magic number stuff, for shared region.
(memory_init): Ditto, for mount table.
* shared_info.h: Accomodate new magic number stuff for shared region and mount
table.
* sigproc.cc: Rely on "child_info_magic.h" to accommodate new magic number
header stuff.
(init_child_info): Initialize new fields in child_info) to accomodate magic
numbers.
* winsup.h: Rename multiple_cygwin_die to multiple_cygwin_problem.
* include/cygwin/version.h: Define macros for manipulating version magic.
* cygmagic: New shell script for generating magic numbers.
@
text
@d196 1
a196 1
	-rm -f *.o *.dll *.a *.exp junk *.base version.cc regexp/*.o winver_stamp *.exe *.d *stamp*
d213 2
a214 2
	/bin/sh ${word 1,$^} ./cygdll.a $(NM) $(AR) $(RANLIB) $(OBSOLETE_FUNCTIONS) || exit 0
	/bin/sh ${word 2,$^} ./cygdll.a $(AS) $(AR) $(RANLIB) $(NEW_FUNCTIONS) || exit 0
d234 1
a234 1
	/bin/sh ${word 1,$^} $@@ $(CC) ${word 2,$^} MOUNT_MAGIC 'class mount_info' SHARED_MAGIC 'class shared_info'
d237 1
a237 1
	/bin/sh ${word 1,$^} $@@ $(CC) ${word 2,$^} CHILD_INFO_MAGIC 'class child_info'
@


1.73
log
@* Makefile.in (VPATH): Add regex directory.
(NM): new variable.
(OBSOLETE_FUNCTIONS): Ditto.
(NEW_FUNCTIONS): Ditto.
(install-headers): Install regex.h.
(install-man): New target.
(install): Use new target.
(DLL_OFILES): Add v8_reg* stuff.
(new-cygwin1.dll): Eliminate stamp-cygwin-lib creation.
(libcygwin.a): Remove obsolete functions from import lib.  Add new functions.
* configure.in: Detect 'nm' tool.
* configure: Regenerate.
* cygwin.din: Export posix_reg* functions.  Eliminate export of v8 reg*
functions.  This is now handled in object files themselves.
* regex/*: New files.
* regexp/v8_*.c: New files, renamed from non v8_ equivalents.
@
text
@d54 1
a54 1
CFLAGS+=-MD -fbuiltin
d233 10
a251 2

#
@


1.72
log
@whitespace cleanup
@
text
@d17 1
a17 1
VPATH:=$(srcdir):$(CONFIG_DIR):$(srcdir)/regexp:$(srcdir)/lib
d47 2
a48 2
MT_SAFE = @@MT_SAFE@@
DEFS = @@DEFS@@
d68 2
a69 1
LDSCRIPT=cygwin.sc
d128 6
a133 5
	poll.o pthread.o regexp.o regerror.o regsub.o registry.o resource.o \
	scandir.o sched.o sec_acl.o sec_helper.o security.o select.o shared.o \
	shortcut.o signal.o sigproc.o smallprint.o spawn.o strace.o strsep.o \
	sync.o syscalls.o sysconf.o syslog.o termios.o thread.o times.o tty.o \
	uinfo.o uname.o wait.o wincap.o window.o \
d136 7
a142 1
GMON_OFILES:= gmon.o mcount.o profil.o
d161 1
a161 1
install: install-libs install-headers $(install_host) $(install_target)
d176 16
a191 1
	$(INSTALL_DATA) regexp/regexp.h $(tooldir)/include/regexp.h
d196 1
a196 1
	-rm -f *.o *.dll *.a *.exp junk *.base version.cc regexp/*.o winver_stamp *.exe *.d
d203 8
d212 4
a217 1

a223 15

# Rule to build cygwin.dll

new-$(DLL_NAME): $(LDSCRIPT) $(DLL_OFILES) $(DEF_FILE) $(DLL_IMPORTS) $(LIBC) $(LIBM) Makefile winver_stamp
	$(CXX) $(CXXFLAGS) -nostdlib -Wl,-T$(firstword $^) -Wl,--out-implib,cygdll.a -shared -o $@@ \
	-e $(DLL_ENTRY) $(DEF_FILE) $(DLL_OFILES) version.o winver.o \
	$(DLL_IMPORTS) $(MALLOC_OBJ) $(LIBM) $(LIBC) \
	-lstdc++ -lgcc -lshell32 -luuid
	@@rm -f stamp-cygwin-lib

$(LIB_NAME): new-$(DLL_NAME) $(LIBCOS) stamp-cygwin-lib
	(echo create $(LIB_NAME); echo addlib cygdll.a; echo addmod $(LIBCOS); echo save) | $(AR) -M

stamp-cygwin-lib:
	@@touch stamp-cygwin-lib
@


1.71
log
@* Makefile.in (libcygwin.a): Use ar commands to build libcygwin.a since adding
an archive doesn't work the way we want it to.
@
text
@d132 1
a132 1
	$(EXTRA_DLL_OFILES) $(EXTRA_OFILES) $(MALLOC_OFILES) $(MT_SAFE_OBJECTS) 
@


1.70
log
@* dtable.cc (dtable::vfork_parent_restore): Add debugging statement.
* exceptions.cc (try_to_debug): Spin only as long as we don't have a debugger
attached.
* fhandler.h (fhandler_base::set_nohandle): New method.
(fhandler_base::get_nohandle): New method.
* fhandler.cc (fhandler_base::dup): Avoid duplicating handle if there is no
handle.
* fhandler_disk_file.cc (fhandler_disk_file::opendir): Set nohandle flag on
dummy fd.
* Makefile.in: Make intermediate library for eventual inclusion in libcygwin.a
* fhandler.h (fhandler_pipe::fhandler_pipe): Remove default argument setting
since it is no longer used.
* miscfuncs.cc (check_null_str): New function.
(+check_null_str_errno): Ditto.
* net.cc: Add defensive buffer checking throughout.
(cygwin_sendto): Protect against invalid fd.
(cygwin_recvfrom): Ditto.
(cygwin_getpeername): Ditto.
(cygwin_recv): Ditto.
(cygwin_send): Ditto.
* winsup.h: Declare a new function.
* select.cc (set_bits): Fix conditional for setting fd in exceptfds.
* dtable.cc (dtable::build_fhandler): Create fhandler_pipe using correct device
type.
* path.cc (get_devn): Set correct pipe device type from device name.
@
text
@d201 1
a201 1
	$(AR) rcv $(LIB_NAME) $(LIBCOS) cygdll.a
@


1.69
log
@* Makefile.in (DLL_OFILES): Add fhandler_disk_file.o.
* cygheap.h (cygheap_fdnew::operator =): New operator.
* dir.cc: Add invalid struct checking throughout.  Use methods for all
directory manipulation throughout.
* fhandler.cc: Move fhandler_disk_file stuff to own file.
(fhandler_base::opendir): New method.
(fhandler_base::readdir): New method.
(fhandler_base::telldir): New method.
(fhandler_base::seekdir): New method.
(fhandler_base::rewinddir): New method.
(fhandler_base::closedir): New method.
* fhandler_disk_file.cc: New file.
* fhandler.h (fhandler_base): Declare new virtual methods.
(fhandler_disk_file): Ditto.
(fhandler_cygdrive): New class.
* path.cc (conv_path_list): Use strccpy to break apart path.
@
text
@d194 1
a194 1
	$(CXX) $(CXXFLAGS) -nostdlib -Wl,-T$(firstword $^) -Wl,--out-implib,$(LIB_NAME) -shared -o $@@ \
d201 1
a201 1
	$(AR) rcv $(LIB_NAME) $(LIBCOS)
@


1.68
log
@* fhandler.h: Change Windows 'BOOL's to c++ 'bool's for all variables.
* select.cc (fhandler_base::ready_for_read): Set read_ready to zero prior to
testing it or it will be uninitialized.
* Makefile.in (CFLAGS): Move setting to Makefile.common.
@
text
@d122 10
a131 10
	fhandler_dsp.o fhandler_floppy.o fhandler_mem.o fhandler_random.o \
	fhandler_raw.o fhandler_serial.o fhandler_socket.o fhandler_tape.o \
	fhandler_termios.o fhandler_tty.o fhandler_windows.o fhandler_zero.o \
	fork.o glob.o grp.o heap.o init.o ioctl.o localtime.o malloc.o \
	miscfuncs.o mmap.o net.o ntea.o passwd.o path.o pinfo.o pipe.o poll.o \
	pthread.o regexp.o regerror.o regsub.o registry.o resource.o scandir.o \
	sched.o sec_acl.o sec_helper.o security.o select.o shared.o shortcut.o signal.o sigproc.o \
	smallprint.o spawn.o strace.o strsep.o sync.o syscalls.o sysconf.o \
	syslog.o termios.o thread.o times.o tty.o uinfo.o uname.o wait.o \
	wincap.o window.o \
@


1.67
log
@fix spelling errors
@
text
@d53 1
a53 1
CFLAGS:=@@CFLAGS@@ -Winline
@


1.66
log
@Ensure that all fhandler_*::read definitions are __stdcall throughout.
* fhandler.cc (fhandler_base::set_inheritance): Be more defensive in debugging
code.
* fhandler.h: Adjust regparms throughout to reflect passing 'this' parameter.
* fhandler_console.cc (fhandler_console::read): Remove unneeded test.  Only
honor "key down" events.
* miscfuncs.cc (strcasestr): Reorganize for efficient code use.
(check_null_empty_str_errno): Ditto.
(__check_null_invalid_struct_errno): Ditto.
(__check_invalid_read_ptr_errno): Ditto.
* syscalls.cc (_read): Return 0 when length == 0, as per Single UNIX
Specification.
@
text
@d184 1
a184 1
# dependency set to $(LIB_NAME) to accomodate make -j2.
@


1.65
log
@* Makefile.in: Depend on stamp to ensure rebuilding.  Remove stamp file when
we've just built the DLL.
@
text
@d53 1
a53 1
CFLAGS:=@@CFLAGS@@
@


1.64
log
@Thu Sep 27 22:00:00 2001 Robert Collins rbtcollins@@itdomain.com.au

	* Makefile.in: Only stamp winver_stamp on success.
@
text
@d198 1
d200 1
a200 1
$(LIB_NAME): new-$(DLL_NAME) $(LIBCOS)
d202 3
@


1.63
log
@* select.cc (peek_pipe): Only grab mutex when we actually got something from
the pipe.
@
text
@d213 2
a214 2
	touch $@@ && \
	$(COMPILE_CXX) -o version.o version.cc
@


1.63.2.1
log
@Tue Sep 25 16:22:00 2001 Robert Collins <rbtcollins@@hotmail.com>

        * autoload.cc: Add dynamic load statement for
	'ImpersonateNamedPipeClient'.
	* Makefile.in: Add new object files, and build
	instructions for cygserver.exe.
	* cygwin.din: Export ftok, shmat, shmctl and shmget.
	* dcrt0.cc: Additional includes for cygserver support.
	(dll_crt0_1): Initialise the cygserver client.
	* fhandler.h (fhandler_tty): New method cygserver_attach_tty.
	* fhandler_tty.cc: Additional includes for cygserver support.
	(fhandler_tty_slave::open): Attempt to use the cygserver when
	obtaining handles from the parent process. On failure or 9x
	use the current method.
	(fhandler_tty_slave::cygserver_attach_tty): New function.
	* fork.cc (fork_child): Fixup shm memory mapped areas.
	* pinfo.h: Declare fixup_shms_after_fork().
	* security.h: Declare alloc_sd().
	* tty.cc: Additonal includes to support cygserver.
	(tty::common_init): Don't allow others to open us if the cygserver is running.
	* winsup.h: Declare cygserver_running.
										CVS: ----------------------------------------------------------------------
@
text
@d119 1
a119 3
DLL_OFILES:=assert.o autoload.o cygheap.o cygserver_client.o cygserver_shm.o \
	cygserver_transport.o cygserver_transport_pipes.o dcrt0.o debug.o \
	delqueue.o dir.o \
d125 1
a125 1
	fork.o glob.o grp.o heap.o init.o ioctl.o ipc.o localtime.o malloc.o \
d128 1
a128 2
	sched.o sec_acl.o sec_helper.o security.o select.o shared.o shm.o \
	shortcut.o signal.o sigproc.o \
d147 1
a147 1
all_target: $(LIB_NAME) automode.o binmode.o textmode.o $(LIBGMON_A) cygserver.exe
d153 1
a153 4
install: install-bin install-libs install-headers $(install_host) $(install_target)

install-bin: cygserver.exe
	$(INSTALL_PROGRAM) cygserver.exe $(bindir)/cygserver.exe	
d213 2
a214 2
	$(CXX) -c -o version.o version.cc &&\
	touch $@@
a218 21

cygserver_transport_outside.o: cygserver_transport.cc
	$(COMPILE_CXX) -D__OUTSIDE_CYGWIN__ -o $@@ $<

cygserver_transport_pipes_outside.o: cygserver_transport_pipes.cc
	$(COMPILE_CXX) -D__OUTSIDE_CYGWIN__ -o $@@ $<

cygserver_client_outside.o: cygserver_client.cc
	 $(COMPILE_CXX) -D__OUTSIDE_CYGWIN__ -o $@@ $<

cygserver_shm_outside.o: cygserver_shm.cc
	$(COMPILE_CXX) -D__OUTSIDE_CYGWIN__ -o $@@ $<

cygserver.exe: cygserver.o cygserver_shm_outside.o cygserver_transport_outside.o cygserver_transport_pipes_outside.o cygserver_client_outside.o wincap.o smallprint.o 
	$(CXX) -o $@@ $^
#ifdef VERBOSE
#	$(CXX) $(MINGW_CXXFLAGS) -o $@@ ${wordlist 1,3,$^} -B$(mingw_build)/ $(MINGW_LDFLAGS)
#else
#	@@echo $(CXX) -o $@@ ${wordlist 1,3,$^} ${filter-out -B%, $(MINGW_CXXFLAGS) $(MINGW_LDFLAGS)};\
#	$(CXX) $(MINGW_CXXFLAGS) -o $@@ ${wordlist 1,3,$^} -B$(mingw_build)/ $(MINGW_LDFLAGS)
#endif
@


1.63.2.2
log
@Merged changes from HEAD
@
text
@d219 1
a219 1
	$(COMPILE_CXX) -o version.o version.cc && \
@


1.63.2.3
log
@Sat Sep 29 20:40:00 2001 Robert Collins <rbtcollins@@hotmail.com>

        * Makefile.in: Add cygserver_transport_sockets.o to DLL_OFILES.
        Add cygserver_transport_sockets_outside.o to cygserver.exe.
        * cygserver.cc: Include new include files.
        * cygserver_client.cc: Ditto.
        * cygserver_shm.h: No need to include <sys/socket.h> now.
        * cygerver_transport.cc: Include new include files.
        (transport_layer_base::transport_layer_base): Strip back to a stub.
        (transport_layer_base::listen): Ditto.
        (transport_layer_base::accept): Ditto.
        (transport_layer_base::close): Ditto.
        (transport_layer_base::read): Ditto.
        (transport_layer_base::write): Ditto.
        (transport_layer_base::connect): Ditto.
        * cygserver_transport_pipes.cc: Include new header
        "cygwin/cygserver_transport_pipes.h".
        * cygserver_transport_sockets.cc: New file.
        * dcrt0.cc: No need to include <sys/socket.h> now.
        * fhandler_tty.cc: Ditto.
        * tty.cc: Ditto.
        * include/cygwin/cygserver_transport.h: Strip the base class to a stub.
        Remove the cygserver_transport_pipes class.
        * include/cygwin/cygserver_transport_pipes.h: New file.
        * include/cygwin/cygserver_transport_sockets.h: New file.
@
text
@d120 1
a120 2
	cygserver_transport.o cygserver_transport_pipes.o cygserver_transport_sockets.o \
	dcrt0.o debug.o \
a231 3
cygserver_transport_sockets_outside.o: cygserver_transport_sockets.cc
	$(COMPILE_CXX) -D__OUTSIDE_CYGWIN__ -o $@@ $<

d238 1
a238 1
cygserver.exe: cygserver.o cygserver_shm_outside.o cygserver_transport_outside.o cygserver_transport_pipes_outside.o cygserver_transport_sockets_outside.o cygserver_client_outside.o wincap.o smallprint.o 
@


1.63.2.4
log
@Sun Sep 30 23:41:00 2001  Robert Collins <rbtcollins@@hotmail.com>

        * Makefile.in: Add cygserver_process.o to cygserver.exe.
        * cygserver.cc: Include signal.h and cygwin_version.h.
        Define debug_printf as a macro.
        Define DEBUG to a value.
        (client_request_attach_tty::serve): Add beginning of process cache support.
        Change from #ifdef DEBUG to work with new DEBUG style.
        (client_request_get_version::serve): Add beginning of process cache support.
        (class server_request): New prototype for support of process cache.
        (class queue_process_param): New class to allow request loop threading.
        (class server_request_queue): Add beginning of process cache support.
        Allow request loop threading.
        (request_loop): Thread function for request loops.
        (server_request_queue::process_requests): Initiator for threaded request loops.
        (client_request_shutdown::serve): Add beginning of process cache support.
        (server_request::server_request): Ditto.
        (server_request::process): Use debug_printf. Add beginning of process cache support.
        (server_request_queue::cleanup): Kill off any request loop threads.
        (server_request_queue::add): Add beginning of process cache support.
        (handle_signal): Trigger a shutdown.
        (main): Print out some useful info at startup - version, date time.
        Add process cache support.
        Spawn a separate thread for the transport request loop, thus allowing concurrent
        support for multiple transports.
        * cygserver_client.cc (client_request_get_version::serve): Add process cache support.
        (client_request_attach_tty::serve): Add process cache support.
        (client_request_shutdown::serve): Add process cache support.
        * cygsserver_process.cc: New file with the process cache support.
        * cygserver_shm.cc: Redefine debug_printf to allow conditional output.
        * cygwin.din: Export shmdt().
        * shm.cc: Run indent.
        Update FIXME's.
        (shmdt): New function.
        * include/cygwin/cygserver.h (class client_request): Add process cache support.
        (class client_request_get_version): Ditto.
        (class client_request_shutdown): Ditto.
        (class client_request_attach_tty): Ditto.
        * include/cygwin/cygserver_process.h: New header for process cache support.
@
text
@d242 1
a242 1
cygserver.exe: cygserver.o cygserver_shm_outside.o cygserver_transport_outside.o cygserver_transport_pipes_outside.o cygserver_transport_sockets_outside.o cygserver_client_outside.o cygserver_process.o wincap.o version.o smallprint.o 
@


1.63.2.5
log
@Tue Oct  2  9:57:00 2001  Robert Collins <rbtcollins@@hotmail.com>

        * Makefile.in: add threaded_queue.o to cygserver.exe.
        * cygserver.cc: Include threaded_queue.h
        (class server_request): Inherit from queue_request.
        (class server_process_param): Inherit from queue_process_param.
        (class server_request_queue): Inherit from threaded_queue.
        (request_loop): Adjust for new types.
        (server_request_queue::process_requests): Remove guts to
        threaded_queue::process_requests.
        (server_request::server_request): Adjust for new types.
        (worker_function): Delete.
        (server_request_queue::create_workers): Delete.
        (server_request_queue::cleanup): Delete.
        (server_request_queue::add): Move guts to threaded_queue::add.
        * threaded_queue.cc: New file.
        * threaded_queue.h: New file.
@
text
@d242 1
a242 1
cygserver.exe: cygserver.o cygserver_shm_outside.o cygserver_transport_outside.o cygserver_transport_pipes_outside.o cygserver_transport_sockets_outside.o cygserver_client_outside.o cygserver_process.o threaded_queue.o wincap.o version.o smallprint.o 
@


1.63.2.6
log
@Tue Oct  2 16:06:00 2001  Robert Collins <rbtcollins@@hotmail.com>

        * Makefile.in: Remove cygserver_shm.o from cygwin1.dll.
        Rename cygserver_shm_outside.o to cygserver_shm.o.
        * cygserver.cc (server_request::process): Use the new client_request
        constructor.
        * cygserver_client.cc: Remove the #ifdef's stubs for the server method
        within cygwin.
        (client_request_attach_tty::client_request_attach_tty): Use the new
        client_request constructor.
        (client_request_shutdown::client_request_shutdown): Ditto.
        (client_request::client_request): Ditto.
        * cygserver_shm.cc (client_request_shm_get::serve): Remove the
        #ifdef'd stub for in-cygwin builds.
        (client_request_shm_get::client_request_shm_get): Use the new
        client_request constructor, and remove the in-cygwin variants.
        * cygserver_shm.h (class client_request_shm_get): #ifndef test the
        serve method - it's only used in cygserver.
        * shm.cc (client_request_shm_get::client_request_shm_get): New function.
        * include/cygwin/cygserver.h (request_header): New constructor.
        (class client_request): Use it.
        New constructor accepting the header size.
        #ifndef test the server method - it's only used within cygserver.
        (client_request_get_version): #ifdef test the server method.
        (client_request_shutdown): Ditto.
        (client_request_attach_tty): Ditto.
@
text
@d119 1
a119 1
DLL_OFILES:=assert.o autoload.o cygheap.o cygserver_client.o \
d239 1
a239 1
cygserver_shm.o: cygserver_shm.cc
d242 1
a242 1
cygserver.exe: cygserver.o cygserver_shm.o cygserver_transport_outside.o cygserver_transport_pipes_outside.o cygserver_transport_sockets_outside.o cygserver_client_outside.o cygserver_process.o threaded_queue.o wincap.o version.o smallprint.o 
@


1.63.2.7
log
@Merged changes from HEAD
@
text
@a204 1
	@@rm -f stamp-cygwin-lib
d206 1
a206 1
$(LIB_NAME): new-$(DLL_NAME) $(LIBCOS) stamp-cygwin-lib
a207 3

stamp-cygwin-lib:
	@@touch stamp-cygwin-lib
@


1.63.2.8
log
@Merged changes from HEAD
@
text
@d17 1
a17 1
VPATH:=$(srcdir):$(CONFIG_DIR):$(srcdir)/regex:$(srcdir)/regexp:$(srcdir)/lib
d47 2
a48 2
MT_SAFE:=@@MT_SAFE@@
DEFS:=@@DEFS@@
d54 1
a54 1
CFLAGS+=-MMD -fbuiltin
d68 1
a68 2
NM:=@@NM@@
LDSCRIPT:=cygwin.sc
d125 15
a139 26
	fhandler_disk_file.o fhandler_dsp.o fhandler_floppy.o fhandler_mem.o \
	fhandler_random.o fhandler_raw.o fhandler_serial.o fhandler_socket.o \
	fhandler_tape.o fhandler_termios.o fhandler_tty.o fhandler_windows.o \
	fhandler_zero.o fork.o glob.o grp.o heap.o init.o ioctl.o ipc.o \
	localtime.o malloc.o miscfuncs.o mmap.o net.o ntea.o passwd.o path.o \
	pinfo.o pipe.o poll.o pthread.o regcomp.o regerror.o regexec.o \
	regfree.o registry.o resource.o scandir.o sched.o sec_acl.o \
	sec_helper.o security.o select.o shared.o shm.o shortcut.o signal.o \
	sigproc.o smallprint.o spawn.o strace.o strsep.o sync.o syscalls.o \
	sysconf.o syslog.o termios.o thread.o times.o tty.o uinfo.o uname.o \
	v8_regexp.o v8_regerror.o v8_regsub.o wait.o wincap.o window.o \
	$(EXTRA_DLL_OFILES) $(EXTRA_OFILES) $(MALLOC_OFILES) $(MT_SAFE_OBJECTS)

GMON_OFILES:=gmon.o mcount.o profil.o

OBSOLETE_FUNCTIONS:=regcomp regerror regexec regfree regsub
NEW_FUNCTIONS:=regcomp posix_regcomp \
	       regerror posix_regerror \
	       regexec posix_regexec \
	       regfree posix_regfree

PWD:=${shell pwd}
SUBLIBS:=libpthread.a $(PWD)/libm.a libc.a
EXTRALIBS:=libautomode.a libbinmode.a libtextmode.a
INSTOBJS:=automode.o binmode.o textmode.o
TARGET_LIBS:=$(LIB_NAME) $(SUBLIBS) $(GMON_START) $(LIBGMON_A) $(SUBLIBS) $(INSTOBJS) $(EXTRALIBS)
d141 1
a141 1
	install install-libs install-headers
d151 1
a151 1
all_target: $(TARGET_LIBS) cygserver.exe
d159 2
a160 2
install: install-libs install-headers install-man install_target \
	$(install_host) $(install_target)
d162 1
a162 1
install-libs: $(TARGET_LIBS)
d164 2
a165 2
	for i in $^; do \
	    $(INSTALL_DATA) $$i $(tooldir)/lib/`basename $$i` ; \
d175 1
a175 16
	$(INSTALL_DATA) regex/regex.h $(tooldir)/include/regex.h

install-man:
	cd $(srcdir); \
	for i in `find . -type f -name '*.2'`; do \
	    $(INSTALL_DATA) $$i $(tooldir)/man/man2/`basename $$i` ; \
	done; \
	for i in `find . -type f -name '*.3'`; do \
	    $(INSTALL_DATA) $$i $(tooldir)/man/man3/`basename $$i` ; \
	done; \
	for i in `find . -type f -name '*.5'`; do \
	    $(INSTALL_DATA) $$i $(tooldir)/man/man5/`basename $$i` ; \
	done; \
	for i in `find . -type f -name '*.7'`; do \
	    $(INSTALL_DATA) $$i $(tooldir)/man/man7/`basename $$i` ; \
	done
a176 3
install_target: cygserver.exe
	$(INSTALL_PROGRAM) cygserver.exe $(bindir)/cygserver.exe
	
d180 1
a180 1
	-rm -f *.o *.dll *.a *.exp junk *.base version.cc regexp/*.o winver_stamp *.exe *.d *stamp* *_magic.h
d187 10
d199 1
d201 1
a201 1
	$(CXX) $(CXXFLAGS) -nostdlib -Wl,-T$(firstword $^) -Wl,--out-implib,cygdll.a -shared -o $@@ \
d205 1
d207 2
a208 5
# Rule to build libcygwin.a
$(LIB_NAME): rmsym newsym new-$(DLL_NAME) $(LIBCOS)
	/bin/sh ${word 1,$^} ./cygdll.a "$(NM)" "$(AR)" "$(RANLIB)" $(OBSOLETE_FUNCTIONS) || exit 0
	/bin/sh ${word 2,$^} ./cygdll.a "$(AS)" "$(AR)" "$(RANLIB)" $(NEW_FUNCTIONS) || exit 0
	(echo create $(LIB_NAME); echo addmod $(LIBCOS); echo addlib cygdll.a; echo save) | $(AR) -M
d210 2
a211 7
# Rule to make stub library used by testsuite
# dependency set to $(LIB_NAME) to accommodate make -j2.
# Otherwise dlltool gets confused. cgf (11-16-2000)
new-$(LIB_NAME): $(LIB_NAME)
	$(DLLTOOL) --as=$(AS) --dllname new-$(DLL_NAME) --def $(DEF_FILE) --output-lib new-templib.a
	$(AR) rcv new-templib.a $(LIBCOS)
	mv new-templib.a new-$(LIB_NAME)
a219 22

shared_info_magic.h: cygmagic shared_info.h
	/bin/sh ${word 1,$^} $@@ "$(CC)" ${word 2,$^} MOUNT_MAGIC 'class mount_info' SHARED_MAGIC 'class shared_info'

child_info_magic.h: cygmagic child_info.h
	/bin/sh ${word 1,$^} $@@ "$(CC)" ${word 2,$^} CHILD_INFO_MAGIC 'class child_info'

dcrt0.o sigproc.o: child_info_magic.h

shared.o: shared_info_magic.h

libpthread.a: speclib cygwin.def pthread.o thread.o
	/bin/sh ${word 1, $^} $@@ "${NM}" "${DLLTOOL}" ${wordlist 2, 99, $^}

$(PWD)/libm.a: speclib cygwin.def $(LIBM)
	/bin/sh ${word 1, $^} $@@ "${NM}" "${DLLTOOL}" ${wordlist 2, 99, $^}

$(PWD)/libc.a: speclib cygwin.def $(PWD)/libm.a libpthread.a
	/bin/sh ${word 1, $^} -v $@@ "${NM}" "${DLLTOOL}" ${wordlist 2, 99, $^}

lib%.a: %.o
	$(AR) cru $@@ $?
@


1.63.2.9
log
@Merged changes from HEAD
@
text
@d169 3
a171 1
install: install-bin install-libs install-headers install-man install_target \
a173 2
uninstall: uninstall-libs uninstall-headers uninstall-man 

a207 31


uninstall-libs: $(TARGET_LIBS)
	rm -f $(bindir)/$(DLL_NAME); \
	for i in $^; do \
	    rm -f $(tooldir)/lib/$$i ; \
	done

uninstall-headers:
	cd $(srcdir); \
	for sub in `find include -name '[a-z]*' -type d -print | sort`; do \
	    for i in $$sub/*.h ; do \
	      rm -f $(tooldir)/$$sub/`basename $$i` ; \
	    done ; \
	done ; \
	rm -f $(tooldir)/include/regex.h

uninstall-man:
	cd $(srcdir); \
	for i in `find . -type f -name '*.2'`; do \
	    rm -f $(tooldir)/man/man2/`basename $$i` ; \
	done; \
	for i in `find . -type f -name '*.3'`; do \
	    rm -f $(tooldir)/man/man3/`basename $$i` ; \
	done; \
	for i in `find . -type f -name '*.5'`; do \
	    rm -f $(tooldir)/man/man5/`basename $$i` ; \
	done; \
	for i in `find . -type f -name '*.7'`; do \
	    rm -f $(tooldir)/man/man7/`basename $$i` ; \
	done
@


1.63.2.10
log
@Merged changes from HEAD
@
text
@d129 1
a129 2
	fhandler_zero.o fnmatch.o \
	fork.o glob.o grp.o heap.o init.o ioctl.o ipc.o localtime.o \
d289 1
a289 1
	/bin/sh ${word 1, $^} $@@ "${NM}" "${DLLTOOL}" "${AS}" ${wordlist 2, 99, $^}
d292 1
a292 1
	/bin/sh ${word 1, $^} $@@ "${NM}" "${DLLTOOL}" "${AS}" ${wordlist 2, 99, $^}
d295 1
a295 1
	/bin/sh ${word 1, $^} -v $@@ "${NM}" "${DLLTOOL}" "${AS}" ${wordlist 2, 99, $^}
@


1.63.2.11
log
@2002-01-29  Robert Collins  <rbtcollins@@hotmail.com>

        * Makefile.in (OBJS): Remove duplicate localtime.o.
@
text
@d131 1
a131 1
	malloc.o miscfuncs.o mmap.o net.o ntea.o passwd.o path.o \
@


1.63.2.12
log
@Merged changes from HEAD
@
text
@d120 6
a125 5
# Please maintain this list in sorted order, with maximum files per line
DLL_OFILES:=assert.o autoload.o cygheap.o cygserver_client.o cygserver_transport.o \
	cygserver_transport_pipes.o cygserver_transport_sockets.o dcrt0.o debug.o \
	delqueue.o dir.o dlfcn.o dll_init.o dtable.o environ.o errno.o exceptions.o \
	exec.o external.o fcntl.o fhandler.o fhandler_clipboard.o fhandler_console.o \
d129 3
a131 2
	fhandler_zero.o fnmatch.o fork.o glob.o grp.o heap.o init.o ioctl.o ipc.o \
	localtime.o malloc.o miscfuncs.o mmap.o net.o ntea.o passwd.o path.o \
@


1.63.2.13
log
@Merged changes from HEAD
@
text
@d54 1
a54 1
override CFLAGS+=-MMD -fbuiltin
d120 1
a120 1
# Please maintain this list in sorted order, with maximum files per 80 col line
d126 10
a135 11
	fhandler_proc.o fhandler_process.o fhandler_random.o fhandler_raw.o \
	fhandler_registry.o fhandler_serial.o fhandler_socket.o \
	fhandler_tape.o fhandler_termios.o fhandler_tty.o fhandler_virtual.o \
	fhandler_windows.o fhandler_zero.o fnmatch.o fork.o glob.o grp.o \
	heap.o init.o ioctl.o ipc.o localtime.o malloc.o miscfuncs.o mmap.o \
	net.o ntea.o passwd.o path.o pinfo.o pipe.o poll.o pthread.o regcomp.o \
	regerror.o regexec.o regfree.o registry.o resource.o scandir.o sched.o \
	sec_acl.o sec_helper.o security.o select.o shared.o shm.o shortcut.o \
	signal.o sigproc.o smallprint.o spawn.o strace.o strsep.o sync.o \
	syscalls.o sysconf.o syslog.o termios.o thread.o times.o tty.o uinfo.o \
	uname.o v8_regexp.o v8_regerror.o v8_regsub.o wait.o wincap.o window.o \
d168 1
a168 1
install: install-libs install-headers install-man install_target \
d171 1
a171 1
uninstall: uninstall-libs uninstall-headers uninstall-man
d278 1
a278 1
	/bin/sh ${word 1,$^} $@@ "$(CC) -x c" ${word 2,$^} MOUNT_MAGIC 'class mount_info' SHARED_MAGIC 'class shared_info'
d281 1
a281 1
	/bin/sh ${word 1,$^} $@@ "$(CC) -x c" ${word 2,$^} CHILD_INFO_MAGIC 'class child_info'
d324 1
a324 1
cygserver.exe: cygserver.o cygserver_shm.o cygserver_transport_outside.o cygserver_transport_pipes_outside.o cygserver_transport_sockets_outside.o cygserver_client_outside.o cygserver_process.o threaded_queue.o wincap.o version.o smallprint.o
@


1.63.2.14
log
@	* woutsup.h: New file.
	* cygserver.cc: Use "woutsup.h" and new XXX_printf macros.
	(getfunc): New function, copied verbatim from "strace.cc".
	(__cygserver__printf): New function.
	* cygserver_client.cc: Use "woutsup.h" and new XXX_printf macros.
	* cygserver_process.cc: Ditto.
	* cygserver_shm.cc: Ditto.
	* cygserver_transport.cc: Ditto.
	* cygserver_transport_pipes.cc: Ditto.
	* cygserver_transport_sockets.cc: Ditto.
	* threaded_queue.cc: Ditto.
	* shm.cc: Remove trailing \n from XXX_printf format strings.
	* Makefile.in: Remove redundant __OUTSIDE_CYGWIN__ case for
	cygserver_shm.cc.
@
text
@d206 1
a206 1

d321 3
@


1.63.2.15
log
@Merged changes from HEAD
@
text
@d308 1
a308 1
	$(CC) -nodefaultlibs -o $@@ -lgcc $^
@


1.63.2.16
log
@	* msg.cc: New file of stub functions, no functionality.
	* sem.cc: Ditto.
	* shm.cc (client_shmmgr::shmctl): Add support for an out shm_info
	buffer for the SHM_INFO command.
	(client_shmmgr::shmget): Use %X to print keys.
	* include/sys/ipc.h: Comment all fields and values.
	(IPC_PRIVATE): Change to be non-negative.
	* include/sys/msg.h: New file with SUSv3 and ipcs(8) interfaces.
	* include/sys/sem.h: Ditto.
	* include/sys/shm.h: Comment all fields and values.
	(struct shm_info): New struct.
	* cygserver_shm.h (client_request_shm::shminfo): Rename.
	(client_request_shm::shm_info): New method.
	(client_request_shm::_parameters.out.hFileMap): Move into union.
	(client_request_shm::_parameters.out.shminfo): Rename.
	(client_request_shm::_parameters.out.shm_info): New field.
	* cygserver_shm.cc (server_shmmgr::_shm_ids): Rename.
	(server_shmmgr::_shm_tot): New field.
	(server_shmmgr::shmctl): Rename `out_shminfo' argument.  Add
	`out_shm_info' argument.  Fill in the `out_shm_info' argument in
	the SHM_INFO command.
	(server_shmmgr::shmget): Check `shmflg' against the mode of
	existing segments as per Stevens 1990, p. 123.
	(server_shmmgr::server_shmmgr): Initialize the new `_shm_tot'
	field.
	(server_shmmgr::new_segment): Set ENOMEM if CreateFileMapping
	fails.  Pass `size' to new_segment.
	(server_shmmgr::new_segment): Add size argument and use it to
	check against and update the new `_shm_tot' field.
	(server_shmmgr::delete_segment): Update the new `_shm_tot' field.
	* cygwin.din: Add the SysV IPC msg and sem interfaces.
	* Makefile.in (DLL_OFILES): Add new DLL object files.
@
text
@d121 16
a136 21

DLL_OFILES:=assert.o autoload.o cygheap.o cygserver_client.o	       \
	cygserver_transport.o cygserver_transport_pipes.o	       \
	cygserver_transport_sockets.o dcrt0.o debug.o delqueue.o dir.o \
	dlfcn.o dll_init.o dtable.o environ.o errno.o exceptions.o     \
	exec.o external.o fcntl.o fhandler.o fhandler_clipboard.o      \
	fhandler_console.o fhandler_disk_file.o fhandler_dsp.o	       \
	fhandler_floppy.o fhandler_mem.o fhandler_proc.o	       \
	fhandler_process.o fhandler_random.o fhandler_raw.o	       \
	fhandler_registry.o fhandler_serial.o fhandler_socket.o	       \
	fhandler_tape.o fhandler_termios.o fhandler_tty.o	       \
	fhandler_virtual.o fhandler_windows.o fhandler_zero.o	       \
	fnmatch.o fork.o glob.o grp.o heap.o init.o ioctl.o ipc.o      \
	localtime.o malloc.o miscfuncs.o mmap.o msg.o net.o ntea.o     \
	passwd.o path.o pinfo.o pipe.o poll.o pthread.o regcomp.o      \
	regerror.o regexec.o regfree.o registry.o resource.o scandir.o \
	sched.o sec_acl.o sec_helper.o security.o select.o sem.o       \
	shared.o shm.o shortcut.o signal.o sigproc.o smallprint.o      \
	spawn.o strace.o strsep.o sync.o syscalls.o sysconf.o syslog.o \
	termios.o thread.o times.o tty.o uinfo.o uname.o v8_regexp.o   \
	v8_regerror.o v8_regsub.o wait.o wincap.o window.o	       \
@


1.63.2.17
log
@Merged changes from HEAD
@
text
@d313 1
a313 1
	$(CC) -nodefaultlibs -o $@@ $^ -lgcc -lcygwin
d328 1
a328 1
	$(CXX) -o $@@ $^ -lstdc++
@


1.63.2.18
log
@Merged changes from HEAD
@
text
@a151 2
API_VER:=$(srcdir)/include/cygwin/version.h

d255 1
a255 1
new-$(DLL_NAME): $(LDSCRIPT) $(DLL_OFILES) $(DEF_FILE) $(DLL_IMPORTS) $(LIBC) $(LIBM) $(API_VER) Makefile winver_stamp
a278 4

$(API_VER): $(srcdir)/cygwin.din
	@@echo Error: Version info is older than DLL API!
	@@false
@


1.63.2.19
log
@Merged changes from HEAD
@
text
@d124 18
a141 19
	cygserver_transport_sockets.o cygthread.o dcrt0.o debug.o      \
	delqueue.o dir.o dlfcn.o dll_init.o dtable.o environ.o errno.o \
	exceptions.o exec.o external.o fcntl.o fhandler.o	       \
	fhandler_clipboard.o fhandler_console.o fhandler_disk_file.o   \
	fhandler_dsp.o fhandler_floppy.o fhandler_mem.o		       \
	fhandler_proc.o fhandler_process.o fhandler_random.o	       \
	fhandler_raw.o fhandler_registry.o fhandler_serial.o	       \
	fhandler_socket.o fhandler_tape.o fhandler_termios.o	       \
	fhandler_tty.o fhandler_virtual.o fhandler_windows.o	       \
	fhandler_zero.o fnmatch.o fork.o glob.o grp.o heap.o init.o    \
	ioctl.o ipc.o localtime.o malloc.o miscfuncs.o mmap.o msg.o    \
	net.o ntea.o passwd.o path.o pinfo.o pipe.o poll.o pthread.o   \
	regcomp.o regerror.o regexec.o regfree.o registry.o resource.o \
	scandir.o sched.o sec_acl.o sec_helper.o security.o select.o   \
	sem.o shared.o shm.o shortcut.o signal.o sigproc.o	       \
	smallprint.o spawn.o strace.o strsep.o sync.o syscalls.o       \
	sysconf.o syslog.o termios.o thread.o times.o tty.o uinfo.o    \
	uname.o v8_regexp.o v8_regerror.o v8_regsub.o wait.o wincap.o  \
	window.o						       \
@


1.63.2.20
log
@Merged changes from HEAD
@
text
@a120 1
<<<<<<< Makefile.in
d134 1
a134 2
	ioctl.o ipc.o localtime.o malloc.o malloc_wrapper.o	       \
	miscfuncs.o mmap.o msg.o    \
a316 3

malloc.o: malloc.cc
	$(COMPILE_CXX) -fomit-frame-pointer -o $@@ $<
@


1.63.2.21
log
@	Fix bad merge.
@
text
@d121 1
@


1.63.2.22
log
@Merged changes from HEAD
@
text
@d118 1
a118 1
DLL_IMPORTS:=$(w32api_lib)/libuuid.a $(w32api_lib)/libshell32.a $(w32api_lib)/libkernel32.a
d162 1
a162 1
	install install-libs install-headers -lgcc
d262 2
a263 2
	$(MALLOC_OBJ) $(LIBM) $(LIBC) \
	-lstdc++ -lgcc $(DLL_IMPORTS) 
a277 1
	$(RANLIB) $@@
d322 1
a322 4
cygrun.o: cygrun.c
	$(CC) $(MINGW_CFLAGS) -o $@@ -c $<

cygrun.exe : cygrun.o -lgcc $(w32api_lib)/libuser32.a \
d324 1
a324 1
	$(CC) -mno-cygwin -o $@@ $^
a345 3

-lgcc:
	:
@


1.63.2.23
log
@Merged changes from HEAD
@
text
@d121 23
a143 22
DLL_OFILES:=								\
	assert.o autoload.o cygheap.o cygserver_client.o		\
	cygserver_transport.o cygserver_transport_pipes.o		\
	cygserver_transport_sockets.o cygthread.o dcrt0.o debug.o	\
	delqueue.o dir.o dlfcn.o dll_init.o dtable.o environ.o errno.o	\
	exceptions.o exec.o external.o fcntl.o fhandler.o		\
	fhandler_clipboard.o fhandler_console.o fhandler_disk_file.o	\
	fhandler_dsp.o fhandler_floppy.o fhandler_mem.o			\
	fhandler_proc.o fhandler_process.o fhandler_random.o		\
	fhandler_raw.o fhandler_registry.o fhandler_serial.o		\
	fhandler_socket.o fhandler_tape.o fhandler_termios.o		\
	fhandler_tty.o fhandler_virtual.o fhandler_windows.o		\
	fhandler_zero.o fnmatch.o fork.o glob.o grp.o heap.o init.o	\
	ioctl.o ipc.o localtime.o malloc.o malloc_wrapper.o		\
	miscfuncs.o mmap.o msg.o net.o ntea.o passwd.o path.o pinfo.o	\
	pipe.o poll.o pthread.o regcomp.o regerror.o regexec.o		\
	regfree.o registry.o resource.o scandir.o sched.o sec_acl.o	\
	sec_helper.o security.o select.o sem.o shared.o shm.o signal.o	\
	sigproc.o smallprint.o spawn.o strace.o strsep.o sync.o		\
	syscalls.o sysconf.o syslog.o termios.o thread.o times.o tty.o	\
	uinfo.o uname.o v8_regexp.o v8_regerror.o v8_regsub.o wait.o	\
	wincap.o window.o						\
@


1.63.2.24
log
@Merged changes from HEAD
@
text
@d82 2
a83 2
	    echo $${rootme}/../../expect/expect$(EXEEXT) ; \
	  else echo expect ; fi`
d262 1
a262 1
	-lstdc++ -lgcc $(DLL_IMPORTS)
@


1.62
log
@* Makefile.in: Generate libcygwin.a during the link pass rather than as a
separate dlltool step.
* dcrt0.cc (_dll_crt0): pppid_handle could be NULL.  Don't close it if so.
@
text
@a181 3
$(LIB_NAME): new-$(DLL_NAME) $(LIBCOS)
	$(AR) rcv $(LIB_NAME) $(LIBCOS)

d198 3
@


1.61
log
@        * Makefile.in: Build wincap.o.
        * wincap.cc: New file.
        * wincap.h: Ditto.
        * autoload.cc: Add dynamic load statement for `CreateHardLinkA'.
        * dcrt0.cc (os_being_run): Eliminated.
        (osname): Ditto.
        (iswinnt): Ditto.
        (set_os_type): Ditto.
        (dll_crt0_1): Call wincap.init() instead of set_os_type().
        (_dll_crt0): Ditto.
        * environ.cc (set_chunksize): New function.
        (parse_thing): `forkchunk' setting now invokes function `set_chunksize'.
        * fork.cc (chunksize): Eliminated. Moved to be member of wincap.
        * host_dependent.h: Removed.
        * syscalls.cc (_link): Try using `CreateHardLinkA' first, if available.
        * cygheap.cc, dcrt0.cc, delqueue.cc, dir.cc,
        environ.cc, fhandler.cc, fhandler.h, fhandler_console.cc,
        fhandler_mem.cc, fork.cc, mmap.cc, net.cc, pinfo.cc, pinfo.h,
        security.cc, syscalls.cc, sysconf.cc, syslog.cc, thread.cc,
        times.cc, tty.cc, uinfo.cc, uname.cc, winsup.h: Use new wincap
        capability check throughout.
        * winsup.h: Include wincap.h. Eliminate extern declarations of
        `os_being_run' and `iswinnt'. Eliminate `os_type" definition.
        * include/cygwin/version.h: Bump version to 1.3.4.
@
text
@d145 1
a145 1
all: new-$(DLL_NAME) $(all_host) all_target
d147 1
a147 1
all_target: $(LIBGMON_A) $(LIB_NAME) automode.o binmode.o textmode.o
d182 2
a183 4
$(LIB_NAME): $(DEF_FILE) $(LIBCOS)
	$(DLLTOOL) --as=$(AS) --dllname $(DLL_NAME) --def $(DEF_FILE) --output-lib templib.a
	$(AR) rcv templib.a $(LIBCOS)
	mv templib.a $(LIB_NAME)
d197 1
a197 1
	$(CXX) $(CXXFLAGS) -nostdlib -Wl,-T$(firstword $^) -shared -o $@@ \
@


1.60
log
@Update copyrights.
@
text
@d131 1
a131 1
	window.o \
@


1.59
log
@* cygwin.sc: New file -- linker script for building cygwin DLL.
* Makefile.in: Use linker script to control location of cygheap.
* cygheap.cc (buckets): Make static.
(init_cheap): Remove special iswinnt handling.  Allocate cygheap at a fixed
location.  Display more info when allocation fails.
(cygheap_fixup_in_child): Try harder to move cygheap to correct location.
Display more info when allocation fails.
* fhandler.h (fhandler_socket): Add macros for tracking socket shutdown state.
* net.cc (cygwin_shutdown): Set appropriate shutdown value for future use.
* select.cc (select_stuff::cleanup): New method.
(cygwin_select): Call cleanup explicitly to avoid a race.
(select_stuff:~select_stuff): Call cleanup chain via cleanup method.
(fhandler_socket::select_read): Set *_ready when shutdown has been called on
the socket.
(fhandler_socket::select_write): Ditto.
(fhandler_socket::select_except): Ditto.
* winsup.h: Move NO_COPY to "COMMON" section.
* autoload.cc (wsock_started): Avoid initializing NO_COPY value.
* sigproc.cc: Remove initialization from NO_COPY variables.
(sigproc_init): Initialize sig_loop_wait here, rather than via initialization.
(subproc_init): Initialize proc_loop_wait here, rather than via initialization.
@
text
@d2 1
a2 1
# Copyright 1995, 1996, 1997, 1998, 1999, 2000, 2001 Cygnus Solutions.
@


1.58
log
@* dcrt0.cc (alloc_stack_hard_way): Make half-hearted attempt to deal with
growing stack under Windows 95.
* Makefile.in: Add install-lib and install-headers.
@
text
@d68 1
d198 5
a202 3
new-$(DLL_NAME): $(DLL_OFILES) $(DEF_FILE) $(DLL_IMPORTS) $(LIBC) $(LIBM) Makefile winver_stamp
	$(CXX) $(CXXFLAGS) -nostdlib -Wl,-shared -o $@@ -e $(DLL_ENTRY) $(DEF_FILE) $(DLL_OFILES) version.o \
	winver.o $(DLL_IMPORTS) $(MALLOC_OBJ) $(LIBM) $(LIBC) -lstdc++ -lgcc -lshell32 -luuid
@


1.57
log
@forced commit
@
text
@d135 2
a136 1
.PHONY: all force dll_ofiles install all_target install_target all_host install_host
d152 3
a154 1
install: all $(install_host) $(install_target)
d158 3
a160 1
	done ; \
@


1.56
log
@* dlmalloc.c: New file. Port of Doug Lea's malloc
* dlmalloc.h: Ditto.
* Makefile.in: Add support for MALLOC_DEBUG
* config.h.in: Ditto.
* winsup.h: Ditto.
* configure.in: Add --enable-malloc-debugging option.
* configure: Regenerate.
* debug.h: Include declarations for debugging malloc.
* tty.cc (grantpt): Fix definition.
(unlockpt): Ditto.
@
text
@@


1.55
log
@        * Makefile.in: Add object files `sec_helper.cc' and `sec_acl.cc'.
        * security.cc: Swap out several functions.
        * sec_acl.cc: New file. Move Sun compatibel ACL functions from
        `security.cc' to here.
        * sec_helper.cc: New file. Move security helper functions from
        `security.cc' to here.
        * security.h: Changed to accomodate the above changes.

        * grp.cc: Replace `group_in_memory_p' by `group_state'.
        Eliminate group_sem throughout.
        (enum grp_state): New enumeration type.
        (read_etc_group): Make race safe.
        * security.cc: Eliminate group_sem throughout.
@
text
@d114 2
d131 1
a131 1
	$(EXTRA_DLL_OFILES) $(EXTRA_OFILES) $(MT_SAFE_OBJECTS)
@


1.54
log
@* autoload.cc: Add winmm functions needed by fhandler_dsp.cc.
* fhandler_dsp.cc: New file.  Implements OSS like /dev/dsp.
* include/sys/soundcard.h: New file.  User land includes for OSS /dev/dsp.
* fhandler.h: Add new class fhandler_dev_dsp and a FH_OSS_DSP definition.
* dtable.cc (dtable::build_fhandler): Allow creation of the /dev/dsp device.
* path.cc (windows_device_names): Add /dev/dsp into list of device names.
* Makefile.in (DLL_OFILES): Add fhandler_dsp.o.
@
text
@d125 1
a125 1
	sched.o security.o select.o shared.o shortcut.o signal.o sigproc.o \
@


1.53
log
@* Makefile.in: Put -lgcc last in list of libraries, since stdc++ library needs
it.
* cygwin.din: Remove obsolete "__empty" export.
* exceptions.cc (call_signal_handler_now): Force inclusion of function even
when -finline-functions is specified.
* sigproc.h: Remove obsolete call_signal_handler declaration.
* fhandler_console.cc (cp_get_internal): New function.
(cp_convert): New function.
(con_to_str): New function.
(str_to_con): New function.
(fhandler_console::read): Replace OemToCharBuff with con_to_str.
(fhandler_console::write_normal): Replace CharToOemBuff with str_to_con.
@
text
@d117 4
a120 5
	dlfcn.o \
	dll_init.o dtable.o environ.o  errno.o exceptions.o exec.o external.o \
	fcntl.o fhandler.o fhandler_clipboard.o fhandler_console.o \
	fhandler_floppy.o fhandler_mem.o fhandler_random.o fhandler_raw.o \
	fhandler_serial.o fhandler_socket.o fhandler_tape.o \
d192 1
a192 1
	winver.o $(DLL_IMPORTS) $(MALLOC_OBJ) $(LIBM) $(LIBC) -lstdc++ -lshell32 -luuid -lgcc
@


1.52
log
@* sched.cc: New file.  Implement sched*.
* include/sched.h: New file.  User land includes for sched*.
* Makefile.in: Add sched.o
* cygwin.din: Add exports for sched*.
@
text
@d193 1
a193 1
	winver.o $(DLL_IMPORTS) $(MALLOC_OBJ) $(LIBM) $(LIBC) -lgcc -lstdc++ -lshell32 -luuid
@


1.51
log
@        * shortcut.c: New file. Provides a C interface to reading of
        Windows shortcuts to avoid compiler flag `-fvtable-thunks'.
        * shortcut.h: Ditto.
        * Makefile.in: Add shortcut.o to DLL_OFILES.
        * cygerrno.h: Provide a C interface to `geterrno_from_win_error' for
        using in shortcut.c.
        * errno.cc (geterrno_from_win_error): Define as extern "C".
        * path.cc (struct symlink_info): Remove methods `check_shortcut' and
        `check_sysfile'.
        (shortcut_header): Move to shortcut.c.
        (shortcut_initalized): Ditto.
        (create_shortcut_header): Ditto.
        (cmp_shortcut_header): Ditto.
        (symlink_info::check_shortcut): Ditto. Reorganize as a plain C function.
        (symlink_info::check_sysfile): Redefine as a global function using the
        same parameter list as `check_shortcut' for clearness.
        (symlink_info::check): Change parameter list for calls to
        `check_shortcut' and `check_sysfile'.
@
text
@d124 6
a129 7
	miscfuncs.o mmap.o \
	net.o ntea.o passwd.o path.o pinfo.o pipe.o poll.o pthread.o regexp.o \
	regerror.o regsub.o registry.o resource.o scandir.o security.o select.o \
	shared.o \
	shortcut.o signal.o sigproc.o smallprint.o spawn.o strace.o strsep.o \
	sync.o syscalls.o sysconf.o syslog.o termios.o thread.o times.o tty.o \
	uinfo.o uname.o wait.o window.o \
@


1.50
log
@Add copyright year 2001
@
text
@d127 2
a128 1
	shared.o signal.o sigproc.o smallprint.o spawn.o strace.o strsep.o \
@


1.49
log
@        * Makefile.in: Add `-lshell32 -luuid' to link pass for new-cygwin1.dll.
        * autoload.cc: Add LoadDLLinitfunc for ole32.dll.
        Add LoadDLLfuncEx statements for CoInitialize@@4, CoUninitialize@@0
        and CoCreateInstance@@20.
        * dir.cc (dir_suffixes): New datastructure.
        (readdir): Check for R/O *.lnk files to hide the suffix.
        (opendir): Use `dir_suffixes' in path conversion.
        (rmdir): Ditto.
        * fhandler.cc (fhandler_disk_file::fstat): Add S_IFLNK flag
        before calling `get_file_attribute'. Take FILE_ATTRIBUTE_READONLY
        into account only if the file is no symlink.
        * path.cc (inner_suffixes): New datastructure.
        (SYMLINKATTR): Eliminated.
        (path_conv::check): Use `inner_suffixes' on inner path components.
        (shortcut_header): New global static variable.
        (shortcut_initalized): Ditto.
        (create_shortcut_header): New function.
        (cmp_shortcut_header): Ditto.
        (symlink): Create symlinks by creating windows shortcuts. Preserve
        the old code.
        (symlink_info::check_shortcut): New method.
        (symlink_info::check_sysfile): Ditto.
        (symlink_info::check): Check for shortcuts. Move code reading
        old system attribute symlinks into symlink_info::check_sysfile().
        (chdir): Use `dir_suffixes' in path conversion.
        * security.cc (get_file_attribute): Check for S_IFLNK flag.
        Force 0777 permissions then.
        * spawn.cc (std_suffixes): Add ".lnk" suffix.
        * syscalls.cc (_unlink): Use `inner_suffixes' in path conversion.
        Check for shortcut symlinks to eliminate R/O attribute before
        calling DeleteFile().
        (stat_suffixes): Add ".lnk" suffix.
        (stat_worker): Force 0777 permissions if file is a symlink.
@
text
@d2 1
a2 1
# Copyright 1995, 1996, 1997, 1998, 1999, 2000 Cygnus Solutions.
@


1.48
log
@* path.cc (normalize_posix_path): Calculate path name length overruns more
dynamically.
(normalize_win32_path): Ditto.
* Makefile.in: Avoid scanning the directory twice for *.d files.
@
text
@d193 1
a193 1
	winver.o $(DLL_IMPORTS) $(MALLOC_OBJ) $(LIBM) $(LIBC) -lgcc -lstdc++
@


1.47
log
@	* Makefile.in: Change `-nostartfiles' to `-nostdlib' to avoid
	automatic linking with default libraries when linking new-cygwin1.dll.
	Link with libgcc.a and libstdc++.a explicitly.
@
text
@d222 3
a224 2
ifneq (,${wildcard *.d})
include *.d
@


1.46
log
@* Makefile.in: Remove some extra cruft.
@
text
@d192 2
a193 2
	$(CXX) $(CXXFLAGS) -nostartfiles -Wl,-shared -o $@@ -e $(DLL_ENTRY) $(DEF_FILE) $(DLL_OFILES) version.o \
	winver.o $(DLL_IMPORTS) $(MALLOC_OBJ) $(LIBM) $(LIBC)
@


1.45
log
@* Makefile.in: Use CXX to build the DLL.
* configure.in: Find correct c++ compiler.
* configure: Regenerate.
* path.cc (normalize_posix_path): Put correct drive at beginning of \foo style
paths.
(chdir): Don't send non-posix path to cygcwd.set.
@
text
@a133 3
LD_STUFF=--dll $(DLL_OFILES) version.o winver.o $(DLL_IMPORTS) $(LIBM) $(LIBC) \
	 $(LIBGCC) -e $(DLL_ENTRY) --image-base=0x61000000

d193 1
a193 1
	winver.o $(DLL_IMPORTS) $(LIBM) $(MALLOC_OBJ) $(LIBC)
d211 1
a211 1
	$(CC) -nodefaultlibs -o $@@ $^ $(LIBGCC)
@


1.44
log
@* Makefile.in: new-temp.a -> new-templib.a
@
text
@d55 1
d195 2
a196 2
	$(LD) -shared -o $@@ -e $(DLL_ENTRY) $(DEF_FILE) $(DLL_OFILES) version.o \
	winver.o $(DLL_IMPORTS) $(LIBM) $(LIBGCC) $(MALLOC_OBJ) $(LIBC) $(LIBGCC)
@


1.43
log
@* Makefile.in: Make import library creation 'make -j2' friendly.
@
text
@d188 1
a188 1
	$(AR) rcv new-temp.a $(LIBCOS)
@


1.42
log
@* pinfo.cc (pinfo::init): Reverse order of setting status and pid info in an
execed process to avoid a race.
* sigproc.cc (wait_subproc): Print more info when a WFSO error occurs.
* automode.c: New file.
* syscalls.cc (close_all_files): Streamline slightly.
* cygheap.cc (ccalloc): Clear *entire* allocated array.
@
text
@d178 3
a180 3
	$(DLLTOOL) --as=$(AS) --dllname $(DLL_NAME) --def $(DEF_FILE) --output-lib temp.a
	$(AR) rcv temp.a $(LIBCOS)
	mv temp.a $(LIB_NAME)
d184 6
a189 4
new-$(LIB_NAME): $(DEF_FILE) $(LIBCOS)
	$(DLLTOOL) --as=$(AS) --dllname new-$(DLL_NAME) --def $(DEF_FILE) --output-lib temp.a
	$(AR) rcv temp.a $(LIBCOS)
	mv temp.a new-$(LIB_NAME)
@


1.41
log
@        * autoload.cc: New file keeping all autoload stuff.
        * Makefile.in: Add autoload.o to dependencies.
        * dcrt0.cc: Move all autoload stuff to autoload.cc.
        * fhandler_mem.cc: Ditto.
        * net.cc: Ditto.
        * uinfo.cc: Ditto.
@
text
@d146 1
a146 1
all_target: $(LIBGMON_A) $(LIB_NAME) binmode.o textmode.o
d154 1
a154 1
	for i in $(LIB_NAME) $(GMON_START) $(LIBGMON_A) binmode.o textmode.o ; do \
@


1.40
log
@        * fhandler_socket.cc: New file.
        * Makefile.in: Add fhandler_socket.o to dependencies.
        * fhandler.h: Change comment.
        * net.cc Move all fhandler_socket methods to fhandler_socket.cc.
        * winsup.h: Add declaration for `ws2_32_handle'.
@
text
@d115 2
a116 1
DLL_OFILES:=assert.o cygheap.o dcrt0.o debug.o delqueue.o dir.o dlfcn.o \
@


1.39
log
@* Makefile.in: add miscfuncs.cc
* miscfuncs.cc: new, miscellaneous functions
* winsup.h: define table-driven tolower/toupper
* environ.cc: use them
* fhandler_console.cc: ditto
* fhandler_termios: ditto
* path.cc: ditto
(strncasematch, strcasematch, strcasestr): move to miscfuncs.cc
@
text
@d118 2
a119 2
	fhandler_floppy.o fhandler_mem.o \
	fhandler_random.o fhandler_raw.o fhandler_serial.o fhandler_tape.o \
@


1.38
log
@* fhandler_clipboard.cc: new file
* Makefile.in: include fhandler_clipboard.o in DLL_OFILES list.
* fhandler.h: add FH_CLIPBOARD to the devices enum.
(fhandler_dev_clipboard): new
* path.cc (windows_device_names): add "\\dev\\clipboard"
(get_device_number): check for "clipboard"
* dcrt0.cc: declare a few more functions from winuser.h
* dtable.cc (dtable::build_fhandler): check for FH_CLIPBOARD in
switch().
@
text
@d121 2
a122 1
	fork.o glob.o grp.o heap.o init.o ioctl.o localtime.o malloc.o mmap.o \
@


1.37
log
@* Makefile.in: Remove some obsolete stuff.
* dcrt0.cc (dll_crt0_1): Call signal_fixup_after_exec where appropriate.  Set
myself->uid from parent version.  Just use ThreadItem Init method.  Close or
store hexec_proc as appropriate.
(_dll_crt0): Store user_data->forkee here so that proper tests can be made
subsequently.
(do_exit): Remove hExeced stuff.
* environ.cc (environ_init): Accept environ count as well as environ pointer.
* environ.h: Reflect above change.
* pinfo.cc (pinfo_init): Ditto.  Accept environ count.
(fixup_in_spawned_child): Remove.
* spawn.cc (spawn_guts): Move signal code to dll_crt0_1.  Don't suspend execing
process since it is no longer necessary.  Store envc.
* exceptions.cc (signal_fixup_after_exec): New function.
(call_handler): Remove hExeced test.
* child_info.h (cygheap_exec_info): Store envc as well as envp.
(child_info_spawn): Store hexec_proc so that it can be closed in child.
* path.cc (normalize_posix_path): Avoid intermediate use of temporary cwd buf.
(normalize_win32_path): Ditto.
(cwdstuff::get_initial): Always set lock.
* sigproc.h: Remove hExeced.
* strace.cc (strace::vsprntf): Modify to accomodate for lack of hExeced.
* thread.cc (MTinterface::Init): Merge Init1 and ClearReent into this method.
(MTinterface::Init1): Eliminate.
(MTinterface::ClearReent): Eliminate.
* thread.h: Reflect above changes.
* include/sys/strace.h (strace): Make microseconds() public.  Make various
functions 'regparm', throughout.
* pinfo.h (_pinfo): Inline simple signal manipulation functions.  Requires
inclusion of thread.h which was removed from .cc files, where appropriate.
throughout.
* pinfo.cc: Eliminate signal manipulation functions.
(_pinfo::exit): Calculate total rusage for exiting process here.
* cygheap.cc (size2bucket): Eliminate.
(init_buckets): Ditto.
(_cmalloc): Calculate size and bits in a loop rather than going through a
function call.
(_crealloc): Use stored array index to calculate allocated size.
* spawn.cc (spawn_guts): Use _pinfo exit method to exit, calculating cpu usage.
@
text
@d117 2
a118 1
	fcntl.o fhandler.o fhandler_console.o fhandler_floppy.o fhandler_mem.o \
@


1.36
log
@        * Makefile.in: Add fhandler_mem.o to the dependencies.
        * dtable.cc (dtable::build_fhandler): Add case for FH_MEM.
        * fhandler.h: Add FH_MEM device type.  Add class fhandler_dev_mem.
        * fhandler_mem.cc: New file. Implementation of class fhandler_dev_mem.
        * path.cc: Add /dev/mem to windows_device_names.
        (get_device_number): Add FH_MEM type.
@
text
@d54 1
a54 1
CFLAGS+=-MD
a86 5
ifdef MT_SAFE
MT_SAFE_HEADERS:=thread.h
MT_SAFE_OBJECTS:=pthread.o thread.o
endif

d121 5
a125 5
	net.o ntea.o passwd.o path.o pinfo.o pipe.o poll.o regexp.o regerror.o \
	regsub.o registry.o resource.o scandir.o security.o select.o shared.o \
	signal.o sigproc.o smallprint.o spawn.o strace.o strsep.o sync.o \
	syscalls.o sysconf.o syslog.o termios.o times.o tty.o uinfo.o uname.o \
	wait.o window.o \
a215 9

# .h file dependencies
# This may be overkill, but it's better than the previous situation.
# As files/dependencies are added and removed from Cygwin, please keep
# this list up to date.

WINSUP_H:=winsup.h fhandler.h path.h shared.h \
	  sigproc.h include/cygwin/version.h \
	  $(MT_SAFE_HEADERS)
@


1.35
log
@* Makefile.in: Make clean target remove *.d.
@
text
@d122 1
a122 1
	fcntl.o fhandler.o fhandler_console.o fhandler_floppy.o \
@


1.34
log
@* Makefile.in (CFLAGS): Ensure that -MD is always added even when CFLAGS is
overwritten.
@
text
@d170 1
a170 1
	-rm -f *.o *.dll *.a *.exp junk *.base version.cc regexp/*.o winver_stamp *.exe
@


1.33
log
@* Makefile.in: Add cygheap.o.
* child_info.h: Add specific exec class.
* cygheap.h: New file.  Contains declarations for cygwin heap.
* cygheap.cc: New file.  Implements cygwin heap functions.
* dcrt0.cc (quoted): Simplify due to new method for passing arguments between
cygwin programs.
(alloc_stack_hard_way): Attempt to handle overlapped stack.
(dll_crt0_1): Move child_info processing here.  Accomodate new method for
passing arguments between cygwin programs.  Initialize cygwin heap.  Establish
__argc and __argv variables.
(_dll_crt0): Move most of child_info processing to dll_crt0_1.
(cygwin_dll_init): Remove duplication.
* dtable.cc (dtable::extend): Allocate dtable using cygwin heap.
(dtable::build_fhandler): Ditto for fhandler type being constructed.
(dtable::dup_worker): Free new fhandler from cygwin heap on error.
(dtable::select_*): Don't assume that this == fdtab.
(dtable::linearize_fd_array): Delete.
(dtable::delinearize_fd_array): Delete.
(dtable::fixup_after_exec): New file.
(dtable::vfork_child_dup): Use cygwin heap.
(dtable::vfork_parent_restore): Ditto.
* dtable.h: Remove obsolete methods.  Add new method.
* environ.cc (posify): Eliminate already_posix parameter and logic.
(envsize): New function.
(_addenv): Use envsize.
(environ_init): Accept an argument pointing to an existing environment list.
If supplied, allocate space for this in the the program's heap.
* fhandler.cc (fhandler_base::operator =): Move here from fhandler.h.  Use
cygwin heap to allocate filenames.
(fhandler_base::set_name): Allocate/free names from cygwin heap.
(fhandler_base::linearize): Delete.
(fhandler_base::de_linearize): Delete.
(fhandler_base::operator delete): Free from cygwin heap.
(fhandler_base::~fhandler_base): Ditto.
* fhandler.h: Accomodate elimination of *linearize and other changes above.
* fhandler_console.cc (fhandler_console::fixup_after_exec): Rename from
de_linearize.
* heap.h: New file.
* fhandler_tty.cc (fhandler_tty_slave::fhandler_tty_slave): Use cygwin heap for
name.  fhandler_tty::fixup_after_exec): Rename from de_linearize.
* fork.cc (fork): Call cygheap_fixup_in_child.
* heap.cc: Use declarations in heap.h.
* malloc.cc: Sprinkle assertions throughout to catch attempts to free/realloc
something from the cygwin heap.
* path.cc: Throughout, eliminate use of per-thread cache for cwd.  Use cwd_*
functions rather than cwd_* variables to access cwd_win32 and cwd_posix.
(cwd_win32): New function.
(cwd_posix): New function.
(cwd_hash): New function.
(cwd_fixup_after_exec): New function.
* path.h: Accomodate path.cc changes.
* pinfo.cc (pinfo_init): Accept a pointer to an environment table.  Pass this
to environ_init.  Eliminate old 'title' tests.
* pinfo.h: Accomodate above change in argument.
* spawn.cc (struct av): New method for building argv list.
(av::unshift): New method.
(spawn_guts): Allocate everything that the child process needs in the cygwin
heap and pass a pointer to this to the child.  Build argv list using new
method.  Eliminate delinearize stuff.
* thread.h: Eliminate _cwd_win32 and _cwd_posix buffers.
* winsup.h: Eliminate obsolete functions.  Add envsize() declaration.
@
text
@d53 2
a54 1
CFLAGS:=@@CFLAGS@@ -MD -fno-implement-inlines
@


1.32
log
@* Makefile.in: Remove "make check" support.  It is now in winsup/Makefile.in.
@
text
@d53 1
a53 1
CFLAGS:=@@CFLAGS@@ -MD
d119 11
a129 10
DLL_OFILES:=assert.o dcrt0.o debug.o delqueue.o dir.o dlfcn.o dll_init.o \
	dtable.o environ.o  errno.o exceptions.o exec.o external.o fcntl.o \
	fhandler.o fhandler_console.o fhandler_floppy.o fhandler_random.o \
	fhandler_raw.o fhandler_serial.o fhandler_tape.o fhandler_termios.o \
	fhandler_tty.o fhandler_windows.o fhandler_zero.o fork.o glob.o grp.o \
	heap.o init.o ioctl.o localtime.o malloc.o mmap.o net.o ntea.o passwd.o \
	path.o pinfo.o pipe.o poll.o regexp.o regerror.o regsub.o registry.o \
	resource.o scandir.o security.o select.o shared.o signal.o sigproc.o \
	smallprint.o spawn.o strace.o strsep.o sync.o syscalls.o sysconf.o \
	syslog.o termios.o times.o tty.o uinfo.o uname.o wait.o window.o \
@


1.31
log
@* Makefile.in: Don't include '.d' file if there are none generated yet.
@
text
@d182 1
a182 1
# Rule to make stub library used by "make check"
a211 55

#

# These targets are for the dejagnu testsuites. The file site.exp
# contains global variables that all the testsuites will use.

# Set to $(target_alias)/ for cross.
target_subdir = @@target_subdir@@

site.exp: ./config.status Makefile
	@@echo "Making a new config file..."
	-@@rm -f ./tmp?
	@@touch site.exp
	-@@mv site.exp site.bak
	@@echo "## these variables are automatically generated by make ##" > ./tmp0
	@@echo "# Do not edit here. If you wish to override these values" >> ./tmp0
	@@echo "# add them to the last section" >> ./tmp0
	@@echo "set rootme \"`pwd`\"" >> ./tmp0
	@@echo "set srcdir \"`cd ${srcdir}; pwd`\"" >> ./tmp0
	@@echo "set host_triplet $(host_canonical)" >> ./tmp0
	@@echo "set build_triplet $(build_canonical)" >> ./tmp0
	@@echo "set target_triplet $(target)" >> ./tmp0
	@@echo "set target_alias $(target_alias)" >> ./tmp0
	@@echo "set CC \"$(CC)\"" >> ./tmp0
# CFLAGS is set even though it's empty to show we reserve the right to set it.
	@@echo "set CFLAGS \"\"" >> ./tmp0
	echo "set tmpdir $(objdir)/testsuite" >> ./tmp0
	@@echo "set srcdir \"\$${srcdir}/testsuite\"" >> ./tmp0
	@@echo "## All variables above are generated by configure. Do Not Edit ##" >> ./tmp0
	@@cat ./tmp0 > site.exp
	@@cat site.bak | sed \
		-e '1,/^## All variables above are.*##/ d' >> site.exp
	-@@rm -f ./tmp?

testsuite/site.exp: site.exp
	if [ -d testsuite ]; then \
	  true; \
	else \
	  mkdir testsuite; \
	fi
	rm -rf testsuite/site.exp
	cp site.exp testsuite/site.exp

# Note: we set the PATH so that we can pick up new-cygwin1.dll

check: testsuite/site.exp
	-rootme=`pwd`; export rootme; \
	srcdir=`cd ${srcdir}; pwd` ; export srcdir ; \
	cd testsuite; \
	EXPECT=${EXPECT} ; export EXPECT ; \
	if [ -f $${rootme}/../expect/expect ] ; then  \
	   TCL_LIBRARY=`cd .. ; cd ${srcdir}/../tcl/library ; pwd` ; \
	    export TCL_LIBRARY ; fi ; \
	PATH=$${rootme}:$${PATH} ;\
	$(RUNTEST) --tool winsup $(RUNTESTFLAGS)
@


1.30
log
@* winsup.h: Eliminate inclusion of most of the cygwin .h files.  Use .h files
only in sources which require them.
* Makefile.in: Generate dependencies with -MD option.
@
text
@d50 1
a50 1
CC:=@@CC@@ -MD
d53 1
a53 1
CFLAGS:=@@CFLAGS@@
d139 1
a139 1
.SUFFIXES: .c .cc .def .a .o
d286 1
d288 1
@


1.29
log
@* Makefile.in: hinfo.o -> dtable.o.
@
text
@d50 1
a50 1
CC:=@@CC@@
d285 2
a286 74
assert.o: $(WINSUP_H)
dcrt0.o: $(WINSUP_H) include/exceptions.h include/glob.h dll_init.h autoload.h
debug.o: $(WINSUP_H) debug.h sync.h
delqueue.o: $(WINSUP_H)
dir.o: $(WINSUP_H)
dlfcn.o: $(WINSUP_H) dll_init.h
dll_entry.o: $(WINSUP_H) include/cygwin/cygwin_dll.h
dll_init.o: $(WINSUP_H) include/exceptions.h dll_init.h
dll_main.o:
environ.o: $(WINSUP_H)
errno.o: $(WINSUP_H)
exceptions.o: $(WINSUP_H) include/exceptions.h sync.h
exec.o: $(WINSUP_H)
external.o: $(WINSUP_H)
fcntl.o: $(WINSUP_H)
fhandler.o: $(WINSUP_H)
fhandler_console.o: $(WINSUP_H)
fhandler_serial.o: $(WINSUP_H)
fhandler_termios.o: $(WINSUP_H)
fhandler_tty.o: $(WINSUP_H)
fhandler_windows.o: $(WINSUP_H)
fhandler_raw.o: $(WINSUP_H)
fhandler_floppy.o: $(WINSUP_H)
fhandler_tape.o: $(WINSUP_H)
fhandler_zero.o: $(WINSUP_H)
fhandler_random.o: $(WINSUP_H)
fork.o: $(WINSUP_H) dll_init.h
glob.o: include/glob.h
gmon.o: profil.h gmon.h
grp.o: $(WINSUP_H)
heap.o: $(WINSUP_H)
dtable.o: $(WINSUP_H)
init.o: $(WINSUP_H)
ioctl.o: $(WINSUP_H)
libccrt0.o: $(WINSUP_H)
libcmain.o: $(WINSUP_H)
localtime.o: tz_posixrules.h
malloc.o: $(WINSUP_H) sync.h
mcount.o: gmon.h
mmap.o: $(WINSUP_H)
net.o: $(WINSUP_H) autoload.h
ntea.o:
passwd.o: $(WINSUP_H)
path.o: $(WINSUP_H)
pinfo.o: $(WINSUP_H)
pipe.o: $(WINSUP_H)
poll.o: $(WINSUP_H)
profile.o: profil.h
pthread.o: $(WINSUP_H)
registry.o: $(WINSUP_H)
resource.o: $(WINSUP_H)
scandir.o:
security.o: $(WINSUP_H)
select.o: $(WINSUP_H) select.h
shared.o: $(WINSUP_H)
signal.o: $(WINSUP_H)
sigproc.o: $(WINSUP_H) sync.h
smallprint.o: $(WINSUP_H)
spawn.o: $(WINSUP_H)
strace.o: $(WINSUP_H)
strsep.o:
sync.o: $(WINSUP_H) sync.h
syscalls.o: $(WINSUP_H)
sysconf.o: $(WINSUP_H)
syslog.o: $(WINSUP_H)
termios.o: $(WINSUP_H)
test.o: $(WINSUP_H)
times.o: $(WINSUP_H)
tty.o: $(WINSUP_H)
uinfo.o: $(WINSUP_H) autoload.h
uname.o: $(WINSUP_H)
wait.o: $(WINSUP_H)
window.o: $(WINSUP_H)
thread.o: $(WINSUP_H)
@


1.28
log
@hinfo -> dtable
@
text
@d119 10
a128 11
DLL_OFILES:=assert.o cygheap.o dcrt0.o debug.o delqueue.o dir.o dlfcn.o \
	dll_init.o dtable.o environ.o  errno.o exceptions.o exec.o external.o \
	fcntl.o fhandler.o fhandler_console.o fhandler_floppy.o \
	fhandler_random.o fhandler_raw.o fhandler_serial.o fhandler_tape.o \
	fhandler_termios.o fhandler_tty.o fhandler_windows.o fhandler_zero.o \
	fork.o glob.o grp.o heap.o init.o ioctl.o localtime.o malloc.o mmap.o \
	net.o ntea.o passwd.o path.o pinfo.o pipe.o poll.o regexp.o regerror.o \
	regsub.o registry.o resource.o scandir.o security.o select.o shared.o \
	signal.o sigproc.o smallprint.o spawn.o strace.o strsep.o sync.o \
	syscalls.o sysconf.o syslog.o termios.o times.o tty.o uinfo.o uname.o \
	wait.o window.o \
@


1.27
log
@* Makefile.in: Use dtable.o rather than hinfo.o.
@
text
@d119 11
a129 10
DLL_OFILES:=assert.o dcrt0.o debug.o delqueue.o dir.o dlfcn.o dll_init.o \
	dtable.o environ.o  errno.o exceptions.o exec.o external.o fcntl.o \
	fhandler.o fhandler_console.o fhandler_floppy.o fhandler_random.o \
	fhandler_raw.o fhandler_serial.o fhandler_tape.o fhandler_termios.o \
	fhandler_tty.o fhandler_windows.o fhandler_zero.o fork.o glob.o grp.o \
	heap.o init.o ioctl.o localtime.o malloc.o mmap.o net.o ntea.o passwd.o \
	path.o pinfo.o pipe.o poll.o regexp.o regerror.o regsub.o registry.o \
	resource.o scandir.o security.o select.o shared.o signal.o sigproc.o \
	smallprint.o spawn.o strace.o strsep.o sync.o syscalls.o sysconf.o \
	syslog.o termios.o times.o tty.o uinfo.o uname.o wait.o window.o \
d317 1
a317 1
hinfo.o: $(WINSUP_H)
@


1.26
log
@* winsup.h: take out protections of environ, errno, allow C use
* *.cc: put winsup.h before other headers (for __INSIDE_CYGWIN__);
use cur_environ() instead of just environ
* times.cc: remove import protections
* glob.c: add winsup.h
* localtime.c: ditto
* smallprint.c: ditto
* Makefile.in: don't __INSIDE_CYGWIN__ as it messes up profiling.
@
text
@d120 5
a124 5
	environ.o  errno.o exceptions.o exec.o external.o fcntl.o fhandler.o \
	fhandler_console.o fhandler_floppy.o fhandler_random.o fhandler_raw.o \
	fhandler_serial.o fhandler_tape.o fhandler_termios.o fhandler_tty.o \
	fhandler_windows.o fhandler_zero.o fork.o glob.o grp.o heap.o hinfo.o \
	init.o ioctl.o localtime.o malloc.o mmap.o net.o ntea.o passwd.o \
@


1.25
log
@* Makefile.in (install): Install textmode.o as well as binmode.o.
@
text
@a73 2
COMPILE_CC+=-D__INSIDE_CYGWIN__

@


1.24
log
@        * poll.cc: New file. Implement `poll' system call.
        * include/poll.h: Ditto.
        * include/sys/poll.h: Ditto.
        * Makefile.in: Add poll.o as dependency.
        * cygwin.din: Add poll and _poll symbols.
@
text
@d156 1
a156 1
	for i in $(LIB_NAME) $(GMON_START) $(LIBGMON_A) binmode.o ; do \
@


1.23
log
@* Makefile.in: Use variables rather than configure constructs where
appropriate.
(LIBCOS): Find additional stub library stuff in their own subdirectory.
* dcrt0.cc: Convert user_data pointer to static __cygwin_user_data area.
(do_global_ctors): Check magic_bisquit for initialization.
(dll_crt0_1): First group of premain functions prior to fd initialization.  Run
second group before calling main.
(dll_crt0 ()): New function, called from new initialization code.
(dll_crt0 (per_process *uptr)): Call new dll_crt0 () function on
initialization.
* debug.cc (thread_stub): Initialize bottom of stack with per-thread info.
* environ.cc (parse_thing): Use binmode global to control CYGWIN=binmode
behavior.
* fhandler.cc (fhandler_base::open): Allow explicit setting of __fmode to
O_BINARY or O_TEXT to override disk mount settings.
* libcmain.cc: Move to lib subdirectory.
* libccrt0.cc: Ditto.
* dll_main.cc: Ditto.
* dll_entry.cc: Ditto.
* getopt.c: Ditto.
* thread.cc (thread_init_wrapper): Call ExitThread explicitly rather than
returning, as a preliminary step towards placing per thread info at the bottom
of the stack.
* winsup.h: Move per_process class to include/sys/cygwin.h.  Declare new
dll_crt0().
* include/cygwin/version.h: Bump API minor version.
* binmode.c: New file.
* textmode.c: Ditto.
* lib/_cygwin_crt0_common.cc: Ditto.
* lib/crt0.h: Ditto.
* lib/cygwin_attach_dll.c: Ditto.
* lib/cygwin_crt0.c: Ditto.
* lib/dll_entry.cc: Ditto.
* lib/dll_main.cc: Ditto.
* lib/getopt.c: Ditto.
* lib/libcmain.c: Ditto.
* lib/premain0.c: Ditto.
* lib/premain1.c: Ditto.
* lib/premain2.c: Ditto.
* lib/premain3.c: Ditto.
@
text
@d127 1
a127 1
	path.o pinfo.o pipe.o regexp.o regerror.o regsub.o registry.o \
d333 1
@


1.22
log
@* Makefile.in: Autogenerate cygwin.def when appropriate.
* include/sys/cygwin.h: Correct prototype.
@
text
@a11 1
CONFIG_DIR:=@@srcdir@@/config/@@CONFIG_DIR@@
a12 1
VPATH:=@@srcdir@@:$(CONFIG_DIR):@@srcdir@@/regexp
d16 3
d110 2
a111 1
LIBCOS:=libccrt0.o libcmain.o getopt.o dll_entry.o dll_main.o
d148 1
a148 1
all_target: $(LIBGMON_A) $(LIB_NAME)
d156 1
a156 1
	for i in $(LIB_NAME) $(GMON_START) $(LIBGMON_A) ; do \
@


1.21
log
@Remove some files that were added prematurely.
@
text
@d168 1
a168 1
	-rm -f *.o *.dll *.a *.exp junk *.base *.def version.cc regexp/*.o winver_stamp *.exe
d271 3
@


1.20
log
@* Makefile.in: Add new-libcygwin.a back to all_host target.
@
text
@d109 1
a109 2
LIBCOS:=libccrt0.o libcmain.o getopt.o dll_entry.o dll_main.o \
	premain0.o premain1.o premain2.o premain3.o
d146 1
a146 1
all_target: $(LIBGMON_A) $(LIB_NAME) binmode.o
@


1.19
log
@* Makefile.in: Add *.def to clean operation.
@
text
@d149 1
a149 1
all_host: cygrun.exe
@


1.18
log
@* Makefile.in: Add *.exe to clean operation.
@
text
@d109 2
a110 1
LIBCOS:=libccrt0.o libcmain.o getopt.o dll_entry.o dll_main.o
d147 1
a147 3
install: $(install_host) install_target

all_target: $(LIBGMON_A) $(LIB_NAME)
d169 1
a169 1
	-rm -f *.o *.dll *.a *.exp junk *.base version.cc regexp/*.o winver_stamp *.exe
@


1.17
log
@* Makefile.in: Don't touch winver_stamp if mkvers.sh was unsuccessful.
@
text
@d170 1
a170 1
	-rm -f *.o *.dll *.a *.exp junk *.base version.cc regexp/*.o winver_stamp
@


1.16
log
@* Makefile.in: Change to build the DLL during a cross-compiler build.
@
text
@d207 2
a208 2
	$(SHELL) ${word 1,$^} ${word 2,$^} ${word 3,$^} $(WINDRES); \
	touch $@@; \
@


1.15
log
@* configure.in: Detect "cross-hosting" situation and set appropriate variables
in Makefile to avoid building excess stuff.
* configure: Regenerate.
* Makefile.in: Accomodate above change.
@
text
@d144 1
a144 1
all: $(all_host) all_target
a147 2
# all: new-$(DLL_NAME) $(LIBGMON_A) $(LIB_NAME) new-$(LIB_NAME) cygrun.exe force

d150 1
a150 1
all_host: new-$(DLL_NAME) cygrun.exe
d155 1
a167 1
	$(INSTALL_DATA) new-$(DLL_NAME) $(bindir)/$(DLL_NAME)
@


1.14
log
@* Makefile.in: Just use library files from this tree when building cygrun.exe.
* path.cc (chdir): Don't set cache to offending chdir.  Change comment to
reflect current reality.
@
text
@d136 1
a136 1
.PHONY: all force dll_ofiles install
d141 12
a152 1
all: new-$(DLL_NAME) $(LIBGMON_A) $(LIB_NAME) new-$(LIB_NAME) cygrun.exe force
d156 1
a156 2
install: all
	$(INSTALL_DATA) new-$(DLL_NAME) $(bindir)/$(DLL_NAME) ; \
d167 3
@


1.13
log
@* exceptions.cc: Remove unneeded include.
* dcrt0.cc: Wrap LoadDLLfunc stuff in dummy function.
* init.cc: Ditto.
* uinfo.cc: Ditto.
@
text
@d200 3
a202 3
cygrun.exe : cygrun.o $(DLL_IMPORTS) $(w32api_lib)/libuser32.a \
	     $(w32api_lib)/libshell32.a
	$(CC) -o $@@ -L$(w32api_lib) ${word 1,$^}
@


1.12
log
@* Makefile.in: Remove libadvapi32.a.
* autoload.h: Add additional field to autoload block for handling unimplemented
functions.
(LoadDLLfuncEx): New function which accepts additional parameter for
controlling unimplemented function behavior.
(LoadDLLfunc): Use LoadDLLfuncEx.
* dcrt0.cc: Use new arguments for LoadDLLfunc.  Add advapi32 routines.
(noload): Rewrite in assembler.  Handle new unimplemented function type.
* exceptions.cc: Eliminate another vestige of StackWalk stuff.
* net.cc: Use new arguments for LoadDLLfunc.
* uinfo.cc: Ditto.

* config.h.in: Remove obsolete define.
* path.h (isdrive): New macro.
* dcrt0.cc (globify): Use new macro to determine if a string refers to an
MS-DOS drive.
* environ.cc (winenv): Ditto.
* spawn.cc (find_exec): Ditto.
* path.cc (get_raw_device_number): Ditto.
(mount_info::conv_to_posix_path): Ditto.
(chdir): Ditto.
(cygwin_posix_path_list_p): Ditto.
(cygwin_split_path): Ditto.
(path_conv::check): Move tmp_buf to beginning of function since it can be used
earlier in the loop.  Use tmp_buf rather than 'root' to hold root information.
(mount_info::conv_to_win32_path): Add trailing slash to end of mount path when
it translates to a drive.  Add defensive code to avoid writing beyond the end
of 'dst'.
@
text
@d284 1
a284 1
exceptions.o: $(WINSUP_H) include/exceptions.h sync.h autoload.h
d341 1
a341 1
uinfo.o: $(WINSUP_H)
@


1.11
log
@* Makefile.in: Remove external.h dependency.
* dcrt0.cc (sigthread::init): Move here from sigproc.h.
* sigproc.h (sigthread): Move init to dcrt0.cc.
@
text
@d117 1
a117 1
DLL_IMPORTS:=$(w32api_lib)/libkernel32.a $(w32api_lib)/libadvapi32.a
@


1.10
log
@* Makefile.in (DLL_OFILES): Sort.
* fhandler_tty.cc (fhandler_tty_slave::send_ioctl_request): Eliminate.
(fhandler_tty_slave::ioctl): Rewrite to avoid races.
@
text
@d286 1
a286 1
external.o: $(WINSUP_H) external.h
@


1.9
log
@* Makefile.in: Use appropriate VARIABLE to refer to cygwin.def in load line.
@
text
@d121 8
a128 9
	fhandler_console.o fhandler_serial.o fhandler_termios.o fhandler_tty.o \
	fhandler_windows.o fhandler_raw.o fhandler_floppy.o fhandler_tape.o \
        fhandler_zero.o fhandler_random.o \
	fork.o glob.o grp.o heap.o hinfo.o init.o ioctl.o localtime.o malloc.o \
	mmap.o net.o ntea.o passwd.o path.o pinfo.o pipe.o regexp.o regerror.o \
	regsub.o registry.o resource.o scandir.o security.o select.o shared.o \
	signal.o sigproc.o smallprint.o spawn.o strace.o strsep.o sync.o \
	syscalls.o sysconf.o syslog.o termios.o times.o tty.o uinfo.o uname.o \
	wait.o window.o \
d133 2
a134 1
LD_STUFF=--dll $(DLL_OFILES) version.o winver.o $(DLL_IMPORTS) $(LIBM) $(LIBC) $(LIBGCC) -e $(DLL_ENTRY) --image-base=0x61000000
@


1.8
log
@2000-05-04  Mumit Khan  <khan@@xraylith.wisc.edu>

	* Makefile.in (install): Install profile startup and library.
@
text
@d183 1
a183 1
	$(LD) -shared -o $@@ -e $(DLL_ENTRY) cygwin.def $(DLL_OFILES) version.o \
@


1.7
log
@        * Makefile.in: Add dependencies for fhandler_random.o
        * fhandler.h: Add device type FH_RANDOM. Add class
        fhandler_dev_random.
        * fhandler_random.cc: New file. Implementation of
        fhandler_dev_random.
        * hinfo.cc (build_fhandler): Add case for FH_RANDOM.
        * path.cc: Add device names for random devices to
        windows_device_names.
        (get_device_number): Add if branch for random devices.
        (win32_device_name): Add device name generation for
        random devices.
        winsup.h: Include <wincrypt.h>.
@
text
@d147 3
a149 1
	$(INSTALL_DATA) $(LIB_NAME) $(tooldir)/lib/$(LIB_NAME); \
@


1.6
log
@* Makefile.in (install): install regexp.h
@
text
@d122 2
a123 1
	fhandler_windows.o fhandler_raw.o fhandler_floppy.o fhandler_tape.o fhandler_zero.o \
d296 1
@


1.5
log
@* dcrt0.cc (insert_file): Avoid freeing previously allocated argument list.
* path.cc (symlink_info::check): Rename from symlink_check_one.  Use new
symlink_info struct for communication.
(path_conv::path_conv): Use symlink_info structure for communication with
symlink_info::check.  Fix typo which resulted in symbolic links always being
resolved.
(readlink): Use stat_suffixes array when resolving a link.
* syscalls.cc (stat_suffixes): Make global.
@
text
@d152 2
a153 1
	done
@


1.4
log
@* Makefile.in: Use default rules when compiling cygrun.o.
* dcrt0.cc (host_dependent_constants::init): Limit non-NT platforms to 32K
chunks when copying regions during a fork.
* path.cc (symlink_check_one): Add temporary debugging output.  Simplify
PATH_EXEC test.
* syscalls.cc (stat_suffixes): Null terminate this list.
@
text
@a340 1

@


1.3
log
@* exceptions.cc (interruptible): Make a little more structured.
(call_handler): Allow signals to be sent even if signalled thread is stopped.
Change order of signal_arrived arming/waiting threads clearing to eliminate a
race.
(reset_signal_arrived): New helper function.
* malloc.cc (malloc_init): Use mutos so that signal handler can keep track of
who owns the lock.
(__malloc_lock): Ditto.
(__malloc_unlock): Ditto.
* sync.h (new_muto): Actually use a muto for the "buffer".
* Makefile.in: Fix a dependency.
@
text
@d196 1
a196 1
cygrun.exe : $(srcdir)/cygrun.c $(DLL_IMPORTS) $(w32api_lib)/libuser32.a \
d198 1
a198 1
	$(CC) -o $@@ -L$(w32api_lib) $(srcdir)/cygrun.c
@


1.2
log
@* Makefile.in: fix "make check" support and cygrun.
@
text
@d305 1
a305 1
malloc.o: $(WINSUP_H)
@


1.1
log
@Initial revision
@
text
@d140 1
a140 1
all: new-$(DLL_NAME) $(LIBGMON_A) $(LIB_NAME) cygrun.exe force
d198 1
a198 1
	$(CC) -o $@@ $^
@


1.1.1.1
log
@import winsup-2000-02-17 snapshot
@
text
@@
