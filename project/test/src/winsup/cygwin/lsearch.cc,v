head	1.4;
access;
symbols
	cygwin-1_7_35-release:1.4
	cygwin-1_7_34-release:1.4
	cygwin-1_7_33-release:1.4
	cygwin-1_7_32-release:1.4
	cygwin-1_7_31-release:1.4
	cygwin-1_7_30-release:1.4
	cygwin-1_7_29-release:1.4
	cygwin-1_7_29-release-branchpoint:1.4.0.14
	cygwin-pre-user-db:1.4
	cygwin-1_7_28-release:1.4
	cygwin-1_7_27-release:1.4
	cygwin-1_7_26-release:1.4
	cygwin-1_7_25-release:1.4
	cygwin-1_7_24-release:1.4
	cygwin-1_7_23-release:1.4
	cygwin-1_7_22-release:1.4
	cygwin-1_7_21-release:1.4
	cygwin-1_7_20-release:1.4
	cygwin-1_7_19-release:1.4
	cygwin-64bit-postmerge:1.4
	cygwin-64bit-premerge-branch:1.4.0.12
	cygwin-64bit-premerge:1.4
	cygwin-1_7_18-release:1.4
	post-ptmalloc3:1.4
	pre-ptmalloc3:1.4
	cygwin-1_7_17-release:1.4
	cygwin-64bit-branch:1.4.0.10
	cygwin-1_7_16-release:1.4
	cygwin-1_7_15-release:1.4
	cygwin-1_7_14_2-release:1.4
	cygwin-1_7_14-release:1.4
	cygwin-1_7_12-release:1.4
	cygwin-1_7_11-release:1.4
	cygwin-1_7_10-release:1.4
	signal-rewrite:1.4.0.8
	pre-notty:1.4
	cygwin-1_7_9-release:1.4
	cv-post-1_7_9:1.4.0.6
	cygwin-1_7_8-release:1.4
	cygwin-1_7_7-release:1.4
	cygwin-1_7_5-release:1.4
	cygwin-1_7_4-release:1.4
	cygwin-1_7_3-release:1.4
	cygwin-1_7_2-release:1.4
	fifo_doover3:1.4.0.4
	cygwin-1_7_1-release:1.4
	prefifo:1.4
	cv-branch-2:1.4.0.2
	pre-ripout-set_console_state_for_spawn:1.4
	EOL_registry_mounts:1.3
	preoverlapped:1.3
	drop_9x_support_start:1.2
	cr-0x5f1:1.2.0.8
	cv-branch:1.2.0.6
	pre-ptymaster-archetype:1.2
	cr-0x3b58:1.2.0.4
	cr-0x5ef:1.2.0.2
	after-mmap-privanon-noreserve:1.2
	after-mmap-revamp:1.2
	before-mmap-revamp:1.2
	cgf-more-exit-sync:1.2
	post_wait_sig_exit:1.2
	pre_wait_sig_exit:1.2;
locks; strict;
comment	@// @;


1.4
date	2008.04.07.18.45.57;	author cgf;	state Exp;
branches;
next	1.3;

1.3
date	2007.06.12.15.24.46;	author corinna;	state Exp;
branches;
next	1.2;

1.2
date	2005.05.02.03.50.07;	author cgf;	state Exp;
branches;
next	1.1;

1.1
date	2005.03.27.01.57.38;	author cgf;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Remove unneeded header files from source files throughout.
@
text
@/* Initial implementation:
   Copyright (c) 2002 Robert Drehmel
   All rights reserved.

   As long as the above copyright statement and this notice remain
   unchanged, you can do what ever you want with this file.  */

#include <stdint.h>	/* for uint8_t */
#include <string.h>	/* for memcpy () prototype */

static void *lwork (const void *, const void *, size_t *, size_t,
		    int (*) (const void *, const void *), int);

extern "C" void *
lsearch (const void *key, void *base, size_t *nelp, size_t width,
	       int (*compar) (const void *, const void *))
{
  return lwork (key, base, nelp, width, compar, 1);
}

extern "C" void *
lfind (const void *key, const void *base, size_t *nelp, size_t width,
	     int (*compar) (const void *, const void *))
{
  return lwork (key, base, nelp, width, compar, 0);
}

static void *
lwork (const void *key, const void *base, size_t *nelp, size_t width,
       int (*compar) (const void *, const void *), int addelem)
{
  uint8_t *ep, *endp;

  /*  Cast to an integer value first to avoid the warning for removing
     'const' via a cast.  */
  ep = (uint8_t *) (uintptr_t)base;
  for (endp = (uint8_t *) (ep + width * *nelp); ep < endp; ep += width)
    if (compar (key, ep) == 0)
      return ep;

  /* lfind () shall return when the key was not found. */
  if (!addelem)
    return NULL;

  /* lsearch () adds the key to the end of the table and increments
     the number of elements.  */
  memcpy (endp, key, width);
  ++*nelp;

  return endp;
}
@


1.3
log
@	* Makefile.in (DLL_OFILES): Add xsique.o.
	* cygwin.din (confstr): Make NOSIGFE.
	(insque): Export.
	(remque): Export.
	* lsearch.cc: Remove superfluous _SEARCH_PRIVATE define.
	* posix.sgml: Move insque to defined SUSv3 interfaces.  Remove
	comment for remque.
	* include/search.h: Remove _SEARCH_PRIVATE guarded definitions.
	Add struct qelem definition.  Add insque and remque declarations.
	* include/cygwin/version.h: Bump API minor number.
	* include/sys/queue.h: Remove insque/remque definitions so as not
	to collide with SUSv3 compatible declaration in search.h.
	* libc/xsique.cc: New file implementing insque and remque.
@
text
@a7 3
#include <sys/types.h>
#include <sys/cdefs.h>
#include <search.h>
a8 1
#include <stdlib.h>	/* for NULL */
@


1.2
log
@white space and minor comment cleanup.
@
text
@a9 1
#define	_SEARCH_PRIVATE
@


1.1
log
@* wininfo.h (wininfo::timer_active): Delete.
(wininfo::itv): Ditto.
(wininfo::start_time): Ditto.
(wininfo::window_started): Ditto.
(wininfo::getitimer): Ditto.
(wininfo::setitimer): Ditto.
(wininfo::wininfo): Ditto.
(wininfo::lock): New method.
(wininfo::release): Ditto.
* window.cc: Use new lock/acquire wininfo methods throughout.
(wininfo::wininfo): Delete
(wininfo::getitimer): Ditto.
(wininfo::setitimer): Ditto.
(getitimer): Ditto.
(setitimer): Ditto.
(ualarm): Ditto.
(alarm): Ditto.
(wininfo::lock): Define new function.
(wininfo::release): Ditto.
(wininfo::process): Delete WM_TIMER handling.
* timer.cc (struct timetracker): Delete it, flags.  Add it_interval,
interval_us, sleepto_us, running, init_muto(), syncthread, and gettime().
(ttstart): Make NO_COPY.
(lock_timer_tracker): New class.
(timer_tracker::timer_tracker): Distinguish ttstart case.
(timer_tracker::~timer_tracker): New destructor.  Clean out events, and reset
magic.
(timer_tracker::init_muto): New method.
(to_us): Round up as per POSIX.
(timer_thread): Reorganize to match timer_tracker::settime and
timer_tracker::gettime.  Call sig_send without wait.  Call auto_release.
(timer_tracker::settime): Reorganize logic to avoid race.  Call gettime to
recover old value.
(timer_tracker::gettime): New method.
(timer_create): Properly set errno on invalid timerid.  Use new
lock_timer_tracker method.
(timer_delete): Ditto.  Simplify code slightly.
(timer_gettime): New function.
(fixup_timers_after_fork): Reinit ttstart.
(getitimer): New implementation.
(setitimer): Ditto.
(ualarm): Ditto.
(alarm): Ditto.
* cygwin.din: Export timer_gettime.
* winsup.h: Remove has has_visible_window_station declaration.
* Makefile.in (DLL_OFILES): Add lsearch.o.
* cygthread.h (cygthread::notify_detached): New element.
(cygthread::cygthread): Take optional fourth argument signifying event to
signal on thread completion.
* cygthread.cc (cygthread::stub): Signal notify_detached event, if it exists.
(cygthread::cygthread): Initialize notify_detached from fourth argument.
(cygthread::detach): Wait for notify_detached field is present.
* lsearch.cc: New file.
* search.h: Ditto.
* include/cygwin/version.h: Bump API minor number to 126.
* cygwin.din: Export lsearch, lfind.
@
text
@d4 1
a4 1
  
@

