head	1.1;
access;
symbols
	cygwin-1_7_35-release:1.1
	cygwin-1_7_34-release:1.1
	cygwin-1_7_33-release:1.1
	cygwin-1_7_32-release:1.1
	cygwin-1_7_31-release:1.1
	cygwin-1_7_30-release:1.1
	cygwin-1_7_29-release:1.1
	cygwin-1_7_29-release-branchpoint:1.1.0.10
	cygwin-pre-user-db:1.1
	cygwin-1_7_28-release:1.1
	cygwin-1_7_27-release:1.1
	cygwin-1_7_26-release:1.1
	cygwin-1_7_25-release:1.1
	cygwin-1_7_24-release:1.1
	cygwin-1_7_23-release:1.1
	cygwin-1_7_22-release:1.1
	cygwin-1_7_21-release:1.1
	cygwin-1_7_20-release:1.1
	cygwin-1_7_19-release:1.1
	cygwin-64bit-postmerge:1.1
	cygwin-64bit-premerge-branch:1.1.0.8
	cygwin-64bit-premerge:1.1
	cygwin-1_7_18-release:1.1
	post-ptmalloc3:1.1
	pre-ptmalloc3:1.1
	cygwin-1_7_17-release:1.1
	cygwin-64bit-branch:1.1.0.6
	cygwin-1_7_16-release:1.1
	cygwin-1_7_15-release:1.1
	cygwin-1_7_14_2-release:1.1
	cygwin-1_7_14-release:1.1
	cygwin-1_7_12-release:1.1
	cygwin-1_7_11-release:1.1
	cygwin-1_7_10-release:1.1
	signal-rewrite:1.1.0.4
	pre-notty:1.1
	cygwin-1_7_9-release:1.1
	cv-post-1_7_9:1.1.0.2
	cygwin-1_7_8-release:1.1
	cygwin-1_7_7-release:1.1;
locks; strict;
comment	@ * @;


1.1
date	2010.06.21.19.55.12;	author cgf;	state Exp;
branches;
next	;


desc
@@


1.1
log
@* tmpbuf.h: New file.
* flock.cc: Include tmpbuf.h for new tmpbuf functionality.
(allow_others_to_sync): Use tmpbuf rather than tmp_pathbuf.  Explain why.
(lf_setlock): For consistency, use tmpbuf rather than tmp_pathbuf.
(lf_getlock): Ditto.
@
text
@/* tmpbuf.h

   Copyright 2010 Red Hat, Inc.

This software is a copyrighted work licensed under the terms of the
Cygwin license.  Please consult the file "CYGWIN_LICENSE" for
details. */

#ifndef _TMPBUF_H
#define _TMPBUF_H
class tmpbuf
{
  void *buf;
public:
  tmpbuf (size_t size = NT_MAX_PATH)
  {
    buf = calloc (1, size);
    if (!buf)
      api_fatal ("allocation of temporary buffer failed");
  }
  operator void * () {return buf;}
  operator char * () {return (char *) buf;}
  operator PSECURITY_DESCRIPTOR () {return (PSECURITY_DESCRIPTOR) buf;}
  PSECURITY_DESCRIPTOR operator -> () {return  (PSECURITY_DESCRIPTOR) buf;}
  ~tmpbuf () {free (buf);}
};
#endif /*_TMPBUF_H*/
@
