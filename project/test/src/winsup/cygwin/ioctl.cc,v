head	1.29;
access;
symbols
	cygwin-1_7_35-release:1.29
	cygwin-1_7_34-release:1.29
	cygwin-1_7_33-release:1.29
	cygwin-1_7_32-release:1.29
	cygwin-1_7_31-release:1.29
	cygwin-1_7_30-release:1.29
	cygwin-1_7_29-release:1.29
	cygwin-1_7_29-release-branchpoint:1.29.0.2
	cygwin-pre-user-db:1.29
	cygwin-1_7_28-release:1.29
	cygwin-1_7_27-release:1.29
	cygwin-1_7_26-release:1.29
	cygwin-1_7_25-release:1.29
	cygwin-1_7_24-release:1.29
	cygwin-1_7_23-release:1.29
	cygwin-1_7_22-release:1.29
	cygwin-1_7_21-release:1.29
	cygwin-1_7_20-release:1.29
	cygwin-1_7_19-release:1.29
	cygwin-64bit-postmerge:1.29
	cygwin-64bit-premerge-branch:1.28.0.4
	cygwin-64bit-premerge:1.28
	cygwin-1_7_18-release:1.28
	post-ptmalloc3:1.28.2.1
	pre-ptmalloc3:1.28.2.1
	cygwin-1_7_17-release:1.28
	cygwin-64bit-branch:1.28.0.2
	cygwin-1_7_16-release:1.28
	cygwin-1_7_15-release:1.28
	cygwin-1_7_14_2-release:1.28
	cygwin-1_7_14-release:1.28
	cygwin-1_7_12-release:1.28
	cygwin-1_7_11-release:1.28
	cygwin-1_7_10-release:1.28
	signal-rewrite:1.25.0.8
	pre-notty:1.25
	cygwin-1_7_9-release:1.25
	cv-post-1_7_9:1.25.0.6
	cygwin-1_7_8-release:1.25
	cygwin-1_7_7-release:1.25
	cygwin-1_7_5-release:1.25
	cygwin-1_7_4-release:1.25
	cygwin-1_7_3-release:1.25
	cygwin-1_7_2-release:1.25
	fifo_doover3:1.25.0.4
	cygwin-1_7_1-release:1.25
	prefifo:1.25
	cv-branch-2:1.25.0.2
	pre-ripout-set_console_state_for_spawn:1.24
	EOL_registry_mounts:1.23
	preoverlapped:1.23
	drop_9x_support_start:1.23
	cr-0x5f1:1.23.0.4
	cv-branch:1.23.0.2
	pre-ptymaster-archetype:1.22
	cr-0x3b58:1.22.0.14
	cr-0x5ef:1.22.0.12
	after-mmap-privanon-noreserve:1.22
	after-mmap-revamp:1.22
	before-mmap-revamp:1.22
	cgf-more-exit-sync:1.22
	post_wait_sig_exit:1.22
	pre_wait_sig_exit:1.22
	reparent-point:1.22
	noreparent:1.22.0.10
	cr-0x5e6:1.22.0.8
	cr-0x9e:1.22.0.6
	cr-0x9d:1.22.0.4
	cgf-deleteme:1.22.0.2
	pre-sigrewrite:1.21
	corinna-01:1.21
	cr-0x9c:1.20.0.6
	cr-0x9b:1.20.0.4
	cr-0x99:1.20
	Z-emcb-cygwin_daemon:1.20.0.2
	w32api-2_2:1.19
	mingw-runtime-2_4:1.19
	pre-cgf-merge:1.20
	cgf-dev-branch:1.19.0.8
	predaemon:1.15
	cygwin_daemon_merge_HEAD:1.15
	pregp02r1:1.15.0.8
	cygnus_cvs_20020108_pre:1.14
	Z-cygwin_daemon_merge-new_HEAD:1.16
	Z-cygwin_daemon_merge_HEAD:1.16
	cygwin_daemon:1.11.0.4;
locks; strict;
comment	@// @;
expand	@o@;


1.29
date	2013.04.23.09.44.32;	author corinna;	state Exp;
branches;
next	1.28;

1.28
date	2011.12.13.04.11.48;	author cgf;	state Exp;
branches
	1.28.2.1;
next	1.27;

1.27
date	2011.11.14.01.37.02;	author cgf;	state Exp;
branches;
next	1.26;

1.26
date	2011.10.20.14.02.54;	author cgf;	state Exp;
branches;
next	1.25;

1.25
date	2009.01.03.05.12.20;	author cgf;	state Exp;
branches;
next	1.24;

1.24
date	2008.04.07.18.45.57;	author cgf;	state Exp;
branches;
next	1.23;

1.23
date	2006.06.04.20.32.58;	author cgf;	state Exp;
branches;
next	1.22;

1.22
date	2003.11.28.20.55.58;	author cgf;	state Exp;
branches;
next	1.21;

1.21
date	2003.09.25.00.37.17;	author cgf;	state Exp;
branches;
next	1.20;

1.20
date	2003.06.16.03.24.11;	author cgf;	state Exp;
branches;
next	1.19;

1.19
date	2002.11.14.02.15.23;	author cgf;	state Exp;
branches
	1.19.8.1;
next	1.18;

1.18
date	2002.11.04.04.09.14;	author cgf;	state Exp;
branches;
next	1.17;

1.17
date	2002.09.30.04.35.18;	author cgf;	state Exp;
branches;
next	1.16;

1.16
date	2002.08.27.09.24.50;	author corinna;	state Exp;
branches;
next	1.15;

1.15
date	2002.01.13.20.03.03;	author cgf;	state Exp;
branches;
next	1.14;

1.14
date	2002.01.06.09.28.13;	author corinna;	state Exp;
branches;
next	1.13;

1.13
date	2001.10.15.23.39.32;	author cgf;	state Exp;
branches;
next	1.12;

1.12
date	2001.10.01.04.10.06;	author cgf;	state Exp;
branches;
next	1.11;

1.11
date	2001.09.11.20.01.00;	author cgf;	state Exp;
branches
	1.11.4.1;
next	1.10;

1.10
date	2001.07.26.19.22.24;	author cgf;	state Exp;
branches;
next	1.9;

1.9
date	2001.06.24.22.26.51;	author cgf;	state Exp;
branches;
next	1.8;

1.8
date	2001.04.18.21.10.12;	author cgf;	state Exp;
branches;
next	1.7;

1.7
date	2000.09.07.16.23.50;	author cgf;	state Exp;
branches;
next	1.6;

1.6
date	2000.08.22.05.10.20;	author cgf;	state Exp;
branches;
next	1.5;

1.5
date	2000.08.22.03.58.47;	author cgf;	state Exp;
branches;
next	1.4;

1.4
date	2000.08.12.05.35.42;	author cgf;	state Exp;
branches;
next	1.3;

1.3
date	2000.08.12.04.48.44;	author cgf;	state Exp;
branches;
next	1.2;

1.2
date	2000.08.02.16.28.17;	author dj;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.17.19.38.31;	author cgf;	state Exp;
branches
	1.1.1.1;
next	;

1.28.2.1
date	2012.12.10.11.45.49;	author corinna;	state Exp;
branches;
next	;

1.19.8.1
date	2003.02.14.03.03.28;	author cgf;	state Exp;
branches;
next	1.19.8.2;

1.19.8.2
date	2003.07.06.05.10.43;	author cgf;	state Exp;
branches;
next	;

1.11.4.1
date	2001.10.02.12.09.54;	author rbcollins;	state Exp;
branches;
next	1.11.4.2;

1.11.4.2
date	2002.01.04.03.56.08;	author rbcollins;	state Exp;
branches;
next	1.11.4.3;

1.11.4.3
date	2002.01.15.12.52.50;	author rbcollins;	state Exp;
branches;
next	1.11.4.4;

1.11.4.4
date	2002.08.27.12.28.37;	author scottc;	state Exp;
branches;
next	;

1.1.1.1
date	2000.02.17.19.38.31;	author cgf;	state Exp;
branches;
next	;


desc
@@


1.29
log
@	* Merge in cygwin-64bit-branch.
@
text
@/* ioctl.cc: ioctl routines.

   Copyright 1996, 1998, 1999, 2000, 2001, 2002, 2003, 2006, 2008, 2009, 2011,
   2012 Red Hat, Inc.

   Written by Doug Evans of Cygnus Support
   dje@@cygnus.com

This file is part of Cygwin.

This software is a copyrighted work licensed under the terms of the
Cygwin license.  Please consult the file "CYGWIN_LICENSE" for
details. */

#include "winsup.h"
#include "cygerrno.h"
#include "path.h"
#include "fhandler.h"
#include "dtable.h"
#include "cygheap.h"

extern "C" int
ioctl (int fd, int cmd, ...)
{

  cygheap_fdget cfd (fd);
  if (cfd < 0)
    return -1;

  /* check for optional mode argument */
  va_list ap;
  va_start (ap, cmd);
  char *argp = va_arg (ap, char *);
  va_end (ap);

  debug_printf ("ioctl(fd %d, cmd %y)", fd, cmd);
  int res;
  /* FIXME: This stinks.  There are collisions between cmd types
     depending on whether fd is associated with a pty master or not.
     Something to fix for Cygwin2.  CGF 2006-06-04 */
  if (cfd->is_tty () && cfd->get_major () != DEV_PTYM_MAJOR)
    switch (cmd)
      {
	case TCGETA:
	  res = tcgetattr (fd, (struct termios *) argp);
	  goto out;
	case TCSETA:
	  res = tcsetattr (fd, TCSANOW, (struct termios *) argp);
	  goto out;
	case TCSETAW:
	  res = tcsetattr (fd, TCSADRAIN, (struct termios *) argp);
	  goto out;
	case TCSETAF:
	  res = tcsetattr (fd, TCSAFLUSH, (struct termios *) argp);
	  goto out;
      }

  res = cfd->ioctl (cmd, argp);

out:
  syscall_printf ("%R = ioctl(%d, %y, ...)", res, fd, cmd);
  return res;
}
@


1.28
log
@* cygthread.h (cygthread::name): Very minor formatting tweak.
* exceptions.cc (_cygtls::call_signal_handler): Add paranoid debugging output.
* sigproc.h (cygwait): Call signal handler when signal is detected and loop as
appropriate.
* fhandler.h (fhandler_base_overlapped::wait_return): Remove overlapped_signal.
* fhandler.cc (fhandler_base_overlapped::wait_overlapped): Remove restartable
signal accommodations in light of cygwait improvements.
(fhandler_base_overlapped::raw_read): Remove now-obsolete signal loop behavior.
(fhandler_base_overlapped::raw_write): Ditto.
* fhandler_console.cc (fhandler_console::read): Ditto.
* fhandler_serial.cc (fhandler_serial::raw_read): Ditto.
(fhandler_serial::raw_write): Ditto.
* fhandler_tty.cc (fhandler_pty_slave::read): Ditto.
* ioctl.cc (ioctl): Add standard syscall introducer and leaver debug output.
@
text
@d3 2
a4 2
   Copyright 1996, 1998, 1999, 2000, 2001, 2002, 2003, 2006, 2008, 2009, 2011
   Red Hat, Inc.
d36 1
a36 1
  debug_printf ("ioctl(fd %d, cmd %p)", fd, cmd);
d61 1
a61 1
  syscall_printf ("%R = ioctl(%d, %p, ...)", res, fd, cmd);
@


1.28.2.1
log
@	* Throughout, fix format string of debug printf and api_fatal calls
	to work in 32 and 64 bit environment, as well as to honor signedness.
	Use %y instead of 0x%x.
	* fhandler.h (class fhandler_dev_mem): Change type of mem_size from
	DWORD to SIZE_T.
	* fhandler_mem.cc: Throughout, cast mem_size in comparisons to make
	GCC happy.
	* fhandler_process.cc (format_process_maps): Change type of ret_len
	to SIZE_T.
	(get_mem_values): Ditto for n and length.
	* mmap.cc (MapView): Ditto for commitsize and viewsize.
	(class mmap_record): Ditto for len.  Use SIZE_T througout for memory
	size in method args and return types.
	* ntdll.h (NtLockVirtualMemory): Fix type of memory size parameters
	to SIZE_T.
	(NtMapViewOfSection): Ditto.
	(NtQueryVirtualMemory): Ditto.
	(NtUnlockVirtualMemory): Ditto.
	(RtlFreeHeap): Change type of first parameter to HANDLE.
	* shm.cc (shmat): Change type of viewsize to SIZE_T.
	* timer.cc (timer_thread): Change type of sleep_ms to LONG.
	(ualarm): Drop casts to unsigned int in timer value computation.
@
text
@d3 2
a4 2
   Copyright 1996, 1998, 1999, 2000, 2001, 2002, 2003, 2006, 2008, 2009, 2011,
   2012 Red Hat, Inc.
d36 1
a36 1
  debug_printf ("ioctl(fd %d, cmd %y)", fd, cmd);
d61 1
a61 1
  syscall_printf ("%R = ioctl(%d, %y, ...)", res, fd, cmd);
@


1.27
log
@update copyrights
@
text
@d36 1
a36 1
  debug_printf ("fd %d, cmd %x", fd, cmd);
d61 1
a61 1
  debug_printf ("returning %d", res);
@


1.26
log
@Throughout change TTY_* to PTY_*, tty_* to pty_*, and ttym_* to ptmx_*.
* devices.cc: Regenerate.
* dtable.cc: (fh_alloc): Preserve /dev/tty name when that's what we opened.
(build_fh_pc): Preserve any existing name.
* fhandler.cc (fhandler_base::open_with_arch): Ditto.
* fhandler_tty.cc (fhandler_pty_master::fhandler_pty_master): Force the name to
/dev/ptmx while preserving other pty master device information.
* path.h (cfree_maybe): New macro.
(path_conv::operator =): Free any allocated strings in target.
(path_conv::free_strings): Delete unused function.
* sigproc.cc (proc_terminate): Remove previous accommodation for execed
processes since it didn't have the desired effect.  Change comment to a FIXME.
* spawn.cc (chExeced): Mark NO_COPY.
(exe_suffixes): Ditto.
@
text
@d3 1
a3 1
   Copyright 1996, 1998, 1999, 2000, 2001, 2002, 2003, 2006, 2008, 2009
@


1.25
log
@Remove unneeded header files from source files throughout.  Update copyrights
where appropriate.
* globals.cc: New file for generic global variables.
* mkglobals_h: New file to generate globals.h.
* mkstatic: New Script used to build a (currently non-working) static
libcygwin_s.a.
* Makefile.in: Add unused rule to build a non-working libcygwin_s.a.
(DLL_OFILES): Add globals.o.  Make all objects rely on globals.h.
(globals.h): New target.  Generate globals.h.
* cygtls.h: Honor new CYGTLS_HANDLE define to control when the HANDLE operator
is allowed in _cygtls.
* dcrt0.cc: Move most globals to globals.cc.
* init.cc: Ditto.
* environ.cc (strip_title_path): Remove now-unneeded extern.
* fhandler_serial.cc (fhandler_serial::open): Ditto.
* pinfo.cc: Ditto.
(commune_process): Ditto.
* shared.cc: Ditto.
* glob.cc: Ditto.
* strace.cc: Ditto.
* exceptions.cc: Define CYGTLS_HANDLE before including winsup.h.
* path.cc (stat_suffixes): Move here.
* security.h: Add forward class path_conv declaration.
* smallprint.cc (__small_vsprintf): Make a true c++ function.
(__small_sprintf): Ditto.
(small_printf): Ditto.
(console_printf): Ditto.
(__small_vswprintf): Ditto.
(__small_swprintf): Ditto.
* spawn.cc (spawn_guts): Remove _stdcall decoration in favor of regparm.
(hExeced): Move to globals.cc
* strfuncs.cc (current_codepage): Ditto.
(active_codepage): Ditto.
* sync.cc (lock_process::locker): Move here from dcrt0.cc.
* syscalls.cc (stat_suffixes): Move to path.cc.
* tty.cc (tty::create_master): Uncapitalize fatal warning for consistency.
* winsup.h: Include globals.h to declare most of the grab bag list of globals
which were previously defined here.
* mount.h: Move USER_* defines back to shared_info.h.
* speclib: Force temporary directory cleanup.
@
text
@d41 1
a41 1
  if (cfd->is_tty () && cfd->get_major () != DEV_TTYM_MAJOR)
@


1.24
log
@Remove unneeded header files from source files throughout.
@
text
@d3 2
a4 1
   Copyright 1996, 1998, 1999, 2000, 2001, 2002, 2003, 2006 Red Hat, Inc.
a16 1
#include "security.h"
@


1.23
log
@* ioctl.cc (ioctl): Accommodate change in reported pty master device number.
* select.cc (peek_pipe): Ditto.
@
text
@a14 1
#include <sys/ioctl.h>
a20 2
#include "sigproc.h"
#include <sys/termios.h>
@


1.22
log
@Eliminate use of sigframe and sigthread throughout.
* Makefile.in (DLL_OFILES): Add sigfe.o.  Remove reliance on cygwin.def from
cygwin0.dll dependency since dependence on sigfe.o implies that.  Generate def
file on the fly using 'gendef'.
* configure.in: Don't auto-generate cygwin.def.
* configure: Regenerate.
* cygwin.din: Add SIGFE stuff where appropriate.
* dcrt0.cc (dll_crt0_1): Initialize cygwin tls early in process startup.  Set
_main_tls to address of the main thread's cygwin tls.
* debug.h: Remove now unneeded WFSO and WFMO declarations.
* exceptions.cc (_last_thread): Define.
(set_thread_state_for_signals): New function.
(reset_thread_exception_for_signals): Ditto.
(init_thread_for_signals): Ditto.
(delete_thread_for_signals): Ditto.
(capture_thread_for_signals): Ditto.
(handle_exceptions): Set return address explicitly for exceptions prior to
calling sig_send.
(interrupt_on_return): Eliminate.
(setup_handler): Add preliminary implementation for dealing with
thread-specific signals by querying _main_tls.
(signal_exit): Use cygthread::main_thread_id instead of mainthread.id.
(call_signal_handler_now): For now, just handle the main thread.
* fork.cc (vfork): Save and restore main _my_tls.
* gendef: New file.  Generates def file and sigfe.s file.
* gentls_offsets: New file.  Generates offsets for perl to use in sigfe.s.
* how-signals-work.txt: Mention that info is obsolete.
* init.cc (dll_entry): Initialize cygwin tls storage here.
* miscfuncs.cc (low_priority_sleep): Make a C function for easier calling from
asm.
* perthread.h (vfork_save::tls): New element.
* signal.cc (nanosleep): Replace previous use of
sigframe.call_signal_handler_now with straight call to call_signal_handler_now.
(abort): Ditto.
* syscalls.cc (readv): Ditto.
* termios.cc (tcsetattr): Ditto.
* wait.cc (wait4): Ditto.
* sigproc.cc (sig_dispatch_pending): Ditto.
(sig_send): Ditto.
* sigproc.h: Declare call_signal_handler_now.
* thread.cc (pthread::thread_init_wrapper): Initialize cygwin tls.  Remove
obsolete and unworking signal stuff.
* thread.h (verifyable_object::sigs): Eliminate.
(verifyable_object::sigmask): Eliminate.
(verifyable_object::sigtodo): Eliminate.
(verifyable_object::exit): Make attribute noreturn.
(verifyable_object::thread_init_wrapper): Ditto.
(pthread_null::exit): Ditto.
* winbase.h (__stackbase): Always define.
* winsup.h (low_priority_sleep): Declare as a "C" function.
* include/cygwin/version.h: Bump API version to reflect sigwait export.
* include/sys/queue.h: Protect SLIST_ENTRY from previous declaration.
* signal.cc (sigwait): Implement.
* select.cc (fhandler_base::ready_for_read): Add debugging output.
* devices.h: Define more device pointers via their storage.
* devices.in: Don't parse things like /dev/inet/tcp, as they really have no
meaning.
* devices.cc: Regenerate.
* gendevices: Set proper protection for output file.
* cygtls.h: New file.
* gendef: New file.
* gentls_offsets: New file.
* tlsoffsets.h: New file.  Autogenerated.
* config/i386/longjmp.c: Remove.  File subsumed by gendef output.
* config/i386/makefrag: Remove obsolete file.
* fhandler.cc: Remove spurious access_worker declaration.
* spawn.cc (spawnve): Make debugging output more accurate.
* cygwin-gperf: Remove.
* devices.cc: Remove.
@
text
@d3 1
a3 1
   Copyright 1996, 1998, 1999, 2000, 2001, 2002, 2003 Red Hat, Inc.
d41 4
a44 1
  if (cfd->is_tty () && cfd->get_device () != FH_PTYM)
@


1.21
log
@* devices.cc: New file.
* devices.gperf: New file.
* devices.shilka: New file.
* cygwin-gperf: New file.
* cygwin-shilka: New file.
* fhandler_fifo.cc: New file.
* fhandler_nodevice.cc : New file.  Reorganize headers so that path.h precedes
fhandler.h throughout.  Remove device argument and unit arguments from fhandler
constructors throughout.  Remove pc arguments to fhandler functions and use
internal pc element instead, throughout.  Use dev element in pc throughout.
Use major/minor elements rather than units and device numbers previously in
fhandler class.  Use correct methods for fhandler file names rather than
directly accessing file name variables, throughout.
* Makefile.in (DLL_OFILES): Add devices.o, fhandler_fifo.o
* dcrt0.cc (dll_crt0_1): Call device::init.
* devices.h: Renumber devices based on more Linux-like major/minor numbers.
Add more devices.  Declare standard device storage.
(device): Declare struct.
* dir.cc (opendir): Use new 'build_fh_name' to construct a fhandler_* type.
* dtable.cc (dtable::get_debugger_info): Ditto.
(cygwin_attach_handle_to_fd): Ditto.
(dtable::release): Remove special FH_SOCKET case in favor of generic
"need_fixup_before" test.
(dtable::init_std_file_from_handle): Use either build_fh_dev or build_fh_name
to build standard fhandler.
(dtable::build_fh_name): Renamed from dtable::build_fhandler_from_name.  Move
out of dtable class.  Don't accept a path_conv argument.  Just build it here
and pass it to:
(build_fh_pc): Renamed from dtable::build_fhandler.  Move out of dtable class.
Use intrinsic device type in path_conv to create new fhandler.
(build_fh_dev): Renamed from dtable::build_fhandler.  Move out of dtable class.
Simplify arguments to just take new 'device' type and a name.  Just return
pointer to fhandler rather than trying to insert into dtable.
(dtable::dup_worker): Accommodate above build_fh name changes.
(dtable::find_fifo): New (currently broken) function.
(handle_to_fn): Use strechr for efficiency.
* dtable.h: Reflect above build_fh name changes and argument differences.
(fhandler_base *&operator []): Return self rather than copy of self.
* fhandler.cc (fhandler_base::operator =): Use pc element to set normalized
path.
(fhandler_base::set_name): Ditto.
(fhandler_base::raw_read): Use method to access name.
(fhandler_base::write): Correctly use get_output_handle rather than get_handle.
(handler_base::device_access_denied): New function.
(fhandler_base::open): Eliminate pc argument and use pc element of
fhandler_base throughout.
(fhandler_base::fstat): Detect if device is based in filesystem and use
fstat_fs to calculate stat, if so.
(fhandler_base::fhandler_base): Eliminate handling of file names and, instead,
just free appropriate component from pc.
(fhandler_base::opendir): Remove path_conv parameter.
* fhandler.h: Remove all device flags.
(fhandler_base::pc): New element.
(fhandler_base::set_name): Change argument to path_conv.
(fhandler_base::error): New function.
(fhandler_base::exists): New function.
(fhandler_base::pc_binmode): New function.
(fhandler_base::dev): New function.
(fhandler_base::open_fs): New function.
(fhandler_base::fstat_fs): New function.
(fhandler_base::fstat_by_name): New function.
(fhandler_base::fstat_by_handle): New function.
(fhandler_base::isfifo): New function.
(fhandler_base::is_slow): New function.
(fhandler_base::is_auto_device): New function.
(fhandler_base::is_fs_special): New function.
(fhandler_base::device_access_denied): New function.
(fhandler_base::operator DWORD&): New operator.
(fhandler_base::get_name): Return normalized path from pc.
(fhandler_base::get_win32_name): Return windows path from pc.
(fhandler_base::isdevice): Renamed from is_device.
(fhandler_base::get_native_name): Return device format.
(fhandler_fifo): New class.
(fhandler_nodevice): New class.
(select_stuff::device_specific): Remove array.
(select_stuff::device_specific_pipe): New class element.
(select_stuff::device_specific_socket): New class element.
(select_stuff::device_specific_serial): New class element.
(select_stuff::select_stuff): Initialize new elements.
* fhandler_disk_file.cc (fhandler_base::fstat_by_handle): Move to base class
from fhandler_disk_file.
(fhandler_base::fstat_by_name): Ditto.
(fhandler_base::fstat_by_name): Ditto.
(fhandler_disk_file::open): Move most functionality into
fhandler_base::open_fs.
(fhandler_base::open_fs): New function.
(fhandler_disk_file::close): Move most functionality into
fhandler_base::close_fs.
(fhandler_base::close_fs): New function.
* fhandler_mem.cc (fhandler_dev_mem::open): Use device name in debugging
output.
* fhandler_socket.cc (fhandler_socket::set_connect_secret): Copy standard
urandom device into appropriate place.
(fhandler_socket::accept): Reflect change in fdsock return value.
* fhandler_tty.cc: See "throughouts" above.
* net.cc: Accommodate fdsock change throughout.
(fdsock): Return success or failure, accept fd argument and device argument.
* path.cc (symlink_info::major): New element.
(symlink_info::minor): New element.
(symlink_info::parse_device): Declare new function.
(fs_info::update): Accommodate changes in path_conv class.
(path_conv::fillin): Ditto.
(path_conv::return_and_clear_normalized_path): Eliminate.
(path_conv::set_normalized_path): New function.
(path_conv::path_conv): Set info in dev element.  Use path_conv methods Check
for FH_FS rather than FH_BAD to indicate when to fill in filesystem stuff.
where appropriate rather than direct access.  Use set_normalized_path to set
normalized path.
(windows_device_names): Eliminate.
(get_dev): Ditto.
(get_raw_device_number): Ditto.
(get_device_number): Ditto.
(win32_device_name): Call new device name parser to do most of the heavy
lifting.
(mount_info::conv_to_win32_path): Fill in dev field as appropriate.
(symlink_worker): Handle new device files.
(symlink_info::check): Ditto.
(symlink_info::parse_device): Define new function.
* path.h (executable_states): Move here from fhandler.h.
(fs_info): Rename variables to *_storage and create methods for accessing same.
(path_conv): Add dev element, remove devn and unit and adjust inline methods to
accommodate.
(set_normalized_path): Declare new function.
* pinfo.cc (_pinfo::commune_recv): Add broken support for handling fifos.
(_pinfo::commune_send): Ditto.
* pipe.cc (fhandler_pipe::close): check for existence of handle before closing
it.
(handler_pipe::create): Rename from make_pipe.  Change arguments to accept
fhandler_pipe array.  Accommodate fifos.
(pipe): Rework to deal with fhandler_pipe::create changes.
(_pipe): Ditto.
* select.cc: Use individual device_specific types throughout rather than
indexing with obsolete device number.
(set_bits): Use is_socket call rather than checking device number.
* shared_info.h (CURR_MOUNT_MAGIC): Update.
(conv_to_win32_path): Reflect addition of device argument.
* syscalls.cc (mknod_worker): New function.
(open): Use build_fh_name to build fhandler.
(chown_worker): Detect if this is an 'auto' device rather than an on-filesystem
device and handle appropriately.
(chmod_device): New function.
(chmod): Detect if this is an 'auto' device rather than an on-filesystem device
and handle appropriately.  Use chmod_device to set mode of in-filesystem
devices.
(stat_worker): Eliminate path_conv argument.  Call build_fh_name to construct
fhandler.  Use fh->error() rather than pc->error to detect errors in fhandler
construction.
(access_worker): New function pulled from access.  Accommodate in-filesystem
devices.
(access): Use access_worker.
(fpathconf): Detect if this is an 'auto' device rather than an on-filesystem
device and handle appropriately.
(mknod_worker): New function.
(mknod32): New function.
(chroot): Free normalized path -- assuming it was actually cmalloced.
* tty.cc (create_tty_master): Tweak for new device class.
(tty::common_init): Ditto.
* winsup.h (stat_worker): Remove.
(symlink_worker): Declare.
* exceptions.cc (set_process_mask): Just call sig_dispatch_pending and don't
worry about pending_signals since sig_dispatch_pending should always do the
right thing now.
(sig_handle): Reorganize SIGCONT handling to more closely conform to SUSv3.
* pinfo.h: Move __SIG enum to sigproc.h.
(PICOM_FIFO): New enum element.
(_pinfo): Remove 'thread2signal' stuff throughout class.
(_pinfo::commune_send): Make varargs.
(_pinfo::sigtodo): Eliminate.
(_pinfo::thread2signal): Ditto.
* signal.cc (kill_worker): Eliminate call to setthread2signal.
* sigproc.cc (local_sigtodo): Eliminate.
(getlocal_sigtodo): Ditto.
(sigelem): New class.
(pending_signals): New class.
(sigqueue): New variable, start of sigqueue linked list.
(sigcatch_nonmain): Eliminate.
(sigcatch_main): Eliminate.
(sigcatch_nosync): Eliminate.
(sigcomplete_nonmain): Eliminate.
(pending_signals): Eliminate.
(sig_clear): Call signal thread to clear pending signals, unless already in
signal thread.
(sigpending): Call signal thread to get pending signals.
(sig_dispatch_pending): Eliminate use of pending_signals and just check
sigqueue.
(sigproc_terminate): Eliminate all of the obsolete semaphore stuff.  Close
signal pipe handle.
(sig_send): Eliminate all of the obsolete semaphore stuff and use pipe to send
signals.
(getevent): Eliminate.
(pending_signals::add): New function.
(pending_signals::del): New function.
(pending_signals::next): New function.
(wait_sig): Eliminate all of the obsolete semaphore stuff.  Use pipe to
communicate and maintain a linked list of signals.
* sigproc.h: Move __SIG defines here.  Add __SIGPENDING.
(sig_dispatch_pending): Remove "C" specifier.
(sig_handle): Accept a mask argument.
* thread.cc: Remove signal handling considerations throughout.
@
text
@d3 1
a3 1
   Copyright 1996, 1998, 1999, 2000, 2001, 2002 Red Hat, Inc.
a27 1
  sigframe thisframe (mainthread);
@


1.20
log
@Throughout, remove "include <errno.h>" from files which already include
cygerrno.h.
* include/cygwin/config.h (__DYNAMIC_REENT__): Define.
* include/cygwin/version.h: Bump API minor version.
* cygwin.din: Export __getreent
* cygerrno.h: Include errno.h.  Fix places where _impure_ptr is used directly
to store the errno value.
* debug.cc (__set_errno): Ditto.
* errno.cc: Remove _RRENT_ONLY define to get errno.cc compiled.
* signal.cc: Rename _reent_clib to _REENT throughout.
* thread.h (reent_clib): Remove prototype.
* thread.cc (reent_clib): Rename reent_clib to __getreent.  Return _impure_ptr
until MTinterface is initialized.
(reent_winsup): Fix a possible SEGV when _r == NULL.  Return NULL instead.
* MTinterface::fixup_after_fork: Switch reent back to _impure_ptr to keep
signal handling running when fork is called from a thread other than the
mainthread.
@
text
@d18 1
a19 1
#include "path.h"
@


1.19
log
@* ioctl.cc (ioctl): Always print ioctl results, even when it's a tty.
* winsup.h (low_priority_sleep): Declare.
@
text
@a15 1
#include <errno.h>
@


1.19.8.1
log
@merge from trunk.
Reorganize includes throughout so that path.h comes before fhandler.h.
Eliminate path_conv arguments from fhandler functions which take them,
throughout.  Use get_name() and get_win32_name() consistently throughout for
fhandler objects.  Use build_fh_* functions throughout, where appropriate.
* fhandler.h (fhandler_base): Store path_conv struct here.  Remove dev.
* dtable.h (dtable::build_fhandler_*): Remove.
(build_fh_dev): New.
(build_fh_pc): New.
(build_fh_name): New.
* dtable.cc (build_fh_dev): New.
(build_fh_pc): New.
(build_fh_name): New.
* fhandler.h (fhandler_base::set_name): Change argument.
* fhandler.cc (fhandler_base::set_name): Just accept a path_conv argument.
(executable_states): Move.
* path.h (executable_state): Accept.
* syscalls.cc (stat_worker): Make static.
* winsup.h (stat_worker): Remove definition.
@
text
@d19 1
a20 1
#include "fhandler.h"
@


1.19.8.2
log
@merge from trunk
@
text
@d16 1
@


1.18
log
@* fhandler_serial.cc (fhandler_serial::ioctl): Reformat.  Set errno
appropriately.  Exit from the bottom.  Correctly deal with third argument for
TCFLSH.  (Suggested by Sergey Okhapkin)
@
text
@d42 1
d47 2
a48 1
	  return tcgetattr (fd, (struct termios *) argp);
d50 2
a51 1
	  return tcsetattr (fd, TCSANOW, (struct termios *) argp);
d53 2
a54 1
	  return tcsetattr (fd, TCSADRAIN, (struct termios *) argp);
d56 2
a57 1
	  return tcsetattr (fd, TCSAFLUSH, (struct termios *) argp);
d60 3
a62 1
  int res = cfd->ioctl (cmd, argp);
@


1.17
log
@Remove \n from calls to strace class printfs throughout.
@
text
@d55 3
a57 1
  return cfd->ioctl (cmd, argp);
@


1.16
log
@	* fhandler_socket.cc (fhandler_socket::check_peer_secret_event):
	Fix strace message.
	(fhandler_socket::connect): Remove sigframe.
	(fhandler_socket::accept): Ditto.
	(fhandler_socket::getsockname): Ditto.
	(fhandler_socket::getpeername): Ditto.
	(fhandler_socket::recvfrom): Ditto.
	(fhandler_socket::recvmsg): Ditto.
	(fhandler_socket::sendto): Ditto.
	(fhandler_socket::sendmsg): Ditto.
	(fhandler_socket::close): Ditto.
	(fhandler_socket::ioctl): Ditto.
	* ioctl.cc (ioctl): Add sigframe.
	*net.cc (cygwin_sendto): Ditto.
	(cygwin_recvfrom): Ditto.
	(cygwin_recvfrom): Ditto.
	(cygwin_connect): Ditto.
	(cygwin_shutdown): Ditto.
	(cygwin_getpeername): Ditto.
	(cygwin_accept): Ditto.  Improve strace message.
	(cygwin_getsockname): Ditto.  Ditto.
	(cygwin_recvmsg): Ditto.  Ditto.
	(cygwin_sendmsg): Fix strace message.
@
text
@d41 1
a41 1
  debug_printf ("fd %d, cmd %x\n", fd, cmd);
@


1.15
log
@Add copyright stuff
@
text
@d23 1
d29 2
@


1.14
log
@	* ioctl.cc (ioctl): Make third argument optional.
	* include/sys/ioctl.h: Ditto in declaration.
	* dtable.cc (dtable::init_std_file_from_handle): Revert previous
	bogus patch.
	* window.cc (WndProc): Raise SIGURG instead of SIGIO in case of FD_OOB
	message.
@
text
@d3 1
a3 1
   Copyright 1996, 1998, 1999, 2000, 2001 Red Hat, Inc.
@


1.13
log
@* fhandler.cc (fhandler_base::fork_fixup): Don't protect handle.
* dlfcn.cc: Fix to confirm to coding standards.  Reorganize includes throughout
to accomodate new cygheap.h usage.
* cygheap.h (cygheap_fdmanip): New class: simplifies locking and retrieval of
fds from cygheap->fdtab.
(cygheap_fdget): Ditto.
(cygheap_fdnew): Ditto.
* fcntl.cc (_fcntl): Use new method to lock fdtab and retrieve info.
* ioctl.cc (ioctl): Ditto.
* mmap.cc (mmap): Ditto.
* net.cc: Ditto, throughout.
* passwd.cc (getpass): Ditto.
* path.cc (fchdir): Ditto.
* pipe.cc (make_pipe): Ditto.
* sec_acl.cc (facl): Ditto.
* syscalls.cc: Ditto, throughout.
* termios.cc: Ditto, throughout.
@
text
@d26 1
a26 1
ioctl (int fd, int cmd, void *buf)
d32 6
d43 1
a43 1
	  return tcgetattr (fd, (struct termios *) buf);
d45 1
a45 1
	  return tcsetattr (fd, TCSANOW, (struct termios *) buf);
d47 1
a47 1
	  return tcsetattr (fd, TCSADRAIN, (struct termios *) buf);
d49 1
a49 1
	  return tcsetattr (fd, TCSAFLUSH, (struct termios *) buf);
d52 1
a52 1
  return cfd->ioctl (cmd, buf);
@


1.12
log
@Add "path.h" include throughout, where needed.  Use new path_conv methods and
operators to simplify testing for directory and attributes, throughout.
* path.h (path_conv::exists): New method.
(path_conv::has_attribute): Ditto.
(path_conv::isdir): Ditto.
(path_conv::DWORD &): New operator.
(path_conv::int &): Ditto.
* dir.cc (rmdir): Eliminate a goto.
* dtable.cc (dtable::build_fhandler): Accept opt and suffix info for
path_conv.check.  Return fh == NULL on path_conv error.  Pass unit to set_name
as appropriate.
(dtable::reset_unix_path_name): New method.
* dtable.h (dtable): Declare new method.  Reflect arg changes to
build_fhandler.
* fhandler.cc (fhandler_disk_dummy_name): Eliminate.
(fhandler_base::set_name): Expect paths to be NULL.  Build unix_path_name from
win32_path_name when it is a device.
(fhandler_base::reset_unix_path_name): New method.
(fhandler_base::raw_read): Report EISDIR when ERROR_INVALID_FUNCTION or
ERROR_INVALID_PARAMETER and reading a directory.
(fhandler_disk_file::fstat): Don't call stat_dev since we should now never be
calling fhandler_disk_file methods with devices.
(fhandler_base::fhandler_base): Clear {unix,win32}_path_name.
(fhandler_base::~fhandler_base): Always free {unix,win32}_path_name.
(fhandler_disk_file::fhandler_disk_file): Remove set_no_free_names kludge.
(fhandler_disk_file::open): Ditto.
* fhandler.h (fhandler_base::no_free_names): Eliminate.
(fhandler_base::set_no_free_names): Ditto.
* fhandler_tty.cc (fhandler_tty_slave::fhandler_tty_slave): Don't set
unix_path_name here.
* path.cc (fchdir): Lock fd table throughout.  Use new
dtable::reset_unix_path_name method to reset path.
* syscalls.cc (stat_worker): Reorganize to always call fstat method.  Pass
path_conv method to fhandler_*::open.
(chroot): Elminate a goto.
@
text
@d28 3
a30 5
  if (cygheap->fdtab.not_open (fd))
    {
      set_errno (EBADF);
      return -1;
    }
d33 1
a33 2
  fhandler_base *fh = cygheap->fdtab[fd];
  if (fh->is_tty () && fh->get_device () != FH_PTYM)
d46 1
a46 1
  return fh->ioctl (cmd, buf);
@


1.11
log
@Update copyrights.
@
text
@d20 1
@


1.11.4.1
log
@Merged changes from HEAD
@
text
@a19 1
#include "path.h"
@


1.11.4.2
log
@Merged changes from HEAD
@
text
@d28 5
a32 3
  cygheap_fdget cfd (fd);
  if (cfd < 0)
    return -1;
d35 2
a36 1
  if (cfd->is_tty () && cfd->get_device () != FH_PTYM)
d49 1
a49 1
  return cfd->ioctl (cmd, buf);
@


1.11.4.3
log
@Merged changes from HEAD
@
text
@d3 1
a3 1
   Copyright 1996, 1998, 1999, 2000, 2001, 2002 Red Hat, Inc.
d26 1
a26 1
ioctl (int fd, int cmd, ...)
a31 6
  /* check for optional mode argument */
  va_list ap;
  va_start (ap, cmd);
  char *argp = va_arg (ap, char *);
  va_end (ap);

d37 1
a37 1
	  return tcgetattr (fd, (struct termios *) argp);
d39 1
a39 1
	  return tcsetattr (fd, TCSANOW, (struct termios *) argp);
d41 1
a41 1
	  return tcsetattr (fd, TCSADRAIN, (struct termios *) argp);
d43 1
a43 1
	  return tcsetattr (fd, TCSAFLUSH, (struct termios *) argp);
d46 1
a46 1
  return cfd->ioctl (cmd, argp);
@


1.11.4.4
log
@Merged changes from HEAD
@
text
@a22 1
#include "sigproc.h"
a27 2
  sigframe thisframe (mainthread);

@


1.10
log
@Throughout, reorganize header file inclusion to put security.h prior to
fhandler.h.
* fhandler.h (fhandler_base::get_inheritance): New method.
* fhandler_socket.cc (fhandler_socket::create_secret_event): Use proper
close-on-exec inheritance when creating.
(fhandler_socket::check_peer_secret_event): Create handle as non-inheritable.
@
text
@d3 1
a3 1
   Copyright 1996, 1998 Cygnus Solutions.
@


1.9
log
@forced commit
@
text
@d18 1
@


1.8
log
@Throughout, change fdtab references to cygheap->fdtab.
* child_info.h (cygheap_exec_info): Eliminate special fdtab stuff.
* spawn.cc (spawn_guts): Ditto.
* cygheap.cc (cygheap_init): Initialize fdtab, if appropriate.
* cygheap.h (CYGHEAPSIZE): Include size of init_cygheap.
(_cmalloc_entry): Include fdtab here.
* dtable.h (dtable): Declare/define new methods.
* dtable.cc (dtable::vfork_child_fixup): New method.
(dtable::fixup_after_exec): Remove unneeded extra arguments.
* dcrt0.cc (dll_crt0_1): Ditto.
* environ.cc (getwinenv): Use case sensitive comparison.
(winenv): Make a copy of environment cache to avoid realloc problems when
duplicate environment variables exist in the environment.  (From Egor Duda)
* net.cc (cygwin_socket): Revert Apr 14 change.
* include/sys/file.h: Protect against previous X_OK definition.
* passwd.cc: Eliminate passwd_sem throughout.
* security.cc: Ditto.
* cygwin.din: Export New functions.
* passwd.cc (read_etc_passwd): Make race safe.
(getpwuid_r): New function.
(getpwnam_r): New function.
@
text
@@


1.7
log
@Split out tty and shared_info stuff into their own headers and use throughout.
Include sys/termios.h for files which need it.
* tty.h: New file.
* shared_info.h: New file.
* fhandler.h: Move inline methods that rely on tty stuff to
fhandler_console.cc.
* fhandler_tty.cc (fhandler_pty_master::process_slave_output): Set
output_done_event immediately after reading data to speed up tty output
processing.
(process_output): Set write_error to errno or zero.
(fhandler_tty_slave::write): Check previous write error prior to writing to
slave end of pipe.  This allows tty output to be slightly less synchronous.
* fhandler_console.cc (fhandler_console::tcsetpgrp): Moved here from
fhandler.h.
(fhandler_console::set_input_state): Ditto.
@
text
@d20 1
d26 1
a26 1
  if (fdtab.not_open (fd))
d33 1
a33 1
  fhandler_base *fh = fdtab[fd];
@


1.6
log
@* winsup.h: Eliminate inclusion of most of the cygwin .h files.  Use .h files
only in sources which require them.
* Makefile.in: Generate dependencies with -MD option.
@
text
@d20 1
@


1.5
log
@* cygerrno.h: New file.  Use this throughout whenever errno manipulation is
required.
* errno.cc: Use DWORD to hold Windows errors.
(geterrno_from_win_error): New function.
(seterrno_from_win_error): Use geterrno_from_win_error to convert supplied
windows error (suggested by Corinna Vinschen).
* path.cc (symlink_info): Add error element.
* path.cc (path_conv::check): Remove errno setting.  Use new symlink_info errno
element to set path_conv error, where appropriate.
(symlink_info::check): Set error element rather than attempting to manipulate
errno.  Add more checks for trailing / and /..  even though they are currently
useless.  Avoid setting EINVAL.
* path.cc (normalize_posix_path): Correct check for trailing /.
@
text
@d17 2
a19 1
#include "cygerrno.h"
d21 1
a21 2
extern "C"
int
@


1.4
log
@* winsup.h: Split out dtable definitions into separate header file.
* dtable.h: New file.
* sigproc.h: Eliminate pinfo.h usage here.  Use it in source files that need
it.
@
text
@d18 1
@


1.3
log
@Rename hinfo -> dtable.  Name the former dtable array 'fdtab'.
@
text
@d17 1
@


1.2
log
@* winsup.h: take out protections of environ, errno, allow C use
* *.cc: put winsup.h before other headers (for __INSIDE_CYGWIN__);
use cur_environ() instead of just environ
* times.cc: remove import protections
* glob.c: add winsup.h
* localtime.c: ditto
* smallprint.c: ditto
* Makefile.in: don't __INSIDE_CYGWIN__ as it messes up profiling.
@
text
@d22 1
a22 1
  if (dtable.not_open (fd))
d29 1
a29 1
  fhandler_base *fh = dtable[fd];
@


1.1
log
@Initial revision
@
text
@d14 1
a16 1
#include "winsup.h"
@


1.1.1.1
log
@import winsup-2000-02-17 snapshot
@
text
@@
