head	1.24;
access;
symbols
	cygwin-1_7_35-release:1.24
	cygwin-1_7_34-release:1.24
	cygwin-1_7_33-release:1.23
	cygwin-1_7_32-release:1.23
	cygwin-1_7_31-release:1.23
	cygwin-1_7_30-release:1.23
	cygwin-1_7_29-release:1.23
	cygwin-1_7_29-release-branchpoint:1.23.0.4
	cygwin-pre-user-db:1.23
	cygwin-1_7_28-release:1.23
	cygwin-1_7_27-release:1.23
	cygwin-1_7_26-release:1.23
	cygwin-1_7_25-release:1.23
	cygwin-1_7_24-release:1.23
	cygwin-1_7_23-release:1.23
	cygwin-1_7_22-release:1.23
	cygwin-1_7_21-release:1.23
	cygwin-1_7_20-release:1.23
	cygwin-1_7_19-release:1.23
	cygwin-64bit-postmerge:1.23
	cygwin-64bit-premerge-branch:1.23.0.2
	cygwin-64bit-premerge:1.23
	cygwin-1_7_18-release:1.23
	post-ptmalloc3:1.21.2.3
	pre-ptmalloc3:1.21.2.3
	cygwin-1_7_17-release:1.21
	cygwin-64bit-branch:1.21.0.2
	cygwin-1_7_16-release:1.21
	cygwin-1_7_15-release:1.19
	cygwin-1_7_14_2-release:1.19
	cygwin-1_7_14-release:1.19
	cygwin-1_7_12-release:1.19
	cygwin-1_7_11-release:1.19
	cygwin-1_7_10-release:1.19
	signal-rewrite:1.19.0.4
	pre-notty:1.19
	cygwin-1_7_9-release:1.19
	cv-post-1_7_9:1.19.0.2
	cygwin-1_7_8-release:1.19
	cygwin-1_7_7-release:1.19
	cygwin-1_7_5-release:1.19
	cygwin-1_7_4-release:1.17
	cygwin-1_7_3-release:1.17
	cygwin-1_7_2-release:1.17
	fifo_doover3:1.17.0.16
	cygwin-1_7_1-release:1.17
	prefifo:1.17
	cv-branch-2:1.17.0.14
	pre-ripout-set_console_state_for_spawn:1.17
	EOL_registry_mounts:1.17
	preoverlapped:1.17
	drop_9x_support_start:1.17
	cr-0x5f1:1.17.0.12
	cv-branch:1.17.0.10
	pre-ptymaster-archetype:1.17
	cr-0x3b58:1.17.0.8
	cr-0x5ef:1.17.0.6
	after-mmap-privanon-noreserve:1.17
	after-mmap-revamp:1.17
	before-mmap-revamp:1.17
	cgf-more-exit-sync:1.17
	post_wait_sig_exit:1.17
	pre_wait_sig_exit:1.17
	reparent-point:1.17
	noreparent:1.17.0.4
	cr-0x5e6:1.17.0.2
	cr-0x9e:1.16.0.12
	cr-0x9d:1.16.0.10
	cgf-deleteme:1.16.0.8
	pre-sigrewrite:1.16
	corinna-01:1.16
	cr-0x9c:1.16.0.6
	cr-0x9b:1.16.0.4
	cr-0x99:1.16
	Z-emcb-cygwin_daemon:1.16.0.2
	w32api-2_2:1.14
	mingw-runtime-2_4:1.14
	pre-cgf-merge:1.16
	cgf-dev-branch:1.14.0.30
	predaemon:1.14
	cygwin_daemon_merge_HEAD:1.14
	pregp02r1:1.14.0.8
	cygnus_cvs_20020108_pre:1.13
	Z-cygwin_daemon_merge-new_HEAD:1.14
	Z-cygwin_daemon_merge_HEAD:1.14
	cygwin_daemon:1.13.0.4;
locks; strict;
comment	@# @;
expand	@o@;


1.24
date	2015.02.03.13.15.49;	author corinna;	state Exp;
branches;
next	1.23;

1.23
date	2013.01.21.04.38.27;	author cgf;	state Exp;
branches;
next	1.22;

1.22
date	2012.11.23.13.22.46;	author cgf;	state Exp;
branches;
next	1.21;

1.21
date	2012.07.09.09.00.56;	author corinna;	state Exp;
branches
	1.21.2.1;
next	1.20;

1.20
date	2012.07.06.14.44.13;	author corinna;	state Exp;
branches;
next	1.19;

1.19
date	2010.04.10.05.47.54;	author cgf;	state Exp;
branches;
next	1.18;

1.18
date	2010.04.10.05.46.45;	author cgf;	state Exp;
branches;
next	1.17;

1.17
date	2004.02.04.22.40.50;	author cgf;	state Exp;
branches;
next	1.16;

1.16
date	2003.05.29.03.50.15;	author cgf;	state Exp;
branches;
next	1.15;

1.15
date	2003.04.14.02.09.57;	author cgf;	state Exp;
branches;
next	1.14;

1.14
date	2002.01.13.20.03.03;	author cgf;	state Exp;
branches
	1.14.30.1;
next	1.13;

1.13
date	2001.09.11.20.01.00;	author cgf;	state Exp;
branches
	1.13.4.1;
next	1.12;

1.12
date	2001.09.11.15.25.08;	author cgf;	state Exp;
branches;
next	1.11;

1.11
date	2001.06.24.22.26.51;	author cgf;	state Exp;
branches;
next	1.10;

1.10
date	2001.03.12.16.20.30;	author cgf;	state Exp;
branches;
next	1.9;

1.9
date	2000.09.08.02.56.54;	author cgf;	state Exp;
branches;
next	1.8;

1.8
date	2000.08.12.05.48.51;	author cgf;	state Exp;
branches;
next	1.7;

1.7
date	2000.07.29.16.24.38;	author cgf;	state Exp;
branches;
next	1.6;

1.6
date	2000.06.24.16.31.36;	author cgf;	state Exp;
branches;
next	1.5;

1.5
date	2000.06.21.05.04.56;	author cgf;	state Exp;
branches;
next	1.4;

1.4
date	2000.06.21.05.03.36;	author cgf;	state Exp;
branches;
next	1.3;

1.3
date	2000.06.20.21.42.25;	author cgf;	state Exp;
branches;
next	1.2;

1.2
date	2000.05.23.05.18.48;	author cgf;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.17.19.38.31;	author cgf;	state Exp;
branches
	1.1.1.1;
next	;

1.21.2.1
date	2012.08.14.11.13.12;	author corinna;	state Exp;
branches;
next	1.21.2.2;

1.21.2.2
date	2012.11.23.15.14.38;	author corinna;	state Exp;
branches;
next	1.21.2.3;

1.21.2.3
date	2013.01.21.13.52.07;	author corinna;	state Exp;
branches;
next	;

1.14.30.1
date	2003.05.10.17.20.53;	author cgf;	state Exp;
branches;
next	1.14.30.2;

1.14.30.2
date	2003.06.06.00.27.50;	author cgf;	state Exp;
branches;
next	;

1.13.4.1
date	2002.01.15.12.52.50;	author rbcollins;	state Exp;
branches;
next	;

1.1.1.1
date	2000.02.17.19.38.31;	author cgf;	state Exp;
branches;
next	;


desc
@@


1.24
log
@	* mkvers.sh: Automate generating the copyright date in the version
	resource.
	* winver.rc: Ditto.
@
text
@#!/bin/sh
# mkvers.sh - Make version information for cygwin DLL
#
#   Copyright 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2010, 2012,
#   2014, 2015 Red Hat, Inc.
#
# This file is part of Cygwin.
#
# This software is a copyrighted work licensed under the terms of the
# Cygwin license.  Please consult the file "CYGWIN_LICENSE" for
# details.

exec 9> version.cc

#
# Arg 1 is the name of the version include file
#
incfile="$1"; shift
rcfile="$1"; shift
windres="$1"; shift
iflags=
# Find header file locations
while [ -n "$*" ]; do
    case "$1" in
	-I*)
	    iflags="$iflags $1"
	    ;;
	-idirafter)
	    shift
	    iflags="$iflags -I$1"
	    ;;
    esac
    shift
done

[ -r $incfile ] || {
    echo "**** Couldn't open file '$incfile'.  Aborting."
}

#
# Load the current date so we can work on individual fields
#
set -$- $(date +"%m %d %Y %H:%M")
m=$1 d=$2 y=$3 hhmm=$4
#
# Set date into YYYY-MM-DD HH:MM:SS format
#
builddate="$y-$m-$d $hhmm"
echo "$builddate"

set -$- ''

#
# Output the initial part of version.cc
#
cat <<EOF 1>&9
#include "config.h"
#include "cygwin_version.h"

#define strval(x) #x
#define str(x) strval(x)
#define shared_data_version str(CYGWIN_VERSION_SHARED_DATA)

const char *cygwin_version_strings =
  "BEGIN_CYGWIN_VERSION_INFO\n"
EOF

#
# Split version file into dir and filename components
#
dir=`dirname $incfile`
fn=`basename $incfile`

#
# Look in the include file CVS directory for a CVS Tag file.  This file,
# if it exists, will contain the name of the sticky tag associated with
# the current build.  Save that for output later.
#
cvs_tag="`sed -e '/dontuse/d' -e 's%^.\(.*\)%\1%' $dir/CVS/Tag 2>/dev/null`"

wv_cvs_tag="$cvs_tag"
[ -n "$cvs_tag" ] && cvs_tag=" CVS tag"'
'"$cvs_tag"

#
# Look in the source directory containing the include/cygwin/version.h
# and set dir accordingly.
dir=`echo $dir | sed -e 's%/include/cygwin.*$%%' -e 's%include/cygwin.*$%.%'`

# Look in $dir for a a ".snapshot-date" file.  If one is found then this
# information will be saved for output to the DLL.
#
if [ -r "$dir/.snapshot-date" ]; then
    read snapshotdate < "$dir/.snapshot-date"
    snapshot="snapshot date
$snapshotdate"
fi

#
# Scan the version.h file for strings that begin with CYGWIN_INFO or
# CYGWIN_VERSION.  Perform crude parsing on the lines to get the values
# associated with these values and then pipe it into a while loop which
# outputs these values in C palatable format for inclusion in the DLL
# with a '%% ' identifier that will introduce "interesting" strings.
# These strings are strictly for use by a user to scan the DLL for
# interesting information.
#
(sed -n -e 's%#define CYGWIN_INFO_\([A-Z_]*\)[ 	][ 	]*\([a-zA-Z0-9"][^/]*\).*%_\1\
\2%p' -e 's%#define CYGWIN_VERSION_\([A-Z_]*\)[ 	][ 	]*\([a-zA-Z0-9"][^/]*\).*%_\1\
\2%p' $incfile | sed -e 's/["\\]//g'  -e '/^_/y/ABCDEFGHIJKLMNOPQRSTUVWXYZ_/abcdefghijklmnopqrstuvwxyz /';
echo ' build date'; echo $build_date; [ -n "$cvs_tag" ] && echo "$cvs_tag";\
[ -n "$snapshot" ] && echo "$snapshot"
) | while read var; do
    read val
cat <<EOF
  "%%% Cygwin $var: $val\n"
EOF
done | tee /tmp/mkvers.$$ 1>&9

trap "rm -f /tmp/mkvers.$$" 0 1 2 15

if [ -n "$snapshotdate" ]; then
  usedate="`echo $snapshotdate | sed 's/-\\(..:..[^-]*\\).*$/ \1SNP/'`"
else
  usedate="$builddate"
fi

#
# Finally, output the shared ID and set up the cygwin_version structure
# for use by Cygwin itself.
#
cat <<EOF 1>&9
#ifdef DEBUGGING
  "%%% Cygwin shared id: " CYGWIN_VERSION_DLL_IDENTIFIER "S" shared_data_version "-$builddate\n"
#else
  "%%% Cygwin shared id: " CYGWIN_VERSION_DLL_IDENTIFIER "S" shared_data_version "\n"
#endif
  "END_CYGWIN_VERSION_INFO\n\0";
cygwin_version_info cygwin_version =
{
  CYGWIN_VERSION_API_MAJOR, CYGWIN_VERSION_API_MINOR,
  CYGWIN_VERSION_DLL_MAJOR, CYGWIN_VERSION_DLL_MINOR,
  CYGWIN_VERSION_SHARED_DATA,
  CYGWIN_VERSION_MOUNT_REGISTRY,
  "$usedate",
#ifdef DEBUGGING
  CYGWIN_VERSION_DLL_IDENTIFIER "S" shared_data_version "-$builddate"
#else
  CYGWIN_VERSION_DLL_IDENTIFIER "S" shared_data_version
#endif
};
EOF

#
# Generate winver.o using cygwin/version.h information.
# Turn the cygwin major number from some large number to something like 1.1.0.
#
eval `sed -n 's/^.*dll \(m[ai][jn]or\): \([0-9]*\)[^0-9]*$/\1=\2/p' /tmp/mkvers.$$`
cygverhigh=`expr $major / 1000`
cygverlow=`expr $major % 1000`
cygwin_ver="$cygverhigh.$cygverlow.$minor"
if [ -n "$cvs_tag" ]; then
    cvs_tag="`echo $wv_cvs_tag | sed -e 's/-branch.*//'`"
    cygwin_ver="$cygwin_ver-$cvs_tag"
fi

echo "Version $cygwin_ver"
set -$- $builddate
$windres $iflags --define CYGWIN_BUILD_DATE="$1" --define CYGWIN_BUILD_TIME="$2" --define CYGWIN_BUILD_YEAR=$y --define CYGWIN_VERSION='"'"$cygwin_ver"'"' $rcfile winver.o
@


1.23
log
@Throughout, update copyrights to reflect dates which correspond to main-branch
checkins.  Regularize copyright format.
@
text
@d4 2
a5 2
#   Copyright 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2010, 2012 Red Hat,
#   Inc.
d169 1
a169 1
$windres $iflags --define CYGWIN_BUILD_DATE="$1" --define CYGWIN_BUILD_TIME="$2" --define CYGWIN_VERSION='"'"$cygwin_ver"'"' $rcfile winver.o
@


1.22
log
@ChangeLog:
2012-11-12  Christopher Faylor  <me.cygwin2012@@cgf.cx>

	* Makefile.common: Revamp for new configury.  Add default compilation
	targets, include .E processing.  Add magic for allowing "CFLAGS" to
	control optimization options in "CXXFLAGS".
	* configure.cygwin: New include for Cygwin configure.in's.
	* acinclude.m4: Delete old definitions.  Implement AC_WINDOWS_HEADERS,
	AC_WINDOWS_LIBS, AC_CYGWIN_INCLUDES, target_builddir, winsup_srcdir.
	* aclocal.m4: Regenerate.
	* autogen.sh: New file.
	* ccwrap: New script.
	* c++wrap: New script.
	* config.guess: New script.
	* config.sub: New script.
	* configure: Regenerate.
	* configure.in: Eliminate LIB_AC_PROG_* calls in favor of standard.
	Delete ancient target test.
	* install-sh: New script.

cygserver/ChangeLog:
2012-11-12  Christopher Faylor  <me.cygwin2012@@cgf.cx>

	* Makefile.in: Revamp for new configury.
	* configure.in: Revamp for new configury.
	* aclocal.m4: Regenerate.
	* configure: Ditto.
	* autogen.sh: New script.

cygwin/ChangeLog:
2012-11-22  Christopher Faylor  <me.cygwin2012@@cgf.cx>

	* select.cc (select): Don't return -1 when we've timed out after
	looping.

2012-11-22  Christopher Faylor  <me.cygwin2012@@cgf.cx>

	* Makefile.in: Revamp for new configury.
	(datarootdir): Add variable setting.
	(winver_stamp): Accommodate changes to mkvers.sh setting.
	(libc.a): Fix race when libm.a might not have been built yet.
	* configure.in: Revamp for new configury.
	* aclocal.m4: Regenerate.
	* configure: Ditto.
	* autogen.sh: New script.
	* mkvers.sh: Find include directives via CFLAGS and friends rather than
	assuming that w32api lives nearby.

utils/ChangeLog:
2012-11-12  Christopher Faylor  <me.cygwin2012@@cgf.cx>

	* aclocal.m4: Regenerate.
	* configure: Ditto.
	* autogen.sh: New script.
	* configure.in: Revamp for new configury.
	* Makefile.in: Revamp for new configury.  Rename ALL_* to just *.
	Always use "VERBOSE" setting.
	(MINGW_CXX): Don't include CFLAGS in definition.
	(all): Define target first, before everything else so that it is the
	default.
	(ps.exe): Don't add useless -lcygwin.
	(ldh.exe): For consistency, add to existing MINGW_LDFLAGS rather than
	redefining them.
	(cygcheck.exe): Always include -lz for MINGW_LDFLAGS.  Don't try to
	figure out where to find it.
	(dumper.exe): Simplify check.  Assume libraries are installed rather
	than trying to retrieve from source tree.
	(install): Just use /bin/mkdir to create directories.
	(Makefile): Regenerate when standard dependencies change.
	* dump_setup.cc: Always include zlib.h.  Remove accommodations for it
	possibly not existing.
	* parse_pe.cc: Add define which allows building with installed
	binutils package.
	* dumper.cc: Ditto.
@
text
@d4 2
a5 1
#   Copyright 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2010, 2012 Red Hat, Inc.
@


1.21
log
@	* Makefile.in, configure.in, mkvers.sh: Revert accidental checkin from
	2012-07-06.
@
text
@d4 1
a4 1
#   Copyright 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2010 Red Hat, Inc.
d17 17
a33 3
incfile="$1"
rcfile="$2"
windres="$3"
d168 1
a168 1
$windres --include-dir $dir/../w32api/include --include-dir $dir/include --define CYGWIN_BUILD_DATE="$1" --define CYGWIN_BUILD_TIME="$2" --define CYGWIN_VERSION='"'"$cygwin_ver"'"' $rcfile winver.o
@


1.21.2.1
log
@	*  mkvers.sh: Drop reference to w32api includes.
@
text
@d154 1
a154 1
$windres --include-dir $dir/include --define CYGWIN_BUILD_DATE="$1" --define CYGWIN_BUILD_TIME="$2" --define CYGWIN_VERSION='"'"$cygwin_ver"'"' $rcfile winver.o
@


1.21.2.2
log
@Pull in changes from HEAD
@
text
@d4 1
a4 1
#   Copyright 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2010, 2012 Red Hat, Inc.
d17 3
a19 17
incfile="$1"; shift
rcfile="$1"; shift
windres="$1"; shift
iflags=
# Find header file locations
while [ -n "$*" ]; do
    case "$1" in
	-I*)
	    iflags="$iflags $1"
	    ;;
	-idirafter)
	    shift
	    iflags="$iflags -I$1"
	    ;;
    esac
    shift
done
d154 1
a154 1
$windres $iflags --define CYGWIN_BUILD_DATE="$1" --define CYGWIN_BUILD_TIME="$2" --define CYGWIN_VERSION='"'"$cygwin_ver"'"' $rcfile winver.o
@


1.21.2.3
log
@Pull in changes from HEAD
@
text
@d4 1
a4 2
#   Copyright 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2010, 2012 Red Hat,
#   Inc.
@


1.20
log
@	* winlean.h (__STRALIGN_H_): Drop definition.
@
text
@d1 1
a1 1
#!/bin/bash
a151 3
compiler=$(echo "$windres" | sed -e 's/windres/gcc/')
cpu=$("$compiler" -dumpmachine | sed -e 's/\([^-]*\).*/\1/')

d154 1
a154 1
$windres --include-dir /usr/$cpu-w64-mingw32/sys-root/mingw/include --include-dir $dir/include --define CYGWIN_BUILD_DATE="$1" --define CYGWIN_BUILD_TIME="$2" --define CYGWIN_VERSION='"'"$cygwin_ver"'"' $rcfile winver.o
@


1.19
log
@update copyright
@
text
@d1 1
a1 1
#!/bin/sh
d152 3
d157 1
a157 1
$windres --include-dir $dir/../w32api/include --include-dir $dir/include --define CYGWIN_BUILD_DATE="$1" --define CYGWIN_BUILD_TIME="$2" --define CYGWIN_VERSION='"'"$cygwin_ver"'"' $rcfile winver.o
@


1.18
log
@* mkvers.sh: Use modern date formats to construct the date.
@
text
@d4 1
a4 1
#   Copyright 1998, 1999, 2000, 2001, 2002, 2003, 2004 Red Hat, Inc.
@


1.17
log
@update copyright
@
text
@d28 2
a29 26
build_date=`date`
set -$- $build_date
#
# Translate the month into a number
#
case "$2" in
    Jan) m=01 ;;
    Feb) m=02 ;;
    Mar) m=03 ;;
    Apr) m=04 ;;
    May) m=05 ;;
    Jun) m=06 ;;
    Jul) m=07 ;;
    Aug) m=08 ;;
    Sep) m=09 ;;
    Oct) m=10 ;;
    Nov) m=11 ;;
    Dec) m=12 ;;
esac

if [ "$3" -lt 10 ]; then
    d=0$3
else
    d=$3
fi
hhmm="`echo $4 | sed 's/:..$//'`"
d33 2
a34 1
builddate="${6-$5}-$m-$d $hhmm"
@


1.16
log
@* mkvers.sh: Avoid "-dontuse" tags.
* path.cc (path_conv::check): Set exec state based on known situations.
* path.cc (mount_item::fnmunge): New function.
(mount_item::build_win32): New function.
(mount_info::conv_to_win32_path): Use build_win32 to build windows path.
* path.h (mount_item::fnmunge): Declare new function.
(mount_item::build_win32): Ditto.
* sys/mount.h (MOUNT_ENC): Define.
@
text
@d4 1
a4 1
#   Copyright 1998, 1999, 2000, 2001, 2002 Red Hat, Inc.
@


1.15
log
@* mkvers.sh: Prefix day with 0 in date only when day < 10.
@
text
@d87 1
a87 1
cvs_tag="`sed 's%^.\(.*\)%\1%' $dir/CVS/Tag 2>/dev/null`"
@


1.14
log
@Add copyright stuff
@
text
@d48 1
a48 1
if [ "$3" -le 10 ]; then
@


1.14.30.1
log
@merge from trunk
@
text
@d48 1
a48 1
if [ "$3" -lt 10 ]; then
@


1.14.30.2
log
@merge from trunk
@
text
@d87 1
a87 1
cvs_tag="`sed -e '/dontuse/d' -e 's%^.\(.*\)%\1%' $dir/CVS/Tag 2>/dev/null`"
@


1.13
log
@Update copyrights.
@
text
@d4 1
a4 1
#   Copyright 1998, 1999, 2000, 2001 Red Hat, Inc.
@


1.13.4.1
log
@Merged changes from HEAD
@
text
@d4 1
a4 1
#   Copyright 1998, 1999, 2000, 2001, 2002 Red Hat, Inc.
@


1.12
log
@* cygwin.din: Remove cygwin_getshared.
* shared.cc: Ditto.
* include/cygwin/version.h: Bump API minor number.
* dtable.cc (dtable::build_fhandler): Fix incorrect test for socket.
@
text
@d4 1
a4 1
#   Copyright 1998, 1999, 2000 Cygnus Solutions.
@


1.11
log
@forced commit
@
text
@d95 5
a99 2
# file for a ".snapshot-date" file.  If one is found then this information
# will be saved for output to the DLL.
a100 1
dir=`echo $dir | sed -e 's%/include/cygwin.*$%%' -e 's%include/cygwin.*$%.%'`
@


1.10
log
@* mkvers.sh: Include config.h so that DEBUGGING is correctly defined.
@
text
@@


1.9
log
@Break out more header info into separate files.  Use appropriate header files
throughout.
* shared.h: Remove.
* cygwin_version.h: New file.
* delqueue.h: New file.
* environ.h: New file.
* host_dependent.h: New file.
* perprocess.h: New file.
* registry.h: New file.
* security.h: New file.
@
text
@d65 1
@


1.8
log
@* mkvers.sh: Properly trap exit removal of temp file.  Remove debugging
statement.
@
text
@d65 1
a65 1
#include <winsup.h>
@


1.7
log
@* include/cygwin/version.h: Bump DLL minor version number to 5 due to all of
the changes below.  Redefine process structure to avoid a fixed size table.
Redefine pinfo/_pinfo classes.  Use these throughout.
* dcrt0.cc (dll_crt0_1): Accomodate set_myself argument change.
(__api_fatal): Accomodate _pinfo::record_death argument change.
* exceptions.cc (really_exit): Ditto.
(sig_handle_tty_stop): Use pinfo constructor to access process info.
(events_init): Don't create pinfo_mutex since it is no longer required.
* external.cc (fillout_pinfo): Use winpids class to iterate over all system
pids.
(cygwin_internal): lock_pinfo_for_update and unlock_pinfo are now noops.
* fhandler_termios.cc (fhandler_termios::set_ctty): Use pinfo constructor to
access process info.
* fork.cc (fork): Reorganize to initialize child info after the child has
started since that is when we know the child's winpid, which is necessary to
allocate the pinfo shared memory.
* mmap.cc (recreate_mmaps_after_fork): Change arg type to _pinfo.
* pinfo.cc: Rename pinfo methods to _pinfo throughout.  Eliminate pinfo_list
stuff.
(set_myself): Accept a pid argument now.  Call pinfo initializer to initialize
myself.  Detect when this is an "execed" process and create an "indirect" pid
block.
(pinfo_init): Accomodate set_myself arg change.
(procinfo): Remove.
(pinfo::lock_pinfo): Remove.
(pinfo::unlock_pinfo): Remove.
(pinfo::init): New method.  Allocates shared memory space for process pinfo
structure.
(pinfo::record_death): Don't call locking functions.
(cygwin_winpid_to_pid): Simplify by using new pinfo constructor.
(EnumProcessesW95): New function for iterating over processes on Windows 95.
(winpids::winpids): New constructor for winpids class.  Sets up a list of
process ids.
(enum_init): Initialize w95/wnt pid enumerators.
* shared.cc (shared-info::initialize): Remove pid initialization.
* shared.h: Move pinfo stuff into pinfo.h.
(class shared_info): Remove pinfo_list element.
* signal.cc (kill_worker): Use pinfo constructor to access process info.
(kill_pgrp): Ditto.  Use winpids methods to access list of processes.
* sigproc.cc: Throughout, modify to use _pinfo where appropriate.
(proc_exists (pid_t)): New function.  Determines if a process exists based on
the pid.
(proc_exists (_pinfo *p): Use new proc_exists function above.
(proc_subproc): Copy pinfo stuff around rather than _pinfo pointers.  Try to be
careful about releasing shared memory when we don't need it anymore.  Remove
pinfo locks.
(remove_zombies): Remove pinfo memory when zombie is going away.
* sigproc.h: Reflect _pinfo/pinfo changes in sigproc.cc.
* spawn.cc (spawn_guts): Eliminate pinfo *child argument.  Reorganize to only
initialize child pinfo after process has been started and we know the windows
pid.
(_spawnve): Reflect spawn_guts changes.
* syscalls.cc (setpgid): Use pinfo constructor to access process info.
(getpgid): Ditto.
(internal_getlogin): Use _pinfo.
* winsup.h: Eliminate pinfo_mutex.  Eliminate spawn_guts declaration since it
is static now.  Reflect set_myself argument change.
* include/sys/cygwin.h: Add some PID_* enums to accomodate new pinfo stuff.
* include/cygwin/version.h: Update minor version for cygdrive changes below.
@
text
@a12 1
trap "rm -f /tmp/version.cc" 1 2 15
d174 1
a174 2
set -x
exec $windres --include-dir $dir/../w32api/include --include-dir $dir/include --define CYGWIN_BUILD_DATE="$1" --define CYGWIN_BUILD_TIME="$2" --define CYGWIN_VERSION='"'"$cygwin_ver"'"' $rcfile winver.o
@


1.6
log
@* shared.cc (shared_info::initialize): Improve error message clarity.
* mkvers.sh: Eliminate debugging output.
@
text
@d175 1
@


1.5
log
@Display what's going on.
@
text
@a174 1
set -x
@


1.4
log
@* mkvers.sh: Fix sed usage for older seds.
@
text
@d175 2
a176 1
$windres --include-dir $dir/../w32api/include --include-dir $dir/include --define CYGWIN_BUILD_DATE="$1" --define CYGWIN_BUILD_TIME="$2" --define CYGWIN_VERSION='"'"$cygwin_ver"'"' $rcfile winver.o
@


1.3
log
@* mkvers.sh: Fix problem with handling of CVS tags causing .rc syntax errors.
@
text
@d114 3
a116 2
(sed -n -e 's%#define CYGWIN_\(INFO\|VERSION\)_\([A-Z_]*\)[ 	][ 	]*\([a-zA-Z0-9"][^/]*\).*%_\2\
\3%p' $incfile | sed -e 's/["\\]//g'  -e '/^_/y/ABCDEFGHIJKLMNOPQRSTUVWXYZ_/abcdefghijklmnopqrstuvwxyz /';
@


1.2
log
@* mkvers.sh: Use snapshot date as build date since it is more interesting.
* uname.cc (uname): Detect if this is a snapshot build and add an "S" to the
version number.  Report the snapshot date as the release date.
@
text
@d89 1
d168 2
a169 1
    cygwin_ver="$cygwin_ver ($cvs_tag)"
d172 1
@


1.1
log
@Initial revision
@
text
@d54 1
d58 1
a58 1
builddate="${6-$5}-$m-$d $4"
d99 1
a99 1
    read snapshot < "$dir/.snapshot-date"
d101 1
a101 1
$snapshot"
d126 6
a142 1

d149 1
a149 1
  "$builddate",
@


1.1.1.1
log
@import winsup-2000-02-17 snapshot
@
text
@@
