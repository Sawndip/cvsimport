head	1.2;
access;
symbols
	cygwin-1_7_35-release:1.2
	cygwin-1_7_34-release:1.2
	cygwin-1_7_33-release:1.2
	cygwin-1_7_32-release:1.2
	cygwin-1_7_31-release:1.2
	cygwin-1_7_30-release:1.2
	cygwin-1_7_29-release:1.2
	cygwin-1_7_29-release-branchpoint:1.2.0.10
	cygwin-pre-user-db:1.2
	cygwin-1_7_28-release:1.2
	cygwin-1_7_27-release:1.2
	cygwin-1_7_26-release:1.2
	cygwin-1_7_25-release:1.2
	cygwin-1_7_24-release:1.2
	cygwin-1_7_23-release:1.2
	cygwin-1_7_22-release:1.2
	cygwin-1_7_21-release:1.2
	cygwin-1_7_20-release:1.2
	cygwin-1_7_19-release:1.2
	cygwin-64bit-postmerge:1.2
	cygwin-64bit-premerge-branch:1.2.0.8
	cygwin-64bit-premerge:1.2
	cygwin-1_7_18-release:1.2
	post-ptmalloc3:1.2
	pre-ptmalloc3:1.2
	cygwin-1_7_17-release:1.2
	cygwin-64bit-branch:1.2.0.6
	cygwin-1_7_16-release:1.2
	cygwin-1_7_15-release:1.2
	cygwin-1_7_14_2-release:1.2
	cygwin-1_7_14-release:1.2
	cygwin-1_7_12-release:1.2
	cygwin-1_7_11-release:1.2
	cygwin-1_7_10-release:1.2
	signal-rewrite:1.2.0.4
	pre-notty:1.2
	cygwin-1_7_9-release:1.2
	cv-post-1_7_9:1.2.0.2
	cygwin-1_7_8-release:1.2
	cygwin-1_7_7-release:1.1
	cygwin-1_7_5-release:1.1
	cygwin-1_7_4-release:1.1
	cygwin-1_7_3-release:1.1
	cygwin-1_7_2-release:1.1
	fifo_doover3:1.1.0.4
	cygwin-1_7_1-release:1.1
	prefifo:1.1
	cv-branch-2:1.1.0.2;
locks; strict;
comment	@# @;


1.2
date	2011.02.11.18.00.55;	author cgf;	state Exp;
branches;
next	1.1;

1.1
date	2009.01.03.05.12.21;	author cgf;	state Exp;
branches;
next	;


desc
@@


1.2
log
@* mkstatic: Make sure that we are not cd'ed to temporary directory on exit to
avoid bogus warnings on directory cleanup.
* speclib: Ditto.
* mkimport: Ditto.
@
text
@#!/usr/bin/perl
use strict;
use Cwd;
use Getopt::Long;
use File::Temp qw/tempdir/;
use File::Basename;

sub xsystem(@@);

my @@exclude = ();
my @@library = ();
my $ar;
our $x;
GetOptions('exclude=s'=>\@@exclude, 'library=s'=>\@@library, 'ar=s'=>\$ar, 'x!'=>\$x);

die "$0: must specify --ar\n" unless defined $ar;
my $lib = shift or die "$0: missing lib argument\nusage: $0 lib [map-file]\n";
$lib = Cwd::abs_path($lib);

my %excludes = map {($_, 1)} @@exclude;
my $libraries = join('|', map {quotemeta} @@library);

my %sources = ();
while (<>) {
    my ($source, $file, $absfile);
    if (m%^($libraries)\(([^)]*)\)%o) {
	$source = $1;
	$absfile = $file = $2;
    } elsif (/^LOAD\s+(.*\.o)$/o) {
	$source = '.';
	$file = $1;
	$absfile = Cwd::abs_path($file);
    } else {
	next;
    }
    push @@{$sources{$source}}, $absfile unless $excludes{$file} || $excludes{$source};
}

my $here = getcwd();
my $dir = tempdir(CLEANUP=>1);
chdir $dir;
my @@files = ();
for (sort keys %sources) {
    if ($_ eq '.') {
	xsystem '/bin/cp', '-a', @@{$sources{$_}}, '.';
    } else {
	xsystem $ar, 'x',  $_, @@{$sources{$_}}, '.';
    }
    push @@files, map {basename($_)} @@{$sources{$_}};
}

unlink $lib;
xsystem $ar, 'crs', $lib, sort @@files;
exit 0;

sub xsystem(@@) {
    print join(' ', 'x', @@_), "\n" if $x;
    system(@@_) == 0 or die "$0: $_[0] $_[1] $_[2]... exited with non-zero status\n";
}

END {
    chdir '/tmp';	# Allow $dir directory removal on Windows
}
@


1.1
log
@Remove unneeded header files from source files throughout.  Update copyrights
where appropriate.
* globals.cc: New file for generic global variables.
* mkglobals_h: New file to generate globals.h.
* mkstatic: New Script used to build a (currently non-working) static
libcygwin_s.a.
* Makefile.in: Add unused rule to build a non-working libcygwin_s.a.
(DLL_OFILES): Add globals.o.  Make all objects rely on globals.h.
(globals.h): New target.  Generate globals.h.
* cygtls.h: Honor new CYGTLS_HANDLE define to control when the HANDLE operator
is allowed in _cygtls.
* dcrt0.cc: Move most globals to globals.cc.
* init.cc: Ditto.
* environ.cc (strip_title_path): Remove now-unneeded extern.
* fhandler_serial.cc (fhandler_serial::open): Ditto.
* pinfo.cc: Ditto.
(commune_process): Ditto.
* shared.cc: Ditto.
* glob.cc: Ditto.
* strace.cc: Ditto.
* exceptions.cc: Define CYGTLS_HANDLE before including winsup.h.
* path.cc (stat_suffixes): Move here.
* security.h: Add forward class path_conv declaration.
* smallprint.cc (__small_vsprintf): Make a true c++ function.
(__small_sprintf): Ditto.
(small_printf): Ditto.
(console_printf): Ditto.
(__small_vswprintf): Ditto.
(__small_swprintf): Ditto.
* spawn.cc (spawn_guts): Remove _stdcall decoration in favor of regparm.
(hExeced): Move to globals.cc
* strfuncs.cc (current_codepage): Ditto.
(active_codepage): Ditto.
* sync.cc (lock_process::locker): Move here from dcrt0.cc.
* syscalls.cc (stat_suffixes): Move to path.cc.
* tty.cc (tty::create_master): Uncapitalize fatal warning for consistency.
* winsup.h: Include globals.h to declare most of the grab bag list of globals
which were previously defined here.
* mount.h: Move USER_* defines back to shared_info.h.
* speclib: Force temporary directory cleanup.
@
text
@d58 5
a62 1
    system(@@_) == 0 or die "$0: @@_[0] $_[1] $_[2]... exited with non-zero status\n";
@

