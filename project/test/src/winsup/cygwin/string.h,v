head	1.19;
access;
symbols
	cygwin-1_7_35-release:1.19
	cygwin-1_7_34-release:1.19
	cygwin-1_7_33-release:1.18.2.1
	cygwin-1_7_32-release:1.18
	cygwin-1_7_31-release:1.18
	cygwin-1_7_30-release:1.18
	cygwin-1_7_29-release:1.18
	cygwin-1_7_29-release-branchpoint:1.18.0.2
	cygwin-pre-user-db:1.18
	cygwin-1_7_28-release:1.18
	cygwin-1_7_27-release:1.18
	cygwin-1_7_26-release:1.18
	cygwin-1_7_25-release:1.17
	cygwin-1_7_24-release:1.17
	cygwin-1_7_23-release:1.17
	cygwin-1_7_22-release:1.17
	cygwin-1_7_21-release:1.17
	cygwin-1_7_20-release:1.17
	cygwin-1_7_19-release:1.17
	cygwin-64bit-postmerge:1.17
	cygwin-64bit-premerge-branch:1.17.0.2
	cygwin-64bit-premerge:1.17
	cygwin-1_7_18-release:1.17
	post-ptmalloc3:1.14.6.3
	pre-ptmalloc3:1.14.6.3
	cygwin-1_7_17-release:1.14
	cygwin-64bit-branch:1.14.0.6
	cygwin-1_7_16-release:1.14
	cygwin-1_7_15-release:1.14
	cygwin-1_7_14_2-release:1.14
	cygwin-1_7_14-release:1.14
	cygwin-1_7_12-release:1.14
	cygwin-1_7_11-release:1.14
	cygwin-1_7_10-release:1.14
	signal-rewrite:1.14.0.4
	pre-notty:1.14
	cygwin-1_7_9-release:1.14
	cv-post-1_7_9:1.14.0.2
	cygwin-1_7_8-release:1.14
	cygwin-1_7_7-release:1.13
	cygwin-1_7_5-release:1.13
	cygwin-1_7_4-release:1.13
	cygwin-1_7_3-release:1.13
	cygwin-1_7_2-release:1.13
	fifo_doover3:1.13.0.4
	cygwin-1_7_1-release:1.13
	prefifo:1.13
	cv-branch-2:1.13.0.2
	pre-ripout-set_console_state_for_spawn:1.13
	EOL_registry_mounts:1.12
	preoverlapped:1.8
	drop_9x_support_start:1.8
	cr-0x5f1:1.8.0.24
	cv-branch:1.8.0.22
	pre-ptymaster-archetype:1.8
	cr-0x3b58:1.8.0.20
	cr-0x5ef:1.8.0.18
	after-mmap-privanon-noreserve:1.8
	after-mmap-revamp:1.8
	before-mmap-revamp:1.8
	cgf-more-exit-sync:1.8
	post_wait_sig_exit:1.8
	pre_wait_sig_exit:1.8
	reparent-point:1.8
	noreparent:1.8.0.16
	cr-0x5e6:1.8.0.14
	cr-0x9e:1.8.0.12
	cr-0x9d:1.8.0.10
	cgf-deleteme:1.8.0.8
	pre-sigrewrite:1.8
	corinna-01:1.8
	cr-0x9c:1.8.0.6
	cr-0x9b:1.8.0.4
	cr-0x99:1.8
	Z-emcb-cygwin_daemon:1.8.0.2
	w32api-2_2:1.7
	mingw-runtime-2_4:1.7
	pre-cgf-merge:1.8
	cgf-dev-branch:1.6.0.4
	predaemon:1.4
	cygwin_daemon_merge_HEAD:1.4
	pregp02r1:1.4.0.34
	cygnus_cvs_20020108_pre:1.4
	Z-cygwin_daemon_merge-new_HEAD:1.4
	Z-cygwin_daemon_merge_HEAD:1.4
	cygwin_daemon:1.4.0.4;
locks; strict;
comment	@ * @;


1.19
date	2014.08.18.18.24.06;	author corinna;	state Exp;
branches;
next	1.18;

1.18
date	2013.11.25.11.38.08;	author corinna;	state Exp;
branches
	1.18.2.1;
next	1.17;

1.17
date	2013.01.21.04.38.28;	author cgf;	state Exp;
branches;
next	1.16;

1.16
date	2012.10.27.12.09.38;	author ktietz;	state Exp;
branches;
next	1.15;

1.15
date	2012.10.26.20.00.12;	author ktietz;	state Exp;
branches;
next	1.14;

1.14
date	2011.01.19.09.41.54;	author corinna;	state Exp;
branches
	1.14.6.1;
next	1.13;

1.13
date	2008.05.22.01.25.37;	author cgf;	state Exp;
branches;
next	1.12;

1.12
date	2008.04.01.13.22.47;	author corinna;	state Exp;
branches;
next	1.11;

1.11
date	2008.02.01.12.37.51;	author corinna;	state Exp;
branches;
next	1.10;

1.10
date	2007.12.13.10.33.55;	author corinna;	state Exp;
branches;
next	1.9;

1.9
date	2007.12.12.12.12.24;	author corinna;	state Exp;
branches;
next	1.8;

1.8
date	2003.03.09.20.31.07;	author cgf;	state Exp;
branches;
next	1.7;

1.7
date	2003.01.27.00.16.01;	author cgf;	state Exp;
branches;
next	1.6;

1.6
date	2002.12.14.05.06.59;	author cgf;	state Exp;
branches
	1.6.4.1;
next	1.5;

1.5
date	2002.10.30.21.05.17;	author cgf;	state Exp;
branches
	1.5.2.1;
next	1.4;

1.4
date	2001.06.24.22.26.52;	author cgf;	state Exp;
branches;
next	1.3;

1.3
date	2001.05.06.16.00.23;	author cgf;	state Exp;
branches;
next	1.2;

1.2
date	2001.05.04.21.06.13;	author cgf;	state Exp;
branches;
next	1.1;

1.1
date	2001.05.04.21.02.15;	author cgf;	state Exp;
branches;
next	;

1.18.2.1
date	2014.11.13.12.53.06;	author corinna;	state Exp;
branches;
next	;

1.14.6.1
date	2012.10.26.20.01.34;	author ktietz;	state Exp;
branches;
next	1.14.6.2;

1.14.6.2
date	2012.10.27.12.11.51;	author ktietz;	state Exp;
branches;
next	1.14.6.3;

1.14.6.3
date	2013.01.21.13.52.11;	author corinna;	state Exp;
branches;
next	;

1.6.4.1
date	2003.01.27.00.16.44;	author cgf;	state Exp;
branches;
next	1.6.4.2;

1.6.4.2
date	2003.03.09.20.53.45;	author cgf;	state Exp;
branches;
next	;

1.5.2.1
date	2002.11.07.03.47.46;	author cgf;	state Exp;
branches;
next	;


desc
@@


1.19
log
@	* miscfuncs.cc (strlwr): Rename from cygwin_strlwr.  Drop __stdcall
	decoration.
	(strupr): Rename from cygwin_strupr.  Drop __stdcall decoration.
	* string.h (strlwr): Remove override macro.  Simply declare.
	(strupr): Ditto.
@
text
@/* string.h: Extra string defs

   Copyright 2001, 2002, 2003, 2007, 2008, 2011, 2012, 2013 Red Hat, Inc.

This file is part of Cygwin.

This software is a copyrighted work licensed under the terms of the
Cygwin license.  Please consult the file "CYGWIN_LICENSE" for
details. */

#ifndef _CYGWIN_STRING_H
#define _CYGWIN_STRING_H

#include_next <string.h>

#ifdef __cplusplus
extern "C" {
#endif

#undef strchrnul
#define strchrnul cygwin_strchrnul
static inline __stdcall char *
strchrnul (const char *s, int c)
{
  while (*s != (char) c && *s != 0)
    ++s;
  return (char *) s;
}

#ifdef __INSIDE_CYGWIN__

extern const char isalpha_array[];

static inline int
ascii_strcasematch (const char *cs, const char *ct)
{
  register const unsigned char *us, *ut;

  us = (const unsigned char *) cs;
  ut = (const unsigned char *) ct;

  while (us[0] == ut[0] || (us[0] ^ isalpha_array[us[0]]) == ut[0])
    {
      if (us[0] == 0)
	return 1;
      ++us, ++ut;
    }
  return 0;
}

static inline int
ascii_strncasematch (const char *cs, const char *ct, size_t n)
{
  register const unsigned char *us, *ut;

  if (!n)
   return 1;
  us = (const unsigned char *) cs;
  ut = (const unsigned char *) ct;

  while (us[0] == ut[0] || (us[0] ^ isalpha_array[us[0]]) == ut[0])
    {
      --n;
      if (!n || us[0] == 0)
        return 1;
      ++us, ++ut;
    }
  return 0;
}

#undef strcasecmp
#define strcasecmp cygwin_strcasecmp
int __stdcall cygwin_strcasecmp (const char *, const char *);

#undef strncasecmp
#define strncasecmp cygwin_strncasecmp
int __stdcall cygwin_strncasecmp (const char *, const char *, size_t);

#define strcasematch(s1,s2)	(!cygwin_strcasecmp ((s1),(s2)))
#define strncasematch(s1,s2,n)	(!cygwin_strncasecmp ((s1),(s2),(n)))

char *strlwr (char *);
char *strupr (char *);

#endif /* __INSIDE_CYGWIN__ */

char *__stdcall strccpy (char *__restrict s1, const char **__restrict s2,
			 char c);

#ifdef __cplusplus
}
#endif

#endif /* _CYGWIN_STRING_H */
@


1.18
log
@	Throughout, keep function definitions and declarations in sync with
	newlib in terms of C99 "restrict" keyword.
@
text
@d82 2
a83 7
#undef strlwr
#define strlwr cygwin_strlwr
char * __stdcall cygwin_strlwr (char *);

#undef strupr
#define strupr cygwin_strupr
char * __stdcall cygwin_strupr (char *);
@


1.18.2.1
log
@2014-11-07  Corinna Vinschen  <corinna@@vinschen.de>

	* dcrt0.cc (cygwin__cxa_atexit): Fetch correct DSO handle value
	by searching dll list.  Explain why.

2014-11-06  Corinna Vinschen  <corinna@@vinschen.de>

	* dcrt0.cc (cygwin_atexit): Change preceeding comment to reflect
	API version numbers.
	* external.cc (cygwin_internal): disable setting cxx_malloc on 64 bit.
	Add CW_FIXED_ATEXIT case.
	* include/cygwin/version.h (CYGWIN_VERSION_API_MINOR): Bump.
	* include/sys/cygwin.h (cygwin_getinfo_types): Add CW_FIXED_ATEXIT.
	* lib/atexit.c (atexit): Test running Cygwin version by checking
	return value of cygwin_internal (CW_FIXED_ATEXIT).

2014-11-05  Corinna Vinschen  <corinna@@vinschen.de>

	* lib/atexit.c (atexit): Check for being linked into the executable.
	If so, call __cxa_atexit with NULL DSO handle.  Explain why.
	* lib/dso_handle.c: New file providing fallback __dso_handle.

2014-11-05  Corinna Vinschen  <corinna@@vinschen.de>

	* Makefile.in (NEW_FUNCTIONS): Add atexit to be not exported.
	* lib/atexit.c (atexit): New, statically linkable version of atexit.
	* dcrt0.cc (cygwin_atexit): Add comment to mark this function as old
	entry point.  Indiscriminately check for DSO of function pointer for
	all functions, if checking for DSO of return address fails on x86_64.
	Change comment accordingly.

2014-11-05  Corinna Vinschen  <corinna@@vinschen.de>

	* Makefile.in (NEW_FUNCTIONS): Define target-independent.  Add target
	dependent stuff afterwards.  Globally define timezone and all xdr
	symbols as non-exported from libcygwin.a.

2014-11-03  Corinna Vinschen  <corinna@@vinschen.de>

	* cygheap.cc: Fix formatting.

2014-10-29  Corinna Vinschen  <corinna@@vinschen.de>

	* cygheap.cc (init_cygheap::init_installation_root): Create content of
	installation_dir as non-prefixed path, if possible.

2014-10-29  Corinna Vinschen  <corinna@@vinschen.de>

	* common.din (__cxa_atexit): Define as cygwin__cxa_atexit.
	* dcrt0.cc (cygwin__cxa_atexit): New function.  Explain what we do.

2014-10-28  Corinna Vinschen  <corinna@@vinschen.de>

	* globals.cc (dos_file_warning): Set to false by default.
	* path.cc (warn_msdos): Make static.  Drop test for dos_file_warning.
	(path_conv::check): Check for dos_file_warning here to avoid a function
	call in the default case.

2014-10-27  Corinna Vinschen  <corinna@@vinschen.de>

	* dcrt0.cc (cygwin_atexit): Add workaround for broken atexit calls
	in __gcc_register_frame of DLLs built with gcc-4.8.3-3.

2014-10-27  Corinna Vinschen  <corinna@@vinschen.de>

	* cygheap.cc (init_cygheap::init_installation_root): Set
	installation_dir_len.
	* cygheap.h (struct init_cygheap): Add installation_dir_len member.
	* environ.cc (win_env::add_cache): Use stpcpy for speed.
	(posify_maybe): Use tmp_pathbuf buffer instead of stack.
	(raise_envblock): New function to resize Windows environment block.
	(build_env): Fix indentation.  Call raise_envblock function.  Check if
	$PATH exists and is non-empty.  If not, add PATH variable with Cygwin
	installation directory as content to Windows environment.  Explain why.

2014-10-24  Corinna Vinschen  <corinna@@vinschen.de>

	* fhandler_proc.cc (format_proc_cygdrive): Fix symlink path if cygdrive
	is "/".

2014-10-24  Corinna Vinschen  <corinna@@vinschen.de>

	* gendef (sigdelayed): 64 bit only: Fix seh_pushreg statements in
	prologue.

2014-10-22  Yaakov Selkowitz  <yselkowi@@redhat.com>

	* common.din (stime): Export.
	* times.cc (stime): New function.
	* include/cygwin/time.h (stime): Declare.
	* include/cygwin/version.h (CYGWIN_VERSION_API_MINOR): Bump.

2014-10-20  Corinna Vinschen  <corinna@@vinschen.de>

	* fhandler_serial.cc: Revert debug code accidentally checked in on
	2014-08-18.

2014-10-20  Corinna Vinschen  <corinna@@vinschen.de>

	* path.cc (symlink_info::check): Set error from status code if opening
	the parent directory failed, but keep special case for root dirs.

2014-10-17  Corinna Vinschen  <corinna@@vinschen.de>

	* cygheap.cc (init_cygheap::init_installation_root): Just memmove
	contents of installation_root instead of calling GetModuleFileNameW
	again.  Copy installation_root to installation_dir before stripping of
	"bin" dir.  Explain what we do.
	* cygheap.h (struct init_cygheap): Add installation_dir member.

2014-10-17  Corinna Vinschen  <corinna@@vinschen.de>

	* cygtls.h (__try): Define __l_endtry as block-local label in 32 bit
	case as well.

2014-10-17  Corinna Vinschen  <corinna@@vinschen.de>

	* Makefile.in (DLL_OFILES): Add quotactl.o.
	* common.din (quotactl): Export.
	* ntdll.h: Define FILE_FS_CONTROL_INFORMATION::FileSystemControlFlags
	flag values.
	(struct _FILE_FS_CONTROL_INFORMATION): Define.
	(struct _FILE_GET_QUOTA_INFORMATION): Define.
	(typedef struct _FILE_QUOTA_INFORMATION): Define.
	(NtQueryObject): Use PVOID rather than VOID*.
	(NtQueryVolumeInformationFile): Ditto.
	(NtQueryQuotaInformationFile): Declare.
	(NtSetQuotaInformationFile): Declare.
	(NtSetVolumeInformationFile): Declare.
	* quotactl.cc: New file implementing quotactl().
	* include/sys/mount.h (BLOCK_SIZE): Define.
	(BLOCK_SIZE_BITS): Define.
	* include/sys/quota.h: New header.
	* include/cygwin/version.h (CYGWIN_VERSION_API_MINOR): Bump.

2014-10-16  Corinna Vinschen  <corinna@@vinschen.de>

	* Makefile.in (DLL_OFILES): Rearrange with one file per line.

2014-10-16  Corinna Vinschen  <corinna@@vinschen.de>

	* fhandler_proc.cc (format_proc_partitions): Extend output to print
	the windows mount points the device is mounted on.

2014-10-13  Corinna Vinschen  <corinna@@vinschen.de>

	* net.cc (cygwin_setsockopt): Drop redundant test for AF_LOCAL and
	SOCK_STREAM in SO_PEERCRED case, as in the original patch.

2014-10-12  Corinna Vinschen  <corinna@@vinschen.de>

	* dlfcn.cc (gfpod_helper): Only check for POSIX dir separator, same as
	in get_full_path_of_dll.

2014-10-12  Corinna Vinschen  <corinna@@vinschen.de>

	* dlfcn.cc (set_dl_error): Drop useless __stdcall.
	(check_path_access): Ditto.  Drop FE_CWD from call to find_exec.
	(gfpod_helper): Call path_conv::check for all paths containing a dir
	separator to more closely follow the Linux search algorithm.
	(get_full_path_of_dll): Drop useless __stdcall.
	(dlopen): Simplify RTLD_NOLOAD case by calling GetModuleHandleEx
	instead of GetModuleHandle/LoadLibrary.

2014-10-11  Christian Franke  <franke@@computer.org>

	Add setsockopt(sd, SOL_SOCKET, SO_PEERCRED, NULL, 0) to disable
	initial handshake on AF_LOCAL sockets.
	* fhandler.h (class fhandler_socket): Add no_getpeereid status flag.
	(fhandler_socket::af_local_set_no_getpeereid): New prototype.
	* fhandler_socket.cc (fhandler_socket::af_local_connect): Skip handshake
	if no_getpeereid is set.  Add debug output.
	(fhandler_socket::af_local_accept): Likewise.
	(fhandler_socket::af_local_set_no_getpeereid): New function.
	(fhandler_socket::af_local_copy): Copy no_getpeereid.
	(fhandler_socket::getpeereid): Fail if no_getpeereid is set.
	* net.cc (cygwin_setsockopt): Add SO_PEERCRED for AF_LOCAL/SOCK_STREAM
	sockets.  Add comment to explain why we need it.
	* include/cygwin/version.h (CYGWIN_VERSION_API_MINOR): Bump.

2014-10-10  Corinna Vinschen  <corinna@@vinschen.de>

	* dlfcn.cc (dlopen): Disable old 32 bit code on 64 bit.
	* dcrt0.cc (check_sanity_and_sync): Ditto.
	* dll_init.cc (dll_dllcrt0_1): Fix typo in comment.

2014-10-08  Corinna Vinschen  <corinna@@vinschen.de>

	* common.din (ffsl): Export.
	(ffsll): Export.
	* syscalls.cc (ffs): Implement using GCC intrinsic.
	(ffsl): Ditto.
	(ffsll): Ditto.
	* include/cygwin/version.h (CYGWIN_VERSION_API_MINOR): Bump.

2014-10-08  Christian Franke  <franke@@computer.org>

	* syscalls.cc (ffs): Fix crash of ffs (0x80000000) on 64 bit.

2014-10-08  Corinna Vinschen  <corinna@@vinschen.de>

	* fhandler_process.cc (format_process_statm): Fix output of dirty
	pages.  Add linefeed.

2014-09-05  Corinna Vinschen  <corinna@@vinschen.de>

	* fhandler_proc.cc (proc_tab): Add entry for cygdrive symlink.
	(format_proc_cygdrive): New function to implement /proc/cygdrive.

2014-09-05  Corinna Vinschen  <corinna@@vinschen.de>

	* exception.h (class exception): Remove unnecessary #ifdef.

2014-09-05  Corinna Vinschen  <corinna@@vinschen.de>

	* winlean.h (DNLEN): Raise to 31.  Explain why.

2014-08-28  Corinna Vinschen  <corinna@@vinschen.de>

	* fhandler_disk_file.cc (fhandler_disk_file::fstatvfs): Try the
	FileFsSizeInformation information class on filesystems choking on
	FileFsFullSizeInformation (I see you Netapp!)

2014-08-27  Corinna Vinschen  <corinna@@vinschen.de>

	* fhandler.h (fhandler_pty_slave::fch_open_handles): Add bool parameter
	to declaration.
	* fhandler_tty.cc (fhandler_pty_slave::fch_open_handles): Add bool
	parameter "chown".  Only request WRITE_OWNER access when opening pty
	synchronization objects if "chown" is set.
	(fhandler_pty_slave::fchmod): Call fch_open_handles with new bool
	parameter set to false.
	(fhandler_pty_slave::fchown): Call fch_open_handles with new bool
	parameter set to true.
	* kernel32.cc (CreateFileMappingW): Fix default standard rights for
	file mappings from READ_CONTROL to STANDARD_RIGHTS_REQUIRED to allow
	changing the DACL (fixes "access denied" error in pinfo::set_acl).

	* fhandler_disk_file.cc (fhandler_base::fstat_helper): Change debug
	output to print mode bits in octal.
	* security.cc (alloc_sd): Ditto.
	(set_file_attribute): Ditto.

2014-08-27  Corinna Vinschen  <corinna@@vinschen.de>

	* ntea.cc (read_ea): Change left-over return to __leave.  Fix
	condition to close handle.  Call NtClose rather than CloseHandle.
	(write_ea): Fix condition to close handle.  Call NtClose rather than
	CloseHandle.
	* security.cc (get_file_sd): Call pc.init_reopen_attr if a valid
	incoming handle was given, pc.get_object_attr otherwise.
	(set_file_sd): Ditto.

2014-08-26  Corinna Vinschen  <corinna@@vinschen.de>

	* path.h (path_conv::init_reopen_attr): Change from void to returning
	POBJECT_ATTRIBUTES.  Take OBJECT_ATTRIBUTES reference as argument, not
	pointer.
	* fhandler_disk_file.cc: Throughout accommodate above change.
	* syscalls.cc: Ditto.
	* ntea.cc (read_ea): Don't set hdl to NULL if it's already NULL.  Set
	attr with pc.init_reopen_attr before trying to reopen file.
	(write_ea): Ditto.
	* security.cc (get_file_sd): Use pc.init_reopen_attr rather than
	pc.get_object_attr when trying to reopen file.
	(set_file_sd): Ditto.

2014-08-25  Corinna Vinschen  <corinna@@vinschen.de>

	* cygtls.cc (san::leave/x86_64): Implement.
	* cygtls.h (class tls_pathbuf): Move counter variables into a union.
	Add 64 bit element _counters covering both counter variables to
	optimize save and restore operations.
	(class san/x86_64): Only store single 64 bit value.
	(san::san/x86_64): Implement.
	(san::leave/x86_64): Only declare here, as returns_twice function.
	Explain why.
	(class san/i686): Change type of _c_cnt and _w_cnt to uint32_t.
	(__try/x86_64): Move definition of __sebastian after the first memory
	barrier.  Drop __sebastian.setup call.

2014-08-25  Corinna Vinschen  <corinna@@vinschen.de>

	* cygtls.cc (_cygtls::remove): Revert previous patch.
	*  cygtls.h (struct _local_storage): Move pathbufs back here.
	(class san/x86_64): Revert class.  Save and restore pathbufs counters
	only.
	(class san/i686): Revert saving and restoring pathbufs counters.
	(__try/x86_64): Add a san variable and call it's setup method.
	(__except/x86_64): Call san::leave to restore pathbufs counters.
	* gendef (_sigbe): Revert previous change.
	* thread.cc (verifyable_object_state): Remove gcc 4.7 workaround in
	forward declaration as well.
	* tls_pbuf.cc (tls_pbuf): Revert previous change.
	* tls_pbuf.h (class tmp_pathbuf): Accommodate reverting pathbufs to
	locals structure.
	* tlsoffsets.h: Regenerate.
	* tlsoffsets64.h: Regenerate.

2014-08-21  Corinna Vinschen  <corinna@@vinschen.de>

	* Throughout, use __try/__except/__endtry blocks, rather than myfault
	handler.
	* cygtls.cc (_cygtls::remove): Accommodate the fact that pathbufs
	has been moved from _local_storage to _cygtls.
	* cygtls.h (class tls_pathbuf): Add comment to hint to gendef usage
	of counters.  Change type of counters to uint32_t for clarity.
	Remove _cygtls as friend class.
	(struct _local_storage): Move pathbufs from here...
	(struct _cygtls): ...to here, allowing to access it from _sigbe.
	(class san): Only define on 32 bit.  Remove errno, _c_cnt and _w_cnt
	members.
	(san::setup): Drop parameter.  Don't initialize removed members.
	(san::leave): Don't set removed members.
	(class myfault): Only define on 32 bit.
	(myfault::faulted): Only keep implementation not taking any parameter.
	Drop argument in call to sebastian.setup.
	(__try/__leave/__except/__endtry): Implement to support real SEH.  For
	now stick to SJLJ on 32 bit.
	* dcrt0.cc (dll_crt0_0): Drop 64 bit call to
	exception::install_myfault_handler.
	* exception.h (exception_handler): Define with EXCEPTION_DISPOSITION
	as return type.
	(PDISPATCHER_CONTEXT): Define as void * on 32 bit.  Define as pointer
	to _DISPATCHER_CONTEXT on 64 bit.
	(class exception): Define separately for 32 and 64 bit.
	(exception::myfault): Add handler for myfault SEH handling on 64 bit.
	(exception::exception): Fix mangled method name to account for change
	in type of last parameter.
	(exception::install_myfault_handler): Remove.
	* exceptions.cc (exception::myfault_handle): Remove.
	(exception::myfault): New SEH handler for 64 bit.
	* gendef (_sigbe): Set tls_pathbuf counters to 0 explicitely when
	returning to the caller.
	* ntdll.h: Move a comment to a better place.
	(struct _SCOPE_TABLE): Define on 64 bit.
	* thread.cc (verifyable_object_isvalid): Remove gcc 4.7 workaround.
	* tls_pbuf.cc (tls_pbuf): Fix to accommodate new place of pathbufs.
	(tls_pathbuf::destroy): Change type of loop variables to uint32_t.
	* tls_pbuf.h (class tmp_pathbuf): Change type of buffer counters to
	uint32_t.  Accommodate new place of pathbufs.
	* tlsoffsets.h: Regenerate.
	* tlsoffsets64.h: Regenerate.

2014-08-21  Corinna Vinschen  <corinna@@vinschen.de>

	* miscfuncs.cc (__import_address): Cover the first dereference to imp
	under the fault handler.

2014-08-21  Corinna Vinschen  <corinna@@vinschen.de>

	* net.cc (if_freenameindex): Don't catch a SEGV from free to fail
	loudly on double free.

2014-08-21  Corinna Vinschen  <corinna@@vinschen.de>

	* dir.cc (rmdir): Don't skip deleting fh in the ENOTEMPTY case.

2014-08-20  Corinna Vinschen  <corinna@@vinschen.de>

	* tls_pbuf.h (tmp_pathbuf::tmp_pathbuf): Convert to inline method.
	(tmp_pathbuf::~tmp_pathbuf): Ditto.
	* tls_pbuf.cc (tmp_pathbuf::tmp_pathbuf): Remove here.
	(tmp_pathbuf::~tmp_pathbuf): Ditto.

2014-08-19  Corinna Vinschen  <corinna@@vinschen.de>

	* dir.cc (dirfd): Per POSIX, return EINVAL on invalid directory stream.
	(telldir): Per POSIX, return -1 and set errno to EBADF, rather than
	just returning 0, on invalid directory stream.
	* signal.cc (sigwaitinfo): Return -1, not EFAULT, when SEGV was catched.

2014-08-19  Corinna Vinschen  <corinna@@vinschen.de>

	* autoload.cc: Replace WNet[...]A with WNet[...]W imports.
	* dcrt0.cc (initial_env): Drop strlwr calls.  Call strcasestr instead.
	* fhandler_netdrive.cc: Throughout, convert to calling WNet UNICODE
	functions.  Use tmp_pathbuf rather than alloca.  Replace call to
	strlwr with call to RtlDowncaseUnicodeString.

2014-08-19  Corinna Vinschen  <corinna@@vinschen.de>

	* fhandler.h (fhandler_serial::is_tty): Reinstantiate.

2014-08-18  Corinna Vinschen  <corinna@@vinschen.de>

	* miscfuncs.cc (strlwr): Rename from cygwin_strlwr.  Drop __stdcall
	decoration.
	(strupr): Rename from cygwin_strupr.  Drop __stdcall decoration.
	* string.h (strlwr): Remove override macro.  Simply declare.
	(strupr): Ditto.

2014-08-18  Corinna Vinschen  <corinna@@vinschen.de>

	* dtable.cc (dtable::init_std_file_from_handle): Mention that console
	handles are kernel objects since Windows 8.
	* fhandler.h (enum conn_state): Add "listener" state.
	(class fhandler_socket): Drop listener status flag.
	(fhandler_socket::lseek): Return -1 and errno ESPIPE.
	(fhandler_serial::lseek): Ditto.
	(fhandler_serial::is_tty): Remove.
	* fhandler_socket.cc (fhandler_socket::listen): Set connect_state to
	listener.  Add comment.
	(fhandler_socket::accept4): Explicitely check if the socket is listening
	and fail with EINVAL, if not.  Explain why we have to do that.
	(fhandler_socket::getpeereid): Drop now redundant test.

2014-08-15  Corinna Vinschen  <corinna@@vinschen.de>

	* winsup.h (_GNU_SOURCE): Define.  Explain why.

2014-08-14  Corinna Vinschen  <corinna@@vinschen.de>

	* dlmalloc.c: Remove unused file.
	* dlmalloc.h: Ditto.
	* malloc.cc: Update to Doug Lea's malloc version 2.8.6.

2014-08-13  Corinna Vinschen  <corinna@@vinschen.de>

	* include/cygwin/version.h (CYGWIN_VERSION_DLL_MINOR): Bump to 33.
	(CYGWIN_VERSION_API_MINOR): Bump to reflect intermediate 1.7.32 release.

2014-07-21  Corinna Vinschen  <corinna@@vinschen.de>

	* include/cygwin/version.h (CYGWIN_VERSION_DLL_MINOR): Bump to 32.

2014-05-06  Corinna Vinschen  <corinna@@vinschen.de>

	* winlean.h (PIPE_REJECT_REMOTE_CLIENTS): Drop temporary definition
	since Mingw64 catched up.
	(DNLEN): Redefine as 16.  Explain why.

2014-03-06  Corinna Vinschen  <corinna@@vinschen.de>

	* setlsapwd.cc (setlsapwd): Use RtlSecureZeroMemory to delete password
	from memory.

2014-11-05  Corinna Vinschen  <corinna@@vinschen.de>

	* new-features.xml (ov-new1.7.33): Document atexit.

2014-10-28  Corinna Vinschen  <corinna@@vinschen.de>

	* cygwinenv.xml: Change default setting of dosfilewarning.
	* new-features.xml (ov-new1.7.33): Document aforementioned change.

2014-10-27  Corinna Vinschen  <corinna@@vinschen.de>

	* new-features.xml (ov-new1.7.33): Document empty $PATH handling.

2014-10-22  Corinna Vinschen  <corinna@@vinschen.de>

	* posix.xml (std-gnu): Add ffsl, ffsll, quotactl.
	(std-notes): Add restrictions of quotactl.

2014-10-22  Yaakov Selkowitz  <yselkowi@@redhat.com>

	* new-features.xml (ov-new1.7.33): Document stime.
	* posix.xml (std-deprec): Add stime.

2014-10-22  Corinna Vinschen  <corinna@@vinschen.de>

	* new-features.xml (ov-new1.7.33): s/Linux/glibc.

2014-10-22  Corinna Vinschen  <corinna@@vinschen.de>

	* new-features.xml (ov-new1.7.33): Update to current state.

2014-08-13  Corinna Vinschen  <corinna@@vinschen.de>

	* new-features.xml (ov-new1.7.33): Add new section.
	(ov-new1.7.32): Reflect intermediate 1.7.32 release.

2014-10-21  Corinna Vinschen  <corinna@@vinschen.de>

	* cygcheck.cc (CYGLSA64_DLL): Remove unused macro.
	(dump_sysinfo): If COMSPEC isn't set in the MSVCRT environment, set it.
	Explain why.
@
text
@d82 7
a88 2
char *strlwr (char *);
char *strupr (char *);
@


1.17
log
@Throughout, update copyrights to reflect dates which correspond to main-branch
checkins.  Regularize copyright format.
@
text
@d3 1
a3 1
   Copyright 2001, 2002, 2003, 2007, 2008, 2011, 2012 Red Hat, Inc.
d92 2
a93 1
char *__stdcall strccpy (char *s1, const char **s2, char c);
@


1.16
log
@        * dcrt0.cc (quoted): Renamed strechr to strchrnul.
        * environ.cc (environ_init): Likewise.
        * sec_acl.cc (aclfromtext32): Likewise.
        * sec_auth.cc (extract_nt_dom_user): Likewise.
        * uinfo.cc (pwdgrp::next_str): Likewise.
        * string.h (strechr): Likewise.
@
text
@d3 1
a3 1
   Copyright 2001, 2007, 2008, 2011 Red Hat, Inc.
@


1.15
log
@       * string.h (strechr): Replace assembler by
       C code.
       (ascii_strcasematch): Likewise.
       (ascii_strncasematch): Likwise.
@
text
@d20 2
a21 2
#undef strechr
#define strechr cygwin_strechr
d23 1
a23 1
strechr (const char *s, int c)
@


1.14
log
@	* exec.cc (strccpy): Move function from here...
	* strfuncs.cc (strccpy): ...to here.
	* string.h (strccpy): Declare.
	* winsup.h (strccpy): Drop declaration.
@
text
@d25 3
a27 14
  register char * res;
  __asm__ __volatile__ ("\
	movb	%%al,%%ah\n\
1:	movb	(%1),%%al\n\
	cmpb	%%ah,%%al\n\
	je	2f\n\
	incl	%1\n\
	testb	%%al,%%al\n\
	jne	1b\n\
	decl	%1\n\
2:	movl	%1,%0\n\
	":"=a" (res), "=r" (s)
	:"0" (c), "1" (s));
  return res;
d37 1
a37 20
  register int __res;
  int d0, d1;
  __asm__ ("\
	.global	_isalpha_array			\n\
	cld					\n\
	andl	$0xff,%%eax			\n\
1:	lodsb					\n\
	scasb					\n\
	je	2f				\n\
	xorb	_isalpha_array(%%eax),%%al	\n\
	cmpb	-1(%%edi),%%al			\n\
	jne	3f				\n\
2:	testb	%%al,%%al			\n\
	jnz	1b				\n\
	movl	$1,%%eax			\n\
	jmp	4f				\n\
3:	xor	%0,%0				\n\
4:"
	:"=a" (__res), "=&S" (d0), "=&D" (d1)
		     : "1" (cs),   "2" (ct));
d39 10
a48 1
  return __res;
d54 1
a54 22
  register int __res;
  int d0, d1, d2;
  __asm__ ("\
	.global	_isalpha_array;			\n\
	cld					\n\
	andl	$0xff,%%eax			\n\
1:	decl	%3				\n\
	js	3f				\n\
	lodsb					\n\
	scasb					\n\
	je	2f				\n\
	xorb	_isalpha_array(%%eax),%%al	\n\
	cmpb	-1(%%edi),%%al			\n\
	jne	4f				\n\
2:	testb	%%al,%%al			\n\
	jnz	1b				\n\
3:	movl	$1,%%eax			\n\
	jmp	5f				\n\
4:	xor	%0,%0				\n\
5:"
	:"=a" (__res), "=&S" (d0), "=&D" (d1), "=&c" (d2)
		       :"1" (cs),  "2" (ct), "3" (n));
d56 13
a68 1
  return __res;
@


1.14.6.1
log
@       * string.h (strechr): Replace assembler by
       C code.
       (ascii_strcasematch): Likewise.
       (ascii_strncasematch): Likwise.
@
text
@d25 14
a38 3
  while (*s != (char) c && *s != 0)
    ++s;
  return (char *) s;
d48 20
a67 1
  register const unsigned char *us, *ut;
d69 1
a69 10
  us = (const unsigned char *) cs;
  ut = (const unsigned char *) ct;

  while (us[0] == ut[0] || (us[0] ^ isalpha_array[us[0]]) == ut[0])
    {
      if (us[0] == 0)
	return 1;
      ++us, ++ut;
    }
  return 0;
d75 22
a96 1
  register const unsigned char *us, *ut;
d98 1
a98 13
  if (!n)
   return 1;
  us = (const unsigned char *) cs;
  ut = (const unsigned char *) ct;

  while (us[0] == ut[0] || (us[0] ^ isalpha_array[us[0]]) == ut[0])
    {
      --n;
      if (!n || us[0] == 0)
        return 1;
      ++us, ++ut;
    }
  return 0;
@


1.14.6.2
log
@        * dcrt0.cc (quoted): Renamed strechr to strchrnul.
        * environ.cc (environ_init): Likewise.
        * sec_acl.cc (aclfromtext32): Likewise.
        * sec_auth.cc (extract_nt_dom_user): Likewise.
        * uinfo.cc (pwdgrp::next_str): Likewise.
        * string.h (strechr): Likewise.
@
text
@d20 2
a21 2
#undef strchrnul
#define strchrnul cygwin_strchrnul
d23 1
a23 1
strchrnul (const char *s, int c)
@


1.14.6.3
log
@Pull in changes from HEAD
@
text
@d3 1
a3 1
   Copyright 2001, 2002, 2003, 2007, 2008, 2011, 2012 Red Hat, Inc.
@


1.13
log
@* string.h (strchr): Eliminate.
* syscalls.cc (rename): Work around inexplicable C++ warning.
@
text
@d3 1
a3 1
   Copyright 2001, 2007, 2008 Red Hat, Inc.
d122 2
@


1.12
log
@	* Fix copyright dates.
@
text
@a19 21
#undef strchr
#define strchr cygwin_strchr
static inline __stdcall char *
strchr (const char *s, int c)
{
  register char * res;
  __asm__ __volatile__ ("\
	movb	%%al,%%ah\n\
1:	movb	(%1),%%al\n\
	cmpb	%%ah,%%al\n\
	je	2f\n\
	incl	%1\n\
	testb	%%al,%%al\n\
	jne	1b\n\
	xorl	%1,%1\n\
2:	movl	%1,%0\n\
	":"=a" (res), "=r" (s)
	:"0" (c), "1" (s));
  return res;
}

@


1.11
log
@	* string.h: Re-enable inline strcasematch and strncasematch
	implementations and rename to ascii_strcasematch/ascii_strncasematch.
	* dcrt0.cc: Replace str[n]casematch with ascii_str[n]casematch where
	applicable.
	* environ.cc: Ditto.
	* fhandler_process.cc: Ditto.
	* hookapi.cc: Ditto.
	* path.cc: Ditto.
	* spawn.cc: Ditto.
	* strace.cc: Ditto.
	* syscalls.cc: Ditto.
	* uinfo.cc: Ditto.
	* winf.cc: Ditto.
@
text
@d3 1
a3 1
   Copyright 2001, 2007 Red Hat, Inc.
@


1.10
log
@	* string.h: Guard cygwin internal string function definitions with
	__INSIDE_CYGWIN__.
@
text
@a63 2
/* Don't use.  Not NLS aware. */
#if 0 // Not NLS aware
a65 3
#undef strcasematch
#define strcasematch cygwin_strcasematch

d67 1
a67 1
cygwin_strcasematch (const char *cs, const char *ct)
a92 3
#undef strncasematch
#define strncasematch cygwin_strncasematch

d94 1
a94 1
cygwin_strncasematch (const char *cs, const char *ct, size_t n)
d121 1
a121 1
#else
a131 1
#endif
@


1.9
log
@	* dcrt0.cc: Include string.h.
	(initial_env): Use small_printf's %P specifier.
	* dll_init.cc (dll_list::alloc): Use PATH_MAX instead of CYG_MAX_PATH
	for path name buffer size.
	* dll_init.h (struct dll): Ditto.
	* environ.cc: Include string.h.
	(win_env::add_cache): Use temporary local buffer for path conversion.
	(posify): Ditto.
	* exceptions.cc (try_to_debug): Use CreateProcessW to allow long path
	names.
	* miscfuncs.cc: Drop unused implementations of strcasematch and
	strncasematch.
	(ch_case_eq): Drop.
	(strcasestr): Drop.
	(cygwin_wcscasecmp): New function.
	(cygwin_wcsncasecmp): New function.
	(cygwin_strcasecmp): New function.
	(cygwin_strncasecmp): New function.
	(cygwin_wcslwr): New function.
	(cygwin_wcsupr): New function.
	(cygwin_strlwr): New function.
	(cygwin_strupr): New function.
	* ntdll.h (RtlDowncaseUnicodeString): Declare.
	(RtlUpcaseUnicodeString): Declare.
	(RtlInt64ToHexUnicodeString): Fix typo in comment.
	* string.h: Disable not NLS aware implementations of strcasematch
	and strncasematch.
	(cygwin_strcasecmp): Declare.
	(strcasecmp): Define as cygwin_strcasecmp.
	(cygwin_strncasecmp): Declare.
	(strncasecmp): Define as cygwin_strncasecmp.
	(strcasematch):Define using cygwin_strcasecmp.
	(strncasematch):Define using cygwin_strncasecmp.
	(cygwin_strlwr): Declare.
	(strlwr): Define as cygwin_strlwr.
	(cygwin_strupr): Declare.
	(strupr): Define as cygwin_strupr.
	* wchar.h: New file.
	* wincap.cc (wincapc::init): Use "NT" as fix OS string.
	* winsup.h (strcasematch): Drop declaration.
	(strncasematch): Ditto.
	(strcasestr): Ditto.
@
text
@d62 2
d150 2
d155 1
@


1.8
log
@whitespace cleanup
@
text
@d3 1
a3 1
   Copyright 2001 Red Hat, Inc.
d62 2
d127 20
@


1.7
log
@* strings.h (strechr): New function.
* uinfo.cc (pwdgrp::next_str): Search only for input char in string.  Return
EOS on failure.  Don't check for NULL since it shouldn't be possible.
(pwdgrp::add_line): Revert to replacing '\n' in input line with '\0'.
(pwdgrp::next_num): Pass explicit separator character to next_str.
* grp.cc (pwdgrp::parse_group): Ditto.
* passwd.cc (pwdgrp::parse_passwd): Ditto.  Revamp test for garbage input.
* pwdgrp.h (pwdgrp::next_str): Don't use default parameter.
@
text
@d88 1
a88 1
        :"=a" (__res), "=&S" (d0), "=&D" (d1)
@


1.6
log
@* winbase.h: Turn on inline versions of Interlocked* by default.
* winbase.h: Fixup inline asm functions.  Add ilockcmpexch.
@
text
@d41 21
@


1.6.4.1
log
@merge from trunk
@
text
@a40 21
#undef strechr
#define strechr cygwin_strechr
static inline __stdcall char *
strechr (const char *s, int c)
{
  register char * res;
  __asm__ __volatile__ ("\
	movb	%%al,%%ah\n\
1:	movb	(%1),%%al\n\
	cmpb	%%ah,%%al\n\
	je	2f\n\
	incl	%1\n\
	testb	%%al,%%al\n\
	jne	1b\n\
	decl	%1\n\
2:	movl	%1,%0\n\
	":"=a" (res), "=r" (s)
	:"0" (c), "1" (s));
  return res;
}

@


1.6.4.2
log
@merge from trunk
@
text
@d88 1
a88 1
	:"=a" (__res), "=&S" (d0), "=&D" (d1)
@


1.5
log
@* external.cc (cygwin_internal): Implement CW_CMDLINE.
* pinfo.h (SIGCOMMUNE): New signal type.
(commune_result): New structure for commune functions.
(picom): New enum for commune functions.
(_pinfo::hello_pid): New.  Pid who's communicating with me.
(_pinfo::tothem): New.  Handle of communicating pipe.
(_pinfo::fromthem): Ditto.
(_pinfo::commune_recv): Declare.
(_pinfo::commune_send): Declare.
(_pinfo::alive): Declare.
(_pinfo::cmdline): Declare.
(_pinfo::lock): Declare.
* pinfo.cc (set_myself): Initialize new _pinfo lock.
(_pinfo::alive): Define.  Determines if process still exists.
(_pinfo::commune_recv): Define.  Receive info from another cooperating process.
(_pinfo::commune_send): Define.  Send info to another cooperating process.
(_pinfo::cmdline): Define.  Determine command line of a given process.
* include/sys/cygwin.h (CW_CMDLINE): Define.
*sigproc.cc (talktome): Communicate with any processes who want to talk to me.
(wait_sig): Honor __SIGCOMMUNE.
* fhandler.cc (fhandler_virtual::fixup_after_exec): Declare.
* fhandler_proc.cc: Use malloc/free/realloc throughout rather than cmalloc
since buffers don't need to be propagated to subprocesses.
* fhandler_registry.cc: Ditto.
* fhandler_virtual.cc: Ditto.
(fhandler_virtual::fixup_after_exec): Define.
* fhandler_process.cc: Ditto for malloc/free/realloc.
(process_listin): Add "cmdline".
(fhandler_process::fill_filebuf): Implement PROCESS_CMDLINE.
* miscfuncs.cc (isalpha_array): New array populated with xor values for alpha
characters to switch from one case to another.
* string.h (cygwin_strcasematch): New asm implementation of case match.
* string.h (cygwin_nstrcasematch): New asm implementation of counted case
match.
@
text
@d27 9
a35 9
		movb	%%al,%%ah\n\
	1:	movb	(%1),%%al\n\
		cmpb	%%ah,%%al\n\
		je	2f\n\
		incl	%1\n\
		testb	%%al,%%al\n\
		jne	1b\n\
		xorl	%1,%1\n\
	2:	movl	%1,%0\n\
@


1.5.2.1
log
@* include/cygwin/version.h: Bump API minor number for below export.
* cygwin.din (pututline): New exported function.
* syscalls.cc (login): Use pututiline().
(setutent): Open utmp as read/write.
(endutent): Check if utmp file is open.
(utmpname): call endutent() to close current utmp file.
(getutid): Enable all cases, use strncmp() to compare ut_id fields.
(pututline): New.
* tty.cc (create_tty_master): Set ut_pid to current pid.
* fhandler.h (fhandler_serial::vmin_): Declare as size_t.
* fhandler_serial.cc (fhandler_serial::raw_read): Use correct type for
minchars.
(fhandler_serial::ioctl): Set errno if the ClearCommError fails.
(fhandler_serial::tcsetattr): Use correct value for vmin_.
(fhandler_serial::tcgetattr): Ditto.
* fhandler_socket.cc (fhandler_socket::recvmsg): Call if from == NULL
WSARecvFrom with fromlen = NULL.
@
text
@d41 64
@


1.4
log
@forced commit
@
text
@d41 64
@


1.3
log
@* string.h (cygwin_strchr): Make 'static inline' so that things will still work
when optimized.
@
text
@@


1.2
log
@* string.h: Fix last-minute typo.
@
text
@d22 1
a22 1
extern inline __stdcall char *
@


1.1
log
@Revert much of previous erroneous checkin.  Add ChangeLog entry.

* pinfo.h: Correctly set __SIGOFFSET.
* path.cc (hash_path_name): Avoid calling library functions for simple copying
of characters.
* shortcut.c: Use WIN32_LEAN_AND_MEAN.
* smallprint.c: Ditto.
* environ.cc (getwinenv): Minor clarity fix.
* localtime.c: No need to include windows.h
* string.h: New file.
@
text
@d26 1
a26 1
  __asm__ __volatile__ ("
d36 1
a36 1
	":"=a" (__res), "=r" (s)
@

