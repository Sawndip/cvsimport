head	1.16;
access;
symbols
	cygwin-1_7_35-release:1.16
	cygwin-1_7_34-release:1.16
	cygwin-1_7_33-release:1.16
	cygwin-1_7_32-release:1.16
	cygwin-1_7_31-release:1.16
	cygwin-1_7_30-release:1.16
	cygwin-1_7_29-release:1.16
	cygwin-1_7_29-release-branchpoint:1.16.0.2
	cygwin-pre-user-db:1.16
	cygwin-1_7_28-release:1.16
	cygwin-1_7_27-release:1.16
	cygwin-1_7_26-release:1.16
	cygwin-1_7_25-release:1.16
	cygwin-1_7_24-release:1.16
	cygwin-1_7_23-release:1.16
	cygwin-1_7_22-release:1.16
	cygwin-1_7_21-release:1.16
	cygwin-1_7_20-release:1.16
	cygwin-1_7_19-release:1.16
	cygwin-64bit-postmerge:1.16
	cygwin-64bit-premerge-branch:1.15.0.2
	cygwin-64bit-premerge:1.15
	cygwin-1_7_18-release:1.15
	post-ptmalloc3:1.14.2.2
	pre-ptmalloc3:1.14.2.2
	cygwin-1_7_17-release:1.14
	cygwin-64bit-branch:1.14.0.2
	cygwin-1_7_16-release:1.13
	cygwin-1_7_15-release:1.13
	cygwin-1_7_14_2-release:1.13
	cygwin-1_7_14-release:1.13
	cygwin-1_7_12-release:1.13
	cygwin-1_7_11-release:1.13
	cygwin-1_7_10-release:1.13
	signal-rewrite:1.13.0.8
	pre-notty:1.13
	cygwin-1_7_9-release:1.13
	cv-post-1_7_9:1.13.0.6
	cygwin-1_7_8-release:1.13
	cygwin-1_7_7-release:1.13
	cygwin-1_7_5-release:1.13
	cygwin-1_7_4-release:1.13
	cygwin-1_7_3-release:1.13
	cygwin-1_7_2-release:1.13
	fifo_doover3:1.13.0.4
	cygwin-1_7_1-release:1.13
	prefifo:1.13
	cv-branch-2:1.13.0.2
	pre-ripout-set_console_state_for_spawn:1.10
	EOL_registry_mounts:1.9
	preoverlapped:1.9
	drop_9x_support_start:1.7
	cr-0x5f1:1.7.0.4
	cv-branch:1.7.0.2
	pre-ptymaster-archetype:1.6
	cr-0x3b58:1.6.0.4
	cr-0x5ef:1.6.0.2
	after-mmap-privanon-noreserve:1.6
	after-mmap-revamp:1.6
	before-mmap-revamp:1.6
	cgf-more-exit-sync:1.6
	post_wait_sig_exit:1.6
	pre_wait_sig_exit:1.6
	reparent-point:1.5
	noreparent:1.5.0.10
	cr-0x5e6:1.5.0.8
	cr-0x9e:1.5.0.6
	cr-0x9d:1.5.0.4
	cgf-deleteme:1.5.0.2
	pre-sigrewrite:1.5
	corinna-01:1.5
	cr-0x9c:1.2.0.6
	cr-0x9b:1.2.0.4
	cr-0x99:1.2
	Z-emcb-cygwin_daemon:1.2.0.2
	pre-cgf-merge:1.2
	cgf-dev-branch:1.1.0.2;
locks; strict;
comment	@ * @;


1.16
date	2013.04.23.09.44.34;	author corinna;	state Exp;
branches;
next	1.15;

1.15
date	2013.01.21.04.38.29;	author cgf;	state Exp;
branches;
next	1.14;

1.14
date	2012.07.28.14.21.34;	author corinna;	state Exp;
branches
	1.14.2.1;
next	1.13;

1.13
date	2009.04.13.22.55.00;	author davek;	state Exp;
branches;
next	1.12;

1.12
date	2009.04.11.08.07.30;	author corinna;	state Exp;
branches;
next	1.11;

1.11
date	2009.04.07.17.23.20;	author corinna;	state Exp;
branches;
next	1.10;

1.10
date	2008.05.17.21.34.05;	author cgf;	state Exp;
branches;
next	1.9;

1.9
date	2007.04.06.08.25.28;	author corinna;	state Exp;
branches;
next	1.8;

1.8
date	2007.04.04.07.37.53;	author corinna;	state Exp;
branches;
next	1.7;

1.7
date	2006.07.03.12.30.04;	author corinna;	state Exp;
branches
	1.7.4.1;
next	1.6;

1.6
date	2005.05.23.13.13.00;	author corinna;	state Exp;
branches;
next	1.5;

1.5
date	2003.10.29.08.43.10;	author corinna;	state Exp;
branches;
next	1.4;

1.4
date	2003.10.28.16.03.52;	author cgf;	state Exp;
branches;
next	1.3;

1.3
date	2003.10.28.15.13.06;	author cgf;	state Exp;
branches;
next	1.2;

1.2
date	2003.08.08.19.30.41;	author cgf;	state Exp;
branches;
next	1.1;

1.1
date	2003.04.22.14.55.01;	author corinna;	state Exp;
branches
	1.1.2.1;
next	;

1.14.2.1
date	2012.11.05.20.17.08;	author corinna;	state Exp;
branches;
next	1.14.2.2;

1.14.2.2
date	2013.01.21.13.52.13;	author corinna;	state Exp;
branches;
next	1.14.2.3;

1.14.2.3
date	2013.04.22.02.22.34;	author yselkowitz;	state Exp;
branches;
next	;

1.7.4.1
date	2007.11.12.15.30.20;	author corinna;	state Exp;
branches;
next	;

1.1.2.1
date	2003.05.10.17.20.55;	author cgf;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2003.08.27.20.19.55;	author cgf;	state Exp;
branches;
next	;


desc
@@


1.16
log
@	* Merge in cygwin-64bit-branch.
@
text
@/* stdint.h - integer types

   Copyright 2003, 2005, 2006, 2007, 2008, 2009, 2010, 2012 Red Hat, Inc.

This file is part of Cygwin.

This software is a copyrighted work licensed under the terms of the
Cygwin license.  Please consult the file "CYGWIN_LICENSE" for
details. */

#ifndef _STDINT_H
#define _STDINT_H

#include <bits/wordsize.h>

/* Exact-width integer types */

#ifndef __int8_t_defined
#define __int8_t_defined
typedef signed char int8_t;
typedef short int16_t;
typedef int int32_t;
#if __WORDSIZE == 64
typedef long int64_t;
#else
typedef long long int64_t;
#endif
#endif

typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
#ifndef __uint32_t_defined
#define __uint32_t_defined
typedef unsigned int uint32_t;
#endif
#if __WORDSIZE == 64
typedef unsigned long uint64_t;
#else
typedef unsigned long long uint64_t;
#endif

/* Minimum-width integer types */

typedef signed char int_least8_t;
typedef short int_least16_t;
typedef int int_least32_t;
#if __WORDSIZE == 64
typedef long int_least64_t;
#else
typedef long long int_least64_t;
#endif

typedef unsigned char uint_least8_t;
typedef unsigned short uint_least16_t;
typedef unsigned int uint_least32_t;
#if __WORDSIZE == 64
typedef unsigned long uint_least64_t;
#else
typedef unsigned long long uint_least64_t;
#endif

/* Fastest minimum-width integer types */

typedef signed char int_fast8_t;
#if __WORDSIZE == 64
typedef long int_fast16_t;
typedef long int_fast32_t;
typedef long int_fast64_t;
#else
typedef int int_fast16_t;
typedef int int_fast32_t;
typedef long long int_fast64_t;
#endif

typedef unsigned char uint_fast8_t;
#if __WORDSIZE == 64
typedef unsigned long uint_fast16_t;
typedef unsigned long uint_fast32_t;
typedef unsigned long uint_fast64_t;
#else
typedef unsigned int uint_fast16_t;
typedef unsigned int uint_fast32_t;
typedef unsigned long long uint_fast64_t;
#endif

/* Integer types capable of holding object pointers */

#ifndef __intptr_t_defined
#define __intptr_t_defined
#if __WORDSIZE == 64
typedef long intptr_t;
#else
typedef int intptr_t;
#endif
#endif
#if __WORDSIZE == 64
typedef unsigned long uintptr_t;
#else
typedef unsigned int uintptr_t;
#endif

/* Greatest-width integer types */

#if __WORDSIZE == 64
typedef long intmax_t;
typedef unsigned long uintmax_t;
#else
typedef long long intmax_t;
typedef unsigned long long uintmax_t;
#endif

/* C99 requires that in C++ the following macros should be defined only
   if requested. */
#if !defined (__cplusplus) || defined (__STDC_LIMIT_MACROS) \
    || defined (__INSIDE_CYGWIN__)

#if __x86_64__
# define __I64(n) n ## L
# define __U64(n) n ## UL
#else
# define __I64(n) n ## LL
# define __U64(n) n ## ULL
#endif

/* Limits of exact-width integer types */

#define INT8_MIN (-128)
#define INT16_MIN (-32768)
#define INT32_MIN (-2147483647 - 1)
#define INT64_MIN (-__I64(9223372036854775807) - 1)

#define INT8_MAX (127)
#define INT16_MAX (32767)
#define INT32_MAX (2147483647)
#define INT64_MAX (__I64(9223372036854775807))

#define UINT8_MAX (255)
#define UINT16_MAX (65535)
#define UINT32_MAX (4294967295U)
#define UINT64_MAX (__U64(18446744073709551615))

/* Limits of minimum-width integer types */

#define INT_LEAST8_MIN (-128)
#define INT_LEAST16_MIN (-32768)
#define INT_LEAST32_MIN (-2147483647 - 1)
#define INT_LEAST64_MIN (-__I64(9223372036854775807) - 1)

#define INT_LEAST8_MAX (127)
#define INT_LEAST16_MAX (32767)
#define INT_LEAST32_MAX (2147483647)
#define INT_LEAST64_MAX (__I64(9223372036854775807))

#define UINT_LEAST8_MAX (255)
#define UINT_LEAST16_MAX (65535)
#define UINT_LEAST32_MAX (4294967295U)
#define UINT_LEAST64_MAX (__U64(18446744073709551615))

/* Limits of fastest minimum-width integer types */

#define INT_FAST8_MIN (-128)
#if __WORDSIZE == 64
#define INT_FAST16_MIN (-__I64(9223372036854775807) - 1)
#define INT_FAST32_MIN (-__I64(9223372036854775807) - 1)
#else
#define INT_FAST16_MIN (-2147483647 - 1)
#define INT_FAST32_MIN (-2147483647 - 1)
#endif
#define INT_FAST64_MIN (-__I64(9223372036854775807) - 1)

#define INT_FAST8_MAX (127)
#if __WORDSIZE == 64
#define INT_FAST16_MAX (__I64(9223372036854775807))
#define INT_FAST32_MAX (__I64(9223372036854775807))
#else
#define INT_FAST16_MAX (2147483647)
#define INT_FAST32_MAX (2147483647)
#endif
#define INT_FAST64_MAX (__I64(9223372036854775807))

#define UINT_FAST8_MAX (255)
#if __WORDSIZE == 64
#define UINT_FAST16_MAX (__U64(18446744073709551615))
#define UINT_FAST32_MAX (__U64(18446744073709551615))
#else
#define UINT_FAST16_MAX (4294967295U)
#define UINT_FAST32_MAX (4294967295U)
#endif
#define UINT_FAST64_MAX (__U64(18446744073709551615))

/* Limits of integer types capable of holding object pointers */

#if __WORDSIZE == 64
#define INTPTR_MIN (-__I64(9223372036854775807) - 1)
#define INTPTR_MAX (__I64(9223372036854775807))
#define UINTPTR_MAX (__U64(18446744073709551615))
#else
#define INTPTR_MIN (-2147483647 - 1)
#define INTPTR_MAX (2147483647)
#define UINTPTR_MAX (4294967295U)
#endif

/* Limits of greatest-width integer types */

#define INTMAX_MIN (-__I64(9223372036854775807) - 1)
#define INTMAX_MAX (__I64(9223372036854775807))
#define UINTMAX_MAX (__U64(18446744073709551615))

/* Limits of other integer types */

#ifndef PTRDIFF_MIN
#if __WORDSIZE == 64
#define PTRDIFF_MIN (-9223372036854775807L - 1)
#define PTRDIFF_MAX (9223372036854775807L)
#else
#define PTRDIFF_MIN (-2147483647 - 1)
#define PTRDIFF_MAX (2147483647)
#endif
#endif

#ifndef SIG_ATOMIC_MIN
#define SIG_ATOMIC_MIN (-2147483647 - 1)
#endif
#ifndef SIG_ATOMIC_MAX
#define SIG_ATOMIC_MAX (2147483647)
#endif

#ifndef SIZE_MAX
#if __WORDSIZE == 64
#define SIZE_MAX (18446744073709551615UL)
#else
#define SIZE_MAX (4294967295U)
#endif
#endif

#ifndef WCHAR_MIN
#ifdef __WCHAR_MIN__
#define WCHAR_MIN __WCHAR_MIN__
#define WCHAR_MAX __WCHAR_MAX__
#else
#define WCHAR_MIN (0)
#define WCHAR_MAX (65535)
#endif
#endif

#ifndef WINT_MIN
#define WINT_MIN 0U
#define WINT_MAX (4294967295U)
#endif

#endif /* !__cplusplus || __STDC_LIMIT_MACROS || __INSIDE_CYGWIN__ */

/* C99 requires that in C++ the following macros should be defined only
   if requested. */
#if !defined (__cplusplus) || defined (__STDC_CONSTANT_MACROS) \
    || defined (__INSIDE_CYGWIN__)

/* Macros for minimum-width integer constant expressions */

#define INT8_C(x) x
#define INT16_C(x) x
#define INT32_C(x) x
#if __WORDSIZE == 64
#define INT64_C(x) x ## L
#else
#define INT64_C(x) x ## LL
#endif

#define UINT8_C(x) x
#define UINT16_C(x) x
#define UINT32_C(x) x ## U
#if __WORDSIZE == 64
#define UINT64_C(x) x ## UL
#else
#define UINT64_C(x) x ## ULL
#endif

/* Macros for greatest-width integer constant expressions */

#if __WORDSIZE == 64
#define INTMAX_C(x) x ## L
#define UINTMAX_C(x) x ## UL
#else
#define INTMAX_C(x) x ## LL
#define UINTMAX_C(x) x ## ULL
#endif

#endif /* !__cplusplus || __STDC_CONSTANT_MACROS || __INSIDE_CYGWIN__ */

#endif /* _STDINT_H */
@


1.15
log
@Throughout, update copyrights to reflect dates which correspond to main-branch
checkins.  Regularize copyright format.
@
text
@d14 2
d23 1
a23 1
#ifdef __x86_64__
d36 1
a36 1
#ifdef __x86_64__
d47 1
a47 1
#ifdef __x86_64__
d56 1
a56 1
#ifdef __x86_64__
d65 1
a65 1
#ifdef __x86_64__
d76 1
a76 1
#ifdef __x86_64__
d90 1
a90 1
#ifdef __x86_64__
d96 1
a96 1
#ifdef __x86_64__
d104 1
a104 1
#ifdef __x86_64__
d162 1
a162 1
#ifdef __x86_64__
d172 1
a172 1
#ifdef __x86_64__
d182 1
a182 1
#ifdef __x86_64__
d193 1
a193 1
#ifdef __x86_64__
d195 1
a195 1
#define INTPTR_MAX (__I64(9223372036854775807)
d212 1
a212 1
#ifdef __x86_64__
d229 1
a229 1
#ifdef __x86_64__
d263 1
a263 1
#ifdef __x86_64__
d272 1
a272 1
#ifdef __x86_64__
d280 1
a280 1
#ifdef __x86_64__
@


1.14
log
@	* include/inttypes.h: Add x86_64 target considerations throughout.
	Define macros in C++ according to C99 requirements.
	* include/stdint.h: Ditto.
@
text
@d3 1
a3 1
   Copyright 2003, 2006, 2007, 2008, 2009, 2010, 2012 Red Hat, Inc.
@


1.14.2.1
log
@	* fhandler_process.cc: Fix debug printf calls to be type safe.
	Add casts to avoid compiler warnings.
	(get_mem_values): Avoid using ULONG_MAX since it's NOT matching
	ULONG on 64 bit.
	* fhandler_procnet.cc (fhandler_procnet::open): Fix syscall_printf call
	to be type safe.
	(format_procnet_ifinet6): Add cast to avoid compiler warnings.
	* ntdll.h (struct _DEBUG_HEAP_BLOCK): Change Address to ULONG_PTR.

	* include/bits/wordsize.h: Fix __WORDSIZE definition for x86_64.
	Add __WORDSIZE_COMPAT32 as on Linux.
	* include/inttypes.h: Include bits/wordsize.h.  Use __WORDSIZE check
	where appropriate.
	* include/limits.h: Include bits/wordsize.h.
	(CHAR_BIT): Change definition to rely on default
	compiler definition.
	(LONG_BIT): Ditto.
	(WORD_BIT): Ditto.
	(__LONG_MAX__): Use __WORDSIZE check.
	(RTSIG_MAX): Ditto.
	* include/stdint.h: Include bits/wordsize.h.  Use __WORDSIZE check
	where appropriate.
	* include/cygwin/signal.h: Ditto.
	* include/cygwin/types.h: Ditto.

	* include/asm/byteorder.h (__ntohl): Use bswap instruction, available
	since i486.
	(__ntohs): Fix constraint to work on 64 bit CPU as well.
@
text
@a13 2
#include <bits/wordsize.h>

d21 1
a21 1
#if __WORDSIZE == 64
d34 1
a34 1
#if __WORDSIZE == 64
d45 1
a45 1
#if __WORDSIZE == 64
d54 1
a54 1
#if __WORDSIZE == 64
d63 1
a63 1
#if __WORDSIZE == 64
d74 1
a74 1
#if __WORDSIZE == 64
d88 1
a88 1
#if __WORDSIZE == 64
d94 1
a94 1
#if __WORDSIZE == 64
d102 1
a102 1
#if __WORDSIZE == 64
d160 1
a160 1
#if __WORDSIZE == 64
d170 1
a170 1
#if __WORDSIZE == 64
d180 1
a180 1
#if __WORDSIZE == 64
d191 1
a191 1
#if __WORDSIZE == 64
d210 1
a210 1
#if __WORDSIZE == 64
d227 1
a227 1
#if __WORDSIZE == 64
d261 1
a261 1
#if __WORDSIZE == 64
d270 1
a270 1
#if __WORDSIZE == 64
d278 1
a278 1
#if __WORDSIZE == 64
@


1.14.2.2
log
@Pull in changes from HEAD
@
text
@d3 1
a3 1
   Copyright 2003, 2005, 2006, 2007, 2008, 2009, 2010, 2012 Red Hat, Inc.
@


1.14.2.3
log
@* include/stdint.h (INTPTR_MAX): Fix missing parenthesis.
@
text
@d195 1
a195 1
#define INTPTR_MAX (__I64(9223372036854775807))
@


1.13
log
@
	* include/stdint.h (intptr_t):  Remove long from type.
	(uintptr_t):  Likewise.
	(INTPTR_MIN):  Remove 'L' suffix.
	(INTPTR_MAX, UINTPTR_MAX):  Likewise.
@
text
@d3 1
a3 1
   Copyright 2003, 2006, 2007 Red Hat, Inc.
d21 3
d26 1
d34 3
d38 1
d45 3
d49 1
d54 3
d58 1
d63 5
d71 1
d74 5
d82 1
d88 3
d93 4
d98 1
d102 4
d108 14
d128 1
a128 1
#define INT64_MIN (-9223372036854775807LL - 1LL)
d133 1
a133 1
#define INT64_MAX (9223372036854775807LL)
d138 1
a138 1
#define UINT64_MAX (18446744073709551615ULL)
d145 1
a145 1
#define INT_LEAST64_MIN (-9223372036854775807LL - 1LL)
d150 1
a150 1
#define INT_LEAST64_MAX (9223372036854775807LL)
d155 1
a155 1
#define UINT_LEAST64_MAX (18446744073709551615ULL)
d160 4
d166 2
a167 1
#define INT_FAST64_MIN (-9223372036854775807LL - 1LL)
d170 4
d176 2
a177 1
#define INT_FAST64_MAX (9223372036854775807LL)
d180 4
d186 2
a187 1
#define UINT_FAST64_MAX (18446744073709551615ULL)
d191 5
d199 1
d203 3
a205 3
#define INTMAX_MIN (-9223372036854775807LL - 1LL)
#define INTMAX_MAX (9223372036854775807LL)
#define UINTMAX_MAX (18446744073709551615ULL)
d210 4
d217 1
d227 3
d232 1
d249 7
d261 3
d265 1
d270 3
d274 1
d278 4
d284 3
@


1.12
log
@	* include/stdint.h (INTPTR_MIN, INTPTR_MAX):  Add 'L' suffix.
	(WINT_MAX):  Add 'U' suffix.
@
text
@d60 1
a60 1
typedef long intptr_t;
d62 1
a62 1
typedef unsigned long uintptr_t;
d122 3
a124 3
#define INTPTR_MIN (-2147483647L - 1L)
#define INTPTR_MAX (2147483647L)
#define UINTPTR_MAX (4294967295UL)
@


1.11
log
@	* include/stdint.h (int_least32_t): Define as int.
	(uint_least32_t): Ditto, unsigned.
	(int_fast16_t): Define as int.
	(int_fast32_t): Ditto.
	(uint_fast16_t): Ditto, unsigned.
	(uint_fast32_t): Ditto.
	(UINT32_MAX): Remove `L' long marker.
	(UINT_LEAST32_MAX): Ditto.
	(UINT_FAST16_MAX): Ditto.
	(UINT_FAST32_MAX): Ditto.
	(INT32_C): Ditto.
	(UINT32_C): Ditto.
@
text
@d122 2
a123 2
#define INTPTR_MIN (-2147483647 - 1)
#define INTPTR_MAX (2147483647)
d147 1
a147 1
#define SIZE_MAX (4294967295UL)
d162 1
a162 1
#define WINT_MAX UINT_MAX
@


1.10
log
@* include/stdint.h: Use int rather than long for {u,}int32_t.
@
text
@d36 1
a36 1
typedef long int_least32_t;
d41 1
a41 1
typedef unsigned long uint_least32_t;
d47 2
a48 2
typedef long int_fast16_t;
typedef long int_fast32_t;
d52 2
a53 2
typedef unsigned long uint_fast16_t;
typedef unsigned long uint_fast32_t;
d83 1
a83 1
#define UINT32_MAX (4294967295UL)
d100 1
a100 1
#define UINT_LEAST32_MAX (4294967295UL)
d116 2
a117 2
#define UINT_FAST16_MAX (4294967295UL)
#define UINT_FAST32_MAX (4294967295UL)
d169 1
a169 1
#define INT32_C(x) x ## L
d174 1
a174 1
#define UINT32_C(x) x ## UL
@


1.9
log
@	* include/stdint.h (WINT_MIN): Fix sign.
@
text
@d20 1
a20 1
typedef long int32_t;
d28 1
a28 1
typedef unsigned long uint32_t;
@


1.8
log
@	* include/stdint.h (WINT_MIN, WINT_MAX): Fix definition.
@
text
@d161 1
a161 1
#define WINT_MIN 0
@


1.7
log
@	* include/stdint.h (UINT8_C, UINT16_C): Unsigned types smaller
	than int promote to signed int.
@
text
@d3 1
a3 1
   Copyright 2003, 2006 Red Hat, Inc.
d161 2
a162 2
#define WINT_MIN (-2147483647 - 1)
#define WINT_MAX (2147483647)
@


1.7.4.1
log
@2007-11-08  Christopher Faylor  <me+cygwin@@cgf.cx>

	* dllfixdbg: Eliminate extra objcopy step.

2007-11-07  Pedro Alves  <pedro_alves@@portugalmail.pt>

	* dllfixdbg: Pass --only-keep-debug to objcopy, instead of
	selecting the sections manually.

2007-11-06  Corinna Vinschen  <corinna@@vinschen.de>

	* thread.cc (pthread_key_create): Drop check for incoming valid object.

2007-11-06  Corinna Vinschen  <corinna@@vinschen.de>

	* shm.cc: Include sync.h
	(struct shm_shmid_list): Add ref_count member.
	(struct shm_attached_list): Remove hdl and size members.  Add a parent
	member pointing to referenced shm_shmid_list entry.
	(shm_guard): New muto.
	(SLIST_LOCK): Define.
	(SLIST_UNLOCK): Define.
	(fixup_shms_after_fork): Use hdl and size members of parent
	shm_shmid_list entry.
	(shmat): Access sequential bookkeeping lists in a thread safe way.
	Accommodate change in list element layout.  Align comments.
	(shmctl): Ditto.
	(shmdt): Ditto.
	(shmget): Ditto.

2007-11-05  Corinna Vinschen  <corinna@@vinschen.de>

	* shm.cc (shmctl): On IPC_RMID don't unmap views and don't close handle
	if the map is still referenced to emulate Linux and BSD behaviour.

2007-11-05  Corinna Vinschen  <corinna@@vinschen.de>

	* shm.cc (shmctl): On IPC_RMID also unmap all views on shared mem
	as well as connected shm_attached_list entry.

2007-10-30  Corinna Vinschen  <corinna@@vinschen.de>

	* fhandler_disk_file.cc (fhandler_base::fstat_helper): Don't remove
	write bits for directories with R/O attribute.
	(fhandler_base::fhaccess): Don't shortcircuit R/O attribute with W_OK
	scenarios for directories.

2007-09-26  Corinna Vinschen  <corinna@@vinschen.de>

	* termios.cc (setspeed): Support new baud rates introduced 2007-02-05.

2007-09-18  Corinna Vinschen  <corinna@@vinschen.de>

	* mmap.cc (fh_disk_file): Delete as global static variable and...
	(mmap64): ...define as local pointer to make mmap thread-safe.
	Accommodate throughout.  Only initialize fh_disk_file after file could
	be opened with GENERIC_EXECUTE access.

2007-09-06  Brian Dessent  <brian@@dessent.net>

	* include/sys/stdio.h (_flockfile): Don't try to lock a FILE
	that has the __SSTR flag set.
	(_ftrylockfile): Likewise.
	(_funlockfile): Likewise.

2007-08-24  Corinna Vinschen  <corinna@@vinschen.de>

	* syscalls.cc (open): Don't follow symlinks if O_EXCL is given.

2007-08-09  Ernie Coskrey  <Ernie.Coskrey@@steeleye.com>

	* gendef (sigbe): Reset "incyg" while the stack lock is active to avoid
	a potential race.

2007-08-01  Corinna Vinschen  <corinna@@vinschen.de>

	* localtime.cc (tzsetwall): Don't set TZ.

2007-07-17  Corinna Vinschen  <corinna@@vinschen.de>

	* fhandler.cc (fhandler_base::fhaccess): Add check for R/O file system.

2007-07-14  Christopher Faylor  <me+cygwin@@cgf.cx>

	* init.cc (in_dllentry): Delete.
	(dll_entry): Remove assignment to deleted variable.
	* winsup.h (in_dllentry): Delete declaration.
	* exceptions.cc (inside_kernel): Use another method to see if we are in
	dll_entry phase.

2007-07-14  Christopher Faylor  <me+cygwin@@cgf.cx>

	* init.cc (in_dllentry): Make NO_COPY to avoid spurious false positives.

2007-07-09  Christopher Faylor  <me+cygwin@@cgf.cx>

	* dlfcn.cc (dlclose): Don't close handle returned from
	GetModuleHandle(NULL).

2007-07-06  Corinna Vinschen  <corinna@@vinschen.de>

	* times.cc (gettimeofday): Align definition to POSIX.

2007-07-04  Corinna Vinschen  <corinna@@vinschen.de>

	* times.cc: Define __timezonefunc__ before including time.h to protect
	definition of timezone function.

2007-07-04  Corinna Vinschen  <corinna@@vinschen.de>

	* include/cygwin/time.h: Switch to timezone variable by default.  Add
	comment.

2007-06-27  Corinna Vinschen  <corinna@@vinschen.de>

	* shared_info.h (SHARED_INFO_CB): Accommodate change to shared_info.
	(CURR_SHARED_MAGIC): Ditto.
	(class shared_info): Add heap_slop_inited member.
	* shared.cc (shared_info::heap_slop_size): Use heap_slop_inited to
	track initializing heap_slop since 0 is a valid value for heap_slop.
	Drop useless < 0 consideration.

2007-06-12  Christopher Faylor  <me+cygwin@@cgf.cx>

	* signal.cc (usleep): Use useconds_t for the type as per POSIX.

2007-06-12  Corinna Vinschen  <corinna@@vinschen.de>

	* fhandler.cc (fhandler_base::fstat): Set pipe permission bits more
	correctly.

2007-05-29  Corinna Vinschen  <corinna@@vinschen.de>

	* dtable.cc (dtable::set_file_pointers_for_exec): Call SetFilePointer
	correctly for 64 bit file access.  Comment out functionality.
	* fhandler.cc (fhandler_base::open): Don't set append_mode.
	(fhandler_base::write): Check for O_APPEND instead of append_mode.
	Call SetFilePointer correctly for 64 bit file access.  Handle
	errors from SetFilePointer.
	* fhandler.h (class fhandler_base): Drop append_mode status flag.
	* fhandler_disk_file.cc (fhandler_base::fstat_helper): Handle
	seeking correctly for 64 bit file access.

2007-05-21  Christian Franke <franke@@computer.org>

	* fhandler_floppy.cc (fhandler_dev_floppy::lseek): Don't invalidate
	devbuf if new position is within buffered range.

2007-05-21  Eric Blake  <ebb9@@byu.net>

	* include/search.h (hsearch_r): Provide declaration.

2007-05-21  Christian Franke <franke@@computer.org>
	     Corinna Vinschen  <corinna@@vinschen.de>

	* fhandler_floppy.cc (fhandler_dev_floppy::lseek): Set buf size to
	sector size.  Simplify non-sector aligned case.  Handle errors from
	raw_read.

2007-05-15  Corinna Vinschen  <corinna@@vinschen.de>

	* fhandler_socket.cc (adjust_socket_file_mode): New inline function.
	(fhandler_socket::fchmod): Squeeze mode through adjust_socket_file_mode
	before using it.
	(fhandler_socket::bind): Ditto.

2007-04-18  Brian Dessent  <brian@@dessent.net>

	* cygwin.sc: Remove duplicated .debug_macinfo section.
	* dllfixdbg: Also copy DWARF-2 sections into .dbg file.

2007-04-06  Eric Blake  <ebb9@@byu.net>

	* include/stdint.h (WINT_MIN): Fix sign.

2007-04-04  Eric Blake  <ebb9@@byu.net>

	* include/stdint.h (WINT_MIN, WINT_MAX): Fix definition.

2007-03-28  Christopher Faylor  <me@@cgf.cx>

	* spawn.cc (spawn_guts): Start pure-windows processes in a suspended
	state to avoid potential DuplicateHandle problems.

2007-03-07  Christopher Faylor  <me@@cgf.cx>

	* signal.cc (handle_sigprocmask): Remove extraneous
	sig_dispatch_pending.

2007-02-26  Corinna Vinschen  <corinna@@vinschen.de>

	* fhandler.cc (fhandler_base::fstat): Set all file times to arbitrary
	fixed value.

2007-02-20  Christopher Faylor  <me@@cgf.cx>

	* exceptions.cc (_cygtls::signal_exit): Only call myself.exit when when
	exit_state indicates that we've visited do_exit.
	* sync.h (lock_process::lock_process): Use renamed exit_state -
	ES_PROCESS_LOCKED.
	* winsup.h: Rename ES_MUTO_SET to ES_PROCESS_LOCKED.

2007-02-20  Corinna Vinschen  <corinna@@vinschen.de>

	* fhandler_socket.cc (fhandler_socket::bind): Remove printing wrong
	errno in debug output.

2007-02-05  Corinna Vinschen  <corinna@@vinschen.de>

	* fhandler_serial.cc (fhandler_serial::tcsetattr): Add support for
	baud rates up to 3000000 baud.  Add missing 128K and 256K cases.
	(fhandler_serial::tcgetattr): Ditto.
	* include/sys/termios.h: Add baud rate definitions from B460800 up to
	B3000000.

2007-01-04  Brian Ford  <Brian.Ford@@FlightSafety.com>
	     Corinna Vinschen  <corinna@@vinschen.de>

	* fhandler.h (PREFERRED_IO_BLKSIZE): Define as 64K.
	* fhandler.cc (fhandler_base::fstat): Set st_blksize to
	PREFERRED_IO_BLKSIZE.
	* fhandler_disk_file.cc (fhandler_base::fstat_helper): Ditto.
	* fhandler_mailslot.cc (fhandler_mailslot::fstat): Ditto.
	* fhandler_raw.cc (fhandler_dev_raw::fstat): Ditto.

2006-11-08  Corinna Vinschen  <corinna@@vinschen.de>

	* security.cc (get_token_group_sidlist): Always add the local
	group to the token.

2006-07-14  Corinna Vinschen  <corinna@@vinschen.de>

	* security.cc (get_token_group_sidlist): Always add the interactive
	group to the token.  Create logon_id group SID by copying it from
	incoming group list.
@
text
@d3 1
a3 1
   Copyright 2003, 2006, 2007 Red Hat, Inc.
d161 2
a162 2
#define WINT_MIN 0U
#define WINT_MAX UINT_MAX
@


1.6
log
@	* include/stdint.h (INTMAX_C, UINTMAX_C): Fix definition.
@
text
@d3 1
a3 1
   Copyright 2003 Red Hat, Inc.
d172 2
a173 2
#define UINT8_C(x) x ## U
#define UINT16_C(x) x ## U
@


1.5
log
@	* include/stdint.h: Prevent signed->unsigned conversion for 32 and
	64 bit min value constants.
@
text
@d179 2
a180 2
#define INTMAX_C(x) x ## L
#define UINTMAX_C(x) x ## UL
@


1.4
log
@* include/stdint.h: Duplicate below effort for rest of *64_*.
@
text
@d73 2
a74 2
#define INT32_MIN (-2147483647-1)
#define INT64_MIN (-9223372036854775808LL)
d90 2
a91 2
#define INT_LEAST32_MIN (-2147483648)
#define INT_LEAST64_MIN (-9223372036854775808LL)
d106 3
a108 3
#define INT_FAST16_MIN (-2147483648)
#define INT_FAST32_MIN (-2147483648)
#define INT_FAST64_MIN (-9223372036854775808LL)
d122 1
a122 1
#define INTPTR_MIN (-2147483648)
d128 2
a129 2
#define INTMAX_MIN (-9223372036854775808)
#define INTMAX_MAX (9223372036854775807)
d135 1
a135 1
#define PTRDIFF_MIN (-2147483648)
d140 1
a140 1
#define SIG_ATOMIC_MIN (-2147483648)
d161 1
a161 1
#define WINT_MIN (-2147483648)
@


1.3
log
@* include/stdint.h: Correctly define INT64_MAX.
@
text
@d74 1
a74 1
#define INT64_MIN (-9223372036854775808)
d91 1
a91 1
#define INT_LEAST64_MIN (-9223372036854775808)
d96 1
a96 1
#define INT_LEAST64_MAX (9223372036854775807)
d108 1
a108 1
#define INT_FAST64_MIN (-9223372036854775808)
d113 1
a113 1
#define INT_FAST64_MAX (9223372036854775807)
@


1.2
log
@* include/stdint.h: Correctly define INT32_MIN.
@
text
@d79 1
a79 1
#define INT64_MAX (9223372036854775807)
@


1.1
log
@	* include/inttypes.h: New file.
	* include/stdint.h: New file.
	* include/cygwin/in.h: Include stdint.h instead of sys/types.h.
	* include/cygwin/types.h: Include stdint.h.  Remove typedefs for
	intN_t and uintN_t since these are defined in stdint.h now.
@
text
@d73 1
a73 1
#define INT32_MIN (-2147483648)
@


1.1.2.1
log
@merge from trunk
@
text
@@


1.1.2.2
log
@merge from trunk
@
text
@d73 1
a73 1
#define INT32_MIN (-2147483647-1)
@


