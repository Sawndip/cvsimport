head	1.7;
access;
symbols
	cygwin-1_7_35-release:1.7
	cygwin-1_7_34-release:1.7
	cygwin-1_7_33-release:1.7
	cygwin-1_7_32-release:1.7
	cygwin-1_7_31-release:1.7
	cygwin-1_7_30-release:1.7
	cygwin-1_7_29-release:1.7
	cygwin-1_7_29-release-branchpoint:1.7.0.2
	cygwin-pre-user-db:1.7
	cygwin-1_7_28-release:1.7
	cygwin-1_7_27-release:1.7
	cygwin-1_7_26-release:1.7
	cygwin-1_7_25-release:1.7
	cygwin-1_7_24-release:1.7
	cygwin-1_7_23-release:1.7
	cygwin-1_7_22-release:1.7
	cygwin-1_7_21-release:1.7
	cygwin-1_7_20-release:1.7
	cygwin-1_7_19-release:1.7
	cygwin-64bit-postmerge:1.7
	cygwin-64bit-premerge-branch:1.6.0.4
	cygwin-64bit-premerge:1.6
	cygwin-1_7_18-release:1.6
	post-ptmalloc3:1.6.2.1
	pre-ptmalloc3:1.6.2.1
	cygwin-1_7_17-release:1.6
	cygwin-64bit-branch:1.6.0.2
	cygwin-1_7_16-release:1.5
	cygwin-1_7_15-release:1.5
	cygwin-1_7_14_2-release:1.5
	cygwin-1_7_14-release:1.5
	cygwin-1_7_12-release:1.5
	cygwin-1_7_11-release:1.5
	cygwin-1_7_10-release:1.5
	signal-rewrite:1.5.0.4
	pre-notty:1.5
	cygwin-1_7_9-release:1.5
	cv-post-1_7_9:1.5.0.2
	cygwin-1_7_8-release:1.5
	cygwin-1_7_7-release:1.5
	cygwin-1_7_5-release:1.4
	cygwin-1_7_4-release:1.4
	cygwin-1_7_3-release:1.4
	cygwin-1_7_2-release:1.4
	fifo_doover3:1.4.0.4
	cygwin-1_7_1-release:1.4
	prefifo:1.4
	cv-branch-2:1.4.0.2
	pre-ripout-set_console_state_for_spawn:1.2
	EOL_registry_mounts:1.2
	preoverlapped:1.2
	drop_9x_support_start:1.2
	cr-0x5f1:1.2.0.8
	cv-branch:1.2.0.6
	pre-ptymaster-archetype:1.2
	cr-0x3b58:1.2.0.4
	cr-0x5ef:1.2.0.2
	after-mmap-privanon-noreserve:1.2
	after-mmap-revamp:1.2
	before-mmap-revamp:1.2
	cgf-more-exit-sync:1.2
	post_wait_sig_exit:1.2
	pre_wait_sig_exit:1.2
	reparent-point:1.1
	noreparent:1.1.0.18
	cr-0x5e6:1.1.0.16
	cr-0x9e:1.1.0.14
	cr-0x9d:1.1.0.12
	cgf-deleteme:1.1.0.10
	pre-sigrewrite:1.1
	corinna-01:1.1
	cr-0x9c:1.1.0.8
	cr-0x9b:1.1.0.6
	cr-0x99:1.1
	Z-emcb-cygwin_daemon:1.1.0.4
	pre-cgf-merge:1.1
	cgf-dev-branch:1.1.0.2;
locks; strict;
comment	@ * @;


1.7
date	2013.04.23.09.44.34;	author corinna;	state Exp;
branches;
next	1.6;

1.6
date	2012.07.28.14.21.34;	author corinna;	state Exp;
branches
	1.6.2.1;
next	1.5;

1.5
date	2010.05.26.13.37.48;	author corinna;	state Exp;
branches;
next	1.4;

1.4
date	2009.03.15.13.29.04;	author corinna;	state Exp;
branches;
next	1.3;

1.3
date	2009.02.16.15.36.01;	author corinna;	state Exp;
branches;
next	1.2;

1.2
date	2005.06.10.12.11.34;	author corinna;	state Exp;
branches;
next	1.1;

1.1
date	2003.04.22.14.55.01;	author corinna;	state Exp;
branches
	1.1.2.1;
next	;

1.6.2.1
date	2012.11.05.20.17.08;	author corinna;	state Exp;
branches;
next	;

1.1.2.1
date	2003.05.10.17.20.55;	author cgf;	state Exp;
branches;
next	;


desc
@@


1.7
log
@	* Merge in cygwin-64bit-branch.
@
text
@/* inttypes.h - fixed size integer types

   Copyright 2003, 2005, 2009, 2010, 2012 Red Hat, Inc.

This file is part of Cygwin.

This software is a copyrighted work licensed under the terms of the
Cygwin license.  Please consult the file "CYGWIN_LICENSE" for
details. */

#ifndef _INTTYPES_H
#define _INTTYPES_H

#include <stdint.h>
#define __need_wchar_t
#include <stddef.h>
#include <bits/wordsize.h>

/* C99 requires that in C++ the following macros should be defined only
   if requested. */
#if !defined (__cplusplus) || defined (__STDC_FORMAT_MACROS) \
    || defined (__INSIDE_CYGWIN__)

#if __WORDSIZE == 64
#define __PRI64 "l"
#define __PRIFAST "l"
#define __PRIPTR "l"
#else
#define __PRI64 "ll"
#define __PRIFAST
#define __PRIPTR
#endif

/* fprintf() macros for signed integers */

#define PRId8 "d"
#define PRId16 "d"
#define PRId32 "d"
#define PRId64 __PRI64 "d"

#define PRIdLEAST8 "d"
#define PRIdLEAST16 "d"
#define PRIdLEAST32 "d"
#define PRIdLEAST64 __PRI64 "d"

#define PRIdFAST8 "d"
#define PRIdFAST16 __PRIFAST "d"
#define PRIdFAST32 __PRIFAST "d"
#define PRIdFAST64 __PRI64 "d"

#define PRIdMAX __PRI64 "d"
#define PRIdPTR __PRIPTR "d"

#define PRIi8 "i"
#define PRIi16 "i"
#define PRIi32 "i"
#define PRIi64 __PRI64 "i"

#define PRIiLEAST8 "i"
#define PRIiLEAST16 "i"
#define PRIiLEAST32 "i"
#define PRIiLEAST64 __PRI64 "i"

#define PRIiFAST8 "i"
#define PRIiFAST16 __PRIFAST "i"
#define PRIiFAST32 __PRIFAST "i"
#define PRIiFAST64 __PRI64 "i"

#define PRIiMAX __PRI64 "i"
#define PRIiPTR __PRIPTR "i"

/* fprintf() macros for unsigned integers */

#define PRIo8 "o"
#define PRIo16 "o"
#define PRIo32 "o"
#define PRIo64 __PRI64 "o"

#define PRIoLEAST8 "o"
#define PRIoLEAST16 "o"
#define PRIoLEAST32 "o"
#define PRIoLEAST64 __PRI64 "o"

#define PRIoFAST8 "o"
#define PRIoFAST16 __PRIFAST "o"
#define PRIoFAST32 __PRIFAST "o"
#define PRIoFAST64 __PRI64 "o"

#define PRIoMAX __PRI64 "o"
#define PRIoPTR __PRIPTR "o"

#define PRIu8 "u"
#define PRIu16 "u"
#define PRIu32 "u"
#define PRIu64 __PRI64 "u"

#define PRIuLEAST8 "u"
#define PRIuLEAST16 "u"
#define PRIuLEAST32 "u"
#define PRIuLEAST64 __PRI64 "u"

#define PRIuFAST8 "u"
#define PRIuFAST16 __PRIFAST "u"
#define PRIuFAST32 __PRIFAST "u"
#define PRIuFAST64 __PRI64 "u"

#define PRIuMAX __PRI64 "u"
#define PRIuPTR __PRIPTR "u"

#define PRIx8 "x"
#define PRIx16 "x"
#define PRIx32 "x"
#define PRIx64 __PRI64 "x"

#define PRIxLEAST8 "x"
#define PRIxLEAST16 "x"
#define PRIxLEAST32 "x"
#define PRIxLEAST64 __PRI64 "x"

#define PRIxFAST8 "x"
#define PRIxFAST16 __PRIFAST "x"
#define PRIxFAST32 __PRIFAST "x"
#define PRIxFAST64 __PRI64 "x"

#define PRIxMAX __PRI64 "x"
#define PRIxPTR __PRIPTR "x"

#define PRIX8 "X"
#define PRIX16 "X"
#define PRIX32 "X"
#define PRIX64 __PRI64 "X"

#define PRIXLEAST8 "X"
#define PRIXLEAST16 "X"
#define PRIXLEAST32 "X"
#define PRIXLEAST64 __PRI64 "X"

#define PRIXFAST8 "X"
#define PRIXFAST16 __PRIFAST "X"
#define PRIXFAST32 __PRIFAST "X"
#define PRIXFAST64 __PRI64 "X"

#define PRIXMAX __PRI64 "X"
#define PRIXPTR __PRIPTR "X"

/* fscanf() macros for signed integers */

#if __WORDSIZE == 64
#define __SCN64 "l"
#define __SCNFAST "l"
#define __SCNPTR "l"
#else
#define __SCN64 "ll"
#define __SCNFAST
#define __SCNPTR
#endif

#define SCNd8 "hhd"
#define SCNd16 "hd"
#define SCNd32 "d"
#define SCNd64 __SCN64 "d"

#define SCNdLEAST8 "hhd"
#define SCNdLEAST16 "hd"
#define SCNdLEAST32 "d"
#define SCNdLEAST64 __SCN64 "d"

#define SCNdFAST8 "hhd"
#define SCNdFAST16 __SCNFAST "d"
#define SCNdFAST32 __SCNFAST "d"
#define SCNdFAST64 __SCN64 "d"

#define SCNdMAX __SCN64 "d"
#define SCNdPTR __SCNPTR "d"

#define SCNi8 "hhi"
#define SCNi16 "hi"
#define SCNi32 "i"
#define SCNi64 __SCN64 "i"

#define SCNiLEAST8 "hhi"
#define SCNiLEAST16 "hi"
#define SCNiLEAST32 "i"
#define SCNiLEAST64 __SCN64 "i"

#define SCNiFAST8 "hhi"
#define SCNiFAST16 __SCNFAST "i"
#define SCNiFAST32 __SCNFAST "i"
#define SCNiFAST64 __SCN64 "i"

#define SCNiMAX __SCN64 "i"
#define SCNiPTR __SCNPTR "i"

/* fscanf() macros for unsigned integers */

#define SCNo8 "hho"
#define SCNo16 "ho"
#define SCNo32 "o"
#define SCNo64 __SCN64 "o"

#define SCNoLEAST8 "hho"
#define SCNoLEAST16 "ho"
#define SCNoLEAST32 "o"
#define SCNoLEAST64 __SCN64 "o"

#define SCNoFAST8 "hho"
#define SCNoFAST16 __SCNFAST "o"
#define SCNoFAST32 __SCNFAST "o"
#define SCNoFAST64 __SCN64 "o"

#define SCNoMAX __SCN64 "o"
#define SCNoPTR __SCNPTR "o"

#define SCNu8 "hhu"
#define SCNu16 "hu"
#define SCNu32 "u"
#define SCNu64 __SCN64 "u"

#define SCNuLEAST8 "hhu"
#define SCNuLEAST16 "hu"
#define SCNuLEAST32 "u"
#define SCNuLEAST64 __SCN64 "u"

#define SCNuFAST8 "hhu"
#define SCNuFAST16 __SCNFAST "u"
#define SCNuFAST32 __SCNFAST "u"
#define SCNuFAST64 __SCN64 "u"

#define SCNuMAX __SCN64 "u"
#define SCNuPTR __SCNPTR "u"

#define SCNx8 "hhx"
#define SCNx16 "hx"
#define SCNx32 "x"
#define SCNx64 __SCN64 "x"

#define SCNxLEAST8 "hhx"
#define SCNxLEAST16 "hx"
#define SCNxLEAST32 "x"
#define SCNxLEAST64 __SCN64 "x"

#define SCNxFAST8 "hhx"
#define SCNxFAST16 __SCNFAST "x"
#define SCNxFAST32 __SCNFAST "x"
#define SCNxFAST64 __SCN64 "x"

#define SCNxMAX __SCN64 "x"
#define SCNxPTR __SCNPTR "x"

#endif /* !__cplusplus || __STDC_FORMAT_MACROS || __INSIDE_CYGWIN__ */

#ifdef __cplusplus
extern "C" {
#endif

#include <_ansi.h>

typedef struct {
  intmax_t quot;
  intmax_t rem;
} imaxdiv_t;

intmax_t _EXFUN(imaxabs, (intmax_t));
imaxdiv_t _EXFUN(imaxdiv, (intmax_t, intmax_t));
intmax_t _EXFUN(strtoimax, (const char *, char **, int));
uintmax_t _EXFUN(strtoumax, (const char *, char **, int));
intmax_t _EXFUN(wcstoimax, (const wchar_t *, wchar_t **, int));
uintmax_t _EXFUN(wcstoumax, (const wchar_t *, wchar_t **, int));

#ifdef __cplusplus
}
#endif

#endif /* _INTTYPES_H */
@


1.6
log
@	* include/inttypes.h: Add x86_64 target considerations throughout.
	Define macros in C++ according to C99 requirements.
	* include/stdint.h: Ditto.
@
text
@d17 1
d24 1
a24 1
#ifdef __x86_64__
d148 1
a148 1
#ifdef __x86_64__
@


1.6.2.1
log
@	* fhandler_process.cc: Fix debug printf calls to be type safe.
	Add casts to avoid compiler warnings.
	(get_mem_values): Avoid using ULONG_MAX since it's NOT matching
	ULONG on 64 bit.
	* fhandler_procnet.cc (fhandler_procnet::open): Fix syscall_printf call
	to be type safe.
	(format_procnet_ifinet6): Add cast to avoid compiler warnings.
	* ntdll.h (struct _DEBUG_HEAP_BLOCK): Change Address to ULONG_PTR.

	* include/bits/wordsize.h: Fix __WORDSIZE definition for x86_64.
	Add __WORDSIZE_COMPAT32 as on Linux.
	* include/inttypes.h: Include bits/wordsize.h.  Use __WORDSIZE check
	where appropriate.
	* include/limits.h: Include bits/wordsize.h.
	(CHAR_BIT): Change definition to rely on default
	compiler definition.
	(LONG_BIT): Ditto.
	(WORD_BIT): Ditto.
	(__LONG_MAX__): Use __WORDSIZE check.
	(RTSIG_MAX): Ditto.
	* include/stdint.h: Include bits/wordsize.h.  Use __WORDSIZE check
	where appropriate.
	* include/cygwin/signal.h: Ditto.
	* include/cygwin/types.h: Ditto.

	* include/asm/byteorder.h (__ntohl): Use bswap instruction, available
	since i486.
	(__ntohs): Fix constraint to work on 64 bit CPU as well.
@
text
@a16 1
#include <bits/wordsize.h>
d23 1
a23 1
#if __WORDSIZE == 64
d147 1
a147 1
#if __WORDSIZE == 64
@


1.5
log
@	* include/inttypes.h: Change PTR definitions to int to align with the
	stdint.h type definitions of intptr_t/uintptr_t.
@
text
@d3 1
a3 1
   Copyright 2003, 2009, 2010 Red Hat, Inc.
d18 15
d38 1
a38 1
#define PRId64 "lld"
d43 1
a43 1
#define PRIdLEAST64 "lld"
d46 3
a48 3
#define PRIdFAST16 "d"
#define PRIdFAST32 "d"
#define PRIdFAST64 "lld"
d50 2
a51 2
#define PRIdMAX "lld"
#define PRIdPTR "d"
d56 1
a56 1
#define PRIi64 "lli"
d61 1
a61 1
#define PRIiLEAST64 "lli"
d64 3
a66 3
#define PRIiFAST16 "i"
#define PRIiFAST32 "i"
#define PRIiFAST64 "lli"
d68 2
a69 2
#define PRIiMAX "lli"
#define PRIiPTR "i"
d76 1
a76 1
#define PRIo64 "llo"
d81 1
a81 1
#define PRIoLEAST64 "llo"
d84 3
a86 3
#define PRIoFAST16 "o"
#define PRIoFAST32 "o"
#define PRIoFAST64 "llo"
d88 2
a89 2
#define PRIoMAX "llo"
#define PRIoPTR "o"
d94 1
a94 1
#define PRIu64 "llu"
d99 1
a99 1
#define PRIuLEAST64 "llu"
d102 3
a104 3
#define PRIuFAST16 "u"
#define PRIuFAST32 "u"
#define PRIuFAST64 "llu"
d106 2
a107 2
#define PRIuMAX "llu"
#define PRIuPTR "u"
d112 1
a112 1
#define PRIx64 "llx"
d117 1
a117 1
#define PRIxLEAST64 "llx"
d120 3
a122 3
#define PRIxFAST16 "x"
#define PRIxFAST32 "x"
#define PRIxFAST64 "llx"
d124 2
a125 2
#define PRIxMAX "llx"
#define PRIxPTR "x"
d130 1
a130 1
#define PRIX64 "llX"
d135 1
a135 1
#define PRIXLEAST64 "llX"
d138 3
a140 3
#define PRIXFAST16 "X"
#define PRIXFAST32 "X"
#define PRIXFAST64 "llX"
d142 2
a143 2
#define PRIXMAX "llX"
#define PRIXPTR "X"
d147 10
d160 1
a160 1
#define SCNd64 "lld"
d165 1
a165 1
#define SCNdLEAST64 "lld"
d168 3
a170 3
#define SCNdFAST16 "d"
#define SCNdFAST32 "d"
#define SCNdFAST64 "lld"
d172 2
a173 2
#define SCNdMAX "lld"
#define SCNdPTR "d"
d178 1
a178 1
#define SCNi64 "lli"
d183 1
a183 1
#define SCNiLEAST64 "lli"
d186 3
a188 3
#define SCNiFAST16 "i"
#define SCNiFAST32 "i"
#define SCNiFAST64 "lli"
d190 2
a191 2
#define SCNiMAX "lli"
#define SCNiPTR "i"
d198 1
a198 1
#define SCNo64 "llo"
d203 1
a203 1
#define SCNoLEAST64 "llo"
d206 3
a208 3
#define SCNoFAST16 "o"
#define SCNoFAST32 "o"
#define SCNoFAST64 "llo"
d210 2
a211 2
#define SCNoMAX "llo"
#define SCNoPTR "o"
d216 1
a216 1
#define SCNu64 "llu"
d221 1
a221 1
#define SCNuLEAST64 "llu"
d224 3
a226 3
#define SCNuFAST16 "u"
#define SCNuFAST32 "u"
#define SCNuFAST64 "llu"
d228 2
a229 2
#define SCNuMAX "llu"
#define SCNuPTR "u"
d234 1
a234 1
#define SCNx64 "llx"
d239 1
a239 1
#define SCNxLEAST64 "llx"
d242 6
a247 3
#define SCNxFAST16 "x"
#define SCNxFAST32 "x"
#define SCNxFAST64 "llx"
d249 1
a249 2
#define SCNxMAX "llx"
#define SCNxPTR "x"
@


1.4
log
@	* include/inttypes.h: Remove "l" size specifier from all 16 and 32 bit
	definitions.
@
text
@d3 1
a3 1
   Copyright 2003, 2009 Red Hat, Inc.
d36 1
a36 1
#define PRIdPTR "ld"
d54 1
a54 1
#define PRIiPTR "li"
d74 1
a74 1
#define PRIoPTR "lo"
d92 1
a92 1
#define PRIuPTR "lu"
d110 1
a110 1
#define PRIxPTR "lx"
d128 1
a128 1
#define PRIXPTR "lX"
d148 1
a148 1
#define SCNdPTR "ld"
d166 1
a166 1
#define SCNiPTR "li"
d186 1
a186 1
#define SCNoPTR "lo"
d204 1
a204 1
#define SCNuPTR "lu"
d222 1
a222 1
#define SCNxPTR "lx"
@


1.3
log
@	* cygwin.din: Export wcstoimax, wcstoumax.
	* posix.sgml: Move wcstoimax and wcstoumax to SUSv4 section.
	* include/inttypes.h: Declare wcstoimax and wcstoumax.
	* include/cygwin/version.h: Bump API minor number.
@
text
@d22 1
a22 1
#define PRId32 "ld"
d27 1
a27 1
#define PRIdLEAST32 "ld"
d31 2
a32 2
#define PRIdFAST16 "ld"
#define PRIdFAST32 "ld"
d40 1
a40 1
#define PRIi32 "li"
d45 1
a45 1
#define PRIiLEAST32 "li"
d49 2
a50 2
#define PRIiFAST16 "li"
#define PRIiFAST32 "li"
d60 1
a60 1
#define PRIo32 "lo"
d65 1
a65 1
#define PRIoLEAST32 "lo"
d69 2
a70 2
#define PRIoFAST16 "lo"
#define PRIoFAST32 "lo"
d78 1
a78 1
#define PRIu32 "lu"
d83 1
a83 1
#define PRIuLEAST32 "lu"
d87 2
a88 2
#define PRIuFAST16 "lu"
#define PRIuFAST32 "lu"
d96 1
a96 1
#define PRIx32 "lx"
d101 1
a101 1
#define PRIxLEAST32 "lx"
d105 2
a106 2
#define PRIxFAST16 "lx"
#define PRIxFAST32 "lx"
d114 1
a114 1
#define PRIX32 "lX"
d119 1
a119 1
#define PRIXLEAST32 "lX"
d123 2
a124 2
#define PRIXFAST16 "lX"
#define PRIXFAST32 "lX"
d134 1
a134 1
#define SCNd32 "ld"
d139 1
a139 1
#define SCNdLEAST32 "ld"
d143 2
a144 2
#define SCNdFAST16 "ld"
#define SCNdFAST32 "ld"
d152 1
a152 1
#define SCNi32 "li"
d157 1
a157 1
#define SCNiLEAST32 "li"
d161 2
a162 2
#define SCNiFAST16 "li"
#define SCNiFAST32 "li"
d172 1
a172 1
#define SCNo32 "lo"
d177 1
a177 1
#define SCNoLEAST32 "lo"
d181 2
a182 2
#define SCNoFAST16 "lo"
#define SCNoFAST32 "lo"
d190 1
a190 1
#define SCNu32 "lu"
d195 1
a195 1
#define SCNuLEAST32 "lu"
d199 2
a200 2
#define SCNuFAST16 "lu"
#define SCNuFAST32 "lu"
d208 1
a208 1
#define SCNx32 "lx"
d213 1
a213 1
#define SCNxLEAST32 "lx"
d217 2
a218 2
#define SCNxFAST16 "lx"
#define SCNxFAST32 "lx"
@


1.2
log
@	* cygwin.din (imaxabs): Export.
	(imaxdiv): Export.
	(llabs): Export.
	(lldiv): Export.
	(strtoimax): Export.
	(strtoumax): Export.
	* include/inttypes.h (imaxabs): Activate declaration.
	(imaxdiv): Ditto.
	(strtoimax): Ditto.
	(strtoumax): Ditto.
	* include/cygwin/version.h: Bump API minor.
@
text
@d3 1
a3 1
   Copyright 2003 Red Hat, Inc.
d15 2
a238 2

#if 0 /* Not yet defined */
a240 1
#endif
@


1.1
log
@	* include/inttypes.h: New file.
	* include/stdint.h: New file.
	* include/cygwin/in.h: Include stdint.h instead of sys/types.h.
	* include/cygwin/types.h: Include stdint.h.  Remove typedefs for
	intN_t and uintN_t since these are defined in stdint.h now.
@
text
@a232 1
#if 0 /* Not yet defined */
d237 2
@


1.1.2.1
log
@merge from trunk
@
text
@@

