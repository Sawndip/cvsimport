head	1.6;
access;
symbols
	cygwin-1_7_35-release:1.6
	cygwin-1_7_34-release:1.6
	cygwin-1_7_33-release:1.6
	cygwin-1_7_32-release:1.6
	cygwin-1_7_31-release:1.6
	cygwin-1_7_30-release:1.6
	cygwin-1_7_29-release:1.6
	cygwin-1_7_29-release-branchpoint:1.6.0.10
	cygwin-pre-user-db:1.6
	cygwin-1_7_28-release:1.6
	cygwin-1_7_27-release:1.6
	cygwin-1_7_26-release:1.6
	cygwin-1_7_25-release:1.6
	cygwin-1_7_24-release:1.6
	cygwin-1_7_23-release:1.6
	cygwin-1_7_22-release:1.6
	cygwin-1_7_21-release:1.6
	cygwin-1_7_20-release:1.6
	cygwin-1_7_19-release:1.6
	cygwin-64bit-postmerge:1.6
	cygwin-64bit-premerge-branch:1.6.0.8
	cygwin-64bit-premerge:1.6
	cygwin-1_7_18-release:1.6
	post-ptmalloc3:1.6
	pre-ptmalloc3:1.6
	cygwin-1_7_17-release:1.6
	cygwin-64bit-branch:1.6.0.6
	cygwin-1_7_16-release:1.6
	cygwin-1_7_15-release:1.6
	cygwin-1_7_14_2-release:1.6
	cygwin-1_7_14-release:1.6
	cygwin-1_7_12-release:1.6
	cygwin-1_7_11-release:1.6
	cygwin-1_7_10-release:1.6
	signal-rewrite:1.6.0.4
	pre-notty:1.6
	cygwin-1_7_9-release:1.6
	cv-post-1_7_9:1.6.0.2
	cygwin-1_7_8-release:1.6
	cygwin-1_7_7-release:1.5
	cygwin-1_7_5-release:1.5
	cygwin-1_7_4-release:1.5
	cygwin-1_7_3-release:1.5
	cygwin-1_7_2-release:1.5
	fifo_doover3:1.5.0.12
	cygwin-1_7_1-release:1.5
	prefifo:1.5
	cv-branch-2:1.5.0.10
	pre-ripout-set_console_state_for_spawn:1.5
	EOL_registry_mounts:1.5
	preoverlapped:1.5
	drop_9x_support_start:1.5
	cr-0x5f1:1.5.0.8
	cv-branch:1.5.0.6
	pre-ptymaster-archetype:1.5
	cr-0x3b58:1.5.0.4
	cr-0x5ef:1.5.0.2
	after-mmap-privanon-noreserve:1.5
	after-mmap-revamp:1.5
	before-mmap-revamp:1.5
	cgf-more-exit-sync:1.5
	post_wait_sig_exit:1.5
	pre_wait_sig_exit:1.5
	reparent-point:1.4
	noreparent:1.4.0.16
	cr-0x5e6:1.4.0.14
	cr-0x9e:1.4.0.12
	cr-0x9d:1.4.0.10
	cgf-deleteme:1.4.0.8
	pre-sigrewrite:1.4
	corinna-01:1.4
	cr-0x9c:1.4.0.6
	cr-0x9b:1.4.0.4
	cr-0x99:1.4
	Z-emcb-cygwin_daemon:1.4.0.2
	w32api-2_2:1.4
	mingw-runtime-2_4:1.4
	pre-cgf-merge:1.4
	cgf-dev-branch:1.4.0.20
	predaemon:1.3
	cygwin_daemon_merge_HEAD:1.3
	pregp02r1:1.3.0.38
	cygnus_cvs_20020108_pre:1.3
	Z-cygwin_daemon_merge-new_HEAD:1.4
	Z-cygwin_daemon_merge_HEAD:1.4
	cygwin_daemon:1.3.0.8;
locks; strict;
comment	@ * @;


1.6
date	2011.02.11.12.42.30;	author corinna;	state Exp;
branches;
next	1.5;

1.5
date	2005.05.02.03.50.10;	author cgf;	state Exp;
branches;
next	1.4;

1.4
date	2002.05.29.07.38.54;	author corinna;	state Exp;
branches;
next	1.3;

1.3
date	2001.03.05.21.29.22;	author corinna;	state Exp;
branches
	1.3.8.1;
next	1.2;

1.2
date	2000.10.05.03.12.35;	author cgf;	state Exp;
branches;
next	1.1;

1.1
date	2000.09.06.02.21.44;	author cgf;	state Exp;
branches;
next	;

1.3.8.1
date	2002.06.13.14.34.19;	author rbcollins;	state Exp;
branches;
next	;


desc
@@


1.6
log
@	* include/endian.h: Move definitions of __BIG_ENDIAN, __LITTLE_ENDIAN,
	and __BYTE_ORDER into ...
	* include/bits/endian.h: New file.
	* include/arpa/nameser_compat.h: Include endian.h rather than defining
	BYTE_ORDER here.
	* include/asm/byteorder.h: Include bits/endian.h.  Drop definition of
	__LITTLE_ENDIAN.
	* include/netinet/ip.h: Include bits/endian.h.  Drop definitions of
	BIG_ENDIAN, LITTLE_ENDIAN, and BYTE_ORDER.  Use underscored variants
	of aforementioned constants.
	* include/netinet/tcp.h: Ditto.
	* include/sys/param.h: Drop disabled definitions of BIG_ENDIAN,
	LITTLE_ENDIAN, and BYTE_ORDER.

	* include/netinet/ip.h: Reformat.  Define setsockopt IP_TOS options
	matching recent RFCs.  Tweak comments.
@
text
@/*
 * Copyright (c) 1982, 1986, 1993
 *      The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by the University of
 *      California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *      @@(#)tcp.h       8.1 (Berkeley) 6/10/93
 * $FreeBSD: src/sys/netinet/tcp.h,v 1.13 2000/01/09 19:17:25 shin Exp $
 */

#ifndef _NETINET_TCP_H
#define _NETINET_TCP_H

#include <bits/endian.h>

typedef u_int32_t tcp_seq;
typedef u_int32_t tcp_cc;               /* connection count per rfc1644 */

#define tcp6_seq        tcp_seq /* for KAME src sync over BSD*'s */
#define tcp6hdr         tcphdr  /* for KAME src sync over BSD*'s */

/*
 * TCP header.
 * Per RFC 793, September, 1981.
 */
struct tcphdr {
	u_short th_sport;               /* source port */
	u_short th_dport;               /* destination port */
	tcp_seq th_seq;                 /* sequence number */
	tcp_seq th_ack;                 /* acknowledgement number */
#if __BYTE_ORDER == __LITTLE_ENDIAN
	u_int   th_x2:4,                /* (unused) */
		th_off:4;               /* data offset */
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
	u_int   th_off:4,               /* data offset */
		th_x2:4;                /* (unused) */
#endif
	u_char  th_flags;
#define TH_FIN  0x01
#define TH_SYN  0x02
#define TH_RST  0x04
#define TH_PUSH 0x08
#define TH_ACK  0x10
#define TH_URG  0x20
#define TH_FLAGS (TH_FIN|TH_SYN|TH_RST|TH_ACK|TH_URG)

	u_short th_win;                 /* window */
	u_short th_sum;                 /* checksum */
	u_short th_urp;                 /* urgent pointer */
};

#define TCPOPT_EOL              0
#define TCPOPT_NOP              1
#define TCPOPT_MAXSEG           2
#define TCPOLEN_MAXSEG          4
#define TCPOPT_WINDOW           3
#define TCPOLEN_WINDOW          3
#define TCPOPT_SACK_PERMITTED   4               /* Experimental */
#define TCPOLEN_SACK_PERMITTED  2
#define TCPOPT_SACK             5               /* Experimental */
#define TCPOPT_TIMESTAMP        8
#define TCPOLEN_TIMESTAMP       10
#define TCPOLEN_TSTAMP_APPA     (TCPOLEN_TIMESTAMP+2) /* appendix A */
#define TCPOPT_TSTAMP_HDR               \
    (TCPOPT_NOP<<24|TCPOPT_NOP<<16|TCPOPT_TIMESTAMP<<8|TCPOLEN_TIMESTAMP)

#define TCPOPT_CC               11              /* CC options: RFC-1644 */
#define TCPOPT_CCNEW            12
#define TCPOPT_CCECHO           13
#define TCPOLEN_CC              6
#define TCPOLEN_CC_APPA         (TCPOLEN_CC+2)
#define TCPOPT_CC_HDR(ccopt)            \
    (TCPOPT_NOP<<24|TCPOPT_NOP<<16|(ccopt)<<8|TCPOLEN_CC)

/*
 * Default maximum segment size for TCP.
 * With an IP MSS of 576, this is 536,
 * but 512 is probably more convenient.
 * This should be defined as MIN(512, IP_MSS - sizeof (struct tcpiphdr)).
 */
#define TCP_MSS 512

/*
 * Default maximum segment size for TCP6.
 * With an IP6 MSS of 1280, this is 1220,
 * but 1024 is probably more convenient. (xxx kazu in doubt)
 * This should be defined as MIN(1024, IP6_MSS - sizeof (struct tcpip6hdr))
 */
#define TCP6_MSS        1024

#define TCP_MAXWIN      65535   /* largest value for (unscaled) window */
#define TTCP_CLIENT_SND_WND     4096    /* dflt send window for T/TCP client */

#define TCP_MAX_WINSHIFT        14      /* maximum window shift */

#define TCP_MAXHLEN     (0xf<<2)        /* max length of header in bytes */
#define TCP_MAXOLEN     (TCP_MAXHLEN - sizeof(struct tcphdr))
					/* max space left for options */

/*
 * User-settable options (used with setsockopt).
 */
#ifndef TCP_NODELAY
#define TCP_NODELAY     0x01    /* don't delay send to coalesce packets */
#define TCP_MAXSEG      0x02    /* set maximum segment size */
#endif
#define TCP_NOPUSH      0x04    /* don't push last block of write */
#define TCP_NOOPT       0x08    /* don't use TCP options */

#endif
@


1.5
log
@white space and minor comment cleanup.
@
text
@d40 1
a40 8
/* Added by Wu Yongwei */
#ifndef LITTLE_ENDIAN
#define LITTLE_ENDIAN   1234
#define BIG_ENDIAN      4321
#endif
#ifndef BYTE_ORDER
#define BYTE_ORDER     LITTLE_ENDIAN
#endif
d57 1
a57 1
#if BYTE_ORDER == LITTLE_ENDIAN
d61 1
a61 1
#if BYTE_ORDER == BIG_ENDIAN
@


1.4
log
@	* include/cygwin/socket.h: Protect some symbols against multiple
	definition.
	* include/netinet/ip.h: Ditto.
	* include/netinet/tcp.h: Ditto.

	* include/netinet/ip.h: Replace by BSD derived version of the file.
	* include/netinet/tcp.h: Ditto.
	* include/netinet/udp.h: New file.
	* include/cygwin/ip.h: Remove.
@
text
@d60 4
a63 4
        u_short th_sport;               /* source port */
        u_short th_dport;               /* destination port */
        tcp_seq th_seq;                 /* sequence number */
        tcp_seq th_ack;                 /* acknowledgement number */
d65 2
a66 2
        u_int   th_x2:4,                /* (unused) */
                th_off:4;               /* data offset */
d69 2
a70 2
        u_int   th_off:4,               /* data offset */
                th_x2:4;                /* (unused) */
d72 1
a72 1
        u_char  th_flags;
d81 3
a83 3
        u_short th_win;                 /* window */
        u_short th_sum;                 /* checksum */
        u_short th_urp;                 /* urgent pointer */
d132 1
a132 1
                                        /* max space left for options */
@


1.3
log
@        * include/a.out.h: Add copyright hint.
        * include/fcntl.h: Ditto.
        * include/lastlog.h: Ditto.
        * include/memory.h: Ditto.
        * include/mntent.h: Ditto.
        * include/paths.h: Ditto.
        * include/poll.h: Ditto.
        * include/syslog.h: Ditto.
        * include/termio.h: Ditto.
        * include/tzfile.h: Ditto.
        * include/arpa/inet.h: Ditto.
        * include/asm/byteorder.h: Ditto.
        * include/asm/socket.h: Ditto.
        * include/asm/types.h: Ditto.
        * include/cygwin/if.h: Ditto.
        * include/cygwin/mtio.h: Ditto.
        * include/cygwin/rdevio.h: Ditto.
        * include/cygwin/socket.h: Ditto.
        * include/net/if.h: Ditto.
        * include/netinet/in.h: Ditto.
        * include/netinet/in_systm.h: Ditto.
        * include/netinet/ip.h: Ditto.
        * include/netinet/ip_icmp.h: Ditto.
        * include/netinet/tcp.h: Ditto.
        * include/sys/cdefs.h: Ditto.
        * include/sys/cygwin.h: Ditto.
        * include/sys/ioctl.h: Ditto.
        * include/sys/mman.h: Ditto.
        * include/sys/mount.h: Ditto.
        * include/sys/mtio.h: Ditto.
        * include/sys/procfs.h: Ditto.
        * include/sys/resource.h: Ditto.
        * include/sys/smallprint.h: Ditto.
        * include/sys/socket.h: Ditto.
        * include/sys/strace.h: Ditto.
        * include/sys/syslog.h: Ditto.
        * include/sys/sysmacros.h: Ditto.
        * include/sys/termio.h: Ditto.
        * include/sys/termios.h: Ditto.
        * include/sys/uio.h: Ditto.
        * include/sys/un.h: Ditto.
        * include/sys/utsname.h: Ditto.
        * include/sys/vfs.h: Ditto.
        * include/sys/wait.h: Ditto.
        * regexp/regerror.c: Ditto.
        * regexp/regexp.h: Ditto.
        * regexp/regmagic.h: Ditto.
@
text
@d1 35
a35 1
/* netinet/tcp.h
d37 48
a84 1
   Copyright 2000, 2001 Red Hat, Inc.
d86 14
a99 1
This file is part of Cygwin.
d101 7
a107 3
This software is a copyrighted work licensed under the terms of the
Cygwin license.  Please consult the file "CYGWIN_LICENSE" for
details. */
d109 24
a132 2
#ifndef _NETINET_TCP_H
#define _NETINET_TCP_H
d134 9
a142 1
/* Maybe add some definitions, someday */
@


1.3.8.1
log
@Merged changes from HEAD
@
text
@d1 1
a1 35
/*
 * Copyright (c) 1982, 1986, 1993
 *      The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by the University of
 *      California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *      @@(#)tcp.h       8.1 (Berkeley) 6/10/93
 * $FreeBSD: src/sys/netinet/tcp.h,v 1.13 2000/01/09 19:17:25 shin Exp $
 */
d3 1
a3 2
#ifndef _NETINET_TCP_H
#define _NETINET_TCP_H
d5 1
a5 8
/* Added by Wu Yongwei */
#ifndef LITTLE_ENDIAN
#define LITTLE_ENDIAN   1234
#define BIG_ENDIAN      4321
#endif
#ifndef BYTE_ORDER
#define BYTE_ORDER     LITTLE_ENDIAN
#endif
d7 3
a9 2
typedef u_int32_t tcp_seq;
typedef u_int32_t tcp_cc;               /* connection count per rfc1644 */
d11 2
a12 81
#define tcp6_seq        tcp_seq /* for KAME src sync over BSD*'s */
#define tcp6hdr         tcphdr  /* for KAME src sync over BSD*'s */

/*
 * TCP header.
 * Per RFC 793, September, 1981.
 */
struct tcphdr {
        u_short th_sport;               /* source port */
        u_short th_dport;               /* destination port */
        tcp_seq th_seq;                 /* sequence number */
        tcp_seq th_ack;                 /* acknowledgement number */
#if BYTE_ORDER == LITTLE_ENDIAN
        u_int   th_x2:4,                /* (unused) */
                th_off:4;               /* data offset */
#endif
#if BYTE_ORDER == BIG_ENDIAN
        u_int   th_off:4,               /* data offset */
                th_x2:4;                /* (unused) */
#endif
        u_char  th_flags;
#define TH_FIN  0x01
#define TH_SYN  0x02
#define TH_RST  0x04
#define TH_PUSH 0x08
#define TH_ACK  0x10
#define TH_URG  0x20
#define TH_FLAGS (TH_FIN|TH_SYN|TH_RST|TH_ACK|TH_URG)

        u_short th_win;                 /* window */
        u_short th_sum;                 /* checksum */
        u_short th_urp;                 /* urgent pointer */
};

#define TCPOPT_EOL              0
#define TCPOPT_NOP              1
#define TCPOPT_MAXSEG           2
#define TCPOLEN_MAXSEG          4
#define TCPOPT_WINDOW           3
#define TCPOLEN_WINDOW          3
#define TCPOPT_SACK_PERMITTED   4               /* Experimental */
#define TCPOLEN_SACK_PERMITTED  2
#define TCPOPT_SACK             5               /* Experimental */
#define TCPOPT_TIMESTAMP        8
#define TCPOLEN_TIMESTAMP       10
#define TCPOLEN_TSTAMP_APPA     (TCPOLEN_TIMESTAMP+2) /* appendix A */
#define TCPOPT_TSTAMP_HDR               \
    (TCPOPT_NOP<<24|TCPOPT_NOP<<16|TCPOPT_TIMESTAMP<<8|TCPOLEN_TIMESTAMP)

#define TCPOPT_CC               11              /* CC options: RFC-1644 */
#define TCPOPT_CCNEW            12
#define TCPOPT_CCECHO           13
#define TCPOLEN_CC              6
#define TCPOLEN_CC_APPA         (TCPOLEN_CC+2)
#define TCPOPT_CC_HDR(ccopt)            \
    (TCPOPT_NOP<<24|TCPOPT_NOP<<16|(ccopt)<<8|TCPOLEN_CC)

/*
 * Default maximum segment size for TCP.
 * With an IP MSS of 576, this is 536,
 * but 512 is probably more convenient.
 * This should be defined as MIN(512, IP_MSS - sizeof (struct tcpiphdr)).
 */
#define TCP_MSS 512

/*
 * Default maximum segment size for TCP6.
 * With an IP6 MSS of 1280, this is 1220,
 * but 1024 is probably more convenient. (xxx kazu in doubt)
 * This should be defined as MIN(1024, IP6_MSS - sizeof (struct tcpip6hdr))
 */
#define TCP6_MSS        1024

#define TCP_MAXWIN      65535   /* largest value for (unscaled) window */
#define TTCP_CLIENT_SND_WND     4096    /* dflt send window for T/TCP client */

#define TCP_MAX_WINSHIFT        14      /* maximum window shift */

#define TCP_MAXHLEN     (0xf<<2)        /* max length of header in bytes */
#define TCP_MAXOLEN     (TCP_MAXHLEN - sizeof(struct tcphdr))
                                        /* max space left for options */
d14 1
a14 9
/*
 * User-settable options (used with setsockopt).
 */
#ifndef TCP_NODELAY
#define TCP_NODELAY     0x01    /* don't delay send to coalesce packets */
#define TCP_MAXSEG      0x02    /* set maximum segment size */
#endif
#define TCP_NOPUSH      0x04    /* don't push last block of write */
#define TCP_NOOPT       0x08    /* don't use TCP options */
@


1.2
log
@* include/netinet/tcp.h: Remove winsock.h include.
* include/sys/cygwin.h: Move windows specific reference within conditional.
@
text
@d1 10
@


1.1
log
@Dummy file to accomodate programs which include
it unconditionally.
@
text
@d4 1
a4 1
#include <winsock.h>
@

