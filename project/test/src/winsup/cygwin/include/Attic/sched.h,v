head	1.3;
access;
symbols
	cygwin-1_7_3-release:1.2
	cygwin-1_7_2-release:1.2
	fifo_doover3:1.2.0.30
	cygwin-1_7_1-release:1.2
	prefifo:1.2
	cv-branch-2:1.2.0.28
	pre-ripout-set_console_state_for_spawn:1.2
	EOL_registry_mounts:1.2
	preoverlapped:1.2
	drop_9x_support_start:1.2
	cr-0x5f1:1.2.0.26
	cv-branch:1.2.0.24
	pre-ptymaster-archetype:1.2
	cr-0x3b58:1.2.0.22
	cr-0x5ef:1.2.0.20
	after-mmap-privanon-noreserve:1.2
	after-mmap-revamp:1.2
	before-mmap-revamp:1.2
	cgf-more-exit-sync:1.2
	post_wait_sig_exit:1.2
	pre_wait_sig_exit:1.2
	reparent-point:1.2
	noreparent:1.2.0.18
	cr-0x5e6:1.2.0.16
	cr-0x9e:1.2.0.14
	cr-0x9d:1.2.0.12
	cgf-deleteme:1.2.0.10
	pre-sigrewrite:1.2
	corinna-01:1.2
	cr-0x9c:1.2.0.6
	cr-0x9b:1.2.0.4
	cr-0x99:1.2
	Z-emcb-cygwin_daemon:1.2.0.2
	w32api-2_2:1.2
	mingw-runtime-2_4:1.2
	pre-cgf-merge:1.2
	cgf-dev-branch:1.2.0.60
	predaemon:1.2
	cygwin_daemon_merge_HEAD:1.2
	pregp02r1:1.2.0.38
	cygnus_cvs_20020108_pre:1.2
	Z-cygwin_daemon_merge-new_HEAD:1.2
	Z-cygwin_daemon_merge_HEAD:1.2
	cygwin_daemon:1.2.0.8;
locks; strict;
comment	@ * @;


1.3
date	2010.04.06.15.16.09;	author corinna;	state dead;
branches;
next	1.2;

1.2
date	2001.04.12.04.04.53;	author rbcollins;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.21.14.00.29;	author cgf;	state Exp;
branches;
next	;


desc
@@


1.3
log
@	* include/sched.h: Remove, overruled by newlib file.
	* include/sys/sched.h: Ditto.
@
text
@/* sched.h: scheduler interface for Cygwin

   Copyright 2001  Red Hat, Inc.

   Written by Robert Collins <rbtcollins@@hotmail.com>

   This file is part of Cygwin.

   This software is a copyrighted work licensed under the terms of the
   Cygwin license.  Please consult the file "CYGWIN_LICENSE" for
   details. */

/* Written from the opengroup specifications */

#ifndef _SCHED_H
#define _SCHED_H
#include <time.h>

/* we return -1 and set errno on failure */
#define SCHED_FIFO  1
#define SCHED_RR    2
#define SCHED_OTHER 3

struct sched_param
{
  int sched_priority;
};

#ifdef __cplusplus
extern "C" {
#endif

/* max priority for policy */
int sched_get_priority_max (int);
/* min priority for policy */
int sched_get_priority_min (int);
/* get sched params for process */
int sched_getparam (pid_t, struct sched_param *);
/* get the scheduler for pid */
int sched_getscheduler (pid_t);
/* get the time quantum for pid */
int sched_rr_get_interval (pid_t, struct timespec *);
/* set the scheduling parameters */
int sched_setparam (pid_t, const struct sched_param *);
/* set the scheduler */
int sched_setscheduler (pid_t, int, const struct sched_param *);
/* yield the cpu */
int sched_yield (void);

#if defined(__INSIDE_CYGWIN__)
/* These are private helper functions used to calculate scheduler settings and
 * validate parameters */

/* check parameters for validity */
int valid_sched_parameters(const struct sched_param *);
/* set a single thread's priority */
int sched_set_thread_priority(HANDLE thread, int priority);

#endif /* INSIDE_CYGWIN */

#ifdef __cplusplus
}
#endif
#endif				/* _SCHED_H */
@


1.2
log
@	* configure.in: Remove PTH_ALLOW.
	* cygwin.din: Remove @@PTH_ALLOW@@ prefixes to pthread functions.
	Add new pthread exports.
	* pthread.cc: New wrapper functions for the above new exports.
	* sched.cc (valid_sched_parameters): New function.
	(sched_setparam): Use it.
	(sched_set_thread_priority): New function. Used by pthread_sched*.
	* thread.cc (pthread_key_destructor::InsertAfter): New function.
	(pthread_key_destructor::UnlinkNext): New function.
	(pthread_key_destructor::Next): New function.
	(pthread_key_destructor_list::Insert): New function.
	(pthread_key_destructor_list::Remove): New function.
	(pthread_key_destructor_list::Pop): New function.
	(pthread_key_destructor::pthread_key_destructor): New function.
	(pthread_key_destructor_list::IterateNull): New function.
	(MTinterface::Init): Initialise new member.
	(pthread::pthread): Initialise new members.
	(pthread::create): Copy new attributes. Set the new thread priority.
	(pthread_attr::pthread_attr): Initialise new members.
	(pthread_key::pthread_key): Setup destructor function.
	(pthread_key::~pthread_key): Remove destructor function.
	(pthread_mutexattr::pthread_mutexattr): New function.
	(pthread_mutexattr::~pthread_mutexattr): New function.
	(__pthread_once): New function.
	(__pthread_cleanup): New function.
	(__pthread_cancel): New function.
	(__pthread_setcancelstate): New function.
	(__pthread_setcanceltype): New function.
	(__pthread_testcancel): New function.
	(__pthread_attr_getinheritsched): New function.
	(__pthread_attr_getschedparam): New function.
	(__pthread_attr_getschedpolicy): New function.
	(__pthread_attr_getscope): New function.
	(__pthread_attr_setinheritsched): New function.
	(__pthread_attr_setschedparam): New function.
	(__pthread_attr_setschedpolicy): New function.
	(__pthread_attr_setscope): New function.
	(__pthread_exit): Call any key destructors on thread exit.
	(__pthread_join): Use the embedded attr values.
	(__pthread_detach): Use the embedded attr values.
	(__pthread_getconcurrency): New function.
	(__pthread_getschedparam): New function.
	(__pthread_key_create): Pass the destructor on object creation.
	(__pthread_key_delete): Correct incorrect prototype.
	(__pthread_setconcurrency): New function.
	(__pthread_setschedparam): New function.
	(__pthread_cond_timedwait): Support static mutex initialisers.
	(__pthread_cond_wait): Ditto.
	(__pthread_mutex_getprioceiling): New function.
	(__pthread_mutex_lock): Support static mutex initialisers.
	(__pthread_mutex_trylock): Ditto.
	(__pthread_mutex_unlock): Ditto.
	(__pthread_mutex_destroy): Ditto.
	(__pthread_mutex_setprioceiling): New function.
	(__pthread_mutexattr_getprotocol): New function.
	(__pthread_mutexattr_getpshared): New function.
	(__pthread_mutexattr_gettype): New function.
	(__pthread_mutexattr_init): New function.
	(__pthread_mutexattr_destroy): New function.
	(__pthread_mutexattr_setprotocol): New function.
	(__pthread_mutexattr_setprioceiling): New function.
	(__pthread_mutexattr_getprioceiling): New function.
	(__pthread_mutexattr_setpshared): New function.
	(__pthread_mutexattr_settype): New function.
	Remove stubs for non MT_SAFE compilation.
	* thread.h: Remove duplicate #defines.
	Add prototypes for new functions in thread.cc.
	(pthread_key_destructor): New class.
	(pthread_key_destructor_list): New class.
	(pthread_attr): Add new members.
	(pthread): Remove members that are duplicated in the pthread_attr class.
	(pthread_mutex_attr): Add new members.
	(pthread_once): New class.
	* include/pthread.h: Add prototypes for new functions exported from cygwin1.dll.
	Remove typedefs.
	* include/sched.h: Add prototypes for new functions in sched.cc.
	* include/cygwin/types.h: Add typedefs from pthread.h
@
text
@@


1.1
log
@Add missing files.
@
text
@d34 1
a34 1
  int sched_get_priority_max (int);
d36 1
a36 1
  int sched_get_priority_min (int);
d38 1
a38 1
  int sched_getparam (pid_t, struct sched_param *);
d40 1
a40 1
  int sched_getscheduler (pid_t);
d42 1
a42 1
  int sched_rr_get_interval (pid_t, struct timespec *);
d44 1
a44 1
  int sched_setparam (pid_t, const struct sched_param *);
d46 1
a46 1
  int sched_setscheduler (pid_t, int, const struct sched_param *);
d48 12
a59 1
  int sched_yield (void);
@

