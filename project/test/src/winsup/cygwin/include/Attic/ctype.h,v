head	1.7;
access;
symbols
	pre-ripout-set_console_state_for_spawn:1.4
	EOL_registry_mounts:1.4
	preoverlapped:1.4
	drop_9x_support_start:1.4
	cr-0x5f1:1.4.0.8
	cv-branch:1.4.0.6
	pre-ptymaster-archetype:1.4
	cr-0x3b58:1.4.0.4
	cr-0x5ef:1.4.0.2
	after-mmap-privanon-noreserve:1.4
	after-mmap-revamp:1.4
	before-mmap-revamp:1.4
	cgf-more-exit-sync:1.4
	post_wait_sig_exit:1.4
	pre_wait_sig_exit:1.4;
locks; strict;
comment	@ * @;


1.7
date	2009.03.31.09.42.58;	author corinna;	state dead;
branches;
next	1.6;

1.6
date	2009.03.24.12.18.34;	author corinna;	state Exp;
branches;
next	1.5;

1.5
date	2008.07.22.10.38.18;	author corinna;	state Exp;
branches;
next	1.4;

1.4
date	2005.03.28.21.58.23;	author cgf;	state Exp;
branches;
next	1.3;

1.3
date	2005.03.28.19.31.23;	author cgf;	state Exp;
branches;
next	1.2;

1.2
date	2005.03.23.21.04.00;	author cgf;	state Exp;
branches;
next	1.1;

1.1
date	2005.03.23.17.11.24;	author cgf;	state Exp;
branches;
next	;


desc
@@


1.7
log
@	* ctype.cc: Remove implementation of ctype functions in favor of
	pointer-based newlib implementation.
	(_ctype_b): Declare.
	(__ctype_cp): Move to newlib. Declare.
	(__ctype_iso): Ditto.
	(__set_ctype): Implement changing __ctype_ptr__.  Only copy character
	class data in applications built under older Cygwin.
	* cygwin.din (__ctype_ptr__): Export.
	* include/ctype.h: Remove in favor of newlib implementation.
	* include/cygwin/config.h (__EXPORT): Define alongside __IMPORT.
	* include/cygwin/version.h (CYGWIN_VERSION_CHECK_FOR_OLD_CTYPE):
	Define check for old vs. new ctype implementation.
	Bump API minor number.
@
text
@#ifndef _CTYPE_H_
#define _CTYPE_H_

#include <_ansi.h>

#ifdef __cplusplus
extern "C" {
#endif

int __cdecl isalnum(int);
int __cdecl isalpha(int);
int __cdecl iscntrl(int);
int __cdecl isdigit(int);
int __cdecl isgraph(int);
int __cdecl islower(int);
int __cdecl isprint(int);
int __cdecl ispunct(int);
int __cdecl isspace(int);
int __cdecl isupper(int);
int __cdecl isxdigit(int);
int __cdecl tolower(int);
int __cdecl toupper(int);

#ifndef __STRICT_ANSI__
int __cdecl isblank(int);
int __cdecl isascii(int);
int __cdecl toascii(int);
int __cdecl _tolower(int);
int __cdecl _toupper(int);
#endif

#define	_U	01
#define	_L	02
#define	_N	04
#define	_S	010
#define _P	020
#define _C	040
#define _X	0100
#define	_B	0200

#if defined (__INSIDE_CYGWIN__) || defined (_COMPILING_NEWLIB)
extern const char _ctype_[];
#ifdef _COMPILING_NEWLIB
extern const char *__ctype_ptr__;
#endif
#else
extern const __declspec(dllimport) char _ctype_[];
#endif

#if !defined(__cplusplus) || defined(__INSIDE_CYGWIN__)
#define	isalpha(c)	((_ctype_+1)[(unsigned)(c)]&(_U|_L))
#define isblank(c)	((_ctype_+1)[(unsigned)(c)]&_B)
#define	isupper(c)	((_ctype_+1)[(unsigned)(c)]&_U)
#define	islower(c)	((_ctype_+1)[(unsigned)(c)]&_L)
#define	isdigit(c)	((_ctype_+1)[(unsigned)(c)]&_N)
#define	isxdigit(c)	((_ctype_+1)[(unsigned)(c)]&(_X|_N))
#define	isspace(c)	((_ctype_+1)[(unsigned)(c)]&_S)
#define ispunct(c)	((_ctype_+1)[(unsigned)(c)]&_P)
#define isalnum(c)	((_ctype_+1)[(unsigned)(c)]&(_U|_L|_N))
#define isprint(c)	((_ctype_+1)[(unsigned)(c)]&(_P|_U|_L|_N|_B))
#define	isgraph(c)	((_ctype_+1)[(unsigned)(c)]&(_P|_U|_L|_N))
#define iscntrl(c)	((_ctype_+1)[(unsigned)(c)]&_C)
#endif /* !__cplusplus */

#if !defined(__STRICT_ANSI__) || defined(__INSIDE_CYGWIN__)
#define isascii(c)	((unsigned)(c)<=0177)
#define toascii(c)	((c)&0177)
#endif

#ifdef __cplusplus
}
#endif
#endif /* _CTYPE_H_ */
@


1.6
log
@	* ctype.cc (_CTYPE_DATA_0_127): Add _B class to TAB character.
	(__ctype_default): New character class array for default ASCII
	character set.
	(__ctype_iso): New array of character class array for ISO charsets.
	(__ctype_cp): Ditto for singlebyte Windows codepages.
	(tolower): Implement as distinct function to support any singlebyte
	charset.
	(toupper): Ditto.
	(__set_ctype): New function to copy singlebyte character classes
	corresponding to current charset to ctype_b array.
	Align copyright text to upstream.
	* dcrt0.cc (dll_crt0_1): Reset current locale to "C" per POSIX.
	* environ.cc (set_file_api_mode): Remove.
	(codepage_init): Remove.
	(parse_thing): Remove "codepage" setting.
	(environ_init): Set locale according to environment settings, or
	to current codepage, before converting environment to multibyte.
	* fhandler.h (fhandler_console::write_replacement_char): Drop argument.
	* fhandler_console.cc (dev_console::str_to_con): Call sys_cp_mbstowcs
	rather than MultiByteToWideChar.
	(fhandler_console::write_replacement_char): Always print a funny
	half filled square if a character isn't in the current charset.
	(fhandler_console::write_normal): Convert to using __mbtowc
	rather than next_char.
	* fork.cc (frok::child): Drop call to set_file_api_mode.
	* globals.cc (enum codepage_type) Remove.
	(current_codepage): Remove.
	* miscfuncs.cc (cygwin_wcslwr): Unused, dangerous.  Remove.
	(cygwin_wcsupr): Ditto.
	(is_cp_multibyte): Remove.
	(next_char): Remove.
	* miscfuncs.h (is_cp_multibyte): Drop declaration.
	(next_char): Ditto.
	* strfuncs.cc (get_cp): Remove.
	(__db_wctomb): New function to implement _wctomb_r functionality for
	doublebyte charsets using WideCharToMultiByte.
	(__sjis_wctomb): New function to replace unusable newlib function.
	(__jis_wctomb): Ditto.
	(__eucjp_wctomb): Ditto.
	(__gbk_wctomb): New function.
	(__kr_wctomb): Ditto.
	(__big5_wctomb): Ditto.
	(__db_mbtowc): New function to implement _mbtowc_r functionality for
	doublebyte charsets using MultiByteToWideChar.
	(__sjis_mbtowc): New function to replace unusable newlib function.
	(__jis_mbtowc): Ditto.
	(__eucjp_mbtowc): Ditto.
	(__gbk_mbtowc): New function.
	(__kr_mbtowc): New function
	(__big5_mbtowc): New function
	(__set_charset_from_codepage): New function.
	(sys_wcstombs): Reimplement, basically using same wide char to multibyte
	conversion as newlib's application level functions.  Plus extras.
	Add lengthy comment to explain.  Change return type to size_t.
	(sys_wcstombs_alloc): Just use sys_wcstombs.  Change return type to
	size_t.
	(sys_cp_mbstowcs): Replace sys_mbstowcs, take additional codepage
	argument.  Explain why.  Change return type to size_t.
	(sys_mbstowcs_alloc): Just use sys_mbstowcs.  Change return type to
	size_t.
	* wchar.h: Declare internal functions implemented in strfuncs.cc.
	(wcscasecmp): Remove.
	(wcsncasecmp): Remove.
	(wcslwr): Remove.
	(wcsupr): Remove.
	* winsup.h (codepage_init): Remove declaration.
	(get_cp): Ditto.
	(sys_wcstombs): Align declaration to new implementation.
	(sys_wcstombs_alloc): Ditto.
	(sys_cp_mbstowcs): Add declaration.
	(sys_mbstowcs): Define as inline function.
	(sys_mbstowcs_alloc): Align declaration to new implementation.
	(set_file_api_mode): Remove declaration.
	* include/ctype.h (isblank): Redefine to use _B character class.
	(toupper): Remove ASCII-only definition.
	(tolower): Ditto.
@
text
@@


1.5
log
@	* include/ctype.h: Declare __ctype_ptr__ to keep newlib build happy.
@
text
@d52 1
a52 1
#define isblank(c)	((c) == ' ' || (c) == '\t')
a62 6
/* Non-gcc versions will get the library versions, and will be
   slightly slower */
# define toupper(c) \
	__extension__ ({ int __x = (c); islower(__x) ? (__x - 'a' + 'A') : __x;})
# define tolower(c) \
	__extension__ ({ int __x = (c); isupper(__x) ? (__x - 'A' + 'a') : __x;})
@


1.4
log
@* include/ctype.h: Accommodate building in newlib.
@
text
@d43 3
@


1.3
log
@* cygthread.cc (cygthread::detach): Revert to just waiting for thred event
since waiting for anything else is racy.
* timer.cc (timer_tracker::hcancel): Rename from cancel.
(timer_tracker::cancel): New method.
(timer_tracker::th): Remove.
(timer_tracker::~timer_tracker): Call cancel method.
(timer_tracker::timer_tracker): Ditto.
(timer_tracker::timer_tracker): Always, clear cancel, even though it is
probably not strictly necessary for ttstart.
(timer_thread): Accommodate cancel -> hcancel rename.
(timer_tracker::settime): Ditto.
(timer_tracker::gettime): Ditto.
(timer_delete): Ditto.
* cygwin.din: Export _ctype_.
* include/ctype.h: Mark that _ctype_ is imported.
@
text
@d41 1
a41 1
#ifdef __INSIDE_CYGWIN__
@


1.2
log
@* include/ctype.h: Always define macros when inside cygwin.
(isblank): New macro.
@
text
@d41 1
d43 3
@


1.1
log
@* include/ctype.h: New file.
* ctype.cc: Ditto.
* Makefile.in: Add ctype.o to DLL_OFILES.
* cygwin.din: Remove _ctype_ptr (for now?).
@
text
@d43 1
a43 1
#ifndef __cplusplus
d45 1
d64 1
a64 1
#ifndef __STRICT_ANSI__
@

