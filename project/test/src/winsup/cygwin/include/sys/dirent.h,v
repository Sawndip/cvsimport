head	1.27;
access;
symbols
	cygwin-1_7_35-release:1.27
	cygwin-1_7_34-release:1.27
	cygwin-1_7_33-release:1.27
	cygwin-1_7_32-release:1.27
	cygwin-1_7_31-release:1.27
	cygwin-1_7_30-release:1.27
	cygwin-1_7_29-release:1.27
	cygwin-1_7_29-release-branchpoint:1.27.0.2
	cygwin-pre-user-db:1.27
	cygwin-1_7_28-release:1.27
	cygwin-1_7_27-release:1.27
	cygwin-1_7_26-release:1.27
	cygwin-1_7_25-release:1.26
	cygwin-1_7_24-release:1.26
	cygwin-1_7_23-release:1.26
	cygwin-1_7_22-release:1.26
	cygwin-1_7_21-release:1.26
	cygwin-1_7_20-release:1.26
	cygwin-1_7_19-release:1.26
	cygwin-64bit-postmerge:1.26
	cygwin-64bit-premerge-branch:1.25.0.2
	cygwin-64bit-premerge:1.25
	cygwin-1_7_18-release:1.25
	post-ptmalloc3:1.24.2.4
	pre-ptmalloc3:1.24.2.4
	cygwin-1_7_17-release:1.24
	cygwin-64bit-branch:1.24.0.2
	cygwin-1_7_16-release:1.24
	cygwin-1_7_15-release:1.24
	cygwin-1_7_14_2-release:1.24
	cygwin-1_7_14-release:1.24
	cygwin-1_7_12-release:1.24
	cygwin-1_7_11-release:1.24
	cygwin-1_7_10-release:1.23
	signal-rewrite:1.23.0.4
	pre-notty:1.23
	cygwin-1_7_9-release:1.23
	cv-post-1_7_9:1.23.0.2
	cygwin-1_7_8-release:1.23
	cygwin-1_7_7-release:1.23
	cygwin-1_7_5-release:1.21
	cygwin-1_7_4-release:1.21
	cygwin-1_7_3-release:1.21
	cygwin-1_7_2-release:1.21
	fifo_doover3:1.20.0.4
	cygwin-1_7_1-release:1.20
	prefifo:1.20
	cv-branch-2:1.20.0.2
	pre-ripout-set_console_state_for_spawn:1.19
	EOL_registry_mounts:1.19
	preoverlapped:1.17
	drop_9x_support_start:1.16
	cr-0x5f1:1.16.0.4
	cv-branch:1.16.0.2
	pre-ptymaster-archetype:1.16
	cr-0x3b58:1.10.0.2
	cr-0x5ef:1.12.0.2
	after-mmap-privanon-noreserve:1.7
	after-mmap-revamp:1.7
	before-mmap-revamp:1.7
	cgf-more-exit-sync:1.7
	post_wait_sig_exit:1.7
	pre_wait_sig_exit:1.7
	reparent-point:1.3
	noreparent:1.3.0.14
	cr-0x5e6:1.3.0.12
	cr-0x9e:1.3.0.10
	cr-0x9d:1.3.0.8
	cgf-deleteme:1.3.0.6
	pre-sigrewrite:1.3
	corinna-01:1.3
	cr-0x9c:1.3.0.4
	cr-0x9b:1.3.0.2
	cr-0x99:1.1
	Z-emcb-cygwin_daemon:1.1.0.4
	cgf-dev-branch:1.1.0.2
	pre-cgf-merge:1.3;
locks; strict;
comment	@ * @;


1.27
date	2013.11.25.11.38.08;	author corinna;	state Exp;
branches;
next	1.26;

1.26
date	2013.04.23.09.44.35;	author corinna;	state Exp;
branches;
next	1.25;

1.25
date	2013.01.21.04.38.31;	author cgf;	state Exp;
branches;
next	1.24;

1.24
date	2012.02.22.01.58.24;	author yselkowitz;	state Exp;
branches
	1.24.2.1;
next	1.23;

1.23
date	2010.08.06.18.55.25;	author corinna;	state Exp;
branches;
next	1.22;

1.22
date	2010.07.05.16.59.56;	author corinna;	state Exp;
branches;
next	1.21;

1.21
date	2010.02.26.09.36.21;	author corinna;	state Exp;
branches;
next	1.20;

1.20
date	2008.11.28.09.04.35;	author corinna;	state Exp;
branches;
next	1.19;

1.19
date	2007.12.06.18.24.06;	author corinna;	state Exp;
branches;
next	1.18;

1.18
date	2007.12.05.15.10.20;	author corinna;	state Exp;
branches;
next	1.17;

1.17
date	2007.06.29.15.13.01;	author corinna;	state Exp;
branches;
next	1.16;

1.16
date	2006.03.01.13.47.49;	author corinna;	state Exp;
branches;
next	1.15;

1.15
date	2006.01.28.10.34.11;	author corinna;	state Exp;
branches;
next	1.14;

1.14
date	2006.01.27.21.50.42;	author corinna;	state Exp;
branches;
next	1.13;

1.13
date	2006.01.21.02.24.17;	author cgf;	state Exp;
branches;
next	1.12;

1.12
date	2006.01.20.16.04.40;	author cgf;	state Exp;
branches;
next	1.11;

1.11
date	2006.01.19.05.34.39;	author cgf;	state Exp;
branches;
next	1.10;

1.10
date	2005.12.19.04.00.41;	author cgf;	state Exp;
branches;
next	1.9;

1.9
date	2005.12.10.23.25.24;	author cgf;	state Exp;
branches;
next	1.8;

1.8
date	2005.12.05.21.02.53;	author cgf;	state Exp;
branches;
next	1.7;

1.7
date	2005.08.20.06.19.55;	author cgf;	state Exp;
branches;
next	1.6;

1.6
date	2005.08.12.02.39.13;	author cgf;	state Exp;
branches;
next	1.5;

1.5
date	2005.08.06.23.00.06;	author cgf;	state Exp;
branches;
next	1.4;

1.4
date	2005.05.02.03.50.10;	author cgf;	state Exp;
branches;
next	1.3;

1.3
date	2003.09.09.00.21.16;	author cgf;	state Exp;
branches;
next	1.2;

1.2
date	2003.09.08.04.04.19;	author cgf;	state Exp;
branches;
next	1.1;

1.1
date	2003.05.12.11.06.27;	author corinna;	state Exp;
branches
	1.1.2.1;
next	;

1.24.2.1
date	2012.08.13.20.04.38;	author corinna;	state Exp;
branches;
next	1.24.2.2;

1.24.2.2
date	2012.10.31.17.00.09;	author corinna;	state Exp;
branches;
next	1.24.2.3;

1.24.2.3
date	2013.01.21.13.52.14;	author corinna;	state Exp;
branches;
next	1.24.2.4;

1.24.2.4
date	2013.02.05.15.04.39;	author corinna;	state Exp;
branches;
next	;

1.1.2.1
date	2003.05.26.19.39.07;	author cgf;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2003.09.10.16.23.40;	author cgf;	state Exp;
branches;
next	;


desc
@@


1.27
log
@	Throughout, keep function definitions and declarations in sync with
	newlib in terms of C99 "restrict" keyword.
@
text
@/* Posix dirent.h for WIN32.

   Copyright 2001, 2002, 2003, 2005, 2006, 2007, 2008, 2010, 2012,
   2013 Red Hat, Inc.

   This software is a copyrighted work licensed under the terms of the
   Cygwin license.  Please consult the file "CYGWIN_LICENSE" for
   details. */

/* Including this file should not require any Windows headers.  */

#ifndef _SYS_DIRENT_H
#define _SYS_DIRENT_H

#include <sys/types.h>
#include <limits.h>

#define __DIRENT_VERSION	2

#ifndef __x86_64__
#pragma pack(push,4)
#endif
#define _DIRENT_HAVE_D_TYPE
struct dirent
{
  uint32_t __d_version;			/* Used internally */
  ino_t d_ino;
  unsigned char d_type;
  unsigned char __d_unused1[3];
  __uint32_t __d_internal1;
  char d_name[NAME_MAX + 1];
};
#ifndef __x86_64__
#pragma pack(pop)
#endif

#define d_fileno d_ino			/* BSD compatible definition */

#ifdef __x86_64__
#define __DIRENT_COOKIE 0xcdcd8484
#else
#define __DIRENT_COOKIE 0xdede4242
#endif

#ifndef __x86_64__
#pragma pack(push,4)
#endif
typedef struct __DIR
{
  /* This is first to set alignment in non _COMPILING_NEWLIB case.  */
  unsigned long __d_cookie;
  struct dirent *__d_dirent;
  char *__d_dirname;			/* directory name with trailing '*' */
  __int32_t __d_position;			/* used by telldir/seekdir */
  int __d_fd;
  uintptr_t __d_internal;
  void *__handle;
  void *__fh;
  unsigned __flags;
} DIR;
#ifndef __x86_64__
#pragma pack(pop)
#endif

DIR *opendir (const char *);
DIR *fdopendir (int);
struct dirent *readdir (DIR *);
int readdir_r (DIR * __restrict, struct dirent * __restrict,
	       struct dirent ** __restrict);
void rewinddir (DIR *);
int closedir (DIR *);

int dirfd (DIR *);

#ifndef _POSIX_SOURCE
#ifndef __INSIDE_CYGWIN__
long telldir (DIR *);
void seekdir (DIR *, long loc);
#endif

int scandir (const char *__dir,
	     struct dirent ***__namelist,
	     int (*select) (const struct dirent *),
	     int (*compar) (const struct dirent **, const struct dirent **));

int scandirat (int __dirfd, const char *__dir, struct dirent ***__namelist,
	       int (*select) (const struct dirent *),
	       int (*compar) (const struct dirent **, const struct dirent **));

int alphasort (const struct dirent **__a, const struct dirent **__b);
#ifdef _DIRENT_HAVE_D_TYPE
/* File types for `d_type'.  */
enum
{
  DT_UNKNOWN = 0,
# define DT_UNKNOWN     DT_UNKNOWN
  DT_FIFO = 1,
# define DT_FIFO        DT_FIFO
  DT_CHR = 2,
# define DT_CHR         DT_CHR
  DT_DIR = 4,
# define DT_DIR         DT_DIR
  DT_BLK = 6,
# define DT_BLK         DT_BLK
  DT_REG = 8,
# define DT_REG         DT_REG
  DT_LNK = 10,
# define DT_LNK         DT_LNK
  DT_SOCK = 12,
# define DT_SOCK        DT_SOCK
  DT_WHT = 14
# define DT_WHT         DT_WHT
};

/* Convert between stat structure types and directory types.  */
# define IFTODT(mode)		(((mode) & 0170000) >> 12)
# define DTTOIF(dirtype)        ((dirtype) << 12)
#endif /* _DIRENT_HAVE_D_TYPE */
#endif /* _POSIX_SOURCE */
#endif /*_SYS_DIRENT_H*/
@


1.26
log
@	* Merge in cygwin-64bit-branch.
@
text
@d68 2
a69 1
int readdir_r (DIR *, struct dirent *, struct dirent **);
@


1.25
log
@Throughout, update copyrights to reflect dates which correspond to main-branch
checkins.  Regularize copyright format.
@
text
@d3 2
a4 1
   Copyright 2001, 2002, 2003, 2005, 2006, 2007, 2008, 2010, 2012 Red Hat, Inc.
d20 1
d22 1
d26 2
a27 2
  long __d_version;			/* Used internally */
  __ino64_t d_ino;
d33 1
d35 1
d39 3
d43 1
d45 1
d47 1
d54 1
a54 1
  long __d_position;			/* used by telldir/seekdir */
d56 1
a56 1
  unsigned __d_internal;
d61 1
d63 1
@


1.24
log
@	* cygwin.din (scandirat): Export.
	* posix.sgml (std-gnu): Add scandirat.
	* syscalls.cc (scandirat): New function.
	* include/cygwin/version.h (CYGWIN_VERSION_API_MINOR): Bump.
	* include/sys/dirent.h (scandirat): Declare.
@
text
@d3 1
a3 1
   Copyright 2001, 2002, 2003, 2005, 2006, 2007, 2010, 2012 Red Hat, Inc.
@


1.24.2.1
log
@	* include/cygwin/stat.h (struct __stat64): Drop entirely in favor of
	struct stat.  Accommodate throughout Cygwin.
	* include/cygwin/types.h: Throughout, drop current, internal types
	used since Cygwin 1.5 with the base type they have been used for.
	Throughout, define types based on bitsize-specific types where
	appropriate.  Accommodate throughout Cygwin.
	* include/sys/cygwin.h: Drop __uid32_t and __gid32_t in favor of
	uid_t and gid_t.  Define uid/gid types based on bitsize-specific types.
	(struct external_pinfo): Accommodate above change.
	* cygtls.h (struct _local_storage): Drop unused members grp and
	namearray,
	* tlsoffsets.h: Regenerate.
	* devices.h (_dev_t): Drop definition.  Use dev_t throughout instead.
	* devices.cc: Regenerate.

	Probably temporary patch to drop unneeded functionality on x86_64:
	* fcntl.cc (_fcntl): Alias to fcntl64 on x86_64.
	* glob.cc (CYGWIN_gl_stat): Simplify on x86_64.
	* grp.cc (grp32togrp16): Don't define on x86_64.
	(getgrgid): Alias to getgrgid32 on x86_64.
	(getgrnam): Alias to getgrnam32 on x86_64.
	(getgrent): Alias to getgrent32 on x86_64.
	(getgroups): Alias to getgroups32 on x86_64.
	(initgroups): Alias to initgroups32 on x86_64.
	(setgroups): Alias to setgroups32 on x86_64.
	* mmap.cc (mmap): Alias to mmap64 on x86_64.
	* passwd.cc (getpwuid): Alias to getpwuid32 on x86_64.
	(getpwuid_r): Alias to getpwuid_r32 on x86_64.
	(getpwduid): Don't define on x86_64.
	* syscalls.cc (lseek): Alias to lseek64 on x86_64.
	(_lseek): Alias to lseek64 on x86_64.
	(chown): Alias to chown32 on x86_64.
	(lchown): Alias to lchown32 on x86_64.
	(fchown): Alias to fchown32 on x86_64.
	(stat64_to_stat32): Don't define on x86_64.
	(fstat): Alias to fstat64 on x86_64.
	(_fstat_r): Alias to _fstat64_r on x86_64.
	(stat): Alias to stat64 on x86_64.
	(_stat_r): Alias to _stat64_r on x86_64.
	(lstat): Alias to lstat64 on x86_64.
	(ftruncate): Alias to ftruncate64 on x86_64.
	(truncate): Alias to truncate64 on x86_64.
	(seteuid): Alias to seteuid32 on x86_64.
	(setuid): Alias to setuid32 on x86_64.
	(setreuid): Alias to setreuid32 on x86_64.
	(setegid): Alias to setegid32 on x86_64.
	(setgid): Alias to setgid32 on x86_64.
	(setregid): Alias to setregid32 on x86_64.
	* uinfo.cc (getuid): Alias to getuid32 on x86_64.
	(getgid): Alias to getgid32 on x86_64.
	(geteuid): Alias to geteuid32 on x86_64.
	(getegid): Alias to getegid32 on x86_64.
	* winsup.h (ILLEGAL_UID16): Don't define on x86_64.
	(ILLEGAL_GID16): Ditto.
	(uid16touid32): Don't declare on x86_64.
	(gid16togid32): Don't declare on x86_64.
@
text
@d24 1
a24 1
  ino_t d_ino;
d43 1
a43 1
  __int32_t __d_position;			/* used by telldir/seekdir */
@


1.24.2.2
log
@	* cygthread.cc: Fix usage of %p in debug printfs, throughout.
	* dcrt0.cc: Ditto.
	* dtable.cc: Ditto.
	* errno.cc: Ditto.
	* exceptions.cc: Ditto.
	* fhandler.cc: Ditto.
	* fhandler_console.cc: Ditto.
	* fhandler_disk_file.cc: Ditto.

	* fhandler_clipboard.cc (cygnativeformat): Define as UINT.
	(fhandler_dev_clipboard::read): Ditto for local format variable.
	Use casts to compare off_t with size_t value.
	* fhandler_console.cc (fhandler_console::ioctl): Avoid compiler
	warnings.
	* fhandler_disk_file.cc (fhandler_disk_file::opendir): Fix cast.
	* include/sys/dirent.h (struct __DIR): Define __d_internal as uintptr_t,
	rather than unsigned int.

	And pull in changes from HEAD.
@
text
@d45 1
a45 1
  uintptr_t __d_internal;
@


1.24.2.3
log
@Pull in changes from HEAD
@
text
@d3 1
a3 1
   Copyright 2001, 2002, 2003, 2005, 2006, 2007, 2008, 2010, 2012 Red Hat, Inc.
@


1.24.2.4
log
@	* miscfuncs.cc (RtlFillMemory): Declare.
	(RtlCopyMemory): Declare.
	(memset): Just call RtlFillMemory.
	(memcpy): Just call RtlCopyMemory.
	* mmap.cc (class mmap_record): Drop enforced packing.  Reorder members
	to allow tight packing on 32 as well as on 64 bit.
	* include/sys/dirent.h: Don't enforced structure packing on x86_64.
	(__DIRENT_COOKIE): Use different value on 64 bit.
@
text
@d3 1
a3 2
   Copyright 2001, 2002, 2003, 2005, 2006, 2007, 2008, 2010, 2012,
   2013 Red Hat, Inc.
a18 1
#ifndef __x86_64__
a19 1
#endif
d23 1
a23 1
  uint32_t __d_version;			/* Used internally */
a29 1
#ifndef __x86_64__
a30 1
#endif
a33 3
#ifdef __x86_64__
#define __DIRENT_COOKIE 0xcdcd8484
#else
a34 1
#endif
a35 1
#ifndef __x86_64__
a36 1
#endif
a49 1
#ifndef __x86_64__
a50 1
#endif
@


1.23
log
@	* include/sys/dirent.h (d_fileno): Define as d_ino.
@
text
@d3 1
a3 1
   Copyright 2001, 2002, 2003, 2005, 2006, 2007, 2010 Red Hat, Inc.
d72 4
@


1.22
log
@	Align seekdir and telldir API to POSIX definition.
	* Makefile.in (NEW_FUNCTIONS): Remove seekdir and telldir mappings.
	* dir.cc (telldir): Move functionality from telldir64 here.  Use
	long, rather than _off_t.
	(telldir64): Just call telldir.  Only keep for backward compatibility.
	(seekdir): Move functionality from seekdir64 here.  Use long, rather
	than _off_t.
	(seekdir64): Just call seekdir.  Only keep for backward compatibility.
	* fhandler.h: Throughout, change prototypes of seekdir and telldir
	methods to use long, rather than _off64_t.
	* fhandler_disk_file.cc: Change aforementioned methods accordingly.
	* fhandler_netdrive.cc: Ditto.
	* fhandler_registry.cc: Ditto.
	* fhandler_virtual.cc: Ditto.
	* include/sys/dirent.h (struct __DIR): Change __d_position from
	_off_t to long to reflect API change.
	(telldir): Change prototype to use long, rather than off_t.
	(seekdir): Ditto.
@
text
@d32 2
@


1.21
log
@	Remove all traces of __CYGWIN_USE_BIG_TYPES__.

	* include/cygwin/config.h: Move Cygwin-specific build flags from
	newlib's sys/config.h here.  Add a comment.
@
text
@d41 1
a41 1
  _off_t __d_position;			/* used by telldir/seekdir */
d61 2
a62 2
off_t telldir (DIR *);
void seekdir (DIR *, off_t loc);
@


1.20
log
@	* dir.cc (readdir_worker): Initialize dirent.d_type and __d_unused1.
	* fhandler_disk_file.cc (fhandler_disk_file::readdir_helper):
	Set dirent.d_type based on FILE_ATTRIBUTE_*.
	* include/sys/dirent.h: Define _DIRENT_HAVE_D_TYPE (enables DT_*
	declarations).
	(struct dirent): Add d_type. Adjust __d_unused1 size to preserve layout.
@
text
@d3 1
a3 1
   Copyright 2001, 2002, 2003, 2005, 2006, 2007 Red Hat, Inc.
a19 1
#if defined(__INSIDE_CYGWIN__) || defined (__CYGWIN_USE_BIG_TYPES__)
a29 10
#else
struct dirent
{
  long d_version;
  long d_reserved[2];
  long d_fd;
  ino_t d_ino;
  char d_name[NAME_MAX + 1];
};
#endif
@


1.19
log
@	* dcrt0.cc (initial_env): Use PATH_MAX instead of CYG_MAX_PATH for path
	name buffer size.
	(dll_crt0_1): Allocate new_argv0 with PATH_MAX size.
	* exceptions.cc (debugger_command): Set size to 2 * PATH_MAX + 20;
	(error_start_init): Use PATH_MAX instead of CYG_MAX_PATH for path
	name buffer size.
	* external.cc (fillout_pinfo): Always fill out ep.progname 0-terminated.
	Fill out ep.progname_long.
	* fhandler_process.cc (fhandler_process::fill_filebuf): Allocate
	buffer for executable filename with PATH_MAX size.
	* pinfo.cc: Throughout use PATH_MAX instead of CYG_MAX_PATH.
	* pinfo.h (class _pinfo): Set progname size to PATH_MAX.
	* smallprint.cc: Include limits.h.  Use PATH_MAX instead of CYG_MAX_PATH
	for path name buffer size.
	* strace.cc (strace::vsprntf): Ditto.
	* include/sys/cygwin.h (EXTERNAL_PINFO_VERSION_32_LP): Define.
	(EXTERNAL_PINFO_VERSION): Set to EXTERNAL_PINFO_VERSION_32_LP.
	(struct external_pinfo): Add progname_long member.
	* include/sys/dirent.h: Correctly include limits.h instead of
	sys/limits.h.
@
text
@d21 1
d26 2
a27 1
  __uint32_t __d_unused1;
d82 1
a82 1
#if 0  /* these make no sense in the absence of d_type */
d109 1
a109 1
#endif /* #if 0 */
@


1.18
log
@	* fhandler_registry.cc: Use NAME_MAX + 1 instead of CYG_MAX_PATH
	throughout for subkey name buffer size.
	* fhandler_socket.cc (search_wsa_event_slot): Use MAX_PATH instead of
	CYG_MAX_PATH for mutext name buffer size.
	(fhandler_socket::init_events): Ditto.
	* fhandler_virtual.cc (fhandler_virtual::opendir): Check path length
	against PATH_MAX instead of against CYG_MAX_PATH.
	* registry.cc (get_registry_hive_path): Use PATH_MAX instead of
	CYG_MAX_PATH for registry value path buffer size.
	* shared.cc (open_shared): Use MAX_PATH instead of CYG_MAX_PATH
	for shared memory name buffer size.
	* thread.cc (semaphore::semaphore): Use MAX_PATH instead of CYG_MAX_PATH
	for semaphore name buffer size.
	* uinfo.cc (cygheap_user::env_userprofile): Use PATH_MAX instead of
	CYG_MAX_PATH for temporary path name buffer size.
	* winf.h (LINE_BUF_CHUNK): Define as MAX_PATH * 2.
	* include/sys/dirent.h: Include sys/limits.h.  Define name buffer sizes
	using NAME_MAX.
@
text
@d15 1
a15 1
#include <sys/limits.h>
@


1.17
log
@	* cygwin.din: Export fdopendir.
	* dir.cc (opendir): Call fhandler's opendir with fd set to -1.
	(fdopendir): New function.
	(seekdir64): Use dirent_info_mask.
	(rewinddir): Ditto.
	(closedir): Only release underlying file descriptor if it has been
	reserved by opendir itself.
	* fhandler.cc (fhandler_base::opendir): Accommodate new parameter.
	* fhandler.h (dirent_states): Add dirent_valid_fd and dirent_info_mask.
	(fhander_XXX::opendir): Add file descriptor parameter.  Use regparms.
	(fhandler_procnet::opendir): Drop declaration.
	* fhandler_disk_file.cc (fhandler_disk_file::opendir): Ditto.
	If called from fdopendir, use existing handle to re-open directory
	with valid flags.  Rename fd to cfd.  Use only if no valid incoming fd.
	(fhandler_cygdrive::opendir): Accommodate new parameter.
	* fhandler_process.cc (fhandler_process::opendir): Ditto.
	* fhandler_procnet.cc (fhandler_procnet::opendir): Drop definition.
	* fhandler_virtual.cc (fhandler_virtual::opendir): Accommodate new
	parameter.  Only create new file descriptor entry if called from
	opendir.  Remove duplicated setting of dir->__flags.
	* posix.sgml: Add fdopendir to list of implemented Solaris functions.
	* include/cygwin/version.h: Bump API minor number.
	* include/sys/dirent.h: Declare fdopendir.
@
text
@d15 1
d27 1
a27 1
  char d_name[256];			/* FIXME: use NAME_MAX? */
d36 1
a36 1
  char d_name[256];
@


1.16
log
@	* include/sys/dirent.h (struct __DIR): Rename __d_unused to
	__d_internal.
	* fhandler_disk_file.cc (struct __DIR_cache): Remove useless "typedef".
	(d_dirname): Remove useless "struct".
	(d_cachepos): Ditto.
	(d_cache): Ditto.
	(class __DIR_mounts): New class, implementing mount point tracking
	for readdir.
	(d_mounts): New macro for easy access to __DIR_mounts structure.
	(fhandler_disk_file::opendir): Allocate __DIR_mounts structure and
	let __d_internal element of dir point to it.
	(fhandler_disk_file::readdir_helper): Add mount points in the current
	directory, which don't have a real directory backing them.
	Don't generate an inode number for /dev.  Add comment, why.
	(fhandler_disk_file::readdir): Move filling fname to an earlier point.
	Check if current entry is a mount point and evaluate correct inode
	number for it.
	(fhandler_disk_file::readdir_9x): Ditto.
	(fhandler_disk_file::rewinddir): Set all mount points in this directory
	to "not found" so that they are listed again after calling rewinddir().
	(fhandler_disk_file::closedir): Deallocate __DIR_mounts structure.
	* path.cc (mount_info::get_mounts_here): New method to evaluate a list
	of mount points in a given parent directory.
	* shared_info.h (class mount_info): Declare get_mounts_here.
@
text
@d3 1
a3 1
   Copyright 2001, 2002, 2003, 2005, 2006 Red Hat, Inc.
d59 1
@


1.15
log
@	* include/sys/dirent.h (struct dirent): Revert misguided attempt to
	rename __d_unused1 to __d_fd.
@
text
@d51 1
a51 1
  unsigned __d_unused;
@


1.14
log
@	* autoload.cc (NtQueryDirectoryFile): Define.
	* dir.cc (__opendir_with_d_ino): Just call opendir.
	(opendir): Remove CYGWIN_VERSION_CHECK_FOR_NEEDS_D_INO handling.
	(readdir_worker): Only try generating d_ino if it's 0.
	Utilize namehash of directories fhandler.  Call readdir_get_ino to
	generate d_ino for "..".
	(seekdir64): Keep dirent_set_d_ino flag.
	* fhandler.h (enum dirent_states): Add dirent_get_d_ino.
	(class fhandler_disk_file): Declare new private methods readdir_helper
	and readdir_9x.
	* fhandler_disk_file.cc (path_conv::hasgood_inode): New method to
	evaluate if a filesystem has reliable inode numbers.
	(fhandler_base::fstat_by_handle): Accomodate structure member name
	change from IndexNumber to FileId.
	(fhandler_base::fstat_helper): Call hasgood_inode here.
	(fhandler_disk_file::opendir): Call fhaccess only for real files.
	Don't append '*' to __d_dirname here, move to readdir_9x.  On NT,
	open directory handle here.  Set dirent_get_d_ino and dirent_set_d_ino
	flags according to wincap and filesystem.
	(fhandler_disk_file::readdir_helper): New method to implement readdir
	postprocessing only once.
	(readdir_get_ino_by_handle): New static function.
	(readdir_get_ino): New function to centralize inode number evaluation
	in case inode number hasn't been returned by NtQueryDirectoryFile.
	(fhandler_disk_file::readdir): Move old functionality to readdir_9x.
	Call readdir_9x when on 9x/Me.  Implement NT specific readdir here.
	(fhandler_disk_file::readdir_9x): Move 9x specific readdir here.
	(fhandler_disk_file::seekdir): Accomodate new NT readdir method.
	(fhandler_disk_file::closedir): Ditto.
	(fhandler_cygdrive::fstat): Set d_ino to namehash. Add comment.
	(fhandler_cygdrive::opendir): Call get_namehash to prepare later
	correct evaluation of d_ino.
	(fhandler_cygdrive::readdir): Replace recursion with loop. Evaluate
	drive's d_ino by calling readdir_get_ino.
	* fhandler_proc.cc (fhandler_proc::readdir): Set dirent_saw_dot and
	dirent_saw_dot_dot to avoid seeing . and .. entries twice.
	* fhandler_process.cc (fhandler_process::readdir): Ditto.
	* fhandler_registry.cc (fhandler_registry::readdir): Ditto.
	* ntdll.h (STATUS_INVALID_PARAMETER): New define.
	(STATUS_INVALID_LEVEL): New define.
	(struct _FILE_INTERNAL_INFORMATION): Rename member IndexNumber to
	FileId (as in Nebbitt).
	* path.h (path_conv::hasgood_inode): Now implemented in
	fhandler_disk_file.cc.
	* wincap.h (wincaps::has_fileid_dirinfo): New element.
	* wincap.cc: Implement above element throughout.
	* winsup.h (readdir_get_ino): Add declaration.
	* include/sys/dirent.h (struct dirent): Slightly rename structure
	members to accomodate changes.
	Remove __USE_EXPENSIVE_CYGWIN_D_INO handling and declaration of
	__opendir_with_d_ino.
@
text
@d24 1
a24 1
  __uint32_t __d_fd;
@


1.13
log
@* include/cygwin/version.h: Bump API minor number to 151.
* dir.cc (__opendir_with_d_ino): New function.
(opendir): Set flag if we should be calculating inodes.
(readdir_worker): Calculate d_ino by calling stat if the user has asked for it.
(seekdir64): Maintain all persistent flag settings.
* fhandler.h (dirent_states): Add dirent_set_d_ino.
* fhandler_disk_file.cc (fhandler_disk_file::opendir): Reflect changes to
dirent structure.
* fhandler_virtual.cc (fhandler_virtual::opendir): Ditto.
* include/sys/dirent.h (struct dirent): Coalesce two similar structures.
Remove all threads of the apparently highly confusing references to inodes.
Add support for calculating a real inode if __USE_EXPENSIVE_CYGWIN_D_INO is
defined.
@
text
@d3 1
a3 1
   Copyright 2001, 2002, 2003, 2005 Red Hat, Inc.
d23 3
a25 3
  __ino64_t __dirent_internal;
  __uint32_t __dirent_unused1;
  __uint32_t __dirent_internal1;
d34 1
a34 1
  ino_t __invalid_d_ino;		/* DO NOT USE: No longer available since cygwin 1.5.19 */
a57 1
#ifndef __USE_EXPENSIVE_CYGWIN_D_INO
a58 6
#else
#define d_ino __dirent_internal
DIR *__opendir_with_d_ino (const char *);
#define opendir __opendir_with_d_ino
#endif

@


1.12
log
@* include/sys/dirent.h: Add comments for people who are REALLY confused about
whether they should be using something called __invalid_d_ino or not.
@
text
@d19 1
a19 1
#ifdef __INSIDE_CYGWIN__
d22 4
a25 5
  long d_version;			/* Used since Cygwin 1.3.3. */
  __ino64_t __invalid_d_ino;		/* DO NOT USE: No longer available since cygwin 1.5.19 */
  long d_fd;				/* File descriptor of open directory.
					   Used since Cygwin 1.3.3. */
  unsigned __invalid_ino32;		/* DO NOT USE: No longer available since cygwin 1.5.19 */
a28 10
#ifdef __CYGWIN_USE_BIG_TYPES__
struct dirent
{
  long d_version;
  ino_t __invalid_d_ino;		/* DO NOT USE: No longer available since cygwin 1.5.19 */
  long d_fd;
  unsigned long __invalid_ino32;	/* DO NOT USE: No longer available since cygwin 1.5.19 */
  char d_name[256];
};
#else
a37 1
#endif
d50 2
a51 1
  __ino64_t __d_dirhash;		/* hash of directory name for use by readdir */
d58 1
d60 6
@


1.11
log
@* dir.cc (readdir_worker): Fill in invalid fields with -1.  Accommodate name
change from __ino32 to __invalid_ino32.
* include/sys/dirent.h (__invalid_ino32): Rename from __ino32.  Don't define
unused d_type macros.
@
text
@d22 6
a27 6
  long d_version;	/* Used since Cygwin 1.3.3. */
  __ino64_t __invalid_d_ino;
  long d_fd;		/* File descriptor of open directory.
			   Used since Cygwin 1.3.3. */
  unsigned __invalid_ino32;
  char d_name[256];	/* FIXME: use NAME_MAX? */
d34 1
a34 1
  ino_t __invalid_d_ino;
d36 1
a36 1
  unsigned long __invalid_ino32;
d45 1
a45 1
  ino_t __invalid_d_ino;
d60 3
a62 3
  char *__d_dirname;		/* directory name with trailing '*' */
  _off_t __d_position;		/* used by telldir/seekdir */
  __ino64_t __d_dirhash;	/* hash of directory name for use by readdir */
d116 1
a116 1
#endif
@


1.10
log
@* include/sys/dirent.h: Change __deprecated_d_ino to __invalid_d_ino throughout
to make things a little clearer.
* dir.cc (readdir_worker): Reflect above change.
@
text
@d26 1
a26 1
  unsigned __ino32;
d36 1
a36 1
  unsigned long __ino32;
d89 1
d116 1
@


1.9
log
@* dirent.h: Change the rest of the d_ino's to __deprecated_d_ino.
@
text
@d23 1
a23 1
  __ino64_t __deprecated_d_ino;
d34 1
a34 1
  ino_t __deprecated_d_ino;
d45 1
a45 1
  ino_t __deprecated_d_ino;
@


1.8
log
@* dir.cc (readdir_workdir): Only fill out d_ino when linked into older app.
* include/cygwin/version.h: Bump api minor number to 147, reflecting
obsolescence of d_ino.
(CYGWIN_VERSION_USER_API_VERSION_COMBINED): New convenience macro.
(CYGWIN_VERSION_CHECK_FOR_NEEDS_D_INO): New convenience macro.
@
text
@d3 1
a3 1
   Copyright 2001, 2002, 2003 Red Hat, Inc.
d23 1
a23 1
  __ino64_t __deprecated_d_ino;	/* still junk but with more bits */
d34 1
a34 1
  ino_t d_ino;
d45 1
a45 1
  ino_t d_ino;
@


1.7
log
@* cygerrno.h (geterrno_from_win_error): Change declaration to default to using
GetLastError and EACCESS.
* cygwin.din: Export readdir_r.
* include/cygwin/version.h: Bump API version number to 138.
* syscalls.cc (readdir_worker): New function, renamed from old readdir()
function.
(readdir): Use readdir_worker.
(readdir_r): New function.
* fhandler.h (fhandler_base::readdir): Accommodate second argument indicating
dirent buffer.
(fhandler_disk_file::readdir): Ditto.
(fhandler_cygdrive::readdir): Ditto.
(fhandler_proc::readdir): Ditto.
(fhandler_netdrive::readdir): Ditto.
(fhandler_registry::readdir): Ditto.
(fhandler_process::readdir): Ditto.
* fhandler.cc (fhandler_base::readdir): Ditto.
* fhandler_disk_file.cc (fhandler_disk_file::readdir): Ditto.
* fhandler_cygdrive.cc (fhandler_cygdrive::readdir): Ditto.
* fhandler_proc.cc (fhandler_proc::readdir): Ditto.
* fhandler_netdrive.cc (fhandler_netdrive::readdir): Ditto.
* fhandler_registry.cc (fhandler_registry::readdir): Ditto.
* fhandler_process.cc (fhandler_process::readdir): Ditto.
@
text
@d23 1
a23 1
  __ino64_t d_ino;	/* still junk but with more bits */
@


1.6
log
@white space
@
text
@d71 1
@


1.5
log
@* include/endian.h: Move everything into this file and define things more like
linux.
* include/cygwin/types.h: Include endian.h.
* include/sys/dirent.h: Define DT_* types and conversion macros.
* pinfo.cc (pinfo::init): Remove special handling for PID_ALLPIDS and execed
code, even though it probably still isn't quite right.
@
text
@d90 2
a91 2
  {
        DT_UNKNOWN = 0,
d93 1
a93 1
	    DT_FIFO = 1,
d95 1
a95 1
	        DT_CHR = 2,
d97 1
a97 1
		    DT_DIR = 4,
d99 1
a99 1
		        DT_BLK = 6,
d101 1
a101 1
			    DT_REG = 8,
d103 1
a103 1
			        DT_LNK = 10,
d105 1
a105 1
				    DT_SOCK = 12,
d107 1
a107 1
				        DT_WHT = 14
d109 1
a109 1
					    };
d112 1
a112 1
# define IFTODT(mode)   (((mode) & 0170000) >> 12)
d115 1
a115 2

#endif
@


1.4
log
@white space and minor comment cleanup.
@
text
@d88 26
@


1.3
log
@* dir.cc (readdir): Reinstate setting of old ino field for legacy applications.
* dirent.h (dirent): Rename unused field to __ino32.
* passwd.cc (getpwnam_r): Initialize pw_comment field.
@
text
@d10 1
a10 1
   
@


1.2
log
@Throughout, remove __d_u.__d_data fields from DIR structure.
* include/sys/dirent.h (dirent): Remvoe old_d_ino.
(DIR): Make __d_dirhash a 64 bit value.  Remove __d_data and __d_u.  Add
__flags.
* dir.cc (opendir_states): New enum.
(opendir): Clear new DIR __flags field.
(readdir): Fill in '.' and '..' entries if we hit EOF and we haven't seen them
already.  Nuke setting of old_d_ino.
(rewinddir): Reset DIR __flags field.
(seekdir64): Ditto.
* fhandler_disk_file.cc (fhandler_cygdrive::fhandler_cygdrive): Remove special
handling of "." and ".." since they are now handled automatically.
@
text
@d26 1
a26 1
  unsigned __flags;	/* Used internally. */
d36 1
a36 1
  unsigned long __unused;
@


1.1
log
@	* Makefile.in (CYGWIN_START): Define as crt0.o.  Add to TARGET_LIBS.
	* fhandler.h (fhandler_virtual::fstat): Remove useless declaration.
	* fhandler_virtual.cc: Remove _COMPILING_NEWLIB define.
	* ipc.cc (ftok): Use stat64.
	* syscalls.cc (_fstat64): Remove alias.
	(_fstat): Ditto.
	(_stat): Ditto.
	(_fstat64_r): New function.
	(_fstat_r): Ditto.
	(_stat64_r): Ditto.
	(stat_r): Ditto.
	* crt0.o: New file, moved from newlib.
	* include/sys/param.h: Ditto.
	* include/sys/utime.h: Ditto.
	* include/sys/utmp.h: Ditto.
	* include/sys/dirent.h: Ditto.  Expose different struct dirent,
	dependening of the environment.
@
text
@d3 1
a3 1
   Copyright 2001 Red Hat, Inc.
d26 1
a26 1
  __ino32_t old_d_ino;	/* Just for compatibility, it's junk */
d36 1
a36 1
  unsigned long old_d_ino;
d54 1
d62 4
a65 13
  unsigned long __d_dirhash;	/* hash of directory name for use by
				   readdir */
  union
    {
#ifdef __INSIDE_CYGWIN__
      struct
	{
	  void *__handle;
	  void *__fh;
	} __d_data;
#endif
      char __d_filler[16];
    } __d_u;
d67 1
@


1.1.2.1
log
@merge from trunk
@
text
@@


1.1.2.2
log
@merge from trunk
@
text
@d3 1
a3 1
   Copyright 2001, 2002, 2003 Red Hat, Inc.
d26 1
a26 1
  unsigned __ino32;
d36 1
a36 1
  unsigned long __ino32;
a53 1
#pragma pack(push,4)
d61 13
a73 4
  __ino64_t __d_dirhash;	/* hash of directory name for use by readdir */
  void *__handle;
  void *__fh;
  unsigned __flags;
a74 1
#pragma pack(pop)
@


