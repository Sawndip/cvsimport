head	1.14;
access;
symbols
	cygwin-1_7_35-release:1.14
	cygwin-1_7_34-release:1.14
	cygwin-1_7_33-release:1.14
	cygwin-1_7_32-release:1.14
	cygwin-1_7_31-release:1.14
	cygwin-1_7_30-release:1.14
	cygwin-1_7_29-release:1.14
	cygwin-1_7_29-release-branchpoint:1.14.0.4
	cygwin-pre-user-db:1.14
	cygwin-1_7_28-release:1.14
	cygwin-1_7_27-release:1.14
	cygwin-1_7_26-release:1.14
	cygwin-1_7_25-release:1.14
	cygwin-1_7_24-release:1.14
	cygwin-1_7_23-release:1.14
	cygwin-1_7_22-release:1.14
	cygwin-1_7_21-release:1.14
	cygwin-1_7_20-release:1.14
	cygwin-1_7_19-release:1.14
	cygwin-64bit-postmerge:1.14
	cygwin-64bit-premerge-branch:1.14.0.2
	cygwin-64bit-premerge:1.14
	cygwin-1_7_18-release:1.14
	post-ptmalloc3:1.11.4.2
	pre-ptmalloc3:1.11.4.2
	cygwin-1_7_17-release:1.11
	cygwin-64bit-branch:1.11.0.4
	cygwin-1_7_16-release:1.11
	cygwin-1_7_15-release:1.11
	cygwin-1_7_14_2-release:1.11
	cygwin-1_7_14-release:1.11
	cygwin-1_7_12-release:1.11
	cygwin-1_7_11-release:1.11
	cygwin-1_7_10-release:1.11
	signal-rewrite:1.11.0.2
	pre-notty:1.10
	cygwin-1_7_9-release:1.10
	cv-post-1_7_9:1.10.0.2
	cygwin-1_7_8-release:1.10
	cygwin-1_7_7-release:1.8
	cygwin-1_7_5-release:1.8
	cygwin-1_7_4-release:1.8
	cygwin-1_7_3-release:1.8
	cygwin-1_7_2-release:1.8
	fifo_doover3:1.8.0.2
	cygwin-1_7_1-release:1.8
	prefifo:1.7
	cv-branch-2:1.7.0.2
	pre-ripout-set_console_state_for_spawn:1.7
	EOL_registry_mounts:1.7
	preoverlapped:1.6
	drop_9x_support_start:1.6
	cr-0x5f1:1.6.0.8
	cv-branch:1.6.0.6
	pre-ptymaster-archetype:1.6
	cr-0x3b58:1.6.0.4
	cr-0x5ef:1.6.0.2
	after-mmap-privanon-noreserve:1.6
	after-mmap-revamp:1.6
	before-mmap-revamp:1.6
	cgf-more-exit-sync:1.5
	post_wait_sig_exit:1.5
	pre_wait_sig_exit:1.5
	reparent-point:1.5
	noreparent:1.5.0.10
	cr-0x5e6:1.5.0.8
	cr-0x9e:1.5.0.6
	cr-0x9d:1.5.0.4
	cgf-deleteme:1.5.0.2
	pre-sigrewrite:1.5
	corinna-01:1.3
	cr-0x9c:1.3.0.6
	cr-0x9b:1.3.0.4
	cr-0x99:1.3
	Z-emcb-cygwin_daemon:1.3.0.2
	cgf-dev-branch:1.1.0.2
	pre-cgf-merge:1.3;
locks; strict;
comment	@ * @;


1.14
date	2013.01.21.04.38.31;	author cgf;	state Exp;
branches;
next	1.13;

1.13
date	2012.10.31.16.49.25;	author corinna;	state Exp;
branches;
next	1.12;

1.12
date	2012.10.31.16.48.50;	author corinna;	state Exp;
branches;
next	1.11;

1.11
date	2011.07.01.12.45.25;	author corinna;	state Exp;
branches
	1.11.4.1;
next	1.10;

1.10
date	2011.02.15.15.56.03;	author corinna;	state Exp;
branches;
next	1.9;

1.9
date	2011.02.11.12.42.30;	author corinna;	state Exp;
branches;
next	1.8;

1.8
date	2009.08.11.07.28.22;	author corinna;	state Exp;
branches;
next	1.7;

1.7
date	2007.10.18.10.42.43;	author corinna;	state Exp;
branches;
next	1.6;

1.6
date	2005.11.11.04.07.30;	author cgf;	state Exp;
branches;
next	1.5;

1.5
date	2003.11.15.17.04.10;	author cgf;	state Exp;
branches;
next	1.4;

1.4
date	2003.11.14.23.40.06;	author rbcollins;	state Exp;
branches;
next	1.3;

1.3
date	2003.08.12.10.23.40;	author corinna;	state Exp;
branches;
next	1.2;

1.2
date	2003.05.30.08.39.02;	author corinna;	state Exp;
branches;
next	1.1;

1.1
date	2003.05.12.11.06.27;	author corinna;	state Exp;
branches
	1.1.2.1;
next	;

1.11.4.1
date	2012.10.31.17.00.09;	author corinna;	state Exp;
branches;
next	1.11.4.2;

1.11.4.2
date	2013.01.21.13.52.14;	author corinna;	state Exp;
branches;
next	;

1.1.2.1
date	2003.05.26.19.39.07;	author cgf;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2003.06.06.00.27.50;	author cgf;	state Exp;
branches;
next	1.1.2.3;

1.1.2.3
date	2003.08.27.20.19.56;	author cgf;	state Exp;
branches;
next	;


desc
@@


1.14
log
@Throughout, update copyrights to reflect dates which correspond to main-branch
checkins.  Regularize copyright format.
@
text
@/* sys/param.h

   Copyright 1996, 1997, 1998, 2002, 2003, 2005, 2007, 2009, 2011, 2012 Red
   Hat, Inc.

   This software is a copyrighted work licensed under the terms of the
   Cygwin license.  Please consult the file "CYGWIN_LICENSE" for
   details. */

#ifndef _SYS_PARAM_H
#define _SYS_PARAM_H

#include <sys/types.h>
/* Linux includes limits.h, but this is not universally done. */
#include <limits.h>

#define __need_NULL
#include <stddef.h>

/* Max number of open files.  The Posix version is OPEN_MAX.  */
/* Number of fds is virtually unlimited in cygwin, but we must provide
   some reasonable value for Posix conformance */
#define NOFILE		8192

/* Max number of groups; must keep in sync with NGROUPS_MAX in limits.h */
#define NGROUPS		NGROUPS_MAX

/* Ticks/second for system calls such as times() */
/* FIXME: is this the appropriate value? */
#define HZ		1000

/* Max hostname size that can be dealt with (== Win32 MAX_HOSTNAME_LEN) */
#define MAXHOSTNAMELEN	128

/* Maximum path length including trailing NUL; the Posix version is PATH_MAX.
   MAXPATHLEN is the BSD variant. */
#define MAXPATHLEN      PATH_MAX

/* Maximum number of nested symlinks; the Posix version is SYMLOOP_MAX.
   MAXSYMLINKS is the BSD variant. */
#define MAXSYMLINKS	SYMLOOP_MAX

/* This is the number of bytes per block given in the st_blocks stat member.
   It should be in sync with S_BLKSIZE in sys/stat.h.  S_BLKSIZE is the
   BSD variant of this constant. */
#define DEV_BSIZE	1024

#ifndef NBBY
#define    NBBY 8
#endif

/* Bit map related macros. */
#define    setbit(a,i) ((a)[(i)/NBBY] |= 1<<((i)%NBBY))
#define    clrbit(a,i) ((a)[(i)/NBBY] &= ~(1<<((i)%NBBY)))
#define    isset(a,i)  ((a)[(i)/NBBY] & (1<<((i)%NBBY)))
#define    isclr(a,i)  (((a)[(i)/NBBY] & (1<<((i)%NBBY))) == 0)

/* Macros for counting and rounding. */
#ifndef howmany
#define    howmany(x, y)   (((x)+((y)-1))/(y))
#endif
#define    rounddown(x, y) (((x)/(y))*(y))
#define    roundup(x, y)   ((((x)+((y)-1))/(y))*(y))  /* to any y */
#define    roundup2(x, y)  (((x)+((y)-1))&(~((y)-1))) /* if y is powers of two */
#define powerof2(x)    ((((x)-1)&(x))==0)

/* Macros for min/max. */
#define    MIN(a,b)    (((a)<(b))?(a):(b))
#define    MAX(a,b)    (((a)>(b))?(a):(b))

#endif
@


1.13
log
@Fix copyright
@
text
@d3 2
a4 1
   Copyright 1996, 1997, 1998, 2002, 2003, 2007, 2009, 2011, 2012 Red Hat, Inc.
@


1.12
log
@	* include/sys/param.h: Include stddef.h to define NULL.
@
text
@d3 1
a3 1
   Copyright 1996, 1997, 1998, 2002, 2003, 2007, 2009, 2011 Red Hat, Inc.
@


1.11
log
@	* include/sys/param.h (NGROUPS): Redefine as NGROUPS_MAX.
	(MAXHOSTNAMELEN): Redefine with same value as MAX_HOSTNAME_LEN.  Change
	comment.
	(MAXPATHLEN): Improve comment.
	(MAXSYMLINKS): Define and add comment.
@
text
@d16 3
a46 4
#ifndef NULL
#define NULL            0L
#endif

@


1.11.4.1
log
@	* cygthread.cc: Fix usage of %p in debug printfs, throughout.
	* dcrt0.cc: Ditto.
	* dtable.cc: Ditto.
	* errno.cc: Ditto.
	* exceptions.cc: Ditto.
	* fhandler.cc: Ditto.
	* fhandler_console.cc: Ditto.
	* fhandler_disk_file.cc: Ditto.

	* fhandler_clipboard.cc (cygnativeformat): Define as UINT.
	(fhandler_dev_clipboard::read): Ditto for local format variable.
	Use casts to compare off_t with size_t value.
	* fhandler_console.cc (fhandler_console::ioctl): Avoid compiler
	warnings.
	* fhandler_disk_file.cc (fhandler_disk_file::opendir): Fix cast.
	* include/sys/dirent.h (struct __DIR): Define __d_internal as uintptr_t,
	rather than unsigned int.

	And pull in changes from HEAD.
@
text
@d3 1
a3 1
   Copyright 1996, 1997, 1998, 2002, 2003, 2007, 2009, 2011, 2012 Red Hat, Inc.
a15 3
#define __need_NULL
#include <stddef.h>

d44 4
@


1.11.4.2
log
@Pull in changes from HEAD
@
text
@d3 1
a3 2
   Copyright 1996, 1997, 1998, 2002, 2003, 2005, 2007, 2009, 2011, 2012 Red
   Hat, Inc.
@


1.10
log
@	* Throughout fix copyright dates.
@
text
@d22 1
a22 1
#define NGROUPS		1024
d28 2
a29 3
/* Max hostname size that can be dealt with */
/* FIXME: is this the appropriate value? */
#define MAXHOSTNAMELEN	64
d31 2
a32 1
/* The Posix version is PATH_MAX.  MAXPATHLEN is the BSD variant. */
d35 4
@


1.9
log
@	* include/endian.h: Move definitions of __BIG_ENDIAN, __LITTLE_ENDIAN,
	and __BYTE_ORDER into ...
	* include/bits/endian.h: New file.
	* include/arpa/nameser_compat.h: Include endian.h rather than defining
	BYTE_ORDER here.
	* include/asm/byteorder.h: Include bits/endian.h.  Drop definition of
	__LITTLE_ENDIAN.
	* include/netinet/ip.h: Include bits/endian.h.  Drop definitions of
	BIG_ENDIAN, LITTLE_ENDIAN, and BYTE_ORDER.  Use underscored variants
	of aforementioned constants.
	* include/netinet/tcp.h: Ditto.
	* include/sys/param.h: Drop disabled definitions of BIG_ENDIAN,
	LITTLE_ENDIAN, and BYTE_ORDER.

	* include/netinet/ip.h: Reformat.  Define setsockopt IP_TOS options
	matching recent RFCs.  Tweak comments.
@
text
@d3 1
a3 1
   Copyright 2001, 2003, 2007,2 2011 Red Hat, Inc.
@


1.8
log
@	* include/limits.h (NGROUPS_MAX): Set to a more sane value.
	* include/sys/param.h (NGROUPS): Ditto.
@
text
@d3 1
a3 1
   Copyright 2001, 2003, 2007 Red Hat, Inc.
a39 13
#if 0	/* defined in endian.h */
/* Some autoconf'd packages check for endianness.  When cross-building we
   can't run programs on the target.  Fortunately, autoconf supports the
   definition of byte order in sys/param.h (that's us!).
   The values here are the same as used in gdb/defs.h (are the more
   appropriate values?).  */
#define BIG_ENDIAN	4321
#define LITTLE_ENDIAN	1234

/* All known win32 systems are little endian.  */
#define BYTE_ORDER	LITTLE_ENDIAN
#endif

@


1.7
log
@	* include/sys/param.h (MAXPATHLEN): Define as PATH_MAX.
@
text
@d22 1
a22 1
#define NGROUPS		16
@


1.6
log
@* times.cc (hires_ms::prime): Comment out call to timeBeginPeriod for now.
(hires_ms::usecs): Call prime if haven't called began_period().
* param.h: Don't define stuff that is already defined in endian.h.
@
text
@d3 1
a3 1
   Copyright 2001, 2003 Red Hat, Inc.
d32 2
a33 3
/* This is defined to be the same as MAX_PATH which is used internally.
   The Posix version is PATH_MAX.  */
#define MAXPATHLEN      (260 - 1 /*NUL*/)
@


1.5
log
@* include/limits.h: Revert unsanctioned changes below.
* include/cygwin/config.h: Ditto.
* include/sys/param.h: Ditto.
@
text
@d41 1
d52 1
@


1.4
log
@2003-11-11  Robert Collins <rbtcollins@@hotmail.com>
	    Ron Parker <rdparker@@butlermfg.com>

	* bsdlib.cc: Update throughout to use CYG_MAX_PATH rather than MAX_PATH.
	* cygheap.h: Ditto.
	* dcrt0.cc: Ditto.
	* delqueue.cc: Ditto.
	* dlfcn.cc: Ditto.
	* dll_init.cc: Ditto.
	* dll_init.h: Ditto.
	* dtable.cc: Ditto.
	* environ.cc: Ditto.
	* environ.h: Ditto.
	* exceptions.cc: Ditto.
	* external.cc: Ditto.
	* fhandler_disk_file.cc: Ditto.
	* fhandler_proc.cc: Ditto.
	* fhandler_process.cc: Ditto.
	* fhandler_raw.cc: Ditto.
	* fhandler_registry.cc: Ditto.
	* fhandler_socket.cc: Ditto.
	* fhandler_virtual.cc: Ditto.
	* miscfuncs.cc: Ditto.
	* mmap.cc: Ditto.
	* netdb.cc: Ditto.
	* path.cc: Ditto.
	* path.h: Ditto.
	* pinfo.cc: Ditto.
	* pinfo.h: Ditto.
	* pthread.cc: Ditto.
	* registry.cc: Ditto.
	* shared.cc: Ditto.
	* shared_info.h: Ditto.
	* smallprint.c: Ditto.
	* spawn.cc: Ditto.
	* strace.cc: Ditto.
	* syscalls.cc: Ditto.
	* thread.h: Ditto.
	* uinfo.cc: Ditto.
	* winsup.h: Ditto.
	* include/limits.h: Ditto.
	* include/cygwin/config.h: Ditto.
	* include/sys/param.h: Ditto.
@
text
@d34 1
a34 1
#define MAXPATHLEN      (4096 - 1 /*NUL*/)
@


1.3
log
@	* include/sys/param.h (NBBY): Define if not defined.

	* include/sys/param.h (setbit): Add new bitmap related macro.
	(clrbit): Likewise.
	(isset): Likewise.
	(isclr): Likewise.
	(howmany): Add new counting/rounding macro.
	(rounddown): Likewise.
	(roundup): Likewise.
	(roundup2): Likewise.
	(powerof2): Likewise
	(MIN): Add macro for calculating min.
	(MAX): Add macro for calculating max.
@
text
@d34 1
a34 1
#define MAXPATHLEN      (260 - 1 /*NUL*/)
@


1.2
log
@	* include/sys/param.h: Add DEV_BSIZE.
@
text
@d56 23
@


1.1
log
@	* Makefile.in (CYGWIN_START): Define as crt0.o.  Add to TARGET_LIBS.
	* fhandler.h (fhandler_virtual::fstat): Remove useless declaration.
	* fhandler_virtual.cc: Remove _COMPILING_NEWLIB define.
	* ipc.cc (ftok): Use stat64.
	* syscalls.cc (_fstat64): Remove alias.
	(_fstat): Ditto.
	(_stat): Ditto.
	(_fstat64_r): New function.
	(_fstat_r): Ditto.
	(_stat64_r): Ditto.
	(stat_r): Ditto.
	* crt0.o: New file, moved from newlib.
	* include/sys/param.h: Ditto.
	* include/sys/utime.h: Ditto.
	* include/sys/utmp.h: Ditto.
	* include/sys/dirent.h: Ditto.  Expose different struct dirent,
	dependening of the environment.
@
text
@d3 1
a3 1
   Copyright 2001 Red Hat, Inc.
d35 5
@


1.1.2.1
log
@merge from trunk
@
text
@@


1.1.2.2
log
@merge from trunk
@
text
@d3 1
a3 1
   Copyright 2001, 2003 Red Hat, Inc.
a34 5

/* This is the number of bytes per block given in the st_blocks stat member.
   It should be in sync with S_BLKSIZE in sys/stat.h.  S_BLKSIZE is the
   BSD variant of this constant. */
#define DEV_BSIZE	1024
@


1.1.2.3
log
@merge from trunk
@
text
@a55 23
#ifndef NBBY
#define    NBBY 8
#endif

/* Bit map related macros. */
#define    setbit(a,i) ((a)[(i)/NBBY] |= 1<<((i)%NBBY))
#define    clrbit(a,i) ((a)[(i)/NBBY] &= ~(1<<((i)%NBBY)))
#define    isset(a,i)  ((a)[(i)/NBBY] & (1<<((i)%NBBY)))
#define    isclr(a,i)  (((a)[(i)/NBBY] & (1<<((i)%NBBY))) == 0)

/* Macros for counting and rounding. */
#ifndef howmany
#define    howmany(x, y)   (((x)+((y)-1))/(y))
#endif
#define    rounddown(x, y) (((x)/(y))*(y))
#define    roundup(x, y)   ((((x)+((y)-1))/(y))*(y))  /* to any y */
#define    roundup2(x, y)  (((x)+((y)-1))&(~((y)-1))) /* if y is powers of two */
#define powerof2(x)    ((((x)-1)&(x))==0)

/* Macros for min/max. */
#define    MIN(a,b)    (((a)<(b))?(a):(b))
#define    MAX(a,b)    (((a)>(b))?(a):(b))

@


