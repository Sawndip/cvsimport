head	1.15;
access;
symbols
	cygwin-1_7_35-release:1.15
	cygwin-1_7_34-release:1.15
	cygwin-1_7_33-release:1.15
	cygwin-1_7_32-release:1.15
	cygwin-1_7_31-release:1.15
	cygwin-1_7_30-release:1.15
	cygwin-1_7_29-release:1.15
	cygwin-1_7_29-release-branchpoint:1.15.0.2
	cygwin-pre-user-db:1.15
	cygwin-1_7_28-release:1.15
	cygwin-1_7_27-release:1.15
	cygwin-1_7_26-release:1.15
	cygwin-1_7_25-release:1.15
	cygwin-1_7_24-release:1.15
	cygwin-1_7_23-release:1.15
	cygwin-1_7_22-release:1.15
	cygwin-1_7_21-release:1.15
	cygwin-1_7_20-release:1.15
	cygwin-1_7_19-release:1.15
	cygwin-64bit-postmerge:1.15
	cygwin-64bit-premerge-branch:1.14.0.2
	cygwin-64bit-premerge:1.14
	cygwin-1_7_18-release:1.14
	post-ptmalloc3:1.13.6.1
	pre-ptmalloc3:1.13.6.1
	cygwin-1_7_17-release:1.13
	cygwin-64bit-branch:1.13.0.6
	cygwin-1_7_16-release:1.13
	cygwin-1_7_15-release:1.13
	cygwin-1_7_14_2-release:1.13
	cygwin-1_7_14-release:1.13
	cygwin-1_7_12-release:1.13
	cygwin-1_7_11-release:1.13
	cygwin-1_7_10-release:1.13
	signal-rewrite:1.13.0.4
	pre-notty:1.13
	cygwin-1_7_9-release:1.13
	cv-post-1_7_9:1.13.0.2
	cygwin-1_7_8-release:1.13
	cygwin-1_7_7-release:1.12
	cygwin-1_7_5-release:1.12
	cygwin-1_7_4-release:1.12
	cygwin-1_7_3-release:1.12
	cygwin-1_7_2-release:1.12
	fifo_doover3:1.12.0.4
	cygwin-1_7_1-release:1.12
	prefifo:1.12
	cv-branch-2:1.12.0.2
	pre-ripout-set_console_state_for_spawn:1.7
	EOL_registry_mounts:1.7
	preoverlapped:1.7
	drop_9x_support_start:1.7
	cr-0x5f1:1.4.0.4
	cv-branch:1.4.0.2
	pre-ptymaster-archetype:1.4
	cr-0x3b58:1.2.0.22
	cr-0x5ef:1.2.0.20
	after-mmap-privanon-noreserve:1.2
	after-mmap-revamp:1.2
	before-mmap-revamp:1.2
	cgf-more-exit-sync:1.2
	post_wait_sig_exit:1.2
	pre_wait_sig_exit:1.2
	reparent-point:1.2
	noreparent:1.2.0.18
	cr-0x5e6:1.2.0.16
	cr-0x9e:1.2.0.14
	cr-0x9d:1.2.0.12
	cgf-deleteme:1.2.0.10
	pre-sigrewrite:1.2
	corinna-01:1.2
	cr-0x9c:1.2.0.6
	cr-0x9b:1.2.0.4
	cr-0x99:1.2
	Z-emcb-cygwin_daemon:1.2.0.2
	w32api-2_2:1.2
	mingw-runtime-2_4:1.2
	pre-cgf-merge:1.2
	cgf-dev-branch:1.2.0.60
	predaemon:1.2
	cygwin_daemon_merge_HEAD:1.2
	pregp02r1:1.2.0.38
	cygnus_cvs_20020108_pre:1.2
	Z-cygwin_daemon_merge-new_HEAD:1.2
	Z-cygwin_daemon_merge_HEAD:1.2
	cygwin_daemon:1.2.0.8;
locks; strict;
comment	@ * @;
expand	@o@;


1.15
date	2013.04.23.09.44.34;	author corinna;	state Exp;
branches;
next	1.14;

1.14
date	2013.01.21.04.38.30;	author cgf;	state Exp;
branches;
next	1.13;

1.13
date	2011.02.11.12.42.29;	author corinna;	state Exp;
branches
	1.13.6.1;
next	1.12;

1.12
date	2009.04.04.15.49.05;	author corinna;	state Exp;
branches;
next	1.11;

1.11
date	2009.03.26.10.40.29;	author corinna;	state Exp;
branches;
next	1.10;

1.10
date	2009.03.23.14.26.55;	author corinna;	state Exp;
branches;
next	1.9;

1.9
date	2009.03.03.11.44.18;	author corinna;	state Exp;
branches;
next	1.8;

1.8
date	2009.03.03.11.11.26;	author corinna;	state Exp;
branches;
next	1.7;

1.7
date	2006.10.16.12.34.34;	author corinna;	state Exp;
branches;
next	1.6;

1.6
date	2006.09.17.23.22.10;	author cgf;	state Exp;
branches;
next	1.5;

1.5
date	2006.09.17.22.34.45;	author cgf;	state Exp;
branches;
next	1.4;

1.4
date	2006.04.21.14.29.54;	author corinna;	state Exp;
branches
	1.4.4.1;
next	1.3;

1.3
date	2006.04.21.09.59.07;	author corinna;	state Exp;
branches;
next	1.2;

1.2
date	2001.03.05.21.29.21;	author corinna;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.17.19.38.31;	author cgf;	state Exp;
branches
	1.1.1.1;
next	;

1.13.6.1
date	2012.11.05.20.17.08;	author corinna;	state Exp;
branches;
next	;

1.4.4.1
date	2006.10.16.12.46.34;	author corinna;	state Exp;
branches;
next	;

1.1.1.1
date	2000.02.17.19.38.31;	author cgf;	state Exp;
branches;
next	;


desc
@@


1.15
log
@	* Merge in cygwin-64bit-branch.
@
text
@/* asm/byteorder.h

   Copyright 1996, 1998, 2001, 2006, 2009, 2011, 2012 Red Hat, Inc.

This file is part of Cygwin.

This software is a copyrighted work licensed under the terms of the
Cygwin license.  Please consult the file "CYGWIN_LICENSE" for
details. */

#ifndef _I386_BYTEORDER_H
#define _I386_BYTEORDER_H

#include <_ansi.h>
#include <stdint.h>
#include <bits/endian.h>

#ifdef __cplusplus
extern "C" {
#endif

#ifndef __LITTLE_ENDIAN_BITFIELD
#define __LITTLE_ENDIAN_BITFIELD
#endif

extern uint32_t	ntohl(uint32_t);
extern uint16_t	ntohs(uint16_t);
extern uint32_t	htonl(uint32_t);
extern uint16_t	htons(uint16_t);

_ELIDABLE_INLINE uint32_t __ntohl(uint32_t);
_ELIDABLE_INLINE uint16_t __ntohs(uint16_t);

_ELIDABLE_INLINE uint32_t
__ntohl(uint32_t x)
{
	__asm__("bswap %0" : "=r" (x) : "0" (x));
	return x;
}

#define __constant_ntohl(x) \
	((uint32_t)((((uint32_t)(x) & 0x000000ffU) << 24) | \
		   (((uint32_t)(x) & 0x0000ff00U) <<  8) | \
		   (((uint32_t)(x) & 0x00ff0000U) >>  8) | \
		   (((uint32_t)(x) & 0xff000000U) >> 24)))

_ELIDABLE_INLINE uint16_t
__ntohs(uint16_t x)
{
	__asm__("xchgb %b0,%h0"		/* swap bytes		*/
		: "=Q" (x)
		:  "0" (x));
	return x;
}

#define __constant_ntohs(x) \
	((uint16_t)((((uint16_t)(x) & 0x00ff) << 8) | \
		   (((uint16_t)(x) & 0xff00) >> 8))) \

#define __htonl(x) __ntohl(x)
#define __htons(x) __ntohs(x)
#define __constant_htonl(x) __constant_ntohl(x)
#define __constant_htons(x) __constant_ntohs(x)

#if defined (__OPTIMIZE__) && !defined (__NO_INLINE__)
#  define ntohl(x) \
(__builtin_constant_p((long)(x)) ? \
 __constant_ntohl((x)) : \
 __ntohl((x)))
#  define ntohs(x) \
(__builtin_constant_p((short)(x)) ? \
 __constant_ntohs((x)) : \
 __ntohs((x)))
#  define htonl(x) \
(__builtin_constant_p((long)(x)) ? \
 __constant_htonl((x)) : \
 __htonl((x)))
#  define htons(x) \
(__builtin_constant_p((short)(x)) ? \
 __constant_htons((x)) : \
 __htons((x)))
#endif

#ifdef __cplusplus
}
#endif

#endif
@


1.14
log
@Throughout, update copyrights to reflect dates which correspond to main-branch
checkins.  Regularize copyright format.
@
text
@d3 1
a3 1
   Copyright 1996, 1998, 2000, 2001, 2006, 2009, 2011 Red Hat, Inc.
d37 1
a37 5
	__asm__("xchgb %b0,%h0\n\t"	/* swap lower bytes	*/
		"rorl $16,%0\n\t"	/* swap words		*/
		"xchgb %b0,%h0"		/* swap higher bytes	*/
		:"=q" (x)
		: "0" (x));
d51 1
a51 1
		: "=q" (x)
@


1.13
log
@	* include/endian.h: Move definitions of __BIG_ENDIAN, __LITTLE_ENDIAN,
	and __BYTE_ORDER into ...
	* include/bits/endian.h: New file.
	* include/arpa/nameser_compat.h: Include endian.h rather than defining
	BYTE_ORDER here.
	* include/asm/byteorder.h: Include bits/endian.h.  Drop definition of
	__LITTLE_ENDIAN.
	* include/netinet/ip.h: Include bits/endian.h.  Drop definitions of
	BIG_ENDIAN, LITTLE_ENDIAN, and BYTE_ORDER.  Use underscored variants
	of aforementioned constants.
	* include/netinet/tcp.h: Ditto.
	* include/sys/param.h: Drop disabled definitions of BIG_ENDIAN,
	LITTLE_ENDIAN, and BYTE_ORDER.

	* include/netinet/ip.h: Reformat.  Define setsockopt IP_TOS options
	matching recent RFCs.  Tweak comments.
@
text
@d3 1
a3 1
   Copyright 1996, 1998, 2001, 2006, 2009, 2011 Red Hat, Inc.
@


1.13.6.1
log
@	* fhandler_process.cc: Fix debug printf calls to be type safe.
	Add casts to avoid compiler warnings.
	(get_mem_values): Avoid using ULONG_MAX since it's NOT matching
	ULONG on 64 bit.
	* fhandler_procnet.cc (fhandler_procnet::open): Fix syscall_printf call
	to be type safe.
	(format_procnet_ifinet6): Add cast to avoid compiler warnings.
	* ntdll.h (struct _DEBUG_HEAP_BLOCK): Change Address to ULONG_PTR.

	* include/bits/wordsize.h: Fix __WORDSIZE definition for x86_64.
	Add __WORDSIZE_COMPAT32 as on Linux.
	* include/inttypes.h: Include bits/wordsize.h.  Use __WORDSIZE check
	where appropriate.
	* include/limits.h: Include bits/wordsize.h.
	(CHAR_BIT): Change definition to rely on default
	compiler definition.
	(LONG_BIT): Ditto.
	(WORD_BIT): Ditto.
	(__LONG_MAX__): Use __WORDSIZE check.
	(RTSIG_MAX): Ditto.
	* include/stdint.h: Include bits/wordsize.h.  Use __WORDSIZE check
	where appropriate.
	* include/cygwin/signal.h: Ditto.
	* include/cygwin/types.h: Ditto.

	* include/asm/byteorder.h (__ntohl): Use bswap instruction, available
	since i486.
	(__ntohs): Fix constraint to work on 64 bit CPU as well.
@
text
@d3 1
a3 1
   Copyright 1996, 1998, 2001, 2006, 2009, 2011, 2012 Red Hat, Inc.
d37 5
a41 1
	__asm__("bswap %0" : "=r" (x) : "0" (x));
d55 1
a55 1
		: "=Q" (x)
@


1.12
log
@	* include/asm/byteorder.h (__ntohl): Prototype before define to avoid
	a warning with -Wmissing-prototypes.  Use _ELIDABLE_INLINE macro from
	_ansi.h.
	(__ntohs): Ditto.
@
text
@d3 1
a3 1
   Copyright 1996, 1998, 2001, 2006, 2009 Red Hat, Inc.
d16 1
a21 4
#ifndef __LITTLE_ENDIAN
#define __LITTLE_ENDIAN 1234
#endif

@


1.11
log
@	* include/asm/byteorder.h (__ntohl): Align definition to ISO C99.
	(__ntohs): Ditto.
@
text
@d14 1
d34 4
a37 4
#if defined(__GNUC__) && !defined(__GNUC_STDC_INLINE__)
extern
#endif
__inline__ uint32_t
d54 1
a54 4
#if defined(__GNUC__) && !defined(__GNUC_STDC_INLINE__)
extern
#endif
__inline__ uint16_t
@


1.10
log
@	* include/asm/byteorder.h (__constant_ntohs): Remove declaration.
	(__constant_ntohl): Ditto.
@
text
@d33 4
a36 4
extern __inline__ uint32_t	__ntohl(uint32_t);
extern __inline__ uint16_t	__ntohs(uint16_t);

extern __inline__ uint32_t
d53 4
a56 1
extern __inline__ uint16_t
@


1.9
log
@	* net.cc: Include asm/byteorder.h.
	(htonl): Move to end of file.  Add comment to explain why.  Align
	definition to POSIX.  Use related macro from asm/byteorder.h.
	(ntohl): Ditto.
	(htons): Ditto.
	(ntohs): Ditto.
	* include/asm/byteorder.h: Revert previous patch.
@
text
@a34 2
extern __inline__ uint32_t	__constant_ntohl(uint32_t);
extern __inline__ uint16_t	__constant_ntohs(uint16_t);
@


1.8
log
@	* include/asm/byteorder.h: Disable optimization when building
	Cygwin network code.
@
text
@d73 1
a73 2
#if defined (__OPTIMIZE__) && !defined (__NO_INLINE__) \
    && !defined (__INSIDE_CYGWIN_NET__)
@


1.7
log
@	* include/asm/byteorder.h: Fix copyright dates.
	Fix typos in ChangeLog.
@
text
@d3 1
a3 1
   Copyright 1996, 1998, 2001, 2006 Red Hat, Inc.
d73 2
a74 1
#if defined (__OPTIMIZE__) && !defined (__NO_INLINE__)
@


1.6
log
@* byteorder.h: Correct typo.
@
text
@d3 1
a3 1
   Copyright 1996, 1998, 2001 Red Hat, Inc.
@


1.5
log
@* byteorder.h: Don't #define n* macros if -fnoinline is specified.
@
text
@d73 1
a73 1
#if defined (__OPTIMIZE__) && !defined (__NO_NOINLINE__)
@


1.4
log
@	* include/asm/byteorder.h (__ntohl): Fix the missing uint32_t.
@
text
@d73 1
a73 1
#ifdef  __OPTIMIZE__
@


1.4.4.1
log
@	* include/asm/byteorder.h: Fix copyright dates.

	* autoload.cc (PrivilegeCheck): Define.
	* fhandler.cc (fhandler_base::open): Always try opening with backup
	resp. restore intent.
	* fhandler_disk_file.cc (fhandler_disk_file::opendir): Always try
	opening with backup intent.
	(fhandler_disk_file::readdir): Ditto when trying to retrieve file id
	explicitely.
	* security.cc (check_file_access): Replace pbuf with correctly
	PPRIVILEGE_SET typed pset.  Check explicitely for backup and/or restore
	privileges when AccessCheck fails, to circumvent AccessCheck
	shortcoming.  Add comment to explain.

	* include/asm/byteorder.h: Correct typo.

	* include/asm/byteorder.h: Don't #define n* macros if -fnoinline is
	specified.

	* environ.cc (build_env): Don't put an empty environment variable into
	the environment.  Optimize use of "len".
	* errno.cc (ERROR_MORE_DATA): Translate to EMSGSIZE rather than EAGAIN.
@
text
@d3 1
a3 1
   Copyright 1996, 1998, 2001, 2006 Red Hat, Inc.
d73 1
a73 1
#if defined (__OPTIMIZE__) && !defined (__NO_INLINE__)
@


1.3
log
@	* include/asm/byteorder.h: Include stdint.h.  Per standard, change
	datatypes in ntohX and htonX functions to uintXX_t types.
@
text
@d39 1
a39 1
__ntohl(unsigned long int x)
@


1.2
log
@        * include/a.out.h: Add copyright hint.
        * include/fcntl.h: Ditto.
        * include/lastlog.h: Ditto.
        * include/memory.h: Ditto.
        * include/mntent.h: Ditto.
        * include/paths.h: Ditto.
        * include/poll.h: Ditto.
        * include/syslog.h: Ditto.
        * include/termio.h: Ditto.
        * include/tzfile.h: Ditto.
        * include/arpa/inet.h: Ditto.
        * include/asm/byteorder.h: Ditto.
        * include/asm/socket.h: Ditto.
        * include/asm/types.h: Ditto.
        * include/cygwin/if.h: Ditto.
        * include/cygwin/mtio.h: Ditto.
        * include/cygwin/rdevio.h: Ditto.
        * include/cygwin/socket.h: Ditto.
        * include/net/if.h: Ditto.
        * include/netinet/in.h: Ditto.
        * include/netinet/in_systm.h: Ditto.
        * include/netinet/ip.h: Ditto.
        * include/netinet/ip_icmp.h: Ditto.
        * include/netinet/tcp.h: Ditto.
        * include/sys/cdefs.h: Ditto.
        * include/sys/cygwin.h: Ditto.
        * include/sys/ioctl.h: Ditto.
        * include/sys/mman.h: Ditto.
        * include/sys/mount.h: Ditto.
        * include/sys/mtio.h: Ditto.
        * include/sys/procfs.h: Ditto.
        * include/sys/resource.h: Ditto.
        * include/sys/smallprint.h: Ditto.
        * include/sys/socket.h: Ditto.
        * include/sys/strace.h: Ditto.
        * include/sys/syslog.h: Ditto.
        * include/sys/sysmacros.h: Ditto.
        * include/sys/termio.h: Ditto.
        * include/sys/termios.h: Ditto.
        * include/sys/uio.h: Ditto.
        * include/sys/un.h: Ditto.
        * include/sys/utsname.h: Ditto.
        * include/sys/vfs.h: Ditto.
        * include/sys/wait.h: Ditto.
        * regexp/regerror.c: Ditto.
        * regexp/regexp.h: Ditto.
        * regexp/regmagic.h: Ditto.
@
text
@d14 2
a19 7
#if 0
#undef ntohl
#undef ntohs
#undef htonl
#undef htons
#endif

d28 9
a36 10
#if 1
extern unsigned long int	ntohl(unsigned long int);
extern unsigned short int	ntohs(unsigned short int);
extern unsigned long int	htonl(unsigned long int);
extern unsigned short int	htons(unsigned short int);

extern __inline__ unsigned long int	__ntohl(unsigned long int);
extern __inline__ unsigned short int	__ntohs(unsigned short int);
extern __inline__ unsigned long int	__constant_ntohl(unsigned long int);
extern __inline__ unsigned short int	__constant_ntohs(unsigned short int);
d38 1
a38 1
extern __inline__ unsigned long int
d50 4
a53 4
	((unsigned long int)((((unsigned long int)(x) & 0x000000ffU) << 24) | \
			     (((unsigned long int)(x) & 0x0000ff00U) <<  8) | \
			     (((unsigned long int)(x) & 0x00ff0000U) >>  8) | \
			     (((unsigned long int)(x) & 0xff000000U) >> 24)))
d55 2
a56 2
extern __inline__ unsigned short int
__ntohs(unsigned short int x)
d65 2
a66 2
	((unsigned short int)((((unsigned short int)(x) & 0x00ff) << 8) | \
			      (((unsigned short int)(x) & 0xff00) >> 8))) \
a90 1
#endif
@


1.1
log
@Initial revision
@
text
@d1 10
@


1.1.1.1
log
@import winsup-2000-02-17 snapshot
@
text
@@
