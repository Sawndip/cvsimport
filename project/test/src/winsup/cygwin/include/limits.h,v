head	1.30;
access;
symbols
	cygwin-1_7_35-release:1.30
	cygwin-1_7_34-release:1.30
	cygwin-1_7_33-release:1.30
	cygwin-1_7_32-release:1.30
	cygwin-1_7_31-release:1.30
	cygwin-1_7_30-release:1.30
	cygwin-1_7_29-release:1.30
	cygwin-1_7_29-release-branchpoint:1.30.0.2
	cygwin-pre-user-db:1.30
	cygwin-1_7_28-release:1.30
	cygwin-1_7_27-release:1.30
	cygwin-1_7_26-release:1.30
	cygwin-1_7_25-release:1.30
	cygwin-1_7_24-release:1.30
	cygwin-1_7_23-release:1.30
	cygwin-1_7_22-release:1.30
	cygwin-1_7_21-release:1.30
	cygwin-1_7_20-release:1.30
	cygwin-1_7_19-release:1.30
	cygwin-64bit-postmerge:1.30
	cygwin-64bit-premerge-branch:1.29.0.2
	cygwin-64bit-premerge:1.29
	cygwin-1_7_18-release:1.29
	post-ptmalloc3:1.27.4.4
	pre-ptmalloc3:1.27.4.4
	cygwin-1_7_17-release:1.28
	cygwin-64bit-branch:1.27.0.4
	cygwin-1_7_16-release:1.27
	cygwin-1_7_15-release:1.27
	cygwin-1_7_14_2-release:1.27
	cygwin-1_7_14-release:1.27
	cygwin-1_7_12-release:1.27
	cygwin-1_7_11-release:1.27
	cygwin-1_7_10-release:1.27
	signal-rewrite:1.27.0.2
	pre-notty:1.26
	cygwin-1_7_9-release:1.26
	cv-post-1_7_9:1.26.0.4
	cygwin-1_7_8-release:1.26
	cygwin-1_7_7-release:1.26
	cygwin-1_7_5-release:1.26
	cygwin-1_7_4-release:1.26
	cygwin-1_7_3-release:1.26
	cygwin-1_7_2-release:1.26
	fifo_doover3:1.26.0.2
	cygwin-1_7_1-release:1.26
	prefifo:1.25
	cv-branch-2:1.25.0.2
	pre-ripout-set_console_state_for_spawn:1.24
	EOL_registry_mounts:1.24
	preoverlapped:1.19
	drop_9x_support_start:1.19
	cr-0x5f1:1.16.0.8
	cv-branch:1.16.0.6
	pre-ptymaster-archetype:1.16
	cr-0x3b58:1.16.0.4
	cr-0x5ef:1.16.0.2
	after-mmap-privanon-noreserve:1.16
	after-mmap-revamp:1.16
	before-mmap-revamp:1.16
	cgf-more-exit-sync:1.16
	post_wait_sig_exit:1.16
	pre_wait_sig_exit:1.16
	reparent-point:1.12
	noreparent:1.12.0.4
	cr-0x5e6:1.12.0.2
	cr-0x9e:1.8.0.6
	cr-0x9d:1.8.0.4
	cgf-deleteme:1.8.0.2
	pre-sigrewrite:1.8
	corinna-01:1.6
	cr-0x9c:1.6.0.6
	cr-0x9b:1.6.0.4
	cr-0x99:1.6
	Z-emcb-cygwin_daemon:1.6.0.2
	w32api-2_2:1.5
	mingw-runtime-2_4:1.5
	pre-cgf-merge:1.6
	cgf-dev-branch:1.5.0.32
	predaemon:1.5
	cygwin_daemon_merge_HEAD:1.5
	pregp02r1:1.5.0.10
	cygnus_cvs_20020108_pre:1.5
	Z-cygwin_daemon_merge-new_HEAD:1.5
	Z-cygwin_daemon_merge_HEAD:1.5
	cygwin_daemon:1.4.0.4;
locks; strict;
comment	@ * @;
expand	@o@;


1.30
date	2013.04.23.09.44.34;	author corinna;	state Exp;
branches;
next	1.29;

1.29
date	2013.01.21.04.38.29;	author cgf;	state Exp;
branches;
next	1.28;

1.28
date	2012.08.17.09.23.34;	author corinna;	state Exp;
branches;
next	1.27;

1.27
date	2011.07.18.23.08.09;	author yselkowitz;	state Exp;
branches
	1.27.4.1;
next	1.26;

1.26
date	2009.08.11.07.28.22;	author corinna;	state Exp;
branches;
next	1.25;

1.25
date	2008.06.21.20.24.45;	author corinna;	state Exp;
branches;
next	1.24;

1.24
date	2008.02.14.16.47.11;	author corinna;	state Exp;
branches;
next	1.23;

1.23
date	2008.02.06.18.24.50;	author corinna;	state Exp;
branches;
next	1.22;

1.22
date	2008.01.07.16.51.54;	author corinna;	state Exp;
branches;
next	1.21;

1.21
date	2008.01.06.18.31.35;	author cgf;	state Exp;
branches;
next	1.20;

1.20
date	2007.10.10.16.54.09;	author corinna;	state Exp;
branches;
next	1.19;

1.19
date	2007.02.14.10.06.46;	author corinna;	state Exp;
branches;
next	1.18;

1.18
date	2007.02.07.17.22.40;	author corinna;	state Exp;
branches;
next	1.17;

1.17
date	2006.11.07.17.59.54;	author corinna;	state Exp;
branches;
next	1.16;

1.16
date	2005.05.29.10.05.56;	author corinna;	state Exp;
branches;
next	1.15;

1.15
date	2005.05.19.19.45.28;	author cgf;	state Exp;
branches;
next	1.14;

1.14
date	2005.03.29.17.46.17;	author corinna;	state Exp;
branches;
next	1.13;

1.13
date	2005.01.25.22.45.10;	author corinna;	state Exp;
branches;
next	1.12;

1.12
date	2004.05.17.16.06.02;	author corinna;	state Exp;
branches;
next	1.11;

1.11
date	2004.04.14.10.20.26;	author corinna;	state Exp;
branches;
next	1.10;

1.10
date	2004.02.26.05.10.48;	author cgf;	state Exp;
branches;
next	1.9;

1.9
date	2004.02.03.21.59.26;	author cgf;	state Exp;
branches;
next	1.8;

1.8
date	2003.11.15.17.04.10;	author cgf;	state Exp;
branches;
next	1.7;

1.7
date	2003.11.14.23.40.06;	author rbcollins;	state Exp;
branches;
next	1.6;

1.6
date	2003.04.08.21.19.33;	author cgf;	state Exp;
branches;
next	1.5;

1.5
date	2001.12.17.01.41.07;	author cgf;	state Exp;
branches
	1.5.32.1;
next	1.4;

1.4
date	2001.09.11.20.01.01;	author cgf;	state Exp;
branches
	1.4.4.1;
next	1.3;

1.3
date	2001.09.07.08.31.16;	author corinna;	state Exp;
branches;
next	1.2;

1.2
date	2001.08.16.14.20.09;	author corinna;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.17.19.38.31;	author cgf;	state Exp;
branches
	1.1.1.1;
next	;

1.27.4.1
date	2012.10.16.15.18.40;	author corinna;	state Exp;
branches;
next	1.27.4.2;

1.27.4.2
date	2012.10.30.11.16.44;	author corinna;	state Exp;
branches;
next	1.27.4.3;

1.27.4.3
date	2012.11.05.20.17.08;	author corinna;	state Exp;
branches;
next	1.27.4.4;

1.27.4.4
date	2013.01.21.13.52.13;	author corinna;	state Exp;
branches;
next	1.27.4.5;

1.27.4.5
date	2013.03.14.12.09.53;	author corinna;	state Exp;
branches;
next	;

1.5.32.1
date	2003.05.10.17.20.55;	author cgf;	state Exp;
branches;
next	;

1.4.4.1
date	2002.01.04.03.56.14;	author rbcollins;	state Exp;
branches;
next	;

1.1.1.1
date	2000.02.17.19.38.31;	author cgf;	state Exp;
branches;
next	;


desc
@@


1.30
log
@	* Merge in cygwin-64bit-branch.
@
text
@/* limits.h

   Copyright 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009,
   2011, 2012, 2013 Red Hat, Inc.

This file is part of Cygwin.

This software is a copyrighted work licensed under the terms of the
Cygwin license.  Please consult the file "CYGWIN_LICENSE" for
details. */

#ifndef _LIMITS_H___

#include <features.h>
#include <bits/wordsize.h>

#ifndef _MACH_MACHLIMITS_H_

/* _MACH_MACHLIMITS_H_ is used on OSF/1.  */
#define _LIMITS_H___
#define _MACH_MACHLIMITS_H_


/* Numerical limits */

/* Number of bits in a `char'.  */
#undef CHAR_BIT
#define CHAR_BIT __CHAR_BIT__

/* Number of bits in a `long'.  */
#undef LONG_BIT
#define LONG_BIT (__SIZEOF_LONG__ * __CHAR_BIT__)

/* Number of bits in a `int'.  */
#undef WORD_BIT
#define WORD_BIT (__SIZEOF_INT__ * __CHAR_BIT__)

/* Maximum length of a multibyte character.  */
#ifndef MB_LEN_MAX
/* Use value from newlib. */
#define MB_LEN_MAX 8
#endif

/* Minimum and maximum values a `signed char' can hold.  */
#undef SCHAR_MIN
#define SCHAR_MIN (-128)
#undef SCHAR_MAX
#define SCHAR_MAX 127

/* Maximum value an `unsigned char' can hold.  (Minimum is 0).  */
#undef UCHAR_MAX
#define UCHAR_MAX 255

/* Minimum and maximum values a `char' can hold.  */
#ifdef __CHAR_UNSIGNED__
#undef CHAR_MIN
#define CHAR_MIN 0
#undef CHAR_MAX
#define CHAR_MAX 255
#else
#undef CHAR_MIN
#define CHAR_MIN (-128)
#undef CHAR_MAX
#define CHAR_MAX 127
#endif

/* Minimum and maximum values a `signed short int' can hold.  */
#undef SHRT_MIN
#define SHRT_MIN (-32768)
#undef SHRT_MAX
#define SHRT_MAX 32767

/* Maximum value an `unsigned short int' can hold.  (Minimum is 0).  */
#undef USHRT_MAX
#define USHRT_MAX 65535

/* Minimum and maximum values a `signed int' can hold.  */
#ifndef __INT_MAX__
#define __INT_MAX__ 2147483647
#endif
#undef INT_MIN
#define INT_MIN (-INT_MAX-1)
#undef INT_MAX
#define INT_MAX __INT_MAX__

/* Maximum value an `unsigned int' can hold.  (Minimum is 0).  */
#undef UINT_MAX
#define UINT_MAX (INT_MAX * 2U + 1)

/* Minimum and maximum values a `signed long int' can hold.
   (Same as `int').  */
#ifndef __LONG_MAX__
#if __WORDSIZE == 64
#define __LONG_MAX__ 9223372036854775807L
#else
#define __LONG_MAX__ 2147483647L
# endif /* __alpha__ */
#endif
#undef LONG_MIN
#define LONG_MIN (-LONG_MAX-1L)
#undef LONG_MAX
#define LONG_MAX __LONG_MAX__

/* Maximum value an `unsigned long int' can hold.  (Minimum is 0).  */
#undef ULONG_MAX
#define ULONG_MAX (LONG_MAX * 2UL + 1)

/* Minimum and maximum values a `signed long long int' can hold.  */
#ifndef __LONG_LONG_MAX__
#define __LONG_LONG_MAX__ 9223372036854775807LL
#endif

#if defined (__GNU_LIBRARY__) ? defined (__USE_GNU) : !defined (__STRICT_ANSI__)
#undef LONG_LONG_MIN
#define LONG_LONG_MIN (-LONG_LONG_MAX-1)
#undef LONG_LONG_MAX
#define LONG_LONG_MAX __LONG_LONG_MAX__

/* Maximum value an `unsigned long long int' can hold.  (Minimum is 0).  */
#undef ULONG_LONG_MAX
#define ULONG_LONG_MAX (LONG_LONG_MAX * 2ULL + 1)
#endif

/* Minimum and maximum values a `signed long long int' can hold.  */
#undef LLONG_MIN
#define LLONG_MIN (-LLONG_MAX-1)
#undef LLONG_MAX
#define LLONG_MAX __LONG_LONG_MAX__

/* Maximum value an `unsigned long long int' can hold.  (Minimum is 0).  */
#undef ULLONG_MAX
#define ULLONG_MAX (LLONG_MAX * 2ULL + 1)

/* Maximum size of ssize_t */
#undef SSIZE_MAX
#define SSIZE_MAX (__LONG_MAX__)


/* Runtime Invariant Values */

/* Please note that symbolic names shall be ommited, on specific
   implementations where the corresponding value is equal to or greater
   than the stated minimum, but is unspecified.  This indetermination
   might depend on the amount of available memory space on a specific
   instance of a specific implementation. The actual value supported by
   a specific instance shall be provided by the sysconf() function. */

/* Maximum number of I/O operations in a single list I/O call supported by
   the implementation.  Not yet implemented. */
#undef AIO_LISTIO_MAX
/* #define AIO_LISTIO_MAX >= _POSIX_AIO_LISTIO_MAX */

/* Maximum number of outstanding asynchronous I/O operations supported by
   the implementation.  Not yet implemented. */
#undef AIO_MAX
/*  #define AIO_MAX >= _POSIX_AIO_MAX */

/* The maximum amount by which a process can decrease its asynchronous I/O
   priority level from its own scheduling priority. */
#undef AIO_PRIO_DELTA_MAX
/* #define AIO_PRIO_DELTA_MAX >= 0 */

/* Maximum number of bytes in arguments and environment passed in an exec
   call.  32000 is the safe value used for Windows processes when called
   from Cygwin processes. */
#undef ARG_MAX
#define ARG_MAX 32000

/* Maximum number of functions that may be registered with atexit(). */
#undef ATEXIT_MAX
#define ATEXIT_MAX 32

/* Maximum number of simultaneous processes per real user ID. */
#undef CHILD_MAX
#define CHILD_MAX 256

/* Maximum number of timer expiration overruns.  Not yet implemented. */
#undef DELAYTIMER_MAX
/* #define DELAYTIMER_MAX >= _POSIX_DELAYTIMER_MAX */

/* Maximum length of a host name. */
#undef HOST_NAME_MAX
#define HOST_NAME_MAX 255

/* Maximum number of iovcnt in a writev (an arbitrary number) */
#undef IOV_MAX
#define IOV_MAX 1024

/* Maximum number of characters in a login name. */
#undef LOGIN_NAME_MAX
#define LOGIN_NAME_MAX 256	/* equal to UNLEN defined in w32api/lmcons.h */

/* The maximum number of open message queue descriptors a process may hold. */
#undef MQ_OPEN_MAX
#define MQ_OPEN_MAX OPEN_MAX

/* The maximum number of message priorities supported by the implementation. */
#undef MQ_PRIO_MAX
#define MQ_PRIO_MAX INT_MAX

/* # of open files per process. Actually it can be more since Cygwin
   grows the dtable as necessary. We define a reasonable limit here
   which is returned by getdtablesize(), sysconf(_SC_OPEN_MAX) and
   getrlimit(RLIMIT_NOFILE). */
#undef OPEN_MAX
#define OPEN_MAX 256

/* Size in bytes of a page. */
#undef PAGESIZE
#undef PAGE_SIZE
#define PAGESIZE 65536
#define PAGE_SIZE PAGESIZE

/* Maximum number of attempts made to destroy a thread's thread-specific
   data values on thread exit. */
/* FIXME: I really don't understand this value.  Why should multiple
   attempts be necessary to destroy thread-specific data?!?  Anyway, the
   current value here is 1, taken originally from our pthread.h file,
   where it was mistakenly defined first.  Unfortunately this value is
   lower than the POSIX defined minimum value, which is 4. */
#undef PTHREAD_DESTRUCTOR_ITERATIONS
#define PTHREAD_DESTRUCTOR_ITERATIONS 1

/* Maximum number of data keys that can be created by a process. */
/* Tls has 1088 items - and we don't want to use them all :] */
#undef PTHREAD_KEYS_MAX
#define PTHREAD_KEYS_MAX 1024

/* Minimum size in bytes of thread stack storage. */
/* Actually the minimum stack size is somewhat of a split personality.
   The size parameter in a CreateThread call is the size of the initially
   commited stack size, which can be specified as low as 4K.  However, the
   default *reserved* stack size is 1 Meg, unless the .def file specifies
   another STACKSIZE value.  And even if you specify a stack size below 64K,
   the allocation granularity is in the way.  You can never squeeze multiple
   threads in the same allocation granularity slot.  Oh well. */
#undef PTHREAD_STACK_MIN
#define PTHREAD_STACK_MIN 65536

/* Maximum number of threads that can be created per process. */
/* Windows allows any arbitrary number of threads per process. */
#undef PTHREAD_THREADS_MAX
/* #define PTHREAD_THREADS_MAX unspecified */

/* Maximum number of realtime signals reserved for application use. */
/* FIXME: We only support one realtime signal in 32 bit mode, but
	 _POSIX_RTSIG_MAX is 8. */
#undef RTSIG_MAX
#if __WORDSIZE == 64
#define RTSIG_MAX 33
#else
#define RTSIG_MAX 1
#endif

/* Maximum number of semaphores that a process may have. */
/* Windows allows any arbitrary number of semaphores per process. */
#undef SEM_NSEMS_MAX
/* #define SEM_NSEMS_MAX unspecified */

/* The maximum value a semaphore may have. */
#undef SEM_VALUE_MAX
#define SEM_VALUE_MAX 1147483648

/* Maximum number of queued signals that a process may send and have pending
   at the receiver(s) at any time. */
#undef SIGQUEUE_MAX
#define SIGQUEUE_MAX 32

/* The maximum number of replenishment operations that may be simultaneously
   pending for a particular sporadic server scheduler.  Not implemented. */
#undef SS_REPL_MAX
/* #define SS_REPL_MAX >= _POSIX_SS_REPL_MAX */

/* Number of streams that one process can have open at one time. */
#undef STREAM_MAX
#define STREAM_MAX 20

/* Maximum number of nested symbolic links. */
#undef SYMLOOP_MAX
#define SYMLOOP_MAX 10

/* Maximum number of timer expiration overruns. */
#undef TIMER_MAX
#define TIMER_MAX 32

/* Maximum length of the trace event name.  Not implemented. */
#undef TRACE_EVENT_NAME_MAX
/* #define TRACE_EVENT_NAME_MAX >= _POSIX_TRACE_EVENT_NAME_MAX */

/* Maximum length of the trace generation version string or of the trace
   stream name.  Not implemented. */
#undef TRACE_NAME_MAX
/* #define TRACE_NAME_MAX >= _POSIX_TRACE_NAME_MAX */

/* Maximum number of trace streams that may simultaneously exist in the
   system.  Not implemented. */
#undef TRACE_SYS_MAX
/* #define TRACE_SYS_MAX >= _POSIX_TRACE_SYS_MAX */

/* Maximum number of user trace event type identifiers that may simultaneously
   exist in a traced process, including the predefined user trace event
   POSIX_TRACE_UNNAMED_USER_EVENT.  Not implemented. */
#undef TRACE_USER_EVENT_MAX
/* #define TRACE_USER_EVENT_MAX >= _POSIX_TRACE_USER_EVENT_MAX */

/* Maximum number of characters in a tty name. */
#undef TTY_NAME_MAX
#define TTY_NAME_MAX 32

/* Maximum number of bytes supported for the name of a timezone (not of the TZ variable).  Not implemented. */
#undef TZNAME_MAX
/* #define TZNAME_MAX >= _POSIX_TZNAME_MAX */


/* Pathname Variable Values */

/* Minimum bits needed to represent the maximum size of a regular file. */
#undef FILESIZEBITS
#define FILESIZEBITS 64

/* Maximum number of hardlinks to a file. */
#undef LINK_MAX
#define LINK_MAX 1024

/* Maximum number of bytes in a terminal canonical input line. */
#undef MAX_CANON
#define MAX_CANON 255

/* Minimum number of bytes available in a terminal input queue. */
#undef MAX_INPUT
#define MAX_INPUT 255

/* Maximum length of a path component. */
#undef NAME_MAX
#define NAME_MAX 255

/* Maximum length of a path given to API functions including trailing NUL.
   Deliberately set to the same default value as on Linux.  Internal paths
   may be longer. */
/* Keep in sync with __PATHNAME_MAX__ in cygwin/config.h */
#undef PATH_MAX
#define PATH_MAX 4096

/* # of bytes in a pipe buf. This is the max # of bytes which can be
   written to a pipe in one atomic operation. */
#undef PIPE_BUF
#define PIPE_BUF 4096

/* Minimum number of bytes of storage actually allocated for any portion
   of a file.  Not implemented. */
#undef POSIX_ALLOC_SIZE_MIN
/* #define POSIX_ALLOC_SIZE_MIN unspecifed */

/* Recommended increment for file transfer sizes between the
   {POSIX_REC_MIN_XFER_SIZE} and {POSIX_REC_MAX_XFER_SIZE} values.
   Not implemented. */
#undef POSIX_REC_INCR_XFER_SIZE
/* #define POSIX_REC_INCR_XFER_SIZE unspecifed */

/* Maximum recommended file transfer size.  Not implemented. */
#undef POSIX_REC_MAX_XFER_SIZE
/* #define POSIX_REC_MAX_XFER_SIZE unspecifed */

/* Minimum recommended file transfer size.  Not implemented. */
#undef POSIX_REC_MIN_XFER_SIZE
/* #define POSIX_REC_MIN_XFER_SIZE unspecifed */

/* Recommended file transfer buffer alignment.  Not implemented. */
#undef POSIX_REC_XFER_ALIGN
/* #define POSIX_REC_XFER_ALIGN unspecifed */

/* Maximum number of bytes in a symbolic link. */
#undef SYMLINK_MAX
#define SYMLINK_MAX (PATH_MAX - 1)


/* Runtime Increasable Values */

/* Maximum obase values allowed by the bc utility. */
#undef BC_BASE_MAX
#define BC_BASE_MAX 99

/* Maximum number of elements permitted in an array by the bc utility. */
#undef BC_DIM_MAX
#define BC_DIM_MAX 2048

/* Maximum scale value allowed by the bc utility. */
#undef BC_SCALE_MAX
#define BC_SCALE_MAX 99

/* Maximum length of a string constant accepted by the bc utility. */
#undef BC_STRING_MAX
#define BC_STRING_MAX 1000

/* Maximum number of bytes in a character class name.  Not implemented. */
#undef CHARCLASS_NAME_MAX
/* #define CHARCLASS_NAME_MAX >= _POSIX2_CHARCLASS_NAME_MAX */

/* Maximum number of weights that can be assigned to an entry of the
   LC_COLLATE order keyword in the locale definition file. */
/* FIXME: We don't support this at all right now, so this value is
   misleading at best.  It's also lower than _POSIX2_COLL_WEIGHTS_MAX
   which is not good.  So, for now we deliberately not define it even
   though it was defined in the former syslimits.h file. */
#undef COLL_WEIGHTS_MAX
/* #define COLL_WEIGHTS_MAX >= _POSIX2_COLL_WEIGHTS_MAX */

/* Maximum number of expressions that can be nested within parentheses
   by the expr utility. */
#undef EXPR_NEST_MAX
#define EXPR_NEST_MAX 32

/* Maximum bytes of a text utility's input line */
#undef LINE_MAX
#define LINE_MAX 2048

/* Max num groups for a user, value taken from NT documentation */
/* Must match <sys/param.h> NGROUPS */
#undef NGROUPS_MAX
#define NGROUPS_MAX 1024

/* Maximum number of repeated occurrences of a regular expression when
   using the interval notation \{m,n\} */
#undef RE_DUP_MAX
#define RE_DUP_MAX 255


/* POSIX values */
/* These should never vary from one system type to another */
/* They represent the minimum values that POSIX systems must support.
   POSIX-conforming apps must not require larger values. */

/* Maximum Values */

#define _POSIX_CLOCKRES_MIN                 20000000

/* Minimum Values */

#define _POSIX_AIO_LISTIO_MAX                      2
#define _POSIX_AIO_MAX                             1
#define	_POSIX_ARG_MAX		                4096
#define _POSIX_CHILD_MAX	                  25
#define _POSIX_DELAYTIMER_MAX                     32
#define _POSIX_HOST_NAME_MAX	                 255
#define _POSIX_LINK_MAX		                   8
#define _POSIX_LOGIN_NAME_MAX	                   9
#define _POSIX_MAX_CANON	                 255
#define _POSIX_MAX_INPUT	                 255
#define _POSIX_MQ_OPEN_MAX                         8
#define _POSIX_MQ_PRIO_MAX                        32
#define _POSIX_NAME_MAX		                  14
#define _POSIX_NGROUPS_MAX	                   8
#define _POSIX_OPEN_MAX		                  20
#define _POSIX_PATH_MAX		                 256
#define _POSIX_PIPE_BUF		                 512
#define _POSIX_RE_DUP_MAX	                 255
#define _POSIX_RTSIG_MAX	                   8
#define _POSIX_SEM_NSEMS_MAX                     256
#define _POSIX_SEM_VALUE_MAX                   32767
#define _POSIX_SIGQUEUE_MAX                       32
#define _POSIX_SSIZE_MAX	               32767
#define _POSIX_STREAM_MAX	                   8
#define _POSIX_SS_REPL_MAX                         4
#define _POSIX_SYMLINK_MAX	                 255
#define _POSIX_SYMLOOP_MAX	                   8
#define _POSIX_THREAD_DESTRUCTOR_ITERATIONS        4
#define _POSIX_THREAD_KEYS_MAX                   128
#define _POSIX_THREAD_THREADS_MAX                 64
#define _POSIX_TIMER_MAX	                  32
#define _POSIX_TRACE_EVENT_NAME_MAX               30
#define _POSIX_TRACE_NAME_MAX                      8
#define _POSIX_TRACE_SYS_MAX                       8
#define _POSIX_TRACE_USER_EVENT_MAX               32
#define _POSIX_TTY_NAME_MAX	                   9
#define _POSIX_TZNAME_MAX                          6

#define _POSIX2_BC_BASE_MAX	                  99
#define _POSIX2_BC_DIM_MAX	                2048
#define _POSIX2_BC_SCALE_MAX	                  99
#define _POSIX2_BC_STRING_MAX	                1000
#define _POSIX2_COLL_WEIGHTS_MAX                   2
#define _POSIX2_EXPR_NEST_MAX	                  32
#define _POSIX2_LINE_MAX	                2048
#define _POSIX2_RE_DUP_MAX	                 255

#define _XOPEN_IOV_MAX                            16
#define _XOPEN_NAME_MAX                          255
#define _XOPEN_PATH_MAX                         1024

/* Other Invariant Values */

#define NL_ARGMAX                                  9
#define NL_LANGMAX                                14
#define NL_MSGMAX                              32767
#define NL_NMAX                              INT_MAX
#define NL_SETMAX                                255
#define NL_TEXTMAX                  _POSIX2_LINE_MAX

/* Default process priority. */
#undef NZERO
#define NZERO			                  20

#endif /* _MACH_MACHLIMITS_H_ */
#endif /* _LIMITS_H___ */
@


1.29
log
@Throughout, update copyrights to reflect dates which correspond to main-branch
checkins.  Regularize copyright format.
@
text
@d4 1
a4 1
   2011, 2012 Red Hat, Inc.
d15 1
d28 1
a28 1
#define CHAR_BIT 8
d32 1
a32 1
#define LONG_BIT 32
d36 1
a36 1
#define WORD_BIT 32
d93 3
a95 1
#ifndef __alpha__
a96 2
#else
#define __LONG_MAX__ 9223372036854775807L
d100 1
a100 1
#define LONG_MIN (-LONG_MAX-1)
d225 1
a225 1
/* Tls has 64 items for pre win2000 - and we don't want to use them all :] */
d227 1
a227 1
#define PTHREAD_KEYS_MAX 32
d246 2
a247 1
/* FIXME: We only support one realtime signal but _POSIX_RTSIG_MAX is 8. */
d249 3
d253 1
@


1.28
log
@	* fhandler_clipboard.cc (fhandler_dev_clipboard::read): Use
	read-ahead buffer for reading Windows clipboard if caller's
	buffer is too small for complete characters.
	* include/limits.h: Remove outdated TODO comment.
@
text
@d3 2
a4 2
   Copyright 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007,
   2008 Red Hat, Inc.
@


1.27
log
@* sysconf.cc (sca): Return -1 for _SC_THREAD_ROBUST_PRIO_INHERIT,
_SC_THREAD_ROBUST_PRIO_PROTECT, and _SC_XOPEN_UUCP.
(SC_MAX): Redefine accordingly.
(csa): Return strings for _CS_POSIX_V7_THREADS_CFLAGS,
_CS_POSIX_V7_THREADS_LDFLAGS, and _CS_V7_ENV.
(CS_MAX): Redefine accordingly.
* include/limits.h (LONG_BIT): Define.
(WORD_BIT): Define.
@
text
@d39 1
a39 2
/* TODO: This is newlib's max value.  We should probably rather define our
   own _mbtowc_r and _wctomb_r functions which are only codepage dependent. */
@


1.27.4.1
log
@	Pull in changes from HEAD
	ChangeLog.64bit: New file.
@
text
@d39 2
a40 1
/* Use value from newlib. */
@


1.27.4.2
log
@	* include/cygwin/signal.h (NSIG): Define differently for x86_64 and
	i686.  Change FIXME comment accordingly.
	(SIGRTMAX): Define in terms of NSIG.
	* include/limits.h (RTSIG_MAX): Define for x86_64.
	* strsig.cc (__signals_common): Hold all signals available on both
	platforms.
	(__signals): Define differently for x86_64 and i686.
@
text
@d245 1
a245 2
/* FIXME: We only support one realtime signal in 32 bit mode, but
	 _POSIX_RTSIG_MAX is 8. */
a246 3
#ifdef __x86_64__
#define RTSIG_MAX 33
#else
a247 1
#endif
@


1.27.4.3
log
@	* fhandler_process.cc: Fix debug printf calls to be type safe.
	Add casts to avoid compiler warnings.
	(get_mem_values): Avoid using ULONG_MAX since it's NOT matching
	ULONG on 64 bit.
	* fhandler_procnet.cc (fhandler_procnet::open): Fix syscall_printf call
	to be type safe.
	(format_procnet_ifinet6): Add cast to avoid compiler warnings.
	* ntdll.h (struct _DEBUG_HEAP_BLOCK): Change Address to ULONG_PTR.

	* include/bits/wordsize.h: Fix __WORDSIZE definition for x86_64.
	Add __WORDSIZE_COMPAT32 as on Linux.
	* include/inttypes.h: Include bits/wordsize.h.  Use __WORDSIZE check
	where appropriate.
	* include/limits.h: Include bits/wordsize.h.
	(CHAR_BIT): Change definition to rely on default
	compiler definition.
	(LONG_BIT): Ditto.
	(WORD_BIT): Ditto.
	(__LONG_MAX__): Use __WORDSIZE check.
	(RTSIG_MAX): Ditto.
	* include/stdint.h: Include bits/wordsize.h.  Use __WORDSIZE check
	where appropriate.
	* include/cygwin/signal.h: Ditto.
	* include/cygwin/types.h: Ditto.

	* include/asm/byteorder.h (__ntohl): Use bswap instruction, available
	since i486.
	(__ntohs): Fix constraint to work on 64 bit CPU as well.
@
text
@d4 1
a4 1
   2008, 2009, 2011, 2012 Red Hat, Inc.
a14 1
#include <bits/wordsize.h>
d27 1
a27 1
#define CHAR_BIT __CHAR_BIT__
d31 1
a31 1
#define LONG_BIT (__SIZEOF_LONG__ * __CHAR_BIT__)
d35 1
a35 1
#define WORD_BIT (__SIZEOF_INT__ * __CHAR_BIT__)
d92 3
a94 1
#if __WORDSIZE == 64
a95 2
#else
#define __LONG_MAX__ 2147483647L
d99 1
a99 1
#define LONG_MIN (-LONG_MAX-1L)
d248 1
a248 1
#if __WORDSIZE == 64
@


1.27.4.4
log
@Pull in changes from HEAD
@
text
@d3 2
a4 2
   Copyright 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009,
   2011, 2012 Red Hat, Inc.
@


1.27.4.5
log
@	Remove more old cruft.  Remove Windows NT4 and 2000 from comments
	throughout, unless it still makes sense.
	* dlfcn.cc (dlopen): Drop W2K-only code to make loaded DLL persistent.
	* fhandler_floppy.cc (fhandler_dev_floppy::get_drive_info): Drop code
	trying to use information from NtQueryVolumeInformationFile.
	* fhandler_socket.cc (fhandler_socket::close): Drop code snippet
	disabled since 2008.
	* mount.cc (MINIMAL_WIN_NTFS_FLAGS): Add flag values set on all
	NTFS since Windows XP.
	(get_volume_path_names_for_volume_name): Remove.
	(dos_drive_mappings::dos_drive_mappings): Call Win32 function
	GetVolumePathNamesForVolumeNameW directly.
	* path.cc (file_get_fnoi): Drop test for NT4-only return code.
	* sched.cc: Add FIXME to global comment.  Reformat comments throughout.
	* spawn.cc (child_info_spawn::worker): Just call official IsProcessInJob
	function rather than to test undocumented TEB member.
	* winlean.h: Drop Mingw32-related defines.
	* include/limits.h (PTHREAD_KEYS_MAX): Raise value to reflect minimum
	value available on XP and later.

2013-03-13  Corinna Vinschen  <corinna@@vinschen.de>
@
text
@d4 1
a4 1
   2011, 2012, 2013 Red Hat, Inc.
d225 1
a225 1
/* Tls has 1088 items - and we don't want to use them all :] */
d227 1
a227 1
#define PTHREAD_KEYS_MAX 1024
@


1.26
log
@	* include/limits.h (NGROUPS_MAX): Set to a more sane value.
	* include/sys/param.h (NGROUPS): Ditto.
@
text
@d29 8
@


1.25
log
@	* include/limits.h (PATH_MAX): Add comment.
	* include/cygwin/config.h (__FILENAME_MAX__): Define as 4096.  Add
	comment.
@
text
@d407 1
a407 1
#define NGROUPS_MAX 16
@


1.24
log
@	* cygheap.cc (cwcsdup): New function.
	(cwcsdup1): New function.
	* cygheap.h (cygheap_user::get_windows_id): New method returning PWCHAR.
	(cwcsdup): Declare.
	(cwcsdup1): Declare.
	* registry.cc (get_registry_hive_path): Use WCHAR instead of char
	throughout.
	(load_registry_hive): Ditto.
	* registry.h (get_registry_hive_path): Change declaration accordingly.
	(load_registry_hive): Ditto.
	* sec_helper.cc (cygpsid::string): New method returning PWCHAR.
	* security.h (cygpsid::string): Declare.
	* syscalls.cc (seteuid32): Convert local name var to WCHAR.
	* uinfo.cc (cygheap_user::env_userprofile): Convert local name buffers
	to WCHAR.  Call sys_wcstombs_alloc to generate puserprof buffer.

	* winsup.h: Fix comment.
	(NT_MAX_PATH): New definition for maximum internal path length.
	Use throughout where appropriate.
	* include/limits.h (PATH_MAX): Set to 4096 as on Linux.
@
text
@d327 1
@


1.23
log
@	* fhandler.h (fhandler_console::trunc_buf): Add to use as cache for
	truncated multibyte characters on input.
	(fhandler_console::write_replacement_char): Declare new method.
	* fhandler_console.cc (CONVERT_LIMIT): Raise to 64K.
	(fhandler_console::fhandler_console): Initialize trunc_buf.
	(ERR): Define as independent value again.
	(fhandler_console::write_replacement_char): New method to print
	replacement chars.
	(fhandler_console::write_normal): Add handling for truncated multibyte
	sequences.  Call next_char instead of pathetic CharNextExA function.
	Don't change src, rather just work with found later on.
	* miscfuncs.cc (is_cp_multibyte): Move here from strfuncs.cc.
	Don't call Windows function, restrict to well-known ANSI/OEM codepages
	and UTF-8.
	(next_char): Call CharNextExA only for doublebyte codepages.
	Implement for UTF-8 here.
	* strfuncs.cc (is_cp_multibyte): Move to miscfuncs.cc.
	* winsup.h (next_char): Declare.
	* include/limits.h (MB_LEN_MAX): Set to maximum value of MB_CUR_MAX
	as defined by newlib for now.
@
text
@d324 3
a326 2
/* Maximum length of a path including trailing NUL.
   (32767 - max. native NT path prefix) */
d328 1
a328 1
#define PATH_MAX 32760
@


1.22
log
@	* fhandler.h: Update copyright.
	* include/limits.h: Ditto.
@
text
@d31 3
a33 1
#define MB_LEN_MAX 1
@


1.21
log
@* include/limits.h (TTY_NAME_MAX): Increase size to same as linux to allow for
(at least) null terminating byte for "/dev/console".
@
text
@d3 2
a4 1
   Copyright 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007 Red Hat, Inc.
@


1.20
log
@	* path.cc (struct symlink_info): Change size of contents member to
	be able to keep SYMLINK_MAX sized strings.
	(symlink_worker): Rework for long path names.  When writing windows
	shortcuts, store pathname additionally "hidden" after the actual
	shortcut data to workaround size limitations of the description field.
	(symlink_info::check_shortcut): Drop file name parameter.  Drop max
	file size check.  Use NT functions.  Use appended full path if
	available, description otherwise.  Check symlink string length for
	not exceeding SYMLINK_MAX.  Don't close file here.
	(symlink_info::check_sysfile): Drop file name parameter.  Use NT
	functions.  Check symlink string length for not exceeding SYMLINK_MAX.
	Don't close file here.
	(symlink_info::check_reparse_point): Drop file name parameter.  Drop
	useless length checks.  Allow SYMLINK_MAX length symlink strings.
	Don't close file here.
	(symlink_info::posixify): Allow SYMLINK_MAX length symlink strings.
	(symlink_info::check): Turn around checking for symlink file attributes.
	Use NT functions.  Close symlink file here.
	* include/limits.h (PATH_MAX): Define as 32760.  Change comment.
	(SYMLINK_MAX): Define as PATH_MAX - 1.
@
text
@d292 1
a292 1
#define TTY_NAME_MAX 12
@


1.19
log
@	* Makefile.in (DLL_OFILES): Add posix_ipc.o.
	* cygwin.din (mq_close): Export.
	(mq_getattr): Export.
	(mq_notify): Export.
	(mq_open): Export.
	(mq_receive): Export.
	(mq_send): Export.
	(mq_setattr): Export.
	(mq_timedreceive): Export.
	(mq_timedsend): Export.
	(mq_unlink): Export.
	* posix_ipc.cc: New file implementing the above functions.  Move
	shm_open and shm_unlink from syscalls.cc here.
	* sysconf.cc (sca): Set value of _SC_MQ_OPEN_MAX to MQ_OPEN_MAX,
	_SC_MQ_PRIO_MAX to MQ_PRIO_MAX, _SC_MESSAGE_PASSING to
	_POSIX_MESSAGE_PASSING.
	* include/limits.h (MQ_OPEN_MAX): Define.
	(MQ_PRIO_MAX): Define.
	* include/mqueue.h: New file.
	* include/cygwin/version.h: Bump API minor number.
@
text
@d321 2
a322 1
/* Maximum length of a path */
d324 1
a324 1
#define PATH_MAX 260
d356 1
a356 1
#define SYMLINK_MAX PATH_MAX
@


1.18
log
@	* cygmalloc.h (MALLOC_FAILURE_ACTION): Define empty.
	* cygwin.din (posix_madvise): Export.
	(posix_memalign): Export.
	* fhandler.cc (fhandler_base::fpathconf): Return useful values in
	_PC_VDISABLE, _PC_SYNC_IO and _PC_SYMLINK_MAX cases.
	* malloc_wrapper.cc (malloc): Set errno here since it's not set in
	dlmalloc.c anymore.
	(realloc): Ditto.
	(calloc): Ditto.
	(memalign): Ditto.
	(valloc): Ditto.
	(posix_memalign): New function.
	* mmap.cc (posix_madvise): New function.
	* sysconf.cc (get_open_max): New function.
	(get_page_size): Ditto.
	(get_nproc_values): Ditto.
	(get_avphys): Ditto.
	(sc_type): New type.
	(sca): New array to map _SC_xxx options to sysconf return values.
	(sysconf): Reimplement using sca array.
	* include/limits.h: Add all missing values as defined by SUSv3.
	* include/pthread.h (PTHREAD_DESTRUCTOR_ITERATIONS): Move definition
	to sys/limits.h.
	(PTHREAD_KEYS_MAX): Ditto.
	* include/semaphore.h (SEM_VALUE_MAX): Ditto.
	* include/cygwin/stdlib.h (posix_memalign): Declare.
	* include/cygwin/version.h: Bump API minor number.
	* include/sys/mman.h: Add posix_madvise flags.
	(posix_madvise): Declare.
	* include/sys/termios.h (_POSIX_VDISABLE): Move definition to
	sys/limits.h.
@
text
@d182 1
a182 2
/* The maximum number of open message queue descriptors a process may hold.
   Not yet implemented. */
d184 1
a184 1
/* #define MQ_OPEN_MAX >= _POSIX_MQ_OPEN_MAX */
d186 1
a186 2
/* The maximum number of message priorities supported by the implementation.
   Not yet implemented. */
d188 1
a188 1
/* #define MQ_PRIO_MAX >= _POSIX_MQ_PRIO_MAX */
@


1.17
log
@	* fhandler.cc (check_posix_perm): Moved here from syscalls.cc.
	(fhandler_base::fpathconf): New method implementing (f)pathconf.
	* fhandler.h (class fhandler_base): Declare fpathconf method.
	* path.cc (path_conv::check): Replace MAX_LINK_DEPTH with SYMLOOP_MAX.
	* path.h (MAX_LINK_DEPTH): Delete.
	* syscalls.cc (check_posix_perm): Move to fhandler.cc.
	(fpathconf): Call fhandler's fpathconf method.
	(pathconf): Build fhandler and call fhandler's fpathconf method.
	* sysconf.cc (sysconf): Reorder switch according to order of flags
	in sys/unistd.h.  Add handling for some missing flags.
	* include/limits.h: Reorder according to SUSv3 description.  Add some
	missing definitions.  Add comments.
	* include/sys/syslimits.h: New file overriding newlib's syslimits.h
	file.
@
text
@d3 1
a3 1
   Copyright 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006 Red Hat, Inc.
d130 22
d158 4
d166 4
d182 10
d205 31
d241 19
d272 20
d296 4
d332 27
d378 4
a387 1
#if 0
d389 1
a389 2
#define COLL_WEIGHTS_MAX 0
#endif
a410 2
/* Minimum Values */

a414 32
#define	_POSIX_ARG_MAX		4096
#define _POSIX_CHILD_MAX	6
#define _POSIX_HOST_NAME_MAX	255
#define _POSIX_LINK_MAX		8
#define _POSIX_LOGIN_NAME_MAX	9
#define _POSIX_MAX_CANON	255
#define _POSIX_MAX_INPUT	255
#define _POSIX_NAME_MAX		14
#define _POSIX_NGROUPS_MAX	0
#define _POSIX_OPEN_MAX		16
#define _POSIX_PATH_MAX		255
#define _POSIX_PIPE_BUF		512
#define _POSIX_RE_DUP_MAX	255
#define _POSIX_RTSIG_MAX	8
#define _POSIX_SSIZE_MAX	32767
#define _POSIX_STREAM_MAX	8
#define _POSIX_SYMLINK_MAX	255
#define _POSIX_SYMLOOP_MAX	8
#define _POSIX_TIMER_MAX	32
#define _POSIX_TTY_NAME_MAX	9
#define _POSIX_TZNAME_MAX       3

#define _POSIX2_BC_BASE_MAX	99
#define _POSIX2_BC_DIM_MAX	2048
#define _POSIX2_BC_SCALE_MAX	99
#define _POSIX2_BC_STRING_MAX	1000
#if 0	/* See comment about COLL_WEIGHTS_MAX above. */
#define _POSIX2_COLL_WEIGHTS_MAX	2
#endif
#define _POSIX2_EXPR_NEST_MAX	32
#define _POSIX2_LINE_MAX	2048
#define _POSIX2_RE_DUP_MAX	255
d416 56
d475 7
d484 1
a484 1
#define NZERO			20
@


1.16
log
@	* include/limits.h (LLONG_MIN, LLONG_MAX, ULLONG_MAX): Always define.
@
text
@d3 1
a3 1
   Copyright 1999, 2000, 2001, 2002, 2003, 2004, 2005 Red Hat, Inc.
d21 3
a122 4
/* Maximum number of iovcnt in a writev (an arbitrary number) */
#undef IOV_MAX
#define IOV_MAX 1024

a126 2
/* Maximum length of a path */
#define PATH_MAX 260
d128 15
a142 2
/* Maximum length of a path component. */
#define NAME_MAX 255
d144 3
a146 3
/* Max num groups for a user, value taken from NT documentation */
/* Must match <sys/param.h> NGROUPS */
#define NGROUPS_MAX 16
d148 3
a150 3
/* WaitForMultipleObjects can't handle waiting for more than 64 objects.
   This limits how many children we can fork/spawn off. */
#define CHILD_MAX 63
d159 18
a176 4
/* # of bytes in a pipe buf. This is the max # of bytes which can be
   written to a pipe in one atomic operation. */
#undef PIPE_BUF
#define PIPE_BUF 4096
a181 4
/* Maximum number of characters in a login name. */
#undef LOGIN_NAME_MAX
#define LOGIN_NAME_MAX 256	/* equal to UNLEN defined in w32api/lmcons.h */

d186 84
d276 1
d278 1
d286 2
d290 2
a291 2
#define _POSIX_TZNAME_MAX       3
#define _POSIX_RTSIG_MAX	8
d294 13
d308 1
a308 1
#define RTSIG_MAX		_POSIX_RTSIG_MAX
d310 2
a311 1
/* Used for nice and get/setpriority. */
@


1.15
log
@* include/limits.h: Include features.h, as on linux.
@
text
@a109 1
#if defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
a118 1
#endif
@


1.14
log
@	* include/limits.h (NAME_MAX): New define.
	(PATH_MAX): POSIX allows PATH_MAX to include trailing NUL.
@
text
@d3 1
a3 1
   Copyright 1999, 2000, 2001, 2002, 2003, 2004 Red Hat, Inc.
d12 3
@


1.13
log
@	* cygwin.din: Export getpriority and setpriority.
	* fork.cc (fork_parent): Copy parent's nice value into child.
	* spawn.cc (spawn_guts): Ditto.
	* miscfuncs.cc (winprio_to_nice): New function.
	(nice_to_winprio): Ditto.
	* pinfo.cc (pinfo_init): If parent is not a Cygwin process, set
	default nice value according to current Win32 priority class.
	* pinfo.h (class _pinfo): Add nice member.
	* syscalls.cc (setpriority): New function, only implementing
	PRIO_PROCESS for now.
	(getpriority): Ditto.
	(nice): Just call setpriority.
	* wincap.h (wincaps::has_extended_priority_class): New element.
	* wincap.cc: Implement above element throughout.
	* winsup.h: Add prototypes for winprio_to_nice and nice_to_winprio.
	* include/limits.h (NZERO): New define.
	* include/cygwin/types.h (id_t): New datatype.
	* include/cygwin/version.h: Bump API minor version.
	* include/sys/resource.h: Add PRIO_XXX defines and prototypes for
	getpriority and setpriority.
@
text
@d128 4
a131 1
#define PATH_MAX (260 - 1 /*NUL*/)
@


1.12
log
@	* cygwin.din: Add symbols flockfile, ftrylockfile, funlockfile,
	getgrgid_r, getgrnam_r and getlogin_r.
	* grp.cc (getgrgid_r): New function.
	(getgrnam_r): Ditto.
	* syscalls.cc (flockfile): Ditto.
	(ftrylockfile): Ditto.
	(funlockfile): Ditto.
	* sysconf.cc (sysconf): Return LOGIN_NAME_MAX in case of
	_SC_LOGIN_NAME_MAX.
	* thread.cc (__cygwin_lock_trylock): Define int.  Return value from
	call to pthread_mutex_trylock.
	* uinfo.cc (getlogin_r): New function.
	* include/limits.h: Define LOGIN_NAME_MAX.
	* include/cygwin/version.h: Bump API minor number.
	* include/sys/lock.h: Add declarations for __cygwin_lock_xxx functions.
	* include/sys/stdio.h: Add define for _ftrylockfile.
@
text
@d185 3
@


1.11
log
@	* autoload.cc (NtSetSecurityObject): Add.
	* fhandler_disk_file.cc (fhandler_disk_file::fchmod): Only request
	READ_CONTROL rights when opening the file.
	* ntdll.h (NtSetSecurityObject): Add declaration.
	* security.cc (write_sd): Call NtSetSecurityObject instead of
	BackupWrite.
	(get_nt_object_security): Don't free security descriptor here.

	* syscalls.cc (ttyname): Use buffer of length TTY_NAME_MAX + 1.
	* sysconf.cc (sysconf): Handle _SC_TTY_NAME_MAX request.
	* include/limits.h: Define TTY_NAME_MAX and _POSIX_TTY_NAME_MAX.
@
text
@d154 4
@


1.10
log
@* exceptions.cc (setup_handler): Signal event for any sigwaitinfo if it exists
to force signal to be handled.  Zero event here to prevent races.
* signal.cc (sigwaitinfo): Use local handle value for everything since signal
thread could zero event element at any time.  Detect when awaking due to thread
not in mask and set return value and errno accordingly.  Don't set signal
number to zero unless we've recognized the signal.
* sigproc.cc (sigq): Rename from sigqueue throughout.
* thread.cc (pthread::join): Handle signals received while waiting for thread
to terminate.
* cygwin.din: Export sighold, sigqueue.
* exceptions.cc (sighold): Define new function.
* signal.cc (handle_sigprocmask): Set correct errno for invalid signal.
Simplify debugging output.
(sigqueue): Define new function.
* include/cygwin/signal.h (sighold): Declare new function.
(sigqueue): Ditto.
* include/cygwin/version.h: Bump API minor version number.
* include/limits.h (TIMER_MAX): Define.
(_POSIX_TIMER_MAX): Ditto.
@
text
@d154 4
d177 1
@


1.9
log
@* Makefile.in (DLL_OFILES): Add strsig.o.
* cygtls.h (_local_storage::signamebuf) New element.
* sysconf.cc (sysconf): Implement _SC_RTSIG_MAX.
* tlsoffset.h: Regenerate.
* include/limits.h (_POSIX_RTSIG_MAX): New define.
(RTSIG_MAX): Ditto.
* include/cygwin/signal.h (SIGRTMIN): New define.
(SIGRTMAX): Ditto.
(NSIG): Bump.
* strsig.cc: New file.
@
text
@d150 4
d172 1
@


1.8
log
@* include/limits.h: Revert unsanctioned changes below.
* include/cygwin/config.h: Ditto.
* include/sys/param.h: Ditto.
@
text
@d3 1
a3 1
   Copyright 1999, 2000, 2001 Red Hat, Inc.
d167 3
@


1.7
log
@2003-11-11  Robert Collins <rbtcollins@@hotmail.com>
	    Ron Parker <rdparker@@butlermfg.com>

	* bsdlib.cc: Update throughout to use CYG_MAX_PATH rather than MAX_PATH.
	* cygheap.h: Ditto.
	* dcrt0.cc: Ditto.
	* delqueue.cc: Ditto.
	* dlfcn.cc: Ditto.
	* dll_init.cc: Ditto.
	* dll_init.h: Ditto.
	* dtable.cc: Ditto.
	* environ.cc: Ditto.
	* environ.h: Ditto.
	* exceptions.cc: Ditto.
	* external.cc: Ditto.
	* fhandler_disk_file.cc: Ditto.
	* fhandler_proc.cc: Ditto.
	* fhandler_process.cc: Ditto.
	* fhandler_raw.cc: Ditto.
	* fhandler_registry.cc: Ditto.
	* fhandler_socket.cc: Ditto.
	* fhandler_virtual.cc: Ditto.
	* miscfuncs.cc: Ditto.
	* mmap.cc: Ditto.
	* netdb.cc: Ditto.
	* path.cc: Ditto.
	* path.h: Ditto.
	* pinfo.cc: Ditto.
	* pinfo.h: Ditto.
	* pthread.cc: Ditto.
	* registry.cc: Ditto.
	* shared.cc: Ditto.
	* shared_info.h: Ditto.
	* smallprint.c: Ditto.
	* spawn.cc: Ditto.
	* strace.cc: Ditto.
	* syscalls.cc: Ditto.
	* thread.h: Ditto.
	* uinfo.cc: Ditto.
	* winsup.h: Ditto.
	* include/limits.h: Ditto.
	* include/cygwin/config.h: Ditto.
	* include/sys/param.h: Ditto.
@
text
@d128 1
a128 1
#define PATH_MAX (4096 - 1 /*NUL*/)
@


1.6
log
@* fhandler_console.cc (fhandler_console::read) Handle certain key up events, to
allow pasting accented characters and typing them using the "alt + numerics"
sequences.
* include/limits.h (IOV_MAX): Set to a number which is small enough to use in
an array.
@
text
@d128 1
a128 1
#define PATH_MAX (260 - 1 /*NUL*/)
@


1.5
log
@* include/limits.h: Define LLONG_MIN, LLONG_MAX, ULLONG_MAX.
@
text
@d119 1
a119 1
/* Maximum number of iovcnt in a writev */
d121 1
a121 1
#define IOV_MAX (__INT_MAX__-1)
@


1.5.32.1
log
@merge from trunk
@
text
@d119 1
a119 1
/* Maximum number of iovcnt in a writev (an arbitrary number) */
d121 1
a121 1
#define IOV_MAX 1024
@


1.4
log
@Update copyrights.
@
text
@a90 1
#if defined (__GNU_LIBRARY__) ? defined (__USE_GNU) : !defined (__STRICT_ANSI__)
d95 2
d105 12
@


1.4.4.1
log
@Merged changes from HEAD
@
text
@d91 1
a95 2

#if defined (__GNU_LIBRARY__) ? defined (__USE_GNU) : !defined (__STRICT_ANSI__)
a103 12
#endif

#if defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
/* Minimum and maximum values a `signed long long int' can hold.  */
#undef LLONG_MIN
#define LLONG_MIN (-LLONG_MAX-1)
#undef LLONG_MAX
#define LLONG_MAX __LONG_LONG_MAX__

/* Maximum value an `unsigned long long int' can hold.  (Minimum is 0).  */
#undef ULLONG_MAX
#define ULLONG_MAX (LLONG_MAX * 2ULL + 1)
@


1.3
log
@        * include/limits.h: Define PIPE_BUF.
        * syscalls.cc (fpathconf): Use PIPE_BUF instead of numerical constant.
        (pathconf): Ditto.
@
text
@d3 1
a3 1
   Copyright 1999, 2000 Cygnus Solutions.
@


1.2
log
@        * resource.cc (getrlimit): Return OPEN_MAX as current limit
        on RLIMIT_NOFILE.
        * syscalls.cc (getdtablesize): Return OPEN_MAX.
        * sysconf.cc (sysconf): Return OPEN_MAX on _SC_OPEN_MAX.
        * include/limits.h (OPEN_MAX): Define as 256.
@
text
@d132 5
@


1.1
log
@Initial revision
@
text
@d125 7
@


1.1.1.1
log
@import winsup-2000-02-17 snapshot
@
text
@@
