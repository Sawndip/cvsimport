head	1.5;
access;
symbols
	cygwin-1_7_35-release:1.5
	cygwin-1_7_34-release:1.5
	cygwin-1_7_33-release:1.5
	cygwin-1_7_32-release:1.5
	cygwin-1_7_31-release:1.5
	cygwin-1_7_30-release:1.5
	cygwin-1_7_29-release:1.5
	cygwin-1_7_29-release-branchpoint:1.5.0.4
	cygwin-pre-user-db:1.5
	cygwin-1_7_28-release:1.5
	cygwin-1_7_27-release:1.5
	cygwin-1_7_26-release:1.5
	cygwin-1_7_25-release:1.5
	cygwin-1_7_24-release:1.5
	cygwin-1_7_23-release:1.5
	cygwin-1_7_22-release:1.5
	cygwin-1_7_21-release:1.5
	cygwin-1_7_20-release:1.5
	cygwin-1_7_19-release:1.5
	cygwin-64bit-postmerge:1.5
	cygwin-64bit-premerge-branch:1.5.0.2
	cygwin-64bit-premerge:1.5
	cygwin-1_7_18-release:1.5
	post-ptmalloc3:1.3.2.2
	pre-ptmalloc3:1.3.2.2
	cygwin-1_7_17-release:1.3
	cygwin-64bit-branch:1.3.0.2
	cygwin-1_7_16-release:1.3
	cygwin-1_7_15-release:1.3
	cygwin-1_7_14_2-release:1.3
	cygwin-1_7_14-release:1.3
	cygwin-1_7_12-release:1.3
	cygwin-1_7_11-release:1.3
	cygwin-1_7_10-release:1.3
	signal-rewrite:1.2.0.6
	pre-notty:1.2
	cygwin-1_7_9-release:1.2
	cv-post-1_7_9:1.2.0.4
	cygwin-1_7_8-release:1.2
	cygwin-1_7_7-release:1.2
	cygwin-1_7_5-release:1.2
	cygwin-1_7_4-release:1.2
	cygwin-1_7_3-release:1.2
	cygwin-1_7_2-release:1.2
	fifo_doover3:1.2.0.2
	cygwin-1_7_1-release:1.2
	prefifo:1.2
	cv-branch-2:1.1.0.6
	pre-ripout-set_console_state_for_spawn:1.1
	EOL_registry_mounts:1.1
	preoverlapped:1.1
	drop_9x_support_start:1.1
	cr-0x5f1:1.1.0.4
	cv-branch:1.1.0.2;
locks; strict;
comment	@ * @;


1.5
date	2013.01.21.04.38.30;	author cgf;	state Exp;
branches;
next	1.4;

1.4
date	2012.12.06.08.32.58;	author yselkowitz;	state Exp;
branches;
next	1.3;

1.3
date	2011.10.06.16.02.35;	author chrfranke;	state Exp;
branches
	1.3.2.1;
next	1.2;

1.2
date	2009.07.18.20.25.07;	author cgf;	state Exp;
branches;
next	1.1;

1.1
date	2006.06.12.14.25.05;	author corinna;	state Exp;
branches;
next	;

1.3.2.1
date	2012.12.06.10.59.05;	author corinna;	state Exp;
branches;
next	1.3.2.2;

1.3.2.2
date	2013.01.21.13.52.13;	author corinna;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Throughout, update copyrights to reflect dates which correspond to main-branch
checkins.  Regularize copyright format.
@
text
@/* cygwin/wait.h

   Copyright 2006, 2009, 2011, 2012 Red Hat, Inc.

This file is part of Cygwin.

This software is a copyrighted work licensed under the terms of the
Cygwin license.  Please consult the file "CYGWIN_LICENSE" for
details. */

#ifndef _CYGWIN_WAIT_H
#define _CYGWIN_WAIT_H

#define WAIT_ANY	(pid_t)-1
#define WAIT_MYPGRP	(pid_t)0

#define WNOHANG 1
#define WUNTRACED 2
#define WCONTINUED 8
#define __W_CONTINUED	0xffff

/* Will be redefined in sys/wait.h.  */
#define __wait_status_to_int(w)  (w)

/* A status is 16 bits, and looks like:
      <1 byte info> <1 byte code>

      <code> == 0, child has exited, info is the exit value
      <code> == 1..7e, child has exited, info is the signal number.
      <code> == 7f, child has stopped, info was the signal number.
      <code> == 80, there was a core dump.
*/

#define WIFEXITED(w)	((__wait_status_to_int(w) & 0xff) == 0)
#define WIFSIGNALED(w)	((__wait_status_to_int(w) & 0x7f) > 0 \
			 && ((__wait_status_to_int(w) & 0x7f) < 0x7f))
#define WIFSTOPPED(w)	((__wait_status_to_int(w) & 0xff) == 0x7f)
#define WIFCONTINUED(w)	((__wait_status_to_int(w) & 0xffff) == __W_CONTINUED)
#define WEXITSTATUS(w)	((__wait_status_to_int(w) >> 8) & 0xff)
#define WTERMSIG(w)	(__wait_status_to_int(w) & 0x7f)
#define WSTOPSIG	WEXITSTATUS
#define WCOREDUMP(w)	(WIFSIGNALED(w) && (__wait_status_to_int(w) & 0x80))

#endif /* _CYGWIN_WAIT_H */
@


1.4
log
@	* include/cygwin/wait.h (WAIT_ANY): Define.
	(WAIT_MYPGRP): Define.
@
text
@d3 1
a3 1
   Copyright 2006, 2009, 2011 Red Hat, Inc.
@


1.3
log
@2011-10-06  Christian Franke  <franke@@computer.org>

	* include/cygwin/wait.h: Use new __wait_status_to_int()
	macro to access status value in W*() status checks.
	Fix status description.
	* include/sys/wait.h: Allow `int' and `union wait' as
	wait status parameter.  Change __wait_status_to_int()
	macro and wait () prototypes accordingly.  Add inline
	functions for C++.  Remove extra `;'.
@
text
@d14 3
@


1.3.2.1
log
@Pull in changes from HEAD, missing ones, too.
Move 64bit-only entry from ChangeLog to ChangeLog.64bit.
@
text
@a13 3
#define WAIT_ANY	(pid_t)-1
#define WAIT_MYPGRP	(pid_t)0

@


1.3.2.2
log
@Pull in changes from HEAD
@
text
@d3 1
a3 1
   Copyright 2006, 2009, 2011, 2012 Red Hat, Inc.
@


1.2
log
@* exceptions.cc (sig_handle_tty_stop): Set stopsig to SIGCONT when continuing.
(stopped_or_terminated): Honor WCONTINUED.
* wait.cc (wait4): Ditto.
* include/cygwin/wait.h (WCONTINUED): Define.
(__W_CONTINUED): Ditto.
(WIFCONTINUED): Ditto.
@
text
@d3 1
a3 1
   Copyright 2006, 2009 Red Hat, Inc.
d19 5
a23 2
/* A status looks like:
      <2 bytes info> <2 bytes code>
d31 7
a37 6
#define WIFEXITED(w)	(((w) & 0xff) == 0)
#define WIFSIGNALED(w)	(((w) & 0x7f) > 0 && (((w) & 0x7f) < 0x7f))
#define WIFSTOPPED(w)	(((w) & 0xff) == 0x7f)
#define WIFCONTINUED(w)	(((w) & 0xffff) == __W_CONTINUED)
#define WEXITSTATUS(w)	(((w) >> 8) & 0xff)
#define WTERMSIG(w)	((w) & 0x7f)
d39 1
a39 1
#define WCOREDUMP(w)	(WIFSIGNALED(w) && (w & 0x80))
@


1.1
log
@	* include/sys/wait.h: Move definition of wait constants from here...
	* include/cygwin/wait.h: ...to here.  New file.
	* include/cygwin/stdlib.h: Include cygwin/wait.h to conform with SUSv3.
@
text
@d3 1
a3 1
   Copyright 2006 Red Hat, Inc.
d16 2
d31 1
@

