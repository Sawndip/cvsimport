head	1.20;
access;
symbols
	cygwin-1_7_35-release:1.20
	cygwin-1_7_34-release:1.20
	cygwin-1_7_33-release:1.19.2.1
	cygwin-1_7_32-release:1.19.2.1
	cygwin-1_7_31-release:1.19.2.1
	cygwin-1_7_30-release:1.19.2.1
	cygwin-1_7_29-release:1.19.2.1
	cygwin-1_7_29-release-branchpoint:1.19.0.2
	cygwin-pre-user-db:1.19
	cygwin-1_7_28-release:1.19
	cygwin-1_7_27-release:1.18
	cygwin-1_7_26-release:1.18
	cygwin-1_7_25-release:1.17
	cygwin-1_7_24-release:1.17
	cygwin-1_7_23-release:1.17
	cygwin-1_7_22-release:1.17
	cygwin-1_7_21-release:1.17
	cygwin-1_7_20-release:1.17
	cygwin-1_7_19-release:1.17
	cygwin-64bit-postmerge:1.17
	cygwin-64bit-premerge-branch:1.16.0.2
	cygwin-64bit-premerge:1.16
	cygwin-1_7_18-release:1.16
	post-ptmalloc3:1.15.2.4
	pre-ptmalloc3:1.15.2.4
	cygwin-1_7_17-release:1.15
	cygwin-64bit-branch:1.15.0.2
	cygwin-1_7_16-release:1.15
	cygwin-1_7_15-release:1.15
	cygwin-1_7_14_2-release:1.15
	cygwin-1_7_14-release:1.15
	cygwin-1_7_12-release:1.15
	cygwin-1_7_11-release:1.15
	cygwin-1_7_10-release:1.15
	signal-rewrite:1.14.0.4
	pre-notty:1.14
	cygwin-1_7_9-release:1.14
	cv-post-1_7_9:1.14.0.2
	cygwin-1_7_8-release:1.14
	cygwin-1_7_7-release:1.14
	cygwin-1_7_5-release:1.13
	cygwin-1_7_4-release:1.13
	cygwin-1_7_3-release:1.13
	cygwin-1_7_2-release:1.13
	fifo_doover3:1.12.0.2
	cygwin-1_7_1-release:1.12
	prefifo:1.11
	cv-branch-2:1.11.0.2
	pre-ripout-set_console_state_for_spawn:1.9
	EOL_registry_mounts:1.8
	preoverlapped:1.5
	drop_9x_support_start:1.5
	cr-0x5f1:1.5.0.18
	cv-branch:1.5.0.16
	pre-ptymaster-archetype:1.5
	cr-0x3b58:1.5.0.14
	cr-0x5ef:1.5.0.12
	after-mmap-privanon-noreserve:1.5
	after-mmap-revamp:1.5
	before-mmap-revamp:1.5
	cgf-more-exit-sync:1.5
	post_wait_sig_exit:1.5
	pre_wait_sig_exit:1.5
	reparent-point:1.5
	noreparent:1.5.0.10
	cr-0x5e6:1.5.0.8
	cr-0x9e:1.5.0.6
	cr-0x9d:1.5.0.4
	cgf-deleteme:1.5.0.2
	pre-sigrewrite:1.5
	corinna-01:1.3
	cr-0x9c:1.3.0.6
	cr-0x9b:1.3.0.4
	cr-0x99:1.3
	Z-emcb-cygwin_daemon:1.3.0.2
	pre-cgf-merge:1.3
	cgf-dev-branch:1.1.0.2;
locks; strict;
comment	@ * @;


1.20
date	2014.03.05.12.50.29;	author corinna;	state Exp;
branches;
next	1.19;

1.19
date	2014.01.17.10.56.25;	author corinna;	state Exp;
branches
	1.19.2.1;
next	1.18;

1.18
date	2013.10.23.10.06.17;	author corinna;	state Exp;
branches;
next	1.17;

1.17
date	2013.04.23.09.44.35;	author corinna;	state Exp;
branches;
next	1.16;

1.16
date	2013.01.21.04.38.30;	author cgf;	state Exp;
branches;
next	1.15;

1.15
date	2012.01.13.09.15.22;	author yselkowitz;	state Exp;
branches
	1.15.2.1;
next	1.14;

1.14
date	2010.04.28.10.00.24;	author corinna;	state Exp;
branches;
next	1.13;

1.13
date	2010.02.26.09.36.21;	author corinna;	state Exp;
branches;
next	1.12;

1.12
date	2009.10.09.08.36.21;	author corinna;	state Exp;
branches;
next	1.11;

1.11
date	2009.03.31.09.42.58;	author corinna;	state Exp;
branches;
next	1.10;

1.10
date	2008.06.21.20.24.45;	author corinna;	state Exp;
branches;
next	1.9;

1.9
date	2008.04.07.16.15.45;	author cgf;	state Exp;
branches;
next	1.8;

1.8
date	2008.02.15.17.53.11;	author cgf;	state Exp;
branches;
next	1.7;

1.7
date	2007.09.08.10.51.37;	author briand;	state Exp;
branches;
next	1.6;

1.6
date	2007.09.07.00.44.27;	author briand;	state Exp;
branches;
next	1.5;

1.5
date	2003.11.15.17.04.10;	author cgf;	state Exp;
branches;
next	1.4;

1.4
date	2003.11.14.23.40.06;	author rbcollins;	state Exp;
branches;
next	1.3;

1.3
date	2003.06.16.03.24.13;	author cgf;	state Exp;
branches;
next	1.2;

1.2
date	2003.05.13.09.26.17;	author corinna;	state Exp;
branches;
next	1.1;

1.1
date	2003.05.09.21.27.40;	author corinna;	state Exp;
branches
	1.1.2.1;
next	;

1.19.2.1
date	2014.03.09.18.57.50;	author cgf;	state Exp;
branches;
next	;

1.15.2.1
date	2013.01.09.16.53.19;	author corinna;	state Exp;
branches;
next	1.15.2.2;

1.15.2.2
date	2013.01.18.15.34.12;	author corinna;	state Exp;
branches;
next	1.15.2.3;

1.15.2.3
date	2013.01.29.18.29.35;	author corinna;	state Exp;
branches;
next	1.15.2.4;

1.15.2.4
date	2013.01.29.22.15.14;	author corinna;	state Exp;
branches;
next	1.15.2.5;

1.15.2.5
date	2013.03.28.20.42.20;	author corinna;	state Exp;
branches;
next	;

1.1.2.1
date	2003.05.10.17.20.55;	author cgf;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2003.05.26.19.39.07;	author cgf;	state Exp;
branches;
next	1.1.2.3;

1.1.2.3
date	2003.07.06.05.10.44;	author cgf;	state Exp;
branches;
next	;


desc
@@


1.20
log
@	* include/cygwin/config.h (__TM_GMTOFF): Define.
	(__TM_ZONE): Define.
@
text
@/* cygwin/config.h header file for Cygwin.

   This wraps Cygwin configuration setting which were in newlib's
   sys/config.h before.  This way we can manaage our configuration
   setting without bothering newlib.

   Copyright 2003, 2007, 2008, 2009, 2010, 2012, 2013, 2014 Red Hat, Inc.
   Written by C. Vinschen.

This file is part of Cygwin.

This software is a copyrighted work licensed under the terms of the
Cygwin license.  Please consult the file "CYGWIN_LICENSE" for
details. */

#ifndef _CYGWIN_CONFIG_H
#ifdef __cplusplus
extern "C" {
#endif
#define _CYGWIN_CONFIG_H

#define __DYNAMIC_REENT__

/* The following provides an inline version of __getreent() for newlib,
   which will be used throughout the library whereever there is a _r
   version of a function that takes _REENT.  This saves the overhead
   of a function call for what amounts to a simple computation.

   The definition below is essentially equivalent to the one in cygtls.h
   (&_my_tls.local_clib) however it uses a fixed precomputed
   offset rather than dereferencing a field of a structure.

   Including tlsoffets.h here in order to get this constant offset
   tls_local_clib is a bit of a hack, but the alternative would require
   dragging the entire definition of struct _cygtls (a large and complex
   Cygwin internal data structure) into newlib.  The machinery to
   compute these offsets already exists for the sake of gendef so
   we might as well just use it here.  */

#ifdef _COMPILING_NEWLIB
#ifdef __x86_64__
#include "../tlsoffsets64.h"
/* We would like to use just "%gs:8", but on x86_64 gcc uses pc-relative
   addressing and translates "gs:8" into the wrong addressing mode. */
static inline char *___getreent (void)
{
  register char *ret;
  __asm __volatile__ ("movq %%gs:8,%0" : "=r" (ret));
  return ret + tls_local_clib;
}
#define __getreent() ((struct _reent *) ___getreent())
#else
#include "../tlsoffsets.h"
extern char *_tlsbase __asm__ ("%fs:4");
#define __getreent() (struct _reent *)(_tlsbase + tls_local_clib)
#endif
#endif  /* _COMPILING_NEWLIB */

#ifdef __x86_64__
# define __SYMBOL_PREFIX
#else
# define __SYMBOL_PREFIX "_"
#endif
#define _SYMSTR(x)	__SYMBOL_PREFIX #x

#define __FILENAME_MAX__ 4096	/* Keep in sync with PATH_MAX in limits.h. */

/* The following block of macros is required to build newlib correctly for
   Cygwin.  Changing them in applications has no or not the desired effect.
   Just leave them alone. */
#define _READ_WRITE_RETURN_TYPE _ssize_t
#define _READ_WRITE_BUFSIZE_TYPE size_t
#define __LARGE64_FILES 1
#define __USE_INTERNAL_STAT64 1
#define __LINUX_ERRNO_EXTENSIONS__ 1
#define _MB_EXTENDED_CHARSETS_ALL 1
#define __HAVE_LOCALE_INFO__ 1
#define __HAVE_LOCALE_INFO_EXTENDED__ 1
#define _WANT_C99_TIME_FORMATS 1
#define _GLIBC_EXTENSION 1
#define _STDIO_BSD_SEMANTICS 1
#define __TM_GMTOFF tm_gmtoff
#define __TM_ZONE   tm_zone

#if defined(__INSIDE_CYGWIN__) || defined(_COMPILING_NEWLIB)
#define __EXPORT __declspec(dllexport)
#define __IMPORT
#else
#define __EXPORT
#define __IMPORT __declspec(dllimport)
#endif

#ifndef __WCHAR_MAX__
#define __WCHAR_MAX__ 0xffffu
#endif

#define DEFAULT_LOCALE "C.UTF-8"

#ifdef __cplusplus
}
#endif
#endif /* _CYGWIN_CONFIG_H */
@


1.19
log
@	* include/cygwin/config.h (_STDIO_BSD_SEMANTICS): Define as 1.
@
text
@d82 3
@


1.19.2.1
log
@* include/cygwin/config.h (__TM_GMTOFF): Define.
(__TM_ZONE): Define.
@
text
@a81 3
#define __TM_GMTOFF tm_gmtoff
#define __TM_ZONE   tm_zone

@


1.18
log
@	* include /cygwin/config.h (_READ_WRITE_BUFSIZE_TYPE): Define.
@
text
@d7 1
a7 1
   Copyright 2003, 2007, 2008, 2009, 2010, 2012, 2013 Red Hat, Inc.
d81 1
@


1.17
log
@	* Merge in cygwin-64bit-branch.
@
text
@d72 1
@


1.16
log
@Throughout, update copyrights to reflect dates which correspond to main-branch
checkins.  Regularize copyright format.
@
text
@d7 1
a7 1
   Copyright 2003, 2007, 2008, 2009, 2010, 2012 Red Hat, Inc.
d41 12
d56 1
d59 7
@


1.15
log
@	* include/cygwin/config.h (_GLIBC_EXTENSION): Define.
@
text
@d7 1
a7 1
   Copyright 2003, 2007, 2008, 2009, 2010 Red Hat, Inc.
@


1.15.2.1
log
@	* include/cygwin/config.h (_tlsbase): Define for x86_64.
@
text
@d7 1
a7 1
   Copyright 2003, 2007, 2008, 2009, 2010, 2012, 2013 Red Hat, Inc.
a41 3
#ifdef __x86_64__
extern char *_tlsbase __asm__ ("%gs:8");
#else
a42 1
#endif
@


1.15.2.2
log
@	* include/cygwin/config.h (__SYMBOL_PREFIX): Define.
	(_SYMSTR): Define.
	* child_info.h (spawn_info): Use _SYMSTR macro to define assembler
	symbol.
	(fork_info): Ditto.
	* libstdcxx_wrapper.cc: Ditto, throughout.
	* winsup.h (dll_crt0): Ditto.
	* include/cygwin/time.h (daylight): Ditto.
	(timezone): Ditto.
	* lib/_cygwin_crt0_common.cc: Ditto, throughout.
@
text
@a49 7
#ifdef __x86_64__
# define __SYMBOL_PREFIX
#else
# define __SYMBOL_PREFIX "_"
#endif
#define _SYMSTR(x)	__SYMBOL_PREFIX #x

@


1.15.2.3
log
@	* cygtls.h (_tlsbase): Temporary workaround for GCC bug.
	(_tlsbase): Ditto.
	* cygwin64.din: Set BASE temporariliy to address < 32 bit to workaround
	GDB bug.
	* dcrt0.cc (child_info_fork::alloc_stack): Temporary workaround for GCC
	bug.
	(dll_crt0_1): Ditto.
	* miscfuncs.cc (memset): Temporary workaround missing MSABI function in
	newlib.
	(memcpy): Ditto.
	* include/cygwin/config.h (__getreent): Drop definition for x86_64 to
	workaround GCC bug.
@
text
@a40 2
// FIXME: We would like to use "%gs:8" on 64 bit, but gcc chokes on that so far.
#ifndef __x86_64__
d42 3
d46 1
a47 1
#endif
@


1.15.2.4
log
@	* cygtls.h: Cleanup x86_64 related comment.
	(_tlsbase): Change return type to PVOID.
	(_tlstop): Ditto.
	(_my_tls): Accommodate above change.
	* dcrt0.cc (child_info_fork::alloc_stack): Revert previous patch, but
	keep cast to PVOID.
	(dll_crt0_1): Ditto.
	* exception.h: Define _exception_list as _EXCEPTION_REGISTRATION_RECORD
	on x86_64.
	(_except_list): Define in terms of NtCurrentTeb() on x86_64.
	* miscfuncs.cc (__import_address): Handle 32 bit absolute addressing
	in IAT on x86_64.
	* include/cygwin/config.h (___getreent): New inline function on
	x86_64.  Define __getreent in terms of ___getreent on x86_64.  Fix
	comment accordingly.
@
text
@d41 2
a42 15
#ifdef __x86_64__
#include "../tlsoffsets64.h"
/* We would like to use just "%gs:8", but on x86_64 gcc uses pc-relative
   addressing and translates "gs:8" into the wrong addressing mode. */
static inline char *___getreent (void)
{
  return
  ({
    register char *ret __asm ("%rax");
    __asm __volatile ("movq %gs:8,%rax");
    ret + tls_local_clib;
  });
}
#define __getreent() ((struct _reent *) ___getreent())
#else
@


1.15.2.5
log
@	* include/cygwin/config.h (___getreent): Harden against aggressive
	compiler optimization.
@
text
@d47 6
a52 3
  register char *ret;
  __asm __volatile__ ("movq %%gs:8,%0" : "=r" (ret));
  return ret + tls_local_clib;
@


1.14
log
@	* cygwin.din (__locale_mb_cur_max): Export.
	* nlsfuncs.cc (__getlocaleinfo): Drop conversion to multibyte.
	(__charfromwchar): New function to convert to multibyte.
	(__eval_datetimefmt): Convert to return wchar_t pointer.  Work on
	wide char string.
	(__set_lc_time_from_win): Take additional pointer to "C" category info
	to accommodate C.foo locales.  Rework to fill wide char members in
	category info.
	(__set_lc_ctype_from_win): New function.
	(__set_lc_numeric_from_win): Take additional pointer to "C" category
	info to accommodate C.foo locales.  Rework to fill wide char members
	in category info.
	(__set_lc_monetary_from_win): Ditto.
	(__set_lc_messages_from_win): Ditto.
	(__get_current_collate_codeset): New function, called from nl_langinfo.
	* include/cygwin/config.h (__HAVE_LOCALE_INFO_EXTENDED__): Define.
@
text
@d59 1
@


1.13
log
@	Remove all traces of __CYGWIN_USE_BIG_TYPES__.

	* include/cygwin/config.h: Move Cygwin-specific build flags from
	newlib's sys/config.h here.  Add a comment.
@
text
@d57 1
@


1.12
log
@	* include/cygwin/config.h (DEFAULT_LOCALE): Define as "C.UTF-8".
@
text
@d7 1
a7 1
   Copyright 2003, 2007, 2008, 2009 Red Hat, Inc.
d47 4
a52 7
#define __CYGWIN_USE_BIG_TYPES__ 1
#ifdef __CYGWIN_USE_BIG_TYPES__
/* __USE_INTERNAL_STAT64 is needed when building newlib for Cygwin.
   It must be set when __CYGWIN_USE_BIG_TYPES__ is set.  In this case
   newlib will call the 64 bit stat calls internally.  Otherwise the
   struct stat used in newlib is not matching the struct stat used in
   Cygwin. */
d54 4
a57 1
#endif
@


1.11
log
@	* ctype.cc: Remove implementation of ctype functions in favor of
	pointer-based newlib implementation.
	(_ctype_b): Declare.
	(__ctype_cp): Move to newlib. Declare.
	(__ctype_iso): Ditto.
	(__set_ctype): Implement changing __ctype_ptr__.  Only copy character
	class data in applications built under older Cygwin.
	* cygwin.din (__ctype_ptr__): Export.
	* include/ctype.h: Remove in favor of newlib implementation.
	* include/cygwin/config.h (__EXPORT): Define alongside __IMPORT.
	* include/cygwin/version.h (CYGWIN_VERSION_CHECK_FOR_OLD_CTYPE):
	Define check for old vs. new ctype implementation.
	Bump API minor number.
@
text
@d70 2
@


1.10
log
@	* include/limits.h (PATH_MAX): Add comment.
	* include/cygwin/config.h (__FILENAME_MAX__): Define as 4096.  Add
	comment.
@
text
@d7 1
a7 1
   Copyright 2003 Red Hat, Inc.
d59 1
d62 1
@


1.9
log
@Add miscfuncs.h to files as needed throughout.
* mount.cc: New file.
* path.cc: Move mount-specific stuff into mount.cc.  Move common stuff into
miscfuncs.cc.  Remove unneeded includes.
* miscfuncs.cc: Move some common path functions here.
* miscfuncs.h: New file.
* winsup.h: Move miscelleneous functions to miscfuncs.h.
* dcrt0.cc: Remove unneeded includes.
* Makefile.in (DLL_OFILES): Add mount.o.
* include/cygwin/config.h: Fix a minor typo.
@
text
@d46 1
a46 1
#define __FILENAME_MAX__ (260 - 1 /* NUL */)
@


1.8
log
@Perform whitespace cleanup throughout.
* dcrt0.cc (signal_shift_subtract): Eliminate ancient backwards compatibility.
(check_sanity_and_sync): Ditto.
* winsup.h (SIGTOMASK): Ditto.  Just use constant in signal calculation.
* include/cygwin/version: Remove backwards signal mask compatibility define.
* path.cc (symlink_info::check_sysfile): Cosmetic change.
* registry.cc (get_registry_hive_path): Remove unneeded variable.
* exceptions.cc (handle_sigsuspend): Eliminate thread signal mask and use
either main sigmask or current thread sigmask.
(set_process_mask): Ditto.
(sighold): Ditto.
(sigrelse): Ditto.
(sigset): Ditto.
(set_process_mask_delta): Ditto.
(_cygtls::call_signal_handler): Ditto.
* fhandler_process.cc (format_process_status): Ditto.
* fhandler_termios.cc (fhandler_termios::bg_check): Ditto.
* pinfo.h (class pinfo): Ditto.
* select.cc (pselect): Ditto.
* signal.cc (sigprocmask): Ditto.
(abort): Ditto.
(sigpause): Ditto.
(sigsend): Ditto.
(wait_sig): Ditto.
* thread.h (pthread::parent_tls): New member.
* thread.cc (pthread::pthread): Record parent_tls here.
(pthread::thread_init_wrapper): Initialize sigmask from parent thread.
@
text
@d4 1
a4 1
   sys/config.h before.  THis way we can manaage our configuration
@


1.7
log
@	* include/cygwin/config.h: Conditionalize inline __getreent()
	definition on _COMPILING_NEWLIB.
@
text
@d28 1
a28 1
   
d32 1
a32 1
   
@


1.6
log
@	* include/cygwin/config.h (__getreent): Define inline version.
@
text
@d40 1
d44 1
@


1.5
log
@* include/limits.h: Revert unsanctioned changes below.
* include/cygwin/config.h: Ditto.
* include/sys/param.h: Ditto.
@
text
@d23 21
@


1.4
log
@2003-11-11  Robert Collins <rbtcollins@@hotmail.com>
	    Ron Parker <rdparker@@butlermfg.com>

	* bsdlib.cc: Update throughout to use CYG_MAX_PATH rather than MAX_PATH.
	* cygheap.h: Ditto.
	* dcrt0.cc: Ditto.
	* delqueue.cc: Ditto.
	* dlfcn.cc: Ditto.
	* dll_init.cc: Ditto.
	* dll_init.h: Ditto.
	* dtable.cc: Ditto.
	* environ.cc: Ditto.
	* environ.h: Ditto.
	* exceptions.cc: Ditto.
	* external.cc: Ditto.
	* fhandler_disk_file.cc: Ditto.
	* fhandler_proc.cc: Ditto.
	* fhandler_process.cc: Ditto.
	* fhandler_raw.cc: Ditto.
	* fhandler_registry.cc: Ditto.
	* fhandler_socket.cc: Ditto.
	* fhandler_virtual.cc: Ditto.
	* miscfuncs.cc: Ditto.
	* mmap.cc: Ditto.
	* netdb.cc: Ditto.
	* path.cc: Ditto.
	* path.h: Ditto.
	* pinfo.cc: Ditto.
	* pinfo.h: Ditto.
	* pthread.cc: Ditto.
	* registry.cc: Ditto.
	* shared.cc: Ditto.
	* shared_info.h: Ditto.
	* smallprint.c: Ditto.
	* spawn.cc: Ditto.
	* strace.cc: Ditto.
	* syscalls.cc: Ditto.
	* thread.h: Ditto.
	* uinfo.cc: Ditto.
	* winsup.h: Ditto.
	* include/limits.h: Ditto.
	* include/cygwin/config.h: Ditto.
	* include/sys/param.h: Ditto.
@
text
@d23 1
a23 1
#define __FILENAME_MAX__ (4096 - 1 /* NUL */)
@


1.3
log
@Throughout, remove "include <errno.h>" from files which already include
cygerrno.h.
* include/cygwin/config.h (__DYNAMIC_REENT__): Define.
* include/cygwin/version.h: Bump API minor version.
* cygwin.din: Export __getreent
* cygerrno.h: Include errno.h.  Fix places where _impure_ptr is used directly
to store the errno value.
* debug.cc (__set_errno): Ditto.
* errno.cc: Remove _RRENT_ONLY define to get errno.cc compiled.
* signal.cc: Rename _reent_clib to _REENT throughout.
* thread.h (reent_clib): Remove prototype.
* thread.cc (reent_clib): Rename reent_clib to __getreent.  Return _impure_ptr
until MTinterface is initialized.
(reent_winsup): Fix a possible SEGV when _r == NULL.  Return NULL instead.
* MTinterface::fixup_after_fork: Switch reent back to _impure_ptr to keep
signal handling running when fork is called from a thread other than the
mainthread.
@
text
@d23 1
a23 1
#define __FILENAME_MAX__ (260 - 1 /* NUL */)
@


1.2
log
@	* include/cygwin/config.h: Define __USE_INTERNAL_STAT64 appropriately.
@
text
@d22 1
@


1.1
log
@	* include/cygwin/config.h: New file.
@
text
@d26 8
@


1.1.2.1
log
@merge from trunk
@
text
@@


1.1.2.2
log
@merge from trunk
@
text
@a25 8
#ifdef __CYGWIN_USE_BIG_TYPES__
/* __USE_INTERNAL_STAT64 is needed when building newlib for Cygwin.
   It must be set when __CYGWIN_USE_BIG_TYPES__ is set.  In this case
   newlib will call the 64 bit stat calls internally.  Otherwise the
   struct stat used in newlib is not matching the struct stat used in
   Cygwin. */
#define __USE_INTERNAL_STAT64 1
#endif
@


1.1.2.3
log
@merge from trunk
@
text
@a21 1
#define __DYNAMIC_REENT__
@


