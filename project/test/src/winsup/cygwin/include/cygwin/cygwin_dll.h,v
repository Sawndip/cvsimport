head	1.13;
access;
symbols
	cygwin-1_7_35-release:1.13
	cygwin-1_7_34-release:1.13
	cygwin-1_7_33-release:1.12.2.1
	cygwin-1_7_32-release:1.12.2.1
	cygwin-1_7_31-release:1.12
	cygwin-1_7_30-release:1.12
	cygwin-1_7_29-release:1.12
	cygwin-1_7_29-release-branchpoint:1.12.0.2
	cygwin-pre-user-db:1.12
	cygwin-1_7_28-release:1.12
	cygwin-1_7_27-release:1.12
	cygwin-1_7_26-release:1.12
	cygwin-1_7_25-release:1.12
	cygwin-1_7_24-release:1.12
	cygwin-1_7_23-release:1.12
	cygwin-1_7_22-release:1.12
	cygwin-1_7_21-release:1.12
	cygwin-1_7_20-release:1.12
	cygwin-1_7_19-release:1.12
	cygwin-64bit-postmerge:1.12
	cygwin-64bit-premerge-branch:1.11.0.2
	cygwin-64bit-premerge:1.11
	cygwin-1_7_18-release:1.11
	post-ptmalloc3:1.10.4.2
	pre-ptmalloc3:1.10.4.2
	cygwin-1_7_17-release:1.10
	cygwin-64bit-branch:1.10.0.4
	cygwin-1_7_16-release:1.10
	cygwin-1_7_15-release:1.10
	cygwin-1_7_14_2-release:1.10
	cygwin-1_7_14-release:1.10
	cygwin-1_7_12-release:1.10
	cygwin-1_7_11-release:1.10
	cygwin-1_7_10-release:1.10
	signal-rewrite:1.10.0.2
	pre-notty:1.10
	cygwin-1_7_9-release:1.9
	cv-post-1_7_9:1.9.0.4
	cygwin-1_7_8-release:1.9
	cygwin-1_7_7-release:1.9
	cygwin-1_7_5-release:1.9
	cygwin-1_7_4-release:1.9
	cygwin-1_7_3-release:1.9
	cygwin-1_7_2-release:1.9
	fifo_doover3:1.9.0.2
	cygwin-1_7_1-release:1.9
	prefifo:1.8
	cv-branch-2:1.8.0.28
	pre-ripout-set_console_state_for_spawn:1.8
	EOL_registry_mounts:1.8
	preoverlapped:1.8
	drop_9x_support_start:1.8
	cr-0x5f1:1.8.0.26
	cv-branch:1.8.0.24
	pre-ptymaster-archetype:1.8
	cr-0x3b58:1.8.0.22
	cr-0x5ef:1.8.0.20
	after-mmap-privanon-noreserve:1.8
	after-mmap-revamp:1.8
	before-mmap-revamp:1.8
	cgf-more-exit-sync:1.8
	post_wait_sig_exit:1.8
	pre_wait_sig_exit:1.8
	reparent-point:1.8
	noreparent:1.8.0.18
	cr-0x5e6:1.8.0.16
	cr-0x9e:1.8.0.14
	cr-0x9d:1.8.0.12
	cgf-deleteme:1.8.0.10
	pre-sigrewrite:1.8
	corinna-01:1.8
	cr-0x9c:1.8.0.8
	cr-0x9b:1.8.0.6
	cr-0x99:1.8
	Z-emcb-cygwin_daemon:1.8.0.2
	w32api-2_2:1.8
	mingw-runtime-2_4:1.8
	pre-cgf-merge:1.8
	cgf-dev-branch:1.8.0.56
	predaemon:1.8
	cygwin_daemon_merge_HEAD:1.8
	pregp02r1:1.8.0.34
	cygnus_cvs_20020108_pre:1.8
	Z-cygwin_daemon_merge-new_HEAD:1.8
	Z-cygwin_daemon_merge_HEAD:1.8
	cygwin_daemon:1.8.0.4;
locks; strict;
comment	@ * @;
expand	@o@;


1.13
date	2014.08.01.15.48.37;	author ericb;	state Exp;
branches;
next	1.12;

1.12
date	2013.04.23.09.44.35;	author corinna;	state Exp;
branches
	1.12.2.1;
next	1.11;

1.11
date	2013.01.21.04.38.30;	author cgf;	state Exp;
branches;
next	1.10;

1.10
date	2011.04.01.20.41.32;	author cgf;	state Exp;
branches
	1.10.4.1;
next	1.9;

1.9
date	2009.08.13.07.35.49;	author corinna;	state Exp;
branches;
next	1.8;

1.8
date	2001.09.11.20.01.01;	author cgf;	state Exp;
branches;
next	1.7;

1.7
date	2000.10.28.05.41.43;	author cgf;	state Exp;
branches;
next	1.6;

1.6
date	2000.08.21.18.27.38;	author cgf;	state Exp;
branches;
next	1.5;

1.5
date	2000.08.21.18.15.50;	author dj;	state Exp;
branches;
next	1.4;

1.4
date	2000.08.21.17.47.52;	author dj;	state Exp;
branches;
next	1.3;

1.3
date	2000.08.07.04.13.34;	author cgf;	state Exp;
branches;
next	1.2;

1.2
date	2000.07.29.04.19.24;	author cgf;	state Exp;
branches
	1.2.2.1;
next	1.1;

1.1
date	2000.02.17.19.38.31;	author cgf;	state Exp;
branches
	1.1.1.1;
next	;

1.12.2.1
date	2014.08.13.17.39.11;	author corinna;	state Exp;
branches;
next	;

1.10.4.1
date	2012.10.23.14.23.50;	author corinna;	state Exp;
branches;
next	1.10.4.2;

1.10.4.2
date	2013.01.21.13.52.13;	author corinna;	state Exp;
branches;
next	1.10.4.3;

1.10.4.3
date	2013.04.08.11.19.06;	author corinna;	state Exp;
branches;
next	;

1.2.2.1
date	2000.08.07.04.17.05;	author cgf;	state Exp;
branches;
next	;

1.1.1.1
date	2000.02.17.19.38.31;	author cgf;	state Exp;
branches;
next	;


desc
@@


1.13
log
@headers: properly decorate attributes

As pointed out here:
https://cygwin.com/ml/cygwin/2014-07/msg00371.html

any use of __attribute__ in a header that can be included by a user
should be namespace-safe, by decorating the attribute arguments with __
(while gcc does a lousy job at documenting it, ALL attributes have a __
counterpart, precisely so that public headers can use attributes without
risk of collision with macros belonging to user namespace).

* include/pthread.h: Decorate attribute names with __, for
namespace safety.
* include/cygwin/core_dump.h: Likewise.
* include/cygwin/cygwin_dll.h: Likewise.
* include/sys/cygwin.h: Likewise.
* include/sys/strace.h: Likewise.
@
text
@/* cygwin_dll.h

   Copyright 1998, 1999, 2000, 2001, 2009, 2011, 2012, 2013, 2014 Red Hat, Inc.

This file is part of Cygwin.

This software is a copyrighted work licensed under the terms of the
Cygwin license.  Please consult the file "CYGWIN_LICENSE" for
details. */

#ifndef __CYGWIN_CYGWIN_DLL_H__
#define __CYGWIN_CYGWIN_DLL_H__

#include <windows.h>

#ifdef __cplusplus
#define CDECL_BEGIN extern "C" {
#define CDECL_END }
#else
#define CDECL_BEGIN
#define CDECL_END
#endif

#define DECLARE_CYGWIN_DLL(Entry)					      \
									      \
CDECL_BEGIN								      \
  int WINAPI Entry (HINSTANCE h, DWORD reason, void *ptr);	              \
  typedef int (*mainfunc) (int, char **, char **);			      \
  extern PVOID cygwin_attach_dll (HMODULE, mainfunc);			      \
  extern void cygwin_detach_dll (PVOID);				      \
CDECL_END								      \
									      \
static HINSTANCE storedHandle;						      \
static DWORD storedReason;						      \
static void* storedPtr;							      \
int __dynamically_loaded;						      \
									      \
static int __dllMain (int a __attribute__ ((__unused__)),		      \
		      char **b __attribute__ ((__unused__)),		      \
		      char **c __attribute__ ((__unused__)))		      \
{									      \
  return Entry (storedHandle, storedReason, storedPtr);		              \
}									      \
									      \
static PVOID dll_index;							      \
									      \
int WINAPI _cygwin_dll_entry (HINSTANCE h, DWORD reason, void *ptr)	      \
{									      \
  int ret;								      \
  ret = 1;								      \
									      \
  switch (reason)							      \
  {									      \
    case DLL_PROCESS_ATTACH:						      \
    {									      \
      storedHandle = h;							      \
      storedReason = reason;						      \
      storedPtr = ptr;							      \
      __dynamically_loaded = (ptr == NULL);				      \
      dll_index = cygwin_attach_dll (h, &__dllMain);			      \
      if (dll_index == (PVOID) -1)					      \
	ret = 0;							      \
    }									      \
    break;								      \
									      \
    case DLL_PROCESS_DETACH:						      \
    {									      \
      ret = Entry (h, reason, ptr);					      \
      if (ret)								      \
      {									      \
	cygwin_detach_dll (dll_index);					      \
	dll_index = (PVOID) -1;						      \
      }									      \
    }									      \
    break;								      \
									      \
    case DLL_THREAD_ATTACH:						      \
    {									      \
      ret = Entry (h, reason, ptr);					      \
    }									      \
    break;								      \
									      \
    case DLL_THREAD_DETACH:						      \
    {									      \
      ret = Entry (h, reason, ptr);					      \
    }									      \
    break;								      \
  }									      \
  return ret;								      \
}									      \
									      \
/* OBSOLETE: This is only provided for source level compatibility. */         \
int WINAPI _cygwin_noncygwin_dll_entry (HINSTANCE h, DWORD reason, void *ptr) \
{									      \
  return _cygwin_dll_entry (h, reason, ptr);				      \
}									      \

#endif /* __CYGWIN_CYGWIN_DLL_H__ */
@


1.12
log
@	* Merge in cygwin-64bit-branch.
@
text
@d3 1
a3 1
   Copyright 1998, 1999, 2000, 2001, 2009, 2011, 2012, 2013 Red Hat, Inc.
d38 3
a40 3
static int __dllMain (int a __attribute__ ((unused)),			      \
		      char **b __attribute__ ((unused)),		      \
		      char **c __attribute__ ((unused)))		      \
@


1.12.2.1
log
@2014-08-11  Corinna Vinschen  <corinna@@vinschen.de>

	* cpuid.h: Add missing copyright header.  Fix formatting.  Use uint32_t
	instead of unsigned throughout.  Change functions to static inline and
	always inline.
	(cpuid): Add parameter to set ecx, allowing to request extended CPUID
	info.
	* fhandler_proc.cc (format_proc_cpuinfo): Use uint32_t instead of
	unsigned throughout.  Add fake decimal places to MHz info.  Handle more
	feature flags.
	* fhandler_random.cc (fhandler_dev_random::write): Allow up to 4K
	input to add entropy.
	* syscalls.cc: Drop including cpuid.h.

2014-08-07  Yaakov Selkowitz  <yselkowi@@redhat.com>

	* common.din (__cxa_finalize): Export.
	* dcrt0.cc (cygwin_atexit): Use d->handle with __cxa_atexit.
	* dll_init.cc (dll_list::detach): Use d->handle with __cxa_finalize.
	* include/cygwin/version.h (CYGWIN_VERSION_API_MINOR): Use 274 for
	__cxa_finalize as well.

2014-08-04  Anthony Heading  <anthony@@ajrh.net>

	* include/sys/file.h: Add extern "C".

2014-08-04  Corinna Vinschen  <corinna@@vinschen.de>

	* common.din (__cxa_atexit): Export.
	* include/cygwin/version.h (CYGWIN_VERSION_API_MINOR): Bump to 274.

2014-07-31  Eric Blake  <eblake@@redhat.com>

	* include/pthread.h: Decorate attribute names with __, for
	namespace safety.
	* include/cygwin/core_dump.h: Likewise.
	* include/cygwin/cygwin_dll.h: Likewise.
	* include/sys/cygwin.h: Likewise.
	* include/sys/strace.h: Likewise.
@
text
@d3 1
a3 1
   Copyright 1998, 1999, 2000, 2001, 2009, 2011, 2012, 2013, 2014 Red Hat, Inc.
d38 3
a40 3
static int __dllMain (int a __attribute__ ((__unused__)),		      \
		      char **b __attribute__ ((__unused__)),		      \
		      char **c __attribute__ ((__unused__)))		      \
@


1.11
log
@Throughout, update copyrights to reflect dates which correspond to main-branch
checkins.  Regularize copyright format.
@
text
@d3 1
a3 1
   Copyright 1998, 1999, 2000, 2001, 2009, 2011 Red Hat, Inc.
d29 2
a30 2
  extern int cygwin_attach_dll (HMODULE, mainfunc);			      \
  extern void cygwin_detach_dll (DWORD);				      \
d38 3
a40 1
static int __dllMain (int a, char **b, char **c)			      \
d45 1
a45 1
static DWORD dll_index;							      \
d61 1
a61 1
      if (dll_index == (DWORD) -1)					      \
d72 1
a72 1
	dll_index = (DWORD) -1;						      \
@


1.10
log
@update copyright
@
text
@d3 1
a3 1
   Copyright 1998, 1999, 2000, 2001, 2009 Red Hat, Inc.
@


1.10.4.1
log
@	* dll_init.cc (reserve_at): Use PVOID rather than DWORD as type for
	pointer parameters and return type.
	(release_at): Ditto.
	(dll_list::load_after_fork_impl): Fix format strings.  Call reserve_at
	without casts to DWORD.
	(struct dllcrt0_info): Change type of res to PVOID.
	(dll_dllcrt0): Return PVOID rather than int.
	(dll_dllcrt0_1): Accommodate type change of dllcrt0_info::res.
	(dll_noncygwin_dllcrt0): Disable on 64 bit.  Add a cast for 32 bit.
	* dll_init.h (struct pefile): Drop 32 bit decoration from Windows
	types.
	* ntdll.h (struct _DEBUG_HEAP_INFORMATION): Define Base as UINT_PTR.
	(struct _DEBUG_MODULE_INFORMATION): Define Reserved and Base as
	UINT_PTR.
	* winsup.h (dll_dllcrt0): Declare as PVOID.
	(dll_noncygwin_dllcrt0): Don't declare on 64 bit.
	* include/cygwin/cygwin_dll.h (cygwin_attach_dll): Declare as PVOID.
	(cygwin_detach_dll): Declare with PVOID parameter.
	(dll_index): Declare as PVOID.
	(_cygwin_dll_entry): Accommodate type change of dll_index.
	* lib/crt0.h (dll_dllcrt0): Declare as PVOID.
	* lib/cygwin_attach_dll.c (cygwin_attach_dll): Define PVOID.
@
text
@d3 1
a3 1
   Copyright 1998, 1999, 2000, 2001, 2009, 2012 Red Hat, Inc.
d29 2
a30 2
  extern PVOID cygwin_attach_dll (HMODULE, mainfunc);			      \
  extern void cygwin_detach_dll (PVOID);				      \
d43 1
a43 1
static PVOID dll_index;							      \
d59 1
a59 1
      if (dll_index == (PVOID) -1)					      \
d70 1
a70 1
	dll_index = (PVOID) -1;						      \
@


1.10.4.2
log
@Pull in changes from HEAD
@
text
@d3 1
a3 1
   Copyright 1998, 1999, 2000, 2001, 2009, 2011, 2012 Red Hat, Inc.
@


1.10.4.3
log
@	* Throughout fix -Wextra warnings.  Ignore regex files and gmon.c.
@
text
@d3 1
a3 1
   Copyright 1998, 1999, 2000, 2001, 2009, 2011, 2012, 2013 Red Hat, Inc.
d38 1
a38 3
static int __dllMain (int a __attribute__ ((unused)),			      \
		      char **b __attribute__ ((unused)),		      \
		      char **c __attribute__ ((unused)))		      \
@


1.9
log
@	* cxx.cc (default_cygwin_cxx_malloc): Enhance commenting.
	* dll_init.cc (dll_dllcrt0_1): Likewise.
	* dlfcn.cc (dlopen): Prevent dlopen()'d DLL from installing any
	cxx malloc overrides.
	* include/cygwin/cygwin_dll.h (__dynamically_loaded): New variable.
	* lib/_cygwin_crt0_common.cc (_cygwin_crt0_common): Check it and only
	install cxx malloc overrides when statically loaded.  Extend comments.
@
text
@d3 1
a3 1
   Copyright 1998, 1999, 2000, 2001 Red Hat, Inc.
@


1.8
log
@Update copyrights.
@
text
@d36 1
d57 1
@


1.7
log
@Whitespace cleanup.

* configure.in: Eliminate subdir stuff.
* configure: Regenerate.
* include/getopt.h (option): Make name field 'const'.
@
text
@d3 1
a3 1
   Copyright 1998, 1999, 2000 Cygnus Solutions
@


1.6
log
@Update copyright.
@
text
@d18 1
a18 1
#define CDECL_END }			      
d30 1
a30 1
  extern void cygwin_detach_dll (DWORD);	               		      \
d56 1
a56 1
      dll_index = cygwin_attach_dll (h, &__dllMain);	      		      \
d67 1
a67 1
	cygwin_detach_dll (dll_index);				      	      \
d72 1
a72 1
    									      \
@


1.5
log
@* include/cygwin/cygwin_dll.h (DECLARE_CYGWIN_DLL): hinstance,
not handle. (reverse of previous diff)
@
text
@d3 1
a3 1
   Copyright 1998 Cygnus Solutions
d5 1
a5 1
This file is part of Cygwin32.
d8 1
a8 1
Cygwin32 license.  Please consult the file "CYGWIN_LICENSE" for
@


1.4
log
@* include/cygwin/cygwin_dll.h (DECLARE_CYGWIN_DLL): handle,
not hinstance.
@
text
@d27 1
a27 1
  int WINAPI Entry (HANDLE h, DWORD reason, void *ptr);		              \
d33 1
a33 1
static HANDLE storedHandle;						      \
d44 1
a44 1
int WINAPI _cygwin_dll_entry (HANDLE h, DWORD reason, void *ptr)	      \
d89 1
a89 1
int WINAPI _cygwin_noncygwin_dll_entry (HANDLE h, DWORD reason, void *ptr)    \
@


1.3
log
@* include/cygwin/cygwin_dll.h: Remove extraneous (and incorrect) declarations.
@
text
@d44 1
a44 1
int WINAPI _cygwin_dll_entry (HINSTANCE h, DWORD reason, void *ptr)	      \
@


1.2
log
@* include/cygwin/cygwin_dll.h: Update for modern compilers.
* lib/cygwin_crt0.c: Inexplicably need to define alloca for newer compilers.
* fhandler.h (fhandler_console): Add new method.
* fhandler.cc (fhandler_console::set_cursor_maybe): New method.
(fhandler_console::read): Set cursor if it has moved to make it visible.
@
text
@a26 3
  int WINAPI _cygwin_dll_entry (HANDLE h, DWORD reason, void *ptr);	      \
  int WINAPI _cygwin_noncygwin_dll_entry (HANDLE h, DWORD reason, void *ptr); \
									      \
@


1.2.2.1
log
@* include/cygwin/cygwin_dll.h: Remove extraneous (and incorrect) declarations.
@
text
@d27 3
@


1.1
log
@Initial revision
@
text
@d31 3
a33 2
  extern int cygwin_attach_dll ();					      \
  extern void cygwin_detach_dll ();	                      		      \
d45 1
a45 1
static int dll_index;							      \
d47 1
a47 1
int WINAPI _cygwin_dll_entry (HANDLE h, DWORD reason, void *ptr)	      \
d60 1
a60 1
      if (dll_index == -1)						      \
d71 1
a71 1
	dll_index = -1;							      \
@


1.1.1.1
log
@import winsup-2000-02-17 snapshot
@
text
@@
