head	1.2;
access;
symbols
	cygwin-1_7_35-release:1.2
	cygwin-1_7_34-release:1.2
	cygwin-1_7_33-release:1.2
	cygwin-1_7_32-release:1.2
	cygwin-1_7_31-release:1.2
	cygwin-1_7_30-release:1.2
	cygwin-1_7_29-release:1.2
	cygwin-1_7_29-release-branchpoint:1.2.0.18
	cygwin-pre-user-db:1.2
	cygwin-1_7_28-release:1.2
	cygwin-1_7_27-release:1.2
	cygwin-1_7_26-release:1.2
	cygwin-1_7_25-release:1.2
	cygwin-1_7_24-release:1.2
	cygwin-1_7_23-release:1.2
	cygwin-1_7_22-release:1.2
	cygwin-1_7_21-release:1.2
	cygwin-1_7_20-release:1.2
	cygwin-1_7_19-release:1.2
	cygwin-64bit-postmerge:1.2
	cygwin-64bit-premerge-branch:1.2.0.16
	cygwin-64bit-premerge:1.2
	cygwin-1_7_18-release:1.2
	post-ptmalloc3:1.2
	pre-ptmalloc3:1.2
	cygwin-1_7_17-release:1.2
	cygwin-64bit-branch:1.2.0.14
	cygwin-1_7_16-release:1.2
	cygwin-1_7_15-release:1.2
	cygwin-1_7_14_2-release:1.2
	cygwin-1_7_14-release:1.2
	cygwin-1_7_12-release:1.2
	cygwin-1_7_11-release:1.2
	cygwin-1_7_10-release:1.2
	signal-rewrite:1.2.0.12
	pre-notty:1.2
	cygwin-1_7_9-release:1.2
	cv-post-1_7_9:1.2.0.10
	cygwin-1_7_8-release:1.2
	cygwin-1_7_7-release:1.2
	cygwin-1_7_5-release:1.2
	cygwin-1_7_4-release:1.2
	cygwin-1_7_3-release:1.2
	cygwin-1_7_2-release:1.2
	fifo_doover3:1.2.0.8
	cygwin-1_7_1-release:1.2
	prefifo:1.2
	cv-branch-2:1.2.0.6
	pre-ripout-set_console_state_for_spawn:1.2
	EOL_registry_mounts:1.2
	preoverlapped:1.2
	drop_9x_support_start:1.2
	cr-0x5f1:1.2.0.4
	cv-branch:1.2.0.2;
locks; strict;
comment	@# @;


1.2
date	2006.07.05.16.06.50;	author cgf;	state Exp;
branches;
next	1.1;

1.1
date	2006.07.05.15.59.39;	author cgf;	state Exp;
branches;
next	;


desc
@@


1.2
log
@* sortdin: Ignore all leading underscores when deriving a sort key.
* cygwin.din: Resort.
@
text
@#!/usr/bin/perl

my %data = ();
my %code = ();

my @@out = ();

my $fn = $ARGV[0];

while (<>) {
    push(@@out, $_);
    /^\s*exports/i and last;
}

while (<>) {
    my $key;
    $arr = /\sDATA\s*$/o ? \%data : \%code;
    $_ =~ s/^\s+//;
    my $key = (split(' ', $_))[0];
    substr($key, 0, 1) = '' while $key =~ /^_/o;
    chomp $key;
    $arr->{$key}->{$_} = 1;
}

for my $k (sort keys %data) {
    push(@@out, sort {$b cmp $a} keys %{$data{$k}});
}

for my $k (sort keys %code) {
    push(@@out, sort {$b cmp $a} keys %{$code{$k}});
}

open(R, '>', $fn);
print R @@out;
close R;
@


1.1
log
@* sortdin: New program.
* cygwin.din: Sort.
@
text
@d20 1
a20 1
    substr($key, 0, 1) = '' if /^_/o;
@

