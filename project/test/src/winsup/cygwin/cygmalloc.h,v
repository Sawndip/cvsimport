head	1.15;
access;
symbols
	cygwin-1_7_35-release:1.15
	cygwin-1_7_34-release:1.15
	cygwin-1_7_33-release:1.15
	cygwin-1_7_32-release:1.15
	cygwin-1_7_31-release:1.15
	cygwin-1_7_30-release:1.15
	cygwin-1_7_29-release:1.15
	cygwin-1_7_29-release-branchpoint:1.15.0.2
	cygwin-pre-user-db:1.15
	cygwin-1_7_28-release:1.15
	cygwin-1_7_27-release:1.15
	cygwin-1_7_26-release:1.15
	cygwin-1_7_25-release:1.15
	cygwin-1_7_24-release:1.15
	cygwin-1_7_23-release:1.15
	cygwin-1_7_22-release:1.15
	cygwin-1_7_21-release:1.15
	cygwin-1_7_20-release:1.15
	cygwin-1_7_19-release:1.15
	cygwin-64bit-postmerge:1.15
	cygwin-64bit-premerge-branch:1.14.0.2
	cygwin-64bit-premerge:1.14
	cygwin-1_7_18-release:1.14
	post-ptmalloc3:1.12.10.5
	pre-ptmalloc3:1.12.10.4
	cygwin-1_7_17-release:1.12
	cygwin-64bit-branch:1.12.0.10
	cygwin-1_7_16-release:1.12
	cygwin-1_7_15-release:1.12
	cygwin-1_7_14_2-release:1.12
	cygwin-1_7_14-release:1.12
	cygwin-1_7_12-release:1.12
	cygwin-1_7_11-release:1.12
	cygwin-1_7_10-release:1.12
	signal-rewrite:1.12.0.8
	pre-notty:1.12
	cygwin-1_7_9-release:1.12
	cv-post-1_7_9:1.12.0.6
	cygwin-1_7_8-release:1.12
	cygwin-1_7_7-release:1.12
	cygwin-1_7_5-release:1.12
	cygwin-1_7_4-release:1.12
	cygwin-1_7_3-release:1.12
	cygwin-1_7_2-release:1.12
	fifo_doover3:1.12.0.4
	cygwin-1_7_1-release:1.12
	prefifo:1.12
	cv-branch-2:1.12.0.2
	pre-ripout-set_console_state_for_spawn:1.12
	EOL_registry_mounts:1.12
	preoverlapped:1.12
	drop_9x_support_start:1.12
	cr-0x5f1:1.9.0.8
	cv-branch:1.9.0.6
	pre-ptymaster-archetype:1.9
	cr-0x3b58:1.9.0.4
	cr-0x5ef:1.9.0.2
	after-mmap-privanon-noreserve:1.8
	after-mmap-revamp:1.8
	before-mmap-revamp:1.8
	cgf-more-exit-sync:1.8
	post_wait_sig_exit:1.8
	pre_wait_sig_exit:1.8
	reparent-point:1.6
	noreparent:1.6.0.4
	cr-0x5e6:1.6.0.2
	cr-0x9e:1.4.0.12
	cr-0x9d:1.4.0.10
	cgf-deleteme:1.4.0.8
	pre-sigrewrite:1.4
	corinna-01:1.4
	cr-0x9c:1.4.0.6
	cr-0x9b:1.4.0.4
	cr-0x99:1.4
	Z-emcb-cygwin_daemon:1.4.0.2
	w32api-2_2:1.3
	mingw-runtime-2_4:1.3
	pre-cgf-merge:1.4
	cgf-dev-branch:1.3.0.16
	Z-cygwin_daemon_merge_HEAD:1.3
	cygwin_daemon:1.1.0.2
	Z-cygwin_daemon_merge-new_HEAD:1.3;
locks; strict;
comment	@ * @;


1.15
date	2013.04.23.09.44.31;	author corinna;	state Exp;
branches;
next	1.14;

1.14
date	2013.01.21.07.42.02;	author cgf;	state Exp;
branches;
next	1.13;

1.13
date	2013.01.21.04.34.50;	author cgf;	state Exp;
branches;
next	1.12;

1.12
date	2007.02.08.11.35.52;	author corinna;	state Exp;
branches
	1.12.10.1;
next	1.11;

1.11
date	2007.02.07.20.44.04;	author corinna;	state Exp;
branches;
next	1.10;

1.10
date	2007.02.07.17.22.40;	author corinna;	state Exp;
branches;
next	1.9;

1.9
date	2005.12.10.17.09.58;	author cgf;	state Exp;
branches;
next	1.8;

1.8
date	2005.07.28.17.03.33;	author cgf;	state Exp;
branches;
next	1.7;

1.7
date	2005.04.05.04.30.58;	author cgf;	state Exp;
branches;
next	1.6;

1.6
date	2004.02.09.04.04.22;	author cgf;	state Exp;
branches;
next	1.5;

1.5
date	2004.01.20.19.36.34;	author cgf;	state Exp;
branches;
next	1.4;

1.4
date	2003.02.22.23.02.15;	author cgf;	state Exp;
branches;
next	1.3;

1.3
date	2002.08.18.04.14.59;	author cgf;	state Exp;
branches
	1.3.16.1;
next	1.2;

1.2
date	2002.08.18.04.13.57;	author cgf;	state Exp;
branches;
next	1.1;

1.1
date	2002.08.16.19.41.39;	author cgf;	state Exp;
branches
	1.1.2.1;
next	;

1.12.10.1
date	2012.11.16.15.07.50;	author corinna;	state Exp;
branches;
next	1.12.10.2;

1.12.10.2
date	2012.11.22.12.05.08;	author corinna;	state Exp;
branches;
next	1.12.10.3;

1.12.10.3
date	2013.01.21.13.52.04;	author corinna;	state Exp;
branches;
next	1.12.10.4;

1.12.10.4
date	2013.02.04.15.43.11;	author corinna;	state Exp;
branches;
next	1.12.10.5;

1.12.10.5
date	2013.02.27.08.36.58;	author corinna;	state Exp;
branches;
next	1.12.10.6;

1.12.10.6
date	2013.03.11.11.57.15;	author corinna;	state Exp;
branches;
next	1.12.10.7;

1.12.10.7
date	2013.03.13.16.51.24;	author corinna;	state Exp;
branches;
next	1.12.10.8;

1.12.10.8
date	2013.04.10.12.29.48;	author corinna;	state Exp;
branches;
next	1.12.10.9;

1.12.10.9
date	2013.04.23.09.06.12;	author corinna;	state Exp;
branches;
next	;

1.3.16.1
date	2003.02.23.06.00.21;	author cgf;	state Exp;
branches;
next	;

1.1.2.1
date	2002.08.16.21.46.48;	author scottc;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	2002.08.18.12.09.27;	author scottc;	state Exp;
branches;
next	;


desc
@@


1.15
log
@	* Merge in cygwin-64bit-branch.
@
text
@/* cygmalloc.h: cygwin DLL malloc stuff

   Copyright 2002, 2003, 2004, 2005, 2007, 2013 Red Hat, Inc.

This file is part of Cygwin.

This software is a copyrighted work licensed under the terms of the
Cygwin license.  Please consult the file "CYGWIN_LICENSE" for
details. */

#ifdef __cplusplus
extern "C" {
#endif
#include "regparm.h"

void __reg1 dlfree (void *p);
void __reg1 *dlmalloc (size_t size);
void __reg2 *dlrealloc (void *p, size_t size);
void __reg2 *dlcalloc (size_t nmemb, size_t size);
void __reg2 *dlmemalign (size_t alignment, size_t bytes);
void __reg1 *dlvalloc (size_t bytes);
size_t __reg1 dlmalloc_usable_size (void *p);
int __reg1 dlmalloc_trim (size_t);
int __reg2 dlmallopt (int p, int v);
void dlmalloc_stats ();

#ifdef __x86_64__
#define MALLOC_ALIGNMENT ((size_t)16U)
#endif

#ifndef __INSIDE_CYGWIN__
extern "C" void __set_ENOMEM ();
void *mmap64 (void *, size_t, int, int, int, off_t);
#define mmap mmap64
# define MALLOC_FAILURE_ACTION	__set_ENOMEM ()
# define USE_DL_PREFIX 1
#else
# define __malloc_lock() mallock.acquire ()
# define __malloc_unlock() mallock.release ()
extern muto mallock;
#endif
#ifdef __cplusplus
}
#endif
@


1.14
log
@* cygerrno.h (__reg3): Define.
* cygmalloc.h (__reg3): Ditto.
@
text
@d14 2
a15 9
#ifndef __reg1
# define __reg1 __stdcall __attribute__ ((regparm (1)))
#endif
#ifndef __reg2
# define __reg2 __stdcall __attribute__ ((regparm (2)))
#endif
#ifndef __reg3
# define __reg3 __stdcall __attribute__ ((regparm (3)))
#endif
d17 2
a18 2
void __reg1 *dlmalloc (unsigned size);
void __reg2 *dlrealloc (void *p, unsigned size);
d27 4
d33 2
@


1.13
log
@Throughout, change __attribute__ ((regparm (N))) to just __regN.  Throughout,
(mainly in fhandler*) start fixing gcc 4.7.2 mismatch between regparm
definitions and declarations.
* gendef: Define some functions to take @@ declaration to accommodate _regN
defines which use __stdcall.
* gentls_offsets: Define __regN macros as empty.
* autoload.cc (wsock_init): Remove unneeded regparm attribute.
* winsup.h (__reg1): Define.
(__reg2): Define.
(__reg3): Define.
* advapi32.cc (DuplicateTokenEx): Coerce some initializers to avoid warnings
from gcc 4.7.2.
* exceptions.cc (status_info): Declare struct to use NTSTATUS.
(cygwin_exception::dump_exception): Coerce e->ExceptionCode to NTSTATUS.
* fhandler_clipboard.cc (cygnativeformat): Redefine as UINT to avoid gcc 4.7.2
warnings.
(fhandler_dev_clipboard::read): Ditto.
@
text
@d20 2
a21 2
#ifndef __reg2
# define __reg2 __stdcall __attribute__ ((regparm (2)))
@


1.12
log
@	* cygmalloc.h (__set_ENOMEM): Declare.
	(MALLOC_FAILURE_ACTION): Call __set_ENOMEM.
	* malloc_wrapper.cc (malloc) Remove setting errno here.
	(realloc): Ditto.
	(calloc): Ditto.
	(memalign): Ditto.
	(valloc): Ditto.
	(posix_memalign): Save and restore errno.
@
text
@d3 1
a3 1
   Copyright 2002, 2003, 2004, 2005, 2007 Red Hat, Inc.
d14 18
a31 9
void dlfree (void *p) __attribute__ ((regparm (1)));
void *dlmalloc (unsigned size) __attribute__ ((regparm (1)));
void *dlrealloc (void *p, unsigned size) __attribute__ ((regparm (2)));
void *dlcalloc (size_t nmemb, size_t size) __attribute__ ((regparm (2)));
void *dlmemalign (size_t alignment, size_t bytes) __attribute__ ((regparm (2)));
void *dlvalloc (size_t bytes) __attribute__ ((regparm (1)));
size_t dlmalloc_usable_size (void *p) __attribute__ ((regparm (1)));
int dlmalloc_trim (size_t) __attribute__ ((regparm (1)));
int dlmallopt (int p, int v) __attribute__ ((regparm (2)));
@


1.12.10.1
log
@	* cygmalloc.h (dlmalloc): Change unsigned in declaration to size_t.
	(dlrealloc): Ditto.
	* wait.cc (wait4): Cast second parameter in proc_subproc call to
	uintptr_t.
@
text
@d15 2
a16 2
void *dlmalloc (size_t size) __attribute__ ((regparm (1)));
void *dlrealloc (void *p, size_t size) __attribute__ ((regparm (2)));
@


1.12.10.2
log
@Fix copyrights.
@
text
@d3 1
a3 1
   Copyright 2002, 2003, 2004, 2005, 2007, 2012 Red Hat, Inc.
@


1.12.10.3
log
@Pull in changes from HEAD
@
text
@d3 1
a3 1
   Copyright 2002, 2003, 2004, 2005, 2007, 2012, 2013 Red Hat, Inc.
d14 9
a22 18
#ifndef __reg1
# define __reg1 __stdcall __attribute__ ((regparm (1)))
#endif
#ifndef __reg2
# define __reg2 __stdcall __attribute__ ((regparm (2)))
#endif
#ifndef __reg3
# define __reg3 __stdcall __attribute__ ((regparm (3)))
#endif
void __reg1 dlfree (void *p);
void __reg1 *dlmalloc (size_t size);
void __reg2 *dlrealloc (void *p, size_t size);
void __reg2 *dlcalloc (size_t nmemb, size_t size);
void __reg2 *dlmemalign (size_t alignment, size_t bytes);
void __reg1 *dlvalloc (size_t bytes);
size_t __reg1 dlmalloc_usable_size (void *p);
int __reg1 dlmalloc_trim (size_t);
int __reg2 dlmallopt (int p, int v);
@


1.12.10.4
log
@	* autoload.cc (LoadDLLfuncEx3): Adjust address computation required
	by latest change to the 64 bit code.
	* cygmalloc.h (MALLOC_ALIGNMENT): Set to 16 on x86_64.
	* cygtls.h: Set struct alignment to 8 on x86_64.  Move inclusion of
	other header files outside of alignment-enforced code area.  Drop
	inclusion of security.h entirely.
	(_cygtls::get_signal_arrived): Use NULL SECURITY_ATTRIBUTES rather than
	&sec_none_nih.
	* gendef (_cygtls::lock): Fix stack alignment.
	* heap.cc (page_const): Change type to ptrdiff_t, otherwise negation
	operator in pround creates broken bitmask.
	* shared.cc (page_const): Add cast to ptrdiff_t.
	* tlsoffsets64.h: Regenerate.
@
text
@a33 4
#ifdef __x86_64__
#define MALLOC_ALIGNMENT ((size_t)16U)
#endif

@


1.12.10.5
log
@	* configure.ac (MALLOC_OFILES): Add ptmalloc3.o.
	* configure: Regenerate.
	* cygmalloc.h: Declare pt* functions rather than dl* functions.
	(mmap64): Declare.
	(mmap): Define as mmap64.
	(__malloc_lock): Drop macro.
	(__malloc_unlock): Ditto.
	(MSPACES): Define.
	(ONLY_MSPACES): Define.
	* debug.h: Include malloc.h rather than otherwise unused dlmalloc.h.
	* fork.cc (frok::parent): Drop malloc locking since that's performed
	by malloc_atfork now.
	* heap.cc (heap_init): Accommodate the fact that there's a chance
	that no heap space has been allocated at fork time.
	* malloc-private.h: New file from ptmalloc3, having malloc-machine.h
	and malloc-2.8.3.h folded in.
	* malloc.cc: Replaced by new file from ptmalloc3.
	* malloc_wrapper.cc: Throughout, remove malloc locks and call pt*
	functions rather than dl* functions.
	* pinfo.cc (winpids::set): Drop malloc locking.
	* ptmalloc3.cc: New file from ptmalloc3.
@
text
@d3 1
a3 1
   Copyright 2002, 2003, 2004, 2005, 2007, 2013 Red Hat, Inc.
d23 10
a32 10
void __reg1 ptfree (void *p);
void __reg1 *ptmalloc (size_t size);
void __reg2 *ptrealloc (void *p, size_t size);
void __reg2 *ptcalloc (size_t nmemb, size_t size);
void __reg2 *ptmemalign (size_t alignment, size_t bytes);
void __reg1 *ptvalloc (size_t bytes);
size_t __reg1 ptmalloc_usable_size (void *p);
int __reg1 ptmalloc_trim (size_t);
int __reg2 ptmallopt (int p, int v);
void ptmalloc_stats ();
a39 2
void *mmap64 (void *, size_t, int, int, int, off_t);
#define mmap mmap64
d42 4
a45 2
# define MSPACES 1
# define ONLY_MSPACES 1
@


1.12.10.6
log
@	* cygmalloc.h: Include regparm.h rather than defining __reg{1,2,3} here.
	* ptmalloc3.cc (__malloc_initialized): Define as type LONG on Cygwin
	and include windows.h.
	(ptmalloc_init): Set __malloc_initialized on Cygwin using
	InterlockedCompareExchange and carefully check for concurrency
	situation.
@
text
@d14 9
a22 2
#include "regparm.h"

@


1.12.10.7
log
@	* Revert to old malloc.
	* mmap.cc (MMAP_STORAGE_LOW): Set higher.  Add comment.
	(MMAP_STORAGE_HIGH): Add comment.
	(class mmap_allocator): Change comment.  Add mmap_current_low member.
	(mmap_allocator::mmap_allocator): Define default constructor.
	(mmap_allocator::alloc): Change to a round-robin mechanism.  Add or
	change comments accordingly.
@
text
@d16 10
a25 10
void __reg1 dlfree (void *p);
void __reg1 *dlmalloc (size_t size);
void __reg2 *dlrealloc (void *p, size_t size);
void __reg2 *dlcalloc (size_t nmemb, size_t size);
void __reg2 *dlmemalign (size_t alignment, size_t bytes);
void __reg1 *dlvalloc (size_t bytes);
size_t __reg1 dlmalloc_usable_size (void *p);
int __reg1 dlmalloc_trim (size_t);
int __reg2 dlmallopt (int p, int v);
void dlmalloc_stats ();
d33 2
d37 2
a38 4
#else
# define __malloc_lock() mallock.acquire ()
# define __malloc_unlock() mallock.release ()
extern muto mallock;
@


1.12.10.8
log
@	* Reinstantiate ptmalloc3.
	* configure.ac (MALLOC_OFILES): Drop here.
	* configure: Regenerate.
	* Makefile.in (MALLOC_OFILES): Set to fixed value here.
	* cygmalloc.h (HAVE_MORECORE): Define.
	* malloc.cc (init_user_mstate): Don't disable MORECORE if building
	with ONLY_MSPACES.
@
text
@d16 10
a25 10
void __reg1 ptfree (void *p);
void __reg1 *ptmalloc (size_t size);
void __reg2 *ptrealloc (void *p, size_t size);
void __reg2 *ptcalloc (size_t nmemb, size_t size);
void __reg2 *ptmemalign (size_t alignment, size_t bytes);
void __reg1 *ptvalloc (size_t bytes);
size_t __reg1 ptmalloc_usable_size (void *p);
int __reg1 ptmalloc_trim (size_t);
int __reg2 ptmallopt (int p, int v);
void ptmalloc_stats ();
a32 2
void *mmap64 (void *, size_t, int, int, int, off_t);
#define mmap mmap64
d35 4
a38 3
# define MSPACES 1
# define ONLY_MSPACES 1
# define HAVE_MORECORE 1
@


1.12.10.9
log
@	* Remove ptmalloc3 once and for all.
@
text
@d16 10
a25 10
void __reg1 dlfree (void *p);
void __reg1 *dlmalloc (size_t size);
void __reg2 *dlrealloc (void *p, size_t size);
void __reg2 *dlcalloc (size_t nmemb, size_t size);
void __reg2 *dlmemalign (size_t alignment, size_t bytes);
void __reg1 *dlvalloc (size_t bytes);
size_t __reg1 dlmalloc_usable_size (void *p);
int __reg1 dlmalloc_trim (size_t);
int __reg2 dlmallopt (int p, int v);
void dlmalloc_stats ();
d37 3
a39 4
#else
# define __malloc_lock() mallock.acquire ()
# define __malloc_unlock() mallock.release ()
extern muto mallock;
@


1.11
log
@	* cygmalloc.h (MALLOC_FAILURE_ACTION): Move to correct #if branch.
@
text
@d26 2
a27 1
# define MALLOC_FAILURE_ACTION
@


1.10
log
@	* cygmalloc.h (MALLOC_FAILURE_ACTION): Define empty.
	* cygwin.din (posix_madvise): Export.
	(posix_memalign): Export.
	* fhandler.cc (fhandler_base::fpathconf): Return useful values in
	_PC_VDISABLE, _PC_SYNC_IO and _PC_SYMLINK_MAX cases.
	* malloc_wrapper.cc (malloc): Set errno here since it's not set in
	dlmalloc.c anymore.
	(realloc): Ditto.
	(calloc): Ditto.
	(memalign): Ditto.
	(valloc): Ditto.
	(posix_memalign): New function.
	* mmap.cc (posix_madvise): New function.
	* sysconf.cc (get_open_max): New function.
	(get_page_size): Ditto.
	(get_nproc_values): Ditto.
	(get_avphys): Ditto.
	(sc_type): New type.
	(sca): New array to map _SC_xxx options to sysconf return values.
	(sysconf): Reimplement using sca array.
	* include/limits.h: Add all missing values as defined by SUSv3.
	* include/pthread.h (PTHREAD_DESTRUCTOR_ITERATIONS): Move definition
	to sys/limits.h.
	(PTHREAD_KEYS_MAX): Ditto.
	* include/semaphore.h (SEM_VALUE_MAX): Ditto.
	* include/cygwin/stdlib.h (posix_memalign): Declare.
	* include/cygwin/version.h: Bump API minor number.
	* include/sys/mman.h: Add posix_madvise flags.
	(posix_madvise): Declare.
	* include/sys/termios.h (_POSIX_VDISABLE): Move definition to
	sys/limits.h.
@
text
@d26 1
a28 1
#define MALLOC_FAILURE_ACTION
@


1.9
log
@* malloc.cc: Update to version 2.8.3.
* cygmalloc.h (MSPACE): Remove unneeded definition.
@
text
@d3 1
a3 1
   Copyright 2002, 2003, 2004, 2005 Red Hat, Inc.
d28 1
@


1.8
log
@* cygmalloc.h (MSPACES): Define.  This dropped through the cracks after the
last malloc update.
* dcrt0.cc: Fix a comment.
* malloc.cc (internal_malloc): Fix definition so that it can be safely coerced.
@
text
@a31 1
#define MSPACES 1
@


1.7
log
@* sync.h (muto::operator int): New operator.
(locker): Remove unused class.
(new_muto): Delete.
(new_muto1): Ditto.
(new_muto_name): Ditto.
* cygheap.cc (cygheap_setup_for_child): Reflect use of static storage for muto
rather than pointer.
(_csbrk): Ditto.
(_cmalloc): Ditto.
(_cmalloc): Ditto.
(_cfree): Ditto.
* cygheap.h (cwdstuff::cwd_lock): Ditto.
(cwdstuff::get_drive): Ditto.
* cygmalloc.h (__malloc_lock): Ditto.
(__malloc_unlock): Ditto.
* cygtls.cc (sentry::lock): Ditto.
(sentry::sentry): Ditto.
(~sentry): Ditto.
(_cygtls::init): Ditto.
* dcrt0.cc: Ditto.
(cygwin_atexit): Ditto.
(cygwin_exit): Ditto.
* debug.cc (lock_debug::locker): Ditto.
(lock_debug::lock_debug): Ditto.
(lock_debug::unlock): Ditto.
(debug_init): Ditto.
* dtable.cc (dtable::init_lock): Ditto.
* dtable.h (dtable::lock_cs): Ditto.
(dtable::lock): Ditto.
(dtable::unlock): Ditto.
* exceptions.cc (mask_sync): Ditto.
(sighold): Ditto.
(set_process_mask_delta): Ditto.
(set_signal_mask): Ditto.
(events_init): Ditto.
* grp.cc (pwdgrp::pwdgrp): Ditto.
* malloc_wrapper.cc (mallock): Ditto.
(malloc_init): Ditto.
* path.cc (cwdstuff::cwd_lock): Ditto.
(cwdstuff::get_hash): Ditto.
(cwdstuff::get_hash): Ditto.
(cwdstuff::init): Ditto.
(cwdstuff::set): Ditto.
(cwdstuff::get): Ditto.
* pwdgrp.h (pwdgrp::pglock): Ditto.
(pwdgrp::refresh): Ditto.
* sigproc.cc (sync_proc_subproc): Ditto.
(get_proc_lock): Ditto.
(proc_subproc): Ditto.
(_cygtls::remove_wq): Ditto.
(proc_terminate): Ditto.
(sigproc_init): Ditto.
* timer.cc (lock_timer_tracker::protect): Ditto.
(lock_timer_tracker::lock_timer_tracker): Ditto.
(lock_timer_tracker::~lock_timer_tracker): Ditto.
* wininfo.cc (wininfo::_lock;): Ditto.
(wininfo::winthread): Ditto.
(operator HWND): Ditto.
(wininfo::lock): Ditto.
(wininfo::release): Ditto.
* wininfo.h (wininfo::_lock;): Ditto.
@
text
@d3 1
a3 1
   Copyright 2002, 2003, 2004 Red Hat, Inc.
d32 1
@


1.6
log
@* debug.h (console_printf): Define for non-debugging condition.
* cygtls.h (_threadinfo::lock): Remove wait argument.
(_threadinfo::interrupt_setup): Remove retaddr argument.
* exceptions.cc (_threadinfo::interrupt_setup): Ditto.
(_threadinfo::interrupt_now): Accommodate change to interrupt_setup argument.
(setup_handler): Ditto.  Always lock sig stack prior to determining interrupt
method.
* gendef (_sigfe): Correct thinko regarding cmpxchg.
(_sigbe): Ditto.
(_threadinfo::lock): Ditto.
(_threadinfo::pop): Eliminate left-over stack unlock.
* sigproc.cc (proc_subproc): Chnage debugging output to printed warning.
@
text
@d28 3
a30 3
# define __malloc_lock() mallock->acquire ()
# define __malloc_unlock() mallock->release ()
extern muto *mallock;
@


1.5
log
@* include/cygwin/version.h: Bump DLL minor number to 8.
* cygmalloc.h: Make more concessions to attempts to get debugging malloc
working.
* debug.h: Ditto.
* dlmalloc.cc: Ditto.
* dlmalloc.h: Ditto.
* malloc_wrapper.cc: Ditto.
* perthread.h (perthread::create): Use calloc to ensure zeroed memory.
@
text
@d3 1
a3 1
   Copyright 2002 Red Hat, Inc.
@


1.4
log
@* cygmalloc.h: Remove MORECORE_CANNOT_TRIM.  It's not true.  # cygwin.din:
Export mallinfo.  # malloc_wrapper.cc (mallinfo): New function.
@
text
@d11 13
a23 10
extern "C" void dlfree (void *p) __attribute__ ((regparm (1)));
extern "C" void *dlmalloc (unsigned size) __attribute__ ((regparm (1)));
extern "C" void *dlrealloc (void *p, unsigned size) __attribute__ ((regparm (2)));
extern "C" void *dlcalloc (size_t nmemb, size_t size) __attribute__ ((regparm (2)));
extern "C" void *dlmemalign (size_t alignment, size_t bytes) __attribute__ ((regparm (2)));
extern "C" void *dlvalloc (size_t bytes) __attribute__ ((regparm (1)));
extern "C" size_t dlmalloc_usable_size (void *p) __attribute__ ((regparm (1)));
extern "C" int dlmalloc_trim (size_t) __attribute__ ((regparm (1)));
extern "C" int dlmallopt (int p, int v) __attribute__ ((regparm (2)));
extern "C" void dlmalloc_stats ();
d31 3
@


1.3
log
@* cygmalloc.h (MORECORE_CANNOT_TRIM): Define.
@
text
@a23 1
# define MORECORE_CANNOT_TRIM 1
@


1.3.16.1
log
@merge from trunk
@
text
@d24 1
@


1.2
log
@* sigproc.cc (sigCONT): Define.
* sigproc.h (sigCONT): Declare.
(wait_sig): Create sigCONT event here.
* exceptions.cc (sig_handle_tty_stop): Wait for sigCONT event rather than
stopping thread.
(sig_handle): Set sigCONT event as appropriate on SIGCONT rather than calling
ResumeThread.
@
text
@a24 1
# define DEBUG 1
@


1.1
log
@* Makefile.in: Add support for new malloc.o and renamed malloc_wrapper.o.  Use
-fomit-frame-pointer for malloc.o compilation.
* malloc_wrapper.cc: New file.  Rename from malloc.cc.  Add support for more
malloc functions.  Eliminate export_* calls.  Just use straight malloc names.
Remove unused argument from malloc lock functions.
* cygwin.din: Just export straight malloc names.  Add malloc_stats,
malloc_trim, malloc_usable_size, mallopt, memalign, valloc.
* dcrt0.cc (__cygwin_user): Eliminate export_* malloc entries.
* fork.cc (fork_parent): Remove unused argument from malloc_lock argument.
* malloc.cc: New file.  Doug Lea's malloc v2.7.1.
* cygmalloc.h: New file.
* include/cygwin/version.h: Bump API_MINOR.
* sync.h (muto::acquire): Use appropriate number for regparm attribute.
(muto::reset): Ditto.
(muto::release): Ditto.
@
text
@d23 3
a25 1
# define USE_DL_PREFIX
@


1.1.2.1
log
@Merged changes from HEAD
@
text
@@


1.1.2.2
log
@Merged changes from HEAD
@
text
@d23 1
a23 2
# define USE_DL_PREFIX 1
# define MORECORE_CANNOT_TRIM 1
@


