head	1.111;
access;
symbols
	cygwin-1_7_35-release:1.111
	cygwin-1_7_34-release:1.111
	cygwin-1_7_33-release:1.109
	cygwin-1_7_32-release:1.109
	cygwin-1_7_31-release:1.109
	cygwin-1_7_30-release:1.109
	cygwin-1_7_29-release:1.109
	cygwin-1_7_29-release-branchpoint:1.109.0.2
	cygwin-pre-user-db:1.109
	cygwin-1_7_28-release:1.109
	cygwin-1_7_27-release:1.109
	cygwin-1_7_26-release:1.109
	cygwin-1_7_25-release:1.108
	cygwin-1_7_24-release:1.108
	cygwin-1_7_23-release:1.108
	cygwin-1_7_22-release:1.108
	cygwin-1_7_21-release:1.108
	cygwin-1_7_20-release:1.107
	cygwin-1_7_19-release:1.107
	cygwin-64bit-postmerge:1.107
	cygwin-64bit-premerge-branch:1.106.0.2
	cygwin-64bit-premerge:1.106
	cygwin-1_7_18-release:1.106
	post-ptmalloc3:1.104.2.4
	pre-ptmalloc3:1.104.2.4
	cygwin-1_7_17-release:1.104
	cygwin-64bit-branch:1.104.0.2
	cygwin-1_7_16-release:1.104
	cygwin-1_7_15-release:1.104
	cygwin-1_7_14_2-release:1.103
	cygwin-1_7_14-release:1.103
	cygwin-1_7_12-release:1.102
	cygwin-1_7_11-release:1.102
	cygwin-1_7_10-release:1.100
	signal-rewrite:1.98.0.2
	pre-notty:1.97
	cygwin-1_7_9-release:1.90
	cv-post-1_7_9:1.89.0.2
	cygwin-1_7_8-release:1.88
	cygwin-1_7_7-release:1.82
	cygwin-1_7_5-release:1.81
	cygwin-1_7_4-release:1.81
	cygwin-1_7_3-release:1.81
	cygwin-1_7_2-release:1.81
	fifo_doover3:1.80.0.2
	cygwin-1_7_1-release:1.80
	prefifo:1.78
	cv-branch-2:1.76.0.2
	pre-ripout-set_console_state_for_spawn:1.71
	EOL_registry_mounts:1.68
	preoverlapped:1.64
	drop_9x_support_start:1.50
	cr-0x5f1:1.42.0.4
	cv-branch:1.42.0.2
	pre-ptymaster-archetype:1.42
	cr-0x3b58:1.38.0.4
	cr-0x5ef:1.38.0.2
	after-mmap-privanon-noreserve:1.35
	after-mmap-revamp:1.35
	before-mmap-revamp:1.34
	cgf-more-exit-sync:1.33
	post_wait_sig_exit:1.32
	pre_wait_sig_exit:1.32
	reparent-point:1.23
	noreparent:1.23.0.4
	cr-0x5e6:1.23.0.2
	cr-0x9e:1.20.0.6
	cr-0x9d:1.20.0.4
	cgf-deleteme:1.20.0.2
	pre-sigrewrite:1.20
	corinna-01:1.20
	cr-0x9c:1.19.0.6
	cr-0x9b:1.19.0.4
	cr-0x99:1.19
	Z-emcb-cygwin_daemon:1.19.0.2
	w32api-2_2:1.14
	mingw-runtime-2_4:1.14
	pre-cgf-merge:1.19
	cgf-dev-branch:1.14.0.12
	predaemon:1.7
	cygwin_daemon_merge_HEAD:1.7
	pregp02r1:1.6.0.2
	cygnus_cvs_20020108_pre:1.5
	Z-cygwin_daemon_merge-new_HEAD:1.13
	Z-cygwin_daemon_merge_HEAD:1.13
	cygwin_daemon:1.2.0.2;
locks; strict;
comment	@ * @;


1.111
date	2014.12.01.14.02.55;	author corinna;	state Exp;
branches;
next	1.110;

1.110
date	2014.05.08.19.33.07;	author corinna;	state Exp;
branches;
next	1.109;

1.109
date	2013.11.19.22.21.11;	author corinna;	state Exp;
branches;
next	1.108;

1.108
date	2013.06.14.15.41.17;	author corinna;	state Exp;
branches;
next	1.107;

1.107
date	2013.04.23.09.44.34;	author corinna;	state Exp;
branches;
next	1.106;

1.106
date	2013.03.29.17.00.36;	author corinna;	state Exp;
branches;
next	1.105;

1.105
date	2013.01.21.04.38.29;	author cgf;	state Exp;
branches;
next	1.104;

1.104
date	2012.05.03.08.34.44;	author corinna;	state Exp;
branches
	1.104.2.1;
next	1.103;

1.103
date	2012.04.15.17.51.22;	author cgf;	state Exp;
branches;
next	1.102;

1.102
date	2012.02.21.17.03.51;	author corinna;	state Exp;
branches;
next	1.101;

1.101
date	2012.02.17.14.26.18;	author corinna;	state Exp;
branches;
next	1.100;

1.100
date	2011.12.19.12.50.35;	author corinna;	state Exp;
branches;
next	1.99;

1.99
date	2011.10.15.16.31.57;	author corinna;	state Exp;
branches;
next	1.98;

1.98
date	2011.07.30.20.50.23;	author cgf;	state Exp;
branches;
next	1.97;

1.97
date	2011.05.20.07.23.11;	author corinna;	state Exp;
branches;
next	1.96;

1.96
date	2011.05.16.10.27.14;	author corinna;	state Exp;
branches;
next	1.95;

1.95
date	2011.05.10.15.39.02;	author corinna;	state Exp;
branches;
next	1.94;

1.94
date	2011.05.10.10.17.30;	author corinna;	state Exp;
branches;
next	1.93;

1.93
date	2011.04.28.07.27.51;	author corinna;	state Exp;
branches;
next	1.92;

1.92
date	2011.04.04.12.23.36;	author corinna;	state Exp;
branches;
next	1.91;

1.91
date	2011.04.02.11.30.27;	author corinna;	state Exp;
branches;
next	1.90;

1.90
date	2011.03.20.15.34.29;	author corinna;	state Exp;
branches;
next	1.89;

1.89
date	2011.03.08.14.26.15;	author corinna;	state Exp;
branches
	1.89.2.1;
next	1.88;

1.88
date	2011.03.01.00.19.23;	author cgf;	state Exp;
branches;
next	1.87;

1.87
date	2011.01.30.21.52.12;	author corinna;	state Exp;
branches;
next	1.86;

1.86
date	2011.01.11.14.50.45;	author corinna;	state Exp;
branches;
next	1.85;

1.85
date	2010.10.09.10.54.13;	author corinna;	state Exp;
branches;
next	1.84;

1.84
date	2010.09.25.20.06.21;	author corinna;	state Exp;
branches;
next	1.83;

1.83
date	2010.09.19.20.18.36;	author cgf;	state Exp;
branches;
next	1.82;

1.82
date	2010.08.30.10.39.43;	author corinna;	state Exp;
branches;
next	1.81;

1.81
date	2010.01.22.22.31.31;	author corinna;	state Exp;
branches;
next	1.80;

1.80
date	2009.11.03.09.31.45;	author corinna;	state Exp;
branches;
next	1.79;

1.79
date	2009.10.24.08.26.01;	author corinna;	state Exp;
branches;
next	1.78;

1.78
date	2009.07.20.15.44.54;	author corinna;	state Exp;
branches;
next	1.77;

1.77
date	2009.06.26.15.12.06;	author corinna;	state Exp;
branches;
next	1.76;

1.76
date	2009.05.09.15.56.37;	author corinna;	state Exp;
branches;
next	1.75;

1.75
date	2009.01.29.20.32.08;	author corinna;	state Exp;
branches;
next	1.74;

1.74
date	2009.01.20.11.16.59;	author corinna;	state Exp;
branches;
next	1.73;

1.73
date	2008.11.12.11.04.27;	author corinna;	state Exp;
branches;
next	1.72;

1.72
date	2008.07.08.20.12.46;	author corinna;	state Exp;
branches;
next	1.71;

1.71
date	2008.05.15.16.34.01;	author corinna;	state Exp;
branches;
next	1.70;

1.70
date	2008.04.28.08.47.06;	author corinna;	state Exp;
branches;
next	1.69;

1.69
date	2008.04.27.16.12.00;	author corinna;	state Exp;
branches;
next	1.68;

1.68
date	2008.04.01.13.22.47;	author corinna;	state Exp;
branches;
next	1.67;

1.67
date	2008.02.13.09.42.22;	author corinna;	state Exp;
branches;
next	1.66;

1.66
date	2007.07.19.09.06.54;	author corinna;	state Exp;
branches;
next	1.65;

1.65
date	2007.07.19.08.33.22;	author corinna;	state Exp;
branches;
next	1.64;

1.64
date	2007.06.21.15.57.54;	author corinna;	state Exp;
branches;
next	1.63;

1.63
date	2007.03.29.16.37.36;	author corinna;	state Exp;
branches;
next	1.62;

1.62
date	2007.02.23.15.15.50;	author corinna;	state Exp;
branches;
next	1.61;

1.61
date	2007.02.23.14.47.45;	author corinna;	state Exp;
branches;
next	1.60;

1.60
date	2007.02.23.12.01.52;	author corinna;	state Exp;
branches;
next	1.59;

1.59
date	2007.02.23.10.51.59;	author corinna;	state Exp;
branches;
next	1.58;

1.58
date	2007.02.23.09.49.49;	author corinna;	state Exp;
branches;
next	1.57;

1.57
date	2007.02.22.18.01.13;	author corinna;	state Exp;
branches;
next	1.56;

1.56
date	2007.02.22.17.35.14;	author corinna;	state Exp;
branches;
next	1.55;

1.55
date	2007.02.22.17.09.46;	author corinna;	state Exp;
branches;
next	1.54;

1.54
date	2007.02.22.16.22.38;	author corinna;	state Exp;
branches;
next	1.53;

1.53
date	2007.02.22.16.04.19;	author corinna;	state Exp;
branches;
next	1.52;

1.52
date	2007.02.22.11.17.01;	author corinna;	state Exp;
branches;
next	1.51;

1.51
date	2007.02.22.10.54.47;	author corinna;	state Exp;
branches;
next	1.50;

1.50
date	2007.02.01.15.54.40;	author corinna;	state Exp;
branches;
next	1.49;

1.49
date	2007.01.17.19.26.58;	author corinna;	state Exp;
branches;
next	1.48;

1.48
date	2006.12.10.16.43.30;	author corinna;	state Exp;
branches;
next	1.47;

1.47
date	2006.12.05.10.59.21;	author corinna;	state Exp;
branches;
next	1.46;

1.46
date	2006.11.27.12.59.59;	author corinna;	state Exp;
branches;
next	1.45;

1.45
date	2006.11.08.11.38.05;	author corinna;	state Exp;
branches;
next	1.44;

1.44
date	2006.10.31.18.41.16;	author corinna;	state Exp;
branches;
next	1.43;

1.43
date	2006.10.23.15.13.55;	author corinna;	state Exp;
branches;
next	1.42;

1.42
date	2006.03.16.02.57.37;	author cgf;	state Exp;
branches
	1.42.4.1;
next	1.41;

1.41
date	2006.03.13.18.29.48;	author cgf;	state Exp;
branches;
next	1.40;

1.40
date	2006.01.29.12.23.44;	author corinna;	state Exp;
branches;
next	1.39;

1.39
date	2006.01.27.21.50.42;	author corinna;	state Exp;
branches;
next	1.38;

1.38
date	2006.01.13.10.18.31;	author corinna;	state Exp;
branches;
next	1.37;

1.37
date	2006.01.12.15.53.51;	author corinna;	state Exp;
branches;
next	1.36;

1.36
date	2006.01.10.18.11.32;	author corinna;	state Exp;
branches;
next	1.35;

1.35
date	2005.11.28.22.32.29;	author corinna;	state Exp;
branches;
next	1.34;

1.34
date	2005.10.18.18.51.33;	author corinna;	state Exp;
branches;
next	1.33;

1.33
date	2005.09.28.19.33.18;	author corinna;	state Exp;
branches;
next	1.32;

1.32
date	2005.06.30.02.52.14;	author cgf;	state Exp;
branches;
next	1.31;

1.31
date	2005.06.18.01.36.18;	author cgf;	state Exp;
branches;
next	1.30;

1.30
date	2005.04.11.21.54.54;	author corinna;	state Exp;
branches;
next	1.29;

1.29
date	2005.04.11.20.44.45;	author corinna;	state Exp;
branches;
next	1.28;

1.28
date	2005.02.28.13.11.50;	author corinna;	state Exp;
branches;
next	1.27;

1.27
date	2005.02.20.13.28.23;	author corinna;	state Exp;
branches;
next	1.26;

1.26
date	2005.02.20.04.25.33;	author cgf;	state Exp;
branches;
next	1.25;

1.25
date	2005.01.25.22.45.09;	author corinna;	state Exp;
branches;
next	1.24;

1.24
date	2004.12.28.01.27.26;	author cgf;	state Exp;
branches;
next	1.23;

1.23
date	2004.03.14.18.01.45;	author corinna;	state Exp;
branches;
next	1.22;

1.22
date	2004.02.09.04.04.24;	author cgf;	state Exp;
branches;
next	1.21;

1.21
date	2004.01.19.23.03.43;	author cgf;	state Exp;
branches;
next	1.20;

1.20
date	2003.09.27.03.44.31;	author cgf;	state Exp;
branches
	1.20.6.1;
next	1.19;

1.19
date	2003.08.28.02.04.16;	author cgf;	state Exp;
branches;
next	1.18;

1.18
date	2003.05.20.15.22.09;	author corinna;	state Exp;
branches;
next	1.17;

1.17
date	2003.04.20.01.36.15;	author cgf;	state Exp;
branches;
next	1.16;

1.16
date	2003.02.20.15.58.55;	author corinna;	state Exp;
branches;
next	1.15;

1.15
date	2003.02.20.10.14.52;	author corinna;	state Exp;
branches;
next	1.14;

1.14
date	2002.10.15.17.04.20;	author cgf;	state Exp;
branches
	1.14.12.1;
next	1.13;

1.13
date	2002.07.24.11.01.37;	author corinna;	state Exp;
branches;
next	1.12;

1.12
date	2002.07.23.14.47.17;	author corinna;	state Exp;
branches;
next	1.11;

1.11
date	2002.06.13.17.28.11;	author cgf;	state Exp;
branches;
next	1.10;

1.10
date	2002.06.10.17.08.09;	author cgf;	state Exp;
branches;
next	1.9;

1.9
date	2002.05.17.08.32.29;	author corinna;	state Exp;
branches;
next	1.8;

1.8
date	2002.05.12.01.37.48;	author cgf;	state Exp;
branches;
next	1.7;

1.7
date	2002.02.25.17.47.47;	author corinna;	state Exp;
branches;
next	1.6;

1.6
date	2002.01.29.02.02.01;	author cgf;	state Exp;
branches;
next	1.5;

1.5
date	2001.11.05.06.09.09;	author cgf;	state Exp;
branches;
next	1.4;

1.4
date	2001.10.16.14.53.26;	author corinna;	state Exp;
branches;
next	1.3;

1.3
date	2001.10.15.09.41.18;	author corinna;	state Exp;
branches;
next	1.2;

1.2
date	2001.09.20.08.02.01;	author corinna;	state Exp;
branches
	1.2.2.1;
next	1.1;

1.1
date	2001.09.12.17.46.37;	author corinna;	state Exp;
branches;
next	;

1.104.2.1
date	2012.11.12.17.26.24;	author corinna;	state Exp;
branches;
next	1.104.2.2;

1.104.2.2
date	2013.01.21.13.52.11;	author corinna;	state Exp;
branches;
next	1.104.2.3;

1.104.2.3
date	2013.02.12.11.24.35;	author corinna;	state Exp;
branches;
next	1.104.2.4;

1.104.2.4
date	2013.02.25.12.44.29;	author corinna;	state Exp;
branches;
next	1.104.2.5;

1.104.2.5
date	2013.03.01.16.32.33;	author corinna;	state Exp;
branches;
next	1.104.2.6;

1.104.2.6
date	2013.03.14.16.11.42;	author corinna;	state Exp;
branches;
next	1.104.2.7;

1.104.2.7
date	2013.03.27.15.58.29;	author corinna;	state Exp;
branches;
next	1.104.2.8;

1.104.2.8
date	2013.03.29.17.00.58;	author corinna;	state Exp;
branches;
next	;

1.89.2.1
date	2011.03.20.15.37.01;	author corinna;	state Exp;
branches;
next	;

1.42.4.1
date	2006.10.23.15.14.04;	author corinna;	state Exp;
branches;
next	1.42.4.2;

1.42.4.2
date	2006.11.08.10.00.06;	author corinna;	state Exp;
branches;
next	1.42.4.3;

1.42.4.3
date	2006.12.05.11.34.01;	author corinna;	state Exp;
branches;
next	1.42.4.4;

1.42.4.4
date	2008.02.13.09.42.24;	author corinna;	state Exp;
branches;
next	;

1.20.6.1
date	2004.01.20.19.57.29;	author cgf;	state Exp;
branches;
next	;

1.14.12.1
date	2003.05.10.17.20.54;	author cgf;	state Exp;
branches;
next	1.14.12.2;

1.14.12.2
date	2003.05.26.19.39.07;	author cgf;	state Exp;
branches;
next	1.14.12.3;

1.14.12.3
date	2003.09.02.02.31.09;	author cgf;	state Exp;
branches;
next	;

1.2.2.1
date	2002.01.04.03.56.11;	author rbcollins;	state Exp;
branches;
next	1.2.2.2;

1.2.2.2
date	2002.02.28.12.53.29;	author rbcollins;	state Exp;
branches;
next	1.2.2.3;

1.2.2.3
date	2002.06.13.14.34.14;	author rbcollins;	state Exp;
branches;
next	1.2.2.4;

1.2.2.4
date	2002.06.15.10.26.32;	author rbcollins;	state Exp;
branches;
next	1.2.2.5;

1.2.2.5
date	2002.07.26.19.03.36;	author scottc;	state Exp;
branches;
next	;


desc
@@


1.111
log
@	* wincap.cc (wincap_minimal): Remove.
	(wincaps): Drop has_physical_mem_access.
	(wincap_10): New global wincaps to support Windows 10.
	(wincapc::init): Use wincap_10 for version >= 6.4 and as default.
	* wincap.h (wincaps::has_physical_mem_access): remove.
@
text
@/* wincap.h: Header for OS capability class.

   Copyright 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011,
   2012, 2013, 2014 Red Hat, Inc.

This file is part of Cygwin.

This software is a copyrighted work licensed under the terms of the
Cygwin license.  Please consult the file "CYGWIN_LICENSE" for
details. */

#ifndef _WINCAP_H
#define _WINCAP_H

struct wincaps
{
  DWORD    max_sys_priv;
  unsigned is_server                                    : 1;
  unsigned has_mandatory_integrity_control		: 1;
  unsigned needs_count_in_si_lpres2			: 1;
  unsigned has_recycle_dot_bin				: 1;
  unsigned has_gaa_on_link_prefix			: 1;
  unsigned has_gaa_largeaddress_bug			: 1;
  unsigned supports_all_posix_ai_flags			: 1;
  unsigned has_restricted_stack_args			: 1;
  unsigned has_transactions				: 1;
  unsigned has_sendmsg					: 1;
  unsigned has_broken_udf				: 1;
  unsigned has_broken_alloc_console			: 1;
  unsigned has_always_all_codepages			: 1;
  unsigned has_localenames				: 1;
  unsigned has_fast_cwd					: 1;
  unsigned has_restricted_raw_disk_access		: 1;
  unsigned use_dont_resolve_hack			: 1;
  unsigned has_console_logon_sid			: 1;
  unsigned wow64_has_secondary_stack			: 1;
  unsigned has_program_compatibility_assistant		: 1;
  unsigned has_pipe_reject_remote_clients		: 1;
  unsigned terminate_thread_frees_stack			: 1;
  unsigned has_precise_system_time			: 1;
  unsigned has_microsoft_accounts			: 1;
};

class wincapc
{
  SYSTEM_INFO		system_info;
  RTL_OSVERSIONINFOEXW	version;
  char			osnam[40];
  ULONG_PTR		wow64;
  void			*caps;

public:
  void init ();

  const DWORD cpu_count () const { return system_info.dwNumberOfProcessors; }
  /* The casts to size_t make sure that the returned value has the size of
     a pointer on any system.  This is important when using them for bit
     mask operations, like in roundup2. */
  const size_t page_size () const { return (size_t) system_info.dwPageSize; }
  const size_t allocation_granularity () const
		     { return (size_t) system_info.dwAllocationGranularity; }
  const char *osname () const { return osnam; }
  const bool is_wow64 () const { return !!wow64; }

#define IMPLEMENT(cap) cap() const { return ((wincaps *) this->caps)->cap; }

  DWORD IMPLEMENT (max_sys_priv)
  bool  IMPLEMENT (is_server)
  bool	IMPLEMENT (has_mandatory_integrity_control)
  bool	IMPLEMENT (needs_count_in_si_lpres2)
  bool	IMPLEMENT (has_recycle_dot_bin)
  bool	IMPLEMENT (has_gaa_on_link_prefix)
  bool	IMPLEMENT (has_gaa_largeaddress_bug)
  bool	IMPLEMENT (supports_all_posix_ai_flags)
  bool	IMPLEMENT (has_restricted_stack_args)
  bool	IMPLEMENT (has_transactions)
  bool	IMPLEMENT (has_sendmsg)
  bool	IMPLEMENT (has_broken_udf)
  bool	IMPLEMENT (has_broken_alloc_console)
  bool	IMPLEMENT (has_always_all_codepages)
  bool	IMPLEMENT (has_localenames)
  bool	IMPLEMENT (has_fast_cwd)
  bool	IMPLEMENT (has_restricted_raw_disk_access)
  bool	IMPLEMENT (use_dont_resolve_hack)
  bool	IMPLEMENT (has_console_logon_sid)
  bool	IMPLEMENT (wow64_has_secondary_stack)
  bool	IMPLEMENT (has_program_compatibility_assistant)
  bool	IMPLEMENT (has_pipe_reject_remote_clients)
  bool	IMPLEMENT (terminate_thread_frees_stack)
  bool	IMPLEMENT (has_precise_system_time)
  bool	IMPLEMENT (has_microsoft_accounts)

#undef IMPLEMENT
};

extern wincapc wincap;

#endif /* _WINCAP_H */
@


1.110
log
@	* uinfo.cc (cygheap_user::init): Fix formatting in debug output.
	(struct cyg_USER_INFO_24): Define temporarily.  Explain why.
	(pwdgrp::fetch_account_from_windows): Handle sane primary group
	setting for Microsoft Accounts.  Explain why.
	* wincap.h (wincaps::has_microsoft_accounts): New element.
	* wincap.cc: Implement above element throughout.
@
text
@a18 1
  unsigned has_physical_mem_access                      : 1;
a68 1
  bool  IMPLEMENT (has_physical_mem_access)
@


1.109
log
@	* ntdll.h (RtlGetVersion): Declare.
	* wincap.cc (wincapc::init): Rather than GetVersionEx, call
	RtlGetVersion which is not crippled by missing Windows 8.1 manifest.
	* wincap.h (wincapc): Change type of version to RTL_OSVERSIONINFOEXW.
	Align formatting of all class members.
@
text
@d4 1
a4 1
   2012, 2013 Red Hat, Inc.
d42 1
d93 1
@


1.108
log
@	* autoload.cc (GetSystemTimePreciseAsFileTime): Define.
	* times.cc (GetSystemTimePreciseAsFileTime): Temporarily declare here
	to workaround missing definition in 32 bit w32api headers.
	(get_system_time): New always inline function to call either
	GetSystemTimePreciseAsFileTime or GetSystemTimeAsFileTime on a per OS
	basis.  Call throughout instead of GetSystemTimeAsFileTime.
	* wincap.h (wincaps::has_precise_system_time): New element.
	* wincap.cc: Implement above element throughout.
@
text
@d46 5
a50 5
  SYSTEM_INFO      system_info;
  OSVERSIONINFOEX  version;
  char             osnam[40];
  ULONG_PTR        wow64;
  void             *caps;
@


1.107
log
@	* Merge in cygwin-64bit-branch.
@
text
@d41 1
d91 1
@


1.106
log
@	* cygthread.cc (cygthread::terminate_thread): Only try to free
	thread stack on systems not freeing it by themselves.
	* wincap.h (wincaps::terminate_thread_frees_stack): New element.
	* wincap.cc: Implement above element throughout.
@
text
@a19 4
  unsigned has_create_global_privilege			: 1;
  unsigned has_ioctl_storage_get_media_types_ex		: 1;
  unsigned has_disk_ex_ioctls				: 1;
  unsigned has_buggy_restart_scan			: 1;
a20 1
  unsigned needs_logon_sid_in_sid_list			: 1;
a22 1
  unsigned has_gaa_prefixes				: 1;
a27 1
  unsigned has_recvmsg					: 1;
a29 1
  unsigned has_console_handle_problem			: 1;
a35 1
  unsigned has_stack_size_param_is_a_reservation	: 1;
d39 1
a39 1
  unsigned kernel_is_always_casesensitive		: 1;
d48 1
a48 1
  ULONG            wow64;
d55 6
a60 3
  const DWORD page_size () const { return system_info.dwPageSize; }
  const DWORD allocation_granularity () const
			      { return system_info.dwAllocationGranularity; }
d62 1
a62 1
  const bool is_wow64 () const { return wow64; }
a68 4
  bool  IMPLEMENT (has_create_global_privilege)
  bool	IMPLEMENT (has_ioctl_storage_get_media_types_ex)
  bool	IMPLEMENT (has_disk_ex_ioctls)
  bool	IMPLEMENT (has_buggy_restart_scan)
a69 1
  bool	IMPLEMENT (needs_logon_sid_in_sid_list)
a71 1
  bool	IMPLEMENT (has_gaa_prefixes)
a76 1
  bool	IMPLEMENT (has_recvmsg)
a78 1
  bool	IMPLEMENT (has_console_handle_problem)
a84 1
  bool	IMPLEMENT (has_stack_size_param_is_a_reservation)
d88 1
a88 1
  bool	IMPLEMENT (kernel_is_always_casesensitive)
@


1.105
log
@Throughout, update copyrights to reflect dates which correspond to main-branch
checkins.  Regularize copyright format.
@
text
@d4 1
a4 1
   2012 Red Hat, Inc.
d49 1
d104 1
@


1.104
log
@	* net.cc (get_adapters_addresses): Only create thread on affected
	systems.  Change comment acordingly.
	* wincap.h (wincaps::has_gaa_largeaddress_bug): New element.
	* wincap.cc: Implement above element throughout.
	(wincap_8): New globale wincaps to support Windows 8.
	(wincapc::init): Take Windows 8 into account.  Set new
	has_gaa_largeaddress_bug member to false on 32 bit systems.
@
text
@d3 2
a4 2
   Copyright 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008,
   2009, 2010, 2011, 2012 Red Hat, Inc.
@


1.104.2.1
log
@	* dlfcn.cc (dlopen): Change cast to accommodate type change in ntdll.h
	* fhandler_process.cc (thread_info::thread_info): Change type of local
	variable size to ULONG to match NtQuerySystemInformation call.
	Add cast to avoid compiler warnings.
	(get_process_state): Add cast to avoid compiler warnings.  Accommodate
	name change of NextEntryOffset member of PSYSTEM_PROCESS_INFORMATION
	structure.
	* mmap.cc: Add casts to avoid compiler warnings.
	(mlock): Change type of local variables min and max to match
	GetProcessWorkingSetSize call.
	* nlsfuncs.cc (__collate_range_cmp): Add casts to avoid compiler
	warnings.
	* ntdll.h: Drop accommodations for Mingw32.  Fix a couple of formatting
	glitches.  Add a comment to all structures explicitely tested on 64 bit.
	(SYSTEM_INFORMATION_CLASS): Change SystemProcessesAndThreadsInformation
	to SystemProcessInformation and SystemProcessorTimes to
	SystemProcessorPerformanceInformation to match MSDN.
	(SYSTEM_BASIC_INFORMATION): Fix member types to match 64 bit.
	(SYSTEM_PROCESSOR_PERFORMANCE_INFORMATION): Rename from
	SYSTEM_PROCESSOR_TIMES to use official name from MSDN.  Accommodate
	throughout.  Drop unneeded align attribute.
	(VM_COUNTERS): Fix member types to match 64 bit.
	(SYSTEM_PROCESS_INFORMATION): Rename from SYSTEM_PROCESSES to use
	official name from MSDN.  Fix member types to match 64 bit.  Change
	member names to match MSDN and Mingw64.  Accommodate throughout.
	(IO_STATUS_BLOCK): Change to use MSDN definition.
	(SYSTEM_TIMEOFDAY_INFORMATION): Rename from
	SYSTEM_TIME_OF_DAY_INFORMATION to use official name from MSDN.
	Accommodate throughout.  Add Reserved1 area per MSDN.
	(LDR_DATA_TABLE_ENTRY): Add comment for future reference.  Change
	type of LoadCount to USHORT.
	(PEB_LDR_DATA): Change type of Initialized to BOOLEAN.  Add comment for
	future reference.
	(PEB): Fix member types to match 64 bit.
	(GDI_TEB_BATCH): New type.
	(TEB): Fix member types to match 64 bit.
	(PROCESS_BASIC_INFORMATION): Ditto.
	(MEMORY_WORKING_SET_LIST): Ditto.
	(SharedUserData): Change comment to note the fact that the address
	is valid on 32 and 64 bit.
	* pinfo.cc (winpids::enum_processes): Add cast to avoid compiler
	warnings.
	* select.cc (pipe_data_available): Add braces in initalization of an
	IO_STATUS_BLOCK to match new definition.
	* wincap.h (class wincapc): Change type of wow64 to ULONG_PTR to match
	MSDN description.
	(wincapc::is_wow64): Convert return value explicitely to bool.
	* wow64.cc (wow64_test_for_64bit_parent): Change type of wow64 to
	ULONG_PTR to match MSDN description.  Add a cast to avoid compiler
	warning.
	* regex/engine.c: Avoid compiler warnings about unused and potentially
	uninitialized variables.
	* regex/regcomp.c: Ditto.  Drop unnecessary definition of LCID.
@
text
@d56 1
a56 1
  ULONG_PTR        wow64;
d67 1
a67 1
  const bool is_wow64 () const { return !!wow64; }
@


1.104.2.2
log
@Pull in changes from HEAD
@
text
@d3 2
a4 2
   Copyright 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011,
   2012 Red Hat, Inc.
@


1.104.2.3
log
@	* fhandler_floppy.cc (fhandler_dev_floppy::open): Cast second parameter
	in roundup2 to same size as first parameter to make sure mask size is
	correct.
	* fhandler_process.cc (format_process_maps): Ditto.
	* fhandler_raw.cc (fhandler_dev_raw::dup): Ditto.
	* hookapi.cc (find_first_notloaded_dll): Add cast.
	* spawn.cc (av::fixup): Ditto.
	* wincap.h: Add comment to explain the folowing change.
	(wincapc::page_size): Return size_t.
	(wincapc::allocation_granularity): Ditto.

	* mmap.cc: Throughout, accommodate the fact that AT_ROUND_TO_PAGE isn't
	support on 64 bit at all.
	(class mmap_allocator): New class to allocate mmap slots on x86_64.
	(mmap_alloc): Define global instant of mmap_allocator.
	(mmap64): Call mmap_alloc.alloc on x86_64.
@
text
@d4 1
a4 1
   2012, 2013 Red Hat, Inc.
d63 3
a65 6
  /* The casts to size_t make sure that the returned value has the size of
     a pointer on any system.  This is important when using them for bit
     mask operations, like in roundup2. */
  const size_t page_size () const { return (size_t) system_info.dwPageSize; }
  const size_t allocation_granularity () const
		     { return (size_t) system_info.dwAllocationGranularity; }
@


1.104.2.4
log
@	* exception.h (class exception): Add handler_installed member.
	Change parameters to handle method to match high-level exception
	handler calls.
	(exception::exception): On x86_64, install exception handler only
	once.  Explain what we do.
	* exceptions.cc (_AFMT): Change to only 11 digits on x86_64.
	(cygwin_exception::dump_exception): Print Rip with only 11 digits.
	Print 64 bit registers with 0-padding.
	(class stack_info): Add members c and hist on x86_64.
	(stack_info::init): Take PCONTEXT rather than bool as third parameter.
	Tweak code accordingly.  Initialize c and hist on x86_64.
	(stack_info::walk): Add implementation for x86_64.  Drop unneeded
	#ifndef in 32 bit code.
	(cygwin_exception::dumpstack): Call thestack.init with context as
	parameter.  Change header output for x86_64.
	(cygwin_stackdump): Prefer RtlCaptureContext over GetThreadContext.
	(CYG_EXC_CONTINUE_EXECUTION): Define generic definition matching all
	platforms.
	(CYG_EXC_CONTINUE_SEARCH): Ditto.
	(exception::handler_installed): Define here.
	(exception::handle): Define according to declaration in exception.h.
	Create 32 bit parameters as local variable on 64 bit.  Change all
	return statements to use generic definitions.  Simplify setting framep
	on x86_64.  Disable setting frame-based exception handler on x86_64.
	Fix formatting of klog output for x86_64.
	(signal_exit): Create context for cygwin_exception creation.
	(sigpacket::process): Prefer RtlCaptureContext over GetThreadContext.
	* wincap.h (wincaps::has_rtl_capture_context): New element.
	* wincap.cc: Implement above element throughout.
@
text
@a48 1
  unsigned has_rtl_capture_context			: 1;
a105 1
  bool	IMPLEMENT (has_rtl_capture_context)
@


1.104.2.5
log
@	* autoload.cc (AttachConsole): Remove.
	(GetModuleHandleExW): Remove.
	(GetSystemWow64DirectoryW): Remove.
	(GetVolumePathNamesForVolumeNameW): Remove.
	* exceptions.cc (cygwin_stackdump): Always call RtlCaptureContext.
	(exception::handle): Drop accidentally left in debugging statement.
	Always call RtlCaptureContext.
	(sigpacket::process): Always call RtlCaptureContext for current thread.
	* fhandler_disk_file.cc (fstatvfs): Drop code using
	FileFsSizeInformation.
	(struct __DIR_cache): Remove comment.
	(fhandler_disk_file::rewinddir): Drop W2K-only code.
	* fhandler_floppy.cc (fhandler_dev_floppy::get_drive_info): Don't
	check for old OS.  Extend a comment.
	* fhandler_mem.cc (fhandler_dev_mem::open): Drop NT4 and W2K from
	debug output.
	* fhandler_proc.cc (format_proc_partitions): Drop Pre-XP considerations.
	* fhandler_procnet.cc (fhandler_procnet::exists): Ditto.
	(fhandler_procnet::readdir): Ditto.
	(format_procnet_ifinet6): Ditto.
	* fhandler_socket.cc (fhandler_socket::recvmsg): Ditto.
	* fhandler_tape.cc (mtinfo_drive::get_status): Ditto.
	* init.cc (dll_entry): Drop W2K-only code.
	* net.cc (get_ifs): Rename from get_xp_ifs.
	(get_2k_ifs): Remove.
	(getifaddrs): Always call get_ifs.
	(get_ifconf): Ditto.
	(if_nametoindex): Drop Pre-XP considerations.
	(load_ipv6_funcs): Ditto.  Fix preceeding comment.
	* sec_auth.cc (lsaauth): Drop code handling fake_login_sid.
	* sec_helper.cc (fake_logon_sid): Remove.
	(set_cygwin_privileges): Fix uncommented statement to drop pre-XP
	considerations.
	* security.h (fake_logon_sid): Drop declaration.
	* shared.cc (shared_info::init_obcaseinsensitive): Drop W2K-only code.
	* wincap.cc: Throughout, remove setting all deprecated wincapc members.
	(wincap_minimal): Set to wincap_xpsp2.
	(wincap_2000): Remove.
	(wincap_2000sp4): Remove.
	(wincap_xp): Remove.
	(wincap_xpsp1): Remove.
	(wincapc::init): Drop OS 5.0 and pre-SP2 XP.
	* wincap.h (struct wincaps): Remove the following members:
	has_create_global_privilege, has_ioctl_storage_get_media_types_ex,
	has_disk_ex_ioctls, has_buggy_restart_scan, needs_logon_sid_in_sid_list,
	has_gaa_prefixes, has_recvmsg, has_stack_size_param_is_a_reservation,
	kernel_is_always_casesensitive, has_rtl_capture_context.
@
text
@d20 4
d25 1
d28 1
d34 1
d44 1
d48 2
d78 4
d83 1
d86 1
d92 1
d102 1
d106 2
@


1.104.2.6
log
@	* fhandler_tty.cc (fhandler_pty_master::setup): Add
	PIPE_REJECT_REMOTE_CLIENTS to pipe mode on systems supporting it.  Add
	FILE_FLAG_FIRST_PIPE_INSTANCE to pipe open mode.
	* pipe.cc (fhandler_pipe::create): Ditto.  Fix subsequent comment
	accordingly.
	* wincap.h (wincaps::has_pipe_reject_remote_clients): New element.
	* wincap.cc: Implement above element throughout.
	* winlean.h (PIPE_REJECT_REMOTE_CLIENTS): Temporarily define until
	Mingw64 headers define it.
@
text
@a39 1
  unsigned has_pipe_reject_remote_clients		: 1;
a87 1
  bool	IMPLEMENT (has_pipe_reject_remote_clients)
@


1.104.2.7
log
@	* fhandler_console.cc
	(fhandler_console::create_invisible_console_workaround): Fix comment.
	* wincap.cc: Throughout, remove unused has_console_handle_problem
	wincapc members.
	* wincap.h (struct wincaps): Remove has_console_handle_problem.
@
text
@d30 1
d79 1
@


1.104.2.8
log
@Pull in changes from HEAD
@
text
@a39 1
  unsigned terminate_thread_frees_stack			: 1;
a87 1
  bool	IMPLEMENT (terminate_thread_frees_stack)
@


1.103
log
@wincap.h: Rename assitant to assistant throughout.  wincap.cc: Ditto.
* devices.in (exists_console): Use fhandler_console::exists () rather than raw
test.
* devices.cc: Regenerate.
* fhandler.h (fhandler_console::exists): Define new function.
* fhandler_console.cc (fhandler_console::need_invisible): Use
fhandler_console::exists () rather than raw test.
* spawn.cc: Rename assitant to assistant throughout.
(child_info_spawn::worker): Simplify test for when to start a non-Cygwin
process in its own process group.  Just do it whenever we start a non-Cygwin
process.
@
text
@d30 1
d84 1
@


1.102
log
@	* shared.cc (shared_info::init_obcaseinsensitive): Check actual state
	of case sensitivity on post-Windows 2000 systems.
	* wincap.h (wincaps::kernel_is_always_casesensitive): New element.
	* wincap.cc: Implement above element throughout.
@
text
@d46 1
a46 1
  unsigned has_program_compatibility_assitant		: 1;
d99 1
a99 1
  bool	IMPLEMENT (has_program_compatibility_assitant)
@


1.101
log
@	* ntdll.h (struct _PEB): Add EnvironmentUpdateCount member.
	* spawn.cc (child_info_spawn::worker): Speed up job recognition.  Expand
	comment to explain every little detail and so we never forget.
	* wincap.h (wincaps::has_program_compatibility_assitant): New element.
	* wincap.cc: Implement above element throughout.
@
text
@d47 1
d100 1
@


1.100
log
@	* dcrt0.cc (dll_crt0_0): Check for wincap.wow64_has_secondary_stack
	rather than for wincap.is_wow64.  Accommodate name change from
	wow64_has_64bit_parent to wow64_needs_stack_adjustment.  Align comment.
	(_dll_crt0): Ditto.
	* wincap.h (wincaps::wow64_has_secondary_stack): New element.
	* wincap.cc: Implement above element throughout.
	(wincapc::init): Set wow64_has_secondary_stack to false on non-64 bit
	systems.
	* wow64.cc (wow64_needs_stack_adjustment): Rename (hopefully the last
	time) from wow64_has_64bit_parent.
	(wow64_eval_expected_main_stack): Fix comment to reflect real life.
	(wow64_test_for_64bit_parent): Fix comment.
	* wow64.h (wow64_needs_stack_adjustment): Accommodate new name.
@
text
@d4 1
a4 1
   2009, 2010, 2011 Red Hat, Inc.
d46 1
d98 1
@


1.99
log
@	* sec_auth.cc (get_token_group_sidlist): Add CONSOLE LOGON SID on
	systems supporting it.  Never add SERVICE SID but keep code in for
	future reference.  Explain why.
	(get_priv_list): Add cygpsid pointer parameter.  Point it to the
	mandatory integrity SID which matches account and privileges.
	(create_token): Fetch mandatory integrity SID from call to
	get_priv_list.
	(lsaauth): Call get_priv_list with additional NULL pointer.  Change
	comment accordingly.
	* sec_helper.cc (well_known_console_logon_sid): New static SID.
	(cygpriv): Change to structure containing extra flag to store info
	about required integrity level.
	(privilege_luid): Accommodate changes to cygpriv.  Return integrity
	level in new high_integrity parameter.
	(privilege_name): Accommodate changes to cygpriv.
	(set_privilege): Drop trailing \n from debug output.
	(set_cygwin_privileges): Don't set SE_CREATE_GLOBAL_PRIVILEGE anymore
	since it's just not needed, but keep code in for future reference.
	Change comment accordingly.
	* security.h (well_known_console_logon_sid): Declare.
	(privilege_luid): Align declaration to above change.
	* wincap.h (wincaps::has_console_logon_sid): New element.
	* wincap.cc: Implement above element throughout.
@
text
@d45 1
d96 1
@


1.98
log
@* cygthread.cc (cygthread::async_create): Define new function.
* cygthread.h (cygthread::create): Use correct regparm.
(cygthread::standalone): Delete from class and from all constructors.
(cygthread::cygthread): Use three only arguments for detached threads, and
start the thread via QueueUserAPC/async_create.
* dcrt0.cc (dll_crt0_0): Remove handling for wincap.has_buggy_thread_startup.
(dll_crt0_1): Ditto.
* wincap.cc: Ditto throughout.
* wincap.h: Ditto.
@
text
@d44 1
d94 1
@


1.97
log
@	* child_info.h (CURR_CHILD_INFO_MAGIC): Update.
	(class child_info_fork): Remove stacksize, add stackaddr and guardsize
	members.
	* dcrt0.cc (child_info_fork::alloc_stack_hard_way): Partial rewrite
	to regenerate the stack exactly as in the parent.
	(child_info_fork::alloc_stack): Set stackaddr to 0, rather than
	stacksize.
	(dll_crt0_1): Check for stackaddr before changing the stack addresses
	in the TEB.
	* fork.cc (frok::child): Check for stackaddr here.
	(frok::parent): Set ch.stackaddr and ch.guardsize if not called from
	the main thread.
	* init.cc (dll_entry): Replace pointer to NT_TIB with pointer to TEB.
	Fix incorrectly changed address test before removing _my_tls.
	Set StackLimit to NULL on Windows 2000.  Explain why.
	* miscfuncs.cc (struct thread_wrapper_arg): Store stackbase rather
	than stacksize, store commitaddr, remove guardsize.  Store all pointers
	as char * for easier address arithmetic.
	(thread_wrapper): Rewrite to remove OS stack before calling thread
	function.  Add lots of comments to explain what we do.
	(CygwinCreateThread): Reserve our own stack in case we got no
	application stack.  Add comments.
	* ntdll.h (struct _TEB): Extend defintion up to DeallocationStack
	member.
	* thread.cc (pthread_attr::pthread_attr): Use "(size_t) -1"
	rather then 0xffffffff.
	* wincap.h (wincaps::has_stack_size_param_is_a_reservation): New
	element.
	* wincap.cc: Implement above element throughout.
@
text
@a39 1
  unsigned has_buggy_thread_startup			: 1;
a88 1
  bool	IMPLEMENT (has_buggy_thread_startup)
@


1.96
log
@	* heap.cc (heap_init): Rewrite initial heap allocation to use addresses
	beyond 0x20000000.  Explain why and how.
	* shared.cc (shared_info::heap_slop_size): Remove.
	* shared_info.h (class shared_info): Remove heap_slop_inited and
	heap_slop members.  Remove heap_slop_size declaration.
	(CURR_SHARED_MAGIC): Update.
	* wincap.cc: Throughout, drop heapslop.
	* wincap.h (struct wincaps): Drop heapslop.
@
text
@d44 1
d94 1
@


1.95
log
@	* fhandler_proc.cc (format_proc_uptime): Don't call GetSystemInfo.
	Fetch CPU count from wincap.
	(format_proc_stat): Ditto.
	* globals.cc (system_info): Move to wincap.
	* heap.cc (heap_init): Fetch page size from wincap.
	* syscalls.cc (getpagesize): Fetch allocation granularity from wincap.
	(getsystempagesize): Fetch page size from wincap.
	* wincap.cc (wincap_2003): Default is_server to false.
	(wincapc::init): Call GetSystemInfo here.  Always set is_server value.
	* wincap.h (class wincapc): Add system_info as private member.
	(wincapc::cpu_count): New public method.
	(wincapc::page_size): Ditto.
	(wincapc::allocation_granularity): Ditto.
@
text
@a16 1
  DWORD    heapslop;
a65 1
  DWORD IMPLEMENT (heapslop)
@


1.94
log
@	* environ.cc (set_chunksize): Remove.
	(parse_thing): Remove forkchunk entry.
	* fork.cc (child_copy): Drop handling external chunksize setting.
	* wincap.cc: Througout, drop chunksize.
	(wincapc::set_chunksize): Remove.
	* wincap.h (struct wincaps): Drop chunksize and declaration of
	set_chunksize.
@
text
@d49 1
d58 4
@


1.93
log
@	* autoload.cc (GetSecurityInfo): Remove.
	* ntdll.h (RtlConvertToAutoInheritSecurityObject): Declare.
	(RtlDeleteSecurityObject): Declare.
	(RtlGetControlSecurityDescriptor): Declare.
	(RtlLengthSecurityDescriptor): Declare.
	* security.cc (file_mapping): New global variable.
	(get_file_sd): Rewrite.  Clean up code.  Get rid of GetSecurityInfo
	call.
	(alloc_sd): Call RtlSetControlSecurityDescriptor to set
	SE_DACL_PROTECTED flag.
	(check_file_access): Remove mapping.  Use file_mapping instead.
	(check_registry_access): Rename mapping to reg_mapping.
	* wincap.cc: Througout, drop use_get_sec_info_on_dirs,
	* wincap.h (struct wincaps): Drop use_get_sec_info_on_dirs.
@
text
@a16 1
  DWORD    chunksize;
a56 2
  void set_chunksize (DWORD nchunksize);

a61 1
  DWORD IMPLEMENT (chunksize)
@


1.92
log
@	Drop NT4 support.
	* autoload.cc (DnsQuery_A): Fatal if not available.
	(DnsRecordListFree): Ditto.
	(DsGetDcNameW): Ditto.
	(NetGetAnyDCName): Remove.
	(NetGetDCName): Remove.
	(EnumProcessModules): Fatal if not available.
	(GetModuleFileNameExW): Ditto.
	(GetModuleInformation): Ditto.
	(GetProcessMemoryInfo): Ditto.
	(QueryWorkingSet): Ditto.
	(LsaRegisterLogonProcess): Ditto.
	* fenv.cc (_feinitialise): Drop supports_sse condition.
	* fhandler_disk_file.cc (path_conv::isgood_inode): Fix comment.
	(fhandler_base::fstat_by_name): Drop has_fileid_dirinfo condition.
	(fhandler_disk_file::opendir): Ditto.
	* fhandler_netdrive.cc (fhandler_netdrive::readdir): Fix comment.
	* fhandler_proc.cc (format_proc_partitions): Drop NT4-only code.
	* fhandler_process.cc (get_process_state): Ditto.
	* kernel32.cc (GetWindowsDirectoryW): Remove.
	(GetWindowsDirectoryA): Remove.
	* miscfuncs.cc (nice_to_winprio): Drop NT4-only code.
	* mount.cc (fs_info::update): Fix comments.
	* net.cc (get_2k_ifs): Drop NT4-only code.
	* sec_auth.cc (get_logon_server): Ditto.
	(lsaauth): Drop NT4-specific error handling.
	* security.cc (alloc_sd): Set SE_DACL_PROTECTED unconditionally.
	* select.cc (select_stuff::wait): Always use MWMO_INPUTAVAILABLE.
	(peek_windows): Drop NT4-only condition in call to PeekMessage.
	* syscalls.cc (gethostid): Remove NT4-only workaround.
	* wincap.cc: Througout, drop has_dacl_protect,
	has_broken_if_oper_status, has_process_io_counters,
	has_terminal_services, has_extended_priority_class, has_guid_volumes,
	has_fileid_dirinfo, has_mwmo_inputavailable and supports_sse from
	wincaps.
	(wincap_nt4sp4): Remove.
	(wincap_minimal): Set to wincap_2000.
	(wincapc::init): Rely on availability of OSVERSIONINFOEX structure.
	Treat error from GetVersionEx as fatal.  Treat NT4 as fatal.
	* wincap.h (struct wincaps): Drop has_dacl_protect,
	has_broken_if_oper_status, has_process_io_counters,
	has_terminal_services, has_extended_priority_class, has_guid_volumes,
	has_fileid_dirinfo, has_mwmo_inputavailable and supports_sse flags
	and methods.
	* winlean.h (GetWindowsDirectoryW) Define as GetSystemWindowsDirectoryW.
	(GetWindowsDirectoryA): Define as GetSystemWindowsDirectoryA.
@
text
@a45 1
  unsigned use_get_sec_info_on_dirs			: 1;
a93 1
  bool	IMPLEMENT (use_get_sec_info_on_dirs)
@


1.91
log
@	* autoload.cc (GetExtendedTcpTable): Remove.
	(GetTcpTable): Remove.
	(CharNextExA): Remove.
	(FindWindowA): Remove.
	(ShowWindowAsync): Remove.
	* dcrt0.cc (disable_dep): Remove unused function.
	(dll_crt0_0): Drop comment babbling about TS & DEP.
	* fhandler_socket.cc (address_in_use): Remove unused function.
	* wincap.cc: Throughout, drop ts_has_dep_problem from wincaps.
	(wincapc::init): Drop code setting ts_has_dep_problem flag.
	* wincap.h (struct wincaps): Drop ts_has_dep_problem flags and method.
@
text
@a20 2
  unsigned has_dacl_protect                             : 1;
  unsigned has_broken_if_oper_status                    : 1;
a21 2
  unsigned has_process_io_counters                      : 1;
  unsigned has_terminal_services			: 1;
a23 2
  unsigned has_extended_priority_class			: 1;
  unsigned has_guid_volumes				: 1;
a24 1
  unsigned has_fileid_dirinfo				: 1;
a41 1
  unsigned has_mwmo_inputavailable			: 1;
a46 1
  unsigned supports_sse					: 1;
a69 2
  bool  IMPLEMENT (has_dacl_protect)
  bool  IMPLEMENT (has_broken_if_oper_status)
a70 2
  bool  IMPLEMENT (has_process_io_counters)
  bool  IMPLEMENT (has_terminal_services)
a72 2
  bool	IMPLEMENT (has_extended_priority_class)
  bool	IMPLEMENT (has_guid_volumes)
a73 1
  bool	IMPLEMENT (has_fileid_dirinfo)
a90 1
  bool	IMPLEMENT (has_mwmo_inputavailable)
a95 1
  bool	IMPLEMENT (supports_sse)
@


1.90
log
@	* fenv.cc (_feinitialise); Don't use SSE instructions on systems not
	supporting them.
	* wincap.h (wincaps::supports_sse): New element.
	* wincap.cc: Implement above element throughout.
@
text
@a41 1
  unsigned ts_has_dep_problem				: 1;
a99 1
  bool	IMPLEMENT (ts_has_dep_problem)
@


1.89
log
@	* fhandler.cc (fhandler_base::open): When creating a file on a
	filesystem supporting ACLs, create the file with WRITE_DAC access.
	Explain why.
	* fhandler_disk_file.cc (fhandler_disk_file::mkdir): Ditto for
	directories.
	* fhandler_socket.cc (fhandler_socket::bind): Ditto for sockets.
	* path.cc (symlink_worker): Ditto for symlinks.
	* security.cc (get_file_sd): Always call GetSecurityInfo for directories
	on XP and Server 2003.  Improve comment to explain why.
	(set_file_attribute): Explicitely cast mode_t value to bool in call to
	get_file_sd.
	* wincap.h (wincaps::use_get_sec_info_on_dirs): New element.
	* wincap.cc: Implement above element throughout.
@
text
@d56 1
d115 1
@


1.89.2.1
log
@	* fenv.cc (_feinitialise): Don't use SSE instructions on systems not
	supporting them.
	* wincap.h (wincaps::supports_sse): New element.
	* wincap.cc: Implement above element throughout.
@
text
@a55 1
  unsigned supports_sse					: 1;
a113 1
  bool	IMPLEMENT (supports_sse)
@


1.88
log
@* autoload.cc (dll_load): Only perform DONT_RESOLVE_DLL_REFERENCES hack on
systems which need it.
* wincap.cc (use_dont_resolve_hack): Set as appropriate.
* wincap.h (use_dont_resolve_hack): Define.
@
text
@d55 1
d113 1
@


1.87
log
@	* fhandler_socket.cc (address_in_use): Disable.  Add comment.
	(fhandler_socket::bind): Change comment to explain setting the
	SO_EXCLUSIVEADDRUSE socket option.  Remove code which checks for
	address in use.
	* net.cc (cygwin_setsockopt): Never set SO_REUSEADDR option.  Improve
	comment to compensate for the deleted comment in fhandler_socket::bind.
	* wincap.cc: Throughout, drop has_enhanced_socket_security from wincaps.
	* wincap.h (struct wincaps): Drop has_enhanced_socket_security flags
	and method.
@
text
@d54 1
d111 1
@


1.86
log
@	* fhandler.h (MAX_PARTITIONS): New definition.
	(class fhandler_dev_floppy): Add partitions array member.  Add close
	method.
	* fhandler_floppy.cc (fhandler_dev_floppy::fhandler_dev_floppy): Zero
	out partitions array.
	(fhandler_dev_floppy::open): Fix "entire disk" condition for call to
	DeviceIoControl (FSCTL_ALLOW_EXTENDED_DASD_IO).
	When opening disks for writing, call DeviceIoControl (FSCTL_LOCK_VOLUME)
	on all affected disk partitions starting with Vista.
	(fhandler_dev_floppy::close): New method.
	(fhandler_dev_floppy::dup): Duplicate handles in partitions, if any.
	* wincap.h (wincaps::has_restricted_raw_disk_access): New element.
	* wincap.cc: Implement above element throughout.
@
text
@a31 1
  unsigned has_enhanced_socket_security			: 1;
a87 1
  bool	IMPLEMENT (has_enhanced_socket_security)
@


1.85
log
@	* cygheap.h (cwdstuff::override_win32_cwd): Declare.
	* ntdll.h (struct _PEB): Add members accessed by the fast cwd method
	starting with Vista.
	(struct _KUSER_SHARED_DATA): Define with only the DismountCount.
	(RtlAllocateHeap): Declare.
	(RtlEnterCriticalSection): Declare.
	(RtlFreeHeap): Declare.
	(RtlLeaveCriticalSection): Declare.
	* path.cc (get_user_proc_parms): Remove.
	(struct _FAST_CWD): New structure.
	(fast_cwd_ptr): Define.
	(SharedUserData): Define.
	(peek32): Define.
	(find_fast_cwd_pointers): New function to find the global pointer
	to the current FAST_CWD structure.
	(copy_cwd_str): New helper function.
	(cwdstuff::override_win32_cwd): New method to set the Win32 CWD.
	(cwdstuff::init): Just call override_win32_cwd from here when
	started from native Win32 parent.
	(cwdstuff::set): Access Win32 CWD via PEB reference instead of using
	get_user_proc_parms function.  Memorize old DismountCount before
	opening directory handle.  Call override_win32_cwd to set up Win32 CWD.
	Be more verbose in comments.
	* wincap.h (wincaps::has_fast_cwd): New element.
	* wincap.cc: Implement has_fast_cwd element throughout.
@
text
@d4 1
a4 1
   2009, 2010 Red Hat, Inc.
d54 1
d111 1
@


1.84
log
@	* fhandler_socket.cc (fhandler_socket::bind): Drop has_exclusiveaddruse
	condition.  Fix comment about availability.  Move remaining comment to
	the right spot.  Drop has_ip_helper_lib condition.
	* net.cc (cygwin_setsockopt): Drop has_disabled_user_tos_setting
	condition.  Fix comment.
	(get_2k_ifs): Fix comment.
	(get_nt_ifs): Remove.
	(getifaddrs): Drop call to get_nt_ifs.
	(get_ifconf): Ditto.
	* wincap.cc: Throughout, drop has_ip_helper_lib,
	has_disabled_user_tos_setting, and has_exclusiveaddruse settings from
	wincaps.
	(wincap_unknown): Remove.
	(wincap_nt4): Remove.
	(wincap_minimal): New macro, set to wincap_nt4sp4 for now.
	(wincapc::init): Drop test for pre-SP4 NT4.  Just imply at least NT SP4.
	Replace references to wincap_unknown with references to wincap_minimal.
	* wincap.h (struct wincaps): Drop has_ip_helper_lib,
	has_disabled_user_tos_setting, and has_exclusiveaddruse flags and
	methods.
@
text
@d53 1
d109 1
@


1.83
log
@* wincap.h (wincaps::has_buggy_thread_startup): Declare.
(wincapc::has_buggy_thread_startup): Ditto.
* wincap.cc::wincap_*): Accommodate has_buggy_thread_startup.
(wincapc::init): Explicitly turn off has_buggy_thread_startup if not WOW64.
* cygthread.h (cygthread::thread_handle): Declare/define new method.
* dcrt0.cc (_dll_crt0): Don't call __sinit here.
(dll_crt0_0): Don't call sigproc_init during initialization if
wincap.has_buggy_thread_startup().
(dll_crt0_1): Defer sigproc_init to here when
wincap.has_buggy_thread_startup().  Call __sinit after we've determined that
we're not forking.
(__main): Rework comments.  Add potential future reminder.
@
text
@a21 1
  unsigned has_ip_helper_lib                            : 1;
a30 1
  unsigned has_disabled_user_tos_setting		: 1;
a31 1
  unsigned has_exclusiveaddruse				: 1;
a76 1
  bool  IMPLEMENT (has_ip_helper_lib)
a85 1
  bool	IMPLEMENT (has_disabled_user_tos_setting)
a86 1
  bool	IMPLEMENT (has_exclusiveaddruse)
@


1.82
log
@	* autoload.cc (MsgWaitForMultipleObjectsEx): Define.
	(MsgWaitForMultipleObjects): Remove.
	* select.cc (select_stuff::wait): Use MsgWaitForMultipleObjectsEx with
	QS_ALLPOSTMESSAGE and, if possible, MWMO_INPUTAVAILABLE flags.  Explain
	why.  Fix a potential crash due to a NULL pointer in WAIT_FAILED case.
	(peek_windows): Use filter pattern on NT4.  Explain why.
	* wincap.h (wincaps::has_mwmo_inputavailable): New element.
	* wincap.cc: Implement above element throughout.
@
text
@d55 1
d113 1
@


1.81
log
@	* Makefile.in (DLL_OFILES): Add nlsfunc.o and strfmon.o.
	* autoload.cc (LocaleNameToLCID): Define.
	* cygwin.din (strfmon): Export.
	* nlsfuncs.cc: New file.  Define a lot of internal functions called
	from setlocale.
	(wcscoll): Implement locale-aware here, using CompareStringW function.
	(strcoll): Ditto.
	(wcsxfrm): Implement locale-aware here, usingLCMapStringW function.
	(strxfrm): Ditto.
	(__set_charset_from_locale): Replace __set_charset_from_codepage.
	Return Linux-compatible charset.
	* strfuncs.cc (__set_charset_from_codepage): Remove.
	* wchar.h (__set_charset_from_codepage): Drop definition.
	* wincap.h (wincaps::has_localenames): New element.
	* wincap.cc: Implement above element throughout.
	* libc/strfmon.c: New file.
	* libc/strptime.cc: Remove locale constant strings in favor of
	access to locale-specifc data.
	(strptime): Point _CurrentTimeLocale to locale-specific data.
	Throughout use correct locale-specific format fields for all
	locale-specific formats.
	* include/monetary.h: New file.
	* include/cygwin/version.h (CYGWIN_VERSION_API_MINOR): Bump.
@
text
@d54 1
d111 1
@


1.80
log
@	* security.cc (alloc_sd): Re-introduce setting the SE_DACL_PROTECTED
	flag.  Remove INHERITED_ACE flag from all inherited ACEs.  Add comment.
	Fix ace_off counter in unrelated ACE loop.
	* wincap.cc: Re-add has_dacl_protect throughout.
	* wincap.h: Ditto.
@
text
@d3 2
a4 1
   Copyright 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008 Red Hat, Inc.
d53 1
d109 1
@


1.79
log
@	* fhandler.cc (fhandler_base::open): Always create file with default
	security descriptor and fix descriptor afterwards.  Change comment to
	explain why.
	* security.cc (alloc_sd): Drop setting the SE_DACL_PROTECTED flag.
	* wincap.cc: Remove has_dacl_protect throughout.
	* wincap.h: Ditto.
@
text
@d20 1
d75 1
@


1.78
log
@	* wincap.h (wincaps::has_always_all_codepages): New element.
	* wincap.cc: Implement above element throughout.
	* wchar.h (__sjis_mbtowc): Declare.
	(__eucjp_mbtowc): Ditto.
	(__gbk_mbtowc): Ditto.
	(__kr_mbtowc): Ditto.
	(__big5_mbtowc): Ditto.
	* syscalls.cc (internal_setlocale): Convert to char * function.
	Return parameter by default.  Return NULL if request to use a
	charset can't be satisfied due to missing codepage support in the
	underlying OS.  Fix comment.
	(setlocale): Store original locale.  Restore to original locale if
	internal_setlocale returns NULL.
@
text
@a19 1
  unsigned has_dacl_protect                             : 1;
a73 1
  bool  IMPLEMENT (has_dacl_protect)
@


1.77
log
@	* wincap.h (wincaps::has_broken_alloc_console): New element.
	* wincap.cc: Implement above element throughout.
@
text
@d51 1
d106 1
@


1.76
log
@	* dtable.cc (dtable::init_std_file_from_handle): Add workaround for
	Windows 7 64 bit issue.  Add lengthy comment to explain what happens.
	* wincap.h (wincaps::has_console_handle_problem): New element.
	* wincap.cc: Implement above element throughout.
	(wincap_7): New wincaps structure for NT 6.1 kernels.
	(wincapc::init): Set has_console_handle_problem to false for 32 bit
	systems.

	Fix broken older ChangeLog entry.
@
text
@d50 1
d104 1
@


1.75
log
@	* fhandler_disk_file.cc (fhandler_disk_file::readdir): Fix inode number
	evaluation for faked "." entry.

	* mount.cc (fs_info::update): Move setting of is_cdrom after checking
	for caseinsensitivity.  Recognize UDF in is_cdrom case and set
	caseinsensitive flag according to UDF brokenness determined by OS.
	Add comment to explain why.
	* mount.h (class fs_info): Add is_udf status flag.
	* path.cc (symlink_info::check): Add workaround for UDF bug in
	terms of casesensitivity on certain OSes.
	* wincap.h (wincaps::has_broken_udf): New element.
	(wincaps::has_broken_udf): New element
@
text
@d49 1
d102 1
@


1.74
log
@	* autoload.cc (WSAIoctl): Reintroduce.
	(WSASendMsg): Define.
	* fhandler.h (class fhandler_socket): Change definition of recv_internal
	and send_internal to take WSAMSG pointer as parameter.
	* fhandler_socket.cc (WSAID_WSARECVMSG): Define.
	(LPFN_WSARECVMSG): Define.
	(WSASendMsg): Declare.
	(get_ext_funcptr): New function to fetch address of WSARecvMsg.
	(fhandler_socket::recv_internal): Take just a LPWSAMSG parameter.
	Change code accordingly.  If control information is requested,
	fetch address of WSARecvMsg and use that instead of WSARecvFrom.
	(fhandler_socket::recvfrom): Change return type to ssize_t as
	declared in fhandler.h.  Accommodate changes to recv_internal.
	(fhandler_socket::recvmsg): Ditto.  Make sure that control information
	is only requested if system, address family, and socket type support it.
	(fhandler_socket::send_internal): Take just a LPWSAMSG parameter
	and the flags.  Change code accordingly.  If control information is
	provided, use WSASendMsg instead of WSASendTo.
	(fhandler_socket::sendto): Drop useless comment.  Accommodate changes
	to send_internal.
	(fhandler_socket::sendmsg): Ditto.  Make sure that control information
	is only provided if system, address family, and socket type support it.
	* wincap.h (wincaps::has_recvmsg): New element.
	(wincaps::has_sendmsg): New element
	* wincap.cc: Implement above elements throughout.
	* include/cygwin/socket.h (CMSG_ALIGN): Phrase in terms of alignment
	of type struct cmsghdr.
@
text
@d48 1
d100 1
@


1.73
log
@	* autoload.cc (GetSystemDEPPolicy): Define.
	(GetProcessDEPPolicy): Ditto.
	(SetProcessDEPPolicy): Ditto.
	* dcrt0.cc (disable_dep): New static function.
	(dll_crt0_0): Call disable_dep on platforms requiring it.  Add longish
	comment to explain the circumstances.
	* wincap.h (wincaps::ts_has_dep_problem): New element.
	* wincap.cc: Implement above element throughout.
	(wincapc::init): Set ts_has_dep_problem to true on 2008 Terminal
	Servers.
	* winsup.h (WINVER): Set to 0x0601.
@
text
@d46 2
d97 2
@


1.72
log
@	* fhandler_socket.cc (fhandler_socket::bind): Don't run explicit
	local socket test in SO_REUSEADDR case on systems supporting
	enhanced socket security.  Explain why.  Only call address_in_use
	for AF_INET sockets.
	* net.cc (cygwin_setsockopt): Don't call setsockopt to set SO_REUSEADDR
	on systems supporting enhanced socket security.  Add comment.
	* wincap.h (wincaps::has_enhanced_socket_security): New element.
	* wincap.cc: Implement above element throughout.
@
text
@d45 1
d94 1
@


1.71
log
@	* autoload.cc (LoadDLLfuncNt): Re-invent.
	(NtCreateTransaction): Define.
	(NtCommitTransaction): Define.
	(NtRollbackTransaction): Define.
	(RtlGetCurrentTransaction): Define.
	(RtlSetCurrentTransaction): Define.
	* ntdll.h (TRANSACTION_ALL_ACCESS): Define.
	(NtCreateTransaction): Declare.
	(NtCommitTransaction): Declare.
	(NtRollbackTransaction): Declare.
	(RtlGetCurrentTransaction): Declare.
	(RtlSetCurrentTransaction): Declare.
	* syscalls.cc (start_transaction): New static function to start TxF
	transaction.
	(stop_transaction): New static function to end TxF transaction.
	(rename): Call start_transaction and stop_transaction where appropriate
	on systems supporting transactions.
	* wincap.h (wincaps::has_transactions): New element.
	* wincap.cc: Implement above element throughout.
@
text
@d34 1
d82 1
@


1.70
log
@	* autoload.cc (IsWow64Process): Remove.
	(Wow64DisableWow64FsRedirection): Remove.
	(Wow64RevertWow64FsRedirection): Remove.
	* ntdll.h (enum _PROCESSINFOCLASS): Define ProcessWow64Information.
	* init.cc (respawn_wow64_process): Use NtQueryInformationProcess to
	get WOW64 state.
	* wincap.cc (wincapc::init): Ditto.
	* wincap.h (wincapc::wow64): Change type to ULONG.
@
text
@d43 1
d90 1
@


1.69
log
@	* wincap.h (wincapc::wow64): Change type to BOOL.
	* wincap.cc: Remove explicit use of this pointer in wincapc methods.
	(wincapc::init): Fix bug in IsWow64Process handling.
@
text
@d49 1
a49 1
  BOOL             wow64;
@


1.68
log
@	* Fix copyright dates.
@
text
@d49 1
a49 1
  bool             wow64;
@


1.67
log
@        * cygtls.cc (_cygtls::init_exception_handler): Revert patch
        from 2005-12-02.
        * exceptions.cc (stack_info::walk): Add workaround for NT 5.2
        64 bit OSes.
        * wincap.h (wincaps::has_restricted_stack_args): New element.
        * wincap.cc: Implement above element throughout.
        (wincapc::init): Reset has_restricted_stack_args if not running
        under WOW64.
@
text
@d3 1
a3 1
   Copyright 2001, 2002, 2003, 2004, 2005, 2006, 2007 Red Hat, Inc.
@


1.66
log
@	* autoload.cc (SetSecurityDescriptorControl): Drop.
	* security.cc (alloc_sd): Set security descriptor control flag without
	calling SetSecurityDescriptorControl function.
	* wincap.h (wincapc::has_dacl_protect): Rename from
	has_security_descriptor_control.
	* wincap.cc: Ditto throughout.
@
text
@d42 1
d88 1
@


1.65
log
@	* cygheap.h (init_cygheap::luid): Remove.
	* mmap.cc (mlock): Accommodate parameter change in call to
	push_thread_privilege.
	(munlock): Ditto.
	* ntdll.h (STATUS_NOT_ALL_ASSIGNED): Define.
	(NtAdjustPrivilegesToken): Declare.
	* sec_helper.cc (cygpriv): Reorder to match numerical privilege order.
	(privilege_luid): Take job of privilege_luid_by_name, using new
	cygpriv.
	(privilege_luid_by_name): Remove.
	(privilege_name): Accommodate new cygpriv array.
	(set_privilege): Call NtAdjustPrivilegesToken to avoid using advapi32.
	Accommodate changes to privilege_name.
	(set_cygwin_privileges): Simplify.  Don't try to set
	SE_CREATE_GLOBAL_PRIVILEGE on systems not supporting it.
	* security.cc (sys_privs): Reorder to match numerical privilege order.
	Use real privilege values as defined in security.h.
	(get_system_priv_list): Drop unused grp_list argument.  Create
	list of privileges according to new wincapc::max_sys_priv value.
	(get_priv_list): Call privilege_luid instead of privilege_luid_by_name.
	Make priv a local value instead of a pointer.
	(create_token): Accommodate parameter change in call to
	push_self_privilege.
	(lsaauth): Ditto.
	(check_access): Use privilege values directly instead of calling
	privilege_luid.
	* security.h: Define real privilege values.
	(cygpriv_idx): Remove.
	(privilege_luid): Change declaration.
	(privilege_luid_by_name): Drop declaration.
	(set_privilege): Change declaration.
	(set_process_privilege): Drop definition.
	(_push_thread_privilege): Accomodate new set_privilege parameters.
	* wincap.h (wincapc::max_sys_priv): New element.
	* wincap.cc: Implement above element throughout.
	(wincap_2000sp4): New wincaps structure.
	(wincap_xpsp1): Ditto.
	(wincap_xpsp2): Ditto.
	(wincapc::init): Use new wincaps.
	(wincapc::max_sys_priv): New element.
@
text
@d20 1
a20 1
  unsigned has_security_descriptor_control              : 1;
d65 1
a65 1
  bool  IMPLEMENT (has_security_descriptor_control)
@


1.64
log
@	* autoload.cc (WSAIoctl): Remove.
	* cygwin.din: Export freeifaddrs, getifaddrs.
	* fhandler_socket.cc (fhandler_socket::ioctl): Drop SOCKET parameter
	from get_ifconf.
	* net.cc: Include ifaddrs.h.
	(in_are_prefix_equal): Match addresses in network byte order.
	(ip_addr_prefix): Convert address into host byte order before
	testing with IN_LOOPBACK.
	(struct ifall): Define.
	(get_xp_ifs): Replace get_xp_ifconf.  Return struct ifall array.
	(get_2k_ifs): Ditto, replace get_2k_ifconf.
	(get_nt_ifs): Ditto, replace get_nt_ifconf.
	(getifaddrs): New function.
	(freeifaddrs): New function.
	(get_ifconf): Call matching get_XX_ifs function and create
	ifc content from here.  Drop lo fake since it's now in get_nt_ifs.
	* posix.sgml: Add freeifaddrs and getifaddrs to list of implemented
	BSD functions.
	* wincap.h (wincapc::has_broken_if_oper_status): New element.
	* wincap.cc: Implement above element throughout.
	* include/ifaddrs.h: New file.
	* include/cygwin/version.h: Bump API minor number.
@
text
@d18 1
d63 1
@


1.63
log
@	* cygheap.cc (cygheap_init): Fix formatting.  Remove comment.  Set
	shared_prefix depending only on terminal service capability.
	* dcrt0.cc (dll_crt0_1): Don't call set_cygwin_privileges here.
	* fhandler_fifo.cc (fhandler_fifo::open): Create the mutex as global
	object.
	* posix_ipc.cc (ipc_mutex_init): Use cygheap->shared_prefix.
	(ipc_cond_init): Ditto.
	* sec_helper.cc (privilege_name): Make static.  Use LookupPrivilegeName
	directly to be independent of the state of cygheap.
	(set_privilege): Take a LUID as parameter instead of an index value.
	Only print debug output in case of failure.
	(set_cygwin_privileges): Add comment.  Use LookupPrivilegeValue to
	get privilege LUIDs.
	(init_global_security): Call set_cygwin_privileges here.
	* security.h (privilege_name): Drop declaration.
	(set_privilege): Declare according to above change.
	(set_process_privilege): Call privilege_luid to get LUID.
	(_push_thread_privilege): Ditto.
	* shared.cc (open_shared): Add comment.  On systems supporting the
	SeCreateGlobalPrivilege, try to create/open global shared memory first.
	Fall back to local shared memory if that fails.
	* thread.cc (semaphore::semaphore): Use cygheap->shared_prefix.
	* wincap.h (wincapc::has_create_global_privilege): New element.
	* wincap.cc: Implement above element throughout.
@
text
@d21 1
d65 1
@


1.62
log
@	Throughout remove all usage of wincap.has_security.
	* environ.cc (environ_init): Drop setting allow_ntsec here.
	* grp.cc (initgroups32): Drop usage of label "out".
	* security.cc (allow_ntsec): Set to true by default.
	* syscalls.cc (seteuid32): Remove label success_9x.
	* wincap.cc: Remove has_security throughout.
	* wincap.h: Ditto.
@
text
@d24 1
d67 1
@


1.61
log
@	* fhandler.h (class fhandler_pipe): Remove members writepipe_exists,
	orig_pid and id.  Make hit_eof inline.
	* fhandler_fifo.cc (fhandler_fifo::open): Drop handling of
	writepipe_exists, orig_pid and id.
	* pipe.cc: Ditto throughout.
	(pipecount): Remove.
	(pipeid_fmt): Remove.
	(fhandler_pipe::hit_eof): Simplify.  Move to fhandler.h.
	(fhandler_pipe::dup): Drop leave label.
	(fhandler_pipe::create): Drop has_unreliable_pipes case.
	* wincap.cc: Remove has_unreliable_pipes throughout.
	* wincap.h: Ditto.
@
text
@a18 1
  unsigned has_security                                 : 1;
a60 1
  bool  IMPLEMENT (has_security)
@


1.60
log
@	* fhandler_console.cc (fhandler_console::need_invisible): Drop
	pty_needs_alloc_console check.
	* spawn.cc (spawn_guts): Ditto.
	(av::fixup): Remove setting iscui.
	* syscalls.cc (rename): Drop has_move_file_ex checks.  Remove 9x
	specific code.
	* wincap.cc: Remove has_move_file_ex and pty_needs_alloc_console
	throughout.
	* wincap.h: Ditto.
@
text
@a22 1
  unsigned has_unreliable_pipes                         : 1;
a65 1
  bool  IMPLEMENT (has_unreliable_pipes)
@


1.59
log
@	* exceptions.cc (dummy_ctrl_c_handler): Remove.
	(init_console_handler): Drop has_null_console_handler_routine checks.
	* fhandler_raw.cc (fhandler_dev_raw::open): Drop has_raw_devices check.
	* fhandler_serial.cc (fhandler_serial::open): Drop
	.supports_reading_modem_output_lines check.
	* miscfuncs.cc (low_priority_sleep): Drop has_switch_to_thread check.
	* shared.cc (open_shared): Drop needs_memory_protection checks.
	* spawn.cc (spawn_guts): Drop start_proc_suspended check.
	* uname.cc (uname): Drop has_valid_processorlevel check.
	* wincap.cc: Remove has_raw_devices, has_valid_processorlevel,
	supports_reading_modem_output_lines, needs_memory_protection,
	has_switch_to_thread, start_proc_suspended and
	has_null_console_handler_routine throughout.
	* wincap.h: Ditto.
@
text
@a22 1
  unsigned has_move_file_ex                             : 1;
a24 1
  unsigned pty_needs_alloc_console			: 1;
a66 1
  bool  IMPLEMENT (has_move_file_ex)
a68 1
  bool  IMPLEMENT (pty_needs_alloc_console)
@


1.58
log
@	* fhandler.cc (fhandler_base::lseek): Drop 9x considerations.
	* fhandler_disk_file.cc (fhandler_disk_file::lock): Ditto.
	* wincap.cc: Remove lock_file_highword and has_64bit_file_access
	throughout.
	* wincap.h: Ditto.
@
text
@a24 2
  unsigned has_raw_devices				: 1;
  unsigned has_valid_processorlevel			: 1;
a25 2
  unsigned supports_reading_modem_output_lines          : 1;
  unsigned needs_memory_protection			: 1;
a27 1
  unsigned has_switch_to_thread				: 1;
a28 1
  unsigned start_proc_suspended				: 1;
a30 1
  unsigned has_null_console_handler_routine		: 1;
a70 2
  bool  IMPLEMENT (has_raw_devices)
  bool  IMPLEMENT (has_valid_processorlevel)
a71 2
  bool  IMPLEMENT (supports_reading_modem_output_lines)
  bool  IMPLEMENT (needs_memory_protection)
a73 1
  bool  IMPLEMENT (has_switch_to_thread)
a74 1
  bool	IMPLEMENT (start_proc_suspended)
a76 1
  bool	IMPLEMENT (has_null_console_handler_routine)
@


1.57
log
@	* cygheap.h (struct cwdstuff): Remove sync member and keep_in_sync
	accessors.
	* external.cc (cygwin_internal): Drop call to cygheap->cwd.keep_in_sync.
	* fhandler_disk_file.cc (fhandler_disk_file::link): Always presume
	ability to create hard links.
	* path.cc (cwdstuff::init): Drop 9x considerations.
	(cwdstuff::keep_in_sync): Remove.
	(cwdstuff::set): Take NT for granted.
	* pinfo.h (cygwin_pid): Just return pid.
	* wincap.cc: Remove has_hard_links, can_open_directories,
	has_negative_pids, has_named_pipes, has_try_enter_critical_section,
	cant_debug_dll_entry and detect_win16_exe throughout.
	* wincap.h: Ditto.
@
text
@a15 1
  DWORD    lock_file_highword;
a26 1
  unsigned has_64bit_file_access			: 1;
a68 1
  DWORD IMPLEMENT (lock_file_highword)
a79 1
  bool  IMPLEMENT (has_64bit_file_access)
@


1.56
log
@	* fhandler_console.cc (fhandler_console::read): Drop 9x specific
	handling of AltGr key.
	* mmap.cc: Take NT for granted throughout.
	* wincap.cc: Remove map_view_of_file_ex_sucks, altgr_is_ctrl_alt,
	has_working_copy_on_write, share_mmaps_only_by_name,
	virtual_protect_works_on_shared_pages, has_mmap_alignment_bug and
	has_working_virtual_lock throughout.
	* wincap.h: Ditto.
@
text
@a23 2
  unsigned has_hard_links                               : 1;
  unsigned can_open_directories                         : 1;
a24 1
  unsigned has_negative_pids                            : 1;
a25 2
  unsigned has_named_pipes                              : 1;
  unsigned has_try_enter_critical_section		: 1;
a34 1
  unsigned cant_debug_dll_entry				: 1;
a38 1
  unsigned detect_win16_exe				: 1;
a78 2
  bool  IMPLEMENT (has_hard_links)
  bool  IMPLEMENT (can_open_directories)
a79 1
  bool  IMPLEMENT (has_negative_pids)
a80 2
  bool  IMPLEMENT (has_named_pipes)
  bool  IMPLEMENT (has_try_enter_critical_section)
a89 1
  bool	IMPLEMENT (cant_debug_dll_entry)
a93 1
  bool	IMPLEMENT (detect_win16_exe)
@


1.55
log
@	* fhandler.cc (fhandler_base::set_no_inheritance): Always use
	SetHandleInformation.
	* fhandler_disk_file.cc (fhandler_disk_file::lock): Always use
	UnlockFileEx/LockFileEx functions.
	* net.cc (fdsock): Don't bother to duplicate socket for inheritance.
	* sysconf.cc (get_nproc_values): Take NT for granted.
	(get_avphys): Ditto.
	* syslog.cc (WIN95_EVENT_LOG_PATH): Remove define.
	(get_win95_event_log_path): Remove.
	(vsyslog): Fix formatting.  Take NT for granted.
	* wincap.cc: Remove has_lock_file_ex, has_signal_object_and_wait,
	has_eventlog, has_set_handle_information,
	has_set_handle_information_on_console_handles and supports_smp
	throughout.
	* wincap.h: Ditto.
@
text
@a22 2
  unsigned map_view_of_file_ex_sucks                    : 1;
  unsigned altgr_is_ctrl_alt                            : 1;
a23 4
  unsigned has_working_copy_on_write                    : 1;
  unsigned share_mmaps_only_by_name                     : 1;
  unsigned virtual_protect_works_on_shared_pages        : 1;
  unsigned has_mmap_alignment_bug			: 1;
a47 1
  unsigned has_working_virtual_lock			: 1;
a84 2
  bool  IMPLEMENT (map_view_of_file_ex_sucks)
  bool  IMPLEMENT (altgr_is_ctrl_alt)
a85 4
  bool  IMPLEMENT (has_working_copy_on_write)
  bool  IMPLEMENT (share_mmaps_only_by_name)
  bool  IMPLEMENT (virtual_protect_works_on_shared_pages)
  bool	IMPLEMENT (has_mmap_alignment_bug)
a109 1
  bool	IMPLEMENT (has_working_virtual_lock)
@


1.54
log
@	* fhandler.cc (fhandler_base::write): Remove wincap.has_lseek_bug case.
	Simplify seek beyond EOF case.
	* times.cc (times): Remove wincap.has_get_process_times case.
	* wincap.cc: Remove has_delete_on_close, has_page_guard,
	has_get_process_times and has_lseek_bug throughout.
	* wincap.h: Ditto.
@
text
@a21 3
  unsigned has_lock_file_ex                             : 1;
  unsigned has_signal_object_and_wait                   : 1;
  unsigned has_eventlog                                 : 1;
a22 3
  unsigned has_set_handle_information                   : 1;
  unsigned has_set_handle_information_on_console_handles: 1;
  unsigned supports_smp                                 : 1;
a90 3
  bool  IMPLEMENT (has_lock_file_ex)
  bool  IMPLEMENT (has_signal_object_and_wait)
  bool  IMPLEMENT (has_eventlog)
a91 3
  bool  IMPLEMENT (has_set_handle_information)
  bool  IMPLEMENT (has_set_handle_information_on_console_handles)
  bool  IMPLEMENT (supports_smp)
@


1.53
log
@	Throughout remove all usage of wincap.access_denied_on_delete.
	* dir.cc (rmdir): Add existance check to be errno-compatible with Linux.
	* fhandler_disk_file.cc (fhandler_disk_file::rmdir): Drop test for
	non-existent dir on 9x share.
	* syscalls.cc (unlink): Add comment.
	* wincap.cc: Remove access_denied_on_delete flag throughout.
	* wincap.h: Ditto.
@
text
@a19 2
  unsigned has_delete_on_close                          : 1;
  unsigned has_page_guard                               : 1;
a21 2
  unsigned has_get_process_times                        : 1;
  unsigned has_lseek_bug                                : 1;
a94 2
  bool  IMPLEMENT (has_delete_on_close)
  bool  IMPLEMENT (has_page_guard)
a96 2
  bool  IMPLEMENT (has_get_process_times)
  bool  IMPLEMENT (has_lseek_bug)
@


1.52
log
@	Throughout replace all usage of wincap.shared with the constant
	FILE_SHARE_VALID_FLAGS.
	* fhandler.cc (fhandler_base::open_9x): Drop local variable shared.
	* wincap.cc: Remove shared member throughout.
	* wincap.h: Ditto.
@
text
@a19 1
  unsigned access_denied_on_delete                      : 1;
a98 1
  bool  IMPLEMENT (access_denied_on_delete)
@


1.51
log
@	* Makefile.in (DLL_IMPORTS): Add libntdll.a.
	* autoload.cc: Remove all symbols from advapi32.dll, kernel32.dll and
	ntdll.dll available on all platforms since NT4.

	Throughout remove all usage of wincap.is_winnt.
	* dcrt0.cc (dll_crt0_0): Remove call to mmap_init.
	* fhandler.h (class fhandler_base): Remove has_changed flag.
	(fhandler_disk_file::touch_ctime): Remove declaration.
	(fhandler_disk_file::readdir_9x): Ditto.
	(fhandler_disk_file::touch_ctime): Remove.
	(fhandler_disk_file::readdir_9x): Remove.
	(fhandler_disk_file::closedir): Call NtClose instead of CloseHandle.
	* mmap.cc: Throughout call CreateMapping and MapView directly.
	(VirtualProt9x): Remove.
	(VirtualProtNT): Remove.
	(VirtualProtEx9x): Remove.
	(VirtualProtExNT): Remove.
	(VirtualProtect): Remove define.
	(VirtualProtectEx): Remove define.
	(CreateMapping9x): Remove.
	(CreateMappingNT): Rename to CreateMapping.
	(MapView9x): Remove.
	(MapViewNT): Rename to MapView.
	(struct mmap_func_t): Remove definition.
	(mmap_funcs_9x): Remove.
	(mmap_funcs_nt): Remove.
	(mmap_func): Remove.
	(mmap_init): Remove.
	* net.cc (getdomainname): Drop comment. Use NT4 registry key only.
	(get_95_ifconf): Remove.
	* pinfo.cc (winpids::enumNT): Rename to winpids::enum_processes.
	(winpids::enum9x): Remove.
	(winpids::set): Just call enum_processes directly.
	(winpids::enum_init): Ditto.
	* pinfo.h (class winpids): Drop enum_processes pointer.  Rename
	enumNT to enum_processes.  Drop enum9x declaration.  Drop initialization
	of enum_processes throughout.
	* registry.cc (get_registry_hive_path): Just create NT key.
	(load_registry_hive): Only load NT specific file.
	* syscalls.cc (unlink_9x): Remove.
	(unlink): Just call unlink_nt.
	* wincap.cc: Remove is_winnt flag throughout.
	* wincap.h: Ditto.
	* winsup.h: Remove mmap_init declaration.
@
text
@a18 1
  int      shared;
a98 1
  int   IMPLEMENT (shared)
@


1.50
log
@	* net.cc (ga_dup): New function, taken from ga_clone with v4-in-v6
	mapping addition.
	(ga_clone): Just call ga_dup from here.
	(ga_duplist): New function to duplicate list of struct addrinfo.
	(ga_echeck): Don't check a_flags, it already happened in
	cygwin_getaddrinfo.
	(cygwin_freeaddrinfo): Always call ipv4_freeaddrinfo.
	(cygwin_getaddrinfo): Use new wincap.supports_all_posix_ai_flags
	flag rather than wincap.has_gaa_on_link_prefix.  Always duplicate
	WinSock's addrinfo list to a self-allocated list.  Handle AI_V4MAPPED
	for pre-Vista platforms supporting getaddrinfo.
	* wincap.h (wincapc::supports_all_posix_ai_flags): New element.
	* wincap.cc: Implement above element throughout.
	* include/netdb.h: Note how AI_ADDRCONFIG is not supported pre-Vista.
	Remove superfluous comment.
@
text
@a19 1
  unsigned is_winnt                                     : 1;
a100 1
  bool  IMPLEMENT (is_winnt)
@


1.49
log
@	* Makefile.in (DLL_OFILES): Add fhandler_procnet.o.
	* autoload.cc (GetAdaptersAddresses): Define.
	* devices.h (FH_PROCNET): Define new device.
	* devices.in (dev_procnet_storage): Add "/proc/net" entry.
	* devices.cc: Regenerate.
	* dir.cc (readdir_worker): Use isproc_dev macro.
	* dtable.cc (build_fh_pc): Add FH_PROCNET.
	* fhandler.h (class fhandler_procnet): New class.
	* fhandler_proc.cc: Add "net" subdirectory handling.
	* fhandler_procnet.cc: New file handling "/proc/net" directory.
	* path.cc (isvirtual_dev): Move to path.h.
	* path.h (isproc_dev): New macro to identify /proc files by device.
	(isvirtual_dev): Moved here.  Define using isproc_dev.
	* syscalls.cc (unlink): Use isproc_dev macro.
	* wincap.h (wincapc::has_gaa_prefixes): New element.
	(wincapc::has_gaa_on_link_prefix): New element.
	* wincap.cc: Implement above elements throughout.
	(wincapc::init): Check XP for service pack and set has_gaa_prefixes
	appropriately.
	* include/cygwin/in6.h: Include asm/byteorder.h.
@
text
@d78 1
d160 1
@


1.48
log
@	* autoload.cc (SHFileOperationA): Drop definition.
	* ntdll.h (struct _FILE_RENAME_INFORMATION): Define.
	* path.cc (fs_info::update): Note length of rootdir prefix in
	root_len.
	(get_nt_native_path): New function, taking over functionality of
	path_conv::get_nt_native_path.
	(path_conv::get_nt_native_path): Just call get_nt_native_path.
	* path.h (get_nt_native_path): Declare.
	(struct fs_info): New member root_len.
	(fs_info::length): New inline method returning root_len.
	(path_conv::rootdir): New inline method returning rootdir prefix.
	* syscalls.cc (try_to_bin): Rewrite using only system calls.
	(unlink_nt): Call try_to_bin with additional handle to open file
	parameter.
	(statvfs): Use path_conv::rootdir method.
	* wincap.h: Define has_recycle_dot_bin throughout.
	* wincap.cc: Ditto.
@
text
@d3 1
a3 1
   Copyright 2001, 2002, 2003, 2004, 2005, 2006 Red Hat, Inc.
d76 2
d157 2
@


1.47
log
@	* dcrt0.cc (get_cygwin_startup_info): Change zeros to DWORD array.
	Expect first DWORD in child_info struct being set to non-zero if
	wincap.needs_count_in_si_lpres2 is set.  Add comment to explain why.
	* fork.cc (frok::parent): Set ch.zero[0] to a sensible count value
	if wincap.needs_count_in_si_lpres2 is set.
	* spawn.cc (spawn_guts): Ditto.  Add filler bytes after ch on stack
	to accomodate needs_count_in_si_lpres2.
	* wincap.h: Define needs_count_in_si_lpres2 throughout.
	* wincap.cc: Ditto.
@
text
@d75 1
d154 1
@


1.46
log
@	* cyglsa.h: New header file.
	* environ.cc: Disable subauth settings.
	* grp.cc: Accomodate cygsidlist's count now being a method.
	* sec_helper.cc (SECURITY_MANDATORY_INTEGRITY_AUTHORITY): Remove.
	(mandatory_medium_integrity_sid): Remove.
	(mandatory_high_integrity_sid): Remove.
	(mandatory_system_integrity_sid): Remove.
	(fake_logon_sid): Add.
	(cygsid::get_sid): Add well_known parameter.  Set well_known_sid
	accordingly.
	(cygsid::getfromstr): Ditto.
	(cygsidlist::alloc_sids): Move here from security.cc.
	(cygsidlist::free_sids): Ditto.
	(cygsidlist::add): Move here from security.h.  Add well_known parameter.
	Set well_known_sid accordingly.  Don't allow duplicate SIDs.
	* security.cc: Include cyglsa.h and cygwin/version.h.  Throughout
	accomodate cygsidlist's count now being a method.  Throughout drop
	redundant "contains" tests.
	(get_user_local_groups): Add local groups as well known SIDs.
	(get_token_group_sidlist): Add well known groups as well known SIDs.
	(get_server_groups): Ditto.  Only call get_unix_group_sidlist after
	get_user_local_groups to maintain "well_known_sid" attribute.
	(get_initgroups_sidlist): Add well known groups as well known SIDs.
	(get_setgroups_sidlist): Add usersid and struct passwd parameter to
	allow calling get_server_groups from here.
	(get_system_priv_list): Make static.  Return size of TOKEN_PRIVILEGES
	structure.
	(get_priv_list): Ditto.
	(create_token): Accomodate above changes.  Drop misguided attempt to
	add MIC SIDs to created user token.  Print returned token as hex value.
	(subauth): Disable.
	(lsaauth): New function implementing client side of LSA authentication.
	* security.h (class cygsid): Add well_known_sid attribute.  Accomodate
	throughout.  Add *= operator to create a well known SID.
	(class cygsidlist): Rename count to cnt.  Make count a method.
	(cygsidlist::add): Move to sec_helper.cc.
	(cygsidlist::operator *=): New method to add well known SID.
	(cygsidlist::non_well_known_count): New method returning number of
	non well known SIDs in list.
	(cygsidlist::next_non_well_known_sid): New method returning next non
	well known SID by index.
	(mandatory_medium_integrity_sid): Drop declaration.
	(mandatory_high_integrity_sid): Drop declaration.
	(mandatory_system_integrity_sid): Drop declaration.
	(fake_logon_sid): Add declaration.
	(subauth): Disable declaration.
	(lsaauth): Add declaration.
	* syscalls.cc (seteuid32): Disable subauthentication.  Add LSA
	authentication.
	* wincap.h: Define needs_logon_sid_in_sid_list throughout.
	* wincap.cc: Ditto.
@
text
@d74 1
d152 1
@


1.45
log
@	* sec_helper.cc (sid_auth): Remove.
	(well_known_this_org_sid): New well known sid.
	(SECURITY_MANDATORY_INTEGRITY_AUTHORITY): Define.
	(mandatory_medium_integrity_sid): New well known sid.
	(mandatory_high_integrity_sid): Ditto.
	(mandatory_system_integrity_sid): Ditto.
	(cygsid::get_sid): Use local SID_IDENTIFIER_AUTHORITY.  Allow all
	authorities fitting in a UCHAR.
	* security.cc (get_token_group_sidlist): Always add the local
	group to the token.  Add comment.  Add "This Organization" group
	if available in incoming group list.
	(get_server_groups): Only add world and authenticated users groups
	if not already in list.
	(create_token): Add matching mandatory integrity SID to group list
	on systems supporting Mandatory Integrity Control.
	* security.h (well_known_this_org_sid): Define.
	(mandatory_medium_integrity_sid): Define.
	(mandatory_high_integrity_sid): Define.
	(mandatory_system_integrity_sid): Define.
	* wincap.h: Define has_mandatory_integrity_control throughout.
	* wincap.cc: Ditto.
@
text
@d73 1
d150 1
@


1.44
log
@	* cygheap.h (struct user_heap_info): Add slop member.
	* heap.cc (heap_init): Add slop factor to heap allocation.  Add
	comment.
	* mmap.cc (MapViewNT): Allocate memory maps top down.
	(fhandler_dev_zero::mmap): Ditto.
	* shared.cc (shared_info::heap_slop_size): New method.
	(shared_info::heap_chunk_size): Don't use debug_printf at early stage.
	* shared_info.h (SHARED_INFO_CB): Accomodate change to shared_info.
	(CURR_SHARED_MAGIC): Ditto.
	(class shared_info): Add heap_slop member.  Declare heap_slop_size.
	* wincap.h: Define heapslop throughout.
	* wincap.cc: Ditto.
@
text
@d72 1
d148 1
@


1.43
log
@	* fhandler_disk_file.cc (fhandler_disk_file::rewinddir): Accomodate
	buggy RestartScan behaviour of Windows 2000.
	* wincap.h: Define has_buggy_restart_scan throughout.
	* wincap.cc: Ditto.
@
text
@d18 1
d93 1
@


1.42
log
@* cygheap.cc (init_cygheap::manage_console_count): Turn console control handler
on/off depending on whether we have allocated a console or not.
* dcrt0.cc (child_info_fork::fork_retry): Add more potential retry statuses.
(dll_crt0_0): Turn on/off console control depending on whether we have a
controlling tty or not.
* exceptions.cc (init_console_handler): Change BOOL to bool.
* fhandler_console.cc (fhandler_console::need_invisible): Cosmetic change.
* winsup.h (init_console_handler): Reflect argument type change.
* wincap.h (supports_setconsolectrlhandler_null): Remove duplicate capability
throughout.
* wincap.cc: Ditto.
@
text
@d70 1
d144 1
@


1.42.4.1
log
@	* fhandler_disk_file.cc (fhandler_disk_file::rewinddir): Accomodate
	buggy RestartScan behaviour of Windows 2000.
	* wincap.h: Define has_buggy_restart_scan throughout.
	* wincap.cc: Ditto.
@
text
@a69 1
  unsigned has_buggy_restart_scan			: 1;
a142 1
  bool	IMPLEMENT (has_buggy_restart_scan)
@


1.42.4.2
log
@	* dtable.cc (build_fh_pc): Add missing DEV_SD1_MAJOR case (Thanks to
	Joe Loh for noticing).

	* cygheap.h (struct user_heap_info): Add slop member.
	* heap.cc (heap_init): Add slop factor to heap allocation.  Add
	comment.
	* mmap.cc (MapViewNT): Allocate memory maps top down.
	(fhandler_dev_zero::mmap): Ditto.
	* shared.cc (shared_info::heap_slop_size): New method.
	(shared_info::heap_chunk_size): Don't use debug_printf at early stage.
	* shared_info.h (SHARED_INFO_CB): Accomodate change to shared_info.
	(CURR_SHARED_MAGIC): Ditto.
	(class shared_info): Add heap_slop member.  Declare heap_slop_size.
	* wincap.h: Define heapslop throughout.
	* wincap.cc: Ditto.
@
text
@a17 1
  DWORD    heapslop;
a91 1
  DWORD IMPLEMENT (heapslop)
@


1.42.4.3
log
@	* dcrt0.cc (get_cygwin_startup_info): Change zeros to DWORD array.
	Expect first DWORD in child_info struct being set to non-zero if
	wincap.needs_count_in_si_lpres2 is set.  Add comment to explain why.
	* fork.cc (frok::parent): Set ch.zero[0] to a sensible count value
	if wincap.needs_count_in_si_lpres2 is set.
	* spawn.cc (spawn_guts): Ditto.  Add filler bytes after ch on stack
	to accomodate needs_count_in_si_lpres2.
	* wincap.h: Define needs_count_in_si_lpres2 throughout.
	* wincap.cc: Ditto.
@
text
@a71 1
  unsigned needs_count_in_si_lpres2			: 1;
a146 1
  bool	IMPLEMENT (needs_count_in_si_lpres2)
@


1.42.4.4
log
@        * cygtls.cc (_cygtls::init_exception_handler): Revert patch
        from 2005-12-02.
        * exceptions.cc (stack_info::walk): Add workaround for NT 5.2
        64 bit OSes.
        * wincap.h (wincaps::has_restricted_stack_args): New element.
        * wincap.cc: Implement above element throughout.
        (wincapc::init): Reset has_restricted_stack_args if not running
        under WOW64.
@
text
@a72 1
  unsigned has_restricted_stack_args			: 1;
a148 1
  bool	IMPLEMENT (has_restricted_stack_args)
@


1.41
log
@* dcrt0.cc (dll_crt0_0): Reorganize so that sigproc_init is called a little
later.  Add a comment.
* fork.cc (resume_child): Make void.
(frok::parent): Only zero pi when necessary.  Explicitly zero si.  Set
this_errno when child_copy fails.  Accommodate change to resume_child.
* sigproc.cc (sigalloc): Move global_sigs initialization here.
(sigproc_init): Move global_sigs.
(sig_send): Just check for flush signals once.
* wincap.h: Define supports_setconsolectrlhandler_null throughout.
* wincap.cc: Ditto.
@
text
@a69 1
  unsigned supports_setconsolectrlhandler_null		: 1;
a142 1
  bool	IMPLEMENT (supports_setconsolectrlhandler_null)
@


1.40
log
@	* fhandler.h (class fhandler_socket): Add saw_reuseaddr status flag.
	* fhandler_socket.cc (fhandler_socket::bind): Set socket to
	SO_EXCLUSIVEADDRUSE if application didn't explicitely set SO_REUSEADDR
	socket option, on systems supporting SO_EXCLUSIVEADDRUSE.
	* net.cc (cygwin_setsockopt): Set fhandler's saw_reuseaddr status flag
	if SO_REUSEADDR socket option has been successsfully set.
	* wincap.h (wincaps::has_exclusiveaddruse): New element.
	* wincap.cc: Implement above element throughout.
@
text
@d70 1
d144 1
@


1.39
log
@	* autoload.cc (NtQueryDirectoryFile): Define.
	* dir.cc (__opendir_with_d_ino): Just call opendir.
	(opendir): Remove CYGWIN_VERSION_CHECK_FOR_NEEDS_D_INO handling.
	(readdir_worker): Only try generating d_ino if it's 0.
	Utilize namehash of directories fhandler.  Call readdir_get_ino to
	generate d_ino for "..".
	(seekdir64): Keep dirent_set_d_ino flag.
	* fhandler.h (enum dirent_states): Add dirent_get_d_ino.
	(class fhandler_disk_file): Declare new private methods readdir_helper
	and readdir_9x.
	* fhandler_disk_file.cc (path_conv::hasgood_inode): New method to
	evaluate if a filesystem has reliable inode numbers.
	(fhandler_base::fstat_by_handle): Accomodate structure member name
	change from IndexNumber to FileId.
	(fhandler_base::fstat_helper): Call hasgood_inode here.
	(fhandler_disk_file::opendir): Call fhaccess only for real files.
	Don't append '*' to __d_dirname here, move to readdir_9x.  On NT,
	open directory handle here.  Set dirent_get_d_ino and dirent_set_d_ino
	flags according to wincap and filesystem.
	(fhandler_disk_file::readdir_helper): New method to implement readdir
	postprocessing only once.
	(readdir_get_ino_by_handle): New static function.
	(readdir_get_ino): New function to centralize inode number evaluation
	in case inode number hasn't been returned by NtQueryDirectoryFile.
	(fhandler_disk_file::readdir): Move old functionality to readdir_9x.
	Call readdir_9x when on 9x/Me.  Implement NT specific readdir here.
	(fhandler_disk_file::readdir_9x): Move 9x specific readdir here.
	(fhandler_disk_file::seekdir): Accomodate new NT readdir method.
	(fhandler_disk_file::closedir): Ditto.
	(fhandler_cygdrive::fstat): Set d_ino to namehash. Add comment.
	(fhandler_cygdrive::opendir): Call get_namehash to prepare later
	correct evaluation of d_ino.
	(fhandler_cygdrive::readdir): Replace recursion with loop. Evaluate
	drive's d_ino by calling readdir_get_ino.
	* fhandler_proc.cc (fhandler_proc::readdir): Set dirent_saw_dot and
	dirent_saw_dot_dot to avoid seeing . and .. entries twice.
	* fhandler_process.cc (fhandler_process::readdir): Ditto.
	* fhandler_registry.cc (fhandler_registry::readdir): Ditto.
	* ntdll.h (STATUS_INVALID_PARAMETER): New define.
	(STATUS_INVALID_LEVEL): New define.
	(struct _FILE_INTERNAL_INFORMATION): Rename member IndexNumber to
	FileId (as in Nebbitt).
	* path.h (path_conv::hasgood_inode): Now implemented in
	fhandler_disk_file.cc.
	* wincap.h (wincaps::has_fileid_dirinfo): New element.
	* wincap.cc: Implement above element throughout.
	* winsup.h (readdir_get_ino): Add declaration.
	* include/sys/dirent.h (struct dirent): Slightly rename structure
	members to accomodate changes.
	Remove __USE_EXPENSIVE_CYGWIN_D_INO handling and declaration of
	__opendir_with_d_ino.
@
text
@d69 1
d142 1
@


1.38
log
@	* net.cc (cygwin_setsockopt): Ignore errors when setting IP_TOS on
	Windows 2000 and above. Clarify the comment about IP_TOS and move
	to the place where the magic happens.
	(get_ifconf): Remove unused code.
	* wincap.h (wincaps::has_disabled_user_tos_setting): New element.
	* wincap.cc: Implement above element throughout.
@
text
@d68 1
d140 1
@


1.37
log
@	* Update copyrights.
@
text
@d67 1
d138 1
@


1.36
log
@	* dcrt0.cc (dll_crt0_0): Remove call to wincap.init.
	* init.cc (dll_entry): Rename is_wow64_proc to wow64_test_stack_marker.
	Call wincap.init here before doing anything else.  Use wincap.is_wow64
	to determine if we're running in a WOW64 emulator.
	* mmap.cc (MapViewNT): Don't use AT_ROUND_TO_PAGE in WOW64, it's
	apparently not supported.
	(mmap64): Don't create mappings beyond EOF, which would need to use
	AT_ROUND_TO_PAGE, on WOW64.
	* wincap.cc (wincap): Throw into the .cygwin_dll_common section.
	(wincapc::init): Determine if running in WOW64 and set wow_64 flag.
	* wincap.h (class wincapc): Add wow64 member.
	(wincapc::is_wow64): New method.
@
text
@d3 1
a3 1
   Copyright 2001, 2002, 2003, 2004, 2005 Red Hat, Inc.
@


1.35
log
@	* autoload.cc (NtCreateSection): Define.
	* cygheap.cc (_csbrk): Call getpagesize instead of getshmlba.
	* dcrt0.cc (dll_crt0_0): Call mmap_init.
	* external.cc (cygwin_internal): Call getpagesize instead of getshmlba.
	* fhandler.h (fhandler_base::mmap): Change access to prot parameter.
	(fhandler_base::fixup_mmap_after_fork): Ditto.
	(fhandler_disk_file::mmap): Ditto.
	(fhandler_disk_file::fixup_mmap_after_fork): Ditto.
	(fhandler_dev_mem::mmap): Ditto.
	(fhandler_dev_mem::fixup_mmap_after_fork): Ditto.
	* fhandler_mem.cc (fhandler_dev_mem::write): Call getsystempagesize
	instead of getpagesize.
	(fhandler_dev_mem::read): Ditto.
	(fhandler_dev_mem::fstat): Ditto.
	(fhandler_dev_mem::mmap): Move to mmap.cc.
	(fhandler_dev_mem::munmap): Ditto.
	(fhandler_dev_mem::msync): Ditto.
	(fhandler_dev_mem::fixup_mmap_after_fork): Ditto.
	* fhandler_proc.cc (format_proc_meminfo): Call getsystempagesize
	instead of getpagesize.
	* fhandler_process.cc (format_process_stat): Ditto.
	(format_process_status): Ditto.
	(get_mem_values): Ditto.
	* mmap.cc: Fix formatting.  Try to make more readable and modular.
	Take advantage of pagesize==granularity.
	(gen_protect): New static function to evaluate Windows
	protection bits from POSIX protection and flags.
	(gen_access): Ditto for Windows access mode.
	(VirtualProt9x): Wrapper function to call VirtualProtect on 9x.
	(VirtualProtNT): Ditto for NT.
	(VirtualProtEx9x): Ditto for VirtualProtectEx on 9x.
	(VirtualProtExNT): Ditto for NT.
	(CreateMapping9x): Wrapper function for creating a mapping handle on 9x.
	(CreateMappingNT): Ditto for NT.
	(MapView9x): Wrapper function to map a view on 9x.
	(MapViewNT): Ditto for NT.
	(mmap_funcs_9x): Structure containing function pointers to wrapper
	functions for 9x.
	(mmap_funcs_nt): Ditto for NT.
	(mmap_func): Pointer to wrapper functions used in subsequent code.
	(mmap_init): Initialize mmap_func depending on OS.
	(class mmap_record): Use sensible member names.  Add POSIX protection
	member. Drop Windows access flags member.  Constify more methods.
	Use accessors instead of direct member access inside of own methods.
	(mmap_record::gen_protect): Class wrapper to evaluate matching
	Windows protection bits.
	(mmap_record::gen_access): Ditto for Windows access flags.
	(mmap_record::compatible_flags): New function to check if flags are
	compatible with flags of existing map.
	(list::add_record): Drop offset and length arguments.
	(class map): Change counters to unsigned.  Match usage throughout.
	(mmapped_areas): Convert from pointer to global struct.
	(mmap_record::alloc_page_map): Simplify.
	(mmap_record::map_pages): Ditto.
	(mmap_record::fixup_page_map): Delete.
	(mmap64): Simplify.  Add workaround for Windows 98 bug.  Fix bug on
	NT that existing anonymous mappings weren't searched for a match.
	(munmap): Add workaround for Windows 98 bug.
	(msync): Simplify.
	(mprotect): Handle existing maps correctly.
	(mlock): Add local pagesize variable and enlightening comment.
	(fhandler_disk_file::mmap): Main functionality now in CreateMapping/
	MapView wrapper functions.
	(fhandler_disk_file::fixup_mmap_after_fork): Call MapView wrapper.
	(fhandler_dev_mem::mmap): Moved from fhandler_mem.cc.  Simplify by
	calling MapViewNT.
	(fhandler_dev_mem::munmap): Moved from fhandler_mem.cc.
	(fhandler_dev_mem::msync): Ditto.
	(fhandler_dev_mem::fixup_mmap_after_fork): Ditto.  Call MapViewNT.
	(fixup_mmaps_after_fork): Restructure and hopefully speed up loop for
	setting protection and memory content on MAP_PRIVATE maps.
	* ntdll.h (AT_ROUND_TO_PAGE): Remove define.
	(AT_EXTENDABLE_FILE): Add define.
	(NtCreateSection): Add prototype.
	* syscalls.cc (getpagesize): Return granularity as pagesize now.
	(getsystempagesize): New function to retrieve "real" pagesize.
	(getshmlba): Delete since it's replaced by getpagesize now.
	* wincap.h (wincaps::has_mmap_alignment_bug): New element.
	* wincap.cc: Implement above element throughout.
	* winsup.h (getshmlba): Drop prototype.
	(getsystempagesize): Add prototype.
	(mmap_init): Ditto.
	* include/sys/mman.h: (Not yet) define MAP_NORESERVE.
@
text
@d73 1
d82 1
@


1.34
log
@	* autoload.cc (NtLockVirtualMemory): Import.
	(NtUnlockVirtualMemory): Import.
	(GetProcessWorkingSetSize): Import.
	(SetProcessWorkingSetSize): Import.
	* cygwin.din (mlock): Export.
	(munlock): Export.
	* mmap.cc (mlock): New function.
	(munlock): Ditto.
	* ntdll.h (STATUS_WORKING_SET_QUOTA): Define.
	(LOCK_VM_IN_WSL): Define.
	(LOCK_VM_IN_RAM): Define.
	(NtLockVirtualMemory): Declare.
	(NtUnlockVirtualMemory): Declare.
	* sysconf.cc (sysconf): Implement _SC_MEMLOCK_RANGE.
	* wincap.h: Implement has_working_virtual_lock throughout.
	* wincap.cc: Ditto.
	* include/cygwin/version.h: Bump API minor version.
	* include/sys/mman.h (mlock): Declare,
	(munlock): Declare.
@
text
@d41 1
d109 1
@


1.33
log
@	* fhandler.h (class fhandler_dev_raw): Delete current_position and
	eof_detected status flag.  Delete is_eom and is_eof methods.
	Move drive_size, bytes_per_sector, eom_detected status flag, as well
	as the methods read_file, write_file, raw_read and raw_write to ...
	(class fhandler_dev_floppy): ... here. Remove is_eom and is_eof
	methods.  Add dup method.
	* fhandler_floppy.cc (IS_EOM): New macro.
	(fhandler_dev_floppy::is_eom): Remove.
	(fhandler_dev_floppy::is_eof): Remove.
	(fhandler_dev_floppy::fhandler_dev_floppy): Initialize status flags.
	(fhandler_dev_floppy::get_drive_info): Only call EX functions on
	systems supporting them and stop suffering strange delays.
	(fhandler_dev_floppy::read_file): Move here, drop setting
	current_position.
	(fhandler_dev_floppy::write_file): Move here, drop setting
	current_position.
	(fhandler_dev_floppy::open): Rearrange comment.
	(fhandler_dev_floppy::dup): New method.
	(fhandler_dev_floppy::get_current_position): New inline method.  Use
	instead of former current_position were appropriate.
	(fhandler_dev_floppy::raw_read): Move here.  Drop EOF handling.
	(fhandler_dev_floppy::raw_write): Move here.  Drop EOF handling.
	(fhandler_dev_floppy::lseek): Remove useless conditions.  Convert
	sector_aligned_offset to LARGE_INTEGER to improve SetFilePointer call.
	(fhandler_dev_floppy::ioctl): Move blocksize check in RDSETBLK case
	to here.
	* fhandler_raw.cc (fhandler_dev_raw::is_eom): Remove.
	(fhandler_dev_raw::is_eof): Remove.
	(fhandler_dev_raw::write_file): Remove.
	(fhandler_dev_raw::read_file): Remove.
	(fhandler_dev_raw::raw_read): Remove.
	(fhandler_dev_raw::raw_write): Remove.
	(fhandler_dev_raw::dup): Drop copying removed members.
	(fhandler_dev_raw::ioctl): Drop blocksize testing.
	* wincap.h: Implement has_disk_ex_ioctls throughout.
	* wincap.cc: Ditto.
	(wincap_vista): Preliminary wincaps for Windows Vista/Longhorn.
	(wincapc::init): Add Vista/Longhorn handling.
@
text
@d65 1
d132 1
@


1.32
log
@* cygerrno.h: Make multi-inclusion safe.
* fhandler_termios.cc (fhandler_termios::tcsetpgrp): Deal with EINTR.
* dcrt0.cc (dll_crt0_0): Accommodate init_console_handler argument change.
* winsup.h: Ditto.
* fhandler_tty.cc (fhandler_tty_slave::open): Ditto.
* exceptions.cc (init_console_handler): Ditto.  Ignore console events if we're
not attached to a terminal.
* fhandler_tty.cc (fhandler_tty_slave::open): Ditto.
* wincap.cc: Implement has_null_console_handler_routine throughout.
* wincap.h: Ditto.
@
text
@d64 1
d130 1
@


1.31
log
@* wincap.h (wincaps::detect_win16_exe): Declare.
(wincapc::detect_win16_exe): Implement.
* wincap.cc: Populate detect_win16_exe where appropriate.
* spawn.cc (spawn_guts): Only go out of the way to detect 16-bit apps on
systems which are flummoxed by them.
@
text
@d63 1
d128 1
@


1.30
log
@	Revert previous patch.
	* autoload.cc (GetVolumePathNamesForVolumeNameA): Remove.
	* autoload.cc (GetVolumeNameForVolumeMountPointA): Add.
	* syscalls.cc (sync): Rewrite guid case to skip floppies also on
	Windows 2000.
@
text
@d62 1
d126 1
@


1.29
log
@	* syscalls.cc (sync): Use renamed has_get_volume_pathnames wincap.
	* wincap.h (wincaps::has_get_volume_pathnames): Rename from
	has_guid_volumes
	* wincap.cc: Accomodate above rename throughout.  Set to false on
	Windows 2000.
@
text
@d61 1
a61 1
  unsigned has_get_volume_pathnames			: 1;
d124 1
a124 1
  bool	IMPLEMENT (has_get_volume_pathnames)
@


1.28
log
@	* fhandler.h (class fhandler_socket): Declare new method
	set_socketpair_eids.
	* fhandler_socket.cc (fhandler_socket::set_socketpair_eids): New method.
	(fhandler_socket::dup): Duplicate sec_pipe if necessary.
	(fhandler_socket::listen): Only create sec_pipe if named pipes are
	available. Initialized sec_peer_pid to 0 as on Linux.
	(fhandler_socket::connect): Only run eid credential transaction if
	named pipes are available.  Fake otherwise. Initialized sec_peer_pid
	to 0 as on Linux.
	(fhandler_socket::accept): Ditto.
	(fhandler_socket::close): Move closing sec_pipe handle from here...
	(fhandler_socket::~fhandler_socket): ... to here.
	* net.cc (socketpair): Set eid credentials by calling
	fhandler_socket::set_socketpair_eids() on both socket ends.
	* wincap.h (wincaps::has_named_pipes): New element.
	* wincap.cc: Implement above element throughout.
@
text
@d61 1
a61 1
  unsigned has_guid_volumes				: 1;
d124 1
a124 1
  bool	IMPLEMENT (has_guid_volumes)
@


1.27
log
@	* autoload.cc (FindFirstVolumeA): Add.
	(FindNextVolumeA): Add.
	(FindVolumeClose): Add.
	(GetVolumePathNamesForVolumeNameA): Add.
	* fhandler.h (class fhandler_base): Declare new method fsync.
	* fhandler.cc (fhandler_base::fsync): New method.
	* syscalls.cc (fsync): Move functionality into fhandler method fsync.
	Just call this method from here.
	(sync_worker): New static function.
	(sync): Fill with life for NT systems.
	* wincap.h (wincaps::has_guid_volumes): New element.
	* wincap.cc: Implement above element throughout.
@
text
@d46 1
d109 1
@


1.26
log
@copyright
@
text
@d60 1
d122 1
@


1.25
log
@	* cygwin.din: Export getpriority and setpriority.
	* fork.cc (fork_parent): Copy parent's nice value into child.
	* spawn.cc (spawn_guts): Ditto.
	* miscfuncs.cc (winprio_to_nice): New function.
	(nice_to_winprio): Ditto.
	* pinfo.cc (pinfo_init): If parent is not a Cygwin process, set
	default nice value according to current Win32 priority class.
	* pinfo.h (class _pinfo): Add nice member.
	* syscalls.cc (setpriority): New function, only implementing
	PRIO_PROCESS for now.
	(getpriority): Ditto.
	(nice): Just call setpriority.
	* wincap.h (wincaps::has_extended_priority_class): New element.
	* wincap.cc: Implement above element throughout.
	* winsup.h: Add prototypes for winprio_to_nice and nice_to_winprio.
	* include/limits.h (NZERO): New define.
	* include/cygwin/types.h (id_t): New datatype.
	* include/cygwin/version.h: Bump API minor version.
	* include/sys/resource.h: Add PRIO_XXX defines and prototypes for
	getpriority and setpriority.
@
text
@d3 1
a3 1
   Copyright 2001, 2002, 2003, 2004 Red Hat, Inc.
@


1.24
log
@* cygthread.cc (cygthread::stub): Add better debug output.
(cygthread::cygthread): Ditto.
(cygthread::terminate_thread): Ditto.  Move inuse test earlier or suffer
infinite loop.
* pinfo.cc (_pinfo::dup_proc_pipe): Close handle if DuplicateHandle fails and
process no longer exists.
* spawn.cc (spawn_guts): Create process in suspended state if OS demands it.
* wincap.cc: Add "start_proc_suspended" throughout.
* wincap.h (wincaps): Ditto.
(wincapc): Ditto.
@
text
@d59 1
d120 1
@


1.23
log
@	* errno.cc (errmap): Map ERROR_BEGINNING_OF_MEDIA and
	ERROR_SETMARK_DETECTED to EIO instead of ESPIPE.
	Handle ERROR_FILEMARK_DETECTED.
	* fhandler_tape.cc (TAPE_FUNC): Add comment that ERROR_BUS_RESET
	has still to be handled correctly.
	(fhandler_dev_tape::open): Accomodate fact that get.mt_dsreg
	also contains density code.
	(fhandler_dev_tape::ioctl): Rearrange slightly.  Reset devbuf also on
	MTNOP, MTWSM, MTSETBLK, MTSETDRVBUFFER, MTSETPART and MTMKPART.
	(fhandler_dev_tape::tape_set_pos): Rearrange.  Match behaviour to
	the Linux tape driver.
	(fhandler_dev_tape::tape_status): Call IOCTL_STORAGE_GET_MEDIA_TYPES_EX
	if available.  Return device type and density code in appropriate
	mtget members.
	* wincap.h (wincaps::has_ioctl_storage_get_media_types_ex): New element.
	* wincap.cc: Implement above element throughout.
	* include/cygwin/mtio.h: Add tape device types as returned by
	IOCTL_STORAGE_GET_MEDIA_TYPES_EX.
	(MT_TAPE_INFO): Use above type codes.
	(struct mtget): Change mt_dsreg comment.
@
text
@d58 1
d118 1
@


1.22
log
@* debug.h (console_printf): Define for non-debugging condition.
* cygtls.h (_threadinfo::lock): Remove wait argument.
(_threadinfo::interrupt_setup): Remove retaddr argument.
* exceptions.cc (_threadinfo::interrupt_setup): Ditto.
(_threadinfo::interrupt_now): Accommodate change to interrupt_setup argument.
(setup_handler): Ditto.  Always lock sig stack prior to determining interrupt
method.
* gendef (_sigfe): Correct thinko regarding cmpxchg.
(_sigbe): Ditto.
(_threadinfo::lock): Ditto.
(_threadinfo::pop): Eliminate left-over stack unlock.
* sigproc.cc (proc_subproc): Chnage debugging output to printed warning.
@
text
@d57 1
d116 1
@


1.21
log
@* sigproc.cc (sigproc_terminate): Don't close sendsig handle when execing since
we're not closing what we think we're closing.
(sig_send): Improve debugging when exiting due to no_signals_available.
* wincap.h (wincaps::cant_debug_dll_entry): New element.
* wincap.cc: Implement above element throughout.
* dcrt0.cc (initial_env): Accommodate changes necessary to allow initial
debugging for systems which do not allow debugging in dll_entry.
(dll_crt0_0): Add initial_env call back here.
* Makefile.in (install-man): Use mandir as target for installation.
* include/cygwin/version.h: Bump DLL minor number to 7 (should have been done
earlier).
@
text
@d3 1
a3 1
   Copyright 2001, 2002 Red Hat, Inc.
@


1.20
log
@* Makefile.in: Add libusr32.a to DLL_IMPORTS.
* wincap.h (wincaps::is_server): New flag.
(wincapc::version): Change type to OSVERSIONINFOEX.
(wincapc::is_server): New function.
* wincap.cc (wincap_unknown::is_server): New initializer.
(wincap_95): Ditto.
(wincap_95osr2): Ditto.
(wincap_98): Ditto.
(wincap_me): Ditto.
(wincap_nt3): Ditto.
(wincap_nt4): Ditto.
(wincap_nt4sp4): Ditto.
(wincap_2000): Ditto.
(wincap_xp): Ditto.
(wincapc::init): Adapt to OSVERSIONINFOEX.  Add detection of NT server systems.
* sched.cc: Include windows.h and registry.h.
(sched_rr_get_interval): Re-implement for NT systems.
@
text
@d56 1
d114 1
@


1.20.6.1
log
@merge from trunk.
@
text
@a55 1
  unsigned cant_debug_dll_entry				: 1;
a112 1
  bool	IMPLEMENT (cant_debug_dll_entry)
@


1.19
log
@* syscalls.cc (mount): Don't check win32_path when doing cygdrive mount.
@
text
@d20 1
d60 3
a62 3
  OSVERSIONINFO version;
  char          osnam[40];
  void          *caps;
d71 1
a71 1
#define IMPLEMENT(cap) cap() const { return ((wincaps *)this->caps)->cap; }
d77 1
@


1.18
log
@	* fhandler_socket.cc (SECRET_EVENT_NAME): Remove.
	(ENTROPY_SOURCE_NAME): Ditto.
	(secret_event_name): New static function.  Create shared event name
	with "Global\" prefix on systems supporting terminal services.
	(fhandler_socket::set_connect_secret): Fix conditional.
	(fhandler_socket::create_secret_event): Create secret event using
	secret_event_name().
	(fhandler_socket::close_secret_event): Ditto.
	* shared.cc (shared_name): Create shared object name with "Global\"
	prefix on systems supporting terminal services.
	* wincap.cc: Set has_terminal_services capability throughout.
	(wincap_2003): New global object representing Windows 2003 Server
	capabilities.
	(wincapc::init): Accomodate Windows 2003 Server.
	* wincap.h (struct wincaps): Add has_terminal_services capability.
@
text
@d54 1
d110 1
@


1.17
log
@* wincap.h (wincaps:pty_needs_alloc_console): New element.
(wincapc:pty_needs_alloc_console): New function.
* wincap.cc: Add pty_needs_alloc_console throughout.
* fhandler_tty.cc (fhandler_tty_slave::open): Open an "invisible" console on
first pty allocation.
@
text
@d53 1
d108 1
@


1.16
log
@	* wincap.h (wincap): Remove unnecessary definition of
	supports_sparse_files.
	* wincap.cc: Ditto.
@
text
@d52 1
d106 1
@


1.15
log
@w32api:

        * include/winioctl.h (FSCTL_SET_SPARSE): Define.

cygwin:

        * wincap.h (wincaps::supports_sparse_files): New flag.
        (wincapc::supports_sparse_files): New method.
        * wincap.cc (wincap_unknown): Define value for the new flag.
        (wincap_95): Ditto.
        (wincap_95osr2): Ditto.
        (wincap_98): Ditto.
        (wincap_98se): Ditto.
        (wincap_me): Ditto.
        (wincap_nt3): Ditto.
        (wincap_nt4): Ditto.
        (wincap_nt4sp4): Ditto.
        (wincap_2000): Ditto.
        (wincap_xp): Ditto.
        * path.h (path_conv::fs_flags): New method.
        * fhandler_disk_file.cc: Include winioctl.h for DeviceIoControl.
        (fhandler_disk_file::open): Set newly created and truncated files as
        sparse on platforms that support it.
@
text
@a51 1
  unsigned supports_sparse_files                        : 1;
a104 1
  bool  IMPLEMENT (supports_sparse_files)
@


1.14
log
@* shared.cc (open_shared): Revert to "old" method for shared memory location if
!wincap.needs_memory_protection.
* wincap.cc: Implement needs_memory_protection throughout.
* wincap.h: Ditto.
@
text
@d52 1
d106 1
@


1.14.12.1
log
@merge from trunk
@
text
@a51 1
  unsigned pty_needs_alloc_console			: 1;
a104 1
  bool  IMPLEMENT (pty_needs_alloc_console)
@


1.14.12.2
log
@merge from trunk
@
text
@a52 1
  unsigned has_terminal_services			: 1;
a106 1
  bool  IMPLEMENT (has_terminal_services)
@


1.14.12.3
log
@merge from trunk
@
text
@a53 1
  unsigned has_switch_to_thread				: 1;
a108 1
  bool  IMPLEMENT (has_switch_to_thread)
@


1.13
log
@	* fhandler_serial.cc: Change 'must_init_serial_line capability'
	to 'supports_reading_modem_output_lines' throughout (negated meaning).
	* wincap.cc: Ditto.
	* wincap.h: Ditto.
@
text
@d51 1
d104 1
@


1.12
log
@	* fhandler_serial.cc: Use must_init_serial_line capability throughout.
	* wincap.cc: Set flag must_init_serial_line appropriately.
	* wincap.h: Add flag must_init_serial_line.
@
text
@d50 1
a50 1
  unsigned must_init_serial_line                        : 1;
d102 1
a102 1
  bool  IMPLEMENT (must_init_serial_line)
@


1.11
log
@* winver.rc: Add more words to copyright.
@
text
@d50 1
d102 1
@


1.10
log
@* dcrt0.cc (dll_crt0_1): Initialize wincap and check for sanity before running
global ctors.
* wincap.h (wincap): Eliminate constructor.  Default is to zero memory, anyway.
* wincap.cc (wincap): Copy this on fork to avoid initialization in forked
processes.
@
text
@d3 1
a3 1
   Copyright 2001 Red Hat, Inc.
@


1.9
log
@	* times.cc (utimes): Use FILE_WRITE_ATTRIBUTES even on 9x/Me when
	opening file for writing timestamp.
	* wincap.cc: Remove flag has_specific_access_rights.
	* wincap.h: Ditto.
@
text
@a58 1
  wincapc (): caps (NULL) {}
@


1.8
log
@* autoload.cc: Add dynamic load statements for 'ZwQueryInformationProcess' and
'ZwQueryVirtualMemory'.
* fhandler.h: Change type of bufalloc and filesize members of fhandler_virtual
from int to size_t.  Change type of position member from __off32_t to
__off64_t.  Add new fileid member to fhandler_virtual class.  Make seekdir take
an __off64_t argument.  Make lseek take an __off64_t argument.  Add
fill_filebuf method to fhandler_virtual.  Add fill_filebuf method to
fhandler_proc.  Add fill_filebuf method to fhandler_registry.  Add fill_filebuf
method to fhandler_process.  Add saved_pid and saved_p members to
fhandler_process.
* fhandler_proc.cc (proc_listing_array): Add 'loadavg', 'meminfo', and 'stat'.
(proc_fhandlers array): Ditto.
(fhandler_proc::open): Use fill_filebuf to flesh out the file contents.
(fhandler_proc::fill_filebuf): New method.
(fhandler_proc::format_proc_meminfo): Ditto.
(fhandler_proc::format_proc_stat): Ditto.
(fhandler_proc::format_proc_uptime): Ditto.
* fhandler_process.cc (process_listing): Add 'stat' and 'statm'.
(fhandler_process::fstat): Find the _pinfo structure for the process named in
the filename.  Return ENOENT if the process is no longer around.  Set the gid
and uid fields of the stat structure.
(fhandler_process::open): Store pid and pointer to _pinfo structure in
saved_pid and saved_p respectively.  Use fill_filebuf to flesh out file
contents.
(fhandler_proc::fill_filebuf): New method.
(format_process_stat): New function.
(format_process_status): Ditto.
(format_process_statm): Ditto.
(get_process_state): Ditto.
(get_mem_values): Ditto.
* fhandler_registry.cc (fhandler_registry::seekdir): Change argument type from
__off32_t to __off64_t.
(fhandler_registry::fill_filebuf): New method.
* fhandler_virtual.cc (fhandler_virtual::seekdir): Change argument type from
__off32_t to __off64_t.
(fhandler_virtual::lseek): Ditto.
(fhandler_virtual::fill_filebuf): New method.
(fhandler_virtual::fhandler_virtual): Initialise fileid to -1.
* wincap.cc: Set flag has_process_io_counters appropriately.
* wincap.h: Add flag has_process_io_counters.
@
text
@a25 1
  unsigned has_specific_access_rights                   : 1;
a77 1
  bool  IMPLEMENT (has_specific_access_rights)
@


1.7
log
@	* cygwin.din (fstat64): New symbol.
	(ftruncate64): Ditto.
	(lseek64): Ditto.
	(lstat64): Ditto.
	(mmap64): Ditto.
	(seekdir64): Ditto.
	(stat64): Ditto.
	(telldir64): Ditto.
	(truncate64): Ditto.
	* dir.cc (telldir64): New function.
	(telldir): Call telldir64().
	(seekdir64): New function.
	(seekdir): Call seekdir64().
	* fhandler.h: Redefine all methods using __off32_t to use __off64_t.
	* fhandler.cc: Use __off64_t and struct __stat64 throughout.
	* fhandler_clipboard.cc: Ditto.
	* fhandler_disk_file.cc: Ditto.
	* fhandler_dsp.cc: Ditto.
	* fhandler_floppy.cc: Ditto.
	* fhandler_mem.cc: Ditto.
	* fhandler_random.cc: Ditto.
	* fhandler_socket.cc: Ditto.
	* fhandler_tape.cc: Ditto.
	* fhandler_zero.cc: Ditto.
	* pipe.cc: Ditto.
	* glob.c: Ditto, call lstat64 and stat64 in Cygwin.
	* mmap.cc: Use __off64_t throughout.
	(mmap64): New function.
	* sec_acl.cc (acl_worker): Use struct __stat64, call stat64 and lstat64.
	* syscalls.cc (lseek64): New function.
	(stat64_to_stat32): Ditto.
	(fstat64): Ditto.
	(stat64): Ditto.
	(lstat64): Ditto.
	(ftruncate64): Ditto.
	(truncate64): Ditto.
	(_fstat): Call fstat64.
	(_stat): Call stat64.
	(cygwin_lstat): Rename to avoid declaration problem.  Call lstat64.
	(stat_worker): Use struct __stat64.
	(access): Ditto.
	(ftruncate): Call ftruncate64.
	(truncate): Call truncate64.
	* wincap.cc: Set flag has_64bit_file_access appropriately.
	* wincap.h: Add flag has_64bit_file_access.
	* winsup.h (ILLEGAL_SEEK): Define as __off64_t.
	(stat_dev): Declare using struct __stat64.
	(stat_worker): Ditto.
	* include/cygwin/stat.h (struct __stat32): Define if compiling Cygwin.
	(struct __stat64): Ditto.
	(struct stat): Revert definition with explicitly sized datatypes.
	Eliminate sized field names.
	* include/cygwin/types.h (blksize_t): New type.
	(__blkcnt32_t): Ditto.
	(__blkcnt64_t): Ditto.
	(blkcnt_t): Ditto.
@
text
@d50 1
d103 1
@


1.6
log
@* external.cc (cygwin_internal): Initialize various internal settings if
required to allow use of some things from user loaded DLL.
(CW_STRACE_ON): Add new feature.
(CW_CYGWIN_PID_TO_WINPID): Ditto.
* pinfo.cc (set_myself): Call "strace.hello" to initiate possible strace
session.
(pinfo::init): Guard against dereferencing uninitialized myself.
* sigproc.cc (wait_sig): Call strace.hello() when __SIGTRACE "signal" received.
* strace.cc (strace::hello): New method.
* wincap.cc (wincapc::init): Avoid initializing if already initialized.
* wincap.h (wincapc::wincapc): New method.
* include/sys/cygwin.h: Add new CW_ enums.  Kludge typedefs of {g,u}id_t if
required.
* strace.h (strace::hello): Declare new method.
@
text
@d49 1
d101 1
@


1.5
log
@Eliminate excess whitespace.
@
text
@d58 1
@


1.4
log
@	* autoload.cc: Add load statement for `NtOpenFile'.
	* fhandler.h (fhandler_dev_raw::get_unit): New method.
	(fhandler_dev_tape::norewind): Eliminate.
	(fhandler_dev_tape::is_rewind_device): New method.
	* fhandler_raw.cc (fhandler_dev_raw::open): Open new
	fixed device name devices using NT internal method.
	Keep calling fhandler_base::open() for old mount table
	device mapping compatibility devices.
	(fhandler_dev_raw::fstat): Eliminate.  Settings are done
	by fhandler_base::fstat() already.
	* fhandler_tape.cc: Remove `norewind' usage throughout.
	* ntdll.h: Define FILE_SYNCHRONOUS_IO_NONALERT.
	Define struct _IO_STATUS_BLOCK.
	Declare NtOpenFile().
	* path.cc (get_raw_device_number): Add new approach for
	using fixed device names.
	(win32_device_name): Ditto.
	(get_device_number): Ditto.  Require POSIX path to begin
	with "/dev/".
	(mount_info::conv_to_win32_path): Call win32_device_name()
	instead of get_device_number() after evaluating mount points
	to allow changing the win32 destination path again.
	* security.cc (str2buf2uni): Remove `static' to be able to
	call function from fhandler_dev_raw::open().
	* wincap.cc: Set flag has_raw_devices appropriately.
	* wincap.h: Add flag has_raw_devices.
@
text
@d15 1
a15 1
{ 
d61 1
a61 1
  
@


1.3
log
@        * uname.cc (uname):  Use `wProcessorLevel' unless OS sets it wrong.
        Use `dwProcessorType' then instead.
        * wincap.cc: Set flag has_valid_processorlevel appropriately.
        * wincap.h: Add flag has_valid_processorlevel.
@
text
@d47 1
d97 1
@


1.2
log
@        * fhandler.cc (fhandler_base::set_inheritance): If available,
        use SetHandleInformation() to set inheritance.
        * wincap.cc: Set flag has_set_handle_information_on_console_handles
        appropriately.
        * wincap.h: Add flag has_set_handle_information_on_console_handles.
@
text
@d47 1
d96 1
@


1.2.2.1
log
@Merged changes from HEAD
@
text
@d15 1
a15 1
{
a46 2
  unsigned has_raw_devices				: 1;
  unsigned has_valid_processorlevel			: 1;
d59 1
a59 1

a94 2
  bool  IMPLEMENT (has_raw_devices)
  bool  IMPLEMENT (has_valid_processorlevel)
@


1.2.2.2
log
@Merged changes from HEAD
@
text
@a48 1
  unsigned has_64bit_file_access			: 1;
a57 1
  wincapc (): caps (NULL) {}
a98 1
  bool  IMPLEMENT (has_64bit_file_access)
@


1.2.2.3
log
@Merged changes from HEAD
@
text
@d26 1
a49 1
  unsigned has_process_io_counters                      : 1;
d59 1
d78 1
a101 1
  bool  IMPLEMENT (has_process_io_counters)
@


1.2.2.4
log
@Merged changes from HEAD
@
text
@d3 1
a3 1
   Copyright 2001, 2002 Red Hat, Inc.
@


1.2.2.5
log
@Merged changes from HEAD
@
text
@a49 1
  unsigned supports_reading_modem_output_lines          : 1;
a100 1
  bool  IMPLEMENT (supports_reading_modem_output_lines)
@


1.1
log
@        * Makefile.in: Build wincap.o.
        * wincap.cc: New file.
        * wincap.h: Ditto.
        * autoload.cc: Add dynamic load statement for `CreateHardLinkA'.
        * dcrt0.cc (os_being_run): Eliminated.
        (osname): Ditto.
        (iswinnt): Ditto.
        (set_os_type): Ditto.
        (dll_crt0_1): Call wincap.init() instead of set_os_type().
        (_dll_crt0): Ditto.
        * environ.cc (set_chunksize): New function.
        (parse_thing): `forkchunk' setting now invokes function `set_chunksize'.
        * fork.cc (chunksize): Eliminated. Moved to be member of wincap.
        * host_dependent.h: Removed.
        * syscalls.cc (_link): Try using `CreateHardLinkA' first, if available.
        * cygheap.cc, dcrt0.cc, delqueue.cc, dir.cc,
        environ.cc, fhandler.cc, fhandler.h, fhandler_console.cc,
        fhandler_mem.cc, fork.cc, mmap.cc, net.cc, pinfo.cc, pinfo.h,
        security.cc, syscalls.cc, sysconf.cc, syslog.cc, thread.cc,
        times.cc, tty.cc, uinfo.cc, uname.cc, winsup.h: Use new wincap
        capability check throughout.
        * winsup.h: Include wincap.h. Eliminate extern declarations of
        `os_being_run' and `iswinnt'. Eliminate `os_type" definition.
        * include/cygwin/version.h: Bump version to 1.3.4.
@
text
@d33 1
d81 1
@

