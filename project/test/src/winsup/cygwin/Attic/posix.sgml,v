head	1.88;
access;
symbols
	cygwin-1_7_33-release:1.87.2.1
	cygwin-1_7_32-release:1.87
	cygwin-1_7_31-release:1.87
	cygwin-1_7_30-release:1.87
	cygwin-1_7_29-release:1.87
	cygwin-1_7_29-release-branchpoint:1.87.0.2
	cygwin-pre-user-db:1.87
	cygwin-1_7_28-release:1.87
	cygwin-1_7_27-release:1.87
	cygwin-1_7_26-release:1.87
	cygwin-1_7_25-release:1.86
	cygwin-1_7_24-release:1.86
	cygwin-1_7_23-release:1.86
	cygwin-1_7_22-release:1.86
	cygwin-1_7_21-release:1.86
	cygwin-1_7_20-release:1.84
	cygwin-1_7_19-release:1.82
	cygwin-64bit-postmerge:1.80
	cygwin-64bit-premerge-branch:1.80.0.2
	cygwin-64bit-premerge:1.80
	cygwin-1_7_18-release:1.80
	post-ptmalloc3:1.79.2.1
	pre-ptmalloc3:1.79.2.1
	cygwin-1_7_17-release:1.79
	cygwin-64bit-branch:1.79.0.2
	cygwin-1_7_16-release:1.79
	cygwin-1_7_15-release:1.77
	cygwin-1_7_14_2-release:1.77
	cygwin-1_7_14-release:1.77
	cygwin-1_7_12-release:1.77
	cygwin-1_7_11-release:1.76
	cygwin-1_7_10-release:1.75
	signal-rewrite:1.70.0.2
	pre-notty:1.68
	cygwin-1_7_9-release:1.54
	cv-post-1_7_9:1.53.0.2
	cygwin-1_7_8-release:1.53
	cygwin-1_7_7-release:1.48
	cygwin-1_7_5-release:1.46
	cygwin-1_7_4-release:1.45
	cygwin-1_7_3-release:1.45
	cygwin-1_7_2-release:1.45
	fifo_doover3:1.40.0.2
	cygwin-1_7_1-release:1.40
	prefifo:1.35
	cv-branch-2:1.34.0.2
	pre-ripout-set_console_state_for_spawn:1.15
	EOL_registry_mounts:1.13
	preoverlapped:1.10
	drop_9x_support_start:1.3
	cr-0x5f1:1.3.0.26
	cv-branch:1.3.0.24
	pre-ptymaster-archetype:1.3
	cr-0x3b58:1.3.0.22
	cr-0x5ef:1.3.0.20
	after-mmap-privanon-noreserve:1.3
	after-mmap-revamp:1.3
	before-mmap-revamp:1.3
	cgf-more-exit-sync:1.3
	post_wait_sig_exit:1.3
	pre_wait_sig_exit:1.3
	reparent-point:1.3
	noreparent:1.3.0.18
	cr-0x5e6:1.3.0.16
	cr-0x9e:1.3.0.14
	cr-0x9d:1.3.0.12
	cgf-deleteme:1.3.0.10
	pre-sigrewrite:1.3
	corinna-01:1.3
	cr-0x9c:1.3.0.8
	cr-0x9b:1.3.0.6
	cr-0x99:1.3
	Z-emcb-cygwin_daemon:1.3.0.2
	w32api-2_2:1.3
	mingw-runtime-2_4:1.3
	pre-cgf-merge:1.3
	cgf-dev-branch:1.3.0.56
	predaemon:1.3
	cygwin_daemon_merge_HEAD:1.3
	pregp02r1:1.3.0.34
	cygnus_cvs_20020108_pre:1.3
	Z-cygwin_daemon_merge-new_HEAD:1.3
	Z-cygwin_daemon_merge_HEAD:1.3
	cygwin_daemon:1.3.0.4;
locks; strict;
comment	@# @;
expand	@o@;


1.88
date	2014.08.14.19.31.33;	author corinna;	state dead;
branches;
next	1.87;

1.87
date	2013.11.26.17.11.08;	author corinna;	state Exp;
branches
	1.87.2.1;
next	1.86;

1.86
date	2013.06.24.15.12.40;	author yselkowitz;	state Exp;
branches;
next	1.85;

1.85
date	2013.06.13.12.50.28;	author corinna;	state Exp;
branches;
next	1.84;

1.84
date	2013.06.07.08.43.01;	author corinna;	state Exp;
branches;
next	1.83;

1.83
date	2013.06.07.08.28.25;	author corinna;	state Exp;
branches;
next	1.82;

1.82
date	2013.05.21.19.04.49;	author corinna;	state Exp;
branches;
next	1.81;

1.81
date	2013.05.21.10.07.55;	author corinna;	state Exp;
branches;
next	1.80;

1.80
date	2012.11.21.20.13.06;	author yselkowitz;	state Exp;
branches;
next	1.79;

1.79
date	2012.07.18.11.17.25;	author corinna;	state Exp;
branches
	1.79.2.1;
next	1.78;

1.78
date	2012.05.10.08.35.22;	author corinna;	state Exp;
branches;
next	1.77;

1.77
date	2012.03.30.11.29.56;	author corinna;	state Exp;
branches;
next	1.76;

1.76
date	2012.02.22.01.58.24;	author yselkowitz;	state Exp;
branches;
next	1.75;

1.75
date	2012.01.06.07.12.17;	author yselkowitz;	state Exp;
branches;
next	1.74;

1.74
date	2012.01.01.18.54.25;	author yselkowitz;	state Exp;
branches;
next	1.73;

1.73
date	2011.12.30.20.22.27;	author yselkowitz;	state Exp;
branches;
next	1.72;

1.72
date	2011.11.08.09.24.58;	author corinna;	state Exp;
branches;
next	1.71;

1.71
date	2011.10.28.09.26.42;	author corinna;	state Exp;
branches;
next	1.70;

1.70
date	2011.08.03.19.17.02;	author yselkowitz;	state Exp;
branches;
next	1.69;

1.69
date	2011.07.21.09.39.21;	author yselkowitz;	state Exp;
branches;
next	1.68;

1.68
date	2011.05.25.06.10.24;	author corinna;	state Exp;
branches;
next	1.67;

1.67
date	2011.05.19.07.23.29;	author yselkowitz;	state Exp;
branches;
next	1.66;

1.66
date	2011.05.18.21.46.54;	author yselkowitz;	state Exp;
branches;
next	1.65;

1.65
date	2011.05.18.01.25.41;	author yselkowitz;	state Exp;
branches;
next	1.64;

1.64
date	2011.05.17.17.08.09;	author yselkowitz;	state Exp;
branches;
next	1.63;

1.63
date	2011.05.15.18.49.39;	author corinna;	state Exp;
branches;
next	1.62;

1.62
date	2011.05.09.08.57.46;	author yselkowitz;	state Exp;
branches;
next	1.61;

1.61
date	2011.05.06.18.53.21;	author yselkowitz;	state Exp;
branches;
next	1.60;

1.60
date	2011.05.05.06.48.51;	author corinna;	state Exp;
branches;
next	1.59;

1.59
date	2011.05.04.22.12.15;	author yselkowitz;	state Exp;
branches;
next	1.58;

1.58
date	2011.05.03.01.13.37;	author yselkowitz;	state Exp;
branches;
next	1.57;

1.57
date	2011.04.18.12.00.03;	author corinna;	state Exp;
branches;
next	1.56;

1.56
date	2011.04.15.09.22.14;	author yselkowitz;	state Exp;
branches;
next	1.55;

1.55
date	2011.03.29.10.32.40;	author corinna;	state Exp;
branches;
next	1.54;

1.54
date	2011.03.28.14.55.20;	author corinna;	state Exp;
branches;
next	1.53;

1.53
date	2011.02.10.10.51.13;	author yselkowitz;	state Exp;
branches
	1.53.2.1;
next	1.52;

1.52
date	2011.01.12.13.09.31;	author corinna;	state Exp;
branches;
next	1.51;

1.51
date	2010.11.15.12.44.57;	author corinna;	state Exp;
branches;
next	1.50;

1.50
date	2010.10.08.10.51.17;	author corinna;	state Exp;
branches;
next	1.49;

1.49
date	2010.09.11.06.53.27;	author davek;	state Exp;
branches;
next	1.48;

1.48
date	2010.08.30.14.16.01;	author corinna;	state Exp;
branches;
next	1.47;

1.47
date	2010.07.19.18.22.40;	author ericb;	state Exp;
branches;
next	1.46;

1.46
date	2010.04.12.15.36.48;	author corinna;	state Exp;
branches;
next	1.45;

1.45
date	2010.03.04.09.37.52;	author corinna;	state Exp;
branches;
next	1.44;

1.44
date	2010.03.03.15.05.19;	author corinna;	state Exp;
branches;
next	1.43;

1.43
date	2010.01.22.22.33.22;	author corinna;	state Exp;
branches;
next	1.42;

1.42
date	2010.01.15.15.40.05;	author corinna;	state Exp;
branches;
next	1.41;

1.41
date	2010.01.15.14.22.42;	author corinna;	state Exp;
branches;
next	1.40;

1.40
date	2009.11.12.14.40.47;	author corinna;	state Exp;
branches;
next	1.39;

1.39
date	2009.09.26.21.01.10;	author ericb;	state Exp;
branches;
next	1.38;

1.38
date	2009.09.25.23.55.00;	author ericb;	state Exp;
branches;
next	1.37;

1.37
date	2009.07.27.08.05.47;	author corinna;	state Exp;
branches;
next	1.36;

1.36
date	2009.07.26.09.34.35;	author corinna;	state Exp;
branches;
next	1.35;

1.35
date	2009.07.03.13.04.01;	author corinna;	state Exp;
branches;
next	1.34;

1.34
date	2009.03.23.09.46.38;	author corinna;	state Exp;
branches;
next	1.33;

1.33
date	2009.03.19.09.22.01;	author corinna;	state Exp;
branches;
next	1.32;

1.32
date	2009.03.15.13.45.01;	author corinna;	state Exp;
branches;
next	1.31;

1.31
date	2009.03.11.13.00.28;	author corinna;	state Exp;
branches;
next	1.30;

1.30
date	2009.03.11.12.03.43;	author corinna;	state Exp;
branches;
next	1.29;

1.29
date	2009.03.09.13.22.37;	author corinna;	state Exp;
branches;
next	1.28;

1.28
date	2009.03.06.16.31.25;	author corinna;	state Exp;
branches;
next	1.27;

1.27
date	2009.03.06.10.09.55;	author corinna;	state Exp;
branches;
next	1.26;

1.26
date	2009.02.19.09.22.51;	author corinna;	state Exp;
branches;
next	1.25;

1.25
date	2009.02.18.17.38.16;	author corinna;	state Exp;
branches;
next	1.24;

1.24
date	2009.02.16.20.22.38;	author corinna;	state Exp;
branches;
next	1.23;

1.23
date	2009.02.16.15.36.00;	author corinna;	state Exp;
branches;
next	1.22;

1.22
date	2009.02.13.18.39.37;	author corinna;	state Exp;
branches;
next	1.21;

1.21
date	2009.02.13.12.45.02;	author corinna;	state Exp;
branches;
next	1.20;

1.20
date	2009.02.13.12.19.25;	author corinna;	state Exp;
branches;
next	1.19;

1.19
date	2009.02.13.11.33.32;	author corinna;	state Exp;
branches;
next	1.18;

1.18
date	2009.02.05.17.30.17;	author corinna;	state Exp;
branches;
next	1.17;

1.17
date	2008.12.15.12.40.29;	author corinna;	state Exp;
branches;
next	1.16;

1.16
date	2008.09.29.17.03.49;	author corinna;	state Exp;
branches;
next	1.15;

1.15
date	2008.04.24.09.59.54;	author corinna;	state Exp;
branches;
next	1.14;

1.14
date	2008.04.23.11.19.57;	author corinna;	state Exp;
branches;
next	1.13;

1.13
date	2008.04.02.10.48.08;	author corinna;	state Exp;
branches;
next	1.12;

1.12
date	2008.02.15.17.53.10;	author cgf;	state Exp;
branches;
next	1.11;

1.11
date	2008.02.13.14.50.39;	author corinna;	state Exp;
branches;
next	1.10;

1.10
date	2007.06.29.15.13.00;	author corinna;	state Exp;
branches;
next	1.9;

1.9
date	2007.06.28.17.55.01;	author corinna;	state Exp;
branches;
next	1.8;

1.8
date	2007.06.21.15.57.54;	author corinna;	state Exp;
branches;
next	1.7;

1.7
date	2007.06.21.07.22.16;	author corinna;	state Exp;
branches;
next	1.6;

1.6
date	2007.06.12.15.24.46;	author corinna;	state Exp;
branches;
next	1.5;

1.5
date	2007.06.11.17.38.27;	author corinna;	state Exp;
branches;
next	1.4;

1.4
date	2007.06.05.10.10.16;	author corinna;	state Exp;
branches;
next	1.3;

1.3
date	2001.06.24.22.26.52;	author cgf;	state Exp;
branches
	1.3.26.1;
next	1.2;

1.2
date	2000.04.19.00.55.19;	author dj;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.17.19.38.31;	author cgf;	state Exp;
branches
	1.1.1.1;
next	;

1.87.2.1
date	2014.11.13.12.53.04;	author corinna;	state Exp;
branches;
next	;

1.79.2.1
date	2012.11.22.11.05.50;	author corinna;	state Exp;
branches;
next	;

1.53.2.1
date	2011.03.11.11.37.49;	author corinna;	state Exp;
branches;
next	1.53.2.2;

1.53.2.2
date	2011.03.28.20.16.56;	author corinna;	state Exp;
branches;
next	;

1.3.26.1
date	2007.06.28.22.19.46;	author briand;	state Exp;
branches;
next	1.3.26.2;

1.3.26.2
date	2007.06.28.22.37.45;	author briand;	state Exp;
branches;
next	1.3.26.3;

1.3.26.3
date	2007.06.29.18.55.02;	author briand;	state Exp;
branches;
next	;

1.1.1.1
date	2000.02.17.19.38.31;	author cgf;	state Exp;
branches;
next	;


desc
@@


1.88
log
@	* path.sgml: Move to ../doc dir and rename to path.xml.
	* posix.sgml: Move to ../doc dir and rename to posix.xml.
@
text
@<sect1 id="std-susv4"><title>System interfaces compatible with the Single Unix Specification, Version 4:</title>

<para>Note that the core of the Single Unix Specification, Version 4 is
also IEEE Std 1003.1-2008 (POSIX.1-2008).</para>

<screen>
    FD_CLR
    FD_ISSET
    FD_SET
    FD_ZERO
    _Exit
    _exit
    _longjmp
    _setjmp
    _tolower
    _toupper
    a64l
    abort
    abs
    accept
    access
    acos
    acosf
    acosh
    acoshf
    alarm
    alphasort
    asctime
    asctime_r
    asin
    asinf
    asinh
    asinhf
    atan
    atan2
    atan2f
    atanf
    atanh
    atanhf
    atexit
    atof
    atoff
    atoi
    atol
    atoll
    basename
    bind
    bsearch
    btowc
    cabs
    cabsf
    cacos
    cacosf
    cacosh
    cacoshf
    calloc
    carg
    cargf
    casin
    casinf
    casinh
    casinhf
    casinhl
    catan
    catanf
    catanh
    catanhf
    catclose 			(available in external "catgets" library)
    catgets  			(available in external "catgets" library)
    catopen  			(available in external "catgets" library)
    cbrt
    cbrtf
    ccos
    ccosf
    ccosh
    ccoshf
    ceil
    ceilf
    cexp
    cexpf
    cfgetispeed
    cfgetospeed
    cfsetispeed
    cfsetospeed
    chdir
    chmod
    chown
    cimag
    cimagf
    clearerr
    clock
    clock_getcpuclockid
    clock_getres
    clock_gettime
    clock_nanosleep		(see chapter "Implementation Notes")
    clock_settime		(see chapter "Implementation Notes")
    clog
    clogf
    close
    closedir
    closelog
    confstr
    conj
    conjf
    connect
    copysign
    copysignf
    cos
    cosf
    cosh
    coshf
    cpow
    cpowf
    cproj
    cprojf
    creal
    crealf
    creat
    crypt			(available in external "crypt" library)
    csin
    csinf
    csinh
    csinhf
    csqrt
    csqrtf
    ctan
    ctanf
    ctanh
    ctanhf
    ctermid
    ctime
    ctime_r
    daylight
    dbm_clearerr		(available in external "libgdbm" library)
    dbm_close			(available in external "libgdbm" library)
    dbm_delete			(available in external "libgdbm" library)
    dbm_error			(available in external "libgdbm" library)
    dbm_fetch			(available in external "libgdbm" library)
    dbm_firstkey		(available in external "libgdbm" library)
    dbm_nextkey			(available in external "libgdbm" library)
    dbm_open			(available in external "libgdbm" library)
    dbm_store			(available in external "libgdbm" library)
    difftime
    dirfd
    dirname
    div
    dlclose
    dlerror
    dlopen
    dlsym
    dprintf
    drand48
    dup
    dup2
    encrypt			(available in external "crypt" library)
    endgrent
    endhostent
    endprotoent
    endpwent
    endservent
    endutxent
    environ
    erand48
    erf
    erfc
    erfcf
    erff
    errno
    execl
    execle
    execlp
    execv
    execve
    execvp
    exit
    exp
    exp2
    exp2f
    expf
    expm1
    expm1f
    fabs
    fabsf
    faccessat
    fchdir
    fchmod
    fchmodat
    fchown
    fchownat
    fclose
    fcntl			(see chapter "Implementation Notes")
    fdatasync
    fdim
    fdimf
    fdopen
    fdopendir
    feclearexcept
    fegetenv
    fegetexceptflag
    fegetround
    feholdexcept
    feof
    feraiseexcept
    ferror
    fesetenv
    fesetexceptflag
    fesetround
    fetestexcept
    feupdateenv
    fexecve
    fflush
    ffs
    fgetc
    fgetpos
    fgets
    fgetwc
    fgetws
    fileno
    flockfile
    floor
    floorf
    fma
    fmaf
    fmax
    fmaxf
    fmemopen
    fmin
    fminf
    fmod
    fmodf
    fnmatch
    fopen
    fork
    fpathconf
    fpclassify			(see chapter "Implementation Notes")
    fprintf
    fputc
    fputs
    fputwc
    fputws
    fread
    free
    freeaddrinfo
    freopen
    frexp
    frexpf
    fscanf
    fseek
    fseeko
    fsetpos
    fstat
    fstatat
    fstatvfs
    fsync
    ftell
    ftello
    ftok
    ftruncate
    ftrylockfile
    ftw
    funlockfile
    futimens
    fwide
    fwprintf
    fwrite
    fwscanf
    gai_strerror
    getaddrinfo
    getc
    getc_unlocked
    getchar
    getchar_unlocked
    getcwd
    getdelim
    getdomainname
    getegid
    getenv
    geteuid
    getgid
    getgrent
    getgrgid
    getgrgid_r
    getgrnam
    getgrnam_r
    getgroups
    gethostid
    gethostname
    getitimer			(see chapter "Implementation Notes")
    getline
    getlogin
    getlogin_r
    getnameinfo
    getopt
    getpeername
    getpgid
    getpgrp
    getpid
    getppid
    getpriority
    getprotobyname
    getprotobynumber
    getprotoent
    getpwent
    getpwnam
    getpwnam_r
    getpwuid
    getpwuid_r
    getrlimit
    getrusage
    gets
    getservbyname
    getservbyport
    getservent
    getsid
    getsockname
    getsockopt
    getsubopt
    gettimeofday
    getuid
    getutxent
    getutxid
    getutxline
    getwc
    getwchar
    glob
    globfree
    gmtime
    gmtime_r
    grantpt
    hcreate
    hdestroy
    hsearch
    htonl
    htons
    hypot
    hypotf
    iconv			(available in external "libiconv" library)
    iconv_close			(available in external "libiconv" library)
    iconv_open			(available in external "libiconv" library)
    if_freenameindex
    if_indextoname
    if_nameindex
    if_nametoindex
    ilogb
    ilogbf
    imaxabs
    imaxdiv
    inet_addr
    inet_ntoa
    inet_ntop
    inet_pton
    initstate
    insque
    ioctl
    isalnum
    isalpha
    isascii
    isatty
    isblank
    iscntrl
    isdigit
    isfinite			(see chapter "Implementation Notes")
    isgraph
    isgreater			(see chapter "Implementation Notes")
    isgreaterequal		(see chapter "Implementation Notes")
    isinf			(see chapter "Implementation Notes")
    isless
    islessequal			(see chapter "Implementation Notes")
    islessgreater		(see chapter "Implementation Notes")
    islower
    isnan			(see chapter "Implementation Notes")
    isnormal			(see chapter "Implementation Notes")
    isprint
    ispunct
    isspace
    isunordered			(see chapter "Implementation Notes")
    isupper
    iswalnum
    iswalpha
    iswblank
    iswcntrl
    iswctype
    iswdigit
    iswgraph
    iswlower
    iswprint
    iswpunct
    iswspace
    iswupper
    iswxdigit
    isxdigit
    j0
    j1
    jn
    jrand48
    kill
    killpg
    l64a
    labs
    lchown
    lcong48
    ldexp
    ldexpf
    ldiv
    lfind
    lgamma
    lgammaf
    link
    linkat
    listen
    llabs
    lldiv
    llrint
    llrintf
    llrintl
    llround
    llroundf
    localeconv
    localtime
    localtime_r
    lockf			(see chapter "Implementation Notes")
    log
    log10
    log10f
    log1p
    log1pf
    log2
    log2f
    logb
    logbf
    logf
    longjmp
    lrand48
    lrint
    lrintf
    lrintl
    lround
    lroundf
    lsearch
    lseek
    lstat
    malloc
    mblen
    mbrlen
    mbrtowc
    mbsinit
    mbsnrtowcs
    mbsrtowcs
    mbstowcs
    mbtowc
    memccpy
    memchr
    memcmp
    memcpy
    memmove
    memset
    mkdir
    mkdirat
    mkdtemp
    mkfifo
    mkfifoat
    mknod
    mknodat
    mkstemp
    mktime
    mlock
    mmap
    modf
    modff
    mprotect
    mq_close
    mq_getattr
    mq_notify
    mq_open
    mq_receive
    mq_send
    mq_setattr
    mq_timedreceive
    mq_timedsend
    mq_unlink
    mrand48
    msgctl			(see chapter "Implementation Notes")
    msgget			(see chapter "Implementation Notes")
    msgrcv			(see chapter "Implementation Notes")
    msgsnd			(see chapter "Implementation Notes")
    msync
    munlock
    munmap
    nan
    nanf
    nanosleep
    nearbyint
    nearbyintf
    nextafter
    nextafterf
    nftw
    nice
    nl_langinfo
    nrand48
    ntohl
    ntohs
    open
    open_memstream
    open_wmemstream
    openat
    opendir
    openlog
    optarg
    opterr
    optind
    optopt
    pathconf
    pause
    pclose
    perror
    pipe
    poll
    popen
    posix_fadvise
    posix_fallocate
    posix_madvise
    posix_memalign
    posix_openpt
    posix_spawn
    posix_spawnattr_destroy
    posix_spawnattr_init
    posix_spawnattr_getflags
    posix_spawnattr_getpgroup
    posix_spawnattr_getschedparam
    posix_spawnattr_getschedpolicy
    posix_spawnattr_getsigdefault
    posix_spawnattr_getsigmask
    posix_spawnattr_setflags
    posix_spawnattr_setpgroup
    posix_spawnattr_setschedparam
    posix_spawnattr_setschedpolicy
    posix_spawnattr_setsigdefault
    posix_spawnattr_setsigmask
    posix_spawnp
    posix_spawn_file_actions_destroy
    posix_spawn_file_actions_init
    posix_spawn_file_actions_addclose
    posix_spawn_file_actions_adddup2
    posix_spawn_file_actions_addopen
    pow
    powf
    pread
    printf
    pselect
    psiginfo
    psignal
    pthread_atfork
    pthread_attr_destroy
    pthread_attr_getdetachstate
    pthread_attr_getguardsize
    pthread_attr_getinheritsched
    pthread_attr_getschedparam
    pthread_attr_getschedpolicy
    pthread_attr_getscope
    pthread_attr_getstack
    pthread_attr_getstacksize
    pthread_attr_init
    pthread_attr_setdetachstate
    pthread_attr_setguardsize
    pthread_attr_setinheritsched
    pthread_attr_setschedparam
    pthread_attr_setschedpolicy
    pthread_attr_setscope
    pthread_attr_setstack
    pthread_attr_setstacksize
    pthread_cancel
    pthread_cond_broadcast
    pthread_cond_destroy
    pthread_cond_init
    pthread_cond_signal
    pthread_cond_timedwait
    pthread_cond_wait
    pthread_condattr_destroy
    pthread_condattr_getclock
    pthread_condattr_getpshared
    pthread_condattr_init
    pthread_condattr_setclock
    pthread_condattr_setpshared
    pthread_create
    pthread_detach
    pthread_equal
    pthread_exit
    pthread_getconcurrency
    pthread_getcpuclockid
    pthread_getschedparam
    pthread_getspecific
    pthread_join
    pthread_key_create
    pthread_key_delete
    pthread_kill
    pthread_mutex_destroy
    pthread_mutex_getprioceiling
    pthread_mutex_init
    pthread_mutex_lock
    pthread_mutex_setprioceiling
    pthread_mutex_trylock
    pthread_mutex_unlock
    pthread_mutexattr_destroy
    pthread_mutexattr_getprioceiling
    pthread_mutexattr_getprotocol
    pthread_mutexattr_getpshared
    pthread_mutexattr_gettype
    pthread_mutexattr_init
    pthread_mutexattr_setprioceiling
    pthread_mutexattr_setprotocol
    pthread_mutexattr_setpshared
    pthread_mutexattr_settype
    pthread_once
    pthread_rwlock_destroy
    pthread_rwlock_init
    pthread_rwlock_rdlock
    pthread_rwlock_tryrdlock
    pthread_rwlock_trywrlock
    pthread_rwlock_unlock
    pthread_rwlock_wrlock
    pthread_rwlockattr_destroy
    pthread_rwlockattr_getpshared
    pthread_rwlockattr_init
    pthread_rwlockattr_setpshared
    pthread_self
    pthread_setcancelstate
    pthread_setcanceltype
    pthread_setconcurrency
    pthread_setschedparam
    pthread_setschedprio
    pthread_setspecific
    pthread_sigmask
    pthread_spin_destroy
    pthread_spin_init
    pthread_spin_lock
    pthread_spin_trylock
    pthread_spin_unlock
    pthread_testcancel
    ptsname
    putc
    putc_unlocked
    putchar
    putchar_unlocked
    putenv
    puts
    pututxline
    putwc
    putwchar
    pwrite
    qsort
    raise
    rand
    rand_r
    random
    read
    readdir
    readdir_r
    readlink
    readlinkat
    readv
    realloc
    realpath
    recv
    recvfrom
    recvmsg
    regcomp
    regerror
    regexec
    regfree
    remainder
    remainderf
    remove
    remque
    remquo
    remquof
    rename
    renameat
    rewind
    rewinddir
    rint
    rintf
    rintl
    rmdir
    round
    roundf
    scalbln
    scalblnf
    scalbn
    scalbnf
    scandir
    scanf
    sched_get_priority_max
    sched_get_priority_min
    sched_getparam
    sched_getscheduler
    sched_rr_get_interval
    sched_setparam
    sched_setscheduler
    sched_yield
    seed48
    seekdir
    select
    sem_close
    sem_destroy
    sem_getvalue
    sem_init
    sem_open
    sem_post
    sem_timedwait
    sem_trywait
    sem_unlink
    sem_wait
    semctl			(see chapter "Implementation Notes")
    semget			(see chapter "Implementation Notes")
    semop			(see chapter "Implementation Notes")
    send
    sendmsg
    sendto
    setbuf
    setegid
    setenv
    seteuid
    setgid
    setgrent
    sethostent
    setitimer			(see chapter "Implementation Notes")
    setjmp
    setkey			(available in external "crypt" library)
    setlocale
    setlogmask
    setpgid
    setpgrp
    setpriority
    setprotoent
    setpwent
    setregid
    setreuid
    setrlimit
    setservent
    setsid
    setsockopt
    setstate
    setuid
    setutxent
    setvbuf
    shm_open
    shm_unlink
    shmat			(see chapter "Implementation Notes")
    shmctl			(see chapter "Implementation Notes")
    shmdt			(see chapter "Implementation Notes")
    shmget			(see chapter "Implementation Notes")
    shutdown
    sigaction
    sigaddset
    sigdelset
    sigemptyset
    sigfillset
    sighold
    sigignore
    siginterrupt
    sigismember
    siglongjmp
    signal
    signbit			(see chapter "Implementation Notes")
    signgam
    sigpause
    sigpending
    sigprocmask
    sigqueue
    sigrelse
    sigset
    sigsetjmp
    sigsuspend
    sigwait
    sigwaitinfo
    sin
    sinf
    sinh
    sinhf
    sleep
    snprintf
    socket
    socketpair
    sprintf
    sqrt
    sqrtf
    srand
    srand48
    srandom
    sscanf
    stat
    statvfs
    stderr
    stdin
    stdout
    stpcpy
    stpncpy
    strcasecmp
    strcat
    strchr
    strcmp
    strcoll
    strcpy
    strcspn
    strdup
    strerror
    strerror_r
    strfmon
    strftime
    strlen
    strncasecmp
    strncat
    strncmp
    strncpy
    strndup
    strnlen
    strpbrk
    strptime
    strrchr
    strsignal
    strspn
    strstr
    strtod
    strtof
    strtoimax
    strtok
    strtok_r
    strtol
    strtoll
    strtoul
    strtoull
    strtoumax
    strxfrm
    swab
    swprintf
    swscanf
    symlink
    symlinkat
    sync
    sysconf
    syslog
    system
    tan
    tanf
    tanh
    tanhf
    tcdrain
    tcflow
    tcflush
    tcgetattr
    tcgetpgrp
    tcsendbreak
    tcsetattr
    tcsetpgrp
    tdelete
    telldir
    tempnam
    tfind
    tgamma
    tgammaf
    time
    timer_create		(see chapter "Implementation Notes")
    timer_delete
    timer_gettime
    timer_settime
    times
    timezone
    tmpfile
    tmpnam
    toascii
    tolower
    toupper
    towctrans
    towlower
    towupper
    trunc
    truncate
    truncf
    tsearch
    ttyname
    ttyname_r
    twalk
    tzname
    tzset
    umask
    uname
    ungetc
    ungetwc
    unlink
    unlinkat
    unlockpt
    unsetenv
    utime
    utimensat
    utimes
    va_arg
    va_copy
    va_end
    va_start
    vdprintf
    vfprintf
    vfscanf
    vfwprintf
    vfwscanf
    vprintf
    vscanf
    vsnprintf
    vsprintf
    vsscanf
    vswprintf
    vswscanf
    vwprintf
    vwscanf
    wait
    waitpid
    wcpcpy
    wcpncpy
    wcrtomb
    wcscasecmp
    wcscat
    wcschr
    wcscmp
    wcscoll
    wcscpy
    wcscspn
    wcsdup
    wcsftime
    wcslen
    wcsncasecmp
    wcsncat
    wcsncmp
    wcsncpy
    wcsnlen
    wcsnrtombs
    wcspbrk
    wcsrchr
    wcsrtombs
    wcsspn
    wcsstr
    wcstod
    wcstof
    wcstoimax
    wcstok
    wcstol
    wcstoll
    wcstombs
    wcstoul
    wcstoull
    wcstoumax
    wcswidth
    wcsxfrm
    wctob
    wctomb
    wctrans
    wctype
    wcwidth
    wmemchr
    wmemcmp
    wmemcpy
    wmemmove
    wmemset
    wordexp
    wordfree
    wprintf
    write
    writev
    wscanf
    y0
    y1
    yn
</screen>

</sect1>

<sect1 id="std-bsd"><title>System interfaces compatible with BSD functions:</title>

<screen>
    __b64_ntop
    __b64_pton
    arc4random
    arc4random_addrandom
    arc4random_buf
    arc4random_stir
    arc4random_uniform
    bindresvport
    bindresvport_sa
    cfmakeraw
    cfsetspeed
    daemon
    dn_comp
    dn_expand
    dn_skipname
    drem
    eaccess
    endusershell
    err
    errx
    finite
    finitef
    fiprintf
    flock			(see chapter "Implementation Notes")
    forkpty
    fpurge
    freeifaddrs
    fstatfs
    fts_children
    fts_close
    fts_get_clientptr
    fts_get_stream
    fts_open
    fts_read
    fts_set
    fts_set_clientptr
    funopen
    futimes
    gamma
    gamma_r
    gammaf
    gammaf_r
    getdtablesize
    getgrouplist
    getifaddrs
    getpagesize
    getpeereid
    getprogname
    getusershell
    herror
    hstrerror
    inet_aton
    inet_makeaddr
    inet_netof
    inet_network
    initgroups
    iruserok
    iruserok_sa
    login
    login_tty
    logout
    logwtmp
    madvise
    mkstemps
    openpty
    rcmd
    rcmd_af
    reallocf
    res_close
    res_init
    res_mkquery
    res_nclose
    res_ninit
    res_nmkquery
    res_nquery
    res_nquerydomain
    res_nsearch
    res_nsend
    res_query
    res_querydomain
    res_search
    res_send
    revoke
    rexec
    rresvport
    rresvport_af
    ruserok
    sbrk
    setbuffer
    setgroups
    setlinebuf
    setpassent
    setprogname
    settimeofday
    setusershell
    statfs
    strcasestr
    strlcat
    strlcpy
    strsep
    updwtmp
    valloc
    verr
    verrx
    vhangup			(see chapter "Implementation Notes")
    vsyslog
    vwarn
    vwarnx
    wait3
    wait4
    warn
    warnx
    wcslcat
    wcslcpy
</screen>

</sect1>

<sect1 id="std-gnu"><title>System interfaces compatible with GNU or Linux extensions:</title>

<screen>
    accept4
    argz_add
    argz_add_sep
    argz_append
    argz_count
    argz_create
    argz_create_sep
    argz_delete
    argz_extract
    argz_insert
    argz_next
    argz_replace
    argz_stringify
    asnprintf
    asprintf
    asprintf_r
    canonicalize_file_name
    dremf
    dup3
    envz_add
    envz_entry
    envz_get
    envz_merge
    envz_remove
    envz_strip
    error
    error_at_line
    euidaccess
    execvpe
    exp10
    exp10f
    fcloseall
    fcloseall_r
    fegetprec
    fesetprec
    feenableexcept
    fedisableexcept
    fegetexcept
    fgetxattr
    flistxattr
    fopencookie
    fremovexattr
    fsetxattr
    get_avphys_pages
    get_current_dir_name
    get_phys_pages
    get_nprocs
    get_nprocs_conf
    getmntent_r
    getopt_long
    getopt_long_only
    getpt
    getxattr
    lgetxattr
    listxattr
    llistxattr
    lremovexattr
    lsetxattr
    memmem
    mempcpy
    memrchr
    mkostemp
    mkostemps
    pipe2
    pow10
    pow10f
    ppoll
    pthread_getattr_np
    pthread_sigqueue
    ptsname_r
    rawmemchr
    removexattr
    scandirat
    setxattr
    strchrnul
    sysinfo
    tdestroy
    timegm
    timelocal
    updwtmpx
    utmpxname
    vasnprintf
    vasprintf
    vasprintf_r
</screen>

</sect1>

<sect1 id="std-solaris"><title>System interfaces compatible with Solaris or SunOS functions:</title>

<screen>
    __fpurge
    acl
    aclcheck
    aclfrommode
    aclfrompbits
    aclfromtext
    aclsort
    acltomode
    acltopbits
    acltotext
    endmntent
    facl
    futimesat
    getmntent
    memalign
    setmntent
    xdr_array
    xdr_bool
    xdr_bytes
    xdr_char
    xdr_double
    xdr_enum
    xdr_float
    xdr_free
    xdr_hyper
    xdr_int
    xdr_int16_t
    xdr_int32_t
    xdr_int64_t
    xdr_int8_t
    xdr_long
    xdr_longlong_t
    xdr_netobj
    xdr_opaque
    xdr_pointer
    xdr_reference
    xdr_short
    xdr_sizeof
    xdr_string
    xdr_u_char
    xdr_u_hyper
    xdr_u_int
    xdr_u_int16_t
    xdr_u_int32_t
    xdr_u_int64_t
    xdr_u_int8_t
    xdr_u_long
    xdr_u_longlong_t
    xdr_u_short
    xdr_uint16_t
    xdr_uint32_t
    xdr_uint64_t
    xdr_uint8_t
    xdr_union
    xdr_vector
    xdr_void
    xdr_wrapstring
    xdrmem_create
    xdrrec_create
    xdrrec_endofrecord
    xdrrec_eof
    xdrrec_skiprecord
    __xdrrec_getrec
    __xdrrec_setnonblock
    xdrstdio_create
</screen>

</sect1>

<sect1 id="std-deprec"><title>Other UNIX system interfaces, deprecated or not in POSIX.1-2008:</title>

<screen>
    bcmp			(POSIX.1-2001, SUSv3)
    bcopy			(SUSv3)
    bzero			(SUSv3)
    chroot			(SUSv2) (see chapter "Implementation Notes")
    clock_setres		(QNX, VxWorks) (see chapter "Implementation Notes")
    cuserid			(POSIX.1-1988, SUSv2)
    ecvt			(SUSv3)
    endutent			(XPG2)
    fcvt			(SUSv3)
    ftime			(SUSv3)
    gcvt			(SUSv3)
    gethostbyaddr		(SUSv3)
    gethostbyname		(SUSv3)
    gethostbyname2		(first defined in BIND 4.9.4)
    getpass			(SUSv2)
    getutent			(XPG2)
    getutid			(XPG2)
    getutline			(XPG2)
    getw			(SVID)
    getwd			(SUSv3)
    h_errno			(SUSv3)
    index			(SUSv3)
    mallinfo			(SVID)
    mallopt			(SVID)
    mktemp			(SUSv3)
    on_exit			(SunOS)
    pthread_attr_getstackaddr	(SUSv3)
    pthread_attr_setstackaddr	(SUSv3)
    pthread_continue		(XPG2)
    pthread_getsequence_np	(Tru64)
    pthread_suspend		(XPG2)
    pthread_yield		(POSIX.1c drafts)
    pututline			(XPG2)
    putw			(SVID)
    rindex			(SUSv3)
    scalb			(SUSv3)
    setutent			(XPG2)
    sys_errlist			(BSD)
    sys_nerr			(BSD)
    sys_siglist			(BSD)
    ttyslot			(SUSv2)
    ualarm			(SUSv3)
    usleep			(SUSv3)
    utmpname			(XPG2)
    vfork			(SUSv3) (see chapter "Implementation Notes")
</screen>

</sect1>

<sect1 id="std-notimpl"><title>NOT implemented system interfaces from the Single Unix Specification, Volume 4:</title>

<screen>
    acoshl
    acosl
    aio_cancel
    aio_error
    aio_fsync
    aio_read
    aio_return
    aio_suspend
    aio_write
    asinhl
    asinl
    atan2l
    atanhl
    atanl
    cabsl
    cacoshl
    cacosl
    cargl
    casinl
    catanhl
    catanl
    cbrtl
    ccoshl
    ccosl
    ceill
    cexpl
    cimagl
    clogl
    conjl
    copysignl
    coshl
    cosl
    cpowl
    cprojl
    creall
    csinhl
    csinl
    csqrtl
    ctanhl
    ctanl
    duplocale
    endnetent
    erfcl
    erfl
    exp2l
    expl
    expm1l
    fabsl
    fattach
    fdiml
    floorl
    fmal
    fmaxl
    fminl
    fmodl
    fmtmsg
    freelocale
    frexpl
    getdate
    getdate_err
    gethostent
    getmsg
    getnetbyaddr
    getnetbyname
    getnetent
    getpmsg
    hypotl
    ilogbl
    isalnum_l
    isalpha_l
    isastream
    isblank_l
    iscntrl_l
    isdigit_l
    isgraph_l
    islower_l
    isprint_l
    ispunct_l
    isspace_l
    isupper_l
    iswalnum_l
    iswalpha_l
    iswblank_l
    iswcntrl_l
    iswdigit_l
    iswgraph_l
    iswlower_l
    iswprint_l
    iswpunct_l
    iswspace_l
    iswupper_l
    iswxdigit_l
    isxdigit_l
    ldexpl
    lgammal
    lio_listio
    llroundl
    log10l
    log1pl
    log2l
    logbl
    logl
    lroundl
    mlockall
    modfl
    munlockall
    nanl
    nearbyintl
    newlocale
    nextafterl
    nexttoward
    nexttowardf
    nexttowardl
    posix_mem_offset
    posix_trace[...]
    posix_typed_[...]
    powl
    pthread_barrier[...]
    pthread_mutexattr_getrobust
    pthread_mutexattr_setrobust
    pthread_mutex_consistent
    pthread_mutex_timedlock
    pthread_rwlock_timedrdlock
    pthread_rwlock_timedwrlock
    putmsg
    reminderl
    remquol
    roundl
    scalblnl
    scalbnl
    setnetent
    sigaltstack
    sigtimedwait
    sinhl
    sinl
    sockatmark
    sqrtl
    strcasecmp_l
    strcoll_l
    strfmon_l
    strncasecmp_l
    strtold
    strxfrm_l
    tanhl
    tanl
    tcgetsid
    tgammal
    timer_getoverrun
    tolower_l
    toupper_l
    towctrans_l
    truncl
    ulimit
    uselocale
    waitid
    wcscasecmp_l
    wcsncasecmp_l
    wcstold
    wcsxfrm_l
    wctrans_l
    wctype_l
</screen>

</sect1>

<sect1 id="std-notes"><title>Implementation Notes</title>

<para><function>chroot</function> only emulates a chroot function call
by keeping track of the current root and accomodating this in the file
related function calls.  A real chroot functionality is not supported by
Windows however.</para>

<para><function>clock_nanosleep</function> currently supports only
CLOCK_REALTIME and CLOCK_MONOTONIC.  <function>clock_setres</function>,
<function>clock_settime</function>, and <function>timer_create</function>
currently support only CLOCK_REALTIME.</para>

<para>POSIX file locks via <function>fcntl</function> or
<function>lockf</function>, as well as BSD <function>flock</function> locks
are advisory locks.  They don't interact with Windows mandatory locks, nor
do POSIX fcntl locks interfere with BSD flock locks or vice versa.</para>

<para>BSD file locks created via <function>flock</function> are only
propagated to the direct parent process, not to grand parents or sibling
processes.  The locks are only valid in the creating process, its parent
process, and subsequently started child processes sharing the same file
descriptor.</para>

<para>In very rare circumstances an application would want to use Windows
mandatory locks to interact with non-Cygwin Windows processes accessing the
same file (databases, etc).  For these purposes, the entire locking mechanism
(fcntl/flock/lockf) can be switched to Windows mandatory locks on a
per-descriptor/per-process basis.  For this purpose, use the call

<screen>
  fcntl (fd, F_LCK_MANDATORY, 1);
</screen>

After that, all file locks on this descriptor will follow Windows mandatory
record locking semantics: Locks are per-descriptor/per-process; locks are not
propagated to child processes, not even via <function>execve</function>;
no atomic replacement of read locks with write locks and vice versa on the
same descriptor; locks have to be unlocked exactly as they have been locked.
</para>

<para><function>fpclassify</function>, <function>isfinite</function>,
<function>isgreater</function>, <function>isgreaterequal</function>,
<function>isinf</function>, <function>isless</function>,
<function>islessequal</function>, <function>islessgreater</function>,
<function>isnan</function>, <function>isnormal</function>,
<function>isunordered</function>, and <function>signbit</function>
only support float and double arguments, not long double arguments.</para>

<para><function>getitimer</function> and <function>setitimer</function>
only support ITIMER_REAL for now.</para>

<para><function>link</function> will fail on FAT, FAT32, and other filesystems
not supporting hardlinks, just as on Linux.</para>

<para><function>lseek</function> only works properly on files opened in
binary mode.  On files opened in textmode (via mount mode or explicit
open flag) its positioning is potentially unreliable.</para>

<para><function>setuid</function> is only safe against reverting the user
switch after a call to one of the exec(2) functions took place.  Windows
doesn't support a non-revertable user switch within the context of Win32
processes.</para>

<para><function>vfork</function> just calls <function>fork</function>.</para>

<para><function>vhangup</function> and <function>revoke</function> always
return -1 and set errno to ENOSYS.  <function>grantpt</function> and
<function>unlockpt</function> always just return 0.</para>

<para>The XSI IPC functions <function>semctl</function>,
<function>semget</function>, <function>semop</function>,
<function>shmat</function>, <function>shmctl</function>,
<function>shmdt</function>, <function>shmget</function>,
<function>msgctl</function>, <function>msgget</function>,
<function>msgrcv</function> and <function>msgsnd</function> are only
available when cygserver is running.</para>

</sect1>
@


1.87
log
@	* common.din: Export posix_spawn[...] functions.
	* exec.cc (execve): Add EXPORT_ALIAS _execve.
	* include/cygwin/version.h (CYGWIN_VERSION_API_MINOR): Bump.
	* posix.sgml (std-susv4):  Add posix_spawn[...] here.
	(std-notimpl): Drop here.
@
text
@@


1.87.2.1
log
@2014-11-07  Corinna Vinschen  <corinna@@vinschen.de>

	* dcrt0.cc (cygwin__cxa_atexit): Fetch correct DSO handle value
	by searching dll list.  Explain why.

2014-11-06  Corinna Vinschen  <corinna@@vinschen.de>

	* dcrt0.cc (cygwin_atexit): Change preceeding comment to reflect
	API version numbers.
	* external.cc (cygwin_internal): disable setting cxx_malloc on 64 bit.
	Add CW_FIXED_ATEXIT case.
	* include/cygwin/version.h (CYGWIN_VERSION_API_MINOR): Bump.
	* include/sys/cygwin.h (cygwin_getinfo_types): Add CW_FIXED_ATEXIT.
	* lib/atexit.c (atexit): Test running Cygwin version by checking
	return value of cygwin_internal (CW_FIXED_ATEXIT).

2014-11-05  Corinna Vinschen  <corinna@@vinschen.de>

	* lib/atexit.c (atexit): Check for being linked into the executable.
	If so, call __cxa_atexit with NULL DSO handle.  Explain why.
	* lib/dso_handle.c: New file providing fallback __dso_handle.

2014-11-05  Corinna Vinschen  <corinna@@vinschen.de>

	* Makefile.in (NEW_FUNCTIONS): Add atexit to be not exported.
	* lib/atexit.c (atexit): New, statically linkable version of atexit.
	* dcrt0.cc (cygwin_atexit): Add comment to mark this function as old
	entry point.  Indiscriminately check for DSO of function pointer for
	all functions, if checking for DSO of return address fails on x86_64.
	Change comment accordingly.

2014-11-05  Corinna Vinschen  <corinna@@vinschen.de>

	* Makefile.in (NEW_FUNCTIONS): Define target-independent.  Add target
	dependent stuff afterwards.  Globally define timezone and all xdr
	symbols as non-exported from libcygwin.a.

2014-11-03  Corinna Vinschen  <corinna@@vinschen.de>

	* cygheap.cc: Fix formatting.

2014-10-29  Corinna Vinschen  <corinna@@vinschen.de>

	* cygheap.cc (init_cygheap::init_installation_root): Create content of
	installation_dir as non-prefixed path, if possible.

2014-10-29  Corinna Vinschen  <corinna@@vinschen.de>

	* common.din (__cxa_atexit): Define as cygwin__cxa_atexit.
	* dcrt0.cc (cygwin__cxa_atexit): New function.  Explain what we do.

2014-10-28  Corinna Vinschen  <corinna@@vinschen.de>

	* globals.cc (dos_file_warning): Set to false by default.
	* path.cc (warn_msdos): Make static.  Drop test for dos_file_warning.
	(path_conv::check): Check for dos_file_warning here to avoid a function
	call in the default case.

2014-10-27  Corinna Vinschen  <corinna@@vinschen.de>

	* dcrt0.cc (cygwin_atexit): Add workaround for broken atexit calls
	in __gcc_register_frame of DLLs built with gcc-4.8.3-3.

2014-10-27  Corinna Vinschen  <corinna@@vinschen.de>

	* cygheap.cc (init_cygheap::init_installation_root): Set
	installation_dir_len.
	* cygheap.h (struct init_cygheap): Add installation_dir_len member.
	* environ.cc (win_env::add_cache): Use stpcpy for speed.
	(posify_maybe): Use tmp_pathbuf buffer instead of stack.
	(raise_envblock): New function to resize Windows environment block.
	(build_env): Fix indentation.  Call raise_envblock function.  Check if
	$PATH exists and is non-empty.  If not, add PATH variable with Cygwin
	installation directory as content to Windows environment.  Explain why.

2014-10-24  Corinna Vinschen  <corinna@@vinschen.de>

	* fhandler_proc.cc (format_proc_cygdrive): Fix symlink path if cygdrive
	is "/".

2014-10-24  Corinna Vinschen  <corinna@@vinschen.de>

	* gendef (sigdelayed): 64 bit only: Fix seh_pushreg statements in
	prologue.

2014-10-22  Yaakov Selkowitz  <yselkowi@@redhat.com>

	* common.din (stime): Export.
	* times.cc (stime): New function.
	* include/cygwin/time.h (stime): Declare.
	* include/cygwin/version.h (CYGWIN_VERSION_API_MINOR): Bump.

2014-10-20  Corinna Vinschen  <corinna@@vinschen.de>

	* fhandler_serial.cc: Revert debug code accidentally checked in on
	2014-08-18.

2014-10-20  Corinna Vinschen  <corinna@@vinschen.de>

	* path.cc (symlink_info::check): Set error from status code if opening
	the parent directory failed, but keep special case for root dirs.

2014-10-17  Corinna Vinschen  <corinna@@vinschen.de>

	* cygheap.cc (init_cygheap::init_installation_root): Just memmove
	contents of installation_root instead of calling GetModuleFileNameW
	again.  Copy installation_root to installation_dir before stripping of
	"bin" dir.  Explain what we do.
	* cygheap.h (struct init_cygheap): Add installation_dir member.

2014-10-17  Corinna Vinschen  <corinna@@vinschen.de>

	* cygtls.h (__try): Define __l_endtry as block-local label in 32 bit
	case as well.

2014-10-17  Corinna Vinschen  <corinna@@vinschen.de>

	* Makefile.in (DLL_OFILES): Add quotactl.o.
	* common.din (quotactl): Export.
	* ntdll.h: Define FILE_FS_CONTROL_INFORMATION::FileSystemControlFlags
	flag values.
	(struct _FILE_FS_CONTROL_INFORMATION): Define.
	(struct _FILE_GET_QUOTA_INFORMATION): Define.
	(typedef struct _FILE_QUOTA_INFORMATION): Define.
	(NtQueryObject): Use PVOID rather than VOID*.
	(NtQueryVolumeInformationFile): Ditto.
	(NtQueryQuotaInformationFile): Declare.
	(NtSetQuotaInformationFile): Declare.
	(NtSetVolumeInformationFile): Declare.
	* quotactl.cc: New file implementing quotactl().
	* include/sys/mount.h (BLOCK_SIZE): Define.
	(BLOCK_SIZE_BITS): Define.
	* include/sys/quota.h: New header.
	* include/cygwin/version.h (CYGWIN_VERSION_API_MINOR): Bump.

2014-10-16  Corinna Vinschen  <corinna@@vinschen.de>

	* Makefile.in (DLL_OFILES): Rearrange with one file per line.

2014-10-16  Corinna Vinschen  <corinna@@vinschen.de>

	* fhandler_proc.cc (format_proc_partitions): Extend output to print
	the windows mount points the device is mounted on.

2014-10-13  Corinna Vinschen  <corinna@@vinschen.de>

	* net.cc (cygwin_setsockopt): Drop redundant test for AF_LOCAL and
	SOCK_STREAM in SO_PEERCRED case, as in the original patch.

2014-10-12  Corinna Vinschen  <corinna@@vinschen.de>

	* dlfcn.cc (gfpod_helper): Only check for POSIX dir separator, same as
	in get_full_path_of_dll.

2014-10-12  Corinna Vinschen  <corinna@@vinschen.de>

	* dlfcn.cc (set_dl_error): Drop useless __stdcall.
	(check_path_access): Ditto.  Drop FE_CWD from call to find_exec.
	(gfpod_helper): Call path_conv::check for all paths containing a dir
	separator to more closely follow the Linux search algorithm.
	(get_full_path_of_dll): Drop useless __stdcall.
	(dlopen): Simplify RTLD_NOLOAD case by calling GetModuleHandleEx
	instead of GetModuleHandle/LoadLibrary.

2014-10-11  Christian Franke  <franke@@computer.org>

	Add setsockopt(sd, SOL_SOCKET, SO_PEERCRED, NULL, 0) to disable
	initial handshake on AF_LOCAL sockets.
	* fhandler.h (class fhandler_socket): Add no_getpeereid status flag.
	(fhandler_socket::af_local_set_no_getpeereid): New prototype.
	* fhandler_socket.cc (fhandler_socket::af_local_connect): Skip handshake
	if no_getpeereid is set.  Add debug output.
	(fhandler_socket::af_local_accept): Likewise.
	(fhandler_socket::af_local_set_no_getpeereid): New function.
	(fhandler_socket::af_local_copy): Copy no_getpeereid.
	(fhandler_socket::getpeereid): Fail if no_getpeereid is set.
	* net.cc (cygwin_setsockopt): Add SO_PEERCRED for AF_LOCAL/SOCK_STREAM
	sockets.  Add comment to explain why we need it.
	* include/cygwin/version.h (CYGWIN_VERSION_API_MINOR): Bump.

2014-10-10  Corinna Vinschen  <corinna@@vinschen.de>

	* dlfcn.cc (dlopen): Disable old 32 bit code on 64 bit.
	* dcrt0.cc (check_sanity_and_sync): Ditto.
	* dll_init.cc (dll_dllcrt0_1): Fix typo in comment.

2014-10-08  Corinna Vinschen  <corinna@@vinschen.de>

	* common.din (ffsl): Export.
	(ffsll): Export.
	* syscalls.cc (ffs): Implement using GCC intrinsic.
	(ffsl): Ditto.
	(ffsll): Ditto.
	* include/cygwin/version.h (CYGWIN_VERSION_API_MINOR): Bump.

2014-10-08  Christian Franke  <franke@@computer.org>

	* syscalls.cc (ffs): Fix crash of ffs (0x80000000) on 64 bit.

2014-10-08  Corinna Vinschen  <corinna@@vinschen.de>

	* fhandler_process.cc (format_process_statm): Fix output of dirty
	pages.  Add linefeed.

2014-09-05  Corinna Vinschen  <corinna@@vinschen.de>

	* fhandler_proc.cc (proc_tab): Add entry for cygdrive symlink.
	(format_proc_cygdrive): New function to implement /proc/cygdrive.

2014-09-05  Corinna Vinschen  <corinna@@vinschen.de>

	* exception.h (class exception): Remove unnecessary #ifdef.

2014-09-05  Corinna Vinschen  <corinna@@vinschen.de>

	* winlean.h (DNLEN): Raise to 31.  Explain why.

2014-08-28  Corinna Vinschen  <corinna@@vinschen.de>

	* fhandler_disk_file.cc (fhandler_disk_file::fstatvfs): Try the
	FileFsSizeInformation information class on filesystems choking on
	FileFsFullSizeInformation (I see you Netapp!)

2014-08-27  Corinna Vinschen  <corinna@@vinschen.de>

	* fhandler.h (fhandler_pty_slave::fch_open_handles): Add bool parameter
	to declaration.
	* fhandler_tty.cc (fhandler_pty_slave::fch_open_handles): Add bool
	parameter "chown".  Only request WRITE_OWNER access when opening pty
	synchronization objects if "chown" is set.
	(fhandler_pty_slave::fchmod): Call fch_open_handles with new bool
	parameter set to false.
	(fhandler_pty_slave::fchown): Call fch_open_handles with new bool
	parameter set to true.
	* kernel32.cc (CreateFileMappingW): Fix default standard rights for
	file mappings from READ_CONTROL to STANDARD_RIGHTS_REQUIRED to allow
	changing the DACL (fixes "access denied" error in pinfo::set_acl).

	* fhandler_disk_file.cc (fhandler_base::fstat_helper): Change debug
	output to print mode bits in octal.
	* security.cc (alloc_sd): Ditto.
	(set_file_attribute): Ditto.

2014-08-27  Corinna Vinschen  <corinna@@vinschen.de>

	* ntea.cc (read_ea): Change left-over return to __leave.  Fix
	condition to close handle.  Call NtClose rather than CloseHandle.
	(write_ea): Fix condition to close handle.  Call NtClose rather than
	CloseHandle.
	* security.cc (get_file_sd): Call pc.init_reopen_attr if a valid
	incoming handle was given, pc.get_object_attr otherwise.
	(set_file_sd): Ditto.

2014-08-26  Corinna Vinschen  <corinna@@vinschen.de>

	* path.h (path_conv::init_reopen_attr): Change from void to returning
	POBJECT_ATTRIBUTES.  Take OBJECT_ATTRIBUTES reference as argument, not
	pointer.
	* fhandler_disk_file.cc: Throughout accommodate above change.
	* syscalls.cc: Ditto.
	* ntea.cc (read_ea): Don't set hdl to NULL if it's already NULL.  Set
	attr with pc.init_reopen_attr before trying to reopen file.
	(write_ea): Ditto.
	* security.cc (get_file_sd): Use pc.init_reopen_attr rather than
	pc.get_object_attr when trying to reopen file.
	(set_file_sd): Ditto.

2014-08-25  Corinna Vinschen  <corinna@@vinschen.de>

	* cygtls.cc (san::leave/x86_64): Implement.
	* cygtls.h (class tls_pathbuf): Move counter variables into a union.
	Add 64 bit element _counters covering both counter variables to
	optimize save and restore operations.
	(class san/x86_64): Only store single 64 bit value.
	(san::san/x86_64): Implement.
	(san::leave/x86_64): Only declare here, as returns_twice function.
	Explain why.
	(class san/i686): Change type of _c_cnt and _w_cnt to uint32_t.
	(__try/x86_64): Move definition of __sebastian after the first memory
	barrier.  Drop __sebastian.setup call.

2014-08-25  Corinna Vinschen  <corinna@@vinschen.de>

	* cygtls.cc (_cygtls::remove): Revert previous patch.
	*  cygtls.h (struct _local_storage): Move pathbufs back here.
	(class san/x86_64): Revert class.  Save and restore pathbufs counters
	only.
	(class san/i686): Revert saving and restoring pathbufs counters.
	(__try/x86_64): Add a san variable and call it's setup method.
	(__except/x86_64): Call san::leave to restore pathbufs counters.
	* gendef (_sigbe): Revert previous change.
	* thread.cc (verifyable_object_state): Remove gcc 4.7 workaround in
	forward declaration as well.
	* tls_pbuf.cc (tls_pbuf): Revert previous change.
	* tls_pbuf.h (class tmp_pathbuf): Accommodate reverting pathbufs to
	locals structure.
	* tlsoffsets.h: Regenerate.
	* tlsoffsets64.h: Regenerate.

2014-08-21  Corinna Vinschen  <corinna@@vinschen.de>

	* Throughout, use __try/__except/__endtry blocks, rather than myfault
	handler.
	* cygtls.cc (_cygtls::remove): Accommodate the fact that pathbufs
	has been moved from _local_storage to _cygtls.
	* cygtls.h (class tls_pathbuf): Add comment to hint to gendef usage
	of counters.  Change type of counters to uint32_t for clarity.
	Remove _cygtls as friend class.
	(struct _local_storage): Move pathbufs from here...
	(struct _cygtls): ...to here, allowing to access it from _sigbe.
	(class san): Only define on 32 bit.  Remove errno, _c_cnt and _w_cnt
	members.
	(san::setup): Drop parameter.  Don't initialize removed members.
	(san::leave): Don't set removed members.
	(class myfault): Only define on 32 bit.
	(myfault::faulted): Only keep implementation not taking any parameter.
	Drop argument in call to sebastian.setup.
	(__try/__leave/__except/__endtry): Implement to support real SEH.  For
	now stick to SJLJ on 32 bit.
	* dcrt0.cc (dll_crt0_0): Drop 64 bit call to
	exception::install_myfault_handler.
	* exception.h (exception_handler): Define with EXCEPTION_DISPOSITION
	as return type.
	(PDISPATCHER_CONTEXT): Define as void * on 32 bit.  Define as pointer
	to _DISPATCHER_CONTEXT on 64 bit.
	(class exception): Define separately for 32 and 64 bit.
	(exception::myfault): Add handler for myfault SEH handling on 64 bit.
	(exception::exception): Fix mangled method name to account for change
	in type of last parameter.
	(exception::install_myfault_handler): Remove.
	* exceptions.cc (exception::myfault_handle): Remove.
	(exception::myfault): New SEH handler for 64 bit.
	* gendef (_sigbe): Set tls_pathbuf counters to 0 explicitely when
	returning to the caller.
	* ntdll.h: Move a comment to a better place.
	(struct _SCOPE_TABLE): Define on 64 bit.
	* thread.cc (verifyable_object_isvalid): Remove gcc 4.7 workaround.
	* tls_pbuf.cc (tls_pbuf): Fix to accommodate new place of pathbufs.
	(tls_pathbuf::destroy): Change type of loop variables to uint32_t.
	* tls_pbuf.h (class tmp_pathbuf): Change type of buffer counters to
	uint32_t.  Accommodate new place of pathbufs.
	* tlsoffsets.h: Regenerate.
	* tlsoffsets64.h: Regenerate.

2014-08-21  Corinna Vinschen  <corinna@@vinschen.de>

	* miscfuncs.cc (__import_address): Cover the first dereference to imp
	under the fault handler.

2014-08-21  Corinna Vinschen  <corinna@@vinschen.de>

	* net.cc (if_freenameindex): Don't catch a SEGV from free to fail
	loudly on double free.

2014-08-21  Corinna Vinschen  <corinna@@vinschen.de>

	* dir.cc (rmdir): Don't skip deleting fh in the ENOTEMPTY case.

2014-08-20  Corinna Vinschen  <corinna@@vinschen.de>

	* tls_pbuf.h (tmp_pathbuf::tmp_pathbuf): Convert to inline method.
	(tmp_pathbuf::~tmp_pathbuf): Ditto.
	* tls_pbuf.cc (tmp_pathbuf::tmp_pathbuf): Remove here.
	(tmp_pathbuf::~tmp_pathbuf): Ditto.

2014-08-19  Corinna Vinschen  <corinna@@vinschen.de>

	* dir.cc (dirfd): Per POSIX, return EINVAL on invalid directory stream.
	(telldir): Per POSIX, return -1 and set errno to EBADF, rather than
	just returning 0, on invalid directory stream.
	* signal.cc (sigwaitinfo): Return -1, not EFAULT, when SEGV was catched.

2014-08-19  Corinna Vinschen  <corinna@@vinschen.de>

	* autoload.cc: Replace WNet[...]A with WNet[...]W imports.
	* dcrt0.cc (initial_env): Drop strlwr calls.  Call strcasestr instead.
	* fhandler_netdrive.cc: Throughout, convert to calling WNet UNICODE
	functions.  Use tmp_pathbuf rather than alloca.  Replace call to
	strlwr with call to RtlDowncaseUnicodeString.

2014-08-19  Corinna Vinschen  <corinna@@vinschen.de>

	* fhandler.h (fhandler_serial::is_tty): Reinstantiate.

2014-08-18  Corinna Vinschen  <corinna@@vinschen.de>

	* miscfuncs.cc (strlwr): Rename from cygwin_strlwr.  Drop __stdcall
	decoration.
	(strupr): Rename from cygwin_strupr.  Drop __stdcall decoration.
	* string.h (strlwr): Remove override macro.  Simply declare.
	(strupr): Ditto.

2014-08-18  Corinna Vinschen  <corinna@@vinschen.de>

	* dtable.cc (dtable::init_std_file_from_handle): Mention that console
	handles are kernel objects since Windows 8.
	* fhandler.h (enum conn_state): Add "listener" state.
	(class fhandler_socket): Drop listener status flag.
	(fhandler_socket::lseek): Return -1 and errno ESPIPE.
	(fhandler_serial::lseek): Ditto.
	(fhandler_serial::is_tty): Remove.
	* fhandler_socket.cc (fhandler_socket::listen): Set connect_state to
	listener.  Add comment.
	(fhandler_socket::accept4): Explicitely check if the socket is listening
	and fail with EINVAL, if not.  Explain why we have to do that.
	(fhandler_socket::getpeereid): Drop now redundant test.

2014-08-15  Corinna Vinschen  <corinna@@vinschen.de>

	* winsup.h (_GNU_SOURCE): Define.  Explain why.

2014-08-14  Corinna Vinschen  <corinna@@vinschen.de>

	* dlmalloc.c: Remove unused file.
	* dlmalloc.h: Ditto.
	* malloc.cc: Update to Doug Lea's malloc version 2.8.6.

2014-08-13  Corinna Vinschen  <corinna@@vinschen.de>

	* include/cygwin/version.h (CYGWIN_VERSION_DLL_MINOR): Bump to 33.
	(CYGWIN_VERSION_API_MINOR): Bump to reflect intermediate 1.7.32 release.

2014-07-21  Corinna Vinschen  <corinna@@vinschen.de>

	* include/cygwin/version.h (CYGWIN_VERSION_DLL_MINOR): Bump to 32.

2014-05-06  Corinna Vinschen  <corinna@@vinschen.de>

	* winlean.h (PIPE_REJECT_REMOTE_CLIENTS): Drop temporary definition
	since Mingw64 catched up.
	(DNLEN): Redefine as 16.  Explain why.

2014-03-06  Corinna Vinschen  <corinna@@vinschen.de>

	* setlsapwd.cc (setlsapwd): Use RtlSecureZeroMemory to delete password
	from memory.

2014-11-05  Corinna Vinschen  <corinna@@vinschen.de>

	* new-features.xml (ov-new1.7.33): Document atexit.

2014-10-28  Corinna Vinschen  <corinna@@vinschen.de>

	* cygwinenv.xml: Change default setting of dosfilewarning.
	* new-features.xml (ov-new1.7.33): Document aforementioned change.

2014-10-27  Corinna Vinschen  <corinna@@vinschen.de>

	* new-features.xml (ov-new1.7.33): Document empty $PATH handling.

2014-10-22  Corinna Vinschen  <corinna@@vinschen.de>

	* posix.xml (std-gnu): Add ffsl, ffsll, quotactl.
	(std-notes): Add restrictions of quotactl.

2014-10-22  Yaakov Selkowitz  <yselkowi@@redhat.com>

	* new-features.xml (ov-new1.7.33): Document stime.
	* posix.xml (std-deprec): Add stime.

2014-10-22  Corinna Vinschen  <corinna@@vinschen.de>

	* new-features.xml (ov-new1.7.33): s/Linux/glibc.

2014-10-22  Corinna Vinschen  <corinna@@vinschen.de>

	* new-features.xml (ov-new1.7.33): Update to current state.

2014-08-13  Corinna Vinschen  <corinna@@vinschen.de>

	* new-features.xml (ov-new1.7.33): Add new section.
	(ov-new1.7.32): Reflect intermediate 1.7.32 release.

2014-10-21  Corinna Vinschen  <corinna@@vinschen.de>

	* cygcheck.cc (CYGLSA64_DLL): Remove unused macro.
	(dump_sysinfo): If COMSPEC isn't set in the MSVCRT environment, set it.
	Explain why.
@
text
@a1136 2
    ffsl
    ffsll
a1168 1
    quotactl
a1298 1
    stime			(SVID)
a1555 4
<para>The Linux-specific function <function>quotactl</function> only implements
what works on Windows:  Windows only supports user block quotas on NTFS, no
group quotas, no inode quotas, no time constraints.</para>

@


1.86
log
@* common.din (rawmemchr): Export.
* posix.sgml (std-gnu): Add rawmemchr.
* include/cygwin/version.h (CYGWIN_VERSION_API_MINOR): Bump.
@
text
@d524 21
a1427 1
    posix_spawn[...]
@


1.85
log
@	* posix.sgml (fcntl, flock, lockf): Point to implementation notes.
@
text
@d1148 1
@


1.84
log
@	* posix.sgml (std-notes): Fix typo.
@
text
@d191 1
a191 1
    fcntl
d421 1
a421 1
    lockf
d980 1
a980 1
    flock
@


1.83
log
@	* fhandler_disk_file.cc (fhandler_disk_file::pread): Skip to non-atomic
	code if mandatory locking is used on this descriptor.  Explain why.
	(fhandler_disk_file::pwrite): Ditto.
	* posix.sgml (std-notes): Extend description of file locking.
@
text
@d1494 1
a1494 1
no atmoic replacement of read locks with write locks and vice versa on the
@


1.82
log
@	* Makefile.in (DLL_OFILES): Add arc4random.o.
	* common.din: Export arc4random, arc4random_addrandom, arc4random_buf,
	arc4random_stir and arc4random_uniform.
	* mktemp.cc (arc4random): Remove static replacement function.
	* posix.sgml (std-bsd): Add arc4random functions.
	* include/cygwin/stdlib.h: Declare arc4random functions.
	* include/cygwin/version.h (CYGWIN_VERSION_API_MINOR): Bump.
	* libc/arc4random.cc: New file implementing arc4random functions taken
	from FreeBSD.
@
text
@d1470 5
d1477 19
a1495 2
processes.  The locks are only valid in the creating process, its parent,
and subsequently started child processes sharing the same file descriptor.
@


1.81
log
@	* libc/base64.c: New file.
	* Makefile.in (DLL_OFILES): Add base64.o.
	* common.din: Export __b64_ntop and __b64_pton.
	* posix.sgml (std-bsd): Add __b64_ntop and __b64_pton.
	* include/cygwin/version.h (CYGWIN_VERSION_API_MINOR): Bump.
@
text
@d959 5
@


1.80
log
@* termios.cc (cfsetspeed): New function.
* cygwin.din (cfsetspeed): Export.
* posix.sgml (std-bsd): Add cfsetspeed.
* include/sys/termios.h (cfsetspeed): Declare.
* include/cygwin/version.h (CYGWIN_VERSION_API_MINOR): Bump.
@
text
@d957 2
@


1.79
log
@	* cygwin.din (getmntent_r): Export.
	* mount.cc (getmntent_r): New function.
	* posix.sgml (std-gnu): Add getmntent_r.
	* include/mntent.h (getmntent_r): Declare.
	* include/cygwin/version.h (CYGWIN_VERSION_API_MINOR): Bump.
@
text
@d960 1
@


1.79.2.1
log
@Pull in changes from HEAD
@
text
@a959 1
    cfsetspeed
@


1.78
log
@	* cygwin.din (memrchr): Export.
	* posix.sgml (std-gnu): Add memrchr.
	* include/cygwin/version.h (CYGWIN_VERSION_API_MINOR): Bump.
@
text
@d1118 1
@


1.77
log
@	* posix.sgml (std-notes): Change description of flock restrictions.
@
text
@d1129 1
@


1.76
log
@	* cygwin.din (scandirat): Export.
	* posix.sgml (std-gnu): Add scandirat.
	* syscalls.cc (scandirat): New function.
	* include/cygwin/version.h (CYGWIN_VERSION_API_MINOR): Bump.
	* include/sys/dirent.h (scandirat): Declare.
@
text
@d1460 5
a1464 4
<para>BSD file locks created via <function>flock</function> are not
propagated to the parent process and sibling processes.  The locks are
only valid in the creating process and subsequently started child processes
sharing the same file descriptor.</para>
@


1.75
log
@	* cygwin.din (pthread_sigqueue): Export.
	* posix.sgml (std-gnu): Add pthread_sigqueue.
	* thread.cc (pthread_sigqueue): New function.
	* include/thread.h (pthread_sigqueue): New function.
	* include/cygwin/version.h (CYGWIN_VERSION_API_MINOR): Bump.
@
text
@d1139 1
@


1.74
log
@	* cygwin.din (get_current_dir_name): Export.
	* path.cc (get_current_dir_name): New function.
	* posix.sgml (std-gnu): Add get_current_dir_name.
	* include/cygwin/version.h (CYGWIN_VERSION_API_MINOR): Bump.
@
text
@d1136 1
@


1.73
log
@	* cygwin.din (getpt): Export.
	* posix.sgml (std-gnu): Add getpt.
	* tty.cc (getpt): New function.
	* include/cygwin/stdlib.h [!__STRICT_ANSI__] (getpt): Declare.
	* include/cygwin/version.h (CYGWIN_VERSION_API_MINOR): Bump.
@
text
@d1114 1
@


1.72
log
@	* posix.sgml (std-gnu): Add ptsname_r.
@
text
@d1119 1
@


1.71
log
@	* cygwin.din (getgrouplist): Export.
	* grp.cc (get_groups): New static function to run the core functionality
	of initgroups and getgrouplist.
	(initgroups32): Call get_groups and just create supplementary group
	list in cygheap.  Rename name of first argument to "user".  Add an
	assertion to test for a NULL user name.
	(initgroups): Rename name of first argument to "user".
	(getgrouplist): New function.
	* posix.sgml (std-bsd): Add getgrouplist.
	* include/cygwin/grp.h (getgrouplist): Declare.
	* include/cygwin/version.h: Bump API minor number.
@
text
@d1134 1
@


1.70
log
@* cygwin.din (clock_nanosleep): Export.
* posix.sgml (std-notimpl): Move clock_nanosleep from here...
(std-susv4): ... to here.
(std-notes): Note limitations of clock_nanosleep.
* signal.cc (clock_nanosleep): Renamed from nanosleep, adding clock_id
and flags arguments and changing return values throughout.
Improve checks for illegal rqtp values.  Add support for
CLOCK_MONOTONIC and TIMER_ABSTIME.
(nanosleep): Rewrite in terms of clock_nanosleep.
(sleep): Ditto.
(usleep): Ditto.
* thread.cc: Mark clock_nanosleep in list of cancellation points.
* include/cygwin/version.h (CYGWIN_VERSION_API_MINOR): Bump.
@
text
@d992 1
@


1.69
log
@* cygwin.din (pthread_condattr_getclock): Export.
(pthread_condattr_setclock): Export.
* posix.sgml (std-notimpl): Move pthread_condattr_getclock and
pthread_condattr_setclock from here...
(std-susv4): ... to here.
* sysconf.cc (sca): Set _SC_CLOCK_SELECTION to _POSIX_CLOCK_SELECTION.
* thread.cc: (pthread_condattr::pthread_condattr): Initialize clock_id.
(pthread_cond::pthread_cond): Initialize clock_id.
(pthread_cond_timedwait): Use clock_gettime() instead of gettimeofday()
in order to support all allowed clocks.
(pthread_condattr_getclock): New function.
(pthread_condattr_setclock): New function.
* thread.h (class pthread_condattr): Add clock_id member.
(class pthread_cond): Ditto.
* include/pthread.h: Remove obsolete comment.
(pthread_condattr_getclock): Declare.
(pthread_condattr_setclock): Declare.
* include/cygwin/version.h (CYGWIN_VERSION_API_MINOR): Bump.
@
text
@d95 1
a1302 1
    clock_nanosleep
d1449 4
a1452 2
<para><function>clock_setres</function>, <function>clock_settime</function>,
and <function>timer_create</function> only support CLOCK_REALTIME.</para>
@


1.68
log
@	* posix.sgml (std-notes): Add missing <para>.
@
text
@d557 1
d560 1
a1394 2
    pthread_condattr_getclock
    pthread_condattr_setclock
@


1.67
log
@* cygwin.din (__fpurge): Export.
* posix.sgml (std-solaris): Add __fpurge.
* include/cygwin/version.h (CYGWIN_VERSION_API_MINOR): Bump.
@
text
@d1449 2
a1450 2
<function>clock_setres</function>, <function>clock_settime</function>, and
<function>timer_create</function> only support CLOCK_REALTIME.</para>
@


1.66
log
@* posix.sgml (std-susv4): Remove chroot, futimes, hstrerror.
(std-deprec): Add chroot.
(std-bsd): Add futimes, hstrerror.
(std-notimpl): Add clock_nanosleep, nexttoward, nexttowardf.
Remove initstate, which is implemented and listed in std-susv4.
@
text
@d1149 1
@


1.65
log
@* cygwin.din (error): Export.
(error_at_line): Export.
(error_message_count): Export.
(error_one_per_line): Export.
(error_print_progname): Export.
* errno.cc (error_message_count): Define.
(error_one_per_line): Define.
(error_print_progname): Define.
(_verror): New static function.
(error): New function.
(error_at_line): New function.
* posix.sgml (std-gnu): Add error, error_at_line.
* include/error.h: New header.
* include/cygwin/version.h (CYGWIN_VERSION_API_MINOR): Bump.
@
text
@a87 1
    chroot			(see chapter "Implementation Notes")
a261 1
    futimes
a331 1
    hstrerror
d983 1
d995 1
d1223 1
d1299 1
a1340 1
    initstate
d1383 2
@


1.64
log
@* cygwin.din (clock_getcpuclockid): Export.
(pthread_getcpuclockid): Export.
* hires.h (PID_TO_CLOCKID): New macro.
(CLOCKID_TO_PID): New macro.
(CLOCKID_IS_PROCESS): New macro.
(THREADID_TO_CLOCKID): New macro.
(CLOCKID_TO_THREADID): New macro.
(CLOCKID_IS_THREAD): New macro.
* ntdll.h (enum _THREAD_INFORMATION_CLASS): Add ThreadTimes.
* posix.sgml (std-notimpl): Add clock_getcpuclockid and
pthread_getcpuclockid from here...
(std-susv4): ... to here.
(std-notes): Remove limitations of clock_getres and clock_gettime.
Note limitation of timer_create to CLOCK_REALTIME.
* sysconf.cc (sca): Set _SC_CPUTIME to _POSIX_CPUTIME, and
_SC_THREAD_CPUTIME to _POSIX_THREAD_CPUTIME.
* thread.cc (pthread_getcpuclockid): New function.
* timer.cc (timer_create): Set errno to ENOTSUP for CPU-time clocks.
* times.cc (clock_gettime): Handle CLOCK_PROCESS_CPUTIME_ID and
CLOCK_THREAD_CPUTIME_ID.
(clock_getres): Ditto.
(clock_settime): Set errno to EPERM for CPU-time clocks.
(clock_getcpuclockid): New function.
* include/pthread.h (pthread_getcpuclockid): Declare.
* include/cygwin/version.h (CYGWIN_VERSION_API_MINOR): Bump.
@
text
@d1092 2
@


1.63
log
@	* cygwin.din (pthread_attr_getguardsize): Export.
	(pthread_attr_setguardsize): Export.
	(pthread_attr_setstack): Export.
	(pthread_attr_setstackaddr): Export.
	* init.cc (dll_entry): Remove wow64_test_stack_marker.  Check for
	unusual stack address by testing stack addresses from current TEB.
	Check validity of _my_tls by testing if it's within the stack as
	given in current TEB.
	* miscfuncs.cc (struct thread_wrapper_arg): New structure used to
	push all required information to thread_wrapper function.
	(thread_wrapper): Wrapper function for actual thread function.
	If an application stack has been given, change %ebp and %esp so that
	the thread function runs on that stack.  If the thread has been created
	by CygwinCreateThread, set up the POSIX guard pages if necessary.
	(CygwinCreateThread): New function.
	* miscfuncs.h (CygwinCreateThread): Declare.
	* ntdll.h (struct _TEB): Define all members up to Peb.
	* posix.sgml (std-susv4): Move pthread_attr_getguardsize,
	pthread_attr_setguardsize and pthread_attr_setstack here.
	(std-deprec): Add pthread_attr_setstackaddr.
	* sysconf.cc (sca): Set _SC_THREAD_ATTR_STACKADDR to
	_POSIX_THREAD_ATTR_STACKADDR.
	* thread.cc (pthread::precreate): Copy pthread_attr stackaddr and
	guardsize members.
	(pthread::create): Call CygwinCreateThread.
	(pthread_attr::pthread_attr): Initialize guardsize.
	(pthread_attr_setstack): New function.
	(pthread_attr_setstackaddr): New function.
	(pthread_attr_setguardsize): New function.
	(pthread_attr_getguardsize): New function.
	(pthread_getattr_np): Copy attr.guardsize.
	* thread.h (pthread_attr): Add member guardsize.
	* include/pthread.h (pthread_attr_getguardsize): Declare.
	(pthread_attr_setguardsize): Declare.
	* include/cygwin/version.h: Bump API minor number.
@
text
@d93 3
a95 2
    clock_getres		(see chapter "Implementation Notes")
    clock_gettime		(see chapter "Implementation Notes")
d568 1
d841 1
a841 1
    timer_create
a1296 1
    clock_getcpuclockid
a1389 1
    pthread_getcpuclockid
d1444 2
a1445 3
<para><function>clock_getres</function> and <function>clock_gettime</function>
only support CLOCK_REALTIME and CLOCK_MONOTONIC for now.  <function>clock_setres</function>
and <function>clock_settime</function> only support CLOCK_REALTIME.</para>
@


1.62
log
@* times.cc (settimeofday): Add EFAULT handler.
Set errno to EINVAL if tv.tv_nsec is invalid, and to EPERM if
SetSystemTime fails.  Return -1 in case of failure, all for
compatibility with BSD and Linux.
(clock_settime): New function.
* cygwin.din (clock_settime): Export.
* posix.sgml (std-susv4): Add clock_settime.
Move clock_setres from here...
(std-deprec): ... to here.
(std-notes): Correct limitation of clock_setres to only CLOCK_REALTIME.
Add limitation of clock_settime to only CLOCK_REALTIME.
* include/cygwin/version.h (CYGWIN_VERSION_API_MINOR): Bump.
@
text
@d535 1
d544 1
d549 1
d1243 1
a1385 3
    pthread_attr_getguardsize
    pthread_attr_setguardsize
    pthread_attr_setstack
@


1.61
log
@* sysconf.cc (sysinfo): New function.
* cygwin.din (sysinfo): Export.
* posix.sgml (std-gnu): Add sysinfo.
* include/sys/sysinfo.h (struct sysinfo): Define.
(sysinfo): Declare.
* include/cygwin/version.h (CYGWIN_VERSION_API_MINOR): Bump.
@
text
@d95 1
a95 1
    clock_setres		(see chapter "Implementation Notes")
d1217 1
d1443 3
a1445 3
<para><function>clock_getres</function>, <function>clock_gettime</function>
and <function>clock_setres</function> only support CLOCK_REALTIME and
CLOCK_MONOTONIC for now.</para>
@


1.60
log
@	* posix.sgml (std-notimpl): Remove bsd_signal, setcontext, and
	swapcontext, marked obsolete in SUSv3 and not present in SUSv4.
@
text
@d1127 1
@


1.59
log
@* cygwin.din (psiginfo): Export.
(psignal): Export.
(sys_siglist): Export.
* posix.sgml (std-notimpl): Move psiginfo and psignal from here...
(std-susv4): ... to here.
(std-deprec): Add sys_siglist.
* strsig.cc (sys_siglist): New array.
(psiginfo): New function.
* include/cygwin/signal.h (sys_siglist): Declare.
(psiginfo): Declare.
* include/cygwin/version.h (CYGWIN_VERSION_API_MINOR): Bump.
@
text
@a1275 1
    bsd_signal
a1398 1
    setcontext
a1411 1
    swabcontext
@


1.58
log
@* cygwin.din (pthread_attr_getstack): Export.
(pthread_attr_getstackaddr): Export.
(pthread_getattr_np): Export.
* ntdll.h (enum _THREAD_INFORMATION_CLASS): Add ThreadBasicInformation.
(struct _THREAD_BASIC_INFORMATION): Define.
(NtQueryInformationThread): Declare.
* posix.sgml (std-susv4): Add pthread_attr_getstack.
(std-gnu): Add pthread_getattr_np.
(std-deprec): Add pthread_attr_getstackaddr.
(std-notimpl): Remove pthread_attr_[gs]etstackaddr, as they were
removed from SUSv4.
* thread.cc (pthread_attr::pthread_attr): Initialize stackaddr.
(pthread_attr_getstack): New function.
(pthread_attr_getstackaddr): New function.
(pthread_attr_setstacksize): Return EINVAL if passed size less than
PTHREAD_STACK_MIN, as required by POSIX.
(pthread_getattr_np): New function.
* thread.h (class pthread_attr): Add stackaddr member.
* include/pthread.h (pthread_attr_getstack): Declare.
(pthread_attr_getstackaddr): Declare unconditionally.
(pthread_attr_setstack): Declare inside false conditional for reference.
(pthread_getattr_np): Declare.
* include/cygwin/version.h (CYGWIN_VERSION_API_MINOR): Bump.
@
text
@d530 2
d1249 1
a1380 2
    psiginfo
    psignal
@


1.57
log
@	* cygwin.din (ppoll): Export.
	* poll.cc (ppoll): Implement.
	* posix.sgml (std-gnu): Add ppoll.
	* include/cygwin/version.h: Bump API minor number.
	* include/sys/poll.h (ppoll): Declare.
@
text
@d537 1
d1121 1
d1235 1
a1380 2
    pthread_attr_getstack
    pthread_attr_getstackaddr
a1382 1
    pthread_attr_setstackaddr
@


1.56
log
@* thread.cc (pthread_setschedprio): New function.
* include/pthread.h (pthread_setschedprio): Declare.
* include/cygwin/version.h (CYGWIN_VERSION_API_MINOR): Bump.
* cygwin.din (pthread_setschedprio): Export.
* posix.sgml (std-notimpl) Move pthread_setschedprio from here...
(std-susv4) ...to here.
@
text
@d1119 1
@


1.55
log
@	* cygwin.din (pthread_spin_destroy): Export.
	(pthread_spin_init): Export.
	(pthread_spin_lock): Export.
	(pthread_spin_trylock): Export.
	(pthread_spin_unlock): Export.
	* posix.sgml (std-susv4): Add pthread_spin_destroy, pthread_spin_init,
	pthread_spin_lock, pthread_spin_trylock, pthread_spin_unlock.
	(std-notimpl): Remove pthread_spin_[...].
	* pthread.cc (pthread_spin_init): New function.
	* thread.cc (pthread_spinlock::is_good_object): New function.
	(pthread_mutex::pthread_mutex): Rearrange initializers to accommodate
	protected data in pthread_mutex.
	(pthread_spinlock::pthread_spinlock): New constructor.
	(pthread_spinlock::lock): New method.
	(pthread_spinlock::unlock): New method.
	(pthread_spinlock::init): New method.
	(pthread_spin_lock): New function.
	(pthread_spin_trylock): New function.
	(pthread_spin_unlock): New function.
	(pthread_spin_destroy): New function.
	* thread.h (PTHREAD_SPINLOCK_MAGIC): Define.
	(class pthread_mutex): Change access level of members shared with
	derived classes to protected.
	(pthread_mutex::set_shared): New protected method.
	(class pthread_spinlock): New class, derived class of pthread_mutex.
	* include/pthread.h (pthread_spin_destroy): Declare.
	(pthread_spin_init): Declare.
	(pthread_spin_lock): Declare.
	(pthread_spin_trylock): Declare.
	(pthread_spin_unlock): Declare.
	* include/cygwin/types.h (pthread_spinlock_t): New typedef.
	* include/cygwin/version.h (CYGWIN_VERSION_API_MINOR): Bump.
@
text
@d601 1
a1391 1
    pthread_setschedprio
@


1.54
log
@	* cygwin.din (strchrnul): Export.
	* include/cygwin/version.h (CYGWIN_VERSION_API_MINOR): Bump.
	* posix.sgml (std-gnu): Add strchrnul.
@
text
@d603 5
a1391 1
    pthread_spin_[...]
@


1.53
log
@* cygwin.din (pthread_yield): Export as alias to sched_yield.
* include/pthread.h (pthread_yield): Declare.
* include/cygwin/version.h (CYGWIN_VERSION_API_MINOR): Bump.
* posix.sgml (std-deprec): Add pthread_yield.
@
text
@d1115 1
@


1.53.2.1
log
@	* cygwin.din (pthread_spin_destroy): Export.
	(pthread_spin_init): Export.
	(pthread_spin_lock): Export.
	(pthread_spin_trylock): Export.
	(pthread_spin_unlock): Export.
	* posix.sgml (std-susv4): Add pthread_spin_destroy, pthread_spin_init,
	pthread_spin_lock, pthread_spin_trylock, pthread_spin_unlock.
	(std-notimpl): Remove pthread_spin_[...].
	* pthread.cc (pthread_spin_init): New function.
	* thread.cc (pthread_spinlock::is_good_object): New function.
	(pthread_mutex::pthread_mutex): Rearrange initializers to accommodate
	protected data in pthread_mutex.
	(pthread_spinlock::pthread_spinlock): New constructor.
	(pthread_spinlock::lock): New method.
	(pthread_spinlock::unlock): New method.
	(pthread_spinlock::init): New method.
	(pthread_spin_lock): New function.
	(pthread_spin_trylock): New function.
	(pthread_spin_unlock): New function.
	(pthread_spin_destroy): New function.
	* thread.h (PTHREAD_SPINLOCK_MAGIC): Define.
	(class pthread_mutex): Change access level of members shared with
	derived classes to protected.
	(pthread_mutex::set_shared): New protected method.
	(class pthread_spinlock): New class, derived class of pthread_mutex.
	* include/pthread.h (pthread_spin_destroy): Declare.
	(pthread_spin_init): Declare.
	(pthread_spin_lock): Declare.
	(pthread_spin_trylock): Declare.
	(pthread_spin_unlock): Declare.
	* include/cygwin/types.h (pthread_spinlock_t): New typedef.
	* include/cygwin/version.h (CYGWIN_VERSION_API_MINOR): Bump.
@
text
@a602 5
    pthread_spin_destroy
    pthread_spin_init
    pthread_spin_lock
    pthread_spin_trylock
    pthread_spin_unlock
d1386 1
@


1.53.2.2
log
@Pull in HEAD changes
@
text
@a1119 1
    strchrnul
@


1.52
log
@	* posix.sgml: Add madvise to BSD list.
@
text
@d1228 1
@


1.51
log
@	* posix.sgml: Move llround and llroundf to implemented SUSv4 functions.
	* include/cygwin/version.h: Add llround and llroundf to the comment for
	the 233 CYGWIN_VERSION_API_MINOR bump.
@
text
@d994 1
@


1.50
log
@	* cygwin.din: Export new complex math functions from newlib.
	* posix.sgml: Move newly exported complex functions to implemented
	SUSv4 functions.
	* include/cygwin/version.h: Bump API minor version.
@
text
@d417 2
a1344 2
    llround
    llroundf
@


1.49
log
@winsup/cygwin/ChangeLog:

	* Makefile.in (DLL_OFILES): Add new fenv.o module.
	(fenv_CFLAGS): New flags definition for fenv.o compile.
	* autoload.cc (std_dll_init): Use fenv.h functions instead of direct
	manipulation of x87 FPU registers.
	* crt0.c (mainCRTStartup): Likewise.
	* cygwin.din (feclearexcept, fegetexceptflag, feraiseexcept,
	fesetexceptflag, fetestexcept, fegetround, fesetround, fegetenv,
	feholdexcept, fesetenv, feupdateenv, fegetprec, fesetprec,
	feenableexcept, fedisableexcept, fegetexcept, _feinitialise,
	_fe_dfl_env, _fe_nomask_env): Export new functions and data items.
	* fenv.cc: New file.
	* posix.sgml: Update status of newly-implemented APIs.
	* include/fenv.h: Likewise related header.
	* include/cygwin/version.h (CYGWIN_VERSION_API_MINOR): Bump.
@
text
@d52 4
d57 11
d73 4
d79 2
d89 2
d96 2
d102 2
d111 6
d119 10
a1259 4
    cacos
    cacosf
    cacosh
    cacoshf
a1261 2
    carg
    cargf
a1262 5
    casin
    casinf
    casinh
    casinhf
    casinhl
a1263 4
    catan
    catanf
    catanh
    catanhf
a1266 4
    ccos
    ccosf
    ccosh
    ccoshf
a1269 2
    cexp
    cexpf
a1270 2
    cimag
    cimagf
a1272 2
    clog
    clogf
a1273 2
    conj
    conjf
a1277 2
    cpow
    cpowf
a1278 2
    cproj
    cprojf
a1279 2
    creal
    crealf
a1280 4
    csin
    csinf
    csinh
    csinhf
a1282 2
    csqrt
    csqrtf
a1283 4
    ctan
    ctanf
    ctanh
    ctanhf
@


1.48
log
@	* posix.sgml (std-notes): Fix typos and incorrectnesses.
@
text
@d153 5
d159 1
d161 5
d1038 5
a1295 11
    feclearexcept
    fegetenv
    fegetexceptflag
    fegetround
    feholdexcept
    feraiseexcept
    fesetenv
    fesetexceptflag
    fesetround
    fetestexcept
    feupdateenv
@


1.47
log
@Add mkostemp and mkostemps.

* mktemp.cc (_gettemp): Add flags argument.  All callers updated.
(mkostemp, mkostemps): New functions.
* cygwin.din (mkostemp, mkostemps): Export.
* posix.sgml: Document them.
* include/cygwin/version.h: Bump version.
@
text
@d1431 2
a1432 2
and <function>clock_setres</function> only support CLOCK_REALTIME for
now.</para>
d1437 1
a1437 1
shaing the same file descriptor.</para>
d1450 2
a1451 3
<para><function>link</function> will copy the file if it can't implement
a true hardlink.  This is true at least for FAT and FAT32 filesystems.
NTFS supports hardlinks.  </para>
d1464 3
a1466 2
<para><function>vhangup</function> always returns -1 and sets errno to
ENOSYS.</para>
@


1.46
log
@	* posix.sgml (std-notes): Improve lseek description.
@
text
@d1046 2
@


1.45
log
@	* cygwin.din: Export __xdr functions.
	* include/cygwin/version.h: Bump version.
	* posix.sgml: Add a few more XDR functions to list
	of implemented Solaris functions.
@
text
@d1452 3
a1454 2
<para><function>lseek</function> only works properly on binary
files.</para>
@


1.44
log
@	Add XDR support.
	* cygwin.din: Export xdr functions.
	* include/cygwin/version.h: Bump version.
	* cygxdr.cc: New.
	* cygxdr.h: New.
	* dcrt0.cc (dll_crt0_1): Print the (rare) xdr-related
	error messages to stderr.
	* Makefile.in: Add cygxdr.
	* posix.sgml: Add new XDR functions to list of implemented Solaris
	functions.
@
text
@d1127 2
@


1.43
log
@	* posix.sgml (strfmon): Move to implemented SUSv4 API.
@
text
@d1081 47
@


1.42
log
@	* cygwin.din (accept4): Export.
	* fhandler.h (fhandler_socket::accept4): Rename from accept.  Take
	additional flag parameter.
	* fhandler_socket.cc (fhandler_socket::accept4): Ditto.  Handle
	SOCK_NONBLOCK and SOCK_CLOEXEC flags.
	* net.cc (cygwin_socket): Handle SOCK_NONBLOCK and SOCK_CLOEXEC flags
	in type.  Check for invalid flag values.
	(socketpair): Ditto.
	(cygwin_accept): Accommodate renaming of fhandler_socket::accept
	function to accept4.
	(accept4): New function.
	* posix.sgml: Mention accept4 as GNU extensions.
	* include/cygwin/socket.h (SOCK_NONBLOCK): Define.
	(SOCK_CLOEXEC): Define.
	(_SOCK_FLAG_MASK): Define when building Cygwin.
	* include/cygwin/version.h (CYGWIN_VERSION_API_MINOR): Bump.
	* include/sys/socket.h (accept4): Declare.
@
text
@d717 1
a1344 1
    strfmon
@


1.41
log
@	* posix.sgml: Mention dup3 and pipe2 as GNU extensions.
@
text
@d995 1
@


1.40
log
@	* sysconf.cc (get_nprocs): New function.
	(get_nprocs_conf): Ditto.
	(get_avphys_pages): Ditto.
	(get_phys_pages): Ditto.
	* cygwin.din: Export them.
	* include/sys/sysinfo.h: New header, decalre above new functions.
	* include/cygwin/version.h (CYGWIN_VERSION_API_MINOR): Bump.
	* posix.sgml: Mention them as GNU extensions.
@
text
@d1012 1
d1044 1
@


1.39
log
@Add fexecve, execvpe.

* exec.cc (fexecve): New function.
* cygwin.din (execvpe, fexecve): Export new fexecve and existing
execvpe.
* include/cygwin/version.h (CYGWIN_VERSION_API_MINOR): Bump.
* posix.sgml: Mention them.
@
text
@d1029 4
@


1.38
log
@Provide euidaccess, canonicalize_file_name; fix fchmodat.

* syscalls.cc (fchmodat): lchmod is not yet implemented.
(euidaccess): New function.
* path.cc (realpath): Update comment.
(canonicalize_file_name): New function.
* include/cygwin/stdlib.h (canonicalize_file_name): Declare it.
* include/cygwin/version.h (CYGWIN_VERSION_API_MINOR): Bump.
* cygwin.din: Export canonicalize_file_name, eaccess, euidaccess.
* posix.sgml: Mention them.
@
text
@d155 1
d1019 1
a1231 1
    fexecve
@


1.37
log
@	* posix.sgml (std-notes): Remove obsolete reference to CYGWIN=server.
@
text
@d893 1
d1009 1
d1017 1
@


1.36
log
@	* posix.sgml (std-notes): Add flock restriction.
@
text
@d1411 1
a1411 3
available when cygserver is running and the <envar>CYGWIN</envar>
environment variable is set so that it contains the string
<envar>server</envar>.</para>
@


1.35
log
@	* posix.sgml: Add fpurge and mkstemps to BSD list.
@
text
@d1372 5
@


1.34
log
@	* cygwin.din: Export wordexp, wordfree.
	* posix.sgml: Move them to SUSv4 list.
	* include/cygwin/version.h: Bump API minor number.
@
text
@d901 1
d935 1
@


1.33
log
@	* cygwin.din: Export log2, log2f as functions.
	* posix.sgml: Add them to SUSv4 list.
	* include/cygwin/version.h: Bump API minor number.
@
text
@d869 2
a1354 2
    wordexp
    wordfree
@


1.32
log
@	* cygwin.din: Export wcsdup.
	* posix.sgml: Add wcsdup to SUSv4 list.
	* include/cygwin/version.h: Bump API minor number.
@
text
@d371 2
@


1.31
log
@	* cygwin.din: Export wcscasecmp, wcsncasecmp.
	* posix.sgml: Move wcscasecmp, wcsncasecmp to SUSv4 list.
	* include/cygwin/version.h: Bump API minor number.
@
text
@d831 1
@


1.30
log
@	* cygwin.din: Export wscanf, fwscanf, swscanf, vwscanf, vfwscanf,
	vswscanf.
	* posix.sgml: Move fwscanf, swscanf, vwscanf, vfwscanf, vswscanf
	to SUSv4 list.
	* include/cygwin/version.h: Bump API minor number.
@
text
@d824 1
d833 1
a1343 1
    wcscasecmp
a1344 1
    wcsncasecmp
@


1.29
log
@	* cygwin.din: Export wcsftime.
	* posix.sgml: Move wcsftime to SUSv4 list.
	* include/cygwin/version.h: Bump API minor number.
@
text
@d211 1
d741 1
d809 1
d816 1
d818 1
d867 1
a1226 1
    fwscanf
a1329 1
    swscanf
a1340 3
    vfwscanf
    vswscanf
    vwscanf
a1351 1
    wscanf
@


1.28
log
@	* cygwin.din: Export gethostbyname2.
	* net.cc: define _CYGWIN_IN_H and include resolv.h.
	(realloc_ent): New function.
	(dup_ent): Call realloc_ent.
	(memcpy4to6): New function.
	(dn_length1): New function.
	(gethostby_helper): New function.
	(gethostbyname2): New function.
	* posix.sgml: Add gethostbyname2.
	* include/cygwin/version.h: Bump API minor number.
	* libc/minires.c (get_options): Look for "inet6" and apply bounds
	to "retry" and "retrans".
	(res_ninit): Set the default options at the beginning.
	(dn_expand): Fix "off by one".
@
text
@d825 1
a1342 1
    wcsftime
@


1.27
log
@	* cygwin.din: Export wprintf, fwprintf, swprintf, vwprintf, vfwprintf,
	vswprintf.  Sort.
	* posix.sgml: Move fwprintf, swprintf, vwprintf, vfwprintf, vswprintf
	to SUSv4 list.  Sort SUSv4 list.
	* include/cygwin/version.h: Bump API minor number.
@
text
@d1070 1
@


1.26
log
@	* cygwin.din: Export mbsnrtowcs and wcsnrtombs.
	* posix.sgml: Move mbsnrtowcs and wcsnrtombs to SUSv4 section.
	* include/cygwin/version.h: Bump API minor number.
@
text
@d209 1
d444 2
a448 2
    open_memstream
    open_wmemstream
d507 7
a523 7
    pthread_mutex_destroy
    pthread_mutex_getprioceiling
    pthread_mutex_init
    pthread_mutex_lock
    pthread_mutex_setprioceiling
    pthread_mutex_trylock
    pthread_mutex_unlock
d739 1
d806 1
d812 2
a1218 1
    fwprintf
a1322 1
    swprintf
a1334 1
    vfwprintf
a1335 1
    vswprintf
a1336 1
    vwprintf
@


1.25
log
@	* cygwin.din: Export open_wmemstream.
	* posix.sgml: Move open_wmemstream to SUSv4 section.
	* include/cygwin/version.h: Bump API minor number.
@
text
@d387 1
d825 1
a1263 1
    mbsnrtowcs
a1343 1
    wcsnrtombs
@


1.24
log
@	* cygwin.din: Export reallocf.
	* malloc_wrapper.cc( reallocf): New function.
	* posix.sgml: Add reallocf to BSD section.
	* include/cygwin/version.h: Bump API minor number.
	* libc/fts.c: Remove erroneous reallocf definition.
@
text
@d446 1
a1270 1
    open_wmemstream
@


1.23
log
@	* cygwin.din: Export wcstoimax, wcstoumax.
	* posix.sgml: Move wcstoimax and wcstoumax to SUSv4 section.
	* include/inttypes.h: Declare wcstoimax and wcstoumax.
	* include/cygwin/version.h: Bump API minor number.
@
text
@d915 1
@


1.22
log
@	* cygwin.din: Export wcsnlen.
	* posix.sgml: Move wcsnlen to SUSv4 section.
	* include/cygwin/version.h: Bump API minor number.
@
text
@d830 1
d837 1
a1342 1
    wcstoimax
a1343 1
    wcstoumax
@


1.21
log
@	* posix.sgml: Move dirfd to SUSv4 section.
@
text
@d822 1
a1339 1
    wcsnlen
@


1.20
log
@	* posix.sgml: Move interfaces deprecated in SUSv4 to deprecated
	interfaces section.  Move interfaces added in SUSv4 to SUSv4
	section or, if unimplemented, add them to the unimplemented interfaces
	section.
@
text
@d100 1
a1176 1
    dirfd
@


1.19
log
@	* posix.sgml: Merge SUSv3 and SUSv4 section into a single SUSv4 section.
	Move Solaris calls now in SUSv4 to SUSv4 section.  Rename unimplemented
	section to refer to SUSv4.  Add note about missing interfaces.
	Move wcstod and wcstof from unimplemented to SUSv4 section.
@
text
@d27 1
a46 2
    bcmp
    bcopy
a49 1
    bzero
d106 1
a109 1
    ecvt
a146 1
    fcvt
d169 1
a199 1
    ftime
a209 1
    gcvt
a227 2
    gethostbyaddr
    gethostbyname
d231 1
a266 1
    getwd
a271 1
    h_errno
a290 1
    index
d397 1
a402 1
    mktemp
d444 1
a502 7
    pthread_mutex_destroy
    pthread_mutex_getprioceiling
    pthread_mutex_init
    pthread_mutex_lock
    pthread_mutex_setprioceiling
    pthread_mutex_trylock
    pthread_mutex_unlock
d513 7
a580 1
    rindex
a586 1
    scalb
d697 2
d715 2
d720 1
a782 1
    ualarm
a790 1
    usleep
d798 1
a798 1
    vfork			(see chapter "Implementation Notes")
d808 2
a858 1
    alphasort
a907 1
    mkdtemp
a942 1
    strsignal
a978 1
    dprintf
a991 1
    fmemopen
a994 1
    getline
a1004 1
    open_memstream
a1008 4
    stpcpy
    stpncpy
    strndup
    strnlen
a1016 3
    vdprintf
    wcpcpy
    wcpncpy
d1043 1
a1043 1
<sect1 id="std-deprec"><title>Other UNIX system interfaces, deprecated or not in POSIX.1-2001:</title>
d1046 3
d1050 1
d1052 5
d1062 3
d1067 1
d1074 2
d1080 2
d1083 1
a1089 3
<note><para>FIXME: This only covers the interfaces of SUSv3.  The missing
interfaces from SUSv4 have to be added here at one point.</para></note>

d1176 2
d1198 1
d1205 1
a1208 1
    getcontext
d1220 2
d1223 22
d1257 1
a1257 1
    makecontext
d1263 1
d1266 1
d1272 2
d1284 3
d1306 2
d1309 2
d1312 1
d1321 3
d1326 1
d1334 2
d1337 4
d1344 3
a1346 1
    wcswcs
@


1.18
log
@	* cygwin.din: Export wcstok.
	* posix.sgml: Move wcstok from unimplemented to susv3.
	* include/cygwin/version.h: Bump API minor number.
@
text
@d1 1
a1 1
<sect1 id="std-susv3"><title>System interfaces compatible with the Single Unix Specification, Version 3:</title>
d3 2
a4 2
<para>Note that the core of the Single Unix Specification, Version 3 is
also ISO/IEC 9945:2003 and IEEE Std 1003.1-2001 (POSIX.1-2001).</para>
d141 1
d144 1
d146 1
d154 1
d197 1
d208 1
d360 1
d404 1
d406 1
d408 1
d449 1
d567 1
d585 1
d740 1
d793 1
d798 1
d830 2
a1051 1
    faccessat
a1052 4
    fchmodat
    fchownat
    fdopendir
    fstatat
a1054 1
    linkat
a1055 6
    mkdirat
    mkfifoat
    mknodat
    openat
    readlinkat
    renameat
a1056 11
    symlinkat
    unlinkat
</screen>

</sect1>

<sect1 id="std-susv4"><title>System interfaces compatible with the Draft Single Unix Specification, Version 4:</title>

<screen>
    futimens
    utimensat
d1088 4
a1091 1
<sect1 id="std-notimpl"><title>NOT implemented system interfaces from the Single Unix Specification, Volume 3:</title>
a1294 2
    wcstod
    wcstof
@


1.17
log
@	* cygwin.din: Export fgetwc, fgetws, fputwc, fputws, fwide, getwc,
	getwchar, putwc, putwchar, ungetwc.
	* posix.sgml: Move above functions (add missing) into "implemented
	SUSv3" section.
	* include/cygwin/version.h: Bump api minor number.
@
text
@d814 1
a1299 1
    wcstok
@


1.16
log
@	* flock.cc (inode_t::get_all_locks_list): Fix typo.
	* posix.sgml: Add cfmakeraw to list of implemented BSD functions.
@
text
@d158 2
d180 2
d204 1
d264 2
d544 2
d777 1
a1199 2
    fgetwc
    fgetws
a1205 2
    fputwc
    fputws
a1206 1
    fwide
a1217 2
    getwc
    getwchar
@


1.15
log
@	* cygwin.din (futimens): Export.
	(utimensat): Export.
	* fhandler.cc (fhandler_base::utimens): Replace fhandler_base::utimes.
	Call utimens_fs.
	* fhandler.h (class fhandler_base): Declare utimens_fs instead of
	utimes_fs, utimens instead of utimes.
	(class fhandler_disk_file): Declare utimens instead of utimes.
	* fhandler_disk_file.cc (fhandler_disk_file::utimens): Replace
	fhandler_disk_file::utimes.
	(fhandler_base::utimens_fs): Replace fhandler_base::utimes_fs.
	Implement tv_nsec handling according to SUSv4.
	* syscalls.cc (utimensat): New function.
	* times.cc (timespec_to_filetime): New function.
	(timeval_to_timespec): New function.
	(utimens_worker): Replace utimes_worker.
	(utimes): Convert timeval to timespec and call utimens_worker.
	(lutimes): Ditto.
	(futimens): Take over implementation from futimes.
	(futimes): Convert timeval to timespec and call futimens.
	* winsup.h (timespec_to_filetime): Declare.
	* include/cygwin/version.h: Bump API minor number.
	* posix.sgml: Add SUSv4 section.  Add futimens and utimensat to it.
@
text
@d837 1
@


1.14
log
@	* posix.sgml: Add openat, faccessat, fchmodat, fchownat, fstatat,
	futimesat, linkat, mkdirat, mkfifoat, mknodat, readlinkat, renameat,
	symlinkat, unlinkat to list of implemented Solaris functions.
@
text
@d1045 9
@


1.13
log
@	* posix.sgml: Change lockf to being implemented.
@
text
@d970 1
d985 1
d1022 1
d1024 2
d1027 2
d1030 1
d1032 6
d1039 2
@


1.12
log
@Perform whitespace cleanup throughout.
* dcrt0.cc (signal_shift_subtract): Eliminate ancient backwards compatibility.
(check_sanity_and_sync): Ditto.
* winsup.h (SIGTOMASK): Ditto.  Just use constant in signal calculation.
* include/cygwin/version: Remove backwards signal mask compatibility define.
* path.cc (symlink_info::check_sysfile): Cosmetic change.
* registry.cc (get_registry_hive_path): Remove unneeded variable.
* exceptions.cc (handle_sigsuspend): Eliminate thread signal mask and use
either main sigmask or current thread sigmask.
(set_process_mask): Ditto.
(sighold): Ditto.
(sigrelse): Ditto.
(sigset): Ditto.
(set_process_mask_delta): Ditto.
(_cygtls::call_signal_handler): Ditto.
* fhandler_process.cc (format_process_status): Ditto.
* fhandler_termios.cc (fhandler_termios::bg_check): Ditto.
* pinfo.h (class pinfo): Ditto.
* select.cc (pselect): Ditto.
* signal.cc (sigprocmask): Ditto.
(abort): Ditto.
(sigpause): Ditto.
(sigsend): Ditto.
(wait_sig): Ditto.
* thread.h (pthread::parent_tls): New member.
* thread.cc (pthread::pthread): Record parent_tls here.
(pthread::thread_init_wrapper): Initialize sigmask from parent thread.
@
text
@d356 1
a1198 1
    lockf
@


1.11
log
@	* posix.sgml: Move llrint, llrintf, llrintl, lrintl, rintl, wcstol,
	wcstoll, wcstoul, wcstoull, wcsxfrm from unimplemented to implemented
	POSIX interfaces.
	Change headline of "GNU extensions" to "GNU and Linux extensions".
	Add fgetxattr, flistxattr, fremovexattr, fsetxattr, getxattr, lgetxattr,
	listxattr, llistxattr, lremovexattr, lsetxattr, removexattr, setxattr,
	wcpcpy and wcpncpy to list of implemented GNU functions.
@
text
@d1311 1
a1311 1
switch after a call to one of the exec(2) functions took place.  Windows 
@


1.10
log
@	* cygwin.din: Export fdopendir.
	* dir.cc (opendir): Call fhandler's opendir with fd set to -1.
	(fdopendir): New function.
	(seekdir64): Use dirent_info_mask.
	(rewinddir): Ditto.
	(closedir): Only release underlying file descriptor if it has been
	reserved by opendir itself.
	* fhandler.cc (fhandler_base::opendir): Accommodate new parameter.
	* fhandler.h (dirent_states): Add dirent_valid_fd and dirent_info_mask.
	(fhander_XXX::opendir): Add file descriptor parameter.  Use regparms.
	(fhandler_procnet::opendir): Drop declaration.
	* fhandler_disk_file.cc (fhandler_disk_file::opendir): Ditto.
	If called from fdopendir, use existing handle to re-open directory
	with valid flags.  Rename fd to cfd.  Use only if no valid incoming fd.
	(fhandler_cygdrive::opendir): Accommodate new parameter.
	* fhandler_process.cc (fhandler_process::opendir): Ditto.
	* fhandler_procnet.cc (fhandler_procnet::opendir): Drop definition.
	* fhandler_virtual.cc (fhandler_virtual::opendir): Accommodate new
	parameter.  Only create new file descriptor entry if called from
	opendir.  Remove duplicated setting of dir->__flags.
	* posix.sgml: Add fdopendir to list of implemented Solaris functions.
	* include/cygwin/version.h: Bump API minor number.
	* include/sys/dirent.h: Declare fdopendir.
@
text
@d350 3
d368 1
d568 1
d803 2
d806 2
d809 1
d937 1
a937 1
<sect1 id="std-gnu"><title>System interfaces compatible with GNU extensions:</title>
d967 2
d970 2
d975 6
d985 2
d1000 2
a1194 3
    llrint
    llrintf
    llrintl
a1203 1
    lrintl
a1235 1
    rintl
a1270 1
    wcstol
a1271 3
    wcstoll
    wcstoul
    wcstoull
a1273 1
    wcsxfrm
@


1.9
log
@	* cygwin.din: Export stpcpy, stpncpy.
	* posix.sgml: Add stpcpy and stpncpy to list of implemented
	GNU extensions.
	* include/cygwin/version.h: Bump API minor number.
@
text
@d996 1
@


1.8
log
@	* autoload.cc (WSAIoctl): Remove.
	* cygwin.din: Export freeifaddrs, getifaddrs.
	* fhandler_socket.cc (fhandler_socket::ioctl): Drop SOCKET parameter
	from get_ifconf.
	* net.cc: Include ifaddrs.h.
	(in_are_prefix_equal): Match addresses in network byte order.
	(ip_addr_prefix): Convert address into host byte order before
	testing with IN_LOOPBACK.
	(struct ifall): Define.
	(get_xp_ifs): Replace get_xp_ifconf.  Return struct ifall array.
	(get_2k_ifs): Ditto, replace get_2k_ifconf.
	(get_nt_ifs): Ditto, replace get_nt_ifconf.
	(getifaddrs): New function.
	(freeifaddrs): New function.
	(get_ifconf): Call matching get_XX_ifs function and create
	ifc content from here.  Drop lo fake since it's now in get_nt_ifs.
	* posix.sgml: Add freeifaddrs and getifaddrs to list of implemented
	BSD functions.
	* wincap.h (wincapc::has_broken_if_oper_status): New element.
	* wincap.cc: Implement above element throughout.
	* include/ifaddrs.h: New file.
	* include/cygwin/version.h: Bump API minor number.
@
text
@d965 2
@


1.7
log
@	* cygwin.din: Export exp10, exp10f, pow10, pow10f, strcasestr,
	funopen, fopencookie.
	* include/cygwin/version.h: Bump API minor number.
	* posix.sgml: Minor improvements.
@
text
@d839 1
d855 1
@


1.6
log
@	* Makefile.in (DLL_OFILES): Add xsique.o.
	* cygwin.din (confstr): Make NOSIGFE.
	(insque): Export.
	(remque): Export.
	* lsearch.cc: Remove superfluous _SEARCH_PRIVATE define.
	* posix.sgml: Move insque to defined SUSv3 interfaces.  Remove
	comment for remque.
	* include/search.h: Remove _SEARCH_PRIVATE guarded definitions.
	Add struct qelem definition.  Add insque and remque declarations.
	* include/cygwin/version.h: Bump API minor number.
	* include/sys/queue.h: Remove insque/remque definitions so as not
	to collide with SUSv3 compatible declaration in search.h.
	* libc/xsique.cc: New file implementing insque and remque.
@
text
@d174 1
d300 1
a300 1
    isfinite
d302 3
a304 3
    isgreater
    isgreaterequal
    isinf
d306 2
a307 2
    islessequal
    islessgreater
d309 2
a310 2
    isnan
    isnormal
d314 1
a314 1
    isunordered
d601 1
d646 1
a646 1
    signbit
d769 1
d848 1
d902 1
d951 2
d955 1
d961 2
a1016 1
    setbuf			(C89, C99)
a1234 1
    va_copy
d1273 8
@


1.5
log
@	* cygwin.din (confstr): Export.
	* posix.sgml (confstr): Move to list of implemented SUSv3 functions.
	* sysconf.cc (confstr): Implement.
	* include/cygwin/version.h: Bump API minor number.
@
text
@d290 1
d554 1
a554 1
    remque			(see chapter "Implementation Notes")
a1152 1
    insque
@


1.4
log
@	* ansi.sgml: Delete.
	* misc-std.sgml: Delete.
	* posix.sgml: Rework entirely.
@
text
@d78 1
a1073 1
    confstr
@


1.3
log
@forced commit
@
text
@d1 1
a1 2
<sect1 id="std-posix">
<title>Compatibility with POSIX.1</title>
d3 2
a4 1
<para>The following functions are compatible with POSIX.1:</para>
d6 806
a811 1
<sect2><title>Process Primitives (Section 3) </title><para>
d813 1
a813 4
fork, execl, execle, execlp, execv, execve, execvp, wait, waitpid,
_exit, kill, sigemptyset, sigfillset, sigaddset, sigdelset,
sigismember, sigaction, pthread_sigmask, sigprocmask, sigpending,
sigsuspend, alarm, pause, sleep, pthread_kill, pthread_sigmask
d815 1
a815 2
</para></sect2>
<sect2><title>Process Environment (Section 4) </title><para>
d817 98
a914 3
getpid, getppid, getuid, geteuid, getgid, getegid, setuid, setgid,
getgroups, getlogin, getpgrp, setsid, setpgid, uname, time, times,
getenv, ctermid, ttyname, isatty, sysconf
d916 1
a916 2
</para></sect2>
<sect2><title>Files and Directories (Section 5) </title><para>
d918 1
a918 3
opendir, readdir, rewinddir, closedir, chdir, getcwd, open, creat,
umask, link, mkdir, unlink, rmdir, rename, stat, fstat, access, chmod,
fchmod, chown, utime, ftruncate, pathconf, fpathconf
d920 43
a962 2
</para></sect2>
<sect2><title>Input and Output Primitives (Section 6) </title><para>
d964 1
a964 1
pipe, dup, dup2, close, read, write, fcntl, lseek, fsync
d966 1
a966 2
</para></sect2>
<sect2><title>Device- and Class-Specific Functions (Section 7) </title><para>
d968 16
a983 2
cfgetispeed, cfgetospeed, cfsetispeed, cfsetospeed, tcdrain, tcflow,
tcflush, tcgetattr, tcgetpgrp, tcsendbreak, tcsetattr, tcsetpgrp
d985 1
a985 2
</para></sect2>
<sect2><title>Language-Specific Services for the C Programming Language (Section 8) </title><para>
d987 1
a987 5
abort, exit, fclose, fdopen, fflush, fgetc, fgets, fileno, fopen,
fprintf, fputc, fputs, fread, freopen, fscanf, fseek, ftell, fwrite,
getc, getchar, gets, perror, printf, putc, putchar, puts, remove,
rewind, scanf, setlocale, siglongjmp, sigsetjmp, tmpfile, tmpnam,
tzset
d989 23
a1011 2
</para></sect2>
<sect2><title>System Databases (Section 9) </title><para>
d1013 1
a1013 1
getgrgid, getgrnam, getpwnam, getpwuid
d1015 1
a1015 2
</para></sect2>
<sect2><title>Synchronization (Section 11) </title><para>
d1017 234
a1250 3
sem_init, sem_destroy, sem_wait, sem_trywait, sem_post,
pthread_mutex_init, pthread_mutex_destroy, pthread_mutex_lock,
pthread_mutex_trylock, pthread_mutex_unlock
d1252 1
a1252 28
</para></sect2>
<sect2><title>Memory Management (Section 12) </title><para>

mmap, mprotect, msync, munmap

</para></sect2>
<sect2><title>Thread Management (Section 16) </title><para>

pthread_attr_init, pthread_attr_destroy, pthread_attr_setstacksize,
pthread_attr_getstacksize, pthread_create, pthread_exit, pthread_self,
pthread_equal

</para></sect2>
<sect2><title>Thread-Specific Data Functions (Section 17) </title><para>

pthread_key_create, pthread_setspecific, pthread_getspecific,
pthread_key_delete

</para></sect2>

<sect2><title>Implementation Details</title>

<para><function>setuid</function> and <function>setgid</function>
always return ENOSYS.</para>

<para><function>link</function> will copy the file if it can't
implement a true symbolic link.  Currently, symbolic links work, if at
all, only under Windows NT.</para>
d1254 1
a1254 1
<para><function>chown</function> always returns zero.</para>
d1256 15
a1270 2
<para><function>fcntl</function> doesn't support F_GETLK - it returns
-1 and sets errno to ENOSYS.</para>
d1275 19
a1293 1
</sect2>
@


1.3.26.1
log
@	Backport documentation changes from HEAD.
        * ansi.sgml: Delete.
        * misc-std.sgml: Delete.
        * posix.sgml: Rework entirely.
@
text
@d1 2
a2 1
<sect1 id="std-susv3"><title>System interfaces compatible with the Single Unix Specification, Version 3:</title>
d4 1
a4 2
<para>Note that the core of the Single Unix Specification, Version 3 is
also ISO/IEC 9945:2003 and IEEE Std 1003.1-2001 (POSIX.1-2001).</para>
d6 1
a6 781
<screen>
    FD_CLR
    FD_ISSET
    FD_SET
    FD_ZERO
    _exit
    _longjmp
    _setjmp
    _tolower
    _toupper
    a64l
    abort
    abs
    accept
    access
    acos
    acosf
    acosh
    acoshf
    alarm
    asctime
    asctime_r
    asin
    asinf
    asinh
    asinhf
    atan
    atan2
    atan2f
    atanf
    atanh
    atanhf
    atexit
    atof
    atoff
    atoi
    atol
    atoll
    basename
    bcmp
    bcopy
    bind
    bsearch
    btowc
    bzero
    cabs
    cabsf
    calloc
    catclose 			(available in external "catgets" library)
    catgets  			(available in external "catgets" library)
    catopen  			(available in external "catgets" library)
    cbrt
    cbrtf
    ceil
    ceilf
    cfgetispeed
    cfgetospeed
    cfsetispeed
    cfsetospeed
    chdir
    chmod
    chown
    chroot			(see chapter "Implementation Notes")
    clearerr
    clock
    clock_getres		(see chapter "Implementation Notes")
    clock_gettime		(see chapter "Implementation Notes")
    clock_setres		(see chapter "Implementation Notes")
    close
    closedir
    closelog
    connect
    copysign
    copysignf
    cos
    cosf
    cosh
    coshf
    creat
    crypt			(available in external "crypt" library)
    ctermid
    ctime
    ctime_r
    daylight
    dbm_clearerr		(available in external "libgdbm" library)
    dbm_close			(available in external "libgdbm" library)
    dbm_delete			(available in external "libgdbm" library)
    dbm_error			(available in external "libgdbm" library)
    dbm_fetch			(available in external "libgdbm" library)
    dbm_firstkey		(available in external "libgdbm" library)
    dbm_nextkey			(available in external "libgdbm" library)
    dbm_open			(available in external "libgdbm" library)
    dbm_store			(available in external "libgdbm" library)
    difftime
    dirname
    div
    dlclose
    dlerror
    dlopen
    dlsym
    drand48
    dup
    dup2
    ecvt
    encrypt			(available in external "crypt" library)
    endgrent
    endhostent
    endprotoent
    endpwent
    endservent
    endutxent
    environ
    erand48
    erf
    erfc
    erfcf
    erff
    errno
    execl
    execle
    execlp
    execv
    execve
    execvp
    exit
    exp
    exp2
    exp2f
    expf
    expm1
    expm1f
    fabs
    fabsf
    fchdir
    fchmod
    fchown
    fclose
    fcntl
    fcvt
    fdatasync
    fdim
    fdimf
    fdopen
    feof
    ferror
    fflush
    ffs
    fgetc
    fgetpos
    fgets
    fileno
    flockfile
    floor
    floorf
    fma
    fmaf
    fmax
    fmaxf
    fmin
    fminf
    fmod
    fmodf
    fnmatch
    fopen
    fork
    fpathconf
    fpclassify			(see chapter "Implementation Notes")
    fprintf
    fputc
    fputs
    fread
    free
    freopen
    frexp
    frexpf
    fscanf
    fseek
    fseeko
    fsetpos
    fstat
    fstatvfs
    fsync
    ftell
    ftello
    ftime
    ftok
    ftruncate
    ftrylockfile
    ftw
    funlockfile
    futimes
    fwrite
    gcvt
    getc
    getc_unlocked
    getchar
    getchar_unlocked
    getcwd
    getdelim
    getdomainname
    getegid
    getenv
    geteuid
    getgid
    getgrent
    getgrgid
    getgrgid_r
    getgrnam
    getgrnam_r
    getgroups
    gethostbyaddr
    gethostbyname
    gethostid
    gethostname
    getitimer			(see chapter "Implementation Notes")
    getlogin
    getlogin_r
    getopt
    getpeername
    getpgid
    getpgrp
    getpid
    getppid
    getpriority
    getprotobyname
    getprotobynumber
    getprotoent
    getpwent
    getpwnam
    getpwnam_r
    getpwuid
    getpwuid_r
    getrlimit
    getrusage
    gets
    getservbyname
    getservbyport
    getservent
    getsid
    getsockname
    getsockopt
    getsubopt
    gettimeofday
    getuid
    getutxent
    getutxid
    getutxline
    getwd
    glob
    globfree
    gmtime
    gmtime_r
    grantpt
    h_errno
    hcreate
    hdestroy
    hsearch
    hstrerror
    htonl
    htons
    hypot
    hypotf
    iconv			(available in external "libiconv" library)
    iconv_close			(available in external "libiconv" library)
    iconv_open			(available in external "libiconv" library)
    ilogb
    ilogbf
    imaxabs
    imaxdiv
    index
    inet_addr
    inet_ntoa
    inet_ntop
    inet_pton
    initstate
    ioctl
    isalnum
    isalpha
    isascii
    isatty
    isblank
    iscntrl
    isdigit
    isfinite			(see chapter "Implementation Notes")
    isgraph
    isgreater			(see chapter "Implementation Notes")
    isgreaterequal		(see chapter "Implementation Notes")
    isinf			(see chapter "Implementation Notes")
    isless
    islessequal			(see chapter "Implementation Notes")
    islessgreater		(see chapter "Implementation Notes")
    islower
    isnan			(see chapter "Implementation Notes")
    isnormal			(see chapter "Implementation Notes")
    isprint
    ispunct
    isspace
    isunordered			(see chapter "Implementation Notes")
    isupper
    iswalnum
    iswalpha
    iswblank
    iswcntrl
    iswctype
    iswdigit
    iswgraph
    iswlower
    iswprint
    iswpunct
    iswspace
    iswupper
    iswxdigit
    isxdigit
    j0
    j1
    jn
    jrand48
    kill
    killpg
    l64a
    labs
    lchown
    lcong48
    ldexp
    ldexpf
    ldiv
    lfind
    lgamma
    lgammaf
    link
    listen
    llabs
    lldiv
    localeconv
    localtime
    localtime_r
    log
    log10
    log10f
    log1p
    log1pf
    logb
    logbf
    logf
    longjmp
    lrand48
    lrint
    lrintf
    lround
    lroundf
    lsearch
    lseek
    lstat
    malloc
    mblen
    mbrlen
    mbrtowc
    mbsinit
    mbsrtowcs
    mbstowcs
    mbtowc
    memccpy
    memchr
    memcmp
    memcpy
    memmove
    memset
    mkdir
    mkfifo
    mknod
    mkstemp
    mktemp
    mktime
    mlock
    mmap
    modf
    modff
    mprotect
    mrand48
    msgctl			(see chapter "Implementation Notes")
    msgget			(see chapter "Implementation Notes")
    msgrcv			(see chapter "Implementation Notes")
    msgsnd			(see chapter "Implementation Notes")
    msync
    munlock
    munmap
    nan
    nanf
    nanosleep
    nearbyint
    nearbyintf
    nextafter
    nextafterf
    nftw
    nice
    nl_langinfo
    nrand48
    ntohl
    ntohs
    open
    opendir
    openlog
    optarg
    opterr
    optind
    optopt
    pathconf
    pause
    pclose
    perror
    pipe
    poll
    popen
    pow
    powf
    pread
    printf
    pselect
    pthread_atfork
    pthread_attr_destroy
    pthread_attr_getdetachstate
    pthread_attr_getinheritsched
    pthread_attr_getschedparam
    pthread_attr_getschedpolicy
    pthread_attr_getscope
    pthread_attr_getstacksize
    pthread_attr_init
    pthread_attr_setdetachstate
    pthread_attr_setinheritsched
    pthread_attr_setschedparam
    pthread_attr_setschedpolicy
    pthread_attr_setscope
    pthread_attr_setstacksize
    pthread_cancel
    pthread_cond_broadcast
    pthread_cond_destroy
    pthread_cond_init
    pthread_cond_signal
    pthread_cond_timedwait
    pthread_cond_wait
    pthread_condattr_destroy
    pthread_condattr_getpshared
    pthread_condattr_init
    pthread_condattr_setpshared
    pthread_create
    pthread_detach
    pthread_equal
    pthread_exit
    pthread_getconcurrency
    pthread_getschedparam
    pthread_getspecific
    pthread_join
    pthread_key_create
    pthread_key_delete
    pthread_kill
    pthread_mutex_destroy
    pthread_mutex_getprioceiling
    pthread_mutex_init
    pthread_mutex_lock
    pthread_mutex_setprioceiling
    pthread_mutex_trylock
    pthread_mutex_unlock
    pthread_mutexattr_destroy
    pthread_mutexattr_getprioceiling
    pthread_mutexattr_getprotocol
    pthread_mutexattr_getpshared
    pthread_mutexattr_gettype
    pthread_mutexattr_init
    pthread_mutexattr_setprioceiling
    pthread_mutexattr_setprotocol
    pthread_mutexattr_setpshared
    pthread_mutexattr_settype
    pthread_once
    pthread_rwlock_destroy
    pthread_rwlock_init
    pthread_rwlock_rdlock
    pthread_rwlock_tryrdlock
    pthread_rwlock_trywrlock
    pthread_rwlock_unlock
    pthread_rwlock_wrlock
    pthread_rwlockattr_destroy
    pthread_rwlockattr_getpshared
    pthread_rwlockattr_init
    pthread_rwlockattr_setpshared
    pthread_self
    pthread_setcancelstate
    pthread_setcanceltype
    pthread_setconcurrency
    pthread_setschedparam
    pthread_setspecific
    pthread_sigmask
    pthread_testcancel
    ptsname
    putc
    putc_unlocked
    putchar
    putchar_unlocked
    putenv
    puts
    pututxline
    pwrite
    qsort
    raise
    rand
    rand_r
    random
    read
    readdir
    readdir_r
    readlink
    readv
    realloc
    realpath
    recv
    recvfrom
    recvmsg
    regcomp
    regerror
    regexec
    regfree
    remainder
    remainderf
    remove
    remquo
    remquof
    rename
    rewind
    rewinddir
    rindex
    rint
    rintf
    rmdir
    round
    roundf
    scalb
    scalbln
    scalblnf
    scalbn
    scalbnf
    scandir
    scanf
    sched_get_priority_max
    sched_get_priority_min
    sched_getparam
    sched_getscheduler
    sched_rr_get_interval
    sched_setparam
    sched_setscheduler
    sched_yield
    seed48
    seekdir
    select
    sem_close
    sem_destroy
    sem_getvalue
    sem_init
    sem_open
    sem_post
    sem_timedwait
    sem_trywait
    sem_wait
    semctl			(see chapter "Implementation Notes")
    semget			(see chapter "Implementation Notes")
    semop			(see chapter "Implementation Notes")
    send
    sendmsg
    sendto
    setbuf
    setegid
    setenv
    seteuid
    setgid
    setgrent
    sethostent
    setitimer			(see chapter "Implementation Notes")
    setjmp
    setkey			(available in external "crypt" library)
    setlocale
    setlogmask
    setpgid
    setpgrp
    setpriority
    setprotoent
    setpwent
    setregid
    setreuid
    setrlimit
    setservent
    setsid
    setsockopt
    setstate
    setuid
    setutxent
    setvbuf
    shmat			(see chapter "Implementation Notes")
    shmctl			(see chapter "Implementation Notes")
    shmdt			(see chapter "Implementation Notes")
    shmget			(see chapter "Implementation Notes")
    shutdown
    sigaction
    sigaddset
    sigdelset
    sigemptyset
    sigfillset
    sighold
    sigignore
    siginterrupt
    sigismember
    siglongjmp
    signal
    signbit			(see chapter "Implementation Notes")
    signgam
    sigpause
    sigpending
    sigprocmask
    sigqueue
    sigrelse
    sigset
    sigsetjmp
    sigsuspend
    sigwait
    sigwaitinfo
    sin
    sinf
    sinh
    sinhf
    sleep
    snprintf
    socket
    socketpair
    sprintf
    sqrt
    sqrtf
    srand
    srand48
    srandom
    sscanf
    stat
    statvfs
    stderr
    stdin
    stdout
    strcasecmp
    strcat
    strchr
    strcmp
    strcoll
    strcpy
    strcspn
    strdup
    strerror
    strerror_r
    strftime
    strlen
    strncasecmp
    strncat
    strncmp
    strncpy
    strpbrk
    strptime
    strrchr
    strspn
    strstr
    strtod
    strtof
    strtoimax
    strtok
    strtok_r
    strtol
    strtoll
    strtoul
    strtoull
    strtoumax
    strxfrm
    swab
    symlink
    sync
    sysconf
    syslog
    system
    tan
    tanf
    tanh
    tanhf
    tcdrain
    tcflow
    tcflush
    tcgetattr
    tcgetpgrp
    tcsendbreak
    tcsetattr
    tcsetpgrp
    tdelete
    telldir
    tempnam
    tfind
    tgamma
    tgammaf
    time
    timer_create
    timer_delete
    timer_gettime
    timer_settime
    times
    timezone
    tmpfile
    tmpnam
    toascii
    tolower
    toupper
    towctrans
    towlower
    towupper
    trunc
    truncate
    truncf
    tsearch
    ttyname
    ttyname_r
    twalk
    tzname
    tzset
    ualarm
    umask
    uname
    ungetc
    unlink
    unlockpt
    unsetenv
    usleep
    utime
    utimes
    va_arg
    va_copy
    va_end
    va_start
    vfork			(see chapter "Implementation Notes")
    vfprintf
    vfscanf
    vprintf
    vscanf
    vsnprintf
    vsprintf
    vsscanf
    wait
    waitpid
    wcrtomb
    wcscat
    wcschr
    wcscmp
    wcscoll
    wcscpy
    wcscspn
    wcslen
    wcsncat
    wcsncmp
    wcsncpy
    wcspbrk
    wcsrchr
    wcsrtombs
    wcsspn
    wcsstr
    wcstombs
    wcswidth
    wctob
    wctomb
    wctrans
    wctype
    wcwidth
    wmemchr
    wmemcmp
    wmemcpy
    wmemmove
    wmemset
    wprintf
    write
    writev
    y0
    y1
    yn
</screen>
d8 32
a39 1
</sect1>
d41 5
a45 1
<sect1 id="std-bsd"><title>System interfaces compatible with BSD functions:</title>
d47 2
a48 76
<screen>
    alphasort
    daemon
    drem
    endusershell
    err
    errx
    finite
    finitef
    fiprintf
    flock
    forkpty
    fstatfs
    fts_children
    fts_close
    fts_get_clientptr
    fts_get_stream
    fts_open
    fts_read
    fts_set
    fts_set_clientptr
    gamma
    gamma_r
    gammaf
    gammaf_r
    getdtablesize
    getpagesize
    getpeereid
    getprogname
    getusershell
    herror
    inet_aton
    inet_makeaddr
    inet_netof
    inet_network
    initgroups
    iruserok
    login
    login_tty
    logout
    logwtmp
    mkdtemp
    openpty
    rcmd
    revoke
    rexec
    rresvport
    ruserok
    sbrk
    setbuffer
    setgroups
    setlinebuf
    setpassent
    setprogname
    settimeofday
    setusershell
    statfs
    strlcat
    strlcpy
    strsep
    strsignal
    updwtmp
    valloc
    verr
    verrx
    vhangup			(see chapter "Implementation Notes")
    vsyslog
    vwarn
    vwarnx
    wait3
    wait4
    warn
    warnx
    wcslcat
    wcslcpy
</screen>
d50 1
a50 1
</sect1>
d52 2
a53 1
<sect1 id="std-gnu"><title>System interfaces compatible with GNU extensions:</title>
d55 3
a57 39
<screen>
    argz_add
    argz_add_sep
    argz_append
    argz_count
    argz_create
    argz_create_sep
    argz_delete
    argz_extract
    argz_insert
    argz_next
    argz_replace
    argz_stringify
    asprintf
    asprintf_r
    dremf
    envz_add
    envz_entry
    envz_get
    envz_merge
    envz_remove
    envz_strip
    fcloseall
    fcloseall_r
    getline
    getopt_long
    getopt_long_only
    memmem
    mempcpy
    strndup
    strnlen
    tdestroy
    timegm
    timelocal
    updwtmpx
    utmpxname
    vasprintf
    vasprintf_r
</screen>
d59 2
a60 1
</sect1>
d62 1
a62 1
<sect1 id="std-solaris"><title>System interfaces compatible with Solaris or SunOS functions:</title>
d64 2
a65 16
<screen>
    acl
    aclcheck
    aclfrommode
    aclfrompbits
    aclfromtext
    aclsort
    acltomode
    acltopbits
    acltotext
    endmntent
    facl
    getmntent
    memalign
    setmntent
</screen>
d67 3
a69 1
</sect1>
d71 2
a72 1
<sect1 id="std-deprec"><title>Other UNIX system interfaces, deprecated or not in POSIX.1-2001:</title>
d74 2
a75 22
<screen>
    cuserid			(POSIX.1-1988, SUSv2)
    endutent			(XPG2)
    getpass			(SUSv2)
    getutent			(XPG2)
    getutid			(XPG2)
    getutline			(XPG2)
    getw			(SVID)
    mallinfo			(SVID)
    mallopt			(SVID)
    on_exit			(SunOS)
    pthread_continue		(XPG2)
    pthread_getsequence_np	(Tru64)
    pthread_suspend		(XPG2)
    pututline			(XPG2)
    putw			(SVID)
    setutent			(XPG2)
    sys_errlist			(BSD)
    sys_nerr			(BSD)
    ttyslot			(SUSv2)
    utmpname			(XPG2)
</screen>
d77 1
a77 1
</sect1>
d79 1
a79 1
<sect1 id="std-notimpl"><title>NOT implemented system interfaces from the Single Unix Specification, Volume 3:</title>
d81 2
a82 231
<screen>
    acoshl
    acosl
    aio_cancel
    aio_error
    aio_fsync
    aio_read
    aio_return
    aio_suspend
    aio_write
    asinhl
    asinl
    atan2l
    atanhl
    atanl
    bsd_signal
    cabsl
    cacos
    cacosf
    cacosh
    cacoshf
    cacoshl
    cacosl
    carg
    cargf
    cargl
    casin
    casinf
    casinh
    casinhf
    casinhl
    casinl
    catan
    catanf
    catanh
    catanhf
    catanhl
    catanl
    cbrtl
    ccos
    ccosf
    ccosh
    ccoshf
    ccoshl
    ccosl
    ceill
    cexp
    cexpf
    cexpl
    cimag
    cimagf
    cimagl
    clock_getcpuclockid
    clog
    clogf
    clogl
    conj
    conjf
    conjl
    copysignl
    coshl
    cosl
    cpow
    cpowf
    cpowl
    cproj
    cprojf
    cprojl
    creal
    crealf
    creall
    csin
    csinf
    csinh
    csinhf
    csinhl
    csinl
    csqrt
    csqrtf
    csqrtl
    ctan
    ctanf
    ctanh
    ctanhf
    ctanhl
    ctanl
    endnetent
    erfcl
    erfl
    exp2l
    expl
    expm1l
    fabsl
    fattach
    fdiml
    feclearexcept
    fegetenv
    fegetexceptflag
    fegetround
    feholdexcept
    feraiseexcept
    fesetenv
    fesetexceptflag
    fesetround
    fetestexcept
    feupdateenv
    fgetwc
    fgetws
    floorl
    fmal
    fmaxl
    fminl
    fmodl
    fmtmsg
    fputwc
    fputws
    frexpl
    fwide
    fwprintf
    fwscanf
    getcontext
    getdate
    getdate_err
    gethostent
    getmsg
    getnetbyaddr
    getnetbyname
    getnetent
    getpmsg
    getwc
    getwchar
    hypotl
    ilogbl
    initstate
    isastream
    ldexpl
    lgammal
    lio_listio
    llrint
    llrintf
    llrintl
    llround
    llroundf
    llroundl
    lockf
    log10l
    log1pl
    log2l
    logbl
    logl
    lrintl
    lroundl
    makecontext
    mlockall
    modfl
    munlockall
    nanl
    nearbyintl
    nextafterl
    nexttowardl
    posix_mem_offset
    posix_spawn[...]
    posix_trace[...]
    posix_typed_[...]
    powl
    pthread_attr_getguardsize
    pthread_attr_getstack
    pthread_attr_getstackaddr
    pthread_attr_setguardsize
    pthread_attr_setstack
    pthread_attr_setstackaddr
    pthread_barrier[...]
    pthread_condattr_getclock
    pthread_condattr_setclock
    pthread_getcpuclockid
    pthread_mutex_timedlock
    pthread_rwlock_timedrdlock
    pthread_rwlock_timedwrlock
    pthread_setschedprio
    pthread_spin_[...]
    putmsg
    reminderl
    remquol
    rintl
    roundl
    scalblnl
    scalbnl
    setcontext
    setnetent
    sigaltstack
    sigtimedwait
    sinhl
    sinl
    sockatmark
    sqrtl
    strfmon
    strtold
    swabcontext
    swprintf
    swscanf
    tanhl
    tanl
    tcgetsid
    tgammal
    timer_getoverrun
    truncl
    ulimit
    vfwprintf
    vfwscanf
    vswprintf
    vswscanf
    vwprintf
    vwscanf
    waitid
    wcsftime
    wcstod
    wcstof
    wcstoimax
    wcstok
    wcstol
    wcstold
    wcstoll
    wcstoul
    wcstoull
    wcstoumax
    wcswcs
    wcsxfrm
    wordexp
    wordfree
    wscanf
</screen>
d84 3
a86 1
</sect1>
d88 1
a88 1
<sect1 id="std-notes"><title>Implementation Notes</title>
d90 2
a91 23
<para><function>chroot</function> only emulates a chroot function call
by keeping track of the current root and accomodating this in the file
related function calls.  A real chroot functionality is not supported by
Windows however.</para>

<para><function>clock_getres</function>, <function>clock_gettime</function>
and <function>clock_setres</function> only support CLOCK_REALTIME for
now.</para>

<para><function>fpclassify</function>, <function>isfinite</function>,
<function>isgreater</function>, <function>isgreaterequal</function>,
<function>isinf</function>, <function>isless</function>,
<function>islessequal</function>, <function>islessgreater</function>,
<function>isnan</function>, <function>isnormal</function>,
<function>isunordered</function>, and <function>signbit</function>
only support float and double arguments, not long double arguments.</para>

<para><function>getitimer</function> and <function>setitimer</function>
only support ITIMER_REAL for now.</para>

<para><function>link</function> will copy the file if it can't implement
a true hardlink.  This is true at least for FAT and FAT32 filesystems.
NTFS supports hardlinks.  </para>
d96 1
a96 19
<para><function>setuid</function> is only safe against reverting the user
switch after a call to one of the exec(2) functions took place.  Windows 
doesn't support a non-revertable user switch within the context of Win32
processes.</para>

<para><function>vfork</function> just calls <function>fork</function>.</para>

<para><function>vhangup</function> always returns -1 and sets errno to
ENOSYS.</para>

<para>The XSI IPC functions <function>semctl</function>,
<function>semget</function>, <function>semop</function>,
<function>shmat</function>, <function>shmctl</function>,
<function>shmdt</function>, <function>shmget</function>,
<function>msgctl</function>, <function>msgget</function>,
<function>msgrcv</function> and <function>msgsnd</function> are only
available when cygserver is running and the <envar>CYGWIN</envar>
environment variable is set so that it contains the string
<envar>server</envar>.</para>
@


1.3.26.2
log
@	* posix.sgml: Add functions implemented on HEAD to unimplemented
	section on branch.
@
text
@a965 1
    _Exit
a976 1
    asnprintf
a979 2
    bindresvport
    bindresvport_sa
a1020 1
    confstr
a1050 4
    dn_comp
    dn_expand
    dn_skipname
    dprintf
a1053 2
    exp10
    exp10f
a1078 1
    fopencookie
a1080 2
    freeaddrinfo
    freeifaddrs
a1081 1
    funopen
a1084 2
    gai_strerror
    getaddrinfo
a1088 1
    getifaddrs
a1089 1
    getnameinfo
a1096 4
    if_freenameindex
    if_indextoname
    if_nameindex
    if_nametoindex
a1098 2
    insque
    iruserok_sa
a1119 10
    mq_close
    mq_getattr
    mq_notify
    mq_open
    mq_receive
    mq_send
    mq_setattr
    mq_timedreceive
    mq_timedsend
    mq_unlink
a1124 3
    posix_fadvise
    posix_fallocate
    posix_madvise
a1125 2
    posix_memalign
    posix_openpt
a1128 2
    pow10
    pow10f
a1145 1
    rcmd_af
a1146 1
    remque
a1147 14
    res_close
    res_init
    res_mkquery
    res_nclose
    res_ninit
    res_nmkquery
    res_nquery
    res_nquerydomain
    res_nsearch
    res_nsend
    res_query
    res_querydomain
    res_search
    res_send
a1149 1
    rresvport_af
a1151 1
    sem_unlink
a1153 2
    shm_open
    shm_unlink
a1159 3
    stpcpy
    stpncpy
    strcasestr
a1171 2
    vasnprintf
    vdprintf
@


1.3.26.3
log
@	* posix.sgml: List resolver functions in BSD section with reference
	to minires.
@
text
@a835 14
    res_close			(available in external "libminires" library)
    res_init			(available in external "libminires" library)
    res_mkquery			(available in external "libminires" library)
    res_nclose			(available in external "libminires" library)
    res_ninit			(available in external "libminires" library)
    res_nmkquery		(available in external "libminires" library)
    res_nquery			(available in external "libminires" library)
    res_nquerydomain		(available in external "libminires" library)
    res_nsearch			(available in external "libminires" library)
    res_nsend			(available in external "libminires" library)
    res_query			(available in external "libminires" library)
    res_querydomain		(available in external "libminires" library)
    res_search			(available in external "libminires" library)
    res_send			(available in external "libminires" library)
d1192 14
@


1.2
log
@clean up SGML for latest version of jade/docbook
@
text
@@


1.1
log
@Initial revision
@
text
@d13 1
d20 1
d27 1
d32 1
d38 1
d47 1
d52 1
d59 1
d64 1
d71 1
d77 1
a77 1
</sect2>
d98 1
a98 1
</sect1>@


1.1.1.1
log
@import winsup-2000-02-17 snapshot
@
text
@@
