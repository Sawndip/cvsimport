head	1.42;
access;
symbols
	cygwin-1_7_17-release:1.38
	cygwin-64bit-branch:1.38.0.2
	cygwin-1_7_16-release:1.38
	cygwin-1_7_15-release:1.36
	cygwin-1_7_14_2-release:1.36
	cygwin-1_7_14-release:1.36
	cygwin-1_7_12-release:1.36
	cygwin-1_7_11-release:1.36
	cygwin-1_7_10-release:1.36
	signal-rewrite:1.36.0.4
	pre-notty:1.36
	cygwin-1_7_9-release:1.36
	cv-post-1_7_9:1.36.0.2
	cygwin-1_7_8-release:1.36
	cygwin-1_7_7-release:1.33
	cygwin-1_7_5-release:1.33
	cygwin-1_7_4-release:1.33
	cygwin-1_7_3-release:1.33
	cygwin-1_7_2-release:1.33
	fifo_doover3:1.33.0.4
	cygwin-1_7_1-release:1.33
	prefifo:1.33
	cv-branch-2:1.33.0.2
	pre-ripout-set_console_state_for_spawn:1.32
	EOL_registry_mounts:1.32
	preoverlapped:1.31
	drop_9x_support_start:1.31
	cr-0x5f1:1.31.0.4
	cv-branch:1.31.0.2
	pre-ptymaster-archetype:1.31
	cr-0x3b58:1.30.0.4
	cr-0x5ef:1.30.0.2
	after-mmap-privanon-noreserve:1.30
	after-mmap-revamp:1.30
	before-mmap-revamp:1.30
	cgf-more-exit-sync:1.30
	post_wait_sig_exit:1.30
	pre_wait_sig_exit:1.30
	reparent-point:1.29
	noreparent:1.29.0.4
	cr-0x5e6:1.29.0.2
	cr-0x9e:1.28.0.6
	cr-0x9d:1.28.0.4
	cgf-deleteme:1.28.0.2
	pre-sigrewrite:1.26
	corinna-01:1.24
	cr-0x9c:1.24.0.4
	cr-0x9b:1.24.0.2
	cr-0x99:1.24
	Z-emcb-cygwin_daemon:1.23.0.2
	w32api-2_2:1.14
	mingw-runtime-2_4:1.14
	pre-cgf-merge:1.24
	cgf-dev-branch:1.13.0.32
	predaemon:1.13
	cygwin_daemon_merge_HEAD:1.13
	pregp02r1:1.13.0.8
	cygnus_cvs_20020108_pre:1.13
	Z-cygwin_daemon_merge-new_HEAD:1.13
	Z-cygwin_daemon_merge_HEAD:1.13
	cygwin_daemon:1.12.0.4;
locks; strict;
comment	@# @;
expand	@o@;


1.42
date	2012.11.26.19.50.44;	author cgf;	state dead;
branches;
next	1.41;

1.41
date	2012.11.23.14.58.24;	author cgf;	state Exp;
branches;
next	1.40;

1.40
date	2012.11.23.14.55.44;	author cgf;	state Exp;
branches;
next	1.39;

1.39
date	2012.11.23.13.22.46;	author cgf;	state Exp;
branches;
next	1.38;

1.38
date	2012.07.09.09.00.56;	author corinna;	state Exp;
branches
	1.38.2.1;
next	1.37;

1.37
date	2012.07.06.14.44.13;	author corinna;	state Exp;
branches;
next	1.36;

1.36
date	2011.02.15.15.56.00;	author corinna;	state Exp;
branches;
next	1.35;

1.35
date	2011.02.07.16.21.08;	author corinna;	state Exp;
branches;
next	1.34;

1.34
date	2011.01.29.06.41.28;	author cgf;	state Exp;
branches;
next	1.33;

1.33
date	2009.01.21.17.14.37;	author corinna;	state Exp;
branches;
next	1.32;

1.32
date	2008.02.14.00.49.47;	author cgf;	state Exp;
branches;
next	1.31;

1.31
date	2006.05.24.03.39.29;	author cgf;	state Exp;
branches;
next	1.30;

1.30
date	2005.08.08.02.27.42;	author cgf;	state Exp;
branches;
next	1.29;

1.29
date	2004.01.23.23.05.32;	author cgf;	state Exp;
branches;
next	1.28;

1.28
date	2003.12.23.16.26.29;	author cgf;	state Exp;
branches
	1.28.6.1;
next	1.27;

1.27
date	2003.11.28.20.55.58;	author cgf;	state Exp;
branches;
next	1.26;

1.26
date	2003.11.24.17.03.50;	author cgf;	state Exp;
branches;
next	1.25;

1.25
date	2003.11.20.19.31.41;	author cgf;	state Exp;
branches;
next	1.24;

1.24
date	2003.08.31.18.26.58;	author cgf;	state Exp;
branches;
next	1.23;

1.23
date	2003.08.25.18.21.07;	author cgf;	state Exp;
branches;
next	1.22;

1.22
date	2003.07.26.00.28.26;	author cgf;	state Exp;
branches;
next	1.21;

1.21
date	2003.07.26.00.08.25;	author cgf;	state Exp;
branches;
next	1.20;

1.20
date	2003.07.25.23.52.15;	author cgf;	state Exp;
branches;
next	1.19;

1.19
date	2003.07.02.03.32.04;	author cgf;	state Exp;
branches;
next	1.18;

1.18
date	2003.07.02.03.29.40;	author cgf;	state Exp;
branches;
next	1.17;

1.17
date	2003.07.02.03.16.00;	author cgf;	state Exp;
branches;
next	1.16;

1.16
date	2003.06.03.17.32.03;	author cgf;	state Exp;
branches;
next	1.15;

1.15
date	2003.03.29.04.20.45;	author cgf;	state Exp;
branches;
next	1.14;

1.14
date	2003.01.24.03.53.46;	author cgf;	state Exp;
branches;
next	1.13;

1.13
date	2001.12.20.02.55.08;	author cgf;	state Exp;
branches
	1.13.30.1
	1.13.32.1;
next	1.12;

1.12
date	2001.09.11.20.01.00;	author cgf;	state Exp;
branches
	1.12.4.1;
next	1.11;

1.11
date	2001.06.24.22.26.49;	author cgf;	state Exp;
branches;
next	1.10;

1.10
date	2001.05.21.19.13.48;	author cgf;	state Exp;
branches;
next	1.9;

1.9
date	2001.04.24.15.25.30;	author duda;	state Exp;
branches;
next	1.8;

1.8
date	2001.04.12.04.04.53;	author rbcollins;	state Exp;
branches;
next	1.7;

1.7
date	2000.12.03.05.16.33;	author cgf;	state Exp;
branches;
next	1.6;

1.6
date	2000.10.28.05.41.43;	author cgf;	state Exp;
branches;
next	1.5;

1.5
date	2000.07.16.17.38.41;	author cgf;	state Exp;
branches;
next	1.4;

1.4
date	2000.06.17.17.54.05;	author cgf;	state Exp;
branches;
next	1.3;

1.3
date	2000.05.06.03.33.10;	author cgf;	state Exp;
branches;
next	1.2;

1.2
date	2000.02.28.05.10.23;	author cgf;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.17.19.38.31;	author cgf;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.17.19.38.31;	author cgf;	state Exp;
branches;
next	;

1.12.4.1
date	2002.01.04.03.56.05;	author rbcollins;	state Exp;
branches;
next	;

1.13.30.1
date	2002.12.29.06.14.13;	author cgf;	state Exp;
branches;
next	;

1.13.32.1
date	2003.01.16.01.27.30;	author cgf;	state Exp;
branches;
next	1.13.32.2;

1.13.32.2
date	2003.04.03.01.32.32;	author cgf;	state Exp;
branches;
next	1.13.32.3;

1.13.32.3
date	2003.06.06.00.27.50;	author cgf;	state Exp;
branches;
next	1.13.32.4;

1.13.32.4
date	2003.07.06.05.10.42;	author cgf;	state Exp;
branches;
next	1.13.32.5;

1.13.32.5
date	2003.08.06.03.58.57;	author cgf;	state Exp;
branches;
next	1.13.32.6;

1.13.32.6
date	2003.08.27.20.19.55;	author cgf;	state Exp;
branches;
next	1.13.32.7;

1.13.32.7
date	2003.09.02.02.31.07;	author cgf;	state Exp;
branches;
next	;

1.28.6.1
date	2004.01.24.01.53.51;	author cgf;	state Exp;
branches;
next	;

1.38.2.1
date	2012.08.14.17.27.24;	author corinna;	state Exp;
branches;
next	1.38.2.2;

1.38.2.2
date	2012.11.23.15.14.38;	author corinna;	state Exp;
branches;
next	1.38.2.3;

1.38.2.3
date	2012.11.27.08.56.06;	author corinna;	state dead;
branches;
next	;


desc
@@


1.42
log
@ChangeLog:
2012-11-26  Christopher Faylor  <me.cygwin2012@@cgf.cx>

	* configure.ac: Rename from configure.in.
	* configure.in: Delete.
	* configure: Regenerate.

cygserver/ChangeLog:
2012-11-26  Christopher Faylor  <me.cygwin2012@@cgf.cx>

	* configure.ac: Rename from configure.in.
	* configure.in: Delete.
	* configure: Regenerate.

cygwin/ChangeLog:
2012-11-26  Christopher Faylor  <me.cygwin2012@@cgf.cx>

	* configure.ac: Rename from configure.in.
	* configure.in: Delete.
	* configure: Regenerate.

doc/ChangeLog:
2012-11-26  Christopher Faylor  <me.cygwin2012@@cgf.cx>

	* configure.ac: Rename from configure.in.
	* configure.in: Delete.
	* configure: Regenerate.

lsaauth/ChangeLog:
2012-11-26  Christopher Faylor  <me.cygwin2012@@cgf.cx>

	* configure.ac: Rename from configure.in.
	* configure.in: Delete.
	* configure: Regenerate.

testsuite/ChangeLog:
2012-11-26  Christopher Faylor  <me.cygwin2012@@cgf.cx>

	* configure.ac: Rename from configure.in.
	* configure.in: Delete.
	* configure: Regenerate.

utils/ChangeLog:
2012-11-26  Christopher Faylor  <me.cygwin2012@@cgf.cx>

	* configure.ac: Rename from configure.in.
	* configure.in: Delete.
	* configure: Regenerate.
@
text
@AC_PREREQ(2.59)dnl
AC_INIT(Makefile.in)
AC_CONFIG_HEADER(config.h)
AC_CONFIG_AUX_DIR(..)

. ${srcdir}/../configure.cygwin

AC_WINDOWS_HEADERS
AC_WINDOWS_LIBS

AC_PROG_INSTALL
AC_NO_EXECUTABLES
AC_CANONICAL_SYSTEM

AC_PROG_CC
AC_PROG_CXX
AC_PROG_CPP
AC_LANG(C)
AC_LANG(C++)

AC_CYGWIN_INCLUDES

case "$with_cross_host" in
  ""|*cygwin*)
    all_host="all_host"
    install_host="install_host"
    ;;
  *)
    all_host=
    install_host=
    ;;
esac

AC_SUBST(all_host)
AC_SUBST(install_host)

AC_CHECK_TOOL(AR, ar, ar)
AC_CHECK_TOOL(AS, as, as)
AC_CHECK_TOOL(DLLTOOL, dlltool, dlltool)
AC_CHECK_TOOL(LD, ld, ld)
AC_CHECK_TOOL(NM, nm, nm)
AC_CHECK_TOOL(OBJCOPY, objcopy, objcopy)
AC_CHECK_TOOL(OBJDUMP, objdump, objdump)
AC_CHECK_TOOL(RANLIB, ranlib, ranlib)
AC_CHECK_TOOL(STRIP, strip, strip)
AC_CHECK_TOOL(WINDRES, windres, windres)

AC_PROG_MAKE_SET

AC_ARG_ENABLE(debugging,
[ --enable-debugging		Build a cygwin DLL which has more consistency checking for debugging],
[case "${enableval}" in
yes)	 AC_DEFINE(DEBUGGING) ;;
no)	 ;;
esac
])

MALLOC_OFILES=malloc.o

dnl The only time we might want to transform the install names
dnl is for unix x cygwin.  Otherwise we don't.  For now we don't
dnl transform names.

dnl if test "x$cross_compiling" = "xno" -a ; then
dnl   if test "x$program_transform_name" = "xs,x,x,"; then
dnl     program_transform_name=""
dnl   fi
dnl   if test "x$program_transform_name" = "x"; then
dnl     program_transform_name="s,^,$target_alias-,"
dnl   else
dnl     program_transform_name="$program_transform_name -e s,^,$target_alias-,"
dnl   fi
dnl fi

case "$target_cpu" in
   i?86) DLL_ENTRY="_dll_entry@@12"
		DEF_DLL_ENTRY="dll_entry@@12"
		CONFIG_DIR="i386"  ;;
   *)		AC_MSG_ERROR(Invalid target processor \"$target_cpu\") ;;
esac

AC_CONFIGURE_ARGS
AC_SUBST(MALLOC_OFILES)
AC_SUBST(LIBSERVER)
AC_SUBST(DLL_ENTRY)
AC_SUBST(DEF_DLL_ENTRY)
AC_SUBST(CONFIG_DIR)
AC_OUTPUT(Makefile)
@


1.41
log
@* configure.in: Remove unneeded ALLOC substitution.
* configure: Regenerate.
* aclocal.m4: Ditto.
@
text
@@


1.40
log
@* configure.in: Add previously-missed AC_NO_EXECUTABLES.
* configure: Regenerate.
* aclocal.m4: Ditto.
@
text
@a77 1
		ALLOCA="_alloca"
a86 1
AC_SUBST(ALLOCA)
@


1.39
log
@ChangeLog:
2012-11-12  Christopher Faylor  <me.cygwin2012@@cgf.cx>

	* Makefile.common: Revamp for new configury.  Add default compilation
	targets, include .E processing.  Add magic for allowing "CFLAGS" to
	control optimization options in "CXXFLAGS".
	* configure.cygwin: New include for Cygwin configure.in's.
	* acinclude.m4: Delete old definitions.  Implement AC_WINDOWS_HEADERS,
	AC_WINDOWS_LIBS, AC_CYGWIN_INCLUDES, target_builddir, winsup_srcdir.
	* aclocal.m4: Regenerate.
	* autogen.sh: New file.
	* ccwrap: New script.
	* c++wrap: New script.
	* config.guess: New script.
	* config.sub: New script.
	* configure: Regenerate.
	* configure.in: Eliminate LIB_AC_PROG_* calls in favor of standard.
	Delete ancient target test.
	* install-sh: New script.

cygserver/ChangeLog:
2012-11-12  Christopher Faylor  <me.cygwin2012@@cgf.cx>

	* Makefile.in: Revamp for new configury.
	* configure.in: Revamp for new configury.
	* aclocal.m4: Regenerate.
	* configure: Ditto.
	* autogen.sh: New script.

cygwin/ChangeLog:
2012-11-22  Christopher Faylor  <me.cygwin2012@@cgf.cx>

	* select.cc (select): Don't return -1 when we've timed out after
	looping.

2012-11-22  Christopher Faylor  <me.cygwin2012@@cgf.cx>

	* Makefile.in: Revamp for new configury.
	(datarootdir): Add variable setting.
	(winver_stamp): Accommodate changes to mkvers.sh setting.
	(libc.a): Fix race when libm.a might not have been built yet.
	* configure.in: Revamp for new configury.
	* aclocal.m4: Regenerate.
	* configure: Ditto.
	* autogen.sh: New script.
	* mkvers.sh: Find include directives via CFLAGS and friends rather than
	assuming that w32api lives nearby.

utils/ChangeLog:
2012-11-12  Christopher Faylor  <me.cygwin2012@@cgf.cx>

	* aclocal.m4: Regenerate.
	* configure: Ditto.
	* autogen.sh: New script.
	* configure.in: Revamp for new configury.
	* Makefile.in: Revamp for new configury.  Rename ALL_* to just *.
	Always use "VERBOSE" setting.
	(MINGW_CXX): Don't include CFLAGS in definition.
	(all): Define target first, before everything else so that it is the
	default.
	(ps.exe): Don't add useless -lcygwin.
	(ldh.exe): For consistency, add to existing MINGW_LDFLAGS rather than
	redefining them.
	(cygcheck.exe): Always include -lz for MINGW_LDFLAGS.  Don't try to
	figure out where to find it.
	(dumper.exe): Simplify check.  Assume libraries are installed rather
	than trying to retrieve from source tree.
	(install): Just use /bin/mkdir to create directories.
	(Makefile): Regenerate when standard dependencies change.
	* dump_setup.cc: Always include zlib.h.  Remove accommodations for it
	possibly not existing.
	* parse_pe.cc: Add define which allows building with installed
	binutils package.
	* dumper.cc: Ditto.
@
text
@d12 1
@


1.38
log
@	* Makefile.in, configure.in, mkvers.sh: Revert accidental checkin from
	2012-07-06.
@
text
@a0 12
dnl Autoconf configure script for Cygwin.
dnl Copyright 1996, 1997, 1998, 2000, 2001, 2002, 2003, 2004, 2005, 2006,
dnl 2008, 2009, 2011 Red Hat, Inc.
dnl
dnl This file is part of Cygwin.
dnl
dnl This software is a copyrighted work licensed under the terms of the
dnl Cygwin license.  Please consult the file "CYGWIN_LICENSE" for
dnl details.
dnl
dnl Process this file with autoconf to produce a configure script.

d2 1
a2 1
AC_INIT(init.cc)
d4 6
a9 1
AC_CONFIG_AUX_DIR(../..)
d14 7
a20 2
LIB_AC_PROG_CC
LIB_AC_PROG_CXX
a32 2
LIBSERVER='$(bupdir)/cygserver/libcygserver.a'

d82 1
@


1.38.2.1
log
@	* configure.in: Add AC_NO_EXECUTABLES to allow bootstrap.
	Add x86_64 to allowed cpu types.
	* configure: Regenerate.
	* config/x86_64/profile.h: New file.
@
text
@a18 1
AC_NO_EXECUTABLES
a82 4
   x86_64) DLL_ENTRY="_dll_entry"
		DEF_DLL_ENTRY="dll_entry"
		ALLOCA="_alloca"
		CONFIG_DIR="x86_64"  ;;
@


1.38.2.2
log
@Pull in changes from HEAD
@
text
@d1 12
d14 1
a14 1
AC_INIT(Makefile.in)
d16 1
a16 6
AC_CONFIG_AUX_DIR(..)

. ${srcdir}/../configure.cygwin

AC_WINDOWS_HEADERS
AC_WINDOWS_LIBS
d22 2
a23 7
AC_PROG_CC
AC_PROG_CXX
AC_PROG_CPP
AC_LANG(C)
AC_LANG(C++)

AC_CYGWIN_INCLUDES
d36 2
d82 1
d86 1
a90 1
AC_CONFIGURE_ARGS
@


1.38.2.3
log
@Pull in changes from HEAD
@
text
@@


1.37
log
@	* winlean.h (__STRALIGN_H_): Drop definition.
@
text
@a82 4
   x86_64) DLL_ENTRY="_dll_entry@@12"
		DEF_DLL_ENTRY="dll_entry@@12"
		ALLOCA="_alloca"
		CONFIG_DIR="x86_64"  ;;
@


1.36
log
@	* Throughout fix copyright dates.
@
text
@d83 4
@


1.35
log
@	* configure.in: Remove AC_ALLOCA test and test for __builtin_memset.
	* configure: Regenerate.
@
text
@d3 1
a3 1
dnl 2008, 2009 Red Hat, Inc.
@


1.34
log
@winsup:
* configure.in: Configure winsup/cygserver regardless of cross_host.
* configure: Regenerate.
winsup/cygwin:
* configure.in: Define LIBSERVER regardless of cross_host.
* configure: Regenerate.
@
text
@a50 1
AC_ALLOCA
a52 17
dnl check whether gcc supports __builtin_memset.
# Test for builtin mem* functions.
AC_LANG_SAVE
AC_LANG_CPLUSPLUS
AC_TRY_COMPILE([
#include <string.h>
void foo(char *s, int c, size_t n)
{
  __builtin_memset(s, c, n);
}
], [ ],
use_builtin_memset=yes, use_builtin_memset=no)
if test $use_builtin_memset = "yes"; then
  AC_DEFINE(HAVE_BUILTIN_MEMSET)
fi
AC_LANG_RESTORE

@


1.33
log
@ChangeLog:

	* configure.in: Remove --enable-server option.  Allways add the
	cygserver directory to $SUBDIRS.
	* configure: Regenerate.

cygwin/ChangeLog:

	Remove USE_SERVER define.  Accommodate throughout.
	* configure.in: Remove --enable-server option.
	* configure: Regenerate.
	* environ.cc: Remove CYGWIN=server setting.

cygserver/ChangeLog:

	* client.cc (allow_server): Remove variable.
	(client_request_get_version::client_request_get_version): Drop checking
	allow_server.

utils/ChangeLog:

	* passwd.c: Remove CYGWIN=server requirement from usage text.

doc/ChangeLog:

	* cygserver.sgml: Remove the "How to use the Cygserver services"
	section.
	* cygwinenv.sgml: Move "(no)server" to the removed options section.
	* faq-programming.xml: Remove CYGWIN=server requirement for running
	the Cygwin testsuite.
	* ntsec.sgml: Ditto for using `passwd -R'.
@
text
@a27 1
    LIBSERVER='$(bupdir)/cygserver/libcygserver.a'
a31 1
    LIBSERVER=
d35 2
@


1.32
log
@* configure.in: Remove non-working options.
* configure: Regenerate.
@
text
@d2 2
a3 1
dnl Copyright 1996, 1997, 1998, 2000, 2001, 2002, 2003 Red Hat, Inc.
a36 2
test -n "$LIBSERVER" && AC_DEFINE(USE_SERVER)

a78 8
AC_ARG_ENABLE(server,
[ --enable-server		Build a cygwin DLL which can communicate with cygserver],
[case "${enableval}" in
yes)	;;
no)	LIBSERVER=;;
esac
])

@


1.31
log
@* select.cc (start_thread_socket): Delay setting thread local exitsock until we
know it's correct.  Return correct value on error.
@
text
@a88 19
AC_ARG_ENABLE(malloc-debugging,
[ --enable-malloc-debugging		Build a cygwin DLL with heap sanity checking (this is very slow, use only if you have heap corruption problems)],
[case "${enableval}" in
yes)	 AC_DEFINE(MALLOC_DEBUG)
	 MALLOC_OFILES=dlmalloc.o
	 ;;
no)	 ;;
esac
])

AC_ARG_ENABLE(vfork,
[ --enable-vfork		Build a cygwin DLL which uses experimental vfork code],
vfork="${enableval}"
])

case "$vfork" in
no)	 ;;
yes)	 AC_DEFINE_UNQUOTED(NEWVFORK) ;;
esac
@


1.30
log
@* dllfixdbg: New perl script.
* configure.in: Detect objcopy, objdump, strip.
* configure: Regenerate.
* Makefile.in: Pass target objcopy/objdump to new dllfixdbg script.  Remove
previous perl check.
* cygwin.sc: Add .gnu_debuglink_overlay section for eventual replacement with
.gnu_debuglink section.  Revert move of cygheap to end of image.
@
text
@d12 1
a12 1
AC_PREREQ(2.12)dnl
d15 1
a15 2

INSTALL="/bin/sh "`cd $srcdir/../..; echo $(pwd)/install-sh -c`
a17 50

dnl FIXME: We temporarily define our own version of AC_PROG_CC.  This is
dnl copied from autoconf 2.12, but does not call AC_PROG_CC_WORKS.  We
dnl are probably using a cross compiler, which will not be able to fully
dnl link an executable.  This should really be fixed in autoconf
dnl itself.

AC_DEFUN(LIB_AC_PROG_CC,
[AC_BEFORE([$0], [AC_PROG_CPP])dnl
AC_CHECK_TOOL(CC, gcc, gcc)
if test -z "$CC"; then
  AC_CHECK_PROG(CC, cc, cc, , , /usr/ucb/cc)
  test -z "$CC" && AC_MSG_ERROR([no acceptable cc found in \$PATH])
fi

AC_PROG_CC_GNU

if test $ac_cv_prog_gcc = yes; then
  GCC=yes
dnl Check whether -g works, even if CFLAGS is set, in case the package
dnl plays around with CFLAGS (such as to build both debugging and
dnl normal versions of a library), tasteless as that idea is.
  ac_test_CFLAGS="${CFLAGS+set}"
  ac_save_CFLAGS="$CFLAGS"
  CFLAGS=
  AC_PROG_CC_G
  if test "$ac_test_CFLAGS" = set; then
    CFLAGS="$ac_save_CFLAGS"
  elif test $ac_cv_prog_cc_g = yes; then
    CFLAGS="-gstabs+ -O2"
  else
    CFLAGS="-O2"
  fi
else
  GCC=
  test "${CFLAGS+set}" = set || CFLAGS="-g"
fi
])

AC_DEFUN(LIB_AC_PROG_CXX,
[AC_BEFORE([$0], [AC_PROG_CPP])dnl
AC_CHECK_TOOL(CXX, g++, g++)
if test -z "$CXX"; then
  AC_CHECK_PROG(CXX, c++, c++, , , )
  test -z "$CC" && AC_MSG_ERROR([no acceptable cc found in \$PATH])
fi

CXXFLAGS='$(CFLAGS)'
])

@


1.29
log
@* configure.in: Remove NEWVFORK default.
* configure: Regenerate.
* dcrt0.cc: Conditionalize vfork stuff throughout.
* dtable.cc: Ditto.
* perthread.h: Ditto.
* pipe.cc (fhandler_pipe::close): Ditto.
* spawn.cc (spawnve): Ditto.
* syscalls.cc (setsid): Ditto.
* exceptions.cc (sigpacket::process): Use macro to refer to vfork pid.
* debug.cc (verify_handle): Define new function.
* debug.h (VerifyHandle): Define new macro.
(verify_handle): Declare new function
* fhandler.cc (fhandler_base::dup): Verify that dup'ed handle is not supposed
to be in use.
(fhandler_base::set_inheritance): Ditto.
(fhandler_base::fork_fixup): Ditto.
* fhandler_socket.cc (fhandler_socket::dup): Ditto.
* fhandler_tty.cc (fhandler_tty_slave::open): Ditto.
* net.cc (set_socket_inheritance): Ditto.
* pinfo.cc (pinfo_fixup_after_exec): Ditto.
* sigproc.cc (proc_subproc): Ditto.
(sig_send): Ditto.
* spawn.cc (spawn_guts): Ditto.
* thread.cc (pthread::init_mainthread): Ditto.
* pipe.cc (fhandler_pipe::close): Close read_state with ForceCloseHandle since
it was protected.
(fhandler_pipe::fixup_after_exec): Protect read_state handle.
(fhandler_pipe::dup): Correctly close open handles on error condition.  Verify
that dup'ed handle is not supposed to be in use.
(fhandler_pipe::create): Protect read_state.
@
text
@d94 1
a94 1
AC_CHECK_TOOL(RANLIB, ranlib, ranlib)
d97 4
a100 1
AC_CHECK_TOOL(DLLTOOL, dlltool, dlltool)
@


1.28
log
@* exceptions.cc (set_signal_mask): Redefine to not pass by address.  Report
calculated mask in debugging output.
* sigproc.h (set_signal_mask): Reflect above change in declaration.
* path.cc (mount_item::build_win32): Take path apart before feeding it to
fnmunge.  Throughout, change use of _reent_winsup()-> to _my_tls.locals.
instead.  Throughout, remove obsolete MT_SAFE/_CYG_THREAD_FAILSAFE
considerations.  Througout, add cygtls.h include.
* Makefile.in (DLL_OFILES): Add cygtls.o.  Add some more objects to the
-fomit-frame-pointer list.
* acconfig.h: Remove obsolete settings.
* config.h.in: Ditto.
* bsdlib.cc: Add cygtls.h include.
* configure.in: Remove --enable-extra-threadsafe-checking.
* configure: Regenerate.
* cygtls.h (_local_storage): New struct renamed from _winsup_t (sic).
(_threadinfo:local_clib): Add new field.
(_threadinfo::locals): Ditto.
(_threadinfo::init_thread): Accept second _reent * argument.
(_threadinfo::call): Define as regparm.
(CYGTLS_PADSIZE): Remove unnecessary slop.
(_getreent): Define as a macro.
* thread.h: Remove _CYG_THREAD_FAILSAFE and MT_SAFE stuff.
(_winsup_t): Move to cygtls.h.
(ResourceLocks::ResourceLocks): Eliminate empty constructor.
(MTinterface::reents): Eliminate.
(MTinterface::thread_self_key): Eliminate.
(MTinterface::MTinterface): Eliminate.
* dcrt0.cc: Include stdio.h for _impure_ptr initialization.
(do_global_ctors): Remove run_ctors_p (sic) considerations.  Don't call atexit
here.
(__main): Initialize destructors for user here.
(dll_crt0_1): Accept a dummy argument.  Don't call init_thread here.  Don't set
_impure_ptr here.  Call do_global_ctors after more things have been
initialized.
(_dll_crt0): Define zeros buffer as max of needed size of CYGTLS_PADSIZE so
that it can be used for two purposes while minimizing stack usage.  Initialize
_impure_ptr specifically, for speed.  Call dll_crt0_1 with buffer argument.
(cygwin_dll_init): Call dll_crt0_1 with dummy argument.
* dtable.cc (dtable::find_unused_handle): Remove call to AssertResourceOwner.
* exceptions.cc: Move _threadinfo stuff to new file.
* cygtls.cc: New file.
* gentls_offsets: Accommodate increasing complexity of cygtls.h.
* hires.h (hires_base::~hires_base): Remove.
* init.cc (dll_entry): Remove setting of reents.
* thread.cc: Remove syslog.h include.
(__getreent): Simplify to use _my_tls.
(_reent_winsup): Delete.
(AssertResourceOwner): Delete.
(MTinterface::Init): Remove setting of _clib and _winsup, with all that
entails.
(MTinterface::fixup_after_fork): Ditto.
(pthread::thread_init_wrapper): Ditto.  Also remove call to
set_tls_self_pointer.
(pthread::set_tls_self_pointer): Eliminate.
(pthread::get_tls_self_pointer): Just return _my_tls.tid;
(__reent_t::init_clib): Eliminate.
* tlsoffsets.h: Regenerate.
@
text
@d154 1
a154 1
yes|*)	 AC_DEFINE_UNQUOTED(NEWVFORK) ;;
@


1.28.6.1
log
@* fhandler_socket.cc (fhandler_socket::create_secret_event): Avoid creating
multiple handles.  Always allow event inheritance but set the handle
inheritance appropriately.  Improve error handling.
(fhandler_socket::check_peer_secret_event): Improve error handling.
(fhandler_socket::close_secret_event): Simply call CloseHandle.
(fhandler_socket::set_close_on_exec): Set secret event inheritance.
* configure.in: Remove NEWVFORK default.
* configure: Regenerate.
* dcrt0.cc: Conditionalize vfork stuff throughout.
* dtable.cc: Ditto.
* perthread.h: Ditto.
* pipe.cc (fhandler_pipe::close): Ditto.
* spawn.cc (spawnve): Ditto.
* syscalls.cc (setsid): Ditto.
* exceptions.cc (sigpacket::process): Use macro to refer to vfork pid.
* debug.cc (verify_handle): Define new function.
* debug.h (VerifyHandle): Define new macro.
(verify_handle): Declare new function
* fhandler.cc (fhandler_base::dup): Verify that dup'ed handle is not supposed
to be in use.
(fhandler_base::set_inheritance): Ditto.
(fhandler_base::fork_fixup): Ditto.
* fhandler_socket.cc (fhandler_socket::dup): Ditto.
* fhandler_tty.cc (fhandler_tty_slave::open): Ditto.
* net.cc (set_socket_inheritance): Ditto.
* pinfo.cc (pinfo_fixup_after_exec): Ditto.
* sigproc.cc (proc_subproc): Ditto.
(sig_send): Ditto.
* spawn.cc (spawn_guts): Ditto.
* thread.cc (pthread::init_mainthread): Ditto.
* pipe.cc (fhandler_pipe::close): Close read_state with ForceCloseHandle since
it was protected.
(fhandler_pipe::fixup_after_exec): Protect read_state handle.
(fhandler_pipe::dup): Correctly close open handles on error condition.  Verify
that dup'ed handle is not supposed to be in use.
(fhandler_pipe::create): Protect read_state.
@
text
@d154 1
a154 1
yes)	 AC_DEFINE_UNQUOTED(NEWVFORK) ;;
@


1.27
log
@Eliminate use of sigframe and sigthread throughout.
* Makefile.in (DLL_OFILES): Add sigfe.o.  Remove reliance on cygwin.def from
cygwin0.dll dependency since dependence on sigfe.o implies that.  Generate def
file on the fly using 'gendef'.
* configure.in: Don't auto-generate cygwin.def.
* configure: Regenerate.
* cygwin.din: Add SIGFE stuff where appropriate.
* dcrt0.cc (dll_crt0_1): Initialize cygwin tls early in process startup.  Set
_main_tls to address of the main thread's cygwin tls.
* debug.h: Remove now unneeded WFSO and WFMO declarations.
* exceptions.cc (_last_thread): Define.
(set_thread_state_for_signals): New function.
(reset_thread_exception_for_signals): Ditto.
(init_thread_for_signals): Ditto.
(delete_thread_for_signals): Ditto.
(capture_thread_for_signals): Ditto.
(handle_exceptions): Set return address explicitly for exceptions prior to
calling sig_send.
(interrupt_on_return): Eliminate.
(setup_handler): Add preliminary implementation for dealing with
thread-specific signals by querying _main_tls.
(signal_exit): Use cygthread::main_thread_id instead of mainthread.id.
(call_signal_handler_now): For now, just handle the main thread.
* fork.cc (vfork): Save and restore main _my_tls.
* gendef: New file.  Generates def file and sigfe.s file.
* gentls_offsets: New file.  Generates offsets for perl to use in sigfe.s.
* how-signals-work.txt: Mention that info is obsolete.
* init.cc (dll_entry): Initialize cygwin tls storage here.
* miscfuncs.cc (low_priority_sleep): Make a C function for easier calling from
asm.
* perthread.h (vfork_save::tls): New element.
* signal.cc (nanosleep): Replace previous use of
sigframe.call_signal_handler_now with straight call to call_signal_handler_now.
(abort): Ditto.
* syscalls.cc (readv): Ditto.
* termios.cc (tcsetattr): Ditto.
* wait.cc (wait4): Ditto.
* sigproc.cc (sig_dispatch_pending): Ditto.
(sig_send): Ditto.
* sigproc.h: Declare call_signal_handler_now.
* thread.cc (pthread::thread_init_wrapper): Initialize cygwin tls.  Remove
obsolete and unworking signal stuff.
* thread.h (verifyable_object::sigs): Eliminate.
(verifyable_object::sigmask): Eliminate.
(verifyable_object::sigtodo): Eliminate.
(verifyable_object::exit): Make attribute noreturn.
(verifyable_object::thread_init_wrapper): Ditto.
(pthread_null::exit): Ditto.
* winbase.h (__stackbase): Always define.
* winsup.h (low_priority_sleep): Declare as a "C" function.
* include/cygwin/version.h: Bump API version to reflect sigwait export.
* include/sys/queue.h: Protect SLIST_ENTRY from previous declaration.
* signal.cc (sigwait): Implement.
* select.cc (fhandler_base::ready_for_read): Add debugging output.
* devices.h: Define more device pointers via their storage.
* devices.in: Don't parse things like /dev/inet/tcp, as they really have no
meaning.
* devices.cc: Regenerate.
* gendevices: Set proper protection for output file.
* cygtls.h: New file.
* gendef: New file.
* gentls_offsets: New file.
* tlsoffsets.h: New file.  Autogenerated.
* config/i386/longjmp.c: Remove.  File subsumed by gendef output.
* config/i386/makefrag: Remove obsolete file.
* fhandler.cc: Remove spurious access_worker declaration.
* spawn.cc (spawnve): Make debugging output more accurate.
* cygwin-gperf: Remove.
* devices.cc: Remove.
@
text
@a119 14
AC_ARG_ENABLE(extra-threadsafe-checking,
[ --enable-extra-threadsafe-checking	Build a cygwin DLL which is thread safe with extra consistency checking],
[case "${enableval}" in
yes)
  mt_safe_val=1
  MT_SAFE=yes
  AC_DEFINE(_CYG_THREAD_FAILSAFE)
  ;;
no)
  dnl Don't do anything here to avoid overriding --enable-threadsafe.
  ;;
esac
])

@


1.26
log
@* configure.in: Avoid using cygserver unless hosting on cygwin.
@
text
@d200 1
a200 1
AC_OUTPUT(Makefile cygwin.def:cygwin.din)
@


1.25
log
@* configure.in: Make --use-server the default.  Remove powerpc target.
* configure: Regenerate.
@
text
@d78 1
d83 1
d87 2
a141 1
LIBSERVER='$(bupdir)/cygserver/libcygserver.a'
a148 2

test -n "$LIBSERVER" && AC_DEFINE(USE_SERVER)
@


1.24
log
@* Makefile.in (MALLOC_OFILES): Always fill in with correct malloc object.
* configure.in: Fill in MALLOC_OFILES with either debugging or regular malloc.
* configure: Regenerate.
* dlmalloc.c: Make various fruitless changes to attempt to get to work.
* dlmalloc.h: Ditto.
* malloc.cc (free): Check malloc pool when debugging.
* path.cc (win32_device_name): Eliminate compiler warning.
* sigproc.cc (sig_dispatch_pending): Remove use of was_pending.  Let
thisframe.call_signal_handler decide if handler should be called rather than
using bogus was_pending check.
* exceptions.cc (interrupt_setup): Remove accidentally checked in debugging
code.
* heap.cc (sbrk): Save rounded addess in user_heap_max.
@
text
@d138 1
d142 2
a143 4
yes)
	 AC_DEFINE(USE_SERVER)
	 LIBSERVER='$(bupdir)/cygserver/libcygserver.a' ;;
no)	 LIBSERVER=;;
d147 2
a189 4
   powerpc*)	DLL_ENTRY="dll_entry"
		DEF_DLL_ENTRY="dll_entry"
		ALLOCA=" __allocate_stack"
		CONFIG_DIR="ppc"  ;;
@


1.23
log
@Throughout, change USE_CYGSERVER to USE_SERVER.
* Makefile.in (LIBSERVER): Define and use.
* configure.in: Set LIBSERVER as appropriate.
* environ.cc: Rename allow_daemon to allow_server.  Only recognize when
USE_SERVER is defined.
@
text
@d148 1
a148 1
MALLOC_OFILES=
@


1.22
log
@preliminary checkin
@
text
@d141 4
a144 2
yes)	 AC_DEFINE(USE_CYGSERVER) ;;
no)	 ;;
d197 1
@


1.21
log
@preliminary checkin
@
text
@d16 1
a16 1
INSTALL="/bin/sh "`cd $srcdir/../..; echo $(pwd)/install-sh`
@


1.20
log
@* configure.in: Always use install-sh.
* configure: Regenerate.
@
text
@d16 1
a16 1
INSTALL=`cd $srcdir/../..; echo $(pwd)/install-sh`
@


1.19
log
@fix typo
@
text
@d16 2
@


1.18
log
@* configure.in: Fix --enable-server option.
@
text
@d139 1
a139 1
yes)	 AC_DEFINE(USE_CYGSERVE) ;;
@


1.17
log
@* Makefile.in: Remove cygserver stuff.
* acconfig.h: Add USE_CYGSERVER define.
* config.h.in: Regenerate.
* configure.in: Add --enable-server setting.
* configure: Regenerate.
* fhandler_tty.cc (fhandler_tty_slave::open): Conditionalize compilation of
cygserver stuff.
* fork.cc (fork_child): Ditto.
* shm.cc: Ditto.
* tty.cc (tty::common_init): Ditto.
* dcrt0.cc: Use bool rather than BOOL for CYGWIN environment variable
definitions.
* environ.cc: Ditto.
* ntea.cc: Ditto.
* security.cc: Ditto.
* security.h: Ditto.
* syscalls.cc (check_posix_perm): Remove externs that were already declared in
a header.
* winsup.h: Ditto.  Declare _MT_SAFE here.  Delete it someday since cygwin
should always be _MT_SAFE.
@
text
@a86 1
dnl AC_SUBST(AR)
a87 1
dnl C_SUBST(AS)
a88 1
dnl C_SUBST(RANLIB)
a89 1
dnl C_SUBST(LD)
a90 1
dnl C_SUBST(NM)
a91 1
dnl C_SUBST(DLLTOOL)
a92 1
dnl C_SUBST(WINDRES)
d136 1
a136 1
AC_ARG_ENABLE(cygserver,
@


1.16
log
@* configure.in: Allow any i?86 variant.
* configure: Regenerate.
@
text
@d2 1
a2 1
dnl Copyright 1996, 1997, 1998, 2000, 2001 Red Hat, Inc.
a120 21
dnl set default mt safeness and then process the options.
mt_safe_val=1
MT_SAFE=yes

AC_ARG_ENABLE(threadsafe,
[ --enable-threadsafe=[runtime]	Build a cygwin DLL which is thread safe],
[case "${enableval}" in
yes)
  dnl default.
  ;;
runtime)
  mt_safe_val=2
  MT_SAFE=yes
  ;;
no)
  mt_safe_val=0
  MT_SAFE=no
  ;;
esac
])

a134 7
if test "$MT_SAFE" = "yes"; then
  AC_DEFINE_UNQUOTED(_MT_SAFE,$mt_safe_val)
fi

dnl Makefile uses MT_SAFE, so we subst as well as defining it.
AC_SUBST(MT_SAFE)

d139 8
@


1.15
log
@* Makefile.in: Remove EXE_LDFLAGS.  Fix fhandler_CFLAGS typo.  Recognize .s
suffix.
* configure.in: Remove EXE_LDFLAGS.
* configure: Regenerate.
@
text
@d208 1
a208 1
   i386|i486|i586|i686) DLL_ENTRY="_dll_entry@@12"
@


1.14
log
@* pwdrp.h (pwdgrp::refresh): Lock entire test prior to reading.
* grp.cc (pwdgrp::parse_group): Eliminate arg and use class member instead.
Use next_str and next_int to parse arguments.
* passwd.cc (pwdgrp::parse_passwd): Ditto.
(grab_string): Eliminate.
(grab_int): Ditto.
* pwdgrp.h (pwdgrp::parse): Eliminate input arg.
(pwdgrp::parse_passwd): Reflect above change.
(pwdgrp::parse_group): Reflect above change.
(pwdgrp::next_str): New function.
(pwdgrp::next_int): Ditto.
(pwdgrp::gets): Eliminate.
* uinfo.cc (pwdgrp::next_str): New function.
(pwdgrp::next_int): Ditto.
(pwdgrp::add_line): Subsume gets.
(pwdgrp::gets): Eliminate.
(pwdgrp::load): Just call add_line to parse input buffer.
@
text
@a206 32
dnl
dnl If newlib is part of build tree, always set EXE_LDFLAGS to point to
dnl it; this is important in cases where the installed newlib is perhaps
dnl not compatible. Check and warn for installed newlib only if it's not
dnl part of the build tree.
dnl

AC_MSG_CHECKING([if newlib is part of the build tree])

EXE_LDFLAGS=
if test -d ../newlib
then
  AC_MSG_RESULT(yes)
  EXE_LDFLAGS="-B../../newlib/ -B../"
else
  AC_MSG_RESULT(no)
fi
 AC_SUBST(EXE_LDFLAGS)

if test x"$EXE_LDFLAGS" = x
then
  AC_MSG_CHECKING([if installed newlib needed])
  AC_TRY_LINK(,
    [/* main already defined */]
    ,
    AC_MSG_RESULT(no)
    ,
    AC_MSG_RESULT(yes)
    AC_MSG_WARN(newlib not found - utility .exe's may not link))
fi
AC_SUBST(EXE_LDFLAGS)

@


1.13
log
@* Makefile.in (VPATH): Add regex directory.
(NM): new variable.
(OBSOLETE_FUNCTIONS): Ditto.
(NEW_FUNCTIONS): Ditto.
(install-headers): Install regex.h.
(install-man): New target.
(install): Use new target.
(DLL_OFILES): Add v8_reg* stuff.
(new-cygwin1.dll): Eliminate stamp-cygwin-lib creation.
(libcygwin.a): Remove obsolete functions from import lib.  Add new functions.
* configure.in: Detect 'nm' tool.
* configure: Regenerate.
* cygwin.din: Export posix_reg* functions.  Eliminate export of v8 reg*
functions.  This is now handled in object files themselves.
* regex/*: New files.
* regexp/v8_*.c: New files, renamed from non v8_ equivalents.
@
text
@a256 1

@


1.13.32.1
log
@merge from trunk
@
text
@d87 1
d89 1
d91 1
d93 1
d95 1
d97 1
d99 1
d257 1
@


1.13.32.2
log
@merge from trunk
@
text
@d200 32
@


1.13.32.3
log
@merge from trunk
@
text
@d201 1
a201 1
   i?86) DLL_ENTRY="_dll_entry@@12"
@


1.13.32.4
log
@merge from trunk
@
text
@d2 1
a2 1
dnl Copyright 1996, 1997, 1998, 2000, 2001, 2002, 2003 Red Hat, Inc.
d114 21
d149 7
a159 8
no)	 ;;
esac
])

AC_ARG_ENABLE(server,
[ --enable-server		Build a cygwin DLL which can communicate with cygserver],
[case "${enableval}" in
yes)	 AC_DEFINE(USE_CYGSERVER) ;;
@


1.13.32.5
log
@merge from trunk
@
text
@a15 2
INSTALL="/bin/sh "`cd $srcdir/../..; echo $(pwd)/install-sh -c`

@


1.13.32.6
log
@merge from trunk
@
text
@d141 2
a142 4
yes)
	 AC_DEFINE(USE_SERVER)
	 LIBSERVER='$(bupdir)/cygserver/libcygserver.a' ;;
no)	 LIBSERVER=;;
a194 1
AC_SUBST(LIBSERVER)
@


1.13.32.7
log
@merge from trunk
@
text
@d148 1
a148 1
MALLOC_OFILES=malloc.o
@


1.13.30.1
log
@* cygwin-gperf: New file.
* Makefile.in: Use cygwin-gperf script to build devices.cc.
* configure.in: Remove some comments.
* configure: Regenerate.
* devices.gperf: Remove max unit determination from FH_TTY.  Add /dev/kmem.
Add /dev/fifo.  Add /dev/rawdrive.  Remove specific "const device *"
declarations since they are now autogenerated.
(device::parse): Treat FH_TTY specially.  Move logic for determining real tty
device to separate function.
(device::init): Reduce to nothing.
(device::parse): New function taking different arguments.
(device::parse): Ditto.
(device::tty_to_real_device): New function.
* devices.h (struct device): Define above new functions.
(device::dev_on_fs): New element.
(device::setfs): New function.
(device::isfs): Ditto.
* dtable.cc (dtable::build_fhandler): Treat FH_TTY specially.
* fhandler.cc (fhandler_base::set_name): Make special determination for
non-disk-resident devices.
* fhandler.h (fhandler_base::isdevice): Renamed from 'is_device'.
(fhandler_disk_file::isdevice): Ditto.
(fhandler_base::is_auto_device): New function.
(fhandler_base::is_fs_device): New function.
(fhandler_tty_slave::get_unit): Declare.
(fhandler_disk_file::readdir): Take special .lnk consideration for devices as
well as symlinks.
* fhandler_tty.cc: Use get_unit () rather than dev.minor throughout.
(fhandler_tty_slave::get_unit): Define new function.
* path.cc (symlink_info::major): New element.
(symlink_info::major): Ditto.
(symlink_info::devtype): Ditto.
(path_conv::check): Handle devices detected by symlink_info::check.
(win32_device_name): Eliminate special FH_TTY handling.
(symlink): Move bulk of procesing to symlink_worker.
(symlink_worker): New function.  Handles devices.
(symlink_info::parse_device): Parse info from potential device file into
symlink_info elements.
(symlink_info::check): If contents of .lnk file begin with a ':' then treat the
file as a device file.
* path.h (isdevice): Renamed from is_device.
(is_auto_device): New function.
(is_fs_device): Ditto.
* syscalls.cc (chown_worker): Allow setting of ownership for on-disk devices.
(chmod): Ditto.
(mknod): Implement.
* winsup.h (symlink_worker): Declare.
@
text
@d87 1
d89 1
d91 1
d93 1
d95 1
d97 1
d99 1
d257 1
@


1.12
log
@Update copyrights.
@
text
@d94 2
@


1.12.4.1
log
@Merged changes from HEAD
@
text
@a93 2
AC_CHECK_TOOL(NM, nm, nm)
dnl C_SUBST(NM)
@


1.11
log
@forced commit
@
text
@d2 1
a2 1
dnl Copyright 1996, 1997, 1998, 2000 Cygnus Solutions.
@


1.10
log
@* configure.in: Allow --enable-newvfork to turn NEWVFORK on and off.
* configure: Regenerate.
@
text
@@


1.9
log
@* dlmalloc.c: New file. Port of Doug Lea's malloc
* dlmalloc.h: Ditto.
* Makefile.in: Add support for MALLOC_DEBUG
* config.h.in: Ditto.
* winsup.h: Ditto.
* configure.in: Add --enable-malloc-debugging option.
* configure: Regenerate.
* debug.h: Include declarations for debugging malloc.
* tty.cc (grantpt): Fix definition.
(unlockpt): Ditto.
@
text
@d182 4
a185 2
[case "${enableval}" in
yes)	 AC_DEFINE(NEWVFORK) ;;
d187 1
a188 2
])

@


1.8
log
@	* configure.in: Remove PTH_ALLOW.
	* cygwin.din: Remove @@PTH_ALLOW@@ prefixes to pthread functions.
	Add new pthread exports.
	* pthread.cc: New wrapper functions for the above new exports.
	* sched.cc (valid_sched_parameters): New function.
	(sched_setparam): Use it.
	(sched_set_thread_priority): New function. Used by pthread_sched*.
	* thread.cc (pthread_key_destructor::InsertAfter): New function.
	(pthread_key_destructor::UnlinkNext): New function.
	(pthread_key_destructor::Next): New function.
	(pthread_key_destructor_list::Insert): New function.
	(pthread_key_destructor_list::Remove): New function.
	(pthread_key_destructor_list::Pop): New function.
	(pthread_key_destructor::pthread_key_destructor): New function.
	(pthread_key_destructor_list::IterateNull): New function.
	(MTinterface::Init): Initialise new member.
	(pthread::pthread): Initialise new members.
	(pthread::create): Copy new attributes. Set the new thread priority.
	(pthread_attr::pthread_attr): Initialise new members.
	(pthread_key::pthread_key): Setup destructor function.
	(pthread_key::~pthread_key): Remove destructor function.
	(pthread_mutexattr::pthread_mutexattr): New function.
	(pthread_mutexattr::~pthread_mutexattr): New function.
	(__pthread_once): New function.
	(__pthread_cleanup): New function.
	(__pthread_cancel): New function.
	(__pthread_setcancelstate): New function.
	(__pthread_setcanceltype): New function.
	(__pthread_testcancel): New function.
	(__pthread_attr_getinheritsched): New function.
	(__pthread_attr_getschedparam): New function.
	(__pthread_attr_getschedpolicy): New function.
	(__pthread_attr_getscope): New function.
	(__pthread_attr_setinheritsched): New function.
	(__pthread_attr_setschedparam): New function.
	(__pthread_attr_setschedpolicy): New function.
	(__pthread_attr_setscope): New function.
	(__pthread_exit): Call any key destructors on thread exit.
	(__pthread_join): Use the embedded attr values.
	(__pthread_detach): Use the embedded attr values.
	(__pthread_getconcurrency): New function.
	(__pthread_getschedparam): New function.
	(__pthread_key_create): Pass the destructor on object creation.
	(__pthread_key_delete): Correct incorrect prototype.
	(__pthread_setconcurrency): New function.
	(__pthread_setschedparam): New function.
	(__pthread_cond_timedwait): Support static mutex initialisers.
	(__pthread_cond_wait): Ditto.
	(__pthread_mutex_getprioceiling): New function.
	(__pthread_mutex_lock): Support static mutex initialisers.
	(__pthread_mutex_trylock): Ditto.
	(__pthread_mutex_unlock): Ditto.
	(__pthread_mutex_destroy): Ditto.
	(__pthread_mutex_setprioceiling): New function.
	(__pthread_mutexattr_getprotocol): New function.
	(__pthread_mutexattr_getpshared): New function.
	(__pthread_mutexattr_gettype): New function.
	(__pthread_mutexattr_init): New function.
	(__pthread_mutexattr_destroy): New function.
	(__pthread_mutexattr_setprotocol): New function.
	(__pthread_mutexattr_setprioceiling): New function.
	(__pthread_mutexattr_getprioceiling): New function.
	(__pthread_mutexattr_setpshared): New function.
	(__pthread_mutexattr_settype): New function.
	Remove stubs for non MT_SAFE compilation.
	* thread.h: Remove duplicate #defines.
	Add prototypes for new functions in thread.cc.
	(pthread_key_destructor): New class.
	(pthread_key_destructor_list): New class.
	(pthread_attr): Add new members.
	(pthread): Remove members that are duplicated in the pthread_attr class.
	(pthread_mutex_attr): Add new members.
	(pthread_once): New class.
	* include/pthread.h: Add prototypes for new functions exported from cygwin1.dll.
	Remove typedefs.
	* include/sched.h: Add prototypes for new functions in sched.cc.
	* include/cygwin/types.h: Add typedefs from pthread.h
@
text
@d169 11
d248 1
@


1.7
log
@* Makefile.in: Use CXX to build the DLL.
* configure.in: Find correct c++ compiler.
* configure: Regenerate.
* path.cc (normalize_posix_path): Put correct drive at beginning of \foo style
paths.
(chdir): Don't send non-posix path to cygcwd.set.
@
text
@a121 1
PTH_ALLOW=''
a135 1
  PTH_ALLOW=';'
a159 1
AC_SUBST(PTH_ALLOW)
@


1.6
log
@Whitespace cleanup.

* configure.in: Eliminate subdir stuff.
* configure: Regenerate.
* include/getopt.h (option): Make name field 'const'.
@
text
@a49 3
  if test "$ac_test_CXXFLAGS" != set; then
    CXXFLAGS='$(CFLAGS)'
  fi
d56 11
d70 1
@


1.5
log
@* acconfig.h: Add support for NEWVFORK.
* config.h.in: Ditto.
* configure.in: Add --enable-vfork option.
* configure: Regenerate.
* dcrt0.cc (quoted): Detect and fix up quoted backslashes.
* sigproc.cc (proc_subproc): Correctly name handle of newly added child process
to avoid erroneous debugging messages about closing the wrong handle.
@
text
@a90 1
AC_CONFIG_SUBDIRS(utils doc)		
d99 3
a101 3
void foo(char *s, int c, size_t n) 
{ 
  __builtin_memset(s, c, n); 
d118 1
a118 1
yes)	 
d121 1
a121 1
runtime) 
d125 1
a125 1
no)	 
d136 1
a136 1
yes)	 
d141 1
a141 1
no)	 
d190 2
a191 2
dnl not compatible. Check and warn for installed newlib only if it's not 
dnl part of the build tree. 
d222 1
a222 1
 		ALLOCA="_alloca"
d224 2
a225 2
   powerpc*)	DLL_ENTRY="dll_entry" 
		DEF_DLL_ENTRY="dll_entry" 
@


1.4
log
@* configure.in: Detect "cross-hosting" situation and set appropriate variables
in Makefile to avoid building excess stuff.
* configure: Regenerate.
* Makefile.in: Accomodate above change.
@
text
@d164 8
@


1.3
log
@* errno.cc (errmap): Correct DIRECTORY mapping to ENOTDIR.
@
text
@d63 14
d78 1
a78 1
AC_SUBST(AR)
d80 1
a80 1
AC_SUBST(AS)
d82 1
a82 1
AC_SUBST(RANLIB)
d84 1
a84 1
AC_SUBST(LD)
d86 1
a86 1
AC_SUBST(DLLTOOL)
d88 1
a88 1
AC_SUBST(WINDRES)
@


1.2
log
@* configure.in: Remove --enable-strace-hhmmss option.
* configure: Regenerate.
@
text
@d46 1
a46 1
    CFLAGS="-g -O2"
@


1.1
log
@Initial revision
@
text
@a96 14
AC_ARG_ENABLE(strace-hhmmss,
[ --enable-strace-hhmmss		strace log output has date/time stamp],
[case "${enableval}" in
yes)	
  AC_DEFINE(STRACE_HHMMSS) 
  ;;
no)	
  ;;
*) 	
  AC_MSG_ERROR(bad value ${enableval} given for enable-strace-hhmmss option) 
  ;;
esac
])

@


1.1.1.1
log
@import winsup-2000-02-17 snapshot
@
text
@@
