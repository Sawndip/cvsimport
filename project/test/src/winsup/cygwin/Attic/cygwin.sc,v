head	1.31;
access;
symbols
	cygwin-64bit-premerge-branch:1.30.0.4
	cygwin-64bit-premerge:1.30
	cygwin-1_7_18-release:1.30
	cygwin-1_7_17-release:1.30
	cygwin-64bit-branch:1.30.0.2
	cygwin-1_7_16-release:1.30
	cygwin-1_7_15-release:1.28
	cygwin-1_7_14_2-release:1.28
	cygwin-1_7_14-release:1.28
	cygwin-1_7_12-release:1.28
	cygwin-1_7_11-release:1.28
	cygwin-1_7_10-release:1.28
	signal-rewrite:1.28.0.2
	pre-notty:1.28
	cygwin-1_7_9-release:1.28
	cv-post-1_7_9:1.27.0.2
	cygwin-1_7_8-release:1.27
	cygwin-1_7_7-release:1.23
	cygwin-1_7_5-release:1.23
	cygwin-1_7_4-release:1.23
	cygwin-1_7_3-release:1.23
	cygwin-1_7_2-release:1.23
	fifo_doover3:1.23.0.4
	cygwin-1_7_1-release:1.23
	prefifo:1.23
	cv-branch-2:1.23.0.2
	pre-ripout-set_console_state_for_spawn:1.23
	EOL_registry_mounts:1.22
	preoverlapped:1.22
	drop_9x_support_start:1.21
	cr-0x5f1:1.20.0.2
	cv-branch:1.19.0.6
	pre-ptymaster-archetype:1.19
	cr-0x3b58:1.19.0.4
	cr-0x5ef:1.19.0.2
	after-mmap-privanon-noreserve:1.19
	after-mmap-revamp:1.19
	before-mmap-revamp:1.19
	cgf-more-exit-sync:1.19
	post_wait_sig_exit:1.19
	pre_wait_sig_exit:1.19
	reparent-point:1.7
	noreparent:1.7.0.16
	cr-0x5e6:1.7.0.14
	cr-0x9e:1.7.0.12
	cr-0x9d:1.7.0.10
	cgf-deleteme:1.7.0.8
	pre-sigrewrite:1.7
	corinna-01:1.7
	cr-0x9c:1.7.0.6
	cr-0x9b:1.7.0.4
	cr-0x99:1.7
	Z-emcb-cygwin_daemon:1.7.0.2
	w32api-2_2:1.7
	mingw-runtime-2_4:1.7
	pre-cgf-merge:1.7
	cgf-dev-branch:1.7.0.20
	predaemon:1.6
	cygwin_daemon_merge_HEAD:1.6
	pregp02r1:1.6.0.10
	cygnus_cvs_20020108_pre:1.6
	Z-cygwin_daemon_merge-new_HEAD:1.7
	Z-cygwin_daemon_merge_HEAD:1.7
	cygwin_daemon:1.5.0.2;
locks; strict;
comment	@# @;


1.31
date	2013.04.23.09.44.31;	author corinna;	state dead;
branches;
next	1.30;

1.30
date	2012.07.09.14.55.02;	author corinna;	state Exp;
branches
	1.30.2.1;
next	1.29;

1.29
date	2012.07.06.10.44.38;	author corinna;	state Exp;
branches;
next	1.28;

1.28
date	2011.03.18.18.16.37;	author corinna;	state Exp;
branches;
next	1.27;

1.27
date	2011.02.18.16.15.20;	author corinna;	state Exp;
branches
	1.27.2.1;
next	1.26;

1.26
date	2011.02.11.16.18.34;	author cgf;	state Exp;
branches;
next	1.25;

1.25
date	2011.02.11.16.05.26;	author cgf;	state Exp;
branches;
next	1.24;

1.24
date	2011.02.11.12.58.01;	author corinna;	state Exp;
branches;
next	1.23;

1.23
date	2008.06.03.02.22.36;	author cgf;	state Exp;
branches;
next	1.22;

1.22
date	2007.04.18.13.11.34;	author briand;	state Exp;
branches;
next	1.21;

1.21
date	2007.01.12.19.40.20;	author corinna;	state Exp;
branches;
next	1.20;

1.20
date	2006.07.14.19.33.55;	author cgf;	state Exp;
branches
	1.20.2.1;
next	1.19;

1.19
date	2005.08.08.13.53.05;	author cgf;	state Exp;
branches
	1.19.6.1;
next	1.18;

1.18
date	2005.08.08.02.27.43;	author cgf;	state Exp;
branches;
next	1.17;

1.17
date	2005.08.07.02.38.13;	author cgf;	state Exp;
branches;
next	1.16;

1.16
date	2005.06.29.23.05.41;	author cgf;	state Exp;
branches;
next	1.15;

1.15
date	2005.06.09.20.46.00;	author cgf;	state Exp;
branches;
next	1.14;

1.14
date	2005.06.09.19.29.27;	author cgf;	state Exp;
branches;
next	1.13;

1.13
date	2005.06.08.20.56.34;	author cgf;	state Exp;
branches;
next	1.12;

1.12
date	2005.06.08.20.18.23;	author cgf;	state Exp;
branches;
next	1.11;

1.11
date	2005.06.01.04.42.44;	author cgf;	state Exp;
branches;
next	1.10;

1.10
date	2005.06.01.04.00.40;	author cgf;	state Exp;
branches;
next	1.9;

1.9
date	2005.06.01.03.46.55;	author cgf;	state Exp;
branches;
next	1.8;

1.8
date	2005.05.19.17.04.28;	author corinna;	state Exp;
branches;
next	1.7;

1.7
date	2002.06.23.18.55.23;	author cgf;	state Exp;
branches;
next	1.6;

1.6
date	2001.12.10.03.35.54;	author cgf;	state Exp;
branches;
next	1.5;

1.5
date	2001.09.17.03.05.05;	author cgf;	state Exp;
branches
	1.5.2.1;
next	1.4;

1.4
date	2001.09.07.01.13.47;	author cgf;	state Exp;
branches;
next	1.3;

1.3
date	2001.08.31.18.16.16;	author cgf;	state Exp;
branches;
next	1.2;

1.2
date	2001.08.31.05.24.36;	author cgf;	state Exp;
branches;
next	1.1;

1.1
date	2001.08.31.05.06.13;	author cgf;	state Exp;
branches;
next	;

1.30.2.1
date	2012.08.10.14.38.03;	author corinna;	state Exp;
branches;
next	1.30.2.2;

1.30.2.2
date	2012.12.03.13.33.02;	author corinna;	state dead;
branches;
next	;

1.27.2.1
date	2011.03.18.18.16.41;	author corinna;	state Exp;
branches;
next	;

1.20.2.1
date	2007.01.12.19.44.19;	author corinna;	state Exp;
branches;
next	1.20.2.2;

1.20.2.2
date	2007.11.12.15.30.18;	author corinna;	state Exp;
branches;
next	;

1.19.6.1
date	2006.07.18.10.33.54;	author corinna;	state Exp;
branches;
next	;

1.5.2.1
date	2002.01.04.03.56.06;	author rbcollins;	state Exp;
branches;
next	1.5.2.2;

1.5.2.2
date	2002.06.24.10.55.34;	author scottc;	state Exp;
branches;
next	;


desc
@@


1.31
log
@	* Merge in cygwin-64bit-branch.
@
text
@OUTPUT_FORMAT(pei-i386)
SECTIONS
{
  .text  __image_base__ + __section_alignment__  :
  {
     *(.init)
    *(.text)
    *(SORT(.text$*))
    *(.glue_7t)
    *(.glue_7)
     ___CTOR_LIST__ = .; __CTOR_LIST__ = .;
			LONG (-1); *(SORT(.ctors.*)); *(.ctors); *(.ctor); LONG (0);
     ___DTOR_LIST__ = .; __DTOR_LIST__ = .;
			LONG (-1); *(SORT(.dtors.*)); *(.dtors); *(.dtor);  LONG (0);
     *(.fini)
    /* ??? Why is .gcc_exc here?  */
     *(.gcc_exc)
     etext = .;
    *(.gcc_except_table)
  }
  .autoload_text ALIGN(__section_alignment__) :
  {
    *(.*_autoload_text);
  }
  /* The Cygwin DLL uses a section to avoid copying certain data
     on fork.  This used to be named ".data".  The linker used
     to include this between __data_start__ and __data_end__, but that
     breaks building the cygwin32 dll.  Instead, we name the section
     ".data_cygwin_nocopy" and explictly include it after __data_end__. */
  .data ALIGN(__section_alignment__) :
  {
    __data_start__ = .;
    *(.data)
    *(.data2)
    *(SORT(.data$*))
    __data_end__ = .;
    *(.data_cygwin_nocopy)
  }
  .rdata ALIGN(__section_alignment__) :
  {
    *(.rdata)
    *(SORT(.rdata$*))
    *(.eh_frame)
  }
  .pdata ALIGN(__section_alignment__) :
  {
    *(.pdata)
  }
  .bss ALIGN(__section_alignment__) :
  {
    __bss_start__ = .;
    *(.bss)
    *(COMMON)
    __bss_end__ = .;
  }
  .edata ALIGN(__section_alignment__) :
  {
    *(.edata)
  }
  .rsrc BLOCK(__section_alignment__) :
  {
    *(.rsrc)
    *(SORT(.rsrc$*))
  }
  .reloc BLOCK(__section_alignment__) :
  {
    *(.reloc)
  }
  .cygwin_dll_common ALIGN(__section_alignment__):
  {
    *(.cygwin_dll_common)
  }
  .gnu_debuglink_overlay ALIGN(__section_alignment__) (NOLOAD):
  {
    BYTE(0)	/* c */
    BYTE(0)	/* y */
    BYTE(0)	/* g */
    BYTE(0)	/* w */
    BYTE(0)	/* i */
    BYTE(0)	/* n */
    BYTE(0)	/* 1 */
    BYTE(0)	/* . */
    BYTE(0)	/* d */
    BYTE(0)	/* b */
    BYTE(0)	/* g */
    BYTE(0)	/* \0 */
    LONG(0)	/* checksum */
  }
  .idata ALIGN(__section_alignment__) :
  {
    /* This cannot currently be handled with grouped sections.
	See pe.em:sort_sections.  */
    SORT(*)(.idata$2)
    SORT(*)(.idata$3)
    /* These zeroes mark the end of the import list.  */
    LONG (0); LONG (0); LONG (0); LONG (0); LONG (0);
    SORT(*)(.idata$4)
    SORT(*)(.idata$5)
    SORT(*)(.idata$6)
    SORT(*)(.idata$7)
    . = ALIGN(16);
    __cygheap_start = ABSOLUTE(.);
  }
  .cygheap ALIGN(__section_alignment__) :
  {
    . = . + (2048 * 1024);
    . = ALIGN(0x10000);
    __cygheap_end = ABSOLUTE(.);
  }
  /DISCARD/ :
  {
    *(.debug$S)
    *(.debug$T)
    *(.debug$F)
    *(.drectve)
  }
  .stab ALIGN(__section_alignment__) (NOLOAD) :
  {
    *(.stab)
  }
  .stabstr ALIGN(__section_alignment__) (NOLOAD) :
  {
    *(.stabstr)
  }
  /* DWARF 1.1 and DWARF 2 */
  .debug_aranges  ALIGN(__section_alignment__) (NOLOAD) : { *(.debug_aranges) }
  .debug_pubnames ALIGN(__section_alignment__) (NOLOAD) : { *(.debug_pubnames) }
  /* DWARF 2 */
  .debug_info     ALIGN(__section_alignment__) (NOLOAD) : { *(.debug_info) }
  .debug_abbrev   ALIGN(__section_alignment__) (NOLOAD) : { *(.debug_abbrev) }
  .debug_line     ALIGN(__section_alignment__) (NOLOAD) : { *(.debug_line) }
  .debug_frame    ALIGN(__section_alignment__) (NOLOAD) : { *(.debug_frame) }
  .debug_str      ALIGN(__section_alignment__) (NOLOAD) : { *(.debug_str) }
  .debug_loc      ALIGN(__section_alignment__) (NOLOAD) : { *(.debug_loc) }
  .debug_macinfo  ALIGN(__section_alignment__) (NOLOAD) : { *(.debug_macinfo) }
  .debug_ranges   ALIGN(__section_alignment__) (NOLOAD) : { *(.debug_ranges) }
  .debug_pubtypes ALIGN(__section_alignment__) (NOLOAD) : { *(.debug_pubtypes) }
}
@


1.30
log
@	* cygwin.sc (.rdata): Revert patch from 2012-07-06.
@
text
@@


1.30.2.1
log
@Add missing patch from previous checkin
@
text
@a1 1
SEARCH_DIR("/usr/i686-pc-cygwin/lib/w32api"); SEARCH_DIR("=/usr/lib/w32api");
@


1.30.2.2
log
@	* Makefile.in: Add rule to build cygwin.sc dynamically using the
	target compiler.
	* cygwin.sc.in: Rename from cygwin.sc.  Make OUTPUT_FORMAT and
	SEARCH_DIR dependent on target CPU.  Add extra alignment and .xdata
	section on x86_64.  Keep up with latest dwarf debug section changes.
@
text
@@


1.29
log
@	* cygwin.sc (.rdata):  Include all sections starting with .rdata.
	(.debug_pubtypes): Make sure section is loaded at the end like all other
	debug sections.
@
text
@d41 1
a41 1
    *(.rdata*)
@


1.28
log
@	* cygwin.sc: Raise default cygheap size to 2 Megs.
@
text
@d41 1
a41 1
    *(.rdata)
d137 1
@


1.27
log
@	* cygwin.sc: Set alignment of .cygheap section to 64K.
@
text
@d106 1
a106 1
    . = . + (1024 * 1024);
@


1.27.2.1
log
@	* cygwin.sc: Raise default cygheap size to 2 Megs.
@
text
@d106 1
a106 1
    . = . + (2048 * 1024);
@


1.26
log
@* cygwin.sc: Eliminate __cygheap_mid.
* cygheap.cc: Ditto.
@
text
@d107 1
@


1.25
log
@* cygheap.cc (_cygheap_mid): Drop unneeded section attribute.
(cygheap_init): Just zero cygheap structure.
* cygwin.sc: Keep 16 byte alignment but drop all other alignments related to
cygheap.  Eliminate unused __cygheap_end1.
@
text
@a105 1
    __cygheap_mid = .;
@


1.24
log
@	* cygwin.sc: Raise default cygheap size to 1 Meg.  Set alignment to
	standard 64K.
@
text
@a102 1
    . = ALIGN(0x10000);
a106 1
    *(.cygheap)
d108 1
a108 1
    . = ALIGN(0x10000);
a109 2
  __cygheap_end = ABSOLUTE(.);
  __cygheap_end1 = __cygheap_mid + SIZEOF(.cygheap);
@


1.23
log
@* cygwin.sc: Remove unrequired and erroneous definition.
@
text
@d109 2
a110 2
    . = . + (512 * 1024);
    . = ALIGN(512 * 1024);
@


1.22
log
@	* cygwin.sc: Remove duplicated .debug_macinfo section.
	* dllfixdbg: Also copy DWARF-2 sections into .dbg file.
@
text
@a113 1
  __cygwin_debug_size = SIZEOF(.gnu_debuglink);
@


1.21
log
@	* cygheap.cc (_csbrk): Fix off-by-one error.
	* cygwin.sc: Give .cygheap a minimum size of 512K.
@
text
@a140 1
  .debug_macinfo  ALIGN(__section_alignment__) (NOLOAD) : { *(.debug_macinfo) }
@


1.20
log
@* cygwin.sc: Make sure there's something in the cygheap.
* dllfixdbg: Accommodate newer binutils which put the gnu_debuglink at the end
rather than at the beginning.
@
text
@d109 1
a109 1
    . = . + 1;
@


1.20.2.1
log
@2007-01-12  Corinna Vinschen  <corinna@@vinschen.de>

	* cygheap.cc (_csbrk): Fix off-by-one error.
	* cygwin.sc: Give .cygheap a minimum size of 512K.

2007-01-12  Corinna Vinschen  <corinna@@vinschen.de>

	* fork.cc (child_copy): Add missing Windows PID in debug output.

2007-01-12  Corinna Vinschen  <corinna@@vinschen.de>

	* syscalls.cc: Update copyright.

2007-01-10  Corinna Vinschen  <corinna@@vinschen.de>

	* mmap.cc (mmap64): Pre-Reserve space for the whole mapping to get a
	useful, valid address before the actual mappings take place.
	Fix typo in comment.

2007-01-10  Corinna Vinschen  <corinna@@vinschen.de>

	* syscalls.cc (sync): Use b_drive for B: drive (Thanks to Howard Chu).

2007-01-09  Corinna Vinschen  <corinna@@vinschen.de>

	* mmap.cc: Do bookkeeping in 4K pages, rather than in 64K chunks.

2007-01-01  Christopher Faylor  <me@@cgf.cx>

	* spawn.cc (spawn_guts): Don't expect synchronization from a non-cygwin
	_P_NOWAIT process.
@
text
@d109 1
a109 1
    . = . + (512 * 1024);
@


1.20.2.2
log
@2007-11-08  Christopher Faylor  <me+cygwin@@cgf.cx>

	* dllfixdbg: Eliminate extra objcopy step.

2007-11-07  Pedro Alves  <pedro_alves@@portugalmail.pt>

	* dllfixdbg: Pass --only-keep-debug to objcopy, instead of
	selecting the sections manually.

2007-11-06  Corinna Vinschen  <corinna@@vinschen.de>

	* thread.cc (pthread_key_create): Drop check for incoming valid object.

2007-11-06  Corinna Vinschen  <corinna@@vinschen.de>

	* shm.cc: Include sync.h
	(struct shm_shmid_list): Add ref_count member.
	(struct shm_attached_list): Remove hdl and size members.  Add a parent
	member pointing to referenced shm_shmid_list entry.
	(shm_guard): New muto.
	(SLIST_LOCK): Define.
	(SLIST_UNLOCK): Define.
	(fixup_shms_after_fork): Use hdl and size members of parent
	shm_shmid_list entry.
	(shmat): Access sequential bookkeeping lists in a thread safe way.
	Accommodate change in list element layout.  Align comments.
	(shmctl): Ditto.
	(shmdt): Ditto.
	(shmget): Ditto.

2007-11-05  Corinna Vinschen  <corinna@@vinschen.de>

	* shm.cc (shmctl): On IPC_RMID don't unmap views and don't close handle
	if the map is still referenced to emulate Linux and BSD behaviour.

2007-11-05  Corinna Vinschen  <corinna@@vinschen.de>

	* shm.cc (shmctl): On IPC_RMID also unmap all views on shared mem
	as well as connected shm_attached_list entry.

2007-10-30  Corinna Vinschen  <corinna@@vinschen.de>

	* fhandler_disk_file.cc (fhandler_base::fstat_helper): Don't remove
	write bits for directories with R/O attribute.
	(fhandler_base::fhaccess): Don't shortcircuit R/O attribute with W_OK
	scenarios for directories.

2007-09-26  Corinna Vinschen  <corinna@@vinschen.de>

	* termios.cc (setspeed): Support new baud rates introduced 2007-02-05.

2007-09-18  Corinna Vinschen  <corinna@@vinschen.de>

	* mmap.cc (fh_disk_file): Delete as global static variable and...
	(mmap64): ...define as local pointer to make mmap thread-safe.
	Accommodate throughout.  Only initialize fh_disk_file after file could
	be opened with GENERIC_EXECUTE access.

2007-09-06  Brian Dessent  <brian@@dessent.net>

	* include/sys/stdio.h (_flockfile): Don't try to lock a FILE
	that has the __SSTR flag set.
	(_ftrylockfile): Likewise.
	(_funlockfile): Likewise.

2007-08-24  Corinna Vinschen  <corinna@@vinschen.de>

	* syscalls.cc (open): Don't follow symlinks if O_EXCL is given.

2007-08-09  Ernie Coskrey  <Ernie.Coskrey@@steeleye.com>

	* gendef (sigbe): Reset "incyg" while the stack lock is active to avoid
	a potential race.

2007-08-01  Corinna Vinschen  <corinna@@vinschen.de>

	* localtime.cc (tzsetwall): Don't set TZ.

2007-07-17  Corinna Vinschen  <corinna@@vinschen.de>

	* fhandler.cc (fhandler_base::fhaccess): Add check for R/O file system.

2007-07-14  Christopher Faylor  <me+cygwin@@cgf.cx>

	* init.cc (in_dllentry): Delete.
	(dll_entry): Remove assignment to deleted variable.
	* winsup.h (in_dllentry): Delete declaration.
	* exceptions.cc (inside_kernel): Use another method to see if we are in
	dll_entry phase.

2007-07-14  Christopher Faylor  <me+cygwin@@cgf.cx>

	* init.cc (in_dllentry): Make NO_COPY to avoid spurious false positives.

2007-07-09  Christopher Faylor  <me+cygwin@@cgf.cx>

	* dlfcn.cc (dlclose): Don't close handle returned from
	GetModuleHandle(NULL).

2007-07-06  Corinna Vinschen  <corinna@@vinschen.de>

	* times.cc (gettimeofday): Align definition to POSIX.

2007-07-04  Corinna Vinschen  <corinna@@vinschen.de>

	* times.cc: Define __timezonefunc__ before including time.h to protect
	definition of timezone function.

2007-07-04  Corinna Vinschen  <corinna@@vinschen.de>

	* include/cygwin/time.h: Switch to timezone variable by default.  Add
	comment.

2007-06-27  Corinna Vinschen  <corinna@@vinschen.de>

	* shared_info.h (SHARED_INFO_CB): Accommodate change to shared_info.
	(CURR_SHARED_MAGIC): Ditto.
	(class shared_info): Add heap_slop_inited member.
	* shared.cc (shared_info::heap_slop_size): Use heap_slop_inited to
	track initializing heap_slop since 0 is a valid value for heap_slop.
	Drop useless < 0 consideration.

2007-06-12  Christopher Faylor  <me+cygwin@@cgf.cx>

	* signal.cc (usleep): Use useconds_t for the type as per POSIX.

2007-06-12  Corinna Vinschen  <corinna@@vinschen.de>

	* fhandler.cc (fhandler_base::fstat): Set pipe permission bits more
	correctly.

2007-05-29  Corinna Vinschen  <corinna@@vinschen.de>

	* dtable.cc (dtable::set_file_pointers_for_exec): Call SetFilePointer
	correctly for 64 bit file access.  Comment out functionality.
	* fhandler.cc (fhandler_base::open): Don't set append_mode.
	(fhandler_base::write): Check for O_APPEND instead of append_mode.
	Call SetFilePointer correctly for 64 bit file access.  Handle
	errors from SetFilePointer.
	* fhandler.h (class fhandler_base): Drop append_mode status flag.
	* fhandler_disk_file.cc (fhandler_base::fstat_helper): Handle
	seeking correctly for 64 bit file access.

2007-05-21  Christian Franke <franke@@computer.org>

	* fhandler_floppy.cc (fhandler_dev_floppy::lseek): Don't invalidate
	devbuf if new position is within buffered range.

2007-05-21  Eric Blake  <ebb9@@byu.net>

	* include/search.h (hsearch_r): Provide declaration.

2007-05-21  Christian Franke <franke@@computer.org>
	     Corinna Vinschen  <corinna@@vinschen.de>

	* fhandler_floppy.cc (fhandler_dev_floppy::lseek): Set buf size to
	sector size.  Simplify non-sector aligned case.  Handle errors from
	raw_read.

2007-05-15  Corinna Vinschen  <corinna@@vinschen.de>

	* fhandler_socket.cc (adjust_socket_file_mode): New inline function.
	(fhandler_socket::fchmod): Squeeze mode through adjust_socket_file_mode
	before using it.
	(fhandler_socket::bind): Ditto.

2007-04-18  Brian Dessent  <brian@@dessent.net>

	* cygwin.sc: Remove duplicated .debug_macinfo section.
	* dllfixdbg: Also copy DWARF-2 sections into .dbg file.

2007-04-06  Eric Blake  <ebb9@@byu.net>

	* include/stdint.h (WINT_MIN): Fix sign.

2007-04-04  Eric Blake  <ebb9@@byu.net>

	* include/stdint.h (WINT_MIN, WINT_MAX): Fix definition.

2007-03-28  Christopher Faylor  <me@@cgf.cx>

	* spawn.cc (spawn_guts): Start pure-windows processes in a suspended
	state to avoid potential DuplicateHandle problems.

2007-03-07  Christopher Faylor  <me@@cgf.cx>

	* signal.cc (handle_sigprocmask): Remove extraneous
	sig_dispatch_pending.

2007-02-26  Corinna Vinschen  <corinna@@vinschen.de>

	* fhandler.cc (fhandler_base::fstat): Set all file times to arbitrary
	fixed value.

2007-02-20  Christopher Faylor  <me@@cgf.cx>

	* exceptions.cc (_cygtls::signal_exit): Only call myself.exit when when
	exit_state indicates that we've visited do_exit.
	* sync.h (lock_process::lock_process): Use renamed exit_state -
	ES_PROCESS_LOCKED.
	* winsup.h: Rename ES_MUTO_SET to ES_PROCESS_LOCKED.

2007-02-20  Corinna Vinschen  <corinna@@vinschen.de>

	* fhandler_socket.cc (fhandler_socket::bind): Remove printing wrong
	errno in debug output.

2007-02-05  Corinna Vinschen  <corinna@@vinschen.de>

	* fhandler_serial.cc (fhandler_serial::tcsetattr): Add support for
	baud rates up to 3000000 baud.  Add missing 128K and 256K cases.
	(fhandler_serial::tcgetattr): Ditto.
	* include/sys/termios.h: Add baud rate definitions from B460800 up to
	B3000000.

2007-01-04  Brian Ford  <Brian.Ford@@FlightSafety.com>
	     Corinna Vinschen  <corinna@@vinschen.de>

	* fhandler.h (PREFERRED_IO_BLKSIZE): Define as 64K.
	* fhandler.cc (fhandler_base::fstat): Set st_blksize to
	PREFERRED_IO_BLKSIZE.
	* fhandler_disk_file.cc (fhandler_base::fstat_helper): Ditto.
	* fhandler_mailslot.cc (fhandler_mailslot::fstat): Ditto.
	* fhandler_raw.cc (fhandler_dev_raw::fstat): Ditto.

2006-11-08  Corinna Vinschen  <corinna@@vinschen.de>

	* security.cc (get_token_group_sidlist): Always add the local
	group to the token.

2006-07-14  Corinna Vinschen  <corinna@@vinschen.de>

	* security.cc (get_token_group_sidlist): Always add the interactive
	group to the token.  Create logon_id group SID by copying it from
	incoming group list.
@
text
@d141 1
@


1.19
log
@* cygwin.sc: Use simpler method to align .cygheap.
* dllfixdbg: Just copy .stab and .stabstr sections when making cygwin1.dbg,
rather than relying on objcopy to keep only the debug sections since objcopy
seems to get it wrong.
* dtable.cc (build_fh_pc): Check setting fh to fhandler_nodevice for NULL, too.
@
text
@d109 1
@


1.19.6.1
log
@	* Merge HEAD into cv-branch.
@
text
@a108 1
    . = . + 1;
@


1.18
log
@* dllfixdbg: New perl script.
* configure.in: Detect objcopy, objdump, strip.
* configure: Regenerate.
* Makefile.in: Pass target objcopy/objdump to new dllfixdbg script.  Remove
previous perl check.
* cygwin.sc: Add .gnu_debuglink_overlay section for eventual replacement with
.gnu_debuglink section.  Revert move of cygheap to end of image.
@
text
@d109 1
a109 1
    . = ALIGN(512 * 1024, 0x10000);
@


1.17
log
@* Makefile.in: Warn when end of cygheap is not on 64k boundary.
* cygwin.sc: Try harder to ensure that cygheap is on a 64k boundary.  Move
cygheap to end of image to stop interference from unstripped debug regions.
@
text
@d73 41
a141 24
  .idata ALIGN(__section_alignment__) :
  {
    /* This cannot currently be handled with grouped sections.
	See pe.em:sort_sections.  */
    SORT(*)(.idata$2)
    SORT(*)(.idata$3)
    /* These zeroes mark the end of the import list.  */
    LONG (0); LONG (0); LONG (0); LONG (0); LONG (0);
    SORT(*)(.idata$4)
    SORT(*)(.idata$5)
    SORT(*)(.idata$6)
    SORT(*)(.idata$7)
    . = ALIGN(16);
    __cygheap_start = ABSOLUTE(.);
    . = ALIGN(0x10000);
  }
  .cygheap ALIGN(__section_alignment__) :
  {
    __cygheap_mid = .;
    *(.cygheap)
    . = ALIGN(512 * 1024, 0x10000);
  }
  __cygheap_end = ABSOLUTE(.);
  __cygheap_end1 = __cygheap_mid + SIZEOF(.cygheap);
@


1.16
log
@* autoload.cc (LoadDLLprime): Use a more descriptive name for autoload text
sections.
* cygwin.sc: Ditto.
@
text
@a72 24
  .idata ALIGN(__section_alignment__) :
  {
    /* This cannot currently be handled with grouped sections.
	See pe.em:sort_sections.  */
    SORT(*)(.idata$2)
    SORT(*)(.idata$3)
    /* These zeroes mark the end of the import list.  */
    LONG (0); LONG (0); LONG (0); LONG (0); LONG (0);
    SORT(*)(.idata$4)
    SORT(*)(.idata$5)
    SORT(*)(.idata$6)
    SORT(*)(.idata$7)
    . = ALIGN(16);
    __cygheap_start = ABSOLUTE(.);
  }
  .cygheap ALIGN(__section_alignment__):
  {
    __cygheap_mid = .;
    *(.cygheap)
    . = ALIGN(512 * 1024, 0x10000);
    . += 8192;		/* inexplicably needed for alignment on 64K boundary?!? */
  }
  __cygheap_end = ABSOLUTE(.);
  __cygheap_end1 = __cygheap_mid + SIZEOF(.cygheap);
d101 24
@


1.15
log
@* cygwin.sc: Place .cygwin_dll_common in a more sensible spot.
@
text
@d23 1
a23 1
    *(.*_text);
@


1.14
log
@* cygwin.sc: Place .cygwin_dll_common.
* init.cc (threadfunc_ix): Use a more common name for the section name.
@
text
@d69 4
a87 4
  .cygwin_dll_common ALIGN(__section_alignment__):
  {
    *(.cygwin_dll_common)
  }
@


1.13
log
@* cygwin.sc: Apparently nonloading sections need to go last.
@
text
@d84 4
@


1.12
log
@* cygwin.sc: Restore resource and reloc sections and use more modern syntax for
stabs sections.
@
text
@d69 24
a120 24
  .idata ALIGN(__section_alignment__) :
  {
    /* This cannot currently be handled with grouped sections.
	See pe.em:sort_sections.  */
    SORT(*)(.idata$2)
    SORT(*)(.idata$3)
    /* These zeroes mark the end of the import list.  */
    LONG (0); LONG (0); LONG (0); LONG (0); LONG (0);
    SORT(*)(.idata$4)
    SORT(*)(.idata$5)
    SORT(*)(.idata$6)
    SORT(*)(.idata$7)
    . = ALIGN(16);
    __cygheap_start = ABSOLUTE(.);
  }
  .cygheap ALIGN(__section_alignment__):
  {
    __cygheap_mid = .;
    *(.cygheap)
    . = ALIGN(512 * 1024, 0x10000);
    . += 8192;		/* inexplicably needed for alignment on 64K boundary?!? */
  }
  __cygheap_end = ABSOLUTE(.);
  __cygheap_end1 = __cygheap_mid + SIZEOF(.cygheap);
@


1.11
log
@* cygwin.sc: Don't output .reloc or .rsrc sections.  Clean up stuff around
.cygheap and use a workaround to get things working with newer
(broken?) binutils.
@
text
@d60 9
a74 2
    *(.reloc)
    *(.rsrc)
d78 1
a78 1
    [ .stab ]
d82 1
a82 1
    [ .stabstr ]
@


1.10
log
@* cygheap.cc (cygheap_end): Remove bogus section attribute.
* cygwin.sc: Make __cygheap_mid absolute.  Remove unused _cygheap_foo.
@
text
@d66 2
d105 1
a105 3
  osection_alignment = __section_alignment__;
  __section_alignment__ = 64 * 1024;
  .cygheap ALIGN(4096):
d107 2
a108 1
    __cygheap_mid = ABSOLUTE(.);
d113 1
@


1.9
log
@* child_info.h (child_info::cygheap_h): Delete.
(child_info::dwProcessId): New field.
* cygheap.cc (init_cheap): Delete.
(dup_now): Ditto.
(cygheap_setup_for_child): Ditto.
(cygheap_setup_for_child_cleanup): Ditto.
(cygheap_fixup_in_child): Simplify.  Use new "child_copy" function to copy heap
from parent.
(_csbrk): Don't attempt allocation if within cygheap section.  Fix so that more
than one allocation will succeed.
(cygheap_init): Reset possibly-nonzero region to zero.
* cygheap.h (cygheap_setup_for_child): Delete declaration.
(cygheap_setup_for_child_cleanup): Ditto.
(cygheap_start): Define as an array.
* cygwin.sc: Modernize.  Remove unneeded sections.  Define cygheap here.
* dcrt0.cc (do_exit): Reflect argument change to close_all_files.
* dtable.cc (dtable::vfork_parent_restore): Ditto.
* dtable.h: Ditto.
* fhandler.h: Ditto.
* fork.cc (fork_copy): Call ReadProcessMemory if there is no thread
(indicating that we're execing).
(fork_child): Don't mess with hParent.
(fork_parent): Remove hParent stuff.  It happens earlier now.  Remove call to
cygheap_setup_for_child* stuff.
(fork): Put child_info_stuff in grouped structure.  Issue error if parent
handle is not set.
(child_copy): New function.
* sigproc.cc (child_info::child_info): Put cygheap settings here.  Set parent
handle.
(child_info::~child_info): Close parent handle if it exists.
* spawn.cc (spawn_guts): Reorganize so that ciresrv is allocated at only the
last minute so that cygheap changes are reflected.  Delete cygheap_setup*
calls.
* syscalls.cc (close_all_files): Add an argument to flag when the fd entry
should be released.
* winsup.h (close_all_files): Add an argument to close_all_files declaration.
Declare child_copy.
@
text
@d107 1
a107 1
    __cygheap_mid = .;
a109 1
_cygheap_foo = .;
@


1.8
log
@	* cygwin.sc: Add Dwarf-2 debug sections.
@
text
@a1 2
SEARCH_DIR(/cygnus/i686-pc-cygwin/lib/w32api); SEARCH_DIR(/cygnus/i686-pc-cygwin/lib);
ENTRY(_mainCRTStartup)
d11 1
a11 1
     ___CTOR_LIST__ = .; __CTOR_LIST__ = . ;
d13 1
a13 1
     ___DTOR_LIST__ = .; __DTOR_LIST__ = . ;
d21 4
d30 1
a30 1
  .data BLOCK(__section_alignment__) :
d32 1
a32 1
    __data_start__ = . ;
d36 1
a36 1
    __data_end__ = . ;
d39 1
a39 1
  .rdata BLOCK(__section_alignment__) :
d45 1
a45 1
  .pdata BLOCK(__section_alignment__) :
d49 1
a49 1
  .bss BLOCK(__section_alignment__) :
d51 1
a51 1
    __bss_start__ = . ;
d54 1
a54 1
    __bss_end__ = . ;
d56 1
a56 1
  .edata BLOCK(__section_alignment__) :
d67 22
a88 1
  .idata BLOCK(__section_alignment__) :
d100 2
d103 8
a110 45
  .CRT BLOCK(__section_alignment__) :
  {
    *(SORT(.CRT$*))
  }
  .endjunk BLOCK(__section_alignment__) :
  {
    /* end is deprecated, don't use it */
     end = .;
     _end = .;
     __end__ = .;
  }
  .rsrc BLOCK(__section_alignment__) :
  {
    *(.rsrc)
    *(SORT(.rsrc$*))
  }
  .reloc BLOCK(__section_alignment__) :
  {
    *(.reloc)
  }
  .stab BLOCK(__section_alignment__) (NOLOAD) :
  {
    [ .stab ]
  }
  .stabstr BLOCK(__section_alignment__) (NOLOAD) :
  {
    [ .stabstr ]
  }
  /* DWARF 1.1 and DWARF 2 */
  .debug_aranges  BLOCK(__section_alignment__) (NOLOAD) : { *(.debug_aranges) }
  .debug_pubnames BLOCK(__section_alignment__) (NOLOAD) : { *(.debug_pubnames) }
  /* DWARF 2 */
  .debug_info     BLOCK(__section_alignment__) (NOLOAD) : { *(.debug_info) }
  .debug_abbrev   BLOCK(__section_alignment__) (NOLOAD) : { *(.debug_abbrev) }
  .debug_line     BLOCK(__section_alignment__) (NOLOAD) : { *(.debug_line) }
  .debug_frame    BLOCK(__section_alignment__) (NOLOAD) : { *(.debug_frame) }
  .debug_str      BLOCK(__section_alignment__) (NOLOAD) : { *(.debug_str) }
  .debug_loc      BLOCK(__section_alignment__) (NOLOAD) : { *(.debug_loc) }
  .debug_macinfo  BLOCK(__section_alignment__) (NOLOAD) : { *(.debug_macinfo) }
  .debug_macinfo  BLOCK(__section_alignment__) (NOLOAD) : { *(.debug_macinfo) }
  .debug_ranges   BLOCK(__section_alignment__) (NOLOAD) : { *(.debug_ranges) }
  .cygheap BLOCK(64 * 1024) :
  {
    __system_dlls__ = ABSOLUTE(.) ;
    __cygheap_start = ABSOLUTE(.) ;
d112 1
@


1.7
log
@* cygwin.sc: Add recent changes from ld sources.
* winsup.h: Move #ifdef EXPCGF code into "winbase.h".
* winbase.h: #ifdef EXPCGF code moved here from "winsup.h".
@
text
@d106 13
@


1.6
log
@whitespace cleanup
@
text
@d14 1
a14 1
			LONG (-1); *(.ctors); *(.ctor); LONG (0);
d16 1
a16 1
			LONG (-1); *(.dtors); *(.dtor);  LONG (0);
@


1.5
log
@* dtable.h (not_open): Assure inline.
* fhandler.h (operator []): Make const.
* sync.cc (muto::~muto): Fix typo which stopped muto event handle from ever
being closed.
@
text
@d110 1
a110 1
  } 
@


1.5.2.1
log
@Merged changes from HEAD
@
text
@d110 1
a110 1
  }
@


1.5.2.2
log
@Merged changes from HEAD
@
text
@d14 1
a14 1
			LONG (-1); *(SORT(.ctors.*)); *(.ctors); *(.ctor); LONG (0);
d16 1
a16 1
			LONG (-1); *(SORT(.dtors.*)); *(.dtors); *(.dtor);  LONG (0);
@


1.4
log
@experiment.
@
text
@d108 1
a109 1
    __system_dlls__ = ABSOLUTE(.) + 64;
@


1.3
log
@* cygwin.sc: Revert to previous NO_COPY behavior.
* winsup.h: Ditto.
* sigproc.cc: Ditto.
* autoload.cc: Ditto.
@
text
@d109 1
a109 1
    __system_dlls__ = ABSOLUTE(.) + 4;
@


1.2
log
@minor wording change.
@
text
@d35 1
a35 1
    *(COMMON)
d51 1
@


1.1
log
@* cygwin.sc: New file -- linker script for building cygwin DLL.
* Makefile.in: Use linker script to control location of cygheap.
* cygheap.cc (buckets): Make static.
(init_cheap): Remove special iswinnt handling.  Allocate cygheap at a fixed
location.  Display more info when allocation fails.
(cygheap_fixup_in_child): Try harder to move cygheap to correct location.
Display more info when allocation fails.
* fhandler.h (fhandler_socket): Add macros for tracking socket shutdown state.
* net.cc (cygwin_shutdown): Set appropriate shutdown value for future use.
* select.cc (select_stuff::cleanup): New method.
(cygwin_select): Call cleanup explicitly to avoid a race.
(select_stuff:~select_stuff): Call cleanup chain via cleanup method.
(fhandler_socket::select_read): Set *_ready when shutdown has been called on
the socket.
(fhandler_socket::select_write): Ditto.
(fhandler_socket::select_except): Ditto.
* winsup.h: Move NO_COPY to "COMMON" section.
* autoload.cc (wsock_started): Avoid initializing NO_COPY value.
* sigproc.cc: Remove initialization from NO_COPY variables.
(sigproc_init): Initialize sig_loop_wait here, rather than via initialization.
(subproc_init): Initialize proc_loop_wait here, rather than via initialization.
@
text
@d23 1
a23 1
  /* The Cygwin32 library uses a section to avoid copying certain data
@

