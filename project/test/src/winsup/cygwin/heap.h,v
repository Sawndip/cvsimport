head	1.11;
access;
symbols
	cygwin-1_7_35-release:1.11
	cygwin-1_7_34-release:1.11
	cygwin-1_7_33-release:1.11
	cygwin-1_7_32-release:1.11
	cygwin-1_7_31-release:1.11
	cygwin-1_7_30-release:1.11
	cygwin-1_7_29-release:1.11
	cygwin-1_7_29-release-branchpoint:1.11.0.4
	cygwin-pre-user-db:1.11
	cygwin-1_7_28-release:1.11
	cygwin-1_7_27-release:1.11
	cygwin-1_7_26-release:1.11
	cygwin-1_7_25-release:1.11
	cygwin-1_7_24-release:1.11
	cygwin-1_7_23-release:1.11
	cygwin-1_7_22-release:1.11
	cygwin-1_7_21-release:1.11
	cygwin-1_7_20-release:1.11
	cygwin-1_7_19-release:1.11
	cygwin-64bit-postmerge:1.11
	cygwin-64bit-premerge-branch:1.11.0.2
	cygwin-64bit-premerge:1.11
	cygwin-1_7_18-release:1.11
	post-ptmalloc3:1.10.36.1
	pre-ptmalloc3:1.10.36.1
	cygwin-1_7_17-release:1.10
	cygwin-64bit-branch:1.10.0.36
	cygwin-1_7_16-release:1.10
	cygwin-1_7_15-release:1.10
	cygwin-1_7_14_2-release:1.10
	cygwin-1_7_14-release:1.10
	cygwin-1_7_12-release:1.10
	cygwin-1_7_11-release:1.10
	cygwin-1_7_10-release:1.10
	signal-rewrite:1.10.0.34
	pre-notty:1.10
	cygwin-1_7_9-release:1.10
	cv-post-1_7_9:1.10.0.32
	cygwin-1_7_8-release:1.10
	cygwin-1_7_7-release:1.10
	cygwin-1_7_5-release:1.10
	cygwin-1_7_4-release:1.10
	cygwin-1_7_3-release:1.10
	cygwin-1_7_2-release:1.10
	fifo_doover3:1.10.0.30
	cygwin-1_7_1-release:1.10
	prefifo:1.10
	cv-branch-2:1.10.0.28
	pre-ripout-set_console_state_for_spawn:1.10
	EOL_registry_mounts:1.10
	preoverlapped:1.10
	drop_9x_support_start:1.10
	cr-0x5f1:1.10.0.26
	cv-branch:1.10.0.24
	pre-ptymaster-archetype:1.10
	cr-0x3b58:1.10.0.22
	cr-0x5ef:1.10.0.20
	after-mmap-privanon-noreserve:1.10
	after-mmap-revamp:1.10
	before-mmap-revamp:1.10
	cgf-more-exit-sync:1.10
	post_wait_sig_exit:1.10
	pre_wait_sig_exit:1.10
	reparent-point:1.10
	noreparent:1.10.0.18
	cr-0x5e6:1.10.0.16
	cr-0x9e:1.10.0.14
	cr-0x9d:1.10.0.10
	cgf-deleteme:1.10.0.8
	pre-sigrewrite:1.10
	corinna-01:1.10
	cr-0x9c:1.10.0.6
	cr-0x9b:1.10.0.4
	cr-0x99:1.10
	Z-emcb-cygwin_daemon:1.10.0.2
	w32api-2_2:1.10
	mingw-runtime-2_4:1.10
	pre-cgf-merge:1.10
	cgf-dev-branch:1.10.0.12
	predaemon:1.9
	cygwin_daemon_merge_HEAD:1.9
	pregp02r1:1.9.0.30
	cygnus_cvs_20020108_pre:1.9
	Z-cygwin_daemon_merge-new_HEAD:1.9
	Z-cygwin_daemon_merge_HEAD:1.9
	cygwin_daemon:1.8.0.4;
locks; strict;
comment	@ * @;


1.11
date	2013.01.21.04.38.27;	author cgf;	state Exp;
branches;
next	1.10;

1.10
date	2002.10.22.16.18.55;	author cgf;	state Exp;
branches
	1.10.36.1;
next	1.9;

1.9
date	2001.10.05.04.36.14;	author cgf;	state Exp;
branches;
next	1.8;

1.8
date	2001.09.11.20.01.00;	author cgf;	state Exp;
branches
	1.8.4.1;
next	1.7;

1.7
date	2001.09.09.20.00.29;	author cgf;	state Exp;
branches;
next	1.6;

1.6
date	2001.09.09.19.06.50;	author cgf;	state Exp;
branches;
next	1.5;

1.5
date	2001.09.07.21.32.04;	author cgf;	state Exp;
branches;
next	1.4;

1.4
date	2001.06.24.22.26.51;	author cgf;	state Exp;
branches;
next	1.3;

1.3
date	2001.01.29.00.46.25;	author cgf;	state Exp;
branches;
next	1.2;

1.2
date	2000.09.08.02.56.54;	author cgf;	state Exp;
branches;
next	1.1;

1.1
date	2000.09.03.04.16.35;	author cgf;	state Exp;
branches;
next	;

1.10.36.1
date	2013.01.21.13.52.06;	author corinna;	state Exp;
branches;
next	;

1.8.4.1
date	2002.01.04.03.56.08;	author rbcollins;	state Exp;
branches;
next	;


desc
@@


1.11
log
@Throughout, update copyrights to reflect dates which correspond to main-branch
checkins.  Regularize copyright format.
@
text
@/* heap.h: Cygwin heap manager definitions.

   Copyright 2000, 2001, 2002 Red Hat, Inc.

This file is part of Cygwin.

This software is a copyrighted work licensed under the terms of the
Cygwin license.  Please consult the file "CYGWIN_LICENSE" for
details. */

#include "perprocess.h"

/* Heap management. */
void heap_init ();
void malloc_init ();

#define inheap(s) \
  (cygheap->user_heap.ptr && s \
   && ((char *) (s) >= (char *) cygheap->user_heap.base) \
   && ((char *) (s) <= (char *) cygheap->user_heap.top))
@


1.10
log
@* cygheap.cc (cygheap_fixup_in_child): Use user_heap element in cygheap.
(init_cheap): Ditto for declaration.
* fork.cc (fork_parent): Use user_heap element in cygheap.
* heap.h (inheap): Ditto.
* heap.cc (sbrk): Ditto.
(heap_init): Ditto.  Reorganize to shrink heap chunk as required and record new
value in cygheap.
* dcrt0.cc (dll_crt0_1): More "move the cygthread init" games.
* shared.cc (open_shared): Rework memory protection to properly deal with
relocated shared segment.
(shared_info::heap_chunk_size): Rename element to 'heap_chunk'.
* shared_info.h (shared_info): Ditto for declaration.
* strace.cc (strace::hello): Report on heap chunk size from cygheap since it
may shrink.
@
text
@d3 1
a3 1
   Copyright 2000, 2001 Red Hat, Inc.
@


1.10.36.1
log
@Pull in changes from HEAD
@
text
@d3 1
a3 1
   Copyright 2000, 2001, 2002 Red Hat, Inc.
@


1.9
log
@* heap.h (inheap): Check for NULL.
@
text
@d18 3
a20 2
  (cygheap->heapptr && s && ((char *) (s) >= (char *) cygheap->heapbase) \
   && ((char *) (s) <= (char *) cygheap->heaptop))
@


1.8
log
@Update copyrights.
@
text
@d18 1
a18 1
  (cygheap->heapptr && ((char *) (s) >= (char *) cygheap->heapbase) \
@


1.8.4.1
log
@Merged changes from HEAD
@
text
@d18 1
a18 1
  (cygheap->heapptr && s && ((char *) (s) >= (char *) cygheap->heapbase) \
@


1.7
log
@* heap.h (inheap): Rewrite macro to accomodate removal of brk macros below.
@
text
@d3 1
a3 1
   Copyright 2000 Cygnus Solutions.
@


1.6
log
@* cygheap.cc (cygheap_fixup_in_child): Clear cygheap->base so that heap is not
forced to start at the same place in execed process.
* heap.cc: Remove brk* macros for clarity throughout.
* heap.h: Ditto.
* shared.cc (shared_info::initialize): Move heap_chunk test into
heap_chunk_size().
(heap_chunk_size): Check for chunk size here.  Don't go to registry if
heap_chunk_in_mb is already set.
* smallprint.c (console_printf): Add Windows 95 concessions.
@
text
@d17 3
a19 1
#define inheap(s) (brk && ((char *) (s) >= (char *) brkbase) && ((char *) (s) <= (char *) brktop))
@


1.5
log
@* cygheap.h (init_cygheap): Move heap pointers here.
* include/sys/cygwin.h (perprocess): Remove heap pointers.
* dcrt0.cc (__cygwin_user_data): Reflect obsolete perprocess stuff.
(_dll_crt0): Don't initialize heap pointers.
(cygwin_dll_init): Ditto.
(release_upto): Use heap pointers from cygheap.
* heap.h: Ditto.
* fork.cc (fork_parent): Ditto.  Don't set heap pointers in ch.
(fork_child): Remove obsolete sigproc_fixup_after_fork.
* shared.cc (memory_init): Reorganize so that cygheap initialization is called
prior to regular heap since regular heap uses cygheap now.
* sigproc.cc (proc_subproc): Eliminate zombies allocation.
(sigproc_init): Move zombies alloation here.  Don't free up array on fork, just
reuse it.
(sigproc_fixup_after_fork): Eliminate.
* sigproc.h: Ditto.
* include/cygwin/version.h: Reflect change to perprocess structure.
@
text
@a17 7

#define brksize ((char *) cygheap->heaptop - (char *) cygheap->heapbase)
#define brk (cygheap->heapptr)
#define brkbase (cygheap->heapbase)
#define brktop (cygheap->heaptop)
#define brkchunk (cygwin_shared->heap_chunk_size ())

@


1.4
log
@forced commit
@
text
@d19 4
a22 4
#define brksize ((char *) user_data->heaptop - (char *) user_data->heapbase)
#define brk (user_data->heapptr)
#define brkbase (user_data->heapbase)
#define brktop (user_data->heaptop)
@


1.3
log
@* syscalls.cc (_link): Make sure that newpath does not exist.  Set errno if it
does.
* cygheap.cc (init_cheap): Don't specify a load address for the heap.  It
doesn't work on #!*& Windows 9x.
(cygheap_init): Move GetUserName to memory_init.
* dcrt0.cc (dll_crt0_1): Call new memory_init functin, eliminate call to
heap_init.
* heap.cc (heap_init): Improve error output.
* heap.h: Correct some declarations.
* shared.cc (mount_table_init): Remove.
(memory_init): Renamed from shared_init.  Reorganize to accomodate strange
Windows 9x problems with cygheap/heap interaction.
* shared_info.h: Rename shared_init to memory_init.
@
text
@@


1.2
log
@Break out more header info into separate files.  Use appropriate header files
throughout.
* shared.h: Remove.
* cygwin_version.h: New file.
* delqueue.h: New file.
* environ.h: New file.
* host_dependent.h: New file.
* perprocess.h: New file.
* registry.h: New file.
* security.h: New file.
@
text
@d14 2
a15 2
void heap_init (void);
void malloc_init (void);
@


1.1
log
@* Makefile.in: Add cygheap.o.
* child_info.h: Add specific exec class.
* cygheap.h: New file.  Contains declarations for cygwin heap.
* cygheap.cc: New file.  Implements cygwin heap functions.
* dcrt0.cc (quoted): Simplify due to new method for passing arguments between
cygwin programs.
(alloc_stack_hard_way): Attempt to handle overlapped stack.
(dll_crt0_1): Move child_info processing here.  Accomodate new method for
passing arguments between cygwin programs.  Initialize cygwin heap.  Establish
__argc and __argv variables.
(_dll_crt0): Move most of child_info processing to dll_crt0_1.
(cygwin_dll_init): Remove duplication.
* dtable.cc (dtable::extend): Allocate dtable using cygwin heap.
(dtable::build_fhandler): Ditto for fhandler type being constructed.
(dtable::dup_worker): Free new fhandler from cygwin heap on error.
(dtable::select_*): Don't assume that this == fdtab.
(dtable::linearize_fd_array): Delete.
(dtable::delinearize_fd_array): Delete.
(dtable::fixup_after_exec): New file.
(dtable::vfork_child_dup): Use cygwin heap.
(dtable::vfork_parent_restore): Ditto.
* dtable.h: Remove obsolete methods.  Add new method.
* environ.cc (posify): Eliminate already_posix parameter and logic.
(envsize): New function.
(_addenv): Use envsize.
(environ_init): Accept an argument pointing to an existing environment list.
If supplied, allocate space for this in the the program's heap.
* fhandler.cc (fhandler_base::operator =): Move here from fhandler.h.  Use
cygwin heap to allocate filenames.
(fhandler_base::set_name): Allocate/free names from cygwin heap.
(fhandler_base::linearize): Delete.
(fhandler_base::de_linearize): Delete.
(fhandler_base::operator delete): Free from cygwin heap.
(fhandler_base::~fhandler_base): Ditto.
* fhandler.h: Accomodate elimination of *linearize and other changes above.
* fhandler_console.cc (fhandler_console::fixup_after_exec): Rename from
de_linearize.
* heap.h: New file.
* fhandler_tty.cc (fhandler_tty_slave::fhandler_tty_slave): Use cygwin heap for
name.  fhandler_tty::fixup_after_exec): Rename from de_linearize.
* fork.cc (fork): Call cygheap_fixup_in_child.
* heap.cc: Use declarations in heap.h.
* malloc.cc: Sprinkle assertions throughout to catch attempts to free/realloc
something from the cygwin heap.
* path.cc: Throughout, eliminate use of per-thread cache for cwd.  Use cwd_*
functions rather than cwd_* variables to access cwd_win32 and cwd_posix.
(cwd_win32): New function.
(cwd_posix): New function.
(cwd_hash): New function.
(cwd_fixup_after_exec): New function.
* path.h: Accomodate path.cc changes.
* pinfo.cc (pinfo_init): Accept a pointer to an environment table.  Pass this
to environ_init.  Eliminate old 'title' tests.
* pinfo.h: Accomodate above change in argument.
* spawn.cc (struct av): New method for building argv list.
(av::unshift): New method.
(spawn_guts): Allocate everything that the child process needs in the cygwin
heap and pass a pointer to this to the child.  Build argv list using new
method.  Eliminate delinearize stuff.
* thread.h: Eliminate _cwd_win32 and _cwd_posix buffers.
* winsup.h: Eliminate obsolete functions.  Add envsize() declaration.
@
text
@d11 2
@

