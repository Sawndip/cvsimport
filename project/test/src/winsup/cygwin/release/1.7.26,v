head	1.21;
access;
symbols
	cygwin-1_7_35-release:1.21
	cygwin-1_7_34-release:1.21
	cygwin-1_7_33-release:1.21
	cygwin-1_7_32-release:1.21
	cygwin-1_7_31-release:1.21
	cygwin-1_7_30-release:1.21
	cygwin-1_7_29-release:1.21
	cygwin-1_7_29-release-branchpoint:1.21.0.2
	cygwin-pre-user-db:1.21
	cygwin-1_7_28-release:1.21
	cygwin-1_7_27-release:1.21
	cygwin-1_7_26-release:1.21;
locks; strict;
comment	@# @;


1.21
date	2013.11.27.14.27.34;	author corinna;	state Exp;
branches;
next	1.20;

1.20
date	2013.11.26.17.11.09;	author corinna;	state Exp;
branches;
next	1.19;

1.19
date	2013.11.24.12.09.18;	author corinna;	state Exp;
branches;
next	1.18;

1.18
date	2013.11.19.22.21.11;	author corinna;	state Exp;
branches;
next	1.17;

1.17
date	2013.11.19.20.37.27;	author corinna;	state Exp;
branches;
next	1.16;

1.16
date	2013.11.19.18.10.47;	author corinna;	state Exp;
branches;
next	1.15;

1.15
date	2013.11.19.13.29.37;	author corinna;	state Exp;
branches;
next	1.14;

1.14
date	2013.11.19.10.47.09;	author corinna;	state Exp;
branches;
next	1.13;

1.13
date	2013.10.30.10.00.32;	author corinna;	state Exp;
branches;
next	1.12;

1.12
date	2013.10.28.10.57.33;	author corinna;	state Exp;
branches;
next	1.11;

1.11
date	2013.10.27.09.42.17;	author corinna;	state Exp;
branches;
next	1.10;

1.10
date	2013.10.26.13.23.54;	author corinna;	state Exp;
branches;
next	1.9;

1.9
date	2013.10.25.18.40.57;	author corinna;	state Exp;
branches;
next	1.8;

1.8
date	2013.10.25.16.16.50;	author corinna;	state Exp;
branches;
next	1.7;

1.7
date	2013.10.25.15.04.24;	author corinna;	state Exp;
branches;
next	1.6;

1.6
date	2013.10.25.12.21.59;	author corinna;	state Exp;
branches;
next	1.5;

1.5
date	2013.10.24.09.41.17;	author corinna;	state Exp;
branches;
next	1.4;

1.4
date	2013.10.19.14.37.29;	author cgf;	state Exp;
branches;
next	1.3;

1.3
date	2013.10.16.15.14.22;	author corinna;	state Exp;
branches;
next	1.2;

1.2
date	2013.10.15.16.53.46;	author corinna;	state Exp;
branches;
next	1.1;

1.1
date	2013.09.25.15.58.45;	author cgf;	state Exp;
branches;
next	;


desc
@@


1.21
log
@	* syscalls.cc (try_to_bin): Take additional parameter to get file open
	flags.  If the file to move to the bin has been opened casesensitive,
	reopen it caseinsensitive.  Explain why.  Revert the default name of
	the Vista-and-later recycler to mixed case for readability.
	(unlink_nt): Call try_to_bin with file open flags as evaluated.
@
text
@What's new:
-----------

- getaddrinfo now supports glibc-specific International Domain Name (IDN)
  extension flags: AI_IDN, AI_CANONIDN, AI_IDN_ALLOW_UNASSIGNED,
  AI_IDN_USE_STD3_ASCII_RULES.

- getnameinfo now supports glibc-specific International Domain Name (IDN)
  extension flags: NI_IDN, NI_IDN_ALLOW_UNASSIGNED, NI_IDN_USE_STD3_ASCII_RULES.

- Preliminary, experimental support of the posix_spawn family of functions.
  New associated header /usr/include/spawn.h.


What changed:
-------------

- Slightly improve randomness of /dev/random emulation.

- Allow to use advisory locking on any device.  POSIX fcntl and lockf locking
  works with any device, BSD flock locking only with devices backed by an OS
  handle.  Right now this excludes console windows on pre Windows 8, as well as
  almost all virtual files under /proc from BSD flock locking.

- The header /usr/include/exceptions.h, containing implementation details for
  32 bit Windows' exception handling only, has been removed.


Bug fixes:
----------

- pthread_atparent hook should not be called in the child.
  Fixes: http://cygwin.com/ml/cygwin/2013-09/msg00365.html

- 64 bit only:  Correctly mmap'ing regions > 4 Gigs.
  Fixes: http://cygwin.com/ml/cygwin/2013-09/msg00155.html

- Fix random content of /proc/$PID/ctty if the process has no controlling
  tty.  Set to just "\n" instead.

- Properly set process sid rather than always using -1.
  Fixes: http://cygwin.com/ml/cygwin/2013-10/threads.html#00237 

- Fix a potential crash after calling lseek on /dev/clipboard.

- Fix a handle inheritance bug in raw disk and tape device handling which
  led to EBADF errors in child processes.

- open("/dev", O_CREAT) accidentally created a /dev file if no /dev
  exists at the time.

- DIR *d = opendir ("foo"); flock (dirfd (d), ...); worked, but did the
  wrong thing.

- Reading from /dev/windows was broken for some time.

- select'ing on /dev/windows accidentally didn't take the setting of
  ioctl (WINDOWS_HWND) into account.

- Fix typos in cygcheck which could crash Windows 8 and 8.1 machines.
  Fixes: http://cygwin.com/ml/cygwin/2013-11/msg00334.html

- Show OS version correctly even on Windows 8.1 and Server 2012 R2.
  Fixes: http://cygwin.com/ml/cygwin/2013-11/msg00343.html

- dup2() could crash in some cases for a destination >= 256
  Fixes: http://cygwin.com/ml/cygwin/2013-09/msg00397.html

- Try to workaround the following problem: unlink(2) could fail, if the
  file was opened casesensitive and has to be moved to the recycler due
  to a sharing violation.
@


1.20
log
@	* common.din: Export posix_spawn[...] functions.
	* exec.cc (execve): Add EXPORT_ALIAS _execve.
	* include/cygwin/version.h (CYGWIN_VERSION_API_MINOR): Bump.
	* posix.sgml (std-susv4):  Add posix_spawn[...] here.
	(std-notimpl): Drop here.
@
text
@d68 4
@


1.19
log
@*** empty log message ***
@
text
@d11 3
@


1.18
log
@	* ntdll.h (RtlGetVersion): Declare.
	* wincap.cc (wincapc::init): Rather than GetVersionEx, call
	RtlGetVersion which is not crippled by missing Windows 8.1 manifest.
	* wincap.h (wincapc): Change type of version to RTL_OSVERSIONINFOEXW.
	Align formatting of all class members.
@
text
@d63 2
@


1.17
log
@	* wincap.cc (wincapc::init): Revert previous change.  It's not working.
@
text
@d59 4
@


1.16
log
@*** empty log message ***
@
text
@a24 4
- Against all odds, report correct OS kernel version number on Windows 8.1
  and Windows Server 2012 R2.
  See: http://cygwin.com/ml/cygwin/2013-11/msg00343.html

@


1.15
log
@	* autoload.cc (IdnToAscii): Define.
	(IdnToUnicode): Define.
	(FreeAddrInfoW): Define.
	(GetAddrInfoW): Define.
	(GetNameInfoW): Define.
	* net.cc: Drop W. Richard STEVENS libgai implementation.
	(cygwin_freeaddrinfo): Move code from ipv4_freeaddrinfo here.  Move
	definition up in file to avoid forward declaration in ga_duplist.
	(ga_dup): Take addrinfoW as input.  Add parameters to get IDN flags
	and to set error value.  Handle IDN flags and especially AI_CANONIDN.
	Convert input wchar_t ai_canonname string to multibyte for output.
	(ga_duplist): Add parameters to get IDN flags and to set error value
	and propagate to ga_dup.  Call cygwin_freeaddrinfo.
	(gai_errmap): Add comments.  Align error strings to GLibc.  Add
	EAI_IDN_ENCODE entry.
	(get_ipv6_funcs): Remove.
	(load_ipv6_guard): Remove.
	(ipv6_inited): Remove.
	(load_ipv6): Remove.
	(load_ipv6_funcs): Remove.
	(cygwin_getaddrinfo): Drop calling load_ipv6.  Handle AI_IDN* flags.
	Convert input strings to wchar_t and call GetAddrInfoW/FreeAddrInfoW.
	In case hints is NULL, set default ai_flags explicitely to
	AI_V4MAPPED | AI_ADDRCONFIG, as documented for Glibc.  Only add AI_ALL
	if AI_ADDRCONFIG is not given.  Unconditionally add Windows-specific
	AI_DISABLE_IDN_ENCODING to ai_flags to make IDN behaviour compatible
	to Glibc even on Windows 8 and later.
	(cygwin_getnameinfo): Drop calling load_ipv6.  Handle NI_IDN* flags.
	Call GetNameInfoW and convert returned strings from wchar_t to
	multibyte.
	* include/netdb.h: Add comments to describe flags and error values.
	(AI_*): Define all flags using hex values for clearness.
	(AI_IDN): Define.
	(AI_CANONIDN): Define.
	(AI_IDN_ALLOW_UNASSIGNED): Define.
	(AI_IDN_USE_STD3_ASCII_RULES): Define.
	(NI_*): Define all flags using hex values for clearness.
	(NI_IDN): Define.
	(NI_IDN_ALLOW_UNASSIGNED): Define.
	(NI_IDN_USE_STD3_ASCII_RULES): Define.
	(EAI_IDN_ENCODE): Define.
@
text
@d25 4
@


1.14
log
@*** empty log message ***
@
text
@d4 7
@


1.13
log
@*** empty log message ***
@
text
@d50 2
@


1.12
log
@*** empty log message ***
@
text
@d39 11
@


1.11
log
@	* exception.h: Fold in content of include/exceptions.h.
	* include/exceptions.h: Remove.
@
text
@d10 4
a13 3
- Allow to use advisory locking on any device which is backed by an OS handle.
  Right now this excludes console windows on pre Windows 8, as well as almost
  all virtual files under /proc.
@


1.10
log
@	* devices.in (dev_storage): Map /dev/dsp to \Device\Null.
	* devices.cc: Regenerate.
	* fhandler_dsp.cc (fhandler_dev_dsp::open): Call fhandler_base::open.
	(fhandler_dev_dsp::close): Call fhandler_base::close.
	(fhandler_dev_dsp::fixup_after_fork): Call
	fhandler_base::fixup_after_fork.

	* fhandler_raw.cc (fhandler_dev_raw::fixup_after_fork): Call
	fhandler_base::fixup_after_fork.
@
text
@d14 3
@


1.9
log
@	* flock.cc (fhandler_base::lock): Only refuse to lock nohandle and
	old-style console devices when called to perform BSD flock locking.
	Add a FIXME to comment and align description.

	* ntdll.h (THREADINFOCLASS): Following MSDN, rename throughout from
	THREAD_INFORMATION_CLASS.
@
text
@d11 2
a12 2
  Right now this excludes /dev/dsp, console windows on pre Windows 8, as well
  as almost all virtual files under /proc.
d31 4
@


1.8
log
@	* devices.in (dev_storage): Map /dev/clipboard to \Device\Null.
	* devices.cc: Regenerate.
	* fhandler.h (fhandler_dev_clipboard::open): Drop declaration.
	* fhandler_clipboard.cc (fhandler_dev_clipboard::dup): Drop call to
	open.  Set private members to 0 and call fhandler_base::dup.
	(fhandler_dev_clipboard::open): Remove so that default
	fhandler_base::open is used to open \Device\Null.
	(set_clipboard): Drop gratuitios call to RegisterClipboardFormatW.
	(fhandler_dev_clipboard::close): Call fhandler_base::close from here.
@
text
@d11 2
a12 2
  Right now this excludes /dev/dsp as well as almost all virtual files under
  /proc.
@


1.7
log
@	* fhandler_clipboard.cc (fhandler_dev_clipboard::open): Drop gratuitios
	handling of membuffer.  It's NULL anyway.
	(fhandler_dev_clipboard::lseek): Set membuffer to NULL after freeing
	it to avoid subsequent crashes when accessing invalid pointer.
@
text
@d10 3
a12 3
- Allow to use advisory locking on any device which is backed by an OS
  handle.  Right now this excludes /dev/clipboard, /dev/dsp, as well as
  almost all virtual files under /proc.
@


1.6
log
@	* devices.in (dev_storage): Map /dev/random and /dev/urandom to
	\Device\Null.
	* devices.cc: Regenerate.
	* fhandler.h (fhandler_dev_random::open): Drop declaration.
	(fhandler_dev_random::close): Ditto.
	(fhandler_dev_random::crypt_gen_random): Convert to static method.
	* fhandler_random.cc (fhandler_dev_random::open): Remove so that default
	fhandler_base::open is used to open \Device\Null.
	(fhandler_dev_random::close): Ditto.
	* fhandler_socket.cc (entropy_source): Delete.
	(fhandler_socket::af_local_set_secret): Remove entropy_source code and
	call fhandler_dev_random::crypt_gen_random directly instead.
@
text
@d29 2
@


1.5
log
@	* devices.in (dev_storage): Map /dev/zero and /dev/full to \Device\Null.
	* devices.cc: Regenerate.
	* dtable.h (struct dtable): Make fhandler_base friend, rather
	than fhandler_disk_file.
	* fhandler.cc (fhandler_base::open_with_arch): Create unique id.
	(fhandler_base::cleanup): Call del_my_locks.
	(fhandler_base::fcntl): Handle F_GETLK, F_SETLK and F_SETLKW.
	* fhandler.h (fhandler_base::get_dev): Return real device number.
	(fhandler_base::set_unique_id): New inline method.
	(fhandler_disk_file::lock): Drop declaration.
	(fhandler_disk_file::get_dev): New method, return pc.fs_serial_number.
	(fhandler_dev_zero::open): Drop declaration.
	* fhandler_disk_file.cc (fhandler_disk_file::close): Move
	del_my_locks call to fhandler_base::open_with_arch.
	(fhandler_disk_file::fcntl): Move handling of locking commands to
	fhandler_base::fcntl.
	(fhandler_base::open_fs): Drop call to NtAllocateLocallyUniqueId.
	* fhandler_zero.cc (fhandler_dev_zero::open): Remove so that default
	fhandler_base::open is used to open \Device\Null.
	* flock.cc (fixup_lockf_after_exec): Finding a single fhandler is
	enough here.
	(fhandler_base::lock): Replace fhandler_disk_file::lock.  Refuse to lock
	nohandle devices.  Handle read/write test using POSIX flags.  Explain
	why.  Never fail on SEEK_CUR or SEEK_END, rather assume position 0,
	just as Linux.
	* net.cc (fdsock): Create unique id.
@
text
@d10 3
a12 3
- Allow to use advisory locking on any device which is backed by an OS handle.
  Right now this excludes /dev/clipboard, /dev/dsp, /dev/random, /dev/urandom,
  as well as almost all virtual files under /proc.
@


1.4
log
@.
@
text
@d10 5
@


1.3
log
@	* fhandler_process.cc (format_process_ctty): Fix random content of
	/proc/$PID/ctty if the process has no controlling tty.  Set to just
	"\n" instead.
@
text
@d21 3
@


1.2
log
@*** empty log message ***
@
text
@d18 3
@


1.1
log
@* sigproc.h (hold_everything::ischild): Declare as reference.
(hold_everything::hold_everything): Store address of caller's notion of
"ischild".
@
text
@d8 1
d15 3
@

