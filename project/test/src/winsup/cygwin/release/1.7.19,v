head	1.13;
access;
symbols
	cygwin-1_7_35-release:1.13
	cygwin-1_7_34-release:1.13
	cygwin-1_7_33-release:1.13
	cygwin-1_7_32-release:1.13
	cygwin-1_7_31-release:1.13
	cygwin-1_7_30-release:1.13
	cygwin-1_7_29-release:1.13
	cygwin-1_7_29-release-branchpoint:1.13.0.2
	cygwin-pre-user-db:1.13
	cygwin-1_7_28-release:1.13
	cygwin-1_7_27-release:1.13
	cygwin-1_7_26-release:1.13
	cygwin-1_7_25-release:1.13
	cygwin-1_7_24-release:1.13
	cygwin-1_7_23-release:1.13
	cygwin-1_7_22-release:1.13
	cygwin-1_7_21-release:1.13
	cygwin-1_7_20-release:1.13
	cygwin-1_7_19-release:1.13;
locks; strict;
comment	@# @;


1.13
date	2013.06.05.07.21.56;	author corinna;	state Exp;
branches;
next	1.12;

1.12
date	2013.06.04.10.24.43;	author corinna;	state Exp;
branches;
next	1.11;

1.11
date	2013.06.03.10.40.41;	author corinna;	state Exp;
branches;
next	1.10;

1.10
date	2013.06.02.10.22.14;	author corinna;	state Exp;
branches;
next	1.9;

1.9
date	2013.05.31.08.41.39;	author corinna;	state Exp;
branches;
next	1.8;

1.8
date	2013.05.28.15.07.01;	author corinna;	state Exp;
branches;
next	1.7;

1.7
date	2013.05.27.19.41.54;	author corinna;	state Exp;
branches;
next	1.6;

1.6
date	2013.05.25.09.00.43;	author corinna;	state Exp;
branches;
next	1.5;

1.5
date	2013.05.23.20.47.45;	author corinna;	state Exp;
branches;
next	1.4;

1.4
date	2013.05.21.19.04.49;	author corinna;	state Exp;
branches;
next	1.3;

1.3
date	2013.05.14.09.07.30;	author corinna;	state Exp;
branches;
next	1.2;

1.2
date	2013.04.26.18.20.17;	author corinna;	state Exp;
branches;
next	1.1;

1.1
date	2013.04.23.14.58.20;	author corinna;	state Exp;
branches;
next	;


desc
@@


1.13
log
@*** empty log message ***
@
text
@What's new:
-----------

- Drop support for Windows 2000 and Windows XP pre-SP3.

- Add support for building a 64 bit version of Cygwin on x86_64 natively.

- Add support for creating native symlinks (CYGWIN=winsymlinks:native or
  CYGWIN=winsymlinks:nativestrict).

- Add support for the AFS filesystem.

- Preliminary support for mandatory locking via fcntl/flock/lockf, using
  Windows locking semantics.  New F_LCK_MANDATORY fcntl command.

- New APIs: __b64_ntop, __b64_pton, arc4random, arc4random_addrandom,
  arc4random_buf, arc4random_stir, arc4random_uniform.

Bug fixes:
----------

- getgrouplist now always creates a group list, even if it's empty.
  Fixes: http://cygwin.com/ml/cygwin/2013-05/msg00157.html

- In fork, call CreateProcessW with the same command line as the parent
  process.  This seems to make sure the stack is created in the same
  memory location as in the parent.
  Fixes: http://cygwin.com/ml/cygwin/2013-05/msg00340.html

- Fix a build problem resulting in Cygwin functions picking up the wrong
  new/delete.
  Fixes: http://cygwin.com/ml/cygwin/2013-05/msg00331.html

- Fix an incorrect condition which breaks fork after all dlopen'ed DLLs
  have already been dlclose'd.
  Fixes: http://cygwin.com/ml/cygwin/2013-05/msg00376.html

- Fix buggy usage of NtReadFile when reading from device under /proc/sys.
  Fixes: http://cygwin.com/ml/cygwin/2013-05/msg00392.html

- Fix an include in <cygwin/if.h> to avoid circular dependency.
  Fixes: http://cygwin.com/ml/cygwin/2013-05/msg00451.html

- Fix a hang on exit when calling pthread_join in global desctructor.
  Fixes: http://cygwin.com/ml/cygwin/2013-06/msg00017.html
@


1.12
log
@	* fhandler.cc (fhandler_base::lock): Move to flock.cc.
	(fhandler_base::fixup_after_exec): Reset mandatory_locking.
	* fhandler.h (class fhandler_base): Add mandatory_locking status flag.
	Add mandatory_locking accessor methods.  Accommodate change throughout.
	(fhandler_base::mand_lock): Declare.
	(class fhandler_disk_file): Drop in favor of new status flag.
	* (fhandler_disk_file::fcntl): Call need_fork_fixup if mandatory_locking
	flag gets set.
	* flock.cc (fhandler_base::lock): Define here.
	(flock): Handle mandatory_locking.
	(lockf): Ditto.
	(fhandler_base::mand_lock): Define.
@
text
@d13 2
a14 2
- Support for mandatory locking via fcntl/flock/lockf, using Windows locking
  semantics.  New F_LCK_MANDATORY fcntl command.
@


1.11
log
@*** empty log message ***
@
text
@d13 2
a14 2
- Preliminary support for mandatory locking via fcntl, using Windows
  locking semantics.  New F_LCK_MANDATORY fcntl command.
@


1.10
log
@	* autoload.cc (CancelSynchronousIo): Define.
	* fcntl.cc (fcntl64): Drop handling of locking commands.
	* fhandler.h (class fhandler_disk_file): Add mandatory_locking.
	(fhandler_disk_file::fcntl): Declare.
	(fhandler_disk_file::mand_lock): Declare.
	* fhandler_disk_file.cc (fhandler_disk_file::fhandler_disk_file):
	Initialize mandatory_locking.
	(fhandler_disk_file::fcntl): New method.  Handle F_LCK_MANDATORY and
	locking commands.
	(fhandler_disk_file::dup): Duplicate mandatory_locking.  Fix a bug
	when duplicating prw_handle failed.
	(fhandler_disk_file::fixup_after_fork): Reset mandatory_locking.
	* flock.cc (fhandler_disk_file::lock): Add comment.
	(struct lock_parms): New struct to pass parameters to blocking_lock_thr
	thread function.
	(blocking_lock_thr): New thread function.
	(fhandler_disk_file::mand_lock): New methof implementing mandatory
	locking with Windows semantics.
	* ntdll.h (NtLockFile): Declare.
	(NtUnlockFile): Declare.
	* include/fcntl.h: Fix a comment.
	(F_LCK_MANDATORY): Define.  Add lengthy comment to explain.
@
text
@d43 3
@


1.9
log
@*** empty log message ***
@
text
@d13 3
@


1.8
log
@	* fhandler_procsys.cc (fhandler_procsys::read): Just call
	fhandler_base::raw_read from here.  Drop comment.
	(fhandler_procsys::write): Drop comment.
@
text
@d37 3
@


1.7
log
@*** empty log message ***
@
text
@d34 3
@


1.6
log
@*** empty log message ***
@
text
@d30 4
@


1.5
log
@	* fork.cc (frok::parent): Call CreateProcessW with command line set
	to the parent command line.  Change comment to explain why.
@
text
@d8 2
a9 1
- Add support for creating native symlinks (CYGWIN=winsymlinks:native)
d27 3
@


1.4
log
@	* Makefile.in (DLL_OFILES): Add arc4random.o.
	* common.din: Export arc4random, arc4random_addrandom, arc4random_buf,
	arc4random_stir and arc4random_uniform.
	* mktemp.cc (arc4random): Remove static replacement function.
	* posix.sgml (std-bsd): Add arc4random functions.
	* include/cygwin/stdlib.h: Declare arc4random functions.
	* include/cygwin/version.h (CYGWIN_VERSION_API_MINOR): Bump.
	* libc/arc4random.cc: New file implementing arc4random functions taken
	from FreeBSD.
@
text
@d18 8
a25 1
- getgrouplist
@


1.3
log
@	* grp.cc (get_groups): Convert to void function.
	(initgroups32): Accommodate the aforementioned change.
	(getgrouplist): Ditto.
@
text
@d12 3
@


1.2
log
@	* fcntl.cc (fcntl): Define as export alias for fcntl64 on x86_64.
@
text
@d15 1
@


1.1
log
@*** empty log message ***
@
text
@d8 4
@

