head	1.5;
access;
symbols
	cygwin-1_7_20-release:1.4
	cygwin-1_7_19-release:1.4
	cygwin-64bit-postmerge:1.4
	cygwin-64bit-premerge-branch:1.4.0.4
	cygwin-64bit-premerge:1.4
	cygwin-1_7_18-release:1.4
	post-ptmalloc3:1.4
	pre-ptmalloc3:1.4
	cygwin-1_7_17-release:1.4
	cygwin-64bit-branch:1.4.0.2
	cygwin-1_7_16-release:1.4
	cygwin-1_7_15-release:1.4
	cygwin-1_7_14_2-release:1.4
	cygwin-1_7_14-release:1.4
	cygwin-1_7_12-release:1.4
	cygwin-1_7_11-release:1.4
	cygwin-1_7_10-release:1.4
	signal-rewrite:1.3.0.4
	pre-notty:1.3
	cygwin-1_7_9-release:1.3
	cv-post-1_7_9:1.3.0.2
	cygwin-1_7_8-release:1.3
	cygwin-1_7_7-release:1.2
	cygwin-1_7_5-release:1.2
	cygwin-1_7_4-release:1.2
	cygwin-1_7_3-release:1.2
	cygwin-1_7_2-release:1.2
	fifo_doover3:1.2.0.4
	cygwin-1_7_1-release:1.2
	prefifo:1.2
	cv-branch-2:1.2.0.2
	pre-ripout-set_console_state_for_spawn:1.1.1.1
	EOL_registry_mounts:1.1.1.1
	preoverlapped:1.1.1.1
	drop_9x_support_start:1.1.1.1
	cr-0x5f1:1.1.1.1.0.26
	cv-branch:1.1.1.1.0.24
	pre-ptymaster-archetype:1.1.1.1
	cr-0x3b58:1.1.1.1.0.22
	cr-0x5ef:1.1.1.1.0.20
	after-mmap-privanon-noreserve:1.1.1.1
	after-mmap-revamp:1.1.1.1
	before-mmap-revamp:1.1.1.1
	cgf-more-exit-sync:1.1.1.1
	post_wait_sig_exit:1.1.1.1
	pre_wait_sig_exit:1.1.1.1
	reparent-point:1.1.1.1
	noreparent:1.1.1.1.0.18
	cr-0x5e6:1.1.1.1.0.16
	cr-0x9e:1.1.1.1.0.14
	cr-0x9d:1.1.1.1.0.12
	cgf-deleteme:1.1.1.1.0.8
	pre-sigrewrite:1.1.1.1
	corinna-01:1.1.1.1
	cr-0x9c:1.1.1.1.0.6
	cr-0x9b:1.1.1.1.0.4
	cr-0x99:1.1.1.1
	Z-emcb-cygwin_daemon:1.1.1.1.0.2
	w32api-2_2:1.1.1.1
	mingw-runtime-2_4:1.1.1.1
	pre-cgf-merge:1.1.1.1
	cgf-dev-branch:1.1.1.1.0.62
	predaemon:1.1.1.1
	cygwin_daemon_merge_HEAD:1.1.1.1
	pregp02r1:1.1.1.1.0.40
	cygnus_cvs_20020108_pre:1.1.1.1
	Z-cygwin_daemon_merge-new_HEAD:1.1.1.1
	Z-cygwin_daemon_merge_HEAD:1.1.1.1
	cygwin_daemon:1.1.1.1.0.10;
locks; strict;
comment	@ * @;
expand	@o@;


1.5
date	2013.06.18.09.45.37;	author corinna;	state dead;
branches;
next	1.4;

1.4
date	2011.12.17.23.39.47;	author cgf;	state Exp;
branches;
next	1.3;

1.3
date	2011.02.14.09.42.19;	author corinna;	state Exp;
branches;
next	1.2;

1.2
date	2008.08.05.19.20.58;	author briand;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.17.19.38.31;	author cgf;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.17.19.38.31;	author cgf;	state Exp;
branches;
next	;


desc
@@


1.5
log
@	* Makefile.in (VPATH): Drop CONFIG_DIR.
	(EXTRA_DLL_OFILES): Remove.
	(DLL_OFILES): Remove EXTRA_DLL_OFILES.
	(ASFLAGS): Define as -D_WIN64 on x86_64.
	(GMON_OFILES): Add mcountFunc.o.
	($(srcdir)/$(TLSOFFSETS_H)): Use target_cpu rather than CONFIG_DIR.
	* configure.ac (CONFIG_DIR): Remove definition.
	* configure: Regenerate.
	* gcrt0.c: Use latest version from Mingw-w64 project.
	* gmon.c: Ditto.
	* gmon.h: Ditto.
	* mcount.c: Ditto.
	* mcountFunc.S: Ditto, new file.
	* profil.c: Ditto.
	* profil.h: Ditto.
	* config: Remove entire directory.
@
text
@/*	$NetBSD: profile.h,v 1.6 1995/03/28 18:17:08 jtc Exp $	*/

/*
 * Copyright (c) 1992, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)profile.h	8.1 (Berkeley) 6/11/93
 */

/*
 * This file is taken from Cygwin distribution. Please keep it in sync.
 * The differences should be within __MINGW32__ guard.
 */
/* If compiler doesn't inline, at least avoid passing args on the stack. */
#define _MCOUNT_CALL __attribute__ ((regparm (2)))
#define _MCOUNT_DECL static __inline__  void _MCOUNT_CALL _mcount

/* FIXME: This works, but it would be cleaner to convert mcount into an
   assembler stub that calls an extern  _mcount.
   Older versions of GCC (pre-4.1) will still fail with regparm since the
   compiler used %edx to store an unneeded counter variable.  */

#define	MCOUNT \
void									\
mcount()								\
{									\
	u_long selfpc, frompcindex;					\
	/*								\
	 * Save registers, since this may be called from		\
	 * the prologue of a regparm function.				\
	 */								\
	__asm __volatile__ ("pushl %eax\n\t"				\
			    "pushl %ecx\n\t"				\
		 	    "pushl %edx");				\
	/*								\
	 * find the return address for mcount,				\
	 * and the return address for mcount's caller.			\
	 *								\
	 * selfpc = pc pushed by mcount call				\
	 */								\
	/* __asm  ("movl 4(%%ebp),%0" : "=r" (selfpc));	*/		\
	selfpc = (u_long) __builtin_return_address (0);			\
	/*								\
	 * frompcindex = pc pushed by call into self.			\
	 */								\
	/*  __asm ("movl (%%ebp),%0;movl 4(%0),%0" : "=r" (frompcindex)); */  \
	frompcindex = (u_long) __builtin_return_address (1);		\
	_mcount(frompcindex, selfpc);					\
	/*								\
	 * Restore registers.						\
	 */								\
	__asm __volatile__ ("popl %edx\n\t"				\
			    "popl %ecx\n\t"				\
			    "popl %eax");				\
}
@


1.4
log
@Clean up whitespace.
@
text
@@


1.3
log
@	* config/i386/profile.h: Sync with Mingw.
@
text
@d47 1
a47 1
   assembler stub that calls an extern  _mcount. 
@


1.2
log
@	* config/i386/profile.h (mcount): Mark asms volatile.
@
text
@d38 12
a49 1
#define	_MCOUNT_DECL static inline void _mcount
d55 8
a62 1
	int selfpc, frompcindex;					\
d69 2
a70 1
	__asm __volatile ("movl 4(%%ebp),%0" : "=r" (selfpc));		\
d74 2
a75 1
	__asm __volatile ("movl (%%ebp),%0;movl 4(%0),%0" : "=r" (frompcindex));\
d77 6
a83 1

@


1.1
log
@Initial revision
@
text
@d51 1
a51 1
	__asm("movl 4(%%ebp),%0" : "=r" (selfpc));			\
d55 1
a55 1
	__asm("movl (%%ebp),%0;movl 4(%0),%0" : "=r" (frompcindex));	\
@


1.1.1.1
log
@import winsup-2000-02-17 snapshot
@
text
@@
